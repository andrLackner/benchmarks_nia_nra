unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x746 (+ (* 3 (* n!0 n!0)) (* (- 1) k!2) (* 3 n!0))))
 (let (($x1615 (<= ?x746 (- 1))))
 (let (($x554 (= ?x746 (- 1))))
 (let ((?x348 (+ c!3 k!2)))
 (let ((?x583 (+ k!2 m!1)))
 (let ((?x478 (+ 6 m!1)))
 (let ((?x426 (+ 1 n!0)))
 (let ((?x1613 (* ?x426 ?x478 ?x478 ?x478 ?x583 ?x583 ?x348 ?x348)))
 (let ((?x401 (* ?x426 ?x426 ?x583 ?x348 ?x348 ?x348)))
 (let ((?x203 (* ?x426 ?x478 ?x478 ?x478 ?x583 ?x348 ?x348)))
 (let ((?x669 (+ (* 3 (* ?x426 ?x426 ?x478 ?x583 ?x583 ?x583)) (* 72 (* k!2 k!2 m!1)) (* 3 (* ?x426 ?x426 ?x426 ?x426 ?x583 ?x348 ?x348 ?x348)) (* (- 1) (* k!2 k!2 k!2 k!2 m!1)) ?x203 (* (- 12) (* k!2 m!1 m!1 m!1)) (* 3 (* n!0 m!1 m!1 m!1 m!1)) ?x401 (* 72 (* k!2 m!1 m!1)) (* 54 (* k!2 n!0 m!1 m!1)) (* (- 6) (* k!2 k!2 k!2 k!2)) (* (- 4) (* k!2 m!1 m!1 m!1 m!1)) (* 24 (* m!1 m!1 m!1)) (* 18 (* n!0 m!1 m!1 m!1)) (* 3 (* ?x426 ?x426 ?x478 ?x478 ?x478 ?x583 ?x348 ?x348)) (* 54 (* k!2 k!2 n!0 m!1)) (* 3 (* k!2 k!2 k!2 n!0 m!1)) (* (- 1) (* ?x426 ?x426 ?x583 ?x583 ?x348 ?x348 ?x348)) (* (- 24) (* k!2 k!2 m!1 m!1)) (* 18 (* k!2 k!2 k!2 n!0)) (* 9 (* k!2 n!0 m!1 m!1 m!1)) (* 9 (* k!2 k!2 n!0 m!1 m!1)) (* (- 6) (* k!2 k!2 m!1 m!1 m!1)) (* (- 4) (* k!2 k!2 k!2 m!1 m!1)) (* 3 (* ?x426 ?x426 ?x426 ?x478 ?x478 ?x478 ?x583 ?x348 ?x348)) (* 3 (* ?x426 ?x426 ?x426 ?x583 ?x348 ?x348 ?x348)) (* 24 (* k!2 k!2 k!2)) (* (- 1) (* m!1 m!1 m!1 m!1 m!1)) (* (- 2) (* m!1 m!1 m!1 m!1)) (* (- 20) (* k!2 k!2 k!2 m!1)) (* (- 1) ?x1613))))
 (let (($x325 (= ?x669 0)))
 (let (($x668 (not $x325)))
 (let ((?x1486 (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0)))))
 (let (($x1482 (= ?x1486 1)))
 (let ((?x652 (* 9 (* c!3 n!0))))
 (let ((?x202 (* (- 9) n!0)))
 (let ((?x1069 (* 5 k!2)))
 (let ((?x378 (* (- 1) (* k!2 k!2))))
 (let ((?x581 (* 18 c!3)))
 (let ((?x150 (+ ?x581 ?x378 ?x1069 ?x202 ?x652)))
 (let (($x663 (= ?x150 4)))
 (let ((?x644 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x757 (= ?x644 (- 6))))
 (let (($x422 (and $x757 $x663 $x1482 $x554 $x668)))
 (let ((?x1602 (* m!1 m!1 m!1 m!1 m!1)))
 (let ((?x198 (* k!2 k!2 k!2 k!2 m!1)))
 (let ((?x801 (* ?x426 ?x426 ?x583 ?x583 ?x348 ?x348 ?x348)))
 (let ((?x816 (+ ?x801 (* (- 3) (* m!1 m!1 m!1 m!1 n!0)) (* (- 9) (* k!2 m!1 m!1 m!1 n!0)) (* (- 9) (* k!2 k!2 m!1 m!1 n!0)) (* (- 3) (* ?x426 ?x426 ?x478 ?x478 ?x478 ?x583 ?x348 ?x348)) (* (- 1) ?x401) (* (- 3) (* ?x426 ?x426 ?x426 ?x583 ?x348 ?x348 ?x348)) (* (- 3) (* ?x426 ?x426 ?x478 ?x583 ?x583 ?x583)) (* (- 3) (* ?x426 ?x426 ?x426 ?x426 ?x583 ?x348 ?x348 ?x348)) (* (- 3) (* ?x426 ?x426 ?x426 ?x478 ?x478 ?x478 ?x583 ?x348 ?x348)) (* (- 1) ?x203) (* (- 3) (* k!2 k!2 k!2 m!1 n!0)) (* (- 18) (* m!1 m!1 m!1 n!0)) (* (- 54) (* k!2 m!1 m!1 n!0)) (* (- 54) (* k!2 k!2 m!1 n!0)) ?x1613 (* (- 18) (* k!2 k!2 k!2 n!0)) (* 2 (* m!1 m!1 m!1 m!1)) (* 12 (* k!2 m!1 m!1 m!1)) (* 24 (* k!2 k!2 m!1 m!1)) (* 20 (* k!2 k!2 k!2 m!1)) (* (- 24) (* m!1 m!1 m!1)) (* (- 72) (* k!2 m!1 m!1)) (* (- 72) (* k!2 k!2 m!1)) (* (- 24) (* k!2 k!2 k!2)) ?x198 (* 4 (* k!2 k!2 k!2 m!1 m!1)) (* 6 (* k!2 k!2 m!1 m!1 m!1)) ?x1602 (* 4 (* k!2 m!1 m!1 m!1 m!1)) (* 6 (* k!2 k!2 k!2 k!2)))))
 (let (($x123 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x581 ?x1069 ?x202 ?x378 ?x652) 4) $x1482 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x816 0)))))
 (let (($x1017 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1175 (* k k k k)))
 (let ((?x693 (* 6 ?x1175)))
 (let ((?x1170 (* k m m m m)))
 (let ((?x643 (* 4 ?x1170)))
 (let ((?x1169 (* m m m m m)))
 (let ((?x1168 (* k k m m m)))
 (let ((?x511 (* 6 ?x1168)))
 (let ((?x1164 (* k k k m m)))
 (let ((?x400 (* 4 ?x1164)))
 (let ((?x1156 (* k k k k m)))
 (let ((?x872 (* k k k)))
 (let ((?x1119 (* (- 24) ?x872)))
 (let ((?x829 (* m m m)))
 (let ((?x316 (* (- 24) ?x829)))
 (let ((?x824 (* k k k m)))
 (let ((?x903 (* 20 ?x824)))
 (let ((?x796 (* k k m m)))
 (let ((?x901 (* 24 ?x796)))
 (let ((?x785 (* k m m m)))
 (let ((?x900 (* 12 ?x785)))
 (let ((?x781 (* m m m m)))
 (let ((?x879 (* 2 ?x781)))
 (let ((?x728 (* k k k n)))
 (let ((?x878 (* (- 18) ?x728)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x702 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x700 (* k k m n)))
 (let ((?x877 (* (- 54) ?x700)))
 (let ((?x689 (* k m m n)))
 (let ((?x590 (* (- 54) ?x689)))
 (let ((?x685 (* m m m n)))
 (let ((?x875 (* (- 18) ?x685)))
 (let ((?x680 (* k k k m n)))
 (let ((?x593 (* (- 3) ?x680)))
 (let ((?x635 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x670 (* (- 1) ?x635)))
 (let ((?x633 (* ?x317 ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x692 (* (- 3) ?x633)))
 (let ((?x561 (* ?x317 ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x558 (* (- 3) ?x561)))
 (let ((?x551 (* ?x317 ?x317 ?x315 ?x70 ?x70 ?x70)))
 (let ((?x647 (* (- 3) ?x551)))
 (let ((?x526 (* ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x517 (* (- 3) ?x526)))
 (let ((?x432 (* ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x717 (* (- 1) ?x432)))
 (let ((?x408 (* ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x411 (* (- 3) ?x408)))
 (let ((?x352 (* k k m m n)))
 (let ((?x870 (* (- 9) ?x352)))
 (let ((?x337 (* k m m m n)))
 (let ((?x871 (* (- 9) ?x337)))
 (let ((?x333 (* m m m m n)))
 (let ((?x868 (* (- 3) ?x333)))
 (let ((?x328 (* ?x317 ?x317 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x864 (+ ?x328 ?x868 ?x871 ?x870 ?x411 ?x717 ?x517 ?x647 ?x558 ?x692 ?x670 ?x593 ?x875 ?x590 ?x877 ?x702 ?x878 ?x879 ?x900 ?x901 ?x903 ?x316 (* (- 72) (* k m m)) (* (- 72) (* k k m)) ?x1119 ?x1156 ?x400 ?x511 ?x1169 ?x643 ?x693)))
 (let (($x307 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x269 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x217 (= (+ ?x40 ?x44 ?x219 ?x220 (* 9 (* c n))) 4)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 $x217 $x269 $x307 (not (= ?x864 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x549 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1175 (* k k k k)))
 (let ((?x693 (* 6 ?x1175)))
 (let ((?x1170 (* k m m m m)))
 (let ((?x643 (* 4 ?x1170)))
 (let ((?x1169 (* m m m m m)))
 (let ((?x1168 (* k k m m m)))
 (let ((?x511 (* 6 ?x1168)))
 (let ((?x1164 (* k k k m m)))
 (let ((?x400 (* 4 ?x1164)))
 (let ((?x1156 (* k k k k m)))
 (let ((?x872 (* k k k)))
 (let ((?x1119 (* (- 24) ?x872)))
 (let ((?x829 (* m m m)))
 (let ((?x316 (* (- 24) ?x829)))
 (let ((?x824 (* k k k m)))
 (let ((?x903 (* 20 ?x824)))
 (let ((?x796 (* k k m m)))
 (let ((?x901 (* 24 ?x796)))
 (let ((?x785 (* k m m m)))
 (let ((?x900 (* 12 ?x785)))
 (let ((?x781 (* m m m m)))
 (let ((?x879 (* 2 ?x781)))
 (let ((?x728 (* k k k n)))
 (let ((?x878 (* (- 18) ?x728)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x702 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x700 (* k k m n)))
 (let ((?x877 (* (- 54) ?x700)))
 (let ((?x689 (* k m m n)))
 (let ((?x590 (* (- 54) ?x689)))
 (let ((?x685 (* m m m n)))
 (let ((?x875 (* (- 18) ?x685)))
 (let ((?x680 (* k k k m n)))
 (let ((?x593 (* (- 3) ?x680)))
 (let ((?x635 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x670 (* (- 1) ?x635)))
 (let ((?x633 (* ?x317 ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x692 (* (- 3) ?x633)))
 (let ((?x561 (* ?x317 ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x558 (* (- 3) ?x561)))
 (let ((?x551 (* ?x317 ?x317 ?x315 ?x70 ?x70 ?x70)))
 (let ((?x647 (* (- 3) ?x551)))
 (let ((?x526 (* ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x517 (* (- 3) ?x526)))
 (let ((?x432 (* ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x717 (* (- 1) ?x432)))
 (let ((?x408 (* ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x411 (* (- 3) ?x408)))
 (let ((?x352 (* k k m m n)))
 (let ((?x870 (* (- 9) ?x352)))
 (let ((?x337 (* k m m m n)))
 (let ((?x871 (* (- 9) ?x337)))
 (let ((?x333 (* m m m m n)))
 (let ((?x868 (* (- 3) ?x333)))
 (let ((?x328 (* ?x317 ?x317 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1116 (+ ?x328 ?x868 ?x871 (* (- 6) (* m m k)) (* (- 6) (* m k m)) ?x870 (* (- 6) (* m k k)) (* (- 6) (* k m k)) ?x411 ?x717 ?x517 ?x647 ?x558 ?x692 ?x670 ?x593 ?x875 ?x590 ?x877 ?x702 ?x878 ?x879 ?x900 ?x901 ?x903 ?x316 (* (- 60) (* k m m)) (* (- 60) (* k k m)) ?x1119 ?x1156 ?x400 ?x511 ?x1169 ?x643 ?x693)))
 (let (($x307 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x269 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x217 (= (+ ?x40 ?x44 ?x219 ?x220 (* 9 (* c n))) 4)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 $x217 $x269 $x307 (not (= ?x1116 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1050 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1175 (* k k k k)))
 (let ((?x693 (* 6 ?x1175)))
 (let ((?x1170 (* k m m m m)))
 (let ((?x643 (* 4 ?x1170)))
 (let ((?x1169 (* m m m m m)))
 (let ((?x1168 (* k k m m m)))
 (let ((?x511 (* 6 ?x1168)))
 (let ((?x1164 (* k k k m m)))
 (let ((?x400 (* 4 ?x1164)))
 (let ((?x1156 (* k k k k m)))
 (let ((?x872 (* k k k)))
 (let ((?x1119 (* (- 24) ?x872)))
 (let ((?x829 (* m m m)))
 (let ((?x316 (* (- 24) ?x829)))
 (let ((?x824 (* k k k m)))
 (let ((?x903 (* 20 ?x824)))
 (let ((?x796 (* k k m m)))
 (let ((?x901 (* 24 ?x796)))
 (let ((?x785 (* k m m m)))
 (let ((?x900 (* 12 ?x785)))
 (let ((?x781 (* m m m m)))
 (let ((?x879 (* 2 ?x781)))
 (let ((?x728 (* k k k n)))
 (let ((?x878 (* (- 18) ?x728)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x702 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x700 (* k k m n)))
 (let ((?x877 (* (- 54) ?x700)))
 (let ((?x689 (* k m m n)))
 (let ((?x590 (* (- 54) ?x689)))
 (let ((?x685 (* m m m n)))
 (let ((?x875 (* (- 18) ?x685)))
 (let ((?x680 (* k k k m n)))
 (let ((?x593 (* (- 3) ?x680)))
 (let ((?x635 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x670 (* (- 1) ?x635)))
 (let ((?x633 (* ?x317 ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x692 (* (- 3) ?x633)))
 (let ((?x561 (* ?x317 ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x558 (* (- 3) ?x561)))
 (let ((?x551 (* ?x317 ?x317 ?x315 ?x70 ?x70 ?x70)))
 (let ((?x647 (* (- 3) ?x551)))
 (let ((?x526 (* ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x517 (* (- 3) ?x526)))
 (let ((?x432 (* ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x717 (* (- 1) ?x432)))
 (let ((?x408 (* ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x411 (* (- 3) ?x408)))
 (let ((?x352 (* k k m m n)))
 (let ((?x870 (* (- 9) ?x352)))
 (let ((?x337 (* k m m m n)))
 (let ((?x871 (* (- 9) ?x337)))
 (let ((?x333 (* m m m m n)))
 (let ((?x868 (* (- 3) ?x333)))
 (let ((?x328 (* ?x317 ?x317 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x864 (+ ?x328 ?x868 ?x871 ?x870 ?x411 ?x717 ?x517 ?x647 ?x558 ?x692 ?x670 ?x593 ?x875 ?x590 ?x877 ?x702 ?x878 ?x879 ?x900 ?x901 ?x903 ?x316 (* (- 72) (* k m m)) (* (- 72) (* k k m)) ?x1119 ?x1156 ?x400 ?x511 ?x1169 ?x643 ?x693)))
 (let (($x307 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x269 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x217 (= (+ ?x40 ?x44 ?x219 ?x220 (* 9 (* c n))) 4)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x385 (and $x133 $x217 $x269 $x307 (not (= ?x864 0)))))
 (let ((?x1116 (+ ?x328 ?x868 ?x871 (* (- 6) (* m m k)) (* (- 6) (* m k m)) ?x870 (* (- 6) (* m k k)) (* (- 6) (* k m k)) ?x411 ?x717 ?x517 ?x647 ?x558 ?x692 ?x670 ?x593 ?x875 ?x590 ?x877 ?x702 ?x878 ?x879 ?x900 ?x901 ?x903 ?x316 (* (- 60) (* k m m)) (* (- 60) (* k k m)) ?x1119 ?x1156 ?x400 ?x511 ?x1169 ?x643 ?x693)))
 (let (($x192 (and $x133 $x217 $x269 $x307 (not (= ?x1116 0)))))
 (rewrite (= $x192 $x385))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1597 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x754 (* ?x315 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x317 (+ 1 n)))
 (let ((?x432 (* ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x635 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x1592 (+ (* 3 (* ?x317 ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)) (* 3 (* ?x317 ?x317 ?x315 ?x70 ?x70 ?x70)) (* 3 (* ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)) (* (- 1) (* ?x317 ?x317 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 3 (* ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)) ?x635 (* 3 (* ?x317 ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)) (* (- 1) (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x70 ?x69 ?x69)) ?x432 (* (- 1) (* ?x315 ?x70 ?x70 ?x70 ?x70)) (* 3 (* ?x317 ?x315 ?x70 ?x70 ?x70)) ?x754)))
 (let (($x650 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1583 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x219 ?x220) 4) $x1583 $x650 (not (= ?x1592 0))))))))))))))))))) :qid k!34))
 ))
 (let ((?x567 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1175 (* k k k k)))
 (let ((?x693 (* 6 ?x1175)))
 (let ((?x1170 (* k m m m m)))
 (let ((?x643 (* 4 ?x1170)))
 (let ((?x1169 (* m m m m m)))
 (let ((?x1168 (* k k m m m)))
 (let ((?x511 (* 6 ?x1168)))
 (let ((?x1164 (* k k k m m)))
 (let ((?x400 (* 4 ?x1164)))
 (let ((?x1156 (* k k k k m)))
 (let ((?x872 (* k k k)))
 (let ((?x1119 (* (- 24) ?x872)))
 (let ((?x829 (* m m m)))
 (let ((?x316 (* (- 24) ?x829)))
 (let ((?x824 (* k k k m)))
 (let ((?x903 (* 20 ?x824)))
 (let ((?x796 (* k k m m)))
 (let ((?x901 (* 24 ?x796)))
 (let ((?x785 (* k m m m)))
 (let ((?x900 (* 12 ?x785)))
 (let ((?x781 (* m m m m)))
 (let ((?x879 (* 2 ?x781)))
 (let ((?x728 (* k k k n)))
 (let ((?x878 (* (- 18) ?x728)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x702 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x700 (* k k m n)))
 (let ((?x877 (* (- 54) ?x700)))
 (let ((?x689 (* k m m n)))
 (let ((?x590 (* (- 54) ?x689)))
 (let ((?x685 (* m m m n)))
 (let ((?x875 (* (- 18) ?x685)))
 (let ((?x680 (* k k k m n)))
 (let ((?x593 (* (- 3) ?x680)))
 (let ((?x635 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x670 (* (- 1) ?x635)))
 (let ((?x633 (* ?x317 ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x692 (* (- 3) ?x633)))
 (let ((?x561 (* ?x317 ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x558 (* (- 3) ?x561)))
 (let ((?x551 (* ?x317 ?x317 ?x315 ?x70 ?x70 ?x70)))
 (let ((?x647 (* (- 3) ?x551)))
 (let ((?x526 (* ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x517 (* (- 3) ?x526)))
 (let ((?x432 (* ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x717 (* (- 1) ?x432)))
 (let ((?x408 (* ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x411 (* (- 3) ?x408)))
 (let ((?x352 (* k k m m n)))
 (let ((?x870 (* (- 9) ?x352)))
 (let ((?x337 (* k m m m n)))
 (let ((?x871 (* (- 9) ?x337)))
 (let ((?x333 (* m m m m n)))
 (let ((?x868 (* (- 3) ?x333)))
 (let ((?x328 (* ?x317 ?x317 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1116 (+ ?x328 ?x868 ?x871 (* (- 6) (* m m k)) (* (- 6) (* m k m)) ?x870 (* (- 6) (* m k k)) (* (- 6) (* k m k)) ?x411 ?x717 ?x517 ?x647 ?x558 ?x692 ?x670 ?x593 ?x875 ?x590 ?x877 ?x702 ?x878 ?x879 ?x900 ?x901 ?x903 ?x316 (* (- 60) (* k m m)) (* (- 60) (* k k m)) ?x1119 ?x1156 ?x400 ?x511 ?x1169 ?x643 ?x693)))
 (let (($x307 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x269 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x217 (= (+ ?x40 ?x44 ?x219 ?x220 (* 9 (* c n))) 4)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x192 (and $x133 $x217 $x269 $x307 (not (= ?x1116 0)))))
 (let ((?x754 (* ?x315 ?x70 ?x70 ?x70)))
 (let ((?x1592 (+ (* 3 ?x561) (* 3 ?x551) (* 3 ?x526) (* (- 1) ?x328) (* 3 ?x408) ?x635 (* 3 ?x633) (* (- 1) ?x702) ?x432 (* (- 1) (* ?x315 ?x70 ?x70 ?x70 ?x70)) (* 3 (* ?x317 ?x315 ?x70 ?x70 ?x70)) ?x754)))
 (let (($x650 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1583 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1593 (and $x133 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x219 ?x220) 4) $x1583 $x650 (not (= ?x1592 0)))))
 (rewrite (= $x1593 $x192)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x565 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x754 (* ?x315 ?x70 ?x70 ?x70)))
 (let ((?x436 (* ?x315 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x317 (+ 1 n)))
 (let ((?x432 (* ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x717 (* (- 1) ?x432)))
 (let ((?x702 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x633 (* ?x317 ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x692 (* (- 3) ?x633)))
 (let ((?x635 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x670 (* (- 1) ?x635)))
 (let ((?x408 (* ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x411 (* (- 3) ?x408)))
 (let ((?x328 (* ?x317 ?x317 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x526 (* ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x517 (* (- 3) ?x526)))
 (let ((?x551 (* ?x317 ?x317 ?x315 ?x70 ?x70 ?x70)))
 (let ((?x647 (* (- 3) ?x551)))
 (let ((?x561 (* ?x317 ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x558 (* (- 3) ?x561)))
 (let ((?x759 (+ ?x558 ?x647 ?x517 ?x328 ?x411 ?x670 ?x692 ?x702 ?x717 ?x436 (* (- 3) (* ?x317 ?x315 ?x70 ?x70 ?x70)) (* (- 1) ?x754))))
 (let (($x650 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x530 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1526 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 (= ?x1526 (- 4)) $x530 $x650 (not (= ?x759 0)))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x343 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x754 (* ?x315 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x317 (+ 1 n)))
 (let ((?x432 (* ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x635 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x1592 (+ (* 3 (* ?x317 ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)) (* 3 (* ?x317 ?x317 ?x315 ?x70 ?x70 ?x70)) (* 3 (* ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)) (* (- 1) (* ?x317 ?x317 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 3 (* ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)) ?x635 (* 3 (* ?x317 ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)) (* (- 1) (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x70 ?x69 ?x69)) ?x432 (* (- 1) (* ?x315 ?x70 ?x70 ?x70 ?x70)) (* 3 (* ?x317 ?x315 ?x70 ?x70 ?x70)) ?x754)))
 (let (($x650 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1583 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x1593 (and $x133 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x219 ?x220) 4) $x1583 $x650 (not (= ?x1592 0)))))
 (let ((?x436 (* ?x315 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x717 (* (- 1) ?x432)))
 (let ((?x702 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x633 (* ?x317 ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x692 (* (- 3) ?x633)))
 (let ((?x670 (* (- 1) ?x635)))
 (let ((?x408 (* ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x411 (* (- 3) ?x408)))
 (let ((?x328 (* ?x317 ?x317 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x526 (* ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x517 (* (- 3) ?x526)))
 (let ((?x551 (* ?x317 ?x317 ?x315 ?x70 ?x70 ?x70)))
 (let ((?x647 (* (- 3) ?x551)))
 (let ((?x561 (* ?x317 ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x558 (* (- 3) ?x561)))
 (let ((?x759 (+ ?x558 ?x647 ?x517 ?x328 ?x411 ?x670 ?x692 ?x702 ?x717 ?x436 (* (- 3) (* ?x317 ?x315 ?x70 ?x70 ?x70)) (* (- 1) ?x754))))
 (let (($x530 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1526 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x552 (and $x133 (= ?x1526 (- 4)) $x530 $x650 (not (= ?x759 0)))))
 (rewrite (= $x552 $x1593))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x100 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x73 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x76 (- (* (- 3) ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71) (* 3 ?x70 ?x70 ?x70 ?x73 ?x71 ?x71))))
 (let ((?x79 (+ (- ?x76 (* 3 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x84 (- (- ?x79 (* 3 ?x69 ?x69 ?x70 ?x73 ?x73 ?x73 ?x71 ?x71)) (* ?x69 ?x69 ?x70 ?x73 ?x73 ?x73 ?x71))))
 (let ((?x87 (+ (- ?x84 (* 3 ?x69 ?x69 ?x70 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71)) (* ?x69 ?x69 ?x70 ?x70 ?x73 ?x73 ?x73 ?x71))))
 (let ((?x91 (+ (- ?x87 (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71)) (* ?x70 ?x70 ?x70 ?x70 ?x73))))
 (let ((?x95 (- (- ?x91 (* 3 ?x70 ?x70 ?x70 ?x73 ?x71)) (* ?x70 ?x70 ?x70 ?x73))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x95 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x651 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x754 (* ?x315 ?x70 ?x70 ?x70)))
 (let ((?x436 (* ?x315 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x317 (+ 1 n)))
 (let ((?x432 (* ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x717 (* (- 1) ?x432)))
 (let ((?x702 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x633 (* ?x317 ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x692 (* (- 3) ?x633)))
 (let ((?x635 (* ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x670 (* (- 1) ?x635)))
 (let ((?x408 (* ?x317 ?x317 ?x315 ?x315 ?x315 ?x70 ?x69 ?x69)))
 (let ((?x411 (* (- 3) ?x408)))
 (let ((?x328 (* ?x317 ?x317 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x526 (* ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x517 (* (- 3) ?x526)))
 (let ((?x551 (* ?x317 ?x317 ?x315 ?x70 ?x70 ?x70)))
 (let ((?x647 (* (- 3) ?x551)))
 (let ((?x561 (* ?x317 ?x317 ?x317 ?x317 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x558 (* (- 3) ?x561)))
 (let ((?x759 (+ ?x558 ?x647 ?x517 ?x328 ?x411 ?x670 ?x692 ?x702 ?x717 ?x436 (* (- 3) (* ?x317 ?x315 ?x70 ?x70 ?x70)) (* (- 1) ?x754))))
 (let (($x650 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x530 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1526 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x552 (and $x133 (= ?x1526 (- 4)) $x530 $x650 (not (= ?x759 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x73 (+ m 6)))
 (let ((?x76 (- (* (- 3) ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71) (* 3 ?x70 ?x70 ?x70 ?x73 ?x71 ?x71))))
 (let ((?x79 (+ (- ?x76 (* 3 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x84 (- (- ?x79 (* 3 ?x69 ?x69 ?x70 ?x73 ?x73 ?x73 ?x71 ?x71)) (* ?x69 ?x69 ?x70 ?x73 ?x73 ?x73 ?x71))))
 (let ((?x87 (+ (- ?x84 (* 3 ?x69 ?x69 ?x70 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71)) (* ?x69 ?x69 ?x70 ?x70 ?x73 ?x73 ?x73 ?x71))))
 (let ((?x91 (+ (- ?x87 (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71)) (* ?x70 ?x70 ?x70 ?x70 ?x73))))
 (let ((?x95 (- (- ?x91 (* 3 ?x70 ?x70 ?x70 ?x73 ?x71)) (* ?x70 ?x70 ?x70 ?x73))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x99 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x95 0))))))
 (rewrite (= $x99 $x552)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x101 (asserted $x100)))
 (let ((@x646 (mp (mp @x101 (quant-intro (proof-bind ?x651) (= $x100 $x565)) $x565) (rewrite (= $x565 $x565)) $x565)))
 (let ((@x741 (mp (mp @x646 (quant-intro (proof-bind ?x343) (= $x565 $x1597)) $x1597) (quant-intro (proof-bind ?x567) (= $x1597 $x549)) $x549)))
 (let ((@x934 (mp~ (mp @x741 (quant-intro (proof-bind ?x1050) (= $x549 $x1017)) $x1017) (sk (~ $x1017 $x123)) $x123)))
 (let ((@x662 (mp @x934 (rewrite (= $x123 $x422)) $x422)))
 (let ((@x1060 (and-elim @x662 $x554)))
 (let ((@x631 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x554) $x1615)) @x1060 $x1615)))
 (let (($x1611 (>= ?x746 (- 1))))
 (let ((@x645 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x554) $x1611)) @x1060 $x1611)))
 (let (($x342 (<= ?x644 (- 6))))
 (let ((@x483 (and-elim @x662 $x757)))
 (let ((@x427 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x757) $x342)) @x483 $x342)))
 (let (($x713 (>= ?x644 (- 6))))
 (let ((@x416 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x757) $x713)) @x483 $x713)))
 (let (($x1126 (<= ?x1486 1)))
 (let ((@x589 (and-elim @x662 $x1482)))
 (let ((@x585 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1482) $x1126)) @x589 $x1126)))
 (let (($x543 (>= ?x1486 1)))
 (let ((@x846 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1482) $x543)) @x589 $x543)))
 (let (($x1614 (<= ?x150 4)))
 (let ((@x124 (and-elim @x662 $x663)))
 (let ((@x539 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x663) $x1614)) @x124 $x1614)))
 (let (($x547 (>= ?x150 4)))
 (let ((@x681 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x663) $x547)) @x124 $x547)))
 (let (($x324 (not (>= ?x669 0))))
 (let (($x396 (<= ?x669 0)))
 (let ((@x433 ((_ th-lemma arith) (hypothesis (not $x396)) @x645 @x631 @x416 @x427 @x846 @x585 @x645 @x631 @x681 @x539 @x846 @x585 @x645 @x631 @x416 @x427 @x846 @x585 @x645 @x631 @x416 @x427 @x645 @x631 false)))
 (let ((@x629 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x325 (not $x396) $x324)) (and-elim @x662 $x668) (or (not $x396) $x324))))
 ((_ th-lemma arith) (unit-resolution @x629 (lemma @x433 $x396) $x324) @x645 @x631 @x416 @x427 @x846 @x585 @x645 @x631 @x681 @x539 @x846 @x585 @x645 @x631 @x416 @x427 @x846 @x585 @x645 @x631 @x416 @x427 @x645 @x631 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        18
 :arith-assert-upper        18
 :arith-branch-var          2
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           8
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             497
 :arith-nonlinear-bounds    23
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             5
 :arith-patches_succ        2
 :arith-pivots              12
 :arith-row-summations      26
 :arith-tableau-max-columns 66
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 8
 :del-clause                16
 :final-checks              9
 :max-memory                3.88
 :memory                    3.31
 :mk-bool-var               28
 :mk-clause                 16
 :num-allocs                1655730
 :num-checks                1
 :propagations              12
 :rlimit-count              14715
 :time                      0.01
 :total-time                0.02)
