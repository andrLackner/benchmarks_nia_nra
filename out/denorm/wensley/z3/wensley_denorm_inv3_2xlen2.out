unsat
((set-logic NRA)
(declare-fun d!6 () Real)
(declare-fun b!7 () Real)
(declare-fun a!8 () Real)
(declare-fun y!5 () Real)
(proof
(let ((?x1187 (* a00 y!5 y!5 y!5 a!8 a!8 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x1156 (* y00 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 d!6 d!6 d!6 d!6)))
 (let ((?x1136 (* y!5 y!5 y!5 y!5 a!8 a!8 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6)))
 (let ((?x839 (* y00 y!5 y!5 y!5 a!8 a!8 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6)))
 (let ((?x680 (* y00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x658 (* y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 d!6 d!6 d!6 d!6)))
 (let ((?x628 (* y!5 y!5 y!5 a!8 a!8 a!8 a!8 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x595 (* a00 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x576 (* y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x557 (* y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x370 (* y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x278 (* a00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x217 (+ (* (/ 1.0 2048.0) ?x278) (* (/ 1.0 1024.0) ?x370) (* (- (/ 1.0 256.0)) ?x557) (* (- (/ 1.0 2048.0)) ?x576) (* (- (/ 1.0 128.0)) ?x595) (* (/ 1.0 128.0) ?x628) (* (- (/ 1.0 64.0)) ?x658) (* (- (/ 1.0 1024.0)) ?x680) (* (/ 1.0 8.0) (* y00 y!5 b!7 b!7 d!6 d!6)) (* (/ 1.0 16.0) (* y!5 a!8 b!7 d!6 d!6 d!6)) (* (- (/ 1.0 128.0)) ?x839) (* (- (/ 1.0 16.0)) (* a00 y!5 b!7 d!6 d!6 d!6)) (* (- (/ 1.0 8.0)) (* y!5 y!5 b!7 b!7 d!6 d!6)) (* (/ 1.0 128.0) ?x1136) (* (/ 1.0 64.0) ?x1156) (* (/ 1.0 256.0) ?x1187))))
 (let (($x638 (>= ?x217 0.0)))
 (let (($x1179 (not $x638)))
 (let (($x629 (= 0.0 ?x217)))
 (let (($x599 (not $x629)))
 (let ((@x589 (symm (commutativity (= $x629 (= ?x217 0.0))) (= (= ?x217 0.0) $x629))))
 (let (($x347 (= ?x217 0.0)))
 (let (($x1070 (not $x347)))
 (let ((?x999 (* a00 d!6)))
 (let ((?x1062 (* (- (/ 1.0 2.0)) ?x999)))
 (let ((?x986 (* y00 b!7)))
 (let ((?x971 (* a!8 d!6)))
 (let ((?x1060 (* (/ 1.0 2.0) ?x971)))
 (let ((?x910 (* y!5 b!7)))
 (let ((?x939 (* (- 1.0) ?x910)))
 (let ((?x1148 (* y!5 y!5 y!5 a!8 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x1133 (* y!5 y!5 a!8 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6)))
 (let ((?x1115 (* y!5 y!5 y!5 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x1085 (* y!5 a!8 a!8 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x1043 (* a!8 a!8 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x932 (* y!5 y!5 y!5 a!8 a!8 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x868 (* a!8 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x772 (* b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x620 (* y!5 a!8 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x583 (* y!5 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x540 (* y!5 y!5 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6)))
 (let ((?x173 (* y!5 y!5 a!8 a!8 b!7 b!7 b!7 d!6 d!6 d!6 d!6)))
 (let ((?x1010 (+ (* (- (/ 3.0 128.0)) ?x173) (* (- (/ 3.0 128.0)) ?x540) (* (- (/ 3.0 256.0)) ?x583) (* (- (/ 3.0 128.0)) ?x620) (* (/ 1.0 4.0) (* y!5 b!7 d!6)) (* (- (/ 1.0 512.0)) ?x772) (* (/ 1.0 8.0) (* b!7 d!6 d!6)) (* (- (/ 1.0 256.0)) ?x868) (* (- (/ 1.0 64.0)) ?x932) (* (- (/ 1.0 512.0)) ?x1043) (* (- (/ 3.0 256.0)) ?x1085) (* (- (/ 1.0 64.0)) ?x1115) (* (- (/ 3.0 64.0)) ?x1133) (* (- (/ 1.0 32.0)) ?x1148))))
 (let ((?x851 (* (/ 1.0 2.0) d!6)))
 (let ((?x1183 (+ (* (/ 1.0 16.0) (* y!5 y!5 b!7 b!7 b!7 b!7 d!6 d!6 d!6)) (* (/ 3.0 16.0) (* y!5 a!8 a!8 b!7 b!7 d!6 d!6 d!6 d!6)) (* (/ 3.0 64.0) (* a!8 a!8 b!7 b!7 d!6 d!6 d!6 d!6 d!6)) (* (/ 3.0 64.0) (* a!8 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)) (* (/ 1.0 64.0) (* a!8 a!8 a!8 b!7 d!6 d!6 d!6 d!6 d!6)) (* (/ 1.0 16.0) (* y!5 y!5 a!8 a!8 a!8 b!7 d!6 d!6 d!6)) (* (/ 1.0 16.0) (* y!5 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6)) (* (/ 1.0 16.0) (* y!5 a!8 a!8 a!8 b!7 d!6 d!6 d!6 d!6)) (* (/ 1.0 64.0) (* b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)) (* (/ 3.0 16.0) (* y!5 y!5 a!8 a!8 b!7 b!7 d!6 d!6 d!6)) (* (/ 3.0 16.0) (* y!5 y!5 a!8 b!7 b!7 b!7 d!6 d!6 d!6)) (* (/ 3.0 16.0) (* y!5 a!8 b!7 b!7 b!7 d!6 d!6 d!6 d!6)) ?x851)))
 (let (($x1013 (= (* ?x1183 ?x1010 (+ ?x939 ?x1060 ?x986 ?x1062)) 0.0)))
 (let ((?x168 (+ ?x1062 ?x939 ?x1060 ?x986)))
 (let (($x1200 (= ?x168 0.0)))
 (let ((?x496 (+ (* 2.0 ?x910) (* (- 1.0) ?x971) (* (- 2.0) ?x986) ?x999)))
 (let (($x108 (= ?x496 0.0)))
 (let (($x1016 (not $x1013)))
 (let (($x1058 (or $x1070 $x1016)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x996 (= (+ ?x30 ?x94 (* (- 1.0) (* d00 a!8)) (* 2.0 (* b00 y!5))) 0.0)))
 (let (($x1127 (and $x996 (= (+ (* d00 b!7) (* (- 1.0) (* b00 d!6))) 0.0) $x108 $x1058)))
 (let ((?x891 (* b!7 y00)))
 (let ((?x948 (* d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)))
 (let ((?x914 (* d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)))
 (let ((?x953 (* d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)))
 (let ((?x897 (* y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)))
 (let ((?x892 (* y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)))
 (let ((?x919 (* y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)))
 (let ((?x867 (* y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)))
 (let ((?x882 (* y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)))
 (let ((?x1240 (* y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)))
 (let ((?x1174 (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)))
 (let ((?x929 (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)))
 (let ((?x979 (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)))
 (let ((?x925 (+ (* (/ 1.0 4.0) (* y!5 d!6 b!7)) (* (- (/ 1.0 64.0)) ?x979) (* (/ 1.0 8.0) (* d!6 d!6 b!7)) (* (- (/ 1.0 64.0)) ?x929) (* (- (/ 1.0 32.0)) ?x1174) (* (- (/ 3.0 128.0)) ?x1240) (* (- (/ 3.0 64.0)) ?x882) (* (- (/ 3.0 128.0)) ?x867) (* (- (/ 3.0 256.0)) ?x919) (* (- (/ 3.0 128.0)) ?x892) (* (- (/ 3.0 256.0)) ?x897) (* (- (/ 1.0 512.0)) ?x953) (* (- (/ 1.0 256.0)) ?x914) (* (- (/ 1.0 512.0)) ?x948))))
 (let ((?x991 (+ ?x851 (* (/ 1.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 a!8 a!8 a!8)) (* (/ 1.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 3.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 3.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8 a!8)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 3.0 16.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 3.0 16.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 d!6 d!6 b!7 a!8 a!8 a!8)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 3.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 3.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 a!8 a!8 a!8)))))
 (let ((?x934 (* ?x991 ?x925 (+ (* (/ 1.0 2.0) (* d!6 a!8)) ?x939 ?x891 (* (- (/ 1.0 2.0)) (* d!6 a00))))))
 (let ((?x840 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a00)))
 (let ((?x847 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 y00)))
 (let ((?x280 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1195 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x804 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a00)))
 (let ((?x1095 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 y00)))
 (let ((?x1175 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8)))
 (let ((?x944 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8)))
 (let ((?x1104 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8 a!8 a00)))
 (let ((?x241 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 y00)))
 (let ((?x947 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8)))
 (let ((?x989 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8 a!8 a!8)))
 (let ((?x908 (+ (* (/ 1.0 16.0) (* y!5 d!6 d!6 d!6 b!7 a!8)) (* (- (/ 1.0 8.0)) (* y!5 y!5 d!6 d!6 b!7 b!7)) (* (/ 1.0 8.0) (* y!5 d!6 d!6 b!7 b!7 y00)) (* (- (/ 1.0 16.0)) (* y!5 d!6 d!6 d!6 b!7 a00)) (* (/ 1.0 128.0) ?x989) (* (- (/ 1.0 64.0)) ?x947) (* (/ 1.0 64.0) ?x241) (* (- (/ 1.0 128.0)) ?x1104) (* (- (/ 1.0 256.0)) ?x944) (* (/ 1.0 128.0) ?x1175) (* (- (/ 1.0 128.0)) ?x1095) (* (/ 1.0 256.0) ?x804) (* (- (/ 1.0 2048.0)) ?x1195) (* (/ 1.0 1024.0) ?x280) (* (- (/ 1.0 1024.0)) ?x847) (* (/ 1.0 2048.0) ?x840))))
 (let ((?x895 (* d!6 a!8)))
 (let (($x1176 (= (+ ?x895 (* (- 2.0) ?x910) (* 2.0 ?x891) (* (- 1.0) (* d!6 a00))) 0.0)))
 (let (($x1189 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x94 (* 2.0 (* y!5 b00))) 0.0)))
 (let (($x956 (and $x1189 (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) $x1176 (or (not (= ?x908 0.0)) (not (= ?x934 0.0))))))
 (let (($x195 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x139 (* b y00)))
 (let ((?x112 (* y b)))
 (let ((?x176 (* (- 1.0) ?x112)))
 (let ((?x102 (* d a)))
 (let ((?x143 (* (/ 1.0 2.0) ?x102)))
 (let ((?x228 (+ ?x143 ?x176 ?x139 (* (- (/ 1.0 2.0)) (* d a00)))))
 (let ((?x1251 (* (- (/ 1.0 512.0)) (* d d d d d d b b b a a))))
 (let ((?x1248 (* (- (/ 1.0 256.0)) (* d d d d d d b b b b a))))
 (let ((?x1245 (* (- (/ 1.0 512.0)) (* d d d d d d b b b b b))))
 (let ((?x1241 (* (- (/ 3.0 256.0)) (* y d d d d d b b b a a))))
 (let ((?x1238 (* (- (/ 3.0 128.0)) (* y d d d d d b b b b a))))
 (let ((?x1235 (* (- (/ 3.0 256.0)) (* y d d d d d b b b b b))))
 (let ((?x1231 (* (- (/ 3.0 128.0)) (* y y d d d d b b b a a))))
 (let ((?x1228 (* (- (/ 3.0 64.0)) (* y y d d d d b b b b a))))
 (let ((?x1224 (* (- (/ 3.0 128.0)) (* y y d d d d b b b b b))))
 (let ((?x1220 (* (- (/ 1.0 32.0)) (* y y y d d d b b b b a))))
 (let ((?x1216 (* (- (/ 1.0 64.0)) (* y y y d d d b b b b b))))
 (let ((?x287 (* (- (/ 1.0 64.0)) (* y y y d d d b b b a a))))
 (let ((?x258 (* (/ 1.0 4.0) (* y d b))))
 (let ((?x1247 (+ ?x258 ?x287 (* (/ 1.0 8.0) (* d d b)) ?x1216 ?x1220 ?x1224 ?x1228 ?x1231 ?x1235 ?x1238 ?x1241 ?x1245 ?x1248 ?x1251)))
 (let ((?x248 (* (/ 1.0 16.0) (* y y d d d b a a a))))
 (let ((?x111 (* (/ 1.0 2.0) d)))
 (let ((?x784 (+ ?x111 ?x248 (* (/ 1.0 16.0) (* y y d d d b b b b)) (* (/ 3.0 16.0) (* y y d d d b b b a)) (* (/ 3.0 16.0) (* y y d d d b b a a)) (* (/ 1.0 16.0) (* y d d d d b b b b)) (* (/ 3.0 16.0) (* y d d d d b b b a)) (* (/ 3.0 16.0) (* y d d d d b b a a)) (* (/ 1.0 16.0) (* y d d d d b a a a)) (* (/ 1.0 64.0) (* d d d d d b b b b)) (* (/ 3.0 64.0) (* d d d d d b b b a)) (* (/ 3.0 64.0) (* d d d d d b b a a)) (* (/ 1.0 64.0) (* d d d d d b a a a)))))
 (let ((?x482 (* y y y y y d d d d d d d b b b b a a a a a a00)))
 (let ((?x471 (* y y y y y d d d d d d b b b b b a a a a a y00)))
 (let ((?x460 (* y y y y y y d d d d d d b b b b b a a a a a)))
 (let ((?x449 (* y y y y y d d d d d d d b b b b a a a a a a)))
 (let ((?x438 (* y y y d d d d d b b b a a a00)))
 (let ((?x427 (* y y y d d d d b b b b a a y00)))
 (let ((?x417 (* y y y y d d d d b b b b a a)))
 (let ((?x407 (* y y y d d d d d b b b a a a)))
 (let ((?x396 (* y y y d d d d d b b a a a a00)))
 (let ((?x385 (* y y y d d d d b b b a a a y00)))
 (let ((?x375 (* y y y y d d d d b b b a a a)))
 (let ((?x365 (* y y y d d d d d b b a a a a)))
 (let ((?x487 (+ (* (/ 1.0 16.0) (* y d d d b a)) (* (- (/ 1.0 8.0)) (* y y d d b b)) (* (/ 1.0 8.0) (* y d d b b y00)) (* (- (/ 1.0 16.0)) (* y d d d b a00)) (* (/ 1.0 128.0) ?x365) (* (- (/ 1.0 64.0)) ?x375) (* (/ 1.0 64.0) ?x385) (* (- (/ 1.0 128.0)) ?x396) (* (- (/ 1.0 256.0)) ?x407) (* (/ 1.0 128.0) ?x417) (* (- (/ 1.0 128.0)) ?x427) (* (/ 1.0 256.0) ?x438) (* (- (/ 1.0 2048.0)) ?x449) (* (/ 1.0 1024.0) ?x460) (* (- (/ 1.0 1024.0)) ?x471) (* (/ 1.0 2048.0) ?x482))))
 (let (($x119 (not (= ?x487 0.0))))
 (let (($x169 (= (+ ?x102 (* (- 2.0) ?x112) (* 2.0 ?x139) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x91 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x126 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x94 (* 2.0 (* y b00))) 0.0)))
 (and $x126 $x91 $x169 (or $x119 (not (= (* ?x784 ?x1247 ?x228) 0.0)))))))))))))))))))))))))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x1006 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x48 (* a00 d)))
 (let ((?x869 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x214 (* y00 b)))
 (let ((?x906 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x214 ?x869)))
 (let ((?x111 (* (/ 1.0 2.0) d)))
 (let ((?x1188 (+ y ?x111)))
 (let ((?x68 (+ a b)))
 (let ((?x988 (* (- (/ 1.0 64.0)) (* ?x68 ?x68 ?x1188 ?x1188 ?x1188 d d d b b b))))
 (let ((?x946 (+ ?x111 (* (/ 1.0 16.0) (* ?x68 ?x68 ?x68 ?x1188 ?x1188 d d d b)))))
 (let (($x952 (not (= (* ?x946 (+ (* (/ 1.0 4.0) (* ?x1188 d b)) ?x988) ?x906) 0.0))))
 (let ((?x287 (* (- (/ 1.0 64.0)) (* y y y d d d b b b a a))))
 (let ((?x258 (* (/ 1.0 4.0) (* y d b))))
 (let ((?x248 (* (/ 1.0 16.0) (* y y d d d b a a a))))
 (let ((?x941 (* (+ ?x111 ?x248) (+ ?x258 ?x287) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x214 ?x869))))
 (let ((?x112 (* y b)))
 (let ((?x134 (* (- 2.0) ?x112)))
 (let ((?x102 (* d a)))
 (let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let (($x413 (= (+ ?x94 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (and $x413 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) (= (+ ?x102 ?x134 (* 2.0 ?x214) (* (- 1.0) ?x48)) 0.0) (or (not (= ?x941 0.0)) $x952)))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x194 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x139 (* b y00)))
 (let ((?x112 (* y b)))
 (let ((?x176 (* (- 1.0) ?x112)))
 (let ((?x102 (* d a)))
 (let ((?x143 (* (/ 1.0 2.0) ?x102)))
 (let ((?x228 (+ ?x143 ?x176 ?x139 (* (- (/ 1.0 2.0)) (* d a00)))))
 (let ((?x1251 (* (- (/ 1.0 512.0)) (* d d d d d d b b b a a))))
 (let ((?x1248 (* (- (/ 1.0 256.0)) (* d d d d d d b b b b a))))
 (let ((?x1245 (* (- (/ 1.0 512.0)) (* d d d d d d b b b b b))))
 (let ((?x1241 (* (- (/ 3.0 256.0)) (* y d d d d d b b b a a))))
 (let ((?x1238 (* (- (/ 3.0 128.0)) (* y d d d d d b b b b a))))
 (let ((?x1235 (* (- (/ 3.0 256.0)) (* y d d d d d b b b b b))))
 (let ((?x1231 (* (- (/ 3.0 128.0)) (* y y d d d d b b b a a))))
 (let ((?x1228 (* (- (/ 3.0 64.0)) (* y y d d d d b b b b a))))
 (let ((?x1224 (* (- (/ 3.0 128.0)) (* y y d d d d b b b b b))))
 (let ((?x1220 (* (- (/ 1.0 32.0)) (* y y y d d d b b b b a))))
 (let ((?x1216 (* (- (/ 1.0 64.0)) (* y y y d d d b b b b b))))
 (let ((?x287 (* (- (/ 1.0 64.0)) (* y y y d d d b b b a a))))
 (let ((?x258 (* (/ 1.0 4.0) (* y d b))))
 (let ((?x1247 (+ ?x258 ?x287 (* (/ 1.0 8.0) (* d d b)) ?x1216 ?x1220 ?x1224 ?x1228 ?x1231 ?x1235 ?x1238 ?x1241 ?x1245 ?x1248 ?x1251)))
 (let ((?x248 (* (/ 1.0 16.0) (* y y d d d b a a a))))
 (let ((?x111 (* (/ 1.0 2.0) d)))
 (let ((?x784 (+ ?x111 ?x248 (* (/ 1.0 16.0) (* y y d d d b b b b)) (* (/ 3.0 16.0) (* y y d d d b b b a)) (* (/ 3.0 16.0) (* y y d d d b b a a)) (* (/ 1.0 16.0) (* y d d d d b b b b)) (* (/ 3.0 16.0) (* y d d d d b b b a)) (* (/ 3.0 16.0) (* y d d d d b b a a)) (* (/ 1.0 16.0) (* y d d d d b a a a)) (* (/ 1.0 64.0) (* d d d d d b b b b)) (* (/ 3.0 64.0) (* d d d d d b b b a)) (* (/ 3.0 64.0) (* d d d d d b b a a)) (* (/ 1.0 64.0) (* d d d d d b a a a)))))
 (let ((?x482 (* y y y y y d d d d d d d b b b b a a a a a a00)))
 (let ((?x471 (* y y y y y d d d d d d b b b b b a a a a a y00)))
 (let ((?x460 (* y y y y y y d d d d d d b b b b b a a a a a)))
 (let ((?x449 (* y y y y y d d d d d d d b b b b a a a a a a)))
 (let ((?x438 (* y y y d d d d d b b b a a a00)))
 (let ((?x427 (* y y y d d d d b b b b a a y00)))
 (let ((?x417 (* y y y y d d d d b b b b a a)))
 (let ((?x407 (* y y y d d d d d b b b a a a)))
 (let ((?x396 (* y y y d d d d d b b a a a a00)))
 (let ((?x385 (* y y y d d d d b b b a a a y00)))
 (let ((?x375 (* y y y y d d d d b b b a a a)))
 (let ((?x365 (* y y y d d d d d b b a a a a)))
 (let ((?x487 (+ (* (/ 1.0 16.0) (* y d d d b a)) (* (- (/ 1.0 8.0)) (* y y d d b b)) (* (/ 1.0 8.0) (* y d d b b y00)) (* (- (/ 1.0 16.0)) (* y d d d b a00)) (* (/ 1.0 128.0) ?x365) (* (- (/ 1.0 64.0)) ?x375) (* (/ 1.0 64.0) ?x385) (* (- (/ 1.0 128.0)) ?x396) (* (- (/ 1.0 256.0)) ?x407) (* (/ 1.0 128.0) ?x417) (* (- (/ 1.0 128.0)) ?x427) (* (/ 1.0 256.0) ?x438) (* (- (/ 1.0 2048.0)) ?x449) (* (/ 1.0 1024.0) ?x460) (* (- (/ 1.0 1024.0)) ?x471) (* (/ 1.0 2048.0) ?x482))))
 (let (($x119 (not (= ?x487 0.0))))
 (let (($x169 (= (+ ?x102 (* (- 2.0) ?x112) (* 2.0 ?x139) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x91 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x126 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x94 (* 2.0 (* y b00))) 0.0)))
 (let (($x272 (and $x126 $x91 $x169 (or $x119 (not (= (* ?x784 ?x1247 ?x228) 0.0))))))
 (let ((?x48 (* a00 d)))
 (let ((?x869 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x214 (* y00 b)))
 (let ((?x906 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y ?x111) b)) ?x214 ?x869)))
 (let ((?x1188 (+ y ?x111)))
 (let ((?x68 (+ a b)))
 (let ((?x988 (* (- (/ 1.0 64.0)) (* ?x68 ?x68 ?x1188 ?x1188 ?x1188 d d d b b b))))
 (let ((?x946 (+ ?x111 (* (/ 1.0 16.0) (* ?x68 ?x68 ?x68 ?x1188 ?x1188 d d d b)))))
 (let (($x952 (not (= (* ?x946 (+ (* (/ 1.0 4.0) (* ?x1188 d b)) ?x988) ?x906) 0.0))))
 (let (($x534 (not (= (* (+ ?x111 ?x248) (+ ?x258 ?x287) (+ ?x143 ?x176 ?x214 ?x869)) 0.0))))
 (let (($x413 (= (+ ?x94 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x949 (and $x413 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) (= (+ ?x102 (* (- 2.0) ?x112) (* 2.0 ?x214) (* (- 1.0) ?x48)) 0.0) (or $x534 $x952))))
 (rewrite (= $x949 $x272))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x85 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x51 (/ d 2.0)))
 (let ((?x70 (+ y ?x51)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x68 (+ a b)))
 (let ((?x79 (- (* ?x53 ?x51 ?x70) (* ?x68 ?x68 ?x53 ?x53 ?x53 ?x51 ?x51 ?x51 ?x70 ?x70 ?x70))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x74 (- (+ (- (* ?x68 ?x51) (* 2.0 ?x53 ?x70)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x80 (* ?x74 (+ ?x51 (* ?x68 ?x68 ?x68 ?x53 ?x51 ?x51 ?x51 ?x70 ?x70)) ?x79)))
 (let ((?x64 (- (* ?x53 ?x51 y) (* a a ?x53 ?x53 ?x53 ?x51 ?x51 ?x51 y y y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x65 (* ?x59 (+ ?x51 (* a a a ?x53 ?x51 ?x51 ?x51 y y)) ?x64)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let ((?x30 (* a00 d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x65 0.0)) (not (= ?x80 0.0)))))))))))))))))))) :qid k!33))
 ))
 (let ((?x1170 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x48 (* a00 d)))
 (let ((?x869 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x214 (* y00 b)))
 (let ((?x906 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x214 ?x869)))
 (let ((?x111 (* (/ 1.0 2.0) d)))
 (let ((?x1188 (+ y ?x111)))
 (let ((?x68 (+ a b)))
 (let ((?x988 (* (- (/ 1.0 64.0)) (* ?x68 ?x68 ?x1188 ?x1188 ?x1188 d d d b b b))))
 (let ((?x946 (+ ?x111 (* (/ 1.0 16.0) (* ?x68 ?x68 ?x68 ?x1188 ?x1188 d d d b)))))
 (let (($x952 (not (= (* ?x946 (+ (* (/ 1.0 4.0) (* ?x1188 d b)) ?x988) ?x906) 0.0))))
 (let ((?x287 (* (- (/ 1.0 64.0)) (* y y y d d d b b b a a))))
 (let ((?x258 (* (/ 1.0 4.0) (* y d b))))
 (let ((?x248 (* (/ 1.0 16.0) (* y y d d d b a a a))))
 (let ((?x941 (* (+ ?x111 ?x248) (+ ?x258 ?x287) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x214 ?x869))))
 (let ((?x112 (* y b)))
 (let ((?x134 (* (- 2.0) ?x112)))
 (let ((?x102 (* d a)))
 (let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let (($x413 (= (+ ?x94 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x949 (and $x413 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) (= (+ ?x102 ?x134 (* 2.0 ?x214) (* (- 1.0) ?x48)) 0.0) (or (not (= ?x941 0.0)) $x952))))
 (let ((?x51 (/ d 2.0)))
 (let ((?x70 (+ y ?x51)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x79 (- (* ?x53 ?x51 ?x70) (* ?x68 ?x68 ?x53 ?x53 ?x53 ?x51 ?x51 ?x51 ?x70 ?x70 ?x70))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x74 (- (+ (- (* ?x68 ?x51) (* 2.0 ?x53 ?x70)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x80 (* ?x74 (+ ?x51 (* ?x68 ?x68 ?x68 ?x53 ?x51 ?x51 ?x51 ?x70 ?x70)) ?x79)))
 (let ((?x64 (- (* ?x53 ?x51 y) (* a a ?x53 ?x53 ?x53 ?x51 ?x51 ?x51 y y y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x65 (* ?x59 (+ ?x51 (* a a a ?x53 ?x51 ?x51 ?x51 y y)) ?x64)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (let (($x84 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x65 0.0)) (not (= ?x80 0.0))))))
 (rewrite (= $x84 $x949))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x86 (asserted $x85)))
 (let ((@x1193 (mp (mp @x86 (quant-intro (proof-bind ?x1170) (= $x85 $x1006)) $x1006) (quant-intro (proof-bind ?x194) (= $x1006 $x195)) $x195)))
 (let ((@x1068 (mp (mp~ @x1193 (sk (~ $x195 $x956)) $x956) (rewrite (= $x956 $x1127)) $x1127)))
 (let ((@x997 (and-elim @x1068 $x108)))
 (let (($x625 (<= ?x496 0.0)))
 (let (($x1005 (= 0.0 ?x496)))
 (let ((@x1059 (mp @x997 (symm (commutativity (= $x1005 $x108)) (= $x108 $x1005)) $x1005)))
 (let ((@x529 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1005) $x625)) @x1059 $x625)))
 (let (($x502 (>= ?x496 0.0)))
 (let ((@x1063 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1005) $x502)) @x1059 $x502)))
 (let (($x110 (<= ?x168 0.0)))
 (let (($x412 (>= ?x168 0.0)))
 (let ((@x1090 ((_ th-lemma arith) (lemma ((_ th-lemma arith) @x529 (hypothesis (not $x412)) false) $x412) (lemma ((_ th-lemma arith) (hypothesis (not $x110)) @x1063 false) $x110) @x1063 @x529 (= ?x168 ?x496))))
 (let (($x763 (or (not $x1200) $x1013)))
 (let ((@x615 (unit-resolution ((_ th-lemma arith) $x763) (hypothesis $x1016) (hypothesis $x1200) false)))
 (let ((@x113 (unit-resolution (and-elim @x1068 $x1058) (unit-resolution (lemma @x615 $x763) (trans* @x1090 @x997 $x1200) $x1013) $x1070)))
 (let (($x632 (<= ?x217 0.0)))
 (let ((@x1054 (unit-resolution ((_ th-lemma arith) (or (not $x625) (not $x502) $x632)) @x529 @x1063 (hypothesis (not $x632)) false)))
 (let ((@x738 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x629 (not $x632) $x1179)) (lemma @x1054 $x632) (mp @x113 (monotonicity @x589 (= $x1070 $x599)) $x599) $x1179)))
 (unit-resolution ((_ th-lemma arith) (or (not $x625) (not $x502) $x638)) @x529 @x1063 @x738 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       22
 :arith-eq-adapter                15
 :arith-bound-propagations-cheap  10
 :arith-conflicts                 15
 :arith-diseq                     22
 :arith-fixed-eqs                 1
 :arith-grobner-calls             2
 :arith-grobner-conflicts         2
 :arith-horner-calls              2
 :arith-horner-cross-nested-forms 2
 :arith-lower                     16
 :arith-make-feasible             17
 :arith-max-columns               73
 :arith-max-rows                  8
 :arith-nla-explanations          6
 :arith-nla-lemmas                13
 :arith-propagations              10
 :arith-upper                     20
 :conflicts                       6
 :decisions                       24
 :del-clause                      18
 :final-checks                    14
 :max-memory                      2.78
 :memory                          1.21
 :mk-bool-var                     60
 :mk-clause                       58
 :num-allocs                      5385330180.00
 :num-checks                      1
 :propagations                    28
 :rlimit-count                    6543
 :time                            12.35
 :total-time                      12.35)
