unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun q!2 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x69 (* y00 q00)))
 (let ((?x1281 (+ r00 ?x69 (* (- 1) (* y00 q!2)) (* (- 1) r!1))))
 (let (($x358 (<= ?x1281 0)))
 (let (($x1110 (= ?x1281 0)))
 (let ((?x1500 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1220 (* y00 y00 y00 q00)))
 (let ((?x1061 (* y00 y00 r00)))
 (let ((?x412 (* y00 y00 y00 y00 r00)))
 (let ((?x1571 (+ (* 3 (* y00 y00 r00 q!2 q!2)) (* 3 (* y00 y00 r00 q!2)) (* (- 3) (* y00 y00 y00 y00 y00 q!2 q!2)) (* (- 1) (* y00 y00 r!1 r!1 r!1 q!2 q!2 q!2)) (* 3 (* y00 r!1 r!1 q!2)) (* 3 (* y00 r!1 r!1 q!2 q!2)) (* y00 r!1 r!1 q!2 q!2 q!2) (* y00 y00 r00 q!2 q!2 q!2) (* (- 1) (* y00 y00 y00 r!1 r!1 q!2 q!2 q!2)) (* (- 1) (* y00 y00 y00 q!2)) ?x412 (* (- 1) (* y00 y00 q00 r!1)) (* y00 r!1 r!1) (* (- 3) (* y00 y00 q00 r!1 q!2)) (* (- 3) (* y00 y00 q00 r!1 q!2 q!2)) (* (- 1) (* y00 y00 q00 r!1 q!2 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 r!1 q!2)) (* y00 y00 r!1 q!2 q!2 q!2 q!2) (* 3 (* y00 y00 y00 q00 q!2)) (* (- 1) (* y00 y00 y00 q!2 q!2 q!2 q!2)) (* (- 1) (* y00 y00 r!1 r!1 r!1)) (* 3 (* y00 y00 y00 q00 q!2 q!2)) (* 5 (* y00 y00 y00 y00 r!1 q!2 q!2 q!2)) (* (- 1) (* y00 y00 r!1)) (* 3 (* y00 y00 y00 y00 r!1 q!2 q!2)) (* 5 (* y00 y00 y00 r!1 r!1 q!2)) (* (- 3) (* y00 y00 y00 q!2 q!2)) (* y00 y00 y00 q00 q!2 q!2 q!2) (* y00 y00 y00 q00 r!1 r!1) (* 3 (* y00 y00 r00 r!1 r!1 q!2 q!2)) (* 3 (* y00 y00 y00 q00 r!1 r!1 q!2)) (* y00 y00 y00 q00 r!1 r!1 q!2 q!2 q!2) (* 3 (* y00 y00 y00 q00 r!1 r!1 q!2 q!2)) (* y00 y00 r00 r!1 r!1 q!2 q!2 q!2) ?x1061 (* (- 2) (* y00 y00 y00 y00 q00 r!1)) (* (- 6) (* y00 y00 y00 y00 q00 r!1 q!2)) (* (- 6) (* y00 y00 y00 y00 q00 r!1 q!2 q!2)) (* (- 2) (* y00 y00 y00 y00 q00 r!1 q!2 q!2 q!2)) (* 3 (* y00 y00 y00 y00 y00 q00 q!2)) (* 3 (* y00 y00 y00 y00 y00 q00 q!2 q!2)) ?x1220 (* 3 (* y00 y00 y00 r!1 r!1 q!2 q!2)) (* (- 1) (* y00 y00 y00 r!1 r!1 q!2 q!2 q!2 q!2)) (* 2 (* y00 y00 y00 y00 r!1 q!2 q!2 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 q!2 q!2 q!2 q!2)) (* (- 3) (* y00 y00 y00 y00 y00 q!2 q!2 q!2)) (* (- 1) (* y00 r00 r!1)) (* (- 2) (* y00 y00 r!1 q!2)) (* 2 (* y00 y00 r!1 q!2 q!2 q!2)) (* (- 3) (* y00 r00 r!1 q!2)) ?x1500 (* y00 y00 y00 y00 y00 q00 q!2 q!2 q!2) (* (- 3) (* y00 r00 r!1 q!2 q!2)) (* (- 1) (* y00 r00 r!1 q!2 q!2 q!2)) (* 3 (* y00 y00 y00 y00 r00 q!2)) (* y00 y00 y00 y00 r00 q!2 q!2 q!2) (* (- 3) (* y00 y00 r!1 r!1 r!1 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 q!2)) (* 2 (* y00 y00 y00 r!1 r!1)) (* (- 1) (* y00 y00 y00 y00 r!1)) (* 3 (* y00 y00 y00 y00 r00 q!2 q!2)) (* (- 2) (* y00 y00 y00 r00 r!1 q!2 q!2 q!2)) (* 3 (* y00 y00 r00 r!1 r!1 q!2)) (* y00 y00 r00 r!1 r!1) (* (- 3) (* y00 y00 y00 q!2 q!2 q!2)) (* (- 2) (* y00 y00 y00 r00 r!1)) (* (- 6) (* y00 y00 y00 r00 r!1 q!2)) (* (- 6) (* y00 y00 y00 r00 r!1 q!2 q!2)) (* (- 3) (* y00 y00 r!1 r!1 r!1 q!2 q!2)))))
 (let (($x1637 (= ?x1571 0)))
 (let (($x1301 (not $x1637)))
 (let ((?x1467 (+ y00 (* (- 1) y!0))))
 (let (($x1468 (= ?x1467 0)))
 (let (($x1638 (and $x1468 $x1110 $x1301)))
 (let ((?x1452 (+ (* r!1 r!1 y00) (* 3 (* q!2 r!1 r!1 y00)) (* 3 (* q!2 q!2 r!1 r!1 y00)) (* q!2 q!2 q!2 r!1 r!1 y00) (* (- 1) (* r!1 y00 y00)) (* (- 2) (* q!2 r!1 y00 y00)) (* 2 (* q!2 q!2 q!2 r!1 y00 y00)) (* (- 1) (* q!2 y00 y00 y00)) (* (- 3) (* q!2 q!2 y00 y00 y00)) (* (- 3) (* q!2 q!2 q!2 y00 y00 y00)) (* r!1 r!1 y00 y00 r00) (* 3 (* q!2 r!1 r!1 y00 y00 r00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 r00)) (* q!2 q!2 q!2 r!1 r!1 y00 y00 r00) (* (- 2) (* r!1 y00 y00 y00 r00)) (* (- 6) (* q!2 r!1 y00 y00 y00 r00)) (* (- 6) (* q!2 q!2 r!1 y00 y00 y00 r00)) (* (- 2) (* q!2 q!2 q!2 r!1 y00 y00 y00 r00)) ?x412 (* 3 (* q!2 y00 y00 y00 y00 r00)) (* 3 (* q!2 q!2 y00 y00 y00 y00 r00)) (* q!2 q!2 q!2 y00 y00 y00 y00 r00) (* q!2 q!2 q!2 q!2 r!1 y00 y00) (* (- 1) (* q!2 q!2 q!2 q!2 y00 y00 y00)) (* (- 1) (* r!1 r!1 r!1 y00 y00)) (* (- 3) (* q!2 r!1 r!1 r!1 y00 y00)) (* (- 3) (* q!2 q!2 r!1 r!1 r!1 y00 y00)) (* (- 1) (* q!2 q!2 q!2 r!1 r!1 r!1 y00 y00)) (* 2 (* r!1 r!1 y00 y00 y00)) (* 5 (* q!2 r!1 r!1 y00 y00 y00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00)) (* (- 1) (* q!2 q!2 q!2 r!1 r!1 y00 y00 y00)) (* (- 1) (* r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 r!1 y00 y00 y00 y00)) (* 3 (* q!2 q!2 r!1 y00 y00 y00 y00)) (* 5 (* q!2 q!2 q!2 r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 y00 y00 y00 y00 y00)) (* (- 3) (* q!2 q!2 y00 y00 y00 y00 y00)) (* (- 3) (* q!2 q!2 q!2 y00 y00 y00 y00 y00)) (* (- 1) (* r!1 y00 r00)) (* (- 3) (* q!2 r!1 y00 r00)) (* (- 3) (* q!2 q!2 r!1 y00 r00)) (* (- 1) (* q!2 q!2 q!2 r!1 y00 r00)) ?x1061 (* 3 (* q!2 y00 y00 r00)) (* 3 (* q!2 q!2 y00 y00 r00)) (* q!2 q!2 q!2 y00 y00 r00) (* (- 1) (* r!1 y00 y00 q00)) (* (- 3) (* q!2 r!1 y00 y00 q00)) (* (- 3) (* q!2 q!2 r!1 y00 y00 q00)) (* (- 1) (* q!2 q!2 q!2 r!1 y00 y00 q00)) ?x1220 (* 3 (* q!2 y00 y00 y00 q00)) (* 3 (* q!2 q!2 y00 y00 y00 q00)) (* q!2 q!2 q!2 y00 y00 y00 q00) (* r!1 r!1 y00 y00 y00 q00) (* 3 (* q!2 r!1 r!1 y00 y00 y00 q00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00 q00)) (* q!2 q!2 q!2 r!1 r!1 y00 y00 y00 q00) (* (- 2) (* r!1 y00 y00 y00 y00 q00)) (* (- 6) (* q!2 r!1 y00 y00 y00 y00 q00)) (* (- 6) (* q!2 q!2 r!1 y00 y00 y00 y00 q00)) (* (- 2) (* q!2 q!2 q!2 r!1 y00 y00 y00 y00 q00)) ?x1500 (* 3 (* q!2 y00 y00 y00 y00 y00 q00)) (* 3 (* q!2 q!2 y00 y00 y00 y00 y00 q00)) (* q!2 q!2 q!2 y00 y00 y00 y00 y00 q00) (* (- 1) (* q!2 q!2 q!2 q!2 r!1 r!1 y00 y00 y00)) (* 2 (* q!2 q!2 q!2 q!2 r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 q!2 q!2 y00 y00 y00 y00 y00)))))
 (let (($x1344 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x69)) 0) (not (= ?x1452 0)))))
 (let (($x82 (exists ((q Int) (r Int) (y Int) )(! (let ((?x1500 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1220 (* y00 y00 y00 q00)))
 (let ((?x1061 (* y00 y00 r00)))
 (let ((?x412 (* y00 y00 y00 y00 r00)))
 (let ((?x1869 (+ (* r r y00) (* 3 (* q r r y00)) (* 3 (* q q r r y00)) (* q q q r r y00) (* (- 1) (* r y00 y00)) (* (- 2) (* q r y00 y00)) (* 2 (* q q q r y00 y00)) (* (- 1) (* q y00 y00 y00)) (* (- 3) (* q q y00 y00 y00)) (* (- 3) (* q q q y00 y00 y00)) (* r r y00 y00 r00) (* 3 (* q r r y00 y00 r00)) (* 3 (* q q r r y00 y00 r00)) (* q q q r r y00 y00 r00) (* (- 2) (* r y00 y00 y00 r00)) (* (- 6) (* q r y00 y00 y00 r00)) (* (- 6) (* q q r y00 y00 y00 r00)) (* (- 2) (* q q q r y00 y00 y00 r00)) ?x412 (* 3 (* q y00 y00 y00 y00 r00)) (* 3 (* q q y00 y00 y00 y00 r00)) (* q q q y00 y00 y00 y00 r00) (* q q q q r y00 y00) (* (- 1) (* q q q q y00 y00 y00)) (* (- 1) (* r r r y00 y00)) (* (- 3) (* q r r r y00 y00)) (* (- 3) (* q q r r r y00 y00)) (* (- 1) (* q q q r r r y00 y00)) (* 2 (* r r y00 y00 y00)) (* 5 (* q r r y00 y00 y00)) (* 3 (* q q r r y00 y00 y00)) (* (- 1) (* q q q r r y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00)) (* (- 1) (* q r y00 y00 y00 y00)) (* 3 (* q q r y00 y00 y00 y00)) (* 5 (* q q q r y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00 y00)) (* (- 3) (* q q y00 y00 y00 y00 y00)) (* (- 3) (* q q q y00 y00 y00 y00 y00)) (* (- 1) (* r y00 r00)) (* (- 3) (* q r y00 r00)) (* (- 3) (* q q r y00 r00)) (* (- 1) (* q q q r y00 r00)) ?x1061 (* 3 (* q y00 y00 r00)) (* 3 (* q q y00 y00 r00)) (* q q q y00 y00 r00) (* (- 1) (* r y00 y00 q00)) (* (- 3) (* q r y00 y00 q00)) (* (- 3) (* q q r y00 y00 q00)) (* (- 1) (* q q q r y00 y00 q00)) ?x1220 (* 3 (* q y00 y00 y00 q00)) (* 3 (* q q y00 y00 y00 q00)) (* q q q y00 y00 y00 q00) (* r r y00 y00 y00 q00) (* 3 (* q r r y00 y00 y00 q00)) (* 3 (* q q r r y00 y00 y00 q00)) (* q q q r r y00 y00 y00 q00) (* (- 2) (* r y00 y00 y00 y00 q00)) (* (- 6) (* q r y00 y00 y00 y00 q00)) (* (- 6) (* q q r y00 y00 y00 y00 q00)) (* (- 2) (* q q q r y00 y00 y00 y00 q00)) ?x1500 (* 3 (* q y00 y00 y00 y00 y00 q00)) (* 3 (* q q y00 y00 y00 y00 y00 q00)) (* q q q y00 y00 y00 y00 y00 q00) (* (- 1) (* q q q q r r y00 y00 y00)) (* 2 (* q q q q r y00 y00 y00 y00)) (* (- 1) (* q q q q y00 y00 y00 y00 y00)))))
 (let (($x99 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (and (= (+ y (* (- 1) y00)) 0) $x99 (not (= ?x1869 0))))))))) :qid k!29))
 ))
 (let (($x1051 (exists ((q Int) (r Int) (y Int) )(! (let ((?x67 (* (- 1) y00)))
 (let ((?x1080 (+ r ?x67)))
 (let ((?x710 (+ 1 q)))
 (let ((?x547 (+ (* y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* r00 y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* y00 y00 ?x710 ?x710 ?x710 ?x710 ?x1080) (* (- 1) (* y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080 ?x1080)) (* (- 1) (* r00 y00 ?x710 ?x710 ?x710 ?x1080)) (* (- 1) (* q00 y00 y00 ?x710 ?x710 ?x710 ?x1080)) (* q00 y00 y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* (- 1) (* y00 y00 y00 ?x710 ?x710 ?x710 ?x710 ?x1080 ?x1080)))))
 (let (($x907 (not (= ?x547 0))))
 (let (($x1839 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x1839 $x907))))))) :qid k!29))
 ))
 (let ((?x150 (lambda ((q Int) (r Int) (y Int) )(let ((?x1500 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1220 (* y00 y00 y00 q00)))
 (let ((?x1061 (* y00 y00 r00)))
 (let ((?x412 (* y00 y00 y00 y00 r00)))
 (let ((?x1869 (+ (* r r y00) (* 3 (* q r r y00)) (* 3 (* q q r r y00)) (* q q q r r y00) (* (- 1) (* r y00 y00)) (* (- 2) (* q r y00 y00)) (* 2 (* q q q r y00 y00)) (* (- 1) (* q y00 y00 y00)) (* (- 3) (* q q y00 y00 y00)) (* (- 3) (* q q q y00 y00 y00)) (* r r y00 y00 r00) (* 3 (* q r r y00 y00 r00)) (* 3 (* q q r r y00 y00 r00)) (* q q q r r y00 y00 r00) (* (- 2) (* r y00 y00 y00 r00)) (* (- 6) (* q r y00 y00 y00 r00)) (* (- 6) (* q q r y00 y00 y00 r00)) (* (- 2) (* q q q r y00 y00 y00 r00)) ?x412 (* 3 (* q y00 y00 y00 y00 r00)) (* 3 (* q q y00 y00 y00 y00 r00)) (* q q q y00 y00 y00 y00 r00) (* q q q q r y00 y00) (* (- 1) (* q q q q y00 y00 y00)) (* (- 1) (* r r r y00 y00)) (* (- 3) (* q r r r y00 y00)) (* (- 3) (* q q r r r y00 y00)) (* (- 1) (* q q q r r r y00 y00)) (* 2 (* r r y00 y00 y00)) (* 5 (* q r r y00 y00 y00)) (* 3 (* q q r r y00 y00 y00)) (* (- 1) (* q q q r r y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00)) (* (- 1) (* q r y00 y00 y00 y00)) (* 3 (* q q r y00 y00 y00 y00)) (* 5 (* q q q r y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00 y00)) (* (- 3) (* q q y00 y00 y00 y00 y00)) (* (- 3) (* q q q y00 y00 y00 y00 y00)) (* (- 1) (* r y00 r00)) (* (- 3) (* q r y00 r00)) (* (- 3) (* q q r y00 r00)) (* (- 1) (* q q q r y00 r00)) ?x1061 (* 3 (* q y00 y00 r00)) (* 3 (* q q y00 y00 r00)) (* q q q y00 y00 r00) (* (- 1) (* r y00 y00 q00)) (* (- 3) (* q r y00 y00 q00)) (* (- 3) (* q q r y00 y00 q00)) (* (- 1) (* q q q r y00 y00 q00)) ?x1220 (* 3 (* q y00 y00 y00 q00)) (* 3 (* q q y00 y00 y00 q00)) (* q q q y00 y00 y00 q00) (* r r y00 y00 y00 q00) (* 3 (* q r r y00 y00 y00 q00)) (* 3 (* q q r r y00 y00 y00 q00)) (* q q q r r y00 y00 y00 q00) (* (- 2) (* r y00 y00 y00 y00 q00)) (* (- 6) (* q r y00 y00 y00 y00 q00)) (* (- 6) (* q q r y00 y00 y00 y00 q00)) (* (- 2) (* q q q r y00 y00 y00 y00 q00)) ?x1500 (* 3 (* q y00 y00 y00 y00 y00 q00)) (* 3 (* q q y00 y00 y00 y00 y00 q00)) (* q q q y00 y00 y00 y00 y00 q00) (* (- 1) (* q q q q r r y00 y00 y00)) (* 2 (* q q q q r y00 y00 y00 y00)) (* (- 1) (* q q q q y00 y00 y00 y00 y00)))))
 (let (($x99 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x242 (and (= (+ y (* (- 1) y00)) 0) $x99 (not (= ?x1869 0)))))
 (let ((?x67 (* (- 1) y00)))
 (let ((?x1080 (+ r ?x67)))
 (let ((?x710 (+ 1 q)))
 (let ((?x547 (+ (* y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* r00 y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* y00 y00 ?x710 ?x710 ?x710 ?x710 ?x1080) (* (- 1) (* y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080 ?x1080)) (* (- 1) (* r00 y00 ?x710 ?x710 ?x710 ?x1080)) (* (- 1) (* q00 y00 y00 ?x710 ?x710 ?x710 ?x1080)) (* q00 y00 y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* (- 1) (* y00 y00 y00 ?x710 ?x710 ?x710 ?x710 ?x1080 ?x1080)))))
 (let (($x907 (not (= ?x547 0))))
 (let (($x1839 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1868 (and (= (+ y00 (* (- 1) y)) 0) $x1839 $x907)))
 (rewrite (= $x1868 $x242)))))))))))))))))
 ))
 (let (($x1846 (exists ((q Int) (r Int) (y Int) )(! (let ((?x67 (* (- 1) y00)))
 (let ((?x1080 (+ r ?x67)))
 (let ((?x710 (+ 1 q)))
 (let ((?x547 (+ (* y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* r00 y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* y00 y00 ?x710 ?x710 ?x710 ?x710 ?x1080) (* (- 1) (* y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080 ?x1080)) (* (- 1) (* r00 y00 ?x710 ?x710 ?x710 ?x1080)) (* (- 1) (* q00 y00 y00 ?x710 ?x710 ?x710 ?x1080)) (* q00 y00 y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* (- 1) (* y00 y00 y00 ?x710 ?x710 ?x710 ?x710 ?x1080 ?x1080)))))
 (let (($x907 (not (= ?x547 0))))
 (let (($x1839 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x67 y) 0) $x1839 $x907))))))) :qid k!29))
 ))
 (let ((?x496 (lambda ((q Int) (r Int) (y Int) )(let ((?x67 (* (- 1) y00)))
 (let ((?x1080 (+ r ?x67)))
 (let ((?x710 (+ 1 q)))
 (let ((?x547 (+ (* y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* r00 y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* y00 y00 ?x710 ?x710 ?x710 ?x710 ?x1080) (* (- 1) (* y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080 ?x1080)) (* (- 1) (* r00 y00 ?x710 ?x710 ?x710 ?x1080)) (* (- 1) (* q00 y00 y00 ?x710 ?x710 ?x710 ?x1080)) (* q00 y00 y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* (- 1) (* y00 y00 y00 ?x710 ?x710 ?x710 ?x710 ?x1080 ?x1080)))))
 (let (($x907 (not (= ?x547 0))))
 (let (($x1839 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1868 (and (= (+ y00 (* (- 1) y)) 0) $x1839 $x907)))
 (let (($x827 (and (= (+ ?x67 y) 0) $x1839 $x907)))
 (rewrite (= $x827 $x1868)))))))))))
 ))
 (let (($x62 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x47 (+ (* ?x42 ?x42 ?x42 ?x43 ?x43 y00) (* ?x42 ?x42 ?x42 ?x43 ?x43 r00 y00 y00) (* ?x42 ?x42 ?x42 ?x42 ?x43 y00 y00))))
 (let ((?x52 (- (- ?x47 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00)) (* ?x42 ?x42 ?x42 ?x43 r00 y00))))
 (let ((?x55 (+ (- ?x52 (* ?x42 ?x42 ?x42 q00 ?x43 y00 y00)) (* ?x42 ?x42 ?x42 q00 ?x43 ?x43 y00 y00 y00))))
 (let (($x58 (= (- ?x55 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 y00 y00 y00)) 0)))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not $x58))))))))) :qid k!29))
 ))
 (let ((?x1815 (lambda ((q Int) (r Int) (y Int) )(let ((?x67 (* (- 1) y00)))
 (let ((?x1080 (+ r ?x67)))
 (let ((?x710 (+ 1 q)))
 (let ((?x547 (+ (* y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* r00 y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* y00 y00 ?x710 ?x710 ?x710 ?x710 ?x1080) (* (- 1) (* y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080 ?x1080)) (* (- 1) (* r00 y00 ?x710 ?x710 ?x710 ?x1080)) (* (- 1) (* q00 y00 y00 ?x710 ?x710 ?x710 ?x1080)) (* q00 y00 y00 y00 ?x710 ?x710 ?x710 ?x1080 ?x1080) (* (- 1) (* y00 y00 y00 ?x710 ?x710 ?x710 ?x710 ?x1080 ?x1080)))))
 (let (($x907 (not (= ?x547 0))))
 (let (($x1839 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x827 (and (= (+ ?x67 y) 0) $x1839 $x907)))
 (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x47 (+ (* ?x42 ?x42 ?x42 ?x43 ?x43 y00) (* ?x42 ?x42 ?x42 ?x43 ?x43 r00 y00 y00) (* ?x42 ?x42 ?x42 ?x42 ?x43 y00 y00))))
 (let ((?x52 (- (- ?x47 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00)) (* ?x42 ?x42 ?x42 ?x43 r00 y00))))
 (let ((?x55 (+ (- ?x52 (* ?x42 ?x42 ?x42 q00 ?x43 y00 y00)) (* ?x42 ?x42 ?x42 q00 ?x43 ?x43 y00 y00 y00))))
 (let (($x58 (= (- ?x55 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 y00 y00 y00)) 0)))
 (let (($x61 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not $x58)))))
 (rewrite (= $x61 $x827)))))))))))))))))
 ))
 (let ((@x63 (asserted $x62)))
 (let ((@x857 (mp (mp @x63 (quant-intro (proof-bind ?x1815) (= $x62 $x1846)) $x1846) (rewrite (= $x1846 $x1846)) $x1846)))
 (let ((@x1180 (mp (mp @x857 (quant-intro (proof-bind ?x496) (= $x1846 $x1051)) $x1051) (quant-intro (proof-bind ?x150) (= $x1051 $x82)) $x82)))
 (let ((@x1302 (mp (mp~ @x1180 (sk (~ $x82 $x1344)) $x1344) (rewrite (= $x1344 $x1638)) $x1638)))
 (let ((@x497 (and-elim @x1302 $x1110)))
 (let ((@x1905 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1110) $x358)) @x497 $x358)))
 (let (($x1225 (>= ?x1281 0)))
 (let ((@x1908 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1110) $x1225)) @x497 $x1225)))
 (let (($x556 (<= ?x1467 0)))
 (let ((@x278 (and-elim @x1302 $x1468)))
 (let ((@x563 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1468) $x556)) @x278 $x556)))
 (let (($x557 (>= ?x1467 0)))
 (let ((@x1532 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1468) $x557)) @x278 $x557)))
 (let (($x1492 (not (<= ?x1571 0))))
 (let (($x2183 (>= ?x1571 0)))
 (let ((@x1566 (lemma ((_ th-lemma arith) (hypothesis (not $x2183)) @x1532 @x563 @x1908 @x1905 false) $x2183)))
 (let ((@x1935 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1637 $x1492 (not $x2183))) (and-elim @x1302 $x1301) (or $x1492 (not $x2183)))))
 ((_ th-lemma arith) (unit-resolution @x1935 @x1566 $x1492) @x1532 @x563 @x1908 @x1905 false)))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        4
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-gcd-tests           2
 :arith-grobner             2
 :arith-max-min             308
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              3
 :arith-tableau-max-columns 89
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              2
 :max-memory                3.88
 :memory                    3.31
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1379844
 :num-checks                1
 :propagations              6
 :rlimit-count              8141
 :time                      0.01
 :total-time                0.02)
