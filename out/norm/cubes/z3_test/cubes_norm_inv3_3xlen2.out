unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x792 (* (- 3) n!0)))
 (let ((?x867 (* (- 3) (* n!0 n!0))))
 (let ((?x724 (+ k!2 ?x867 ?x792)))
 (let (($x269 (<= ?x724 1)))
 (let (($x631 (= ?x724 1)))
 (let ((?x471 (+ c!3 k!2)))
 (let ((?x371 (+ k!2 m!1)))
 (let ((?x1134 (+ 6 m!1)))
 (let ((?x866 (+ 1 n!0)))
 (let ((?x1116 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x775 (* (- 1) ?x1116)))
 (let ((?x1071 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x1153 (* (- 3) ?x1071)))
 (let ((?x936 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x1042 (* (- 1) ?x936)))
 (let ((?x877 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x806 (* (- 1) ?x877)))
 (let ((?x874 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x869 (* 2 ?x874)))
 (let ((?x873 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x688 (* 2 ?x873)))
 (let ((?x808 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x807 (* 2 ?x808)))
 (let ((?x804 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x689 (* 2 ?x804)))
 (let ((?x764 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x314 (* (- 2) ?x764)))
 (let ((?x760 (* ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x1076 (* 3 ?x760)))
 (let ((?x758 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x748 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x188 (* (- 1) ?x748)))
 (let ((?x694 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x687 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x205 (* (- 1) ?x687)))
 (let ((?x685 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x568 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x563 (* 2 ?x568)))
 (let ((?x407 (* ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x405 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x399 (* (- 3) ?x405)))
 (let ((?x403 (* ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x401 (* 3 ?x403)))
 (let ((?x400 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x762 (* (- 2) ?x400)))
 (let ((?x393 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x837 (* (- 1) ?x393)))
 (let ((?x390 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x871 (* (- 3) ?x390)))
 (let ((?x318 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x300 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x206 (* 3 ?x300)))
 (let ((?x287 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x294 (* 3 ?x287)))
 (let ((?x278 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x912 (* (- 2) ?x278)))
 (let ((?x235 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x236 (* (- 2) ?x235)))
 (let ((?x221 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x879 (* (- 3) ?x221)))
 (let ((?x220 (* ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x207 (* ?x866 ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x560 (* 2 ?x207)))
 (let ((?x204 (* ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x201 (* (- 1) ?x204)))
 (let ((?x200 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x199 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x184 (* (- 2) ?x199)))
 (let ((?x198 (* ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x185 (* (- 1) ?x198)))
 (let ((?x192 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x756 (* (- 2) ?x192)))
 (let ((?x182 (* ?x866 ?x866 ?x866 ?x866 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x371 ?x371 ?x371 ?x371 ?x371 ?x471 ?x471 ?x471 ?x471 ?x471 ?x471)))
 (let ((?x638 (+ ?x182 ?x756 ?x185 ?x184 ?x200 ?x201 ?x560 ?x220 ?x879 ?x236 ?x912 ?x294 ?x206 ?x318 ?x871 ?x837 ?x762 ?x401 ?x399 ?x407 ?x563 ?x685 ?x205 ?x694 ?x188 ?x758 ?x1076 ?x314 ?x689 ?x807 ?x688 ?x869 ?x806 ?x1042 ?x1153 ?x775)))
 (let (($x772 (= ?x638 0)))
 (let (($x1112 (not $x772)))
 (let ((?x425 (* k!2 n!0)))
 (let ((?x991 (+ ?x425 (* (- 3) c!3) (* (- 1) k!2) (* 2 n!0))))
 (let (($x980 (= ?x991 (- 1))))
 (let ((?x922 (* (- 9) n!0)))
 (let ((?x463 (* (- 1) (* k!2 k!2))))
 (let ((?x411 (* 5 k!2)))
 (let ((?x292 (* 18 c!3)))
 (let ((?x189 (* 9 (* c!3 n!0))))
 (let ((?x987 (+ ?x189 ?x292 ?x411 ?x463 ?x922)))
 (let (($x990 (= ?x987 4)))
 (let ((?x1094 (+ m!1 (* (- 6) n!0))))
 (let (($x593 (= ?x1094 6)))
 (let (($x367 (and $x593 $x990 $x980 $x631 $x1112)))
 (let ((?x506 (+ ?x869 ?x837 ?x688 ?x871 ?x1042 ?x294 ?x182 ?x563 ?x318 ?x188 ?x236 ?x912 ?x756 ?x1153 ?x407 ?x758 ?x1076 ?x762 ?x401 ?x399 ?x314 ?x185 ?x200 ?x184 ?x206 ?x220 ?x201 ?x560 ?x694 ?x775 ?x879 ?x205 ?x685 ?x689 ?x806 ?x807)))
 (let (($x226 (and $x593 (= (+ ?x292 ?x411 ?x922 ?x463 ?x189) 4) (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x425)) 1) (= (+ k!2 ?x792 ?x867) 1) (not (= ?x506 0)))))
 (let (($x1079 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x1124 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1084 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1069 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1031 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1010 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1001 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x952 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x864 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x810 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x798 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x787 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x731 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x719 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x686 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x678 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x670 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x660 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x632 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x585 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x584 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x565 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x542 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x527 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x517 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x489 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x386 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x368 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x344 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x313 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x289 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x247 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x239 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x228 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x144 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x369 (+ (* 2 ?x144) (* (- 1) ?x228) (* 2 ?x239) (* (- 3) ?x247) (* (- 1) ?x289) (* 3 ?x313) ?x344 (* 2 ?x368) ?x386 (* (- 1) ?x489) (* (- 2) ?x517) (* (- 2) ?x527) (* (- 2) ?x542) (* (- 3) ?x547) ?x565 ?x584 (* 3 ?x585) (* (- 2) ?x632) (* 3 ?x660) (* (- 3) ?x670) (* (- 2) ?x678) (* (- 1) ?x686) ?x719 (* (- 2) ?x731) (* 3 ?x787) ?x798 (* (- 1) ?x810) (* 2 ?x864) ?x952 (* (- 1) ?x1001) (* (- 3) ?x1010) (* (- 1) ?x1018) ?x1031 (* 2 ?x1069) (* (- 1) ?x1084) (* 2 ?x1124))))
 (let (($x346 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x308 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x260 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x256 (= ?x260 4)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (and $x172 $x256 $x308 $x346 (not (= ?x369 0))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x233 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x952 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x864 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1084 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1124 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x810 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x489 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x731 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x686 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x678 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x670 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1031 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1010 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1001 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x585 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x584 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x632 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x719 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x517 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1069 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x660 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x565 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x368 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x386 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x798 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x542 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x527 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x144 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x247 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x228 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x313 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x289 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x344 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x787 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x239 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x938 (+ (* (- 2) ?x239) (* (- 3) ?x787) (* (- 1) ?x344) ?x289 (* (- 3) ?x313) ?x228 (* 3 ?x247) (* (- 2) ?x144) (* 2 ?x527) (* 2 ?x542) (* (- 1) ?x798) (* (- 1) ?x386) (* (- 2) ?x368) (* 3 ?x547) (* (- 1) ?x565) (* (- 3) ?x660) (* (- 2) ?x1069) (* 2 ?x517) (* (- 1) ?x719) (* 2 ?x632) (* (- 1) ?x584) (* (- 3) ?x585) ?x1001 (* 3 ?x1010) ?x1018 (* (- 1) ?x1031) (* 3 ?x670) (* 2 ?x678) ?x686 (* 2 ?x731) ?x489 ?x810 (* (- 2) ?x1124) ?x1084 (* (- 2) ?x864) (* (- 1) ?x952))))
 (let (($x163 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x219 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x640 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (and $x172 (= ?x640 (- 4)) $x219 $x163 (not (= ?x938 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x900 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x1124 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1084 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1069 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1031 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1010 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1001 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x952 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x864 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x810 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x798 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x787 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x731 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x719 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x686 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x678 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x670 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x660 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x632 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x585 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x584 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x565 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x542 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x527 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x517 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x489 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x386 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x368 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x344 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x313 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x289 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x247 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x239 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x228 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x144 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x369 (+ (* 2 ?x144) (* (- 1) ?x228) (* 2 ?x239) (* (- 3) ?x247) (* (- 1) ?x289) (* 3 ?x313) ?x344 (* 2 ?x368) ?x386 (* (- 1) ?x489) (* (- 2) ?x517) (* (- 2) ?x527) (* (- 2) ?x542) (* (- 3) ?x547) ?x565 ?x584 (* 3 ?x585) (* (- 2) ?x632) (* 3 ?x660) (* (- 3) ?x670) (* (- 2) ?x678) (* (- 1) ?x686) ?x719 (* (- 2) ?x731) (* 3 ?x787) ?x798 (* (- 1) ?x810) (* 2 ?x864) ?x952 (* (- 1) ?x1001) (* (- 3) ?x1010) (* (- 1) ?x1018) ?x1031 (* 2 ?x1069) (* (- 1) ?x1084) (* 2 ?x1124))))
 (let (($x346 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x308 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x260 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x256 (= ?x260 4)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (let (($x1052 (and $x172 $x256 $x308 $x346 (not (= ?x369 0)))))
 (let ((?x938 (+ (* (- 2) ?x239) (* (- 3) ?x787) (* (- 1) ?x344) ?x289 (* (- 3) ?x313) ?x228 (* 3 ?x247) (* (- 2) ?x144) (* 2 ?x527) (* 2 ?x542) (* (- 1) ?x798) (* (- 1) ?x386) (* (- 2) ?x368) (* 3 ?x547) (* (- 1) ?x565) (* (- 3) ?x660) (* (- 2) ?x1069) (* 2 ?x517) (* (- 1) ?x719) (* 2 ?x632) (* (- 1) ?x584) (* (- 3) ?x585) ?x1001 (* 3 ?x1010) ?x1018 (* (- 1) ?x1031) (* 3 ?x670) (* 2 ?x678) ?x686 (* 2 ?x731) ?x489 ?x810 (* (- 2) ?x1124) ?x1084 (* (- 2) ?x864) (* (- 1) ?x952))))
 (let (($x163 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x219 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x640 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x193 (and $x172 (= ?x640 (- 4)) $x219 $x163 (not (= ?x938 0)))))
 (rewrite (= $x193 $x1052)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x139 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x132 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x131 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x129 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x127 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x125 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x124 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x123 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x122 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x121 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x120 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x118 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x116 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x115 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x114 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x111 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x110 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x108 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x106 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x104 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x100 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x99 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x98 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x96 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x92 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x91 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x90 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x88 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x83 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x80 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x78 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x74 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 2) ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x89 (+ (- (+ (- (+ (- (- ?x73 ?x74) ?x75) ?x78) ?x80) ?x82 ?x83) ?x85) ?x87 ?x88)))
 (let ((?x103 (- (- (- (+ (- (- (- ?x89 ?x90) ?x91) ?x92) ?x96) ?x98) ?x99) ?x100)))
 (let ((?x117 (+ (- (- (+ (- (+ ?x103 ?x104) ?x106) ?x108) ?x110) ?x111) ?x114 ?x115 ?x116)))
 (let ((?x133 (- (+ (- (+ (- ?x117 ?x118) ?x120 ?x121 ?x122 ?x123 ?x124 ?x125) ?x127) ?x129) ?x131)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x133 ?x132) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x238 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x952 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x864 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1084 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1124 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x810 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x489 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x731 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x686 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x678 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x670 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1031 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1010 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1001 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x585 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x584 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x632 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x719 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x517 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1069 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x660 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x565 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x368 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x386 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x798 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x542 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x527 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x144 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x247 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x228 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x313 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x289 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x344 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x787 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x239 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x938 (+ (* (- 2) ?x239) (* (- 3) ?x787) (* (- 1) ?x344) ?x289 (* (- 3) ?x313) ?x228 (* 3 ?x247) (* (- 2) ?x144) (* 2 ?x527) (* 2 ?x542) (* (- 1) ?x798) (* (- 1) ?x386) (* (- 2) ?x368) (* 3 ?x547) (* (- 1) ?x565) (* (- 3) ?x660) (* (- 2) ?x1069) (* 2 ?x517) (* (- 1) ?x719) (* 2 ?x632) (* (- 1) ?x584) (* (- 3) ?x585) ?x1001 (* 3 ?x1010) ?x1018 (* (- 1) ?x1031) (* 3 ?x670) (* 2 ?x678) ?x686 (* 2 ?x731) ?x489 ?x810 (* (- 2) ?x1124) ?x1084 (* (- 2) ?x864) (* (- 1) ?x952))))
 (let (($x163 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x219 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x640 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (let (($x193 (and $x172 (= ?x640 (- 4)) $x219 $x163 (not (= ?x938 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x132 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x131 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x129 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x127 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x125 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x124 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x123 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x122 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x121 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x120 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x118 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x116 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x115 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x114 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x111 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x110 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x108 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x106 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x104 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x100 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x99 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x98 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x96 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x92 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x91 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x90 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x88 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x83 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x80 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x78 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x74 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 2) ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x89 (+ (- (+ (- (+ (- (- ?x73 ?x74) ?x75) ?x78) ?x80) ?x82 ?x83) ?x85) ?x87 ?x88)))
 (let ((?x103 (- (- (- (+ (- (- (- ?x89 ?x90) ?x91) ?x92) ?x96) ?x98) ?x99) ?x100)))
 (let ((?x117 (+ (- (- (+ (- (+ ?x103 ?x104) ?x106) ?x108) ?x110) ?x111) ?x114 ?x115 ?x116)))
 (let ((?x133 (- (+ (- (+ (- ?x117 ?x118) ?x120 ?x121 ?x122 ?x123 ?x124 ?x125) ?x127) ?x129) ?x131)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x138 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x133 ?x132) 0))))))
 (rewrite (= $x138 $x193)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x140 (asserted $x139)))
 (let ((@x978 (mp (mp @x140 (quant-intro (proof-bind ?x238) (= $x139 $x233)) $x233) (rewrite (= $x233 $x233)) $x233)))
 (let ((@x591 (mp~ (mp @x978 (quant-intro (proof-bind ?x900) (= $x233 $x1079)) $x1079) (sk (~ $x1079 $x226)) $x226)))
 (let ((@x273 (mp @x591 (rewrite (= $x226 $x367)) $x367)))
 (let ((@x982 (and-elim @x273 $x631)))
 (let ((@x305 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x631) $x269)) @x982 $x269)))
 (let (($x664 (>= ?x724 1)))
 (let ((@x767 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x631) $x664)) @x982 $x664)))
 (let (($x265 (<= ?x1094 6)))
 (let ((@x424 (and-elim @x273 $x593)))
 (let ((@x257 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x593) $x265)) @x424 $x265)))
 (let (($x840 (>= ?x1094 6)))
 (let ((@x415 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x593) $x840)) @x424 $x840)))
 (let (($x901 (<= ?x987 4)))
 (let ((@x271 (and-elim @x273 $x990)))
 (let ((@x789 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x990) $x901)) @x271 $x901)))
 (let (($x1026 (>= ?x987 4)))
 (let ((@x1101 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x990) $x1026)) @x271 $x1026)))
 (let (($x903 (<= ?x991 (- 1))))
 (let ((@x427 (and-elim @x273 $x980)))
 (let ((@x353 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x980) $x903)) @x427 $x903)))
 (let (($x703 (>= ?x991 (- 1))))
 (let ((@x552 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x980) $x703)) @x427 $x703)))
 (let (($x343 (not (<= ?x638 0))))
 (let (($x326 (>= ?x638 0)))
 (let ((@x782 ((_ th-lemma arith) (hypothesis (not $x326)) @x415 @x257 @x767 @x305 @x552 @x353 @x767 @x305 @x1101 @x789 @x767 @x305 @x767 @x305 @x415 @x257 @x767 @x305 false)))
 (let ((@x1060 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x772 $x343 (not $x326))) (and-elim @x273 $x1112) (or $x343 (not $x326)))))
 ((_ th-lemma arith) (unit-resolution @x1060 (lemma @x782 $x326) $x343) @x415 @x257 @x767 @x305 @x552 @x353 @x767 @x305 @x1101 @x789 @x767 @x305 @x767 @x305 @x415 @x257 @x767 @x305 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        19
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             457
 :arith-nonlinear-bounds    15
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 66
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                20.42
 :memory                    19.50
 :mk-bool-var               17
 :mk-clause                 16
 :num-allocs                11805302
 :num-checks                1
 :propagations              11
 :rlimit-count              88859
 :time                      0.10
 :total-time                0.12)
