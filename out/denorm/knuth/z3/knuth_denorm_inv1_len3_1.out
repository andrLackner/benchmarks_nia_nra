unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun x!0 () Int)
(declare-fun q!3 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x690 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 8) r!2) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 4 (* r!2 d!1)) (* (- 1) (* q!3 d!1 d!1)) (* 2 (* q!3 d!1)) (* (- 4) (* x!0 d!1)))))
 (let (($x393 (>= ?x690 0)))
 (let (($x963 (= ?x690 0)))
 (let ((?x1281 (* x!0 d!1)))
 (let ((?x741 (* 4 ?x1281)))
 (let ((?x1279 (* q!3 d!1)))
 (let ((?x490 (* (- 2) ?x1279)))
 (let ((?x496 (* q!3 d!1 d!1)))
 (let ((?x386 (* r!2 d!1)))
 (let ((?x1090 (* (- 4) ?x386)))
 (let ((?x292 (* r00 d00)))
 (let ((?x293 (* 4 ?x292)))
 (let ((?x254 (* d00 q00)))
 (let ((?x255 (* 2 ?x254)))
 (let ((?x489 (* 8 r!2)))
 (let ((?x175 (* d00 x00)))
 (let ((?x189 (* (- 4) ?x175)))
 (let ((?x205 (* (- 1) ?x41)))
 (let ((?x157 (* (- 8) r00)))
 (let ((?x648 (+ ?x157 ?x205 ?x189 ?x489 ?x255 ?x293 ?x1090 ?x496 ?x490 ?x741)))
 (let ((?x964 (* r!2 r!2 q!3 d!1)))
 (let ((?x873 (* r!2 r!2 d!1 d!1)))
 (let ((?x297 (* (- 1) (* r!2 r!2 x!0 d!1))))
 (let ((?x673 (* r!2 r!2 d!1)))
 (let ((?x946 (* 4 ?x673)))
 (let ((?x300 (* 2 (* r!2 r!2 r!2 d!1))))
 (let ((?x956 (* (- 2) (* r!2 r!2 x!0))))
 (let ((?x1189 (* 2 (* r!2 r!2 q!3))))
 (let ((?x401 (* r!2 r!2)))
 (let ((?x542 (* 4 ?x401)))
 (let ((?x1091 (* 4 (* r!2 r!2 r!2))))
 (let ((?x1161 (+ ?x1091 (* (- 1) (* r!2 x!0 q!3 q!3 q!3 d!1)) ?x542 ?x1189 ?x956 ?x300 ?x946 ?x297 (* (- 2) (* r!2 x!0 q!3 q!3 q!3)) ?x873 ?x964 (* r!2 q!3 q!3 q!3 q!3 d!1) (* 2 (* r!2 q!3 q!3 q!3 q!3)) (* 2 (* r!2 r!2 q!3 q!3 q!3 d!1)) (* 4 (* r!2 r!2 q!3 q!3 q!3)))))
 (let ((?x158 (* ?x1161 ?x648)))
 (let (($x1170 (= ?x158 0)))
 (let (($x575 (not $x1170)))
 (let ((?x451 (+ 4 q!3)))
 (let ((?x1056 (+ 2 d!1)))
 (let ((?x1188 (* ?x1056 ?x451 ?x451 ?x451 (+ 2 (* 2 r!2) (* (- 1) x!0) q!3 d!1) r!2)))
 (let ((?x770 (* 2 ?x873)))
 (let ((?x650 (* 8 ?x673)))
 (let ((?x377 (* 8 ?x401)))
 (let ((?x1115 (* (+ ?x1091 ?x377 ?x1189 ?x956 ?x300 ?x650 ?x297 ?x770 ?x964 ?x1188) ?x648)))
 (let (($x1194 (= ?x1115 0)))
 (let ((?x333 (+ (- 4) q!3)))
 (let ((?x1269 (* ?x333 ?x333 ?x333 ?x1056 (+ (- 2) (* 2 r!2) (* (- 1) x!0) q!3 (* (- 1) d!1)) r!2)))
 (let ((?x418 (* (+ ?x1091 ?x1189 ?x956 ?x300 ?x297 ?x964 ?x1269) ?x648)))
 (let (($x511 (= ?x418 0)))
 (let ((?x381 (+ (- 8) q!3)))
 (let ((?x1286 (* ?x381 ?x381 ?x381 ?x1056 (+ (- 4) (* 2 r!2) (* (- 1) x!0) q!3 (* (- 2) d!1)) r!2)))
 (let ((?x250 (* (- 1) ?x873)))
 (let ((?x360 (* (- 4) ?x673)))
 (let ((?x389 (* (- 4) ?x401)))
 (let ((?x483 (* (+ ?x1091 ?x389 ?x1189 ?x956 ?x300 ?x360 ?x297 ?x250 ?x964 ?x1286) ?x648)))
 (let (($x821 (= ?x483 0)))
 (let (($x225 (not $x821)))
 (let (($x844 (or $x225 (not $x511) (not $x1194) $x575)))
 (let (($x269 (and $x963 $x844)))
 (let ((?x743 (+ ?x489 ?x157 ?x205 ?x189 ?x255 ?x293 ?x741 ?x490 ?x1090 ?x496)))
 (let ((?x512 (* 2 (* q!3 r!2 r!2))))
 (let ((?x503 (* q!3 r!2 r!2 d!1)))
 (let ((?x379 (* ?x381 ?x381 ?x381 ?x1056 (+ (- 4) q!3 (* 2 r!2) (* (- 1) x!0) (* (- 2) d!1)) r!2)))
 (let (($x249 (= (* (+ ?x956 ?x389 ?x379 ?x250 ?x297 ?x503 ?x300 ?x360 ?x512 ?x1091) ?x743) 0)))
 (let ((?x947 (+ ?x956 ?x542 (* 4 (* q!3 q!3 q!3 r!2 r!2)) ?x873 ?x297 ?x503 ?x300 ?x946 (* (- 2) (* q!3 q!3 q!3 r!2 x!0)) ?x512 (* 2 (* q!3 q!3 q!3 q!3 r!2)) (* q!3 q!3 q!3 q!3 r!2 d!1) (* 2 (* q!3 q!3 q!3 r!2 r!2 d!1)) ?x1091 (* (- 1) (* q!3 q!3 q!3 r!2 x!0 d!1)))))
 (let ((?x710 (* ?x1056 ?x451 ?x451 ?x451 (+ 2 q!3 (* 2 r!2) (* (- 1) x!0) d!1) r!2)))
 (let (($x1046 (= (* (+ ?x956 ?x377 ?x710 ?x770 ?x297 ?x503 ?x300 ?x650 ?x512 ?x1091) ?x743) 0)))
 (let ((?x251 (* ?x333 ?x333 ?x333 ?x1056 (+ (- 2) q!3 (* 2 r!2) (* (- 1) x!0) (* (- 1) d!1)) r!2)))
 (let (($x247 (or (not (= (* (+ ?x251 ?x956 ?x297 ?x503 ?x300 ?x512 ?x1091) ?x743) 0)) (not $x1046) (not (= (* ?x947 ?x743) 0)) (not $x249))))
 (let (($x1389 (and (= ?x743 0) $x247)))
 (let (($x799 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1418 (* q d d)))
 (let ((?x1412 (* r d)))
 (let ((?x1408 (* (- 4) ?x1412)))
 (let ((?x1411 (* (- 2) (* q d))))
 (let ((?x1049 (* 4 (* x d))))
 (let ((?x292 (* r00 d00)))
 (let ((?x293 (* 4 ?x292)))
 (let ((?x254 (* d00 q00)))
 (let ((?x255 (* 2 ?x254)))
 (let ((?x175 (* d00 x00)))
 (let ((?x189 (* (- 4) ?x175)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x205 (* (- 1) ?x41)))
 (let ((?x157 (* (- 8) r00)))
 (let ((?x186 (* 8 r)))
 (let ((?x548 (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 ?x1411 ?x1408 ?x1418)))
 (let ((?x502 (* 4 (* r r r))))
 (let ((?x910 (* 2 (* q r r))))
 (let ((?x735 (* 2 (* r r r d))))
 (let ((?x734 (* q r r d)))
 (let ((?x700 (* (- 1) (* r r x d))))
 (let ((?x607 (* r r d d)))
 (let ((?x1074 (* (- 1) ?x607)))
 (let ((?x478 (+ 2 d)))
 (let ((?x1072 (+ (- 8) q)))
 (let ((?x435 (* ?x1072 ?x1072 ?x1072 ?x478 (+ (- 4) q (* 2 r) (* (- 1) x) (* (- 2) d)) r)))
 (let ((?x370 (* r r)))
 (let ((?x563 (* (- 4) ?x370)))
 (let ((?x444 (* (- 2) (* r r x))))
 (let ((?x1095 (+ ?x444 ?x563 ?x435 ?x1074 ?x700 ?x734 ?x735 (* (- 4) (* r r d)) ?x910 ?x502)))
 (let ((?x1292 (* (- 1) (* q q q r x d))))
 (let ((?x976 (* 2 (* q q q r r d))))
 (let ((?x938 (* q q q q r d)))
 (let ((?x930 (* 2 (* q q q q r))))
 (let ((?x740 (* r r d)))
 (let ((?x920 (* 4 ?x740)))
 (let ((?x371 (* 4 ?x370)))
 (let ((?x1047 (+ ?x444 ?x371 (* 4 (* q q q r r)) ?x607 ?x700 ?x734 ?x735 ?x920 (* (- 2) (* q q q r x)) ?x910 ?x930 ?x938 ?x976 ?x502 ?x1292)))
 (let ((?x795 (* 8 ?x740)))
 (let ((?x733 (* 2 ?x607)))
 (let ((?x479 (+ 4 q)))
 (let ((?x384 (* ?x478 ?x479 ?x479 ?x479 (+ 2 q (* 2 r) (* (- 1) x) d) r)))
 (let ((?x1271 (* 8 ?x370)))
 (let (($x303 (= (* (+ ?x444 ?x1271 ?x384 ?x733 ?x700 ?x734 ?x735 ?x795 ?x910 ?x502) ?x548) 0)))
 (let ((?x1100 (+ (- 4) q)))
 (let ((?x194 (* ?x1100 ?x1100 ?x1100 ?x478 (+ (- 2) q (* 2 r) (* (- 1) x) (* (- 1) d)) r)))
 (let (($x364 (or (not (= (* (+ ?x194 ?x444 ?x700 ?x734 ?x735 ?x910 ?x502) ?x548) 0)) (not $x303) (not (= (* ?x1047 ?x548) 0)) (not (= (* ?x1095 ?x548) 0)))))
 (let (($x412 (= ?x548 0)))
 (and $x412 $x364))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x416 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1418 (* q d d)))
 (let ((?x1412 (* r d)))
 (let ((?x1408 (* (- 4) ?x1412)))
 (let ((?x1411 (* (- 2) (* q d))))
 (let ((?x1049 (* 4 (* x d))))
 (let ((?x292 (* r00 d00)))
 (let ((?x293 (* 4 ?x292)))
 (let ((?x254 (* d00 q00)))
 (let ((?x255 (* 2 ?x254)))
 (let ((?x175 (* d00 x00)))
 (let ((?x189 (* (- 4) ?x175)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x205 (* (- 1) ?x41)))
 (let ((?x157 (* (- 8) r00)))
 (let ((?x186 (* 8 r)))
 (let ((?x548 (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 ?x1411 ?x1408 ?x1418)))
 (let ((?x1292 (* (- 1) (* q q q r x d))))
 (let ((?x976 (* 2 (* q q q r r d))))
 (let ((?x938 (* q q q q r d)))
 (let ((?x912 (* 2 (* (* 2 r) r r))))
 (let ((?x910 (* 2 (* q r r))))
 (let ((?x797 (* 2 (* (* (- 1) x) r r))))
 (let ((?x740 (* r r d)))
 (let ((?x920 (* 4 ?x740)))
 (let ((?x735 (* 2 (* r r r d))))
 (let ((?x734 (* q r r d)))
 (let ((?x700 (* (- 1) (* r r x d))))
 (let ((?x607 (* r r d d)))
 (let ((?x370 (* r r)))
 (let ((?x371 (* 4 ?x370)))
 (let ((?x423 (+ ?x371 (* 2 (* q r q q q)) ?x607 ?x700 (* 2 (* (* (- 1) x) r q q q)) ?x734 ?x735 ?x920 ?x797 ?x910 (* 2 (* (* 2 r) r q q q)) ?x912 ?x938 ?x976 ?x1292)))
 (let ((?x1372 (* 2 (* d 4))))
 (let ((?x1379 (* (- 8) d)))
 (let ((?x795 (* 8 ?x740)))
 (let ((?x733 (* 2 ?x607)))
 (let ((?x479 (+ 4 q)))
 (let ((?x478 (+ 2 d)))
 (let ((?x384 (* ?x478 ?x479 ?x479 ?x479 (+ 2 q (* 2 r) (* (- 1) x) d) r)))
 (let ((?x1271 (* 8 ?x370)))
 (let ((?x906 (* (+ ?x1271 ?x384 ?x733 ?x700 ?x734 ?x735 ?x795 ?x797 ?x910 ?x912) (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 ?x1379 ?x1411 ?x1372 ?x1408 ?x1418))))
 (let ((?x993 (* 8 d)))
 (let ((?x287 (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 (* (- 4) (* d 2)) ?x993 ?x1411 ?x1408 ?x1418)))
 (let ((?x1085 (* 2 (* (* (- 1) d) r r))))
 (let ((?x1101 (* 2 ?x740)))
 (let ((?x1100 (+ (- 4) q)))
 (let ((?x194 (* ?x1100 ?x1100 ?x1100 ?x478 (+ (- 2) q (* 2 r) (* (- 1) x) (* (- 1) d)) r)))
 (let (($x405 (= (* (+ ?x194 ?x700 ?x734 ?x735 ?x1101 ?x797 ?x910 ?x912 ?x1085) ?x287) 0)))
 (let ((?x1078 (* 16 d)))
 (let ((?x1283 (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 (* (- 8) (* d 2)) ?x1078 ?x1411 ?x1408 ?x1418)))
 (let ((?x1067 (* 2 (* (* (- 2) d) r r))))
 (let ((?x1074 (* (- 1) ?x607)))
 (let ((?x1072 (+ (- 8) q)))
 (let ((?x435 (* ?x1072 ?x1072 ?x1072 ?x478 (+ (- 4) q (* 2 r) (* (- 1) x) (* (- 2) d)) r)))
 (let ((?x563 (* (- 4) ?x370)))
 (let (($x1028 (= (* (+ ?x563 ?x435 ?x1074 ?x700 ?x734 ?x735 ?x797 ?x910 ?x912 ?x1067) ?x1283) 0)))
 (let (($x1201 (or (not $x1028) (not $x405) (not (= ?x906 0)) (not (= (* ?x423 ?x548) 0)))))
 (let (($x412 (= ?x548 0)))
 (and $x412 $x1201)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x210 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1418 (* q d d)))
 (let ((?x1412 (* r d)))
 (let ((?x1408 (* (- 4) ?x1412)))
 (let ((?x1411 (* (- 2) (* q d))))
 (let ((?x1049 (* 4 (* x d))))
 (let ((?x292 (* r00 d00)))
 (let ((?x293 (* 4 ?x292)))
 (let ((?x254 (* d00 q00)))
 (let ((?x255 (* 2 ?x254)))
 (let ((?x175 (* d00 x00)))
 (let ((?x189 (* (- 4) ?x175)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x205 (* (- 1) ?x41)))
 (let ((?x157 (* (- 8) r00)))
 (let ((?x186 (* 8 r)))
 (let ((?x548 (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 ?x1411 ?x1408 ?x1418)))
 (let ((?x502 (* 4 (* r r r))))
 (let ((?x910 (* 2 (* q r r))))
 (let ((?x735 (* 2 (* r r r d))))
 (let ((?x734 (* q r r d)))
 (let ((?x700 (* (- 1) (* r r x d))))
 (let ((?x607 (* r r d d)))
 (let ((?x1074 (* (- 1) ?x607)))
 (let ((?x478 (+ 2 d)))
 (let ((?x1072 (+ (- 8) q)))
 (let ((?x435 (* ?x1072 ?x1072 ?x1072 ?x478 (+ (- 4) q (* 2 r) (* (- 1) x) (* (- 2) d)) r)))
 (let ((?x370 (* r r)))
 (let ((?x563 (* (- 4) ?x370)))
 (let ((?x444 (* (- 2) (* r r x))))
 (let ((?x1095 (+ ?x444 ?x563 ?x435 ?x1074 ?x700 ?x734 ?x735 (* (- 4) (* r r d)) ?x910 ?x502)))
 (let ((?x1292 (* (- 1) (* q q q r x d))))
 (let ((?x976 (* 2 (* q q q r r d))))
 (let ((?x938 (* q q q q r d)))
 (let ((?x930 (* 2 (* q q q q r))))
 (let ((?x740 (* r r d)))
 (let ((?x920 (* 4 ?x740)))
 (let ((?x371 (* 4 ?x370)))
 (let ((?x1047 (+ ?x444 ?x371 (* 4 (* q q q r r)) ?x607 ?x700 ?x734 ?x735 ?x920 (* (- 2) (* q q q r x)) ?x910 ?x930 ?x938 ?x976 ?x502 ?x1292)))
 (let ((?x795 (* 8 ?x740)))
 (let ((?x733 (* 2 ?x607)))
 (let ((?x479 (+ 4 q)))
 (let ((?x384 (* ?x478 ?x479 ?x479 ?x479 (+ 2 q (* 2 r) (* (- 1) x) d) r)))
 (let ((?x1271 (* 8 ?x370)))
 (let (($x303 (= (* (+ ?x444 ?x1271 ?x384 ?x733 ?x700 ?x734 ?x735 ?x795 ?x910 ?x502) ?x548) 0)))
 (let ((?x1100 (+ (- 4) q)))
 (let ((?x194 (* ?x1100 ?x1100 ?x1100 ?x478 (+ (- 2) q (* 2 r) (* (- 1) x) (* (- 1) d)) r)))
 (let (($x364 (or (not (= (* (+ ?x194 ?x444 ?x700 ?x734 ?x735 ?x910 ?x502) ?x548) 0)) (not $x303) (not (= (* ?x1047 ?x548) 0)) (not (= (* ?x1095 ?x548) 0)))))
 (let (($x412 (= ?x548 0)))
 (let (($x190 (and $x412 $x364)))
 (let ((?x912 (* 2 (* (* 2 r) r r))))
 (let ((?x797 (* 2 (* (* (- 1) x) r r))))
 (let ((?x423 (+ ?x371 (* 2 (* q r q q q)) ?x607 ?x700 (* 2 (* (* (- 1) x) r q q q)) ?x734 ?x735 ?x920 ?x797 ?x910 (* 2 (* (* 2 r) r q q q)) ?x912 ?x938 ?x976 ?x1292)))
 (let ((?x1372 (* 2 (* d 4))))
 (let ((?x1379 (* (- 8) d)))
 (let ((?x906 (* (+ ?x1271 ?x384 ?x733 ?x700 ?x734 ?x735 ?x795 ?x797 ?x910 ?x912) (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 ?x1379 ?x1411 ?x1372 ?x1408 ?x1418))))
 (let ((?x993 (* 8 d)))
 (let ((?x287 (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 (* (- 4) (* d 2)) ?x993 ?x1411 ?x1408 ?x1418)))
 (let ((?x1085 (* 2 (* (* (- 1) d) r r))))
 (let ((?x1101 (* 2 ?x740)))
 (let (($x405 (= (* (+ ?x194 ?x700 ?x734 ?x735 ?x1101 ?x797 ?x910 ?x912 ?x1085) ?x287) 0)))
 (let ((?x1078 (* 16 d)))
 (let ((?x1283 (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 (* (- 8) (* d 2)) ?x1078 ?x1411 ?x1408 ?x1418)))
 (let ((?x1067 (* 2 (* (* (- 2) d) r r))))
 (let (($x1028 (= (* (+ ?x563 ?x435 ?x1074 ?x700 ?x734 ?x735 ?x797 ?x910 ?x912 ?x1067) ?x1283) 0)))
 (let (($x1201 (or (not $x1028) (not $x405) (not (= ?x906 0)) (not (= (* ?x423 ?x548) 0)))))
 (let (($x810 (and $x412 $x1201)))
 (rewrite (= $x810 $x190)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x587 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x681 (* 4 (* d00 r00))))
 (let ((?x197 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x254 (* d00 q00)))
 (let ((?x255 (* 2 ?x254)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x205 (* (- 1) ?x41)))
 (let ((?x175 (* d00 x00)))
 (let ((?x189 (* (- 4) ?x175)))
 (let ((?x313 (* 4 (* (+ 2 d) r))))
 (let ((?x157 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x699 (* (- 8) x)))
 (let ((?x402 (* 16 r)))
 (let ((?x198 (+ ?x402 ?x699 ?x30 ?x157 ?x313 ?x189 ?x205 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x255 ?x197 ?x681)))
 (let ((?x478 (+ 2 d)))
 (let ((?x866 (* ?x478 ?x478 r r)))
 (let ((?x154 (* (- 1) x)))
 (let ((?x125 (* 2 r)))
 (let ((?x195 (+ ?x125 ?x154 q)))
 (let ((?x199 (* (+ (* ?x478 ?x195 r q q q) (* ?x478 ?x195 r r) ?x866) ?x198)))
 (let (($x955 (not (= ?x199 0))))
 (let ((?x893 (+ (- 32) ?x402 ?x699 ?x30 (* (- 16) d) ?x157 ?x313 ?x189 ?x205 (* (+ (- 8) q) ?x478 ?x478) (* (- 2) (* (+ (- 8) q) ?x478)) ?x255 (* (- 4) (* ?x478 (+ (- 4) ?x125 ?x154 q (* (- 2) d)))) ?x681)))
 (let ((?x1069 (* (- 2) d)))
 (let ((?x952 (+ (- 4) ?x125 ?x154 q ?x1069)))
 (let ((?x1072 (+ (- 8) q)))
 (let ((?x892 (* (+ (* ?x1072 ?x1072 ?x1072 ?x478 ?x952 r) (* ?x478 ?x952 r r) ?x866) ?x893)))
 (let (($x890 (not (= ?x892 0))))
 (let ((?x993 (* 8 d)))
 (let ((?x825 (+ 16 ?x402 ?x699 ?x30 ?x993 ?x157 ?x313 ?x189 ?x205 (* ?x478 ?x478 (+ 4 q)) (* (- 2) (* ?x478 (+ 4 q))) ?x255 (* (- 4) (* ?x478 (+ 2 ?x125 ?x154 q d))) ?x681)))
 (let ((?x399 (+ 2 ?x125 ?x154 q d)))
 (let ((?x479 (+ 4 q)))
 (let ((?x833 (* (+ (* ?x478 ?x479 ?x479 ?x479 ?x399 r) (* ?x478 ?x399 r r) ?x866) ?x825)))
 (let (($x742 (not (= ?x833 0))))
 (let ((?x1379 (* (- 8) d)))
 (let ((?x327 (+ (- 16) ?x402 ?x699 ?x30 ?x1379 ?x157 ?x313 ?x189 ?x205 (* (+ (- 4) q) ?x478 ?x478) (* (- 2) (* (+ (- 4) q) ?x478)) ?x255 (* (- 4) (* ?x478 (+ (- 2) ?x125 ?x154 q (* (- 1) d)))) ?x681)))
 (let ((?x1107 (* (- 1) d)))
 (let ((?x889 (+ (- 2) ?x125 ?x154 q ?x1107)))
 (let ((?x1100 (+ (- 4) q)))
 (let ((?x328 (* (+ (* ?x1100 ?x1100 ?x1100 ?x478 ?x889 r) (* ?x478 ?x889 r r) ?x866) ?x327)))
 (let (($x351 (not (= ?x328 0))))
 (let ((?x1049 (* 4 (* x d))))
 (let ((?x186 (* 8 r)))
 (let ((?x330 (+ ?x186 ?x157 ?x1049 ?x189 ?x205 (* d d q) (* (- 2) (* d q)) ?x255 (* (- 4) (* d r)) ?x681)))
 (let (($x337 (= ?x330 0)))
 (and $x337 (or $x351 $x742 $x890 $x955)))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1198 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1418 (* q d d)))
 (let ((?x1412 (* r d)))
 (let ((?x1408 (* (- 4) ?x1412)))
 (let ((?x1411 (* (- 2) (* q d))))
 (let ((?x1049 (* 4 (* x d))))
 (let ((?x292 (* r00 d00)))
 (let ((?x293 (* 4 ?x292)))
 (let ((?x254 (* d00 q00)))
 (let ((?x255 (* 2 ?x254)))
 (let ((?x175 (* d00 x00)))
 (let ((?x189 (* (- 4) ?x175)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x205 (* (- 1) ?x41)))
 (let ((?x157 (* (- 8) r00)))
 (let ((?x186 (* 8 r)))
 (let ((?x548 (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 ?x1411 ?x1408 ?x1418)))
 (let ((?x1292 (* (- 1) (* q q q r x d))))
 (let ((?x976 (* 2 (* q q q r r d))))
 (let ((?x938 (* q q q q r d)))
 (let ((?x912 (* 2 (* (* 2 r) r r))))
 (let ((?x910 (* 2 (* q r r))))
 (let ((?x797 (* 2 (* (* (- 1) x) r r))))
 (let ((?x740 (* r r d)))
 (let ((?x920 (* 4 ?x740)))
 (let ((?x735 (* 2 (* r r r d))))
 (let ((?x734 (* q r r d)))
 (let ((?x700 (* (- 1) (* r r x d))))
 (let ((?x607 (* r r d d)))
 (let ((?x370 (* r r)))
 (let ((?x371 (* 4 ?x370)))
 (let ((?x423 (+ ?x371 (* 2 (* q r q q q)) ?x607 ?x700 (* 2 (* (* (- 1) x) r q q q)) ?x734 ?x735 ?x920 ?x797 ?x910 (* 2 (* (* 2 r) r q q q)) ?x912 ?x938 ?x976 ?x1292)))
 (let ((?x1372 (* 2 (* d 4))))
 (let ((?x1379 (* (- 8) d)))
 (let ((?x795 (* 8 ?x740)))
 (let ((?x733 (* 2 ?x607)))
 (let ((?x479 (+ 4 q)))
 (let ((?x478 (+ 2 d)))
 (let ((?x384 (* ?x478 ?x479 ?x479 ?x479 (+ 2 q (* 2 r) (* (- 1) x) d) r)))
 (let ((?x1271 (* 8 ?x370)))
 (let ((?x906 (* (+ ?x1271 ?x384 ?x733 ?x700 ?x734 ?x735 ?x795 ?x797 ?x910 ?x912) (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 ?x1379 ?x1411 ?x1372 ?x1408 ?x1418))))
 (let ((?x993 (* 8 d)))
 (let ((?x287 (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 (* (- 4) (* d 2)) ?x993 ?x1411 ?x1408 ?x1418)))
 (let ((?x1085 (* 2 (* (* (- 1) d) r r))))
 (let ((?x1101 (* 2 ?x740)))
 (let ((?x1100 (+ (- 4) q)))
 (let ((?x194 (* ?x1100 ?x1100 ?x1100 ?x478 (+ (- 2) q (* 2 r) (* (- 1) x) (* (- 1) d)) r)))
 (let (($x405 (= (* (+ ?x194 ?x700 ?x734 ?x735 ?x1101 ?x797 ?x910 ?x912 ?x1085) ?x287) 0)))
 (let ((?x1078 (* 16 d)))
 (let ((?x1283 (+ ?x186 ?x157 ?x205 ?x189 ?x255 ?x293 ?x1049 (* (- 8) (* d 2)) ?x1078 ?x1411 ?x1408 ?x1418)))
 (let ((?x1067 (* 2 (* (* (- 2) d) r r))))
 (let ((?x1074 (* (- 1) ?x607)))
 (let ((?x1072 (+ (- 8) q)))
 (let ((?x435 (* ?x1072 ?x1072 ?x1072 ?x478 (+ (- 4) q (* 2 r) (* (- 1) x) (* (- 2) d)) r)))
 (let ((?x563 (* (- 4) ?x370)))
 (let (($x1028 (= (* (+ ?x563 ?x435 ?x1074 ?x700 ?x734 ?x735 ?x797 ?x910 ?x912 ?x1067) ?x1283) 0)))
 (let (($x1201 (or (not $x1028) (not $x405) (not (= ?x906 0)) (not (= (* ?x423 ?x548) 0)))))
 (let (($x412 (= ?x548 0)))
 (let (($x810 (and $x412 $x1201)))
 (let ((?x681 (* 4 (* d00 r00))))
 (let ((?x313 (* 4 (* ?x478 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x699 (* (- 8) x)))
 (let ((?x402 (* 16 r)))
 (let ((?x198 (+ ?x402 ?x699 ?x30 ?x157 ?x313 ?x189 ?x205 (* ?x478 ?x478 q) (* (- 2) (* ?x478 q)) ?x255 (* (- 4) (* ?x478 (+ (* 2 r) (* (- 1) x) q))) ?x681)))
 (let ((?x866 (* ?x478 ?x478 r r)))
 (let ((?x154 (* (- 1) x)))
 (let ((?x125 (* 2 r)))
 (let ((?x195 (+ ?x125 ?x154 q)))
 (let ((?x199 (* (+ (* ?x478 ?x195 r q q q) (* ?x478 ?x195 r r) ?x866) ?x198)))
 (let (($x955 (not (= ?x199 0))))
 (let ((?x893 (+ (- 32) ?x402 ?x699 ?x30 (* (- 16) d) ?x157 ?x313 ?x189 ?x205 (* ?x1072 ?x478 ?x478) (* (- 2) (* ?x1072 ?x478)) ?x255 (* (- 4) (* ?x478 (+ (- 4) ?x125 ?x154 q (* (- 2) d)))) ?x681)))
 (let ((?x1069 (* (- 2) d)))
 (let ((?x952 (+ (- 4) ?x125 ?x154 q ?x1069)))
 (let ((?x892 (* (+ (* ?x1072 ?x1072 ?x1072 ?x478 ?x952 r) (* ?x478 ?x952 r r) ?x866) ?x893)))
 (let (($x890 (not (= ?x892 0))))
 (let ((?x825 (+ 16 ?x402 ?x699 ?x30 ?x993 ?x157 ?x313 ?x189 ?x205 (* ?x478 ?x478 ?x479) (* (- 2) (* ?x478 ?x479)) ?x255 (* (- 4) (* ?x478 (+ 2 ?x125 ?x154 q d))) ?x681)))
 (let ((?x153 (+ (* ?x478 ?x479 ?x479 ?x479 (+ 2 ?x125 ?x154 q d) r) (* ?x478 (+ 2 ?x125 ?x154 q d) r r) ?x866)))
 (let (($x742 (not (= (* ?x153 ?x825) 0))))
 (let ((?x327 (+ (- 16) ?x402 ?x699 ?x30 ?x1379 ?x157 ?x313 ?x189 ?x205 (* ?x1100 ?x478 ?x478) (* (- 2) (* ?x1100 ?x478)) ?x255 (* (- 4) (* ?x478 (+ (- 2) ?x125 ?x154 q (* (- 1) d)))) ?x681)))
 (let ((?x1107 (* (- 1) d)))
 (let ((?x889 (+ (- 2) ?x125 ?x154 q ?x1107)))
 (let ((?x328 (* (+ (* ?x1100 ?x1100 ?x1100 ?x478 ?x889 r) (* ?x478 ?x889 r r) ?x866) ?x327)))
 (let (($x351 (not (= ?x328 0))))
 (let ((?x330 (+ ?x186 ?x157 ?x1049 ?x189 ?x205 (* d d q) (* (- 2) (* d q)) ?x255 (* (- 4) (* d r)) ?x681)))
 (let (($x337 (= ?x330 0)))
 (let (($x492 (and $x337 (or $x351 $x742 $x890 $x955))))
 (rewrite (= $x492 $x810)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x352 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x681 (* 4 (* d00 r00))))
 (let ((?x1107 (* (- 1) d)))
 (let ((?x154 (* (- 1) x)))
 (let ((?x125 (* 2 r)))
 (let ((?x889 (+ (- 2) ?x125 ?x154 q ?x1107)))
 (let ((?x478 (+ 2 d)))
 (let ((?x254 (* d00 q00)))
 (let ((?x255 (* 2 ?x254)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x205 (* (- 1) ?x41)))
 (let ((?x175 (* d00 x00)))
 (let ((?x189 (* (- 4) ?x175)))
 (let ((?x313 (* 4 (* ?x478 r))))
 (let ((?x157 (* (- 8) r00)))
 (let ((?x1379 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x699 (* (- 8) x)))
 (let ((?x402 (* 16 r)))
 (let ((?x327 (+ (- 16) ?x402 ?x699 ?x30 ?x1379 ?x157 ?x313 ?x189 ?x205 (* (+ (- 4) q) ?x478 ?x478) (* (- 2) (* (+ (- 4) q) ?x478)) ?x255 (* (- 4) (* ?x478 ?x889)) ?x681)))
 (let ((?x866 (* ?x478 ?x478 r r)))
 (let ((?x308 (+ (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) ?x478 ?x889 r) (* ?x478 ?x889 r r) ?x866)))
 (let (($x351 (not (= (* ?x308 ?x327) 0))))
 (let ((?x893 (+ (- 32) ?x402 ?x699 ?x30 (* (- 16) d) ?x157 ?x313 ?x189 ?x205 (* (+ (- 8) q) ?x478 ?x478) (* (- 2) (* (+ (- 8) q) ?x478)) ?x255 (* (- 4) (* ?x478 (+ (- 4) ?x125 ?x154 q (* (- 2) d)))) ?x681)))
 (let ((?x1069 (* (- 2) d)))
 (let ((?x952 (+ (- 4) ?x125 ?x154 q ?x1069)))
 (let ((?x1072 (+ (- 8) q)))
 (let ((?x892 (* (+ (* ?x1072 ?x1072 ?x1072 ?x478 ?x952 r) (* ?x478 ?x952 r r) ?x866) ?x893)))
 (let (($x890 (not (= ?x892 0))))
 (let ((?x198 (+ ?x402 ?x699 ?x30 ?x157 ?x313 ?x189 ?x205 (* ?x478 ?x478 q) (* (- 2) (* ?x478 q)) ?x255 (* (- 4) (* ?x478 (+ ?x125 ?x154 q))) ?x681)))
 (let ((?x653 (+ (* ?x478 (+ ?x125 ?x154 q) r q q q) (* ?x478 (+ ?x125 ?x154 q) r r) ?x866)))
 (let (($x955 (not (= (* ?x653 ?x198) 0))))
 (let ((?x993 (* 8 d)))
 (let ((?x825 (+ 16 ?x402 ?x699 ?x30 ?x993 ?x157 ?x313 ?x189 ?x205 (* ?x478 ?x478 (+ 4 q)) (* (- 2) (* ?x478 (+ 4 q))) ?x255 (* (- 4) (* ?x478 (+ 2 ?x125 ?x154 q d))) ?x681)))
 (let ((?x399 (+ 2 ?x125 ?x154 q d)))
 (let ((?x479 (+ 4 q)))
 (let ((?x833 (* (+ (* ?x478 ?x479 ?x479 ?x479 ?x399 r) (* ?x478 ?x399 r r) ?x866) ?x825)))
 (let (($x742 (not (= ?x833 0))))
 (let ((?x1049 (* 4 (* x d))))
 (let ((?x186 (* 8 r)))
 (let ((?x330 (+ ?x186 ?x157 ?x1049 ?x189 ?x205 (* d d q) (* (- 2) (* d q)) ?x255 (* (- 4) (* d r)) ?x681)))
 (let (($x337 (= ?x330 0)))
 (and $x337 (or $x742 $x955 $x890 $x351))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x488 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x681 (* 4 (* d00 r00))))
 (let ((?x197 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x254 (* d00 q00)))
 (let ((?x255 (* 2 ?x254)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x205 (* (- 1) ?x41)))
 (let ((?x175 (* d00 x00)))
 (let ((?x189 (* (- 4) ?x175)))
 (let ((?x313 (* 4 (* (+ 2 d) r))))
 (let ((?x157 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x699 (* (- 8) x)))
 (let ((?x402 (* 16 r)))
 (let ((?x198 (+ ?x402 ?x699 ?x30 ?x157 ?x313 ?x189 ?x205 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x255 ?x197 ?x681)))
 (let ((?x478 (+ 2 d)))
 (let ((?x866 (* ?x478 ?x478 r r)))
 (let ((?x154 (* (- 1) x)))
 (let ((?x125 (* 2 r)))
 (let ((?x195 (+ ?x125 ?x154 q)))
 (let ((?x199 (* (+ (* ?x478 ?x195 r q q q) (* ?x478 ?x195 r r) ?x866) ?x198)))
 (let (($x955 (not (= ?x199 0))))
 (let ((?x893 (+ (- 32) ?x402 ?x699 ?x30 (* (- 16) d) ?x157 ?x313 ?x189 ?x205 (* (+ (- 8) q) ?x478 ?x478) (* (- 2) (* (+ (- 8) q) ?x478)) ?x255 (* (- 4) (* ?x478 (+ (- 4) ?x125 ?x154 q (* (- 2) d)))) ?x681)))
 (let ((?x1069 (* (- 2) d)))
 (let ((?x952 (+ (- 4) ?x125 ?x154 q ?x1069)))
 (let ((?x1072 (+ (- 8) q)))
 (let ((?x892 (* (+ (* ?x1072 ?x1072 ?x1072 ?x478 ?x952 r) (* ?x478 ?x952 r r) ?x866) ?x893)))
 (let (($x890 (not (= ?x892 0))))
 (let ((?x993 (* 8 d)))
 (let ((?x825 (+ 16 ?x402 ?x699 ?x30 ?x993 ?x157 ?x313 ?x189 ?x205 (* ?x478 ?x478 (+ 4 q)) (* (- 2) (* ?x478 (+ 4 q))) ?x255 (* (- 4) (* ?x478 (+ 2 ?x125 ?x154 q d))) ?x681)))
 (let ((?x399 (+ 2 ?x125 ?x154 q d)))
 (let ((?x479 (+ 4 q)))
 (let ((?x833 (* (+ (* ?x478 ?x479 ?x479 ?x479 ?x399 r) (* ?x478 ?x399 r r) ?x866) ?x825)))
 (let (($x742 (not (= ?x833 0))))
 (let ((?x1379 (* (- 8) d)))
 (let ((?x327 (+ (- 16) ?x402 ?x699 ?x30 ?x1379 ?x157 ?x313 ?x189 ?x205 (* (+ (- 4) q) ?x478 ?x478) (* (- 2) (* (+ (- 4) q) ?x478)) ?x255 (* (- 4) (* ?x478 (+ (- 2) ?x125 ?x154 q (* (- 1) d)))) ?x681)))
 (let ((?x1107 (* (- 1) d)))
 (let ((?x889 (+ (- 2) ?x125 ?x154 q ?x1107)))
 (let ((?x1100 (+ (- 4) q)))
 (let ((?x328 (* (+ (* ?x1100 ?x1100 ?x1100 ?x478 ?x889 r) (* ?x478 ?x889 r r) ?x866) ?x327)))
 (let (($x351 (not (= ?x328 0))))
 (let ((?x1049 (* 4 (* x d))))
 (let ((?x186 (* 8 r)))
 (let ((?x330 (+ ?x186 ?x157 ?x1049 ?x189 ?x205 (* d d q) (* (- 2) (* d q)) ?x255 (* (- 4) (* d r)) ?x681)))
 (let (($x337 (= ?x330 0)))
 (let (($x492 (and $x337 (or $x351 $x742 $x890 $x955))))
 (let (($x367 (and $x337 (or $x742 $x955 $x890 $x351))))
 (rewrite (= $x367 $x492)))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x150 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x62 (+ d 2)))
 (let ((?x78 (* ?x62 ?x62 r r)))
 (let ((?x127 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x144 (+ (* ?x62 (- q 8) (- q 8) (- q 8) ?x127 r) (* ?x62 ?x127 r r) ?x78)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x131 (- (+ (- (* 8 ?x127) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x137 (- (+ (- ?x131 ?x41) (* ?x62 ?x62 (- q 8))) (* 2 ?x62 (- q 8)))))
 (let (($x147 (not (= (* (+ (- (+ ?x137 ?x49) (* 4 ?x62 ?x127)) ?x53) ?x144) 0))))
 (let ((?x104 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x121 (+ (* ?x62 (- q 4) (- q 4) (- q 4) ?x104 r) (* ?x62 ?x104 r r) ?x78)))
 (let ((?x108 (- (+ (- (* 8 ?x104) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x114 (- (+ (- ?x108 ?x41) (* ?x62 ?x62 (- q 4))) (* 2 ?x62 (- q 4)))))
 (let (($x124 (not (= (* (+ (- (+ ?x114 ?x49) (* 4 ?x62 ?x104)) ?x53) ?x121) 0))))
 (let ((?x99 (+ (* ?x62 q q q (+ (- (* 2 r) x) q) r) (* ?x62 (+ (- (* 2 r) x) q) r r) ?x78)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x86 (+ (- (* 8 (+ (- (* 2 r) x) q)) (* 8 r00)) ?x63)))
 (let ((?x92 (- (+ (- (- ?x86 ?x39) ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q))))
 (let ((?x96 (+ (- (+ ?x92 ?x49) (* 4 ?x62 (+ (- (* 2 r) x) q))) ?x53)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x69 (+ (- (- (+ (- (* 8 ?x59) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x67))))
 (let ((?x75 (+ (- (+ (- ?x69 (* 2 ?x62 ?x67)) ?x49) (* 4 ?x62 ?x59)) ?x53)))
 (let ((?x80 (* ?x75 (+ (* ?x62 ?x67 ?x67 ?x67 ?x59 r) (* ?x62 ?x59 r r) ?x78))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) (or (not (= ?x80 0)) (not (= (* ?x96 ?x99) 0)) $x124 $x147))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x487 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x681 (* 4 (* d00 r00))))
 (let ((?x820 (* (- 1) d)))
 (let ((?x154 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x374 (+ (- 2) ?x57 ?x154 q ?x820)))
 (let ((?x260 (+ 2 d)))
 (let ((?x254 (* d00 q00)))
 (let ((?x255 (* 2 ?x254)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x205 (* (- 1) ?x41)))
 (let ((?x175 (* d00 x00)))
 (let ((?x189 (* (- 4) ?x175)))
 (let ((?x580 (* 4 (* ?x260 r))))
 (let ((?x157 (* (- 8) r00)))
 (let ((?x447 (* (- 8) d)))
 (let ((?x510 (* 8 q)))
 (let ((?x699 (* (- 8) x)))
 (let ((?x715 (* 16 r)))
 (let ((?x196 (+ (- 16) ?x715 ?x699 ?x510 ?x447 ?x157 ?x580 ?x189 ?x205 (* (+ (- 4) q) ?x260 ?x260) (* (- 2) (* (+ (- 4) q) ?x260)) ?x255 (* (- 4) (* ?x260 ?x374)) ?x681)))
 (let ((?x999 (* ?x260 ?x260 r r)))
 (let ((?x953 (+ (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) ?x260 ?x374 r) (* ?x260 ?x374 r r) ?x999)))
 (let ((?x1150 (+ (- 32) ?x715 ?x699 ?x510 (* (- 16) d) ?x157 ?x580 ?x189 ?x205 (* (+ (- 8) q) ?x260 ?x260) (* (- 2) (* (+ (- 8) q) ?x260)) ?x255 (* (- 4) (* ?x260 (+ (- 4) ?x57 ?x154 q (* (- 2) d)))) ?x681)))
 (let ((?x1130 (* (- 2) d)))
 (let ((?x1077 (+ (- 4) ?x57 ?x154 q ?x1130)))
 (let ((?x1053 (+ (- 8) q)))
 (let ((?x1144 (* (+ (* ?x1053 ?x1053 ?x1053 ?x260 ?x1077 r) (* ?x260 ?x1077 r r) ?x999) ?x1150)))
 (let ((?x1076 (+ ?x715 ?x699 ?x510 ?x157 ?x580 ?x189 ?x205 (* ?x260 ?x260 q) (* (- 2) (* ?x260 q)) ?x255 (* (- 4) (* ?x260 (+ ?x57 ?x154 q))) ?x681)))
 (let ((?x1055 (+ (* ?x260 (+ ?x57 ?x154 q) r q q q) (* ?x260 (+ ?x57 ?x154 q) r r) ?x999)))
 (let ((?x186 (* 8 d)))
 (let ((?x985 (+ 16 ?x715 ?x699 ?x510 ?x186 ?x157 ?x580 ?x189 ?x205 (* ?x260 ?x260 (+ 4 q)) (* (- 2) (* ?x260 (+ 4 q))) ?x255 (* (- 4) (* ?x260 (+ 2 ?x57 ?x154 q d))) ?x681)))
 (let ((?x482 (+ 2 ?x57 ?x154 q d)))
 (let ((?x344 (+ 4 q)))
 (let ((?x989 (* (+ (* ?x260 ?x344 ?x344 ?x344 ?x482 r) (* ?x260 ?x482 r r) ?x999) ?x985)))
 (let (($x332 (or (not (= ?x989 0)) (not (= (* ?x1055 ?x1076) 0)) (not (= ?x1144 0)) (not (= (* ?x953 ?x196) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x668 (+ ?x30 ?x157 (* 4 (* x d)) ?x189 ?x205 ?x44 (* (- 2) (* d q)) ?x255 (* (- 4) (* d r)) ?x681)))
 (and (= ?x668 0) $x332)))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x484 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x681 (* 4 (* d00 r00))))
 (let ((?x820 (* (- 1) d)))
 (let ((?x154 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x374 (+ (- 2) ?x57 ?x154 q ?x820)))
 (let ((?x260 (+ 2 d)))
 (let ((?x254 (* d00 q00)))
 (let ((?x255 (* 2 ?x254)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x205 (* (- 1) ?x41)))
 (let ((?x175 (* d00 x00)))
 (let ((?x189 (* (- 4) ?x175)))
 (let ((?x580 (* 4 (* ?x260 r))))
 (let ((?x157 (* (- 8) r00)))
 (let ((?x447 (* (- 8) d)))
 (let ((?x510 (* 8 q)))
 (let ((?x699 (* (- 8) x)))
 (let ((?x715 (* 16 r)))
 (let ((?x196 (+ (- 16) ?x715 ?x699 ?x510 ?x447 ?x157 ?x580 ?x189 ?x205 (* (+ (- 4) q) ?x260 ?x260) (* (- 2) (* (+ (- 4) q) ?x260)) ?x255 (* (- 4) (* ?x260 ?x374)) ?x681)))
 (let ((?x999 (* ?x260 ?x260 r r)))
 (let ((?x953 (+ (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) ?x260 ?x374 r) (* ?x260 ?x374 r r) ?x999)))
 (let ((?x1150 (+ (- 32) ?x715 ?x699 ?x510 (* (- 16) d) ?x157 ?x580 ?x189 ?x205 (* (+ (- 8) q) ?x260 ?x260) (* (- 2) (* (+ (- 8) q) ?x260)) ?x255 (* (- 4) (* ?x260 (+ (- 4) ?x57 ?x154 q (* (- 2) d)))) ?x681)))
 (let ((?x1130 (* (- 2) d)))
 (let ((?x1077 (+ (- 4) ?x57 ?x154 q ?x1130)))
 (let ((?x1053 (+ (- 8) q)))
 (let ((?x1144 (* (+ (* ?x1053 ?x1053 ?x1053 ?x260 ?x1077 r) (* ?x260 ?x1077 r r) ?x999) ?x1150)))
 (let ((?x1076 (+ ?x715 ?x699 ?x510 ?x157 ?x580 ?x189 ?x205 (* ?x260 ?x260 q) (* (- 2) (* ?x260 q)) ?x255 (* (- 4) (* ?x260 (+ ?x57 ?x154 q))) ?x681)))
 (let ((?x1055 (+ (* ?x260 (+ ?x57 ?x154 q) r q q q) (* ?x260 (+ ?x57 ?x154 q) r r) ?x999)))
 (let ((?x186 (* 8 d)))
 (let ((?x985 (+ 16 ?x715 ?x699 ?x510 ?x186 ?x157 ?x580 ?x189 ?x205 (* ?x260 ?x260 (+ 4 q)) (* (- 2) (* ?x260 (+ 4 q))) ?x255 (* (- 4) (* ?x260 (+ 2 ?x57 ?x154 q d))) ?x681)))
 (let ((?x482 (+ 2 ?x57 ?x154 q d)))
 (let ((?x344 (+ 4 q)))
 (let ((?x989 (* (+ (* ?x260 ?x344 ?x344 ?x344 ?x482 r) (* ?x260 ?x482 r r) ?x999) ?x985)))
 (let (($x332 (or (not (= ?x989 0)) (not (= (* ?x1055 ?x1076) 0)) (not (= ?x1144 0)) (not (= (* ?x953 ?x196) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x668 (+ ?x30 ?x157 (* 4 (* x d)) ?x189 ?x205 ?x44 (* (- 2) (* d q)) ?x255 (* (- 4) (* d r)) ?x681)))
 (let (($x395 (and (= ?x668 0) $x332)))
 (let ((?x62 (+ d 2)))
 (let ((?x78 (* ?x62 ?x62 r r)))
 (let ((?x127 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x144 (+ (* ?x62 (- q 8) (- q 8) (- q 8) ?x127 r) (* ?x62 ?x127 r r) ?x78)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x131 (- (+ (- (* 8 ?x127) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x137 (- (+ (- ?x131 ?x41) (* ?x62 ?x62 (- q 8))) (* 2 ?x62 (- q 8)))))
 (let (($x147 (not (= (* (+ (- (+ ?x137 ?x49) (* 4 ?x62 ?x127)) ?x53) ?x144) 0))))
 (let ((?x104 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x110 (- q 4)))
 (let ((?x108 (- (+ (- (* 8 ?x104) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x115 (+ (- (+ (- ?x108 ?x41) (* ?x62 ?x62 ?x110)) (* 2 ?x62 ?x110)) ?x49)))
 (let ((?x122 (* (+ (- ?x115 (* 4 ?x62 ?x104)) ?x53) (+ (* ?x62 ?x110 ?x110 ?x110 ?x104 r) (* ?x62 ?x104 r r) ?x78))))
 (let ((?x99 (+ (* ?x62 q q q (+ (- ?x57 x) q) r) (* ?x62 (+ (- ?x57 x) q) r r) ?x78)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x87 (- (+ (- (* 8 (+ (- ?x57 x) q)) (* 8 r00)) ?x63) ?x39)))
 (let ((?x93 (+ (- (+ (- ?x87 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let (($x101 (= (* (+ (- ?x93 (* 4 ?x62 (+ (- ?x57 x) q))) ?x53) ?x99) 0)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x69 (+ (- (- (+ (- (* 8 ?x59) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x67))))
 (let ((?x75 (+ (- (+ (- ?x69 (* 2 ?x62 ?x67)) ?x49) (* 4 ?x62 ?x59)) ?x53)))
 (let ((?x80 (* ?x75 (+ (* ?x62 ?x67 ?x67 ?x67 ?x59 r) (* ?x62 ?x59 r r) ?x78))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x149 (and (= ?x54 0) (or (not (= ?x80 0)) (not $x101) (not (= ?x122 0)) $x147))))
 (rewrite (= $x149 $x395))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x361 (trans (quant-intro (proof-bind ?x484) (= $x150 $x487)) (elim-unused (= $x487 $x352)) (= $x150 $x352))))
 (let ((@x27 (asserted $x150)))
 (let ((@x879 (mp (mp @x27 @x361 $x352) (quant-intro (proof-bind ?x488) (= $x352 $x587)) $x587)))
 (let ((@x732 (mp (mp @x879 (rewrite (= $x587 $x587)) $x587) (quant-intro (proof-bind ?x1198) (= $x587 $x416)) $x416)))
 (let ((@x204 (mp~ (mp @x732 (quant-intro (proof-bind ?x210) (= $x416 $x799)) $x799) (sk (~ $x799 $x1389)) $x1389)))
 (let ((@x319 (mp @x204 (rewrite (= $x1389 $x269)) $x269)))
 (let ((@x1195 (and-elim @x319 $x963)))
 (let ((@x1147 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x963) $x393)) @x1195 $x393)))
 (let (($x1134 (<= ?x690 0)))
 (let ((@x547 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x963) $x1134)) @x1195 $x1134)))
 (let (($x217 (not (<= ?x158 0))))
 (let (($x643 (<= ?x483 0)))
 (let (($x1137 (>= ?x483 0)))
 (let ((@x1127 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x821 (not $x643) (not $x1137))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1137)) @x547 @x1147 false) $x1137) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x643)) @x547 @x1147 false) $x643) $x821)))
 (let (($x1139 (>= ?x1115 0)))
 (let (($x349 (<= ?x1115 0)))
 (let ((@x1129 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1194 (not $x349) (not $x1139))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x349)) @x547 @x1147 false) $x349) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1139)) @x547 @x1147 false) $x1139) $x1194)))
 (let (($x306 (>= ?x418 0)))
 (let (($x348 (<= ?x418 0)))
 (let ((@x273 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x511 (not $x348) (not $x306))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x348)) @x547 @x1147 false) $x348) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x306)) @x547 @x1147 false) $x306) $x511)))
 (let ((@x387 (unit-resolution (unit-resolution (and-elim @x319 $x844) @x273 @x1129 (or $x225 $x575)) @x1127 $x575)))
 (let (($x245 (>= ?x158 0)))
 (let ((@x986 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1170 $x217 (not $x245))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x245)) @x547 @x1147 false) $x245) @x387 $x217)))
 ((_ th-lemma arith farkas 1 1 1) @x986 @x547 @x1147 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        7
 :arith-assert-lower        50
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          7
 :arith-fixed-eqs           12
 :arith-grobner             2
 :arith-max-min             768
 :arith-nonlinear-bounds    12
 :arith-nonlinear-horner    12
 :arith-num-rows            13
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 58
 :arith-tableau-max-rows    13
 :conflicts                 8
 :decisions                 24
 :del-clause                19
 :final-checks              8
 :max-memory                3.73
 :memory                    3.21
 :mk-bool-var               27
 :mk-clause                 28
 :num-allocs                1385962
 :num-checks                1
 :propagations              36
 :rlimit-count              9060
 :time                      0.01
 :total-time                0.02)
