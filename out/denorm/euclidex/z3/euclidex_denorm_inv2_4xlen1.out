unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(declare-fun s!0 () Int)
(declare-fun q!3 () Int)
(declare-fun p!5 () Int)
(proof
(let ((?x776 (* b!2 r!1)))
 (let ((?x122 (* s00 a00)))
 (let ((?x278 (+ ?x122 (* (- 1) (* r00 b00)) (* (- 1) (* s!0 a!4)) ?x776)))
 (let (($x777 (>= ?x278 0)))
 (let (($x137 (= ?x278 0)))
 (let ((?x755 (* (- 1) ?x776)))
 (let ((?x337 (* s!0 a!4)))
 (let ((?x140 (* r00 b00)))
 (let ((?x129 (* (- 1) ?x122)))
 (let ((?x265 (+ ?x129 ?x140 ?x337 ?x755)))
 (let ((?x841 (+ p!5 (* (- 1) q!3))))
 (let ((?x751 (+ a!4 (* (- 1) b!2))))
 (let ((?x737 (* (- 1) s!0)))
 (let ((?x861 (+ ?x737 r!1)))
 (let ((?x857 (* ?x861 ?x861 ?x861 ?x861 ?x861 ?x861 ?x861 ?x751 ?x751 ?x751 ?x751 ?x751 ?x751 ?x751 ?x841 ?x841 ?x841 ?x841 ?x841 ?x841 ?x841 ?x265 s!0 s!0 s!0 s!0 s!0 s!0 s!0 s!0 s!0 b!2 b!2 b!2 b!2 b!2 b!2 b!2 q!3 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let (($x855 (= ?x857 0)))
 (let ((?x316 (+ (* (- 1) p!5) q!3)))
 (let ((?x772 (+ (* (- 1) a!4) b!2)))
 (let ((?x164 (* (- 1) r!1)))
 (let ((?x217 (+ s!0 ?x164)))
 (let ((?x158 (* ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x772 ?x772 ?x772 ?x772 ?x772 ?x772 ?x772 ?x316 ?x316 ?x316 ?x316 ?x316 ?x316 ?x316 ?x265 r!1 r!1 r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4 a!4 a!4 a!4 p!5 p!5 p!5 p!5 p!5 p!5 p!5)))
 (let (($x766 (= ?x158 0)))
 (let (($x267 (not $x766)))
 (let (($x869 (or $x267 (not $x855))))
 (let ((?x874 (+ (* p00 b00 s!0) (* (- 1) (* p00 s00 b!2)) (* q00 r00 b!2) (* (- 1) (* r00 b00 q!3)) (* (- 1) (* q00 a00 s!0)) (* s00 a00 q!3))))
 (let ((?x734 (+ (* p00 s00 a!4) (* (- 1) (* s00 a00 p!5)) (* q00 a00 r!1) (* (- 1) (* p00 b00 r!1)) (* (- 1) (* q00 r00 a!4)) (* r00 b00 p!5))))
 (let ((?x133 (* p00 b00)))
 (let ((?x174 (* (- 1) (* q00 a00))))
 (let (($x757 (= (+ (* a!4 q!3) ?x174 ?x133 (* (- 1) (* p!5 b!2))) 0)))
 (let ((?x153 (* q!3 r!1)))
 (let ((?x41 (* q00 r00)))
 (let ((?x296 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x890 (and (= (+ ?x37 ?x296 ?x153 (* (- 1) (* s!0 p!5))) 0) $x137 $x757 (= ?x734 0) (= ?x874 0) $x869)))
 (let ((?x196 (+ (* a!4 s!0) ?x755 ?x129 ?x140)))
 (let ((?x733 (+ r!1 ?x737)))
 (let ((?x829 (* ?x733 ?x733 ?x733 ?x733 ?x733 ?x733 ?x733 ?x751 ?x751 ?x751 ?x751 ?x751 ?x751 ?x751 ?x841 ?x841 ?x841 ?x841 ?x841 ?x841 ?x841 ?x196 s!0 s!0 s!0 s!0 s!0 s!0 s!0 s!0 s!0 b!2 b!2 b!2 b!2 b!2 b!2 b!2 q!3 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x178 (+ ?x164 s!0)))
 (let ((?x784 (* ?x178 ?x178 ?x178 ?x178 ?x178 ?x178 ?x178 ?x178 ?x178 ?x772 ?x772 ?x772 ?x772 ?x772 ?x772 ?x772 ?x316 ?x316 ?x316 ?x316 ?x316 ?x316 ?x316 ?x196 r!1 r!1 r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4 a!4 a!4 a!4 p!5 p!5 p!5 p!5 p!5 p!5 p!5)))
 (let ((?x764 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x228 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let (($x839 (and (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) ?x153)) 0) (= ?x196 0) $x757 (= ?x228 0) (= ?x764 0) (or (not (= ?x784 0)) (not (= ?x829 0))))))
 (let (($x173 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x140 (* r00 b00)))
 (let ((?x122 (* s00 a00)))
 (let ((?x129 (* (- 1) ?x122)))
 (let ((?x117 (* (- 1) (* b r))))
 (let ((?x49 (* a s)))
 (let ((?x147 (+ ?x49 ?x117 ?x129 ?x140)))
 (let ((?x328 (+ p (* (- 1) q))))
 (let ((?x291 (+ a (* (- 1) b))))
 (let ((?x252 (* (- 1) s)))
 (let ((?x254 (+ r ?x252)))
 (let ((?x872 (* ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x147 s s s s s s s s s b b b b b b b q q q q q q q)))
 (let ((?x747 (* (- 1) p)))
 (let ((?x743 (+ ?x747 q)))
 (let ((?x788 (* (- 1) a)))
 (let ((?x268 (+ ?x788 b)))
 (let ((?x338 (* (- 1) r)))
 (let ((?x783 (+ ?x338 s)))
 (let ((?x820 (* ?x783 ?x783 ?x783 ?x783 ?x783 ?x783 ?x783 ?x783 ?x783 ?x268 ?x268 ?x268 ?x268 ?x268 ?x268 ?x268 ?x743 ?x743 ?x743 ?x743 ?x743 ?x743 ?x743 ?x147 r r r r r r r a a a a a a a p p p p p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x306 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x311 (= ?x306 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x242 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x243 (= ?x242 0)))
 (let ((?x133 (* p00 b00)))
 (let ((?x174 (* (- 1) (* q00 a00))))
 (let (($x177 (= (+ (* a q) ?x174 ?x133 (* (- 1) (* p b))) 0)))
 (let (($x155 (= ?x147 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x131 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x150 (= (+ ?x33 ?x131 ?x41 (* (- 1) (* q r))) 0)))
 (and $x150 $x155 $x177 $x243 $x311 (or (not (= ?x820 0)) (not (= ?x872 0))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x216 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x119 (* (- 1) ?x47)))
 (let ((?x182 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x119 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x328 (+ p (* (- 1) q))))
 (let ((?x291 (+ a (* (- 1) b))))
 (let ((?x252 (* (- 1) s)))
 (let ((?x254 (+ r ?x252)))
 (let ((?x215 (* ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x182 s s s s s s s s s b b b b b b b q q q q q q q)))
 (let ((?x229 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x119 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x747 (* (- 1) p)))
 (let ((?x237 (+ q ?x747)))
 (let ((?x788 (* (- 1) a)))
 (let ((?x222 (+ b ?x788)))
 (let ((?x338 (* (- 1) r)))
 (let ((?x187 (+ s ?x338)))
 (let ((?x113 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x222 ?x222 ?x222 ?x222 ?x222 ?x222 ?x222 ?x237 ?x237 ?x237 ?x237 ?x237 ?x237 ?x237 ?x229 r r r r r r r a a a a a a a p p p p p p p)))
 (let (($x271 (or (not (= ?x113 0)) (not (= ?x215 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x199 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x209 (= ?x199 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x761 (* p00 s00 a)))
 (let ((?x124 (* b00 r00 p)))
 (let ((?x314 (+ ?x124 ?x761 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x303 (* q a)))
 (let (($x308 (= (+ ?x303 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x782 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x296 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x301 (* r q)))
 (and (= (+ ?x301 (* (- 1) (* s p)) ?x37 ?x296) 0) $x782 $x308 (= ?x314 0) $x209 $x271)))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x179 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x140 (* r00 b00)))
 (let ((?x122 (* s00 a00)))
 (let ((?x129 (* (- 1) ?x122)))
 (let ((?x117 (* (- 1) (* b r))))
 (let ((?x49 (* a s)))
 (let ((?x147 (+ ?x49 ?x117 ?x129 ?x140)))
 (let ((?x328 (+ p (* (- 1) q))))
 (let ((?x291 (+ a (* (- 1) b))))
 (let ((?x252 (* (- 1) s)))
 (let ((?x254 (+ r ?x252)))
 (let ((?x872 (* ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x147 s s s s s s s s s b b b b b b b q q q q q q q)))
 (let ((?x747 (* (- 1) p)))
 (let ((?x743 (+ ?x747 q)))
 (let ((?x788 (* (- 1) a)))
 (let ((?x268 (+ ?x788 b)))
 (let ((?x338 (* (- 1) r)))
 (let ((?x783 (+ ?x338 s)))
 (let ((?x820 (* ?x783 ?x783 ?x783 ?x783 ?x783 ?x783 ?x783 ?x783 ?x783 ?x268 ?x268 ?x268 ?x268 ?x268 ?x268 ?x268 ?x743 ?x743 ?x743 ?x743 ?x743 ?x743 ?x743 ?x147 r r r r r r r a a a a a a a p p p p p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x306 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x311 (= ?x306 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x242 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x243 (= ?x242 0)))
 (let ((?x133 (* p00 b00)))
 (let ((?x174 (* (- 1) (* q00 a00))))
 (let (($x177 (= (+ (* a q) ?x174 ?x133 (* (- 1) (* p b))) 0)))
 (let (($x155 (= ?x147 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x131 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x150 (= (+ ?x33 ?x131 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x889 (and $x150 $x155 $x177 $x243 $x311 (or (not (= ?x820 0)) (not (= ?x872 0))))))
 (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x119 (* (- 1) ?x47)))
 (let ((?x215 (* ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 (+ (* (- 1) (* ?x254 b)) ?x119 (* ?x291 s) ?x51) s s s s s s s s s b b b b b b b q q q q q q q)))
 (let ((?x229 (+ (* (- 1) (* (+ b ?x788) r)) ?x119 (* (+ s ?x338) a) ?x51)))
 (let ((?x237 (+ q ?x747)))
 (let ((?x222 (+ b ?x788)))
 (let ((?x187 (+ s ?x338)))
 (let ((?x113 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x222 ?x222 ?x222 ?x222 ?x222 ?x222 ?x222 ?x237 ?x237 ?x237 ?x237 ?x237 ?x237 ?x237 ?x229 r r r r r r r a a a a a a a p p p p p p p)))
 (let (($x271 (or (not (= ?x113 0)) (not (= ?x215 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x199 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x209 (= ?x199 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x761 (* p00 s00 a)))
 (let ((?x124 (* b00 r00 p)))
 (let ((?x314 (+ ?x124 ?x761 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x303 (* q a)))
 (let (($x308 (= (+ ?x303 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x782 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let (($x304 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x233 (and $x304 $x782 $x308 (= ?x314 0) $x209 $x271)))
 (rewrite (= $x233 $x889))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x138 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x119 (* (- 1) ?x47)))
 (let ((?x182 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x119 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x328 (+ p (* (- 1) q))))
 (let ((?x291 (+ a (* (- 1) b))))
 (let ((?x252 (* (- 1) s)))
 (let ((?x254 (+ r ?x252)))
 (let ((?x215 (* ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x182 s s s s s s s s s b b b b b b b q q q q q q q)))
 (let ((?x229 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x119 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x747 (* (- 1) p)))
 (let ((?x237 (+ q ?x747)))
 (let ((?x788 (* (- 1) a)))
 (let ((?x222 (+ b ?x788)))
 (let ((?x338 (* (- 1) r)))
 (let ((?x187 (+ s ?x338)))
 (let ((?x113 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x222 ?x222 ?x222 ?x222 ?x222 ?x222 ?x222 ?x237 ?x237 ?x237 ?x237 ?x237 ?x237 ?x237 ?x229 r r r r r r r a a a a a a a p p p p p p p)))
 (let (($x271 (or (not (= ?x113 0)) (not (= ?x215 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x199 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x209 (= ?x199 0)))
 (let ((?x269 (* a00 s00 p)))
 (let ((?x329 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x121 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x329 ?x269 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x202 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x131 (* (- 1) ?x37)))
 (let ((?x214 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x214 ?x131 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x119 (* s a) ?x51) 0) $x202 (= ?x121 0) $x209 $x271))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x305 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x119 (* (- 1) ?x47)))
 (let ((?x182 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x119 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x328 (+ p (* (- 1) q))))
 (let ((?x291 (+ a (* (- 1) b))))
 (let ((?x252 (* (- 1) s)))
 (let ((?x254 (+ r ?x252)))
 (let ((?x215 (* ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x182 s s s s s s s s s b b b b b b b q q q q q q q)))
 (let ((?x229 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x119 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x747 (* (- 1) p)))
 (let ((?x237 (+ q ?x747)))
 (let ((?x788 (* (- 1) a)))
 (let ((?x222 (+ b ?x788)))
 (let ((?x338 (* (- 1) r)))
 (let ((?x187 (+ s ?x338)))
 (let ((?x113 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x222 ?x222 ?x222 ?x222 ?x222 ?x222 ?x222 ?x237 ?x237 ?x237 ?x237 ?x237 ?x237 ?x237 ?x229 r r r r r r r a a a a a a a p p p p p p p)))
 (let (($x271 (or (not (= ?x113 0)) (not (= ?x215 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x199 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x209 (= ?x199 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x761 (* p00 s00 a)))
 (let ((?x124 (* b00 r00 p)))
 (let ((?x314 (+ ?x124 ?x761 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x303 (* q a)))
 (let (($x308 (= (+ ?x303 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x782 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x296 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x301 (* r q)))
 (let (($x233 (and (= (+ ?x301 (* (- 1) (* s p)) ?x37 ?x296) 0) $x782 $x308 (= ?x314 0) $x209 $x271)))
 (let ((?x269 (* a00 s00 p)))
 (let ((?x329 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x323 (= (+ (* (- 1) ?x124) (* (- 1) ?x761) ?x65 ?x329 ?x269 (* (- 1) ?x69)) 0)))
 (let (($x202 (= (+ (* (- 1) ?x303) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x297 (and (= (+ (* (- 1) ?x301) (* s p) (* (- 1) ?x37) ?x41) 0) (= (+ (* (- 1) (* r b)) ?x119 (* s a) ?x51) 0) $x202 $x323 $x209 $x271)))
 (rewrite (= $x297 $x233)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x106 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x97 (- s r)))
 (let ((?x100 (- q p)))
 (let ((?x94 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x51 (* b00 r00)))
 (let ((?x101 (* (+ (- (* ?x31 ?x94 r) (* a00 s00)) (* a ?x97) ?x51) a a p p ?x100 ?x100 ?x100 ?x97 ?x97 ?x31 a a ?x94 ?x94 ?x100 ?x100 r r ?x97 ?x94 ?x94 p p p r r ?x97 ?x97 ?x97 ?x31 a a a ?x94 ?x94 ?x94 p p ?x100 ?x100 r r r ?x97 ?x97 ?x97)))
 (let ((?x84 (- r s)))
 (let ((?x90 (- p q)))
 (let ((?x87 (- a b)))
 (let ((?x91 (* (+ (- (* ?x31 b ?x84) (* a00 s00)) (* ?x87 s) ?x51) ?x87 ?x87 ?x90 ?x90 q q q s s ?x31 ?x87 ?x87 b b q q ?x84 ?x84 s b b ?x90 ?x90 ?x90 ?x84 ?x84 s s s ?x31 ?x87 ?x87 ?x87 b b b ?x90 ?x90 q q ?x84 ?x84 ?x84 s s s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x91 0)) (not (= ?x101 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x270 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x119 (* (- 1) ?x47)))
 (let ((?x182 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x119 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x328 (+ p (* (- 1) q))))
 (let ((?x291 (+ a (* (- 1) b))))
 (let ((?x252 (* (- 1) s)))
 (let ((?x254 (+ r ?x252)))
 (let ((?x215 (* ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x254 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x328 ?x182 s s s s s s s s s b b b b b b b q q q q q q q)))
 (let ((?x229 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x119 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x747 (* (- 1) p)))
 (let ((?x237 (+ q ?x747)))
 (let ((?x788 (* (- 1) a)))
 (let ((?x222 (+ b ?x788)))
 (let ((?x338 (* (- 1) r)))
 (let ((?x187 (+ s ?x338)))
 (let ((?x113 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x222 ?x222 ?x222 ?x222 ?x222 ?x222 ?x222 ?x237 ?x237 ?x237 ?x237 ?x237 ?x237 ?x237 ?x229 r r r r r r r a a a a a a a p p p p p p p)))
 (let (($x271 (or (not (= ?x113 0)) (not (= ?x215 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x199 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x209 (= ?x199 0)))
 (let ((?x269 (* a00 s00 p)))
 (let ((?x329 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x121 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x329 ?x269 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x202 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x131 (* (- 1) ?x37)))
 (let ((?x214 (* s p)))
 (let (($x297 (and (= (+ (* (- 1) (* r q)) ?x214 ?x131 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x119 (* s a) ?x51) 0) $x202 (= ?x121 0) $x209 $x271)))
 (let ((?x97 (- s r)))
 (let ((?x100 (- q p)))
 (let ((?x94 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x101 (* (+ (- (* ?x31 ?x94 r) ?x47) (* a ?x97) ?x51) a a p p ?x100 ?x100 ?x100 ?x97 ?x97 ?x31 a a ?x94 ?x94 ?x100 ?x100 r r ?x97 ?x94 ?x94 p p p r r ?x97 ?x97 ?x97 ?x31 a a a ?x94 ?x94 ?x94 p p ?x100 ?x100 r r r ?x97 ?x97 ?x97)))
 (let ((?x84 (- r s)))
 (let ((?x90 (- p q)))
 (let ((?x87 (- a b)))
 (let ((?x91 (* (+ (- (* ?x31 b ?x84) ?x47) (* ?x87 s) ?x51) ?x87 ?x87 ?x90 ?x90 q q q s s ?x31 ?x87 ?x87 b b q q ?x84 ?x84 s b b ?x90 ?x90 ?x90 ?x84 ?x84 s s s ?x31 ?x87 ?x87 ?x87 b b b ?x90 ?x90 q q ?x84 ?x84 ?x84 s s s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x105 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) (= (+ (- (* ?x31 b r) ?x47) (* a s) ?x51) 0) (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x91 0)) (not (= ?x101 0))))))
 (rewrite (= $x105 $x297))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x107 (asserted $x106)))
 (let ((@x149 (mp (mp @x107 (quant-intro (proof-bind ?x270) (= $x106 $x138)) $x138) (rewrite (= $x138 $x138)) $x138)))
 (let ((@x206 (mp (mp @x149 (quant-intro (proof-bind ?x305) (= $x138 $x216)) $x216) (quant-intro (proof-bind ?x179) (= $x216 $x173)) $x173)))
 (let ((@x867 (mp (mp~ @x206 (sk (~ $x173 $x839)) $x839) (rewrite (= $x839 $x890)) $x890)))
 (let ((@x885 (and-elim @x867 $x137)))
 (let ((@x731 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x137) $x777)) @x885 $x777)))
 (let (($x778 (<= ?x278 0)))
 (let ((@x877 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x137) $x778)) @x885 $x778)))
 (let (($x813 (not (<= ?x158 0))))
 (let (($x212 (>= ?x857 0)))
 (let (($x860 (<= ?x857 0)))
 (let ((@x815 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x855 (not $x860) (not $x212))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x860)) @x877 @x731 false) $x860) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x212)) @x877 @x731 false) $x212) $x855)))
 (let (($x859 (>= ?x158 0)))
 (let ((@x810 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x766 $x813 (not $x859))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x859)) @x877 @x731 false) $x859) (unit-resolution (and-elim @x867 $x869) @x815 $x267) $x813)))
 ((_ th-lemma arith farkas 1 1 1) @x810 @x877 @x731 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             352
 :arith-nonlinear-horner    42
 :arith-num-rows            12
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 51
 :arith-tableau-max-rows    12
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                3.69
 :memory                    3.14
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                2362374
 :num-checks                1
 :propagations              19
 :rlimit-count              11821
 :time                      0.02
 :total-time                0.03)
