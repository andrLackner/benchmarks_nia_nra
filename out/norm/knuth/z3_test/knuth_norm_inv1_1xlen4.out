unsat
((set-logic NIA)
(declare-fun q!3 () Int)
(declare-fun d!1 () Int)
(declare-fun x!0 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x14722 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 8) r!2) (* 4 (* r!2 d!1)) (* 2 (* d!1 q!3)) (* (- 4) (* x!0 d!1)) (* (- 1) (* d!1 d!1 q!3)))))
 (let (($x9430 (<= ?x14722 0)))
 (let (($x10234 (= ?x14722 0)))
 (let ((?x11793 (* (- 2) d!1)))
 (let ((?x5025 (* (- 1) x!0)))
 (let ((?x5020 (* 2 r!2)))
 (let ((?x4362 (+ (- 4) ?x5020 ?x5025 ?x11793 q!3)))
 (let ((?x4461 (+ 2 d!1)))
 (let ((?x3749 (+ (- 8) q!3)))
 (let ((?x10111 (* (- 4) (* d00 r00 ?x3749 ?x3749 ?x3749 ?x4362 ?x4362 ?x4362 r!2 r!2 r!2))))
 (let ((?x9415 (* (- 2) (* ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 r!2 r!2 r!2))))
 (let ((?x13684 (* d00 d00 q00 ?x3749 ?x3749 ?x3749 ?x4362 ?x4362 ?x4362 r!2 r!2 r!2)))
 (let ((?x8932 (* 4 (* ?x3749 ?x3749 ?x3749 ?x4461 ?x4362 ?x4362 ?x4362 ?x4362 r!2 r!2 r!2))))
 (let ((?x2638 (* (- 1) (* ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 r!2))))
 (let ((?x9367 (* (- 4) (* d00 x00 ?x3749 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 r!2 r!2 r!2))))
 (let ((?x14713 (* 2 (* ?x3749 ?x3749 ?x3749 ?x3749 ?x4461 ?x4362 ?x4362 ?x4362 r!2 r!2 r!2))))
 (let ((?x6595 (* 4 (* ?x3749 ?x4461 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 r!2 r!2 r!2 r!2))))
 (let ((?x9634 (* d00 d00 q00 ?x3749 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 r!2 r!2 r!2)))
 (let ((?x14716 (* (- 4) (* ?x3749 ?x4461 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 r!2 r!2 r!2))))
 (let ((?x2646 (* 4 (* d00 r00 ?x3749 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 r!2 r!2 r!2))))
 (let ((?x3354 (* (- 2) (* d00 q00 ?x3749 ?x3749 ?x3749 ?x4362 ?x4362 ?x4362 r!2 r!2 r!2))))
 (let ((?x10659 (* (- 4) (* ?x3749 ?x3749 ?x3749 ?x4461 ?x4362 ?x4362 ?x4362 r!2 r!2 r!2 r!2))))
 (let ((?x2875 (* 4 (* d00 x00 ?x3749 ?x3749 ?x3749 ?x4362 ?x4362 ?x4362 r!2 r!2 r!2))))
 (let ((?x14193 (* 2 (* d00 q00 ?x3749 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 r!2 r!2 r!2))))
 (let ((?x7610 (* (- 1) (* ?x3749 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 r!2 r!2 r!2))))
 (let ((?x15508 (+ (* 2 (* ?x3749 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4362 r!2)) (* (- 2) (* d00 q00 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 r!2)) ?x7610 (* (- 4) (* d00 r00 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 r!2)) (* 8 (* ?x3749 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 r!2 r!2 r!2)) (* 4 (* ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 r!2)) (* 4 (* d00 x00 ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 r!2)) (* ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 r!2 r!2 r!2) (* d00 d00 q00 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 r!2) (* 8 (* r00 ?x3749 ?x3749 ?x3749 ?x4362 ?x4362 ?x4362 r!2 r!2 r!2)) (* (- 4) (* ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4362 r!2 r!2)) (* d00 d00 q00 ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 r!2) ?x14193 ?x2875 (* (- 8) (* ?x3749 ?x3749 ?x3749 ?x4362 ?x4362 ?x4362 ?x4362 r!2 r!2 r!2)) (* 4 (* d00 x00 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 r!2)) (* (- 1) (* ?x3749 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4461 ?x4362 r!2)) ?x10659 (* (- 8) (* ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 ?x4362 r!2)) ?x3354 (* (- 2) (* d00 q00 ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 r!2)) (* 2 (* ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 r!2)) (* (- 4) (* ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 r!2 r!2)) ?x2646 (* 8 (* r00 ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 r!2)) ?x14716 (* (- 8) (* r00 ?x3749 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 r!2 r!2 r!2)) (* (- 1) ?x9634) ?x6595 ?x14713 ?x9367 ?x2638 ?x8932 ?x13684 (* 8 (* r00 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 r!2)) ?x9415 ?x10111 (* (- 8) (* ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 ?x4362 r!2)) (* 4 (* ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 ?x4362 r!2)) (* (- 4) (* d00 r00 ?x3749 ?x3749 ?x4461 ?x4461 ?x4362 ?x4362 ?x4362 r!2)))))
 (let (($x9684 (= ?x15508 0)))
 (let (($x15566 (not $x9684)))
 (let ((?x8301 (+ ?x5020 ?x5025 q!3)))
 (let ((?x10716 (* (- 4) (* d00 x00 ?x4461 ?x4461 ?x8301 ?x8301 ?x8301 r!2 q!3 q!3))))
 (let ((?x11269 (* 32 (* r00 r!2 r!2 r!2 r!2 r!2 d!1 d!1 d!1 q!3))))
 (let ((?x15647 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x15459 (* d00 d00 q00 r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3)))
 (let ((?x15348 (* r!2 r!2 r!2 r!2 x!0 x!0 d!1 d!1 q!3 q!3 q!3 q!3)))
 (let ((?x15304 (* r!2 r!2 r!2 x!0 x!0 d!1 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x15128 (* d00 d00 q00 r!2 r!2 r!2 x!0 x!0 d!1 d!1 q!3)))
 (let ((?x15102 (* r00 d00 r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x15013 (* r00 d00 r!2 r!2 r!2 x!0 d!1 d!1 d!1 q!3 q!3)))
 (let ((?x11248 (* 240 (* r!2 r!2 r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3))))
 (let ((?x14902 (* r!2 r!2 r!2 r!2 r!2 x!0 d!1 q!3 q!3 q!3 q!3)))
 (let ((?x11240 (* 4 (* ?x4461 ?x4461 ?x4461 ?x4461 ?x8301 ?x8301 ?x8301 r!2 r!2 r!2 q!3))))
 (let ((?x11233 (* 8 (* r00 r!2 r!2 r!2 d!1 d!1 d!1 q!3 q!3 q!3))))
 (let ((?x14522 (* r00 d00 r!2 r!2 r!2 r!2 r!2 d!1 d!1 d!1 q!3)))
 (let ((?x14270 (* r00 d00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x14120 (* r!2 r!2 r!2 r!2 r!2 x!0 x!0 d!1 q!3 q!3 q!3)))
 (let ((?x11229 (* (- 96) (* r00 d00 r!2 r!2 r!2 r!2 d!1 d!1 q!3 q!3))))
 (let ((?x14094 (* d00 x00 r!2 r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3)))
 (let ((?x11227 (* 48 (* r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x11142 (* 72 (* r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x13759 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x13757 (* r!2 r!2 r!2 r!2 x!0 d!1 d!1 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x13661 (* d00 x00 r!2 r!2 r!2 x!0 x!0 x!0 q!3 q!3 q!3)))
 (let ((?x13642 (* d00 x00 r!2 r!2 r!2 d!1 d!1 d!1 q!3 q!3 q!3)))
 (let ((?x13593 (* r!2 r!2 r!2 x!0 x!0 x!0 d!1 q!3 q!3 q!3 q!3)))
 (let ((?x11218 (* (- 16) (* r00 r!2 r!2 r!2 x!0 d!1 d!1 d!1 q!3 q!3))))
 (let ((?x10771 (* (- 12) (* d00 q00 r!2 r!2 r!2 d!1 d!1 q!3 q!3 q!3))))
 (let ((?x13555 (* d00 x00 r!2 r!2 r!2 r!2 r!2 d!1 d!1 d!1 q!3)))
 (let ((?x13481 (* r!2 r!2 r!2 x!0 x!0 x!0 d!1 d!1 q!3 q!3 q!3 q!3)))
 (let ((?x10770 (* (- 1) (* r!2 x!0 d!1 d!1 d!1 d!1 q!3 q!3 q!3 q!3))))
 (let ((?x10764 (* (- 24) (* r00 r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3 q!3))))
 (let ((?x13286 (* d00 q00 r!2 r!2 r!2 x!0 x!0 x!0 q!3 q!3 q!3)))
 (let ((?x10765 (* (- 1) (* d00 d00 q00 r!2 d!1 d!1 q!3 q!3 q!3 q!3))))
 (let ((?x13270 (* r!2 r!2 r!2 r!2 r!2 r!2 d!1 q!3 q!3 q!3 q!3)))
 (let ((?x13251 (* d00 q00 r!2 r!2 r!2 x!0 d!1 d!1 d!1 q!3 q!3)))
 (let ((?x13027 (* r!2 r!2 r!2 r!2 x!0 d!1 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x11202 (* 2 (* r!2 r!2 d!1 d!1 d!1 d!1 q!3 q!3 q!3 q!3))))
 (let ((?x11200 (* 48 (* d00 q00 r!2 r!2 r!2 r!2 x!0 d!1 d!1 q!3))))
 (let ((?x12684 (* d00 q00 r!2 r!2 r!2 r!2 r!2 d!1 d!1 d!1 q!3)))
 (let ((?x11201 (* (- 216) (* r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x10758 (* 24 (* d00 x00 r!2 r!2 r!2 d!1 d!1 q!3 q!3 q!3))))
 (let ((?x12313 (* r00 d00 r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3 q!3)))
 (let ((?x12289 (* d00 q00 r!2 r!2 r!2 d!1 d!1 d!1 q!3 q!3 q!3)))
 (let ((?x2539 (* 48 (* d00 d00 q00 r!2 r!2 x!0 d!1 q!3 q!3 q!3))))
 (let ((?x12090 (* r00 d00 r!2 r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3)))
 (let ((?x14934 (* (- 4) (* d00 d00 q00 r!2 d!1 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x11959 (* d00 d00 q00 r!2 d!1 d!1 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x11920 (* d00 x00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x14932 (* 96 (* d00 x00 r!2 r!2 r!2 r!2 d!1 d!1 q!3 q!3))))
 (let ((?x11744 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 d!1 d!1 d!1 q!3)))
 (let ((?x11712 (* r!2 r!2 r!2 r!2 r!2 r!2 r!2 d!1 q!3 q!3 q!3)))
 (let ((?x11623 (* r!2 r!2 r!2 r!2 d!1 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x11582 (* d00 x00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x11348 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3)))
 (let ((?x11328 (* d00 d00 q00 r!2 r!2 r!2 x!0 x!0 d!1 d!1 d!1 q!3)))
 (let ((?x9089 (* (- 96) (* r00 d00 r!2 r!2 r!2 r!2 r!2 d!1 d!1 q!3))))
 (let ((?x11205 (* d00 d00 q00 r!2 r!2 x!0 d!1 d!1 q!3 q!3 q!3)))
 (let ((?x11041 (* d00 x00 r!2 r!2 r!2 r!2 d!1 d!1 d!1 q!3 q!3)))
 (let ((?x11037 (* r!2 r!2 r!2 r!2 d!1 d!1 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x11022 (* r!2 r!2 r!2 r!2 r!2 d!1 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x10874 (* r00 d00 r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3)))
 (let ((?x2531 (* (- 48) (* d00 x00 r!2 r!2 r!2 x!0 d!1 d!1 q!3 q!3))))
 (let ((?x9426 (* 240 (* r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x3822 (* 48 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 d!1 q!3))))
 (let ((?x9993 (* d00 d00 q00 r!2 r!2 r!2 r!2 d!1 d!1 d!1 q!3 q!3)))
 (let ((?x9849 (* d00 d00 q00 r!2 r!2 r!2 r!2 x!0 d!1 d!1 d!1 q!3)))
 (let ((?x8976 (* 12 (* d00 d00 q00 r!2 r!2 r!2 x!0 x!0 d!1 q!3))))
 (let ((?x9764 (* r!2 r!2 r!2 r!2 r!2 d!1 d!1 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x2517 (* (- 12) (* d00 q00 r!2 r!2 r!2 x!0 x!0 d!1 d!1 q!3))))
 (let ((?x9576 (* d00 d00 q00 r!2 x!0 x!0 d!1 d!1 q!3 q!3 q!3)))
 (let ((?x8956 (* 16 (* d00 d00 q00 r!2 r!2 r!2 r!2 d!1 q!3 q!3))))
 (let ((?x9539 (* d00 q00 r!2 r!2 r!2 x!0 x!0 d!1 d!1 d!1 q!3)))
 (let ((?x9530 (* d00 x00 r!2 r!2 r!2 x!0 x!0 d!1 d!1 d!1 q!3)))
 (let ((?x9526 (* d00 d00 q00 r!2 r!2 r!2 x!0 x!0 x!0 q!3 q!3 q!3)))
 (let ((?x12714 (* (- 24) (* r00 d00 r!2 r!2 r!2 x!0 x!0 d!1 d!1 q!3))))
 (let ((?x9481 (* d00 q00 r!2 r!2 r!2 r!2 d!1 d!1 d!1 q!3 q!3)))
 (let ((?x9411 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 d!1 d!1 q!3)))
 (let ((?x11124 (* (- 48) (* d00 q00 r!2 r!2 r!2 r!2 r!2 d!1 d!1 q!3))))
 (let ((?x13576 (* (- 4) (* ?x4461 ?x4461 ?x4461 ?x4461 ?x8301 ?x8301 r!2 r!2 r!2 r!2 q!3))))
 (let ((?x9402 (* 4 (* d00 d00 q00 r!2 x!0 x!0 x!0 d!1 q!3 q!3))))
 (let ((?x9360 (* d00 d00 q00 r!2 x!0 x!0 x!0 d!1 d!1 q!3 q!3)))
 (let ((?x9357 (* ?x4461 ?x4461 ?x4461 ?x4461 ?x4461 ?x8301 ?x8301 r!2 r!2 r!2 q!3 q!3)))
 (let ((?x9332 (* r00 d00 r!2 r!2 r!2 d!1 d!1 d!1 q!3 q!3 q!3)))
 (let ((?x9253 (* d00 d00 q00 r!2 r!2 r!2 r!2 x!0 d!1 d!1 q!3)))
 (let ((?x11129 (* (- 2) (* d00 d00 q00 r!2 r!2 d!1 d!1 q!3 q!3 q!3))))
 (let ((?x9317 (* (- 36) (* d00 d00 q00 r!2 r!2 r!2 d!1 q!3 q!3 q!3))))
 (let ((?x13577 (* (- 72) (* r!2 r!2 r!2 r!2 x!0 x!0 x!0 q!3 q!3 q!3))))
 (let ((?x9195 (* d00 x00 r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3 q!3)))
 (let ((?x9111 (* d00 d00 q00 r!2 r!2 r!2 d!1 d!1 q!3 q!3 q!3)))
 (let ((?x9307 (* 8 (* r00 r!2 r!2 r!2 x!0 x!0 x!0 q!3 q!3 q!3))))
 (let ((?x9034 (* d00 d00 q00 r!2 r!2 d!1 d!1 q!3 q!3 q!3 q!3)))
 (let ((?x9001 (* d00 x00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x8995 (* d00 d00 q00 r!2 r!2 x!0 x!0 d!1 d!1 q!3 q!3)))
 (let ((?x1831 (* (- 24) (* r00 d00 r!2 r!2 r!2 d!1 d!1 q!3 q!3 q!3))))
 (let ((?x7682 (* 32 (* r00 r!2 r!2 r!2 r!2 d!1 d!1 d!1 q!3 q!3))))
 (let ((?x11995 (* 24 (* d00 q00 r!2 r!2 r!2 x!0 d!1 d!1 q!3 q!3))))
 (let ((?x7678 (* (- 96) (* d00 x00 r!2 r!2 r!2 r!2 x!0 d!1 d!1 q!3))))
 (let ((?x8608 (* d00 d00 q00 r!2 r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3)))
 (let ((?x9289 (* (- 32) (* r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x9013 (* (- 480) (* r!2 r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3))))
 (let ((?x8354 (* r!2 r!2 r!2 r!2 x!0 x!0 d!1 q!3 q!3 q!3 q!3)))
 (let ((?x8352 (* d00 d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x8327 (* r!2 r!2 r!2 d!1 q!3 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x8325 (* d00 x00 r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3)))
 (let ((?x8321 (* r00 d00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x8277 (* d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x10134 (* 8 (* r!2 r!2 r!2 x!0 x!0 x!0 x!0 q!3 q!3 q!3))))
 (let ((?x9026 (* 192 (* r!2 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x9262 (* 24 (* d00 x00 r!2 r!2 r!2 x!0 x!0 d!1 d!1 q!3))))
 (let ((?x9660 (* 96 (* d00 x00 r!2 r!2 r!2 r!2 r!2 d!1 d!1 q!3))))
 (let ((?x7100 (* r00 d00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x7058 (* d00 x00 r!2 r!2 r!2 r!2 x!0 d!1 d!1 d!1 q!3)))
 (let ((?x6768 (* d00 x00 r!2 r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3)))
 (let ((?x9193 (* 2 (* d00 q00 ?x4461 ?x4461 ?x8301 ?x8301 ?x8301 r!2 q!3 q!3))))
 (let ((?x6537 (* d00 d00 q00 r!2 x!0 d!1 d!1 q!3 q!3 q!3 q!3)))
 (let ((?x6472 (* d00 q00 r!2 r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3)))
 (let ((?x6399 (* d00 d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x9149 (* (- 4) (* ?x4461 ?x8301 ?x8301 ?x8301 ?x8301 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x9592 (* 96 (* r00 r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3))))
 (let ((?x9150 (* (- 48) (* r00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x9597 (* (- 8) (* r00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x9221 (* (- 32) (* r00 r!2 r!2 r!2 r!2 x!0 d!1 d!1 d!1 q!3))))
 (let ((?x13297 (* (- 48) (* r00 r!2 r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3))))
 (let ((?x5919 (* r00 d00 r!2 r!2 r!2 r!2 d!1 d!1 d!1 q!3 q!3)))
 (let ((?x13497 (* 8 (* r00 r!2 r!2 r!2 x!0 x!0 d!1 d!1 d!1 q!3))))
 (let ((?x13462 (* 216 (* r!2 r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3 q!3))))
 (let ((?x5910 (* d00 d00 q00 r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x13306 (* 96 (* r00 r!2 r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3))))
 (let ((?x13310 (* (- 352) (* r!2 r!2 r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3))))
 (let ((?x13325 (* (- 96) (* r00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3))))
 (let ((?x13509 (* (- 64) (* r00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x13328 (* 24 (* r00 r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x9279 (* (- 48) (* d00 q00 r!2 r!2 r!2 r!2 d!1 d!1 q!3 q!3))))
 (let ((?x5673 (* r00 d00 r!2 r!2 r!2 r!2 x!0 d!1 d!1 d!1 q!3)))
 (let ((?x5531 (* r!2 r!2 r!2 d!1 d!1 q!3 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x5339 (* r00 d00 r!2 r!2 r!2 x!0 x!0 d!1 d!1 d!1 q!3)))
 (let ((?x5327 (* d00 x00 r!2 r!2 r!2 x!0 d!1 d!1 d!1 q!3 q!3)))
 (let ((?x5170 (* r!2 r!2 r!2 r!2 r!2 r!2 d!1 d!1 q!3 q!3 q!3 q!3)))
 (let ((?x9282 (* 4 (* d00 r00 ?x4461 ?x4461 ?x8301 ?x8301 ?x8301 r!2 q!3 q!3))))
 (let ((?x4983 (* (- 48) (* d00 d00 q00 r!2 r!2 r!2 r!2 x!0 d!1 q!3))))
 (let ((?x4884 (* d00 q00 r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3 q!3)))
 (let ((?x4803 (* d00 x00 r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x4641 (* r00 d00 r!2 r!2 r!2 x!0 x!0 x!0 q!3 q!3 q!3)))
 (let ((?x4534 (* d00 x00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x9616 (* 24 (* d00 d00 q00 r!2 r!2 r!2 x!0 d!1 q!3 q!3))))
 (let ((?x4289 (* d00 d00 q00 r!2 r!2 r!2 r!2 d!1 d!1 q!3 q!3)))
 (let ((?x12026 (* 96 (* r00 d00 r!2 r!2 r!2 r!2 x!0 d!1 d!1 q!3))))
 (let ((?x4128 (* r!2 r!2 r!2 x!0 x!0 d!1 d!1 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x4069 (* r!2 r!2 r!2 r!2 r!2 x!0 d!1 d!1 q!3 q!3 q!3 q!3)))
 (let ((?x4052 (* r00 d00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x3993 (* r!2 r!2 r!2 r!2 r!2 r!2 x!0 d!1 q!3 q!3 q!3)))
 (let ((?x11231 (* 8 (* r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x3247 (* d00 d00 q00 r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3 q!3)))
 (let ((?x2863 (* r!2 r!2 r!2 r!2 x!0 x!0 x!0 d!1 q!3 q!3 q!3)))
 (let ((?x2648 (* d00 d00 q00 r!2 r!2 r!2 x!0 d!1 d!1 d!1 q!3 q!3)))
 (let ((?x2635 (* d00 d00 q00 r!2 r!2 r!2 d!1 d!1 d!1 q!3 q!3 q!3)))
 (let ((?x10185 (* (- 32) (* r!2 r!2 r!2 x!0 x!0 x!0 q!3 q!3 q!3 q!3))))
 (let ((?x2530 (* d00 q00 r!2 r!2 r!2 r!2 x!0 d!1 d!1 d!1 q!3)))
 (let ((?x13142 (* (- 24) (* d00 d00 q00 r!2 r!2 d!1 q!3 q!3 q!3 q!3))))
 (let ((?x6195 (* 12 (* d00 d00 q00 r!2 x!0 d!1 q!3 q!3 q!3 q!3))))
 (let ((?x2469 (* r!2 r!2 r!2 x!0 d!1 d!1 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x2467 (* r!2 r!2 r!2 x!0 d!1 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x2428 (* d00 q00 r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3)))
 (let ((?x2381 (* d00 q00 r!2 r!2 r!2 x!0 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x2368 (* d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x2352 (* d00 q00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x743 (* (- 12) (* d00 d00 q00 r!2 x!0 x!0 d!1 q!3 q!3 q!3))))
 (let ((?x10999 (* (- 24) (* d00 d00 q00 r!2 r!2 x!0 x!0 d!1 q!3 q!3))))
 (let ((?x537 (* 2 (* ?x4461 ?x4461 ?x4461 ?x4461 ?x8301 ?x8301 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x1664 (* d00 q00 r!2 r!2 r!2 r!2 x!0 x!0 q!3 q!3 q!3)))
 (let ((?x1340 (* r00 d00 r!2 r!2 r!2 r!2 r!2 x!0 q!3 q!3 q!3)))
 (let ((?x14933 (* 48 (* r00 d00 r!2 r!2 r!2 x!0 d!1 d!1 q!3 q!3))))
 (let ((?x642 (* d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x9117 (* 352 (* r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3))))
 (let ((?x11263 (+ (* 48 (* d00 x00 r!2 r!2 r!2 d!1 q!3 q!3 q!3)) ?x9117 (* 12 (* d00 d00 q00 r!2 x!0 q!3 q!3 q!3 q!3)) (* 4 (* d00 q00 r!2 r!2 d!1 d!1 q!3 q!3 q!3)) (* 2 ?x642) ?x14933 (* (- 16) (* r!2 x!0 x!0 d!1 q!3 q!3 q!3)) (* ?x4461 ?x4461 ?x4461 ?x4461 ?x8301 ?x8301 ?x8301 r!2 q!3 q!3 q!3) (* (- 48) ?x1340) (* (- 2) (* d00 q00 r!2 x!0 d!1 d!1 q!3 q!3 q!3)) (* (- 8) (* d00 q00 r!2 x!0 d!1 q!3 q!3 q!3)) (* 192 (* d00 x00 r!2 r!2 r!2 r!2 d!1 q!3 q!3)) (* (- 64) (* d00 q00 r!2 r!2 r!2 r!2 r!2 q!3)) (* (- 128) (* r00 d00 r!2 r!2 r!2 r!2 r!2 q!3)) (* 12 ?x1664) ?x537 (* 128 (* d00 x00 r!2 r!2 r!2 r!2 r!2 q!3)) (* 16 (* d00 q00 r!2 r!2 d!1 q!3 q!3 q!3)) ?x10999 ?x743 (* (- 192) (* d00 x00 r!2 r!2 r!2 r!2 x!0 d!1 q!3)) (* (- 4) (* r00 d00 r!2 x!0 d!1 d!1 q!3 q!3 q!3)) (* 16 ?x2352) (* 24 ?x2368) (* (- 6) ?x2381) (* (- 24) ?x2428) (* (- 128) (* r00 d00 r!2 r!2 r!2 r!2 q!3 q!3)) (* (- 192) (* r00 d00 r!2 r!2 r!2 r!2 d!1 q!3 q!3)) (* (- 6) ?x2467) (* (- 3) ?x2469) (* (- 96) (* d00 q00 r!2 r!2 r!2 r!2 r!2 d!1 q!3)) ?x6195 (* 96 (* d00 q00 r!2 r!2 r!2 r!2 x!0 d!1 q!3)) ?x13142 (* 16 (* r!2 r!2 x!0 d!1 q!3 q!3 q!3)) (* 8 ?x2530) ?x10185 (* 32 (* r00 r!2 x!0 q!3 q!3 q!3)) (* 128 (* r00 d00 r!2 r!2 r!2 r!2 x!0 q!3)) ?x2635 (* (- 2) ?x2648) (* (- 16) (* d00 q00 r!2 r!2 r!2 x!0 x!0 q!3)) (* (- 4) ?x2863) (* (- 4) (* r!2 d!1 d!1 q!3 q!3 q!3 q!3 q!3)) (* 2 (* r!2 d!1 d!1 d!1 q!3 q!3 q!3 q!3 q!3)) (* (- 32) (* r00 d00 r!2 r!2 r!2 x!0 x!0 q!3)) (* 32 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 q!3)) (* (- 24) (* d00 d00 q00 r!2 r!2 x!0 x!0 q!3 q!3)) (* (- 3) ?x3247) (* 16 (* r00 d00 r!2 q!3 q!3 q!3 q!3)) (* 2 (* d00 q00 r!2 d!1 d!1 q!3 q!3 q!3 q!3)) ?x11231 (* 192 (* r00 d00 r!2 r!2 r!2 r!2 x!0 d!1 q!3)) (* (- 48) (* r00 d00 r!2 r!2 r!2 d!1 q!3 q!3 q!3)) (* (- 48) ?x3993) (* 4 ?x4052) (* (- 12) ?x4069) (* 3 ?x4128) (* (- 192) (* r00 d00 r!2 r!2 r!2 r!2 r!2 d!1 q!3)) ?x12026 (* 16 ?x4289) ?x9616 (* (- 64) (* d00 q00 r!2 r!2 r!2 r!2 q!3 q!3)) (* (- 8) (* r00 ?x4461 ?x4461 ?x8301 ?x8301 ?x8301 r!2 q!3 q!3)) (* 16 (* d00 q00 r!2 r!2 q!3 q!3 q!3)) (* (- 4) ?x4534) (* (- 96) (* d00 q00 r!2 r!2 r!2 r!2 d!1 q!3 q!3)) (* (- 4) ?x4641) (* 12 ?x4803) (* 8 (* d00 q00 r!2 d!1 q!3 q!3 q!3 q!3)) (* 6 ?x4884) ?x4983 (* 96 (* r00 d00 r!2 r!2 r!2 x!0 d!1 q!3 q!3)) ?x9282 (* 8 ?x5170) (* (- 8) ?x5327) (* (- 4) ?x5339) ?x5531 (* 16 ?x5673) (* r!2 d!1 d!1 d!1 d!1 q!3 q!3 q!3 q!3 q!3) (* (- 24) (* d00 d00 q00 r!2 r!2 q!3 q!3 q!3 q!3)) (* (- 4) (* d00 d00 q00 r!2 q!3 q!3 q!3 q!3 q!3)) ?x9279 (* 48 (* d00 d00 q00 r!2 r!2 x!0 q!3 q!3 q!3)) ?x13328 ?x13509 (* (- 384) (* r00 r!2 r!2 r!2 r!2 x!0 d!1 q!3)) (* (- 32) (* r!2 r!2 x!0 q!3 q!3 q!3)) ?x13325 (* (- 192) (* r00 r!2 r!2 r!2 r!2 x!0 d!1 d!1 q!3)) (* 48 (* r00 r!2 r!2 r!2 x!0 x!0 d!1 d!1 q!3)) ?x13310 (* (- 4) (* d00 d00 q00 r!2 q!3 q!3 q!3 q!3)) (* 96 (* r00 r!2 r!2 r!2 d!1 q!3 q!3 q!3)) ?x13306 (* 32 (* r00 d00 r!2 r!2 q!3 q!3 q!3)) (* (- 32) (* d00 x00 r!2 r!2 q!3 q!3 q!3)) (* 64 (* r00 r!2 r!2 r!2 q!3 q!3 q!3)) (* 3 ?x5910) ?x13462 ?x13497 (* (- 16) ?x5919) (* 64 (* r!2 r!2 r!2 q!3 q!3 q!3)) (* 32 (* r!2 r!2 r!2 d!1 q!3 q!3 q!3)) ?x13297 (* 96 (* r00 r!2 r!2 r!2 x!0 x!0 d!1 q!3)) ?x9221 (* (- 16) (* r00 d00 r!2 x!0 q!3 q!3 q!3)) ?x9597 ?x9150 ?x9592 ?x9149 (* (- 8) (* r00 r!2 d!1 d!1 q!3 q!3 q!3 q!3)) (* (- 8) (* r!2 d!1 q!3 q!3 q!3 q!3 q!3)) (* (- 256) (* r00 r!2 r!2 r!2 r!2 x!0 q!3)) (* 4 (* ?x4461 ?x4461 ?x4461 ?x8301 ?x8301 ?x8301 r!2 r!2 q!3 q!3)) (* (- 6) ?x6399) (* (- 24) ?x6472) (* 3 ?x6537) ?x9193 (* (- 24) ?x6768) (* (- 16) ?x7058) (* 48 ?x7100) ?x9660 (* 4 (* d00 x00 r!2 x!0 d!1 d!1 q!3 q!3 q!3)) ?x9262 (* 32 (* d00 q00 r!2 r!2 r!2 x!0 q!3 q!3)) ?x9026 ?x10134 (* 32 (* r00 r!2 x!0 d!1 q!3 q!3 q!3)) (* (- 64) (* r00 r!2 r!2 q!3 q!3 q!3)) (* (- 32) (* d00 d00 q00 r!2 r!2 r!2 r!2 x!0 q!3)) (* 12 ?x8277) (* (- 32) (* r00 d00 r!2 r!2 r!2 q!3 q!3 q!3)) (* (- 16) (* r!2 r!2 d!1 d!1 q!3 q!3 q!3 q!3)) (* (- 8) (* d00 q00 r!2 x!0 q!3 q!3 q!3)) (* (- 12) (* d00 d00 q00 r!2 x!0 x!0 q!3 q!3 q!3)) (* 24 ?x8321) (* 48 ?x8325) (* 2 ?x8327) (* 32 (* d00 d00 q00 r!2 r!2 r!2 x!0 q!3 q!3)) (* (- 1) ?x8352) (* 8 (* d00 q00 r!2 q!3 q!3 q!3 q!3)) (* 24 ?x8354) (* 4 (* d00 d00 q00 r!2 x!0 x!0 x!0 q!3 q!3)) (* 32 (* d00 x00 r!2 r!2 r!2 x!0 x!0 q!3)) ?x9013 (* 32 (* d00 x00 r!2 r!2 r!2 q!3 q!3 q!3)) ?x9289 (* (- 6) ?x8608) ?x7678 ?x11995 (* 48 (* r00 r!2 r!2 r!2 d!1 d!1 q!3 q!3 q!3)) ?x7682 (* (- 32) (* d00 x00 r!2 r!2 d!1 q!3 q!3 q!3)) (* 4 (* d00 d00 q00 r!2 x!0 q!3 q!3 q!3)) (* 32 (* r!2 r!2 q!3 q!3 q!3 q!3)) ?x1831 (* (- 6) ?x8995) (* (- 32) ?x9001) (* (- 16) (* r!2 x!0 x!0 d!1 d!1 q!3 q!3 q!3)) (* (- 6) ?x9034) ?x9307 (* (- 16) (* r00 r!2 r!2 d!1 d!1 q!3 q!3 q!3)) (* (- 6) ?x9111) (* 16 (* d00 x00 r!2 x!0 d!1 q!3 q!3 q!3)) (* (- 16) (* d00 x00 r!2 d!1 q!3 q!3 q!3 q!3)) (* (- 12) ?x9195) ?x13577 ?x9317 ?x11129 (* (- 24) ?x9253) (* (- 128) (* d00 x00 r!2 r!2 r!2 r!2 x!0 q!3)) (* (- 4) ?x9332) (* (- 2) (* ?x4461 ?x4461 ?x4461 ?x8301 ?x8301 ?x8301 r!2 q!3 q!3 q!3)) (* (- 1) ?x9357) ?x9360 ?x9402 ?x13576 ?x11124 (* 24 ?x9411) (* (- 48) (* r00 d00 r!2 r!2 r!2 x!0 x!0 d!1 q!3)) (* (- 4) (* r!2 x!0 x!0 d!1 d!1 d!1 q!3 q!3 q!3)) (* (- 8) ?x9481) (* (- 8) (* d00 d00 q00 r!2 r!2 q!3 q!3 q!3)) ?x12714 ?x9526 (* 4 ?x9530) (* (- 2) ?x9539) (* (- 40) (* d00 d00 q00 r!2 r!2 r!2 q!3 q!3 q!3)) ?x8956 (* (- 3) ?x9576) (* 48 (* d00 x00 r!2 r!2 r!2 x!0 x!0 d!1 q!3)) (* (- 96) (* d00 x00 r!2 r!2 r!2 x!0 d!1 q!3 q!3)) ?x2517 (* 12 ?x9764) ?x8976 (* (- 4) ?x9849) (* 4 ?x9993) ?x3822 (* (- 64) (* r00 r!2 r!2 d!1 q!3 q!3 q!3)) ?x9426 (* (- 32) (* r00 r!2 d!1 q!3 q!3 q!3 q!3)) (* (- 8) (* d00 d00 q00 r!2 r!2 d!1 q!3 q!3 q!3)) (* (- 4) (* d00 d00 q00 r!2 d!1 q!3 q!3 q!3 q!3)) ?x2531 (* (- 4) (* ?x4461 ?x4461 ?x4461 ?x8301 ?x8301 ?x8301 ?x8301 r!2 q!3 q!3)) (* 384 (* r00 r!2 r!2 r!2 r!2 r!2 d!1 q!3)) (* 192 (* r00 r!2 r!2 r!2 r!2 r!2 d!1 d!1 q!3)) (* (- 48) ?x10874) (* 48 ?x11022) (* 6 ?x11037) (* 16 ?x11041) (* 192 (* d00 x00 r!2 r!2 r!2 r!2 r!2 d!1 q!3)) (* 12 (* r!2 r!2 x!0 d!1 d!1 d!1 q!3 q!3 q!3)) (* 12 ?x11205) (* 20 (* r!2 x!0 d!1 d!1 q!3 q!3 q!3 q!3)) ?x9089 (* 128 (* d00 x00 r!2 r!2 r!2 r!2 q!3 q!3)) ?x11328 (* 12 ?x11348) (* 256 (* r00 r!2 r!2 r!2 r!2 q!3 q!3)) (* (- 48) ?x11582) (* 16 ?x11623) (* 32 ?x11712) (* 4 ?x11744) ?x14932 (* (- 24) ?x11920) (* (- 1) ?x11959) ?x14934 (* (- 8) (* r!2 r!2 r!2 d!1 d!1 d!1 q!3 q!3 q!3)) (* 8 (* d00 d00 q00 r!2 r!2 r!2 x!0 x!0 q!3)) (* 24 ?x12090) ?x2539 (* 256 (* r00 r!2 r!2 r!2 r!2 r!2 q!3)) (* (- 2) ?x12289) (* (- 24) (* d00 q00 r!2 r!2 r!2 d!1 q!3 q!3 q!3)) (* 12 ?x12313) (* (- 4) (* d00 x00 r!2 d!1 d!1 q!3 q!3 q!3 q!3)) (* (- 24) (* d00 q00 r!2 r!2 r!2 x!0 x!0 d!1 q!3)) (* 40 (* r!2 r!2 x!0 d!1 d!1 q!3 q!3 q!3)) ?x10758 ?x11201 (* (- 8) ?x12684) (* 16 (* d00 x00 r!2 x!0 q!3 q!3 q!3)) (* (- 128) (* r00 r!2 r!2 r!2 x!0 q!3 q!3)) ?x11200 ?x11202 (* (- 36) ?x13027) (* 16 (* r00 d00 r!2 d!1 q!3 q!3 q!3 q!3)) (* 24 (* r!2 x!0 d!1 q!3 q!3 q!3 q!3)) (* 4 ?x13251) (* 4 (* r00 d00 r!2 d!1 d!1 q!3 q!3 q!3 q!3)) (* 32 (* r00 d00 r!2 r!2 d!1 q!3 q!3 q!3)) (* 8 (* r00 d00 r!2 r!2 d!1 d!1 q!3 q!3 q!3)) (* 64 ?x13270) (* d00 d00 q00 r!2 x!0 d!1 d!1 q!3 q!3 q!3) ?x10765 (* (- 2) ?x13286) ?x10764 (* 192 (* r00 r!2 r!2 r!2 r!2 d!1 d!1 q!3 q!3)) (* (- 8) (* ?x4461 ?x4461 ?x4461 ?x8301 ?x8301 ?x8301 r!2 r!2 r!2 q!3)) ?x10770 (* (- 1) ?x13481) (* 4 (* d00 d00 q00 r!2 x!0 d!1 q!3 q!3 q!3)) (* 2 (* r!2 x!0 d!1 d!1 d!1 q!3 q!3 q!3 q!3)) (* 16 ?x13555) (* (- 32) (* r00 r!2 q!3 q!3 q!3 q!3)) ?x10771 ?x11218 (* (- 2) ?x13593) (* 4 ?x13642) (* 4 ?x13661) (* (- 12) ?x13757) (* (- 12) ?x13759) (* 64 (* r00 d00 r!2 r!2 r!2 x!0 q!3 q!3)) ?x11142 ?x11227 (* 48 ?x14094) ?x11229 (* 24 ?x14120) (* (- 64) (* d00 x00 r!2 r!2 r!2 x!0 q!3 q!3)) (* 8 (* r00 r!2 x!0 d!1 d!1 q!3 q!3 q!3)) (* 32 ?x14270) (* (- 16) ?x14522) ?x11233 (* (- 192) (* r00 r!2 r!2 r!2 x!0 d!1 q!3 q!3)) ?x11240 (* (- 8) (* d00 x00 r!2 r!2 d!1 d!1 q!3 q!3 q!3)) (* 8 (* ?x4461 ?x4461 ?x8301 ?x8301 ?x8301 ?x8301 r!2 q!3 q!3)) (* (- 96) (* r00 r!2 r!2 r!2 x!0 d!1 d!1 q!3 q!3)) (* (- 72) ?x14902) (* 384 (* r00 r!2 r!2 r!2 r!2 d!1 q!3 q!3)) ?x11248 (* 8 ?x15013) (* (- 16) (* d00 x00 r!2 q!3 q!3 q!3 q!3)) (* (- 12) ?x15102) (* 6 ?x15128) (* 48 (* d00 q00 r!2 r!2 r!2 x!0 d!1 q!3 q!3)) (* 6 ?x15304) (* 6 ?x15348) (* 12 ?x15459) (* 64 (* r00 r!2 r!2 r!2 x!0 x!0 q!3)) (* (- 8) ?x15647) (* (- 16) (* r00 d00 r!2 x!0 d!1 q!3 q!3 q!3)) ?x11269 (* (- 16) (* r!2 r!2 r!2 d!1 d!1 q!3 q!3 q!3)) (* (- 16) (* d00 q00 r!2 r!2 r!2 q!3 q!3 q!3)) (* 64 (* d00 q00 r!2 r!2 r!2 r!2 x!0 q!3)) ?x10716)))
 (let (($x11267 (= ?x11263 0)))
 (let ((?x7102 (+ 2 ?x5020 ?x5025 d!1 q!3)))
 (let ((?x3276 (+ 4 q!3)))
 (let ((?x12281 (* 4 (* ?x4461 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2 r!2 r!2 r!2))))
 (let ((?x7345 (* 2 (* d00 q00 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2 r!2 r!2))))
 (let ((?x9681 (* (- 2) (* ?x4461 ?x3276 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2 r!2 r!2))))
 (let ((?x9570 (* (- 2) (* d00 q00 ?x4461 ?x4461 ?x4461 ?x3276 ?x7102 ?x7102 r!2 r!2 r!2))))
 (let ((?x5887 (* (- 1) (* d00 d00 q00 ?x4461 ?x4461 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2))))
 (let ((?x8391 (* 4 (* d00 r00 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2 r!2 r!2))))
 (let ((?x8418 (* d00 d00 q00 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2 r!2 r!2)))
 (let ((?x7269 (* (- 4) (* ?x4461 ?x4461 ?x4461 ?x4461 ?x3276 ?x7102 ?x7102 r!2 r!2 r!2 r!2))))
 (let ((?x1510 (* (- 4) (* d00 x00 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2 r!2 r!2))))
 (let ((?x15119 (* 2 (* ?x4461 ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x7102 ?x7102 r!2 r!2 r!2))))
 (let ((?x2596 (* (- 4) (* ?x4461 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 ?x7102 r!2 r!2 r!2))))
 (let ((?x5340 (* d00 d00 q00 ?x4461 ?x4461 ?x4461 ?x3276 ?x7102 ?x7102 r!2 r!2 r!2)))
 (let ((?x1350 (* 4 (* d00 x00 ?x4461 ?x4461 ?x4461 ?x3276 ?x7102 ?x7102 r!2 r!2 r!2))))
 (let ((?x13814 (* (- 1) (* ?x4461 ?x4461 ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x7102 ?x7102 r!2 r!2 r!2))))
 (let ((?x8089 (* 4 (* ?x4461 ?x4461 ?x4461 ?x4461 ?x3276 ?x7102 ?x7102 ?x7102 r!2 r!2 r!2))))
 (let ((?x15745 (* (- 4) (* d00 r00 ?x4461 ?x4461 ?x4461 ?x3276 ?x7102 ?x7102 r!2 r!2 r!2))))
 (let ((?x4084 (+ (* 8 (* ?x4461 ?x4461 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 ?x7102 r!2)) (* (- 4) (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 ?x7102 r!2)) ?x15745 (* 4 (* d00 r00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x7102 r!2)) ?x8089 (* ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2 r!2 r!2) ?x13814 ?x1350 (* (- 1) (* d00 d00 q00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x7102 r!2)) (* (- 8) (* r00 ?x4461 ?x4461 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2)) (* 4 (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x7102 r!2 r!2)) ?x5340 ?x2596 (* 4 (* d00 r00 ?x4461 ?x4461 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2)) ?x15119 ?x1510 (* (- 4) (* d00 x00 ?x4461 ?x4461 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2)) (* (- 4) (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 r!2)) (* (- 4) (* d00 x00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x7102 r!2)) (* 2 (* d00 q00 ?x4461 ?x4461 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2)) ?x7269 (* (- 1) ?x8418) (* 8 (* ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 ?x7102 r!2 r!2 r!2)) (* ?x4461 ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2) ?x8391 ?x5887 (* (- 8) (* r00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x7102 r!2)) ?x9570 (* (- 8) (* ?x4461 ?x4461 ?x4461 ?x3276 ?x7102 ?x7102 ?x7102 r!2 r!2 r!2)) (* (- 2) (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2)) ?x9681 (* (- 2) (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3276 ?x7102 r!2)) ?x7345 (* 8 (* r00 ?x4461 ?x4461 ?x4461 ?x3276 ?x7102 ?x7102 r!2 r!2 r!2)) (* 4 (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2 r!2)) (* ?x4461 ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3276 ?x7102 r!2) ?x12281 (* 2 (* d00 q00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x7102 r!2)) (* 8 (* ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 r!2)) (* (- 8) (* r00 ?x3276 ?x3276 ?x3276 ?x7102 ?x7102 ?x7102 r!2 r!2 r!2)))))
 (let (($x9806 (= ?x4084 0)))
 (let ((?x562 (* (- 1) d!1)))
 (let ((?x8470 (+ (- 2) ?x5020 ?x5025 ?x562 q!3)))
 (let ((?x5015 (+ (- 4) q!3)))
 (let ((?x3253 (* (- 4) (* d00 r00 ?x5015 ?x5015 ?x5015 ?x8470 ?x8470 ?x8470 r!2 r!2 r!2))))
 (let ((?x8367 (* 4 (* d00 r00 ?x5015 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 r!2 r!2 r!2))))
 (let ((?x1442 (* (- 4) (* ?x5015 ?x5015 ?x5015 ?x4461 ?x8470 ?x8470 ?x8470 r!2 r!2 r!2 r!2))))
 (let ((?x4837 (* (- 4) (* d00 x00 ?x5015 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 r!2 r!2 r!2))))
 (let ((?x8329 (* (- 1) (* ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 r!2))))
 (let ((?x5091 (* 4 (* d00 x00 ?x5015 ?x5015 ?x5015 ?x8470 ?x8470 ?x8470 r!2 r!2 r!2))))
 (let ((?x8362 (* d00 d00 q00 ?x5015 ?x5015 ?x5015 ?x8470 ?x8470 ?x8470 r!2 r!2 r!2)))
 (let ((?x10761 (* (- 2) (* d00 q00 ?x5015 ?x5015 ?x5015 ?x8470 ?x8470 ?x8470 r!2 r!2 r!2))))
 (let ((?x9450 (* (- 2) (* ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 r!2 r!2 r!2))))
 (let ((?x8414 (* (- 1) (* ?x5015 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 r!2 r!2 r!2))))
 (let ((?x8273 (* 2 (* ?x5015 ?x5015 ?x5015 ?x5015 ?x4461 ?x8470 ?x8470 ?x8470 r!2 r!2 r!2))))
 (let ((?x8396 (* 4 (* ?x5015 ?x4461 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 r!2 r!2 r!2 r!2))))
 (let ((?x9109 (* 4 (* ?x5015 ?x5015 ?x5015 ?x4461 ?x8470 ?x8470 ?x8470 ?x8470 r!2 r!2 r!2))))
 (let ((?x5096 (* d00 d00 q00 ?x5015 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 r!2 r!2 r!2)))
 (let ((?x2327 (* (- 4) (* ?x5015 ?x4461 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 r!2 r!2 r!2))))
 (let ((?x8298 (* 2 (* d00 q00 ?x5015 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 r!2 r!2 r!2))))
 (let ((?x7710 (+ (* 8 (* r00 ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 r!2)) (* 8 (* r00 ?x5015 ?x5015 ?x5015 ?x8470 ?x8470 ?x8470 r!2 r!2 r!2)) ?x8298 ?x2327 (* 4 (* d00 x00 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 r!2)) (* (- 1) ?x5096) ?x9109 (* (- 4) (* d00 r00 ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 r!2)) (* d00 d00 q00 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 r!2) (* (- 1) (* ?x5015 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x4461 ?x8470 r!2)) (* (- 4) (* d00 r00 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 r!2)) (* 4 (* ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 ?x8470 r!2)) (* (- 8) (* ?x5015 ?x5015 ?x5015 ?x8470 ?x8470 ?x8470 ?x8470 r!2 r!2 r!2)) ?x8396 (* (- 2) (* d00 q00 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 r!2)) (* 4 (* d00 x00 ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 r!2)) (* (- 2) (* d00 q00 ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 r!2)) ?x8273 ?x8414 (* 8 (* ?x5015 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 r!2 r!2 r!2)) (* 4 (* ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 r!2)) (* d00 d00 q00 ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 r!2) (* (- 8) (* r00 ?x5015 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 r!2 r!2 r!2)) ?x9450 ?x10761 (* 2 (* ?x5015 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x8470 r!2)) (* (- 8) (* ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 ?x8470 r!2)) ?x8362 (* 2 (* ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 r!2)) (* ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 r!2 r!2 r!2) ?x5091 ?x8329 (* (- 8) (* ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 ?x8470 r!2)) ?x4837 (* (- 4) (* ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x8470 ?x8470 ?x8470 r!2 r!2)) (* (- 4) (* ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x8470 r!2 r!2)) ?x1442 ?x8367 (* 8 (* r00 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x8470 r!2)) ?x3253)))
 (let (($x9661 (= ?x7710 0)))
 (let (($x7361 (not $x9661)))
 (let (($x8366 (or $x7361 (not $x9806) (not $x11267) $x15566)))
 (let (($x1509 (and $x10234 $x8366)))
 (let ((?x3167 (+ 2 q!3 ?x5020 ?x5025 d!1)))
 (let ((?x8929 (* d00 d00 q00 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2 r!2 r!2)))
 (let ((?x9421 (* (- 4) (* d00 x00 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2 r!2 r!2))))
 (let ((?x8877 (* 2 (* d00 q00 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2 r!2 r!2))))
 (let ((?x3526 (* (- 4) (* d00 r00 ?x4461 ?x4461 ?x4461 ?x3276 ?x3167 ?x3167 r!2 r!2 r!2))))
 (let ((?x3513 (* (- 1) (* ?x4461 ?x4461 ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3167 ?x3167 r!2 r!2 r!2))))
 (let ((?x1124 (* (- 1) (* d00 d00 q00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2))))
 (let ((?x4875 (* (- 4) (* ?x4461 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 ?x3167 r!2 r!2 r!2))))
 (let ((?x13679 (* (- 2) (* d00 q00 ?x4461 ?x4461 ?x4461 ?x3276 ?x3167 ?x3167 r!2 r!2 r!2))))
 (let ((?x13675 (* d00 d00 q00 ?x4461 ?x4461 ?x4461 ?x3276 ?x3167 ?x3167 r!2 r!2 r!2)))
 (let ((?x9453 (* 4 (* ?x4461 ?x4461 ?x4461 ?x4461 ?x3276 ?x3167 ?x3167 ?x3167 r!2 r!2 r!2))))
 (let ((?x1499 (* 4 (* d00 r00 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2 r!2 r!2))))
 (let ((?x3795 (* (- 2) (* ?x4461 ?x3276 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2 r!2 r!2))))
 (let ((?x2256 (* 4 (* d00 x00 ?x4461 ?x4461 ?x4461 ?x3276 ?x3167 ?x3167 r!2 r!2 r!2))))
 (let ((?x6615 (* 2 (* ?x4461 ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3167 ?x3167 r!2 r!2 r!2))))
 (let ((?x6142 (* 4 (* ?x4461 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2 r!2 r!2 r!2))))
 (let ((?x9324 (* (- 4) (* ?x4461 ?x4461 ?x4461 ?x4461 ?x3276 ?x3167 ?x3167 r!2 r!2 r!2 r!2))))
 (let ((?x10661 (+ (* 8 (* ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 r!2)) ?x9324 ?x6142 ?x6615 ?x2256 (* 2 (* d00 q00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3167 r!2)) (* (- 4) (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 r!2)) ?x3795 (* (- 2) (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2)) (* (- 8) (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3167 ?x3167 ?x3167 r!2 r!2 r!2)) (* 4 (* d00 r00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3167 r!2)) (* (- 4) (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 ?x3167 r!2)) (* 4 (* d00 r00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2)) (* (- 4) (* d00 x00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2)) (* 8 (* r00 ?x4461 ?x4461 ?x4461 ?x3276 ?x3167 ?x3167 r!2 r!2 r!2)) (* (- 8) (* r00 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2 r!2 r!2)) (* 2 (* d00 q00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2)) ?x1499 ?x9453 (* (- 8) (* r00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2)) (* (- 8) (* r00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3167 r!2)) ?x13675 ?x13679 (* 4 (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2 r!2)) (* 4 (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3167 r!2 r!2)) (* ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2 r!2 r!2) ?x4875 (* ?x4461 ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3276 ?x3167 r!2) ?x1124 (* (- 2) (* ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3276 ?x3167 r!2)) ?x3513 ?x3526 (* ?x4461 ?x4461 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 r!2) ?x8877 (* 8 (* ?x4461 ?x4461 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 ?x3167 r!2)) ?x9421 (* (- 1) ?x8929) (* 8 (* ?x3276 ?x3276 ?x3276 ?x3167 ?x3167 ?x3167 ?x3167 r!2 r!2 r!2)) (* (- 4) (* d00 x00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3167 r!2)) (* (- 1) (* d00 d00 q00 ?x4461 ?x4461 ?x3276 ?x3276 ?x3276 ?x3167 r!2)))))
 (let ((?x11789 (+ (- 4) q!3 ?x5020 ?x5025 ?x11793)))
 (let ((?x12353 (* (- 4) (* ?x3749 ?x4461 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 r!2 r!2 r!2 r!2))))
 (let ((?x4062 (* (- 1) (* ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 r!2 r!2 r!2))))
 (let ((?x586 (* d00 d00 q00 ?x3749 ?x3749 ?x3749 ?x11789 ?x11789 ?x11789 r!2 r!2 r!2)))
 (let ((?x11461 (* 4 (* d00 x00 ?x3749 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 r!2 r!2 r!2))))
 (let ((?x4874 (* 4 (* ?x3749 ?x3749 ?x3749 ?x4461 ?x11789 ?x11789 ?x11789 r!2 r!2 r!2 r!2))))
 (let ((?x4865 (* (- 1) (* d00 d00 q00 ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 r!2))))
 (let ((?x3483 (* (- 2) (* ?x3749 ?x3749 ?x3749 ?x3749 ?x4461 ?x11789 ?x11789 ?x11789 r!2 r!2 r!2))))
 (let ((?x11742 (* (- 4) (* d00 x00 ?x3749 ?x3749 ?x3749 ?x11789 ?x11789 ?x11789 r!2 r!2 r!2))))
 (let ((?x13417 (* 2 (* ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 r!2 r!2 r!2))))
 (let ((?x10317 (* (- 4) (* ?x3749 ?x3749 ?x3749 ?x4461 ?x11789 ?x11789 ?x11789 ?x11789 r!2 r!2 r!2))))
 (let ((?x12621 (* (- 2) (* d00 q00 ?x3749 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 r!2 r!2 r!2))))
 (let ((?x15744 (* 4 (* d00 r00 ?x3749 ?x3749 ?x3749 ?x11789 ?x11789 ?x11789 r!2 r!2 r!2))))
 (let ((?x5073 (* d00 d00 q00 ?x3749 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 r!2 r!2 r!2)))
 (let ((?x11109 (* 2 (* d00 q00 ?x3749 ?x3749 ?x3749 ?x11789 ?x11789 ?x11789 r!2 r!2 r!2))))
 (let ((?x15734 (* 4 (* ?x3749 ?x4461 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 r!2 r!2 r!2))))
 (let ((?x9586 (* (- 4) (* d00 r00 ?x3749 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 r!2 r!2 r!2))))
 (let ((?x5923 (+ (* 4 (* ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 r!2 r!2)) ?x9586 ?x15734 ?x11109 ?x5073 (* 8 (* ?x3749 ?x3749 ?x3749 ?x11789 ?x11789 ?x11789 ?x11789 r!2 r!2 r!2)) (* 2 (* d00 q00 ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 r!2)) (* 8 (* ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 ?x11789 r!2)) ?x15744 (* (- 4) (* ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 r!2)) (* ?x3749 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 r!2 r!2 r!2) (* 8 (* ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 ?x11789 r!2)) ?x12621 ?x10317 ?x13417 ?x11742 (* ?x3749 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4461 ?x11789 r!2) (* (- 8) (* ?x3749 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 r!2 r!2 r!2)) ?x3483 ?x4865 (* (- 8) (* r00 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 r!2)) ?x4874 ?x11461 (* ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 r!2) (* (- 8) (* r00 ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 r!2)) (* 4 (* d00 r00 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 r!2)) (* (- 4) (* ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 ?x11789 r!2)) (* 8 (* r00 ?x3749 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 r!2 r!2 r!2)) (* (- 8) (* r00 ?x3749 ?x3749 ?x3749 ?x11789 ?x11789 ?x11789 r!2 r!2 r!2)) (* 2 (* d00 q00 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 r!2)) (* (- 1) ?x586) (* (- 4) (* d00 x00 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 r!2)) (* 4 (* ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x11789 r!2 r!2)) (* (- 2) (* ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 r!2)) ?x4062 (* 4 (* d00 r00 ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 r!2)) ?x12353 (* (- 2) (* ?x3749 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x4461 ?x11789 r!2)) (* (- 1) (* d00 d00 q00 ?x3749 ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 r!2)) (* (- 4) (* d00 x00 ?x3749 ?x3749 ?x4461 ?x4461 ?x11789 ?x11789 ?x11789 r!2)))))
 (let ((?x14674 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1 d!1)))
 (let ((?x14669 (* (- 48) (* q!3 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1))))
 (let ((?x5734 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1 d!1)))
 (let ((?x4954 (* 48 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1))))
 (let ((?x14042 (+ q!3 ?x5020 ?x5025)))
 (let ((?x4951 (* (- 1) (* ?x4461 ?x4461 ?x4461 ?x4461 ?x14042 ?x14042 ?x14042 r!2 q!3 q!3 q!3))))
 (let ((?x9653 (* 4 (* ?x4461 ?x4461 ?x4461 ?x4461 ?x14042 ?x14042 r!2 r!2 r!2 r!2 q!3))))
 (let ((?x9648 (* ?x4461 ?x4461 ?x4461 ?x4461 ?x4461 ?x14042 ?x14042 r!2 r!2 r!2 q!3 q!3)))
 (let ((?x13040 (* q!3 q!3 r!2 x!0 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x15073 (* (- 4) (* q!3 q!3 r!2 x!0 x!0 x!0 d00 d00 q00 d!1))))
 (let ((?x4304 (* (- 12) (* q!3 q!3 q!3 q!3 r!2 x!0 d00 d00 q00 d!1))))
 (let ((?x4296 (* 24 (* q!3 q!3 q!3 q!3 r!2 r!2 d00 d00 q00 d!1))))
 (let ((?x1316 (* q!3 q!3 q!3 q!3 q!3 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x1318 (* 4 (* q!3 q!3 q!3 q!3 q!3 r!2 d00 d00 q00 d!1))))
 (let ((?x2689 (* q!3 q!3 q!3 q!3 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x2681 (* (- 24) (* q!3 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1 d!1))))
 (let ((?x15697 (* 2 (* q!3 q!3 q!3 r!2 r!2 d00 d00 q00 d!1 d!1))))
 (let ((?x13051 (* (- 1) (* q!3 q!3 q!3 r!2 x!0 d00 d00 q00 d!1 d!1))))
 (let ((?x12526 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 d!1)))
 (let ((?x4392 (* q!3 q!3 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1 d!1)))
 (let ((?x4186 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 d!1 d!1)))
 (let ((?x3740 (* 12 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 q00 d!1 d!1))))
 (let ((?x15466 (* 16 (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d!1 d!1 d!1))))
 (let ((?x1448 (* (- 96) (* q!3 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1))))
 (let ((?x13152 (* (- 32) (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d!1 d!1 d!1))))
 (let ((?x770 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1 d!1)))
 (let ((?x734 (* q!3 q!3 r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x971 (* 24 (* q!3 q!3 r!2 r!2 x!0 x!0 d00 d00 q00 d!1))))
 (let ((?x15015 (* (- 24) (* q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00 d!1))))
 (let ((?x15107 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x6725 (* (- 16) (* q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00 d!1))))
 (let ((?x8412 (* (- 8) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 r00))))
 (let ((?x7103 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 x00)))
 (let ((?x9199 (* q!3 q!3 q!3 r!2 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x6978 (* 12 (* q!3 q!3 q!3 r!2 x!0 x!0 d00 d00 q00 d!1))))
 (let ((?x565 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 x00 d!1 d!1 d!1)))
 (let ((?x5716 (* (- 24) (* q!3 q!3 q!3 r!2 r!2 r!2 d00 x00 d!1 d!1))))
 (let ((?x5683 (* (- 2) (* ?x4461 ?x4461 ?x4461 ?x4461 ?x14042 ?x14042 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x5712 (* (- 4) (* ?x4461 ?x4461 ?x4461 ?x4461 ?x14042 ?x14042 ?x14042 r!2 r!2 r!2 q!3))))
 (let ((?x4765 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x5037 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1 d!1 d!1)))
 (let ((?x10647 (* (- 96) (* q!3 q!3 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1))))
 (let ((?x10643 (* q!3 q!3 q!3 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x14475 (* (- 48) (* q!3 q!3 q!3 r!2 r!2 x!0 d00 d00 q00 d!1))))
 (let ((?x14972 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 x00)))
 (let ((?x12295 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 x00)))
 (let ((?x15716 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 x00)))
 (let ((?x7582 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 x00)))
 (let ((?x8222 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 x00)))
 (let ((?x8207 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 d!1 d!1)))
 (let ((?x8213 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 d!1)))
 (let ((?x8208 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1 d!1)))
 (let ((?x8204 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1)))
 (let ((?x8219 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1 d!1)))
 (let ((?x8205 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1)))
 (let ((?x8217 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1)))
 (let ((?x8216 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1 d!1)))
 (let ((?x8201 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1 d!1)))
 (let ((?x6193 (* (- 8) (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d!1 d!1 d!1))))
 (let ((?x8196 (* 4 (* ?x4461 ?x14042 ?x14042 ?x14042 ?x14042 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x8191 (* (- 96) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 r00))))
 (let ((?x6187 (* 96 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r00))))
 (let ((?x8180 (* (- 24) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 r00))))
 (let ((?x8184 (* 48 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r00))))
 (let ((?x8182 (* 8 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r00))))
 (let ((?x8174 (* 32 (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d!1 d!1 d!1))))
 (let ((?x8162 (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 r00))))
 (let ((?x6151 (* (- 8) (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d!1 d!1 d!1))))
 (let ((?x8150 (* (- 216) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x8152 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00)))
 (let ((?x8141 (* (- 32) (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d!1 d!1 d!1))))
 (let ((?x8138 (* 64 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 r00))))
 (let ((?x8136 (* 32 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0))))
 (let ((?x8130 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1 d!1)))
 (let ((?x8129 (* (- 1) (* q!3 q!3 q!3 q!3 q!3 r!2 d!1 d!1 d!1 d!1))))
 (let ((?x8112 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 r00 d00)))
 (let ((?x8096 (* 24 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 r00))))
 (let ((?x8091 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 r00 d00)))
 (let ((?x6091 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r00 d00)))
 (let ((?x8073 (* 48 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1))))
 (let ((?x8069 (* 352 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x8064 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 r00 d00)))
 (let ((?x8061 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 d!1 d!1)))
 (let ((?x8058 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1 d!1 d!1)))
 (let ((?x8062 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 d00 q00)))
 (let ((?x8052 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 d00 q00)))
 (let ((?x8053 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 d00 q00)))
 (let ((?x8048 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 d00 q00)))
 (let ((?x8046 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00)))
 (let ((?x5999 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00)))
 (let ((?x8043 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00)))
 (let ((?x8038 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 x00)))
 (let ((?x8041 (* q!3 q!3 q!3 q!3 r!2 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x8039 (* (- 352) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x8035 (* (- 24) (* q!3 q!3 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1))))
 (let ((?x8032 (* (- 96) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 r00))))
 (let ((?x8030 (* 4 (* d00 x00 ?x4461 ?x4461 ?x14042 ?x14042 ?x14042 r!2 q!3 q!3))))
 (let ((?x8015 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1 d!1)))
 (let ((?x8014 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x8013 (* (- 12) (* q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1))))
 (let ((?x6024 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1 d!1)))
 (let ((?x8009 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x8008 (* 48 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1))))
 (let ((?x8004 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1 d!1)))
 (let ((?x6022 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x7999 (* (- 48) (* q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1))))
 (let ((?x8001 (* q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1 d!1)))
 (let ((?x7989 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00 d!1 d!1 d!1)))
 (let ((?x6021 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1 d!1)))
 (let ((?x7977 (* 48 (* q!3 q!3 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1))))
 (let ((?x7780 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1 d!1)))
 (let ((?x7976 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 x00)))
 (let ((?x7754 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 x!0 d!1)))
 (let ((?x7734 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 x!0 d!1)))
 (let ((?x7725 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 x!0 d!1)))
 (let ((?x7721 (* q!3 q!3 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1 d!1)))
 (let ((?x7705 (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1 d!1 d!1)))
 (let ((?x7699 (* 24 (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1 d!1))))
 (let ((?x6019 (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1 d!1)))
 (let ((?x7972 (* (- 96) (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1))))
 (let ((?x7529 (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1 d!1)))
 (let ((?x7528 (* 96 (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1))))
 (let ((?x7499 (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1 d!1)))
 (let ((?x7521 (* (- 48) (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1))))
 (let ((?x7497 (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1 d!1)))
 (let ((?x7496 (* 96 (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1))))
 (let ((?x7486 (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d00 d!1 d!1 d!1)))
 (let ((?x7484 (* 24 (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d00 d!1 d!1))))
 (let ((?x7410 (* (- 2) (* d00 q00 ?x4461 ?x4461 ?x14042 ?x14042 ?x14042 r!2 q!3 q!3))))
 (let ((?x7417 (* 96 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1))))
 (let ((?x6012 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x13275 (* (- 4) (* d00 r00 ?x4461 ?x4461 ?x14042 ?x14042 ?x14042 r!2 q!3 q!3))))
 (let ((?x6011 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 q00)))
 (let ((?x1243 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00)))
 (let ((?x7217 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 q00)))
 (let ((?x1157 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 q00)))
 (let ((?x6009 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 q00)))
 (let ((?x13221 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1)))
 (let ((?x13223 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 d!1)))
 (let ((?x13219 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 q00)))
 (let ((?x13217 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 q00)))
 (let ((?x13216 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 q00)))
 (let ((?x13214 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 q00)))
 (let ((?x6007 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 q00)))
 (let ((?x13210 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 q00)))
 (let ((?x13203 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 q00 d!1 d!1 d!1)))
 (let ((?x6005 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 r!2 d!1)))
 (let ((?x12259 (* 216 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x5299 (* (- 48) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x12242 (* 480 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x12213 (* (- 192) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x12185 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 r00 d00)))
 (let ((?x12144 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r00 d00)))
 (let ((?x12132 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x5271 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1)))
 (let ((?x12127 (* (- 8) (* q!3 q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x12086 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 r00 d00)))
 (let ((?x12075 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 r00 d00)))
 (let ((?x12048 (* 12 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1 d!1))))
 (let ((?x12018 (* (- 240) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x12038 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 r00 d00)))
 (let ((?x12028 (* (- 2) (* q!3 q!3 q!3 q!3 r!2 r!2 d!1 d!1 d!1 d!1))))
 (let ((?x11925 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x11974 (* (- 8) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 x!0))))
 (let ((?x11919 (* q!3 q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x11480 (* (- 240) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x11921 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 d!1)))
 (let ((?x5243 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00)))
 (let ((?x11894 (* 32 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0))))
 (let ((?x11913 (* q!3 q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1)))
 (let ((?x11882 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 x00)))
 (let ((?x11878 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 x00)))
 (let ((?x5229 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r00 d00)))
 (let ((?x12573 (* (- 72) (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x8737 (* 36 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00 d!1))))
 (let ((?x8716 (* 72 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 x!0))))
 (let ((?x8830 (+ ?x8716 ?x8737 (* 4 (* q!3 q!3 q!3 r!2 x!0 r00 d00 d!1 d!1)) (* 32 (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d00)) ?x12573 (* (- 24) ?x5229) (* (- 48) ?x11878) (* (- 48) ?x11882) (* (- 2) ?x11913) ?x11894 ?x5243 (* (- 24) ?x11921) (* 12 (* q!3 q!3 q!3 r!2 x!0 x!0 d00 d00 q00)) (* (- 32) (* q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00)) ?x11480 (* (- 1) ?x11919) ?x11974 (* (- 12) ?x11925) (* 24 (* q!3 q!3 r!2 r!2 x!0 x!0 d00 d00 q00)) (* (- 4) (* q!3 q!3 r!2 x!0 x!0 x!0 d00 d00 q00)) ?x12028 (* 48 ?x12038) ?x12018 ?x12048 (* (- 24) ?x12075) (* (- 12) ?x12086) ?x12127 (* (- 64) (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d00)) (* (- 16) ?x5271) (* (- 6) ?x12132) (* (- 48) ?x12144) (* 16 (* q!3 q!3 q!3 q!3 r!2 r!2 d!1 d!1)) (* (- 128) (* q!3 r!2 r!2 r!2 r!2 r!2 d00 x00)) (* 128 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 x00)) (* 40 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00)) (* (- 32) ?x12185) ?x12213 (* (- 32) (* q!3 q!3 q!3 r!2 r!2 r!2 d00 x00)) (* (- 32) (* q!3 r!2 r!2 r!2 x!0 x!0 d00 x00)) ?x12242 ?x5299 ?x12259 (* 32 (* q!3 q!3 q!3 q!3 r!2 r00)) (* 64 (* q!3 q!3 q!3 r!2 r!2 r00)) (* (- 32) (* q!3 q!3 q!3 r!2 x!0 r00)) (* 128 (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d00)) (* (- 128) (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d00)) (* 32 (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d00)) (* (- 32) ?x6005) (* (- 32) (* q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00)) (* 32 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00)) (* (- 8) (* q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00)) (* 2 ?x13203) (* (- 8) (* q!3 q!3 q!3 q!3 r!2 d00 q00)) (* (- 16) (* q!3 q!3 q!3 r!2 r!2 d00 q00)) (* 8 (* q!3 q!3 q!3 r!2 x!0 d00 q00)) (* (- 16) ?x13210) (* (- 24) ?x6007) (* 24 ?x13214) (* 6 ?x13216) (* (- 12) ?x13217) (* (- 2) ?x13219) (* (- 64) ?x13223) (* (- 48) ?x13221) (* 2 ?x6009) (* 8 (* q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1 d!1)) (* (- 12) ?x1157) (* 24 ?x7217) (* 3 ?x1243) (* (- 6) ?x6011) ?x13275 (* (- 8) ?x6012) (* 64 (* q!3 q!3 r!2 r!2 r!2 x!0 d00 x00)) ?x7417 ?x7410 (* (- 32) (* q!3 q!3 q!3 r!2 x!0 r00 d!1)) (* 16 (* q!3 q!3 q!3 r!2 r!2 r00 d!1 d!1)) (* 64 (* q!3 q!3 q!3 r!2 r!2 r00 d!1)) (* 8 (* q!3 q!3 q!3 q!3 r!2 r00 d!1 d!1)) (* 32 (* q!3 q!3 q!3 q!3 r!2 r00 d!1)) (* (- 8) (* q!3 q!3 q!3 r!2 x!0 r00 d!1 d!1)) (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d00 d!1)) (* 16 (* q!3 q!3 q!3 q!3 r!2 d00 x00 d!1)) ?x7484 (* 4 ?x7486) (* 128 (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d00)) (* 192 (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d00 d!1)) (* 4 (* q!3 q!3 q!3 q!3 r!2 d00 x00 d!1 d!1)) ?x7496 (* 16 ?x7497) (* (- 96) (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d00 d!1)) ?x7521 (* (- 8) ?x7499) (* 192 (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1)) ?x7528 (* 16 ?x7529) (* (- 192) (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1)) ?x7972 (* (- 16) ?x6019) (* (- 192) (* q!3 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1)) (* 48 (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1)) ?x7699 (* 4 ?x7705) (* 8 ?x7721) (* (- 8) (* ?x4461 ?x4461 ?x14042 ?x14042 ?x14042 ?x14042 r!2 q!3 q!3)) (* 96 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 q00 d!1)) (* 48 ?x7725) (* 8 (* q!3 q!3 q!3 r!2 r!2 d00 x00 d!1 d!1)) (* (- 24) ?x7734) (* 4 ?x7754) (* 32 (* q!3 q!3 q!3 r!2 r!2 d00 x00 d!1)) (* (- 16) (* q!3 q!3 q!3 r!2 x!0 d00 x00 d!1)) (* 8 (* r00 ?x4461 ?x4461 ?x14042 ?x14042 ?x14042 r!2 q!3 q!3)) (* 64 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 q00)) (* 24 ?x7976) (* (- 16) ?x7780) ?x7977 (* 4 (* ?x4461 ?x4461 ?x4461 ?x14042 ?x14042 ?x14042 ?x14042 r!2 q!3 q!3)) (* (- 4) ?x6021) (* (- 1) ?x7989) (* (- 4) (* q!3 q!3 q!3 r!2 x!0 d00 x00 d!1 d!1)) (* 2 ?x8001) ?x7999 (* (- 24) ?x6022) (* (- 4) ?x8004) (* (- 48) (* q!3 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1)) ?x8008 (* 24 ?x8009) (* 4 ?x6024) ?x8013 (* (- 6) ?x8014) (* (- 1) ?x8015) (* (- 8) (* q!3 q!3 q!3 q!3 r!2 d00 q00 d!1)) (* (- 2) (* q!3 q!3 q!3 q!3 r!2 d00 q00 d!1 d!1)) (* (- 16) (* q!3 q!3 q!3 r!2 r!2 d00 q00 d!1)) (* (- 4) (* q!3 q!3 q!3 r!2 r!2 d00 q00 d!1 d!1)) (* 8 (* q!3 q!3 q!3 r!2 x!0 d00 q00 d!1)) (* 2 (* q!3 q!3 q!3 r!2 x!0 d00 q00 d!1 d!1)) (* (- 4) (* ?x4461 ?x4461 ?x4461 ?x14042 ?x14042 ?x14042 r!2 r!2 q!3 q!3)) ?x8030 ?x8032 ?x8035 ?x8039 (* (- 3) ?x8041) (* (- 4) ?x8038) (* 192 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1)) (* 6 ?x8043) (* (- 12) ?x5999) (* 12 ?x8046) (* 6 ?x8048) (* (- 12) ?x8053) (* (- 4) (* q!3 q!3 q!3 r!2 x!0 d00 d00 q00)) (* 8 ?x8052) (* (- 40) (* q!3 q!3 q!3 r!2 r!2 x!0 d!1 d!1)) (* 8 (* q!3 q!3 q!3 r!2 r!2 d00 d00 q00)) (* (- 1) ?x8062) (* (- 4) ?x8058) (* (- 6) ?x8061) (* 48 ?x8064) (* (- 48) (* q!3 q!3 q!3 r!2 r!2 x!0 d00 d00 q00)) ?x8069 ?x8073 (* 16 (* q!3 q!3 q!3 r!2 x!0 r00 d00 d!1)) (* 4 (* q!3 q!3 q!3 q!3 r!2 d00 d00 q00)) (* (- 96) (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d!1)) (* 24 (* q!3 q!3 q!3 q!3 r!2 r!2 d00 d00 q00)) (* 4 (* q!3 q!3 q!3 q!3 q!3 r!2 d00 d00 q00)) (* (- 12) (* q!3 q!3 q!3 q!3 r!2 x!0 d00 d00 q00)) (* (- 4) ?x6091) (* 4 ?x8091) ?x8096 (* 16 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 q00)) (* (- 32) (* q!3 q!3 r!2 r!2 r!2 x!0 d00 q00)) (* 64 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 q00)) (* (- 384) (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d!1)) (* (- 192) (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d!1 d!1)) (* (- 64) (* q!3 r!2 r!2 r!2 x!0 x!0 r00)) (* (- 256) (* q!3 r!2 r!2 r!2 r!2 r!2 r00)) (* 12 ?x8112) (* 256 (* q!3 r!2 r!2 r!2 r!2 x!0 r00)) (* 128 (* q!3 q!3 r!2 r!2 r!2 x!0 r00)) (* (- 256) (* q!3 q!3 r!2 r!2 r!2 r!2 r00)) (* (- 16) (* q!3 q!3 q!3 r!2 x!0 d00 x00)) (* 16 (* q!3 q!3 q!3 q!3 r!2 d00 x00)) (* 16 (* q!3 q!3 q!3 r!2 x!0 r00 d00)) (* 8 (* q!3 q!3 q!3 q!3 q!3 r!2 d!1)) (* (- 16) (* q!3 q!3 q!3 q!3 r!2 r00 d00)) (* 4 (* q!3 q!3 q!3 q!3 q!3 r!2 d!1 d!1)) (* (- 2) (* q!3 q!3 q!3 q!3 q!3 r!2 d!1 d!1 d!1)) (* (- 32) (* q!3 q!3 q!3 q!3 r!2 r!2)) ?x8129 (* 16 ?x8130) ?x8136 ?x8138 ?x8141 (* (- 32) (* q!3 q!3 q!3 r!2 r!2 r00 d00)) (* 32 (* q!3 q!3 q!3 r!2 r!2 d00 x00)) (* (- 64) (* q!3 q!3 q!3 r!2 r!2 r!2 r00)) (* 384 (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d!1)) (* (- 3) ?x8152) ?x8150 ?x6151 (* 32 (* q!3 q!3 q!3 r!2 r!2 x!0)) (* (- 64) (* q!3 q!3 q!3 r!2 r!2 r!2)) (* (- 32) (* q!3 q!3 q!3 r!2 r!2 r!2 d!1)) ?x8162 (* 16 (* q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1)) (* 16 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 q00)) (* (- 64) (* q!3 r!2 r!2 r!2 r!2 x!0 d00 q00)) (* 192 (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d!1 d!1)) ?x8174 (* (- 96) (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d!1)) (* (- 48) (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d!1 d!1)) ?x8182 ?x8184 ?x8180 ?x6187 ?x8191 (* (- 48) (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d!1 d!1)) ?x8196 ?x6193 (* (- 384) (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d!1)) (* 8 ?x8201) (* 3 ?x8216) (* 6 ?x8217) (* 36 ?x8205) (* 12 ?x8219) (* 16 (* q!3 q!3 q!3 r!2 x!0 x!0 d!1 d!1)) (* (- 6) ?x8204) (* (- 3) ?x8208) (* 72 ?x8213) (* 12 ?x8207) (* 4 ?x8222) (* (- 12) ?x7582) (* 48 ?x15716) (* 16 (* q!3 q!3 q!3 r!2 x!0 x!0 d!1)) (* 12 ?x12295) (* 24 ?x14972) ?x14475 (* (- 12) ?x10643) (* (- 48) (* q!3 q!3 q!3 r!2 r!2 r!2 d00 x00 d!1)) (* (- 128) (* q!3 q!3 r!2 r!2 r!2 r!2 d00 x00)) ?x10647 (* (- 48) (* q!3 q!3 r!2 r!2 r!2 x!0 d00 q00 d!1)) (* 2 ?x5037) (* 6 ?x4765) ?x5712 ?x5683 ?x5716 (* (- 4) ?x565) (* (- 192) (* q!3 q!3 r!2 r!2 r!2 r!2 d00 x00 d!1)) ?x6978 (* 3 ?x9199) (* 32 ?x7103) ?x8412 ?x6725 (* (- 16) ?x15107) ?x15015 (* (- 20) (* q!3 q!3 q!3 q!3 r!2 x!0 d!1 d!1)) (* 24 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1)) ?x971 (* 6 ?x734) (* (- 16) ?x770) ?x13152 (* (- 12) (* q!3 q!3 q!3 r!2 r!2 x!0 d!1 d!1 d!1)) (* 192 (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d!1)) (* 4 (* q!3 q!3 q!3 r!2 x!0 x!0 d!1 d!1 d!1)) (* 96 (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d!1 d!1)) (* 96 (* q!3 q!3 r!2 r!2 r!2 x!0 d00 x00 d!1)) ?x1448 ?x15466 (* (- 192) (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d!1 d!1)) ?x3740 (* (- 2) (* q!3 q!3 q!3 q!3 r!2 x!0 d!1 d!1 d!1)) (* q!3 q!3 q!3 q!3 r!2 x!0 d!1 d!1 d!1 d!1) ?x4186 (* (- 4) ?x4392) (* (- 24) (* q!3 q!3 q!3 q!3 r!2 x!0 d!1)) (* (- 16) (* q!3 q!3 q!3 q!3 r!2 r00 d00 d!1)) (* (- 4) (* q!3 q!3 q!3 q!3 r!2 r00 d00 d!1 d!1)) (* (- 32) (* q!3 q!3 q!3 r!2 r!2 r00 d00 d!1)) (* (- 8) (* q!3 q!3 q!3 r!2 r!2 r00 d00 d!1 d!1)) (* 2 ?x12526) (* (- 4) (* q!3 q!3 q!3 r!2 x!0 d00 d00 q00 d!1)) ?x13051 (* 8 (* ?x4461 ?x4461 ?x4461 ?x14042 ?x14042 ?x14042 r!2 r!2 r!2 q!3)) (* q!3 q!3 q!3 q!3 r!2 d00 d00 q00 d!1 d!1) (* 8 (* q!3 q!3 q!3 r!2 r!2 d00 d00 q00 d!1)) ?x15697 (* 4 (* q!3 q!3 q!3 q!3 r!2 d00 d00 q00 d!1)) ?x2681 (* 24 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 q00 d!1)) (* 6 ?x2689) ?x1318 ?x1316 ?x4296 ?x4304 ?x15073 (* (- 1) ?x13040) ?x9648 ?x9653 (* 2 (* ?x4461 ?x4461 ?x4461 ?x14042 ?x14042 ?x14042 r!2 q!3 q!3 q!3)) ?x4951 ?x4954 (* 8 ?x5734) (* (- 96) (* q!3 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1)) (* 96 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1)) ?x14669 (* (- 8) ?x14674) (* (- 16) (* q!3 q!3 q!3 r!2 r!2 x!0 d!1)))))
 (let ((?x12325 (+ (- 2) q!3 ?x5020 ?x5025 ?x562)))
 (let ((?x8665 (* (- 4) (* d00 r00 ?x5015 ?x5015 ?x5015 ?x12325 ?x12325 ?x12325 r!2 r!2 r!2))))
 (let ((?x8595 (* (- 4) (* ?x5015 ?x5015 ?x5015 ?x4461 ?x12325 ?x12325 ?x12325 r!2 r!2 r!2 r!2))))
 (let ((?x8576 (* (- 2) (* ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 r!2 r!2 r!2))))
 (let ((?x8586 (* 2 (* d00 q00 ?x5015 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 r!2 r!2 r!2))))
 (let ((?x8565 (* 4 (* ?x5015 ?x5015 ?x5015 ?x4461 ?x12325 ?x12325 ?x12325 ?x12325 r!2 r!2 r!2))))
 (let ((?x4936 (* (- 1) (* ?x5015 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 r!2 r!2 r!2))))
 (let ((?x8506 (* 2 (* ?x5015 ?x5015 ?x5015 ?x5015 ?x4461 ?x12325 ?x12325 ?x12325 r!2 r!2 r!2))))
 (let ((?x8400 (* (- 4) (* d00 x00 ?x5015 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 r!2 r!2 r!2))))
 (let ((?x8411 (* (- 2) (* d00 q00 ?x5015 ?x5015 ?x5015 ?x12325 ?x12325 ?x12325 r!2 r!2 r!2))))
 (let ((?x5101 (* (- 1) (* ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 r!2))))
 (let ((?x8398 (* 4 (* d00 x00 ?x5015 ?x5015 ?x5015 ?x12325 ?x12325 ?x12325 r!2 r!2 r!2))))
 (let ((?x8369 (* d00 d00 q00 ?x5015 ?x5015 ?x5015 ?x12325 ?x12325 ?x12325 r!2 r!2 r!2)))
 (let ((?x7781 (* 4 (* d00 r00 ?x5015 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 r!2 r!2 r!2))))
 (let ((?x5131 (* 4 (* ?x5015 ?x4461 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 r!2 r!2 r!2 r!2))))
 (let ((?x7330 (* d00 d00 q00 ?x5015 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 r!2 r!2 r!2)))
 (let ((?x7293 (* (- 4) (* ?x5015 ?x4461 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 r!2 r!2 r!2))))
 (let ((?x8684 (+ (* 4 (* d00 x00 ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 r!2)) (* (- 2) (* d00 q00 ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 r!2)) (* (- 8) (* r00 ?x5015 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 r!2 r!2 r!2)) ?x7293 (* 8 (* r00 ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 r!2)) (* 8 (* r00 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 r!2)) (* (- 1) ?x7330) (* 4 (* ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 ?x12325 r!2)) (* (- 4) (* ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 r!2 r!2)) (* (- 8) (* ?x5015 ?x5015 ?x5015 ?x12325 ?x12325 ?x12325 ?x12325 r!2 r!2 r!2)) ?x5131 (* (- 2) (* d00 q00 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 r!2)) (* (- 4) (* d00 r00 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 r!2)) (* 4 (* ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 r!2)) ?x7781 ?x8369 ?x8398 (* 4 (* d00 x00 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 r!2)) ?x5101 ?x8411 ?x8400 (* (- 1) (* ?x5015 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x4461 ?x12325 r!2)) (* d00 d00 q00 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 r!2) (* 8 (* ?x5015 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 r!2 r!2 r!2)) ?x8506 (* 2 (* ?x5015 ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x12325 r!2)) ?x4936 (* 2 (* ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 r!2)) (* (- 4) (* d00 r00 ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 r!2)) (* ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x4461 ?x4461 ?x12325 ?x12325 r!2 r!2 r!2) (* d00 d00 q00 ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 r!2) ?x8565 ?x8586 (* (- 8) (* ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 ?x12325 r!2)) ?x8576 ?x8595 (* (- 8) (* ?x5015 ?x5015 ?x4461 ?x4461 ?x12325 ?x12325 ?x12325 ?x12325 r!2)) (* 8 (* r00 ?x5015 ?x5015 ?x5015 ?x12325 ?x12325 ?x12325 r!2 r!2 r!2)) (* (- 4) (* ?x5015 ?x5015 ?x5015 ?x4461 ?x4461 ?x4461 ?x12325 r!2 r!2)) ?x8665)))
 (let (($x10665 (or (not (= ?x8684 0)) (not (= ?x8830 0)) (not (= ?x5923 0)) (not (= ?x10661 0)))))
 (let ((?x514 (* r00 d00)))
 (let ((?x515 (* 4 ?x514)))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x9520 (+ (* 8 r!2) ?x379 ?x427 ?x411 ?x477 ?x515 (* (- 4) (* r!2 d!1)) (* (- 2) (* q!3 d!1)) (* q!3 d!1 d!1) (* 4 (* x!0 d!1)))))
 (let (($x8891 (and (= ?x9520 0) $x10665)))
 (let (($x13302 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x381 (* (- 1) x)))
 (let ((?x292 (* 2 r)))
 (let ((?x12760 (+ 2 q ?x292 ?x381 d)))
 (let ((?x529 (+ 4 q)))
 (let ((?x1753 (+ 2 d)))
 (let ((?x3420 (* (- 1) (* d00 d00 q00 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x4705 (* (- 4) (* d00 x00 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x4099 (* 2 (* d00 q00 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x8483 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 r r r))))
 (let ((?x10956 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 r r r))))
 (let ((?x14423 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r))))
 (let ((?x787 (* (- 4) (* ?x1753 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x13586 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 r r r))))
 (let ((?x12408 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x4301 (* 4 (* d00 r00 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x13567 (* (- 2) (* ?x1753 ?x529 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x1757 (* 4 (* d00 x00 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 r r r))))
 (let ((?x13610 (* 2 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 r r r))))
 (let ((?x8757 (* 4 (* ?x1753 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r r))))
 (let ((?x15474 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 r r r r))))
 (let ((?x9336 (+ (* 8 (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 ?x12760 r)) ?x15474 ?x8757 ?x13610 ?x1757 (* 2 (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 ?x12760 r)) ?x13567 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r)) (* (- 8) (* ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 ?x12760 r r r)) (* 4 (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 ?x12760 r)) (* 4 (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r)) (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r)) (* 8 (* r00 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 r r r)) (* (- 8) (* r00 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r)) (* 2 (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r)) ?x4301 ?x12408 (* (- 8) (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r)) (* (- 8) (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 r)) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 r r r) ?x13586 (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r)) (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 r r)) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r) ?x787 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x12760 r) ?x14423 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x12760 r)) ?x10956 ?x8483 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r) ?x4099 (* 8 (* ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 ?x12760 r)) ?x4705 ?x3420 (* 8 (* ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 ?x12760 r r r)) (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 r)) (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 r)))))
 (let ((?x1300 (* (- 2) d)))
 (let ((?x3486 (+ (- 4) q ?x292 ?x381 ?x1300)))
 (let ((?x7301 (+ (- 8) q)))
 (let ((?x10410 (* (- 4) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r r))))
 (let ((?x548 (* (- 1) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r))))
 (let ((?x10411 (* (- 1) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x10550 (* 4 (* d00 x00 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r))))
 (let ((?x10549 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x3486 ?x3486 ?x3486 r r r r))))
 (let ((?x10412 (* (- 1) (* d00 d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r))))
 (let ((?x903 (* (- 2) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x10408 (* (- 4) (* d00 x00 ?x7301 ?x7301 ?x7301 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x9879 (* 2 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r))))
 (let ((?x10409 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x3486 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x14505 (* (- 2) (* d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r))))
 (let ((?x10366 (* 4 (* d00 r00 ?x7301 ?x7301 ?x7301 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x8893 (* 2 (* d00 q00 ?x7301 ?x7301 ?x7301 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x14504 (* 4 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x10535 (* (- 4) (* d00 r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r))))
 (let ((?x10552 (+ (* 4 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r r)) ?x10535 ?x14504 ?x8893 (* d00 d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r) (* 8 (* ?x7301 ?x7301 ?x7301 ?x3486 ?x3486 ?x3486 ?x3486 r r r)) (* 2 (* d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r)) (* 8 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 r)) ?x10366 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r)) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r r r) (* 8 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 ?x3486 r)) ?x14505 ?x10409 ?x9879 ?x10408 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x3486 r) (* (- 8) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r r r)) ?x903 ?x10412 (* (- 8) (* r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 r)) ?x10549 ?x10550 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r) (* (- 8) (* r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r)) (* 4 (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 r)) (* (- 4) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 ?x3486 r)) (* 8 (* r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r)) (* (- 8) (* r00 ?x7301 ?x7301 ?x7301 ?x3486 ?x3486 ?x3486 r r r)) (* 2 (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 r)) ?x10411 (* (- 4) (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 r)) (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 r r)) (* (- 2) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r)) ?x548 (* 4 (* d00 r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r)) ?x10410 (* (- 2) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 r)) (* (- 1) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 r)) (* (- 4) (* d00 x00 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r)))))
 (let ((?x8643 (* (- 8) (* q r r r r x d00 q00 d d d))))
 (let ((?x8659 (* 8 (* q r r r r r d00 q00 d d d))))
 (let ((?x7071 (+ q ?x292 ?x381)))
 (let ((?x14419 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q q))))
 (let ((?x14978 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 r r r r q))))
 (let ((?x14288 (* (- 1) (* q q r x x x d00 d00 q00 d d))))
 (let ((?x14295 (* 6 (* q q q q r r d00 d00 q00 d d))))
 (let ((?x10883 (* 2 (* q q q q r r r x x x d))))
 (let ((?x8668 (* (- 4) (* q q r r r x d00 q00 d d d))))
 (let ((?x4246 (* (- 16) (* q r r r r r d00 x00 d d d))))
 (let ((?x387 (* 6 (* q q r r x x d00 d00 q00 d d))))
 (let ((?x6256 (* (- 16) (* q q r r r r d00 d00 q00 d d))))
 (let ((?x11241 (* 32 (* q q q r r r r r r d00 x00))))
 (let ((?x14308 (* 3 (* q q q r x x d00 d00 q00 d d))))
 (let ((?x13746 (* (- 4) (* q q q r r r d00 x00 d d d))))
 (let ((?x4275 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 r r r q q))))
 (let ((?x10708 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r r r q))))
 (let ((?x5224 (* 6 (* q q q r r r d00 d00 q00 d d))))
 (let ((?x4274 (* 2 (* q r r r x x d00 q00 d d d))))
 (let ((?x14302 (* (- 12) (* q q q r r x d00 d00 q00 d d))))
 (let ((?x11110 (* 24 (* q q q q q r r r r d00 x00))))
 (let ((?x7119 (* 12 (* q q q q r r r x x d00 x00))))
 (let ((?x10078 (* 48 (* q q q q r r r r r d00 x00))))
 (let ((?x9751 (* (- 12) (* q q q q q r r r x d00 x00))))
 (let ((?x10960 (* 4 (* q q q q q q r r r d00 x00))))
 (let ((?x10917 (* 12 (* q q q q r r r r r x d d))))
 (let ((?x6269 (* 72 (* q q q q r r r r r x d))))
 (let ((?x10334 (* (- 3) (* q q q q q r r r x x d d))))
 (let ((?x10904 (* (- 6) (* q q q q q r r r x x d))))
 (let ((?x10336 (* 12 (* q q q q q r r r r x d d))))
 (let ((?x6268 (* 36 (* q q q q q r r r r x d))))
 (let ((?x654 (* 6 (* q q q q q q r r r x d))))
 (let ((?x4291 (* 3 (* q q q q q q r r r x d d))))
 (let ((?x8679 (* 8 (* q q r r r r d00 q00 d d d))))
 (let ((?x8616 (* 4 (* ?x1753 ?x7071 ?x7071 ?x7071 ?x7071 r r r q q q))))
 (let ((?x7777 (* q q q q q r r r x d00 d00 q00)))
 (let ((?x13537 (* 16 (* q r r r r x d00 x00 d d d))))
 (let ((?x7554 (* q q q q q r r r x r00 d00)))
 (let ((?x7383 (* q q q r r r x x x r00 d00)))
 (let ((?x7379 (* q q q q q q r r r r00 d00)))
 (let ((?x7169 (* q q q q r r r r x r00 d00)))
 (let ((?x12914 (* (- 6) (* q q q q r r r r x x d d))))
 (let ((?x7888 (* (- 4) (* q r r r x x d00 x00 d d d))))
 (let ((?x7092 (* q q q r r r x x x d00 d00 q00)))
 (let ((?x7034 (* q q q r r r r r r d00 d00 q00)))
 (let ((?x6985 (* q q q r r r r r x d00 d00 q00)))
 (let ((?x6984 (* q q q r r r r x x d00 d00 q00)))
 (let ((?x6973 (* q q q q r r r r r d00 d00 q00)))
 (let ((?x6969 (* q q q q r r r r x d00 d00 q00)))
 (let ((?x6931 (* q q q q q r r r r d00 d00 q00)))
 (let ((?x10074 (* (- 4) (* q q q r r r x x x d00 x00))))
 (let ((?x14298 (* (- 3) (* q q q q r x d00 d00 q00 d d))))
 (let ((?x5280 (* (- 1) (* q r r r x x d00 d00 q00 d d d))))
 (let ((?x5358 (* (- 6) (* q r r r x x d00 d00 q00 d d))))
 (let ((?x5347 (* 4 (* q r r r r x d00 d00 q00 d d d))))
 (let ((?x5348 (* 24 (* q r r r r x d00 d00 q00 d d))))
 (let ((?x5337 (* (- 4) (* q r r r r r d00 d00 q00 d d d))))
 (let ((?x5338 (* (- 24) (* q r r r r r d00 d00 q00 d d))))
 (let ((?x5328 (* 2 (* q q r r r x d00 d00 q00 d d d))))
 (let ((?x5266 (* (- 1) (* q q q r r r d00 d00 q00 d d d))))
 (let ((?x5321 (* (- 4) (* q q r r r r d00 d00 q00 d d d))))
 (let ((?x14080 (* (- 16) (* q q r r r r d00 x00 d d d))))
 (let ((?x10073 (* 24 (* q q q r r r r x x d00 x00))))
 (let ((?x4423 (* 4 (* q q q r r r r x x x d))))
 (let ((?x4420 (* (- 24) (* q q q r r r r r x x d))))
 (let ((?x4415 (* 48 (* q q q r r r r r r x d))))
 (let ((?x13798 (* 8 (* q q r r r x d00 x00 d d d))))
 (let ((?x3456 (* 4 (* q r r r x x r00 d00 d d d))))
 (let ((?x3537 (* (- 16) (* q r r r r x r00 d00 d d d))))
 (let ((?x3523 (* 16 (* q r r r r r r00 d00 d d d))))
 (let ((?x3515 (* (- 8) (* q q r r r x r00 d00 d d d))))
 (let ((?x3502 (* 16 (* q q r r r r r00 d00 d d d))))
 (let ((?x3433 (* 4 (* q q q r r r r00 d00 d d d))))
 (let ((?x2390 (* q q q q r r r r r r d d)))
 (let ((?x2312 (* q q q q r r r x x d00 q00)))
 (let ((?x2304 (* q q q q r r r x x d00 d00 q00)))
 (let ((?x2301 (* q q q r r r r r x d00 q00)))
 (let ((?x2295 (* q q q r r r r x x d00 q00)))
 (let ((?x2283 (* 8 (* q q q r r r d d d))))
 (let ((?x2288 (* q q q r r r x x x d00 q00)))
 (let ((?x2133 (* q q q q q r r r r r d)))
 (let ((?x2125 (* q q q q r r r r r r d)))
 (let ((?x2124 (* q q q q q q r r r d00 q00)))
 (let ((?x2117 (* q q q q q r r r r d00 q00)))
 (let ((?x2116 (* q q q q q r r r x d00 q00)))
 (let ((?x2111 (* q q q q r r r r x d00 q00)))
 (let ((?x2109 (* q q q q r r r r r d00 q00)))
 (let ((?x2108 (* q q q r r r r r r d00 q00)))
 (let ((?x6965 (* 2 (* q q q r r r d00 q00 d d d))))
 (let ((?x2000 (* q q q r r r r r r r d)))
 (let ((?x1737 (* q q q r r r r r r r00 d00)))
 (let ((?x1673 (* q q q q r r r r r r00 d00)))
 (let ((?x1669 (* q q q q q q r r r r d d)))
 (let ((?x1666 (* q q q q q q r r r r d)))
 (let ((?x1627 (* q q q q r r r x x r00 d00)))
 (let ((?x1618 (* q q q r r r r x x r00 d00)))
 (let ((?x1567 (* q q q r r r r r x r00 d00)))
 (let ((?x1427 (* q q q q q r r r r r d d)))
 (let ((?x1419 (* q q q q q q q r r r d d)))
 (let ((?x10942 (* (- 24) (* q q q q r r r r x x d))))
 (let ((?x1143 (* q q q q q q r r r d00 d00 q00)))
 (let ((?x905 (* q q q q q q q r r r d)))
 (let ((?x13598 (* (- 48) (* q q q r r r r r x d00 x00))))
 (let ((?x15444 (* (- 48) (* q q q q r r r r x d00 x00))))
 (let ((?x659 (* q q q q q r r r r r00 d00)))
 (let ((?x6274 (+ (* 72 (* q q q r r r r x x x)) (* 36 (* q q q r r r d00 d00 q00 d)) (* 4 (* q q q r x r00 d00 d d)) (* 32 (* q q q r r r r00 d00)) (* (- 72) (* q q q q q q r r r r)) (* (- 24) ?x659) ?x15444 ?x13598 (* (- 2) ?x905) (* 32 (* q q q q q q r r r x)) ?x1143 ?x10942 (* 12 (* q q q r x x d00 d00 q00)) (* (- 32) (* q q r r r x d00 d00 q00)) (* (- 240) (* q q q q q r r r r r)) (* (- 1) ?x1419) (* (- 8) (* q q q r r r x x x x)) (* (- 12) ?x1427) (* 24 (* q q r r x x d00 d00 q00)) (* (- 4) (* q q r x x x d00 d00 q00)) (* (- 2) (* q q q q r r d d d d)) (* 48 ?x1567) (* (- 240) (* q q q r r r r r x x)) (* 12 (* q r r r x x d00 q00 d d)) (* (- 24) ?x1618) (* (- 12) ?x1627) (* (- 8) (* q q q q q q q r r r)) (* (- 64) (* q q r r r x r00 d00)) (* (- 16) ?x1666) (* (- 6) ?x1669) (* (- 48) ?x1673) (* 16 (* q q q q r r d d)) (* (- 128) (* q r r r r r d00 x00)) (* 128 (* q r r r r x d00 x00)) (* 40 (* q q q r r r d00 d00 q00)) (* (- 32) ?x1737) (* (- 192) (* q q q r r r r r r r)) (* (- 32) (* q q q r r r d00 x00)) (* (- 32) (* q r r r x x d00 x00)) (* 480 (* q q q q r r r r r x)) (* (- 48) (* q q q q q r r r x x)) (* 216 (* q q q q q r r r r x)) (* 32 (* q q q q r r00)) (* 64 (* q q q r r r00)) (* (- 32) (* q q q r x r00)) (* 128 (* q r r r r r r00 d00)) (* (- 128) (* q r r r r x r00 d00)) (* 32 (* q r r r x x r00 d00)) (* (- 32) ?x2000) (* (- 32) (* q r r r r r d00 d00 q00)) (* 32 (* q r r r r x d00 d00 q00)) (* (- 8) (* q r r r x x d00 d00 q00)) ?x6965 (* (- 8) (* q q q q r d00 q00)) (* (- 16) (* q q q r r d00 q00)) (* 8 (* q q q r x d00 q00)) (* (- 16) ?x2108) (* (- 24) ?x2109) (* 24 ?x2111) (* 6 ?x2116) (* (- 12) ?x2117) (* (- 2) ?x2124) (* (- 64) ?x2125) (* (- 48) ?x2133) (* 2 ?x2288) ?x2283 (* (- 12) ?x2295) (* 24 ?x2301) (* 3 ?x2304) (* (- 6) ?x2312) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* (- 8) ?x2390) (* 64 (* q q r r r x d00 x00)) (* 96 (* q r r r r x d00 x00 d d)) (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* (- 32) (* q q q r x r00 d)) (* 16 (* q q q r r r00 d d)) (* 64 (* q q q r r r00 d)) (* 8 (* q q q q r r00 d d)) (* 32 (* q q q q r r00 d)) (* (- 8) (* q q q r x r00 d d)) (* 48 (* q q q r r r r00 d00 d)) (* 16 (* q q q q r d00 x00 d)) (* 24 (* q q q r r r r00 d00 d d)) ?x3433 (* 128 (* q q r r r r r00 d00)) (* 192 (* q q r r r r r00 d00 d)) (* 4 (* q q q q r d00 x00 d d)) (* 96 (* q q r r r r r00 d00 d d)) ?x3502 (* (- 96) (* q q r r r x r00 d00 d)) (* (- 48) (* q q r r r x r00 d00 d d)) ?x3515 (* 192 (* q r r r r r r00 d00 d)) (* 96 (* q r r r r r r00 d00 d d)) ?x3523 (* (- 192) (* q r r r r x r00 d00 d)) (* (- 96) (* q r r r r x r00 d00 d d)) ?x3537 (* (- 192) (* q r r r r r d00 x00 d)) (* 48 (* q r r r x x r00 d00 d)) (* 24 (* q r r r x x r00 d00 d d)) ?x3456 ?x13798 (* (- 8) (* ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 ?x7071 r q q)) (* 96 (* q q r r r r d00 q00 d)) ?x4415 (* 8 (* q q q r r d00 x00 d d)) ?x4420 ?x4423 (* 32 (* q q q r r d00 x00 d)) (* (- 16) (* q q q r x d00 x00 d)) (* 8 (* r00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* 64 (* q q r r r r d00 q00)) ?x10073 ?x14080 (* 48 (* q q r r r x d00 x00 d d)) (* 4 (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 ?x7071 r q q)) ?x5321 ?x5266 (* (- 4) (* q q q r x d00 x00 d d)) ?x5328 (* (- 48) (* q r r r r r d00 d00 q00 d)) ?x5338 ?x5337 (* (- 48) (* q r r r x x d00 x00 d)) (* 48 (* q r r r r x d00 d00 q00 d)) ?x5348 ?x5347 (* (- 12) (* q r r r x x d00 d00 q00 d)) ?x5358 ?x5280 (* (- 8) (* q q q q r d00 q00 d)) (* (- 2) (* q q q q r d00 q00 d d)) (* (- 16) (* q q q r r d00 q00 d)) (* (- 4) (* q q q r r d00 q00 d d)) (* 8 (* q q q r x d00 q00 d)) (* 2 (* q q q r x d00 q00 d d)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r r q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* (- 96) (* q q q r r r r r x r00)) (* (- 24) (* q q r r r x d00 q00 d d)) (* (- 352) (* q q q q r r r r r r)) ?x14298 ?x10074 (* 192 (* q r r r r x d00 x00 d)) (* 6 ?x6931) (* (- 12) ?x6969) (* 12 ?x6973) (* 6 ?x6984) (* (- 12) ?x6985) (* (- 4) (* q q q r x d00 d00 q00)) (* 8 ?x7034) (* (- 40) (* q q q r r x d d)) (* 8 (* q q q r r d00 d00 q00)) (* (- 1) ?x7092) ?x7888 ?x12914 (* 48 ?x7169) (* (- 48) (* q q q r r x d00 d00 q00)) (* 352 (* q q q r r r r r r x)) (* 48 (* q q r r r r d00 q00 d d)) (* 16 (* q q q r x r00 d00 d)) (* 4 (* q q q q r d00 d00 q00)) (* (- 96) (* q q q r r r r00 d)) (* 24 (* q q q q r r d00 d00 q00)) (* 4 (* q q q q q r d00 d00 q00)) (* (- 12) (* q q q q r x d00 d00 q00)) (* (- 4) ?x7379) (* 4 ?x7383) (* 24 (* q q q q r r r x x r00)) (* 16 (* q r r r x x d00 q00)) (* (- 32) (* q q r r r x d00 q00)) (* 64 (* q r r r r r d00 q00)) (* (- 384) (* q r r r r r r00 d)) (* (- 192) (* q r r r r r r00 d d)) (* (- 64) (* q r r r x x r00)) (* (- 256) (* q r r r r r r00)) (* 12 ?x7554) (* 256 (* q r r r r x r00)) (* 128 (* q q r r r x r00)) (* (- 256) (* q q r r r r r00)) (* (- 16) (* q q q r x d00 x00)) (* 16 (* q q q q r d00 x00)) (* 16 (* q q q r x r00 d00)) (* 8 (* q q q q q r d)) (* (- 16) (* q q q q r r00 d00)) (* 4 (* q q q q q r d d)) (* (- 2) (* q q q q q r d d d)) (* (- 32) (* q q q q r r)) (* (- 1) (* q q q q q r d d d d)) ?x13537 (* 32 (* q q q q r r r x x x)) (* 64 (* q q q r r r r r r r00)) (* (- 32) (* q r r r r r r00 d d d)) (* (- 32) (* q q q r r r00 d00)) (* 32 (* q q q r r d00 x00)) (* (- 64) (* q q q r r r r00)) (* 384 (* q r r r r x r00 d)) (* (- 3) ?x7777) (* (- 216) (* q q q q r r r r x x)) (* (- 8) (* q r r r x x r00 d d d)) (* 32 (* q q q r r x)) (* (- 64) (* q q q r r r)) (* (- 32) (* q q q r r r d)) (* 48 (* q q q r r r r x x r00)) (* 16 (* q q q r r r d d)) (* 16 (* q q q r r r d00 q00)) (* (- 64) (* q r r r r x d00 q00)) (* 192 (* q r r r r x r00 d d)) (* 32 (* q r r r r x r00 d d d)) (* (- 96) (* q r r r x x r00 d)) (* (- 48) (* q r r r x x r00 d d)) (* 8 (* q q q q q q r r r r00)) (* 48 (* q q q q q r r r r r00)) (* (- 24) (* q q q q q r r r x r00)) (* 96 (* q q q q r r r r r r00)) (* (- 96) (* q q q q r r r r x r00)) (* (- 48) (* q q q r r r r00 d d)) ?x8616 (* (- 8) (* q q q r r r r00 d d d)) (* (- 384) (* q q r r r r r00 d)) ?x8679 ?x4291 ?x654 ?x6268 ?x10336 (* 16 (* q q q r x x d d)) ?x10904 ?x10334 ?x6269 ?x10917 ?x10960 ?x9751 ?x10078 (* 16 (* q q q r x x d)) ?x7119 ?x11110 (* (- 48) (* q q q r r x d00 d00 q00 d)) ?x14302 (* (- 48) (* q q q r r r d00 x00 d)) (* (- 128) (* q q r r r r d00 x00)) (* (- 96) (* q q r r r r d00 x00 d d)) (* (- 48) (* q q r r r x d00 q00 d)) ?x4274 ?x5224 ?x10708 ?x4275 (* (- 24) (* q q q r r r d00 x00 d d)) ?x13746 (* (- 192) (* q q r r r r d00 x00 d)) (* 12 (* q q q r x x d00 d00 q00 d)) ?x14308 ?x11241 (* (- 8) (* q q q r r r x x x r00)) (* (- 16) (* q q r r r r d00 d00 q00 d)) ?x6256 (* (- 24) (* q q r r r x d00 d00 q00 d)) (* (- 20) (* q q q q r x d d)) (* 24 (* q r r r x x d00 q00 d)) (* 24 (* q q r r x x d00 d00 q00 d)) ?x387 ?x4246 (* (- 32) (* q q r r r r r00 d d d)) (* (- 12) (* q q q r r x d d d)) (* 192 (* q q r r r x r00 d)) (* 4 (* q q q r x x d d d)) (* 96 (* q q r r r x r00 d d)) (* 96 (* q q r r r x d00 x00 d)) (* (- 96) (* q r r r r r d00 x00 d d)) (* 16 (* q q r r r x r00 d d d)) (* (- 192) (* q q r r r r r00 d d)) (* 12 (* q q q r r r d00 q00 d d)) (* (- 2) (* q q q q r x d d d)) (* q q q q r x d d d d) (* q q q q r r r x x x d d) ?x8668 (* (- 24) (* q q q q r x d)) (* (- 16) (* q q q q r r00 d00 d)) (* (- 4) (* q q q q r r00 d00 d d)) (* (- 32) (* q q q r r r00 d00 d)) (* (- 8) (* q q q r r r00 d00 d d)) ?x10883 (* (- 4) (* q q q r x d00 d00 q00 d)) (* (- 1) (* q q q r x d00 d00 q00 d d)) (* 8 (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r r r q)) (* q q q q r d00 d00 q00 d d) (* 8 (* q q q r r d00 d00 q00 d)) (* 2 (* q q q r r d00 d00 q00 d d)) (* 4 (* q q q q r d00 d00 q00 d)) (* (- 24) (* q r r r x x d00 x00 d d)) (* 24 (* q q q r r r d00 q00 d)) ?x14295 (* 4 (* q q q q q r d00 d00 q00 d)) (* q q q q q r d00 d00 q00 d d) (* 24 (* q q q q r r d00 d00 q00 d)) (* (- 12) (* q q q q r x d00 d00 q00 d)) (* (- 4) (* q q r x x x d00 d00 q00 d)) ?x14288 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 r r r q q) ?x14978 (* 2 (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q q)) ?x14419 (* 48 (* q r r r r r d00 q00 d d)) ?x8659 (* (- 96) (* q r r r r x d00 q00 d)) (* 96 (* q r r r r r d00 q00 d)) (* (- 48) (* q r r r r x d00 q00 d d)) ?x8643 (* (- 16) (* q q q r r x d)))))
 (let ((?x636 (* (- 1) d)))
 (let ((?x6278 (+ (- 2) q ?x292 ?x381 ?x636)))
 (let ((?x876 (+ (- 4) q)))
 (let ((?x11189 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x8272 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x6278 ?x6278 ?x6278 r r r r))))
 (let ((?x10958 (* (- 2) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r))))
 (let ((?x13612 (* 2 (* d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r))))
 (let ((?x13584 (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x6278 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x13124 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x8745 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x11126 (* (- 4) (* d00 x00 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r))))
 (let ((?x14742 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x12400 (* (- 1) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r))))
 (let ((?x9978 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x14940 (* 4 (* d00 r00 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r))))
 (let ((?x10964 (* 4 (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r r))))
 (let ((?x9847 (* (- 1) (* d00 d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r))))
 (let ((?x13776 (* (- 4) (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x12674 (+ (* 4 (* d00 x00 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r)) (* (- 2) (* d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r)) (* (- 8) (* r00 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r)) ?x13776 (* 8 (* r00 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 r)) ?x9847 (* 4 (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 ?x6278 r)) (* (- 4) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r r)) (* (- 8) (* ?x876 ?x876 ?x876 ?x6278 ?x6278 ?x6278 ?x6278 r r r)) ?x10964 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 r)) (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r)) ?x14940 (* d00 d00 q00 ?x876 ?x876 ?x876 ?x6278 ?x6278 ?x6278 r r r) ?x9978 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 r)) ?x12400 ?x14742 ?x11126 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x6278 r)) (* d00 d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 r) (* 8 (* ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r r r)) ?x8745 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 r)) ?x13124 (* 2 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r)) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r) (* d00 d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r) ?x13584 ?x13612 (* (- 8) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 r)) ?x10958 ?x8272 (* (- 8) (* ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 ?x6278 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x6278 ?x6278 ?x6278 r r r)) (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 r r)) ?x11189)))
 (let (($x12968 (or (not (= ?x12674 0)) (not (= ?x6274 0)) (not (= ?x10552 0)) (not (= ?x9336 0)))))
 (let ((?x10068 (* 4 (* x d))))
 (let ((?x7706 (* q d d)))
 (let ((?x587 (* (- 2) (* q d))))
 (let ((?x608 (* (- 4) (* r d))))
 (let ((?x514 (* r00 d00)))
 (let ((?x515 (* 4 ?x514)))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x1599 (* 8 r)))
 (and (= (+ ?x1599 ?x379 ?x427 ?x411 ?x477 ?x515 ?x608 ?x587 ?x7706 ?x10068) 0) $x12968))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x9762 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x381 (* (- 1) x)))
 (let ((?x292 (* 2 r)))
 (let ((?x10024 (+ 2 ?x292 ?x381 q d)))
 (let ((?x529 (+ 4 q)))
 (let ((?x1753 (+ 2 d)))
 (let ((?x2525 (* (- 2) (* d00 q00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x483 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x9786 (* (- 4) (* ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r r))))
 (let ((?x10304 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x9778 (* 2 (* ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x9777 (* (- 4) (* d00 r00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10286 (* 4 (* ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10245 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x9163 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x10203 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10174 (* (- 1) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10172 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x10108 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r))))
 (let ((?x10104 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r r))))
 (let ((?x9805 (* 4 (* d00 x00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x15419 (+ ?x9805 (* d00 d00 q00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r) (* (- 8) (* ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r r r)) ?x10104 ?x10108 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 r r r) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 r)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r)) (* 8 (* r00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r)) (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 r)) ?x10172 (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r) ?x10174 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 r)) ?x10203 ?x9163 ?x10245 (* 8 (* ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 ?x10024 r r r)) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r) (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 r)) ?x10286 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) ?x9777 ?x9778 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) ?x10304 (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r)) ?x9786 (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r)) ?x483 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) ?x2525 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r r)))))
 (let (($x8859 (not (= ?x15419 0))))
 (let ((?x636 (* (- 1) d)))
 (let ((?x8860 (+ (- 2) ?x292 ?x381 q ?x636)))
 (let ((?x876 (+ (- 4) q)))
 (let ((?x15520 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x4231 (* (- 1) (* d00 d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x15585 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x8860 ?x8860 ?x8860 r r r r))))
 (let ((?x15572 (* 4 (* d00 r00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x15571 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x15499 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x15498 (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x8860 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x806 (* (- 4) (* d00 x00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x7014 (* (- 2) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x10458 (* (- 4) (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x11252 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x9232 (* 2 (* d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x4479 (* (- 1) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r))))
 (let ((?x15451 (* 4 (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r r))))
 (let ((?x15368 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x10918 (+ ?x15368 (* d00 d00 q00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r) (* (- 8) (* ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 ?x8860 r r r)) ?x15451 ?x4479 (* 2 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r) (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) (* (- 8) (* r00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r)) (* (- 8) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 r)) ?x9232 (* d00 d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r) ?x11252 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 r)) ?x10458 ?x7014 ?x806 (* 8 (* ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r r)) (* d00 d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r) (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r)) ?x15498 (* (- 4) (* d00 r00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) (* 8 (* r00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) ?x15499 ?x15571 (* (- 2) (* d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) ?x15572 (* (- 8) (* ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 ?x8860 r)) ?x15585 (* 4 (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 ?x8860 r)) ?x4231 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) (* (- 4) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r)) (* 4 (* d00 x00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) ?x15520 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 r r)))))
 (let (($x1358 (not (= ?x10918 0))))
 (let ((?x10358 (* (- 4) (* ?x1753 ?x1753 ?x1753 (+ ?x292 ?x381 q) r r q q q))))
 (let ((?x10432 (+ ?x292 ?x381 q)))
 (let ((?x1034 (* (- 2) (* d00 q00 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x1224 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x952 (* (- 4) (* ?x1753 ?x10432 ?x10432 ?x10432 r r r r q q q))))
 (let ((?x10566 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x10480 (* 2 (* ?x1753 ?x10432 ?x10432 ?x10432 r r r q q q q))))
 (let ((?x10567 (* (- 4) (* d00 r00 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x10560 (* 4 (* ?x1753 ?x10432 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x10564 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x1101 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q q))))
 (let ((?x10488 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r r q))))
 (let ((?x10389 (* (- 1) (* ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r r q q q q))))
 (let ((?x620 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x929 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q q))))
 (let ((?x10426 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r r q))))
 (let ((?x10429 (* 4 (* d00 x00 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x10361 (+ ?x10429 (* d00 d00 q00 ?x10432 ?x10432 ?x10432 r r r q q q) (* (- 8) (* ?x10432 ?x10432 ?x10432 ?x10432 r r r q q q)) ?x10426 ?x929 (* 2 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q q)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q q) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 r q q q q)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x10432 r q q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x10432 r q q q)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q)) (* 8 (* r00 ?x10432 ?x10432 ?x10432 r r r q q q)) (* (- 8) (* ?x1753 ?x1753 ?x10432 ?x10432 r q q q)) ?x620 (* d00 d00 q00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q) ?x10389 (* 2 (* ?x1753 ?x1753 ?x1753 ?x10432 r q q q q)) ?x10488 ?x1101 ?x10564 (* 8 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r r q)) (* d00 d00 q00 ?x1753 ?x1753 ?x10432 r q q q) (* 4 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r q q q)) ?x10560 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) ?x10567 ?x10480 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x10432 r q q q)) ?x10566 (* (- 8) (* ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 ?x10432 r q q)) ?x952 (* 4 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 ?x10432 r q q)) ?x1224 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x10432 r q q q)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) ?x1034 ?x10358)))
 (let (($x1036 (not (= ?x10361 0))))
 (let ((?x1300 (* (- 2) d)))
 (let ((?x1194 (+ (- 4) ?x292 ?x381 q ?x1300)))
 (let ((?x7301 (+ (- 8) q)))
 (let ((?x718 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x779 (* (- 1) (* d00 d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x10532 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1194 ?x1194 ?x1194 r r r r))))
 (let ((?x10457 (* 4 (* d00 r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x499 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x10522 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x10472 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1194 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x3628 (* (- 4) (* d00 x00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x3624 (* (- 2) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x1465 (* (- 4) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x1809 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x11565 (* 2 (* d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x13608 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r))))
 (let ((?x535 (* 4 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r r))))
 (let ((?x1197 (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x10538 (+ ?x1197 (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 ?x1194 r r r)) ?x535 ?x13608 (* 2 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r) (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 r)) (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) (* (- 8) (* r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r)) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 r)) ?x11565 (* d00 d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r) ?x1809 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 r)) ?x1465 ?x3624 ?x3628 (* 8 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r r)) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r) (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r)) ?x10472 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) (* 8 (* r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) ?x10522 ?x499 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) ?x10457 (* (- 8) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 ?x1194 r)) ?x10532 (* 4 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 ?x1194 r)) ?x779 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) (* (- 4) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) ?x718 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 r r)))))
 (let (($x595 (not (= ?x10538 0))))
 (let ((?x13933 (* 4 (* d00 r00))))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x10068 (* 4 (* x d))))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x1599 (* 8 r)))
 (let ((?x10062 (+ ?x1599 ?x379 ?x10068 ?x411 ?x427 (* d d q) (* (- 2) (* d q)) ?x477 (* (- 4) (* d r)) ?x13933)))
 (let (($x9745 (= ?x10062 0)))
 (and $x9745 (or $x595 $x1036 $x1358 $x8859))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x560 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x381 (* (- 1) x)))
 (let ((?x292 (* 2 r)))
 (let ((?x12760 (+ 2 q ?x292 ?x381 d)))
 (let ((?x529 (+ 4 q)))
 (let ((?x1753 (+ 2 d)))
 (let ((?x3420 (* (- 1) (* d00 d00 q00 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x4705 (* (- 4) (* d00 x00 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x4099 (* 2 (* d00 q00 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x8483 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 r r r))))
 (let ((?x10956 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 r r r))))
 (let ((?x14423 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r))))
 (let ((?x787 (* (- 4) (* ?x1753 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x13586 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 r r r))))
 (let ((?x12408 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x4301 (* 4 (* d00 r00 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x13567 (* (- 2) (* ?x1753 ?x529 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r))))
 (let ((?x1757 (* 4 (* d00 x00 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 r r r))))
 (let ((?x13610 (* 2 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 r r r))))
 (let ((?x8757 (* 4 (* ?x1753 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r r))))
 (let ((?x15474 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 r r r r))))
 (let ((?x9336 (+ (* 8 (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 ?x12760 r)) ?x15474 ?x8757 ?x13610 ?x1757 (* 2 (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 ?x12760 r)) ?x13567 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r)) (* (- 8) (* ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 ?x12760 r r r)) (* 4 (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 ?x12760 r)) (* 4 (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r)) (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r)) (* 8 (* r00 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 r r r)) (* (- 8) (* r00 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r)) (* 2 (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r)) ?x4301 ?x12408 (* (- 8) (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r)) (* (- 8) (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 r)) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x12760 ?x12760 r r r) ?x13586 (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r)) (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 r r)) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r r r) ?x787 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x12760 r) ?x14423 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x12760 r)) ?x10956 ?x8483 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 r) ?x4099 (* 8 (* ?x1753 ?x1753 ?x529 ?x529 ?x12760 ?x12760 ?x12760 ?x12760 r)) ?x4705 ?x3420 (* 8 (* ?x529 ?x529 ?x529 ?x12760 ?x12760 ?x12760 ?x12760 r r r)) (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 r)) (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x12760 r)))))
 (let ((?x1300 (* (- 2) d)))
 (let ((?x3486 (+ (- 4) q ?x292 ?x381 ?x1300)))
 (let ((?x7301 (+ (- 8) q)))
 (let ((?x10410 (* (- 4) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r r))))
 (let ((?x548 (* (- 1) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r))))
 (let ((?x10411 (* (- 1) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x10550 (* 4 (* d00 x00 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r))))
 (let ((?x10549 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x3486 ?x3486 ?x3486 r r r r))))
 (let ((?x10412 (* (- 1) (* d00 d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r))))
 (let ((?x903 (* (- 2) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x10408 (* (- 4) (* d00 x00 ?x7301 ?x7301 ?x7301 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x9879 (* 2 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r))))
 (let ((?x10409 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x3486 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x14505 (* (- 2) (* d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r))))
 (let ((?x10366 (* 4 (* d00 r00 ?x7301 ?x7301 ?x7301 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x8893 (* 2 (* d00 q00 ?x7301 ?x7301 ?x7301 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x14504 (* 4 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r r r))))
 (let ((?x10535 (* (- 4) (* d00 r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r))))
 (let ((?x10552 (+ (* 4 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r r)) ?x10535 ?x14504 ?x8893 (* d00 d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r) (* 8 (* ?x7301 ?x7301 ?x7301 ?x3486 ?x3486 ?x3486 ?x3486 r r r)) (* 2 (* d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r)) (* 8 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 r)) ?x10366 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r)) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r r r) (* 8 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 ?x3486 r)) ?x14505 ?x10409 ?x9879 ?x10408 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x3486 r) (* (- 8) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r r r)) ?x903 ?x10412 (* (- 8) (* r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 r)) ?x10549 ?x10550 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r) (* (- 8) (* r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r)) (* 4 (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 r)) (* (- 4) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 ?x3486 r)) (* 8 (* r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 r r r)) (* (- 8) (* r00 ?x7301 ?x7301 ?x7301 ?x3486 ?x3486 ?x3486 r r r)) (* 2 (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 r)) ?x10411 (* (- 4) (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 r)) (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 r r)) (* (- 2) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r)) ?x548 (* 4 (* d00 r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r)) ?x10410 (* (- 2) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x3486 r)) (* (- 1) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 r)) (* (- 4) (* d00 x00 ?x7301 ?x7301 ?x1753 ?x1753 ?x3486 ?x3486 ?x3486 r)))))
 (let ((?x8643 (* (- 8) (* q r r r r x d00 q00 d d d))))
 (let ((?x8659 (* 8 (* q r r r r r d00 q00 d d d))))
 (let ((?x7071 (+ q ?x292 ?x381)))
 (let ((?x14419 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q q))))
 (let ((?x14978 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 r r r r q))))
 (let ((?x14288 (* (- 1) (* q q r x x x d00 d00 q00 d d))))
 (let ((?x14295 (* 6 (* q q q q r r d00 d00 q00 d d))))
 (let ((?x10883 (* 2 (* q q q q r r r x x x d))))
 (let ((?x8668 (* (- 4) (* q q r r r x d00 q00 d d d))))
 (let ((?x4246 (* (- 16) (* q r r r r r d00 x00 d d d))))
 (let ((?x387 (* 6 (* q q r r x x d00 d00 q00 d d))))
 (let ((?x6256 (* (- 16) (* q q r r r r d00 d00 q00 d d))))
 (let ((?x11241 (* 32 (* q q q r r r r r r d00 x00))))
 (let ((?x14308 (* 3 (* q q q r x x d00 d00 q00 d d))))
 (let ((?x13746 (* (- 4) (* q q q r r r d00 x00 d d d))))
 (let ((?x4275 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 r r r q q))))
 (let ((?x10708 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r r r q))))
 (let ((?x5224 (* 6 (* q q q r r r d00 d00 q00 d d))))
 (let ((?x4274 (* 2 (* q r r r x x d00 q00 d d d))))
 (let ((?x14302 (* (- 12) (* q q q r r x d00 d00 q00 d d))))
 (let ((?x11110 (* 24 (* q q q q q r r r r d00 x00))))
 (let ((?x7119 (* 12 (* q q q q r r r x x d00 x00))))
 (let ((?x10078 (* 48 (* q q q q r r r r r d00 x00))))
 (let ((?x9751 (* (- 12) (* q q q q q r r r x d00 x00))))
 (let ((?x10960 (* 4 (* q q q q q q r r r d00 x00))))
 (let ((?x10917 (* 12 (* q q q q r r r r r x d d))))
 (let ((?x6269 (* 72 (* q q q q r r r r r x d))))
 (let ((?x10334 (* (- 3) (* q q q q q r r r x x d d))))
 (let ((?x10904 (* (- 6) (* q q q q q r r r x x d))))
 (let ((?x10336 (* 12 (* q q q q q r r r r x d d))))
 (let ((?x6268 (* 36 (* q q q q q r r r r x d))))
 (let ((?x654 (* 6 (* q q q q q q r r r x d))))
 (let ((?x4291 (* 3 (* q q q q q q r r r x d d))))
 (let ((?x8679 (* 8 (* q q r r r r d00 q00 d d d))))
 (let ((?x8616 (* 4 (* ?x1753 ?x7071 ?x7071 ?x7071 ?x7071 r r r q q q))))
 (let ((?x7777 (* q q q q q r r r x d00 d00 q00)))
 (let ((?x13537 (* 16 (* q r r r r x d00 x00 d d d))))
 (let ((?x7554 (* q q q q q r r r x r00 d00)))
 (let ((?x7383 (* q q q r r r x x x r00 d00)))
 (let ((?x7379 (* q q q q q q r r r r00 d00)))
 (let ((?x7169 (* q q q q r r r r x r00 d00)))
 (let ((?x12914 (* (- 6) (* q q q q r r r r x x d d))))
 (let ((?x7888 (* (- 4) (* q r r r x x d00 x00 d d d))))
 (let ((?x7092 (* q q q r r r x x x d00 d00 q00)))
 (let ((?x7034 (* q q q r r r r r r d00 d00 q00)))
 (let ((?x6985 (* q q q r r r r r x d00 d00 q00)))
 (let ((?x6984 (* q q q r r r r x x d00 d00 q00)))
 (let ((?x6973 (* q q q q r r r r r d00 d00 q00)))
 (let ((?x6969 (* q q q q r r r r x d00 d00 q00)))
 (let ((?x6931 (* q q q q q r r r r d00 d00 q00)))
 (let ((?x10074 (* (- 4) (* q q q r r r x x x d00 x00))))
 (let ((?x14298 (* (- 3) (* q q q q r x d00 d00 q00 d d))))
 (let ((?x5280 (* (- 1) (* q r r r x x d00 d00 q00 d d d))))
 (let ((?x5358 (* (- 6) (* q r r r x x d00 d00 q00 d d))))
 (let ((?x5347 (* 4 (* q r r r r x d00 d00 q00 d d d))))
 (let ((?x5348 (* 24 (* q r r r r x d00 d00 q00 d d))))
 (let ((?x5337 (* (- 4) (* q r r r r r d00 d00 q00 d d d))))
 (let ((?x5338 (* (- 24) (* q r r r r r d00 d00 q00 d d))))
 (let ((?x5328 (* 2 (* q q r r r x d00 d00 q00 d d d))))
 (let ((?x5266 (* (- 1) (* q q q r r r d00 d00 q00 d d d))))
 (let ((?x5321 (* (- 4) (* q q r r r r d00 d00 q00 d d d))))
 (let ((?x14080 (* (- 16) (* q q r r r r d00 x00 d d d))))
 (let ((?x10073 (* 24 (* q q q r r r r x x d00 x00))))
 (let ((?x4423 (* 4 (* q q q r r r r x x x d))))
 (let ((?x4420 (* (- 24) (* q q q r r r r r x x d))))
 (let ((?x4415 (* 48 (* q q q r r r r r r x d))))
 (let ((?x13798 (* 8 (* q q r r r x d00 x00 d d d))))
 (let ((?x3456 (* 4 (* q r r r x x r00 d00 d d d))))
 (let ((?x3537 (* (- 16) (* q r r r r x r00 d00 d d d))))
 (let ((?x3523 (* 16 (* q r r r r r r00 d00 d d d))))
 (let ((?x3515 (* (- 8) (* q q r r r x r00 d00 d d d))))
 (let ((?x3502 (* 16 (* q q r r r r r00 d00 d d d))))
 (let ((?x3433 (* 4 (* q q q r r r r00 d00 d d d))))
 (let ((?x2390 (* q q q q r r r r r r d d)))
 (let ((?x2312 (* q q q q r r r x x d00 q00)))
 (let ((?x2304 (* q q q q r r r x x d00 d00 q00)))
 (let ((?x2301 (* q q q r r r r r x d00 q00)))
 (let ((?x2295 (* q q q r r r r x x d00 q00)))
 (let ((?x2283 (* 8 (* q q q r r r d d d))))
 (let ((?x2288 (* q q q r r r x x x d00 q00)))
 (let ((?x2133 (* q q q q q r r r r r d)))
 (let ((?x2125 (* q q q q r r r r r r d)))
 (let ((?x2124 (* q q q q q q r r r d00 q00)))
 (let ((?x2117 (* q q q q q r r r r d00 q00)))
 (let ((?x2116 (* q q q q q r r r x d00 q00)))
 (let ((?x2111 (* q q q q r r r r x d00 q00)))
 (let ((?x2109 (* q q q q r r r r r d00 q00)))
 (let ((?x2108 (* q q q r r r r r r d00 q00)))
 (let ((?x6965 (* 2 (* q q q r r r d00 q00 d d d))))
 (let ((?x2000 (* q q q r r r r r r r d)))
 (let ((?x1737 (* q q q r r r r r r r00 d00)))
 (let ((?x1673 (* q q q q r r r r r r00 d00)))
 (let ((?x1669 (* q q q q q q r r r r d d)))
 (let ((?x1666 (* q q q q q q r r r r d)))
 (let ((?x1627 (* q q q q r r r x x r00 d00)))
 (let ((?x1618 (* q q q r r r r x x r00 d00)))
 (let ((?x1567 (* q q q r r r r r x r00 d00)))
 (let ((?x1427 (* q q q q q r r r r r d d)))
 (let ((?x1419 (* q q q q q q q r r r d d)))
 (let ((?x10942 (* (- 24) (* q q q q r r r r x x d))))
 (let ((?x1143 (* q q q q q q r r r d00 d00 q00)))
 (let ((?x905 (* q q q q q q q r r r d)))
 (let ((?x13598 (* (- 48) (* q q q r r r r r x d00 x00))))
 (let ((?x15444 (* (- 48) (* q q q q r r r r x d00 x00))))
 (let ((?x659 (* q q q q q r r r r r00 d00)))
 (let ((?x6274 (+ (* 72 (* q q q r r r r x x x)) (* 36 (* q q q r r r d00 d00 q00 d)) (* 4 (* q q q r x r00 d00 d d)) (* 32 (* q q q r r r r00 d00)) (* (- 72) (* q q q q q q r r r r)) (* (- 24) ?x659) ?x15444 ?x13598 (* (- 2) ?x905) (* 32 (* q q q q q q r r r x)) ?x1143 ?x10942 (* 12 (* q q q r x x d00 d00 q00)) (* (- 32) (* q q r r r x d00 d00 q00)) (* (- 240) (* q q q q q r r r r r)) (* (- 1) ?x1419) (* (- 8) (* q q q r r r x x x x)) (* (- 12) ?x1427) (* 24 (* q q r r x x d00 d00 q00)) (* (- 4) (* q q r x x x d00 d00 q00)) (* (- 2) (* q q q q r r d d d d)) (* 48 ?x1567) (* (- 240) (* q q q r r r r r x x)) (* 12 (* q r r r x x d00 q00 d d)) (* (- 24) ?x1618) (* (- 12) ?x1627) (* (- 8) (* q q q q q q q r r r)) (* (- 64) (* q q r r r x r00 d00)) (* (- 16) ?x1666) (* (- 6) ?x1669) (* (- 48) ?x1673) (* 16 (* q q q q r r d d)) (* (- 128) (* q r r r r r d00 x00)) (* 128 (* q r r r r x d00 x00)) (* 40 (* q q q r r r d00 d00 q00)) (* (- 32) ?x1737) (* (- 192) (* q q q r r r r r r r)) (* (- 32) (* q q q r r r d00 x00)) (* (- 32) (* q r r r x x d00 x00)) (* 480 (* q q q q r r r r r x)) (* (- 48) (* q q q q q r r r x x)) (* 216 (* q q q q q r r r r x)) (* 32 (* q q q q r r00)) (* 64 (* q q q r r r00)) (* (- 32) (* q q q r x r00)) (* 128 (* q r r r r r r00 d00)) (* (- 128) (* q r r r r x r00 d00)) (* 32 (* q r r r x x r00 d00)) (* (- 32) ?x2000) (* (- 32) (* q r r r r r d00 d00 q00)) (* 32 (* q r r r r x d00 d00 q00)) (* (- 8) (* q r r r x x d00 d00 q00)) ?x6965 (* (- 8) (* q q q q r d00 q00)) (* (- 16) (* q q q r r d00 q00)) (* 8 (* q q q r x d00 q00)) (* (- 16) ?x2108) (* (- 24) ?x2109) (* 24 ?x2111) (* 6 ?x2116) (* (- 12) ?x2117) (* (- 2) ?x2124) (* (- 64) ?x2125) (* (- 48) ?x2133) (* 2 ?x2288) ?x2283 (* (- 12) ?x2295) (* 24 ?x2301) (* 3 ?x2304) (* (- 6) ?x2312) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* (- 8) ?x2390) (* 64 (* q q r r r x d00 x00)) (* 96 (* q r r r r x d00 x00 d d)) (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* (- 32) (* q q q r x r00 d)) (* 16 (* q q q r r r00 d d)) (* 64 (* q q q r r r00 d)) (* 8 (* q q q q r r00 d d)) (* 32 (* q q q q r r00 d)) (* (- 8) (* q q q r x r00 d d)) (* 48 (* q q q r r r r00 d00 d)) (* 16 (* q q q q r d00 x00 d)) (* 24 (* q q q r r r r00 d00 d d)) ?x3433 (* 128 (* q q r r r r r00 d00)) (* 192 (* q q r r r r r00 d00 d)) (* 4 (* q q q q r d00 x00 d d)) (* 96 (* q q r r r r r00 d00 d d)) ?x3502 (* (- 96) (* q q r r r x r00 d00 d)) (* (- 48) (* q q r r r x r00 d00 d d)) ?x3515 (* 192 (* q r r r r r r00 d00 d)) (* 96 (* q r r r r r r00 d00 d d)) ?x3523 (* (- 192) (* q r r r r x r00 d00 d)) (* (- 96) (* q r r r r x r00 d00 d d)) ?x3537 (* (- 192) (* q r r r r r d00 x00 d)) (* 48 (* q r r r x x r00 d00 d)) (* 24 (* q r r r x x r00 d00 d d)) ?x3456 ?x13798 (* (- 8) (* ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 ?x7071 r q q)) (* 96 (* q q r r r r d00 q00 d)) ?x4415 (* 8 (* q q q r r d00 x00 d d)) ?x4420 ?x4423 (* 32 (* q q q r r d00 x00 d)) (* (- 16) (* q q q r x d00 x00 d)) (* 8 (* r00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* 64 (* q q r r r r d00 q00)) ?x10073 ?x14080 (* 48 (* q q r r r x d00 x00 d d)) (* 4 (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 ?x7071 r q q)) ?x5321 ?x5266 (* (- 4) (* q q q r x d00 x00 d d)) ?x5328 (* (- 48) (* q r r r r r d00 d00 q00 d)) ?x5338 ?x5337 (* (- 48) (* q r r r x x d00 x00 d)) (* 48 (* q r r r r x d00 d00 q00 d)) ?x5348 ?x5347 (* (- 12) (* q r r r x x d00 d00 q00 d)) ?x5358 ?x5280 (* (- 8) (* q q q q r d00 q00 d)) (* (- 2) (* q q q q r d00 q00 d d)) (* (- 16) (* q q q r r d00 q00 d)) (* (- 4) (* q q q r r d00 q00 d d)) (* 8 (* q q q r x d00 q00 d)) (* 2 (* q q q r x d00 q00 d d)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r r q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* (- 96) (* q q q r r r r r x r00)) (* (- 24) (* q q r r r x d00 q00 d d)) (* (- 352) (* q q q q r r r r r r)) ?x14298 ?x10074 (* 192 (* q r r r r x d00 x00 d)) (* 6 ?x6931) (* (- 12) ?x6969) (* 12 ?x6973) (* 6 ?x6984) (* (- 12) ?x6985) (* (- 4) (* q q q r x d00 d00 q00)) (* 8 ?x7034) (* (- 40) (* q q q r r x d d)) (* 8 (* q q q r r d00 d00 q00)) (* (- 1) ?x7092) ?x7888 ?x12914 (* 48 ?x7169) (* (- 48) (* q q q r r x d00 d00 q00)) (* 352 (* q q q r r r r r r x)) (* 48 (* q q r r r r d00 q00 d d)) (* 16 (* q q q r x r00 d00 d)) (* 4 (* q q q q r d00 d00 q00)) (* (- 96) (* q q q r r r r00 d)) (* 24 (* q q q q r r d00 d00 q00)) (* 4 (* q q q q q r d00 d00 q00)) (* (- 12) (* q q q q r x d00 d00 q00)) (* (- 4) ?x7379) (* 4 ?x7383) (* 24 (* q q q q r r r x x r00)) (* 16 (* q r r r x x d00 q00)) (* (- 32) (* q q r r r x d00 q00)) (* 64 (* q r r r r r d00 q00)) (* (- 384) (* q r r r r r r00 d)) (* (- 192) (* q r r r r r r00 d d)) (* (- 64) (* q r r r x x r00)) (* (- 256) (* q r r r r r r00)) (* 12 ?x7554) (* 256 (* q r r r r x r00)) (* 128 (* q q r r r x r00)) (* (- 256) (* q q r r r r r00)) (* (- 16) (* q q q r x d00 x00)) (* 16 (* q q q q r d00 x00)) (* 16 (* q q q r x r00 d00)) (* 8 (* q q q q q r d)) (* (- 16) (* q q q q r r00 d00)) (* 4 (* q q q q q r d d)) (* (- 2) (* q q q q q r d d d)) (* (- 32) (* q q q q r r)) (* (- 1) (* q q q q q r d d d d)) ?x13537 (* 32 (* q q q q r r r x x x)) (* 64 (* q q q r r r r r r r00)) (* (- 32) (* q r r r r r r00 d d d)) (* (- 32) (* q q q r r r00 d00)) (* 32 (* q q q r r d00 x00)) (* (- 64) (* q q q r r r r00)) (* 384 (* q r r r r x r00 d)) (* (- 3) ?x7777) (* (- 216) (* q q q q r r r r x x)) (* (- 8) (* q r r r x x r00 d d d)) (* 32 (* q q q r r x)) (* (- 64) (* q q q r r r)) (* (- 32) (* q q q r r r d)) (* 48 (* q q q r r r r x x r00)) (* 16 (* q q q r r r d d)) (* 16 (* q q q r r r d00 q00)) (* (- 64) (* q r r r r x d00 q00)) (* 192 (* q r r r r x r00 d d)) (* 32 (* q r r r r x r00 d d d)) (* (- 96) (* q r r r x x r00 d)) (* (- 48) (* q r r r x x r00 d d)) (* 8 (* q q q q q q r r r r00)) (* 48 (* q q q q q r r r r r00)) (* (- 24) (* q q q q q r r r x r00)) (* 96 (* q q q q r r r r r r00)) (* (- 96) (* q q q q r r r r x r00)) (* (- 48) (* q q q r r r r00 d d)) ?x8616 (* (- 8) (* q q q r r r r00 d d d)) (* (- 384) (* q q r r r r r00 d)) ?x8679 ?x4291 ?x654 ?x6268 ?x10336 (* 16 (* q q q r x x d d)) ?x10904 ?x10334 ?x6269 ?x10917 ?x10960 ?x9751 ?x10078 (* 16 (* q q q r x x d)) ?x7119 ?x11110 (* (- 48) (* q q q r r x d00 d00 q00 d)) ?x14302 (* (- 48) (* q q q r r r d00 x00 d)) (* (- 128) (* q q r r r r d00 x00)) (* (- 96) (* q q r r r r d00 x00 d d)) (* (- 48) (* q q r r r x d00 q00 d)) ?x4274 ?x5224 ?x10708 ?x4275 (* (- 24) (* q q q r r r d00 x00 d d)) ?x13746 (* (- 192) (* q q r r r r d00 x00 d)) (* 12 (* q q q r x x d00 d00 q00 d)) ?x14308 ?x11241 (* (- 8) (* q q q r r r x x x r00)) (* (- 16) (* q q r r r r d00 d00 q00 d)) ?x6256 (* (- 24) (* q q r r r x d00 d00 q00 d)) (* (- 20) (* q q q q r x d d)) (* 24 (* q r r r x x d00 q00 d)) (* 24 (* q q r r x x d00 d00 q00 d)) ?x387 ?x4246 (* (- 32) (* q q r r r r r00 d d d)) (* (- 12) (* q q q r r x d d d)) (* 192 (* q q r r r x r00 d)) (* 4 (* q q q r x x d d d)) (* 96 (* q q r r r x r00 d d)) (* 96 (* q q r r r x d00 x00 d)) (* (- 96) (* q r r r r r d00 x00 d d)) (* 16 (* q q r r r x r00 d d d)) (* (- 192) (* q q r r r r r00 d d)) (* 12 (* q q q r r r d00 q00 d d)) (* (- 2) (* q q q q r x d d d)) (* q q q q r x d d d d) (* q q q q r r r x x x d d) ?x8668 (* (- 24) (* q q q q r x d)) (* (- 16) (* q q q q r r00 d00 d)) (* (- 4) (* q q q q r r00 d00 d d)) (* (- 32) (* q q q r r r00 d00 d)) (* (- 8) (* q q q r r r00 d00 d d)) ?x10883 (* (- 4) (* q q q r x d00 d00 q00 d)) (* (- 1) (* q q q r x d00 d00 q00 d d)) (* 8 (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r r r q)) (* q q q q r d00 d00 q00 d d) (* 8 (* q q q r r d00 d00 q00 d)) (* 2 (* q q q r r d00 d00 q00 d d)) (* 4 (* q q q q r d00 d00 q00 d)) (* (- 24) (* q r r r x x d00 x00 d d)) (* 24 (* q q q r r r d00 q00 d)) ?x14295 (* 4 (* q q q q q r d00 d00 q00 d)) (* q q q q q r d00 d00 q00 d d) (* 24 (* q q q q r r d00 d00 q00 d)) (* (- 12) (* q q q q r x d00 d00 q00 d)) (* (- 4) (* q q r x x x d00 d00 q00 d)) ?x14288 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 r r r q q) ?x14978 (* 2 (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q q)) ?x14419 (* 48 (* q r r r r r d00 q00 d d)) ?x8659 (* (- 96) (* q r r r r x d00 q00 d)) (* 96 (* q r r r r r d00 q00 d)) (* (- 48) (* q r r r r x d00 q00 d d)) ?x8643 (* (- 16) (* q q q r r x d)))))
 (let ((?x636 (* (- 1) d)))
 (let ((?x6278 (+ (- 2) q ?x292 ?x381 ?x636)))
 (let ((?x876 (+ (- 4) q)))
 (let ((?x11189 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x8272 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x6278 ?x6278 ?x6278 r r r r))))
 (let ((?x10958 (* (- 2) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r))))
 (let ((?x13612 (* 2 (* d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r))))
 (let ((?x13584 (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x6278 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x13124 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x8745 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x11126 (* (- 4) (* d00 x00 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r))))
 (let ((?x14742 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x12400 (* (- 1) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r))))
 (let ((?x9978 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x14940 (* 4 (* d00 r00 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r))))
 (let ((?x10964 (* 4 (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r r))))
 (let ((?x9847 (* (- 1) (* d00 d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r))))
 (let ((?x13776 (* (- 4) (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r r r))))
 (let ((?x12674 (+ (* 4 (* d00 x00 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r)) (* (- 2) (* d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r)) (* (- 8) (* r00 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r)) ?x13776 (* 8 (* r00 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 r)) ?x9847 (* 4 (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 ?x6278 r)) (* (- 4) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r r)) (* (- 8) (* ?x876 ?x876 ?x876 ?x6278 ?x6278 ?x6278 ?x6278 r r r)) ?x10964 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 r)) (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r)) ?x14940 (* d00 d00 q00 ?x876 ?x876 ?x876 ?x6278 ?x6278 ?x6278 r r r) ?x9978 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 r)) ?x12400 ?x14742 ?x11126 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x6278 r)) (* d00 d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 r) (* 8 (* ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r r r)) ?x8745 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 r)) ?x13124 (* 2 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r)) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x6278 ?x6278 r r r) (* d00 d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 r) ?x13584 ?x13612 (* (- 8) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 r)) ?x10958 ?x8272 (* (- 8) (* ?x876 ?x876 ?x1753 ?x1753 ?x6278 ?x6278 ?x6278 ?x6278 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x6278 ?x6278 ?x6278 r r r)) (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x6278 r r)) ?x11189)))
 (let (($x12968 (or (not (= ?x12674 0)) (not (= ?x6274 0)) (not (= ?x10552 0)) (not (= ?x9336 0)))))
 (let ((?x10068 (* 4 (* x d))))
 (let ((?x7706 (* q d d)))
 (let ((?x587 (* (- 2) (* q d))))
 (let ((?x608 (* (- 4) (* r d))))
 (let ((?x514 (* r00 d00)))
 (let ((?x515 (* 4 ?x514)))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x1599 (* 8 r)))
 (let (($x2505 (and (= (+ ?x1599 ?x379 ?x427 ?x411 ?x477 ?x515 ?x608 ?x587 ?x7706 ?x10068) 0) $x12968)))
 (let ((?x10024 (+ 2 ?x292 ?x381 q d)))
 (let ((?x2525 (* (- 2) (* d00 q00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x483 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x9786 (* (- 4) (* ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r r))))
 (let ((?x10304 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x9778 (* 2 (* ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x9777 (* (- 4) (* d00 r00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10286 (* 4 (* ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10245 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x9163 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x10203 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10174 (* (- 1) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10172 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x10108 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r))))
 (let ((?x10104 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r r))))
 (let ((?x9805 (* 4 (* d00 x00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x15419 (+ ?x9805 (* d00 d00 q00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r) (* (- 8) (* ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r r r)) ?x10104 ?x10108 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 r r r) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 r)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r)) (* 8 (* r00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r)) (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 r)) ?x10172 (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r) ?x10174 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 r)) ?x10203 ?x9163 ?x10245 (* 8 (* ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 ?x10024 r r r)) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r) (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 r)) ?x10286 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) ?x9777 ?x9778 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) ?x10304 (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r)) ?x9786 (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r)) ?x483 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) ?x2525 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r r)))))
 (let (($x8859 (not (= ?x15419 0))))
 (let ((?x8860 (+ (- 2) ?x292 ?x381 q ?x636)))
 (let ((?x15520 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x4231 (* (- 1) (* d00 d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x15585 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x8860 ?x8860 ?x8860 r r r r))))
 (let ((?x15572 (* 4 (* d00 r00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x15571 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x15499 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x15498 (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x8860 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x806 (* (- 4) (* d00 x00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x7014 (* (- 2) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x10458 (* (- 4) (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x11252 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x9232 (* 2 (* d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x4479 (* (- 1) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r))))
 (let ((?x15451 (* 4 (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r r))))
 (let ((?x15368 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x10918 (+ ?x15368 (* d00 d00 q00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r) (* (- 8) (* ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 ?x8860 r r r)) ?x15451 ?x4479 (* 2 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r) (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) (* (- 8) (* r00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r)) (* (- 8) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 r)) ?x9232 (* d00 d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r) ?x11252 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 r)) ?x10458 ?x7014 ?x806 (* 8 (* ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r r)) (* d00 d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r) (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r)) ?x15498 (* (- 4) (* d00 r00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) (* 8 (* r00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) ?x15499 ?x15571 (* (- 2) (* d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) ?x15572 (* (- 8) (* ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 ?x8860 r)) ?x15585 (* 4 (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 ?x8860 r)) ?x4231 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) (* (- 4) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r)) (* 4 (* d00 x00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) ?x15520 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 r r)))))
 (let (($x1358 (not (= ?x10918 0))))
 (let ((?x10358 (* (- 4) (* ?x1753 ?x1753 ?x1753 (+ ?x292 ?x381 q) r r q q q))))
 (let ((?x10432 (+ ?x292 ?x381 q)))
 (let ((?x1034 (* (- 2) (* d00 q00 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x1224 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x952 (* (- 4) (* ?x1753 ?x10432 ?x10432 ?x10432 r r r r q q q))))
 (let ((?x10566 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x10480 (* 2 (* ?x1753 ?x10432 ?x10432 ?x10432 r r r q q q q))))
 (let ((?x10567 (* (- 4) (* d00 r00 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x10560 (* 4 (* ?x1753 ?x10432 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x10564 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x1101 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q q))))
 (let ((?x10488 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r r q))))
 (let ((?x10389 (* (- 1) (* ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r r q q q q))))
 (let ((?x620 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x929 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q q))))
 (let ((?x10426 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r r q))))
 (let ((?x10429 (* 4 (* d00 x00 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x10361 (+ ?x10429 (* d00 d00 q00 ?x10432 ?x10432 ?x10432 r r r q q q) (* (- 8) (* ?x10432 ?x10432 ?x10432 ?x10432 r r r q q q)) ?x10426 ?x929 (* 2 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q q)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q q) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 r q q q q)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x10432 r q q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x10432 r q q q)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q)) (* 8 (* r00 ?x10432 ?x10432 ?x10432 r r r q q q)) (* (- 8) (* ?x1753 ?x1753 ?x10432 ?x10432 r q q q)) ?x620 (* d00 d00 q00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q) ?x10389 (* 2 (* ?x1753 ?x1753 ?x1753 ?x10432 r q q q q)) ?x10488 ?x1101 ?x10564 (* 8 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r r q)) (* d00 d00 q00 ?x1753 ?x1753 ?x10432 r q q q) (* 4 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r q q q)) ?x10560 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) ?x10567 ?x10480 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x10432 r q q q)) ?x10566 (* (- 8) (* ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 ?x10432 r q q)) ?x952 (* 4 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 ?x10432 r q q)) ?x1224 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x10432 r q q q)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) ?x1034 ?x10358)))
 (let (($x1036 (not (= ?x10361 0))))
 (let ((?x1194 (+ (- 4) ?x292 ?x381 q ?x1300)))
 (let ((?x718 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x779 (* (- 1) (* d00 d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x10532 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1194 ?x1194 ?x1194 r r r r))))
 (let ((?x10457 (* 4 (* d00 r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x499 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x10522 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x10472 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1194 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x3628 (* (- 4) (* d00 x00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x3624 (* (- 2) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x1465 (* (- 4) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x1809 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x11565 (* 2 (* d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x13608 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r))))
 (let ((?x535 (* 4 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r r))))
 (let ((?x1197 (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x10538 (+ ?x1197 (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 ?x1194 r r r)) ?x535 ?x13608 (* 2 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r) (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 r)) (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) (* (- 8) (* r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r)) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 r)) ?x11565 (* d00 d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r) ?x1809 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 r)) ?x1465 ?x3624 ?x3628 (* 8 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r r)) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r) (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r)) ?x10472 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) (* 8 (* r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) ?x10522 ?x499 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) ?x10457 (* (- 8) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 ?x1194 r)) ?x10532 (* 4 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 ?x1194 r)) ?x779 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) (* (- 4) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) ?x718 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 r r)))))
 (let (($x595 (not (= ?x10538 0))))
 (let ((?x13933 (* 4 (* d00 r00))))
 (let ((?x10062 (+ ?x1599 ?x379 ?x10068 ?x411 ?x427 (* d d q) (* (- 2) (* d q)) ?x477 (* (- 4) (* d r)) ?x13933)))
 (let (($x9745 (= ?x10062 0)))
 (let (($x9148 (and $x9745 (or $x595 $x1036 $x1358 $x8859))))
 (rewrite (= $x9148 $x2505)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x10356 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x381 (* (- 1) x)))
 (let ((?x292 (* 2 r)))
 (let ((?x10432 (+ ?x292 ?x381 q)))
 (let ((?x1753 (+ 2 d)))
 (let ((?x1034 (* (- 2) (* d00 q00 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x1224 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x952 (* (- 4) (* ?x1753 ?x10432 ?x10432 ?x10432 r r r r q q q))))
 (let ((?x10566 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x10480 (* 2 (* ?x1753 ?x10432 ?x10432 ?x10432 r r r q q q q))))
 (let ((?x10567 (* (- 4) (* d00 r00 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x10560 (* 4 (* ?x1753 ?x10432 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x10564 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x1101 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q q))))
 (let ((?x10488 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r r q))))
 (let ((?x10389 (* (- 1) (* ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r r q q q q))))
 (let ((?x620 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x929 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q q))))
 (let ((?x10426 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r r q))))
 (let ((?x10429 (* 4 (* d00 x00 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x10361 (+ ?x10429 (* d00 d00 q00 ?x10432 ?x10432 ?x10432 r r r q q q) (* (- 8) (* ?x10432 ?x10432 ?x10432 ?x10432 r r r q q q)) ?x10426 ?x929 (* 2 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q q)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q q) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 r q q q q)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x10432 r q q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x10432 r q q q)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q)) (* 8 (* r00 ?x10432 ?x10432 ?x10432 r r r q q q)) (* (- 8) (* ?x1753 ?x1753 ?x10432 ?x10432 r q q q)) ?x620 (* d00 d00 q00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q) ?x10389 (* 2 (* ?x1753 ?x1753 ?x1753 ?x10432 r q q q q)) ?x10488 ?x1101 ?x10564 (* 8 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r r q)) (* d00 d00 q00 ?x1753 ?x1753 ?x10432 r q q q) (* 4 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r q q q)) ?x10560 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) ?x10567 ?x10480 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x10432 r q q q)) ?x10566 (* (- 8) (* ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 ?x10432 r q q)) ?x952 (* 4 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 ?x10432 r q q)) ?x1224 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x10432 r q q q)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) ?x1034 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x10432 r r q q q)))))
 (let (($x1036 (not (= ?x10361 0))))
 (let ((?x1300 (* (- 2) d)))
 (let ((?x1194 (+ (- 4) ?x292 ?x381 q ?x1300)))
 (let ((?x7301 (+ (- 8) q)))
 (let ((?x718 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x779 (* (- 1) (* d00 d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x10532 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1194 ?x1194 ?x1194 r r r r))))
 (let ((?x10457 (* 4 (* d00 r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x499 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x10522 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x10472 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1194 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x3628 (* (- 4) (* d00 x00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x3624 (* (- 2) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x1465 (* (- 4) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x1809 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x11565 (* 2 (* d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x13608 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r))))
 (let ((?x535 (* 4 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r r))))
 (let ((?x1197 (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x10538 (+ ?x1197 (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 ?x1194 r r r)) ?x535 ?x13608 (* 2 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r) (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 r)) (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) (* (- 8) (* r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r)) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 r)) ?x11565 (* d00 d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r) ?x1809 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 r)) ?x1465 ?x3624 ?x3628 (* 8 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r r)) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r) (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r)) ?x10472 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) (* 8 (* r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) ?x10522 ?x499 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) ?x10457 (* (- 8) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 ?x1194 r)) ?x10532 (* 4 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 ?x1194 r)) ?x779 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) (* (- 4) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) ?x718 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 r r)))))
 (let (($x595 (not (= ?x10538 0))))
 (let ((?x636 (* (- 1) d)))
 (let ((?x8860 (+ (- 2) ?x292 ?x381 q ?x636)))
 (let ((?x876 (+ (- 4) q)))
 (let ((?x15520 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x4231 (* (- 1) (* d00 d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x15585 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x8860 ?x8860 ?x8860 r r r r))))
 (let ((?x15572 (* 4 (* d00 r00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x15571 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x15499 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x15498 (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x8860 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x806 (* (- 4) (* d00 x00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x7014 (* (- 2) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x10458 (* (- 4) (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x11252 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x9232 (* 2 (* d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x4479 (* (- 1) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r))))
 (let ((?x15451 (* 4 (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r r))))
 (let ((?x15368 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x10918 (+ ?x15368 (* d00 d00 q00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r) (* (- 8) (* ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 ?x8860 r r r)) ?x15451 ?x4479 (* 2 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r) (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) (* (- 8) (* r00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r)) (* (- 8) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 r)) ?x9232 (* d00 d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r) ?x11252 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 r)) ?x10458 ?x7014 ?x806 (* 8 (* ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r r)) (* d00 d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r) (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r)) ?x15498 (* (- 4) (* d00 r00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) (* 8 (* r00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) ?x15499 ?x15571 (* (- 2) (* d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) ?x15572 (* (- 8) (* ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 ?x8860 r)) ?x15585 (* 4 (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 ?x8860 r)) ?x4231 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) (* (- 4) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r)) (* 4 (* d00 x00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) ?x15520 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 r r)))))
 (let (($x1358 (not (= ?x10918 0))))
 (let ((?x10024 (+ 2 ?x292 ?x381 q d)))
 (let ((?x529 (+ 4 q)))
 (let ((?x2525 (* (- 2) (* d00 q00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x483 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x9786 (* (- 4) (* ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r r))))
 (let ((?x10304 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x9778 (* 2 (* ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x9777 (* (- 4) (* d00 r00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10286 (* 4 (* ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10245 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x9163 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x10203 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10174 (* (- 1) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10172 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x10108 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r))))
 (let ((?x10104 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r r))))
 (let ((?x9805 (* 4 (* d00 x00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x15419 (+ ?x9805 (* d00 d00 q00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r) (* (- 8) (* ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r r r)) ?x10104 ?x10108 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 r r r) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 r)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r)) (* 8 (* r00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r)) (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 r)) ?x10172 (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r) ?x10174 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 r)) ?x10203 ?x9163 ?x10245 (* 8 (* ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 ?x10024 r r r)) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r) (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 r)) ?x10286 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) ?x9777 ?x9778 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) ?x10304 (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r)) ?x9786 (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r)) ?x483 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) ?x2525 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r r)))))
 (let (($x8859 (not (= ?x15419 0))))
 (let ((?x13933 (* 4 (* d00 r00))))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x10068 (* 4 (* x d))))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x1599 (* 8 r)))
 (let ((?x10062 (+ ?x1599 ?x379 ?x10068 ?x411 ?x427 (* d d q) (* (- 2) (* d q)) ?x477 (* (- 4) (* d r)) ?x13933)))
 (let (($x9745 (= ?x10062 0)))
 (and $x9745 (or $x8859 $x1358 $x595 $x1036)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x9147 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x381 (* (- 1) x)))
 (let ((?x292 (* 2 r)))
 (let ((?x10024 (+ 2 ?x292 ?x381 q d)))
 (let ((?x529 (+ 4 q)))
 (let ((?x1753 (+ 2 d)))
 (let ((?x2525 (* (- 2) (* d00 q00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x483 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x9786 (* (- 4) (* ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r r))))
 (let ((?x10304 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x9778 (* 2 (* ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x9777 (* (- 4) (* d00 r00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10286 (* 4 (* ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10245 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x9163 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x10203 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10174 (* (- 1) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x10172 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r))))
 (let ((?x10108 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r))))
 (let ((?x10104 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r r))))
 (let ((?x9805 (* 4 (* d00 x00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r))))
 (let ((?x15419 (+ ?x9805 (* d00 d00 q00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r) (* (- 8) (* ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r r r)) ?x10104 ?x10108 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 r r r) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 r)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 r r r)) (* 8 (* r00 ?x529 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r r)) (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 r)) ?x10172 (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r) ?x10174 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10024 r)) ?x10203 ?x9163 ?x10245 (* 8 (* ?x1753 ?x1753 ?x1753 ?x529 ?x10024 ?x10024 ?x10024 r r r)) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r) (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 ?x10024 r)) ?x10286 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) ?x9777 ?x9778 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) ?x10304 (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r)) ?x9786 (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 ?x10024 r)) ?x483 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x10024 ?x10024 ?x10024 r)) ?x2525 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10024 r r)))))
 (let (($x8859 (not (= ?x15419 0))))
 (let ((?x636 (* (- 1) d)))
 (let ((?x8860 (+ (- 2) ?x292 ?x381 q ?x636)))
 (let ((?x876 (+ (- 4) q)))
 (let ((?x15520 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x4231 (* (- 1) (* d00 d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x15585 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x8860 ?x8860 ?x8860 r r r r))))
 (let ((?x15572 (* 4 (* d00 r00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x15571 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x15499 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x15498 (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x8860 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x806 (* (- 4) (* d00 x00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x7014 (* (- 2) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x10458 (* (- 4) (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x11252 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x9232 (* 2 (* d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r))))
 (let ((?x4479 (* (- 1) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r))))
 (let ((?x15451 (* 4 (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r r))))
 (let ((?x15368 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r))))
 (let ((?x10918 (+ ?x15368 (* d00 d00 q00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r) (* (- 8) (* ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 ?x8860 r r r)) ?x15451 ?x4479 (* 2 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r) (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x8860 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) (* (- 8) (* r00 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r r r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x8860 ?x8860 ?x8860 r r r)) (* (- 8) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 r)) ?x9232 (* d00 d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r) ?x11252 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 r)) ?x10458 ?x7014 ?x806 (* 8 (* ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r r)) (* d00 d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r) (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 r)) ?x15498 (* (- 4) (* d00 r00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) (* 8 (* r00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) ?x15499 ?x15571 (* (- 2) (* d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) ?x15572 (* (- 8) (* ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 ?x8860 r)) ?x15585 (* 4 (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 ?x8860 r)) ?x4231 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x8860 r)) (* (- 4) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r r)) (* 4 (* d00 x00 ?x876 ?x876 ?x1753 ?x1753 ?x8860 ?x8860 ?x8860 r)) ?x15520 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x8860 r r)))))
 (let (($x1358 (not (= ?x10918 0))))
 (let ((?x10358 (* (- 4) (* ?x1753 ?x1753 ?x1753 (+ ?x292 ?x381 q) r r q q q))))
 (let ((?x10432 (+ ?x292 ?x381 q)))
 (let ((?x1034 (* (- 2) (* d00 q00 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x1224 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x952 (* (- 4) (* ?x1753 ?x10432 ?x10432 ?x10432 r r r r q q q))))
 (let ((?x10566 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x10480 (* 2 (* ?x1753 ?x10432 ?x10432 ?x10432 r r r q q q q))))
 (let ((?x10567 (* (- 4) (* d00 r00 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x10560 (* 4 (* ?x1753 ?x10432 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x10564 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x1101 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q q))))
 (let ((?x10488 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r r q))))
 (let ((?x10389 (* (- 1) (* ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r r q q q q))))
 (let ((?x620 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q))))
 (let ((?x929 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q q))))
 (let ((?x10426 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r r q))))
 (let ((?x10429 (* 4 (* d00 x00 ?x10432 ?x10432 ?x10432 r r r q q q))))
 (let ((?x10361 (+ ?x10429 (* d00 d00 q00 ?x10432 ?x10432 ?x10432 r r r q q q) (* (- 8) (* ?x10432 ?x10432 ?x10432 ?x10432 r r r q q q)) ?x10426 ?x929 (* 2 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q q)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q q) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x10432 r q q q q)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x10432 r q q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x10432 r q q q)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r r r q)) (* 8 (* r00 ?x10432 ?x10432 ?x10432 r r r q q q)) (* (- 8) (* ?x1753 ?x1753 ?x10432 ?x10432 r q q q)) ?x620 (* d00 d00 q00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q) ?x10389 (* 2 (* ?x1753 ?x1753 ?x1753 ?x10432 r q q q q)) ?x10488 ?x1101 ?x10564 (* 8 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r r q)) (* d00 d00 q00 ?x1753 ?x1753 ?x10432 r q q q) (* 4 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 r q q q)) ?x10560 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) ?x10567 ?x10480 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x10432 r q q q)) ?x10566 (* (- 8) (* ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 ?x10432 r q q)) ?x952 (* 4 (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 ?x10432 r q q)) ?x1224 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x10432 r q q q)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r r q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x10432 ?x10432 ?x10432 r q q)) ?x1034 ?x10358)))
 (let (($x1036 (not (= ?x10361 0))))
 (let ((?x1300 (* (- 2) d)))
 (let ((?x1194 (+ (- 4) ?x292 ?x381 q ?x1300)))
 (let ((?x7301 (+ (- 8) q)))
 (let ((?x718 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x779 (* (- 1) (* d00 d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x10532 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1194 ?x1194 ?x1194 r r r r))))
 (let ((?x10457 (* 4 (* d00 r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x499 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x10522 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x10472 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1194 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x3628 (* (- 4) (* d00 x00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x3624 (* (- 2) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x1465 (* (- 4) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x1809 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x11565 (* 2 (* d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r))))
 (let ((?x13608 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r))))
 (let ((?x535 (* 4 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r r))))
 (let ((?x1197 (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r))))
 (let ((?x10538 (+ ?x1197 (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 ?x1194 r r r)) ?x535 ?x13608 (* 2 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r) (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1194 r)) (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) (* (- 8) (* r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r r r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1194 ?x1194 ?x1194 r r r)) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 r)) ?x11565 (* d00 d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r) ?x1809 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 r)) ?x1465 ?x3624 ?x3628 (* 8 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r r)) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r) (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 r)) ?x10472 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) (* 8 (* r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) ?x10522 ?x499 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) ?x10457 (* (- 8) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 ?x1194 r)) ?x10532 (* 4 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 ?x1194 r)) ?x779 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 r)) (* (- 4) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x1753 ?x1753 ?x1194 ?x1194 ?x1194 r)) ?x718 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1194 r r)))))
 (let (($x595 (not (= ?x10538 0))))
 (let ((?x13933 (* 4 (* d00 r00))))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x10068 (* 4 (* x d))))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x1599 (* 8 r)))
 (let ((?x10062 (+ ?x1599 ?x379 ?x10068 ?x411 ?x427 (* d d q) (* (- 2) (* d q)) ?x477 (* (- 4) (* d r)) ?x13933)))
 (let (($x9745 (= ?x10062 0)))
 (let (($x9148 (and $x9745 (or $x595 $x1036 $x1358 $x8859))))
 (let (($x10355 (and $x9745 (or $x8859 $x1358 $x595 $x1036))))
 (rewrite (= $x10355 $x9148))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x372 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x294 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x291 (- q 8)))
 (let ((?x66 (+ d 2)))
 (let ((?x297 (+ (* 4 d00 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r x00) (* d00 d00 ?x291 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r r r))))
 (let ((?x299 (- ?x297 (* 8 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r r r))))
 (let ((?x301 (+ ?x299 (* 4 ?x66 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 r r r r))))
 (let ((?x303 (- ?x301 (* ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r))))
 (let ((?x306 (+ ?x303 (* 2 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 r r r))))
 (let ((?x310 (- (- ?x306 (* ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 r)) (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x291 ?x294 r00 r))))
 (let ((?x314 (- (+ ?x310 (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x291 ?x294 r x00)) (* 8 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 r00 r r r))))
 (let ((?x316 (+ ?x314 (* 8 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r r r))))
 (let ((?x321 (+ (- ?x316 (* 8 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 r)) (* 2 ?x66 ?x66 ?x66 d00 ?x291 q00 ?x294 ?x294 r r r) (* ?x66 ?x66 d00 d00 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r))))
 (let ((?x323 (- ?x321 (* ?x66 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r))))
 (let ((?x329 (- (+ ?x323 (* 2 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 r)) (* 4 ?x66 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 ?x294 r r r))))
 (let ((?x330 (- ?x329 (* 2 ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 r r r))))
 (let ((?x331 (- ?x330 (* 4 ?x66 ?x66 ?x66 d00 ?x291 ?x294 ?x294 r r r x00))))
 (let ((?x336 (+ ?x331 (* 8 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 ?x294 r r r) (* ?x66 ?x66 d00 d00 ?x291 ?x291 ?x291 q00 ?x294 r) (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 r) (* 4 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r r r))))
 (let ((?x338 (- ?x336 (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r))))
 (let ((?x342 (- (+ ?x338 (* 8 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r)) (* 4 d00 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r r r))))
 (let ((?x344 (+ ?x342 (* 2 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r))))
 (let ((?x346 (- ?x344 (* 2 ?x66 ?x66 d00 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r))))
 (let ((?x349 (+ ?x346 (* 8 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 r00 r) (* 4 ?x66 ?x66 ?x66 d00 ?x291 ?x294 ?x294 r00 r r r))))
 (let ((?x353 (- (- ?x349 (* 8 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r)) (* 4 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r r))))
 (let ((?x355 (+ ?x353 (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r))))
 (let ((?x359 (- ?x355 (* ?x66 ?x66 ?x66 d00 d00 ?x291 q00 ?x294 ?x294 r r r))))
 (let ((?x361 (- (- ?x359 (* 2 ?x66 ?x66 d00 ?x291 ?x291 ?x291 q00 ?x294 r)) (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 r r))))
 (let ((?x363 (+ ?x361 (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x294 ?x294 ?x294 r x00))))
 (let ((?x366 (- ?x363 (* 2 d00 ?x291 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r r r))))
 (let (($x368 (= (- ?x366 (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 r r)) 0)))
 (let ((?x215 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x213 (- q 4)))
 (let ((?x218 (+ (* 4 d00 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r x00) (* d00 d00 ?x213 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r r r))))
 (let ((?x220 (- ?x218 (* 8 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r r r))))
 (let ((?x222 (+ ?x220 (* 4 ?x66 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 r r r r))))
 (let ((?x224 (- ?x222 (* ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r))))
 (let ((?x227 (+ ?x224 (* 2 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 r r r))))
 (let ((?x231 (- (- ?x227 (* ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 r)) (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x213 ?x215 r00 r))))
 (let ((?x235 (- (+ ?x231 (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x213 ?x215 r x00)) (* 8 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 r00 r r r))))
 (let ((?x237 (+ ?x235 (* 8 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r r r))))
 (let ((?x242 (+ (- ?x237 (* 8 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 r)) (* 2 ?x66 ?x66 ?x66 d00 ?x213 q00 ?x215 ?x215 r r r) (* ?x66 ?x66 d00 d00 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r))))
 (let ((?x244 (- ?x242 (* ?x66 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r))))
 (let ((?x250 (- (+ ?x244 (* 2 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 r)) (* 4 ?x66 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 ?x215 r r r))))
 (let ((?x251 (- ?x250 (* 2 ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 r r r))))
 (let ((?x252 (- ?x251 (* 4 ?x66 ?x66 ?x66 d00 ?x213 ?x215 ?x215 r r r x00))))
 (let ((?x257 (+ ?x252 (* 8 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 ?x215 r r r) (* ?x66 ?x66 d00 d00 ?x213 ?x213 ?x213 q00 ?x215 r) (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 r) (* 4 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r r r))))
 (let ((?x259 (- ?x257 (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r))))
 (let ((?x263 (- (+ ?x259 (* 8 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r)) (* 4 d00 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r r r))))
 (let ((?x265 (+ ?x263 (* 2 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r))))
 (let ((?x267 (- ?x265 (* 2 ?x66 ?x66 d00 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r))))
 (let ((?x270 (+ ?x267 (* 8 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 r00 r) (* 4 ?x66 ?x66 ?x66 d00 ?x213 ?x215 ?x215 r00 r r r))))
 (let ((?x274 (- (- ?x270 (* 8 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r)) (* 4 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r r))))
 (let ((?x276 (+ ?x274 (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r))))
 (let ((?x280 (- ?x276 (* ?x66 ?x66 ?x66 d00 d00 ?x213 q00 ?x215 ?x215 r r r))))
 (let ((?x282 (- (- ?x280 (* 2 ?x66 ?x66 d00 ?x213 ?x213 ?x213 q00 ?x215 r)) (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 r r))))
 (let ((?x284 (+ ?x282 (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x215 ?x215 ?x215 r x00))))
 (let ((?x287 (- ?x284 (* 2 d00 ?x213 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r r r))))
 (let (($x289 (= (- ?x287 (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 r r)) 0)))
 (let ((?x58 (* 2 r)))
 (let ((?x59 (- ?x58 x)))
 (let ((?x137 (+ ?x59 q)))
 (let ((?x140 (+ (* 4 d00 q q q ?x137 ?x137 ?x137 r r r x00) (* d00 d00 q q q q00 ?x137 ?x137 ?x137 r r r))))
 (let ((?x142 (- ?x140 (* 8 q q q ?x137 ?x137 ?x137 ?x137 r r r))))
 (let ((?x144 (+ ?x142 (* 4 ?x66 ?x66 ?x66 ?x66 q ?x137 ?x137 r r r r))))
 (let ((?x146 (- ?x144 (* ?x66 ?x66 ?x66 ?x66 q q q ?x137 ?x137 ?x137 r))))
 (let ((?x149 (+ ?x146 (* 2 ?x66 ?x66 ?x66 q q q ?x137 ?x137 ?x137 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 q q ?x137 ?x137 r r r))))
 (let ((?x153 (- (- ?x149 (* ?x66 ?x66 ?x66 ?x66 q q q q ?x137 r)) (* 4 ?x66 ?x66 d00 q q q ?x137 r00 r))))
 (let ((?x157 (- (+ ?x153 (* 4 ?x66 ?x66 d00 q q q ?x137 r x00)) (* 8 ?x66 ?x66 ?x66 q ?x137 ?x137 r00 r r r))))
 (let ((?x159 (+ ?x157 (* 8 q q q ?x137 ?x137 ?x137 r00 r r r))))
 (let ((?x164 (+ (- ?x159 (* 8 ?x66 ?x66 q q q ?x137 ?x137 r)) (* 2 ?x66 ?x66 ?x66 d00 q q00 ?x137 ?x137 r r r) (* ?x66 ?x66 d00 d00 q q q00 ?x137 ?x137 ?x137 r))))
 (let ((?x166 (- ?x164 (* ?x66 ?x66 q q q q ?x137 ?x137 ?x137 r r r))))
 (let ((?x172 (- (+ ?x166 (* 2 ?x66 ?x66 ?x66 q q q q ?x137 r)) (* 4 ?x66 ?x66 ?x66 ?x66 q ?x137 ?x137 ?x137 r r r))))
 (let ((?x173 (- ?x172 (* 2 ?x66 ?x66 ?x66 ?x66 q q ?x137 ?x137 r r r))))
 (let ((?x174 (- ?x173 (* 4 ?x66 ?x66 ?x66 d00 q ?x137 ?x137 r r r x00))))
 (let ((?x179 (+ ?x174 (* 8 ?x66 ?x66 ?x66 q ?x137 ?x137 ?x137 r r r) (* ?x66 ?x66 d00 d00 q q q q00 ?x137 r) (* 4 ?x66 ?x66 ?x66 q q q ?x137 ?x137 r) (* 4 ?x66 q q q ?x137 ?x137 ?x137 ?x137 r r r))))
 (let ((?x181 (- ?x179 (* 4 ?x66 ?x66 d00 q q ?x137 ?x137 ?x137 r00 r))))
 (let ((?x185 (- (+ ?x181 (* 8 ?x66 ?x66 q q ?x137 ?x137 ?x137 r00 r)) (* 4 d00 q q q ?x137 ?x137 ?x137 r00 r r r))))
 (let ((?x187 (+ ?x185 (* 2 ?x66 q q q q ?x137 ?x137 ?x137 r r r))))
 (let ((?x189 (- ?x187 (* 2 ?x66 ?x66 d00 q q q00 ?x137 ?x137 ?x137 r))))
 (let ((?x192 (+ ?x189 (* 8 ?x66 ?x66 q q q ?x137 r00 r) (* 4 ?x66 ?x66 ?x66 d00 q ?x137 ?x137 r00 r r r))))
 (let ((?x196 (- (- ?x192 (* 8 ?x66 ?x66 q q ?x137 ?x137 ?x137 ?x137 r)) (* 4 ?x66 q q q ?x137 ?x137 ?x137 r r r r))))
 (let ((?x198 (+ ?x196 (* 4 ?x66 ?x66 ?x66 q q ?x137 ?x137 ?x137 ?x137 r))))
 (let ((?x202 (- ?x198 (* ?x66 ?x66 ?x66 d00 d00 q q00 ?x137 ?x137 r r r))))
 (let ((?x204 (- (- ?x202 (* 2 ?x66 ?x66 d00 q q q q00 ?x137 r)) (* 4 ?x66 ?x66 ?x66 q q ?x137 ?x137 ?x137 r r))))
 (let ((?x206 (+ ?x204 (* 4 ?x66 ?x66 d00 q q ?x137 ?x137 ?x137 r x00))))
 (let ((?x209 (- ?x206 (* 2 d00 q q q q00 ?x137 ?x137 ?x137 r r r))))
 (let (($x211 (= (- ?x209 (* 4 ?x66 ?x66 ?x66 q q q ?x137 r r)) 0)))
 (let ((?x60 (+ ?x59 q d 2)))
 (let ((?x57 (+ q 4)))
 (let ((?x63 (+ (* 4 d00 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r x00) (* d00 d00 ?x57 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r r r))))
 (let ((?x65 (- ?x63 (* 8 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r r r))))
 (let ((?x68 (+ ?x65 (* 4 ?x66 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 r r r r))))
 (let ((?x70 (- ?x68 (* ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r))))
 (let ((?x73 (+ ?x70 (* 2 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 r r r))))
 (let ((?x77 (- (- ?x73 (* ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 r)) (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x57 ?x60 r00 r))))
 (let ((?x81 (- (+ ?x77 (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x57 ?x60 r x00)) (* 8 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 r00 r r r))))
 (let ((?x83 (+ ?x81 (* 8 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r r r))))
 (let ((?x88 (+ (- ?x83 (* 8 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 r)) (* 2 ?x66 ?x66 ?x66 d00 ?x57 q00 ?x60 ?x60 r r r) (* ?x66 ?x66 d00 d00 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r))))
 (let ((?x90 (- ?x88 (* ?x66 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r))))
 (let ((?x96 (- (+ ?x90 (* 2 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 r)) (* 4 ?x66 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 ?x60 r r r))))
 (let ((?x97 (- ?x96 (* 2 ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 r r r))))
 (let ((?x98 (- ?x97 (* 4 ?x66 ?x66 ?x66 d00 ?x57 ?x60 ?x60 r r r x00))))
 (let ((?x103 (+ ?x98 (* 8 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 ?x60 r r r) (* ?x66 ?x66 d00 d00 ?x57 ?x57 ?x57 q00 ?x60 r) (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 r) (* 4 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r r r))))
 (let ((?x105 (- ?x103 (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r))))
 (let ((?x109 (- (+ ?x105 (* 8 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r)) (* 4 d00 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r r r))))
 (let ((?x111 (+ ?x109 (* 2 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r))))
 (let ((?x113 (- ?x111 (* 2 ?x66 ?x66 d00 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r))))
 (let ((?x116 (+ ?x113 (* 8 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 r00 r) (* 4 ?x66 ?x66 ?x66 d00 ?x57 ?x60 ?x60 r00 r r r))))
 (let ((?x120 (- (- ?x116 (* 8 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r)) (* 4 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r r))))
 (let ((?x122 (+ ?x120 (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r))))
 (let ((?x126 (- ?x122 (* ?x66 ?x66 ?x66 d00 d00 ?x57 q00 ?x60 ?x60 r r r))))
 (let ((?x128 (- (- ?x126 (* 2 ?x66 ?x66 d00 ?x57 ?x57 ?x57 q00 ?x60 r)) (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 r r))))
 (let ((?x130 (+ ?x128 (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x60 ?x60 ?x60 r x00))))
 (let ((?x133 (- ?x130 (* 2 d00 ?x57 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r r r))))
 (let (($x135 (= (- ?x133 (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 r r)) 0)))
 (let ((?x44 (* d d q)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) (* 4 d00 x00))))
 (let ((?x50 (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) (* 2 d00 q00))))
 (and (= (+ (- ?x50 (* 4 d r)) (* 4 d00 r00)) 0) (or (not $x135) (not $x211) (not $x289) (not $x368))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1180 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x381 (* (- 1) x)))
 (let ((?x58 (* 2 r)))
 (let ((?x9882 (+ ?x58 ?x381 q)))
 (let ((?x582 (+ 2 d)))
 (let ((?x15616 (* (- 2) (* d00 q00 ?x9882 ?x9882 ?x9882 r r r q q q))))
 (let ((?x2160 (* (- 1) (* d00 d00 q00 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q))))
 (let ((?x12504 (* (- 4) (* ?x582 ?x9882 ?x9882 ?x9882 r r r r q q q))))
 (let ((?x14152 (* 4 (* d00 r00 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q))))
 (let ((?x15724 (* 2 (* ?x582 ?x9882 ?x9882 ?x9882 r r r q q q q))))
 (let ((?x6901 (* (- 4) (* d00 r00 ?x9882 ?x9882 ?x9882 r r r q q q))))
 (let ((?x9783 (* 4 (* ?x582 ?x9882 ?x9882 ?x9882 ?x9882 r r r q q q))))
 (let ((?x10263 (* (- 4) (* d00 x00 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q))))
 (let ((?x10214 (* (- 2) (* ?x582 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q q))))
 (let ((?x10178 (* (- 4) (* ?x582 ?x582 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r r r q))))
 (let ((?x10125 (* (- 1) (* ?x582 ?x582 ?x9882 ?x9882 ?x9882 r r r q q q q))))
 (let ((?x10085 (* 2 (* d00 q00 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q))))
 (let ((?x9846 (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q q))))
 (let ((?x9723 (* 4 (* ?x582 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r r q))))
 (let ((?x1038 (* 4 (* d00 x00 ?x9882 ?x9882 ?x9882 r r r q q q))))
 (let ((?x4492 (+ ?x1038 (* d00 d00 q00 ?x9882 ?x9882 ?x9882 r r r q q q) (* (- 8) (* ?x9882 ?x9882 ?x9882 ?x9882 r r r q q q)) ?x9723 ?x9846 (* 2 (* ?x582 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q q)) (* ?x582 ?x582 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q q) (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x9882 r q q q q)) (* (- 4) (* d00 r00 ?x582 ?x582 ?x9882 r q q q)) (* 4 (* d00 x00 ?x582 ?x582 ?x9882 r q q q)) (* (- 8) (* r00 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q)) (* 8 (* r00 ?x9882 ?x9882 ?x9882 r r r q q q)) (* (- 8) (* ?x582 ?x582 ?x9882 ?x9882 r q q q)) ?x10085 (* d00 d00 q00 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q) ?x10125 (* 2 (* ?x582 ?x582 ?x582 ?x9882 r q q q q)) ?x10178 ?x10214 ?x10263 (* 8 (* ?x582 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r r r q)) (* d00 d00 q00 ?x582 ?x582 ?x9882 r q q q) (* 4 (* ?x582 ?x582 ?x582 ?x9882 ?x9882 r q q q)) ?x9783 (* (- 4) (* d00 r00 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q)) (* 8 (* r00 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q)) ?x6901 ?x15724 (* (- 2) (* d00 q00 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q)) (* 8 (* r00 ?x582 ?x582 ?x9882 r q q q)) ?x14152 (* (- 8) (* ?x582 ?x582 ?x9882 ?x9882 ?x9882 ?x9882 r q q)) ?x12504 (* 4 (* ?x582 ?x582 ?x582 ?x9882 ?x9882 ?x9882 ?x9882 r q q)) ?x2160 (* (- 2) (* d00 q00 ?x582 ?x582 ?x9882 r q q q)) (* (- 4) (* ?x582 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r r q q)) (* 4 (* d00 x00 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q)) ?x15616 (* (- 4) (* ?x582 ?x582 ?x582 ?x9882 r r q q q)))))
 (let ((?x432 (* (- 2) d)))
 (let ((?x9995 (+ (- 4) ?x58 ?x381 q ?x432)))
 (let ((?x1071 (+ (- 8) q)))
 (let ((?x14843 (* (- 2) (* d00 q00 ?x1071 ?x1071 ?x1071 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x14763 (* (- 1) (* d00 d00 q00 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r))))
 (let ((?x14734 (* (- 4) (* ?x1071 ?x1071 ?x1071 ?x582 ?x9995 ?x9995 ?x9995 r r r r))))
 (let ((?x14685 (* 4 (* d00 r00 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r))))
 (let ((?x1532 (* 2 (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x4910 (* (- 4) (* d00 r00 ?x1071 ?x1071 ?x1071 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x639 (* 4 (* ?x1071 ?x1071 ?x1071 ?x582 ?x9995 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x10423 (* (- 4) (* d00 x00 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r))))
 (let ((?x10439 (* (- 2) (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r))))
 (let ((?x10527 (* (- 4) (* ?x1071 ?x582 ?x582 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x1375 (* (- 1) (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x15621 (* 2 (* d00 q00 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r))))
 (let ((?x10199 (* (- 1) (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r))))
 (let ((?x10121 (* 4 (* ?x1071 ?x582 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r r))))
 (let ((?x10036 (* 4 (* d00 x00 ?x1071 ?x1071 ?x1071 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x14864 (+ ?x10036 (* d00 d00 q00 ?x1071 ?x1071 ?x1071 ?x9995 ?x9995 ?x9995 r r r) (* (- 8) (* ?x1071 ?x1071 ?x1071 ?x9995 ?x9995 ?x9995 ?x9995 r r r)) ?x10121 ?x10199 (* 2 (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r)) (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r) (* (- 1) (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x9995 r)) (* (- 4) (* d00 r00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 r)) (* 4 (* d00 x00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 r)) (* (- 8) (* r00 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r)) (* 8 (* r00 ?x1071 ?x1071 ?x1071 ?x9995 ?x9995 ?x9995 r r r)) (* (- 8) (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 r)) ?x15621 (* d00 d00 q00 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r) ?x1375 (* 2 (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x9995 r)) ?x10527 ?x10439 ?x10423 (* 8 (* ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r r r)) (* d00 d00 q00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 r) (* 4 (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 r)) ?x639 (* (- 4) (* d00 r00 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r)) (* 8 (* r00 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r)) ?x4910 ?x1532 (* (- 2) (* d00 q00 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r)) (* 8 (* r00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 r)) ?x14685 (* (- 8) (* ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 ?x9995 r)) ?x14734 (* 4 (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 ?x9995 ?x9995 r)) ?x14763 (* (- 2) (* d00 q00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 r)) (* (- 4) (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r r)) (* 4 (* d00 x00 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r)) ?x14843 (* (- 4) (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x9995 r r)))))
 (let ((?x916 (* (- 1) d)))
 (let ((?x8915 (+ (- 2) ?x58 ?x381 q ?x916)))
 (let ((?x754 (+ (- 4) q)))
 (let ((?x1141 (* (- 2) (* d00 q00 ?x754 ?x754 ?x754 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x10427 (* (- 1) (* d00 d00 q00 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r))))
 (let ((?x10436 (* (- 4) (* ?x754 ?x754 ?x754 ?x582 ?x8915 ?x8915 ?x8915 r r r r))))
 (let ((?x699 (* 4 (* d00 r00 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r))))
 (let ((?x15239 (* 2 (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x874 (* (- 4) (* d00 r00 ?x754 ?x754 ?x754 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x15591 (* 4 (* ?x754 ?x754 ?x754 ?x582 ?x8915 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x2167 (* (- 4) (* d00 x00 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r))))
 (let ((?x790 (* (- 2) (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r))))
 (let ((?x12303 (* (- 4) (* ?x754 ?x582 ?x582 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x1644 (* (- 1) (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x706 (* 2 (* d00 q00 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r))))
 (let ((?x8993 (* (- 1) (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r))))
 (let ((?x9934 (* 4 (* ?x754 ?x582 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r r))))
 (let ((?x9875 (* 4 (* d00 x00 ?x754 ?x754 ?x754 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x448 (+ ?x9875 (* d00 d00 q00 ?x754 ?x754 ?x754 ?x8915 ?x8915 ?x8915 r r r) (* (- 8) (* ?x754 ?x754 ?x754 ?x8915 ?x8915 ?x8915 ?x8915 r r r)) ?x9934 ?x8993 (* 2 (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r)) (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r) (* (- 1) (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x8915 r)) (* (- 4) (* d00 r00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 r)) (* 4 (* d00 x00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 r)) (* (- 8) (* r00 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r)) (* 8 (* r00 ?x754 ?x754 ?x754 ?x8915 ?x8915 ?x8915 r r r)) (* (- 8) (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 r)) ?x706 (* d00 d00 q00 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r) ?x1644 (* 2 (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x8915 r)) ?x12303 ?x790 ?x2167 (* 8 (* ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r r r)) (* d00 d00 q00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 r) (* 4 (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 r)) ?x15591 (* (- 4) (* d00 r00 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r)) (* 8 (* r00 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r)) ?x874 ?x15239 (* (- 2) (* d00 q00 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r)) (* 8 (* r00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 r)) ?x699 (* (- 8) (* ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 ?x8915 r)) ?x10436 (* 4 (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 ?x8915 ?x8915 r)) ?x10427 (* (- 2) (* d00 q00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 r)) (* (- 4) (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r r)) (* 4 (* d00 x00 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r)) ?x1141 (* (- 4) (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x8915 r r)))))
 (let ((?x13596 (+ 2 ?x58 ?x381 q d)))
 (let ((?x376 (+ 4 q)))
 (let ((?x2567 (* (- 2) (* d00 q00 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x10291 (* (- 1) (* d00 d00 q00 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 r r r))))
 (let ((?x10255 (* (- 4) (* ?x582 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r r))))
 (let ((?x9766 (* 4 (* d00 r00 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 r r r))))
 (let ((?x9136 (* 2 (* ?x582 ?x376 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x10148 (* (- 4) (* d00 r00 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x10087 (* 4 (* ?x582 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x10055 (* (- 4) (* d00 x00 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 r r r))))
 (let ((?x10029 (* (- 2) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 r r r))))
 (let ((?x9009 (* (- 4) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x9967 (* (- 1) (* ?x582 ?x582 ?x376 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x9947 (* 2 (* d00 q00 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 r r r))))
 (let ((?x8887 (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r))))
 (let ((?x11139 (* 4 (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 r r r r))))
 (let ((?x8083 (* 4 (* d00 x00 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x6082 (+ ?x8083 (* d00 d00 q00 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r) (* (- 8) (* ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 ?x13596 r r r)) ?x11139 ?x8887 (* 2 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r)) (* ?x582 ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 r r r) (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x376 ?x13596 r)) (* (- 4) (* d00 r00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 r)) (* 4 (* d00 x00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 r)) (* (- 8) (* r00 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 r r r)) (* 8 (* r00 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r)) (* (- 8) (* ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 ?x13596 r)) ?x9947 (* d00 d00 q00 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r) ?x9967 (* 2 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x376 ?x13596 r)) ?x9009 ?x10029 ?x10055 (* 8 (* ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 ?x13596 r r r)) (* d00 d00 q00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 r) (* 4 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 ?x13596 r)) ?x10087 (* (- 4) (* d00 r00 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r)) (* 8 (* r00 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r)) ?x10148 ?x9136 (* (- 2) (* d00 q00 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r)) (* 8 (* r00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 r)) ?x9766 (* (- 8) (* ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 ?x13596 r)) ?x10255 (* 4 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 ?x13596 r)) ?x10291 (* (- 2) (* d00 q00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 r)) (* (- 4) (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r)) (* 4 (* d00 x00 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r)) ?x2567 (* (- 4) (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 r r)))))
 (let (($x9037 (or (not (= ?x6082 0)) (not (= ?x448 0)) (not (= ?x14864 0)) (not (= ?x4492 0)))))
 (let ((?x13933 (* 4 (* d00 r00))))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x44 (* d d q)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x30 (* 8 r)))
 (let ((?x9721 (+ ?x30 ?x379 (* 4 (* x d)) ?x411 ?x427 ?x44 (* (- 2) (* d q)) ?x477 (* (- 4) (* d r)) ?x13933)))
 (and (= ?x9721 0) $x9037))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x9881 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x381 (* (- 1) x)))
 (let ((?x58 (* 2 r)))
 (let ((?x9882 (+ ?x58 ?x381 q)))
 (let ((?x582 (+ 2 d)))
 (let ((?x15616 (* (- 2) (* d00 q00 ?x9882 ?x9882 ?x9882 r r r q q q))))
 (let ((?x2160 (* (- 1) (* d00 d00 q00 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q))))
 (let ((?x12504 (* (- 4) (* ?x582 ?x9882 ?x9882 ?x9882 r r r r q q q))))
 (let ((?x14152 (* 4 (* d00 r00 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q))))
 (let ((?x15724 (* 2 (* ?x582 ?x9882 ?x9882 ?x9882 r r r q q q q))))
 (let ((?x6901 (* (- 4) (* d00 r00 ?x9882 ?x9882 ?x9882 r r r q q q))))
 (let ((?x9783 (* 4 (* ?x582 ?x9882 ?x9882 ?x9882 ?x9882 r r r q q q))))
 (let ((?x10263 (* (- 4) (* d00 x00 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q))))
 (let ((?x10214 (* (- 2) (* ?x582 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q q))))
 (let ((?x10178 (* (- 4) (* ?x582 ?x582 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r r r q))))
 (let ((?x10125 (* (- 1) (* ?x582 ?x582 ?x9882 ?x9882 ?x9882 r r r q q q q))))
 (let ((?x10085 (* 2 (* d00 q00 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q))))
 (let ((?x9846 (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q q))))
 (let ((?x9723 (* 4 (* ?x582 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r r q))))
 (let ((?x1038 (* 4 (* d00 x00 ?x9882 ?x9882 ?x9882 r r r q q q))))
 (let ((?x4492 (+ ?x1038 (* d00 d00 q00 ?x9882 ?x9882 ?x9882 r r r q q q) (* (- 8) (* ?x9882 ?x9882 ?x9882 ?x9882 r r r q q q)) ?x9723 ?x9846 (* 2 (* ?x582 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q q)) (* ?x582 ?x582 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q q) (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x9882 r q q q q)) (* (- 4) (* d00 r00 ?x582 ?x582 ?x9882 r q q q)) (* 4 (* d00 x00 ?x582 ?x582 ?x9882 r q q q)) (* (- 8) (* r00 ?x582 ?x582 ?x582 ?x9882 ?x9882 r r r q)) (* 8 (* r00 ?x9882 ?x9882 ?x9882 r r r q q q)) (* (- 8) (* ?x582 ?x582 ?x9882 ?x9882 r q q q)) ?x10085 (* d00 d00 q00 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q) ?x10125 (* 2 (* ?x582 ?x582 ?x582 ?x9882 r q q q q)) ?x10178 ?x10214 ?x10263 (* 8 (* ?x582 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r r r q)) (* d00 d00 q00 ?x582 ?x582 ?x9882 r q q q) (* 4 (* ?x582 ?x582 ?x582 ?x9882 ?x9882 r q q q)) ?x9783 (* (- 4) (* d00 r00 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q)) (* 8 (* r00 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q)) ?x6901 ?x15724 (* (- 2) (* d00 q00 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q)) (* 8 (* r00 ?x582 ?x582 ?x9882 r q q q)) ?x14152 (* (- 8) (* ?x582 ?x582 ?x9882 ?x9882 ?x9882 ?x9882 r q q)) ?x12504 (* 4 (* ?x582 ?x582 ?x582 ?x9882 ?x9882 ?x9882 ?x9882 r q q)) ?x2160 (* (- 2) (* d00 q00 ?x582 ?x582 ?x9882 r q q q)) (* (- 4) (* ?x582 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r r q q)) (* 4 (* d00 x00 ?x582 ?x582 ?x9882 ?x9882 ?x9882 r q q)) ?x15616 (* (- 4) (* ?x582 ?x582 ?x582 ?x9882 r r q q q)))))
 (let ((?x432 (* (- 2) d)))
 (let ((?x9995 (+ (- 4) ?x58 ?x381 q ?x432)))
 (let ((?x1071 (+ (- 8) q)))
 (let ((?x14843 (* (- 2) (* d00 q00 ?x1071 ?x1071 ?x1071 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x14763 (* (- 1) (* d00 d00 q00 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r))))
 (let ((?x14734 (* (- 4) (* ?x1071 ?x1071 ?x1071 ?x582 ?x9995 ?x9995 ?x9995 r r r r))))
 (let ((?x14685 (* 4 (* d00 r00 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r))))
 (let ((?x1532 (* 2 (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x4910 (* (- 4) (* d00 r00 ?x1071 ?x1071 ?x1071 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x639 (* 4 (* ?x1071 ?x1071 ?x1071 ?x582 ?x9995 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x10423 (* (- 4) (* d00 x00 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r))))
 (let ((?x10439 (* (- 2) (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r))))
 (let ((?x10527 (* (- 4) (* ?x1071 ?x582 ?x582 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x1375 (* (- 1) (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x15621 (* 2 (* d00 q00 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r))))
 (let ((?x10199 (* (- 1) (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r))))
 (let ((?x10121 (* 4 (* ?x1071 ?x582 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r r))))
 (let ((?x10036 (* 4 (* d00 x00 ?x1071 ?x1071 ?x1071 ?x9995 ?x9995 ?x9995 r r r))))
 (let ((?x14864 (+ ?x10036 (* d00 d00 q00 ?x1071 ?x1071 ?x1071 ?x9995 ?x9995 ?x9995 r r r) (* (- 8) (* ?x1071 ?x1071 ?x1071 ?x9995 ?x9995 ?x9995 ?x9995 r r r)) ?x10121 ?x10199 (* 2 (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r)) (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r) (* (- 1) (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x9995 r)) (* (- 4) (* d00 r00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 r)) (* 4 (* d00 x00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 r)) (* (- 8) (* r00 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 r r r)) (* 8 (* r00 ?x1071 ?x1071 ?x1071 ?x9995 ?x9995 ?x9995 r r r)) (* (- 8) (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 r)) ?x15621 (* d00 d00 q00 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r) ?x1375 (* 2 (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x9995 r)) ?x10527 ?x10439 ?x10423 (* 8 (* ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r r r)) (* d00 d00 q00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 r) (* 4 (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 r)) ?x639 (* (- 4) (* d00 r00 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r)) (* 8 (* r00 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r)) ?x4910 ?x1532 (* (- 2) (* d00 q00 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r)) (* 8 (* r00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 r)) ?x14685 (* (- 8) (* ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 ?x9995 r)) ?x14734 (* 4 (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 ?x9995 ?x9995 r)) ?x14763 (* (- 2) (* d00 q00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x9995 r)) (* (- 4) (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r r)) (* 4 (* d00 x00 ?x1071 ?x1071 ?x582 ?x582 ?x9995 ?x9995 ?x9995 r)) ?x14843 (* (- 4) (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x9995 r r)))))
 (let ((?x916 (* (- 1) d)))
 (let ((?x8915 (+ (- 2) ?x58 ?x381 q ?x916)))
 (let ((?x754 (+ (- 4) q)))
 (let ((?x1141 (* (- 2) (* d00 q00 ?x754 ?x754 ?x754 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x10427 (* (- 1) (* d00 d00 q00 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r))))
 (let ((?x10436 (* (- 4) (* ?x754 ?x754 ?x754 ?x582 ?x8915 ?x8915 ?x8915 r r r r))))
 (let ((?x699 (* 4 (* d00 r00 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r))))
 (let ((?x15239 (* 2 (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x874 (* (- 4) (* d00 r00 ?x754 ?x754 ?x754 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x15591 (* 4 (* ?x754 ?x754 ?x754 ?x582 ?x8915 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x2167 (* (- 4) (* d00 x00 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r))))
 (let ((?x790 (* (- 2) (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r))))
 (let ((?x12303 (* (- 4) (* ?x754 ?x582 ?x582 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x1644 (* (- 1) (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x706 (* 2 (* d00 q00 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r))))
 (let ((?x8993 (* (- 1) (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r))))
 (let ((?x9934 (* 4 (* ?x754 ?x582 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r r))))
 (let ((?x9875 (* 4 (* d00 x00 ?x754 ?x754 ?x754 ?x8915 ?x8915 ?x8915 r r r))))
 (let ((?x448 (+ ?x9875 (* d00 d00 q00 ?x754 ?x754 ?x754 ?x8915 ?x8915 ?x8915 r r r) (* (- 8) (* ?x754 ?x754 ?x754 ?x8915 ?x8915 ?x8915 ?x8915 r r r)) ?x9934 ?x8993 (* 2 (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r)) (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r) (* (- 1) (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x8915 r)) (* (- 4) (* d00 r00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 r)) (* 4 (* d00 x00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 r)) (* (- 8) (* r00 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 r r r)) (* 8 (* r00 ?x754 ?x754 ?x754 ?x8915 ?x8915 ?x8915 r r r)) (* (- 8) (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 r)) ?x706 (* d00 d00 q00 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r) ?x1644 (* 2 (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x8915 r)) ?x12303 ?x790 ?x2167 (* 8 (* ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r r r)) (* d00 d00 q00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 r) (* 4 (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 r)) ?x15591 (* (- 4) (* d00 r00 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r)) (* 8 (* r00 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r)) ?x874 ?x15239 (* (- 2) (* d00 q00 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r)) (* 8 (* r00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 r)) ?x699 (* (- 8) (* ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 ?x8915 r)) ?x10436 (* 4 (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 ?x8915 ?x8915 r)) ?x10427 (* (- 2) (* d00 q00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x8915 r)) (* (- 4) (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r r)) (* 4 (* d00 x00 ?x754 ?x754 ?x582 ?x582 ?x8915 ?x8915 ?x8915 r)) ?x1141 (* (- 4) (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x8915 r r)))))
 (let ((?x13596 (+ 2 ?x58 ?x381 q d)))
 (let ((?x376 (+ 4 q)))
 (let ((?x2567 (* (- 2) (* d00 q00 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x10291 (* (- 1) (* d00 d00 q00 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 r r r))))
 (let ((?x10255 (* (- 4) (* ?x582 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r r))))
 (let ((?x9766 (* 4 (* d00 r00 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 r r r))))
 (let ((?x9136 (* 2 (* ?x582 ?x376 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x10148 (* (- 4) (* d00 r00 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x10087 (* 4 (* ?x582 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x10055 (* (- 4) (* d00 x00 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 r r r))))
 (let ((?x10029 (* (- 2) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 r r r))))
 (let ((?x9009 (* (- 4) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x9967 (* (- 1) (* ?x582 ?x582 ?x376 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x9947 (* 2 (* d00 q00 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 r r r))))
 (let ((?x8887 (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r))))
 (let ((?x11139 (* 4 (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 r r r r))))
 (let ((?x8083 (* 4 (* d00 x00 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r))))
 (let ((?x6082 (+ ?x8083 (* d00 d00 q00 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r) (* (- 8) (* ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 ?x13596 r r r)) ?x11139 ?x8887 (* 2 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r)) (* ?x582 ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 r r r) (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x376 ?x13596 r)) (* (- 4) (* d00 r00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 r)) (* 4 (* d00 x00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 r)) (* (- 8) (* r00 ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 r r r)) (* 8 (* r00 ?x376 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r r)) (* (- 8) (* ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 ?x13596 r)) ?x9947 (* d00 d00 q00 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r) ?x9967 (* 2 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x376 ?x13596 r)) ?x9009 ?x10029 ?x10055 (* 8 (* ?x582 ?x582 ?x582 ?x376 ?x13596 ?x13596 ?x13596 r r r)) (* d00 d00 q00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 r) (* 4 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 ?x13596 r)) ?x10087 (* (- 4) (* d00 r00 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r)) (* 8 (* r00 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r)) ?x10148 ?x9136 (* (- 2) (* d00 q00 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r)) (* 8 (* r00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 r)) ?x9766 (* (- 8) (* ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 ?x13596 r)) ?x10255 (* 4 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 ?x13596 r)) ?x10291 (* (- 2) (* d00 q00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 r)) (* (- 4) (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r r)) (* 4 (* d00 x00 ?x582 ?x582 ?x376 ?x376 ?x13596 ?x13596 ?x13596 r)) ?x2567 (* (- 4) (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x13596 r r)))))
 (let (($x9037 (or (not (= ?x6082 0)) (not (= ?x448 0)) (not (= ?x14864 0)) (not (= ?x4492 0)))))
 (let ((?x13933 (* 4 (* d00 r00))))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x44 (* d d q)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x30 (* 8 r)))
 (let ((?x9721 (+ ?x30 ?x379 (* 4 (* x d)) ?x411 ?x427 ?x44 (* (- 2) (* d q)) ?x477 (* (- 4) (* d r)) ?x13933)))
 (let (($x10025 (and (= ?x9721 0) $x9037)))
 (let ((?x294 (- (- (+ (- ?x58 x) q) (* 2 d)) 4)))
 (let ((?x291 (- q 8)))
 (let ((?x66 (+ d 2)))
 (let ((?x297 (+ (* 4 d00 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r x00) (* d00 d00 ?x291 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r r r))))
 (let ((?x299 (- ?x297 (* 8 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r r r))))
 (let ((?x301 (+ ?x299 (* 4 ?x66 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 r r r r))))
 (let ((?x303 (- ?x301 (* ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r))))
 (let ((?x306 (+ ?x303 (* 2 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 r r r))))
 (let ((?x310 (- (- ?x306 (* ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 r)) (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x291 ?x294 r00 r))))
 (let ((?x314 (- (+ ?x310 (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x291 ?x294 r x00)) (* 8 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 r00 r r r))))
 (let ((?x316 (+ ?x314 (* 8 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r r r))))
 (let ((?x321 (+ (- ?x316 (* 8 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 r)) (* 2 ?x66 ?x66 ?x66 d00 ?x291 q00 ?x294 ?x294 r r r) (* ?x66 ?x66 d00 d00 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r))))
 (let ((?x323 (- ?x321 (* ?x66 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r))))
 (let ((?x329 (- (+ ?x323 (* 2 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 r)) (* 4 ?x66 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 ?x294 r r r))))
 (let ((?x330 (- ?x329 (* 2 ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 r r r))))
 (let ((?x331 (- ?x330 (* 4 ?x66 ?x66 ?x66 d00 ?x291 ?x294 ?x294 r r r x00))))
 (let ((?x336 (+ ?x331 (* 8 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 ?x294 r r r) (* ?x66 ?x66 d00 d00 ?x291 ?x291 ?x291 q00 ?x294 r) (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 r) (* 4 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r r r))))
 (let ((?x338 (- ?x336 (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r))))
 (let ((?x342 (- (+ ?x338 (* 8 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r)) (* 4 d00 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r r r))))
 (let ((?x344 (+ ?x342 (* 2 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r))))
 (let ((?x346 (- ?x344 (* 2 ?x66 ?x66 d00 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r))))
 (let ((?x349 (+ ?x346 (* 8 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 r00 r) (* 4 ?x66 ?x66 ?x66 d00 ?x291 ?x294 ?x294 r00 r r r))))
 (let ((?x353 (- (- ?x349 (* 8 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r)) (* 4 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r r))))
 (let ((?x355 (+ ?x353 (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r))))
 (let ((?x359 (- ?x355 (* ?x66 ?x66 ?x66 d00 d00 ?x291 q00 ?x294 ?x294 r r r))))
 (let ((?x361 (- (- ?x359 (* 2 ?x66 ?x66 d00 ?x291 ?x291 ?x291 q00 ?x294 r)) (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 r r))))
 (let ((?x363 (+ ?x361 (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x294 ?x294 ?x294 r x00))))
 (let ((?x366 (- ?x363 (* 2 d00 ?x291 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r r r))))
 (let (($x368 (= (- ?x366 (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 r r)) 0)))
 (let ((?x215 (- (- (+ (- ?x58 x) q) d) 2)))
 (let ((?x213 (- q 4)))
 (let ((?x218 (+ (* 4 d00 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r x00) (* d00 d00 ?x213 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r r r))))
 (let ((?x220 (- ?x218 (* 8 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r r r))))
 (let ((?x222 (+ ?x220 (* 4 ?x66 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 r r r r))))
 (let ((?x224 (- ?x222 (* ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r))))
 (let ((?x227 (+ ?x224 (* 2 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 r r r))))
 (let ((?x231 (- (- ?x227 (* ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 r)) (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x213 ?x215 r00 r))))
 (let ((?x235 (- (+ ?x231 (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x213 ?x215 r x00)) (* 8 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 r00 r r r))))
 (let ((?x237 (+ ?x235 (* 8 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r r r))))
 (let ((?x242 (+ (- ?x237 (* 8 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 r)) (* 2 ?x66 ?x66 ?x66 d00 ?x213 q00 ?x215 ?x215 r r r) (* ?x66 ?x66 d00 d00 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r))))
 (let ((?x244 (- ?x242 (* ?x66 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r))))
 (let ((?x250 (- (+ ?x244 (* 2 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 r)) (* 4 ?x66 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 ?x215 r r r))))
 (let ((?x251 (- ?x250 (* 2 ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 r r r))))
 (let ((?x252 (- ?x251 (* 4 ?x66 ?x66 ?x66 d00 ?x213 ?x215 ?x215 r r r x00))))
 (let ((?x257 (+ ?x252 (* 8 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 ?x215 r r r) (* ?x66 ?x66 d00 d00 ?x213 ?x213 ?x213 q00 ?x215 r) (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 r) (* 4 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r r r))))
 (let ((?x259 (- ?x257 (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r))))
 (let ((?x263 (- (+ ?x259 (* 8 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r)) (* 4 d00 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r r r))))
 (let ((?x265 (+ ?x263 (* 2 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r))))
 (let ((?x267 (- ?x265 (* 2 ?x66 ?x66 d00 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r))))
 (let ((?x270 (+ ?x267 (* 8 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 r00 r) (* 4 ?x66 ?x66 ?x66 d00 ?x213 ?x215 ?x215 r00 r r r))))
 (let ((?x274 (- (- ?x270 (* 8 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r)) (* 4 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r r))))
 (let ((?x276 (+ ?x274 (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r))))
 (let ((?x280 (- ?x276 (* ?x66 ?x66 ?x66 d00 d00 ?x213 q00 ?x215 ?x215 r r r))))
 (let ((?x282 (- (- ?x280 (* 2 ?x66 ?x66 d00 ?x213 ?x213 ?x213 q00 ?x215 r)) (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 r r))))
 (let ((?x284 (+ ?x282 (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x215 ?x215 ?x215 r x00))))
 (let ((?x287 (- ?x284 (* 2 d00 ?x213 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r r r))))
 (let (($x289 (= (- ?x287 (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 r r)) 0)))
 (let ((?x59 (- ?x58 x)))
 (let ((?x137 (+ ?x59 q)))
 (let ((?x140 (+ (* 4 d00 q q q ?x137 ?x137 ?x137 r r r x00) (* d00 d00 q q q q00 ?x137 ?x137 ?x137 r r r))))
 (let ((?x142 (- ?x140 (* 8 q q q ?x137 ?x137 ?x137 ?x137 r r r))))
 (let ((?x144 (+ ?x142 (* 4 ?x66 ?x66 ?x66 ?x66 q ?x137 ?x137 r r r r))))
 (let ((?x146 (- ?x144 (* ?x66 ?x66 ?x66 ?x66 q q q ?x137 ?x137 ?x137 r))))
 (let ((?x149 (+ ?x146 (* 2 ?x66 ?x66 ?x66 q q q ?x137 ?x137 ?x137 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 q q ?x137 ?x137 r r r))))
 (let ((?x153 (- (- ?x149 (* ?x66 ?x66 ?x66 ?x66 q q q q ?x137 r)) (* 4 ?x66 ?x66 d00 q q q ?x137 r00 r))))
 (let ((?x157 (- (+ ?x153 (* 4 ?x66 ?x66 d00 q q q ?x137 r x00)) (* 8 ?x66 ?x66 ?x66 q ?x137 ?x137 r00 r r r))))
 (let ((?x159 (+ ?x157 (* 8 q q q ?x137 ?x137 ?x137 r00 r r r))))
 (let ((?x164 (+ (- ?x159 (* 8 ?x66 ?x66 q q q ?x137 ?x137 r)) (* 2 ?x66 ?x66 ?x66 d00 q q00 ?x137 ?x137 r r r) (* ?x66 ?x66 d00 d00 q q q00 ?x137 ?x137 ?x137 r))))
 (let ((?x166 (- ?x164 (* ?x66 ?x66 q q q q ?x137 ?x137 ?x137 r r r))))
 (let ((?x172 (- (+ ?x166 (* 2 ?x66 ?x66 ?x66 q q q q ?x137 r)) (* 4 ?x66 ?x66 ?x66 ?x66 q ?x137 ?x137 ?x137 r r r))))
 (let ((?x173 (- ?x172 (* 2 ?x66 ?x66 ?x66 ?x66 q q ?x137 ?x137 r r r))))
 (let ((?x174 (- ?x173 (* 4 ?x66 ?x66 ?x66 d00 q ?x137 ?x137 r r r x00))))
 (let ((?x179 (+ ?x174 (* 8 ?x66 ?x66 ?x66 q ?x137 ?x137 ?x137 r r r) (* ?x66 ?x66 d00 d00 q q q q00 ?x137 r) (* 4 ?x66 ?x66 ?x66 q q q ?x137 ?x137 r) (* 4 ?x66 q q q ?x137 ?x137 ?x137 ?x137 r r r))))
 (let ((?x181 (- ?x179 (* 4 ?x66 ?x66 d00 q q ?x137 ?x137 ?x137 r00 r))))
 (let ((?x185 (- (+ ?x181 (* 8 ?x66 ?x66 q q ?x137 ?x137 ?x137 r00 r)) (* 4 d00 q q q ?x137 ?x137 ?x137 r00 r r r))))
 (let ((?x187 (+ ?x185 (* 2 ?x66 q q q q ?x137 ?x137 ?x137 r r r))))
 (let ((?x189 (- ?x187 (* 2 ?x66 ?x66 d00 q q q00 ?x137 ?x137 ?x137 r))))
 (let ((?x192 (+ ?x189 (* 8 ?x66 ?x66 q q q ?x137 r00 r) (* 4 ?x66 ?x66 ?x66 d00 q ?x137 ?x137 r00 r r r))))
 (let ((?x196 (- (- ?x192 (* 8 ?x66 ?x66 q q ?x137 ?x137 ?x137 ?x137 r)) (* 4 ?x66 q q q ?x137 ?x137 ?x137 r r r r))))
 (let ((?x198 (+ ?x196 (* 4 ?x66 ?x66 ?x66 q q ?x137 ?x137 ?x137 ?x137 r))))
 (let ((?x202 (- ?x198 (* ?x66 ?x66 ?x66 d00 d00 q q00 ?x137 ?x137 r r r))))
 (let ((?x204 (- (- ?x202 (* 2 ?x66 ?x66 d00 q q q q00 ?x137 r)) (* 4 ?x66 ?x66 ?x66 q q ?x137 ?x137 ?x137 r r))))
 (let ((?x206 (+ ?x204 (* 4 ?x66 ?x66 d00 q q ?x137 ?x137 ?x137 r x00))))
 (let ((?x209 (- ?x206 (* 2 d00 q q q q00 ?x137 ?x137 ?x137 r r r))))
 (let (($x211 (= (- ?x209 (* 4 ?x66 ?x66 ?x66 q q q ?x137 r r)) 0)))
 (let ((?x60 (+ ?x59 q d 2)))
 (let ((?x57 (+ q 4)))
 (let ((?x63 (+ (* 4 d00 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r x00) (* d00 d00 ?x57 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r r r))))
 (let ((?x65 (- ?x63 (* 8 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r r r))))
 (let ((?x68 (+ ?x65 (* 4 ?x66 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 r r r r))))
 (let ((?x70 (- ?x68 (* ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r))))
 (let ((?x73 (+ ?x70 (* 2 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 r r r))))
 (let ((?x77 (- (- ?x73 (* ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 r)) (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x57 ?x60 r00 r))))
 (let ((?x81 (- (+ ?x77 (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x57 ?x60 r x00)) (* 8 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 r00 r r r))))
 (let ((?x83 (+ ?x81 (* 8 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r r r))))
 (let ((?x88 (+ (- ?x83 (* 8 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 r)) (* 2 ?x66 ?x66 ?x66 d00 ?x57 q00 ?x60 ?x60 r r r) (* ?x66 ?x66 d00 d00 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r))))
 (let ((?x90 (- ?x88 (* ?x66 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r))))
 (let ((?x96 (- (+ ?x90 (* 2 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 r)) (* 4 ?x66 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 ?x60 r r r))))
 (let ((?x97 (- ?x96 (* 2 ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 r r r))))
 (let ((?x98 (- ?x97 (* 4 ?x66 ?x66 ?x66 d00 ?x57 ?x60 ?x60 r r r x00))))
 (let ((?x103 (+ ?x98 (* 8 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 ?x60 r r r) (* ?x66 ?x66 d00 d00 ?x57 ?x57 ?x57 q00 ?x60 r) (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 r) (* 4 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r r r))))
 (let ((?x105 (- ?x103 (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r))))
 (let ((?x109 (- (+ ?x105 (* 8 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r)) (* 4 d00 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r r r))))
 (let ((?x111 (+ ?x109 (* 2 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r))))
 (let ((?x113 (- ?x111 (* 2 ?x66 ?x66 d00 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r))))
 (let ((?x116 (+ ?x113 (* 8 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 r00 r) (* 4 ?x66 ?x66 ?x66 d00 ?x57 ?x60 ?x60 r00 r r r))))
 (let ((?x120 (- (- ?x116 (* 8 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r)) (* 4 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r r))))
 (let ((?x122 (+ ?x120 (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r))))
 (let ((?x126 (- ?x122 (* ?x66 ?x66 ?x66 d00 d00 ?x57 q00 ?x60 ?x60 r r r))))
 (let ((?x128 (- (- ?x126 (* 2 ?x66 ?x66 d00 ?x57 ?x57 ?x57 q00 ?x60 r)) (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 r r))))
 (let ((?x130 (+ ?x128 (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x60 ?x60 ?x60 r x00))))
 (let ((?x133 (- ?x130 (* 2 d00 ?x57 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r r r))))
 (let (($x135 (= (- ?x133 (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 r r)) 0)))
 (let ((?x42 (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) (* 4 d00 x00))))
 (let ((?x50 (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) (* 2 d00 q00))))
 (let (($x371 (and (= (+ (- ?x50 (* 4 d r)) (* 4 d00 r00)) 0) (or (not $x135) (not $x211) (not $x289) (not $x368)))))
 (rewrite (= $x371 $x10025))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x8489 (trans (quant-intro (proof-bind ?x9881) (= $x372 $x1180)) (elim-unused (= $x1180 $x10356)) (= $x372 $x10356))))
 (let ((@x27 (asserted $x372)))
 (let ((@x10186 (mp (mp @x27 @x8489 $x10356) (quant-intro (proof-bind ?x9147) (= $x10356 $x9762)) $x9762)))
 (let ((@x14976 (mp (mp @x10186 (rewrite (= $x9762 $x9762)) $x9762) (quant-intro (proof-bind ?x560) (= $x9762 $x13302)) $x13302)))
 (let ((@x7393 (mp (mp~ @x14976 (sk (~ $x13302 $x8891)) $x8891) (rewrite (= $x8891 $x1509)) $x1509)))
 (let ((@x7394 (and-elim @x7393 $x10234)))
 (let ((@x14072 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x10234) $x9430)) @x7394 $x9430)))
 (let (($x12639 (>= ?x14722 0)))
 (let ((@x5167 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x10234) $x12639)) @x7394 $x12639)))
 (let (($x10348 (not (<= ?x15508 0))))
 (let (($x8385 (<= ?x7710 0)))
 (let (($x8462 (>= ?x7710 0)))
 (let ((@x15302 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x9661 (not $x8385) (not $x8462))) (lemma ((_ th-lemma arith) (hypothesis (not $x8462)) @x5167 @x14072 false) $x8462) (lemma ((_ th-lemma arith) (hypothesis (not $x8385)) @x5167 @x14072 false) $x8385) $x9661)))
 (let (($x3022 (>= ?x11263 0)))
 (let (($x15106 (<= ?x11263 0)))
 (let ((@x5006 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x11267 (not $x15106) (not $x3022))) (lemma ((_ th-lemma arith) (hypothesis (not $x15106)) @x5167 @x14072 false) $x15106) (lemma ((_ th-lemma arith) (hypothesis (not $x3022)) @x5167 @x14072 false) $x3022) $x11267)))
 (let (($x2456 (>= ?x4084 0)))
 (let (($x4885 (<= ?x4084 0)))
 (let ((@x6350 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x9806 (not $x4885) (not $x2456))) (lemma ((_ th-lemma arith) (hypothesis (not $x4885)) @x5167 @x14072 false) $x4885) (lemma ((_ th-lemma arith) (hypothesis (not $x2456)) @x5167 @x14072 false) $x2456) $x9806)))
 (let ((@x1806 (unit-resolution (unit-resolution (and-elim @x7393 $x8366) @x6350 @x5006 (or $x7361 $x15566)) @x15302 $x15566)))
 (let (($x1637 (>= ?x15508 0)))
 (let ((@x13153 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x9684 $x10348 (not $x1637))) (lemma ((_ th-lemma arith) (hypothesis (not $x1637)) @x5167 @x14072 false) $x1637) @x1806 $x10348)))
 ((_ th-lemma arith) @x13153 @x5167 @x14072 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        64
 :arith-assert-upper        11
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-gcd-tests           10
 :arith-grobner             8
 :arith-max-min             12658
 :arith-nonlinear-bounds    54
 :arith-nonlinear-horner    70
 :arith-num-rows            13
 :arith-patches             10
 :arith-patches_succ        10
 :arith-pivots              5
 :arith-tableau-max-columns 505
 :arith-tableau-max-rows    13
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              14
 :max-memory                24.14
 :memory                    20.69
 :mk-bool-var               15
 :mk-clause                 20
 :num-allocs                1209129925
 :num-checks                1
 :propagations              36
 :rlimit-count              783139
 :time                      0.69
 :total-time                0.74)
