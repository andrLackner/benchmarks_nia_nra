unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x148 (+ (* 3 (* n!0 n!0)) (* (- 1) k!2) (* 3 n!0))))
 (let (($x380 (<= ?x148 (- 1))))
 (let (($x233 (= ?x148 (- 1))))
 (let ((?x285 (+ c!3 k!2)))
 (let ((?x179 (+ k!2 m!1)))
 (let ((?x143 (+ 6 m!1)))
 (let ((?x291 (+ 1 n!0)))
 (let ((?x498 (* ?x291 ?x291 ?x291 ?x143 ?x143 ?x143 ?x179 ?x285)))
 (let ((?x491 (* ?x291 ?x143 ?x143 ?x143 ?x179 ?x179 ?x179)))
 (let ((?x379 (* ?x291 ?x291 ?x143 ?x143 ?x143 ?x179 ?x285)))
 (let ((?x347 (* ?x291 ?x143 ?x143 ?x179 ?x179 ?x179 ?x285 ?x285)))
 (let ((?x174 (* ?x291 ?x291 ?x143 ?x143 ?x179 ?x179 ?x179 ?x179 ?x285 ?x285)))
 (let ((?x243 (+ (* 3 (* ?x291 ?x143 ?x143 ?x143 ?x179 ?x179 ?x285)) (* 3 (* ?x291 ?x291 ?x143 ?x143 ?x143 ?x285 ?x285)) (* (- 2) (* ?x291 ?x291 ?x143 ?x143 ?x143 ?x179 ?x179)) (* (- 3) (* ?x291 ?x143 ?x143 ?x179 ?x179 ?x179 ?x285 ?x285 ?x285)) ?x174 (* (- 1) (* ?x291 ?x143 ?x143 ?x179 ?x179 ?x179 ?x179 ?x285 ?x285)) (* (- 1) (* ?x291 ?x143 ?x143 ?x143 ?x179 ?x179)) (* (- 1) (* ?x291 ?x291 ?x143 ?x143 ?x143 ?x285)) (* (- 2) (* ?x291 ?x291 ?x291 ?x143 ?x143 ?x143 ?x285)) (* (- 1) (* ?x291 ?x291 ?x143 ?x143 ?x143 ?x179 ?x179 ?x179)) (* 2 (* ?x291 ?x291 ?x143 ?x143 ?x179 ?x179 ?x179 ?x285 ?x285)) ?x347 ?x379 ?x491 (* (- 1) ?x498))))
 (let (($x140 (= ?x243 0)))
 (let (($x305 (not $x140)))
 (let ((?x486 (* (- 2) n!0)))
 (let ((?x450 (* (- 1) (* k!2 n!0))))
 (let ((?x302 (* 3 c!3)))
 (let ((?x240 (+ ?x302 ?x450 k!2 ?x486)))
 (let (($x260 (= ?x240 1)))
 (let ((?x142 (* (- 9) n!0)))
 (let ((?x128 (* 5 k!2)))
 (let ((?x125 (* (- 1) (* k!2 k!2))))
 (let ((?x122 (* 9 (* c!3 n!0))))
 (let ((?x424 (* 18 c!3)))
 (let ((?x493 (+ m!1 (* (- 6) n!0))))
 (let (($x120 (= ?x493 6)))
 (let (($x458 (and $x120 (= (+ ?x424 ?x122 ?x125 ?x128 ?x142) 4) $x260 $x233 $x305)))
 (let ((?x258 (* ?x291 ?x143 ?x143 ?x143 ?x179 ?x179)))
 (let ((?x224 (* ?x291 ?x143 ?x143 ?x179 ?x179 ?x179 ?x179 ?x285 ?x285)))
 (let ((?x295 (* ?x291 ?x291 ?x143 ?x143 ?x143 ?x179 ?x179 ?x179)))
 (let ((?x283 (* ?x291 ?x291 ?x143 ?x143 ?x143 ?x285)))
 (let ((?x225 (+ ?x283 ?x295 (* (- 1) ?x491) (* (- 3) (* ?x291 ?x143 ?x143 ?x143 ?x179 ?x179 ?x285)) ?x224 (* (- 1) ?x347) (* 2 (* ?x291 ?x291 ?x291 ?x143 ?x143 ?x143 ?x285)) (* 3 (* ?x291 ?x143 ?x143 ?x179 ?x179 ?x179 ?x285 ?x285 ?x285)) (* (- 1) ?x174) (* (- 3) (* ?x291 ?x291 ?x143 ?x143 ?x143 ?x285 ?x285)) (* 2 (* ?x291 ?x291 ?x143 ?x143 ?x143 ?x179 ?x179)) ?x498 ?x258 (* (- 2) (* ?x291 ?x291 ?x143 ?x143 ?x179 ?x179 ?x179 ?x285 ?x285)) (* (- 1) ?x379))))
 (let (($x476 (and $x120 (= (+ ?x424 ?x128 ?x142 ?x125 ?x122) 4) (= (+ ?x302 k!2 ?x486 ?x450) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x225 0)))))
 (let (($x282 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x615 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)))
 (let ((?x437 (* (- 1) ?x615)))
 (let ((?x608 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x518 (* (- 2) ?x608)))
 (let ((?x510 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)))
 (let ((?x503 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)))
 (let ((?x475 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)))
 (let ((?x355 (* 2 ?x475)))
 (let ((?x454 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x373 (* (- 3) ?x454)))
 (let ((?x412 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x464 (* (- 1) ?x412)))
 (let ((?x354 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x474 (* 3 ?x354)))
 (let ((?x216 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x217 (* 2 ?x216)))
 (let ((?x211 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x191 (* (- 1) ?x211)))
 (let ((?x208 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x186 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x187 (* (- 3) ?x186)))
 (let ((?x129 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)))
 (let ((?x107 (* (- 1) ?x129)))
 (let ((?x117 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)))
 (let ((?x116 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x406 (+ ?x116 ?x117 ?x107 ?x187 ?x208 ?x191 ?x217 ?x474 ?x464 ?x373 ?x355 ?x503 ?x510 ?x518 ?x437)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 (* c n))) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 $x219 $x271 $x309 (not (= ?x406 0)))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x607 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x510 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x412 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x615 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)))
 (let ((?x211 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x129 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)))
 (let ((?x306 (+ (* 3 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x69)) (* (- 1) (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 2) (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)) (* (- 1) (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)) (* (- 1) (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)) ?x129 ?x211 (* (- 3) (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 3 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)) (* (- 2) (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)) (* 2 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)) ?x615 ?x412 (* (- 1) (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)) (* (- 1) ?x510))))
 (let (($x153 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x495 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x495 $x153 (not (= ?x306 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x286 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x615 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)))
 (let ((?x437 (* (- 1) ?x615)))
 (let ((?x608 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x518 (* (- 2) ?x608)))
 (let ((?x510 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)))
 (let ((?x503 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)))
 (let ((?x475 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)))
 (let ((?x355 (* 2 ?x475)))
 (let ((?x454 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x373 (* (- 3) ?x454)))
 (let ((?x412 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x464 (* (- 1) ?x412)))
 (let ((?x354 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x474 (* 3 ?x354)))
 (let ((?x216 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x217 (* 2 ?x216)))
 (let ((?x211 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x191 (* (- 1) ?x211)))
 (let ((?x208 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x186 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x187 (* (- 3) ?x186)))
 (let ((?x129 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)))
 (let ((?x107 (* (- 1) ?x129)))
 (let ((?x117 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)))
 (let ((?x116 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x406 (+ ?x116 ?x117 ?x107 ?x187 ?x208 ?x191 ?x217 ?x474 ?x464 ?x373 ?x355 ?x503 ?x510 ?x518 ?x437)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 (* c n))) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x590 (and $x135 $x219 $x271 $x309 (not (= ?x406 0)))))
 (let ((?x306 (+ (* 3 ?x186) (* (- 1) ?x208) (* (- 2) ?x216) (* (- 1) ?x117) (* (- 1) ?x116) ?x129 ?x211 (* (- 3) ?x354) (* 3 ?x454) (* (- 2) ?x475) (* 2 ?x608) ?x615 ?x412 (* (- 1) ?x503) (* (- 1) ?x510))))
 (let (($x153 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x495 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x308 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x495 $x153 (not (= ?x306 0)))))
 (rewrite (= $x308 $x590)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x138 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x510 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x503 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)))
 (let ((?x412 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x464 (* (- 1) ?x412)))
 (let ((?x615 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)))
 (let ((?x437 (* (- 1) ?x615)))
 (let ((?x608 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x518 (* (- 2) ?x608)))
 (let ((?x475 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)))
 (let ((?x355 (* 2 ?x475)))
 (let ((?x454 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x373 (* (- 3) ?x454)))
 (let ((?x354 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x474 (* 3 ?x354)))
 (let ((?x211 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x191 (* (- 1) ?x211)))
 (let ((?x129 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)))
 (let ((?x107 (* (- 1) ?x129)))
 (let ((?x116 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x117 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)))
 (let ((?x216 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x217 (* 2 ?x216)))
 (let ((?x208 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x186 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x187 (* (- 3) ?x186)))
 (let ((?x532 (+ ?x187 ?x208 ?x217 ?x117 ?x116 ?x107 ?x191 ?x474 ?x373 ?x355 ?x518 ?x437 ?x464 ?x503 ?x510)))
 (let (($x153 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x245 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x400 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 (= ?x400 (- 4)) $x245 $x153 (not (= ?x532 0))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x110 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x510 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x412 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x615 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)))
 (let ((?x211 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x129 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)))
 (let ((?x306 (+ (* 3 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x69)) (* (- 1) (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 2) (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)) (* (- 1) (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)) (* (- 1) (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)) ?x129 ?x211 (* (- 3) (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 3 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)) (* (- 2) (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)) (* 2 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)) ?x615 ?x412 (* (- 1) (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)) (* (- 1) ?x510))))
 (let (($x153 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x495 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x308 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x495 $x153 (not (= ?x306 0)))))
 (let ((?x503 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)))
 (let ((?x464 (* (- 1) ?x412)))
 (let ((?x437 (* (- 1) ?x615)))
 (let ((?x608 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x518 (* (- 2) ?x608)))
 (let ((?x475 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)))
 (let ((?x355 (* 2 ?x475)))
 (let ((?x454 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x373 (* (- 3) ?x454)))
 (let ((?x354 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x474 (* 3 ?x354)))
 (let ((?x191 (* (- 1) ?x211)))
 (let ((?x107 (* (- 1) ?x129)))
 (let ((?x116 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x117 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)))
 (let ((?x216 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x217 (* 2 ?x216)))
 (let ((?x208 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x186 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x187 (* (- 3) ?x186)))
 (let ((?x532 (+ ?x187 ?x208 ?x217 ?x117 ?x116 ?x107 ?x191 ?x474 ?x373 ?x355 ?x518 ?x437 ?x464 ?x503 ?x510)))
 (let (($x245 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x400 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x115 (and $x135 (= ?x400 (- 4)) $x245 $x153 (not (= ?x532 0)))))
 (rewrite (= $x115 $x308)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x102 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x78 (+ (* (- 3) ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72) (* 2 ?x69 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) (* ?x69 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x82 (- (- ?x78 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72))))
 (let ((?x86 (- (+ ?x82 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72)) (* 3 ?x69 ?x69 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x92 (- (+ ?x86 (* 2 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)) (* 2 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x94 (- (- ?x92 (* ?x69 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x97 (+ ?x94 (* ?x69 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72) (* ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x97 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x113 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x510 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x503 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)))
 (let ((?x412 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x464 (* (- 1) ?x412)))
 (let ((?x615 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x69)))
 (let ((?x437 (* (- 1) ?x615)))
 (let ((?x608 (* ?x322 ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x518 (* (- 2) ?x608)))
 (let ((?x475 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70)))
 (let ((?x355 (* 2 ?x475)))
 (let ((?x454 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x373 (* (- 3) ?x454)))
 (let ((?x354 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x474 (* 3 ?x354)))
 (let ((?x211 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x191 (* (- 1) ?x211)))
 (let ((?x129 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)))
 (let ((?x107 (* (- 1) ?x129)))
 (let ((?x116 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x117 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x70)))
 (let ((?x216 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x217 (* 2 ?x216)))
 (let ((?x208 (* ?x322 ?x319 ?x319 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x186 (* ?x322 ?x319 ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x187 (* (- 3) ?x186)))
 (let ((?x532 (+ ?x187 ?x208 ?x217 ?x117 ?x116 ?x107 ?x191 ?x474 ?x373 ?x355 ?x518 ?x437 ?x464 ?x503 ?x510)))
 (let (($x153 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x245 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x400 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x115 (and $x135 (= ?x400 (- 4)) $x245 $x153 (not (= ?x532 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x78 (+ (* (- 3) ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72) (* 2 ?x69 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) (* ?x69 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x82 (- (- ?x78 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72))))
 (let ((?x86 (- (+ ?x82 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72)) (* 3 ?x69 ?x69 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x92 (- (+ ?x86 (* 2 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)) (* 2 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x94 (- (- ?x92 (* ?x69 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x97 (+ ?x94 (* ?x69 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72) (* ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x101 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x97 0))))))
 (rewrite (= $x101 $x115))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x103 (asserted $x102)))
 (let ((@x346 (mp (mp @x103 (quant-intro (proof-bind ?x113) (= $x102 $x138)) $x138) (rewrite (= $x138 $x138)) $x138)))
 (let ((@x123 (mp (mp @x346 (quant-intro (proof-bind ?x110) (= $x138 $x607)) $x607) (quant-intro (proof-bind ?x286) (= $x607 $x282)) $x282)))
 (let ((@x261 (mp (mp~ @x123 (sk (~ $x282 $x476)) $x476) (rewrite (= $x476 $x458)) $x458)))
 (let ((@x130 (and-elim @x261 $x233)))
 (let ((@x137 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x233) $x380)) @x130 $x380)))
 (let (($x383 (>= ?x148 (- 1))))
 (let ((@x378 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x233) $x383)) @x130 $x383)))
 (let (($x403 (<= ?x493 6)))
 (let ((@x247 (and-elim @x261 $x120)))
 (let ((@x484 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x120) $x403)) @x247 $x403)))
 (let (($x527 (>= ?x493 6)))
 (let ((@x147 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x120) $x527)) @x247 $x527)))
 (let (($x388 (<= ?x240 1)))
 (let ((@x277 (and-elim @x261 $x260)))
 (let ((@x321 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x260) $x388)) @x277 $x388)))
 (let (($x402 (>= ?x240 1)))
 (let ((@x313 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x260) $x402)) @x277 $x402)))
 (let (($x180 (not (<= ?x243 0))))
 (let (($x582 (>= ?x243 0)))
 (let ((@x239 ((_ th-lemma arith) (hypothesis (not $x582)) @x378 @x137 @x378 @x137 @x313 @x321 @x378 @x137 @x147 @x484 @x147 @x484 @x378 @x137 false)))
 (let ((@x248 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x140 $x180 (not $x582))) (and-elim @x261 $x305) (or $x180 (not $x582)))))
 ((_ th-lemma arith) (unit-resolution @x248 (lemma @x239 $x582) $x180) @x378 @x137 @x378 @x137 @x313 @x321 @x378 @x137 @x147 @x484 @x147 @x484 @x378 @x137 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        13
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           1
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             253
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             1
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 45
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.66
 :memory                    3.16
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1630636
 :num-checks                1
 :propagations              11
 :rlimit-count              12758
 :time                      0.01
 :total-time                0.02)
