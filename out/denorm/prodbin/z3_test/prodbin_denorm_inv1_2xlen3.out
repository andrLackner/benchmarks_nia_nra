unsat
((set-logic NRA)
(proof
(let (($x1077 (exists ((x Real) (y Real) )(! (let ((?x81 (* x00 y00)))
 (let ((?x566 (* y x)))
 (let ((?x585 (* (- 1.0) ?x566)))
 (let ((?x897 (+ ?x585 ?x81 z00 x)))
 (let ((?x751 (* (/ 1.0 2.0) y)))
 (let ((?x1869 (+ (- (/ 1.0 2.0)) ?x751)))
 (let ((?x759 (* (- 8.0) (* ?x1869 ?x1869 ?x1869 ?x897 ?x897 x x x))))
 (let ((?x1878 (* (- 4.0) (* ?x1869 ?x1869 ?x1869 ?x897 ?x897 ?x897 x x))))
 (let ((?x1871 (* (- 2.0) (* ?x1869 ?x1869 ?x1869 ?x897 ?x897 ?x897 x))))
 (let ((?x379 (+ ?x1871 ?x1878 ?x759)))
 (let ((?x303 (* (- 2.0) (* ?x897 ?x897 ?x897 x))))
 (let ((?x155 (* ?x1869 ?x897 ?x897 x x)))
 (let ((?x1507 (* (- 4.0) ?x155)))
 (let ((?x2259 (* (- 4.0) (* ?x1869 ?x1869 ?x897 ?x897 ?x897 x x))))
 (let ((?x1581 (+ ?x2259 ?x1507 ?x303)))
 (let ((?x1299 (* ?x1869 x)))
 (let ((?x258 (* 2.0 ?x1299)))
 (let ((?x224 (+ ?x258 ?x585 x)))
 (let ((?x596 (* ?x224 ?x1581 ?x379)))
 (let (($x1446 (= ?x596 0.0)))
 (not $x1446))))))))))))))))))))) :qid k!28))
 ))
 (let (($x1830 (exists ((x Real) (y Real) )(! false :qid k!28))
 ))
 (let ((?x1831 (lambda ((x Real) (y Real) )(let ((?x81 (* x00 y00)))
 (let ((?x566 (* y x)))
 (let ((?x585 (* (- 1.0) ?x566)))
 (let ((?x897 (+ ?x585 ?x81 z00 x)))
 (let ((?x751 (* (/ 1.0 2.0) y)))
 (let ((?x1869 (+ (- (/ 1.0 2.0)) ?x751)))
 (let ((?x759 (* (- 8.0) (* ?x1869 ?x1869 ?x1869 ?x897 ?x897 x x x))))
 (let ((?x1878 (* (- 4.0) (* ?x1869 ?x1869 ?x1869 ?x897 ?x897 ?x897 x x))))
 (let ((?x1871 (* (- 2.0) (* ?x1869 ?x1869 ?x1869 ?x897 ?x897 ?x897 x))))
 (let ((?x379 (+ ?x1871 ?x1878 ?x759)))
 (let ((?x303 (* (- 2.0) (* ?x897 ?x897 ?x897 x))))
 (let ((?x155 (* ?x1869 ?x897 ?x897 x x)))
 (let ((?x1507 (* (- 4.0) ?x155)))
 (let ((?x2259 (* (- 4.0) (* ?x1869 ?x1869 ?x897 ?x897 ?x897 x x))))
 (let ((?x1581 (+ ?x2259 ?x1507 ?x303)))
 (let ((?x1299 (* ?x1869 x)))
 (let ((?x258 (* 2.0 ?x1299)))
 (let ((?x224 (+ ?x258 ?x585 x)))
 (let ((?x596 (* ?x224 ?x1581 ?x379)))
 (let (($x1446 (= ?x596 0.0)))
 (let (($x1168 (not $x1446)))
 (let ((?x2380 (+ x z00 ?x81 ?x585)))
 (let ((?x1325 (* (- 8.0) (* ?x1869 ?x1869 ?x1869 ?x2380 ?x2380 x x x))))
 (let ((?x1744 (* (- 2.0) (* ?x1869 ?x1869 ?x1869 ?x2380 ?x2380 ?x2380 x))))
 (let ((?x1854 (* (- 4.0) (* ?x1869 ?x1869 ?x1869 ?x2380 ?x2380 ?x2380 x x))))
 (let ((?x1850 (+ ?x1854 ?x1744 ?x1325)))
 (let ((?x2387 (* y x x x00 x00 y00 y00)))
 (let ((?x1702 (* (- 2.0) ?x2387)))
 (let ((?x1900 (* y y x x x x00 y00)))
 (let ((?x1699 (* 4.0 ?x1900)))
 (let ((?x1728 (* (- 2.0) (* ?x2380 ?x2380 ?x2380 x))))
 (let ((?x1653 (* 2.0 (* x x z00 z00))))
 (let ((?x1622 (* x x x x00 y00)))
 (let ((?x1714 (* 4.0 ?x1622)))
 (let ((?x1611 (* x x x00 y00 z00)))
 (let ((?x1712 (* 4.0 ?x1611)))
 (let ((?x1606 (* 2.0 (* x x x00 x00 y00 y00))))
 (let ((?x1461 (* y y y x x x x)))
 (let ((?x1696 (* (- 2.0) ?x1461)))
 (let ((?x1436 (* x x x x)))
 (let ((?x1693 (* 2.0 ?x1436)))
 (let ((?x1382 (* y x x x z00)))
 (let ((?x1710 (* (- 8.0) ?x1382)))
 (let ((?x1369 (* y x x x x)))
 (let ((?x1709 (* (- 6.0) ?x1369)))
 (let ((?x1176 (* y y x x x x)))
 (let ((?x1711 (* 6.0 ?x1176)))
 (let ((?x738 (* y x x x00 y00 z00)))
 (let ((?x1487 (* (- 4.0) ?x738)))
 (let ((?x580 (* y x x x x00 y00)))
 (let ((?x1708 (* (- 8.0) ?x580)))
 (let ((?x422 (* y x x z00 z00)))
 (let ((?x1533 (* (- 2.0) ?x422)))
 (let ((?x344 (* x x x z00)))
 (let ((?x1715 (* 4.0 ?x344)))
 (let ((?x578 (* (- 4.0) (* ?x1869 ?x1869 ?x2380 ?x2380 ?x2380 x x))))
 (let ((?x124 (* y y x x x z00)))
 (let ((?x1531 (* 4.0 ?x124)))
 (let ((?x1751 (+ ?x1531 ?x578 ?x1715 ?x1533 ?x1708 ?x1487 ?x1711 ?x1709 ?x1710 ?x1693 ?x1696 ?x1606 ?x1712 ?x1714 ?x1653 ?x1728 ?x1699 ?x1702)))
 (let ((?x1847 (* 0.0 ?x1751 ?x1850)))
 (let ((@x1297 (monotonicity (rewrite (= ?x1871 ?x1744)) (rewrite (= ?x1878 ?x1854)) (rewrite (= ?x759 ?x1325)) (= ?x379 (+ ?x1744 ?x1854 ?x1325)))))
 (let ((?x1718 (+ ?x1531 ?x1715 ?x1533 ?x1708 ?x1487 ?x1711 ?x1709 ?x1710 ?x1693 ?x1696 ?x1606 ?x1712 ?x1714 ?x1653 ?x1699 ?x1702)))
 (let ((?x1729 (+ ?x578 ?x1718 ?x1728)))
 (let ((?x2263 (* (/ 1.0 2.0) ?x2387)))
 (let ((?x273 (* (- 4.0) ?x2263)))
 (let ((?x1473 (* (- 1.0) ?x1900)))
 (let ((?x1522 (* (- 4.0) ?x1473)))
 (let ((?x1463 (* (/ 1.0 2.0) ?x1461)))
 (let ((?x1521 (* (- 4.0) ?x1463)))
 (let ((?x1437 (* (- (/ 1.0 2.0)) ?x1436)))
 (let ((?x1520 (* (- 4.0) ?x1437)))
 (let ((?x1432 (* z00 x x x)))
 (let ((?x1433 (* (- (/ 1.0 2.0)) ?x1432)))
 (let ((?x1519 (* (- 4.0) ?x1433)))
 (let ((?x1429 (* (- (/ 1.0 2.0)) (* ?x81 x x x))))
 (let ((?x1518 (* (- 4.0) ?x1429)))
 (let ((?x1425 (* (- (/ 1.0 2.0)) (* ?x585 x x x))))
 (let ((?x1516 (* (- 4.0) ?x1425)))
 (let ((?x1424 (* x z00 x x)))
 (let ((?x1421 (* (- (/ 1.0 2.0)) ?x1424)))
 (let ((?x1511 (* (- 4.0) ?x1421)))
 (let ((?x1423 (* z00 z00 x x)))
 (let ((?x1420 (* (- (/ 1.0 2.0)) ?x1423)))
 (let ((?x1510 (* (- 4.0) ?x1420)))
 (let ((?x1417 (* (- (/ 1.0 2.0)) (* ?x81 z00 x x))))
 (let ((?x1508 (* (- 4.0) ?x1417)))
 (let ((?x1416 (* (- (/ 1.0 2.0)) (* ?x585 z00 x x))))
 (let ((?x1506 (* (- 4.0) ?x1416)))
 (let ((?x1412 (* (- (/ 1.0 2.0)) (* x ?x81 x x))))
 (let ((?x1501 (* (- 4.0) ?x1412)))
 (let ((?x1408 (* (- (/ 1.0 2.0)) (* z00 ?x81 x x))))
 (let ((?x1500 (* (- 4.0) ?x1408)))
 (let ((?x1404 (* (- (/ 1.0 2.0)) (* ?x81 ?x81 x x))))
 (let ((?x1495 (* (- 4.0) ?x1404)))
 (let ((?x1400 (* (- (/ 1.0 2.0)) (* ?x585 ?x81 x x))))
 (let ((?x1494 (* (- 4.0) ?x1400)))
 (let ((?x1399 (* (- (/ 1.0 2.0)) (* x ?x585 x x))))
 (let ((?x1499 (* (- 4.0) ?x1399)))
 (let ((?x1396 (* (- (/ 1.0 2.0)) (* z00 ?x585 x x))))
 (let ((?x1497 (* (- 4.0) ?x1396)))
 (let ((?x1492 (* (- 4.0) ?x1382)))
 (let ((?x1372 (* (/ 1.0 2.0) ?x1369)))
 (let ((?x1491 (* (- 4.0) ?x1372)))
 (let ((?x1353 (* (- (/ 1.0 2.0)) (* ?x585 ?x585 x x))))
 (let ((?x1490 (* (- 4.0) ?x1353)))
 (let ((?x1394 (* (- (/ 1.0 2.0)) (* ?x81 ?x585 x x))))
 (let ((?x1489 (* (- 4.0) ?x1394)))
 (let ((?x1469 (* (- 1.0) ?x1176)))
 (let ((?x1488 (* (- 4.0) ?x1469)))
 (let ((?x1486 (* (- 4.0) ?x580)))
 (let ((?x2373 (* (/ 1.0 2.0) ?x422)))
 (let ((?x1485 (* (- 4.0) ?x2373)))
 (let ((?x1472 (* (- 1.0) ?x124)))
 (let ((?x1484 (* (- 4.0) ?x1472)))
 (let ((?x1523 (+ ?x1484 ?x1485 ?x1486 ?x1487 ?x1488 ?x1489 ?x1490 ?x1491 ?x1492 ?x1497 ?x1499 ?x1494 ?x1495 ?x1500 ?x1501 ?x1506 ?x1508 ?x1510 ?x1511 ?x1516 ?x1518 ?x1519 ?x1520 ?x1521 ?x1522 ?x273)))
 (let ((?x1664 (* 2.0 ?x344)))
 (let ((?x1625 (* 2.0 ?x1622)))
 (let ((?x1564 (* (- 2.0) ?x1369)))
 (let ((?x1613 (* 2.0 ?x1611)))
 (let ((?x1575 (* (- 2.0) ?x1382)))
 (let ((?x1547 (* (- 2.0) ?x580)))
 (let ((?x1560 (* 2.0 ?x1176)))
 (let ((?x1536 (* 4.0 ?x1176)))
 (let ((?x1705 (+ ?x1531 ?x1533 ?x1486 ?x1487 ?x1536 ?x1547 ?x1560 ?x1564 ?x1492 ?x1575 ?x1564 ?x1547 ?x1606 ?x1613 ?x1625 ?x1575 ?x1613 ?x1653 ?x1664 ?x1564 ?x1625 ?x1664 ?x1693 ?x1696 ?x1699 ?x1702)))
 (let ((@x1692 (trans (rewrite (= ?x1519 (* 2.0 ?x1432))) (rewrite (= (* 2.0 ?x1432) ?x1664)) (= ?x1519 ?x1664))))
 (let ((@x1680 (trans (rewrite (= ?x1518 (* 2.0 (* x00 y00 x x x)))) (rewrite (= (* 2.0 (* x00 y00 x x x)) ?x1625)) (= ?x1518 ?x1625))))
 (let ((@x1670 (trans (rewrite (= ?x1511 (* 2.0 ?x1424))) (rewrite (= (* 2.0 ?x1424) ?x1664)) (= ?x1511 ?x1664))))
 (let ((@x1660 (trans (rewrite (= ?x1510 (* 2.0 ?x1423))) (rewrite (= (* 2.0 ?x1423) ?x1653)) (= ?x1510 ?x1653))))
 (let ((@x1644 (trans (rewrite (= ?x1508 (* 2.0 (* x00 y00 z00 x x)))) (rewrite (= (* 2.0 (* x00 y00 z00 x x)) ?x1613)) (= ?x1508 ?x1613))))
 (let ((@x1636 (trans (rewrite (= ?x1506 (* (- 2.0) (* y x z00 x x)))) (rewrite (= (* (- 2.0) (* y x z00 x x)) ?x1575)) (= ?x1506 ?x1575))))
 (let ((@x1623 (trans (rewrite (= ?x1501 (* 2.0 (* x x00 y00 x x)))) (rewrite (= (* 2.0 (* x x00 y00 x x)) ?x1625)) (= ?x1501 ?x1625))))
 (let ((@x1614 (trans (rewrite (= ?x1500 (* 2.0 (* z00 x00 y00 x x)))) (rewrite (= (* 2.0 (* z00 x00 y00 x x)) ?x1613)) (= ?x1500 ?x1613))))
 (let ((@x1604 (trans (rewrite (= ?x1495 (* 2.0 (* x00 y00 x00 y00 x x)))) (rewrite (= (* 2.0 (* x00 y00 x00 y00 x x)) ?x1606)) (= ?x1495 ?x1606))))
 (let ((@x1593 (trans (rewrite (= ?x1494 (* (- 2.0) (* y x x00 y00 x x)))) (rewrite (= (* (- 2.0) (* y x x00 y00 x x)) ?x1547)) (= ?x1494 ?x1547))))
 (let ((@x1585 (trans (rewrite (= ?x1499 (* (- 2.0) (* x y x x x)))) (rewrite (= (* (- 2.0) (* x y x x x)) ?x1564)) (= ?x1499 ?x1564))))
 (let ((@x1574 (trans (rewrite (= ?x1497 (* (- 2.0) (* z00 y x x x)))) (rewrite (= (* (- 2.0) (* z00 y x x x)) ?x1575)) (= ?x1497 ?x1575))))
 (let ((@x290 (trans (rewrite (= ?x1490 (* 2.0 (* y x y x x x)))) (rewrite (= (* 2.0 (* y x y x x x)) ?x1560)) (= ?x1490 ?x1560))))
 (let ((@x1544 (trans (rewrite (= ?x1489 (* (- 2.0) (* x00 y00 y x x x)))) (rewrite (= (* (- 2.0) (* x00 y00 y x x x)) ?x1547)) (= ?x1489 ?x1547))))
 (let ((@x1707 (monotonicity (rewrite (= ?x1484 ?x1531)) (rewrite (= ?x1485 ?x1533)) (rewrite (= ?x1488 ?x1536)) @x1544 @x290 (rewrite (= ?x1491 ?x1564)) @x1574 @x1585 @x1593 @x1604 @x1614 @x1623 @x1636 @x1644 @x1660 @x1670 (rewrite (= ?x1516 ?x1564)) @x1680 @x1692 (rewrite (= ?x1520 ?x1693)) (rewrite (= ?x1521 ?x1696)) (rewrite (= ?x1522 ?x1699)) (rewrite (= ?x273 ?x1702)) (= ?x1523 ?x1705))))
 (let ((?x1475 (+ ?x1472 ?x2373 ?x580 ?x738 ?x1469 ?x1394 ?x1353 ?x1372 ?x1382 ?x1396 ?x1399 ?x1400 ?x1404 ?x1408 ?x1412 ?x1416 ?x1417 ?x1420 ?x1421 ?x1425 ?x1429 ?x1433 ?x1437 ?x1463 ?x1473 ?x2263)))
 (let ((?x1481 (* (- 4.0) ?x1475)))
 (let ((?x1355 (* ?x751 ?x585 ?x585 x x)))
 (let ((?x1349 (* ?x751 ?x81 ?x585 x x)))
 (let ((?x1350 (* ?x751 z00 ?x585 x x)))
 (let ((?x1397 (* ?x751 x ?x585 x x)))
 (let ((?x1401 (* ?x751 ?x585 ?x81 x x)))
 (let ((?x1405 (* ?x751 ?x81 ?x81 x x)))
 (let ((?x1409 (* ?x751 z00 ?x81 x x)))
 (let ((?x1410 (* ?x751 x ?x81 x x)))
 (let ((?x1413 (* ?x751 ?x585 z00 x x)))
 (let ((?x1414 (* ?x751 ?x81 z00 x x)))
 (let ((?x1418 (* ?x751 z00 z00 x x)))
 (let ((?x1422 (* ?x751 x z00 x x)))
 (let ((?x1426 (* ?x751 ?x585 x x x)))
 (let ((?x1430 (* ?x751 ?x81 x x x)))
 (let ((?x1431 (* ?x751 z00 x x x)))
 (let ((?x1434 (* ?x751 x x x x)))
 (let ((?x1363 (+ ?x1437 ?x1434 ?x1433 ?x1431 ?x1429 ?x1430 ?x1425 ?x1426 ?x1421 ?x1422 ?x1420 ?x1418 ?x1417 ?x1414 ?x1416 ?x1413 ?x1412 ?x1410 ?x1408 ?x1409 ?x1404 ?x1405 ?x1400 ?x1401 ?x1399 ?x1397 ?x1396 ?x1350 ?x1394 ?x1349 ?x1353 ?x1355)))
 (let ((?x1255 (* (- (/ 1.0 2.0)) ?x1900)))
 (let ((?x2291 (* (- (/ 1.0 2.0)) ?x124)))
 (let ((?x1169 (* (- (/ 1.0 2.0)) ?x1176)))
 (let ((?x374 (* (/ 1.0 2.0) ?x738)))
 (let ((?x1509 (* (/ 1.0 2.0) ?x580)))
 (let ((?x588 (* (/ 1.0 2.0) ?x1382)))
 (let ((?x1465 (+ ?x1437 ?x1372 ?x1433 ?x588 ?x1429 ?x1509 ?x1425 ?x1169 ?x1421 ?x588 ?x1420 ?x2373 ?x1417 ?x374 ?x1416 ?x2291 ?x1412 ?x1509 ?x1408 ?x374 ?x1404 ?x2263 ?x1400 ?x1255 ?x1399 ?x1169 ?x1396 ?x2291 ?x1394 ?x1255 ?x1353 ?x1463)))
 (let ((@x1466 (rewrite (= (* (/ 1.0 2.0) (* y y x y x x x)) ?x1463))))
 (let ((@x1459 (rewrite (= ?x1355 (* (/ 1.0 2.0) (* y y x y x x x))))))
 (let ((@x1454 (rewrite (= (* (- (/ 1.0 2.0)) (* y x00 y00 y x x x)) ?x1255))))
 (let ((@x1449 (rewrite (= ?x1349 (* (- (/ 1.0 2.0)) (* y x00 y00 y x x x))))))
 (let ((@x1870 (trans (rewrite (= ?x1350 (* (- (/ 1.0 2.0)) (* y z00 y x x x)))) (rewrite (= (* (- (/ 1.0 2.0)) (* y z00 y x x x)) ?x2291)) (= ?x1350 ?x2291))))
 (let ((@x1894 (trans (rewrite (= ?x1397 (* (- (/ 1.0 2.0)) (* y x y x x x)))) (rewrite (= (* (- (/ 1.0 2.0)) (* y x y x x x)) ?x1169)) (= ?x1397 ?x1169))))
 (let ((@x2386 (rewrite (= (* (- (/ 1.0 2.0)) (* y y x x00 y00 x x)) ?x1255))))
 (let ((@x1897 (rewrite (= ?x1401 (* (- (/ 1.0 2.0)) (* y y x x00 y00 x x))))))
 (let ((@x130 (trans (rewrite (= ?x1413 (* (- (/ 1.0 2.0)) (* y y x z00 x x)))) (rewrite (= (* (- (/ 1.0 2.0)) (* y y x z00 x x)) ?x2291)) (= ?x1413 ?x2291))))
 (let ((@x1468 (monotonicity (rewrite (= ?x1434 ?x1372)) (rewrite (= ?x1431 ?x588)) (rewrite (= ?x1430 ?x1509)) (rewrite (= ?x1426 ?x1169)) (rewrite (= ?x1422 ?x588)) (rewrite (= ?x1418 ?x2373)) (rewrite (= ?x1414 ?x374)) @x130 (rewrite (= ?x1410 ?x1509)) (rewrite (= ?x1409 ?x374)) (rewrite (= ?x1405 ?x2263)) (trans @x1897 @x2386 (= ?x1401 ?x1255)) @x1894 @x1870 (trans @x1449 @x1454 (= ?x1349 ?x1255)) (trans @x1459 @x1466 (= ?x1355 ?x1463)) (= ?x1363 ?x1465))))
 (let ((@x2077 (rewrite (= ?x897 ?x2380))))
 (let ((@x1368 (trans (monotonicity @x2077 @x2077 (= ?x155 (* ?x1869 ?x2380 ?x2380 x x))) (rewrite (= (* ?x1869 ?x2380 ?x2380 x x) ?x1363)) (= ?x155 ?x1363))))
 (let ((@x1480 (trans @x1368 (trans @x1468 (rewrite (= ?x1465 ?x1475)) (= ?x1363 ?x1475)) (= ?x155 ?x1475))))
 (let ((@x1529 (trans (monotonicity @x1480 (= ?x1507 ?x1481)) (rewrite (= ?x1481 ?x1523)) (= ?x1507 ?x1523))))
 (let ((@x1724 (trans @x1529 (trans @x1707 (rewrite (= ?x1705 ?x1718)) (= ?x1523 ?x1718)) (= ?x1507 ?x1718))))
 (let ((@x1753 (monotonicity (rewrite (= ?x2259 ?x578)) @x1724 (rewrite (= ?x303 ?x1728)) (= ?x1581 ?x1729))))
 (let ((?x1935 (+ (* (- 1.0) x) ?x566)))
 (let ((?x1498 (+ (* 2.0 (* (- (/ 1.0 2.0)) x)) (* 2.0 (* (/ 1.0 2.0) ?x566)))))
 (let ((?x1903 (* (/ 1.0 2.0) ?x566)))
 (let ((?x1999 (* (- (/ 1.0 2.0)) x)))
 (let ((?x1962 (+ ?x1999 ?x1903)))
 (let ((?x1496 (+ ?x1999 (* ?x751 x))))
 (let ((@x1905 (trans (rewrite (= ?x1299 ?x1496)) (rewrite (= ?x1496 ?x1962)) (= ?x1299 ?x1962))))
 (let ((@x737 (trans (monotonicity @x1905 (= ?x258 (* 2.0 ?x1962))) (rewrite (= (* 2.0 ?x1962) ?x1498)) (= ?x258 ?x1498))))
 (let ((@x1932 (monotonicity (trans @x737 (rewrite (= ?x1498 ?x1935)) (= ?x258 ?x1935)) (= ?x224 (+ ?x1935 ?x585 x)))))
 (let ((@x1845 (monotonicity (trans @x1932 (rewrite (= (+ ?x1935 ?x585 x) 0.0)) (= ?x224 0.0)) (trans @x1753 (rewrite (= ?x1729 ?x1751)) (= ?x1581 ?x1751)) (trans @x1297 (rewrite (= (+ ?x1744 ?x1854 ?x1325) ?x1850)) (= ?x379 ?x1850)) (= ?x596 ?x1847))))
 (let ((@x1841 (monotonicity (trans @x1845 (rewrite (= ?x1847 0.0)) $x1446) (= $x1446 (= 0.0 0.0)))))
 (let ((@x1834 (monotonicity (trans @x1841 (rewrite (= (= 0.0 0.0) true)) (= $x1446 true)) (= $x1168 (not true)))))
 (trans @x1834 (rewrite (= (not true) false)) (= $x1168 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1826 (trans (quant-intro (proof-bind ?x1831) (= $x1077 $x1830)) (elim-unused (= $x1830 false)) (= $x1077 false))))
 (let (($x2005 (exists ((x Real) (y Real) (z Real) )(! (let ((?x101 (* (- 1.0) z00)))
 (let ((?x81 (* x00 y00)))
 (let ((?x82 (* (- 1.0) ?x81)))
 (let ((?x2001 (+ ?x82 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x101)))
 (let ((?x123 (* (/ 1.0 2.0) y)))
 (let ((?x1988 (+ (- (/ 1.0 2.0)) ?x123)))
 (let ((?x40 (+ z x)))
 (let ((?x2320 (+ (* (- 2.0) (* ?x40 ?x40 ?x40 ?x1988 ?x1988 ?x1988 x)) (* (- 4.0) (* ?x40 ?x40 ?x40 ?x1988 ?x1988 ?x1988 x x)) (* (- 8.0) (* ?x40 ?x40 ?x1988 ?x1988 ?x1988 x x x)))))
 (let ((?x239 (+ (* (- 4.0) (* ?x40 ?x40 ?x40 ?x1988 ?x1988 x x)) (* (- 4.0) (* ?x40 ?x40 ?x1988 x x)) (* (- 2.0) (* ?x40 ?x40 ?x40 x)))))
 (let ((?x87 (* y x)))
 (let ((?x1958 (+ ?x82 ?x87 z ?x101)))
 (let ((?x2000 (* (- (/ 1.0 2.0)) (* z z z y y y x x))))
 (let ((?x1370 (* (- (/ 1.0 4.0)) (* z z z y y y x))))
 (let ((?x2385 (+ ?x1370 ?x2000 (* (- 1.0) (* z z y y y x x x)))))
 (let ((?x758 (* z z z x)))
 (let ((?x761 (* (- 2.0) ?x758)))
 (let ((?x553 (* z z y x x)))
 (let ((?x668 (* (- 2.0) ?x553)))
 (let ((?x243 (* z z z y y x x)))
 (let ((?x503 (* (- 1.0) ?x243)))
 (let ((?x144 (+ ?x503 ?x668 ?x761)))
 (let (($x2011 (or (not (= (* ?x144 ?x2385 ?x1958) 0.0)) (not (= (* ?x239 ?x2320 ?x2001) 0.0)))))
 (and (= ?x1958 0.0) $x2011))))))))))))))))))))))) :qid k!28))
 ))
 (let (($x73 (exists ((x Real) (y Real) (z Real) )(! (let ((?x54 (/ y 2.0)))
 (let ((?x66 (- (* (- 1.0) 2.0 x ?x54 ?x54 ?x54 z z z) (* 2.0 x 2.0 x ?x54 ?x54 ?x54 z z z))))
 (let ((?x67 (- ?x66 (* 2.0 x 2.0 x 2.0 x ?x54 ?x54 ?x54 z z))))
 (let ((?x61 (- (* (- 1.0) 2.0 x 2.0 x ?x54 ?x54 z z z) (* 2.0 x 2.0 x ?x54 z z))))
 (let ((?x68 (* (- (+ (* (- 1.0) x00 y00) (* 2.0 x ?x54) z) z00) (- ?x61 (* 2.0 x z z z)) ?x67)))
 (let ((?x40 (+ z x)))
 (let ((?x36 (/ (- y 1.0) 2.0)))
 (let ((?x49 (- (* (- 1.0) 2.0 x ?x36 ?x36 ?x36 ?x40 ?x40 ?x40) (* 2.0 x 2.0 x ?x36 ?x36 ?x36 ?x40 ?x40 ?x40))))
 (let ((?x50 (- ?x49 (* 2.0 x 2.0 x 2.0 x ?x36 ?x36 ?x36 ?x40 ?x40))))
 (let ((?x44 (- (* (- 1.0) 2.0 x 2.0 x ?x36 ?x36 ?x40 ?x40 ?x40) (* 2.0 x 2.0 x ?x36 ?x40 ?x40))))
 (let ((?x39 (- (+ (* (- 1.0) x00 y00) (* 2.0 x ?x36) z x) z00)))
 (let (($x53 (not (= (* ?x39 (- ?x44 (* 2.0 x ?x40 ?x40 ?x40)) ?x50) 0.0))))
 (let (($x33 (= (- (+ (* (- 1.0) x00 y00) (* x y) z) z00) 0.0)))
 (and $x33 (or $x53 (not (= ?x68 0.0))))))))))))))))) :qid k!28))
 ))
 (let ((?x2009 (lambda ((x Real) (y Real) (z Real) )(let ((?x101 (* (- 1.0) z00)))
 (let ((?x81 (* x00 y00)))
 (let ((?x82 (* (- 1.0) ?x81)))
 (let ((?x2001 (+ ?x82 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x101)))
 (let ((?x123 (* (/ 1.0 2.0) y)))
 (let ((?x1988 (+ (- (/ 1.0 2.0)) ?x123)))
 (let ((?x40 (+ z x)))
 (let ((?x2320 (+ (* (- 2.0) (* ?x40 ?x40 ?x40 ?x1988 ?x1988 ?x1988 x)) (* (- 4.0) (* ?x40 ?x40 ?x40 ?x1988 ?x1988 ?x1988 x x)) (* (- 8.0) (* ?x40 ?x40 ?x1988 ?x1988 ?x1988 x x x)))))
 (let ((?x239 (+ (* (- 4.0) (* ?x40 ?x40 ?x40 ?x1988 ?x1988 x x)) (* (- 4.0) (* ?x40 ?x40 ?x1988 x x)) (* (- 2.0) (* ?x40 ?x40 ?x40 x)))))
 (let ((?x87 (* y x)))
 (let ((?x1958 (+ ?x82 ?x87 z ?x101)))
 (let ((?x2000 (* (- (/ 1.0 2.0)) (* z z z y y y x x))))
 (let ((?x1370 (* (- (/ 1.0 4.0)) (* z z z y y y x))))
 (let ((?x2385 (+ ?x1370 ?x2000 (* (- 1.0) (* z z y y y x x x)))))
 (let ((?x758 (* z z z x)))
 (let ((?x761 (* (- 2.0) ?x758)))
 (let ((?x553 (* z z y x x)))
 (let ((?x668 (* (- 2.0) ?x553)))
 (let ((?x243 (* z z z y y x x)))
 (let ((?x503 (* (- 1.0) ?x243)))
 (let ((?x144 (+ ?x503 ?x668 ?x761)))
 (let (($x2011 (or (not (= (* ?x144 ?x2385 ?x1958) 0.0)) (not (= (* ?x239 ?x2320 ?x2001) 0.0)))))
 (let (($x760 (and (= ?x1958 0.0) $x2011)))
 (let ((?x54 (/ y 2.0)))
 (let ((?x66 (- (* (- 1.0) 2.0 x ?x54 ?x54 ?x54 z z z) (* 2.0 x 2.0 x ?x54 ?x54 ?x54 z z z))))
 (let ((?x67 (- ?x66 (* 2.0 x 2.0 x 2.0 x ?x54 ?x54 ?x54 z z))))
 (let ((?x61 (- (* (- 1.0) 2.0 x 2.0 x ?x54 ?x54 z z z) (* 2.0 x 2.0 x ?x54 z z))))
 (let ((?x68 (* (- (+ (* (- 1.0) x00 y00) (* 2.0 x ?x54) z) z00) (- ?x61 (* 2.0 x z z z)) ?x67)))
 (let ((?x36 (/ (- y 1.0) 2.0)))
 (let ((?x49 (- (* (- 1.0) 2.0 x ?x36 ?x36 ?x36 ?x40 ?x40 ?x40) (* 2.0 x 2.0 x ?x36 ?x36 ?x36 ?x40 ?x40 ?x40))))
 (let ((?x50 (- ?x49 (* 2.0 x 2.0 x 2.0 x ?x36 ?x36 ?x36 ?x40 ?x40))))
 (let ((?x44 (- (* (- 1.0) 2.0 x 2.0 x ?x36 ?x36 ?x40 ?x40 ?x40) (* 2.0 x 2.0 x ?x36 ?x40 ?x40))))
 (let ((?x39 (- (+ (* (- 1.0) x00 y00) (* 2.0 x ?x36) z x) z00)))
 (let (($x53 (not (= (* ?x39 (- ?x44 (* 2.0 x ?x40 ?x40 ?x40)) ?x50) 0.0))))
 (let (($x33 (= (- (+ (* (- 1.0) x00 y00) (* x y) z) z00) 0.0)))
 (let (($x72 (and $x33 (or $x53 (not (= ?x68 0.0))))))
 (rewrite (= $x72 $x760)))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x74 (asserted $x73)))
 (let ((@x1973 (mp (mp @x74 (quant-intro (proof-bind ?x2009) (= $x73 $x2005)) $x2005) (rewrite (= $x2005 $x1077)) $x1077)))
 (mp @x1973 @x1826 false))))))))))))

(:max-memory   17.76
 :memory       17.51
 :num-allocs   74869
 :num-checks   1
 :rlimit-count 2649
 :time         0.00
 :total-time   0.01)
