unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x876 (+ m!1 (* (- 6) n!0))))
 (let (($x937 (<= ?x876 6)))
 (let (($x960 (= ?x876 6)))
 (let ((?x934 (* 3 (* k!2 k!2 k!2 m!1))))
 (let ((?x1231 (* (- 37) (* k!2 k!2 m!1))))
 (let ((?x899 (+ k!2 m!1)))
 (let ((?x1714 (+ 6 m!1)))
 (let ((?x586 (+ 1 n!0)))
 (let ((?x894 (* 5 (* ?x586 ?x586 ?x586 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x899))))
 (let ((?x817 (* 3 (* k!2 k!2 m!1 m!1))))
 (let ((?x980 (* (- 5) (* ?x586 ?x1714 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x899 (+ k!2 c!3)))))
 (let ((?x1169 (+ k!2 c!3)))
 (let ((?x1230 (* (- 1) (* ?x586 ?x586 ?x586 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x899 ?x899))))
 (let ((?x1844 (* 13 (* k!2 m!1))))
 (let ((?x1248 (* (- 5) (* k!2 m!1 m!1))))
 (let ((?x1077 (* (- 46) (* k!2 k!2 m!1 n!0))))
 (let ((?x840 (* 22 (* k!2 m!1 n!0))))
 (let ((?x1167 (* k!2 k!2)))
 (let ((?x883 (* 13 ?x1167)))
 (let ((?x585 (* 22 (* k!2 k!2 n!0))))
 (let ((?x902 (* 3 (* k!2 k!2 k!2 m!1 n!0))))
 (let ((?x576 (* (- 5) (* k!2 m!1 m!1 n!0))))
 (let ((?x903 (* (- 9) (* k!2 k!2 k!2 n!0 n!0))))
 (let ((?x1239 (* 3 (* k!2 k!2 m!1 m!1 n!0))))
 (let ((?x1256 (* (- 9) (* ?x586 ?x586 ?x586 ?x586 ?x1714 ?x1714 ?x899 ?x899 ?x899))))
 (let ((?x821 (* 9 (* k!2 m!1 n!0 n!0))))
 (let ((?x1328 (* (- 41) (* k!2 k!2 k!2 n!0))))
 (let ((?x820 (* 9 (* k!2 k!2 n!0 n!0))))
 (let ((?x804 (* k!2 m!1 m!1 m!1)))
 (let ((?x626 (* k!2 k!2 k!2 k!2 n!0)))
 (let ((?x593 (* (- 4) (* ?x586 ?x586 ?x586 ?x1714 ?x1714 ?x899 ?x899 ?x899))))
 (let ((?x618 (* (- 9) (* k!2 k!2 m!1 n!0 n!0))))
 (let ((?x611 (* k!2 m!1 m!1 m!1 n!0)))
 (let ((?x1487 (* (- 32) (* k!2 k!2 k!2))))
 (let ((?x574 (* k!2 k!2 k!2 k!2)))
 (let ((?x583 (+ (* 9 (* ?x586 ?x586 ?x1714 ?x1714 ?x899 ?x1169 ?x1169)) (* k!2 k!2 k!2 c!3) (* (- 18) (* k!2 m!1 n!0 n!0 c!3)) (* (- 5) (* m!1 m!1 n!0 c!3)) (* (- 5) (* ?x586 ?x586 ?x586 ?x899 ?x1169 ?x1169 ?x1169)) ?x574 ?x1487 (* (- 27) (* m!1 c!3 c!3)) ?x611 ?x618 ?x593 ?x626 ?x804 ?x820 ?x1328 ?x821 (* (- 18) (* k!2 k!2 n!0 n!0 c!3)) (* (- 5) (* ?x586 ?x1714 ?x1714 ?x899 ?x899 ?x1169 ?x1169)) (* (- 9) (* k!2 n!0 n!0 c!3 c!3)) ?x1256 ?x1239 (* (- 82) (* k!2 m!1 n!0 c!3)) (* 9 (* m!1 n!0 n!0 c!3)) (* (- 77) (* k!2 k!2 n!0 c!3)) (* (- 36) (* k!2 n!0 c!3 c!3)) (* ?x586 ?x1714 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x899 ?x899 ?x1169) ?x903 (* 9 (* k!2 n!0 n!0 c!3)) (* 9 (* ?x586 ?x586 ?x586 ?x586 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x1169)) (* (- 18) (* ?x586 ?x586 ?x586 ?x1169 ?x1169 ?x1169 ?x1169)) (* 4 (* ?x586 ?x1714 ?x1714 ?x899 ?x1169 ?x1169)) (* (- 59) (* k!2 k!2 c!3)) (* 9 (* ?x586 ?x586 ?x1714 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x1169)) (* 13 (* m!1 c!3)) (* (- 9) (* m!1 n!0 n!0 c!3 c!3)) (* (- 9) (* ?x586 ?x586 ?x586 ?x586 ?x1169 ?x1169 ?x1169 ?x1169)) (* ?x586 ?x586 ?x586 ?x899 ?x899 ?x1169 ?x1169 ?x1169) ?x576 ?x902 ?x585 (* 4 (* ?x586 ?x586 ?x586 ?x1169 ?x1169 ?x1169)) (* (- 18) (* ?x586 ?x1714 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x1169 ?x1169)) (* m!1 m!1 m!1 c!3) (* k!2 k!2 k!2 n!0 c!3) (* m!1 m!1 m!1 n!0 c!3) (* (- 64) (* k!2 m!1 c!3)) (* ?x586 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x1169 ?x1169) (* 3 (* k!2 k!2 m!1 c!3)) (* 4 (* ?x586 ?x1714 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x1169)) ?x883 (* 22 (* m!1 n!0 c!3)) (* 3 (* k!2 m!1 m!1 c!3)) (* (- 9) (* ?x586 ?x586 ?x1714 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x1169 ?x1169)) ?x840 (* (- 5) (* m!1 m!1 c!3)) ?x1077 ?x1248 ?x1844 (* 13 (* k!2 c!3)) (* (- 9) (* ?x586 ?x586 ?x1714 ?x1714 ?x899 ?x1169 ?x1169 ?x1169)) ?x1230 (* (- 18) (* ?x586 ?x1714 ?x1714 ?x899 ?x1169 ?x1169 ?x1169)) (* 18 (* ?x586 ?x586 ?x586 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x1169)) (* 3 (* k!2 m!1 m!1 n!0 c!3)) (* (- 27) (* k!2 c!3 c!3)) (* 22 (* k!2 n!0 c!3)) (* 9 (* ?x586 ?x586 ?x586 ?x586 ?x1169 ?x1169 ?x1169)) ?x980 (* 3 (* k!2 k!2 m!1 n!0 c!3)) (* (- 36) (* m!1 n!0 c!3 c!3)) ?x817 ?x894 ?x1231 ?x934)))
 (let (($x1321 (= ?x583 0)))
 (let (($x1831 (not $x1321)))
 (let ((?x882 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x1074 (= ?x882 1)))
 (let ((?x1701 (* (- 1) (* k!2 n!0))))
 (let ((?x2242 (* 3 c!3)))
 (let ((?x878 (* (- 2) n!0)))
 (let ((?x945 (+ k!2 ?x878 ?x2242 ?x1701)))
 (let (($x947 (= ?x945 1)))
 (let ((?x915 (* (- 1) ?x1167)))
 (let ((?x879 (* 18 c!3)))
 (let ((?x587 (* (- 9) n!0)))
 (let ((?x955 (* 5 k!2)))
 (let ((?x1836 (+ ?x955 ?x587 (* 9 (* n!0 c!3)) ?x879 ?x915)))
 (let (($x1830 (= ?x1836 4)))
 (let (($x1853 (and $x960 $x1830 $x947 $x1074 $x1831)))
 (let ((?x811 (* 4 (* ?x586 ?x586 ?x586 (+ c!3 k!2) (+ c!3 k!2) (+ c!3 k!2)))))
 (let ((?x900 (+ c!3 k!2)))
 (let ((?x1626 (+ ?x883 (* (- 36) (* c!3 c!3 k!2 n!0)) (* (- 77) (* c!3 k!2 k!2 n!0)) ?x1328 (* (- 36) (* c!3 c!3 m!1 n!0)) (* (- 82) (* c!3 k!2 m!1 n!0)) ?x1077 (* 22 (* c!3 k!2 n!0)) ?x585 (* 22 (* c!3 m!1 n!0)) ?x840 (* 9 (* ?x586 ?x586 ?x1714 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x900)) ?x1844 (* 13 (* c!3 m!1)) (* 13 (* c!3 k!2)) ?x618 (* (- 5) (* c!3 m!1 m!1)) ?x1248 ?x894 (* (- 9) (* c!3 c!3 k!2 n!0 n!0)) (* (- 18) (* c!3 k!2 k!2 n!0 n!0)) ?x903 (* (- 9) (* c!3 c!3 m!1 n!0 n!0)) (* (- 18) (* c!3 k!2 m!1 n!0 n!0)) (* (- 5) (* c!3 m!1 m!1 n!0)) ?x576 (* (- 5) (* ?x586 ?x1714 ?x1714 ?x899 ?x899 ?x900 ?x900)) (* (- 5) (* ?x586 ?x586 ?x586 ?x899 ?x900 ?x900 ?x900)) (* ?x586 ?x586 ?x586 ?x899 ?x899 ?x900 ?x900 ?x900) (* 3 (* c!3 k!2 k!2 m!1 n!0)) ?x1256 ?x902 ?x593 (* 3 (* c!3 k!2 m!1 m!1 n!0)) ?x1239 (* 18 (* ?x586 ?x586 ?x586 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x900)) (* (- 27) (* c!3 c!3 k!2)) (* (- 59) (* c!3 k!2 k!2)) (* ?x586 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x900 ?x900) ?x1487 (* (- 27) (* c!3 c!3 m!1)) (* (- 64) (* c!3 k!2 m!1)) ?x1231 (* 4 (* ?x586 ?x1714 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x900)) (* 3 (* c!3 k!2 k!2 m!1)) ?x934 (* 3 (* c!3 k!2 m!1 m!1)) ?x817 (* (- 9) (* ?x586 ?x586 ?x1714 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x900 ?x900)) ?x1230 (* (- 9) (* ?x586 ?x586 ?x586 ?x586 ?x900 ?x900 ?x900 ?x900)) (* (- 18) (* ?x586 ?x586 ?x586 ?x900 ?x900 ?x900 ?x900)) (* 4 (* ?x586 ?x1714 ?x1714 ?x899 ?x900 ?x900)) (* (- 5) (* ?x586 ?x1714 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x899 ?x900)) (* 9 (* ?x586 ?x586 ?x586 ?x586 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x900)) (* c!3 k!2 k!2 k!2) ?x574 ?x611 (* c!3 m!1 m!1 m!1 n!0) ?x626 (* c!3 k!2 k!2 k!2 n!0) (* (- 18) (* ?x586 ?x1714 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x900 ?x900)) (* c!3 m!1 m!1 m!1) ?x804 (* (- 9) (* ?x586 ?x586 ?x1714 ?x1714 ?x899 ?x900 ?x900 ?x900)) (* 9 (* ?x586 ?x586 ?x1714 ?x1714 ?x899 ?x900 ?x900)) (* 9 (* ?x586 ?x586 ?x586 ?x586 ?x900 ?x900 ?x900)) (* (- 18) (* ?x586 ?x1714 ?x1714 ?x899 ?x900 ?x900 ?x900)) ?x811 (* ?x586 ?x1714 ?x1714 ?x1714 ?x899 ?x899 ?x899 ?x899 ?x899 ?x900) (* 9 (* c!3 k!2 n!0 n!0)) ?x820 (* 9 (* c!3 m!1 n!0 n!0)) ?x821)))
 (let (($x838 (and $x960 (= (+ ?x879 ?x955 ?x587 ?x915 (* 9 (* c!3 n!0))) 4) (= (+ ?x2242 k!2 ?x878 ?x1701) 1) $x1074 (not (= ?x1626 0)))))
 (let (($x1087 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x2253 (* 9 (* k m n n))))
 (let ((?x2251 (* 9 (* c m n n))))
 (let ((?x2249 (* 9 (* k k n n))))
 (let ((?x2247 (* 9 (* c k n n))))
 (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x455 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x1873 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1564 (* k m m m)))
 (let ((?x1563 (* c m m m)))
 (let ((?x1384 (* c k k k n)))
 (let ((?x1379 (* k k k k n)))
 (let ((?x1374 (* c m m m n)))
 (let ((?x1369 (* k m m m n)))
 (let ((?x1364 (* k k k k)))
 (let ((?x1363 (* c k k k)))
 (let ((?x1117 (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x950 (* ?x344 ?x344 ?x344 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2473 (* (- 5) (* k m m n))))
 (let ((?x2472 (* (- 5) (* c m m n))))
 (let ((?x2374 (* (- 9) (* c c m n n))))
 (let ((?x2407 (* (- 9) (* k k m n n))))
 (let ((?x2413 (* 13 (* c k))))
 (let ((?x2414 (* 13 (* c m))))
 (let ((?x2415 (* 13 (* k m))))
 (let ((?x2416 (* 22 (* k m n))))
 (let ((?x2417 (* 22 (* c m n))))
 (let ((?x2418 (* 22 (* k k n))))
 (let ((?x2419 (* 22 (* c k n))))
 (let ((?x49 (* k k)))
 (let ((?x2450 (* 13 ?x49)))
 (let ((?x1653 (+ ?x2450 (* (- 36) (* c c k n)) (* (- 77) (* c k k n)) (* (- 41) (* k k k n)) (* (- 36) (* c c m n)) (* (- 82) (* c k m n)) (* (- 46) (* k k m n)) ?x2419 ?x2418 ?x2417 ?x2416 (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) ?x2415 ?x2414 ?x2413 ?x2407 (* (- 5) (* c m m)) (* (- 5) (* k m m)) (* 5 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* c c k n n)) (* (- 18) (* c k k n n)) (* (- 9) (* k k k n n)) ?x2374 (* (- 18) (* c k m n n)) ?x2472 ?x2473 (* (- 5) (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x344 ?x344 ?x344 ?x69 ?x68 ?x68 ?x68)) ?x950 (* 3 (* c k k m n)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* 3 (* k k k m n)) (* (- 4) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* 3 (* c k m m n)) (* 3 (* k k m m n)) (* 18 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* (- 27) (* c c k)) (* (- 59) (* c k k)) ?x1117 (* (- 32) (* k k k)) (* (- 27) (* c c m)) (* (- 64) (* c k m)) (* (- 37) (* k k m)) (* 4 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 3 (* c k k m)) (* 3 (* k k k m)) (* 3 (* c k m m)) (* 3 (* k k m m)) (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* 4 (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* (- 5) (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) ?x1363 ?x1364 ?x1369 ?x1374 ?x1379 ?x1384 (* (- 18) (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x1563 ?x1564 (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) (* (- 18) (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* 4 (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) ?x1873 ?x2247 ?x2249 ?x2251 ?x2253)))
 (let (($x336 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x298 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x249 (* (- 1) ?x49)))
 (let ((?x248 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x246 (= (+ ?x40 ?x44 ?x248 ?x249 (* 9 (* c n))) 4)))
 (let (($x162 (= (+ m (* (- 6) n)) 6)))
 (and $x162 $x246 $x298 $x336 (not (= ?x1653 0)))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x864 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x455 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x1873 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1194 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1887 (+ (* 5 (* ?x344 ?x344 ?x344 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x344 ?x344 ?x344 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x69 ?x68 ?x68)) (* (- 4) (* ?x344 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* 4 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* (- 18) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x69 ?x68 ?x68)) (* (- 1) (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 5 (* ?x344 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x1194 (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* 5 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x68)) (* 5 (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* (- 5) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 18 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x344 ?x69 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x69 ?x68)) (* (- 1) ?x1873))))
 (let (($x793 (not (= ?x1887 0))))
 (let (($x800 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x676 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x249 (* (- 1) ?x49)))
 (let ((?x248 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x162 (= (+ m (* (- 6) n)) 6)))
 (and $x162 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x248 ?x249) 4) $x676 $x800 $x793))))))))))))))))) :qid k!34))
 ))
 (let ((?x1864 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x2253 (* 9 (* k m n n))))
 (let ((?x2251 (* 9 (* c m n n))))
 (let ((?x2249 (* 9 (* k k n n))))
 (let ((?x2247 (* 9 (* c k n n))))
 (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x455 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x1873 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1564 (* k m m m)))
 (let ((?x1563 (* c m m m)))
 (let ((?x1384 (* c k k k n)))
 (let ((?x1379 (* k k k k n)))
 (let ((?x1374 (* c m m m n)))
 (let ((?x1369 (* k m m m n)))
 (let ((?x1364 (* k k k k)))
 (let ((?x1363 (* c k k k)))
 (let ((?x1117 (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x950 (* ?x344 ?x344 ?x344 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2473 (* (- 5) (* k m m n))))
 (let ((?x2472 (* (- 5) (* c m m n))))
 (let ((?x2374 (* (- 9) (* c c m n n))))
 (let ((?x2407 (* (- 9) (* k k m n n))))
 (let ((?x2413 (* 13 (* c k))))
 (let ((?x2414 (* 13 (* c m))))
 (let ((?x2415 (* 13 (* k m))))
 (let ((?x2416 (* 22 (* k m n))))
 (let ((?x2417 (* 22 (* c m n))))
 (let ((?x2418 (* 22 (* k k n))))
 (let ((?x2419 (* 22 (* c k n))))
 (let ((?x49 (* k k)))
 (let ((?x2450 (* 13 ?x49)))
 (let ((?x1653 (+ ?x2450 (* (- 36) (* c c k n)) (* (- 77) (* c k k n)) (* (- 41) (* k k k n)) (* (- 36) (* c c m n)) (* (- 82) (* c k m n)) (* (- 46) (* k k m n)) ?x2419 ?x2418 ?x2417 ?x2416 (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) ?x2415 ?x2414 ?x2413 ?x2407 (* (- 5) (* c m m)) (* (- 5) (* k m m)) (* 5 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* c c k n n)) (* (- 18) (* c k k n n)) (* (- 9) (* k k k n n)) ?x2374 (* (- 18) (* c k m n n)) ?x2472 ?x2473 (* (- 5) (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x344 ?x344 ?x344 ?x69 ?x68 ?x68 ?x68)) ?x950 (* 3 (* c k k m n)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* 3 (* k k k m n)) (* (- 4) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* 3 (* c k m m n)) (* 3 (* k k m m n)) (* 18 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* (- 27) (* c c k)) (* (- 59) (* c k k)) ?x1117 (* (- 32) (* k k k)) (* (- 27) (* c c m)) (* (- 64) (* c k m)) (* (- 37) (* k k m)) (* 4 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 3 (* c k k m)) (* 3 (* k k k m)) (* 3 (* c k m m)) (* 3 (* k k m m)) (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* 4 (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* (- 5) (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) ?x1363 ?x1364 ?x1369 ?x1374 ?x1379 ?x1384 (* (- 18) (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x1563 ?x1564 (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) (* (- 18) (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* 4 (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) ?x1873 ?x2247 ?x2249 ?x2251 ?x2253)))
 (let (($x336 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x298 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x249 (* (- 1) ?x49)))
 (let ((?x248 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x246 (= (+ ?x40 ?x44 ?x248 ?x249 (* 9 (* c n))) 4)))
 (let (($x162 (= (+ m (* (- 6) n)) 6)))
 (let (($x2237 (and $x162 $x246 $x298 $x336 (not (= ?x1653 0)))))
 (let ((?x1194 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1887 (+ (* 5 (* ?x344 ?x344 ?x344 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x950) (* 18 (* ?x344 ?x69 ?x68 ?x68)) (* (- 4) (* ?x344 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* 4 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* (- 18) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x69 ?x68 ?x68)) (* (- 1) ?x1117) (* (- 4) (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 5 (* ?x344 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x1194 (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* 5 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x68)) (* 5 (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* (- 5) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 18 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x344 ?x69 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x69 ?x68)) (* (- 1) ?x1873))))
 (let (($x793 (not (= ?x1887 0))))
 (let (($x800 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x676 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x358 (and $x162 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x248 ?x249) 4) $x676 $x800 $x793)))
 (rewrite (= $x358 $x2237)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x940 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x455 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x1873 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1194 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1887 (+ (* 5 (* ?x344 ?x344 ?x344 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x344 ?x344 ?x344 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x69 ?x68 ?x68)) (* (- 4) (* ?x344 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* 4 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* (- 18) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x69 ?x68 ?x68)) (* (- 1) (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 5 (* ?x344 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x1194 (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* 5 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x68)) (* 5 (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* (- 5) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 18 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x344 ?x69 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x69 ?x68)) (* (- 1) ?x1873))))
 (let (($x793 (not (= ?x1887 0))))
 (let (($x800 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x844 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x886 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x162 (= (+ m (* (- 6) n)) 6)))
 (and $x162 (= ?x886 (- 4)) $x844 $x800 $x793))))))))))))))) :qid k!34))
 ))
 (let ((?x660 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x455 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x1873 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1194 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1887 (+ (* 5 (* ?x344 ?x344 ?x344 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x344 ?x344 ?x344 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x69 ?x68 ?x68)) (* (- 4) (* ?x344 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* 4 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* (- 18) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x69 ?x68 ?x68)) (* (- 1) (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 5 (* ?x344 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x1194 (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* 5 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x68)) (* 5 (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* (- 5) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 18 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x344 ?x69 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x69 ?x68)) (* (- 1) ?x1873))))
 (let (($x793 (not (= ?x1887 0))))
 (let (($x800 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x676 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x249 (* (- 1) ?x49)))
 (let ((?x248 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x162 (= (+ m (* (- 6) n)) 6)))
 (let (($x358 (and $x162 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x248 ?x249) 4) $x676 $x800 $x793)))
 (let (($x844 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x886 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x949 (and $x162 (= ?x886 (- 4)) $x844 $x800 $x793)))
 (rewrite (= $x949 $x358))))))))))))))))))))))))
 ))
 (let (($x129 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x78 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x73 (- (* 5 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70) (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70))))
 (let ((?x77 (- (+ ?x73 (* 18 ?x68 ?x68 ?x69 ?x70)) (* 4 ?x68 ?x69 ?x70))))
 (let ((?x81 (+ ?x77 (* 9 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70 ?x70 ?x70 ?x70) (* 4 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70 ?x70 ?x70))))
 (let ((?x85 (+ (- ?x81 (* 18 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70 ?x70 ?x70)) (* 9 ?x68 ?x68 ?x69 ?x70 ?x70))))
 (let ((?x89 (- (- ?x85 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70)) (* 4 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x78 ?x70))))
 (let ((?x95 (+ ?x89 (* 5 ?x68 ?x69 ?x69 ?x70) (* 9 ?x68 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x78 ?x70 ?x70) (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70 ?x70 ?x70) (* 9 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70 ?x70) (* 18 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70))))
 (let ((?x100 (+ (- ?x95 (* 4 ?x68 ?x68 ?x69 ?x78 ?x78 ?x70)) (* 5 ?x68 ?x69 ?x69 ?x69 ?x69 ?x78 ?x78 ?x78 ?x70) (* 5 ?x68 ?x68 ?x69 ?x69 ?x78 ?x78 ?x70))))
 (let ((?x105 (- (- ?x100 (* 9 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x78 ?x70 ?x70)) (* 5 ?x69 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70 ?x70 ?x70))))
 (let ((?x106 (- ?x105 (* 9 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x110 (- (+ ?x106 (* 18 ?x68 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x78 ?x70)) (* ?x68 ?x69 ?x69 ?x69 ?x70))))
 (let ((?x115 (- (+ ?x110 (* 9 ?x68 ?x68 ?x68 ?x69 ?x78 ?x78 ?x70 ?x70)) (* 9 ?x68 ?x68 ?x69 ?x78 ?x78 ?x70 ?x70))))
 (let ((?x118 (+ (- ?x115 (* 9 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70 ?x70)) (* 18 ?x68 ?x68 ?x68 ?x69 ?x78 ?x78 ?x70))))
 (let ((?x123 (- (- ?x118 (* 4 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70)) (* 9 ?x68 ?x69 ?x70 ?x70))))
 (let (($x125 (= (- ?x123 (* ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x78 ?x78 ?x78 ?x70)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x125)))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x944 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x455 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x1873 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1194 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1887 (+ (* 5 (* ?x344 ?x344 ?x344 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x344 ?x344 ?x344 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x69 ?x68 ?x68)) (* (- 4) (* ?x344 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* 4 (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69)) (* (- 18) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x69 ?x68 ?x68)) (* (- 1) (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 5 (* ?x344 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x1194 (* 9 (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* 5 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69 ?x68)) (* 5 (* ?x344 ?x455 ?x455 ?x69 ?x69 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* (- 5) (* ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68)) (* 18 (* ?x344 ?x455 ?x455 ?x455 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x344 ?x69 ?x69 ?x69 ?x68)) (* 9 (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x455 ?x455 ?x69 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) (* 18 (* ?x344 ?x455 ?x455 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x344 ?x344 ?x344 ?x68 ?x68 ?x68)) (* (- 9) (* ?x344 ?x344 ?x69 ?x68)) (* (- 1) ?x1873))))
 (let (($x793 (not (= ?x1887 0))))
 (let (($x800 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x844 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x886 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x162 (= (+ m (* (- 6) n)) 6)))
 (let (($x949 (and $x162 (= ?x886 (- 4)) $x844 $x800 $x793)))
 (let ((?x70 (+ n 1)))
 (let ((?x78 (+ m 6)))
 (let ((?x73 (- (* 5 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70) (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70))))
 (let ((?x77 (- (+ ?x73 (* 18 ?x68 ?x68 ?x69 ?x70)) (* 4 ?x68 ?x69 ?x70))))
 (let ((?x81 (+ ?x77 (* 9 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70 ?x70 ?x70 ?x70) (* 4 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70 ?x70 ?x70))))
 (let ((?x85 (+ (- ?x81 (* 18 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70 ?x70 ?x70)) (* 9 ?x68 ?x68 ?x69 ?x70 ?x70))))
 (let ((?x89 (- (- ?x85 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70)) (* 4 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x78 ?x70))))
 (let ((?x95 (+ ?x89 (* 5 ?x68 ?x69 ?x69 ?x70) (* 9 ?x68 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x78 ?x70 ?x70) (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70 ?x70 ?x70) (* 9 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70 ?x70) (* 18 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70))))
 (let ((?x100 (+ (- ?x95 (* 4 ?x68 ?x68 ?x69 ?x78 ?x78 ?x70)) (* 5 ?x68 ?x69 ?x69 ?x69 ?x69 ?x78 ?x78 ?x78 ?x70) (* 5 ?x68 ?x68 ?x69 ?x69 ?x78 ?x78 ?x70))))
 (let ((?x105 (- (- ?x100 (* 9 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x78 ?x70 ?x70)) (* 5 ?x69 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70 ?x70 ?x70))))
 (let ((?x106 (- ?x105 (* 9 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x110 (- (+ ?x106 (* 18 ?x68 ?x68 ?x69 ?x69 ?x69 ?x78 ?x78 ?x78 ?x70)) (* ?x68 ?x69 ?x69 ?x69 ?x70))))
 (let ((?x115 (- (+ ?x110 (* 9 ?x68 ?x68 ?x68 ?x69 ?x78 ?x78 ?x70 ?x70)) (* 9 ?x68 ?x68 ?x69 ?x78 ?x78 ?x70 ?x70))))
 (let ((?x118 (+ (- ?x115 (* 9 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70 ?x70)) (* 18 ?x68 ?x68 ?x68 ?x69 ?x78 ?x78 ?x70))))
 (let ((?x123 (- (- ?x118 (* 4 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70)) (* 9 ?x68 ?x69 ?x70 ?x70))))
 (let (($x125 (= (- ?x123 (* ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x78 ?x78 ?x78 ?x70)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x128 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x125)))))
 (rewrite (= $x128 $x949))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x130 (asserted $x129)))
 (let ((@x480 (mp (mp @x130 (quant-intro (proof-bind ?x944) (= $x129 $x940)) $x940) (rewrite (= $x940 $x940)) $x940)))
 (let ((@x1058 (mp (mp @x480 (quant-intro (proof-bind ?x660) (= $x940 $x864)) $x864) (quant-intro (proof-bind ?x1864) (= $x864 $x1087)) $x1087)))
 (let ((@x1829 (mp (mp~ @x1058 (sk (~ $x1087 $x838)) $x838) (rewrite (= $x838 $x1853)) $x1853)))
 (let ((@x1806 (and-elim @x1829 $x960)))
 (let ((@x1833 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x960) $x937)) @x1806 $x937)))
 (let (($x1284 (>= ?x876 6)))
 (let ((@x965 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x960) $x1284)) @x1806 $x1284)))
 (let (($x1233 (<= ?x1836 4)))
 (let ((@x1837 (and-elim @x1829 $x1830)))
 (let ((@x1479 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1830) $x1233)) @x1837 $x1233)))
 (let (($x1860 (>= ?x1836 4)))
 (let ((@x591 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1830) $x1860)) @x1837 $x1860)))
 (let (($x1007 (<= ?x945 1)))
 (let ((@x921 (and-elim @x1829 $x947)))
 (let ((@x146 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x947) $x1007)) @x921 $x1007)))
 (let (($x1828 (>= ?x945 1)))
 (let ((@x1897 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x947) $x1828)) @x921 $x1828)))
 (let (($x1275 (<= ?x882 1)))
 (let ((@x1832 (and-elim @x1829 $x1074)))
 (let ((@x1044 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1074) $x1275)) @x1832 $x1275)))
 (let (($x1259 (>= ?x882 1)))
 (let ((@x1158 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1074) $x1259)) @x1832 $x1259)))
 (let (($x1070 (not (<= ?x583 0))))
 (let (($x1121 (>= ?x583 0)))
 (let ((@x710 ((_ th-lemma arith) (hypothesis (not $x1121)) @x1158 @x1044 @x965 @x1833 @x965 @x1833 @x1158 @x1044 @x1158 @x1044 @x1897 @x146 @x1158 @x1044 @x1897 @x146 @x1158 @x1044 @x1897 @x146 @x591 @x1479 @x965 @x1833 false)))
 (let ((@x148 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1321 $x1070 (not $x1121))) (and-elim @x1829 $x1831) (or $x1070 (not $x1121)))))
 ((_ th-lemma arith) (unit-resolution @x148 (lemma @x710 $x1121) $x1070) @x1158 @x1044 @x965 @x1833 @x965 @x1833 @x1158 @x1044 @x1158 @x1044 @x1897 @x146 @x1158 @x1044 @x1897 @x146 @x1158 @x1044 @x1897 @x146 @x591 @x1479 @x965 @x1833 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        20
 :arith-assert-upper        80
 :arith-branch-var          2
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           13
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             595
 :arith-nonlinear-bounds    12
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              12
 :arith-row-summations      18
 :arith-tableau-max-columns 117
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 72
 :del-clause                16
 :final-checks              8
 :max-memory                4.19
 :memory                    3.40
 :mk-bool-var               92
 :mk-clause                 16
 :num-allocs                3574081
 :num-checks                1
 :propagations              10
 :rlimit-count              36826
 :time                      0.03
 :total-time                0.04)
