unsat
((set-logic NIA)
(declare-fun x!0 () Int)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(proof
(let ((?x606 (* 6 x!0)))
 (let ((?x5758 (* 3 r!2)))
 (let ((?x587 (* (- 3) s!1)))
 (let ((?x533 (* r00 r00 r00)))
 (let ((?x534 (* 12 ?x533)))
 (let ((?x490 (* s00 r00)))
 (let ((?x568 (* (- 6) ?x490)))
 (let ((?x565 (* (- 6) x00)))
 (let ((?x564 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4022 (+ ?x44 ?x564 ?x565 ?x568 ?x534 ?x587 ?x5758 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)) (* 2 (* s!1 r!2)) ?x606)))
 (let (($x10778 (<= ?x4022 0)))
 (let (($x4017 (= ?x4022 0)))
 (let ((?x3849 (* 6 r!2)))
 (let ((?x3654 (+ 3 s!1 ?x3849)))
 (let ((?x6250 (* (- 1) s!1)))
 (let ((?x616 (+ ?x6250 x!0)))
 (let ((?x3847 (+ 1 r!2)))
 (let ((?x8574 (* (- 18) (* r!2 r!2 x!0 x!0 x!0))))
 (let ((?x8568 (* (- 18) (* x!0 x!0 x!0))))
 (let ((?x7772 (* s!1 s!1)))
 (let ((?x6226 (* 3 ?x7772)))
 (let ((?x7260 (* 60 (* s!1 x!0 x!0))))
 (let ((?x491 (* 108 (* r!2 r!2 r!2 r!2))))
 (let ((?x7230 (* 324 (* r!2 r!2 r!2))))
 (let ((?x5124 (* 117 (* r!2 r!2 x!0 x!0))))
 (let ((?x6887 (* s!1 s!1 s!1)))
 (let ((?x3088 (* 24 ?x6887)))
 (let ((?x3071 (* 54 x!0)))
 (let ((?x8571 (* (- 36) (* r!2 x!0 x!0 x!0))))
 (let ((?x6199 (* r!2 r!2)))
 (let ((?x3072 (* 351 ?x6199)))
 (let ((?x5559 (* r!2 x!0)))
 (let ((?x3074 (* 270 ?x5559)))
 (let ((?x4421 (* (- 66) (* s!1 s!1 x!0))))
 (let ((?x4097 (* (- 18) (* ?x3847 ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x616))))
 (let ((?x7044 (* 81 (* r!2 x!0 x!0))))
 (let ((?x2376 (* 54 (* r!2 r!2 r!2 x!0 x!0))))
 (let ((?x2815 (* x!0 x!0)))
 (let ((?x3109 (* 18 ?x2815)))
 (let ((?x6230 (* 162 r!2)))
 (let ((?x3069 (* (- 36) s!1)))
 (let ((?x5033 (* 378 (* r!2 r!2 r!2 x!0))))
 (let ((?x2477 (* s!1 x!0)))
 (let ((?x6235 (* (- 18) ?x2477)))
 (let ((?x5041 (* 108 (* r!2 r!2 r!2 r!2 x!0))))
 (let ((?x5037 (* 486 (* r!2 r!2 x!0))))
 (let ((?x711 (* s00 r00 r00)))
 (let ((?x9470 (* 18 ?x711)))
 (let ((?x655 (* s00 s00)))
 (let ((?x9467 (* (- 12) ?x655)))
 (let ((?x586 (* r00 x00)))
 (let ((?x615 (* (- 54) ?x586)))
 (let ((?x605 (* 9 ?x490)))
 (let ((?x365 (* r00 r00)))
 (let ((?x12201 (* (- 54) ?x365)))
 (let ((?x9458 (* (- 54) x00)))
 (let ((?x12200 (* (- 81) r00)))
 (let ((?x9454 (* 36 s00)))
 (let ((?x9099 (+ ?x9454 ?x12200 ?x9458 ?x12201 (* 15 (* r00 s!1 s!1 s!1 r!2)) (* 54 (* x00 r!2 r!2 x!0 x!0 x!0)) (* 18 (* s00 r00 r00 s!1 r!2 r!2 x!0 x!0)) ?x605 (* 72 (* r00 s!1 r!2 r!2 r!2 x!0)) ?x615 ?x9467 ?x9470 (* 216 (* r00 r!2 x!0)) (* (- 3) (* ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3654)) (* (- 18) (* r00 ?x616 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654)) (* (- 18) (* r00 x00 s!1 s!1 s!1 r!2 r!2)) (* 16 (* s00 s!1 x!0 x!0)) (* 6 (* r00 s00 ?x3847 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654)) (* (- 12) (* r00 r00 s!1 s!1 x!0)) ?x5037 ?x5041 (* (- 6) (* s00 r00 s!1 r!2 r!2 r!2)) (* 9 (* r00 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654 ?x3654)) (* (- 9) (* s00 r!2 r!2 r!2 x!0 x!0 x!0)) (* (- 18) (* r00 x00 s!1 s!1 s!1)) (* 18 (* r00 x00 r!2 x!0 x!0)) (* 6 (* s00 r00 r00 s!1 s!1 s!1)) (* 66 (* s00 s!1 r!2 x!0)) (* 4 (* s00 s00 x!0 x!0 x!0)) (* (- 18) (* r00 x!0 x!0 x!0)) (* 18 (* r00 x00 r!2 r!2 x!0 x!0 x!0)) (* 36 (* r00 x00 r!2 x!0 x!0 x!0)) (* 6 (* r00 r00 ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3654)) (* (- 12) (* s00 s00 s!1 r!2 r!2 x!0 x!0)) (* (- 2) (* s00 ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3654)) (* (- 24) (* s00 s00 s!1 r!2 x!0 x!0)) (* (- 18) (* r00 r!2 x!0 x!0 x!0)) (* 6 (* s00 r00 r!2 r!2 x!0 x!0)) ?x6235 ?x5033 (* 18 (* r00 x00 x!0 x!0 x!0)) (* 6 (* r00 r00 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654 ?x3654)) (* 6 (* r00 r00 s!1 x!0 x!0)) (* (- 6) (* r00 r00 s00 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654)) (* 12 (* s00 s00 s!1 s!1 x!0)) (* (- 18) (* s00 r00 s!1 r!2 r!2 r!2 x!0 x!0)) ?x3069 ?x6230 (* (- 36) (* s00 r00 r!2 r!2 r!2 r!2)) ?x3109 (* 21 (* r00 s!1 s!1 s!1)) (* 90 (* r00 s!1 r!2 r!2 x!0)) (* 42 (* r00 r00 s!1 s!1 r!2)) (* 3 (* s00 r00 r!2 x!0 x!0)) (* 6 (* s00 r00 s!1 x!0)) (* (- 6) (* s00 r00 s!1 r!2 x!0)) (* (- 3) (* ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654 ?x3654)) (* 108 (* r00 r!2 r!2 r!2 x!0)) (* (- 9) (* r00 s00 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654)) (* (- 6) (* s00 x!0 x!0 x!0)) (* (- 21) (* s00 r!2 x!0 x!0 x!0)) (* 72 (* s00 s!1 r!2 r!2 x!0 x!0)) (* (- 59) (* s00 s!1 s!1 r!2 x!0)) (* 19 (* s00 s!1 s!1 s!1 r!2)) (* 61 (* s00 s!1 r!2 x!0 x!0)) (* (- 14) (* s00 s!1 s!1 x!0)) ?x2376 (* (- 6) (* s00 r00 s!1 s!1 s!1 r!2 r!2 r!2)) (* 24 (* s00 s!1 s!1 s!1 r!2 r!2)) (* 4 (* s00 s!1 s!1 s!1)) (* 6 (* r00 ?x3847 ?x3847 ?x3847 ?x3654 ?x3654)) (* (- 4) (* s00 s00 s!1 s!1 s!1)) (* (- 4) (* s00 s00 s!1 s!1 s!1 r!2 r!2)) (* 18 (* s00 r00 r00 s!1 x!0 x!0)) (* 6 (* s00 r00 r00 s!1)) (* (- 8) (* s00 s00 s!1 s!1 s!1 r!2)) (* 4 (* s00 s00 r!2 r!2 x!0 x!0 x!0)) (* 8 (* s00 s00 r!2 x!0 x!0 x!0)) (* 6 (* r00 r00 s!1 r!2 x!0 x!0)) (* 18 (* x00 ?x3847 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654)) (* (- 45) (* r00 s!1 s!1 r!2)) (* (- 270) (* x00 r!2)) (* 54 (* r00 x!0)) (* (- 36) (* r00 r00 s!1)) (* (- 432) (* r00 s!1 r!2)) (* 207 (* s00 r!2)) (* (- 324) (* r00 r00 r!2)) (* (- 198) (* s!1 r!2)) ?x7044 ?x4097 (* 12 (* r00 s!1 s!1 r!2 r!2 x!0)) (* 18 (* s00 s!1)) (* (- 108) (* r00 s!1)) (* 18 (* s00 r00 r!2)) (* (- 18) (* r00 s!1 s!1)) (* 6 (* r00 r00 s!1 s!1 s!1 r!2)) (* 9 (* ?x3847 ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3654)) (* (- 36) (* r00 r00 s!1 x!0)) (* (- 108) (* r00 r00 s!1 r!2 x!0)) (* (- 72) (* r00 r00 s!1 r!2 r!2 x!0)) (* 63 (* s!1 r!2 r!2 x!0 x!0)) ?x4421 (* (- 72) (* s00 s!1 s!1 r!2 r!2 x!0)) (* (- 6) (* r00 ?x3847 ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3654)) (* 6 (* s00 r00 r!2 r!2 r!2 x!0 x!0 x!0)) (* 18 (* x00 r!2 r!2 r!2 x!0 x!0 x!0)) (* 123 (* s!1 r!2 x!0 x!0)) (* (- 36) (* x00 s!1 r!2 r!2 x!0)) (* (- 108) (* r00 x00 r!2 r!2 r!2)) (* 18 (* x00 s!1 s!1)) (* (- 180) (* s!1 r!2 r!2 x!0)) (* (- 36) (* r00 r!2 r!2 x!0 x!0)) (* 12 (* s00 r00 r00 s!1 s!1 s!1 r!2)) (* 36 (* x00 s!1 s!1 r!2)) (* 9 (* s00 s!1 s!1 s!1 r!2 r!2 r!2)) (* (- 18) (* r00 x00 s!1 r!2 r!2)) (* (- 36) (* r00 r!2 x!0 x!0 x!0 x!0)) (* (- 108) (* x00 r!2 r!2 r!2 r!2)) (* 2 (* ?x3847 ?x3847 ?x3654 ?x3654 ?x3654)) (* 54 (* r00 x00 s!1 s!1 x!0)) (* (- 396) (* s!1 r!2 r!2)) (* 162 (* x00 s!1 s!1 r!2 x!0)) (* (- 342) (* s!1 r!2 r!2 r!2)) (* 72 (* r00 s!1 x!0 x!0 x!0)) (* 66 (* s!1 s!1 r!2 r!2)) (* (- 18) (* r00 x!0 x!0 x!0 x!0)) (* 9 (* r00 x!0 x!0)) (* 270 (* r00 r!2 r!2 x!0)) (* 18 (* x00 s!1 s!1 r!2 r!2)) (* (- 36) (* x00 s!1 x!0)) (* (- 2) (* ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3654 ?x3654)) (* (- 18) (* r00 x00 s!1)) (* 36 (* s00 r00 r00 r!2 r!2 r!2)) ?x3074 (* 144 (* r00 s!1 s!1 s!1 r!2 x!0)) (* (- 29) (* s00 s!1 s!1 r!2)) (* 18 (* r00 x00 s!1 s!1)) (* (- 36) (* r00 x00 s!1 x!0)) (* (- 24) (* s00 s00 r!2 r!2 r!2)) (* (- 36) (* r00 x00 s!1 r!2 x!0)) (* (- 19) (* s00 s!1 s!1 r!2 r!2)) (* 4 (* s00 s00 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654)) (* 6 (* s00 r00 r00 s!1 r!2 r!2)) (* 18 (* r00 x00 x!0 x!0)) (* 84 (* s00 s!1 r!2 r!2)) (* 9 (* s00 r00 s!1 x!0 x!0)) (* 18 (* s00 r00 s!1 s!1 r!2 r!2 r!2 x!0)) (* 36 (* s00 r00 r00 s!1 r!2 x!0 x!0)) (* 9 (* s00 r00 r!2 r!2 x!0 x!0 x!0)) (* (- 3) (* s00 r00 x!0 x!0 x!0)) (* (- 270) (* r00 x00 r!2 r!2)) (* (- 72) (* x00 s!1 r!2 x!0)) (* 4 (* s00 s00 s!1 s!1 r!2)) (* 90 (* s00 r00 r00 r!2 r!2)) (* (- 216) (* r00 s!1 r!2 r!2 r!2)) (* 18 (* x00 x!0 x!0)) (* 36 (* x00 r!2 x!0 x!0)) (* 18 (* x00 r!2 r!2 x!0 x!0)) (* 6 (* s00 r00 r00 s!1 s!1 s!1 r!2 r!2)) ?x3072 (* (- 8) (* s00 s00 s!1 x!0)) (* (- 18) (* x00 s!1 s!1 s!1)) ?x8571 (* 12 (* s00 r00 r00 s!1 r!2 x!0)) (* 24 (* s00 s00 s!1 s!1 r!2 x!0)) (* 36 (* s!1 s!1 r!2 r!2 r!2)) (* (- 21) (* s00 r!2 r!2 x!0 x!0)) (* (- 138) (* s!1 s!1 r!2 x!0)) (* 18 (* r00 s!1 r!2 x!0)) (* 42 (* s00 s!1 r!2 r!2 x!0)) (* (- 18) (* x00 s!1 r!2 r!2 r!2)) (* 12 (* r00 r00 s!1 s!1)) (* (- 54) (* x00 s!1 r!2)) (* (- 54) (* x00 s!1 r!2 r!2)) (* (- 48) (* r00 s!1 s!1 r!2 x!0)) (* 3 (* s00 r00 s!1 s!1 r!2)) (* 51 (* s!1 s!1 s!1 r!2)) (* (- 18) (* r00 s!1 s!1 s!1 s!1 r!2 r!2)) (* 54 (* x00 r!2 x!0 x!0 x!0)) (* 18 (* x00 x!0 x!0 x!0)) (* (- 18) (* r00 r!2 r!2 x!0 x!0 x!0 x!0)) (* 12 (* s00 s00 s!1 s!1 r!2 r!2 x!0)) (* (- 18) (* ?x3847 ?x616 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654)) (* (- 72) (* s!1 s!1 r!2 r!2 x!0)) (* (- 90) (* s!1 r!2 r!2 r!2 x!0)) (* 27 (* s!1 s!1 s!1 r!2 r!2)) (* 6 (* s00 r00 s!1 s!1 r!2 r!2)) (* (- 12) (* r00 r00 s!1 s!1 r!2 x!0)) (* (- 6) (* s00 r00 r00 r!2 x!0 x!0)) (* (- 12) (* s00 s00 s!1 x!0 x!0)) (* (- 2) (* ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654 ?x3654 ?x3654)) (* 33 (* s!1 s!1 r!2)) (* (- 6) (* s00 r00 r00 s!1 s!1 r!2)) ?x3071 ?x3088 (* 4 (* s00 s00 x!0 x!0)) (* 4 (* s00 s00 r!2 x!0 x!0)) ?x5124 (* (- 108) (* s!1 r!2 r!2 r!2 r!2)) (* (- 72) (* r00 r00 s!1 r!2 r!2 r!2)) (* (- 216) (* r00 s!1 s!1 r!2 x!0 x!0)) (* (- 12) (* s00 r00 s!1 r!2 r!2 x!0)) (* (- 108) (* s!1 r!2 x!0)) (* (- 2) (* ?x3847 ?x616 ?x616 ?x3654 ?x3654)) (* (- 3) (* s00 r00 x!0 x!0)) (* 51 (* r00 s!1 r!2 x!0 x!0)) ?x7230 ?x491 ?x7260 (* 57 (* r00 s!1 x!0 x!0)) (* (- 3) (* s00 r00 s!1 s!1)) (* (- 108) (* r00 s!1 s!1 x!0 x!0)) (* 3 (* s00 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654)) (* (- 18) (* x00 s!1 s!1 s!1 r!2 r!2 r!2)) (* 72 (* s00 r00 r00 r!2)) (* 36 (* r00 r00 r!2 r!2 x!0 x!0)) (* 54 (* r00 r00 r!2 x!0 x!0)) (* (- 54) (* r00 x00 s!1 x!0 x!0)) (* (- 8) (* s00 s00 s!1 r!2 x!0)) (* 18 (* r00 r00 x!0 x!0)) (* (- 60) (* r00 s!1 s!1 x!0)) (* (- 36) (* r00 s!1 s!1 s!1 s!1 r!2)) ?x6226 (* (- 54) (* x00 s!1 r!2 r!2 r!2 x!0 x!0)) (* 54 (* x00 s!1 s!1 x!0)) (* 162 (* x00 s!1 s!1 r!2 r!2 x!0)) (* (- 6) (* s00 r00 r00 x!0 x!0)) (* (- 54) (* r00 x00 s!1 r!2 r!2 x!0 x!0)) (* 72 (* r00 s!1 s!1 s!1 x!0)) (* (- 108) (* r00 x00 s!1 r!2 x!0 x!0)) (* (- 144) (* r00 r00 s!1 r!2)) (* 12 (* s00 r00 r00 s!1 r!2)) (* (- 324) (* r00 r!2 r!2 r!2 r!2)) (* (- 36) (* r00 s!1 s!1 r!2 r!2 r!2)) (* 3 (* s00 r00 s!1)) (* 4 (* s00 s00 s!1 s!1)) (* (- 60) (* s00 s00 r!2 r!2)) (* (- 54) (* x00 s!1 s!1 s!1 r!2 r!2)) (* (- 63) (* r00 s!1 s!1 r!2 r!2)) (* 6 (* r00 r00 s!1 s!1 s!1)) ?x8568 ?x8574 (* (- 9) (* ?x3847 ?x3847 ?x3847 ?x3654 ?x3654)) (* 30 (* r00 r00 s!1 s!1 r!2 r!2)) (* 27 (* s00 r00 s!1 s!1 r!2 r!2 x!0)) (* 3 (* s00 r00 s!1 s!1 s!1)) (* 9 (* r00 ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3654)) (* (- 6) (* r00 s!1 r!2 r!2 x!0 x!0)) (* (- 54) (* x00 s!1 s!1 s!1 r!2)) (* (- 10) (* s00 s!1 s!1)) (* (- 48) (* s00 s00 r!2)) (* 69 (* s00 s!1 r!2)) (* (- 216) (* r00 x00 r!2)) (* (- 648) (* r00 r00 r!2 r!2 r!2)) (* (- 2) (* s00 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654 ?x3654)) (* (- 540) (* r00 s!1 r!2 r!2)) (* (- 9) (* s00 r00 s!1 s!1 x!0)) (* 54 (* r00 x00 s!1 s!1 r!2 r!2 x!0)) (* 54 (* x00 s!1 s!1 r!2 r!2 r!2 x!0)) (* (- 18) (* s00 r00 r00 s!1 s!1 r!2 r!2 x!0)) (* 33 (* s00 s!1 r!2 r!2 r!2)) (* 9 (* ?x3847 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654 ?x3654)) (* (- 54) (* x00 s!1 x!0 x!0)) (* (- 162) (* x00 s!1 r!2 x!0 x!0)) (* (- 162) (* x00 s!1 r!2 r!2 x!0 x!0)) (* (- 36) (* s00 r00 r00 s!1 s!1 r!2 x!0)) (* (- 12) (* s00 x!0 x!0)) (* (- 33) (* s00 r!2 x!0 x!0)) (* (- 9) (* s00 r00 s!1 r!2 r!2)) (* (- 18) (* s00 r00 r00 s!1 s!1 x!0)) (* (- 72) (* s00 r00 r!2 r!2 r!2)) (* (- 27) (* s00 r00 r!2 r!2)) (* (- 6) (* s00 r00 r00 x!0 x!0 x!0)) (* 432 (* s00 r!2 r!2)) (* (- 12) (* s00 r00 r00 r!2 x!0 x!0 x!0)) (* 387 (* s00 r!2 r!2 r!2)) (* (- 6) (* s00 r00 r00 r!2 r!2 x!0 x!0 x!0)) (* 126 (* s00 r!2 r!2 r!2 r!2)) (* (- 24) (* s00 r!2 r!2 x!0 x!0 x!0)) (* (- 18) (* r00 s!1 s!1 s!1 s!1)) (* 108 (* r00 x00 s!1 s!1 r!2 x!0)) (* (- 216) (* r00 r00 r!2 r!2 r!2 r!2)) (* (- 27) (* s00 s!1 s!1 r!2 r!2 r!2 x!0)) (* (- 9) (* s00 r00 s!1 s!1 s!1 r!2 r!2)) (* (- 6) (* s00 r00 r00 s!1 s!1)) (* (- 8) (* s00 s00 s!1 r!2)) (* 9 (* r00 r!2 x!0 x!0)) (* 18 (* r00 x00 s!1 s!1 r!2)) (* 27 (* s00 s!1 r!2 r!2 r!2 x!0 x!0)) (* 72 (* r00 s!1 r!2 r!2 x!0 x!0 x!0)) (* (- 486) (* x00 r!2 r!2)) (* (- 4) (* s00 s00 s!1 r!2 r!2)) (* (- 4) (* s00 s00 s!1)) (* 72 (* r00 s!1 s!1 s!1 r!2 r!2 x!0)) (* (- 378) (* x00 r!2 r!2 r!2)) (* (- 108) (* r00 s!1 s!1 r!2 r!2 x!0 x!0)) (* (- 180) (* r00 r00 s!1 r!2 r!2)) (* (- 702) (* r00 r00 r!2 r!2)) (* (- 18) (* x00 s!1)) (* (- 27) (* s00 r00 s!1 r!2 r!2 x!0 x!0)) (* 144 (* r00 s!1 r!2 x!0 x!0 x!0)) (* (- 36) (* r00 x00 s!1 s!1 s!1 r!2)) (* 24 (* s00 s!1 x!0)) (* (- 36) (* r00 x00 s!1 r!2)) (* 18 (* r00 x00 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654)) (* (- 486) (* r00 r!2)) (* (- 36) (* r00 r!2 r!2 r!2 x!0 x!0)) (* (- 9) (* s00 ?x3847 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654)) (* (- 6) (* r00 s!1 s!1 s!1 r!2 r!2)) (* (- 6) (* r00 ?x3847 ?x616 ?x616 ?x616 ?x3654 ?x3654 ?x3654 ?x3654)) (* (- 1053) (* r00 r!2 r!2)) (* (- 972) (* r00 r!2 r!2 r!2)) (* 12 (* s00 r00 r00 s!1 x!0)))))
 (let (($x3366 (= ?x9099 (- 27))))
 (let (($x10801 (not $x3366)))
 (let ((?x4026 (* r00 r00 s!1)))
 (let ((?x7312 (* 36 ?x4026)))
 (let ((?x5010 (* (- 9) s!1)))
 (let ((?x1410 (* x00 x00)))
 (let ((?x6275 (* 108 ?x1410)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x4457 (* 16 ?x1248)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x1896 (* (- 432) ?x946)))
 (let ((?x869 (* s00 x00)))
 (let ((?x3944 (* (- 108) ?x869)))
 (let ((?x6488 (* (- 36) ?x711)))
 (let ((?x5125 (* 51 ?x655)))
 (let ((?x3047 (* 108 ?x586)))
 (let ((?x137 (* 9 s00)))
 (let ((?x10749 (+ ?x137 (* (- 54) ?x490) (* 216 (* s00 r00 x00)) ?x3047 ?x5125 ?x6488 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x3944 ?x1896 (* 216 (* s00 r00 r00 r00)) ?x4457 ?x6275 (* (- 108) ?x2477) ?x5010 (* 108 ?x2815) (* (- 108) (* r00 x!0)) ?x7312 (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)) (* 108 (* s00 x!0)) (* 432 (* r00 r00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 4) ?x6887) (* (- 216) (* s00 r00 x!0)) (* 15 ?x7772) (* (- 216) (* r00 r00 r00 s!1)) (* 108 (* s00 r00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* 108 (* x00 s!1)))))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x8481 (* 36 ?x941)))
 (let ((?x8532 (* (- 6) ?x869)))
 (let ((?x8533 (* 15 ?x655)))
 (let ((?x9013 (* 54 ?x586)))
 (let ((?x8167 (+ ?x137 (* (- 24) ?x490) ?x9013 ?x8533 ?x6488 (* 2 (* s00 s00 r00)) (* (- 36) (* r00 r!2 x!0)) ?x8532 ?x8481 (* (- 6) ?x2477) ?x5010 (* 54 (* x00 r!2)) (* (- 54) (* r00 x!0)) ?x7312 (* (- 24) (* s00 r!2)) (* 24 (* s!1 r!2)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* (- 54) ?x5559) (* (- 2) (* s!1 s!1 r!2)) (* (- 3) ?x7772) (* 2 (* s00 r00 s!1)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 s!1 r!2)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* 6 (* x00 s!1)))))
 (let (($x8196 (= ?x8167 0)))
 (let ((?x5250 (* 4 ?x655)))
 (let ((?x7710 (* 18 ?x586)))
 (let ((?x4269 (+ ?x44 (* (- 9) ?x490) ?x7710 ?x5250 (* (- 6) ?x711) ?x587 (* 18 (* x00 r!2)) (* (- 18) (* r00 x!0)) (* 6 ?x4026) (* (- 6) (* r00 s!1 r!2)) (* (- 9) (* s00 r!2)) (* 9 (* s!1 r!2)) (* (- 2) (* s00 s!1)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)) (* (- 18) ?x5559) (* (- 2) ?x7772))))
 (let (($x4270 (= ?x4269 0)))
 (let ((?x8773 (* (- 3) ?x365)))
 (let ((?x4054 (+ s00 ?x8773 ?x6250 (* 3 ?x6199))))
 (let (($x4048 (= ?x4054 0)))
 (let (($x3353 (and $x4048 $x4017 $x4270 $x8196 (= ?x10749 0) $x10801)))
 (let ((?x3854 (+ 3 ?x3849 s!1)))
 (let ((?x1577 (* x!0 r00)))
 (let ((?x3040 (* 54 ?x1577)))
 (let ((?x5557 (* s!1 r00 r00)))
 (let ((?x7801 (* (- 36) ?x5557)))
 (let ((?x4070 (+ ?x6230 ?x3069 ?x3071 ?x9454 ?x12200 ?x9458 ?x3072 ?x12201 (* (- 198) (* r!2 s!1)) (* (- 324) (* r!2 r00 r00)) (* 207 (* r!2 s00)) ?x605 ?x615 ?x6226 ?x3074 (* (- 432) (* r!2 s!1 r00)) (* 216 (* r!2 x!0 r00)) ?x7801 (* (- 216) (* r!2 r!2 r!2 r!2 r00 r00)) ?x9467 ?x3040 ?x9470 (* (- 18) (* s!1 s!1 r00)) (* (- 270) (* r!2 x00)) (* (- 27) (* r!2 r!2 r!2 s!1 s!1 x!0 s00)) (* 18 (* s!1 s00)) (* (- 108) (* s!1 r00)) (* (- 18) (* s!1 x00)) (* 18 (* r!2 s00 r00)) (* 3 (* s!1 s00 r00)) ?x3088 (* 33 (* r!2 s!1 s!1)) ?x6235 (* (- 48) (* r!2 s00 s00)) (* 18 (* r!2 r!2 s!1 x!0 x!0 s00 r00 r00)) ?x3109 (* 69 (* r!2 s!1 s00)) (* (- 10) (* s!1 s!1 s00)) (* (- 216) (* r!2 r00 x00)) (* 18 (* s!1 x!0 x!0 s00 r00 r00)) (* 6 (* r00 ?x3847 ?x3847 ?x3847 ?x3854 ?x3854)) (* 12 (* s!1 s!1 r00 r00)) (* (- 18) (* r!2 r!2 s!1 r00 x00)) (* (- 12) (* s!1 x!0 x!0 s00 s00)) (* 12 (* r!2 r!2 s!1 s!1 x!0 s00 s00)) (* 24 (* r!2 s!1 s!1 x!0 s00 s00)) (* 12 (* s!1 s!1 x!0 s00 s00)) (* (- 18) (* r!2 x!0 x!0 x!0 r00)) (* (- 24) (* r!2 s!1 x!0 x!0 s00 s00)) (* (- 18) (* x!0 x!0 x!0 r00)) (* (- 12) (* r!2 r!2 s!1 x!0 x!0 s00 s00)) (* 4 (* x!0 x!0 x!0 s00 s00)) (* 8 (* r!2 x!0 x!0 x!0 s00 s00)) (* 4 (* r!2 r!2 x!0 x!0 x!0 s00 s00)) (* (- 4) (* r!2 r!2 s!1 s!1 s!1 s00 s00)) (* (- 8) (* r!2 s!1 s!1 s!1 s00 s00)) (* (- 4) (* s!1 s!1 s!1 s00 s00)) (* 54 (* r!2 r!2 x!0 x!0 x!0 x00)) (* 54 (* r!2 x!0 x!0 x!0 x00)) (* 18 (* x!0 x!0 x!0 x00)) (* 6 (* r00 s00 ?x3847 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854)) (* 84 (* r!2 r!2 s!1 s00)) (* (- 36) (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* 18 (* r!2 r!2 r!2 x!0 x!0 x!0 x00)) (* (- 54) (* r!2 r!2 r!2 s!1 x!0 x!0 x00)) (* (- 162) (* r!2 r!2 s!1 x!0 x!0 x00)) (* (- 162) (* r!2 s!1 x!0 x!0 x00)) (* (- 54) (* s!1 x!0 x!0 x00)) (* 54 (* r!2 r!2 r!2 s!1 s!1 x!0 x00)) (* 162 (* r!2 r!2 s!1 s!1 x!0 x00)) (* 162 (* r!2 s!1 s!1 x!0 x00)) (* 54 (* s!1 s!1 x!0 x00)) (* (- 54) (* r!2 s!1 s!1 s!1 x00)) (* (- 18) (* s!1 s!1 s!1 x00)) (* (- 54) (* r!2 r!2 s!1 s!1 s!1 x00)) (* (- 18) (* r!2 r!2 r!2 s!1 s!1 s!1 x00)) (* 72 (* r!2 s00 r00 r00)) (* 90 (* r!2 r!2 s00 r00 r00)) (* 36 (* r!2 r!2 r!2 s00 r00 r00)) (* 6 (* s!1 s00 r00 r00)) (* 12 (* r!2 s!1 s00 r00 r00)) (* 6 (* r!2 r!2 s!1 s00 r00 r00)) (* 144 (* r!2 s!1 s!1 s!1 x!0 r00)) ?x8568 ?x8571 ?x8574 (* (- 29) (* r!2 s!1 s!1 s00)) (* 24 (* s!1 x!0 s00)) (* 66 (* r!2 s!1 x!0 s00)) (* (- 12) (* x!0 x!0 s00)) (* (- 33) (* r!2 x!0 x!0 s00)) (* (- 9) (* r!2 r!2 s!1 s00 r00)) (* (- 18) (* r!2 r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 18) (* s!1 s!1 x!0 s00 r00 r00)) (* (- 72) (* r!2 r!2 r!2 s00 r00)) (* (- 27) (* r!2 r!2 s00 r00)) (* (- 6) (* x!0 x!0 x!0 s00 r00 r00)) (* 33 (* r!2 r!2 r!2 s!1 s00)) (* 432 (* r!2 r!2 s00)) (* (- 12) (* r!2 x!0 x!0 x!0 s00 r00 r00)) (* 387 (* r!2 r!2 r!2 s00)) (* (- 6) (* r!2 r!2 x!0 x!0 x!0 s00 r00 r00)) (* 126 (* r!2 r!2 r!2 r!2 s00)) (* 9 (* ?x3847 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854 ?x3854)) (* (- 24) (* r!2 r!2 x!0 x!0 x!0 s00)) (* (- 21) (* r!2 x!0 x!0 x!0 s00)) (* (- 6) (* x!0 x!0 x!0 s00)) (* 72 (* r!2 r!2 s!1 x!0 x!0 s00)) (* (- 9) (* r00 s00 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854)) (* 61 (* r!2 s!1 x!0 x!0 s00)) (* 16 (* s!1 x!0 x!0 s00)) (* 4 (* s!1 s!1 s!1 s00)) (* 19 (* r!2 s!1 s!1 s!1 s00)) (* 24 (* r!2 r!2 s!1 s!1 s!1 s00)) (* (- 14) (* s!1 s!1 x!0 s00)) (* (- 59) (* r!2 s!1 s!1 x!0 s00)) (* (- 72) (* r!2 r!2 s!1 s!1 x!0 s00)) (* (- 18) (* s!1 s!1 s!1 s!1 r00)) (* 108 (* r!2 s!1 s!1 x!0 r00 x00)) (* 54 (* s!1 s!1 x!0 r00 x00)) (* (- 18) (* r!2 r!2 s!1 s!1 s!1 r00 x00)) (* (- 36) (* r!2 s!1 s!1 s!1 r00 x00)) (* (- 18) (* s!1 s!1 s!1 r00 x00)) (* 54 (* r!2 r!2 s!1 s!1 x!0 r00 x00)) (* (- 108) (* s!1 s!1 x!0 x!0 r00)) (* (- 54) (* s!1 x!0 x!0 r00 x00)) (* (- 108) (* r!2 s!1 x!0 x!0 r00 x00)) (* (- 54) (* r!2 r!2 s!1 x!0 x!0 r00 x00)) (* 18 (* x!0 x!0 x!0 r00 x00)) (* 36 (* r!2 x!0 x!0 x!0 r00 x00)) (* 18 (* r!2 r!2 x!0 x!0 x!0 r00 x00)) (* 6 (* s!1 s!1 s!1 s00 r00 r00)) (* 12 (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* 72 (* s!1 s!1 s!1 x!0 r00)) (* (- 60) (* r!2 r!2 s00 s00)) (* 18 (* r!2 x!0 x!0 r00 x00)) (* (- 6) (* r!2 r!2 r!2 s!1 s00 r00)) (* 18 (* r!2 s!1 s!1 r00 x00)) (* 18 (* s!1 s!1 r00 x00)) (* (- 36) (* s!1 x!0 r00 x00)) (* (- 24) (* r!2 r!2 r!2 s00 s00)) (* (- 36) (* r!2 s!1 x!0 r00 x00)) (* (- 19) (* r!2 r!2 s!1 s!1 s00)) (* 4 (* s00 s00 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854)) (* 18 (* x!0 x!0 r00 x00)) (* (- 702) (* r!2 r!2 r00 r00)) (* (- 648) (* r!2 r!2 r!2 r00 r00)) (* (- 144) (* r!2 s!1 r00 r00)) (* (- 180) (* r!2 r!2 s!1 r00 r00)) (* (- 108) (* r!2 r!2 s!1 s!1 x!0 x!0 r00)) (* (- 378) (* r!2 r!2 r!2 x00)) (* 72 (* r!2 r!2 s!1 s!1 s!1 x!0 r00)) (* (- 4) (* s!1 s00 s00)) (* (- 8) (* r!2 s!1 s00 s00)) (* (- 4) (* r!2 r!2 s!1 s00 s00)) (* (- 486) (* r!2 r!2 x00)) (* 72 (* r!2 r!2 s!1 x!0 x!0 x!0 r00)) (* 27 (* r!2 r!2 r!2 s!1 x!0 x!0 s00)) (* (- 6) (* r!2 r!2 r!2 s!1 s!1 s!1 s00 r00)) (* (- 9) (* s!1 s!1 x!0 s00 r00)) (* 144 (* r!2 s!1 x!0 x!0 x!0 r00)) (* (- 9) (* r!2 r!2 s!1 s!1 s!1 s00 r00)) (* 3 (* s!1 s!1 s!1 s00 r00)) (* 27 (* r!2 r!2 s!1 s!1 x!0 s00 r00)) (* 18 (* r!2 r!2 r!2 s!1 s!1 x!0 s00 r00)) (* 9 (* s!1 x!0 x!0 s00 r00)) (* (- 27) (* r!2 r!2 s!1 x!0 x!0 s00 r00)) (* (- 18) (* r!2 r!2 r!2 s!1 x!0 x!0 s00 r00)) (* (- 9) (* r!2 r!2 r!2 x!0 x!0 x!0 s00)) (* 6 (* r!2 r!2 s!1 s!1 s!1 s00 r00 r00)) (* (- 6) (* r00 ?x3847 ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3854)) (* (- 6) (* r00 r00 s00 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854)) (* 36 (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* (- 270) (* r!2 r!2 r00 x00)) (* (- 3) (* x!0 x!0 x!0 s00 r00)) (* 9 (* r!2 r!2 x!0 x!0 x!0 s00 r00)) (* (- 108) (* r!2 r!2 r!2 r00 x00)) (* (- 18) (* s!1 r00 x00)) (* 6 (* r!2 r!2 r!2 x!0 x!0 x!0 s00 r00)) (* (- 36) (* r!2 s!1 r00 x00)) (* (- 216) (* r!2 s!1 s!1 x!0 x!0 r00)) (* (- 18) (* x!0 x!0 x!0 x!0 r00)) (* 66 (* r!2 r!2 s!1 s!1)) ?x7230 (* (- 396) (* r!2 r!2 s!1)) ?x491 (* (- 342) (* r!2 r!2 r!2 s!1)) (* 72 (* s!1 x!0 x!0 x!0 r00)) (* (- 108) (* r!2 r!2 r!2 r!2 x00)) (* 2 (* ?x3847 ?x3847 ?x3854 ?x3854 ?x3854)) (* (- 36) (* r!2 x!0 x!0 x!0 x!0 r00)) (* (- 18) (* r!2 r!2 x!0 x!0 x!0 x!0 r00)) ?x7260 (* 123 (* r!2 s!1 x!0 x!0)) (* 12 (* r!2 s!1 x!0 s00 r00 r00)) (* 18 (* r!2 r!2 x!0 x!0 x00)) (* 36 (* r!2 x!0 x!0 x00)) (* 18 (* x!0 x!0 x00)) (* (- 36) (* r!2 r!2 s!1 x!0 x00)) (* (- 72) (* r!2 s!1 x!0 x00)) (* (- 36) (* s!1 x!0 x00)) (* 18 (* r!2 r!2 s!1 s!1 x00)) (* 9 (* r!2 r!2 r!2 s!1 s!1 s!1 s00)) (* 36 (* r!2 s!1 s!1 x00)) (* 18 (* s!1 s!1 x00)) (* (- 2) (* ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3854 ?x3854)) (* 63 (* r!2 r!2 s!1 x!0 x!0)) (* (- 2) (* ?x3847 ?x616 ?x616 ?x3854 ?x3854)) (* (- 108) (* r!2 s!1 x!0)) (* 51 (* r!2 s!1 s!1 s!1)) (* (- 18) (* r!2 r!2 s!1 s!1 s!1 s!1 r00)) (* (- 180) (* r!2 r!2 s!1 x!0)) (* 42 (* r!2 r!2 s!1 x!0 s00)) ?x4421 (* (- 138) (* r!2 s!1 s!1 x!0)) ?x7044 ?x5124 (* (- 21) (* r!2 r!2 x!0 x!0 s00)) (* 36 (* r!2 r!2 r!2 s!1 s!1)) (* 27 (* r!2 r!2 s!1 s!1 s!1)) (* (- 90) (* r!2 r!2 r!2 s!1 x!0)) (* (- 72) (* r!2 r!2 s!1 s!1 x!0)) ?x2376 (* 12 (* s!1 x!0 s00 r00 r00)) (* (- 6) (* s!1 s!1 s00 r00 r00)) (* (- 6) (* r!2 s!1 s!1 s00 r00 r00)) ?x5041 (* (- 108) (* r!2 r!2 r!2 r!2 s!1)) ?x5037 ?x5033 (* (- 54) (* r!2 s!1 x00)) (* (- 54) (* r!2 r!2 s!1 x00)) (* (- 18) (* r!2 r!2 r!2 s!1 x00)) (* 6 (* r00 r00 ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3854)) (* (- 2) (* s00 ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3854)) (* (- 6) (* r!2 x!0 x!0 s00 r00 r00)) (* 3 (* s00 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854)) (* (- 6) (* x!0 x!0 s00 r00 r00)) (* (- 18) (* ?x3847 ?x616 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854)) (* 6 (* r00 r00 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854 ?x3854)) (* 6 (* r!2 s!1 x!0 x!0 r00 r00)) (* 6 (* s!1 x!0 x!0 r00 r00)) (* 36 (* r!2 r!2 x!0 x!0 r00 r00)) (* 54 (* r!2 x!0 x!0 r00 r00)) (* 18 (* x!0 x!0 r00 r00)) (* (- 12) (* r!2 s!1 s!1 x!0 r00 r00)) (* (- 12) (* s!1 s!1 x!0 r00 r00)) (* (- 72) (* r!2 r!2 s!1 x!0 r00 r00)) (* (- 108) (* r!2 s!1 x!0 r00 r00)) (* (- 36) (* s!1 x!0 r00 r00)) (* 9 (* ?x3847 ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3854)) (* 6 (* r!2 s!1 s!1 s!1 r00 r00)) (* 6 (* s!1 s!1 s!1 r00 r00)) (* 30 (* r!2 r!2 s!1 s!1 r00 r00)) (* 42 (* r!2 s!1 s!1 r00 r00)) (* (- 3) (* ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3854)) (* (- 2) (* s00 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854 ?x3854)) (* (- 3) (* s!1 s!1 s00 r00)) (* 3 (* r!2 s!1 s!1 s00 r00)) (* 6 (* s!1 x!0 s00 r00)) (* (- 6) (* r!2 s!1 x!0 s00 r00)) (* (- 3) (* ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854 ?x3854)) (* 3 (* r!2 x!0 x!0 s00 r00)) (* (- 3) (* x!0 x!0 s00 r00)) (* 6 (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 12) (* r!2 r!2 s!1 x!0 s00 r00)) (* 6 (* r!2 r!2 x!0 x!0 s00 r00)) (* (- 9) (* ?x3847 ?x3847 ?x3847 ?x3854 ?x3854)) (* (- 36) (* r!2 r!2 r!2 r!2 s00 r00)) (* 4 (* s!1 s!1 s00 s00)) (* (- 8) (* s!1 x!0 s00 s00)) (* (- 2) (* ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854 ?x3854 ?x3854)) (* (- 72) (* r!2 r!2 r!2 s!1 r00 r00)) (* 4 (* r!2 x!0 x!0 s00 s00)) (* 4 (* x!0 x!0 s00 s00)) (* (- 8) (* r!2 s!1 x!0 s00 s00)) (* 4 (* r!2 s!1 s!1 s00 s00)) (* (- 216) (* r!2 r!2 r!2 s!1 r00)) (* (- 540) (* r!2 r!2 s!1 r00)) (* (- 45) (* r!2 s!1 s!1 r00)) (* (- 63) (* r!2 r!2 s!1 s!1 r00)) (* 270 (* r!2 r!2 x!0 r00)) (* 108 (* r!2 r!2 r!2 x!0 r00)) (* 18 (* r!2 s!1 x!0 r00)) (* 90 (* r!2 r!2 s!1 x!0 r00)) (* 21 (* s!1 s!1 s!1 r00)) (* 15 (* r!2 s!1 s!1 s!1 r00)) (* (- 36) (* r!2 s!1 s!1 s!1 s!1 r00)) (* (- 60) (* s!1 s!1 x!0 r00)) (* (- 48) (* r!2 s!1 s!1 x!0 r00)) (* 9 (* x!0 x!0 r00)) (* 9 (* r!2 x!0 x!0 r00)) (* (- 36) (* r!2 r!2 x!0 x!0 r00)) (* 57 (* s!1 x!0 x!0 r00)) (* 51 (* r!2 s!1 x!0 x!0 r00)) (* (- 18) (* r00 ?x616 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854)) (* (- 9) (* s00 ?x3847 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854)) (* 18 (* x00 ?x3847 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854)) ?x4097 (* (- 6) (* r00 ?x3847 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854 ?x3854)) (* 18 (* r00 x00 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854)) (* 9 (* r00 ?x616 ?x616 ?x616 ?x3854 ?x3854 ?x3854 ?x3854)) (* (- 486) (* r!2 r00)) (* (- 1053) (* r!2 r!2 r00)) (* (- 972) (* r!2 r!2 r!2 r00)) (* (- 324) (* r!2 r!2 r!2 r!2 r00)) (* (- 36) (* r!2 r!2 r!2 s!1 s!1 r00)) (* 72 (* r!2 r!2 r!2 s!1 x!0 r00)) (* (- 36) (* r!2 r!2 r!2 x!0 x!0 r00)) (* (- 6) (* r!2 r!2 s!1 s!1 s!1 r00)) (* 12 (* r!2 r!2 s!1 s!1 x!0 r00)) (* (- 6) (* r!2 r!2 s!1 x!0 x!0 r00)) (* 9 (* r00 ?x3847 ?x3847 ?x616 ?x616 ?x616 ?x3854)))))
 (let ((?x1440 (* (- 108) ?x1410)))
 (let ((?x1439 (* (- 16) ?x1248)))
 (let ((?x1120 (* s00 r00 r00 r00)))
 (let ((?x1435 (* (- 216) ?x1120)))
 (let ((?x947 (* 432 ?x946)))
 (let ((?x1193 (* 108 ?x869)))
 (let ((?x795 (* s00 s00 r00 r00)))
 (let ((?x796 (* 36 ?x795)))
 (let ((?x732 (* s00 s00 r00)))
 (let ((?x1076 (* 108 ?x732)))
 (let ((?x1064 (* 36 ?x711)))
 (let ((?x1429 (* (- 51) ?x655)))
 (let ((?x1426 (* (- 108) ?x586)))
 (let ((?x577 (* s00 r00 x00)))
 (let ((?x1425 (* (- 216) ?x577)))
 (let ((?x584 (* 54 ?x490)))
 (let ((?x1051 (* (- 9) s00)))
 (let ((?x1730 (* 9 s!1)))
 (let ((?x2999 (+ ?x1730 ?x1051 ?x584 ?x1425 ?x1426 (* (- 15) ?x7772) ?x7801 ?x1429 (* (- 108) (* x!0 s00)) (* 108 ?x1577) (* 216 (* s!1 r00 r00 r00)) ?x1064 ?x1076 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x796 (* (- 108) (* s!1 s00 r00)) (* 4 ?x6887) ?x1193 (* 108 ?x2477) (* (- 108) ?x2815) ?x947 (* 12 (* s!1 s!1 s00)) ?x1435 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1439 (* 216 (* x!0 x00)) ?x1440)))
 (let ((?x954 (* (- 36) ?x941)))
 (let ((?x870 (* 6 ?x869)))
 (let ((?x760 (* (- 2) ?x732)))
 (let ((?x980 (* (- 15) ?x655)))
 (let ((?x628 (* 24 ?x490)))
 (let ((?x7798 (+ ?x1730 ?x1051 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x628 ?x615 ?x6226 (* 54 ?x5559) (* 36 (* r!2 x!0 r00)) ?x7801 ?x980 (* (- 6) (* x!0 s00)) ?x3040 ?x1064 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x760 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x870 (* 2 (* r!2 s!1 s!1)) (* 6 ?x2477) (* (- 4) (* r!2 s00 s00)) ?x954 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x712 (* 6 ?x711)))
 (let ((?x668 (* (- 4) ?x655)))
 (let ((?x600 (* (- 18) ?x586)))
 (let ((?x442 (* (- 3) s00)))
 (let ((?x3020 (+ (* 3 s!1) ?x442 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x605 ?x600 (* 2 ?x7772) (* 18 ?x5559) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x5557) ?x668 (* 18 ?x1577) ?x712 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x8128 (+ ?x5758 ?x587 ?x606 ?x44 ?x564 ?x565 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x568 ?x534)))
 (let (($x4068 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x6199) (* 3 ?x365)) 0) (= ?x8128 0) (= ?x3020 0) (= ?x7798 0) (= ?x2999 0) (not (= ?x4070 (- 27))))))
 (let (($x7379 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1447 (+ 3 ?x211 s)))
 (let ((?x344 (* (- 1) s)))
 (let ((?x1453 (+ ?x344 x)))
 (let ((?x1460 (+ 1 r)))
 (let ((?x10030 (* 108 (* r r r x r00))))
 (let ((?x10029 (* 270 (* r r x r00))))
 (let ((?x10019 (* 4 (* r s s s00 s00))))
 (let ((?x10018 (* (- 8) (* r s x s00 s00))))
 (let ((?x10010 (* 4 (* x x s00 s00))))
 (let ((?x10009 (* 4 (* r x x s00 s00))))
 (let ((?x10008 (* (- 8) (* s x s00 s00))))
 (let ((?x10007 (* 4 (* s s s00 s00))))
 (let ((?x10005 (* 6 (* r r x x s00 r00))))
 (let ((?x10004 (* (- 12) (* r r s x s00 r00))))
 (let ((?x10003 (* 6 (* r r s s s00 r00))))
 (let ((?x9994 (* 6 (* s s s r00 r00))))
 (let ((?x9993 (* 6 (* r s s s r00 r00))))
 (let ((?x9992 (* (- 36) (* s x r00 r00))))
 (let ((?x9991 (* (- 108) (* r s x r00 r00))))
 (let ((?x9990 (* (- 72) (* r r s x r00 r00))))
 (let ((?x9989 (* (- 12) (* s s x r00 r00))))
 (let ((?x9988 (* (- 12) (* r s s x r00 r00))))
 (let ((?x9987 (* 18 (* x x r00 r00))))
 (let ((?x9986 (* 54 (* r x x r00 r00))))
 (let ((?x9985 (* 36 (* r r x x r00 r00))))
 (let ((?x9984 (* 6 (* s x x r00 r00))))
 (let ((?x9983 (* 6 (* r s x x r00 r00))))
 (let ((?x9974 (* (- 18) (* r r r s x00))))
 (let ((?x9952 (* 378 (* r r r x))))
 (let ((?x9951 (* 486 (* r r x))))
 (let ((?x9950 (* (- 108) (* r r r r s))))
 (let ((?x9949 (* 108 (* r r r r x))))
 (let ((?x9947 (* 54 (* r r r x x))))
 (let ((?x9945 (* (- 90) (* r r r s x))))
 (let ((?x9943 (* 36 (* r r r s s))))
 (let ((?x9935 (* 18 (* s s x00))))
 (let ((?x9934 (* 36 (* r s s x00))))
 (let ((?x9933 (* 18 (* r r s s x00))))
 (let ((?x9932 (* (- 36) (* s x x00))))
 (let ((?x9931 (* (- 72) (* r s x x00))))
 (let ((?x9930 (* (- 36) (* r r s x x00))))
 (let ((?x6547 (* 18 (* x x x00))))
 (let ((?x9928 (* 36 (* r x x x00))))
 (let ((?x6541 (* 18 (* r r x x x00))))
 (let ((?x9894 (* 2 (* ?x1460 ?x1460 ?x1447 ?x1447 ?x1447))))
 (let ((?x9886 (* (- 342) (* r r r s))))
 (let ((?x9884 (* 108 (* r r r r))))
 (let ((?x9883 (* (- 396) (* r r s))))
 (let ((?x9881 (* 324 (* r r r))))
 (let ((?x9842 (* 6 (* r r r x x x s00 r00))))
 (let ((?x9838 (* (- 18) (* r r r s x x s00 r00))))
 (let ((?x9834 (* 18 (* r r r s s x s00 r00))))
 (let ((?x9827 (* (- 6) (* r r r s s s s00 r00))))
 (let ((?x9767 (* (- 4) (* r r s s00 s00))))
 (let ((?x9763 (* (- 4) (* s s00 s00))))
 (let ((?x9729 (* 18 (* x x r00 x00))))
 (let ((?x9728 (* (- 36) (* r s x r00 x00))))
 (let ((?x9727 (* (- 36) (* s x r00 x00))))
 (let ((?x9726 (* 18 (* s s r00 x00))))
 (let ((?x9725 (* 18 (* r s s r00 x00))))
 (let ((?x9724 (* 18 (* r x x r00 x00))))
 (let ((?x9722 (* 18 (* r r x x x r00 x00))))
 (let ((?x9721 (* 36 (* r x x x r00 x00))))
 (let ((?x9720 (* 18 (* x x x r00 x00))))
 (let ((?x9719 (* (- 54) (* r r s x x r00 x00))))
 (let ((?x9718 (* (- 108) (* r s x x r00 x00))))
 (let ((?x9717 (* (- 54) (* s x x r00 x00))))
 (let ((?x9716 (* 54 (* r r s s x r00 x00))))
 (let ((?x9714 (* (- 18) (* s s s r00 x00))))
 (let ((?x9713 (* (- 36) (* r s s s r00 x00))))
 (let ((?x9712 (* (- 18) (* r r s s s r00 x00))))
 (let ((?x9711 (* 54 (* s s x r00 x00))))
 (let ((?x9710 (* 108 (* r s s x r00 x00))))
 (let ((?x9632 (* 126 (* r r r r s00))))
 (let ((?x9627 (* 33 (* r r r s s00))))
 (let ((?x9584 (* (- 18) (* r r x x x))))
 (let ((?x9581 (* (- 18) (* x x x))))
 (let ((?x9552 (* 6 (* r r s s00 r00 r00))))
 (let ((?x9551 (* 12 (* r s s00 r00 r00))))
 (let ((?x9550 (* 6 (* s s00 r00 r00))))
 (let ((?x9549 (* 36 (* r r r s00 r00 r00))))
 (let ((?x9548 (* 90 (* r r s00 r00 r00))))
 (let ((?x9547 (* 72 (* r s00 r00 r00))))
 (let ((?x9530 (* (- 18) (* r r r s s s x00))))
 (let ((?x9529 (* (- 54) (* r r s s s x00))))
 (let ((?x9528 (* (- 18) (* s s s x00))))
 (let ((?x9527 (* (- 54) (* r s s s x00))))
 (let ((?x9526 (* 54 (* s s x x00))))
 (let ((?x9525 (* 162 (* r s s x x00))))
 (let ((?x9524 (* 162 (* r r s s x x00))))
 (let ((?x9523 (* 54 (* r r r s s x x00))))
 (let ((?x9522 (* (- 54) (* s x x x00))))
 (let ((?x9521 (* (- 162) (* r s x x x00))))
 (let ((?x9360 (* (- 162) (* r r s x x x00))))
 (let ((?x9359 (* (- 54) (* r r r s x x x00))))
 (let ((?x2215 (* 18 (* r r r x x x x00))))
 (let ((?x9361 (* 84 (* r r s s00))))
 (let ((?x2026 (* 18 (* x x x x00))))
 (let ((?x9371 (* 54 (* r x x x x00))))
 (let ((?x9374 (* 54 (* r r x x x x00))))
 (let ((?x9505 (* (- 4) (* s s s s00 s00))))
 (let ((?x9506 (* (- 8) (* r s s s s00 s00))))
 (let ((?x9503 (* (- 4) (* r r s s s s00 s00))))
 (let ((?x9504 (* 4 (* r r x x x s00 s00))))
 (let ((?x9501 (* 8 (* r x x x s00 s00))))
 (let ((?x9502 (* 4 (* x x x s00 s00))))
 (let ((?x9499 (* (- 12) (* r r s x x s00 s00))))
 (let ((?x9500 (* (- 24) (* r s x x s00 s00))))
 (let ((?x9497 (* 12 (* s s x s00 s00))))
 (let ((?x9498 (* 24 (* r s s x s00 s00))))
 (let ((?x9495 (* 12 (* r r s s x s00 s00))))
 (let ((?x9496 (* (- 12) (* s x x s00 s00))))
 (let ((?x918 (* x x)))
 (let ((?x9477 (* 18 ?x918)))
 (let ((?x877 (* s x)))
 (let ((?x6494 (* (- 18) ?x877)))
 (let ((?x788 (* s x00)))
 (let ((?x9471 (* (- 18) ?x788)))
 (let ((?x752 (* s s00)))
 (let ((?x9472 (* 18 ?x752)))
 (let ((?x711 (* s00 r00 r00)))
 (let ((?x9470 (* 18 ?x711)))
 (let ((?x681 (* x r00)))
 (let ((?x1031 (* 54 ?x681)))
 (let ((?x655 (* s00 s00)))
 (let ((?x9467 (* (- 12) ?x655)))
 (let ((?x629 (* s r00 r00)))
 (let ((?x928 (* (- 36) ?x629)))
 (let ((?x622 (* r x r00)))
 (let ((?x9468 (* 216 ?x622)))
 (let ((?x613 (* r x)))
 (let ((?x9466 (* 270 ?x613)))
 (let ((?x609 (* s s)))
 (let ((?x633 (* 3 ?x609)))
 (let ((?x586 (* r00 x00)))
 (let ((?x615 (* (- 54) ?x586)))
 (let ((?x490 (* s00 r00)))
 (let ((?x605 (* 9 ?x490)))
 (let ((?x409 (* r s)))
 (let ((?x9462 (* (- 198) ?x409)))
 (let ((?x365 (* r00 r00)))
 (let ((?x12201 (* (- 54) ?x365)))
 (let ((?x353 (* r r)))
 (let ((?x9460 (* 351 ?x353)))
 (let ((?x9458 (* (- 54) x00)))
 (let ((?x12200 (* (- 81) r00)))
 (let ((?x9454 (* 36 s00)))
 (let ((?x7179 (* 54 x)))
 (let ((?x9451 (* (- 36) s)))
 (let ((?x9452 (* 162 r)))
 (let ((?x12397 (+ ?x9452 ?x9451 ?x7179 ?x9454 ?x12200 ?x9458 ?x9460 ?x12201 ?x9462 (* (- 324) (* r r00 r00)) (* 207 (* r s00)) ?x605 ?x615 ?x633 ?x9466 (* (- 432) (* r s r00)) ?x9468 ?x928 (* (- 216) (* r r r r r00 r00)) ?x9467 ?x1031 ?x9470 (* (- 18) (* s s r00)) (* (- 270) (* r x00)) (* (- 27) (* r r r s s x s00)) ?x9472 (* (- 108) (* s r00)) ?x9471 (* 18 (* r s00 r00)) (* 3 (* s s00 r00)) (* 24 (* s s s)) (* 33 (* r s s)) ?x6494 (* (- 48) (* r s00 s00)) (* 18 (* r r s x x s00 r00 r00)) ?x9477 (* 69 (* r s s00)) (* (- 10) (* s s s00)) (* (- 216) (* r r00 x00)) (* 18 (* s x x s00 r00 r00)) (* 6 (* r00 ?x1460 ?x1460 ?x1460 ?x1447 ?x1447)) (* 12 (* s s r00 r00)) (* (- 18) (* r r s r00 x00)) ?x9496 ?x9495 ?x9498 ?x9497 (* (- 18) (* r x x x r00)) ?x9500 (* (- 18) (* x x x r00)) ?x9499 ?x9502 ?x9501 ?x9504 ?x9503 ?x9506 ?x9505 ?x9374 ?x9371 ?x2026 (* 6 (* r00 s00 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) ?x9361 (* (- 36) (* r s s x s00 r00 r00)) ?x2215 ?x9359 ?x9360 ?x9521 ?x9522 ?x9523 ?x9524 ?x9525 ?x9526 ?x9527 ?x9528 ?x9529 ?x9530 ?x9547 ?x9548 ?x9549 ?x9550 ?x9551 ?x9552 (* 144 (* r s s s x r00)) ?x9581 (* (- 36) (* r x x x)) ?x9584 (* (- 29) (* r s s s00)) (* 24 (* s x s00)) (* 66 (* r s x s00)) (* (- 12) (* x x s00)) (* (- 33) (* r x x s00)) (* (- 9) (* r r s s00 r00)) (* (- 18) (* r r s s x s00 r00 r00)) (* (- 18) (* s s x s00 r00 r00)) (* (- 72) (* r r r s00 r00)) (* (- 27) (* r r s00 r00)) (* (- 6) (* x x x s00 r00 r00)) ?x9627 (* 432 (* r r s00)) (* (- 12) (* r x x x s00 r00 r00)) (* 387 (* r r r s00)) (* (- 6) (* r r x x x s00 r00 r00)) ?x9632 (* 9 (* ?x1460 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447)) (* (- 24) (* r r x x x s00)) (* (- 21) (* r x x x s00)) (* (- 6) (* x x x s00)) (* 72 (* r r s x x s00)) (* (- 9) (* r00 s00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* 61 (* r s x x s00)) (* 16 (* s x x s00)) (* 4 (* s s s s00)) (* 19 (* r s s s s00)) (* 24 (* r r s s s s00)) (* (- 14) (* s s x s00)) (* (- 59) (* r s s x s00)) (* (- 72) (* r r s s x s00)) (* (- 18) (* s s s s r00)) ?x9710 ?x9711 ?x9712 ?x9713 ?x9714 ?x9716 (* (- 108) (* s s x x r00)) ?x9717 ?x9718 ?x9719 ?x9720 ?x9721 ?x9722 (* 6 (* s s s s00 r00 r00)) (* 12 (* r s s s s00 r00 r00)) (* 72 (* s s s x r00)) (* (- 60) (* r r s00 s00)) ?x9724 (* (- 6) (* r r r s s00 r00)) ?x9725 ?x9726 ?x9727 (* (- 24) (* r r r s00 s00)) ?x9728 (* (- 19) (* r r s s s00)) (* 4 (* s00 s00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) ?x9729 (* (- 702) (* r r r00 r00)) (* (- 648) (* r r r r00 r00)) (* (- 144) (* r s r00 r00)) (* (- 180) (* r r s r00 r00)) (* (- 108) (* r r s s x x r00)) (* (- 378) (* r r r x00)) (* 72 (* r r s s s x r00)) ?x9763 (* (- 8) (* r s s00 s00)) ?x9767 (* (- 486) (* r r x00)) (* 72 (* r r s x x x r00)) (* 27 (* r r r s x x s00)) ?x9827 (* (- 9) (* s s x s00 r00)) (* 144 (* r s x x x r00)) (* (- 9) (* r r s s s s00 r00)) (* 3 (* s s s s00 r00)) (* 27 (* r r s s x s00 r00)) ?x9834 (* 9 (* s x x s00 r00)) (* (- 27) (* r r s x x s00 r00)) ?x9838 (* (- 9) (* r r r x x x s00)) (* 6 (* r r s s s s00 r00 r00)) (* (- 6) (* r00 ?x1460 ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447)) (* (- 6) (* r00 r00 s00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* 36 (* r s x x s00 r00 r00)) (* (- 270) (* r r r00 x00)) (* (- 3) (* x x x s00 r00)) (* 9 (* r r x x x s00 r00)) (* (- 108) (* r r r r00 x00)) (* (- 18) (* s r00 x00)) ?x9842 (* (- 36) (* r s r00 x00)) (* (- 216) (* r s s x x r00)) (* (- 18) (* x x x x r00)) (* 66 (* r r s s)) ?x9881 ?x9883 ?x9884 ?x9886 (* 72 (* s x x x r00)) (* (- 108) (* r r r r x00)) ?x9894 (* (- 36) (* r x x x x r00)) (* (- 18) (* r r x x x x r00)) (* 60 (* s x x)) (* 123 (* r s x x)) (* 12 (* r s x s00 r00 r00)) ?x6541 ?x9928 ?x6547 ?x9930 ?x9931 ?x9932 ?x9933 (* 9 (* r r r s s s s00)) ?x9934 ?x9935 (* (- 2) (* ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447)) (* 63 (* r r s x x)) (* (- 2) (* ?x1460 ?x1453 ?x1453 ?x1447 ?x1447)) (* (- 108) (* r s x)) (* 51 (* r s s s)) (* (- 18) (* r r s s s s r00)) (* (- 180) (* r r s x)) (* 42 (* r r s x s00)) (* (- 66) (* s s x)) (* (- 138) (* r s s x)) (* 81 (* r x x)) (* 117 (* r r x x)) (* (- 21) (* r r x x s00)) ?x9943 (* 27 (* r r s s s)) ?x9945 (* (- 72) (* r r s s x)) ?x9947 (* 12 (* s x s00 r00 r00)) (* (- 6) (* s s s00 r00 r00)) (* (- 6) (* r s s s00 r00 r00)) ?x9949 ?x9950 ?x9951 ?x9952 (* (- 54) (* r s x00)) (* (- 54) (* r r s x00)) ?x9974 (* 6 (* r00 r00 ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447)) (* (- 2) (* s00 ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447)) (* (- 6) (* r x x s00 r00 r00)) (* 3 (* s00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* (- 6) (* x x s00 r00 r00)) (* (- 18) (* ?x1460 ?x1453 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* 6 (* r00 r00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447)) ?x9983 ?x9984 ?x9985 ?x9986 ?x9987 ?x9988 ?x9989 ?x9990 ?x9991 ?x9992 (* 9 (* ?x1460 ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447)) ?x9993 ?x9994 (* 30 (* r r s s r00 r00)) (* 42 (* r s s r00 r00)) (* (- 3) (* ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447)) (* (- 2) (* s00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447)) (* (- 3) (* s s s00 r00)) (* 3 (* r s s s00 r00)) (* 6 (* s x s00 r00)) (* (- 6) (* r s x s00 r00)) (* (- 3) (* ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447)) (* 3 (* r x x s00 r00)) (* (- 3) (* x x s00 r00)) ?x10003 ?x10004 ?x10005 (* (- 9) (* ?x1460 ?x1460 ?x1460 ?x1447 ?x1447)) (* (- 36) (* r r r r s00 r00)) ?x10007 ?x10008 (* (- 2) (* ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447 ?x1447)) (* (- 72) (* r r r s r00 r00)) ?x10009 ?x10010 ?x10018 ?x10019 (* (- 216) (* r r r s r00)) (* (- 540) (* r r s r00)) (* (- 45) (* r s s r00)) (* (- 63) (* r r s s r00)) ?x10029 ?x10030 (* 18 (* r s x r00)) (* 90 (* r r s x r00)) (* 21 (* s s s r00)) (* 15 (* r s s s r00)) (* (- 36) (* r s s s s r00)) (* (- 60) (* s s x r00)) (* (- 48) (* r s s x r00)) (* 9 (* x x r00)) (* 9 (* r x x r00)) (* (- 36) (* r r x x r00)) (* 57 (* s x x r00)) (* 51 (* r s x x r00)) (* (- 18) (* r00 ?x1453 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* (- 9) (* s00 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* 18 (* x00 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* (- 18) (* ?x1460 ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1453)) (* (- 6) (* r00 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447)) (* 18 (* r00 x00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* 9 (* r00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447)) (* (- 486) (* r r00)) (* (- 1053) (* r r r00)) (* (- 972) (* r r r r00)) (* (- 324) (* r r r r r00)) (* (- 36) (* r r r s s r00)) (* 72 (* r r r s x r00)) (* (- 36) (* r r r x x r00)) (* (- 6) (* r r s s s r00)) (* 12 (* r r s s x r00)) (* (- 6) (* r r s x x r00)) (* 9 (* r00 ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447)))))
 (let ((?x1410 (* x00 x00)))
 (let ((?x1440 (* (- 108) ?x1410)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x1439 (* (- 16) ?x1248)))
 (let ((?x1120 (* s00 r00 r00 r00)))
 (let ((?x1435 (* (- 216) ?x1120)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x947 (* 432 ?x946)))
 (let ((?x869 (* s00 x00)))
 (let ((?x1193 (* 108 ?x869)))
 (let ((?x795 (* s00 s00 r00 r00)))
 (let ((?x796 (* 36 ?x795)))
 (let ((?x764 (* s r00)))
 (let ((?x1431 (* (- 54) ?x764)))
 (let ((?x732 (* s00 s00 r00)))
 (let ((?x1076 (* 108 ?x732)))
 (let ((?x1064 (* 36 ?x711)))
 (let ((?x1429 (* (- 51) ?x655)))
 (let ((?x1426 (* (- 108) ?x586)))
 (let ((?x577 (* s00 r00 x00)))
 (let ((?x1425 (* (- 216) ?x577)))
 (let ((?x584 (* 54 ?x490)))
 (let ((?x1051 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1441 (+ ?x143 ?x1051 ?x584 ?x1425 ?x1426 (* (- 15) ?x609) ?x928 ?x1429 (* (- 108) (* x s00)) (* 108 ?x681) (* 216 (* s r00 r00 r00)) ?x1064 ?x1076 (* 66 ?x752) ?x1431 (* (- 108) ?x788) ?x796 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1193 (* 108 ?x877) (* (- 108) ?x918) ?x947 (* 12 (* s s s00)) ?x1435 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1439 (* 216 (* x x00)) ?x1440)))
 (let (($x1442 (= ?x1441 0)))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x954 (* (- 36) ?x941)))
 (let ((?x870 (* 6 ?x869)))
 (let ((?x760 (* (- 2) ?x732)))
 (let ((?x980 (* (- 15) ?x655)))
 (let ((?x628 (* 24 ?x490)))
 (let ((?x1143 (+ ?x143 ?x1051 (* (- 24) ?x409) (* 24 (* r s00)) ?x628 ?x615 ?x633 (* 54 ?x613) (* 36 ?x622) ?x928 ?x980 (* (- 6) (* x s00)) ?x1031 ?x1064 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x760 (* 12 ?x752) (* (- 24) ?x764) (* (- 6) ?x788) (* (- 2) (* s s00 r00)) ?x870 (* 2 (* r s s)) (* 6 ?x877) (* (- 4) (* r s00 s00)) ?x954 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1148 (= ?x1143 0)))
 (let ((?x712 (* 6 ?x711)))
 (let ((?x668 (* (- 4) ?x655)))
 (let ((?x610 (* 2 ?x609)))
 (let ((?x600 (* (- 18) ?x586)))
 (let ((?x442 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x809 (+ ?x47 ?x442 (* (- 9) ?x409) (* 9 (* r s00)) ?x605 ?x600 ?x610 (* 18 ?x613) (* 6 (* r s r00)) (* (- 6) ?x629) ?x668 (* 18 ?x681) ?x712 (* (- 18) (* r x00)) (* 2 ?x752) (* (- 9) ?x764) (* (- 6) (* r s00 r00)))))
 (let (($x816 (= ?x809 0)))
 (let ((?x533 (* r00 r00 r00)))
 (let ((?x534 (* 12 ?x533)))
 (let ((?x568 (* (- 6) ?x490)))
 (let ((?x565 (* (- 6) x00)))
 (let ((?x564 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x563 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x569 (+ ?x43 ?x563 ?x56 ?x44 ?x564 ?x565 (* 2 ?x409) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x568 ?x534)))
 (let (($x570 (= ?x569 0)))
 (let (($x398 (= (+ s (* (- 1) s00) (* (- 3) ?x353) (* 3 ?x365)) 0)))
 (and $x398 $x570 $x816 $x1148 $x1442 (not (= ?x12397 (- 27)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x7444 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x8835 (+ 3 s ?x211)))
 (let ((?x344 (* (- 1) s)))
 (let ((?x8802 (+ x ?x344)))
 (let ((?x1460 (+ 1 r)))
 (let ((?x7410 (+ (* 2 (* ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 4) (* s00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 18 (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8802)) (* (- 3) (* s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 3 (* s00 ?x1460 ?x1460 ?x8835)) (* (- 18) (* x00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 18 (* r00 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 6) (* r00 r00 s00 ?x1460 ?x1460 ?x8835)) (* 18 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 s00 ?x1460 ?x1460 ?x1460 ?x8835)) (* (- 3) (* s00 ?x1460 ?x8802 ?x8802)) (* 9 (* r00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 s00 ?x1460 ?x1460 ?x8835)) (* (- 9) (* s00 ?x1460 ?x1460 ?x1460 ?x8835)) (* (- 6) (* r00 ?x1460 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 3) (* s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 r00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 9) (* ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 3 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 3 (* ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* 2 (* s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* 9 (* ?x1460 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x1460 ?x8802 ?x8802)) (* 18 (* ?x1460 ?x8802 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 6) (* r00 r00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 9) (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 s00 ?x1460 ?x8802 ?x8802)) (* (- 2) (* s00 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 4) (* s00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 4 (* s00 s00 ?x1460 ?x1460 ?x8835)) (* 9 (* s00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 6 (* r00 r00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 18 (* r00 x00 ?x1460 ?x1460 ?x8835)) (* (- 6) (* r00 s00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 r00 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 3) (* ?x1460 ?x1460 ?x8835 ?x8835)) (* 2 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835)) (* (- 2) (* ?x1460 ?x1460 ?x8835 ?x8835 ?x8835)) (* 2 (* s00 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 6) (* r00 r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 2 (* s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 3 (* ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 18) (* x00 ?x1460 ?x1460 ?x8802 ?x8802)) (* (- 9) (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 6) (* r00 s00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 18) (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8835)) (* 18 (* x00 ?x1460 ?x1460 ?x1460 ?x8835)) (* 2 (* ?x1460 ?x8802 ?x8802 ?x8835 ?x8835)) (* 6 (* r00 r00 s00 ?x1460 ?x8802 ?x8802)) (* (- 6) (* r00 r00 ?x1460 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 6) (* r00 s00 ?x1460 ?x1460 ?x8802 ?x8802)) (* 18 (* r00 ?x8802 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 9 (* s00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 9 (* s00 ?x1460 ?x1460 ?x8802 ?x8802)) (* (- 18) (* x00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 18 (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8802)) (* (- 4) (* s00 s00 ?x1460 ?x8802 ?x8802)) (* (- 18) (* r00 ?x1460 ?x1460 ?x8802 ?x8835)) (* 6 (* r00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 ?x1460 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 ?x1460 ?x1460 ?x8835 ?x8835)) (* 6 (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 9) (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)))))
 (let (($x8840 (not (= ?x7410 0))))
 (let ((?x1410 (* x00 x00)))
 (let ((?x6275 (* 108 ?x1410)))
 (let ((?x5812 (* (- 9) s)))
 (let ((?x9109 (* r00 r00 s00)))
 (let ((?x5044 (* (- 36) ?x9109)))
 (let ((?x137 (* 9 s00)))
 (let ((?x655 (* s00 s00)))
 (let ((?x5125 (* 51 ?x655)))
 (let ((?x9020 (* r00 r00 s)))
 (let ((?x5133 (* 36 ?x9020)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x4457 (* 16 ?x1248)))
 (let ((?x869 (* s00 x00)))
 (let ((?x3944 (* (- 108) ?x869)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x1896 (* (- 432) ?x946)))
 (let ((?x586 (* r00 x00)))
 (let ((?x3047 (* 108 ?x586)))
 (let ((?x6323 (+ (* 216 (* r00 s00 x00)) ?x3047 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1896 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3944 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4457 (* (- 108) (* x s)) ?x5133 ?x5125 (* (- 108) (* r00 x)) ?x137 ?x5044 ?x5812 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6275)))
 (let (($x6336 (= ?x6323 0)))
 (let ((?x8533 (* 15 ?x655)))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x8481 (* 36 ?x941)))
 (let ((?x8532 (* (- 6) ?x869)))
 (let ((?x9013 (* 54 ?x586)))
 (let ((?x7443 (+ (* 24 (* s r)) ?x9013 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x8532 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5133 ?x8481 ?x8533 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x5044 (* 54 (* x00 r)) ?x5812 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x563 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x5250 (* 4 ?x655)))
 (let ((?x7710 (* 18 ?x586)))
 (let ((?x5273 (+ (* 9 (* s r)) ?x7710 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x9020) ?x5250 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x9109) (* 18 (* x00 r)) ?x563 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x533 (* r00 r00 r00)))
 (let ((?x534 (* 12 ?x533)))
 (let ((?x565 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x564 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x7915 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x563 ?x564 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x565 ?x534)))
 (let (($x8822 (= (+ s00 ?x344 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x8822 (= ?x7915 0) (= ?x5273 0) (= ?x7443 0) $x6336 $x8840))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x7407 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1447 (+ 3 ?x211 s)))
 (let ((?x344 (* (- 1) s)))
 (let ((?x1453 (+ ?x344 x)))
 (let ((?x1460 (+ 1 r)))
 (let ((?x10030 (* 108 (* r r r x r00))))
 (let ((?x10029 (* 270 (* r r x r00))))
 (let ((?x10019 (* 4 (* r s s s00 s00))))
 (let ((?x10018 (* (- 8) (* r s x s00 s00))))
 (let ((?x10010 (* 4 (* x x s00 s00))))
 (let ((?x10009 (* 4 (* r x x s00 s00))))
 (let ((?x10008 (* (- 8) (* s x s00 s00))))
 (let ((?x10007 (* 4 (* s s s00 s00))))
 (let ((?x10005 (* 6 (* r r x x s00 r00))))
 (let ((?x10004 (* (- 12) (* r r s x s00 r00))))
 (let ((?x10003 (* 6 (* r r s s s00 r00))))
 (let ((?x9994 (* 6 (* s s s r00 r00))))
 (let ((?x9993 (* 6 (* r s s s r00 r00))))
 (let ((?x9992 (* (- 36) (* s x r00 r00))))
 (let ((?x9991 (* (- 108) (* r s x r00 r00))))
 (let ((?x9990 (* (- 72) (* r r s x r00 r00))))
 (let ((?x9989 (* (- 12) (* s s x r00 r00))))
 (let ((?x9988 (* (- 12) (* r s s x r00 r00))))
 (let ((?x9987 (* 18 (* x x r00 r00))))
 (let ((?x9986 (* 54 (* r x x r00 r00))))
 (let ((?x9985 (* 36 (* r r x x r00 r00))))
 (let ((?x9984 (* 6 (* s x x r00 r00))))
 (let ((?x9983 (* 6 (* r s x x r00 r00))))
 (let ((?x9974 (* (- 18) (* r r r s x00))))
 (let ((?x9952 (* 378 (* r r r x))))
 (let ((?x9951 (* 486 (* r r x))))
 (let ((?x9950 (* (- 108) (* r r r r s))))
 (let ((?x9949 (* 108 (* r r r r x))))
 (let ((?x9947 (* 54 (* r r r x x))))
 (let ((?x9945 (* (- 90) (* r r r s x))))
 (let ((?x9943 (* 36 (* r r r s s))))
 (let ((?x9935 (* 18 (* s s x00))))
 (let ((?x9934 (* 36 (* r s s x00))))
 (let ((?x9933 (* 18 (* r r s s x00))))
 (let ((?x9932 (* (- 36) (* s x x00))))
 (let ((?x9931 (* (- 72) (* r s x x00))))
 (let ((?x9930 (* (- 36) (* r r s x x00))))
 (let ((?x6547 (* 18 (* x x x00))))
 (let ((?x9928 (* 36 (* r x x x00))))
 (let ((?x6541 (* 18 (* r r x x x00))))
 (let ((?x9894 (* 2 (* ?x1460 ?x1460 ?x1447 ?x1447 ?x1447))))
 (let ((?x9886 (* (- 342) (* r r r s))))
 (let ((?x9884 (* 108 (* r r r r))))
 (let ((?x9883 (* (- 396) (* r r s))))
 (let ((?x9881 (* 324 (* r r r))))
 (let ((?x9842 (* 6 (* r r r x x x s00 r00))))
 (let ((?x9838 (* (- 18) (* r r r s x x s00 r00))))
 (let ((?x9834 (* 18 (* r r r s s x s00 r00))))
 (let ((?x9827 (* (- 6) (* r r r s s s s00 r00))))
 (let ((?x9767 (* (- 4) (* r r s s00 s00))))
 (let ((?x9763 (* (- 4) (* s s00 s00))))
 (let ((?x9729 (* 18 (* x x r00 x00))))
 (let ((?x9728 (* (- 36) (* r s x r00 x00))))
 (let ((?x9727 (* (- 36) (* s x r00 x00))))
 (let ((?x9726 (* 18 (* s s r00 x00))))
 (let ((?x9725 (* 18 (* r s s r00 x00))))
 (let ((?x9724 (* 18 (* r x x r00 x00))))
 (let ((?x9722 (* 18 (* r r x x x r00 x00))))
 (let ((?x9721 (* 36 (* r x x x r00 x00))))
 (let ((?x9720 (* 18 (* x x x r00 x00))))
 (let ((?x9719 (* (- 54) (* r r s x x r00 x00))))
 (let ((?x9718 (* (- 108) (* r s x x r00 x00))))
 (let ((?x9717 (* (- 54) (* s x x r00 x00))))
 (let ((?x9716 (* 54 (* r r s s x r00 x00))))
 (let ((?x9714 (* (- 18) (* s s s r00 x00))))
 (let ((?x9713 (* (- 36) (* r s s s r00 x00))))
 (let ((?x9712 (* (- 18) (* r r s s s r00 x00))))
 (let ((?x9711 (* 54 (* s s x r00 x00))))
 (let ((?x9710 (* 108 (* r s s x r00 x00))))
 (let ((?x9632 (* 126 (* r r r r s00))))
 (let ((?x9627 (* 33 (* r r r s s00))))
 (let ((?x9584 (* (- 18) (* r r x x x))))
 (let ((?x9581 (* (- 18) (* x x x))))
 (let ((?x9552 (* 6 (* r r s s00 r00 r00))))
 (let ((?x9551 (* 12 (* r s s00 r00 r00))))
 (let ((?x9550 (* 6 (* s s00 r00 r00))))
 (let ((?x9549 (* 36 (* r r r s00 r00 r00))))
 (let ((?x9548 (* 90 (* r r s00 r00 r00))))
 (let ((?x9547 (* 72 (* r s00 r00 r00))))
 (let ((?x9530 (* (- 18) (* r r r s s s x00))))
 (let ((?x9529 (* (- 54) (* r r s s s x00))))
 (let ((?x9528 (* (- 18) (* s s s x00))))
 (let ((?x9527 (* (- 54) (* r s s s x00))))
 (let ((?x9526 (* 54 (* s s x x00))))
 (let ((?x9525 (* 162 (* r s s x x00))))
 (let ((?x9524 (* 162 (* r r s s x x00))))
 (let ((?x9523 (* 54 (* r r r s s x x00))))
 (let ((?x9522 (* (- 54) (* s x x x00))))
 (let ((?x9521 (* (- 162) (* r s x x x00))))
 (let ((?x9360 (* (- 162) (* r r s x x x00))))
 (let ((?x9359 (* (- 54) (* r r r s x x x00))))
 (let ((?x2215 (* 18 (* r r r x x x x00))))
 (let ((?x9361 (* 84 (* r r s s00))))
 (let ((?x2026 (* 18 (* x x x x00))))
 (let ((?x9371 (* 54 (* r x x x x00))))
 (let ((?x9374 (* 54 (* r r x x x x00))))
 (let ((?x9505 (* (- 4) (* s s s s00 s00))))
 (let ((?x9506 (* (- 8) (* r s s s s00 s00))))
 (let ((?x9503 (* (- 4) (* r r s s s s00 s00))))
 (let ((?x9504 (* 4 (* r r x x x s00 s00))))
 (let ((?x9501 (* 8 (* r x x x s00 s00))))
 (let ((?x9502 (* 4 (* x x x s00 s00))))
 (let ((?x9499 (* (- 12) (* r r s x x s00 s00))))
 (let ((?x9500 (* (- 24) (* r s x x s00 s00))))
 (let ((?x9497 (* 12 (* s s x s00 s00))))
 (let ((?x9498 (* 24 (* r s s x s00 s00))))
 (let ((?x9495 (* 12 (* r r s s x s00 s00))))
 (let ((?x9496 (* (- 12) (* s x x s00 s00))))
 (let ((?x918 (* x x)))
 (let ((?x9477 (* 18 ?x918)))
 (let ((?x877 (* s x)))
 (let ((?x6494 (* (- 18) ?x877)))
 (let ((?x788 (* s x00)))
 (let ((?x9471 (* (- 18) ?x788)))
 (let ((?x752 (* s s00)))
 (let ((?x9472 (* 18 ?x752)))
 (let ((?x711 (* s00 r00 r00)))
 (let ((?x9470 (* 18 ?x711)))
 (let ((?x681 (* x r00)))
 (let ((?x1031 (* 54 ?x681)))
 (let ((?x655 (* s00 s00)))
 (let ((?x9467 (* (- 12) ?x655)))
 (let ((?x629 (* s r00 r00)))
 (let ((?x928 (* (- 36) ?x629)))
 (let ((?x622 (* r x r00)))
 (let ((?x9468 (* 216 ?x622)))
 (let ((?x613 (* r x)))
 (let ((?x9466 (* 270 ?x613)))
 (let ((?x609 (* s s)))
 (let ((?x633 (* 3 ?x609)))
 (let ((?x586 (* r00 x00)))
 (let ((?x615 (* (- 54) ?x586)))
 (let ((?x490 (* s00 r00)))
 (let ((?x605 (* 9 ?x490)))
 (let ((?x409 (* r s)))
 (let ((?x9462 (* (- 198) ?x409)))
 (let ((?x365 (* r00 r00)))
 (let ((?x12201 (* (- 54) ?x365)))
 (let ((?x353 (* r r)))
 (let ((?x9460 (* 351 ?x353)))
 (let ((?x9458 (* (- 54) x00)))
 (let ((?x12200 (* (- 81) r00)))
 (let ((?x9454 (* 36 s00)))
 (let ((?x7179 (* 54 x)))
 (let ((?x9451 (* (- 36) s)))
 (let ((?x9452 (* 162 r)))
 (let ((?x12397 (+ ?x9452 ?x9451 ?x7179 ?x9454 ?x12200 ?x9458 ?x9460 ?x12201 ?x9462 (* (- 324) (* r r00 r00)) (* 207 (* r s00)) ?x605 ?x615 ?x633 ?x9466 (* (- 432) (* r s r00)) ?x9468 ?x928 (* (- 216) (* r r r r r00 r00)) ?x9467 ?x1031 ?x9470 (* (- 18) (* s s r00)) (* (- 270) (* r x00)) (* (- 27) (* r r r s s x s00)) ?x9472 (* (- 108) (* s r00)) ?x9471 (* 18 (* r s00 r00)) (* 3 (* s s00 r00)) (* 24 (* s s s)) (* 33 (* r s s)) ?x6494 (* (- 48) (* r s00 s00)) (* 18 (* r r s x x s00 r00 r00)) ?x9477 (* 69 (* r s s00)) (* (- 10) (* s s s00)) (* (- 216) (* r r00 x00)) (* 18 (* s x x s00 r00 r00)) (* 6 (* r00 ?x1460 ?x1460 ?x1460 ?x1447 ?x1447)) (* 12 (* s s r00 r00)) (* (- 18) (* r r s r00 x00)) ?x9496 ?x9495 ?x9498 ?x9497 (* (- 18) (* r x x x r00)) ?x9500 (* (- 18) (* x x x r00)) ?x9499 ?x9502 ?x9501 ?x9504 ?x9503 ?x9506 ?x9505 ?x9374 ?x9371 ?x2026 (* 6 (* r00 s00 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) ?x9361 (* (- 36) (* r s s x s00 r00 r00)) ?x2215 ?x9359 ?x9360 ?x9521 ?x9522 ?x9523 ?x9524 ?x9525 ?x9526 ?x9527 ?x9528 ?x9529 ?x9530 ?x9547 ?x9548 ?x9549 ?x9550 ?x9551 ?x9552 (* 144 (* r s s s x r00)) ?x9581 (* (- 36) (* r x x x)) ?x9584 (* (- 29) (* r s s s00)) (* 24 (* s x s00)) (* 66 (* r s x s00)) (* (- 12) (* x x s00)) (* (- 33) (* r x x s00)) (* (- 9) (* r r s s00 r00)) (* (- 18) (* r r s s x s00 r00 r00)) (* (- 18) (* s s x s00 r00 r00)) (* (- 72) (* r r r s00 r00)) (* (- 27) (* r r s00 r00)) (* (- 6) (* x x x s00 r00 r00)) ?x9627 (* 432 (* r r s00)) (* (- 12) (* r x x x s00 r00 r00)) (* 387 (* r r r s00)) (* (- 6) (* r r x x x s00 r00 r00)) ?x9632 (* 9 (* ?x1460 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447)) (* (- 24) (* r r x x x s00)) (* (- 21) (* r x x x s00)) (* (- 6) (* x x x s00)) (* 72 (* r r s x x s00)) (* (- 9) (* r00 s00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* 61 (* r s x x s00)) (* 16 (* s x x s00)) (* 4 (* s s s s00)) (* 19 (* r s s s s00)) (* 24 (* r r s s s s00)) (* (- 14) (* s s x s00)) (* (- 59) (* r s s x s00)) (* (- 72) (* r r s s x s00)) (* (- 18) (* s s s s r00)) ?x9710 ?x9711 ?x9712 ?x9713 ?x9714 ?x9716 (* (- 108) (* s s x x r00)) ?x9717 ?x9718 ?x9719 ?x9720 ?x9721 ?x9722 (* 6 (* s s s s00 r00 r00)) (* 12 (* r s s s s00 r00 r00)) (* 72 (* s s s x r00)) (* (- 60) (* r r s00 s00)) ?x9724 (* (- 6) (* r r r s s00 r00)) ?x9725 ?x9726 ?x9727 (* (- 24) (* r r r s00 s00)) ?x9728 (* (- 19) (* r r s s s00)) (* 4 (* s00 s00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) ?x9729 (* (- 702) (* r r r00 r00)) (* (- 648) (* r r r r00 r00)) (* (- 144) (* r s r00 r00)) (* (- 180) (* r r s r00 r00)) (* (- 108) (* r r s s x x r00)) (* (- 378) (* r r r x00)) (* 72 (* r r s s s x r00)) ?x9763 (* (- 8) (* r s s00 s00)) ?x9767 (* (- 486) (* r r x00)) (* 72 (* r r s x x x r00)) (* 27 (* r r r s x x s00)) ?x9827 (* (- 9) (* s s x s00 r00)) (* 144 (* r s x x x r00)) (* (- 9) (* r r s s s s00 r00)) (* 3 (* s s s s00 r00)) (* 27 (* r r s s x s00 r00)) ?x9834 (* 9 (* s x x s00 r00)) (* (- 27) (* r r s x x s00 r00)) ?x9838 (* (- 9) (* r r r x x x s00)) (* 6 (* r r s s s s00 r00 r00)) (* (- 6) (* r00 ?x1460 ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447)) (* (- 6) (* r00 r00 s00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* 36 (* r s x x s00 r00 r00)) (* (- 270) (* r r r00 x00)) (* (- 3) (* x x x s00 r00)) (* 9 (* r r x x x s00 r00)) (* (- 108) (* r r r r00 x00)) (* (- 18) (* s r00 x00)) ?x9842 (* (- 36) (* r s r00 x00)) (* (- 216) (* r s s x x r00)) (* (- 18) (* x x x x r00)) (* 66 (* r r s s)) ?x9881 ?x9883 ?x9884 ?x9886 (* 72 (* s x x x r00)) (* (- 108) (* r r r r x00)) ?x9894 (* (- 36) (* r x x x x r00)) (* (- 18) (* r r x x x x r00)) (* 60 (* s x x)) (* 123 (* r s x x)) (* 12 (* r s x s00 r00 r00)) ?x6541 ?x9928 ?x6547 ?x9930 ?x9931 ?x9932 ?x9933 (* 9 (* r r r s s s s00)) ?x9934 ?x9935 (* (- 2) (* ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447)) (* 63 (* r r s x x)) (* (- 2) (* ?x1460 ?x1453 ?x1453 ?x1447 ?x1447)) (* (- 108) (* r s x)) (* 51 (* r s s s)) (* (- 18) (* r r s s s s r00)) (* (- 180) (* r r s x)) (* 42 (* r r s x s00)) (* (- 66) (* s s x)) (* (- 138) (* r s s x)) (* 81 (* r x x)) (* 117 (* r r x x)) (* (- 21) (* r r x x s00)) ?x9943 (* 27 (* r r s s s)) ?x9945 (* (- 72) (* r r s s x)) ?x9947 (* 12 (* s x s00 r00 r00)) (* (- 6) (* s s s00 r00 r00)) (* (- 6) (* r s s s00 r00 r00)) ?x9949 ?x9950 ?x9951 ?x9952 (* (- 54) (* r s x00)) (* (- 54) (* r r s x00)) ?x9974 (* 6 (* r00 r00 ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447)) (* (- 2) (* s00 ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447)) (* (- 6) (* r x x s00 r00 r00)) (* 3 (* s00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* (- 6) (* x x s00 r00 r00)) (* (- 18) (* ?x1460 ?x1453 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* 6 (* r00 r00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447)) ?x9983 ?x9984 ?x9985 ?x9986 ?x9987 ?x9988 ?x9989 ?x9990 ?x9991 ?x9992 (* 9 (* ?x1460 ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447)) ?x9993 ?x9994 (* 30 (* r r s s r00 r00)) (* 42 (* r s s r00 r00)) (* (- 3) (* ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447)) (* (- 2) (* s00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447)) (* (- 3) (* s s s00 r00)) (* 3 (* r s s s00 r00)) (* 6 (* s x s00 r00)) (* (- 6) (* r s x s00 r00)) (* (- 3) (* ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447)) (* 3 (* r x x s00 r00)) (* (- 3) (* x x s00 r00)) ?x10003 ?x10004 ?x10005 (* (- 9) (* ?x1460 ?x1460 ?x1460 ?x1447 ?x1447)) (* (- 36) (* r r r r s00 r00)) ?x10007 ?x10008 (* (- 2) (* ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447 ?x1447)) (* (- 72) (* r r r s r00 r00)) ?x10009 ?x10010 ?x10018 ?x10019 (* (- 216) (* r r r s r00)) (* (- 540) (* r r s r00)) (* (- 45) (* r s s r00)) (* (- 63) (* r r s s r00)) ?x10029 ?x10030 (* 18 (* r s x r00)) (* 90 (* r r s x r00)) (* 21 (* s s s r00)) (* 15 (* r s s s r00)) (* (- 36) (* r s s s s r00)) (* (- 60) (* s s x r00)) (* (- 48) (* r s s x r00)) (* 9 (* x x r00)) (* 9 (* r x x r00)) (* (- 36) (* r r x x r00)) (* 57 (* s x x r00)) (* 51 (* r s x x r00)) (* (- 18) (* r00 ?x1453 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* (- 9) (* s00 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* 18 (* x00 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* (- 18) (* ?x1460 ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1453)) (* (- 6) (* r00 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447)) (* 18 (* r00 x00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447)) (* 9 (* r00 ?x1453 ?x1453 ?x1453 ?x1447 ?x1447 ?x1447 ?x1447)) (* (- 486) (* r r00)) (* (- 1053) (* r r r00)) (* (- 972) (* r r r r00)) (* (- 324) (* r r r r r00)) (* (- 36) (* r r r s s r00)) (* 72 (* r r r s x r00)) (* (- 36) (* r r r x x r00)) (* (- 6) (* r r s s s r00)) (* 12 (* r r s s x r00)) (* (- 6) (* r r s x x r00)) (* 9 (* r00 ?x1460 ?x1460 ?x1453 ?x1453 ?x1453 ?x1447)))))
 (let ((?x1410 (* x00 x00)))
 (let ((?x1440 (* (- 108) ?x1410)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x1439 (* (- 16) ?x1248)))
 (let ((?x1120 (* s00 r00 r00 r00)))
 (let ((?x1435 (* (- 216) ?x1120)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x947 (* 432 ?x946)))
 (let ((?x869 (* s00 x00)))
 (let ((?x1193 (* 108 ?x869)))
 (let ((?x795 (* s00 s00 r00 r00)))
 (let ((?x796 (* 36 ?x795)))
 (let ((?x764 (* s r00)))
 (let ((?x1431 (* (- 54) ?x764)))
 (let ((?x732 (* s00 s00 r00)))
 (let ((?x1076 (* 108 ?x732)))
 (let ((?x1064 (* 36 ?x711)))
 (let ((?x1429 (* (- 51) ?x655)))
 (let ((?x1426 (* (- 108) ?x586)))
 (let ((?x577 (* s00 r00 x00)))
 (let ((?x1425 (* (- 216) ?x577)))
 (let ((?x584 (* 54 ?x490)))
 (let ((?x1051 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1441 (+ ?x143 ?x1051 ?x584 ?x1425 ?x1426 (* (- 15) ?x609) ?x928 ?x1429 (* (- 108) (* x s00)) (* 108 ?x681) (* 216 (* s r00 r00 r00)) ?x1064 ?x1076 (* 66 ?x752) ?x1431 (* (- 108) ?x788) ?x796 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1193 (* 108 ?x877) (* (- 108) ?x918) ?x947 (* 12 (* s s s00)) ?x1435 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1439 (* 216 (* x x00)) ?x1440)))
 (let (($x1442 (= ?x1441 0)))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x954 (* (- 36) ?x941)))
 (let ((?x870 (* 6 ?x869)))
 (let ((?x760 (* (- 2) ?x732)))
 (let ((?x980 (* (- 15) ?x655)))
 (let ((?x628 (* 24 ?x490)))
 (let ((?x1143 (+ ?x143 ?x1051 (* (- 24) ?x409) (* 24 (* r s00)) ?x628 ?x615 ?x633 (* 54 ?x613) (* 36 ?x622) ?x928 ?x980 (* (- 6) (* x s00)) ?x1031 ?x1064 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x760 (* 12 ?x752) (* (- 24) ?x764) (* (- 6) ?x788) (* (- 2) (* s s00 r00)) ?x870 (* 2 (* r s s)) (* 6 ?x877) (* (- 4) (* r s00 s00)) ?x954 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1148 (= ?x1143 0)))
 (let ((?x712 (* 6 ?x711)))
 (let ((?x668 (* (- 4) ?x655)))
 (let ((?x610 (* 2 ?x609)))
 (let ((?x600 (* (- 18) ?x586)))
 (let ((?x442 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x809 (+ ?x47 ?x442 (* (- 9) ?x409) (* 9 (* r s00)) ?x605 ?x600 ?x610 (* 18 ?x613) (* 6 (* r s r00)) (* (- 6) ?x629) ?x668 (* 18 ?x681) ?x712 (* (- 18) (* r x00)) (* 2 ?x752) (* (- 9) ?x764) (* (- 6) (* r s00 r00)))))
 (let (($x816 (= ?x809 0)))
 (let ((?x533 (* r00 r00 r00)))
 (let ((?x534 (* 12 ?x533)))
 (let ((?x568 (* (- 6) ?x490)))
 (let ((?x565 (* (- 6) x00)))
 (let ((?x564 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x563 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x569 (+ ?x43 ?x563 ?x56 ?x44 ?x564 ?x565 (* 2 ?x409) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x568 ?x534)))
 (let (($x570 (= ?x569 0)))
 (let (($x398 (= (+ s (* (- 1) s00) (* (- 3) ?x353) (* 3 ?x365)) 0)))
 (let (($x8610 (and $x398 $x570 $x816 $x1148 $x1442 (not (= ?x12397 (- 27))))))
 (let ((?x8835 (+ 3 s ?x211)))
 (let ((?x8802 (+ x ?x344)))
 (let ((?x7410 (+ (* 2 (* ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 4) (* s00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 18 (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8802)) (* (- 3) (* s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 3 (* s00 ?x1460 ?x1460 ?x8835)) (* (- 18) (* x00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 18 (* r00 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 6) (* r00 r00 s00 ?x1460 ?x1460 ?x8835)) (* 18 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 s00 ?x1460 ?x1460 ?x1460 ?x8835)) (* (- 3) (* s00 ?x1460 ?x8802 ?x8802)) (* 9 (* r00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 s00 ?x1460 ?x1460 ?x8835)) (* (- 9) (* s00 ?x1460 ?x1460 ?x1460 ?x8835)) (* (- 6) (* r00 ?x1460 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 3) (* s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 r00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 9) (* ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 3 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 3 (* ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* 2 (* s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* 9 (* ?x1460 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x1460 ?x8802 ?x8802)) (* 18 (* ?x1460 ?x8802 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 6) (* r00 r00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 9) (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 s00 ?x1460 ?x8802 ?x8802)) (* (- 2) (* s00 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 4) (* s00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 4 (* s00 s00 ?x1460 ?x1460 ?x8835)) (* 9 (* s00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 6 (* r00 r00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 18 (* r00 x00 ?x1460 ?x1460 ?x8835)) (* (- 6) (* r00 s00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 r00 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 3) (* ?x1460 ?x1460 ?x8835 ?x8835)) (* 2 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835)) (* (- 2) (* ?x1460 ?x1460 ?x8835 ?x8835 ?x8835)) (* 2 (* s00 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 6) (* r00 r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 2 (* s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 3 (* ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 18) (* x00 ?x1460 ?x1460 ?x8802 ?x8802)) (* (- 9) (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 6) (* r00 s00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 18) (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8835)) (* 18 (* x00 ?x1460 ?x1460 ?x1460 ?x8835)) (* 2 (* ?x1460 ?x8802 ?x8802 ?x8835 ?x8835)) (* 6 (* r00 r00 s00 ?x1460 ?x8802 ?x8802)) (* (- 6) (* r00 r00 ?x1460 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 6) (* r00 s00 ?x1460 ?x1460 ?x8802 ?x8802)) (* 18 (* r00 ?x8802 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 9 (* s00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 9 (* s00 ?x1460 ?x1460 ?x8802 ?x8802)) (* (- 18) (* x00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 18 (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8802)) (* (- 4) (* s00 s00 ?x1460 ?x8802 ?x8802)) (* (- 18) (* r00 ?x1460 ?x1460 ?x8802 ?x8835)) (* 6 (* r00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 ?x1460 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 ?x1460 ?x1460 ?x8835 ?x8835)) (* 6 (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 9) (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)))))
 (let (($x8840 (not (= ?x7410 0))))
 (let ((?x6275 (* 108 ?x1410)))
 (let ((?x5812 (* (- 9) s)))
 (let ((?x9109 (* r00 r00 s00)))
 (let ((?x5044 (* (- 36) ?x9109)))
 (let ((?x137 (* 9 s00)))
 (let ((?x5125 (* 51 ?x655)))
 (let ((?x9020 (* r00 r00 s)))
 (let ((?x5133 (* 36 ?x9020)))
 (let ((?x4457 (* 16 ?x1248)))
 (let ((?x3944 (* (- 108) ?x869)))
 (let ((?x1896 (* (- 432) ?x946)))
 (let ((?x3047 (* 108 ?x586)))
 (let ((?x6323 (+ (* 216 (* r00 s00 x00)) ?x3047 (* (- 54) (* r00 s00)) (* 15 ?x609) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 ?x918) ?x1896 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3944 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4457 (* (- 108) (* x s)) ?x5133 ?x5125 (* (- 108) (* r00 x)) ?x137 ?x5044 ?x5812 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6275)))
 (let (($x6336 (= ?x6323 0)))
 (let ((?x8533 (* 15 ?x655)))
 (let ((?x8481 (* 36 ?x941)))
 (let ((?x8532 (* (- 6) ?x869)))
 (let ((?x9013 (* 54 ?x586)))
 (let ((?x7443 (+ (* 24 (* s r)) ?x9013 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x609) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x8532 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5133 ?x8481 ?x8533 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x5044 (* 54 (* x00 r)) ?x5812 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x5250 (* 4 ?x655)))
 (let ((?x7710 (* 18 ?x586)))
 (let ((?x5273 (+ (* 9 (* s r)) ?x7710 (* (- 9) (* r00 s00)) (* (- 2) ?x609) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x9020) ?x5250 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x9109) (* 18 (* x00 r)) ?x563 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x7915 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x563 ?x564 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x565 ?x534)))
 (let (($x8822 (= (+ s00 ?x344 (* 3 ?x353) (* (- 3) ?x365)) 0)))
 (let (($x7484 (and $x8822 (= ?x7915 0) (= ?x5273 0) (= ?x7443 0) $x6336 $x8840)))
 (rewrite (= $x7484 $x8610)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x8857 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x8835 (+ 3 s ?x211)))
 (let ((?x344 (* (- 1) s)))
 (let ((?x8802 (+ x ?x344)))
 (let ((?x1460 (+ 1 r)))
 (let ((?x7410 (+ (* 2 (* ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 4) (* s00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 18 (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8802)) (* (- 3) (* s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 3 (* s00 ?x1460 ?x1460 ?x8835)) (* (- 18) (* x00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 18 (* r00 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 6) (* r00 r00 s00 ?x1460 ?x1460 ?x8835)) (* 18 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 s00 ?x1460 ?x1460 ?x1460 ?x8835)) (* (- 3) (* s00 ?x1460 ?x8802 ?x8802)) (* 9 (* r00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 s00 ?x1460 ?x1460 ?x8835)) (* (- 9) (* s00 ?x1460 ?x1460 ?x1460 ?x8835)) (* (- 6) (* r00 ?x1460 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 3) (* s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 r00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 9) (* ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 3 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 3 (* ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* 2 (* s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* 9 (* ?x1460 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x1460 ?x8802 ?x8802)) (* 18 (* ?x1460 ?x8802 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 6) (* r00 r00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 9) (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 s00 ?x1460 ?x8802 ?x8802)) (* (- 2) (* s00 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 4) (* s00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 4 (* s00 s00 ?x1460 ?x1460 ?x8835)) (* 9 (* s00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 6 (* r00 r00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 18 (* r00 x00 ?x1460 ?x1460 ?x8835)) (* (- 6) (* r00 s00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 r00 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 3) (* ?x1460 ?x1460 ?x8835 ?x8835)) (* 2 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835)) (* (- 2) (* ?x1460 ?x1460 ?x8835 ?x8835 ?x8835)) (* 2 (* s00 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 6) (* r00 r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 2 (* s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 3 (* ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 18) (* x00 ?x1460 ?x1460 ?x8802 ?x8802)) (* (- 9) (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 6) (* r00 s00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 18) (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8835)) (* 18 (* x00 ?x1460 ?x1460 ?x1460 ?x8835)) (* 2 (* ?x1460 ?x8802 ?x8802 ?x8835 ?x8835)) (* 6 (* r00 r00 s00 ?x1460 ?x8802 ?x8802)) (* (- 6) (* r00 r00 ?x1460 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 6) (* r00 s00 ?x1460 ?x1460 ?x8802 ?x8802)) (* 18 (* r00 ?x8802 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 9 (* s00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 9 (* s00 ?x1460 ?x1460 ?x8802 ?x8802)) (* (- 18) (* x00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 18 (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8802)) (* (- 4) (* s00 s00 ?x1460 ?x8802 ?x8802)) (* (- 18) (* r00 ?x1460 ?x1460 ?x8802 ?x8835)) (* 6 (* r00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 ?x1460 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 ?x1460 ?x1460 ?x8835 ?x8835)) (* 6 (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 9) (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)))))
 (let (($x8840 (not (= ?x7410 0))))
 (let ((?x1410 (* x00 x00)))
 (let ((?x6275 (* 108 ?x1410)))
 (let ((?x5812 (* (- 9) s)))
 (let ((?x9109 (* r00 r00 s00)))
 (let ((?x5044 (* (- 36) ?x9109)))
 (let ((?x137 (* 9 s00)))
 (let ((?x655 (* s00 s00)))
 (let ((?x5125 (* 51 ?x655)))
 (let ((?x9020 (* r00 r00 s)))
 (let ((?x5133 (* 36 ?x9020)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x4457 (* 16 ?x1248)))
 (let ((?x869 (* s00 x00)))
 (let ((?x3944 (* (- 108) ?x869)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x1896 (* (- 432) ?x946)))
 (let ((?x586 (* r00 x00)))
 (let ((?x3047 (* 108 ?x586)))
 (let ((?x6323 (+ (* 216 (* r00 s00 x00)) ?x3047 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1896 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3944 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4457 (* (- 108) (* x s)) ?x5133 ?x5125 (* (- 108) (* r00 x)) ?x137 ?x5044 ?x5812 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6275)))
 (let (($x6336 (= ?x6323 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1051 (* (- 9) s00)))
 (let ((?x980 (* (- 15) ?x655)))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x954 (* (- 36) ?x941)))
 (let ((?x870 (* 6 ?x869)))
 (let ((?x609 (* s s)))
 (let ((?x633 (* 3 ?x609)))
 (let ((?x615 (* (- 54) ?x586)))
 (let ((?x5062 (+ (* (- 24) (* s r)) ?x615 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x633 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x870 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x9020) ?x954 ?x980 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1051 (* 36 ?x9109) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x442 (* (- 3) s00)))
 (let ((?x668 (* (- 4) ?x655)))
 (let ((?x610 (* 2 ?x609)))
 (let ((?x600 (* (- 18) ?x586)))
 (let ((?x5274 (+ (* (- 9) (* s r)) ?x600 (* 9 (* r00 s00)) ?x610 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x9020) ?x668 (* 18 (* r00 x)) ?x442 (* 6 ?x9109) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x9056 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x442 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x8822 (= (+ s00 ?x344 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x8822 (= ?x9056 0) (= ?x5274 0) (= ?x5062 0) $x6336 $x8840)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x7482 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x8835 (+ 3 s ?x211)))
 (let ((?x344 (* (- 1) s)))
 (let ((?x8802 (+ x ?x344)))
 (let ((?x1460 (+ 1 r)))
 (let ((?x7410 (+ (* 2 (* ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 4) (* s00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 18 (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8802)) (* (- 3) (* s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 3 (* s00 ?x1460 ?x1460 ?x8835)) (* (- 18) (* x00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 18 (* r00 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 6) (* r00 r00 s00 ?x1460 ?x1460 ?x8835)) (* 18 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 s00 ?x1460 ?x1460 ?x1460 ?x8835)) (* (- 3) (* s00 ?x1460 ?x8802 ?x8802)) (* 9 (* r00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 s00 ?x1460 ?x1460 ?x8835)) (* (- 9) (* s00 ?x1460 ?x1460 ?x1460 ?x8835)) (* (- 6) (* r00 ?x1460 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 3) (* s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 r00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 9) (* ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 3 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 3 (* ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* 2 (* s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* 9 (* ?x1460 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x1460 ?x8802 ?x8802)) (* 18 (* ?x1460 ?x8802 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 6) (* r00 r00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 9) (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 s00 ?x1460 ?x8802 ?x8802)) (* (- 2) (* s00 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 4) (* s00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 4 (* s00 s00 ?x1460 ?x1460 ?x8835)) (* 9 (* s00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 6 (* r00 r00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 18 (* r00 x00 ?x1460 ?x1460 ?x8835)) (* (- 6) (* r00 s00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 r00 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 3) (* ?x1460 ?x1460 ?x8835 ?x8835)) (* 2 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835)) (* (- 2) (* ?x1460 ?x1460 ?x8835 ?x8835 ?x8835)) (* 2 (* s00 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 6) (* r00 r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 2 (* s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 3 (* ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 18) (* x00 ?x1460 ?x1460 ?x8802 ?x8802)) (* (- 9) (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 6) (* r00 s00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 18) (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8835)) (* 18 (* x00 ?x1460 ?x1460 ?x1460 ?x8835)) (* 2 (* ?x1460 ?x8802 ?x8802 ?x8835 ?x8835)) (* 6 (* r00 r00 s00 ?x1460 ?x8802 ?x8802)) (* (- 6) (* r00 r00 ?x1460 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 6) (* r00 s00 ?x1460 ?x1460 ?x8802 ?x8802)) (* 18 (* r00 ?x8802 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 9 (* s00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 9 (* s00 ?x1460 ?x1460 ?x8802 ?x8802)) (* (- 18) (* x00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 18 (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8802)) (* (- 4) (* s00 s00 ?x1460 ?x8802 ?x8802)) (* (- 18) (* r00 ?x1460 ?x1460 ?x8802 ?x8835)) (* 6 (* r00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 ?x1460 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 ?x1460 ?x1460 ?x8835 ?x8835)) (* 6 (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 9) (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)))))
 (let (($x8840 (not (= ?x7410 0))))
 (let ((?x1410 (* x00 x00)))
 (let ((?x6275 (* 108 ?x1410)))
 (let ((?x5812 (* (- 9) s)))
 (let ((?x9109 (* r00 r00 s00)))
 (let ((?x5044 (* (- 36) ?x9109)))
 (let ((?x137 (* 9 s00)))
 (let ((?x655 (* s00 s00)))
 (let ((?x5125 (* 51 ?x655)))
 (let ((?x9020 (* r00 r00 s)))
 (let ((?x5133 (* 36 ?x9020)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x4457 (* 16 ?x1248)))
 (let ((?x869 (* s00 x00)))
 (let ((?x3944 (* (- 108) ?x869)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x1896 (* (- 432) ?x946)))
 (let ((?x586 (* r00 x00)))
 (let ((?x3047 (* 108 ?x586)))
 (let ((?x6323 (+ (* 216 (* r00 s00 x00)) ?x3047 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1896 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3944 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4457 (* (- 108) (* x s)) ?x5133 ?x5125 (* (- 108) (* r00 x)) ?x137 ?x5044 ?x5812 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6275)))
 (let (($x6336 (= ?x6323 0)))
 (let ((?x8533 (* 15 ?x655)))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x8481 (* 36 ?x941)))
 (let ((?x8532 (* (- 6) ?x869)))
 (let ((?x9013 (* 54 ?x586)))
 (let ((?x7443 (+ (* 24 (* s r)) ?x9013 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x8532 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5133 ?x8481 ?x8533 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x5044 (* 54 (* x00 r)) ?x5812 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x563 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x5250 (* 4 ?x655)))
 (let ((?x7710 (* 18 ?x586)))
 (let ((?x5273 (+ (* 9 (* s r)) ?x7710 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x9020) ?x5250 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x9109) (* 18 (* x00 r)) ?x563 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x533 (* r00 r00 r00)))
 (let ((?x534 (* 12 ?x533)))
 (let ((?x565 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x564 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x7915 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x563 ?x564 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x565 ?x534)))
 (let (($x8822 (= (+ s00 ?x344 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x7484 (and $x8822 (= ?x7915 0) (= ?x5273 0) (= ?x7443 0) $x6336 $x8840)))
 (let ((?x143 (* 9 s)))
 (let ((?x1051 (* (- 9) s00)))
 (let ((?x980 (* (- 15) ?x655)))
 (let ((?x954 (* (- 36) ?x941)))
 (let ((?x870 (* 6 ?x869)))
 (let ((?x609 (* s s)))
 (let ((?x633 (* 3 ?x609)))
 (let ((?x615 (* (- 54) ?x586)))
 (let ((?x5062 (+ (* (- 24) (* s r)) ?x615 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x633 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x870 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x9020) ?x954 ?x980 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1051 (* 36 ?x9109) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x442 (* (- 3) s00)))
 (let ((?x668 (* (- 4) ?x655)))
 (let ((?x610 (* 2 ?x609)))
 (let ((?x600 (* (- 18) ?x586)))
 (let ((?x5274 (+ (* (- 9) (* s r)) ?x600 (* 9 (* r00 s00)) ?x610 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x9020) ?x668 (* 18 (* r00 x)) ?x442 (* 6 ?x9109) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x9056 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x442 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x533))))
 (let (($x9076 (and $x8822 (= ?x9056 0) (= ?x5274 0) (= ?x5062 0) $x6336 $x8840)))
 (rewrite (= $x9076 $x7484)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x341 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x218 (- (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 4 ?x216 ?x216 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x222 (- (+ ?x218 (* 18 ?x216 ?x216 r00 ?x213 ?x213 ?x213 ?x213)) (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x226 (- (+ ?x222 (* 3 ?x216 ?x216 ?x212 s00)) (* 18 ?x216 ?x216 ?x216 ?x213 ?x213 ?x213 x00))))
 (let ((?x230 (- (+ ?x226 (* 18 ?x216 r00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 r00 r00 ?x212 s00))))
 (let ((?x233 (+ ?x230 (* 18 ?x216 ?x216 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 r00 ?x212 s00))))
 (let ((?x237 (+ (- ?x233 (* 3 ?x216 s00 ?x213 ?x213)) (* 9 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x243 (- (- ?x237 (* 9 ?x216 ?x216 r00 ?x212 s00)) (* 9 ?x216 ?x216 ?x216 ?x212 s00))))
 (let ((?x245 (- (- ?x243 (* 6 ?x216 ?x216 ?x216 r00 ?x212 ?x212)) (* 3 ?x216 ?x216 s00 ?x213 ?x213 ?x213))))
 (let ((?x250 (- (+ ?x245 (* 6 ?x216 ?x216 r00 r00 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x256 (+ (- ?x250 (* 18 ?x216 ?x216 r00 ?x213 ?x213 ?x213 x00)) (* 3 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 2 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 ?x216 ?x212 ?x212))))
 (let ((?x260 (+ (- ?x256 (* 18 ?x216 r00 ?x213 ?x213 x00)) (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x264 (- (- ?x260 (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x269 (- (+ ?x264 (* 9 ?x216 r00 s00 ?x213 ?x213)) (* 2 ?x216 ?x216 ?x212 ?x212 s00))))
 (let ((?x276 (+ (- ?x269 (* 4 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213)) (* 4 ?x216 ?x216 ?x212 s00 s00) (* 9 ?x216 ?x216 ?x216 s00 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213) (* 6 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 18 ?x216 ?x216 r00 ?x212 x00))))
 (let ((?x280 (+ (- ?x276 (* 6 ?x216 ?x216 ?x216 r00 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 r00 r00 ?x212 ?x212))))
 (let ((?x284 (+ (- ?x280 (* 3 ?x216 ?x216 ?x212 ?x212)) (* 2 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x288 (+ (- ?x284 (* 2 ?x216 ?x216 ?x212 ?x212 ?x212)) (* 2 ?x216 ?x212 s00 ?x213 ?x213))))
 (let ((?x293 (+ (- ?x288 (* 6 ?x216 ?x216 r00 r00 ?x212 ?x213 ?x213 ?x213)) (* 2 ?x216 ?x216 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x216 ?x212 ?x213 ?x213))))
 (let ((?x299 (- (- ?x293 (* 18 ?x216 ?x216 ?x213 ?x213 x00)) (* 9 ?x216 ?x216 ?x212 ?x213 ?x213))))
 (let ((?x301 (- (- ?x299 (* 6 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x216 ?x212 ?x213))))
 (let ((?x305 (+ ?x301 (* 18 ?x216 ?x216 ?x216 ?x212 x00) (* 2 ?x216 ?x212 ?x212 ?x213 ?x213) (* 6 ?x216 r00 r00 s00 ?x213 ?x213))))
 (let ((?x309 (+ (- ?x305 (* 6 ?x216 r00 r00 ?x212 ?x213 ?x213)) (* 9 ?x216 ?x216 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x315 (+ (- ?x309 (* 6 ?x216 ?x216 r00 s00 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 9 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 s00 ?x213 ?x213))))
 (let ((?x319 (+ (- ?x315 (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00)) (* 18 ?x216 ?x216 ?x216 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x323 (- (- ?x319 (* 4 ?x216 s00 s00 ?x213 ?x213)) (* 18 ?x216 ?x216 r00 ?x212 ?x213))))
 (let ((?x329 (- (+ ?x323 (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x331 (- (- ?x329 (* 9 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x213 ?x213))))
 (let ((?x334 (+ ?x331 (* 9 ?x216 ?x216 r00 ?x212 ?x212) (* 6 ?x216 ?x216 r00 ?x212 ?x213 ?x213))))
 (let (($x338 (not (= (- ?x334 (* 9 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213)) 0))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x338))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x9039 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x8835 (+ 3 s ?x211)))
 (let ((?x344 (* (- 1) s)))
 (let ((?x8802 (+ x ?x344)))
 (let ((?x1460 (+ 1 r)))
 (let ((?x7410 (+ (* 2 (* ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 4) (* s00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 18 (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8802)) (* (- 3) (* s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 3 (* s00 ?x1460 ?x1460 ?x8835)) (* (- 18) (* x00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 18 (* r00 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 6) (* r00 r00 s00 ?x1460 ?x1460 ?x8835)) (* 18 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 s00 ?x1460 ?x1460 ?x1460 ?x8835)) (* (- 3) (* s00 ?x1460 ?x8802 ?x8802)) (* 9 (* r00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 s00 ?x1460 ?x1460 ?x8835)) (* (- 9) (* s00 ?x1460 ?x1460 ?x1460 ?x8835)) (* (- 6) (* r00 ?x1460 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 3) (* s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 r00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 9) (* ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 3 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 3 (* ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* 2 (* s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* 9 (* ?x1460 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x1460 ?x8802 ?x8802)) (* 18 (* ?x1460 ?x8802 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 6) (* r00 r00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 9) (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 s00 ?x1460 ?x8802 ?x8802)) (* (- 2) (* s00 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 4) (* s00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 4 (* s00 s00 ?x1460 ?x1460 ?x8835)) (* 9 (* s00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 6 (* r00 r00 s00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 18 (* r00 x00 ?x1460 ?x1460 ?x8835)) (* (- 6) (* r00 s00 ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* 6 (* r00 r00 ?x1460 ?x1460 ?x8835 ?x8835)) (* (- 3) (* ?x1460 ?x1460 ?x8835 ?x8835)) (* 2 (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835)) (* (- 2) (* ?x1460 ?x1460 ?x8835 ?x8835 ?x8835)) (* 2 (* s00 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 6) (* r00 r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 2 (* s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)) (* 3 (* ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 18) (* x00 ?x1460 ?x1460 ?x8802 ?x8802)) (* (- 9) (* ?x1460 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 6) (* r00 s00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 18) (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8835)) (* 18 (* x00 ?x1460 ?x1460 ?x1460 ?x8835)) (* 2 (* ?x1460 ?x8802 ?x8802 ?x8835 ?x8835)) (* 6 (* r00 r00 s00 ?x1460 ?x8802 ?x8802)) (* (- 6) (* r00 r00 ?x1460 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 s00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802)) (* (- 6) (* r00 s00 ?x1460 ?x1460 ?x8802 ?x8802)) (* 18 (* r00 ?x8802 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 9 (* s00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 9 (* s00 ?x1460 ?x1460 ?x8802 ?x8802)) (* (- 18) (* x00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* 18 (* ?x1460 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8802)) (* (- 4) (* s00 s00 ?x1460 ?x8802 ?x8802)) (* (- 18) (* r00 ?x1460 ?x1460 ?x8802 ?x8835)) (* 6 (* r00 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 18) (* r00 x00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 ?x8802 ?x8802 ?x8802 ?x8835 ?x8835 ?x8835 ?x8835)) (* (- 9) (* r00 ?x1460 ?x8802 ?x8802 ?x8835)) (* 9 (* r00 ?x1460 ?x1460 ?x8835 ?x8835)) (* 6 (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8835)) (* (- 9) (* r00 ?x1460 ?x1460 ?x8802 ?x8802 ?x8802 ?x8835)))))
 (let (($x8840 (not (= ?x7410 0))))
 (let ((?x1410 (* x00 x00)))
 (let ((?x6275 (* 108 ?x1410)))
 (let ((?x5812 (* (- 9) s)))
 (let ((?x9109 (* r00 r00 s00)))
 (let ((?x5044 (* (- 36) ?x9109)))
 (let ((?x137 (* 9 s00)))
 (let ((?x655 (* s00 s00)))
 (let ((?x5125 (* 51 ?x655)))
 (let ((?x9020 (* r00 r00 s)))
 (let ((?x5133 (* 36 ?x9020)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x4457 (* 16 ?x1248)))
 (let ((?x869 (* s00 x00)))
 (let ((?x3944 (* (- 108) ?x869)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x1896 (* (- 432) ?x946)))
 (let ((?x586 (* r00 x00)))
 (let ((?x3047 (* 108 ?x586)))
 (let ((?x6323 (+ (* 216 (* r00 s00 x00)) ?x3047 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1896 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3944 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4457 (* (- 108) (* x s)) ?x5133 ?x5125 (* (- 108) (* r00 x)) ?x137 ?x5044 ?x5812 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6275)))
 (let (($x6336 (= ?x6323 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1051 (* (- 9) s00)))
 (let ((?x980 (* (- 15) ?x655)))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x954 (* (- 36) ?x941)))
 (let ((?x870 (* 6 ?x869)))
 (let ((?x609 (* s s)))
 (let ((?x633 (* 3 ?x609)))
 (let ((?x615 (* (- 54) ?x586)))
 (let ((?x5062 (+ (* (- 24) (* s r)) ?x615 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x633 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x870 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x9020) ?x954 ?x980 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1051 (* 36 ?x9109) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x442 (* (- 3) s00)))
 (let ((?x668 (* (- 4) ?x655)))
 (let ((?x610 (* 2 ?x609)))
 (let ((?x600 (* (- 18) ?x586)))
 (let ((?x5274 (+ (* (- 9) (* s r)) ?x600 (* 9 (* r00 s00)) ?x610 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x9020) ?x668 (* 18 (* r00 x)) ?x442 (* 6 ?x9109) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x9056 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x442 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x8822 (= (+ s00 ?x344 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x9076 (and $x8822 (= ?x9056 0) (= ?x5274 0) (= ?x5062 0) $x6336 $x8840)))
 (let ((?x213 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x218 (- (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 4 ?x216 ?x216 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x222 (- (+ ?x218 (* 18 ?x216 ?x216 r00 ?x213 ?x213 ?x213 ?x213)) (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x226 (- (+ ?x222 (* 3 ?x216 ?x216 ?x212 s00)) (* 18 ?x216 ?x216 ?x216 ?x213 ?x213 ?x213 x00))))
 (let ((?x230 (- (+ ?x226 (* 18 ?x216 r00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 r00 r00 ?x212 s00))))
 (let ((?x233 (+ ?x230 (* 18 ?x216 ?x216 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 r00 ?x212 s00))))
 (let ((?x237 (+ (- ?x233 (* 3 ?x216 s00 ?x213 ?x213)) (* 9 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x243 (- (- ?x237 (* 9 ?x216 ?x216 r00 ?x212 s00)) (* 9 ?x216 ?x216 ?x216 ?x212 s00))))
 (let ((?x245 (- (- ?x243 (* 6 ?x216 ?x216 ?x216 r00 ?x212 ?x212)) (* 3 ?x216 ?x216 s00 ?x213 ?x213 ?x213))))
 (let ((?x250 (- (+ ?x245 (* 6 ?x216 ?x216 r00 r00 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x256 (+ (- ?x250 (* 18 ?x216 ?x216 r00 ?x213 ?x213 ?x213 x00)) (* 3 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 2 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 ?x216 ?x212 ?x212))))
 (let ((?x260 (+ (- ?x256 (* 18 ?x216 r00 ?x213 ?x213 x00)) (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x264 (- (- ?x260 (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x269 (- (+ ?x264 (* 9 ?x216 r00 s00 ?x213 ?x213)) (* 2 ?x216 ?x216 ?x212 ?x212 s00))))
 (let ((?x276 (+ (- ?x269 (* 4 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213)) (* 4 ?x216 ?x216 ?x212 s00 s00) (* 9 ?x216 ?x216 ?x216 s00 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213) (* 6 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 18 ?x216 ?x216 r00 ?x212 x00))))
 (let ((?x280 (+ (- ?x276 (* 6 ?x216 ?x216 ?x216 r00 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 r00 r00 ?x212 ?x212))))
 (let ((?x284 (+ (- ?x280 (* 3 ?x216 ?x216 ?x212 ?x212)) (* 2 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x288 (+ (- ?x284 (* 2 ?x216 ?x216 ?x212 ?x212 ?x212)) (* 2 ?x216 ?x212 s00 ?x213 ?x213))))
 (let ((?x293 (+ (- ?x288 (* 6 ?x216 ?x216 r00 r00 ?x212 ?x213 ?x213 ?x213)) (* 2 ?x216 ?x216 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x216 ?x212 ?x213 ?x213))))
 (let ((?x299 (- (- ?x293 (* 18 ?x216 ?x216 ?x213 ?x213 x00)) (* 9 ?x216 ?x216 ?x212 ?x213 ?x213))))
 (let ((?x301 (- (- ?x299 (* 6 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x216 ?x212 ?x213))))
 (let ((?x305 (+ ?x301 (* 18 ?x216 ?x216 ?x216 ?x212 x00) (* 2 ?x216 ?x212 ?x212 ?x213 ?x213) (* 6 ?x216 r00 r00 s00 ?x213 ?x213))))
 (let ((?x309 (+ (- ?x305 (* 6 ?x216 r00 r00 ?x212 ?x213 ?x213)) (* 9 ?x216 ?x216 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x315 (+ (- ?x309 (* 6 ?x216 ?x216 r00 s00 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 9 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 s00 ?x213 ?x213))))
 (let ((?x319 (+ (- ?x315 (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00)) (* 18 ?x216 ?x216 ?x216 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x323 (- (- ?x319 (* 4 ?x216 s00 s00 ?x213 ?x213)) (* 18 ?x216 ?x216 r00 ?x212 ?x213))))
 (let ((?x329 (- (+ ?x323 (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x331 (- (- ?x329 (* 9 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x213 ?x213))))
 (let ((?x334 (+ ?x331 (* 9 ?x216 ?x216 r00 ?x212 ?x212) (* 6 ?x216 ?x216 r00 ?x212 ?x213 ?x213))))
 (let (($x338 (not (= (- ?x334 (* 9 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213)) 0))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x340 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x338))))
 (rewrite (= $x340 $x9076)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x342 (asserted $x341)))
 (let ((@x7525 (mp (mp @x342 (quant-intro (proof-bind ?x9039) (= $x341 $x8857)) $x8857) (rewrite (= $x8857 $x8857)) $x8857)))
 (let ((@x1843 (mp (mp @x7525 (quant-intro (proof-bind ?x7482) (= $x8857 $x7444)) $x7444) (quant-intro (proof-bind ?x7407) (= $x7444 $x7379)) $x7379)))
 (let ((@x10750 (mp (mp~ @x1843 (sk (~ $x7379 $x4068)) $x4068) (rewrite (= $x4068 $x3353)) $x3353)))
 (let ((@x10587 (and-elim @x10750 $x4017)))
 (let ((@x7112 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4017) $x10778)) @x10587 $x10778)))
 (let (($x10774 (>= ?x4022 0)))
 (let ((@x10449 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4017) $x10774)) @x10587 $x10774)))
 (let (($x4901 (<= ?x4054 0)))
 (let ((@x10807 (and-elim @x10750 $x4048)))
 (let ((@x10798 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4048) $x4901)) @x10807 $x4901)))
 (let (($x10777 (>= ?x4054 0)))
 (let ((@x7958 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4048) $x10777)) @x10807 $x10777)))
 (let (($x10772 (<= ?x4269 0)))
 (let ((@x1701 (and-elim @x10750 $x4270)))
 (let ((@x3397 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4270) $x10772)) @x1701 $x10772)))
 (let (($x10773 (>= ?x4269 0)))
 (let ((@x2561 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4270) $x10773)) @x1701 $x10773)))
 (let (($x6801 (<= ?x8167 0)))
 (let ((@x8397 (and-elim @x10750 $x8196)))
 (let ((@x10738 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x8196) $x6801)) @x8397 $x6801)))
 (let (($x4998 (>= ?x8167 0)))
 (let ((@x7547 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x8196) $x4998)) @x8397 $x4998)))
 (let (($x5705 (not (<= ?x9099 (- 27)))))
 (let (($x4037 (>= ?x9099 (- 27))))
 (let ((@x5700 ((_ th-lemma arith) (hypothesis (not $x4037)) @x7958 @x10798 @x7547 @x10738 @x2561 @x3397 @x7547 @x10738 @x2561 @x3397 @x10449 @x7112 @x7958 @x10798 @x7547 @x10738 @x2561 @x3397 @x7958 @x10798 @x10449 @x7112 false)))
 (let ((@x3121 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3366 $x5705 (not $x4037))) (and-elim @x10750 $x10801) (or $x5705 (not $x4037)))))
 ((_ th-lemma arith) (unit-resolution @x3121 (lemma @x5700 $x4037) $x5705) @x7958 @x10798 @x7547 @x10738 @x2561 @x3397 @x7547 @x10738 @x2561 @x3397 @x10449 @x7112 @x7958 @x10798 @x7547 @x10738 @x2561 @x3397 @x7958 @x10798 @x10449 @x7112 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        45
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2618
 :arith-nonlinear-bounds    38
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      13
 :arith-tableau-max-columns 432
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                6.20
 :memory                    4.63
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                8495205
 :num-checks                1
 :propagations              12
 :rlimit-count              111295
 :time                      0.08
 :total-time                0.11)
