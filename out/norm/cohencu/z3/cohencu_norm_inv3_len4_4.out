unsat
((set-logic NIA)
(declare-fun y!2 () Int)
(declare-fun z!1 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x2010 (* (- 72) y!2)))
 (let ((?x3832 (* z00 y00 y!2)))
 (let ((?x4289 (* (- 18) (* x00 z!1))))
 (let ((?x3027 (* y00 z!1)))
 (let ((?x2503 (* (- 12) ?x3027)))
 (let ((?x1569 (* (- 108) x!3)))
 (let ((?x2745 (* z!1 y!2)))
 (let ((?x4290 (* 12 ?x2745)))
 (let ((?x1193 (* z!1 x!3)))
 (let ((?x3790 (* 18 ?x1193)))
 (let ((?x670 (* z00 y00 y00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x4485 (* 36 ?x561)))
 (let ((?x494 (* z00 y00)))
 (let ((?x610 (* 6 ?x494)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x4333 (+ ?x67 ?x74 (* 18 (* y00 x00)) ?x610 ?x4485 (* 18 (* x!3 y!2)) ?x670 (* (- 3) (* z00 z00 y00)) (* (- 3) (* z00 z00 x00)) ?x3790 (* 3 (* z00 z00 y!2)) ?x4290 ?x1569 ?x2503 (* (- 18) (* y00 x!3)) ?x4289 (* (- 1) (* z!1 y!2 y!2)) ?x3832 (* 3 (* z00 z!1 x!3)) ?x2010 (* 3 (* z00 z00 x!3)) (* (- 3) (* z00 x00 z!1)) (* (- 2) (* z00 y!2 y!2)) (* (- 18) (* x00 y!2)) (* (- 1) (* y00 z!1 y!2)) (* 2 (* y00 y00 z!1)) (* (- 6) (* z00 y!2)) (* (- 36) (* y00 y!2)))))
 (let (($x4244 (<= ?x4333 0)))
 (let (($x1956 (= ?x4333 0)))
 (let ((?x1533 (+ x!3 y!2)))
 (let ((?x2397 (+ z!1 y!2)))
 (let ((?x2470 (+ 6 z!1)))
 (let ((?x332 (+ 1 n!0)))
 (let ((?x1835 (* (- 18) (* y00 z00 ?x332 ?x332 ?x332 ?x2470 ?x2397 ?x2397 ?x2397 ?x1533 ?x1533 ?x1533))))
 (let ((?x1848 (* 72 (* y00 ?x332 ?x332 ?x332 ?x2470 ?x2397 ?x2397 ?x2397 ?x1533 ?x1533 ?x1533))))
 (let ((?x1893 (* 12 (* y00 ?x332 ?x332 ?x332 ?x2470 ?x2470 ?x2397 ?x2397 ?x2397 ?x1533 ?x1533 ?x1533))))
 (let ((?x1875 (* (- 108) (* ?x332 ?x332 ?x332 ?x2470 ?x2397 ?x2397 ?x2397 ?x1533 ?x1533 ?x1533 ?x1533))))
 (let ((?x2431 (* 6 (* ?x332 ?x332 ?x332 ?x2470 ?x2470 ?x2397 ?x2397 ?x2397 ?x2397 ?x1533 ?x1533 ?x1533))))
 (let ((?x2104 (* (- 6) (* z00 z00 ?x332 ?x332 ?x332 ?x2470 ?x2397 ?x2397 ?x2397 ?x1533 ?x1533 ?x1533))))
 (let ((?x2901 (* 6 (* z00 ?x332 ?x332 ?x332 ?x2470 ?x2470 ?x2397 ?x2397 ?x2397 ?x1533 ?x1533 ?x1533))))
 (let ((?x2735 (* z00 z00 ?x332 ?x332 ?x332 ?x2470 ?x2470 ?x2397 ?x2397 ?x2397 ?x1533 ?x1533 ?x1533)))
 (let ((?x3246 (* 108 (* x00 ?x332 ?x332 ?x332 ?x2470 ?x2397 ?x2397 ?x2397 ?x1533 ?x1533 ?x1533))))
 (let ((?x2500 (* z00 z00 z00 ?x332 ?x332 ?x332 ?x2470 ?x2397 ?x2397 ?x2397 ?x1533 ?x1533 ?x1533)))
 (let ((?x3634 (* (- 72) (* ?x332 ?x332 ?x332 ?x2470 ?x2397 ?x2397 ?x2397 ?x2397 ?x1533 ?x1533 ?x1533))))
 (let ((?x1805 (+ (* 23328 (* x!3 x!3)) (* 18 (* z00 z00 n!0 n!0 z!1 x!3 x!3)) (* (- 432) (* y00 n!0 n!0 x!3 y!2 y!2)) (* (- 1) (* z00 z00 z00 n!0 n!0 n!0 x!3 x!3 y!2)) (* (- 1) (* z00 z00 z00 z!1 z!1 z!1 x!3)) (* (- 108) (* x00 n!0 n!0 n!0 x!3 x!3 y!2)) (* (- 12) (* y00 z!1 z!1 z!1 z!1 y!2)) (* (- 72) (* y00 x!3 x!3 y!2)) (* 1944 (* z00 y00 z!1 y!2)) (* 62208 (* x!3 y!2)) (* (- 72) (* y00 n!0 n!0 n!0 z!1 x!3 x!3)) (* 31104 (* z!1 x!3 y!2)) (* 1944 (* z!1 z!1 x!3 x!3)) (* 1296 (* z!1 z!1 z!1 x!3)) (* (- 144) (* y00 z!1 x!3 y!2)) (* (- 6) (* z00 z00 z00 n!0 n!0 z!1 x!3 y!2)) (* 18 (* z00 z00 n!0 y!2 y!2 y!2)) (* 38880 (* y!2 y!2)) (* 108 (* x00 ?x332 ?x332 ?x2470 ?x2470 ?x2397 ?x2397 ?x1533)) (* (- 1296) (* z00 z!1 z!1 y!2)) (* (- 1) (* z00 z00 z00 n!0 n!0 n!0 z!1 x!3 x!3)) (* (- 3) (* z00 z00 z00 n!0 n!0 z!1 x!3 x!3)) (* (- 3) (* z00 z00 z00 n!0 z!1 y!2 y!2)) (* (- 324) (* x00 n!0 n!0 y!2 y!2 y!2)) (* 6 (* z00 z00 z!1 x!3 x!3)) (* (- 1944) (* x00 z!1 z!1 y!2)) (* z00 z00 z!1 z!1 z!1 z!1 y!2) (* (- 6) (* z00 ?x332 ?x332 ?x332 ?x2470 ?x2397 ?x1533 ?x1533)) (* 108 (* z00 y00 n!0 n!0 z!1 x!3 y!2)) (* 12 (* z00 z00 n!0 n!0 n!0 x!3 y!2 y!2)) (* z00 z00 z00 ?x332 ?x332 ?x2470 ?x2470 ?x2397 ?x2397 ?x1533) (* (- 3888) (* y00 z!1 z!1 x!3)) (* (- 216) (* y00 n!0 n!0 z!1 x!3 x!3)) (* (- 6) (* z00 z!1 z!1 z!1 z!1 x!3)) (* (- 108) (* x00 z!1 x!3 x!3)) ?x3634 (* 3240 (* z!1 z!1 y!2 y!2)) (* 11664 (* z!1 x!3 x!3)) (* 15552 ?x1193) (* (- 1) (* z00 z00 z00 y!2 y!2 y!2)) (* 18 (* z00 y00 z!1 y!2 y!2)) (* 108 (* z00 y00 n!0 z!1 x!3 y!2)) (* (- 216) (* x00 n!0 n!0 n!0 z!1 x!3 y!2)) (* (- 108) (* x00 n!0 n!0 n!0 z!1 y!2 y!2)) (* (- 6) (* z00 z00 z00 n!0 n!0 x!3 y!2 y!2)) (* (- 216) (* y00 n!0 n!0 z!1 y!2 y!2)) (* (- 144) (* y00 n!0 n!0 n!0 x!3 y!2 y!2)) (* (- 18) (* y00 z00 ?x332 ?x332 ?x2470 ?x2470 ?x2397 ?x2397 ?x1533)) (* (- 2) (* z00 z00 z00 n!0 n!0 n!0 z!1 x!3 y!2)) (* (- 3) (* z00 z00 z00 n!0 y!2 y!2 y!2)) (* 18 (* z00 y00 n!0 n!0 n!0 z!1 x!3 x!3)) (* (- 11664) (* x00 z!1 y!2)) (* 18 (* z00 y00 n!0 n!0 n!0 x!3 x!3 y!2)) (* 54 (* z00 y00 n!0 n!0 x!3 x!3 y!2)) (* (- 3) (* z00 z00 z00 n!0 z!1 x!3 x!3)) (* 12 (* y00 ?x332 ?x332 ?x2470 ?x2470 ?x2470 ?x2397 ?x2397 ?x1533)) (* 36 (* z00 z00 n!0 x!3 y!2 y!2)) (* (- 108) (* x00 n!0 n!0 n!0 z!1 x!3 x!3)) (* (- 72) (* y00 n!0 n!0 n!0 x!3 x!3 y!2)) (* 54 (* z00 y00 n!0 n!0 y!2 y!2 y!2)) (* (- 144) (* y00 n!0 n!0 n!0 z!1 x!3 y!2)) (* (- 11664) (* x00 z!1 x!3)) (* (- 324) (* x00 n!0 x!3 x!3 y!2)) (* 54 (* z00 y00 n!0 y!2 y!2 y!2)) (* 2592 (* z00 z00 y!2)) (* (- 216) (* x00 x!3 y!2 y!2)) (* (- 3888) (* y00 z!1 z!1 y!2)) (* (- 72) (* y00 n!0 n!0 n!0 z!1 y!2 y!2)) (* 6 (* z00 z00 n!0 n!0 n!0 z!1 y!2 y!2)) (* (- 6) (* z00 z00 z00 n!0 z!1 x!3 y!2)) (* (- 108) (* x00 z!1 z!1 z!1 y!2)) (* (- 108) (* x00 z!1 z!1 z!1 x!3)) (* 18 (* z00 y00 x!3 x!3 y!2)) (* 6 (* z00 ?x332 ?x332 ?x2470 ?x2470 ?x2470 ?x2397 ?x2397 ?x1533)) (* (- 1) (* z00 z00 ?x332 ?x332 ?x2470 ?x2470 ?x2470 ?x2397 ?x2397 ?x1533)) (* (- 5184) (* z00 z!1 y!2)) (* (- 216) (* y00 n!0 n!0 y!2 y!2 y!2)) (* (- 72) (* y00 z!1 y!2 y!2)) (* 1944 (* z00 y00 z!1 x!3)) (* 5184 (* z!1 z!1 x!3 y!2)) (* (- 324) (* x00 n!0 z!1 x!3 x!3)) (* (- 648) (* x00 n!0 n!0 x!3 y!2 y!2)) ?x2500 (* 12 (* z00 z00 x!3 y!2 y!2)) (* 6 (* z00 z00 n!0 n!0 n!0 y!2 y!2 y!2)) (* 36 (* z00 y00 n!0 n!0 n!0 x!3 y!2 y!2)) (* (- 324) (* x00 n!0 n!0 z!1 y!2 y!2)) (* (- 432) (* y00 n!0 z!1 x!3 y!2)) (* 72 (* z!1 z!1 z!1 z!1 x!3)) (* 54 (* z00 y00 n!0 z!1 x!3 x!3)) ?x3246 (* (- 1) ?x2735) (* 1296 (* z!1 z!1 z!1 y!2)) (* 15552 ?x2745) (* (- 144) (* z00 z!1 z!1 z!1 x!3)) ?x2901 (* (- 1296) (* z00 z!1 z!1 x!3)) (* (- 1) (* z00 z00 z00 z!1 z!1 z!1 y!2)) (* (- 216) (* z00 z00 z00 x!3)) (* (- 72) (* y00 z!1 x!3 x!3)) (* (- 216) (* x00 z!1 x!3 y!2)) (* (- 648) (* x00 n!0 z!1 x!3 y!2)) ?x2104 (* 18 (* z00 y00 n!0 n!0 n!0 y!2 y!2 y!2)) (* 18 (* z00 y00 z!1 x!3 x!3)) (* (- 18) (* z00 z00 z00 z!1 z!1 x!3)) (* 12 (* z00 z00 n!0 n!0 n!0 z!1 x!3 y!2)) (* 36 (* z00 z00 n!0 n!0 z!1 x!3 y!2)) (* 18 (* z00 y00 y!2 y!2 y!2)) (* (- 1944) (* x00 z!1 z!1 x!3)) (* 108 (* z00 y00 n!0 x!3 y!2 y!2)) (* 54 (* z00 y00 n!0 n!0 z!1 x!3 x!3)) (* (- 216) (* y00 n!0 x!3 x!3 y!2)) (* (- 324) (* x00 n!0 n!0 x!3 x!3 y!2)) (* (- 6) (* z00 z!1 z!1 z!1 z!1 y!2)) (* 180 (* z!1 z!1 z!1 y!2 y!2)) (* 288 (* z!1 z!1 z!1 x!3 y!2)) (* 6 (* z00 z00 x!3 x!3 y!2)) (* 6 (* z00 z00 z!1 y!2 y!2)) (* (- 144) (* z00 z!1 z!1 z!1 y!2)) (* 12 (* z00 z00 z!1 x!3 y!2)) (* (- 324) (* x00 n!0 z!1 y!2 y!2)) (* 72 (* z!1 z!1 z!1 z!1 y!2)) ?x2431 (* 18 (* z00 y00 z!1 z!1 z!1 y!2)) (* 1512 (* z00 z00 z!1 x!3)) (* 108 (* ?x332 ?x332 ?x332 ?x2397 ?x1533 ?x1533 ?x1533)) (* 6 (* z00 z00 y!2 y!2 y!2)) (* (- 2) (* z00 z00 z00 n!0 n!0 n!0 x!3 y!2 y!2)) (* (- 432) (* y00 n!0 n!0 z!1 x!3 y!2)) (* 18 (* z00 y00 n!0 n!0 n!0 z!1 y!2 y!2)) (* 54 (* z00 y00 n!0 n!0 z!1 y!2 y!2)) (* (- 12) (* y00 z!1 z!1 z!1 z!1 x!3)) (* (- 3) (* z00 z00 z00 n!0 n!0 z!1 y!2 y!2)) (* 7776 (* z!1 z!1 y!2)) (* (- 72) (* y00 n!0 n!0 n!0 y!2 y!2 y!2)) (* (- 108) (* z00 z00 z00 z!1 x!3)) (* 72 (* y00 ?x332 ?x332 ?x2470 ?x2470 ?x2397 ?x2397 ?x1533)) (* (- 31104) (* y00 x!3)) (* 36 (* z00 z00 n!0 n!0 x!3 y!2 y!2)) (* 18 (* z00 z00 n!0 z!1 x!3 x!3)) (* 19440 (* z!1 y!2 y!2)) (* (- 648) (* x00 n!0 n!0 z!1 x!3 y!2)) (* 3888 ?x3832) (* (- 5184) (* z00 z!1 x!3)) (* (- 1) (* z00 z00 z00 n!0 n!0 n!0 z!1 y!2 y!2)) (* (- 18) (* z00 z00 z00 z!1 z!1 y!2)) (* (- 216) (* x00 n!0 n!0 n!0 x!3 y!2 y!2)) (* (- 216) (* y00 n!0 y!2 y!2 y!2)) (* 72 (* ?x332 ?x332 ?x332 ?x2397 ?x2397 ?x1533 ?x1533)) (* z00 z00 ?x332 ?x332 ?x332 ?x2470 ?x2397 ?x1533 ?x1533) (* (- 108) (* x00 x!3 x!3 y!2)) (* (- 108) (* x00 n!0 n!0 n!0 y!2 y!2 y!2)) (* 36 (* z00 z00 n!0 z!1 x!3 y!2)) (* (- 1) (* z00 z00 z00 n!0 n!0 n!0 y!2 y!2 y!2)) (* (- 108) (* z00 z00 z00 z!1 y!2)) (* 2592 (* z00 z00 x!3)) (* (- 108) (* x00 z!1 y!2 y!2)) (* 7776 (* z!1 z!1 x!3)) (* 108 (* z00 y00 n!0 n!0 x!3 y!2 y!2)) (* 54 (* z00 y00 n!0 x!3 x!3 y!2)) (* (- 23328) (* x00 y!2)) (* (- 18144) (* y00 z!1 y!2)) (* (- 7776) (* z00 x!3)) (* (- 7776) (* z00 y!2)) (* 18 (* z00 z00 n!0 n!0 z!1 y!2 y!2)) (* (- 31104) (* y00 y!2)) (* 36 (* z00 y00 z!1 x!3 y!2)) (* (- 3) (* z00 z00 z00 n!0 n!0 y!2 y!2 y!2)) (* 36 (* z00 y00 x!3 y!2 y!2)) (* (- 108) (* ?x332 ?x332 ?x2470 ?x2470 ?x2397 ?x2397 ?x1533 ?x1533)) (* 30 (* z00 z00 z!1 z!1 z!1 x!3)) (* (- 360) (* y00 z!1 z!1 z!1 y!2)) (* (- 6) (* z00 z00 ?x332 ?x332 ?x2470 ?x2470 ?x2397 ?x2397 ?x1533)) (* (- 12) (* y00 ?x332 ?x332 ?x332 ?x2470 ?x2397 ?x1533 ?x1533)) (* 6 (* ?x332 ?x332 ?x2470 ?x2470 ?x2470 ?x2397 ?x2397 ?x2397 ?x1533)) (* 324 (* z00 y00 z!1 z!1 x!3)) (* z00 z00 z!1 z!1 z!1 z!1 x!3) ?x1875 (* 3888 (* z00 y00 x!3)) (* 6 (* z00 z00 n!0 n!0 n!0 x!3 x!3 y!2)) (* (- 1) (* z00 z00 z00 z!1 y!2 y!2)) (* 18 (* z00 z00 n!0 n!0 x!3 x!3 y!2)) (* (- 1) (* z00 z00 z00 z!1 x!3 x!3)) (* (- 3) (* z00 z00 z00 n!0 x!3 x!3 y!2)) (* (- 216) (* y00 n!0 z!1 y!2 y!2)) (* 18 (* z00 z00 n!0 x!3 x!3 y!2)) (* (- 72) (* ?x332 ?x332 ?x2470 ?x2470 ?x2397 ?x2397 ?x2397 ?x1533)) ?x1893 (* 18 (* z00 z00 n!0 z!1 y!2 y!2)) (* (- 3) (* z00 z00 z00 n!0 n!0 x!3 x!3 y!2)) (* (- 432) (* y00 n!0 x!3 y!2 y!2)) (* (- 2) (* z00 z00 z00 z!1 x!3 y!2)) (* (- 6) (* z00 z00 z00 n!0 x!3 y!2 y!2)) (* 36 (* z00 y00 n!0 n!0 n!0 z!1 x!3 y!2)) (* 18 (* z00 z00 n!0 n!0 y!2 y!2 y!2)) (* (- 108) (* x00 y!2 y!2 y!2)) (* 54 (* z00 y00 n!0 z!1 y!2 y!2)) (* (- 324) (* x00 n!0 n!0 z!1 x!3 x!3)) ?x1848 (* (- 324) (* x00 n!0 y!2 y!2 y!2)) (* (- 648) (* x00 n!0 x!3 y!2 y!2)) (* 18 (* z00 y00 z!1 z!1 z!1 x!3)) (* 324 (* z00 y00 z!1 z!1 y!2)) (* (- 23328) (* x00 x!3)) ?x1835 (* 30 (* z00 z00 z!1 z!1 z!1 y!2)) (* 6 (* z00 z00 n!0 n!0 n!0 z!1 x!3 x!3)) (* (- 216) (* z00 z00 z00 y!2)) (* (- 2) (* z00 z00 z00 x!3 y!2 y!2)) (* (- 1) (* z00 z00 z00 x!3 x!3 y!2)) (* 1512 (* z00 z00 z!1 y!2)) (* 324 (* z00 z00 z!1 z!1 x!3)) (* 324 (* z00 z00 z!1 z!1 y!2)) (* (- 144) (* y00 x!3 y!2 y!2)) (* (- 18144) (* y00 z!1 x!3)) (* (- 6) (* ?x332 ?x332 ?x332 ?x2470 ?x2397 ?x2397 ?x1533 ?x1533)) (* (- 360) (* y00 z!1 z!1 z!1 x!3)) (* (- 6) (* ?x2470 ?x2470 ?x2470 ?x2470 ?x2397 ?x1533)) (* (- 216) (* y00 n!0 z!1 x!3 x!3)) (* (- 72) (* y00 y!2 y!2 y!2)) (* 108 (* z!1 z!1 z!1 x!3 x!3)) (* (- 216) (* y00 n!0 n!0 x!3 x!3 y!2)))))
 (let (($x1803 (= ?x1805 0)))
 (let (($x1796 (not $x1803)))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x1176 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1172 (* z00 z00 z00 y00)))
 (let ((?x1082 (* (- 36) (* z00 y00 x00))))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x881 (* z00 z00 x00)))
 (let ((?x1132 (* (- 18) ?x881)))
 (let ((?x753 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x695 (* z00 z00 y00)))
 (let ((?x1233 (* (- 10) ?x695)))
 (let ((?x705 (* (- 12) ?x670)))
 (let ((?x650 (* y!2 y!2)))
 (let ((?x664 (* 24 ?x650)))
 (let ((?x565 (* x!3 y!2)))
 (let ((?x867 (* 108 ?x565)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x531 (* z00 x00)))
 (let ((?x449 (* 36 ?x531)))
 (let ((?x859 (* 24 ?x494)))
 (let ((?x441 (* y00 x00)))
 (let ((?x432 (* 216 ?x441)))
 (let ((?x327 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x320 (* x!3 x!3)))
 (let ((?x305 (* 108 ?x320)))
 (let ((?x5847 (+ ?x305 ?x327 ?x432 ?x859 ?x449 ?x1032 ?x867 ?x664 ?x705 ?x1233 ?x753 ?x1132 ?x967 ?x1082 ?x1172 ?x1176 ?x1279 (* 10 (* z00 z00 y!2)) (* (- 2) (* z00 z00 z00 x!3)) (* z00 z00 y!2 y!2) (* (- 216) (* y00 x!3)) (* 18 ?x3832) (* 18 (* z00 z00 x!3)) (* (- 6) (* z00 y!2 y!2)) (* (- 108) (* x00 y!2)) (* (- 36) (* z00 x!3)) (* (- 24) (* z00 y!2)) (* (- 120) (* y00 y!2)) (* 36 (* z00 y00 x!3)) (* (- 216) (* x00 x!3)) (* (- 12) (* y00 y!2 y!2)) (* (- 1) (* z00 z00 z00 y!2)))))
 (let (($x5841 (= ?x5847 0)))
 (let ((?x2062 (* z00 z00 y!2)))
 (let ((?x2724 (* 24 ?x561)))
 (let ((?x769 (* (- 6) ?x494)))
 (let ((?x4278 (+ ?x67 ?x74 ?x769 (* (- 18) ?x531) ?x2724 (* (- 12) ?x650) (* (- 1) ?x695) ?x3790 ?x2062 (* (- 1) (* z00 z!1 y!2)) ?x4290 ?x1569 ?x2503 ?x4289 ?x2010 (* 18 (* z00 x!3)) (* 6 (* z00 y!2)) (* (- 12) (* y00 y!2)) (* z00 y00 z!1))))
 (let (($x4279 (= ?x4278 0)))
 (let ((?x353 (* z00 z00)))
 (let ((?x2174 (* (- 6) ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2016 (+ ?x67 ?x55 ?x74 ?x2174 (* (- 18) ?x494) (* 6 ?x2745) (* (- 1) (* z00 z00 z!1)) ?x1569 (* 6 (* z00 z!1)) (* 12 ?x3027) ?x2010)))
 (let (($x4647 (= ?x2016 0)))
 (let ((?x3882 (* (- 1) ?x353)))
 (let ((?x333 (* z!1 z!1)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x2407 (+ ?x49 ?x43 ?x333 ?x3882 (* (- 6) z!1) (* (- 12) y!2))))
 (let (($x1610 (= ?x2407 0)))
 (let ((?x2221 (* (- 6) n00)))
 (let ((?x483 (+ z00 ?x2221 (* 6 n!0) (* (- 1) z!1))))
 (let (($x2457 (= ?x483 0)))
 (let (($x2988 (and $x2457 $x1610 $x4647 $x4279 $x1956 $x5841 $x1796)))
 (let ((?x1534 (+ y!2 z!1)))
 (let ((?x2637 (* (- 108) (* x00 ?x332 ?x332 ?x332 ?x2470 ?x1534 ?x1534 ?x1534 ?x1533 ?x1533 ?x1533))))
 (let ((?x389 (* (- 72) (* y00 ?x332 ?x332 ?x332 ?x2470 ?x1534 ?x1534 ?x1534 ?x1533 ?x1533 ?x1533))))
 (let ((?x3135 (* (- 6) (* ?x332 ?x332 ?x332 ?x2470 ?x2470 ?x1534 ?x1534 ?x1534 ?x1534 ?x1533 ?x1533 ?x1533))))
 (let ((?x1135 (* (- 12) (* y00 ?x332 ?x332 ?x332 ?x2470 ?x2470 ?x1534 ?x1534 ?x1534 ?x1533 ?x1533 ?x1533))))
 (let ((?x384 (* (- 6) (* z00 ?x332 ?x332 ?x332 ?x2470 ?x2470 ?x1534 ?x1534 ?x1534 ?x1533 ?x1533 ?x1533))))
 (let ((?x778 (* 72 (* ?x332 ?x332 ?x332 ?x2470 ?x1534 ?x1534 ?x1534 ?x1534 ?x1533 ?x1533 ?x1533))))
 (let ((?x4897 (* z00 z00 ?x332 ?x332 ?x332 ?x2470 ?x2470 ?x1534 ?x1534 ?x1534 ?x1533 ?x1533 ?x1533)))
 (let ((?x4735 (* 6 (* z00 z00 ?x332 ?x332 ?x332 ?x2470 ?x1534 ?x1534 ?x1534 ?x1533 ?x1533 ?x1533))))
 (let ((?x4182 (* z00 z00 z00 ?x332 ?x332 ?x332 ?x2470 ?x1534 ?x1534 ?x1534 ?x1533 ?x1533 ?x1533)))
 (let ((?x1739 (* 108 (* ?x332 ?x332 ?x332 ?x2470 ?x1534 ?x1534 ?x1534 ?x1533 ?x1533 ?x1533 ?x1533))))
 (let ((?x1506 (* 18 (* y00 z00 ?x332 ?x332 ?x332 ?x2470 ?x1534 ?x1534 ?x1534 ?x1533 ?x1533 ?x1533))))
 (let ((?x2757 (+ (* 5184 (* y!2 z!1 z00)) (* (- 2592) (* y!2 z00 z00)) (* (- 19440) (* y!2 y!2 z!1)) (* 216 (* y!2 z00 z00 z00)) (* (- 15552) (* y!2 z!1)) ?x1506 (* 216 (* x!3 z00 z00 z00)) (* (- 62208) ?x565) (* 6 (* ?x332 ?x332 ?x332 ?x2470 ?x1534 ?x1534 ?x1533 ?x1533)) (* 18144 (* x!3 z!1 y00)) (* (- 15552) (* x!3 z!1)) (* (- 38880) ?x650) (* 3888 (* x!3 z!1 z!1 y00)) (* (- 1) (* z00 z00 z00 ?x332 ?x332 ?x2470 ?x2470 ?x1534 ?x1534 ?x1533)) (* (- 6) (* ?x332 ?x332 ?x2470 ?x2470 ?x2470 ?x1534 ?x1534 ?x1534 ?x1533)) (* 360 (* x!3 z!1 z!1 z!1 y00)) (* 216 (* x!3 x!3 z!1 n!0 y00)) (* 6 (* ?x2470 ?x2470 ?x2470 ?x2470 ?x1534 ?x1533)) (* 31104 (* y!2 y00)) (* (- 2592) (* x!3 z00 z00)) (* 7776 (* y!2 z00)) (* 7776 (* x!3 z00)) (* (- 3888) (* y!2 z00 y00)) (* (- 23328) ?x320) (* 5184 (* x!3 z!1 z00)) ?x1739 (* (- 1) (* x!3 z!1 z!1 z!1 z!1 z00 z00)) (* (- 1) (* y!2 z!1 z!1 z!1 z!1 z00 z00)) (* 23328 (* y!2 x00)) (* 31104 (* x!3 y00)) (* 18144 (* y!2 z!1 y00)) (* (- 72) (* ?x332 ?x332 ?x332 ?x1534 ?x1534 ?x1533 ?x1533)) (* (- 108) (* x!3 x!3 z!1 z!1 z!1)) (* (- 288) (* x!3 y!2 z!1 z!1 z!1)) (* (- 180) (* y!2 y!2 z!1 z!1 z!1)) (* (- 1) ?x4182) (* 6 (* y!2 z!1 z!1 z!1 z!1 z00)) (* 6 (* x!3 z!1 z!1 z!1 z!1 z00)) (* 216 (* x!3 x!3 z!1 n!0 n!0 y00)) (* 23328 (* x!3 x00)) (* (- 3888) (* x!3 z00 y00)) (* 72 (* x!3 x!3 z!1 n!0 n!0 n!0 y00)) (* (- 31104) (* x!3 y!2 z!1)) (* (- 1944) (* x!3 x!3 z!1 z!1)) (* (- 5184) (* x!3 y!2 z!1 z!1)) (* (- 3240) (* y!2 y!2 z!1 z!1)) (* (- 11664) (* x!3 x!3 z!1)) (* 72 (* x!3 x!3 y!2 y00)) (* 12 (* y!2 z!1 z!1 z!1 z!1 y00)) (* (- 1944) (* x!3 z!1 z00 y00)) (* (- 1944) (* y!2 z!1 z00 y00)) (* (- 324) (* x!3 z!1 z!1 z00 y00)) (* (- 324) (* y!2 z!1 z!1 z00 y00)) (* (- 18) (* x!3 z!1 z!1 z!1 z00 y00)) (* (- 18) (* y!2 z!1 z!1 z!1 z00 y00)) (* 12 (* x!3 z!1 z!1 z!1 z!1 y00)) (* 144 (* x!3 y!2 y!2 y00)) (* 72 (* y!2 y!2 y!2 y00)) (* 72 (* x!3 x!3 z!1 y00)) (* 144 (* x!3 y!2 z!1 y00)) (* 72 (* y!2 y!2 z!1 y00)) ?x4735 (* (- 30) (* y!2 z!1 z!1 z!1 z00 z00)) (* (- 30) (* x!3 z!1 z!1 z!1 z00 z00)) (* 360 (* y!2 z!1 z!1 z!1 y00)) (* 6 (* z00 z00 ?x332 ?x332 ?x2470 ?x2470 ?x1534 ?x1534 ?x1533)) (* (- 1512) (* x!3 z!1 z00 z00)) (* (- 1512) (* y!2 z!1 z00 z00)) (* (- 324) (* x!3 z!1 z!1 z00 z00)) (* (- 324) (* y!2 z!1 z!1 z00 z00)) ?x4897 (* (- 1) (* z00 z00 ?x332 ?x332 ?x332 ?x2470 ?x1534 ?x1533 ?x1533)) (* (- 108) (* x00 ?x332 ?x332 ?x2470 ?x2470 ?x1534 ?x1534 ?x1533)) (* 18 (* y!2 z!1 z!1 z00 z00 z00)) (* 18 (* x!3 z!1 z!1 z00 z00 z00)) (* 108 (* y!2 z!1 z00 z00 z00)) (* 108 (* x!3 z!1 z00 z00 z00)) (* y!2 z!1 z!1 z!1 z00 z00 z00) (* x!3 z!1 z!1 z!1 z00 z00 z00) (* (- 6) (* x!3 x!3 z!1 z00 z00)) ?x778 (* 1296 (* y!2 z!1 z!1 z00)) (* 12 (* y00 ?x332 ?x332 ?x332 ?x2470 ?x1534 ?x1533 ?x1533)) (* (- 72) (* y00 ?x332 ?x332 ?x2470 ?x2470 ?x1534 ?x1534 ?x1533)) (* 216 (* x!3 x!3 y!2 n!0 n!0 y00)) (* 1296 (* x!3 z!1 z!1 z00)) ?x384 (* (- 6) (* y!2 y!2 y!2 n!0 n!0 n!0 z00 z00)) (* (- 18) (* x!3 x!3 z!1 n!0 z00 z00)) (* (- 18) (* x!3 x!3 z!1 n!0 n!0 z00 z00)) (* (- 6) (* y!2 y!2 y!2 z00 z00)) (* (- 12) (* x!3 y!2 z!1 z00 z00)) (* (- 6) (* y!2 y!2 z!1 z00 z00)) (* 144 (* x!3 z!1 z!1 z!1 z00)) (* (- 12) (* x!3 y!2 y!2 z00 z00)) (* (- 6) (* x!3 x!3 y!2 z00 z00)) (* 108 (* ?x332 ?x332 ?x2470 ?x2470 ?x1534 ?x1534 ?x1533 ?x1533)) (* (- 6) (* x!3 x!3 z!1 n!0 n!0 n!0 z00 z00)) (* (- 36) (* x!3 y!2 z!1 n!0 z00 z00)) (* (- 18) (* y!2 y!2 y!2 n!0 n!0 z00 z00)) (* (- 18) (* y!2 y!2 y!2 n!0 z00 z00)) (* (- 12) (* x!3 y!2 y!2 n!0 n!0 n!0 z00 z00)) (* (- 36) (* x!3 y!2 y!2 n!0 n!0 z00 z00)) (* (- 36) (* x!3 y!2 z!1 n!0 n!0 z00 z00)) (* (- 12) (* x!3 y!2 z!1 n!0 n!0 n!0 z00 z00)) (* (- 6) (* z00 ?x332 ?x332 ?x2470 ?x2470 ?x2470 ?x1534 ?x1534 ?x1533)) (* 144 (* y!2 z!1 z!1 z!1 z00)) ?x1135 (* (- 18) (* y!2 y!2 z!1 n!0 z00 z00)) (* (- 108) (* ?x332 ?x332 ?x332 ?x1534 ?x1533 ?x1533 ?x1533)) (* (- 18) (* y!2 y!2 z!1 n!0 n!0 z00 z00)) (* (- 6) (* y!2 y!2 z!1 n!0 n!0 n!0 z00 z00)) (* (- 36) (* x!3 y!2 y!2 n!0 z00 z00)) ?x3135 (* (- 12) (* y00 ?x332 ?x332 ?x2470 ?x2470 ?x2470 ?x1534 ?x1534 ?x1533)) (* (- 6) (* x!3 x!3 y!2 n!0 n!0 n!0 z00 z00)) (* (- 18) (* x!3 x!3 y!2 n!0 n!0 z00 z00)) (* 6 (* z00 ?x332 ?x332 ?x332 ?x2470 ?x1534 ?x1533 ?x1533)) (* (- 18) (* x!3 x!3 y!2 n!0 z00 z00)) (* 72 (* ?x332 ?x332 ?x2470 ?x2470 ?x1534 ?x1534 ?x1534 ?x1533)) (* 18 (* y00 z00 ?x332 ?x332 ?x2470 ?x2470 ?x1534 ?x1534 ?x1533)) (* 3888 (* y!2 z!1 z!1 y00)) (* 6 (* x!3 y!2 y!2 n!0 n!0 z00 z00 z00)) (* 144 (* x!3 y!2 y!2 n!0 n!0 n!0 y00)) (* 6 (* x!3 y!2 y!2 n!0 z00 z00 z00)) (* 432 (* x!3 y!2 y!2 n!0 n!0 y00)) (* x!3 x!3 y!2 n!0 n!0 n!0 z00 z00 z00) (* 3 (* x!3 x!3 y!2 n!0 n!0 z00 z00 z00)) (* 432 (* x!3 y!2 y!2 n!0 y00)) (* 3 (* x!3 x!3 y!2 n!0 z00 z00 z00)) (* y!2 y!2 z!1 z00 z00 z00) (* 2 (* x!3 y!2 z!1 z00 z00 z00)) (* x!3 x!3 z!1 z00 z00 z00) (* y!2 y!2 y!2 z00 z00 z00) (* 2 (* x!3 y!2 y!2 z00 z00 z00)) (* x!3 x!3 y!2 z00 z00 z00) ?x389 (* 432 (* x!3 y!2 z!1 n!0 y00)) (* 2 (* x!3 y!2 y!2 n!0 n!0 n!0 z00 z00 z00)) (* 432 (* x!3 y!2 z!1 n!0 n!0 y00)) (* 144 (* x!3 y!2 z!1 n!0 n!0 n!0 y00)) (* 3 (* y!2 y!2 y!2 n!0 z00 z00 z00)) (* 3 (* y!2 y!2 y!2 n!0 n!0 z00 z00 z00)) (* y!2 y!2 y!2 n!0 n!0 n!0 z00 z00 z00) (* 3 (* x!3 x!3 z!1 n!0 z00 z00 z00)) (* 3 (* x!3 x!3 z!1 n!0 n!0 z00 z00 z00)) (* x!3 x!3 z!1 n!0 n!0 n!0 z00 z00 z00) (* 6 (* x!3 y!2 z!1 n!0 z00 z00 z00)) (* 6 (* x!3 y!2 z!1 n!0 n!0 z00 z00 z00)) (* 2 (* x!3 y!2 z!1 n!0 n!0 n!0 z00 z00 z00)) (* 216 (* y!2 y!2 y!2 n!0 y00)) (* 216 (* y!2 y!2 y!2 n!0 n!0 y00)) (* 3 (* y!2 y!2 z!1 n!0 z00 z00 z00)) (* 72 (* y!2 y!2 y!2 n!0 n!0 n!0 y00)) (* 3 (* y!2 y!2 z!1 n!0 n!0 z00 z00 z00)) (* 216 (* y!2 y!2 z!1 n!0 y00)) (* y!2 y!2 z!1 n!0 n!0 n!0 z00 z00 z00) (* 216 (* y!2 y!2 z!1 n!0 n!0 y00)) (* 72 (* y!2 y!2 z!1 n!0 n!0 n!0 y00)) (* 1944 (* y!2 z!1 z!1 x00)) (* 108 (* x!3 z!1 z!1 z!1 x00)) (* 108 (* y!2 z!1 z!1 z!1 x00)) (* (- 108) (* x!3 y!2 z!1 n!0 z00 y00)) (* (- 108) (* x!3 y!2 z!1 n!0 n!0 z00 y00)) (* (- 36) (* x!3 y!2 z!1 n!0 n!0 n!0 z00 y00)) (* (- 18) (* y!2 y!2 z!1 z00 y00)) (* (- 54) (* y!2 y!2 z!1 n!0 z00 y00)) (* (- 54) (* y!2 y!2 z!1 n!0 n!0 z00 y00)) (* (- 18) (* y!2 y!2 z!1 n!0 n!0 n!0 z00 y00)) (* (- 36) (* x!3 y!2 z!1 z00 y00)) (* (- 36) (* x!3 y!2 y!2 z00 y00)) (* (- 108) (* x!3 y!2 y!2 n!0 z00 y00)) (* (- 108) (* x!3 y!2 y!2 n!0 n!0 z00 y00)) (* (- 36) (* x!3 y!2 y!2 n!0 n!0 n!0 z00 y00)) (* (- 18) (* y!2 y!2 y!2 z00 y00)) (* (- 54) (* y!2 y!2 y!2 n!0 z00 y00)) (* (- 54) (* y!2 y!2 y!2 n!0 n!0 z00 y00)) (* 72 (* x!3 x!3 y!2 n!0 n!0 n!0 y00)) (* (- 18) (* y!2 y!2 y!2 n!0 n!0 n!0 z00 y00)) (* (- 18) (* x!3 x!3 z!1 z00 y00)) (* (- 54) (* x!3 x!3 z!1 n!0 z00 y00)) (* (- 54) (* x!3 x!3 z!1 n!0 n!0 z00 y00)) (* (- 18) (* x!3 x!3 z!1 n!0 n!0 n!0 z00 y00)) (* 11664 (* y!2 z!1 x00)) (* (- 18) (* x!3 x!3 y!2 n!0 n!0 n!0 z00 y00)) (* (- 54) (* x!3 x!3 y!2 n!0 n!0 z00 y00)) (* 1944 (* x!3 z!1 z!1 x00)) (* (- 54) (* x!3 x!3 y!2 n!0 z00 y00)) (* 11664 (* x!3 z!1 x00)) (* (- 18) (* x!3 x!3 y!2 z00 y00)) (* z00 z00 ?x332 ?x332 ?x2470 ?x2470 ?x2470 ?x1534 ?x1534 ?x1533) ?x2637 (* (- 72) (* x!3 z!1 z!1 z!1 z!1)) (* (- 72) (* y!2 z!1 z!1 z!1 z!1)) (* (- 7776) (* x!3 z!1 z!1)) (* (- 7776) (* y!2 z!1 z!1)) (* (- 1296) (* x!3 z!1 z!1 z!1)) (* (- 1296) (* y!2 z!1 z!1 z!1)) (* 216 (* x!3 x!3 y!2 n!0 y00)) (* 324 (* x!3 x!3 y!2 n!0 n!0 x00)) (* 108 (* x!3 x!3 y!2 n!0 n!0 n!0 x00)) (* 108 (* x!3 x!3 z!1 x00)) (* 108 (* x!3 x!3 y!2 x00)) (* 324 (* x!3 x!3 y!2 n!0 x00)) (* 324 (* x!3 x!3 z!1 n!0 x00)) (* 324 (* x!3 x!3 z!1 n!0 n!0 x00)) (* 108 (* x!3 x!3 z!1 n!0 n!0 n!0 x00)) (* 216 (* x!3 y!2 y!2 x00)) (* 648 (* x!3 y!2 y!2 n!0 x00)) (* 648 (* x!3 y!2 y!2 n!0 n!0 x00)) (* 216 (* x!3 y!2 y!2 n!0 n!0 n!0 x00)) (* 216 (* x!3 y!2 z!1 x00)) (* 648 (* x!3 y!2 z!1 n!0 x00)) (* 648 (* x!3 y!2 z!1 n!0 n!0 x00)) (* 216 (* x!3 y!2 z!1 n!0 n!0 n!0 x00)) (* 108 (* y!2 y!2 y!2 x00)) (* 324 (* y!2 y!2 y!2 n!0 x00)) (* 324 (* y!2 y!2 y!2 n!0 n!0 x00)) (* 108 (* y!2 y!2 y!2 n!0 n!0 n!0 x00)) (* 108 (* y!2 y!2 z!1 x00)) (* 324 (* y!2 y!2 z!1 n!0 x00)) (* 324 (* y!2 y!2 z!1 n!0 n!0 x00)) (* 108 (* y!2 y!2 z!1 n!0 n!0 n!0 x00)))))
 (let ((?x3372 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x432 (* (- 2) (* x!3 z00 z00 z00)) ?x867 ?x859 ?x449 ?x664 ?x1032 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x705 ?x1233 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x753 ?x305 ?x327 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1132 (* (- 216) (* x!3 y00)) ?x967 (* (- 12) (* y!2 y!2 y00)) ?x1082 (* (- 216) (* x!3 x00)) ?x1172 ?x1176 (* 36 (* x!3 z00 y00)) ?x1279)))
 (let ((?x4505 (* y!2 z!1 y00)))
 (let ((?x882 (* 3 ?x881)))
 (let ((?x944 (* 3 ?x695)))
 (let ((?x677 (* (- 1) ?x670)))
 (let ((?x569 (* 18 (* z!1 x00))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x3155 (* z!1 y00)))
 (let ((?x2853 (* 12 ?x3155)))
 (let ((?x4510 (* x!3 z!1)))
 (let ((?x4434 (* (- 18) ?x4510)))
 (let ((?x442 (* (- 18) ?x441)))
 (let ((?x3378 (* y!2 z!1)))
 (let ((?x586 (* (- 12) ?x3378)))
 (let ((?x938 (* y!2 y!2 z!1)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x2472 (* 72 y!2)))
 (let ((?x2854 (* 108 x!3)))
 (let ((?x659 (+ ?x2854 ?x2472 ?x516 ?x573 (* (- 3) (* y!2 z00 z00)) ?x938 ?x586 ?x442 (* (- 18) ?x565) ?x4434 ?x2853 ?x769 ?x864 ?x569 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x677 ?x944 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x882 (* 18 (* x!3 y00)) ?x4505 (* (- 2) (* z!1 y00 y00)))))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x532 (* 18 ?x531)))
 (let ((?x663 (* y!2 z!1 z00)))
 (let ((?x934 (+ ?x2854 ?x2472 ?x516 ?x573 ?x663 (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x586 ?x4434 ?x2853 ?x610 ?x532 (* 12 ?x650) ?x590 ?x569 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x695 (* (- 18) (* x!3 z00)))))
 (let ((?x495 (* 18 ?x494)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x4433 (+ ?x2854 ?x2472 ?x516 ?x446 ?x573 (* z!1 z00 z00) ?x457 (* (- 6) ?x3378) (* (- 12) ?x3155) ?x495 (* (- 6) (* z!1 z00)))))
 (let ((?x424 (* (- 12) y00)))
 (let ((?x423 (* (- 6) z00)))
 (let (($x334 (= (+ (* 12 y!2) (* 6 z!1) ?x423 ?x424 (* (- 1) ?x333) ?x353) 0)))
 (let (($x3231 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x334 (= ?x4433 0) (= ?x934 0) (= ?x659 0) (= ?x3372 0) (not (= ?x2757 0)))))
 (let (($x6279 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x215 (+ x y)))
 (let ((?x219 (+ y z)))
 (let ((?x462 (+ 6 z)))
 (let ((?x884 (+ 1 n)))
 (let ((?x4574 (* x00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2526 (* (- 108) ?x4574)))
 (let ((?x4499 (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3533 (* y y z n n n z00 z00 z00)))
 (let ((?x3459 (* x x z n n n z00 z00 z00)))
 (let ((?x3434 (* y y y n n n z00 z00 z00)))
 (let ((?x3379 (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x1655 (* (- 72) ?x3379)))
 (let ((?x3365 (* x x y z00 z00 z00)))
 (let ((?x3341 (* y y y z00 z00 z00)))
 (let ((?x3333 (* x x z z00 z00 z00)))
 (let ((?x3309 (* y y z z00 z00 z00)))
 (let ((?x3274 (* x x y n n n z00 z00 z00)))
 (let ((?x3199 (* y00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3200 (* 18 ?x3199)))
 (let ((?x3191 (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)))
 (let ((?x3192 (* 72 ?x3191)))
 (let ((?x3185 (* z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x3186 (* 6 ?x3185)))
 (let ((?x3154 (* y00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2811 (* (- 12) ?x3154)))
 (let ((?x3106 (* ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2517 (* (- 6) ?x3106)))
 (let ((?x3051 (* ?x884 ?x884 ?x884 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3068 (* (- 108) ?x3051)))
 (let ((?x3000 (* y00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2504 (* (- 12) ?x3000)))
 (let ((?x2991 (* z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2340 (* (- 6) ?x2991)))
 (let ((?x2843 (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x2844 (* 108 ?x2843)))
 (let ((?x2575 (* z00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2291 (* (- 6) ?x2575)))
 (let ((?x2519 (* y00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3144 (* (- 72) ?x2519)))
 (let ((?x2436 (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x2433 (* 12 ?x2436)))
 (let ((?x2388 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2543 (* 72 ?x2388)))
 (let ((?x2360 (* x z z z z00 z00 z00)))
 (let ((?x2359 (* y z z z z00 z00 z00)))
 (let ((?x2327 (* x00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2317 (* (- 108) ?x2327)))
 (let ((?x2273 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x2281 (* (- 1) ?x2273)))
 (let ((?x2247 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2165 (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2164 (* 6 ?x2165)))
 (let ((?x2148 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3596 (* 6 ?x2148)))
 (let ((?x1041 (* z00 z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x1341 (* (- 1) ?x1041)))
 (let ((?x954 (* ?x884 ?x884 ?x884 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x1023 (* (- 72) ?x954)))
 (let ((?x841 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x792 (* 108 ?x841)))
 (let ((?x611 (* ?x462 ?x462 ?x462 ?x462 ?x219 ?x215)))
 (let ((?x612 (* 6 ?x611)))
 (let ((?x575 (* ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)))
 (let ((?x1515 (* (- 6) ?x575)))
 (let ((?x549 (* z00 z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x482 (* (- 1) ?x549)))
 (let ((?x460 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x1070 (* 6 ?x460)))
 (let ((?x445 (* y00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3714 (* 18 ?x445)))
 (let ((?x6272 (+ (* 5184 (* y z z00)) (* (- 2592) (* y z00 z00)) (* (- 19440) (* y y z)) (* 216 (* y z00 z00 z00)) (* (- 15552) (* y z)) ?x3714 (* 216 (* x z00 z00 z00)) (* (- 62208) (* x y)) ?x1070 (* 18144 (* x z y00)) (* (- 15552) (* x z)) (* (- 38880) (* y y)) (* 3888 (* x z z y00)) ?x482 ?x1515 (* 360 (* x z z z y00)) (* 216 (* x x z n y00)) ?x612 (* 31104 (* y y00)) (* (- 2592) (* x z00 z00)) (* 7776 (* y z00)) (* 7776 (* x z00)) (* (- 3888) (* y z00 y00)) (* (- 23328) (* x x)) (* 5184 (* x z z00)) ?x792 (* (- 1) (* x z z z z z00 z00)) (* (- 1) (* y z z z z z00 z00)) (* 23328 (* y x00)) (* 31104 (* x y00)) (* 18144 (* y z y00)) ?x1023 (* (- 108) (* x x z z z)) (* (- 288) (* x y z z z)) (* (- 180) (* y y z z z)) ?x1341 (* 6 (* y z z z z z00)) (* 6 (* x z z z z z00)) (* 216 (* x x z n n y00)) (* 23328 (* x x00)) (* (- 3888) (* x z00 y00)) (* 72 (* x x z n n n y00)) (* (- 31104) (* x y z)) (* (- 1944) (* x x z z)) (* (- 5184) (* x y z z)) (* (- 3240) (* y y z z)) (* (- 11664) (* x x z)) (* 72 (* x x y y00)) (* 12 (* y z z z z y00)) (* (- 1944) (* x z z00 y00)) (* (- 1944) (* y z z00 y00)) (* (- 324) (* x z z z00 y00)) (* (- 324) (* y z z z00 y00)) (* (- 18) (* x z z z z00 y00)) (* (- 18) (* y z z z z00 y00)) (* 12 (* x z z z z y00)) (* 144 (* x y y y00)) (* 72 (* y y y y00)) (* 72 (* x x z y00)) (* 144 (* x y z y00)) (* 72 (* y y z y00)) ?x3596 (* (- 30) (* y z z z z00 z00)) (* (- 30) (* x z z z z00 z00)) (* 360 (* y z z z y00)) ?x2164 (* (- 1512) (* x z z00 z00)) (* (- 1512) (* y z z00 z00)) (* (- 324) (* x z z z00 z00)) (* (- 324) (* y z z z00 z00)) ?x2247 ?x2281 ?x2317 (* 18 (* y z z z00 z00 z00)) (* 18 (* x z z z00 z00 z00)) (* 108 (* y z z00 z00 z00)) (* 108 (* x z z00 z00 z00)) ?x2359 ?x2360 (* (- 6) (* x x z z00 z00)) ?x2543 (* 1296 (* y z z z00)) ?x2433 ?x3144 (* 216 (* x x y n n y00)) (* 1296 (* x z z z00)) ?x2291 (* (- 6) (* y y y n n n z00 z00)) (* (- 18) (* x x z n z00 z00)) (* (- 18) (* x x z n n z00 z00)) (* (- 6) (* y y y z00 z00)) (* (- 12) (* x y z z00 z00)) (* (- 6) (* y y z z00 z00)) (* 144 (* x z z z z00)) (* (- 12) (* x y y z00 z00)) (* (- 6) (* x x y z00 z00)) ?x2844 (* (- 6) (* x x z n n n z00 z00)) (* (- 36) (* x y z n z00 z00)) (* (- 18) (* y y y n n z00 z00)) (* (- 18) (* y y y n z00 z00)) (* (- 12) (* x y y n n n z00 z00)) (* (- 36) (* x y y n n z00 z00)) (* (- 36) (* x y z n n z00 z00)) (* (- 12) (* x y z n n n z00 z00)) ?x2340 (* 144 (* y z z z z00)) ?x2504 (* (- 18) (* y y z n z00 z00)) ?x3068 (* (- 18) (* y y z n n z00 z00)) (* (- 6) (* y y z n n n z00 z00)) (* (- 36) (* x y y n z00 z00)) ?x2517 ?x2811 (* (- 6) (* x x y n n n z00 z00)) (* (- 18) (* x x y n n z00 z00)) ?x3186 (* (- 18) (* x x y n z00 z00)) ?x3192 ?x3200 (* 3888 (* y z z y00)) (* 6 (* x y y n n z00 z00 z00)) (* 144 (* x y y n n n y00)) (* 6 (* x y y n z00 z00 z00)) (* 432 (* x y y n n y00)) ?x3274 (* 3 (* x x y n n z00 z00 z00)) (* 432 (* x y y n y00)) (* 3 (* x x y n z00 z00 z00)) ?x3309 (* 2 (* x y z z00 z00 z00)) ?x3333 ?x3341 (* 2 (* x y y z00 z00 z00)) ?x3365 ?x1655 (* 432 (* x y z n y00)) (* 2 (* x y y n n n z00 z00 z00)) (* 432 (* x y z n n y00)) (* 144 (* x y z n n n y00)) (* 3 (* y y y n z00 z00 z00)) (* 3 (* y y y n n z00 z00 z00)) ?x3434 (* 3 (* x x z n z00 z00 z00)) (* 3 (* x x z n n z00 z00 z00)) ?x3459 (* 6 (* x y z n z00 z00 z00)) (* 6 (* x y z n n z00 z00 z00)) (* 2 (* x y z n n n z00 z00 z00)) (* 216 (* y y y n y00)) (* 216 (* y y y n n y00)) (* 3 (* y y z n z00 z00 z00)) (* 72 (* y y y n n n y00)) (* 3 (* y y z n n z00 z00 z00)) (* 216 (* y y z n y00)) ?x3533 (* 216 (* y y z n n y00)) (* 72 (* y y z n n n y00)) (* 1944 (* y z z x00)) (* 108 (* x z z z x00)) (* 108 (* y z z z x00)) (* (- 108) (* x y z n z00 y00)) (* (- 108) (* x y z n n z00 y00)) (* (- 36) (* x y z n n n z00 y00)) (* (- 18) (* y y z z00 y00)) (* (- 54) (* y y z n z00 y00)) (* (- 54) (* y y z n n z00 y00)) (* (- 18) (* y y z n n n z00 y00)) (* (- 36) (* x y z z00 y00)) (* (- 36) (* x y y z00 y00)) (* (- 108) (* x y y n z00 y00)) (* (- 108) (* x y y n n z00 y00)) (* (- 36) (* x y y n n n z00 y00)) (* (- 18) (* y y y z00 y00)) (* (- 54) (* y y y n z00 y00)) (* (- 54) (* y y y n n z00 y00)) (* 72 (* x x y n n n y00)) (* (- 18) (* y y y n n n z00 y00)) (* (- 18) (* x x z z00 y00)) (* (- 54) (* x x z n z00 y00)) (* (- 54) (* x x z n n z00 y00)) (* (- 18) (* x x z n n n z00 y00)) (* 11664 (* y z x00)) (* (- 18) (* x x y n n n z00 y00)) (* (- 54) (* x x y n n z00 y00)) (* 1944 (* x z z x00)) (* (- 54) (* x x y n z00 y00)) (* 11664 (* x z x00)) (* (- 18) (* x x y z00 y00)) ?x4499 ?x2526 (* (- 72) (* x z z z z)) (* (- 72) (* y z z z z)) (* (- 7776) (* x z z)) (* (- 7776) (* y z z)) (* (- 1296) (* x z z z)) (* (- 1296) (* y z z z)) (* 216 (* x x y n y00)) (* 324 (* x x y n n x00)) (* 108 (* x x y n n n x00)) (* 108 (* x x z x00)) (* 108 (* x x y x00)) (* 324 (* x x y n x00)) (* 324 (* x x z n x00)) (* 324 (* x x z n n x00)) (* 108 (* x x z n n n x00)) (* 216 (* x y y x00)) (* 648 (* x y y n x00)) (* 648 (* x y y n n x00)) (* 216 (* x y y n n n x00)) (* 216 (* x y z x00)) (* 648 (* x y z n x00)) (* 648 (* x y z n n x00)) (* 216 (* x y z n n n x00)) (* 108 (* y y y x00)) (* 324 (* y y y n x00)) (* 324 (* y y y n n x00)) (* 108 (* y y y n n n x00)) (* 108 (* y y z x00)) (* 324 (* y y z n x00)) (* 324 (* y y z n n x00)) (* 108 (* y y z n n n x00)))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x1176 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1172 (* z00 z00 z00 y00)))
 (let ((?x1082 (* (- 36) (* z00 y00 x00))))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x881 (* z00 z00 x00)))
 (let ((?x1132 (* (- 18) ?x881)))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x784 (* x x)))
 (let ((?x785 (* 108 ?x784)))
 (let ((?x753 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x695 (* z00 z00 y00)))
 (let ((?x1233 (* (- 10) ?x695)))
 (let ((?x670 (* z00 y00 y00)))
 (let ((?x705 (* (- 12) ?x670)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x531 (* z00 x00)))
 (let ((?x449 (* 36 ?x531)))
 (let ((?x494 (* z00 y00)))
 (let ((?x859 (* 24 ?x494)))
 (let ((?x441 (* y00 x00)))
 (let ((?x432 (* 216 ?x441)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1299 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x432 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x859 ?x449 ?x780 ?x1032 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x705 ?x1233 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x753 ?x785 ?x837 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1132 (* (- 216) (* x y00)) ?x967 (* (- 12) (* y y y00)) ?x1082 (* (- 216) (* x x00)) ?x1172 ?x1176 (* 36 (* x z00 y00)) ?x1279)))
 (let (($x1304 (= ?x1299 0)))
 (let ((?x941 (* y z y00)))
 (let ((?x882 (* 3 ?x881)))
 (let ((?x944 (* 3 ?x695)))
 (let ((?x677 (* (- 1) ?x670)))
 (let ((?x607 (* 18 (* z x00))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x769 (* (- 6) ?x494)))
 (let ((?x468 (* z y00)))
 (let ((?x469 (* 12 ?x468)))
 (let ((?x467 (* x z)))
 (let ((?x502 (* (- 18) ?x467)))
 (let ((?x442 (* (- 18) ?x441)))
 (let ((?x437 (* y z)))
 (let ((?x461 (* (- 12) ?x437)))
 (let ((?x135 (* y y z)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1000 (+ ?x64 ?x71 ?x516 ?x573 (* (- 3) (* y z00 z00)) ?x135 ?x461 ?x442 (* (- 18) (* x y)) ?x502 ?x469 ?x769 ?x864 ?x607 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x677 ?x944 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x882 (* 18 (* x y00)) ?x941 (* (- 2) (* z y00 y00)))))
 (let (($x1007 (= ?x1000 0)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x532 (* 18 ?x531)))
 (let ((?x610 (* 6 ?x494)))
 (let ((?x103 (* y z z00)))
 (let ((?x749 (+ ?x64 ?x71 ?x516 ?x573 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x461 ?x502 ?x469 ?x610 ?x532 ?x538 ?x590 ?x607 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x695 (* (- 18) (* x z00)))))
 (let (($x754 (= ?x749 0)))
 (let ((?x495 (* 18 ?x494)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x589 (+ ?x64 ?x71 ?x516 ?x446 ?x573 ?x76 ?x457 (* (- 6) ?x437) (* (- 12) ?x468) ?x495 (* (- 6) (* z z00)))))
 (let (($x594 (= ?x589 0)))
 (let ((?x50 (* z z)))
 (let ((?x425 (* (- 1) ?x50)))
 (let ((?x424 (* (- 12) y00)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x427 (= (+ ?x45 ?x46 ?x423 ?x424 ?x425 ?x353) 0)))
 (let (($x345 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x345 $x427 $x594 $x754 $x1007 $x1304 (not (= ?x6272 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x2980 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x215 (+ x y)))
 (let ((?x219 (+ y z)))
 (let ((?x462 (+ 6 z)))
 (let ((?x1894 (* ?x462 ?x462 ?x462 ?x219 ?x215)))
 (let ((?x884 (+ 1 n)))
 (let ((?x4215 (* x00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)))
 (let ((?x445 (* y00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x1041 (* z00 z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2148 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2273 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x841 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x549 (* z00 z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2575 (* z00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3106 (* ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3000 (* y00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2388 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x4574 (* x00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3379 (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2247 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3975 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x215)))
 (let ((?x3136 (+ ?x3975 (* (- 1) ?x2247) (* (- 6) (* z00 ?x462 ?x462 ?x462 ?x462 ?x215)) (* 72 ?x3379) (* (- 1) (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)) (* 108 ?x4574) (* 108 (* ?x462 ?x462 ?x462 ?x215 ?x215)) (* (- 108) (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215 ?x215)) (* (- 72) (* y00 ?x462 ?x462 ?x462 ?x215)) (* (- 12) (* y00 ?x462 ?x462 ?x462 ?x462 ?x215)) (* (- 72) ?x2388) (* 18 (* y00 z00 ?x462 ?x462 ?x462 ?x215)) (* (- 72) (* y00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) (* 12 ?x3000) (* 108 (* ?x884 ?x884 ?x884 ?x219 ?x215 ?x215 ?x215)) (* 6 (* z00 z00 ?x462 ?x462 ?x462 ?x215)) (* 6 ?x3106) (* 72 (* y00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)) (* 12 (* y00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)) (* (- 6) (* z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)) (* (- 1) (* z00 z00 z00 ?x462 ?x462 ?x462 ?x215)) (* (- 18) (* y00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)) (* 6 ?x2575) (* (- 6) (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x215 ?x215)) (* 6 (* ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)) (* (- 108) (* x00 ?x462 ?x462 ?x462 ?x215)) ?x549 (* (- 72) (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)) (* (- 108) ?x841) ?x2273 (* (- 6) (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)) (* (- 6) ?x2148) (* 6 (* z00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) ?x1041 (* (- 1) (* z00 z00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) (* 6 (* z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)) (* 108 (* x00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)) (* (- 12) (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)) (* 18 (* y00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) (* 72 (* ?x884 ?x884 ?x884 ?x219 ?x219 ?x215 ?x215)) (* (- 18) ?x445) (* (- 6) (* ?x462 ?x462 ?x462 ?x462 ?x219 ?x215)) (* (- 108) ?x4215) (* 72 ?x1894))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x784 (* x x)))
 (let ((?x785 (* 108 ?x784)))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x3057 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3061 (= ?x3057 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x2178 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x2176 (* (- 108) x)))
 (let ((?x1992 (* x00 z)))
 (let ((?x2859 (* (- 18) ?x1992)))
 (let ((?x4485 (* 36 ?x561)))
 (let ((?x2864 (* z y)))
 (let ((?x3124 (* 12 ?x2864)))
 (let ((?x2439 (* z00 y)))
 (let ((?x2597 (* (- 6) ?x2439)))
 (let ((?x1525 (* y00 z00)))
 (let ((?x2000 (* 6 ?x1525)))
 (let ((?x1123 (* y00 z)))
 (let ((?x1181 (* (- 12) ?x1123)))
 (let ((?x3942 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1148 (* z x)))
 (let ((?x4562 (* 18 ?x1148)))
 (let ((?x583 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x4562 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x3942 ?x1181 ?x2000 (* (- 36) (* y00 y)) ?x2597 ?x3124 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x4485 ?x2859 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x2176 ?x67 (* (- 18) (* y00 x)) ?x2178 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x4397 (* z00 z00 y)))
 (let ((?x2441 (* 6 ?x2439)))
 (let ((?x4471 (* (- 6) ?x1525)))
 (let ((?x2724 (* 24 ?x561)))
 (let ((?x2091 (* y00 z00 z)))
 (let ((?x2868 (+ ?x2091 ?x3124 ?x4562 (* (- 18) (* x00 z00)) (* (- 12) ?x535) ?x2724 ?x2859 ?x1181 ?x4471 (* (- 12) (* y00 y)) ?x2176 ?x67 ?x2441 ?x2178 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x4397)))
 (let ((?x1125 (* 12 ?x1123)))
 (let ((?x353 (* z00 z00)))
 (let ((?x2174 (* (- 6) ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x746 (+ (* 6 ?x2864) ?x55 ?x2174 ?x1125 (* (- 18) ?x1525) ?x2176 ?x67 (* 6 (* z00 z)) ?x2178 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x425 (* (- 1) ?x50)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x424 (* (- 12) y00)))
 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x353 ?x424 ?x45 ?x46 ?x423 ?x425) 0) (= ?x746 0) (= ?x2868 0) (= ?x583 0) $x3061 (not (= ?x3136 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x6281 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x215 (+ x y)))
 (let ((?x219 (+ y z)))
 (let ((?x462 (+ 6 z)))
 (let ((?x884 (+ 1 n)))
 (let ((?x4574 (* x00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2526 (* (- 108) ?x4574)))
 (let ((?x4499 (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3533 (* y y z n n n z00 z00 z00)))
 (let ((?x3459 (* x x z n n n z00 z00 z00)))
 (let ((?x3434 (* y y y n n n z00 z00 z00)))
 (let ((?x3379 (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x1655 (* (- 72) ?x3379)))
 (let ((?x3365 (* x x y z00 z00 z00)))
 (let ((?x3341 (* y y y z00 z00 z00)))
 (let ((?x3333 (* x x z z00 z00 z00)))
 (let ((?x3309 (* y y z z00 z00 z00)))
 (let ((?x3274 (* x x y n n n z00 z00 z00)))
 (let ((?x3199 (* y00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3200 (* 18 ?x3199)))
 (let ((?x3191 (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)))
 (let ((?x3192 (* 72 ?x3191)))
 (let ((?x3185 (* z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x3186 (* 6 ?x3185)))
 (let ((?x3154 (* y00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2811 (* (- 12) ?x3154)))
 (let ((?x3106 (* ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2517 (* (- 6) ?x3106)))
 (let ((?x3051 (* ?x884 ?x884 ?x884 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3068 (* (- 108) ?x3051)))
 (let ((?x3000 (* y00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2504 (* (- 12) ?x3000)))
 (let ((?x2991 (* z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2340 (* (- 6) ?x2991)))
 (let ((?x2843 (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x2844 (* 108 ?x2843)))
 (let ((?x2575 (* z00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2291 (* (- 6) ?x2575)))
 (let ((?x2519 (* y00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3144 (* (- 72) ?x2519)))
 (let ((?x2436 (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x2433 (* 12 ?x2436)))
 (let ((?x2388 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2543 (* 72 ?x2388)))
 (let ((?x2360 (* x z z z z00 z00 z00)))
 (let ((?x2359 (* y z z z z00 z00 z00)))
 (let ((?x2327 (* x00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2317 (* (- 108) ?x2327)))
 (let ((?x2273 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x2281 (* (- 1) ?x2273)))
 (let ((?x2247 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2165 (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2164 (* 6 ?x2165)))
 (let ((?x2148 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3596 (* 6 ?x2148)))
 (let ((?x1041 (* z00 z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x1341 (* (- 1) ?x1041)))
 (let ((?x954 (* ?x884 ?x884 ?x884 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x1023 (* (- 72) ?x954)))
 (let ((?x841 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x792 (* 108 ?x841)))
 (let ((?x611 (* ?x462 ?x462 ?x462 ?x462 ?x219 ?x215)))
 (let ((?x612 (* 6 ?x611)))
 (let ((?x575 (* ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)))
 (let ((?x1515 (* (- 6) ?x575)))
 (let ((?x549 (* z00 z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x482 (* (- 1) ?x549)))
 (let ((?x460 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x1070 (* 6 ?x460)))
 (let ((?x445 (* y00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3714 (* 18 ?x445)))
 (let ((?x6272 (+ (* 5184 (* y z z00)) (* (- 2592) (* y z00 z00)) (* (- 19440) (* y y z)) (* 216 (* y z00 z00 z00)) (* (- 15552) (* y z)) ?x3714 (* 216 (* x z00 z00 z00)) (* (- 62208) (* x y)) ?x1070 (* 18144 (* x z y00)) (* (- 15552) (* x z)) (* (- 38880) (* y y)) (* 3888 (* x z z y00)) ?x482 ?x1515 (* 360 (* x z z z y00)) (* 216 (* x x z n y00)) ?x612 (* 31104 (* y y00)) (* (- 2592) (* x z00 z00)) (* 7776 (* y z00)) (* 7776 (* x z00)) (* (- 3888) (* y z00 y00)) (* (- 23328) (* x x)) (* 5184 (* x z z00)) ?x792 (* (- 1) (* x z z z z z00 z00)) (* (- 1) (* y z z z z z00 z00)) (* 23328 (* y x00)) (* 31104 (* x y00)) (* 18144 (* y z y00)) ?x1023 (* (- 108) (* x x z z z)) (* (- 288) (* x y z z z)) (* (- 180) (* y y z z z)) ?x1341 (* 6 (* y z z z z z00)) (* 6 (* x z z z z z00)) (* 216 (* x x z n n y00)) (* 23328 (* x x00)) (* (- 3888) (* x z00 y00)) (* 72 (* x x z n n n y00)) (* (- 31104) (* x y z)) (* (- 1944) (* x x z z)) (* (- 5184) (* x y z z)) (* (- 3240) (* y y z z)) (* (- 11664) (* x x z)) (* 72 (* x x y y00)) (* 12 (* y z z z z y00)) (* (- 1944) (* x z z00 y00)) (* (- 1944) (* y z z00 y00)) (* (- 324) (* x z z z00 y00)) (* (- 324) (* y z z z00 y00)) (* (- 18) (* x z z z z00 y00)) (* (- 18) (* y z z z z00 y00)) (* 12 (* x z z z z y00)) (* 144 (* x y y y00)) (* 72 (* y y y y00)) (* 72 (* x x z y00)) (* 144 (* x y z y00)) (* 72 (* y y z y00)) ?x3596 (* (- 30) (* y z z z z00 z00)) (* (- 30) (* x z z z z00 z00)) (* 360 (* y z z z y00)) ?x2164 (* (- 1512) (* x z z00 z00)) (* (- 1512) (* y z z00 z00)) (* (- 324) (* x z z z00 z00)) (* (- 324) (* y z z z00 z00)) ?x2247 ?x2281 ?x2317 (* 18 (* y z z z00 z00 z00)) (* 18 (* x z z z00 z00 z00)) (* 108 (* y z z00 z00 z00)) (* 108 (* x z z00 z00 z00)) ?x2359 ?x2360 (* (- 6) (* x x z z00 z00)) ?x2543 (* 1296 (* y z z z00)) ?x2433 ?x3144 (* 216 (* x x y n n y00)) (* 1296 (* x z z z00)) ?x2291 (* (- 6) (* y y y n n n z00 z00)) (* (- 18) (* x x z n z00 z00)) (* (- 18) (* x x z n n z00 z00)) (* (- 6) (* y y y z00 z00)) (* (- 12) (* x y z z00 z00)) (* (- 6) (* y y z z00 z00)) (* 144 (* x z z z z00)) (* (- 12) (* x y y z00 z00)) (* (- 6) (* x x y z00 z00)) ?x2844 (* (- 6) (* x x z n n n z00 z00)) (* (- 36) (* x y z n z00 z00)) (* (- 18) (* y y y n n z00 z00)) (* (- 18) (* y y y n z00 z00)) (* (- 12) (* x y y n n n z00 z00)) (* (- 36) (* x y y n n z00 z00)) (* (- 36) (* x y z n n z00 z00)) (* (- 12) (* x y z n n n z00 z00)) ?x2340 (* 144 (* y z z z z00)) ?x2504 (* (- 18) (* y y z n z00 z00)) ?x3068 (* (- 18) (* y y z n n z00 z00)) (* (- 6) (* y y z n n n z00 z00)) (* (- 36) (* x y y n z00 z00)) ?x2517 ?x2811 (* (- 6) (* x x y n n n z00 z00)) (* (- 18) (* x x y n n z00 z00)) ?x3186 (* (- 18) (* x x y n z00 z00)) ?x3192 ?x3200 (* 3888 (* y z z y00)) (* 6 (* x y y n n z00 z00 z00)) (* 144 (* x y y n n n y00)) (* 6 (* x y y n z00 z00 z00)) (* 432 (* x y y n n y00)) ?x3274 (* 3 (* x x y n n z00 z00 z00)) (* 432 (* x y y n y00)) (* 3 (* x x y n z00 z00 z00)) ?x3309 (* 2 (* x y z z00 z00 z00)) ?x3333 ?x3341 (* 2 (* x y y z00 z00 z00)) ?x3365 ?x1655 (* 432 (* x y z n y00)) (* 2 (* x y y n n n z00 z00 z00)) (* 432 (* x y z n n y00)) (* 144 (* x y z n n n y00)) (* 3 (* y y y n z00 z00 z00)) (* 3 (* y y y n n z00 z00 z00)) ?x3434 (* 3 (* x x z n z00 z00 z00)) (* 3 (* x x z n n z00 z00 z00)) ?x3459 (* 6 (* x y z n z00 z00 z00)) (* 6 (* x y z n n z00 z00 z00)) (* 2 (* x y z n n n z00 z00 z00)) (* 216 (* y y y n y00)) (* 216 (* y y y n n y00)) (* 3 (* y y z n z00 z00 z00)) (* 72 (* y y y n n n y00)) (* 3 (* y y z n n z00 z00 z00)) (* 216 (* y y z n y00)) ?x3533 (* 216 (* y y z n n y00)) (* 72 (* y y z n n n y00)) (* 1944 (* y z z x00)) (* 108 (* x z z z x00)) (* 108 (* y z z z x00)) (* (- 108) (* x y z n z00 y00)) (* (- 108) (* x y z n n z00 y00)) (* (- 36) (* x y z n n n z00 y00)) (* (- 18) (* y y z z00 y00)) (* (- 54) (* y y z n z00 y00)) (* (- 54) (* y y z n n z00 y00)) (* (- 18) (* y y z n n n z00 y00)) (* (- 36) (* x y z z00 y00)) (* (- 36) (* x y y z00 y00)) (* (- 108) (* x y y n z00 y00)) (* (- 108) (* x y y n n z00 y00)) (* (- 36) (* x y y n n n z00 y00)) (* (- 18) (* y y y z00 y00)) (* (- 54) (* y y y n z00 y00)) (* (- 54) (* y y y n n z00 y00)) (* 72 (* x x y n n n y00)) (* (- 18) (* y y y n n n z00 y00)) (* (- 18) (* x x z z00 y00)) (* (- 54) (* x x z n z00 y00)) (* (- 54) (* x x z n n z00 y00)) (* (- 18) (* x x z n n n z00 y00)) (* 11664 (* y z x00)) (* (- 18) (* x x y n n n z00 y00)) (* (- 54) (* x x y n n z00 y00)) (* 1944 (* x z z x00)) (* (- 54) (* x x y n z00 y00)) (* 11664 (* x z x00)) (* (- 18) (* x x y z00 y00)) ?x4499 ?x2526 (* (- 72) (* x z z z z)) (* (- 72) (* y z z z z)) (* (- 7776) (* x z z)) (* (- 7776) (* y z z)) (* (- 1296) (* x z z z)) (* (- 1296) (* y z z z)) (* 216 (* x x y n y00)) (* 324 (* x x y n n x00)) (* 108 (* x x y n n n x00)) (* 108 (* x x z x00)) (* 108 (* x x y x00)) (* 324 (* x x y n x00)) (* 324 (* x x z n x00)) (* 324 (* x x z n n x00)) (* 108 (* x x z n n n x00)) (* 216 (* x y y x00)) (* 648 (* x y y n x00)) (* 648 (* x y y n n x00)) (* 216 (* x y y n n n x00)) (* 216 (* x y z x00)) (* 648 (* x y z n x00)) (* 648 (* x y z n n x00)) (* 216 (* x y z n n n x00)) (* 108 (* y y y x00)) (* 324 (* y y y n x00)) (* 324 (* y y y n n x00)) (* 108 (* y y y n n n x00)) (* 108 (* y y z x00)) (* 324 (* y y z n x00)) (* 324 (* y y z n n x00)) (* 108 (* y y z n n n x00)))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x1176 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1172 (* z00 z00 z00 y00)))
 (let ((?x1082 (* (- 36) (* z00 y00 x00))))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x881 (* z00 z00 x00)))
 (let ((?x1132 (* (- 18) ?x881)))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x784 (* x x)))
 (let ((?x785 (* 108 ?x784)))
 (let ((?x753 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x695 (* z00 z00 y00)))
 (let ((?x1233 (* (- 10) ?x695)))
 (let ((?x670 (* z00 y00 y00)))
 (let ((?x705 (* (- 12) ?x670)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x531 (* z00 x00)))
 (let ((?x449 (* 36 ?x531)))
 (let ((?x494 (* z00 y00)))
 (let ((?x859 (* 24 ?x494)))
 (let ((?x441 (* y00 x00)))
 (let ((?x432 (* 216 ?x441)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1299 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x432 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x859 ?x449 ?x780 ?x1032 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x705 ?x1233 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x753 ?x785 ?x837 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1132 (* (- 216) (* x y00)) ?x967 (* (- 12) (* y y y00)) ?x1082 (* (- 216) (* x x00)) ?x1172 ?x1176 (* 36 (* x z00 y00)) ?x1279)))
 (let (($x1304 (= ?x1299 0)))
 (let ((?x941 (* y z y00)))
 (let ((?x882 (* 3 ?x881)))
 (let ((?x944 (* 3 ?x695)))
 (let ((?x677 (* (- 1) ?x670)))
 (let ((?x607 (* 18 (* z x00))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x769 (* (- 6) ?x494)))
 (let ((?x468 (* z y00)))
 (let ((?x469 (* 12 ?x468)))
 (let ((?x467 (* x z)))
 (let ((?x502 (* (- 18) ?x467)))
 (let ((?x442 (* (- 18) ?x441)))
 (let ((?x437 (* y z)))
 (let ((?x461 (* (- 12) ?x437)))
 (let ((?x135 (* y y z)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1000 (+ ?x64 ?x71 ?x516 ?x573 (* (- 3) (* y z00 z00)) ?x135 ?x461 ?x442 (* (- 18) (* x y)) ?x502 ?x469 ?x769 ?x864 ?x607 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x677 ?x944 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x882 (* 18 (* x y00)) ?x941 (* (- 2) (* z y00 y00)))))
 (let (($x1007 (= ?x1000 0)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x532 (* 18 ?x531)))
 (let ((?x610 (* 6 ?x494)))
 (let ((?x103 (* y z z00)))
 (let ((?x749 (+ ?x64 ?x71 ?x516 ?x573 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x461 ?x502 ?x469 ?x610 ?x532 ?x538 ?x590 ?x607 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x695 (* (- 18) (* x z00)))))
 (let (($x754 (= ?x749 0)))
 (let ((?x495 (* 18 ?x494)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x589 (+ ?x64 ?x71 ?x516 ?x446 ?x573 ?x76 ?x457 (* (- 6) ?x437) (* (- 12) ?x468) ?x495 (* (- 6) (* z z00)))))
 (let (($x594 (= ?x589 0)))
 (let ((?x50 (* z z)))
 (let ((?x425 (* (- 1) ?x50)))
 (let ((?x424 (* (- 12) y00)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x427 (= (+ ?x45 ?x46 ?x423 ?x424 ?x425 ?x353) 0)))
 (let (($x345 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x1934 (and $x345 $x427 $x594 $x754 $x1007 $x1304 (not (= ?x6272 0)))))
 (let ((?x3975 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x215)))
 (let ((?x3136 (+ ?x3975 (* (- 1) ?x2247) (* (- 6) (* z00 ?x462 ?x462 ?x462 ?x462 ?x215)) (* 72 ?x3379) (* (- 1) ?x4499) (* 108 ?x4574) (* 108 (* ?x462 ?x462 ?x462 ?x215 ?x215)) (* (- 108) ?x2843) (* (- 72) (* y00 ?x462 ?x462 ?x462 ?x215)) (* (- 12) (* y00 ?x462 ?x462 ?x462 ?x462 ?x215)) (* (- 72) ?x2388) (* 18 (* y00 z00 ?x462 ?x462 ?x462 ?x215)) (* (- 72) (* y00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) (* 12 ?x3000) (* 108 ?x3051) (* 6 (* z00 z00 ?x462 ?x462 ?x462 ?x215)) (* 6 ?x3106) (* 72 ?x2519) (* 12 ?x3154) (* (- 6) ?x3185) (* (- 1) (* z00 z00 z00 ?x462 ?x462 ?x462 ?x215)) (* (- 18) ?x3199) (* 6 ?x2575) (* (- 6) ?x460) (* 6 ?x575) (* (- 108) (* x00 ?x462 ?x462 ?x462 ?x215)) ?x549 (* (- 72) ?x3191) (* (- 108) ?x841) ?x2273 (* (- 6) ?x2165) (* (- 6) ?x2148) (* 6 (* z00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) ?x1041 (* (- 1) (* z00 z00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) (* 6 ?x2991) (* 108 ?x2327) (* (- 12) ?x2436) (* 18 (* y00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) (* 72 ?x954) (* (- 18) ?x445) (* (- 6) ?x611) (* (- 108) (* x00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) (* 72 (* ?x462 ?x462 ?x462 ?x219 ?x215)))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x3057 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3061 (= ?x3057 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x2178 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x2176 (* (- 108) x)))
 (let ((?x1992 (* x00 z)))
 (let ((?x2859 (* (- 18) ?x1992)))
 (let ((?x4485 (* 36 ?x561)))
 (let ((?x2864 (* z y)))
 (let ((?x3124 (* 12 ?x2864)))
 (let ((?x2439 (* z00 y)))
 (let ((?x2597 (* (- 6) ?x2439)))
 (let ((?x1525 (* y00 z00)))
 (let ((?x2000 (* 6 ?x1525)))
 (let ((?x1123 (* y00 z)))
 (let ((?x1181 (* (- 12) ?x1123)))
 (let ((?x3942 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1148 (* z x)))
 (let ((?x4562 (* 18 ?x1148)))
 (let ((?x583 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x4562 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x3942 ?x1181 ?x2000 (* (- 36) (* y00 y)) ?x2597 ?x3124 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x4485 ?x2859 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x2176 ?x67 (* (- 18) (* y00 x)) ?x2178 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x4397 (* z00 z00 y)))
 (let ((?x2441 (* 6 ?x2439)))
 (let ((?x4471 (* (- 6) ?x1525)))
 (let ((?x2724 (* 24 ?x561)))
 (let ((?x2091 (* y00 z00 z)))
 (let ((?x2868 (+ ?x2091 ?x3124 ?x4562 (* (- 18) (* x00 z00)) (* (- 12) ?x535) ?x2724 ?x2859 ?x1181 ?x4471 (* (- 12) (* y00 y)) ?x2176 ?x67 ?x2441 ?x2178 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x4397)))
 (let ((?x1125 (* 12 ?x1123)))
 (let ((?x2174 (* (- 6) ?x353)))
 (let ((?x746 (+ (* 6 ?x2864) ?x55 ?x2174 ?x1125 (* (- 18) ?x1525) ?x2176 ?x67 (* 6 (* z00 z)) ?x2178 ?x74 (* (- 1) (* z00 z00 z)))))
 (let (($x3940 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x353 ?x424 ?x45 ?x46 ?x423 ?x425) 0) (= ?x746 0) (= ?x2868 0) (= ?x583 0) $x3061 (not (= ?x3136 0)))))
 (rewrite (= $x3940 $x1934))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x4403 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x215 (+ x y)))
 (let ((?x219 (+ y z)))
 (let ((?x462 (+ 6 z)))
 (let ((?x1894 (* ?x462 ?x462 ?x462 ?x219 ?x215)))
 (let ((?x884 (+ 1 n)))
 (let ((?x4215 (* x00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)))
 (let ((?x611 (* ?x462 ?x462 ?x462 ?x462 ?x219 ?x215)))
 (let ((?x612 (* 6 ?x611)))
 (let ((?x445 (* y00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3714 (* 18 ?x445)))
 (let ((?x954 (* ?x884 ?x884 ?x884 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x1023 (* (- 72) ?x954)))
 (let ((?x2436 (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x2433 (* 12 ?x2436)))
 (let ((?x2327 (* x00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2317 (* (- 108) ?x2327)))
 (let ((?x2991 (* z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2340 (* (- 6) ?x2991)))
 (let ((?x3238 (* z00 z00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)))
 (let ((?x1041 (* z00 z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x1341 (* (- 1) ?x1041)))
 (let ((?x2148 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3596 (* 6 ?x2148)))
 (let ((?x2165 (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2164 (* 6 ?x2165)))
 (let ((?x2273 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x2281 (* (- 1) ?x2273)))
 (let ((?x841 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x792 (* 108 ?x841)))
 (let ((?x3191 (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)))
 (let ((?x3192 (* 72 ?x3191)))
 (let ((?x549 (* z00 z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x482 (* (- 1) ?x549)))
 (let ((?x575 (* ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)))
 (let ((?x1515 (* (- 6) ?x575)))
 (let ((?x460 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x1070 (* 6 ?x460)))
 (let ((?x2575 (* z00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2291 (* (- 6) ?x2575)))
 (let ((?x3199 (* y00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3200 (* 18 ?x3199)))
 (let ((?x3194 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x215)))
 (let ((?x3185 (* z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x3186 (* 6 ?x3185)))
 (let ((?x3154 (* y00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2811 (* (- 12) ?x3154)))
 (let ((?x2519 (* y00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3144 (* (- 72) ?x2519)))
 (let ((?x3106 (* ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2517 (* (- 6) ?x3106)))
 (let ((?x3051 (* ?x884 ?x884 ?x884 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3068 (* (- 108) ?x3051)))
 (let ((?x3000 (* y00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2504 (* (- 12) ?x3000)))
 (let ((?x2388 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2543 (* 72 ?x2388)))
 (let ((?x2843 (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x2844 (* 108 ?x2843)))
 (let ((?x4574 (* x00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2526 (* (- 108) ?x4574)))
 (let ((?x4499 (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3379 (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x1655 (* (- 72) ?x3379)))
 (let ((?x2247 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x1854 (+ (* (- 1) (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x215)) ?x2247 (* 6 (* z00 ?x462 ?x462 ?x462 ?x462 ?x215)) ?x1655 ?x4499 ?x2526 (* (- 108) (* ?x462 ?x462 ?x462 ?x215 ?x215)) ?x2844 (* 72 (* y00 ?x462 ?x462 ?x462 ?x215)) (* 12 (* y00 ?x462 ?x462 ?x462 ?x462 ?x215)) ?x2543 (* (- 18) (* y00 z00 ?x462 ?x462 ?x462 ?x215)) (* 72 (* y00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) ?x2504 ?x3068 (* (- 6) (* z00 z00 ?x462 ?x462 ?x462 ?x215)) ?x2517 ?x3144 ?x2811 ?x3186 ?x3194 ?x3200 ?x2291 ?x1070 ?x1515 (* 108 (* x00 ?x462 ?x462 ?x462 ?x215)) ?x482 ?x3192 ?x792 ?x2281 ?x2164 ?x3596 (* (- 6) (* z00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) ?x1341 ?x3238 ?x2340 ?x2317 ?x2433 (* (- 18) (* y00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) ?x1023 ?x3714 ?x612 (* 108 ?x4215) (* (- 72) ?x1894))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x784 (* x x)))
 (let ((?x785 (* 108 ?x784)))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x3057 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3061 (= ?x3057 0)))
 (let ((?x3602 (* y00 z y)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1373 (* z y y)))
 (let ((?x1992 (* x00 z)))
 (let ((?x1994 (* 18 ?x1992)))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x2864 (* z y)))
 (let ((?x1094 (* (- 12) ?x2864)))
 (let ((?x2439 (* z00 y)))
 (let ((?x2441 (* 6 ?x2439)))
 (let ((?x1525 (* y00 z00)))
 (let ((?x4471 (* (- 6) ?x1525)))
 (let ((?x1123 (* y00 z)))
 (let ((?x1125 (* 12 ?x1123)))
 (let ((?x1148 (* z x)))
 (let ((?x1594 (* (- 18) ?x1148)))
 (let ((?x2400 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1594 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1125 ?x4471 (* 36 (* y00 y)) ?x2441 ?x1094 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x864 ?x1994 ?x1373 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x516 (* 18 (* y00 x)) ?x71 ?x573 ?x3602 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x4375 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x2597 (* (- 6) ?x2439)))
 (let ((?x2000 (* 6 ?x1525)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x4421 (+ (* (- 1) (* y00 z00 z)) ?x1094 ?x1594 (* 18 (* x00 z00)) ?x538 ?x590 ?x1994 ?x1125 ?x2000 (* 12 (* y00 y)) ?x64 ?x516 ?x2597 ?x71 ?x573 ?x99 (* (- 18) (* z00 x)) ?x4375 (* (- 1) (* z00 z00 y)))))
 (let ((?x1954 (* z00 z00 z)))
 (let ((?x1181 (* (- 12) ?x1123)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x1966 (+ (* (- 6) ?x2864) ?x446 ?x457 ?x1181 (* 18 ?x1525) ?x64 ?x516 (* (- 6) (* z00 z)) ?x71 ?x573 ?x1954)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x3882 (* (- 1) ?x353)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x3882 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1966 0) (= ?x4421 0) (= ?x2400 0) $x3061 (not (= ?x1854 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x2874 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x215 (+ x y)))
 (let ((?x219 (+ y z)))
 (let ((?x462 (+ 6 z)))
 (let ((?x1894 (* ?x462 ?x462 ?x462 ?x219 ?x215)))
 (let ((?x884 (+ 1 n)))
 (let ((?x4215 (* x00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)))
 (let ((?x445 (* y00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x1041 (* z00 z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2148 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2273 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x841 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x549 (* z00 z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2575 (* z00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3106 (* ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3000 (* y00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2388 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x4574 (* x00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3379 (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2247 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3975 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x215)))
 (let ((?x3136 (+ ?x3975 (* (- 1) ?x2247) (* (- 6) (* z00 ?x462 ?x462 ?x462 ?x462 ?x215)) (* 72 ?x3379) (* (- 1) (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)) (* 108 ?x4574) (* 108 (* ?x462 ?x462 ?x462 ?x215 ?x215)) (* (- 108) (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215 ?x215)) (* (- 72) (* y00 ?x462 ?x462 ?x462 ?x215)) (* (- 12) (* y00 ?x462 ?x462 ?x462 ?x462 ?x215)) (* (- 72) ?x2388) (* 18 (* y00 z00 ?x462 ?x462 ?x462 ?x215)) (* (- 72) (* y00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) (* 12 ?x3000) (* 108 (* ?x884 ?x884 ?x884 ?x219 ?x215 ?x215 ?x215)) (* 6 (* z00 z00 ?x462 ?x462 ?x462 ?x215)) (* 6 ?x3106) (* 72 (* y00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)) (* 12 (* y00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)) (* (- 6) (* z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)) (* (- 1) (* z00 z00 z00 ?x462 ?x462 ?x462 ?x215)) (* (- 18) (* y00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)) (* 6 ?x2575) (* (- 6) (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x215 ?x215)) (* 6 (* ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)) (* (- 108) (* x00 ?x462 ?x462 ?x462 ?x215)) ?x549 (* (- 72) (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)) (* (- 108) ?x841) ?x2273 (* (- 6) (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)) (* (- 6) ?x2148) (* 6 (* z00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) ?x1041 (* (- 1) (* z00 z00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) (* 6 (* z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)) (* 108 (* x00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)) (* (- 12) (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)) (* 18 (* y00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) (* 72 (* ?x884 ?x884 ?x884 ?x219 ?x219 ?x215 ?x215)) (* (- 18) ?x445) (* (- 6) (* ?x462 ?x462 ?x462 ?x462 ?x219 ?x215)) (* (- 108) ?x4215) (* 72 ?x1894))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x784 (* x x)))
 (let ((?x785 (* 108 ?x784)))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x3057 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3061 (= ?x3057 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x2178 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x2176 (* (- 108) x)))
 (let ((?x1992 (* x00 z)))
 (let ((?x2859 (* (- 18) ?x1992)))
 (let ((?x4485 (* 36 ?x561)))
 (let ((?x2864 (* z y)))
 (let ((?x3124 (* 12 ?x2864)))
 (let ((?x2439 (* z00 y)))
 (let ((?x2597 (* (- 6) ?x2439)))
 (let ((?x1525 (* y00 z00)))
 (let ((?x2000 (* 6 ?x1525)))
 (let ((?x1123 (* y00 z)))
 (let ((?x1181 (* (- 12) ?x1123)))
 (let ((?x3942 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1148 (* z x)))
 (let ((?x4562 (* 18 ?x1148)))
 (let ((?x583 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x4562 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x3942 ?x1181 ?x2000 (* (- 36) (* y00 y)) ?x2597 ?x3124 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x4485 ?x2859 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x2176 ?x67 (* (- 18) (* y00 x)) ?x2178 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x4397 (* z00 z00 y)))
 (let ((?x2441 (* 6 ?x2439)))
 (let ((?x4471 (* (- 6) ?x1525)))
 (let ((?x2724 (* 24 ?x561)))
 (let ((?x2091 (* y00 z00 z)))
 (let ((?x2868 (+ ?x2091 ?x3124 ?x4562 (* (- 18) (* x00 z00)) (* (- 12) ?x535) ?x2724 ?x2859 ?x1181 ?x4471 (* (- 12) (* y00 y)) ?x2176 ?x67 ?x2441 ?x2178 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x4397)))
 (let ((?x1125 (* 12 ?x1123)))
 (let ((?x353 (* z00 z00)))
 (let ((?x2174 (* (- 6) ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x746 (+ (* 6 ?x2864) ?x55 ?x2174 ?x1125 (* (- 18) ?x1525) ?x2176 ?x67 (* 6 (* z00 z)) ?x2178 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x425 (* (- 1) ?x50)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x424 (* (- 12) y00)))
 (let (($x3940 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x353 ?x424 ?x45 ?x46 ?x423 ?x425) 0) (= ?x746 0) (= ?x2868 0) (= ?x583 0) $x3061 (not (= ?x3136 0)))))
 (let ((?x611 (* ?x462 ?x462 ?x462 ?x462 ?x219 ?x215)))
 (let ((?x612 (* 6 ?x611)))
 (let ((?x3714 (* 18 ?x445)))
 (let ((?x954 (* ?x884 ?x884 ?x884 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x1023 (* (- 72) ?x954)))
 (let ((?x2436 (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x2433 (* 12 ?x2436)))
 (let ((?x2327 (* x00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2317 (* (- 108) ?x2327)))
 (let ((?x2991 (* z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2340 (* (- 6) ?x2991)))
 (let ((?x3238 (* z00 z00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)))
 (let ((?x1341 (* (- 1) ?x1041)))
 (let ((?x3596 (* 6 ?x2148)))
 (let ((?x2165 (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2164 (* 6 ?x2165)))
 (let ((?x2281 (* (- 1) ?x2273)))
 (let ((?x792 (* 108 ?x841)))
 (let ((?x3191 (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)))
 (let ((?x3192 (* 72 ?x3191)))
 (let ((?x482 (* (- 1) ?x549)))
 (let ((?x575 (* ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)))
 (let ((?x1515 (* (- 6) ?x575)))
 (let ((?x460 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x1070 (* 6 ?x460)))
 (let ((?x2291 (* (- 6) ?x2575)))
 (let ((?x3199 (* y00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3200 (* 18 ?x3199)))
 (let ((?x3194 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x215)))
 (let ((?x3185 (* z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x3186 (* 6 ?x3185)))
 (let ((?x3154 (* y00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2811 (* (- 12) ?x3154)))
 (let ((?x2519 (* y00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3144 (* (- 72) ?x2519)))
 (let ((?x2517 (* (- 6) ?x3106)))
 (let ((?x3051 (* ?x884 ?x884 ?x884 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3068 (* (- 108) ?x3051)))
 (let ((?x2504 (* (- 12) ?x3000)))
 (let ((?x2543 (* 72 ?x2388)))
 (let ((?x2843 (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x2844 (* 108 ?x2843)))
 (let ((?x2526 (* (- 108) ?x4574)))
 (let ((?x4499 (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x1655 (* (- 72) ?x3379)))
 (let ((?x1854 (+ (* (- 1) ?x3975) ?x2247 (* 6 (* z00 ?x462 ?x462 ?x462 ?x462 ?x215)) ?x1655 ?x4499 ?x2526 (* (- 108) (* ?x462 ?x462 ?x462 ?x215 ?x215)) ?x2844 (* 72 (* y00 ?x462 ?x462 ?x462 ?x215)) (* 12 (* y00 ?x462 ?x462 ?x462 ?x462 ?x215)) ?x2543 (* (- 18) (* y00 z00 ?x462 ?x462 ?x462 ?x215)) (* 72 (* y00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) ?x2504 ?x3068 (* (- 6) (* z00 z00 ?x462 ?x462 ?x462 ?x215)) ?x2517 ?x3144 ?x2811 ?x3186 ?x3194 ?x3200 ?x2291 ?x1070 ?x1515 (* 108 (* x00 ?x462 ?x462 ?x462 ?x215)) ?x482 ?x3192 ?x792 ?x2281 ?x2164 ?x3596 (* (- 6) (* z00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) ?x1341 ?x3238 ?x2340 ?x2317 ?x2433 (* (- 18) (* y00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) ?x1023 ?x3714 ?x612 (* 108 ?x4215) (* (- 72) ?x1894))))
 (let ((?x3602 (* y00 z y)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1373 (* z y y)))
 (let ((?x1994 (* 18 ?x1992)))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x1094 (* (- 12) ?x2864)))
 (let ((?x1594 (* (- 18) ?x1148)))
 (let ((?x2400 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1594 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) ?x3942) ?x1125 ?x4471 (* 36 (* y00 y)) ?x2441 ?x1094 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x864 ?x1994 ?x1373 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x516 (* 18 (* y00 x)) ?x71 ?x573 ?x3602 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) ?x4397))))
 (let ((?x4375 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x4421 (+ (* (- 1) ?x2091) ?x1094 ?x1594 (* 18 (* x00 z00)) ?x538 ?x590 ?x1994 ?x1125 ?x2000 (* 12 (* y00 y)) ?x64 ?x516 ?x2597 ?x71 ?x573 ?x99 (* (- 18) (* z00 x)) ?x4375 (* (- 1) ?x4397))))
 (let ((?x1954 (* z00 z00 z)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x1966 (+ (* (- 6) ?x2864) ?x446 ?x457 ?x1181 (* 18 ?x1525) ?x64 ?x516 (* (- 6) (* z00 z)) ?x71 ?x573 ?x1954)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x3882 (* (- 1) ?x353)))
 (let (($x2127 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x3882 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1966 0) (= ?x4421 0) (= ?x2400 0) $x3061 (not (= ?x1854 0)))))
 (rewrite (= $x2127 $x3940))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x300 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ z 6)))
 (let ((?x219 (+ y z)))
 (let ((?x215 (+ x y)))
 (let ((?x218 (+ n 1)))
 (let ((?x290 (* 18 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 y00 ?x216 z00)))
 (let ((?x275 (* ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x216 z00 z00 z00)))
 (let ((?x272 (* 6 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x216 z00 z00)))
 (let ((?x256 (* 6 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x216 ?x216 z00)))
 (let ((?x243 (* 6 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x240 (* 12 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 y00 ?x216 ?x216)))
 (let ((?x220 (* ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x216 ?x216 z00 z00)))
 (let ((?x222 (+ (* (- 1) ?x215 ?x216 ?x216 ?x216 ?x216 z00 z00) ?x220 (* 6 ?x215 ?x216 ?x216 ?x216 ?x216 z00))))
 (let ((?x224 (- ?x222 (* 72 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 y00 ?x216))))
 (let ((?x229 (- (+ ?x224 (* ?x218 ?x218 ?x215 ?x219 ?x219 ?x216 ?x216 ?x216 z00 z00)) (* 108 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 x00 ?x219 ?x219 ?x219 ?x216))))
 (let ((?x235 (+ (- ?x229 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 108 ?x218 ?x218 ?x215 ?x215 ?x219 ?x219 ?x216 ?x216) (* 72 ?x215 y00 ?x216 ?x216 ?x216) (* 12 ?x215 y00 ?x216 ?x216 ?x216 ?x216) (* 72 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x219 ?x216))))
 (let ((?x239 (+ (- ?x235 (* 18 ?x215 y00 ?x216 ?x216 ?x216 z00)) (* 72 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 y00))))
 (let ((?x248 (- (- (- ?x239 ?x240) (* 108 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219)) (* 6 ?x215 ?x216 ?x216 ?x216 z00 z00))))
 (let ((?x250 (- (- ?x248 ?x243) (* 72 ?x218 ?x218 ?x215 ?x219 ?x219 y00 ?x216 ?x216))))
 (let ((?x255 (+ (- ?x250 (* 12 ?x218 ?x218 ?x215 ?x219 ?x219 y00 ?x216 ?x216 ?x216)) (* 6 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 ?x216 z00) (* ?x215 ?x216 ?x216 ?x216 z00 z00 z00) (* 18 ?x218 ?x218 ?x215 ?x219 ?x219 y00 ?x216 ?x216 z00))))
 (let ((?x259 (+ (- ?x255 ?x256) (* 6 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 ?x219 ?x216))))
 (let ((?x263 (+ (- ?x259 (* 6 ?x218 ?x218 ?x215 ?x219 ?x219 ?x219 ?x216 ?x216 ?x216)) (* 108 ?x215 x00 ?x216 ?x216 ?x216))))
 (let ((?x268 (+ (- ?x263 (* ?x218 ?x218 ?x215 ?x219 ?x219 ?x216 ?x216 z00 z00 z00)) (* 72 ?x218 ?x218 ?x215 ?x219 ?x219 ?x219 ?x216 ?x216) (* 108 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x216))))
 (let ((?x273 (+ (- ?x268 (* ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 ?x216 z00 z00)) (* 6 ?x218 ?x218 ?x215 ?x219 ?x219 ?x216 ?x216 z00 z00) ?x272)))
 (let ((?x277 (- (- ?x273 (* 6 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 z00 z00)) ?x275)))
 (let ((?x282 (- (+ ?x277 (* ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 z00 z00 z00)) (* 6 ?x218 ?x218 ?x215 ?x219 ?x219 ?x216 ?x216 ?x216 z00))))
 (let ((?x285 (+ (- ?x282 (* 108 ?x218 ?x218 ?x215 x00 ?x219 ?x219 ?x216 ?x216)) (* 12 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 y00 ?x216))))
 (let ((?x289 (- (- ?x285 (* 18 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 y00 z00)) (* 72 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x293 (+ ?x289 ?x290 (* 6 ?x215 ?x219 ?x216 ?x216 ?x216 ?x216) (* 108 ?x218 ?x218 ?x218 ?x215 ?x215 x00 ?x219))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= (- ?x293 (* 72 ?x215 ?x219 ?x216 ?x216 ?x216)) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x3221 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x215 (+ x y)))
 (let ((?x219 (+ y z)))
 (let ((?x462 (+ 6 z)))
 (let ((?x1894 (* ?x462 ?x462 ?x462 ?x219 ?x215)))
 (let ((?x884 (+ 1 n)))
 (let ((?x4215 (* x00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)))
 (let ((?x611 (* ?x462 ?x462 ?x462 ?x462 ?x219 ?x215)))
 (let ((?x612 (* 6 ?x611)))
 (let ((?x445 (* y00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3714 (* 18 ?x445)))
 (let ((?x954 (* ?x884 ?x884 ?x884 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x1023 (* (- 72) ?x954)))
 (let ((?x2436 (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x2433 (* 12 ?x2436)))
 (let ((?x2327 (* x00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2317 (* (- 108) ?x2327)))
 (let ((?x2991 (* z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2340 (* (- 6) ?x2991)))
 (let ((?x3238 (* z00 z00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)))
 (let ((?x1041 (* z00 z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x1341 (* (- 1) ?x1041)))
 (let ((?x2148 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3596 (* 6 ?x2148)))
 (let ((?x2165 (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2164 (* 6 ?x2165)))
 (let ((?x2273 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x2281 (* (- 1) ?x2273)))
 (let ((?x841 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x792 (* 108 ?x841)))
 (let ((?x3191 (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)))
 (let ((?x3192 (* 72 ?x3191)))
 (let ((?x549 (* z00 z00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x482 (* (- 1) ?x549)))
 (let ((?x575 (* ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215)))
 (let ((?x1515 (* (- 6) ?x575)))
 (let ((?x460 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x1070 (* 6 ?x460)))
 (let ((?x2575 (* z00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2291 (* (- 6) ?x2575)))
 (let ((?x3199 (* y00 z00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3200 (* 18 ?x3199)))
 (let ((?x3194 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x215)))
 (let ((?x3185 (* z00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x215 ?x215)))
 (let ((?x3186 (* 6 ?x3185)))
 (let ((?x3154 (* y00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x2811 (* (- 12) ?x3154)))
 (let ((?x2519 (* y00 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3144 (* (- 72) ?x2519)))
 (let ((?x3106 (* ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2517 (* (- 6) ?x3106)))
 (let ((?x3051 (* ?x884 ?x884 ?x884 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x3068 (* (- 108) ?x3051)))
 (let ((?x3000 (* y00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2504 (* (- 12) ?x3000)))
 (let ((?x2388 (* ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2543 (* 72 ?x2388)))
 (let ((?x2843 (* ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x215 ?x215)))
 (let ((?x2844 (* 108 ?x2843)))
 (let ((?x4574 (* x00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x2526 (* (- 108) ?x4574)))
 (let ((?x4499 (* z00 z00 ?x884 ?x884 ?x462 ?x462 ?x462 ?x219 ?x219 ?x215)))
 (let ((?x3379 (* y00 ?x884 ?x884 ?x884 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x1655 (* (- 72) ?x3379)))
 (let ((?x2247 (* z00 z00 ?x884 ?x884 ?x884 ?x462 ?x462 ?x219 ?x219 ?x219 ?x215 ?x215 ?x215)))
 (let ((?x1854 (+ (* (- 1) (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x215)) ?x2247 (* 6 (* z00 ?x462 ?x462 ?x462 ?x462 ?x215)) ?x1655 ?x4499 ?x2526 (* (- 108) (* ?x462 ?x462 ?x462 ?x215 ?x215)) ?x2844 (* 72 (* y00 ?x462 ?x462 ?x462 ?x215)) (* 12 (* y00 ?x462 ?x462 ?x462 ?x462 ?x215)) ?x2543 (* (- 18) (* y00 z00 ?x462 ?x462 ?x462 ?x215)) (* 72 (* y00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) ?x2504 ?x3068 (* (- 6) (* z00 z00 ?x462 ?x462 ?x462 ?x215)) ?x2517 ?x3144 ?x2811 ?x3186 ?x3194 ?x3200 ?x2291 ?x1070 ?x1515 (* 108 (* x00 ?x462 ?x462 ?x462 ?x215)) ?x482 ?x3192 ?x792 ?x2281 ?x2164 ?x3596 (* (- 6) (* z00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) ?x1341 ?x3238 ?x2340 ?x2317 ?x2433 (* (- 18) (* y00 z00 ?x884 ?x884 ?x884 ?x219 ?x215 ?x215)) ?x1023 ?x3714 ?x612 (* 108 ?x4215) (* (- 72) ?x1894))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x784 (* x x)))
 (let ((?x785 (* 108 ?x784)))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x3057 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3061 (= ?x3057 0)))
 (let ((?x3602 (* y00 z y)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1373 (* z y y)))
 (let ((?x1992 (* x00 z)))
 (let ((?x1994 (* 18 ?x1992)))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x2864 (* z y)))
 (let ((?x1094 (* (- 12) ?x2864)))
 (let ((?x2439 (* z00 y)))
 (let ((?x2441 (* 6 ?x2439)))
 (let ((?x1525 (* y00 z00)))
 (let ((?x4471 (* (- 6) ?x1525)))
 (let ((?x1123 (* y00 z)))
 (let ((?x1125 (* 12 ?x1123)))
 (let ((?x1148 (* z x)))
 (let ((?x1594 (* (- 18) ?x1148)))
 (let ((?x2400 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1594 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1125 ?x4471 (* 36 (* y00 y)) ?x2441 ?x1094 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x864 ?x1994 ?x1373 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x516 (* 18 (* y00 x)) ?x71 ?x573 ?x3602 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x4375 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x2597 (* (- 6) ?x2439)))
 (let ((?x2000 (* 6 ?x1525)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x4421 (+ (* (- 1) (* y00 z00 z)) ?x1094 ?x1594 (* 18 (* x00 z00)) ?x538 ?x590 ?x1994 ?x1125 ?x2000 (* 12 (* y00 y)) ?x64 ?x516 ?x2597 ?x71 ?x573 ?x99 (* (- 18) (* z00 x)) ?x4375 (* (- 1) (* z00 z00 y)))))
 (let ((?x1954 (* z00 z00 z)))
 (let ((?x1181 (* (- 12) ?x1123)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x1966 (+ (* (- 6) ?x2864) ?x446 ?x457 ?x1181 (* 18 ?x1525) ?x64 ?x516 (* (- 6) (* z00 z)) ?x71 ?x573 ?x1954)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x3882 (* (- 1) ?x353)))
 (let (($x2127 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x3882 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1966 0) (= ?x4421 0) (= ?x2400 0) $x3061 (not (= ?x1854 0)))))
 (let ((?x218 (+ n 1)))
 (let ((?x216 (+ z 6)))
 (let ((?x290 (* 18 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 y00 ?x216 z00)))
 (let ((?x275 (* ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x216 z00 z00 z00)))
 (let ((?x272 (* 6 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x216 z00 z00)))
 (let ((?x256 (* 6 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x216 ?x216 z00)))
 (let ((?x243 (* 6 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x240 (* 12 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 y00 ?x216 ?x216)))
 (let ((?x220 (* ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x216 ?x216 z00 z00)))
 (let ((?x222 (+ (* (- 1) ?x215 ?x216 ?x216 ?x216 ?x216 z00 z00) ?x220 (* 6 ?x215 ?x216 ?x216 ?x216 ?x216 z00))))
 (let ((?x224 (- ?x222 (* 72 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 y00 ?x216))))
 (let ((?x229 (- (+ ?x224 (* ?x218 ?x218 ?x215 ?x219 ?x219 ?x216 ?x216 ?x216 z00 z00)) (* 108 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 x00 ?x219 ?x219 ?x219 ?x216))))
 (let ((?x235 (+ (- ?x229 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 108 ?x218 ?x218 ?x215 ?x215 ?x219 ?x219 ?x216 ?x216) (* 72 ?x215 y00 ?x216 ?x216 ?x216) (* 12 ?x215 y00 ?x216 ?x216 ?x216 ?x216) (* 72 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x219 ?x216))))
 (let ((?x239 (+ (- ?x235 (* 18 ?x215 y00 ?x216 ?x216 ?x216 z00)) (* 72 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 y00))))
 (let ((?x248 (- (- (- ?x239 ?x240) (* 108 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x219)) (* 6 ?x215 ?x216 ?x216 ?x216 z00 z00))))
 (let ((?x250 (- (- ?x248 ?x243) (* 72 ?x218 ?x218 ?x215 ?x219 ?x219 y00 ?x216 ?x216))))
 (let ((?x255 (+ (- ?x250 (* 12 ?x218 ?x218 ?x215 ?x219 ?x219 y00 ?x216 ?x216 ?x216)) (* 6 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 ?x216 z00) (* ?x215 ?x216 ?x216 ?x216 z00 z00 z00) (* 18 ?x218 ?x218 ?x215 ?x219 ?x219 y00 ?x216 ?x216 z00))))
 (let ((?x259 (+ (- ?x255 ?x256) (* 6 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 ?x219 ?x216))))
 (let ((?x263 (+ (- ?x259 (* 6 ?x218 ?x218 ?x215 ?x219 ?x219 ?x219 ?x216 ?x216 ?x216)) (* 108 ?x215 x00 ?x216 ?x216 ?x216))))
 (let ((?x268 (+ (- ?x263 (* ?x218 ?x218 ?x215 ?x219 ?x219 ?x216 ?x216 z00 z00 z00)) (* 72 ?x218 ?x218 ?x215 ?x219 ?x219 ?x219 ?x216 ?x216) (* 108 ?x218 ?x218 ?x218 ?x215 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219 ?x216))))
 (let ((?x273 (+ (- ?x268 (* ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 ?x216 z00 z00)) (* 6 ?x218 ?x218 ?x215 ?x219 ?x219 ?x216 ?x216 z00 z00) ?x272)))
 (let ((?x277 (- (- ?x273 (* 6 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 z00 z00)) ?x275)))
 (let ((?x282 (- (+ ?x277 (* ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 z00 z00 z00)) (* 6 ?x218 ?x218 ?x215 ?x219 ?x219 ?x216 ?x216 ?x216 z00))))
 (let ((?x285 (+ (- ?x282 (* 108 ?x218 ?x218 ?x215 x00 ?x219 ?x219 ?x216 ?x216)) (* 12 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 y00 ?x216))))
 (let ((?x289 (- (- ?x285 (* 18 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 y00 z00)) (* 72 ?x218 ?x218 ?x218 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x293 (+ ?x289 ?x290 (* 6 ?x215 ?x219 ?x216 ?x216 ?x216 ?x216) (* 108 ?x218 ?x218 ?x218 ?x215 ?x215 x00 ?x219))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x299 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= (- ?x293 (* 72 ?x215 ?x219 ?x216 ?x216 ?x216)) 0))))))
 (rewrite (= $x299 $x2127))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x301 (asserted $x300)))
 (let ((@x2299 (mp (mp @x301 (quant-intro (proof-bind ?x3221) (= $x300 $x4403)) $x4403) (rewrite (= $x4403 $x4403)) $x4403)))
 (let ((@x4323 (mp (mp @x2299 (quant-intro (proof-bind ?x2874) (= $x4403 $x2980)) $x2980) (quant-intro (proof-bind ?x6281) (= $x2980 $x6279)) $x6279)))
 (let ((@x1799 (mp (mp~ @x4323 (sk (~ $x6279 $x3231)) $x3231) (rewrite (= $x3231 $x2988)) $x2988)))
 (let ((@x3841 (and-elim @x1799 $x1956)))
 (let ((@x401 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1956) $x4244)) @x3841 $x4244)))
 (let (($x4252 (>= ?x4333 0)))
 (let ((@x3554 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1956) $x4252)) @x3841 $x4252)))
 (let (($x4291 (<= ?x5847 0)))
 (let ((@x3786 (and-elim @x1799 $x5841)))
 (let ((@x5850 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5841) $x4291)) @x3786 $x4291)))
 (let (($x3762 (>= ?x5847 0)))
 (let ((@x1788 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5841) $x3762)) @x3786 $x3762)))
 (let (($x4247 (<= ?x4278 0)))
 (let ((@x4276 (and-elim @x1799 $x4279)))
 (let ((@x2670 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4279) $x4247)) @x4276 $x4247)))
 (let (($x2467 (>= ?x4278 0)))
 (let ((@x800 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4279) $x2467)) @x4276 $x2467)))
 (let (($x4201 (<= ?x2016 0)))
 (let ((@x5834 (and-elim @x1799 $x4647)))
 (let ((@x1153 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4647) $x4201)) @x5834 $x4201)))
 (let (($x4296 (>= ?x2016 0)))
 (let ((@x2664 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4647) $x4296)) @x5834 $x4296)))
 (let (($x3022 (<= ?x2407 0)))
 (let ((@x5837 (and-elim @x1799 $x1610)))
 (let ((@x690 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1610) $x3022)) @x5837 $x3022)))
 (let (($x4217 (>= ?x2407 0)))
 (let ((@x5842 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1610) $x4217)) @x5837 $x4217)))
 (let (($x4212 (<= ?x483 0)))
 (let ((@x1795 (and-elim @x1799 $x2457)))
 (let ((@x1248 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2457) $x4212)) @x1795 $x4212)))
 (let (($x5871 (>= ?x483 0)))
 (let ((@x795 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2457) $x5871)) @x1795 $x5871)))
 (let (($x3015 (not (<= ?x1805 0))))
 (let (($x3842 (>= ?x1805 0)))
 (let ((@x2063 ((_ th-lemma arith) (hypothesis (not $x3842)) @x795 @x1248 @x795 @x1248 @x5842 @x690 @x795 @x1248 @x800 @x2670 @x5842 @x690 @x3554 @x401 @x800 @x2670 @x2664 @x1153 @x800 @x2670 @x800 @x2670 @x800 @x2670 @x1788 @x5850 @x3554 @x401 @x1788 @x5850 @x3554 @x401 false)))
 (let ((@x1092 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1803 $x3015 (not $x3842))) (and-elim @x1799 $x1796) (or $x3015 (not $x3842)))))
 ((_ th-lemma arith) (unit-resolution @x1092 (lemma @x2063 $x3842) $x3015) @x795 @x1248 @x795 @x1248 @x5842 @x690 @x795 @x1248 @x800 @x2670 @x5842 @x690 @x3554 @x401 @x800 @x2670 @x2664 @x1153 @x800 @x2670 @x800 @x2670 @x800 @x2670 @x1788 @x5850 @x3554 @x401 @x1788 @x5850 @x3554 @x401 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        30
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2066
 :arith-nonlinear-bounds    22
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      8
 :arith-tableau-max-columns 332
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                7.93
 :memory                    3.95
 :mk-bool-var               27
 :mk-clause                 22
 :num-allocs                923920129
 :num-checks                1
 :propagations              14
 :rlimit-count              662827
 :time                      0.46
 :total-time                0.48)
