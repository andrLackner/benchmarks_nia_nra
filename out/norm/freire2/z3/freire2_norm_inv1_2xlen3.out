unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x418 (* (- 1) s!1)))
 (let ((?x304 (* r00 r00)))
 (let ((?x999 (* (- 3) ?x304)))
 (let ((?x985 (+ s00 ?x999 ?x418 (* 3 (* r!2 r!2)))))
 (let (($x1749 (<= ?x985 0)))
 (let (($x1257 (= ?x985 0)))
 (let ((?x1301 (+ 3 (* 6 r!2) s!1)))
 (let ((?x1307 (+ ?x418 x!0)))
 (let ((?x687 (+ 1 r!2)))
 (let ((?x2074 (* ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301)))
 (let ((?x1595 (* (- 3) (* r00 r00 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301 ?x1301))))
 (let ((?x1949 (* r00 r00 ?x687 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1307 ?x1307)))
 (let ((?x2068 (* 3 ?x1949)))
 (let ((?x992 (* (- 1) (* s00 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301))))
 (let ((?x1643 (* (- 1) (* ?x1307 ?x1307 ?x1301 ?x1301 ?x1301 ?x1301 ?x1301))))
 (let ((?x1664 (* (- 3) (* r00 r00 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301))))
 (let ((?x1606 (* 3 (* r00 r00 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301))))
 (let ((?x1492 (* ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301)))
 (let ((?x1074 (* (- 3) (* ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301 ?x1301 ?x1301))))
 (let ((?x789 (* (- 1) (* s00 ?x687 ?x687 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301 ?x1301 ?x1301))))
 (let ((?x1169 (* ?x687 ?x687 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301 ?x1301 ?x1301 ?x1301)))
 (let ((?x1167 (* s00 ?x687 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301)))
 (let ((?x1286 (* (- 1) (* ?x687 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301))))
 (let ((?x1053 (* (- 1) (* s00 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301))))
 (let ((?x1045 (* s00 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301 ?x1301)))
 (let ((?x1055 (* (- 1) (* s00 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301))))
 (let ((?x1017 (* ?x687 ?x687 ?x687 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1307 ?x1307)))
 (let ((?x1006 (* (- 3) ?x1017)))
 (let ((?x1705 (* 3 (* ?x687 ?x687 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301 ?x1301))))
 (let ((?x980 (* ?x687 ?x687 ?x687 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301)))
 (let ((?x1279 (* 3 ?x980)))
 (let ((?x521 (* (- 1) (* ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301 ?x1301))))
 (let ((?x797 (* (- 1) (* s00 ?x687 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1307 ?x1307))))
 (let ((?x876 (* (- 3) (* ?x687 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301))))
 (let ((?x576 (* (- 1) (* ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301))))
 (let ((?x834 (* s00 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301)))
 (let ((?x819 (* s00 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301)))
 (let ((?x683 (* 3 (* r00 r00 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301))))
 (let ((?x709 (* 3 (* ?x687 ?x687 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301))))
 (let ((?x1544 (* (- 3) (* ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301))))
 (let ((?x610 (* ?x687 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301)))
 (let ((?x602 (* (- 3) (* ?x687 ?x687 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301))))
 (let ((?x601 (* r00 r00 ?x687 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301)))
 (let ((?x609 (* (- 3) ?x601)))
 (let ((?x2029 (* 3 (* ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301))))
 (let ((?x586 (* ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301 ?x1301)))
 (let ((?x584 (* (- 3) (* r00 r00 ?x687 ?x687 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301))))
 (let ((?x888 (* 3 (* r00 r00 ?x687 ?x687 ?x1307 ?x1307 ?x1307 ?x1301 ?x1301))))
 (let ((?x831 (* 3 (* r00 r00 ?x687 ?x687 ?x1307 ?x1307 ?x1301 ?x1301 ?x1301 ?x1301 ?x1301))))
 (let ((?x712 (+ ?x831 ?x888 ?x584 ?x586 ?x2029 ?x609 ?x602 ?x610 ?x1544 ?x709 ?x683 ?x819 ?x834 ?x576 ?x876 ?x797 ?x521 ?x1279 ?x1705 ?x1006 ?x1055 ?x1045 ?x1053 ?x1286 ?x1167 ?x1169 ?x789 ?x1074 ?x1492 ?x1606 ?x1664 ?x1643 ?x992 ?x2068 ?x1595 ?x2074)))
 (let (($x369 (= ?x712 0)))
 (let (($x367 (not $x369)))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1192 (* 108 ?x1349)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x530 (* 16 ?x1187)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x907 (* (- 432) ?x885)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1138 (* (- 108) ?x808)))
 (let ((?x650 (* s00 r00 r00)))
 (let ((?x1641 (* (- 36) ?x650)))
 (let ((?x594 (* s00 s00)))
 (let ((?x776 (* 51 ?x594)))
 (let ((?x525 (* r00 x00)))
 (let ((?x382 (* 108 ?x525)))
 (let ((?x510 (* r00 r00 s!1)))
 (let ((?x1638 (* 36 ?x510)))
 (let ((?x1093 (* (- 9) s!1)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1499 (+ ?x137 ?x1093 (* (- 54) (* s00 r00)) ?x1638 (* 216 (* s00 r00 x00)) ?x382 ?x776 (* 15 (* s!1 s!1)) ?x1641 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* (- 66) (* s00 s!1)) ?x1138 ?x907 (* (- 108) (* r00 x!0)) (* 108 (* x!0 x!0)) (* 54 (* r00 s!1)) (* 432 (* r00 r00 r00 x!0)) (* 216 (* s00 r00 r00 r00)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) (* 108 (* s00 x!0)) (* (- 4) (* s!1 s!1 s!1)) ?x530 (* 108 (* s00 r00 s!1)) (* 108 (* x00 s!1)) ?x1192 (* (- 216) (* x00 x!0)) (* (- 12) (* s00 s!1 s!1)) (* (- 108) (* s!1 x!0)) (* (- 216) (* r00 r00 r00 s!1)))))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x546 (* 36 ?x880)))
 (let ((?x1858 (* (- 6) ?x808)))
 (let ((?x606 (* 15 ?x594)))
 (let ((?x736 (* 54 ?x525)))
 (let ((?x1104 (+ ?x137 ?x1093 (* (- 24) (* s00 r00)) ?x1638 ?x736 ?x606 (* (- 3) (* s!1 s!1)) ?x1641 (* 2 (* s00 s00 r00)) (* 36 (* r00 x00 r!2)) (* (- 12) (* s00 s!1)) (* (- 2) (* r!2 s!1 s!1)) ?x1858 ?x546 (* (- 54) (* r00 x!0)) (* (- 2) (* s00 r!2 s!1)) (* 4 (* s00 s00 r!2)) (* (- 54) (* r!2 x!0)) (* 54 (* x00 r!2)) (* 24 (* r00 s!1)) (* 6 (* s00 x!0)) (* (- 24) (* s00 r!2)) (* 2 (* s00 r00 s!1)) (* 24 (* r!2 s!1)) (* (- 36) (* r00 r00 x!0)) (* 6 (* x00 s!1)) (* (- 36) (* r00 r!2 x!0)) (* (- 4) (* r00 s!1 s!1)) (* (- 6) (* s!1 x!0)))))
 (let ((?x1702 (* 4 ?x594)))
 (let ((?x1542 (* 18 ?x525)))
 (let ((?x1779 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x668 (+ ?x44 ?x1779 (* (- 9) (* s00 r00)) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x510) ?x1542 ?x1702 (* (- 2) (* s!1 s!1)) (* (- 6) ?x650) (* 6 (* s00 r00 r!2)) (* (- 2) (* s00 s!1)) (* (- 18) (* r00 x!0)) (* (- 18) (* r!2 x!0)) (* 18 (* x00 r!2)) (* 9 (* r00 s!1)) (* (- 9) (* s00 r!2)) (* 9 (* r!2 s!1)))))
 (let ((?x1299 (* r!2 s!1)))
 (let ((?x588 (* 2 ?x1299)))
 (let ((?x2077 (* 6 x!0)))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x429 (* s00 r00)))
 (let ((?x507 (* (- 6) ?x429)))
 (let ((?x1591 (* 3 r!2)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x511 (+ ?x44 ?x503 ?x504 ?x1591 ?x1779 ?x507 ?x473 ?x2077 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)) ?x588)))
 (let (($x2065 (and $x1257 (= ?x511 0) (= ?x668 0) (= ?x1104 0) (= ?x1499 0) $x367)))
 (let ((?x777 (+ ?x888 ?x992 ?x1705 ?x576 ?x1045 ?x521 ?x584 ?x586 ?x1286 ?x1055 ?x1643 ?x1167 ?x1169 ?x602 ?x831 ?x1664 ?x1006 ?x1053 ?x683 ?x876 ?x1492 ?x1606 ?x1279 ?x709 ?x2074 ?x1074 ?x819 ?x834 ?x1595 ?x2068 ?x2029 ?x609 ?x610 ?x1544 ?x789 ?x797)))
 (let ((?x1379 (* (- 108) ?x1349)))
 (let ((?x1378 (* (- 16) ?x1187)))
 (let ((?x1059 (* s00 r00 r00 r00)))
 (let ((?x1374 (* (- 216) ?x1059)))
 (let ((?x886 (* 432 ?x885)))
 (let ((?x1132 (* 108 ?x808)))
 (let ((?x734 (* s00 s00 r00 r00)))
 (let ((?x735 (* 36 ?x734)))
 (let ((?x671 (* s00 s00 r00)))
 (let ((?x1015 (* 108 ?x671)))
 (let ((?x1003 (* 36 ?x650)))
 (let ((?x1368 (* (- 51) ?x594)))
 (let ((?x1393 (* s!1 r00 r00)))
 (let ((?x1051 (* (- 36) ?x1393)))
 (let ((?x1365 (* (- 108) ?x525)))
 (let ((?x516 (* s00 r00 x00)))
 (let ((?x1364 (* (- 216) ?x516)))
 (let ((?x523 (* 54 ?x429)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x698 (* 9 s!1)))
 (let ((?x694 (+ ?x698 ?x990 ?x523 ?x1364 ?x1365 (* (- 15) (* s!1 s!1)) ?x1051 ?x1368 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1003 ?x1015 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x735 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1132 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x886 (* 12 (* s!1 s!1 s00)) ?x1374 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1378 (* 216 (* x!0 x00)) ?x1379)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x699 (* (- 2) ?x671)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x567 (* 24 ?x429)))
 (let ((?x1844 (+ ?x698 ?x990 (* (- 24) ?x1299) (* 24 (* r!2 s00)) ?x567 ?x554 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x1051 ?x919 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1003 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x699 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x809 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x893 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x651 (* 6 ?x650)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x544 (* 9 ?x429)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x1178 (+ (* 3 s!1) ?x381 (* (- 9) ?x1299) (* 9 (* r!2 s00)) ?x544 ?x539 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1393) ?x607 (* 18 (* x!0 r00)) ?x651 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1070 (+ ?x1591 ?x1779 ?x2077 ?x44 ?x503 ?x504 ?x588 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x507 ?x473)))
 (let (($x1102 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x304)) 0)))
 (let (($x801 (and $x1102 (= ?x1070 0) (= ?x1178 0) (= ?x1844 0) (= ?x694 0) (not (= ?x777 0)))))
 (let (($x312 (exists ((r Int) (s Int) (x Int) )(! (let ((?x283 (* (- 1) s)))
 (let ((?x1395 (+ ?x283 x)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x355 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395))))
 (let ((?x213 (* 6 r)))
 (let ((?x1389 (+ 3 ?x213 s)))
 (let ((?x1803 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)))
 (let ((?x1762 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395)))
 (let ((?x1081 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389))))
 (let ((?x592 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x1174 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)))
 (let ((?x851 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x1254 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x1615 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x1056 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395)))
 (let ((?x471 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389))))
 (let ((?x983 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x1330 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x1184 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x1188 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x451 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389))))
 (let ((?x1034 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x1144 (+ (* 3 (* r00 r00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) ?x1034 (* 3 (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389)) (* (- 1) (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) (* s00 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389) ?x451 ?x1188 (* ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389) ?x1184 ?x1330 (* (- 1) (* ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389)) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389) (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389) ?x983 ?x471 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)) (* (- 3) ?x1056) (* (- 1) (* s00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) ?x1615 ?x1254 (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389) ?x851 (* 3 ?x1174) ?x592 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389) ?x1081 (* s00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389) (* (- 3) (* r00 r00 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389)) (* 3 ?x1762) (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)) (* (- 3) ?x1803) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) (* (- 1) (* s00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389)) ?x355)))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1379 (* (- 108) ?x1349)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x1378 (* (- 16) ?x1187)))
 (let ((?x1059 (* s00 r00 r00 r00)))
 (let ((?x1374 (* (- 216) ?x1059)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x886 (* 432 ?x885)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1132 (* 108 ?x808)))
 (let ((?x734 (* s00 s00 r00 r00)))
 (let ((?x735 (* 36 ?x734)))
 (let ((?x671 (* s00 s00 r00)))
 (let ((?x1015 (* 108 ?x671)))
 (let ((?x650 (* s00 r00 r00)))
 (let ((?x1003 (* 36 ?x650)))
 (let ((?x594 (* s00 s00)))
 (let ((?x1368 (* (- 51) ?x594)))
 (let ((?x568 (* s r00 r00)))
 (let ((?x867 (* (- 36) ?x568)))
 (let ((?x525 (* r00 x00)))
 (let ((?x1365 (* (- 108) ?x525)))
 (let ((?x516 (* s00 r00 x00)))
 (let ((?x1364 (* (- 216) ?x516)))
 (let ((?x429 (* s00 r00)))
 (let ((?x523 (* 54 ?x429)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1380 (+ ?x143 ?x990 ?x523 ?x1364 ?x1365 (* (- 15) (* s s)) ?x867 ?x1368 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1003 ?x1015 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x735 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1132 (* 108 (* s x)) (* (- 108) (* x x)) ?x886 (* 12 (* s s s00)) ?x1374 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1378 (* 216 (* x x00)) ?x1379)))
 (let (($x1381 (= ?x1380 0)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x699 (* (- 2) ?x671)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x567 (* 24 ?x429)))
 (let ((?x1082 (+ ?x143 ?x990 (* (- 24) (* r s)) (* 24 (* r s00)) ?x567 ?x554 ?x572 (* 54 (* r x)) (* 36 (* r x r00)) ?x867 ?x919 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1003 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x699 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x809 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x893 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1087 (= ?x1082 0)))
 (let ((?x651 (* 6 ?x650)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x544 (* 9 ?x429)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x748 (+ ?x47 ?x381 (* (- 9) (* r s)) (* 9 (* r s00)) ?x544 ?x539 ?x549 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x568) ?x607 (* 18 (* x r00)) ?x651 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x755 (= ?x748 0)))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x507 (* (- 6) ?x429)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x502 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x508 (+ ?x43 ?x502 ?x56 ?x44 ?x503 ?x504 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x507 ?x473)))
 (let (($x509 (= ?x508 0)))
 (let ((?x304 (* r00 r00)))
 (let ((?x305 (* 3 ?x304)))
 (let ((?x334 (* (- 1) s00)))
 (let (($x337 (= (+ s ?x334 (* (- 3) (* r r)) ?x305) 0)))
 (and $x337 $x509 $x755 $x1087 $x1381 (not (= ?x1144 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x665 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x646 (+ 3 s ?x213)))
 (let ((?x283 (* (- 1) s)))
 (let ((?x663 (+ x ?x283)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x1440 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1742 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1886 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1824 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1571 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646)))
 (let ((?x313 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663)))
 (let ((?x290 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646))))
 (let ((?x359 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1347 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1316 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1267 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646))))
 (let ((?x1140 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646)))
 (let ((?x1125 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x818 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646))))
 (let ((?x860 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663)))
 (let ((?x1596 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646))))
 (let ((?x2004 (+ (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646)) (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646) (* ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) (* (- 1) (* ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646 ?x646)) ?x1596 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646)) (* (- 3) (* ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) (* (- 3) ?x860) ?x818 (* ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663) ?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) ?x1125 (* 3 ?x1140) (* (- 1) (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) ?x1267 ?x1316 ?x1347 ?x359 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* (- 1) (* ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646)) ?x290 (* 3 ?x313) (* (- 1) (* s00 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) (* (- 3) ?x1571) ?x1824 (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646) (* 3 (* r00 r00 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) ?x1886 ?x1742 ?x1440)))
 (let (($x1054 (not (= ?x2004 0))))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1192 (* 108 ?x1349)))
 (let ((?x1092 (* (- 9) s)))
 (let ((?x706 (* r00 r00 s00)))
 (let ((?x1013 (* (- 36) ?x706)))
 (let ((?x137 (* 9 s00)))
 (let ((?x594 (* s00 s00)))
 (let ((?x776 (* 51 ?x594)))
 (let ((?x492 (* r00 r00 s)))
 (let ((?x805 (* 36 ?x492)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x530 (* 16 ?x1187)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1138 (* (- 108) ?x808)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x907 (* (- 432) ?x885)))
 (let ((?x525 (* r00 x00)))
 (let ((?x382 (* 108 ?x525)))
 (let ((?x1200 (+ (* 216 (* r00 s00 x00)) ?x382 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x907 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1138 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x530 (* (- 108) (* x s)) ?x805 ?x776 (* (- 108) (* r00 x)) ?x137 ?x1013 ?x1092 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1192)))
 (let (($x1207 (= ?x1200 0)))
 (let ((?x606 (* 15 ?x594)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x546 (* 36 ?x880)))
 (let ((?x1858 (* (- 6) ?x808)))
 (let ((?x736 (* 54 ?x525)))
 (let ((?x658 (+ (* 24 (* s r)) ?x736 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1858 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x805 ?x546 ?x606 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1013 (* 54 (* x00 r)) ?x1092 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x502 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1702 (* 4 ?x594)))
 (let ((?x1542 (* 18 ?x525)))
 (let ((?x1212 (+ (* 9 (* s r)) ?x1542 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x492) ?x1702 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x706) (* 18 (* x00 r)) ?x502 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1703 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x502 ?x503 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x504 ?x473)))
 (let (($x858 (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x858 (= ?x1703 0) (= ?x1212 0) (= ?x658 0) $x1207 $x1054)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x870 (lambda ((r Int) (s Int) (x Int) )(let ((?x283 (* (- 1) s)))
 (let ((?x1395 (+ ?x283 x)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x355 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395))))
 (let ((?x213 (* 6 r)))
 (let ((?x1389 (+ 3 ?x213 s)))
 (let ((?x1803 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)))
 (let ((?x1762 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395)))
 (let ((?x1081 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389))))
 (let ((?x592 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x1174 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)))
 (let ((?x851 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x1254 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x1615 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x1056 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395)))
 (let ((?x471 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389))))
 (let ((?x983 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x1330 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x1184 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x1188 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x451 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389))))
 (let ((?x1034 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x1144 (+ (* 3 (* r00 r00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) ?x1034 (* 3 (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389)) (* (- 1) (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) (* s00 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389) ?x451 ?x1188 (* ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389) ?x1184 ?x1330 (* (- 1) (* ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389)) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389) (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389) ?x983 ?x471 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)) (* (- 3) ?x1056) (* (- 1) (* s00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) ?x1615 ?x1254 (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389) ?x851 (* 3 ?x1174) ?x592 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389) ?x1081 (* s00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389) (* (- 3) (* r00 r00 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389)) (* 3 ?x1762) (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)) (* (- 3) ?x1803) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) (* (- 1) (* s00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389)) ?x355)))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1379 (* (- 108) ?x1349)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x1378 (* (- 16) ?x1187)))
 (let ((?x1059 (* s00 r00 r00 r00)))
 (let ((?x1374 (* (- 216) ?x1059)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x886 (* 432 ?x885)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1132 (* 108 ?x808)))
 (let ((?x734 (* s00 s00 r00 r00)))
 (let ((?x735 (* 36 ?x734)))
 (let ((?x671 (* s00 s00 r00)))
 (let ((?x1015 (* 108 ?x671)))
 (let ((?x650 (* s00 r00 r00)))
 (let ((?x1003 (* 36 ?x650)))
 (let ((?x594 (* s00 s00)))
 (let ((?x1368 (* (- 51) ?x594)))
 (let ((?x568 (* s r00 r00)))
 (let ((?x867 (* (- 36) ?x568)))
 (let ((?x525 (* r00 x00)))
 (let ((?x1365 (* (- 108) ?x525)))
 (let ((?x516 (* s00 r00 x00)))
 (let ((?x1364 (* (- 216) ?x516)))
 (let ((?x429 (* s00 r00)))
 (let ((?x523 (* 54 ?x429)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1380 (+ ?x143 ?x990 ?x523 ?x1364 ?x1365 (* (- 15) (* s s)) ?x867 ?x1368 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1003 ?x1015 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x735 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1132 (* 108 (* s x)) (* (- 108) (* x x)) ?x886 (* 12 (* s s s00)) ?x1374 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1378 (* 216 (* x x00)) ?x1379)))
 (let (($x1381 (= ?x1380 0)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x699 (* (- 2) ?x671)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x567 (* 24 ?x429)))
 (let ((?x1082 (+ ?x143 ?x990 (* (- 24) (* r s)) (* 24 (* r s00)) ?x567 ?x554 ?x572 (* 54 (* r x)) (* 36 (* r x r00)) ?x867 ?x919 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1003 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x699 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x809 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x893 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1087 (= ?x1082 0)))
 (let ((?x651 (* 6 ?x650)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x544 (* 9 ?x429)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x748 (+ ?x47 ?x381 (* (- 9) (* r s)) (* 9 (* r s00)) ?x544 ?x539 ?x549 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x568) ?x607 (* 18 (* x r00)) ?x651 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x755 (= ?x748 0)))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x507 (* (- 6) ?x429)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x502 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x508 (+ ?x43 ?x502 ?x56 ?x44 ?x503 ?x504 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x507 ?x473)))
 (let (($x509 (= ?x508 0)))
 (let ((?x304 (* r00 r00)))
 (let ((?x305 (* 3 ?x304)))
 (let ((?x334 (* (- 1) s00)))
 (let (($x337 (= (+ s ?x334 (* (- 3) (* r r)) ?x305) 0)))
 (let (($x1640 (and $x337 $x509 $x755 $x1087 $x1381 (not (= ?x1144 0)))))
 (let ((?x646 (+ 3 s ?x213)))
 (let ((?x663 (+ x ?x283)))
 (let ((?x1440 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1742 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1886 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1824 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1571 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646)))
 (let ((?x313 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663)))
 (let ((?x290 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646))))
 (let ((?x359 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1347 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1316 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1267 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646))))
 (let ((?x1140 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646)))
 (let ((?x1125 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x818 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646))))
 (let ((?x860 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663)))
 (let ((?x1596 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646))))
 (let ((?x2004 (+ (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646)) (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646) (* ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) (* (- 1) (* ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646 ?x646)) ?x1596 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646)) (* (- 3) (* ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) (* (- 3) ?x860) ?x818 (* ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663) ?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) ?x1125 (* 3 ?x1140) (* (- 1) (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) ?x1267 ?x1316 ?x1347 ?x359 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* (- 1) (* ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646)) ?x290 (* 3 ?x313) (* (- 1) (* s00 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) (* (- 3) ?x1571) ?x1824 (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646) (* 3 (* r00 r00 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) ?x1886 ?x1742 ?x1440)))
 (let (($x1054 (not (= ?x2004 0))))
 (let ((?x1192 (* 108 ?x1349)))
 (let ((?x1092 (* (- 9) s)))
 (let ((?x706 (* r00 r00 s00)))
 (let ((?x1013 (* (- 36) ?x706)))
 (let ((?x137 (* 9 s00)))
 (let ((?x776 (* 51 ?x594)))
 (let ((?x492 (* r00 r00 s)))
 (let ((?x805 (* 36 ?x492)))
 (let ((?x530 (* 16 ?x1187)))
 (let ((?x1138 (* (- 108) ?x808)))
 (let ((?x907 (* (- 432) ?x885)))
 (let ((?x382 (* 108 ?x525)))
 (let ((?x1200 (+ (* 216 (* r00 s00 x00)) ?x382 (* (- 54) (* r00 s00)) (* 15 ?x548) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x907 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1138 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x530 (* (- 108) (* x s)) ?x805 ?x776 (* (- 108) (* r00 x)) ?x137 ?x1013 ?x1092 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1192)))
 (let (($x1207 (= ?x1200 0)))
 (let ((?x606 (* 15 ?x594)))
 (let ((?x546 (* 36 ?x880)))
 (let ((?x1858 (* (- 6) ?x808)))
 (let ((?x736 (* 54 ?x525)))
 (let ((?x658 (+ (* 24 (* s r)) ?x736 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x548) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1858 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x805 ?x546 ?x606 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1013 (* 54 (* x00 r)) ?x1092 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x1702 (* 4 ?x594)))
 (let ((?x1542 (* 18 ?x525)))
 (let ((?x1212 (+ (* 9 (* s r)) ?x1542 (* (- 9) (* r00 s00)) (* (- 2) ?x548) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x492) ?x1702 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x706) (* 18 (* x00 r)) ?x502 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x1703 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x502 ?x503 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x504 ?x473)))
 (let (($x858 (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) ?x304)) 0)))
 (let (($x1149 (and $x858 (= ?x1703 0) (= ?x1212 0) (= ?x658 0) $x1207 $x1054)))
 (rewrite (= $x1149 $x1640))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1874 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x646 (+ 3 s ?x213)))
 (let ((?x283 (* (- 1) s)))
 (let ((?x663 (+ x ?x283)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x1440 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1742 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1886 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1824 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1571 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646)))
 (let ((?x313 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663)))
 (let ((?x290 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646))))
 (let ((?x359 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1347 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1316 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1267 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646))))
 (let ((?x1140 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646)))
 (let ((?x1125 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x818 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646))))
 (let ((?x860 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663)))
 (let ((?x1596 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646))))
 (let ((?x2004 (+ (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646)) (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646) (* ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) (* (- 1) (* ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646 ?x646)) ?x1596 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646)) (* (- 3) (* ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) (* (- 3) ?x860) ?x818 (* ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663) ?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) ?x1125 (* 3 ?x1140) (* (- 1) (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) ?x1267 ?x1316 ?x1347 ?x359 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* (- 1) (* ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646)) ?x290 (* 3 ?x313) (* (- 1) (* s00 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) (* (- 3) ?x1571) ?x1824 (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646) (* 3 (* r00 r00 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) ?x1886 ?x1742 ?x1440)))
 (let (($x1054 (not (= ?x2004 0))))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1192 (* 108 ?x1349)))
 (let ((?x1092 (* (- 9) s)))
 (let ((?x706 (* r00 r00 s00)))
 (let ((?x1013 (* (- 36) ?x706)))
 (let ((?x137 (* 9 s00)))
 (let ((?x594 (* s00 s00)))
 (let ((?x776 (* 51 ?x594)))
 (let ((?x492 (* r00 r00 s)))
 (let ((?x805 (* 36 ?x492)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x530 (* 16 ?x1187)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1138 (* (- 108) ?x808)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x907 (* (- 432) ?x885)))
 (let ((?x525 (* r00 x00)))
 (let ((?x382 (* 108 ?x525)))
 (let ((?x1200 (+ (* 216 (* r00 s00 x00)) ?x382 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x907 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1138 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x530 (* (- 108) (* x s)) ?x805 ?x776 (* (- 108) (* r00 x)) ?x137 ?x1013 ?x1092 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1192)))
 (let (($x1207 (= ?x1200 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x460 (+ (* (- 24) (* s r)) ?x554 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x572 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x809 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x492) ?x893 ?x919 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x990 (* 36 ?x706) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x527 (+ (* (- 9) (* s r)) ?x539 (* 9 (* r00 s00)) ?x549 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x492) ?x607 (* 18 (* r00 x)) ?x381 (* 6 ?x706) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1739 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x381 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x858 (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x858 (= ?x1739 0) (= ?x527 0) (= ?x460 0) $x1207 $x1054))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x774 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x646 (+ 3 s ?x213)))
 (let ((?x283 (* (- 1) s)))
 (let ((?x663 (+ x ?x283)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x1440 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1742 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1886 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1824 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1571 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646)))
 (let ((?x313 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663)))
 (let ((?x290 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646))))
 (let ((?x359 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1347 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1316 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1267 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646))))
 (let ((?x1140 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646)))
 (let ((?x1125 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x818 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646))))
 (let ((?x860 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663)))
 (let ((?x1596 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646))))
 (let ((?x2004 (+ (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646)) (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646) (* ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) (* (- 1) (* ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646 ?x646)) ?x1596 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646)) (* (- 3) (* ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) (* (- 3) ?x860) ?x818 (* ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663) ?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) ?x1125 (* 3 ?x1140) (* (- 1) (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) ?x1267 ?x1316 ?x1347 ?x359 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* (- 1) (* ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646)) ?x290 (* 3 ?x313) (* (- 1) (* s00 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) (* (- 3) ?x1571) ?x1824 (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646) (* 3 (* r00 r00 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) ?x1886 ?x1742 ?x1440)))
 (let (($x1054 (not (= ?x2004 0))))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1192 (* 108 ?x1349)))
 (let ((?x1092 (* (- 9) s)))
 (let ((?x706 (* r00 r00 s00)))
 (let ((?x1013 (* (- 36) ?x706)))
 (let ((?x137 (* 9 s00)))
 (let ((?x594 (* s00 s00)))
 (let ((?x776 (* 51 ?x594)))
 (let ((?x492 (* r00 r00 s)))
 (let ((?x805 (* 36 ?x492)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x530 (* 16 ?x1187)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1138 (* (- 108) ?x808)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x907 (* (- 432) ?x885)))
 (let ((?x525 (* r00 x00)))
 (let ((?x382 (* 108 ?x525)))
 (let ((?x1200 (+ (* 216 (* r00 s00 x00)) ?x382 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x907 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1138 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x530 (* (- 108) (* x s)) ?x805 ?x776 (* (- 108) (* r00 x)) ?x137 ?x1013 ?x1092 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1192)))
 (let (($x1207 (= ?x1200 0)))
 (let ((?x606 (* 15 ?x594)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x546 (* 36 ?x880)))
 (let ((?x1858 (* (- 6) ?x808)))
 (let ((?x736 (* 54 ?x525)))
 (let ((?x658 (+ (* 24 (* s r)) ?x736 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1858 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x805 ?x546 ?x606 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1013 (* 54 (* x00 r)) ?x1092 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x502 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1702 (* 4 ?x594)))
 (let ((?x1542 (* 18 ?x525)))
 (let ((?x1212 (+ (* 9 (* s r)) ?x1542 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x492) ?x1702 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x706) (* 18 (* x00 r)) ?x502 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1703 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x502 ?x503 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x504 ?x473)))
 (let (($x858 (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1149 (and $x858 (= ?x1703 0) (= ?x1212 0) (= ?x658 0) $x1207 $x1054)))
 (let ((?x143 (* 9 s)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x460 (+ (* (- 24) (* s r)) ?x554 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x572 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x809 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x492) ?x893 ?x919 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x990 (* 36 ?x706) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x527 (+ (* (- 9) (* s r)) ?x539 (* 9 (* r00 s00)) ?x549 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x492) ?x607 (* 18 (* r00 x)) ?x381 (* 6 ?x706) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1739 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x381 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x472))))
 (let (($x713 (and $x858 (= ?x1739 0) (= ?x527 0) (= ?x460 0) $x1207 $x1054)))
 (rewrite (= $x713 $x1149))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x280 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x272 (* 3 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x270 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x262 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x259 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x256 (* 3 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x239 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x238 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x236 (* 3 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x233 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x226 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x220 (+ (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x228 (- (- ?x220 (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215)) (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x229 (- ?x228 (* ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x231 (- (- ?x229 (* 3 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x240 (+ (- ?x231 ?x226) ?x233 (* ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x212 ?x212 s00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215) ?x236 (* 3 ?x212 ?x212 r00 r00 ?x214 ?x215 ?x215 ?x215 ?x215) ?x238 ?x239)))
 (let ((?x245 (- (- ?x240 (* ?x212 ?x212 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x246 (- ?x245 (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x248 (+ ?x246 (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x250 (- ?x248 (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x254 (+ ?x250 (* ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x260 (+ (- (- ?x254 (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) ?x256) ?x259)))
 (let ((?x266 (- (- (- ?x260 (* ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) ?x262) (* 3 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x269 (+ ?x266 (* ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 3 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x274 (- (- ?x269 ?x270) (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- ?x274 ?x272) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x791 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x646 (+ 3 s ?x213)))
 (let ((?x283 (* (- 1) s)))
 (let ((?x663 (+ x ?x283)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x1440 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1742 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1886 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1824 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1571 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646)))
 (let ((?x313 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663)))
 (let ((?x290 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646))))
 (let ((?x359 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1347 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646))))
 (let ((?x1316 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1267 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646))))
 (let ((?x1140 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646)))
 (let ((?x1125 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646))))
 (let ((?x818 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646))))
 (let ((?x860 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663)))
 (let ((?x1596 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646))))
 (let ((?x2004 (+ (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646)) (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646) (* ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) (* (- 1) (* ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646 ?x646 ?x646)) ?x1596 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646)) (* (- 3) (* ?x1386 ?x1386 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) (* (- 3) ?x860) ?x818 (* ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x663) ?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) ?x1125 (* 3 ?x1140) (* (- 1) (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646)) ?x1267 ?x1316 ?x1347 ?x359 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x663 ?x646 ?x646) (* (- 1) (* ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646 ?x646)) ?x290 (* 3 ?x313) (* (- 1) (* s00 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) (* (- 3) ?x1571) ?x1824 (* s00 ?x1386 ?x1386 ?x663 ?x663 ?x663 ?x646 ?x646) (* 3 (* r00 r00 ?x663 ?x663 ?x646 ?x646 ?x646 ?x646)) ?x1886 ?x1742 ?x1440)))
 (let (($x1054 (not (= ?x2004 0))))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1192 (* 108 ?x1349)))
 (let ((?x1092 (* (- 9) s)))
 (let ((?x706 (* r00 r00 s00)))
 (let ((?x1013 (* (- 36) ?x706)))
 (let ((?x137 (* 9 s00)))
 (let ((?x594 (* s00 s00)))
 (let ((?x776 (* 51 ?x594)))
 (let ((?x492 (* r00 r00 s)))
 (let ((?x805 (* 36 ?x492)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x530 (* 16 ?x1187)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1138 (* (- 108) ?x808)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x907 (* (- 432) ?x885)))
 (let ((?x525 (* r00 x00)))
 (let ((?x382 (* 108 ?x525)))
 (let ((?x1200 (+ (* 216 (* r00 s00 x00)) ?x382 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x907 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1138 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x530 (* (- 108) (* x s)) ?x805 ?x776 (* (- 108) (* r00 x)) ?x137 ?x1013 ?x1092 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1192)))
 (let (($x1207 (= ?x1200 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x460 (+ (* (- 24) (* s r)) ?x554 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x572 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x809 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x492) ?x893 ?x919 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x990 (* 36 ?x706) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x527 (+ (* (- 9) (* s r)) ?x539 (* 9 (* r00 s00)) ?x549 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x492) ?x607 (* 18 (* r00 x)) ?x381 (* 6 ?x706) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1739 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x381 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x858 (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x713 (and $x858 (= ?x1739 0) (= ?x527 0) (= ?x460 0) $x1207 $x1054)))
 (let ((?x215 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x272 (* 3 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x270 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x262 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x259 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x256 (* 3 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x239 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x238 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x236 (* 3 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x233 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x226 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x220 (+ (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x228 (- (- ?x220 (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215)) (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x229 (- ?x228 (* ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x231 (- (- ?x229 (* 3 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x240 (+ (- ?x231 ?x226) ?x233 (* ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x212 ?x212 s00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215) ?x236 (* 3 ?x212 ?x212 r00 r00 ?x214 ?x215 ?x215 ?x215 ?x215) ?x238 ?x239)))
 (let ((?x245 (- (- ?x240 (* ?x212 ?x212 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x246 (- ?x245 (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x248 (+ ?x246 (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x250 (- ?x248 (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x254 (+ ?x250 (* ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x260 (+ (- (- ?x254 (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) ?x256) ?x259)))
 (let ((?x266 (- (- (- ?x260 (* ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) ?x262) (* 3 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x269 (+ ?x266 (* ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 3 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x274 (- (- ?x269 ?x270) (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x279 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- ?x274 ?x272) 0))))))
 (rewrite (= $x279 $x713)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x281 (asserted $x280)))
 (let ((@x350 (mp (mp @x281 (quant-intro (proof-bind ?x791) (= $x280 $x1874)) $x1874) (rewrite (= $x1874 $x1874)) $x1874)))
 (let ((@x1281 (mp (mp @x350 (quant-intro (proof-bind ?x774) (= $x1874 $x665)) $x665) (quant-intro (proof-bind ?x870) (= $x665 $x312)) $x312)))
 (let ((@x368 (mp (mp~ @x1281 (sk (~ $x312 $x801)) $x801) (rewrite (= $x801 $x2065)) $x2065)))
 (let ((@x838 (and-elim @x368 $x1257)))
 (let ((@x1999 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1257) $x1749)) @x838 $x1749)))
 (let (($x836 (>= ?x985 0)))
 (let ((@x363 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1257) $x836)) @x838 $x836)))
 (let (($x288 (not (<= ?x712 0))))
 (let (($x903 (>= ?x712 0)))
 (let ((@x887 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x369 $x288 (not $x903))) (and-elim @x368 $x367) (or $x288 (not $x903)))))
 (let ((@x1083 (unit-resolution @x887 (lemma ((_ th-lemma arith) (hypothesis (not $x903)) @x363 @x1999 false) $x903) $x288)))
 ((_ th-lemma arith) @x1083 @x363 @x1999 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        35
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-grobner             2
 :arith-max-min             708
 :arith-nonlinear-bounds    28
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 131
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.46
 :memory                    3.41
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                7575522
 :num-checks                1
 :propagations              12
 :rlimit-count              79316
 :time                      0.06
 :total-time                0.08)
