unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x653 (* (- 1) m!1)))
 (let ((?x1058 (+ (* 6 n!0) ?x653)))
 (let (($x961 (<= ?x1058 (- 6))))
 (let (($x907 (= ?x1058 (- 6))))
 (let ((?x1220 (+ k!2 c!3)))
 (let ((?x1196 (+ m!1 k!2)))
 (let ((?x1211 (+ 6 m!1)))
 (let ((?x1213 (+ 1 n!0)))
 (let ((?x1020 (+ (* 6 (* ?x1213 ?x1213 ?x1213 ?x1213 ?x1220 ?x1220)) (* (- 108) (* m!1 k!2 k!2 c!3)) (* 6 (* n!0 n!0 n!0)) (* (- 108) (* m!1 k!2 k!2 k!2)) (* (- 1) (* ?x1213 ?x1213 ?x1213 ?x1211 ?x1220 ?x1220)) (* 18 n!0) ?x653 (* ?x1211 ?x1211 ?x1196 ?x1196 ?x1196 ?x1220) (* (- 36) (* m!1 m!1 m!1 k!2)) (* (- 36) (* k!2 k!2 k!2 k!2)) (* (- 108) (* m!1 m!1 k!2 k!2)) (* (- 36) (* k!2 k!2 k!2 c!3)) (* 18 (* n!0 n!0)) (* 6 (* k!2 k!2)) (* 6 (* c!3 c!3)) (* 18 (* n!0 c!3 c!3)) (* 36 (* n!0 k!2 c!3)) (* 18 (* n!0 k!2 k!2)) (* 18 (* n!0 n!0 c!3 c!3)) (* (- 6) (* m!1 k!2 k!2 k!2 c!3)) (* 36 (* n!0 n!0 k!2 c!3)) (* (- 6) (* m!1 k!2 k!2 k!2 k!2)) (* (- 6) (* ?x1213 ?x1211 ?x1196 ?x1196 ?x1196 ?x1220)) (* 18 (* n!0 n!0 k!2 k!2)) (* (- 18) (* m!1 m!1 m!1 k!2 c!3)) (* (- 1) (* n!0 n!0 m!1)) (* (- 18) (* m!1 m!1 k!2 k!2 k!2)) (* (- 18) (* m!1 m!1 k!2 k!2 c!3)) (* (- 2) (* n!0 m!1)) (* 6 (* n!0 n!0 n!0 c!3 c!3)) (* 12 (* n!0 n!0 n!0 k!2 c!3)) (* 6 (* n!0 n!0 n!0 k!2 k!2)) (* (- 36) (* m!1 m!1 m!1 c!3)) (* 12 (* k!2 c!3)) (* (- 108) (* m!1 m!1 k!2 c!3)) (* (- 6) (* m!1 m!1 m!1 m!1 k!2)) (* (- 6) (* m!1 m!1 m!1 m!1 c!3)) (* (- 18) (* m!1 m!1 m!1 k!2 k!2)))))
 (let (($x949 (= ?x1020 (- 6))))
 (let (($x118 (not $x949)))
 (let ((?x678 (* (- 1) k!2)))
 (let ((?x188 (+ (* 3 n!0) ?x678 (* 3 (* n!0 n!0)))))
 (let (($x180 (= ?x188 (- 1))))
 (let ((?x679 (+ (* n!0 k!2) (* 2 n!0) ?x678 (* (- 3) c!3))))
 (let (($x591 (= ?x679 (- 1))))
 (let ((?x958 (* 18 c!3)))
 (let ((?x1077 (* k!2 k!2)))
 (let ((?x967 (* (- 1) ?x1077)))
 (let ((?x1084 (* 5 k!2)))
 (let ((?x1082 (* (- 9) n!0)))
 (let ((?x906 (+ (* 9 (* n!0 c!3)) ?x1082 ?x1084 ?x967 ?x958)))
 (let (($x668 (= ?x906 4)))
 (let (($x1161 (and $x907 $x668 $x591 $x180 $x118)))
 (let ((?x1048 (+ c!3 k!2)))
 (let ((?x1393 (+ k!2 m!1)))
 (let ((?x1044 (+ m!1 (* (- 18) n!0) (* (- 6) ?x1077) (* (- 18) (* n!0 n!0)) (* (- 6) (* n!0 n!0 n!0)) (* 6 (* c!3 k!2 k!2 k!2 m!1)) (* 6 (* k!2 k!2 k!2 k!2 m!1)) (* 18 (* c!3 k!2 k!2 m!1 m!1)) (* 18 (* k!2 k!2 k!2 m!1 m!1)) (* 18 (* c!3 k!2 m!1 m!1 m!1)) (* 18 (* k!2 k!2 m!1 m!1 m!1)) (* 6 (* c!3 m!1 m!1 m!1 m!1)) (* 6 (* k!2 m!1 m!1 m!1 m!1)) (* m!1 n!0 n!0) (* 2 (* m!1 n!0)) (* (- 6) (* c!3 c!3 n!0 n!0 n!0)) (* (- 12) (* c!3 k!2 n!0 n!0 n!0)) (* (- 6) (* k!2 k!2 n!0 n!0 n!0)) (* 36 (* c!3 m!1 m!1 m!1)) (* (- 6) (* c!3 c!3)) (* (- 12) (* c!3 k!2)) (* (- 18) (* c!3 c!3 n!0)) (* (- 36) (* c!3 k!2 n!0)) (* (- 18) (* k!2 k!2 n!0)) (* (- 18) (* c!3 c!3 n!0 n!0)) (* (- 36) (* c!3 k!2 n!0 n!0)) (* 6 (* ?x1213 ?x1211 ?x1393 ?x1393 ?x1393 ?x1048)) (* (- 18) (* k!2 k!2 n!0 n!0)) (* (- 1) (* ?x1211 ?x1211 ?x1393 ?x1393 ?x1393 ?x1048)) (* 108 (* k!2 k!2 k!2 m!1)) (* 36 (* k!2 m!1 m!1 m!1)) (* 36 (* k!2 k!2 k!2 k!2)) (* 108 (* c!3 k!2 m!1 m!1)) (* 36 (* c!3 k!2 k!2 k!2)) (* ?x1213 ?x1213 ?x1213 ?x1211 ?x1048 ?x1048) (* 108 (* k!2 k!2 m!1 m!1)) (* (- 6) (* ?x1213 ?x1213 ?x1213 ?x1213 ?x1048 ?x1048)) (* 108 (* c!3 k!2 k!2 m!1)))))
 (let (($x1071 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x964 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x958 ?x1084 ?x1082 ?x967 (* 9 (* c!3 n!0))) 4) $x1071 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x1044 6)))))
 (let (($x701 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x449 (+ 1 n)))
 (let ((?x1463 (* ?x449 ?x449 ?x449 ?x449 ?x69 ?x69)))
 (let ((?x1478 (* (- 6) ?x1463)))
 (let ((?x310 (+ 6 m)))
 (let ((?x1447 (* ?x449 ?x449 ?x449 ?x310 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x1039 (* ?x310 ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1349 (* (- 1) ?x1039)))
 (let ((?x1036 (* ?x449 ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1355 (* 6 ?x1036)))
 (let ((?x840 (* 2 (* m n))))
 (let ((?x824 (* m n n)))
 (let ((?x812 (* 6 (* k m m m m))))
 (let ((?x810 (* 6 (* c m m m m))))
 (let ((?x784 (* 6 (* k k k k m))))
 (let ((?x782 (* 6 (* c k k k m))))
 (let ((?x665 (* (- 6) (* n n n))))
 (let ((?x271 (* n n)))
 (let ((?x672 (* (- 18) ?x271)))
 (let ((?x146 (+ m (* (- 18) n) (* (- 6) (* k k)) ?x672 ?x665 ?x782 ?x784 (* 18 (* c k k m m)) (* 18 (* k k k m m)) (* 18 (* c k m m m)) (* 18 (* k k m m m)) ?x810 ?x812 ?x824 ?x840 (* (- 6) (* c c n n n)) (* (- 12) (* c k n n n)) (* (- 6) (* k k n n n)) (* 36 (* c m m m)) (* (- 6) (* c c)) (* (- 12) (* c k)) (* (- 18) (* c c n)) (* (- 36) (* c k n)) (* (- 18) (* k k n)) (* (- 18) (* c c n n)) (* (- 36) (* c k n n)) ?x1355 (* (- 18) (* k k n n)) ?x1349 (* 108 (* k k k m)) (* 36 (* k m m m)) (* 36 (* k k k k)) (* 108 (* c k m m)) (* 36 (* c k k k)) ?x1447 (* 108 (* k k m m)) ?x1478 (* 108 (* c k k m)))))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 (* c n))) 4)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 $x210 $x262 $x300 (not (= ?x146 6))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1480 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x449 (+ 1 n)))
 (let ((?x1463 (* ?x449 ?x449 ?x449 ?x449 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x310 (+ 6 m)))
 (let ((?x977 (* ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1039 (* ?x310 ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1321 (+ ?x1039 (* (- 6) (* ?x449 ?x310 ?x70 ?x70 ?x70 ?x69)) (* 6 (* ?x449 ?x449 ?x449)) (* 6 (* ?x449 ?x449)) (* (- 6) ?x977) (* (- 1) (* ?x449 ?x449 ?x310)) (* 6 (* ?x449 ?x449 ?x449 ?x69 ?x69)) (* (- 1) (* ?x449 ?x449 ?x449 ?x310 ?x69 ?x69)) (* 6 ?x1463))))
 (let (($x1338 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1133 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x1133 $x1338 (not (= ?x1321 0))))))))))))))))))) :qid k!34))
 ))
 (let ((?x725 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x449 (+ 1 n)))
 (let ((?x1463 (* ?x449 ?x449 ?x449 ?x449 ?x69 ?x69)))
 (let ((?x1478 (* (- 6) ?x1463)))
 (let ((?x310 (+ 6 m)))
 (let ((?x1447 (* ?x449 ?x449 ?x449 ?x310 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x1039 (* ?x310 ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1349 (* (- 1) ?x1039)))
 (let ((?x1036 (* ?x449 ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1355 (* 6 ?x1036)))
 (let ((?x840 (* 2 (* m n))))
 (let ((?x824 (* m n n)))
 (let ((?x812 (* 6 (* k m m m m))))
 (let ((?x810 (* 6 (* c m m m m))))
 (let ((?x784 (* 6 (* k k k k m))))
 (let ((?x782 (* 6 (* c k k k m))))
 (let ((?x665 (* (- 6) (* n n n))))
 (let ((?x271 (* n n)))
 (let ((?x672 (* (- 18) ?x271)))
 (let ((?x146 (+ m (* (- 18) n) (* (- 6) (* k k)) ?x672 ?x665 ?x782 ?x784 (* 18 (* c k k m m)) (* 18 (* k k k m m)) (* 18 (* c k m m m)) (* 18 (* k k m m m)) ?x810 ?x812 ?x824 ?x840 (* (- 6) (* c c n n n)) (* (- 12) (* c k n n n)) (* (- 6) (* k k n n n)) (* 36 (* c m m m)) (* (- 6) (* c c)) (* (- 12) (* c k)) (* (- 18) (* c c n)) (* (- 36) (* c k n)) (* (- 18) (* k k n)) (* (- 18) (* c c n n)) (* (- 36) (* c k n n)) ?x1355 (* (- 18) (* k k n n)) ?x1349 (* 108 (* k k k m)) (* 36 (* k m m m)) (* 36 (* k k k k)) (* 108 (* c k m m)) (* 36 (* c k k k)) ?x1447 (* 108 (* k k m m)) ?x1478 (* 108 (* c k k m)))))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 (* c n))) 4)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x1033 (and $x126 $x210 $x262 $x300 (not (= ?x146 6)))))
 (let ((?x1321 (+ ?x1039 (* (- 6) ?x1036) (* 6 (* ?x449 ?x449 ?x449)) (* 6 (* ?x449 ?x449)) (* (- 6) (* ?x310 ?x70 ?x70 ?x70 ?x69)) (* (- 1) (* ?x449 ?x449 ?x310)) (* 6 (* ?x449 ?x449 ?x449 ?x69 ?x69)) (* (- 1) ?x1447) (* 6 ?x1463))))
 (let (($x1338 (= (+ (* 3 ?x271) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1133 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1322 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x1133 $x1338 (not (= ?x1321 0)))))
 (rewrite (= $x1322 $x1033))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1361 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x449 (+ 1 n)))
 (let ((?x1463 (* ?x449 ?x449 ?x449 ?x449 ?x69 ?x69)))
 (let ((?x1478 (* (- 6) ?x1463)))
 (let ((?x310 (+ 6 m)))
 (let ((?x1447 (* ?x449 ?x449 ?x449 ?x310 ?x69 ?x69)))
 (let ((?x1407 (* ?x449 ?x449 ?x310)))
 (let ((?x70 (+ k m)))
 (let ((?x1036 (* ?x449 ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1355 (* 6 ?x1036)))
 (let ((?x1039 (* ?x310 ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1349 (* (- 1) ?x1039)))
 (let ((?x1484 (+ ?x1349 ?x1355 (* (- 6) (* ?x449 ?x449 ?x449)) (* (- 6) (* ?x449 ?x449)) (* 6 (* ?x310 ?x70 ?x70 ?x70 ?x69)) ?x1407 (* (- 6) (* ?x449 ?x449 ?x449 ?x69 ?x69)) ?x1447 ?x1478)))
 (let (($x1338 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1304 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1231 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 (= ?x1231 (- 4)) $x1304 $x1338 (not (= ?x1484 0)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1455 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x449 (+ 1 n)))
 (let ((?x1463 (* ?x449 ?x449 ?x449 ?x449 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x310 (+ 6 m)))
 (let ((?x977 (* ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1039 (* ?x310 ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1321 (+ ?x1039 (* (- 6) (* ?x449 ?x310 ?x70 ?x70 ?x70 ?x69)) (* 6 (* ?x449 ?x449 ?x449)) (* 6 (* ?x449 ?x449)) (* (- 6) ?x977) (* (- 1) (* ?x449 ?x449 ?x310)) (* 6 (* ?x449 ?x449 ?x449 ?x69 ?x69)) (* (- 1) (* ?x449 ?x449 ?x449 ?x310 ?x69 ?x69)) (* 6 ?x1463))))
 (let (($x1338 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1133 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x1322 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x1133 $x1338 (not (= ?x1321 0)))))
 (let ((?x1478 (* (- 6) ?x1463)))
 (let ((?x1447 (* ?x449 ?x449 ?x449 ?x310 ?x69 ?x69)))
 (let ((?x1407 (* ?x449 ?x449 ?x310)))
 (let ((?x1036 (* ?x449 ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1355 (* 6 ?x1036)))
 (let ((?x1349 (* (- 1) ?x1039)))
 (let ((?x1484 (+ ?x1349 ?x1355 (* (- 6) (* ?x449 ?x449 ?x449)) (* (- 6) (* ?x449 ?x449)) (* 6 ?x977) ?x1407 (* (- 6) (* ?x449 ?x449 ?x449 ?x69 ?x69)) ?x1447 ?x1478)))
 (let (($x1304 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1231 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1344 (and $x126 (= ?x1231 (- 4)) $x1304 $x1338 (not (= ?x1484 0)))))
 (rewrite (= $x1344 $x1322)))))))))))))))))))))))))))))))
 ))
 (let (($x93 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x73 (+ n 1)))
 (let ((?x69 (+ c k)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x75 (+ (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* 6 ?x69 ?x70 ?x70 ?x70 ?x71 ?x73))))
 (let ((?x82 (+ (- (- ?x75 (* 6 ?x73 ?x73 ?x73)) (* 6 ?x73 ?x73)) (* 6 ?x69 ?x70 ?x70 ?x70 ?x71) (* ?x71 ?x73 ?x73))))
 (let ((?x86 (+ (- ?x82 (* 6 ?x69 ?x69 ?x73 ?x73 ?x73)) (* ?x69 ?x69 ?x71 ?x73 ?x73 ?x73))))
 (let (($x91 (or (not (= (- ?x86 (* 6 ?x69 ?x69 ?x73 ?x73 ?x73 ?x73)) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x91)))))))))))))))) :qid k!34))
 ))
 (let ((?x1354 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x449 (+ 1 n)))
 (let ((?x1463 (* ?x449 ?x449 ?x449 ?x449 ?x69 ?x69)))
 (let ((?x1478 (* (- 6) ?x1463)))
 (let ((?x310 (+ 6 m)))
 (let ((?x1447 (* ?x449 ?x449 ?x449 ?x310 ?x69 ?x69)))
 (let ((?x1407 (* ?x449 ?x449 ?x310)))
 (let ((?x70 (+ k m)))
 (let ((?x1036 (* ?x449 ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1355 (* 6 ?x1036)))
 (let ((?x1039 (* ?x310 ?x310 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1349 (* (- 1) ?x1039)))
 (let ((?x1484 (+ ?x1349 ?x1355 (* (- 6) (* ?x449 ?x449 ?x449)) (* (- 6) (* ?x449 ?x449)) (* 6 (* ?x310 ?x70 ?x70 ?x70 ?x69)) ?x1407 (* (- 6) (* ?x449 ?x449 ?x449 ?x69 ?x69)) ?x1447 ?x1478)))
 (let (($x1338 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1304 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1231 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x1344 (and $x126 (= ?x1231 (- 4)) $x1304 $x1338 (not (= ?x1484 0)))))
 (let ((?x73 (+ n 1)))
 (let ((?x75 (+ (* (- 1) ?x69 ?x70 ?x70 ?x70 (+ m 6) (+ m 6)) (* 6 ?x69 ?x70 ?x70 ?x70 (+ m 6) ?x73))))
 (let ((?x82 (+ (- (- ?x75 (* 6 ?x73 ?x73 ?x73)) (* 6 ?x73 ?x73)) (* 6 ?x69 ?x70 ?x70 ?x70 (+ m 6)) (* (+ m 6) ?x73 ?x73))))
 (let ((?x86 (+ (- ?x82 (* 6 ?x69 ?x69 ?x73 ?x73 ?x73)) (* ?x69 ?x69 (+ m 6) ?x73 ?x73 ?x73))))
 (let (($x91 (or (not (= (- ?x86 (* 6 ?x69 ?x69 ?x73 ?x73 ?x73 ?x73)) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x92 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x91)))
 (rewrite (= $x92 $x1344))))))))))))))))))))))))))))))))))
 ))
 (let ((@x94 (asserted $x93)))
 (let ((@x619 (mp (mp @x94 (quant-intro (proof-bind ?x1354) (= $x93 $x1361)) $x1361) (rewrite (= $x1361 $x1361)) $x1361)))
 (let ((@x1288 (mp (mp @x619 (quant-intro (proof-bind ?x1455) (= $x1361 $x1480)) $x1480) (quant-intro (proof-bind ?x725) (= $x1480 $x701)) $x701)))
 (let ((@x116 (mp (mp~ @x1288 (sk (~ $x701 $x964)) $x964) (rewrite (= $x964 $x1161)) $x1161)))
 (let ((@x727 (and-elim @x116 $x907)))
 (let ((@x1169 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x907) $x961)) @x727 $x961)))
 (let (($x669 (>= ?x1058 (- 6))))
 (let ((@x885 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x907) $x669)) @x727 $x669)))
 (let (($x904 (<= ?x906 4)))
 (let ((@x684 (and-elim @x116 $x668)))
 (let ((@x1060 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x668) $x904)) @x684 $x904)))
 (let (($x680 (>= ?x906 4)))
 (let ((@x950 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x668) $x680)) @x684 $x680)))
 (let (($x686 (<= ?x679 (- 1))))
 (let ((@x687 (and-elim @x116 $x591)))
 (let ((@x637 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x591) $x686)) @x687 $x686)))
 (let (($x675 (>= ?x679 (- 1))))
 (let ((@x667 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x591) $x675)) @x687 $x675)))
 (let (($x676 (<= ?x188 (- 1))))
 (let ((@x681 (and-elim @x116 $x180)))
 (let ((@x663 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x180) $x676)) @x681 $x676)))
 (let (($x1170 (>= ?x188 (- 1))))
 (let ((@x1274 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x180) $x1170)) @x681 $x1170)))
 (let (($x1225 (not (<= ?x1020 (- 6)))))
 (let (($x1195 (>= ?x1020 (- 6))))
 (let ((@x670 ((_ th-lemma arith) (hypothesis (not $x1195)) @x1274 @x663 @x885 @x1169 @x1274 @x663 @x1274 @x663 @x667 @x637 @x1274 @x663 @x667 @x637 @x1274 @x663 @x885 @x1169 @x667 @x637 @x950 @x1060 @x885 @x1169 @x885 @x1169 false)))
 (let ((@x655 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x949 $x1225 (not $x1195))) (and-elim @x116 $x118) (or $x1225 (not $x1195)))))
 ((_ th-lemma arith) (unit-resolution @x655 (lemma @x670 $x1195) $x1225) @x1274 @x663 @x885 @x1169 @x1274 @x663 @x1274 @x663 @x667 @x637 @x1274 @x663 @x667 @x637 @x1274 @x663 @x885 @x1169 @x667 @x637 @x950 @x1060 @x885 @x1169 @x885 @x1169 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        24
 :arith-assert-upper        16
 :arith-branch-var          2
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           11
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             346
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              11
 :arith-row-summations      19
 :arith-tableau-max-columns 69
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 5
 :del-clause                16
 :final-checks              8
 :max-memory                3.84
 :memory                    3.28
 :mk-bool-var               25
 :mk-clause                 16
 :num-allocs                1469472
 :num-checks                1
 :propagations              10
 :rlimit-count              10927
 :time                      0.01
 :total-time                0.02)
