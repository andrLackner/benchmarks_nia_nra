unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1146 (* (- 1) r!1)))
 (let ((?x1225 (* r!1 r!1)))
 (let ((?x36 (* r00 r00)))
 (let ((?x1777 (* (- 1) ?x36)))
 (let ((?x1762 (* (- 2) x00)))
 (let ((?x1340 (+ r00 ?x1762 ?x1777 ?x1225 (* 2 x!0) ?x1146)))
 (let (($x1887 (<= ?x1340 0)))
 (let (($x1341 (= ?x1340 0)))
 (let ((?x1785 (+ x!0 ?x1146)))
 (let ((?x1148 (+ 1 r!1)))
 (let ((?x1352 (* 2 (* x!0 x!0 x!0))))
 (let ((?x1281 (* (- 1) (* r!1 r!1 r!1))))
 (let ((?x2273 (* 3 ?x1225)))
 (let ((?x1131 (* (- 1) (* r!1 r!1 r!1 r!1 r!1))))
 (let ((?x1119 (* (- 1) (* r!1 r!1 r!1 r!1))))
 (let ((?x1740 (+ (* 2 (* x00 x!0 x!0 x!0)) ?x1119 ?x1131 (* 6 (* x00 x!0 x!0 x!0 r!1 r!1)) (* 6 (* x00 x!0 x!0 x!0 r!1)) ?x2273 ?x1281 ?x1352 (* 3 (* r00 r!1 r!1 r!1 r!1 r!1)) (* (- 6) (* x!0 r!1)) (* 2 (* r00 r00 r!1 r!1)) (* (- 2) (* r00 x!0 r!1)) (* (- 5) (* x!0 x!0 r!1)) (* (- 18) (* x00 x!0 x!0 r!1 r!1 r!1)) (* x!0 x!0 r!1 r!1) (* (- 9) (* r00 r00 x!0 x!0 r!1 r!1)) (* (- 9) (* r00 r00 x!0 x!0 r!1 r!1 r!1)) (* (- 18) (* x00 x!0 x!0 r!1 r!1)) (* (- 6) (* x00 x!0 x!0 r!1 r!1 r!1 r!1)) (* (- 3) (* r00 x!0 r!1 r!1 r!1 r!1 r!1)) (* ?x1148 ?x1148 ?x1148 ?x1148 ?x1785 ?x1785 ?x1785) (* 9 (* r00 x!0 x!0 r!1 r!1 r!1)) (* 3 (* r00 x!0 x!0 r!1 r!1 r!1 r!1)) (* 4 (* x00 x!0 r!1)) (* (- 1) (* r00 x!0 x!0 x!0)) (* r00 x!0 x!0) (* (- 1) (* r00 r00 x!0 x!0)) (* 2 (* r00 r00 x!0 r!1)) (* 3 (* r00 r00 r!1)) (* (- 3) (* r00 x!0 x!0 x!0 r!1 r!1)) (* 18 (* x00 x!0 r!1 r!1 r!1)) (* (- 3) (* r00 r00 r!1 r!1 r!1 r!1)) (* (- 3) (* r00 r00 r!1 r!1 r!1 r!1 r!1)) (* (- 6) (* x00 r!1 r!1 r!1 r!1)) (* (- 1) (* r00 r00 r!1 r!1 r!1 r!1 r!1 r!1)) (* 3 (* r00 r00 x!0 r!1 r!1)) (* 9 (* r00 r00 x!0 r!1 r!1 r!1)) (* (- 3) (* r00 x!0 x!0 x!0 r!1)) (* (- 1) (* r00 x!0 x!0 x!0 r!1 r!1 r!1)) (* (- 6) (* x00 r!1 r!1 r!1 r!1 r!1)) (* 9 (* r00 r00 x!0 r!1 r!1 r!1 r!1)) (* (- 2) (* x00 r!1 r!1 r!1 r!1 r!1 r!1)) (* 3 (* r00 r00 x!0 r!1 r!1 r!1 r!1 r!1)) (* (- 3) (* r00 r00 x!0 x!0 r!1)) (* (- 2) (* x!0 r!1 r!1)) (* 6 (* x00 x!0 r!1 r!1 r!1 r!1 r!1)) (* (- 3) (* r00 r00 x!0 x!0 r!1 r!1 r!1 r!1)) (* (- 6) (* x00 x!0 x!0 r!1)) (* 18 (* x00 x!0 r!1 r!1 r!1 r!1)) (* r00 r00 x!0 x!0 x!0) (* 3 (* r00 r00 x!0 x!0 x!0 r!1)) (* 3 (* r00 r00 x!0 x!0 x!0 r!1 r!1)) (* r00 r00 x!0 x!0 x!0 r!1 r!1 r!1) (* (- 3) (* r00 x!0 r!1 r!1)) (* 3 (* r00 x!0 x!0 r!1)) (* (- 9) (* r00 x!0 r!1 r!1 r!1)) (* (- 9) (* r00 x!0 r!1 r!1 r!1 r!1)) (* 9 (* r00 x!0 x!0 r!1 r!1)) (* 4 (* x00 r!1 r!1)) (* 6 (* x00 r!1)) (* (- 1) (* ?x1148 ?x1148 ?x1148 ?x1148 ?x1148 ?x1785 ?x1785 ?x1785)) (* (- 2) (* ?x1148 ?x1148 ?x1148 ?x1785 ?x1785 ?x1785 ?x1785)) (* 6 (* x00 x!0 r!1 r!1)) (* r00 r!1 r!1 r!1 r!1 r!1 r!1) (* (- 4) (* x!0 r!1 r!1 r!1)) (* (- 3) (* r00 r!1)) (* 3 (* r00 r!1 r!1 r!1 r!1)) (* (- 2) (* r00 r!1 r!1)) (* 2 (* x00 x!0 x!0 x!0 r!1 r!1 r!1)) (* (- 2) (* x00 x!0 x!0)))))
 (let (($x2090 (= ?x1740 0)))
 (let (($x2482 (not $x2090)))
 (let (($x2089 (and $x1341 $x2482)))
 (let ((?x1343 (+ ?x1146 x!0)))
 (let ((?x2122 (+ ?x2273 (* 2 (* x!0 x!0 x!0 x00)) (* 6 (* r!1 x!0 x!0 x!0 x00)) (* 6 (* r!1 r!1 x!0 x!0 x!0 x00)) (* 2 (* r!1 r!1 r!1 x!0 x!0 x!0 x00)) (* (- 6) (* r!1 x!0)) (* (- 2) (* r!1 r!1 x!0)) (* (- 4) (* r!1 r!1 r!1 x!0)) (* (- 3) (* r!1 r00)) (* (- 2) (* r!1 r!1 r00)) (* (- 2) (* x!0 x!0 x00)) (* 3 (* r!1 r!1 r!1 r!1 r00)) (* 3 (* r!1 r!1 r!1 r!1 r!1 r00)) (* r!1 r!1 r!1 r!1 r!1 r!1 r00) (* (- 3) (* r!1 r!1 x!0 r00)) (* (- 9) (* r!1 r!1 r!1 x!0 r00)) (* (- 9) (* r!1 r!1 r!1 r!1 x!0 r00)) (* (- 3) (* r!1 r!1 r!1 r!1 r!1 x!0 r00)) (* 3 (* r!1 x!0 x!0 r00)) (* 9 (* r!1 r!1 x!0 x!0 r00)) (* 9 (* r!1 r!1 r!1 x!0 x!0 r00)) (* 3 (* r!1 r!1 r!1 r!1 x!0 x!0 r00)) (* 4 (* r!1 x!0 x00)) (* (- 1) (* x!0 x!0 x!0 r00)) (* (- 3) (* r!1 x!0 x!0 x!0 r00)) (* (- 3) (* r!1 r!1 x!0 x!0 x!0 r00)) (* (- 1) (* r!1 r!1 r!1 x!0 x!0 x!0 r00)) ?x1281 ?x1119 ?x1131 (* (- 1) (* ?x1148 ?x1148 ?x1148 ?x1148 ?x1148 ?x1343 ?x1343 ?x1343)) (* ?x1148 ?x1148 ?x1148 ?x1148 ?x1343 ?x1343 ?x1343) (* r!1 r!1 x!0 x!0) (* (- 5) (* r!1 x!0 x!0)) ?x1352 (* 3 (* r!1 r00 r00)) (* 2 (* r!1 r!1 r00 r00)) (* 2 (* r!1 x!0 r00 r00)) (* (- 1) (* x!0 x!0 r00 r00)) (* (- 2) (* r!1 x!0 r00)) (* x!0 x!0 r00) (* 18 (* r!1 r!1 r!1 x!0 x00)) (* (- 18) (* r!1 r!1 r!1 x!0 x!0 x00)) (* (- 3) (* r!1 r!1 r!1 r!1 r00 r00)) (* (- 3) (* r!1 r!1 r!1 r!1 r!1 r00 r00)) (* (- 6) (* r!1 r!1 r!1 r!1 x00)) (* (- 1) (* r!1 r!1 r!1 r!1 r!1 r!1 r00 r00)) (* 3 (* r!1 r!1 x!0 r00 r00)) (* 9 (* r!1 r!1 r!1 x!0 r00 r00)) (* (- 6) (* r!1 r!1 r!1 r!1 r!1 x00)) (* 9 (* r!1 r!1 r!1 r!1 x!0 r00 r00)) (* (- 2) (* r!1 r!1 r!1 r!1 r!1 r!1 x00)) (* 3 (* r!1 r!1 r!1 r!1 r!1 x!0 r00 r00)) (* 6 (* r!1 r!1 x!0 x00)) (* 18 (* r!1 r!1 r!1 r!1 x!0 x00)) (* (- 3) (* r!1 x!0 x!0 r00 r00)) (* (- 9) (* r!1 r!1 x!0 x!0 r00 r00)) (* 6 (* r!1 r!1 r!1 r!1 r!1 x!0 x00)) (* (- 9) (* r!1 r!1 r!1 x!0 x!0 r00 r00)) (* (- 3) (* r!1 r!1 r!1 r!1 x!0 x!0 r00 r00)) (* (- 6) (* r!1 x!0 x!0 x00)) (* (- 18) (* r!1 r!1 x!0 x!0 x00)) (* (- 6) (* r!1 r!1 r!1 r!1 x!0 x!0 x00)) (* x!0 x!0 x!0 r00 r00) (* 3 (* r!1 x!0 x!0 x!0 r00 r00)) (* 3 (* r!1 r!1 x!0 x!0 x!0 r00 r00)) (* r!1 r!1 r!1 x!0 x!0 x!0 r00 r00) (* 4 (* r!1 r!1 x00)) (* 6 (* r!1 x00)) (* (- 2) (* ?x1148 ?x1148 ?x1148 ?x1343 ?x1343 ?x1343 ?x1343)))))
 (let ((?x35 (* 2 x00)))
 (let ((?x139 (* (- 1) r00)))
 (let (($x2641 (and (= (+ r!1 (* (- 2) x!0) ?x139 (* (- 1) ?x1225) ?x35 ?x36) 0) (not (= ?x2122 0)))))
 (let (($x2785 (exists ((r Int) (x Int) )(! (let ((?x89 (* (- 1) r)))
 (let ((?x155 (+ ?x89 x)))
 (let ((?x149 (+ 1 r)))
 (let ((?x2120 (* r r r x x x r00 r00)))
 (let ((?x2094 (* x x x r00 r00)))
 (let ((?x1634 (* x x r00)))
 (let ((?x1244 (* r r x x)))
 (let ((?x1205 (* ?x149 ?x149 ?x149 ?x149 ?x155 ?x155 ?x155)))
 (let ((?x594 (* r r r r r r r00)))
 (let ((?x1328 (* (- 2) (* r r x))))
 (let ((?x30 (* r r)))
 (let ((?x1104 (* 3 ?x30)))
 (let ((?x2778 (+ ?x1104 (* 2 (* x x x x00)) (* 6 (* r x x x x00)) (* 6 (* r r x x x x00)) (* 2 (* r r r x x x x00)) (* (- 6) (* r x)) ?x1328 (* (- 4) (* r r r x)) (* (- 3) (* r r00)) (* (- 2) (* r r r00)) (* (- 2) (* x x x00)) (* 3 (* r r r r r00)) (* 3 (* r r r r r r00)) ?x594 (* (- 3) (* r r x r00)) (* (- 9) (* r r r x r00)) (* (- 9) (* r r r r x r00)) (* (- 3) (* r r r r r x r00)) (* 3 (* r x x r00)) (* 9 (* r r x x r00)) (* 9 (* r r r x x r00)) (* 3 (* r r r r x x r00)) (* 4 (* r x x00)) (* (- 1) (* x x x r00)) (* (- 3) (* r x x x r00)) (* (- 3) (* r r x x x r00)) (* (- 1) (* r r r x x x r00)) (* (- 1) (* r r r)) (* (- 1) (* r r r r)) (* (- 1) (* r r r r r)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x155 ?x155 ?x155)) ?x1205 ?x1244 (* (- 5) (* r x x)) (* 2 (* x x x)) (* 3 (* r r00 r00)) (* 2 (* r r r00 r00)) (* 2 (* r x r00 r00)) (* (- 1) (* x x r00 r00)) (* (- 2) (* r x r00)) ?x1634 (* 18 (* r r r x x00)) (* (- 18) (* r r r x x x00)) (* (- 3) (* r r r r r00 r00)) (* (- 3) (* r r r r r r00 r00)) (* (- 6) (* r r r r x00)) (* (- 1) (* r r r r r r r00 r00)) (* 3 (* r r x r00 r00)) (* 9 (* r r r x r00 r00)) (* (- 6) (* r r r r r x00)) (* 9 (* r r r r x r00 r00)) (* (- 2) (* r r r r r r x00)) (* 3 (* r r r r r x r00 r00)) (* 6 (* r r x x00)) (* 18 (* r r r r x x00)) (* (- 3) (* r x x r00 r00)) (* (- 9) (* r r x x r00 r00)) (* 6 (* r r r r r x x00)) (* (- 9) (* r r r x x r00 r00)) (* (- 3) (* r r r r x x r00 r00)) (* (- 6) (* r x x x00)) (* (- 18) (* r r x x x00)) (* (- 6) (* r r r r x x x00)) ?x2094 (* 3 (* r x x x r00 r00)) (* 3 (* r r x x x r00 r00)) ?x2120 (* 4 (* r r x00)) (* 6 (* r x00)) (* (- 2) (* ?x149 ?x149 ?x149 ?x155 ?x155 ?x155 ?x155)))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x140 (* (- 1) ?x30)))
 (let ((?x139 (* (- 1) r00)))
 (let ((?x138 (* (- 2) x)))
 (let (($x142 (= (+ r ?x138 ?x139 ?x140 ?x35 ?x36) 0)))
 (and $x142 (not (= ?x2778 0)))))))))))))))))))))) :qid k!26))
 ))
 (let (($x2050 (exists ((r Int) (x Int) )(! (let ((?x89 (* (- 1) r)))
 (let ((?x1756 (+ x ?x89)))
 (let ((?x149 (+ 1 r)))
 (let ((?x2018 (* r00 r00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x2000 (* r00 ?x1756 ?x1756)))
 (let ((?x36 (* r00 r00)))
 (let ((?x1777 (* (- 1) ?x36)))
 (let ((?x1762 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x1912 (* r00 r00 ?x149 ?x149 ?x149)))
 (let ((?x1868 (* ?x149 ?x149 ?x1756 ?x1756)))
 (let ((?x1853 (* ?x149 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x1820 (* ?x149 ?x149 ?x149 ?x149)))
 (let ((?x1804 (* ?x149 ?x149)))
 (let ((?x1963 (+ (* 2 (* x00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) (* (- 2) (* ?x149 ?x149 ?x149 ?x1756)) (* (- 1) (* r00 ?x149 ?x149 ?x149)) (* (- 2) (* x00 ?x1756 ?x1756)) ?x1804 (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149)) ?x1820 (* (- 2) (* ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756 ?x1756)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) ?x1853 ?x1868 (* 2 (* ?x1756 ?x1756 ?x1756)) ?x1912 (* (- 1) (* ?x149 ?x1756 ?x1756)) (* (- 3) r) r00 ?x32 (* (- 1) (* r00 r00 ?x1756 ?x1756)) ?x1762 ?x1777 ?x2000 ?x2018 (* 2 (* x00 ?x149 ?x149 ?x149)))))
 (let ((?x35 (* 2 x00)))
 (let ((?x138 (* (- 2) x)))
 (let ((?x30 (* r r)))
 (let ((?x140 (* (- 1) ?x30)))
 (let ((?x139 (* (- 1) r00)))
 (and (= (+ r ?x139 ?x140 ?x138 ?x35 ?x36) 0) (not (= ?x1963 1))))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x2787 (lambda ((r Int) (x Int) )(let ((?x89 (* (- 1) r)))
 (let ((?x155 (+ ?x89 x)))
 (let ((?x149 (+ 1 r)))
 (let ((?x2120 (* r r r x x x r00 r00)))
 (let ((?x2094 (* x x x r00 r00)))
 (let ((?x1634 (* x x r00)))
 (let ((?x1244 (* r r x x)))
 (let ((?x1205 (* ?x149 ?x149 ?x149 ?x149 ?x155 ?x155 ?x155)))
 (let ((?x594 (* r r r r r r r00)))
 (let ((?x1328 (* (- 2) (* r r x))))
 (let ((?x30 (* r r)))
 (let ((?x1104 (* 3 ?x30)))
 (let ((?x2778 (+ ?x1104 (* 2 (* x x x x00)) (* 6 (* r x x x x00)) (* 6 (* r r x x x x00)) (* 2 (* r r r x x x x00)) (* (- 6) (* r x)) ?x1328 (* (- 4) (* r r r x)) (* (- 3) (* r r00)) (* (- 2) (* r r r00)) (* (- 2) (* x x x00)) (* 3 (* r r r r r00)) (* 3 (* r r r r r r00)) ?x594 (* (- 3) (* r r x r00)) (* (- 9) (* r r r x r00)) (* (- 9) (* r r r r x r00)) (* (- 3) (* r r r r r x r00)) (* 3 (* r x x r00)) (* 9 (* r r x x r00)) (* 9 (* r r r x x r00)) (* 3 (* r r r r x x r00)) (* 4 (* r x x00)) (* (- 1) (* x x x r00)) (* (- 3) (* r x x x r00)) (* (- 3) (* r r x x x r00)) (* (- 1) (* r r r x x x r00)) (* (- 1) (* r r r)) (* (- 1) (* r r r r)) (* (- 1) (* r r r r r)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x155 ?x155 ?x155)) ?x1205 ?x1244 (* (- 5) (* r x x)) (* 2 (* x x x)) (* 3 (* r r00 r00)) (* 2 (* r r r00 r00)) (* 2 (* r x r00 r00)) (* (- 1) (* x x r00 r00)) (* (- 2) (* r x r00)) ?x1634 (* 18 (* r r r x x00)) (* (- 18) (* r r r x x x00)) (* (- 3) (* r r r r r00 r00)) (* (- 3) (* r r r r r r00 r00)) (* (- 6) (* r r r r x00)) (* (- 1) (* r r r r r r r00 r00)) (* 3 (* r r x r00 r00)) (* 9 (* r r r x r00 r00)) (* (- 6) (* r r r r r x00)) (* 9 (* r r r r x r00 r00)) (* (- 2) (* r r r r r r x00)) (* 3 (* r r r r r x r00 r00)) (* 6 (* r r x x00)) (* 18 (* r r r r x x00)) (* (- 3) (* r x x r00 r00)) (* (- 9) (* r r x x r00 r00)) (* 6 (* r r r r r x x00)) (* (- 9) (* r r r x x r00 r00)) (* (- 3) (* r r r r x x r00 r00)) (* (- 6) (* r x x x00)) (* (- 18) (* r r x x x00)) (* (- 6) (* r r r r x x x00)) ?x2094 (* 3 (* r x x x r00 r00)) (* 3 (* r r x x x r00 r00)) ?x2120 (* 4 (* r r x00)) (* 6 (* r x00)) (* (- 2) (* ?x149 ?x149 ?x149 ?x155 ?x155 ?x155 ?x155)))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x140 (* (- 1) ?x30)))
 (let ((?x139 (* (- 1) r00)))
 (let ((?x138 (* (- 2) x)))
 (let (($x142 (= (+ r ?x138 ?x139 ?x140 ?x35 ?x36) 0)))
 (let (($x488 (and $x142 (not (= ?x2778 0)))))
 (let ((?x1756 (+ x ?x89)))
 (let ((?x2018 (* r00 r00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x2000 (* r00 ?x1756 ?x1756)))
 (let ((?x1777 (* (- 1) ?x36)))
 (let ((?x1762 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x1912 (* r00 r00 ?x149 ?x149 ?x149)))
 (let ((?x1868 (* ?x149 ?x149 ?x1756 ?x1756)))
 (let ((?x1853 (* ?x149 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x1820 (* ?x149 ?x149 ?x149 ?x149)))
 (let ((?x1804 (* ?x149 ?x149)))
 (let ((?x1963 (+ (* 2 (* x00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) (* (- 2) (* ?x149 ?x149 ?x149 ?x1756)) (* (- 1) (* r00 ?x149 ?x149 ?x149)) (* (- 2) (* x00 ?x1756 ?x1756)) ?x1804 (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149)) ?x1820 (* (- 2) (* ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756 ?x1756)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) ?x1853 ?x1868 (* 2 (* ?x1756 ?x1756 ?x1756)) ?x1912 (* (- 1) (* ?x149 ?x1756 ?x1756)) (* (- 3) r) r00 ?x32 (* (- 1) (* r00 r00 ?x1756 ?x1756)) ?x1762 ?x1777 ?x2000 ?x2018 (* 2 (* x00 ?x149 ?x149 ?x149)))))
 (let (($x1847 (and (= (+ r ?x139 ?x140 ?x138 ?x35 ?x36) 0) (not (= ?x1963 1)))))
 (rewrite (= $x1847 $x488))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2069 (exists ((r Int) (x Int) )(! (let ((?x89 (* (- 1) r)))
 (let ((?x1756 (+ x ?x89)))
 (let ((?x149 (+ 1 r)))
 (let ((?x2018 (* r00 r00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x1991 (* r00 r00 ?x1756 ?x1756)))
 (let ((?x138 (* (- 2) x)))
 (let ((?x139 (* (- 1) r00)))
 (let ((?x1928 (* ?x149 ?x1756 ?x1756)))
 (let ((?x1698 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x1773 (* ?x149 ?x149 ?x149 ?x149 ?x149)))
 (let ((?x1793 (* r00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x1691 (* r00 ?x149 ?x149 ?x149)))
 (let ((?x2062 (+ (* (- 2) (* x00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) (* 2 (* ?x149 ?x149 ?x149 ?x1756)) ?x1691 (* 2 (* x00 ?x1756 ?x1756)) (* (- 1) (* ?x149 ?x149)) ?x1793 ?x1773 (* (- 1) (* ?x149 ?x149 ?x149 ?x149)) (* 2 (* ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756 ?x1756)) ?x1698 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) (* (- 1) (* ?x149 ?x149 ?x1756 ?x1756)) (* (- 2) (* ?x1756 ?x1756 ?x1756)) (* (- 1) (* r00 r00 ?x149 ?x149 ?x149)) ?x1928 (* 3 r) ?x139 ?x138 ?x1991 ?x35 ?x36 (* (- 1) (* r00 ?x1756 ?x1756)) (* (- 1) ?x2018) (* (- 2) (* x00 ?x149 ?x149 ?x149)))))
 (let ((?x1777 (* (- 1) ?x36)))
 (let ((?x1762 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (and (= (+ ?x89 r00 ?x30 ?x32 ?x1762 ?x1777) 0) (not (= ?x2062 (- 1))))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x2030 (lambda ((r Int) (x Int) )(let ((?x89 (* (- 1) r)))
 (let ((?x1756 (+ x ?x89)))
 (let ((?x149 (+ 1 r)))
 (let ((?x2018 (* r00 r00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x2000 (* r00 ?x1756 ?x1756)))
 (let ((?x36 (* r00 r00)))
 (let ((?x1777 (* (- 1) ?x36)))
 (let ((?x1762 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x1912 (* r00 r00 ?x149 ?x149 ?x149)))
 (let ((?x1868 (* ?x149 ?x149 ?x1756 ?x1756)))
 (let ((?x1853 (* ?x149 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x1820 (* ?x149 ?x149 ?x149 ?x149)))
 (let ((?x1804 (* ?x149 ?x149)))
 (let ((?x1963 (+ (* 2 (* x00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) (* (- 2) (* ?x149 ?x149 ?x149 ?x1756)) (* (- 1) (* r00 ?x149 ?x149 ?x149)) (* (- 2) (* x00 ?x1756 ?x1756)) ?x1804 (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149)) ?x1820 (* (- 2) (* ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756 ?x1756)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) ?x1853 ?x1868 (* 2 (* ?x1756 ?x1756 ?x1756)) ?x1912 (* (- 1) (* ?x149 ?x1756 ?x1756)) (* (- 3) r) r00 ?x32 (* (- 1) (* r00 r00 ?x1756 ?x1756)) ?x1762 ?x1777 ?x2000 ?x2018 (* 2 (* x00 ?x149 ?x149 ?x149)))))
 (let ((?x35 (* 2 x00)))
 (let ((?x138 (* (- 2) x)))
 (let ((?x30 (* r r)))
 (let ((?x140 (* (- 1) ?x30)))
 (let ((?x139 (* (- 1) r00)))
 (let (($x1847 (and (= (+ r ?x139 ?x140 ?x138 ?x35 ?x36) 0) (not (= ?x1963 1)))))
 (let ((?x1991 (* r00 r00 ?x1756 ?x1756)))
 (let ((?x1928 (* ?x149 ?x1756 ?x1756)))
 (let ((?x1698 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x1773 (* ?x149 ?x149 ?x149 ?x149 ?x149)))
 (let ((?x1793 (* r00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x1691 (* r00 ?x149 ?x149 ?x149)))
 (let ((?x2062 (+ (* (- 2) (* x00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) (* 2 (* ?x149 ?x149 ?x149 ?x1756)) ?x1691 (* 2 (* x00 ?x1756 ?x1756)) (* (- 1) ?x1804) ?x1793 ?x1773 (* (- 1) ?x1820) (* 2 (* ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756 ?x1756)) ?x1698 (* (- 1) ?x1853) (* (- 1) ?x1868) (* (- 2) (* ?x1756 ?x1756 ?x1756)) (* (- 1) ?x1912) ?x1928 (* 3 r) ?x139 ?x138 ?x1991 ?x35 ?x36 (* (- 1) ?x2000) (* (- 1) ?x2018) (* (- 2) (* x00 ?x149 ?x149 ?x149)))))
 (let (($x1795 (and (= (+ ?x89 r00 ?x30 ?x32 ?x1762 ?x1777) 0) (not (= ?x2062 (- 1))))))
 (rewrite (= $x1795 $x1847))))))))))))))))))))))))))))))))
 ))
 (let (($x84 (exists ((r Int) (x Int) )(! (let ((?x43 (- x r)))
 (let ((?x42 (+ r 1)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x48 (+ (* (- 2) ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 x00) (* 2 ?x42 ?x42 ?x42 ?x43) (* ?x42 ?x42 ?x42 r00) (* 2 ?x43 ?x43 x00))))
 (let ((?x53 (+ (- ?x48 (* ?x42 ?x42)) (* ?x42 ?x42 ?x42 r00 ?x43 ?x43 ?x43) (* ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x58 (+ (- ?x53 (* ?x42 ?x42 ?x42 ?x42)) (* 2 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43) (* ?x42 ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43))))
 (let ((?x64 (- (- ?x58 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43)) (* ?x42 ?x42 ?x43 ?x43))))
 (let ((?x66 (- (- ?x64 (* 2 ?x43 ?x43 ?x43)) (* ?x42 ?x42 ?x42 r00 r00))))
 (let ((?x71 (- (- (+ ?x66 (* ?x42 ?x43 ?x43) r 1) r00) (* 2 ?x43))))
 (let ((?x77 (- (+ ?x71 (* r00 r00 ?x43 ?x43) ?x35 ?x36) (* r00 ?x43 ?x43))))
 (let ((?x79 (- (- ?x77 (* ?x42 ?x42 ?x42 r00 r00 ?x43 ?x43 ?x43)) (* 2 ?x42 ?x42 ?x42 x00))))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 (* r r) (* 2 x)) ?x35) ?x36)))
 (and (= ?x38 0) (or (not (= ?x79 0))))))))))))))))) :qid k!26))
 ))
 (let ((?x2073 (lambda ((r Int) (x Int) )(let ((?x89 (* (- 1) r)))
 (let ((?x1756 (+ x ?x89)))
 (let ((?x149 (+ 1 r)))
 (let ((?x2018 (* r00 r00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x1991 (* r00 r00 ?x1756 ?x1756)))
 (let ((?x138 (* (- 2) x)))
 (let ((?x139 (* (- 1) r00)))
 (let ((?x1928 (* ?x149 ?x1756 ?x1756)))
 (let ((?x1698 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x1773 (* ?x149 ?x149 ?x149 ?x149 ?x149)))
 (let ((?x1793 (* r00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)))
 (let ((?x1691 (* r00 ?x149 ?x149 ?x149)))
 (let ((?x2062 (+ (* (- 2) (* x00 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) (* 2 (* ?x149 ?x149 ?x149 ?x1756)) ?x1691 (* 2 (* x00 ?x1756 ?x1756)) (* (- 1) (* ?x149 ?x149)) ?x1793 ?x1773 (* (- 1) (* ?x149 ?x149 ?x149 ?x149)) (* 2 (* ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756 ?x1756)) ?x1698 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x1756 ?x1756 ?x1756)) (* (- 1) (* ?x149 ?x149 ?x1756 ?x1756)) (* (- 2) (* ?x1756 ?x1756 ?x1756)) (* (- 1) (* r00 r00 ?x149 ?x149 ?x149)) ?x1928 (* 3 r) ?x139 ?x138 ?x1991 ?x35 ?x36 (* (- 1) (* r00 ?x1756 ?x1756)) (* (- 1) ?x2018) (* (- 2) (* x00 ?x149 ?x149 ?x149)))))
 (let ((?x1777 (* (- 1) ?x36)))
 (let ((?x1762 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (let (($x1795 (and (= (+ ?x89 r00 ?x30 ?x32 ?x1762 ?x1777) 0) (not (= ?x2062 (- 1))))))
 (let ((?x43 (- x r)))
 (let ((?x42 (+ r 1)))
 (let ((?x48 (+ (* (- 2) ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 x00) (* 2 ?x42 ?x42 ?x42 ?x43) (* ?x42 ?x42 ?x42 r00) (* 2 ?x43 ?x43 x00))))
 (let ((?x53 (+ (- ?x48 (* ?x42 ?x42)) (* ?x42 ?x42 ?x42 r00 ?x43 ?x43 ?x43) (* ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x58 (+ (- ?x53 (* ?x42 ?x42 ?x42 ?x42)) (* 2 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43) (* ?x42 ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43))))
 (let ((?x64 (- (- ?x58 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43)) (* ?x42 ?x42 ?x43 ?x43))))
 (let ((?x66 (- (- ?x64 (* 2 ?x43 ?x43 ?x43)) (* ?x42 ?x42 ?x42 r00 r00))))
 (let ((?x71 (- (- (+ ?x66 (* ?x42 ?x43 ?x43) r 1) r00) (* 2 ?x43))))
 (let ((?x77 (- (+ ?x71 (* r00 r00 ?x43 ?x43) ?x35 ?x36) (* r00 ?x43 ?x43))))
 (let ((?x79 (- (- ?x77 (* ?x42 ?x42 ?x42 r00 r00 ?x43 ?x43 ?x43)) (* 2 ?x42 ?x42 ?x42 x00))))
 (let (($x83 (and (= (- (- (+ (* (- 1) r) r00 ?x30 ?x32) ?x35) ?x36) 0) (or (not (= ?x79 0))))))
 (rewrite (= $x83 $x1795))))))))))))))))))))))))))))))))))
 ))
 (let ((@x85 (asserted $x84)))
 (let ((@x1898 (mp (mp @x85 (quant-intro (proof-bind ?x2073) (= $x84 $x2069)) $x2069) (rewrite (= $x2069 $x2069)) $x2069)))
 (let ((@x1613 (mp (mp @x1898 (quant-intro (proof-bind ?x2030) (= $x2069 $x2050)) $x2050) (quant-intro (proof-bind ?x2787) (= $x2050 $x2785)) $x2785)))
 (let ((@x2488 (mp (mp~ @x1613 (sk (~ $x2785 $x2641)) $x2641) (rewrite (= $x2641 $x2089)) $x2089)))
 (let ((@x1139 (and-elim @x2488 $x1341)))
 (let ((@x1921 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1341) $x1887)) @x1139 $x1887)))
 (let (($x1888 (>= ?x1340 0)))
 (let ((@x2131 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1341) $x1888)) @x1139 $x1888)))
 (let (($x1971 (not (>= ?x1740 0))))
 (let (($x1758 (<= ?x1740 0)))
 (let ((@x1861 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2090 (not $x1758) $x1971)) (and-elim @x2488 $x2482) (or (not $x1758) $x1971))))
 (let ((@x1873 (unit-resolution @x1861 (lemma ((_ th-lemma arith) (hypothesis (not $x1758)) @x2131 @x1921 false) $x1758) $x1971)))
 ((_ th-lemma arith) @x1873 @x2131 @x1921 false))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 1
 :arith-assert-diseq        1
 :arith-assert-lower        23
 :arith-assert-upper        3
 :arith-conflicts           2
 :arith-eq-adapter          2
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             596
 :arith-nonlinear-bounds    20
 :arith-nonlinear-horner    8
 :arith-num-rows            4
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              2
 :arith-tableau-max-columns 95
 :arith-tableau-max-rows    4
 :conflicts                 2
 :decisions                 1
 :del-clause                7
 :final-checks              4
 :max-memory                3.97
 :memory                    3.40
 :mk-bool-var               12
 :mk-clause                 7
 :num-allocs                1425520
 :num-checks                1
 :propagations              4
 :rlimit-count              10620
 :time                      0.01
 :total-time                0.02)
