unsat
((set-logic NRA)
(declare-fun d!6 () Real)
(declare-fun a!8 () Real)
(declare-fun b!7 () Real)
(declare-fun y!5 () Real)
(proof
(let ((?x719 (* y!5 b!7)))
 (let ((?x132 (* (- 1.0) ?x719)))
 (let ((?x105 (* y00 b!7)))
 (let ((?x772 (+ ?x105 (* (- (/ 1.0 2.0)) (* a00 d!6)) ?x132 (* (/ 1.0 2.0) (* a!8 d!6)))))
 (let (($x1328 (>= ?x772 0.0)))
 (let ((?x917 (* a!8 d!6)))
 (let ((?x875 (* (- 2.0) ?x719)))
 (let ((?x1018 (+ (* 2.0 ?x105) (* (- 1.0) (* a00 d!6)) ?x875 ?x917)))
 (let (($x1089 (>= ?x1018 0.0)))
 (let (($x1086 (= 0.0 ?x1018)))
 (let ((@x993 (symm (commutativity (= $x1086 (= ?x1018 0.0))) (= (= ?x1018 0.0) $x1086))))
 (let (($x1034 (= ?x1018 0.0)))
 (let ((?x101 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x1073 (= (+ ?x30 ?x101 (* (- 1.0) (* d00 a!8)) (* 2.0 (* b00 y!5))) 0.0)))
 (let ((?x753 (* (/ 3.0 4.0) (* y!5 d!6 d!6 b!7))))
 (let ((?x330 (* (- (/ 1.0 8.0)) (* d!6 d!6 d!6 b!7 b!7))))
 (let ((?x1280 (* (/ 3.0 2.0) (* y!5 y!5 d!6 b!7))))
 (let ((?x1271 (* y!5 y!5 y!5 a!8)))
 (let ((?x1122 (* y!5 y!5 y!5 b!7)))
 (let ((?x767 (* (/ 1.0 8.0) (* d!6 d!6 d!6 b!7))))
 (let ((?x1299 (* (- (/ 1.0 2.0)) (* y!5 d!6 d!6 b!7 b!7))))
 (let ((?x457 (* (- (/ 1.0 2.0)) (* y!5 y!5 d!6 b!7 b!7))))
 (let ((?x1514 (+ ?x457 ?x1299 (* (- 1.0) (* y!5 a!8 d!6 d!6 b!7)) ?x767 (* (/ 3.0 4.0) (* y!5 a!8 d!6 d!6)) (* (- (/ 1.0 2.0)) (* y!5 y!5 a!8 a!8 d!6)) (* (/ 1.0 8.0) (* a!8 d!6 d!6 d!6)) (* (/ 3.0 2.0) (* y!5 y!5 a!8 d!6)) (* (- 1.0) (* y!5 y!5 a!8 d!6 b!7)) (* (- (/ 1.0 2.0)) (* y!5 a!8 a!8 d!6 d!6)) (* (- (/ 1.0 8.0)) (* a!8 a!8 d!6 d!6 d!6)) (* (- (/ 1.0 4.0)) (* a!8 d!6 d!6 d!6 b!7)) ?x1122 ?x1271 ?x1280 ?x330 ?x753)))
 (let ((?x1104 (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x1133 (* (- (/ 1.0 8.0)) (* y!5 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x1114 (* (/ 1.0 128.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x1134 (* (- (/ 1.0 16.0)) (* d!6 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x1110 (* (/ 1.0 32.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x1054 (+ (* (/ 1.0 64.0) (* a!8 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 32.0) (* y!5 y!5 a!8 a!8 d!6 d!6 d!6 b!7 b!7)) (* (- (/ 1.0 8.0)) (* y!5 a!8 a!8 d!6 b!7 b!7)) (* (/ 1.0 16.0) (* y!5 y!5 a!8 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 32.0) (* y!5 a!8 a!8 d!6 d!6 d!6 d!6 b!7 b!7)) (* (/ 1.0 128.0) (* a!8 a!8 d!6 d!6 d!6 d!6 d!6 b!7 b!7)) (* (- (/ 1.0 4.0)) (* y!5 a!8 d!6 b!7 b!7 b!7)) (* (- (/ 1.0 8.0)) (* a!8 d!6 d!6 b!7 b!7 b!7)) (* (- (/ 1.0 16.0)) (* a!8 a!8 d!6 d!6 b!7 b!7)) ?x1110 ?x1134 ?x1114 ?x1133 ?x1104 (* (/ 1.0 16.0) (* y!5 a!8 d!6 d!6 d!6 d!6 b!7 b!7 b!7)))))
 (let ((?x1246 (* (/ 1.0 2.0) (* y!5 b!7 b!7 b!7 b!7))))
 (let ((?x711 (* (- (/ 1.0 4.0)) (* d!6 b!7))))
 (let ((?x1177 (* (/ 1.0 4.0) (* d!6 b!7 b!7 b!7 b!7))))
 (let ((?x333 (+ (* (/ 3.0 2.0) (* y!5 a!8 a!8 b!7 b!7)) ?x1177 (* (/ 1.0 2.0) (* y!5 a!8 a!8 a!8 b!7)) (* (/ 3.0 4.0) (* a!8 a!8 d!6 b!7 b!7)) ?x711 (* (/ 3.0 2.0) (* y!5 a!8 b!7 b!7 b!7)) (* (/ 1.0 4.0) (* a!8 a!8 a!8 d!6 b!7)) ?x1246 (* (/ 3.0 4.0) (* a!8 d!6 b!7 b!7 b!7)))))
 (let ((?x407 (* ?x333 ?x1054 ?x1514 ?x772)))
 (let (($x191 (= ?x407 0.0)))
 (let ((?x1495 (* y00 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x1459 (* y00 y!5 y!5 y!5 y!5 a!8 a!8 a!8 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x1432 (* a00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x1290 (* y00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x1150 (* a00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x1148 (* y00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x1068 (* a00 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x1063 (* y00 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x1060 (* y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x1057 (* y00 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x1055 (* a00 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x1044 (* y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x1041 (* y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x1038 (* a00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x1028 (* y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x1026 (* y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x1017 (* a00 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x1014 (* y00 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x1011 (* y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x1005 (* y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x995 (* a00 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x938 (* a00 y!5 y!5 y!5 y!5 a!8 a!8 a!8 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x825 (* y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x816 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x682 (* y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x662 (* y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x514 (* y00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x504 (* y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x497 (* y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x374 (* y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)))
 (let ((?x369 (* y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x239 (* y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)))
 (let ((?x96 (+ (* (/ 1.0 512.0) ?x239) (* (- (/ 1.0 32.0)) ?x369) (* (/ 1.0 128.0) ?x374) (* (/ 1.0 128.0) ?x497) (* (- (/ 1.0 256.0)) ?x504) (* (- (/ 1.0 128.0)) ?x514) (* (- (/ 1.0 32.0)) ?x662) (* (/ 1.0 16.0) ?x682) (* (- (/ 1.0 64.0)) ?x816) (* (- (/ 1.0 32.0)) ?x825) (* (- (/ 1.0 64.0)) ?x938) (* (- (/ 1.0 128.0)) ?x995) (* (/ 1.0 64.0) ?x1005) (* (- (/ 1.0 256.0)) ?x1011) (* (/ 1.0 256.0) ?x1014) (* (- (/ 1.0 512.0)) ?x1017) (* (- (/ 1.0 256.0)) ?x1026) (* (/ 1.0 128.0) ?x1028) (* (/ 1.0 256.0) ?x1038) (* (- (/ 1.0 128.0)) ?x1041) (* (/ 1.0 64.0) ?x1044) (* (/ 1.0 128.0) ?x1055) (* (- (/ 1.0 64.0)) ?x1057) (* (/ 1.0 64.0) ?x1060) (* (/ 1.0 32.0) ?x1063) (* (- (/ 1.0 64.0)) ?x1068) (* (- (/ 1.0 16.0)) ?x1148) (* (/ 1.0 32.0) ?x1150) (* (- (/ 1.0 128.0)) ?x1290) (* (/ 1.0 256.0) ?x1432) (* (/ 1.0 32.0) ?x1459) (* (/ 1.0 64.0) ?x1495))))
 (let (($x321 (= ?x96 0.0)))
 (let (($x308 (not $x321)))
 (let (($x192 (or $x308 (not $x191))))
 (let (($x949 (and $x192 $x1073 (= (+ (* b00 d!6) (* (- 1.0) (* d00 b!7))) 0.0) $x1034)))
 (let ((?x546 (* d!6 a!8)))
 (let (($x426 (= (+ ?x546 ?x875 (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00))) 0.0)))
 (let (($x1092 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x101 (* 2.0 (* y!5 b00))) 0.0)))
 (let ((?x540 (+ ?x1271 (* (- (/ 1.0 2.0)) (* y!5 y!5 d!6 a!8 a!8)) ?x1122 ?x1280 (* (/ 3.0 2.0) (* y!5 y!5 d!6 a!8)) ?x753 (* (/ 3.0 4.0) (* y!5 d!6 d!6 a!8)) ?x767 (* (/ 1.0 8.0) (* d!6 d!6 d!6 a!8)) ?x457 (* (- 1.0) (* y!5 y!5 d!6 b!7 a!8)) ?x1299 (* (- 1.0) (* y!5 d!6 d!6 b!7 a!8)) (* (- (/ 1.0 2.0)) (* y!5 d!6 d!6 a!8 a!8)) ?x330 (* (- (/ 1.0 4.0)) (* d!6 d!6 d!6 b!7 a!8)) (* (- (/ 1.0 8.0)) (* d!6 d!6 d!6 a!8 a!8)))))
 (let ((?x1121 (+ (* (/ 1.0 32.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8 a!8)) (* (- (/ 1.0 8.0)) (* y!5 d!6 b!7 b!7 a!8 a!8)) ?x1110 (* (/ 1.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) ?x1104 (* (/ 1.0 16.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8)) ?x1114 (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 1.0 128.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8)) ?x1133 (* (- (/ 1.0 4.0)) (* y!5 d!6 b!7 b!7 b!7 a!8)) ?x1134 (* (- (/ 1.0 8.0)) (* d!6 d!6 b!7 b!7 b!7 a!8)) (* (- (/ 1.0 16.0)) (* d!6 d!6 b!7 b!7 a!8 a!8)))))
 (let ((?x1185 (+ ?x711 (* (/ 1.0 2.0) (* y!5 b!7 a!8 a!8 a!8)) (* (/ 3.0 4.0) (* d!6 b!7 b!7 a!8 a!8)) (* (/ 3.0 4.0) (* d!6 b!7 b!7 b!7 a!8)) ?x1177 (* (/ 3.0 2.0) (* y!5 b!7 b!7 a!8 a!8)) (* (/ 3.0 2.0) (* y!5 b!7 b!7 b!7 a!8)) ?x1246 (* (/ 1.0 4.0) (* d!6 b!7 a!8 a!8 a!8)))))
 (let ((?x1527 (* ?x1185 ?x1121 ?x540 (+ (* (/ 1.0 2.0) ?x546) ?x132 (* b!7 y00) (* (- (/ 1.0 2.0)) (* d!6 a00))))))
 (let ((?x702 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8 a00)))
 (let ((?x348 (* y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8 y00)))
 (let ((?x1002 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1004 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x339 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a00)))
 (let ((?x1006 (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 y00)))
 (let ((?x986 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8)))
 (let ((?x983 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x980 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8 a00)))
 (let ((?x984 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8 y00)))
 (let ((?x981 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x974 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x972 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a00)))
 (let ((?x416 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 y00)))
 (let ((?x1025 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8)))
 (let ((?x1032 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1039 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a00)))
 (let ((?x1477 (* y!5 y!5 y!5 y!5 y!5 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 y00)))
 (let ((?x275 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1406 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1250 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a00)))
 (let ((?x1309 (* y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 y00)))
 (let ((?x1440 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8)))
 (let ((?x873 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8)))
 (let ((?x1449 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a00)))
 (let ((?x1451 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 y00)))
 (let ((?x288 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x409 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x410 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a00)))
 (let ((?x299 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 y00)))
 (let ((?x839 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8)))
 (let ((?x840 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8)))
 (let ((?x325 (+ (* (/ 1.0 256.0) ?x840) (* (- (/ 1.0 128.0)) ?x839) (* (/ 1.0 128.0) ?x299) (* (- (/ 1.0 256.0)) ?x410) (* (- (/ 1.0 128.0)) ?x409) (* (/ 1.0 64.0) ?x288) (* (- (/ 1.0 64.0)) ?x1451) (* (/ 1.0 128.0) ?x1449) (* (- (/ 1.0 64.0)) ?x873) (* (/ 1.0 32.0) ?x1440) (* (- (/ 1.0 32.0)) ?x1309) (* (/ 1.0 64.0) ?x1250) (* (/ 1.0 32.0) ?x1406) (* (- (/ 1.0 16.0)) ?x275) (* (/ 1.0 16.0) ?x1477) (* (- (/ 1.0 32.0)) ?x1039) (* (- (/ 1.0 512.0)) ?x1032) (* (/ 1.0 256.0) ?x1025) (* (- (/ 1.0 256.0)) ?x416) (* (/ 1.0 512.0) ?x972) (* (/ 1.0 256.0) ?x974) (* (- (/ 1.0 128.0)) ?x981) (* (/ 1.0 128.0) ?x984) (* (- (/ 1.0 256.0)) ?x980) (* (/ 1.0 128.0) ?x983) (* (- (/ 1.0 64.0)) ?x986) (* (/ 1.0 64.0) ?x1006) (* (- (/ 1.0 128.0)) ?x339) (* (- (/ 1.0 64.0)) ?x1004) (* (/ 1.0 32.0) ?x1002) (* (- (/ 1.0 32.0)) ?x348) (* (/ 1.0 64.0) ?x702))))
 (let (($x451 (and (or (not (= ?x325 0.0)) (not (= ?x1527 0.0))) $x1092 (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) $x426)))
 (let (($x585 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x124 (* y b)))
 (let ((?x143 (* (- 2.0) ?x124)))
 (let ((?x118 (* d a)))
 (let (($x178 (= (+ ?x118 ?x143 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x104 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x101 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x133 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x101 (* 2.0 (* y b00))) 0.0)))
 (let ((?x148 (* b y00)))
 (let ((?x185 (* (- 1.0) ?x124)))
 (let ((?x152 (* (/ 1.0 2.0) ?x118)))
 (let ((?x237 (+ ?x152 ?x185 ?x148 (* (- (/ 1.0 2.0)) (* d a00)))))
 (let ((?x344 (* (- (/ 1.0 2.0)) (* y y d a a))))
 (let ((?x316 (* y y y a)))
 (let ((?x1520 (+ ?x316 ?x344 (* y y y b) (* (/ 3.0 2.0) (* y y d b)) (* (/ 3.0 2.0) (* y y d a)) (* (/ 3.0 4.0) (* y d d b)) (* (/ 3.0 4.0) (* y d d a)) (* (/ 1.0 8.0) (* d d d b)) (* (/ 1.0 8.0) (* d d d a)) (* (- (/ 1.0 2.0)) (* y y d b b)) (* (- 1.0) (* y y d b a)) (* (- (/ 1.0 2.0)) (* y d d b b)) (* (- 1.0) (* y d d b a)) (* (- (/ 1.0 2.0)) (* y d d a a)) (* (- (/ 1.0 8.0)) (* d d d b b)) (* (- (/ 1.0 4.0)) (* d d d b a)) (* (- (/ 1.0 8.0)) (* d d d a a)))))
 (let ((?x311 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x282 (* (/ 1.0 32.0) (* y y d d d b b a a))))
 (let ((?x1128 (+ ?x282 ?x311 (* (/ 1.0 32.0) (* y y d d d b b b b)) (* (/ 1.0 16.0) (* y y d d d b b b a)) (* (/ 1.0 32.0) (* y d d d d b b b b)) (* (/ 1.0 16.0) (* y d d d d b b b a)) (* (/ 1.0 32.0) (* y d d d d b b a a)) (* (/ 1.0 128.0) (* d d d d d b b b b)) (* (/ 1.0 64.0) (* d d d d d b b b a)) (* (/ 1.0 128.0) (* d d d d d b b a a)) (* (- (/ 1.0 8.0)) (* y d b b b b)) (* (- (/ 1.0 4.0)) (* y d b b b a)) (* (- (/ 1.0 16.0)) (* d d b b b b)) (* (- (/ 1.0 8.0)) (* d d b b b a)) (* (- (/ 1.0 16.0)) (* d d b b a a)))))
 (let ((?x272 (* (/ 1.0 2.0) (* y b a a a))))
 (let ((?x257 (* (- (/ 1.0 4.0)) (* d b))))
 (let ((?x801 (+ ?x257 ?x272 (* (/ 3.0 4.0) (* d b b a a)) (* (/ 3.0 4.0) (* d b b b a)) (* (/ 1.0 4.0) (* d b b b b)) (* (/ 3.0 2.0) (* y b b a a)) (* (/ 3.0 2.0) (* y b b b a)) (* (/ 1.0 2.0) (* y b b b b)) (* (/ 1.0 4.0) (* d b a a a)))))
 (let ((?x715 (* y y y y d d d b b b a a a a a a a a00)))
 (let ((?x705 (* y y y y d d b b b b a a a a a a a y00)))
 (let ((?x695 (* y y y y y d d b b b b a a a a a a a)))
 (let ((?x685 (* y y y y d d d b b b a a a a a a a a)))
 (let ((?x675 (* y y y d d d d b b b a a a a a00)))
 (let ((?x665 (* y y y d d d b b b b a a a a y00)))
 (let ((?x655 (* y y y y d d d b b b b a a a a)))
 (let ((?x645 (* y y y d d d d b b b a a a a a)))
 (let ((?x635 (* y y y y y d d d d d b b b a a a a a a a a00)))
 (let ((?x625 (* y y y y y d d d d b b b b a a a a a a a y00)))
 (let ((?x615 (* y y y y y y d d d d b b b b a a a a a a a)))
 (let ((?x605 (* y y y y y d d d d d b b b a a a a a a a a)))
 (let ((?x595 (* y y y y d d d d d d b b b a a a a a00)))
 (let ((?x584 (* y y y y d d d d d b b b b a a a a y00)))
 (let ((?x574 (* y y y y y d d d d d b b b b a a a a)))
 (let ((?x564 (* y y y y d d d d d d b b b a a a a a)))
 (let ((?x553 (* y y y y y d d b b b a a a a a a a00)))
 (let ((?x543 (* y y y y y d b b b b a a a a a a y00)))
 (let ((?x532 (* y y y y y y d b b b b a a a a a a)))
 (let ((?x521 (* y y y y y d d b b b a a a a a a a)))
 (let ((?x511 (* y y y y d d d b b b a a a a00)))
 (let ((?x501 (* y y y y d d b b b b a a a y00)))
 (let ((?x491 (* y y y y y d d b b b b a a a)))
 (let ((?x480 (* y y y y d d d b b b a a a a)))
 (let ((?x470 (* y y y y y y d d d d b b b a a a a a a a00)))
 (let ((?x460 (* y y y y y y d d d b b b b a a a a a a y00)))
 (let ((?x449 (* y y y y y y y d d d b b b b a a a a a a)))
 (let ((?x438 (* y y y y y y d d d d b b b a a a a a a a)))
 (let ((?x428 (* y y y y y d d d d d b b b a a a a00)))
 (let ((?x417 (* y y y y y d d d d b b b b a a a y00)))
 (let ((?x406 (* y y y y y y d d d d b b b b a a a)))
 (let ((?x395 (* y y y y y d d d d d b b b a a a a)))
 (let ((?x624 (+ (* (/ 1.0 256.0) ?x395) (* (- (/ 1.0 128.0)) ?x406) (* (/ 1.0 128.0) ?x417) (* (- (/ 1.0 256.0)) ?x428) (* (- (/ 1.0 128.0)) ?x438) (* (/ 1.0 64.0) ?x449) (* (- (/ 1.0 64.0)) ?x460) (* (/ 1.0 128.0) ?x470) (* (- (/ 1.0 64.0)) ?x480) (* (/ 1.0 32.0) ?x491) (* (- (/ 1.0 32.0)) ?x501) (* (/ 1.0 64.0) ?x511) (* (/ 1.0 32.0) ?x521) (* (- (/ 1.0 16.0)) ?x532) (* (/ 1.0 16.0) ?x543) (* (- (/ 1.0 32.0)) ?x553) (* (- (/ 1.0 512.0)) ?x564) (* (/ 1.0 256.0) ?x574) (* (- (/ 1.0 256.0)) ?x584) (* (/ 1.0 512.0) ?x595) (* (/ 1.0 256.0) ?x605) (* (- (/ 1.0 128.0)) ?x615) (* (/ 1.0 128.0) ?x625) (* (- (/ 1.0 256.0)) ?x635) (* (/ 1.0 128.0) ?x645) (* (- (/ 1.0 64.0)) ?x655) (* (/ 1.0 64.0) ?x665) (* (- (/ 1.0 128.0)) ?x675) (* (- (/ 1.0 64.0)) ?x685) (* (/ 1.0 32.0) ?x695) (* (- (/ 1.0 32.0)) ?x705) (* (/ 1.0 64.0) ?x715))))
 (let (($x617 (not (= ?x624 0.0))))
 (and (or $x617 (not (= (* ?x801 ?x1128 ?x1520 ?x237) 0.0))) $x133 $x104 $x178)))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x1528 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x124 (* y b)))
 (let ((?x143 (* (- 2.0) ?x124)))
 (let ((?x118 (* d a)))
 (let (($x823 (= (+ ?x118 ?x143 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x204 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x101 (* (- 2.0) (* b00 y00))))
 (let (($x588 (= (+ ?x101 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x889 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x338 (* y00 b)))
 (let ((?x927 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x338 ?x889)))
 (let ((?x1430 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x72 (+ a b)))
 (let ((?x512 (+ (* ?x72 ?x1430 ?x1430 ?x1430) (* (- (/ 1.0 2.0)) (* ?x72 ?x72 ?x1430 ?x1430 d)))))
 (let ((?x156 (+ (* (/ 1.0 32.0) (* ?x72 ?x72 ?x1430 ?x1430 d d d b b)) (* (- (/ 1.0 8.0)) (* ?x72 ?x72 ?x1430 d b b)))))
 (let ((?x257 (* (- (/ 1.0 4.0)) (* d b))))
 (let ((?x489 (* (+ ?x257 (* (/ 1.0 2.0) (* ?x72 ?x72 ?x72 ?x1430 b))) ?x156 ?x512 ?x927)))
 (let ((?x344 (* (- (/ 1.0 2.0)) (* y y d a a))))
 (let ((?x316 (* y y y a)))
 (let ((?x311 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x282 (* (/ 1.0 32.0) (* y y d d d b b a a))))
 (let ((?x1397 (* (+ ?x257 (* (/ 1.0 2.0) (* y b a a a))) (+ ?x282 ?x311) (+ ?x316 ?x344) (+ (* (/ 1.0 2.0) ?x118) (* (- 1.0) ?x124) ?x338 ?x889))))
 (let (($x469 (or (not (= ?x1397 0.0)) (not (= ?x489 0.0)))))
 (and $x469 $x588 $x204 $x823))))))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x807 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x124 (* y b)))
 (let ((?x143 (* (- 2.0) ?x124)))
 (let ((?x118 (* d a)))
 (let (($x178 (= (+ ?x118 ?x143 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x104 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x101 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x133 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x101 (* 2.0 (* y b00))) 0.0)))
 (let ((?x148 (* b y00)))
 (let ((?x185 (* (- 1.0) ?x124)))
 (let ((?x152 (* (/ 1.0 2.0) ?x118)))
 (let ((?x237 (+ ?x152 ?x185 ?x148 (* (- (/ 1.0 2.0)) (* d a00)))))
 (let ((?x344 (* (- (/ 1.0 2.0)) (* y y d a a))))
 (let ((?x316 (* y y y a)))
 (let ((?x1520 (+ ?x316 ?x344 (* y y y b) (* (/ 3.0 2.0) (* y y d b)) (* (/ 3.0 2.0) (* y y d a)) (* (/ 3.0 4.0) (* y d d b)) (* (/ 3.0 4.0) (* y d d a)) (* (/ 1.0 8.0) (* d d d b)) (* (/ 1.0 8.0) (* d d d a)) (* (- (/ 1.0 2.0)) (* y y d b b)) (* (- 1.0) (* y y d b a)) (* (- (/ 1.0 2.0)) (* y d d b b)) (* (- 1.0) (* y d d b a)) (* (- (/ 1.0 2.0)) (* y d d a a)) (* (- (/ 1.0 8.0)) (* d d d b b)) (* (- (/ 1.0 4.0)) (* d d d b a)) (* (- (/ 1.0 8.0)) (* d d d a a)))))
 (let ((?x311 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x282 (* (/ 1.0 32.0) (* y y d d d b b a a))))
 (let ((?x1128 (+ ?x282 ?x311 (* (/ 1.0 32.0) (* y y d d d b b b b)) (* (/ 1.0 16.0) (* y y d d d b b b a)) (* (/ 1.0 32.0) (* y d d d d b b b b)) (* (/ 1.0 16.0) (* y d d d d b b b a)) (* (/ 1.0 32.0) (* y d d d d b b a a)) (* (/ 1.0 128.0) (* d d d d d b b b b)) (* (/ 1.0 64.0) (* d d d d d b b b a)) (* (/ 1.0 128.0) (* d d d d d b b a a)) (* (- (/ 1.0 8.0)) (* y d b b b b)) (* (- (/ 1.0 4.0)) (* y d b b b a)) (* (- (/ 1.0 16.0)) (* d d b b b b)) (* (- (/ 1.0 8.0)) (* d d b b b a)) (* (- (/ 1.0 16.0)) (* d d b b a a)))))
 (let ((?x272 (* (/ 1.0 2.0) (* y b a a a))))
 (let ((?x257 (* (- (/ 1.0 4.0)) (* d b))))
 (let ((?x801 (+ ?x257 ?x272 (* (/ 3.0 4.0) (* d b b a a)) (* (/ 3.0 4.0) (* d b b b a)) (* (/ 1.0 4.0) (* d b b b b)) (* (/ 3.0 2.0) (* y b b a a)) (* (/ 3.0 2.0) (* y b b b a)) (* (/ 1.0 2.0) (* y b b b b)) (* (/ 1.0 4.0) (* d b a a a)))))
 (let ((?x715 (* y y y y d d d b b b a a a a a a a a00)))
 (let ((?x705 (* y y y y d d b b b b a a a a a a a y00)))
 (let ((?x695 (* y y y y y d d b b b b a a a a a a a)))
 (let ((?x685 (* y y y y d d d b b b a a a a a a a a)))
 (let ((?x675 (* y y y d d d d b b b a a a a a00)))
 (let ((?x665 (* y y y d d d b b b b a a a a y00)))
 (let ((?x655 (* y y y y d d d b b b b a a a a)))
 (let ((?x645 (* y y y d d d d b b b a a a a a)))
 (let ((?x635 (* y y y y y d d d d d b b b a a a a a a a a00)))
 (let ((?x625 (* y y y y y d d d d b b b b a a a a a a a y00)))
 (let ((?x615 (* y y y y y y d d d d b b b b a a a a a a a)))
 (let ((?x605 (* y y y y y d d d d d b b b a a a a a a a a)))
 (let ((?x595 (* y y y y d d d d d d b b b a a a a a00)))
 (let ((?x584 (* y y y y d d d d d b b b b a a a a y00)))
 (let ((?x574 (* y y y y y d d d d d b b b b a a a a)))
 (let ((?x564 (* y y y y d d d d d d b b b a a a a a)))
 (let ((?x553 (* y y y y y d d b b b a a a a a a a00)))
 (let ((?x543 (* y y y y y d b b b b a a a a a a y00)))
 (let ((?x532 (* y y y y y y d b b b b a a a a a a)))
 (let ((?x521 (* y y y y y d d b b b a a a a a a a)))
 (let ((?x511 (* y y y y d d d b b b a a a a00)))
 (let ((?x501 (* y y y y d d b b b b a a a y00)))
 (let ((?x491 (* y y y y y d d b b b b a a a)))
 (let ((?x480 (* y y y y d d d b b b a a a a)))
 (let ((?x470 (* y y y y y y d d d d b b b a a a a a a a00)))
 (let ((?x460 (* y y y y y y d d d b b b b a a a a a a y00)))
 (let ((?x449 (* y y y y y y y d d d b b b b a a a a a a)))
 (let ((?x438 (* y y y y y y d d d d b b b a a a a a a a)))
 (let ((?x428 (* y y y y y d d d d d b b b a a a a00)))
 (let ((?x417 (* y y y y y d d d d b b b b a a a y00)))
 (let ((?x406 (* y y y y y y d d d d b b b b a a a)))
 (let ((?x395 (* y y y y y d d d d d b b b a a a a)))
 (let ((?x624 (+ (* (/ 1.0 256.0) ?x395) (* (- (/ 1.0 128.0)) ?x406) (* (/ 1.0 128.0) ?x417) (* (- (/ 1.0 256.0)) ?x428) (* (- (/ 1.0 128.0)) ?x438) (* (/ 1.0 64.0) ?x449) (* (- (/ 1.0 64.0)) ?x460) (* (/ 1.0 128.0) ?x470) (* (- (/ 1.0 64.0)) ?x480) (* (/ 1.0 32.0) ?x491) (* (- (/ 1.0 32.0)) ?x501) (* (/ 1.0 64.0) ?x511) (* (/ 1.0 32.0) ?x521) (* (- (/ 1.0 16.0)) ?x532) (* (/ 1.0 16.0) ?x543) (* (- (/ 1.0 32.0)) ?x553) (* (- (/ 1.0 512.0)) ?x564) (* (/ 1.0 256.0) ?x574) (* (- (/ 1.0 256.0)) ?x584) (* (/ 1.0 512.0) ?x595) (* (/ 1.0 256.0) ?x605) (* (- (/ 1.0 128.0)) ?x615) (* (/ 1.0 128.0) ?x625) (* (- (/ 1.0 256.0)) ?x635) (* (/ 1.0 128.0) ?x645) (* (- (/ 1.0 64.0)) ?x655) (* (/ 1.0 64.0) ?x665) (* (- (/ 1.0 128.0)) ?x675) (* (- (/ 1.0 64.0)) ?x685) (* (/ 1.0 32.0) ?x695) (* (- (/ 1.0 32.0)) ?x705) (* (/ 1.0 64.0) ?x715))))
 (let (($x617 (not (= ?x624 0.0))))
 (let (($x597 (and (or $x617 (not (= (* ?x801 ?x1128 ?x1520 ?x237) 0.0))) $x133 $x104 $x178)))
 (let (($x823 (= (+ ?x118 ?x143 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x204 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let (($x588 (= (+ ?x101 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x889 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x338 (* y00 b)))
 (let ((?x927 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x338 ?x889)))
 (let ((?x1430 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x72 (+ a b)))
 (let ((?x512 (+ (* ?x72 ?x1430 ?x1430 ?x1430) (* (- (/ 1.0 2.0)) (* ?x72 ?x72 ?x1430 ?x1430 d)))))
 (let ((?x156 (+ (* (/ 1.0 32.0) (* ?x72 ?x72 ?x1430 ?x1430 d d d b b)) (* (- (/ 1.0 8.0)) (* ?x72 ?x72 ?x1430 d b b)))))
 (let ((?x489 (* (+ ?x257 (* (/ 1.0 2.0) (* ?x72 ?x72 ?x72 ?x1430 b))) ?x156 ?x512 ?x927)))
 (let ((?x1397 (* (+ ?x257 ?x272) (+ ?x282 ?x311) (+ ?x316 ?x344) (+ ?x152 ?x185 ?x338 ?x889))))
 (let (($x469 (or (not (= ?x1397 0.0)) (not (= ?x489 0.0)))))
 (let (($x1487 (and $x469 $x588 $x204 $x823)))
 (rewrite (= $x1487 $x597))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x459 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x48 (* a00 d)))
 (let ((?x889 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x338 (* y00 b)))
 (let ((?x927 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x338 ?x889)))
 (let ((?x1430 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x72 (+ a b)))
 (let ((?x512 (+ (* ?x72 ?x1430 ?x1430 ?x1430) (* (- (/ 1.0 2.0)) (* ?x72 ?x72 ?x1430 ?x1430 d)))))
 (let ((?x156 (+ (* (/ 1.0 32.0) (* ?x72 ?x72 ?x1430 ?x1430 d d d b b)) (* (- (/ 1.0 8.0)) (* ?x72 ?x72 ?x1430 d b b)))))
 (let ((?x257 (* (- (/ 1.0 4.0)) (* d b))))
 (let ((?x489 (* (+ ?x257 (* (/ 1.0 2.0) (* ?x72 ?x72 ?x72 ?x1430 b))) ?x156 ?x512 ?x927)))
 (let ((?x344 (* (- (/ 1.0 2.0)) (* y y d a a))))
 (let ((?x316 (* y y y a)))
 (let ((?x311 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x282 (* (/ 1.0 32.0) (* y y d d d b b a a))))
 (let ((?x1397 (* (+ ?x257 (* (/ 1.0 2.0) (* y b a a a))) (+ ?x282 ?x311) (+ ?x316 ?x344) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x338 ?x889))))
 (let (($x469 (or (not (= ?x1397 0.0)) (not (= ?x489 0.0)))))
 (let ((?x124 (* y b)))
 (let ((?x143 (* (- 2.0) ?x124)))
 (let ((?x118 (* d a)))
 (let (($x823 (= (+ ?x118 ?x143 (* 2.0 ?x338) (* (- 1.0) ?x48)) 0.0)))
 (let (($x204 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x101 (* (- 2.0) (* b00 y00))))
 (let (($x588 (= (+ ?x101 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (and $x588 $x204 $x823 $x469))))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x92 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x51 (/ d 2.0)))
 (let ((?x74 (+ y ?x51)))
 (let ((?x72 (+ a b)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x83 (- (* ?x72 ?x72 ?x53 ?x53 ?x51 ?x51 ?x51 ?x74 ?x74) (* ?x72 ?x72 ?x53 ?x53 ?x51 ?x74))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x78 (- (+ (- (* ?x72 ?x51) (* 2.0 ?x53 ?x74)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x87 (* ?x78 (+ (* (- 1.0) ?x53 ?x51) (* ?x72 ?x72 ?x72 ?x53 ?x74)) ?x83 (- (* ?x72 ?x74 ?x74 ?x74) (* ?x72 ?x72 ?x51 ?x74 ?x74)))))
 (let ((?x65 (- (* a a ?x53 ?x53 ?x51 ?x51 ?x51 y y) (* a a ?x53 ?x53 ?x51 y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x69 (* ?x59 (+ (* (- 1.0) ?x53 ?x51) (* a a a ?x53 y)) ?x65 (- (* a y y y) (* a a ?x51 y y)))))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let ((?x30 (* a00 d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x69 0.0)) (not (= ?x87 0.0)))))))))))))))))))) :qid k!33))
 ))
 (let ((?x159 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x48 (* a00 d)))
 (let ((?x889 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x338 (* y00 b)))
 (let ((?x927 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x338 ?x889)))
 (let ((?x1430 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x72 (+ a b)))
 (let ((?x512 (+ (* ?x72 ?x1430 ?x1430 ?x1430) (* (- (/ 1.0 2.0)) (* ?x72 ?x72 ?x1430 ?x1430 d)))))
 (let ((?x156 (+ (* (/ 1.0 32.0) (* ?x72 ?x72 ?x1430 ?x1430 d d d b b)) (* (- (/ 1.0 8.0)) (* ?x72 ?x72 ?x1430 d b b)))))
 (let ((?x257 (* (- (/ 1.0 4.0)) (* d b))))
 (let ((?x489 (* (+ ?x257 (* (/ 1.0 2.0) (* ?x72 ?x72 ?x72 ?x1430 b))) ?x156 ?x512 ?x927)))
 (let ((?x344 (* (- (/ 1.0 2.0)) (* y y d a a))))
 (let ((?x316 (* y y y a)))
 (let ((?x311 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x282 (* (/ 1.0 32.0) (* y y d d d b b a a))))
 (let ((?x1397 (* (+ ?x257 (* (/ 1.0 2.0) (* y b a a a))) (+ ?x282 ?x311) (+ ?x316 ?x344) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x338 ?x889))))
 (let (($x469 (or (not (= ?x1397 0.0)) (not (= ?x489 0.0)))))
 (let ((?x124 (* y b)))
 (let ((?x143 (* (- 2.0) ?x124)))
 (let ((?x118 (* d a)))
 (let (($x823 (= (+ ?x118 ?x143 (* 2.0 ?x338) (* (- 1.0) ?x48)) 0.0)))
 (let (($x204 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x101 (* (- 2.0) (* b00 y00))))
 (let (($x588 (= (+ ?x101 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x538 (and $x588 $x204 $x823 $x469)))
 (let ((?x51 (/ d 2.0)))
 (let ((?x74 (+ y ?x51)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x83 (- (* ?x72 ?x72 ?x53 ?x53 ?x51 ?x51 ?x51 ?x74 ?x74) (* ?x72 ?x72 ?x53 ?x53 ?x51 ?x74))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x78 (- (+ (- (* ?x72 ?x51) (* 2.0 ?x53 ?x74)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x87 (* ?x78 (+ (* (- 1.0) ?x53 ?x51) (* ?x72 ?x72 ?x72 ?x53 ?x74)) ?x83 (- (* ?x72 ?x74 ?x74 ?x74) (* ?x72 ?x72 ?x51 ?x74 ?x74)))))
 (let ((?x65 (- (* a a ?x53 ?x53 ?x51 ?x51 ?x51 y y) (* a a ?x53 ?x53 ?x51 y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x69 (* ?x59 (+ (* (- 1.0) ?x53 ?x51) (* a a a ?x53 y)) ?x65 (- (* a y y y) (* a a ?x51 y y)))))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (let (($x91 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x69 0.0)) (not (= ?x87 0.0))))))
 (rewrite (= $x91 $x538))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x93 (asserted $x92)))
 (let ((@x638 (mp (mp @x93 (quant-intro (proof-bind ?x159) (= $x92 $x459)) $x459) (rewrite (= $x459 $x1528)) $x1528)))
 (let ((@x494 (mp~ (mp @x638 (quant-intro (proof-bind ?x807) (= $x1528 $x585)) $x585) (sk (~ $x585 $x451)) $x451)))
 (let ((@x1042 (mp @x494 (rewrite (= $x451 $x949)) $x949)))
 (let ((@x1010 (mp (and-elim @x1042 $x1034) @x993 $x1086)))
 (let ((@x1291 ((_ th-lemma arith) (hypothesis (not $x1328)) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1086) $x1089)) @x1010 $x1089) false)))
 (let ((@x1266 (lemma @x1291 $x1328)))
 (let (($x1522 (<= ?x772 0.0)))
 (let (($x671 (<= ?x1018 0.0)))
 (let ((@x1021 ((_ th-lemma arith) (hypothesis (not $x1522)) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1086) $x671)) @x1010 $x671) false)))
 (let ((@x1029 (lemma @x1021 $x1522)))
 (let (($x109 (<= ?x96 0.0)))
 (let (($x359 (not $x109)))
 (let (($x116 (>= ?x96 0.0)))
 (let ((@x908 (unit-resolution ((_ th-lemma arith) (or (not $x1328) $x116 (not $x1522))) (hypothesis (not $x116)) @x1029 @x1266 false)))
 (let (($x108 (= 0.0 ?x96)))
 (let (($x1243 (not $x108)))
 (let ((@x1139 (monotonicity (symm (commutativity (= $x108 $x321)) (= $x321 $x108)) (= $x308 $x1243))))
 (let (($x134 (= 0.0 ?x407)))
 (let (($x854 (>= ?x407 0.0)))
 (let ((@x1040 (unit-resolution ((_ th-lemma arith) (or $x854 (not $x1328) (not $x1522))) (hypothesis (not $x854)) @x1029 @x1266 false)))
 (let (($x858 (<= ?x407 0.0)))
 (let ((@x1056 (unit-resolution ((_ th-lemma arith) (or $x858 (not $x1328) (not $x1522))) (hypothesis (not $x858)) @x1029 @x1266 false)))
 (let ((@x1234 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x134 (not $x858) (not $x854))) (lemma @x1056 $x858) (lemma @x1040 $x854) $x134)))
 (let ((@x966 (unit-resolution (and-elim @x1042 $x192) (mp @x1234 (commutativity (= $x134 $x191)) $x191) $x308)))
 (let ((@x806 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x108 $x359 (not $x116))) (mp @x966 @x1139 $x1243) (or $x359 (not $x116)))))
 (unit-resolution ((_ th-lemma arith) (or $x109 (not $x1328) (not $x1522))) (unit-resolution @x806 (lemma @x908 $x116) $x359) @x1029 @x1266 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       29
 :arith-eq-adapter                17
 :arith-bound-propagations-lp     1
 :arith-conflicts                 50
 :arith-diseq                     34
 :arith-fixed-eqs                 1
 :arith-grobner-calls             3
 :arith-grobner-conflicts         2
 :arith-horner-calls              3
 :arith-horner-cross-nested-forms 4
 :arith-lower                     43
 :arith-make-feasible             54
 :arith-max-columns               108
 :arith-max-rows                  12
 :arith-nla-explanations          76
 :arith-nla-lemmas                48
 :arith-offset-eqs                3
 :arith-upper                     36
 :conflicts                       9
 :decisions                       60
 :del-clause                      61
 :final-checks                    28
 :max-memory                      19.07
 :memory                          17.47
 :mk-bool-var                     106
 :mk-clause                       87
 :num-allocs                      2634762209
 :num-checks                      1
 :propagations                    48
 :rlimit-count                    9011
 :time                            10.66
 :total-time                      10.67)
