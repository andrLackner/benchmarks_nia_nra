unsat
((set-logic NIA)
(declare-fun y!2 () Int)
(declare-fun z!1 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x463 (* z!1 z!1)))
 (let ((?x305 (* z00 z00)))
 (let ((?x335 (* (- 1) ?x305)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x904 (+ ?x49 ?x43 ?x335 (* (- 6) z!1) ?x463 (* (- 12) y!2))))
 (let (($x725 (<= ?x904 0)))
 (let (($x1153 (= ?x904 0)))
 (let ((?x895 (+ x!3 y!2)))
 (let ((?x1151 (+ z!1 y!2)))
 (let ((?x285 (+ 6 z!1)))
 (let ((?x1280 (+ 1 n!0)))
 (let ((?x1282 (* z00 y!2)))
 (let ((?x1458 (* 6 ?x1282)))
 (let ((?x994 (* z00 z!1 y!2)))
 (let ((?x322 (* z00 z!1 x!3)))
 (let ((?x1033 (+ ?x322 (* (- 1) (* ?x1280 ?x285 ?x285 ?x285 ?x285 ?x1151 ?x1151 ?x895 ?x895 ?x895)) (* (- 6) (* z!1 y!2)) (* 6 (* ?x1280 ?x1280 ?x1280 ?x1151 ?x1151 ?x1151 ?x895 ?x895 ?x895)) (* (- 36) (* n00 x!3)) (* (- 6) (* n00 z!1 x!3)) (* (- 6) (* n00 ?x1280 ?x285 ?x285 ?x285 ?x1151 ?x1151 ?x895 ?x895 ?x895)) (* (- 6) (* z!1 x!3)) (* (- 1) (* z!1 z!1 y!2)) (* 6 (* ?x1280 ?x1280 ?x285 ?x285 ?x285 ?x1151 ?x1151 ?x895 ?x895 ?x895)) (* (- 1) (* z!1 z!1 x!3)) (* 6 (* ?x1280 ?x285 ?x285 ?x1151 ?x1151 ?x1151 ?x895 ?x895)) (* (- 6) (* n00 ?x1280 ?x1280 ?x1151 ?x1151 ?x1151 ?x895 ?x895 ?x895)) (* (- 36) (* n00 y!2)) (* (- 1) (* ?x1280 ?x1280 ?x285 ?x1151 ?x1151 ?x1151 ?x895 ?x895 ?x895)) (* (- 6) (* n00 ?x285 ?x285 ?x1151 ?x1151 ?x1151 ?x895 ?x895)) (* (- 6) (* n00 z!1 y!2)) (* 36 (* n!0 x!3)) (* 36 (* n!0 y!2)) (* 6 (* z00 x!3)) (* z00 ?x1280 ?x1280 ?x1151 ?x1151 ?x1151 ?x895 ?x895 ?x895) (* 6 (* n!0 z!1 x!3)) (* z00 ?x285 ?x285 ?x1151 ?x1151 ?x1151 ?x895 ?x895) ?x994 (* (- 1) (* ?x285 ?x285 ?x285 ?x1151 ?x1151 ?x1151 ?x895 ?x895)) ?x1458 (* 6 (* n!0 z!1 y!2)) (* z00 ?x1280 ?x285 ?x285 ?x285 ?x1151 ?x1151 ?x895 ?x895 ?x895))))
 (let (($x1043 (= ?x1033 0)))
 (let (($x636 (not $x1043)))
 (let ((?x699 (* z00 z00 y00 y00)))
 (let ((?x569 (+ (* 4 (* y!2 y!2 y!2)) (* (- 216) (* y00 x00)) (* (- 10) (* z00 z00 y!2)) (* (- 108) (* x!3 x!3)) (* (- 24) (* z00 y00)) (* 216 (* x00 x!3)) (* (- 18) (* z00 y00 y!2)) (* (- 36) (* z00 x00)) (* (- 96) (* y00 y00)) (* 108 (* x00 y!2)) (* 12 (* z00 y00 y00)) (* 10 (* z00 z00 y00)) (* (- 108) (* x!3 y!2)) ?x699 (* 120 (* y00 y!2)) (* 12 (* y00 y!2 y!2)) (* 2 (* z00 z00 z00 x!3)) (* z00 z00 z00 y!2) (* (- 18) (* z00 z00 x!3)) (* 18 (* z00 z00 x00)) (* 6 (* z00 y!2 y!2)) (* 36 (* z00 x!3)) (* (- 16) (* y00 y00 y00)) (* (- 36) (* z00 y00 x!3)) (* (- 1) (* z00 z00 y!2 y!2)) (* 36 (* z00 y00 x00)) (* 216 (* y00 x!3)) (* (- 1) (* z00 z00 z00 y00)) (* (- 2) (* z00 z00 z00 x00)) (* (- 24) (* y!2 y!2)) (* (- 108) (* x00 x00)) (* 24 ?x1282))))
 (let ((?x1370 (* y00 z!1)))
 (let ((?x310 (* (- 12) ?x1370)))
 (let ((?x559 (* (- 18) (* x00 z!1))))
 (let ((?x1046 (* (- 72) y!2)))
 (let ((?x631 (* z00 y00 y00)))
 (let ((?x483 (* (- 108) x!3)))
 (let ((?x496 (* z00 y00 y!2)))
 (let ((?x480 (* z!1 x!3)))
 (let ((?x1210 (* 18 ?x480)))
 (let ((?x446 (* z00 y00)))
 (let ((?x571 (* 6 ?x446)))
 (let ((?x388 (* z!1 y!2)))
 (let ((?x627 (* 12 ?x388)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x633 (+ ?x67 ?x74 (* 3 ?x322) ?x627 (* 18 (* y00 x00)) (* 3 (* z00 z00 y!2)) ?x571 (* (- 3) (* z00 x00 z!1)) ?x1210 ?x496 (* 36 (* y00 y00)) (* 2 (* y00 y00 z!1)) (* (- 18) (* x00 y!2)) ?x483 ?x631 (* (- 3) (* z00 z00 y00)) (* 18 (* x!3 y!2)) (* (- 1) (* z!1 y!2 y!2)) (* (- 36) (* y00 y!2)) ?x1046 (* 3 (* z00 z00 x!3)) (* (- 3) (* z00 z00 x00)) (* (- 2) (* z00 y!2 y!2)) (* (- 18) (* y00 x!3)) (* (- 1) (* y00 z!1 y!2)) (* (- 6) ?x1282) ?x559 ?x310)))
 (let (($x1162 (= ?x633 0)))
 (let ((?x730 (* (- 6) ?x446)))
 (let ((?x400 (* z00 z00 y!2)))
 (let ((?x1455 (+ ?x67 ?x74 ?x627 ?x400 ?x730 ?x1210 (* (- 18) (* z00 x00)) (* 24 (* y00 y00)) ?x483 (* (- 1) (* z00 z00 y00)) (* (- 12) (* y00 y!2)) ?x1046 (* 18 (* z00 x!3)) (* (- 1) ?x994) (* z00 y00 z!1) (* (- 12) (* y!2 y!2)) ?x1458 ?x559 ?x310)))
 (let (($x1460 (= ?x1455 0)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1058 (+ ?x67 ?x55 ?x74 (* (- 6) ?x305) (* 6 ?x388) (* (- 18) ?x446) ?x483 ?x1046 (* 6 (* z00 z!1)) (* (- 1) (* z00 z00 z!1)) (* 12 ?x1370))))
 (let (($x429 (= ?x1058 0)))
 (let ((?x397 (* (- 6) n00)))
 (let ((?x602 (+ z00 ?x397 (* 6 n!0) (* (- 1) z!1))))
 (let (($x1325 (= ?x602 0)))
 (let (($x972 (and $x1325 $x1153 $x429 $x1460 $x1162 (= ?x569 0) $x636)))
 (let ((?x333 (+ y!2 z!1)))
 (let ((?x919 (* x!3 z!1 z00)))
 (let ((?x1073 (* y!2 z00)))
 (let ((?x864 (* 6 ?x1073)))
 (let ((?x371 (* y!2 z!1)))
 (let ((?x357 (* (- 6) ?x371)))
 (let ((?x628 (* y!2 z!1 z00)))
 (let ((?x769 (+ ?x628 (* 6 (* y!2 z!1 n!0)) ?x357 (* (- 6) (* n00 ?x1280 ?x1280 ?x333 ?x333 ?x333 ?x895 ?x895 ?x895)) (* (- 6) (* x!3 z!1)) (* 6 (* ?x1280 ?x1280 ?x1280 ?x333 ?x333 ?x333 ?x895 ?x895 ?x895)) ?x864 (* 6 (* ?x1280 ?x1280 ?x285 ?x285 ?x285 ?x333 ?x333 ?x895 ?x895 ?x895)) (* z00 ?x285 ?x285 ?x333 ?x333 ?x333 ?x895 ?x895) (* 6 (* x!3 z00)) (* (- 1) (* ?x285 ?x285 ?x285 ?x333 ?x333 ?x333 ?x895 ?x895)) (* 6 (* x!3 z!1 n!0)) ?x919 (* 36 (* y!2 n!0)) (* (- 1) (* ?x1280 ?x285 ?x285 ?x285 ?x285 ?x333 ?x333 ?x895 ?x895 ?x895)) (* 36 (* x!3 n!0)) (* 6 (* ?x1280 ?x285 ?x285 ?x333 ?x333 ?x333 ?x895 ?x895)) (* z00 ?x1280 ?x1280 ?x333 ?x333 ?x333 ?x895 ?x895 ?x895) (* (- 1) (* ?x1280 ?x1280 ?x285 ?x333 ?x333 ?x333 ?x895 ?x895 ?x895)) (* (- 1) (* y!2 z!1 z!1)) (* (- 1) (* x!3 z!1 z!1)) (* (- 6) (* n00 ?x285 ?x285 ?x333 ?x333 ?x333 ?x895 ?x895)) (* z00 ?x1280 ?x285 ?x285 ?x285 ?x333 ?x333 ?x895 ?x895 ?x895) (* (- 6) (* y!2 z!1 n00)) (* (- 6) (* x!3 z!1 n00)) (* (- 6) (* n00 ?x1280 ?x285 ?x285 ?x285 ?x333 ?x333 ?x895 ?x895 ?x895)) (* (- 36) (* y!2 n00)) (* (- 36) (* x!3 n00)))))
 (let ((?x1237 (* x00 x00)))
 (let ((?x1238 (* 108 ?x1237)))
 (let ((?x1134 (* z00 z00 z00 x00)))
 (let ((?x1135 (* 2 ?x1134)))
 (let ((?x1131 (* z00 z00 z00 y00)))
 (let ((?x1028 (* z00 y00 x00)))
 (let ((?x1041 (* (- 36) ?x1028)))
 (let ((?x925 (* y00 y00 y00)))
 (let ((?x926 (* 16 ?x925)))
 (let ((?x840 (* z00 z00 x00)))
 (let ((?x1091 (* (- 18) ?x840)))
 (let ((?x714 (* (- 1) ?x699)))
 (let ((?x656 (* z00 z00 y00)))
 (let ((?x1192 (* (- 10) ?x656)))
 (let ((?x666 (* (- 12) ?x631)))
 (let ((?x536 (* y00 y00)))
 (let ((?x991 (* 96 ?x536)))
 (let ((?x505 (* z00 x00)))
 (let ((?x403 (* 36 ?x505)))
 (let ((?x818 (* 24 ?x446)))
 (let ((?x395 (* y00 x00)))
 (let ((?x386 (* 216 ?x395)))
 (let ((?x701 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x386 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x818 ?x403 (* 24 (* y!2 y!2)) ?x991 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) ?x1073) ?x666 ?x1192 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x714 (* 108 (* x!3 x!3)) (* (- 4) (* y!2 y!2 y!2)) (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1091 (* (- 216) (* x!3 y00)) ?x926 (* (- 12) (* y!2 y!2 y00)) ?x1041 (* (- 216) (* x!3 x00)) ?x1131 ?x1135 (* 36 (* x!3 z00 y00)) ?x1238)))
 (let ((?x841 (* 3 ?x840)))
 (let ((?x903 (* 3 ?x656)))
 (let ((?x638 (* (- 1) ?x631)))
 (let ((?x558 (* 18 (* z!1 x00))))
 (let ((?x823 (* (- 36) ?x536)))
 (let ((?x288 (* x!3 z!1)))
 (let ((?x1389 (* (- 18) ?x288)))
 (let ((?x998 (* z!1 y00)))
 (let ((?x564 (* 12 ?x998)))
 (let ((?x396 (* (- 18) ?x395)))
 (let ((?x445 (* (- 12) ?x371)))
 (let ((?x525 (* (- 108) x00)))
 (let ((?x468 (* (- 72) y00)))
 (let ((?x630 (* 72 y!2)))
 (let ((?x423 (* 108 x!3)))
 (let ((?x899 (+ ?x423 ?x630 ?x468 ?x525 (* (- 3) (* y!2 z00 z00)) (* y!2 y!2 z!1) ?x445 ?x396 (* (- 18) (* x!3 y!2)) ?x564 ?x730 ?x1389 ?x823 ?x558 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) ?x864 ?x638 ?x903 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) ?x919) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x841 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x554 (* (- 24) ?x536)))
 (let ((?x506 (* 18 ?x505)))
 (let ((?x1289 (+ ?x423 ?x630 ?x468 ?x525 ?x628 (* (- 1) (* y!2 z00 z00)) ?x445 (* (- 1) (* z!1 z00 y00)) ?x564 ?x571 ?x1389 ?x506 (* 12 (* y!2 y!2)) ?x554 ?x558 (* 12 (* y!2 y00)) (* (- 6) ?x1073) ?x656 (* (- 18) (* x!3 z00)))))
 (let ((?x447 (* 18 ?x446)))
 (let ((?x409 (* 6 ?x305)))
 (let ((?x398 (* (- 1) ?x55)))
 (let ((?x1357 (+ ?x423 ?x630 ?x468 ?x398 ?x525 (* z!1 z00 z00) ?x409 ?x357 (* (- 12) ?x998) ?x447 (* (- 6) (* z!1 z00)))))
 (let ((?x376 (* (- 12) y00)))
 (let ((?x375 (* (- 6) z00)))
 (let (($x909 (= (+ (* 12 y!2) (* 6 z!1) ?x375 ?x376 (* (- 1) ?x463) ?x305) 0)))
 (let (($x356 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x909 (= ?x1357 0) (= ?x1289 0) (= ?x899 0) (= ?x701 0) (not (= ?x769 0)))))
 (let (($x902 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x402 (+ 6 z)))
 (let ((?x444 (+ 1 n)))
 (let ((?x1372 (* (- 6) (* n00 ?x444 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1327 (* z00 ?x444 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x424 (* (- 6) (* n00 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x967 (* (- 1) (* ?x444 ?x444 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x866 (* z00 ?x444 ?x444 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x857 (* 6 (* ?x444 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x980 (* (- 1) (* ?x444 ?x402 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x772 (* x z z00)))
 (let ((?x1390 (* (- 1) (* ?x402 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x635 (* z00 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x614 (* 6 (* ?x444 ?x444 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x604 (* y z00)))
 (let ((?x605 (* 6 ?x604)))
 (let ((?x580 (* 6 (* ?x444 ?x444 ?x444 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x624 (* (- 6) (* n00 ?x444 ?x444 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x389 (* y z)))
 (let ((?x390 (* (- 6) ?x389)))
 (let ((?x103 (* y z z00)))
 (let ((?x530 (+ ?x103 (* 6 (* y z n)) ?x390 ?x624 (* (- 6) (* x z)) ?x580 ?x605 ?x614 ?x635 (* 6 (* x z00)) ?x1390 (* 6 (* x z n)) ?x772 (* 36 (* y n)) ?x980 (* 36 (* x n)) ?x857 ?x866 ?x967 (* (- 1) (* y z z)) (* (- 1) (* x z z)) ?x424 ?x1327 (* (- 6) (* y z n00)) (* (- 6) (* x z n00)) ?x1372 (* (- 36) (* y n00)) (* (- 36) (* x n00)))))
 (let ((?x1237 (* x00 x00)))
 (let ((?x1238 (* 108 ?x1237)))
 (let ((?x1134 (* z00 z00 z00 x00)))
 (let ((?x1135 (* 2 ?x1134)))
 (let ((?x1131 (* z00 z00 z00 y00)))
 (let ((?x1028 (* z00 y00 x00)))
 (let ((?x1041 (* (- 36) ?x1028)))
 (let ((?x925 (* y00 y00 y00)))
 (let ((?x926 (* 16 ?x925)))
 (let ((?x840 (* z00 z00 x00)))
 (let ((?x1091 (* (- 18) ?x840)))
 (let ((?x796 (* (- 4) (* y y y))))
 (let ((?x746 (* 108 (* x x))))
 (let ((?x699 (* z00 z00 y00 y00)))
 (let ((?x714 (* (- 1) ?x699)))
 (let ((?x656 (* z00 z00 y00)))
 (let ((?x1192 (* (- 10) ?x656)))
 (let ((?x631 (* z00 y00 y00)))
 (let ((?x666 (* (- 12) ?x631)))
 (let ((?x536 (* y00 y00)))
 (let ((?x991 (* 96 ?x536)))
 (let ((?x509 (* y y)))
 (let ((?x741 (* 24 ?x509)))
 (let ((?x505 (* z00 x00)))
 (let ((?x403 (* 36 ?x505)))
 (let ((?x446 (* z00 y00)))
 (let ((?x818 (* 24 ?x446)))
 (let ((?x395 (* y00 x00)))
 (let ((?x386 (* 216 ?x395)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1258 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x386 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x818 ?x403 ?x741 ?x991 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) ?x604) ?x666 ?x1192 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x714 ?x746 ?x796 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1091 (* (- 216) (* x y00)) ?x926 (* (- 12) (* y y y00)) ?x1041 (* (- 216) (* x x00)) ?x1131 ?x1135 (* 36 (* x z00 y00)) ?x1238)))
 (let (($x1263 (= ?x1258 0)))
 (let ((?x841 (* 3 ?x840)))
 (let ((?x903 (* 3 ?x656)))
 (let ((?x638 (* (- 1) ?x631)))
 (let ((?x568 (* 18 (* z x00))))
 (let ((?x823 (* (- 36) ?x536)))
 (let ((?x448 (* x z)))
 (let ((?x465 (* (- 18) ?x448)))
 (let ((?x730 (* (- 6) ?x446)))
 (let ((?x420 (* z y00)))
 (let ((?x421 (* 12 ?x420)))
 (let ((?x396 (* (- 18) ?x395)))
 (let ((?x416 (* (- 12) ?x389)))
 (let ((?x135 (* y y z)))
 (let ((?x525 (* (- 108) x00)))
 (let ((?x468 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x959 (+ ?x64 ?x71 ?x468 ?x525 (* (- 3) (* y z00 z00)) ?x135 ?x416 ?x396 (* (- 18) (* x y)) ?x421 ?x730 ?x465 ?x823 ?x568 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) ?x605 ?x638 ?x903 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) ?x772) (* 2 (* y y z00)) (* 18 (* y x00)) ?x841 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x966 (= ?x959 0)))
 (let ((?x617 (* (- 6) ?x604)))
 (let ((?x554 (* (- 24) ?x536)))
 (let ((?x511 (* 12 ?x509)))
 (let ((?x506 (* 18 ?x505)))
 (let ((?x571 (* 6 ?x446)))
 (let ((?x710 (+ ?x64 ?x71 ?x468 ?x525 ?x103 (* (- 1) (* y z00 z00)) ?x416 (* (- 1) (* z z00 y00)) ?x421 ?x571 ?x465 ?x506 ?x511 ?x554 ?x568 (* 12 (* y y00)) ?x617 ?x656 (* (- 18) (* x z00)))))
 (let (($x715 (= ?x710 0)))
 (let ((?x447 (* 18 ?x446)))
 (let ((?x305 (* z00 z00)))
 (let ((?x409 (* 6 ?x305)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x398 (* (- 1) ?x55)))
 (let ((?x541 (+ ?x64 ?x71 ?x468 ?x398 ?x525 ?x76 ?x409 ?x390 (* (- 12) ?x420) ?x447 (* (- 6) (* z z00)))))
 (let (($x546 (= ?x541 0)))
 (let ((?x376 (* (- 12) y00)))
 (let ((?x375 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x379 (= (+ ?x45 ?x46 ?x375 ?x376 (* (- 1) (* z z)) ?x305) 0)))
 (let (($x297 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x297 $x379 $x546 $x715 $x966 $x1263 (not (= ?x530 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x601 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x402 (+ 6 z)))
 (let ((?x635 (* z00 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x444 (+ 1 n)))
 (let ((?x580 (* 6 (* ?x444 ?x444 ?x444 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1327 (* z00 ?x444 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1390 (* (- 1) (* ?x402 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x857 (* 6 (* ?x444 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x967 (* (- 1) (* ?x444 ?x444 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x624 (* (- 6) (* n00 ?x444 ?x444 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x866 (* z00 ?x444 ?x444 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x980 (* (- 1) (* ?x444 ?x402 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x424 (* (- 6) (* n00 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x614 (* 6 (* ?x444 ?x444 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1372 (* (- 6) (* n00 ?x444 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1276 (+ ?x1372 ?x614 ?x424 ?x980 (* z00 ?x402 ?x216) (* (- 1) (* ?x402 ?x402 ?x216)) ?x866 ?x624 (* 6 (* ?x444 ?x402 ?x216)) ?x967 (* (- 6) (* n00 ?x402 ?x216)) ?x857 ?x1390 ?x1327 ?x580 ?x635)))
 (let ((?x1237 (* x00 x00)))
 (let ((?x1238 (* 108 ?x1237)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x536 (* y00 y00)))
 (let ((?x991 (* 96 ?x536)))
 (let ((?x925 (* y00 y00 y00)))
 (let ((?x926 (* 16 ?x925)))
 (let ((?x796 (* (- 4) (* y y y))))
 (let ((?x746 (* 108 (* x x))))
 (let ((?x509 (* y y)))
 (let ((?x741 (* 24 ?x509)))
 (let ((?x1297 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x741 ?x746 ?x796 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x926 (* (- 6) (* z00 y y)) ?x991 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1238 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x525 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x468 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1011 (* 18 (* x00 z))))
 (let ((?x823 (* (- 36) ?x536)))
 (let ((?x359 (* z y)))
 (let ((?x1042 (* (- 12) ?x359)))
 (let ((?x1036 (* y00 z)))
 (let ((?x1044 (* 12 ?x1036)))
 (let ((?x1379 (* (- 18) (* z x))))
 (let ((?x938 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1379 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1044 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x1042 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x823 ?x1011 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x468 (* 18 (* y00 x)) ?x71 ?x525 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x554 (* (- 24) ?x536)))
 (let ((?x511 (* 12 ?x509)))
 (let ((?x778 (+ (* (- 1) (* y00 z00 z)) ?x1042 ?x1379 (* 18 (* x00 z00)) ?x511 ?x554 ?x1011 ?x1044 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x468 (* (- 6) (* z00 y)) ?x71 ?x525 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x305 (* z00 z00)))
 (let ((?x409 (* 6 ?x305)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x398 (* (- 1) ?x55)))
 (let ((?x1253 (+ (* (- 6) ?x359) ?x398 ?x409 (* (- 12) ?x1036) (* 18 (* y00 z00)) ?x64 ?x468 (* (- 6) (* z00 z)) ?x71 ?x525 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x335 (* (- 1) ?x305)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x335 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1253 0) (= ?x778 0) (= ?x938 0) (= ?x1297 0) (not (= ?x1276 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1072 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x402 (+ 6 z)))
 (let ((?x444 (+ 1 n)))
 (let ((?x1372 (* (- 6) (* n00 ?x444 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1327 (* z00 ?x444 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x424 (* (- 6) (* n00 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x967 (* (- 1) (* ?x444 ?x444 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x866 (* z00 ?x444 ?x444 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x857 (* 6 (* ?x444 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x980 (* (- 1) (* ?x444 ?x402 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x772 (* x z z00)))
 (let ((?x1390 (* (- 1) (* ?x402 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x635 (* z00 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x614 (* 6 (* ?x444 ?x444 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x604 (* y z00)))
 (let ((?x605 (* 6 ?x604)))
 (let ((?x580 (* 6 (* ?x444 ?x444 ?x444 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x624 (* (- 6) (* n00 ?x444 ?x444 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x389 (* y z)))
 (let ((?x390 (* (- 6) ?x389)))
 (let ((?x103 (* y z z00)))
 (let ((?x530 (+ ?x103 (* 6 (* y z n)) ?x390 ?x624 (* (- 6) (* x z)) ?x580 ?x605 ?x614 ?x635 (* 6 (* x z00)) ?x1390 (* 6 (* x z n)) ?x772 (* 36 (* y n)) ?x980 (* 36 (* x n)) ?x857 ?x866 ?x967 (* (- 1) (* y z z)) (* (- 1) (* x z z)) ?x424 ?x1327 (* (- 6) (* y z n00)) (* (- 6) (* x z n00)) ?x1372 (* (- 36) (* y n00)) (* (- 36) (* x n00)))))
 (let ((?x1237 (* x00 x00)))
 (let ((?x1238 (* 108 ?x1237)))
 (let ((?x1134 (* z00 z00 z00 x00)))
 (let ((?x1135 (* 2 ?x1134)))
 (let ((?x1131 (* z00 z00 z00 y00)))
 (let ((?x1028 (* z00 y00 x00)))
 (let ((?x1041 (* (- 36) ?x1028)))
 (let ((?x925 (* y00 y00 y00)))
 (let ((?x926 (* 16 ?x925)))
 (let ((?x840 (* z00 z00 x00)))
 (let ((?x1091 (* (- 18) ?x840)))
 (let ((?x796 (* (- 4) (* y y y))))
 (let ((?x746 (* 108 (* x x))))
 (let ((?x699 (* z00 z00 y00 y00)))
 (let ((?x714 (* (- 1) ?x699)))
 (let ((?x656 (* z00 z00 y00)))
 (let ((?x1192 (* (- 10) ?x656)))
 (let ((?x631 (* z00 y00 y00)))
 (let ((?x666 (* (- 12) ?x631)))
 (let ((?x536 (* y00 y00)))
 (let ((?x991 (* 96 ?x536)))
 (let ((?x509 (* y y)))
 (let ((?x741 (* 24 ?x509)))
 (let ((?x505 (* z00 x00)))
 (let ((?x403 (* 36 ?x505)))
 (let ((?x446 (* z00 y00)))
 (let ((?x818 (* 24 ?x446)))
 (let ((?x395 (* y00 x00)))
 (let ((?x386 (* 216 ?x395)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1258 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x386 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x818 ?x403 ?x741 ?x991 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) ?x604) ?x666 ?x1192 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x714 ?x746 ?x796 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1091 (* (- 216) (* x y00)) ?x926 (* (- 12) (* y y y00)) ?x1041 (* (- 216) (* x x00)) ?x1131 ?x1135 (* 36 (* x z00 y00)) ?x1238)))
 (let (($x1263 (= ?x1258 0)))
 (let ((?x841 (* 3 ?x840)))
 (let ((?x903 (* 3 ?x656)))
 (let ((?x638 (* (- 1) ?x631)))
 (let ((?x568 (* 18 (* z x00))))
 (let ((?x823 (* (- 36) ?x536)))
 (let ((?x448 (* x z)))
 (let ((?x465 (* (- 18) ?x448)))
 (let ((?x730 (* (- 6) ?x446)))
 (let ((?x420 (* z y00)))
 (let ((?x421 (* 12 ?x420)))
 (let ((?x396 (* (- 18) ?x395)))
 (let ((?x416 (* (- 12) ?x389)))
 (let ((?x135 (* y y z)))
 (let ((?x525 (* (- 108) x00)))
 (let ((?x468 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x959 (+ ?x64 ?x71 ?x468 ?x525 (* (- 3) (* y z00 z00)) ?x135 ?x416 ?x396 (* (- 18) (* x y)) ?x421 ?x730 ?x465 ?x823 ?x568 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) ?x605 ?x638 ?x903 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) ?x772) (* 2 (* y y z00)) (* 18 (* y x00)) ?x841 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x966 (= ?x959 0)))
 (let ((?x617 (* (- 6) ?x604)))
 (let ((?x554 (* (- 24) ?x536)))
 (let ((?x511 (* 12 ?x509)))
 (let ((?x506 (* 18 ?x505)))
 (let ((?x571 (* 6 ?x446)))
 (let ((?x710 (+ ?x64 ?x71 ?x468 ?x525 ?x103 (* (- 1) (* y z00 z00)) ?x416 (* (- 1) (* z z00 y00)) ?x421 ?x571 ?x465 ?x506 ?x511 ?x554 ?x568 (* 12 (* y y00)) ?x617 ?x656 (* (- 18) (* x z00)))))
 (let (($x715 (= ?x710 0)))
 (let ((?x447 (* 18 ?x446)))
 (let ((?x305 (* z00 z00)))
 (let ((?x409 (* 6 ?x305)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x398 (* (- 1) ?x55)))
 (let ((?x541 (+ ?x64 ?x71 ?x468 ?x398 ?x525 ?x76 ?x409 ?x390 (* (- 12) ?x420) ?x447 (* (- 6) (* z z00)))))
 (let (($x546 (= ?x541 0)))
 (let ((?x376 (* (- 12) y00)))
 (let ((?x375 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x379 (= (+ ?x45 ?x46 ?x375 ?x376 (* (- 1) (* z z)) ?x305) 0)))
 (let (($x297 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x620 (and $x297 $x379 $x546 $x715 $x966 $x1263 (not (= ?x530 0)))))
 (let ((?x1276 (+ ?x1372 ?x614 ?x424 ?x980 (* z00 ?x402 ?x216) (* (- 1) (* ?x402 ?x402 ?x216)) ?x866 ?x624 (* 6 (* ?x444 ?x402 ?x216)) ?x967 (* (- 6) (* n00 ?x402 ?x216)) ?x857 ?x1390 ?x1327 ?x580 ?x635)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1297 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x741 ?x746 ?x796 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x926 (* (- 6) (* z00 y y)) ?x991 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1238 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x1011 (* 18 (* x00 z))))
 (let ((?x359 (* z y)))
 (let ((?x1042 (* (- 12) ?x359)))
 (let ((?x1036 (* y00 z)))
 (let ((?x1044 (* 12 ?x1036)))
 (let ((?x1379 (* (- 18) (* z x))))
 (let ((?x938 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1379 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1044 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x1042 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x823 ?x1011 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x468 (* 18 (* y00 x)) ?x71 ?x525 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x778 (+ (* (- 1) (* y00 z00 z)) ?x1042 ?x1379 (* 18 (* x00 z00)) ?x511 ?x554 ?x1011 ?x1044 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x468 (* (- 6) (* z00 y)) ?x71 ?x525 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x1253 (+ (* (- 6) ?x359) ?x398 ?x409 (* (- 12) ?x1036) (* 18 (* y00 z00)) ?x64 ?x468 (* (- 6) (* z00 z)) ?x71 ?x525 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x335 (* (- 1) ?x305)))
 (let (($x329 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x335 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1253 0) (= ?x778 0) (= ?x938 0) (= ?x1297 0) (not (= ?x1276 0)))))
 (rewrite (= $x329 $x620)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x252 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x218 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x221 (+ (* (- 6) ?x215 n00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218) (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x225 (- (- ?x221 (* 6 n00 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218)) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x231 (+ (- (+ ?x225 (* ?x216 ?x218 z00)) (* ?x216 ?x218 ?x218)) (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00))))
 (let ((?x235 (+ (- ?x231 (* 6 ?x215 ?x215 n00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 6 ?x215 ?x216 ?x218))))
 (let ((?x239 (- (- ?x235 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218)) (* 6 n00 ?x216 ?x218))))
 (let ((?x243 (- (+ ?x239 (* 6 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218)) (* ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x247 (+ ?x243 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x247 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x586 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x402 (+ 6 z)))
 (let ((?x635 (* z00 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x444 (+ 1 n)))
 (let ((?x580 (* 6 (* ?x444 ?x444 ?x444 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1327 (* z00 ?x444 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1390 (* (- 1) (* ?x402 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x857 (* 6 (* ?x444 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x967 (* (- 1) (* ?x444 ?x444 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x624 (* (- 6) (* n00 ?x444 ?x444 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x866 (* z00 ?x444 ?x444 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x980 (* (- 1) (* ?x444 ?x402 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x424 (* (- 6) (* n00 ?x402 ?x402 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x614 (* 6 (* ?x444 ?x444 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1372 (* (- 6) (* n00 ?x444 ?x402 ?x402 ?x402 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1276 (+ ?x1372 ?x614 ?x424 ?x980 (* z00 ?x402 ?x216) (* (- 1) (* ?x402 ?x402 ?x216)) ?x866 ?x624 (* 6 (* ?x444 ?x402 ?x216)) ?x967 (* (- 6) (* n00 ?x402 ?x216)) ?x857 ?x1390 ?x1327 ?x580 ?x635)))
 (let ((?x1237 (* x00 x00)))
 (let ((?x1238 (* 108 ?x1237)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x536 (* y00 y00)))
 (let ((?x991 (* 96 ?x536)))
 (let ((?x925 (* y00 y00 y00)))
 (let ((?x926 (* 16 ?x925)))
 (let ((?x796 (* (- 4) (* y y y))))
 (let ((?x746 (* 108 (* x x))))
 (let ((?x509 (* y y)))
 (let ((?x741 (* 24 ?x509)))
 (let ((?x1297 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x741 ?x746 ?x796 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x926 (* (- 6) (* z00 y y)) ?x991 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1238 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x525 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x468 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1011 (* 18 (* x00 z))))
 (let ((?x823 (* (- 36) ?x536)))
 (let ((?x359 (* z y)))
 (let ((?x1042 (* (- 12) ?x359)))
 (let ((?x1036 (* y00 z)))
 (let ((?x1044 (* 12 ?x1036)))
 (let ((?x1379 (* (- 18) (* z x))))
 (let ((?x938 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1379 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1044 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x1042 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x823 ?x1011 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x468 (* 18 (* y00 x)) ?x71 ?x525 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x554 (* (- 24) ?x536)))
 (let ((?x511 (* 12 ?x509)))
 (let ((?x778 (+ (* (- 1) (* y00 z00 z)) ?x1042 ?x1379 (* 18 (* x00 z00)) ?x511 ?x554 ?x1011 ?x1044 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x468 (* (- 6) (* z00 y)) ?x71 ?x525 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x305 (* z00 z00)))
 (let ((?x409 (* 6 ?x305)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x398 (* (- 1) ?x55)))
 (let ((?x1253 (+ (* (- 6) ?x359) ?x398 ?x409 (* (- 12) ?x1036) (* 18 (* y00 z00)) ?x64 ?x468 (* (- 6) (* z00 z)) ?x71 ?x525 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x335 (* (- 1) ?x305)))
 (let (($x329 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x335 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1253 0) (= ?x778 0) (= ?x938 0) (= ?x1297 0) (not (= ?x1276 0)))))
 (let ((?x215 (+ n 1)))
 (let ((?x218 (+ z 6)))
 (let ((?x221 (+ (* (- 6) ?x215 n00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218) (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x225 (- (- ?x221 (* 6 n00 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218)) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x231 (+ (- (+ ?x225 (* ?x216 ?x218 z00)) (* ?x216 ?x218 ?x218)) (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00))))
 (let ((?x235 (+ (- ?x231 (* 6 ?x215 ?x215 n00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 6 ?x215 ?x216 ?x218))))
 (let ((?x239 (- (- ?x235 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218)) (* 6 n00 ?x216 ?x218))))
 (let ((?x243 (- (+ ?x239 (* 6 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218)) (* ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x247 (+ ?x243 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x251 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x247 0))))))
 (rewrite (= $x251 $x329))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x253 (asserted $x252)))
 (let ((@x318 (mp (mp @x253 (quant-intro (proof-bind ?x586) (= $x252 $x601)) $x601) (rewrite (= $x601 $x601)) $x601)))
 (let ((@x374 (mp~ (mp @x318 (quant-intro (proof-bind ?x1072) (= $x601 $x902)) $x902) (sk (~ $x902 $x356)) $x356)))
 (let ((@x673 (mp @x374 (rewrite (= $x356 $x972)) $x972)))
 (let ((@x964 (and-elim @x673 $x1153)))
 (let ((@x987 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1153) $x725)) @x964 $x725)))
 (let (($x775 (>= ?x904 0)))
 (let ((@x753 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1153) $x775)) @x964 $x775)))
 (let (($x1387 (<= ?x1455 0)))
 (let ((@x299 (and-elim @x673 $x1460)))
 (let ((@x274 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1460) $x1387)) @x299 $x1387)))
 (let (($x936 (>= ?x1455 0)))
 (let ((@x1155 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1460) $x936)) @x299 $x936)))
 (let (($x289 (<= ?x633 0)))
 (let ((@x298 (and-elim @x673 $x1162)))
 (let ((@x1026 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1162) $x289)) @x298 $x289)))
 (let (($x1057 (>= ?x633 0)))
 (let ((@x641 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1162) $x1057)) @x298 $x1057)))
 (let (($x650 (<= ?x1058 0)))
 (let ((@x783 (and-elim @x673 $x429)))
 (let ((@x672 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x429) $x650)) @x783 $x650)))
 (let (($x336 (>= ?x1058 0)))
 (let ((@x338 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x429) $x336)) @x783 $x336)))
 (let (($x811 (<= ?x602 0)))
 (let ((@x504 (and-elim @x673 $x1325)))
 (let ((@x293 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1325) $x811)) @x504 $x811)))
 (let (($x609 (>= ?x602 0)))
 (let ((@x898 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1325) $x609)) @x504 $x609)))
 (let (($x531 (not (<= ?x1033 0))))
 (let (($x492 (>= ?x1033 0)))
 (let ((@x671 ((_ th-lemma arith) (hypothesis (not $x492)) @x898 @x293 @x641 @x1026 @x1155 @x274 @x753 @x987 @x898 @x293 @x898 @x293 @x338 @x672 @x1155 @x274 @x641 @x1026 @x1155 @x274 @x1155 @x274 @x753 @x987 false)))
 (let ((@x739 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1043 $x531 (not $x492))) (and-elim @x673 $x636) (or $x531 (not $x492)))))
 ((_ th-lemma arith) (unit-resolution @x739 (lemma @x671 $x492) $x531) @x898 @x293 @x641 @x1026 @x1155 @x274 @x753 @x987 @x898 @x293 @x898 @x293 @x338 @x672 @x1155 @x274 @x641 @x1026 @x1155 @x274 @x1155 @x274 @x753 @x987 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        24
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             640
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      7
 :arith-tableau-max-columns 118
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                20.03
 :memory                    19.28
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                1353178
 :num-checks                1
 :propagations              14
 :rlimit-count              46423
 :time                      0.03
 :total-time                0.05)
