unsat
((set-logic NRA)
(declare-fun b!7 () Real)
(declare-fun d!6 () Real)
(declare-fun y!5 () Real)
(declare-fun a!8 () Real)
(proof
(let ((?x1296 (* (- (/ 1.0 8.0)) (* y!5 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x1101 (* (- (/ 1.0 8.0)) (* y!5 y!5 b!7 b!7 b!7 b!7))))
 (let ((?x1551 (* (/ 3.0 4.0) (* y!5 d!6 d!6 b!7 b!7 b!7))))
 (let ((?x1415 (* (/ 3.0 4.0) (* d!6 d!6 d!6 b!7 b!7 a!8))))
 (let ((?x793 (* (- (/ 1.0 32.0)) (* d!6 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x505 (* (- (/ 1.0 8.0)) (* y!5 d!6 b!7 b!7 b!7 a!8))))
 (let ((?x1210 (* (/ 1.0 4.0) (* d!6 d!6 d!6 a!8 a!8 a!8))))
 (let ((?x1564 (* (/ 9.0 4.0) (* y!5 d!6 d!6 b!7 a!8 a!8))))
 (let ((?x574 (* (- (/ 1.0 8.0)) (* y!5 y!5 b!7 b!7 b!7 a!8))))
 (let ((?x1405 (* y!5 d!6 d!6 a!8 a!8 a!8)))
 (let ((?x783 (* (/ 3.0 4.0) ?x1405)))
 (let ((?x1194 (* (/ 1.0 2.0) (* y!5 y!5 d!6 a!8 a!8 a!8))))
 (let ((?x1562 (* (/ 9.0 4.0) (* y!5 d!6 d!6 b!7 b!7 a!8))))
 (let ((?x1435 (* (/ 1.0 2.0) (* y!5 y!5 d!6 b!7 b!7 b!7))))
 (let ((?x1072 (* (/ 3.0 4.0) (* d!6 d!6 d!6 b!7 a!8 a!8))))
 (let ((?x1412 (* (/ 1.0 4.0) (* d!6 d!6 d!6 b!7 b!7 b!7))))
 (let ((?x1147 (* (/ 3.0 2.0) (* y!5 y!5 d!6 b!7 a!8 a!8))))
 (let ((?x1425 (* (- (/ 1.0 32.0)) (* d!6 d!6 b!7 b!7 b!7 a!8))))
 (let ((?x1367 (* (/ 3.0 2.0) (* y!5 y!5 d!6 b!7 b!7 a!8))))
 (let ((?x1162 (+ ?x1367 ?x1425 ?x1147 ?x1412 ?x1072 ?x1435 ?x1562 ?x1194 ?x783 ?x574 ?x1564 ?x1210 ?x505 ?x793 ?x1415 ?x1551 ?x1101 ?x1296)))
 (let (($x1285 (>= ?x1162 0.0)))
 (let (($x1359 (not $x1285)))
 (let (($x1333 (<= ?x1162 0.0)))
 (let (($x1357 (not $x1333)))
 (let ((@x1383 (hypothesis $x1357)))
 (let ((?x617 (* (/ 1.0 8.0) (* y!5 d!6 d!6 d!6 d!6 a!8))))
 (let ((?x427 (* (/ 1.0 8.0) (* y!5 d!6 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x1170 (* (/ 1.0 8.0) (* y!5 y!5 d!6 d!6 d!6 a!8))))
 (let ((?x896 (* y!5 d!6 d!6 b!7 a!8 a!8 a!8)))
 (let ((?x461 (* (/ 1.0 8.0) ?x896)))
 (let ((?x736 (* (/ 1.0 8.0) (* y!5 d!6 d!6 d!6 d!6 b!7))))
 (let ((?x1128 (* (/ 1.0 8.0) (* y!5 y!5 d!6 d!6 d!6 b!7))))
 (let ((?x1204 (* (/ 1.0 4.0) (* y!5 y!5 d!6 b!7 a!8 a!8 a!8))))
 (let ((?x792 (* (/ 3.0 4.0) (* y!5 y!5 d!6 b!7 b!7 a!8 a!8))))
 (let ((?x715 (* (/ 3.0 4.0) (* y!5 y!5 d!6 b!7 b!7 b!7 a!8))))
 (let ((?x779 (* (/ 1.0 4.0) (* y!5 y!5 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x1126 (* (/ 1.0 32.0) (* d!6 d!6 d!6 d!6 d!6 a!8))))
 (let ((?x623 (* (/ 1.0 32.0) (* d!6 d!6 d!6 d!6 d!6 b!7))))
 (let ((?x1112 (* (/ 3.0 8.0) (* y!5 d!6 d!6 b!7 b!7 b!7 a!8))))
 (let ((?x1083 (* (/ 3.0 8.0) (* y!5 d!6 d!6 b!7 b!7 a!8 a!8))))
 (let ((?x675 (+ ?x1083 ?x1112 ?x623 ?x1126 ?x779 ?x715 ?x792 ?x1204 ?x1128 ?x736 ?x461 ?x1170 ?x427 ?x617)))
 (let (($x665 (<= ?x675 0.0)))
 (let (($x1322 (not $x665)))
 (let (($x452 (>= ?x675 0.0)))
 (let (($x1395 (not $x452)))
 (let ((@x840 (hypothesis $x1395)))
 (let ((?x1137 (* d!6 a!8)))
 (let ((?x207 (* (/ 1.0 2.0) ?x1137)))
 (let ((?x771 (* a00 d!6)))
 (let ((?x171 (* (- (/ 1.0 2.0)) ?x771)))
 (let ((?x254 (* y!5 b!7)))
 (let ((?x208 (* (- 1.0) ?x254)))
 (let ((?x1479 (* y00 b!7)))
 (let ((?x371 (+ ?x1479 ?x208 ?x171 ?x207)))
 (let (($x500 (>= ?x371 0.0)))
 (let ((?x1580 (+ (* 2.0 ?x254) ?x771 (* (- 1.0) ?x1137) (* (- 2.0) ?x1479))))
 (let (($x536 (<= ?x1580 0.0)))
 (let (($x513 (= 0.0 ?x1580)))
 (let ((@x426 (symm (commutativity (= $x513 (= ?x1580 0.0))) (= (= ?x1580 0.0) $x513))))
 (let (($x1148 (= ?x1580 0.0)))
 (let ((?x104 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x1617 (= (+ ?x30 ?x104 (* 2.0 (* b00 y!5)) (* (- 1.0) (* d00 a!8))) 0.0)))
 (let ((?x710 (+ ?x208 ?x171 ?x207 ?x1479)))
 (let ((?x974 (+ ?x1083 ?x1112 ?x623 ?x1126 ?x779 ?x715 ?x792 ?x461 ?x427 ?x1128 ?x1170 ?x736 ?x617 ?x1204)))
 (let ((?x1294 (+ ?x1210 ?x505 ?x793 ?x1415 ?x1551 ?x1101 ?x1296 ?x1367 ?x1425 ?x1147 ?x783 ?x1412 ?x574 ?x1072 ?x1435 ?x1194 ?x1562 ?x1564)))
 (let ((?x972 (* ?x1294 ?x974 ?x710)))
 (let (($x973 (= ?x972 0.0)))
 (let (($x971 (not $x973)))
 (let ((?x1197 (+ (* (/ 1.0 4.0) ?x1405) ?x574 ?x1194)))
 (let (($x1293 (= (* ?x1197 (+ (* (- (/ 1.0 8.0)) ?x896) ?x1170 ?x1204) ?x710) 0.0)))
 (let (($x531 (not $x1293)))
 (let (($x1341 (or $x531 $x971)))
 (let (($x546 (and $x1341 $x1617 (= (+ (* d00 b!7) (* (- 1.0) (* b00 d!6))) 0.0) $x1148)))
 (let ((?x725 (+ ?x1137 (* (- 2.0) ?x254) (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00)))))
 (let (($x592 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x104 (* 2.0 (* y!5 b00))) 0.0)))
 (let ((?x763 (* b!7 y00)))
 (let ((?x522 (+ ?x207 ?x208 ?x763 (* (- (/ 1.0 2.0)) (* d!6 a00)))))
 (let ((?x135 (+ ?x461 ?x1204 ?x1170 ?x779 ?x715 ?x792 ?x427 ?x1112 ?x1083 ?x1128 ?x736 ?x617 ?x623 ?x1126)))
 (let ((?x357 (+ ?x783 ?x574 ?x1194 ?x1551 ?x1562 ?x1564 ?x1412 ?x1415 ?x1072 ?x1210 ?x1101 ?x1296 ?x505 ?x793 ?x1425 ?x1435 ?x1367 ?x1147)))
 (let (($x698 (or (not (= (* ?x1197 (+ (* (- (/ 1.0 8.0)) ?x896) ?x1204 ?x1170) ?x522) 0.0)) (not (= (* ?x357 ?x135 ?x522) 0.0)))))
 (let (($x873 (and $x698 $x592 (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) (= ?x725 0.0))))
 (let (($x344 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x122 (* y b)))
 (let ((?x144 (* (- 2.0) ?x122)))
 (let ((?x112 (* d a)))
 (let (($x179 (= (+ ?x112 ?x144 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x101 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x104 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x136 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x104 (* 2.0 (* y b00))) 0.0)))
 (let ((?x149 (* b y00)))
 (let ((?x186 (* (- 1.0) ?x122)))
 (let ((?x153 (* (/ 1.0 2.0) ?x112)))
 (let ((?x238 (+ ?x153 ?x186 ?x149 (* (- (/ 1.0 2.0)) (* d a00)))))
 (let ((?x343 (* (/ 1.0 8.0) (* y y d d d a))))
 (let ((?x328 (* (/ 1.0 4.0) (* y y d b a a a))))
 (let ((?x1636 (+ (* (/ 1.0 8.0) (* y d d b a a a)) ?x328 ?x343 (* (/ 1.0 4.0) (* y y d b b b b)) (* (/ 3.0 4.0) (* y y d b b b a)) (* (/ 3.0 4.0) (* y y d b b a a)) (* (/ 1.0 8.0) (* y d d b b b b)) (* (/ 3.0 8.0) (* y d d b b b a)) (* (/ 3.0 8.0) (* y d d b b a a)) (* (/ 1.0 8.0) (* y y d d d b)) (* (/ 1.0 8.0) (* y d d d d b)) (* (/ 1.0 8.0) (* y d d d d a)) (* (/ 1.0 32.0) (* d d d d d b)) (* (/ 1.0 32.0) (* d d d d d a)))))
 (let ((?x305 (* (/ 1.0 2.0) (* y y d a a a))))
 (let ((?x287 (* (- (/ 1.0 8.0)) (* y y b b b a))))
 (let ((?x992 (+ (* (/ 3.0 4.0) (* y d d a a a)) ?x287 ?x305 (* (/ 3.0 4.0) (* y d d b b b)) (* (/ 9.0 4.0) (* y d d b b a)) (* (/ 9.0 4.0) (* y d d b a a)) (* (/ 1.0 4.0) (* d d d b b b)) (* (/ 3.0 4.0) (* d d d b b a)) (* (/ 3.0 4.0) (* d d d b a a)) (* (/ 1.0 4.0) (* d d d a a a)) (* (- (/ 1.0 8.0)) (* y y b b b b)) (* (- (/ 1.0 8.0)) (* y d b b b b)) (* (- (/ 1.0 8.0)) (* y d b b b a)) (* (- (/ 1.0 32.0)) (* d d b b b b)) (* (- (/ 1.0 32.0)) (* d d b b b a)) (* (/ 1.0 2.0) (* y y d b b b)) (* (/ 3.0 2.0) (* y y d b b a)) (* (/ 3.0 2.0) (* y y d b a a)))))
 (let ((?x316 (* y d d b a a a)))
 (let ((?x355 (* (- (/ 1.0 8.0)) ?x316)))
 (let ((?x361 (+ ?x355 ?x328 ?x343)))
 (let ((?x311 (+ (* (/ 1.0 4.0) (* y d d a a a)) ?x287 ?x305)))
 (let (($x209 (or (not (= (* ?x311 ?x361 ?x238) 0.0)) (not (= (* ?x992 ?x1636 ?x238) 0.0)))))
 (and $x209 $x136 $x101 $x179)))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x1073 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x122 (* y b)))
 (let ((?x144 (* (- 2.0) ?x122)))
 (let ((?x112 (* d a)))
 (let (($x1074 (= (+ ?x112 ?x144 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x1585 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x104 (* (- 2.0) (* b00 y00))))
 (let (($x1605 (= (+ ?x104 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x1119 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x132 (* y00 b)))
 (let ((?x1152 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x132 ?x1119)))
 (let ((?x1064 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x73 (+ a b)))
 (let ((?x1466 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1064 ?x1064 d b)) (* (/ 1.0 8.0) (* ?x73 ?x1064 ?x1064 d d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x73 ?x73 ?x1064 d d b)))))
 (let ((?x1256 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1064 d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x1064 ?x1064 b b b)) (* (/ 1.0 2.0) (* ?x73 ?x73 ?x73 ?x1064 ?x1064 d)))))
 (let ((?x316 (* y d d b a a a)))
 (let ((?x355 (* (- (/ 1.0 8.0)) ?x316)))
 (let ((?x343 (* (/ 1.0 8.0) (* y y d d d a))))
 (let ((?x328 (* (/ 1.0 4.0) (* y y d b a a a))))
 (let ((?x305 (* (/ 1.0 2.0) (* y y d a a a))))
 (let ((?x287 (* (- (/ 1.0 8.0)) (* y y b b b a))))
 (let ((?x311 (+ (* (/ 1.0 4.0) (* y d d a a a)) ?x287 ?x305)))
 (let ((?x1232 (* ?x311 (+ ?x328 ?x343 ?x355) (+ (* (/ 1.0 2.0) ?x112) (* (- 1.0) ?x122) ?x132 ?x1119))))
 (let (($x1482 (or (not (= ?x1232 0.0)) (not (= (* ?x1256 ?x1466 ?x1152) 0.0)))))
 (and $x1482 $x1605 $x1585 $x1074)))))))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x672 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x122 (* y b)))
 (let ((?x144 (* (- 2.0) ?x122)))
 (let ((?x112 (* d a)))
 (let (($x179 (= (+ ?x112 ?x144 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x101 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x104 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x136 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x104 (* 2.0 (* y b00))) 0.0)))
 (let ((?x149 (* b y00)))
 (let ((?x186 (* (- 1.0) ?x122)))
 (let ((?x153 (* (/ 1.0 2.0) ?x112)))
 (let ((?x238 (+ ?x153 ?x186 ?x149 (* (- (/ 1.0 2.0)) (* d a00)))))
 (let ((?x343 (* (/ 1.0 8.0) (* y y d d d a))))
 (let ((?x328 (* (/ 1.0 4.0) (* y y d b a a a))))
 (let ((?x1636 (+ (* (/ 1.0 8.0) (* y d d b a a a)) ?x328 ?x343 (* (/ 1.0 4.0) (* y y d b b b b)) (* (/ 3.0 4.0) (* y y d b b b a)) (* (/ 3.0 4.0) (* y y d b b a a)) (* (/ 1.0 8.0) (* y d d b b b b)) (* (/ 3.0 8.0) (* y d d b b b a)) (* (/ 3.0 8.0) (* y d d b b a a)) (* (/ 1.0 8.0) (* y y d d d b)) (* (/ 1.0 8.0) (* y d d d d b)) (* (/ 1.0 8.0) (* y d d d d a)) (* (/ 1.0 32.0) (* d d d d d b)) (* (/ 1.0 32.0) (* d d d d d a)))))
 (let ((?x305 (* (/ 1.0 2.0) (* y y d a a a))))
 (let ((?x287 (* (- (/ 1.0 8.0)) (* y y b b b a))))
 (let ((?x992 (+ (* (/ 3.0 4.0) (* y d d a a a)) ?x287 ?x305 (* (/ 3.0 4.0) (* y d d b b b)) (* (/ 9.0 4.0) (* y d d b b a)) (* (/ 9.0 4.0) (* y d d b a a)) (* (/ 1.0 4.0) (* d d d b b b)) (* (/ 3.0 4.0) (* d d d b b a)) (* (/ 3.0 4.0) (* d d d b a a)) (* (/ 1.0 4.0) (* d d d a a a)) (* (- (/ 1.0 8.0)) (* y y b b b b)) (* (- (/ 1.0 8.0)) (* y d b b b b)) (* (- (/ 1.0 8.0)) (* y d b b b a)) (* (- (/ 1.0 32.0)) (* d d b b b b)) (* (- (/ 1.0 32.0)) (* d d b b b a)) (* (/ 1.0 2.0) (* y y d b b b)) (* (/ 3.0 2.0) (* y y d b b a)) (* (/ 3.0 2.0) (* y y d b a a)))))
 (let ((?x316 (* y d d b a a a)))
 (let ((?x355 (* (- (/ 1.0 8.0)) ?x316)))
 (let ((?x361 (+ ?x355 ?x328 ?x343)))
 (let ((?x311 (+ (* (/ 1.0 4.0) (* y d d a a a)) ?x287 ?x305)))
 (let (($x209 (or (not (= (* ?x311 ?x361 ?x238) 0.0)) (not (= (* ?x992 ?x1636 ?x238) 0.0)))))
 (let (($x275 (and $x209 $x136 $x101 $x179)))
 (let (($x1074 (= (+ ?x112 ?x144 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x1585 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let (($x1605 (= (+ ?x104 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x1119 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x132 (* y00 b)))
 (let ((?x1152 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x132 ?x1119)))
 (let ((?x1064 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x73 (+ a b)))
 (let ((?x1466 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1064 ?x1064 d b)) (* (/ 1.0 8.0) (* ?x73 ?x1064 ?x1064 d d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x73 ?x73 ?x1064 d d b)))))
 (let ((?x1256 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1064 d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x1064 ?x1064 b b b)) (* (/ 1.0 2.0) (* ?x73 ?x73 ?x73 ?x1064 ?x1064 d)))))
 (let (($x1583 (not (= (* ?x311 (+ ?x328 ?x343 ?x355) (+ ?x153 ?x186 ?x132 ?x1119)) 0.0))))
 (let (($x1482 (or $x1583 (not (= (* ?x1256 ?x1466 ?x1152) 0.0)))))
 (let (($x1070 (and $x1482 $x1605 $x1585 $x1074)))
 (rewrite (= $x1070 $x275)))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1484 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x48 (* a00 d)))
 (let ((?x1119 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x132 (* y00 b)))
 (let ((?x1152 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x132 ?x1119)))
 (let ((?x1064 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x73 (+ a b)))
 (let ((?x1466 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1064 ?x1064 d b)) (* (/ 1.0 8.0) (* ?x73 ?x1064 ?x1064 d d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x73 ?x73 ?x1064 d d b)))))
 (let ((?x1256 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1064 d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x1064 ?x1064 b b b)) (* (/ 1.0 2.0) (* ?x73 ?x73 ?x73 ?x1064 ?x1064 d)))))
 (let ((?x316 (* y d d b a a a)))
 (let ((?x355 (* (- (/ 1.0 8.0)) ?x316)))
 (let ((?x343 (* (/ 1.0 8.0) (* y y d d d a))))
 (let ((?x328 (* (/ 1.0 4.0) (* y y d b a a a))))
 (let ((?x305 (* (/ 1.0 2.0) (* y y d a a a))))
 (let ((?x287 (* (- (/ 1.0 8.0)) (* y y b b b a))))
 (let ((?x311 (+ (* (/ 1.0 4.0) (* y d d a a a)) ?x287 ?x305)))
 (let ((?x1232 (* ?x311 (+ ?x328 ?x343 ?x355) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x132 ?x1119))))
 (let (($x1482 (or (not (= ?x1232 0.0)) (not (= (* ?x1256 ?x1466 ?x1152) 0.0)))))
 (let ((?x122 (* y b)))
 (let ((?x144 (* (- 2.0) ?x122)))
 (let ((?x112 (* d a)))
 (let (($x1074 (= (+ ?x112 ?x144 (* 2.0 ?x132) (* (- 1.0) ?x48)) 0.0)))
 (let (($x1585 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x104 (* (- 2.0) (* b00 y00))))
 (let (($x1605 (= (+ ?x104 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (and $x1605 $x1585 $x1074 $x1482)))))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x95 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x51 (/ d 2.0)))
 (let ((?x75 (+ y ?x51)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x73 (+ a b)))
 (let ((?x87 (+ (* ?x73 ?x73 ?x73 ?x53 ?x51 ?x75 ?x75) (* ?x73 ?x51 ?x51 ?x51 ?x75 ?x75))))
 (let ((?x82 (- (* ?x73 ?x73 ?x73 ?x51 ?x51 ?x75) (* ?x73 ?x53 ?x53 ?x53 ?x75 ?x75))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x79 (- (+ (- (* ?x73 ?x51) (* 2.0 ?x53 ?x75)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x90 (* ?x79 (+ ?x82 (* ?x73 ?x73 ?x73 ?x51 ?x75 ?x75)) (- ?x87 (* ?x73 ?x73 ?x73 ?x53 ?x51 ?x51 ?x75)))))
 (let ((?x67 (+ (* a a a ?x53 ?x51 y y) (* a ?x51 ?x51 ?x51 y y))))
 (let ((?x62 (- (* a a a ?x51 ?x51 y) (* a ?x53 ?x53 ?x53 y y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x70 (* ?x59 (+ ?x62 (* a a a ?x51 y y)) (- ?x67 (* a a a ?x53 ?x51 ?x51 y)))))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let ((?x30 (* a00 d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x70 0.0)) (not (= ?x90 0.0)))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x1057 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x48 (* a00 d)))
 (let ((?x1119 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x132 (* y00 b)))
 (let ((?x1152 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x132 ?x1119)))
 (let ((?x1064 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x73 (+ a b)))
 (let ((?x1466 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1064 ?x1064 d b)) (* (/ 1.0 8.0) (* ?x73 ?x1064 ?x1064 d d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x73 ?x73 ?x1064 d d b)))))
 (let ((?x1256 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1064 d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x1064 ?x1064 b b b)) (* (/ 1.0 2.0) (* ?x73 ?x73 ?x73 ?x1064 ?x1064 d)))))
 (let ((?x316 (* y d d b a a a)))
 (let ((?x355 (* (- (/ 1.0 8.0)) ?x316)))
 (let ((?x343 (* (/ 1.0 8.0) (* y y d d d a))))
 (let ((?x328 (* (/ 1.0 4.0) (* y y d b a a a))))
 (let ((?x305 (* (/ 1.0 2.0) (* y y d a a a))))
 (let ((?x287 (* (- (/ 1.0 8.0)) (* y y b b b a))))
 (let ((?x311 (+ (* (/ 1.0 4.0) (* y d d a a a)) ?x287 ?x305)))
 (let ((?x1232 (* ?x311 (+ ?x328 ?x343 ?x355) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x132 ?x1119))))
 (let (($x1482 (or (not (= ?x1232 0.0)) (not (= (* ?x1256 ?x1466 ?x1152) 0.0)))))
 (let ((?x122 (* y b)))
 (let ((?x144 (* (- 2.0) ?x122)))
 (let ((?x112 (* d a)))
 (let (($x1074 (= (+ ?x112 ?x144 (* 2.0 ?x132) (* (- 1.0) ?x48)) 0.0)))
 (let (($x1585 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x104 (* (- 2.0) (* b00 y00))))
 (let (($x1605 (= (+ ?x104 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x1239 (and $x1605 $x1585 $x1074 $x1482)))
 (let ((?x51 (/ d 2.0)))
 (let ((?x75 (+ y ?x51)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x87 (+ (* ?x73 ?x73 ?x73 ?x53 ?x51 ?x75 ?x75) (* ?x73 ?x51 ?x51 ?x51 ?x75 ?x75))))
 (let ((?x82 (- (* ?x73 ?x73 ?x73 ?x51 ?x51 ?x75) (* ?x73 ?x53 ?x53 ?x53 ?x75 ?x75))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x79 (- (+ (- (* ?x73 ?x51) (* 2.0 ?x53 ?x75)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x90 (* ?x79 (+ ?x82 (* ?x73 ?x73 ?x73 ?x51 ?x75 ?x75)) (- ?x87 (* ?x73 ?x73 ?x73 ?x53 ?x51 ?x51 ?x75)))))
 (let ((?x67 (+ (* a a a ?x53 ?x51 y y) (* a ?x51 ?x51 ?x51 y y))))
 (let ((?x62 (- (* a a a ?x51 ?x51 y) (* a ?x53 ?x53 ?x53 y y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x70 (* ?x59 (+ ?x62 (* a a a ?x51 y y)) (- ?x67 (* a a a ?x53 ?x51 ?x51 y)))))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (let (($x94 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x70 0.0)) (not (= ?x90 0.0))))))
 (rewrite (= $x94 $x1239)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x96 (asserted $x95)))
 (let ((@x1276 (mp (mp @x96 (quant-intro (proof-bind ?x1057) (= $x95 $x1484)) $x1484) (rewrite (= $x1484 $x1073)) $x1073)))
 (let ((@x1292 (mp~ (mp @x1276 (quant-intro (proof-bind ?x672) (= $x1073 $x344)) $x344) (sk (~ $x344 $x873)) $x873)))
 (let ((@x1178 (mp @x1292 (rewrite (= $x873 $x546)) $x546)))
 (let ((@x496 (mp (and-elim @x1178 $x1148) @x426 $x513)))
 (let ((@x449 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x513) $x536)) @x496 $x536)))
 (let ((@x509 (lemma ((_ th-lemma arith) (hypothesis (not $x500)) @x449 false) $x500)))
 (let (($x188 (<= ?x972 0.0)))
 (let (($x1431 (not $x188)))
 (let (($x1603 (>= ?x972 0.0)))
 (let (($x791 (not $x1603)))
 (let ((@x1332 (hypothesis $x791)))
 (let (($x497 (= 0.0 ?x675)))
 (let (($x1391 (not $x497)))
 (let ((@x1390 (symm (commutativity (= $x497 (= ?x675 0.0))) (= (= ?x675 0.0) $x497))))
 (let ((@x1401 (monotonicity @x1390 (= (not (= ?x675 0.0)) $x1391))))
 (let (($x495 (= ?x675 0.0)))
 (let (($x1388 (not $x495)))
 (let (($x670 (= ?x371 0.0)))
 (let (($x823 (>= ?x1580 0.0)))
 (let ((@x491 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x513) $x823)) @x496 $x823)))
 (let (($x515 (or (not $x670) $x1293)))
 (let ((@x1315 (unit-resolution ((_ th-lemma arith) $x515) (hypothesis $x531) (hypothesis $x670) false)))
 (let ((@x1319 (unit-resolution (lemma @x1315 $x515) (symm ((_ th-lemma arith) @x449 @x491 (= 0.0 ?x371)) $x670) $x1293)))
 (let ((@x451 (unit-resolution (and-elim @x1178 $x1341) @x1319 $x971)))
 (let ((@x1385 ((_ th-lemma arith) (or $x1388 $x973))))
 (let (($x1034 (= 0.0 ?x1162)))
 (let (($x1358 (not $x1034)))
 (let ((@x1356 (symm (commutativity (= $x1034 (= ?x1162 0.0))) (= (= ?x1162 0.0) $x1034))))
 (let ((@x1355 (monotonicity @x1356 (= (not (= ?x1162 0.0)) $x1358))))
 (let (($x1127 (= ?x1162 0.0)))
 (let (($x1347 (not $x1127)))
 (let ((@x1318 ((_ th-lemma arith) (or $x1347 $x973))))
 (let ((@x334 (hypothesis $x1322)))
 (let ((@x1365 (unit-resolution ((_ th-lemma arith) (or (not $x500) $x1333 $x665 $x1603)) @x1332 @x509 (or $x1333 $x665))))
 (let ((@x1361 ((_ th-lemma arith triangle-eq) (or $x1034 $x1357 $x1359))))
 (let ((@x1371 (unit-resolution (unit-resolution @x1361 (unit-resolution @x1365 @x334 $x1333) (or $x1034 $x1359)) (mp (unit-resolution @x1318 @x451 $x1347) @x1355 $x1358) $x1359)))
 (let (($x487 (<= ?x371 0.0)))
 (let ((@x450 (lemma ((_ th-lemma arith) (hypothesis (not $x487)) @x491 false) $x487)))
 (let ((@x1373 (unit-resolution ((_ th-lemma arith) (or (not $x487) $x1285 $x665 $x1603)) @x1332 @x450 @x334 @x1371 false)))
 (let ((@x1399 (unit-resolution (lemma @x1373 (or $x665 $x1603)) @x1332 $x665)))
 (let ((@x1404 ((_ th-lemma arith triangle-eq) (or $x497 $x1322 $x1395))))
 (let ((@x457 (unit-resolution (unit-resolution @x1404 @x1399 (or $x497 $x1395)) (mp (unit-resolution @x1385 @x451 $x1388) @x1401 $x1391) $x1395)))
 (let ((@x1414 (unit-resolution ((_ th-lemma arith) (or (not $x487) $x1333 $x452 $x1603)) @x1332 @x450 @x1383 @x457 false)))
 (let ((@x455 (mp (lemma (unit-resolution @x1385 @x451 (hypothesis $x495) false) $x1388) @x1401 $x1391)))
 (let ((@x1413 (unit-resolution @x1404 @x455 (or $x1322 $x1395))))
 (let ((@x1418 (unit-resolution ((_ th-lemma arith) (or (not $x500) $x1285 $x452 $x1603)) @x1332 @x509 (unit-resolution @x1413 @x1399 $x1395) (hypothesis $x1359) false)))
 (let ((@x1245 (mp (lemma (unit-resolution @x1318 @x451 (hypothesis $x1127) false) $x1347) @x1355 $x1358)))
 (let ((@x1192 (unit-resolution @x1361 @x1245 (or $x1357 $x1359))))
 (let ((@x1423 (unit-resolution @x1192 (unit-resolution (lemma @x1418 (or $x1285 $x1603)) @x1332 $x1285) (unit-resolution (lemma @x1414 (or $x1333 $x1603)) @x1332 $x1333) false)))
 (let (($x242 (= 0.0 ?x972)))
 (let (($x1442 (not $x242)))
 (let ((@x1446 (monotonicity (symm (commutativity (= $x242 $x973)) (= $x973 $x242)) (= $x971 $x1442))))
 (let ((@x1326 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x242 $x1431 $x791)) (mp @x451 @x1446 $x1442) (or $x1431 $x791))))
 (let ((@x1449 (unit-resolution @x1326 (lemma @x1423 $x1603) $x1431)))
 (let ((@x842 (unit-resolution ((_ th-lemma arith) (or (not $x500) $x1333 $x452 $x188)) @x1449 @x509 @x1383 @x840 false)))
 (let ((@x941 (unit-resolution @x1192 (unit-resolution (lemma @x842 (or $x1333 $x452)) @x840 $x1333) $x1359)))
 (let ((@x1548 (unit-resolution ((_ th-lemma arith) (or (not $x487) $x1285 $x452 $x188)) @x1449 @x450 @x840 @x941 false)))
 (let ((@x925 (unit-resolution @x1413 (lemma @x1548 $x452) $x1322)))
 (let ((@x863 (unit-resolution ((_ th-lemma arith) (or (not $x487) $x1333 $x665 $x188)) @x1449 @x450 @x925 @x1383 false)))
 (unit-resolution ((_ th-lemma arith) (or (not $x500) $x1285 $x665 $x188)) @x1449 @x509 @x925 (unit-resolution @x1192 (lemma @x863 $x1333) $x1359) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       54
 :arith-eq-adapter                28
 :arith-conflicts                 54
 :arith-diseq                     37
 :arith-fixed-eqs                 2
 :arith-grobner-calls             6
 :arith-horner-calls              6
 :arith-horner-cross-nested-forms 6
 :arith-lower                     43
 :arith-make-feasible             66
 :arith-max-columns               67
 :arith-max-rows                  11
 :arith-nla-explanations          5
 :arith-nla-lemmas                52
 :arith-offset-eqs                17
 :arith-upper                     52
 :conflicts                       14
 :decisions                       57
 :del-clause                      110
 :final-checks                    45
 :max-memory                      19.80
 :memory                          17.46
 :minimized-lits                  2
 :mk-bool-var                     157
 :mk-clause                       112
 :num-allocs                      3285878
 :num-checks                      1
 :propagations                    51
 :rlimit-count                    7502
 :time                            0.04
 :total-time                      0.05)
