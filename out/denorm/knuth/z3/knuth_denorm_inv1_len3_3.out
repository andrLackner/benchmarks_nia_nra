unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun x!0 () Int)
(declare-fun q!3 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x1313 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 4 (* d!1 r!2)) (* (- 1) (* q!3 d!1 d!1)) (* 2 (* q!3 d!1)) (* (- 4) (* x!0 d!1)) (* (- 8) r!2))))
 (let (($x239 (>= ?x1313 0)))
 (let (($x757 (= ?x1313 0)))
 (let ((?x1272 (* 8 r!2)))
 (let ((?x1711 (* x!0 d!1)))
 (let ((?x1234 (* 4 ?x1711)))
 (let ((?x1376 (* q!3 d!1)))
 (let ((?x753 (* (- 2) ?x1376)))
 (let ((?x1368 (* q!3 d!1 d!1)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x1206 (+ ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 4) (* d!1 r!2)) ?x1368 ?x753 ?x1234 ?x1272)))
 (let ((?x1057 (* 2 r!2)))
 (let ((?x1359 (* (- 1) x!0)))
 (let ((?x1276 (+ ?x1359 q!3 ?x1057)))
 (let ((?x1702 (+ 2 d!1)))
 (let ((?x1228 (* (- 2) (* x!0 q!3 q!3 q!3 d!1 d!1 d!1 r!2 r!2 r!2))))
 (let ((?x1264 (* 8 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1323 (* 32 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x1560 (* 4 (* q!3 q!3 q!3 d!1 d!1 d!1 r!2 r!2 r!2 r!2))))
 (let ((?x189 (* 4 (* q!3 q!3 d!1 d!1 d!1 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x1311 (* 32 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x1025 (* q!3 q!3 q!3 q!3 r!2)))
 (let ((?x1220 (* (- 1) (* x!0 q!3 q!3 q!3 r!2))))
 (let ((?x1048 (* 2 (* q!3 q!3 q!3 r!2 r!2))))
 (let ((?x1218 (* (- 4) (* x!0 q!3 q!3 d!1 d!1 d!1 r!2 r!2 r!2 r!2))))
 (let ((?x1665 (+ (* q!3 q!3 q!3 q!3 d!1 d!1 d!1 r!2 r!2 r!2) (* (- 24) (* x!0 q!3 q!3 q!3 d!1 r!2 r!2 r!2)) ?x1218 (* (- 48) (* x!0 q!3 q!3 d!1 r!2 r!2 r!2 r!2)) ?x1048 ?x1220 (* 12 (* q!3 q!3 q!3 q!3 d!1 r!2 r!2 r!2)) (* (- 12) (* x!0 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2)) ?x1025 (* x!0 x!0 q!3 q!3 d!1 d!1 d!1 r!2 r!2 r!2) ?x1311 ?x189 (* 6 (* q!3 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2)) (* 12 (* x!0 x!0 q!3 q!3 d!1 r!2 r!2 r!2)) (* 48 (* q!3 q!3 d!1 r!2 r!2 r!2 r!2 r!2)) (* (- 16) (* x!0 q!3 q!3 q!3 r!2 r!2 r!2)) ?x1560 (* 48 (* q!3 q!3 q!3 d!1 r!2 r!2 r!2 r!2)) (* 24 (* q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2)) ?x1323 ?x1264 (* 24 (* q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2)) (* 8 (* x!0 x!0 q!3 q!3 r!2 r!2 r!2)) (* (- 32) (* x!0 q!3 q!3 r!2 r!2 r!2 r!2)) (* (- 24) (* x!0 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2)) ?x1228 (* (- 1) (* ?x1702 ?x1276 ?x1276 ?x1276 q!3)) (* 6 (* x!0 x!0 q!3 q!3 d!1 d!1 r!2 r!2 r!2)))))
 (let ((?x1607 (* ?x1665 ?x1206)))
 (let (($x1246 (= ?x1607 0)))
 (let (($x2071 (not $x1246)))
 (let ((?x2294 (* q!3 q!3 q!3 d!1 r!2)))
 (let ((?x1413 (+ 2 ?x1359 q!3 d!1 ?x1057)))
 (let ((?x550 (+ 4 q!3)))
 (let ((?x1428 (* 128 r!2)))
 (let ((?x1476 (* x!0 q!3 r!2)))
 (let ((?x1135 (* (- 48) ?x1476)))
 (let ((?x1420 (* q!3 q!3 d!1 r!2)))
 (let ((?x1130 (* 12 ?x1420)))
 (let ((?x1104 (* q!3 r!2)))
 (let ((?x1637 (* 160 ?x1104)))
 (let ((?x1052 (* d!1 r!2)))
 (let ((?x204 (* 64 ?x1052)))
 (let ((?x1026 (* q!3 r!2 r!2)))
 (let ((?x965 (* 96 ?x1026)))
 (let ((?x966 (* q!3 q!3 q!3 r!2)))
 (let ((?x334 (* 14 ?x966)))
 (let ((?x805 (* r!2 r!2)))
 (let ((?x1349 (* 128 ?x805)))
 (let ((?x733 (* q!3 q!3 r!2)))
 (let ((?x1053 (* 72 ?x733)))
 (let ((?x465 (* q!3 q!3 r!2 r!2)))
 (let ((?x1483 (* 24 ?x465)))
 (let ((?x2066 (+ ?x1483 ?x1053 ?x1048 ?x1349 (* ?x1702 ?x1702 ?x1702 ?x550 ?x550 ?x1413 ?x1413 r!2 r!2 r!2) ?x334 ?x1220 (* (- 64) (* x!0 r!2)) ?x1025 ?x965 ?x204 ?x1637 (* 48 (* q!3 d!1 r!2)) ?x1130 ?x1135 (* (- 12) (* x!0 q!3 q!3 r!2)) ?x1428 (* (- 1) (* ?x1702 ?x550 ?x1413 ?x1413 ?x1413)) ?x2294)))
 (let ((?x942 (* ?x2066 ?x1206)))
 (let (($x1484 (= ?x942 0)))
 (let ((?x1358 (* (- 1) d!1)))
 (let ((?x206 (+ (- 2) ?x1359 q!3 ?x1358 ?x1057)))
 (let ((?x1258 (+ (- 4) q!3)))
 (let ((?x1369 (* (- 160) ?x1104)))
 (let ((?x813 (* (- 14) ?x966)))
 (let ((?x1060 (* (- 128) ?x805)))
 (let ((?x1199 (* (- 24) ?x465)))
 (let ((?x738 (+ (* (- 1) (* ?x1258 ?x1702 ?x206 ?x206 ?x206)) ?x1199 ?x1053 ?x1048 ?x1060 ?x813 ?x1220 (* 64 (* x!0 r!2)) ?x1025 ?x965 ?x204 ?x1369 (* (- 48) (* q!3 d!1 r!2)) (* ?x1258 ?x1258 ?x1702 ?x1702 ?x1702 ?x206 ?x206 r!2 r!2 r!2) ?x1130 ?x1135 (* 12 (* x!0 q!3 q!3 r!2)) ?x1428 (* (- 1) ?x2294))))
 (let ((?x293 (* ?x738 ?x1206)))
 (let (($x1654 (= ?x293 0)))
 (let ((?x959 (* (- 2) d!1)))
 (let ((?x1139 (+ (- 4) ?x1359 q!3 ?x959 ?x1057)))
 (let ((?x1385 (+ (- 8) q!3)))
 (let ((?x1224 (* 2048 r!2)))
 (let ((?x167 (* (- 1280) ?x1104)))
 (let ((?x1308 (* 384 ?x1026)))
 (let ((?x1041 (* (- 28) ?x966)))
 (let ((?x1386 (* (- 1024) ?x805)))
 (let ((?x1360 (* 288 ?x733)))
 (let ((?x1148 (* (- 48) ?x465)))
 (let ((?x446 (+ ?x1148 ?x1360 ?x1048 ?x1386 ?x1041 ?x1220 (* 512 (* x!0 r!2)) ?x1025 ?x1308 (* 1024 ?x1052) ?x167 (* (- 384) (* q!3 d!1 r!2)) (* 48 ?x1420) (* (- 192) ?x1476) (* 24 (* x!0 q!3 q!3 r!2)) (* (- 1) (* ?x1385 ?x1702 ?x1139 ?x1139 ?x1139)) ?x1224 (* ?x1385 ?x1385 ?x1702 ?x1702 ?x1702 ?x1139 ?x1139 r!2 r!2 r!2) (* (- 2) ?x2294))))
 (let ((?x321 (* ?x446 ?x1206)))
 (let (($x2065 (= ?x321 0)))
 (let (($x1275 (not $x2065)))
 (let (($x619 (or $x1275 (not $x1654) (not $x1484) $x2071)))
 (let (($x2080 (and $x757 $x619)))
 (let ((?x938 (+ ?x1272 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1234 ?x1368 (* (- 4) (* r!2 d!1)) ?x753)))
 (let ((?x1046 (* (- 1) (* q!3 q!3 q!3 r!2 x!0))))
 (let ((?x1932 (+ (- 4) q!3 ?x1057 ?x1359 ?x959)))
 (let ((?x1536 (+ ?x1224 (* 512 (* r!2 x!0)) ?x167 ?x1386 (* (- 1) (* ?x1385 ?x1702 ?x1932 ?x1932 ?x1932)) ?x1360 ?x1025 ?x1041 (* ?x1385 ?x1385 ?x1702 ?x1702 ?x1702 ?x1932 ?x1932 r!2 r!2 r!2) (* 48 (* q!3 q!3 r!2 d!1)) ?x1308 ?x1148 (* 24 (* q!3 q!3 r!2 x!0)) (* (- 192) (* q!3 r!2 x!0)) (* (- 2) (* q!3 q!3 q!3 r!2 d!1)) (* (- 384) (* q!3 r!2 d!1)) ?x1048 ?x1046 (* 1024 (* r!2 d!1)))))
 (let ((?x1034 (* r!2 d!1)))
 (let ((?x1640 (* 64 ?x1034)))
 (let ((?x1215 (+ 2 q!3 ?x1057 ?x1359 d!1)))
 (let ((?x1187 (* q!3 q!3 q!3 r!2 d!1)))
 (let ((?x1000 (* q!3 r!2 x!0)))
 (let ((?x1197 (* (- 48) ?x1000)))
 (let ((?x1039 (* q!3 q!3 r!2 d!1)))
 (let ((?x1105 (* 12 ?x1039)))
 (let ((?x1040 (+ ?x1428 (* (- 64) (* r!2 x!0)) ?x1637 ?x1349 ?x1053 ?x1025 ?x334 (* ?x1702 ?x1702 ?x1702 ?x550 ?x550 ?x1215 ?x1215 r!2 r!2 r!2) ?x1105 ?x965 ?x1483 (* (- 12) (* q!3 q!3 r!2 x!0)) ?x1197 ?x1187 (* 48 (* q!3 r!2 d!1)) ?x1048 ?x1046 (* (- 1) (* ?x1702 ?x550 ?x1215 ?x1215 ?x1215)) ?x1640)))
 (let ((?x1175 (+ (- 2) q!3 ?x1057 ?x1359 ?x1358)))
 (let ((?x447 (+ ?x1428 (* 64 (* r!2 x!0)) (* ?x1258 ?x1258 ?x1702 ?x1702 ?x1702 ?x1175 ?x1175 r!2 r!2 r!2) ?x1369 ?x1060 ?x1053 ?x1025 ?x813 ?x1105 ?x965 ?x1199 (* 12 (* q!3 q!3 r!2 x!0)) ?x1197 (* (- 1) ?x1187) (* (- 48) (* q!3 r!2 d!1)) ?x1048 ?x1046 (* (- 1) (* ?x1258 ?x1702 ?x1175 ?x1175 ?x1175)) ?x1640)))
 (let ((?x500 (* 4 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x727 (+ q!3 ?x1057 ?x1359)))
 (let ((?x1314 (* 4 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x1023 (* (- 4) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1 d!1 d!1))))
 (let ((?x1225 (* (- 2) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1 d!1 d!1))))
 (let ((?x1112 (+ ?x1025 (* (- 48) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1)) (* (- 24) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1)) (* (- 12) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1 d!1)) ?x1225 (* (- 24) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1 d!1)) ?x1023 ?x1048 ?x1046 (* 12 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1)) (* 6 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1 d!1)) ?x1264 (* 12 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1)) (* 6 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1)) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1 d!1) ?x1323 (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1)) (* 24 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1 d!1)) ?x1314 (* (- 16) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0)) (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1 d!1 d!1) (* (- 1) (* ?x1702 ?x727 ?x727 ?x727 q!3)) ?x1311 (* 48 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1)) (* 24 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1 d!1)) ?x500 (* 8 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0)) (* (- 32) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0)))))
 (let (($x1341 (or (not (= (* ?x1112 ?x938) 0)) (not (= (* ?x447 ?x938) 0)) (not (= (* ?x1040 ?x938) 0)) (not (= (* ?x1536 ?x938) 0)))))
 (let (($x1352 (and (= ?x938 0) $x1341)))
 (let (($x624 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2215 (* (- 2) (* q d))))
 (let ((?x2220 (* r d)))
 (let ((?x2219 (* (- 4) ?x2220)))
 (let ((?x2218 (* q d d)))
 (let ((?x773 (* 4 (* x d))))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x1882 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x773 ?x2218 ?x2219 ?x2215)))
 (let ((?x2412 (* 1024 ?x2220)))
 (let ((?x1630 (* (- 1) (* q q q r x))))
 (let ((?x1624 (* 2 (* q q q r r))))
 (let ((?x1552 (* q q q r d)))
 (let ((?x2424 (* (- 2) ?x1552)))
 (let ((?x2428 (* (- 2) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x2184 (+ (- 4) q ?x130 ?x161 ?x2428)))
 (let ((?x2334 (+ 2 d)))
 (let ((?x2427 (+ (- 8) q)))
 (let ((?x1445 (* ?x2427 ?x2427 ?x2334 ?x2334 ?x2334 ?x2184 ?x2184 r r r)))
 (let ((?x414 (* q q q r)))
 (let ((?x2415 (* (- 28) ?x414)))
 (let ((?x411 (* q q q q r)))
 (let ((?x438 (* (- 1) (* ?x2427 ?x2334 ?x2184 ?x2184 ?x2184))))
 (let ((?x377 (* r r)))
 (let ((?x2418 (* (- 1024) ?x377)))
 (let ((?x169 (* r x)))
 (let ((?x2423 (* 512 ?x169)))
 (let ((?x2411 (* 2048 r)))
 (let ((?x1657 (+ ?x2411 ?x2423 (* (- 1280) (* q r)) ?x2418 ?x438 (* 288 (* q q r)) ?x411 ?x2415 ?x1445 (* 48 (* q q r d)) (* 384 (* q r r)) (* (- 48) (* q q r r)) (* 24 (* q q r x)) (* (- 192) (* q r x)) ?x2424 (* (- 384) (* q r d)) ?x1624 ?x1630 ?x2412)))
 (let ((?x2333 (* 64 ?x2220)))
 (let ((?x1608 (+ 2 q ?x130 ?x161 d)))
 (let ((?x2335 (+ 4 q)))
 (let ((?x1840 (* (- 1) (* ?x2334 ?x2335 ?x1608 ?x1608 ?x1608))))
 (let ((?x1547 (* q r x)))
 (let ((?x1459 (* (- 48) ?x1547)))
 (let ((?x1540 (* q r r)))
 (let ((?x1441 (* 96 ?x1540)))
 (let ((?x1529 (* q q r d)))
 (let ((?x1530 (* 12 ?x1529)))
 (let ((?x1378 (* ?x2334 ?x2334 ?x2334 ?x2335 ?x2335 ?x1608 ?x1608 r r r)))
 (let ((?x417 (* 14 ?x414)))
 (let ((?x401 (* q q r)))
 (let ((?x1087 (* 72 ?x401)))
 (let ((?x952 (* 128 ?x377)))
 (let ((?x1550 (* (- 64) ?x169)))
 (let ((?x2332 (* 128 r)))
 (let ((?x1452 (+ ?x2332 ?x1550 (* 160 (* q r)) ?x952 ?x1087 ?x411 ?x417 ?x1378 ?x1530 ?x1441 (* 24 (* q q r r)) (* (- 12) (* q q r x)) ?x1459 ?x1552 (* 48 (* q r d)) ?x1624 ?x1630 ?x1840 ?x2333)))
 (let ((?x2384 (* (- 1) d)))
 (let ((?x1888 (+ (- 2) q ?x130 ?x161 ?x2384)))
 (let ((?x2383 (+ (- 4) q)))
 (let ((?x1718 (* (- 1) (* ?x2383 ?x2334 ?x1888 ?x1888 ?x1888))))
 (let ((?x2380 (* (- 1) ?x1552)))
 (let ((?x2373 (* (- 14) ?x414)))
 (let ((?x2376 (* (- 128) ?x377)))
 (let ((?x260 (* ?x2383 ?x2383 ?x2334 ?x2334 ?x2334 ?x1888 ?x1888 r r r)))
 (let ((?x2379 (* 64 ?x169)))
 (let ((?x1406 (+ ?x2332 ?x2379 ?x260 (* (- 160) (* q r)) ?x2376 ?x1087 ?x411 ?x2373 ?x1530 ?x1441 (* (- 24) (* q q r r)) (* 12 (* q q r x)) ?x1459 ?x2380 (* (- 48) (* q r d)) ?x1624 ?x1630 ?x1718 ?x2333)))
 (let ((?x2363 (* (- 32) (* q q r r r r x))))
 (let ((?x2355 (* 8 (* q q r r r x x))))
 (let ((?x2344 (* 4 (* q q r r r r r d d d))))
 (let ((?x2099 (* 32 (* q q r r r r r))))
 (let ((?x2349 (+ q ?x130 ?x161)))
 (let ((?x172 (* (- 1) (* ?x2334 ?x2349 ?x2349 ?x2349 q))))
 (let ((?x2072 (* q q r r r x x d d d)))
 (let ((?x2057 (* (- 16) (* q q q r r r x))))
 (let ((?x2055 (* 4 (* q q q r r r r d d d))))
 (let ((?x2037 (* 32 (* q q q r r r r))))
 (let ((?x2028 (* q q q q r r r d d d)))
 (let ((?x2027 (* 6 (* q q q q r r r d d))))
 (let ((?x1945 (* 8 (* q q q q r r r))))
 (let ((?x2086 (* (- 4) (* q q r r r r x d d d))))
 (let ((?x2083 (* (- 2) (* q q q r r r x d d d))))
 (let ((?x889 (+ ?x411 (* (- 48) (* q q r r r r x d)) (* (- 24) (* q q q r r r x d)) (* (- 12) (* q q q r r r x d d)) ?x2083 (* (- 24) (* q q r r r r x d d)) ?x2086 ?x1624 ?x1630 (* 12 (* q q r r r x x d)) (* 6 (* q q r r r x x d d)) ?x1945 (* 12 (* q q q q r r r d)) ?x2027 ?x2028 ?x2037 (* 48 (* q q q r r r r d)) (* 24 (* q q q r r r r d d)) ?x2055 ?x2057 ?x2072 ?x172 ?x2099 (* 48 (* q q r r r r r d)) (* 24 (* q q r r r r r d d)) ?x2344 ?x2355 ?x2363)))
 (let (($x1421 (or (not (= (* ?x889 ?x1882) 0)) (not (= (* ?x1406 ?x1882) 0)) (not (= (* ?x1452 ?x1882) 0)) (not (= (* ?x1657 ?x1882) 0)))))
 (let (($x2306 (= ?x1882 0)))
 (and $x2306 $x1421))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x2200 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2215 (* (- 2) (* q d))))
 (let ((?x2220 (* r d)))
 (let ((?x2219 (* (- 4) ?x2220)))
 (let ((?x2218 (* q d d)))
 (let ((?x773 (* 4 (* x d))))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x1882 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x773 ?x2218 ?x2219 ?x2215)))
 (let ((?x2363 (* (- 32) (* q q r r r r x))))
 (let ((?x2355 (* 8 (* q q r r r x x))))
 (let ((?x2344 (* 4 (* q q r r r r r d d d))))
 (let ((?x2103 (* q q r r r r r d d)))
 (let ((?x2104 (* 16 ?x2103)))
 (let ((?x2100 (* q q r r r r r d)))
 (let ((?x2102 (* 32 ?x2100)))
 (let ((?x2099 (* 32 (* q q r r r r r))))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x2349 (+ q ?x130 ?x161)))
 (let ((?x2334 (+ 2 d)))
 (let ((?x172 (* (- 1) (* ?x2334 ?x2349 ?x2349 ?x2349 q))))
 (let ((?x2072 (* q q r r r x x d d d)))
 (let ((?x2057 (* (- 16) (* q q q r r r x))))
 (let ((?x2055 (* 4 (* q q q r r r r d d d))))
 (let ((?x2040 (* q q q r r r r d d)))
 (let ((?x2053 (* 16 ?x2040)))
 (let ((?x2038 (* q q q r r r r d)))
 (let ((?x2039 (* 32 ?x2038)))
 (let ((?x2037 (* 32 (* q q q r r r r))))
 (let ((?x2028 (* q q q q r r r d d d)))
 (let ((?x2027 (* 6 (* q q q q r r r d d))))
 (let ((?x2024 (* q q q q r r r d)))
 (let ((?x2025 (* 8 ?x2024)))
 (let ((?x1945 (* 8 (* q q q q r r r))))
 (let ((?x1630 (* (- 1) (* q q q r x))))
 (let ((?x1624 (* 2 (* q q q r r))))
 (let ((?x2086 (* (- 4) (* q q r r r r x d d d))))
 (let ((?x2083 (* (- 2) (* q q q r r r x d d d))))
 (let ((?x411 (* q q q q r)))
 (let ((?x529 (+ (* 2 (* d 2 ?x130 ?x130 r r r q q)) ?x411 (* 2 (* d d ?x161 q r r r q q)) (* 2 (* d d ?x161 ?x130 r r r q q)) (* 2 (* d d q ?x161 r r r q q)) (* 2 (* d 2 ?x161 ?x161 r r r q q)) (* (- 32) (* q q r r r r x d)) (* 2 (* d d q ?x130 r r r q q)) (* 2 (* d 2 ?x161 ?x130 r r r q q)) (* 2 (* d 2 q ?x161 r r r q q)) (* 2 (* d 2 ?x130 ?x161 r r r q q)) (* 2 (* d d ?x130 ?x161 r r r q q)) (* 2 (* d d ?x161 ?x161 r r r q q)) (* 2 (* d 2 q ?x130 r r r q q)) (* (- 16) (* q q q r r r x d)) (* (- 8) (* q q q r r r x d d)) ?x2083 (* 2 (* d 2 ?x161 q r r r q q)) (* 2 (* d d ?x130 ?x130 r r r q q)) (* (- 16) (* q q r r r r x d d)) ?x2086 (* 2 (* d d ?x130 q r r r q q)) (* 2 (* d 2 ?x130 q r r r q q)) ?x1624 ?x1630 (* 2 (* d 2 q q r r r q q)) (* 8 (* q q r r r x x d)) (* 4 (* q q r r r x x d d)) ?x1945 ?x2025 ?x2027 ?x2028 ?x2037 ?x2039 ?x2053 ?x2055 ?x2057 ?x2072 ?x172 ?x2099 ?x2102 ?x2104 ?x2344 ?x2355 ?x2363)))
 (let ((?x2368 (* 8 d)))
 (let ((?x562 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 4) (* d 2)) ?x773 ?x2368 ?x2218 ?x2219 ?x2215)))
 (let ((?x2402 (* (- 4) (* q (- 4) (- 2) r))))
 (let ((?x2400 (* (- 4) (* q (- 4) ?x161 r))))
 (let ((?x2398 (* (- 4) (* q q (* (- 1) d) r))))
 (let ((?x2396 (* (- 4) (* q (- 4) (* (- 1) d) r))))
 (let ((?x2394 (* (- 4) (* q (- 4) ?x130 r))))
 (let ((?x2392 (* (- 4) (* q (- 4) q r))))
 (let ((?x2390 (* (- 4) (* q q (- 2) r))))
 (let ((?x2333 (* 64 ?x2220)))
 (let ((?x2384 (* (- 1) d)))
 (let ((?x1888 (+ (- 2) q ?x130 ?x161 ?x2384)))
 (let ((?x2383 (+ (- 4) q)))
 (let ((?x1718 (* (- 1) (* ?x2383 ?x2334 ?x1888 ?x1888 ?x1888))))
 (let ((?x1594 (* q r d)))
 (let ((?x2382 (* (- 32) ?x1594)))
 (let ((?x1552 (* q q q r d)))
 (let ((?x2380 (* (- 1) ?x1552)))
 (let ((?x1547 (* q r x)))
 (let ((?x1549 (* (- 32) ?x1547)))
 (let ((?x1546 (* q q r x)))
 (let ((?x2378 (* 8 ?x1546)))
 (let ((?x1543 (* q q r r)))
 (let ((?x2377 (* (- 16) ?x1543)))
 (let ((?x1540 (* q r r)))
 (let ((?x1541 (* 64 ?x1540)))
 (let ((?x1529 (* q q r d)))
 (let ((?x2381 (* 8 ?x1529)))
 (let ((?x950 (* q q ?x161 r)))
 (let ((?x2375 (* (- 4) ?x950)))
 (let ((?x421 (* q q ?x130 r)))
 (let ((?x2374 (* (- 4) ?x421)))
 (let ((?x414 (* q q q r)))
 (let ((?x2373 (* (- 14) ?x414)))
 (let ((?x401 (* q q r)))
 (let ((?x402 (* 48 ?x401)))
 (let ((?x377 (* r r)))
 (let ((?x2376 (* (- 128) ?x377)))
 (let ((?x273 (* q r)))
 (let ((?x2372 (* (- 128) ?x273)))
 (let ((?x260 (* ?x2383 ?x2383 ?x2334 ?x2334 ?x2334 ?x1888 ?x1888 r r r)))
 (let ((?x169 (* r x)))
 (let ((?x2379 (* 64 ?x169)))
 (let ((?x2332 (* 128 r)))
 (let ((?x1454 (+ ?x2332 ?x2379 ?x260 ?x2372 ?x2376 ?x402 ?x411 ?x2373 ?x2374 ?x2375 ?x2381 ?x1541 ?x2377 ?x2378 ?x1549 ?x2380 ?x2382 ?x1624 ?x1630 ?x1718 ?x2333 ?x2390 ?x2392 ?x2394 ?x2396 ?x2398 ?x2400 ?x2402)))
 (let ((?x2166 (* 2 (* d 4))))
 (let ((?x2223 (* (- 8) d)))
 (let ((?x1608 (+ 2 q ?x130 ?x161 d)))
 (let ((?x2335 (+ 4 q)))
 (let ((?x1840 (* (- 1) (* ?x2334 ?x2335 ?x1608 ?x1608 ?x1608))))
 (let ((?x1627 (* 4 (* q 4 2 r))))
 (let ((?x1595 (* 32 ?x1594)))
 (let ((?x1548 (* (- 8) ?x1546)))
 (let ((?x1545 (* 16 ?x1543)))
 (let ((?x1530 (* 12 ?x1529)))
 (let ((?x1378 (* ?x2334 ?x2334 ?x2334 ?x2335 ?x2335 ?x1608 ?x1608 r r r)))
 (let ((?x951 (* 4 ?x950)))
 (let ((?x928 (* 4 (* q 4 ?x161 r))))
 (let ((?x504 (* 4 (* q 4 d r))))
 (let ((?x485 (* 4 ?x421)))
 (let ((?x417 (* 14 ?x414)))
 (let ((?x413 (* 4 (* q 4 ?x130 r))))
 (let ((?x952 (* 128 ?x377)))
 (let ((?x372 (* 4 (* q 4 q r))))
 (let ((?x350 (* 4 (* q q 2 r))))
 (let ((?x2341 (* 128 ?x273)))
 (let ((?x1550 (* (- 64) ?x169)))
 (let ((?x1871 (+ ?x2332 ?x1550 ?x2341 ?x350 ?x372 ?x952 ?x402 ?x411 ?x413 ?x417 ?x485 ?x504 ?x928 ?x951 ?x1378 ?x1530 ?x1541 ?x1545 ?x1548 ?x1549 ?x1552 ?x1595 ?x1624 ?x1627 ?x1630 ?x1840 ?x2333)))
 (let ((?x732 (* ?x1871 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x773 ?x2223 ?x2166 ?x2218 ?x2219 ?x2215))))
 (let ((?x2407 (* 16 d)))
 (let ((?x697 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 8) (* d 2)) ?x773 ?x2407 ?x2218 ?x2219 ?x2215)))
 (let ((?x2446 (* (- 8) (* q (- 8) (- 4) r))))
 (let ((?x2444 (* (- 8) (* q (- 8) ?x161 r))))
 (let ((?x2442 (* (- 8) (* q q (* (- 2) d) r))))
 (let ((?x2440 (* (- 8) (* q (- 8) (* (- 2) d) r))))
 (let ((?x2438 (* (- 8) (* q (- 8) ?x130 r))))
 (let ((?x2436 (* (- 8) (* q (- 8) q r))))
 (let ((?x2434 (* (- 8) (* q q (- 4) r))))
 (let ((?x2412 (* 1024 ?x2220)))
 (let ((?x2426 (* (- 256) ?x1594)))
 (let ((?x2424 (* (- 2) ?x1552)))
 (let ((?x2422 (* (- 128) ?x1547)))
 (let ((?x2421 (* 16 ?x1546)))
 (let ((?x2420 (* (- 32) ?x1543)))
 (let ((?x2419 (* 256 ?x1540)))
 (let ((?x2425 (* 32 ?x1529)))
 (let ((?x2428 (* (- 2) d)))
 (let ((?x2184 (+ (- 4) q ?x130 ?x161 ?x2428)))
 (let ((?x2427 (+ (- 8) q)))
 (let ((?x1445 (* ?x2427 ?x2427 ?x2334 ?x2334 ?x2334 ?x2184 ?x2184 r r r)))
 (let ((?x2417 (* (- 8) ?x950)))
 (let ((?x2416 (* (- 8) ?x421)))
 (let ((?x2415 (* (- 28) ?x414)))
 (let ((?x2414 (* 192 ?x401)))
 (let ((?x438 (* (- 1) (* ?x2427 ?x2334 ?x2184 ?x2184 ?x2184))))
 (let ((?x2418 (* (- 1024) ?x377)))
 (let ((?x2413 (* (- 1024) ?x273)))
 (let ((?x2423 (* 512 ?x169)))
 (let ((?x2411 (* 2048 r)))
 (let ((?x820 (+ ?x2411 ?x2423 ?x2413 ?x2418 ?x438 ?x2414 ?x411 ?x2415 ?x2416 ?x2417 ?x1445 ?x2425 ?x2419 ?x2420 ?x2421 ?x2422 ?x2424 ?x2426 ?x1624 ?x1630 ?x2412 ?x2434 ?x2436 ?x2438 ?x2440 ?x2442 ?x2444 ?x2446)))
 (let (($x2289 (or (not (= (* ?x820 ?x697) 0)) (not (= ?x732 0)) (not (= (* ?x1454 ?x562) 0)) (not (= (* ?x529 ?x1882) 0)))))
 (let (($x2306 (= ?x1882 0)))
 (and $x2306 $x2289))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1641 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2215 (* (- 2) (* q d))))
 (let ((?x2220 (* r d)))
 (let ((?x2219 (* (- 4) ?x2220)))
 (let ((?x2218 (* q d d)))
 (let ((?x773 (* 4 (* x d))))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x1882 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x773 ?x2218 ?x2219 ?x2215)))
 (let ((?x2412 (* 1024 ?x2220)))
 (let ((?x1630 (* (- 1) (* q q q r x))))
 (let ((?x1624 (* 2 (* q q q r r))))
 (let ((?x1552 (* q q q r d)))
 (let ((?x2424 (* (- 2) ?x1552)))
 (let ((?x2428 (* (- 2) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x2184 (+ (- 4) q ?x130 ?x161 ?x2428)))
 (let ((?x2334 (+ 2 d)))
 (let ((?x2427 (+ (- 8) q)))
 (let ((?x1445 (* ?x2427 ?x2427 ?x2334 ?x2334 ?x2334 ?x2184 ?x2184 r r r)))
 (let ((?x414 (* q q q r)))
 (let ((?x2415 (* (- 28) ?x414)))
 (let ((?x411 (* q q q q r)))
 (let ((?x438 (* (- 1) (* ?x2427 ?x2334 ?x2184 ?x2184 ?x2184))))
 (let ((?x377 (* r r)))
 (let ((?x2418 (* (- 1024) ?x377)))
 (let ((?x169 (* r x)))
 (let ((?x2423 (* 512 ?x169)))
 (let ((?x2411 (* 2048 r)))
 (let ((?x1657 (+ ?x2411 ?x2423 (* (- 1280) (* q r)) ?x2418 ?x438 (* 288 (* q q r)) ?x411 ?x2415 ?x1445 (* 48 (* q q r d)) (* 384 (* q r r)) (* (- 48) (* q q r r)) (* 24 (* q q r x)) (* (- 192) (* q r x)) ?x2424 (* (- 384) (* q r d)) ?x1624 ?x1630 ?x2412)))
 (let ((?x2333 (* 64 ?x2220)))
 (let ((?x1608 (+ 2 q ?x130 ?x161 d)))
 (let ((?x2335 (+ 4 q)))
 (let ((?x1840 (* (- 1) (* ?x2334 ?x2335 ?x1608 ?x1608 ?x1608))))
 (let ((?x1547 (* q r x)))
 (let ((?x1459 (* (- 48) ?x1547)))
 (let ((?x1540 (* q r r)))
 (let ((?x1441 (* 96 ?x1540)))
 (let ((?x1529 (* q q r d)))
 (let ((?x1530 (* 12 ?x1529)))
 (let ((?x1378 (* ?x2334 ?x2334 ?x2334 ?x2335 ?x2335 ?x1608 ?x1608 r r r)))
 (let ((?x417 (* 14 ?x414)))
 (let ((?x401 (* q q r)))
 (let ((?x1087 (* 72 ?x401)))
 (let ((?x952 (* 128 ?x377)))
 (let ((?x1550 (* (- 64) ?x169)))
 (let ((?x2332 (* 128 r)))
 (let ((?x1452 (+ ?x2332 ?x1550 (* 160 (* q r)) ?x952 ?x1087 ?x411 ?x417 ?x1378 ?x1530 ?x1441 (* 24 (* q q r r)) (* (- 12) (* q q r x)) ?x1459 ?x1552 (* 48 (* q r d)) ?x1624 ?x1630 ?x1840 ?x2333)))
 (let ((?x2384 (* (- 1) d)))
 (let ((?x1888 (+ (- 2) q ?x130 ?x161 ?x2384)))
 (let ((?x2383 (+ (- 4) q)))
 (let ((?x1718 (* (- 1) (* ?x2383 ?x2334 ?x1888 ?x1888 ?x1888))))
 (let ((?x2380 (* (- 1) ?x1552)))
 (let ((?x2373 (* (- 14) ?x414)))
 (let ((?x2376 (* (- 128) ?x377)))
 (let ((?x260 (* ?x2383 ?x2383 ?x2334 ?x2334 ?x2334 ?x1888 ?x1888 r r r)))
 (let ((?x2379 (* 64 ?x169)))
 (let ((?x1406 (+ ?x2332 ?x2379 ?x260 (* (- 160) (* q r)) ?x2376 ?x1087 ?x411 ?x2373 ?x1530 ?x1441 (* (- 24) (* q q r r)) (* 12 (* q q r x)) ?x1459 ?x2380 (* (- 48) (* q r d)) ?x1624 ?x1630 ?x1718 ?x2333)))
 (let ((?x2363 (* (- 32) (* q q r r r r x))))
 (let ((?x2355 (* 8 (* q q r r r x x))))
 (let ((?x2344 (* 4 (* q q r r r r r d d d))))
 (let ((?x2099 (* 32 (* q q r r r r r))))
 (let ((?x2349 (+ q ?x130 ?x161)))
 (let ((?x172 (* (- 1) (* ?x2334 ?x2349 ?x2349 ?x2349 q))))
 (let ((?x2072 (* q q r r r x x d d d)))
 (let ((?x2057 (* (- 16) (* q q q r r r x))))
 (let ((?x2055 (* 4 (* q q q r r r r d d d))))
 (let ((?x2037 (* 32 (* q q q r r r r))))
 (let ((?x2028 (* q q q q r r r d d d)))
 (let ((?x2027 (* 6 (* q q q q r r r d d))))
 (let ((?x1945 (* 8 (* q q q q r r r))))
 (let ((?x2086 (* (- 4) (* q q r r r r x d d d))))
 (let ((?x2083 (* (- 2) (* q q q r r r x d d d))))
 (let ((?x889 (+ ?x411 (* (- 48) (* q q r r r r x d)) (* (- 24) (* q q q r r r x d)) (* (- 12) (* q q q r r r x d d)) ?x2083 (* (- 24) (* q q r r r r x d d)) ?x2086 ?x1624 ?x1630 (* 12 (* q q r r r x x d)) (* 6 (* q q r r r x x d d)) ?x1945 (* 12 (* q q q q r r r d)) ?x2027 ?x2028 ?x2037 (* 48 (* q q q r r r r d)) (* 24 (* q q q r r r r d d)) ?x2055 ?x2057 ?x2072 ?x172 ?x2099 (* 48 (* q q r r r r r d)) (* 24 (* q q r r r r r d d)) ?x2344 ?x2355 ?x2363)))
 (let (($x1421 (or (not (= (* ?x889 ?x1882) 0)) (not (= (* ?x1406 ?x1882) 0)) (not (= (* ?x1452 ?x1882) 0)) (not (= (* ?x1657 ?x1882) 0)))))
 (let (($x2306 (= ?x1882 0)))
 (let (($x1075 (and $x2306 $x1421)))
 (let ((?x2103 (* q q r r r r r d d)))
 (let ((?x2104 (* 16 ?x2103)))
 (let ((?x2100 (* q q r r r r r d)))
 (let ((?x2102 (* 32 ?x2100)))
 (let ((?x2040 (* q q q r r r r d d)))
 (let ((?x2053 (* 16 ?x2040)))
 (let ((?x2038 (* q q q r r r r d)))
 (let ((?x2039 (* 32 ?x2038)))
 (let ((?x2024 (* q q q q r r r d)))
 (let ((?x2025 (* 8 ?x2024)))
 (let ((?x529 (+ (* 2 (* d 2 ?x130 ?x130 r r r q q)) ?x411 (* 2 (* d d ?x161 q r r r q q)) (* 2 (* d d ?x161 ?x130 r r r q q)) (* 2 (* d d q ?x161 r r r q q)) (* 2 (* d 2 ?x161 ?x161 r r r q q)) (* (- 32) (* q q r r r r x d)) (* 2 (* d d q ?x130 r r r q q)) (* 2 (* d 2 ?x161 ?x130 r r r q q)) (* 2 (* d 2 q ?x161 r r r q q)) (* 2 (* d 2 ?x130 ?x161 r r r q q)) (* 2 (* d d ?x130 ?x161 r r r q q)) (* 2 (* d d ?x161 ?x161 r r r q q)) (* 2 (* d 2 q ?x130 r r r q q)) (* (- 16) (* q q q r r r x d)) (* (- 8) (* q q q r r r x d d)) ?x2083 (* 2 (* d 2 ?x161 q r r r q q)) (* 2 (* d d ?x130 ?x130 r r r q q)) (* (- 16) (* q q r r r r x d d)) ?x2086 (* 2 (* d d ?x130 q r r r q q)) (* 2 (* d 2 ?x130 q r r r q q)) ?x1624 ?x1630 (* 2 (* d 2 q q r r r q q)) (* 8 (* q q r r r x x d)) (* 4 (* q q r r r x x d d)) ?x1945 ?x2025 ?x2027 ?x2028 ?x2037 ?x2039 ?x2053 ?x2055 ?x2057 ?x2072 ?x172 ?x2099 ?x2102 ?x2104 ?x2344 ?x2355 ?x2363)))
 (let ((?x2368 (* 8 d)))
 (let ((?x562 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 4) (* d 2)) ?x773 ?x2368 ?x2218 ?x2219 ?x2215)))
 (let ((?x2402 (* (- 4) (* q (- 4) (- 2) r))))
 (let ((?x2400 (* (- 4) (* q (- 4) ?x161 r))))
 (let ((?x2398 (* (- 4) (* q q ?x2384 r))))
 (let ((?x2396 (* (- 4) (* q (- 4) ?x2384 r))))
 (let ((?x2394 (* (- 4) (* q (- 4) ?x130 r))))
 (let ((?x2392 (* (- 4) (* q (- 4) q r))))
 (let ((?x2390 (* (- 4) (* q q (- 2) r))))
 (let ((?x1594 (* q r d)))
 (let ((?x2382 (* (- 32) ?x1594)))
 (let ((?x1549 (* (- 32) ?x1547)))
 (let ((?x1546 (* q q r x)))
 (let ((?x2378 (* 8 ?x1546)))
 (let ((?x1543 (* q q r r)))
 (let ((?x2377 (* (- 16) ?x1543)))
 (let ((?x1541 (* 64 ?x1540)))
 (let ((?x2381 (* 8 ?x1529)))
 (let ((?x950 (* q q ?x161 r)))
 (let ((?x2375 (* (- 4) ?x950)))
 (let ((?x421 (* q q ?x130 r)))
 (let ((?x2374 (* (- 4) ?x421)))
 (let ((?x402 (* 48 ?x401)))
 (let ((?x273 (* q r)))
 (let ((?x2372 (* (- 128) ?x273)))
 (let ((?x1454 (+ ?x2332 ?x2379 ?x260 ?x2372 ?x2376 ?x402 ?x411 ?x2373 ?x2374 ?x2375 ?x2381 ?x1541 ?x2377 ?x2378 ?x1549 ?x2380 ?x2382 ?x1624 ?x1630 ?x1718 ?x2333 ?x2390 ?x2392 ?x2394 ?x2396 ?x2398 ?x2400 ?x2402)))
 (let ((?x2166 (* 2 (* d 4))))
 (let ((?x2223 (* (- 8) d)))
 (let ((?x1627 (* 4 (* q 4 2 r))))
 (let ((?x1595 (* 32 ?x1594)))
 (let ((?x1548 (* (- 8) ?x1546)))
 (let ((?x1545 (* 16 ?x1543)))
 (let ((?x951 (* 4 ?x950)))
 (let ((?x928 (* 4 (* q 4 ?x161 r))))
 (let ((?x504 (* 4 (* q 4 d r))))
 (let ((?x485 (* 4 ?x421)))
 (let ((?x413 (* 4 (* q 4 ?x130 r))))
 (let ((?x372 (* 4 (* q 4 q r))))
 (let ((?x350 (* 4 (* q q 2 r))))
 (let ((?x2341 (* 128 ?x273)))
 (let ((?x1871 (+ ?x2332 ?x1550 ?x2341 ?x350 ?x372 ?x952 ?x402 ?x411 ?x413 ?x417 ?x485 ?x504 ?x928 ?x951 ?x1378 ?x1530 ?x1541 ?x1545 ?x1548 ?x1549 ?x1552 ?x1595 ?x1624 ?x1627 ?x1630 ?x1840 ?x2333)))
 (let ((?x732 (* ?x1871 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x773 ?x2223 ?x2166 ?x2218 ?x2219 ?x2215))))
 (let ((?x2407 (* 16 d)))
 (let ((?x697 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 8) (* d 2)) ?x773 ?x2407 ?x2218 ?x2219 ?x2215)))
 (let ((?x2446 (* (- 8) (* q (- 8) (- 4) r))))
 (let ((?x2444 (* (- 8) (* q (- 8) ?x161 r))))
 (let ((?x2442 (* (- 8) (* q q ?x2428 r))))
 (let ((?x2440 (* (- 8) (* q (- 8) ?x2428 r))))
 (let ((?x2438 (* (- 8) (* q (- 8) ?x130 r))))
 (let ((?x2436 (* (- 8) (* q (- 8) q r))))
 (let ((?x2434 (* (- 8) (* q q (- 4) r))))
 (let ((?x2426 (* (- 256) ?x1594)))
 (let ((?x2422 (* (- 128) ?x1547)))
 (let ((?x2421 (* 16 ?x1546)))
 (let ((?x2420 (* (- 32) ?x1543)))
 (let ((?x2419 (* 256 ?x1540)))
 (let ((?x2425 (* 32 ?x1529)))
 (let ((?x2417 (* (- 8) ?x950)))
 (let ((?x2416 (* (- 8) ?x421)))
 (let ((?x2414 (* 192 ?x401)))
 (let ((?x2413 (* (- 1024) ?x273)))
 (let ((?x820 (+ ?x2411 ?x2423 ?x2413 ?x2418 ?x438 ?x2414 ?x411 ?x2415 ?x2416 ?x2417 ?x1445 ?x2425 ?x2419 ?x2420 ?x2421 ?x2422 ?x2424 ?x2426 ?x1624 ?x1630 ?x2412 ?x2434 ?x2436 ?x2438 ?x2440 ?x2442 ?x2444 ?x2446)))
 (let (($x2289 (or (not (= (* ?x820 ?x697) 0)) (not (= ?x732 0)) (not (= (* ?x1454 ?x562) 0)) (not (= (* ?x529 ?x1882) 0)))))
 (let (($x599 (and $x2306 $x2289)))
 (rewrite (= $x599 $x1075)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x458 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1145 (* 4 (* d00 r00))))
 (let ((?x383 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x384 (* 4 (* (+ 2 d) r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x1444 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1525 (+ ?x409 ?x1444 ?x30 ?x164 ?x384 ?x196 ?x212 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x262 ?x383 ?x1145)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x420 (+ ?x130 ?x161 q)))
 (let ((?x2334 (+ 2 d)))
 (let ((?x920 (+ (* ?x2334 ?x2334 ?x2334 ?x420 ?x420 r r r q q) (* (- 1) (* ?x2334 ?x420 ?x420 ?x420 q)) (* ?x420 r q q q))))
 (let (($x1520 (not (= (* ?x920 ?x1525) 0))))
 (let ((?x2368 (* 8 d)))
 (let ((?x1622 (+ 16 ?x409 ?x1444 ?x30 ?x2368 ?x164 ?x384 ?x196 ?x212 (* ?x2334 ?x2334 (+ 4 q)) (* (- 2) (* ?x2334 (+ 4 q))) ?x262 (* (- 4) (* ?x2334 (+ 2 ?x130 ?x161 q d))) ?x1145)))
 (let ((?x1447 (+ 2 ?x130 ?x161 q d)))
 (let ((?x2335 (+ 4 q)))
 (let ((?x1597 (+ (* ?x2334 ?x2334 ?x2334 ?x2335 ?x2335 ?x1447 ?x1447 r r r) (* (- 1) (* ?x2334 ?x2335 ?x1447 ?x1447 ?x1447)) (* ?x2335 ?x2335 ?x2335 ?x1447 r))))
 (let (($x873 (not (= (* ?x1597 ?x1622) 0))))
 (let ((?x1588 (+ (- 32) ?x409 ?x1444 ?x30 (* (- 16) d) ?x164 ?x384 ?x196 ?x212 (* (+ (- 8) q) ?x2334 ?x2334) (* (- 2) (* (+ (- 8) q) ?x2334)) ?x262 (* (- 4) (* ?x2334 (+ (- 4) ?x130 ?x161 q (* (- 2) d)))) ?x1145)))
 (let ((?x2428 (* (- 2) d)))
 (let ((?x1872 (+ (- 4) ?x130 ?x161 q ?x2428)))
 (let ((?x2427 (+ (- 8) q)))
 (let ((?x843 (+ (* ?x2427 ?x2427 ?x2334 ?x2334 ?x2334 ?x1872 ?x1872 r r r) (* (- 1) (* ?x2427 ?x2334 ?x1872 ?x1872 ?x1872)) (* ?x2427 ?x2427 ?x2427 ?x1872 r))))
 (let (($x795 (not (= (* ?x843 ?x1588) 0))))
 (let ((?x2223 (* (- 8) d)))
 (let ((?x917 (+ (- 16) ?x409 ?x1444 ?x30 ?x2223 ?x164 ?x384 ?x196 ?x212 (* (+ (- 4) q) ?x2334 ?x2334) (* (- 2) (* (+ (- 4) q) ?x2334)) ?x262 (* (- 4) (* ?x2334 (+ (- 2) ?x130 ?x161 q (* (- 1) d)))) ?x1145)))
 (let ((?x2384 (* (- 1) d)))
 (let ((?x338 (+ (- 2) ?x130 ?x161 q ?x2384)))
 (let ((?x2383 (+ (- 4) q)))
 (let ((?x910 (+ (* ?x2383 ?x2383 ?x2334 ?x2334 ?x2334 ?x338 ?x338 r r r) (* (- 1) (* ?x2383 ?x2334 ?x338 ?x338 ?x338)) (* ?x2383 ?x2383 ?x2383 ?x338 r))))
 (let (($x369 (not (= (* ?x910 ?x917) 0))))
 (let ((?x773 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x1870 (+ ?x193 ?x164 ?x773 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x1145)))
 (let (($x1769 (= ?x1870 0)))
 (and $x1769 (or $x369 $x795 $x873 $x1520))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x906 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2215 (* (- 2) (* q d))))
 (let ((?x2220 (* r d)))
 (let ((?x2219 (* (- 4) ?x2220)))
 (let ((?x2218 (* q d d)))
 (let ((?x773 (* 4 (* x d))))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x1882 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x773 ?x2218 ?x2219 ?x2215)))
 (let ((?x2363 (* (- 32) (* q q r r r r x))))
 (let ((?x2355 (* 8 (* q q r r r x x))))
 (let ((?x2344 (* 4 (* q q r r r r r d d d))))
 (let ((?x2103 (* q q r r r r r d d)))
 (let ((?x2104 (* 16 ?x2103)))
 (let ((?x2100 (* q q r r r r r d)))
 (let ((?x2102 (* 32 ?x2100)))
 (let ((?x2099 (* 32 (* q q r r r r r))))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x2349 (+ q ?x130 ?x161)))
 (let ((?x2334 (+ 2 d)))
 (let ((?x172 (* (- 1) (* ?x2334 ?x2349 ?x2349 ?x2349 q))))
 (let ((?x2072 (* q q r r r x x d d d)))
 (let ((?x2057 (* (- 16) (* q q q r r r x))))
 (let ((?x2055 (* 4 (* q q q r r r r d d d))))
 (let ((?x2040 (* q q q r r r r d d)))
 (let ((?x2053 (* 16 ?x2040)))
 (let ((?x2038 (* q q q r r r r d)))
 (let ((?x2039 (* 32 ?x2038)))
 (let ((?x2037 (* 32 (* q q q r r r r))))
 (let ((?x2028 (* q q q q r r r d d d)))
 (let ((?x2027 (* 6 (* q q q q r r r d d))))
 (let ((?x2024 (* q q q q r r r d)))
 (let ((?x2025 (* 8 ?x2024)))
 (let ((?x1945 (* 8 (* q q q q r r r))))
 (let ((?x1630 (* (- 1) (* q q q r x))))
 (let ((?x1624 (* 2 (* q q q r r))))
 (let ((?x2086 (* (- 4) (* q q r r r r x d d d))))
 (let ((?x2083 (* (- 2) (* q q q r r r x d d d))))
 (let ((?x411 (* q q q q r)))
 (let ((?x529 (+ (* 2 (* d 2 ?x130 ?x130 r r r q q)) ?x411 (* 2 (* d d ?x161 q r r r q q)) (* 2 (* d d ?x161 ?x130 r r r q q)) (* 2 (* d d q ?x161 r r r q q)) (* 2 (* d 2 ?x161 ?x161 r r r q q)) (* (- 32) (* q q r r r r x d)) (* 2 (* d d q ?x130 r r r q q)) (* 2 (* d 2 ?x161 ?x130 r r r q q)) (* 2 (* d 2 q ?x161 r r r q q)) (* 2 (* d 2 ?x130 ?x161 r r r q q)) (* 2 (* d d ?x130 ?x161 r r r q q)) (* 2 (* d d ?x161 ?x161 r r r q q)) (* 2 (* d 2 q ?x130 r r r q q)) (* (- 16) (* q q q r r r x d)) (* (- 8) (* q q q r r r x d d)) ?x2083 (* 2 (* d 2 ?x161 q r r r q q)) (* 2 (* d d ?x130 ?x130 r r r q q)) (* (- 16) (* q q r r r r x d d)) ?x2086 (* 2 (* d d ?x130 q r r r q q)) (* 2 (* d 2 ?x130 q r r r q q)) ?x1624 ?x1630 (* 2 (* d 2 q q r r r q q)) (* 8 (* q q r r r x x d)) (* 4 (* q q r r r x x d d)) ?x1945 ?x2025 ?x2027 ?x2028 ?x2037 ?x2039 ?x2053 ?x2055 ?x2057 ?x2072 ?x172 ?x2099 ?x2102 ?x2104 ?x2344 ?x2355 ?x2363)))
 (let ((?x2368 (* 8 d)))
 (let ((?x562 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 4) (* d 2)) ?x773 ?x2368 ?x2218 ?x2219 ?x2215)))
 (let ((?x2402 (* (- 4) (* q (- 4) (- 2) r))))
 (let ((?x2400 (* (- 4) (* q (- 4) ?x161 r))))
 (let ((?x2398 (* (- 4) (* q q (* (- 1) d) r))))
 (let ((?x2396 (* (- 4) (* q (- 4) (* (- 1) d) r))))
 (let ((?x2394 (* (- 4) (* q (- 4) ?x130 r))))
 (let ((?x2392 (* (- 4) (* q (- 4) q r))))
 (let ((?x2390 (* (- 4) (* q q (- 2) r))))
 (let ((?x2333 (* 64 ?x2220)))
 (let ((?x2384 (* (- 1) d)))
 (let ((?x1888 (+ (- 2) q ?x130 ?x161 ?x2384)))
 (let ((?x2383 (+ (- 4) q)))
 (let ((?x1718 (* (- 1) (* ?x2383 ?x2334 ?x1888 ?x1888 ?x1888))))
 (let ((?x1594 (* q r d)))
 (let ((?x2382 (* (- 32) ?x1594)))
 (let ((?x1552 (* q q q r d)))
 (let ((?x2380 (* (- 1) ?x1552)))
 (let ((?x1547 (* q r x)))
 (let ((?x1549 (* (- 32) ?x1547)))
 (let ((?x1546 (* q q r x)))
 (let ((?x2378 (* 8 ?x1546)))
 (let ((?x1543 (* q q r r)))
 (let ((?x2377 (* (- 16) ?x1543)))
 (let ((?x1540 (* q r r)))
 (let ((?x1541 (* 64 ?x1540)))
 (let ((?x1529 (* q q r d)))
 (let ((?x2381 (* 8 ?x1529)))
 (let ((?x950 (* q q ?x161 r)))
 (let ((?x2375 (* (- 4) ?x950)))
 (let ((?x421 (* q q ?x130 r)))
 (let ((?x2374 (* (- 4) ?x421)))
 (let ((?x414 (* q q q r)))
 (let ((?x2373 (* (- 14) ?x414)))
 (let ((?x401 (* q q r)))
 (let ((?x402 (* 48 ?x401)))
 (let ((?x377 (* r r)))
 (let ((?x2376 (* (- 128) ?x377)))
 (let ((?x273 (* q r)))
 (let ((?x2372 (* (- 128) ?x273)))
 (let ((?x260 (* ?x2383 ?x2383 ?x2334 ?x2334 ?x2334 ?x1888 ?x1888 r r r)))
 (let ((?x169 (* r x)))
 (let ((?x2379 (* 64 ?x169)))
 (let ((?x2332 (* 128 r)))
 (let ((?x1454 (+ ?x2332 ?x2379 ?x260 ?x2372 ?x2376 ?x402 ?x411 ?x2373 ?x2374 ?x2375 ?x2381 ?x1541 ?x2377 ?x2378 ?x1549 ?x2380 ?x2382 ?x1624 ?x1630 ?x1718 ?x2333 ?x2390 ?x2392 ?x2394 ?x2396 ?x2398 ?x2400 ?x2402)))
 (let ((?x2166 (* 2 (* d 4))))
 (let ((?x2223 (* (- 8) d)))
 (let ((?x1608 (+ 2 q ?x130 ?x161 d)))
 (let ((?x2335 (+ 4 q)))
 (let ((?x1840 (* (- 1) (* ?x2334 ?x2335 ?x1608 ?x1608 ?x1608))))
 (let ((?x1627 (* 4 (* q 4 2 r))))
 (let ((?x1595 (* 32 ?x1594)))
 (let ((?x1548 (* (- 8) ?x1546)))
 (let ((?x1545 (* 16 ?x1543)))
 (let ((?x1530 (* 12 ?x1529)))
 (let ((?x1378 (* ?x2334 ?x2334 ?x2334 ?x2335 ?x2335 ?x1608 ?x1608 r r r)))
 (let ((?x951 (* 4 ?x950)))
 (let ((?x928 (* 4 (* q 4 ?x161 r))))
 (let ((?x504 (* 4 (* q 4 d r))))
 (let ((?x485 (* 4 ?x421)))
 (let ((?x417 (* 14 ?x414)))
 (let ((?x413 (* 4 (* q 4 ?x130 r))))
 (let ((?x952 (* 128 ?x377)))
 (let ((?x372 (* 4 (* q 4 q r))))
 (let ((?x350 (* 4 (* q q 2 r))))
 (let ((?x2341 (* 128 ?x273)))
 (let ((?x1550 (* (- 64) ?x169)))
 (let ((?x1871 (+ ?x2332 ?x1550 ?x2341 ?x350 ?x372 ?x952 ?x402 ?x411 ?x413 ?x417 ?x485 ?x504 ?x928 ?x951 ?x1378 ?x1530 ?x1541 ?x1545 ?x1548 ?x1549 ?x1552 ?x1595 ?x1624 ?x1627 ?x1630 ?x1840 ?x2333)))
 (let ((?x732 (* ?x1871 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x773 ?x2223 ?x2166 ?x2218 ?x2219 ?x2215))))
 (let ((?x2407 (* 16 d)))
 (let ((?x697 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 8) (* d 2)) ?x773 ?x2407 ?x2218 ?x2219 ?x2215)))
 (let ((?x2446 (* (- 8) (* q (- 8) (- 4) r))))
 (let ((?x2444 (* (- 8) (* q (- 8) ?x161 r))))
 (let ((?x2442 (* (- 8) (* q q (* (- 2) d) r))))
 (let ((?x2440 (* (- 8) (* q (- 8) (* (- 2) d) r))))
 (let ((?x2438 (* (- 8) (* q (- 8) ?x130 r))))
 (let ((?x2436 (* (- 8) (* q (- 8) q r))))
 (let ((?x2434 (* (- 8) (* q q (- 4) r))))
 (let ((?x2412 (* 1024 ?x2220)))
 (let ((?x2426 (* (- 256) ?x1594)))
 (let ((?x2424 (* (- 2) ?x1552)))
 (let ((?x2422 (* (- 128) ?x1547)))
 (let ((?x2421 (* 16 ?x1546)))
 (let ((?x2420 (* (- 32) ?x1543)))
 (let ((?x2419 (* 256 ?x1540)))
 (let ((?x2425 (* 32 ?x1529)))
 (let ((?x2428 (* (- 2) d)))
 (let ((?x2184 (+ (- 4) q ?x130 ?x161 ?x2428)))
 (let ((?x2427 (+ (- 8) q)))
 (let ((?x1445 (* ?x2427 ?x2427 ?x2334 ?x2334 ?x2334 ?x2184 ?x2184 r r r)))
 (let ((?x2417 (* (- 8) ?x950)))
 (let ((?x2416 (* (- 8) ?x421)))
 (let ((?x2415 (* (- 28) ?x414)))
 (let ((?x2414 (* 192 ?x401)))
 (let ((?x438 (* (- 1) (* ?x2427 ?x2334 ?x2184 ?x2184 ?x2184))))
 (let ((?x2418 (* (- 1024) ?x377)))
 (let ((?x2413 (* (- 1024) ?x273)))
 (let ((?x2423 (* 512 ?x169)))
 (let ((?x2411 (* 2048 r)))
 (let ((?x820 (+ ?x2411 ?x2423 ?x2413 ?x2418 ?x438 ?x2414 ?x411 ?x2415 ?x2416 ?x2417 ?x1445 ?x2425 ?x2419 ?x2420 ?x2421 ?x2422 ?x2424 ?x2426 ?x1624 ?x1630 ?x2412 ?x2434 ?x2436 ?x2438 ?x2440 ?x2442 ?x2444 ?x2446)))
 (let (($x2289 (or (not (= (* ?x820 ?x697) 0)) (not (= ?x732 0)) (not (= (* ?x1454 ?x562) 0)) (not (= (* ?x529 ?x1882) 0)))))
 (let (($x2306 (= ?x1882 0)))
 (let (($x599 (and $x2306 $x2289)))
 (let ((?x1145 (* 4 (* d00 r00))))
 (let ((?x384 (* 4 (* ?x2334 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x1444 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1525 (+ ?x409 ?x1444 ?x30 ?x164 ?x384 ?x196 ?x212 (* ?x2334 ?x2334 q) (* (- 2) (* ?x2334 q)) ?x262 (* (- 4) (* ?x2334 (+ ?x130 ?x161 q))) ?x1145)))
 (let ((?x420 (+ ?x130 ?x161 q)))
 (let ((?x920 (+ (* ?x2334 ?x2334 ?x2334 ?x420 ?x420 r r r q q) (* (- 1) (* ?x2334 ?x420 ?x420 ?x420 q)) (* ?x420 r q q q))))
 (let (($x1520 (not (= (* ?x920 ?x1525) 0))))
 (let ((?x1622 (+ 16 ?x409 ?x1444 ?x30 ?x2368 ?x164 ?x384 ?x196 ?x212 (* ?x2334 ?x2334 ?x2335) (* (- 2) (* ?x2334 ?x2335)) ?x262 (* (- 4) (* ?x2334 (+ 2 ?x130 ?x161 q d))) ?x1145)))
 (let ((?x1447 (+ 2 ?x130 ?x161 q d)))
 (let ((?x1597 (+ (* ?x2334 ?x2334 ?x2334 ?x2335 ?x2335 ?x1447 ?x1447 r r r) (* (- 1) (* ?x2334 ?x2335 ?x1447 ?x1447 ?x1447)) (* ?x2335 ?x2335 ?x2335 ?x1447 r))))
 (let (($x873 (not (= (* ?x1597 ?x1622) 0))))
 (let ((?x1588 (+ (- 32) ?x409 ?x1444 ?x30 (* (- 16) d) ?x164 ?x384 ?x196 ?x212 (* ?x2427 ?x2334 ?x2334) (* (- 2) (* ?x2427 ?x2334)) ?x262 (* (- 4) (* ?x2334 (+ (- 4) ?x130 ?x161 q ?x2428))) ?x1145)))
 (let ((?x1872 (+ (- 4) ?x130 ?x161 q ?x2428)))
 (let ((?x843 (+ (* ?x2427 ?x2427 ?x2334 ?x2334 ?x2334 ?x1872 ?x1872 r r r) (* (- 1) (* ?x2427 ?x2334 ?x1872 ?x1872 ?x1872)) (* ?x2427 ?x2427 ?x2427 ?x1872 r))))
 (let (($x795 (not (= (* ?x843 ?x1588) 0))))
 (let ((?x917 (+ (- 16) ?x409 ?x1444 ?x30 ?x2223 ?x164 ?x384 ?x196 ?x212 (* ?x2383 ?x2334 ?x2334) (* (- 2) (* ?x2383 ?x2334)) ?x262 (* (- 4) (* ?x2334 (+ (- 2) ?x130 ?x161 q ?x2384))) ?x1145)))
 (let ((?x338 (+ (- 2) ?x130 ?x161 q ?x2384)))
 (let ((?x910 (+ (* ?x2383 ?x2383 ?x2334 ?x2334 ?x2334 ?x338 ?x338 r r r) (* (- 1) (* ?x2383 ?x2334 ?x338 ?x338 ?x338)) (* ?x2383 ?x2383 ?x2383 ?x338 r))))
 (let (($x369 (not (= (* ?x910 ?x917) 0))))
 (let ((?x1870 (+ ?x193 ?x164 ?x773 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x1145)))
 (let (($x1769 (= ?x1870 0)))
 (let (($x266 (and $x1769 (or $x369 $x795 $x873 $x1520))))
 (rewrite (= $x266 $x599))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2032 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1145 (* 4 (* d00 r00))))
 (let ((?x383 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x384 (* 4 (* (+ 2 d) r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x1444 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1525 (+ ?x409 ?x1444 ?x30 ?x164 ?x384 ?x196 ?x212 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x262 ?x383 ?x1145)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x420 (+ ?x130 ?x161 q)))
 (let ((?x2334 (+ 2 d)))
 (let ((?x920 (+ (* ?x2334 ?x2334 ?x2334 ?x420 ?x420 r r r q q) (* (- 1) (* ?x2334 ?x420 ?x420 ?x420 q)) (* ?x420 r q q q))))
 (let (($x1520 (not (= (* ?x920 ?x1525) 0))))
 (let ((?x2223 (* (- 8) d)))
 (let ((?x917 (+ (- 16) ?x409 ?x1444 ?x30 ?x2223 ?x164 ?x384 ?x196 ?x212 (* (+ (- 4) q) ?x2334 ?x2334) (* (- 2) (* (+ (- 4) q) ?x2334)) ?x262 (* (- 4) (* ?x2334 (+ (- 2) ?x130 ?x161 q (* (- 1) d)))) ?x1145)))
 (let ((?x2384 (* (- 1) d)))
 (let ((?x338 (+ (- 2) ?x130 ?x161 q ?x2384)))
 (let ((?x2383 (+ (- 4) q)))
 (let ((?x910 (+ (* ?x2383 ?x2383 ?x2334 ?x2334 ?x2334 ?x338 ?x338 r r r) (* (- 1) (* ?x2383 ?x2334 ?x338 ?x338 ?x338)) (* ?x2383 ?x2383 ?x2383 ?x338 r))))
 (let (($x369 (not (= (* ?x910 ?x917) 0))))
 (let ((?x2368 (* 8 d)))
 (let ((?x1622 (+ 16 ?x409 ?x1444 ?x30 ?x2368 ?x164 ?x384 ?x196 ?x212 (* ?x2334 ?x2334 (+ 4 q)) (* (- 2) (* ?x2334 (+ 4 q))) ?x262 (* (- 4) (* ?x2334 (+ 2 ?x130 ?x161 q d))) ?x1145)))
 (let ((?x1447 (+ 2 ?x130 ?x161 q d)))
 (let ((?x2335 (+ 4 q)))
 (let ((?x1597 (+ (* ?x2334 ?x2334 ?x2334 ?x2335 ?x2335 ?x1447 ?x1447 r r r) (* (- 1) (* ?x2334 ?x2335 ?x1447 ?x1447 ?x1447)) (* ?x2335 ?x2335 ?x2335 ?x1447 r))))
 (let (($x873 (not (= (* ?x1597 ?x1622) 0))))
 (let ((?x1588 (+ (- 32) ?x409 ?x1444 ?x30 (* (- 16) d) ?x164 ?x384 ?x196 ?x212 (* (+ (- 8) q) ?x2334 ?x2334) (* (- 2) (* (+ (- 8) q) ?x2334)) ?x262 (* (- 4) (* ?x2334 (+ (- 4) ?x130 ?x161 q (* (- 2) d)))) ?x1145)))
 (let ((?x2428 (* (- 2) d)))
 (let ((?x1872 (+ (- 4) ?x130 ?x161 q ?x2428)))
 (let ((?x2427 (+ (- 8) q)))
 (let ((?x843 (+ (* ?x2427 ?x2427 ?x2334 ?x2334 ?x2334 ?x1872 ?x1872 r r r) (* (- 1) (* ?x2427 ?x2334 ?x1872 ?x1872 ?x1872)) (* ?x2427 ?x2427 ?x2427 ?x1872 r))))
 (let (($x795 (not (= (* ?x843 ?x1588) 0))))
 (let ((?x773 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x1870 (+ ?x193 ?x164 ?x773 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x1145)))
 (let (($x1769 (= ?x1870 0)))
 (and $x1769 (or $x795 $x873 $x369 $x1520))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x832 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1145 (* 4 (* d00 r00))))
 (let ((?x383 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x384 (* 4 (* (+ 2 d) r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x1444 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1525 (+ ?x409 ?x1444 ?x30 ?x164 ?x384 ?x196 ?x212 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x262 ?x383 ?x1145)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x420 (+ ?x130 ?x161 q)))
 (let ((?x2334 (+ 2 d)))
 (let ((?x920 (+ (* ?x2334 ?x2334 ?x2334 ?x420 ?x420 r r r q q) (* (- 1) (* ?x2334 ?x420 ?x420 ?x420 q)) (* ?x420 r q q q))))
 (let (($x1520 (not (= (* ?x920 ?x1525) 0))))
 (let ((?x2368 (* 8 d)))
 (let ((?x1622 (+ 16 ?x409 ?x1444 ?x30 ?x2368 ?x164 ?x384 ?x196 ?x212 (* ?x2334 ?x2334 (+ 4 q)) (* (- 2) (* ?x2334 (+ 4 q))) ?x262 (* (- 4) (* ?x2334 (+ 2 ?x130 ?x161 q d))) ?x1145)))
 (let ((?x1447 (+ 2 ?x130 ?x161 q d)))
 (let ((?x2335 (+ 4 q)))
 (let ((?x1597 (+ (* ?x2334 ?x2334 ?x2334 ?x2335 ?x2335 ?x1447 ?x1447 r r r) (* (- 1) (* ?x2334 ?x2335 ?x1447 ?x1447 ?x1447)) (* ?x2335 ?x2335 ?x2335 ?x1447 r))))
 (let (($x873 (not (= (* ?x1597 ?x1622) 0))))
 (let ((?x1588 (+ (- 32) ?x409 ?x1444 ?x30 (* (- 16) d) ?x164 ?x384 ?x196 ?x212 (* (+ (- 8) q) ?x2334 ?x2334) (* (- 2) (* (+ (- 8) q) ?x2334)) ?x262 (* (- 4) (* ?x2334 (+ (- 4) ?x130 ?x161 q (* (- 2) d)))) ?x1145)))
 (let ((?x2428 (* (- 2) d)))
 (let ((?x1872 (+ (- 4) ?x130 ?x161 q ?x2428)))
 (let ((?x2427 (+ (- 8) q)))
 (let ((?x843 (+ (* ?x2427 ?x2427 ?x2334 ?x2334 ?x2334 ?x1872 ?x1872 r r r) (* (- 1) (* ?x2427 ?x2334 ?x1872 ?x1872 ?x1872)) (* ?x2427 ?x2427 ?x2427 ?x1872 r))))
 (let (($x795 (not (= (* ?x843 ?x1588) 0))))
 (let ((?x2223 (* (- 8) d)))
 (let ((?x917 (+ (- 16) ?x409 ?x1444 ?x30 ?x2223 ?x164 ?x384 ?x196 ?x212 (* (+ (- 4) q) ?x2334 ?x2334) (* (- 2) (* (+ (- 4) q) ?x2334)) ?x262 (* (- 4) (* ?x2334 (+ (- 2) ?x130 ?x161 q (* (- 1) d)))) ?x1145)))
 (let ((?x2384 (* (- 1) d)))
 (let ((?x338 (+ (- 2) ?x130 ?x161 q ?x2384)))
 (let ((?x2383 (+ (- 4) q)))
 (let ((?x910 (+ (* ?x2383 ?x2383 ?x2334 ?x2334 ?x2334 ?x338 ?x338 r r r) (* (- 1) (* ?x2383 ?x2334 ?x338 ?x338 ?x338)) (* ?x2383 ?x2383 ?x2383 ?x338 r))))
 (let (($x369 (not (= (* ?x910 ?x917) 0))))
 (let ((?x773 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x1870 (+ ?x193 ?x164 ?x773 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x1145)))
 (let (($x1769 (= ?x1870 0)))
 (let (($x266 (and $x1769 (or $x369 $x795 $x873 $x1520))))
 (let (($x2042 (and $x1769 (or $x795 $x873 $x369 $x1520))))
 (rewrite (= $x2042 $x266))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x157 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x132 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x138 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x149 (- (* ?x62 ?x62 ?x62 ?x138 ?x138 ?x132 ?x132 r r r) (* ?x62 ?x138 ?x132 ?x132 ?x132))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x136 (- (+ (- (* 8 ?x132) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x143 (+ (- (+ (- ?x136 ?x41) (* ?x62 ?x62 ?x138)) (* 2 ?x62 ?x138)) ?x49)))
 (let ((?x152 (* (+ (- ?x143 (* 4 ?x62 ?x132)) ?x53) (+ ?x149 (* ?x138 ?x138 ?x138 ?x132 r)))))
 (let ((?x107 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x113 (- q 4)))
 (let ((?x124 (- (* ?x62 ?x62 ?x62 ?x113 ?x113 ?x107 ?x107 r r r) (* ?x62 ?x113 ?x107 ?x107 ?x107))))
 (let ((?x111 (- (+ (- (* 8 ?x107) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x118 (+ (- (+ (- ?x111 ?x41) (* ?x62 ?x62 ?x113)) (* 2 ?x62 ?x113)) ?x49)))
 (let ((?x127 (* (+ (- ?x118 (* 4 ?x62 ?x107)) ?x53) (+ ?x124 (* ?x113 ?x113 ?x113 ?x107 r)))))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x84 (+ ?x58 q)))
 (let ((?x100 (- (* ?x62 ?x62 ?x62 q q ?x84 ?x84 r r r) (* ?x62 q ?x84 ?x84 ?x84))))
 (let ((?x88 (- (+ (- (* 8 ?x84) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x103 (* (+ (- ?x94 (* 4 ?x62 ?x84)) ?x53) (+ ?x100 (* q q q ?x84 r)))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x78 (- (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 r r r) (* ?x62 ?x67 ?x59 ?x59 ?x59))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x81 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (+ ?x78 (* ?x67 ?x67 ?x67 ?x59 r)))))
 (let (($x155 (or (not (= ?x81 0)) (not (= ?x103 0)) (not (= ?x127 0)) (not (= ?x152 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x155))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1778 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x1145 (* 4 (* d00 r00))))
 (let ((?x1824 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x452 (* 4 (* (+ 2 d) r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x1397 (* 8 q)))
 (let ((?x1444 (* (- 8) x)))
 (let ((?x904 (* 16 r)))
 (let ((?x1758 (+ ?x904 ?x1444 ?x1397 ?x164 ?x452 ?x196 ?x212 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x262 ?x1824 ?x1145)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x884 (+ ?x57 ?x161 q)))
 (let ((?x267 (+ 2 d)))
 (let ((?x674 (+ (* ?x267 ?x267 ?x267 ?x884 ?x884 r r r q q) (* (- 1) (* ?x267 ?x884 ?x884 ?x884 q)) (* ?x884 r q q q))))
 (let ((?x454 (* (- 8) d)))
 (let ((?x1616 (+ (- 16) ?x904 ?x1444 ?x1397 ?x454 ?x164 ?x452 ?x196 ?x212 (* (+ (- 4) q) ?x267 ?x267) (* (- 2) (* (+ (- 4) q) ?x267)) ?x262 (* (- 4) (* ?x267 (+ (- 2) ?x57 ?x161 q (* (- 1) d)))) ?x1145)))
 (let ((?x1101 (* (- 1) d)))
 (let ((?x1836 (+ (- 2) ?x57 ?x161 q ?x1101)))
 (let ((?x880 (+ (- 4) q)))
 (let ((?x497 (+ (* ?x880 ?x880 ?x267 ?x267 ?x267 ?x1836 ?x1836 r r r) (* (- 1) (* ?x880 ?x267 ?x1836 ?x1836 ?x1836)) (* ?x880 ?x880 ?x880 ?x1836 r))))
 (let ((?x193 (* 8 d)))
 (let ((?x1788 (+ 16 ?x904 ?x1444 ?x1397 ?x193 ?x164 ?x452 ?x196 ?x212 (* ?x267 ?x267 (+ 4 q)) (* (- 2) (* ?x267 (+ 4 q))) ?x262 (* (- 4) (* ?x267 (+ 2 ?x57 ?x161 q d))) ?x1145)))
 (let ((?x304 (+ 2 ?x57 ?x161 q d)))
 (let ((?x351 (+ 4 q)))
 (let ((?x1803 (+ (* ?x267 ?x267 ?x267 ?x351 ?x351 ?x304 ?x304 r r r) (* (- 1) (* ?x267 ?x351 ?x304 ?x304 ?x304)) (* ?x351 ?x351 ?x351 ?x304 r))))
 (let ((?x2267 (+ (- 32) ?x904 ?x1444 ?x1397 (* (- 16) d) ?x164 ?x452 ?x196 ?x212 (* (+ (- 8) q) ?x267 ?x267) (* (- 2) (* (+ (- 8) q) ?x267)) ?x262 (* (- 4) (* ?x267 (+ (- 4) ?x57 ?x161 q (* (- 2) d)))) ?x1145)))
 (let ((?x1929 (* (- 2) d)))
 (let ((?x1903 (+ (- 4) ?x57 ?x161 q ?x1929)))
 (let ((?x1669 (+ (- 8) q)))
 (let ((?x939 (+ (* ?x1669 ?x1669 ?x267 ?x267 ?x267 ?x1903 ?x1903 r r r) (* (- 1) (* ?x1669 ?x267 ?x1903 ?x1903 ?x1903)) (* ?x1669 ?x1669 ?x1669 ?x1903 r))))
 (let (($x1874 (or (not (= (* ?x939 ?x2267) 0)) (not (= (* ?x1803 ?x1788) 0)) (not (= (* ?x497 ?x1616) 0)) (not (= (* ?x674 ?x1758) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x342 (+ ?x30 ?x164 (* 4 (* x d)) ?x196 ?x212 ?x44 (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x1145)))
 (and (= ?x342 0) $x1874)))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1402 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x1145 (* 4 (* d00 r00))))
 (let ((?x1824 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x452 (* 4 (* (+ 2 d) r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x1397 (* 8 q)))
 (let ((?x1444 (* (- 8) x)))
 (let ((?x904 (* 16 r)))
 (let ((?x1758 (+ ?x904 ?x1444 ?x1397 ?x164 ?x452 ?x196 ?x212 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x262 ?x1824 ?x1145)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x884 (+ ?x57 ?x161 q)))
 (let ((?x267 (+ 2 d)))
 (let ((?x674 (+ (* ?x267 ?x267 ?x267 ?x884 ?x884 r r r q q) (* (- 1) (* ?x267 ?x884 ?x884 ?x884 q)) (* ?x884 r q q q))))
 (let ((?x454 (* (- 8) d)))
 (let ((?x1616 (+ (- 16) ?x904 ?x1444 ?x1397 ?x454 ?x164 ?x452 ?x196 ?x212 (* (+ (- 4) q) ?x267 ?x267) (* (- 2) (* (+ (- 4) q) ?x267)) ?x262 (* (- 4) (* ?x267 (+ (- 2) ?x57 ?x161 q (* (- 1) d)))) ?x1145)))
 (let ((?x1101 (* (- 1) d)))
 (let ((?x1836 (+ (- 2) ?x57 ?x161 q ?x1101)))
 (let ((?x880 (+ (- 4) q)))
 (let ((?x497 (+ (* ?x880 ?x880 ?x267 ?x267 ?x267 ?x1836 ?x1836 r r r) (* (- 1) (* ?x880 ?x267 ?x1836 ?x1836 ?x1836)) (* ?x880 ?x880 ?x880 ?x1836 r))))
 (let ((?x193 (* 8 d)))
 (let ((?x1788 (+ 16 ?x904 ?x1444 ?x1397 ?x193 ?x164 ?x452 ?x196 ?x212 (* ?x267 ?x267 (+ 4 q)) (* (- 2) (* ?x267 (+ 4 q))) ?x262 (* (- 4) (* ?x267 (+ 2 ?x57 ?x161 q d))) ?x1145)))
 (let ((?x304 (+ 2 ?x57 ?x161 q d)))
 (let ((?x351 (+ 4 q)))
 (let ((?x1803 (+ (* ?x267 ?x267 ?x267 ?x351 ?x351 ?x304 ?x304 r r r) (* (- 1) (* ?x267 ?x351 ?x304 ?x304 ?x304)) (* ?x351 ?x351 ?x351 ?x304 r))))
 (let ((?x2267 (+ (- 32) ?x904 ?x1444 ?x1397 (* (- 16) d) ?x164 ?x452 ?x196 ?x212 (* (+ (- 8) q) ?x267 ?x267) (* (- 2) (* (+ (- 8) q) ?x267)) ?x262 (* (- 4) (* ?x267 (+ (- 4) ?x57 ?x161 q (* (- 2) d)))) ?x1145)))
 (let ((?x1929 (* (- 2) d)))
 (let ((?x1903 (+ (- 4) ?x57 ?x161 q ?x1929)))
 (let ((?x1669 (+ (- 8) q)))
 (let ((?x939 (+ (* ?x1669 ?x1669 ?x267 ?x267 ?x267 ?x1903 ?x1903 r r r) (* (- 1) (* ?x1669 ?x267 ?x1903 ?x1903 ?x1903)) (* ?x1669 ?x1669 ?x1669 ?x1903 r))))
 (let (($x1874 (or (not (= (* ?x939 ?x2267) 0)) (not (= (* ?x1803 ?x1788) 0)) (not (= (* ?x497 ?x1616) 0)) (not (= (* ?x674 ?x1758) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x342 (+ ?x30 ?x164 (* 4 (* x d)) ?x196 ?x212 ?x44 (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x1145)))
 (let (($x1766 (and (= ?x342 0) $x1874)))
 (let ((?x132 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x138 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x149 (- (* ?x62 ?x62 ?x62 ?x138 ?x138 ?x132 ?x132 r r r) (* ?x62 ?x138 ?x132 ?x132 ?x132))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x136 (- (+ (- (* 8 ?x132) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x143 (+ (- (+ (- ?x136 ?x41) (* ?x62 ?x62 ?x138)) (* 2 ?x62 ?x138)) ?x49)))
 (let ((?x152 (* (+ (- ?x143 (* 4 ?x62 ?x132)) ?x53) (+ ?x149 (* ?x138 ?x138 ?x138 ?x132 r)))))
 (let ((?x107 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x113 (- q 4)))
 (let ((?x124 (- (* ?x62 ?x62 ?x62 ?x113 ?x113 ?x107 ?x107 r r r) (* ?x62 ?x113 ?x107 ?x107 ?x107))))
 (let ((?x111 (- (+ (- (* 8 ?x107) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x118 (+ (- (+ (- ?x111 ?x41) (* ?x62 ?x62 ?x113)) (* 2 ?x62 ?x113)) ?x49)))
 (let ((?x127 (* (+ (- ?x118 (* 4 ?x62 ?x107)) ?x53) (+ ?x124 (* ?x113 ?x113 ?x113 ?x107 r)))))
 (let ((?x58 (- ?x57 x)))
 (let ((?x84 (+ ?x58 q)))
 (let ((?x100 (- (* ?x62 ?x62 ?x62 q q ?x84 ?x84 r r r) (* ?x62 q ?x84 ?x84 ?x84))))
 (let ((?x88 (- (+ (- (* 8 ?x84) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x103 (* (+ (- ?x94 (* 4 ?x62 ?x84)) ?x53) (+ ?x100 (* q q q ?x84 r)))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x78 (- (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 r r r) (* ?x62 ?x67 ?x59 ?x59 ?x59))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x81 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (+ ?x78 (* ?x67 ?x67 ?x67 ?x59 r)))))
 (let (($x155 (or (not (= ?x81 0)) (not (= ?x103 0)) (not (= ?x127 0)) (not (= ?x152 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x156 (and (= ?x54 0) $x155)))
 (rewrite (= $x156 $x1766)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x2034 (trans (quant-intro (proof-bind ?x1402) (= $x157 $x1778)) (elim-unused (= $x1778 $x2032)) (= $x157 $x2032))))
 (let ((@x27 (asserted $x157)))
 (let ((@x1913 (mp (mp @x27 @x2034 $x2032) (quant-intro (proof-bind ?x832) (= $x2032 $x458)) $x458)))
 (let ((@x1318 (mp (mp @x1913 (rewrite (= $x458 $x458)) $x458) (quant-intro (proof-bind ?x906) (= $x458 $x2200)) $x2200)))
 (let ((@x1207 (mp~ (mp @x1318 (quant-intro (proof-bind ?x1641) (= $x2200 $x624)) $x624) (sk (~ $x624 $x1352)) $x1352)))
 (let ((@x1254 (mp @x1207 (rewrite (= $x1352 $x2080)) $x2080)))
 (let ((@x1143 (and-elim @x1254 $x757)))
 (let ((@x1463 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x757) $x239)) @x1143 $x239)))
 (let (($x1557 (<= ?x1313 0)))
 (let ((@x1077 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x757) $x1557)) @x1143 $x1557)))
 (let (($x688 (not (<= ?x1607 0))))
 (let (($x1398 (<= ?x321 0)))
 (let (($x1063 (>= ?x321 0)))
 (let ((@x362 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2065 (not $x1398) (not $x1063))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1063)) @x1077 @x1463 false) $x1063) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1398)) @x1077 @x1463 false) $x1398) $x2065)))
 (let (($x1393 (>= ?x942 0)))
 (let (($x1583 (<= ?x942 0)))
 (let ((@x472 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1484 (not $x1583) (not $x1393))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1583)) @x1077 @x1463 false) $x1583) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1393)) @x1077 @x1463 false) $x1393) $x1484)))
 (let (($x903 (>= ?x293 0)))
 (let (($x1472 (<= ?x293 0)))
 (let ((@x1092 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1654 (not $x1472) (not $x903))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1472)) @x1077 @x1463 false) $x1472) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x903)) @x1077 @x1463 false) $x903) $x1654)))
 (let ((@x1471 (unit-resolution (unit-resolution (and-elim @x1254 $x619) @x1092 @x472 (or $x1275 $x2071)) @x362 $x2071)))
 (let (($x1681 (>= ?x1607 0)))
 (let ((@x1078 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1246 $x688 (not $x1681))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1681)) @x1077 @x1463 false) $x1681) @x1471 $x688)))
 ((_ th-lemma arith farkas 1 1 1) @x1078 @x1077 @x1463 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        54
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1232
 :arith-nonlinear-bounds    16
 :arith-num-rows            14
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 117
 :arith-tableau-max-rows    14
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                3.93
 :memory                    3.34
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1558748
 :num-checks                1
 :propagations              36
 :rlimit-count              12982
 :time                      0.01
 :total-time                0.02)
