unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x241 (* (- 3) n!0)))
 (let ((?x231 (* n!0 n!0)))
 (let ((?x92 (* (- 3) ?x231)))
 (let ((?x506 (+ k!2 ?x92 ?x241)))
 (let (($x103 (>= ?x506 1)))
 (let (($x527 (= ?x506 1)))
 (let ((?x575 (* 9 n!0)))
 (let ((?x613 (* (- 1) m!1)))
 (let ((?x171 (* 3 ?x231)))
 (let ((?x376 (* (- 1) k!2)))
 (let ((?x607 (* 12 (* k!2 m!1 n!0))))
 (let ((?x605 (* k!2 m!1 m!1)))
 (let ((?x604 (* c!3 m!1 m!1)))
 (let ((?x603 (* 12 (* c!3 m!1))))
 (let ((?x593 (* 12 (* c!3 k!2 m!1 n!0))))
 (let ((?x567 (* 6 (* k!2 k!2 k!2 n!0))))
 (let ((?x582 (* c!3 c!3 k!2 m!1)))
 (let ((?x579 (* c!3 c!3 m!1 m!1)))
 (let ((?x574 (* 12 (* c!3 m!1 n!0))))
 (let ((?x570 (* c!3 m!1 m!1 n!0)))
 (let ((?x601 (* 6 (* c!3 c!3 m!1 n!0))))
 (let ((?x566 (* k!2 k!2 m!1 m!1)))
 (let ((?x224 (* 2 (* c!3 k!2 m!1 m!1))))
 (let ((?x560 (* 12 (* c!3 k!2 k!2 n!0))))
 (let ((?x135 (* 6 (* c!3 c!3 k!2 n!0))))
 (let ((?x600 (* 6 (* k!2 k!2 m!1 n!0))))
 (let ((?x482 (* 2 (* c!3 k!2 k!2 m!1 n!0))))
 (let ((?x571 (* 12 (* k!2 m!1))))
 (let ((?x366 (* k!2 m!1 m!1 n!0)))
 (let ((?x319 (* k!2 k!2 k!2 m!1 n!0)))
 (let ((?x283 (* 6 (* k!2 k!2 k!2))))
 (let ((?x577 (* 2 (* c!3 k!2 k!2 m!1))))
 (let ((?x627 (* 6 (* k!2 k!2 m!1))))
 (let ((?x280 (* 12 (* c!3 k!2 k!2))))
 (let ((?x266 (* 6 (* c!3 c!3 k!2))))
 (let ((?x253 (* k!2 k!2 m!1 m!1 n!0)))
 (let ((?x252 (* 2 (* c!3 k!2 m!1 m!1 n!0))))
 (let ((?x250 (* c!3 c!3 m!1 m!1 n!0)))
 (let ((?x246 (* k!2 n!0)))
 (let ((?x165 (* 36 ?x246)))
 (let ((?x244 (* c!3 n!0)))
 (let ((?x162 (* 36 ?x244)))
 (let ((?x215 (* k!2 k!2 k!2 m!1)))
 (let ((?x160 (* c!3 c!3 k!2 m!1 n!0)))
 (let ((?x416 (* 36 k!2)))
 (let ((?x499 (* 6 (* c!3 c!3 m!1))))
 (let ((?x540 (* 36 c!3)))
 (let ((?x105 (* 12 (* c!3 k!2 m!1))))
 (let ((?x513 (+ ?x105 ?x540 ?x499 ?x416 ?x160 ?x215 ?x162 ?x165 ?x250 ?x252 ?x253 ?x266 ?x280 ?x627 ?x577 ?x283 ?x319 ?x366 ?x571 ?x482 ?x600 ?x135 ?x560 ?x224 ?x566 ?x601 ?x570 ?x574 ?x579 ?x582 ?x567 ?x593 ?x603 ?x604 ?x605 ?x607)))
 (let ((?x538 (* ?x513 (+ 7 ?x376 ?x171 ?x613 ?x575))))
 (let (($x414 (= ?x538 0)))
 (let (($x539 (not $x414)))
 (let ((?x243 (* (- 1) (* k!2 k!2))))
 (let ((?x573 (* (- 9) n!0)))
 (let ((?x164 (* 9 ?x244)))
 (let ((?x578 (* 5 k!2)))
 (let ((?x632 (* 18 c!3)))
 (let ((?x519 (+ m!1 (* (- 6) n!0))))
 (let (($x413 (= ?x519 6)))
 (let (($x596 (and $x413 (= (+ ?x632 ?x578 ?x164 ?x573 ?x243) 4) (= (+ (* 3 c!3) k!2 (* (- 1) ?x246) (* (- 2) n!0)) 1) $x527 $x539)))
 (let ((?x608 (+ ?x540 ?x416 ?x165 ?x162 ?x160 ?x482 ?x319 ?x250 ?x252 ?x253 ?x266 ?x280 ?x283 ?x499 ?x105 ?x627 ?x582 ?x577 ?x215 ?x579 ?x224 ?x566 ?x135 ?x560 ?x567 ?x601 ?x593 ?x600 ?x570 ?x366 ?x603 ?x571 ?x604 ?x605 ?x574 ?x607)))
 (let (($x494 (and $x413 (= (+ ?x632 ?x578 ?x573 ?x243 ?x164) 4) (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x246)) 1) (= (+ k!2 ?x241 ?x92) 1) (not (= (* ?x608 (+ 7 ?x376 ?x613 ?x575 ?x171)) 0)))))
 (let (($x249 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x263 (* n n)))
 (let ((?x264 (* 3 ?x263)))
 (let ((?x48 (* 9 n)))
 (let ((?x348 (* (- 1) m)))
 (let ((?x232 (* (- 1) k)))
 (let ((?x151 (+ 7 ?x232 ?x348 ?x48 ?x264)))
 (let ((?x636 (* 12 (* k m n))))
 (let ((?x635 (* 12 (* c m n))))
 (let ((?x609 (* k m m)))
 (let ((?x606 (* c m m)))
 (let ((?x634 (* 12 (* k m))))
 (let ((?x633 (* 12 (* c m))))
 (let ((?x581 (* k m m n)))
 (let ((?x580 (* c m m n)))
 (let ((?x537 (* 6 (* k k m n))))
 (let ((?x553 (* 12 (* c k m n))))
 (let ((?x521 (* 6 (* c c m n))))
 (let ((?x517 (* 6 (* k k k n))))
 (let ((?x552 (* 12 (* c k k n))))
 (let ((?x501 (* 6 (* c c k n))))
 (let ((?x497 (* k k m m)))
 (let ((?x551 (* 2 (* c k m m))))
 (let ((?x484 (* c c m m)))
 (let ((?x481 (* k k k m)))
 (let ((?x550 (* 2 (* c k k m))))
 (let ((?x468 (* c c k m)))
 (let ((?x445 (* 6 (* k k k))))
 (let ((?x422 (* k k m m n)))
 (let ((?x555 (* 2 (* c k m m n))))
 (let ((?x419 (* c c m m n)))
 (let ((?x418 (* k k k m n)))
 (let ((?x554 (* 2 (* c k k m n))))
 (let ((?x415 (* c c k m n)))
 (let ((?x140 (* c n)))
 (let ((?x612 (* 36 ?x140)))
 (let ((?x55 (* k n)))
 (let ((?x615 (* 36 ?x55)))
 (let ((?x591 (* 36 k)))
 (let ((?x588 (* 36 c)))
 (let ((?x647 (+ ?x588 ?x591 ?x615 ?x612 ?x415 ?x554 ?x418 ?x419 ?x555 ?x422 (* 6 (* c c k)) (* 12 (* c k k)) ?x445 (* 6 (* c c m)) (* 12 (* c k m)) (* 6 (* k k m)) ?x468 ?x550 ?x481 ?x484 ?x551 ?x497 ?x501 ?x552 ?x517 ?x521 ?x553 ?x537 ?x580 ?x581 ?x633 ?x634 ?x606 ?x609 ?x635 ?x636)))
 (let (($x292 (= (+ k (* (- 3) n) (* (- 3) ?x263)) 1)))
 (let (($x254 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x202 (= (+ ?x40 ?x44 ?x204 ?x205 (* 9 ?x140)) 4)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (and $x118 $x202 $x254 $x292 (not (= (* ?x647 ?x151) 0)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x438 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x263 (* n n)))
 (let ((?x264 (* 3 ?x263)))
 (let ((?x48 (* 9 n)))
 (let ((?x348 (* (- 1) m)))
 (let ((?x232 (* (- 1) k)))
 (let ((?x151 (+ 7 ?x232 ?x348 ?x48 ?x264)))
 (let ((?x636 (* 12 (* k m n))))
 (let ((?x635 (* 12 (* c m n))))
 (let ((?x609 (* k m m)))
 (let ((?x606 (* c m m)))
 (let ((?x634 (* 12 (* k m))))
 (let ((?x633 (* 12 (* c m))))
 (let ((?x581 (* k m m n)))
 (let ((?x580 (* c m m n)))
 (let ((?x537 (* 6 (* k k m n))))
 (let ((?x553 (* 12 (* c k m n))))
 (let ((?x521 (* 6 (* c c m n))))
 (let ((?x517 (* 6 (* k k k n))))
 (let ((?x552 (* 12 (* c k k n))))
 (let ((?x501 (* 6 (* c c k n))))
 (let ((?x497 (* k k m m)))
 (let ((?x551 (* 2 (* c k m m))))
 (let ((?x484 (* c c m m)))
 (let ((?x481 (* k k k m)))
 (let ((?x550 (* 2 (* c k k m))))
 (let ((?x468 (* c c k m)))
 (let ((?x445 (* 6 (* k k k))))
 (let ((?x422 (* k k m m n)))
 (let ((?x555 (* 2 (* c k m m n))))
 (let ((?x419 (* c c m m n)))
 (let ((?x418 (* k k k m n)))
 (let ((?x554 (* 2 (* c k k m n))))
 (let ((?x415 (* c c k m n)))
 (let ((?x140 (* c n)))
 (let ((?x612 (* 36 ?x140)))
 (let ((?x55 (* k n)))
 (let ((?x615 (* 36 ?x55)))
 (let ((?x591 (* 36 k)))
 (let ((?x588 (* 36 c)))
 (let ((?x226 (+ ?x588 ?x591 ?x615 ?x612 (* 6 (* k k c)) (* 6 (* m k c)) (* 6 (* m c c)) (* 6 (* k c c)) ?x415 ?x554 ?x418 ?x419 ?x555 ?x422 ?x445 (* 6 (* m k k)) ?x468 ?x550 ?x481 ?x484 ?x551 ?x497 ?x501 ?x552 ?x517 ?x521 ?x553 ?x537 (* 6 (* k c k)) ?x580 ?x581 ?x633 (* 6 (* m c k)) ?x634 ?x606 ?x609 ?x635 ?x636)))
 (let (($x292 (= (+ k (* (- 3) n) (* (- 3) ?x263)) 1)))
 (let (($x254 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x202 (= (+ ?x40 ?x44 ?x204 ?x205 (* 9 ?x140)) 4)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (and $x118 $x202 $x254 $x292 (not (= (* ?x226 ?x151) 0)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x442 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x263 (* n n)))
 (let ((?x264 (* 3 ?x263)))
 (let ((?x48 (* 9 n)))
 (let ((?x348 (* (- 1) m)))
 (let ((?x232 (* (- 1) k)))
 (let ((?x151 (+ 7 ?x232 ?x348 ?x48 ?x264)))
 (let ((?x636 (* 12 (* k m n))))
 (let ((?x635 (* 12 (* c m n))))
 (let ((?x609 (* k m m)))
 (let ((?x606 (* c m m)))
 (let ((?x634 (* 12 (* k m))))
 (let ((?x633 (* 12 (* c m))))
 (let ((?x581 (* k m m n)))
 (let ((?x580 (* c m m n)))
 (let ((?x537 (* 6 (* k k m n))))
 (let ((?x553 (* 12 (* c k m n))))
 (let ((?x521 (* 6 (* c c m n))))
 (let ((?x517 (* 6 (* k k k n))))
 (let ((?x552 (* 12 (* c k k n))))
 (let ((?x501 (* 6 (* c c k n))))
 (let ((?x497 (* k k m m)))
 (let ((?x551 (* 2 (* c k m m))))
 (let ((?x484 (* c c m m)))
 (let ((?x481 (* k k k m)))
 (let ((?x550 (* 2 (* c k k m))))
 (let ((?x468 (* c c k m)))
 (let ((?x445 (* 6 (* k k k))))
 (let ((?x422 (* k k m m n)))
 (let ((?x555 (* 2 (* c k m m n))))
 (let ((?x419 (* c c m m n)))
 (let ((?x418 (* k k k m n)))
 (let ((?x554 (* 2 (* c k k m n))))
 (let ((?x415 (* c c k m n)))
 (let ((?x140 (* c n)))
 (let ((?x612 (* 36 ?x140)))
 (let ((?x55 (* k n)))
 (let ((?x615 (* 36 ?x55)))
 (let ((?x591 (* 36 k)))
 (let ((?x588 (* 36 c)))
 (let ((?x647 (+ ?x588 ?x591 ?x615 ?x612 ?x415 ?x554 ?x418 ?x419 ?x555 ?x422 (* 6 (* c c k)) (* 12 (* c k k)) ?x445 (* 6 (* c c m)) (* 12 (* c k m)) (* 6 (* k k m)) ?x468 ?x550 ?x481 ?x484 ?x551 ?x497 ?x501 ?x552 ?x517 ?x521 ?x553 ?x537 ?x580 ?x581 ?x633 ?x634 ?x606 ?x609 ?x635 ?x636)))
 (let (($x292 (= (+ k (* (- 3) n) (* (- 3) ?x263)) 1)))
 (let (($x254 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x202 (= (+ ?x40 ?x44 ?x204 ?x205 (* 9 ?x140)) 4)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (let (($x638 (and $x118 $x202 $x254 $x292 (not (= (* ?x647 ?x151) 0)))))
 (let ((?x226 (+ ?x588 ?x591 ?x615 ?x612 (* 6 (* k k c)) (* 6 (* m k c)) (* 6 (* m c c)) (* 6 (* k c c)) ?x415 ?x554 ?x418 ?x419 ?x555 ?x422 ?x445 (* 6 (* m k k)) ?x468 ?x550 ?x481 ?x484 ?x551 ?x497 ?x501 ?x552 ?x517 ?x521 ?x553 ?x537 (* 6 (* k c k)) ?x580 ?x581 ?x633 (* 6 (* m c k)) ?x634 ?x606 ?x609 ?x635 ?x636)))
 (let (($x237 (and $x118 $x202 $x254 $x292 (not (= (* ?x226 ?x151) 0)))))
 (rewrite (= $x237 $x638)))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x157 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x348 (* (- 1) m)))
 (let ((?x232 (* (- 1) k)))
 (let ((?x163 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x232 ?x348 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x350 (+ 6 m)))
 (let ((?x616 (+ 1 n)))
 (let (($x353 (= (* (+ (* ?x616 ?x350 ?x71 ?x75 ?x75) (* ?x616 ?x350 ?x350 ?x75)) ?x163) 0)))
 (let (($x629 (not $x353)))
 (let (($x611 (= (+ (* 3 (* n n)) ?x232 ?x65) (- 1))))
 (let (($x386 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (and $x118 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x204 ?x205) 4) $x386 $x611 $x629))))))))))))))))))) :qid k!34))
 ))
 (let ((?x486 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x263 (* n n)))
 (let ((?x264 (* 3 ?x263)))
 (let ((?x48 (* 9 n)))
 (let ((?x348 (* (- 1) m)))
 (let ((?x232 (* (- 1) k)))
 (let ((?x151 (+ 7 ?x232 ?x348 ?x48 ?x264)))
 (let ((?x636 (* 12 (* k m n))))
 (let ((?x635 (* 12 (* c m n))))
 (let ((?x609 (* k m m)))
 (let ((?x606 (* c m m)))
 (let ((?x634 (* 12 (* k m))))
 (let ((?x633 (* 12 (* c m))))
 (let ((?x581 (* k m m n)))
 (let ((?x580 (* c m m n)))
 (let ((?x537 (* 6 (* k k m n))))
 (let ((?x553 (* 12 (* c k m n))))
 (let ((?x521 (* 6 (* c c m n))))
 (let ((?x517 (* 6 (* k k k n))))
 (let ((?x552 (* 12 (* c k k n))))
 (let ((?x501 (* 6 (* c c k n))))
 (let ((?x497 (* k k m m)))
 (let ((?x551 (* 2 (* c k m m))))
 (let ((?x484 (* c c m m)))
 (let ((?x481 (* k k k m)))
 (let ((?x550 (* 2 (* c k k m))))
 (let ((?x468 (* c c k m)))
 (let ((?x445 (* 6 (* k k k))))
 (let ((?x422 (* k k m m n)))
 (let ((?x555 (* 2 (* c k m m n))))
 (let ((?x419 (* c c m m n)))
 (let ((?x418 (* k k k m n)))
 (let ((?x554 (* 2 (* c k k m n))))
 (let ((?x415 (* c c k m n)))
 (let ((?x140 (* c n)))
 (let ((?x612 (* 36 ?x140)))
 (let ((?x55 (* k n)))
 (let ((?x615 (* 36 ?x55)))
 (let ((?x591 (* 36 k)))
 (let ((?x588 (* 36 c)))
 (let ((?x226 (+ ?x588 ?x591 ?x615 ?x612 (* 6 (* k k c)) (* 6 (* m k c)) (* 6 (* m c c)) (* 6 (* k c c)) ?x415 ?x554 ?x418 ?x419 ?x555 ?x422 ?x445 (* 6 (* m k k)) ?x468 ?x550 ?x481 ?x484 ?x551 ?x497 ?x501 ?x552 ?x517 ?x521 ?x553 ?x537 (* 6 (* k c k)) ?x580 ?x581 ?x633 (* 6 (* m c k)) ?x634 ?x606 ?x609 ?x635 ?x636)))
 (let (($x292 (= (+ k (* (- 3) n) (* (- 3) ?x263)) 1)))
 (let (($x254 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x202 (= (+ ?x40 ?x44 ?x204 ?x205 (* 9 ?x140)) 4)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (let (($x237 (and $x118 $x202 $x254 $x292 (not (= (* ?x226 ?x151) 0)))))
 (let ((?x65 (* 3 n)))
 (let ((?x163 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x232 ?x348 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x350 (+ 6 m)))
 (let ((?x616 (+ 1 n)))
 (let (($x353 (= (* (+ (* ?x616 ?x350 ?x71 ?x75 ?x75) (* ?x616 ?x350 ?x350 ?x75)) ?x163) 0)))
 (let (($x629 (not $x353)))
 (let (($x611 (= (+ ?x264 ?x232 ?x65) (- 1))))
 (let (($x386 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x408 (and $x118 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x204 ?x205) 4) $x386 $x611 $x629)))
 (rewrite (= $x408 $x237))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x630 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x348 (* (- 1) m)))
 (let ((?x232 (* (- 1) k)))
 (let ((?x163 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x232 ?x348 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x350 (+ 6 m)))
 (let ((?x616 (+ 1 n)))
 (let (($x353 (= (* (+ (* ?x616 ?x350 ?x71 ?x75 ?x75) (* ?x616 ?x350 ?x350 ?x75)) ?x163) 0)))
 (let (($x629 (not $x353)))
 (let (($x611 (= (+ (* 3 (* n n)) ?x232 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x479 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (and $x118 (= ?x479 (- 4)) (= (+ (* (- 3) c) (* n k) ?x232 (* 2 n)) (- 1)) $x611 $x629)))))))))))))))) :qid k!34))
 ))
 (let ((?x149 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x348 (* (- 1) m)))
 (let ((?x232 (* (- 1) k)))
 (let ((?x163 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x232 ?x348 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x350 (+ 6 m)))
 (let ((?x616 (+ 1 n)))
 (let (($x353 (= (* (+ (* ?x616 ?x350 ?x71 ?x75 ?x75) (* ?x616 ?x350 ?x350 ?x75)) ?x163) 0)))
 (let (($x629 (not $x353)))
 (let (($x611 (= (+ (* 3 (* n n)) ?x232 ?x65) (- 1))))
 (let (($x386 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (let (($x408 (and $x118 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x204 ?x205) 4) $x386 $x611 $x629)))
 (let ((?x48 (* 9 n)))
 (let ((?x479 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x631 (and $x118 (= ?x479 (- 4)) (= (+ (* (- 3) c) (* n k) ?x232 (* 2 n)) (- 1)) $x611 $x629)))
 (rewrite (= $x631 $x408)))))))))))))))))))))))))
 ))
 (let (($x85 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ n 1)))
 (let ((?x76 (+ m 6)))
 (let ((?x71 (+ k m)))
 (let ((?x75 (+ c k)))
 (let ((?x80 (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) (+ (* ?x75 ?x75 ?x71 ?x76 ?x68) (* ?x75 ?x76 ?x76 ?x68)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x80 0)))))))))))))))) :qid k!34))
 ))
 (let ((?x621 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x348 (* (- 1) m)))
 (let ((?x232 (* (- 1) k)))
 (let ((?x163 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x232 ?x348 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x350 (+ 6 m)))
 (let ((?x616 (+ 1 n)))
 (let (($x353 (= (* (+ (* ?x616 ?x350 ?x71 ?x75 ?x75) (* ?x616 ?x350 ?x350 ?x75)) ?x163) 0)))
 (let (($x629 (not $x353)))
 (let (($x611 (= (+ (* 3 (* n n)) ?x232 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x479 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (let (($x631 (and $x118 (= ?x479 (- 4)) (= (+ (* (- 3) c) (* n k) ?x232 (* 2 n)) (- 1)) $x611 $x629)))
 (let ((?x79 (+ (* ?x75 ?x75 ?x71 (+ m 6) (+ n 1)) (* ?x75 (+ m 6) (+ m 6) (+ n 1)))))
 (let ((?x74 (+ (- (+ 1 (* 3 (+ n 1) (+ n 1))) ?x71) (* 3 (+ n 1)))))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x84 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 (= (+ (- (+ 1 (* 3 n n)) k) ?x65) 0) (or (not (= (* ?x74 ?x79) 0))))))
 (rewrite (= $x84 $x631))))))))))))))))))))))))))
 ))
 (let ((@x86 (asserted $x85)))
 (let ((@x221 (mp (mp @x86 (quant-intro (proof-bind ?x621) (= $x85 $x630)) $x630) (rewrite (= $x630 $x630)) $x630)))
 (let ((@x495 (mp (mp @x221 (quant-intro (proof-bind ?x149) (= $x630 $x157)) $x157) (quant-intro (proof-bind ?x486) (= $x157 $x438)) $x438)))
 (let ((@x509 (mp~ (mp @x495 (quant-intro (proof-bind ?x442) (= $x438 $x249)) $x249) (sk (~ $x249 $x494)) $x494)))
 (let ((@x524 (mp @x509 (rewrite (= $x494 $x596)) $x596)))
 (let ((@x518 (and-elim @x524 $x527)))
 (let ((@x510 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x527) $x103)) @x518 $x103)))
 (let (($x423 (>= ?x519 6)))
 (let ((@x343 (and-elim @x524 $x413)))
 (let ((@x532 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x413) $x423)) @x343 $x423)))
 (let (($x455 (<= ?x506 1)))
 (let ((@x387 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x527) $x455)) @x518 $x455)))
 (let (($x420 (<= ?x519 6)))
 (let ((@x430 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x413) $x420)) @x343 $x420)))
 (let (($x397 (not (<= ?x538 0))))
 (let (($x459 (>= ?x538 0)))
 (let ((@x441 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x459)) @x430 @x387 @x532 @x510 false) $x459)))
 (let ((@x451 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x414 $x397 (not $x459))) (and-elim @x524 $x539) (or $x397 (not $x459)))))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution @x451 @x441 $x397) @x430 @x387 @x532 @x510 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        20
 :arith-assert-upper        13
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-fixed-eqs           1
 :arith-gcd-tests           1
 :arith-ineq-splits         1
 :arith-max-min             252
 :arith-nonlinear-bounds    9
 :arith-num-rows            6
 :arith-patches             1
 :arith-pivots              5
 :arith-pseudo-nonlinear    3
 :arith-row-summations      6
 :arith-tableau-max-columns 62
 :arith-tableau-max-rows    6
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              4
 :max-memory                3.71
 :memory                    3.15
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1166318
 :num-checks                1
 :propagations              11
 :rlimit-count              4604
 :time                      0.01
 :total-time                0.01)
