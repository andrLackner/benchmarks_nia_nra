unsat
((set-logic NRA)
(declare-fun a!8 () Real)
(declare-fun d!6 () Real)
(declare-fun b!7 () Real)
(declare-fun y!5 () Real)
(proof
(let ((?x343 (* (/ 1.0 64.0) (* b!7 b!7 b!7 d!6 d!6 d!6 a!8 a!8))))
 (let ((?x669 (* (/ 1.0 32.0) (* b!7 b!7 b!7 b!7 d!6 d!6 d!6 a!8))))
 (let ((?x711 (* (/ 1.0 16.0) (* b!7 b!7 b!7 d!6 d!6 a!8 a!8 y!5))))
 (let ((?x697 (* (/ 1.0 16.0) (* b!7 b!7 b!7 b!7 b!7 d!6 y!5 y!5))))
 (let ((?x587 (* (/ 1.0 8.0) (* b!7 b!7 b!7 b!7 d!6 a!8 y!5 y!5))))
 (let ((?x660 (* (/ 1.0 16.0) (* b!7 b!7 b!7 b!7 b!7 d!6 d!6 y!5))))
 (let ((?x684 (* (/ 1.0 32.0) (* b!7 b!7 d!6 d!6 d!6 a!8 y!5))))
 (let ((?x722 (* (/ 1.0 64.0) (* b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6))))
 (let ((?x659 (* (/ 1.0 16.0) (* b!7 b!7 b!7 d!6 a!8 a!8 y!5 y!5))))
 (let ((?x483 (* (/ 1.0 64.0) (* b!7 b!7 b!7 d!6 d!6 d!6 d!6))))
 (let ((?x704 (* (/ 1.0 8.0) (* b!7 b!7 b!7 b!7 d!6 d!6 a!8 y!5))))
 (let ((?x143 (* (/ 1.0 64.0) (* b!7 b!7 d!6 d!6 d!6 d!6 a!8))))
 (let ((?x265 (* (/ 1.0 32.0) (* b!7 b!7 b!7 d!6 d!6 d!6 y!5))))
 (let ((?x627 (+ ?x265 ?x143 ?x704 ?x483 ?x659 ?x722 ?x684 ?x660 ?x587 ?x697 ?x711 ?x669 ?x343)))
 (let (($x188 (<= ?x627 0.0)))
 (let (($x553 (not $x188)))
 (let (($x619 (= 0.0 ?x627)))
 (let (($x583 (not $x619)))
 (let ((?x270 (+ ?x143 ?x704 ?x483 ?x659 ?x722 ?x684 ?x660 ?x587 ?x697 ?x711 ?x669 ?x343 ?x265)))
 (let ((?x631 (* b!7 b!7 b!7 d!6 d!6 d!6 d!6 y!5)))
 (let ((?x360 (* (- (/ 1.0 16.0)) ?x631)))
 (let ((?x605 (* b!7 b!7 d!6 d!6 d!6 d!6 d!6 a!8)))
 (let ((?x689 (* (- (/ 1.0 32.0)) ?x605)))
 (let ((?x590 (* b!7 d!6 d!6 d!6 d!6 a!8 a!8 y!5)))
 (let ((?x702 (* (- (/ 1.0 16.0)) ?x590)))
 (let ((?x557 (* b!7 d!6 d!6 d!6 d!6 d!6 a!8 a!8)))
 (let ((?x355 (* (- (/ 1.0 64.0)) ?x557)))
 (let ((?x330 (* b!7 b!7 d!6 d!6 d!6 d!6 a!8 y!5)))
 (let ((?x229 (* (- (/ 1.0 8.0)) ?x330)))
 (let ((?x326 (* b!7 b!7 d!6 d!6 d!6 a!8 y!5 y!5)))
 (let ((?x641 (* (- (/ 1.0 8.0)) ?x326)))
 (let ((?x323 (* b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x108 (* (- (/ 1.0 64.0)) ?x323)))
 (let ((?x190 (* b!7 b!7 b!7 d!6)))
 (let ((?x415 (* (- (/ 1.0 16.0)) ?x190)))
 (let ((?x121 (* b!7 d!6 d!6 d!6 a!8 a!8 y!5 y!5)))
 (let ((?x338 (* (- (/ 1.0 16.0)) ?x121)))
 (let ((?x97 (* b!7 b!7 b!7 d!6 d!6 d!6 y!5 y!5)))
 (let ((?x633 (* (- (/ 1.0 16.0)) ?x97)))
 (let ((?x524 (* (+ (* (- (/ 1.0 2.0)) (* d00 b!7)) (* (/ 1.0 2.0) (* b00 d!6))) (+ ?x633 ?x338 ?x415 ?x108 ?x641 ?x229 ?x355 ?x702 ?x689 ?x360) ?x270)))
 (let (($x680 (= ?x524 0.0)))
 (let (($x526 (not $x680)))
 (let ((?x725 (* b00 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6 d!6 a!8 a!8 a!8 y!5 y!5 y!5)))
 (let ((?x422 (* b00 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5)))
 (let ((?x290 (* d00 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5)))
 (let ((?x273 (* d00 b!7 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 a!8 a!8 y!5 y!5)))
 (let ((?x239 (* d00 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 a!8 y!5)))
 (let ((?x230 (* b00 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 a!8 a!8 y!5 y!5)))
 (let ((?x159 (* d00 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6 a!8 a!8 a!8 y!5 y!5 y!5)))
 (let ((?x100 (* b00 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 a!8 y!5)))
 (let ((?x150 (+ (* (/ 1.0 1024.0) ?x100) (* (- (/ 1.0 1024.0)) ?x159) (* (/ 1.0 512.0) ?x230) (* (- (/ 1.0 1024.0)) ?x239) (* (- (/ 1.0 512.0)) ?x273) (* (- (/ 1.0 512.0)) ?x290) (* (/ 1.0 512.0) ?x422) (* (/ 1.0 1024.0) ?x725))))
 (let (($x312 (= ?x150 0.0)))
 (let (($x417 (= 0.0 ?x150)))
 (let (($x99 (>= ?x150 0.0)))
 (let ((?x241 (* d00 b!7)))
 (let ((?x703 (+ ?x241 (* (- 1.0) (* b00 d!6)))))
 (let (($x129 (>= ?x703 0.0)))
 (let (($x147 (= 0.0 ?x703)))
 (let ((@x120 (symm (commutativity (= $x147 (= ?x703 0.0))) (= (= ?x703 0.0) $x147))))
 (let (($x696 (= ?x703 0.0)))
 (let ((?x275 (* d!6 a!8)))
 (let ((?x255 (+ ?x275 (* (- 1.0) (* a00 d!6)) (* 2.0 (* y00 b!7)) (* (- 2.0) (* b!7 y!5)))))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x341 (= (+ ?x30 ?x86 (* 2.0 (* b00 y!5)) (* (- 1.0) (* d00 a!8))) 0.0)))
 (let (($x661 (or (not $x312) $x526)))
 (let (($x721 (and $x661 $x341 $x696 (= ?x255 0.0))))
 (let ((?x435 (+ ?x275 (* (- 2.0) (* y!5 b!7)) (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00)))))
 (let (($x283 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x86 (* 2.0 (* y!5 b00))) 0.0)))
 (let ((?x479 (+ (* (/ 1.0 16.0) (* y!5 y!5 d!6 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 b!7 b!7 b!7 b!7 b!7)) (* (/ 1.0 8.0) (* y!5 y!5 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 16.0) (* y!5 y!5 d!6 b!7 b!7 b!7 b!7 b!7)) (* (/ 1.0 8.0) (* y!5 d!6 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 b!7 b!7 a!8)))))
 (let ((?x412 (+ (* (- (/ 1.0 16.0)) (* d!6 b!7 b!7 b!7)) (* (- (/ 1.0 16.0)) (* y!5 y!5 d!6 d!6 d!6 b!7 a!8 a!8)) (* (- (/ 1.0 16.0)) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7)) (* (- (/ 1.0 8.0)) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8)) (* (- (/ 1.0 16.0)) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (- (/ 1.0 8.0)) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (- (/ 1.0 16.0)) (* y!5 d!6 d!6 d!6 d!6 b!7 a!8 a!8)) (* (- (/ 1.0 64.0)) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (- (/ 1.0 32.0)) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (- (/ 1.0 64.0)) (* d!6 d!6 d!6 d!6 d!6 b!7 a!8 a!8)))))
 (let ((?x498 (* (+ (* (- (/ 1.0 2.0)) (* b!7 d00)) (* (/ 1.0 2.0) (* d!6 b00))) ?x412 ?x479)))
 (let ((?x154 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 b00)))
 (let ((?x156 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 d00)))
 (let ((?x493 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 b00)))
 (let ((?x386 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 d00)))
 (let ((?x334 (* y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 b00)))
 (let ((?x394 (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 d00)))
 (let ((?x162 (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 b00)))
 (let ((?x477 (* y!5 y!5 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 d00)))
 (let ((?x538 (+ (* (/ 1.0 512.0) ?x477) (* (- (/ 1.0 512.0)) ?x162) (* (/ 1.0 1024.0) ?x394) (* (- (/ 1.0 1024.0)) ?x334) (* (/ 1.0 512.0) ?x386) (* (- (/ 1.0 512.0)) ?x493) (* (/ 1.0 1024.0) ?x156) (* (- (/ 1.0 1024.0)) ?x154))))
 (let (($x441 (and (or (not (= ?x538 0.0)) (not (= ?x498 0.0))) $x283 (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) (= ?x435 0.0))))
 (let (($x284 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x128 (* (- 2.0) (* y b))))
 (let ((?x103 (* d a)))
 (let (($x163 (= (+ ?x103 ?x128 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x89 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x118 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x86 (* 2.0 (* y b00))) 0.0)))
 (let ((?x180 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x127 (* (/ 1.0 16.0) (* y y d b b b a a))))
 (let ((?x529 (+ ?x127 ?x180 (* (/ 1.0 16.0) (* y d d b b b b b)) (* (/ 1.0 8.0) (* y y d b b b b a)) (* (/ 1.0 16.0) (* y y d b b b b b)) (* (/ 1.0 8.0) (* y d d b b b b a)) (* (/ 1.0 16.0) (* y d d b b b a a)) (* (/ 1.0 64.0) (* d d d b b b b b)) (* (/ 1.0 32.0) (* d d d b b b b a)) (* (/ 1.0 64.0) (* d d d b b b a a)) (* (/ 1.0 32.0) (* y d d d b b b)) (* (/ 1.0 64.0) (* d d d d b b b)) (* (/ 1.0 64.0) (* d d d d b b a)))))
 (let ((?x208 (* (- (/ 1.0 16.0)) (* y y d d d b a a))))
 (let ((?x155 (* (- (/ 1.0 16.0)) (* d b b b))))
 (let ((?x761 (+ ?x155 ?x208 (* (- (/ 1.0 16.0)) (* y y d d d b b b)) (* (- (/ 1.0 8.0)) (* y y d d d b b a)) (* (- (/ 1.0 16.0)) (* y d d d d b b b)) (* (- (/ 1.0 8.0)) (* y d d d d b b a)) (* (- (/ 1.0 16.0)) (* y d d d d b a a)) (* (- (/ 1.0 64.0)) (* d d d d d b b b)) (* (- (/ 1.0 32.0)) (* d d d d d b b a)) (* (- (/ 1.0 64.0)) (* d d d d d b a a)))))
 (let ((?x161 (+ (* (- (/ 1.0 2.0)) (* b d00)) (* (/ 1.0 2.0) (* d b00)))))
 (let ((?x308 (* y y y d d d d d d d b b b a a a b00)))
 (let ((?x298 (* y y y d d d d d d b b b b a a a d00)))
 (let ((?x288 (* y y y y d d d d d b b b b a a a a b00)))
 (let ((?x278 (* y y y y d d d d b b b b b a a a a d00)))
 (let ((?x268 (* y d d d d d b b b b b a b00)))
 (let ((?x257 (* y d d d d b b b b b b a d00)))
 (let ((?x246 (* y y d d d b b b b b b a a b00)))
 (let ((?x235 (* y y d d b b b b b b b a a d00)))
 (let ((?x313 (+ (* (/ 1.0 512.0) ?x235) (* (- (/ 1.0 512.0)) ?x246) (* (/ 1.0 1024.0) ?x257) (* (- (/ 1.0 1024.0)) ?x268) (* (/ 1.0 512.0) ?x278) (* (- (/ 1.0 512.0)) ?x288) (* (/ 1.0 1024.0) ?x298) (* (- (/ 1.0 1024.0)) ?x308))))
 (let (($x182 (not (= ?x313 0.0))))
 (and (or $x182 (not (= (* ?x161 ?x761 ?x529) 0.0))) $x118 $x89 $x163))))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x625 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x128 (* (- 2.0) (* y b))))
 (let ((?x103 (* d a)))
 (let (($x546 (= (+ ?x103 ?x128 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x302 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let (($x321 (= (+ ?x86 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let ((?x609 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x65 (+ a b)))
 (let ((?x617 (+ (* (/ 1.0 16.0) (* ?x65 ?x65 ?x609 ?x609 d b b b)) (* (/ 1.0 32.0) (* ?x65 ?x609 d d d b b)))))
 (let ((?x155 (* (- (/ 1.0 16.0)) (* d b b b))))
 (let ((?x310 (+ (* (- (/ 1.0 2.0)) (* d00 b)) (* (/ 1.0 2.0) (* b00 d)))))
 (let ((?x639 (* ?x310 (+ ?x155 (* (- (/ 1.0 16.0)) (* ?x65 ?x65 ?x609 ?x609 d d d b))) ?x617)))
 (let ((?x180 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x127 (* (/ 1.0 16.0) (* y y d b b b a a))))
 (let ((?x598 (* ?x310 (+ ?x155 (* (- (/ 1.0 16.0)) (* y y d d d b a a))) (+ ?x127 ?x180))))
 (let (($x643 (or (not (= ?x598 0.0)) (not (= ?x639 0.0)))))
 (and $x643 $x321 $x302 $x546)))))))))))))))))) :qid k!33))
 ))
 (let ((?x181 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x128 (* (- 2.0) (* y b))))
 (let ((?x103 (* d a)))
 (let (($x163 (= (+ ?x103 ?x128 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x89 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x118 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x86 (* 2.0 (* y b00))) 0.0)))
 (let ((?x180 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x127 (* (/ 1.0 16.0) (* y y d b b b a a))))
 (let ((?x529 (+ ?x127 ?x180 (* (/ 1.0 16.0) (* y d d b b b b b)) (* (/ 1.0 8.0) (* y y d b b b b a)) (* (/ 1.0 16.0) (* y y d b b b b b)) (* (/ 1.0 8.0) (* y d d b b b b a)) (* (/ 1.0 16.0) (* y d d b b b a a)) (* (/ 1.0 64.0) (* d d d b b b b b)) (* (/ 1.0 32.0) (* d d d b b b b a)) (* (/ 1.0 64.0) (* d d d b b b a a)) (* (/ 1.0 32.0) (* y d d d b b b)) (* (/ 1.0 64.0) (* d d d d b b b)) (* (/ 1.0 64.0) (* d d d d b b a)))))
 (let ((?x208 (* (- (/ 1.0 16.0)) (* y y d d d b a a))))
 (let ((?x155 (* (- (/ 1.0 16.0)) (* d b b b))))
 (let ((?x761 (+ ?x155 ?x208 (* (- (/ 1.0 16.0)) (* y y d d d b b b)) (* (- (/ 1.0 8.0)) (* y y d d d b b a)) (* (- (/ 1.0 16.0)) (* y d d d d b b b)) (* (- (/ 1.0 8.0)) (* y d d d d b b a)) (* (- (/ 1.0 16.0)) (* y d d d d b a a)) (* (- (/ 1.0 64.0)) (* d d d d d b b b)) (* (- (/ 1.0 32.0)) (* d d d d d b b a)) (* (- (/ 1.0 64.0)) (* d d d d d b a a)))))
 (let ((?x161 (+ (* (- (/ 1.0 2.0)) (* b d00)) (* (/ 1.0 2.0) (* d b00)))))
 (let ((?x308 (* y y y d d d d d d d b b b a a a b00)))
 (let ((?x298 (* y y y d d d d d d b b b b a a a d00)))
 (let ((?x288 (* y y y y d d d d d b b b b a a a a b00)))
 (let ((?x278 (* y y y y d d d d b b b b b a a a a d00)))
 (let ((?x268 (* y d d d d d b b b b b a b00)))
 (let ((?x257 (* y d d d d b b b b b b a d00)))
 (let ((?x246 (* y y d d d b b b b b b a a b00)))
 (let ((?x235 (* y y d d b b b b b b b a a d00)))
 (let ((?x313 (+ (* (/ 1.0 512.0) ?x235) (* (- (/ 1.0 512.0)) ?x246) (* (/ 1.0 1024.0) ?x257) (* (- (/ 1.0 1024.0)) ?x268) (* (/ 1.0 512.0) ?x278) (* (- (/ 1.0 512.0)) ?x288) (* (/ 1.0 1024.0) ?x298) (* (- (/ 1.0 1024.0)) ?x308))))
 (let (($x182 (not (= ?x313 0.0))))
 (let (($x123 (and (or $x182 (not (= (* ?x161 ?x761 ?x529) 0.0))) $x118 $x89 $x163)))
 (let (($x546 (= (+ ?x103 ?x128 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x302 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let (($x321 (= (+ ?x86 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let ((?x609 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x65 (+ a b)))
 (let ((?x617 (+ (* (/ 1.0 16.0) (* ?x65 ?x65 ?x609 ?x609 d b b b)) (* (/ 1.0 32.0) (* ?x65 ?x609 d d d b b)))))
 (let ((?x310 (+ (* (- (/ 1.0 2.0)) (* d00 b)) (* (/ 1.0 2.0) (* b00 d)))))
 (let ((?x639 (* ?x310 (+ ?x155 (* (- (/ 1.0 16.0)) (* ?x65 ?x65 ?x609 ?x609 d d d b))) ?x617)))
 (let (($x643 (or (not (= (* ?x310 (+ ?x155 ?x208) (+ ?x127 ?x180)) 0.0)) (not (= ?x639 0.0)))))
 (let (($x552 (and $x643 $x321 $x302 $x546)))
 (rewrite (= $x552 $x123))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x648 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x609 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x65 (+ a b)))
 (let ((?x617 (+ (* (/ 1.0 16.0) (* ?x65 ?x65 ?x609 ?x609 d b b b)) (* (/ 1.0 32.0) (* ?x65 ?x609 d d d b b)))))
 (let ((?x155 (* (- (/ 1.0 16.0)) (* d b b b))))
 (let ((?x310 (+ (* (- (/ 1.0 2.0)) (* d00 b)) (* (/ 1.0 2.0) (* b00 d)))))
 (let ((?x639 (* ?x310 (+ ?x155 (* (- (/ 1.0 16.0)) (* ?x65 ?x65 ?x609 ?x609 d d d b))) ?x617)))
 (let ((?x180 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x127 (* (/ 1.0 16.0) (* y y d b b b a a))))
 (let ((?x598 (* ?x310 (+ ?x155 (* (- (/ 1.0 16.0)) (* y y d d d b a a))) (+ ?x127 ?x180))))
 (let (($x643 (or (not (= ?x598 0.0)) (not (= ?x639 0.0)))))
 (let ((?x128 (* (- 2.0) (* y b))))
 (let ((?x103 (* d a)))
 (let (($x546 (= (+ ?x103 ?x128 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x302 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let (($x321 (= (+ ?x86 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (and $x321 $x302 $x546 $x643)))))))))))))))))) :qid k!33))
 ))
 (let (($x77 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x53 (/ d 2.0)))
 (let ((?x66 (+ y ?x53)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x65 (+ a b)))
 (let ((?x38 (- 1.0)))
 (let ((?x59 (* ?x38 ?x51 ?x51 ?x51 ?x53)))
 (let ((?x69 (+ (* ?x65 ?x65 ?x51 ?x51 ?x51 ?x53 ?x66 ?x66) (* ?x65 ?x51 ?x51 ?x53 ?x53 ?x53 ?x66))))
 (let ((?x55 (+ (* ?x38 ?x51 d00) (* b00 ?x53))))
 (let (($x73 (= (* ?x55 ?x69 (- ?x59 (* ?x65 ?x65 ?x51 ?x53 ?x53 ?x53 ?x66 ?x66))) 0.0)))
 (let ((?x58 (+ (* a a ?x51 ?x51 ?x51 ?x53 y y) (* a ?x51 ?x51 ?x53 ?x53 ?x53 y))))
 (let (($x63 (= (* ?x55 ?x58 (- ?x59 (* a a ?x51 ?x53 ?x53 ?x53 y y))) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let ((?x30 (* a00 d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (and $x36 (= (+ (* ?x38 b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not $x63) (not $x73))))))))))))))))))) :qid k!33))
 ))
 (let ((?x595 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x609 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x65 (+ a b)))
 (let ((?x617 (+ (* (/ 1.0 16.0) (* ?x65 ?x65 ?x609 ?x609 d b b b)) (* (/ 1.0 32.0) (* ?x65 ?x609 d d d b b)))))
 (let ((?x155 (* (- (/ 1.0 16.0)) (* d b b b))))
 (let ((?x310 (+ (* (- (/ 1.0 2.0)) (* d00 b)) (* (/ 1.0 2.0) (* b00 d)))))
 (let ((?x639 (* ?x310 (+ ?x155 (* (- (/ 1.0 16.0)) (* ?x65 ?x65 ?x609 ?x609 d d d b))) ?x617)))
 (let ((?x180 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x127 (* (/ 1.0 16.0) (* y y d b b b a a))))
 (let ((?x598 (* ?x310 (+ ?x155 (* (- (/ 1.0 16.0)) (* y y d d d b a a))) (+ ?x127 ?x180))))
 (let (($x643 (or (not (= ?x598 0.0)) (not (= ?x639 0.0)))))
 (let ((?x128 (* (- 2.0) (* y b))))
 (let ((?x103 (* d a)))
 (let (($x546 (= (+ ?x103 ?x128 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x302 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let (($x321 (= (+ ?x86 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x620 (and $x321 $x302 $x546 $x643)))
 (let ((?x53 (/ d 2.0)))
 (let ((?x66 (+ y ?x53)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x38 (- 1.0)))
 (let ((?x59 (* ?x38 ?x51 ?x51 ?x51 ?x53)))
 (let ((?x69 (+ (* ?x65 ?x65 ?x51 ?x51 ?x51 ?x53 ?x66 ?x66) (* ?x65 ?x51 ?x51 ?x53 ?x53 ?x53 ?x66))))
 (let ((?x55 (+ (* ?x38 ?x51 d00) (* b00 ?x53))))
 (let (($x73 (= (* ?x55 ?x69 (- ?x59 (* ?x65 ?x65 ?x51 ?x53 ?x53 ?x53 ?x66 ?x66))) 0.0)))
 (let ((?x58 (+ (* a a ?x51 ?x51 ?x51 ?x53 y y) (* a ?x51 ?x51 ?x53 ?x53 ?x53 y))))
 (let (($x63 (= (* ?x55 ?x58 (- ?x59 (* a a ?x51 ?x53 ?x53 ?x53 y y))) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (let (($x76 (and $x36 (= (+ (* ?x38 b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not $x63) (not $x73)))))
 (rewrite (= $x76 $x620))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x78 (asserted $x77)))
 (let ((@x342 (mp (mp @x78 (quant-intro (proof-bind ?x595) (= $x77 $x648)) $x648) (rewrite (= $x648 $x625)) $x625)))
 (let ((@x462 (mp~ (mp @x342 (quant-intro (proof-bind ?x181) (= $x625 $x284)) $x284) (sk (~ $x284 $x441)) $x441)))
 (let ((@x132 (mp @x462 (rewrite (= $x441 $x721)) $x721)))
 (let ((@x654 (mp (and-elim @x132 $x696) @x120 $x147)))
 (let ((@x139 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x147) $x129)) @x654 $x129)))
 (let (($x474 (<= ?x703 0.0)))
 (let ((@x176 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x147) $x474)) @x654 $x474)))
 (let ((@x770 (unit-resolution ((_ th-lemma arith) (or $x99 (not $x474) (not $x129))) (hypothesis (not $x99)) @x176 @x139 false)))
 (let (($x423 (<= ?x150 0.0)))
 (let ((@x515 (unit-resolution ((_ th-lemma arith) (or $x423 (not $x474) (not $x129))) (hypothesis (not $x423)) @x176 @x139 false)))
 (let ((@x530 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x417 (not $x423) (not $x99))) (lemma @x515 $x423) (or $x417 (not $x99)))))
 (let ((@x519 (mp (unit-resolution @x530 (lemma @x770 $x99) $x417) (commutativity (= $x417 $x312)) $x312)))
 (let ((@x464 (unit-resolution (and-elim @x132 $x661) @x519 $x526)))
 (let (($x131 (= ?x627 0.0)))
 (let (($x571 (not $x131)))
 (let ((@x606 (hypothesis $x526)))
 (let ((@x579 (unit-resolution (unit-resolution ((_ th-lemma arith) (or $x571 $x680)) @x606 $x571) (symm (hypothesis $x619) $x131) false)))
 (let ((@x624 (lemma @x579 (or $x583 $x680))))
 (let (($x362 (>= ?x627 0.0)))
 (let ((?x96 (* (- (/ 1.0 2.0)) ?x241)))
 (let ((?x277 (* b00 d!6)))
 (let ((?x730 (* (/ 1.0 2.0) ?x277)))
 (let ((?x731 (+ ?x730 ?x96)))
 (let (($x184 (>= ?x731 0.0)))
 (let ((@x314 (lemma ((_ th-lemma arith) (hypothesis (not $x184)) @x176 false) $x184)))
 (let (($x559 (not $x362)))
 (let ((@x582 (hypothesis $x559)))
 (let ((?x472 (+ (* (/ 1.0 16.0) ?x631) (* (/ 1.0 16.0) ?x97) (* (/ 1.0 16.0) ?x121) (* (/ 1.0 16.0) ?x190) (* (/ 1.0 64.0) ?x323) (* (/ 1.0 8.0) ?x326) (* (/ 1.0 8.0) ?x330) (* (/ 1.0 64.0) ?x557) (* (/ 1.0 16.0) ?x590) (* (/ 1.0 32.0) ?x605))))
 (let (($x469 (<= ?x472 0.0)))
 (let (($x402 (not $x469)))
 (let ((?x396 (+ ?x360 ?x633 ?x338 ?x415 ?x108 ?x641 ?x229 ?x355 ?x702 ?x689)))
 (let (($x307 (>= ?x396 0.0)))
 (let (($x356 (not $x307)))
 (let (($x214 (<= ?x396 0.0)))
 (let (($x650 (>= ?x472 0.0)))
 (let (($x209 (not $x650)))
 (let ((@x244 (hypothesis $x209)))
 (let (($x687 (>= ?x524 0.0)))
 (let (($x406 (not $x687)))
 (let (($x102 (= 0.0 ?x524)))
 (let (($x562 (not $x102)))
 (let ((@x393 (monotonicity (symm (commutativity (= $x102 $x680)) (= $x680 $x102)) (= $x526 $x562))))
 (let (($x272 (<= ?x524 0.0)))
 (let (($x280 (not $x214)))
 (let (($x410 (= 0.0 ?x396)))
 (let (($x346 (not $x410)))
 (let ((@x345 (symm (commutativity (= $x410 (= ?x396 0.0))) (= (= ?x396 0.0) $x410))))
 (let ((@x383 (monotonicity @x345 (= (not (= ?x396 0.0)) $x346))))
 (let (($x636 (= ?x396 0.0)))
 (let (($x210 (not $x636)))
 (let (($x303 (not $x272)))
 (let ((@x375 (hypothesis $x303)))
 (let ((@x399 (mp (unit-resolution ((_ th-lemma arith triangle-eq) (or $x562 $x272)) @x375 $x562) (monotonicity (commutativity (= $x102 $x680)) (= $x562 $x526)) $x526)))
 (let (($x237 (or $x210 $x680)))
 (let ((@x352 (lemma (unit-resolution ((_ th-lemma arith) $x237) @x606 (hypothesis $x636) false) $x237)))
 (let ((@x594 (hypothesis $x402)))
 (let ((@x568 (unit-resolution ((_ th-lemma arith) (or (not $x184) $x469 $x188 $x272)) @x375 @x594 @x314 (hypothesis $x553) false)))
 (let (($x729 (<= ?x731 0.0)))
 (let ((@x178 (lemma ((_ th-lemma arith) @x139 (hypothesis (not $x729)) false) $x729)))
 (let ((@x589 (unit-resolution ((_ th-lemma arith) (or (not $x729) $x469 $x362 $x272)) @x375 @x594 @x178 @x582 false)))
 (let ((@x683 ((_ th-lemma arith triangle-eq) (or $x619 $x553 $x559))))
 (let ((@x651 (unit-resolution @x683 (unit-resolution (lemma @x589 (or $x362 $x272 $x469)) @x594 @x375 $x362) (unit-resolution (lemma @x568 (or $x188 $x272 $x469)) @x594 @x375 $x188) $x619)))
 (let ((@x385 (unit-resolution (lemma (unit-resolution @x624 @x651 @x399 false) (or $x469 $x272)) @x375 $x469)))
 (let ((@x228 ((_ th-lemma arith) (or $x307 $x402))))
 (let ((@x354 ((_ th-lemma arith triangle-eq) (or $x410 $x280 $x356))))
 (let ((@x378 (unit-resolution (unit-resolution @x354 (unit-resolution @x228 @x385 $x307) (or $x410 $x280)) (mp (unit-resolution @x352 @x399 $x210) @x383 $x346) $x280)))
 (let ((@x256 (lemma ((_ th-lemma arith) (hypothesis $x280) (hypothesis $x650) false) (or $x209 $x214))))
 (let ((@x380 (unit-resolution @x256 @x378 $x209)))
 (let ((@x245 (unit-resolution ((_ th-lemma arith) (or (not $x184) $x650 $x362 $x272)) @x375 @x582 @x314 @x244 false)))
 (let ((@x306 (unit-resolution @x683 (unit-resolution (lemma @x245 (or $x650 $x272 $x362)) @x380 @x375 $x362) (unit-resolution @x624 @x399 $x583) $x553)))
 (let ((@x367 (unit-resolution ((_ th-lemma arith) (or (not $x729) $x650 $x188 $x272)) @x375 @x178 @x306 @x380 false)))
 (let ((@x398 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x102 $x303 $x406)) (lemma @x367 $x272) (or $x102 $x406))))
 (let ((@x401 (unit-resolution @x398 (mp @x606 @x393 $x562) $x406)))
 (let ((@x409 (unit-resolution ((_ th-lemma arith) (or (not $x729) $x650 $x362 $x687)) (hypothesis $x406) @x178 @x582 @x244 false)))
 (let ((@x420 (unit-resolution @x683 (unit-resolution (lemma @x409 (or $x362 $x687 $x650)) @x401 @x244 $x362) (unit-resolution @x624 @x606 $x583) $x553)))
 (let ((@x421 (unit-resolution ((_ th-lemma arith) (or (not $x184) $x650 $x188 $x687)) @x401 @x314 @x420 @x244 false)))
 (let ((@x732 (lemma @x421 (or $x680 $x650))))
 (let ((@x576 (unit-resolution @x354 (mp (unit-resolution @x352 @x606 $x210) @x383 $x346) (unit-resolution @x256 (unit-resolution @x732 @x606 $x650) $x214) $x356)))
 (let ((@x734 (unit-resolution ((_ th-lemma arith) (or (not $x184) $x469 $x362 $x687)) @x401 (unit-resolution @x228 @x576 $x402) @x582 @x314 false)))
 (let ((@x1046 (unit-resolution @x683 (unit-resolution (lemma @x734 (or $x680 $x362)) @x464 $x362) (unit-resolution @x624 @x464 $x583) $x553)))
 (let ((@x744 (unit-resolution @x354 (mp (unit-resolution @x352 @x464 $x210) @x383 $x346) (unit-resolution @x256 (unit-resolution @x732 @x464 $x650) $x214) $x356)))
 (unit-resolution ((_ th-lemma arith) (or (not $x729) $x469 $x188 $x687)) (unit-resolution @x398 (mp @x464 @x393 $x562) $x406) (unit-resolution @x228 @x744 $x402) @x178 @x1046 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       103
 :arith-eq-adapter                99
 :arith-bound-propagations-lp     9
 :arith-conflicts                 324
 :arith-diseq                     167
 :arith-fixed-eqs                 12
 :arith-grobner-calls             11
 :arith-grobner-conflicts         2
 :arith-horner-calls              11
 :arith-horner-cross-nested-forms 52
 :arith-lower                     256
 :arith-make-feasible             262
 :arith-max-columns               90
 :arith-max-rows                  35
 :arith-nla-explanations          407
 :arith-nla-lemmas                316
 :arith-nra-calls                 1
 :arith-offset-eqs                23
 :arith-upper                     196
 :conflicts                       46
 :decisions                       349
 :del-clause                      421
 :final-checks                    175
 :max-memory                      21.13
 :memory                          17.37
 :minimized-lits                  8
 :mk-bool-var                     659
 :mk-clause                       474
 :num-allocs                      4938044829.00
 :num-checks                      1
 :propagations                    290
 :rlimit-count                    14648
 :time                            17.27
 :total-time                      17.28)
