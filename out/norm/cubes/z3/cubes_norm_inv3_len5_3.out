unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x353 (* (- 2) n!0)))
 (let ((?x857 (* (- 1) (* k!2 n!0))))
 (let ((?x1387 (* 3 c!3)))
 (let ((?x921 (+ k!2 ?x1387 ?x857 ?x353)))
 (let (($x224 (<= ?x921 1)))
 (let (($x481 (= ?x921 1)))
 (let ((?x465 (+ k!2 c!3)))
 (let ((?x1373 (+ k!2 m!1)))
 (let ((?x1661 (+ 6 m!1)))
 (let ((?x356 (+ 1 n!0)))
 (let ((?x1621 (* k!2 k!2)))
 (let ((?x1669 (* 3 ?x1621)))
 (let ((?x534 (* 2 (* c!3 c!3 n!0))))
 (let ((?x536 (* (- 3) (* c!3 c!3 c!3))))
 (let ((?x147 (* 2 (* k!2 k!2 n!0))))
 (let ((?x1251 (* ?x356 ?x356 ?x1661 ?x1661 ?x1661 ?x1373)))
 (let ((?x1250 (* c!3 c!3 m!1 n!0)))
 (let ((?x1188 (* k!2 m!1 m!1 n!0 n!0)))
 (let ((?x1467 (* (- 2) (* k!2 k!2 k!2))))
 (let ((?x1101 (* 2 (* k!2 k!2 m!1))))
 (let ((?x825 (* c!3 m!1 m!1 n!0 n!0)))
 (let ((?x823 (* k!2 k!2 k!2 n!0 n!0)))
 (let ((?x821 (* k!2 m!1 m!1)))
 (let ((?x1451 (* 2 (* k!2 k!2 m!1 n!0 n!0))))
 (let ((?x795 (* ?x356 ?x356 ?x356 ?x1661 ?x1661 ?x1661 ?x1373 ?x1373)))
 (let ((?x1403 (* (- 1) (* ?x356 ?x356 ?x1661 ?x1661 ?x1661 ?x1373 ?x1373))))
 (let ((?x873 (* 3 (* k!2 k!2 k!2 n!0))))
 (let ((?x553 (* 3 (* c!3 c!3))))
 (let ((?x458 (* 2 (* ?x356 ?x356 ?x356 ?x1661 ?x1661 ?x1661 ?x1373))))
 (let ((?x484 (* c!3 m!1 m!1)))
 (let ((?x380 (* 2 (* k!2 m!1 m!1 n!0))))
 (let ((?x827 (* 2 (* c!3 m!1 m!1 n!0))))
 (let ((?x1286 (* 5 (* k!2 k!2 m!1 n!0))))
 (let ((?x476 (+ (* 2 (* ?x356 ?x356 ?x356 ?x1373 ?x1373 ?x465)) (* 6 (* k!2 c!3 m!1 n!0)) (* 3 (* ?x356 ?x1661 ?x1661 ?x1373 ?x1373 ?x1373 ?x465 ?x465 ?x465)) ?x1286 (* ?x356 ?x1661 ?x1661 ?x1661 ?x465 ?x465 ?x465) ?x827 (* ?x356 ?x1661 ?x1661 ?x1373 ?x1373 ?x1373 ?x1373 ?x465 ?x465) ?x380 ?x484 ?x458 ?x553 (* (- 1) (* ?x356 ?x356 ?x1661 ?x1661 ?x1373 ?x1373 ?x1373 ?x1373 ?x465 ?x465)) (* (- 3) (* ?x356 ?x356 ?x1373 ?x1373 ?x465 ?x465)) (* 6 (* k!2 c!3)) (* k!2 c!3 c!3 n!0) (* (- 3) (* ?x356 ?x1661 ?x1661 ?x1661 ?x465 ?x465 ?x465 ?x465)) (* (- 9) (* k!2 c!3 c!3)) ?x873 ?x1403 ?x795 ?x1451 ?x821 ?x823 ?x825 (* 2 (* k!2 c!3 m!1)) (* k!2 k!2 c!3 n!0 n!0) (* ?x356 ?x356 ?x356 ?x1373 ?x1373 ?x1373 ?x465) (* (- 1) (* ?x356 ?x356 ?x1373 ?x1373 ?x1373 ?x465)) ?x1101 (* 4 (* k!2 c!3 n!0)) (* ?x356 ?x356 ?x1661 ?x1661 ?x1661 ?x1373 ?x465 ?x465 ?x465) ?x1467 (* (- 1) (* ?x356 ?x1661 ?x1661 ?x1661 ?x1373 ?x465 ?x465 ?x465)) (* (- 8) (* k!2 k!2 c!3)) (* 2 (* ?x356 ?x356 ?x1661 ?x1661 ?x1661 ?x465 ?x465 ?x465)) ?x1188 (* (- 3) (* ?x356 ?x356 ?x1661 ?x1661 ?x1661 ?x1373 ?x465)) (* (- 2) (* ?x356 ?x356 ?x1661 ?x1661 ?x1373 ?x1373 ?x1373 ?x465 ?x465)) ?x1250 ?x1251 ?x147 ?x536 ?x534 (* 2 (* k!2 c!3 m!1 n!0 n!0)) ?x1669 (* (- 1) (* ?x356 ?x1661 ?x1661 ?x1373 ?x1373 ?x1373 ?x465 ?x465)) (* 4 (* k!2 k!2 c!3 n!0)))))
 (let (($x1282 (= ?x476 0)))
 (let (($x748 (not $x1282)))
 (let ((?x1395 (+ (* 3 (* n!0 n!0)) (* (- 1) k!2) (* 3 n!0))))
 (let (($x1393 (= ?x1395 (- 1))))
 (let ((?x563 (* (- 9) n!0)))
 (let ((?x1388 (* (- 1) ?x1621)))
 (let ((?x1172 (* 18 c!3)))
 (let ((?x552 (* 5 k!2)))
 (let ((?x749 (* 9 (* c!3 n!0))))
 (let ((?x1093 (+ ?x749 ?x552 ?x1172 ?x1388 ?x563)))
 (let (($x915 (= ?x1093 4)))
 (let ((?x776 (+ m!1 (* (- 6) n!0))))
 (let (($x221 (= ?x776 6)))
 (let (($x1021 (and $x221 $x915 $x481 $x1393 $x748)))
 (let ((?x1353 (+ c!3 k!2)))
 (let ((?x1186 (+ ?x1669 (* 3 (* ?x356 ?x1661 ?x1661 ?x1373 ?x1373 ?x1373 ?x1353 ?x1353 ?x1353)) (* 2 (* c!3 k!2 m!1)) ?x1101 (* (- 9) (* c!3 c!3 k!2)) ?x1286 (* 6 (* c!3 k!2 m!1 n!0)) ?x1250 ?x873 (* 4 (* c!3 k!2 k!2 n!0)) (* c!3 c!3 k!2 n!0) ?x380 ?x1467 (* c!3 k!2 k!2 n!0 n!0) ?x823 (* 2 (* c!3 k!2 m!1 n!0 n!0)) ?x484 ?x821 ?x827 ?x825 ?x1188 ?x1451 (* ?x356 ?x356 ?x356 ?x1373 ?x1373 ?x1373 ?x1353) (* (- 1) (* ?x356 ?x356 ?x1373 ?x1373 ?x1373 ?x1353)) (* (- 1) (* ?x356 ?x356 ?x1661 ?x1661 ?x1373 ?x1373 ?x1373 ?x1373 ?x1353 ?x1353)) (* 2 (* ?x356 ?x356 ?x356 ?x1373 ?x1373 ?x1353)) (* (- 8) (* c!3 k!2 k!2)) ?x458 (* (- 2) (* ?x356 ?x356 ?x1661 ?x1661 ?x1373 ?x1373 ?x1373 ?x1353 ?x1353)) (* (- 3) (* ?x356 ?x356 ?x1661 ?x1661 ?x1661 ?x1373 ?x1353)) (* ?x356 ?x1661 ?x1661 ?x1661 ?x1353 ?x1353 ?x1353) (* 2 (* ?x356 ?x356 ?x1661 ?x1661 ?x1661 ?x1353 ?x1353 ?x1353)) ?x1403 (* (- 3) (* ?x356 ?x356 ?x1373 ?x1373 ?x1353 ?x1353)) (* (- 1) (* ?x356 ?x1661 ?x1661 ?x1661 ?x1373 ?x1353 ?x1353 ?x1353)) (* (- 3) (* ?x356 ?x1661 ?x1661 ?x1661 ?x1353 ?x1353 ?x1353 ?x1353)) ?x1251 ?x147 (* 4 (* c!3 k!2 n!0)) (* ?x356 ?x1661 ?x1661 ?x1373 ?x1373 ?x1373 ?x1373 ?x1353 ?x1353) ?x534 ?x795 (* 6 (* c!3 k!2)) ?x553 ?x536 (* (- 1) (* ?x356 ?x1661 ?x1661 ?x1373 ?x1373 ?x1373 ?x1353 ?x1353)) (* ?x356 ?x356 ?x1661 ?x1661 ?x1661 ?x1373 ?x1353 ?x1353 ?x1353))))
 (let (($x1350 (and $x221 (= (+ ?x1172 ?x552 ?x563 ?x1388 ?x749) 4) (= (+ ?x1387 k!2 ?x353 ?x857) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x1186 0)))))
 (let (($x760 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x398 (+ 6 m)))
 (let ((?x336 (+ 1 n)))
 (let ((?x1670 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1849 (* (- 3) (* c c c))))
 (let ((?x1852 (* 3 (* c c))))
 (let ((?x1847 (* 6 (* c k))))
 (let ((?x1548 (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)))
 (let ((?x1444 (* 2 (* c c n))))
 (let ((?x1440 (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x1850 (* 4 (* c k n))))
 (let ((?x1438 (* 2 (* k k n))))
 (let ((?x1218 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)))
 (let ((?x1057 (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)))
 (let ((?x759 (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x726 (* k m m n n)))
 (let ((?x725 (* c m m n n)))
 (let ((?x675 (* k m m)))
 (let ((?x674 (* c m m)))
 (let ((?x634 (* k k k n n)))
 (let ((?x631 (* c k k n n)))
 (let ((?x425 (* c c k n)))
 (let ((?x421 (* c c m n)))
 (let ((?x49 (* k k)))
 (let ((?x1747 (* 3 ?x49)))
 (let ((?x960 (+ ?x1747 (* 3 (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 2 (* c k m)) (* 2 (* k k m)) (* (- 9) (* c c k)) (* 5 (* k k m n)) (* 6 (* c k m n)) ?x421 (* 3 (* k k k n)) (* 4 (* c k k n)) ?x425 (* 2 (* k m m n)) (* (- 2) (* k k k)) ?x631 ?x634 (* 2 (* c k m n n)) ?x674 ?x675 (* 2 (* c m m n)) ?x725 ?x726 (* 2 (* k k m n n)) ?x759 (* (- 1) (* ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 2 (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x68)) (* (- 8) (* c k k)) (* 2 (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)) (* (- 2) (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 3) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68)) ?x1057 (* 2 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)) (* (- 1) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)) (* (- 3) (* ?x336 ?x336 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)) (* (- 3) (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68 ?x68)) ?x1218 ?x1438 ?x1850 ?x1440 ?x1444 ?x1548 ?x1847 ?x1852 ?x1849 (* (- 1) (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x1670)))
 (let (($x328 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x290 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x241 (* (- 1) ?x49)))
 (let ((?x240 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x238 (= (+ ?x40 ?x44 ?x240 ?x241 (* 9 (* c n))) 4)))
 (let (($x154 (= (+ m (* (- 6) n)) 6)))
 (and $x154 $x238 $x290 $x328 (not (= ?x960 0)))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x984 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x398 (+ 6 m)))
 (let ((?x336 (+ 1 n)))
 (let ((?x1033 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68)))
 (let ((?x1123 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)))
 (let ((?x1181 (* ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x930 (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x1665 (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x768 (* ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1299 (+ ?x768 (* (- 1) (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x336 ?x69 ?x68 ?x68)) (* (- 1) (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)) ?x1665 (* (- 1) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)) (* (- 3) (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)) ?x930 (* (- 1) (* ?x336 ?x336 ?x69 ?x69 ?x68)) (* 3 (* ?x336 ?x336 ?x69 ?x69 ?x68 ?x68)) ?x1181 (* (- 2) (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x68)) (* 3 (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68 ?x68)) (* (- 1) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)) (* (- 2) (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)) (* (- 2) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)) (* (- 1) (* ?x68 ?x68)) (* 3 (* ?x68 ?x68 ?x68)) ?x1123 (* (- 2) (* ?x336 ?x68 ?x68)) (* ?x69 ?x68 ?x68) (* 2 (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 3 ?x1033))))
 (let (($x777 (not (= ?x1299 0))))
 (let (($x782 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x337 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x241 (* (- 1) ?x49)))
 (let ((?x240 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x154 (= (+ m (* (- 6) n)) 6)))
 (and $x154 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x240 ?x241) 4) $x337 $x782 $x777))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1391 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x398 (+ 6 m)))
 (let ((?x336 (+ 1 n)))
 (let ((?x1670 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1849 (* (- 3) (* c c c))))
 (let ((?x1852 (* 3 (* c c))))
 (let ((?x1847 (* 6 (* c k))))
 (let ((?x1548 (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)))
 (let ((?x1444 (* 2 (* c c n))))
 (let ((?x1440 (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x1850 (* 4 (* c k n))))
 (let ((?x1438 (* 2 (* k k n))))
 (let ((?x1218 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)))
 (let ((?x1057 (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)))
 (let ((?x759 (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x726 (* k m m n n)))
 (let ((?x725 (* c m m n n)))
 (let ((?x675 (* k m m)))
 (let ((?x674 (* c m m)))
 (let ((?x634 (* k k k n n)))
 (let ((?x631 (* c k k n n)))
 (let ((?x425 (* c c k n)))
 (let ((?x421 (* c c m n)))
 (let ((?x49 (* k k)))
 (let ((?x1747 (* 3 ?x49)))
 (let ((?x960 (+ ?x1747 (* 3 (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 2 (* c k m)) (* 2 (* k k m)) (* (- 9) (* c c k)) (* 5 (* k k m n)) (* 6 (* c k m n)) ?x421 (* 3 (* k k k n)) (* 4 (* c k k n)) ?x425 (* 2 (* k m m n)) (* (- 2) (* k k k)) ?x631 ?x634 (* 2 (* c k m n n)) ?x674 ?x675 (* 2 (* c m m n)) ?x725 ?x726 (* 2 (* k k m n n)) ?x759 (* (- 1) (* ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 2 (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x68)) (* (- 8) (* c k k)) (* 2 (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)) (* (- 2) (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 3) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68)) ?x1057 (* 2 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)) (* (- 1) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)) (* (- 3) (* ?x336 ?x336 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)) (* (- 3) (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68 ?x68)) ?x1218 ?x1438 ?x1850 ?x1440 ?x1444 ?x1548 ?x1847 ?x1852 ?x1849 (* (- 1) (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x1670)))
 (let (($x328 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x290 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x241 (* (- 1) ?x49)))
 (let ((?x240 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x238 (= (+ ?x40 ?x44 ?x240 ?x241 (* 9 (* c n))) 4)))
 (let (($x154 (= (+ m (* (- 6) n)) 6)))
 (let (($x1516 (and $x154 $x238 $x290 $x328 (not (= ?x960 0)))))
 (let ((?x1123 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)))
 (let ((?x1181 (* ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x930 (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x1665 (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x768 (* ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1299 (+ ?x768 (* (- 1) ?x759) (* (- 1) ?x1440) (* (- 1) (* ?x336 ?x69 ?x68 ?x68)) (* (- 1) ?x1548) ?x1665 (* (- 1) ?x1670) (* (- 3) (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x1057) ?x930 (* (- 1) (* ?x336 ?x336 ?x69 ?x69 ?x68)) (* 3 (* ?x336 ?x336 ?x69 ?x69 ?x68 ?x68)) ?x1181 (* (- 2) (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x68)) (* 3 (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68 ?x68)) (* (- 1) ?x1218) (* (- 2) (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)) (* (- 2) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)) (* (- 1) (* ?x68 ?x68)) (* 3 (* ?x68 ?x68 ?x68)) ?x1123 (* (- 2) (* ?x336 ?x68 ?x68)) (* ?x69 ?x68 ?x68) (* 2 (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 3 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68)))))
 (let (($x777 (not (= ?x1299 0))))
 (let (($x782 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x337 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1109 (and $x154 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x240 ?x241) 4) $x337 $x782 $x777)))
 (rewrite (= $x1109 $x1516)))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x774 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x398 (+ 6 m)))
 (let ((?x336 (+ 1 n)))
 (let ((?x1033 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68)))
 (let ((?x1123 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)))
 (let ((?x1181 (* ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x930 (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x1665 (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x768 (* ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1299 (+ ?x768 (* (- 1) (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x336 ?x69 ?x68 ?x68)) (* (- 1) (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)) ?x1665 (* (- 1) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)) (* (- 3) (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)) ?x930 (* (- 1) (* ?x336 ?x336 ?x69 ?x69 ?x68)) (* 3 (* ?x336 ?x336 ?x69 ?x69 ?x68 ?x68)) ?x1181 (* (- 2) (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x68)) (* 3 (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68 ?x68)) (* (- 1) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)) (* (- 2) (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)) (* (- 2) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)) (* (- 1) (* ?x68 ?x68)) (* 3 (* ?x68 ?x68 ?x68)) ?x1123 (* (- 2) (* ?x336 ?x68 ?x68)) (* ?x69 ?x68 ?x68) (* 2 (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 3 ?x1033))))
 (let (($x777 (not (= ?x1299 0))))
 (let (($x782 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x541 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1530 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x154 (= (+ m (* (- 6) n)) 6)))
 (and $x154 (= ?x1530 (- 4)) $x541 $x782 $x777))))))))))))))))))) :qid k!34))
 ))
 (let ((?x381 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x398 (+ 6 m)))
 (let ((?x336 (+ 1 n)))
 (let ((?x1033 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68)))
 (let ((?x1123 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)))
 (let ((?x1181 (* ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x930 (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x1665 (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x768 (* ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1299 (+ ?x768 (* (- 1) (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x336 ?x69 ?x68 ?x68)) (* (- 1) (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)) ?x1665 (* (- 1) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)) (* (- 3) (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)) ?x930 (* (- 1) (* ?x336 ?x336 ?x69 ?x69 ?x68)) (* 3 (* ?x336 ?x336 ?x69 ?x69 ?x68 ?x68)) ?x1181 (* (- 2) (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x68)) (* 3 (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68 ?x68)) (* (- 1) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)) (* (- 2) (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)) (* (- 2) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)) (* (- 1) (* ?x68 ?x68)) (* 3 (* ?x68 ?x68 ?x68)) ?x1123 (* (- 2) (* ?x336 ?x68 ?x68)) (* ?x69 ?x68 ?x68) (* 2 (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 3 ?x1033))))
 (let (($x777 (not (= ?x1299 0))))
 (let (($x782 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x337 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x241 (* (- 1) ?x49)))
 (let ((?x240 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x154 (= (+ m (* (- 6) n)) 6)))
 (let (($x1109 (and $x154 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x240 ?x241) 4) $x337 $x782 $x777)))
 (let (($x541 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1530 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x786 (and $x154 (= ?x1530 (- 4)) $x541 $x782 $x777)))
 (rewrite (= $x786 $x1109))))))))))))))))))))))))))))
 ))
 (let (($x121 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x73 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x103 (* ?x68 ?x68)))
 (let ((?x77 (- (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70) (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70))))
 (let ((?x79 (- (- ?x77 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73 ?x70)) (* ?x68 ?x68 ?x69 ?x70))))
 (let ((?x82 (+ (- ?x79 (* ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70)) (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x73 ?x73 ?x70))))
 (let ((?x87 (- (- ?x82 (* ?x68 ?x68 ?x68 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70)) (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x73 ?x73 ?x70))))
 (let ((?x90 (+ (- ?x87 (* ?x68 ?x68 ?x68 ?x73 ?x73 ?x73 ?x70)) (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73 ?x70 ?x70))))
 (let ((?x95 (+ (- ?x90 (* ?x68 ?x69 ?x69 ?x70 ?x70)) (* 3 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70) (* ?x68 ?x68 ?x68 ?x69 ?x73 ?x73 ?x73 ?x70))))
 (let ((?x99 (+ (- ?x95 (* 2 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70)) (* 3 ?x68 ?x68 ?x68 ?x68 ?x73 ?x73 ?x73 ?x70))))
 (let ((?x105 (- (- ?x99 (* ?x69 ?x73 ?x73 ?x73 ?x70 ?x70)) (* 2 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70))))
 (let ((?x107 (- (- ?x105 (* 2 ?x68 ?x68 ?x68 ?x73 ?x73 ?x73 ?x70 ?x70)) ?x103)))
 (let ((?x110 (+ ?x107 (* 3 ?x68 ?x68 ?x68) (* ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70))))
 (let ((?x116 (+ (- ?x110 (* 2 ?x68 ?x68 ?x70)) (* ?x68 ?x68 ?x69) (* 2 ?x68 ?x68 ?x69 ?x69 ?x69 ?x73 ?x73 ?x70 ?x70) (* 3 ?x68 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x116 0))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x765 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x398 (+ 6 m)))
 (let ((?x336 (+ 1 n)))
 (let ((?x1033 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68)))
 (let ((?x1123 (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)))
 (let ((?x1181 (* ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x930 (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x1665 (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x768 (* ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1299 (+ ?x768 (* (- 1) (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x336 ?x69 ?x68 ?x68)) (* (- 1) (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x69)) ?x1665 (* (- 1) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69 ?x68 ?x68 ?x68)) (* (- 3) (* ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)) ?x930 (* (- 1) (* ?x336 ?x336 ?x69 ?x69 ?x68)) (* 3 (* ?x336 ?x336 ?x69 ?x69 ?x68 ?x68)) ?x1181 (* (- 2) (* ?x336 ?x336 ?x336 ?x69 ?x69 ?x68)) (* 3 (* ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68 ?x68)) (* (- 1) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)) (* (- 2) (* ?x336 ?x336 ?x336 ?x398 ?x398 ?x398 ?x69)) (* (- 2) (* ?x336 ?x336 ?x398 ?x398 ?x398 ?x68 ?x68 ?x68)) (* (- 1) (* ?x68 ?x68)) (* 3 (* ?x68 ?x68 ?x68)) ?x1123 (* (- 2) (* ?x336 ?x68 ?x68)) (* ?x69 ?x68 ?x68) (* 2 (* ?x336 ?x336 ?x398 ?x398 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 3 ?x1033))))
 (let (($x777 (not (= ?x1299 0))))
 (let (($x782 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x541 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1530 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x154 (= (+ m (* (- 6) n)) 6)))
 (let (($x786 (and $x154 (= ?x1530 (- 4)) $x541 $x782 $x777)))
 (let ((?x70 (+ n 1)))
 (let ((?x73 (+ m 6)))
 (let ((?x103 (* ?x68 ?x68)))
 (let ((?x77 (- (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70) (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70))))
 (let ((?x79 (- (- ?x77 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73 ?x70)) (* ?x68 ?x68 ?x69 ?x70))))
 (let ((?x82 (+ (- ?x79 (* ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70)) (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x73 ?x73 ?x70))))
 (let ((?x87 (- (- ?x82 (* ?x68 ?x68 ?x68 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70)) (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x73 ?x73 ?x70))))
 (let ((?x90 (+ (- ?x87 (* ?x68 ?x68 ?x68 ?x73 ?x73 ?x73 ?x70)) (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73 ?x70 ?x70))))
 (let ((?x95 (+ (- ?x90 (* ?x68 ?x69 ?x69 ?x70 ?x70)) (* 3 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70) (* ?x68 ?x68 ?x68 ?x69 ?x73 ?x73 ?x73 ?x70))))
 (let ((?x99 (+ (- ?x95 (* 2 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70)) (* 3 ?x68 ?x68 ?x68 ?x68 ?x73 ?x73 ?x73 ?x70))))
 (let ((?x105 (- (- ?x99 (* ?x69 ?x73 ?x73 ?x73 ?x70 ?x70)) (* 2 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70))))
 (let ((?x107 (- (- ?x105 (* 2 ?x68 ?x68 ?x68 ?x73 ?x73 ?x73 ?x70 ?x70)) ?x103)))
 (let ((?x110 (+ ?x107 (* 3 ?x68 ?x68 ?x68) (* ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70))))
 (let ((?x116 (+ (- ?x110 (* 2 ?x68 ?x68 ?x70)) (* ?x68 ?x68 ?x69) (* 2 ?x68 ?x68 ?x69 ?x69 ?x69 ?x73 ?x73 ?x70 ?x70) (* 3 ?x68 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x120 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x116 0))))))
 (rewrite (= $x120 $x786))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x122 (asserted $x121)))
 (let ((@x1236 (mp (mp @x122 (quant-intro (proof-bind ?x765) (= $x121 $x774)) $x774) (rewrite (= $x774 $x774)) $x774)))
 (let ((@x1285 (mp (mp @x1236 (quant-intro (proof-bind ?x381) (= $x774 $x984)) $x984) (quant-intro (proof-bind ?x1391) (= $x984 $x760)) $x760)))
 (let ((@x143 (mp (mp~ @x1285 (sk (~ $x760 $x1350)) $x1350) (rewrite (= $x1350 $x1021)) $x1021)))
 (let ((@x684 (and-elim @x143 $x481)))
 (let ((@x1059 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x481) $x224)) @x684 $x224)))
 (let (($x1091 (>= ?x921 1)))
 (let ((@x215 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x481) $x1091)) @x684 $x1091)))
 (let (($x933 (<= ?x1395 (- 1))))
 (let ((@x990 (and-elim @x143 $x1393)))
 (let ((@x595 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1393) $x933)) @x990 $x933)))
 (let (($x603 (>= ?x1395 (- 1))))
 (let ((@x217 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1393) $x603)) @x990 $x603)))
 (let (($x1156 (<= ?x776 6)))
 (let ((@x1329 (and-elim @x143 $x221)))
 (let ((@x871 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x221) $x1156)) @x1329 $x1156)))
 (let (($x1477 (>= ?x776 6)))
 (let ((@x829 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x221) $x1477)) @x1329 $x1477)))
 (let (($x1155 (<= ?x1093 4)))
 (let ((@x1398 (and-elim @x143 $x915)))
 (let ((@x1163 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x915) $x1155)) @x1398 $x1155)))
 (let (($x338 (>= ?x1093 4)))
 (let ((@x1432 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x915) $x338)) @x1398 $x338)))
 (let (($x207 (not (<= ?x476 0))))
 (let (($x1165 (>= ?x476 0)))
 (let ((@x767 ((_ th-lemma arith) (hypothesis (not $x1165)) @x217 @x595 @x217 @x595 @x215 @x1059 @x829 @x871 @x217 @x595 @x1432 @x1163 @x215 @x1059 @x217 @x595 @x829 @x871 @x829 @x871 @x217 @x595 @x215 @x1059 false)))
 (let ((@x843 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1282 $x207 (not $x1165))) (and-elim @x143 $x748) (or $x207 (not $x1165)))))
 ((_ th-lemma arith) (unit-resolution @x843 (lemma @x767 $x1165) $x207) @x217 @x595 @x217 @x595 @x215 @x1059 @x829 @x871 @x217 @x595 @x1432 @x1163 @x215 @x1059 @x217 @x595 @x829 @x871 @x829 @x871 @x217 @x595 @x215 @x1059 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        20
 :arith-assert-upper        27
 :arith-branch-var          3
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           11
 :arith-grobner             2
 :arith-ineq-splits         3
 :arith-max-min             671
 :arith-nonlinear-bounds    28
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             6
 :arith-pivots              10
 :arith-row-summations      14
 :arith-tableau-max-columns 77
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 11
 :del-clause                16
 :final-checks              12
 :max-memory                3.96
 :memory                    3.36
 :mk-bool-var               31
 :mk-clause                 16
 :num-allocs                2166436
 :num-checks                1
 :propagations              12
 :rlimit-count              24565
 :time                      0.02
 :total-time                0.03)
