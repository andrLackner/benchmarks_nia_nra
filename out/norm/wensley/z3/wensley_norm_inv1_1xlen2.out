unsat
((set-logic NRA)
(declare-fun a!8 () Real)
(declare-fun b!7 () Real)
(declare-fun d!6 () Real)
(declare-fun y!5 () Real)
(proof
(let ((?x545 (* (- (/ 1.0 2.0)) (* d00 d!6 a!8 a!8))))
 (let ((?x1068 (* (/ 1.0 8.0) (* b00 y!5 y!5 d!6 b!7 b!7 b!7 a!8 a!8))))
 (let ((?x271 (* (- (/ 1.0 16.0)) (* d00 y!5 d!6 b!7 b!7 b!7 a!8 a!8 a!8))))
 (let ((?x799 (* (- (/ 1.0 8.0)) (* b00 y00 y!5 d!6 b!7 b!7 b!7 a!8 a!8))))
 (let ((?x787 (* (- 1.0) (* b00 y00 d!6 a!8))))
 (let ((?x476 (* b00 y!5 d!6 a!8)))
 (let ((?x826 (* (/ 1.0 16.0) (* a00 d00 y!5 d!6 b!7 b!7 b!7 a!8 a!8))))
 (let ((?x737 (* (/ 1.0 2.0) (* a00 d00 d!6 a!8))))
 (let ((?x871 (+ (* b00 y!5 d!6 b!7) (* (- (/ 3.0 32.0)) (* d00 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8)) (* (- (/ 1.0 16.0)) (* b00 y00 d!6 d!6 b!7 b!7 b!7 b!7 b!7)) (* (- (/ 1.0 8.0)) (* b00 y00 d!6 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 2.0) (* b00 d!6 d!6 b!7)) (* (- (/ 1.0 8.0)) (* b00 y00 y!5 d!6 b!7 b!7 b!7 b!7 b!7)) (* (- (/ 1.0 32.0)) (* d00 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7)) (* (/ 1.0 8.0) (* b00 y!5 d!6 d!6 b!7 b!7 b!7 b!7 b!7)) (* (- (/ 1.0 16.0)) (* b00 y00 d!6 d!6 b!7 b!7 b!7 a!8 a!8)) (* (- (/ 3.0 16.0)) (* d00 y!5 d!6 b!7 b!7 b!7 b!7 b!7 a!8)) (* (- (/ 1.0 16.0)) (* d00 y!5 d!6 b!7 b!7 b!7 b!7 b!7 b!7)) ?x737 (* (- (/ 3.0 16.0)) (* d00 y!5 d!6 b!7 b!7 b!7 b!7 a!8 a!8)) (* (- (/ 3.0 32.0)) (* d00 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8)) (* (- (/ 1.0 32.0)) (* d00 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8)) (* (- (/ 1.0 4.0)) (* b00 y00 y!5 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 8.0) (* b00 y!5 d!6 d!6 b!7 b!7 b!7 a!8 a!8)) (* (- (/ 1.0 2.0)) (* d00 d!6 b!7 b!7)) (* (/ 1.0 8.0) (* b00 y!5 y!5 d!6 b!7 b!7 b!7 b!7 b!7)) ?x826 (* (/ 1.0 8.0) (* a00 d00 y!5 d!6 b!7 b!7 b!7 b!7 a!8)) ?x476 (* (/ 1.0 32.0) (* a00 d00 d!6 d!6 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 4.0) (* b00 y!5 y!5 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 2.0) (* b00 d!6 d!6 a!8)) (* (/ 1.0 2.0) (* a00 d00 d!6 b!7)) ?x787 (* (/ 1.0 4.0) (* b00 y!5 d!6 d!6 b!7 b!7 b!7 b!7 a!8)) ?x799 ?x271 ?x1068 (* (/ 1.0 32.0) (* a00 d00 d!6 d!6 b!7 b!7 b!7 b!7 b!7)) ?x545 (* (/ 1.0 32.0) (* b00 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)) (* (/ 1.0 16.0) (* b00 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 32.0) (* b00 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 16.0) (* a00 d00 y!5 d!6 b!7 b!7 b!7 b!7 b!7)) (* (- 1.0) (* b00 y00 d!6 b!7)) (* (- 1.0) (* d00 d!6 b!7 a!8)) (* (/ 1.0 16.0) (* a00 d00 d!6 d!6 b!7 b!7 b!7 b!7 a!8)))))
 (let (($x840 (>= ?x871 0.0)))
 (let ((?x569 (* d!6 a!8)))
 (let ((?x1067 (* (- 2.0) (* y!5 b!7))))
 (let ((?x833 (+ (* 2.0 (* y00 b!7)) (* (- 1.0) (* a00 d!6)) ?x1067 ?x569)))
 (let (($x794 (>= ?x833 0.0)))
 (let (($x739 (= 0.0 ?x833)))
 (let ((@x244 (symm (commutativity (= $x739 (= ?x833 0.0))) (= (= ?x833 0.0) $x739))))
 (let (($x838 (= ?x833 0.0)))
 (let ((?x813 (+ ?x737 ?x826 ?x476 ?x787 ?x799 ?x271 ?x1068 ?x545)))
 (let (($x819 (= ?x813 0.0)))
 (let (($x804 (not $x819)))
 (let (($x882 (or $x804 (not (= ?x871 0.0)))))
 (let ((?x608 (+ (* b00 d!6) (* (- 1.0) (* d00 b!7)))))
 (let (($x613 (= ?x608 0.0)))
 (let ((?x98 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x163 (= (+ ?x30 ?x98 (* (- 1.0) (* d00 a!8)) (* 2.0 (* b00 y!5))) 0.0)))
 (let (($x468 (and $x163 $x613 $x838 $x882)))
 (let ((?x513 (* (/ 1.0 8.0) (* y!5 y!5 d!6 b!7 b!7 b!7 a!8 a!8 b00))))
 (let ((?x886 (* (- (/ 1.0 16.0)) (* y!5 d!6 b!7 b!7 b!7 a!8 a!8 a!8 d00))))
 (let ((?x759 (* (- (/ 1.0 8.0)) (* y!5 d!6 b!7 b!7 b!7 a!8 a!8 b00 y00))))
 (let ((?x755 (* (/ 1.0 2.0) (* d!6 a!8 a00 d00))))
 (let ((?x751 (* y!5 d!6 a!8 b00)))
 (let ((?x746 (* (- (/ 1.0 2.0)) (* d!6 a!8 a!8 d00))))
 (let ((?x297 (* (- 1.0) (* d!6 a!8 b00 y00))))
 (let ((?x292 (* (/ 1.0 16.0) (* y!5 d!6 b!7 b!7 b!7 a!8 a!8 a00 d00))))
 (let ((?x776 (+ ?x292 ?x297 (* (/ 1.0 16.0) (* y!5 d!6 b!7 b!7 b!7 b!7 b!7 a00 d00)) (* (/ 1.0 8.0) (* y!5 d!6 b!7 b!7 b!7 b!7 a!8 a00 d00)) ?x746 (* (/ 1.0 32.0) (* d!6 d!6 b!7 b!7 b!7 b!7 b!7 a00 d00)) ?x751 (* (/ 1.0 16.0) (* d!6 d!6 b!7 b!7 b!7 b!7 a!8 a00 d00)) ?x755 (* (/ 1.0 32.0) (* d!6 d!6 b!7 b!7 b!7 a!8 a!8 a00 d00)) ?x759 ?x886 ?x513 (* (- 1.0) (* d!6 b!7 b00 y00)) (* (- (/ 1.0 2.0)) (* d!6 b!7 b!7 d00)) (* (- 1.0) (* d!6 b!7 a!8 d00)) (* y!5 d!6 b!7 b00) (* (/ 1.0 2.0) (* d!6 d!6 b!7 b00)) (* (/ 1.0 2.0) (* d!6 d!6 a!8 b00)) (* (/ 1.0 2.0) (* d!6 b!7 a00 d00)) (* (- (/ 1.0 8.0)) (* y!5 d!6 b!7 b!7 b!7 b!7 b!7 b00 y00)) (* (- (/ 1.0 4.0)) (* y!5 d!6 b!7 b!7 b!7 b!7 a!8 b00 y00)) (* (- (/ 1.0 16.0)) (* d!6 d!6 b!7 b!7 b!7 b!7 b!7 b00 y00)) (* (- (/ 1.0 8.0)) (* d!6 d!6 b!7 b!7 b!7 b!7 a!8 b00 y00)) (* (- (/ 1.0 16.0)) (* d!6 d!6 b!7 b!7 b!7 a!8 a!8 b00 y00)) (* (- (/ 1.0 16.0)) (* y!5 d!6 b!7 b!7 b!7 b!7 b!7 b!7 d00)) (* (- (/ 3.0 16.0)) (* y!5 d!6 b!7 b!7 b!7 b!7 b!7 a!8 d00)) (* (- (/ 3.0 16.0)) (* y!5 d!6 b!7 b!7 b!7 b!7 a!8 a!8 d00)) (* (- (/ 1.0 32.0)) (* d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 d00)) (* (- (/ 3.0 32.0)) (* d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 d00)) (* (- (/ 3.0 32.0)) (* d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 d00)) (* (- (/ 1.0 32.0)) (* d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 d00)) (* (/ 1.0 8.0) (* y!5 y!5 d!6 b!7 b!7 b!7 b!7 b!7 b00)) (* (/ 1.0 4.0) (* y!5 y!5 d!6 b!7 b!7 b!7 b!7 a!8 b00)) (* (/ 1.0 8.0) (* y!5 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b00)) (* (/ 1.0 4.0) (* y!5 d!6 d!6 b!7 b!7 b!7 b!7 a!8 b00)) (* (/ 1.0 8.0) (* y!5 d!6 d!6 b!7 b!7 b!7 a!8 a!8 b00)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b00)) (* (/ 1.0 16.0) (* d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 b00)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 b00)))))
 (let (($x779 (or (not (= (+ ?x292 ?x297 ?x746 ?x751 ?x755 ?x759 ?x886 ?x513) 0.0)) (not (= ?x776 0.0)))))
 (let (($x726 (= (+ ?x569 ?x1067 (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00))) 0.0)))
 (let (($x562 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x98 (* 2.0 (* y!5 b00))) 0.0)))
 (let (($x791 (and $x562 (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) $x726 $x779)))
 (let (($x1128 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x351 (* (/ 1.0 8.0) (* y y d b b b a a b00))))
 (let ((?x326 (* (- (/ 1.0 16.0)) (* y d b b b a a a d00))))
 (let ((?x288 (* (- (/ 1.0 8.0)) (* y d b b b a a b00 y00))))
 (let ((?x251 (* (/ 1.0 2.0) (* d a a00 d00))))
 (let ((?x234 (* y d a b00)))
 (let ((?x213 (* (- (/ 1.0 2.0)) (* d a a d00))))
 (let ((?x182 (* (- 1.0) (* d a b00 y00))))
 (let ((?x154 (* (/ 1.0 16.0) (* y d b b b a a a00 d00))))
 (let ((?x1110 (+ ?x154 ?x182 (* (/ 1.0 16.0) (* y d b b b b b a00 d00)) (* (/ 1.0 8.0) (* y d b b b b a a00 d00)) ?x213 (* (/ 1.0 32.0) (* d d b b b b b a00 d00)) ?x234 (* (/ 1.0 16.0) (* d d b b b b a a00 d00)) ?x251 (* (/ 1.0 32.0) (* d d b b b a a a00 d00)) ?x288 ?x326 ?x351 (* (- 1.0) (* d b b00 y00)) (* (- (/ 1.0 2.0)) (* d b b d00)) (* (- 1.0) (* d b a d00)) (* y d b b00) (* (/ 1.0 2.0) (* d d b b00)) (* (/ 1.0 2.0) (* d d a b00)) (* (/ 1.0 2.0) (* d b a00 d00)) (* (- (/ 1.0 8.0)) (* y d b b b b b b00 y00)) (* (- (/ 1.0 4.0)) (* y d b b b b a b00 y00)) (* (- (/ 1.0 16.0)) (* d d b b b b b b00 y00)) (* (- (/ 1.0 8.0)) (* d d b b b b a b00 y00)) (* (- (/ 1.0 16.0)) (* d d b b b a a b00 y00)) (* (- (/ 1.0 16.0)) (* y d b b b b b b d00)) (* (- (/ 3.0 16.0)) (* y d b b b b b a d00)) (* (- (/ 3.0 16.0)) (* y d b b b b a a d00)) (* (- (/ 1.0 32.0)) (* d d b b b b b b d00)) (* (- (/ 3.0 32.0)) (* d d b b b b b a d00)) (* (- (/ 3.0 32.0)) (* d d b b b b a a d00)) (* (- (/ 1.0 32.0)) (* d d b b b a a a d00)) (* (/ 1.0 8.0) (* y y d b b b b b b00)) (* (/ 1.0 4.0) (* y y d b b b b a b00)) (* (/ 1.0 8.0) (* y d d b b b b b b00)) (* (/ 1.0 4.0) (* y d d b b b b a b00)) (* (/ 1.0 8.0) (* y d d b b b a a b00)) (* (/ 1.0 32.0) (* d d d b b b b b b00)) (* (/ 1.0 16.0) (* d d d b b b b a b00)) (* (/ 1.0 32.0) (* d d d b b b a a b00)))))
 (let (($x1126 (or (not (= (+ ?x154 ?x182 ?x213 ?x234 ?x251 ?x288 ?x326 ?x351) 0.0)) (not (= ?x1110 0.0)))))
 (let ((?x138 (* (- 2.0) (* y b))))
 (let ((?x106 (* d a)))
 (let (($x173 (= (+ ?x106 ?x138 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let ((?x98 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x130 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x98 (* 2.0 (* y b00))) 0.0)))
 (and $x130 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0) $x173 $x1126))))))))))))))))) :qid k!33))
 ))
 (let (($x872 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x772 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x69 (+ a b)))
 (let ((?x864 (+ (* (/ 1.0 16.0) (* a00 d00 ?x69 ?x69 ?x772 d b b b)) (* (- 1.0) (* b00 y00 ?x69 d)) (* (- (/ 1.0 2.0)) (* d00 ?x69 ?x69 d)) (* b00 ?x69 ?x772 d) (* (/ 1.0 2.0) (* a00 d00 ?x69 d)) (* (- (/ 1.0 8.0)) (* b00 y00 ?x69 ?x69 ?x772 d b b b)) (* (- (/ 1.0 16.0)) (* d00 ?x69 ?x69 ?x69 ?x772 d b b b)) (* (/ 1.0 8.0) (* b00 ?x69 ?x69 ?x772 ?x772 d b b b)))))
 (let ((?x766 (+ (* (/ 1.0 16.0) (* a00 d00 y d b b b a a)) (* (- 1.0) (* b00 y00 d a)) (* (- (/ 1.0 2.0)) (* d00 d a a)) (* b00 y d a) (* (/ 1.0 2.0) (* a00 d00 d a)) (* (- (/ 1.0 8.0)) (* b00 y00 y d b b b a a)) (* (- (/ 1.0 16.0)) (* d00 y d b b b a a a)) (* (/ 1.0 8.0) (* b00 y y d b b b a a)))))
 (let ((?x138 (* (- 2.0) (* y b))))
 (let ((?x106 (* d a)))
 (let (($x997 (= (+ ?x106 ?x138 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x98 (* (- 2.0) (* b00 y00))))
 (let (($x940 (= (+ ?x98 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (and $x940 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x997 (or (not (= ?x766 0.0)) (not (= ?x864 0.0)))))))))))))) :qid k!33))
 ))
 (let ((?x155 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x351 (* (/ 1.0 8.0) (* y y d b b b a a b00))))
 (let ((?x326 (* (- (/ 1.0 16.0)) (* y d b b b a a a d00))))
 (let ((?x288 (* (- (/ 1.0 8.0)) (* y d b b b a a b00 y00))))
 (let ((?x251 (* (/ 1.0 2.0) (* d a a00 d00))))
 (let ((?x234 (* y d a b00)))
 (let ((?x213 (* (- (/ 1.0 2.0)) (* d a a d00))))
 (let ((?x182 (* (- 1.0) (* d a b00 y00))))
 (let ((?x154 (* (/ 1.0 16.0) (* y d b b b a a a00 d00))))
 (let ((?x1110 (+ ?x154 ?x182 (* (/ 1.0 16.0) (* y d b b b b b a00 d00)) (* (/ 1.0 8.0) (* y d b b b b a a00 d00)) ?x213 (* (/ 1.0 32.0) (* d d b b b b b a00 d00)) ?x234 (* (/ 1.0 16.0) (* d d b b b b a a00 d00)) ?x251 (* (/ 1.0 32.0) (* d d b b b a a a00 d00)) ?x288 ?x326 ?x351 (* (- 1.0) (* d b b00 y00)) (* (- (/ 1.0 2.0)) (* d b b d00)) (* (- 1.0) (* d b a d00)) (* y d b b00) (* (/ 1.0 2.0) (* d d b b00)) (* (/ 1.0 2.0) (* d d a b00)) (* (/ 1.0 2.0) (* d b a00 d00)) (* (- (/ 1.0 8.0)) (* y d b b b b b b00 y00)) (* (- (/ 1.0 4.0)) (* y d b b b b a b00 y00)) (* (- (/ 1.0 16.0)) (* d d b b b b b b00 y00)) (* (- (/ 1.0 8.0)) (* d d b b b b a b00 y00)) (* (- (/ 1.0 16.0)) (* d d b b b a a b00 y00)) (* (- (/ 1.0 16.0)) (* y d b b b b b b d00)) (* (- (/ 3.0 16.0)) (* y d b b b b b a d00)) (* (- (/ 3.0 16.0)) (* y d b b b b a a d00)) (* (- (/ 1.0 32.0)) (* d d b b b b b b d00)) (* (- (/ 3.0 32.0)) (* d d b b b b b a d00)) (* (- (/ 3.0 32.0)) (* d d b b b b a a d00)) (* (- (/ 1.0 32.0)) (* d d b b b a a a d00)) (* (/ 1.0 8.0) (* y y d b b b b b b00)) (* (/ 1.0 4.0) (* y y d b b b b a b00)) (* (/ 1.0 8.0) (* y d d b b b b b b00)) (* (/ 1.0 4.0) (* y d d b b b b a b00)) (* (/ 1.0 8.0) (* y d d b b b a a b00)) (* (/ 1.0 32.0) (* d d d b b b b b b00)) (* (/ 1.0 16.0) (* d d d b b b b a b00)) (* (/ 1.0 32.0) (* d d d b b b a a b00)))))
 (let (($x1126 (or (not (= (+ ?x154 ?x182 ?x213 ?x234 ?x251 ?x288 ?x326 ?x351) 0.0)) (not (= ?x1110 0.0)))))
 (let ((?x138 (* (- 2.0) (* y b))))
 (let ((?x106 (* d a)))
 (let (($x173 (= (+ ?x106 ?x138 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let ((?x98 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x130 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x98 (* 2.0 (* y b00))) 0.0)))
 (let (($x153 (and $x130 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0) $x173 $x1126)))
 (let ((?x772 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x69 (+ a b)))
 (let ((?x864 (+ (* (/ 1.0 16.0) (* a00 d00 ?x69 ?x69 ?x772 d b b b)) (* (- 1.0) (* b00 y00 ?x69 d)) (* (- (/ 1.0 2.0)) (* d00 ?x69 ?x69 d)) (* b00 ?x69 ?x772 d) (* (/ 1.0 2.0) (* a00 d00 ?x69 d)) (* (- (/ 1.0 8.0)) (* b00 y00 ?x69 ?x69 ?x772 d b b b)) (* (- (/ 1.0 16.0)) (* d00 ?x69 ?x69 ?x69 ?x772 d b b b)) (* (/ 1.0 8.0) (* b00 ?x69 ?x69 ?x772 ?x772 d b b b)))))
 (let ((?x766 (+ (* (/ 1.0 16.0) (* a00 d00 y d b b b a a)) (* (- 1.0) (* b00 y00 d a)) (* (- (/ 1.0 2.0)) (* d00 d a a)) (* b00 y d a) (* (/ 1.0 2.0) (* a00 d00 d a)) (* (- (/ 1.0 8.0)) (* b00 y00 y d b b b a a)) (* (- (/ 1.0 16.0)) (* d00 y d b b b a a a)) (* (/ 1.0 8.0) (* b00 y y d b b b a a)))))
 (let (($x997 (= (+ ?x106 ?x138 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x940 (= (+ ?x98 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x978 (and $x940 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x997 (or (not (= ?x766 0.0)) (not (= ?x864 0.0))))))
 (rewrite (= $x978 $x153)))))))))))))))))))))))))))
 ))
 (let (($x89 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x52 (/ d 2.0)))
 (let ((?x70 (+ y ?x52)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x69 (+ a b)))
 (let ((?x74 (- (* ?x69 ?x69 a00 ?x51 ?x51 ?x51 ?x52 d00 ?x70) (* 2.0 ?x69 b00 ?x52 y00))))
 (let ((?x78 (+ (- ?x74 (* ?x69 ?x69 ?x52 d00)) (* 2.0 ?x69 b00 ?x52 ?x70) (* ?x69 a00 ?x52 d00))))
 (let ((?x82 (- (- ?x78 (* 2.0 ?x69 ?x69 ?x51 ?x51 ?x51 b00 ?x52 ?x70 y00)) (* ?x69 ?x69 ?x69 ?x51 ?x51 ?x51 ?x52 d00 ?x70))))
 (let (($x85 (= (+ ?x82 (* 2.0 ?x69 ?x69 ?x51 ?x51 ?x51 b00 ?x52 ?x70 ?x70)) 0.0)))
 (let ((?x56 (- (* a a a00 ?x51 ?x51 ?x51 ?x52 d00 y) (* 2.0 a b00 ?x52 y00))))
 (let ((?x60 (+ (- ?x56 (* a a ?x52 d00)) (* 2.0 a b00 ?x52 y) (* a a00 ?x52 d00))))
 (let ((?x64 (- (- ?x60 (* 2.0 a a ?x51 ?x51 ?x51 b00 ?x52 y y00)) (* a a a ?x51 ?x51 ?x51 ?x52 d00 y))))
 (let (($x67 (= (+ ?x64 (* 2.0 a a ?x51 ?x51 ?x51 b00 ?x52 y y)) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let ((?x30 (* a00 d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not $x67) (not $x85)))))))))))))))))))) :qid k!33))
 ))
 (let ((?x988 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x772 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x69 (+ a b)))
 (let ((?x864 (+ (* (/ 1.0 16.0) (* a00 d00 ?x69 ?x69 ?x772 d b b b)) (* (- 1.0) (* b00 y00 ?x69 d)) (* (- (/ 1.0 2.0)) (* d00 ?x69 ?x69 d)) (* b00 ?x69 ?x772 d) (* (/ 1.0 2.0) (* a00 d00 ?x69 d)) (* (- (/ 1.0 8.0)) (* b00 y00 ?x69 ?x69 ?x772 d b b b)) (* (- (/ 1.0 16.0)) (* d00 ?x69 ?x69 ?x69 ?x772 d b b b)) (* (/ 1.0 8.0) (* b00 ?x69 ?x69 ?x772 ?x772 d b b b)))))
 (let ((?x766 (+ (* (/ 1.0 16.0) (* a00 d00 y d b b b a a)) (* (- 1.0) (* b00 y00 d a)) (* (- (/ 1.0 2.0)) (* d00 d a a)) (* b00 y d a) (* (/ 1.0 2.0) (* a00 d00 d a)) (* (- (/ 1.0 8.0)) (* b00 y00 y d b b b a a)) (* (- (/ 1.0 16.0)) (* d00 y d b b b a a a)) (* (/ 1.0 8.0) (* b00 y y d b b b a a)))))
 (let ((?x138 (* (- 2.0) (* y b))))
 (let ((?x106 (* d a)))
 (let (($x997 (= (+ ?x106 ?x138 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x98 (* (- 2.0) (* b00 y00))))
 (let (($x940 (= (+ ?x98 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x978 (and $x940 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x997 (or (not (= ?x766 0.0)) (not (= ?x864 0.0))))))
 (let ((?x52 (/ d 2.0)))
 (let ((?x70 (+ y ?x52)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x74 (- (* ?x69 ?x69 a00 ?x51 ?x51 ?x51 ?x52 d00 ?x70) (* 2.0 ?x69 b00 ?x52 y00))))
 (let ((?x78 (+ (- ?x74 (* ?x69 ?x69 ?x52 d00)) (* 2.0 ?x69 b00 ?x52 ?x70) (* ?x69 a00 ?x52 d00))))
 (let ((?x82 (- (- ?x78 (* 2.0 ?x69 ?x69 ?x51 ?x51 ?x51 b00 ?x52 ?x70 y00)) (* ?x69 ?x69 ?x69 ?x51 ?x51 ?x51 ?x52 d00 ?x70))))
 (let (($x85 (= (+ ?x82 (* 2.0 ?x69 ?x69 ?x51 ?x51 ?x51 b00 ?x52 ?x70 ?x70)) 0.0)))
 (let ((?x56 (- (* a a a00 ?x51 ?x51 ?x51 ?x52 d00 y) (* 2.0 a b00 ?x52 y00))))
 (let ((?x60 (+ (- ?x56 (* a a ?x52 d00)) (* 2.0 a b00 ?x52 y) (* a a00 ?x52 d00))))
 (let ((?x64 (- (- ?x60 (* 2.0 a a ?x51 ?x51 ?x51 b00 ?x52 y y00)) (* a a a ?x51 ?x51 ?x51 ?x52 d00 y))))
 (let (($x67 (= (+ ?x64 (* 2.0 a a ?x51 ?x51 ?x51 b00 ?x52 y y)) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (let (($x88 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not $x67) (not $x85)))))
 (rewrite (= $x88 $x978))))))))))))))))))))))))))))))
 ))
 (let ((@x90 (asserted $x89)))
 (let ((@x393 (mp (mp @x90 (quant-intro (proof-bind ?x988) (= $x89 $x872)) $x872) (quant-intro (proof-bind ?x155) (= $x872 $x1128)) $x1128)))
 (let ((@x892 (mp (mp~ @x393 (sk (~ $x1128 $x791)) $x791) (rewrite (= $x791 $x468)) $x468)))
 (let ((@x247 (mp (and-elim @x892 $x838) @x244 $x739)))
 (let ((@x218 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x739) $x794)) @x247 $x794)))
 (let (($x793 (<= ?x833 0.0)))
 (let ((@x258 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x739) $x793)) @x247 $x793)))
 (let (($x1029 (>= ?x608 0.0)))
 (let (($x987 (= 0.0 ?x608)))
 (let ((@x183 (mp (and-elim @x892 $x613) (symm (commutativity (= $x987 $x613)) (= $x613 $x987)) $x987)))
 (let ((@x181 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x987) $x1029)) @x183 $x1029)))
 (let (($x967 (<= ?x608 0.0)))
 (let ((@x198 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x987) $x967)) @x183 $x967)))
 (let ((@x460 (unit-resolution ((_ th-lemma arith) (or (not $x967) (not $x793) (not $x794) (not $x1029) $x840)) @x198 @x181 @x258 @x218 (hypothesis (not $x840)) false)))
 (let ((@x470 (lemma @x460 $x840)))
 (let (($x539 (<= ?x871 0.0)))
 (let ((@x407 (unit-resolution ((_ th-lemma arith) (or (not $x1029) (not $x793) (not $x794) (not $x967) $x539)) @x198 @x181 @x258 @x218 (hypothesis (not $x539)) false)))
 (let ((@x855 (lemma @x407 $x539)))
 (let (($x283 (<= ?x813 0.0)))
 (let (($x857 (not $x283)))
 (let (($x552 (>= ?x813 0.0)))
 (let ((@x684 (unit-resolution ((_ th-lemma arith) (or (not $x793) (not $x794) (not $x967) (not $x1029) $x552)) @x198 @x181 @x258 @x218 (hypothesis (not $x552)) false)))
 (let (($x1026 (= 0.0 ?x813)))
 (let (($x1005 (not $x1026)))
 (let ((@x531 (monotonicity (symm (commutativity (= $x1026 $x819)) (= $x819 $x1026)) (= $x804 $x1005))))
 (let (($x879 (= ?x871 0.0)))
 (let (($x834 (= 0.0 ?x871)))
 (let ((@x440 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x834 (not $x539) (not $x840))) @x470 (or $x834 (not $x539)))))
 (let ((@x777 (mp (unit-resolution @x440 @x855 $x834) (commutativity (= $x834 $x879)) $x879)))
 (let ((@x592 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1026 $x857 (not $x552))) (mp (unit-resolution (and-elim @x892 $x882) @x777 $x804) @x531 $x1005) (or $x857 (not $x552)))))
 (let (($x151 (not $x794)))
 (let (($x933 (not $x793)))
 (let (($x273 (not $x840)))
 (let (($x202 (not $x539)))
 (let (($x172 (not $x1029)))
 (let (($x141 (not $x967)))
 (unit-resolution ((_ th-lemma arith) (or $x141 $x172 $x202 $x273 $x933 $x151 $x283)) @x198 @x181 @x258 @x218 (unit-resolution @x592 (lemma @x684 $x552) $x857) @x855 @x470 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       29
 :arith-eq-adapter                28
 :arith-bound-propagations-cheap  52
 :arith-bound-propagations-lp     2
 :arith-conflicts                 99
 :arith-diseq                     41
 :arith-grobner-calls             4
 :arith-grobner-conflicts         4
 :arith-horner-calls              4
 :arith-horner-cross-nested-forms 16
 :arith-lower                     61
 :arith-make-feasible             52
 :arith-max-columns               67
 :arith-max-rows                  5
 :arith-nla-explanations          52
 :arith-nla-lemmas                99
 :arith-propagations              52
 :arith-upper                     65
 :conflicts                       9
 :decisions                       126
 :del-clause                      116
 :final-checks                    28
 :max-memory                      2.17
 :memory                          1.20
 :mk-bool-var                     195
 :mk-clause                       189
 :num-allocs                      3137178
 :num-checks                      1
 :propagations                    107
 :rlimit-count                    7636
 :time                            0.03
 :total-time                      0.03)
