unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x898 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 1) (* q!3 d!1 d!1)) (* (- 4) (* x!0 d!1)) (* (- 8) r!2) (* 4 (* r!2 d!1)) (* 2 (* q!3 d!1)))))
 (let (($x3144 (>= ?x898 0)))
 (let (($x2035 (= ?x898 0)))
 (let ((?x3615 (* q!3 d!1)))
 (let ((?x1146 (* (- 2) ?x3615)))
 (let ((?x3540 (* r!2 d!1)))
 (let ((?x1379 (* (- 4) ?x3540)))
 (let ((?x1517 (* 8 r!2)))
 (let ((?x2505 (* x!0 d!1)))
 (let ((?x2159 (* 4 ?x2505)))
 (let ((?x1375 (* q!3 d!1 d!1)))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x327 (+ ?x182 ?x230 ?x214 ?x280 ?x318 ?x1375 ?x2159 ?x1517 ?x1379 ?x1146)))
 (let ((?x1080 (* (- 2) d!1)))
 (let ((?x1082 (* 2 r!2)))
 (let ((?x1157 (* (- 1) x!0)))
 (let ((?x961 (+ (- 4) q!3 ?x1157 ?x1082 ?x1080)))
 (let ((?x1158 (+ 2 d!1)))
 (let ((?x1081 (+ (- 8) q!3)))
 (let ((?x1283 (+ (* (- 1) (* ?x961 ?x961 ?x961 r!2)) (* (- 1) (* ?x1081 ?x1081 ?x1081 ?x1158 ?x1158 ?x961 ?x961 r!2 r!2 r!2)) (* ?x1081 ?x1081 ?x1158 ?x1158 ?x1158 ?x961 r!2))))
 (let ((?x4089 (* q!3 q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x398 (* (- 26) ?x4089)))
 (let ((?x2170 (* 5 (* q!3 q!3 q!3 r!2 r!2 r!2 d!1))))
 (let ((?x4260 (* (- 2) (* q!3 q!3 x!0 r!2 r!2 r!2))))
 (let ((?x510 (* 2 (* r!2 r!2 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x1519 (* 6 (* q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1344 (* 12 (* r!2 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x3108 (* 2 (* q!3 q!3 r!2 r!2 r!2 r!2 d!1))))
 (let ((?x2511 (* q!3 r!2 r!2 r!2 d!1)))
 (let ((?x505 (* 972 ?x2511)))
 (let ((?x2502 (* q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x1155 (* 230 ?x2502)))
 (let ((?x2493 (* q!3 r!2 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x1925 (* q!3 r!2 r!2 r!2 r!2 d!1)))
 (let ((?x1156 (* (- 32) ?x1925)))
 (let ((?x1841 (* q!3 r!2 r!2 r!2)))
 (let ((?x904 (* 1032 ?x1841)))
 (let ((?x1696 (* q!3 q!3 r!2 r!2 r!2 d!1)))
 (let ((?x1569 (* (- 120) ?x1696)))
 (let ((?x1470 (* r!2 r!2 r!2 d!1)))
 (let ((?x502 (* (- 2624) ?x1470)))
 (let ((?x1392 (* q!3 q!3 r!2 r!2 r!2)))
 (let ((?x1216 (* (- 136) ?x1392)))
 (let ((?x2941 (* 4 (* q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x1162 (* r!2 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x1863 (* (- 16) ?x1162)))
 (let ((?x3207 (* (- 6) (* x!0 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x1087 (* r!2 r!2 r!2 d!1 d!1 d!1 d!1)))
 (let ((?x1872 (* (- 2) ?x1087)))
 (let ((?x773 (* (- 1) (* q!3 q!3 x!0 r!2 r!2 r!2 d!1))))
 (let ((?x988 (* r!2 r!2 r!2 d!1 d!1)))
 (let ((?x920 (* (- 688) ?x988)))
 (let ((?x949 (* r!2 r!2 r!2)))
 (let ((?x391 (* (- 2592) ?x949)))
 (let ((?x945 (* r!2 r!2 r!2 r!2 d!1)))
 (let ((?x2093 (* 152 ?x945)))
 (let ((?x860 (* q!3 r!2 r!2 r!2 r!2)))
 (let ((?x1920 (* (- 64) ?x860)))
 (let ((?x3209 (* (- 1) (* x!0 r!2 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x592 (* r!2 r!2 r!2 r!2)))
 (let ((?x2566 (* 272 ?x592)))
 (let ((?x585 (* q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x1309 (+ ?x585 ?x2566 ?x3209 ?x1920 ?x2093 ?x391 ?x920 ?x773 ?x1872 ?x3207 ?x1863 (* 32 (* q!3 x!0 r!2 r!2 r!2)) ?x2941 ?x1216 ?x502 ?x1569 ?x904 ?x1156 ?x2493 ?x1155 ?x505 ?x3108 ?x1344 ?x1519 ?x510 ?x4260 (* (- 136) (* x!0 r!2 r!2 r!2)) ?x2170 (* (- 76) (* x!0 r!2 r!2 r!2 d!1)) ?x398 (* 16 (* q!3 x!0 r!2 r!2 r!2 d!1)))))
 (let ((?x1323 (* ?x1309 ?x1283 ?x327)))
 (let (($x4245 (= ?x1323 0)))
 (let (($x4247 (not $x4245)))
 (let ((?x951 (* (- 1) d!1)))
 (let ((?x925 (+ (- 2) q!3 ?x1157 ?x1082 ?x951)))
 (let ((?x1159 (+ (- 4) q!3)))
 (let ((?x2711 (+ (* (- 1) (* ?x925 ?x925 ?x925 r!2)) (* (- 1) (* ?x1159 ?x1159 ?x1159 ?x1158 ?x1158 ?x925 ?x925 r!2 r!2 r!2)) (* ?x1159 ?x1159 ?x1158 ?x1158 ?x1158 ?x925 r!2))))
 (let ((?x2016 (* (- 13) ?x4089)))
 (let ((?x3599 (* x!0 r!2 r!2 r!2 d!1)))
 (let ((?x1483 (* (- 28) ?x3599)))
 (let ((?x3189 (* x!0 r!2 r!2 r!2)))
 (let ((?x574 (* (- 40) ?x3189)))
 (let ((?x2461 (* 252 ?x2511)))
 (let ((?x1858 (* 62 ?x2502)))
 (let ((?x1859 (* (- 16) ?x1925)))
 (let ((?x3538 (* 264 ?x1841)))
 (let ((?x1113 (* (- 60) ?x1696)))
 (let ((?x3480 (* (- 352) ?x1470)))
 (let ((?x2220 (* (- 68) ?x1392)))
 (let ((?x2467 (* (- 8) ?x1162)))
 (let ((?x1343 (* (- 1) ?x1087)))
 (let ((?x2656 (* (- 104) ?x988)))
 (let ((?x1862 (* (- 336) ?x949)))
 (let ((?x3537 (* 56 ?x945)))
 (let ((?x2459 (* (- 32) ?x860)))
 (let ((?x1372 (* 80 ?x592)))
 (let ((?x1337 (+ ?x585 ?x1372 ?x3209 ?x2459 ?x3537 ?x1862 ?x2656 ?x773 ?x1343 ?x3207 ?x2467 (* 16 (* q!3 x!0 r!2 r!2 r!2)) ?x2941 ?x2220 ?x3480 ?x1113 ?x3538 ?x1859 ?x2493 ?x1858 ?x2461 ?x3108 ?x1344 ?x1519 ?x510 ?x4260 ?x574 ?x2170 ?x1483 ?x2016 (* 8 (* q!3 x!0 r!2 r!2 r!2 d!1)))))
 (let ((?x2658 (* ?x1337 ?x2711 ?x327)))
 (let (($x2936 (= ?x2658 0)))
 (let ((?x1308 (* 2 (* q!3 q!3 q!3 q!3 x!0 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x3543 (* q!3 q!3 q!3 r!2 d!1 d!1 d!1)))
 (let ((?x4046 (* (- 4) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x2105 (* (- 16) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1))))
 (let ((?x2184 (* (- 16) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x1391 (* (- 4) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1))))
 (let ((?x375 (* (- 4) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x2712 (* (- 16) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x4021 (* (- 12) ?x1841)))
 (let ((?x2109 (* 10 (* q!3 q!3 r!2 r!2))))
 (let ((?x1132 (* 12 (* q!3 q!3 r!2 r!2 d!1 d!1))))
 (let ((?x2567 (* 2 (* q!3 q!3 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x1371 (* 4 (* q!3 q!3 q!3 x!0 r!2 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x1314 (* (- 16) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1))))
 (let ((?x1964 (* (- 1) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x2279 (* 24 (* q!3 q!3 r!2 r!2 d!1))))
 (let ((?x1885 (* (- 1) (* q!3 q!3 q!3 x!0 x!0 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x3031 (* 7 (* q!3 q!3 q!3 r!2))))
 (let ((?x1128 (* (- 8) ?x592)))
 (let ((?x2724 (* (- 4) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1255 (* 6 (* q!3 q!3 q!3 r!2 d!1 d!1))))
 (let ((?x1133 (* 12 (* q!3 q!3 q!3 r!2 d!1))))
 (let ((?x1090 (+ ?x1133 (* (- 3) (* q!3 x!0 x!0 r!2)) ?x1255 ?x2724 ?x1128 ?x3031 ?x1885 (* (- 12) (* q!3 q!3 x!0 r!2 d!1)) ?x2279 ?x1964 (* (- 5) (* q!3 q!3 x!0 r!2)) ?x1314 (* (- 4) (* q!3 q!3 q!3 x!0 x!0 r!2 r!2 r!2 d!1)) ?x1371 ?x2567 (* 12 (* q!3 x!0 r!2 r!2)) (* (- 6) (* x!0 x!0 r!2 r!2)) ?x1132 ?x2109 ?x4021 (* 16 (* q!3 q!3 q!3 x!0 r!2 r!2 r!2 r!2)) (* (- 4) (* q!3 q!3 q!3 x!0 x!0 r!2 r!2 r!2)) ?x2712 ?x375 ?x1391 (* 8 (* q!3 q!3 q!3 q!3 x!0 r!2 r!2 r!2)) ?x2184 (* x!0 x!0 x!0 r!2) (* (- 1) (* q!3 q!3 x!0 r!2 d!1 d!1 d!1)) (* 8 (* q!3 q!3 q!3 q!3 x!0 r!2 r!2 r!2 d!1)) (* (- 6) (* q!3 q!3 x!0 r!2 d!1 d!1)) ?x2105 (* 16 (* q!3 q!3 q!3 x!0 r!2 r!2 r!2 r!2 d!1)) (* 12 ?x3189) ?x4046 ?x3543 ?x1308)))
 (let ((?x3097 (* 12 ?x2511)))
 (let ((?x984 (* 6 ?x2502)))
 (let ((?x2977 (* 8 ?x1841)))
 (let ((?x713 (* 24 ?x945)))
 (let ((?x2582 (* 16 ?x592)))
 (let ((?x2931 (+ ?x585 ?x2582 ?x3209 ?x713 ?x773 ?x3207 ?x2941 ?x2977 ?x2493 ?x984 ?x3097 ?x3108 ?x1344 ?x1519 ?x510 ?x4260 (* (- 8) ?x3189) ?x2170 (* (- 12) ?x3599))))
 (let ((?x681 (* ?x2931 ?x1090 ?x327)))
 (let (($x2932 (= ?x681 0)))
 (let ((?x2435 (+ 2 q!3 ?x1157 ?x1082 d!1)))
 (let ((?x402 (+ 4 q!3)))
 (let ((?x3375 (+ (* (- 1) (* ?x1158 ?x1158 ?x402 ?x402 ?x402 ?x2435 ?x2435 r!2 r!2 r!2)) (* (- 1) (* ?x2435 ?x2435 ?x2435 r!2)) (* ?x1158 ?x1158 ?x1158 ?x402 ?x402 ?x2435 r!2))))
 (let ((?x1356 (* 13 ?x4089)))
 (let ((?x1201 (* 16 ?x1925)))
 (let ((?x1213 (* 60 ?x1696)))
 (let ((?x1382 (* 352 ?x1470)))
 (let ((?x1349 (* 68 ?x1392)))
 (let ((?x1395 (* 8 ?x1162)))
 (let ((?x1357 (* 104 ?x988)))
 (let ((?x1524 (* 336 ?x949)))
 (let ((?x1103 (* 32 ?x860)))
 (let ((?x786 (+ ?x585 ?x1372 ?x3209 ?x1103 ?x3537 ?x1524 ?x1357 ?x773 ?x1087 ?x3207 ?x1395 (* (- 16) (* q!3 x!0 r!2 r!2 r!2)) ?x2941 ?x1349 ?x1382 ?x1213 ?x3538 ?x1201 ?x2493 ?x1858 ?x2461 ?x3108 ?x1344 ?x1519 ?x510 ?x4260 ?x574 ?x2170 ?x1483 ?x1356 (* (- 8) (* q!3 x!0 r!2 r!2 r!2 d!1)))))
 (let ((?x1821 (* ?x786 ?x3375 ?x327)))
 (let (($x1511 (= ?x1821 0)))
 (let (($x376 (not $x1511)))
 (let (($x1318 (or $x376 (not $x2932) (not $x2936) $x4247)))
 (let (($x2703 (and $x2035 $x1318)))
 (let ((?x4131 (+ ?x1517 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2159 ?x1379 ?x1375 ?x1146)))
 (let ((?x2014 (+ 2 q!3 ?x1082 ?x1157 d!1)))
 (let ((?x392 (+ (* (- 1) (* ?x1158 ?x1158 ?x402 ?x402 ?x402 ?x2014 ?x2014 r!2 r!2 r!2)) (* (- 1) (* ?x2014 ?x2014 ?x2014 r!2)) (* ?x1158 ?x1158 ?x1158 ?x402 ?x402 ?x2014 r!2))))
 (let ((?x2158 (* r!2 r!2 r!2 x!0 d!1)))
 (let ((?x3539 (* (- 28) ?x2158)))
 (let ((?x948 (* (- 2) (* q!3 q!3 r!2 r!2 r!2 x!0))))
 (let ((?x458 (* (- 6) (* r!2 r!2 r!2 x!0 d!1 d!1))))
 (let ((?x1919 (* (- 1) (* r!2 r!2 r!2 x!0 d!1 d!1 d!1))))
 (let ((?x3593 (* (- 1) (* q!3 q!3 r!2 r!2 r!2 x!0 d!1))))
 (let ((?x2663 (* r!2 r!2 r!2 x!0)))
 (let ((?x3584 (* (- 40) ?x2663)))
 (let ((?x1302 (+ ?x1344 ?x510 ?x1087 ?x3584 ?x3537 ?x1372 ?x3593 ?x2493 ?x1519 ?x1395 ?x1919 ?x458 ?x2170 ?x2941 ?x948 (* (- 8) (* q!3 r!2 r!2 r!2 x!0 d!1)) ?x1356 ?x585 ?x1213 ?x3539 ?x1524 (* (- 16) (* q!3 r!2 r!2 r!2 x!0)) ?x3108 ?x1103 ?x1201 ?x1349 ?x3538 ?x1858 ?x2461 ?x1357 ?x1382)))
 (let ((?x841 (+ (- 2) q!3 ?x1082 ?x1157 ?x951)))
 (let ((?x2701 (+ (* (- 1) (* ?x841 ?x841 ?x841 r!2)) (* (- 1) (* ?x1159 ?x1159 ?x1159 ?x1158 ?x1158 ?x841 ?x841 r!2 r!2 r!2)) (* ?x1159 ?x1159 ?x1158 ?x1158 ?x1158 ?x841 r!2))))
 (let ((?x1210 (+ ?x1344 ?x510 ?x1343 ?x3584 ?x3537 ?x1372 ?x3593 ?x2493 ?x1519 ?x2467 ?x1919 ?x458 ?x2170 ?x2941 ?x948 (* 8 (* q!3 r!2 r!2 r!2 x!0 d!1)) ?x2016 ?x585 ?x1113 ?x3539 ?x1862 (* 16 (* q!3 r!2 r!2 r!2 x!0)) ?x3108 ?x2459 ?x1859 ?x2220 ?x3538 ?x1858 ?x2461 ?x2656 ?x3480)))
 (let ((?x3591 (+ (- 4) q!3 ?x1082 ?x1157 ?x1080)))
 (let ((?x382 (+ (* ?x1081 ?x1081 ?x1158 ?x1158 ?x1158 ?x3591 r!2) (* (- 1) (* ?x1081 ?x1081 ?x1081 ?x1158 ?x1158 ?x3591 ?x3591 r!2 r!2 r!2)) (* (- 1) (* ?x3591 ?x3591 ?x3591 r!2)))))
 (let ((?x2341 (+ ?x1344 ?x510 ?x1872 (* (- 136) ?x2663) ?x2093 ?x2566 ?x3593 ?x2493 ?x1519 ?x1863 ?x1919 ?x458 ?x2170 ?x2941 ?x948 (* 16 (* q!3 r!2 r!2 r!2 x!0 d!1)) ?x398 ?x585 ?x1569 (* (- 76) ?x2158) ?x391 (* 32 (* q!3 r!2 r!2 r!2 x!0)) ?x3108 ?x1920 ?x1156 ?x1216 ?x904 ?x1155 ?x505 ?x920 ?x502)))
 (let ((?x1361 (* (- 1) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1 d!1))))
 (let ((?x879 (* 4 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1 d!1))))
 (let ((?x2500 (* 2 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1 d!1))))
 (let ((?x2399 (+ ?x375 (* 12 ?x2663) (* 16 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1)) ?x3031 ?x1128 (* 8 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1)) ?x1964 ?x2500 (* (- 12) (* q!3 q!3 r!2 x!0 d!1)) (* (- 6) (* q!3 q!3 r!2 x!0 d!1 d!1)) (* (- 1) (* q!3 q!3 r!2 x!0 d!1 d!1 d!1)) ?x2724 ?x4046 ?x879 (* (- 4) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1)) ?x1361 ?x4021 (* (- 4) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0)) (* 16 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0)) ?x1314 ?x2712 (* 8 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0)) ?x2105 ?x2184 ?x1391 ?x2109 (* (- 5) (* q!3 q!3 r!2 x!0)) (* 12 (* q!3 r!2 r!2 x!0)) (* (- 3) (* q!3 r!2 x!0 x!0)) (* (- 6) (* r!2 r!2 x!0 x!0)) (* r!2 x!0 x!0 x!0) ?x1133 ?x1255 ?x3543 ?x2279 ?x1132 ?x2567)))
 (let ((?x2979 (+ ?x1344 ?x510 (* (- 8) ?x2663) ?x713 ?x2582 ?x3593 ?x2493 ?x1519 ?x1919 ?x458 ?x2170 ?x2941 ?x948 ?x585 (* (- 12) ?x2158) ?x3108 ?x2977 ?x984 ?x3097)))
 (let (($x328 (or (not (= (* ?x2979 ?x2399 ?x4131) 0)) (not (= (* ?x2341 ?x382 ?x4131) 0)) (not (= (* ?x1210 ?x2701 ?x4131) 0)) (not (= (* ?x1302 ?x392 ?x4131) 0)))))
 (let (($x1007 (and (= ?x4131 0) $x328)))
 (let (($x308 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x3224 (* (- 2) (* q d))))
 (let ((?x3225 (* q d d)))
 (let ((?x3217 (* r d)))
 (let ((?x3347 (* (- 4) ?x3217)))
 (let ((?x2534 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x2646 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3347 ?x3225 ?x3224)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x3629 (+ 2 q ?x144 ?x179 d)))
 (let ((?x3476 (+ 4 q)))
 (let ((?x3487 (+ 2 d)))
 (let ((?x4333 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x3629 ?x3629 r r r)) (* (- 1) (* ?x3629 ?x3629 ?x3629 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x3629 r))))
 (let ((?x3701 (* q r r r d)))
 (let ((?x4243 (* 252 ?x3701)))
 (let ((?x3699 (* q r r r d d)))
 (let ((?x3700 (* 62 ?x3699)))
 (let ((?x3454 (* q r r r)))
 (let ((?x1394 (* 264 ?x3454)))
 (let ((?x3036 (* q r r r r d)))
 (let ((?x3035 (* 16 ?x3036)))
 (let ((?x3023 (* 2 (* q q r r r r d))))
 (let ((?x2769 (* r r r)))
 (let ((?x2767 (* 336 ?x2769)))
 (let ((?x2722 (* r r r x d)))
 (let ((?x3504 (* (- 28) ?x2722)))
 (let ((?x2595 (* q q q r r r d d)))
 (let ((?x2591 (* q q r r r d d)))
 (let ((?x2592 (* 13 ?x2591)))
 (let ((?x1981 (* q r r r x d)))
 (let ((?x4163 (* (- 8) ?x1981)))
 (let ((?x1960 (* (- 2) (* q q r r r x))))
 (let ((?x1896 (* 4 (* q q r r r r))))
 (let ((?x1634 (* 5 (* q q q r r r d))))
 (let ((?x1386 (* r r r x d d)))
 (let ((?x2433 (* (- 6) ?x1386)))
 (let ((?x1384 (* (- 1) (* r r r x d d d))))
 (let ((?x1225 (* r r r d d d)))
 (let ((?x1438 (* 8 ?x1225)))
 (let ((?x990 (* q q q r r r)))
 (let ((?x3168 (* 6 ?x990)))
 (let ((?x982 (* q r r r d d d)))
 (let ((?x1412 (* (- 1) (* q q r r r x d))))
 (let ((?x769 (* r r r r)))
 (let ((?x983 (* 80 ?x769)))
 (let ((?x765 (* r r r r d)))
 (let ((?x4060 (* 56 ?x765)))
 (let ((?x552 (* r r r x)))
 (let ((?x553 (* (- 40) ?x552)))
 (let ((?x551 (* r r r d d d d)))
 (let ((?x432 (* 2 (* r r r r d d d))))
 (let ((?x429 (* r r r r d d)))
 (let ((?x4134 (* 12 ?x429)))
 (let ((?x2723 (+ ?x4134 ?x432 ?x551 ?x553 ?x4060 ?x983 ?x1412 ?x982 ?x3168 ?x1438 ?x1384 ?x2433 ?x1634 ?x1896 ?x1960 ?x4163 ?x2592 ?x2595 (* 60 (* q q r r r d)) ?x3504 ?x2767 (* (- 16) (* q r r r x)) ?x3023 (* 32 (* q r r r r)) ?x3035 (* 68 (* q q r r r)) ?x1394 ?x3700 ?x4243 (* 104 (* r r r d d)) (* 352 (* r r r d)))))
 (let ((?x3825 (* (- 1) d)))
 (let ((?x2633 (+ (- 2) q ?x144 ?x179 ?x3825)))
 (let ((?x3824 (+ (- 4) q)))
 (let ((?x186 (+ (* (- 1) (* ?x2633 ?x2633 ?x2633 r)) (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x2633 ?x2633 r r r)) (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x2633 r))))
 (let ((?x3840 (* (- 16) ?x3036)))
 (let ((?x3034 (* q r r r r)))
 (let ((?x3912 (* (- 32) ?x3034)))
 (let ((?x3020 (* q r r r x)))
 (let ((?x3914 (* 16 ?x3020)))
 (let ((?x3835 (* (- 336) ?x2769)))
 (let ((?x3837 (* (- 13) ?x2591)))
 (let ((?x1987 (* 8 ?x1981)))
 (let ((?x3839 (* (- 1) ?x551)))
 (let ((?x1530 (+ ?x4134 ?x432 ?x3839 ?x553 ?x4060 ?x983 ?x1412 ?x982 ?x3168 (* (- 8) ?x1225) ?x1384 ?x2433 ?x1634 ?x1896 ?x1960 ?x1987 ?x3837 ?x2595 (* (- 60) (* q q r r r d)) ?x3504 ?x3835 ?x3914 ?x3023 ?x3912 ?x3840 (* (- 68) (* q q r r r)) ?x1394 ?x3700 ?x4243 (* (- 104) (* r r r d d)) (* (- 352) (* r r r d)))))
 (let ((?x3889 (* (- 2) d)))
 (let ((?x2208 (+ (- 4) q ?x144 ?x179 ?x3889)))
 (let ((?x3888 (+ (- 8) q)))
 (let ((?x3426 (+ (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x2208 r) (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x2208 ?x2208 r r r)) (* (- 1) (* ?x2208 ?x2208 ?x2208 r)))))
 (let ((?x3896 (* 230 ?x3699)))
 (let ((?x3911 (* (- 32) ?x3036)))
 (let ((?x3902 (* (- 2592) ?x2769)))
 (let ((?x3904 (* (- 26) ?x2591)))
 (let ((?x3906 (* 272 ?x769)))
 (let ((?x3909 (* (- 136) ?x552)))
 (let ((?x3908 (* (- 2) ?x551)))
 (let ((?x4236 (+ ?x4134 ?x432 ?x3908 ?x3909 (* 152 ?x765) ?x3906 ?x1412 ?x982 ?x3168 (* (- 16) ?x1225) ?x1384 ?x2433 ?x1634 ?x1896 ?x1960 (* 16 ?x1981) ?x3904 ?x2595 (* (- 120) (* q q r r r d)) (* (- 76) ?x2722) ?x3902 (* 32 ?x3020) ?x3023 (* (- 64) ?x3034) ?x3911 (* (- 136) (* q q r r r)) (* 1032 ?x3454) ?x3896 (* 972 ?x3701) (* (- 688) (* r r r d d)) (* (- 2624) (* r r r d)))))
 (let ((?x3801 (* 2 (* q q r r d d d))))
 (let ((?x3795 (* q q q r d d d)))
 (let ((?x3794 (* 6 (* q q q r d d))))
 (let ((?x3780 (* r x x x)))
 (let ((?x3779 (* (- 6) (* r r x x))))
 (let ((?x3777 (* (- 3) (* q r x x))))
 (let ((?x3775 (* 12 (* q r r x))))
 (let ((?x3773 (* (- 5) (* q q r x))))
 (let ((?x3771 (* 10 (* q q r r))))
 (let ((?x3755 (* q q q q q r r r d)))
 (let ((?x3131 (* (- 4) ?x3755)))
 (let ((?x3752 (* (- 16) (* q q q q r r r r))))
 (let ((?x3751 (* q q q q r r r r d)))
 (let ((?x3095 (* (- 16) ?x3751)))
 (let ((?x3748 (* 8 (* q q q q r r r x))))
 (let ((?x3744 (* (- 16) (* q q q r r r r r))))
 (let ((?x3743 (* q q q r r r r r d)))
 (let ((?x3136 (* (- 16) ?x3743)))
 (let ((?x3740 (* 16 (* q q q r r r r x))))
 (let ((?x3736 (* (- 4) (* q q q r r r x x))))
 (let ((?x3082 (* (- 12) ?x3454)))
 (let ((?x673 (* (- 1) (* q q q r r r x x d d))))
 (let ((?x3135 (* (- 4) (* q q q r r r x x d))))
 (let ((?x1127 (* 4 (* q q q r r r r x d d))))
 (let ((?x1112 (* (- 4) (* q q q r r r r r d d))))
 (let ((?x3087 (* (- 4) (* q q q q q r r r))))
 (let ((?x2895 (* (- 1) (* q q r x d d d))))
 (let ((?x2077 (* 2 (* q q q q r r r x d d))))
 (let ((?x2632 (* (- 1) (* q q q q q r r r d d))))
 (let ((?x3127 (* 8 (* q q q q r r r x d))))
 (let ((?x3084 (* (- 8) ?x769)))
 (let ((?x678 (* q q q r)))
 (let ((?x3769 (* 7 ?x678)))
 (let ((?x3096 (* 16 (* q q q r r r r x d))))
 (let ((?x3085 (* 12 ?x552)))
 (let ((?x473 (* (- 4) (* q q q q r r r r d d))))
 (let ((?x566 (+ ?x473 ?x3085 ?x3096 ?x3769 ?x3084 ?x3127 ?x2632 ?x2077 (* (- 12) (* q q r x d)) (* (- 6) (* q q r x d d)) ?x2895 ?x3087 ?x1112 ?x1127 ?x3135 ?x673 ?x3082 ?x3736 ?x3740 ?x3136 ?x3744 ?x3748 ?x3095 ?x3752 ?x3131 ?x3771 ?x3773 ?x3775 ?x3777 ?x3779 ?x3780 (* 12 (* q q q r d)) ?x3794 ?x3795 (* 24 (* q q r r d)) (* 12 (* q q r r d d)) ?x3801)))
 (let ((?x3809 (* 6 ?x3699)))
 (let ((?x3811 (* 8 ?x3454)))
 (let ((?x3812 (* 16 ?x769)))
 (let ((?x3814 (* (- 8) ?x552)))
 (let ((?x400 (+ ?x4134 ?x432 ?x3814 (* 24 ?x765) ?x3812 ?x1412 ?x982 ?x3168 ?x1384 ?x2433 ?x1634 ?x1896 ?x1960 ?x2595 (* (- 12) ?x2722) ?x3023 ?x3811 ?x3809 (* 12 ?x3701))))
 (let (($x1116 (or (not (= (* ?x400 ?x566 ?x2646) 0)) (not (= (* ?x4236 ?x3426 ?x2646) 0)) (not (= (* ?x1530 ?x186 ?x2646) 0)) (not (= (* ?x2723 ?x4333 ?x2646) 0)))))
 (let (($x2023 (= ?x2646 0)))
 (and $x2023 $x1116)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x4253 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x3485 (* 2 (* d 4))))
 (let ((?x3224 (* (- 2) (* q d))))
 (let ((?x3225 (* q d d)))
 (let ((?x3217 (* r d)))
 (let ((?x3347 (* (- 4) ?x3217)))
 (let ((?x3345 (* (- 8) d)))
 (let ((?x2534 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x3629 (+ 2 q ?x144 ?x179 d)))
 (let ((?x3476 (+ 4 q)))
 (let ((?x3487 (+ 2 d)))
 (let ((?x4333 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x3629 ?x3629 r r r)) (* (- 1) (* ?x3629 ?x3629 ?x3629 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x3629 r))))
 (let ((?x3731 (* r r r d)))
 (let ((?x3732 (* 216 ?x3731)))
 (let ((?x3729 (* r r r d d)))
 (let ((?x3730 (* 96 ?x3729)))
 (let ((?x3701 (* q r r r d)))
 (let ((?x3702 (* 144 ?x3701)))
 (let ((?x3699 (* q r r r d d)))
 (let ((?x3700 (* 62 ?x3699)))
 (let ((?x3289 (* 2 (* d q q 4 r r r))))
 (let ((?x3286 (* 2 (* d 4 4 q r r r))))
 (let ((?x3495 (* 2 (* d 4 q q r r r))))
 (let ((?x3453 (* 2 (* d q 4 q r r r))))
 (let ((?x3454 (* q r r r)))
 (let ((?x3452 (* 248 ?x3454)))
 (let ((?x3450 (* q q r r r)))
 (let ((?x3496 (* 56 ?x3450)))
 (let ((?x3449 (* 2 (* q 4 q r r r))))
 (let ((?x3284 (* 2 (* d 4 q 4 r r r))))
 (let ((?x2768 (* 2 (* d 4 4 4 r r r))))
 (let ((?x3282 (* 2 (* d q 4 4 r r r))))
 (let ((?x3042 (* 2 (* q q d r r r))))
 (let ((?x3040 (* 2 (* q 4 ?x179 r r r))))
 (let ((?x3038 (* 2 (* q q ?x179 r r r))))
 (let ((?x3036 (* q r r r r d)))
 (let ((?x3035 (* 16 ?x3036)))
 (let ((?x3034 (* q r r r r)))
 (let ((?x3033 (* 16 ?x3034)))
 (let ((?x3023 (* 2 (* q q r r r r d))))
 (let ((?x3020 (* q r r r x)))
 (let ((?x3017 (* (- 8) ?x3020)))
 (let ((?x3044 (* 2 (* q 4 d r r r))))
 (let ((?x2769 (* r r r)))
 (let ((?x2767 (* 336 ?x2769)))
 (let ((?x2722 (* r r r x d)))
 (let ((?x3642 (* (- 24) ?x2722)))
 (let ((?x2600 (* q q r r r d)))
 (let ((?x2598 (* 34 ?x2600)))
 (let ((?x2595 (* q q q r r r d d)))
 (let ((?x1804 (* 2 (* d 2 2 r r r))))
 (let ((?x2591 (* q q r r r d d)))
 (let ((?x2592 (* 13 ?x2591)))
 (let ((?x2476 (* 2 (* q q ?x144 r r r))))
 (let ((?x2474 (* 2 (* q 4 ?x144 r r r))))
 (let ((?x2412 (* 2 (* q q 2 r r r))))
 (let ((?x2410 (* 2 (* q 4 2 r r r))))
 (let ((?x862 (* 2 (* d 2 d r r r))))
 (let ((?x2290 (* 2 (* d d ?x144 r r r))))
 (let ((?x2281 (* 2 (* d 2 ?x144 r r r))))
 (let ((?x1981 (* q r r r x d)))
 (let ((?x4163 (* (- 8) ?x1981)))
 (let ((?x2043 (* 2 (* d d 2 r r r))))
 (let ((?x1836 (* 2 (* d 2 q r r r))))
 (let ((?x1634 (* 5 (* q q q r r r d))))
 (let ((?x1386 (* r r r x d d)))
 (let ((?x1433 (* (- 4) ?x1386)))
 (let ((?x1384 (* (- 1) (* r r r x d d d))))
 (let ((?x1225 (* r r r d d d)))
 (let ((?x1438 (* 8 ?x1225)))
 (let ((?x1161 (* 2 (* d 2 ?x179 r r r))))
 (let ((?x990 (* q q q r r r)))
 (let ((?x3168 (* 6 ?x990)))
 (let ((?x982 (* q r r r d d d)))
 (let ((?x1412 (* (- 1) (* q q r r r x d))))
 (let ((?x960 (* 2 (* d d ?x179 r r r))))
 (let ((?x769 (* r r r r)))
 (let ((?x983 (* 80 ?x769)))
 (let ((?x765 (* r r r r d)))
 (let ((?x387 (* 48 ?x765)))
 (let ((?x552 (* r r r x)))
 (let ((?x553 (* (- 40) ?x552)))
 (let ((?x551 (* r r r d d d d)))
 (let ((?x432 (* 2 (* r r r r d d d))))
 (let ((?x429 (* r r r r d d)))
 (let ((?x430 (* 8 ?x429)))
 (let ((?x4175 (+ ?x430 ?x432 ?x551 ?x553 ?x387 ?x983 ?x960 ?x1412 ?x982 ?x3168 ?x1161 ?x1438 ?x1384 ?x1433 ?x1634 ?x1836 ?x2043 ?x4163 ?x2281 ?x2290 ?x862 ?x2410 ?x2412 ?x2474 ?x2476 ?x2592 ?x1804 ?x2595 ?x2598 ?x3642 ?x2767 ?x3044 ?x3017 ?x3023 ?x3033 ?x3035 ?x3038 ?x3040 ?x3042 ?x3282 ?x2768 ?x3284 ?x3449 ?x3496 ?x3452 ?x3453 ?x3495 ?x3286 ?x3289 ?x3700 ?x3702 ?x3730 ?x3732)))
 (let ((?x4371 (* ?x4175 ?x4333 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3345 ?x3347 ?x3225 ?x3224 ?x3485))))
 (let ((?x3820 (* 8 d)))
 (let ((?x3554 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3820 ?x3347 ?x3225 ?x3224 (* (- 4) (* d 2)))))
 (let ((?x3825 (* (- 1) d)))
 (let ((?x2633 (+ (- 2) q ?x144 ?x179 ?x3825)))
 (let ((?x3824 (+ (- 4) q)))
 (let ((?x186 (+ (* (- 1) (* ?x2633 ?x2633 ?x2633 r)) (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x2633 ?x2633 r r r)) (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x2633 r))))
 (let ((?x3867 (* 2 (* d d ?x3825 r r r))))
 (let ((?x3865 (* 2 (* d 2 ?x3825 r r r))))
 (let ((?x3863 (* 2 (* d d (- 2) r r r))))
 (let ((?x3861 (* 2 (* d 2 (- 2) r r r))))
 (let ((?x3832 (* (- 96) ?x3729)))
 (let ((?x3841 (* (- 16) ?x3034)))
 (let ((?x3843 (* 8 ?x3020)))
 (let ((?x3835 (* (- 336) ?x2769)))
 (let ((?x3837 (* (- 13) ?x2591)))
 (let ((?x1960 (* (- 2) (* q q r r r x))))
 (let ((?x1896 (* 4 (* q q r r r r))))
 (let ((?x3838 (* (- 6) ?x1225)))
 (let ((?x3839 (* (- 1) ?x551)))
 (let ((?x3643 (+ ?x430 ?x432 (* (- 4) (* q d (- 2) r r r)) ?x3839 ?x553 (* (- 4) (* q 2 ?x144 r r r)) ?x387 ?x983 (* (- 4) (* q 2 q r r r)) (* (- 4) (* q d ?x144 r r r)) (* (- 4) (* q 2 ?x179 r r r)) (* (- 4) (* q d ?x179 r r r)) (* (- 4) (* q d ?x3825 r r r)) (* (- 4) (* q 2 ?x3825 r r r)) ?x960 ?x1412 ?x982 ?x3168 (* (- 4) (* q q d 2 r r r)) ?x1161 ?x3838 ?x1384 ?x1433 (* (- 4) (* q q 2 d r r r)) ?x1634 ?x1836 ?x1896 ?x1960 (* 4 ?x1981) ?x2281 ?x2290 (* (- 4) (* q (- 4) d 2 r r r)) ?x3837 ?x2595 (* (- 44) ?x2600) (* (- 4) (* q (- 4) 2 d r r r)) ?x3642 ?x3835 (* (- 4) (* q (- 4) d d r r r)) (* (- 4) (* q q 2 2 r r r)) ?x3843 ?x3023 ?x3841 (* (- 8) ?x3036) (* (- 4) (* q 2 (- 2) r r r)) (* (- 44) ?x3450) (* 184 ?x3454) (* (- 4) (* q (- 4) 2 2 r r r)) (* 42 ?x3699) (* 168 ?x3701) ?x3832 (* (- 344) ?x3731) ?x3861 ?x3863 ?x3865 ?x3867)))
 (let ((?x3884 (* 16 d)))
 (let ((?x2614 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3884 ?x3347 ?x3225 ?x3224 (* (- 8) (* d 2)))))
 (let ((?x3889 (* (- 2) d)))
 (let ((?x2208 (+ (- 4) q ?x144 ?x179 ?x3889)))
 (let ((?x3888 (+ (- 8) q)))
 (let ((?x3426 (+ (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x2208 r) (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x2208 ?x2208 r r r)) (* (- 1) (* ?x2208 ?x2208 ?x2208 r)))))
 (let ((?x3940 (* 2 (* d d ?x3889 r r r))))
 (let ((?x3938 (* 2 (* d 2 ?x3889 r r r))))
 (let ((?x3936 (* 2 (* d d (- 4) r r r))))
 (let ((?x3934 (* 2 (* d 2 (- 4) r r r))))
 (let ((?x3898 (* (- 672) ?x3729)))
 (let ((?x3840 (* (- 16) ?x3036)))
 (let ((?x3912 (* (- 32) ?x3034)))
 (let ((?x3914 (* 16 ?x3020)))
 (let ((?x3902 (* (- 2592) ?x2769)))
 (let ((?x3904 (* (- 26) ?x2591)))
 (let ((?x1987 (* 8 ?x1981)))
 (let ((?x3905 (* (- 12) ?x1225)))
 (let ((?x3906 (* 272 ?x769)))
 (let ((?x3907 (* 144 ?x765)))
 (let ((?x3909 (* (- 136) ?x552)))
 (let ((?x3908 (* (- 2) ?x551)))
 (let ((?x3401 (+ (* (- 8) (* q (- 8) 2 d r r r)) ?x430 ?x432 (* (- 8) (* q (- 8) d d r r r)) (* (- 8) (* q (- 8) d 2 r r r)) ?x3908 ?x3909 (* (- 8) (* q 2 ?x144 r r r)) (* (- 8) (* q d (- 4) r r r)) ?x3907 ?x3906 (* (- 8) (* q 2 q r r r)) (* (- 8) (* q d ?x144 r r r)) (* (- 8) (* q 2 ?x179 r r r)) (* (- 8) (* q d ?x179 r r r)) (* (- 8) (* q d ?x3889 r r r)) (* (- 8) (* q 2 ?x3889 r r r)) ?x960 ?x1412 (* (- 8) (* q 2 (- 4) r r r)) ?x982 ?x3168 (* (- 8) (* q q d 2 r r r)) ?x1161 ?x3905 ?x1384 ?x1433 (* (- 8) (* q q 2 d r r r)) ?x1634 ?x1836 ?x1896 ?x1960 ?x1987 ?x2281 ?x2290 ?x3904 ?x2595 (* (- 88) ?x2600) (* (- 72) ?x2722) ?x3902 (* (- 8) (* q (- 8) 2 2 r r r)) (* (- 8) (* q q 2 2 r r r)) ?x3914 ?x3023 ?x3912 ?x3840 (* (- 88) ?x3450) (* 712 ?x3454) (* 150 ?x3699) (* 648 ?x3701) ?x3898 (* (- 2608) ?x3731) ?x3934 ?x3936 ?x3938 ?x3940)))
 (let ((?x2646 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3347 ?x3225 ?x3224)))
 (let ((?x3801 (* 2 (* q q r r d d d))))
 (let ((?x3798 (* q q r r d d)))
 (let ((?x3799 (* 8 ?x3798)))
 (let ((?x3796 (* q q r r d)))
 (let ((?x3797 (* 16 ?x3796)))
 (let ((?x3795 (* q q q r d d d)))
 (let ((?x3794 (* 6 (* q q q r d d))))
 (let ((?x3791 (* q q q r d)))
 (let ((?x3792 (* 8 ?x3791)))
 (let ((?x3780 (* r x x x)))
 (let ((?x3779 (* (- 6) (* r r x x))))
 (let ((?x3777 (* (- 3) (* q r x x))))
 (let ((?x3775 (* 12 (* q r r x))))
 (let ((?x3773 (* (- 5) (* q q r x))))
 (let ((?x3771 (* 10 (* q q r r))))
 (let ((?x3755 (* q q q q q r r r d)))
 (let ((?x3131 (* (- 4) ?x3755)))
 (let ((?x3752 (* (- 16) (* q q q q r r r r))))
 (let ((?x3751 (* q q q q r r r r d)))
 (let ((?x3095 (* (- 16) ?x3751)))
 (let ((?x3748 (* 8 (* q q q q r r r x))))
 (let ((?x3744 (* (- 16) (* q q q r r r r r))))
 (let ((?x3743 (* q q q r r r r r d)))
 (let ((?x3136 (* (- 16) ?x3743)))
 (let ((?x3740 (* 16 (* q q q r r r r x))))
 (let ((?x3736 (* (- 4) (* q q q r r r x x))))
 (let ((?x3082 (* (- 12) ?x3454)))
 (let ((?x673 (* (- 1) (* q q q r r r x x d d))))
 (let ((?x3135 (* (- 4) (* q q q r r r x x d))))
 (let ((?x1127 (* 4 (* q q q r r r r x d d))))
 (let ((?x1112 (* (- 4) (* q q q r r r r r d d))))
 (let ((?x3087 (* (- 4) (* q q q q q r r r))))
 (let ((?x2895 (* (- 1) (* q q r x d d d))))
 (let ((?x2077 (* 2 (* q q q q r r r x d d))))
 (let ((?x2632 (* (- 1) (* q q q q q r r r d d))))
 (let ((?x3127 (* 8 (* q q q q r r r x d))))
 (let ((?x3084 (* (- 8) ?x769)))
 (let ((?x678 (* q q q r)))
 (let ((?x3769 (* 7 ?x678)))
 (let ((?x3096 (* 16 (* q q q r r r r x d))))
 (let ((?x3085 (* 12 ?x552)))
 (let ((?x473 (* (- 4) (* q q q q r r r r d d))))
 (let ((?x2912 (+ ?x473 ?x3085 ?x3096 ?x3769 ?x3084 (* 2 (* d d ?x179 r q q)) ?x3127 ?x2632 (* 2 (* d d ?x144 r q q)) ?x2077 (* 2 (* d 2 q r q q)) (* 2 (* d 2 ?x144 r q q)) (* (- 8) (* q q r x d)) (* (- 4) (* q q r x d d)) ?x2895 ?x3087 ?x1112 ?x1127 ?x3135 ?x673 ?x3082 (* 2 (* d 2 ?x179 r q q)) ?x3736 ?x3740 ?x3136 ?x3744 ?x3748 ?x3095 ?x3752 ?x3131 ?x3771 ?x3773 ?x3775 ?x3777 ?x3779 ?x3780 ?x3792 ?x3794 ?x3795 ?x3797 ?x3799 ?x3801)))
 (let ((?x3810 (* 8 ?x3701)))
 (let ((?x3809 (* 6 ?x3699)))
 (let ((?x3811 (* 8 ?x3454)))
 (let ((?x3812 (* 16 ?x769)))
 (let ((?x3813 (* 16 ?x765)))
 (let ((?x3814 (* (- 8) ?x552)))
 (let ((?x1248 (+ ?x430 ?x432 ?x3814 (* 2 (* ?x179 r r r q q)) (* 2 (* ?x144 r r r q q)) ?x3813 ?x3812 ?x960 ?x1412 ?x982 (* 4 ?x990) ?x1161 ?x1384 ?x1433 ?x1634 (* 2 (* q r r r q q)) ?x1836 ?x2281 ?x2290 ?x2595 (* (- 8) ?x2722) ?x3023 ?x3811 ?x3809 ?x3810)))
 (let (($x4237 (or (not (= (* ?x1248 ?x2912 ?x2646) 0)) (not (= (* ?x3401 ?x3426 ?x2614) 0)) (not (= (* ?x3643 ?x186 ?x3554) 0)) (not (= ?x4371 0)))))
 (let (($x2023 (= ?x2646 0)))
 (and $x2023 $x4237)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x3447 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x3224 (* (- 2) (* q d))))
 (let ((?x3225 (* q d d)))
 (let ((?x3217 (* r d)))
 (let ((?x3347 (* (- 4) ?x3217)))
 (let ((?x2534 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x2646 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3347 ?x3225 ?x3224)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x3629 (+ 2 q ?x144 ?x179 d)))
 (let ((?x3476 (+ 4 q)))
 (let ((?x3487 (+ 2 d)))
 (let ((?x4333 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x3629 ?x3629 r r r)) (* (- 1) (* ?x3629 ?x3629 ?x3629 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x3629 r))))
 (let ((?x3701 (* q r r r d)))
 (let ((?x4243 (* 252 ?x3701)))
 (let ((?x3699 (* q r r r d d)))
 (let ((?x3700 (* 62 ?x3699)))
 (let ((?x3454 (* q r r r)))
 (let ((?x1394 (* 264 ?x3454)))
 (let ((?x3036 (* q r r r r d)))
 (let ((?x3035 (* 16 ?x3036)))
 (let ((?x3023 (* 2 (* q q r r r r d))))
 (let ((?x2769 (* r r r)))
 (let ((?x2767 (* 336 ?x2769)))
 (let ((?x2722 (* r r r x d)))
 (let ((?x3504 (* (- 28) ?x2722)))
 (let ((?x2595 (* q q q r r r d d)))
 (let ((?x2591 (* q q r r r d d)))
 (let ((?x2592 (* 13 ?x2591)))
 (let ((?x1981 (* q r r r x d)))
 (let ((?x4163 (* (- 8) ?x1981)))
 (let ((?x1960 (* (- 2) (* q q r r r x))))
 (let ((?x1896 (* 4 (* q q r r r r))))
 (let ((?x1634 (* 5 (* q q q r r r d))))
 (let ((?x1386 (* r r r x d d)))
 (let ((?x2433 (* (- 6) ?x1386)))
 (let ((?x1384 (* (- 1) (* r r r x d d d))))
 (let ((?x1225 (* r r r d d d)))
 (let ((?x1438 (* 8 ?x1225)))
 (let ((?x990 (* q q q r r r)))
 (let ((?x3168 (* 6 ?x990)))
 (let ((?x982 (* q r r r d d d)))
 (let ((?x1412 (* (- 1) (* q q r r r x d))))
 (let ((?x769 (* r r r r)))
 (let ((?x983 (* 80 ?x769)))
 (let ((?x765 (* r r r r d)))
 (let ((?x4060 (* 56 ?x765)))
 (let ((?x552 (* r r r x)))
 (let ((?x553 (* (- 40) ?x552)))
 (let ((?x551 (* r r r d d d d)))
 (let ((?x432 (* 2 (* r r r r d d d))))
 (let ((?x429 (* r r r r d d)))
 (let ((?x4134 (* 12 ?x429)))
 (let ((?x2723 (+ ?x4134 ?x432 ?x551 ?x553 ?x4060 ?x983 ?x1412 ?x982 ?x3168 ?x1438 ?x1384 ?x2433 ?x1634 ?x1896 ?x1960 ?x4163 ?x2592 ?x2595 (* 60 (* q q r r r d)) ?x3504 ?x2767 (* (- 16) (* q r r r x)) ?x3023 (* 32 (* q r r r r)) ?x3035 (* 68 (* q q r r r)) ?x1394 ?x3700 ?x4243 (* 104 (* r r r d d)) (* 352 (* r r r d)))))
 (let ((?x3825 (* (- 1) d)))
 (let ((?x2633 (+ (- 2) q ?x144 ?x179 ?x3825)))
 (let ((?x3824 (+ (- 4) q)))
 (let ((?x186 (+ (* (- 1) (* ?x2633 ?x2633 ?x2633 r)) (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x2633 ?x2633 r r r)) (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x2633 r))))
 (let ((?x3840 (* (- 16) ?x3036)))
 (let ((?x3034 (* q r r r r)))
 (let ((?x3912 (* (- 32) ?x3034)))
 (let ((?x3020 (* q r r r x)))
 (let ((?x3914 (* 16 ?x3020)))
 (let ((?x3835 (* (- 336) ?x2769)))
 (let ((?x3837 (* (- 13) ?x2591)))
 (let ((?x1987 (* 8 ?x1981)))
 (let ((?x3839 (* (- 1) ?x551)))
 (let ((?x1530 (+ ?x4134 ?x432 ?x3839 ?x553 ?x4060 ?x983 ?x1412 ?x982 ?x3168 (* (- 8) ?x1225) ?x1384 ?x2433 ?x1634 ?x1896 ?x1960 ?x1987 ?x3837 ?x2595 (* (- 60) (* q q r r r d)) ?x3504 ?x3835 ?x3914 ?x3023 ?x3912 ?x3840 (* (- 68) (* q q r r r)) ?x1394 ?x3700 ?x4243 (* (- 104) (* r r r d d)) (* (- 352) (* r r r d)))))
 (let ((?x3889 (* (- 2) d)))
 (let ((?x2208 (+ (- 4) q ?x144 ?x179 ?x3889)))
 (let ((?x3888 (+ (- 8) q)))
 (let ((?x3426 (+ (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x2208 r) (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x2208 ?x2208 r r r)) (* (- 1) (* ?x2208 ?x2208 ?x2208 r)))))
 (let ((?x3896 (* 230 ?x3699)))
 (let ((?x3911 (* (- 32) ?x3036)))
 (let ((?x3902 (* (- 2592) ?x2769)))
 (let ((?x3904 (* (- 26) ?x2591)))
 (let ((?x3906 (* 272 ?x769)))
 (let ((?x3909 (* (- 136) ?x552)))
 (let ((?x3908 (* (- 2) ?x551)))
 (let ((?x4236 (+ ?x4134 ?x432 ?x3908 ?x3909 (* 152 ?x765) ?x3906 ?x1412 ?x982 ?x3168 (* (- 16) ?x1225) ?x1384 ?x2433 ?x1634 ?x1896 ?x1960 (* 16 ?x1981) ?x3904 ?x2595 (* (- 120) (* q q r r r d)) (* (- 76) ?x2722) ?x3902 (* 32 ?x3020) ?x3023 (* (- 64) ?x3034) ?x3911 (* (- 136) (* q q r r r)) (* 1032 ?x3454) ?x3896 (* 972 ?x3701) (* (- 688) (* r r r d d)) (* (- 2624) (* r r r d)))))
 (let ((?x3801 (* 2 (* q q r r d d d))))
 (let ((?x3795 (* q q q r d d d)))
 (let ((?x3794 (* 6 (* q q q r d d))))
 (let ((?x3780 (* r x x x)))
 (let ((?x3779 (* (- 6) (* r r x x))))
 (let ((?x3777 (* (- 3) (* q r x x))))
 (let ((?x3775 (* 12 (* q r r x))))
 (let ((?x3773 (* (- 5) (* q q r x))))
 (let ((?x3771 (* 10 (* q q r r))))
 (let ((?x3755 (* q q q q q r r r d)))
 (let ((?x3131 (* (- 4) ?x3755)))
 (let ((?x3752 (* (- 16) (* q q q q r r r r))))
 (let ((?x3751 (* q q q q r r r r d)))
 (let ((?x3095 (* (- 16) ?x3751)))
 (let ((?x3748 (* 8 (* q q q q r r r x))))
 (let ((?x3744 (* (- 16) (* q q q r r r r r))))
 (let ((?x3743 (* q q q r r r r r d)))
 (let ((?x3136 (* (- 16) ?x3743)))
 (let ((?x3740 (* 16 (* q q q r r r r x))))
 (let ((?x3736 (* (- 4) (* q q q r r r x x))))
 (let ((?x3082 (* (- 12) ?x3454)))
 (let ((?x673 (* (- 1) (* q q q r r r x x d d))))
 (let ((?x3135 (* (- 4) (* q q q r r r x x d))))
 (let ((?x1127 (* 4 (* q q q r r r r x d d))))
 (let ((?x1112 (* (- 4) (* q q q r r r r r d d))))
 (let ((?x3087 (* (- 4) (* q q q q q r r r))))
 (let ((?x2895 (* (- 1) (* q q r x d d d))))
 (let ((?x2077 (* 2 (* q q q q r r r x d d))))
 (let ((?x2632 (* (- 1) (* q q q q q r r r d d))))
 (let ((?x3127 (* 8 (* q q q q r r r x d))))
 (let ((?x3084 (* (- 8) ?x769)))
 (let ((?x678 (* q q q r)))
 (let ((?x3769 (* 7 ?x678)))
 (let ((?x3096 (* 16 (* q q q r r r r x d))))
 (let ((?x3085 (* 12 ?x552)))
 (let ((?x473 (* (- 4) (* q q q q r r r r d d))))
 (let ((?x566 (+ ?x473 ?x3085 ?x3096 ?x3769 ?x3084 ?x3127 ?x2632 ?x2077 (* (- 12) (* q q r x d)) (* (- 6) (* q q r x d d)) ?x2895 ?x3087 ?x1112 ?x1127 ?x3135 ?x673 ?x3082 ?x3736 ?x3740 ?x3136 ?x3744 ?x3748 ?x3095 ?x3752 ?x3131 ?x3771 ?x3773 ?x3775 ?x3777 ?x3779 ?x3780 (* 12 (* q q q r d)) ?x3794 ?x3795 (* 24 (* q q r r d)) (* 12 (* q q r r d d)) ?x3801)))
 (let ((?x3809 (* 6 ?x3699)))
 (let ((?x3811 (* 8 ?x3454)))
 (let ((?x3812 (* 16 ?x769)))
 (let ((?x3814 (* (- 8) ?x552)))
 (let ((?x400 (+ ?x4134 ?x432 ?x3814 (* 24 ?x765) ?x3812 ?x1412 ?x982 ?x3168 ?x1384 ?x2433 ?x1634 ?x1896 ?x1960 ?x2595 (* (- 12) ?x2722) ?x3023 ?x3811 ?x3809 (* 12 ?x3701))))
 (let (($x1116 (or (not (= (* ?x400 ?x566 ?x2646) 0)) (not (= (* ?x4236 ?x3426 ?x2646) 0)) (not (= (* ?x1530 ?x186 ?x2646) 0)) (not (= (* ?x2723 ?x4333 ?x2646) 0)))))
 (let (($x2023 (= ?x2646 0)))
 (let (($x2747 (and $x2023 $x1116)))
 (let ((?x3485 (* 2 (* d 4))))
 (let ((?x3345 (* (- 8) d)))
 (let ((?x3731 (* r r r d)))
 (let ((?x3732 (* 216 ?x3731)))
 (let ((?x3729 (* r r r d d)))
 (let ((?x3730 (* 96 ?x3729)))
 (let ((?x3702 (* 144 ?x3701)))
 (let ((?x3289 (* 2 (* d q q 4 r r r))))
 (let ((?x3286 (* 2 (* d 4 4 q r r r))))
 (let ((?x3495 (* 2 (* d 4 q q r r r))))
 (let ((?x3453 (* 2 (* d q 4 q r r r))))
 (let ((?x3452 (* 248 ?x3454)))
 (let ((?x3450 (* q q r r r)))
 (let ((?x3496 (* 56 ?x3450)))
 (let ((?x3449 (* 2 (* q 4 q r r r))))
 (let ((?x3284 (* 2 (* d 4 q 4 r r r))))
 (let ((?x2768 (* 2 (* d 4 4 4 r r r))))
 (let ((?x3282 (* 2 (* d q 4 4 r r r))))
 (let ((?x3042 (* 2 (* q q d r r r))))
 (let ((?x3040 (* 2 (* q 4 ?x179 r r r))))
 (let ((?x3038 (* 2 (* q q ?x179 r r r))))
 (let ((?x3033 (* 16 ?x3034)))
 (let ((?x3017 (* (- 8) ?x3020)))
 (let ((?x3044 (* 2 (* q 4 d r r r))))
 (let ((?x3642 (* (- 24) ?x2722)))
 (let ((?x2600 (* q q r r r d)))
 (let ((?x2598 (* 34 ?x2600)))
 (let ((?x1804 (* 2 (* d 2 2 r r r))))
 (let ((?x2476 (* 2 (* q q ?x144 r r r))))
 (let ((?x2474 (* 2 (* q 4 ?x144 r r r))))
 (let ((?x2412 (* 2 (* q q 2 r r r))))
 (let ((?x2410 (* 2 (* q 4 2 r r r))))
 (let ((?x862 (* 2 (* d 2 d r r r))))
 (let ((?x2290 (* 2 (* d d ?x144 r r r))))
 (let ((?x2281 (* 2 (* d 2 ?x144 r r r))))
 (let ((?x2043 (* 2 (* d d 2 r r r))))
 (let ((?x1836 (* 2 (* d 2 q r r r))))
 (let ((?x1433 (* (- 4) ?x1386)))
 (let ((?x1161 (* 2 (* d 2 ?x179 r r r))))
 (let ((?x960 (* 2 (* d d ?x179 r r r))))
 (let ((?x387 (* 48 ?x765)))
 (let ((?x430 (* 8 ?x429)))
 (let ((?x4175 (+ ?x430 ?x432 ?x551 ?x553 ?x387 ?x983 ?x960 ?x1412 ?x982 ?x3168 ?x1161 ?x1438 ?x1384 ?x1433 ?x1634 ?x1836 ?x2043 ?x4163 ?x2281 ?x2290 ?x862 ?x2410 ?x2412 ?x2474 ?x2476 ?x2592 ?x1804 ?x2595 ?x2598 ?x3642 ?x2767 ?x3044 ?x3017 ?x3023 ?x3033 ?x3035 ?x3038 ?x3040 ?x3042 ?x3282 ?x2768 ?x3284 ?x3449 ?x3496 ?x3452 ?x3453 ?x3495 ?x3286 ?x3289 ?x3700 ?x3702 ?x3730 ?x3732)))
 (let ((?x4371 (* ?x4175 ?x4333 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3345 ?x3347 ?x3225 ?x3224 ?x3485))))
 (let ((?x3820 (* 8 d)))
 (let ((?x3554 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3820 ?x3347 ?x3225 ?x3224 (* (- 4) (* d 2)))))
 (let ((?x3867 (* 2 (* d d ?x3825 r r r))))
 (let ((?x3865 (* 2 (* d 2 ?x3825 r r r))))
 (let ((?x3863 (* 2 (* d d (- 2) r r r))))
 (let ((?x3861 (* 2 (* d 2 (- 2) r r r))))
 (let ((?x3832 (* (- 96) ?x3729)))
 (let ((?x3841 (* (- 16) ?x3034)))
 (let ((?x3843 (* 8 ?x3020)))
 (let ((?x3838 (* (- 6) ?x1225)))
 (let ((?x3643 (+ ?x430 ?x432 (* (- 4) (* q d (- 2) r r r)) ?x3839 ?x553 (* (- 4) (* q 2 ?x144 r r r)) ?x387 ?x983 (* (- 4) (* q 2 q r r r)) (* (- 4) (* q d ?x144 r r r)) (* (- 4) (* q 2 ?x179 r r r)) (* (- 4) (* q d ?x179 r r r)) (* (- 4) (* q d ?x3825 r r r)) (* (- 4) (* q 2 ?x3825 r r r)) ?x960 ?x1412 ?x982 ?x3168 (* (- 4) (* q q d 2 r r r)) ?x1161 ?x3838 ?x1384 ?x1433 (* (- 4) (* q q 2 d r r r)) ?x1634 ?x1836 ?x1896 ?x1960 (* 4 ?x1981) ?x2281 ?x2290 (* (- 4) (* q (- 4) d 2 r r r)) ?x3837 ?x2595 (* (- 44) ?x2600) (* (- 4) (* q (- 4) 2 d r r r)) ?x3642 ?x3835 (* (- 4) (* q (- 4) d d r r r)) (* (- 4) (* q q 2 2 r r r)) ?x3843 ?x3023 ?x3841 (* (- 8) ?x3036) (* (- 4) (* q 2 (- 2) r r r)) (* (- 44) ?x3450) (* 184 ?x3454) (* (- 4) (* q (- 4) 2 2 r r r)) (* 42 ?x3699) (* 168 ?x3701) ?x3832 (* (- 344) ?x3731) ?x3861 ?x3863 ?x3865 ?x3867)))
 (let ((?x3884 (* 16 d)))
 (let ((?x2614 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3884 ?x3347 ?x3225 ?x3224 (* (- 8) (* d 2)))))
 (let ((?x3940 (* 2 (* d d ?x3889 r r r))))
 (let ((?x3938 (* 2 (* d 2 ?x3889 r r r))))
 (let ((?x3936 (* 2 (* d d (- 4) r r r))))
 (let ((?x3934 (* 2 (* d 2 (- 4) r r r))))
 (let ((?x3898 (* (- 672) ?x3729)))
 (let ((?x3905 (* (- 12) ?x1225)))
 (let ((?x3907 (* 144 ?x765)))
 (let ((?x3401 (+ (* (- 8) (* q (- 8) 2 d r r r)) ?x430 ?x432 (* (- 8) (* q (- 8) d d r r r)) (* (- 8) (* q (- 8) d 2 r r r)) ?x3908 ?x3909 (* (- 8) (* q 2 ?x144 r r r)) (* (- 8) (* q d (- 4) r r r)) ?x3907 ?x3906 (* (- 8) (* q 2 q r r r)) (* (- 8) (* q d ?x144 r r r)) (* (- 8) (* q 2 ?x179 r r r)) (* (- 8) (* q d ?x179 r r r)) (* (- 8) (* q d ?x3889 r r r)) (* (- 8) (* q 2 ?x3889 r r r)) ?x960 ?x1412 (* (- 8) (* q 2 (- 4) r r r)) ?x982 ?x3168 (* (- 8) (* q q d 2 r r r)) ?x1161 ?x3905 ?x1384 ?x1433 (* (- 8) (* q q 2 d r r r)) ?x1634 ?x1836 ?x1896 ?x1960 ?x1987 ?x2281 ?x2290 ?x3904 ?x2595 (* (- 88) ?x2600) (* (- 72) ?x2722) ?x3902 (* (- 8) (* q (- 8) 2 2 r r r)) (* (- 8) (* q q 2 2 r r r)) ?x3914 ?x3023 ?x3912 ?x3840 (* (- 88) ?x3450) (* 712 ?x3454) (* 150 ?x3699) (* 648 ?x3701) ?x3898 (* (- 2608) ?x3731) ?x3934 ?x3936 ?x3938 ?x3940)))
 (let ((?x3798 (* q q r r d d)))
 (let ((?x3799 (* 8 ?x3798)))
 (let ((?x3796 (* q q r r d)))
 (let ((?x3797 (* 16 ?x3796)))
 (let ((?x3791 (* q q q r d)))
 (let ((?x3792 (* 8 ?x3791)))
 (let ((?x2912 (+ ?x473 ?x3085 ?x3096 ?x3769 ?x3084 (* 2 (* d d ?x179 r q q)) ?x3127 ?x2632 (* 2 (* d d ?x144 r q q)) ?x2077 (* 2 (* d 2 q r q q)) (* 2 (* d 2 ?x144 r q q)) (* (- 8) (* q q r x d)) (* (- 4) (* q q r x d d)) ?x2895 ?x3087 ?x1112 ?x1127 ?x3135 ?x673 ?x3082 (* 2 (* d 2 ?x179 r q q)) ?x3736 ?x3740 ?x3136 ?x3744 ?x3748 ?x3095 ?x3752 ?x3131 ?x3771 ?x3773 ?x3775 ?x3777 ?x3779 ?x3780 ?x3792 ?x3794 ?x3795 ?x3797 ?x3799 ?x3801)))
 (let ((?x3810 (* 8 ?x3701)))
 (let ((?x3813 (* 16 ?x765)))
 (let ((?x1248 (+ ?x430 ?x432 ?x3814 (* 2 (* ?x179 r r r q q)) (* 2 (* ?x144 r r r q q)) ?x3813 ?x3812 ?x960 ?x1412 ?x982 (* 4 ?x990) ?x1161 ?x1384 ?x1433 ?x1634 (* 2 (* q r r r q q)) ?x1836 ?x2281 ?x2290 ?x2595 (* (- 8) ?x2722) ?x3023 ?x3811 ?x3809 ?x3810)))
 (let (($x4237 (or (not (= (* ?x1248 ?x2912 ?x2646) 0)) (not (= (* ?x3401 ?x3426 ?x2614) 0)) (not (= (* ?x3643 ?x186 ?x3554) 0)) (not (= ?x4371 0)))))
 (let (($x4275 (and $x2023 $x4237)))
 (rewrite (= $x4275 $x2747))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1249 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1265 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x245 (+ 2 ?x144 ?x179 q d)))
 (let ((?x3487 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x199 (* 4 (* ?x3487 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x3820 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x268 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x1523 (+ 16 ?x427 ?x268 ?x30 ?x3820 ?x182 ?x199 ?x214 ?x230 (* ?x3487 ?x3487 (+ 4 q)) (* (- 2) (* ?x3487 (+ 4 q))) ?x280 (* (- 4) (* ?x3487 ?x245)) ?x1265)))
 (let ((?x3476 (+ 4 q)))
 (let ((?x2883 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x245 ?x245 r r r)) (* (- 1) (* ?x245 ?x245 ?x245 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x245 r))))
 (let ((?x1499 (+ (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 r r r) (* ?x3487 ?x3487 ?x3487 ?x245 r r r) (* ?x3487 ?x3476 ?x3476 ?x245 r r r))))
 (let (($x2074 (not (= (* ?x1499 ?x2883 ?x1523) 0))))
 (let ((?x3345 (* (- 8) d)))
 (let ((?x1508 (+ (- 16) ?x427 ?x268 ?x30 ?x3345 ?x182 ?x199 ?x214 ?x230 (* (+ (- 4) q) ?x3487 ?x3487) (* (- 2) (* (+ (- 4) q) ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 2) ?x144 ?x179 q (* (- 1) d)))) ?x1265)))
 (let ((?x3825 (* (- 1) d)))
 (let ((?x575 (+ (- 2) ?x144 ?x179 q ?x3825)))
 (let ((?x3824 (+ (- 4) q)))
 (let ((?x603 (+ (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x575 ?x575 r r r)) (* (- 1) (* ?x575 ?x575 ?x575 r)) (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x575 r))))
 (let ((?x593 (+ (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x575 r r r) (* ?x3824 ?x3824 ?x3487 ?x575 r r r))))
 (let (($x1490 (not (= (* ?x593 ?x603 ?x1508) 0))))
 (let ((?x1914 (+ (- 32) ?x427 ?x268 ?x30 (* (- 16) d) ?x182 ?x199 ?x214 ?x230 (* (+ (- 8) q) ?x3487 ?x3487) (* (- 2) (* (+ (- 8) q) ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 4) ?x144 ?x179 q (* (- 2) d)))) ?x1265)))
 (let ((?x3889 (* (- 2) d)))
 (let ((?x2137 (+ (- 4) ?x144 ?x179 q ?x3889)))
 (let ((?x3888 (+ (- 8) q)))
 (let ((?x2342 (+ (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x2137 ?x2137 r r r)) (* (- 1) (* ?x2137 ?x2137 ?x2137 r)) (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x2137 r))))
 (let ((?x2079 (+ (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x2137 r r r) (* ?x3888 ?x3888 ?x3487 ?x2137 r r r))))
 (let (($x556 (not (= (* ?x2079 ?x2342 ?x1914) 0))))
 (let ((?x1993 (+ ?x427 ?x268 ?x30 ?x182 ?x199 ?x214 ?x230 (* ?x3487 ?x3487 q) (* (- 2) (* ?x3487 q)) ?x280 (* (- 4) (* ?x3487 (+ ?x144 ?x179 q))) ?x1265)))
 (let ((?x212 (* (- 1) (* (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) r))))
 (let ((?x3488 (+ ?x144 ?x179 q)))
 (let ((?x1223 (+ (* (- 1) (* ?x3487 ?x3487 ?x3488 ?x3488 r r r q q q)) ?x212 (* ?x3487 ?x3487 ?x3487 ?x3488 r q q))))
 (let ((?x2761 (+ (* ?x3487 ?x3487 r r r q q q) (* ?x3487 ?x3487 ?x3487 ?x3488 r r r) (* ?x3487 ?x3488 r r r q q))))
 (let (($x206 (not (= (* ?x2761 ?x1223 ?x1993) 0))))
 (let ((?x2534 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x511 (+ ?x211 ?x182 ?x2534 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1265)))
 (let (($x578 (= ?x511 0)))
 (and $x578 (or $x206 $x556 $x1490 $x2074))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x4251 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x3485 (* 2 (* d 4))))
 (let ((?x3224 (* (- 2) (* q d))))
 (let ((?x3225 (* q d d)))
 (let ((?x3217 (* r d)))
 (let ((?x3347 (* (- 4) ?x3217)))
 (let ((?x3345 (* (- 8) d)))
 (let ((?x2534 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x3629 (+ 2 q ?x144 ?x179 d)))
 (let ((?x3476 (+ 4 q)))
 (let ((?x3487 (+ 2 d)))
 (let ((?x4333 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x3629 ?x3629 r r r)) (* (- 1) (* ?x3629 ?x3629 ?x3629 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x3629 r))))
 (let ((?x3731 (* r r r d)))
 (let ((?x3732 (* 216 ?x3731)))
 (let ((?x3729 (* r r r d d)))
 (let ((?x3730 (* 96 ?x3729)))
 (let ((?x3701 (* q r r r d)))
 (let ((?x3702 (* 144 ?x3701)))
 (let ((?x3699 (* q r r r d d)))
 (let ((?x3700 (* 62 ?x3699)))
 (let ((?x3289 (* 2 (* d q q 4 r r r))))
 (let ((?x3286 (* 2 (* d 4 4 q r r r))))
 (let ((?x3495 (* 2 (* d 4 q q r r r))))
 (let ((?x3453 (* 2 (* d q 4 q r r r))))
 (let ((?x3454 (* q r r r)))
 (let ((?x3452 (* 248 ?x3454)))
 (let ((?x3450 (* q q r r r)))
 (let ((?x3496 (* 56 ?x3450)))
 (let ((?x3449 (* 2 (* q 4 q r r r))))
 (let ((?x3284 (* 2 (* d 4 q 4 r r r))))
 (let ((?x2768 (* 2 (* d 4 4 4 r r r))))
 (let ((?x3282 (* 2 (* d q 4 4 r r r))))
 (let ((?x3042 (* 2 (* q q d r r r))))
 (let ((?x3040 (* 2 (* q 4 ?x179 r r r))))
 (let ((?x3038 (* 2 (* q q ?x179 r r r))))
 (let ((?x3036 (* q r r r r d)))
 (let ((?x3035 (* 16 ?x3036)))
 (let ((?x3034 (* q r r r r)))
 (let ((?x3033 (* 16 ?x3034)))
 (let ((?x3023 (* 2 (* q q r r r r d))))
 (let ((?x3020 (* q r r r x)))
 (let ((?x3017 (* (- 8) ?x3020)))
 (let ((?x3044 (* 2 (* q 4 d r r r))))
 (let ((?x2769 (* r r r)))
 (let ((?x2767 (* 336 ?x2769)))
 (let ((?x2722 (* r r r x d)))
 (let ((?x3642 (* (- 24) ?x2722)))
 (let ((?x2600 (* q q r r r d)))
 (let ((?x2598 (* 34 ?x2600)))
 (let ((?x2595 (* q q q r r r d d)))
 (let ((?x1804 (* 2 (* d 2 2 r r r))))
 (let ((?x2591 (* q q r r r d d)))
 (let ((?x2592 (* 13 ?x2591)))
 (let ((?x2476 (* 2 (* q q ?x144 r r r))))
 (let ((?x2474 (* 2 (* q 4 ?x144 r r r))))
 (let ((?x2412 (* 2 (* q q 2 r r r))))
 (let ((?x2410 (* 2 (* q 4 2 r r r))))
 (let ((?x862 (* 2 (* d 2 d r r r))))
 (let ((?x2290 (* 2 (* d d ?x144 r r r))))
 (let ((?x2281 (* 2 (* d 2 ?x144 r r r))))
 (let ((?x1981 (* q r r r x d)))
 (let ((?x4163 (* (- 8) ?x1981)))
 (let ((?x2043 (* 2 (* d d 2 r r r))))
 (let ((?x1836 (* 2 (* d 2 q r r r))))
 (let ((?x1634 (* 5 (* q q q r r r d))))
 (let ((?x1386 (* r r r x d d)))
 (let ((?x1433 (* (- 4) ?x1386)))
 (let ((?x1384 (* (- 1) (* r r r x d d d))))
 (let ((?x1225 (* r r r d d d)))
 (let ((?x1438 (* 8 ?x1225)))
 (let ((?x1161 (* 2 (* d 2 ?x179 r r r))))
 (let ((?x990 (* q q q r r r)))
 (let ((?x3168 (* 6 ?x990)))
 (let ((?x982 (* q r r r d d d)))
 (let ((?x1412 (* (- 1) (* q q r r r x d))))
 (let ((?x960 (* 2 (* d d ?x179 r r r))))
 (let ((?x769 (* r r r r)))
 (let ((?x983 (* 80 ?x769)))
 (let ((?x765 (* r r r r d)))
 (let ((?x387 (* 48 ?x765)))
 (let ((?x552 (* r r r x)))
 (let ((?x553 (* (- 40) ?x552)))
 (let ((?x551 (* r r r d d d d)))
 (let ((?x432 (* 2 (* r r r r d d d))))
 (let ((?x429 (* r r r r d d)))
 (let ((?x430 (* 8 ?x429)))
 (let ((?x4175 (+ ?x430 ?x432 ?x551 ?x553 ?x387 ?x983 ?x960 ?x1412 ?x982 ?x3168 ?x1161 ?x1438 ?x1384 ?x1433 ?x1634 ?x1836 ?x2043 ?x4163 ?x2281 ?x2290 ?x862 ?x2410 ?x2412 ?x2474 ?x2476 ?x2592 ?x1804 ?x2595 ?x2598 ?x3642 ?x2767 ?x3044 ?x3017 ?x3023 ?x3033 ?x3035 ?x3038 ?x3040 ?x3042 ?x3282 ?x2768 ?x3284 ?x3449 ?x3496 ?x3452 ?x3453 ?x3495 ?x3286 ?x3289 ?x3700 ?x3702 ?x3730 ?x3732)))
 (let ((?x4371 (* ?x4175 ?x4333 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3345 ?x3347 ?x3225 ?x3224 ?x3485))))
 (let ((?x3820 (* 8 d)))
 (let ((?x3554 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3820 ?x3347 ?x3225 ?x3224 (* (- 4) (* d 2)))))
 (let ((?x3825 (* (- 1) d)))
 (let ((?x2633 (+ (- 2) q ?x144 ?x179 ?x3825)))
 (let ((?x3824 (+ (- 4) q)))
 (let ((?x186 (+ (* (- 1) (* ?x2633 ?x2633 ?x2633 r)) (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x2633 ?x2633 r r r)) (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x2633 r))))
 (let ((?x3867 (* 2 (* d d ?x3825 r r r))))
 (let ((?x3865 (* 2 (* d 2 ?x3825 r r r))))
 (let ((?x3863 (* 2 (* d d (- 2) r r r))))
 (let ((?x3861 (* 2 (* d 2 (- 2) r r r))))
 (let ((?x3832 (* (- 96) ?x3729)))
 (let ((?x3841 (* (- 16) ?x3034)))
 (let ((?x3843 (* 8 ?x3020)))
 (let ((?x3835 (* (- 336) ?x2769)))
 (let ((?x3837 (* (- 13) ?x2591)))
 (let ((?x1960 (* (- 2) (* q q r r r x))))
 (let ((?x1896 (* 4 (* q q r r r r))))
 (let ((?x3838 (* (- 6) ?x1225)))
 (let ((?x3839 (* (- 1) ?x551)))
 (let ((?x3643 (+ ?x430 ?x432 (* (- 4) (* q d (- 2) r r r)) ?x3839 ?x553 (* (- 4) (* q 2 ?x144 r r r)) ?x387 ?x983 (* (- 4) (* q 2 q r r r)) (* (- 4) (* q d ?x144 r r r)) (* (- 4) (* q 2 ?x179 r r r)) (* (- 4) (* q d ?x179 r r r)) (* (- 4) (* q d ?x3825 r r r)) (* (- 4) (* q 2 ?x3825 r r r)) ?x960 ?x1412 ?x982 ?x3168 (* (- 4) (* q q d 2 r r r)) ?x1161 ?x3838 ?x1384 ?x1433 (* (- 4) (* q q 2 d r r r)) ?x1634 ?x1836 ?x1896 ?x1960 (* 4 ?x1981) ?x2281 ?x2290 (* (- 4) (* q (- 4) d 2 r r r)) ?x3837 ?x2595 (* (- 44) ?x2600) (* (- 4) (* q (- 4) 2 d r r r)) ?x3642 ?x3835 (* (- 4) (* q (- 4) d d r r r)) (* (- 4) (* q q 2 2 r r r)) ?x3843 ?x3023 ?x3841 (* (- 8) ?x3036) (* (- 4) (* q 2 (- 2) r r r)) (* (- 44) ?x3450) (* 184 ?x3454) (* (- 4) (* q (- 4) 2 2 r r r)) (* 42 ?x3699) (* 168 ?x3701) ?x3832 (* (- 344) ?x3731) ?x3861 ?x3863 ?x3865 ?x3867)))
 (let ((?x3884 (* 16 d)))
 (let ((?x2614 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3884 ?x3347 ?x3225 ?x3224 (* (- 8) (* d 2)))))
 (let ((?x3889 (* (- 2) d)))
 (let ((?x2208 (+ (- 4) q ?x144 ?x179 ?x3889)))
 (let ((?x3888 (+ (- 8) q)))
 (let ((?x3426 (+ (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x2208 r) (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x2208 ?x2208 r r r)) (* (- 1) (* ?x2208 ?x2208 ?x2208 r)))))
 (let ((?x3940 (* 2 (* d d ?x3889 r r r))))
 (let ((?x3938 (* 2 (* d 2 ?x3889 r r r))))
 (let ((?x3936 (* 2 (* d d (- 4) r r r))))
 (let ((?x3934 (* 2 (* d 2 (- 4) r r r))))
 (let ((?x3898 (* (- 672) ?x3729)))
 (let ((?x3840 (* (- 16) ?x3036)))
 (let ((?x3912 (* (- 32) ?x3034)))
 (let ((?x3914 (* 16 ?x3020)))
 (let ((?x3902 (* (- 2592) ?x2769)))
 (let ((?x3904 (* (- 26) ?x2591)))
 (let ((?x1987 (* 8 ?x1981)))
 (let ((?x3905 (* (- 12) ?x1225)))
 (let ((?x3906 (* 272 ?x769)))
 (let ((?x3907 (* 144 ?x765)))
 (let ((?x3909 (* (- 136) ?x552)))
 (let ((?x3908 (* (- 2) ?x551)))
 (let ((?x3401 (+ (* (- 8) (* q (- 8) 2 d r r r)) ?x430 ?x432 (* (- 8) (* q (- 8) d d r r r)) (* (- 8) (* q (- 8) d 2 r r r)) ?x3908 ?x3909 (* (- 8) (* q 2 ?x144 r r r)) (* (- 8) (* q d (- 4) r r r)) ?x3907 ?x3906 (* (- 8) (* q 2 q r r r)) (* (- 8) (* q d ?x144 r r r)) (* (- 8) (* q 2 ?x179 r r r)) (* (- 8) (* q d ?x179 r r r)) (* (- 8) (* q d ?x3889 r r r)) (* (- 8) (* q 2 ?x3889 r r r)) ?x960 ?x1412 (* (- 8) (* q 2 (- 4) r r r)) ?x982 ?x3168 (* (- 8) (* q q d 2 r r r)) ?x1161 ?x3905 ?x1384 ?x1433 (* (- 8) (* q q 2 d r r r)) ?x1634 ?x1836 ?x1896 ?x1960 ?x1987 ?x2281 ?x2290 ?x3904 ?x2595 (* (- 88) ?x2600) (* (- 72) ?x2722) ?x3902 (* (- 8) (* q (- 8) 2 2 r r r)) (* (- 8) (* q q 2 2 r r r)) ?x3914 ?x3023 ?x3912 ?x3840 (* (- 88) ?x3450) (* 712 ?x3454) (* 150 ?x3699) (* 648 ?x3701) ?x3898 (* (- 2608) ?x3731) ?x3934 ?x3936 ?x3938 ?x3940)))
 (let ((?x2646 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2534 ?x3347 ?x3225 ?x3224)))
 (let ((?x3801 (* 2 (* q q r r d d d))))
 (let ((?x3798 (* q q r r d d)))
 (let ((?x3799 (* 8 ?x3798)))
 (let ((?x3796 (* q q r r d)))
 (let ((?x3797 (* 16 ?x3796)))
 (let ((?x3795 (* q q q r d d d)))
 (let ((?x3794 (* 6 (* q q q r d d))))
 (let ((?x3791 (* q q q r d)))
 (let ((?x3792 (* 8 ?x3791)))
 (let ((?x3780 (* r x x x)))
 (let ((?x3779 (* (- 6) (* r r x x))))
 (let ((?x3777 (* (- 3) (* q r x x))))
 (let ((?x3775 (* 12 (* q r r x))))
 (let ((?x3773 (* (- 5) (* q q r x))))
 (let ((?x3771 (* 10 (* q q r r))))
 (let ((?x3755 (* q q q q q r r r d)))
 (let ((?x3131 (* (- 4) ?x3755)))
 (let ((?x3752 (* (- 16) (* q q q q r r r r))))
 (let ((?x3751 (* q q q q r r r r d)))
 (let ((?x3095 (* (- 16) ?x3751)))
 (let ((?x3748 (* 8 (* q q q q r r r x))))
 (let ((?x3744 (* (- 16) (* q q q r r r r r))))
 (let ((?x3743 (* q q q r r r r r d)))
 (let ((?x3136 (* (- 16) ?x3743)))
 (let ((?x3740 (* 16 (* q q q r r r r x))))
 (let ((?x3736 (* (- 4) (* q q q r r r x x))))
 (let ((?x3082 (* (- 12) ?x3454)))
 (let ((?x673 (* (- 1) (* q q q r r r x x d d))))
 (let ((?x3135 (* (- 4) (* q q q r r r x x d))))
 (let ((?x1127 (* 4 (* q q q r r r r x d d))))
 (let ((?x1112 (* (- 4) (* q q q r r r r r d d))))
 (let ((?x3087 (* (- 4) (* q q q q q r r r))))
 (let ((?x2895 (* (- 1) (* q q r x d d d))))
 (let ((?x2077 (* 2 (* q q q q r r r x d d))))
 (let ((?x2632 (* (- 1) (* q q q q q r r r d d))))
 (let ((?x3127 (* 8 (* q q q q r r r x d))))
 (let ((?x3084 (* (- 8) ?x769)))
 (let ((?x678 (* q q q r)))
 (let ((?x3769 (* 7 ?x678)))
 (let ((?x3096 (* 16 (* q q q r r r r x d))))
 (let ((?x3085 (* 12 ?x552)))
 (let ((?x473 (* (- 4) (* q q q q r r r r d d))))
 (let ((?x2912 (+ ?x473 ?x3085 ?x3096 ?x3769 ?x3084 (* 2 (* d d ?x179 r q q)) ?x3127 ?x2632 (* 2 (* d d ?x144 r q q)) ?x2077 (* 2 (* d 2 q r q q)) (* 2 (* d 2 ?x144 r q q)) (* (- 8) (* q q r x d)) (* (- 4) (* q q r x d d)) ?x2895 ?x3087 ?x1112 ?x1127 ?x3135 ?x673 ?x3082 (* 2 (* d 2 ?x179 r q q)) ?x3736 ?x3740 ?x3136 ?x3744 ?x3748 ?x3095 ?x3752 ?x3131 ?x3771 ?x3773 ?x3775 ?x3777 ?x3779 ?x3780 ?x3792 ?x3794 ?x3795 ?x3797 ?x3799 ?x3801)))
 (let ((?x3810 (* 8 ?x3701)))
 (let ((?x3809 (* 6 ?x3699)))
 (let ((?x3811 (* 8 ?x3454)))
 (let ((?x3812 (* 16 ?x769)))
 (let ((?x3813 (* 16 ?x765)))
 (let ((?x3814 (* (- 8) ?x552)))
 (let ((?x1248 (+ ?x430 ?x432 ?x3814 (* 2 (* ?x179 r r r q q)) (* 2 (* ?x144 r r r q q)) ?x3813 ?x3812 ?x960 ?x1412 ?x982 (* 4 ?x990) ?x1161 ?x1384 ?x1433 ?x1634 (* 2 (* q r r r q q)) ?x1836 ?x2281 ?x2290 ?x2595 (* (- 8) ?x2722) ?x3023 ?x3811 ?x3809 ?x3810)))
 (let (($x4237 (or (not (= (* ?x1248 ?x2912 ?x2646) 0)) (not (= (* ?x3401 ?x3426 ?x2614) 0)) (not (= (* ?x3643 ?x186 ?x3554) 0)) (not (= ?x4371 0)))))
 (let (($x2023 (= ?x2646 0)))
 (let (($x4275 (and $x2023 $x4237)))
 (let ((?x1265 (* 4 (* d00 r00))))
 (let ((?x199 (* 4 (* ?x3487 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x268 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x1523 (+ 16 ?x427 ?x268 ?x30 ?x3820 ?x182 ?x199 ?x214 ?x230 (* ?x3487 ?x3487 ?x3476) (* (- 2) (* ?x3487 ?x3476)) ?x280 (* (- 4) (* ?x3487 (+ 2 ?x144 ?x179 q d))) ?x1265)))
 (let ((?x245 (+ 2 ?x144 ?x179 q d)))
 (let ((?x2883 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x245 ?x245 r r r)) (* (- 1) (* ?x245 ?x245 ?x245 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x245 r))))
 (let ((?x1499 (+ (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 r r r) (* ?x3487 ?x3487 ?x3487 ?x245 r r r) (* ?x3487 ?x3476 ?x3476 ?x245 r r r))))
 (let (($x2074 (not (= (* ?x1499 ?x2883 ?x1523) 0))))
 (let ((?x1508 (+ (- 16) ?x427 ?x268 ?x30 ?x3345 ?x182 ?x199 ?x214 ?x230 (* ?x3824 ?x3487 ?x3487) (* (- 2) (* ?x3824 ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 2) ?x144 ?x179 q ?x3825))) ?x1265)))
 (let ((?x575 (+ (- 2) ?x144 ?x179 q ?x3825)))
 (let ((?x603 (+ (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x575 ?x575 r r r)) (* (- 1) (* ?x575 ?x575 ?x575 r)) (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x575 r))))
 (let ((?x593 (+ (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x575 r r r) (* ?x3824 ?x3824 ?x3487 ?x575 r r r))))
 (let (($x1490 (not (= (* ?x593 ?x603 ?x1508) 0))))
 (let ((?x1914 (+ (- 32) ?x427 ?x268 ?x30 (* (- 16) d) ?x182 ?x199 ?x214 ?x230 (* ?x3888 ?x3487 ?x3487) (* (- 2) (* ?x3888 ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 4) ?x144 ?x179 q ?x3889))) ?x1265)))
 (let ((?x2137 (+ (- 4) ?x144 ?x179 q ?x3889)))
 (let ((?x2342 (+ (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x2137 ?x2137 r r r)) (* (- 1) (* ?x2137 ?x2137 ?x2137 r)) (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x2137 r))))
 (let ((?x2079 (+ (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x2137 r r r) (* ?x3888 ?x3888 ?x3487 ?x2137 r r r))))
 (let (($x556 (not (= (* ?x2079 ?x2342 ?x1914) 0))))
 (let ((?x1993 (+ ?x427 ?x268 ?x30 ?x182 ?x199 ?x214 ?x230 (* ?x3487 ?x3487 q) (* (- 2) (* ?x3487 q)) ?x280 (* (- 4) (* ?x3487 (+ ?x144 ?x179 q))) ?x1265)))
 (let ((?x212 (* (- 1) (* (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) r))))
 (let ((?x3488 (+ ?x144 ?x179 q)))
 (let ((?x1223 (+ (* (- 1) (* ?x3487 ?x3487 ?x3488 ?x3488 r r r q q q)) ?x212 (* ?x3487 ?x3487 ?x3487 ?x3488 r q q))))
 (let ((?x2761 (+ (* ?x3487 ?x3487 r r r q q q) (* ?x3487 ?x3487 ?x3487 ?x3488 r r r) (* ?x3487 ?x3488 r r r q q))))
 (let (($x206 (not (= (* ?x2761 ?x1223 ?x1993) 0))))
 (let ((?x511 (+ ?x211 ?x182 ?x2534 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1265)))
 (let (($x578 (= ?x511 0)))
 (let (($x334 (and $x578 (or $x206 $x556 $x1490 $x2074))))
 (rewrite (= $x334 $x4275))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1514 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1265 (* 4 (* d00 r00))))
 (let ((?x3825 (* (- 1) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x575 (+ (- 2) ?x144 ?x179 q ?x3825)))
 (let ((?x3487 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x199 (* 4 (* ?x3487 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x3345 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x268 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x1508 (+ (- 16) ?x427 ?x268 ?x30 ?x3345 ?x182 ?x199 ?x214 ?x230 (* (+ (- 4) q) ?x3487 ?x3487) (* (- 2) (* (+ (- 4) q) ?x3487)) ?x280 (* (- 4) (* ?x3487 ?x575)) ?x1265)))
 (let ((?x3824 (+ (- 4) q)))
 (let ((?x603 (+ (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x575 ?x575 r r r)) (* (- 1) (* ?x575 ?x575 ?x575 r)) (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x575 r))))
 (let ((?x593 (+ (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x575 r r r) (* ?x3824 ?x3824 ?x3487 ?x575 r r r))))
 (let (($x1490 (not (= (* ?x593 ?x603 ?x1508) 0))))
 (let ((?x1914 (+ (- 32) ?x427 ?x268 ?x30 (* (- 16) d) ?x182 ?x199 ?x214 ?x230 (* (+ (- 8) q) ?x3487 ?x3487) (* (- 2) (* (+ (- 8) q) ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 4) ?x144 ?x179 q (* (- 2) d)))) ?x1265)))
 (let ((?x3889 (* (- 2) d)))
 (let ((?x2137 (+ (- 4) ?x144 ?x179 q ?x3889)))
 (let ((?x3888 (+ (- 8) q)))
 (let ((?x2342 (+ (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x2137 ?x2137 r r r)) (* (- 1) (* ?x2137 ?x2137 ?x2137 r)) (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x2137 r))))
 (let ((?x2079 (+ (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x2137 r r r) (* ?x3888 ?x3888 ?x3487 ?x2137 r r r))))
 (let (($x556 (not (= (* ?x2079 ?x2342 ?x1914) 0))))
 (let ((?x3820 (* 8 d)))
 (let ((?x1523 (+ 16 ?x427 ?x268 ?x30 ?x3820 ?x182 ?x199 ?x214 ?x230 (* ?x3487 ?x3487 (+ 4 q)) (* (- 2) (* ?x3487 (+ 4 q))) ?x280 (* (- 4) (* ?x3487 (+ 2 ?x144 ?x179 q d))) ?x1265)))
 (let ((?x245 (+ 2 ?x144 ?x179 q d)))
 (let ((?x3476 (+ 4 q)))
 (let ((?x2883 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x245 ?x245 r r r)) (* (- 1) (* ?x245 ?x245 ?x245 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x245 r))))
 (let ((?x1499 (+ (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 r r r) (* ?x3487 ?x3487 ?x3487 ?x245 r r r) (* ?x3487 ?x3476 ?x3476 ?x245 r r r))))
 (let (($x2074 (not (= (* ?x1499 ?x2883 ?x1523) 0))))
 (let ((?x1993 (+ ?x427 ?x268 ?x30 ?x182 ?x199 ?x214 ?x230 (* ?x3487 ?x3487 q) (* (- 2) (* ?x3487 q)) ?x280 (* (- 4) (* ?x3487 (+ ?x144 ?x179 q))) ?x1265)))
 (let ((?x212 (* (- 1) (* (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) r))))
 (let ((?x3488 (+ ?x144 ?x179 q)))
 (let ((?x1223 (+ (* (- 1) (* ?x3487 ?x3487 ?x3488 ?x3488 r r r q q q)) ?x212 (* ?x3487 ?x3487 ?x3487 ?x3488 r q q))))
 (let ((?x2761 (+ (* ?x3487 ?x3487 r r r q q q) (* ?x3487 ?x3487 ?x3487 ?x3488 r r r) (* ?x3487 ?x3488 r r r q q))))
 (let (($x206 (not (= (* ?x2761 ?x1223 ?x1993) 0))))
 (let ((?x2534 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x511 (+ ?x211 ?x182 ?x2534 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1265)))
 (let (($x578 (= ?x511 0)))
 (and $x578 (or $x206 $x2074 $x556 $x1490))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1694 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1265 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x245 (+ 2 ?x144 ?x179 q d)))
 (let ((?x3487 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x199 (* 4 (* ?x3487 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x3820 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x268 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x1523 (+ 16 ?x427 ?x268 ?x30 ?x3820 ?x182 ?x199 ?x214 ?x230 (* ?x3487 ?x3487 (+ 4 q)) (* (- 2) (* ?x3487 (+ 4 q))) ?x280 (* (- 4) (* ?x3487 ?x245)) ?x1265)))
 (let ((?x3476 (+ 4 q)))
 (let ((?x2883 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x245 ?x245 r r r)) (* (- 1) (* ?x245 ?x245 ?x245 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x245 r))))
 (let ((?x1499 (+ (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 r r r) (* ?x3487 ?x3487 ?x3487 ?x245 r r r) (* ?x3487 ?x3476 ?x3476 ?x245 r r r))))
 (let (($x2074 (not (= (* ?x1499 ?x2883 ?x1523) 0))))
 (let ((?x3345 (* (- 8) d)))
 (let ((?x1508 (+ (- 16) ?x427 ?x268 ?x30 ?x3345 ?x182 ?x199 ?x214 ?x230 (* (+ (- 4) q) ?x3487 ?x3487) (* (- 2) (* (+ (- 4) q) ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 2) ?x144 ?x179 q (* (- 1) d)))) ?x1265)))
 (let ((?x3825 (* (- 1) d)))
 (let ((?x575 (+ (- 2) ?x144 ?x179 q ?x3825)))
 (let ((?x3824 (+ (- 4) q)))
 (let ((?x603 (+ (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x575 ?x575 r r r)) (* (- 1) (* ?x575 ?x575 ?x575 r)) (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x575 r))))
 (let ((?x593 (+ (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x575 r r r) (* ?x3824 ?x3824 ?x3487 ?x575 r r r))))
 (let (($x1490 (not (= (* ?x593 ?x603 ?x1508) 0))))
 (let ((?x1914 (+ (- 32) ?x427 ?x268 ?x30 (* (- 16) d) ?x182 ?x199 ?x214 ?x230 (* (+ (- 8) q) ?x3487 ?x3487) (* (- 2) (* (+ (- 8) q) ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 4) ?x144 ?x179 q (* (- 2) d)))) ?x1265)))
 (let ((?x3889 (* (- 2) d)))
 (let ((?x2137 (+ (- 4) ?x144 ?x179 q ?x3889)))
 (let ((?x3888 (+ (- 8) q)))
 (let ((?x2342 (+ (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x2137 ?x2137 r r r)) (* (- 1) (* ?x2137 ?x2137 ?x2137 r)) (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x2137 r))))
 (let ((?x2079 (+ (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x2137 r r r) (* ?x3888 ?x3888 ?x3487 ?x2137 r r r))))
 (let (($x556 (not (= (* ?x2079 ?x2342 ?x1914) 0))))
 (let ((?x1993 (+ ?x427 ?x268 ?x30 ?x182 ?x199 ?x214 ?x230 (* ?x3487 ?x3487 q) (* (- 2) (* ?x3487 q)) ?x280 (* (- 4) (* ?x3487 (+ ?x144 ?x179 q))) ?x1265)))
 (let ((?x212 (* (- 1) (* (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) r))))
 (let ((?x3488 (+ ?x144 ?x179 q)))
 (let ((?x1223 (+ (* (- 1) (* ?x3487 ?x3487 ?x3488 ?x3488 r r r q q q)) ?x212 (* ?x3487 ?x3487 ?x3487 ?x3488 r q q))))
 (let ((?x2761 (+ (* ?x3487 ?x3487 r r r q q q) (* ?x3487 ?x3487 ?x3487 ?x3488 r r r) (* ?x3487 ?x3488 r r r q q))))
 (let (($x206 (not (= (* ?x2761 ?x1223 ?x1993) 0))))
 (let ((?x2534 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x511 (+ ?x211 ?x182 ?x2534 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1265)))
 (let (($x578 (= ?x511 0)))
 (let (($x334 (and $x578 (or $x206 $x556 $x1490 $x2074))))
 (let (($x1513 (and $x578 (or $x206 $x2074 $x556 $x1490))))
 (rewrite (= $x1513 $x334))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x175 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x146 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x169 (+ (* ?x62 ?x62 ?x152 ?x152 ?x152 r r r) (* ?x62 ?x62 ?x62 ?x146 r r r) (* ?x62 ?x152 ?x152 ?x146 r r r))))
 (let ((?x163 (- (* (- 1) ?x62 ?x62 ?x152 ?x152 ?x152 ?x146 ?x146 r r r) (* ?x146 ?x146 ?x146 r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x150 (- (+ (- (* 8 ?x146) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x157 (+ (- (+ (- ?x150 ?x41) (* ?x62 ?x62 ?x152)) (* 2 ?x62 ?x152)) ?x49)))
 (let ((?x170 (* (+ (- ?x157 (* 4 ?x62 ?x146)) ?x53) (+ ?x163 (* ?x62 ?x62 ?x62 ?x152 ?x152 ?x146 r)) ?x169)))
 (let ((?x117 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x140 (+ (* ?x62 ?x62 ?x123 ?x123 ?x123 r r r) (* ?x62 ?x62 ?x62 ?x117 r r r) (* ?x62 ?x123 ?x123 ?x117 r r r))))
 (let ((?x134 (- (* (- 1) ?x62 ?x62 ?x123 ?x123 ?x123 ?x117 ?x117 r r r) (* ?x117 ?x117 ?x117 r))))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let ((?x141 (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) (+ ?x134 (* ?x62 ?x62 ?x62 ?x123 ?x123 ?x117 r)) ?x140)))
 (let ((?x112 (+ (* ?x62 ?x62 q q q r r r) (* ?x62 ?x62 ?x62 (+ (- (* 2 r) x) q) r r r) (* ?x62 q q (+ (- (* 2 r) x) q) r r r))))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x106 (- (* (- 1) ?x62 ?x62 q q q ?x90 ?x90 r r r) (* ?x90 ?x90 ?x90 r))))
 (let ((?x94 (- (+ (- (* 8 ?x90) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x100 (+ (- (+ (- ?x94 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x113 (* (+ (- ?x100 (* 4 ?x62 ?x90)) ?x53) (+ ?x106 (* ?x62 ?x62 ?x62 q q ?x90 r)) ?x112)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x86 (+ (* ?x62 ?x62 ?x67 ?x67 ?x67 r r r) (* ?x62 ?x62 ?x62 ?x59 r r r) (* ?x62 ?x67 ?x67 ?x59 r r r))))
 (let ((?x80 (- (* (- 1) ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 r r r) (* ?x59 ?x59 ?x59 r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x87 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (+ ?x80 (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 r)) ?x86)))
 (let (($x173 (or (not (= ?x87 0)) (not (= ?x113 0)) (not (= ?x141 0)) (not (= ?x170 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x173))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1693 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x1265 (* 4 (* d00 r00))))
 (let ((?x2298 (* (- 1) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1189 (+ (- 2) ?x57 ?x179 q ?x2298)))
 (let ((?x285 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1174 (* 4 (* ?x285 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x472 (* (- 8) d)))
 (let ((?x336 (* 8 q)))
 (let ((?x268 (* (- 8) x)))
 (let ((?x253 (* 16 r)))
 (let ((?x1501 (+ (- 16) ?x253 ?x268 ?x336 ?x472 ?x182 ?x1174 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 ?x1189)) ?x1265)))
 (let ((?x342 (+ (- 4) q)))
 (let ((?x1495 (+ (* (- 1) (* ?x342 ?x342 ?x342 ?x285 ?x285 ?x1189 ?x1189 r r r)) (* (- 1) (* ?x1189 ?x1189 ?x1189 r)) (* ?x342 ?x342 ?x285 ?x285 ?x285 ?x1189 r))))
 (let ((?x2337 (+ (* ?x342 ?x342 ?x342 ?x285 ?x285 r r r) (* ?x285 ?x285 ?x285 ?x1189 r r r) (* ?x342 ?x342 ?x285 ?x1189 r r r))))
 (let ((?x1985 (+ (- 32) ?x253 ?x268 ?x336 (* (- 16) d) ?x182 ?x1174 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 4) ?x57 ?x179 q (* (- 2) d)))) ?x1265)))
 (let ((?x2652 (* (- 2) d)))
 (let ((?x1759 (+ (- 4) ?x57 ?x179 q ?x2652)))
 (let ((?x1526 (+ (- 8) q)))
 (let ((?x3073 (+ (* (- 1) (* ?x1526 ?x1526 ?x1526 ?x285 ?x285 ?x1759 ?x1759 r r r)) (* (- 1) (* ?x1759 ?x1759 ?x1759 r)) (* ?x1526 ?x1526 ?x285 ?x285 ?x285 ?x1759 r))))
 (let ((?x3264 (+ (* ?x1526 ?x1526 ?x1526 ?x285 ?x285 r r r) (* ?x285 ?x285 ?x285 ?x1759 r r r) (* ?x1526 ?x1526 ?x285 ?x1759 r r r))))
 (let ((?x211 (* 8 d)))
 (let ((?x1373 (+ 16 ?x253 ?x268 ?x336 ?x211 ?x182 ?x1174 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 (+ 2 ?x57 ?x179 q d))) ?x1265)))
 (let ((?x325 (+ 2 ?x57 ?x179 q d)))
 (let ((?x369 (+ 4 q)))
 (let ((?x1405 (+ (* (- 1) (* ?x285 ?x285 ?x369 ?x369 ?x369 ?x325 ?x325 r r r)) (* (- 1) (* ?x325 ?x325 ?x325 r)) (* ?x285 ?x285 ?x285 ?x369 ?x369 ?x325 r))))
 (let ((?x1426 (+ (* ?x285 ?x285 ?x369 ?x369 ?x369 r r r) (* ?x285 ?x285 ?x285 ?x325 r r r) (* ?x285 ?x369 ?x369 ?x325 r r r))))
 (let ((?x180 (+ ?x253 ?x268 ?x336 ?x182 ?x1174 ?x214 ?x230 (* ?x285 ?x285 q) (* (- 2) (* ?x285 q)) ?x280 (* (- 4) (* ?x285 (+ ?x57 ?x179 q))) ?x1265)))
 (let ((?x2684 (* (- 1) (* (+ ?x57 ?x179 q) (+ ?x57 ?x179 q) (+ ?x57 ?x179 q) r))))
 (let ((?x1420 (+ ?x57 ?x179 q)))
 (let ((?x2996 (+ (* (- 1) (* ?x285 ?x285 ?x1420 ?x1420 r r r q q q)) ?x2684 (* ?x285 ?x285 ?x285 ?x1420 r q q))))
 (let ((?x384 (+ (* ?x285 ?x285 r r r q q q) (* ?x285 ?x285 ?x285 ?x1420 r r r) (* ?x285 ?x1420 r r r q q))))
 (let (($x3013 (or (not (= (* ?x384 ?x2996 ?x180) 0)) (not (= (* ?x1426 ?x1405 ?x1373) 0)) (not (= (* ?x3264 ?x3073 ?x1985) 0)) (not (= (* ?x2337 ?x1495 ?x1501) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1271 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1265)))
 (and (= ?x1271 0) $x3013)))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x343 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x1265 (* 4 (* d00 r00))))
 (let ((?x2298 (* (- 1) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1189 (+ (- 2) ?x57 ?x179 q ?x2298)))
 (let ((?x285 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1174 (* 4 (* ?x285 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x472 (* (- 8) d)))
 (let ((?x336 (* 8 q)))
 (let ((?x268 (* (- 8) x)))
 (let ((?x253 (* 16 r)))
 (let ((?x1501 (+ (- 16) ?x253 ?x268 ?x336 ?x472 ?x182 ?x1174 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 ?x1189)) ?x1265)))
 (let ((?x342 (+ (- 4) q)))
 (let ((?x1495 (+ (* (- 1) (* ?x342 ?x342 ?x342 ?x285 ?x285 ?x1189 ?x1189 r r r)) (* (- 1) (* ?x1189 ?x1189 ?x1189 r)) (* ?x342 ?x342 ?x285 ?x285 ?x285 ?x1189 r))))
 (let ((?x2337 (+ (* ?x342 ?x342 ?x342 ?x285 ?x285 r r r) (* ?x285 ?x285 ?x285 ?x1189 r r r) (* ?x342 ?x342 ?x285 ?x1189 r r r))))
 (let ((?x1985 (+ (- 32) ?x253 ?x268 ?x336 (* (- 16) d) ?x182 ?x1174 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 4) ?x57 ?x179 q (* (- 2) d)))) ?x1265)))
 (let ((?x2652 (* (- 2) d)))
 (let ((?x1759 (+ (- 4) ?x57 ?x179 q ?x2652)))
 (let ((?x1526 (+ (- 8) q)))
 (let ((?x3073 (+ (* (- 1) (* ?x1526 ?x1526 ?x1526 ?x285 ?x285 ?x1759 ?x1759 r r r)) (* (- 1) (* ?x1759 ?x1759 ?x1759 r)) (* ?x1526 ?x1526 ?x285 ?x285 ?x285 ?x1759 r))))
 (let ((?x3264 (+ (* ?x1526 ?x1526 ?x1526 ?x285 ?x285 r r r) (* ?x285 ?x285 ?x285 ?x1759 r r r) (* ?x1526 ?x1526 ?x285 ?x1759 r r r))))
 (let ((?x211 (* 8 d)))
 (let ((?x1373 (+ 16 ?x253 ?x268 ?x336 ?x211 ?x182 ?x1174 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 (+ 2 ?x57 ?x179 q d))) ?x1265)))
 (let ((?x325 (+ 2 ?x57 ?x179 q d)))
 (let ((?x369 (+ 4 q)))
 (let ((?x1405 (+ (* (- 1) (* ?x285 ?x285 ?x369 ?x369 ?x369 ?x325 ?x325 r r r)) (* (- 1) (* ?x325 ?x325 ?x325 r)) (* ?x285 ?x285 ?x285 ?x369 ?x369 ?x325 r))))
 (let ((?x1426 (+ (* ?x285 ?x285 ?x369 ?x369 ?x369 r r r) (* ?x285 ?x285 ?x285 ?x325 r r r) (* ?x285 ?x369 ?x369 ?x325 r r r))))
 (let ((?x180 (+ ?x253 ?x268 ?x336 ?x182 ?x1174 ?x214 ?x230 (* ?x285 ?x285 q) (* (- 2) (* ?x285 q)) ?x280 (* (- 4) (* ?x285 (+ ?x57 ?x179 q))) ?x1265)))
 (let ((?x2684 (* (- 1) (* (+ ?x57 ?x179 q) (+ ?x57 ?x179 q) (+ ?x57 ?x179 q) r))))
 (let ((?x1420 (+ ?x57 ?x179 q)))
 (let ((?x2996 (+ (* (- 1) (* ?x285 ?x285 ?x1420 ?x1420 r r r q q q)) ?x2684 (* ?x285 ?x285 ?x285 ?x1420 r q q))))
 (let ((?x384 (+ (* ?x285 ?x285 r r r q q q) (* ?x285 ?x285 ?x285 ?x1420 r r r) (* ?x285 ?x1420 r r r q q))))
 (let (($x3013 (or (not (= (* ?x384 ?x2996 ?x180) 0)) (not (= (* ?x1426 ?x1405 ?x1373) 0)) (not (= (* ?x3264 ?x3073 ?x1985) 0)) (not (= (* ?x2337 ?x1495 ?x1501) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1271 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1265)))
 (let (($x1765 (and (= ?x1271 0) $x3013)))
 (let ((?x146 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x169 (+ (* ?x62 ?x62 ?x152 ?x152 ?x152 r r r) (* ?x62 ?x62 ?x62 ?x146 r r r) (* ?x62 ?x152 ?x152 ?x146 r r r))))
 (let ((?x163 (- (* (- 1) ?x62 ?x62 ?x152 ?x152 ?x152 ?x146 ?x146 r r r) (* ?x146 ?x146 ?x146 r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x150 (- (+ (- (* 8 ?x146) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x157 (+ (- (+ (- ?x150 ?x41) (* ?x62 ?x62 ?x152)) (* 2 ?x62 ?x152)) ?x49)))
 (let ((?x170 (* (+ (- ?x157 (* 4 ?x62 ?x146)) ?x53) (+ ?x163 (* ?x62 ?x62 ?x62 ?x152 ?x152 ?x146 r)) ?x169)))
 (let ((?x117 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x140 (+ (* ?x62 ?x62 ?x123 ?x123 ?x123 r r r) (* ?x62 ?x62 ?x62 ?x117 r r r) (* ?x62 ?x123 ?x123 ?x117 r r r))))
 (let ((?x134 (- (* (- 1) ?x62 ?x62 ?x123 ?x123 ?x123 ?x117 ?x117 r r r) (* ?x117 ?x117 ?x117 r))))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let ((?x141 (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) (+ ?x134 (* ?x62 ?x62 ?x62 ?x123 ?x123 ?x117 r)) ?x140)))
 (let ((?x112 (+ (* ?x62 ?x62 q q q r r r) (* ?x62 ?x62 ?x62 (+ (- ?x57 x) q) r r r) (* ?x62 q q (+ (- ?x57 x) q) r r r))))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x106 (- (* (- 1) ?x62 ?x62 q q q ?x90 ?x90 r r r) (* ?x90 ?x90 ?x90 r))))
 (let ((?x94 (- (+ (- (* 8 ?x90) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x100 (+ (- (+ (- ?x94 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x113 (* (+ (- ?x100 (* 4 ?x62 ?x90)) ?x53) (+ ?x106 (* ?x62 ?x62 ?x62 q q ?x90 r)) ?x112)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x86 (+ (* ?x62 ?x62 ?x67 ?x67 ?x67 r r r) (* ?x62 ?x62 ?x62 ?x59 r r r) (* ?x62 ?x67 ?x67 ?x59 r r r))))
 (let ((?x80 (- (* (- 1) ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 r r r) (* ?x59 ?x59 ?x59 r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x87 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (+ ?x80 (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 r)) ?x86)))
 (let (($x173 (or (not (= ?x87 0)) (not (= ?x113 0)) (not (= ?x141 0)) (not (= ?x170 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x174 (and (= ?x54 0) $x173)))
 (rewrite (= $x174 $x1765)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x2393 (trans (quant-intro (proof-bind ?x343) (= $x175 $x1693)) (elim-unused (= $x1693 $x1514)) (= $x175 $x1514))))
 (let ((@x27 (asserted $x175)))
 (let ((@x884 (mp (mp @x27 @x2393 $x1514) (quant-intro (proof-bind ?x1694) (= $x1514 $x1249)) $x1249)))
 (let ((@x4083 (mp (mp @x884 (rewrite (= $x1249 $x1249)) $x1249) (quant-intro (proof-bind ?x4251) (= $x1249 $x4253)) $x4253)))
 (let ((@x240 (mp~ (mp @x4083 (quant-intro (proof-bind ?x3447) (= $x4253 $x308)) $x308) (sk (~ $x308 $x1007)) $x1007)))
 (let ((@x1545 (mp @x240 (rewrite (= $x1007 $x2703)) $x2703)))
 (let ((@x606 (and-elim @x1545 $x2035)))
 (let ((@x2972 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2035) $x3144)) @x606 $x3144)))
 (let (($x415 (<= ?x898 0)))
 (let ((@x2749 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2035) $x415)) @x606 $x415)))
 (let (($x1005 (not (<= ?x1323 0))))
 (let (($x2164 (<= ?x1821 0)))
 (let (($x4045 (>= ?x1821 0)))
 (let ((@x2740 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1511 (not $x2164) (not $x4045))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x4045)) @x2749 @x2972 false) $x4045) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2164)) @x2749 @x2972 false) $x2164) $x1511)))
 (let (($x2692 (>= ?x2658 0)))
 (let (($x2165 (<= ?x2658 0)))
 (let ((@x2695 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2936 (not $x2165) (not $x2692))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2165)) @x2749 @x2972 false) $x2165) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2692)) @x2749 @x2972 false) $x2692) $x2936)))
 (let (($x362 (>= ?x681 0)))
 (let (($x1370 (<= ?x681 0)))
 (let ((@x764 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2932 (not $x1370) (not $x362))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1370)) @x2749 @x2972 false) $x1370) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x362)) @x2749 @x2972 false) $x362) $x2932)))
 (let ((@x1778 (unit-resolution (unit-resolution (and-elim @x1545 $x1318) @x764 @x2695 (or $x376 $x4247)) @x2740 $x4247)))
 (let (($x2307 (>= ?x1323 0)))
 (let ((@x1083 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4245 $x1005 (not $x2307))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2307)) @x2749 @x2972 false) $x2307) @x1778 $x1005)))
 ((_ th-lemma arith farkas 1 1 1) @x1083 @x2749 @x2972 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        102
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1728
 :arith-nonlinear-bounds    64
 :arith-num-rows            17
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 164
 :arith-tableau-max-rows    17
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                4.36
 :memory                    3.58
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                2116835
 :num-checks                1
 :propagations              36
 :rlimit-count              18662
 :time                      0.02
 :total-time                0.03)
