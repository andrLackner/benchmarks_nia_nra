unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(declare-fun s!1 () Int)
(proof
(let ((?x1577 (* x!0 x!0 x!0)))
 (let ((?x1422 (* 6 r!2)))
 (let ((?x1597 (+ 3 s!1 ?x1422)))
 (let ((?x1003 (* (- 1) s!1)))
 (let ((?x2309 (+ x!0 ?x1003)))
 (let ((?x1912 (+ 1 r!2)))
 (let ((?x353 (* s!1 s!1 s!1)))
 (let ((?x1578 (* (- 1) ?x353)))
 (let ((?x2639 (+ ?x1578 (* (- 1) (* ?x1912 ?x2309 ?x2309 ?x2309 ?x1597 ?x1597 ?x1597)) (* (- 3) (* x!0 x!0 s!1)) (* 3 (* x!0 s!1 s!1 r!2)) (* (- 1) (* s!1 s!1 s!1 r!2)) (* 3 (* x!0 s!1 s!1)) ?x1577 (* (- 3) (* x!0 x!0 s!1 r!2)) (* x!0 x!0 x!0 r!2))))
 (let (($x2534 (<= ?x2639 0)))
 (let ((?x1715 (* 3 r!2)))
 (let ((?x1761 (* (- 3) s!1)))
 (let ((?x2134 (* 6 x!0)))
 (let ((?x458 (* r00 r00 r00)))
 (let ((?x459 (* 12 ?x458)))
 (let ((?x415 (* s00 r00)))
 (let ((?x493 (* (- 6) ?x415)))
 (let ((?x490 (* (- 6) x00)))
 (let ((?x489 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x785 (+ ?x44 ?x489 ?x490 ?x493 ?x459 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x2134 ?x1761 ?x1715 (* 2 (* s!1 r!2)))))
 (let (($x1651 (<= ?x785 0)))
 (let (($x1657 (= ?x785 0)))
 (let ((?x1131 (* 36 (* r00 r00 s!1 s!1))))
 (let ((?x1634 (* (- 216) (* s00 r00 x!0))))
 (let ((?x2048 (* x!0 x!0)))
 (let ((?x1666 (* 108 ?x2048)))
 (let ((?x1057 (* (- 864) (* r!2 r!2 r!2))))
 (let ((?x1781 (* (- 12) (* s00 s!1 s!1))))
 (let ((?x1633 (* 432 (* r00 r00 r00 x!0))))
 (let ((?x1514 (* s00 x!0)))
 (let ((?x1780 (* 108 ?x1514)))
 (let ((?x1765 (* (- 162) r!2)))
 (let ((?x2146 (* 297 s!1)))
 (let ((?x1489 (* s!1 s!1)))
 (let ((?x1686 (* 195 ?x1489)))
 (let ((?x1335 (* x00 x00)))
 (let ((?x1336 (* 108 ?x1335)))
 (let ((?x1173 (* s00 s00 s00)))
 (let ((?x1174 (* 16 ?x1173)))
 (let ((?x1045 (* s00 r00 r00 r00)))
 (let ((?x1046 (* 216 ?x1045)))
 (let ((?x906 (* (- 324) x!0)))
 (let ((?x871 (* r00 r00 r00 x00)))
 (let ((?x901 (* (- 432) ?x871)))
 (let ((?x817 (* r!2 r!2)))
 (let ((?x1138 (* (- 756) ?x817)))
 (let ((?x794 (* s00 x00)))
 (let ((?x1130 (* (- 108) ?x794)))
 (let ((?x720 (* s00 s00 r00 r00)))
 (let ((?x764 (* (- 36) ?x720)))
 (let ((?x691 (* (- 216) (* x00 x!0))))
 (let ((?x695 (* r00 x!0)))
 (let ((?x1405 (* (- 108) ?x695)))
 (let ((?x657 (* s00 s00 r00)))
 (let ((?x1028 (* (- 108) ?x657)))
 (let ((?x636 (* s00 r00 r00)))
 (let ((?x1263 (* (- 36) ?x636)))
 (let ((?x580 (* s00 s00)))
 (let ((?x1210 (* 51 ?x580)))
 (let ((?x511 (* r00 x00)))
 (let ((?x507 (* 108 ?x511)))
 (let ((?x502 (* s00 r00 x00)))
 (let ((?x503 (* 216 ?x502)))
 (let ((?x1457 (* (- 648) ?x458)))
 (let ((?x755 (* 270 ?x415)))
 (let ((?x966 (* (- 4) ?x353)))
 (let ((?x290 (* r00 r00)))
 (let ((?x838 (* 432 ?x290)))
 (let ((?x2004 (* 324 x00)))
 (let ((?x951 (* 162 r00)))
 (let ((?x2417 (* (- 297) s00)))
 (let ((?x1570 (+ ?x2417 ?x951 ?x2004 (* 648 (* s00 r00 r!2)) ?x838 ?x966 ?x755 ?x1457 (* 1512 (* r00 r00 r!2)) ?x503 ?x507 (* (- 246) (* s00 s!1)) ?x1210 ?x1263 ?x1028 ?x1405 ?x691 (* (- 828) (* s00 r!2)) ?x764 (* (- 648) (* x!0 r!2)) ?x1130 ?x1138 ?x901 (* (- 432) (* s!1 r!2 r!2)) (* (- 432) (* s00 r!2 r!2)) ?x906 ?x1046 ?x1174 (* 648 (* x00 r!2)) (* (- 324) (* x!0 s!1)) ?x1336 (* (- 72) (* s!1 s!1 r!2)) ?x1686 ?x2146 ?x1765 ?x1780 ?x1633 (* 324 (* r00 r!2)) (* (- 1296) (* r00 r00 r00 r!2)) ?x1781 ?x1057 (* 252 (* r00 r00 s!1)) (* 324 (* s00 r00 s!1)) ?x1666 (* 432 (* r00 r00 s!1 r!2)) (* 162 (* r00 s!1)) (* (- 144) (* s00 s!1 r!2)) ?x1634 (* 1296 (* r00 r00 r!2 r!2)) (* 324 (* x00 s!1)) ?x1131 (* (- 648) (* r00 r00 r00 s!1)) (* 396 (* s!1 r!2)))))
 (let ((?x1652 (* ?x2639 ?x1570)))
 (let (($x1066 (= ?x1652 0)))
 (let (($x1653 (not $x1066)))
 (let ((?x1679 (* r00 r00 s!1)))
 (let ((?x1411 (* 36 ?x1679)))
 (let ((?x1316 (* (- 9) s!1)))
 (let ((?x541 (* (- 54) ?x415)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2295 (+ ?x137 ?x966 ?x541 ?x503 ?x507 (* (- 66) (* s00 s!1)) ?x1210 ?x1263 ?x1028 ?x1405 ?x691 ?x764 ?x1130 ?x901 ?x1046 ?x1174 (* (- 108) (* x!0 s!1)) ?x1336 (* 15 ?x1489) ?x1316 ?x1780 ?x1633 ?x1781 ?x1411 (* 108 (* s00 r00 s!1)) ?x1666 (* 54 (* r00 s!1)) ?x1634 (* 108 (* x00 s!1)) ?x1131 (* (- 216) (* r00 r00 r00 s!1)))))
 (let (($x2242 (= ?x2295 0)))
 (let ((?x1586 (+ ?x137 (* (- 24) ?x415) (* 54 ?x511) (* (- 12) (* s00 s!1)) (* 15 ?x580) ?x1263 (* 2 ?x657) (* (- 54) ?x695) (* (- 24) (* s00 r!2)) (* (- 54) (* x!0 r!2)) (* (- 6) ?x794) (* 36 (* r00 r00 x00)) (* 54 (* x00 r!2)) (* (- 6) (* x!0 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* (- 3) ?x1489) ?x1316 (* 6 ?x1514) ?x1411 (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* 2 (* s00 r00 s!1)) (* 24 (* r00 s!1)) (* (- 2) (* s00 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* 6 (* x00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* 24 (* s!1 r!2)) (* (- 36) (* r00 x!0 r!2)))))
 (let (($x1541 (= ?x1586 0)))
 (let ((?x2669 (+ ?x44 (* 6 (* s00 r00 r!2)) (* (- 9) ?x415) (* 18 ?x511) (* (- 2) (* s00 s!1)) (* 4 ?x580) (* (- 6) ?x636) (* (- 18) ?x695) (* (- 9) (* s00 r!2)) (* (- 18) (* x!0 r!2)) (* (- 6) (* r00 s!1 r!2)) (* 18 (* x00 r!2)) (* (- 2) ?x1489) ?x1761 (* 6 ?x1679) (* 9 (* r00 s!1)) (* 9 (* s!1 r!2)))))
 (let (($x2593 (= ?x2669 0)))
 (let ((?x2281 (* (- 3) ?x290)))
 (let ((?x1701 (+ s00 ?x2281 (* 3 ?x817) ?x1003)))
 (let (($x1706 (= ?x1701 0)))
 (let (($x1865 (and $x1706 $x1657 $x2593 $x1541 $x2242 $x1653)))
 (let ((?x1681 (+ ?x1765 ?x2146 ?x906 ?x2417 ?x951 ?x2004 ?x1138 ?x838 (* 396 (* r!2 s!1)) (* 1512 (* r!2 r00 r00)) (* (- 828) (* r!2 s00)) ?x755 ?x1457 ?x503 ?x507 ?x1686 (* (- 648) (* r!2 x!0)) (* 252 (* s!1 r00 r00)) ?x1210 (* 108 (* x!0 s00)) (* (- 108) (* x!0 r00)) (* (- 648) (* s!1 r00 r00 r00)) ?x1263 (* 648 (* r!2 x00)) ?x1028 (* (- 246) (* s!1 s00)) (* 162 (* s!1 r00)) (* 324 (* s!1 x00)) (* 648 (* r!2 s00 r00)) ?x764 (* 324 (* s!1 s00 r00)) ?x966 ?x1130 (* (- 72) (* r!2 s!1 s!1)) (* (- 324) (* s!1 x!0)) ?x1666 ?x901 (* (- 144) (* r!2 s!1 s00)) (* (- 12) (* s!1 s!1 s00)) (* 432 (* r!2 s!1 r00 r00)) ?x1046 (* 432 (* x!0 r00 r00 r00)) (* (- 216) (* x!0 s00 r00)) (* 36 (* s!1 s!1 r00 r00)) ?x1174 (* 324 (* r!2 r00)) (* (- 216) (* x!0 x00)) ?x1336 (* (- 1296) (* r!2 r00 r00 r00)) ?x1057 (* (- 432) (* r!2 r!2 s!1)) (* (- 432) (* r!2 r!2 s00)) (* 1296 (* r!2 r!2 r00 r00)))))
 (let ((?x595 (+ 3 ?x1422 s!1)))
 (let ((?x1158 (+ ?x1003 x!0)))
 (let ((?x809 (+ (* (- 1) (* ?x1912 ?x1158 ?x1158 ?x1158 ?x595 ?x595 ?x595)) ?x1578 ?x1577 (* r!2 x!0 x!0 x!0) (* (- 1) (* r!2 s!1 s!1 s!1)) (* 3 (* s!1 s!1 x!0)) (* 3 (* r!2 s!1 s!1 x!0)) (* (- 3) (* s!1 x!0 x!0)) (* (- 3) (* r!2 s!1 x!0 x!0)))))
 (let ((?x1365 (* (- 108) ?x1335)))
 (let ((?x1364 (* (- 16) ?x1173)))
 (let ((?x1360 (* (- 216) ?x1045)))
 (let ((?x872 (* 432 ?x871)))
 (let ((?x1118 (* 108 ?x794)))
 (let ((?x721 (* 36 ?x720)))
 (let ((?x1001 (* 108 ?x657)))
 (let ((?x989 (* 36 ?x636)))
 (let ((?x1354 (* (- 51) ?x580)))
 (let ((?x2541 (* s!1 r00 r00)))
 (let ((?x1479 (* (- 36) ?x2541)))
 (let ((?x1351 (* (- 108) ?x511)))
 (let ((?x1350 (* (- 216) ?x502)))
 (let ((?x509 (* 54 ?x415)))
 (let ((?x976 (* (- 9) s00)))
 (let ((?x963 (* 9 s!1)))
 (let ((?x411 (+ ?x963 ?x976 ?x509 ?x1350 ?x1351 (* (- 15) ?x1489) ?x1479 ?x1354 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x989 ?x1001 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x721 (* (- 108) (* s!1 s00 r00)) (* 4 ?x353) ?x1118 (* 108 (* s!1 x!0)) (* (- 108) ?x2048) ?x872 (* 12 (* s!1 s!1 s00)) ?x1360 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1364 (* 216 (* x!0 x00)) ?x1365)))
 (let ((?x866 (* r00 r00 x00)))
 (let ((?x879 (* (- 36) ?x866)))
 (let ((?x795 (* 6 ?x794)))
 (let ((?x685 (* (- 2) ?x657)))
 (let ((?x905 (* (- 15) ?x580)))
 (let ((?x540 (* (- 54) ?x511)))
 (let ((?x553 (* 24 ?x415)))
 (let ((?x1095 (+ ?x963 ?x976 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x553 ?x540 (* 3 ?x1489) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x1479 ?x905 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x989 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x685 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x795 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x879 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x637 (* 6 ?x636)))
 (let ((?x593 (* (- 4) ?x580)))
 (let ((?x525 (* (- 18) ?x511)))
 (let ((?x530 (* 9 ?x415)))
 (let ((?x367 (* (- 3) s00)))
 (let ((?x529 (+ (* 3 s!1) ?x367 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x530 ?x525 (* 2 ?x1489) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x2541) ?x593 (* 18 (* x!0 r00)) ?x637 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1291 (+ ?x1715 ?x1761 ?x2134 ?x44 ?x489 ?x490 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x493 ?x459)))
 (let (($x1481 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x817) (* 3 ?x290)) 0) (= ?x1291 0) (= ?x529 0) (= ?x1095 0) (= ?x411 0) (not (= (* ?x809 ?x1681) 0)))))
 (let (($x988 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1916 (* (- 432) (* r r s00))))
 (let ((?x1759 (* (- 432) (* r r s))))
 (let ((?x1705 (* (- 864) (* r r r))))
 (let ((?x1468 (* (- 1296) (* r r00 r00 r00))))
 (let ((?x1335 (* x00 x00)))
 (let ((?x1336 (* 108 ?x1335)))
 (let ((?x1309 (* x x00)))
 (let ((?x1322 (* (- 216) ?x1309)))
 (let ((?x1173 (* s00 s00 s00)))
 (let ((?x1174 (* 16 ?x1173)))
 (let ((?x1143 (* x s00 r00)))
 (let ((?x1156 (* (- 216) ?x1143)))
 (let ((?x1045 (* s00 r00 r00 r00)))
 (let ((?x1046 (* 216 ?x1045)))
 (let ((?x929 (* s s s00)))
 (let ((?x958 (* (- 12) ?x929)))
 (let ((?x918 (* r s s00)))
 (let ((?x1935 (* (- 144) ?x918)))
 (let ((?x871 (* r00 r00 r00 x00)))
 (let ((?x901 (* (- 432) ?x871)))
 (let ((?x843 (* x x)))
 (let ((?x844 (* 108 ?x843)))
 (let ((?x798 (* r s s)))
 (let ((?x1760 (* (- 72) ?x798)))
 (let ((?x794 (* s00 x00)))
 (let ((?x1130 (* (- 108) ?x794)))
 (let ((?x792 (* s s s)))
 (let ((?x812 (* (- 4) ?x792)))
 (let ((?x720 (* s00 s00 r00 r00)))
 (let ((?x764 (* (- 36) ?x720)))
 (let ((?x713 (* s x00)))
 (let ((?x2560 (* 324 ?x713)))
 (let ((?x657 (* s00 s00 r00)))
 (let ((?x1028 (* (- 108) ?x657)))
 (let ((?x636 (* s00 r00 r00)))
 (let ((?x1263 (* (- 36) ?x636)))
 (let ((?x606 (* x r00)))
 (let ((?x1233 (* (- 108) ?x606)))
 (let ((?x580 (* s00 s00)))
 (let ((?x1210 (* 51 ?x580)))
 (let ((?x538 (* r x)))
 (let ((?x2299 (* (- 648) ?x538)))
 (let ((?x511 (* r00 x00)))
 (let ((?x507 (* 108 ?x511)))
 (let ((?x502 (* s00 r00 x00)))
 (let ((?x503 (* 216 ?x502)))
 (let ((?x458 (* r00 r00 r00)))
 (let ((?x1457 (* (- 648) ?x458)))
 (let ((?x415 (* s00 r00)))
 (let ((?x755 (* 270 ?x415)))
 (let ((?x388 (* r s00)))
 (let ((?x2099 (* (- 828) ?x388)))
 (let ((?x290 (* r00 r00)))
 (let ((?x838 (* 432 ?x290)))
 (let ((?x2004 (* 324 x00)))
 (let ((?x951 (* 162 r00)))
 (let ((?x2417 (* (- 297) s00)))
 (let ((?x2289 (* (- 324) x)))
 (let ((?x850 (+ (* (- 162) r) (* 297 s) ?x2289 ?x2417 ?x951 ?x2004 (* (- 756) (* r r)) ?x838 (* 396 (* r s)) (* 1512 (* r r00 r00)) ?x2099 ?x755 ?x1457 ?x503 ?x507 (* 195 (* s s)) ?x2299 (* 252 (* s r00 r00)) ?x1210 (* 108 (* x s00)) ?x1233 (* (- 648) (* s r00 r00 r00)) ?x1263 (* 648 (* r x00)) ?x1028 (* (- 246) (* s s00)) (* 162 (* s r00)) ?x2560 (* 648 (* r s00 r00)) ?x764 (* 324 (* s s00 r00)) ?x812 ?x1130 ?x1760 (* (- 324) (* s x)) ?x844 ?x901 ?x1935 ?x958 (* 432 (* r s r00 r00)) ?x1046 (* 432 (* x r00 r00 r00)) ?x1156 (* 36 (* s s r00 r00)) ?x1174 (* 324 (* r r00)) ?x1322 ?x1336 ?x1468 ?x1705 ?x1759 ?x1916 (* 1296 (* r r r00 r00)))))
 (let ((?x2690 (* (- 3) (* r s x x))))
 (let ((?x2689 (* (- 3) (* s x x))))
 (let ((?x2688 (* 3 (* r s s x))))
 (let ((?x2687 (* 3 (* s s x))))
 (let ((?x2607 (* (- 1) (* r s s s))))
 (let ((?x2597 (* r x x x)))
 (let ((?x2596 (* x x x)))
 (let ((?x2603 (* (- 1) ?x792)))
 (let ((?x211 (* 6 r)))
 (let ((?x1372 (+ 3 ?x211 s)))
 (let ((?x269 (* (- 1) s)))
 (let ((?x1788 (+ ?x269 x)))
 (let ((?x2576 (+ 1 r)))
 (let ((?x1671 (+ (* (- 1) (* ?x2576 ?x1788 ?x1788 ?x1788 ?x1372 ?x1372 ?x1372)) ?x2603 ?x2596 ?x2597 ?x2607 ?x2687 ?x2688 ?x2689 ?x2690)))
 (let ((?x1365 (* (- 108) ?x1335)))
 (let ((?x1364 (* (- 16) ?x1173)))
 (let ((?x1360 (* (- 216) ?x1045)))
 (let ((?x872 (* 432 ?x871)))
 (let ((?x1118 (* 108 ?x794)))
 (let ((?x721 (* 36 ?x720)))
 (let ((?x1001 (* 108 ?x657)))
 (let ((?x989 (* 36 ?x636)))
 (let ((?x1354 (* (- 51) ?x580)))
 (let ((?x554 (* s r00 r00)))
 (let ((?x853 (* (- 36) ?x554)))
 (let ((?x1351 (* (- 108) ?x511)))
 (let ((?x1350 (* (- 216) ?x502)))
 (let ((?x509 (* 54 ?x415)))
 (let ((?x976 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1366 (+ ?x143 ?x976 ?x509 ?x1350 ?x1351 (* (- 15) (* s s)) ?x853 ?x1354 (* (- 108) (* x s00)) (* 108 ?x606) (* 216 (* s r00 r00 r00)) ?x989 ?x1001 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x713) ?x721 (* (- 108) (* s s00 r00)) (* 4 ?x792) ?x1118 (* 108 (* s x)) (* (- 108) ?x843) ?x872 (* 12 ?x929) ?x1360 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1143) (* (- 36) (* s s r00 r00)) ?x1364 (* 216 ?x1309) ?x1365)))
 (let (($x1367 (= ?x1366 0)))
 (let ((?x866 (* r00 r00 x00)))
 (let ((?x879 (* (- 36) ?x866)))
 (let ((?x795 (* 6 ?x794)))
 (let ((?x685 (* (- 2) ?x657)))
 (let ((?x905 (* (- 15) ?x580)))
 (let ((?x534 (* s s)))
 (let ((?x558 (* 3 ?x534)))
 (let ((?x540 (* (- 54) ?x511)))
 (let ((?x553 (* 24 ?x415)))
 (let ((?x1068 (+ ?x143 ?x976 (* (- 24) (* r s)) (* 24 ?x388) ?x553 ?x540 ?x558 (* 54 ?x538) (* 36 (* r x r00)) ?x853 ?x905 (* (- 6) (* x s00)) (* 54 ?x606) ?x989 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x685 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x713) (* (- 2) (* s s00 r00)) ?x795 (* 2 ?x798) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x879 (* 2 ?x918) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1073 (= ?x1068 0)))
 (let ((?x637 (* 6 ?x636)))
 (let ((?x593 (* (- 4) ?x580)))
 (let ((?x535 (* 2 ?x534)))
 (let ((?x525 (* (- 18) ?x511)))
 (let ((?x530 (* 9 ?x415)))
 (let ((?x367 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x734 (+ ?x47 ?x367 (* (- 9) (* r s)) (* 9 ?x388) ?x530 ?x525 ?x535 (* 18 ?x538) (* 6 (* r s r00)) (* (- 6) ?x554) ?x593 (* 18 ?x606) ?x637 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x741 (= ?x734 0)))
 (let ((?x459 (* 12 ?x458)))
 (let ((?x493 (* (- 6) ?x415)))
 (let ((?x490 (* (- 6) x00)))
 (let ((?x489 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x494 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x489 ?x490 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 ?x388) ?x493 ?x459)))
 (let (($x495 (= ?x494 0)))
 (let (($x323 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x290)) 0)))
 (and $x323 $x495 $x741 $x1073 $x1367 (not (= (* ?x1671 ?x850) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1757 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1335 (* x00 x00)))
 (let ((?x1336 (* 108 ?x1335)))
 (let ((?x1894 (* (- 9) s)))
 (let ((?x1323 (* r00 r00 s00)))
 (let ((?x2446 (* (- 36) ?x1323)))
 (let ((?x137 (* 9 s00)))
 (let ((?x580 (* s00 s00)))
 (let ((?x1210 (* 51 ?x580)))
 (let ((?x2628 (* (- 108) (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x1173 (* s00 s00 s00)))
 (let ((?x1174 (* 16 ?x1173)))
 (let ((?x211 (* 6 r)))
 (let ((?x1460 (+ 3 s ?x211)))
 (let ((?x794 (* s00 x00)))
 (let ((?x1130 (* (- 108) ?x794)))
 (let ((?x1125 (* 216 (* r00 r00 r00 s00))))
 (let ((?x2552 (* r00 s00 s00)))
 (let ((?x758 (* (- 108) ?x2552)))
 (let ((?x871 (* r00 r00 r00 x00)))
 (let ((?x901 (* (- 432) ?x871)))
 (let ((?x2310 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x2475 (* r00 s00)))
 (let ((?x910 (* (- 54) ?x2475)))
 (let ((?x511 (* r00 x00)))
 (let ((?x507 (* 108 ?x511)))
 (let ((?x2241 (* 216 (* r00 s00 x00))))
 (let ((?x1119 (+ (- 27) ?x2241 ?x507 ?x910 (* 15 (* ?x1460 ?x1460)) (* (- 216) (* r00 r00 r00 ?x1460)) ?x2310 (* (- 4) (* ?x1460 ?x1460 ?x1460)) (* 108 (* (+ x (* (- 1) s)) (+ x (* (- 1) s)))) ?x901 (* (- 12) (* s00 ?x1460 ?x1460)) (* 108 (* s00 (+ x (* (- 1) s)))) ?x758 ?x1125 (* 108 (* x00 ?x1460)) (* 432 (* r00 r00 r00 (+ x (* (- 1) s)))) (* (- 66) (* s00 ?x1460)) (* 108 (* r00 s00 ?x1460)) ?x1130 (* (- 216) (* r00 s00 (+ x (* (- 1) s)))) (* 36 (* r00 r00 ?x1460 ?x1460)) ?x1174 ?x2628 (* 36 (* r00 r00 ?x1460)) ?x1210 (* (- 108) (* r00 (+ x (* (- 1) s)))) ?x137 ?x2446 ?x1894 (* (- 54) r) (* 54 (* r00 ?x1460)) (* (- 216) (* x00 (+ x (* (- 1) s)))) ?x1336)))
 (let ((?x269 (* (- 1) s)))
 (let ((?x298 (+ x ?x269)))
 (let ((?x2576 (+ 1 r)))
 (let ((?x665 (+ (* ?x2576 ?x298 ?x298 ?x298) (* (- 1) (* ?x2576 ?x298 ?x298 ?x298 ?x1460 ?x1460 ?x1460)))))
 (let ((?x2375 (* r00 s)))
 (let ((?x2497 (* 54 ?x2375)))
 (let ((?x2334 (* r00 r00 s)))
 (let ((?x2335 (* 36 ?x2334)))
 (let ((?x2220 (* 36 (* r00 r00 s s))))
 (let ((?x2023 (* 432 (* r00 r00 r00 x))))
 (let ((?x1958 (* s00 x)))
 (let ((?x1959 (* 108 ?x1958)))
 (let ((?x843 (* x x)))
 (let ((?x844 (* 108 ?x843)))
 (let ((?x792 (* s s s)))
 (let ((?x812 (* (- 4) ?x792)))
 (let ((?x1403 (+ ?x2241 ?x507 ?x910 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x2310 ?x812 ?x844 ?x901 (* (- 12) (* s00 s s)) ?x1959 ?x758 ?x1125 (* 108 (* x00 s)) ?x2023 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1130 (* (- 216) (* r00 s00 x)) ?x2220 ?x1174 (* (- 108) (* x s)) ?x2335 ?x1210 (* (- 108) (* r00 x)) ?x137 ?x2446 ?x1894 ?x2497 (* (- 216) (* x00 x)) ?x1336)))
 (let ((?x143 (* 9 s)))
 (let ((?x976 (* (- 9) s00)))
 (let ((?x905 (* (- 15) ?x580)))
 (let ((?x866 (* r00 r00 x00)))
 (let ((?x879 (* (- 36) ?x866)))
 (let ((?x795 (* 6 ?x794)))
 (let ((?x534 (* s s)))
 (let ((?x558 (* 3 ?x534)))
 (let ((?x540 (* (- 54) ?x511)))
 (let ((?x309 (+ (* (- 24) (* s r)) ?x540 (* 36 (* r00 x r)) (* 24 ?x2475) ?x558 (* 54 (* x r)) (* (- 6) ?x1958) (* 4 (* r00 s s)) (* (- 2) ?x2552) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x795 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2334) ?x879 ?x905 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x976 (* 36 ?x1323) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2375) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x367 (* (- 3) s00)))
 (let ((?x593 (* (- 4) ?x580)))
 (let ((?x535 (* 2 ?x534)))
 (let ((?x525 (* (- 18) ?x511)))
 (let ((?x477 (+ (* (- 9) (* s r)) ?x525 (* 9 ?x2475) ?x535 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2334) ?x593 (* 18 (* r00 x)) ?x367 (* 6 ?x1323) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2375) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1482 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x367 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x2475) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2305 (= (+ s00 ?x269 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2305 (= ?x1482 0) (= ?x477 0) (= ?x309 0) (= ?x1403 0) (not (= (* ?x665 ?x1119) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x857 (lambda ((r Int) (s Int) (x Int) )(let ((?x1916 (* (- 432) (* r r s00))))
 (let ((?x1759 (* (- 432) (* r r s))))
 (let ((?x1705 (* (- 864) (* r r r))))
 (let ((?x1468 (* (- 1296) (* r r00 r00 r00))))
 (let ((?x1335 (* x00 x00)))
 (let ((?x1336 (* 108 ?x1335)))
 (let ((?x1309 (* x x00)))
 (let ((?x1322 (* (- 216) ?x1309)))
 (let ((?x1173 (* s00 s00 s00)))
 (let ((?x1174 (* 16 ?x1173)))
 (let ((?x1143 (* x s00 r00)))
 (let ((?x1156 (* (- 216) ?x1143)))
 (let ((?x1045 (* s00 r00 r00 r00)))
 (let ((?x1046 (* 216 ?x1045)))
 (let ((?x929 (* s s s00)))
 (let ((?x958 (* (- 12) ?x929)))
 (let ((?x918 (* r s s00)))
 (let ((?x1935 (* (- 144) ?x918)))
 (let ((?x871 (* r00 r00 r00 x00)))
 (let ((?x901 (* (- 432) ?x871)))
 (let ((?x843 (* x x)))
 (let ((?x844 (* 108 ?x843)))
 (let ((?x798 (* r s s)))
 (let ((?x1760 (* (- 72) ?x798)))
 (let ((?x794 (* s00 x00)))
 (let ((?x1130 (* (- 108) ?x794)))
 (let ((?x792 (* s s s)))
 (let ((?x812 (* (- 4) ?x792)))
 (let ((?x720 (* s00 s00 r00 r00)))
 (let ((?x764 (* (- 36) ?x720)))
 (let ((?x713 (* s x00)))
 (let ((?x2560 (* 324 ?x713)))
 (let ((?x657 (* s00 s00 r00)))
 (let ((?x1028 (* (- 108) ?x657)))
 (let ((?x636 (* s00 r00 r00)))
 (let ((?x1263 (* (- 36) ?x636)))
 (let ((?x606 (* x r00)))
 (let ((?x1233 (* (- 108) ?x606)))
 (let ((?x580 (* s00 s00)))
 (let ((?x1210 (* 51 ?x580)))
 (let ((?x538 (* r x)))
 (let ((?x2299 (* (- 648) ?x538)))
 (let ((?x511 (* r00 x00)))
 (let ((?x507 (* 108 ?x511)))
 (let ((?x502 (* s00 r00 x00)))
 (let ((?x503 (* 216 ?x502)))
 (let ((?x458 (* r00 r00 r00)))
 (let ((?x1457 (* (- 648) ?x458)))
 (let ((?x415 (* s00 r00)))
 (let ((?x755 (* 270 ?x415)))
 (let ((?x388 (* r s00)))
 (let ((?x2099 (* (- 828) ?x388)))
 (let ((?x290 (* r00 r00)))
 (let ((?x838 (* 432 ?x290)))
 (let ((?x2004 (* 324 x00)))
 (let ((?x951 (* 162 r00)))
 (let ((?x2417 (* (- 297) s00)))
 (let ((?x2289 (* (- 324) x)))
 (let ((?x850 (+ (* (- 162) r) (* 297 s) ?x2289 ?x2417 ?x951 ?x2004 (* (- 756) (* r r)) ?x838 (* 396 (* r s)) (* 1512 (* r r00 r00)) ?x2099 ?x755 ?x1457 ?x503 ?x507 (* 195 (* s s)) ?x2299 (* 252 (* s r00 r00)) ?x1210 (* 108 (* x s00)) ?x1233 (* (- 648) (* s r00 r00 r00)) ?x1263 (* 648 (* r x00)) ?x1028 (* (- 246) (* s s00)) (* 162 (* s r00)) ?x2560 (* 648 (* r s00 r00)) ?x764 (* 324 (* s s00 r00)) ?x812 ?x1130 ?x1760 (* (- 324) (* s x)) ?x844 ?x901 ?x1935 ?x958 (* 432 (* r s r00 r00)) ?x1046 (* 432 (* x r00 r00 r00)) ?x1156 (* 36 (* s s r00 r00)) ?x1174 (* 324 (* r r00)) ?x1322 ?x1336 ?x1468 ?x1705 ?x1759 ?x1916 (* 1296 (* r r r00 r00)))))
 (let ((?x2690 (* (- 3) (* r s x x))))
 (let ((?x2689 (* (- 3) (* s x x))))
 (let ((?x2688 (* 3 (* r s s x))))
 (let ((?x2687 (* 3 (* s s x))))
 (let ((?x2607 (* (- 1) (* r s s s))))
 (let ((?x2597 (* r x x x)))
 (let ((?x2596 (* x x x)))
 (let ((?x2603 (* (- 1) ?x792)))
 (let ((?x211 (* 6 r)))
 (let ((?x1372 (+ 3 ?x211 s)))
 (let ((?x269 (* (- 1) s)))
 (let ((?x1788 (+ ?x269 x)))
 (let ((?x2576 (+ 1 r)))
 (let ((?x1671 (+ (* (- 1) (* ?x2576 ?x1788 ?x1788 ?x1788 ?x1372 ?x1372 ?x1372)) ?x2603 ?x2596 ?x2597 ?x2607 ?x2687 ?x2688 ?x2689 ?x2690)))
 (let ((?x1365 (* (- 108) ?x1335)))
 (let ((?x1364 (* (- 16) ?x1173)))
 (let ((?x1360 (* (- 216) ?x1045)))
 (let ((?x872 (* 432 ?x871)))
 (let ((?x1118 (* 108 ?x794)))
 (let ((?x721 (* 36 ?x720)))
 (let ((?x1001 (* 108 ?x657)))
 (let ((?x989 (* 36 ?x636)))
 (let ((?x1354 (* (- 51) ?x580)))
 (let ((?x554 (* s r00 r00)))
 (let ((?x853 (* (- 36) ?x554)))
 (let ((?x1351 (* (- 108) ?x511)))
 (let ((?x1350 (* (- 216) ?x502)))
 (let ((?x509 (* 54 ?x415)))
 (let ((?x976 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1366 (+ ?x143 ?x976 ?x509 ?x1350 ?x1351 (* (- 15) (* s s)) ?x853 ?x1354 (* (- 108) (* x s00)) (* 108 ?x606) (* 216 (* s r00 r00 r00)) ?x989 ?x1001 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x713) ?x721 (* (- 108) (* s s00 r00)) (* 4 ?x792) ?x1118 (* 108 (* s x)) (* (- 108) ?x843) ?x872 (* 12 ?x929) ?x1360 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1143) (* (- 36) (* s s r00 r00)) ?x1364 (* 216 ?x1309) ?x1365)))
 (let (($x1367 (= ?x1366 0)))
 (let ((?x866 (* r00 r00 x00)))
 (let ((?x879 (* (- 36) ?x866)))
 (let ((?x795 (* 6 ?x794)))
 (let ((?x685 (* (- 2) ?x657)))
 (let ((?x905 (* (- 15) ?x580)))
 (let ((?x534 (* s s)))
 (let ((?x558 (* 3 ?x534)))
 (let ((?x540 (* (- 54) ?x511)))
 (let ((?x553 (* 24 ?x415)))
 (let ((?x1068 (+ ?x143 ?x976 (* (- 24) (* r s)) (* 24 ?x388) ?x553 ?x540 ?x558 (* 54 ?x538) (* 36 (* r x r00)) ?x853 ?x905 (* (- 6) (* x s00)) (* 54 ?x606) ?x989 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x685 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x713) (* (- 2) (* s s00 r00)) ?x795 (* 2 ?x798) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x879 (* 2 ?x918) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1073 (= ?x1068 0)))
 (let ((?x637 (* 6 ?x636)))
 (let ((?x593 (* (- 4) ?x580)))
 (let ((?x535 (* 2 ?x534)))
 (let ((?x525 (* (- 18) ?x511)))
 (let ((?x530 (* 9 ?x415)))
 (let ((?x367 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x734 (+ ?x47 ?x367 (* (- 9) (* r s)) (* 9 ?x388) ?x530 ?x525 ?x535 (* 18 ?x538) (* 6 (* r s r00)) (* (- 6) ?x554) ?x593 (* 18 ?x606) ?x637 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x741 (= ?x734 0)))
 (let ((?x459 (* 12 ?x458)))
 (let ((?x493 (* (- 6) ?x415)))
 (let ((?x490 (* (- 6) x00)))
 (let ((?x489 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x494 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x489 ?x490 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 ?x388) ?x493 ?x459)))
 (let (($x495 (= ?x494 0)))
 (let (($x323 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x290)) 0)))
 (let (($x986 (and $x323 $x495 $x741 $x1073 $x1367 (not (= (* ?x1671 ?x850) 0)))))
 (let ((?x1894 (* (- 9) s)))
 (let ((?x1323 (* r00 r00 s00)))
 (let ((?x2446 (* (- 36) ?x1323)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1125 (* 216 (* r00 r00 r00 s00))))
 (let ((?x2552 (* r00 s00 s00)))
 (let ((?x758 (* (- 108) ?x2552)))
 (let ((?x1137 (* (- 4) (* (+ 3 s ?x211) (+ 3 s ?x211) (+ 3 s ?x211)))))
 (let ((?x2310 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x2475 (* r00 s00)))
 (let ((?x910 (* (- 54) ?x2475)))
 (let ((?x2241 (* 216 (* r00 s00 x00))))
 (let ((?x1119 (+ (- 27) ?x2241 ?x507 ?x910 (* 15 (* (+ 3 s ?x211) (+ 3 s ?x211))) (* (- 216) (* r00 r00 r00 (+ 3 s ?x211))) ?x2310 ?x1137 (* 108 (* (+ x ?x269) (+ x ?x269))) ?x901 (* (- 12) (* s00 (+ 3 s ?x211) (+ 3 s ?x211))) (* 108 (* s00 (+ x ?x269))) ?x758 ?x1125 (* 108 (* x00 (+ 3 s ?x211))) (* 432 (* r00 r00 r00 (+ x ?x269))) (* (- 66) (* s00 (+ 3 s ?x211))) (* 108 (* r00 s00 (+ 3 s ?x211))) ?x1130 (* (- 216) (* r00 s00 (+ x ?x269))) (* 36 (* r00 r00 (+ 3 s ?x211) (+ 3 s ?x211))) ?x1174 (* (- 108) (* (+ x ?x269) (+ 3 s ?x211))) (* 36 (* r00 r00 (+ 3 s ?x211))) ?x1210 (* (- 108) (* r00 (+ x ?x269))) ?x137 ?x2446 ?x1894 (* (- 54) r) (* 54 (* r00 (+ 3 s ?x211))) (* (- 216) (* x00 (+ x ?x269))) ?x1336)))
 (let ((?x1460 (+ 3 s ?x211)))
 (let ((?x298 (+ x ?x269)))
 (let ((?x665 (+ (* ?x2576 ?x298 ?x298 ?x298) (* (- 1) (* ?x2576 ?x298 ?x298 ?x298 ?x1460 ?x1460 ?x1460)))))
 (let ((?x2375 (* r00 s)))
 (let ((?x2497 (* 54 ?x2375)))
 (let ((?x2334 (* r00 r00 s)))
 (let ((?x2335 (* 36 ?x2334)))
 (let ((?x2220 (* 36 (* r00 r00 s s))))
 (let ((?x2023 (* 432 (* r00 r00 r00 x))))
 (let ((?x1958 (* s00 x)))
 (let ((?x1959 (* 108 ?x1958)))
 (let ((?x1403 (+ ?x2241 ?x507 ?x910 (* 15 ?x534) (* (- 216) (* r00 r00 r00 s)) ?x2310 ?x812 ?x844 ?x901 (* (- 12) (* s00 s s)) ?x1959 ?x758 ?x1125 (* 108 (* x00 s)) ?x2023 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1130 (* (- 216) (* r00 s00 x)) ?x2220 ?x1174 (* (- 108) (* x s)) ?x2335 ?x1210 (* (- 108) (* r00 x)) ?x137 ?x2446 ?x1894 ?x2497 (* (- 216) (* x00 x)) ?x1336)))
 (let ((?x309 (+ (* (- 24) (* s r)) ?x540 (* 36 (* r00 x r)) (* 24 ?x2475) ?x558 (* 54 (* x r)) (* (- 6) ?x1958) (* 4 (* r00 s s)) (* (- 2) ?x2552) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x795 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2334) ?x879 ?x905 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x976 (* 36 ?x1323) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2375) (* 36 (* r00 r00 x)))))
 (let ((?x477 (+ (* (- 9) (* s r)) ?x525 (* 9 ?x2475) ?x535 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2334) ?x593 (* 18 (* r00 x)) ?x367 (* 6 ?x1323) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2375) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1482 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x367 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x2475) (* (- 6) x) ?x59 (* (- 12) ?x458))))
 (let (($x2519 (and (= (+ s00 ?x269 (* 3 (* r r)) (* (- 3) ?x290)) 0) (= ?x1482 0) (= ?x477 0) (= ?x309 0) (= ?x1403 0) (not (= (* ?x665 ?x1119) 0)))))
 (rewrite (= $x2519 $x986))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x266 (exists ((r Int) (s Int) (x Int) )(! (let ((?x220 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x257 (+ r 1)))
 (let ((?x208 (* 108 x00 x00)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x197 (* 51 s00 s00)))
 (let ((?x192 (* 16 s00 s00 s00)))
 (let ((?x186 (* 108 s00 x00)))
 (let ((?x177 (* 216 r00 r00 r00 s00)))
 (let ((?x175 (* 108 r00 s00 s00)))
 (let ((?x169 (* 432 r00 r00 r00 x00)))
 (let ((?x161 (* 36 r00 r00 s00 s00)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x218 (- (- (+ ?x157 (* 15 ?x212 ?x212)) (* 216 r00 r00 r00 ?x212)) ?x161)))
 (let ((?x225 (- (- (+ (- ?x218 (* 4 ?x212 ?x212 ?x212)) (* 108 ?x220 ?x220)) ?x169) (* 12 ?x212 ?x212 s00))))
 (let ((?x231 (+ (- (+ ?x225 (* 108 s00 ?x220)) ?x175) ?x177 (* 108 ?x212 x00) (* 432 r00 r00 r00 ?x220))))
 (let ((?x237 (- (+ (- ?x231 (* 66 ?x212 s00)) (* 108 r00 ?x212 s00)) ?x186)))
 (let ((?x240 (+ (- ?x237 (* 216 r00 s00 ?x220)) (* 36 r00 r00 ?x212 ?x212) ?x192)))
 (let ((?x246 (- (+ (- ?x240 (* 108 ?x212 ?x220)) (* 36 r00 r00 ?x212) ?x197) (* 108 r00 ?x220))))
 (let ((?x254 (- (+ (- (- (+ ?x246 ?x137) ?x139) (* 9 ?x212)) (* 54 r00 ?x212)) (* 216 ?x220 x00))))
 (let ((?x261 (* (+ ?x254 ?x208) (- (* ?x257 ?x220 ?x220 ?x220) (* ?x257 ?x212 ?x212 ?x212 ?x220 ?x220 ?x220)))))
 (let ((?x143 (* 9 s)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) ?x161)))
 (let ((?x172 (- (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) ?x169) (* 12 s s s00))))
 (let ((?x180 (+ (- (+ ?x172 (* 108 s00 x)) ?x175) ?x177 (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) ?x186)))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) ?x192)))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 ?x197) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 ?x208) 0) (or (not (= ?x261 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1849 (lambda ((r Int) (s Int) (x Int) )(let ((?x1335 (* x00 x00)))
 (let ((?x1336 (* 108 ?x1335)))
 (let ((?x1894 (* (- 9) s)))
 (let ((?x1323 (* r00 r00 s00)))
 (let ((?x2446 (* (- 36) ?x1323)))
 (let ((?x137 (* 9 s00)))
 (let ((?x580 (* s00 s00)))
 (let ((?x1210 (* 51 ?x580)))
 (let ((?x2628 (* (- 108) (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x1173 (* s00 s00 s00)))
 (let ((?x1174 (* 16 ?x1173)))
 (let ((?x211 (* 6 r)))
 (let ((?x1460 (+ 3 s ?x211)))
 (let ((?x794 (* s00 x00)))
 (let ((?x1130 (* (- 108) ?x794)))
 (let ((?x1125 (* 216 (* r00 r00 r00 s00))))
 (let ((?x2552 (* r00 s00 s00)))
 (let ((?x758 (* (- 108) ?x2552)))
 (let ((?x871 (* r00 r00 r00 x00)))
 (let ((?x901 (* (- 432) ?x871)))
 (let ((?x2310 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x2475 (* r00 s00)))
 (let ((?x910 (* (- 54) ?x2475)))
 (let ((?x511 (* r00 x00)))
 (let ((?x507 (* 108 ?x511)))
 (let ((?x2241 (* 216 (* r00 s00 x00))))
 (let ((?x1119 (+ (- 27) ?x2241 ?x507 ?x910 (* 15 (* ?x1460 ?x1460)) (* (- 216) (* r00 r00 r00 ?x1460)) ?x2310 (* (- 4) (* ?x1460 ?x1460 ?x1460)) (* 108 (* (+ x (* (- 1) s)) (+ x (* (- 1) s)))) ?x901 (* (- 12) (* s00 ?x1460 ?x1460)) (* 108 (* s00 (+ x (* (- 1) s)))) ?x758 ?x1125 (* 108 (* x00 ?x1460)) (* 432 (* r00 r00 r00 (+ x (* (- 1) s)))) (* (- 66) (* s00 ?x1460)) (* 108 (* r00 s00 ?x1460)) ?x1130 (* (- 216) (* r00 s00 (+ x (* (- 1) s)))) (* 36 (* r00 r00 ?x1460 ?x1460)) ?x1174 ?x2628 (* 36 (* r00 r00 ?x1460)) ?x1210 (* (- 108) (* r00 (+ x (* (- 1) s)))) ?x137 ?x2446 ?x1894 (* (- 54) r) (* 54 (* r00 ?x1460)) (* (- 216) (* x00 (+ x (* (- 1) s)))) ?x1336)))
 (let ((?x269 (* (- 1) s)))
 (let ((?x298 (+ x ?x269)))
 (let ((?x2576 (+ 1 r)))
 (let ((?x665 (+ (* ?x2576 ?x298 ?x298 ?x298) (* (- 1) (* ?x2576 ?x298 ?x298 ?x298 ?x1460 ?x1460 ?x1460)))))
 (let ((?x2375 (* r00 s)))
 (let ((?x2497 (* 54 ?x2375)))
 (let ((?x2334 (* r00 r00 s)))
 (let ((?x2335 (* 36 ?x2334)))
 (let ((?x2220 (* 36 (* r00 r00 s s))))
 (let ((?x2023 (* 432 (* r00 r00 r00 x))))
 (let ((?x1958 (* s00 x)))
 (let ((?x1959 (* 108 ?x1958)))
 (let ((?x843 (* x x)))
 (let ((?x844 (* 108 ?x843)))
 (let ((?x792 (* s s s)))
 (let ((?x812 (* (- 4) ?x792)))
 (let ((?x1403 (+ ?x2241 ?x507 ?x910 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x2310 ?x812 ?x844 ?x901 (* (- 12) (* s00 s s)) ?x1959 ?x758 ?x1125 (* 108 (* x00 s)) ?x2023 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1130 (* (- 216) (* r00 s00 x)) ?x2220 ?x1174 (* (- 108) (* x s)) ?x2335 ?x1210 (* (- 108) (* r00 x)) ?x137 ?x2446 ?x1894 ?x2497 (* (- 216) (* x00 x)) ?x1336)))
 (let ((?x143 (* 9 s)))
 (let ((?x976 (* (- 9) s00)))
 (let ((?x905 (* (- 15) ?x580)))
 (let ((?x866 (* r00 r00 x00)))
 (let ((?x879 (* (- 36) ?x866)))
 (let ((?x795 (* 6 ?x794)))
 (let ((?x534 (* s s)))
 (let ((?x558 (* 3 ?x534)))
 (let ((?x540 (* (- 54) ?x511)))
 (let ((?x309 (+ (* (- 24) (* s r)) ?x540 (* 36 (* r00 x r)) (* 24 ?x2475) ?x558 (* 54 (* x r)) (* (- 6) ?x1958) (* 4 (* r00 s s)) (* (- 2) ?x2552) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x795 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2334) ?x879 ?x905 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x976 (* 36 ?x1323) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2375) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x367 (* (- 3) s00)))
 (let ((?x593 (* (- 4) ?x580)))
 (let ((?x535 (* 2 ?x534)))
 (let ((?x525 (* (- 18) ?x511)))
 (let ((?x477 (+ (* (- 9) (* s r)) ?x525 (* 9 ?x2475) ?x535 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2334) ?x593 (* 18 (* r00 x)) ?x367 (* 6 ?x1323) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2375) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1482 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x367 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x2475) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2305 (= (+ s00 ?x269 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2519 (and $x2305 (= ?x1482 0) (= ?x477 0) (= ?x309 0) (= ?x1403 0) (not (= (* ?x665 ?x1119) 0)))))
 (let ((?x220 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x257 (+ r 1)))
 (let ((?x208 (* 108 x00 x00)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x197 (* 51 s00 s00)))
 (let ((?x192 (* 16 s00 s00 s00)))
 (let ((?x186 (* 108 s00 x00)))
 (let ((?x177 (* 216 r00 r00 r00 s00)))
 (let ((?x175 (* 108 r00 s00 s00)))
 (let ((?x169 (* 432 r00 r00 r00 x00)))
 (let ((?x161 (* 36 r00 r00 s00 s00)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x218 (- (- (+ ?x157 (* 15 ?x212 ?x212)) (* 216 r00 r00 r00 ?x212)) ?x161)))
 (let ((?x225 (- (- (+ (- ?x218 (* 4 ?x212 ?x212 ?x212)) (* 108 ?x220 ?x220)) ?x169) (* 12 ?x212 ?x212 s00))))
 (let ((?x231 (+ (- (+ ?x225 (* 108 s00 ?x220)) ?x175) ?x177 (* 108 ?x212 x00) (* 432 r00 r00 r00 ?x220))))
 (let ((?x237 (- (+ (- ?x231 (* 66 ?x212 s00)) (* 108 r00 ?x212 s00)) ?x186)))
 (let ((?x240 (+ (- ?x237 (* 216 r00 s00 ?x220)) (* 36 r00 r00 ?x212 ?x212) ?x192)))
 (let ((?x246 (- (+ (- ?x240 (* 108 ?x212 ?x220)) (* 36 r00 r00 ?x212) ?x197) (* 108 r00 ?x220))))
 (let ((?x254 (- (+ (- (- (+ ?x246 ?x137) ?x139) (* 9 ?x212)) (* 54 r00 ?x212)) (* 216 ?x220 x00))))
 (let ((?x261 (* (+ ?x254 ?x208) (- (* ?x257 ?x220 ?x220 ?x220) (* ?x257 ?x212 ?x212 ?x212 ?x220 ?x220 ?x220)))))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) ?x161)))
 (let ((?x172 (- (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) ?x169) (* 12 s s s00))))
 (let ((?x180 (+ (- (+ ?x172 (* 108 s00 x)) ?x175) ?x177 (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) ?x186)))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) ?x192)))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 ?x197) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x265 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 ?x208) 0) (or (not (= ?x261 0))))))
 (rewrite (= $x265 $x2519))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x267 (asserted $x266)))
 (let ((@x1133 (mp (mp @x267 (quant-intro (proof-bind ?x1849) (= $x266 $x1757)) $x1757) (rewrite (= $x1757 $x1757)) $x1757)))
 (let ((@x1684 (mp~ (mp @x1133 (quant-intro (proof-bind ?x857) (= $x1757 $x988)) $x988) (sk (~ $x988 $x1481)) $x1481)))
 (let ((@x2324 (mp @x1684 (rewrite (= $x1481 $x1865)) $x1865)))
 (let ((@x2301 (and-elim @x2324 $x1657)))
 (let ((@x2370 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1657) $x1651)) @x2301 $x1651)))
 (let (($x1968 (>= ?x785 0)))
 (let ((@x1691 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1657) $x1968)) @x2301 $x1968)))
 (let (($x1558 (<= ?x1701 0)))
 (let ((@x601 (and-elim @x2324 $x1706)))
 (let ((@x518 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1706) $x1558)) @x601 $x1558)))
 (let (($x570 (>= ?x1701 0)))
 (let ((@x519 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1706) $x570)) @x601 $x570)))
 (let (($x587 (<= ?x2669 0)))
 (let ((@x2300 (and-elim @x2324 $x2593)))
 (let ((@x791 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2593) $x587)) @x2300 $x587)))
 (let (($x1904 (>= ?x2669 0)))
 (let ((@x1604 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2593) $x1904)) @x2300 $x1904)))
 (let (($x2180 (<= ?x1586 0)))
 (let ((@x982 (and-elim @x2324 $x1541)))
 (let ((@x476 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1541) $x2180)) @x982 $x2180)))
 (let (($x836 (>= ?x1586 0)))
 (let ((@x2595 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1541) $x836)) @x982 $x836)))
 (let (($x834 (<= ?x2295 0)))
 (let ((@x2245 (and-elim @x2324 $x2242)))
 (let ((@x655 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2242) $x834)) @x2245 $x834)))
 (let (($x1047 (>= ?x2295 0)))
 (let ((@x374 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2242) $x1047)) @x2245 $x1047)))
 (let ((@x698 (hypothesis (not $x2534))))
 (let (($x453 (not (<= ?x1652 0))))
 (let (($x1909 (>= ?x1652 0)))
 (let (($x2470 (not $x1909)))
 (let ((@x1508 (hypothesis $x2470)))
 (let ((@x967 ((_ th-lemma arith) @x1508 @x698 @x519 @x518 @x374 @x655 @x2595 @x476 @x519 @x518 @x2595 @x476 @x2595 @x476 @x1691 @x2370 @x519 @x518 @x1604 @x791 @x519 @x518 @x1691 @x2370 false)))
 (let (($x670 (>= ?x2639 0)))
 (let ((@x1943 (hypothesis (not $x670))))
 (let ((@x1563 ((_ th-lemma arith) @x1508 @x1943 @x519 @x518 @x374 @x655 @x2595 @x476 @x519 @x518 @x2595 @x476 @x2595 @x476 @x1691 @x2370 @x519 @x518 @x1604 @x791 @x519 @x518 @x1691 @x2370 false)))
 (let ((@x815 ((_ th-lemma arith farkas 1 1 1) @x1508 (unit-resolution (lemma @x1563 (or $x670 $x1909)) @x1508 $x670) (unit-resolution (lemma @x967 (or $x2534 $x1909)) @x1508 $x2534) false)))
 (let ((@x835 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1066 $x453 $x2470)) (and-elim @x2324 $x1653) (or $x453 $x2470))))
 (let ((@x1493 (unit-resolution @x835 (lemma @x815 $x1909) $x453)))
 (let ((@x1683 ((_ th-lemma arith) @x1493 @x698 @x519 @x518 @x374 @x655 @x2595 @x476 @x519 @x518 @x2595 @x476 @x2595 @x476 @x1691 @x2370 @x519 @x518 @x1604 @x791 @x519 @x518 @x1691 @x2370 false)))
 (let ((@x2660 ((_ th-lemma arith) @x1493 @x1943 @x519 @x518 @x374 @x655 @x2595 @x476 @x519 @x518 @x2595 @x476 @x2595 @x476 @x1691 @x2370 @x519 @x518 @x1604 @x791 @x519 @x518 @x1691 @x2370 false)))
 ((_ th-lemma arith farkas 1 1 1) @x1493 (lemma @x2660 $x670) (lemma @x1683 $x2534) false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 7
 :arith-assert-diseq        4
 :arith-assert-lower        43
 :arith-assert-upper        15
 :arith-conflicts           6
 :arith-eq-adapter          8
 :arith-fixed-eqs           1
 :arith-gcd-tests           15
 :arith-grobner             7
 :arith-max-min             1945
 :arith-nonlinear-bounds    31
 :arith-nonlinear-horner    70
 :arith-num-rows            10
 :arith-patches             10
 :arith-patches_succ        10
 :arith-pivots              7
 :arith-pseudo-nonlinear    2
 :arith-row-summations      13
 :arith-tableau-max-columns 132
 :arith-tableau-max-rows    10
 :conflicts                 6
 :decisions                 5
 :del-clause                26
 :final-checks              15
 :max-memory                20.09
 :memory                    19.30
 :mk-bool-var               24
 :mk-clause                 26
 :num-allocs                2835341
 :num-checks                1
 :propagations              17
 :rlimit-count              166367
 :time                      0.08
 :total-time                0.10)
