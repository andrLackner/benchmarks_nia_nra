unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x625 (* (- 3) n!0)))
 (let ((?x1625 (* (- 3) (* n!0 n!0))))
 (let ((?x518 (+ k!2 ?x1625 ?x625)))
 (let (($x755 (<= ?x518 1)))
 (let (($x1441 (= ?x518 1)))
 (let ((?x1355 (+ k!2 c!3)))
 (let ((?x972 (+ 6 m!1)))
 (let ((?x1062 (+ 1 n!0)))
 (let ((?x506 (+ k!2 m!1)))
 (let ((?x805 (* (- 3) (* ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x972 ?x972 ?x972 ?x506 ?x1355 ?x1355))))
 (let ((?x1126 (* k!2 k!2 n!0)))
 (let ((?x660 (* k!2 m!1 n!0)))
 (let ((?x629 (* c!3 c!3 m!1 m!1 m!1)))
 (let ((?x614 (* c!3 m!1 n!0)))
 (let ((?x568 (* c!3 m!1)))
 (let ((?x551 (* k!2 m!1)))
 (let ((?x691 (+ (* 18 (* c!3 c!3 m!1 m!1)) (* (- 12) (* k!2 k!2 k!2 m!1)) (* (- 7) k!2) (* (- 1) (* ?x972 ?x972 ?x972 ?x506 ?x1355 ?x1355)) (* (- 12) (* k!2 n!0 n!0)) (* (- 12) (* c!3 m!1 m!1 m!1)) (* (- 16) (* c!3 n!0)) (* 433 (* k!2 c!3)) (* 36 (* k!2 k!2 m!1)) ?x551 (* ?x1062 ?x1062 ?x1062 ?x972 ?x972 ?x972 ?x506 ?x506 ?x1355 ?x1355) (* ?x972 ?x972 ?x506 ?x506 ?x506 ?x1355) (* (- 36) (* c!3 m!1 m!1)) ?x568 (* (- 1) (* k!2 k!2 k!2 m!1 m!1)) (* (- 1) (* k!2 k!2 c!3 m!1 m!1)) (* (- 3) (* ?x1062 ?x1062 ?x1062 ?x972 ?x506 ?x506 ?x506 ?x1355 ?x1355)) (* (- 12) (* k!2 k!2 c!3 m!1)) ?x614 (* (- 6) (* k!2 k!2 m!1 m!1)) ?x629 (* (- 1) (* c!3 m!1 m!1 m!1 m!1)) (* (- 3) (* k!2 n!0 n!0 n!0)) (* 3 (* ?x1062 ?x972 ?x972 ?x972 ?x1355 ?x1355)) (* 144 (* k!2 c!3 m!1)) ?x660 (* (- 3) (* ?x1062 ?x1062 ?x1062 ?x1062 ?x972 ?x972 ?x972 ?x506 ?x1355 ?x1355)) (* (- 1) (* ?x1062 ?x1062 ?x1062 ?x972 ?x972 ?x972 ?x506 ?x1355 ?x1355)) (* (- 7) c!3) (* (- 36) (* k!2 k!2 c!3)) (* 216 (* c!3 c!3)) (* ?x1062 ?x1062 ?x972 ?x506 ?x506 ?x506 ?x506 ?x1355 ?x1355) (* (- 3) (* ?x1062 ?x1062 ?x1062 ?x1062 ?x972 ?x506 ?x506 ?x506 ?x1355 ?x1355)) (* 108 (* c!3 c!3 m!1)) (* (- 3) (* ?x1062 ?x972 ?x972 ?x506 ?x506 ?x1355)) (* (- 36) (* k!2 k!2 k!2)) (* (- 1) (* ?x1062 ?x1062 ?x972 ?x506 ?x506 ?x506 ?x1355 ?x1355)) (* 217 (* k!2 k!2)) (* (- 12) (* c!3 n!0 n!0)) (* (- 3) (* ?x1062 ?x1062 ?x972 ?x972 ?x506 ?x506 ?x1355)) (* (- 12) (* k!2 m!1 m!1 m!1)) (* (- 1) (* k!2 m!1 m!1 m!1 m!1)) ?x1126 (* (- 3) (* c!3 n!0 n!0 n!0)) (* k!2 c!3 n!0) (* (- 36) (* k!2 m!1 m!1)) (* (- 16) (* k!2 n!0)) (* 12 (* k!2 c!3 m!1 m!1)) ?x805 (* 3 (* ?x1062 ?x1062 ?x972 ?x972 ?x972 ?x1355 ?x1355)) (* (- 1) (* k!2 k!2 m!1 m!1 m!1)))))
 (let (($x692 (= ?x691 0)))
 (let (($x479 (not $x692)))
 (let ((?x520 (* (- 2) n!0)))
 (let ((?x1499 (* k!2 n!0)))
 (let ((?x639 (* (- 1) ?x1499)))
 (let ((?x1533 (* 3 c!3)))
 (let ((?x1615 (+ k!2 ?x1533 ?x639 ?x520)))
 (let (($x591 (= ?x1615 1)))
 (let ((?x1090 (* (- 9) n!0)))
 (let ((?x1052 (* k!2 k!2)))
 (let ((?x704 (* (- 1) ?x1052)))
 (let ((?x1565 (* 18 c!3)))
 (let ((?x491 (* c!3 n!0)))
 (let ((?x502 (* 9 ?x491)))
 (let ((?x510 (* 5 k!2)))
 (let ((?x200 (+ ?x510 ?x502 ?x1565 ?x704 ?x1090)))
 (let (($x577 (= ?x200 4)))
 (let ((?x1280 (+ m!1 (* (- 6) n!0))))
 (let (($x1618 (= ?x1280 6)))
 (let (($x1424 (and $x1618 $x577 $x591 $x1441 $x479)))
 (let ((?x909 (+ c!3 k!2)))
 (let ((?x1124 (* k!2 m!1 m!1 m!1 m!1)))
 (let ((?x640 (* c!3 m!1 m!1 m!1 m!1)))
 (let ((?x576 (* k!2 k!2 k!2 m!1 m!1)))
 (let ((?x158 (* 3 (* ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x972 ?x972 ?x972 ?x506 ?x909 ?x909))))
 (let ((?x1698 (* k!2 k!2 m!1 m!1 m!1)))
 (let ((?x1514 (+ (* 7 c!3) (* 7 k!2) (* (- 217) ?x1052) (* 16 ?x1499) (* 16 ?x491) (* (- 1) (* ?x1062 ?x1062 ?x1062 ?x972 ?x972 ?x972 ?x506 ?x506 ?x909 ?x909)) (* (- 1) (* ?x972 ?x972 ?x506 ?x506 ?x506 ?x909)) (* (- 3) (* ?x1062 ?x972 ?x972 ?x972 ?x909 ?x909)) (* (- 216) (* c!3 c!3)) (* (- 433) (* c!3 k!2)) (* (- 108) (* c!3 c!3 m!1)) (* (- 144) (* c!3 k!2 m!1)) (* (- 36) (* k!2 k!2 m!1)) (* (- 18) (* c!3 c!3 m!1 m!1)) (* (- 12) (* c!3 k!2 m!1 m!1)) (* 6 (* k!2 k!2 m!1 m!1)) (* (- 1) ?x629) ?x1698 (* (- 1) (* c!3 k!2 n!0)) (* (- 1) ?x1126) ?x158 (* (- 3) (* ?x1062 ?x1062 ?x972 ?x972 ?x972 ?x909 ?x909)) (* 3 (* ?x1062 ?x1062 ?x1062 ?x1062 ?x972 ?x506 ?x506 ?x506 ?x909 ?x909)) (* c!3 k!2 k!2 m!1 m!1) ?x576 (* ?x972 ?x972 ?x972 ?x506 ?x909 ?x909) ?x640 ?x1124 (* 36 (* c!3 k!2 k!2)) (* 36 (* k!2 k!2 k!2)) (* 3 (* ?x1062 ?x972 ?x972 ?x506 ?x506 ?x909)) (* 36 (* c!3 m!1 m!1)) (* 36 (* k!2 m!1 m!1)) (* 12 (* c!3 k!2 k!2 m!1)) (* 12 (* k!2 k!2 k!2 m!1)) (* 12 (* c!3 m!1 m!1 m!1)) (* 12 (* k!2 m!1 m!1 m!1)) (* (- 1) (* ?x1062 ?x1062 ?x972 ?x506 ?x506 ?x506 ?x506 ?x909 ?x909)) (* 3 (* ?x1062 ?x1062 ?x972 ?x972 ?x506 ?x506 ?x909)) (* 3 (* k!2 n!0 n!0 n!0)) (* 3 (* c!3 n!0 n!0 n!0)) (* 3 (* ?x1062 ?x1062 ?x1062 ?x1062 ?x972 ?x972 ?x972 ?x506 ?x909 ?x909)) (* (- 1) ?x551) (* (- 1) ?x568) (* (- 1) ?x660) (* (- 1) ?x614) (* 12 (* k!2 n!0 n!0)) (* 12 (* c!3 n!0 n!0)) (* ?x1062 ?x1062 ?x972 ?x506 ?x506 ?x506 ?x909 ?x909) (* ?x1062 ?x1062 ?x1062 ?x972 ?x972 ?x972 ?x506 ?x909 ?x909) (* 3 (* ?x1062 ?x1062 ?x1062 ?x972 ?x506 ?x506 ?x506 ?x909 ?x909)))))
 (let (($x1536 (and $x1618 (= (+ ?x1565 ?x510 ?x1090 ?x704 ?x502) 4) (= (+ ?x1533 k!2 ?x520 ?x639) 1) (= (+ k!2 ?x625 ?x1625) 1) (not (= ?x1514 0)))))
 (let (($x478 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x1683 (* ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1631 (* 3 ?x1683)))
 (let ((?x1645 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1634 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1591 (* c n n)))
 (let ((?x914 (* 12 ?x1591)))
 (let ((?x1589 (* k n n)))
 (let ((?x913 (* 12 ?x1589)))
 (let ((?x1432 (* (- 1) (* c m n))))
 (let ((?x1431 (* (- 1) (* k m n))))
 (let ((?x1434 (* (- 1) (* c m))))
 (let ((?x1433 (* (- 1) (* k m))))
 (let ((?x1389 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1721 (* 3 ?x1389)))
 (let ((?x1318 (* 3 (* c n n n))))
 (let ((?x1316 (* 3 (* k n n n))))
 (let ((?x1114 (* ?x464 ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1115 (* 3 ?x1114)))
 (let ((?x1076 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1083 (* (- 1) ?x1076)))
 (let ((?x1109 (* 12 (* k m m m))))
 (let ((?x1108 (* 12 (* c m m m))))
 (let ((?x1104 (* 12 (* k k k m))))
 (let ((?x1103 (* 12 (* c k k m))))
 (let ((?x1031 (* 36 (* k m m))))
 (let ((?x1027 (* 36 (* c m m))))
 (let ((?x1017 (* ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1018 (* 3 ?x1017)))
 (let ((?x1001 (* 36 (* k k k))))
 (let ((?x997 (* 36 (* c k k))))
 (let ((?x989 (* k m m m m)))
 (let ((?x988 (* c m m m m)))
 (let ((?x987 (* ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x985 (* k k k m m)))
 (let ((?x984 (* c k k m m)))
 (let ((?x966 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1028 (* 3 ?x966)))
 (let ((?x864 (* ?x464 ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x1654 (* (- 3) ?x864)))
 (let ((?x831 (* ?x464 ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x832 (* 3 ?x831)))
 (let ((?x816 (* k k n)))
 (let ((?x912 (* (- 1) ?x816)))
 (let ((?x808 (* c k n)))
 (let ((?x910 (* (- 1) ?x808)))
 (let ((?x796 (* k k m m m)))
 (let ((?x780 (* c c m m m)))
 (let ((?x905 (* (- 1) ?x780)))
 (let ((?x746 (* k k m m)))
 (let ((?x1608 (* 6 ?x746)))
 (let ((?x738 (* c k m m)))
 (let ((?x901 (* (- 12) ?x738)))
 (let ((?x730 (* c c m m)))
 (let ((?x899 (* (- 18) ?x730)))
 (let ((?x688 (* c k)))
 (let ((?x896 (* (- 433) ?x688)))
 (let ((?x679 (* c c)))
 (let ((?x894 (* (- 216) ?x679)))
 (let ((?x567 (* ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x586 (* (- 3) ?x567)))
 (let ((?x552 (* ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x553 (* (- 1) ?x552)))
 (let ((?x465 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1003 (* (- 1) ?x465)))
 (let ((?x163 (* c n)))
 (let ((?x891 (* 16 ?x163)))
 (let ((?x55 (* k n)))
 (let ((?x890 (* 16 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x888 (* (- 217) ?x49)))
 (let ((?x886 (* 7 k)))
 (let ((?x885 (* 7 c)))
 (let ((?x924 (+ ?x885 ?x886 ?x888 ?x890 ?x891 ?x1003 ?x553 ?x586 ?x894 ?x896 (* (- 108) (* c c m)) (* (- 144) (* c k m)) (* (- 36) (* k k m)) ?x899 ?x901 ?x1608 ?x905 ?x796 ?x910 ?x912 ?x832 ?x1654 ?x1028 ?x984 ?x985 ?x987 ?x988 ?x989 ?x997 ?x1001 ?x1018 ?x1027 ?x1031 ?x1103 ?x1104 ?x1108 ?x1109 ?x1083 ?x1115 ?x1316 ?x1318 ?x1721 ?x1433 ?x1434 ?x1431 ?x1432 ?x913 ?x914 ?x1634 ?x1645 ?x1631)))
 (let (($x315 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x277 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x225 (= (+ ?x40 ?x44 ?x227 ?x228 (* 9 ?x163)) 4)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (and $x141 $x225 $x277 $x315 (not (= ?x924 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x929 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x1683 (* ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1631 (* 3 ?x1683)))
 (let ((?x1645 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1634 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1591 (* c n n)))
 (let ((?x914 (* 12 ?x1591)))
 (let ((?x1589 (* k n n)))
 (let ((?x913 (* 12 ?x1589)))
 (let ((?x1432 (* (- 1) (* c m n))))
 (let ((?x1431 (* (- 1) (* k m n))))
 (let ((?x1434 (* (- 1) (* c m))))
 (let ((?x1433 (* (- 1) (* k m))))
 (let ((?x1389 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1721 (* 3 ?x1389)))
 (let ((?x1318 (* 3 (* c n n n))))
 (let ((?x1316 (* 3 (* k n n n))))
 (let ((?x1114 (* ?x464 ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1115 (* 3 ?x1114)))
 (let ((?x1076 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1083 (* (- 1) ?x1076)))
 (let ((?x1109 (* 12 (* k m m m))))
 (let ((?x1108 (* 12 (* c m m m))))
 (let ((?x1104 (* 12 (* k k k m))))
 (let ((?x1103 (* 12 (* c k k m))))
 (let ((?x1031 (* 36 (* k m m))))
 (let ((?x1027 (* 36 (* c m m))))
 (let ((?x1017 (* ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1018 (* 3 ?x1017)))
 (let ((?x1001 (* 36 (* k k k))))
 (let ((?x997 (* 36 (* c k k))))
 (let ((?x989 (* k m m m m)))
 (let ((?x988 (* c m m m m)))
 (let ((?x987 (* ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x985 (* k k k m m)))
 (let ((?x984 (* c k k m m)))
 (let ((?x966 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1028 (* 3 ?x966)))
 (let ((?x864 (* ?x464 ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x1654 (* (- 3) ?x864)))
 (let ((?x831 (* ?x464 ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x832 (* 3 ?x831)))
 (let ((?x816 (* k k n)))
 (let ((?x912 (* (- 1) ?x816)))
 (let ((?x808 (* c k n)))
 (let ((?x910 (* (- 1) ?x808)))
 (let ((?x796 (* k k m m m)))
 (let ((?x780 (* c c m m m)))
 (let ((?x905 (* (- 1) ?x780)))
 (let ((?x746 (* k k m m)))
 (let ((?x1608 (* 6 ?x746)))
 (let ((?x738 (* c k m m)))
 (let ((?x901 (* (- 12) ?x738)))
 (let ((?x730 (* c c m m)))
 (let ((?x899 (* (- 18) ?x730)))
 (let ((?x688 (* c k)))
 (let ((?x896 (* (- 433) ?x688)))
 (let ((?x679 (* c c)))
 (let ((?x894 (* (- 216) ?x679)))
 (let ((?x567 (* ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x586 (* (- 3) ?x567)))
 (let ((?x552 (* ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x553 (* (- 1) ?x552)))
 (let ((?x465 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1003 (* (- 1) ?x465)))
 (let ((?x163 (* c n)))
 (let ((?x891 (* 16 ?x163)))
 (let ((?x55 (* k n)))
 (let ((?x890 (* 16 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x888 (* (- 217) ?x49)))
 (let ((?x886 (* 7 k)))
 (let ((?x885 (* 7 c)))
 (let ((?x916 (+ ?x885 ?x886 ?x888 ?x890 ?x891 ?x1003 ?x553 ?x586 (* (- 6) (* m 6 k k)) ?x894 ?x896 (* (- 72) (* c c m)) (* (- 72) (* c k m)) (* (- 6) (* m 6 c c)) ?x899 ?x901 (* (- 6) (* m 6 c k)) ?x1608 (* (- 6) (* m 6 k c)) ?x905 ?x796 ?x910 ?x912 ?x832 ?x1654 ?x1028 ?x984 ?x985 ?x987 ?x988 ?x989 ?x997 ?x1001 ?x1018 ?x1027 ?x1031 ?x1103 ?x1104 ?x1108 ?x1109 ?x1083 ?x1115 ?x1316 ?x1318 ?x1721 ?x1433 ?x1434 ?x1431 ?x1432 ?x913 ?x914 ?x1634 ?x1645 ?x1631)))
 (let (($x315 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x277 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x225 (= (+ ?x40 ?x44 ?x227 ?x228 (* 9 ?x163)) 4)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (and $x141 $x225 $x277 $x315 (not (= ?x916 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x476 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x1683 (* ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1631 (* 3 ?x1683)))
 (let ((?x1645 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1634 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1591 (* c n n)))
 (let ((?x914 (* 12 ?x1591)))
 (let ((?x1589 (* k n n)))
 (let ((?x913 (* 12 ?x1589)))
 (let ((?x1432 (* (- 1) (* c m n))))
 (let ((?x1431 (* (- 1) (* k m n))))
 (let ((?x1434 (* (- 1) (* c m))))
 (let ((?x1433 (* (- 1) (* k m))))
 (let ((?x1389 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1721 (* 3 ?x1389)))
 (let ((?x1318 (* 3 (* c n n n))))
 (let ((?x1316 (* 3 (* k n n n))))
 (let ((?x1114 (* ?x464 ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1115 (* 3 ?x1114)))
 (let ((?x1076 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1083 (* (- 1) ?x1076)))
 (let ((?x1109 (* 12 (* k m m m))))
 (let ((?x1108 (* 12 (* c m m m))))
 (let ((?x1104 (* 12 (* k k k m))))
 (let ((?x1103 (* 12 (* c k k m))))
 (let ((?x1031 (* 36 (* k m m))))
 (let ((?x1027 (* 36 (* c m m))))
 (let ((?x1017 (* ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1018 (* 3 ?x1017)))
 (let ((?x1001 (* 36 (* k k k))))
 (let ((?x997 (* 36 (* c k k))))
 (let ((?x989 (* k m m m m)))
 (let ((?x988 (* c m m m m)))
 (let ((?x987 (* ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x985 (* k k k m m)))
 (let ((?x984 (* c k k m m)))
 (let ((?x966 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1028 (* 3 ?x966)))
 (let ((?x864 (* ?x464 ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x1654 (* (- 3) ?x864)))
 (let ((?x831 (* ?x464 ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x832 (* 3 ?x831)))
 (let ((?x816 (* k k n)))
 (let ((?x912 (* (- 1) ?x816)))
 (let ((?x808 (* c k n)))
 (let ((?x910 (* (- 1) ?x808)))
 (let ((?x796 (* k k m m m)))
 (let ((?x780 (* c c m m m)))
 (let ((?x905 (* (- 1) ?x780)))
 (let ((?x746 (* k k m m)))
 (let ((?x1608 (* 6 ?x746)))
 (let ((?x738 (* c k m m)))
 (let ((?x901 (* (- 12) ?x738)))
 (let ((?x730 (* c c m m)))
 (let ((?x899 (* (- 18) ?x730)))
 (let ((?x688 (* c k)))
 (let ((?x896 (* (- 433) ?x688)))
 (let ((?x679 (* c c)))
 (let ((?x894 (* (- 216) ?x679)))
 (let ((?x567 (* ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x586 (* (- 3) ?x567)))
 (let ((?x552 (* ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x553 (* (- 1) ?x552)))
 (let ((?x465 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1003 (* (- 1) ?x465)))
 (let ((?x163 (* c n)))
 (let ((?x891 (* 16 ?x163)))
 (let ((?x55 (* k n)))
 (let ((?x890 (* 16 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x888 (* (- 217) ?x49)))
 (let ((?x886 (* 7 k)))
 (let ((?x885 (* 7 c)))
 (let ((?x924 (+ ?x885 ?x886 ?x888 ?x890 ?x891 ?x1003 ?x553 ?x586 ?x894 ?x896 (* (- 108) (* c c m)) (* (- 144) (* c k m)) (* (- 36) (* k k m)) ?x899 ?x901 ?x1608 ?x905 ?x796 ?x910 ?x912 ?x832 ?x1654 ?x1028 ?x984 ?x985 ?x987 ?x988 ?x989 ?x997 ?x1001 ?x1018 ?x1027 ?x1031 ?x1103 ?x1104 ?x1108 ?x1109 ?x1083 ?x1115 ?x1316 ?x1318 ?x1721 ?x1433 ?x1434 ?x1431 ?x1432 ?x913 ?x914 ?x1634 ?x1645 ?x1631)))
 (let (($x315 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x277 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x225 (= (+ ?x40 ?x44 ?x227 ?x228 (* 9 ?x163)) 4)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (let (($x983 (and $x141 $x225 $x277 $x315 (not (= ?x924 0)))))
 (let ((?x916 (+ ?x885 ?x886 ?x888 ?x890 ?x891 ?x1003 ?x553 ?x586 (* (- 6) (* m 6 k k)) ?x894 ?x896 (* (- 72) (* c c m)) (* (- 72) (* c k m)) (* (- 6) (* m 6 c c)) ?x899 ?x901 (* (- 6) (* m 6 c k)) ?x1608 (* (- 6) (* m 6 k c)) ?x905 ?x796 ?x910 ?x912 ?x832 ?x1654 ?x1028 ?x984 ?x985 ?x987 ?x988 ?x989 ?x997 ?x1001 ?x1018 ?x1027 ?x1031 ?x1103 ?x1104 ?x1108 ?x1109 ?x1083 ?x1115 ?x1316 ?x1318 ?x1721 ?x1433 ?x1434 ?x1431 ?x1432 ?x913 ?x914 ?x1634 ?x1645 ?x1631)))
 (let (($x1002 (and $x141 $x225 $x277 $x315 (not (= ?x916 0)))))
 (rewrite (= $x1002 $x983)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1426 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x325 (+ 6 m)))
 (let ((?x1672 (* ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x1683 (* ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x831 (* ?x464 ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1076 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1044 (* ?x464 ?x70 ?x69)))
 (let ((?x465 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x552 (* ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x194 (+ ?x552 (* 3 (* ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)) (* (- 1) (* ?x325 ?x325 ?x70 ?x70 ?x69)) ?x465 (* (- 3) (* ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)) (* (- 3) (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)) ?x1044 (* (- 1) (* ?x464 ?x69)) ?x1076 (* (- 1) (* ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)) (* (- 3) (* ?x464 ?x464 ?x464 ?x69)) (* (- 3) (* ?x464 ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)) (* (- 3) (* ?x464 ?x464 ?x69)) (* (- 3) (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)) (* (- 3) ?x831) (* 3 (* ?x464 ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)) (* (- 1) (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)) (* (- 1) (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 3) ?x1683) ?x1672)))
 (let (($x536 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1128 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (and $x141 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x227 ?x228) 4) $x1128 $x536 (not (= ?x194 0))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x940 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x1683 (* ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1631 (* 3 ?x1683)))
 (let ((?x1645 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1634 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1591 (* c n n)))
 (let ((?x914 (* 12 ?x1591)))
 (let ((?x1589 (* k n n)))
 (let ((?x913 (* 12 ?x1589)))
 (let ((?x1432 (* (- 1) (* c m n))))
 (let ((?x1431 (* (- 1) (* k m n))))
 (let ((?x1434 (* (- 1) (* c m))))
 (let ((?x1433 (* (- 1) (* k m))))
 (let ((?x1389 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1721 (* 3 ?x1389)))
 (let ((?x1318 (* 3 (* c n n n))))
 (let ((?x1316 (* 3 (* k n n n))))
 (let ((?x1114 (* ?x464 ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1115 (* 3 ?x1114)))
 (let ((?x1076 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1083 (* (- 1) ?x1076)))
 (let ((?x1109 (* 12 (* k m m m))))
 (let ((?x1108 (* 12 (* c m m m))))
 (let ((?x1104 (* 12 (* k k k m))))
 (let ((?x1103 (* 12 (* c k k m))))
 (let ((?x1031 (* 36 (* k m m))))
 (let ((?x1027 (* 36 (* c m m))))
 (let ((?x1017 (* ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1018 (* 3 ?x1017)))
 (let ((?x1001 (* 36 (* k k k))))
 (let ((?x997 (* 36 (* c k k))))
 (let ((?x989 (* k m m m m)))
 (let ((?x988 (* c m m m m)))
 (let ((?x987 (* ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x985 (* k k k m m)))
 (let ((?x984 (* c k k m m)))
 (let ((?x966 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1028 (* 3 ?x966)))
 (let ((?x864 (* ?x464 ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x1654 (* (- 3) ?x864)))
 (let ((?x831 (* ?x464 ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x832 (* 3 ?x831)))
 (let ((?x816 (* k k n)))
 (let ((?x912 (* (- 1) ?x816)))
 (let ((?x808 (* c k n)))
 (let ((?x910 (* (- 1) ?x808)))
 (let ((?x796 (* k k m m m)))
 (let ((?x780 (* c c m m m)))
 (let ((?x905 (* (- 1) ?x780)))
 (let ((?x746 (* k k m m)))
 (let ((?x1608 (* 6 ?x746)))
 (let ((?x738 (* c k m m)))
 (let ((?x901 (* (- 12) ?x738)))
 (let ((?x730 (* c c m m)))
 (let ((?x899 (* (- 18) ?x730)))
 (let ((?x688 (* c k)))
 (let ((?x896 (* (- 433) ?x688)))
 (let ((?x679 (* c c)))
 (let ((?x894 (* (- 216) ?x679)))
 (let ((?x567 (* ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x586 (* (- 3) ?x567)))
 (let ((?x552 (* ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x553 (* (- 1) ?x552)))
 (let ((?x465 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1003 (* (- 1) ?x465)))
 (let ((?x163 (* c n)))
 (let ((?x891 (* 16 ?x163)))
 (let ((?x55 (* k n)))
 (let ((?x890 (* 16 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x888 (* (- 217) ?x49)))
 (let ((?x886 (* 7 k)))
 (let ((?x885 (* 7 c)))
 (let ((?x916 (+ ?x885 ?x886 ?x888 ?x890 ?x891 ?x1003 ?x553 ?x586 (* (- 6) (* m 6 k k)) ?x894 ?x896 (* (- 72) (* c c m)) (* (- 72) (* c k m)) (* (- 6) (* m 6 c c)) ?x899 ?x901 (* (- 6) (* m 6 c k)) ?x1608 (* (- 6) (* m 6 k c)) ?x905 ?x796 ?x910 ?x912 ?x832 ?x1654 ?x1028 ?x984 ?x985 ?x987 ?x988 ?x989 ?x997 ?x1001 ?x1018 ?x1027 ?x1031 ?x1103 ?x1104 ?x1108 ?x1109 ?x1083 ?x1115 ?x1316 ?x1318 ?x1721 ?x1433 ?x1434 ?x1431 ?x1432 ?x913 ?x914 ?x1634 ?x1645 ?x1631)))
 (let (($x315 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x277 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x225 (= (+ ?x40 ?x44 ?x227 ?x228 (* 9 ?x163)) 4)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (let (($x1002 (and $x141 $x225 $x277 $x315 (not (= ?x916 0)))))
 (let ((?x1672 (* ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x1044 (* ?x464 ?x70 ?x69)))
 (let ((?x194 (+ ?x552 (* 3 ?x567) (* (- 1) (* ?x325 ?x325 ?x70 ?x70 ?x69)) ?x465 (* (- 3) ?x1017) (* (- 3) ?x966) ?x1044 (* (- 1) (* ?x464 ?x69)) ?x1076 (* (- 1) ?x987) (* (- 3) (* ?x464 ?x464 ?x464 ?x69)) (* (- 3) ?x1114) (* (- 3) (* ?x464 ?x464 ?x69)) (* (- 3) ?x1389) (* (- 3) ?x831) (* 3 ?x864) (* (- 1) ?x1645) (* (- 1) ?x1634) (* (- 3) ?x1683) ?x1672)))
 (let (($x536 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1128 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1425 (and $x141 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x227 ?x228) 4) $x1128 $x536 (not (= ?x194 0)))))
 (rewrite (= $x1425 $x1002)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x542 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x325 (+ 6 m)))
 (let ((?x1672 (* ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x1683 (* ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1631 (* 3 ?x1683)))
 (let ((?x1634 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1645 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x864 (* ?x464 ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x1654 (* (- 3) ?x864)))
 (let ((?x831 (* ?x464 ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x832 (* 3 ?x831)))
 (let ((?x1389 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1721 (* 3 ?x1389)))
 (let ((?x1114 (* ?x464 ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1115 (* 3 ?x1114)))
 (let ((?x987 (* ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1076 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1083 (* (- 1) ?x1076)))
 (let ((?x974 (* ?x464 ?x69)))
 (let ((?x966 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1028 (* 3 ?x966)))
 (let ((?x1017 (* ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1018 (* 3 ?x1017)))
 (let ((?x465 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1003 (* (- 1) ?x465)))
 (let ((?x598 (* ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x567 (* ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x586 (* (- 3) ?x567)))
 (let ((?x552 (* ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x553 (* (- 1) ?x552)))
 (let ((?x1561 (+ ?x553 ?x586 ?x598 ?x1003 ?x1018 ?x1028 (* (- 1) (* ?x464 ?x70 ?x69)) ?x974 ?x1083 ?x987 (* 3 (* ?x464 ?x464 ?x464 ?x69)) ?x1115 (* 3 (* ?x464 ?x464 ?x69)) ?x1721 ?x832 ?x1654 ?x1645 ?x1634 ?x1631 (* (- 1) ?x1672))))
 (let (($x536 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x490 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1507 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (and $x141 (= ?x1507 (- 4)) $x490 $x536 (not (= ?x1561 0)))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1367 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x325 (+ 6 m)))
 (let ((?x1672 (* ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x1683 (* ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x831 (* ?x464 ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1076 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1044 (* ?x464 ?x70 ?x69)))
 (let ((?x465 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x552 (* ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x194 (+ ?x552 (* 3 (* ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)) (* (- 1) (* ?x325 ?x325 ?x70 ?x70 ?x69)) ?x465 (* (- 3) (* ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)) (* (- 3) (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)) ?x1044 (* (- 1) (* ?x464 ?x69)) ?x1076 (* (- 1) (* ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)) (* (- 3) (* ?x464 ?x464 ?x464 ?x69)) (* (- 3) (* ?x464 ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)) (* (- 3) (* ?x464 ?x464 ?x69)) (* (- 3) (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)) (* (- 3) ?x831) (* 3 (* ?x464 ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)) (* (- 1) (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)) (* (- 1) (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 3) ?x1683) ?x1672)))
 (let (($x536 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1128 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (let (($x1425 (and $x141 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x227 ?x228) 4) $x1128 $x536 (not (= ?x194 0)))))
 (let ((?x1631 (* 3 ?x1683)))
 (let ((?x1634 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1645 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x864 (* ?x464 ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x1654 (* (- 3) ?x864)))
 (let ((?x832 (* 3 ?x831)))
 (let ((?x1389 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1721 (* 3 ?x1389)))
 (let ((?x1114 (* ?x464 ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1115 (* 3 ?x1114)))
 (let ((?x987 (* ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1083 (* (- 1) ?x1076)))
 (let ((?x974 (* ?x464 ?x69)))
 (let ((?x966 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1028 (* 3 ?x966)))
 (let ((?x1017 (* ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1018 (* 3 ?x1017)))
 (let ((?x1003 (* (- 1) ?x465)))
 (let ((?x598 (* ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x567 (* ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x586 (* (- 3) ?x567)))
 (let ((?x553 (* (- 1) ?x552)))
 (let ((?x1561 (+ ?x553 ?x586 ?x598 ?x1003 ?x1018 ?x1028 (* (- 1) ?x1044) ?x974 ?x1083 ?x987 (* 3 (* ?x464 ?x464 ?x464 ?x69)) ?x1115 (* 3 (* ?x464 ?x464 ?x69)) ?x1721 ?x832 ?x1654 ?x1645 ?x1634 ?x1631 (* (- 1) ?x1672))))
 (let (($x490 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1507 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x557 (and $x141 (= ?x1507 (- 4)) $x490 $x536 (not (= ?x1561 0)))))
 (rewrite (= $x557 $x1425)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ m 6)))
 (let ((?x69 (+ c k)))
 (let ((?x73 (+ n 1)))
 (let ((?x70 (+ k m)))
 (let ((?x75 (- (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* 3 ?x69 ?x69 ?x71 ?x71 ?x71 ?x73))))
 (let ((?x79 (- (+ ?x75 (* ?x69 ?x70 ?x70 ?x71 ?x71)) (* ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73))))
 (let ((?x82 (+ ?x79 (* 3 ?x69 ?x70 ?x70 ?x71 ?x71 ?x73) (* 3 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73 ?x73 ?x73))))
 (let ((?x88 (- (+ (- ?x82 (* ?x69 ?x70 ?x73)) (* ?x69 ?x73)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73))))
 (let ((?x95 (+ ?x88 (* ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 3 ?x69 ?x73 ?x73 ?x73) (* 3 ?x69 ?x70 ?x70 ?x71 ?x71 ?x73 ?x73) (* 3 ?x69 ?x73 ?x73) (* 3 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73) (* 3 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73 ?x73))))
 (let ((?x101 (+ (- ?x95 (* 3 ?x69 ?x69 ?x71 ?x71 ?x71 ?x73 ?x73)) (* ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73) (* 3 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73 ?x73))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x101 (* ?x69 ?x69 ?x71 ?x71 ?x71)) 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x550 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x325 (+ 6 m)))
 (let ((?x1672 (* ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x464 (+ 1 n)))
 (let ((?x1683 (* ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1631 (* 3 ?x1683)))
 (let ((?x1634 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1645 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x864 (* ?x464 ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x1654 (* (- 3) ?x864)))
 (let ((?x831 (* ?x464 ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x832 (* 3 ?x831)))
 (let ((?x1389 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1721 (* 3 ?x1389)))
 (let ((?x1114 (* ?x464 ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1115 (* 3 ?x1114)))
 (let ((?x987 (* ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x1076 (* ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1083 (* (- 1) ?x1076)))
 (let ((?x974 (* ?x464 ?x69)))
 (let ((?x966 (* ?x464 ?x464 ?x464 ?x464 ?x325 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1028 (* 3 ?x966)))
 (let ((?x1017 (* ?x464 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x1018 (* 3 ?x1017)))
 (let ((?x465 (* ?x464 ?x464 ?x464 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1003 (* (- 1) ?x465)))
 (let ((?x598 (* ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x567 (* ?x464 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x586 (* (- 3) ?x567)))
 (let ((?x552 (* ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x553 (* (- 1) ?x552)))
 (let ((?x1561 (+ ?x553 ?x586 ?x598 ?x1003 ?x1018 ?x1028 (* (- 1) (* ?x464 ?x70 ?x69)) ?x974 ?x1083 ?x987 (* 3 (* ?x464 ?x464 ?x464 ?x69)) ?x1115 (* 3 (* ?x464 ?x464 ?x69)) ?x1721 ?x832 ?x1654 ?x1645 ?x1634 ?x1631 (* (- 1) ?x1672))))
 (let (($x536 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x490 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1507 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (let (($x557 (and $x141 (= ?x1507 (- 4)) $x490 $x536 (not (= ?x1561 0)))))
 (let ((?x73 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x75 (- (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* 3 ?x69 ?x69 ?x71 ?x71 ?x71 ?x73))))
 (let ((?x79 (- (+ ?x75 (* ?x69 ?x70 ?x70 ?x71 ?x71)) (* ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73))))
 (let ((?x82 (+ ?x79 (* 3 ?x69 ?x70 ?x70 ?x71 ?x71 ?x73) (* 3 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73 ?x73 ?x73))))
 (let ((?x88 (- (+ (- ?x82 (* ?x69 ?x70 ?x73)) (* ?x69 ?x73)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73))))
 (let ((?x95 (+ ?x88 (* ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 3 ?x69 ?x73 ?x73 ?x73) (* 3 ?x69 ?x70 ?x70 ?x71 ?x71 ?x73 ?x73) (* 3 ?x69 ?x73 ?x73) (* 3 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73) (* 3 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73 ?x73))))
 (let ((?x101 (+ (- ?x95 (* 3 ?x69 ?x69 ?x71 ?x71 ?x71 ?x73 ?x73)) (* ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73) (* 3 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73 ?x73))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x107 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x101 (* ?x69 ?x69 ?x71 ?x71 ?x71)) 0))))))
 (rewrite (= $x107 $x557)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x1682 (mp (mp @x109 (quant-intro (proof-bind ?x550) (= $x108 $x542)) $x542) (rewrite (= $x542 $x542)) $x542)))
 (let ((@x509 (mp (mp @x1682 (quant-intro (proof-bind ?x1367) (= $x542 $x1426)) $x1426) (quant-intro (proof-bind ?x940) (= $x1426 $x929)) $x929)))
 (let ((@x522 (mp~ (mp @x509 (quant-intro (proof-bind ?x476) (= $x929 $x478)) $x478) (sk (~ $x478 $x1536)) $x1536)))
 (let ((@x1699 (mp @x522 (rewrite (= $x1536 $x1424)) $x1424)))
 (let ((@x1019 (and-elim @x1699 $x1441)))
 (let ((@x1529 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1441) $x755)) @x1019 $x755)))
 (let (($x130 (>= ?x518 1)))
 (let ((@x726 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1441) $x130)) @x1019 $x130)))
 (let (($x120 (<= ?x200 4)))
 (let ((@x932 (and-elim @x1699 $x577)))
 (let ((@x733 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x577) $x120)) @x932 $x120)))
 (let (($x1486 (>= ?x200 4)))
 (let ((@x1551 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x577) $x1486)) @x932 $x1486)))
 (let (($x687 (<= ?x1615 1)))
 (let ((@x1417 (and-elim @x1699 $x591)))
 (let ((@x702 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x591) $x687)) @x1417 $x687)))
 (let (($x1422 (>= ?x1615 1)))
 (let ((@x728 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x591) $x1422)) @x1417 $x1422)))
 (let (($x686 (<= ?x1280 6)))
 (let ((@x646 (and-elim @x1699 $x1618)))
 (let ((@x1564 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1618) $x686)) @x646 $x686)))
 (let (($x663 (>= ?x1280 6)))
 (let ((@x767 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1618) $x663)) @x646 $x663)))
 (let (($x571 (not (>= ?x691 0))))
 (let (($x669 (<= ?x691 0)))
 (let ((@x1632 ((_ th-lemma arith) (hypothesis (not $x669)) @x726 @x1529 @x726 @x1529 @x728 @x702 @x726 @x1529 @x1551 @x733 @x726 @x1529 @x767 @x1564 @x726 @x1529 @x767 @x1564 @x767 @x1564 @x728 @x702 @x1551 @x733 @x726 @x1529 false)))
 (let ((@x1656 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x692 (not $x669) $x571)) (and-elim @x1699 $x479) (or (not $x669) $x571))))
 ((_ th-lemma arith) (unit-resolution @x1656 (lemma @x1632 $x669) $x571) @x726 @x1529 @x726 @x1529 @x728 @x702 @x726 @x1529 @x1551 @x733 @x726 @x1529 @x767 @x1564 @x726 @x1529 @x767 @x1564 @x767 @x1564 @x728 @x702 @x1551 @x733 @x726 @x1529 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        24
 :arith-assert-upper        185
 :arith-branch-var          3
 :arith-conflicts           5
 :arith-eq-adapter          5
 :arith-gcd-tests           11
 :arith-grobner             2
 :arith-ineq-splits         3
 :arith-max-min             609
 :arith-nonlinear-bounds    25
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             6
 :arith-pivots              8
 :arith-row-summations      11
 :arith-tableau-max-columns 86
 :arith-tableau-max-rows    9
 :conflicts                 5
 :decisions                 165
 :del-clause                17
 :final-checks              13
 :max-memory                4.02
 :memory                    3.35
 :mk-bool-var               160
 :mk-clause                 17
 :num-allocs                2379658
 :num-checks                1
 :propagations              12
 :rlimit-count              28367
 :time                      0.02
 :total-time                0.03)
