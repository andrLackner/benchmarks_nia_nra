unsat
((set-logic NIA)
(declare-fun p!5 () Int)
(declare-fun r!1 () Int)
(declare-fun a!4 () Int)
(declare-fun s!0 () Int)
(declare-fun b!2 () Int)
(declare-fun q!3 () Int)
(proof
(let ((?x413 (* s00 a00 p!5)))
 (let ((?x292 (* (- 1) (* q00 a00 r!1))))
 (let ((?x266 (* p00 b00 r!1)))
 (let ((?x361 (* (- 1) (* p00 s00 a!4))))
 (let ((?x353 (* (- 1) (* r00 b00 p!5))))
 (let ((?x195 (* q00 r00 a!4)))
 (let ((?x379 (+ ?x195 ?x353 ?x361 ?x266 ?x292 ?x413)))
 (let (($x178 (<= ?x379 0)))
 (let (($x381 (= ?x379 0)))
 (let ((?x335 (* q00 a00 s!0)))
 (let ((?x385 (* (- 1) (* q00 r00 b!2))))
 (let ((?x382 (* (- 1) (* s00 a00 q!3))))
 (let ((?x151 (* r00 b00 q!3)))
 (let ((?x380 (* (- 1) (* p00 b00 s!0))))
 (let ((?x106 (* p00 s00 b!2)))
 (let ((?x444 (+ ?x106 ?x380 ?x151 ?x382 ?x195 ?x353 ?x361 ?x266 ?x292 ?x385 ?x335 ?x413)))
 (let (($x445 (= ?x444 0)))
 (let (($x453 (not $x445)))
 (let (($x402 (not $x381)))
 (let (($x407 (or $x402 $x453)))
 (let ((?x388 (+ ?x106 ?x380 ?x151 ?x382 ?x385 ?x335)))
 (let (($x391 (= ?x388 0)))
 (let ((?x141 (* p!5 b!2)))
 (let ((?x121 (* q00 a00)))
 (let (($x120 (= (+ ?x121 (* (- 1) (* p00 b00)) ?x141 (* (- 1) (* a!4 q!3))) 0)))
 (let ((?x187 (* b!2 r!1)))
 (let ((?x117 (* s00 a00)))
 (let (($x282 (= (+ ?x117 (* (- 1) (* r00 b00)) ?x187 (* (- 1) (* s!0 a!4))) 0)))
 (let ((?x37 (* p00 s00)))
 (let ((?x347 (+ ?x37 (* (- 1) (* q00 r00)) (* r!1 q!3) (* (- 1) (* s!0 p!5)))))
 (let (($x454 (and (= ?x347 0) $x282 $x120 $x381 $x391 $x407)))
 (let ((?x303 (* (- 1) (* s!0 q00 a00))))
 (let ((?x170 (* q!3 s00 a00)))
 (let ((?x164 (* (- 1) (* q!3 r00 b00))))
 (let ((?x158 (* s!0 p00 b00)))
 (let ((?x306 (* r!1 q00 a00)))
 (let ((?x203 (* (- 1) (* p!5 s00 a00))))
 (let ((?x193 (* (- 1) (* r!1 p00 b00))))
 (let ((?x344 (* p!5 r00 b00)))
 (let ((?x130 (* (- 1) (* b!2 p00 s00))))
 (let ((?x157 (* b!2 q00 r00)))
 (let ((?x254 (* (- 1) (* a!4 q00 r00))))
 (let ((?x174 (* a!4 p00 s00)))
 (let (($x237 (= (+ ?x174 ?x254 ?x157 ?x130 ?x344 ?x193 ?x203 ?x306 ?x158 ?x164 ?x170 ?x303) 0)))
 (let (($x156 (= (+ ?x174 ?x254 ?x344 ?x193 ?x203 ?x306) 0)))
 (let (($x192 (= (+ (* a!4 q!3) (* (- 1) ?x121) (* p00 b00) (* (- 1) ?x141)) 0)))
 (let (($x410 (= (+ (* a!4 s!0) (* (- 1) ?x187) (* (- 1) ?x117) (* r00 b00)) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x126 (* (- 1) ?x37)))
 (let (($x424 (and (= (+ (* p!5 s!0) ?x126 ?x41 (* (- 1) (* q!3 r!1))) 0) $x410 $x192 $x156 (= (+ ?x157 ?x130 ?x158 ?x164 ?x170 ?x303) 0) (or (not $x156) (not $x237)))))
 (let (($x217 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x291 (* (- 1) (* s q00 a00))))
 (let ((?x274 (* q s00 a00)))
 (let ((?x249 (* (- 1) (* q r00 b00))))
 (let ((?x239 (* s p00 b00)))
 (let ((?x210 (* r q00 a00)))
 (let ((?x232 (* (- 1) (* p s00 a00))))
 (let ((?x231 (* (- 1) (* r p00 b00))))
 (let ((?x176 (* p r00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x263 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x230 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let (($x390 (= (+ ?x63 ?x230 ?x72 ?x263 ?x176 ?x231 ?x232 ?x210 ?x239 ?x249 ?x274 ?x291) 0)))
 (let (($x234 (= (+ ?x63 ?x230 ?x176 ?x231 ?x232 ?x210) 0)))
 (let (($x246 (not $x234)))
 (let (($x302 (= (+ ?x72 ?x263 ?x239 ?x249 ?x274 ?x291) 0)))
 (let ((?x122 (* p00 b00)))
 (let ((?x121 (* q00 a00)))
 (let ((?x165 (* (- 1) ?x121)))
 (let (($x168 (= (+ (* a q) ?x165 ?x122 (* (- 1) (* p b))) 0)))
 (let ((?x135 (* r00 b00)))
 (let ((?x117 (* s00 a00)))
 (let ((?x124 (* (- 1) ?x117)))
 (let ((?x49 (* a s)))
 (let (($x150 (= (+ ?x49 (* (- 1) (* b r)) ?x124 ?x135) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x126 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x145 (= (+ ?x33 ?x126 ?x41 (* (- 1) (* q r))) 0)))
 (and $x145 $x150 $x168 $x234 $x302 (or $x246 (not $x390))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x404 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x364 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x183 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let (($x189 (= ?x183 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x228 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x328 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x395 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x126 (* (- 1) ?x37)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x126 ?x41) 0) (= ?x395 0) $x328 $x189 (= ?x228 0) (or (not $x189) (not (= ?x364 0)))))))))))))))))) :qid k!38))
 ))
 (let ((?x236 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x291 (* (- 1) (* s q00 a00))))
 (let ((?x274 (* q s00 a00)))
 (let ((?x249 (* (- 1) (* q r00 b00))))
 (let ((?x239 (* s p00 b00)))
 (let ((?x210 (* r q00 a00)))
 (let ((?x232 (* (- 1) (* p s00 a00))))
 (let ((?x231 (* (- 1) (* r p00 b00))))
 (let ((?x176 (* p r00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x263 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x230 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let (($x390 (= (+ ?x63 ?x230 ?x72 ?x263 ?x176 ?x231 ?x232 ?x210 ?x239 ?x249 ?x274 ?x291) 0)))
 (let (($x234 (= (+ ?x63 ?x230 ?x176 ?x231 ?x232 ?x210) 0)))
 (let (($x246 (not $x234)))
 (let (($x302 (= (+ ?x72 ?x263 ?x239 ?x249 ?x274 ?x291) 0)))
 (let ((?x122 (* p00 b00)))
 (let ((?x121 (* q00 a00)))
 (let ((?x165 (* (- 1) ?x121)))
 (let (($x168 (= (+ (* a q) ?x165 ?x122 (* (- 1) (* p b))) 0)))
 (let ((?x135 (* r00 b00)))
 (let ((?x117 (* s00 a00)))
 (let ((?x124 (* (- 1) ?x117)))
 (let ((?x49 (* a s)))
 (let (($x150 (= (+ ?x49 (* (- 1) (* b r)) ?x124 ?x135) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x126 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x145 (= (+ ?x33 ?x126 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x398 (and $x145 $x150 $x168 $x234 $x302 (or $x246 (not $x390)))))
 (let ((?x364 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x183 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let (($x189 (= ?x183 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x228 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x328 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x395 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x205 (and (= (+ (* (- 1) (* r q)) (* s p) ?x126 ?x41) 0) (= ?x395 0) $x328 $x189 (= ?x228 0) (or (not $x189) (not (= ?x364 0))))))
 (rewrite (= $x205 $x398))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x101 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x71 (= (- ?x68 ?x69) 0)))
 (let ((?x88 (- (* (- 1) b00 (- p q) r00) (* (- a b) p00 s00))))
 (let ((?x93 (+ ?x88 (* b00 p00 (- r s)) (* (- a b) q00 r00) (* a00 (- p q) s00))))
 (let (($x99 (or (not (= (- ?x93 (* a00 q00 (- r s))) 0)) (not $x71))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) ?x49 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) $x71 (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) $x99))))))))))))))))))) :qid k!38))
 ))
 (let ((?x386 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x364 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x183 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let (($x189 (= ?x183 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x228 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x328 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x395 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x126 (* (- 1) ?x37)))
 (let (($x205 (and (= (+ (* (- 1) (* r q)) (* s p) ?x126 ?x41) 0) (= ?x395 0) $x328 $x189 (= ?x228 0) (or (not $x189) (not (= ?x364 0))))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x71 (= (- ?x68 ?x69) 0)))
 (let ((?x88 (- (* (- 1) b00 (- p q) r00) (* (- a b) p00 s00))))
 (let ((?x93 (+ ?x88 (* b00 p00 (- r s)) (* (- a b) q00 r00) (* a00 (- p q) s00))))
 (let (($x99 (or (not (= (- ?x93 (* a00 q00 (- r s))) 0)) (not $x71))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x100 (and $x44 $x53 $x61 $x71 (= (- ?x80 ?x81) 0) $x99)))
 (rewrite (= $x100 $x205))))))))))))))))))))))))))))))))
 ))
 (let ((@x102 (asserted $x101)))
 (let ((@x271 (mp (mp @x102 (quant-intro (proof-bind ?x386) (= $x101 $x404)) $x404) (rewrite (= $x404 $x404)) $x404)))
 (let ((@x330 (mp~ (mp @x271 (quant-intro (proof-bind ?x236) (= $x404 $x217)) $x217) (sk (~ $x217 $x424)) $x424)))
 (let ((@x412 (mp @x330 (rewrite (= $x424 $x454)) $x454)))
 (let ((@x356 (and-elim @x412 $x381)))
 (let (($x260 (not (<= ?x444 0))))
 (let (($x219 (>= ?x444 0)))
 (let (($x201 (>= ?x379 0)))
 (let (($x235 (>= ?x388 0)))
 (let ((@x359 (and-elim @x412 $x391)))
 (let ((@x432 ((_ th-lemma arith farkas 1 -1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x391) $x235)) @x359 $x235) (hypothesis (not $x219)) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x402 $x201)) @x356 $x201) false)))
 (let ((@x355 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x445 $x260 (not $x219))) (unit-resolution (and-elim @x412 $x407) @x356 $x453) (or $x260 (not $x219)))))
 (let (($x242 (<= ?x388 0)))
 ((_ th-lemma arith farkas 1 -1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x391) $x242)) @x359 $x242) (unit-resolution @x355 (lemma @x432 $x219) $x260) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x402 $x178)) @x356 $x178) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        7
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-num-rows            6
 :arith-pivots              2
 :arith-row-summations      3
 :arith-tableau-max-columns 44
 :arith-tableau-max-rows    6
 :conflicts                 2
 :decisions                 1
 :del-clause                17
 :max-memory                19.55
 :memory                    19.06
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                508030
 :num-checks                1
 :propagations              12
 :rlimit-count              2242
 :time                      0.01
 :total-time                0.03)
