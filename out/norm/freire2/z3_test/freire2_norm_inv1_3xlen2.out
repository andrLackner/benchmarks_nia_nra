unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x414 (* (- 1) s!1)))
 (let ((?x301 (* r00 r00)))
 (let ((?x1105 (* (- 3) ?x301)))
 (let ((?x1763 (+ s00 ?x1105 ?x414 (* 3 (* r!2 r!2)))))
 (let (($x846 (<= ?x1763 0)))
 (let (($x385 (= ?x1763 0)))
 (let ((?x394 (* 6 r!2)))
 (let ((?x495 (+ 3 s!1 ?x394)))
 (let ((?x415 (+ ?x414 x!0)))
 (let ((?x406 (+ 1 r!2)))
 (let ((?x1875 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1826 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1814 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1673 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1302 (* ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1285 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1253 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1207 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1168 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1160 (* s00 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1122 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1109 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1102 (* s00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1080 (* s00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1025 (* ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x1013 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x872 (* ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x868 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x852 (* s00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x758 (* s00 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x681 (* s00 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x656 (* s00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x623 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x585 (* s00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x534 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x526 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x515 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x508 (* r00 r00 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x507 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x433 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x392 (* ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x284 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495 ?x495)))
 (let ((?x993 (+ ?x284 (* (- 1) ?x392) (* 3 ?x433) (* (- 3) ?x507) (* (- 3) ?x508) (* 3 ?x515) (* (- 3) ?x526) (* 3 ?x534) ?x585 (* (- 3) ?x623) (* (- 1) ?x656) (* (- 1) ?x681) (* (- 1) ?x758) ?x852 (* (- 1) ?x868) ?x872 (* 3 ?x1013) ?x1025 ?x1080 (* (- 1) ?x1102) ?x1109 (* 3 ?x1122) ?x1160 (* 3 ?x1168) (* (- 1) ?x1207) (* (- 3) ?x1253) (* (- 3) ?x1285) (* 3 ?x1302) (* (- 1) ?x1673) (* (- 3) ?x1814) (* 3 ?x1826) (* (- 3) ?x1875))))
 (let (($x802 (= ?x993 0)))
 (let (($x706 (not $x802)))
 (let ((?x1349 (* r00 r00 s!1)))
 (let ((?x692 (* 36 ?x1349)))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1223 (* 108 ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x650 (* 16 ?x1184)))
 (let ((?x1409 (* (- 9) s!1)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x837 (* (- 432) ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1306 (* (- 108) ?x805)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1149 (* (- 36) ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x862 (* 51 ?x591)))
 (let ((?x522 (* r00 x00)))
 (let ((?x719 (* 108 ?x522)))
 (let ((?x137 (* 9 s00)))
 (let ((?x479 (+ ?x137 (* (- 216) (* r00 r00 r00 s!1)) (* 108 (* s00 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x719 ?x862 ?x1149 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* (- 108) (* r00 x!0)) ?x1306 ?x837 ?x1409 (* 432 (* r00 r00 r00 x!0)) (* 216 (* s00 r00 r00 r00)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 15 (* s!1 s!1)) (* (- 108) (* s!1 x!0)) ?x650 (* 54 (* r00 s!1)) (* (- 216) (* x00 x!0)) ?x1223 ?x692 (* (- 66) (* s00 s!1)) (* 108 (* x00 s!1)) (* 108 (* x!0 x!0)) (* 108 (* s00 r00 s!1)))))
 (let ((?x1111 (+ ?x137 (* 6 (* s00 x!0)) (* 36 (* r00 x00 r!2)) (* (- 24) (* s00 r00)) (* 54 ?x522) (* 24 (* s!1 r!2)) (* 15 ?x591) ?x1149 (* 2 (* s00 s00 r00)) (* (- 54) (* r00 x!0)) (* (- 24) (* s00 r!2)) (* (- 2) (* s!1 s!1 r!2)) (* (- 6) ?x805) (* (- 36) (* r00 r00 x!0)) (* 54 (* x00 r!2)) (* 36 (* r00 r00 x00)) ?x1409 (* (- 54) (* x!0 r!2)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 s!1 r!2)) (* (- 3) (* s!1 s!1)) (* (- 4) (* r00 s!1 s!1)) (* (- 6) (* s!1 x!0)) (* 24 (* r00 s!1)) (* (- 36) (* r00 x!0 r!2)) ?x692 (* (- 12) (* s00 s!1)) (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)))))
 (let ((?x1117 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1099 (+ ?x44 (* (- 9) (* s00 r00)) (* 18 ?x522) (* 9 (* s!1 r!2)) (* 4 ?x591) (* (- 6) ?x647) (* (- 18) (* r00 x!0)) (* (- 9) (* s00 r!2)) (* 18 (* x00 r!2)) ?x1117 (* (- 18) (* x!0 r!2)) (* 6 (* s00 r00 r!2)) (* (- 2) (* s!1 s!1)) (* 9 (* r00 s!1)) (* (- 6) (* r00 s!1 r!2)) (* 6 ?x1349) (* (- 2) (* s00 s!1)))))
 (let ((?x1125 (* 3 r!2)))
 (let ((?x821 (* 6 x!0)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x426 (* s00 r00)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x1682 (+ ?x44 ?x500 ?x501 ?x504 ?x470 (* 2 (* s!1 r!2)) (* 4 (* s00 r!2)) ?x1117 ?x821 (* (- 12) (* r00 r00 r!2)) ?x1125)))
 (let (($x783 (and $x385 (= ?x1682 0) (= ?x1099 0) (= ?x1111 0) (= ?x479 0) $x706)))
 (let ((?x774 (+ 3 ?x394 s!1)))
 (let ((?x605 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x592 (* s00 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x538 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x543 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x2048 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x951 (* ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x1882 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x477 (* s00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x834 (* ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x828 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x584 (* s00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x612 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x1032 (* s00 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x1700 (* s00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x1472 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x1088 (* s00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x1016 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x1082 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x464 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x1707 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x1668 (* s00 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x1666 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x577 (* ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x977 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x978 (* s00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x848 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x1507 (* ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x2146 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x594 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x2121 (* ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x945 (* r00 r00 ?x406 ?x406 ?x415 ?x415 ?x415 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x417 (* r00 r00 ?x406 ?x406 ?x406 ?x406 ?x406 ?x415 ?x415 ?x415 ?x774 ?x774 ?x774 ?x774 ?x774)))
 (let ((?x524 (+ (* 3 ?x417) (* 3 ?x945) (* (- 1) ?x2121) (* 3 ?x594) (* 3 ?x2146) (* (- 3) ?x1507) (* 3 ?x848) ?x978 (* (- 3) ?x977) (* (- 3) ?x577) (* (- 3) ?x1666) ?x1668 ?x1707 (* 3 ?x464) (* (- 1) ?x1082) (* (- 1) ?x1016) (* (- 1) ?x1088) (* (- 3) ?x1472) (* (- 1) ?x1700) (* (- 1) ?x1032) (* (- 3) ?x612) (* (- 1) ?x584) (* 3 ?x828) ?x834 ?x477 (* (- 3) ?x1882) (* (- 1) ?x951) ?x2048 (* (- 3) ?x543) (* 3 ?x538) ?x592 ?x605)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x407 (* s!1 r00 r00)))
 (let ((?x664 (* (- 36) ?x407)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x812 (* 9 s!1)))
 (let ((?x723 (+ ?x812 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s!1 s!1)) ?x664 ?x1365 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x732 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1129 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x883 (* 12 (* s!1 s!1 s00)) ?x1371 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1375 (* 216 (* x!0 x00)) ?x1376)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1120 (+ ?x812 ?x987 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x564 ?x551 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x664 ?x916 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1000 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x696 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x806 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x890 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x1127 (+ (* 3 s!1) ?x378 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x541 ?x536 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x407) ?x604 (* 18 (* x!0 r00)) ?x648 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x427 (+ ?x1125 ?x1117 ?x821 ?x44 ?x500 ?x501 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x504 ?x470)))
 (let (($x772 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x301)) 0)))
 (let (($x329 (and $x772 (= ?x427 0) (= ?x1127 0) (= ?x1120 0) (= ?x723 0) (not (= ?x524 0)))))
 (let (($x925 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1388 (+ 3 ?x214 s)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x1394 (+ ?x280 x)))
 (let ((?x1385 (+ 1 r)))
 (let ((?x1952 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1936 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1773 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1438 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1414 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1396 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1386 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1341 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1110 (* ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1029 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x919 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x904 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x901 (* s00 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x878 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x845 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x831 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x801 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x799 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x787 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x711 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x679 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x663 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x598 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x595 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x540 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x528 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x527 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x525 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x492 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x349 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x335 (* r00 r00 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x326 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1348 (+ (* 3 ?x326) (* 3 ?x335) (* (- 1) ?x349) (* 3 ?x492) (* 3 ?x525) (* (- 3) ?x527) (* 3 ?x528) ?x540 (* (- 3) ?x595) (* (- 3) ?x598) (* (- 3) ?x663) ?x679 ?x711 (* 3 ?x787) (* (- 1) ?x799) (* (- 1) ?x801) (* (- 1) ?x831) (* (- 3) ?x845) (* (- 1) ?x878) (* (- 1) ?x901) (* (- 3) ?x904) (* (- 1) ?x919) (* 3 ?x1029) ?x1110 ?x1341 (* (- 3) ?x1386) (* (- 1) ?x1396) ?x1414 (* (- 3) ?x1438) (* 3 ?x1773) ?x1936 ?x1952)))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x565 (* s r00 r00)))
 (let ((?x864 (* (- 36) ?x565)))
 (let ((?x522 (* r00 x00)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x426 (* s00 r00)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1377 (+ ?x143 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s s)) ?x864 ?x1365 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x732 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1129 (* 108 (* s x)) (* (- 108) (* x x)) ?x883 (* 12 (* s s s00)) ?x1371 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1375 (* 216 (* x x00)) ?x1376)))
 (let (($x1378 (= ?x1377 0)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1079 (+ ?x143 ?x987 (* (- 24) (* r s)) (* 24 (* r s00)) ?x564 ?x551 ?x569 (* 54 (* r x)) (* 36 (* r x r00)) ?x864 ?x916 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1000 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x696 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x806 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x890 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1084 (= ?x1079 0)))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x745 (+ ?x47 ?x378 (* (- 9) (* r s)) (* 9 (* r s00)) ?x541 ?x536 ?x546 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x565) ?x604 (* 18 (* x r00)) ?x648 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x752 (= ?x745 0)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x505 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x500 ?x501 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x504 ?x470)))
 (let (($x506 (= ?x505 0)))
 (let ((?x301 (* r00 r00)))
 (let ((?x302 (* 3 ?x301)))
 (let ((?x331 (* (- 1) s00)))
 (let (($x334 (= (+ s ?x331 (* (- 3) (* r r)) ?x302) 0)))
 (and $x334 $x506 $x752 $x1084 $x1378 (not (= ?x1348 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1024 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x518 (+ 3 s ?x214)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x352 (+ x ?x280)))
 (let ((?x1385 (+ 1 r)))
 (let ((?x2068 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1914 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1452 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1475 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1446 (* s00 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1684 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1517 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x288 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x446 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x424 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x401 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x343 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1358 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1310 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1266 (* r00 r00 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1257 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1157 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1078 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1019 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x947 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x662 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x964 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1298 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1252 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x573 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x675 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1513 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1006 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x316 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1500 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x420 (* ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1402 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x2117 (+ (* (- 1) ?x1402) ?x420 (* 3 ?x1500) (* (- 1) ?x316) (* (- 1) ?x1006) (* (- 3) ?x1513) (* 3 ?x675) (* (- 1) ?x573) ?x1252 (* 3 ?x1298) ?x964 (* (- 3) ?x662) (* 3 ?x947) (* 3 ?x1019) ?x1078 (* (- 3) ?x1157) ?x1257 (* 3 ?x1266) (* (- 3) ?x1310) ?x1358 (* (- 1) ?x343) (* 3 ?x401) (* 3 ?x424) (* (- 3) ?x446) (* (- 3) ?x288) (* (- 3) ?x1517) (* (- 3) ?x1684) (* (- 1) ?x1446) ?x1475 (* (- 1) ?x1452) (* (- 1) ?x1914) ?x2068)))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1223 (* 108 ?x1346)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x862 (* 51 ?x591)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x650 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1306 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x837 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x719 (* 108 ?x522)))
 (let ((?x1230 (+ (* 216 (* r00 s00 x00)) ?x719 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x837 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1306 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x650 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x862 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1223)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x646 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x638 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x604 (* 18 (* r00 x)) ?x378 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x820 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1185 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1185 (= ?x820 0) (= ?x638 0) (= ?x646 0) (= ?x1230 0) (not (= ?x2117 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x800 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1388 (+ 3 ?x214 s)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x1394 (+ ?x280 x)))
 (let ((?x1385 (+ 1 r)))
 (let ((?x1952 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1936 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1773 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1438 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1414 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1396 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1386 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1341 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1110 (* ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1029 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x919 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x904 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x901 (* s00 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x878 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x845 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x831 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x801 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x799 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x787 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x711 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x679 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x663 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x598 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x595 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x540 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x528 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x527 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x525 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x492 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x349 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x335 (* r00 r00 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x326 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1348 (+ (* 3 ?x326) (* 3 ?x335) (* (- 1) ?x349) (* 3 ?x492) (* 3 ?x525) (* (- 3) ?x527) (* 3 ?x528) ?x540 (* (- 3) ?x595) (* (- 3) ?x598) (* (- 3) ?x663) ?x679 ?x711 (* 3 ?x787) (* (- 1) ?x799) (* (- 1) ?x801) (* (- 1) ?x831) (* (- 3) ?x845) (* (- 1) ?x878) (* (- 1) ?x901) (* (- 3) ?x904) (* (- 1) ?x919) (* 3 ?x1029) ?x1110 ?x1341 (* (- 3) ?x1386) (* (- 1) ?x1396) ?x1414 (* (- 3) ?x1438) (* 3 ?x1773) ?x1936 ?x1952)))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x565 (* s r00 r00)))
 (let ((?x864 (* (- 36) ?x565)))
 (let ((?x522 (* r00 x00)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x426 (* s00 r00)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1377 (+ ?x143 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s s)) ?x864 ?x1365 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x732 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1129 (* 108 (* s x)) (* (- 108) (* x x)) ?x883 (* 12 (* s s s00)) ?x1371 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1375 (* 216 (* x x00)) ?x1376)))
 (let (($x1378 (= ?x1377 0)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1079 (+ ?x143 ?x987 (* (- 24) (* r s)) (* 24 (* r s00)) ?x564 ?x551 ?x569 (* 54 (* r x)) (* 36 (* r x r00)) ?x864 ?x916 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1000 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x696 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x806 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x890 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1084 (= ?x1079 0)))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x745 (+ ?x47 ?x378 (* (- 9) (* r s)) (* 9 (* r s00)) ?x541 ?x536 ?x546 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x565) ?x604 (* 18 (* x r00)) ?x648 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x752 (= ?x745 0)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x505 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x500 ?x501 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x504 ?x470)))
 (let (($x506 (= ?x505 0)))
 (let ((?x301 (* r00 r00)))
 (let ((?x302 (* 3 ?x301)))
 (let ((?x331 (* (- 1) s00)))
 (let (($x334 (= (+ s ?x331 (* (- 3) (* r r)) ?x302) 0)))
 (let (($x2143 (and $x334 $x506 $x752 $x1084 $x1378 (not (= ?x1348 0)))))
 (let ((?x518 (+ 3 s ?x214)))
 (let ((?x352 (+ x ?x280)))
 (let ((?x2068 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1914 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1452 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1475 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1446 (* s00 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1684 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1517 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x288 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x446 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x424 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x401 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x343 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1358 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1310 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1266 (* r00 r00 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1257 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1157 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1078 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1019 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x947 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x662 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x964 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1298 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1252 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x573 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x675 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1513 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1006 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x316 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1500 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x420 (* ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1402 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x2117 (+ (* (- 1) ?x1402) ?x420 (* 3 ?x1500) (* (- 1) ?x316) (* (- 1) ?x1006) (* (- 3) ?x1513) (* 3 ?x675) (* (- 1) ?x573) ?x1252 (* 3 ?x1298) ?x964 (* (- 3) ?x662) (* 3 ?x947) (* 3 ?x1019) ?x1078 (* (- 3) ?x1157) ?x1257 (* 3 ?x1266) (* (- 3) ?x1310) ?x1358 (* (- 1) ?x343) (* 3 ?x401) (* 3 ?x424) (* (- 3) ?x446) (* (- 3) ?x288) (* (- 3) ?x1517) (* (- 3) ?x1684) (* (- 1) ?x1446) ?x1475 (* (- 1) ?x1452) (* (- 1) ?x1914) ?x2068)))
 (let ((?x1223 (* 108 ?x1346)))
 (let ((?x137 (* 9 s00)))
 (let ((?x862 (* 51 ?x591)))
 (let ((?x650 (* 16 ?x1184)))
 (let ((?x1306 (* (- 108) ?x805)))
 (let ((?x837 (* (- 432) ?x882)))
 (let ((?x719 (* 108 ?x522)))
 (let ((?x1230 (+ (* 216 (* r00 s00 x00)) ?x719 (* (- 54) (* r00 s00)) (* 15 ?x545) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x837 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1306 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x650 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x862 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1223)))
 (let ((?x646 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x638 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x604 (* 18 (* r00 x)) ?x378 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x820 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x469))))
 (let (($x1315 (and (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) ?x301)) 0) (= ?x820 0) (= ?x638 0) (= ?x646 0) (= ?x1230 0) (not (= ?x2117 0)))))
 (rewrite (= $x1315 $x2143)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x277 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (- x s)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x271 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x268 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x267 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x265 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x259 (* ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x258 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x257 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x256 (* 3 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x255 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x253 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x252 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x250 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x248 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x246 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x244 (* 3 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x243 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x241 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x239 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)))
 (let ((?x238 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x237 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x235 (* 3 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x233 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x232 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x231 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x229 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x227 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x223 (* 3 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x222 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x221 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x219 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x218 (* ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x217 (* (- 1) ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)))
 (let ((?x234 (+ (- (+ (- (- (- (+ ?x217 ?x218 ?x219) ?x221) ?x222) ?x223) ?x227) ?x229) ?x231 ?x232 ?x233)))
 (let ((?x249 (+ (- (+ (- (+ (- ?x234 ?x235) ?x237 ?x238 ?x239) ?x241) ?x243 ?x244) ?x246) ?x248)))
 (let ((?x264 (- (- (- (- (- (+ (- ?x249 ?x250) ?x252 ?x253) ?x255) ?x256) ?x257) ?x258) ?x259)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (+ (- (- (+ ?x264 ?x265) ?x267) ?x268) ?x271) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1839 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x518 (+ 3 s ?x214)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x352 (+ x ?x280)))
 (let ((?x1385 (+ 1 r)))
 (let ((?x2068 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1914 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1452 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1475 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1446 (* s00 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1684 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1517 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x288 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x446 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x424 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x401 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x343 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1358 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1310 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1266 (* r00 r00 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1257 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1157 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1078 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1019 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x947 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x662 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x964 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1298 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1252 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x573 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x675 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1513 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1006 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x316 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1500 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x420 (* ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x1402 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x352 ?x352 ?x352 ?x518 ?x518 ?x518 ?x518 ?x518)))
 (let ((?x2117 (+ (* (- 1) ?x1402) ?x420 (* 3 ?x1500) (* (- 1) ?x316) (* (- 1) ?x1006) (* (- 3) ?x1513) (* 3 ?x675) (* (- 1) ?x573) ?x1252 (* 3 ?x1298) ?x964 (* (- 3) ?x662) (* 3 ?x947) (* 3 ?x1019) ?x1078 (* (- 3) ?x1157) ?x1257 (* 3 ?x1266) (* (- 3) ?x1310) ?x1358 (* (- 1) ?x343) (* 3 ?x401) (* 3 ?x424) (* (- 3) ?x446) (* (- 3) ?x288) (* (- 3) ?x1517) (* (- 3) ?x1684) (* (- 1) ?x1446) ?x1475 (* (- 1) ?x1452) (* (- 1) ?x1914) ?x2068)))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1223 (* 108 ?x1346)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x862 (* 51 ?x591)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x650 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1306 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x837 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x719 (* 108 ?x522)))
 (let ((?x1230 (+ (* 216 (* r00 s00 x00)) ?x719 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x837 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1306 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x650 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x862 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1223)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x646 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x638 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x604 (* 18 (* r00 x)) ?x378 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x820 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1185 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1315 (and $x1185 (= ?x820 0) (= ?x638 0) (= ?x646 0) (= ?x1230 0) (not (= ?x2117 0)))))
 (let ((?x216 (- x s)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x271 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x268 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x267 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x265 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x259 (* ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x258 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x257 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x256 (* 3 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x255 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x253 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x252 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x250 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x248 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x246 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x244 (* 3 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x243 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x241 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x239 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)))
 (let ((?x238 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x237 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x235 (* 3 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x233 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x232 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x231 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x229 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x227 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x223 (* 3 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x222 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x221 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x219 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x218 (* ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x217 (* (- 1) ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)))
 (let ((?x234 (+ (- (+ (- (- (- (+ ?x217 ?x218 ?x219) ?x221) ?x222) ?x223) ?x227) ?x229) ?x231 ?x232 ?x233)))
 (let ((?x249 (+ (- (+ (- (+ (- ?x234 ?x235) ?x237 ?x238 ?x239) ?x241) ?x243 ?x244) ?x246) ?x248)))
 (let ((?x264 (- (- (- (- (- (+ (- ?x249 ?x250) ?x252 ?x253) ?x255) ?x256) ?x257) ?x258) ?x259)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x276 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (+ (- (- (+ ?x264 ?x265) ?x267) ?x268) ?x271) 0))))))
 (rewrite (= $x276 $x1315))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x278 (asserted $x277)))
 (let ((@x1836 (mp (mp @x278 (quant-intro (proof-bind ?x1839) (= $x277 $x1024)) $x1024) (rewrite (= $x1024 $x1024)) $x1024)))
 (let ((@x900 (mp~ (mp @x1836 (quant-intro (proof-bind ?x800) (= $x1024 $x925)) $x925) (sk (~ $x925 $x329)) $x329)))
 (let ((@x709 (mp @x900 (rewrite (= $x329 $x783)) $x783)))
 (let ((@x1203 (and-elim @x709 $x385)))
 (let ((@x1677 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x385) $x846)) @x1203 $x846)))
 (let (($x2043 (>= ?x1763 0)))
 (let ((@x1897 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x385) $x2043)) @x1203 $x2043)))
 (let (($x869 (not (<= ?x993 0))))
 (let (($x436 (>= ?x993 0)))
 (let ((@x642 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x802 $x869 (not $x436))) (and-elim @x709 $x706) (or $x869 (not $x436)))))
 (let ((@x1118 (unit-resolution @x642 (lemma ((_ th-lemma arith) (hypothesis (not $x436)) @x1897 @x1677 false) $x436) $x869)))
 ((_ th-lemma arith) @x1118 @x1897 @x1677 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        35
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             676
 :arith-nonlinear-bounds    28
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      8
 :arith-tableau-max-columns 127
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                23.83
 :memory                    19.57
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                354905115
 :num-checks                1
 :propagations              12
 :rlimit-count              249019
 :time                      0.28
 :total-time                0.31)
