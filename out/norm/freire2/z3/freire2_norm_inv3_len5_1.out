unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x7382 (* (- 1) s!1)))
 (let ((?x393 (* r00 r00)))
 (let ((?x4260 (* (- 3) ?x393)))
 (let ((?x9216 (+ s00 ?x4260 (* 3 (* r!2 r!2)) ?x7382)))
 (let (($x2527 (<= ?x9216 0)))
 (let (($x9219 (= ?x9216 0)))
 (let ((?x1519 (+ 3 (* 6 r!2) s!1)))
 (let ((?x4540 (+ 1 r!2)))
 (let ((?x4816 (* (- 9) (* r00 s00 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519))))
 (let ((?x9291 (* 6 (* r00 s00 ?x4540 ?x4540 ?x4540 ?x4540 (+ ?x7382 x!0) ?x1519))))
 (let ((?x1235 (+ ?x7382 x!0)))
 (let ((?x9289 (* 9 (* r00 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x3218 (* 18 (* r00 x00 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519))))
 (let ((?x9280 (* (- 2) (* s00 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x9278 (* (- 3) (* ?x4540 ?x4540 ?x4540 ?x1235 ?x1519 ?x1519))))
 (let ((?x9276 (* 18 (* x00 ?x4540 ?x4540 ?x4540 ?x4540 ?x1235 ?x1519))))
 (let ((?x9274 (* (- 6) (* r00 ?x4540 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x9272 (* (- 18) (* r00 ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1235 ?x1235))))
 (let ((?x9270 (* 18 (* x00 ?x4540 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519))))
 (let ((?x9268 (* 6 (* r00 r00 ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1235 ?x1519))))
 (let ((?x9266 (* (- 9) (* s00 ?x4540 ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1235))))
 (let ((?x9264 (* (- 9) (* s00 ?x4540 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519))))
 (let ((?x9262 (* (- 18) (* r00 ?x1235 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519))))
 (let ((?x9260 (* 9 (* r00 ?x4540 ?x4540 ?x4540 ?x1235 ?x1519 ?x1519))))
 (let ((?x9247 (* 9 (* r00 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x9246 (* (- 6) (* r00 ?x4540 ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1235 ?x1519))))
 (let ((?x9249 (* (- 2) (* s00 ?x4540 ?x4540 ?x4540 ?x1235 ?x1519 ?x1519))))
 (let ((?x9243 (* 18 (* x00 ?x4540 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519))))
 (let ((?x6639 (* (- 18) (* r00 ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1519))))
 (let ((?x2670 (* (- 6) (* r00 r00 s00 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519))))
 (let ((?x6564 (* 81 (* r!2 s!1 x!0 x!0 x!0))))
 (let ((?x2664 (* (- 2) (* s00 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x6310 (* 6 (* r00 r00 ?x4540 ?x4540 ?x4540 ?x1235 ?x1519 ?x1519))))
 (let ((?x2972 (* (- 54) (* r!2 r!2 s!1 s!1 s!1))))
 (let ((?x2975 (* (- 18) (* r00 ?x4540 ?x4540 ?x1235 ?x1519 ?x1519 ?x1519))))
 (let ((?x5349 (* (- 18) (* ?x4540 ?x1235 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519))))
 (let ((?x5347 (* 6 (* r00 r00 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x5342 (* (- 20) (* ?x4540 ?x4540 ?x4540 ?x1235 ?x1519 ?x1519 ?x1519))))
 (let ((?x5340 (* (- 2) (* ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x5177 (* 18 (* x!0 x!0 x!0))))
 (let ((?x5326 (* 78 (* s!1 x!0 x!0 x!0))))
 (let ((?x5322 (* 54 (* s!1 s!1 x!0))))
 (let ((?x5319 (* s!1 s!1 s!1)))
 (let ((?x6235 (* (- 18) ?x5319)))
 (let ((?x5316 (* 4 (* s00 s00 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519))))
 (let ((?x5175 (* (- 63) (* r!2 s!1 s!1 s!1))))
 (let ((?x5310 (* (- 24) (* s!1 s!1 s!1 s!1))))
 (let ((?x5305 (* 189 (* r!2 s!1 s!1 x!0))))
 (let ((?x5299 (* (- 189) (* r!2 s!1 x!0 x!0))))
 (let ((?x5278 (* (- 126) (* s!1 s!1 x!0 x!0))))
 (let ((?x5204 (* 9 (* ?x4540 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x5318 (* (- 54) (* s!1 x!0 x!0))))
 (let ((?x4983 (* 63 (* r!2 x!0 x!0 x!0))))
 (let ((?x5301 (* 90 (* s!1 s!1 s!1 x!0))))
 (let ((?x656 (* 6 (* r00 s00 ?x4540 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519))))
 (let ((?x2977 (* (- 2) (* ?x4540 ?x4540 ?x1519 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x2969 (* 6 (* r00 r00 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x2955 (* (- 9) (* s00 ?x4540 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519))))
 (let ((?x2945 (* (- 18) (* ?x4540 ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1235 ?x1235))))
 (let ((?x2935 (* 4 (* s00 s00 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519))))
 (let ((?x2923 (* 3 (* s00 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519))))
 (let ((?x2793 (* 9 (* ?x4540 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x7376 (* (- 6) (* r00 ?x4540 ?x4540 ?x4540 ?x4540 ?x1235 ?x1519 ?x1519))))
 (let ((?x2810 (* (- 9) (* r00 s00 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519))))
 (let ((?x2807 (* 9 (* ?x4540 ?x4540 ?x4540 ?x4540 ?x1235 ?x1519 ?x1519))))
 (let ((?x2674 (* (- 2) (* ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1235 ?x1519 ?x1519))))
 (let ((?x2672 (* 9 (* r00 ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1235 ?x1519))))
 (let ((?x6583 (* (- 2) (* s00 ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1235 ?x1519))))
 (let ((?x2644 (* (- 135) (* r!2 s!1 s!1 x!0 x!0))))
 (let ((?x2633 (* (- 18) (* r!2 x!0 x!0 x!0 x!0))))
 (let ((?x2634 (* (- 18) (* ?x4540 ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1519))))
 (let ((?x2628 (* (- 27) (* r!2 s!1 s!1 s!1 s!1))))
 (let ((?x2621 (* (- 6) (* r00 r00 s00 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519))))
 (let ((?x2618 (* (- 6) (* r00 ?x4540 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x2567 (* 54 (* r!2 r!2 x!0 x!0 x!0))))
 (let ((?x2569 (* (- 162) (* r!2 r!2 s!1 x!0 x!0))))
 (let ((?x2565 (* 9 (* ?x4540 ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1235 ?x1519))))
 (let ((?x2559 (* (- 3) (* ?x4540 ?x4540 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x2503 (* 162 (* r!2 r!2 s!1 s!1 x!0))))
 (let ((?x2663 (* 6 (* r00 s00 ?x4540 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519))))
 (let ((?x2637 (* (- 18) (* x!0 x!0 x!0 x!0))))
 (let ((?x2629 (* 18 (* r00 x00 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519))))
 (let ((?x2619 (* 99 (* r!2 s!1 s!1 s!1 x!0))))
 (let ((?x2519 (* (- 9) (* s00 ?x4540 ?x4540 ?x4540 ?x4540 ?x1235 ?x1519))))
 (let ((?x1481 (* (- 3) (* ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1235 ?x1519))))
 (let ((?x6150 (* 6 (* r00 s00 ?x4540 ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1235))))
 (let ((?x1334 (* (- 3) (* ?x1235 ?x1235 ?x1235 ?x1519 ?x1519 ?x1519 ?x1519))))
 (let ((?x704 (* 3 (* s00 ?x4540 ?x4540 ?x1519 ?x1519 ?x1519))))
 (let ((?x9257 (* (- 2) (* ?x1235 ?x1235 ?x1235 ?x1519 ?x1519))))
 (let ((?x510 (* 18 (* x00 ?x4540 ?x4540 ?x4540 ?x4540 ?x1235 ?x1235 ?x1235))))
 (let ((?x1709 (+ (* 18 (* r00 r00 s!1 s!1 s!1 x!0)) (* (- 18) (* r00 r00 s!1 s!1 x!0 x!0)) (* (- 21) (* r00 s!1 s!1 s!1 s!1)) (* 36 (* r00 r00 r!2 x!0 x!0 x!0)) (* 54 (* r00 x00 r!2 x!0 x!0 x!0)) (* 63 (* s00 r!2 r!2 r!2 x!0)) ?x510 (* (- 6) (* r00 r00 s!1 s!1 s!1 s!1)) ?x9257 ?x704 (* (- 9) (* s00 r!2 r!2 r!2 s!1 x!0 x!0)) (* (- 27) (* s00 r00 r!2 r!2 r!2 s!1 s!1 x!0)) (* 6 (* r00 r!2 s!1 s!1 s!1 s!1)) ?x1334 ?x6150 ?x1481 (* 108 (* r00 r00 r!2 s!1 s!1 x!0)) (* (- 12) (* s00 s00 r!2 s!1 s!1 s!1)) (* (- 4) (* s00 s00 r!2 r!2 r!2 s!1 s!1 s!1)) (* (- 12) (* s00 s00 r!2 r!2 s!1 s!1 s!1)) (* (- 36) (* r00 r00 r!2 s!1 s!1 s!1)) (* (- 108) (* r00 r00 r!2 s!1 x!0 x!0)) (* (- 36) (* r00 r!2 r!2 x!0 x!0 x!0)) (* (- 6) (* r00 r!2 s!1 x!0 x!0 x!0)) (* (- 54) (* x00 s!1 x!0 x!0)) (* 36 (* s00 s00 r!2 s!1 s!1 x!0)) (* (- 54) (* r00 r00 s!1 x!0 x!0)) (* 18 (* r00 r00 x!0 x!0 x!0)) (* (- 18) (* r00 r00 s!1 s!1 s!1)) (* 54 (* x00 r!2 s!1 s!1 x!0)) (* 36 (* r00 r!2 r!2 s!1 s!1 s!1)) (* (- 12) (* s00 r00 x!0 x!0 x!0)) ?x2519 ?x2619 ?x2629 ?x2637 ?x2663 (* (- 108) (* r00 r!2 r!2 s!1 s!1 x!0)) ?x2503 (* (- 9) (* s00 r00 r!2 r!2 r!2 x!0 x!0 x!0)) ?x2559 ?x2565 ?x2569 ?x2567 ?x2618 ?x2621 ?x2628 ?x2634 ?x2633 ?x2644 ?x6583 ?x2672 ?x2674 ?x2807 ?x2810 ?x7376 ?x2793 ?x2923 ?x2935 ?x2945 ?x2955 ?x2969 ?x2977 (* (- 81) (* s00 r00 r!2 r!2 s!1 s!1 x!0)) (* 36 (* s00 r00 r00 s!1 x!0 x!0)) (* (- 12) (* s00 r00 r00 x!0 x!0 x!0)) (* (- 270) (* r00 x00 r!2 s!1)) (* (- 36) (* s00 r00 r00 s!1 s!1 x!0)) (* 9 (* s00 r!2 s!1 x!0)) (* (- 60) (* s00 s00 r!2 s!1)) (* 18 (* r00 x00 s!1 x!0)) (* 4 (* s00 s00 r!2 r!2 r!2 x!0 x!0 x!0)) (* 12 (* s00 s00 r!2 s!1 x!0)) (* (- 6) (* s00 r00 r00 s!1 x!0)) (* 4 (* s00 s00 r!2 r!2 r!2 s!1 x!0)) (* 108 (* r00 x00 s!1 s!1 x!0)) (* 9 (* s00 r!2 r!2 x!0 x!0 x!0)) (* 54 (* r00 x00 r!2 r!2 r!2 s!1 s!1 x!0)) (* (- 6) (* s00 s!1 s!1 s!1 x!0)) (* 3 (* s00 r!2 r!2 r!2 x!0 x!0 x!0)) (* 18 (* r00 x00 r!2 r!2 r!2 x!0 x!0 x!0)) (* (- 108) (* s00 s00 r!2 r!2 s!1)) (* (- 18) (* s00 r00 r00 x!0)) (* (- 54) (* r00 x00 r!2 r!2 s!1 s!1 s!1)) (* 27 (* s00 r00 r!2 r!2 r!2 s!1 x!0 x!0)) (* 81 (* s00 r00 r!2 r!2 s!1 x!0 x!0)) (* (- 108) (* r00 x00 s!1 x!0 x!0)) (* (- 162) (* r00 x00 r!2 r!2 s!1 x!0 x!0)) (* (- 36) (* s00 r!2 s!1 s!1 x!0)) (* 60 (* s00 s00 r!2 x!0)) (* 36 (* r00 x00 x!0 x!0 x!0)) (* (- 18) (* s00 r00 r00 r!2 r!2 r!2 s!1 s!1 x!0)) (* (- 54) (* r00 x00 r!2 s!1 s!1 s!1)) (* 18 (* s00 r00 r00 r!2 r!2 s!1 s!1 s!1)) (* 18 (* s00 r00 r00 r!2 s!1 s!1 s!1)) (* (- 54) (* s00 r00 r00 r!2 s!1 s!1 x!0)) (* 6 (* s00 r00 r00 r!2 r!2 r!2 s!1 s!1 s!1)) (* (- 54) (* s00 r00 r00 r!2 r!2 s!1 s!1 x!0)) (* (- 84) (* s00 s00 r!2 r!2 r!2 s!1)) (* 108 (* s00 s00 r!2 r!2 x!0)) (* (- 3) (* s00 r!2 r!2 r!2 s!1 s!1)) (* (- 2) (* s00 s!1 x!0 x!0 x!0)) (* 162 (* r00 x00 r!2 s!1 s!1 x!0)) (* 18 (* s00 r!2 r!2 r!2 r!2 x!0)) (* (- 9) (* s00 r!2 s!1 s!1)) (* 6 (* s00 s!1 s!1 x!0 x!0)) (* 2 (* s00 s!1 s!1 s!1 s!1)) (* 3 (* s00 s!1 x!0)) (* 9 (* s00 r!2 r!2 s!1 x!0)) (* 6 (* s00 r00 r00 s!1 s!1)) (* 18 (* s00 r00 r00 r!2 s!1 s!1)) (* (- 18) (* s00 r00 r00 r!2 x!0 x!0 x!0)) (* (- 18) (* s00 r00 r00 r!2 r!2 x!0 x!0 x!0)) (* (- 6) (* s00 r00 r00 r!2 r!2 r!2 x!0 x!0 x!0)) (* 54 (* s00 r00 r00 r!2 s!1 x!0 x!0)) (* 54 (* s00 r00 r00 r!2 r!2 s!1 x!0 x!0)) (* 162 (* r00 x00 r!2 r!2 s!1 s!1 x!0)) (* 18 (* s00 r00 r00 r!2 r!2 r!2 s!1 x!0 x!0)) (* 18 (* s00 r00 r00 r!2 r!2 s!1 s!1)) (* 6 (* s00 r00 r00 r!2 r!2 r!2 s!1 s!1)) (* (- 90) (* s00 r00 r00 r!2 x!0)) (* (- 162) (* s00 r00 r00 r!2 r!2 x!0)) (* (- 126) (* s00 r00 r00 r!2 r!2 r!2 x!0)) (* (- 36) (* s00 r00 r00 r!2 r!2 r!2 r!2 x!0)) (* (- 6) (* s00 r00 r00 r!2 r!2 r!2 s!1 x!0)) (* (- 18) (* s00 r00 r00 r!2 r!2 s!1 x!0)) (* (- 63) (* s00 r!2 r!2 r!2 s!1)) (* 45 (* s00 r!2 x!0)) (* 54 (* r00 x00 r!2 r!2 x!0 x!0 x!0)) (* 36 (* s00 r00 r00 r!2 r!2 r!2 r!2 s!1)) (* 162 (* s00 r00 r00 r!2 r!2 s!1)) (* 126 (* s00 r00 r00 r!2 r!2 r!2 s!1)) (* 90 (* s00 r00 r00 r!2 s!1)) (* (- 9) (* s00 r!2 r!2 s!1 s!1)) (* (- 24) (* s00 s00 s!1 x!0 x!0)) (* 54 (* r00 x00 r!2 s!1 x!0)) (* 54 (* x00 s!1 s!1 x!0)) (* (- 12) (* s00 s00 r!2 r!2 r!2 s!1 x!0 x!0)) (* 54 (* s00 r00 r!2 r!2 r!2 r!2 s!1)) (* 189 (* s00 r00 r!2 r!2 r!2 s!1)) (* 63 (* s00 r00 r!2 s!1 x!0 x!0)) ?x656 (* (- 4) (* s00 s00 r!2 r!2 r!2 s!1 s!1)) (* (- 8) (* s00 s00 s!1 s!1 s!1)) (* (- 54) (* x00 r!2 s!1 x!0 x!0)) (* 12 (* s00 s00 x!0)) (* (- 162) (* r00 x00 r!2 s!1 x!0 x!0)) (* (- 21) (* s00 r00 r!2 x!0 x!0 x!0)) ?x5301 (* 84 (* s00 s00 r!2 r!2 r!2 x!0)) ?x4983 ?x5318 (* (- 18) (* s00 r!2 r!2 r!2 r!2 s!1)) ?x5204 ?x5278 ?x5299 ?x5305 ?x5310 ?x5175 ?x5316 ?x6235 ?x5322 ?x5326 ?x5177 ?x5340 ?x5342 ?x5347 ?x5349 (* (- 4) (* s00 s00 s!1 s!1)) ?x2975 ?x2972 (* (- 24) (* s00 s00 r!2 r!2 r!2 r!2 s!1)) (* 24 (* s00 s00 r!2 r!2 r!2 r!2 x!0)) (* 54 (* r00 r00 s!1 s!1 x!0)) (* 108 (* r00 r!2 r!2 s!1 x!0 x!0)) ?x6310 (* 108 (* r00 x00 r!2 r!2 r!2 r!2 x!0)) (* 6 (* r00 r00 s!1 x!0 x!0 x!0)) (* (- 12) (* s00 r!2 x!0 x!0 x!0)) (* (- 54) (* s00 r00 r!2 r!2 r!2 r!2 x!0)) (* (- 9) (* s00 r00 s!1 x!0)) (* (- 108) (* r00 x00 r!2 r!2 r!2 r!2 s!1)) (* (- 27) (* s00 r00 r!2 s!1 x!0)) ?x2664 (* (- 27) (* s00 r00 r!2 r!2 s!1 x!0)) (* (- 9) (* s00 r00 r!2 r!2 r!2 s!1 x!0)) (* 27 (* s00 r00 r!2 s!1 s!1)) (* 378 (* r00 x00 r!2 r!2 r!2 x!0)) (* 9 (* s00 r00 r!2 r!2 r!2 s!1 s!1)) (* 9 (* s00 r00 s!1 s!1)) (* (- 54) (* r00 x00 s!1)) (* (- 54) (* r00 x00 r!2 r!2 r!2 s!1 x!0 x!0)) (* 18 (* x00 x!0 x!0 x!0)) (* 18 (* x00 r!2 x!0 x!0 x!0)) (* 27 (* s00 r00 r!2 r!2 s!1 s!1)) (* 486 (* r00 x00 r!2 r!2 x!0)) (* 270 (* r00 x00 r!2 x!0)) (* (- 243) (* s00 r00 r!2 r!2 x!0)) (* 54 (* r00 x00 x!0)) (* (- 135) (* s00 r00 r!2 x!0)) (* (- 378) (* r00 x00 r!2 r!2 r!2 s!1)) ?x6564 (* (- 18) (* r00 x00 s!1 s!1)) (* 135 (* s00 r00 r!2 s!1)) (* (- 486) (* r00 x00 r!2 r!2 s!1)) (* 243 (* s00 r00 r!2 r!2 s!1)) (* (- 54) (* r00 x00 r!2 s!1 s!1)) ?x2670 (* (- 54) (* r00 x00 r!2 r!2 s!1 s!1)) (* (- 36) (* s00 r00 s!1 s!1 x!0)) (* 36 (* s00 r00 s!1 x!0 x!0)) ?x6639 (* (- 27) (* s00 r00 x!0)) (* 27 (* s00 r00 s!1)) (* (- 3) (* s00 s!1 s!1)) (* 12 (* s00 r00 r00 s!1 s!1 s!1)) (* (- 18) (* x00 s!1 s!1 s!1)) (* (- 63) (* s00 r00 r!2 s!1 s!1 x!0)) (* 21 (* s00 r00 r!2 s!1 s!1 s!1)) (* (- 36) (* s00 s00 r!2 s!1 x!0 x!0)) (* 36 (* s00 s00 r!2 r!2 s!1 s!1 x!0)) (* 24 (* s00 s00 s!1 s!1 x!0)) (* (- 18) (* x00 r!2 s!1 s!1 s!1)) (* 12 (* s00 s00 r!2 r!2 x!0 x!0 x!0)) (* 12 (* s00 r00 s!1 s!1 s!1)) (* (- 18) (* r00 r!2 s!1 s!1 s!1 x!0)) (* 12 (* s00 s00 r!2 x!0 x!0 x!0)) (* (- 18) (* s00 r00 r00 r!2 s!1 x!0)) (* 18 (* r00 r!2 s!1 s!1 x!0 x!0)) (* 18 (* s00 r00 r00 s!1)) (* (- 81) (* s00 r!2 r!2 s!1)) (* (- 12) (* s00 s00 r!2 s!1 s!1)) (* 4 (* s00 s00 s!1 x!0)) (* 81 (* s00 r!2 r!2 x!0)) (* (- 36) (* r00 x00 s!1 s!1 s!1)) (* (- 9) (* r00 s!1 s!1 s!1)) (* 18 (* r00 x00 r!2 r!2 r!2 s!1 x!0)) (* 27 (* r00 s!1 s!1 x!0)) (* (- 27) (* r00 s!1 x!0 x!0)) (* (- 18) (* r00 x00 r!2 r!2 r!2 s!1 s!1)) (* (- 36) (* s00 s00 r!2 r!2 s!1 x!0 x!0)) (* 12 (* s00 s00 r!2 r!2 r!2 s!1 s!1 x!0)) (* (- 27) (* s00 r00 r!2 r!2 x!0 x!0 x!0)) (* (- 9) (* s00 x!0 x!0 x!0)) (* (- 18) (* r00 x00 r!2 r!2 r!2 s!1 s!1 s!1)) (* 9 (* s00 r00 r!2 r!2 r!2 s!1 s!1 s!1)) (* 27 (* s00 r00 r!2 r!2 s!1 s!1 s!1)) (* 81 (* r00 s!1 s!1 s!1 x!0)) (* (- 12) (* s00 s00 s!1)) (* 9 (* s00 r!2 r!2 r!2 s!1 s!1 x!0)) (* (- 9) (* s00 r!2 r!2 s!1 s!1 s!1)) (* (- 12) (* s00 s00 r!2 r!2 s!1 s!1)) (* 3 (* s00 r!2 r!2 r!2 s!1 x!0)) (* 9 (* s00 s!1 s!1 s!1)) (* (- 27) (* s00 s!1 s!1 x!0)) (* 27 (* s00 s!1 x!0 x!0)) (* (- 3) (* s00 r!2 r!2 r!2 s!1 s!1 s!1)) (* (- 117) (* r00 s!1 s!1 x!0 x!0)) (* 27 (* s00 r!2 r!2 s!1 s!1 x!0)) (* (- 27) (* s00 r!2 r!2 s!1 x!0 x!0)) (* (- 18) (* r00 x!0 x!0 x!0 x!0)) (* 54 (* r00 x00 r!2 r!2 s!1 x!0)) (* (- 189) (* s00 r00 r!2 r!2 r!2 x!0)) (* 12 (* s00 r!2 s!1 s!1 s!1)) ?x9243 ?x9249 ?x9246 ?x9247 ?x9260 ?x9262 ?x9264 ?x9266 ?x9268 ?x9270 ?x9272 ?x9274 ?x9276 ?x9278 ?x9280 ?x3218 ?x9289 ?x9291 (* (- 9) (* s00 s!1)) (* 9 (* s00 x!0)) (* (- 45) (* s00 r!2 s!1)) (* 8 (* s00 s00 x!0 x!0 x!0)) (* 75 (* r00 s!1 x!0 x!0 x!0)) (* 36 (* s00 r!2 s!1 x!0 x!0)) (* 12 (* s00 s00 r!2 r!2 s!1 x!0)) (* 9 (* r00 x!0 x!0 x!0)) ?x4816)))
 (let (($x1703 (= ?x1709 0)))
 (let (($x3531 (not $x1703)))
 (let ((?x9317 (* r00 r00 s!1)))
 (let ((?x9071 (* 36 ?x9317)))
 (let ((?x3125 (* (- 9) s!1)))
 (let ((?x1440 (* x00 x00)))
 (let ((?x617 (* 108 ?x1440)))
 (let ((?x1278 (* s00 s00 s00)))
 (let ((?x5930 (* 16 ?x1278)))
 (let ((?x976 (* r00 r00 r00 x00)))
 (let ((?x5741 (* (- 432) ?x976)))
 (let ((?x899 (* s00 x00)))
 (let ((?x5527 (* (- 108) ?x899)))
 (let ((?x741 (* s00 r00 r00)))
 (let ((?x9459 (* (- 36) ?x741)))
 (let ((?x685 (* s00 s00)))
 (let ((?x8465 (* 51 ?x685)))
 (let ((?x616 (* r00 x00)))
 (let ((?x2544 (* 108 ?x616)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3224 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x2544 ?x8465 ?x9459 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x5527 (* (- 108) (* s!1 x!0)) ?x5741 (* 216 (* s00 r00 r00 r00)) ?x5930 ?x617 ?x3125 (* (- 4) ?x5319) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 108 (* s00 r00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 15 (* s!1 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* 432 (* r00 r00 r00 x!0)) ?x9071 (* (- 108) (* r00 x!0)) (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)) (* 108 (* s00 x!0)) (* 108 (* x00 s!1)) (* 108 (* x!0 x!0)))))
 (let (($x6330 (= ?x3224 0)))
 (let ((?x971 (* r00 r00 x00)))
 (let ((?x5423 (* 36 ?x971)))
 (let ((?x4721 (* (- 6) ?x899)))
 (let ((?x5425 (* 15 ?x685)))
 (let ((?x4709 (* 54 ?x616)))
 (let ((?x751 (+ ?x137 (* (- 24) (* s00 r00)) ?x4709 ?x5425 ?x9459 (* 2 (* s00 s00 r00)) ?x4721 (* (- 6) (* s!1 x!0)) ?x5423 (* 24 (* r!2 s!1)) ?x3125 (* (- 2) (* r!2 s!1 s!1)) (* 2 (* s00 r00 s!1)) (* (- 3) (* s!1 s!1)) (* (- 54) (* r!2 x!0)) (* (- 24) (* s00 r!2)) ?x9071 (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) (* (- 36) (* r00 r!2 x!0)) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* 6 (* x00 s!1)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 r!2 s!1)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)))))
 (let (($x2962 (= ?x751 0)))
 (let ((?x7242 (* (- 3) s!1)))
 (let ((?x7171 (* 4 ?x685)))
 (let ((?x4004 (* 18 ?x616)))
 (let ((?x44 (* 3 s00)))
 (let ((?x9388 (+ ?x44 (* (- 9) (* s00 r00)) ?x4004 ?x7171 (* (- 6) ?x741) (* 9 (* r!2 s!1)) ?x7242 (* (- 2) (* s!1 s!1)) (* (- 18) (* r!2 x!0)) (* (- 9) (* s00 r!2)) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x9317) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)))))
 (let (($x9384 (= ?x9388 0)))
 (let ((?x5923 (* 6 x!0)))
 (let ((?x4342 (* 3 r!2)))
 (let ((?x4040 (* r!2 s!1)))
 (let ((?x4637 (* 2 ?x4040)))
 (let ((?x563 (* r00 r00 r00)))
 (let ((?x564 (* 12 ?x563)))
 (let ((?x520 (* s00 r00)))
 (let ((?x598 (* (- 6) ?x520)))
 (let ((?x595 (* (- 6) x00)))
 (let ((?x594 (* (- 3) r00)))
 (let ((?x9323 (+ ?x44 ?x594 ?x595 ?x598 ?x564 ?x4637 ?x4342 ?x7242 ?x5923 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)))))
 (let (($x9325 (= ?x9323 0)))
 (let (($x1705 (and $x9219 $x9325 $x9384 $x2962 $x6330 $x3531)))
 (let ((?x9242 (+ ?x6150 ?x1481 (* 4 (* r!2 r!2 r!2 s!1 x!0 s00 s00)) (* 108 (* s!1 s!1 x!0 r00 x00)) (* 9 (* r!2 r!2 x!0 x!0 x!0 s00)) (* 9 (* x!0 s00)) (* (- 9) (* s!1 s00)) (* 27 (* s!1 s00 r00)) ?x6235 ?x6310 (* (- 9) (* r!2 r!2 s!1 s!1 s!1 s00)) (* (- 45) (* r!2 s!1 s00)) (* (- 3) (* s!1 s!1 s00)) ?x6639 (* 54 (* r!2 x!0 x!0 x!0 r00 x00)) ?x5349 ?x5347 (* (- 27) (* x!0 s00 r00)) ?x5342 ?x5340 (* (- 12) (* s!1 s00 s00)) (* 12 (* x!0 s00 s00)) ?x5177 ?x5326 ?x5322 ?x5318 ?x5316 ?x5175 ?x5310 ?x5305 ?x5301 ?x5299 (* 9 (* r!2 s!1 x!0 s00)) ?x5278 ?x4983 (* (- 12) (* x!0 x!0 x!0 s00 r00 r00)) (* 36 (* s!1 x!0 x!0 s00 r00 r00)) (* (- 60) (* r!2 s!1 s00 s00)) (* (- 36) (* s!1 s!1 x!0 s00 r00 r00)) (* 12 (* s!1 s!1 s!1 s00 r00 r00)) (* (- 12) (* r!2 r!2 s!1 s!1 s00 s00)) (* 3 (* r!2 r!2 r!2 s!1 x!0 s00)) (* 9 (* s!1 s!1 s!1 s00)) (* (- 27) (* s!1 s!1 x!0 s00)) (* 27 (* s!1 x!0 x!0 s00)) (* (- 9) (* x!0 x!0 x!0 s00)) (* 12 (* r!2 s!1 s!1 s!1 s00)) (* (- 36) (* r!2 s!1 s!1 x!0 s00)) (* 36 (* r!2 s!1 x!0 x!0 s00)) (* (- 12) (* r!2 x!0 x!0 x!0 s00)) (* 75 (* s!1 x!0 x!0 x!0 r00)) (* 63 (* r!2 r!2 r!2 x!0 s00)) (* (- 117) (* s!1 s!1 x!0 x!0 r00)) (* 9 (* r!2 r!2 r!2 s!1 s!1 x!0 s00)) (* 81 (* s!1 s!1 s!1 x!0 r00)) (* (- 3) (* r!2 r!2 r!2 s!1 s!1 s!1 s00)) (* 27 (* r!2 r!2 s!1 s!1 x!0 s00)) (* (- 27) (* r!2 r!2 s!1 x!0 x!0 s00)) (* (- 18) (* x!0 x!0 x!0 x!0 r00)) (* (- 162) (* r!2 s!1 x!0 x!0 r00 x00)) (* 54 (* r!2 r!2 s!1 x!0 r00 x00)) (* (- 21) (* s!1 s!1 s!1 s!1 r00)) (* (- 9) (* r!2 r!2 r!2 s!1 x!0 x!0 s00)) ?x2807 ?x2810 (* 18 (* x!0 x!0 x!0 x00)) (* 18 (* r!2 x!0 x!0 x!0 x00)) (* (- 54) (* r!2 r!2 r!2 s!1 x!0 x!0 r00 x00)) (* (- 54) (* s!1 r00 x00)) (* 9 (* s!1 s!1 s00 r00)) (* 54 (* r!2 r!2 r!2 r!2 s!1 s00 r00)) (* (- 270) (* r!2 s!1 r00 x00)) (* 189 (* r!2 r!2 r!2 s!1 s00 r00)) ?x2793 (* 243 (* r!2 r!2 s!1 s00 r00)) (* (- 486) (* r!2 r!2 s!1 r00 x00)) (* 135 (* r!2 s!1 s00 r00)) (* (- 378) (* r!2 r!2 r!2 s!1 r00 x00)) (* (- 135) (* r!2 x!0 s00 r00)) (* 54 (* x!0 r00 x00)) (* (- 243) (* r!2 r!2 x!0 s00 r00)) (* 270 (* r!2 x!0 r00 x00)) (* 486 (* r!2 r!2 x!0 r00 x00)) (* 27 (* r!2 r!2 s!1 s!1 s00 r00)) (* 9 (* r!2 r!2 r!2 s!1 s!1 s00 r00)) (* 378 (* r!2 r!2 r!2 x!0 r00 x00)) (* 27 (* r!2 s!1 s!1 s00 r00)) (* (- 9) (* r!2 r!2 r!2 s!1 x!0 s00 r00)) (* (- 27) (* r!2 r!2 s!1 x!0 s00 r00)) (* (- 27) (* r!2 s!1 x!0 s00 r00)) (* (- 108) (* r!2 r!2 r!2 r!2 s!1 r00 x00)) (* (- 9) (* s!1 x!0 s00 r00)) (* (- 54) (* r!2 r!2 r!2 r!2 x!0 s00 r00)) (* (- 18) (* r!2 r!2 r!2 s!1 s!1 s!1 r00 x00)) (* (- 189) (* r!2 r!2 r!2 x!0 s00 r00)) (* 108 (* r!2 r!2 r!2 r!2 x!0 r00 x00)) (* (- 18) (* s!1 s!1 r00 x00)) (* (- 54) (* r!2 s!1 s!1 r00 x00)) (* (- 54) (* r!2 r!2 s!1 s!1 r00 x00)) (* (- 36) (* s!1 s!1 x!0 s00 r00)) (* 36 (* s!1 x!0 x!0 s00 r00)) (* 12 (* s!1 s!1 s!1 s00 r00)) (* (- 12) (* x!0 x!0 x!0 s00 r00)) (* (- 4) (* s!1 s!1 s00 s00)) (* (- 24) (* r!2 r!2 r!2 r!2 s!1 s00 s00)) (* 24 (* r!2 r!2 r!2 r!2 x!0 s00 s00)) (* (- 63) (* r!2 s!1 s!1 x!0 s00 r00)) (* 21 (* r!2 s!1 s!1 s!1 s00 r00)) (* (- 21) (* r!2 x!0 x!0 x!0 s00 r00)) (* 63 (* r!2 s!1 x!0 x!0 s00 r00)) (* (- 9) (* r!2 r!2 r!2 x!0 x!0 x!0 s00 r00)) (* (- 27) (* r!2 r!2 x!0 x!0 x!0 s00 r00)) (* (- 81) (* r!2 r!2 s!1 s!1 x!0 s00 r00)) (* (- 27) (* r!2 r!2 r!2 s!1 s!1 x!0 s00 r00)) (* 9 (* r!2 r!2 r!2 s!1 s!1 s!1 s00 r00)) (* 27 (* r!2 r!2 s!1 s!1 s!1 s00 r00)) (* (- 54) (* r!2 r!2 s!1 s!1 s!1 r00 x00)) (* 81 (* r!2 r!2 s!1 x!0 x!0 s00 r00)) (* 27 (* r!2 r!2 r!2 s!1 x!0 x!0 s00 r00)) (* (- 162) (* r!2 r!2 s!1 x!0 x!0 r00 x00)) (* (- 108) (* s!1 x!0 x!0 r00 x00)) ?x2923 (* 3 (* r!2 r!2 r!2 x!0 x!0 x!0 s00)) ?x2935 (* 18 (* r!2 r!2 r!2 r!2 x!0 s00)) (* 162 (* r!2 s!1 s!1 x!0 r00 x00)) (* (- 9) (* r!2 s!1 s!1 s00)) ?x2945 (* 2 (* s!1 s!1 s!1 s!1 s00)) (* (- 6) (* s!1 s!1 s!1 x!0 s00)) (* 6 (* s!1 s!1 x!0 x!0 s00)) ?x2955 (* 9 (* r!2 r!2 s!1 x!0 s00)) (* 3 (* s!1 x!0 s00)) (* (- 2) (* s!1 x!0 x!0 x!0 s00)) ?x2969 ?x2972 (* (- 108) (* r!2 r!2 s!1 s00 s00)) ?x2975 (* 60 (* r!2 x!0 s00 s00)) ?x2977 (* (- 6) (* r!2 r!2 r!2 x!0 x!0 x!0 s00 r00 r00)) (* (- 18) (* r!2 r!2 x!0 x!0 x!0 s00 r00 r00)) (* 18 (* r!2 r!2 r!2 x!0 x!0 x!0 r00 x00)) (* (- 18) (* r!2 x!0 x!0 x!0 s00 r00 r00)) ?x2519 (* 18 (* r!2 r!2 r!2 s!1 x!0 x!0 s00 r00 r00)) (* 162 (* r!2 r!2 s!1 s!1 x!0 r00 x00)) (* 54 (* r!2 r!2 s!1 x!0 x!0 s00 r00 r00)) (* 54 (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* 36 (* x!0 x!0 x!0 r00 x00)) (* (- 18) (* r!2 r!2 r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 54) (* r!2 s!1 s!1 s!1 r00 x00)) (* 18 (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* 18 (* r!2 r!2 s!1 s!1 s!1 s00 r00 r00)) (* 6 (* r!2 r!2 r!2 s!1 s!1 s!1 s00 r00 r00)) (* (- 54) (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 54) (* r!2 r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 84) (* r!2 r!2 r!2 s!1 s00 s00)) (* 108 (* r!2 r!2 x!0 s00 s00)) (* 54 (* r!2 r!2 r!2 s!1 s!1 x!0 r00 x00)) (* (- 3) (* r!2 r!2 r!2 s!1 s!1 s00)) ?x6564 ?x2559 ?x2503 ?x2565 ?x2569 ?x2567 (* (- 9) (* r!2 r!2 s!1 s!1 s00)) (* 90 (* r!2 s!1 s00 r00 r00)) (* 162 (* r!2 r!2 s!1 s00 r00 r00)) (* 126 (* r!2 r!2 r!2 s!1 s00 r00 r00)) (* 36 (* r!2 r!2 r!2 r!2 s!1 s00 r00 r00)) (* 6 (* s!1 s!1 s00 r00 r00)) (* 18 (* r!2 s!1 s!1 s00 r00 r00)) (* 18 (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* 6 (* r!2 r!2 r!2 s!1 s!1 s00 r00 r00)) (* (- 18) (* x!0 s00 r00 r00)) (* (- 90) (* r!2 x!0 s00 r00 r00)) (* (- 162) (* r!2 r!2 x!0 s00 r00 r00)) (* (- 126) (* r!2 r!2 r!2 x!0 s00 r00 r00)) (* (- 36) (* r!2 r!2 r!2 r!2 x!0 s00 r00 r00)) (* (- 6) (* s!1 x!0 s00 r00 r00)) (* (- 6) (* r!2 r!2 r!2 s!1 x!0 s00 r00 r00)) (* (- 18) (* r!2 r!2 s!1 x!0 s00 r00 r00)) ?x2618 (* (- 18) (* r!2 s!1 x!0 s00 r00 r00)) (* 18 (* s!1 s00 r00 r00)) ?x2619 ?x2621 ?x2628 (* (- 36) (* s!1 s!1 s!1 r00 x00)) ?x2634 ?x2629 (* 81 (* r!2 r!2 x!0 s00)) ?x2633 ?x2637 (* 4 (* s!1 x!0 s00 s00)) ?x2644 (* (- 81) (* r!2 r!2 s!1 s00)) (* (- 63) (* r!2 r!2 r!2 s!1 s00)) (* 45 (* r!2 x!0 s00)) (* 54 (* r!2 r!2 x!0 x!0 x!0 r00 x00)) (* (- 24) (* s!1 x!0 x!0 s00 s00)) (* 54 (* r!2 s!1 x!0 r00 x00)) (* 54 (* s!1 s!1 x!0 x00)) ?x2663 ?x2664 ?x6583 ?x2670 ?x2672 ?x2674 (* (- 8) (* s!1 s!1 s!1 s00 s00)) (* (- 54) (* r!2 s!1 x!0 x!0 x00)) (* (- 4) (* r!2 r!2 r!2 s!1 s!1 s00 s00)) ?x704 (* (- 18) (* r!2 r!2 r!2 s!1 s!1 r00 x00)) (* (- 27) (* s!1 x!0 x!0 r00)) (* 18 (* s!1 x!0 r00 x00)) (* 27 (* s!1 s!1 x!0 r00)) (* 18 (* r!2 r!2 r!2 s!1 x!0 r00 x00)) (* (- 9) (* s!1 s!1 s!1 r00)) (* 24 (* s!1 s!1 x!0 s00 s00)) (* (- 12) (* r!2 s!1 s!1 s00 s00)) (* 12 (* r!2 s!1 x!0 s00 s00)) ?x7376 (* (- 18) (* r!2 r!2 r!2 r!2 s!1 s00)) (* 9 (* x!0 x!0 x!0 r00)) (* 8 (* x!0 x!0 x!0 s00 s00)) (* 84 (* r!2 r!2 r!2 x!0 s00 s00)) (* 36 (* r!2 r!2 s!1 s!1 s!1 r00)) ?x510 (* (- 18) (* r!2 s!1 s!1 s!1 x!0 r00)) (* 6 (* r!2 s!1 s!1 s!1 s!1 r00)) (* (- 108) (* r!2 r!2 s!1 s!1 x!0 r00)) ?x1334 (* 54 (* r!2 s!1 s!1 x!0 x00)) (* (- 18) (* r!2 s!1 s!1 s!1 x00)) (* 12 (* r!2 r!2 s!1 x!0 s00 s00)) (* 108 (* r!2 r!2 s!1 x!0 x!0 r00)) (* (- 18) (* s!1 s!1 s!1 x00)) (* 18 (* r!2 s!1 s!1 x!0 x!0 r00)) ?x5204 (* (- 54) (* s!1 x!0 x!0 x00)) (* (- 6) (* r!2 s!1 x!0 x!0 x!0 r00)) (* (- 36) (* r!2 r!2 x!0 x!0 x!0 r00)) ?x4816 (* (- 12) (* r!2 s!1 s!1 s!1 s00 s00)) (* (- 12) (* r!2 r!2 s!1 s!1 s!1 s00 s00)) (* (- 4) (* r!2 r!2 r!2 s!1 s!1 s!1 s00 s00)) (* 36 (* r!2 s!1 s!1 x!0 s00 s00)) (* 36 (* r!2 r!2 s!1 s!1 x!0 s00 s00)) (* 12 (* r!2 r!2 r!2 s!1 s!1 x!0 s00 s00)) (* (- 36) (* r!2 s!1 x!0 x!0 s00 s00)) (* (- 36) (* r!2 r!2 s!1 x!0 x!0 s00 s00)) (* (- 12) (* r!2 r!2 r!2 s!1 x!0 x!0 s00 s00)) (* 12 (* r!2 x!0 x!0 x!0 s00 s00)) (* 12 (* r!2 r!2 x!0 x!0 x!0 s00 s00)) (* 4 (* r!2 r!2 r!2 x!0 x!0 x!0 s00 s00)) ?x656 ?x9257 ?x9260 ?x9262 ?x9264 ?x9266 ?x9268 ?x9270 ?x9272 ?x9274 ?x9276 ?x9278 ?x9280 (* (- 54) (* s!1 x!0 x!0 r00 r00)) ?x3218 (* 54 (* s!1 s!1 x!0 r00 r00)) (* (- 18) (* s!1 s!1 s!1 r00 r00)) ?x9289 ?x9291 (* 18 (* x!0 x!0 x!0 r00 r00)) (* (- 36) (* r!2 s!1 s!1 s!1 r00 r00)) (* 108 (* r!2 s!1 s!1 x!0 r00 r00)) (* (- 108) (* r!2 s!1 x!0 x!0 r00 r00)) (* 36 (* r!2 x!0 x!0 x!0 r00 r00)) (* (- 6) (* s!1 s!1 s!1 s!1 r00 r00)) (* 18 (* s!1 s!1 s!1 x!0 r00 r00)) (* (- 18) (* s!1 s!1 x!0 x!0 r00 r00)) (* 6 (* s!1 x!0 x!0 x!0 r00 r00)) ?x9247 ?x9249 ?x9246 ?x9243)))
 (let ((?x1470 (* (- 108) ?x1440)))
 (let ((?x1469 (* (- 16) ?x1278)))
 (let ((?x1150 (* s00 r00 r00 r00)))
 (let ((?x1465 (* (- 216) ?x1150)))
 (let ((?x977 (* 432 ?x976)))
 (let ((?x1223 (* 108 ?x899)))
 (let ((?x825 (* s00 s00 r00 r00)))
 (let ((?x826 (* 36 ?x825)))
 (let ((?x762 (* s00 s00 r00)))
 (let ((?x1106 (* 108 ?x762)))
 (let ((?x1094 (* 36 ?x741)))
 (let ((?x1459 (* (- 51) ?x685)))
 (let ((?x1027 (* s!1 r00 r00)))
 (let ((?x5673 (* (- 36) ?x1027)))
 (let ((?x1456 (* (- 108) ?x616)))
 (let ((?x607 (* s00 r00 x00)))
 (let ((?x1455 (* (- 216) ?x607)))
 (let ((?x614 (* 54 ?x520)))
 (let ((?x1081 (* (- 9) s00)))
 (let ((?x5718 (* 9 s!1)))
 (let ((?x4415 (+ ?x5718 ?x1081 ?x614 ?x1455 ?x1456 (* (- 15) (* s!1 s!1)) ?x5673 ?x1459 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1094 ?x1106 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x826 (* (- 108) (* s!1 s00 r00)) (* 4 ?x5319) ?x1223 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x977 (* 12 (* s!1 s!1 s00)) ?x1465 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1469 (* 216 (* x!0 x00)) ?x1470)))
 (let ((?x984 (* (- 36) ?x971)))
 (let ((?x900 (* 6 ?x899)))
 (let ((?x790 (* (- 2) ?x762)))
 (let ((?x1010 (* (- 15) ?x685)))
 (let ((?x645 (* (- 54) ?x616)))
 (let ((?x658 (* 24 ?x520)))
 (let ((?x8136 (+ ?x5718 ?x1081 (* (- 24) ?x4040) (* 24 (* r!2 s00)) ?x658 ?x645 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x5673 ?x1010 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1094 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x790 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x900 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x984 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x742 (* 6 ?x741)))
 (let ((?x698 (* (- 4) ?x685)))
 (let ((?x630 (* (- 18) ?x616)))
 (let ((?x635 (* 9 ?x520)))
 (let ((?x472 (* (- 3) s00)))
 (let ((?x5222 (+ (* 3 s!1) ?x472 (* (- 9) ?x4040) (* 9 (* r!2 s00)) ?x635 ?x630 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1027) ?x698 (* 18 (* x!0 r00)) ?x742 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1520 (+ ?x4342 ?x7242 ?x5923 ?x44 ?x594 ?x595 ?x4637 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x598 ?x564)))
 (let (($x6400 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x393)) 0)))
 (let (($x9203 (and $x6400 (= ?x1520 0) (= ?x5222 0) (= ?x8136 0) (= ?x4415 0) (not (= ?x9242 0)))))
 (let (($x10832 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1477 (+ 3 ?x211 s)))
 (let ((?x1490 (+ 1 r)))
 (let ((?x372 (* (- 1) s)))
 (let ((?x1483 (+ ?x372 x)))
 (let ((?x8177 (* (- 36) (* r r x x x r00))))
 (let ((?x8165 (* (- 6) (* r s x x x r00))))
 (let ((?x8194 (* 18 (* r s s x x r00))))
 (let ((?x8193 (* 108 (* r r s x x r00))))
 (let ((?x8192 (* (- 108) (* r r s s x r00))))
 (let ((?x8012 (* 6 (* r s s s s r00))))
 (let ((?x8191 (* (- 18) (* r s s s x r00))))
 (let ((?x7983 (* 36 (* r r s s s r00))))
 (let ((?x7296 (* (- 18) (* x x x x))))
 (let ((?x7284 (* (- 18) (* r x x x x))))
 (let ((?x6692 (* 18 (* s s00 r00 r00))))
 (let ((?x6713 (* (- 18) (* r s x s00 r00 r00))))
 (let ((?x6712 (* (- 18) (* r r s x s00 r00 r00))))
 (let ((?x6630 (* (- 6) (* r r r s x s00 r00 r00))))
 (let ((?x6619 (* (- 6) (* s x s00 r00 r00))))
 (let ((?x6610 (* (- 36) (* r r r r x s00 r00 r00))))
 (let ((?x6711 (* (- 126) (* r r r x s00 r00 r00))))
 (let ((?x6709 (* (- 162) (* r r x s00 r00 r00))))
 (let ((?x6707 (* (- 90) (* r x s00 r00 r00))))
 (let ((?x6511 (* (- 18) (* x s00 r00 r00))))
 (let ((?x6501 (* 6 (* r r r s s s00 r00 r00))))
 (let ((?x6705 (* 18 (* r r s s s00 r00 r00))))
 (let ((?x6704 (* 18 (* r s s s00 r00 r00))))
 (let ((?x6455 (* 6 (* s s s00 r00 r00))))
 (let ((?x6445 (* 36 (* r r r r s s00 r00 r00))))
 (let ((?x6703 (* 126 (* r r r s s00 r00 r00))))
 (let ((?x6701 (* 162 (* r r s s00 r00 r00))))
 (let ((?x6699 (* 90 (* r s s00 r00 r00))))
 (let ((?x6119 (* (- 3) (* ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477))))
 (let ((?x7479 (* 81 (* r s x x x))))
 (let ((?x5956 (* (- 54) (* r r s s x s00 r00 r00))))
 (let ((?x5955 (* (- 54) (* r s s x s00 r00 r00))))
 (let ((?x5781 (* 6 (* r r r s s s s00 r00 r00))))
 (let ((?x5954 (* 18 (* r r s s s s00 r00 r00))))
 (let ((?x5953 (* 18 (* r s s s s00 r00 r00))))
 (let ((?x5952 (* (- 18) (* r r r s s x s00 r00 r00))))
 (let ((?x5951 (* 54 (* r s x x s00 r00 r00))))
 (let ((?x5950 (* 54 (* r r s x x s00 r00 r00))))
 (let ((?x5949 (* 18 (* r r r s x x s00 r00 r00))))
 (let ((?x5948 (* (- 18) (* r x x x s00 r00 r00))))
 (let ((?x5947 (* (- 18) (* r r x x x s00 r00 r00))))
 (let ((?x5603 (* (- 6) (* r r r x x x s00 r00 r00))))
 (let ((?x5542 (* (- 2) (* ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477 ?x1477))))
 (let ((?x5335 (* (- 2) (* s x x x s00))))
 (let ((?x5346 (* 6 (* s s x x s00))))
 (let ((?x5344 (* (- 6) (* s s s x s00))))
 (let ((?x5210 (* 2 (* s s s s s00))))
 (let ((?x5163 (* (- 18) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1483))))
 (let ((?x4968 (* 27 (* r r r s x x s00 r00))))
 (let ((?x4967 (* 81 (* r r s x x s00 r00))))
 (let ((?x4966 (* 27 (* r r s s s s00 r00))))
 (let ((?x4769 (* 9 (* r r r s s s s00 r00))))
 (let ((?x4965 (* (- 27) (* r r r s s x s00 r00))))
 (let ((?x4964 (* (- 81) (* r r s s x s00 r00))))
 (let ((?x4963 (* (- 27) (* r r x x x s00 r00))))
 (let ((?x4686 (* (- 9) (* r r r x x x s00 r00))))
 (let ((?x3950 (* (- 189) (* r r r x s00 r00))))
 (let ((?x3864 (* (- 54) (* r r r r x s00 r00))))
 (let ((?x3852 (* (- 9) (* s x s00 r00))))
 (let ((?x3948 (* (- 27) (* r s x s00 r00))))
 (let ((?x3947 (* (- 27) (* r r s x s00 r00))))
 (let ((?x3803 (* (- 9) (* r r r s x s00 r00))))
 (let ((?x3946 (* 27 (* r s s s00 r00))))
 (let ((?x3768 (* 9 (* r r r s s s00 r00))))
 (let ((?x3945 (* 27 (* r r s s s00 r00))))
 (let ((?x3944 (* (- 243) (* r r x s00 r00))))
 (let ((?x3942 (* (- 135) (* r x s00 r00))))
 (let ((?x3940 (* 135 (* r s s00 r00))))
 (let ((?x3938 (* 243 (* r r s s00 r00))))
 (let ((?x3936 (* 189 (* r r r s s00 r00))))
 (let ((?x3626 (* 54 (* r r r r s s00 r00))))
 (let ((?x3616 (* 9 (* s s s00 r00))))
 (let ((?x3377 (* 18 (* r x x x x00))))
 (let ((?x3375 (* 18 (* x x x x00))))
 (let ((?x2931 (* (- 18) (* x x x x r00))))
 (let ((?x5970 (* 12 (* s s s s00 r00 r00))))
 (let ((?x5969 (* (- 36) (* s s x s00 r00 r00))))
 (let ((?x5968 (* 36 (* s x x s00 r00 r00))))
 (let ((?x5967 (* (- 12) (* x x x s00 r00 r00))))
 (let ((?x6149 (* (- 54) (* s x x))))
 (let ((?x6148 (* 54 (* s s x))))
 (let ((?x7474 (* 78 (* s x x x))))
 (let ((?x6146 (* 18 (* x x x))))
 (let ((?x1852 (* 12 (* x s00 s00))))
 (let ((?x1843 (* (- 12) (* s s00 s00))))
 (let ((?x1248 (* x s00 r00)))
 (let ((?x3606 (* (- 27) ?x1248)))
 (let ((?x897 (* s s s)))
 (let ((?x6145 (* (- 18) ?x897)))
 (let ((?x873 (* s s00 r00)))
 (let ((?x3731 (* 27 ?x873)))
 (let ((?x782 (* s s00)))
 (let ((?x2213 (* (- 9) ?x782)))
 (let ((?x694 (* x s00)))
 (let ((?x2205 (* 9 ?x694)))
 (let ((?x10825 (+ (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483)) (* (- 3) (* ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477)) (* 4 (* r r r s x s00 s00)) (* 108 (* s s x r00 x00)) (* 9 (* r r x x x s00)) ?x2205 ?x2213 ?x3731 ?x6145 (* 6 (* r00 r00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477)) (* (- 9) (* r r s s s s00)) (* (- 45) (* r s s00)) (* (- 3) (* s s s00)) (* (- 18) (* r00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1477)) (* 54 (* r x x x r00 x00)) (* (- 18) (* ?x1490 ?x1483 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* 6 (* r00 r00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477)) ?x3606 (* (- 20) (* ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477 ?x1477)) (* (- 2) (* ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477 ?x1477)) ?x1843 ?x1852 ?x6146 ?x7474 ?x6148 ?x6149 (* 4 (* s00 s00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* (- 63) (* r s s s)) (* (- 24) (* s s s s)) (* 189 (* r s s x)) (* 90 (* s s s x)) (* (- 189) (* r s x x)) (* 9 (* r s x s00)) (* (- 126) (* s s x x)) (* 63 (* r x x x)) ?x5967 ?x5968 (* (- 60) (* r s s00 s00)) ?x5969 ?x5970 (* (- 12) (* r r s s s00 s00)) (* 3 (* r r r s x s00)) (* 9 (* s s s s00)) (* (- 27) (* s s x s00)) (* 27 (* s x x s00)) (* (- 9) (* x x x s00)) (* 12 (* r s s s s00)) (* (- 36) (* r s s x s00)) (* 36 (* r s x x s00)) (* (- 12) (* r x x x s00)) (* 75 (* s x x x r00)) (* 63 (* r r r x s00)) (* (- 117) (* s s x x r00)) (* 9 (* r r r s s x s00)) (* 81 (* s s s x r00)) (* (- 3) (* r r r s s s s00)) (* 27 (* r r s s x s00)) (* (- 27) (* r r s x x s00)) ?x2931 (* (- 162) (* r s x x r00 x00)) (* 54 (* r r s x r00 x00)) (* (- 21) (* s s s s r00)) (* (- 9) (* r r r s x x s00)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477)) (* (- 9) (* r00 s00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) ?x3375 ?x3377 (* (- 54) (* r r r s x x r00 x00)) (* (- 54) (* s r00 x00)) ?x3616 ?x3626 (* (- 270) (* r s r00 x00)) ?x3936 (* 9 (* ?x1490 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477)) ?x3938 (* (- 486) (* r r s r00 x00)) ?x3940 (* (- 378) (* r r r s r00 x00)) ?x3942 (* 54 (* x r00 x00)) ?x3944 (* 270 (* r x r00 x00)) (* 486 (* r r x r00 x00)) ?x3945 ?x3768 (* 378 (* r r r x r00 x00)) ?x3946 ?x3803 ?x3947 ?x3948 (* (- 108) (* r r r r s r00 x00)) ?x3852 ?x3864 (* (- 18) (* r r r s s s r00 x00)) ?x3950 (* 108 (* r r r r x r00 x00)) (* (- 18) (* s s r00 x00)) (* (- 54) (* r s s r00 x00)) (* (- 54) (* r r s s r00 x00)) (* (- 36) (* s s x s00 r00)) (* 36 (* s x x s00 r00)) (* 12 (* s s s s00 r00)) (* (- 12) (* x x x s00 r00)) (* (- 4) (* s s s00 s00)) (* (- 24) (* r r r r s s00 s00)) (* 24 (* r r r r x s00 s00)) (* (- 63) (* r s s x s00 r00)) (* 21 (* r s s s s00 r00)) (* (- 21) (* r x x x s00 r00)) (* 63 (* r s x x s00 r00)) ?x4686 ?x4963 ?x4964 ?x4965 ?x4769 ?x4966 (* (- 54) (* r r s s s r00 x00)) ?x4967 ?x4968 (* (- 162) (* r r s x x r00 x00)) (* (- 108) (* s x x r00 x00)) (* 3 (* s00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* 3 (* r r r x x x s00)) (* 4 (* s00 s00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* 18 (* r r r r x s00)) (* 162 (* r s s x r00 x00)) (* (- 9) (* r s s s00)) ?x5163 ?x5210 ?x5344 ?x5346 (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* 9 (* r r s x s00)) (* 3 (* s x s00)) ?x5335 (* 6 (* r00 r00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477)) (* (- 54) (* r r s s s)) (* (- 108) (* r r s s00 s00)) (* (- 18) (* r00 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477 ?x1477)) (* 60 (* r x s00 s00)) ?x5542 ?x5603 ?x5947 (* 18 (* r r r x x x r00 x00)) ?x5948 (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477)) ?x5949 (* 162 (* r r s s x r00 x00)) ?x5950 ?x5951 (* 36 (* x x x r00 x00)) ?x5952 (* (- 54) (* r s s s r00 x00)) ?x5953 ?x5954 ?x5781 ?x5955 ?x5956 (* (- 84) (* r r r s s00 s00)) (* 108 (* r r x s00 s00)) (* 54 (* r r r s s x r00 x00)) (* (- 3) (* r r r s s s00)) ?x7479 ?x6119 (* 162 (* r r s s x)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477)) (* (- 162) (* r r s x x)) (* 54 (* r r x x x)) (* (- 9) (* r r s s s00)) ?x6699 ?x6701 ?x6703 ?x6445 ?x6455 ?x6704 ?x6705 ?x6501 ?x6511 ?x6707 ?x6709 ?x6711 ?x6610 ?x6619 ?x6630 ?x6712 (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477)) ?x6713 ?x6692 (* 99 (* r s s s x)) (* (- 6) (* r00 r00 s00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* (- 27) (* r s s s s)) (* (- 36) (* s s s r00 x00)) (* (- 18) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1477)) (* 18 (* r00 x00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* 81 (* r r x s00)) ?x7284 ?x7296 (* 4 (* s x s00 s00)) (* (- 135) (* r s s x x)) (* (- 81) (* r r s s00)) (* (- 63) (* r r r s s00)) (* 45 (* r x s00)) (* 54 (* r r x x x r00 x00)) (* (- 24) (* s x x s00 s00)) (* 54 (* r s x r00 x00)) (* 54 (* s s x x00)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* (- 2) (* s00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477)) (* (- 2) (* s00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477)) (* (- 6) (* r00 r00 s00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* 9 (* r00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477)) (* (- 2) (* ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477)) (* (- 8) (* s s s s00 s00)) (* (- 54) (* r s x x x00)) (* (- 4) (* r r r s s s00 s00)) (* 3 (* s00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* (- 18) (* r r r s s r00 x00)) (* (- 27) (* s x x r00)) (* 18 (* s x r00 x00)) (* 27 (* s s x r00)) (* 18 (* r r r s x r00 x00)) (* (- 9) (* s s s r00)) (* 24 (* s s x s00 s00)) (* (- 12) (* r s s s00 s00)) (* 12 (* r s x s00 s00)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477)) (* (- 18) (* r r r r s s00)) (* 9 (* x x x r00)) (* 8 (* x x x s00 s00)) (* 84 (* r r r x s00 s00)) ?x7983 (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483)) ?x8191 ?x8012 ?x8192 (* (- 3) (* ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477)) (* 54 (* r s s x x00)) (* (- 18) (* r s s s x00)) (* 12 (* r r s x s00 s00)) ?x8193 (* (- 18) (* s s s x00)) ?x8194 (* 9 (* ?x1490 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477)) (* (- 54) (* s x x x00)) ?x8165 ?x8177 (* (- 9) (* r00 s00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* (- 12) (* r s s s s00 s00)) (* (- 12) (* r r s s s s00 s00)) (* (- 4) (* r r r s s s s00 s00)) (* 36 (* r s s x s00 s00)) (* 36 (* r r s s x s00 s00)) (* 12 (* r r r s s x s00 s00)) (* (- 36) (* r s x x s00 s00)) (* (- 36) (* r r s x x s00 s00)) (* (- 12) (* r r r s x x s00 s00)) (* 12 (* r x x x s00 s00)) (* 12 (* r r x x x s00 s00)) (* 4 (* r r r x x x s00 s00)) (* 6 (* r00 s00 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* (- 2) (* ?x1483 ?x1483 ?x1483 ?x1477 ?x1477)) (* 9 (* r00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477)) (* (- 18) (* r00 ?x1483 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* (- 9) (* s00 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483)) (* 6 (* r00 r00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477)) (* 18 (* x00 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* (- 18) (* r00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1483)) (* (- 6) (* r00 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477)) (* (- 3) (* ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477)) (* (- 2) (* s00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477)) (* (- 54) (* s x x r00 r00)) (* 18 (* r00 x00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* 54 (* s s x r00 r00)) (* (- 18) (* s s s r00 r00)) (* 9 (* r00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477)) (* 18 (* x x x r00 r00)) (* (- 36) (* r s s s r00 r00)) (* 108 (* r s s x r00 r00)) (* (- 108) (* r s x x r00 r00)) (* 36 (* r x x x r00 r00)) (* (- 6) (* s s s s r00 r00)) (* 18 (* s s s x r00 r00)) (* (- 18) (* s s x x r00 r00)) (* 6 (* s x x x r00 r00)) (* 9 (* r00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477)) (* (- 2) (* s00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)))))
 (let ((?x1440 (* x00 x00)))
 (let ((?x1470 (* (- 108) ?x1440)))
 (let ((?x1278 (* s00 s00 s00)))
 (let ((?x1469 (* (- 16) ?x1278)))
 (let ((?x1150 (* s00 r00 r00 r00)))
 (let ((?x1465 (* (- 216) ?x1150)))
 (let ((?x976 (* r00 r00 r00 x00)))
 (let ((?x977 (* 432 ?x976)))
 (let ((?x899 (* s00 x00)))
 (let ((?x1223 (* 108 ?x899)))
 (let ((?x825 (* s00 s00 r00 r00)))
 (let ((?x826 (* 36 ?x825)))
 (let ((?x762 (* s00 s00 r00)))
 (let ((?x1106 (* 108 ?x762)))
 (let ((?x741 (* s00 r00 r00)))
 (let ((?x1094 (* 36 ?x741)))
 (let ((?x685 (* s00 s00)))
 (let ((?x1459 (* (- 51) ?x685)))
 (let ((?x659 (* s r00 r00)))
 (let ((?x958 (* (- 36) ?x659)))
 (let ((?x616 (* r00 x00)))
 (let ((?x1456 (* (- 108) ?x616)))
 (let ((?x607 (* s00 r00 x00)))
 (let ((?x1455 (* (- 216) ?x607)))
 (let ((?x520 (* s00 r00)))
 (let ((?x614 (* 54 ?x520)))
 (let ((?x1081 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1471 (+ ?x143 ?x1081 ?x614 ?x1455 ?x1456 (* (- 15) (* s s)) ?x958 ?x1459 (* (- 108) ?x694) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1094 ?x1106 (* 66 ?x782) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x826 (* (- 108) ?x873) (* 4 ?x897) ?x1223 (* 108 (* s x)) (* (- 108) (* x x)) ?x977 (* 12 (* s s s00)) ?x1465 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1248) (* (- 36) (* s s r00 r00)) ?x1469 (* 216 (* x x00)) ?x1470)))
 (let (($x1472 (= ?x1471 0)))
 (let ((?x971 (* r00 r00 x00)))
 (let ((?x984 (* (- 36) ?x971)))
 (let ((?x900 (* 6 ?x899)))
 (let ((?x790 (* (- 2) ?x762)))
 (let ((?x1010 (* (- 15) ?x685)))
 (let ((?x639 (* s s)))
 (let ((?x663 (* 3 ?x639)))
 (let ((?x645 (* (- 54) ?x616)))
 (let ((?x658 (* 24 ?x520)))
 (let ((?x1173 (+ ?x143 ?x1081 (* (- 24) (* r s)) (* 24 (* r s00)) ?x658 ?x645 ?x663 (* 54 (* r x)) (* 36 (* r x r00)) ?x958 ?x1010 (* (- 6) ?x694) (* 54 (* x r00)) ?x1094 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x790 (* 12 ?x782) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) ?x873) ?x900 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x984 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1178 (= ?x1173 0)))
 (let ((?x742 (* 6 ?x741)))
 (let ((?x698 (* (- 4) ?x685)))
 (let ((?x640 (* 2 ?x639)))
 (let ((?x630 (* (- 18) ?x616)))
 (let ((?x635 (* 9 ?x520)))
 (let ((?x472 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x839 (+ ?x47 ?x472 (* (- 9) (* r s)) (* 9 (* r s00)) ?x635 ?x630 ?x640 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x659) ?x698 (* 18 (* x r00)) ?x742 (* (- 18) (* r x00)) (* 2 ?x782) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x846 (= ?x839 0)))
 (let ((?x563 (* r00 r00 r00)))
 (let ((?x564 (* 12 ?x563)))
 (let ((?x598 (* (- 6) ?x520)))
 (let ((?x595 (* (- 6) x00)))
 (let ((?x594 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x593 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x599 (+ ?x43 ?x593 ?x56 ?x44 ?x594 ?x595 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x598 ?x564)))
 (let (($x600 (= ?x599 0)))
 (let ((?x393 (* r00 r00)))
 (let ((?x394 (* 3 ?x393)))
 (let ((?x423 (* (- 1) s00)))
 (let (($x426 (= (+ s ?x423 (* (- 3) (* r r)) ?x394) 0)))
 (and $x426 $x600 $x846 $x1178 $x1472 (not (= ?x10825 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x5431 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x2433 (+ 3 s ?x211)))
 (let ((?x372 (* (- 1) s)))
 (let ((?x5606 (+ x ?x372)))
 (let ((?x1490 (+ 1 r)))
 (let ((?x6159 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)))
 (let ((?x2179 (+ (* 2 (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 3) (* s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 3) (* s00 ?x5606 ?x5606 ?x5606)) (* 9 (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 r00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 x00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 4) (* s00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 3 (* ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* r00 x00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 3) (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 r00 s00 ?x5606 ?x5606 ?x5606)) (* 9 (* s00 ?x1490 ?x5606 ?x5606 ?x5606)) (* 6 (* r00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 9 (* r00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 4) (* s00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 ?x5606 ?x5606 ?x5606 ?x5606)) (* (- 9) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 9) (* ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 x00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 6) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 18) (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 2 (* ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433)) (* (- 4) (* s00 s00 ?x5606 ?x5606 ?x5606)) (* 3 (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 2 (* s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 9) (* ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 18) (* x00 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 6) (* r00 s00 ?x1490 ?x5606 ?x5606 ?x5606)) (* 18 (* ?x1490 ?x5606 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 3 (* ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 9 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 9 (* r00 s00 ?x5606 ?x5606 ?x5606)) (* 9 (* s00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 4) (* s00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x2433)) (* (- 3) (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 9) (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x2433)) (* (- 9) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 6) (* r00 r00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433 ?x2433)) (* 20 (* ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 9 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 18 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* 2 (* s00 ?x5606 ?x5606 ?x5606 ?x2433)) (* 2 (* ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 3 (* ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 9) (* ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 2 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 3) (* s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 18) (* r00 x00 ?x5606 ?x5606 ?x5606)) (* 9 (* r00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 4) (* s00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 6) (* r00 s00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 2 (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433)) (* (- 9) (* r00 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 9) (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 18 (* r00 ?x5606 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 9 (* s00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 9 (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 6) (* r00 r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* x00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 18 (* ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* 18 (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* 3 (* ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 6 (* r00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 2 (* s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 18) (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* r00 x00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 9) (* r00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 r00 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 9) (* r00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* x00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 2 ?x6159))))
 (let ((?x1440 (* x00 x00)))
 (let ((?x617 (* 108 ?x1440)))
 (let ((?x949 (* (- 9) s)))
 (let ((?x2389 (* r00 r00 s00)))
 (let ((?x1427 (* (- 36) ?x2389)))
 (let ((?x137 (* 9 s00)))
 (let ((?x685 (* s00 s00)))
 (let ((?x8465 (* 51 ?x685)))
 (let ((?x7080 (* r00 r00 s)))
 (let ((?x5711 (* 36 ?x7080)))
 (let ((?x1278 (* s00 s00 s00)))
 (let ((?x5930 (* 16 ?x1278)))
 (let ((?x899 (* s00 x00)))
 (let ((?x5527 (* (- 108) ?x899)))
 (let ((?x976 (* r00 r00 r00 x00)))
 (let ((?x5741 (* (- 432) ?x976)))
 (let ((?x616 (* r00 x00)))
 (let ((?x2544 (* 108 ?x616)))
 (let ((?x1532 (+ (* 216 (* r00 s00 x00)) ?x2544 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x5741 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5527 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5930 (* (- 108) (* x s)) ?x5711 ?x8465 (* (- 108) (* r00 x)) ?x137 ?x1427 ?x949 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x617)))
 (let (($x1959 (= ?x1532 0)))
 (let ((?x5425 (* 15 ?x685)))
 (let ((?x971 (* r00 r00 x00)))
 (let ((?x5423 (* 36 ?x971)))
 (let ((?x4721 (* (- 6) ?x899)))
 (let ((?x4709 (* 54 ?x616)))
 (let ((?x5427 (+ (* 24 (* s r)) ?x4709 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x4721 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5711 ?x5423 ?x5425 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1427 (* 54 (* x00 r)) ?x949 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x593 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x7171 (* 4 ?x685)))
 (let ((?x4004 (* 18 ?x616)))
 (let ((?x7167 (+ (* 9 (* s r)) ?x4004 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x7080) ?x7171 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2389) (* 18 (* x00 r)) ?x593 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x563 (* r00 r00 r00)))
 (let ((?x564 (* 12 ?x563)))
 (let ((?x595 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x594 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x7225 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x593 ?x594 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x595 ?x564)))
 (let (($x1637 (= (+ s00 ?x372 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1637 (= ?x7225 0) (= ?x7167 0) (= ?x5427 0) $x1959 (not (= ?x2179 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x10834 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1477 (+ 3 ?x211 s)))
 (let ((?x1490 (+ 1 r)))
 (let ((?x372 (* (- 1) s)))
 (let ((?x1483 (+ ?x372 x)))
 (let ((?x8177 (* (- 36) (* r r x x x r00))))
 (let ((?x8165 (* (- 6) (* r s x x x r00))))
 (let ((?x8194 (* 18 (* r s s x x r00))))
 (let ((?x8193 (* 108 (* r r s x x r00))))
 (let ((?x8192 (* (- 108) (* r r s s x r00))))
 (let ((?x8012 (* 6 (* r s s s s r00))))
 (let ((?x8191 (* (- 18) (* r s s s x r00))))
 (let ((?x7983 (* 36 (* r r s s s r00))))
 (let ((?x7296 (* (- 18) (* x x x x))))
 (let ((?x7284 (* (- 18) (* r x x x x))))
 (let ((?x6692 (* 18 (* s s00 r00 r00))))
 (let ((?x6713 (* (- 18) (* r s x s00 r00 r00))))
 (let ((?x6712 (* (- 18) (* r r s x s00 r00 r00))))
 (let ((?x6630 (* (- 6) (* r r r s x s00 r00 r00))))
 (let ((?x6619 (* (- 6) (* s x s00 r00 r00))))
 (let ((?x6610 (* (- 36) (* r r r r x s00 r00 r00))))
 (let ((?x6711 (* (- 126) (* r r r x s00 r00 r00))))
 (let ((?x6709 (* (- 162) (* r r x s00 r00 r00))))
 (let ((?x6707 (* (- 90) (* r x s00 r00 r00))))
 (let ((?x6511 (* (- 18) (* x s00 r00 r00))))
 (let ((?x6501 (* 6 (* r r r s s s00 r00 r00))))
 (let ((?x6705 (* 18 (* r r s s s00 r00 r00))))
 (let ((?x6704 (* 18 (* r s s s00 r00 r00))))
 (let ((?x6455 (* 6 (* s s s00 r00 r00))))
 (let ((?x6445 (* 36 (* r r r r s s00 r00 r00))))
 (let ((?x6703 (* 126 (* r r r s s00 r00 r00))))
 (let ((?x6701 (* 162 (* r r s s00 r00 r00))))
 (let ((?x6699 (* 90 (* r s s00 r00 r00))))
 (let ((?x6119 (* (- 3) (* ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477))))
 (let ((?x7479 (* 81 (* r s x x x))))
 (let ((?x5956 (* (- 54) (* r r s s x s00 r00 r00))))
 (let ((?x5955 (* (- 54) (* r s s x s00 r00 r00))))
 (let ((?x5781 (* 6 (* r r r s s s s00 r00 r00))))
 (let ((?x5954 (* 18 (* r r s s s s00 r00 r00))))
 (let ((?x5953 (* 18 (* r s s s s00 r00 r00))))
 (let ((?x5952 (* (- 18) (* r r r s s x s00 r00 r00))))
 (let ((?x5951 (* 54 (* r s x x s00 r00 r00))))
 (let ((?x5950 (* 54 (* r r s x x s00 r00 r00))))
 (let ((?x5949 (* 18 (* r r r s x x s00 r00 r00))))
 (let ((?x5948 (* (- 18) (* r x x x s00 r00 r00))))
 (let ((?x5947 (* (- 18) (* r r x x x s00 r00 r00))))
 (let ((?x5603 (* (- 6) (* r r r x x x s00 r00 r00))))
 (let ((?x5542 (* (- 2) (* ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477 ?x1477))))
 (let ((?x5335 (* (- 2) (* s x x x s00))))
 (let ((?x5346 (* 6 (* s s x x s00))))
 (let ((?x5344 (* (- 6) (* s s s x s00))))
 (let ((?x5210 (* 2 (* s s s s s00))))
 (let ((?x5163 (* (- 18) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1483))))
 (let ((?x4968 (* 27 (* r r r s x x s00 r00))))
 (let ((?x4967 (* 81 (* r r s x x s00 r00))))
 (let ((?x4966 (* 27 (* r r s s s s00 r00))))
 (let ((?x4769 (* 9 (* r r r s s s s00 r00))))
 (let ((?x4965 (* (- 27) (* r r r s s x s00 r00))))
 (let ((?x4964 (* (- 81) (* r r s s x s00 r00))))
 (let ((?x4963 (* (- 27) (* r r x x x s00 r00))))
 (let ((?x4686 (* (- 9) (* r r r x x x s00 r00))))
 (let ((?x3950 (* (- 189) (* r r r x s00 r00))))
 (let ((?x3864 (* (- 54) (* r r r r x s00 r00))))
 (let ((?x3852 (* (- 9) (* s x s00 r00))))
 (let ((?x3948 (* (- 27) (* r s x s00 r00))))
 (let ((?x3947 (* (- 27) (* r r s x s00 r00))))
 (let ((?x3803 (* (- 9) (* r r r s x s00 r00))))
 (let ((?x3946 (* 27 (* r s s s00 r00))))
 (let ((?x3768 (* 9 (* r r r s s s00 r00))))
 (let ((?x3945 (* 27 (* r r s s s00 r00))))
 (let ((?x3944 (* (- 243) (* r r x s00 r00))))
 (let ((?x3942 (* (- 135) (* r x s00 r00))))
 (let ((?x3940 (* 135 (* r s s00 r00))))
 (let ((?x3938 (* 243 (* r r s s00 r00))))
 (let ((?x3936 (* 189 (* r r r s s00 r00))))
 (let ((?x3626 (* 54 (* r r r r s s00 r00))))
 (let ((?x3616 (* 9 (* s s s00 r00))))
 (let ((?x3377 (* 18 (* r x x x x00))))
 (let ((?x3375 (* 18 (* x x x x00))))
 (let ((?x2931 (* (- 18) (* x x x x r00))))
 (let ((?x5970 (* 12 (* s s s s00 r00 r00))))
 (let ((?x5969 (* (- 36) (* s s x s00 r00 r00))))
 (let ((?x5968 (* 36 (* s x x s00 r00 r00))))
 (let ((?x5967 (* (- 12) (* x x x s00 r00 r00))))
 (let ((?x6149 (* (- 54) (* s x x))))
 (let ((?x6148 (* 54 (* s s x))))
 (let ((?x7474 (* 78 (* s x x x))))
 (let ((?x6146 (* 18 (* x x x))))
 (let ((?x1852 (* 12 (* x s00 s00))))
 (let ((?x1843 (* (- 12) (* s s00 s00))))
 (let ((?x1248 (* x s00 r00)))
 (let ((?x3606 (* (- 27) ?x1248)))
 (let ((?x897 (* s s s)))
 (let ((?x6145 (* (- 18) ?x897)))
 (let ((?x873 (* s s00 r00)))
 (let ((?x3731 (* 27 ?x873)))
 (let ((?x782 (* s s00)))
 (let ((?x2213 (* (- 9) ?x782)))
 (let ((?x694 (* x s00)))
 (let ((?x2205 (* 9 ?x694)))
 (let ((?x10825 (+ (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483)) (* (- 3) (* ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477)) (* 4 (* r r r s x s00 s00)) (* 108 (* s s x r00 x00)) (* 9 (* r r x x x s00)) ?x2205 ?x2213 ?x3731 ?x6145 (* 6 (* r00 r00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477)) (* (- 9) (* r r s s s s00)) (* (- 45) (* r s s00)) (* (- 3) (* s s s00)) (* (- 18) (* r00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1477)) (* 54 (* r x x x r00 x00)) (* (- 18) (* ?x1490 ?x1483 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* 6 (* r00 r00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477)) ?x3606 (* (- 20) (* ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477 ?x1477)) (* (- 2) (* ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477 ?x1477)) ?x1843 ?x1852 ?x6146 ?x7474 ?x6148 ?x6149 (* 4 (* s00 s00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* (- 63) (* r s s s)) (* (- 24) (* s s s s)) (* 189 (* r s s x)) (* 90 (* s s s x)) (* (- 189) (* r s x x)) (* 9 (* r s x s00)) (* (- 126) (* s s x x)) (* 63 (* r x x x)) ?x5967 ?x5968 (* (- 60) (* r s s00 s00)) ?x5969 ?x5970 (* (- 12) (* r r s s s00 s00)) (* 3 (* r r r s x s00)) (* 9 (* s s s s00)) (* (- 27) (* s s x s00)) (* 27 (* s x x s00)) (* (- 9) (* x x x s00)) (* 12 (* r s s s s00)) (* (- 36) (* r s s x s00)) (* 36 (* r s x x s00)) (* (- 12) (* r x x x s00)) (* 75 (* s x x x r00)) (* 63 (* r r r x s00)) (* (- 117) (* s s x x r00)) (* 9 (* r r r s s x s00)) (* 81 (* s s s x r00)) (* (- 3) (* r r r s s s s00)) (* 27 (* r r s s x s00)) (* (- 27) (* r r s x x s00)) ?x2931 (* (- 162) (* r s x x r00 x00)) (* 54 (* r r s x r00 x00)) (* (- 21) (* s s s s r00)) (* (- 9) (* r r r s x x s00)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477)) (* (- 9) (* r00 s00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) ?x3375 ?x3377 (* (- 54) (* r r r s x x r00 x00)) (* (- 54) (* s r00 x00)) ?x3616 ?x3626 (* (- 270) (* r s r00 x00)) ?x3936 (* 9 (* ?x1490 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477)) ?x3938 (* (- 486) (* r r s r00 x00)) ?x3940 (* (- 378) (* r r r s r00 x00)) ?x3942 (* 54 (* x r00 x00)) ?x3944 (* 270 (* r x r00 x00)) (* 486 (* r r x r00 x00)) ?x3945 ?x3768 (* 378 (* r r r x r00 x00)) ?x3946 ?x3803 ?x3947 ?x3948 (* (- 108) (* r r r r s r00 x00)) ?x3852 ?x3864 (* (- 18) (* r r r s s s r00 x00)) ?x3950 (* 108 (* r r r r x r00 x00)) (* (- 18) (* s s r00 x00)) (* (- 54) (* r s s r00 x00)) (* (- 54) (* r r s s r00 x00)) (* (- 36) (* s s x s00 r00)) (* 36 (* s x x s00 r00)) (* 12 (* s s s s00 r00)) (* (- 12) (* x x x s00 r00)) (* (- 4) (* s s s00 s00)) (* (- 24) (* r r r r s s00 s00)) (* 24 (* r r r r x s00 s00)) (* (- 63) (* r s s x s00 r00)) (* 21 (* r s s s s00 r00)) (* (- 21) (* r x x x s00 r00)) (* 63 (* r s x x s00 r00)) ?x4686 ?x4963 ?x4964 ?x4965 ?x4769 ?x4966 (* (- 54) (* r r s s s r00 x00)) ?x4967 ?x4968 (* (- 162) (* r r s x x r00 x00)) (* (- 108) (* s x x r00 x00)) (* 3 (* s00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* 3 (* r r r x x x s00)) (* 4 (* s00 s00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* 18 (* r r r r x s00)) (* 162 (* r s s x r00 x00)) (* (- 9) (* r s s s00)) ?x5163 ?x5210 ?x5344 ?x5346 (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* 9 (* r r s x s00)) (* 3 (* s x s00)) ?x5335 (* 6 (* r00 r00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477)) (* (- 54) (* r r s s s)) (* (- 108) (* r r s s00 s00)) (* (- 18) (* r00 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477 ?x1477)) (* 60 (* r x s00 s00)) ?x5542 ?x5603 ?x5947 (* 18 (* r r r x x x r00 x00)) ?x5948 (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477)) ?x5949 (* 162 (* r r s s x r00 x00)) ?x5950 ?x5951 (* 36 (* x x x r00 x00)) ?x5952 (* (- 54) (* r s s s r00 x00)) ?x5953 ?x5954 ?x5781 ?x5955 ?x5956 (* (- 84) (* r r r s s00 s00)) (* 108 (* r r x s00 s00)) (* 54 (* r r r s s x r00 x00)) (* (- 3) (* r r r s s s00)) ?x7479 ?x6119 (* 162 (* r r s s x)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477)) (* (- 162) (* r r s x x)) (* 54 (* r r x x x)) (* (- 9) (* r r s s s00)) ?x6699 ?x6701 ?x6703 ?x6445 ?x6455 ?x6704 ?x6705 ?x6501 ?x6511 ?x6707 ?x6709 ?x6711 ?x6610 ?x6619 ?x6630 ?x6712 (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477)) ?x6713 ?x6692 (* 99 (* r s s s x)) (* (- 6) (* r00 r00 s00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* (- 27) (* r s s s s)) (* (- 36) (* s s s r00 x00)) (* (- 18) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1477)) (* 18 (* r00 x00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* 81 (* r r x s00)) ?x7284 ?x7296 (* 4 (* s x s00 s00)) (* (- 135) (* r s s x x)) (* (- 81) (* r r s s00)) (* (- 63) (* r r r s s00)) (* 45 (* r x s00)) (* 54 (* r r x x x r00 x00)) (* (- 24) (* s x x s00 s00)) (* 54 (* r s x r00 x00)) (* 54 (* s s x x00)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* (- 2) (* s00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477)) (* (- 2) (* s00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477)) (* (- 6) (* r00 r00 s00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* 9 (* r00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477)) (* (- 2) (* ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477)) (* (- 8) (* s s s s00 s00)) (* (- 54) (* r s x x x00)) (* (- 4) (* r r r s s s00 s00)) (* 3 (* s00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* (- 18) (* r r r s s r00 x00)) (* (- 27) (* s x x r00)) (* 18 (* s x r00 x00)) (* 27 (* s s x r00)) (* 18 (* r r r s x r00 x00)) (* (- 9) (* s s s r00)) (* 24 (* s s x s00 s00)) (* (- 12) (* r s s s00 s00)) (* 12 (* r s x s00 s00)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477)) (* (- 18) (* r r r r s s00)) (* 9 (* x x x r00)) (* 8 (* x x x s00 s00)) (* 84 (* r r r x s00 s00)) ?x7983 (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483)) ?x8191 ?x8012 ?x8192 (* (- 3) (* ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477)) (* 54 (* r s s x x00)) (* (- 18) (* r s s s x00)) (* 12 (* r r s x s00 s00)) ?x8193 (* (- 18) (* s s s x00)) ?x8194 (* 9 (* ?x1490 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477)) (* (- 54) (* s x x x00)) ?x8165 ?x8177 (* (- 9) (* r00 s00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)) (* (- 12) (* r s s s s00 s00)) (* (- 12) (* r r s s s s00 s00)) (* (- 4) (* r r r s s s s00 s00)) (* 36 (* r s s x s00 s00)) (* 36 (* r r s s x s00 s00)) (* 12 (* r r r s s x s00 s00)) (* (- 36) (* r s x x s00 s00)) (* (- 36) (* r r s x x s00 s00)) (* (- 12) (* r r r s x x s00 s00)) (* 12 (* r x x x s00 s00)) (* 12 (* r r x x x s00 s00)) (* 4 (* r r r x x x s00 s00)) (* 6 (* r00 s00 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* (- 2) (* ?x1483 ?x1483 ?x1483 ?x1477 ?x1477)) (* 9 (* r00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477)) (* (- 18) (* r00 ?x1483 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* (- 9) (* s00 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483)) (* 6 (* r00 r00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477)) (* 18 (* x00 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* (- 18) (* r00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1483)) (* (- 6) (* r00 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477)) (* (- 3) (* ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477)) (* (- 2) (* s00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477)) (* (- 54) (* s x x r00 r00)) (* 18 (* r00 x00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477)) (* 54 (* s s x r00 r00)) (* (- 18) (* s s s r00 r00)) (* 9 (* r00 ?x1483 ?x1483 ?x1483 ?x1477 ?x1477 ?x1477 ?x1477)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477)) (* 18 (* x x x r00 r00)) (* (- 36) (* r s s s r00 r00)) (* 108 (* r s s x r00 r00)) (* (- 108) (* r s x x r00 r00)) (* 36 (* r x x x r00 r00)) (* (- 6) (* s s s s r00 r00)) (* 18 (* s s s x r00 r00)) (* (- 18) (* s s x x r00 r00)) (* 6 (* s x x x r00 r00)) (* 9 (* r00 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477 ?x1477)) (* (- 2) (* s00 ?x1490 ?x1490 ?x1490 ?x1483 ?x1477 ?x1477)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x1483 ?x1483 ?x1483 ?x1477)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x1477 ?x1477 ?x1477)))))
 (let ((?x1440 (* x00 x00)))
 (let ((?x1470 (* (- 108) ?x1440)))
 (let ((?x1278 (* s00 s00 s00)))
 (let ((?x1469 (* (- 16) ?x1278)))
 (let ((?x1150 (* s00 r00 r00 r00)))
 (let ((?x1465 (* (- 216) ?x1150)))
 (let ((?x976 (* r00 r00 r00 x00)))
 (let ((?x977 (* 432 ?x976)))
 (let ((?x899 (* s00 x00)))
 (let ((?x1223 (* 108 ?x899)))
 (let ((?x825 (* s00 s00 r00 r00)))
 (let ((?x826 (* 36 ?x825)))
 (let ((?x762 (* s00 s00 r00)))
 (let ((?x1106 (* 108 ?x762)))
 (let ((?x741 (* s00 r00 r00)))
 (let ((?x1094 (* 36 ?x741)))
 (let ((?x685 (* s00 s00)))
 (let ((?x1459 (* (- 51) ?x685)))
 (let ((?x659 (* s r00 r00)))
 (let ((?x958 (* (- 36) ?x659)))
 (let ((?x616 (* r00 x00)))
 (let ((?x1456 (* (- 108) ?x616)))
 (let ((?x607 (* s00 r00 x00)))
 (let ((?x1455 (* (- 216) ?x607)))
 (let ((?x520 (* s00 r00)))
 (let ((?x614 (* 54 ?x520)))
 (let ((?x1081 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1471 (+ ?x143 ?x1081 ?x614 ?x1455 ?x1456 (* (- 15) (* s s)) ?x958 ?x1459 (* (- 108) ?x694) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1094 ?x1106 (* 66 ?x782) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x826 (* (- 108) ?x873) (* 4 ?x897) ?x1223 (* 108 (* s x)) (* (- 108) (* x x)) ?x977 (* 12 (* s s s00)) ?x1465 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1248) (* (- 36) (* s s r00 r00)) ?x1469 (* 216 (* x x00)) ?x1470)))
 (let (($x1472 (= ?x1471 0)))
 (let ((?x971 (* r00 r00 x00)))
 (let ((?x984 (* (- 36) ?x971)))
 (let ((?x900 (* 6 ?x899)))
 (let ((?x790 (* (- 2) ?x762)))
 (let ((?x1010 (* (- 15) ?x685)))
 (let ((?x639 (* s s)))
 (let ((?x663 (* 3 ?x639)))
 (let ((?x645 (* (- 54) ?x616)))
 (let ((?x658 (* 24 ?x520)))
 (let ((?x1173 (+ ?x143 ?x1081 (* (- 24) (* r s)) (* 24 (* r s00)) ?x658 ?x645 ?x663 (* 54 (* r x)) (* 36 (* r x r00)) ?x958 ?x1010 (* (- 6) ?x694) (* 54 (* x r00)) ?x1094 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x790 (* 12 ?x782) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) ?x873) ?x900 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x984 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1178 (= ?x1173 0)))
 (let ((?x742 (* 6 ?x741)))
 (let ((?x698 (* (- 4) ?x685)))
 (let ((?x640 (* 2 ?x639)))
 (let ((?x630 (* (- 18) ?x616)))
 (let ((?x635 (* 9 ?x520)))
 (let ((?x472 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x839 (+ ?x47 ?x472 (* (- 9) (* r s)) (* 9 (* r s00)) ?x635 ?x630 ?x640 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x659) ?x698 (* 18 (* x r00)) ?x742 (* (- 18) (* r x00)) (* 2 ?x782) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x846 (= ?x839 0)))
 (let ((?x563 (* r00 r00 r00)))
 (let ((?x564 (* 12 ?x563)))
 (let ((?x598 (* (- 6) ?x520)))
 (let ((?x595 (* (- 6) x00)))
 (let ((?x594 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x593 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x599 (+ ?x43 ?x593 ?x56 ?x44 ?x594 ?x595 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x598 ?x564)))
 (let (($x600 (= ?x599 0)))
 (let ((?x393 (* r00 r00)))
 (let ((?x394 (* 3 ?x393)))
 (let ((?x423 (* (- 1) s00)))
 (let (($x426 (= (+ s ?x423 (* (- 3) (* r r)) ?x394) 0)))
 (let (($x6961 (and $x426 $x600 $x846 $x1178 $x1472 (not (= ?x10825 0)))))
 (let ((?x2433 (+ 3 s ?x211)))
 (let ((?x5606 (+ x ?x372)))
 (let ((?x6159 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)))
 (let ((?x2179 (+ (* 2 (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 3) (* s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 3) (* s00 ?x5606 ?x5606 ?x5606)) (* 9 (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 r00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 x00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 4) (* s00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 3 (* ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* r00 x00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 3) (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 r00 s00 ?x5606 ?x5606 ?x5606)) (* 9 (* s00 ?x1490 ?x5606 ?x5606 ?x5606)) (* 6 (* r00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 9 (* r00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 4) (* s00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 ?x5606 ?x5606 ?x5606 ?x5606)) (* (- 9) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 9) (* ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 x00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 6) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 18) (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 2 (* ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433)) (* (- 4) (* s00 s00 ?x5606 ?x5606 ?x5606)) (* 3 (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 2 (* s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 9) (* ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 18) (* x00 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 6) (* r00 s00 ?x1490 ?x5606 ?x5606 ?x5606)) (* 18 (* ?x1490 ?x5606 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 3 (* ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 9 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 9 (* r00 s00 ?x5606 ?x5606 ?x5606)) (* 9 (* s00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 4) (* s00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x2433)) (* (- 3) (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 9) (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x2433)) (* (- 9) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 6) (* r00 r00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433 ?x2433)) (* 20 (* ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 9 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 18 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* 2 (* s00 ?x5606 ?x5606 ?x5606 ?x2433)) (* 2 (* ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 3 (* ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 9) (* ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 2 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 3) (* s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 18) (* r00 x00 ?x5606 ?x5606 ?x5606)) (* 9 (* r00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 4) (* s00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 6) (* r00 s00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 2 (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433)) (* (- 9) (* r00 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 9) (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 18 (* r00 ?x5606 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 9 (* s00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 9 (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 6) (* r00 r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* x00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 18 (* ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* 18 (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* 3 (* ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 6 (* r00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 2 (* s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 18) (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* r00 x00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 9) (* r00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 r00 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 9) (* r00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* x00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 2 ?x6159))))
 (let ((?x617 (* 108 ?x1440)))
 (let ((?x949 (* (- 9) s)))
 (let ((?x2389 (* r00 r00 s00)))
 (let ((?x1427 (* (- 36) ?x2389)))
 (let ((?x137 (* 9 s00)))
 (let ((?x8465 (* 51 ?x685)))
 (let ((?x7080 (* r00 r00 s)))
 (let ((?x5711 (* 36 ?x7080)))
 (let ((?x5930 (* 16 ?x1278)))
 (let ((?x5527 (* (- 108) ?x899)))
 (let ((?x5741 (* (- 432) ?x976)))
 (let ((?x2544 (* 108 ?x616)))
 (let ((?x1532 (+ (* 216 (* r00 s00 x00)) ?x2544 (* (- 54) (* r00 s00)) (* 15 ?x639) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) ?x897) (* 108 (* x x)) ?x5741 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5527 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5930 (* (- 108) (* x s)) ?x5711 ?x8465 (* (- 108) (* r00 x)) ?x137 ?x1427 ?x949 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x617)))
 (let (($x1959 (= ?x1532 0)))
 (let ((?x5425 (* 15 ?x685)))
 (let ((?x5423 (* 36 ?x971)))
 (let ((?x4721 (* (- 6) ?x899)))
 (let ((?x4709 (* 54 ?x616)))
 (let ((?x5427 (+ (* 24 (* s r)) ?x4709 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x639) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x4721 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5711 ?x5423 ?x5425 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1427 (* 54 (* x00 r)) ?x949 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x7171 (* 4 ?x685)))
 (let ((?x4004 (* 18 ?x616)))
 (let ((?x7167 (+ (* 9 (* s r)) ?x4004 (* (- 9) (* r00 s00)) (* (- 2) ?x639) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x7080) ?x7171 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2389) (* 18 (* x00 r)) ?x593 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x7225 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x593 ?x594 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x595 ?x564)))
 (let (($x1637 (= (+ s00 ?x372 (* 3 (* r r)) (* (- 3) ?x393)) 0)))
 (let (($x5664 (and $x1637 (= ?x7225 0) (= ?x7167 0) (= ?x5427 0) $x1959 (not (= ?x2179 0)))))
 (rewrite (= $x5664 $x6961)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x5682 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x2433 (+ 3 s ?x211)))
 (let ((?x372 (* (- 1) s)))
 (let ((?x5606 (+ x ?x372)))
 (let ((?x1490 (+ 1 r)))
 (let ((?x6159 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)))
 (let ((?x6252 (+ (* (- 2) (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 3 (* s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 3 (* s00 ?x5606 ?x5606 ?x5606)) (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 r00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 x00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 4 (* s00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 3) (* ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* r00 x00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 3 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 r00 s00 ?x5606 ?x5606 ?x5606)) (* (- 9) (* s00 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 9) (* r00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 4 (* s00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 ?x5606 ?x5606 ?x5606 ?x5606)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 9 (* ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 x00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 2) (* ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433)) (* 4 (* s00 s00 ?x5606 ?x5606 ?x5606)) (* (- 3) (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 2) (* s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 18 (* x00 ?x1490 ?x5606 ?x5606 ?x5606)) (* 6 (* r00 s00 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 18) (* ?x1490 ?x5606 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 3) (* ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 9) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 9) (* r00 s00 ?x5606 ?x5606 ?x5606)) (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 4 (* s00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x2433)) (* 3 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 9 (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x2433)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 6 (* r00 r00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 20) (* ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 9) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 18) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* (- 2) (* s00 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 2) (* ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 3) (* ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 9 (* ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 2) (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 3 (* s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 18 (* r00 x00 ?x5606 ?x5606 ?x5606)) (* (- 9) (* r00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 4 (* s00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 6 (* r00 s00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 2) (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433)) (* 9 (* r00 ?x5606 ?x5606 ?x5606 ?x2433)) (* 9 (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 18) (* r00 ?x5606 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 9) (* s00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 6 (* r00 r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* x00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 18) (* ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* (- 18) (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* (- 3) (* ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 6) (* r00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 2) (* s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* r00 x00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 9 (* r00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 r00 ?x5606 ?x5606 ?x5606 ?x2433)) (* 9 (* r00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 2) ?x6159))))
 (let ((?x1440 (* x00 x00)))
 (let ((?x617 (* 108 ?x1440)))
 (let ((?x949 (* (- 9) s)))
 (let ((?x2389 (* r00 r00 s00)))
 (let ((?x1427 (* (- 36) ?x2389)))
 (let ((?x137 (* 9 s00)))
 (let ((?x685 (* s00 s00)))
 (let ((?x8465 (* 51 ?x685)))
 (let ((?x7080 (* r00 r00 s)))
 (let ((?x5711 (* 36 ?x7080)))
 (let ((?x1278 (* s00 s00 s00)))
 (let ((?x5930 (* 16 ?x1278)))
 (let ((?x899 (* s00 x00)))
 (let ((?x5527 (* (- 108) ?x899)))
 (let ((?x976 (* r00 r00 r00 x00)))
 (let ((?x5741 (* (- 432) ?x976)))
 (let ((?x616 (* r00 x00)))
 (let ((?x2544 (* 108 ?x616)))
 (let ((?x1532 (+ (* 216 (* r00 s00 x00)) ?x2544 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x5741 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5527 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5930 (* (- 108) (* x s)) ?x5711 ?x8465 (* (- 108) (* r00 x)) ?x137 ?x1427 ?x949 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x617)))
 (let (($x1959 (= ?x1532 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1081 (* (- 9) s00)))
 (let ((?x1010 (* (- 15) ?x685)))
 (let ((?x971 (* r00 r00 x00)))
 (let ((?x984 (* (- 36) ?x971)))
 (let ((?x900 (* 6 ?x899)))
 (let ((?x639 (* s s)))
 (let ((?x663 (* 3 ?x639)))
 (let ((?x645 (* (- 54) ?x616)))
 (let ((?x5514 (+ (* (- 24) (* s r)) ?x645 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x663 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x900 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x7080) ?x984 ?x1010 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1081 (* 36 ?x2389) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x472 (* (- 3) s00)))
 (let ((?x698 (* (- 4) ?x685)))
 (let ((?x640 (* 2 ?x639)))
 (let ((?x630 (* (- 18) ?x616)))
 (let ((?x5641 (+ (* (- 9) (* s r)) ?x630 (* 9 (* r00 s00)) ?x640 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x7080) ?x698 (* 18 (* r00 x)) ?x472 (* 6 ?x2389) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x7617 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x472 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1637 (= (+ s00 ?x372 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1637 (= ?x7617 0) (= ?x5641 0) (= ?x5514 0) $x1959 (not (= ?x6252 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5665 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x2433 (+ 3 s ?x211)))
 (let ((?x372 (* (- 1) s)))
 (let ((?x5606 (+ x ?x372)))
 (let ((?x1490 (+ 1 r)))
 (let ((?x6159 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)))
 (let ((?x2179 (+ (* 2 (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 3) (* s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 3) (* s00 ?x5606 ?x5606 ?x5606)) (* 9 (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 r00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 x00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 4) (* s00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 3 (* ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* r00 x00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 3) (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 r00 s00 ?x5606 ?x5606 ?x5606)) (* 9 (* s00 ?x1490 ?x5606 ?x5606 ?x5606)) (* 6 (* r00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 9 (* r00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 4) (* s00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 ?x5606 ?x5606 ?x5606 ?x5606)) (* (- 9) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 9) (* ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 x00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 6) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 18) (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 2 (* ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433)) (* (- 4) (* s00 s00 ?x5606 ?x5606 ?x5606)) (* 3 (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 2 (* s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 9) (* ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 18) (* x00 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 6) (* r00 s00 ?x1490 ?x5606 ?x5606 ?x5606)) (* 18 (* ?x1490 ?x5606 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 3 (* ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 9 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 9 (* r00 s00 ?x5606 ?x5606 ?x5606)) (* 9 (* s00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 4) (* s00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x2433)) (* (- 3) (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 9) (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x2433)) (* (- 9) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 6) (* r00 r00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433 ?x2433)) (* 20 (* ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 9 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 18 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* 2 (* s00 ?x5606 ?x5606 ?x5606 ?x2433)) (* 2 (* ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 3 (* ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 9) (* ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 2 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 3) (* s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 18) (* r00 x00 ?x5606 ?x5606 ?x5606)) (* 9 (* r00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 4) (* s00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 6) (* r00 s00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 2 (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433)) (* (- 9) (* r00 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 9) (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 18 (* r00 ?x5606 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 9 (* s00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 9 (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 6) (* r00 r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* x00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 18 (* ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* 18 (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* 3 (* ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 6 (* r00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 2 (* s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 18) (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* r00 x00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 9) (* r00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 r00 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 9) (* r00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* x00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 2 ?x6159))))
 (let ((?x1440 (* x00 x00)))
 (let ((?x617 (* 108 ?x1440)))
 (let ((?x949 (* (- 9) s)))
 (let ((?x2389 (* r00 r00 s00)))
 (let ((?x1427 (* (- 36) ?x2389)))
 (let ((?x137 (* 9 s00)))
 (let ((?x685 (* s00 s00)))
 (let ((?x8465 (* 51 ?x685)))
 (let ((?x7080 (* r00 r00 s)))
 (let ((?x5711 (* 36 ?x7080)))
 (let ((?x1278 (* s00 s00 s00)))
 (let ((?x5930 (* 16 ?x1278)))
 (let ((?x899 (* s00 x00)))
 (let ((?x5527 (* (- 108) ?x899)))
 (let ((?x976 (* r00 r00 r00 x00)))
 (let ((?x5741 (* (- 432) ?x976)))
 (let ((?x616 (* r00 x00)))
 (let ((?x2544 (* 108 ?x616)))
 (let ((?x1532 (+ (* 216 (* r00 s00 x00)) ?x2544 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x5741 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5527 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5930 (* (- 108) (* x s)) ?x5711 ?x8465 (* (- 108) (* r00 x)) ?x137 ?x1427 ?x949 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x617)))
 (let (($x1959 (= ?x1532 0)))
 (let ((?x5425 (* 15 ?x685)))
 (let ((?x971 (* r00 r00 x00)))
 (let ((?x5423 (* 36 ?x971)))
 (let ((?x4721 (* (- 6) ?x899)))
 (let ((?x4709 (* 54 ?x616)))
 (let ((?x5427 (+ (* 24 (* s r)) ?x4709 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x4721 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5711 ?x5423 ?x5425 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1427 (* 54 (* x00 r)) ?x949 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x593 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x7171 (* 4 ?x685)))
 (let ((?x4004 (* 18 ?x616)))
 (let ((?x7167 (+ (* 9 (* s r)) ?x4004 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x7080) ?x7171 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2389) (* 18 (* x00 r)) ?x593 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x563 (* r00 r00 r00)))
 (let ((?x564 (* 12 ?x563)))
 (let ((?x595 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x594 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x7225 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x593 ?x594 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x595 ?x564)))
 (let (($x1637 (= (+ s00 ?x372 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x5664 (and $x1637 (= ?x7225 0) (= ?x7167 0) (= ?x5427 0) $x1959 (not (= ?x2179 0)))))
 (let ((?x6252 (+ (* (- 2) (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 3 (* s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 3 (* s00 ?x5606 ?x5606 ?x5606)) (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 r00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 x00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 4 (* s00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 3) (* ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* r00 x00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 3 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 r00 s00 ?x5606 ?x5606 ?x5606)) (* (- 9) (* s00 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 9) (* r00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 4 (* s00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 ?x5606 ?x5606 ?x5606 ?x5606)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 9 (* ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 x00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 2) (* ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433)) (* 4 (* s00 s00 ?x5606 ?x5606 ?x5606)) (* (- 3) (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 2) (* s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 18 (* x00 ?x1490 ?x5606 ?x5606 ?x5606)) (* 6 (* r00 s00 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 18) (* ?x1490 ?x5606 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 3) (* ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 9) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 9) (* r00 s00 ?x5606 ?x5606 ?x5606)) (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 4 (* s00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x2433)) (* 3 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 9 (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x2433)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 6 (* r00 r00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 20) (* ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 9) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 18) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* (- 2) (* s00 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 2) (* ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 3) (* ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 9 (* ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 2) (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 3 (* s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 18 (* r00 x00 ?x5606 ?x5606 ?x5606)) (* (- 9) (* r00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 4 (* s00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 6 (* r00 s00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 2) (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433)) (* 9 (* r00 ?x5606 ?x5606 ?x5606 ?x2433)) (* 9 (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 18) (* r00 ?x5606 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 9) (* s00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 6 (* r00 r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* x00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 18) (* ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* (- 18) (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* (- 3) (* ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 6) (* r00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 2) (* s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* r00 x00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 9 (* r00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 r00 ?x5606 ?x5606 ?x5606 ?x2433)) (* 9 (* r00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 2) ?x6159))))
 (let ((?x143 (* 9 s)))
 (let ((?x1081 (* (- 9) s00)))
 (let ((?x1010 (* (- 15) ?x685)))
 (let ((?x984 (* (- 36) ?x971)))
 (let ((?x900 (* 6 ?x899)))
 (let ((?x639 (* s s)))
 (let ((?x663 (* 3 ?x639)))
 (let ((?x645 (* (- 54) ?x616)))
 (let ((?x5514 (+ (* (- 24) (* s r)) ?x645 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x663 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x900 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x7080) ?x984 ?x1010 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1081 (* 36 ?x2389) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x472 (* (- 3) s00)))
 (let ((?x698 (* (- 4) ?x685)))
 (let ((?x640 (* 2 ?x639)))
 (let ((?x630 (* (- 18) ?x616)))
 (let ((?x5641 (+ (* (- 9) (* s r)) ?x630 (* 9 (* r00 s00)) ?x640 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x7080) ?x698 (* 18 (* r00 x)) ?x472 (* 6 ?x2389) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x7617 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x472 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x563))))
 (let (($x2395 (and $x1637 (= ?x7617 0) (= ?x5641 0) (= ?x5514 0) $x1959 (not (= ?x6252 0)))))
 (rewrite (= $x2395 $x5664))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x369 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x220 (+ (* (- 2) ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x213) (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 s00 ?x213 ?x213 ?x213))))
 (let ((?x224 (- (- ?x220 (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 s00 ?x213)) (* 6 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x212 s00))))
 (let ((?x227 (+ ?x224 (* 18 ?x216 ?x216 ?x216 r00 ?x213 ?x213 ?x213 x00) (* 4 ?x216 ?x216 ?x216 ?x212 s00 s00 ?x213))))
 (let ((?x232 (+ (- ?x227 (* 3 ?x212 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 r00 ?x212 ?x212 ?x212 x00) (* 3 ?x216 ?x216 ?x216 ?x212 s00 ?x213))))
 (let ((?x238 (- (- ?x232 (* 6 r00 r00 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 s00 ?x213 ?x213 ?x213))))
 (let ((?x240 (- (- ?x238 (* 6 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x212)) (* 9 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x244 (- (+ ?x240 (* 4 ?x216 ?x216 ?x212 ?x212 ?x212 s00 s00)) (* 18 r00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x248 (+ ?x244 (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213) (* 9 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 18 ?x216 ?x216 ?x216 r00 ?x212 ?x213 x00))))
 (let ((?x253 (+ (- ?x248 (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213)) (* 6 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 s00) (* 18 ?x216 ?x216 ?x216 ?x216 ?x213 ?x213 ?x213 x00))))
 (let ((?x257 (+ (- ?x253 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 4 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x261 (- (- ?x257 (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 2 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x265 (+ ?x261 (* 9 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212) (* 18 ?x216 ?x213 ?x213 ?x213 x00) (* 6 ?x216 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x270 (+ (- ?x265 (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 ?x216 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x276 (- (- ?x270 (* 3 ?x216 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 r00 ?x212 s00 ?x213))))
 (let ((?x278 (- (- ?x276 (* 9 r00 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00))))
 (let ((?x282 (- (+ ?x278 (* 4 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x216 r00 ?x212 ?x213 ?x213))))
 (let ((?x285 (+ ?x282 (* 3 ?x216 ?x216 ?x216 s00 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x290 (+ (- ?x285 (* 18 ?x216 ?x216 ?x216 ?x216 ?x212 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x212))))
 (let ((?x302 (- (- ?x290 (* 18 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213)) (* 20 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213))))
 (let ((?x304 (- (- ?x302 (* 6 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x306 (- (- ?x304 (* 18 ?x216 ?x216 ?x216 ?x216 ?x213 ?x213 ?x213 ?x213)) (* 2 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x308 (- (- ?x306 (* 2 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x212)) (* 6 ?x216 ?x216 ?x216 r00 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x311 (+ (- ?x308 (* 3 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212)) (* 9 ?x216 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x315 (+ (- ?x311 (* 2 ?x216 ?x216 ?x216 ?x212 s00 ?x213 ?x213 ?x213)) (* 3 ?x216 ?x216 ?x212 ?x212 ?x212 s00))))
 (let ((?x319 (+ (- ?x315 (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 s00 ?x213)) (* 18 r00 ?x213 ?x213 ?x213 x00))))
 (let ((?x324 (+ (- ?x319 (* 9 ?x216 ?x216 r00 ?x212 ?x212 ?x212 s00)) (* 4 ?x216 ?x216 ?x216 s00 s00 ?x213 ?x213 ?x213) (* 6 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x329 (+ (- ?x324 (* 2 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 r00 ?x212 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213))))
 (let ((?x334 (- (- ?x329 (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x338 (+ (- ?x334 (* 9 ?x216 ?x216 ?x216 ?x216 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x213 ?x213 ?x213) (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x345 (- (- ?x338 (* 18 ?x216 ?x213 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x216 r00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x347 (- (- ?x345 (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213)) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x350 (+ (- ?x347 (* 2 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 s00)) (* 18 ?x216 ?x216 ?x216 ?x216 ?x212 ?x213 x00))))
 (let ((?x358 (+ (- ?x350 (* 6 ?x216 r00 ?x212 ?x213 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00) (* 9 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 s00 ?x213) (* 6 r00 r00 ?x212 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x212))))
 (let ((?x362 (+ (- ?x358 (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 x00))))
 (let (($x366 (not (= (- ?x362 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213)) 0))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x366))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5634 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x2433 (+ 3 s ?x211)))
 (let ((?x372 (* (- 1) s)))
 (let ((?x5606 (+ x ?x372)))
 (let ((?x1490 (+ 1 r)))
 (let ((?x6159 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)))
 (let ((?x6252 (+ (* (- 2) (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 3 (* s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 3 (* s00 ?x5606 ?x5606 ?x5606)) (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 r00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 x00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 4 (* s00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 3) (* ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* r00 x00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 3 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 r00 s00 ?x5606 ?x5606 ?x5606)) (* (- 9) (* s00 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 9) (* r00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 4 (* s00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 ?x5606 ?x5606 ?x5606 ?x5606)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 9 (* ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 18 (* r00 x00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 2) (* ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433)) (* 4 (* s00 s00 ?x5606 ?x5606 ?x5606)) (* (- 3) (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 2) (* s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 18 (* x00 ?x1490 ?x5606 ?x5606 ?x5606)) (* 6 (* r00 s00 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 18) (* ?x1490 ?x5606 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 r00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 3) (* ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 9) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 9) (* r00 s00 ?x5606 ?x5606 ?x5606)) (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 4 (* s00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x2433)) (* 3 (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 9 (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 18) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x2433)) (* 9 (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 6 (* r00 r00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 18) (* r00 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 20) (* ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 s00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 9) (* r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 18) (* ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* (- 2) (* s00 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 2) (* ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* (- 3) (* ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 9 (* ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* (- 2) (* s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 3 (* s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 r00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 18 (* r00 x00 ?x5606 ?x5606 ?x5606)) (* (- 9) (* r00 s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* 4 (* s00 s00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 6 (* r00 s00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 2) (* ?x5606 ?x5606 ?x5606 ?x2433 ?x2433)) (* 9 (* r00 ?x5606 ?x5606 ?x5606 ?x2433)) (* 9 (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 18) (* r00 ?x5606 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 9) (* s00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 9) (* s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606)) (* 6 (* r00 r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* x00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* (- 18) (* ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* (- 18) (* r00 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x5606)) (* (- 3) (* ?x1490 ?x1490 ?x1490 ?x5606 ?x2433 ?x2433)) (* (- 6) (* r00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 2) (* s00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* (- 6) (* r00 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* r00 x00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433)) (* 9 (* r00 ?x5606 ?x5606 ?x5606 ?x2433 ?x2433 ?x2433 ?x2433)) (* 6 (* r00 s00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x2433)) (* 6 (* r00 r00 ?x5606 ?x5606 ?x5606 ?x2433)) (* 9 (* r00 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433 ?x2433)) (* (- 6) (* r00 ?x1490 ?x1490 ?x1490 ?x1490 ?x5606 ?x5606 ?x5606 ?x2433)) (* 18 (* x00 ?x1490 ?x1490 ?x1490 ?x2433 ?x2433 ?x2433)) (* (- 2) ?x6159))))
 (let ((?x1440 (* x00 x00)))
 (let ((?x617 (* 108 ?x1440)))
 (let ((?x949 (* (- 9) s)))
 (let ((?x2389 (* r00 r00 s00)))
 (let ((?x1427 (* (- 36) ?x2389)))
 (let ((?x137 (* 9 s00)))
 (let ((?x685 (* s00 s00)))
 (let ((?x8465 (* 51 ?x685)))
 (let ((?x7080 (* r00 r00 s)))
 (let ((?x5711 (* 36 ?x7080)))
 (let ((?x1278 (* s00 s00 s00)))
 (let ((?x5930 (* 16 ?x1278)))
 (let ((?x899 (* s00 x00)))
 (let ((?x5527 (* (- 108) ?x899)))
 (let ((?x976 (* r00 r00 r00 x00)))
 (let ((?x5741 (* (- 432) ?x976)))
 (let ((?x616 (* r00 x00)))
 (let ((?x2544 (* 108 ?x616)))
 (let ((?x1532 (+ (* 216 (* r00 s00 x00)) ?x2544 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x5741 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5527 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5930 (* (- 108) (* x s)) ?x5711 ?x8465 (* (- 108) (* r00 x)) ?x137 ?x1427 ?x949 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x617)))
 (let (($x1959 (= ?x1532 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1081 (* (- 9) s00)))
 (let ((?x1010 (* (- 15) ?x685)))
 (let ((?x971 (* r00 r00 x00)))
 (let ((?x984 (* (- 36) ?x971)))
 (let ((?x900 (* 6 ?x899)))
 (let ((?x639 (* s s)))
 (let ((?x663 (* 3 ?x639)))
 (let ((?x645 (* (- 54) ?x616)))
 (let ((?x5514 (+ (* (- 24) (* s r)) ?x645 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x663 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x900 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x7080) ?x984 ?x1010 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1081 (* 36 ?x2389) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x472 (* (- 3) s00)))
 (let ((?x698 (* (- 4) ?x685)))
 (let ((?x640 (* 2 ?x639)))
 (let ((?x630 (* (- 18) ?x616)))
 (let ((?x5641 (+ (* (- 9) (* s r)) ?x630 (* 9 (* r00 s00)) ?x640 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x7080) ?x698 (* 18 (* r00 x)) ?x472 (* 6 ?x2389) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x7617 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x472 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1637 (= (+ s00 ?x372 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2395 (and $x1637 (= ?x7617 0) (= ?x5641 0) (= ?x5514 0) $x1959 (not (= ?x6252 0)))))
 (let ((?x213 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x220 (+ (* (- 2) ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x213) (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 s00 ?x213 ?x213 ?x213))))
 (let ((?x224 (- (- ?x220 (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 s00 ?x213)) (* 6 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x212 s00))))
 (let ((?x227 (+ ?x224 (* 18 ?x216 ?x216 ?x216 r00 ?x213 ?x213 ?x213 x00) (* 4 ?x216 ?x216 ?x216 ?x212 s00 s00 ?x213))))
 (let ((?x232 (+ (- ?x227 (* 3 ?x212 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 r00 ?x212 ?x212 ?x212 x00) (* 3 ?x216 ?x216 ?x216 ?x212 s00 ?x213))))
 (let ((?x238 (- (- ?x232 (* 6 r00 r00 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 s00 ?x213 ?x213 ?x213))))
 (let ((?x240 (- (- ?x238 (* 6 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x212)) (* 9 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x244 (- (+ ?x240 (* 4 ?x216 ?x216 ?x212 ?x212 ?x212 s00 s00)) (* 18 r00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x248 (+ ?x244 (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213) (* 9 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 18 ?x216 ?x216 ?x216 r00 ?x212 ?x213 x00))))
 (let ((?x253 (+ (- ?x248 (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213)) (* 6 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 s00) (* 18 ?x216 ?x216 ?x216 ?x216 ?x213 ?x213 ?x213 x00))))
 (let ((?x257 (+ (- ?x253 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 4 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x261 (- (- ?x257 (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 2 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x265 (+ ?x261 (* 9 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212) (* 18 ?x216 ?x213 ?x213 ?x213 x00) (* 6 ?x216 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x270 (+ (- ?x265 (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 ?x216 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x276 (- (- ?x270 (* 3 ?x216 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 r00 ?x212 s00 ?x213))))
 (let ((?x278 (- (- ?x276 (* 9 r00 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00))))
 (let ((?x282 (- (+ ?x278 (* 4 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x216 r00 ?x212 ?x213 ?x213))))
 (let ((?x285 (+ ?x282 (* 3 ?x216 ?x216 ?x216 s00 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x290 (+ (- ?x285 (* 18 ?x216 ?x216 ?x216 ?x216 ?x212 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x212))))
 (let ((?x302 (- (- ?x290 (* 18 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213)) (* 20 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213))))
 (let ((?x304 (- (- ?x302 (* 6 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x306 (- (- ?x304 (* 18 ?x216 ?x216 ?x216 ?x216 ?x213 ?x213 ?x213 ?x213)) (* 2 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x308 (- (- ?x306 (* 2 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x212)) (* 6 ?x216 ?x216 ?x216 r00 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x311 (+ (- ?x308 (* 3 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212)) (* 9 ?x216 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x315 (+ (- ?x311 (* 2 ?x216 ?x216 ?x216 ?x212 s00 ?x213 ?x213 ?x213)) (* 3 ?x216 ?x216 ?x212 ?x212 ?x212 s00))))
 (let ((?x319 (+ (- ?x315 (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 s00 ?x213)) (* 18 r00 ?x213 ?x213 ?x213 x00))))
 (let ((?x324 (+ (- ?x319 (* 9 ?x216 ?x216 r00 ?x212 ?x212 ?x212 s00)) (* 4 ?x216 ?x216 ?x216 s00 s00 ?x213 ?x213 ?x213) (* 6 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x329 (+ (- ?x324 (* 2 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 r00 ?x212 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213))))
 (let ((?x334 (- (- ?x329 (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x338 (+ (- ?x334 (* 9 ?x216 ?x216 ?x216 ?x216 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x213 ?x213 ?x213) (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x345 (- (- ?x338 (* 18 ?x216 ?x213 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x216 r00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x347 (- (- ?x345 (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213)) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x350 (+ (- ?x347 (* 2 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 s00)) (* 18 ?x216 ?x216 ?x216 ?x216 ?x212 ?x213 x00))))
 (let ((?x358 (+ (- ?x350 (* 6 ?x216 r00 ?x212 ?x213 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00) (* 9 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 s00 ?x213) (* 6 r00 r00 ?x212 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x212))))
 (let ((?x362 (+ (- ?x358 (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 x00))))
 (let (($x366 (not (= (- ?x362 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213)) 0))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x368 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x366))))
 (rewrite (= $x368 $x2395)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x370 (asserted $x369)))
 (let ((@x4667 (mp (mp @x370 (quant-intro (proof-bind ?x5634) (= $x369 $x5682)) $x5682) (rewrite (= $x5682 $x5682)) $x5682)))
 (let ((@x4754 (mp (mp @x4667 (quant-intro (proof-bind ?x5665) (= $x5682 $x5431)) $x5431) (quant-intro (proof-bind ?x10834) (= $x5431 $x10832)) $x10832)))
 (let ((@x3534 (mp (mp~ @x4754 (sk (~ $x10832 $x9203)) $x9203) (rewrite (= $x9203 $x1705)) $x1705)))
 (let ((@x3535 (and-elim @x3534 $x9219)))
 (let ((@x9385 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9219) $x2527)) @x3535 $x2527)))
 (let (($x6669 (>= ?x9216 0)))
 (let ((@x3130 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9219) $x6669)) @x3535 $x6669)))
 (let (($x6678 (<= ?x3224 0)))
 (let ((@x6690 (and-elim @x3534 $x6330)))
 (let ((@x2331 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6330) $x6678)) @x6690 $x6678)))
 (let (($x6625 (>= ?x3224 0)))
 (let ((@x9415 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6330) $x6625)) @x6690 $x6625)))
 (let (($x9321 (<= ?x9388 0)))
 (let ((@x6691 (and-elim @x3534 $x9384)))
 (let ((@x3068 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9384) $x9321)) @x6691 $x9321)))
 (let (($x9401 (>= ?x9388 0)))
 (let ((@x7677 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9384) $x9401)) @x6691 $x9401)))
 (let (($x6623 (<= ?x751 0)))
 (let ((@x6688 (and-elim @x3534 $x2962)))
 (let ((@x9428 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2962) $x6623)) @x6688 $x6623)))
 (let (($x6632 (>= ?x751 0)))
 (let ((@x3777 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2962) $x6632)) @x6688 $x6632)))
 (let (($x3122 (<= ?x9323 0)))
 (let ((@x8166 (and-elim @x3534 $x9325)))
 (let ((@x1936 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9325) $x3122)) @x8166 $x3122)))
 (let (($x9228 (>= ?x9323 0)))
 (let ((@x8705 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9325) $x9228)) @x8166 $x9228)))
 (let (($x4007 (not (<= ?x1709 0))))
 (let (($x9411 (>= ?x1709 0)))
 (let ((@x4093 ((_ th-lemma arith) (hypothesis (not $x9411)) @x3130 @x9385 @x3777 @x9428 @x7677 @x3068 @x3777 @x9428 @x7677 @x3068 @x7677 @x3068 @x8705 @x1936 @x3130 @x9385 @x3777 @x9428 @x3130 @x9385 @x7677 @x3068 @x9415 @x2331 @x3130 @x9385 false)))
 (let ((@x6716 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1703 $x4007 (not $x9411))) (and-elim @x3534 $x3531) (or $x4007 (not $x9411)))))
 ((_ th-lemma arith) (unit-resolution @x6716 (lemma @x4093 $x9411) $x4007) @x3130 @x9385 @x3777 @x9428 @x7677 @x3068 @x3777 @x9428 @x7677 @x3068 @x7677 @x3068 @x8705 @x1936 @x3130 @x9385 @x3777 @x9428 @x3130 @x9385 @x7677 @x3068 @x9415 @x2331 @x3130 @x9385 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        43
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2684
 :arith-nonlinear-bounds    36
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 418
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                5.76
 :memory                    4.23
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                10004865
 :num-checks                1
 :propagations              12
 :rlimit-count              119751
 :time                      0.10
 :total-time                0.13)
