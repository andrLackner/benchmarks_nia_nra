unsat
((set-logic NIA)
(declare-fun q!3 () Int)
(declare-fun a!4 () Int)
(declare-fun b!2 () Int)
(declare-fun p!5 () Int)
(declare-fun s!0 () Int)
(declare-fun r!1 () Int)
(proof
(let ((?x364 (* a!4 q!3)))
 (let ((?x341 (* p!5 b!2)))
 (let ((?x323 (* (- 1) ?x341)))
 (let ((?x134 (* q00 a00)))
 (let ((?x180 (* (- 1) ?x134)))
 (let ((?x119 (* p00 b00)))
 (let ((?x216 (+ ?x119 ?x180 ?x323 ?x364)))
 (let (($x251 (>= ?x216 0)))
 (let (($x223 (= ?x216 0)))
 (let ((?x538 (* (- 1) ?x364)))
 (let ((?x133 (* (- 1) ?x119)))
 (let ((?x782 (+ ?x133 ?x134 ?x341 ?x538)))
 (let ((?x714 (* s!0 s!0 s!0 p!5 p!5 p!5 q!3)))
 (let ((?x693 (+ (* (- 1) (* s!0 s!0 a!4 r!1 b!2 b!2 b!2 q!3 q!3)) (* s!0 s!0 r!1 b!2 b!2 b!2 b!2 q!3 q!3) (* (- 1) (* s!0 s!0 s!0 b!2 b!2 b!2 b!2 q!3 q!3)) (* (- 3) (* s!0 s!0 s!0 p!5 p!5 q!3 q!3)) (* 3 (* s!0 s!0 s!0 p!5 q!3 q!3 q!3)) (* (- 1) (* s!0 s!0 s!0 q!3 q!3 q!3 q!3)) ?x714 (* s!0 s!0 s!0 a!4 b!2 b!2 b!2 q!3 q!3))))
 (let ((?x687 (* ?x693 ?x782)))
 (let (($x702 (= ?x687 0)))
 (let ((?x512 (+ (* (- 1) p!5) q!3)))
 (let ((?x510 (+ (* (- 1) a!4) b!2)))
 (let ((?x616 (* (- 1) r!1)))
 (let ((?x444 (+ s!0 ?x616)))
 (let ((?x731 (+ (* r!1 r!1 r!1 p!5 p!5 p!5 p!5) (* (- 1) (* r!1 r!1 r!1 p!5 p!5 p!5 q!3)) (* (- 3) (* s!0 r!1 r!1 p!5 p!5 p!5 p!5)) (* 3 (* s!0 r!1 r!1 p!5 p!5 p!5 q!3)) (* 3 (* s!0 s!0 r!1 p!5 p!5 p!5 p!5)) (* (- 3) (* s!0 s!0 r!1 p!5 p!5 p!5 q!3)) (* (- 1) (* ?x444 ?x444 ?x510 ?x510 ?x510 ?x512 ?x512 r!1 a!4)) ?x714 (* (- 1) (* s!0 s!0 s!0 p!5 p!5 p!5 p!5)))))
 (let ((?x160 (* ?x731 ?x782)))
 (let (($x669 (= ?x160 0)))
 (let (($x152 (not $x669)))
 (let (($x752 (or $x152 (not $x702))))
 (let ((?x504 (+ (* q00 a00 s!0) (* r00 b00 q!3) (* p00 s00 b!2) (* (- 1) (* p00 b00 s!0)) (* (- 1) (* s00 a00 q!3)) (* (- 1) (* q00 r00 b!2)))))
 (let ((?x716 (+ (* p00 s00 a!4) (* (- 1) (* q00 r00 a!4)) (* r00 b00 p!5) (* (- 1) (* p00 b00 r!1)) (* (- 1) (* s00 a00 p!5)) (* q00 a00 r!1))))
 (let ((?x130 (* s00 a00)))
 (let ((?x209 (+ (* r!1 b!2) ?x130 (* (- 1) (* r00 b00)) (* (- 1) (* s!0 a!4)))))
 (let ((?x41 (* q00 r00)))
 (let ((?x495 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x734 (and (= (+ ?x37 ?x495 (* r!1 q!3) (* (- 1) (* s!0 p!5))) 0) (= ?x209 0) $x223 (= ?x716 0) (= ?x504 0) $x752)))
 (let ((?x375 (+ ?x133 ?x538 ?x134 ?x341)))
 (let ((?x482 (* p!5 p!5 p!5 q!3 s!0 s!0 s!0)))
 (let ((?x579 (+ ?x482 (* (- 3) (* p!5 p!5 q!3 q!3 s!0 s!0 s!0)) (* 3 (* p!5 q!3 q!3 q!3 s!0 s!0 s!0)) (* (- 1) (* q!3 q!3 q!3 q!3 s!0 s!0 s!0)) (* (- 1) (* a!4 q!3 q!3 b!2 b!2 b!2 r!1 s!0 s!0)) (* q!3 q!3 b!2 b!2 b!2 b!2 r!1 s!0 s!0) (* a!4 q!3 q!3 b!2 b!2 b!2 s!0 s!0 s!0) (* (- 1) (* q!3 q!3 b!2 b!2 b!2 b!2 s!0 s!0 s!0)))))
 (let ((?x622 (+ ?x616 s!0)))
 (let ((?x511 (+ (* (- 1) (* ?x622 ?x622 ?x510 ?x510 ?x510 ?x512 ?x512 r!1 a!4)) ?x482 (* p!5 p!5 p!5 p!5 r!1 r!1 r!1) (* (- 1) (* p!5 p!5 p!5 q!3 r!1 r!1 r!1)) (* (- 3) (* p!5 p!5 p!5 p!5 r!1 r!1 s!0)) (* 3 (* p!5 p!5 p!5 q!3 r!1 r!1 s!0)) (* 3 (* p!5 p!5 p!5 p!5 r!1 s!0 s!0)) (* (- 3) (* p!5 p!5 p!5 q!3 r!1 s!0 s!0)) (* (- 1) (* p!5 p!5 p!5 p!5 s!0 s!0 s!0)))))
 (let ((?x551 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x274 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let ((?x148 (* r00 b00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let (($x547 (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) (* q!3 r!1))) 0)))
 (let (($x589 (and $x547 (= (+ (* a!4 s!0) (* (- 1) (* b!2 r!1)) ?x137 ?x148) 0) (= (+ ?x119 ?x364 ?x180 ?x323) 0) (= ?x274 0) (= ?x551 0) (or (not (= (* ?x511 ?x375) 0)) (not (= (* ?x579 ?x375) 0))))))
 (let (($x370 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x165 (* p b)))
 (let ((?x134 (* q00 a00)))
 (let ((?x126 (* a q)))
 (let ((?x127 (* (- 1) ?x126)))
 (let ((?x119 (* p00 b00)))
 (let ((?x133 (* (- 1) ?x119)))
 (let ((?x177 (+ ?x133 ?x127 ?x134 ?x165)))
 (let ((?x348 (* p p p q s s s)))
 (let ((?x468 (+ ?x348 (* (- 3) (* p p q q s s s)) (* 3 (* p q q q s s s)) (* (- 1) (* q q q q s s s)) (* (- 1) (* a q q b b b r s s)) (* q q b b b b r s s) (* a q q b b b s s s) (* (- 1) (* q q b b b b s s s)))))
 (let ((?x611 (* (- 1) (* p p p p s s s))))
 (let ((?x620 (* (- 3) (* p p p q r s s))))
 (let ((?x619 (* 3 (* p p p p r s s))))
 (let ((?x618 (* 3 (* p p p q r r s))))
 (let ((?x617 (* (- 3) (* p p p p r r s))))
 (let ((?x533 (* (- 1) (* p p p q r r r))))
 (let ((?x529 (* p p p p r r r)))
 (let ((?x346 (* (- 1) p)))
 (let ((?x360 (+ ?x346 q)))
 (let ((?x296 (* (- 1) a)))
 (let ((?x304 (+ ?x296 b)))
 (let ((?x479 (* (- 1) r)))
 (let ((?x501 (+ ?x479 s)))
 (let ((?x481 (+ (* (- 1) (* ?x501 ?x501 ?x304 ?x304 ?x304 ?x360 ?x360 r a)) ?x348 ?x529 ?x533 ?x617 ?x618 ?x619 ?x620 ?x611)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x312 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x317 (= ?x312 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x248 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x249 (= ?x248 0)))
 (let (($x183 (= (+ ?x119 ?x126 (* (- 1) ?x134) (* (- 1) ?x165)) 0)))
 (let ((?x148 (* r00 b00)))
 (let ((?x130 (* s00 a00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x49 (* a s)))
 (let (($x163 (= (+ ?x49 (* (- 1) (* b r)) ?x137 ?x148) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x158 (= (+ ?x33 ?x139 ?x41 (* (- 1) (* q r))) 0)))
 (and $x158 $x163 $x183 $x249 $x317 (or (not (= (* ?x481 ?x177) 0)) (not (= (* ?x468 ?x177) 0)))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x141 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x57 (* b00 p00)))
 (let ((?x454 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x448 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x454 (* (+ p (* (- 1) q)) b))))
 (let ((?x258 (* (- 1) b)))
 (let ((?x231 (+ a ?x258)))
 (let ((?x470 (* (+ r (* (- 1) s)) ?x231 s s b b b q q)))
 (let ((?x365 (+ p (* (- 1) q))))
 (let (($x560 (= (* (+ (* ?x365 ?x365 ?x365 s s s q) (* (- 1) ?x470)) ?x448) 0)))
 (let ((?x462 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x454 (* (+ b (* (- 1) a)) p))))
 (let ((?x346 (* (- 1) p)))
 (let ((?x562 (+ q ?x346)))
 (let ((?x296 (* (- 1) a)))
 (let ((?x302 (+ b ?x296)))
 (let ((?x479 (* (- 1) r)))
 (let ((?x469 (+ s ?x479)))
 (let ((?x500 (+ (* ?x469 ?x469 ?x469 ?x562 p p p) (* (- 1) (* ?x469 ?x469 ?x302 ?x302 ?x302 ?x562 ?x562 r a)))))
 (let (($x138 (or (not (= (* ?x500 ?x462) 0)) (not $x560))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x293 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x377 (= ?x293 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x569 (* p00 s00 a)))
 (let ((?x120 (* b00 r00 p)))
 (let ((?x238 (+ ?x120 ?x569 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x200 (= (+ (* q a) (* (- 1) ?x55) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x419 (* r b)))
 (let (($x305 (= (+ ?x419 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x495 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x421 (* r q)))
 (and (= (+ ?x421 (* (- 1) (* s p)) ?x37 ?x495) 0) $x305 $x200 (= ?x238 0) $x377 $x138)))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x374 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x165 (* p b)))
 (let ((?x134 (* q00 a00)))
 (let ((?x126 (* a q)))
 (let ((?x127 (* (- 1) ?x126)))
 (let ((?x119 (* p00 b00)))
 (let ((?x133 (* (- 1) ?x119)))
 (let ((?x177 (+ ?x133 ?x127 ?x134 ?x165)))
 (let ((?x348 (* p p p q s s s)))
 (let ((?x468 (+ ?x348 (* (- 3) (* p p q q s s s)) (* 3 (* p q q q s s s)) (* (- 1) (* q q q q s s s)) (* (- 1) (* a q q b b b r s s)) (* q q b b b b r s s) (* a q q b b b s s s) (* (- 1) (* q q b b b b s s s)))))
 (let ((?x611 (* (- 1) (* p p p p s s s))))
 (let ((?x620 (* (- 3) (* p p p q r s s))))
 (let ((?x619 (* 3 (* p p p p r s s))))
 (let ((?x618 (* 3 (* p p p q r r s))))
 (let ((?x617 (* (- 3) (* p p p p r r s))))
 (let ((?x533 (* (- 1) (* p p p q r r r))))
 (let ((?x529 (* p p p p r r r)))
 (let ((?x346 (* (- 1) p)))
 (let ((?x360 (+ ?x346 q)))
 (let ((?x296 (* (- 1) a)))
 (let ((?x304 (+ ?x296 b)))
 (let ((?x479 (* (- 1) r)))
 (let ((?x501 (+ ?x479 s)))
 (let ((?x481 (+ (* (- 1) (* ?x501 ?x501 ?x304 ?x304 ?x304 ?x360 ?x360 r a)) ?x348 ?x529 ?x533 ?x617 ?x618 ?x619 ?x620 ?x611)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x312 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x317 (= ?x312 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x248 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x249 (= ?x248 0)))
 (let (($x183 (= (+ ?x119 ?x126 (* (- 1) ?x134) (* (- 1) ?x165)) 0)))
 (let ((?x148 (* r00 b00)))
 (let ((?x130 (* s00 a00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x49 (* a s)))
 (let (($x163 (= (+ ?x49 (* (- 1) (* b r)) ?x137 ?x148) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x158 (= (+ ?x33 ?x139 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x735 (and $x158 $x163 $x183 $x249 $x317 (or (not (= (* ?x481 ?x177) 0)) (not (= (* ?x468 ?x177) 0))))))
 (let ((?x57 (* b00 p00)))
 (let ((?x454 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x448 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x454 (* (+ p (* (- 1) q)) b))))
 (let ((?x258 (* (- 1) b)))
 (let ((?x231 (+ a ?x258)))
 (let ((?x470 (* (+ r (* (- 1) s)) ?x231 s s b b b q q)))
 (let ((?x365 (+ p (* (- 1) q))))
 (let (($x560 (= (* (+ (* ?x365 ?x365 ?x365 s s s q) (* (- 1) ?x470)) ?x448) 0)))
 (let ((?x462 (+ (* (- 1) (* (+ q ?x346) a)) ?x55 ?x454 (* (+ b ?x296) p))))
 (let ((?x562 (+ q ?x346)))
 (let ((?x302 (+ b ?x296)))
 (let ((?x469 (+ s ?x479)))
 (let ((?x500 (+ (* ?x469 ?x469 ?x469 ?x562 p p p) (* (- 1) (* ?x469 ?x469 ?x302 ?x302 ?x302 ?x562 ?x562 r a)))))
 (let (($x138 (or (not (= (* ?x500 ?x462) 0)) (not $x560))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x293 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x377 (= ?x293 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x569 (* p00 s00 a)))
 (let ((?x120 (* b00 r00 p)))
 (let ((?x238 (+ ?x120 ?x569 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x200 (= (+ (* q a) (* (- 1) ?x55) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x419 (* r b)))
 (let (($x305 (= (+ ?x419 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x314 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x491 (and $x314 $x305 $x200 (= ?x238 0) $x377 $x138)))
 (rewrite (= $x491 $x735))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x260 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x57 (* b00 p00)))
 (let ((?x454 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x448 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x454 (* (+ p (* (- 1) q)) b))))
 (let ((?x258 (* (- 1) b)))
 (let ((?x231 (+ a ?x258)))
 (let ((?x470 (* (+ r (* (- 1) s)) ?x231 s s b b b q q)))
 (let ((?x365 (+ p (* (- 1) q))))
 (let (($x560 (= (* (+ (* ?x365 ?x365 ?x365 s s s q) (* (- 1) ?x470)) ?x448) 0)))
 (let ((?x462 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x454 (* (+ b (* (- 1) a)) p))))
 (let ((?x346 (* (- 1) p)))
 (let ((?x562 (+ q ?x346)))
 (let ((?x296 (* (- 1) a)))
 (let ((?x302 (+ b ?x296)))
 (let ((?x479 (* (- 1) r)))
 (let ((?x469 (+ s ?x479)))
 (let ((?x500 (+ (* ?x469 ?x469 ?x469 ?x562 p p p) (* (- 1) (* ?x469 ?x469 ?x302 ?x302 ?x302 ?x562 ?x562 r a)))))
 (let (($x138 (or (not (= (* ?x500 ?x462) 0)) (not $x560))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x293 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x377 (= ?x293 0)))
 (let ((?x493 (* a00 s00 p)))
 (let ((?x496 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x578 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x496 ?x493 (* (- 1) (* a00 q00 r)))))
 (let ((?x51 (* b00 r00)))
 (let ((?x536 (* s a)))
 (let (($x131 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x536 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x135 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x135 ?x139 ?x41) 0) $x131 (= (+ (* (- 1) (* q a)) ?x55 ?x454 (* b p)) 0) (= ?x578 0) $x377 $x138))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x467 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x57 (* b00 p00)))
 (let ((?x454 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x448 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x454 (* (+ p (* (- 1) q)) b))))
 (let ((?x258 (* (- 1) b)))
 (let ((?x231 (+ a ?x258)))
 (let ((?x470 (* (+ r (* (- 1) s)) ?x231 s s b b b q q)))
 (let ((?x365 (+ p (* (- 1) q))))
 (let (($x560 (= (* (+ (* ?x365 ?x365 ?x365 s s s q) (* (- 1) ?x470)) ?x448) 0)))
 (let ((?x462 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x454 (* (+ b (* (- 1) a)) p))))
 (let ((?x346 (* (- 1) p)))
 (let ((?x562 (+ q ?x346)))
 (let ((?x296 (* (- 1) a)))
 (let ((?x302 (+ b ?x296)))
 (let ((?x479 (* (- 1) r)))
 (let ((?x469 (+ s ?x479)))
 (let ((?x500 (+ (* ?x469 ?x469 ?x469 ?x562 p p p) (* (- 1) (* ?x469 ?x469 ?x302 ?x302 ?x302 ?x562 ?x562 r a)))))
 (let (($x138 (or (not (= (* ?x500 ?x462) 0)) (not $x560))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x293 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x377 (= ?x293 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x569 (* p00 s00 a)))
 (let ((?x120 (* b00 r00 p)))
 (let ((?x238 (+ ?x120 ?x569 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x200 (= (+ (* q a) (* (- 1) ?x55) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x419 (* r b)))
 (let (($x305 (= (+ ?x419 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x495 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x421 (* r q)))
 (let (($x491 (and (= (+ ?x421 (* (- 1) (* s p)) ?x37 ?x495) 0) $x305 $x200 (= ?x238 0) $x377 $x138)))
 (let ((?x493 (* a00 s00 p)))
 (let ((?x496 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x140 (= (+ (* (- 1) ?x120) (* (- 1) ?x569) ?x65 ?x496 ?x493 (* (- 1) ?x69)) 0)))
 (let (($x131 (= (+ (* (- 1) ?x419) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x447 (and (= (+ (* (- 1) ?x421) (* s p) (* (- 1) ?x37) ?x41) 0) $x131 (= (+ (* (- 1) (* q a)) ?x55 ?x454 (* b p)) 0) $x140 $x377 $x138)))
 (rewrite (= $x447 $x491)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x114 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x105 (- s r)))
 (let ((?x98 (- q p)))
 (let ((?x102 (- b a)))
 (let ((?x108 (- (* p p p ?x98 ?x105 ?x105 ?x105) (* a ?x102 ?x102 ?x102 ?x98 ?x98 r ?x105 ?x105))))
 (let ((?x104 (+ (- (+ (* (- 1) a ?x98) (* a00 q00)) (* b00 p00)) (* ?x102 p))))
 (let ((?x94 (- (* (- p q) (- p q) (- p q) q s s s) (* (- a b) b b b q q (- r s) s s))))
 (let ((?x57 (* b00 p00)))
 (let ((?x90 (+ (- (+ (* (- 1) (- a b) q) (* a00 q00)) ?x57) (* b (- p q)))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) (* a00 q00)) ?x57) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) ?x49 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 $x61 (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= (* ?x90 ?x94) 0)) (not (= (* ?x104 ?x108) 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x545 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x57 (* b00 p00)))
 (let ((?x454 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x448 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x454 (* (+ p (* (- 1) q)) b))))
 (let ((?x258 (* (- 1) b)))
 (let ((?x231 (+ a ?x258)))
 (let ((?x470 (* (+ r (* (- 1) s)) ?x231 s s b b b q q)))
 (let ((?x365 (+ p (* (- 1) q))))
 (let (($x560 (= (* (+ (* ?x365 ?x365 ?x365 s s s q) (* (- 1) ?x470)) ?x448) 0)))
 (let ((?x462 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x454 (* (+ b (* (- 1) a)) p))))
 (let ((?x346 (* (- 1) p)))
 (let ((?x562 (+ q ?x346)))
 (let ((?x296 (* (- 1) a)))
 (let ((?x302 (+ b ?x296)))
 (let ((?x479 (* (- 1) r)))
 (let ((?x469 (+ s ?x479)))
 (let ((?x500 (+ (* ?x469 ?x469 ?x469 ?x562 p p p) (* (- 1) (* ?x469 ?x469 ?x302 ?x302 ?x302 ?x562 ?x562 r a)))))
 (let (($x138 (or (not (= (* ?x500 ?x462) 0)) (not $x560))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x293 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x377 (= ?x293 0)))
 (let ((?x493 (* a00 s00 p)))
 (let ((?x496 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x578 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x496 ?x493 (* (- 1) (* a00 q00 r)))))
 (let ((?x51 (* b00 r00)))
 (let ((?x536 (* s a)))
 (let (($x131 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x536 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x135 (* s p)))
 (let (($x447 (and (= (+ (* (- 1) (* r q)) ?x135 ?x139 ?x41) 0) $x131 (= (+ (* (- 1) (* q a)) ?x55 ?x454 (* b p)) 0) (= ?x578 0) $x377 $x138)))
 (let ((?x105 (- s r)))
 (let ((?x98 (- q p)))
 (let ((?x102 (- b a)))
 (let ((?x108 (- (* p p p ?x98 ?x105 ?x105 ?x105) (* a ?x102 ?x102 ?x102 ?x98 ?x98 r ?x105 ?x105))))
 (let ((?x109 (* (+ (- (+ (* (- 1) a ?x98) ?x55) ?x57) (* ?x102 p)) ?x108)))
 (let ((?x94 (- (* (- p q) (- p q) (- p q) q s s s) (* (- a b) b b b q q (- r s) s s))))
 (let ((?x90 (+ (- (+ (* (- 1) (- a b) q) ?x55) ?x57) (* b (- p q)))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) ?x57) (* b p)) 0)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x113 (and $x44 $x53 $x61 (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= (* ?x90 ?x94) 0)) (not (= ?x109 0))))))
 (rewrite (= $x113 $x447)))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x115 (asserted $x114)))
 (let ((@x587 (mp (mp @x115 (quant-intro (proof-bind ?x545) (= $x114 $x260)) $x260) (rewrite (= $x260 $x260)) $x260)))
 (let ((@x576 (mp (mp @x587 (quant-intro (proof-bind ?x467) (= $x260 $x141)) $x141) (quant-intro (proof-bind ?x374) (= $x141 $x370)) $x370)))
 (let ((@x685 (mp (mp~ @x576 (sk (~ $x370 $x589)) $x589) (rewrite (= $x589 $x734)) $x734)))
 (let ((@x680 (and-elim @x685 $x223)))
 (let ((@x528 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x223) $x251)) @x680 $x251)))
 (let (($x686 (<= ?x216 0)))
 (let ((@x355 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x223) $x686)) @x680 $x686)))
 (let (($x175 (not (<= ?x160 0))))
 (let (($x353 (>= ?x687 0)))
 (let (($x624 (<= ?x687 0)))
 (let ((@x262 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x702 (not $x624) (not $x353))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x624)) @x355 @x528 false) $x624) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x353)) @x355 @x528 false) $x353) $x702)))
 (let (($x385 (>= ?x160 0)))
 (let ((@x173 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x669 $x175 (not $x385))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x385)) @x355 @x528 false) $x385) (unit-resolution (and-elim @x685 $x752) @x262 $x152) $x175)))
 ((_ th-lemma arith farkas 1 1 1) @x173 @x355 @x528 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             472
 :arith-nonlinear-horner    36
 :arith-num-rows            11
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 68
 :arith-tableau-max-rows    11
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                106.76
 :memory                    3.13
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                982672255127.00
 :num-checks                1
 :propagations              19
 :rlimit-count              29388699
 :time                      16.16
 :total-time                16.08)
