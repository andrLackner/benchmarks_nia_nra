unsat
((set-logic NIA)
(proof
(let (($x394 (exists ((r Int) (s Int) (x Int) )(! (let ((?x247 (* r00 r00)))
 (let ((?x1279 (* (- 3) ?x247)))
 (let ((?x318 (* (- 1) s)))
 (let ((?x403 (+ s00 ?x318 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x1279)))
 (let (($x947 (not (= ?x403 3))))
 (let ((?x1292 (* x00 x00)))
 (let ((?x316 (* 108 ?x1292)))
 (let ((?x701 (* (- 216) (* x00 x))))
 (let ((?x263 (* r00 s)))
 (let ((?x1278 (* 54 ?x263)))
 (let ((?x1260 (* (- 9) s)))
 (let ((?x720 (* r00 r00 s00)))
 (let ((?x1211 (* (- 36) ?x720)))
 (let ((?x137 (* 9 s00)))
 (let ((?x906 (* r00 x)))
 (let ((?x1153 (* (- 108) ?x906)))
 (let ((?x537 (* s00 s00)))
 (let ((?x1111 (* 51 ?x537)))
 (let ((?x991 (* r00 r00 s)))
 (let ((?x655 (* 36 ?x991)))
 (let ((?x1329 (* x s)))
 (let ((?x1083 (* (- 108) ?x1329)))
 (let ((?x1130 (* s00 s00 s00)))
 (let ((?x1041 (* 16 ?x1130)))
 (let ((?x1037 (* 36 (* r00 r00 s s))))
 (let ((?x998 (* (- 216) (* r00 s00 x))))
 (let ((?x751 (* s00 x00)))
 (let ((?x893 (* (- 108) ?x751)))
 (let ((?x1388 (* r00 s00 s)))
 (let ((?x805 (* 108 ?x1388)))
 (let ((?x964 (* s00 s)))
 (let ((?x737 (* (- 66) ?x964)))
 (let ((?x467 (* 432 (* r00 r00 r00 x))))
 (let ((?x1416 (* x00 s)))
 (let ((?x1333 (* 108 ?x1416)))
 (let ((?x1161 (* 216 (* r00 r00 r00 s00))))
 (let ((?x779 (* r00 s00 s00)))
 (let ((?x264 (* (- 108) ?x779)))
 (let ((?x647 (* s00 x)))
 (let ((?x867 (* 108 ?x647)))
 (let ((?x567 (* (- 12) (* s00 s s))))
 (let ((?x828 (* r00 r00 r00 x00)))
 (let ((?x845 (* (- 432) ?x828)))
 (let ((?x800 (* x x)))
 (let ((?x557 (* 108 ?x800)))
 (let ((?x749 (* s s s)))
 (let ((?x1336 (* (- 4) ?x749)))
 (let ((?x1374 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x788 (* (- 216) (* r00 r00 r00 s))))
 (let ((?x491 (* s s)))
 (let ((?x1282 (* 15 ?x491)))
 (let ((?x626 (* r00 s00)))
 (let ((?x918 (* (- 54) ?x626)))
 (let ((?x468 (* r00 x00)))
 (let ((?x326 (* 108 ?x468)))
 (let ((?x931 (* 216 (* r00 s00 x00))))
 (let ((?x335 (+ ?x931 ?x326 ?x918 ?x1282 ?x788 ?x1374 ?x1336 ?x557 ?x845 ?x567 ?x867 ?x264 ?x1161 ?x1333 ?x467 ?x737 ?x805 ?x893 ?x998 ?x1037 ?x1041 ?x1083 ?x655 ?x1111 ?x1153 ?x137 ?x1211 ?x1260 ?x1278 ?x701 ?x316)))
 (let (($x341 (= ?x335 0)))
 (let ((?x562 (* r00 r00 x)))
 (let ((?x952 (* (- 36) ?x562)))
 (let ((?x1261 (* 24 ?x263)))
 (let ((?x897 (* s00 r)))
 (let ((?x662 (* (- 24) ?x897)))
 (let ((?x785 (* x00 r)))
 (let ((?x1032 (* 54 ?x785)))
 (let ((?x656 (* (- 54) ?x906)))
 (let ((?x657 (* r00 x00 r)))
 (let ((?x523 (* 36 ?x657)))
 (let ((?x401 (* s00 s r)))
 (let ((?x986 (* (- 2) ?x401)))
 (let ((?x687 (* 15 ?x537)))
 (let ((?x823 (* r00 r00 x00)))
 (let ((?x686 (* 36 ?x823)))
 (let ((?x1357 (* s00 s00 r)))
 (let ((?x746 (* 4 ?x1357)))
 (let ((?x1289 (* (- 6) ?x1329)))
 (let ((?x1012 (* s s r)))
 (let ((?x1225 (* (- 2) ?x1012)))
 (let ((?x1224 (* (- 6) ?x751)))
 (let ((?x1113 (* 2 ?x1388)))
 (let ((?x1192 (* (- 12) ?x964)))
 (let ((?x1191 (* 6 ?x1416)))
 (let ((?x1184 (* 2 ?x779)))
 (let ((?x739 (* r00 s s)))
 (let ((?x783 (* (- 4) ?x739)))
 (let ((?x781 (* 6 ?x647)))
 (let ((?x923 (* x r)))
 (let ((?x780 (* (- 54) ?x923)))
 (let ((?x777 (* (- 3) ?x491)))
 (let ((?x711 (* (- 24) ?x626)))
 (let ((?x628 (* r00 x r)))
 (let ((?x880 (* (- 36) ?x628)))
 (let ((?x776 (* 54 ?x468)))
 (let ((?x586 (* s r)))
 (let ((?x775 (* 24 ?x586)))
 (let ((?x430 (+ ?x775 ?x776 ?x880 ?x711 ?x777 ?x780 ?x781 ?x783 ?x1184 ?x1191 ?x1192 ?x1113 ?x1224 ?x1225 ?x1289 ?x746 ?x655 ?x686 ?x687 ?x986 ?x523 ?x656 ?x137 ?x1211 ?x1032 ?x1260 ?x662 ?x1261 ?x952)))
 (let (($x431 (= ?x430 0)))
 (let ((?x682 (* r00 s00 r)))
 (let ((?x388 (* 6 ?x682)))
 (let ((?x395 (* 9 ?x263)))
 (let ((?x387 (* (- 2) ?x964)))
 (let ((?x369 (* (- 9) ?x897)))
 (let ((?x445 (* (- 3) s)))
 (let ((?x368 (* 18 ?x785)))
 (let ((?x353 (* (- 6) ?x720)))
 (let ((?x44 (* 3 s00)))
 (let ((?x367 (* (- 18) ?x906)))
 (let ((?x839 (* 4 ?x537)))
 (let ((?x361 (* 6 ?x991)))
 (let ((?x624 (* r00 s r)))
 (let ((?x397 (* (- 6) ?x624)))
 (let ((?x396 (* (- 18) ?x923)))
 (let ((?x366 (* (- 2) ?x491)))
 (let ((?x864 (* (- 9) ?x626)))
 (let ((?x846 (* 18 ?x468)))
 (let ((?x855 (* 9 ?x586)))
 (let ((?x398 (+ ?x855 ?x846 ?x864 ?x366 ?x396 ?x397 ?x361 ?x839 ?x367 ?x44 ?x353 ?x368 ?x445 ?x369 ?x387 ?x395 ?x388)))
 (let (($x978 (= ?x398 0)))
 (let ((?x415 (* r00 r00 r00)))
 (let ((?x416 (* 12 ?x415)))
 (let ((?x447 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x446 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x227 (+ (* 2 ?x586) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x445 ?x446 (* 4 ?x897) (* (- 6) ?x626) ?x56 ?x447 ?x416)))
 (let (($x849 (= ?x227 0)))
 (let ((?x235 (* r r)))
 (let ((?x578 (* 3 ?x235)))
 (let ((?x460 (+ s00 ?x318 ?x578 ?x1279)))
 (let (($x617 (= ?x460 0)))
 (and $x617 $x849 $x978 $x431 $x341 $x947))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1302 (exists ((r Int) (s Int) (x Int) )(! false :qid k!34))
 ))
 (let ((?x1326 (lambda ((r Int) (s Int) (x Int) )(let ((?x247 (* r00 r00)))
 (let ((?x1279 (* (- 3) ?x247)))
 (let ((?x318 (* (- 1) s)))
 (let ((?x403 (+ s00 ?x318 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x1279)))
 (let (($x947 (not (= ?x403 3))))
 (let ((?x1292 (* x00 x00)))
 (let ((?x316 (* 108 ?x1292)))
 (let ((?x701 (* (- 216) (* x00 x))))
 (let ((?x263 (* r00 s)))
 (let ((?x1278 (* 54 ?x263)))
 (let ((?x1260 (* (- 9) s)))
 (let ((?x720 (* r00 r00 s00)))
 (let ((?x1211 (* (- 36) ?x720)))
 (let ((?x137 (* 9 s00)))
 (let ((?x906 (* r00 x)))
 (let ((?x1153 (* (- 108) ?x906)))
 (let ((?x537 (* s00 s00)))
 (let ((?x1111 (* 51 ?x537)))
 (let ((?x991 (* r00 r00 s)))
 (let ((?x655 (* 36 ?x991)))
 (let ((?x1329 (* x s)))
 (let ((?x1083 (* (- 108) ?x1329)))
 (let ((?x1130 (* s00 s00 s00)))
 (let ((?x1041 (* 16 ?x1130)))
 (let ((?x1037 (* 36 (* r00 r00 s s))))
 (let ((?x998 (* (- 216) (* r00 s00 x))))
 (let ((?x751 (* s00 x00)))
 (let ((?x893 (* (- 108) ?x751)))
 (let ((?x1388 (* r00 s00 s)))
 (let ((?x805 (* 108 ?x1388)))
 (let ((?x964 (* s00 s)))
 (let ((?x737 (* (- 66) ?x964)))
 (let ((?x467 (* 432 (* r00 r00 r00 x))))
 (let ((?x1416 (* x00 s)))
 (let ((?x1333 (* 108 ?x1416)))
 (let ((?x1161 (* 216 (* r00 r00 r00 s00))))
 (let ((?x779 (* r00 s00 s00)))
 (let ((?x264 (* (- 108) ?x779)))
 (let ((?x647 (* s00 x)))
 (let ((?x867 (* 108 ?x647)))
 (let ((?x567 (* (- 12) (* s00 s s))))
 (let ((?x828 (* r00 r00 r00 x00)))
 (let ((?x845 (* (- 432) ?x828)))
 (let ((?x800 (* x x)))
 (let ((?x557 (* 108 ?x800)))
 (let ((?x749 (* s s s)))
 (let ((?x1336 (* (- 4) ?x749)))
 (let ((?x1374 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x788 (* (- 216) (* r00 r00 r00 s))))
 (let ((?x491 (* s s)))
 (let ((?x1282 (* 15 ?x491)))
 (let ((?x626 (* r00 s00)))
 (let ((?x918 (* (- 54) ?x626)))
 (let ((?x468 (* r00 x00)))
 (let ((?x326 (* 108 ?x468)))
 (let ((?x931 (* 216 (* r00 s00 x00))))
 (let ((?x335 (+ ?x931 ?x326 ?x918 ?x1282 ?x788 ?x1374 ?x1336 ?x557 ?x845 ?x567 ?x867 ?x264 ?x1161 ?x1333 ?x467 ?x737 ?x805 ?x893 ?x998 ?x1037 ?x1041 ?x1083 ?x655 ?x1111 ?x1153 ?x137 ?x1211 ?x1260 ?x1278 ?x701 ?x316)))
 (let (($x341 (= ?x335 0)))
 (let ((?x562 (* r00 r00 x)))
 (let ((?x952 (* (- 36) ?x562)))
 (let ((?x1261 (* 24 ?x263)))
 (let ((?x897 (* s00 r)))
 (let ((?x662 (* (- 24) ?x897)))
 (let ((?x785 (* x00 r)))
 (let ((?x1032 (* 54 ?x785)))
 (let ((?x656 (* (- 54) ?x906)))
 (let ((?x657 (* r00 x00 r)))
 (let ((?x523 (* 36 ?x657)))
 (let ((?x401 (* s00 s r)))
 (let ((?x986 (* (- 2) ?x401)))
 (let ((?x687 (* 15 ?x537)))
 (let ((?x823 (* r00 r00 x00)))
 (let ((?x686 (* 36 ?x823)))
 (let ((?x1357 (* s00 s00 r)))
 (let ((?x746 (* 4 ?x1357)))
 (let ((?x1289 (* (- 6) ?x1329)))
 (let ((?x1012 (* s s r)))
 (let ((?x1225 (* (- 2) ?x1012)))
 (let ((?x1224 (* (- 6) ?x751)))
 (let ((?x1113 (* 2 ?x1388)))
 (let ((?x1192 (* (- 12) ?x964)))
 (let ((?x1191 (* 6 ?x1416)))
 (let ((?x1184 (* 2 ?x779)))
 (let ((?x739 (* r00 s s)))
 (let ((?x783 (* (- 4) ?x739)))
 (let ((?x781 (* 6 ?x647)))
 (let ((?x923 (* x r)))
 (let ((?x780 (* (- 54) ?x923)))
 (let ((?x777 (* (- 3) ?x491)))
 (let ((?x711 (* (- 24) ?x626)))
 (let ((?x628 (* r00 x r)))
 (let ((?x880 (* (- 36) ?x628)))
 (let ((?x776 (* 54 ?x468)))
 (let ((?x586 (* s r)))
 (let ((?x775 (* 24 ?x586)))
 (let ((?x430 (+ ?x775 ?x776 ?x880 ?x711 ?x777 ?x780 ?x781 ?x783 ?x1184 ?x1191 ?x1192 ?x1113 ?x1224 ?x1225 ?x1289 ?x746 ?x655 ?x686 ?x687 ?x986 ?x523 ?x656 ?x137 ?x1211 ?x1032 ?x1260 ?x662 ?x1261 ?x952)))
 (let (($x431 (= ?x430 0)))
 (let ((?x682 (* r00 s00 r)))
 (let ((?x388 (* 6 ?x682)))
 (let ((?x395 (* 9 ?x263)))
 (let ((?x387 (* (- 2) ?x964)))
 (let ((?x369 (* (- 9) ?x897)))
 (let ((?x445 (* (- 3) s)))
 (let ((?x368 (* 18 ?x785)))
 (let ((?x353 (* (- 6) ?x720)))
 (let ((?x44 (* 3 s00)))
 (let ((?x367 (* (- 18) ?x906)))
 (let ((?x839 (* 4 ?x537)))
 (let ((?x361 (* 6 ?x991)))
 (let ((?x624 (* r00 s r)))
 (let ((?x397 (* (- 6) ?x624)))
 (let ((?x396 (* (- 18) ?x923)))
 (let ((?x366 (* (- 2) ?x491)))
 (let ((?x864 (* (- 9) ?x626)))
 (let ((?x846 (* 18 ?x468)))
 (let ((?x855 (* 9 ?x586)))
 (let ((?x398 (+ ?x855 ?x846 ?x864 ?x366 ?x396 ?x397 ?x361 ?x839 ?x367 ?x44 ?x353 ?x368 ?x445 ?x369 ?x387 ?x395 ?x388)))
 (let (($x978 (= ?x398 0)))
 (let ((?x415 (* r00 r00 r00)))
 (let ((?x416 (* 12 ?x415)))
 (let ((?x447 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x446 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x227 (+ (* 2 ?x586) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x445 ?x446 (* 4 ?x897) (* (- 6) ?x626) ?x56 ?x447 ?x416)))
 (let (($x849 (= ?x227 0)))
 (let ((?x235 (* r r)))
 (let ((?x578 (* 3 ?x235)))
 (let ((?x460 (+ s00 ?x318 ?x578 ?x1279)))
 (let (($x617 (= ?x460 0)))
 (let (($x432 (and $x617 $x849 $x978 $x431 $x341 $x947)))
 (let (($x280 (= (+ s (* (- 1) s00) (* (- 3) ?x235) (* 3 ?x247)) 0)))
 (let (($x1275 (not $x280)))
 (let ((?x593 (* s00 r00 r00)))
 (let ((?x946 (* 36 ?x593)))
 (let ((?x511 (* s r00 r00)))
 (let ((?x810 (* (- 36) ?x511)))
 (let ((?x933 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1323 (+ ?x143 ?x933 (* 54 (* s00 r00)) (* (- 216) (* s00 r00 x00)) (* (- 108) ?x468) (* (- 15) ?x491) ?x810 (* (- 51) ?x537) (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x946 (* 108 (* s00 s00 r00)) (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) (* 36 (* s00 s00 r00 r00)) (* (- 108) (* s s00 r00)) (* 4 ?x749) (* 108 ?x751) (* 108 (* s x)) (* (- 108) ?x800) (* 432 ?x828) (* 12 (* s s s00)) (* (- 216) (* s00 r00 r00 r00)) (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) (* (- 16) ?x1130) (* 216 (* x x00)) (* (- 108) ?x1292))))
 (let (($x1324 (= ?x1323 0)))
 (let ((?x836 (* (- 36) ?x823)))
 (let ((?x752 (* 6 ?x751)))
 (let ((?x862 (* (- 15) ?x537)))
 (let ((?x515 (* 3 ?x491)))
 (let ((?x497 (* (- 54) ?x468)))
 (let ((?x1025 (+ ?x143 ?x933 (* (- 24) (* r s)) (* 24 (* r s00)) (* 24 (* s00 r00)) ?x497 ?x515 (* 54 (* r x)) (* 36 (* r x r00)) ?x810 ?x862 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x946 (* 4 (* s s r00)) (* (- 54) (* r x00)) (* (- 2) (* s00 s00 r00)) (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x752 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x836 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1030 (= ?x1025 0)))
 (let ((?x550 (* (- 4) ?x537)))
 (let ((?x492 (* 2 ?x491)))
 (let ((?x482 (* (- 18) ?x468)))
 (let ((?x324 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x691 (+ ?x47 ?x324 (* (- 9) (* r s)) (* 9 (* r s00)) (* 9 (* s00 r00)) ?x482 ?x492 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x511) ?x550 (* 18 (* x r00)) (* 6 ?x593) (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x698 (= ?x691 0)))
 (let ((?x451 (+ ?x43 ?x445 ?x56 ?x44 ?x446 ?x447 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) (* (- 6) (* s00 r00)) ?x416)))
 (let (($x452 (= ?x451 0)))
 (let (($x484 (and $x280 $x452 $x698 $x1030 $x1324 $x1275)))
 (let ((?x1266 (* x x00)))
 (let ((?x1011 (* (- 216) ?x1266)))
 (let ((?x1126 (* s s r00 r00)))
 (let ((?x920 (* 36 ?x1126)))
 (let ((?x1100 (* x s00 r00)))
 (let ((?x589 (* (- 216) ?x1100)))
 (let ((?x1022 (* x r00 r00 r00)))
 (let ((?x1346 (* 432 ?x1022)))
 (let ((?x1002 (* s00 r00 r00 r00)))
 (let ((?x708 (* 216 ?x1002)))
 (let ((?x886 (* s s s00)))
 (let ((?x270 (* (- 12) ?x886)))
 (let ((?x759 (* s x)))
 (let ((?x645 (* (- 108) ?x759)))
 (let ((?x725 (* s s00 r00)))
 (let ((?x615 (* 108 ?x725)))
 (let ((?x677 (* s00 s00 r00 r00)))
 (let ((?x1090 (* (- 36) ?x677)))
 (let ((?x670 (* s x00)))
 (let ((?x813 (* 108 ?x670)))
 (let ((?x646 (* s r00)))
 (let ((?x996 (* 54 ?x646)))
 (let ((?x634 (* s s00)))
 (let ((?x1358 (* (- 66) ?x634)))
 (let ((?x614 (* s00 s00 r00)))
 (let ((?x803 (* (- 108) ?x614)))
 (let ((?x1028 (* (- 36) ?x593)))
 (let ((?x571 (* s r00 r00 r00)))
 (let ((?x622 (* (- 216) ?x571)))
 (let ((?x563 (* x r00)))
 (let ((?x966 (* (- 108) ?x563)))
 (let ((?x546 (* x s00)))
 (let ((?x620 (* 108 ?x546)))
 (let ((?x1288 (* 36 ?x511)))
 (let ((?x459 (* s00 r00 x00)))
 (let ((?x612 (* 216 ?x459)))
 (let ((?x372 (* s00 r00)))
 (let ((?x939 (* (- 54) ?x372)))
 (let ((?x660 (+ ?x1260 ?x137 ?x939 ?x612 ?x326 ?x1282 ?x1288 ?x1111 ?x620 ?x966 ?x622 ?x1028 ?x803 ?x1358 ?x996 ?x813 ?x1090 ?x615 ?x1336 ?x893 ?x645 ?x557 ?x845 ?x270 ?x708 ?x1346 ?x589 ?x920 ?x1041 ?x1011 ?x316)))
 (let (($x663 (= ?x660 0)))
 (let ((?x1273 (+ ?x612 ?x326 ?x939 ?x1282 ?x622 ?x1090 ?x1336 ?x557 ?x845 ?x270 ?x620 ?x803 ?x708 ?x813 ?x1346 ?x1358 ?x615 ?x893 ?x589 ?x920 ?x1041 ?x645 ?x1288 ?x1111 ?x966 ?x137 ?x1028 ?x1260 ?x996 ?x1011 ?x316)))
 (let ((@x653 (rewrite (= ?x1211 ?x1028))))
 (let ((@x422 (rewrite (= ?x655 ?x1288))))
 (let ((@x1206 (monotonicity (rewrite (= ?x931 ?x612)) (rewrite (= ?x918 ?x939)) (rewrite (= ?x788 ?x622)) (rewrite (= ?x1374 ?x1090)) (rewrite (= ?x567 ?x270)) (rewrite (= ?x867 ?x620)) (rewrite (= ?x264 ?x803)) (rewrite (= ?x1161 ?x708)) (rewrite (= ?x1333 ?x813)) (rewrite (= ?x467 ?x1346)) (rewrite (= ?x737 ?x1358)) (rewrite (= ?x805 ?x615)) (rewrite (= ?x998 ?x589)) (rewrite (= ?x1037 ?x920)) (rewrite (= ?x1083 ?x645)) @x422 (rewrite (= ?x1153 ?x966)) @x653 (rewrite (= ?x1278 ?x996)) (rewrite (= ?x701 ?x1011)) (= ?x335 ?x1273))))
 (let ((@x743 (monotonicity (trans @x1206 (rewrite (= ?x1273 ?x660)) (= ?x335 ?x660)) (= $x341 $x663))))
 (let ((?x1018 (* x r00 r00)))
 (let ((?x1117 (* (- 36) ?x1018)))
 (let ((?x887 (* r r00 x00)))
 (let ((?x1020 (* 36 ?x887)))
 (let ((?x875 (* r s s00)))
 (let ((?x962 (* (- 2) ?x875)))
 (let ((?x771 (* r s00 s00)))
 (let ((?x1286 (* 4 ?x771)))
 (let ((?x1280 (* (- 6) ?x759)))
 (let ((?x755 (* r s s)))
 (let ((?x363 (* (- 2) ?x755)))
 (let ((?x639 (* 2 ?x725)))
 (let ((?x1003 (* 6 ?x670)))
 (let ((?x904 (* 24 ?x646)))
 (let ((?x937 (* (- 12) ?x634)))
 (let ((?x529 (* 2 ?x614)))
 (let ((?x605 (* r x00)))
 (let ((?x801 (* 54 ?x605)))
 (let ((?x597 (* s s r00)))
 (let ((?x526 (* (- 4) ?x597)))
 (let ((?x1024 (* (- 54) ?x563)))
 (let ((?x329 (* 6 ?x546)))
 (let ((?x504 (* r x r00)))
 (let ((?x1166 (* (- 36) ?x504)))
 (let ((?x495 (* r x)))
 (let ((?x1171 (* (- 54) ?x495)))
 (let ((?x1168 (* (- 24) ?x372)))
 (let ((?x345 (* r s00)))
 (let ((?x561 (* (- 24) ?x345)))
 (let ((?x291 (* r s)))
 (let ((?x934 (* 24 ?x291)))
 (let ((?x1054 (+ ?x1260 ?x137 ?x934 ?x561 ?x1168 ?x776 ?x777 ?x1171 ?x1166 ?x1288 ?x687 ?x329 ?x1024 ?x1028 ?x526 ?x801 ?x529 ?x937 ?x904 ?x1003 ?x639 ?x1224 ?x363 ?x1280 ?x1286 ?x686 ?x962 ?x1020 ?x1117)))
 (let (($x331 (= ?x1054 0)))
 (let ((?x1120 (+ ?x934 ?x776 ?x1166 ?x1168 ?x777 ?x1171 ?x329 ?x526 ?x529 ?x1003 ?x937 ?x639 ?x1224 ?x363 ?x1280 ?x1286 ?x1288 ?x686 ?x687 ?x962 ?x1020 ?x1024 ?x137 ?x1028 ?x801 ?x1260 ?x561 ?x904 ?x1117)))
 (let ((@x1061 (monotonicity (rewrite (= ?x775 ?x934)) (rewrite (= ?x880 ?x1166)) (rewrite (= ?x711 ?x1168)) (rewrite (= ?x780 ?x1171)) (rewrite (= ?x781 ?x329)) (rewrite (= ?x783 ?x526)) (rewrite (= ?x1184 ?x529)) (rewrite (= ?x1191 ?x1003)) (rewrite (= ?x1192 ?x937)) (rewrite (= ?x1113 ?x639)) (rewrite (= ?x1225 ?x363)) (rewrite (= ?x1289 ?x1280)) (rewrite (= ?x746 ?x1286)) @x422 (rewrite (= ?x986 ?x962)) (rewrite (= ?x523 ?x1020)) (rewrite (= ?x656 ?x1024)) @x653 (rewrite (= ?x1032 ?x801)) (rewrite (= ?x662 ?x561)) (rewrite (= ?x1261 ?x904)) (rewrite (= ?x952 ?x1117)) (= ?x430 ?x1120))))
 (let ((@x333 (monotonicity (trans @x1061 (rewrite (= ?x1120 ?x1054)) (= ?x430 ?x1054)) (= $x431 $x331))))
 (let ((?x672 (* r s00 r00)))
 (let ((?x1049 (* 6 ?x672)))
 (let ((?x945 (* 9 ?x646)))
 (let ((?x912 (* (- 2) ?x634)))
 (let ((?x301 (* 18 ?x605)))
 (let ((?x1387 (* (- 6) ?x593)))
 (let ((?x1384 (* (- 18) ?x563)))
 (let ((?x1232 (* 6 ?x511)))
 (let ((?x499 (* r s r00)))
 (let ((?x1213 (* (- 6) ?x499)))
 (let ((?x1148 (* (- 18) ?x495)))
 (let ((?x517 (* (- 9) ?x372)))
 (let ((?x854 (* (- 9) ?x345)))
 (let ((?x856 (* 9 ?x291)))
 (let ((?x1103 (+ ?x445 ?x44 ?x856 ?x854 ?x517 ?x846 ?x366 ?x1148 ?x1213 ?x1232 ?x839 ?x1384 ?x1387 ?x301 ?x912 ?x945 ?x1049)))
 (let (($x1127 (= ?x1103 0)))
 (let ((?x1086 (+ ?x856 ?x846 ?x517 ?x366 ?x1148 ?x1213 ?x1232 ?x839 ?x1384 ?x44 ?x1387 ?x301 ?x445 ?x854 ?x912 ?x945 ?x1049)))
 (let ((@x1102 (monotonicity (rewrite (= ?x855 ?x856)) (rewrite (= ?x864 ?x517)) (rewrite (= ?x396 ?x1148)) (rewrite (= ?x397 ?x1213)) (rewrite (= ?x361 ?x1232)) (rewrite (= ?x367 ?x1384)) (rewrite (= ?x353 ?x1387)) (rewrite (= ?x368 ?x301)) (rewrite (= ?x369 ?x854)) (rewrite (= ?x387 ?x912)) (rewrite (= ?x395 ?x945)) (rewrite (= ?x388 ?x1049)) (= ?x398 ?x1086))))
 (let ((@x1227 (monotonicity (trans @x1102 (rewrite (= ?x1086 ?x1103)) (= ?x398 ?x1103)) (= $x978 $x1127))))
 (let ((@x439 (monotonicity (rewrite (= ?x460 (+ ?x318 s00 ?x578 ?x1279))) (= $x617 (= (+ ?x318 s00 ?x578 ?x1279) 0)))))
 (let ((@x742 (trans @x439 (rewrite (= (= (+ ?x318 s00 ?x578 ?x1279) 0) $x280)) (= $x617 $x280))))
 (let ((@x1356 (monotonicity @x742 (rewrite (= $x849 $x452)) (trans @x1227 (rewrite (= $x1127 $x698)) (= $x978 $x698)) (trans @x333 (rewrite (= $x331 $x1030)) (= $x431 $x1030)) (trans @x743 (rewrite (= $x663 $x1324)) (= $x341 $x1324)) (rewrite (= $x947 $x1275)) (= $x432 $x484))))
 (trans @x1356 (rewrite (= $x484 false)) (= $x432 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x293 (trans (quant-intro (proof-bind ?x1326) (= $x394 $x1302)) (elim-unused (= $x1302 false)) (= $x394 false))))
 (let (($x948 (exists ((r Int) (s Int) (x Int) )(! (let ((?x247 (* r00 r00)))
 (let ((?x1279 (* (- 3) ?x247)))
 (let ((?x318 (* (- 1) s)))
 (let ((?x403 (+ s00 ?x318 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x1279)))
 (let (($x947 (not (= ?x403 3))))
 (let ((?x1292 (* x00 x00)))
 (let ((?x316 (* 108 ?x1292)))
 (let ((?x701 (* (- 216) (* x00 x))))
 (let ((?x263 (* r00 s)))
 (let ((?x1278 (* 54 ?x263)))
 (let ((?x1260 (* (- 9) s)))
 (let ((?x720 (* r00 r00 s00)))
 (let ((?x1211 (* (- 36) ?x720)))
 (let ((?x137 (* 9 s00)))
 (let ((?x906 (* r00 x)))
 (let ((?x1153 (* (- 108) ?x906)))
 (let ((?x537 (* s00 s00)))
 (let ((?x1111 (* 51 ?x537)))
 (let ((?x991 (* r00 r00 s)))
 (let ((?x655 (* 36 ?x991)))
 (let ((?x1329 (* x s)))
 (let ((?x1083 (* (- 108) ?x1329)))
 (let ((?x1130 (* s00 s00 s00)))
 (let ((?x1041 (* 16 ?x1130)))
 (let ((?x1037 (* 36 (* r00 r00 s s))))
 (let ((?x998 (* (- 216) (* r00 s00 x))))
 (let ((?x751 (* s00 x00)))
 (let ((?x893 (* (- 108) ?x751)))
 (let ((?x1388 (* r00 s00 s)))
 (let ((?x805 (* 108 ?x1388)))
 (let ((?x964 (* s00 s)))
 (let ((?x737 (* (- 66) ?x964)))
 (let ((?x467 (* 432 (* r00 r00 r00 x))))
 (let ((?x1416 (* x00 s)))
 (let ((?x1333 (* 108 ?x1416)))
 (let ((?x1161 (* 216 (* r00 r00 r00 s00))))
 (let ((?x779 (* r00 s00 s00)))
 (let ((?x264 (* (- 108) ?x779)))
 (let ((?x647 (* s00 x)))
 (let ((?x867 (* 108 ?x647)))
 (let ((?x567 (* (- 12) (* s00 s s))))
 (let ((?x828 (* r00 r00 r00 x00)))
 (let ((?x845 (* (- 432) ?x828)))
 (let ((?x800 (* x x)))
 (let ((?x557 (* 108 ?x800)))
 (let ((?x749 (* s s s)))
 (let ((?x1336 (* (- 4) ?x749)))
 (let ((?x1374 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x788 (* (- 216) (* r00 r00 r00 s))))
 (let ((?x491 (* s s)))
 (let ((?x1282 (* 15 ?x491)))
 (let ((?x626 (* r00 s00)))
 (let ((?x918 (* (- 54) ?x626)))
 (let ((?x468 (* r00 x00)))
 (let ((?x326 (* 108 ?x468)))
 (let ((?x931 (* 216 (* r00 s00 x00))))
 (let ((?x335 (+ ?x931 ?x326 ?x918 ?x1282 ?x788 ?x1374 ?x1336 ?x557 ?x845 ?x567 ?x867 ?x264 ?x1161 ?x1333 ?x467 ?x737 ?x805 ?x893 ?x998 ?x1037 ?x1041 ?x1083 ?x655 ?x1111 ?x1153 ?x137 ?x1211 ?x1260 ?x1278 ?x701 ?x316)))
 (let (($x341 (= ?x335 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x933 (* (- 9) s00)))
 (let ((?x862 (* (- 15) ?x537)))
 (let ((?x823 (* r00 r00 x00)))
 (let ((?x836 (* (- 36) ?x823)))
 (let ((?x752 (* 6 ?x751)))
 (let ((?x515 (* 3 ?x491)))
 (let ((?x497 (* (- 54) ?x468)))
 (let ((?x601 (+ (* (- 24) (* s r)) ?x497 (* 36 (* r00 x r)) (* 24 ?x626) ?x515 (* 54 (* x r)) (* (- 6) ?x647) (* 4 (* r00 s s)) (* (- 2) ?x779) (* (- 6) ?x1416) (* 12 ?x964) (* (- 2) ?x1388) ?x752 (* 2 (* s s r)) (* 6 ?x1329) (* (- 4) (* s00 s00 r)) (* (- 36) ?x991) ?x836 ?x862 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 ?x906) ?x933 (* 36 ?x720) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x263) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x324 (* (- 3) s00)))
 (let ((?x550 (* (- 4) ?x537)))
 (let ((?x492 (* 2 ?x491)))
 (let ((?x482 (* (- 18) ?x468)))
 (let ((?x782 (+ (* (- 9) (* s r)) ?x482 (* 9 ?x626) ?x492 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x991) ?x550 (* 18 ?x906) ?x324 (* 6 ?x720) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 ?x964) (* (- 9) ?x263) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x434 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x324 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x626) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let ((?x235 (* r r)))
 (let ((?x578 (* 3 ?x235)))
 (let ((?x460 (+ s00 ?x318 ?x578 ?x1279)))
 (let (($x617 (= ?x460 0)))
 (and $x617 (= ?x434 0) (= ?x782 0) (= ?x601 0) $x341 $x947))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x423 (lambda ((r Int) (s Int) (x Int) )(let ((?x247 (* r00 r00)))
 (let ((?x1279 (* (- 3) ?x247)))
 (let ((?x318 (* (- 1) s)))
 (let ((?x403 (+ s00 ?x318 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x1279)))
 (let (($x947 (not (= ?x403 3))))
 (let ((?x1292 (* x00 x00)))
 (let ((?x316 (* 108 ?x1292)))
 (let ((?x701 (* (- 216) (* x00 x))))
 (let ((?x263 (* r00 s)))
 (let ((?x1278 (* 54 ?x263)))
 (let ((?x1260 (* (- 9) s)))
 (let ((?x720 (* r00 r00 s00)))
 (let ((?x1211 (* (- 36) ?x720)))
 (let ((?x137 (* 9 s00)))
 (let ((?x906 (* r00 x)))
 (let ((?x1153 (* (- 108) ?x906)))
 (let ((?x537 (* s00 s00)))
 (let ((?x1111 (* 51 ?x537)))
 (let ((?x991 (* r00 r00 s)))
 (let ((?x655 (* 36 ?x991)))
 (let ((?x1329 (* x s)))
 (let ((?x1083 (* (- 108) ?x1329)))
 (let ((?x1130 (* s00 s00 s00)))
 (let ((?x1041 (* 16 ?x1130)))
 (let ((?x1037 (* 36 (* r00 r00 s s))))
 (let ((?x998 (* (- 216) (* r00 s00 x))))
 (let ((?x751 (* s00 x00)))
 (let ((?x893 (* (- 108) ?x751)))
 (let ((?x1388 (* r00 s00 s)))
 (let ((?x805 (* 108 ?x1388)))
 (let ((?x964 (* s00 s)))
 (let ((?x737 (* (- 66) ?x964)))
 (let ((?x467 (* 432 (* r00 r00 r00 x))))
 (let ((?x1416 (* x00 s)))
 (let ((?x1333 (* 108 ?x1416)))
 (let ((?x1161 (* 216 (* r00 r00 r00 s00))))
 (let ((?x779 (* r00 s00 s00)))
 (let ((?x264 (* (- 108) ?x779)))
 (let ((?x647 (* s00 x)))
 (let ((?x867 (* 108 ?x647)))
 (let ((?x567 (* (- 12) (* s00 s s))))
 (let ((?x828 (* r00 r00 r00 x00)))
 (let ((?x845 (* (- 432) ?x828)))
 (let ((?x800 (* x x)))
 (let ((?x557 (* 108 ?x800)))
 (let ((?x749 (* s s s)))
 (let ((?x1336 (* (- 4) ?x749)))
 (let ((?x1374 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x788 (* (- 216) (* r00 r00 r00 s))))
 (let ((?x491 (* s s)))
 (let ((?x1282 (* 15 ?x491)))
 (let ((?x626 (* r00 s00)))
 (let ((?x918 (* (- 54) ?x626)))
 (let ((?x468 (* r00 x00)))
 (let ((?x326 (* 108 ?x468)))
 (let ((?x931 (* 216 (* r00 s00 x00))))
 (let ((?x335 (+ ?x931 ?x326 ?x918 ?x1282 ?x788 ?x1374 ?x1336 ?x557 ?x845 ?x567 ?x867 ?x264 ?x1161 ?x1333 ?x467 ?x737 ?x805 ?x893 ?x998 ?x1037 ?x1041 ?x1083 ?x655 ?x1111 ?x1153 ?x137 ?x1211 ?x1260 ?x1278 ?x701 ?x316)))
 (let (($x341 (= ?x335 0)))
 (let ((?x562 (* r00 r00 x)))
 (let ((?x952 (* (- 36) ?x562)))
 (let ((?x1261 (* 24 ?x263)))
 (let ((?x897 (* s00 r)))
 (let ((?x662 (* (- 24) ?x897)))
 (let ((?x785 (* x00 r)))
 (let ((?x1032 (* 54 ?x785)))
 (let ((?x656 (* (- 54) ?x906)))
 (let ((?x657 (* r00 x00 r)))
 (let ((?x523 (* 36 ?x657)))
 (let ((?x401 (* s00 s r)))
 (let ((?x986 (* (- 2) ?x401)))
 (let ((?x687 (* 15 ?x537)))
 (let ((?x823 (* r00 r00 x00)))
 (let ((?x686 (* 36 ?x823)))
 (let ((?x1357 (* s00 s00 r)))
 (let ((?x746 (* 4 ?x1357)))
 (let ((?x1289 (* (- 6) ?x1329)))
 (let ((?x1012 (* s s r)))
 (let ((?x1225 (* (- 2) ?x1012)))
 (let ((?x1224 (* (- 6) ?x751)))
 (let ((?x1113 (* 2 ?x1388)))
 (let ((?x1192 (* (- 12) ?x964)))
 (let ((?x1191 (* 6 ?x1416)))
 (let ((?x1184 (* 2 ?x779)))
 (let ((?x739 (* r00 s s)))
 (let ((?x783 (* (- 4) ?x739)))
 (let ((?x781 (* 6 ?x647)))
 (let ((?x923 (* x r)))
 (let ((?x780 (* (- 54) ?x923)))
 (let ((?x777 (* (- 3) ?x491)))
 (let ((?x711 (* (- 24) ?x626)))
 (let ((?x628 (* r00 x r)))
 (let ((?x880 (* (- 36) ?x628)))
 (let ((?x776 (* 54 ?x468)))
 (let ((?x586 (* s r)))
 (let ((?x775 (* 24 ?x586)))
 (let ((?x430 (+ ?x775 ?x776 ?x880 ?x711 ?x777 ?x780 ?x781 ?x783 ?x1184 ?x1191 ?x1192 ?x1113 ?x1224 ?x1225 ?x1289 ?x746 ?x655 ?x686 ?x687 ?x986 ?x523 ?x656 ?x137 ?x1211 ?x1032 ?x1260 ?x662 ?x1261 ?x952)))
 (let (($x431 (= ?x430 0)))
 (let ((?x682 (* r00 s00 r)))
 (let ((?x388 (* 6 ?x682)))
 (let ((?x395 (* 9 ?x263)))
 (let ((?x387 (* (- 2) ?x964)))
 (let ((?x369 (* (- 9) ?x897)))
 (let ((?x445 (* (- 3) s)))
 (let ((?x368 (* 18 ?x785)))
 (let ((?x353 (* (- 6) ?x720)))
 (let ((?x44 (* 3 s00)))
 (let ((?x367 (* (- 18) ?x906)))
 (let ((?x839 (* 4 ?x537)))
 (let ((?x361 (* 6 ?x991)))
 (let ((?x624 (* r00 s r)))
 (let ((?x397 (* (- 6) ?x624)))
 (let ((?x396 (* (- 18) ?x923)))
 (let ((?x366 (* (- 2) ?x491)))
 (let ((?x864 (* (- 9) ?x626)))
 (let ((?x846 (* 18 ?x468)))
 (let ((?x855 (* 9 ?x586)))
 (let ((?x398 (+ ?x855 ?x846 ?x864 ?x366 ?x396 ?x397 ?x361 ?x839 ?x367 ?x44 ?x353 ?x368 ?x445 ?x369 ?x387 ?x395 ?x388)))
 (let (($x978 (= ?x398 0)))
 (let ((?x415 (* r00 r00 r00)))
 (let ((?x416 (* 12 ?x415)))
 (let ((?x447 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x446 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x227 (+ (* 2 ?x586) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x445 ?x446 (* 4 ?x897) (* (- 6) ?x626) ?x56 ?x447 ?x416)))
 (let (($x849 (= ?x227 0)))
 (let ((?x235 (* r r)))
 (let ((?x578 (* 3 ?x235)))
 (let ((?x460 (+ s00 ?x318 ?x578 ?x1279)))
 (let (($x617 (= ?x460 0)))
 (let (($x432 (and $x617 $x849 $x978 $x431 $x341 $x947)))
 (let ((?x143 (* 9 s)))
 (let ((?x933 (* (- 9) s00)))
 (let ((?x862 (* (- 15) ?x537)))
 (let ((?x836 (* (- 36) ?x823)))
 (let ((?x752 (* 6 ?x751)))
 (let ((?x515 (* 3 ?x491)))
 (let ((?x497 (* (- 54) ?x468)))
 (let ((?x601 (+ (* (- 24) ?x586) ?x497 (* 36 ?x628) (* 24 ?x626) ?x515 (* 54 ?x923) (* (- 6) ?x647) (* 4 ?x739) (* (- 2) ?x779) (* (- 6) ?x1416) (* 12 ?x964) (* (- 2) ?x1388) ?x752 (* 2 ?x1012) (* 6 ?x1329) (* (- 4) ?x1357) (* (- 36) ?x991) ?x836 ?x862 (* 2 ?x401) (* (- 36) ?x657) (* 54 ?x906) ?x933 (* 36 ?x720) (* (- 54) ?x785) ?x143 (* 24 ?x897) (* (- 24) ?x263) (* 36 ?x562))))
 (let ((?x47 (* 3 s)))
 (let ((?x324 (* (- 3) s00)))
 (let ((?x550 (* (- 4) ?x537)))
 (let ((?x492 (* 2 ?x491)))
 (let ((?x482 (* (- 18) ?x468)))
 (let ((?x782 (+ (* (- 9) ?x586) ?x482 (* 9 ?x626) ?x492 (* 18 ?x923) (* 6 ?x624) (* (- 6) ?x991) ?x550 (* 18 ?x906) ?x324 (* 6 ?x720) (* (- 18) ?x785) ?x47 (* 9 ?x897) (* 2 ?x964) (* (- 9) ?x263) (* (- 6) ?x682))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x434 (+ (* (- 2) ?x586) (* 12 (* r00 r00 r)) (* (- 3) r) ?x324 ?x47 ?x48 (* (- 4) ?x897) (* 6 ?x626) (* (- 6) x) ?x59 (* (- 12) ?x415))))
 (let (($x898 (and $x617 (= ?x434 0) (= ?x782 0) (= ?x601 0) $x341 $x947)))
 (rewrite (= $x898 $x432))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x223 (exists ((r Int) (s Int) (x Int) )(! (let ((?x33 (* 3 r00 r00)))
 (let ((?x217 (+ (- s00 (+ s (* 6 r) 3)) (* 3 (+ r 1) (+ r 1)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (and (= (- (+ (- s00 s) (* 3 r r)) ?x33) 0) (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- ?x217 ?x33) 0))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x566 (lambda ((r Int) (s Int) (x Int) )(let ((?x247 (* r00 r00)))
 (let ((?x1279 (* (- 3) ?x247)))
 (let ((?x318 (* (- 1) s)))
 (let ((?x403 (+ s00 ?x318 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x1279)))
 (let (($x947 (not (= ?x403 3))))
 (let ((?x1292 (* x00 x00)))
 (let ((?x316 (* 108 ?x1292)))
 (let ((?x701 (* (- 216) (* x00 x))))
 (let ((?x263 (* r00 s)))
 (let ((?x1278 (* 54 ?x263)))
 (let ((?x1260 (* (- 9) s)))
 (let ((?x720 (* r00 r00 s00)))
 (let ((?x1211 (* (- 36) ?x720)))
 (let ((?x137 (* 9 s00)))
 (let ((?x906 (* r00 x)))
 (let ((?x1153 (* (- 108) ?x906)))
 (let ((?x537 (* s00 s00)))
 (let ((?x1111 (* 51 ?x537)))
 (let ((?x991 (* r00 r00 s)))
 (let ((?x655 (* 36 ?x991)))
 (let ((?x1329 (* x s)))
 (let ((?x1083 (* (- 108) ?x1329)))
 (let ((?x1130 (* s00 s00 s00)))
 (let ((?x1041 (* 16 ?x1130)))
 (let ((?x1037 (* 36 (* r00 r00 s s))))
 (let ((?x998 (* (- 216) (* r00 s00 x))))
 (let ((?x751 (* s00 x00)))
 (let ((?x893 (* (- 108) ?x751)))
 (let ((?x1388 (* r00 s00 s)))
 (let ((?x805 (* 108 ?x1388)))
 (let ((?x964 (* s00 s)))
 (let ((?x737 (* (- 66) ?x964)))
 (let ((?x467 (* 432 (* r00 r00 r00 x))))
 (let ((?x1416 (* x00 s)))
 (let ((?x1333 (* 108 ?x1416)))
 (let ((?x1161 (* 216 (* r00 r00 r00 s00))))
 (let ((?x779 (* r00 s00 s00)))
 (let ((?x264 (* (- 108) ?x779)))
 (let ((?x647 (* s00 x)))
 (let ((?x867 (* 108 ?x647)))
 (let ((?x567 (* (- 12) (* s00 s s))))
 (let ((?x828 (* r00 r00 r00 x00)))
 (let ((?x845 (* (- 432) ?x828)))
 (let ((?x800 (* x x)))
 (let ((?x557 (* 108 ?x800)))
 (let ((?x749 (* s s s)))
 (let ((?x1336 (* (- 4) ?x749)))
 (let ((?x1374 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x788 (* (- 216) (* r00 r00 r00 s))))
 (let ((?x491 (* s s)))
 (let ((?x1282 (* 15 ?x491)))
 (let ((?x626 (* r00 s00)))
 (let ((?x918 (* (- 54) ?x626)))
 (let ((?x468 (* r00 x00)))
 (let ((?x326 (* 108 ?x468)))
 (let ((?x931 (* 216 (* r00 s00 x00))))
 (let ((?x335 (+ ?x931 ?x326 ?x918 ?x1282 ?x788 ?x1374 ?x1336 ?x557 ?x845 ?x567 ?x867 ?x264 ?x1161 ?x1333 ?x467 ?x737 ?x805 ?x893 ?x998 ?x1037 ?x1041 ?x1083 ?x655 ?x1111 ?x1153 ?x137 ?x1211 ?x1260 ?x1278 ?x701 ?x316)))
 (let (($x341 (= ?x335 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x933 (* (- 9) s00)))
 (let ((?x862 (* (- 15) ?x537)))
 (let ((?x823 (* r00 r00 x00)))
 (let ((?x836 (* (- 36) ?x823)))
 (let ((?x752 (* 6 ?x751)))
 (let ((?x515 (* 3 ?x491)))
 (let ((?x497 (* (- 54) ?x468)))
 (let ((?x601 (+ (* (- 24) (* s r)) ?x497 (* 36 (* r00 x r)) (* 24 ?x626) ?x515 (* 54 (* x r)) (* (- 6) ?x647) (* 4 (* r00 s s)) (* (- 2) ?x779) (* (- 6) ?x1416) (* 12 ?x964) (* (- 2) ?x1388) ?x752 (* 2 (* s s r)) (* 6 ?x1329) (* (- 4) (* s00 s00 r)) (* (- 36) ?x991) ?x836 ?x862 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 ?x906) ?x933 (* 36 ?x720) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x263) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x324 (* (- 3) s00)))
 (let ((?x550 (* (- 4) ?x537)))
 (let ((?x492 (* 2 ?x491)))
 (let ((?x482 (* (- 18) ?x468)))
 (let ((?x782 (+ (* (- 9) (* s r)) ?x482 (* 9 ?x626) ?x492 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x991) ?x550 (* 18 ?x906) ?x324 (* 6 ?x720) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 ?x964) (* (- 9) ?x263) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x434 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x324 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x626) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let ((?x235 (* r r)))
 (let ((?x578 (* 3 ?x235)))
 (let ((?x460 (+ s00 ?x318 ?x578 ?x1279)))
 (let (($x617 (= ?x460 0)))
 (let (($x898 (and $x617 (= ?x434 0) (= ?x782 0) (= ?x601 0) $x341 $x947)))
 (let ((?x33 (* 3 r00 r00)))
 (let ((?x217 (+ (- s00 (+ s (* 6 r) 3)) (* 3 (+ r 1) (+ r 1)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x222 (and (= (- (+ (- s00 s) (* 3 r r)) ?x33) 0) (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- ?x217 ?x33) 0))))))
 (rewrite (= $x222 $x898)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x224 (asserted $x223)))
 (let ((@x577 (mp (mp @x224 (quant-intro (proof-bind ?x566) (= $x223 $x948)) $x948) (rewrite (= $x948 $x948)) $x948)))
 (mp (mp @x577 (quant-intro (proof-bind ?x423) (= $x948 $x394)) $x394) @x293 false)))))))))))))

(:max-memory   3.62
 :memory       3.31
 :mk-bool-var  6
 :num-allocs   1111983
 :num-checks   1
 :rlimit-count 2755
 :time         0.01
 :total-time   0.02)
