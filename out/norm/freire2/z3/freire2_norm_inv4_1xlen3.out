unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x4958 (* (- 1) s!1)))
 (let ((?x398 (* r00 r00)))
 (let ((?x1530 (* (- 3) ?x398)))
 (let ((?x2338 (+ s00 ?x1530 (* 3 (* r!2 r!2)) ?x4958)))
 (let (($x6601 (<= ?x2338 0)))
 (let (($x1970 (= ?x2338 0)))
 (let ((?x7565 (+ 3 (* 6 r!2) s!1)))
 (let ((?x8514 (+ ?x4958 x!0)))
 (let ((?x7564 (+ 1 r!2)))
 (let ((?x8803 (* s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)))
 (let ((?x2272 (+ (* 54 (* x00 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* 24 (* ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 9) (* ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 2 (* r00 s00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 432) (* r00 r00 x00 s!1 s!1 x!0)) (* 18 (* s00 x00 r!2 s!1 x!0)) (* 6 (* s00 x00 r!2 r!2 r!2 s!1 x!0)) (* (- 432) (* s00 r00 r00 r!2 r!2 s!1 x!0 x!0)) (* 216 (* r00 r00 x00 s!1 s!1 s!1)) (* (- 36) (* r00 r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565)) (* 2 (* s00 s00 r00 s!1 s!1 s!1 s!1)) (* 162 (* r00 x00 r!2 r!2 s!1 s!1)) (* (- 18) (* s00 x00 r!2 s!1 s!1)) (* 6 (* s00 x00 s!1 x!0)) (* (- 30) (* s00 s00 r00 r!2 x!0)) (* (- 42) (* s00 s00 r00 r!2 r!2 r!2 x!0)) (* 6 (* s00 s00 r00 s!1)) (* 54 (* r00 x00 r!2 r!2 r!2 s!1 s!1)) (* (- 162) (* r00 x00 x!0)) (* (- 810) (* r00 x00 r!2 x!0)) (* (- 648) (* s00 r00 r00 r!2 s!1 x!0 x!0)) (* (- 4) (* s00 s00 r00 s!1 s!1 s!1 x!0)) (* 3 (* ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565 ?x7565)) (* 2 (* r00 s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 3) (* ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565 ?x7565)) (* 6 (* s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 24) (* ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* 54 (* r00 x00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* 36 (* r00 r00 x00 s!1 s!1 x!0 x!0)) (* (- 24) (* s00 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* 9 (* s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 2 (* r00 s00 s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 36) (* r00 r00 s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 6 (* ?x7564 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 6) (* x00 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* 9 (* s00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 1296) (* r00 r00 x00 r!2 s!1 s!1 x!0)) (* 42 (* s00 s00 r00 r!2 r!2 r!2 s!1)) (* 144 (* s00 r00 r!2 r!2 r!2 r!2 x!0)) (* 45 (* s00 s00 r!2 r!2 s!1 s!1)) (* (- 146) (* s00 s00 r00 r!2 r!2 r!2 s!1 x!0)) (* 36 (* r00 r00 x00 s!1 s!1 s!1 s!1)) (* (- 6) (* s00 x00 s!1 s!1)) (* 54 (* r00 ?x7564 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565)) (* 9 (* s00 r!2 r!2 r!2 s!1 s!1)) (* (- 243) (* s00 r!2 r!2 x!0)) (* 27 (* s00 r!2 s!1 s!1)) (* (- 1134) (* r00 x00 r!2 r!2 r!2 x!0)) (* (- 162) (* r00 x00 r!2 r!2 s!1 x!0)) (* 162 (* r00 x00 s!1)) (* 189 (* s00 r!2 r!2 r!2 s!1)) (* 243 (* s00 r!2 r!2 s!1)) (* (- 324) (* r00 x00 r!2 r!2 r!2 r!2 x!0)) (* (- 162) (* r00 x00 r!2 s!1 x!0)) (* (- 54) (* r00 x00 s!1 x!0)) (* 1296 (* r00 r00 x00 r!2 r!2 r!2 x!0 x!0)) (* (- 27) (* s00 r!2 r!2 s!1 x!0)) (* (- 9) (* s00 r!2 r!2 r!2 s!1 x!0)) (* 2 (* s00 s00 r00 r!2 s!1 s!1 s!1 s!1)) (* 27 (* s00 s!1)) (* 12 (* s00 s00 r00 s!1 s!1 s!1)) (* 74 (* s00 s00 r00 r!2 r!2 r!2 s!1 s!1)) (* (- 405) (* s00 s00 r!2 r!2 x!0)) (* 2 (* s00 s00 r00 s!1 s!1 x!0 x!0)) (* 36 (* r00 r00 x00 r!2 s!1 s!1 s!1 s!1)) (* (- 27) (* s00 x!0)) (* (- 36) (* r00 x00 ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565)) (* (- 4) (* r00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 15 (* s00 s00 r!2 r!2 r!2 s!1 s!1)) (* 12 (* s00 s00 r00 r!2 r!2 r!2 r!2 s!1)) (* (- 45) (* s00 s00 r!2 s!1 x!0)) (* 45 (* s00 s00 s!1)) (* 27 (* s00 r!2 r!2 s!1 s!1)) (* 54 (* s00 r!2 r!2 r!2 r!2 s!1)) (* 9 (* s00 s!1 s!1)) (* (- 6) (* ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 36 (* r00 r00 x00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 36 (* r00 r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 6 (* s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 36 (* r00 x00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 2) (* ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 36 (* r00 r00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 15) (* s00 s00 s!1 x!0)) (* (- 1458) (* r00 x00 r!2 r!2 x!0)) (* (- 27) (* s00 r!2 s!1 x!0)) (* (- 135) (* s00 r!2 x!0)) (* 360 (* s00 r00 r!2 x!0)) (* (- 54) (* r00 x00 r!2 r!2 r!2 s!1 x!0)) (* 315 (* s00 s00 r!2 r!2 r!2 s!1)) (* (- 24) (* r00 s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 54) (* ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 4) (* r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 24) (* r00 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* 36 (* r00 x00 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* 72 (* s00 r00 x!0)) (* (- 108) (* r00 r00 x00 x!0)) (* (- 36) (* s00 x00 r!2 r!2 r!2 r!2 s!1)) (* 648 (* r00 r00 x00 r!2 s!1 s!1 s!1)) (* 36 (* r00 r00 x00 r!2 s!1 s!1 x!0 x!0)) (* 54 (* x00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 12) (* s00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 24) (* r00 s00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 540) (* r00 r00 x00 r!2 x!0)) (* 96 (* s00 s00 r00 r!2 s!1 s!1)) (* 810 (* r00 x00 r!2 s!1)) (* 1458 (* r00 x00 r!2 r!2 s!1)) (* 360 (* r00 r00 x00 s!1 s!1)) (* 36 (* r00 ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565)) (* (- 1620) (* s00 r00 r00 r!2 x!0 x!0)) (* (- 72) (* r00 r00 x00 r!2 s!1 s!1 s!1 x!0)) (* 24 (* s00 r00 r!2 r!2 r!2 s!1 x!0)) (* (- 2592) (* s00 r00 r00 r!2 r!2 x!0 x!0)) (* 72 (* s00 r00 r!2 s!1 x!0)) (* 72 (* s00 r00 r00 s!1 s!1 s!1 x!0)) (* 3348 (* s00 r00 r00 r!2 s!1 x!0)) (* 72 (* s00 r00 r00 r!2 s!1 s!1 s!1 x!0)) (* 2628 (* s00 r00 r00 r!2 r!2 r!2 s!1 x!0)) (* (- 108) (* s00 r00 r00 s!1)) (* 72 (* s00 r00 r!2 r!2 s!1 x!0)) (* 1620 (* r00 r00 x00 r!2 x!0 x!0)) (* (- 540) (* s00 r00 r00 r!2 s!1)) (* (- 36) (* s00 r00 r00 r!2 s!1 s!1 x!0 x!0)) (* (- 90) (* s00 x00 r!2 s!1)) (* 18 (* s00 x00 x!0)) (* (- 24) (* s00 r00 s!1 s!1)) (* 36 (* s00 x00 r!2 r!2 r!2 r!2 x!0)) (* 162 (* s00 x00 r!2 r!2 x!0)) (* 108 (* r00 r00 x00 s!1)) (* (- 126) (* s00 x00 r!2 r!2 r!2 s!1)) (* 216 (* r00 r00 x00 r!2 r!2 r!2 r!2 s!1)) (* 108 (* s00 r00 r00 x!0)) (* (- 2628) (* r00 r00 x00 r!2 r!2 r!2 s!1 x!0)) (* 24 (* s00 r00 s!1 x!0)) (* (- 5292) (* r00 r00 x00 r!2 r!2 s!1 x!0)) (* 432 (* r00 r00 x00 r!2 r!2 s!1 s!1 s!1)) (* (- 3348) (* r00 r00 x00 r!2 s!1 x!0)) (* (- 684) (* r00 r00 x00 s!1 x!0)) (* 756 (* r00 r00 x00 r!2 r!2 r!2 s!1)) (* (- 972) (* r00 r00 x00 r!2 r!2 x!0)) (* 150 (* s00 s00 r00 r!2 r!2 s!1 s!1)) (* 540 (* s00 r00 r00 r!2 x!0)) (* (- 1296) (* s00 r00 r00 r!2 r!2 r!2 x!0 x!0)) (* (- 216) (* s00 r00 r00 s!1 x!0 x!0)) (* (- 36) (* s00 r00 r00 s!1 s!1 x!0 x!0)) (* (- 2700) (* s00 r00 r00 r!2 r!2 s!1 s!1)) (* (- 1728) (* s00 r00 r00 r!2 s!1 s!1)) (* (- 360) (* s00 r00 r00 s!1 s!1)) (* 684 (* s00 r00 r00 s!1 x!0)) (* (- 324) (* s00 r00 r00 x!0 x!0)) (* 5292 (* s00 r00 r00 r!2 r!2 s!1 x!0)) (* 432 (* s00 r00 r00 s!1 s!1 x!0)) (* 1296 (* s00 r00 r00 r!2 s!1 s!1 x!0)) (* 864 (* s00 r00 r00 r!2 r!2 s!1 s!1 x!0)) (* (- 216) (* s00 r00 r00 s!1 s!1 s!1)) (* (- 36) (* s00 r00 r00 s!1 s!1 s!1 s!1)) (* (- 432) (* s00 r00 r00 r!2 r!2 s!1 s!1 s!1)) (* (- 1332) (* s00 r00 r00 r!2 r!2 r!2 s!1 s!1)) (* (- 648) (* s00 r00 r00 r!2 s!1 s!1 s!1)) (* (- 504) (* s00 r00 r!2 r!2 r!2 s!1)) (* (- 18) (* s00 x00 s!1)) (* (- 36) (* s00 r00 r00 r!2 s!1 s!1 s!1 s!1)) (* 216 (* s00 r00 r00 r!2 r!2 r!2 r!2 x!0)) (* (- 216) (* s00 r00 r00 r!2 r!2 r!2 r!2 s!1)) (* (- 756) (* s00 r00 r00 r!2 r!2 r!2 s!1)) (* (- 972) (* s00 r00 r00 r!2 r!2 s!1)) (* (- 144) (* s00 r00 r!2 r!2 r!2 r!2 s!1)) (* (- 648) (* s00 r00 r!2 r!2 s!1)) (* 756 (* s00 r00 r00 r!2 r!2 r!2 x!0)) (* (- 360) (* s00 r00 r!2 s!1)) (* 972 (* s00 r00 r00 r!2 r!2 x!0)) (* (- 24) (* s00 r00 r!2 r!2 r!2 s!1 s!1)) (* 648 (* s00 r00 r!2 r!2 x!0)) (* (- 72) (* s00 r00 r!2 s!1 s!1)) (* (- 72) (* s00 r00 r!2 r!2 s!1 s!1)) (* (- 72) (* s00 r00 s!1)) (* 20 (* s00 s00 r00 s!1 s!1)) (* 1332 (* r00 r00 x00 r!2 r!2 r!2 s!1 s!1)) (* 2700 (* r00 r00 x00 r!2 r!2 s!1 s!1)) (* 1728 (* r00 r00 x00 r!2 s!1 s!1)) (* 324 (* r00 x00 r!2 r!2 r!2 r!2 s!1)) (* 1134 (* r00 x00 r!2 r!2 r!2 s!1)) (* 972 (* r00 r00 x00 r!2 r!2 s!1)) (* 540 (* r00 r00 x00 r!2 s!1)) (* 126 (* s00 x00 r!2 r!2 r!2 x!0)) (* (- 216) (* r00 r00 x00 r!2 r!2 r!2 r!2 x!0)) (* 90 (* s00 x00 r!2 x!0)) (* (- 756) (* r00 r00 x00 r!2 r!2 r!2 x!0)) (* 162 (* r00 x00 r!2 s!1 s!1)) (* 54 (* r00 x00 s!1 s!1)) (* 432 (* r00 r00 x00 r!2 r!2 s!1 x!0 x!0)) (* (- 4) (* s00 s00 r00 r!2 s!1 s!1 s!1 x!0)) (* 648 (* r00 r00 x00 r!2 s!1 x!0 x!0)) (* (- 864) (* r00 r00 x00 r!2 r!2 s!1 s!1 x!0)) (* (- 36) (* r00 r00 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* 4 (* s00 s00 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* 216 (* r00 r00 x00 s!1 x!0 x!0)) (* 90 (* s00 s00 r00 r!2 x!0 x!0)) (* 144 (* s00 s00 r00 r!2 r!2 x!0 x!0)) (* (- 72) (* s00 s00 r00 r!2 s!1 s!1 x!0)) (* (- 15) (* s00 s00 r!2 r!2 r!2 s!1 x!0)) (* (- 48) (* s00 s00 r00 r!2 r!2 s!1 s!1 x!0)) (* 504 (* s00 r00 r!2 r!2 r!2 x!0)) (* (- 162) (* s00 x00 r!2 r!2 s!1)) (* 24 (* s00 s00 r00 r!2 r!2 s!1 s!1 s!1)) (* 45 (* s00 s00 r!2 s!1 s!1)) (* 72 (* s00 s00 r00 r!2 r!2 r!2 x!0 x!0)) (* 90 (* s00 s00 r!2 r!2 r!2 r!2 s!1)) (* 36 (* s00 s00 r00 r!2 s!1 x!0 x!0)) (* (- 72) (* r00 r00 x00 s!1 s!1 s!1 x!0)) (* (- 315) (* s00 s00 r!2 r!2 r!2 x!0)) (* (- 45) (* s00 s00 x!0)) (* (- 45) (* s00 s00 r!2 r!2 s!1 x!0)) (* 12 (* s00 s00 r00 s!1 x!0 x!0)) (* (- 225) (* s00 s00 r!2 x!0)) (* 24 (* s00 s00 r00 r!2 r!2 s!1 x!0 x!0)) (* (- 90) (* s00 s00 r!2 r!2 r!2 r!2 x!0)) (* (- 24) (* s00 s00 r00 s!1 s!1 x!0)) (* (- 6) (* s00 s00 r00 x!0)) (* 24 (* r00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 225 (* s00 s00 r!2 s!1)) (* 24 (* s00 ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565)) (* (- 294) (* s00 s00 r00 r!2 r!2 s!1 x!0)) (* (- 186) (* s00 s00 r00 r!2 s!1 x!0)) (* 30 (* s00 s00 r00 r!2 s!1)) (* (- 54) (* x00 ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565)) (* (- 54) (* s00 s00 r00 r!2 r!2 x!0)) (* (- 6) (* ?x7564 ?x8514 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 4 (* r00 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 54) (* r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565)) (* 18 (* s00 x00 r!2 r!2 s!1 x!0)) (* (- 6) (* s00 x00 r!2 r!2 r!2 s!1 s!1)) (* (- 18) (* s00 x00 r!2 r!2 s!1 s!1)) (* 2592 (* r00 r00 x00 r!2 r!2 x!0 x!0)) (* 6 (* x00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 12) (* s00 s00 r00 r!2 r!2 r!2 r!2 x!0)) (* 24 (* ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 2) (* s00 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 54) (* ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 36) (* r00 r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 54 (* s00 s00 r00 r!2 r!2 s!1)) (* 135 (* s00 r!2 s!1)) (* (- 36) (* r00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 3) (* ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 15 (* s00 s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 2 (* ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 54) (* r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 2 (* s00 ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* 15 (* s00 s00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* 9 (* ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* 54 (* r00 x00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 2) (* r00 s00 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* 4 (* s00 s00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 6 (* x00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 4) (* s00 s00 ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565)) (* (- 2) (* ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 9) (* ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 36) (* r00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 12 (* s00 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* (- 6) (* s00 x00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 24) (* s00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 6) (* s00 ?x7564 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565)) (* (- 6) (* s00 x00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 54 (* ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565)) (* (- 2) (* s00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 24 (* r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 405 (* s00 s00 r!2 r!2 s!1)) (* 36 (* s00 s00 r00 r!2 s!1 s!1 s!1)) (* 36 (* r00 r00 ?x7564 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565)) (* 324 (* r00 r00 x00 x!0 x!0)) (* 2 (* s00 s00 r00 r!2 s!1 s!1 x!0 x!0)) (* (- 12) ?x8803) (* (- 38) (* s00 s00 r00 s!1 x!0)) (* 15 (* s00 s00 s!1 s!1)) (* (- 9) (* s00 s!1 x!0)) (* (- 189) (* s00 r!2 r!2 r!2 x!0)) (* 18 (* s00 s00 r00 x!0 x!0)) (* (- 54) (* s00 r!2 r!2 r!2 r!2 x!0)))))
 (let (($x2276 (= ?x2272 0)))
 (let (($x1981 (not $x2276)))
 (let ((?x5755 (* (- 9) s!1)))
 (let ((?x1443 (* x00 x00)))
 (let ((?x7499 (* 108 ?x1443)))
 (let ((?x1396 (* r00 r00 s!1)))
 (let ((?x1971 (* 36 ?x1396)))
 (let ((?x1281 (* s00 s00 s00)))
 (let ((?x7872 (* 16 ?x1281)))
 (let ((?x979 (* r00 r00 r00 x00)))
 (let ((?x7662 (* (- 432) ?x979)))
 (let ((?x902 (* s00 x00)))
 (let ((?x7841 (* (- 108) ?x902)))
 (let ((?x744 (* s00 r00 r00)))
 (let ((?x8220 (* (- 36) ?x744)))
 (let ((?x688 (* s00 s00)))
 (let ((?x7264 (* 51 ?x688)))
 (let ((?x619 (* r00 x00)))
 (let ((?x4825 (* 108 ?x619)))
 (let ((?x137 (* 9 s00)))
 (let ((?x5645 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x4825 ?x7264 ?x8220 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x7841 ?x7662 (* 216 (* s00 r00 r00 r00)) ?x7872 ?x1971 ?x7499 (* (- 66) (* s00 s!1)) (* 108 (* s00 x!0)) (* (- 216) (* x00 x!0)) (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* 36 (* r00 r00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* (- 108) (* r00 x!0)) (* 54 (* r00 s!1)) (* 108 (* s00 r00 s!1)) (* 108 (* x00 s!1)) (* 108 (* x!0 x!0)) (* 15 (* s!1 s!1)) (* (- 4) (* s!1 s!1 s!1)) ?x5755 (* (- 108) (* s!1 x!0)))))
 (let (($x5652 (= ?x5645 0)))
 (let ((?x974 (* r00 r00 x00)))
 (let ((?x6124 (* 36 ?x974)))
 (let ((?x6122 (* (- 6) ?x902)))
 (let ((?x6140 (* 15 ?x688)))
 (let ((?x1814 (* 54 ?x619)))
 (let ((?x4710 (+ ?x137 (* (- 24) (* s00 r00)) ?x1814 ?x6140 ?x8220 (* 2 (* s00 s00 r00)) ?x6122 ?x6124 ?x1971 (* (- 24) (* s00 r!2)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 12) (* s00 s!1)) (* 6 (* s00 x!0)) (* (- 36) (* r00 r!2 x!0)) (* 24 (* r!2 s!1)) (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* 24 (* r00 s!1)) (* 2 (* s00 r00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* 6 (* x00 s!1)) (* (- 3) (* s!1 s!1)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 r!2 s!1)) (* (- 54) (* r!2 x!0)) ?x5755 (* (- 6) (* s!1 x!0)) (* (- 2) (* r!2 s!1 s!1)))))
 (let (($x4711 (= ?x4710 0)))
 (let ((?x3131 (* (- 3) s!1)))
 (let ((?x7442 (* 4 ?x688)))
 (let ((?x8025 (* 18 ?x619)))
 (let ((?x44 (* 3 s00)))
 (let ((?x7249 (+ ?x44 (* (- 9) (* s00 r00)) ?x8025 ?x7442 (* (- 6) ?x744) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x1396) (* (- 9) (* s00 r!2)) (* (- 2) (* s00 s!1)) (* 9 (* r!2 s!1)) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* 9 (* r00 s!1)) (* (- 2) (* s!1 s!1)) (* (- 18) (* r!2 x!0)) ?x3131 (* 6 (* s00 r00 r!2)))))
 (let (($x995 (= ?x7249 0)))
 (let ((?x3124 (* 6 x!0)))
 (let ((?x3133 (* 3 r!2)))
 (let ((?x4413 (* r!2 s!1)))
 (let ((?x8682 (* 2 ?x4413)))
 (let ((?x566 (* r00 r00 r00)))
 (let ((?x567 (* 12 ?x566)))
 (let ((?x523 (* s00 r00)))
 (let ((?x601 (* (- 6) ?x523)))
 (let ((?x598 (* (- 6) x00)))
 (let ((?x597 (* (- 3) r00)))
 (let ((?x3147 (+ ?x44 ?x597 ?x598 ?x601 ?x567 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x8682 ?x3133 ?x3131 ?x3124)))
 (let (($x4276 (= ?x3147 0)))
 (let (($x4778 (and $x1970 $x4276 $x995 $x4711 $x5652 $x1981)))
 (let ((?x4568 (+ (* 504 (* r!2 r!2 r!2 s!1 s00 r00)) (* (- 36) (* r00 ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565)) (* 12 (* s00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 432) (* r!2 r!2 s!1 x!0 x!0 r00 r00 x00)) (* (- 54) (* x00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 24 (* r00 s00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* 27 (* x!0 s00)) (* (- 27) (* s!1 s00)) (* (- 54) (* r00 x00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 72 (* s!1 s00 r00)) (* (- 2) (* s00 ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* (- 90) (* r!2 x!0 x!0 s00 s00 r00)) (* 2 (* r00 s00 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* (- 135) (* r!2 s!1 s00)) (* (- 9) (* s!1 s!1 s00)) (* (- 4) (* r00 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 4) (* s00 s00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 54) (* r00 x00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* 162 (* r!2 r!2 s!1 s00 x00)) (* 54 (* x00 ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565)) (* (- 504) (* r!2 r!2 r!2 x!0 s00 r00)) (* (- 72) (* x!0 s00 r00)) (* 54 (* r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 6) (* x00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 45) (* s!1 s00 s00)) (* 45 (* x!0 s00 s00)) (* 72 (* s!1 s!1 s!1 x!0 r00 r00 x00)) (* (- 216) (* s!1 x!0 x!0 r00 r00 x00)) (* (- 144) (* r!2 r!2 x!0 x!0 s00 s00 r00)) (* 15 (* r!2 r!2 r!2 s!1 x!0 s00 s00)) (* 72 (* r!2 s!1 s!1 x!0 s00 s00 r00)) (* 45 (* r!2 s!1 x!0 s00 s00)) (* 45 (* r!2 r!2 s!1 x!0 s00 s00)) (* (- 12) (* s!1 x!0 x!0 s00 s00 r00)) (* 315 (* r!2 r!2 r!2 x!0 s00 s00)) (* (- 36) (* r!2 s!1 x!0 x!0 s00 s00 r00)) (* 405 (* r!2 r!2 x!0 s00 s00)) (* (- 225) (* r!2 s!1 s00 s00)) (* (- 405) (* r!2 r!2 s!1 s00 s00)) (* (- 315) (* r!2 r!2 r!2 s!1 s00 s00)) (* (- 36) (* r!2 s!1 s!1 s!1 s00 s00 r00)) (* (- 90) (* r!2 r!2 r!2 r!2 s!1 s00 s00)) (* (- 45) (* r!2 s!1 s!1 s00 s00)) (* (- 72) (* r!2 r!2 r!2 x!0 x!0 s00 s00 r00)) (* (- 15) (* s!1 s!1 s00 s00)) (* (- 45) (* r!2 r!2 s!1 s!1 s00 s00)) (* (- 24) (* r!2 r!2 s!1 s!1 s!1 s00 s00 r00)) (* (- 15) (* r!2 r!2 r!2 s!1 s!1 s00 s00)) (* 48 (* r!2 r!2 s!1 s!1 x!0 s00 s00 r00)) (* 225 (* r!2 x!0 s00 s00)) (* (- 24) (* r!2 r!2 s!1 x!0 x!0 s00 s00 r00)) (* 90 (* r!2 r!2 r!2 r!2 x!0 s00 s00)) (* 15 (* s!1 x!0 s00 s00)) (* (- 54) (* ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565)) (* (- 360) (* r!2 x!0 s00 r00)) (* (- 243) (* r!2 r!2 s!1 s00)) (* (- 189) (* r!2 r!2 r!2 s!1 s00)) (* (- 54) (* r!2 r!2 r!2 r!2 s!1 s00)) (* (- 27) (* r!2 s!1 s!1 s00)) (* (- 27) (* r!2 r!2 s!1 s!1 s00)) (* (- 9) (* r!2 r!2 r!2 s!1 s!1 s00)) (* 135 (* r!2 x!0 s00)) (* 243 (* r!2 r!2 x!0 s00)) (* 189 (* r!2 r!2 r!2 x!0 s00)) (* 9 (* s!1 x!0 s00)) (* 54 (* r!2 r!2 r!2 r!2 x!0 s00)) (* 27 (* r!2 s!1 x!0 s00)) (* 27 (* r!2 r!2 s!1 x!0 s00)) (* 9 (* r!2 r!2 r!2 s!1 x!0 s00)) (* (- 12) (* s!1 s!1 s!1 s00 s00 r00)) (* 9 (* ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 36 (* r00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 12) (* s00 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* (- 162) (* s!1 r00 x00)) (* 6 (* s00 x00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 810) (* r!2 s!1 r00 x00)) (* (- 1458) (* r!2 r!2 s!1 r00 x00)) (* 2 (* s00 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 1134) (* r!2 r!2 r!2 s!1 r00 x00)) (* 24 (* s00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 54 (* ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 15) (* s00 s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 36) (* r00 r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 6 (* s00 ?x7564 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565)) (* (- 162) (* r!2 s!1 s!1 r00 x00)) (* (- 324) (* r!2 r!2 r!2 r!2 s!1 r00 x00)) (* (- 54) (* s!1 s!1 r00 x00)) (* (- 162) (* r!2 r!2 s!1 s!1 r00 x00)) (* (- 54) (* r!2 r!2 r!2 s!1 s!1 r00 x00)) (* 162 (* x!0 r00 x00)) (* 810 (* r!2 x!0 r00 x00)) (* 1458 (* r!2 r!2 x!0 r00 x00)) (* 24 (* s!1 s!1 x!0 s00 s00 r00)) (* 1134 (* r!2 r!2 r!2 x!0 r00 x00)) (* 324 (* r!2 r!2 r!2 r!2 x!0 r00 x00)) (* 54 (* s!1 x!0 r00 x00)) (* 162 (* r!2 s!1 x!0 r00 x00)) (* 162 (* r!2 r!2 s!1 x!0 r00 x00)) (* 54 (* r!2 r!2 r!2 s!1 x!0 r00 x00)) (* (- 1296) (* r!2 r!2 r!2 x!0 x!0 r00 r00 x00)) (* (- 15) (* s00 s00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 9) (* ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* 648 (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* 432 (* r!2 r!2 s!1 x!0 x!0 s00 r00 r00)) (* (- 24) (* s00 ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565)) (* 36 (* s!1 s!1 x!0 x!0 s00 r00 r00)) (* 216 (* s!1 x!0 x!0 s00 r00 r00)) (* 1296 (* r!2 r!2 r!2 x!0 x!0 s00 r00 r00)) (* 2592 (* r!2 r!2 x!0 x!0 s00 r00 r00)) (* (- 216) (* s!1 s!1 s!1 r00 r00 x00)) (* 36 (* r00 r00 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* 1620 (* r!2 x!0 x!0 s00 r00 r00)) (* (- 72) (* s!1 s!1 s!1 x!0 s00 r00 r00)) (* (- 4) (* s00 s00 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 72) (* r!2 s!1 s!1 s!1 x!0 s00 r00 r00)) (* 324 (* x!0 x!0 s00 r00 r00)) (* 6 (* s00 x00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 864) (* r!2 r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 1296) (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 432) (* s!1 s!1 x!0 s00 r00 r00)) (* (- 2628) (* r!2 r!2 r!2 s!1 x!0 s00 r00 r00)) (* (- 5292) (* r!2 r!2 s!1 x!0 s00 r00 r00)) (* 72 (* r!2 s!1 s!1 s!1 x!0 r00 r00 x00)) (* (- 3348) (* r!2 s!1 x!0 s00 r00 r00)) (* (- 684) (* s!1 x!0 s00 r00 r00)) (* 360 (* s!1 s!1 s00 r00 r00)) (* 1728 (* r!2 s!1 s!1 s00 r00 r00)) (* 24 (* ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* 3 (* ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 2700 (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* 6 (* x00 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* 216 (* s!1 s!1 s!1 s00 r00 r00)) (* 54 (* r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 648 (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* 1332 (* r!2 r!2 r!2 s!1 s!1 s00 r00 r00)) (* 432 (* r!2 r!2 s!1 s!1 s!1 s00 r00 r00)) (* (- 1620) (* r!2 x!0 x!0 r00 r00 x00)) (* 36 (* s!1 s!1 s!1 s!1 s00 r00 r00)) (* 6 (* ?x7564 ?x8514 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 36 (* r!2 s!1 s!1 s!1 s!1 s00 r00 r00)) (* 36 (* r!2 s!1 s!1 x!0 x!0 s00 r00 r00)) (* 18 (* s!1 s00 x00)) (* 90 (* r!2 s!1 s00 x00)) (* 540 (* r!2 s!1 s00 r00 r00)) (* 2 (* ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 18) (* x!0 s00 x00)) (* 972 (* r!2 r!2 s!1 s00 r00 r00)) (* 756 (* r!2 r!2 r!2 s!1 s00 r00 r00)) (* (- 108) (* x!0 s00 r00 r00)) (* 216 (* r!2 r!2 r!2 r!2 s!1 s00 r00 r00)) (* (- 216) (* r!2 r!2 r!2 r!2 x!0 s00 r00 r00)) (* (- 6) (* s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 24) (* r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 6) (* s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565)) (* 3 (* ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 9) (* s00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 9) (* s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 36) (* r00 r00 ?x7564 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565)) (* 36 (* r00 x00 ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565)) (* 36 (* r00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565)) (* 4 (* r00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 24) (* r!2 r!2 r!2 s!1 x!0 s00 r00)) (* 108 (* s!1 s00 r00 r00)) (* (- 72) (* r!2 r!2 s!1 x!0 s00 r00)) (* (- 72) (* r!2 s!1 x!0 s00 r00)) (* (- 540) (* r!2 x!0 s00 r00 r00)) (* (- 2) (* ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 972) (* r!2 r!2 x!0 s00 r00 r00)) (* 360 (* r!2 s!1 s00 r00)) (* (- 24) (* s!1 x!0 s00 r00)) (* (- 756) (* r!2 r!2 r!2 x!0 s00 r00 r00)) (* 6 (* ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 24 (* r!2 r!2 r!2 s!1 s!1 s00 r00)) (* (- 36) (* r00 r00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 72 (* r!2 r!2 s!1 s!1 s00 r00)) (* 72 (* r!2 s!1 s!1 s00 r00)) (* 24 (* s!1 s!1 s00 r00)) (* (- 432) (* r!2 r!2 s!1 s!1 s!1 r00 r00 x00)) (* (- 54) (* x00 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* 9 (* ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 24) (* ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 648) (* r!2 r!2 x!0 s00 r00)) (* (- 2) (* r00 s00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 54 (* ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 4 (* r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565 ?x7565)) (* 24 (* r00 s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 24 (* r00 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565)) (* (- 36) (* r00 x00 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* (- 162) (* r!2 r!2 x!0 s00 x00)) (* (- 36) (* r!2 r!2 r!2 r!2 x!0 s00 x00)) (* 36 (* r00 r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 108) (* s!1 r00 r00 x00)) (* (- 540) (* r!2 s!1 r00 r00 x00)) (* (- 972) (* r!2 r!2 s!1 r00 r00 x00)) (* 2 (* s00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 756) (* r!2 r!2 r!2 s!1 r00 r00 x00)) (* 126 (* r!2 r!2 r!2 s!1 s00 x00)) (* (- 90) (* r!2 x!0 s00 x00)) (* (- 216) (* r!2 r!2 r!2 r!2 s!1 r00 r00 x00)) (* (- 126) (* r!2 r!2 r!2 x!0 s00 x00)) (* (- 360) (* s!1 s!1 r00 r00 x00)) (* (- 24) (* r00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 1728) (* r!2 s!1 s!1 r00 r00 x00)) (* (- 2700) (* r!2 r!2 s!1 s!1 r00 r00 x00)) (* (- 1332) (* r!2 r!2 r!2 s!1 s!1 r00 r00 x00)) (* 36 (* r00 r00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565)) (* 108 (* x!0 r00 r00 x00)) (* 36 (* r!2 r!2 r!2 r!2 s!1 s00 x00)) (* 540 (* r!2 x!0 r00 r00 x00)) (* 972 (* r!2 r!2 x!0 r00 r00 x00)) (* 756 (* r!2 r!2 r!2 x!0 r00 r00 x00)) (* 216 (* r!2 r!2 r!2 r!2 x!0 r00 r00 x00)) (* 684 (* s!1 x!0 r00 r00 x00)) (* 3348 (* r!2 s!1 x!0 r00 r00 x00)) (* 5292 (* r!2 r!2 s!1 x!0 r00 r00 x00)) (* 2628 (* r!2 r!2 r!2 s!1 x!0 r00 r00 x00)) (* (- 6) (* ?x7564 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)) (* 36 (* r00 r00 s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 324) (* x!0 x!0 r00 r00 x00)) (* (- 2) (* r!2 s!1 s!1 x!0 x!0 s00 s00 r00)) (* (- 36) (* r!2 s!1 s!1 x!0 x!0 r00 r00 x00)) (* (- 648) (* r!2 s!1 s!1 s!1 r00 r00 x00)) (* (- 2) (* r00 s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 432 (* s!1 s!1 x!0 r00 r00 x00)) (* 6 (* s!1 s!1 s00 x00)) (* (- 2) (* s!1 s!1 s!1 s!1 s00 s00 r00)) (* 18 (* r!2 s!1 s!1 s00 x00)) (* (- 2) (* r!2 s!1 s!1 s!1 s!1 s00 s00 r00)) (* 4 (* s!1 s!1 s!1 x!0 s00 s00 r00)) (* (- 6) (* s!1 x!0 s00 x00)) (* 4 (* r!2 s!1 s!1 s!1 x!0 s00 s00 r00)) (* (- 18) (* r!2 s!1 x!0 s00 x00)) (* (- 54) (* r00 ?x7564 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565)) (* (- 18) (* x!0 x!0 s00 s00 r00)) (* (- 2) (* s!1 s!1 x!0 x!0 s00 s00 r00)) (* (- 36) (* r!2 s!1 s!1 s!1 s!1 r00 r00 x00)) (* (- 6) (* x00 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 4 (* s00 s00 ?x7564 ?x7564 ?x7564 ?x7564 ?x8514 ?x7565)) (* (- 24) (* ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* 18 (* r!2 r!2 s!1 s!1 s00 x00)) (* (- 18) (* r!2 r!2 s!1 x!0 s00 x00)) (* 6 (* r!2 r!2 r!2 s!1 s!1 s00 x00)) (* 864 (* r!2 r!2 s!1 s!1 x!0 r00 r00 x00)) (* (- 648) (* r!2 s!1 x!0 x!0 r00 r00 x00)) (* (- 36) (* s!1 s!1 s!1 s!1 r00 r00 x00)) (* (- 2) (* r00 s00 s00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 6) (* r!2 r!2 r!2 s!1 x!0 s00 x00)) (* (- 36) (* s!1 s!1 x!0 x!0 r00 r00 x00)) (* 1296 (* r!2 s!1 s!1 x!0 r00 r00 x00)) (* (- 36) (* r00 x00 ?x7564 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* 2 (* ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565 ?x7565)) (* (- 2592) (* r!2 r!2 x!0 x!0 r00 r00 x00)) (* (- 36) (* r00 r00 x00 ?x7564 ?x8514 ?x8514 ?x8514 ?x7565 ?x7565 ?x7565)) (* (- 144) (* r!2 r!2 r!2 r!2 x!0 s00 r00)) (* (- 42) (* r!2 r!2 r!2 s!1 s00 s00 r00)) (* (- 30) (* r!2 s!1 s00 s00 r00)) (* (- 54) (* r!2 r!2 s!1 s00 s00 r00)) (* (- 6) (* s!1 s00 s00 r00)) (* 30 (* r!2 x!0 s00 s00 r00)) (* 42 (* r!2 r!2 r!2 x!0 s00 s00 r00)) (* 54 (* r!2 r!2 x!0 s00 s00 r00)) (* 186 (* r!2 s!1 x!0 s00 s00 r00)) (* 294 (* r!2 r!2 s!1 x!0 s00 s00 r00)) (* 12 (* r!2 r!2 r!2 r!2 x!0 s00 s00 r00)) (* 38 (* s!1 x!0 s00 s00 r00)) (* (- 12) (* r!2 r!2 r!2 r!2 s!1 s00 s00 r00)) (* (- 20) (* s!1 s!1 s00 s00 r00)) (* (- 96) (* r!2 s!1 s!1 s00 s00 r00)) (* (- 150) (* r!2 r!2 s!1 s!1 s00 s00 r00)) (* (- 74) (* r!2 r!2 r!2 s!1 s!1 s00 s00 r00)) (* 6 (* x!0 s00 s00 r00)) (* 146 (* r!2 r!2 r!2 s!1 x!0 s00 s00 r00)) (* 12 ?x8803) (* 648 (* r!2 r!2 s!1 s00 r00)) (* 144 (* r!2 r!2 r!2 r!2 s!1 s00 r00)) (* (- 3) (* ?x7564 ?x7564 ?x7564 ?x8514 ?x7565 ?x7565 ?x7565)) (* 24 (* s00 ?x7564 ?x7564 ?x8514 ?x8514 ?x7565 ?x7565)))))
 (let ((?x1473 (* (- 108) ?x1443)))
 (let ((?x1472 (* (- 16) ?x1281)))
 (let ((?x1153 (* s00 r00 r00 r00)))
 (let ((?x1468 (* (- 216) ?x1153)))
 (let ((?x980 (* 432 ?x979)))
 (let ((?x1226 (* 108 ?x902)))
 (let ((?x828 (* s00 s00 r00 r00)))
 (let ((?x829 (* 36 ?x828)))
 (let ((?x765 (* s00 s00 r00)))
 (let ((?x1109 (* 108 ?x765)))
 (let ((?x1097 (* 36 ?x744)))
 (let ((?x1462 (* (- 51) ?x688)))
 (let ((?x7462 (* s!1 r00 r00)))
 (let ((?x7204 (* (- 36) ?x7462)))
 (let ((?x1459 (* (- 108) ?x619)))
 (let ((?x610 (* s00 r00 x00)))
 (let ((?x1458 (* (- 216) ?x610)))
 (let ((?x617 (* 54 ?x523)))
 (let ((?x1084 (* (- 9) s00)))
 (let ((?x3118 (* 9 s!1)))
 (let ((?x5718 (+ ?x3118 ?x1084 ?x617 ?x1458 ?x1459 (* (- 15) (* s!1 s!1)) ?x7204 ?x1462 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1097 ?x1109 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x829 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1226 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x980 (* 12 (* s!1 s!1 s00)) ?x1468 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1472 (* 216 (* x!0 x00)) ?x1473)))
 (let ((?x987 (* (- 36) ?x974)))
 (let ((?x903 (* 6 ?x902)))
 (let ((?x793 (* (- 2) ?x765)))
 (let ((?x1013 (* (- 15) ?x688)))
 (let ((?x648 (* (- 54) ?x619)))
 (let ((?x661 (* 24 ?x523)))
 (let ((?x7549 (+ ?x3118 ?x1084 (* (- 24) ?x4413) (* 24 (* r!2 s00)) ?x661 ?x648 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x7204 ?x1013 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1097 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x793 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x903 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x987 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x745 (* 6 ?x744)))
 (let ((?x701 (* (- 4) ?x688)))
 (let ((?x633 (* (- 18) ?x619)))
 (let ((?x638 (* 9 ?x523)))
 (let ((?x475 (* (- 3) s00)))
 (let ((?x4755 (+ (* 3 s!1) ?x475 (* (- 9) ?x4413) (* 9 (* r!2 s00)) ?x638 ?x633 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x7462) ?x701 (* 18 (* x!0 r00)) ?x745 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x7659 (+ ?x3133 ?x3131 ?x3124 ?x44 ?x597 ?x598 ?x8682 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x601 ?x567)))
 (let (($x3135 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x398)) 0)))
 (let (($x3750 (and $x3135 (= ?x7659 0) (= ?x4755 0) (= ?x7549 0) (= ?x5718 0) (not (= ?x4568 0)))))
 (let (($x7709 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1485 (+ 3 ?x214 s)))
 (let ((?x377 (* (- 1) s)))
 (let ((?x1491 (+ ?x377 x)))
 (let ((?x1482 (+ 1 r)))
 (let ((?x9839 (* 6 (* x s00 s00 r00))))
 (let ((?x9834 (* (- 12) (* r r r r s s00 s00 r00))))
 (let ((?x9832 (* 12 (* r r r r x s00 s00 r00))))
 (let ((?x9829 (* 54 (* r r x s00 s00 r00))))
 (let ((?x9828 (* 42 (* r r r x s00 s00 r00))))
 (let ((?x9827 (* 30 (* r x s00 s00 r00))))
 (let ((?x9826 (* (- 6) (* s s00 s00 r00))))
 (let ((?x9825 (* (- 54) (* r r s s00 s00 r00))))
 (let ((?x9824 (* (- 30) (* r s s00 s00 r00))))
 (let ((?x9821 (* (- 42) (* r r r s s00 s00 r00))))
 (let ((?x9643 (* 216 (* r r r r x r00 r00 x00))))
 (let ((?x9642 (* 756 (* r r r x r00 r00 x00))))
 (let ((?x9641 (* 972 (* r r x r00 r00 x00))))
 (let ((?x9640 (* 540 (* r x r00 r00 x00))))
 (let ((?x9639 (* 108 (* x r00 r00 x00))))
 (let ((?x9634 (* (- 216) (* r r r r s r00 r00 x00))))
 (let ((?x9633 (* (- 756) (* r r r s r00 r00 x00))))
 (let ((?x9632 (* (- 972) (* r r s r00 r00 x00))))
 (let ((?x9631 (* (- 540) (* r s r00 r00 x00))))
 (let ((?x9630 (* (- 108) (* s r00 r00 x00))))
 (let ((?x9543 (* (- 18) (* x s00 x00))))
 (let ((?x9497 (* 18 (* s s00 x00))))
 (let ((?x9496 (* 36 (* r s s x x s00 r00 r00))))
 (let ((?x9495 (* 36 (* r s s s s s00 r00 r00))))
 (let ((?x9494 (* 36 (* s s s s s00 r00 r00))))
 (let ((?x9493 (* 432 (* r r s s s s00 r00 r00))))
 (let ((?x9491 (* 648 (* r s s s s00 r00 r00))))
 (let ((?x9490 (* 216 (* s s s s00 r00 r00))))
 (let ((?x9480 (* (- 432) (* s s x s00 r00 r00))))
 (let ((?x9479 (* (- 1296) (* r s s x s00 r00 r00))))
 (let ((?x9478 (* (- 864) (* r r s s x s00 r00 r00))))
 (let ((?x9477 (* 324 (* x x s00 r00 r00))))
 (let ((?x9476 (* (- 72) (* r s s s x s00 r00 r00))))
 (let ((?x9475 (* (- 72) (* s s s x s00 r00 r00))))
 (let ((?x9474 (* 1620 (* r x x s00 r00 r00))))
 (let ((?x9472 (* 2592 (* r r x x s00 r00 r00))))
 (let ((?x9471 (* 1296 (* r r r x x s00 r00 r00))))
 (let ((?x9470 (* 216 (* s x x s00 r00 r00))))
 (let ((?x9469 (* 36 (* s s x x s00 r00 r00))))
 (let ((?x9468 (* 432 (* r r s x x s00 r00 r00))))
 (let ((?x9467 (* 648 (* r s x x s00 r00 r00))))
 (let ((?x9465 (* 54 (* r r r s x r00 x00))))
 (let ((?x9464 (* 162 (* r r s x r00 x00))))
 (let ((?x9463 (* 162 (* r s x r00 x00))))
 (let ((?x9462 (* 54 (* s x r00 x00))))
 (let ((?x9461 (* 324 (* r r r r x r00 x00))))
 (let ((?x9460 (* 1134 (* r r r x r00 x00))))
 (let ((?x9459 (* 1458 (* r r x r00 x00))))
 (let ((?x9458 (* 810 (* r x r00 x00))))
 (let ((?x9457 (* 162 (* x r00 x00))))
 (let ((?x9456 (* (- 54) (* r r r s s r00 x00))))
 (let ((?x9455 (* (- 162) (* r r s s r00 x00))))
 (let ((?x9454 (* (- 54) (* s s r00 x00))))
 (let ((?x9453 (* (- 324) (* r r r r s r00 x00))))
 (let ((?x9452 (* (- 162) (* r s s r00 x00))))
 (let ((?x9451 (* (- 1134) (* r r r s r00 x00))))
 (let ((?x9446 (* (- 1458) (* r r s r00 x00))))
 (let ((?x9445 (* (- 810) (* r s r00 x00))))
 (let ((?x9444 (* (- 162) (* s r00 x00))))
 (let ((?x9265 (* 9 (* r r r s x s00))))
 (let ((?x9266 (* 27 (* r r s x s00))))
 (let ((?x8931 (* 27 (* r s x s00))))
 (let ((?x8930 (* 54 (* r r r r x s00))))
 (let ((?x9264 (* 9 (* s x s00))))
 (let ((?x8929 (* 189 (* r r r x s00))))
 (let ((?x9271 (* 243 (* r r x s00))))
 (let ((?x8919 (* 135 (* r x s00))))
 (let ((?x9269 (* (- 9) (* r r r s s s00))))
 (let ((?x8924 (* (- 27) (* r r s s s00))))
 (let ((?x8928 (* (- 27) (* r s s s00))))
 (let ((?x8925 (* (- 54) (* r r r r s s00))))
 (let ((?x8915 (* (- 189) (* r r r s s00))))
 (let ((?x8921 (* (- 243) (* r r s s00))))
 (let ((?x8920 (* 90 (* r r r r x s00 s00))))
 (let ((?x8910 (* 225 (* r x s00 s00))))
 (let ((?x8908 (* (- 15) (* r r r s s s00 s00))))
 (let ((?x8911 (* (- 45) (* r r s s s00 s00))))
 (let ((?x8898 (* (- 90) (* r r r r s s00 s00))))
 (let ((?x8909 (* (- 315) (* r r r s s00 s00))))
 (let ((?x9310 (* (- 405) (* r r s s00 s00))))
 (let ((?x8907 (* (- 225) (* r s s00 s00))))
 (let ((?x9313 (* 405 (* r r x s00 s00))))
 (let ((?x8905 (* 315 (* r r r x s00 s00))))
 (let ((?x9311 (* 45 (* r r s x s00 s00))))
 (let ((?x9312 (* 15 (* r r r s x s00 s00))))
 (let ((?x1703 (* 45 (* x s00 s00))))
 (let ((?x1697 (* (- 45) (* s s00 s00))))
 (let ((?x1037 (* s s s00)))
 (let ((?x9154 (* (- 9) ?x1037)))
 (let ((?x1026 (* r s s00)))
 (let ((?x9217 (* (- 135) ?x1026)))
 (let ((?x785 (* s s00)))
 (let ((?x2529 (* (- 27) ?x785)))
 (let ((?x697 (* x s00)))
 (let ((?x2544 (* 27 ?x697)))
 (let ((?x1158 (+ (* 504 (* r r r s s00 r00)) (* (- 36) (* r00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485)) (* 12 (* s00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 432) (* r r s x x r00 r00 x00)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 24 (* r00 s00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) ?x2544 ?x2529 (* (- 54) (* r00 x00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 72 (* s s00 r00)) (* (- 2) (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) (* (- 90) (* r x x s00 s00 r00)) (* 2 (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) ?x9217 ?x9154 (* (- 4) (* r00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 54) (* r00 x00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) (* 162 (* r r s s00 x00)) (* 54 (* x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485)) (* (- 504) (* r r r x s00 r00)) (* (- 72) (* x s00 r00)) (* 54 (* r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485)) (* (- 6) (* x00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) ?x1697 ?x1703 (* 72 (* s s s x r00 r00 x00)) (* (- 216) (* s x x r00 r00 x00)) (* (- 144) (* r r x x s00 s00 r00)) ?x9312 (* 72 (* r s s x s00 s00 r00)) (* 45 (* r s x s00 s00)) ?x9311 (* (- 12) (* s x x s00 s00 r00)) ?x8905 (* (- 36) (* r s x x s00 s00 r00)) ?x9313 ?x8907 ?x9310 ?x8909 (* (- 36) (* r s s s s00 s00 r00)) ?x8898 (* (- 45) (* r s s s00 s00)) (* (- 72) (* r r r x x s00 s00 r00)) (* (- 15) (* s s s00 s00)) ?x8911 (* (- 24) (* r r s s s s00 s00 r00)) ?x8908 (* 48 (* r r s s x s00 s00 r00)) ?x8910 (* (- 24) (* r r s x x s00 s00 r00)) ?x8920 (* 15 (* s x s00 s00)) (* (- 54) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485)) (* (- 360) (* r x s00 r00)) ?x8921 ?x8915 ?x8925 ?x8928 ?x8924 ?x9269 ?x8919 ?x9271 ?x8929 ?x9264 ?x8930 ?x8931 ?x9266 ?x9265 (* (- 12) (* s s s s00 s00 r00)) (* 9 (* ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* 36 (* r00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 12) (* s00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) ?x9444 (* 6 (* s00 x00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) ?x9445 ?x9446 (* 2 (* s00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) ?x9451 (* 24 (* s00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 54 (* ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485)) (* (- 15) (* s00 s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 36) (* r00 r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* 6 (* s00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485)) ?x9452 ?x9453 ?x9454 ?x9455 ?x9456 ?x9457 ?x9458 ?x9459 (* 24 (* s s x s00 s00 r00)) ?x9460 ?x9461 ?x9462 ?x9463 ?x9464 ?x9465 (* (- 1296) (* r r r x x r00 r00 x00)) (* (- 15) (* s00 s00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) (* (- 9) (* ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) ?x9467 ?x9468 (* (- 24) (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485)) ?x9469 ?x9470 ?x9471 ?x9472 (* (- 216) (* s s s r00 r00 x00)) (* 36 (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) ?x9474 ?x9475 (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) ?x9476 ?x9477 (* 6 (* s00 x00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) ?x9478 ?x9479 ?x9480 (* (- 2628) (* r r r s x s00 r00 r00)) (* (- 5292) (* r r s x s00 r00 r00)) (* 72 (* r s s s x r00 r00 x00)) (* (- 3348) (* r s x s00 r00 r00)) (* (- 684) (* s x s00 r00 r00)) (* 360 (* s s s00 r00 r00)) (* 1728 (* r s s s00 r00 r00)) (* 24 (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) (* 3 (* ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* 2700 (* r r s s s00 r00 r00)) (* 6 (* x00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) ?x9490 (* 54 (* r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) ?x9491 (* 1332 (* r r r s s s00 r00 r00)) ?x9493 (* (- 1620) (* r x x r00 r00 x00)) ?x9494 (* 6 (* ?x1482 ?x1491 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) ?x9495 ?x9496 ?x9497 (* 90 (* r s s00 x00)) (* 540 (* r s s00 r00 r00)) (* 2 (* ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485 ?x1485)) ?x9543 (* 972 (* r r s s00 r00 r00)) (* 756 (* r r r s s00 r00 r00)) (* (- 108) (* x s00 r00 r00)) (* 216 (* r r r r s s00 r00 r00)) (* (- 216) (* r r r r x s00 r00 r00)) (* (- 6) (* s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 24) (* r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* (- 6) (* s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485)) (* 3 (* ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485 ?x1485)) (* (- 9) (* s00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) (* (- 9) (* s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 36) (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485)) (* 36 (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485)) (* 36 (* r00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485)) (* 4 (* r00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* (- 24) (* r r r s x s00 r00)) (* 108 (* s s00 r00 r00)) (* (- 72) (* r r s x s00 r00)) (* (- 72) (* r s x s00 r00)) (* (- 540) (* r x s00 r00 r00)) (* (- 2) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 972) (* r r x s00 r00 r00)) (* 360 (* r s s00 r00)) (* (- 24) (* s x s00 r00)) (* (- 756) (* r r r x s00 r00 r00)) (* 6 (* ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 24 (* r r r s s s00 r00)) (* (- 36) (* r00 r00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 72 (* r r s s s00 r00)) (* 72 (* r s s s00 r00)) (* 24 (* s s s00 r00)) (* (- 432) (* r r s s s r00 r00 x00)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) (* 9 (* ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 24) (* ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 648) (* r r x s00 r00)) (* (- 2) (* r00 s00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 54 (* ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 4 (* r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485 ?x1485)) (* 24 (* r00 s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 24 (* r00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) (* (- 162) (* r r x s00 x00)) (* (- 36) (* r r r r x s00 x00)) (* 36 (* r00 r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) ?x9630 ?x9631 ?x9632 (* 2 (* s00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) ?x9633 (* 126 (* r r r s s00 x00)) (* (- 90) (* r x s00 x00)) ?x9634 (* (- 126) (* r r r x s00 x00)) (* (- 360) (* s s r00 r00 x00)) (* (- 24) (* r00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 1728) (* r s s r00 r00 x00)) (* (- 2700) (* r r s s r00 r00 x00)) (* (- 1332) (* r r r s s r00 r00 x00)) (* 36 (* r00 r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485)) ?x9639 (* 36 (* r r r r s s00 x00)) ?x9640 ?x9641 ?x9642 ?x9643 (* 684 (* s x r00 r00 x00)) (* 3348 (* r s x r00 r00 x00)) (* 5292 (* r r s x r00 r00 x00)) (* 2628 (* r r r s x r00 r00 x00)) (* (- 6) (* ?x1482 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) (* 36 (* r00 r00 s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 324) (* x x r00 r00 x00)) (* (- 2) (* r s s x x s00 s00 r00)) (* (- 36) (* r s s x x r00 r00 x00)) (* (- 648) (* r s s s r00 r00 x00)) (* (- 2) (* r00 s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* 432 (* s s x r00 r00 x00)) (* 6 (* s s s00 x00)) (* (- 2) (* s s s s s00 s00 r00)) (* 18 (* r s s s00 x00)) (* (- 2) (* r s s s s s00 s00 r00)) (* 4 (* s s s x s00 s00 r00)) (* (- 6) (* s x s00 x00)) (* 4 (* r s s s x s00 s00 r00)) (* (- 18) (* r s x s00 x00)) (* (- 54) (* r00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485)) (* (- 18) (* x x s00 s00 r00)) (* (- 2) (* s s x x s00 s00 r00)) (* (- 36) (* r s s s s r00 r00 x00)) (* (- 6) (* x00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 4 (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485)) (* (- 24) (* ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* 18 (* r r s s s00 x00)) (* (- 18) (* r r s x s00 x00)) (* 6 (* r r r s s s00 x00)) (* 864 (* r r s s x r00 r00 x00)) (* (- 648) (* r s x x r00 r00 x00)) (* (- 36) (* s s s s r00 r00 x00)) (* (- 2) (* r00 s00 s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 6) (* r r r s x s00 x00)) (* (- 36) (* s s x x r00 r00 x00)) (* 1296 (* r s s x r00 r00 x00)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 2 (* ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* (- 2592) (* r r x x r00 r00 x00)) (* (- 36) (* r00 r00 x00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 144) (* r r r r x s00 r00)) ?x9821 ?x9824 ?x9825 ?x9826 ?x9827 ?x9828 ?x9829 (* 186 (* r s x s00 s00 r00)) (* 294 (* r r s x s00 s00 r00)) ?x9832 (* 38 (* s x s00 s00 r00)) ?x9834 (* (- 20) (* s s s00 s00 r00)) (* (- 96) (* r s s s00 s00 r00)) (* (- 150) (* r r s s s00 s00 r00)) (* (- 74) (* r r r s s s00 s00 r00)) ?x9839 (* 146 (* r r r s x s00 s00 r00)) (* 12 (* s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* 648 (* r r s s00 r00)) (* 144 (* r r r r s s00 r00)) (* (- 3) (* ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485 ?x1485)) (* 24 (* s00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)))))
 (let ((?x1443 (* x00 x00)))
 (let ((?x1473 (* (- 108) ?x1443)))
 (let ((?x1281 (* s00 s00 s00)))
 (let ((?x1472 (* (- 16) ?x1281)))
 (let ((?x1153 (* s00 r00 r00 r00)))
 (let ((?x1468 (* (- 216) ?x1153)))
 (let ((?x979 (* r00 r00 r00 x00)))
 (let ((?x980 (* 432 ?x979)))
 (let ((?x902 (* s00 x00)))
 (let ((?x1226 (* 108 ?x902)))
 (let ((?x828 (* s00 s00 r00 r00)))
 (let ((?x829 (* 36 ?x828)))
 (let ((?x765 (* s00 s00 r00)))
 (let ((?x1109 (* 108 ?x765)))
 (let ((?x744 (* s00 r00 r00)))
 (let ((?x1097 (* 36 ?x744)))
 (let ((?x688 (* s00 s00)))
 (let ((?x1462 (* (- 51) ?x688)))
 (let ((?x662 (* s r00 r00)))
 (let ((?x961 (* (- 36) ?x662)))
 (let ((?x619 (* r00 x00)))
 (let ((?x1459 (* (- 108) ?x619)))
 (let ((?x610 (* s00 r00 x00)))
 (let ((?x1458 (* (- 216) ?x610)))
 (let ((?x523 (* s00 r00)))
 (let ((?x617 (* 54 ?x523)))
 (let ((?x1084 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1474 (+ ?x143 ?x1084 ?x617 ?x1458 ?x1459 (* (- 15) (* s s)) ?x961 ?x1462 (* (- 108) ?x697) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1097 ?x1109 (* 66 ?x785) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x829 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1226 (* 108 (* s x)) (* (- 108) (* x x)) ?x980 (* 12 ?x1037) ?x1468 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1472 (* 216 (* x x00)) ?x1473)))
 (let (($x1475 (= ?x1474 0)))
 (let ((?x974 (* r00 r00 x00)))
 (let ((?x987 (* (- 36) ?x974)))
 (let ((?x903 (* 6 ?x902)))
 (let ((?x793 (* (- 2) ?x765)))
 (let ((?x1013 (* (- 15) ?x688)))
 (let ((?x642 (* s s)))
 (let ((?x666 (* 3 ?x642)))
 (let ((?x648 (* (- 54) ?x619)))
 (let ((?x661 (* 24 ?x523)))
 (let ((?x1176 (+ ?x143 ?x1084 (* (- 24) (* r s)) (* 24 (* r s00)) ?x661 ?x648 ?x666 (* 54 (* r x)) (* 36 (* r x r00)) ?x961 ?x1013 (* (- 6) ?x697) (* 54 (* x r00)) ?x1097 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x793 (* 12 ?x785) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x903 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x987 (* 2 ?x1026) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1181 (= ?x1176 0)))
 (let ((?x745 (* 6 ?x744)))
 (let ((?x701 (* (- 4) ?x688)))
 (let ((?x643 (* 2 ?x642)))
 (let ((?x633 (* (- 18) ?x619)))
 (let ((?x638 (* 9 ?x523)))
 (let ((?x475 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x842 (+ ?x47 ?x475 (* (- 9) (* r s)) (* 9 (* r s00)) ?x638 ?x633 ?x643 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x662) ?x701 (* 18 (* x r00)) ?x745 (* (- 18) (* r x00)) (* 2 ?x785) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x849 (= ?x842 0)))
 (let ((?x566 (* r00 r00 r00)))
 (let ((?x567 (* 12 ?x566)))
 (let ((?x601 (* (- 6) ?x523)))
 (let ((?x598 (* (- 6) x00)))
 (let ((?x597 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x596 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x602 (+ ?x43 ?x596 ?x56 ?x44 ?x597 ?x598 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x601 ?x567)))
 (let (($x603 (= ?x602 0)))
 (let ((?x398 (* r00 r00)))
 (let ((?x399 (* 3 ?x398)))
 (let ((?x428 (* (- 1) s00)))
 (let (($x431 (= (+ s ?x428 (* (- 3) (* r r)) ?x399) 0)))
 (and $x431 $x603 $x849 $x1181 $x1475 (not (= ?x1158 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x2030 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x2674 (+ 3 s ?x214)))
 (let ((?x377 (* (- 1) s)))
 (let ((?x1613 (+ x ?x377)))
 (let ((?x1482 (+ 1 r)))
 (let ((?x8085 (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)))
 (let ((?x2628 (+ (* 36 (* r00 r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* r00 s00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* s00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 r00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 24) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 6) (* x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 4 (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 15 (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 12 (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 24) (* r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 9 (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 54 (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 15) (* s00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 24 (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 3 (* ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 6 (* x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 6 (* ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 54 (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 9 (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 54) (* r00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 6) (* ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 36 (* r00 r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* 2 (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 6) (* s00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 54 (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 24 (* r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 24) (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 r00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 54) (* r00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 54) (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 36 (* r00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 9 (* ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 54) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 4) (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 3) (* ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* r00 s00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* s00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 54 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 15) (* s00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 6 (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 2 (* r00 s00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 4 (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* 24 (* r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 9) (* s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 9) (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 9) (* ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 54 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 24) (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 54 (* x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 4 (* r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 12 (* s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 3 (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 12) ?x8085))))
 (let ((?x1443 (* x00 x00)))
 (let ((?x7499 (* 108 ?x1443)))
 (let ((?x7958 (* (- 9) s)))
 (let ((?x1876 (* r00 r00 s00)))
 (let ((?x7277 (* (- 36) ?x1876)))
 (let ((?x137 (* 9 s00)))
 (let ((?x688 (* s00 s00)))
 (let ((?x7264 (* 51 ?x688)))
 (let ((?x1807 (* r00 r00 s)))
 (let ((?x7453 (* 36 ?x1807)))
 (let ((?x1281 (* s00 s00 s00)))
 (let ((?x7872 (* 16 ?x1281)))
 (let ((?x902 (* s00 x00)))
 (let ((?x7841 (* (- 108) ?x902)))
 (let ((?x979 (* r00 r00 r00 x00)))
 (let ((?x7662 (* (- 432) ?x979)))
 (let ((?x619 (* r00 x00)))
 (let ((?x4825 (* 108 ?x619)))
 (let ((?x8011 (+ (* 216 (* r00 s00 x00)) ?x4825 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x7662 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x7841 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7872 (* (- 108) (* x s)) ?x7453 ?x7264 (* (- 108) (* r00 x)) ?x137 ?x7277 ?x7958 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x7499)))
 (let (($x7500 (= ?x8011 0)))
 (let ((?x6140 (* 15 ?x688)))
 (let ((?x974 (* r00 r00 x00)))
 (let ((?x6124 (* 36 ?x974)))
 (let ((?x6122 (* (- 6) ?x902)))
 (let ((?x1814 (* 54 ?x619)))
 (let ((?x7739 (+ (* 24 (* s r)) ?x1814 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x6122 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x7453 ?x6124 ?x6140 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x7277 (* 54 (* x00 r)) ?x7958 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x596 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x7442 (* 4 ?x688)))
 (let ((?x8025 (* 18 ?x619)))
 (let ((?x7538 (+ (* 9 (* s r)) ?x8025 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1807) ?x7442 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1876) (* 18 (* x00 r)) ?x596 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x566 (* r00 r00 r00)))
 (let ((?x567 (* 12 ?x566)))
 (let ((?x598 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x597 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x7533 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x596 ?x597 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x598 ?x567)))
 (let (($x1555 (= (+ s00 ?x377 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1555 (= ?x7533 0) (= ?x7538 0) (= ?x7739 0) $x7500 (not (= ?x2628 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x7201 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1485 (+ 3 ?x214 s)))
 (let ((?x377 (* (- 1) s)))
 (let ((?x1491 (+ ?x377 x)))
 (let ((?x1482 (+ 1 r)))
 (let ((?x9839 (* 6 (* x s00 s00 r00))))
 (let ((?x9834 (* (- 12) (* r r r r s s00 s00 r00))))
 (let ((?x9832 (* 12 (* r r r r x s00 s00 r00))))
 (let ((?x9829 (* 54 (* r r x s00 s00 r00))))
 (let ((?x9828 (* 42 (* r r r x s00 s00 r00))))
 (let ((?x9827 (* 30 (* r x s00 s00 r00))))
 (let ((?x9826 (* (- 6) (* s s00 s00 r00))))
 (let ((?x9825 (* (- 54) (* r r s s00 s00 r00))))
 (let ((?x9824 (* (- 30) (* r s s00 s00 r00))))
 (let ((?x9821 (* (- 42) (* r r r s s00 s00 r00))))
 (let ((?x9643 (* 216 (* r r r r x r00 r00 x00))))
 (let ((?x9642 (* 756 (* r r r x r00 r00 x00))))
 (let ((?x9641 (* 972 (* r r x r00 r00 x00))))
 (let ((?x9640 (* 540 (* r x r00 r00 x00))))
 (let ((?x9639 (* 108 (* x r00 r00 x00))))
 (let ((?x9634 (* (- 216) (* r r r r s r00 r00 x00))))
 (let ((?x9633 (* (- 756) (* r r r s r00 r00 x00))))
 (let ((?x9632 (* (- 972) (* r r s r00 r00 x00))))
 (let ((?x9631 (* (- 540) (* r s r00 r00 x00))))
 (let ((?x9630 (* (- 108) (* s r00 r00 x00))))
 (let ((?x9543 (* (- 18) (* x s00 x00))))
 (let ((?x9497 (* 18 (* s s00 x00))))
 (let ((?x9496 (* 36 (* r s s x x s00 r00 r00))))
 (let ((?x9495 (* 36 (* r s s s s s00 r00 r00))))
 (let ((?x9494 (* 36 (* s s s s s00 r00 r00))))
 (let ((?x9493 (* 432 (* r r s s s s00 r00 r00))))
 (let ((?x9491 (* 648 (* r s s s s00 r00 r00))))
 (let ((?x9490 (* 216 (* s s s s00 r00 r00))))
 (let ((?x9480 (* (- 432) (* s s x s00 r00 r00))))
 (let ((?x9479 (* (- 1296) (* r s s x s00 r00 r00))))
 (let ((?x9478 (* (- 864) (* r r s s x s00 r00 r00))))
 (let ((?x9477 (* 324 (* x x s00 r00 r00))))
 (let ((?x9476 (* (- 72) (* r s s s x s00 r00 r00))))
 (let ((?x9475 (* (- 72) (* s s s x s00 r00 r00))))
 (let ((?x9474 (* 1620 (* r x x s00 r00 r00))))
 (let ((?x9472 (* 2592 (* r r x x s00 r00 r00))))
 (let ((?x9471 (* 1296 (* r r r x x s00 r00 r00))))
 (let ((?x9470 (* 216 (* s x x s00 r00 r00))))
 (let ((?x9469 (* 36 (* s s x x s00 r00 r00))))
 (let ((?x9468 (* 432 (* r r s x x s00 r00 r00))))
 (let ((?x9467 (* 648 (* r s x x s00 r00 r00))))
 (let ((?x9465 (* 54 (* r r r s x r00 x00))))
 (let ((?x9464 (* 162 (* r r s x r00 x00))))
 (let ((?x9463 (* 162 (* r s x r00 x00))))
 (let ((?x9462 (* 54 (* s x r00 x00))))
 (let ((?x9461 (* 324 (* r r r r x r00 x00))))
 (let ((?x9460 (* 1134 (* r r r x r00 x00))))
 (let ((?x9459 (* 1458 (* r r x r00 x00))))
 (let ((?x9458 (* 810 (* r x r00 x00))))
 (let ((?x9457 (* 162 (* x r00 x00))))
 (let ((?x9456 (* (- 54) (* r r r s s r00 x00))))
 (let ((?x9455 (* (- 162) (* r r s s r00 x00))))
 (let ((?x9454 (* (- 54) (* s s r00 x00))))
 (let ((?x9453 (* (- 324) (* r r r r s r00 x00))))
 (let ((?x9452 (* (- 162) (* r s s r00 x00))))
 (let ((?x9451 (* (- 1134) (* r r r s r00 x00))))
 (let ((?x9446 (* (- 1458) (* r r s r00 x00))))
 (let ((?x9445 (* (- 810) (* r s r00 x00))))
 (let ((?x9444 (* (- 162) (* s r00 x00))))
 (let ((?x9265 (* 9 (* r r r s x s00))))
 (let ((?x9266 (* 27 (* r r s x s00))))
 (let ((?x8931 (* 27 (* r s x s00))))
 (let ((?x8930 (* 54 (* r r r r x s00))))
 (let ((?x9264 (* 9 (* s x s00))))
 (let ((?x8929 (* 189 (* r r r x s00))))
 (let ((?x9271 (* 243 (* r r x s00))))
 (let ((?x8919 (* 135 (* r x s00))))
 (let ((?x9269 (* (- 9) (* r r r s s s00))))
 (let ((?x8924 (* (- 27) (* r r s s s00))))
 (let ((?x8928 (* (- 27) (* r s s s00))))
 (let ((?x8925 (* (- 54) (* r r r r s s00))))
 (let ((?x8915 (* (- 189) (* r r r s s00))))
 (let ((?x8921 (* (- 243) (* r r s s00))))
 (let ((?x8920 (* 90 (* r r r r x s00 s00))))
 (let ((?x8910 (* 225 (* r x s00 s00))))
 (let ((?x8908 (* (- 15) (* r r r s s s00 s00))))
 (let ((?x8911 (* (- 45) (* r r s s s00 s00))))
 (let ((?x8898 (* (- 90) (* r r r r s s00 s00))))
 (let ((?x8909 (* (- 315) (* r r r s s00 s00))))
 (let ((?x9310 (* (- 405) (* r r s s00 s00))))
 (let ((?x8907 (* (- 225) (* r s s00 s00))))
 (let ((?x9313 (* 405 (* r r x s00 s00))))
 (let ((?x8905 (* 315 (* r r r x s00 s00))))
 (let ((?x9311 (* 45 (* r r s x s00 s00))))
 (let ((?x9312 (* 15 (* r r r s x s00 s00))))
 (let ((?x1703 (* 45 (* x s00 s00))))
 (let ((?x1697 (* (- 45) (* s s00 s00))))
 (let ((?x1037 (* s s s00)))
 (let ((?x9154 (* (- 9) ?x1037)))
 (let ((?x1026 (* r s s00)))
 (let ((?x9217 (* (- 135) ?x1026)))
 (let ((?x785 (* s s00)))
 (let ((?x2529 (* (- 27) ?x785)))
 (let ((?x697 (* x s00)))
 (let ((?x2544 (* 27 ?x697)))
 (let ((?x1158 (+ (* 504 (* r r r s s00 r00)) (* (- 36) (* r00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485)) (* 12 (* s00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 432) (* r r s x x r00 r00 x00)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 24 (* r00 s00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) ?x2544 ?x2529 (* (- 54) (* r00 x00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 72 (* s s00 r00)) (* (- 2) (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) (* (- 90) (* r x x s00 s00 r00)) (* 2 (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) ?x9217 ?x9154 (* (- 4) (* r00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 54) (* r00 x00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) (* 162 (* r r s s00 x00)) (* 54 (* x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485)) (* (- 504) (* r r r x s00 r00)) (* (- 72) (* x s00 r00)) (* 54 (* r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485)) (* (- 6) (* x00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) ?x1697 ?x1703 (* 72 (* s s s x r00 r00 x00)) (* (- 216) (* s x x r00 r00 x00)) (* (- 144) (* r r x x s00 s00 r00)) ?x9312 (* 72 (* r s s x s00 s00 r00)) (* 45 (* r s x s00 s00)) ?x9311 (* (- 12) (* s x x s00 s00 r00)) ?x8905 (* (- 36) (* r s x x s00 s00 r00)) ?x9313 ?x8907 ?x9310 ?x8909 (* (- 36) (* r s s s s00 s00 r00)) ?x8898 (* (- 45) (* r s s s00 s00)) (* (- 72) (* r r r x x s00 s00 r00)) (* (- 15) (* s s s00 s00)) ?x8911 (* (- 24) (* r r s s s s00 s00 r00)) ?x8908 (* 48 (* r r s s x s00 s00 r00)) ?x8910 (* (- 24) (* r r s x x s00 s00 r00)) ?x8920 (* 15 (* s x s00 s00)) (* (- 54) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485)) (* (- 360) (* r x s00 r00)) ?x8921 ?x8915 ?x8925 ?x8928 ?x8924 ?x9269 ?x8919 ?x9271 ?x8929 ?x9264 ?x8930 ?x8931 ?x9266 ?x9265 (* (- 12) (* s s s s00 s00 r00)) (* 9 (* ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* 36 (* r00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 12) (* s00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) ?x9444 (* 6 (* s00 x00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) ?x9445 ?x9446 (* 2 (* s00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) ?x9451 (* 24 (* s00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 54 (* ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485)) (* (- 15) (* s00 s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 36) (* r00 r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* 6 (* s00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485)) ?x9452 ?x9453 ?x9454 ?x9455 ?x9456 ?x9457 ?x9458 ?x9459 (* 24 (* s s x s00 s00 r00)) ?x9460 ?x9461 ?x9462 ?x9463 ?x9464 ?x9465 (* (- 1296) (* r r r x x r00 r00 x00)) (* (- 15) (* s00 s00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) (* (- 9) (* ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) ?x9467 ?x9468 (* (- 24) (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485)) ?x9469 ?x9470 ?x9471 ?x9472 (* (- 216) (* s s s r00 r00 x00)) (* 36 (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) ?x9474 ?x9475 (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) ?x9476 ?x9477 (* 6 (* s00 x00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) ?x9478 ?x9479 ?x9480 (* (- 2628) (* r r r s x s00 r00 r00)) (* (- 5292) (* r r s x s00 r00 r00)) (* 72 (* r s s s x r00 r00 x00)) (* (- 3348) (* r s x s00 r00 r00)) (* (- 684) (* s x s00 r00 r00)) (* 360 (* s s s00 r00 r00)) (* 1728 (* r s s s00 r00 r00)) (* 24 (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) (* 3 (* ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* 2700 (* r r s s s00 r00 r00)) (* 6 (* x00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) ?x9490 (* 54 (* r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) ?x9491 (* 1332 (* r r r s s s00 r00 r00)) ?x9493 (* (- 1620) (* r x x r00 r00 x00)) ?x9494 (* 6 (* ?x1482 ?x1491 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) ?x9495 ?x9496 ?x9497 (* 90 (* r s s00 x00)) (* 540 (* r s s00 r00 r00)) (* 2 (* ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485 ?x1485)) ?x9543 (* 972 (* r r s s00 r00 r00)) (* 756 (* r r r s s00 r00 r00)) (* (- 108) (* x s00 r00 r00)) (* 216 (* r r r r s s00 r00 r00)) (* (- 216) (* r r r r x s00 r00 r00)) (* (- 6) (* s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 24) (* r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* (- 6) (* s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485)) (* 3 (* ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485 ?x1485)) (* (- 9) (* s00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) (* (- 9) (* s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 36) (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485)) (* 36 (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485)) (* 36 (* r00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485)) (* 4 (* r00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* (- 24) (* r r r s x s00 r00)) (* 108 (* s s00 r00 r00)) (* (- 72) (* r r s x s00 r00)) (* (- 72) (* r s x s00 r00)) (* (- 540) (* r x s00 r00 r00)) (* (- 2) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 972) (* r r x s00 r00 r00)) (* 360 (* r s s00 r00)) (* (- 24) (* s x s00 r00)) (* (- 756) (* r r r x s00 r00 r00)) (* 6 (* ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 24 (* r r r s s s00 r00)) (* (- 36) (* r00 r00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 72 (* r r s s s00 r00)) (* 72 (* r s s s00 r00)) (* 24 (* s s s00 r00)) (* (- 432) (* r r s s s r00 r00 x00)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) (* 9 (* ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 24) (* ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 648) (* r r x s00 r00)) (* (- 2) (* r00 s00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 54 (* ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 4 (* r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485 ?x1485)) (* 24 (* r00 s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 24 (* r00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) (* (- 162) (* r r x s00 x00)) (* (- 36) (* r r r r x s00 x00)) (* 36 (* r00 r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) ?x9630 ?x9631 ?x9632 (* 2 (* s00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) ?x9633 (* 126 (* r r r s s00 x00)) (* (- 90) (* r x s00 x00)) ?x9634 (* (- 126) (* r r r x s00 x00)) (* (- 360) (* s s r00 r00 x00)) (* (- 24) (* r00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 1728) (* r s s r00 r00 x00)) (* (- 2700) (* r r s s r00 r00 x00)) (* (- 1332) (* r r r s s r00 r00 x00)) (* 36 (* r00 r00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485)) ?x9639 (* 36 (* r r r r s s00 x00)) ?x9640 ?x9641 ?x9642 ?x9643 (* 684 (* s x r00 r00 x00)) (* 3348 (* r s x r00 r00 x00)) (* 5292 (* r r s x r00 r00 x00)) (* 2628 (* r r r s x r00 r00 x00)) (* (- 6) (* ?x1482 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)) (* 36 (* r00 r00 s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 324) (* x x r00 r00 x00)) (* (- 2) (* r s s x x s00 s00 r00)) (* (- 36) (* r s s x x r00 r00 x00)) (* (- 648) (* r s s s r00 r00 x00)) (* (- 2) (* r00 s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* 432 (* s s x r00 r00 x00)) (* 6 (* s s s00 x00)) (* (- 2) (* s s s s s00 s00 r00)) (* 18 (* r s s s00 x00)) (* (- 2) (* r s s s s s00 s00 r00)) (* 4 (* s s s x s00 s00 r00)) (* (- 6) (* s x s00 x00)) (* 4 (* r s s s x s00 s00 r00)) (* (- 18) (* r s x s00 x00)) (* (- 54) (* r00 ?x1482 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485)) (* (- 18) (* x x s00 s00 r00)) (* (- 2) (* s s x x s00 s00 r00)) (* (- 36) (* r s s s s r00 r00 x00)) (* (- 6) (* x00 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 4 (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1491 ?x1485)) (* (- 24) (* ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* 18 (* r r s s s00 x00)) (* (- 18) (* r r s x s00 x00)) (* 6 (* r r r s s s00 x00)) (* 864 (* r r s s x r00 r00 x00)) (* (- 648) (* r s x x r00 r00 x00)) (* (- 36) (* s s s s r00 r00 x00)) (* (- 2) (* r00 s00 s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 6) (* r r r s x s00 x00)) (* (- 36) (* s s x x r00 r00 x00)) (* 1296 (* r s s x r00 r00 x00)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* 2 (* ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* (- 2592) (* r r x x r00 r00 x00)) (* (- 36) (* r00 r00 x00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485)) (* (- 144) (* r r r r x s00 r00)) ?x9821 ?x9824 ?x9825 ?x9826 ?x9827 ?x9828 ?x9829 (* 186 (* r s x s00 s00 r00)) (* 294 (* r r s x s00 s00 r00)) ?x9832 (* 38 (* s x s00 s00 r00)) ?x9834 (* (- 20) (* s s s00 s00 r00)) (* (- 96) (* r s s s00 s00 r00)) (* (- 150) (* r r s s s00 s00 r00)) (* (- 74) (* r r r s s s00 s00 r00)) ?x9839 (* 146 (* r r r s x s00 s00 r00)) (* 12 (* s00 ?x1482 ?x1491 ?x1491 ?x1491 ?x1485 ?x1485 ?x1485 ?x1485)) (* 648 (* r r s s00 r00)) (* 144 (* r r r r s s00 r00)) (* (- 3) (* ?x1482 ?x1482 ?x1482 ?x1491 ?x1485 ?x1485 ?x1485)) (* 24 (* s00 ?x1482 ?x1482 ?x1491 ?x1491 ?x1485 ?x1485)))))
 (let ((?x1443 (* x00 x00)))
 (let ((?x1473 (* (- 108) ?x1443)))
 (let ((?x1281 (* s00 s00 s00)))
 (let ((?x1472 (* (- 16) ?x1281)))
 (let ((?x1153 (* s00 r00 r00 r00)))
 (let ((?x1468 (* (- 216) ?x1153)))
 (let ((?x979 (* r00 r00 r00 x00)))
 (let ((?x980 (* 432 ?x979)))
 (let ((?x902 (* s00 x00)))
 (let ((?x1226 (* 108 ?x902)))
 (let ((?x828 (* s00 s00 r00 r00)))
 (let ((?x829 (* 36 ?x828)))
 (let ((?x765 (* s00 s00 r00)))
 (let ((?x1109 (* 108 ?x765)))
 (let ((?x744 (* s00 r00 r00)))
 (let ((?x1097 (* 36 ?x744)))
 (let ((?x688 (* s00 s00)))
 (let ((?x1462 (* (- 51) ?x688)))
 (let ((?x662 (* s r00 r00)))
 (let ((?x961 (* (- 36) ?x662)))
 (let ((?x619 (* r00 x00)))
 (let ((?x1459 (* (- 108) ?x619)))
 (let ((?x610 (* s00 r00 x00)))
 (let ((?x1458 (* (- 216) ?x610)))
 (let ((?x523 (* s00 r00)))
 (let ((?x617 (* 54 ?x523)))
 (let ((?x1084 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1474 (+ ?x143 ?x1084 ?x617 ?x1458 ?x1459 (* (- 15) (* s s)) ?x961 ?x1462 (* (- 108) ?x697) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1097 ?x1109 (* 66 ?x785) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x829 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1226 (* 108 (* s x)) (* (- 108) (* x x)) ?x980 (* 12 ?x1037) ?x1468 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1472 (* 216 (* x x00)) ?x1473)))
 (let (($x1475 (= ?x1474 0)))
 (let ((?x974 (* r00 r00 x00)))
 (let ((?x987 (* (- 36) ?x974)))
 (let ((?x903 (* 6 ?x902)))
 (let ((?x793 (* (- 2) ?x765)))
 (let ((?x1013 (* (- 15) ?x688)))
 (let ((?x642 (* s s)))
 (let ((?x666 (* 3 ?x642)))
 (let ((?x648 (* (- 54) ?x619)))
 (let ((?x661 (* 24 ?x523)))
 (let ((?x1176 (+ ?x143 ?x1084 (* (- 24) (* r s)) (* 24 (* r s00)) ?x661 ?x648 ?x666 (* 54 (* r x)) (* 36 (* r x r00)) ?x961 ?x1013 (* (- 6) ?x697) (* 54 (* x r00)) ?x1097 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x793 (* 12 ?x785) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x903 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x987 (* 2 ?x1026) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1181 (= ?x1176 0)))
 (let ((?x745 (* 6 ?x744)))
 (let ((?x701 (* (- 4) ?x688)))
 (let ((?x643 (* 2 ?x642)))
 (let ((?x633 (* (- 18) ?x619)))
 (let ((?x638 (* 9 ?x523)))
 (let ((?x475 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x842 (+ ?x47 ?x475 (* (- 9) (* r s)) (* 9 (* r s00)) ?x638 ?x633 ?x643 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x662) ?x701 (* 18 (* x r00)) ?x745 (* (- 18) (* r x00)) (* 2 ?x785) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x849 (= ?x842 0)))
 (let ((?x566 (* r00 r00 r00)))
 (let ((?x567 (* 12 ?x566)))
 (let ((?x601 (* (- 6) ?x523)))
 (let ((?x598 (* (- 6) x00)))
 (let ((?x597 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x596 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x602 (+ ?x43 ?x596 ?x56 ?x44 ?x597 ?x598 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x601 ?x567)))
 (let (($x603 (= ?x602 0)))
 (let ((?x398 (* r00 r00)))
 (let ((?x399 (* 3 ?x398)))
 (let ((?x428 (* (- 1) s00)))
 (let (($x431 (= (+ s ?x428 (* (- 3) (* r r)) ?x399) 0)))
 (let (($x8006 (and $x431 $x603 $x849 $x1181 $x1475 (not (= ?x1158 0)))))
 (let ((?x2674 (+ 3 s ?x214)))
 (let ((?x1613 (+ x ?x377)))
 (let ((?x8085 (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)))
 (let ((?x2628 (+ (* 36 (* r00 r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* r00 s00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* s00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 r00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 24) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 6) (* x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 4 (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 15 (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 12 (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 24) (* r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 9 (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 54 (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 15) (* s00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 24 (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 3 (* ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 6 (* x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 6 (* ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 54 (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 9 (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 54) (* r00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 6) (* ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 36 (* r00 r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* 2 (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 6) (* s00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 54 (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 24 (* r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 24) (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 r00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 54) (* r00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 54) (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 36 (* r00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 9 (* ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 54) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 4) (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 3) (* ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* r00 s00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* s00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 54 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 15) (* s00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 6 (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 2 (* r00 s00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 4 (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* 24 (* r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 9) (* s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 9) (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 9) (* ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 54 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 24) (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 54 (* x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 4 (* r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 12 (* s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 3 (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 12) ?x8085))))
 (let ((?x7499 (* 108 ?x1443)))
 (let ((?x7958 (* (- 9) s)))
 (let ((?x1876 (* r00 r00 s00)))
 (let ((?x7277 (* (- 36) ?x1876)))
 (let ((?x137 (* 9 s00)))
 (let ((?x7264 (* 51 ?x688)))
 (let ((?x1807 (* r00 r00 s)))
 (let ((?x7453 (* 36 ?x1807)))
 (let ((?x7872 (* 16 ?x1281)))
 (let ((?x7841 (* (- 108) ?x902)))
 (let ((?x7662 (* (- 432) ?x979)))
 (let ((?x4825 (* 108 ?x619)))
 (let ((?x8011 (+ (* 216 (* r00 s00 x00)) ?x4825 (* (- 54) (* r00 s00)) (* 15 ?x642) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x7662 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x7841 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7872 (* (- 108) (* x s)) ?x7453 ?x7264 (* (- 108) (* r00 x)) ?x137 ?x7277 ?x7958 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x7499)))
 (let (($x7500 (= ?x8011 0)))
 (let ((?x6140 (* 15 ?x688)))
 (let ((?x6124 (* 36 ?x974)))
 (let ((?x6122 (* (- 6) ?x902)))
 (let ((?x1814 (* 54 ?x619)))
 (let ((?x7739 (+ (* 24 (* s r)) ?x1814 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x642) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x6122 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x7453 ?x6124 ?x6140 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x7277 (* 54 (* x00 r)) ?x7958 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x7442 (* 4 ?x688)))
 (let ((?x8025 (* 18 ?x619)))
 (let ((?x7538 (+ (* 9 (* s r)) ?x8025 (* (- 9) (* r00 s00)) (* (- 2) ?x642) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1807) ?x7442 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1876) (* 18 (* x00 r)) ?x596 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x7533 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x596 ?x597 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x598 ?x567)))
 (let (($x1555 (= (+ s00 ?x377 (* 3 (* r r)) (* (- 3) ?x398)) 0)))
 (let (($x2454 (and $x1555 (= ?x7533 0) (= ?x7538 0) (= ?x7739 0) $x7500 (not (= ?x2628 0)))))
 (rewrite (= $x2454 $x8006)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x412 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x2674 (+ 3 s ?x214)))
 (let ((?x377 (* (- 1) s)))
 (let ((?x1613 (+ x ?x377)))
 (let ((?x1482 (+ 1 r)))
 (let ((?x8085 (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)))
 (let ((?x8179 (+ (* (- 36) (* r00 r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* r00 s00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 4 (* s00 s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* s00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 r00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 24 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 6 (* x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 15) (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 12) (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 54 (* x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 24 (* r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 9) (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 54) (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 15 (* s00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 24) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 3) (* ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 6) (* x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 6) (* ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 54) (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 9) (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 54 (* r00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 6 (* ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 36) (* r00 r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 2) (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 6 (* s00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 36 (* r00 x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 54) (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 24) (* r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 24 (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 r00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 54 (* r00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 54 (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 36) (* r00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 9) (* ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 4 (* s00 s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 54 (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 4 (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* 3 (* ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* r00 s00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* s00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 54) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 15 (* s00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 6) (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 2) (* r00 s00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 4) (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 24) (* r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 9 (* s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 9 (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 9 (* ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 54) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 24 (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 54 (* x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 4) (* r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 12) (* s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 3) (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* 12 ?x8085))))
 (let ((?x1443 (* x00 x00)))
 (let ((?x7499 (* 108 ?x1443)))
 (let ((?x7958 (* (- 9) s)))
 (let ((?x1876 (* r00 r00 s00)))
 (let ((?x7277 (* (- 36) ?x1876)))
 (let ((?x137 (* 9 s00)))
 (let ((?x688 (* s00 s00)))
 (let ((?x7264 (* 51 ?x688)))
 (let ((?x1807 (* r00 r00 s)))
 (let ((?x7453 (* 36 ?x1807)))
 (let ((?x1281 (* s00 s00 s00)))
 (let ((?x7872 (* 16 ?x1281)))
 (let ((?x902 (* s00 x00)))
 (let ((?x7841 (* (- 108) ?x902)))
 (let ((?x979 (* r00 r00 r00 x00)))
 (let ((?x7662 (* (- 432) ?x979)))
 (let ((?x619 (* r00 x00)))
 (let ((?x4825 (* 108 ?x619)))
 (let ((?x8011 (+ (* 216 (* r00 s00 x00)) ?x4825 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x7662 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x7841 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7872 (* (- 108) (* x s)) ?x7453 ?x7264 (* (- 108) (* r00 x)) ?x137 ?x7277 ?x7958 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x7499)))
 (let (($x7500 (= ?x8011 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1084 (* (- 9) s00)))
 (let ((?x1013 (* (- 15) ?x688)))
 (let ((?x974 (* r00 r00 x00)))
 (let ((?x987 (* (- 36) ?x974)))
 (let ((?x903 (* 6 ?x902)))
 (let ((?x642 (* s s)))
 (let ((?x666 (* 3 ?x642)))
 (let ((?x648 (* (- 54) ?x619)))
 (let ((?x7798 (+ (* (- 24) (* s r)) ?x648 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x666 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x903 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1807) ?x987 ?x1013 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1084 (* 36 ?x1876) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x475 (* (- 3) s00)))
 (let ((?x701 (* (- 4) ?x688)))
 (let ((?x643 (* 2 ?x642)))
 (let ((?x633 (* (- 18) ?x619)))
 (let ((?x7539 (+ (* (- 9) (* s r)) ?x633 (* 9 (* r00 s00)) ?x643 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1807) ?x701 (* 18 (* r00 x)) ?x475 (* 6 ?x1876) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2857 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x475 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1555 (= (+ s00 ?x377 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1555 (= ?x2857 0) (= ?x7539 0) (= ?x7798 0) $x7500 (not (= ?x8179 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1617 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x2674 (+ 3 s ?x214)))
 (let ((?x377 (* (- 1) s)))
 (let ((?x1613 (+ x ?x377)))
 (let ((?x1482 (+ 1 r)))
 (let ((?x8085 (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)))
 (let ((?x2628 (+ (* 36 (* r00 r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* r00 s00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* s00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 r00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 24) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 6) (* x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 4 (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 15 (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 12 (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 24) (* r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 9 (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 54 (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 15) (* s00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 24 (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 3 (* ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 6 (* x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 6 (* ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 54 (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 9 (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 54) (* r00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 6) (* ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 36 (* r00 r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* 2 (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 6) (* s00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 54 (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 24 (* r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 24) (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 r00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 54) (* r00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 54) (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 36 (* r00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 9 (* ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 54) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 4) (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 3) (* ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* r00 s00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* s00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 54 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 15) (* s00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 6 (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 2 (* r00 s00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 4 (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* 24 (* r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 9) (* s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 9) (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 9) (* ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 54 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 24) (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 54 (* x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 4 (* r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 12 (* s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 3 (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 12) ?x8085))))
 (let ((?x1443 (* x00 x00)))
 (let ((?x7499 (* 108 ?x1443)))
 (let ((?x7958 (* (- 9) s)))
 (let ((?x1876 (* r00 r00 s00)))
 (let ((?x7277 (* (- 36) ?x1876)))
 (let ((?x137 (* 9 s00)))
 (let ((?x688 (* s00 s00)))
 (let ((?x7264 (* 51 ?x688)))
 (let ((?x1807 (* r00 r00 s)))
 (let ((?x7453 (* 36 ?x1807)))
 (let ((?x1281 (* s00 s00 s00)))
 (let ((?x7872 (* 16 ?x1281)))
 (let ((?x902 (* s00 x00)))
 (let ((?x7841 (* (- 108) ?x902)))
 (let ((?x979 (* r00 r00 r00 x00)))
 (let ((?x7662 (* (- 432) ?x979)))
 (let ((?x619 (* r00 x00)))
 (let ((?x4825 (* 108 ?x619)))
 (let ((?x8011 (+ (* 216 (* r00 s00 x00)) ?x4825 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x7662 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x7841 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7872 (* (- 108) (* x s)) ?x7453 ?x7264 (* (- 108) (* r00 x)) ?x137 ?x7277 ?x7958 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x7499)))
 (let (($x7500 (= ?x8011 0)))
 (let ((?x6140 (* 15 ?x688)))
 (let ((?x974 (* r00 r00 x00)))
 (let ((?x6124 (* 36 ?x974)))
 (let ((?x6122 (* (- 6) ?x902)))
 (let ((?x1814 (* 54 ?x619)))
 (let ((?x7739 (+ (* 24 (* s r)) ?x1814 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x6122 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x7453 ?x6124 ?x6140 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x7277 (* 54 (* x00 r)) ?x7958 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x596 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x7442 (* 4 ?x688)))
 (let ((?x8025 (* 18 ?x619)))
 (let ((?x7538 (+ (* 9 (* s r)) ?x8025 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1807) ?x7442 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1876) (* 18 (* x00 r)) ?x596 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x566 (* r00 r00 r00)))
 (let ((?x567 (* 12 ?x566)))
 (let ((?x598 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x597 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x7533 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x596 ?x597 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x598 ?x567)))
 (let (($x1555 (= (+ s00 ?x377 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2454 (and $x1555 (= ?x7533 0) (= ?x7538 0) (= ?x7739 0) $x7500 (not (= ?x2628 0)))))
 (let ((?x8179 (+ (* (- 36) (* r00 r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* r00 s00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 4 (* s00 s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* s00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 r00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 24 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 6 (* x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 15) (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 12) (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 54 (* x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 24 (* r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 9) (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 54) (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 15 (* s00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 24) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 3) (* ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 6) (* x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 6) (* ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 54) (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 9) (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 54 (* r00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 6 (* ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 36) (* r00 r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 2) (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 6 (* s00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 36 (* r00 x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 54) (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 24) (* r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 24 (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 r00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 54 (* r00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 54 (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 36) (* r00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 9) (* ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 4 (* s00 s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 54 (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 4 (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* 3 (* ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* r00 s00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* s00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 54) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 15 (* s00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 6) (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 2) (* r00 s00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 4) (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 24) (* r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 9 (* s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 9 (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 9 (* ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 54) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 24 (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 54 (* x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 4) (* r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 12) (* s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 3) (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* 12 ?x8085))))
 (let ((?x143 (* 9 s)))
 (let ((?x1084 (* (- 9) s00)))
 (let ((?x1013 (* (- 15) ?x688)))
 (let ((?x987 (* (- 36) ?x974)))
 (let ((?x903 (* 6 ?x902)))
 (let ((?x642 (* s s)))
 (let ((?x666 (* 3 ?x642)))
 (let ((?x648 (* (- 54) ?x619)))
 (let ((?x7798 (+ (* (- 24) (* s r)) ?x648 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x666 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x903 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1807) ?x987 ?x1013 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1084 (* 36 ?x1876) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x475 (* (- 3) s00)))
 (let ((?x701 (* (- 4) ?x688)))
 (let ((?x643 (* 2 ?x642)))
 (let ((?x633 (* (- 18) ?x619)))
 (let ((?x7539 (+ (* (- 9) (* s r)) ?x633 (* 9 (* r00 s00)) ?x643 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1807) ?x701 (* 18 (* r00 x)) ?x475 (* 6 ?x1876) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2857 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x475 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x566))))
 (let (($x1744 (and $x1555 (= ?x2857 0) (= ?x7539 0) (= ?x7798 0) $x7500 (not (= ?x8179 0)))))
 (rewrite (= $x1744 $x2454))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x374 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (- x s)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x219 (+ (* (- 36) ?x213 r00 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 2 ?x213 r00 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216 ?x216))))
 (let ((?x223 (+ (- ?x219 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216)) (* 4 ?x213 ?x213 ?x215 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x231 (+ (- ?x223 (* 6 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 x00)) (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 s00 ?x216) (* 36 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216 x00) (* 2 ?x213 r00 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 24 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 6 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x237 (- (- ?x231 (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216)) (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216))))
 (let ((?x239 (- (- ?x237 (* 15 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216)) (* 12 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x243 (- (+ ?x239 (* 54 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00)) (* 36 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x248 (- (+ ?x243 (* 24 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216)) (* 9 ?x213 ?x213 ?x213 ?x215 s00 ?x216))))
 (let ((?x251 (+ (- ?x248 (* 54 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216)) (* 15 ?x213 ?x215 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x259 (- (- ?x251 (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216)) (* 3 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x261 (- (- ?x259 (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 x00)) (* 6 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x263 (- (- ?x261 (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x216 x00)) (* 9 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x266 (+ ?x263 (* 54 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x271 (- (- ?x266 (* 36 ?x213 r00 r00 ?x215 ?x215 s00 ?x216 ?x216)) (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x272 (- ?x271 (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x276 (- (+ ?x272 (* 36 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216 x00)) (* 36 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x279 (+ ?x276 (* 6 ?x213 ?x213 ?x213 ?x215 s00 ?x216 x00) (* 36 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x283 (+ (- ?x279 (* 2 ?x213 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x216)) (* 36 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x287 (- (- ?x283 (* 54 ?x213 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 24 ?x213 r00 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x291 (+ ?x287 (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216) (* 24 ?x213 ?x213 ?x213 r00 ?x215 s00 ?x216))))
 (let ((?x295 (+ (- ?x291 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x216 x00)) (* 54 ?x213 r00 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x299 (+ (- ?x295 (* 6 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216))))
 (let ((?x301 (- ?x299 (* 36 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x303 (+ ?x301 (* 36 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x311 (+ (- ?x303 (* 9 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216)) (* 4 ?x213 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216 ?x216) (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216) (* 4 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216) (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216) (* 2 ?x213 r00 ?x215 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x317 (- (- ?x311 (* 6 ?x213 ?x215 ?x215 s00 ?x216 ?x216 x00)) (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x319 (- (- ?x317 (* 24 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 54 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x323 (+ ?x319 (* 6 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00) (* 15 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216 ?x216) (* 36 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x327 (- (- ?x323 (* 6 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216)) (* 2 ?x213 ?x213 ?x213 r00 ?x215 s00 s00 ?x216))))
 (let ((?x334 (- (+ ?x327 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 s00 ?x216)) (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x216 x00))))
 (let ((?x335 (- ?x334 (* 4 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x337 (- (- ?x335 (* 24 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 36 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x342 (+ ?x337 (* 6 ?x213 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 2 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216) (* 9 ?x213 ?x215 ?x215 s00 ?x216 ?x216) (* 6 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x349 (+ (- ?x342 (* 24 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216)) (* 9 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 24 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216) (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216) (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216))))
 (let ((?x353 (- (- ?x349 (* 54 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216)) (* 24 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x357 (- (+ ?x353 (* 24 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x216 x00))))
 (let ((?x361 (- (+ ?x357 (* 54 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 x00)) (* 4 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x366 (- (+ ?x361 (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216)) (* 12 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x369 (+ (- ?x366 (* 3 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 12 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x369 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1850 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x2674 (+ 3 s ?x214)))
 (let ((?x377 (* (- 1) s)))
 (let ((?x1613 (+ x ?x377)))
 (let ((?x1482 (+ 1 r)))
 (let ((?x8085 (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)))
 (let ((?x8179 (+ (* (- 36) (* r00 r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* r00 s00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 4 (* s00 s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* s00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 r00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 24 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 6 (* x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 4) (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 15) (* s00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 12) (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 54 (* x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 24 (* r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 9) (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 54) (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 15 (* s00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 24) (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 3) (* ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 6) (* x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 6) (* ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 54) (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 9) (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 54 (* r00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 6 (* ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 36) (* r00 r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 2) (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 36) (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 6 (* s00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 2) (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 36 (* r00 x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 54) (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 24) (* r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* s00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 24 (* r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 r00 x00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 54 (* r00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 54 (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 36) (* r00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 9) (* ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 4 (* s00 s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 54 (* ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 4 (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* 3 (* ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674 ?x2674)) (* 2 (* r00 s00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 6) (* s00 x00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 2) (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 54) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* x00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 15 (* s00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 6) (* s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 2) (* r00 s00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 36 (* r00 r00 s00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 36) (* r00 x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* (- 4) (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 24) (* r00 s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 36) (* r00 ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674)) (* 2 (* r00 s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 9 (* s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 6 (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* 9 (* s00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 24 (* ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 r00 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* 9 (* ?x1482 ?x1482 ?x1482 ?x1613 ?x2674 ?x2674)) (* (- 54) (* ?x1482 ?x1482 ?x1613 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 24) (* s00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* 24 (* r00 ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* (- 54) (* x00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x2674)) (* 54 (* x00 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674)) (* (- 4) (* r00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674)) (* 36 (* r00 ?x1482 ?x1482 ?x1482 ?x1482 ?x1613 ?x1613 ?x2674)) (* (- 12) (* s00 ?x1482 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674)) (* (- 3) (* ?x1482 ?x1613 ?x1613 ?x1613 ?x2674 ?x2674 ?x2674 ?x2674 ?x2674)) (* 12 ?x8085))))
 (let ((?x1443 (* x00 x00)))
 (let ((?x7499 (* 108 ?x1443)))
 (let ((?x7958 (* (- 9) s)))
 (let ((?x1876 (* r00 r00 s00)))
 (let ((?x7277 (* (- 36) ?x1876)))
 (let ((?x137 (* 9 s00)))
 (let ((?x688 (* s00 s00)))
 (let ((?x7264 (* 51 ?x688)))
 (let ((?x1807 (* r00 r00 s)))
 (let ((?x7453 (* 36 ?x1807)))
 (let ((?x1281 (* s00 s00 s00)))
 (let ((?x7872 (* 16 ?x1281)))
 (let ((?x902 (* s00 x00)))
 (let ((?x7841 (* (- 108) ?x902)))
 (let ((?x979 (* r00 r00 r00 x00)))
 (let ((?x7662 (* (- 432) ?x979)))
 (let ((?x619 (* r00 x00)))
 (let ((?x4825 (* 108 ?x619)))
 (let ((?x8011 (+ (* 216 (* r00 s00 x00)) ?x4825 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x7662 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x7841 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7872 (* (- 108) (* x s)) ?x7453 ?x7264 (* (- 108) (* r00 x)) ?x137 ?x7277 ?x7958 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x7499)))
 (let (($x7500 (= ?x8011 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1084 (* (- 9) s00)))
 (let ((?x1013 (* (- 15) ?x688)))
 (let ((?x974 (* r00 r00 x00)))
 (let ((?x987 (* (- 36) ?x974)))
 (let ((?x903 (* 6 ?x902)))
 (let ((?x642 (* s s)))
 (let ((?x666 (* 3 ?x642)))
 (let ((?x648 (* (- 54) ?x619)))
 (let ((?x7798 (+ (* (- 24) (* s r)) ?x648 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x666 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x903 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1807) ?x987 ?x1013 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1084 (* 36 ?x1876) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x475 (* (- 3) s00)))
 (let ((?x701 (* (- 4) ?x688)))
 (let ((?x643 (* 2 ?x642)))
 (let ((?x633 (* (- 18) ?x619)))
 (let ((?x7539 (+ (* (- 9) (* s r)) ?x633 (* 9 (* r00 s00)) ?x643 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1807) ?x701 (* 18 (* r00 x)) ?x475 (* 6 ?x1876) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2857 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x475 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1555 (= (+ s00 ?x377 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1744 (and $x1555 (= ?x2857 0) (= ?x7539 0) (= ?x7798 0) $x7500 (not (= ?x8179 0)))))
 (let ((?x216 (- x s)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x219 (+ (* (- 36) ?x213 r00 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 2 ?x213 r00 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216 ?x216))))
 (let ((?x223 (+ (- ?x219 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216)) (* 4 ?x213 ?x213 ?x215 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x231 (+ (- ?x223 (* 6 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 x00)) (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 s00 ?x216) (* 36 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216 x00) (* 2 ?x213 r00 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 24 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 6 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x237 (- (- ?x231 (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216)) (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216))))
 (let ((?x239 (- (- ?x237 (* 15 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216)) (* 12 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x243 (- (+ ?x239 (* 54 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00)) (* 36 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x248 (- (+ ?x243 (* 24 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216)) (* 9 ?x213 ?x213 ?x213 ?x215 s00 ?x216))))
 (let ((?x251 (+ (- ?x248 (* 54 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216)) (* 15 ?x213 ?x215 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x259 (- (- ?x251 (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216)) (* 3 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x261 (- (- ?x259 (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 x00)) (* 6 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x263 (- (- ?x261 (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x216 x00)) (* 9 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x266 (+ ?x263 (* 54 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x271 (- (- ?x266 (* 36 ?x213 r00 r00 ?x215 ?x215 s00 ?x216 ?x216)) (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x272 (- ?x271 (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x276 (- (+ ?x272 (* 36 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216 x00)) (* 36 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x279 (+ ?x276 (* 6 ?x213 ?x213 ?x213 ?x215 s00 ?x216 x00) (* 36 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x283 (+ (- ?x279 (* 2 ?x213 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x216)) (* 36 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x287 (- (- ?x283 (* 54 ?x213 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 24 ?x213 r00 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x291 (+ ?x287 (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216) (* 24 ?x213 ?x213 ?x213 r00 ?x215 s00 ?x216))))
 (let ((?x295 (+ (- ?x291 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x216 x00)) (* 54 ?x213 r00 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x299 (+ (- ?x295 (* 6 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216))))
 (let ((?x301 (- ?x299 (* 36 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x303 (+ ?x301 (* 36 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x311 (+ (- ?x303 (* 9 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216)) (* 4 ?x213 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216 ?x216) (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216) (* 4 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216) (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216) (* 2 ?x213 r00 ?x215 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x317 (- (- ?x311 (* 6 ?x213 ?x215 ?x215 s00 ?x216 ?x216 x00)) (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x319 (- (- ?x317 (* 24 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 54 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x323 (+ ?x319 (* 6 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00) (* 15 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216 ?x216) (* 36 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x327 (- (- ?x323 (* 6 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216)) (* 2 ?x213 ?x213 ?x213 r00 ?x215 s00 s00 ?x216))))
 (let ((?x334 (- (+ ?x327 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 s00 ?x216)) (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x216 x00))))
 (let ((?x335 (- ?x334 (* 4 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x337 (- (- ?x335 (* 24 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 36 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x342 (+ ?x337 (* 6 ?x213 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 2 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216) (* 9 ?x213 ?x215 ?x215 s00 ?x216 ?x216) (* 6 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x349 (+ (- ?x342 (* 24 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216)) (* 9 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 24 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216) (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216) (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216))))
 (let ((?x353 (- (- ?x349 (* 54 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216)) (* 24 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x357 (- (+ ?x353 (* 24 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x216 x00))))
 (let ((?x361 (- (+ ?x357 (* 54 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 x00)) (* 4 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x366 (- (+ ?x361 (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216)) (* 12 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x369 (+ (- ?x366 (* 3 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 12 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x373 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x369 0))))))
 (rewrite (= $x373 $x1744))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x375 (asserted $x374)))
 (let ((@x8022 (mp (mp @x375 (quant-intro (proof-bind ?x1850) (= $x374 $x412)) $x412) (rewrite (= $x412 $x412)) $x412)))
 (let ((@x7228 (mp (mp @x8022 (quant-intro (proof-bind ?x1617) (= $x412 $x2030)) $x2030) (quant-intro (proof-bind ?x7201) (= $x2030 $x7709)) $x7709)))
 (let ((@x2281 (mp (mp~ @x7228 (sk (~ $x7709 $x3750)) $x3750) (rewrite (= $x3750 $x4778)) $x4778)))
 (let ((@x2283 (and-elim @x2281 $x1970)))
 (let ((@x5676 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1970) $x6601)) @x2283 $x6601)))
 (let (($x2081 (>= ?x2338 0)))
 (let ((@x940 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1970) $x2081)) @x2283 $x2081)))
 (let (($x4860 (<= ?x3147 0)))
 (let ((@x4712 (and-elim @x2281 $x4276)))
 (let ((@x5507 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4276) $x4860)) @x4712 $x4860)))
 (let (($x4833 (>= ?x3147 0)))
 (let ((@x5165 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4276) $x4833)) @x4712 $x4833)))
 (let (($x3187 (<= ?x7249 0)))
 (let ((@x4713 (and-elim @x2281 $x995)))
 (let ((@x4991 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x995) $x3187)) @x4713 $x3187)))
 (let (($x4862 (>= ?x7249 0)))
 (let ((@x6165 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x995) $x4862)) @x4713 $x4862)))
 (let (($x4819 (<= ?x5645 0)))
 (let ((@x4158 (and-elim @x2281 $x5652)))
 (let ((@x3386 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5652) $x4819)) @x4158 $x4819)))
 (let (($x4818 (>= ?x5645 0)))
 (let ((@x8965 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5652) $x4818)) @x4158 $x4818)))
 (let (($x4861 (<= ?x4710 0)))
 (let ((@x4231 (and-elim @x2281 $x4711)))
 (let ((@x6353 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4711) $x4861)) @x4231 $x4861)))
 (let (($x4832 (>= ?x4710 0)))
 (let ((@x8078 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4711) $x4832)) @x4231 $x4832)))
 (let (($x7096 (not (<= ?x2272 0))))
 (let (($x6326 (>= ?x2272 0)))
 (let ((@x5235 ((_ th-lemma arith) (hypothesis (not $x6326)) @x940 @x5676 @x6165 @x4991 @x6165 @x4991 @x8078 @x6353 @x8078 @x6353 @x940 @x5676 @x6165 @x4991 @x8078 @x6353 @x8965 @x3386 @x940 @x5676 @x6165 @x4991 @x5165 @x5507 @x940 @x5676 false)))
 (let ((@x5737 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2276 $x7096 (not $x6326))) (and-elim @x2281 $x1981) (or $x7096 (not $x6326)))))
 ((_ th-lemma arith) (unit-resolution @x5737 (lemma @x5235 $x6326) $x7096) @x940 @x5676 @x6165 @x4991 @x6165 @x4991 @x8078 @x6353 @x8078 @x6353 @x940 @x5676 @x6165 @x4991 @x8078 @x6353 @x8965 @x3386 @x940 @x5676 @x6165 @x4991 @x5165 @x5507 @x940 @x5676 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        31
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2592
 :arith-nonlinear-bounds    24
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 448
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                6.07
 :memory                    4.21
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                29893931
 :num-checks                1
 :propagations              12
 :rlimit-count              170805
 :time                      0.17
 :total-time                0.21)
