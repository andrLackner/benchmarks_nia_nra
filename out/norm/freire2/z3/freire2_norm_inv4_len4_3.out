unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1587 (* (- 1) s!1)))
 (let ((?x446 (* r00 r00)))
 (let ((?x1894 (* (- 3) ?x446)))
 (let ((?x4384 (+ s00 ?x1894 ?x1587 (* 3 (* r!2 r!2)))))
 (let (($x2129 (<= ?x4384 0)))
 (let (($x4186 (= ?x4384 0)))
 (let ((?x1982 (* 6 r!2)))
 (let ((?x4106 (+ 3 s!1 ?x1982)))
 (let ((?x4263 (+ x!0 ?x1587)))
 (let ((?x2014 (+ 1 r!2)))
 (let ((?x1859 (* 36 (* r00 r00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106))))
 (let ((?x2712 (* 54 (* r00 x00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x2307 (* (- 36) (* r00 r00 s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x1394 (* 36 (* r00 x00 ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x2051 (* (- 12) (* s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106))))
 (let ((?x1556 (* (- 54) (* ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x1566 (* 36 (* r00 r00 x00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x820 (* (- 24) (* s00 ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x812 (* (- 6) (* s00 x00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x623 (* 2 (* r00 s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106))))
 (let ((?x2074 (* 15 (* s00 s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x1847 (* 2 (* r00 s00 s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x1459 (* 4 (* s00 s00 ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x4201 (* 24 (* ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106))))
 (let ((?x2276 (* s!1 s!1 s!1)))
 (let ((?x3294 (* 6 (* s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x2040 (* (- 24) (* r00 s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x2214 (* (- 36) (* r00 r00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x2024 (* (- 54) (* r00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x3005 (* (- 2) (* ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106 ?x4106))))
 (let ((?x3001 (* (- 6) (* ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106))))
 (let ((?x3006 (* 24 (* r00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106))))
 (let ((?x1156 (* (- 36) (* r00 ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x2392 (* (- 3) (* ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106 ?x4106))))
 (let ((?x3119 (* 6 (* x00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106))))
 (let ((?x3092 (* (- 4) (* r00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106 ?x4106))))
 (let ((?x2785 (* 54 (* x00 ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106))))
 (let ((?x4009 (* (- 2) (* s00 ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106))))
 (let ((?x1827 (+ (* 54 (* r00 x00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) ?x4009 (* 72 (* x!0 x!0)) (* (- 132) (* x!0 s!1 r!2)) (* (- 72) (* s!1 r!2 r!2 r!2)) (* (- 12) (* s00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) (* 36 (* r00 r00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) (* 15 (* s00 s00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) (* 6 (* s00 x00 x!0)) (* 36 (* s00 r00 r00 x!0)) (* 144 (* r00 x!0 r!2 r!2)) (* 54 (* r00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4106 ?x4106)) (* (- 6) (* s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4106 ?x4106)) ?x2785 (* (- 90) (* x00 x!0 r!2)) (* 2 (* r00 s00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) ?x3092 (* 6 (* ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) (* 4 (* s00 s00 s!1 r!2)) (* 36 (* r00 x!0 x!0 r!2)) (* (- 36) (* s00 r00 r00 s!1)) (* (- 18) (* s00 r00 s!1)) (* 72 (* x!0 r!2 r!2 r!2)) ?x3119 (* (- 3) (* ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106 ?x4106)) ?x2392 (* (- 129) (* x!0 s!1)) (* (- 36) (* r00 r00 x00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106)) (* (- 2) (* s00 s00 r00 x!0)) (* 4 (* s00 s00 ?x2014 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) (* 2 (* s00 x!0 s!1 r!2)) (* 90 (* r00 s!1 s!1)) (* 12 (* s00 r00 s!1 r!2)) (* (- 36) (* s!1 r!2)) (* 57 (* s00 x!0)) ?x1156 (* 6 (* x!0 x!0 s!1)) (* 2 (* s00 ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106 ?x4106)) (* 36 (* r00 r00 x!0 x!0)) ?x3006 (* (- 24) (* s!1 s!1 r!2 r!2)) (* 36 (* r00 x00 ?x2014 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) (* (- 9) (* s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106)) ?x3001 (* (- 54) (* r00 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) ?x3005 (* 90 (* r00 x!0 x!0)) (* (- 6) (* s00 x00 s!1)) (* 26 (* s00 x!0 s!1)) (* 24 (* x!0 s!1 r!2 r!2)) ?x2024 (* 42 (* s!1 s!1 r!2)) (* 36 (* r00 s!1)) (* 4 (* r00 x!0 s!1 s!1)) (* 18 (* s00 r00 x!0)) (* 72 (* x00 s!1)) ?x2214 (* (- 36) (* r00 r00 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) ?x2040 ?x3294 ?x2276 (* (- 57) (* s00 s!1)) (* (- 36) (* r00 x!0)) (* (- 4) (* s00 s00 x!0 r!2)) (* 36 (* x!0 r!2)) (* 2 (* x!0 s!1 s!1 r!2)) (* 2 (* ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) (* (- 6) (* x00 x!0 s!1)) (* 108 (* r00 r00 s!1)) (* (- 144) (* r00 s!1 r!2 r!2)) (* (- 24) (* r00 s00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) ?x4201 ?x1459 (* 57 (* s!1 s!1)) (* 9 (* ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106 ?x4106)) (* (- 24) (* ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106 ?x4106)) (* (- 2) (* ?x2014 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106 ?x4106)) (* 6 (* x00 s!1 s!1)) (* (- 180) (* r00 x!0 s!1)) (* 6 (* s00 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) (* 12 (* s00 x!0 r!2 r!2)) (* 9 (* s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) (* 36 (* r00 r00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4106 ?x4106)) (* 216 (* r00 r00 s!1 r!2)) (* (- 54) (* r00 x00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106)) (* 2 (* s00 r00 s!1 s!1)) (* (- 114) (* s00 s!1 r!2)) (* (- 2) (* s!1 s!1 s!1 r!2)) (* 36 (* r00 r00 x00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) (* (- 36) (* r00 r00 x00 x!0)) (* 12 (* s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106 ?x4106)) (* 6 (* s00 x00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106)) (* (- 9) (* ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) (* 54 (* ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4106 ?x4106)) (* (- 108) (* s!1 r!2 r!2)) (* (- 6) (* ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) (* 72 (* r00 r00 s!1 s!1)) (* (- 72) (* x00 x!0)) (* (- 108) (* r00 r00 x!0)) (* 3 (* ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) (* (- 108) (* r00 r00 x!0 s!1)) ?x1847 ?x2074 (* (- 54) (* ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) (* 36 (* r00 r00 s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106)) (* (- 6) (* s00 x00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) ?x623 (* (- 6) (* x00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106 ?x4106)) (* 36 (* r00 r00 x00 s!1)) (* (- 4) (* r00 s!1 s!1 s!1)) (* (- 12) (* s00 s!1 r!2 r!2)) (* (- 4) (* s00 s00 ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106)) (* 6 (* x00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) (* (- 36) (* r00 r00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106 ?x4106)) (* 2 (* s00 s00 r00 s!1)) (* (- 216) (* r00 r00 x!0 r!2)) (* (- 36) (* r00 ?x2014 ?x4263 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) (* 2 (* r00 s00 s00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) (* (- 24) (* r00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106 ?x4106)) (* (- 36) (* r00 x00 ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106)) (* 90 (* x00 s!1 r!2)) (* (- 20) (* s00 s!1 s!1)) (* (- 9) (* ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) (* 24 (* s00 ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106)) (* (- 24) (* s00 ?x2014 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) (* (- 2) (* r00 s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106 ?x4106)) (* (- 15) (* s00 s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106)) ?x812 ?x820 (* (- 2) (* r00 s00 s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106)) (* (- 19) (* s00 s00 x!0)) (* 24 (* ?x2014 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) (* 19 (* s00 s00 s!1)) ?x1566 ?x1556 (* (- 24) (* r00 x!0 s!1 r!2)) (* (- 7) (* x!0 s!1 s!1)) (* 36 (* r00 ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4263 ?x4106 ?x4106)) ?x2051 (* 90 (* x!0 x!0 r!2)) ?x1394 (* (- 12) (* r00 s!1 s!1 r!2)) (* (- 36) (* r00 x00 x!0 r!2)) (* (- 4) (* r00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106 ?x4106)) (* 24 (* r00 s00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106)) (* (- 2) (* s00 ?x2014 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) (* 108 (* x!0 r!2 r!2)) ?x2307 (* 114 (* s00 x!0 r!2)) (* 54 (* x00 ?x2014 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) (* (- 90) (* r00 x00 x!0)) (* (- 6) (* s00 x!0 x!0)) (* (- 2) (* s00 s!1 s!1 r!2)) (* 24 (* r00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) (* 90 (* r00 x00 s!1)) (* (- 12) (* s00 r00 x!0 r!2)) (* (- 2) (* s00 r00 x!0 s!1)) (* 4 (* r00 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106 ?x4106 ?x4106)) (* (- 54) (* x00 ?x2014 ?x2014 ?x2014 ?x2014 ?x4263 ?x4106 ?x4106)) (* 36 (* r00 x00 s!1 r!2)) (* 9 (* s00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)) ?x2712 ?x1859 (* (- 36) (* r00 r00 s00 ?x4263 ?x4263 ?x4106 ?x4106 ?x4106)))))
 (let (($x1961 (= ?x1827 0)))
 (let (($x1182 (not $x1961)))
 (let ((?x1152 (* (- 9) s!1)))
 (let ((?x2496 (* r00 r00 s!1)))
 (let ((?x1148 (* 36 ?x2496)))
 (let ((?x1491 (* x00 x00)))
 (let ((?x4052 (* 108 ?x1491)))
 (let ((?x1329 (* s00 s00 s00)))
 (let ((?x4566 (* 16 ?x1329)))
 (let ((?x1027 (* r00 r00 r00 x00)))
 (let ((?x3165 (* (- 432) ?x1027)))
 (let ((?x950 (* s00 x00)))
 (let ((?x1604 (* (- 108) ?x950)))
 (let ((?x792 (* s00 r00 r00)))
 (let ((?x1952 (* (- 36) ?x792)))
 (let ((?x736 (* s00 s00)))
 (let ((?x803 (* 51 ?x736)))
 (let ((?x667 (* r00 x00)))
 (let ((?x2378 (* 108 ?x667)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4519 (+ ?x137 (* (- 54) (* s00 r00)) (* 108 (* x!0 x!0)) (* 216 (* s00 r00 x00)) ?x2378 ?x803 ?x1952 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x1604 ?x3165 (* 216 (* s00 r00 r00 r00)) ?x4566 (* 108 (* s00 r00 s!1)) (* (- 108) (* x!0 s!1)) ?x4052 (* 108 (* s00 x!0)) (* (- 216) (* r00 r00 r00 s!1)) (* 54 (* r00 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 108 (* x00 s!1)) (* (- 4) ?x2276) (* (- 66) (* s00 s!1)) (* (- 108) (* r00 x!0)) ?x1148 (* 15 (* s!1 s!1)) ?x1152 (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* (- 12) (* s00 s!1 s!1)))))
 (let (($x4516 (= ?x4519 0)))
 (let ((?x1022 (* r00 r00 x00)))
 (let ((?x3301 (* 36 ?x1022)))
 (let ((?x891 (* (- 6) ?x950)))
 (let ((?x3613 (* 15 ?x736)))
 (let ((?x4693 (* 54 ?x667)))
 (let ((?x1154 (+ ?x137 (* (- 24) (* s00 r00)) ?x4693 ?x3613 ?x1952 (* 2 (* s00 s00 r00)) ?x891 (* 4 (* s00 s00 r!2)) ?x3301 (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 x!0 r!2)) (* 2 (* s00 r00 s!1)) (* (- 6) (* x!0 s!1)) (* (- 4) (* r00 s!1 s!1)) (* 24 (* s!1 r!2)) (* 6 (* s00 x!0)) (* (- 2) (* s!1 s!1 r!2)) (* 24 (* r00 s!1)) (* 6 (* x00 s!1)) (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) (* (- 54) (* r00 x!0)) (* (- 54) (* x!0 r!2)) ?x1148 (* (- 3) (* s!1 s!1)) (* (- 24) (* s00 r!2)) ?x1152 (* (- 2) (* s00 s!1 r!2)) (* (- 36) (* r00 r00 x!0)))))
 (let (($x1155 (= ?x1154 0)))
 (let ((?x3041 (* (- 3) s!1)))
 (let ((?x3508 (* 4 ?x736)))
 (let ((?x1079 (* 18 ?x667)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1781 (+ ?x44 (* (- 6) (* r00 s!1 r!2)) (* (- 9) (* s00 r00)) ?x1079 ?x3508 (* (- 6) ?x792) (* 9 (* s!1 r!2)) (* 9 (* r00 s!1)) (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* (- 18) (* r00 x!0)) (* (- 18) (* x!0 r!2)) (* 6 ?x2496) (* 6 (* s00 r00 r!2)) (* (- 2) (* s!1 s!1)) (* (- 9) (* s00 r!2)) ?x3041)))
 (let (($x1267 (= ?x1781 0)))
 (let ((?x3047 (* 3 r!2)))
 (let ((?x3046 (* 6 x!0)))
 (let ((?x614 (* r00 r00 r00)))
 (let ((?x615 (* 12 ?x614)))
 (let ((?x571 (* s00 r00)))
 (let ((?x649 (* (- 6) ?x571)))
 (let ((?x646 (* (- 6) x00)))
 (let ((?x645 (* (- 3) r00)))
 (let ((?x522 (+ ?x44 ?x645 ?x646 ?x649 ?x615 (* 2 (* s!1 r!2)) ?x3046 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x3041 ?x3047)))
 (let (($x546 (= ?x522 0)))
 (let (($x4098 (and $x4186 $x546 $x1267 $x1155 $x4516 $x1182)))
 (let ((?x2016 (+ 3 ?x1982 s!1)))
 (let ((?x1595 (+ ?x1587 x!0)))
 (let ((?x2031 (* 2 (* s00 ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016))))
 (let ((?x3327 (* 24 (* r00 s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x1452 (* (- 24) (* r00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016))))
 (let ((?x4102 (* 54 (* r00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x1251 (* (- 4) (* s00 s00 ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x3421 (* (- 6) (* s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x3236 (* (- 2) (* r00 s00 s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x3477 (* 36 (* r00 r00 s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x3457 (* 6 (* ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016))))
 (let ((?x1778 (* 24 (* s00 ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x4392 (* (- 6) (* x00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016))))
 (let ((?x4351 (* (- 24) (* ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016))))
 (let ((?x4235 (* (- 2) (* r00 s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016))))
 (let ((?x1200 (* 36 (* r00 ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x1282 (* 12 (* s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016))))
 (let ((?x1279 (* (- 54) (* r00 x00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x962 (* 3 (* ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016 ?x2016))))
 (let ((?x1805 (* (- 54) (* x00 ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x1696 (* (- 36) (* r00 x00 ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x2862 (* 2 (* ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016 ?x2016))))
 (let ((?x1345 (* 6 (* s00 x00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x4049 (* 4 (* r00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016 ?x2016))))
 (let ((?x3701 (* (- 15) (* s00 s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x3558 (* (- 36) (* r00 r00 x00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x788 (* 54 (* ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x1280 (* 36 (* r00 r00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016))))
 (let ((?x2278 (* (- 36) (* r00 r00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016))))
 (let ((?x856 (+ (* 2 (* r00 s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016 ?x2016)) (* (- 24) (* s00 ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016)) (* (- 3) (* ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) (* 36 (* r!2 s!1)) (* 36 (* r00 r00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016 ?x2016)) (* 6 (* x00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016 ?x2016)) (* 36 (* r00 x00 ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016)) ?x2278 ?x1280 (* (- 2) (* r00 s00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) (* 4 (* r00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016 ?x2016)) (* (- 57) (* s!1 s!1)) (* (- 36) (* r!2 x!0)) (* (- 108) (* s!1 r00 r00)) (* (- 57) (* x!0 s00)) (* 36 (* x!0 r00)) (* (- 90) (* s!1 s!1 r00)) (* 57 (* s!1 s00)) (* (- 6) (* x00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) (* (- 36) (* s!1 r00)) ?x788 (* (- 72) (* s!1 x00)) ?x3558 (* 2 (* r00 s00 s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016)) (* 18 (* s!1 s00 r00)) (* (- 1) ?x2276) (* (- 42) (* r!2 s!1 s!1)) (* 129 (* s!1 x!0)) (* (- 72) (* x!0 x!0)) (* 114 (* r!2 s!1 s00)) (* 20 (* s!1 s!1 s00)) ?x3701 (* 24 (* s00 ?x2014 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) ?x4049 (* (- 2) (* s00 ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016 ?x2016)) (* 108 (* x!0 r00 r00)) (* (- 54) (* r00 x00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* 12 (* r!2 s!1 s!1 r00)) (* 6 (* ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) (* (- 18) (* x!0 s00 r00)) (* (- 36) (* r00 r00 x00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* (- 72) (* s!1 s!1 r00 r00)) (* (- 15) (* s00 s00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) ?x1345 (* 24 (* r00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016 ?x2016)) (* 9 (* ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) (* (- 90) (* x!0 x!0 r00)) (* (- 36) (* r!2 x!0 x!0 r00)) (* 72 (* x!0 x00)) (* 7 (* s!1 s!1 x!0)) (* 54 (* r00 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) ?x2862 (* 12 (* s00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) (* 132 (* r!2 s!1 x!0)) (* (- 54) (* ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x2016 ?x2016)) (* (- 4) (* s!1 s!1 x!0 r00)) (* 4 (* s!1 s!1 s!1 r00)) (* (- 90) (* r!2 s!1 x00)) ?x1696 (* 24 (* ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016 ?x2016)) (* (- 6) (* s00 x00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016)) (* 90 (* r!2 x!0 x00)) (* 6 (* s!1 s00 x00)) ?x1805 (* (- 36) (* r00 ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x2016 ?x2016)) ?x962 (* 36 (* r00 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* 36 (* r00 r00 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* 24 (* r!2 s!1 x!0 r00)) (* (- 36) (* s!1 r00 r00 x00)) (* 36 (* x!0 r00 r00 x00)) ?x1279 ?x1282 ?x1200 (* (- 36) (* r00 r00 s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016)) (* (- 6) (* s00 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* 24 (* r00 s00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* (- 19) (* s!1 s00 s00)) (* 19 (* x!0 s00 s00)) (* (- 24) (* ?x2014 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) (* (- 144) (* r!2 r!2 x!0 r00)) (* (- 12) (* r!2 r!2 x!0 s00)) (* (- 54) (* r00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x2016 ?x2016)) (* (- 24) (* r00 s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016)) (* 4 (* s00 s00 ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016)) ?x4235 (* 54 (* ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* 6 (* s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x2016 ?x2016)) (* (- 9) (* ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016 ?x2016)) (* (- 6) (* ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* (- 2) (* ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) ?x4351 (* 108 (* r!2 r!2 s!1)) (* (- 108) (* r!2 r!2 x!0)) (* (- 2) (* r00 s00 s00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* 2 (* s00 ?x2014 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) (* (- 26) (* s!1 x!0 s00)) (* (- 36) (* r00 r00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) (* (- 90) (* r!2 x!0 x!0)) (* 12 (* r!2 r!2 s!1 s00)) (* 6 (* s!1 x!0 x00)) (* (- 36) (* r00 r00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x2016 ?x2016)) (* 6 (* x!0 x!0 s00)) (* 2 (* ?x2014 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016 ?x2016)) (* (- 6) (* s!1 s!1 x00)) (* (- 36) (* x!0 x!0 r00 r00)) (* 54 (* r00 x00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016)) (* (- 4) (* s00 s00 ?x2014 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* 2 (* s!1 x!0 s00 r00)) (* 36 (* r00 r00 s00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* 12 (* r!2 x!0 s00 r00)) ?x4392 (* 3 (* ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016 ?x2016)) (* (- 12) (* r!2 s!1 s00 r00)) (* (- 4) (* r!2 s!1 s00 s00)) (* (- 2) (* s!1 s!1 s00 r00)) ?x1778 (* (- 114) (* r!2 x!0 s00)) (* (- 6) (* s!1 x!0 x!0)) (* 9 (* ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) (* 15 (* s00 s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016)) ?x3457 ?x3477 (* (- 6) (* x!0 s00 x00)) (* (- 54) (* x00 ?x2014 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* 180 (* s!1 x!0 r00)) (* 36 (* r00 r00 x00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016)) (* 2 (* x!0 s00 s00 r00)) (* (- 2) (* s!1 s00 s00 r00)) (* (- 9) (* s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) ?x3236 (* 6 (* s00 x00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) ?x3421 (* (- 90) (* s!1 r00 x00)) (* 90 (* x!0 r00 x00)) ?x1251 ?x4102 (* (- 2) (* r!2 s!1 x!0 s00)) (* 36 (* s!1 s00 r00 r00)) (* (- 36) (* x!0 s00 r00 r00)) (* 2 (* r!2 s!1 s!1 s00)) (* (- 24) (* r00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) (* (- 9) (* s00 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* (- 24) (* r!2 r!2 s!1 x!0)) (* (- 12) (* s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016 ?x2016)) (* 72 (* r!2 r!2 r!2 s!1)) (* (- 72) (* r!2 r!2 r!2 x!0)) (* 4 (* r!2 x!0 s00 s00)) (* 24 (* r!2 r!2 s!1 s!1)) ?x1452 ?x3327 (* 108 (* s!1 x!0 r00 r00)) (* (- 216) (* r!2 s!1 r00 r00)) (* 2 (* r!2 s!1 s!1 s!1)) (* 54 (* x00 ?x2014 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016)) (* (- 36) (* r!2 s!1 r00 x00)) (* 36 (* r!2 x!0 r00 x00)) (* 216 (* r!2 x!0 r00 r00)) (* 144 (* r!2 r!2 s!1 r00)) (* (- 36) (* r00 x00 ?x2014 ?x1595 ?x1595 ?x2016 ?x2016 ?x2016)) (* 9 (* s00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016)) ?x2031 (* (- 4) (* r00 ?x2014 ?x2014 ?x2014 ?x1595 ?x2016 ?x2016 ?x2016 ?x2016)) (* (- 2) (* r!2 s!1 s!1 x!0)))))
 (let ((?x1521 (* (- 108) ?x1491)))
 (let ((?x1520 (* (- 16) ?x1329)))
 (let ((?x1201 (* s00 r00 r00 r00)))
 (let ((?x1516 (* (- 216) ?x1201)))
 (let ((?x1028 (* 432 ?x1027)))
 (let ((?x1274 (* 108 ?x950)))
 (let ((?x876 (* s00 s00 r00 r00)))
 (let ((?x877 (* 36 ?x876)))
 (let ((?x813 (* s00 s00 r00)))
 (let ((?x1157 (* 108 ?x813)))
 (let ((?x1145 (* 36 ?x792)))
 (let ((?x1510 (* (- 51) ?x736)))
 (let ((?x2891 (* s!1 r00 r00)))
 (let ((?x3866 (* (- 36) ?x2891)))
 (let ((?x1507 (* (- 108) ?x667)))
 (let ((?x658 (* s00 r00 x00)))
 (let ((?x1506 (* (- 216) ?x658)))
 (let ((?x665 (* 54 ?x571)))
 (let ((?x1132 (* (- 9) s00)))
 (let ((?x2188 (* 9 s!1)))
 (let ((?x463 (+ ?x2188 ?x1132 ?x665 ?x1506 ?x1507 (* (- 15) (* s!1 s!1)) ?x3866 ?x1510 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1145 ?x1157 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x877 (* (- 108) (* s!1 s00 r00)) (* 4 ?x2276) ?x1274 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x1028 (* 12 (* s!1 s!1 s00)) ?x1516 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1520 (* 216 (* x!0 x00)) ?x1521)))
 (let ((?x1035 (* (- 36) ?x1022)))
 (let ((?x951 (* 6 ?x950)))
 (let ((?x841 (* (- 2) ?x813)))
 (let ((?x1061 (* (- 15) ?x736)))
 (let ((?x696 (* (- 54) ?x667)))
 (let ((?x709 (* 24 ?x571)))
 (let ((?x613 (+ ?x2188 ?x1132 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x709 ?x696 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x3866 ?x1061 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1145 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x841 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x951 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x1035 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x749 (* (- 4) ?x736)))
 (let ((?x681 (* (- 18) ?x667)))
 (let ((?x686 (* 9 ?x571)))
 (let ((?x523 (* (- 3) s00)))
 (let ((?x2226 (+ (* 3 s!1) ?x523 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x686 ?x681 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x2891) ?x749 (* 18 (* x!0 r00)) ?x793 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x3867 (+ ?x3047 ?x3041 ?x3046 ?x44 ?x645 ?x646 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x649 ?x615)))
 (let (($x3043 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x446)) 0)))
 (let (($x465 (and $x3043 (= ?x3867 0) (= ?x2226 0) (= ?x613 0) (= ?x463 0) (not (= ?x856 0)))))
 (let (($x3210 (exists ((r Int) (s Int) (x Int) )(! (let ((?x212 (* 6 r)))
 (let ((?x1530 (+ 3 ?x212 s)))
 (let ((?x425 (* (- 1) s)))
 (let ((?x1536 (+ ?x425 x)))
 (let ((?x1732 (+ 1 r)))
 (let ((?x4535 (* 2 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x1935 (* 24 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x4181 (* (- 24) (* r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x758 (* 54 (* r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3836 (* (- 4) (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3723 (* (- 6) (* s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3707 (* (- 2) (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3441 (* 36 (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3418 (* 6 (* ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x4286 (* 24 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3174 (* (- 6) (* x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x2442 (* (- 24) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x2529 (* (- 2) (* r00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x616 (* 36 (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x2097 (* 12 (* s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x1561 (* (- 54) (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3186 (* 3 (* ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x510 (* (- 54) (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x1693 (* (- 36) (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x1999 (* 2 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x1368 (* 6 (* s00 x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x4486 (* 4 (* r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x1113 (* (- 15) (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x1131 (* (- 36) (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x860 (* 54 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x612 (* 36 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x597 (* (- 36) (* r00 r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x3870 (+ (* 2 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 24) (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* (- 3) (* ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* 36 (* r s)) (* 36 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* 6 (* x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* 36 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) ?x597 ?x612 (* (- 2) (* r00 s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* 4 (* r00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 57) (* s s)) (* (- 36) (* r x)) (* (- 108) (* s r00 r00)) (* (- 57) (* x s00)) (* 36 (* x r00)) (* (- 90) (* s s r00)) (* 57 (* s s00)) (* (- 6) (* x00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 36) (* s r00)) ?x860 (* (- 72) (* s x00)) ?x1131 (* 2 (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* 18 (* s s00 r00)) (* (- 1) (* s s s)) (* (- 42) (* r s s)) (* 129 (* s x)) (* (- 72) (* x x)) (* 114 (* r s s00)) (* 20 (* s s s00)) ?x1113 (* 24 (* s00 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) ?x4486 (* (- 2) (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* 108 (* x r00 r00)) (* (- 54) (* r00 x00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 12 (* r s s r00)) (* 6 (* ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 18) (* x s00 r00)) (* (- 36) (* r00 r00 x00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 72) (* s s r00 r00)) (* (- 15) (* s00 s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) ?x1368 (* 24 (* r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* 9 (* ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 90) (* x x r00)) (* (- 36) (* r x x r00)) (* 72 (* x x00)) (* 7 (* s s x)) (* 54 (* r00 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) ?x1999 (* 12 (* s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* 132 (* r s x)) (* (- 54) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530)) (* (- 4) (* s s x r00)) (* 4 (* s s s r00)) (* (- 90) (* r s x00)) ?x1693 (* 24 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 6) (* s00 x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* 90 (* r x x00)) (* 6 (* s s00 x00)) ?x510 (* (- 36) (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530)) ?x3186 (* 36 (* r00 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 36 (* r00 r00 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 24 (* r s x r00)) (* (- 36) (* s r00 r00 x00)) (* 36 (* x r00 r00 x00)) ?x1561 ?x2097 ?x616 (* (- 36) (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* (- 6) (* s00 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 24 (* r00 s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 19) (* s s00 s00)) (* 19 (* x s00 s00)) (* (- 24) (* ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 144) (* r r x r00)) (* (- 12) (* r r x s00)) (* (- 54) (* r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530)) (* (- 24) (* r00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* 4 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) ?x2529 (* 54 (* ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 6 (* s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530)) (* (- 9) (* ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 6) (* ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 2) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) ?x2442 (* 108 (* r r s)) (* (- 108) (* r r x)) (* (- 2) (* r00 s00 s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 2 (* s00 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 26) (* s x s00)) (* (- 36) (* r00 r00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 90) (* r x x)) (* 12 (* r r s s00)) (* 6 (* s x x00)) (* (- 36) (* r00 r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530)) (* 6 (* x x s00)) (* 2 (* ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 6) (* s s x00)) (* (- 36) (* x x r00 r00)) (* 54 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* (- 4) (* s00 s00 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 2 (* s x s00 r00)) (* 36 (* r00 r00 s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 12 (* r x s00 r00)) ?x3174 (* 3 (* ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 12) (* r s s00 r00)) (* (- 4) (* r s s00 s00)) (* (- 2) (* s s s00 r00)) ?x4286 (* (- 114) (* r x s00)) (* (- 6) (* s x x)) (* 9 (* ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* 15 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) ?x3418 ?x3441 (* (- 6) (* x s00 x00)) (* (- 54) (* x00 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 180 (* s x r00)) (* 36 (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* 2 (* x s00 s00 r00)) (* (- 2) (* s s00 s00 r00)) (* (- 9) (* s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) ?x3707 (* 6 (* s00 x00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) ?x3723 (* (- 90) (* s r00 x00)) (* 90 (* x r00 x00)) ?x3836 ?x758 (* (- 2) (* r s x s00)) (* 36 (* s s00 r00 r00)) (* (- 36) (* x s00 r00 r00)) (* 2 (* r s s s00)) (* (- 24) (* r00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 9) (* s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 24) (* r r s x)) (* (- 12) (* s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* 72 (* r r r s)) (* (- 72) (* r r r x)) (* 4 (* r x s00 s00)) (* 24 (* r r s s)) ?x4181 ?x1935 (* 108 (* s x r00 r00)) (* (- 216) (* r s r00 r00)) (* 2 (* r s s s)) (* 54 (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* (- 36) (* r s r00 x00)) (* 36 (* r x r00 x00)) (* 216 (* r x r00 r00)) (* 144 (* r r s r00)) (* (- 36) (* r00 x00 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 9 (* s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) ?x4535 (* (- 4) (* r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 2) (* r s s x)))))
 (let ((?x1491 (* x00 x00)))
 (let ((?x1521 (* (- 108) ?x1491)))
 (let ((?x1329 (* s00 s00 s00)))
 (let ((?x1520 (* (- 16) ?x1329)))
 (let ((?x1201 (* s00 r00 r00 r00)))
 (let ((?x1516 (* (- 216) ?x1201)))
 (let ((?x1027 (* r00 r00 r00 x00)))
 (let ((?x1028 (* 432 ?x1027)))
 (let ((?x950 (* s00 x00)))
 (let ((?x1274 (* 108 ?x950)))
 (let ((?x876 (* s00 s00 r00 r00)))
 (let ((?x877 (* 36 ?x876)))
 (let ((?x813 (* s00 s00 r00)))
 (let ((?x1157 (* 108 ?x813)))
 (let ((?x792 (* s00 r00 r00)))
 (let ((?x1145 (* 36 ?x792)))
 (let ((?x736 (* s00 s00)))
 (let ((?x1510 (* (- 51) ?x736)))
 (let ((?x710 (* s r00 r00)))
 (let ((?x1009 (* (- 36) ?x710)))
 (let ((?x667 (* r00 x00)))
 (let ((?x1507 (* (- 108) ?x667)))
 (let ((?x658 (* s00 r00 x00)))
 (let ((?x1506 (* (- 216) ?x658)))
 (let ((?x571 (* s00 r00)))
 (let ((?x665 (* 54 ?x571)))
 (let ((?x1132 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1522 (+ ?x143 ?x1132 ?x665 ?x1506 ?x1507 (* (- 15) (* s s)) ?x1009 ?x1510 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1145 ?x1157 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x877 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1274 (* 108 (* s x)) (* (- 108) (* x x)) ?x1028 (* 12 (* s s s00)) ?x1516 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1520 (* 216 (* x x00)) ?x1521)))
 (let (($x1523 (= ?x1522 0)))
 (let ((?x1022 (* r00 r00 x00)))
 (let ((?x1035 (* (- 36) ?x1022)))
 (let ((?x951 (* 6 ?x950)))
 (let ((?x841 (* (- 2) ?x813)))
 (let ((?x1061 (* (- 15) ?x736)))
 (let ((?x690 (* s s)))
 (let ((?x714 (* 3 ?x690)))
 (let ((?x696 (* (- 54) ?x667)))
 (let ((?x709 (* 24 ?x571)))
 (let ((?x1224 (+ ?x143 ?x1132 (* (- 24) (* r s)) (* 24 (* r s00)) ?x709 ?x696 ?x714 (* 54 (* r x)) (* 36 (* r x r00)) ?x1009 ?x1061 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1145 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x841 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x951 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x1035 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1229 (= ?x1224 0)))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x749 (* (- 4) ?x736)))
 (let ((?x691 (* 2 ?x690)))
 (let ((?x681 (* (- 18) ?x667)))
 (let ((?x686 (* 9 ?x571)))
 (let ((?x523 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x890 (+ ?x47 ?x523 (* (- 9) (* r s)) (* 9 (* r s00)) ?x686 ?x681 ?x691 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x710) ?x749 (* 18 (* x r00)) ?x793 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x897 (= ?x890 0)))
 (let ((?x614 (* r00 r00 r00)))
 (let ((?x615 (* 12 ?x614)))
 (let ((?x649 (* (- 6) ?x571)))
 (let ((?x646 (* (- 6) x00)))
 (let ((?x645 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x644 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x650 (+ ?x43 ?x644 ?x56 ?x44 ?x645 ?x646 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x649 ?x615)))
 (let (($x651 (= ?x650 0)))
 (let ((?x446 (* r00 r00)))
 (let ((?x447 (* 3 ?x446)))
 (let ((?x476 (* (- 1) s00)))
 (let (($x479 (= (+ s ?x476 (* (- 3) (* r r)) ?x447) 0)))
 (and $x479 $x651 $x897 $x1229 $x1523 (not (= ?x3870 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x2294 (exists ((r Int) (s Int) (x Int) )(! (let ((?x212 (* 6 r)))
 (let ((?x2403 (+ 3 s ?x212)))
 (let ((?x425 (* (- 1) s)))
 (let ((?x3669 (+ x ?x425)))
 (let ((?x1732 (+ 1 r)))
 (let ((?x2898 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)))
 (let ((?x2715 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2076 (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2646 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2436 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2197 (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1649 (* x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1700 (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x605 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x582 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1311 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1248 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x874 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x670 (* s00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2133 (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3529 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3879 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3708 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x4549 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1545 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1841 (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1019 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x3050 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1289 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2813 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x906 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3266 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x4523 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2254 (+ (* 3 (* ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 6) (* s00 x00 ?x3669)) (* (- 36) (* r00 ?x1732 ?x3669 ?x3669)) (* 24 (* r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* x00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* x00 ?x1732 ?x3669)) (* 4 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 2 (* s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 9 (* s00 ?x3669)) (* 36 (* r00 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 s00 ?x3669)) (* (- 24) (* ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) ?x4523) (* 54 ?x3266) (* (- 4) (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 15 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 3) (* ?x3669 ?x2403 ?x2403)) (* (- 54) (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 15 (* s00 s00 ?x3669)) (* 12 (* s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 4) ?x906) (* (- 24) (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 36) (* r00 r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 24) (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 36 (* r00 r00 x00 ?x3669)) (* (- 2) (* r00 s00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 24 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 3 ?x2813) (* (- 4) (* r00 ?x3669 ?x2403 ?x2403)) (* (- 4) (* s00 s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 24 ?x1289) (* 2 ?x3050) (* 24 (* ?x1732 ?x3669 ?x2403)) (* 4 ?x1019) (* (- 54) ?x1841) (* (- 24) (* r00 s00 ?x3669)) (* 54 (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 2 ?x1545) (* (- 9) (* ?x3669 ?x2403)) (* 54 (* r00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* ?x1732 ?x3669 ?x3669)) (* 2 (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 2) ?x4549) (* 24 (* s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 24 ?x3708) (* 2 (* ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* x00 ?x3669 ?x2403)) (* 6 (* s00 ?x3669 ?x3669)) (* (- 6) (* s00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 9) (* s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 6 (* s00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 x00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 2 (* r00 s00 ?x3669 ?x2403)) (* 54 ?x3879) (* 24 (* r00 ?x3669 ?x2403)) (* 36 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 12) (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* ?x3669 ?x3669 ?x2403)) (* (- 2) (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 12) (* s00 ?x3669 ?x2403)) (* 4 (* r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 54) (* r00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 2 (* r00 s00 s00 ?x3669)) (* (- 15) ?x3529) (* (- 54) (* r00 ?x3669 ?x3669)) (* 9 (* ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) ?x2133) (* (- 3) (* ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 6 ?x670) (* (- 36) ?x874) (* 24 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 15) (* s00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* r00 x00 ?x3669)) (* 36 ?x1248) (* 12 ?x1311) (* (- 2) (* r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 4 (* s00 s00 ?x1732 ?x3669)) (* (- 6) (* s00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 54 (* ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 2 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) ?x582) (* (- 24) ?x605) (* (- 9) (* ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 6 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 36 ?x1700) (* 36 (* r00 x00 ?x1732 ?x3669)) (* 36 (* r00 r00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 ?x3669 ?x2403)) (* (- 2) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 ?x3669 ?x3669)) (* (- 36) (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 6) ?x1649) (* 36 ?x2197) (* (- 9) (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 9 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 6 ?x2436) (* (- 6) ?x2646) (* (- 2) ?x2076) (* (- 24) (* s00 ?x1732 ?x3669)) (* 54 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 2) (* s00 ?x1732 ?x3669 ?x2403)) (* (- 24) (* r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 24) ?x2715) (* (- 2) (* ?x1732 ?x3669 ?x2403 ?x2403)) (* 9 ?x2898))))
 (let ((?x1491 (* x00 x00)))
 (let ((?x4052 (* 108 ?x1491)))
 (let ((?x3849 (* (- 9) s)))
 (let ((?x684 (* r00 r00 s00)))
 (let ((?x4169 (* (- 36) ?x684)))
 (let ((?x137 (* 9 s00)))
 (let ((?x736 (* s00 s00)))
 (let ((?x803 (* 51 ?x736)))
 (let ((?x1000 (* r00 r00 s)))
 (let ((?x4216 (* 36 ?x1000)))
 (let ((?x1329 (* s00 s00 s00)))
 (let ((?x4566 (* 16 ?x1329)))
 (let ((?x950 (* s00 x00)))
 (let ((?x1604 (* (- 108) ?x950)))
 (let ((?x1027 (* r00 r00 r00 x00)))
 (let ((?x3165 (* (- 432) ?x1027)))
 (let ((?x667 (* r00 x00)))
 (let ((?x2378 (* 108 ?x667)))
 (let ((?x4679 (+ (* 216 (* r00 s00 x00)) ?x2378 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3165 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1604 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4566 (* (- 108) (* x s)) ?x4216 ?x803 (* (- 108) (* r00 x)) ?x137 ?x4169 ?x3849 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4052)))
 (let (($x4537 (= ?x4679 0)))
 (let ((?x3613 (* 15 ?x736)))
 (let ((?x1022 (* r00 r00 x00)))
 (let ((?x3301 (* 36 ?x1022)))
 (let ((?x891 (* (- 6) ?x950)))
 (let ((?x4693 (* 54 ?x667)))
 (let ((?x711 (+ (* 24 (* s r)) ?x4693 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x891 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4216 ?x3301 ?x3613 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x4169 (* 54 (* x00 r)) ?x3849 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x644 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3508 (* 4 ?x736)))
 (let ((?x1079 (* 18 ?x667)))
 (let ((?x3403 (+ (* 9 (* s r)) ?x1079 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1000) ?x3508 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x684) (* 18 (* x00 r)) ?x644 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x614 (* r00 r00 r00)))
 (let ((?x615 (* 12 ?x614)))
 (let ((?x646 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x645 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x901 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x644 ?x645 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x646 ?x615)))
 (let (($x2994 (= (+ s00 ?x425 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2994 (= ?x901 0) (= ?x3403 0) (= ?x711 0) $x4537 (not (= ?x2254 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3668 (lambda ((r Int) (s Int) (x Int) )(let ((?x212 (* 6 r)))
 (let ((?x1530 (+ 3 ?x212 s)))
 (let ((?x425 (* (- 1) s)))
 (let ((?x1536 (+ ?x425 x)))
 (let ((?x1732 (+ 1 r)))
 (let ((?x4535 (* 2 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x1935 (* 24 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x4181 (* (- 24) (* r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x758 (* 54 (* r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3836 (* (- 4) (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3723 (* (- 6) (* s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3707 (* (- 2) (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3441 (* 36 (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3418 (* 6 (* ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x4286 (* 24 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3174 (* (- 6) (* x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x2442 (* (- 24) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x2529 (* (- 2) (* r00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x616 (* 36 (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x2097 (* 12 (* s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x1561 (* (- 54) (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x3186 (* 3 (* ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x510 (* (- 54) (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x1693 (* (- 36) (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x1999 (* 2 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x1368 (* 6 (* s00 x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x4486 (* 4 (* r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x1113 (* (- 15) (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x1131 (* (- 36) (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x860 (* 54 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x612 (* 36 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530))))
 (let ((?x597 (* (- 36) (* r00 r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530))))
 (let ((?x3870 (+ (* 2 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 24) (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* (- 3) (* ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* 36 (* r s)) (* 36 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* 6 (* x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* 36 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) ?x597 ?x612 (* (- 2) (* r00 s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* 4 (* r00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 57) (* s s)) (* (- 36) (* r x)) (* (- 108) (* s r00 r00)) (* (- 57) (* x s00)) (* 36 (* x r00)) (* (- 90) (* s s r00)) (* 57 (* s s00)) (* (- 6) (* x00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 36) (* s r00)) ?x860 (* (- 72) (* s x00)) ?x1131 (* 2 (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* 18 (* s s00 r00)) (* (- 1) (* s s s)) (* (- 42) (* r s s)) (* 129 (* s x)) (* (- 72) (* x x)) (* 114 (* r s s00)) (* 20 (* s s s00)) ?x1113 (* 24 (* s00 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) ?x4486 (* (- 2) (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* 108 (* x r00 r00)) (* (- 54) (* r00 x00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 12 (* r s s r00)) (* 6 (* ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 18) (* x s00 r00)) (* (- 36) (* r00 r00 x00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 72) (* s s r00 r00)) (* (- 15) (* s00 s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) ?x1368 (* 24 (* r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* 9 (* ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 90) (* x x r00)) (* (- 36) (* r x x r00)) (* 72 (* x x00)) (* 7 (* s s x)) (* 54 (* r00 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) ?x1999 (* 12 (* s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* 132 (* r s x)) (* (- 54) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530)) (* (- 4) (* s s x r00)) (* 4 (* s s s r00)) (* (- 90) (* r s x00)) ?x1693 (* 24 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 6) (* s00 x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* 90 (* r x x00)) (* 6 (* s s00 x00)) ?x510 (* (- 36) (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530)) ?x3186 (* 36 (* r00 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 36 (* r00 r00 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 24 (* r s x r00)) (* (- 36) (* s r00 r00 x00)) (* 36 (* x r00 r00 x00)) ?x1561 ?x2097 ?x616 (* (- 36) (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* (- 6) (* s00 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 24 (* r00 s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 19) (* s s00 s00)) (* 19 (* x s00 s00)) (* (- 24) (* ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 144) (* r r x r00)) (* (- 12) (* r r x s00)) (* (- 54) (* r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530)) (* (- 24) (* r00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* 4 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) ?x2529 (* 54 (* ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 6 (* s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530)) (* (- 9) (* ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 6) (* ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 2) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) ?x2442 (* 108 (* r r s)) (* (- 108) (* r r x)) (* (- 2) (* r00 s00 s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 2 (* s00 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 26) (* s x s00)) (* (- 36) (* r00 r00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 90) (* r x x)) (* 12 (* r r s s00)) (* 6 (* s x x00)) (* (- 36) (* r00 r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530)) (* 6 (* x x s00)) (* 2 (* ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 6) (* s s x00)) (* (- 36) (* x x r00 r00)) (* 54 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* (- 4) (* s00 s00 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 2 (* s x s00 r00)) (* 36 (* r00 r00 s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 12 (* r x s00 r00)) ?x3174 (* 3 (* ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 12) (* r s s00 r00)) (* (- 4) (* r s s00 s00)) (* (- 2) (* s s s00 r00)) ?x4286 (* (- 114) (* r x s00)) (* (- 6) (* s x x)) (* 9 (* ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* 15 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) ?x3418 ?x3441 (* (- 6) (* x s00 x00)) (* (- 54) (* x00 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 180 (* s x r00)) (* 36 (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* 2 (* x s00 s00 r00)) (* (- 2) (* s s00 s00 r00)) (* (- 9) (* s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) ?x3707 (* 6 (* s00 x00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) ?x3723 (* (- 90) (* s r00 x00)) (* 90 (* x r00 x00)) ?x3836 ?x758 (* (- 2) (* r s x s00)) (* 36 (* s s00 r00 r00)) (* (- 36) (* x s00 r00 r00)) (* 2 (* r s s s00)) (* (- 24) (* r00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 9) (* s00 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* (- 24) (* r r s x)) (* (- 12) (* s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530)) (* 72 (* r r r s)) (* (- 72) (* r r r x)) (* 4 (* r x s00 s00)) (* 24 (* r r s s)) ?x4181 ?x1935 (* 108 (* s x r00 r00)) (* (- 216) (* r s r00 r00)) (* 2 (* r s s s)) (* 54 (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) (* (- 36) (* r s r00 x00)) (* 36 (* r x r00 x00)) (* 216 (* r x r00 r00)) (* 144 (* r r s r00)) (* (- 36) (* r00 x00 ?x1732 ?x1536 ?x1536 ?x1530 ?x1530 ?x1530)) (* 9 (* s00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530)) ?x4535 (* (- 4) (* r00 ?x1732 ?x1732 ?x1732 ?x1536 ?x1530 ?x1530 ?x1530 ?x1530)) (* (- 2) (* r s s x)))))
 (let ((?x1491 (* x00 x00)))
 (let ((?x1521 (* (- 108) ?x1491)))
 (let ((?x1329 (* s00 s00 s00)))
 (let ((?x1520 (* (- 16) ?x1329)))
 (let ((?x1201 (* s00 r00 r00 r00)))
 (let ((?x1516 (* (- 216) ?x1201)))
 (let ((?x1027 (* r00 r00 r00 x00)))
 (let ((?x1028 (* 432 ?x1027)))
 (let ((?x950 (* s00 x00)))
 (let ((?x1274 (* 108 ?x950)))
 (let ((?x876 (* s00 s00 r00 r00)))
 (let ((?x877 (* 36 ?x876)))
 (let ((?x813 (* s00 s00 r00)))
 (let ((?x1157 (* 108 ?x813)))
 (let ((?x792 (* s00 r00 r00)))
 (let ((?x1145 (* 36 ?x792)))
 (let ((?x736 (* s00 s00)))
 (let ((?x1510 (* (- 51) ?x736)))
 (let ((?x710 (* s r00 r00)))
 (let ((?x1009 (* (- 36) ?x710)))
 (let ((?x667 (* r00 x00)))
 (let ((?x1507 (* (- 108) ?x667)))
 (let ((?x658 (* s00 r00 x00)))
 (let ((?x1506 (* (- 216) ?x658)))
 (let ((?x571 (* s00 r00)))
 (let ((?x665 (* 54 ?x571)))
 (let ((?x1132 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1522 (+ ?x143 ?x1132 ?x665 ?x1506 ?x1507 (* (- 15) (* s s)) ?x1009 ?x1510 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1145 ?x1157 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x877 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1274 (* 108 (* s x)) (* (- 108) (* x x)) ?x1028 (* 12 (* s s s00)) ?x1516 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1520 (* 216 (* x x00)) ?x1521)))
 (let (($x1523 (= ?x1522 0)))
 (let ((?x1022 (* r00 r00 x00)))
 (let ((?x1035 (* (- 36) ?x1022)))
 (let ((?x951 (* 6 ?x950)))
 (let ((?x841 (* (- 2) ?x813)))
 (let ((?x1061 (* (- 15) ?x736)))
 (let ((?x690 (* s s)))
 (let ((?x714 (* 3 ?x690)))
 (let ((?x696 (* (- 54) ?x667)))
 (let ((?x709 (* 24 ?x571)))
 (let ((?x1224 (+ ?x143 ?x1132 (* (- 24) (* r s)) (* 24 (* r s00)) ?x709 ?x696 ?x714 (* 54 (* r x)) (* 36 (* r x r00)) ?x1009 ?x1061 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1145 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x841 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x951 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x1035 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1229 (= ?x1224 0)))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x749 (* (- 4) ?x736)))
 (let ((?x691 (* 2 ?x690)))
 (let ((?x681 (* (- 18) ?x667)))
 (let ((?x686 (* 9 ?x571)))
 (let ((?x523 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x890 (+ ?x47 ?x523 (* (- 9) (* r s)) (* 9 (* r s00)) ?x686 ?x681 ?x691 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x710) ?x749 (* 18 (* x r00)) ?x793 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x897 (= ?x890 0)))
 (let ((?x614 (* r00 r00 r00)))
 (let ((?x615 (* 12 ?x614)))
 (let ((?x649 (* (- 6) ?x571)))
 (let ((?x646 (* (- 6) x00)))
 (let ((?x645 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x644 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x650 (+ ?x43 ?x644 ?x56 ?x44 ?x645 ?x646 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x649 ?x615)))
 (let (($x651 (= ?x650 0)))
 (let ((?x446 (* r00 r00)))
 (let ((?x447 (* 3 ?x446)))
 (let ((?x476 (* (- 1) s00)))
 (let (($x479 (= (+ s ?x476 (* (- 3) (* r r)) ?x447) 0)))
 (let (($x3948 (and $x479 $x651 $x897 $x1229 $x1523 (not (= ?x3870 0)))))
 (let ((?x2403 (+ 3 s ?x212)))
 (let ((?x3669 (+ x ?x425)))
 (let ((?x2898 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)))
 (let ((?x2715 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2076 (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2646 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2436 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2197 (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1649 (* x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1700 (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x605 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x582 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1311 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1248 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x874 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x670 (* s00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2133 (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3529 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3879 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3708 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x4549 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1545 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1841 (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1019 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x3050 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1289 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2813 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x906 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3266 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x4523 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2254 (+ (* 3 (* ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 6) (* s00 x00 ?x3669)) (* (- 36) (* r00 ?x1732 ?x3669 ?x3669)) (* 24 (* r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* x00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* x00 ?x1732 ?x3669)) (* 4 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 2 (* s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 9 (* s00 ?x3669)) (* 36 (* r00 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 s00 ?x3669)) (* (- 24) (* ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) ?x4523) (* 54 ?x3266) (* (- 4) (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 15 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 3) (* ?x3669 ?x2403 ?x2403)) (* (- 54) (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 15 (* s00 s00 ?x3669)) (* 12 (* s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 4) ?x906) (* (- 24) (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 36) (* r00 r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 24) (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 36 (* r00 r00 x00 ?x3669)) (* (- 2) (* r00 s00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 24 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 3 ?x2813) (* (- 4) (* r00 ?x3669 ?x2403 ?x2403)) (* (- 4) (* s00 s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 24 ?x1289) (* 2 ?x3050) (* 24 (* ?x1732 ?x3669 ?x2403)) (* 4 ?x1019) (* (- 54) ?x1841) (* (- 24) (* r00 s00 ?x3669)) (* 54 (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 2 ?x1545) (* (- 9) (* ?x3669 ?x2403)) (* 54 (* r00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* ?x1732 ?x3669 ?x3669)) (* 2 (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 2) ?x4549) (* 24 (* s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 24 ?x3708) (* 2 (* ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* x00 ?x3669 ?x2403)) (* 6 (* s00 ?x3669 ?x3669)) (* (- 6) (* s00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 9) (* s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 6 (* s00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 x00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 2 (* r00 s00 ?x3669 ?x2403)) (* 54 ?x3879) (* 24 (* r00 ?x3669 ?x2403)) (* 36 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 12) (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* ?x3669 ?x3669 ?x2403)) (* (- 2) (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 12) (* s00 ?x3669 ?x2403)) (* 4 (* r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 54) (* r00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 2 (* r00 s00 s00 ?x3669)) (* (- 15) ?x3529) (* (- 54) (* r00 ?x3669 ?x3669)) (* 9 (* ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) ?x2133) (* (- 3) (* ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 6 ?x670) (* (- 36) ?x874) (* 24 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 15) (* s00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* r00 x00 ?x3669)) (* 36 ?x1248) (* 12 ?x1311) (* (- 2) (* r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 4 (* s00 s00 ?x1732 ?x3669)) (* (- 6) (* s00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 54 (* ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 2 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) ?x582) (* (- 24) ?x605) (* (- 9) (* ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 6 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 36 ?x1700) (* 36 (* r00 x00 ?x1732 ?x3669)) (* 36 (* r00 r00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 ?x3669 ?x2403)) (* (- 2) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 ?x3669 ?x3669)) (* (- 36) (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 6) ?x1649) (* 36 ?x2197) (* (- 9) (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 9 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 6 ?x2436) (* (- 6) ?x2646) (* (- 2) ?x2076) (* (- 24) (* s00 ?x1732 ?x3669)) (* 54 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 2) (* s00 ?x1732 ?x3669 ?x2403)) (* (- 24) (* r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 24) ?x2715) (* (- 2) (* ?x1732 ?x3669 ?x2403 ?x2403)) (* 9 ?x2898))))
 (let ((?x4052 (* 108 ?x1491)))
 (let ((?x3849 (* (- 9) s)))
 (let ((?x684 (* r00 r00 s00)))
 (let ((?x4169 (* (- 36) ?x684)))
 (let ((?x137 (* 9 s00)))
 (let ((?x803 (* 51 ?x736)))
 (let ((?x1000 (* r00 r00 s)))
 (let ((?x4216 (* 36 ?x1000)))
 (let ((?x4566 (* 16 ?x1329)))
 (let ((?x1604 (* (- 108) ?x950)))
 (let ((?x3165 (* (- 432) ?x1027)))
 (let ((?x2378 (* 108 ?x667)))
 (let ((?x4679 (+ (* 216 (* r00 s00 x00)) ?x2378 (* (- 54) (* r00 s00)) (* 15 ?x690) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3165 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1604 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4566 (* (- 108) (* x s)) ?x4216 ?x803 (* (- 108) (* r00 x)) ?x137 ?x4169 ?x3849 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4052)))
 (let (($x4537 (= ?x4679 0)))
 (let ((?x3613 (* 15 ?x736)))
 (let ((?x3301 (* 36 ?x1022)))
 (let ((?x891 (* (- 6) ?x950)))
 (let ((?x4693 (* 54 ?x667)))
 (let ((?x711 (+ (* 24 (* s r)) ?x4693 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x690) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x891 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4216 ?x3301 ?x3613 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x4169 (* 54 (* x00 r)) ?x3849 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x3508 (* 4 ?x736)))
 (let ((?x1079 (* 18 ?x667)))
 (let ((?x3403 (+ (* 9 (* s r)) ?x1079 (* (- 9) (* r00 s00)) (* (- 2) ?x690) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1000) ?x3508 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x684) (* 18 (* x00 r)) ?x644 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x901 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x644 ?x645 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x646 ?x615)))
 (let (($x2994 (= (+ s00 ?x425 (* 3 (* r r)) (* (- 3) ?x446)) 0)))
 (let (($x1852 (and $x2994 (= ?x901 0) (= ?x3403 0) (= ?x711 0) $x4537 (not (= ?x2254 0)))))
 (rewrite (= $x1852 $x3948))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2652 (exists ((r Int) (s Int) (x Int) )(! (let ((?x212 (* 6 r)))
 (let ((?x2403 (+ 3 s ?x212)))
 (let ((?x425 (* (- 1) s)))
 (let ((?x3669 (+ x ?x425)))
 (let ((?x1732 (+ 1 r)))
 (let ((?x2898 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)))
 (let ((?x2715 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2076 (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2646 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2436 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2197 (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1649 (* x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1700 (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x605 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x582 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1311 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1248 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x874 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x670 (* s00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2133 (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3529 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3879 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3708 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x4549 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1545 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1841 (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1019 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x3050 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1289 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2813 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x906 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3266 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x4523 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2979 (+ (* (- 3) (* ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* 6 (* s00 x00 ?x3669)) (* 36 (* r00 ?x1732 ?x3669 ?x3669)) (* (- 24) (* r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* x00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* x00 ?x1732 ?x3669)) (* (- 4) (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 2) (* s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 9) (* s00 ?x3669)) (* (- 36) (* r00 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 s00 ?x3669)) (* 24 (* ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 ?x4523) (* (- 54) ?x3266) (* 4 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 15) (* s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 3 (* ?x3669 ?x2403 ?x2403)) (* 54 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 15) (* s00 s00 ?x3669)) (* (- 12) (* s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 4 ?x906) (* 24 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 36 (* r00 r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 24 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 36) (* r00 r00 x00 ?x3669)) (* 2 (* r00 s00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 24) (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 3) ?x2813) (* 4 (* r00 ?x3669 ?x2403 ?x2403)) (* 4 (* s00 s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 24) ?x1289) (* (- 2) ?x3050) (* (- 24) (* ?x1732 ?x3669 ?x2403)) (* (- 4) ?x1019) (* 54 ?x1841) (* 24 (* r00 s00 ?x3669)) (* (- 54) (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 2) ?x1545) (* 9 (* ?x3669 ?x2403)) (* (- 54) (* r00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* ?x1732 ?x3669 ?x3669)) (* (- 2) (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 2 ?x4549) (* (- 24) (* s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 24) ?x3708) (* (- 2) (* ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* x00 ?x3669 ?x2403)) (* (- 6) (* s00 ?x3669 ?x3669)) (* 6 (* s00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 9 (* s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 6) (* s00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 x00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 2) (* r00 s00 ?x3669 ?x2403)) (* (- 54) ?x3879) (* (- 24) (* r00 ?x3669 ?x2403)) (* (- 36) (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 12 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* ?x3669 ?x3669 ?x2403)) (* 2 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 12 (* s00 ?x3669 ?x2403)) (* (- 4) (* r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* 54 (* r00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 2) (* r00 s00 s00 ?x3669)) (* 15 ?x3529) (* 54 (* r00 ?x3669 ?x3669)) (* (- 9) (* ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 ?x2133) (* 3 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 6) ?x670) (* 36 ?x874) (* (- 24) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 15 (* s00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* r00 x00 ?x3669)) (* (- 36) ?x1248) (* (- 12) ?x1311) (* 2 (* r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 4) (* s00 s00 ?x1732 ?x3669)) (* 6 (* s00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 54) (* ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 2) (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 ?x582) (* 24 ?x605) (* 9 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 6) (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 36) ?x1700) (* (- 36) (* r00 x00 ?x1732 ?x3669)) (* (- 36) (* r00 r00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 ?x3669 ?x2403)) (* 2 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 ?x3669 ?x3669)) (* 36 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 6 ?x1649) (* (- 36) ?x2197) (* 9 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 9) (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 6) ?x2436) (* 6 ?x2646) (* 2 ?x2076) (* 24 (* s00 ?x1732 ?x3669)) (* (- 54) (* r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 2 (* s00 ?x1732 ?x3669 ?x2403)) (* 24 (* r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 24 ?x2715) (* 2 (* ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 9) ?x2898))))
 (let ((?x1491 (* x00 x00)))
 (let ((?x4052 (* 108 ?x1491)))
 (let ((?x3849 (* (- 9) s)))
 (let ((?x684 (* r00 r00 s00)))
 (let ((?x4169 (* (- 36) ?x684)))
 (let ((?x137 (* 9 s00)))
 (let ((?x736 (* s00 s00)))
 (let ((?x803 (* 51 ?x736)))
 (let ((?x1000 (* r00 r00 s)))
 (let ((?x4216 (* 36 ?x1000)))
 (let ((?x1329 (* s00 s00 s00)))
 (let ((?x4566 (* 16 ?x1329)))
 (let ((?x950 (* s00 x00)))
 (let ((?x1604 (* (- 108) ?x950)))
 (let ((?x1027 (* r00 r00 r00 x00)))
 (let ((?x3165 (* (- 432) ?x1027)))
 (let ((?x667 (* r00 x00)))
 (let ((?x2378 (* 108 ?x667)))
 (let ((?x4679 (+ (* 216 (* r00 s00 x00)) ?x2378 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3165 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1604 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4566 (* (- 108) (* x s)) ?x4216 ?x803 (* (- 108) (* r00 x)) ?x137 ?x4169 ?x3849 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4052)))
 (let (($x4537 (= ?x4679 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1132 (* (- 9) s00)))
 (let ((?x1061 (* (- 15) ?x736)))
 (let ((?x1022 (* r00 r00 x00)))
 (let ((?x1035 (* (- 36) ?x1022)))
 (let ((?x951 (* 6 ?x950)))
 (let ((?x690 (* s s)))
 (let ((?x714 (* 3 ?x690)))
 (let ((?x696 (* (- 54) ?x667)))
 (let ((?x4891 (+ (* (- 24) (* s r)) ?x696 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x714 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x951 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1000) ?x1035 ?x1061 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1132 (* 36 ?x684) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x523 (* (- 3) s00)))
 (let ((?x749 (* (- 4) ?x736)))
 (let ((?x691 (* 2 ?x690)))
 (let ((?x681 (* (- 18) ?x667)))
 (let ((?x3401 (+ (* (- 9) (* s r)) ?x681 (* 9 (* r00 s00)) ?x691 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1000) ?x749 (* 18 (* r00 x)) ?x523 (* 6 ?x684) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1797 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x523 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2994 (= (+ s00 ?x425 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2994 (= ?x1797 0) (= ?x3401 0) (= ?x4891 0) $x4537 (not (= ?x2979 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1862 (lambda ((r Int) (s Int) (x Int) )(let ((?x212 (* 6 r)))
 (let ((?x2403 (+ 3 s ?x212)))
 (let ((?x425 (* (- 1) s)))
 (let ((?x3669 (+ x ?x425)))
 (let ((?x1732 (+ 1 r)))
 (let ((?x2898 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)))
 (let ((?x2715 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2076 (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2646 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2436 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2197 (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1649 (* x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1700 (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x605 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x582 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1311 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1248 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x874 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x670 (* s00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2133 (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3529 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3879 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3708 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x4549 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1545 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1841 (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1019 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x3050 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1289 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2813 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x906 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3266 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x4523 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2254 (+ (* 3 (* ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 6) (* s00 x00 ?x3669)) (* (- 36) (* r00 ?x1732 ?x3669 ?x3669)) (* 24 (* r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* x00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* x00 ?x1732 ?x3669)) (* 4 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 2 (* s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 9 (* s00 ?x3669)) (* 36 (* r00 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 s00 ?x3669)) (* (- 24) (* ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) ?x4523) (* 54 ?x3266) (* (- 4) (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 15 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 3) (* ?x3669 ?x2403 ?x2403)) (* (- 54) (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 15 (* s00 s00 ?x3669)) (* 12 (* s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 4) ?x906) (* (- 24) (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 36) (* r00 r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 24) (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 36 (* r00 r00 x00 ?x3669)) (* (- 2) (* r00 s00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 24 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 3 ?x2813) (* (- 4) (* r00 ?x3669 ?x2403 ?x2403)) (* (- 4) (* s00 s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 24 ?x1289) (* 2 ?x3050) (* 24 (* ?x1732 ?x3669 ?x2403)) (* 4 ?x1019) (* (- 54) ?x1841) (* (- 24) (* r00 s00 ?x3669)) (* 54 (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 2 ?x1545) (* (- 9) (* ?x3669 ?x2403)) (* 54 (* r00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* ?x1732 ?x3669 ?x3669)) (* 2 (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 2) ?x4549) (* 24 (* s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 24 ?x3708) (* 2 (* ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* x00 ?x3669 ?x2403)) (* 6 (* s00 ?x3669 ?x3669)) (* (- 6) (* s00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 9) (* s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 6 (* s00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 x00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 2 (* r00 s00 ?x3669 ?x2403)) (* 54 ?x3879) (* 24 (* r00 ?x3669 ?x2403)) (* 36 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 12) (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* ?x3669 ?x3669 ?x2403)) (* (- 2) (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 12) (* s00 ?x3669 ?x2403)) (* 4 (* r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 54) (* r00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 2 (* r00 s00 s00 ?x3669)) (* (- 15) ?x3529) (* (- 54) (* r00 ?x3669 ?x3669)) (* 9 (* ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) ?x2133) (* (- 3) (* ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 6 ?x670) (* (- 36) ?x874) (* 24 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 15) (* s00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* r00 x00 ?x3669)) (* 36 ?x1248) (* 12 ?x1311) (* (- 2) (* r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 4 (* s00 s00 ?x1732 ?x3669)) (* (- 6) (* s00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 54 (* ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 2 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) ?x582) (* (- 24) ?x605) (* (- 9) (* ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 6 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 36 ?x1700) (* 36 (* r00 x00 ?x1732 ?x3669)) (* 36 (* r00 r00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 ?x3669 ?x2403)) (* (- 2) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 ?x3669 ?x3669)) (* (- 36) (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 6) ?x1649) (* 36 ?x2197) (* (- 9) (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 9 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 6 ?x2436) (* (- 6) ?x2646) (* (- 2) ?x2076) (* (- 24) (* s00 ?x1732 ?x3669)) (* 54 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 2) (* s00 ?x1732 ?x3669 ?x2403)) (* (- 24) (* r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 24) ?x2715) (* (- 2) (* ?x1732 ?x3669 ?x2403 ?x2403)) (* 9 ?x2898))))
 (let ((?x1491 (* x00 x00)))
 (let ((?x4052 (* 108 ?x1491)))
 (let ((?x3849 (* (- 9) s)))
 (let ((?x684 (* r00 r00 s00)))
 (let ((?x4169 (* (- 36) ?x684)))
 (let ((?x137 (* 9 s00)))
 (let ((?x736 (* s00 s00)))
 (let ((?x803 (* 51 ?x736)))
 (let ((?x1000 (* r00 r00 s)))
 (let ((?x4216 (* 36 ?x1000)))
 (let ((?x1329 (* s00 s00 s00)))
 (let ((?x4566 (* 16 ?x1329)))
 (let ((?x950 (* s00 x00)))
 (let ((?x1604 (* (- 108) ?x950)))
 (let ((?x1027 (* r00 r00 r00 x00)))
 (let ((?x3165 (* (- 432) ?x1027)))
 (let ((?x667 (* r00 x00)))
 (let ((?x2378 (* 108 ?x667)))
 (let ((?x4679 (+ (* 216 (* r00 s00 x00)) ?x2378 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3165 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1604 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4566 (* (- 108) (* x s)) ?x4216 ?x803 (* (- 108) (* r00 x)) ?x137 ?x4169 ?x3849 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4052)))
 (let (($x4537 (= ?x4679 0)))
 (let ((?x3613 (* 15 ?x736)))
 (let ((?x1022 (* r00 r00 x00)))
 (let ((?x3301 (* 36 ?x1022)))
 (let ((?x891 (* (- 6) ?x950)))
 (let ((?x4693 (* 54 ?x667)))
 (let ((?x711 (+ (* 24 (* s r)) ?x4693 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x891 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4216 ?x3301 ?x3613 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x4169 (* 54 (* x00 r)) ?x3849 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x644 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3508 (* 4 ?x736)))
 (let ((?x1079 (* 18 ?x667)))
 (let ((?x3403 (+ (* 9 (* s r)) ?x1079 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1000) ?x3508 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x684) (* 18 (* x00 r)) ?x644 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x614 (* r00 r00 r00)))
 (let ((?x615 (* 12 ?x614)))
 (let ((?x646 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x645 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x901 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x644 ?x645 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x646 ?x615)))
 (let (($x2994 (= (+ s00 ?x425 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1852 (and $x2994 (= ?x901 0) (= ?x3403 0) (= ?x711 0) $x4537 (not (= ?x2254 0)))))
 (let ((?x2979 (+ (* (- 3) (* ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* 6 (* s00 x00 ?x3669)) (* 36 (* r00 ?x1732 ?x3669 ?x3669)) (* (- 24) (* r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* x00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* x00 ?x1732 ?x3669)) (* (- 4) (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 2) (* s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 9) (* s00 ?x3669)) (* (- 36) (* r00 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 s00 ?x3669)) (* 24 (* ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 ?x4523) (* (- 54) ?x3266) (* 4 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 15) (* s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 3 (* ?x3669 ?x2403 ?x2403)) (* 54 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 15) (* s00 s00 ?x3669)) (* (- 12) (* s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 4 ?x906) (* 24 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 36 (* r00 r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 24 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 36) (* r00 r00 x00 ?x3669)) (* 2 (* r00 s00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 24) (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 3) ?x2813) (* 4 (* r00 ?x3669 ?x2403 ?x2403)) (* 4 (* s00 s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 24) ?x1289) (* (- 2) ?x3050) (* (- 24) (* ?x1732 ?x3669 ?x2403)) (* (- 4) ?x1019) (* 54 ?x1841) (* 24 (* r00 s00 ?x3669)) (* (- 54) (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 2) ?x1545) (* 9 (* ?x3669 ?x2403)) (* (- 54) (* r00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* ?x1732 ?x3669 ?x3669)) (* (- 2) (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 2 ?x4549) (* (- 24) (* s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 24) ?x3708) (* (- 2) (* ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* x00 ?x3669 ?x2403)) (* (- 6) (* s00 ?x3669 ?x3669)) (* 6 (* s00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 9 (* s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 6) (* s00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 x00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 2) (* r00 s00 ?x3669 ?x2403)) (* (- 54) ?x3879) (* (- 24) (* r00 ?x3669 ?x2403)) (* (- 36) (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 12 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* ?x3669 ?x3669 ?x2403)) (* 2 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 12 (* s00 ?x3669 ?x2403)) (* (- 4) (* r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* 54 (* r00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 2) (* r00 s00 s00 ?x3669)) (* 15 ?x3529) (* 54 (* r00 ?x3669 ?x3669)) (* (- 9) (* ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 ?x2133) (* 3 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 6) ?x670) (* 36 ?x874) (* (- 24) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 15 (* s00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* r00 x00 ?x3669)) (* (- 36) ?x1248) (* (- 12) ?x1311) (* 2 (* r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 4) (* s00 s00 ?x1732 ?x3669)) (* 6 (* s00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 54) (* ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 2) (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 ?x582) (* 24 ?x605) (* 9 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 6) (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 36) ?x1700) (* (- 36) (* r00 x00 ?x1732 ?x3669)) (* (- 36) (* r00 r00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 ?x3669 ?x2403)) (* 2 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 ?x3669 ?x3669)) (* 36 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 6 ?x1649) (* (- 36) ?x2197) (* 9 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 9) (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 6) ?x2436) (* 6 ?x2646) (* 2 ?x2076) (* 24 (* s00 ?x1732 ?x3669)) (* (- 54) (* r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 2 (* s00 ?x1732 ?x3669 ?x2403)) (* 24 (* r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 24 ?x2715) (* 2 (* ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 9) ?x2898))))
 (let ((?x143 (* 9 s)))
 (let ((?x1132 (* (- 9) s00)))
 (let ((?x1061 (* (- 15) ?x736)))
 (let ((?x1035 (* (- 36) ?x1022)))
 (let ((?x951 (* 6 ?x950)))
 (let ((?x690 (* s s)))
 (let ((?x714 (* 3 ?x690)))
 (let ((?x696 (* (- 54) ?x667)))
 (let ((?x4891 (+ (* (- 24) (* s r)) ?x696 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x714 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x951 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1000) ?x1035 ?x1061 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1132 (* 36 ?x684) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x523 (* (- 3) s00)))
 (let ((?x749 (* (- 4) ?x736)))
 (let ((?x691 (* 2 ?x690)))
 (let ((?x681 (* (- 18) ?x667)))
 (let ((?x3401 (+ (* (- 9) (* s r)) ?x681 (* 9 (* r00 s00)) ?x691 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1000) ?x749 (* 18 (* r00 x)) ?x523 (* 6 ?x684) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1797 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x523 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x614))))
 (let (($x1684 (and $x2994 (= ?x1797 0) (= ?x3401 0) (= ?x4891 0) $x4537 (not (= ?x2979 0)))))
 (rewrite (= $x1684 $x1852)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x422 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (- x s)))
 (let ((?x212 (* 6 r)))
 (let ((?x213 (+ s ?x212 3)))
 (let ((?x218 (+ r 1)))
 (let ((?x406 (* 2 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214)))
 (let ((?x395 (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)))
 (let ((?x381 (* 36 ?x218 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214)))
 (let ((?x360 (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214)))
 (let ((?x353 (* 36 ?x218 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00)))
 (let ((?x345 (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00)))
 (let ((?x298 (* 2 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)))
 (let ((?x285 (* 2 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)))
 (let ((?x276 (* 4 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)))
 (let ((?x274 (* 2 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)))
 (let ((?x254 (* 4 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214)))
 (let ((?x239 (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)))
 (let ((?x220 (+ (* (- 3) ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214) (* 6 s00 ?x214 x00) (* 36 ?x218 r00 ?x214 ?x214))))
 (let ((?x224 (+ (- ?x220 (* 24 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214)) (* 54 ?x218 ?x213 ?x213 ?x213 ?x214 ?x214 x00))))
 (let ((?x229 (- (- ?x224 (* 54 ?x218 ?x214 x00)) (* 4 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 s00 s00 ?x214))))
 (let ((?x232 (+ (- ?x229 (* 2 ?x218 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214)) (* 36 ?x218 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x236 (- (- ?x232 (* 9 s00 ?x214)) (* 36 ?x218 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x240 (+ ?x236 (* 36 r00 r00 s00 ?x214) (* 24 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214) ?x239)))
 (let ((?x242 (- ?x240 (* 54 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x246 (- (+ ?x242 (* 4 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x213 ?x214)) (* 15 ?x218 ?x218 ?x218 ?x213 ?x213 s00 s00 ?x214))))
 (let ((?x249 (+ ?x246 (* 3 ?x213 ?x213 ?x214) (* 54 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x253 (- (- ?x249 (* 15 s00 s00 ?x214)) (* 12 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214))))
 (let ((?x258 (+ ?x253 ?x254 (* 24 ?x218 ?x218 ?x218 r00 ?x213 ?x213 s00 ?x214) (* 36 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214) (* 24 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 s00 ?x214))))
 (let ((?x262 (+ (- ?x258 (* 36 r00 r00 ?x214 x00)) (* 2 r00 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214))))
 (let ((?x267 (- (- ?x262 (* 24 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x214)) (* 36 r00 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214))))
 (let ((?x268 (- ?x267 (* 3 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x272 (+ ?x268 (* 4 r00 ?x213 ?x213 ?x214) (* 4 ?x218 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214) (* 6 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 x00))))
 (let ((?x277 (- ?x272 (* 24 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x283 (+ (- (- (- ?x277 ?x274) (* 24 ?x218 ?x213 ?x214)) ?x276) (* 54 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00) (* 24 r00 s00 ?x214))))
 (let ((?x287 (- (- ?x283 (* 54 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x214 x00)) ?x285)))
 (let ((?x292 (- (+ ?x287 (* 9 ?x213 ?x214)) (* 54 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x295 (+ (- ?x292 (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x214 x00)) (* 54 ?x218 ?x214 ?x214))))
 (let ((?x299 (+ (- ?x295 (* 2 ?x218 ?x218 ?x218 r00 ?x213 ?x213 s00 s00 ?x214)) ?x298)))
 (let ((?x307 (- (- ?x299 (* 24 ?x218 ?x213 ?x213 ?x213 s00 ?x214 ?x214)) (* 24 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x309 (- (- ?x307 (* 2 ?x218 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214)) (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x213 ?x214))))
 (let ((?x315 (+ (- (- ?x309 (* 6 ?x213 ?x214 x00)) (* 6 s00 ?x214 ?x214)) (* 6 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 9 ?x213 ?x213 ?x213 s00 ?x214 ?x214) (* 54 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x320 (+ (- ?x315 (* 6 ?x213 ?x213 ?x213 s00 ?x214 ?x214 x00)) (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x214 ?x214) (* 36 ?x218 r00 ?x213 ?x213 ?x213 ?x214 ?x214 x00))))
 (let ((?x326 (- (- ?x320 (* 2 r00 ?x213 s00 ?x214)) (* 54 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x328 (- (- ?x326 (* 24 r00 ?x213 ?x214)) (* 36 ?x218 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x214 x00))))
 (let ((?x333 (+ ?x328 (* 12 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 ?x214) (* 6 ?x213 ?x214 ?x214) (* 2 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 ?x214) (* 12 ?x213 s00 ?x214))))
 (let ((?x337 (+ (- ?x333 (* 4 r00 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214)) (* 54 r00 ?x213 ?x213 ?x213 ?x214 ?x214 x00))))
 (let ((?x342 (+ (- ?x337 (* 2 r00 s00 s00 ?x214)) (* 15 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214) (* 54 r00 ?x214 ?x214))))
 (let ((?x348 (+ (- ?x342 (* 9 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214)) ?x345 (* 3 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214) (* 36 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 x00))))
 (let ((?x352 (- (- ?x348 (* 6 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)) (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 x00))))
 (let ((?x356 (- (+ ?x352 ?x353) (* 24 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x214))))
 (let ((?x362 (- (+ ?x356 (* 15 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214)) (* 54 r00 ?x214 x00))))
 (let ((?x364 (- (- ?x362 ?x360) (* 12 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x368 (- (+ ?x364 (* 2 r00 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214)) (* 4 ?x218 s00 s00 ?x214))))
 (let ((?x373 (- (+ ?x368 (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 s00 ?x214 x00)) (* 54 ?x218 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x379 (+ (- ?x373 (* 2 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 s00 ?x214)) (* 54 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00) (* 24 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214) (* 9 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x214) (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 s00 ?x214))))
 (let ((?x386 (- (- ?x379 (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 s00 ?x214 ?x214)) ?x381)))
 (let ((?x388 (- (- ?x386 (* 36 ?x218 r00 ?x214 x00)) (* 36 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x394 (+ (- ?x388 (* 36 r00 r00 ?x213 ?x214)) (* 2 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214) (* 36 r00 r00 ?x214 ?x214) (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x214 ?x214) (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00))))
 (let ((?x398 (+ (- ?x394 ?x395) (* 9 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x403 (- (- ?x398 (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x214 x00)) (* 9 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x404 (- ?x403 (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x408 (+ ?x404 (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 ?x214) ?x406 (* 24 ?x218 s00 ?x214))))
 (let ((?x415 (+ (- ?x408 (* 54 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x214 x00)) (* 2 ?x218 ?x213 s00 ?x214) (* 24 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214) (* 24 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214) (* 2 ?x218 ?x213 ?x213 ?x214))))
 (let (($x419 (not (= (- ?x415 (* 9 ?x218 ?x218 ?x218 ?x213 ?x213 s00 ?x214)) 0))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x419))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2851 (lambda ((r Int) (s Int) (x Int) )(let ((?x212 (* 6 r)))
 (let ((?x2403 (+ 3 s ?x212)))
 (let ((?x425 (* (- 1) s)))
 (let ((?x3669 (+ x ?x425)))
 (let ((?x1732 (+ 1 r)))
 (let ((?x2898 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)))
 (let ((?x2715 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2076 (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2646 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2436 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2197 (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1649 (* x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1700 (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x605 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x582 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1311 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1248 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x874 (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x670 (* s00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2133 (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3529 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3879 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3708 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x4549 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1545 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1841 (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x1019 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x3050 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x1289 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x2813 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x906 (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x3266 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)))
 (let ((?x4523 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)))
 (let ((?x2979 (+ (* (- 3) (* ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* 6 (* s00 x00 ?x3669)) (* 36 (* r00 ?x1732 ?x3669 ?x3669)) (* (- 24) (* r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* x00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* x00 ?x1732 ?x3669)) (* (- 4) (* s00 s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 2) (* s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 9) (* s00 ?x3669)) (* (- 36) (* r00 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 s00 ?x3669)) (* 24 (* ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 ?x4523) (* (- 54) ?x3266) (* 4 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 15) (* s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 3 (* ?x3669 ?x2403 ?x2403)) (* 54 (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 15) (* s00 s00 ?x3669)) (* (- 12) (* s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 4 ?x906) (* 24 (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 36 (* r00 r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 24 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 36) (* r00 r00 x00 ?x3669)) (* 2 (* r00 s00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 24) (* r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 3) ?x2813) (* 4 (* r00 ?x3669 ?x2403 ?x2403)) (* 4 (* s00 s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 24) ?x1289) (* (- 2) ?x3050) (* (- 24) (* ?x1732 ?x3669 ?x2403)) (* (- 4) ?x1019) (* 54 ?x1841) (* 24 (* r00 s00 ?x3669)) (* (- 54) (* x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 2) ?x1545) (* 9 (* ?x3669 ?x2403)) (* (- 54) (* r00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* ?x1732 ?x3669 ?x3669)) (* (- 2) (* r00 s00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 2 ?x4549) (* (- 24) (* s00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 24) ?x3708) (* (- 2) (* ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* x00 ?x3669 ?x2403)) (* (- 6) (* s00 ?x3669 ?x3669)) (* 6 (* s00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 9 (* s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 6) (* s00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 x00 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 2) (* r00 s00 ?x3669 ?x2403)) (* (- 54) ?x3879) (* (- 24) (* r00 ?x3669 ?x2403)) (* (- 36) (* r00 x00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 12 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 6 (* ?x3669 ?x3669 ?x2403)) (* 2 (* s00 ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 12 (* s00 ?x3669 ?x2403)) (* (- 4) (* r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403 ?x2403)) (* 54 (* r00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 2) (* r00 s00 s00 ?x3669)) (* 15 ?x3529) (* 54 (* r00 ?x3669 ?x3669)) (* (- 9) (* ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 ?x2133) (* 3 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 x00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 6) (* ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 6) ?x670) (* 36 ?x874) (* (- 24) (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 15 (* s00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 54) (* r00 x00 ?x3669)) (* (- 36) ?x1248) (* (- 12) ?x1311) (* 2 (* r00 s00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 4) (* s00 s00 ?x1732 ?x3669)) (* 6 (* s00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 54) (* ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 2) (* r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 54 ?x582) (* 24 ?x605) (* 9 (* ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 6) (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* (- 36) ?x1700) (* (- 36) (* r00 x00 ?x1732 ?x3669)) (* (- 36) (* r00 r00 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 ?x3669 ?x2403)) (* 2 (* ?x1732 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 36 (* r00 r00 ?x3669 ?x3669)) (* 36 (* r00 r00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x2403 ?x2403)) (* 6 ?x1649) (* (- 36) ?x2197) (* 9 (* s00 ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403)) (* (- 36) (* r00 r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 9) (* ?x1732 ?x1732 ?x1732 ?x3669 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* (- 6) ?x2436) (* 6 ?x2646) (* 2 ?x2076) (* 24 (* s00 ?x1732 ?x3669)) (* (- 54) (* r00 x00 ?x1732 ?x1732 ?x1732 ?x3669 ?x2403 ?x2403)) (* 2 (* s00 ?x1732 ?x3669 ?x2403)) (* 24 (* r00 ?x3669 ?x3669 ?x2403 ?x2403 ?x2403 ?x2403)) (* 24 ?x2715) (* 2 (* ?x1732 ?x3669 ?x2403 ?x2403)) (* (- 9) ?x2898))))
 (let ((?x1491 (* x00 x00)))
 (let ((?x4052 (* 108 ?x1491)))
 (let ((?x3849 (* (- 9) s)))
 (let ((?x684 (* r00 r00 s00)))
 (let ((?x4169 (* (- 36) ?x684)))
 (let ((?x137 (* 9 s00)))
 (let ((?x736 (* s00 s00)))
 (let ((?x803 (* 51 ?x736)))
 (let ((?x1000 (* r00 r00 s)))
 (let ((?x4216 (* 36 ?x1000)))
 (let ((?x1329 (* s00 s00 s00)))
 (let ((?x4566 (* 16 ?x1329)))
 (let ((?x950 (* s00 x00)))
 (let ((?x1604 (* (- 108) ?x950)))
 (let ((?x1027 (* r00 r00 r00 x00)))
 (let ((?x3165 (* (- 432) ?x1027)))
 (let ((?x667 (* r00 x00)))
 (let ((?x2378 (* 108 ?x667)))
 (let ((?x4679 (+ (* 216 (* r00 s00 x00)) ?x2378 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3165 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1604 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4566 (* (- 108) (* x s)) ?x4216 ?x803 (* (- 108) (* r00 x)) ?x137 ?x4169 ?x3849 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4052)))
 (let (($x4537 (= ?x4679 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1132 (* (- 9) s00)))
 (let ((?x1061 (* (- 15) ?x736)))
 (let ((?x1022 (* r00 r00 x00)))
 (let ((?x1035 (* (- 36) ?x1022)))
 (let ((?x951 (* 6 ?x950)))
 (let ((?x690 (* s s)))
 (let ((?x714 (* 3 ?x690)))
 (let ((?x696 (* (- 54) ?x667)))
 (let ((?x4891 (+ (* (- 24) (* s r)) ?x696 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x714 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x951 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1000) ?x1035 ?x1061 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1132 (* 36 ?x684) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x523 (* (- 3) s00)))
 (let ((?x749 (* (- 4) ?x736)))
 (let ((?x691 (* 2 ?x690)))
 (let ((?x681 (* (- 18) ?x667)))
 (let ((?x3401 (+ (* (- 9) (* s r)) ?x681 (* 9 (* r00 s00)) ?x691 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1000) ?x749 (* 18 (* r00 x)) ?x523 (* 6 ?x684) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1797 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x523 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2994 (= (+ s00 ?x425 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1684 (and $x2994 (= ?x1797 0) (= ?x3401 0) (= ?x4891 0) $x4537 (not (= ?x2979 0)))))
 (let ((?x214 (- x s)))
 (let ((?x213 (+ s ?x212 3)))
 (let ((?x218 (+ r 1)))
 (let ((?x406 (* 2 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214)))
 (let ((?x395 (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)))
 (let ((?x381 (* 36 ?x218 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214)))
 (let ((?x360 (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214)))
 (let ((?x353 (* 36 ?x218 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00)))
 (let ((?x345 (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00)))
 (let ((?x298 (* 2 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)))
 (let ((?x285 (* 2 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)))
 (let ((?x276 (* 4 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)))
 (let ((?x274 (* 2 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)))
 (let ((?x254 (* 4 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214)))
 (let ((?x239 (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)))
 (let ((?x220 (+ (* (- 3) ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214) (* 6 s00 ?x214 x00) (* 36 ?x218 r00 ?x214 ?x214))))
 (let ((?x224 (+ (- ?x220 (* 24 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214)) (* 54 ?x218 ?x213 ?x213 ?x213 ?x214 ?x214 x00))))
 (let ((?x229 (- (- ?x224 (* 54 ?x218 ?x214 x00)) (* 4 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 s00 s00 ?x214))))
 (let ((?x232 (+ (- ?x229 (* 2 ?x218 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214)) (* 36 ?x218 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x236 (- (- ?x232 (* 9 s00 ?x214)) (* 36 ?x218 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x240 (+ ?x236 (* 36 r00 r00 s00 ?x214) (* 24 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214) ?x239)))
 (let ((?x242 (- ?x240 (* 54 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x246 (- (+ ?x242 (* 4 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x213 ?x214)) (* 15 ?x218 ?x218 ?x218 ?x213 ?x213 s00 s00 ?x214))))
 (let ((?x249 (+ ?x246 (* 3 ?x213 ?x213 ?x214) (* 54 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x253 (- (- ?x249 (* 15 s00 s00 ?x214)) (* 12 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214))))
 (let ((?x258 (+ ?x253 ?x254 (* 24 ?x218 ?x218 ?x218 r00 ?x213 ?x213 s00 ?x214) (* 36 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214) (* 24 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 s00 ?x214))))
 (let ((?x262 (+ (- ?x258 (* 36 r00 r00 ?x214 x00)) (* 2 r00 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214))))
 (let ((?x267 (- (- ?x262 (* 24 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x214)) (* 36 r00 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214))))
 (let ((?x268 (- ?x267 (* 3 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x272 (+ ?x268 (* 4 r00 ?x213 ?x213 ?x214) (* 4 ?x218 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214) (* 6 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 x00))))
 (let ((?x277 (- ?x272 (* 24 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x283 (+ (- (- (- ?x277 ?x274) (* 24 ?x218 ?x213 ?x214)) ?x276) (* 54 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00) (* 24 r00 s00 ?x214))))
 (let ((?x287 (- (- ?x283 (* 54 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x214 x00)) ?x285)))
 (let ((?x292 (- (+ ?x287 (* 9 ?x213 ?x214)) (* 54 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x295 (+ (- ?x292 (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x214 x00)) (* 54 ?x218 ?x214 ?x214))))
 (let ((?x299 (+ (- ?x295 (* 2 ?x218 ?x218 ?x218 r00 ?x213 ?x213 s00 s00 ?x214)) ?x298)))
 (let ((?x307 (- (- ?x299 (* 24 ?x218 ?x213 ?x213 ?x213 s00 ?x214 ?x214)) (* 24 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x309 (- (- ?x307 (* 2 ?x218 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214)) (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x213 ?x214))))
 (let ((?x315 (+ (- (- ?x309 (* 6 ?x213 ?x214 x00)) (* 6 s00 ?x214 ?x214)) (* 6 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 9 ?x213 ?x213 ?x213 s00 ?x214 ?x214) (* 54 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x320 (+ (- ?x315 (* 6 ?x213 ?x213 ?x213 s00 ?x214 ?x214 x00)) (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x214 ?x214) (* 36 ?x218 r00 ?x213 ?x213 ?x213 ?x214 ?x214 x00))))
 (let ((?x326 (- (- ?x320 (* 2 r00 ?x213 s00 ?x214)) (* 54 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x328 (- (- ?x326 (* 24 r00 ?x213 ?x214)) (* 36 ?x218 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x214 x00))))
 (let ((?x333 (+ ?x328 (* 12 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 ?x214) (* 6 ?x213 ?x214 ?x214) (* 2 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 ?x214) (* 12 ?x213 s00 ?x214))))
 (let ((?x337 (+ (- ?x333 (* 4 r00 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214)) (* 54 r00 ?x213 ?x213 ?x213 ?x214 ?x214 x00))))
 (let ((?x342 (+ (- ?x337 (* 2 r00 s00 s00 ?x214)) (* 15 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214) (* 54 r00 ?x214 ?x214))))
 (let ((?x348 (+ (- ?x342 (* 9 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214)) ?x345 (* 3 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214) (* 36 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 x00))))
 (let ((?x352 (- (- ?x348 (* 6 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)) (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 x00))))
 (let ((?x356 (- (+ ?x352 ?x353) (* 24 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x214))))
 (let ((?x362 (- (+ ?x356 (* 15 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214)) (* 54 r00 ?x214 x00))))
 (let ((?x364 (- (- ?x362 ?x360) (* 12 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x368 (- (+ ?x364 (* 2 r00 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214)) (* 4 ?x218 s00 s00 ?x214))))
 (let ((?x373 (- (+ ?x368 (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 s00 ?x214 x00)) (* 54 ?x218 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x379 (+ (- ?x373 (* 2 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 s00 ?x214)) (* 54 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00) (* 24 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214) (* 9 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x214) (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 s00 ?x214))))
 (let ((?x386 (- (- ?x379 (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 s00 ?x214 ?x214)) ?x381)))
 (let ((?x388 (- (- ?x386 (* 36 ?x218 r00 ?x214 x00)) (* 36 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x394 (+ (- ?x388 (* 36 r00 r00 ?x213 ?x214)) (* 2 ?x218 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214) (* 36 r00 r00 ?x214 ?x214) (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x214 ?x214) (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00))))
 (let ((?x398 (+ (- ?x394 ?x395) (* 9 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x403 (- (- ?x398 (* 36 ?x218 ?x218 ?x218 r00 r00 ?x213 ?x213 ?x214 x00)) (* 9 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x404 (- ?x403 (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x408 (+ ?x404 (* 6 ?x218 ?x218 ?x218 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 ?x214) ?x406 (* 24 ?x218 s00 ?x214))))
 (let ((?x415 (+ (- ?x408 (* 54 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x214 x00)) (* 2 ?x218 ?x213 s00 ?x214) (* 24 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214) (* 24 ?x218 ?x218 ?x218 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214) (* 2 ?x218 ?x213 ?x213 ?x214))))
 (let (($x419 (not (= (- ?x415 (* 9 ?x218 ?x218 ?x218 ?x213 ?x213 s00 ?x214)) 0))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x421 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x419))))
 (rewrite (= $x421 $x1684))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x423 (asserted $x422)))
 (let ((@x2155 (mp (mp @x423 (quant-intro (proof-bind ?x2851) (= $x422 $x2652)) $x2652) (rewrite (= $x2652 $x2652)) $x2652)))
 (let ((@x3474 (mp (mp @x2155 (quant-intro (proof-bind ?x1862) (= $x2652 $x2294)) $x2294) (quant-intro (proof-bind ?x3668) (= $x2294 $x3210)) $x3210)))
 (let ((@x740 (mp (mp~ @x3474 (sk (~ $x3210 $x465)) $x465) (rewrite (= $x465 $x4098)) $x4098)))
 (let ((@x882 (and-elim @x740 $x4186)))
 (let ((@x1497 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4186) $x2129)) @x882 $x2129)))
 (let (($x4439 (>= ?x4384 0)))
 (let ((@x1144 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4186) $x4439)) @x882 $x4439)))
 (let (($x3594 (<= ?x4519 0)))
 (let ((@x1342 (and-elim @x740 $x4516)))
 (let ((@x2782 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4516) $x3594)) @x1342 $x3594)))
 (let (($x3597 (>= ?x4519 0)))
 (let ((@x4008 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4516) $x3597)) @x1342 $x3597)))
 (let (($x4436 (<= ?x1154 0)))
 (let ((@x1756 (and-elim @x740 $x1155)))
 (let ((@x1487 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1155) $x4436)) @x1756 $x4436)))
 (let (($x4019 (>= ?x1154 0)))
 (let ((@x1570 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1155) $x4019)) @x1756 $x4019)))
 (let (($x1858 (<= ?x522 0)))
 (let ((@x1179 (and-elim @x740 $x546)))
 (let ((@x4255 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x546) $x1858)) @x1179 $x1858)))
 (let (($x4431 (>= ?x522 0)))
 (let ((@x1546 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x546) $x4431)) @x1179 $x4431)))
 (let (($x4428 (<= ?x1781 0)))
 (let ((@x3072 (and-elim @x740 $x1267)))
 (let ((@x3285 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1267) $x4428)) @x3072 $x4428)))
 (let (($x805 (>= ?x1781 0)))
 (let ((@x1450 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1267) $x805)) @x3072 $x805)))
 (let (($x1476 (not (<= ?x1827 0))))
 (let (($x2805 (>= ?x1827 0)))
 (let ((@x3225 ((_ th-lemma arith) (hypothesis (not $x2805)) @x1144 @x1497 @x1570 @x1487 @x1570 @x1487 @x1144 @x1497 @x1570 @x1487 @x1450 @x3285 @x1144 @x1497 @x1546 @x4255 @x1144 @x1497 @x1570 @x1487 @x4008 @x2782 @x1144 @x1497 @x1570 @x1487 @x4008 @x2782 @x1144 @x1497 false)))
 (let ((@x2975 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1961 $x1476 (not $x2805))) (and-elim @x740 $x1182) (or $x1476 (not $x2805)))))
 ((_ th-lemma arith) (unit-resolution @x2975 (lemma @x3225 $x2805) $x1476) @x1144 @x1497 @x1570 @x1487 @x1570 @x1487 @x1144 @x1497 @x1570 @x1487 @x1450 @x3285 @x1144 @x1497 @x1546 @x4255 @x1144 @x1497 @x1570 @x1487 @x4008 @x2782 @x1144 @x1497 @x1570 @x1487 @x4008 @x2782 @x1144 @x1497 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        33
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1566
 :arith-nonlinear-bounds    26
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      8
 :arith-tableau-max-columns 258
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.66
 :memory                    3.71
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                4633522
 :num-checks                1
 :propagations              12
 :rlimit-count              62417
 :time                      0.07
 :total-time                0.09)
