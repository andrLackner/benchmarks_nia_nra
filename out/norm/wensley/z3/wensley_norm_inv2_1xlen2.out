unsat
((set-logic NRA)
(declare-fun a!8 () Real)
(declare-fun b!7 () Real)
(declare-fun d!6 () Real)
(declare-fun y!5 () Real)
(proof
(let ((?x630 (* d00 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8)))
 (let ((?x579 (* b00 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8)))
 (let ((?x189 (+ (* (/ 1.0 64.0) ?x579) (* (- (/ 1.0 32.0)) (* b00 y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8)) (* (- (/ 1.0 64.0)) ?x630) (* (/ 1.0 32.0) (* d00 y!5 y!5 d!6 d!6 b!7 b!7 b!7 a!8)))))
 (let (($x147 (<= ?x189 0.0)))
 (let (($x896 (not $x147)))
 (let (($x145 (= 0.0 ?x189)))
 (let (($x812 (not $x145)))
 (let ((@x776 (symm (commutativity (= $x145 (= ?x189 0.0))) (= (= ?x189 0.0) $x145))))
 (let (($x198 (= ?x189 0.0)))
 (let (($x128 (not $x198)))
 (let ((?x352 (* (- (/ 1.0 64.0)) (* b00 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7))))
 (let ((?x552 (* (- (/ 1.0 64.0)) (* b00 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7))))
 (let ((?x577 (* (/ 1.0 64.0) (* d00 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8))))
 (let ((?x649 (* (/ 1.0 64.0) (* d00 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x650 (* (/ 1.0 64.0) (* d00 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x576 (* (- (/ 1.0 256.0)) (* b00 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8))))
 (let ((?x585 (* (- (/ 1.0 64.0)) (* b00 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8))))
 (let ((?x383 (* (- (/ 1.0 256.0)) (* b00 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7))))
 (let ((?x567 (* (/ 1.0 256.0) (* d00 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x652 (* (/ 1.0 256.0) (* d00 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8))))
 (let ((?x528 (+ (* (/ 1.0 32.0) (* b00 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7)) ?x652 ?x567 ?x383 (* (- (/ 1.0 128.0)) (* d00 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (- (/ 1.0 128.0)) (* d00 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) ?x585 (* (/ 1.0 32.0) (* b00 y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (- (/ 1.0 64.0)) ?x579) (* (- (/ 1.0 32.0)) (* d00 y!5 y!5 d!6 d!6 b!7 b!7 b!7 b!7)) (* (- (/ 1.0 32.0)) (* d00 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) ?x576 (* (- (/ 1.0 32.0)) (* d00 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 1.0 32.0) (* b00 y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 1.0 32.0) (* b00 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 64.0) ?x630) (* (- (/ 1.0 32.0)) (* d00 y!5 y!5 d!6 d!6 b!7 b!7 b!7 a!8)) ?x650 ?x649 ?x577 (* (/ 1.0 128.0) (* b00 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) ?x552 (* (/ 1.0 128.0) (* b00 d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) ?x352)))
 (let (($x535 (= ?x528 0.0)))
 (let (($x277 (= 0.0 ?x528)))
 (let (($x286 (<= ?x528 0.0)))
 (let ((?x206 (+ (* a00 d!6) (* (- 2.0) (* y00 b!7)) (* (- 1.0) (* d!6 a!8)) (* 2.0 (* y!5 b!7)))))
 (let (($x261 (>= ?x206 0.0)))
 (let (($x642 (= 0.0 ?x206)))
 (let ((@x1009 (symm (commutativity (= $x642 (= ?x206 0.0))) (= (= ?x206 0.0) $x642))))
 (let (($x262 (= ?x206 0.0)))
 (let (($x536 (or $x128 (not $x535))))
 (let ((?x167 (+ (* d00 b!7) (* (- 1.0) (* b00 d!6)))))
 (let (($x605 (= ?x167 0.0)))
 (let ((?x82 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x250 (= (+ ?x30 ?x82 (* 2.0 (* b00 y!5)) (* (- 1.0) (* d00 a!8))) 0.0)))
 (let (($x648 (and $x250 $x605 $x262 $x536)))
 (let ((?x329 (* (- (/ 1.0 256.0)) (* d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8 b00))))
 (let ((?x318 (* (- (/ 1.0 256.0)) (* d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b00))))
 (let ((?x530 (* (- (/ 1.0 64.0)) (* y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8 b00))))
 (let ((?x522 (* (- (/ 1.0 64.0)) (* y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b00))))
 (let ((?x443 (* (- (/ 1.0 64.0)) (* y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b00))))
 (let ((?x364 (* (/ 1.0 256.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 d00))))
 (let ((?x166 (* (/ 1.0 256.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 d00))))
 (let ((?x509 (* (/ 1.0 64.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 d00))))
 (let ((?x366 (* (- (/ 1.0 32.0)) (* y!5 y!5 d!6 d!6 b!7 b!7 b!7 a!8 d00))))
 (let ((?x184 (* (/ 1.0 64.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 d00))))
 (let ((?x355 (* (- (/ 1.0 64.0)) (* y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8 b00))))
 (let ((?x197 (* (/ 1.0 64.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 d00))))
 (let ((?x624 (* (/ 1.0 32.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8 b00))))
 (let ((?x615 (* (/ 1.0 64.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 d00))))
 (let ((?x293 (+ ?x615 ?x624 ?x197 ?x355 ?x184 ?x366 ?x509 ?x166 ?x364 (* (/ 1.0 32.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b00)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b00)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8 b00)) (* (/ 1.0 128.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b00)) (* (/ 1.0 128.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8 b00)) ?x443 ?x522 ?x530 ?x318 ?x329 (* (- (/ 1.0 32.0)) (* y!5 y!5 d!6 d!6 b!7 b!7 b!7 b!7 d00)) (* (- (/ 1.0 32.0)) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 d00)) (* (- (/ 1.0 32.0)) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 d00)) (* (- (/ 1.0 128.0)) (* d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 d00)) (* (- (/ 1.0 128.0)) (* d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 d00)))))
 (let ((?x430 (* d!6 a!8)))
 (let ((?x449 (+ ?x430 (* (- 2.0) (* y!5 b!7)) (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00)))))
 (let (($x285 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x82 (* 2.0 (* y!5 b00))) 0.0)))
 (let (($x170 (and $x285 (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) (= ?x449 0.0) (or (not (= (+ ?x615 ?x624 ?x355 ?x366) 0.0)) (not (= ?x293 0.0))))))
 (let (($x138 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x228 (* (- (/ 1.0 32.0)) (* y y d d b b b a d00))))
 (let ((?x227 (* (- (/ 1.0 64.0)) (* y y d d d d b b a b00))))
 (let ((?x165 (* (/ 1.0 32.0) (* y y d d d b b a b00))))
 (let ((?x226 (* (/ 1.0 64.0) (* y y d d d b b b a d00))))
 (let ((?x702 (+ ?x226 ?x165 (* (/ 1.0 64.0) (* y y d d d b b b b d00)) ?x227 (* (/ 1.0 64.0) (* y d d d d b b b b d00)) ?x228 (* (/ 1.0 64.0) (* y d d d d b b b a d00)) (* (/ 1.0 256.0) (* d d d d d b b b b d00)) (* (/ 1.0 256.0) (* d d d d d b b b a d00)) (* (/ 1.0 32.0) (* y y d d d b b b b00)) (* (/ 1.0 32.0) (* y d d d d b b b b00)) (* (/ 1.0 32.0) (* y d d d d b b a b00)) (* (/ 1.0 128.0) (* d d d d d b b b b00)) (* (/ 1.0 128.0) (* d d d d d b b a b00)) (* (- (/ 1.0 64.0)) (* y y d d d d b b b b00)) (* (- (/ 1.0 64.0)) (* y d d d d d b b b b00)) (* (- (/ 1.0 64.0)) (* y d d d d d b b a b00)) (* (- (/ 1.0 256.0)) (* d d d d d d b b b b00)) (* (- (/ 1.0 256.0)) (* d d d d d d b b a b00)) (* (- (/ 1.0 32.0)) (* y y d d b b b b d00)) (* (- (/ 1.0 32.0)) (* y d d d b b b b d00)) (* (- (/ 1.0 32.0)) (* y d d d b b b a d00)) (* (- (/ 1.0 128.0)) (* d d d d b b b b d00)) (* (- (/ 1.0 128.0)) (* d d d d b b b a d00)))))
 (let ((?x124 (* (- 2.0) (* y b))))
 (let ((?x99 (* d a)))
 (let (($x159 (= (+ ?x99 ?x124 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let ((?x82 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x114 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x82 (* 2.0 (* y b00))) 0.0)))
 (and $x114 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0) $x159 (or (not (= (+ ?x226 ?x165 ?x227 ?x228) 0.0)) (not (= ?x702 0.0))))))))))))))) :qid k!33))
 ))
 (let (($x462 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x331 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x61 (+ a b)))
 (let ((?x440 (+ (* (- (/ 1.0 64.0)) (* d00 ?x61 ?x331 ?x331 d d d b b b)) (* (- (/ 1.0 32.0)) (* b00 ?x61 ?x331 ?x331 d d d b b)) (* (/ 1.0 64.0) (* b00 ?x61 ?x331 ?x331 d d d d b b)) (* (/ 1.0 32.0) (* d00 ?x61 ?x331 ?x331 d d b b b)))))
 (let ((?x493 (+ (* (- (/ 1.0 64.0)) (* d00 y y d d d b b b a)) (* (- (/ 1.0 32.0)) (* b00 y y d d d b b a)) (* (/ 1.0 64.0) (* b00 y y d d d d b b a)) (* (/ 1.0 32.0) (* d00 y y d d b b b a)))))
 (let ((?x124 (* (- 2.0) (* y b))))
 (let ((?x99 (* d a)))
 (let (($x225 (= (+ ?x99 ?x124 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x82 (* (- 2.0) (* b00 y00))))
 (let (($x202 (= (+ ?x82 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (and $x202 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x225 (or (not (= ?x493 0.0)) (not (= ?x440 0.0)))))))))))))) :qid k!33))
 ))
 (let ((?x267 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x228 (* (- (/ 1.0 32.0)) (* y y d d b b b a d00))))
 (let ((?x227 (* (- (/ 1.0 64.0)) (* y y d d d d b b a b00))))
 (let ((?x165 (* (/ 1.0 32.0) (* y y d d d b b a b00))))
 (let ((?x226 (* (/ 1.0 64.0) (* y y d d d b b b a d00))))
 (let ((?x702 (+ ?x226 ?x165 (* (/ 1.0 64.0) (* y y d d d b b b b d00)) ?x227 (* (/ 1.0 64.0) (* y d d d d b b b b d00)) ?x228 (* (/ 1.0 64.0) (* y d d d d b b b a d00)) (* (/ 1.0 256.0) (* d d d d d b b b b d00)) (* (/ 1.0 256.0) (* d d d d d b b b a d00)) (* (/ 1.0 32.0) (* y y d d d b b b b00)) (* (/ 1.0 32.0) (* y d d d d b b b b00)) (* (/ 1.0 32.0) (* y d d d d b b a b00)) (* (/ 1.0 128.0) (* d d d d d b b b b00)) (* (/ 1.0 128.0) (* d d d d d b b a b00)) (* (- (/ 1.0 64.0)) (* y y d d d d b b b b00)) (* (- (/ 1.0 64.0)) (* y d d d d d b b b b00)) (* (- (/ 1.0 64.0)) (* y d d d d d b b a b00)) (* (- (/ 1.0 256.0)) (* d d d d d d b b b b00)) (* (- (/ 1.0 256.0)) (* d d d d d d b b a b00)) (* (- (/ 1.0 32.0)) (* y y d d b b b b d00)) (* (- (/ 1.0 32.0)) (* y d d d b b b b d00)) (* (- (/ 1.0 32.0)) (* y d d d b b b a d00)) (* (- (/ 1.0 128.0)) (* d d d d b b b b d00)) (* (- (/ 1.0 128.0)) (* d d d d b b b a d00)))))
 (let ((?x124 (* (- 2.0) (* y b))))
 (let ((?x99 (* d a)))
 (let (($x159 (= (+ ?x99 ?x124 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let ((?x82 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x114 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x82 (* 2.0 (* y b00))) 0.0)))
 (let (($x709 (and $x114 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0) $x159 (or (not (= (+ ?x226 ?x165 ?x227 ?x228) 0.0)) (not (= ?x702 0.0))))))
 (let ((?x331 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x61 (+ a b)))
 (let ((?x440 (+ (* (- (/ 1.0 64.0)) (* d00 ?x61 ?x331 ?x331 d d d b b b)) (* (- (/ 1.0 32.0)) (* b00 ?x61 ?x331 ?x331 d d d b b)) (* (/ 1.0 64.0) (* b00 ?x61 ?x331 ?x331 d d d d b b)) (* (/ 1.0 32.0) (* d00 ?x61 ?x331 ?x331 d d b b b)))))
 (let ((?x493 (+ (* (- (/ 1.0 64.0)) (* d00 y y d d d b b b a)) (* (- (/ 1.0 32.0)) (* b00 y y d d d b b a)) (* (/ 1.0 64.0) (* b00 y y d d d d b b a)) (* (/ 1.0 32.0) (* d00 y y d d b b b a)))))
 (let (($x225 (= (+ ?x99 ?x124 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x202 (= (+ ?x82 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x183 (and $x202 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x225 (or (not (= ?x493 0.0)) (not (= ?x440 0.0))))))
 (rewrite (= $x183 $x709))))))))))))))))))))))
 ))
 (let (($x73 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x52 (/ d 2.0)))
 (let ((?x62 (+ y ?x52)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x61 (+ a b)))
 (let ((?x65 (- (* (- 1.0) ?x61 ?x51 ?x51 ?x51 ?x52 ?x52 ?x52 d00 ?x62 ?x62) (* ?x61 ?x51 ?x51 b00 ?x52 ?x52 ?x52 ?x62 ?x62))))
 (let ((?x68 (+ ?x65 (* ?x61 ?x51 ?x51 b00 ?x52 ?x52 ?x52 ?x52 ?x62 ?x62) (* ?x61 ?x51 ?x51 ?x51 ?x52 ?x52 d00 ?x62 ?x62))))
 (let ((?x55 (- (* (- 1.0) a ?x51 ?x51 ?x51 ?x52 ?x52 ?x52 d00 y y) (* a ?x51 ?x51 b00 ?x52 ?x52 ?x52 y y))))
 (let ((?x58 (+ ?x55 (* a ?x51 ?x51 b00 ?x52 ?x52 ?x52 ?x52 y y) (* a ?x51 ?x51 ?x51 ?x52 ?x52 d00 y y))))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let ((?x30 (* a00 d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x58 0.0)) (not (= ?x68 0.0))))))))))))))))) :qid k!33))
 ))
 (let ((?x210 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x331 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x61 (+ a b)))
 (let ((?x440 (+ (* (- (/ 1.0 64.0)) (* d00 ?x61 ?x331 ?x331 d d d b b b)) (* (- (/ 1.0 32.0)) (* b00 ?x61 ?x331 ?x331 d d d b b)) (* (/ 1.0 64.0) (* b00 ?x61 ?x331 ?x331 d d d d b b)) (* (/ 1.0 32.0) (* d00 ?x61 ?x331 ?x331 d d b b b)))))
 (let ((?x493 (+ (* (- (/ 1.0 64.0)) (* d00 y y d d d b b b a)) (* (- (/ 1.0 32.0)) (* b00 y y d d d b b a)) (* (/ 1.0 64.0) (* b00 y y d d d d b b a)) (* (/ 1.0 32.0) (* d00 y y d d b b b a)))))
 (let ((?x124 (* (- 2.0) (* y b))))
 (let ((?x99 (* d a)))
 (let (($x225 (= (+ ?x99 ?x124 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x82 (* (- 2.0) (* b00 y00))))
 (let (($x202 (= (+ ?x82 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x183 (and $x202 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x225 (or (not (= ?x493 0.0)) (not (= ?x440 0.0))))))
 (let ((?x52 (/ d 2.0)))
 (let ((?x62 (+ y ?x52)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x65 (- (* (- 1.0) ?x61 ?x51 ?x51 ?x51 ?x52 ?x52 ?x52 d00 ?x62 ?x62) (* ?x61 ?x51 ?x51 b00 ?x52 ?x52 ?x52 ?x62 ?x62))))
 (let ((?x68 (+ ?x65 (* ?x61 ?x51 ?x51 b00 ?x52 ?x52 ?x52 ?x52 ?x62 ?x62) (* ?x61 ?x51 ?x51 ?x51 ?x52 ?x52 d00 ?x62 ?x62))))
 (let ((?x55 (- (* (- 1.0) a ?x51 ?x51 ?x51 ?x52 ?x52 ?x52 d00 y y) (* a ?x51 ?x51 b00 ?x52 ?x52 ?x52 y y))))
 (let ((?x58 (+ ?x55 (* a ?x51 ?x51 b00 ?x52 ?x52 ?x52 ?x52 y y) (* a ?x51 ?x51 ?x51 ?x52 ?x52 d00 y y))))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (let (($x72 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x58 0.0)) (not (= ?x68 0.0))))))
 (rewrite (= $x72 $x183))))))))))))))))))))))))))
 ))
 (let ((@x74 (asserted $x73)))
 (let ((@x233 (mp (mp @x74 (quant-intro (proof-bind ?x210) (= $x73 $x462)) $x462) (quant-intro (proof-bind ?x267) (= $x462 $x138)) $x138)))
 (let ((@x455 (mp (mp~ @x233 (sk (~ $x138 $x170)) $x170) (rewrite (= $x170 $x648)) $x648)))
 (let ((@x1010 (mp (and-elim @x455 $x262) @x1009 $x642)))
 (let ((@x1014 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x642) $x261)) @x1010 $x261)))
 (let (($x612 (<= ?x206 0.0)))
 (let ((@x1011 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x642) $x612)) @x1010 $x612)))
 (let (($x636 (>= ?x167 0.0)))
 (let (($x647 (= 0.0 ?x167)))
 (let ((@x998 (mp (and-elim @x455 $x605) (symm (commutativity (= $x647 $x605)) (= $x605 $x647)) $x647)))
 (let ((@x1002 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x647) $x636)) @x998 $x636)))
 (let (($x616 (<= ?x167 0.0)))
 (let ((@x999 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x647) $x616)) @x998 $x616)))
 (let ((@x403 (unit-resolution ((_ th-lemma arith) (or (not $x636) (not $x612) (not $x261) (not $x616) $x286)) @x999 @x1002 @x1011 @x1014 (hypothesis (not $x286)) false)))
 (let ((@x410 (lemma @x403 $x286)))
 (let (($x279 (>= ?x528 0.0)))
 (let ((@x1017 (unit-resolution ((_ th-lemma arith) (or (not $x616) (not $x612) (not $x261) (not $x636) $x279)) @x999 @x1002 @x1011 @x1014 (hypothesis (not $x279)) false)))
 (let ((@x1018 (lemma @x1017 $x279)))
 (let ((@x717 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x277 (not $x286) (not $x279))) @x1018 (or $x277 (not $x286)))))
 (let ((@x731 (mp (unit-resolution @x717 @x410 $x277) (commutativity (= $x277 $x535)) $x535)))
 (let ((@x895 (mp (unit-resolution (and-elim @x455 $x536) @x731 $x128) (monotonicity @x776 (= $x128 $x812)) $x812)))
 (let (($x156 (>= ?x189 0.0)))
 (let (($x988 (not $x636)))
 (let (($x985 (not $x616)))
 (let (($x1015 (not $x279)))
 (let (($x305 (not $x286)))
 (let (($x987 (not $x261)))
 (let (($x986 (not $x612)))
 (let ((@x419 (unit-resolution ((_ th-lemma arith) (or $x986 $x987 $x305 $x1015 $x985 $x988 $x156)) @x999 @x1002 @x1011 @x1014 (hypothesis (not $x156)) @x410 @x1018 false)))
 (let ((@x920 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x145 $x896 (not $x156))) (lemma @x419 $x156) @x895 $x896)))
 (unit-resolution ((_ th-lemma arith) (or $x985 $x988 $x986 $x987 $x147)) @x999 @x1002 @x1011 @x1014 @x920 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       111
 :arith-eq-adapter                113
 :arith-bound-propagations-cheap  215
 :arith-bound-propagations-lp     31
 :arith-conflicts                 231
 :arith-diseq                     233
 :arith-grobner-calls             8
 :arith-grobner-conflicts         4
 :arith-horner-calls              8
 :arith-horner-cross-nested-forms 30
 :arith-lower                     230
 :arith-make-feasible             197
 :arith-max-columns               108
 :arith-max-rows                  62
 :arith-nla-explanations          177
 :arith-nla-lemmas                224
 :arith-propagations              215
 :arith-upper                     244
 :conflicts                       16
 :decisions                       611
 :del-clause                      534
 :final-checks                    56
 :max-memory                      5.85
 :memory                          1.11
 :mk-bool-var                     878
 :mk-clause                       1115
 :num-allocs                      1360436932
 :num-checks                      1
 :propagations                    709
 :rlimit-count                    15021
 :time                            0.83
 :total-time                      0.83)
