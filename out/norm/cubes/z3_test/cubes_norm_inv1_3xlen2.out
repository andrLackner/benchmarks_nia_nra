unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(proof
(let ((?x263 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x169 (<= ?x263 (- 6))))
 (let (($x261 (= ?x263 (- 6))))
 (let ((?x613 (+ k!2 c!3)))
 (let ((?x719 (+ k!2 m!1)))
 (let ((?x353 (+ 6 m!1)))
 (let ((?x347 (+ 1 n!0)))
 (let ((?x1066 (* ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x613)))
 (let ((?x1059 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x613)))
 (let ((?x963 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x613 ?x613 ?x613 ?x613)))
 (let ((?x957 (* ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x613 ?x613 ?x613)))
 (let ((?x946 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x613 ?x613 ?x613 ?x613 ?x613)))
 (let ((?x945 (* ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x613 ?x613 ?x613 ?x613 ?x613 ?x613)))
 (let ((?x907 (* ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x613 ?x613)))
 (let ((?x693 (* ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x613 ?x613)))
 (let ((?x654 (* ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x613 ?x613 ?x613 ?x613 ?x613 ?x613)))
 (let ((?x622 (* ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x613 ?x613 ?x613 ?x613 ?x613 ?x613)))
 (let ((?x616 (* ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x613)))
 (let ((?x561 (* ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x613 ?x613 ?x613 ?x613 ?x613)))
 (let ((?x555 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x613 ?x613 ?x613 ?x613)))
 (let ((?x508 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x719 ?x613 ?x613)))
 (let ((?x485 (* ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x613 ?x613)))
 (let ((?x380 (* ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x613 ?x613 ?x613)))
 (let ((?x379 (* ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x719 ?x613 ?x613)))
 (let ((?x376 (* ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x613 ?x613 ?x613 ?x613 ?x613)))
 (let ((?x303 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x613 ?x613 ?x613 ?x613 ?x613)))
 (let ((?x301 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x613 ?x613 ?x613 ?x613 ?x613)))
 (let ((?x274 (* ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x719 ?x613 ?x613)))
 (let ((?x159 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x613 ?x613 ?x613 ?x613)))
 (let ((?x156 (* ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x613 ?x613 ?x613)))
 (let ((?x149 (* ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x613 ?x613 ?x613 ?x613 ?x613)))
 (let ((?x329 (+ (* 6 ?x149) (* (- 1) ?x156) (* 6 ?x159) (* (- 1) ?x274) (* (- 6) ?x301) ?x303 (* 6 ?x376) (* 6 ?x379) (* 6 ?x380) ?x485 (* 6 ?x508) (* (- 1) ?x555) (* (- 1) ?x561) (* (- 6) ?x616) (* (- 6) ?x622) ?x654 (* (- 6) ?x693) (* (- 6) ?x907) (* (- 6) ?x945) (* (- 6) ?x946) (* 6 ?x957) (* 6 ?x963) (* (- 6) ?x1059) ?x1066)))
 (let (($x676 (= ?x329 0)))
 (let (($x363 (not $x676)))
 (let (($x316 (= (+ (* 3 n!0) (* 3 (* n!0 n!0)) (* (- 1) k!2)) (- 1))))
 (let (($x210 (= (+ (* 2 n!0) (* (- 1) k!2) (* (- 3) c!3) (* n!0 k!2)) (- 1))))
 (let ((?x588 (* k!2 k!2)))
 (let ((?x659 (+ (* 9 n!0) ?x588 (* (- 5) k!2) (* (- 18) c!3) (* (- 9) (* n!0 c!3)))))
 (let (($x674 (and $x261 (= ?x659 (- 4)) $x210 $x316 $x363)))
 (let ((?x724 (+ c!3 k!2)))
 (let ((?x248 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x724 ?x724 ?x724 ?x724 ?x724)))
 (let ((?x827 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x724 ?x724 ?x724 ?x724 ?x724)))
 (let ((?x201 (* ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x719 ?x724 ?x724)))
 (let ((?x252 (* ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x724 ?x724)))
 (let ((?x562 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x724)))
 (let ((?x966 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x724 ?x724 ?x724 ?x724 ?x724)))
 (let ((?x202 (* ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x724 ?x724 ?x724 ?x724 ?x724 ?x724)))
 (let ((?x584 (* ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x724 ?x724 ?x724 ?x724 ?x724 ?x724)))
 (let ((?x655 (* ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x724)))
 (let ((?x893 (* ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x724 ?x724)))
 (let ((?x563 (* ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x724 ?x724 ?x724 ?x724 ?x724 ?x724)))
 (let ((?x734 (* ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x724 ?x724)))
 (let ((?x306 (* ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x724 ?x724 ?x724)))
 (let ((?x1062 (* ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x724 ?x724 ?x724)))
 (let ((?x161 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x724 ?x724 ?x724 ?x724)))
 (let ((?x307 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x724 ?x724 ?x724 ?x724)))
 (let ((?x415 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x724 ?x724 ?x724 ?x724)))
 (let ((?x1069 (* ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x724 ?x724 ?x724)))
 (let ((?x322 (* ?x347 ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x719 ?x724 ?x724)))
 (let ((?x679 (* ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x724 ?x724 ?x724 ?x724 ?x724)))
 (let ((?x886 (* ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x724 ?x724 ?x724 ?x724 ?x724)))
 (let ((?x723 (* ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x724 ?x724 ?x724 ?x724 ?x724)))
 (let ((?x389 (* ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x719 ?x724 ?x724)))
 (let ((?x884 (* ?x347 ?x347 ?x347 ?x347 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x353 ?x719 ?x719 ?x719 ?x719 ?x719 ?x724)))
 (let ((?x493 (+ ?x884 (* 6 ?x389) (* (- 1) ?x723) (* 6 ?x886) (* 6 ?x679) (* 6 ?x322) (* 6 ?x1069) (* (- 1) ?x415) (* 6 ?x307) (* 6 ?x161) (* (- 1) ?x1062) (* 6 ?x306) (* (- 6) ?x734) (* (- 6) ?x563) ?x893 (* (- 6) ?x655) (* (- 6) ?x584) ?x202 ?x966 (* (- 6) ?x562) (* (- 6) ?x252) (* (- 1) ?x201) (* (- 6) ?x827) (* (- 6) ?x248))))
 (let (($x492 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x590 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x588) (* 9 (* c!3 n!0)))))
 (let (($x310 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x590 4) $x492 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x493 0)))))
 (let (($x1072 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x1008 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1071 (* (- 6) ?x1008)))
 (let ((?x878 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x733 (* (- 6) ?x878)))
 (let ((?x823 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x564 (* (- 1) ?x823)))
 (let ((?x817 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x606 (* (- 6) ?x817)))
 (let ((?x764 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x593 (* (- 6) ?x764)))
 (let ((?x748 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x603 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x537 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x942 (* (- 6) ?x537)))
 (let ((?x516 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x641 (* (- 6) ?x516)))
 (let ((?x500 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x407 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x342 (* (- 6) ?x407)))
 (let ((?x358 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x377 (* (- 6) ?x358)))
 (let ((?x332 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x245 (* 6 ?x332)))
 (let ((?x320 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x321 (* (- 1) ?x320)))
 (let ((?x283 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x284 (* 6 ?x283)))
 (let ((?x275 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x276 (* 6 ?x275)))
 (let ((?x260 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x250 (* (- 1) ?x260)))
 (let ((?x258 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x259 (* 6 ?x258)))
 (let ((?x242 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x131 (* 6 ?x242)))
 (let ((?x230 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x231 (* 6 ?x230)))
 (let ((?x222 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x223 (* 6 ?x222)))
 (let ((?x166 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x183 (* (- 1) ?x166)))
 (let ((?x152 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x153 (* 6 ?x152)))
 (let ((?x129 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x716 (+ ?x129 ?x153 ?x183 ?x223 ?x231 ?x131 ?x259 ?x250 ?x276 ?x284 ?x321 ?x245 ?x377 ?x342 ?x500 ?x641 ?x942 ?x603 ?x748 ?x593 ?x606 ?x564 ?x733 ?x1071)))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x239 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x235 (= ?x239 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 $x235 $x287 $x325 (not (= ?x716 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x269 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x764 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x593 (* (- 6) ?x764)))
 (let ((?x748 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x516 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x641 (* (- 6) ?x516)))
 (let ((?x500 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x358 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x377 (* (- 6) ?x358)))
 (let ((?x817 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x606 (* (- 6) ?x817)))
 (let ((?x1008 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1071 (* (- 6) ?x1008)))
 (let ((?x603 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x878 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x733 (* (- 6) ?x878)))
 (let ((?x537 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x942 (* (- 6) ?x537)))
 (let ((?x407 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x342 (* (- 6) ?x407)))
 (let ((?x823 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x564 (* (- 1) ?x823)))
 (let ((?x152 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x153 (* 6 ?x152)))
 (let ((?x129 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x242 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x131 (* 6 ?x242)))
 (let ((?x230 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x231 (* 6 ?x230)))
 (let ((?x222 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x223 (* 6 ?x222)))
 (let ((?x166 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x183 (* (- 1) ?x166)))
 (let ((?x283 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x284 (* 6 ?x283)))
 (let ((?x275 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x276 (* 6 ?x275)))
 (let ((?x260 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x250 (* (- 1) ?x260)))
 (let ((?x258 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x259 (* 6 ?x258)))
 (let ((?x332 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x245 (* 6 ?x332)))
 (let ((?x320 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x321 (* (- 1) ?x320)))
 (let ((?x1021 (+ ?x321 ?x245 ?x259 ?x250 ?x276 ?x284 ?x183 ?x223 ?x231 ?x131 ?x129 ?x153 ?x564 ?x342 ?x942 ?x733 ?x603 ?x1071 ?x606 ?x377 ?x500 ?x641 ?x748 ?x593)))
 (let (($x302 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x216 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x901 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 (= ?x901 (- 4)) $x216 $x302 (not (= ?x1021 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1068 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x1008 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1071 (* (- 6) ?x1008)))
 (let ((?x878 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x733 (* (- 6) ?x878)))
 (let ((?x823 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x564 (* (- 1) ?x823)))
 (let ((?x817 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x606 (* (- 6) ?x817)))
 (let ((?x764 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x593 (* (- 6) ?x764)))
 (let ((?x748 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x603 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x537 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x942 (* (- 6) ?x537)))
 (let ((?x516 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x641 (* (- 6) ?x516)))
 (let ((?x500 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x407 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x342 (* (- 6) ?x407)))
 (let ((?x358 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x377 (* (- 6) ?x358)))
 (let ((?x332 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x245 (* 6 ?x332)))
 (let ((?x320 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x321 (* (- 1) ?x320)))
 (let ((?x283 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x284 (* 6 ?x283)))
 (let ((?x275 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x276 (* 6 ?x275)))
 (let ((?x260 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x250 (* (- 1) ?x260)))
 (let ((?x258 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x259 (* 6 ?x258)))
 (let ((?x242 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x131 (* 6 ?x242)))
 (let ((?x230 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x231 (* 6 ?x230)))
 (let ((?x222 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x223 (* 6 ?x222)))
 (let ((?x166 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x183 (* (- 1) ?x166)))
 (let ((?x152 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x153 (* 6 ?x152)))
 (let ((?x129 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x716 (+ ?x129 ?x153 ?x183 ?x223 ?x231 ?x131 ?x259 ?x250 ?x276 ?x284 ?x321 ?x245 ?x377 ?x342 ?x500 ?x641 ?x942 ?x603 ?x748 ?x593 ?x606 ?x564 ?x733 ?x1071)))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x239 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x235 (= ?x239 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x587 (and $x151 $x235 $x287 $x325 (not (= ?x716 0)))))
 (let ((?x1021 (+ ?x321 ?x245 ?x259 ?x250 ?x276 ?x284 ?x183 ?x223 ?x231 ?x131 ?x129 ?x153 ?x564 ?x342 ?x942 ?x733 ?x603 ?x1071 ?x606 ?x377 ?x500 ?x641 ?x748 ?x593)))
 (let (($x302 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x216 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x901 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x331 (and $x151 (= ?x901 (- 4)) $x216 $x302 (not (= ?x1021 0)))))
 (rewrite (= $x331 $x587)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x118 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x112 (* 6 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x110 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x108 (* 6 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x106 (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x102 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x101 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x100 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x98 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x93 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x92 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x91 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x90 (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x88 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x86 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x84 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x80 (* 6 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x79 (* 6 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x77 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 6 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x74 (* 6 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 1) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x89 (+ (- (+ (- (+ ?x73 ?x74 ?x75) ?x77) ?x79 ?x80) ?x82) ?x84 ?x85 ?x86 ?x87 ?x88)))
 (let ((?x104 (- (- (+ (- (- (- (- ?x89 ?x90) ?x91) ?x92) ?x93) ?x98) ?x100) ?x101)))
 (let (($x116 (or (not (= (- (+ (- (+ (- ?x104 ?x102) ?x106) ?x108) ?x110) ?x112) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x116))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x256 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x764 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x593 (* (- 6) ?x764)))
 (let ((?x748 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x516 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x641 (* (- 6) ?x516)))
 (let ((?x500 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x358 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x377 (* (- 6) ?x358)))
 (let ((?x817 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x606 (* (- 6) ?x817)))
 (let ((?x1008 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1071 (* (- 6) ?x1008)))
 (let ((?x603 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x878 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x733 (* (- 6) ?x878)))
 (let ((?x537 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x942 (* (- 6) ?x537)))
 (let ((?x407 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x342 (* (- 6) ?x407)))
 (let ((?x823 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x564 (* (- 1) ?x823)))
 (let ((?x152 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x153 (* 6 ?x152)))
 (let ((?x129 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x242 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x131 (* 6 ?x242)))
 (let ((?x230 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x231 (* 6 ?x230)))
 (let ((?x222 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x223 (* 6 ?x222)))
 (let ((?x166 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x183 (* (- 1) ?x166)))
 (let ((?x283 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x284 (* 6 ?x283)))
 (let ((?x275 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x276 (* 6 ?x275)))
 (let ((?x260 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x250 (* (- 1) ?x260)))
 (let ((?x258 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x259 (* 6 ?x258)))
 (let ((?x332 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x245 (* 6 ?x332)))
 (let ((?x320 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x321 (* (- 1) ?x320)))
 (let ((?x1021 (+ ?x321 ?x245 ?x259 ?x250 ?x276 ?x284 ?x183 ?x223 ?x231 ?x131 ?x129 ?x153 ?x564 ?x342 ?x942 ?x733 ?x603 ?x1071 ?x606 ?x377 ?x500 ?x641 ?x748 ?x593)))
 (let (($x302 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x216 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x901 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x331 (and $x151 (= ?x901 (- 4)) $x216 $x302 (not (= ?x1021 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x112 (* 6 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x110 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x108 (* 6 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x106 (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x102 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x101 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x100 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x98 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x93 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x92 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x91 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x90 (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x88 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x86 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x84 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x80 (* 6 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x79 (* 6 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x77 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 6 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x74 (* 6 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 1) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x89 (+ (- (+ (- (+ ?x73 ?x74 ?x75) ?x77) ?x79 ?x80) ?x82) ?x84 ?x85 ?x86 ?x87 ?x88)))
 (let ((?x104 (- (- (+ (- (- (- (- ?x89 ?x90) ?x91) ?x92) ?x93) ?x98) ?x100) ?x101)))
 (let (($x116 (or (not (= (- (+ (- (+ (- ?x104 ?x102) ?x106) ?x108) ?x110) ?x112) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x117 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x116)))
 (rewrite (= $x117 $x331))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x119 (asserted $x118)))
 (let ((@x940 (mp (mp @x119 (quant-intro (proof-bind ?x256) (= $x118 $x269)) $x269) (rewrite (= $x269 $x269)) $x269)))
 (let ((@x491 (mp~ (mp @x940 (quant-intro (proof-bind ?x1068) (= $x269 $x1072)) $x1072) (sk (~ $x1072 $x310)) $x310)))
 (let ((@x558 (mp @x491 (rewrite (= $x310 $x674)) $x674)))
 (let ((@x126 (and-elim @x558 $x261)))
 (let ((@x556 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x261) $x169)) @x126 $x169)))
 (let (($x281 (>= ?x263 (- 6))))
 (let ((@x227 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x261) $x281)) @x126 $x281)))
 (let (($x631 (not (<= ?x329 0))))
 (let (($x182 (>= ?x329 0)))
 (let ((@x657 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x676 $x631 (not $x182))) (and-elim @x558 $x363) (or $x631 (not $x182)))))
 (let ((@x779 (unit-resolution @x657 (lemma ((_ th-lemma arith) (hypothesis (not $x182)) @x227 @x556 false) $x182) $x631)))
 ((_ th-lemma arith) @x779 @x227 @x556 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        16
 :arith-assert-upper        32
 :arith-branch-var          2
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           15
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             246
 :arith-nonlinear-bounds    8
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              12
 :arith-row-summations      14
 :arith-tableau-max-columns 53
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 25
 :del-clause                16
 :final-checks              8
 :max-memory                19.93
 :memory                    19.46
 :mk-bool-var               39
 :mk-clause                 16
 :num-allocs                575690
 :num-checks                1
 :propagations              10
 :rlimit-count              7056
 :time                      0.02
 :total-time                0.04)
