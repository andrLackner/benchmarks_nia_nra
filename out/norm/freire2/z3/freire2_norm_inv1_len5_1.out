unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x2168 (* (- 1) s!1)))
 (let ((?x280 (* r00 r00)))
 (let ((?x620 (* (- 3) ?x280)))
 (let ((?x1205 (+ s00 ?x620 ?x2168 (* 3 (* r!2 r!2)))))
 (let (($x372 (<= ?x1205 0)))
 (let (($x1326 (= ?x1205 0)))
 (let ((?x2166 (* 6 r!2)))
 (let ((?x2314 (+ 3 s!1 ?x2166)))
 (let ((?x2159 (+ x!0 ?x2168)))
 (let ((?x2165 (+ 1 r!2)))
 (let ((?x1131 (* (- 3) s!1)))
 (let ((?x1637 (* s00 s!1 r!2)))
 (let ((?x377 (* s00 s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1576 (+ ?x44 (* 72 ?x280) (* 78 (* r00 r00 s!1)) ?x377 (* (- 3) (* s00 x!0 x!0 s!1)) (* 6 (* s00 x!0 s!1 s!1 r!2)) (* 3 (* s00 x!0 s!1 s!1 r!2 r!2)) (* 3 (* s00 x!0 s!1 s!1)) (* (- 2) (* s00 s!1 s!1 s!1 r!2)) (* (- 3) (* r00 r00 x!0 x!0 x!0 r!2 r!2)) (* 3 (* r00 r00 s!1 s!1 s!1 r!2 r!2)) (* (- 1) (* s00 s!1 s!1 s!1)) (* (- 3) (* r00 r00 x!0 x!0 x!0)) (* 9 (* r00 r00 s!1 s!1 s!1 r!2)) (* (- 1) (* s00 ?x2165 ?x2159 ?x2159 ?x2314 ?x2314 ?x2314)) (* (- 9) (* r00 r00 x!0 s!1 s!1)) (* 27 (* r00 r00 s!1 s!1)) (* 402 (* r00 r00 s!1 r!2)) (* 18 (* r!2 r!2 r!2 r!2)) (* 27 (* r!2 r!2 r!2)) (* (- 1) (* s00 s!1 s!1 s!1 r!2 r!2)) (* 2 (* s00 x!0 x!0 x!0 r!2)) (* (- 6) (* r00 r00 x!0 x!0 x!0 r!2)) (* s00 x!0 x!0 x!0 r!2 r!2) (* s00 x!0 x!0 x!0) (* (- 9) (* s!1 r!2)) (* 540 (* r00 r00 r!2)) (* 9 (* s00 r!2)) (* (- 3) (* s00 x!0 x!0 s!1 r!2 r!2)) (* 324 (* r00 r00 s!1 r!2 r!2 r!2)) (* (- 3) (* ?x2165 ?x2165 ?x2165 ?x2314 ?x2314 ?x2314)) (* (- 1) (* s!1 s!1 r!2)) (* (- 1) (* ?x2165 ?x2159 ?x2314 ?x2314 ?x2314 ?x2314)) ?x1637 (* ?x2165 ?x2314 ?x2314 ?x2314 ?x2314) (* 3 (* ?x2165 ?x2165 ?x2165 ?x2159 ?x2314 ?x2314 ?x2314)) (* (- 3) (* s!1 r!2 r!2)) (* 3 (* s!1 r!2 r!2 r!2)) (* s00 ?x2165 ?x2159 ?x2314 ?x2314 ?x2314) (* ?x2165 ?x2159 ?x2159 ?x2314 ?x2314 ?x2314 ?x2314) (* (- 1) (* ?x2165 ?x2165 ?x2159 ?x2159 ?x2159 ?x2314)) (* (- 6) (* s00 x!0 x!0 s!1 r!2)) ?x1131 (* 9 (* r!2 r!2)) (* 1440 (* r00 r00 r!2 r!2)) (* (- 1) (* s00 ?x2165 ?x2314 ?x2314 ?x2314)) (* 18 (* r00 r00 x!0 x!0 s!1 r!2)) (* 3 (* ?x2165 ?x2165 ?x2165 ?x2165 ?x2159 ?x2159 ?x2159)) (* (- 9) (* r00 r00 x!0 s!1 s!1 r!2 r!2)) (* (- 18) (* r00 r00 x!0 s!1 s!1 r!2)) (* 648 (* r00 r00 s!1 r!2 r!2)) (* 6 (* s00 r!2 r!2)) (* (- 3) (* ?x2165 ?x2165 ?x2165 ?x2159 ?x2159 ?x2314 ?x2314 ?x2314)) (* (- 3) (* r00 r00 ?x2165 ?x2159 ?x2314 ?x2314 ?x2314)) (* 9 (* r00 r00 x!0 x!0 s!1)) (* 9 (* r00 r00 x!0 x!0 s!1 r!2 r!2)) (* 1620 (* r00 r00 r!2 r!2 r!2)) (* 6 (* r00 r00 s!1 s!1 s!1)) (* 3 (* r00 r00 ?x2165 ?x2159 ?x2159 ?x2314 ?x2314 ?x2314)) (* 54 (* r00 r00 s!1 s!1 r!2 r!2)) (* 648 (* r00 r00 r!2 r!2 r!2 r!2)) (* 81 (* r00 r00 s!1 s!1 r!2)) (* (- 1) (* s!1 s!1)))))
 (let (($x1041 (= ?x1576 0)))
 (let (($x1086 (not $x1041)))
 (let ((?x1516 (* (- 9) s!1)))
 (let ((?x1325 (* x00 x00)))
 (let ((?x941 (* 108 ?x1325)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x1197 (* 16 ?x1163)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x2510 (* (- 432) ?x861)))
 (let ((?x784 (* s00 x00)))
 (let ((?x2149 (* (- 108) ?x784)))
 (let ((?x626 (* s00 r00 r00)))
 (let ((?x1500 (* (- 36) ?x626)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1260 (* 51 ?x570)))
 (let ((?x501 (* r00 x00)))
 (let ((?x2628 (* 108 ?x501)))
 (let ((?x327 (* r00 r00 s!1)))
 (let ((?x1506 (* 36 ?x327)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1491 (+ ?x137 (* 108 (* x00 s!1)) ?x1506 (* (- 108) (* r00 x!0)) (* (- 66) ?x377) (* 54 (* r00 s!1)) (* (- 54) (* s00 r00)) (* 108 (* s00 x!0)) (* 216 (* s00 r00 x00)) ?x2628 ?x1260 ?x1500 (* (- 108) (* s00 s00 r00)) (* 432 (* r00 r00 r00 x!0)) (* (- 36) (* s00 s00 r00 r00)) (* (- 216) (* s00 r00 x!0)) ?x2149 ?x2510 (* 36 (* r00 r00 s!1 s!1)) (* 216 (* s00 r00 r00 r00)) ?x1197 (* (- 216) (* x00 x!0)) (* 108 (* s00 r00 s!1)) ?x941 (* (- 216) (* r00 r00 r00 s!1)) (* (- 108) (* x!0 s!1)) (* (- 12) (* s00 s!1 s!1)) ?x1516 (* (- 4) (* s!1 s!1 s!1)) (* 108 (* x!0 x!0)) (* 15 (* s!1 s!1)))))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x2486 (* 36 ?x856)))
 (let ((?x677 (* (- 6) ?x784)))
 (let ((?x2487 (* 15 ?x570)))
 (let ((?x1531 (* 54 ?x501)))
 (let ((?x1520 (+ ?x137 (* (- 4) (* r00 s!1 s!1)) (* 6 (* x00 s!1)) ?x1506 (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* (- 12) ?x377) (* 24 (* r00 s!1)) (* (- 24) (* s00 r00)) (* (- 36) (* r00 x!0 r!2)) (* 6 (* s00 x!0)) ?x1531 ?x2487 ?x1500 (* 2 (* s00 s00 r00)) (* (- 54) (* x!0 r!2)) ?x677 ?x2486 (* 2 (* s00 r00 s!1)) (* 4 (* s00 s00 r!2)) (* 24 (* s!1 r!2)) (* (- 24) (* s00 r!2)) (* (- 6) (* x!0 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* (- 36) (* r00 r00 x!0)) (* 36 (* r00 x00 r!2)) (* (- 2) ?x1637) ?x1516 (* (- 3) (* s!1 s!1)))))
 (let ((?x683 (* 4 ?x570)))
 (let ((?x2101 (* 18 ?x501)))
 (let ((?x447 (+ ?x44 (* (- 6) (* r00 s!1 r!2)) (* 6 ?x327) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* (- 2) ?x377) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)) (* (- 9) (* s00 r00)) ?x2101 ?x683 (* (- 6) ?x626) (* (- 18) (* x!0 r!2)) (* 9 (* s!1 r!2)) (* (- 9) (* s00 r!2)) ?x1131 (* (- 2) (* s!1 s!1)))))
 (let ((?x1974 (* 3 r!2)))
 (let ((?x971 (* 6 x!0)))
 (let ((?x448 (* r00 r00 r00)))
 (let ((?x449 (* 12 ?x448)))
 (let ((?x405 (* s00 r00)))
 (let ((?x483 (* (- 6) ?x405)))
 (let ((?x480 (* (- 6) x00)))
 (let ((?x479 (* (- 3) r00)))
 (let ((?x332 (+ ?x44 ?x479 ?x480 ?x483 ?x449 ?x971 (* 2 (* s!1 r!2)) (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x1131 ?x1974)))
 (let (($x1437 (and $x1326 (= ?x332 0) (= ?x447 0) (= ?x1520 0) (= ?x1491 0) $x1086)))
 (let ((?x2164 (+ 3 ?x2166 s!1)))
 (let ((?x2163 (+ ?x2168 x!0)))
 (let ((?x1768 (* r!2 s!1 s!1)))
 (let ((?x2488 (* s!1 s!1)))
 (let ((?x2660 (* (- 72) ?x280)))
 (let ((?x357 (* (- 3) s00)))
 (let ((?x1596 (* 3 s!1)))
 (let ((?x1203 (+ ?x1596 ?x357 (* (- 9) (* r!2 r!2)) ?x2660 (* 9 (* r!2 s!1)) (* (- 540) (* r!2 r00 r00)) (* (- 9) (* r!2 s00)) ?x2488 (* (- 78) (* s!1 r00 r00)) (* (- 1) (* s!1 s00)) (* (- 648) (* r!2 r!2 r!2 r!2 r00 r00)) (* (- 81) (* r!2 s!1 s!1 r00 r00)) ?x1768 (* (- 1) (* r!2 s!1 s00)) (* (- 3) (* r00 r00 ?x2165 ?x2163 ?x2163 ?x2164 ?x2164 ?x2164)) (* (- 54) (* r!2 r!2 s!1 s!1 r00 r00)) (* s00 ?x2165 ?x2164 ?x2164 ?x2164) (* (- 27) (* s!1 s!1 r00 r00)) (* (- 324) (* r!2 r!2 r!2 s!1 r00 r00)) (* (- 1) (* ?x2165 ?x2164 ?x2164 ?x2164 ?x2164)) (* (- 3) (* ?x2165 ?x2165 ?x2165 ?x2163 ?x2164 ?x2164 ?x2164)) (* 9 (* s!1 s!1 x!0 r00 r00)) (* 18 (* r!2 s!1 s!1 x!0 r00 r00)) (* 9 (* r!2 r!2 s!1 s!1 x!0 r00 r00)) (* (- 3) (* ?x2165 ?x2165 ?x2165 ?x2165 ?x2163 ?x2163 ?x2163)) (* (- 18) (* r!2 s!1 x!0 x!0 r00 r00)) (* (- 9) (* s!1 x!0 x!0 r00 r00)) (* 3 (* r00 r00 ?x2165 ?x2163 ?x2164 ?x2164 ?x2164)) (* 3 (* ?x2165 ?x2165 ?x2165 ?x2163 ?x2163 ?x2164 ?x2164 ?x2164)) (* (- 9) (* r!2 r!2 s!1 x!0 x!0 r00 r00)) (* (- 9) (* r!2 s!1 s!1 s!1 r00 r00)) (* (- 3) (* r!2 r!2 s!1 s!1 s!1 r00 r00)) (* (- 6) (* s!1 s!1 s!1 r00 r00)) (* (- 1620) (* r!2 r!2 r!2 r00 r00)) (* (- 648) (* r!2 r!2 s!1 r00 r00)) (* 3 (* x!0 x!0 x!0 r00 r00)) (* 6 (* r!2 x!0 x!0 x!0 r00 r00)) (* 3 (* r!2 r!2 x!0 x!0 x!0 r00 r00)) (* (- 6) (* r!2 r!2 s00)) (* 3 (* ?x2165 ?x2165 ?x2165 ?x2164 ?x2164 ?x2164)) (* (- 18) (* r!2 r!2 r!2 r!2)) (* (- 27) (* r!2 r!2 r!2)) (* (- 1440) (* r!2 r!2 r00 r00)) (* (- 402) (* r!2 s!1 r00 r00)) (* s00 ?x2165 ?x2163 ?x2163 ?x2164 ?x2164 ?x2164) (* s!1 s!1 s!1 s00) (* 2 (* r!2 s!1 s!1 s!1 s00)) (* r!2 r!2 s!1 s!1 s!1 s00) (* (- 3) (* s!1 s!1 x!0 s00)) (* (- 6) (* r!2 s!1 s!1 x!0 s00)) (* (- 3) (* r!2 r!2 s!1 s!1 x!0 s00)) (* 3 (* s!1 x!0 x!0 s00)) (* 6 (* r!2 s!1 x!0 x!0 s00)) (* 3 (* r!2 r!2 s!1 x!0 x!0 s00)) (* ?x2165 ?x2165 ?x2163 ?x2163 ?x2163 ?x2164) (* (- 1) (* s00 ?x2165 ?x2163 ?x2164 ?x2164 ?x2164)) (* (- 1) (* x!0 x!0 x!0 s00)) (* (- 2) (* r!2 x!0 x!0 x!0 s00)) (* (- 1) (* r!2 r!2 x!0 x!0 x!0 s00)) (* (- 3) (* r!2 r!2 r!2 s!1)) (* 3 (* r!2 r!2 s!1)) (* (- 1) (* ?x2165 ?x2163 ?x2163 ?x2164 ?x2164 ?x2164 ?x2164)) (* ?x2165 ?x2163 ?x2164 ?x2164 ?x2164 ?x2164))))
 (let ((?x1355 (* (- 108) ?x1325)))
 (let ((?x1354 (* (- 16) ?x1163)))
 (let ((?x1035 (* s00 r00 r00 r00)))
 (let ((?x1350 (* (- 216) ?x1035)))
 (let ((?x862 (* 432 ?x861)))
 (let ((?x1108 (* 108 ?x784)))
 (let ((?x710 (* s00 s00 r00 r00)))
 (let ((?x711 (* 36 ?x710)))
 (let ((?x647 (* s00 s00 r00)))
 (let ((?x991 (* 108 ?x647)))
 (let ((?x979 (* 36 ?x626)))
 (let ((?x1344 (* (- 51) ?x570)))
 (let ((?x1135 (* s!1 r00 r00)))
 (let ((?x2033 (* (- 36) ?x1135)))
 (let ((?x1341 (* (- 108) ?x501)))
 (let ((?x492 (* s00 r00 x00)))
 (let ((?x1340 (* (- 216) ?x492)))
 (let ((?x499 (* 54 ?x405)))
 (let ((?x966 (* (- 9) s00)))
 (let ((?x1096 (* 9 s!1)))
 (let ((?x2533 (+ ?x1096 ?x966 ?x499 ?x1340 ?x1341 (* (- 15) ?x2488) ?x2033 ?x1344 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x979 ?x991 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x711 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1108 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x862 (* 12 (* s!1 s!1 s00)) ?x1350 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1354 (* 216 (* x!0 x00)) ?x1355)))
 (let ((?x869 (* (- 36) ?x856)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x675 (* (- 2) ?x647)))
 (let ((?x895 (* (- 15) ?x570)))
 (let ((?x530 (* (- 54) ?x501)))
 (let ((?x543 (* 24 ?x405)))
 (let ((?x1111 (+ ?x1096 ?x966 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x543 ?x530 (* 3 ?x2488) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x2033 ?x895 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x979 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x675 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x785 (* 2 ?x1768) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x869 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x627 (* 6 ?x626)))
 (let ((?x583 (* (- 4) ?x570)))
 (let ((?x515 (* (- 18) ?x501)))
 (let ((?x520 (* 9 ?x405)))
 (let ((?x1099 (+ ?x1596 ?x357 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x520 ?x515 (* 2 ?x2488) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1135) ?x583 (* 18 (* x!0 r00)) ?x627 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x2399 (+ ?x1974 ?x1131 ?x971 ?x44 ?x479 ?x480 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x483 ?x449)))
 (let (($x2459 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x280)) 0)))
 (let (($x1303 (and $x2459 (= ?x2399 0) (= ?x1099 0) (= ?x1111 0) (= ?x2533 0) (not (= ?x1203 0)))))
 (let (($x1279 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1367 (+ 3 ?x214 s)))
 (let ((?x259 (* (- 1) s)))
 (let ((?x1479 (+ ?x259 x)))
 (let ((?x1364 (+ 1 r)))
 (let ((?x2572 (* 3 (* r r s))))
 (let ((?x2329 (* r r s s s s00)))
 (let ((?x2305 (* s s s s00)))
 (let ((?x788 (* r s s)))
 (let ((?x524 (* s s)))
 (let ((?x280 (* r00 r00)))
 (let ((?x2660 (* (- 72) ?x280)))
 (let ((?x357 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x2668 (+ ?x47 ?x357 (* (- 9) (* r r)) ?x2660 (* 9 (* r s)) (* (- 540) (* r r00 r00)) (* (- 9) (* r s00)) ?x524 (* (- 78) (* s r00 r00)) (* (- 1) (* s s00)) (* (- 648) (* r r r r r00 r00)) (* (- 81) (* r s s r00 r00)) ?x788 (* (- 1) (* r s s00)) (* (- 3) (* r00 r00 ?x1364 ?x1479 ?x1479 ?x1367 ?x1367 ?x1367)) (* (- 54) (* r r s s r00 r00)) (* s00 ?x1364 ?x1367 ?x1367 ?x1367) (* (- 27) (* s s r00 r00)) (* (- 324) (* r r r s r00 r00)) (* (- 1) (* ?x1364 ?x1367 ?x1367 ?x1367 ?x1367)) (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x1479 ?x1367 ?x1367 ?x1367)) (* 9 (* s s x r00 r00)) (* 18 (* r s s x r00 r00)) (* 9 (* r r s s x r00 r00)) (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x1364 ?x1479 ?x1479 ?x1479)) (* (- 18) (* r s x x r00 r00)) (* (- 9) (* s x x r00 r00)) (* 3 (* r00 r00 ?x1364 ?x1479 ?x1367 ?x1367 ?x1367)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x1479 ?x1479 ?x1367 ?x1367 ?x1367)) (* (- 9) (* r r s x x r00 r00)) (* (- 9) (* r s s s r00 r00)) (* (- 3) (* r r s s s r00 r00)) (* (- 6) (* s s s r00 r00)) (* (- 1620) (* r r r r00 r00)) (* (- 648) (* r r s r00 r00)) (* 3 (* x x x r00 r00)) (* 6 (* r x x x r00 r00)) (* 3 (* r r x x x r00 r00)) (* (- 6) (* r r s00)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x1367 ?x1367 ?x1367)) (* (- 18) (* r r r r)) (* (- 27) (* r r r)) (* (- 1440) (* r r r00 r00)) (* (- 402) (* r s r00 r00)) (* s00 ?x1364 ?x1479 ?x1479 ?x1367 ?x1367 ?x1367) ?x2305 (* 2 (* r s s s s00)) ?x2329 (* (- 3) (* s s x s00)) (* (- 6) (* r s s x s00)) (* (- 3) (* r r s s x s00)) (* 3 (* s x x s00)) (* 6 (* r s x x s00)) (* 3 (* r r s x x s00)) (* ?x1364 ?x1364 ?x1479 ?x1479 ?x1479 ?x1367) (* (- 1) (* s00 ?x1364 ?x1479 ?x1367 ?x1367 ?x1367)) (* (- 1) (* x x x s00)) (* (- 2) (* r x x x s00)) (* (- 1) (* r r x x x s00)) (* (- 3) (* r r r s)) ?x2572 (* (- 1) (* ?x1364 ?x1479 ?x1479 ?x1367 ?x1367 ?x1367 ?x1367)) (* ?x1364 ?x1479 ?x1367 ?x1367 ?x1367 ?x1367))))
 (let ((?x1325 (* x00 x00)))
 (let ((?x1355 (* (- 108) ?x1325)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x1354 (* (- 16) ?x1163)))
 (let ((?x1035 (* s00 r00 r00 r00)))
 (let ((?x1350 (* (- 216) ?x1035)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x862 (* 432 ?x861)))
 (let ((?x784 (* s00 x00)))
 (let ((?x1108 (* 108 ?x784)))
 (let ((?x710 (* s00 s00 r00 r00)))
 (let ((?x711 (* 36 ?x710)))
 (let ((?x647 (* s00 s00 r00)))
 (let ((?x991 (* 108 ?x647)))
 (let ((?x626 (* s00 r00 r00)))
 (let ((?x979 (* 36 ?x626)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1344 (* (- 51) ?x570)))
 (let ((?x544 (* s r00 r00)))
 (let ((?x843 (* (- 36) ?x544)))
 (let ((?x501 (* r00 x00)))
 (let ((?x1341 (* (- 108) ?x501)))
 (let ((?x492 (* s00 r00 x00)))
 (let ((?x1340 (* (- 216) ?x492)))
 (let ((?x405 (* s00 r00)))
 (let ((?x499 (* 54 ?x405)))
 (let ((?x966 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1356 (+ ?x143 ?x966 ?x499 ?x1340 ?x1341 (* (- 15) ?x524) ?x843 ?x1344 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x979 ?x991 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x711 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1108 (* 108 (* s x)) (* (- 108) (* x x)) ?x862 (* 12 (* s s s00)) ?x1350 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1354 (* 216 (* x x00)) ?x1355)))
 (let (($x1357 (= ?x1356 0)))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x869 (* (- 36) ?x856)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x675 (* (- 2) ?x647)))
 (let ((?x895 (* (- 15) ?x570)))
 (let ((?x548 (* 3 ?x524)))
 (let ((?x530 (* (- 54) ?x501)))
 (let ((?x543 (* 24 ?x405)))
 (let ((?x1058 (+ ?x143 ?x966 (* (- 24) (* r s)) (* 24 (* r s00)) ?x543 ?x530 ?x548 (* 54 (* r x)) (* 36 (* r x r00)) ?x843 ?x895 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x979 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x675 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x785 (* 2 ?x788) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x869 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1063 (= ?x1058 0)))
 (let ((?x627 (* 6 ?x626)))
 (let ((?x583 (* (- 4) ?x570)))
 (let ((?x525 (* 2 ?x524)))
 (let ((?x515 (* (- 18) ?x501)))
 (let ((?x520 (* 9 ?x405)))
 (let ((?x378 (* r s00)))
 (let ((?x664 (* 9 ?x378)))
 (let ((?x724 (+ ?x47 ?x357 (* (- 9) (* r s)) ?x664 ?x520 ?x515 ?x525 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x544) ?x583 (* 18 (* x r00)) ?x627 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x731 (= ?x724 0)))
 (let ((?x448 (* r00 r00 r00)))
 (let ((?x449 (* 12 ?x448)))
 (let ((?x483 (* (- 6) ?x405)))
 (let ((?x480 (* (- 6) x00)))
 (let ((?x479 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x478 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x484 (+ ?x43 ?x478 ?x56 ?x44 ?x479 ?x480 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 ?x378) ?x483 ?x449)))
 (let (($x485 (= ?x484 0)))
 (let (($x313 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x280)) 0)))
 (and $x313 $x485 $x731 $x1063 $x1357 (not (= ?x2668 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x2397 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x358 (+ 3 s ?x214)))
 (let ((?x259 (* (- 1) s)))
 (let ((?x325 (+ x ?x259)))
 (let ((?x1364 (+ 1 r)))
 (let ((?x1754 (* ?x1364 ?x325 ?x358 ?x358 ?x358 ?x358)))
 (let ((?x1689 (* s00 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)))
 (let ((?x693 (* s00 ?x1364 ?x358 ?x358 ?x358)))
 (let ((?x2427 (* ?x1364 ?x1364 ?x325 ?x325 ?x325 ?x358)))
 (let ((?x954 (* ?x1364 ?x358 ?x358)))
 (let ((?x2100 (+ ?x954 (* (- 1) (* ?x1364 ?x358 ?x358 ?x358 ?x358)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) ?x2427 (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x325 ?x358 ?x358 ?x358)) (* (- 1) (* s00 ?x1364 ?x325 ?x358 ?x358 ?x358)) (* 3 (* r00 r00 ?x1364 ?x1364 ?x325 ?x325 ?x325)) (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x1364 ?x325 ?x325 ?x325)) (* 3 (* r00 r00 ?x1364 ?x325 ?x358 ?x358 ?x358)) (* (- 3) (* r00 r00 ?x1364 ?x358 ?x358 ?x358)) (* (- 1) (* s00 ?x1364 ?x358)) (* (- 3) (* r00 r00 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x358 ?x358 ?x358)) ?x693 (* 3 (* r00 r00 ?x1364 ?x358)) (* (- 1) (* s00 ?x1364 ?x1364 ?x325 ?x325 ?x325)) ?x1689 (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x358)) (* (- 1) (* ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358 ?x358)) ?x1754)))
 (let ((?x1325 (* x00 x00)))
 (let ((?x941 (* 108 ?x1325)))
 (let ((?x1655 (* (- 9) s)))
 (let ((?x1011 (* r00 r00 s00)))
 (let ((?x1467 (* (- 36) ?x1011)))
 (let ((?x137 (* 9 s00)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1260 (* 51 ?x570)))
 (let ((?x2151 (* r00 r00 s)))
 (let ((?x2464 (* 36 ?x2151)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x1197 (* 16 ?x1163)))
 (let ((?x784 (* s00 x00)))
 (let ((?x2149 (* (- 108) ?x784)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x2510 (* (- 432) ?x861)))
 (let ((?x501 (* r00 x00)))
 (let ((?x2628 (* 108 ?x501)))
 (let ((?x1126 (+ (* 216 (* r00 s00 x00)) ?x2628 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2510 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2149 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1197 (* (- 108) (* x s)) ?x2464 ?x1260 (* (- 108) (* r00 x)) ?x137 ?x1467 ?x1655 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x941)))
 (let (($x1152 (= ?x1126 0)))
 (let ((?x2487 (* 15 ?x570)))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x2486 (* 36 ?x856)))
 (let ((?x677 (* (- 6) ?x784)))
 (let ((?x1531 (* 54 ?x501)))
 (let ((?x873 (+ (* 24 (* s r)) ?x1531 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x677 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2464 ?x2486 ?x2487 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1467 (* 54 (* x00 r)) ?x1655 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x478 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x683 (* 4 ?x570)))
 (let ((?x2101 (* 18 ?x501)))
 (let ((?x1526 (+ (* 9 (* s r)) ?x2101 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2151) ?x683 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1011) (* 18 (* x00 r)) ?x478 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x448 (* r00 r00 r00)))
 (let ((?x449 (* 12 ?x448)))
 (let ((?x480 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x479 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2505 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x478 ?x479 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x480 ?x449)))
 (let (($x1910 (= (+ s00 ?x259 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1910 (= ?x2505 0) (= ?x1526 0) (= ?x873 0) $x1152 (not (= ?x2100 0))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1714 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1367 (+ 3 ?x214 s)))
 (let ((?x259 (* (- 1) s)))
 (let ((?x1479 (+ ?x259 x)))
 (let ((?x1364 (+ 1 r)))
 (let ((?x2572 (* 3 (* r r s))))
 (let ((?x2329 (* r r s s s s00)))
 (let ((?x2305 (* s s s s00)))
 (let ((?x788 (* r s s)))
 (let ((?x524 (* s s)))
 (let ((?x280 (* r00 r00)))
 (let ((?x2660 (* (- 72) ?x280)))
 (let ((?x357 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x2668 (+ ?x47 ?x357 (* (- 9) (* r r)) ?x2660 (* 9 (* r s)) (* (- 540) (* r r00 r00)) (* (- 9) (* r s00)) ?x524 (* (- 78) (* s r00 r00)) (* (- 1) (* s s00)) (* (- 648) (* r r r r r00 r00)) (* (- 81) (* r s s r00 r00)) ?x788 (* (- 1) (* r s s00)) (* (- 3) (* r00 r00 ?x1364 ?x1479 ?x1479 ?x1367 ?x1367 ?x1367)) (* (- 54) (* r r s s r00 r00)) (* s00 ?x1364 ?x1367 ?x1367 ?x1367) (* (- 27) (* s s r00 r00)) (* (- 324) (* r r r s r00 r00)) (* (- 1) (* ?x1364 ?x1367 ?x1367 ?x1367 ?x1367)) (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x1479 ?x1367 ?x1367 ?x1367)) (* 9 (* s s x r00 r00)) (* 18 (* r s s x r00 r00)) (* 9 (* r r s s x r00 r00)) (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x1364 ?x1479 ?x1479 ?x1479)) (* (- 18) (* r s x x r00 r00)) (* (- 9) (* s x x r00 r00)) (* 3 (* r00 r00 ?x1364 ?x1479 ?x1367 ?x1367 ?x1367)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x1479 ?x1479 ?x1367 ?x1367 ?x1367)) (* (- 9) (* r r s x x r00 r00)) (* (- 9) (* r s s s r00 r00)) (* (- 3) (* r r s s s r00 r00)) (* (- 6) (* s s s r00 r00)) (* (- 1620) (* r r r r00 r00)) (* (- 648) (* r r s r00 r00)) (* 3 (* x x x r00 r00)) (* 6 (* r x x x r00 r00)) (* 3 (* r r x x x r00 r00)) (* (- 6) (* r r s00)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x1367 ?x1367 ?x1367)) (* (- 18) (* r r r r)) (* (- 27) (* r r r)) (* (- 1440) (* r r r00 r00)) (* (- 402) (* r s r00 r00)) (* s00 ?x1364 ?x1479 ?x1479 ?x1367 ?x1367 ?x1367) ?x2305 (* 2 (* r s s s s00)) ?x2329 (* (- 3) (* s s x s00)) (* (- 6) (* r s s x s00)) (* (- 3) (* r r s s x s00)) (* 3 (* s x x s00)) (* 6 (* r s x x s00)) (* 3 (* r r s x x s00)) (* ?x1364 ?x1364 ?x1479 ?x1479 ?x1479 ?x1367) (* (- 1) (* s00 ?x1364 ?x1479 ?x1367 ?x1367 ?x1367)) (* (- 1) (* x x x s00)) (* (- 2) (* r x x x s00)) (* (- 1) (* r r x x x s00)) (* (- 3) (* r r r s)) ?x2572 (* (- 1) (* ?x1364 ?x1479 ?x1479 ?x1367 ?x1367 ?x1367 ?x1367)) (* ?x1364 ?x1479 ?x1367 ?x1367 ?x1367 ?x1367))))
 (let ((?x1325 (* x00 x00)))
 (let ((?x1355 (* (- 108) ?x1325)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x1354 (* (- 16) ?x1163)))
 (let ((?x1035 (* s00 r00 r00 r00)))
 (let ((?x1350 (* (- 216) ?x1035)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x862 (* 432 ?x861)))
 (let ((?x784 (* s00 x00)))
 (let ((?x1108 (* 108 ?x784)))
 (let ((?x710 (* s00 s00 r00 r00)))
 (let ((?x711 (* 36 ?x710)))
 (let ((?x647 (* s00 s00 r00)))
 (let ((?x991 (* 108 ?x647)))
 (let ((?x626 (* s00 r00 r00)))
 (let ((?x979 (* 36 ?x626)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1344 (* (- 51) ?x570)))
 (let ((?x544 (* s r00 r00)))
 (let ((?x843 (* (- 36) ?x544)))
 (let ((?x501 (* r00 x00)))
 (let ((?x1341 (* (- 108) ?x501)))
 (let ((?x492 (* s00 r00 x00)))
 (let ((?x1340 (* (- 216) ?x492)))
 (let ((?x405 (* s00 r00)))
 (let ((?x499 (* 54 ?x405)))
 (let ((?x966 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1356 (+ ?x143 ?x966 ?x499 ?x1340 ?x1341 (* (- 15) ?x524) ?x843 ?x1344 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x979 ?x991 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x711 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1108 (* 108 (* s x)) (* (- 108) (* x x)) ?x862 (* 12 (* s s s00)) ?x1350 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1354 (* 216 (* x x00)) ?x1355)))
 (let (($x1357 (= ?x1356 0)))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x869 (* (- 36) ?x856)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x675 (* (- 2) ?x647)))
 (let ((?x895 (* (- 15) ?x570)))
 (let ((?x548 (* 3 ?x524)))
 (let ((?x530 (* (- 54) ?x501)))
 (let ((?x543 (* 24 ?x405)))
 (let ((?x1058 (+ ?x143 ?x966 (* (- 24) (* r s)) (* 24 (* r s00)) ?x543 ?x530 ?x548 (* 54 (* r x)) (* 36 (* r x r00)) ?x843 ?x895 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x979 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x675 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x785 (* 2 ?x788) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x869 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1063 (= ?x1058 0)))
 (let ((?x627 (* 6 ?x626)))
 (let ((?x583 (* (- 4) ?x570)))
 (let ((?x525 (* 2 ?x524)))
 (let ((?x515 (* (- 18) ?x501)))
 (let ((?x520 (* 9 ?x405)))
 (let ((?x378 (* r s00)))
 (let ((?x664 (* 9 ?x378)))
 (let ((?x724 (+ ?x47 ?x357 (* (- 9) (* r s)) ?x664 ?x520 ?x515 ?x525 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x544) ?x583 (* 18 (* x r00)) ?x627 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x731 (= ?x724 0)))
 (let ((?x448 (* r00 r00 r00)))
 (let ((?x449 (* 12 ?x448)))
 (let ((?x483 (* (- 6) ?x405)))
 (let ((?x480 (* (- 6) x00)))
 (let ((?x479 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x478 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x484 (+ ?x43 ?x478 ?x56 ?x44 ?x479 ?x480 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 ?x378) ?x483 ?x449)))
 (let (($x485 (= ?x484 0)))
 (let (($x313 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x280)) 0)))
 (let (($x2674 (and $x313 $x485 $x731 $x1063 $x1357 (not (= ?x2668 0)))))
 (let ((?x358 (+ 3 s ?x214)))
 (let ((?x325 (+ x ?x259)))
 (let ((?x1754 (* ?x1364 ?x325 ?x358 ?x358 ?x358 ?x358)))
 (let ((?x1689 (* s00 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)))
 (let ((?x693 (* s00 ?x1364 ?x358 ?x358 ?x358)))
 (let ((?x2427 (* ?x1364 ?x1364 ?x325 ?x325 ?x325 ?x358)))
 (let ((?x954 (* ?x1364 ?x358 ?x358)))
 (let ((?x2100 (+ ?x954 (* (- 1) (* ?x1364 ?x358 ?x358 ?x358 ?x358)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) ?x2427 (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x325 ?x358 ?x358 ?x358)) (* (- 1) (* s00 ?x1364 ?x325 ?x358 ?x358 ?x358)) (* 3 (* r00 r00 ?x1364 ?x1364 ?x325 ?x325 ?x325)) (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x1364 ?x325 ?x325 ?x325)) (* 3 (* r00 r00 ?x1364 ?x325 ?x358 ?x358 ?x358)) (* (- 3) (* r00 r00 ?x1364 ?x358 ?x358 ?x358)) (* (- 1) (* s00 ?x1364 ?x358)) (* (- 3) (* r00 r00 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x358 ?x358 ?x358)) ?x693 (* 3 (* r00 r00 ?x1364 ?x358)) (* (- 1) (* s00 ?x1364 ?x1364 ?x325 ?x325 ?x325)) ?x1689 (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x358)) (* (- 1) (* ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358 ?x358)) ?x1754)))
 (let ((?x941 (* 108 ?x1325)))
 (let ((?x1655 (* (- 9) s)))
 (let ((?x1011 (* r00 r00 s00)))
 (let ((?x1467 (* (- 36) ?x1011)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1260 (* 51 ?x570)))
 (let ((?x2151 (* r00 r00 s)))
 (let ((?x2464 (* 36 ?x2151)))
 (let ((?x1197 (* 16 ?x1163)))
 (let ((?x2149 (* (- 108) ?x784)))
 (let ((?x2510 (* (- 432) ?x861)))
 (let ((?x2628 (* 108 ?x501)))
 (let ((?x1126 (+ (* 216 (* r00 s00 x00)) ?x2628 (* (- 54) (* r00 s00)) (* 15 ?x524) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2510 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2149 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1197 (* (- 108) (* x s)) ?x2464 ?x1260 (* (- 108) (* r00 x)) ?x137 ?x1467 ?x1655 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x941)))
 (let (($x1152 (= ?x1126 0)))
 (let ((?x2487 (* 15 ?x570)))
 (let ((?x2486 (* 36 ?x856)))
 (let ((?x677 (* (- 6) ?x784)))
 (let ((?x1531 (* 54 ?x501)))
 (let ((?x873 (+ (* 24 (* s r)) ?x1531 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x524) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x677 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2464 ?x2486 ?x2487 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1467 (* 54 (* x00 r)) ?x1655 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x683 (* 4 ?x570)))
 (let ((?x2101 (* 18 ?x501)))
 (let ((?x1526 (+ (* 9 (* s r)) ?x2101 (* (- 9) (* r00 s00)) (* (- 2) ?x524) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2151) ?x683 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1011) (* 18 (* x00 r)) ?x478 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x2505 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x478 ?x479 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x480 ?x449)))
 (let (($x1910 (= (+ s00 ?x259 (* 3 (* r r)) (* (- 3) ?x280)) 0)))
 (let (($x2097 (and $x1910 (= ?x2505 0) (= ?x1526 0) (= ?x873 0) $x1152 (not (= ?x2100 0)))))
 (rewrite (= $x2097 $x2674)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1475 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x358 (+ 3 s ?x214)))
 (let ((?x259 (* (- 1) s)))
 (let ((?x325 (+ x ?x259)))
 (let ((?x1364 (+ 1 r)))
 (let ((?x1754 (* ?x1364 ?x325 ?x358 ?x358 ?x358 ?x358)))
 (let ((?x1738 (* ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358 ?x358)))
 (let ((?x1670 (* s00 ?x1364 ?x1364 ?x325 ?x325 ?x325)))
 (let ((?x1261 (* s00 ?x1364 ?x358)))
 (let ((?x1415 (* s00 ?x1364 ?x325 ?x358 ?x358 ?x358)))
 (let ((?x427 (* ?x1364 ?x358 ?x358 ?x358 ?x358)))
 (let ((?x1770 (+ (* (- 1) (* ?x1364 ?x358 ?x358)) ?x427 (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) (* (- 1) (* ?x1364 ?x1364 ?x325 ?x325 ?x325 ?x358)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x325 ?x358 ?x358 ?x358)) ?x1415 (* (- 3) (* r00 r00 ?x1364 ?x1364 ?x325 ?x325 ?x325)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x1364 ?x325 ?x325 ?x325)) (* (- 3) (* r00 r00 ?x1364 ?x325 ?x358 ?x358 ?x358)) (* 3 (* r00 r00 ?x1364 ?x358 ?x358 ?x358)) ?x1261 (* 3 (* r00 r00 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x358 ?x358 ?x358)) (* (- 1) (* s00 ?x1364 ?x358 ?x358 ?x358)) (* (- 3) (* r00 r00 ?x1364 ?x358)) ?x1670 (* (- 1) (* s00 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x358)) ?x1738 (* (- 1) ?x1754))))
 (let ((?x1325 (* x00 x00)))
 (let ((?x941 (* 108 ?x1325)))
 (let ((?x1655 (* (- 9) s)))
 (let ((?x1011 (* r00 r00 s00)))
 (let ((?x1467 (* (- 36) ?x1011)))
 (let ((?x137 (* 9 s00)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1260 (* 51 ?x570)))
 (let ((?x2151 (* r00 r00 s)))
 (let ((?x2464 (* 36 ?x2151)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x1197 (* 16 ?x1163)))
 (let ((?x784 (* s00 x00)))
 (let ((?x2149 (* (- 108) ?x784)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x2510 (* (- 432) ?x861)))
 (let ((?x501 (* r00 x00)))
 (let ((?x2628 (* 108 ?x501)))
 (let ((?x1126 (+ (* 216 (* r00 s00 x00)) ?x2628 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2510 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2149 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1197 (* (- 108) (* x s)) ?x2464 ?x1260 (* (- 108) (* r00 x)) ?x137 ?x1467 ?x1655 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x941)))
 (let (($x1152 (= ?x1126 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x966 (* (- 9) s00)))
 (let ((?x895 (* (- 15) ?x570)))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x869 (* (- 36) ?x856)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x524 (* s s)))
 (let ((?x548 (* 3 ?x524)))
 (let ((?x530 (* (- 54) ?x501)))
 (let ((?x2053 (+ (* (- 24) (* s r)) ?x530 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x548 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x785 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2151) ?x869 ?x895 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x966 (* 36 ?x1011) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x357 (* (- 3) s00)))
 (let ((?x583 (* (- 4) ?x570)))
 (let ((?x525 (* 2 ?x524)))
 (let ((?x515 (* (- 18) ?x501)))
 (let ((?x2370 (+ (* (- 9) (* s r)) ?x515 (* 9 (* r00 s00)) ?x525 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2151) ?x583 (* 18 (* r00 x)) ?x357 (* 6 ?x1011) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1315 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x357 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1910 (= (+ s00 ?x259 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1910 (= ?x1315 0) (= ?x2370 0) (= ?x2053 0) $x1152 (not (= ?x1770 0))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2406 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x358 (+ 3 s ?x214)))
 (let ((?x259 (* (- 1) s)))
 (let ((?x325 (+ x ?x259)))
 (let ((?x1364 (+ 1 r)))
 (let ((?x1754 (* ?x1364 ?x325 ?x358 ?x358 ?x358 ?x358)))
 (let ((?x1689 (* s00 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)))
 (let ((?x693 (* s00 ?x1364 ?x358 ?x358 ?x358)))
 (let ((?x2427 (* ?x1364 ?x1364 ?x325 ?x325 ?x325 ?x358)))
 (let ((?x954 (* ?x1364 ?x358 ?x358)))
 (let ((?x2100 (+ ?x954 (* (- 1) (* ?x1364 ?x358 ?x358 ?x358 ?x358)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) ?x2427 (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x325 ?x358 ?x358 ?x358)) (* (- 1) (* s00 ?x1364 ?x325 ?x358 ?x358 ?x358)) (* 3 (* r00 r00 ?x1364 ?x1364 ?x325 ?x325 ?x325)) (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x1364 ?x325 ?x325 ?x325)) (* 3 (* r00 r00 ?x1364 ?x325 ?x358 ?x358 ?x358)) (* (- 3) (* r00 r00 ?x1364 ?x358 ?x358 ?x358)) (* (- 1) (* s00 ?x1364 ?x358)) (* (- 3) (* r00 r00 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x358 ?x358 ?x358)) ?x693 (* 3 (* r00 r00 ?x1364 ?x358)) (* (- 1) (* s00 ?x1364 ?x1364 ?x325 ?x325 ?x325)) ?x1689 (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x358)) (* (- 1) (* ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358 ?x358)) ?x1754)))
 (let ((?x1325 (* x00 x00)))
 (let ((?x941 (* 108 ?x1325)))
 (let ((?x1655 (* (- 9) s)))
 (let ((?x1011 (* r00 r00 s00)))
 (let ((?x1467 (* (- 36) ?x1011)))
 (let ((?x137 (* 9 s00)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1260 (* 51 ?x570)))
 (let ((?x2151 (* r00 r00 s)))
 (let ((?x2464 (* 36 ?x2151)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x1197 (* 16 ?x1163)))
 (let ((?x784 (* s00 x00)))
 (let ((?x2149 (* (- 108) ?x784)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x2510 (* (- 432) ?x861)))
 (let ((?x501 (* r00 x00)))
 (let ((?x2628 (* 108 ?x501)))
 (let ((?x1126 (+ (* 216 (* r00 s00 x00)) ?x2628 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2510 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2149 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1197 (* (- 108) (* x s)) ?x2464 ?x1260 (* (- 108) (* r00 x)) ?x137 ?x1467 ?x1655 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x941)))
 (let (($x1152 (= ?x1126 0)))
 (let ((?x2487 (* 15 ?x570)))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x2486 (* 36 ?x856)))
 (let ((?x677 (* (- 6) ?x784)))
 (let ((?x1531 (* 54 ?x501)))
 (let ((?x873 (+ (* 24 (* s r)) ?x1531 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x677 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2464 ?x2486 ?x2487 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1467 (* 54 (* x00 r)) ?x1655 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x478 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x683 (* 4 ?x570)))
 (let ((?x2101 (* 18 ?x501)))
 (let ((?x1526 (+ (* 9 (* s r)) ?x2101 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2151) ?x683 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1011) (* 18 (* x00 r)) ?x478 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x448 (* r00 r00 r00)))
 (let ((?x449 (* 12 ?x448)))
 (let ((?x480 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x479 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2505 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x478 ?x479 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x480 ?x449)))
 (let (($x1910 (= (+ s00 ?x259 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2097 (and $x1910 (= ?x2505 0) (= ?x1526 0) (= ?x873 0) $x1152 (not (= ?x2100 0)))))
 (let ((?x1738 (* ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358 ?x358)))
 (let ((?x1670 (* s00 ?x1364 ?x1364 ?x325 ?x325 ?x325)))
 (let ((?x1261 (* s00 ?x1364 ?x358)))
 (let ((?x1415 (* s00 ?x1364 ?x325 ?x358 ?x358 ?x358)))
 (let ((?x427 (* ?x1364 ?x358 ?x358 ?x358 ?x358)))
 (let ((?x1770 (+ (* (- 1) ?x954) ?x427 (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) (* (- 1) ?x2427) (* 3 (* ?x1364 ?x1364 ?x1364 ?x325 ?x358 ?x358 ?x358)) ?x1415 (* (- 3) (* r00 r00 ?x1364 ?x1364 ?x325 ?x325 ?x325)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x1364 ?x325 ?x325 ?x325)) (* (- 3) (* r00 r00 ?x1364 ?x325 ?x358 ?x358 ?x358)) (* 3 (* r00 r00 ?x1364 ?x358 ?x358 ?x358)) ?x1261 (* 3 (* r00 r00 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x358 ?x358 ?x358)) (* (- 1) ?x693) (* (- 3) (* r00 r00 ?x1364 ?x358)) ?x1670 (* (- 1) ?x1689) (* 3 (* ?x1364 ?x1364 ?x1364 ?x358)) ?x1738 (* (- 1) ?x1754))))
 (let ((?x143 (* 9 s)))
 (let ((?x966 (* (- 9) s00)))
 (let ((?x895 (* (- 15) ?x570)))
 (let ((?x869 (* (- 36) ?x856)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x524 (* s s)))
 (let ((?x548 (* 3 ?x524)))
 (let ((?x530 (* (- 54) ?x501)))
 (let ((?x2053 (+ (* (- 24) (* s r)) ?x530 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x548 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x785 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2151) ?x869 ?x895 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x966 (* 36 ?x1011) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x357 (* (- 3) s00)))
 (let ((?x583 (* (- 4) ?x570)))
 (let ((?x525 (* 2 ?x524)))
 (let ((?x515 (* (- 18) ?x501)))
 (let ((?x2370 (+ (* (- 9) (* s r)) ?x515 (* 9 (* r00 s00)) ?x525 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2151) ?x583 (* 18 (* r00 x)) ?x357 (* 6 ?x1011) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1315 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x357 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x448))))
 (let (($x1540 (and $x1910 (= ?x1315 0) (= ?x2370 0) (= ?x2053 0) $x1152 (not (= ?x1770 0)))))
 (rewrite (= $x1540 $x2097)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x256 (exists ((r Int) (s Int) (x Int) )(! (let ((?x219 (- x s)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x222 (- (+ (* (- 1) ?x213 ?x215 ?x215) (* ?x213 ?x215 ?x215 ?x215 ?x215)) (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x226 (+ (- ?x222 (* ?x213 ?x213 ?x215 ?x219 ?x219 ?x219)) (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x219) (* ?x213 ?x215 ?x215 ?x215 s00 ?x219))))
 (let ((?x230 (+ (- ?x226 (* 3 ?x213 ?x213 r00 r00 ?x219 ?x219 ?x219)) (* 3 ?x213 ?x213 ?x213 ?x213 ?x219 ?x219 ?x219))))
 (let ((?x236 (+ (- ?x230 (* 3 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x219)) (* 3 ?x213 r00 r00 ?x215 ?x215 ?x215) (* ?x213 ?x215 s00) (* 3 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x241 (- (- ?x236 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215)) (* ?x213 ?x215 ?x215 ?x215 s00))))
 (let ((?x244 (+ (- ?x241 (* 3 ?x213 r00 r00 ?x215)) (* ?x213 ?x213 s00 ?x219 ?x219 ?x219))))
 (let ((?x249 (+ (- ?x244 (* ?x213 ?x215 ?x215 ?x215 s00 ?x219 ?x219)) (* 3 ?x213 ?x213 ?x213 ?x215) (* ?x213 ?x215 ?x215 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- ?x249 (* ?x213 ?x215 ?x215 ?x215 ?x215 ?x219)) 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x573 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x358 (+ 3 s ?x214)))
 (let ((?x259 (* (- 1) s)))
 (let ((?x325 (+ x ?x259)))
 (let ((?x1364 (+ 1 r)))
 (let ((?x1754 (* ?x1364 ?x325 ?x358 ?x358 ?x358 ?x358)))
 (let ((?x1738 (* ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358 ?x358)))
 (let ((?x1670 (* s00 ?x1364 ?x1364 ?x325 ?x325 ?x325)))
 (let ((?x1261 (* s00 ?x1364 ?x358)))
 (let ((?x1415 (* s00 ?x1364 ?x325 ?x358 ?x358 ?x358)))
 (let ((?x427 (* ?x1364 ?x358 ?x358 ?x358 ?x358)))
 (let ((?x1770 (+ (* (- 1) (* ?x1364 ?x358 ?x358)) ?x427 (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) (* (- 1) (* ?x1364 ?x1364 ?x325 ?x325 ?x325 ?x358)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x325 ?x358 ?x358 ?x358)) ?x1415 (* (- 3) (* r00 r00 ?x1364 ?x1364 ?x325 ?x325 ?x325)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x1364 ?x325 ?x325 ?x325)) (* (- 3) (* r00 r00 ?x1364 ?x325 ?x358 ?x358 ?x358)) (* 3 (* r00 r00 ?x1364 ?x358 ?x358 ?x358)) ?x1261 (* 3 (* r00 r00 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) (* (- 3) (* ?x1364 ?x1364 ?x1364 ?x358 ?x358 ?x358)) (* (- 1) (* s00 ?x1364 ?x358 ?x358 ?x358)) (* (- 3) (* r00 r00 ?x1364 ?x358)) ?x1670 (* (- 1) (* s00 ?x1364 ?x325 ?x325 ?x358 ?x358 ?x358)) (* 3 (* ?x1364 ?x1364 ?x1364 ?x358)) ?x1738 (* (- 1) ?x1754))))
 (let ((?x1325 (* x00 x00)))
 (let ((?x941 (* 108 ?x1325)))
 (let ((?x1655 (* (- 9) s)))
 (let ((?x1011 (* r00 r00 s00)))
 (let ((?x1467 (* (- 36) ?x1011)))
 (let ((?x137 (* 9 s00)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1260 (* 51 ?x570)))
 (let ((?x2151 (* r00 r00 s)))
 (let ((?x2464 (* 36 ?x2151)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x1197 (* 16 ?x1163)))
 (let ((?x784 (* s00 x00)))
 (let ((?x2149 (* (- 108) ?x784)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x2510 (* (- 432) ?x861)))
 (let ((?x501 (* r00 x00)))
 (let ((?x2628 (* 108 ?x501)))
 (let ((?x1126 (+ (* 216 (* r00 s00 x00)) ?x2628 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2510 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2149 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1197 (* (- 108) (* x s)) ?x2464 ?x1260 (* (- 108) (* r00 x)) ?x137 ?x1467 ?x1655 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x941)))
 (let (($x1152 (= ?x1126 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x966 (* (- 9) s00)))
 (let ((?x895 (* (- 15) ?x570)))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x869 (* (- 36) ?x856)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x524 (* s s)))
 (let ((?x548 (* 3 ?x524)))
 (let ((?x530 (* (- 54) ?x501)))
 (let ((?x2053 (+ (* (- 24) (* s r)) ?x530 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x548 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x785 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2151) ?x869 ?x895 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x966 (* 36 ?x1011) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x357 (* (- 3) s00)))
 (let ((?x583 (* (- 4) ?x570)))
 (let ((?x525 (* 2 ?x524)))
 (let ((?x515 (* (- 18) ?x501)))
 (let ((?x2370 (+ (* (- 9) (* s r)) ?x515 (* 9 (* r00 s00)) ?x525 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2151) ?x583 (* 18 (* r00 x)) ?x357 (* 6 ?x1011) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1315 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x357 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1910 (= (+ s00 ?x259 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1540 (and $x1910 (= ?x1315 0) (= ?x2370 0) (= ?x2053 0) $x1152 (not (= ?x1770 0)))))
 (let ((?x219 (- x s)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x222 (- (+ (* (- 1) ?x213 ?x215 ?x215) (* ?x213 ?x215 ?x215 ?x215 ?x215)) (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x226 (+ (- ?x222 (* ?x213 ?x213 ?x215 ?x219 ?x219 ?x219)) (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x219) (* ?x213 ?x215 ?x215 ?x215 s00 ?x219))))
 (let ((?x230 (+ (- ?x226 (* 3 ?x213 ?x213 r00 r00 ?x219 ?x219 ?x219)) (* 3 ?x213 ?x213 ?x213 ?x213 ?x219 ?x219 ?x219))))
 (let ((?x236 (+ (- ?x230 (* 3 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x219)) (* 3 ?x213 r00 r00 ?x215 ?x215 ?x215) (* ?x213 ?x215 s00) (* 3 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x241 (- (- ?x236 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215)) (* ?x213 ?x215 ?x215 ?x215 s00))))
 (let ((?x244 (+ (- ?x241 (* 3 ?x213 r00 r00 ?x215)) (* ?x213 ?x213 s00 ?x219 ?x219 ?x219))))
 (let ((?x249 (+ (- ?x244 (* ?x213 ?x215 ?x215 ?x215 s00 ?x219 ?x219)) (* 3 ?x213 ?x213 ?x213 ?x215) (* ?x213 ?x215 ?x215 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x255 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- ?x249 (* ?x213 ?x215 ?x215 ?x215 ?x215 ?x219)) 0))))))
 (rewrite (= $x255 $x1540))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x257 (asserted $x256)))
 (let ((@x2360 (mp (mp @x257 (quant-intro (proof-bind ?x573) (= $x256 $x1475)) $x1475) (rewrite (= $x1475 $x1475)) $x1475)))
 (let ((@x2470 (mp (mp @x2360 (quant-intro (proof-bind ?x2406) (= $x1475 $x2397)) $x2397) (quant-intro (proof-bind ?x1714) (= $x2397 $x1279)) $x1279)))
 (let ((@x1047 (mp (mp~ @x2470 (sk (~ $x1279 $x1303)) $x1303) (rewrite (= $x1303 $x1437)) $x1437)))
 (let ((@x1578 (and-elim @x1047 $x1326)))
 (let ((@x1214 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1326) $x372)) @x1578 $x372)))
 (let (($x2156 (>= ?x1205 0)))
 (let ((@x1549 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1326) $x2156)) @x1578 $x2156)))
 (let (($x383 (not (<= ?x1576 0))))
 (let (($x993 (>= ?x1576 0)))
 (let ((@x924 (lemma ((_ th-lemma arith) (hypothesis (not $x993)) @x1549 @x1214 @x1549 @x1214 false) $x993)))
 (let ((@x460 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1041 $x383 (not $x993))) (and-elim @x1047 $x1086) (or $x383 (not $x993)))))
 ((_ th-lemma arith) (unit-resolution @x460 @x924 $x383) @x1549 @x1214 @x1549 @x1214 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        31
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             824
 :arith-nonlinear-bounds    24
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 155
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.21
 :memory                    3.42
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                2188827
 :num-checks                1
 :propagations              12
 :rlimit-count              29047
 :time                      0.02
 :total-time                0.03)
