unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1055 (* 36 (* r00 r00 s!1 s!1))))
 (let ((?x2181 (* x!0 x!0)))
 (let ((?x443 (* 108 ?x2181)))
 (let ((?x1985 (* s!1 s!1 s!1)))
 (let ((?x283 (* (- 4) ?x1985)))
 (let ((?x1948 (* s00 x!0)))
 (let ((?x1054 (* 108 ?x1948)))
 (let ((?x709 (* (- 216) (* s00 r00 x!0))))
 (let ((?x2552 (* 432 (* r00 r00 r00 x!0))))
 (let ((?x660 (* (- 216) (* x00 x!0))))
 (let ((?x1584 (* r!2 r!2)))
 (let ((?x771 (* (- 756) ?x1584)))
 (let ((?x1530 (* (- 162) r!2)))
 (let ((?x1759 (* 297 s!1)))
 (let ((?x1333 (* x00 x00)))
 (let ((?x1334 (* 108 ?x1333)))
 (let ((?x1232 (* s!1 s!1)))
 (let ((?x437 (* 195 ?x1232)))
 (let ((?x1171 (* s00 s00 s00)))
 (let ((?x1172 (* 16 ?x1171)))
 (let ((?x1043 (* s00 r00 r00 r00)))
 (let ((?x1044 (* 216 ?x1043)))
 (let ((?x1658 (* (- 324) x!0)))
 (let ((?x869 (* r00 r00 r00 x00)))
 (let ((?x899 (* (- 432) ?x869)))
 (let ((?x845 (* r00 x!0)))
 (let ((?x542 (* (- 108) ?x845)))
 (let ((?x889 (* (- 864) (* r!2 r!2 r!2))))
 (let ((?x792 (* s00 x00)))
 (let ((?x1128 (* (- 108) ?x792)))
 (let ((?x718 (* s00 s00 r00 r00)))
 (let ((?x762 (* (- 36) ?x718)))
 (let ((?x519 (* (- 12) (* s00 s!1 s!1))))
 (let ((?x655 (* s00 s00 r00)))
 (let ((?x1026 (* (- 108) ?x655)))
 (let ((?x634 (* s00 r00 r00)))
 (let ((?x1261 (* (- 36) ?x634)))
 (let ((?x578 (* s00 s00)))
 (let ((?x1208 (* 51 ?x578)))
 (let ((?x509 (* r00 x00)))
 (let ((?x505 (* 108 ?x509)))
 (let ((?x500 (* s00 r00 x00)))
 (let ((?x501 (* 216 ?x500)))
 (let ((?x456 (* r00 r00 r00)))
 (let ((?x1455 (* (- 648) ?x456)))
 (let ((?x413 (* s00 r00)))
 (let ((?x1395 (* 270 ?x413)))
 (let ((?x288 (* r00 r00)))
 (let ((?x649 (* 432 ?x288)))
 (let ((?x2002 (* 324 x00)))
 (let ((?x1452 (* 162 r00)))
 (let ((?x2415 (* (- 297) s00)))
 (let ((?x2261 (+ ?x2415 ?x1452 ?x2002 ?x649 (* 648 (* s00 r00 r!2)) ?x1395 ?x1455 ?x501 ?x505 ?x1208 ?x1261 ?x1026 (* 252 (* r00 r00 s!1)) (* 1296 (* r00 r00 r!2 r!2)) ?x519 ?x762 (* (- 432) (* s00 r!2 r!2)) (* (- 72) (* s!1 s!1 r!2)) ?x1128 (* (- 828) (* s00 r!2)) ?x889 ?x542 ?x899 (* 162 (* r00 s!1)) ?x1658 ?x1044 (* 324 (* r00 r!2)) (* (- 432) (* s!1 r!2 r!2)) ?x1172 ?x437 ?x1334 (* (- 144) (* s00 s!1 r!2)) (* (- 648) (* r00 r00 r00 s!1)) ?x1759 (* 324 (* x00 s!1)) ?x1530 ?x771 ?x660 (* 396 (* s!1 r!2)) (* 1512 (* r00 r00 r!2)) ?x2552 (* (- 324) (* x!0 s!1)) ?x709 ?x1054 ?x283 ?x443 (* 432 (* r00 r00 s!1 r!2)) (* 648 (* x00 r!2)) (* (- 648) (* x!0 r!2)) ?x1055 (* (- 1296) (* r00 r00 r00 r!2)) (* 324 (* s00 r00 s!1)) (* (- 246) (* s00 s!1)))))
 (let (($x4048 (<= ?x2261 0)))
 (let ((?x1429 (* (- 1) s!1)))
 (let ((?x2279 (* (- 3) ?x288)))
 (let ((?x1609 (+ s00 ?x2279 ?x1429 (* 3 ?x1584))))
 (let (($x2294 (<= ?x1609 0)))
 (let (($x1558 (= ?x1609 0)))
 (let ((?x872 (* 6 r!2)))
 (let ((?x1256 (+ 3 s!1 ?x872)))
 (let ((?x1262 (+ x!0 ?x1429)))
 (let ((?x1428 (+ 1 r!2)))
 (let ((?x1148 (* ?x1428 ?x1428 ?x1428 ?x1428 ?x1428 ?x1262 ?x1262 ?x1262 ?x1262 ?x1262 ?x1262 ?x1256 ?x1256 ?x1256 ?x1256 ?x1256 ?x2261)))
 (let (($x1450 (= ?x1148 0)))
 (let (($x1399 (not $x1450)))
 (let ((?x2293 (* (- 9) s!1)))
 (let ((?x669 (* r00 r00 s!1)))
 (let ((?x1005 (* 36 ?x669)))
 (let ((?x539 (* (- 54) ?x413)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1041 (+ ?x137 ?x539 ?x501 ?x505 ?x1208 ?x1261 ?x1026 ?x1005 ?x519 ?x762 ?x1128 ?x542 ?x899 (* 54 (* r00 s!1)) ?x1044 ?x1172 (* 15 ?x1232) ?x1334 (* (- 216) (* r00 r00 r00 s!1)) ?x2293 (* 108 (* x00 s!1)) ?x660 ?x2552 (* (- 108) (* x!0 s!1)) ?x709 ?x1054 ?x283 ?x443 ?x1055 (* 108 (* s00 r00 s!1)) (* (- 66) (* s00 s!1)))))
 (let (($x1056 (= ?x1041 0)))
 (let ((?x960 (+ ?x137 (* (- 24) ?x413) (* 54 ?x509) (* 15 ?x578) ?x1261 (* 2 ?x655) ?x1005 (* (- 2) (* s!1 s!1 r!2)) (* (- 6) ?x792) (* (- 24) (* s00 r!2)) (* (- 54) ?x845) (* 36 (* r00 r00 x00)) (* 24 (* r00 s!1)) (* (- 3) ?x1232) (* (- 2) (* s00 s!1 r!2)) (* 36 (* r00 x00 r!2)) ?x2293 (* 6 (* x00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* 24 (* s!1 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 6) (* x!0 s!1)) (* (- 36) (* r00 x!0 r!2)) (* 6 ?x1948) (* 4 (* s00 s00 r!2)) (* 54 (* x00 r!2)) (* (- 54) (* x!0 r!2)) (* 2 (* s00 r00 s!1)) (* (- 12) (* s00 s!1)))))
 (let ((?x295 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2396 (+ ?x44 (* 6 (* s00 r00 r!2)) (* (- 9) ?x413) (* 18 ?x509) (* 4 ?x578) (* (- 6) ?x634) (* 6 ?x669) (* (- 9) (* s00 r!2)) (* (- 18) ?x845) (* 9 (* r00 s!1)) (* (- 2) ?x1232) ?x295 (* 9 (* s!1 r!2)) (* 18 (* x00 r!2)) (* (- 6) (* r00 s!1 r!2)) (* (- 18) (* x!0 r!2)) (* (- 2) (* s00 s!1)))))
 (let (($x2397 (= ?x2396 0)))
 (let ((?x733 (* 3 r!2)))
 (let ((?x1523 (* 6 x!0)))
 (let ((?x457 (* 12 ?x456)))
 (let ((?x491 (* (- 6) ?x413)))
 (let ((?x488 (* (- 6) x00)))
 (let ((?x487 (* (- 3) r00)))
 (let ((?x2296 (+ ?x44 ?x487 ?x488 ?x491 ?x457 (* 4 (* s00 r!2)) ?x1523 ?x295 ?x733 (* 2 (* s!1 r!2)) (* (- 12) (* r00 r00 r!2)))))
 (let (($x668 (= ?x2296 0)))
 (let (($x1451 (and $x1558 $x668 $x2397 (= ?x960 0) $x1056 $x1399)))
 (let ((?x1662 (+ ?x1530 ?x1759 ?x1658 ?x2415 ?x1452 ?x2002 ?x771 ?x649 (* 396 (* r!2 s!1)) (* 1512 (* r!2 r00 r00)) (* (- 828) (* r!2 s00)) ?x1395 ?x1455 ?x501 ?x505 ?x437 (* (- 648) (* r!2 x!0)) (* 252 (* s!1 r00 r00)) ?x1208 (* 108 (* x!0 s00)) (* (- 108) (* x!0 r00)) (* (- 648) (* s!1 r00 r00 r00)) ?x1261 (* 648 (* r!2 x00)) ?x1026 (* (- 246) (* s!1 s00)) (* 162 (* s!1 r00)) (* 324 (* s!1 x00)) (* 648 (* r!2 s00 r00)) ?x762 (* 324 (* s!1 s00 r00)) ?x283 ?x1128 (* (- 72) (* r!2 s!1 s!1)) (* (- 324) (* s!1 x!0)) ?x443 ?x899 (* 324 (* r!2 r00)) (* (- 144) (* r!2 s!1 s00)) (* (- 12) (* s!1 s!1 s00)) ?x1044 (* 432 (* x!0 r00 r00 r00)) (* (- 216) (* x!0 s00 r00)) (* 36 (* s!1 s!1 r00 r00)) ?x1172 (* (- 216) (* x!0 x00)) ?x1334 (* 1296 (* r!2 r!2 r00 r00)) (* (- 1296) (* r!2 r00 r00 r00)) (* 432 (* r!2 s!1 r00 r00)) ?x889 (* (- 432) (* r!2 r!2 s!1)) (* (- 432) (* r!2 r!2 s00)))))
 (let ((?x1533 (+ 3 ?x872 s!1)))
 (let ((?x879 (+ ?x1429 x!0)))
 (let ((?x1672 (* ?x1428 ?x1428 ?x1428 ?x1428 ?x1428 ?x879 ?x879 ?x879 ?x879 ?x879 ?x879 ?x1533 ?x1533 ?x1533 ?x1533 ?x1533 ?x1662)))
 (let ((?x1363 (* (- 108) ?x1333)))
 (let ((?x1362 (* (- 16) ?x1171)))
 (let ((?x1358 (* (- 216) ?x1043)))
 (let ((?x870 (* 432 ?x869)))
 (let ((?x1116 (* 108 ?x792)))
 (let ((?x719 (* 36 ?x718)))
 (let ((?x999 (* 108 ?x655)))
 (let ((?x987 (* 36 ?x634)))
 (let ((?x1352 (* (- 51) ?x578)))
 (let ((?x2382 (* s!1 r00 r00)))
 (let ((?x1692 (* (- 36) ?x2382)))
 (let ((?x1349 (* (- 108) ?x509)))
 (let ((?x1348 (* (- 216) ?x500)))
 (let ((?x507 (* 54 ?x413)))
 (let ((?x974 (* (- 9) s00)))
 (let ((?x1607 (* 9 s!1)))
 (let ((?x788 (+ ?x1607 ?x974 ?x507 ?x1348 ?x1349 (* (- 15) ?x1232) ?x1692 ?x1352 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x987 ?x999 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x719 (* (- 108) (* s!1 s00 r00)) (* 4 ?x1985) ?x1116 (* 108 (* s!1 x!0)) (* (- 108) ?x2181) ?x870 (* 12 (* s!1 s!1 s00)) ?x1358 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1362 (* 216 (* x!0 x00)) ?x1363)))
 (let ((?x864 (* r00 r00 x00)))
 (let ((?x877 (* (- 36) ?x864)))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x683 (* (- 2) ?x655)))
 (let ((?x903 (* (- 15) ?x578)))
 (let ((?x538 (* (- 54) ?x509)))
 (let ((?x551 (* 24 ?x413)))
 (let ((?x370 (+ ?x1607 ?x974 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x551 ?x538 (* 3 ?x1232) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x1692 ?x903 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x987 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x683 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x793 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x877 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x635 (* 6 ?x634)))
 (let ((?x591 (* (- 4) ?x578)))
 (let ((?x523 (* (- 18) ?x509)))
 (let ((?x528 (* 9 ?x413)))
 (let ((?x365 (* (- 3) s00)))
 (let ((?x1592 (+ (* 3 s!1) ?x365 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x528 ?x523 (* 2 ?x1232) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x2382) ?x591 (* 18 (* x!0 r00)) ?x635 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x881 (+ ?x733 ?x295 ?x1523 ?x44 ?x487 ?x488 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x491 ?x457)))
 (let (($x1636 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x1584) (* 3 ?x288)) 0) (= ?x881 0) (= ?x1592 0) (= ?x370 0) (= ?x788 0) (not (= ?x1672 0)))))
 (let (($x1281 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1914 (* (- 432) (* r r s00))))
 (let ((?x1757 (* (- 432) (* r r s))))
 (let ((?x1703 (* (- 864) (* r r r))))
 (let ((?x1466 (* (- 1296) (* r r00 r00 r00))))
 (let ((?x1333 (* x00 x00)))
 (let ((?x1334 (* 108 ?x1333)))
 (let ((?x1307 (* x x00)))
 (let ((?x1320 (* (- 216) ?x1307)))
 (let ((?x1171 (* s00 s00 s00)))
 (let ((?x1172 (* 16 ?x1171)))
 (let ((?x1141 (* x s00 r00)))
 (let ((?x1154 (* (- 216) ?x1141)))
 (let ((?x1043 (* s00 r00 r00 r00)))
 (let ((?x1044 (* 216 ?x1043)))
 (let ((?x927 (* s s s00)))
 (let ((?x956 (* (- 12) ?x927)))
 (let ((?x916 (* r s s00)))
 (let ((?x1933 (* (- 144) ?x916)))
 (let ((?x869 (* r00 r00 r00 x00)))
 (let ((?x899 (* (- 432) ?x869)))
 (let ((?x841 (* x x)))
 (let ((?x842 (* 108 ?x841)))
 (let ((?x796 (* r s s)))
 (let ((?x1758 (* (- 72) ?x796)))
 (let ((?x792 (* s00 x00)))
 (let ((?x1128 (* (- 108) ?x792)))
 (let ((?x790 (* s s s)))
 (let ((?x810 (* (- 4) ?x790)))
 (let ((?x718 (* s00 s00 r00 r00)))
 (let ((?x762 (* (- 36) ?x718)))
 (let ((?x711 (* s x00)))
 (let ((?x2558 (* 324 ?x711)))
 (let ((?x655 (* s00 s00 r00)))
 (let ((?x1026 (* (- 108) ?x655)))
 (let ((?x634 (* s00 r00 r00)))
 (let ((?x1261 (* (- 36) ?x634)))
 (let ((?x604 (* x r00)))
 (let ((?x1231 (* (- 108) ?x604)))
 (let ((?x578 (* s00 s00)))
 (let ((?x1208 (* 51 ?x578)))
 (let ((?x536 (* r x)))
 (let ((?x2297 (* (- 648) ?x536)))
 (let ((?x509 (* r00 x00)))
 (let ((?x505 (* 108 ?x509)))
 (let ((?x500 (* s00 r00 x00)))
 (let ((?x501 (* 216 ?x500)))
 (let ((?x456 (* r00 r00 r00)))
 (let ((?x1455 (* (- 648) ?x456)))
 (let ((?x413 (* s00 r00)))
 (let ((?x1395 (* 270 ?x413)))
 (let ((?x386 (* r s00)))
 (let ((?x2097 (* (- 828) ?x386)))
 (let ((?x288 (* r00 r00)))
 (let ((?x649 (* 432 ?x288)))
 (let ((?x2002 (* 324 x00)))
 (let ((?x1452 (* 162 r00)))
 (let ((?x2415 (* (- 297) s00)))
 (let ((?x2287 (* (- 324) x)))
 (let ((?x717 (+ (* (- 162) r) (* 297 s) ?x2287 ?x2415 ?x1452 ?x2002 (* (- 756) (* r r)) ?x649 (* 396 (* r s)) (* 1512 (* r r00 r00)) ?x2097 ?x1395 ?x1455 ?x501 ?x505 (* 195 (* s s)) ?x2297 (* 252 (* s r00 r00)) ?x1208 (* 108 (* x s00)) ?x1231 (* (- 648) (* s r00 r00 r00)) ?x1261 (* 648 (* r x00)) ?x1026 (* (- 246) (* s s00)) (* 162 (* s r00)) ?x2558 (* 648 (* r s00 r00)) ?x762 (* 324 (* s s00 r00)) ?x810 ?x1128 ?x1758 (* (- 324) (* s x)) ?x842 ?x899 (* 324 (* r r00)) ?x1933 ?x956 ?x1044 (* 432 (* x r00 r00 r00)) ?x1154 (* 36 (* s s r00 r00)) ?x1172 ?x1320 ?x1334 (* 1296 (* r r r00 r00)) ?x1466 (* 432 (* r s r00 r00)) ?x1703 ?x1757 ?x1914)))
 (let ((?x211 (* 6 r)))
 (let ((?x1370 (+ 3 ?x211 s)))
 (let ((?x267 (* (- 1) s)))
 (let ((?x1786 (+ ?x267 x)))
 (let ((?x2576 (+ 1 r)))
 (let ((?x758 (* ?x2576 ?x2576 ?x2576 ?x2576 ?x2576 ?x1786 ?x1786 ?x1786 ?x1786 ?x1786 ?x1786 ?x1370 ?x1370 ?x1370 ?x1370 ?x1370 ?x717)))
 (let ((?x1363 (* (- 108) ?x1333)))
 (let ((?x1362 (* (- 16) ?x1171)))
 (let ((?x1358 (* (- 216) ?x1043)))
 (let ((?x870 (* 432 ?x869)))
 (let ((?x1116 (* 108 ?x792)))
 (let ((?x719 (* 36 ?x718)))
 (let ((?x999 (* 108 ?x655)))
 (let ((?x987 (* 36 ?x634)))
 (let ((?x1352 (* (- 51) ?x578)))
 (let ((?x552 (* s r00 r00)))
 (let ((?x851 (* (- 36) ?x552)))
 (let ((?x1349 (* (- 108) ?x509)))
 (let ((?x1348 (* (- 216) ?x500)))
 (let ((?x507 (* 54 ?x413)))
 (let ((?x974 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1364 (+ ?x143 ?x974 ?x507 ?x1348 ?x1349 (* (- 15) (* s s)) ?x851 ?x1352 (* (- 108) (* x s00)) (* 108 ?x604) (* 216 (* s r00 r00 r00)) ?x987 ?x999 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x711) ?x719 (* (- 108) (* s s00 r00)) (* 4 ?x790) ?x1116 (* 108 (* s x)) (* (- 108) ?x841) ?x870 (* 12 ?x927) ?x1358 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1141) (* (- 36) (* s s r00 r00)) ?x1362 (* 216 ?x1307) ?x1363)))
 (let (($x1365 (= ?x1364 0)))
 (let ((?x864 (* r00 r00 x00)))
 (let ((?x877 (* (- 36) ?x864)))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x683 (* (- 2) ?x655)))
 (let ((?x903 (* (- 15) ?x578)))
 (let ((?x532 (* s s)))
 (let ((?x556 (* 3 ?x532)))
 (let ((?x538 (* (- 54) ?x509)))
 (let ((?x551 (* 24 ?x413)))
 (let ((?x1066 (+ ?x143 ?x974 (* (- 24) (* r s)) (* 24 ?x386) ?x551 ?x538 ?x556 (* 54 ?x536) (* 36 (* r x r00)) ?x851 ?x903 (* (- 6) (* x s00)) (* 54 ?x604) ?x987 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x683 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x711) (* (- 2) (* s s00 r00)) ?x793 (* 2 ?x796) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x877 (* 2 ?x916) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1071 (= ?x1066 0)))
 (let ((?x635 (* 6 ?x634)))
 (let ((?x591 (* (- 4) ?x578)))
 (let ((?x533 (* 2 ?x532)))
 (let ((?x523 (* (- 18) ?x509)))
 (let ((?x528 (* 9 ?x413)))
 (let ((?x365 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x732 (+ ?x47 ?x365 (* (- 9) (* r s)) (* 9 ?x386) ?x528 ?x523 ?x533 (* 18 ?x536) (* 6 (* r s r00)) (* (- 6) ?x552) ?x591 (* 18 ?x604) ?x635 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x739 (= ?x732 0)))
 (let ((?x457 (* 12 ?x456)))
 (let ((?x491 (* (- 6) ?x413)))
 (let ((?x488 (* (- 6) x00)))
 (let ((?x487 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x492 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x487 ?x488 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 ?x386) ?x491 ?x457)))
 (let (($x493 (= ?x492 0)))
 (let (($x321 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x288)) 0)))
 (and $x321 $x493 $x739 $x1071 $x1365 (not (= ?x758 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1755 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1333 (* x00 x00)))
 (let ((?x1334 (* 108 ?x1333)))
 (let ((?x1927 (* (- 9) s)))
 (let ((?x2518 (* r00 r00 s00)))
 (let ((?x1898 (* (- 36) ?x2518)))
 (let ((?x137 (* 9 s00)))
 (let ((?x578 (* s00 s00)))
 (let ((?x1208 (* 51 ?x578)))
 (let ((?x919 (* (- 108) (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x1171 (* s00 s00 s00)))
 (let ((?x1172 (* 16 ?x1171)))
 (let ((?x211 (* 6 r)))
 (let ((?x1458 (+ 3 s ?x211)))
 (let ((?x792 (* s00 x00)))
 (let ((?x1128 (* (- 108) ?x792)))
 (let ((?x1131 (* 216 (* r00 r00 r00 s00))))
 (let ((?x1958 (* r00 s00 s00)))
 (let ((?x769 (* (- 108) ?x1958)))
 (let ((?x869 (* r00 r00 r00 x00)))
 (let ((?x899 (* (- 432) ?x869)))
 (let ((?x2271 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x2473 (* r00 s00)))
 (let ((?x908 (* (- 54) ?x2473)))
 (let ((?x509 (* r00 x00)))
 (let ((?x505 (* 108 ?x509)))
 (let ((?x2239 (* 216 (* r00 s00 x00))))
 (let ((?x2502 (+ (- 27) ?x2239 ?x505 ?x908 (* 15 (* ?x1458 ?x1458)) (* (- 216) (* r00 r00 r00 ?x1458)) ?x2271 (* (- 4) (* ?x1458 ?x1458 ?x1458)) (* 108 (* (+ x (* (- 1) s)) (+ x (* (- 1) s)))) ?x899 (* (- 12) (* s00 ?x1458 ?x1458)) (* 108 (* s00 (+ x (* (- 1) s)))) ?x769 ?x1131 (* 108 (* x00 ?x1458)) (* 432 (* r00 r00 r00 (+ x (* (- 1) s)))) (* (- 66) (* s00 ?x1458)) (* 108 (* r00 s00 ?x1458)) ?x1128 (* (- 216) (* r00 s00 (+ x (* (- 1) s)))) (* 36 (* r00 r00 ?x1458 ?x1458)) ?x1172 ?x919 (* 36 (* r00 r00 ?x1458)) ?x1208 (* (- 108) (* r00 (+ x (* (- 1) s)))) ?x137 ?x1898 ?x1927 (* (- 54) r) (* 54 (* r00 ?x1458)) (* (- 216) (* x00 (+ x (* (- 1) s)))) ?x1334)))
 (let ((?x267 (* (- 1) s)))
 (let ((?x308 (+ x ?x267)))
 (let ((?x2576 (+ 1 r)))
 (let ((?x588 (* ?x2576 ?x2576 ?x2576 ?x2576 ?x2576 ?x308 ?x308 ?x308 ?x308 ?x308 ?x308 ?x1458 ?x1458 ?x1458 ?x1458 ?x1458 ?x2502)))
 (let ((?x2373 (* r00 s)))
 (let ((?x2495 (* 54 ?x2373)))
 (let ((?x2332 (* r00 r00 s)))
 (let ((?x2333 (* 36 ?x2332)))
 (let ((?x2218 (* 36 (* r00 r00 s s))))
 (let ((?x2021 (* 432 (* r00 r00 r00 x))))
 (let ((?x1956 (* s00 x)))
 (let ((?x1957 (* 108 ?x1956)))
 (let ((?x841 (* x x)))
 (let ((?x842 (* 108 ?x841)))
 (let ((?x790 (* s s s)))
 (let ((?x810 (* (- 4) ?x790)))
 (let ((?x1526 (+ ?x2239 ?x505 ?x908 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x2271 ?x810 ?x842 ?x899 (* (- 12) (* s00 s s)) ?x1957 ?x769 ?x1131 (* 108 (* x00 s)) ?x2021 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1128 (* (- 216) (* r00 s00 x)) ?x2218 ?x1172 (* (- 108) (* x s)) ?x2333 ?x1208 (* (- 108) (* r00 x)) ?x137 ?x1898 ?x1927 ?x2495 (* (- 216) (* x00 x)) ?x1334)))
 (let ((?x143 (* 9 s)))
 (let ((?x974 (* (- 9) s00)))
 (let ((?x903 (* (- 15) ?x578)))
 (let ((?x864 (* r00 r00 x00)))
 (let ((?x877 (* (- 36) ?x864)))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x532 (* s s)))
 (let ((?x556 (* 3 ?x532)))
 (let ((?x538 (* (- 54) ?x509)))
 (let ((?x311 (+ (* (- 24) (* s r)) ?x538 (* 36 (* r00 x r)) (* 24 ?x2473) ?x556 (* 54 (* x r)) (* (- 6) ?x1956) (* 4 (* r00 s s)) (* (- 2) ?x1958) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x793 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2332) ?x877 ?x903 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x974 (* 36 ?x2518) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2373) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x365 (* (- 3) s00)))
 (let ((?x591 (* (- 4) ?x578)))
 (let ((?x533 (* 2 ?x532)))
 (let ((?x523 (* (- 18) ?x509)))
 (let ((?x478 (+ (* (- 9) (* s r)) ?x523 (* 9 ?x2473) ?x533 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2332) ?x591 (* 18 (* r00 x)) ?x365 (* 6 ?x2518) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2373) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1480 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x365 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x2473) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2303 (= (+ s00 ?x267 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2303 (= ?x1480 0) (= ?x478 0) (= ?x311 0) (= ?x1526 0) (not (= ?x588 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1717 (lambda ((r Int) (s Int) (x Int) )(let ((?x1914 (* (- 432) (* r r s00))))
 (let ((?x1757 (* (- 432) (* r r s))))
 (let ((?x1703 (* (- 864) (* r r r))))
 (let ((?x1466 (* (- 1296) (* r r00 r00 r00))))
 (let ((?x1333 (* x00 x00)))
 (let ((?x1334 (* 108 ?x1333)))
 (let ((?x1307 (* x x00)))
 (let ((?x1320 (* (- 216) ?x1307)))
 (let ((?x1171 (* s00 s00 s00)))
 (let ((?x1172 (* 16 ?x1171)))
 (let ((?x1141 (* x s00 r00)))
 (let ((?x1154 (* (- 216) ?x1141)))
 (let ((?x1043 (* s00 r00 r00 r00)))
 (let ((?x1044 (* 216 ?x1043)))
 (let ((?x927 (* s s s00)))
 (let ((?x956 (* (- 12) ?x927)))
 (let ((?x916 (* r s s00)))
 (let ((?x1933 (* (- 144) ?x916)))
 (let ((?x869 (* r00 r00 r00 x00)))
 (let ((?x899 (* (- 432) ?x869)))
 (let ((?x841 (* x x)))
 (let ((?x842 (* 108 ?x841)))
 (let ((?x796 (* r s s)))
 (let ((?x1758 (* (- 72) ?x796)))
 (let ((?x792 (* s00 x00)))
 (let ((?x1128 (* (- 108) ?x792)))
 (let ((?x790 (* s s s)))
 (let ((?x810 (* (- 4) ?x790)))
 (let ((?x718 (* s00 s00 r00 r00)))
 (let ((?x762 (* (- 36) ?x718)))
 (let ((?x711 (* s x00)))
 (let ((?x2558 (* 324 ?x711)))
 (let ((?x655 (* s00 s00 r00)))
 (let ((?x1026 (* (- 108) ?x655)))
 (let ((?x634 (* s00 r00 r00)))
 (let ((?x1261 (* (- 36) ?x634)))
 (let ((?x604 (* x r00)))
 (let ((?x1231 (* (- 108) ?x604)))
 (let ((?x578 (* s00 s00)))
 (let ((?x1208 (* 51 ?x578)))
 (let ((?x536 (* r x)))
 (let ((?x2297 (* (- 648) ?x536)))
 (let ((?x509 (* r00 x00)))
 (let ((?x505 (* 108 ?x509)))
 (let ((?x500 (* s00 r00 x00)))
 (let ((?x501 (* 216 ?x500)))
 (let ((?x456 (* r00 r00 r00)))
 (let ((?x1455 (* (- 648) ?x456)))
 (let ((?x413 (* s00 r00)))
 (let ((?x1395 (* 270 ?x413)))
 (let ((?x386 (* r s00)))
 (let ((?x2097 (* (- 828) ?x386)))
 (let ((?x288 (* r00 r00)))
 (let ((?x649 (* 432 ?x288)))
 (let ((?x2002 (* 324 x00)))
 (let ((?x1452 (* 162 r00)))
 (let ((?x2415 (* (- 297) s00)))
 (let ((?x2287 (* (- 324) x)))
 (let ((?x717 (+ (* (- 162) r) (* 297 s) ?x2287 ?x2415 ?x1452 ?x2002 (* (- 756) (* r r)) ?x649 (* 396 (* r s)) (* 1512 (* r r00 r00)) ?x2097 ?x1395 ?x1455 ?x501 ?x505 (* 195 (* s s)) ?x2297 (* 252 (* s r00 r00)) ?x1208 (* 108 (* x s00)) ?x1231 (* (- 648) (* s r00 r00 r00)) ?x1261 (* 648 (* r x00)) ?x1026 (* (- 246) (* s s00)) (* 162 (* s r00)) ?x2558 (* 648 (* r s00 r00)) ?x762 (* 324 (* s s00 r00)) ?x810 ?x1128 ?x1758 (* (- 324) (* s x)) ?x842 ?x899 (* 324 (* r r00)) ?x1933 ?x956 ?x1044 (* 432 (* x r00 r00 r00)) ?x1154 (* 36 (* s s r00 r00)) ?x1172 ?x1320 ?x1334 (* 1296 (* r r r00 r00)) ?x1466 (* 432 (* r s r00 r00)) ?x1703 ?x1757 ?x1914)))
 (let ((?x211 (* 6 r)))
 (let ((?x1370 (+ 3 ?x211 s)))
 (let ((?x267 (* (- 1) s)))
 (let ((?x1786 (+ ?x267 x)))
 (let ((?x2576 (+ 1 r)))
 (let ((?x758 (* ?x2576 ?x2576 ?x2576 ?x2576 ?x2576 ?x1786 ?x1786 ?x1786 ?x1786 ?x1786 ?x1786 ?x1370 ?x1370 ?x1370 ?x1370 ?x1370 ?x717)))
 (let ((?x1363 (* (- 108) ?x1333)))
 (let ((?x1362 (* (- 16) ?x1171)))
 (let ((?x1358 (* (- 216) ?x1043)))
 (let ((?x870 (* 432 ?x869)))
 (let ((?x1116 (* 108 ?x792)))
 (let ((?x719 (* 36 ?x718)))
 (let ((?x999 (* 108 ?x655)))
 (let ((?x987 (* 36 ?x634)))
 (let ((?x1352 (* (- 51) ?x578)))
 (let ((?x552 (* s r00 r00)))
 (let ((?x851 (* (- 36) ?x552)))
 (let ((?x1349 (* (- 108) ?x509)))
 (let ((?x1348 (* (- 216) ?x500)))
 (let ((?x507 (* 54 ?x413)))
 (let ((?x974 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1364 (+ ?x143 ?x974 ?x507 ?x1348 ?x1349 (* (- 15) (* s s)) ?x851 ?x1352 (* (- 108) (* x s00)) (* 108 ?x604) (* 216 (* s r00 r00 r00)) ?x987 ?x999 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x711) ?x719 (* (- 108) (* s s00 r00)) (* 4 ?x790) ?x1116 (* 108 (* s x)) (* (- 108) ?x841) ?x870 (* 12 ?x927) ?x1358 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1141) (* (- 36) (* s s r00 r00)) ?x1362 (* 216 ?x1307) ?x1363)))
 (let (($x1365 (= ?x1364 0)))
 (let ((?x864 (* r00 r00 x00)))
 (let ((?x877 (* (- 36) ?x864)))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x683 (* (- 2) ?x655)))
 (let ((?x903 (* (- 15) ?x578)))
 (let ((?x532 (* s s)))
 (let ((?x556 (* 3 ?x532)))
 (let ((?x538 (* (- 54) ?x509)))
 (let ((?x551 (* 24 ?x413)))
 (let ((?x1066 (+ ?x143 ?x974 (* (- 24) (* r s)) (* 24 ?x386) ?x551 ?x538 ?x556 (* 54 ?x536) (* 36 (* r x r00)) ?x851 ?x903 (* (- 6) (* x s00)) (* 54 ?x604) ?x987 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x683 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x711) (* (- 2) (* s s00 r00)) ?x793 (* 2 ?x796) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x877 (* 2 ?x916) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1071 (= ?x1066 0)))
 (let ((?x635 (* 6 ?x634)))
 (let ((?x591 (* (- 4) ?x578)))
 (let ((?x533 (* 2 ?x532)))
 (let ((?x523 (* (- 18) ?x509)))
 (let ((?x528 (* 9 ?x413)))
 (let ((?x365 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x732 (+ ?x47 ?x365 (* (- 9) (* r s)) (* 9 ?x386) ?x528 ?x523 ?x533 (* 18 ?x536) (* 6 (* r s r00)) (* (- 6) ?x552) ?x591 (* 18 ?x604) ?x635 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x739 (= ?x732 0)))
 (let ((?x457 (* 12 ?x456)))
 (let ((?x491 (* (- 6) ?x413)))
 (let ((?x488 (* (- 6) x00)))
 (let ((?x487 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x492 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x487 ?x488 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 ?x386) ?x491 ?x457)))
 (let (($x493 (= ?x492 0)))
 (let (($x321 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x288)) 0)))
 (let (($x1855 (and $x321 $x493 $x739 $x1071 $x1365 (not (= ?x758 0)))))
 (let ((?x1927 (* (- 9) s)))
 (let ((?x2518 (* r00 r00 s00)))
 (let ((?x1898 (* (- 36) ?x2518)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1131 (* 216 (* r00 r00 r00 s00))))
 (let ((?x1958 (* r00 s00 s00)))
 (let ((?x769 (* (- 108) ?x1958)))
 (let ((?x1136 (* (- 4) (* (+ 3 s ?x211) (+ 3 s ?x211) (+ 3 s ?x211)))))
 (let ((?x2271 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x2473 (* r00 s00)))
 (let ((?x908 (* (- 54) ?x2473)))
 (let ((?x2239 (* 216 (* r00 s00 x00))))
 (let ((?x2502 (+ (- 27) ?x2239 ?x505 ?x908 (* 15 (* (+ 3 s ?x211) (+ 3 s ?x211))) (* (- 216) (* r00 r00 r00 (+ 3 s ?x211))) ?x2271 ?x1136 (* 108 (* (+ x ?x267) (+ x ?x267))) ?x899 (* (- 12) (* s00 (+ 3 s ?x211) (+ 3 s ?x211))) (* 108 (* s00 (+ x ?x267))) ?x769 ?x1131 (* 108 (* x00 (+ 3 s ?x211))) (* 432 (* r00 r00 r00 (+ x ?x267))) (* (- 66) (* s00 (+ 3 s ?x211))) (* 108 (* r00 s00 (+ 3 s ?x211))) ?x1128 (* (- 216) (* r00 s00 (+ x ?x267))) (* 36 (* r00 r00 (+ 3 s ?x211) (+ 3 s ?x211))) ?x1172 (* (- 108) (* (+ x ?x267) (+ 3 s ?x211))) (* 36 (* r00 r00 (+ 3 s ?x211))) ?x1208 (* (- 108) (* r00 (+ x ?x267))) ?x137 ?x1898 ?x1927 (* (- 54) r) (* 54 (* r00 (+ 3 s ?x211))) (* (- 216) (* x00 (+ x ?x267))) ?x1334)))
 (let ((?x1458 (+ 3 s ?x211)))
 (let ((?x308 (+ x ?x267)))
 (let ((?x588 (* ?x2576 ?x2576 ?x2576 ?x2576 ?x2576 ?x308 ?x308 ?x308 ?x308 ?x308 ?x308 ?x1458 ?x1458 ?x1458 ?x1458 ?x1458 ?x2502)))
 (let ((?x2373 (* r00 s)))
 (let ((?x2495 (* 54 ?x2373)))
 (let ((?x2332 (* r00 r00 s)))
 (let ((?x2333 (* 36 ?x2332)))
 (let ((?x2218 (* 36 (* r00 r00 s s))))
 (let ((?x2021 (* 432 (* r00 r00 r00 x))))
 (let ((?x1956 (* s00 x)))
 (let ((?x1957 (* 108 ?x1956)))
 (let ((?x1526 (+ ?x2239 ?x505 ?x908 (* 15 ?x532) (* (- 216) (* r00 r00 r00 s)) ?x2271 ?x810 ?x842 ?x899 (* (- 12) (* s00 s s)) ?x1957 ?x769 ?x1131 (* 108 (* x00 s)) ?x2021 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1128 (* (- 216) (* r00 s00 x)) ?x2218 ?x1172 (* (- 108) (* x s)) ?x2333 ?x1208 (* (- 108) (* r00 x)) ?x137 ?x1898 ?x1927 ?x2495 (* (- 216) (* x00 x)) ?x1334)))
 (let ((?x311 (+ (* (- 24) (* s r)) ?x538 (* 36 (* r00 x r)) (* 24 ?x2473) ?x556 (* 54 (* x r)) (* (- 6) ?x1956) (* 4 (* r00 s s)) (* (- 2) ?x1958) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x793 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2332) ?x877 ?x903 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x974 (* 36 ?x2518) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2373) (* 36 (* r00 r00 x)))))
 (let ((?x478 (+ (* (- 9) (* s r)) ?x523 (* 9 ?x2473) ?x533 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2332) ?x591 (* 18 (* r00 x)) ?x365 (* 6 ?x2518) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2373) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1480 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x365 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x2473) (* (- 6) x) ?x59 (* (- 12) ?x456))))
 (let (($x2542 (and (= (+ s00 ?x267 (* 3 (* r r)) (* (- 3) ?x288)) 0) (= ?x1480 0) (= ?x478 0) (= ?x311 0) (= ?x1526 0) (not (= ?x588 0)))))
 (rewrite (= $x2542 $x1855))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x264 (exists ((r Int) (s Int) (x Int) )(! (let ((?x220 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x258 (+ r 1)))
 (let ((?x257 (- 1)))
 (let ((?x208 (* 108 x00 x00)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x197 (* 51 s00 s00)))
 (let ((?x192 (* 16 s00 s00 s00)))
 (let ((?x186 (* 108 s00 x00)))
 (let ((?x177 (* 216 r00 r00 r00 s00)))
 (let ((?x175 (* 108 r00 s00 s00)))
 (let ((?x169 (* 432 r00 r00 r00 x00)))
 (let ((?x161 (* 36 r00 r00 s00 s00)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x218 (- (- (+ ?x157 (* 15 ?x212 ?x212)) (* 216 r00 r00 r00 ?x212)) ?x161)))
 (let ((?x225 (- (- (+ (- ?x218 (* 4 ?x212 ?x212 ?x212)) (* 108 ?x220 ?x220)) ?x169) (* 12 ?x212 ?x212 s00))))
 (let ((?x231 (+ (- (+ ?x225 (* 108 s00 ?x220)) ?x175) ?x177 (* 108 ?x212 x00) (* 432 r00 r00 r00 ?x220))))
 (let ((?x237 (- (+ (- ?x231 (* 66 ?x212 s00)) (* 108 r00 ?x212 s00)) ?x186)))
 (let ((?x240 (+ (- ?x237 (* 216 r00 s00 ?x220)) (* 36 r00 r00 ?x212 ?x212) ?x192)))
 (let ((?x246 (- (+ (- ?x240 (* 108 ?x212 ?x220)) (* 36 r00 r00 ?x212) ?x197) (* 108 r00 ?x220))))
 (let ((?x254 (- (+ (- (- (+ ?x246 ?x137) ?x139) (* 9 ?x212)) (* 54 r00 ?x212)) (* 216 ?x220 x00))))
 (let ((?x259 (* (+ ?x254 ?x208) ?x257 ?x258 ?x258 ?x212 ?x212 ?x220 ?x220 ?x220 ?x257 ?x258 ?x258 ?x258 ?x212 ?x212 ?x212 ?x220 ?x220 ?x220)))
 (let ((?x143 (* 9 s)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) ?x161)))
 (let ((?x172 (- (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) ?x169) (* 12 s s s00))))
 (let ((?x180 (+ (- (+ ?x172 (* 108 s00 x)) ?x175) ?x177 (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) ?x186)))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) ?x192)))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 ?x197) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 ?x208) 0) (or (not (= ?x259 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1847 (lambda ((r Int) (s Int) (x Int) )(let ((?x1333 (* x00 x00)))
 (let ((?x1334 (* 108 ?x1333)))
 (let ((?x1927 (* (- 9) s)))
 (let ((?x2518 (* r00 r00 s00)))
 (let ((?x1898 (* (- 36) ?x2518)))
 (let ((?x137 (* 9 s00)))
 (let ((?x578 (* s00 s00)))
 (let ((?x1208 (* 51 ?x578)))
 (let ((?x919 (* (- 108) (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x1171 (* s00 s00 s00)))
 (let ((?x1172 (* 16 ?x1171)))
 (let ((?x211 (* 6 r)))
 (let ((?x1458 (+ 3 s ?x211)))
 (let ((?x792 (* s00 x00)))
 (let ((?x1128 (* (- 108) ?x792)))
 (let ((?x1131 (* 216 (* r00 r00 r00 s00))))
 (let ((?x1958 (* r00 s00 s00)))
 (let ((?x769 (* (- 108) ?x1958)))
 (let ((?x869 (* r00 r00 r00 x00)))
 (let ((?x899 (* (- 432) ?x869)))
 (let ((?x2271 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x2473 (* r00 s00)))
 (let ((?x908 (* (- 54) ?x2473)))
 (let ((?x509 (* r00 x00)))
 (let ((?x505 (* 108 ?x509)))
 (let ((?x2239 (* 216 (* r00 s00 x00))))
 (let ((?x2502 (+ (- 27) ?x2239 ?x505 ?x908 (* 15 (* ?x1458 ?x1458)) (* (- 216) (* r00 r00 r00 ?x1458)) ?x2271 (* (- 4) (* ?x1458 ?x1458 ?x1458)) (* 108 (* (+ x (* (- 1) s)) (+ x (* (- 1) s)))) ?x899 (* (- 12) (* s00 ?x1458 ?x1458)) (* 108 (* s00 (+ x (* (- 1) s)))) ?x769 ?x1131 (* 108 (* x00 ?x1458)) (* 432 (* r00 r00 r00 (+ x (* (- 1) s)))) (* (- 66) (* s00 ?x1458)) (* 108 (* r00 s00 ?x1458)) ?x1128 (* (- 216) (* r00 s00 (+ x (* (- 1) s)))) (* 36 (* r00 r00 ?x1458 ?x1458)) ?x1172 ?x919 (* 36 (* r00 r00 ?x1458)) ?x1208 (* (- 108) (* r00 (+ x (* (- 1) s)))) ?x137 ?x1898 ?x1927 (* (- 54) r) (* 54 (* r00 ?x1458)) (* (- 216) (* x00 (+ x (* (- 1) s)))) ?x1334)))
 (let ((?x267 (* (- 1) s)))
 (let ((?x308 (+ x ?x267)))
 (let ((?x2576 (+ 1 r)))
 (let ((?x588 (* ?x2576 ?x2576 ?x2576 ?x2576 ?x2576 ?x308 ?x308 ?x308 ?x308 ?x308 ?x308 ?x1458 ?x1458 ?x1458 ?x1458 ?x1458 ?x2502)))
 (let ((?x2373 (* r00 s)))
 (let ((?x2495 (* 54 ?x2373)))
 (let ((?x2332 (* r00 r00 s)))
 (let ((?x2333 (* 36 ?x2332)))
 (let ((?x2218 (* 36 (* r00 r00 s s))))
 (let ((?x2021 (* 432 (* r00 r00 r00 x))))
 (let ((?x1956 (* s00 x)))
 (let ((?x1957 (* 108 ?x1956)))
 (let ((?x841 (* x x)))
 (let ((?x842 (* 108 ?x841)))
 (let ((?x790 (* s s s)))
 (let ((?x810 (* (- 4) ?x790)))
 (let ((?x1526 (+ ?x2239 ?x505 ?x908 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x2271 ?x810 ?x842 ?x899 (* (- 12) (* s00 s s)) ?x1957 ?x769 ?x1131 (* 108 (* x00 s)) ?x2021 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1128 (* (- 216) (* r00 s00 x)) ?x2218 ?x1172 (* (- 108) (* x s)) ?x2333 ?x1208 (* (- 108) (* r00 x)) ?x137 ?x1898 ?x1927 ?x2495 (* (- 216) (* x00 x)) ?x1334)))
 (let ((?x143 (* 9 s)))
 (let ((?x974 (* (- 9) s00)))
 (let ((?x903 (* (- 15) ?x578)))
 (let ((?x864 (* r00 r00 x00)))
 (let ((?x877 (* (- 36) ?x864)))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x532 (* s s)))
 (let ((?x556 (* 3 ?x532)))
 (let ((?x538 (* (- 54) ?x509)))
 (let ((?x311 (+ (* (- 24) (* s r)) ?x538 (* 36 (* r00 x r)) (* 24 ?x2473) ?x556 (* 54 (* x r)) (* (- 6) ?x1956) (* 4 (* r00 s s)) (* (- 2) ?x1958) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x793 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2332) ?x877 ?x903 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x974 (* 36 ?x2518) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2373) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x365 (* (- 3) s00)))
 (let ((?x591 (* (- 4) ?x578)))
 (let ((?x533 (* 2 ?x532)))
 (let ((?x523 (* (- 18) ?x509)))
 (let ((?x478 (+ (* (- 9) (* s r)) ?x523 (* 9 ?x2473) ?x533 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2332) ?x591 (* 18 (* r00 x)) ?x365 (* 6 ?x2518) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2373) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1480 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x365 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x2473) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2303 (= (+ s00 ?x267 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2542 (and $x2303 (= ?x1480 0) (= ?x478 0) (= ?x311 0) (= ?x1526 0) (not (= ?x588 0)))))
 (let ((?x220 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x258 (+ r 1)))
 (let ((?x257 (- 1)))
 (let ((?x208 (* 108 x00 x00)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x197 (* 51 s00 s00)))
 (let ((?x192 (* 16 s00 s00 s00)))
 (let ((?x186 (* 108 s00 x00)))
 (let ((?x177 (* 216 r00 r00 r00 s00)))
 (let ((?x175 (* 108 r00 s00 s00)))
 (let ((?x169 (* 432 r00 r00 r00 x00)))
 (let ((?x161 (* 36 r00 r00 s00 s00)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x218 (- (- (+ ?x157 (* 15 ?x212 ?x212)) (* 216 r00 r00 r00 ?x212)) ?x161)))
 (let ((?x225 (- (- (+ (- ?x218 (* 4 ?x212 ?x212 ?x212)) (* 108 ?x220 ?x220)) ?x169) (* 12 ?x212 ?x212 s00))))
 (let ((?x231 (+ (- (+ ?x225 (* 108 s00 ?x220)) ?x175) ?x177 (* 108 ?x212 x00) (* 432 r00 r00 r00 ?x220))))
 (let ((?x237 (- (+ (- ?x231 (* 66 ?x212 s00)) (* 108 r00 ?x212 s00)) ?x186)))
 (let ((?x240 (+ (- ?x237 (* 216 r00 s00 ?x220)) (* 36 r00 r00 ?x212 ?x212) ?x192)))
 (let ((?x246 (- (+ (- ?x240 (* 108 ?x212 ?x220)) (* 36 r00 r00 ?x212) ?x197) (* 108 r00 ?x220))))
 (let ((?x254 (- (+ (- (- (+ ?x246 ?x137) ?x139) (* 9 ?x212)) (* 54 r00 ?x212)) (* 216 ?x220 x00))))
 (let ((?x259 (* (+ ?x254 ?x208) ?x257 ?x258 ?x258 ?x212 ?x212 ?x220 ?x220 ?x220 ?x257 ?x258 ?x258 ?x258 ?x212 ?x212 ?x212 ?x220 ?x220 ?x220)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) ?x161)))
 (let ((?x172 (- (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) ?x169) (* 12 s s s00))))
 (let ((?x180 (+ (- (+ ?x172 (* 108 s00 x)) ?x175) ?x177 (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) ?x186)))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) ?x192)))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 ?x197) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x263 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 ?x208) 0) (or (not (= ?x259 0))))))
 (rewrite (= $x263 $x2542)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x265 (asserted $x264)))
 (let ((@x1132 (mp (mp @x265 (quant-intro (proof-bind ?x1847) (= $x264 $x1755)) $x1755) (rewrite (= $x1755 $x1755)) $x1755)))
 (let ((@x1683 (mp~ (mp @x1132 (quant-intro (proof-bind ?x1717) (= $x1755 $x1281)) $x1281) (sk (~ $x1281 $x1636)) $x1636)))
 (let ((@x1287 (mp @x1683 (rewrite (= $x1636 $x1451)) $x1451)))
 (let ((@x1481 (and-elim @x1287 $x1558)))
 (let ((@x749 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1558) $x2294)) @x1481 $x2294)))
 (let (($x1641 (>= ?x1609 0)))
 (let ((@x600 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1558) $x1641)) @x1481 $x1641)))
 (let (($x404 (<= ?x1041 0)))
 (let ((@x1734 (and-elim @x1287 $x1056)))
 (let ((@x1678 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1056) $x404)) @x1734 $x404)))
 (let (($x2544 (>= ?x1041 0)))
 (let ((@x715 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1056) $x2544)) @x1734 $x2544)))
 (let (($x890 (<= ?x2296 0)))
 (let ((@x907 (and-elim @x1287 $x668)))
 (let ((@x2319 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x668) $x890)) @x907 $x890)))
 (let (($x1168 (>= ?x2296 0)))
 (let ((@x619 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x668) $x1168)) @x907 $x1168)))
 (let ((@x3919 ((_ th-lemma arith) (hypothesis (not $x4048)) @x600 @x749 @x619 @x2319 @x619 @x2319 @x715 @x1678 @x600 @x749 false)))
 (let ((@x4041 (lemma @x3919 $x4048)))
 (let (($x284 (>= ?x2261 0)))
 (let (($x1058 (<= ?x2396 0)))
 (let ((@x1561 (and-elim @x1287 $x2397)))
 (let (($x1092 (>= ?x2396 0)))
 (let ((@x323 ((_ th-lemma arith) (hypothesis (not $x284)) @x600 @x749 @x600 @x749 @x619 @x2319 @x600 @x749 @x619 @x2319 @x715 @x1678 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2397) $x1092)) @x1561 $x1092) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2397) $x1058)) @x1561 $x1058) @x600 @x749 false)))
 (let ((@x324 (lemma @x323 $x284)))
 (let (($x4006 (not (<= ?x1148 0))))
 (let (($x1774 (>= ?x1148 0)))
 (let ((@x2818 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1774)) @x324 (hypothesis $x4048) false) (or (not $x4048) $x1774))))
 (let ((@x3880 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1450 $x4006 (not $x1774))) (and-elim @x1287 $x1399) (or $x4006 (not $x1774)))))
 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x3880 (unit-resolution @x2818 @x4041 $x1774) $x4006) @x324 @x4041 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 264
 :arith-assert-diseq        27
 :arith-assert-lower        1409
 :arith-assert-upper        1705
 :arith-bound-prop          10
 :arith-branch-var          43
 :arith-conflicts           70
 :arith-eq-adapter          29
 :arith-fixed-eqs           464
 :arith-gcd-tests           572
 :arith-gomory-cuts         14
 :arith-grobner             78
 :arith-ineq-splits         43
 :arith-max-min             14396
 :arith-nonlinear-bounds    1255
 :arith-nonlinear-horner    772
 :arith-num-rows            27
 :arith-offset-eqs          29
 :arith-patches             147
 :arith-patches_succ        61
 :arith-pivots              1256
 :arith-pseudo-nonlinear    476
 :arith-row-summations      3816
 :arith-tableau-max-columns 221
 :arith-tableau-max-rows    27
 :conflicts                 75
 :decisions                 881
 :del-clause                86
 :final-checks              273
 :max-memory                36.72
 :memory                    19.51
 :minimized-lits            8
 :mk-bool-var               610
 :mk-clause                 224
 :num-allocs                10981236574903.00
 :num-checks                1
 :propagations              309
 :rlimit-count              64697909
 :time                      120.69
 :total-time                120.70)
