unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x551 (* 3 c!3)))
 (let ((?x583 (* k!2 n!0)))
 (let ((?x666 (* (- 1) ?x583)))
 (let ((?x465 (* (- 2) n!0)))
 (let ((?x293 (+ k!2 ?x465 ?x666 ?x551)))
 (let (($x248 (<= ?x293 1)))
 (let (($x619 (= ?x293 1)))
 (let ((?x688 (+ k!2 c!3)))
 (let ((?x1128 (+ k!2 m!1)))
 (let ((?x204 (+ 6 m!1)))
 (let ((?x464 (+ 1 n!0)))
 (let ((?x636 (* (- 108) m!1)))
 (let ((?x718 (* (- 1) (* ?x464 ?x464 ?x464 ?x464 ?x204 ?x204 ?x204 ?x1128 ?x1128 ?x1128 ?x688))))
 (let ((?x752 (* 648 c!3)))
 (let ((?x616 (* 864 ?x583)))
 (let ((?x581 (* m!1 m!1 m!1 m!1)))
 (let ((?x473 (* 324 (* c!3 m!1))))
 (let ((?x565 (* 3 (* c!3 m!1 m!1 m!1))))
 (let ((?x485 (* 432 (* k!2 m!1))))
 (let ((?x558 (* 4 (* k!2 m!1 m!1 m!1))))
 (let ((?x513 (* n!0 n!0)))
 (let ((?x710 (* (- 432) ?x513)))
 (let ((?x523 (* (- 1) (* ?x464 ?x464 ?x204 ?x204 ?x204 ?x1128))))
 (let ((?x482 (* 72 (* k!2 m!1 m!1))))
 (let ((?x468 (* 15 (* m!1 m!1 m!1))))
 (let ((?x528 (* 54 (* m!1 m!1))))
 (let ((?x603 (* (- 1080) n!0)))
 (let ((?x476 (* 54 (* c!3 m!1 m!1))))
 (let ((?x725 (* 864 k!2)))
 (let ((?x1029 (+ (* 13 (* n!0 m!1 m!1 m!1)) (* (- 216) (* n!0 n!0 m!1)) (* 54 (* n!0 c!3 m!1 m!1)) (* 324 (* n!0 c!3 m!1)) (* 18 (* n!0 m!1 m!1)) (* ?x464 ?x464 ?x464 ?x204 ?x204 ?x204 ?x1128 ?x1128 ?x1128 ?x688) ?x725 (* 432 (* k!2 n!0 m!1)) (* 72 (* k!2 n!0 m!1 m!1)) ?x476 ?x603 ?x528 ?x468 ?x482 ?x523 (* 648 (* n!0 c!3)) ?x710 ?x558 ?x485 ?x565 ?x473 ?x581 ?x616 (* 4 (* k!2 n!0 m!1 m!1 m!1)) (* n!0 m!1 m!1 m!1 m!1) (* ?x464 ?x464 ?x464 ?x204 ?x1128 ?x1128 ?x1128 ?x1128 ?x688 ?x688) (* (- 2) (* ?x464 ?x464 ?x464 ?x464 ?x204 ?x204 ?x204 ?x1128 ?x1128 ?x688)) ?x752 (* (- 324) (* n!0 m!1)) (* (- 1) (* ?x464 ?x464 ?x464 ?x204 ?x204 ?x204 ?x1128 ?x1128 ?x688)) (* (- 3) (* ?x464 ?x464 ?x204 ?x1128 ?x1128 ?x1128 ?x688 ?x688 ?x688)) (* 3 (* ?x464 ?x464 ?x464 ?x204 ?x204 ?x204 ?x1128 ?x1128 ?x688 ?x688)) (* (- 36) (* n!0 n!0 m!1 m!1)) (* 3 (* n!0 c!3 m!1 m!1 m!1)) (* ?x464 ?x464 ?x204 ?x1128 ?x1128 ?x1128 ?x688 ?x688) ?x718 (* (- 1) (* ?x464 ?x464 ?x204 ?x1128 ?x1128 ?x1128 ?x1128 ?x688 ?x688)) ?x636 (* 2 (* ?x464 ?x464 ?x464 ?x204 ?x1128 ?x1128 ?x1128 ?x688 ?x688)) (* (- 2) (* n!0 n!0 m!1 m!1 m!1)))))
 (let (($x301 (= ?x1029 648)))
 (let (($x294 (not $x301)))
 (let ((?x321 (+ k!2 (* (- 3) n!0) (* (- 3) ?x513))))
 (let (($x1097 (= ?x321 1)))
 (let ((?x709 (* (- 1) (* k!2 k!2))))
 (let ((?x907 (* 18 c!3)))
 (let ((?x256 (* (- 9) n!0)))
 (let ((?x241 (* 5 k!2)))
 (let ((?x668 (+ ?x241 ?x256 (* 9 (* n!0 c!3)) ?x907 ?x709)))
 (let (($x675 (= ?x668 4)))
 (let ((?x707 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x452 (= ?x707 (- 6))))
 (let (($x193 (and $x452 $x675 $x619 $x1097 $x294)))
 (let ((?x454 (+ c!3 k!2)))
 (let ((?x534 (* (- 1) (* ?x464 ?x464 ?x464 ?x464 ?x204 ?x204 ?x204 ?x1128 ?x1128 ?x1128 ?x454))))
 (let ((?x705 (+ ?x752 ?x725 ?x636 ?x603 ?x616 (* 648 (* c!3 n!0)) ?x710 (* 4 (* k!2 m!1 m!1 m!1 n!0)) (* m!1 m!1 m!1 m!1 n!0) (* ?x464 ?x464 ?x464 ?x204 ?x1128 ?x1128 ?x1128 ?x1128 ?x454 ?x454) (* (- 2) (* ?x464 ?x464 ?x464 ?x464 ?x204 ?x204 ?x204 ?x1128 ?x1128 ?x454)) (* 18 (* m!1 m!1 n!0)) (* ?x464 ?x464 ?x464 ?x204 ?x204 ?x204 ?x1128 ?x1128 ?x1128 ?x454) (* (- 324) (* m!1 n!0)) ?x528 ?x523 (* (- 2) (* m!1 m!1 m!1 n!0 n!0)) (* (- 1) (* ?x464 ?x464 ?x204 ?x1128 ?x1128 ?x1128 ?x1128 ?x454 ?x454)) ?x534 (* (- 1) (* ?x464 ?x464 ?x464 ?x204 ?x204 ?x204 ?x1128 ?x1128 ?x454)) (* (- 216) (* m!1 n!0 n!0)) (* (- 36) (* m!1 m!1 n!0 n!0)) (* 3 (* c!3 m!1 m!1 m!1 n!0)) (* ?x464 ?x464 ?x204 ?x1128 ?x1128 ?x1128 ?x454 ?x454) (* 2 (* ?x464 ?x464 ?x464 ?x204 ?x1128 ?x1128 ?x1128 ?x454 ?x454)) ?x485 ?x482 ?x558 (* (- 3) (* ?x464 ?x464 ?x204 ?x1128 ?x1128 ?x1128 ?x454 ?x454 ?x454)) (* 432 (* k!2 m!1 n!0)) (* 72 (* k!2 m!1 m!1 n!0)) ?x565 ?x476 ?x473 (* 324 (* c!3 m!1 n!0)) (* 54 (* c!3 m!1 m!1 n!0)) (* 3 (* ?x464 ?x464 ?x464 ?x204 ?x204 ?x204 ?x1128 ?x1128 ?x454 ?x454)) ?x468 (* 13 (* m!1 m!1 m!1 n!0)) ?x581)))
 (let (($x580 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x907 ?x241 ?x256 ?x709 (* 9 (* c!3 n!0))) 4) (= (+ ?x551 k!2 ?x465 ?x666) 1) $x1097 (not (= ?x705 648)))))
 (let (($x590 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1119 (* m m m m)))
 (let ((?x1052 (* m m m n)))
 (let ((?x951 (* 13 ?x1052)))
 (let ((?x1032 (* m m m)))
 (let ((?x903 (* 15 ?x1032)))
 (let ((?x73 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x800 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x680 (* 3 ?x800)))
 (let ((?x930 (* 54 (* c m m n))))
 (let ((?x925 (* 324 (* c m n))))
 (let ((?x932 (* 324 (* c m))))
 (let ((?x927 (* 54 (* c m m))))
 (let ((?x946 (* 3 (* c m m m))))
 (let ((?x734 (* k m m n)))
 (let ((?x906 (* 72 ?x734)))
 (let ((?x728 (* k m n)))
 (let ((?x910 (* 432 ?x728)))
 (let ((?x726 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73)))
 (let ((?x400 (* (- 3) ?x726)))
 (let ((?x721 (* k m m m)))
 (let ((?x913 (* 4 ?x721)))
 (let ((?x711 (* k m m)))
 (let ((?x912 (* 72 ?x711)))
 (let ((?x686 (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x402 (* 2 ?x686)))
 (let ((?x659 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x644 (* 3 (* c m m m n))))
 (let ((?x606 (* m m n n)))
 (let ((?x828 (* (- 36) ?x606)))
 (let ((?x600 (* m n n)))
 (let ((?x893 (* (- 216) ?x600)))
 (let ((?x574 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x238 (* (- 1) ?x574)))
 (let ((?x541 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x406 (* (- 1) ?x541)))
 (let ((?x532 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x412 (* (- 1) ?x532)))
 (let ((?x952 (* (- 2) (* m m m n n))))
 (let ((?x499 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x419 (* (- 1) ?x499)))
 (let ((?x483 (* m n)))
 (let ((?x934 (* (- 324) ?x483)))
 (let ((?x481 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x477 (* m m n)))
 (let ((?x1075 (* 18 ?x477)))
 (let ((?x469 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x324 (* (- 2) ?x469)))
 (let ((?x460 (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x390 (* m m m m n)))
 (let ((?x961 (* 4 (* k m m m n))))
 (let ((?x280 (* n n)))
 (let ((?x960 (* (- 432) ?x280)))
 (let ((?x157 (* c n)))
 (let ((?x962 (* 648 ?x157)))
 (let ((?x55 (* k n)))
 (let ((?x916 (* 864 ?x55)))
 (let ((?x966 (* (- 1080) n)))
 (let ((?x1065 (* (- 108) m)))
 (let ((?x936 (* 864 k)))
 (let ((?x973 (* 648 c)))
 (let ((?x1046 (+ ?x973 ?x936 ?x1065 ?x966 ?x916 ?x962 ?x960 ?x961 ?x390 ?x460 ?x324 ?x1075 ?x481 ?x934 (* 54 (* m m)) ?x419 ?x952 ?x412 ?x406 ?x238 ?x893 ?x828 ?x644 ?x659 ?x402 (* 432 (* k m)) ?x912 ?x913 ?x400 ?x910 ?x906 ?x946 ?x927 ?x932 ?x925 ?x930 ?x680 ?x903 ?x951 ?x1119)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) ?x280)) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 ?x157)) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 $x219 $x271 $x309 (not (= ?x1046 648)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x862 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1119 (* m m m m)))
 (let ((?x1052 (* m m m n)))
 (let ((?x951 (* 13 ?x1052)))
 (let ((?x1032 (* m m m)))
 (let ((?x903 (* 15 ?x1032)))
 (let ((?x73 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x800 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x680 (* 3 ?x800)))
 (let ((?x930 (* 54 (* c m m n))))
 (let ((?x925 (* 324 (* c m n))))
 (let ((?x932 (* 324 (* c m))))
 (let ((?x927 (* 54 (* c m m))))
 (let ((?x946 (* 3 (* c m m m))))
 (let ((?x734 (* k m m n)))
 (let ((?x906 (* 72 ?x734)))
 (let ((?x728 (* k m n)))
 (let ((?x910 (* 432 ?x728)))
 (let ((?x726 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73)))
 (let ((?x400 (* (- 3) ?x726)))
 (let ((?x721 (* k m m m)))
 (let ((?x913 (* 4 ?x721)))
 (let ((?x711 (* k m m)))
 (let ((?x912 (* 72 ?x711)))
 (let ((?x686 (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x402 (* 2 ?x686)))
 (let ((?x659 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x644 (* 3 (* c m m m n))))
 (let ((?x606 (* m m n n)))
 (let ((?x828 (* (- 36) ?x606)))
 (let ((?x600 (* m n n)))
 (let ((?x893 (* (- 216) ?x600)))
 (let ((?x574 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x238 (* (- 1) ?x574)))
 (let ((?x541 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x406 (* (- 1) ?x541)))
 (let ((?x532 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x412 (* (- 1) ?x532)))
 (let ((?x952 (* (- 2) (* m m m n n))))
 (let ((?x499 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x419 (* (- 1) ?x499)))
 (let ((?x483 (* m n)))
 (let ((?x934 (* (- 324) ?x483)))
 (let ((?x481 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x477 (* m m n)))
 (let ((?x1075 (* 18 ?x477)))
 (let ((?x469 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x324 (* (- 2) ?x469)))
 (let ((?x460 (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x390 (* m m m m n)))
 (let ((?x961 (* 4 (* k m m m n))))
 (let ((?x280 (* n n)))
 (let ((?x960 (* (- 432) ?x280)))
 (let ((?x157 (* c n)))
 (let ((?x962 (* 648 ?x157)))
 (let ((?x55 (* k n)))
 (let ((?x916 (* 864 ?x55)))
 (let ((?x966 (* (- 1080) n)))
 (let ((?x1065 (* (- 108) m)))
 (let ((?x936 (* 864 k)))
 (let ((?x973 (* 648 c)))
 (let ((?x1078 (+ ?x973 ?x936 ?x1065 ?x966 ?x916 ?x962 ?x960 ?x961 ?x390 ?x460 ?x324 ?x1075 ?x481 ?x934 (* 18 (* m m)) ?x419 ?x952 (* 6 (* m 6 m)) ?x412 ?x406 ?x238 ?x893 ?x828 ?x644 ?x659 ?x402 (* 396 (* k m)) ?x912 ?x913 ?x400 ?x910 ?x906 ?x946 ?x927 ?x932 ?x925 ?x930 ?x680 (* 6 (* m 6 k)) ?x903 ?x951 ?x1119)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) ?x280)) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 ?x157)) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 $x219 $x271 $x309 (not (= ?x1078 648)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x592 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1119 (* m m m m)))
 (let ((?x1052 (* m m m n)))
 (let ((?x951 (* 13 ?x1052)))
 (let ((?x1032 (* m m m)))
 (let ((?x903 (* 15 ?x1032)))
 (let ((?x73 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x800 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x680 (* 3 ?x800)))
 (let ((?x930 (* 54 (* c m m n))))
 (let ((?x925 (* 324 (* c m n))))
 (let ((?x932 (* 324 (* c m))))
 (let ((?x927 (* 54 (* c m m))))
 (let ((?x946 (* 3 (* c m m m))))
 (let ((?x734 (* k m m n)))
 (let ((?x906 (* 72 ?x734)))
 (let ((?x728 (* k m n)))
 (let ((?x910 (* 432 ?x728)))
 (let ((?x726 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73)))
 (let ((?x400 (* (- 3) ?x726)))
 (let ((?x721 (* k m m m)))
 (let ((?x913 (* 4 ?x721)))
 (let ((?x711 (* k m m)))
 (let ((?x912 (* 72 ?x711)))
 (let ((?x686 (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x402 (* 2 ?x686)))
 (let ((?x659 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x644 (* 3 (* c m m m n))))
 (let ((?x606 (* m m n n)))
 (let ((?x828 (* (- 36) ?x606)))
 (let ((?x600 (* m n n)))
 (let ((?x893 (* (- 216) ?x600)))
 (let ((?x574 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x238 (* (- 1) ?x574)))
 (let ((?x541 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x406 (* (- 1) ?x541)))
 (let ((?x532 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x412 (* (- 1) ?x532)))
 (let ((?x952 (* (- 2) (* m m m n n))))
 (let ((?x499 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x419 (* (- 1) ?x499)))
 (let ((?x483 (* m n)))
 (let ((?x934 (* (- 324) ?x483)))
 (let ((?x481 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x477 (* m m n)))
 (let ((?x1075 (* 18 ?x477)))
 (let ((?x469 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x324 (* (- 2) ?x469)))
 (let ((?x460 (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x390 (* m m m m n)))
 (let ((?x961 (* 4 (* k m m m n))))
 (let ((?x280 (* n n)))
 (let ((?x960 (* (- 432) ?x280)))
 (let ((?x157 (* c n)))
 (let ((?x962 (* 648 ?x157)))
 (let ((?x55 (* k n)))
 (let ((?x916 (* 864 ?x55)))
 (let ((?x966 (* (- 1080) n)))
 (let ((?x1065 (* (- 108) m)))
 (let ((?x936 (* 864 k)))
 (let ((?x973 (* 648 c)))
 (let ((?x1046 (+ ?x973 ?x936 ?x1065 ?x966 ?x916 ?x962 ?x960 ?x961 ?x390 ?x460 ?x324 ?x1075 ?x481 ?x934 (* 54 (* m m)) ?x419 ?x952 ?x412 ?x406 ?x238 ?x893 ?x828 ?x644 ?x659 ?x402 (* 432 (* k m)) ?x912 ?x913 ?x400 ?x910 ?x906 ?x946 ?x927 ?x932 ?x925 ?x930 ?x680 ?x903 ?x951 ?x1119)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) ?x280)) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 ?x157)) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x665 (and $x135 $x219 $x271 $x309 (not (= ?x1046 648)))))
 (let ((?x1078 (+ ?x973 ?x936 ?x1065 ?x966 ?x916 ?x962 ?x960 ?x961 ?x390 ?x460 ?x324 ?x1075 ?x481 ?x934 (* 18 (* m m)) ?x419 ?x952 (* 6 (* m 6 m)) ?x412 ?x406 ?x238 ?x893 ?x828 ?x644 ?x659 ?x402 (* 396 (* k m)) ?x912 ?x913 ?x400 ?x910 ?x906 ?x946 ?x927 ?x932 ?x925 ?x930 ?x680 (* 6 (* m 6 k)) ?x903 ?x951 ?x1119)))
 (let (($x766 (and $x135 $x219 $x271 $x309 (not (= ?x1078 648)))))
 (rewrite (= $x766 $x665)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x585 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x737 (* ?x322 ?x319 ?x319 ?x319)))
 (let ((?x73 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x726 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73)))
 (let ((?x400 (* (- 3) ?x726)))
 (let ((?x686 (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x402 (* 2 ?x686)))
 (let ((?x659 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x460 (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x469 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x324 (* (- 2) ?x469)))
 (let ((?x574 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x238 (* (- 1) ?x574)))
 (let ((?x481 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x541 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x406 (* (- 1) ?x541)))
 (let ((?x532 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x412 (* (- 1) ?x532)))
 (let ((?x499 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x419 (* (- 1) ?x499)))
 (let ((?x800 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x680 (* 3 ?x800)))
 (let ((?x457 (* ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x549 (+ ?x457 ?x680 (* (- 2) (* ?x322 ?x322 ?x319 ?x319 ?x319)) (* 3 (* ?x322 ?x319 ?x319 ?x319 ?x73)) ?x419 ?x412 ?x406 ?x481 ?x238 ?x324 ?x460 ?x659 ?x402 ?x400 (* (- 1) ?x737))))
 (let (($x539 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x405 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x405 $x539 (not (= ?x549 0))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x978 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1119 (* m m m m)))
 (let ((?x1052 (* m m m n)))
 (let ((?x951 (* 13 ?x1052)))
 (let ((?x1032 (* m m m)))
 (let ((?x903 (* 15 ?x1032)))
 (let ((?x73 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x800 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x680 (* 3 ?x800)))
 (let ((?x930 (* 54 (* c m m n))))
 (let ((?x925 (* 324 (* c m n))))
 (let ((?x932 (* 324 (* c m))))
 (let ((?x927 (* 54 (* c m m))))
 (let ((?x946 (* 3 (* c m m m))))
 (let ((?x734 (* k m m n)))
 (let ((?x906 (* 72 ?x734)))
 (let ((?x728 (* k m n)))
 (let ((?x910 (* 432 ?x728)))
 (let ((?x726 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73)))
 (let ((?x400 (* (- 3) ?x726)))
 (let ((?x721 (* k m m m)))
 (let ((?x913 (* 4 ?x721)))
 (let ((?x711 (* k m m)))
 (let ((?x912 (* 72 ?x711)))
 (let ((?x686 (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x402 (* 2 ?x686)))
 (let ((?x659 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x644 (* 3 (* c m m m n))))
 (let ((?x606 (* m m n n)))
 (let ((?x828 (* (- 36) ?x606)))
 (let ((?x600 (* m n n)))
 (let ((?x893 (* (- 216) ?x600)))
 (let ((?x574 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x238 (* (- 1) ?x574)))
 (let ((?x541 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x406 (* (- 1) ?x541)))
 (let ((?x532 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x412 (* (- 1) ?x532)))
 (let ((?x952 (* (- 2) (* m m m n n))))
 (let ((?x499 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x419 (* (- 1) ?x499)))
 (let ((?x483 (* m n)))
 (let ((?x934 (* (- 324) ?x483)))
 (let ((?x481 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x477 (* m m n)))
 (let ((?x1075 (* 18 ?x477)))
 (let ((?x469 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x324 (* (- 2) ?x469)))
 (let ((?x460 (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x390 (* m m m m n)))
 (let ((?x961 (* 4 (* k m m m n))))
 (let ((?x280 (* n n)))
 (let ((?x960 (* (- 432) ?x280)))
 (let ((?x157 (* c n)))
 (let ((?x962 (* 648 ?x157)))
 (let ((?x55 (* k n)))
 (let ((?x916 (* 864 ?x55)))
 (let ((?x966 (* (- 1080) n)))
 (let ((?x1065 (* (- 108) m)))
 (let ((?x936 (* 864 k)))
 (let ((?x973 (* 648 c)))
 (let ((?x1078 (+ ?x973 ?x936 ?x1065 ?x966 ?x916 ?x962 ?x960 ?x961 ?x390 ?x460 ?x324 ?x1075 ?x481 ?x934 (* 18 (* m m)) ?x419 ?x952 (* 6 (* m 6 m)) ?x412 ?x406 ?x238 ?x893 ?x828 ?x644 ?x659 ?x402 (* 396 (* k m)) ?x912 ?x913 ?x400 ?x910 ?x906 ?x946 ?x927 ?x932 ?x925 ?x930 ?x680 (* 6 (* m 6 k)) ?x903 ?x951 ?x1119)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) ?x280)) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 ?x157)) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x766 (and $x135 $x219 $x271 $x309 (not (= ?x1078 648)))))
 (let ((?x457 (* ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x549 (+ ?x457 ?x680 (* (- 2) (* ?x322 ?x322 ?x319 ?x319 ?x319)) (* 3 (* ?x322 ?x319 ?x319 ?x319 ?x73)) ?x419 ?x412 ?x406 ?x481 ?x238 ?x324 ?x460 ?x659 ?x402 ?x400 (* (- 1) (* ?x322 ?x319 ?x319 ?x319)))))
 (let (($x539 (= (+ (* 3 ?x280) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x405 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x379 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x405 $x539 (not (= ?x549 0)))))
 (rewrite (= $x379 $x766))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x572 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x737 (* ?x322 ?x319 ?x319 ?x319)))
 (let ((?x73 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x726 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73)))
 (let ((?x574 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x541 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x532 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x499 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x745 (+ (* (- 1) (* ?x322 ?x319 ?x319 ?x319 ?x69)) (* (- 3) (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73 ?x73)) (* 2 (* ?x322 ?x322 ?x319 ?x319 ?x319)) (* (- 3) (* ?x322 ?x319 ?x319 ?x319 ?x73)) ?x499 ?x532 ?x541 (* (- 1) (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)) ?x574 (* 2 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)) (* (- 1) (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)) (* (- 1) (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)) (* (- 2) (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)) (* 3 ?x726) ?x737)))
 (let (($x539 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x341 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1010 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 (= ?x1010 (- 4)) $x341 $x539 (not (= ?x745 0)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x284 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x737 (* ?x322 ?x319 ?x319 ?x319)))
 (let ((?x73 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x726 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73)))
 (let ((?x400 (* (- 3) ?x726)))
 (let ((?x686 (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x402 (* 2 ?x686)))
 (let ((?x659 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x460 (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x469 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x324 (* (- 2) ?x469)))
 (let ((?x574 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x238 (* (- 1) ?x574)))
 (let ((?x481 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x541 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x406 (* (- 1) ?x541)))
 (let ((?x532 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x412 (* (- 1) ?x532)))
 (let ((?x499 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x419 (* (- 1) ?x499)))
 (let ((?x800 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x680 (* 3 ?x800)))
 (let ((?x457 (* ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x549 (+ ?x457 ?x680 (* (- 2) (* ?x322 ?x322 ?x319 ?x319 ?x319)) (* 3 (* ?x322 ?x319 ?x319 ?x319 ?x73)) ?x419 ?x412 ?x406 ?x481 ?x238 ?x324 ?x460 ?x659 ?x402 ?x400 (* (- 1) ?x737))))
 (let (($x539 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x405 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x379 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x405 $x539 (not (= ?x549 0)))))
 (let ((?x745 (+ (* (- 1) ?x457) (* (- 3) ?x800) (* 2 (* ?x322 ?x322 ?x319 ?x319 ?x319)) (* (- 3) (* ?x322 ?x319 ?x319 ?x319 ?x73)) ?x499 ?x532 ?x541 (* (- 1) ?x481) ?x574 (* 2 ?x469) (* (- 1) ?x460) (* (- 1) ?x659) (* (- 2) ?x686) (* 3 ?x726) ?x737)))
 (let (($x341 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1010 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x797 (and $x135 (= ?x1010 (- 4)) $x341 $x539 (not (= ?x745 0)))))
 (rewrite (= $x797 $x379)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x102 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x73 (+ c k)))
 (let ((?x75 (- (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x71) (* 3 ?x73 ?x73 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x79 (- (+ ?x75 (* 2 ?x70 ?x70 ?x70 ?x71 ?x71)) (* 3 ?x73 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x83 (+ ?x79 (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* ?x73 ?x73 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71) (* ?x73 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x88 (+ (- ?x83 (* ?x73 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)) (* ?x73 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 2 ?x73 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x93 (- (- ?x88 (* ?x73 ?x73 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* ?x73 ?x73 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71))))
 (let ((?x97 (+ (- ?x93 (* 2 ?x73 ?x73 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* 3 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71) (* ?x70 ?x70 ?x70 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x97 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x443 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x737 (* ?x322 ?x319 ?x319 ?x319)))
 (let ((?x73 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x726 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73)))
 (let ((?x574 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)))
 (let ((?x541 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)))
 (let ((?x532 (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)))
 (let ((?x499 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x745 (+ (* (- 1) (* ?x322 ?x319 ?x319 ?x319 ?x69)) (* (- 3) (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73 ?x73)) (* 2 (* ?x322 ?x322 ?x319 ?x319 ?x319)) (* (- 3) (* ?x322 ?x319 ?x319 ?x319 ?x73)) ?x499 ?x532 ?x541 (* (- 1) (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x73)) ?x574 (* 2 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69 ?x73)) (* (- 1) (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73)) (* (- 1) (* ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)) (* (- 2) (* ?x322 ?x322 ?x322 ?x319 ?x69 ?x69 ?x69 ?x73 ?x73)) (* 3 ?x726) ?x737)))
 (let (($x539 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x341 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1010 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x797 (and $x135 (= ?x1010 (- 4)) $x341 $x539 (not (= ?x745 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x75 (- (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x71) (* 3 ?x73 ?x73 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x79 (- (+ ?x75 (* 2 ?x70 ?x70 ?x70 ?x71 ?x71)) (* 3 ?x73 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x83 (+ ?x79 (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* ?x73 ?x73 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71) (* ?x73 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x88 (+ (- ?x83 (* ?x73 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)) (* ?x73 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 2 ?x73 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x93 (- (- ?x88 (* ?x73 ?x73 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* ?x73 ?x73 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71))))
 (let ((?x97 (+ (- ?x93 (* 2 ?x73 ?x73 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* 3 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71) (* ?x70 ?x70 ?x70 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x101 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x97 0))))))
 (rewrite (= $x101 $x797)))))))))))))))))))))))))))))))))))
 ))
 (let ((@x103 (asserted $x102)))
 (let ((@x453 (mp (mp @x103 (quant-intro (proof-bind ?x443) (= $x102 $x572)) $x572) (rewrite (= $x572 $x572)) $x572)))
 (let ((@x909 (mp (mp @x453 (quant-intro (proof-bind ?x284) (= $x572 $x585)) $x585) (quant-intro (proof-bind ?x978) (= $x585 $x862)) $x862)))
 (let ((@x596 (mp~ (mp @x909 (quant-intro (proof-bind ?x592) (= $x862 $x590)) $x590) (sk (~ $x590 $x580)) $x580)))
 (let ((@x671 (mp @x596 (rewrite (= $x580 $x193)) $x193)))
 (let ((@x670 (and-elim @x671 $x619)))
 (let ((@x373 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x619) $x248)) @x670 $x248)))
 (let (($x1050 (>= ?x293 1)))
 (let ((@x363 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x619) $x1050)) @x670 $x1050)))
 (let (($x258 (<= ?x707 (- 6))))
 (let ((@x685 (and-elim @x671 $x452)))
 (let ((@x739 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x452) $x258)) @x685 $x258)))
 (let (($x315 (>= ?x707 (- 6))))
 (let ((@x296 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x452) $x315)) @x685 $x315)))
 (let (($x252 (<= ?x321 1)))
 (let ((@x676 (and-elim @x671 $x1097)))
 (let ((@x359 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1097) $x252)) @x676 $x252)))
 (let (($x813 (>= ?x321 1)))
 (let ((@x509 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1097) $x813)) @x676 $x813)))
 (let (($x1136 (<= ?x668 4)))
 (let ((@x667 (and-elim @x671 $x675)))
 (let ((@x282 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x675) $x1136)) @x667 $x1136)))
 (let (($x254 (>= ?x668 4)))
 (let ((@x369 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x675) $x254)) @x667 $x254)))
 (let (($x212 (not (>= ?x1029 648))))
 (let (($x186 (<= ?x1029 648)))
 (let ((@x607 ((_ th-lemma arith) (hypothesis (not $x186)) @x369 @x282 @x509 @x359 @x369 @x282 @x509 @x359 @x369 @x282 @x509 @x359 @x363 @x373 @x509 @x359 @x369 @x282 @x296 @x739 @x369 @x282 @x296 @x739 @x509 @x359 @x509 @x359 @x369 @x282 @x509 @x359 @x369 @x282 @x369 @x282 @x509 @x359 @x296 @x739 @x369 @x282 @x509 @x359 @x296 @x739 @x363 @x373 false)))
 (let ((@x853 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x301 (not $x186) $x212)) (and-elim @x671 $x294) (or (not $x186) $x212))))
 ((_ th-lemma arith) (unit-resolution @x853 (lemma @x607 $x186) $x212) @x369 @x282 @x509 @x359 @x369 @x282 @x509 @x359 @x369 @x282 @x509 @x359 @x363 @x373 @x509 @x359 @x369 @x282 @x296 @x739 @x369 @x282 @x296 @x739 @x509 @x359 @x509 @x359 @x369 @x282 @x509 @x359 @x369 @x282 @x369 @x282 @x509 @x359 @x296 @x739 @x369 @x282 @x509 @x359 @x296 @x739 @x363 @x373 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        140
 :arith-assert-upper        375
 :arith-branch-var          2
 :arith-conflicts           17
 :arith-eq-adapter          5
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             1190
 :arith-nonlinear-bounds    208
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             3
 :arith-pivots              10
 :arith-row-summations      22
 :arith-tableau-max-columns 77
 :arith-tableau-max-rows    9
 :conflicts                 17
 :decisions                 344
 :del-clause                15
 :final-checks              22
 :max-memory                3.82
 :memory                    3.24
 :mk-bool-var               73
 :mk-clause                 29
 :num-allocs                1865969
 :num-checks                1
 :propagations              23
 :rlimit-count              31237
 :time                      0.02
 :total-time                0.03)
