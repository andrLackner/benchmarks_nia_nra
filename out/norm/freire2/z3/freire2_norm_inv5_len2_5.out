unsat
((set-logic NIA)
(declare-fun x!0 () Int)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x2055 (* 6 x!0)))
 (let ((?x2127 (* (- 3) s!1)))
 (let ((?x2128 (* 3 r!2)))
 (let ((?x2126 (* r!2 s!1)))
 (let ((?x2107 (* 2 ?x2126)))
 (let ((?x519 (* r00 r00 r00)))
 (let ((?x520 (* 12 ?x519)))
 (let ((?x476 (* s00 r00)))
 (let ((?x554 (* (- 6) ?x476)))
 (let ((?x551 (* (- 6) x00)))
 (let ((?x550 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1984 (+ ?x44 ?x550 ?x551 ?x554 ?x520 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x2107 ?x2128 ?x2127 ?x2055)))
 (let (($x672 (<= ?x1984 0)))
 (let (($x851 (= ?x1984 0)))
 (let ((?x2910 (+ 3 (* 6 r!2) s!1)))
 (let ((?x2484 (* (- 1) s!1)))
 (let ((?x1021 (+ ?x2484 x!0)))
 (let ((?x3164 (+ 1 r!2)))
 (let ((?x4785 (* ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910 ?x2910)))
 (let ((?x4039 (* x!0 x!0)))
 (let ((?x4038 (* (- 108) ?x4039)))
 (let ((?x3166 (* r00 r00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910 ?x2910)))
 (let ((?x2953 (* r00 r00 s00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)))
 (let ((?x2332 (* r00 r00 r00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)))
 (let ((?x2157 (* r00 r00 r00 x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)))
 (let ((?x1815 (* r00 r00 r00 ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)))
 (let ((?x1661 (* r00 r00 r00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)))
 (let ((?x1396 (* x00 x00)))
 (let ((?x1426 (* (- 108) ?x1396)))
 (let ((?x1234 (* s00 s00 s00)))
 (let ((?x1425 (* (- 16) ?x1234)))
 (let ((?x1106 (* s00 r00 r00 r00)))
 (let ((?x1421 (* (- 216) ?x1106)))
 (let ((?x932 (* r00 r00 r00 x00)))
 (let ((?x933 (* 432 ?x932)))
 (let ((?x855 (* s00 x00)))
 (let ((?x1179 (* 108 ?x855)))
 (let ((?x781 (* s00 s00 r00 r00)))
 (let ((?x782 (* 36 ?x781)))
 (let ((?x718 (* s00 s00 r00)))
 (let ((?x1062 (* 108 ?x718)))
 (let ((?x697 (* s00 r00 r00)))
 (let ((?x1050 (* 36 ?x697)))
 (let ((?x641 (* s00 s00)))
 (let ((?x1415 (* (- 51) ?x641)))
 (let ((?x572 (* r00 x00)))
 (let ((?x1412 (* (- 108) ?x572)))
 (let ((?x563 (* s00 r00 x00)))
 (let ((?x1411 (* (- 216) ?x563)))
 (let ((?x2350 (+ (* 297 s00) (* (- 162) r00) (* (- 324) x00) (* 648 (* r00 r00 r00 s!1)) (* (- 432) (* r00 r00)) (* 534 (* s00 r!2 r!2 s!1)) (* 432 (* r00 r00 r00 x00 r!2 r!2)) (* (- 270) ?x476) (* (- 36) (* r00 r00 s!1 s!1)) (* 648 ?x519) (* (- 432) (* r00 r00 r00 x!0)) (* 12 (* s00 s!1 s!1)) ?x1411 ?x1412 ?x1415 (* (- 4104) (* r00 r00 r!2 r!2 r!2)) (* (- 864) (* r00 r00 r00 r!2 x!0)) (* (- 432) (* r00 r00 r00 r!2 r!2 x!0)) (* 216 (* x00 x!0)) ?x1050 (* 24 (* s00 r!2 s!1 s!1)) (* 432 (* s00 r00 r!2 x!0)) ?x1062 ?x782 (* (- 4752) (* r00 r00 r!2 r!2)) (* 4 (* ?x3164 ?x3164 ?x2910 ?x2910 ?x2910)) (* 216 (* r00 s00 x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) ?x1179 (* (- 162) (* r00 r!2 r!2 s!1)) (* (- 648) (* s00 r00 r!2 r!2 r!2)) (* (- 108) (* r00 x00 r!2 r!2)) (* 108 (* r00 r!2 r!2 x!0)) (* (- 648) (* r00 r!2)) (* 432 (* s00 r!2 r!2 r!2 r!2)) ?x933 (* 648 (* r00 r00 r00 r!2 r!2 s!1)) (* 1296 (* r00 r00 r00 r!2 s!1)) (* (- 462) (* r!2 s!1 s!1)) (* 3240 (* r00 r00 r00 r!2 r!2)) (* 1296 (* r00 r00 r00 r!2 r!2 r!2)) (* 2592 (* r00 r00 r00 r!2)) (* 108 (* r00 x!0)) (* (- 936) (* r00 r00 r!2 s!1)) (* 36 (* s00 r00 r00 r!2 r!2)) (* 72 (* s00 r00 r00 r!2)) (* (- 51) (* s00 s00 r!2 r!2)) (* 12 (* s00 r!2 r!2 s!1 s!1)) (* 36 (* s00 s00 r00 r00 r!2 r!2)) (* 144 (* s00 r!2 r!2 r!2 s!1)) (* (- 324) (* s00 r00 r!2 r!2 s!1)) ?x1421 (* (- 324) (* x00 r!2 r!2 s!1)) (* 1296 (* r!2 x!0)) (* (- 432) (* r00 r00 r!2 r!2 r!2 s!1)) ?x1425 (* (- 648) (* x00 r!2 s!1)) (* (- 1116) (* r00 r00 r!2 r!2 s!1)) (* (- 108) (* r00 s00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) ?x1426 (* (- 810) (* r00 r!2 r!2)) (* (- 36) (* r00 r00 r!2 r!2 s!1 s!1)) (* (- 16) (* s00 s00 s00 r!2 r!2)) (* 216 ?x1661) (* 216 (* s00 r00 x!0)) (* (- 216) (* s00 r00 x00 r!2 r!2)) (* (- 216) (* s00 r!2 x!0)) (* 636 (* s00 r!2 s!1)) (* (- 72) (* r00 r00 r!2 s!1 s!1)) (* (- 32) (* s00 s00 s00 r!2)) (* (- 108) (* s00 r!2 r!2 x!0)) (* (- 54) (* r00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 108) (* ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* 432 ?x1815) (* 36 (* r00 r00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* (- 12) (* s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910 ?x2910)) (* (- 2376) (* r00 r00 r!2)) (* 1422 (* s00 r!2)) (* (- 252) (* r00 r00 s!1)) (* (- 324) (* r00 r!2 s!1)) (* (- 1638) ?x2126) (* (- 1620) (* r!2 r!2)) (* (- 702) r!2) (* (- 405) s!1) (* 324 x!0) (* (- 432) ?x2157) (* (- 36) (* r00 r00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 216) ?x2332) (* 108 (* s00 x00 r!2 r!2)) (* (- 1566) (* s00 r00 r!2 r!2)) (* 51 (* s00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 4) (* ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910 ?x2910 ?x2910)) (* 108 (* x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* (- 108) (* r00 ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* 108 (* r00 x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* 108 (* ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* 72 (* s00 s00 r00 r00 r!2)) (* 16 (* s00 s00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* 108 (* s00 s00 r00 r!2 r!2)) (* (- 324) (* r00 r!2 r!2 r!2)) (* (- 432) (* s00 r00 r00 r00 r!2)) (* (- 9) (* ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* (- 648) (* x00 r!2 r!2 r!2)) (* 216 (* s00 s00 r00 r!2)) (* 864 (* r00 r00 r00 x00 r!2)) (* 216 (* s00 x00 r!2)) (* 108 (* r00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* (- 216) (* r00 x00 r!2)) (* (- 216) (* r00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 36) ?x2953) (* 216 (* s00 r00 r!2 r!2 x!0)) (* 36 ?x3166) (* (- 1296) (* r00 r00 r!2 r!2 r!2 r!2)) (* (- 1620) (* x00 r!2 r!2)) (* (- 432) (* s00 r00 x00 r!2)) (* (- 108) (* s00 x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 324) (* x00 s!1)) (* (- 324) (* s00 r00 s!1)) (* (- 231) (* s!1 s!1)) (* 216 (* r00 r!2 x!0)) (* (- 648) (* s00 r00 r!2 s!1)) ?x4038 (* 324 (* s!1 x!0)) (* (- 108) (* s00 x!0)) (* 1692 (* s00 r!2 r!2 r!2)) (* (- 216) (* x00 x00 r!2)) (* (- 108) (* x00 x00 r!2 r!2)) (* (- 216) (* s00 r00 r00 r00 r!2 r!2)) (* 2385 (* s00 r!2 r!2)) (* (- 102) (* s00 s00 r!2)) (* (- 1188) (* s00 r00 r!2)) (* 432 (* x00 r!2 x!0)) (* (- 1296) (* x00 r!2)) (* (- 162) (* r00 s!1)) (* 246 (* s00 s!1)) (* 216 (* x00 r!2 r!2 x!0)) (* (- 108) (* r!2 r!2 x!0 x!0)) (* (- 540) (* r!2 r!2 r!2 r!2)) (* 108 (* x00 x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* 108 (* s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 66) (* s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* 648 (* r!2 r!2 r!2 x!0)) (* 1620 (* r!2 r!2 x!0)) (* (- 231) (* r!2 r!2 s!1 s!1)) (* 324 (* r!2 r!2 s!1 x!0)) (* 648 (* r!2 s!1 x!0)) (* (- 216) (* x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 1566) (* r!2 r!2 r!2)) (* 9 (* s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* 54 (* r00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* 15 ?x4785) (* (- 828) (* r!2 r!2 r!2 s!1)) (* (- 2061) (* r!2 r!2 s!1)) (* (- 216) (* r!2 x!0 x!0)))))
 (let (($x2353 (= ?x2350 108)))
 (let (($x2533 (not $x2353)))
 (let ((?x2228 (* 108 ?x4039)))
 (let ((?x385 (* (- 9) s!1)))
 (let ((?x1993 (* r00 r00 s!1)))
 (let ((?x1698 (* 36 ?x1993)))
 (let ((?x1397 (* 108 ?x1396)))
 (let ((?x1235 (* 16 ?x1234)))
 (let ((?x1554 (* 216 ?x1106)))
 (let ((?x962 (* (- 432) ?x932)))
 (let ((?x1191 (* (- 108) ?x855)))
 (let ((?x2060 (* (- 36) ?x781)))
 (let ((?x1089 (* (- 108) ?x718)))
 (let ((?x1324 (* (- 36) ?x697)))
 (let ((?x1271 (* 51 ?x641)))
 (let ((?x568 (* 108 ?x572)))
 (let ((?x3102 (* 216 ?x563)))
 (let ((?x602 (* (- 54) ?x476)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2651 (+ ?x137 (* (- 216) (* r00 r00 r00 s!1)) ?x602 (* 36 (* r00 r00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 12) (* s00 s!1 s!1)) ?x3102 ?x568 ?x1271 (* (- 216) (* x00 x!0)) ?x1324 ?x1089 ?x2060 ?x1191 ?x962 (* (- 108) (* r00 x!0)) ?x1554 ?x1235 ?x1397 (* (- 216) (* s00 r00 x!0)) ?x1698 ?x385 (* 108 (* x00 s!1)) (* 108 (* s00 r00 s!1)) (* 15 (* s!1 s!1)) ?x2228 (* (- 108) (* s!1 x!0)) (* 108 (* s00 x!0)) (* 54 (* r00 s!1)) (* (- 66) (* s00 s!1)) (* (- 4) (* s!1 s!1 s!1)))))
 (let (($x2712 (= ?x2651 0)))
 (let ((?x927 (* r00 r00 x00)))
 (let ((?x833 (* 36 ?x927)))
 (let ((?x3934 (* (- 6) ?x855)))
 (let ((?x2253 (* 15 ?x641)))
 (let ((?x2011 (* 54 ?x572)))
 (let ((?x354 (+ ?x137 (* (- 24) ?x476) ?x2011 ?x2253 ?x1324 (* 2 ?x718) ?x3934 ?x833 (* (- 2) (* r!2 s!1 s!1)) (* (- 54) (* r00 x!0)) (* (- 54) (* r!2 x!0)) (* (- 36) (* r00 r00 x!0)) (* (- 2) (* s00 r!2 s!1)) (* (- 24) (* s00 r!2)) ?x1698 (* 24 ?x2126) ?x385 (* 36 (* r00 x00 r!2)) (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)) (* (- 3) (* s!1 s!1)) (* (- 36) (* r00 r!2 x!0)) (* (- 6) (* s!1 x!0)) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* 4 (* s00 s00 r!2)) (* 54 (* x00 r!2)) (* 24 (* r00 s!1)) (* (- 12) (* s00 s!1)))))
 (let (($x355 (= ?x354 0)))
 (let ((?x4337 (* 4 ?x641)))
 (let ((?x1625 (* 18 ?x572)))
 (let ((?x4380 (+ ?x44 (* (- 9) ?x476) ?x1625 ?x4337 (* (- 6) ?x697) (* (- 18) (* r00 x!0)) (* (- 18) (* r!2 x!0)) (* (- 9) (* s00 r!2)) (* 6 ?x1993) (* (- 6) (* r00 r!2 s!1)) (* 9 ?x2126) ?x2127 (* (- 2) (* s!1 s!1)) (* 6 (* s00 r00 r!2)) (* 18 (* x00 r!2)) (* 9 (* r00 s!1)) (* (- 2) (* s00 s!1)))))
 (let (($x4384 (= ?x4380 0)))
 (let ((?x351 (* r00 r00)))
 (let ((?x2916 (* (- 3) ?x351)))
 (let ((?x1936 (+ s00 ?x2916 (* 3 (* r!2 r!2)) ?x2484)))
 (let (($x3068 (= ?x1936 0)))
 (let (($x1495 (and $x3068 $x851 $x4384 $x355 $x2712 $x2533)))
 (let ((?x2626 (* (- 648) ?x519)))
 (let ((?x4884 (* 270 ?x476)))
 (let ((?x4874 (* 432 ?x351)))
 (let ((?x3610 (* 324 x00)))
 (let ((?x4872 (* 162 r00)))
 (let ((?x3012 (* (- 297) s00)))
 (let ((?x3567 (+ (* 702 r!2) (* 405 s!1) (* (- 324) x!0) ?x3012 ?x4872 ?x3610 (* 1620 (* r!2 r!2)) ?x4874 (* 1638 ?x2126) (* 4 (* ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910 ?x2910 ?x2910)) (* 2376 (* r!2 r00 r00)) (* 108 (* r00 s00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 1422) (* r!2 s00)) ?x4884 ?x2626 (* 216 (* x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) ?x3102 ?x568 (* 231 (* s!1 s!1)) (* (- 1296) (* r!2 x!0)) (* 324 (* r!2 s!1 r00)) (* (- 216) (* r!2 x!0 r00)) (* 252 (* s!1 r00 r00)) ?x1271 (* 108 (* x!0 s00)) (* (- 108) (* x!0 r00)) (* (- 648) (* s!1 r00 r00 r00)) ?x1324 (* 1296 (* r!2 x00)) ?x1089 (* (- 246) (* s!1 s00)) (* 162 (* s!1 r00)) (* 324 (* s!1 x00)) (* 1188 (* r!2 s00 r00)) ?x2060 (* (- 216) ?x1661) (* 324 (* s!1 s00 r00)) ?x1191 (* 462 (* r!2 s!1 s!1)) (* (- 324) (* s!1 x!0)) (* 432 ?x2157) (* 102 (* r!2 s00 s00)) ?x2228 ?x962 (* (- 636) (* r!2 s!1 s00)) (* (- 12) (* s!1 s!1 s00)) (* 216 (* r!2 r00 x00)) (* 864 (* r!2 x!0 r00 r00 r00)) (* 432 (* r!2 r!2 x!0 r00 r00 r00)) ?x1554 (* 432 (* x!0 r00 r00 r00)) (* 36 (* r00 r00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* 216 ?x2332) (* 108 (* r!2 r!2 x!0 s00)) (* 216 (* r!2 x!0 s00)) (* (- 216) (* x!0 s00 r00)) (* 36 (* s!1 s!1 r00 r00)) ?x1235 (* 108 (* r00 ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 216) (* x!0 x00)) (* (- 54) (* r00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) ?x1397 (* (- 2385) (* r!2 r!2 s00)) (* (- 1692) (* r!2 r!2 r!2 s00)) (* (- 534) (* r!2 r!2 s!1 s00)) (* 108 (* r!2 r!2 x00 x00)) (* 216 (* r!2 x00 x00)) (* 540 (* r!2 r!2 r!2 r!2)) (* 108 (* r!2 r!2 x!0 x!0)) (* 216 (* r!2 x!0 x!0)) (* (- 15) ?x4785) (* (- 9) (* s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* 1566 (* r!2 r!2 r!2)) (* 2061 (* r!2 r!2 s!1)) (* (- 648) (* r!2 s!1 x!0)) (* (- 324) (* r!2 r!2 s!1 x!0)) (* 432 (* r!2 s00 r00 r00 r00)) (* 324 (* r!2 r!2 r!2 r00)) (* 828 (* r!2 r!2 r!2 s!1)) (* 231 (* r!2 r!2 s!1 s!1)) (* (- 1620) (* r!2 r!2 x!0)) (* (- 648) (* r!2 r!2 r!2 x!0)) (* (- 216) (* r!2 s00 s00 r00)) (* (- 108) (* r!2 r!2 s00 s00 r00)) (* 66 (* s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* 162 (* r!2 r!2 s!1 r00)) (* 648 (* r!2 r!2 r!2 s00 r00)) (* (- 108) (* s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 432) (* r!2 r!2 r!2 r!2 s00)) (* 648 (* r!2 r00)) (* (- 108) (* r!2 r!2 x!0 r00)) (* 108 (* r!2 r!2 r00 x00)) (* (- 108) (* x00 x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 2592) (* r!2 r00 r00 r00)) (* (- 3240) (* r!2 r!2 r00 r00 r00)) (* (- 1296) (* r!2 r!2 r!2 r00 r00 r00)) (* (- 1296) (* r!2 s!1 r00 r00 r00)) (* (- 648) (* r!2 r!2 s!1 r00 r00 r00)) (* 4752 (* r!2 r!2 r00 r00)) (* (- 108) (* x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* (- 24) (* r!2 s!1 s!1 s00)) (* (- 12) (* r!2 r!2 s!1 s!1 s00)) (* 108 (* s00 x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 144) (* r!2 r!2 r!2 s!1 s00)) (* 108 (* ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* 4104 (* r!2 r!2 r!2 r00 r00)) (* 648 (* r!2 s!1 s00 r00)) (* 324 (* r!2 r!2 s!1 s00 r00)) (* 51 (* r!2 r!2 s00 s00)) (* (- 72) (* r!2 s00 r00 r00)) (* (- 36) (* r!2 r!2 s00 r00 r00)) (* 936 (* r!2 s!1 r00 r00)) (* (- 432) (* r!2 x!0 s00 r00)) (* (- 216) (* r!2 r!2 x!0 s00 r00)) (* 1116 (* r!2 r!2 s!1 r00 r00)) (* 1296 (* r!2 r!2 r!2 r!2 r00 r00)) (* (- 4) (* ?x3164 ?x3164 ?x2910 ?x2910 ?x2910)) (* (- 216) (* r00 s00 x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* 810 (* r!2 r!2 r00)) (* 432 (* r!2 r!2 r!2 s!1 r00 r00)) (* 324 (* r!2 r!2 s!1 x00)) (* 648 (* r!2 s!1 x00)) (* (- 51) (* s00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* 36 (* r!2 r!2 s!1 s!1 r00 r00)) (* 16 (* r!2 r!2 s00 s00 s00)) (* 32 (* r!2 s00 s00 s00)) (* 72 (* r!2 s!1 s!1 r00 r00)) (* (- 432) (* r!2 r!2 r00 r00 r00 x00)) (* 1566 (* r!2 r!2 s00 r00)) (* (- 36) (* r!2 r!2 s00 s00 r00 r00)) (* (- 864) (* r!2 r00 r00 r00 x00)) (* 648 (* r!2 r!2 r!2 x00)) (* (- 216) (* r!2 r!2 x!0 x00)) (* (- 432) (* r!2 x!0 x00)) (* (- 36) (* r00 r00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* 12 (* s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910 ?x2910)) (* (- 216) (* r!2 s00 x00)) (* (- 108) (* r!2 r!2 s00 x00)) (* (- 72) (* r!2 s00 s00 r00 r00)) (* 216 (* r!2 r!2 s00 r00 r00 r00)) (* 9 (* ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* 1620 (* r!2 r!2 x00)) (* 432 (* r!2 s00 r00 x00)) (* 216 (* r!2 r!2 s00 r00 x00)) (* 216 (* r00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* 36 ?x2953) (* (- 108) (* r00 x00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 432) ?x1815) (* 54 (* r00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 108) (* ?x3164 ?x3164 ?x1021 ?x1021 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 108) (* r00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910 ?x2910)) (* (- 16) (* s00 s00 s00 ?x3164 ?x3164 ?x1021 ?x1021 ?x2910 ?x2910 ?x2910)) (* (- 36) ?x3166))))
 (let ((?x2550 (* s!1 r00 r00)))
 (let ((?x367 (* (- 36) ?x2550)))
 (let ((?x570 (* 54 ?x476)))
 (let ((?x1037 (* (- 9) s00)))
 (let ((?x1164 (* 9 s!1)))
 (let ((?x2154 (+ ?x1164 ?x1037 ?x570 ?x1411 ?x1412 (* (- 15) (* s!1 s!1)) ?x367 ?x1415 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1050 ?x1062 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x782 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1179 (* 108 (* s!1 x!0)) ?x4038 ?x933 (* 12 (* s!1 s!1 s00)) ?x1421 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1425 (* 216 (* x!0 x00)) ?x1426)))
 (let ((?x940 (* (- 36) ?x927)))
 (let ((?x856 (* 6 ?x855)))
 (let ((?x746 (* (- 2) ?x718)))
 (let ((?x966 (* (- 15) ?x641)))
 (let ((?x601 (* (- 54) ?x572)))
 (let ((?x614 (* 24 ?x476)))
 (let ((?x1548 (+ ?x1164 ?x1037 (* (- 24) ?x2126) (* 24 (* r!2 s00)) ?x614 ?x601 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x367 ?x966 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1050 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x746 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x856 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x940 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x698 (* 6 ?x697)))
 (let ((?x654 (* (- 4) ?x641)))
 (let ((?x586 (* (- 18) ?x572)))
 (let ((?x591 (* 9 ?x476)))
 (let ((?x428 (* (- 3) s00)))
 (let ((?x1136 (+ (* 3 s!1) ?x428 (* (- 9) ?x2126) (* 9 (* r!2 s00)) ?x591 ?x586 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x2550) ?x654 (* 18 (* x!0 r00)) ?x698 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1505 (+ ?x2128 ?x2127 ?x2055 ?x44 ?x550 ?x551 ?x2107 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x554 ?x520)))
 (let (($x2105 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x351)) 0)))
 (let (($x4726 (and $x2105 (= ?x1505 0) (= ?x1136 0) (= ?x1548 0) (= ?x2154 0) (not (= ?x3567 (- 108))))))
 (let (($x5114 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (* 6 r)))
 (let ((?x1454 (+ 3 ?x215 s)))
 (let ((?x330 (* (- 1) s)))
 (let ((?x1460 (+ ?x330 x)))
 (let ((?x1435 (+ 1 r)))
 (let ((?x5107 (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454 ?x1454))))
 (let ((?x5102 (* (- 432) (* r00 r00 r00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454))))
 (let ((?x5100 (* 36 (* r00 r00 s00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454))))
 (let ((?x4335 (* (- 108) (* r r s00 x00))))
 (let ((?x4325 (* (- 216) (* r s00 x00))))
 (let ((?x4146 (* (- 432) (* r x x00))))
 (let ((?x4168 (* (- 216) (* r r x x00))))
 (let ((?x3694 (* (- 864) (* r r00 r00 r00 x00))))
 (let ((?x3590 (* (- 432) (* r r r00 r00 r00 x00))))
 (let ((?x3804 (* 16 (* r r s00 s00 s00))))
 (let ((?x4135 (* 324 (* r r s x00))))
 (let ((?x3624 (* (- 4) (* ?x1435 ?x1435 ?x1454 ?x1454 ?x1454))))
 (let ((?x3311 (* (- 216) (* r r x s00 r00))))
 (let ((?x3112 (* (- 432) (* r x s00 r00))))
 (let ((?x3250 (* (- 36) (* r r s00 r00 r00))))
 (let ((?x3218 (* (- 72) (* r s00 r00 r00))))
 (let ((?x3140 (* 51 (* r r s00 s00))))
 (let ((?x2999 (* (- 144) (* r r r s s00))))
 (let ((?x2983 (* (- 12) (* r r s s s00))))
 (let ((?x3000 (* (- 24) (* r s s s00))))
 (let ((?x2663 (* (- 1296) (* r r r r00 r00 r00))))
 (let ((?x2618 (* (- 3240) (* r r r00 r00 r00))))
 (let ((?x2616 (* (- 2592) (* r r00 r00 r00))))
 (let ((?x2572 (* 108 (* r r r00 x00))))
 (let ((?x2527 (* (- 108) (* r r x r00))))
 (let ((?x2457 (* (- 432) (* r r r r s00))))
 (let ((?x2308 (* (- 108) (* r r s00 s00 r00))))
 (let ((?x2316 (* (- 216) (* r s00 s00 r00))))
 (let ((?x2112 (* (- 648) (* r r r x))))
 (let ((?x2134 (* (- 1620) (* r r x))))
 (let ((?x1685 (* 108 (* r r x x))))
 (let ((?x1651 (* 108 (* r r x00 x00))))
 (let ((?x3022 (* (- 1692) (* r r r s00))))
 (let ((?x3020 (* (- 2385) (* r r s00))))
 (let ((?x1396 (* x00 x00)))
 (let ((?x1397 (* 108 ?x1396)))
 (let ((?x1370 (* x x00)))
 (let ((?x1383 (* (- 216) ?x1370)))
 (let ((?x1234 (* s00 s00 s00)))
 (let ((?x1235 (* 16 ?x1234)))
 (let ((?x1204 (* x s00 r00)))
 (let ((?x1217 (* (- 216) ?x1204)))
 (let ((?x5033 (* 216 (* r00 r00 r00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454))))
 (let ((?x1106 (* s00 r00 r00 r00)))
 (let ((?x1554 (* 216 ?x1106)))
 (let ((?x990 (* s s s00)))
 (let ((?x1019 (* (- 12) ?x990)))
 (let ((?x932 (* r00 r00 r00 x00)))
 (let ((?x962 (* (- 432) ?x932)))
 (let ((?x904 (* x x)))
 (let ((?x905 (* 108 ?x904)))
 (let ((?x5024 (* 432 (* r00 r00 r00 x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454))))
 (let ((?x855 (* s00 x00)))
 (let ((?x1191 (* (- 108) ?x855)))
 (let ((?x5019 (* (- 216) (* r00 r00 r00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454))))
 (let ((?x781 (* s00 s00 r00 r00)))
 (let ((?x2060 (* (- 36) ?x781)))
 (let ((?x774 (* s x00)))
 (let ((?x4134 (* 324 ?x774)))
 (let ((?x718 (* s00 s00 r00)))
 (let ((?x1089 (* (- 108) ?x718)))
 (let ((?x697 (* s00 r00 r00)))
 (let ((?x1324 (* (- 36) ?x697)))
 (let ((?x667 (* x r00)))
 (let ((?x1294 (* (- 108) ?x667)))
 (let ((?x641 (* s00 s00)))
 (let ((?x1271 (* 51 ?x641)))
 (let ((?x608 (* r x r00)))
 (let ((?x2516 (* (- 216) ?x608)))
 (let ((?x599 (* r x)))
 (let ((?x2132 (* (- 1296) ?x599)))
 (let ((?x572 (* r00 x00)))
 (let ((?x568 (* 108 ?x572)))
 (let ((?x563 (* s00 r00 x00)))
 (let ((?x3102 (* 216 ?x563)))
 (let ((?x519 (* r00 r00 r00)))
 (let ((?x2626 (* (- 648) ?x519)))
 (let ((?x476 (* s00 r00)))
 (let ((?x4884 (* 270 ?x476)))
 (let ((?x351 (* r00 r00)))
 (let ((?x4874 (* 432 ?x351)))
 (let ((?x3610 (* 324 x00)))
 (let ((?x4872 (* 162 r00)))
 (let ((?x3012 (* (- 297) s00)))
 (let ((?x2057 (* (- 324) x)))
 (let ((?x5108 (+ (* 702 r) (* 405 s) ?x2057 ?x3012 ?x4872 ?x3610 (* 1620 (* r r)) ?x4874 (* 1638 (* r s)) (* 4 (* ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454 ?x1454 ?x1454)) (* 2376 (* r r00 r00)) (* 108 (* r00 s00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) (* (- 1422) (* r s00)) ?x4884 ?x2626 (* 216 (* x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x3102 ?x568 (* 231 (* s s)) ?x2132 (* 324 (* r s r00)) ?x2516 (* 252 (* s r00 r00)) ?x1271 (* 108 (* x s00)) ?x1294 (* (- 648) (* s r00 r00 r00)) ?x1324 (* 1296 (* r x00)) ?x1089 (* (- 246) (* s s00)) (* 162 (* s r00)) ?x4134 (* 1188 (* r s00 r00)) ?x2060 ?x5019 (* 324 (* s s00 r00)) ?x1191 (* 462 (* r s s)) (* (- 324) (* s x)) ?x5024 (* 102 (* r s00 s00)) ?x905 ?x962 (* (- 636) (* r s s00)) ?x1019 (* 216 (* r r00 x00)) (* 864 (* r x r00 r00 r00)) (* 432 (* r r x r00 r00 r00)) ?x1554 (* 432 (* x r00 r00 r00)) (* 36 (* r00 r00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x5033 (* 108 (* r r x s00)) (* 216 (* r x s00)) ?x1217 (* 36 (* s s r00 r00)) ?x1235 (* 108 (* r00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x1383 (* (- 54) (* r00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) ?x1397 ?x3020 ?x3022 (* (- 534) (* r r s s00)) ?x1651 (* 216 (* r x00 x00)) (* 540 (* r r r r)) ?x1685 (* 216 (* r x x)) (* (- 15) (* ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454 ?x1454)) (* (- 9) (* s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) (* 1566 (* r r r)) (* 2061 (* r r s)) (* (- 648) (* r s x)) (* (- 324) (* r r s x)) (* 432 (* r s00 r00 r00 r00)) (* 324 (* r r r r00)) (* 828 (* r r r s)) (* 231 (* r r s s)) ?x2134 ?x2112 ?x2316 ?x2308 (* 66 (* s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) (* 162 (* r r s r00)) (* 648 (* r r r s00 r00)) (* (- 108) (* s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x2457 (* 648 (* r r00)) ?x2527 ?x2572 (* (- 108) (* x00 x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x2616 ?x2618 ?x2663 (* (- 1296) (* r s r00 r00 r00)) (* (- 648) (* r r s r00 r00 r00)) (* 4752 (* r r r00 r00)) (* (- 108) (* x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) ?x3000 ?x2983 (* 108 (* s00 x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x2999 (* 108 (* ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) (* 4104 (* r r r r00 r00)) (* 648 (* r s s00 r00)) (* 324 (* r r s s00 r00)) ?x3140 ?x3218 ?x3250 (* 936 (* r s r00 r00)) ?x3112 ?x3311 (* 1116 (* r r s r00 r00)) (* 1296 (* r r r r r00 r00)) ?x3624 (* (- 216) (* r00 s00 x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) (* 810 (* r r r00)) (* 432 (* r r r s r00 r00)) ?x4135 (* 648 (* r s x00)) (* (- 51) (* s00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) (* 36 (* r r s s r00 r00)) ?x3804 (* 32 (* r s00 s00 s00)) (* 72 (* r s s r00 r00)) ?x3590 (* 1566 (* r r s00 r00)) (* (- 36) (* r r s00 s00 r00 r00)) ?x3694 (* 648 (* r r r x00)) ?x4168 ?x4146 (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) (* 12 (* s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454 ?x1454)) ?x4325 ?x4335 (* (- 72) (* r s00 s00 r00 r00)) (* 216 (* r r s00 r00 r00 r00)) (* 9 (* ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) (* 1620 (* r r x00)) (* 432 (* r s00 r00 x00)) (* 216 (* r r s00 r00 x00)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x5100 (* (- 108) (* r00 x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x5102 (* 54 (* r00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) (* (- 108) (* ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) (* (- 108) (* r00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x5107)))
 (let ((?x1426 (* (- 108) ?x1396)))
 (let ((?x1425 (* (- 16) ?x1234)))
 (let ((?x1421 (* (- 216) ?x1106)))
 (let ((?x933 (* 432 ?x932)))
 (let ((?x1179 (* 108 ?x855)))
 (let ((?x782 (* 36 ?x781)))
 (let ((?x1062 (* 108 ?x718)))
 (let ((?x1050 (* 36 ?x697)))
 (let ((?x1415 (* (- 51) ?x641)))
 (let ((?x615 (* s r00 r00)))
 (let ((?x914 (* (- 36) ?x615)))
 (let ((?x1412 (* (- 108) ?x572)))
 (let ((?x1411 (* (- 216) ?x563)))
 (let ((?x570 (* 54 ?x476)))
 (let ((?x1037 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1427 (+ ?x143 ?x1037 ?x570 ?x1411 ?x1412 (* (- 15) (* s s)) ?x914 ?x1415 (* (- 108) (* x s00)) (* 108 ?x667) (* 216 (* s r00 r00 r00)) ?x1050 ?x1062 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x774) ?x782 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1179 (* 108 (* s x)) (* (- 108) ?x904) ?x933 (* 12 ?x990) ?x1421 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1204) (* (- 36) (* s s r00 r00)) ?x1425 (* 216 ?x1370) ?x1426)))
 (let (($x1428 (= ?x1427 0)))
 (let ((?x927 (* r00 r00 x00)))
 (let ((?x940 (* (- 36) ?x927)))
 (let ((?x856 (* 6 ?x855)))
 (let ((?x746 (* (- 2) ?x718)))
 (let ((?x966 (* (- 15) ?x641)))
 (let ((?x595 (* s s)))
 (let ((?x619 (* 3 ?x595)))
 (let ((?x601 (* (- 54) ?x572)))
 (let ((?x614 (* 24 ?x476)))
 (let ((?x1129 (+ ?x143 ?x1037 (* (- 24) (* r s)) (* 24 (* r s00)) ?x614 ?x601 ?x619 (* 54 ?x599) (* 36 ?x608) ?x914 ?x966 (* (- 6) (* x s00)) (* 54 ?x667) ?x1050 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x746 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x774) (* (- 2) (* s s00 r00)) ?x856 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x940 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1134 (= ?x1129 0)))
 (let ((?x698 (* 6 ?x697)))
 (let ((?x654 (* (- 4) ?x641)))
 (let ((?x596 (* 2 ?x595)))
 (let ((?x586 (* (- 18) ?x572)))
 (let ((?x591 (* 9 ?x476)))
 (let ((?x428 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x795 (+ ?x47 ?x428 (* (- 9) (* r s)) (* 9 (* r s00)) ?x591 ?x586 ?x596 (* 18 ?x599) (* 6 (* r s r00)) (* (- 6) ?x615) ?x654 (* 18 ?x667) ?x698 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x802 (= ?x795 0)))
 (let ((?x520 (* 12 ?x519)))
 (let ((?x554 (* (- 6) ?x476)))
 (let ((?x551 (* (- 6) x00)))
 (let ((?x550 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x549 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x555 (+ ?x43 ?x549 ?x56 ?x44 ?x550 ?x551 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x554 ?x520)))
 (let (($x556 (= ?x555 0)))
 (let (($x384 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x351)) 0)))
 (and $x384 $x556 $x802 $x1134 $x1428 (not (= ?x5108 (- 108)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x4313 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (* 6 r)))
 (let ((?x2880 (+ 3 s ?x215)))
 (let ((?x330 (* (- 1) s)))
 (let ((?x2800 (+ x ?x330)))
 (let ((?x1435 (+ 1 r)))
 (let ((?x2706 (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x2703 (* r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x3236 (* r00 r00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x2568 (* r00 r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x2522 (* r00 r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x3285 (* r00 r00 r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x3594 (* r00 r00 r00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x4314 (+ (* 36 (* r00 r00 s00 s00 ?x1435 ?x1435)) (* (- 12) (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* x00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 66 (* s00 ?x1435 ?x1435 ?x2880)) (* 54 (* r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 216 (* r00 s00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 108 (* x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* ?x1435 ?x1435 ?x2800 ?x2800)) (* (- 9) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 216) (* x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 108) (* r00 s00 ?x1435 ?x1435 ?x2880)) (* (- 108) (* x00 x00 ?x1435 ?x1435)) (* 9 (* ?x1435 ?x1435 ?x2880)) (* 108 (* ?x1435 ?x1435 ?x2800 ?x2880)) (* (- 216) (* r00 r00 r00 s00 ?x1435 ?x1435)) (* (- 9) (* s00 ?x1435 ?x1435)) (* (- 54) (* r00 ?x1435 ?x1435 ?x2880)) (* 108 (* r00 s00 s00 ?x1435 ?x1435)) (* 15 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 66) (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* r00 x00 ?x1435 ?x1435)) (* 108 (* r00 ?x1435 ?x1435 ?x2800)) (* (- 432) ?x3594) (* 216 (* r00 r00 r00 ?x1435 ?x1435 ?x2880)) (* 216 ?x3285) (* 12 (* s00 ?x1435 ?x1435 ?x2880 ?x2880)) (* (- 432) (* r00 r00 r00 ?x1435 ?x1435 ?x2800)) (* (- 216) ?x2522) (* 36 (* r00 r00 s00 ?x1435 ?x1435)) (* (- 108) (* r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 4) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* s00 ?x1435 ?x1435 ?x2800)) (* (- 108) (* r00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x2800)) (* (- 36) (* r00 r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 9 (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 15) (* ?x1435 ?x1435 ?x2880 ?x2880)) (* 108 (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 108) (* s00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x2880 ?x2880)) (* (- 51) (* s00 s00 ?x1435 ?x1435)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 4 (* ?x1435 ?x1435 ?x2880 ?x2880 ?x2880)) (* (- 108) (* x00 ?x1435 ?x1435 ?x2880)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435)) (* 51 (* s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x2880)) (* (- 216) (* r00 s00 x00 ?x1435 ?x1435)) (* (- 216) (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 432 ?x2568) (* (- 54) (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 108 (* r00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 432 (* r00 r00 r00 x00 ?x1435 ?x1435)) (* (- 36) ?x3236) (* 216 (* x00 ?x1435 ?x1435 ?x2800)) (* 54 (* r00 s00 ?x1435 ?x1435)) (* 108 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 16 (* s00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 36 ?x2703) (* 108 (* s00 x00 ?x1435 ?x1435)) (* 108 ?x2706))))
 (let ((?x1396 (* x00 x00)))
 (let ((?x1397 (* 108 ?x1396)))
 (let ((?x2219 (* r00 s)))
 (let ((?x2220 (* 54 ?x2219)))
 (let ((?x1728 (* (- 9) s)))
 (let ((?x2908 (* r00 r00 s00)))
 (let ((?x1093 (* (- 36) ?x2908)))
 (let ((?x137 (* 9 s00)))
 (let ((?x641 (* s00 s00)))
 (let ((?x1271 (* 51 ?x641)))
 (let ((?x3890 (* r00 r00 s)))
 (let ((?x3889 (* 36 ?x3890)))
 (let ((?x1234 (* s00 s00 s00)))
 (let ((?x1235 (* 16 ?x1234)))
 (let ((?x3546 (* 36 (* r00 r00 s s))))
 (let ((?x855 (* s00 x00)))
 (let ((?x1191 (* (- 108) ?x855)))
 (let ((?x3044 (* 432 (* r00 r00 r00 x))))
 (let ((?x2163 (* 216 (* r00 r00 r00 s00))))
 (let ((?x3393 (* s00 x)))
 (let ((?x3394 (* 108 ?x3393)))
 (let ((?x932 (* r00 r00 r00 x00)))
 (let ((?x962 (* (- 432) ?x932)))
 (let ((?x904 (* x x)))
 (let ((?x905 (* 108 ?x904)))
 (let ((?x1442 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x572 (* r00 x00)))
 (let ((?x568 (* 108 ?x572)))
 (let ((?x3909 (* 216 (* r00 s00 x00))))
 (let ((?x3087 (+ ?x3909 ?x568 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x1442 (* (- 4) (* s s s)) ?x905 ?x962 (* (- 12) (* s00 s s)) ?x3394 (* (- 108) (* r00 s00 s00)) ?x2163 (* 108 (* x00 s)) ?x3044 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1191 (* (- 216) (* r00 s00 x)) ?x3546 ?x1235 (* (- 108) (* x s)) ?x3889 ?x1271 (* (- 108) (* r00 x)) ?x137 ?x1093 ?x1728 ?x2220 (* (- 216) (* x00 x)) ?x1397)))
 (let (($x3094 (= ?x3087 0)))
 (let ((?x2253 (* 15 ?x641)))
 (let ((?x927 (* r00 r00 x00)))
 (let ((?x833 (* 36 ?x927)))
 (let ((?x3934 (* (- 6) ?x855)))
 (let ((?x2011 (* 54 ?x572)))
 (let ((?x2830 (+ (* 24 (* s r)) ?x2011 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 ?x3393) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3934 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3889 ?x833 ?x2253 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1093 (* 54 (* x00 r)) ?x1728 (* (- 24) (* s00 r)) (* 24 ?x2219) (* (- 36) (* r00 r00 x)))))
 (let ((?x549 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4337 (* 4 ?x641)))
 (let ((?x1625 (* 18 ?x572)))
 (let ((?x4331 (+ (* 9 (* s r)) ?x1625 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3890) ?x4337 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2908) (* 18 (* x00 r)) ?x549 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 ?x2219) (* 6 (* r00 s00 r)))))
 (let ((?x519 (* r00 r00 r00)))
 (let ((?x520 (* 12 ?x519)))
 (let ((?x551 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x550 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1193 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x549 ?x550 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x551 ?x520)))
 (let (($x2775 (= (+ s00 ?x330 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2775 (= ?x1193 0) (= ?x4331 0) (= ?x2830 0) $x3094 (not (= ?x4314 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5116 (lambda ((r Int) (s Int) (x Int) )(let ((?x215 (* 6 r)))
 (let ((?x1454 (+ 3 ?x215 s)))
 (let ((?x330 (* (- 1) s)))
 (let ((?x1460 (+ ?x330 x)))
 (let ((?x1435 (+ 1 r)))
 (let ((?x5107 (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454 ?x1454))))
 (let ((?x5102 (* (- 432) (* r00 r00 r00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454))))
 (let ((?x5100 (* 36 (* r00 r00 s00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454))))
 (let ((?x4335 (* (- 108) (* r r s00 x00))))
 (let ((?x4325 (* (- 216) (* r s00 x00))))
 (let ((?x4146 (* (- 432) (* r x x00))))
 (let ((?x4168 (* (- 216) (* r r x x00))))
 (let ((?x3694 (* (- 864) (* r r00 r00 r00 x00))))
 (let ((?x3590 (* (- 432) (* r r r00 r00 r00 x00))))
 (let ((?x3804 (* 16 (* r r s00 s00 s00))))
 (let ((?x4135 (* 324 (* r r s x00))))
 (let ((?x3624 (* (- 4) (* ?x1435 ?x1435 ?x1454 ?x1454 ?x1454))))
 (let ((?x3311 (* (- 216) (* r r x s00 r00))))
 (let ((?x3112 (* (- 432) (* r x s00 r00))))
 (let ((?x3250 (* (- 36) (* r r s00 r00 r00))))
 (let ((?x3218 (* (- 72) (* r s00 r00 r00))))
 (let ((?x3140 (* 51 (* r r s00 s00))))
 (let ((?x2999 (* (- 144) (* r r r s s00))))
 (let ((?x2983 (* (- 12) (* r r s s s00))))
 (let ((?x3000 (* (- 24) (* r s s s00))))
 (let ((?x2663 (* (- 1296) (* r r r r00 r00 r00))))
 (let ((?x2618 (* (- 3240) (* r r r00 r00 r00))))
 (let ((?x2616 (* (- 2592) (* r r00 r00 r00))))
 (let ((?x2572 (* 108 (* r r r00 x00))))
 (let ((?x2527 (* (- 108) (* r r x r00))))
 (let ((?x2457 (* (- 432) (* r r r r s00))))
 (let ((?x2308 (* (- 108) (* r r s00 s00 r00))))
 (let ((?x2316 (* (- 216) (* r s00 s00 r00))))
 (let ((?x2112 (* (- 648) (* r r r x))))
 (let ((?x2134 (* (- 1620) (* r r x))))
 (let ((?x1685 (* 108 (* r r x x))))
 (let ((?x1651 (* 108 (* r r x00 x00))))
 (let ((?x3022 (* (- 1692) (* r r r s00))))
 (let ((?x3020 (* (- 2385) (* r r s00))))
 (let ((?x1396 (* x00 x00)))
 (let ((?x1397 (* 108 ?x1396)))
 (let ((?x1370 (* x x00)))
 (let ((?x1383 (* (- 216) ?x1370)))
 (let ((?x1234 (* s00 s00 s00)))
 (let ((?x1235 (* 16 ?x1234)))
 (let ((?x1204 (* x s00 r00)))
 (let ((?x1217 (* (- 216) ?x1204)))
 (let ((?x5033 (* 216 (* r00 r00 r00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454))))
 (let ((?x1106 (* s00 r00 r00 r00)))
 (let ((?x1554 (* 216 ?x1106)))
 (let ((?x990 (* s s s00)))
 (let ((?x1019 (* (- 12) ?x990)))
 (let ((?x932 (* r00 r00 r00 x00)))
 (let ((?x962 (* (- 432) ?x932)))
 (let ((?x904 (* x x)))
 (let ((?x905 (* 108 ?x904)))
 (let ((?x5024 (* 432 (* r00 r00 r00 x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454))))
 (let ((?x855 (* s00 x00)))
 (let ((?x1191 (* (- 108) ?x855)))
 (let ((?x5019 (* (- 216) (* r00 r00 r00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454))))
 (let ((?x781 (* s00 s00 r00 r00)))
 (let ((?x2060 (* (- 36) ?x781)))
 (let ((?x774 (* s x00)))
 (let ((?x4134 (* 324 ?x774)))
 (let ((?x718 (* s00 s00 r00)))
 (let ((?x1089 (* (- 108) ?x718)))
 (let ((?x697 (* s00 r00 r00)))
 (let ((?x1324 (* (- 36) ?x697)))
 (let ((?x667 (* x r00)))
 (let ((?x1294 (* (- 108) ?x667)))
 (let ((?x641 (* s00 s00)))
 (let ((?x1271 (* 51 ?x641)))
 (let ((?x608 (* r x r00)))
 (let ((?x2516 (* (- 216) ?x608)))
 (let ((?x599 (* r x)))
 (let ((?x2132 (* (- 1296) ?x599)))
 (let ((?x572 (* r00 x00)))
 (let ((?x568 (* 108 ?x572)))
 (let ((?x563 (* s00 r00 x00)))
 (let ((?x3102 (* 216 ?x563)))
 (let ((?x519 (* r00 r00 r00)))
 (let ((?x2626 (* (- 648) ?x519)))
 (let ((?x476 (* s00 r00)))
 (let ((?x4884 (* 270 ?x476)))
 (let ((?x351 (* r00 r00)))
 (let ((?x4874 (* 432 ?x351)))
 (let ((?x3610 (* 324 x00)))
 (let ((?x4872 (* 162 r00)))
 (let ((?x3012 (* (- 297) s00)))
 (let ((?x2057 (* (- 324) x)))
 (let ((?x5108 (+ (* 702 r) (* 405 s) ?x2057 ?x3012 ?x4872 ?x3610 (* 1620 (* r r)) ?x4874 (* 1638 (* r s)) (* 4 (* ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454 ?x1454 ?x1454)) (* 2376 (* r r00 r00)) (* 108 (* r00 s00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) (* (- 1422) (* r s00)) ?x4884 ?x2626 (* 216 (* x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x3102 ?x568 (* 231 (* s s)) ?x2132 (* 324 (* r s r00)) ?x2516 (* 252 (* s r00 r00)) ?x1271 (* 108 (* x s00)) ?x1294 (* (- 648) (* s r00 r00 r00)) ?x1324 (* 1296 (* r x00)) ?x1089 (* (- 246) (* s s00)) (* 162 (* s r00)) ?x4134 (* 1188 (* r s00 r00)) ?x2060 ?x5019 (* 324 (* s s00 r00)) ?x1191 (* 462 (* r s s)) (* (- 324) (* s x)) ?x5024 (* 102 (* r s00 s00)) ?x905 ?x962 (* (- 636) (* r s s00)) ?x1019 (* 216 (* r r00 x00)) (* 864 (* r x r00 r00 r00)) (* 432 (* r r x r00 r00 r00)) ?x1554 (* 432 (* x r00 r00 r00)) (* 36 (* r00 r00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x5033 (* 108 (* r r x s00)) (* 216 (* r x s00)) ?x1217 (* 36 (* s s r00 r00)) ?x1235 (* 108 (* r00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x1383 (* (- 54) (* r00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) ?x1397 ?x3020 ?x3022 (* (- 534) (* r r s s00)) ?x1651 (* 216 (* r x00 x00)) (* 540 (* r r r r)) ?x1685 (* 216 (* r x x)) (* (- 15) (* ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454 ?x1454)) (* (- 9) (* s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) (* 1566 (* r r r)) (* 2061 (* r r s)) (* (- 648) (* r s x)) (* (- 324) (* r r s x)) (* 432 (* r s00 r00 r00 r00)) (* 324 (* r r r r00)) (* 828 (* r r r s)) (* 231 (* r r s s)) ?x2134 ?x2112 ?x2316 ?x2308 (* 66 (* s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) (* 162 (* r r s r00)) (* 648 (* r r r s00 r00)) (* (- 108) (* s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x2457 (* 648 (* r r00)) ?x2527 ?x2572 (* (- 108) (* x00 x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x2616 ?x2618 ?x2663 (* (- 1296) (* r s r00 r00 r00)) (* (- 648) (* r r s r00 r00 r00)) (* 4752 (* r r r00 r00)) (* (- 108) (* x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) ?x3000 ?x2983 (* 108 (* s00 x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x2999 (* 108 (* ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) (* 4104 (* r r r r00 r00)) (* 648 (* r s s00 r00)) (* 324 (* r r s s00 r00)) ?x3140 ?x3218 ?x3250 (* 936 (* r s r00 r00)) ?x3112 ?x3311 (* 1116 (* r r s r00 r00)) (* 1296 (* r r r r r00 r00)) ?x3624 (* (- 216) (* r00 s00 x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) (* 810 (* r r r00)) (* 432 (* r r r s r00 r00)) ?x4135 (* 648 (* r s x00)) (* (- 51) (* s00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) (* 36 (* r r s s r00 r00)) ?x3804 (* 32 (* r s00 s00 s00)) (* 72 (* r s s r00 r00)) ?x3590 (* 1566 (* r r s00 r00)) (* (- 36) (* r r s00 s00 r00 r00)) ?x3694 (* 648 (* r r r x00)) ?x4168 ?x4146 (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) (* 12 (* s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454 ?x1454)) ?x4325 ?x4335 (* (- 72) (* r s00 s00 r00 r00)) (* 216 (* r r s00 r00 r00 r00)) (* 9 (* ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) (* 1620 (* r r x00)) (* 432 (* r s00 r00 x00)) (* 216 (* r r s00 r00 x00)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x5100 (* (- 108) (* r00 x00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x5102 (* 54 (* r00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) (* (- 108) (* ?x1435 ?x1435 ?x1460 ?x1460 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) (* (- 108) (* r00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454 ?x1454)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435 ?x1460 ?x1460 ?x1454 ?x1454 ?x1454)) ?x5107)))
 (let ((?x1426 (* (- 108) ?x1396)))
 (let ((?x1425 (* (- 16) ?x1234)))
 (let ((?x1421 (* (- 216) ?x1106)))
 (let ((?x933 (* 432 ?x932)))
 (let ((?x1179 (* 108 ?x855)))
 (let ((?x782 (* 36 ?x781)))
 (let ((?x1062 (* 108 ?x718)))
 (let ((?x1050 (* 36 ?x697)))
 (let ((?x1415 (* (- 51) ?x641)))
 (let ((?x615 (* s r00 r00)))
 (let ((?x914 (* (- 36) ?x615)))
 (let ((?x1412 (* (- 108) ?x572)))
 (let ((?x1411 (* (- 216) ?x563)))
 (let ((?x570 (* 54 ?x476)))
 (let ((?x1037 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1427 (+ ?x143 ?x1037 ?x570 ?x1411 ?x1412 (* (- 15) (* s s)) ?x914 ?x1415 (* (- 108) (* x s00)) (* 108 ?x667) (* 216 (* s r00 r00 r00)) ?x1050 ?x1062 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x774) ?x782 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1179 (* 108 (* s x)) (* (- 108) ?x904) ?x933 (* 12 ?x990) ?x1421 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1204) (* (- 36) (* s s r00 r00)) ?x1425 (* 216 ?x1370) ?x1426)))
 (let (($x1428 (= ?x1427 0)))
 (let ((?x927 (* r00 r00 x00)))
 (let ((?x940 (* (- 36) ?x927)))
 (let ((?x856 (* 6 ?x855)))
 (let ((?x746 (* (- 2) ?x718)))
 (let ((?x966 (* (- 15) ?x641)))
 (let ((?x595 (* s s)))
 (let ((?x619 (* 3 ?x595)))
 (let ((?x601 (* (- 54) ?x572)))
 (let ((?x614 (* 24 ?x476)))
 (let ((?x1129 (+ ?x143 ?x1037 (* (- 24) (* r s)) (* 24 (* r s00)) ?x614 ?x601 ?x619 (* 54 ?x599) (* 36 ?x608) ?x914 ?x966 (* (- 6) (* x s00)) (* 54 ?x667) ?x1050 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x746 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x774) (* (- 2) (* s s00 r00)) ?x856 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x940 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1134 (= ?x1129 0)))
 (let ((?x698 (* 6 ?x697)))
 (let ((?x654 (* (- 4) ?x641)))
 (let ((?x596 (* 2 ?x595)))
 (let ((?x586 (* (- 18) ?x572)))
 (let ((?x591 (* 9 ?x476)))
 (let ((?x428 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x795 (+ ?x47 ?x428 (* (- 9) (* r s)) (* 9 (* r s00)) ?x591 ?x586 ?x596 (* 18 ?x599) (* 6 (* r s r00)) (* (- 6) ?x615) ?x654 (* 18 ?x667) ?x698 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x802 (= ?x795 0)))
 (let ((?x520 (* 12 ?x519)))
 (let ((?x554 (* (- 6) ?x476)))
 (let ((?x551 (* (- 6) x00)))
 (let ((?x550 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x549 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x555 (+ ?x43 ?x549 ?x56 ?x44 ?x550 ?x551 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x554 ?x520)))
 (let (($x556 (= ?x555 0)))
 (let (($x384 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x351)) 0)))
 (let (($x4118 (and $x384 $x556 $x802 $x1134 $x1428 (not (= ?x5108 (- 108))))))
 (let ((?x2880 (+ 3 s ?x215)))
 (let ((?x2800 (+ x ?x330)))
 (let ((?x2706 (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x2703 (* r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x3236 (* r00 r00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x2568 (* r00 r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x2522 (* r00 r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x3285 (* r00 r00 r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x3594 (* r00 r00 r00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x4314 (+ (* 36 (* r00 r00 s00 s00 ?x1435 ?x1435)) (* (- 12) (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* x00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 66 (* s00 ?x1435 ?x1435 ?x2880)) (* 54 (* r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 216 (* r00 s00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 108 (* x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* ?x1435 ?x1435 ?x2800 ?x2800)) (* (- 9) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 216) (* x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 108) (* r00 s00 ?x1435 ?x1435 ?x2880)) (* (- 108) (* x00 x00 ?x1435 ?x1435)) (* 9 (* ?x1435 ?x1435 ?x2880)) (* 108 (* ?x1435 ?x1435 ?x2800 ?x2880)) (* (- 216) (* r00 r00 r00 s00 ?x1435 ?x1435)) (* (- 9) (* s00 ?x1435 ?x1435)) (* (- 54) (* r00 ?x1435 ?x1435 ?x2880)) (* 108 (* r00 s00 s00 ?x1435 ?x1435)) (* 15 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 66) (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* r00 x00 ?x1435 ?x1435)) (* 108 (* r00 ?x1435 ?x1435 ?x2800)) (* (- 432) ?x3594) (* 216 (* r00 r00 r00 ?x1435 ?x1435 ?x2880)) (* 216 ?x3285) (* 12 (* s00 ?x1435 ?x1435 ?x2880 ?x2880)) (* (- 432) (* r00 r00 r00 ?x1435 ?x1435 ?x2800)) (* (- 216) ?x2522) (* 36 (* r00 r00 s00 ?x1435 ?x1435)) (* (- 108) (* r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 4) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* s00 ?x1435 ?x1435 ?x2800)) (* (- 108) (* r00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x2800)) (* (- 36) (* r00 r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 9 (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 15) (* ?x1435 ?x1435 ?x2880 ?x2880)) (* 108 (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 108) (* s00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x2880 ?x2880)) (* (- 51) (* s00 s00 ?x1435 ?x1435)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 4 (* ?x1435 ?x1435 ?x2880 ?x2880 ?x2880)) (* (- 108) (* x00 ?x1435 ?x1435 ?x2880)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435)) (* 51 (* s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x2880)) (* (- 216) (* r00 s00 x00 ?x1435 ?x1435)) (* (- 216) (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 432 ?x2568) (* (- 54) (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 108 (* r00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 432 (* r00 r00 r00 x00 ?x1435 ?x1435)) (* (- 36) ?x3236) (* 216 (* x00 ?x1435 ?x1435 ?x2800)) (* 54 (* r00 s00 ?x1435 ?x1435)) (* 108 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 16 (* s00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 36 ?x2703) (* 108 (* s00 x00 ?x1435 ?x1435)) (* 108 ?x2706))))
 (let ((?x2219 (* r00 s)))
 (let ((?x2220 (* 54 ?x2219)))
 (let ((?x1728 (* (- 9) s)))
 (let ((?x2908 (* r00 r00 s00)))
 (let ((?x1093 (* (- 36) ?x2908)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3890 (* r00 r00 s)))
 (let ((?x3889 (* 36 ?x3890)))
 (let ((?x3546 (* 36 (* r00 r00 s s))))
 (let ((?x3044 (* 432 (* r00 r00 r00 x))))
 (let ((?x2163 (* 216 (* r00 r00 r00 s00))))
 (let ((?x3393 (* s00 x)))
 (let ((?x3394 (* 108 ?x3393)))
 (let ((?x1442 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x3909 (* 216 (* r00 s00 x00))))
 (let ((?x3087 (+ ?x3909 ?x568 (* (- 54) (* r00 s00)) (* 15 ?x595) (* (- 216) (* r00 r00 r00 s)) ?x1442 (* (- 4) (* s s s)) ?x905 ?x962 (* (- 12) (* s00 s s)) ?x3394 (* (- 108) (* r00 s00 s00)) ?x2163 (* 108 (* x00 s)) ?x3044 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1191 (* (- 216) (* r00 s00 x)) ?x3546 ?x1235 (* (- 108) (* x s)) ?x3889 ?x1271 (* (- 108) (* r00 x)) ?x137 ?x1093 ?x1728 ?x2220 (* (- 216) (* x00 x)) ?x1397)))
 (let (($x3094 (= ?x3087 0)))
 (let ((?x2253 (* 15 ?x641)))
 (let ((?x833 (* 36 ?x927)))
 (let ((?x3934 (* (- 6) ?x855)))
 (let ((?x2011 (* 54 ?x572)))
 (let ((?x2830 (+ (* 24 (* s r)) ?x2011 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x595) (* (- 54) (* x r)) (* 6 ?x3393) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3934 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3889 ?x833 ?x2253 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1093 (* 54 (* x00 r)) ?x1728 (* (- 24) (* s00 r)) (* 24 ?x2219) (* (- 36) (* r00 r00 x)))))
 (let ((?x4337 (* 4 ?x641)))
 (let ((?x1625 (* 18 ?x572)))
 (let ((?x4331 (+ (* 9 (* s r)) ?x1625 (* (- 9) (* r00 s00)) (* (- 2) ?x595) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3890) ?x4337 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2908) (* 18 (* x00 r)) ?x549 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 ?x2219) (* 6 (* r00 s00 r)))))
 (let ((?x1193 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x549 ?x550 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x551 ?x520)))
 (let (($x2775 (= (+ s00 ?x330 (* 3 (* r r)) (* (- 3) ?x351)) 0)))
 (let (($x4366 (and $x2775 (= ?x1193 0) (= ?x4331 0) (= ?x2830 0) $x3094 (not (= ?x4314 0)))))
 (rewrite (= $x4366 $x4118))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2239 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (* 6 r)))
 (let ((?x2880 (+ 3 s ?x215)))
 (let ((?x330 (* (- 1) s)))
 (let ((?x2800 (+ x ?x330)))
 (let ((?x1435 (+ 1 r)))
 (let ((?x2706 (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x2703 (* r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x3236 (* r00 r00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x2568 (* r00 r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x2522 (* r00 r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x3285 (* r00 r00 r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x3594 (* r00 r00 r00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x1626 (+ (* (- 36) (* r00 r00 s00 s00 ?x1435 ?x1435)) (* 12 (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* x00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 66) (* s00 ?x1435 ?x1435 ?x2880)) (* (- 54) (* r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 216) (* r00 s00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 108) (* x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* ?x1435 ?x1435 ?x2800 ?x2800)) (* 9 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 216 (* x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 108 (* r00 s00 ?x1435 ?x1435 ?x2880)) (* 108 (* x00 x00 ?x1435 ?x1435)) (* (- 9) (* ?x1435 ?x1435 ?x2880)) (* (- 108) (* ?x1435 ?x1435 ?x2800 ?x2880)) (* 216 (* r00 r00 r00 s00 ?x1435 ?x1435)) (* 9 (* s00 ?x1435 ?x1435)) (* 54 (* r00 ?x1435 ?x1435 ?x2880)) (* (- 108) (* r00 s00 s00 ?x1435 ?x1435)) (* (- 15) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* 66 (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* r00 x00 ?x1435 ?x1435)) (* (- 108) (* r00 ?x1435 ?x1435 ?x2800)) (* 432 ?x3594) (* (- 216) (* r00 r00 r00 ?x1435 ?x1435 ?x2880)) (* (- 216) ?x3285) (* (- 12) (* s00 ?x1435 ?x1435 ?x2880 ?x2880)) (* 432 (* r00 r00 r00 ?x1435 ?x1435 ?x2800)) (* 216 ?x2522) (* (- 36) (* r00 r00 s00 ?x1435 ?x1435)) (* 108 (* r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 4 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* s00 ?x1435 ?x1435 ?x2800)) (* 108 (* r00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 216) (* r00 s00 ?x1435 ?x1435 ?x2800)) (* 36 (* r00 r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 9) (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 15 (* ?x1435 ?x1435 ?x2880 ?x2880)) (* (- 108) (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 108 (* s00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x2880 ?x2880)) (* 51 (* s00 s00 ?x1435 ?x1435)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 4) (* ?x1435 ?x1435 ?x2880 ?x2880 ?x2880)) (* 108 (* x00 ?x1435 ?x1435 ?x2880)) (* 16 (* s00 s00 s00 ?x1435 ?x1435)) (* (- 51) (* s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x2880)) (* 216 (* r00 s00 x00 ?x1435 ?x1435)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 432) ?x2568) (* 54 (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 108) (* r00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 432) (* r00 r00 r00 x00 ?x1435 ?x1435)) (* 36 ?x3236) (* (- 216) (* x00 ?x1435 ?x1435 ?x2800)) (* (- 54) (* r00 s00 ?x1435 ?x1435)) (* (- 108) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 36) ?x2703) (* (- 108) (* s00 x00 ?x1435 ?x1435)) (* (- 108) ?x2706))))
 (let ((?x1396 (* x00 x00)))
 (let ((?x1397 (* 108 ?x1396)))
 (let ((?x2219 (* r00 s)))
 (let ((?x2220 (* 54 ?x2219)))
 (let ((?x1728 (* (- 9) s)))
 (let ((?x2908 (* r00 r00 s00)))
 (let ((?x1093 (* (- 36) ?x2908)))
 (let ((?x137 (* 9 s00)))
 (let ((?x641 (* s00 s00)))
 (let ((?x1271 (* 51 ?x641)))
 (let ((?x3890 (* r00 r00 s)))
 (let ((?x3889 (* 36 ?x3890)))
 (let ((?x1234 (* s00 s00 s00)))
 (let ((?x1235 (* 16 ?x1234)))
 (let ((?x3546 (* 36 (* r00 r00 s s))))
 (let ((?x855 (* s00 x00)))
 (let ((?x1191 (* (- 108) ?x855)))
 (let ((?x3044 (* 432 (* r00 r00 r00 x))))
 (let ((?x2163 (* 216 (* r00 r00 r00 s00))))
 (let ((?x3393 (* s00 x)))
 (let ((?x3394 (* 108 ?x3393)))
 (let ((?x932 (* r00 r00 r00 x00)))
 (let ((?x962 (* (- 432) ?x932)))
 (let ((?x904 (* x x)))
 (let ((?x905 (* 108 ?x904)))
 (let ((?x1442 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x572 (* r00 x00)))
 (let ((?x568 (* 108 ?x572)))
 (let ((?x3909 (* 216 (* r00 s00 x00))))
 (let ((?x3087 (+ ?x3909 ?x568 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x1442 (* (- 4) (* s s s)) ?x905 ?x962 (* (- 12) (* s00 s s)) ?x3394 (* (- 108) (* r00 s00 s00)) ?x2163 (* 108 (* x00 s)) ?x3044 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1191 (* (- 216) (* r00 s00 x)) ?x3546 ?x1235 (* (- 108) (* x s)) ?x3889 ?x1271 (* (- 108) (* r00 x)) ?x137 ?x1093 ?x1728 ?x2220 (* (- 216) (* x00 x)) ?x1397)))
 (let (($x3094 (= ?x3087 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1037 (* (- 9) s00)))
 (let ((?x966 (* (- 15) ?x641)))
 (let ((?x927 (* r00 r00 x00)))
 (let ((?x940 (* (- 36) ?x927)))
 (let ((?x856 (* 6 ?x855)))
 (let ((?x595 (* s s)))
 (let ((?x619 (* 3 ?x595)))
 (let ((?x601 (* (- 54) ?x572)))
 (let ((?x744 (+ (* (- 24) (* s r)) ?x601 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x619 (* 54 (* x r)) (* (- 6) ?x3393) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x856 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3890) ?x940 ?x966 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1037 (* 36 ?x2908) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2219) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x428 (* (- 3) s00)))
 (let ((?x654 (* (- 4) ?x641)))
 (let ((?x596 (* 2 ?x595)))
 (let ((?x586 (* (- 18) ?x572)))
 (let ((?x4336 (+ (* (- 9) (* s r)) ?x586 (* 9 (* r00 s00)) ?x596 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3890) ?x654 (* 18 (* r00 x)) ?x428 (* 6 ?x2908) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2219) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2594 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x428 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2775 (= (+ s00 ?x330 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2775 (= ?x2594 0) (= ?x4336 0) (= ?x744 0) $x3094 (not (= ?x1626 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x4115 (lambda ((r Int) (s Int) (x Int) )(let ((?x215 (* 6 r)))
 (let ((?x2880 (+ 3 s ?x215)))
 (let ((?x330 (* (- 1) s)))
 (let ((?x2800 (+ x ?x330)))
 (let ((?x1435 (+ 1 r)))
 (let ((?x2706 (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x2703 (* r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x3236 (* r00 r00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x2568 (* r00 r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x2522 (* r00 r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x3285 (* r00 r00 r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x3594 (* r00 r00 r00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x4314 (+ (* 36 (* r00 r00 s00 s00 ?x1435 ?x1435)) (* (- 12) (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* x00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 66 (* s00 ?x1435 ?x1435 ?x2880)) (* 54 (* r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 216 (* r00 s00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 108 (* x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* ?x1435 ?x1435 ?x2800 ?x2800)) (* (- 9) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 216) (* x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 108) (* r00 s00 ?x1435 ?x1435 ?x2880)) (* (- 108) (* x00 x00 ?x1435 ?x1435)) (* 9 (* ?x1435 ?x1435 ?x2880)) (* 108 (* ?x1435 ?x1435 ?x2800 ?x2880)) (* (- 216) (* r00 r00 r00 s00 ?x1435 ?x1435)) (* (- 9) (* s00 ?x1435 ?x1435)) (* (- 54) (* r00 ?x1435 ?x1435 ?x2880)) (* 108 (* r00 s00 s00 ?x1435 ?x1435)) (* 15 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 66) (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* r00 x00 ?x1435 ?x1435)) (* 108 (* r00 ?x1435 ?x1435 ?x2800)) (* (- 432) ?x3594) (* 216 (* r00 r00 r00 ?x1435 ?x1435 ?x2880)) (* 216 ?x3285) (* 12 (* s00 ?x1435 ?x1435 ?x2880 ?x2880)) (* (- 432) (* r00 r00 r00 ?x1435 ?x1435 ?x2800)) (* (- 216) ?x2522) (* 36 (* r00 r00 s00 ?x1435 ?x1435)) (* (- 108) (* r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 4) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* s00 ?x1435 ?x1435 ?x2800)) (* (- 108) (* r00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x2800)) (* (- 36) (* r00 r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 9 (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 15) (* ?x1435 ?x1435 ?x2880 ?x2880)) (* 108 (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 108) (* s00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x2880 ?x2880)) (* (- 51) (* s00 s00 ?x1435 ?x1435)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 4 (* ?x1435 ?x1435 ?x2880 ?x2880 ?x2880)) (* (- 108) (* x00 ?x1435 ?x1435 ?x2880)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435)) (* 51 (* s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x2880)) (* (- 216) (* r00 s00 x00 ?x1435 ?x1435)) (* (- 216) (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 432 ?x2568) (* (- 54) (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 108 (* r00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 432 (* r00 r00 r00 x00 ?x1435 ?x1435)) (* (- 36) ?x3236) (* 216 (* x00 ?x1435 ?x1435 ?x2800)) (* 54 (* r00 s00 ?x1435 ?x1435)) (* 108 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 16 (* s00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 36 ?x2703) (* 108 (* s00 x00 ?x1435 ?x1435)) (* 108 ?x2706))))
 (let ((?x1396 (* x00 x00)))
 (let ((?x1397 (* 108 ?x1396)))
 (let ((?x2219 (* r00 s)))
 (let ((?x2220 (* 54 ?x2219)))
 (let ((?x1728 (* (- 9) s)))
 (let ((?x2908 (* r00 r00 s00)))
 (let ((?x1093 (* (- 36) ?x2908)))
 (let ((?x137 (* 9 s00)))
 (let ((?x641 (* s00 s00)))
 (let ((?x1271 (* 51 ?x641)))
 (let ((?x3890 (* r00 r00 s)))
 (let ((?x3889 (* 36 ?x3890)))
 (let ((?x1234 (* s00 s00 s00)))
 (let ((?x1235 (* 16 ?x1234)))
 (let ((?x3546 (* 36 (* r00 r00 s s))))
 (let ((?x855 (* s00 x00)))
 (let ((?x1191 (* (- 108) ?x855)))
 (let ((?x3044 (* 432 (* r00 r00 r00 x))))
 (let ((?x2163 (* 216 (* r00 r00 r00 s00))))
 (let ((?x3393 (* s00 x)))
 (let ((?x3394 (* 108 ?x3393)))
 (let ((?x932 (* r00 r00 r00 x00)))
 (let ((?x962 (* (- 432) ?x932)))
 (let ((?x904 (* x x)))
 (let ((?x905 (* 108 ?x904)))
 (let ((?x1442 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x572 (* r00 x00)))
 (let ((?x568 (* 108 ?x572)))
 (let ((?x3909 (* 216 (* r00 s00 x00))))
 (let ((?x3087 (+ ?x3909 ?x568 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x1442 (* (- 4) (* s s s)) ?x905 ?x962 (* (- 12) (* s00 s s)) ?x3394 (* (- 108) (* r00 s00 s00)) ?x2163 (* 108 (* x00 s)) ?x3044 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1191 (* (- 216) (* r00 s00 x)) ?x3546 ?x1235 (* (- 108) (* x s)) ?x3889 ?x1271 (* (- 108) (* r00 x)) ?x137 ?x1093 ?x1728 ?x2220 (* (- 216) (* x00 x)) ?x1397)))
 (let (($x3094 (= ?x3087 0)))
 (let ((?x2253 (* 15 ?x641)))
 (let ((?x927 (* r00 r00 x00)))
 (let ((?x833 (* 36 ?x927)))
 (let ((?x3934 (* (- 6) ?x855)))
 (let ((?x2011 (* 54 ?x572)))
 (let ((?x2830 (+ (* 24 (* s r)) ?x2011 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 ?x3393) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3934 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3889 ?x833 ?x2253 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1093 (* 54 (* x00 r)) ?x1728 (* (- 24) (* s00 r)) (* 24 ?x2219) (* (- 36) (* r00 r00 x)))))
 (let ((?x549 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4337 (* 4 ?x641)))
 (let ((?x1625 (* 18 ?x572)))
 (let ((?x4331 (+ (* 9 (* s r)) ?x1625 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3890) ?x4337 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2908) (* 18 (* x00 r)) ?x549 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 ?x2219) (* 6 (* r00 s00 r)))))
 (let ((?x519 (* r00 r00 r00)))
 (let ((?x520 (* 12 ?x519)))
 (let ((?x551 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x550 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1193 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x549 ?x550 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x551 ?x520)))
 (let (($x2775 (= (+ s00 ?x330 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x4366 (and $x2775 (= ?x1193 0) (= ?x4331 0) (= ?x2830 0) $x3094 (not (= ?x4314 0)))))
 (let ((?x1626 (+ (* (- 36) (* r00 r00 s00 s00 ?x1435 ?x1435)) (* 12 (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* x00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 66) (* s00 ?x1435 ?x1435 ?x2880)) (* (- 54) (* r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 216) (* r00 s00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 108) (* x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* ?x1435 ?x1435 ?x2800 ?x2800)) (* 9 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 216 (* x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 108 (* r00 s00 ?x1435 ?x1435 ?x2880)) (* 108 (* x00 x00 ?x1435 ?x1435)) (* (- 9) (* ?x1435 ?x1435 ?x2880)) (* (- 108) (* ?x1435 ?x1435 ?x2800 ?x2880)) (* 216 (* r00 r00 r00 s00 ?x1435 ?x1435)) (* 9 (* s00 ?x1435 ?x1435)) (* 54 (* r00 ?x1435 ?x1435 ?x2880)) (* (- 108) (* r00 s00 s00 ?x1435 ?x1435)) (* (- 15) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* 66 (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* r00 x00 ?x1435 ?x1435)) (* (- 108) (* r00 ?x1435 ?x1435 ?x2800)) (* 432 ?x3594) (* (- 216) (* r00 r00 r00 ?x1435 ?x1435 ?x2880)) (* (- 216) ?x3285) (* (- 12) (* s00 ?x1435 ?x1435 ?x2880 ?x2880)) (* 432 (* r00 r00 r00 ?x1435 ?x1435 ?x2800)) (* 216 ?x2522) (* (- 36) (* r00 r00 s00 ?x1435 ?x1435)) (* 108 (* r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 4 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* s00 ?x1435 ?x1435 ?x2800)) (* 108 (* r00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 216) (* r00 s00 ?x1435 ?x1435 ?x2800)) (* 36 (* r00 r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 9) (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 15 (* ?x1435 ?x1435 ?x2880 ?x2880)) (* (- 108) (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 108 (* s00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x2880 ?x2880)) (* 51 (* s00 s00 ?x1435 ?x1435)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 4) (* ?x1435 ?x1435 ?x2880 ?x2880 ?x2880)) (* 108 (* x00 ?x1435 ?x1435 ?x2880)) (* 16 (* s00 s00 s00 ?x1435 ?x1435)) (* (- 51) (* s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x2880)) (* 216 (* r00 s00 x00 ?x1435 ?x1435)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 432) ?x2568) (* 54 (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 108) (* r00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 432) (* r00 r00 r00 x00 ?x1435 ?x1435)) (* 36 ?x3236) (* (- 216) (* x00 ?x1435 ?x1435 ?x2800)) (* (- 54) (* r00 s00 ?x1435 ?x1435)) (* (- 108) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 36) ?x2703) (* (- 108) (* s00 x00 ?x1435 ?x1435)) (* (- 108) ?x2706))))
 (let ((?x143 (* 9 s)))
 (let ((?x1037 (* (- 9) s00)))
 (let ((?x966 (* (- 15) ?x641)))
 (let ((?x940 (* (- 36) ?x927)))
 (let ((?x856 (* 6 ?x855)))
 (let ((?x595 (* s s)))
 (let ((?x619 (* 3 ?x595)))
 (let ((?x601 (* (- 54) ?x572)))
 (let ((?x744 (+ (* (- 24) (* s r)) ?x601 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x619 (* 54 (* x r)) (* (- 6) ?x3393) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x856 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3890) ?x940 ?x966 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1037 (* 36 ?x2908) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2219) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x428 (* (- 3) s00)))
 (let ((?x654 (* (- 4) ?x641)))
 (let ((?x596 (* 2 ?x595)))
 (let ((?x586 (* (- 18) ?x572)))
 (let ((?x4336 (+ (* (- 9) (* s r)) ?x586 (* 9 (* r00 s00)) ?x596 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3890) ?x654 (* 18 (* r00 x)) ?x428 (* 6 ?x2908) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2219) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2594 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x428 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x519))))
 (let (($x2498 (and $x2775 (= ?x2594 0) (= ?x4336 0) (= ?x744 0) $x3094 (not (= ?x1626 0)))))
 (rewrite (= $x2498 $x4366)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x327 (exists ((r Int) (s Int) (x Int) )(! (let ((?x217 (- x s)))
 (let ((?x215 (* 6 r)))
 (let ((?x216 (+ s ?x215 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x307 (* 36 ?x213 ?x213 r00 r00 ?x216 ?x216 ?x216 s00 s00 ?x217 ?x217)))
 (let ((?x257 (* 216 ?x213 ?x213 r00 r00 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217)))
 (let ((?x254 (* 432 ?x213 ?x213 r00 r00 r00 ?x216 ?x216 ?x216 ?x217 ?x217 x00)))
 (let ((?x219 (+ (* (- 36) ?x213 ?x213 r00 r00 s00 s00) (* 12 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x226 (- (- ?x219 (* 108 ?x213 ?x213 ?x216 ?x216 ?x216 ?x217 ?x217 x00 x00)) (* 66 ?x213 ?x213 ?x216 s00))))
 (let ((?x228 (- (- ?x226 (* 54 ?x213 ?x213 r00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 216 ?x213 ?x213 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217 x00))))
 (let ((?x236 (+ (- ?x228 (* 108 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 x00)) (* 108 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 108 ?x213 ?x213 ?x217 ?x217) (* 9 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217) (* 216 ?x213 ?x213 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 x00) (* 108 ?x213 ?x213 r00 ?x216 s00) (* 108 ?x213 ?x213 x00 x00))))
 (let ((?x240 (- (- ?x236 (* 9 ?x213 ?x213 ?x216)) (* 108 ?x213 ?x213 ?x216 ?x217))))
 (let ((?x244 (+ ?x240 (* 216 ?x213 ?x213 r00 r00 r00 s00) (* 9 ?x213 ?x213 s00) (* 54 ?x213 ?x213 r00 ?x216))))
 (let ((?x248 (- (- ?x244 (* 108 ?x213 ?x213 r00 s00 s00)) (* 15 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x251 (+ ?x248 (* 66 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 s00 ?x217 ?x217) (* 108 ?x213 ?x213 r00 x00))))
 (let ((?x259 (- (+ (- ?x251 (* 108 ?x213 ?x213 r00 ?x217)) ?x254) (* 216 ?x213 ?x213 r00 r00 r00 ?x216))))
 (let ((?x264 (+ (- (- ?x259 ?x257) (* 12 ?x213 ?x213 ?x216 ?x216 s00)) (* 432 ?x213 ?x213 r00 r00 r00 ?x217) (* 216 ?x213 ?x213 r00 r00 r00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x271 (+ (- ?x264 (* 36 ?x213 ?x213 r00 r00 s00)) (* 108 ?x213 ?x213 r00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 4 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217) (* 108 ?x213 ?x213 s00 ?x217) (* 108 ?x213 ?x213 r00 ?x216 ?x216 ?x216 s00 s00 ?x217 ?x217))))
 (let ((?x275 (+ (- ?x271 (* 216 ?x213 ?x213 r00 s00 ?x217)) (* 36 ?x213 ?x213 r00 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x279 (+ (- ?x275 (* 9 ?x213 ?x213 ?x216 ?x216 ?x216 s00 ?x217 ?x217)) (* 15 ?x213 ?x213 ?x216 ?x216))))
 (let ((?x285 (+ (- ?x279 (* 108 ?x213 ?x213 ?x216 ?x216 ?x216 s00 ?x217 ?x217 ?x217)) (* 108 ?x213 ?x213 ?x216 ?x216 ?x216 s00 ?x217 ?x217 x00) (* 36 ?x213 ?x213 r00 r00 ?x216 ?x216) (* 51 ?x213 ?x213 s00 s00))))
 (let ((?x288 (- ?x285 (* 36 ?x213 ?x213 r00 r00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x292 (+ (- ?x288 (* 4 ?x213 ?x213 ?x216 ?x216 ?x216)) (* 108 ?x213 ?x213 ?x216 x00) (* 16 ?x213 ?x213 s00 s00 s00))))
 (let ((?x298 (+ (- ?x292 (* 51 ?x213 ?x213 ?x216 ?x216 ?x216 s00 s00 ?x217 ?x217)) (* 36 ?x213 ?x213 r00 r00 ?x216) (* 216 ?x213 ?x213 r00 s00 x00) (* 216 ?x213 ?x213 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217 ?x217))))
 (let ((?x300 (- ?x298 (* 432 ?x213 ?x213 r00 r00 r00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217))))
 (let ((?x305 (- (+ ?x300 (* 54 ?x213 ?x213 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217)) (* 108 ?x213 ?x213 r00 ?x216 ?x216 ?x216 ?x217 ?x217 x00))))
 (let ((?x316 (- (+ (- ?x305 (* 432 ?x213 ?x213 r00 r00 r00 x00)) ?x307) (* 216 ?x213 ?x213 ?x217 x00))))
 (let ((?x318 (- (- ?x316 (* 54 ?x213 ?x213 r00 s00)) (* 108 ?x213 ?x213 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x319 (- ?x318 (* 16 ?x213 ?x213 ?x216 ?x216 ?x216 s00 s00 s00 ?x217 ?x217))))
 (let ((?x320 (- ?x319 (* 36 ?x213 ?x213 r00 r00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x322 (- (- ?x320 (* 108 ?x213 ?x213 s00 x00)) (* 108 ?x213 ?x213 r00 ?x216 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x322 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2955 (lambda ((r Int) (s Int) (x Int) )(let ((?x215 (* 6 r)))
 (let ((?x2880 (+ 3 s ?x215)))
 (let ((?x330 (* (- 1) s)))
 (let ((?x2800 (+ x ?x330)))
 (let ((?x1435 (+ 1 r)))
 (let ((?x2706 (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x2703 (* r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x3236 (* r00 r00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x2568 (* r00 r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x2522 (* r00 r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)))
 (let ((?x3285 (* r00 r00 r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x3594 (* r00 r00 r00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)))
 (let ((?x1626 (+ (* (- 36) (* r00 r00 s00 s00 ?x1435 ?x1435)) (* 12 (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 108) (* x00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 66) (* s00 ?x1435 ?x1435 ?x2880)) (* (- 54) (* r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 216) (* r00 s00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 108) (* x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* ?x1435 ?x1435 ?x2800 ?x2800)) (* 9 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 216 (* x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 108 (* r00 s00 ?x1435 ?x1435 ?x2880)) (* 108 (* x00 x00 ?x1435 ?x1435)) (* (- 9) (* ?x1435 ?x1435 ?x2880)) (* (- 108) (* ?x1435 ?x1435 ?x2800 ?x2880)) (* 216 (* r00 r00 r00 s00 ?x1435 ?x1435)) (* 9 (* s00 ?x1435 ?x1435)) (* 54 (* r00 ?x1435 ?x1435 ?x2880)) (* (- 108) (* r00 s00 s00 ?x1435 ?x1435)) (* (- 15) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* 66 (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* r00 x00 ?x1435 ?x1435)) (* (- 108) (* r00 ?x1435 ?x1435 ?x2800)) (* 432 ?x3594) (* (- 216) (* r00 r00 r00 ?x1435 ?x1435 ?x2880)) (* (- 216) ?x3285) (* (- 12) (* s00 ?x1435 ?x1435 ?x2880 ?x2880)) (* 432 (* r00 r00 r00 ?x1435 ?x1435 ?x2800)) (* 216 ?x2522) (* (- 36) (* r00 r00 s00 ?x1435 ?x1435)) (* 108 (* r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 4 (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880 ?x2880)) (* 108 (* s00 ?x1435 ?x1435 ?x2800)) (* 108 (* r00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 216) (* r00 s00 ?x1435 ?x1435 ?x2800)) (* 36 (* r00 r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 9) (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 15 (* ?x1435 ?x1435 ?x2880 ?x2880)) (* (- 108) (* s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 108 (* s00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x2880 ?x2880)) (* 51 (* s00 s00 ?x1435 ?x1435)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880 ?x2880)) (* (- 4) (* ?x1435 ?x1435 ?x2880 ?x2880 ?x2880)) (* 108 (* x00 ?x1435 ?x1435 ?x2880)) (* 16 (* s00 s00 s00 ?x1435 ?x1435)) (* (- 51) (* s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x2880)) (* 216 (* r00 s00 x00 ?x1435 ?x1435)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 432) ?x2568) (* 54 (* r00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 108) (* r00 x00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 432) (* r00 r00 r00 x00 ?x1435 ?x1435)) (* 36 ?x3236) (* (- 216) (* x00 ?x1435 ?x1435 ?x2800)) (* (- 54) (* r00 s00 ?x1435 ?x1435)) (* (- 108) (* ?x1435 ?x1435 ?x2800 ?x2800 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435 ?x2800 ?x2800 ?x2880 ?x2880 ?x2880)) (* (- 36) ?x2703) (* (- 108) (* s00 x00 ?x1435 ?x1435)) (* (- 108) ?x2706))))
 (let ((?x1396 (* x00 x00)))
 (let ((?x1397 (* 108 ?x1396)))
 (let ((?x2219 (* r00 s)))
 (let ((?x2220 (* 54 ?x2219)))
 (let ((?x1728 (* (- 9) s)))
 (let ((?x2908 (* r00 r00 s00)))
 (let ((?x1093 (* (- 36) ?x2908)))
 (let ((?x137 (* 9 s00)))
 (let ((?x641 (* s00 s00)))
 (let ((?x1271 (* 51 ?x641)))
 (let ((?x3890 (* r00 r00 s)))
 (let ((?x3889 (* 36 ?x3890)))
 (let ((?x1234 (* s00 s00 s00)))
 (let ((?x1235 (* 16 ?x1234)))
 (let ((?x3546 (* 36 (* r00 r00 s s))))
 (let ((?x855 (* s00 x00)))
 (let ((?x1191 (* (- 108) ?x855)))
 (let ((?x3044 (* 432 (* r00 r00 r00 x))))
 (let ((?x2163 (* 216 (* r00 r00 r00 s00))))
 (let ((?x3393 (* s00 x)))
 (let ((?x3394 (* 108 ?x3393)))
 (let ((?x932 (* r00 r00 r00 x00)))
 (let ((?x962 (* (- 432) ?x932)))
 (let ((?x904 (* x x)))
 (let ((?x905 (* 108 ?x904)))
 (let ((?x1442 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x572 (* r00 x00)))
 (let ((?x568 (* 108 ?x572)))
 (let ((?x3909 (* 216 (* r00 s00 x00))))
 (let ((?x3087 (+ ?x3909 ?x568 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x1442 (* (- 4) (* s s s)) ?x905 ?x962 (* (- 12) (* s00 s s)) ?x3394 (* (- 108) (* r00 s00 s00)) ?x2163 (* 108 (* x00 s)) ?x3044 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1191 (* (- 216) (* r00 s00 x)) ?x3546 ?x1235 (* (- 108) (* x s)) ?x3889 ?x1271 (* (- 108) (* r00 x)) ?x137 ?x1093 ?x1728 ?x2220 (* (- 216) (* x00 x)) ?x1397)))
 (let (($x3094 (= ?x3087 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1037 (* (- 9) s00)))
 (let ((?x966 (* (- 15) ?x641)))
 (let ((?x927 (* r00 r00 x00)))
 (let ((?x940 (* (- 36) ?x927)))
 (let ((?x856 (* 6 ?x855)))
 (let ((?x595 (* s s)))
 (let ((?x619 (* 3 ?x595)))
 (let ((?x601 (* (- 54) ?x572)))
 (let ((?x744 (+ (* (- 24) (* s r)) ?x601 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x619 (* 54 (* x r)) (* (- 6) ?x3393) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x856 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3890) ?x940 ?x966 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1037 (* 36 ?x2908) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2219) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x428 (* (- 3) s00)))
 (let ((?x654 (* (- 4) ?x641)))
 (let ((?x596 (* 2 ?x595)))
 (let ((?x586 (* (- 18) ?x572)))
 (let ((?x4336 (+ (* (- 9) (* s r)) ?x586 (* 9 (* r00 s00)) ?x596 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3890) ?x654 (* 18 (* r00 x)) ?x428 (* 6 ?x2908) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2219) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2594 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x428 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2775 (= (+ s00 ?x330 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2498 (and $x2775 (= ?x2594 0) (= ?x4336 0) (= ?x744 0) $x3094 (not (= ?x1626 0)))))
 (let ((?x217 (- x s)))
 (let ((?x216 (+ s ?x215 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x307 (* 36 ?x213 ?x213 r00 r00 ?x216 ?x216 ?x216 s00 s00 ?x217 ?x217)))
 (let ((?x257 (* 216 ?x213 ?x213 r00 r00 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217)))
 (let ((?x254 (* 432 ?x213 ?x213 r00 r00 r00 ?x216 ?x216 ?x216 ?x217 ?x217 x00)))
 (let ((?x219 (+ (* (- 36) ?x213 ?x213 r00 r00 s00 s00) (* 12 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x226 (- (- ?x219 (* 108 ?x213 ?x213 ?x216 ?x216 ?x216 ?x217 ?x217 x00 x00)) (* 66 ?x213 ?x213 ?x216 s00))))
 (let ((?x228 (- (- ?x226 (* 54 ?x213 ?x213 r00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 216 ?x213 ?x213 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217 x00))))
 (let ((?x236 (+ (- ?x228 (* 108 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 x00)) (* 108 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 108 ?x213 ?x213 ?x217 ?x217) (* 9 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217) (* 216 ?x213 ?x213 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 x00) (* 108 ?x213 ?x213 r00 ?x216 s00) (* 108 ?x213 ?x213 x00 x00))))
 (let ((?x240 (- (- ?x236 (* 9 ?x213 ?x213 ?x216)) (* 108 ?x213 ?x213 ?x216 ?x217))))
 (let ((?x244 (+ ?x240 (* 216 ?x213 ?x213 r00 r00 r00 s00) (* 9 ?x213 ?x213 s00) (* 54 ?x213 ?x213 r00 ?x216))))
 (let ((?x248 (- (- ?x244 (* 108 ?x213 ?x213 r00 s00 s00)) (* 15 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x251 (+ ?x248 (* 66 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 s00 ?x217 ?x217) (* 108 ?x213 ?x213 r00 x00))))
 (let ((?x259 (- (+ (- ?x251 (* 108 ?x213 ?x213 r00 ?x217)) ?x254) (* 216 ?x213 ?x213 r00 r00 r00 ?x216))))
 (let ((?x264 (+ (- (- ?x259 ?x257) (* 12 ?x213 ?x213 ?x216 ?x216 s00)) (* 432 ?x213 ?x213 r00 r00 r00 ?x217) (* 216 ?x213 ?x213 r00 r00 r00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x271 (+ (- ?x264 (* 36 ?x213 ?x213 r00 r00 s00)) (* 108 ?x213 ?x213 r00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 4 ?x213 ?x213 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217) (* 108 ?x213 ?x213 s00 ?x217) (* 108 ?x213 ?x213 r00 ?x216 ?x216 ?x216 s00 s00 ?x217 ?x217))))
 (let ((?x275 (+ (- ?x271 (* 216 ?x213 ?x213 r00 s00 ?x217)) (* 36 ?x213 ?x213 r00 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x279 (+ (- ?x275 (* 9 ?x213 ?x213 ?x216 ?x216 ?x216 s00 ?x217 ?x217)) (* 15 ?x213 ?x213 ?x216 ?x216))))
 (let ((?x285 (+ (- ?x279 (* 108 ?x213 ?x213 ?x216 ?x216 ?x216 s00 ?x217 ?x217 ?x217)) (* 108 ?x213 ?x213 ?x216 ?x216 ?x216 s00 ?x217 ?x217 x00) (* 36 ?x213 ?x213 r00 r00 ?x216 ?x216) (* 51 ?x213 ?x213 s00 s00))))
 (let ((?x288 (- ?x285 (* 36 ?x213 ?x213 r00 r00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x292 (+ (- ?x288 (* 4 ?x213 ?x213 ?x216 ?x216 ?x216)) (* 108 ?x213 ?x213 ?x216 x00) (* 16 ?x213 ?x213 s00 s00 s00))))
 (let ((?x298 (+ (- ?x292 (* 51 ?x213 ?x213 ?x216 ?x216 ?x216 s00 s00 ?x217 ?x217)) (* 36 ?x213 ?x213 r00 r00 ?x216) (* 216 ?x213 ?x213 r00 s00 x00) (* 216 ?x213 ?x213 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217 ?x217))))
 (let ((?x300 (- ?x298 (* 432 ?x213 ?x213 r00 r00 r00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217))))
 (let ((?x305 (- (+ ?x300 (* 54 ?x213 ?x213 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217)) (* 108 ?x213 ?x213 r00 ?x216 ?x216 ?x216 ?x217 ?x217 x00))))
 (let ((?x316 (- (+ (- ?x305 (* 432 ?x213 ?x213 r00 r00 r00 x00)) ?x307) (* 216 ?x213 ?x213 ?x217 x00))))
 (let ((?x318 (- (- ?x316 (* 54 ?x213 ?x213 r00 s00)) (* 108 ?x213 ?x213 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x319 (- ?x318 (* 16 ?x213 ?x213 ?x216 ?x216 ?x216 s00 s00 s00 ?x217 ?x217))))
 (let ((?x320 (- ?x319 (* 36 ?x213 ?x213 r00 r00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x322 (- (- ?x320 (* 108 ?x213 ?x213 s00 x00)) (* 108 ?x213 ?x213 r00 ?x216 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x326 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x322 0))))))
 (rewrite (= $x326 $x2498))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x328 (asserted $x327)))
 (let ((@x1615 (mp (mp @x328 (quant-intro (proof-bind ?x2955) (= $x327 $x2239)) $x2239) (rewrite (= $x2239 $x2239)) $x2239)))
 (let ((@x848 (mp (mp @x1615 (quant-intro (proof-bind ?x4115) (= $x2239 $x4313)) $x4313) (quant-intro (proof-bind ?x5116) (= $x4313 $x5114)) $x5114)))
 (let ((@x2526 (mp (mp~ @x848 (sk (~ $x5114 $x4726)) $x4726) (rewrite (= $x4726 $x1495)) $x1495)))
 (let ((@x347 (and-elim @x2526 $x851)))
 (let ((@x4100 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x851) $x672)) @x347 $x672)))
 (let (($x2604 (>= ?x1984 0)))
 (let ((@x350 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x851) $x2604)) @x347 $x2604)))
 (let (($x513 (<= ?x1936 0)))
 (let ((@x2523 (and-elim @x2526 $x3068)))
 (let ((@x1404 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3068) $x513)) @x2523 $x513)))
 (let (($x511 (>= ?x1936 0)))
 (let ((@x3560 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3068) $x511)) @x2523 $x511)))
 (let (($x2637 (<= ?x4380 0)))
 (let ((@x3902 (and-elim @x2526 $x4384)))
 (let ((@x2667 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4384) $x2637)) @x3902 $x2637)))
 (let (($x2238 (>= ?x4380 0)))
 (let ((@x466 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4384) $x2238)) @x3902 $x2238)))
 (let (($x2635 (<= ?x2651 0)))
 (let ((@x343 (and-elim @x2526 $x2712)))
 (let ((@x1018 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2712) $x2635)) @x343 $x2635)))
 (let (($x2081 (>= ?x2651 0)))
 (let ((@x1608 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2712) $x2081)) @x343 $x2081)))
 (let (($x2237 (<= ?x354 0)))
 (let ((@x345 (and-elim @x2526 $x355)))
 (let ((@x528 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x355) $x2237)) @x345 $x2237)))
 (let (($x2630 (>= ?x354 0)))
 (let ((@x531 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x355) $x2630)) @x345 $x2630)))
 (let (($x2750 (not (<= ?x2350 108))))
 (let (($x509 (>= ?x2350 108)))
 (let ((@x937 ((_ th-lemma arith) (hypothesis (not $x509)) @x3560 @x1404 @x531 @x528 @x466 @x2667 @x531 @x528 @x466 @x2667 @x350 @x4100 @x3560 @x1404 @x1608 @x1018 @x466 @x2667 @x3560 @x1404 @x350 @x4100 false)))
 (let ((@x4182 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2353 $x2750 (not $x509))) (and-elim @x2526 $x2533) (or $x2750 (not $x509)))))
 ((_ th-lemma arith) (unit-resolution @x4182 (lemma @x937 $x509) $x2750) @x3560 @x1404 @x531 @x528 @x466 @x2667 @x531 @x528 @x466 @x2667 @x350 @x4100 @x3560 @x1404 @x1608 @x1018 @x466 @x2667 @x3560 @x1404 @x350 @x4100 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        47
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           2
 :arith-grobner             2
 :arith-max-min             1240
 :arith-nonlinear-bounds    40
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              6
 :arith-row-summations      13
 :arith-tableau-max-columns 244
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.91
 :memory                    3.67
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                9324058
 :num-checks                1
 :propagations              12
 :rlimit-count              91439
 :time                      0.07
 :total-time                0.09)
