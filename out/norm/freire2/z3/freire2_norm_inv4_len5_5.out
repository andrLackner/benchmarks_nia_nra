unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1244 (* (- 1) s!1)))
 (let ((?x438 (* r00 r00)))
 (let ((?x4124 (* (- 3) ?x438)))
 (let ((?x4246 (+ s00 ?x4124 (* 3 (* r!2 r!2)) ?x1244)))
 (let (($x3022 (<= ?x4246 0)))
 (let (($x4249 (= ?x4246 0)))
 (let ((?x1245 (* 6 r!2)))
 (let ((?x3137 (+ 3 s!1 ?x1245)))
 (let ((?x1865 (+ x!0 ?x1244)))
 (let ((?x2489 (+ 1 r!2)))
 (let ((?x3468 (+ (* 72 (* r00 r00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137)) (* (- 54) (* r00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137)) (* (- 216) (* s00 r00 r00 x!0 s!1)) (* (- 144) (* s00 r00 r00 x!0 s!1 s!1 r!2)) (* (- 72) (* s00 r00 r00 x!0 s!1 s!1)) (* (- 54) (* s00 s!1 s!1 r!2 r!2 r!2)) (* (- 18) (* ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137)) (* 24 (* r00 s00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* (- 90) (* s00 s00 s!1 s!1 r!2 r!2 r!2)) (* (- 8) (* r00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137 ?x3137)) (* (- 24) (* r00 s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137)) (* (- 4) (* s00 s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137)) (* 18 (* s00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* 54 (* r00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x1865 ?x3137)) (* (- 36) (* r00 ?x2489 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137)) (* (- 810) (* r00 x00 s!1 s!1 r!2 r!2)) (* (- 72) (* r00 r00 x00 x!0 x!0 s!1 r!2)) (* (- 576) (* s00 r00 x!0 s!1 r!2)) (* 216 (* r00 r00 x00 x!0 s!1)) (* (- 720) (* s00 r00 x!0 s!1 r!2 r!2)) (* 216 (* s00 x!0 s!1 r!2)) (* 9 (* s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137)) (* (- 24) (* s00 s00 r00 s!1 s!1 r!2)) (* (- 6) (* s00 s00 r00 s!1 s!1)) (* 24 (* s00 r00 x!0 x!0 s!1)) (* 24 (* r00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 162) (* r00 x00 s!1 s!1)) (* (- 648) (* r00 x00 s!1 s!1 r!2)) (* 36 (* s00 r00 r00 x!0 x!0 s!1 r!2 r!2)) (* 2 (* ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 432) (* s00 r00 r00 x!0 s!1 r!2 r!2 r!2)) (* (- 864) (* s00 r00 r00 x!0 s!1 r!2)) (* 18 (* s00 x!0 s!1 s!1 r!2 r!2)) (* (- 4) (* r00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137)) (* 4 (* r00 s00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137)) (* (- 54) (* r00 x00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* (- 36) (* r00 r00 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137)) (* 288 (* s00 r00 s!1 s!1 r!2)) (* 360 (* s00 r00 s!1 s!1 r!2 r!2)) (* 144 (* s00 r00 s!1 s!1 r!2 r!2 r!2)) (* (- 180) (* s00 x00 x!0 s!1 r!2 r!2)) (* 8 (* s00 s00 r00 x!0 s!1 s!1 r!2)) (* 72 (* s00 r00 x!0 x!0)) (* (- 12) (* ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137)) (* 12 (* s00 s00 r00 x!0 s!1)) (* (- 30) (* s00 s00 r00 x!0 x!0 r!2 r!2)) (* 114 (* x00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 144) (* s00 r00 x!0 s!1)) (* 24 (* s00 r00 s!1 s!1 s!1 r!2 r!2)) (* (- 27) (* s00 s!1 s!1)) (* (- 288) (* s00 r00 x!0 s!1 r!2 r!2 r!2)) (* (- 54) (* r00 x00 s!1 s!1 s!1)) (* (- 6) (* x00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137 ?x3137)) (* 1080 (* r00 r00 x00 x!0 s!1 r!2 r!2)) (* 48 (* s00 r00 x!0 x!0 s!1 r!2)) (* (- 810) (* r00 x00 x!0 x!0 r!2 r!2)) (* 144 (* s00 r00 x!0 x!0 r!2 r!2 r!2)) (* (- 15) (* s00 s00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* 15 (* s00 s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137)) (* (- 18) (* s00 x!0 x!0 s!1 r!2)) (* 36 (* r00 r00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 36) (* r00 x00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* (- 30) (* s00 s00 s!1 s!1 s!1 r!2)) (* 60 (* s00 s00 x!0 s!1 s!1 r!2)) (* (- 72) (* s00 r00 r00 x!0 s!1 s!1 r!2 r!2)) (* 4 (* r00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137 ?x3137 ?x3137)) (* 30 (* s00 s00 x!0 s!1 s!1)) (* 24 (* s00 r00 s!1 s!1 s!1)) (* 1620 (* r00 x00 x!0 s!1 r!2 r!2)) (* 270 (* s00 x!0 s!1 r!2 r!2)) (* 54 (* ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x1865 ?x3137)) (* (- 648) (* r00 x00 x!0 x!0 r!2)) (* (- 15) (* s00 s00 s!1 s!1 s!1 r!2 r!2)) (* 432 (* r00 r00 x00 x!0 s!1 r!2 r!2 r!2)) (* (- 112) (* ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 15) (* s00 s00 s!1 s!1 s!1)) (* 54 (* r00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* (- 90) (* s00 s00 x!0 x!0 r!2 r!2 r!2)) (* 2 (* r00 s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 135) (* s00 x!0 x!0 r!2 r!2)) (* (- 12) (* s00 x00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 36) (* r00 r00 x00 x!0 x!0 s!1)) (* (- 36) (* r00 r00 x00 s!1 s!1 s!1 r!2 r!2)) (* (- 135) (* s00 s!1 s!1 r!2 r!2)) (* (- 2) (* s00 ?x2489 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 9) (* s00 x!0 x!0 s!1 r!2 r!2)) (* (- 72) (* r00 r00 s00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* 54 (* ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* 180 (* s00 s00 x!0 s!1 r!2 r!2 r!2)) (* 108 (* s00 r00 r00 x!0 x!0)) (* 648 (* r00 x00 x!0 s!1 r!2 r!2 r!2)) (* (- 324) (* r00 x00 x!0 x!0 r!2 r!2 r!2)) (* (- 54) (* r00 x00 s!1 s!1 s!1 r!2 r!2)) (* (- 2) (* r00 s00 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137)) (* 12 (* s00 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137)) (* (- 24) (* s00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137)) (* (- 162) (* r00 x00 x!0 x!0)) (* (- 6) (* s00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x1865 ?x3137)) (* 48 (* r00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137)) (* (- 72) (* r00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 36) (* r00 r00 x00 s!1 s!1 s!1)) (* 216 (* r00 x00 x!0 s!1 s!1 r!2)) (* (- 144) (* s00 x00 x!0 s!1 r!2)) (* 36 (* r00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x1865 ?x3137)) (* (- 54) (* x00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137)) (* 864 (* r00 r00 x00 x!0 s!1 r!2)) (* 36 (* r00 r00 s00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* 4 (* s00 s00 r00 x!0 s!1 s!1 r!2 r!2)) (* 2 (* s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137 ?x3137)) (* 108 (* r00 x00 x!0 s!1 s!1 r!2 r!2)) (* (- 12) (* s00 s00 r00 s!1 s!1 r!2 r!2 r!2)) (* 90 (* s00 x00 s!1 s!1 r!2 r!2)) (* (- 2) (* s00 s00 r00 x!0 x!0 s!1)) (* (- 180) (* s00 s00 x!0 x!0 r!2)) (* 24 (* s00 s00 r00 x!0 s!1 r!2 r!2 r!2)) (* 36 (* r00 r00 x00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137)) (* (- 4) (* ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137 ?x3137)) (* (- 6) (* ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137 ?x3137)) (* 8 (* s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137)) (* (- 2) (* s00 s00 r00 s!1 s!1 s!1 r!2 r!2)) (* 18 (* s00 x00 x!0 x!0)) (* (- 72) (* s00 x00 x!0 s!1 r!2 r!2 r!2)) (* (- 24) (* s00 x00 x!0 s!1 s!1 r!2)) (* (- 24) (* ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137 ?x3137)) (* (- 1080) (* s00 r00 r00 x!0 s!1 r!2 r!2)) (* (- 104) (* r00 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137 ?x3137)) (* 45 (* ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137)) (* (- 36) (* r00 r00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137 ?x3137)) (* 18 (* s00 x!0 s!1 s!1)) (* (- 72) (* r00 r00 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 4) (* s00 s00 r00 s!1 s!1 s!1 r!2)) (* (- 2) (* r00 s00 s00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* 72 (* s00 r00 r00 x!0 x!0 s!1 r!2)) (* 24 (* s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* 6 (* ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x1865 ?x3137 ?x3137)) (* (- 2) (* r00 s00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137 ?x3137)) (* 324 (* r00 x00 x!0 s!1)) (* (- 45) (* s00 s00 s!1 s!1)) (* 60 (* s00 s00 r00 x!0 s!1 r!2 r!2)) (* (- 72) (* r00 r00 x00 s!1 s!1 s!1 r!2)) (* (- 30) (* s00 s00 r00 s!1 s!1 r!2 r!2)) (* (- 2) (* ?x2489 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137)) (* (- 24) (* ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137)) (* (- 54) (* s00 x!0 x!0 r!2 r!2 r!2)) (* 48 (* s00 s00 r00 x!0 s!1 r!2)) (* 4 (* s00 s00 r00 x!0 s!1 s!1)) (* 36 (* s00 r00 r00 s!1 s!1 s!1 r!2 r!2)) (* 72 (* s00 x00 s!1 s!1 r!2)) (* 36 (* r00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* (- 60) (* s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* 12 (* s00 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 30) (* s00 s00 x!0 x!0 s!1 r!2)) (* (- 12) (* s00 x00 x!0 s!1 s!1 r!2 r!2)) (* 432 (* s00 r00 r00 x!0 x!0 r!2)) (* (- 4) (* s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137)) (* 540 (* s00 r00 r00 x!0 x!0 r!2 r!2)) (* (- 540) (* r00 r00 x00 s!1 s!1 r!2 r!2)) (* (- 540) (* r00 r00 x00 x!0 x!0 r!2 r!2)) (* (- 108) (* r00 x00 x!0 x!0 s!1 r!2)) (* 216 (* s00 r00 r00 x!0 x!0 r!2 r!2 r!2)) (* 360 (* s00 s00 x!0 s!1 r!2)) (* (- 48) (* s00 r00 x!0 s!1 s!1)) (* (- 15) (* s00 s00 x!0 x!0 s!1 r!2 r!2)) (* 36 (* s00 x!0 s!1 s!1 r!2)) (* 36 (* s00 r00 r00 x!0 x!0 s!1)) (* 6 (* s00 x00 s!1 s!1 s!1 r!2 r!2)) (* 6 (* s00 x00 s!1 s!1 s!1)) (* 12 (* s00 x00 s!1 s!1 s!1 r!2)) (* 36 (* s00 x00 s!1 s!1 r!2 r!2 r!2)) (* 4 (* r00 s00 s00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 2) (* s00 s00 r00 s!1 s!1 s!1)) (* (- 27) (* s00 x!0 x!0)) (* 24 (* ?x2489 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 18) (* s00 s!1 s!1 s!1 r!2)) (* 36 (* s00 r00 r00 s!1 s!1 s!1)) (* 72 (* s00 r00 r00 s!1 s!1 s!1 r!2)) (* 540 (* s00 r00 r00 s!1 s!1 r!2 r!2)) (* (- 24) (* r00 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137)) (* 144 (* r00 r00 x00 x!0 s!1 s!1 r!2)) (* 30 (* s00 s00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* 450 (* s00 s00 x!0 s!1 r!2 r!2)) (* 8 (* s00 s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* 24 (* s00 r00 x!0 x!0 s!1 r!2 r!2)) (* (- 9) (* s00 x!0 x!0 s!1)) (* 108 (* s00 x!0 s!1 r!2 r!2 r!2)) (* (- 324) (* r00 x00 s!1 s!1 r!2 r!2 r!2)) (* (- 216) (* r00 r00 x00 x!0 x!0 r!2 r!2 r!2)) (* 36 (* r00 r00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x1865 ?x3137)) (* (- 6) (* s00 s00 r00 x!0 x!0)) (* (- 108) (* r00 r00 x00 x!0 x!0)) (* 4 (* s00 s00 ?x2489 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137)) (* 72 (* s00 r00 s!1 s!1)) (* 6 (* s00 x00 x!0 x!0 s!1 r!2 r!2)) (* 216 (* s00 r00 r00 s!1 s!1 r!2 r!2 r!2)) (* 24 (* s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137)) (* (- 4) (* s00 s00 r00 x!0 x!0 s!1 r!2)) (* (- 2) (* s00 s00 r00 x!0 x!0 s!1 r!2 r!2)) (* (- 216) (* r00 r00 x00 s!1 s!1 r!2 r!2 r!2)) (* 108 (* r00 x00 x!0 s!1 s!1)) (* 3 (* ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 15) (* s00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* 54 (* x00 ?x2489 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137)) (* (- 48) (* r00 s00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* 72 (* r00 r00 x00 x!0 s!1 s!1 r!2 r!2)) (* (- 24) (* s00 s00 r00 x!0 x!0 r!2)) (* 3 (* ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137 ?x3137 ?x3137)) (* 1296 (* r00 x00 x!0 s!1 r!2)) (* (- 54) (* r00 x00 x!0 x!0 s!1 r!2 r!2)) (* 36 (* s00 x00 x!0 x!0 r!2 r!2 r!2)) (* (- 54) (* r00 x00 x!0 x!0 s!1)) (* 90 (* s00 x00 x!0 x!0 r!2 r!2)) (* 12 (* s00 x00 x!0 x!0 s!1 r!2)) (* 6 (* s00 x00 x!0 x!0 s!1)) (* (- 108) (* r00 r00 x00 s!1 s!1)) (* (- 9) (* s00 s!1 s!1 s!1 r!2 r!2)) (* (- 24) (* r00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137 ?x3137)) (* 12 (* x00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137 ?x3137)) (* 72 (* s00 x00 x!0 x!0 r!2)) (* 48 (* s00 r00 s!1 s!1 s!1 r!2)) (* (- 432) (* r00 r00 x00 x!0 x!0 r!2)) (* 360 (* s00 r00 x!0 x!0 r!2 r!2)) (* (- 108) (* s00 s!1 s!1 r!2)) (* (- 108) (* s00 x!0 x!0 r!2)) (* 36 (* r00 x00 ?x2489 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137)) (* 18 (* s00 x00 s!1 s!1)) (* (- 180) (* s00 s00 s!1 s!1 r!2)) (* (- 432) (* r00 r00 x00 s!1 s!1 r!2)) (* (- 36) (* r00 r00 x00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* (- 12) (* s00 x00 x!0 s!1 s!1)) (* (- 36) (* r00 x00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137)) (* 54 (* r00 x00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137)) (* 72 (* r00 x00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* (- 225) (* s00 s00 x!0 x!0 r!2 r!2)) (* 72 (* r00 r00 x00 x!0 s!1 s!1)) (* (- 24) (* s00 ?x2489 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137)) (* (- 48) (* s00 r00 x!0 s!1 s!1 r!2 r!2)) (* (- 15) (* s00 s00 x!0 x!0 s!1)) (* (- 6) (* s00 x00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137)) (* (- 36) (* r00 r00 s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137)) (* 108 (* r00 x00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* 15 (* ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137 ?x3137)) (* (- 6) (* x00 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137)) (* (- 54) (* ?x2489 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137)) (* 72 (* r00 r00 x00 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* 6 (* s00 x00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* (- 96) (* s00 r00 x!0 s!1 s!1 r!2)) (* (- 225) (* s00 s00 s!1 s!1 r!2 r!2)) (* (- 36) (* r00 r00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137)) (* 288 (* s00 r00 x!0 x!0 r!2)) (* (- 4) (* s00 s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* (- 9) (* ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137 ?x3137)) (* 12 (* s00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137 ?x3137)) (* 36 (* r00 r00 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* 9 (* ?x2489 ?x2489 ?x1865 ?x1865 ?x3137 ?x3137)) (* 54 (* s00 x!0 s!1)) (* (- 9) (* s00 s!1 s!1 s!1)) (* 432 (* s00 r00 r00 s!1 s!1 r!2)) (* (- 36) (* s00 x00 x!0 s!1)) (* (- 12) (* s00 s00 r00 x!0 x!0 r!2 r!2 r!2)) (* 108 (* s00 r00 r00 s!1 s!1)) (* (- 54) (* x00 ?x2489 ?x2489 ?x2489 ?x1865 ?x1865 ?x1865 ?x3137)) (* 30 (* s00 s00 x!0 s!1 s!1 r!2 r!2)) (* (- 45) (* s00 s00 x!0 x!0)) (* (- 108) (* r00 x00 s!1 s!1 s!1 r!2)) (* 2 (* r00 s00 s00 ?x2489 ?x2489 ?x2489 ?x1865 ?x3137 ?x3137)) (* (- 36) (* r00 r00 x00 x!0 x!0 s!1 r!2 r!2)) (* 90 (* s00 s00 x!0 s!1)))))
 (let (($x3165 (= ?x3468 0)))
 (let (($x3482 (not $x3165)))
 (let ((?x2877 (* (- 9) s!1)))
 (let ((?x3265 (* r00 r00 s!1)))
 (let ((?x2876 (* 36 ?x3265)))
 (let ((?x1483 (* x00 x00)))
 (let ((?x6780 (* 108 ?x1483)))
 (let ((?x1321 (* s00 s00 s00)))
 (let ((?x6584 (* 16 ?x1321)))
 (let ((?x1019 (* r00 r00 r00 x00)))
 (let ((?x1435 (* (- 432) ?x1019)))
 (let ((?x942 (* s00 x00)))
 (let ((?x6496 (* (- 108) ?x942)))
 (let ((?x784 (* s00 r00 r00)))
 (let ((?x2205 (* (- 36) ?x784)))
 (let ((?x728 (* s00 s00)))
 (let ((?x6622 (* 51 ?x728)))
 (let ((?x659 (* r00 x00)))
 (let ((?x4434 (* 108 ?x659)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2733 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x4434 ?x6622 ?x2205 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x6496 ?x1435 (* (- 66) (* s00 s!1)) (* 216 (* s00 r00 r00 r00)) ?x6584 ?x6780 (* (- 12) (* s00 s!1 s!1)) (* 108 (* s00 r00 s!1)) (* 108 (* x00 s!1)) (* (- 108) (* x!0 s!1)) (* 108 (* s00 x!0)) (* 432 (* r00 r00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 216) (* x00 x!0)) ?x2876 (* 108 (* x!0 x!0)) (* (- 108) (* r00 x!0)) ?x2877 (* (- 4) (* s!1 s!1 s!1)) (* 15 (* s!1 s!1)) (* 54 (* r00 s!1)))))
 (let ((?x1014 (* r00 r00 x00)))
 (let ((?x6870 (* 36 ?x1014)))
 (let ((?x3414 (* (- 6) ?x942)))
 (let ((?x2729 (* 15 ?x728)))
 (let ((?x4388 (* 54 ?x659)))
 (let ((?x2870 (+ ?x137 (* (- 24) (* s00 r00)) ?x4388 (* 54 (* x00 r!2)) ?x2729 ?x2205 (* 2 (* s00 s00 r00)) ?x3414 ?x6870 (* (- 12) (* s00 s!1)) (* 36 (* r00 x00 r!2)) (* 2 (* s00 r00 s!1)) (* (- 2) (* s00 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* 6 (* x00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* (- 6) (* x!0 s!1)) (* (- 36) (* r00 r00 x!0)) (* (- 36) (* r00 x!0 r!2)) (* 6 (* s00 x!0)) ?x2876 (* (- 54) (* x!0 r!2)) (* (- 54) (* r00 x!0)) (* 24 (* s!1 r!2)) (* (- 24) (* s00 r!2)) ?x2877 (* (- 3) (* s!1 s!1)) (* 24 (* r00 s!1)))))
 (let (($x2888 (= ?x2870 0)))
 (let ((?x5116 (* (- 3) s!1)))
 (let ((?x4832 (* 4 ?x728)))
 (let ((?x3207 (* 18 ?x659)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2341 (+ ?x44 (* (- 9) (* s00 r00)) ?x3207 (* 18 (* x00 r!2)) ?x4832 (* (- 6) ?x784) (* (- 2) (* s00 s!1)) (* 6 (* s00 r00 r!2)) (* 6 ?x3265) (* (- 18) (* x!0 r!2)) (* (- 18) (* r00 x!0)) (* 9 (* s!1 r!2)) (* (- 9) (* s00 r!2)) ?x5116 (* (- 2) (* s!1 s!1)) (* 9 (* r00 s!1)) (* (- 6) (* r00 s!1 r!2)))))
 (let (($x2287 (= ?x2341 0)))
 (let ((?x5113 (* 3 r!2)))
 (let ((?x3868 (* 6 x!0)))
 (let ((?x606 (* r00 r00 r00)))
 (let ((?x607 (* 12 ?x606)))
 (let ((?x563 (* s00 r00)))
 (let ((?x641 (* (- 6) ?x563)))
 (let ((?x638 (* (- 6) x00)))
 (let ((?x637 (* (- 3) r00)))
 (let ((?x5547 (+ ?x44 ?x637 ?x638 ?x641 ?x607 ?x3868 (* 2 (* s!1 r!2)) (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x5116 ?x5113)))
 (let (($x3722 (= ?x5547 0)))
 (let (($x3027 (and $x4249 $x3722 $x2287 $x2888 (= ?x2733 0) $x3482)))
 (let ((?x1346 (+ 3 ?x1245 s!1)))
 (let ((?x1223 (+ ?x1244 x!0)))
 (let ((?x4206 (+ (* 324 (* r!2 r!2 r!2 x!0 x!0 r00 x00)) (* 54 (* r!2 r!2 s!1 s!1 s!1 r00 x00)) (* (- 2) (* s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346 ?x1346)) (* 2 (* s!1 x!0 x!0 s00 s00 r00)) (* 4 (* r!2 s!1 x!0 x!0 s00 s00 r00)) (* 2 (* r!2 r!2 s!1 x!0 x!0 s00 s00 r00)) (* 324 (* r!2 r!2 r!2 s!1 s!1 r00 x00)) (* (- 48) (* r!2 s!1 x!0 s00 s00 r00)) (* 54 (* r!2 r!2 r!2 x!0 x!0 s00)) (* (- 12) (* s!1 x!0 s00 s00 r00)) (* 24 (* ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346)) (* (- 60) (* r!2 r!2 s!1 x!0 s00 s00 r00)) (* (- 108) (* s!1 s!1 x!0 r00 x00)) (* (- 3) (* ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346 ?x1346)) (* 15 (* s00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 72) (* r!2 r!2 s!1 s!1 x!0 r00 r00 x00)) (* (- 24) (* s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346)) (* 216 (* r!2 r!2 r!2 x!0 x!0 r00 r00 x00)) (* 108 (* x!0 x!0 r00 r00 x00)) (* 6 (* x!0 x!0 s00 s00 r00)) (* 54 (* s!1 s!1 s!1 r00 x00)) (* 24 (* r!2 x!0 x!0 s00 s00 r00)) (* 27 (* s!1 s!1 s00)) (* 30 (* r!2 r!2 x!0 x!0 s00 s00 r00)) (* (- 108) (* r!2 r!2 s!1 s!1 x!0 r00 x00)) (* (- 216) (* r!2 s!1 s!1 x!0 r00 x00)) (* 12 (* r!2 r!2 r!2 s!1 s!1 s00 s00 r00)) (* (- 4) (* r!2 r!2 s!1 s!1 x!0 s00 s00 r00)) (* 180 (* r!2 x!0 x!0 s00 s00)) (* (- 24) (* r!2 r!2 r!2 s!1 x!0 s00 s00 r00)) (* (- 114) (* x00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* (- 36) (* r00 r00 s00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* 4 (* s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346)) (* 12 (* r!2 r!2 r!2 x!0 x!0 s00 s00 r00)) (* 2 (* s!1 s!1 s!1 s00 s00 r00)) (* 4 (* r!2 s!1 s!1 s!1 s00 s00 r00)) (* 2 (* r!2 r!2 s!1 s!1 s!1 s00 s00 r00)) (* (- 4) (* s!1 s!1 x!0 s00 s00 r00)) (* 54 (* r00 x00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 8) (* r!2 s!1 s!1 x!0 s00 s00 r00)) (* 30 (* r!2 r!2 s!1 s!1 s00 s00 r00)) (* 2 (* ?x2489 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346)) (* 2 (* r00 s00 s00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* 24 (* r00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346)) (* (- 30) (* s00 s00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* 72 (* r!2 s!1 s!1 s!1 r00 r00 x00)) (* (- 144) (* r!2 s!1 s!1 x!0 r00 r00 x00)) (* (- 36) (* r00 r00 x00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346)) (* 36 (* s!1 s!1 s!1 r00 r00 x00)) (* (- 360) (* r!2 s!1 x!0 s00 s00)) (* (- 2) (* r00 s00 s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346)) (* (- 18) (* s!1 s!1 s00 x00)) (* 36 (* s!1 x!0 s00 x00)) (* 15 (* s00 s00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 48) (* r00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346)) (* (- 12) (* s00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346 ?x1346)) (* 225 (* r!2 r!2 s!1 s!1 s00 s00)) (* 36 (* r00 r00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346)) (* (- 6) (* s00 x00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 12) (* s00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346)) (* 24 (* r00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346 ?x1346)) (* 540 (* r!2 r!2 x!0 x!0 r00 r00 x00)) (* (- 18) (* x!0 x!0 s00 x00)) (* (- 450) (* r!2 r!2 s!1 x!0 s00 s00)) (* 54 (* s!1 x!0 x!0 r00 x00)) (* 108 (* r!2 s!1 x!0 x!0 r00 x00)) (* 54 (* r!2 r!2 s!1 x!0 x!0 r00 x00)) (* (- 72) (* r!2 x!0 x!0 s00 x00)) (* (- 90) (* r!2 r!2 x!0 x!0 s00 x00)) (* (- 36) (* r!2 r!2 r!2 x!0 x!0 s00 x00)) (* (- 12) (* r!2 s!1 x!0 x!0 s00 x00)) (* (- 6) (* s!1 x!0 x!0 s00 x00)) (* 108 (* s!1 s!1 r00 r00 x00)) (* (- 6) (* r!2 r!2 s!1 x!0 x!0 s00 x00)) (* (- 4) (* s00 s00 ?x2489 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346)) (* (- 90) (* r!2 r!2 s!1 s!1 s00 x00)) (* (- 36) (* r!2 r!2 r!2 s!1 s!1 s00 x00)) (* (- 6) (* s!1 s!1 s!1 s00 x00)) (* (- 12) (* r!2 s!1 s!1 s!1 s00 x00)) (* (- 6) (* r!2 r!2 s!1 s!1 s!1 s00 x00)) (* (- 2) (* ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346 ?x1346 ?x1346)) (* 180 (* r!2 r!2 s!1 x!0 s00 x00)) (* 4 (* ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346 ?x1346)) (* 144 (* r!2 s!1 x!0 s00 x00)) (* (- 8) (* s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346)) (* 72 (* r!2 r!2 r!2 s!1 x!0 s00 x00)) (* 432 (* r!2 s!1 s!1 r00 r00 x00)) (* (- 36) (* r00 x00 ?x2489 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346)) (* 12 (* s!1 s!1 x!0 s00 x00)) (* 54 (* x00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346)) (* 24 (* r!2 s!1 s!1 x!0 s00 x00)) (* 12 (* ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346)) (* (- 36) (* r00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1223 ?x1346)) (* 36 (* r00 r00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346)) (* 12 (* r!2 r!2 s!1 s!1 x!0 s00 x00)) (* 72 (* r00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346 ?x1346)) (* 2 (* r00 s00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346)) (* 2 (* r00 s00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346 ?x1346)) (* (- 24) (* ?x2489 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* 36 (* r00 r00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346 ?x1346)) (* 12 (* s00 x00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* 72 (* r00 r00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346 ?x1346)) (* (- 8) (* s00 s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* (- 108) (* r00 x00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* (- 15) (* ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346 ?x1346)) (* 60 (* s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* 2 (* s00 ?x2489 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* 48 (* r00 s00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* (- 45) (* ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346)) (* (- 4) (* r00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346 ?x1346 ?x1346)) (* (- 2) (* r00 s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* (- 36) (* r00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 72) (* r!2 s!1 s!1 s00 x00)) (* 104 (* r00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346 ?x1346)) (* 6 (* s00 x00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346)) (* 36 (* r00 r00 s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346)) (* 9 (* ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* (- 9) (* ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346)) (* (- 6) (* ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1223 ?x1346 ?x1346)) (* 540 (* r!2 r!2 s!1 s!1 r00 r00 x00)) (* (- 54) (* s!1 x!0 s00)) (* 27 (* x!0 x!0 s00)) (* 135 (* r!2 r!2 x!0 x!0 s00)) (* (- 18) (* s!1 s!1 x!0 s00)) (* 18 (* r!2 s!1 s!1 s!1 s00)) (* 9 (* s!1 s!1 s!1 s00)) (* 4 (* s00 s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 72) (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* (- 36) (* s!1 x!0 x!0 s00 r00 r00)) (* (- 36) (* r!2 s!1 s!1 x!0 s00)) (* (- 216) (* r!2 r!2 r!2 x!0 x!0 s00 r00 r00)) (* (- 540) (* r!2 r!2 x!0 x!0 s00 r00 r00)) (* (- 432) (* r!2 x!0 x!0 s00 r00 r00)) (* (- 108) (* s!1 s!1 s00 r00 r00)) (* (- 432) (* r!2 s!1 s!1 s00 r00 r00)) (* (- 540) (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* (- 36) (* s!1 s!1 s!1 s00 r00 r00)) (* (- 72) (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* (- 216) (* r!2 r!2 r!2 s!1 s!1 s00 r00 r00)) (* (- 36) (* r!2 r!2 s!1 s!1 s!1 s00 r00 r00)) (* 24 (* ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346 ?x1346)) (* 1080 (* r!2 r!2 s!1 x!0 s00 r00 r00)) (* 54 (* r00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346)) (* (- 72) (* r00 r00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346)) (* 216 (* s!1 x!0 s00 r00 r00)) (* 864 (* r!2 s!1 x!0 s00 r00 r00)) (* 432 (* r!2 r!2 r!2 s!1 x!0 s00 r00 r00)) (* 72 (* s!1 s!1 x!0 s00 r00 r00)) (* 144 (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 36) (* r!2 r!2 s!1 x!0 x!0 s00 r00 r00)) (* 8 (* r00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346 ?x1346)) (* 4 (* s00 s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346)) (* 72 (* r!2 r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 54) (* ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 108) (* x!0 x!0 s00 r00 r00)) (* (- 216) (* s!1 x!0 r00 r00 x00)) (* 225 (* r!2 r!2 x!0 x!0 s00 s00)) (* 90 (* r!2 r!2 r!2 s!1 s!1 s00 s00)) (* (- 180) (* r!2 r!2 r!2 s!1 x!0 s00 s00)) (* (- 24) (* s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 108) (* r!2 r!2 r!2 s!1 x!0 s00)) (* 90 (* r!2 r!2 r!2 x!0 x!0 s00 s00)) (* 15 (* s!1 s!1 s!1 s00 s00)) (* 30 (* r!2 s!1 s!1 s!1 s00 s00)) (* (- 270) (* r!2 r!2 s!1 x!0 s00)) (* 15 (* r!2 r!2 s!1 s!1 s!1 s00 s00)) (* (- 30) (* s!1 s!1 x!0 s00 s00)) (* (- 60) (* r!2 s!1 s!1 x!0 s00 s00)) (* (- 30) (* r!2 r!2 s!1 s!1 x!0 s00 s00)) (* 36 (* r00 ?x2489 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346)) (* 6 (* ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346 ?x1346)) (* 15 (* s!1 x!0 x!0 s00 s00)) (* 30 (* r!2 s!1 x!0 x!0 s00 s00)) (* 15 (* r!2 r!2 s!1 x!0 x!0 s00 s00)) (* (- 12) (* s00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346 ?x1346)) (* 54 (* x00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 24) (* r00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* 162 (* s!1 s!1 r00 x00)) (* 112 (* ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346 ?x1346)) (* 648 (* r!2 s!1 s!1 r00 x00)) (* (- 72) (* r00 r00 x00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* 54 (* ?x2489 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346)) (* (- 36) (* r00 r00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* 135 (* r!2 r!2 s!1 s!1 s00)) (* (- 18) (* s00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* (- 54) (* r00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 54) (* r00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* 810 (* r!2 r!2 s!1 s!1 r00 x00)) (* (- 324) (* s!1 x!0 r00 x00)) (* (- 1296) (* r!2 s!1 x!0 r00 x00)) (* (- 1620) (* r!2 r!2 s!1 x!0 r00 x00)) (* 24 (* s00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346)) (* 162 (* x!0 x!0 r00 x00)) (* 648 (* r!2 x!0 x!0 r00 x00)) (* (- 648) (* r!2 r!2 r!2 s!1 x!0 r00 x00)) (* 45 (* x!0 x!0 s00 s00)) (* 108 (* r!2 s!1 s!1 s!1 r00 x00)) (* 36 (* r!2 r!2 s!1 x!0 x!0 r00 r00 x00)) (* (- 90) (* s!1 x!0 s00 s00)) (* 72 (* r!2 s!1 x!0 x!0 r00 r00 x00)) (* 45 (* s!1 s!1 s00 s00)) (* 36 (* s!1 x!0 x!0 r00 r00 x00)) (* 36 (* r!2 r!2 s!1 s!1 s!1 r00 r00 x00)) (* (- 864) (* r!2 s!1 x!0 r00 r00 x00)) (* 6 (* x00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346 ?x1346)) (* 36 (* r00 x00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* 54 (* r!2 r!2 r!2 s!1 s!1 s00)) (* (- 18) (* r!2 r!2 s!1 s!1 x!0 s00)) (* (- 72) (* s!1 s!1 x!0 r00 r00 x00)) (* (- 24) (* r00 s00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* 18 (* ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346)) (* (- 54) (* r00 x00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346)) (* 36 (* r00 x00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346)) (* (- 9) (* s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346)) (* 24 (* r!2 s!1 s!1 s00 s00 r00)) (* 6 (* x00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1346 ?x1346)) (* (- 432) (* r!2 r!2 r!2 s!1 x!0 r00 r00 x00)) (* 6 (* s!1 s!1 s00 s00 r00)) (* (- 72) (* r00 x00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* (- 15) (* s00 s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346)) (* 108 (* r!2 s!1 s!1 s00)) (* (- 4) (* r00 s00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346)) (* 4 (* r00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346)) (* 432 (* r!2 x!0 x!0 r00 r00 x00)) (* 810 (* r!2 r!2 x!0 x!0 r00 x00)) (* 9 (* s!1 x!0 x!0 s00)) (* 9 (* r!2 r!2 s!1 x!0 x!0 s00)) (* 72 (* r00 r00 s00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* 18 (* r!2 s!1 x!0 x!0 s00)) (* (- 216) (* r!2 s!1 x!0 s00)) (* 720 (* r!2 r!2 s!1 x!0 s00 r00)) (* 576 (* r!2 s!1 x!0 s00 r00)) (* 288 (* r!2 r!2 r!2 s!1 x!0 s00 r00)) (* 144 (* s!1 x!0 s00 r00)) (* (- 24) (* r!2 r!2 s!1 s!1 s!1 s00 r00)) (* (- 48) (* r!2 s!1 s!1 s!1 s00 r00)) (* 108 (* r!2 x!0 x!0 s00)) (* (- 24) (* s!1 s!1 s!1 s00 r00)) (* (- 144) (* r!2 r!2 r!2 s!1 s!1 s00 r00)) (* (- 360) (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 288) (* r!2 s!1 s!1 s00 r00)) (* (- 48) (* r!2 s!1 x!0 x!0 s00 r00)) (* (- 1080) (* r!2 r!2 s!1 x!0 r00 r00 x00)) (* (- 144) (* r!2 r!2 r!2 x!0 x!0 s00 r00)) (* (- 24) (* s!1 x!0 x!0 s00 r00)) (* 180 (* r!2 s!1 s!1 s00 s00)) (* (- 360) (* r!2 r!2 x!0 x!0 s00 r00)) (* 24 (* s00 ?x2489 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346)) (* (- 54) (* ?x2489 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 72) (* s!1 s!1 s00 r00)) (* 9 (* r!2 r!2 s!1 s!1 s!1 s00)) (* 48 (* s!1 s!1 x!0 s00 r00)) (* (- 3) (* ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346 ?x1346 ?x1346)) (* 36 (* r00 r00 x00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* 24 (* r00 s00 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346)) (* 96 (* r!2 s!1 s!1 x!0 s00 r00)) (* (- 4) (* r00 s00 s00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346)) (* (- 12) (* x00 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346 ?x1346 ?x1346)) (* 48 (* r!2 r!2 s!1 s!1 x!0 s00 r00)) (* (- 54) (* x00 ?x2489 ?x2489 ?x2489 ?x2489 ?x1223 ?x1346 ?x1346)) (* (- 36) (* r00 r00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1223 ?x1346)) (* 6 (* s00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 72) (* x!0 x!0 s00 r00)) (* (- 36) (* r00 r00 ?x2489 ?x2489 ?x1223 ?x1223 ?x1223 ?x1346)) (* (- 288) (* r!2 x!0 x!0 s00 r00)) (* (- 24) (* r!2 r!2 s!1 x!0 x!0 s00 r00)) (* 216 (* r!2 r!2 r!2 s!1 s!1 r00 r00 x00)))))
 (let ((?x1513 (* (- 108) ?x1483)))
 (let ((?x1512 (* (- 16) ?x1321)))
 (let ((?x1193 (* s00 r00 r00 r00)))
 (let ((?x1508 (* (- 216) ?x1193)))
 (let ((?x1020 (* 432 ?x1019)))
 (let ((?x1266 (* 108 ?x942)))
 (let ((?x868 (* s00 s00 r00 r00)))
 (let ((?x869 (* 36 ?x868)))
 (let ((?x805 (* s00 s00 r00)))
 (let ((?x1149 (* 108 ?x805)))
 (let ((?x1137 (* 36 ?x784)))
 (let ((?x1502 (* (- 51) ?x728)))
 (let ((?x4290 (* s!1 r00 r00)))
 (let ((?x4689 (* (- 36) ?x4290)))
 (let ((?x1499 (* (- 108) ?x659)))
 (let ((?x650 (* s00 r00 x00)))
 (let ((?x1498 (* (- 216) ?x650)))
 (let ((?x657 (* 54 ?x563)))
 (let ((?x1124 (* (- 9) s00)))
 (let ((?x4085 (* 9 s!1)))
 (let ((?x2921 (+ ?x4085 ?x1124 ?x657 ?x1498 ?x1499 (* (- 15) (* s!1 s!1)) ?x4689 ?x1502 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1137 ?x1149 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x869 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1266 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x1020 (* 12 (* s!1 s!1 s00)) ?x1508 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1512 (* 216 (* x!0 x00)) ?x1513)))
 (let ((?x1027 (* (- 36) ?x1014)))
 (let ((?x943 (* 6 ?x942)))
 (let ((?x833 (* (- 2) ?x805)))
 (let ((?x1053 (* (- 15) ?x728)))
 (let ((?x688 (* (- 54) ?x659)))
 (let ((?x701 (* 24 ?x563)))
 (let ((?x3920 (+ ?x4085 ?x1124 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x701 ?x688 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x4689 ?x1053 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1137 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x833 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x943 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x1027 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x741 (* (- 4) ?x728)))
 (let ((?x673 (* (- 18) ?x659)))
 (let ((?x678 (* 9 ?x563)))
 (let ((?x515 (* (- 3) s00)))
 (let ((?x4016 (+ (* 3 s!1) ?x515 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x678 ?x673 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x4290) ?x741 (* 18 (* x!0 r00)) ?x785 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x6351 (+ ?x5113 ?x5116 ?x3868 ?x44 ?x637 ?x638 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x641 ?x607)))
 (let (($x4940 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x438)) 0)))
 (let (($x4211 (and $x4940 (= ?x6351 0) (= ?x4016 0) (= ?x3920 0) (= ?x2921 0) (not (= ?x4206 0)))))
 (let (($x6947 (exists ((r Int) (s Int) (x Int) )(! (let ((?x6943 (* (- 24) (* r r s x x s00 r00))))
 (let ((?x6994 (* (- 288) (* r x x s00 r00))))
 (let ((?x214 (* 6 r)))
 (let ((?x1523 (+ 3 ?x214 s)))
 (let ((?x417 (* (- 1) s)))
 (let ((?x1529 (+ ?x417 x)))
 (let ((?x1520 (+ 1 r)))
 (let ((?x6920 (* (- 72) (* x x s00 r00))))
 (let ((?x6993 (* 48 (* r r s s x s00 r00))))
 (let ((?x6992 (* 96 (* r s s x s00 r00))))
 (let ((?x6990 (* 48 (* s s x s00 r00))))
 (let ((?x6796 (* (- 72) (* s s s00 r00))))
 (let ((?x6989 (* (- 360) (* r r x x s00 r00))))
 (let ((?x6757 (* (- 24) (* s x x s00 r00))))
 (let ((?x6748 (* (- 144) (* r r r x x s00 r00))))
 (let ((?x6988 (* (- 48) (* r s x x s00 r00))))
 (let ((?x6987 (* (- 288) (* r s s s00 r00))))
 (let ((?x6985 (* (- 360) (* r r s s s00 r00))))
 (let ((?x6694 (* (- 144) (* r r r s s s00 r00))))
 (let ((?x6683 (* (- 24) (* s s s s00 r00))))
 (let ((?x6983 (* (- 48) (* r s s s s00 r00))))
 (let ((?x6659 (* (- 24) (* r r s s s s00 r00))))
 (let ((?x6982 (* 144 (* s x s00 r00))))
 (let ((?x6981 (* 288 (* r r r s x s00 r00))))
 (let ((?x6980 (* 576 (* r s x s00 r00))))
 (let ((?x6978 (* 720 (* r r s x s00 r00))))
 (let ((?x5112 (* 45 (* s s s00 s00))))
 (let ((?x4979 (* (- 90) (* s x s00 s00))))
 (let ((?x4971 (* 45 (* x x s00 s00))))
 (let ((?x3675 (* (- 108) (* x x s00 r00 r00))))
 (let ((?x3715 (* 432 (* r r r s x s00 r00 r00))))
 (let ((?x3714 (* 864 (* r s x s00 r00 r00))))
 (let ((?x3712 (* 216 (* s x s00 r00 r00))))
 (let ((?x3711 (* 1080 (* r r s x s00 r00 r00))))
 (let ((?x3460 (* (- 216) (* r r r s s s00 r00 r00))))
 (let ((?x3708 (* (- 540) (* r r s s s00 r00 r00))))
 (let ((?x3707 (* (- 432) (* r s s s00 r00 r00))))
 (let ((?x3380 (* (- 108) (* s s s00 r00 r00))))
 (let ((?x3706 (* (- 432) (* r x x s00 r00 r00))))
 (let ((?x3705 (* (- 540) (* r r x x s00 r00 r00))))
 (let ((?x3346 (* (- 216) (* r r r x x s00 r00 r00))))
 (let ((?x2767 (* 27 (* x x s00))))
 (let ((?x2936 (* (- 54) (* s x s00))))
 (let ((?x2675 (* (- 72) (* r s s s00 x00))))
 (let ((?x2674 (* 12 (* r r s s x s00 x00))))
 (let ((?x2673 (* 24 (* r s s x s00 x00))))
 (let ((?x2672 (* 12 (* s s x s00 x00))))
 (let ((?x2671 (* 72 (* r r r s x s00 x00))))
 (let ((?x2670 (* 144 (* r s x s00 x00))))
 (let ((?x2668 (* 180 (* r r s x s00 x00))))
 (let ((?x2440 (* (- 6) (* r r s s s s00 x00))))
 (let ((?x2666 (* (- 12) (* r s s s s00 x00))))
 (let ((?x2416 (* (- 6) (* s s s s00 x00))))
 (let ((?x2406 (* (- 36) (* r r r s s s00 x00))))
 (let ((?x2665 (* (- 90) (* r r s s s00 x00))))
 (let ((?x2378 (* (- 6) (* r r s x x s00 x00))))
 (let ((?x2363 (* (- 6) (* s x x s00 x00))))
 (let ((?x2664 (* (- 12) (* r s x x s00 x00))))
 (let ((?x2339 (* (- 36) (* r r r x x s00 x00))))
 (let ((?x2663 (* (- 90) (* r r x x s00 x00))))
 (let ((?x2661 (* (- 72) (* r x x s00 x00))))
 (let ((?x2643 (* (- 18) (* x x s00 x00))))
 (let ((?x2386 (* 36 (* s x s00 x00))))
 (let ((?x2383 (* (- 18) (* s s s00 x00))))
 (let ((?x1077 (* s s s00)))
 (let ((?x2742 (* 27 ?x1077)))
 (let ((?x5596 (+ (* 324 (* r r r x x r00 x00)) (* 54 (* r r s s s r00 x00)) (* (- 2) (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 2 (* s x x s00 s00 r00)) (* 4 (* r s x x s00 s00 r00)) (* 2 (* r r s x x s00 s00 r00)) (* 324 (* r r r s s r00 x00)) (* (- 48) (* r s x s00 s00 r00)) (* 54 (* r r r x x s00)) (* (- 12) (* s x s00 s00 r00)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 60) (* r r s x s00 s00 r00)) (* (- 108) (* s s x r00 x00)) (* (- 3) (* ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* 15 (* s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 72) (* r r s s x r00 r00 x00)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523)) (* 216 (* r r r x x r00 r00 x00)) (* 108 (* x x r00 r00 x00)) (* 6 (* x x s00 s00 r00)) (* 54 (* s s s r00 x00)) (* 24 (* r x x s00 s00 r00)) ?x2742 (* 30 (* r r x x s00 s00 r00)) (* (- 108) (* r r s s x r00 x00)) (* (- 216) (* r s s x r00 x00)) (* 12 (* r r r s s s00 s00 r00)) (* (- 4) (* r r s s x s00 s00 r00)) (* 180 (* r x x s00 s00)) (* (- 24) (* r r r s x s00 s00 r00)) (* (- 114) (* x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 36) (* r00 r00 s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* 4 (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* 12 (* r r r x x s00 s00 r00)) (* 2 (* s s s s00 s00 r00)) (* 4 (* r s s s s00 s00 r00)) (* 2 (* r r s s s s00 s00 r00)) (* (- 4) (* s s x s00 s00 r00)) (* 54 (* r00 x00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 8) (* r s s x s00 s00 r00)) (* 30 (* r r s s s00 s00 r00)) (* 2 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* 2 (* r00 s00 s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* 24 (* r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 30) (* s00 s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 72 (* r s s s r00 r00 x00)) (* (- 144) (* r s s x r00 r00 x00)) (* (- 36) (* r00 r00 x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* 36 (* s s s r00 r00 x00)) (* (- 360) (* r s x s00 s00)) (* (- 2) (* r00 s00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) ?x2383 ?x2386 (* 15 (* s00 s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 48) (* r00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* (- 12) (* s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 225 (* r r s s s00 s00)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 6) (* s00 x00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 12) (* s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* 24 (* r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 540 (* r r x x r00 r00 x00)) ?x2643 (* (- 450) (* r r s x s00 s00)) (* 54 (* s x x r00 x00)) (* 108 (* r s x x r00 x00)) (* 54 (* r r s x x r00 x00)) ?x2661 ?x2663 ?x2339 ?x2664 ?x2363 (* 108 (* s s r00 r00 x00)) ?x2378 (* (- 4) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) ?x2665 ?x2406 ?x2416 ?x2666 ?x2440 (* (- 2) (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) ?x2668 (* 4 (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523 ?x1523)) ?x2670 (* (- 8) (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) ?x2671 (* 432 (* r s s r00 r00 x00)) (* (- 36) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) ?x2672 (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523)) ?x2673 (* 12 (* ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1529 ?x1523)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) ?x2674 (* 72 (* r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 24) (* ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 12 (* s00 x00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 72 (* r00 r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 8) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 108) (* r00 x00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 15) (* ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 60 (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 2 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 48 (* r00 s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 45) (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* (- 4) (* r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 2) (* r00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) ?x2675 (* 104 (* r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* 6 (* s00 x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* 36 (* r00 r00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* 9 (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 9) (* ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 6) (* ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 540 (* r r s s r00 r00 x00)) ?x2936 ?x2767 (* 135 (* r r x x s00)) (* (- 18) (* s s x s00)) (* 18 (* r s s s s00)) (* 9 (* s s s s00)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 72) (* r s x x s00 r00 r00)) (* (- 36) (* s x x s00 r00 r00)) (* (- 36) (* r s s x s00)) ?x3346 ?x3705 ?x3706 ?x3380 ?x3707 ?x3708 (* (- 36) (* s s s s00 r00 r00)) (* (- 72) (* r s s s s00 r00 r00)) ?x3460 (* (- 36) (* r r s s s s00 r00 r00)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) ?x3711 (* 54 (* r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 72) (* r00 r00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) ?x3712 ?x3714 ?x3715 (* 72 (* s s x s00 r00 r00)) (* 144 (* r s s x s00 r00 r00)) (* (- 36) (* r r s x x s00 r00 r00)) (* 8 (* r00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523 ?x1523)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523)) (* 72 (* r r s s x s00 r00 r00)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) ?x3675 (* (- 216) (* s x r00 r00 x00)) (* 225 (* r r x x s00 s00)) (* 90 (* r r r s s s00 s00)) (* (- 180) (* r r r s x s00 s00)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 108) (* r r r s x s00)) (* 90 (* r r r x x s00 s00)) (* 15 (* s s s s00 s00)) (* 30 (* r s s s s00 s00)) (* (- 270) (* r r s x s00)) (* 15 (* r r s s s s00 s00)) (* (- 30) (* s s x s00 s00)) (* (- 60) (* r s s x s00 s00)) (* (- 30) (* r r s s x s00 s00)) (* 36 (* r00 ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* 6 (* ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523 ?x1523)) (* 15 (* s x x s00 s00)) (* 30 (* r s x x s00 s00)) (* 15 (* r r s x x s00 s00)) (* (- 12) (* s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 24) (* r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 162 (* s s r00 x00)) (* 112 (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* 648 (* r s s r00 x00)) (* (- 72) (* r00 r00 x00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 54 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 135 (* r r s s s00)) (* (- 18) (* s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 54) (* r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 54) (* r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* 810 (* r r s s r00 x00)) (* (- 324) (* s x r00 x00)) (* (- 1296) (* r s x r00 x00)) (* (- 1620) (* r r s x r00 x00)) (* 24 (* s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* 162 (* x x r00 x00)) (* 648 (* r x x r00 x00)) (* (- 648) (* r r r s x r00 x00)) ?x4971 (* 108 (* r s s s r00 x00)) (* 36 (* r r s x x r00 r00 x00)) ?x4979 (* 72 (* r s x x r00 r00 x00)) ?x5112 (* 36 (* s x x r00 r00 x00)) (* 36 (* r r s s s r00 r00 x00)) (* (- 864) (* r s x r00 r00 x00)) (* 6 (* x00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* 54 (* r r r s s s00)) (* (- 18) (* r r s s x s00)) (* (- 72) (* s s x r00 r00 x00)) (* (- 24) (* r00 s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* 18 (* ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* (- 54) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523)) (* (- 9) (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* 24 (* r s s s00 s00 r00)) (* 6 (* x00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 432) (* r r r s x r00 r00 x00)) (* 6 (* s s s00 s00 r00)) (* (- 72) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 15) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* 108 (* r s s s00)) (* (- 4) (* r00 s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* 4 (* r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* 432 (* r x x r00 r00 x00)) (* 810 (* r r x x r00 x00)) (* 9 (* s x x s00)) (* 9 (* r r s x x s00)) (* 72 (* r00 r00 s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 18 (* r s x x s00)) (* (- 216) (* r s x s00)) ?x6978 ?x6980 ?x6981 ?x6982 ?x6659 ?x6983 (* 108 (* r x x s00)) ?x6683 ?x6694 ?x6985 ?x6987 ?x6988 (* (- 1080) (* r r s x r00 r00 x00)) ?x6748 ?x6757 (* 180 (* r s s s00 s00)) ?x6989 (* 24 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1529 ?x1523)) ?x6796 (* 9 (* r r s s s s00)) ?x6990 (* (- 3) (* ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* 36 (* r00 r00 x00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* 24 (* r00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) ?x6992 (* (- 4) (* r00 s00 s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 12) (* x00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) ?x6993 (* (- 54) (* x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1529 ?x1523)) (* 6 (* s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1529 ?x1523)) ?x6920 (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) ?x6994 ?x6943 (* 216 (* r r r s s r00 r00 x00)))))
 (let ((?x1483 (* x00 x00)))
 (let ((?x1513 (* (- 108) ?x1483)))
 (let ((?x1321 (* s00 s00 s00)))
 (let ((?x1512 (* (- 16) ?x1321)))
 (let ((?x1193 (* s00 r00 r00 r00)))
 (let ((?x1508 (* (- 216) ?x1193)))
 (let ((?x1019 (* r00 r00 r00 x00)))
 (let ((?x1020 (* 432 ?x1019)))
 (let ((?x942 (* s00 x00)))
 (let ((?x1266 (* 108 ?x942)))
 (let ((?x868 (* s00 s00 r00 r00)))
 (let ((?x869 (* 36 ?x868)))
 (let ((?x805 (* s00 s00 r00)))
 (let ((?x1149 (* 108 ?x805)))
 (let ((?x784 (* s00 r00 r00)))
 (let ((?x1137 (* 36 ?x784)))
 (let ((?x728 (* s00 s00)))
 (let ((?x1502 (* (- 51) ?x728)))
 (let ((?x702 (* s r00 r00)))
 (let ((?x1001 (* (- 36) ?x702)))
 (let ((?x659 (* r00 x00)))
 (let ((?x1499 (* (- 108) ?x659)))
 (let ((?x650 (* s00 r00 x00)))
 (let ((?x1498 (* (- 216) ?x650)))
 (let ((?x563 (* s00 r00)))
 (let ((?x657 (* 54 ?x563)))
 (let ((?x1124 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1514 (+ ?x143 ?x1124 ?x657 ?x1498 ?x1499 (* (- 15) (* s s)) ?x1001 ?x1502 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1137 ?x1149 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x869 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1266 (* 108 (* s x)) (* (- 108) (* x x)) ?x1020 (* 12 ?x1077) ?x1508 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1512 (* 216 (* x x00)) ?x1513)))
 (let (($x1515 (= ?x1514 0)))
 (let ((?x1014 (* r00 r00 x00)))
 (let ((?x1027 (* (- 36) ?x1014)))
 (let ((?x943 (* 6 ?x942)))
 (let ((?x833 (* (- 2) ?x805)))
 (let ((?x1053 (* (- 15) ?x728)))
 (let ((?x682 (* s s)))
 (let ((?x706 (* 3 ?x682)))
 (let ((?x688 (* (- 54) ?x659)))
 (let ((?x701 (* 24 ?x563)))
 (let ((?x1216 (+ ?x143 ?x1124 (* (- 24) (* r s)) (* 24 (* r s00)) ?x701 ?x688 ?x706 (* 54 (* r x)) (* 36 (* r x r00)) ?x1001 ?x1053 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1137 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x833 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x943 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x1027 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1221 (= ?x1216 0)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x741 (* (- 4) ?x728)))
 (let ((?x683 (* 2 ?x682)))
 (let ((?x673 (* (- 18) ?x659)))
 (let ((?x678 (* 9 ?x563)))
 (let ((?x515 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x882 (+ ?x47 ?x515 (* (- 9) (* r s)) (* 9 (* r s00)) ?x678 ?x673 ?x683 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x702) ?x741 (* 18 (* x r00)) ?x785 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x889 (= ?x882 0)))
 (let ((?x606 (* r00 r00 r00)))
 (let ((?x607 (* 12 ?x606)))
 (let ((?x641 (* (- 6) ?x563)))
 (let ((?x638 (* (- 6) x00)))
 (let ((?x637 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x636 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x642 (+ ?x43 ?x636 ?x56 ?x44 ?x637 ?x638 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x641 ?x607)))
 (let (($x643 (= ?x642 0)))
 (let ((?x438 (* r00 r00)))
 (let ((?x439 (* 3 ?x438)))
 (let ((?x468 (* (- 1) s00)))
 (let (($x471 (= (+ s ?x468 (* (- 3) (* r r)) ?x439) 0)))
 (and $x471 $x643 $x889 $x1221 $x1515 (not (= ?x5596 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x933 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x4083 (+ 3 s ?x214)))
 (let ((?x417 (* (- 1) s)))
 (let ((?x4235 (+ x ?x417)))
 (let ((?x1520 (+ 1 r)))
 (let ((?x4847 (+ (* 8 (* r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 4) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 6 (* ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 4 (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 24 (* s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 72) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 4 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 15) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 4) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 54 (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 54 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 72) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 72 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 24 (* r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 4) (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 18 (* ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 24 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 12) (* x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 6) (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 24) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 6 (* x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 15 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 9 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 6 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 72 (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 3) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 3) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 114) (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 2) (* r00 s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 15 (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 15 (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 72) (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 54) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 18) (* s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 112 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 54 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 54 (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 2) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 4 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 12 (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 8) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 60 (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 2 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 48 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 72 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 12 (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 45) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 24) (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 4) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 104 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 6 (* s00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 2) (* r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 9 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 108) (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 9) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 6) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 8) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 15) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 2) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 2 (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 2 (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 2 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 6) (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 24 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 24 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 36) (* r00 r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 30) (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 48) (* r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 24) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 24) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 54) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 6 (* x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 9) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)))))
 (let (($x4369 (not (= ?x4847 0))))
 (let ((?x1483 (* x00 x00)))
 (let ((?x6780 (* 108 ?x1483)))
 (let ((?x6721 (* (- 9) s)))
 (let ((?x3079 (* r00 r00 s00)))
 (let ((?x6697 (* (- 36) ?x3079)))
 (let ((?x137 (* 9 s00)))
 (let ((?x728 (* s00 s00)))
 (let ((?x6622 (* 51 ?x728)))
 (let ((?x960 (* r00 r00 s)))
 (let ((?x5332 (* 36 ?x960)))
 (let ((?x1321 (* s00 s00 s00)))
 (let ((?x6584 (* 16 ?x1321)))
 (let ((?x942 (* s00 x00)))
 (let ((?x6496 (* (- 108) ?x942)))
 (let ((?x1019 (* r00 r00 r00 x00)))
 (let ((?x1435 (* (- 432) ?x1019)))
 (let ((?x659 (* r00 x00)))
 (let ((?x4434 (* 108 ?x659)))
 (let ((?x6789 (+ (* 216 (* r00 s00 x00)) ?x4434 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1435 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6496 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6584 (* (- 108) (* x s)) ?x5332 ?x6622 (* (- 108) (* r00 x)) ?x137 ?x6697 ?x6721 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6780)))
 (let (($x6799 (= ?x6789 0)))
 (let ((?x2729 (* 15 ?x728)))
 (let ((?x1014 (* r00 r00 x00)))
 (let ((?x6870 (* 36 ?x1014)))
 (let ((?x3414 (* (- 6) ?x942)))
 (let ((?x4388 (* 54 ?x659)))
 (let ((?x932 (+ (* 24 (* s r)) ?x4388 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3414 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5332 ?x6870 ?x2729 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6697 (* 54 (* x00 r)) ?x6721 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x636 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4832 (* 4 ?x728)))
 (let ((?x3207 (* 18 ?x659)))
 (let ((?x4865 (+ (* 9 (* s r)) ?x3207 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x960) ?x4832 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3079) (* 18 (* x00 r)) ?x636 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x606 (* r00 r00 r00)))
 (let ((?x607 (* 12 ?x606)))
 (let ((?x638 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x637 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x4843 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x636 ?x637 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x638 ?x607)))
 (let (($x988 (= (+ s00 ?x417 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x988 (= ?x4843 0) (= ?x4865 0) (= ?x932 0) $x6799 $x4369))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x6948 (lambda ((r Int) (s Int) (x Int) )(let ((?x6943 (* (- 24) (* r r s x x s00 r00))))
 (let ((?x6994 (* (- 288) (* r x x s00 r00))))
 (let ((?x214 (* 6 r)))
 (let ((?x1523 (+ 3 ?x214 s)))
 (let ((?x417 (* (- 1) s)))
 (let ((?x1529 (+ ?x417 x)))
 (let ((?x1520 (+ 1 r)))
 (let ((?x6920 (* (- 72) (* x x s00 r00))))
 (let ((?x6993 (* 48 (* r r s s x s00 r00))))
 (let ((?x6992 (* 96 (* r s s x s00 r00))))
 (let ((?x6990 (* 48 (* s s x s00 r00))))
 (let ((?x6796 (* (- 72) (* s s s00 r00))))
 (let ((?x6989 (* (- 360) (* r r x x s00 r00))))
 (let ((?x6757 (* (- 24) (* s x x s00 r00))))
 (let ((?x6748 (* (- 144) (* r r r x x s00 r00))))
 (let ((?x6988 (* (- 48) (* r s x x s00 r00))))
 (let ((?x6987 (* (- 288) (* r s s s00 r00))))
 (let ((?x6985 (* (- 360) (* r r s s s00 r00))))
 (let ((?x6694 (* (- 144) (* r r r s s s00 r00))))
 (let ((?x6683 (* (- 24) (* s s s s00 r00))))
 (let ((?x6983 (* (- 48) (* r s s s s00 r00))))
 (let ((?x6659 (* (- 24) (* r r s s s s00 r00))))
 (let ((?x6982 (* 144 (* s x s00 r00))))
 (let ((?x6981 (* 288 (* r r r s x s00 r00))))
 (let ((?x6980 (* 576 (* r s x s00 r00))))
 (let ((?x6978 (* 720 (* r r s x s00 r00))))
 (let ((?x5112 (* 45 (* s s s00 s00))))
 (let ((?x4979 (* (- 90) (* s x s00 s00))))
 (let ((?x4971 (* 45 (* x x s00 s00))))
 (let ((?x3675 (* (- 108) (* x x s00 r00 r00))))
 (let ((?x3715 (* 432 (* r r r s x s00 r00 r00))))
 (let ((?x3714 (* 864 (* r s x s00 r00 r00))))
 (let ((?x3712 (* 216 (* s x s00 r00 r00))))
 (let ((?x3711 (* 1080 (* r r s x s00 r00 r00))))
 (let ((?x3460 (* (- 216) (* r r r s s s00 r00 r00))))
 (let ((?x3708 (* (- 540) (* r r s s s00 r00 r00))))
 (let ((?x3707 (* (- 432) (* r s s s00 r00 r00))))
 (let ((?x3380 (* (- 108) (* s s s00 r00 r00))))
 (let ((?x3706 (* (- 432) (* r x x s00 r00 r00))))
 (let ((?x3705 (* (- 540) (* r r x x s00 r00 r00))))
 (let ((?x3346 (* (- 216) (* r r r x x s00 r00 r00))))
 (let ((?x2767 (* 27 (* x x s00))))
 (let ((?x2936 (* (- 54) (* s x s00))))
 (let ((?x2675 (* (- 72) (* r s s s00 x00))))
 (let ((?x2674 (* 12 (* r r s s x s00 x00))))
 (let ((?x2673 (* 24 (* r s s x s00 x00))))
 (let ((?x2672 (* 12 (* s s x s00 x00))))
 (let ((?x2671 (* 72 (* r r r s x s00 x00))))
 (let ((?x2670 (* 144 (* r s x s00 x00))))
 (let ((?x2668 (* 180 (* r r s x s00 x00))))
 (let ((?x2440 (* (- 6) (* r r s s s s00 x00))))
 (let ((?x2666 (* (- 12) (* r s s s s00 x00))))
 (let ((?x2416 (* (- 6) (* s s s s00 x00))))
 (let ((?x2406 (* (- 36) (* r r r s s s00 x00))))
 (let ((?x2665 (* (- 90) (* r r s s s00 x00))))
 (let ((?x2378 (* (- 6) (* r r s x x s00 x00))))
 (let ((?x2363 (* (- 6) (* s x x s00 x00))))
 (let ((?x2664 (* (- 12) (* r s x x s00 x00))))
 (let ((?x2339 (* (- 36) (* r r r x x s00 x00))))
 (let ((?x2663 (* (- 90) (* r r x x s00 x00))))
 (let ((?x2661 (* (- 72) (* r x x s00 x00))))
 (let ((?x2643 (* (- 18) (* x x s00 x00))))
 (let ((?x2386 (* 36 (* s x s00 x00))))
 (let ((?x2383 (* (- 18) (* s s s00 x00))))
 (let ((?x1077 (* s s s00)))
 (let ((?x2742 (* 27 ?x1077)))
 (let ((?x5596 (+ (* 324 (* r r r x x r00 x00)) (* 54 (* r r s s s r00 x00)) (* (- 2) (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 2 (* s x x s00 s00 r00)) (* 4 (* r s x x s00 s00 r00)) (* 2 (* r r s x x s00 s00 r00)) (* 324 (* r r r s s r00 x00)) (* (- 48) (* r s x s00 s00 r00)) (* 54 (* r r r x x s00)) (* (- 12) (* s x s00 s00 r00)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 60) (* r r s x s00 s00 r00)) (* (- 108) (* s s x r00 x00)) (* (- 3) (* ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* 15 (* s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 72) (* r r s s x r00 r00 x00)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523)) (* 216 (* r r r x x r00 r00 x00)) (* 108 (* x x r00 r00 x00)) (* 6 (* x x s00 s00 r00)) (* 54 (* s s s r00 x00)) (* 24 (* r x x s00 s00 r00)) ?x2742 (* 30 (* r r x x s00 s00 r00)) (* (- 108) (* r r s s x r00 x00)) (* (- 216) (* r s s x r00 x00)) (* 12 (* r r r s s s00 s00 r00)) (* (- 4) (* r r s s x s00 s00 r00)) (* 180 (* r x x s00 s00)) (* (- 24) (* r r r s x s00 s00 r00)) (* (- 114) (* x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 36) (* r00 r00 s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* 4 (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* 12 (* r r r x x s00 s00 r00)) (* 2 (* s s s s00 s00 r00)) (* 4 (* r s s s s00 s00 r00)) (* 2 (* r r s s s s00 s00 r00)) (* (- 4) (* s s x s00 s00 r00)) (* 54 (* r00 x00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 8) (* r s s x s00 s00 r00)) (* 30 (* r r s s s00 s00 r00)) (* 2 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* 2 (* r00 s00 s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* 24 (* r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 30) (* s00 s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 72 (* r s s s r00 r00 x00)) (* (- 144) (* r s s x r00 r00 x00)) (* (- 36) (* r00 r00 x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* 36 (* s s s r00 r00 x00)) (* (- 360) (* r s x s00 s00)) (* (- 2) (* r00 s00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) ?x2383 ?x2386 (* 15 (* s00 s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 48) (* r00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* (- 12) (* s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 225 (* r r s s s00 s00)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 6) (* s00 x00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 12) (* s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* 24 (* r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 540 (* r r x x r00 r00 x00)) ?x2643 (* (- 450) (* r r s x s00 s00)) (* 54 (* s x x r00 x00)) (* 108 (* r s x x r00 x00)) (* 54 (* r r s x x r00 x00)) ?x2661 ?x2663 ?x2339 ?x2664 ?x2363 (* 108 (* s s r00 r00 x00)) ?x2378 (* (- 4) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) ?x2665 ?x2406 ?x2416 ?x2666 ?x2440 (* (- 2) (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) ?x2668 (* 4 (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523 ?x1523)) ?x2670 (* (- 8) (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) ?x2671 (* 432 (* r s s r00 r00 x00)) (* (- 36) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) ?x2672 (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523)) ?x2673 (* 12 (* ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1529 ?x1523)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) ?x2674 (* 72 (* r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 24) (* ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 12 (* s00 x00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 72 (* r00 r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 8) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 108) (* r00 x00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 15) (* ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 60 (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 2 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 48 (* r00 s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 45) (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* (- 4) (* r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 2) (* r00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) ?x2675 (* 104 (* r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* 6 (* s00 x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* 36 (* r00 r00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* 9 (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 9) (* ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 6) (* ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 540 (* r r s s r00 r00 x00)) ?x2936 ?x2767 (* 135 (* r r x x s00)) (* (- 18) (* s s x s00)) (* 18 (* r s s s s00)) (* 9 (* s s s s00)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 72) (* r s x x s00 r00 r00)) (* (- 36) (* s x x s00 r00 r00)) (* (- 36) (* r s s x s00)) ?x3346 ?x3705 ?x3706 ?x3380 ?x3707 ?x3708 (* (- 36) (* s s s s00 r00 r00)) (* (- 72) (* r s s s s00 r00 r00)) ?x3460 (* (- 36) (* r r s s s s00 r00 r00)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) ?x3711 (* 54 (* r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 72) (* r00 r00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) ?x3712 ?x3714 ?x3715 (* 72 (* s s x s00 r00 r00)) (* 144 (* r s s x s00 r00 r00)) (* (- 36) (* r r s x x s00 r00 r00)) (* 8 (* r00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523 ?x1523)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523)) (* 72 (* r r s s x s00 r00 r00)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) ?x3675 (* (- 216) (* s x r00 r00 x00)) (* 225 (* r r x x s00 s00)) (* 90 (* r r r s s s00 s00)) (* (- 180) (* r r r s x s00 s00)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 108) (* r r r s x s00)) (* 90 (* r r r x x s00 s00)) (* 15 (* s s s s00 s00)) (* 30 (* r s s s s00 s00)) (* (- 270) (* r r s x s00)) (* 15 (* r r s s s s00 s00)) (* (- 30) (* s s x s00 s00)) (* (- 60) (* r s s x s00 s00)) (* (- 30) (* r r s s x s00 s00)) (* 36 (* r00 ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* 6 (* ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523 ?x1523)) (* 15 (* s x x s00 s00)) (* 30 (* r s x x s00 s00)) (* 15 (* r r s x x s00 s00)) (* (- 12) (* s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 24) (* r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 162 (* s s r00 x00)) (* 112 (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* 648 (* r s s r00 x00)) (* (- 72) (* r00 r00 x00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 54 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 135 (* r r s s s00)) (* (- 18) (* s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 54) (* r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1529 ?x1523)) (* (- 54) (* r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* 810 (* r r s s r00 x00)) (* (- 324) (* s x r00 x00)) (* (- 1296) (* r s x r00 x00)) (* (- 1620) (* r r s x r00 x00)) (* 24 (* s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* 162 (* x x r00 x00)) (* 648 (* r x x r00 x00)) (* (- 648) (* r r r s x r00 x00)) ?x4971 (* 108 (* r s s s r00 x00)) (* 36 (* r r s x x r00 r00 x00)) ?x4979 (* 72 (* r s x x r00 r00 x00)) ?x5112 (* 36 (* s x x r00 r00 x00)) (* 36 (* r r s s s r00 r00 x00)) (* (- 864) (* r s x r00 r00 x00)) (* 6 (* x00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* 54 (* r r r s s s00)) (* (- 18) (* r r s s x s00)) (* (- 72) (* s s x r00 r00 x00)) (* (- 24) (* r00 s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* 18 (* ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* (- 54) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523)) (* (- 9) (* s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* 24 (* r s s s00 s00 r00)) (* 6 (* x00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1523 ?x1523)) (* (- 432) (* r r r s x r00 r00 x00)) (* 6 (* s s s00 s00 r00)) (* (- 72) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 15) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* 108 (* r s s s00)) (* (- 4) (* r00 s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* 4 (* r00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) (* 432 (* r x x r00 r00 x00)) (* 810 (* r r x x r00 x00)) (* 9 (* s x x s00)) (* 9 (* r r s x x s00)) (* 72 (* r00 r00 s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* 18 (* r s x x s00)) (* (- 216) (* r s x s00)) ?x6978 ?x6980 ?x6981 ?x6982 ?x6659 ?x6983 (* 108 (* r x x s00)) ?x6683 ?x6694 ?x6985 ?x6987 ?x6988 (* (- 1080) (* r r s x r00 r00 x00)) ?x6748 ?x6757 (* 180 (* r s s s00 s00)) ?x6989 (* 24 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1529 ?x1523)) ?x6796 (* 9 (* r r s s s s00)) ?x6990 (* (- 3) (* ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523 ?x1523 ?x1523)) (* 36 (* r00 r00 x00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) (* 24 (* r00 s00 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) ?x6992 (* (- 4) (* r00 s00 s00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523)) (* (- 12) (* x00 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523 ?x1523 ?x1523)) ?x6993 (* (- 54) (* x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x1529 ?x1523 ?x1523)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1529 ?x1523)) (* 6 (* s00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1529 ?x1523)) ?x6920 (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x1529 ?x1529 ?x1529 ?x1523)) ?x6994 ?x6943 (* 216 (* r r r s s r00 r00 x00)))))
 (let ((?x1483 (* x00 x00)))
 (let ((?x1513 (* (- 108) ?x1483)))
 (let ((?x1321 (* s00 s00 s00)))
 (let ((?x1512 (* (- 16) ?x1321)))
 (let ((?x1193 (* s00 r00 r00 r00)))
 (let ((?x1508 (* (- 216) ?x1193)))
 (let ((?x1019 (* r00 r00 r00 x00)))
 (let ((?x1020 (* 432 ?x1019)))
 (let ((?x942 (* s00 x00)))
 (let ((?x1266 (* 108 ?x942)))
 (let ((?x868 (* s00 s00 r00 r00)))
 (let ((?x869 (* 36 ?x868)))
 (let ((?x805 (* s00 s00 r00)))
 (let ((?x1149 (* 108 ?x805)))
 (let ((?x784 (* s00 r00 r00)))
 (let ((?x1137 (* 36 ?x784)))
 (let ((?x728 (* s00 s00)))
 (let ((?x1502 (* (- 51) ?x728)))
 (let ((?x702 (* s r00 r00)))
 (let ((?x1001 (* (- 36) ?x702)))
 (let ((?x659 (* r00 x00)))
 (let ((?x1499 (* (- 108) ?x659)))
 (let ((?x650 (* s00 r00 x00)))
 (let ((?x1498 (* (- 216) ?x650)))
 (let ((?x563 (* s00 r00)))
 (let ((?x657 (* 54 ?x563)))
 (let ((?x1124 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1514 (+ ?x143 ?x1124 ?x657 ?x1498 ?x1499 (* (- 15) (* s s)) ?x1001 ?x1502 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1137 ?x1149 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x869 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1266 (* 108 (* s x)) (* (- 108) (* x x)) ?x1020 (* 12 ?x1077) ?x1508 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1512 (* 216 (* x x00)) ?x1513)))
 (let (($x1515 (= ?x1514 0)))
 (let ((?x1014 (* r00 r00 x00)))
 (let ((?x1027 (* (- 36) ?x1014)))
 (let ((?x943 (* 6 ?x942)))
 (let ((?x833 (* (- 2) ?x805)))
 (let ((?x1053 (* (- 15) ?x728)))
 (let ((?x682 (* s s)))
 (let ((?x706 (* 3 ?x682)))
 (let ((?x688 (* (- 54) ?x659)))
 (let ((?x701 (* 24 ?x563)))
 (let ((?x1216 (+ ?x143 ?x1124 (* (- 24) (* r s)) (* 24 (* r s00)) ?x701 ?x688 ?x706 (* 54 (* r x)) (* 36 (* r x r00)) ?x1001 ?x1053 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1137 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x833 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x943 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x1027 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1221 (= ?x1216 0)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x741 (* (- 4) ?x728)))
 (let ((?x683 (* 2 ?x682)))
 (let ((?x673 (* (- 18) ?x659)))
 (let ((?x678 (* 9 ?x563)))
 (let ((?x515 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x882 (+ ?x47 ?x515 (* (- 9) (* r s)) (* 9 (* r s00)) ?x678 ?x673 ?x683 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x702) ?x741 (* 18 (* x r00)) ?x785 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x889 (= ?x882 0)))
 (let ((?x606 (* r00 r00 r00)))
 (let ((?x607 (* 12 ?x606)))
 (let ((?x641 (* (- 6) ?x563)))
 (let ((?x638 (* (- 6) x00)))
 (let ((?x637 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x636 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x642 (+ ?x43 ?x636 ?x56 ?x44 ?x637 ?x638 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x641 ?x607)))
 (let (($x643 (= ?x642 0)))
 (let ((?x438 (* r00 r00)))
 (let ((?x439 (* 3 ?x438)))
 (let ((?x468 (* (- 1) s00)))
 (let (($x471 (= (+ s ?x468 (* (- 3) (* r r)) ?x439) 0)))
 (let (($x5149 (and $x471 $x643 $x889 $x1221 $x1515 (not (= ?x5596 0)))))
 (let ((?x4083 (+ 3 s ?x214)))
 (let ((?x4235 (+ x ?x417)))
 (let ((?x4847 (+ (* 8 (* r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 4) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 6 (* ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 4 (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 24 (* s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 72) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 4 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 15) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 4) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 54 (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 54 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 72) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 72 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 24 (* r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 4) (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 18 (* ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 24 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 12) (* x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 6) (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 24) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 6 (* x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 15 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 9 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 6 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 72 (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 3) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 3) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 114) (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 2) (* r00 s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 15 (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 15 (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 72) (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 54) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 18) (* s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 112 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 54 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 54 (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 2) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 4 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 12 (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 8) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 60 (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 2 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 48 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 72 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 12 (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 45) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 24) (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 4) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 104 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 6 (* s00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 2) (* r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 9 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 108) (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 9) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 6) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 8) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 15) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 2) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 2 (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 2 (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 2 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 6) (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 24 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 24 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 36) (* r00 r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 30) (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 48) (* r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 24) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 24) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 54) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 6 (* x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 9) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)))))
 (let (($x4369 (not (= ?x4847 0))))
 (let ((?x6780 (* 108 ?x1483)))
 (let ((?x6721 (* (- 9) s)))
 (let ((?x3079 (* r00 r00 s00)))
 (let ((?x6697 (* (- 36) ?x3079)))
 (let ((?x137 (* 9 s00)))
 (let ((?x6622 (* 51 ?x728)))
 (let ((?x960 (* r00 r00 s)))
 (let ((?x5332 (* 36 ?x960)))
 (let ((?x6584 (* 16 ?x1321)))
 (let ((?x6496 (* (- 108) ?x942)))
 (let ((?x1435 (* (- 432) ?x1019)))
 (let ((?x4434 (* 108 ?x659)))
 (let ((?x6789 (+ (* 216 (* r00 s00 x00)) ?x4434 (* (- 54) (* r00 s00)) (* 15 ?x682) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1435 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6496 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6584 (* (- 108) (* x s)) ?x5332 ?x6622 (* (- 108) (* r00 x)) ?x137 ?x6697 ?x6721 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6780)))
 (let (($x6799 (= ?x6789 0)))
 (let ((?x2729 (* 15 ?x728)))
 (let ((?x6870 (* 36 ?x1014)))
 (let ((?x3414 (* (- 6) ?x942)))
 (let ((?x4388 (* 54 ?x659)))
 (let ((?x932 (+ (* 24 (* s r)) ?x4388 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x682) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3414 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5332 ?x6870 ?x2729 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6697 (* 54 (* x00 r)) ?x6721 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x4832 (* 4 ?x728)))
 (let ((?x3207 (* 18 ?x659)))
 (let ((?x4865 (+ (* 9 (* s r)) ?x3207 (* (- 9) (* r00 s00)) (* (- 2) ?x682) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x960) ?x4832 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3079) (* 18 (* x00 r)) ?x636 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x4843 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x636 ?x637 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x638 ?x607)))
 (let (($x988 (= (+ s00 ?x417 (* 3 (* r r)) (* (- 3) ?x438)) 0)))
 (let (($x935 (and $x988 (= ?x4843 0) (= ?x4865 0) (= ?x932 0) $x6799 $x4369)))
 (rewrite (= $x935 $x5149)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x6816 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x4083 (+ 3 s ?x214)))
 (let ((?x417 (* (- 1) s)))
 (let ((?x4235 (+ x ?x417)))
 (let ((?x1520 (+ 1 r)))
 (let ((?x4847 (+ (* 8 (* r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 4) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 6 (* ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 4 (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 24 (* s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 72) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 4 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 15) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 4) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 54 (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 54 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 72) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 72 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 24 (* r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 4) (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 18 (* ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 24 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 12) (* x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 6) (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 24) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 6 (* x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 15 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 9 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 6 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 72 (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 3) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 3) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 114) (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 2) (* r00 s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 15 (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 15 (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 72) (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 54) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 18) (* s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 112 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 54 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 54 (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 2) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 4 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 12 (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 8) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 60 (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 2 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 48 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 72 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 12 (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 45) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 24) (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 4) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 104 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 6 (* s00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 2) (* r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 9 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 108) (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 9) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 6) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 8) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 15) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 2) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 2 (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 2 (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 2 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 6) (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 24 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 24 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 36) (* r00 r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 30) (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 48) (* r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 24) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 24) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 54) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 6 (* x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 9) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)))))
 (let (($x4369 (not (= ?x4847 0))))
 (let ((?x1483 (* x00 x00)))
 (let ((?x6780 (* 108 ?x1483)))
 (let ((?x6721 (* (- 9) s)))
 (let ((?x3079 (* r00 r00 s00)))
 (let ((?x6697 (* (- 36) ?x3079)))
 (let ((?x137 (* 9 s00)))
 (let ((?x728 (* s00 s00)))
 (let ((?x6622 (* 51 ?x728)))
 (let ((?x960 (* r00 r00 s)))
 (let ((?x5332 (* 36 ?x960)))
 (let ((?x1321 (* s00 s00 s00)))
 (let ((?x6584 (* 16 ?x1321)))
 (let ((?x942 (* s00 x00)))
 (let ((?x6496 (* (- 108) ?x942)))
 (let ((?x1019 (* r00 r00 r00 x00)))
 (let ((?x1435 (* (- 432) ?x1019)))
 (let ((?x659 (* r00 x00)))
 (let ((?x4434 (* 108 ?x659)))
 (let ((?x6789 (+ (* 216 (* r00 s00 x00)) ?x4434 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1435 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6496 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6584 (* (- 108) (* x s)) ?x5332 ?x6622 (* (- 108) (* r00 x)) ?x137 ?x6697 ?x6721 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6780)))
 (let (($x6799 (= ?x6789 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1124 (* (- 9) s00)))
 (let ((?x1053 (* (- 15) ?x728)))
 (let ((?x1014 (* r00 r00 x00)))
 (let ((?x1027 (* (- 36) ?x1014)))
 (let ((?x943 (* 6 ?x942)))
 (let ((?x682 (* s s)))
 (let ((?x706 (* 3 ?x682)))
 (let ((?x688 (* (- 54) ?x659)))
 (let ((?x6309 (+ (* (- 24) (* s r)) ?x688 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x706 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x943 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x960) ?x1027 ?x1053 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1124 (* 36 ?x3079) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x515 (* (- 3) s00)))
 (let ((?x741 (* (- 4) ?x728)))
 (let ((?x683 (* 2 ?x682)))
 (let ((?x673 (* (- 18) ?x659)))
 (let ((?x3425 (+ (* (- 9) (* s r)) ?x673 (* 9 (* r00 s00)) ?x683 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x960) ?x741 (* 18 (* r00 x)) ?x515 (* 6 ?x3079) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x5593 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x515 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x988 (= (+ s00 ?x417 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x988 (= ?x5593 0) (= ?x3425 0) (= ?x6309 0) $x6799 $x4369)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x934 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x4083 (+ 3 s ?x214)))
 (let ((?x417 (* (- 1) s)))
 (let ((?x4235 (+ x ?x417)))
 (let ((?x1520 (+ 1 r)))
 (let ((?x4847 (+ (* 8 (* r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 4) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 6 (* ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 4 (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 24 (* s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 72) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 4 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 15) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 4) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 54 (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 54 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 72) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 72 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 24 (* r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 4) (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 18 (* ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 24 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 12) (* x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 6) (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 24) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 6 (* x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 15 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 9 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 6 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 72 (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 3) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 3) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 114) (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 2) (* r00 s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 15 (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 15 (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 72) (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 54) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 18) (* s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 112 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 54 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 54 (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 2) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 4 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 12 (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 8) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 60 (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 2 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 48 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 72 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 12 (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 45) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 24) (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 4) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 104 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 6 (* s00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 2) (* r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 9 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 108) (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 9) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 6) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 8) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 15) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 2) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 2 (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 2 (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 2 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 6) (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 24 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 24 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 36) (* r00 r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 30) (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 48) (* r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 24) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 24) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 54) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 6 (* x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 9) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)))))
 (let (($x4369 (not (= ?x4847 0))))
 (let ((?x1483 (* x00 x00)))
 (let ((?x6780 (* 108 ?x1483)))
 (let ((?x6721 (* (- 9) s)))
 (let ((?x3079 (* r00 r00 s00)))
 (let ((?x6697 (* (- 36) ?x3079)))
 (let ((?x137 (* 9 s00)))
 (let ((?x728 (* s00 s00)))
 (let ((?x6622 (* 51 ?x728)))
 (let ((?x960 (* r00 r00 s)))
 (let ((?x5332 (* 36 ?x960)))
 (let ((?x1321 (* s00 s00 s00)))
 (let ((?x6584 (* 16 ?x1321)))
 (let ((?x942 (* s00 x00)))
 (let ((?x6496 (* (- 108) ?x942)))
 (let ((?x1019 (* r00 r00 r00 x00)))
 (let ((?x1435 (* (- 432) ?x1019)))
 (let ((?x659 (* r00 x00)))
 (let ((?x4434 (* 108 ?x659)))
 (let ((?x6789 (+ (* 216 (* r00 s00 x00)) ?x4434 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1435 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6496 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6584 (* (- 108) (* x s)) ?x5332 ?x6622 (* (- 108) (* r00 x)) ?x137 ?x6697 ?x6721 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6780)))
 (let (($x6799 (= ?x6789 0)))
 (let ((?x2729 (* 15 ?x728)))
 (let ((?x1014 (* r00 r00 x00)))
 (let ((?x6870 (* 36 ?x1014)))
 (let ((?x3414 (* (- 6) ?x942)))
 (let ((?x4388 (* 54 ?x659)))
 (let ((?x932 (+ (* 24 (* s r)) ?x4388 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3414 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5332 ?x6870 ?x2729 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6697 (* 54 (* x00 r)) ?x6721 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x636 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4832 (* 4 ?x728)))
 (let ((?x3207 (* 18 ?x659)))
 (let ((?x4865 (+ (* 9 (* s r)) ?x3207 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x960) ?x4832 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3079) (* 18 (* x00 r)) ?x636 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x606 (* r00 r00 r00)))
 (let ((?x607 (* 12 ?x606)))
 (let ((?x638 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x637 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x4843 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x636 ?x637 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x638 ?x607)))
 (let (($x988 (= (+ s00 ?x417 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x935 (and $x988 (= ?x4843 0) (= ?x4865 0) (= ?x932 0) $x6799 $x4369)))
 (let ((?x143 (* 9 s)))
 (let ((?x1124 (* (- 9) s00)))
 (let ((?x1053 (* (- 15) ?x728)))
 (let ((?x1027 (* (- 36) ?x1014)))
 (let ((?x943 (* 6 ?x942)))
 (let ((?x682 (* s s)))
 (let ((?x706 (* 3 ?x682)))
 (let ((?x688 (* (- 54) ?x659)))
 (let ((?x6309 (+ (* (- 24) (* s r)) ?x688 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x706 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x943 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x960) ?x1027 ?x1053 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1124 (* 36 ?x3079) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x515 (* (- 3) s00)))
 (let ((?x741 (* (- 4) ?x728)))
 (let ((?x683 (* 2 ?x682)))
 (let ((?x673 (* (- 18) ?x659)))
 (let ((?x3425 (+ (* (- 9) (* s r)) ?x673 (* 9 (* r00 s00)) ?x683 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x960) ?x741 (* 18 (* r00 x)) ?x515 (* 6 ?x3079) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x5593 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x515 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x606))))
 (let (($x677 (and $x988 (= ?x5593 0) (= ?x3425 0) (= ?x6309 0) $x6799 $x4369)))
 (rewrite (= $x677 $x935)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x414 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (- x s)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x220 (+ (* 8 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216) (* 4 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216 ?x216) (* 4 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216 ?x216 ?x216))))
 (let ((?x227 (+ (- ?x220 (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 s00 s00 ?x216)) (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216) (* 6 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216) (* 4 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216) (* 24 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216))))
 (let ((?x232 (+ (- ?x227 (* 72 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 x00)) (* 4 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216))))
 (let ((?x236 (+ (- ?x232 (* 15 ?x213 ?x213 ?x213 ?x215 ?x215 s00 s00 ?x216)) (* 24 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x242 (+ (- ?x236 (* 4 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 s00 ?x216)) (* 24 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216) (* 54 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216 x00) (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x248 (+ (- ?x242 (* 72 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216)) (* 72 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216 ?x216 x00) (* 24 ?x213 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x216))))
 (let ((?x252 (- (- ?x248 (* 4 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 s00 ?x216)) (* 54 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x256 (- (+ ?x252 (* 18 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216)) (* 54 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x261 (- (+ ?x256 (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216)) (* 12 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 x00))))
 (let ((?x264 (+ (- ?x261 (* 6 ?x213 ?x213 ?x215 s00 ?x216 ?x216 x00)) (* 54 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x268 (- (- ?x264 (* 24 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216)) (* 12 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x271 (+ ?x268 (* 36 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216 x00) (* 6 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x275 (+ (- ?x271 (* 24 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216 ?x216)) (* 15 ?x213 ?x213 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x279 (- (- ?x275 (* 24 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216)) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x283 (- (+ ?x279 (* 9 ?x213 ?x213 ?x215 s00 ?x216 ?x216)) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x286 (+ ?x283 (* 6 ?x213 ?x213 ?x215 s00 ?x216 ?x216 ?x216 ?x216) (* 72 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 s00 ?x216))))
 (let ((?x298 (- (- ?x286 (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 x00)) (* 3 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x300 (- (- ?x298 (* 3 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 36 ?x213 ?x213 r00 r00 ?x215 s00 ?x216 ?x216))))
 (let ((?x302 (- (- ?x300 (* 114 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 x00)) (* 36 ?x213 ?x213 r00 r00 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x304 (- (- ?x302 (* 12 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216)) (* 12 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x308 (+ (- ?x304 (* 2 ?x213 ?x213 ?x213 r00 ?x215 ?x215 s00 s00 ?x216)) (* 15 ?x213 ?x213 ?x215 s00 s00 ?x216 ?x216 ?x216) (* 15 ?x213 ?x213 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x315 (- (- ?x308 (* 72 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 x00)) (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216))))
 (let ((?x317 (- (- ?x315 (* 54 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216 ?x216)) (* 54 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x323 (+ (- ?x317 (* 18 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216)) (* 112 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216) (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216) (* 54 ?x213 ?x213 r00 ?x215 ?x216 ?x216 x00))))
 (let ((?x332 (+ (- ?x323 (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 4 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216) (* 2 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x216 ?x216) (* 2 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216 ?x216) (* 12 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x336 (- (- ?x332 (* 8 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216)) (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216 x00))))
 (let ((?x345 (+ ?x336 (* 60 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216) (* 54 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216 x00) (* 48 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216) (* 72 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216) (* 12 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 x00))))
 (let ((?x352 (- (- ?x345 (* 45 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216)) (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216))))
 (let ((?x354 (- (- ?x352 (* 36 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216 ?x216)) (* 4 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x358 (+ ?x354 (* 104 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216 x00))))
 (let ((?x362 (- (- ?x358 (* 2 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216)) (* 36 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x366 (- (+ ?x362 (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216)) (* 108 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 x00))))
 (let ((?x373 (- (+ ?x366 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 s00 ?x216)) (* 9 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x375 (- (- ?x373 (* 6 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216)) (* 8 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x378 (+ (- ?x375 (* 15 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216 x00))))
 (let ((?x384 (+ (- ?x378 (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 2 ?x213 ?x213 r00 ?x215 s00 s00 ?x216 ?x216) (* 2 ?x213 ?x213 r00 ?x215 s00 s00 ?x216 ?x216 ?x216) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216))))
 (let ((?x390 (+ (- ?x384 (* 6 ?x213 ?x213 ?x215 s00 ?x216 ?x216 ?x216 x00)) (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216) (* 24 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216) (* 24 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x398 (- (- ?x390 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216 x00)) (* 30 ?x213 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216))))
 (let ((?x400 (- (- ?x398 (* 48 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216)) (* 24 ?x213 ?x213 r00 ?x215 s00 ?x216 ?x216))))
 (let ((?x403 (+ (- ?x400 (* 24 ?x213 ?x213 r00 ?x215 s00 ?x216 ?x216 ?x216)) (* 36 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 x00))))
 (let ((?x407 (+ (- ?x403 (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216 x00)) (* 6 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 x00))))
 (let (($x411 (not (= (- ?x407 (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216)) 0))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x411)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3087 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x4083 (+ 3 s ?x214)))
 (let ((?x417 (* (- 1) s)))
 (let ((?x4235 (+ x ?x417)))
 (let ((?x1520 (+ 1 r)))
 (let ((?x4847 (+ (* 8 (* r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 4 (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 4) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 6 (* ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 4 (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 24 (* s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 72) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 4 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 15) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 4) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 24 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 54 (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 54 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 72) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* 72 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 24 (* r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 4) (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 18 (* ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 54) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 24 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 12) (* x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 6) (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 24) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 6 (* x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 15 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 24) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 9 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 6 (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* 72 (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 3) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 3) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 114) (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 12) (* s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 2) (* r00 s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 15 (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 15 (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 72) (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 54) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 54) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 18) (* s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 112 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 54 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 54 (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 2) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 4 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083 ?x4083)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 2 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 12 (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 8) (* s00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 60 (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 2 (* s00 ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 54 (* x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 48 (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 72 (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 12 (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 45) (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 24) (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083)) (* (- 4) (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 104 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083 ?x4083)) (* 6 (* s00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 2) (* r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 36) (* r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 9 (* ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 108) (* r00 x00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* 36 (* r00 r00 s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 9) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 6) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 8) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 15) (* ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 36 (* r00 r00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 2) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* 2 (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* 2 (* r00 s00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 2 (* ?x1520 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 6) (* s00 x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 36 (* r00 r00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 24 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* 24 (* r00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 36) (* r00 r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* (- 30) (* s00 s00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083)) (* (- 48) (* r00 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083 ?x4083 ?x4083)) (* (- 24) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 24) (* r00 s00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4235 ?x4083)) (* 36 (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083)) (* (- 54) (* r00 x00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)) (* 6 (* x00 ?x1520 ?x1520 ?x4235 ?x4235 ?x4083 ?x4083)) (* (- 9) (* s00 ?x1520 ?x1520 ?x1520 ?x4235 ?x4083 ?x4083)))))
 (let (($x4369 (not (= ?x4847 0))))
 (let ((?x1483 (* x00 x00)))
 (let ((?x6780 (* 108 ?x1483)))
 (let ((?x6721 (* (- 9) s)))
 (let ((?x3079 (* r00 r00 s00)))
 (let ((?x6697 (* (- 36) ?x3079)))
 (let ((?x137 (* 9 s00)))
 (let ((?x728 (* s00 s00)))
 (let ((?x6622 (* 51 ?x728)))
 (let ((?x960 (* r00 r00 s)))
 (let ((?x5332 (* 36 ?x960)))
 (let ((?x1321 (* s00 s00 s00)))
 (let ((?x6584 (* 16 ?x1321)))
 (let ((?x942 (* s00 x00)))
 (let ((?x6496 (* (- 108) ?x942)))
 (let ((?x1019 (* r00 r00 r00 x00)))
 (let ((?x1435 (* (- 432) ?x1019)))
 (let ((?x659 (* r00 x00)))
 (let ((?x4434 (* 108 ?x659)))
 (let ((?x6789 (+ (* 216 (* r00 s00 x00)) ?x4434 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1435 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6496 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6584 (* (- 108) (* x s)) ?x5332 ?x6622 (* (- 108) (* r00 x)) ?x137 ?x6697 ?x6721 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6780)))
 (let (($x6799 (= ?x6789 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1124 (* (- 9) s00)))
 (let ((?x1053 (* (- 15) ?x728)))
 (let ((?x1014 (* r00 r00 x00)))
 (let ((?x1027 (* (- 36) ?x1014)))
 (let ((?x943 (* 6 ?x942)))
 (let ((?x682 (* s s)))
 (let ((?x706 (* 3 ?x682)))
 (let ((?x688 (* (- 54) ?x659)))
 (let ((?x6309 (+ (* (- 24) (* s r)) ?x688 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x706 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x943 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x960) ?x1027 ?x1053 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1124 (* 36 ?x3079) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x515 (* (- 3) s00)))
 (let ((?x741 (* (- 4) ?x728)))
 (let ((?x683 (* 2 ?x682)))
 (let ((?x673 (* (- 18) ?x659)))
 (let ((?x3425 (+ (* (- 9) (* s r)) ?x673 (* 9 (* r00 s00)) ?x683 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x960) ?x741 (* 18 (* r00 x)) ?x515 (* 6 ?x3079) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x5593 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x515 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x988 (= (+ s00 ?x417 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x677 (and $x988 (= ?x5593 0) (= ?x3425 0) (= ?x6309 0) $x6799 $x4369)))
 (let ((?x216 (- x s)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x220 (+ (* 8 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216) (* 4 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216 ?x216) (* 4 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216 ?x216 ?x216))))
 (let ((?x227 (+ (- ?x220 (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 s00 s00 ?x216)) (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216) (* 6 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216) (* 4 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216) (* 24 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216))))
 (let ((?x232 (+ (- ?x227 (* 72 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 x00)) (* 4 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216))))
 (let ((?x236 (+ (- ?x232 (* 15 ?x213 ?x213 ?x213 ?x215 ?x215 s00 s00 ?x216)) (* 24 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x242 (+ (- ?x236 (* 4 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 s00 ?x216)) (* 24 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216) (* 54 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216 x00) (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x248 (+ (- ?x242 (* 72 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216)) (* 72 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216 ?x216 x00) (* 24 ?x213 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x216))))
 (let ((?x252 (- (- ?x248 (* 4 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 s00 ?x216)) (* 54 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x256 (- (+ ?x252 (* 18 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216)) (* 54 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x261 (- (+ ?x256 (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216)) (* 12 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 x00))))
 (let ((?x264 (+ (- ?x261 (* 6 ?x213 ?x213 ?x215 s00 ?x216 ?x216 x00)) (* 54 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x268 (- (- ?x264 (* 24 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216)) (* 12 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x271 (+ ?x268 (* 36 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216 x00) (* 6 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x275 (+ (- ?x271 (* 24 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216 ?x216)) (* 15 ?x213 ?x213 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x279 (- (- ?x275 (* 24 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216)) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x283 (- (+ ?x279 (* 9 ?x213 ?x213 ?x215 s00 ?x216 ?x216)) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x286 (+ ?x283 (* 6 ?x213 ?x213 ?x215 s00 ?x216 ?x216 ?x216 ?x216) (* 72 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 s00 ?x216))))
 (let ((?x298 (- (- ?x286 (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 x00)) (* 3 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x300 (- (- ?x298 (* 3 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 36 ?x213 ?x213 r00 r00 ?x215 s00 ?x216 ?x216))))
 (let ((?x302 (- (- ?x300 (* 114 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 x00)) (* 36 ?x213 ?x213 r00 r00 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x304 (- (- ?x302 (* 12 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216)) (* 12 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x308 (+ (- ?x304 (* 2 ?x213 ?x213 ?x213 r00 ?x215 ?x215 s00 s00 ?x216)) (* 15 ?x213 ?x213 ?x215 s00 s00 ?x216 ?x216 ?x216) (* 15 ?x213 ?x213 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x315 (- (- ?x308 (* 72 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 x00)) (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216))))
 (let ((?x317 (- (- ?x315 (* 54 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216 ?x216)) (* 54 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x323 (+ (- ?x317 (* 18 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216)) (* 112 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216) (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216) (* 54 ?x213 ?x213 r00 ?x215 ?x216 ?x216 x00))))
 (let ((?x332 (+ (- ?x323 (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 4 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216) (* 2 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x216 ?x216) (* 2 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216 ?x216) (* 12 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x336 (- (- ?x332 (* 8 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216)) (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216 x00))))
 (let ((?x345 (+ ?x336 (* 60 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216) (* 54 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216 x00) (* 48 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216) (* 72 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216) (* 12 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 x00))))
 (let ((?x352 (- (- ?x345 (* 45 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216)) (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216))))
 (let ((?x354 (- (- ?x352 (* 36 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216 ?x216)) (* 4 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x358 (+ ?x354 (* 104 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216 x00))))
 (let ((?x362 (- (- ?x358 (* 2 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216)) (* 36 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x366 (- (+ ?x362 (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216)) (* 108 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 x00))))
 (let ((?x373 (- (+ ?x366 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 s00 ?x216)) (* 9 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x375 (- (- ?x373 (* 6 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216)) (* 8 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x378 (+ (- ?x375 (* 15 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216 x00))))
 (let ((?x384 (+ (- ?x378 (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 2 ?x213 ?x213 r00 ?x215 s00 s00 ?x216 ?x216) (* 2 ?x213 ?x213 r00 ?x215 s00 s00 ?x216 ?x216 ?x216) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216))))
 (let ((?x390 (+ (- ?x384 (* 6 ?x213 ?x213 ?x215 s00 ?x216 ?x216 ?x216 x00)) (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216) (* 24 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216) (* 24 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x398 (- (- ?x390 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216 x00)) (* 30 ?x213 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216))))
 (let ((?x400 (- (- ?x398 (* 48 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216)) (* 24 ?x213 ?x213 r00 ?x215 s00 ?x216 ?x216))))
 (let ((?x403 (+ (- ?x400 (* 24 ?x213 ?x213 r00 ?x215 s00 ?x216 ?x216 ?x216)) (* 36 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 x00))))
 (let ((?x407 (+ (- ?x403 (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216 x00)) (* 6 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 x00))))
 (let (($x411 (not (= (- ?x407 (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216)) 0))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x413 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x411))))
 (rewrite (= $x413 $x677))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x415 (asserted $x414)))
 (let ((@x3214 (mp (mp @x415 (quant-intro (proof-bind ?x3087) (= $x414 $x6816)) $x6816) (rewrite (= $x6816 $x6816)) $x6816)))
 (let ((@x5562 (mp (mp @x3214 (quant-intro (proof-bind ?x934) (= $x6816 $x933)) $x933) (quant-intro (proof-bind ?x6948) (= $x933 $x6947)) $x6947)))
 (let ((@x3484 (mp (mp~ @x5562 (sk (~ $x6947 $x4211)) $x4211) (rewrite (= $x4211 $x3027)) $x3027)))
 (let ((@x3488 (and-elim @x3484 $x4249)))
 (let ((@x3242 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4249) $x3022)) @x3488 $x3022)))
 (let (($x3020 (>= ?x4246 0)))
 (let ((@x5350 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4249) $x3020)) @x3488 $x3020)))
 (let (($x2944 (<= ?x5547 0)))
 (let ((@x2885 (and-elim @x3484 $x3722)))
 (let ((@x3249 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3722) $x2944)) @x2885 $x2944)))
 (let (($x2969 (>= ?x5547 0)))
 (let ((@x1473 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3722) $x2969)) @x2885 $x2969)))
 (let (($x2968 (<= ?x2341 0)))
 (let ((@x2698 (and-elim @x3484 $x2287)))
 (let ((@x2847 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2287) $x2968)) @x2698 $x2968)))
 (let (($x2972 (>= ?x2341 0)))
 (let ((@x4184 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2287) $x2972)) @x2698 $x2972)))
 (let (($x1859 (<= ?x2870 0)))
 (let ((@x2696 (and-elim @x3484 $x2888)))
 (let ((@x6292 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2888) $x1859)) @x2696 $x1859)))
 (let (($x2974 (>= ?x2870 0)))
 (let ((@x3687 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2888) $x2974)) @x2696 $x2974)))
 (let (($x1876 (not (<= ?x3468 0))))
 (let (($x4188 (>= ?x3468 0)))
 (let ((@x4364 ((_ th-lemma arith) (hypothesis (not $x4188)) @x5350 @x3242 @x3687 @x6292 @x4184 @x2847 @x3687 @x6292 @x4184 @x2847 @x1473 @x3249 @x5350 @x3242 false)))
 (let ((@x4201 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3165 $x1876 (not $x4188))) (and-elim @x3484 $x3482) (or $x1876 (not $x4188)))))
 ((_ th-lemma arith) (unit-resolution @x4201 (lemma @x4364 $x4188) $x1876) @x5350 @x3242 @x3687 @x6292 @x4184 @x2847 @x3687 @x6292 @x4184 @x2847 @x1473 @x3249 @x5350 @x3242 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        41
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2542
 :arith-nonlinear-bounds    34
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 408
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                5.58
 :memory                    4.05
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                15528126
 :num-checks                1
 :propagations              12
 :rlimit-count              124257
 :time                      0.11
 :total-time                0.14)
