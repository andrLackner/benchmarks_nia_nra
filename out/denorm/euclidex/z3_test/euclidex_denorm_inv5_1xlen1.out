unsat
((set-logic NIA)
(declare-fun b!2 () Int)
(declare-fun s!0 () Int)
(declare-fun q!3 () Int)
(declare-fun p!5 () Int)
(declare-fun a!4 () Int)
(declare-fun r!1 () Int)
(proof
(let ((?x223 (* (- 1) (* p00 s00 b!2))))
 (let ((?x470 (* q00 r00 b!2)))
 (let ((?x412 (* (- 1) (* q00 a00 s!0))))
 (let ((?x518 (* (- 1) (* r00 b00 q!3))))
 (let ((?x386 (* s00 a00 q!3)))
 (let ((?x230 (* p00 b00 s!0)))
 (let ((?x200 (+ ?x230 ?x386 ?x518 ?x412 ?x470 ?x223)))
 (let (($x227 (<= ?x200 0)))
 (let (($x140 (= ?x200 0)))
 (let ((?x165 (* (- 1) q!3)))
 (let ((?x341 (+ ?x165 p!5)))
 (let ((?x183 (+ a!4 (* (- 1) b!2))))
 (let ((?x462 (* (+ (* (- 1) s!0) r!1) ?x183 ?x183 ?x183 ?x341 ?x341 ?x341 ?x200 s!0 s!0 s!0 b!2)))
 (let (($x147 (= ?x462 0)))
 (let (($x463 (not $x147)))
 (let ((?x493 (* (- 1) (* s00 a00 p!5))))
 (let ((?x359 (* (- 1) (* q00 r00 a!4))))
 (let ((?x113 (* (- 1) (* p00 b00 r!1))))
 (let ((?x344 (* r00 b00 p!5)))
 (let ((?x306 (* q00 a00 r!1)))
 (let ((?x185 (* p00 s00 a!4)))
 (let ((?x217 (+ (* (- 1) a!4) b!2)))
 (let ((?x233 (* (- 1) r!1)))
 (let ((?x126 (+ s!0 ?x233)))
 (let ((?x435 (* ?x126 ?x126 ?x126 ?x217 (+ ?x185 ?x230 ?x306 ?x344 ?x113 ?x359 ?x386 ?x518 ?x412 ?x470 ?x223 ?x493) r!1 a!4 a!4 a!4 p!5 p!5 p!5)))
 (let (($x308 (= ?x435 0)))
 (let (($x267 (not $x308)))
 (let (($x270 (or $x267 $x463)))
 (let ((?x290 (+ ?x185 ?x306 ?x344 ?x113 ?x359 ?x493)))
 (let (($x222 (= ?x290 0)))
 (let ((?x129 (* q00 a00)))
 (let ((?x536 (+ ?x129 (* (- 1) (* p00 b00)) (* b!2 p!5) (* (- 1) (* a!4 q!3)))))
 (let ((?x302 (* b!2 r!1)))
 (let ((?x125 (* s00 a00)))
 (let (($x418 (= (+ ?x125 (* (- 1) (* r00 b00)) ?x302 (* (- 1) (* a!4 s!0))) 0)))
 (let ((?x338 (* q!3 r!1)))
 (let ((?x37 (* p00 s00)))
 (let (($x229 (= (+ ?x37 (* (- 1) (* q00 r00)) (* (- 1) (* s!0 p!5)) ?x338) 0)))
 (let (($x452 (and $x229 $x418 (= ?x536 0) $x222 $x140 $x270)))
 (let ((?x123 (* (- 1) (* s!0 q00 a00))))
 (let ((?x424 (* q!3 s00 a00)))
 (let ((?x443 (* (- 1) (* q!3 r00 b00))))
 (let ((?x456 (* s!0 p00 b00)))
 (let ((?x423 (* (- 1) (* b!2 p00 s00))))
 (let ((?x382 (* b!2 q00 r00)))
 (let ((?x236 (+ ?x382 ?x423 ?x456 ?x443 ?x424 ?x123)))
 (let ((?x402 (+ p!5 ?x165)))
 (let ((?x487 (* (+ r!1 (* (- 1) s!0)) ?x183 ?x183 ?x183 ?x402 ?x402 ?x402 ?x236 s!0 s!0 s!0 b!2)))
 (let ((?x411 (* r!1 q00 a00)))
 (let ((?x414 (* (- 1) (* p!5 s00 a00))))
 (let ((?x156 (* (- 1) (* r!1 p00 b00))))
 (let ((?x472 (* p!5 r00 b00)))
 (let ((?x384 (* (- 1) (* a!4 q00 r00))))
 (let ((?x194 (* a!4 p00 s00)))
 (let ((?x122 (+ ?x233 s!0)))
 (let ((?x202 (* ?x122 ?x122 ?x122 ?x217 (+ ?x194 ?x384 ?x382 ?x423 ?x472 ?x156 ?x414 ?x411 ?x456 ?x443 ?x424 ?x123) r!1 a!4 a!4 a!4 p!5 p!5 p!5)))
 (let ((?x130 (* p00 b00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let ((?x339 (* a!4 q!3)))
 (let (($x343 (= (+ (* a!4 s!0) (* (- 1) ?x302) (* (- 1) ?x125) (* r00 b00)) 0)))
 (let (($x208 (= (+ (* p!5 s!0) (* (- 1) ?x37) (* q00 r00) (* (- 1) ?x338)) 0)))
 (let (($x389 (and $x208 $x343 (= (+ ?x339 ?x173 ?x130 (* (- 1) (* p!5 b!2))) 0) (= (+ ?x194 ?x384 ?x472 ?x156 ?x414 ?x411) 0) (= ?x236 0) (or (not (= ?x202 0)) (not (= ?x487 0))))))
 (let (($x163 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x299 (* (- 1) (* s q00 a00))))
 (let ((?x282 (* q s00 a00)))
 (let ((?x257 (* (- 1) (* q r00 b00))))
 (let ((?x247 (* s p00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x271 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x305 (+ ?x72 ?x271 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let (($x258 (= (* ?x322 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x305 s s s b) 0)))
 (let ((?x218 (* r q00 a00)))
 (let ((?x240 (* (- 1) (* p s00 a00))))
 (let ((?x239 (* (- 1) (* r p00 b00))))
 (let ((?x184 (* p r00 b00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x238 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x547 (+ ?x63 ?x238 ?x72 ?x271 ?x184 ?x239 ?x240 ?x218 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x324 (* (- 1) a)))
 (let ((?x444 (+ ?x324 b)))
 (let ((?x426 (* (- 1) r)))
 (let ((?x421 (+ ?x426 s)))
 (let (($x145 (= (* ?x421 ?x421 ?x421 ?x444 ?x547 r a a a p p p) 0)))
 (let (($x310 (= ?x305 0)))
 (let (($x242 (= (+ ?x63 ?x238 ?x184 ?x239 ?x240 ?x218) 0)))
 (let ((?x130 (* p00 b00)))
 (let ((?x129 (* q00 a00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let (($x176 (= (+ (* a q) ?x173 ?x130 (* (- 1) (* p b))) 0)))
 (let ((?x143 (* r00 b00)))
 (let ((?x125 (* s00 a00)))
 (let ((?x132 (* (- 1) ?x125)))
 (let ((?x49 (* a s)))
 (let (($x158 (= (+ ?x49 (* (- 1) (* b r)) ?x132 ?x143) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x153 (= (+ ?x33 ?x134 ?x41 (* (- 1) (* q r))) 0)))
 (and $x153 $x158 $x176 $x242 $x310 (or (not $x145) (not $x258)))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x221 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x190 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x324 (* (- 1) a)))
 (let ((?x276 (+ b ?x324)))
 (let ((?x426 (* (- 1) r)))
 (let ((?x285 (+ s ?x426)))
 (let (($x215 (= (* ?x285 ?x285 ?x285 ?x276 ?x190 r a a a p p p) 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x399 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let (($x275 (= (* ?x322 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x399 s s s b) 0)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x419 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x478 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x466 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x134 ?x41) 0) (= ?x466 0) $x478 (= ?x419 0) (= ?x399 0) (or (not $x275) (not $x215))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x152 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x299 (* (- 1) (* s q00 a00))))
 (let ((?x282 (* q s00 a00)))
 (let ((?x257 (* (- 1) (* q r00 b00))))
 (let ((?x247 (* s p00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x271 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x305 (+ ?x72 ?x271 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let (($x258 (= (* ?x322 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x305 s s s b) 0)))
 (let ((?x218 (* r q00 a00)))
 (let ((?x240 (* (- 1) (* p s00 a00))))
 (let ((?x239 (* (- 1) (* r p00 b00))))
 (let ((?x184 (* p r00 b00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x238 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x547 (+ ?x63 ?x238 ?x72 ?x271 ?x184 ?x239 ?x240 ?x218 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x324 (* (- 1) a)))
 (let ((?x444 (+ ?x324 b)))
 (let ((?x426 (* (- 1) r)))
 (let ((?x421 (+ ?x426 s)))
 (let (($x145 (= (* ?x421 ?x421 ?x421 ?x444 ?x547 r a a a p p p) 0)))
 (let (($x310 (= ?x305 0)))
 (let (($x242 (= (+ ?x63 ?x238 ?x184 ?x239 ?x240 ?x218) 0)))
 (let ((?x130 (* p00 b00)))
 (let ((?x129 (* q00 a00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let (($x176 (= (+ (* a q) ?x173 ?x130 (* (- 1) (* p b))) 0)))
 (let ((?x143 (* r00 b00)))
 (let ((?x125 (* s00 a00)))
 (let ((?x132 (* (- 1) ?x125)))
 (let ((?x49 (* a s)))
 (let (($x158 (= (+ ?x49 (* (- 1) (* b r)) ?x132 ?x143) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x153 (= (+ ?x33 ?x134 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x237 (and $x153 $x158 $x176 $x242 $x310 (or (not $x145) (not $x258)))))
 (let ((?x190 (+ (* q00 r00 (+ b ?x324)) (* b00 p00 (+ s ?x426)) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b ?x324))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s ?x426))))))
 (let ((?x276 (+ b ?x324)))
 (let ((?x285 (+ s ?x426)))
 (let (($x215 (= (* ?x285 ?x285 ?x285 ?x276 ?x190 r a a a p p p) 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x399 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x275 (= (* ?x322 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x399 s s s b) 0)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x419 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x478 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x466 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x297 (and (= (+ (* (- 1) (* r q)) (* s p) ?x134 ?x41) 0) (= ?x466 0) $x478 (= ?x419 0) (= ?x399 0) (or (not $x275) (not $x215)))))
 (rewrite (= $x297 $x237))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x109 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x92 (- s r)))
 (let ((?x90 (- b a)))
 (let ((?x98 (- (+ (* ?x90 q00 r00) (* b00 p00 ?x92)) (* b00 (- q p) r00))))
 (let ((?x103 (- (+ (- ?x98 (* ?x90 p00 s00)) (* a00 (- q p) s00)) (* a00 q00 ?x92))))
 (let (($x105 (= (* ?x103 a a a ?x90 p p p r ?x92 ?x92 ?x92) 0)))
 (let ((?x85 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x82 (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81)))
 (let ((?x87 (* ?x82 ?x84 ?x84 ?x84 b ?x85 ?x85 ?x85 (- r s) s s s)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) ?x49 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= ?x82 0) (or (not (= ?x87 0)) (not $x105)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x280 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x190 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x324 (* (- 1) a)))
 (let ((?x276 (+ b ?x324)))
 (let ((?x426 (* (- 1) r)))
 (let ((?x285 (+ s ?x426)))
 (let (($x215 (= (* ?x285 ?x285 ?x285 ?x276 ?x190 r a a a p p p) 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x399 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let (($x275 (= (* ?x322 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x399 s s s b) 0)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x419 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x478 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x466 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let (($x297 (and (= (+ (* (- 1) (* r q)) (* s p) ?x134 ?x41) 0) (= ?x466 0) $x478 (= ?x419 0) (= ?x399 0) (or (not $x275) (not $x215)))))
 (let ((?x92 (- s r)))
 (let ((?x90 (- b a)))
 (let ((?x98 (- (+ (* ?x90 q00 r00) (* b00 p00 ?x92)) (* b00 (- q p) r00))))
 (let ((?x103 (- (+ (- ?x98 (* ?x90 p00 s00)) (* a00 (- q p) s00)) (* a00 q00 ?x92))))
 (let (($x105 (= (* ?x103 a a a ?x90 p p p r ?x92 ?x92 ?x92) 0)))
 (let ((?x85 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x82 (- ?x80 ?x81)))
 (let ((?x87 (* ?x82 ?x84 ?x84 ?x84 b ?x85 ?x85 ?x85 (- r s) s s s)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x108 (and $x44 $x53 $x61 (= (- ?x68 ?x69) 0) (= ?x82 0) (or (not (= ?x87 0)) (not $x105)))))
 (rewrite (= $x108 $x297)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x110 (asserted $x109)))
 (let ((@x459 (mp (mp @x110 (quant-intro (proof-bind ?x280) (= $x109 $x221)) $x221) (rewrite (= $x221 $x221)) $x221)))
 (let ((@x315 (mp~ (mp @x459 (quant-intro (proof-bind ?x152) (= $x221 $x163)) $x163) (sk (~ $x163 $x389)) $x389)))
 (let ((@x455 (mp @x315 (rewrite (= $x389 $x452)) $x452)))
 (let ((@x188 (and-elim @x455 $x140)))
 (let ((@x360 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x140) $x227)) @x188 $x227)))
 (let (($x212 (<= ?x290 0)))
 (let ((@x214 (and-elim @x455 $x222)))
 (let ((@x425 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x222) $x212)) @x214 $x212)))
 (let (($x187 (>= ?x200 0)))
 (let ((@x141 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x140) $x187)) @x188 $x187)))
 (let (($x186 (>= ?x290 0)))
 (let ((@x231 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x222) $x186)) @x214 $x186)))
 (let (($x422 (not (<= ?x435 0))))
 (let ((@x465 (unit-resolution (hypothesis $x463) ((_ th-lemma arith eq-propagate 0 0 0 0) @x141 @x360 @x141 @x360 $x147) false)))
 (let (($x445 (>= ?x435 0)))
 (let ((@x481 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x445)) @x231 @x141 @x425 @x360 false) $x445)))
 (let ((@x199 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x308 $x422 (not $x445))) @x481 (unit-resolution (and-elim @x455 $x270) (lemma @x465 $x147) $x267) $x422)))
 ((_ th-lemma arith farkas 1 1 1 1 1) @x199 @x231 @x141 @x425 @x360 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 9
 :arith-assert-diseq        2
 :arith-assert-lower        14
 :arith-assert-upper        13
 :arith-conflicts           2
 :arith-eq-adapter          9
 :arith-fixed-eqs           3
 :arith-grobner             2
 :arith-max-min             170
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-pivots              5
 :arith-pseudo-nonlinear    4
 :arith-row-summations      2
 :arith-tableau-max-columns 50
 :arith-tableau-max-rows    11
 :conflicts                 3
 :decisions                 2
 :del-clause                19
 :final-checks              2
 :max-memory                19.59
 :memory                    19.13
 :mk-bool-var               27
 :mk-clause                 32
 :num-allocs                490846
 :num-checks                1
 :propagations              15
 :rlimit-count              6402
 :time                      0.01
 :total-time                0.02)
