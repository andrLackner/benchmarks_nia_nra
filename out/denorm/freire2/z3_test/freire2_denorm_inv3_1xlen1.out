unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x531 (* (- 12) s!1)))
 (let ((?x1318 (* r!2 s!1)))
 (let ((?x1743 (* (- 3) ?x1318)))
 (let ((?x942 (* r!2 r!2)))
 (let ((?x1655 (* 18 ?x942)))
 (let ((?x1230 (* 9 r!2)))
 (let ((?x615 (* s00 r00 r00)))
 (let ((?x616 (* 6 ?x615)))
 (let ((?x611 (* s!1 s!1)))
 (let ((?x575 (* 2 ?x611)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x1256 (* 18 x!0)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x394 (* s00 r00)))
 (let ((?x1859 (* 3 ?x394)))
 (let ((?x269 (* r00 r00)))
 (let ((?x1562 (* (- 18) ?x269)))
 (let ((?x1681 (* (- 18) x00)))
 (let ((?x744 (* (- 9) r00)))
 (let ((?x1757 (* 12 s00)))
 (let ((?x845 (+ ?x1757 ?x744 ?x1681 ?x1562 ?x1859 ?x504 (* (- 6) (* s00 r00 r!2)) ?x1256 (* 21 (* s00 r!2)) ?x572 ?x575 ?x616 (* 18 (* r00 x!0)) ?x1230 (* 2 (* s00 s!1)) (* (- 21) (* r00 s!1)) ?x1655 (* 36 (* r00 r!2 r!2)) (* (- 36) (* r00 r00 r!2)) (* 18 (* x!0 r!2)) (* (- 6) (* r00 r00 s!1)) (* 6 (* r00 r!2 s!1)) (* (- 18) (* x00 r!2)) ?x1743 ?x531)))
 (let (($x774 (<= ?x845 0)))
 (let ((?x728 (* (- 3) s!1)))
 (let ((?x1319 (* 2 ?x1318)))
 (let ((?x735 (* 3 r!2)))
 (let ((?x737 (* 6 x!0)))
 (let ((?x437 (* r00 r00 r00)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x472 (* (- 6) ?x394)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1113 (+ ?x44 ?x468 ?x469 ?x472 ?x438 ?x737 (* 4 (* s00 r!2)) ?x735 (* (- 12) (* r00 r00 r!2)) ?x1319 ?x728)))
 (let (($x1229 (<= ?x1113 0)))
 (let (($x1125 (= ?x1113 0)))
 (let ((?x869 (+ 3 (* 6 r!2) s!1)))
 (let ((?x673 (* (- 1) s!1)))
 (let ((?x284 (+ x!0 ?x673)))
 (let ((?x1089 (+ 1 r!2)))
 (let ((?x1278 (* ?x1089 ?x1089 ?x284 ?x284 ?x869 ?x869 ?x845)))
 (let (($x1023 (= ?x1278 0)))
 (let (($x1728 (not $x1023)))
 (let ((?x1468 (* (- 9) s!1)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x790 (* 108 ?x1324)))
 (let ((?x1187 (* r00 r00 s!1)))
 (let ((?x1466 (* 36 ?x1187)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x898 (* 16 ?x1162)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1195 (* (- 432) ?x860)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1305 (* (- 108) ?x783)))
 (let ((?x541 (* (- 36) ?x615)))
 (let ((?x556 (* 51 ?x559)))
 (let ((?x1853 (* 108 ?x490)))
 (let ((?x137 (* 9 s00)))
 (let ((?x290 (+ ?x137 (* (- 54) ?x394) (* 216 (* s00 r00 x00)) ?x1853 (* 108 (* x!0 x!0)) ?x556 (* 15 ?x611) ?x541 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* (- 108) (* x!0 s!1)) (* 108 (* x00 s!1)) (* (- 108) (* r00 x!0)) ?x1305 (* (- 66) (* s00 s!1)) (* 108 (* s00 x!0)) ?x1195 (* 54 (* r00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 216) (* s00 r00 x!0)) (* 216 (* s00 r00 r00 r00)) ?x898 ?x1466 ?x790 (* (- 4) (* s!1 s!1 s!1)) (* 36 (* r00 r00 s!1 s!1)) ?x1468 (* (- 216) (* x00 x!0)) (* 108 (* s00 r00 s!1)))))
 (let ((?x823 (+ ?x137 (* (- 2) (* s00 r!2 s!1)) (* (- 24) ?x394) (* (- 4) (* r00 s!1 s!1)) (* 54 ?x490) (* (- 36) (* r00 x!0 r!2)) (* (- 24) (* s00 r!2)) (* 15 ?x559) (* (- 3) ?x611) ?x541 (* 2 (* s00 s00 r00)) (* (- 6) (* x!0 s!1)) (* 6 (* x00 s!1)) (* (- 54) (* r00 x!0)) (* (- 6) ?x783) (* (- 12) (* s00 s!1)) (* 6 (* s00 x!0)) (* 36 (* r00 r00 x00)) (* 24 (* r00 s!1)) (* (- 54) (* x!0 r!2)) ?x1466 (* 4 (* s00 s00 r!2)) (* 54 (* x00 r!2)) (* 24 ?x1318) ?x1468 (* (- 36) (* r00 r00 x!0)) (* 36 (* r00 x00 r!2)) (* (- 2) (* r!2 s!1 s!1)) (* 2 (* s00 r00 s!1)))))
 (let ((?x276 (+ ?x44 (* (- 9) ?x394) (* 18 ?x490) (* 6 (* s00 r00 r!2)) (* (- 9) (* s00 r!2)) (* 4 ?x559) (* (- 2) ?x611) (* (- 6) ?x615) (* (- 18) (* r00 x!0)) (* (- 2) (* s00 s!1)) (* 9 (* r00 s!1)) (* (- 18) (* x!0 r!2)) (* 6 ?x1187) (* (- 6) (* r00 r!2 s!1)) (* 18 (* x00 r!2)) (* 9 ?x1318) ?x728)))
 (let (($x390 (= ?x276 0)))
 (let ((?x850 (* (- 3) ?x269)))
 (let ((?x1567 (+ s00 ?x850 (* 3 ?x942) ?x673)))
 (let (($x1129 (= ?x1567 0)))
 (let (($x325 (and $x1129 $x1125 $x390 (= ?x823 0) (= ?x290 0) $x1728)))
 (let ((?x583 (* (- 6) (* r!2 s00 r00))))
 (let ((?x529 (* s!1 s00)))
 (let ((?x1406 (* 2 ?x529)))
 (let ((?x1275 (* r!2 x00)))
 (let ((?x568 (* (- 18) ?x1275)))
 (let ((?x1274 (* x!0 r00)))
 (let ((?x565 (* 18 ?x1274)))
 (let ((?x684 (* s!1 r00 r00)))
 (let ((?x454 (* (- 6) ?x684)))
 (let ((?x552 (* 6 (* r!2 s!1 r00))))
 (let ((?x576 (* r!2 x!0)))
 (let ((?x578 (* 18 ?x576)))
 (let ((?x1452 (+ ?x1230 ?x531 ?x1256 ?x1757 ?x744 ?x1681 ?x1655 ?x1562 ?x1743 (* (- 36) (* r!2 r00 r00)) (* 21 (* r!2 s00)) ?x1859 ?x504 ?x575 ?x578 ?x552 ?x454 ?x572 ?x565 ?x616 ?x568 ?x1406 (* (- 21) (* s!1 r00)) ?x583 (* 36 (* r!2 r!2 r00)))))
 (let ((?x352 (+ ?x673 x!0)))
 (let ((?x1354 (* (- 108) ?x1324)))
 (let ((?x1353 (* (- 16) ?x1162)))
 (let ((?x1034 (* s00 r00 r00 r00)))
 (let ((?x1349 (* (- 216) ?x1034)))
 (let ((?x861 (* 432 ?x860)))
 (let ((?x1107 (* 108 ?x783)))
 (let ((?x725 (* s00 s00 r00 r00)))
 (let ((?x726 (* 36 ?x725)))
 (let ((?x660 (* s00 s00 r00)))
 (let ((?x990 (* 108 ?x660)))
 (let ((?x978 (* 36 ?x615)))
 (let ((?x1343 (* (- 51) ?x559)))
 (let ((?x742 (* (- 36) ?x684)))
 (let ((?x1340 (* (- 108) ?x490)))
 (let ((?x483 (* s00 r00 x00)))
 (let ((?x1339 (* (- 216) ?x483)))
 (let ((?x494 (* 54 ?x394)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x1123 (* 9 s!1)))
 (let ((?x617 (+ ?x1123 ?x965 ?x494 ?x1339 ?x1340 (* (- 15) ?x611) ?x742 ?x1343 (* 108 ?x1274) (* (- 108) (* x!0 s00)) (* 216 (* s!1 r00 r00 r00)) ?x978 (* 66 ?x529) ?x990 (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x726 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1107 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x861 (* 12 (* s!1 s!1 s00)) ?x1349 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1353 (* 216 (* x!0 x00)) ?x1354)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x678 (* (- 2) ?x660)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x542 (* 24 ?x394)))
 (let ((?x1380 (+ ?x1123 ?x965 (* (- 24) ?x1318) (* 24 (* r!2 s00)) ?x542 ?x527 (* 3 ?x611) (* 54 ?x576) ?x742 (* 36 (* r!2 x!0 r00)) ?x894 (* 54 ?x1274) (* (- 6) (* x!0 s00)) ?x978 (* (- 54) ?x1275) (* 4 (* s!1 s!1 r00)) (* 12 ?x529) ?x678 (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x784 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x868 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x509 (* 9 ?x394)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x1281 (+ (* 3 s!1) ?x346 (* (- 9) ?x1318) (* 9 (* r!2 s00)) ?x509 ?x504 ?x575 ?x578 ?x552 ?x454 ?x572 ?x565 ?x616 ?x568 ?x1406 (* (- 9) (* s!1 r00)) ?x583)))
 (let ((?x824 (+ ?x735 ?x728 ?x737 ?x44 ?x468 ?x469 ?x1319 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x472 ?x438)))
 (let (($x1687 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x942) (* 3 ?x269)) 0) (= ?x824 0) (= ?x1281 0) (= ?x1380 0) (= ?x617 0) (not (= (* ?x1089 ?x1089 ?x352 ?x352 ?x869 ?x869 ?x1452) 0)))))
 (let (($x666 (exists ((r Int) (s Int) (x Int) )(! (let ((?x707 (* (- 6) (* r s00 r00))))
 (let ((?x656 (* s s00)))
 (let ((?x657 (* 2 ?x656)))
 (let ((?x627 (* r x00)))
 (let ((?x640 (* (- 18) ?x627)))
 (let ((?x615 (* s00 r00 r00)))
 (let ((?x616 (* 6 ?x615)))
 (let ((?x585 (* x r00)))
 (let ((?x586 (* 18 ?x585)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x533 (* s r00 r00)))
 (let ((?x546 (* (- 6) ?x533)))
 (let ((?x522 (* 6 (* r s r00))))
 (let ((?x517 (* r x)))
 (let ((?x518 (* 18 ?x517)))
 (let ((?x513 (* s s)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x394 (* s00 r00)))
 (let ((?x1859 (* 3 ?x394)))
 (let ((?x319 (* r r00 r00)))
 (let ((?x1571 (* (- 36) ?x319)))
 (let ((?x269 (* r00 r00)))
 (let ((?x1562 (* (- 18) ?x269)))
 (let ((?x1681 (* (- 18) x00)))
 (let ((?x744 (* (- 9) r00)))
 (let ((?x1757 (* 12 s00)))
 (let ((?x1489 (* 18 x)))
 (let ((?x768 (+ (* 9 r) (* (- 12) s) ?x1489 ?x1757 ?x744 ?x1681 (* 18 (* r r)) ?x1562 (* (- 3) (* r s)) ?x1571 (* 21 (* r s00)) ?x1859 ?x504 ?x514 ?x518 ?x522 ?x546 ?x572 ?x586 ?x616 ?x640 ?x657 (* (- 21) (* s r00)) ?x707 (* 36 (* r r r00)))))
 (let ((?x213 (* 6 r)))
 (let ((?x1364 (+ 3 ?x213 s)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x1467 (+ ?x248 x)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1354 (* (- 108) ?x1324)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x1353 (* (- 16) ?x1162)))
 (let ((?x1034 (* s00 r00 r00 r00)))
 (let ((?x1349 (* (- 216) ?x1034)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x861 (* 432 ?x860)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1107 (* 108 ?x783)))
 (let ((?x725 (* s00 s00 r00 r00)))
 (let ((?x726 (* 36 ?x725)))
 (let ((?x660 (* s00 s00 r00)))
 (let ((?x990 (* 108 ?x660)))
 (let ((?x978 (* 36 ?x615)))
 (let ((?x1343 (* (- 51) ?x559)))
 (let ((?x842 (* (- 36) ?x533)))
 (let ((?x1340 (* (- 108) ?x490)))
 (let ((?x483 (* s00 r00 x00)))
 (let ((?x1339 (* (- 216) ?x483)))
 (let ((?x494 (* 54 ?x394)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1355 (+ ?x143 ?x965 ?x494 ?x1339 ?x1340 (* (- 15) ?x513) ?x842 ?x1343 (* 108 ?x585) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x978 (* 66 ?x656) ?x990 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x726 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1107 (* 108 (* s x)) (* (- 108) (* x x)) ?x861 (* 12 (* s s s00)) ?x1349 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1353 (* 216 (* x x00)) ?x1354)))
 (let (($x1356 (= ?x1355 0)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x678 (* (- 2) ?x660)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x542 (* 24 ?x394)))
 (let ((?x1057 (+ ?x143 ?x965 (* (- 24) (* r s)) (* 24 (* r s00)) ?x542 ?x527 ?x545 (* 54 ?x517) ?x842 (* 36 (* r x r00)) ?x894 (* 54 ?x585) (* (- 6) (* x s00)) ?x978 (* (- 54) ?x627) (* 4 (* s s r00)) (* 12 ?x656) ?x678 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x784 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x868 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1062 (= ?x1057 0)))
 (let ((?x668 (* s r00)))
 (let ((?x681 (* (- 9) ?x668)))
 (let ((?x509 (* 9 ?x394)))
 (let ((?x367 (* r s00)))
 (let ((?x653 (* 9 ?x367)))
 (let ((?x313 (* r s)))
 (let ((?x485 (* (- 9) ?x313)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x713 (+ ?x47 ?x346 ?x485 ?x653 ?x509 ?x504 ?x514 ?x518 ?x522 ?x546 ?x572 ?x586 ?x616 ?x640 ?x657 ?x681 ?x707)))
 (let (($x720 (= ?x713 0)))
 (let ((?x437 (* r00 r00 r00)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x472 (* (- 6) ?x394)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x473 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x468 ?x469 (* 2 ?x313) (* (- 12) ?x319) (* 4 ?x367) ?x472 ?x438)))
 (let (($x474 (= ?x473 0)))
 (let (($x302 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x269)) 0)))
 (and $x302 $x474 $x720 $x1062 $x1356 (not (= (* ?x1361 ?x1361 ?x1467 ?x1467 ?x1364 ?x1364 ?x768) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1078 (exists ((r Int) (s Int) (x Int) )(! (let ((?x47 (* 3 s)))
 (let ((?x1464 (* r00 r00 s00)))
 (let ((?x1465 (* 6 ?x1464)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x1785 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x1691 (* r00 s00)))
 (let ((?x875 (* 9 ?x1691)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x985 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x504 ?x875 ?x1785 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x572 (* 18 (* r00 (+ x (* (- 1) s)))) ?x346 ?x1465 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x890 (+ 3 s ?x213)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x716 (+ x ?x248)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x790 (* 108 ?x1324)))
 (let ((?x137 (* 9 s00)))
 (let ((?x556 (* 51 ?x559)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x898 (* 16 ?x1162)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1305 (* (- 108) ?x783)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1195 (* (- 432) ?x860)))
 (let ((?x1853 (* 108 ?x490)))
 (let ((?x827 (+ (* 216 (* r00 s00 x00)) ?x1853 (* (- 54) ?x1691) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1195 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1305 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x898 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x556 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x1464) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let ((?x143 (* 9 s)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x513 (* s s)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x1787 (+ (* (- 24) (* s r)) ?x527 (* 36 (* r00 x r)) (* 24 ?x1691) ?x545 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x784 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x868 ?x894 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x965 (* 36 ?x1464) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1611 (* r00 x)))
 (let ((?x1612 (* 18 ?x1611)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x1794 (+ (* (- 9) (* s r)) ?x504 ?x875 ?x514 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x572 ?x1612 ?x346 ?x1465 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x444 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x346 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1691) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x963 (= (+ s00 ?x248 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x963 (= ?x444 0) (= ?x1794 0) (= ?x1787 0) (= ?x827 0) (not (= (* ?x1361 ?x1361 ?x716 ?x716 ?x890 ?x890 ?x985) 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1388 (lambda ((r Int) (s Int) (x Int) )(let ((?x707 (* (- 6) (* r s00 r00))))
 (let ((?x656 (* s s00)))
 (let ((?x657 (* 2 ?x656)))
 (let ((?x627 (* r x00)))
 (let ((?x640 (* (- 18) ?x627)))
 (let ((?x615 (* s00 r00 r00)))
 (let ((?x616 (* 6 ?x615)))
 (let ((?x585 (* x r00)))
 (let ((?x586 (* 18 ?x585)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x533 (* s r00 r00)))
 (let ((?x546 (* (- 6) ?x533)))
 (let ((?x522 (* 6 (* r s r00))))
 (let ((?x517 (* r x)))
 (let ((?x518 (* 18 ?x517)))
 (let ((?x513 (* s s)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x394 (* s00 r00)))
 (let ((?x1859 (* 3 ?x394)))
 (let ((?x319 (* r r00 r00)))
 (let ((?x1571 (* (- 36) ?x319)))
 (let ((?x269 (* r00 r00)))
 (let ((?x1562 (* (- 18) ?x269)))
 (let ((?x1681 (* (- 18) x00)))
 (let ((?x744 (* (- 9) r00)))
 (let ((?x1757 (* 12 s00)))
 (let ((?x1489 (* 18 x)))
 (let ((?x768 (+ (* 9 r) (* (- 12) s) ?x1489 ?x1757 ?x744 ?x1681 (* 18 (* r r)) ?x1562 (* (- 3) (* r s)) ?x1571 (* 21 (* r s00)) ?x1859 ?x504 ?x514 ?x518 ?x522 ?x546 ?x572 ?x586 ?x616 ?x640 ?x657 (* (- 21) (* s r00)) ?x707 (* 36 (* r r r00)))))
 (let ((?x213 (* 6 r)))
 (let ((?x1364 (+ 3 ?x213 s)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x1467 (+ ?x248 x)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1354 (* (- 108) ?x1324)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x1353 (* (- 16) ?x1162)))
 (let ((?x1034 (* s00 r00 r00 r00)))
 (let ((?x1349 (* (- 216) ?x1034)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x861 (* 432 ?x860)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1107 (* 108 ?x783)))
 (let ((?x725 (* s00 s00 r00 r00)))
 (let ((?x726 (* 36 ?x725)))
 (let ((?x660 (* s00 s00 r00)))
 (let ((?x990 (* 108 ?x660)))
 (let ((?x978 (* 36 ?x615)))
 (let ((?x1343 (* (- 51) ?x559)))
 (let ((?x842 (* (- 36) ?x533)))
 (let ((?x1340 (* (- 108) ?x490)))
 (let ((?x483 (* s00 r00 x00)))
 (let ((?x1339 (* (- 216) ?x483)))
 (let ((?x494 (* 54 ?x394)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1355 (+ ?x143 ?x965 ?x494 ?x1339 ?x1340 (* (- 15) ?x513) ?x842 ?x1343 (* 108 ?x585) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x978 (* 66 ?x656) ?x990 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x726 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1107 (* 108 (* s x)) (* (- 108) (* x x)) ?x861 (* 12 (* s s s00)) ?x1349 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1353 (* 216 (* x x00)) ?x1354)))
 (let (($x1356 (= ?x1355 0)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x678 (* (- 2) ?x660)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x542 (* 24 ?x394)))
 (let ((?x1057 (+ ?x143 ?x965 (* (- 24) (* r s)) (* 24 (* r s00)) ?x542 ?x527 ?x545 (* 54 ?x517) ?x842 (* 36 (* r x r00)) ?x894 (* 54 ?x585) (* (- 6) (* x s00)) ?x978 (* (- 54) ?x627) (* 4 (* s s r00)) (* 12 ?x656) ?x678 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x784 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x868 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1062 (= ?x1057 0)))
 (let ((?x668 (* s r00)))
 (let ((?x681 (* (- 9) ?x668)))
 (let ((?x509 (* 9 ?x394)))
 (let ((?x367 (* r s00)))
 (let ((?x653 (* 9 ?x367)))
 (let ((?x313 (* r s)))
 (let ((?x485 (* (- 9) ?x313)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x713 (+ ?x47 ?x346 ?x485 ?x653 ?x509 ?x504 ?x514 ?x518 ?x522 ?x546 ?x572 ?x586 ?x616 ?x640 ?x657 ?x681 ?x707)))
 (let (($x720 (= ?x713 0)))
 (let ((?x437 (* r00 r00 r00)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x472 (* (- 6) ?x394)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x473 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x468 ?x469 (* 2 ?x313) (* (- 12) ?x319) (* 4 ?x367) ?x472 ?x438)))
 (let (($x474 (= ?x473 0)))
 (let (($x302 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x269)) 0)))
 (let (($x536 (and $x302 $x474 $x720 $x1062 $x1356 (not (= (* ?x1361 ?x1361 ?x1467 ?x1467 ?x1364 ?x1364 ?x768) 0)))))
 (let ((?x1464 (* r00 r00 s00)))
 (let ((?x1465 (* 6 ?x1464)))
 (let ((?x1691 (* r00 s00)))
 (let ((?x875 (* 9 ?x1691)))
 (let ((?x985 (+ 9 (* (- 9) (* ?x1361 (+ 3 s ?x213))) ?x504 ?x875 (* 2 (* (+ 3 s ?x213) (+ 3 s ?x213))) (* 18 (* ?x1361 (+ x ?x248))) (* 6 (* r00 ?x1361 (+ 3 s ?x213))) (* (- 6) (* r00 r00 (+ 3 s ?x213))) ?x572 (* 18 (* r00 (+ x ?x248))) ?x346 ?x1465 (* (- 18) (* x00 ?x1361)) ?x47 (* 18 r) (* 9 (* s00 ?x1361)) (* 2 (* s00 (+ 3 s ?x213))) (* (- 9) (* r00 (+ 3 s ?x213))) (* (- 6) (* r00 s00 ?x1361)))))
 (let ((?x890 (+ 3 s ?x213)))
 (let ((?x716 (+ x ?x248)))
 (let ((?x790 (* 108 ?x1324)))
 (let ((?x137 (* 9 s00)))
 (let ((?x556 (* 51 ?x559)))
 (let ((?x898 (* 16 ?x1162)))
 (let ((?x1305 (* (- 108) ?x783)))
 (let ((?x1195 (* (- 432) ?x860)))
 (let ((?x1853 (* 108 ?x490)))
 (let ((?x827 (+ (* 216 (* r00 s00 x00)) ?x1853 (* (- 54) ?x1691) (* 15 ?x513) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1195 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1305 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x898 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x556 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x1464) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let ((?x1787 (+ (* (- 24) (* s r)) ?x527 (* 36 (* r00 x r)) (* 24 ?x1691) ?x545 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x784 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x868 ?x894 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x965 (* 36 ?x1464) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1611 (* r00 x)))
 (let ((?x1612 (* 18 ?x1611)))
 (let ((?x1794 (+ (* (- 9) (* s r)) ?x504 ?x875 ?x514 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x572 ?x1612 ?x346 ?x1465 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x444 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x346 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1691) (* (- 6) x) ?x59 (* (- 12) ?x437))))
 (let (($x1247 (and (= (+ s00 ?x248 (* 3 (* r r)) (* (- 3) ?x269)) 0) (= ?x444 0) (= ?x1794 0) (= ?x1787 0) (= ?x827 0) (not (= (* ?x1361 ?x1361 ?x716 ?x716 ?x890 ?x890 ?x985) 0)))))
 (rewrite (= $x1247 $x536))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x245 (exists ((r Int) (s Int) (x Int) )(! (let ((?x218 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x240 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) (- 1) ?x212 ?x212 ?x214 ?x214 ?x218 ?x218)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x240 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1080 (lambda ((r Int) (s Int) (x Int) )(let ((?x47 (* 3 s)))
 (let ((?x1464 (* r00 r00 s00)))
 (let ((?x1465 (* 6 ?x1464)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x1785 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x1691 (* r00 s00)))
 (let ((?x875 (* 9 ?x1691)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x985 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x504 ?x875 ?x1785 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x572 (* 18 (* r00 (+ x (* (- 1) s)))) ?x346 ?x1465 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x890 (+ 3 s ?x213)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x716 (+ x ?x248)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x790 (* 108 ?x1324)))
 (let ((?x137 (* 9 s00)))
 (let ((?x556 (* 51 ?x559)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x898 (* 16 ?x1162)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1305 (* (- 108) ?x783)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1195 (* (- 432) ?x860)))
 (let ((?x1853 (* 108 ?x490)))
 (let ((?x827 (+ (* 216 (* r00 s00 x00)) ?x1853 (* (- 54) ?x1691) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1195 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1305 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x898 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x556 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x1464) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let ((?x143 (* 9 s)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x513 (* s s)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x1787 (+ (* (- 24) (* s r)) ?x527 (* 36 (* r00 x r)) (* 24 ?x1691) ?x545 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x784 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x868 ?x894 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x965 (* 36 ?x1464) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1611 (* r00 x)))
 (let ((?x1612 (* 18 ?x1611)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x1794 (+ (* (- 9) (* s r)) ?x504 ?x875 ?x514 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x572 ?x1612 ?x346 ?x1465 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x444 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x346 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1691) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x963 (= (+ s00 ?x248 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1247 (and $x963 (= ?x444 0) (= ?x1794 0) (= ?x1787 0) (= ?x827 0) (not (= (* ?x1361 ?x1361 ?x716 ?x716 ?x890 ?x890 ?x985) 0)))))
 (let ((?x218 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x240 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) (- 1) ?x212 ?x212 ?x214 ?x214 ?x218 ?x218)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x244 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x240 0))))))
 (rewrite (= $x244 $x1247)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x246 (asserted $x245)))
 (let ((@x289 (mp (mp @x246 (quant-intro (proof-bind ?x1080) (= $x245 $x1078)) $x1078) (rewrite (= $x1078 $x1078)) $x1078)))
 (let ((@x1043 (mp~ (mp @x289 (quant-intro (proof-bind ?x1388) (= $x1078 $x666)) $x666) (sk (~ $x666 $x1687)) $x1687)))
 (let ((@x1441 (mp @x1043 (rewrite (= $x1687 $x325)) $x325)))
 (let ((@x1008 (and-elim @x1441 $x1125)))
 (let ((@x1837 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1125) $x1229)) @x1008 $x1229)))
 (let (($x628 (>= ?x1113 0)))
 (let ((@x1006 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1125) $x628)) @x1008 $x628)))
 (let (($x838 (<= ?x1567 0)))
 (let ((@x331 (and-elim @x1441 $x1129)))
 (let ((@x714 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1129) $x838)) @x331 $x838)))
 (let (($x516 (>= ?x1567 0)))
 (let ((@x724 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1129) $x516)) @x331 $x516)))
 (let (($x1055 (<= ?x276 0)))
 (let ((@x844 (and-elim @x1441 $x390)))
 (let ((@x524 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x390) $x1055)) @x844 $x1055)))
 (let (($x926 (>= ?x276 0)))
 (let ((@x828 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x390) $x926)) @x844 $x926)))
 (let ((@x674 ((_ th-lemma arith) (hypothesis (not $x774)) @x724 @x714 @x828 @x524 @x828 @x524 @x724 @x714 @x724 @x714 @x1006 @x1837 false)))
 (let (($x277 (>= ?x845 0)))
 (let ((@x859 ((_ th-lemma arith) (hypothesis (not $x277)) @x724 @x714 @x828 @x524 @x828 @x524 @x724 @x714 @x724 @x714 @x1006 @x1837 false)))
 (let ((@x1169 (lemma @x859 $x277)))
 (let (($x481 (not (<= ?x1278 0))))
 (let (($x460 (>= ?x1278 0)))
 (let (($x854 (not $x774)))
 (let (($x1586 (= ?x845 0)))
 (let (($x614 (not $x1586)))
 (let (($x947 (not $x460)))
 (let ((@x1479 (hypothesis $x947)))
 (let ((@x1059 ((_ th-lemma arith farkas 1 1 1) @x1479 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x614 $x277)) (hypothesis $x1586) $x277) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x614 $x774)) (hypothesis $x1586) $x774) false)))
 (let ((@x1397 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1586 $x854 (not $x277))) @x1169 (or $x1586 $x854))))
 (let ((@x1032 (unit-resolution @x1397 (unit-resolution (lemma @x1059 (or $x614 $x460)) @x1479 $x614) $x854)))
 (let ((@x1180 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1023 $x481 $x947)) (and-elim @x1441 $x1728) (or $x481 $x947))))
 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x1180 (lemma ((_ th-lemma arith farkas 1 1) @x1479 @x1032 false) $x460) $x481) @x1169 (lemma @x674 $x774) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 7
 :arith-assert-diseq        4
 :arith-assert-lower        38
 :arith-assert-upper        14
 :arith-conflicts           5
 :arith-eq-adapter          8
 :arith-gcd-tests           4
 :arith-grobner             3
 :arith-max-min             674
 :arith-nonlinear-bounds    24
 :arith-nonlinear-horner    27
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-pseudo-nonlinear    2
 :arith-row-summations      10
 :arith-tableau-max-columns 98
 :arith-tableau-max-rows    9
 :conflicts                 5
 :decisions                 5
 :del-clause                28
 :final-checks              8
 :max-memory                19.95
 :memory                    19.29
 :mk-bool-var               24
 :mk-clause                 28
 :num-allocs                892519
 :num-checks                1
 :propagations              20
 :rlimit-count              36014
 :time                      0.02
 :total-time                0.04)
