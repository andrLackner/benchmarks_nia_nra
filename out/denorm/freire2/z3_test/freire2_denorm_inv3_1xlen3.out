unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x2163 (* (- 15) (* r!2 r!2 s!1 s!1))))
 (let ((?x739 (* (- 3) (* r!2 s!1 s!1 s!1))))
 (let ((?x2165 (* (- 6) (* r!2 r!2 r!2 s!1 s!1))))
 (let ((?x2093 (* r!2 s!1 s!1)))
 (let ((?x1498 (* (- 12) ?x2093)))
 (let ((?x710 (+ 3 (* 6 r!2) s!1)))
 (let ((?x1800 (* (- 1) s!1)))
 (let ((?x1451 (+ x!0 ?x1800)))
 (let ((?x777 (+ 1 r!2)))
 (let ((?x1723 (* r!2 x!0 x!0 x!0)))
 (let ((?x1501 (* s!1 s!1)))
 (let ((?x904 (* (- 3) ?x1501)))
 (let ((?x1714 (* (- 15) (* r!2 r!2 x!0 x!0))))
 (let ((?x1311 (* (- 12) (* r!2 x!0 x!0))))
 (let ((?x2203 (* (- 1) (* r!2 r!2 s!1 s!1 s!1))))
 (let ((?x920 (* x!0 x!0)))
 (let ((?x1500 (* (- 3) ?x920)))
 (let ((?x631 (* s!1 s!1 s!1)))
 (let ((?x1497 (* (- 2) ?x631)))
 (let ((?x423 (* x!0 x!0 x!0)))
 (let ((?x1710 (* (- 6) (* r!2 r!2 r!2 x!0 x!0))))
 (let ((?x676 (+ ?x1710 ?x423 (* (- 5) (* r!2 x!0 x!0 s!1)) ?x1497 (* 5 (* x!0 s!1 s!1)) (* 12 (* r!2 r!2 r!2 x!0 s!1)) ?x1500 (* 30 (* r!2 r!2 x!0 s!1)) ?x2203 ?x1311 ?x1714 (* (- 4) (* x!0 x!0 s!1)) (* 7 (* r!2 x!0 s!1 s!1)) ?x904 ?x1723 (* 24 (* r!2 x!0 s!1)) (* (- 1) (* ?x777 ?x777 ?x777 ?x1451 ?x1451 ?x1451 ?x710)) (* 6 (* x!0 s!1)) (* 2 (* r!2 r!2 x!0 s!1 s!1)) ?x1498 (* (- 1) (* r!2 r!2 x!0 x!0 s!1)) ?x2165 ?x739 ?x2163)))
 (let (($x1827 (<= ?x676 0)))
 (let ((?x1879 (* r!2 s!1)))
 (let ((?x512 (* 2 ?x1879)))
 (let ((?x811 (* (- 3) s!1)))
 (let ((?x1877 (* 6 x!0)))
 (let ((?x442 (* r00 r00 r00)))
 (let ((?x443 (* 12 ?x442)))
 (let ((?x2217 (* 3 r!2)))
 (let ((?x399 (* s00 r00)))
 (let ((?x477 (* (- 6) ?x399)))
 (let ((?x474 (* (- 6) x00)))
 (let ((?x473 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x815 (+ ?x44 ?x473 ?x474 ?x477 ?x2217 ?x443 ?x1877 ?x811 ?x512 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)))))
 (let (($x2117 (<= ?x815 0)))
 (let (($x2332 (= ?x815 0)))
 (let ((?x698 (* (- 3) ?x1879)))
 (let ((?x1732 (* (- 12) s!1)))
 (let ((?x545 (* 2 ?x1501)))
 (let ((?x849 (* r!2 r!2)))
 (let ((?x1773 (* 18 ?x849)))
 (let ((?x620 (* s00 r00 r00)))
 (let ((?x621 (* 6 ?x620)))
 (let ((?x2308 (* 18 x!0)))
 (let ((?x564 (* s00 s00)))
 (let ((?x577 (* (- 4) ?x564)))
 (let ((?x546 (* r!2 x!0)))
 (let ((?x556 (* 18 ?x546)))
 (let ((?x495 (* r00 x00)))
 (let ((?x509 (* (- 18) ?x495)))
 (let ((?x1196 (* 9 r!2)))
 (let ((?x1864 (* 3 ?x399)))
 (let ((?x274 (* r00 r00)))
 (let ((?x1567 (* (- 18) ?x274)))
 (let ((?x1686 (* (- 18) x00)))
 (let ((?x1153 (* (- 9) r00)))
 (let ((?x1762 (* 12 s00)))
 (let ((?x2320 (+ ?x1762 ?x1153 ?x1686 ?x1567 ?x1864 ?x1196 (* 18 (* r00 x!0)) ?x509 (* (- 21) (* r00 s!1)) ?x556 ?x577 ?x2308 ?x621 ?x1773 (* 6 (* r00 r!2 s!1)) (* (- 6) (* r00 r00 s!1)) (* 36 (* r00 r!2 r!2)) (* (- 18) (* x00 r!2)) ?x545 ?x1732 ?x698 (* 21 (* s00 r!2)) (* (- 36) (* r00 r00 r!2)) (* 2 (* s00 s!1)) (* (- 6) (* s00 r00 r!2)))))
 (let ((?x429 (* ?x676 ?x2320)))
 (let (($x2272 (= ?x429 0)))
 (let (($x2036 (not $x2272)))
 (let ((?x2306 (* (- 9) s!1)))
 (let ((?x1370 (* r00 r00 s!1)))
 (let ((?x2268 (* 36 ?x1370)))
 (let ((?x1329 (* x00 x00)))
 (let ((?x2345 (* 108 ?x1329)))
 (let ((?x1167 (* s00 s00 s00)))
 (let ((?x1232 (* 16 ?x1167)))
 (let ((?x865 (* r00 r00 r00 x00)))
 (let ((?x1922 (* (- 432) ?x865)))
 (let ((?x788 (* s00 x00)))
 (let ((?x613 (* (- 108) ?x788)))
 (let ((?x1584 (* (- 36) ?x620)))
 (let ((?x1125 (* 51 ?x564)))
 (let ((?x485 (* 108 ?x495)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1461 (+ ?x137 (* (- 54) ?x399) (* 216 (* s00 r00 x00)) (* (- 108) (* r00 x!0)) ?x485 (* 54 (* r00 s!1)) ?x1125 ?x1584 (* (- 4) ?x631) (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x613 (* 108 (* s00 r00 s!1)) ?x1922 (* 108 ?x920) (* 216 (* s00 r00 r00 r00)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* (- 216) (* x00 x!0)) ?x1232 (* (- 216) (* r00 r00 r00 s!1)) ?x2345 ?x2268 (* 36 (* r00 r00 s!1 s!1)) (* 15 ?x1501) ?x2306 (* (- 12) (* s00 s!1 s!1)) (* 108 (* s00 x!0)) (* (- 108) (* x!0 s!1)) (* (- 66) (* s00 s!1)) (* 108 (* x00 s!1)))))
 (let ((?x291 (+ ?x137 (* (- 24) ?x399) (* (- 54) (* r00 x!0)) (* 54 ?x495) (* 24 (* r00 s!1)) (* (- 54) ?x546) (* 15 ?x564) (* (- 4) (* r00 s!1 s!1)) ?x1584 (* 2 (* s00 s00 r00)) (* (- 6) ?x788) (* 2 (* s00 r00 s!1)) (* 36 (* r00 r00 x00)) (* (- 2) (* s00 r!2 s!1)) ?x2268 (* 54 (* x00 r!2)) ?x904 ?x2306 (* 24 ?x1879) (* 6 (* s00 x!0)) (* (- 24) (* s00 r!2)) (* (- 6) (* x!0 s!1)) (* 4 (* s00 s00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 12) (* s00 s!1)) (* 36 (* r00 x00 r!2)) (* (- 2) ?x2093) (* 6 (* x00 s!1)) (* (- 36) (* r00 r!2 x!0)))))
 (let (($x426 (= ?x291 0)))
 (let ((?x1903 (+ ?x44 (* (- 9) ?x399) (* (- 18) (* r00 x!0)) (* 18 ?x495) (* 9 (* r00 s!1)) (* (- 18) ?x546) (* 4 ?x564) (* (- 6) ?x620) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x1370) (* 18 (* x00 r!2)) (* (- 2) ?x1501) ?x811 (* 9 ?x1879) (* (- 9) (* s00 r!2)) (* (- 2) (* s00 s!1)) (* 6 (* s00 r00 r!2)))))
 (let (($x1193 (= ?x1903 0)))
 (let ((?x840 (* (- 3) ?x274)))
 (let ((?x2131 (+ s00 ?x840 (* 3 ?x849) ?x1800)))
 (let (($x390 (= ?x2131 0)))
 (let (($x2309 (and $x390 $x2332 $x1193 $x426 (= ?x1461 0) $x2036)))
 (let ((?x2340 (* (- 6) (* r!2 s00 r00))))
 (let ((?x1252 (* s!1 s00)))
 (let ((?x2317 (* 2 ?x1252)))
 (let ((?x1258 (* r!2 x00)))
 (let ((?x461 (* (- 18) ?x1258)))
 (let ((?x578 (* x!0 r00)))
 (let ((?x1210 (* 18 ?x578)))
 (let ((?x289 (* s!1 r00 r00)))
 (let ((?x269 (* (- 6) ?x289)))
 (let ((?x560 (* 6 (* r!2 s!1 r00))))
 (let ((?x450 (+ ?x1196 ?x1732 ?x2308 ?x1762 ?x1153 ?x1686 ?x1773 ?x1567 ?x698 (* (- 36) (* r!2 r00 r00)) (* 21 (* r!2 s00)) ?x1864 ?x509 ?x545 ?x556 ?x560 ?x269 ?x577 ?x1210 ?x621 ?x461 ?x2317 (* (- 21) (* s!1 r00)) ?x2340 (* 36 (* r!2 r!2 r00)))))
 (let ((?x1808 (+ ?x1800 x!0)))
 (let ((?x406 (* s!1 x!0)))
 (let ((?x424 (* 6 ?x406)))
 (let ((?x1533 (+ ?x904 ?x1497 ?x1498 ?x424 ?x1500 (* 7 (* r!2 s!1 s!1 x!0)) (* 5 (* s!1 s!1 x!0)) (* 12 (* r!2 r!2 r!2 s!1 x!0)) (* 30 (* r!2 r!2 s!1 x!0)) (* (- 1) (* ?x777 ?x777 ?x777 ?x1808 ?x1808 ?x1808 ?x710)) (* 24 (* r!2 s!1 x!0)) ?x2203 ?x739 ?x2165 ?x2163 (* (- 1) (* r!2 r!2 s!1 x!0 x!0)) (* (- 5) (* r!2 s!1 x!0 x!0)) (* (- 4) (* s!1 x!0 x!0)) (* 2 (* r!2 r!2 s!1 s!1 x!0)) ?x1311 ?x1714 ?x1710 ?x1723 ?x423)))
 (let ((?x1359 (* (- 108) ?x1329)))
 (let ((?x1358 (* (- 16) ?x1167)))
 (let ((?x1039 (* s00 r00 r00 r00)))
 (let ((?x1354 (* (- 216) ?x1039)))
 (let ((?x866 (* 432 ?x865)))
 (let ((?x1112 (* 108 ?x788)))
 (let ((?x730 (* s00 s00 r00 r00)))
 (let ((?x731 (* 36 ?x730)))
 (let ((?x665 (* s00 s00 r00)))
 (let ((?x995 (* 108 ?x665)))
 (let ((?x983 (* 36 ?x620)))
 (let ((?x1348 (* (- 51) ?x564)))
 (let ((?x740 (* (- 36) ?x289)))
 (let ((?x1345 (* (- 108) ?x495)))
 (let ((?x488 (* s00 r00 x00)))
 (let ((?x1344 (* (- 216) ?x488)))
 (let ((?x499 (* 54 ?x399)))
 (let ((?x970 (* (- 9) s00)))
 (let ((?x1411 (* 9 s!1)))
 (let ((?x902 (+ ?x1411 ?x970 ?x499 ?x1344 ?x1345 (* (- 15) ?x1501) ?x740 ?x1348 (* 108 ?x578) (* (- 108) (* x!0 s00)) (* 216 (* s!1 r00 r00 r00)) ?x983 (* 66 ?x1252) ?x995 (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x731 (* (- 108) (* s!1 s00 r00)) (* 4 ?x631) ?x1112 (* 108 ?x406) (* (- 108) ?x920) ?x866 (* 12 (* s!1 s!1 s00)) ?x1354 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1358 (* 216 (* x!0 x00)) ?x1359)))
 (let ((?x860 (* r00 r00 x00)))
 (let ((?x873 (* (- 36) ?x860)))
 (let ((?x789 (* 6 ?x788)))
 (let ((?x683 (* (- 2) ?x665)))
 (let ((?x899 (* (- 15) ?x564)))
 (let ((?x532 (* (- 54) ?x495)))
 (let ((?x547 (* 24 ?x399)))
 (let ((?x1988 (+ ?x1411 ?x970 (* (- 24) ?x1879) (* 24 (* r!2 s00)) ?x547 ?x532 (* 3 ?x1501) (* 54 ?x546) ?x740 (* 36 (* r!2 x!0 r00)) ?x899 (* 54 ?x578) (* (- 6) (* x!0 s00)) ?x983 (* (- 54) ?x1258) (* 4 (* s!1 s!1 r00)) (* 12 ?x1252) ?x683 (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x789 (* 2 ?x2093) ?x424 (* (- 4) (* r!2 s00 s00)) ?x873 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x514 (* 9 ?x399)))
 (let ((?x351 (* (- 3) s00)))
 (let ((?x292 (+ (* 3 s!1) ?x351 (* (- 9) ?x1879) (* 9 (* r!2 s00)) ?x514 ?x509 ?x545 ?x556 ?x560 ?x269 ?x577 ?x1210 ?x621 ?x461 ?x2317 (* (- 9) (* s!1 r00)) ?x2340)))
 (let ((?x2305 (+ ?x2217 ?x811 ?x1877 ?x44 ?x473 ?x474 ?x512 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x477 ?x443)))
 (let (($x428 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x849) (* 3 ?x274)) 0) (= ?x2305 0) (= ?x292 0) (= ?x1988 0) (= ?x902 0) (not (= (* ?x1533 ?x450) 0)))))
 (let (($x592 (exists ((r Int) (s Int) (x Int) )(! (let ((?x712 (* (- 6) (* r s00 r00))))
 (let ((?x661 (* s s00)))
 (let ((?x662 (* 2 ?x661)))
 (let ((?x632 (* r x00)))
 (let ((?x645 (* (- 18) ?x632)))
 (let ((?x620 (* s00 r00 r00)))
 (let ((?x621 (* 6 ?x620)))
 (let ((?x590 (* x r00)))
 (let ((?x591 (* 18 ?x590)))
 (let ((?x564 (* s00 s00)))
 (let ((?x577 (* (- 4) ?x564)))
 (let ((?x538 (* s r00 r00)))
 (let ((?x551 (* (- 6) ?x538)))
 (let ((?x527 (* 6 (* r s r00))))
 (let ((?x522 (* r x)))
 (let ((?x523 (* 18 ?x522)))
 (let ((?x518 (* s s)))
 (let ((?x519 (* 2 ?x518)))
 (let ((?x495 (* r00 x00)))
 (let ((?x509 (* (- 18) ?x495)))
 (let ((?x399 (* s00 r00)))
 (let ((?x1864 (* 3 ?x399)))
 (let ((?x324 (* r r00 r00)))
 (let ((?x1576 (* (- 36) ?x324)))
 (let ((?x274 (* r00 r00)))
 (let ((?x1567 (* (- 18) ?x274)))
 (let ((?x1686 (* (- 18) x00)))
 (let ((?x1153 (* (- 9) r00)))
 (let ((?x1762 (* 12 s00)))
 (let ((?x1494 (* 18 x)))
 (let ((?x1158 (+ (* 9 r) (* (- 12) s) ?x1494 ?x1762 ?x1153 ?x1686 (* 18 (* r r)) ?x1567 (* (- 3) (* r s)) ?x1576 (* 21 (* r s00)) ?x1864 ?x509 ?x519 ?x523 ?x527 ?x551 ?x577 ?x591 ?x621 ?x645 ?x662 (* (- 21) (* s r00)) ?x712 (* 36 (* r r r00)))))
 (let ((?x2195 (* x x x)))
 (let ((?x2192 (* r x x x)))
 (let ((?x2233 (* (- 6) (* r r r x x))))
 (let ((?x2238 (* (- 15) (* r r x x))))
 (let ((?x2239 (* (- 12) (* r x x))))
 (let ((?x2244 (* 2 (* r r s s x))))
 (let ((?x2377 (* (- 4) (* s x x))))
 (let ((?x2376 (* (- 5) (* r s x x))))
 (let ((?x2303 (* (- 1) (* r r s x x))))
 (let ((?x2262 (* (- 15) (* r r s s))))
 (let ((?x2267 (* (- 6) (* r r r s s))))
 (let ((?x2374 (* (- 3) (* r s s s))))
 (let ((?x2307 (* (- 1) (* r r s s s))))
 (let ((?x2273 (* 24 (* r s x))))
 (let ((?x213 (* 6 r)))
 (let ((?x1369 (+ 3 ?x213 s)))
 (let ((?x253 (* (- 1) s)))
 (let ((?x1472 (+ ?x253 x)))
 (let ((?x1366 (+ 1 r)))
 (let ((?x2274 (* 30 (* r r s x))))
 (let ((?x2278 (* 12 (* r r r s x))))
 (let ((?x2373 (* 5 (* s s x))))
 (let ((?x2371 (* 7 (* r s s x))))
 (let ((?x837 (* x x)))
 (let ((?x2289 (* (- 3) ?x837)))
 (let ((?x796 (* s x)))
 (let ((?x797 (* 6 ?x796)))
 (let ((?x792 (* r s s)))
 (let ((?x2290 (* (- 12) ?x792)))
 (let ((?x786 (* s s s)))
 (let ((?x2369 (* (- 2) ?x786)))
 (let ((?x2248 (* (- 3) ?x518)))
 (let ((?x1713 (+ ?x2248 ?x2369 ?x2290 ?x797 ?x2289 ?x2371 ?x2373 ?x2278 ?x2274 (* (- 1) (* ?x1366 ?x1366 ?x1366 ?x1472 ?x1472 ?x1472 ?x1369)) ?x2273 ?x2307 ?x2374 ?x2267 ?x2262 ?x2303 ?x2376 ?x2377 ?x2244 ?x2239 ?x2238 ?x2233 ?x2192 ?x2195)))
 (let ((?x1329 (* x00 x00)))
 (let ((?x1359 (* (- 108) ?x1329)))
 (let ((?x1167 (* s00 s00 s00)))
 (let ((?x1358 (* (- 16) ?x1167)))
 (let ((?x1039 (* s00 r00 r00 r00)))
 (let ((?x1354 (* (- 216) ?x1039)))
 (let ((?x865 (* r00 r00 r00 x00)))
 (let ((?x866 (* 432 ?x865)))
 (let ((?x788 (* s00 x00)))
 (let ((?x1112 (* 108 ?x788)))
 (let ((?x730 (* s00 s00 r00 r00)))
 (let ((?x731 (* 36 ?x730)))
 (let ((?x665 (* s00 s00 r00)))
 (let ((?x995 (* 108 ?x665)))
 (let ((?x983 (* 36 ?x620)))
 (let ((?x1348 (* (- 51) ?x564)))
 (let ((?x847 (* (- 36) ?x538)))
 (let ((?x1345 (* (- 108) ?x495)))
 (let ((?x488 (* s00 r00 x00)))
 (let ((?x1344 (* (- 216) ?x488)))
 (let ((?x499 (* 54 ?x399)))
 (let ((?x970 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1360 (+ ?x143 ?x970 ?x499 ?x1344 ?x1345 (* (- 15) ?x518) ?x847 ?x1348 (* 108 ?x590) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x983 (* 66 ?x661) ?x995 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x731 (* (- 108) (* s s00 r00)) (* 4 ?x786) ?x1112 (* 108 ?x796) (* (- 108) ?x837) ?x866 (* 12 (* s s s00)) ?x1354 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1358 (* 216 (* x x00)) ?x1359)))
 (let (($x1361 (= ?x1360 0)))
 (let ((?x860 (* r00 r00 x00)))
 (let ((?x873 (* (- 36) ?x860)))
 (let ((?x789 (* 6 ?x788)))
 (let ((?x683 (* (- 2) ?x665)))
 (let ((?x899 (* (- 15) ?x564)))
 (let ((?x550 (* 3 ?x518)))
 (let ((?x532 (* (- 54) ?x495)))
 (let ((?x547 (* 24 ?x399)))
 (let ((?x1062 (+ ?x143 ?x970 (* (- 24) (* r s)) (* 24 (* r s00)) ?x547 ?x532 ?x550 (* 54 ?x522) ?x847 (* 36 (* r x r00)) ?x899 (* 54 ?x590) (* (- 6) (* x s00)) ?x983 (* (- 54) ?x632) (* 4 (* s s r00)) (* 12 ?x661) ?x683 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x789 (* 2 ?x792) ?x797 (* (- 4) (* r s00 s00)) ?x873 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1067 (= ?x1062 0)))
 (let ((?x673 (* s r00)))
 (let ((?x686 (* (- 9) ?x673)))
 (let ((?x514 (* 9 ?x399)))
 (let ((?x372 (* r s00)))
 (let ((?x658 (* 9 ?x372)))
 (let ((?x318 (* r s)))
 (let ((?x490 (* (- 9) ?x318)))
 (let ((?x351 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x718 (+ ?x47 ?x351 ?x490 ?x658 ?x514 ?x509 ?x519 ?x523 ?x527 ?x551 ?x577 ?x591 ?x621 ?x645 ?x662 ?x686 ?x712)))
 (let (($x725 (= ?x718 0)))
 (let ((?x442 (* r00 r00 r00)))
 (let ((?x443 (* 12 ?x442)))
 (let ((?x477 (* (- 6) ?x399)))
 (let ((?x474 (* (- 6) x00)))
 (let ((?x473 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x478 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x473 ?x474 (* 2 ?x318) (* (- 12) ?x324) (* 4 ?x372) ?x477 ?x443)))
 (let (($x479 (= ?x478 0)))
 (let (($x307 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x274)) 0)))
 (and $x307 $x479 $x725 $x1067 $x1361 (not (= (* ?x1713 ?x1158) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1284 (exists ((r Int) (s Int) (x Int) )(! (let ((?x47 (* 3 s)))
 (let ((?x2232 (* r00 r00 s00)))
 (let ((?x2229 (* 6 ?x2232)))
 (let ((?x351 (* (- 3) s00)))
 (let ((?x564 (* s00 s00)))
 (let ((?x577 (* (- 4) ?x564)))
 (let ((?x994 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x1530 (* r00 s00)))
 (let ((?x861 (* 9 ?x1530)))
 (let ((?x495 (* r00 x00)))
 (let ((?x509 (* (- 18) ?x495)))
 (let ((?x803 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x509 ?x861 ?x994 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x577 (* 18 (* r00 (+ x (* (- 1) s)))) ?x351 ?x2229 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x253 (* (- 1) s)))
 (let ((?x939 (+ x ?x253)))
 (let ((?x1366 (+ 1 r)))
 (let ((?x2221 (* (- 1) (* ?x1366 ?x1366 ?x1366 ?x939 ?x939 ?x939 (+ 3 s (* 6 r))))))
 (let ((?x953 (+ ?x2221 (* (- 1) (* ?x1366 ?x1366 ?x939 ?x939 (+ 3 s (* 6 r)))) (* ?x1366 ?x939 ?x939 ?x939))))
 (let ((?x1329 (* x00 x00)))
 (let ((?x2345 (* 108 ?x1329)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1125 (* 51 ?x564)))
 (let ((?x1167 (* s00 s00 s00)))
 (let ((?x1232 (* 16 ?x1167)))
 (let ((?x788 (* s00 x00)))
 (let ((?x613 (* (- 108) ?x788)))
 (let ((?x865 (* r00 r00 r00 x00)))
 (let ((?x1922 (* (- 432) ?x865)))
 (let ((?x485 (* 108 ?x495)))
 (let ((?x2351 (+ (* 216 (* r00 s00 x00)) ?x485 (* (- 54) ?x1530) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1922 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x613 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1232 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1125 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x2232) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2345)))
 (let ((?x143 (* 9 s)))
 (let ((?x970 (* (- 9) s00)))
 (let ((?x899 (* (- 15) ?x564)))
 (let ((?x860 (* r00 r00 x00)))
 (let ((?x873 (* (- 36) ?x860)))
 (let ((?x789 (* 6 ?x788)))
 (let ((?x518 (* s s)))
 (let ((?x550 (* 3 ?x518)))
 (let ((?x532 (* (- 54) ?x495)))
 (let ((?x720 (+ (* (- 24) (* s r)) ?x532 (* 36 (* r00 x r)) (* 24 ?x1530) ?x550 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x789 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x873 ?x899 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x970 (* 36 ?x2232) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1616 (* r00 x)))
 (let ((?x1617 (* 18 ?x1616)))
 (let ((?x519 (* 2 ?x518)))
 (let ((?x858 (+ (* (- 9) (* s r)) ?x509 ?x861 ?x519 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x577 ?x1617 ?x351 ?x2229 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2310 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x351 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1530) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1279 (= (+ s00 ?x253 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1279 (= ?x2310 0) (= ?x858 0) (= ?x720 0) (= ?x2351 0) (not (= (* ?x953 ?x803) 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x680 (lambda ((r Int) (s Int) (x Int) )(let ((?x712 (* (- 6) (* r s00 r00))))
 (let ((?x661 (* s s00)))
 (let ((?x662 (* 2 ?x661)))
 (let ((?x632 (* r x00)))
 (let ((?x645 (* (- 18) ?x632)))
 (let ((?x620 (* s00 r00 r00)))
 (let ((?x621 (* 6 ?x620)))
 (let ((?x590 (* x r00)))
 (let ((?x591 (* 18 ?x590)))
 (let ((?x564 (* s00 s00)))
 (let ((?x577 (* (- 4) ?x564)))
 (let ((?x538 (* s r00 r00)))
 (let ((?x551 (* (- 6) ?x538)))
 (let ((?x527 (* 6 (* r s r00))))
 (let ((?x522 (* r x)))
 (let ((?x523 (* 18 ?x522)))
 (let ((?x518 (* s s)))
 (let ((?x519 (* 2 ?x518)))
 (let ((?x495 (* r00 x00)))
 (let ((?x509 (* (- 18) ?x495)))
 (let ((?x399 (* s00 r00)))
 (let ((?x1864 (* 3 ?x399)))
 (let ((?x324 (* r r00 r00)))
 (let ((?x1576 (* (- 36) ?x324)))
 (let ((?x274 (* r00 r00)))
 (let ((?x1567 (* (- 18) ?x274)))
 (let ((?x1686 (* (- 18) x00)))
 (let ((?x1153 (* (- 9) r00)))
 (let ((?x1762 (* 12 s00)))
 (let ((?x1494 (* 18 x)))
 (let ((?x1158 (+ (* 9 r) (* (- 12) s) ?x1494 ?x1762 ?x1153 ?x1686 (* 18 (* r r)) ?x1567 (* (- 3) (* r s)) ?x1576 (* 21 (* r s00)) ?x1864 ?x509 ?x519 ?x523 ?x527 ?x551 ?x577 ?x591 ?x621 ?x645 ?x662 (* (- 21) (* s r00)) ?x712 (* 36 (* r r r00)))))
 (let ((?x2195 (* x x x)))
 (let ((?x2192 (* r x x x)))
 (let ((?x2233 (* (- 6) (* r r r x x))))
 (let ((?x2238 (* (- 15) (* r r x x))))
 (let ((?x2239 (* (- 12) (* r x x))))
 (let ((?x2244 (* 2 (* r r s s x))))
 (let ((?x2377 (* (- 4) (* s x x))))
 (let ((?x2376 (* (- 5) (* r s x x))))
 (let ((?x2303 (* (- 1) (* r r s x x))))
 (let ((?x2262 (* (- 15) (* r r s s))))
 (let ((?x2267 (* (- 6) (* r r r s s))))
 (let ((?x2374 (* (- 3) (* r s s s))))
 (let ((?x2307 (* (- 1) (* r r s s s))))
 (let ((?x2273 (* 24 (* r s x))))
 (let ((?x213 (* 6 r)))
 (let ((?x1369 (+ 3 ?x213 s)))
 (let ((?x253 (* (- 1) s)))
 (let ((?x1472 (+ ?x253 x)))
 (let ((?x1366 (+ 1 r)))
 (let ((?x2274 (* 30 (* r r s x))))
 (let ((?x2278 (* 12 (* r r r s x))))
 (let ((?x2373 (* 5 (* s s x))))
 (let ((?x2371 (* 7 (* r s s x))))
 (let ((?x837 (* x x)))
 (let ((?x2289 (* (- 3) ?x837)))
 (let ((?x796 (* s x)))
 (let ((?x797 (* 6 ?x796)))
 (let ((?x792 (* r s s)))
 (let ((?x2290 (* (- 12) ?x792)))
 (let ((?x786 (* s s s)))
 (let ((?x2369 (* (- 2) ?x786)))
 (let ((?x2248 (* (- 3) ?x518)))
 (let ((?x1713 (+ ?x2248 ?x2369 ?x2290 ?x797 ?x2289 ?x2371 ?x2373 ?x2278 ?x2274 (* (- 1) (* ?x1366 ?x1366 ?x1366 ?x1472 ?x1472 ?x1472 ?x1369)) ?x2273 ?x2307 ?x2374 ?x2267 ?x2262 ?x2303 ?x2376 ?x2377 ?x2244 ?x2239 ?x2238 ?x2233 ?x2192 ?x2195)))
 (let ((?x1329 (* x00 x00)))
 (let ((?x1359 (* (- 108) ?x1329)))
 (let ((?x1167 (* s00 s00 s00)))
 (let ((?x1358 (* (- 16) ?x1167)))
 (let ((?x1039 (* s00 r00 r00 r00)))
 (let ((?x1354 (* (- 216) ?x1039)))
 (let ((?x865 (* r00 r00 r00 x00)))
 (let ((?x866 (* 432 ?x865)))
 (let ((?x788 (* s00 x00)))
 (let ((?x1112 (* 108 ?x788)))
 (let ((?x730 (* s00 s00 r00 r00)))
 (let ((?x731 (* 36 ?x730)))
 (let ((?x665 (* s00 s00 r00)))
 (let ((?x995 (* 108 ?x665)))
 (let ((?x983 (* 36 ?x620)))
 (let ((?x1348 (* (- 51) ?x564)))
 (let ((?x847 (* (- 36) ?x538)))
 (let ((?x1345 (* (- 108) ?x495)))
 (let ((?x488 (* s00 r00 x00)))
 (let ((?x1344 (* (- 216) ?x488)))
 (let ((?x499 (* 54 ?x399)))
 (let ((?x970 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1360 (+ ?x143 ?x970 ?x499 ?x1344 ?x1345 (* (- 15) ?x518) ?x847 ?x1348 (* 108 ?x590) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x983 (* 66 ?x661) ?x995 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x731 (* (- 108) (* s s00 r00)) (* 4 ?x786) ?x1112 (* 108 ?x796) (* (- 108) ?x837) ?x866 (* 12 (* s s s00)) ?x1354 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1358 (* 216 (* x x00)) ?x1359)))
 (let (($x1361 (= ?x1360 0)))
 (let ((?x860 (* r00 r00 x00)))
 (let ((?x873 (* (- 36) ?x860)))
 (let ((?x789 (* 6 ?x788)))
 (let ((?x683 (* (- 2) ?x665)))
 (let ((?x899 (* (- 15) ?x564)))
 (let ((?x550 (* 3 ?x518)))
 (let ((?x532 (* (- 54) ?x495)))
 (let ((?x547 (* 24 ?x399)))
 (let ((?x1062 (+ ?x143 ?x970 (* (- 24) (* r s)) (* 24 (* r s00)) ?x547 ?x532 ?x550 (* 54 ?x522) ?x847 (* 36 (* r x r00)) ?x899 (* 54 ?x590) (* (- 6) (* x s00)) ?x983 (* (- 54) ?x632) (* 4 (* s s r00)) (* 12 ?x661) ?x683 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x789 (* 2 ?x792) ?x797 (* (- 4) (* r s00 s00)) ?x873 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1067 (= ?x1062 0)))
 (let ((?x673 (* s r00)))
 (let ((?x686 (* (- 9) ?x673)))
 (let ((?x514 (* 9 ?x399)))
 (let ((?x372 (* r s00)))
 (let ((?x658 (* 9 ?x372)))
 (let ((?x318 (* r s)))
 (let ((?x490 (* (- 9) ?x318)))
 (let ((?x351 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x718 (+ ?x47 ?x351 ?x490 ?x658 ?x514 ?x509 ?x519 ?x523 ?x527 ?x551 ?x577 ?x591 ?x621 ?x645 ?x662 ?x686 ?x712)))
 (let (($x725 (= ?x718 0)))
 (let ((?x442 (* r00 r00 r00)))
 (let ((?x443 (* 12 ?x442)))
 (let ((?x477 (* (- 6) ?x399)))
 (let ((?x474 (* (- 6) x00)))
 (let ((?x473 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x478 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x473 ?x474 (* 2 ?x318) (* (- 12) ?x324) (* 4 ?x372) ?x477 ?x443)))
 (let (($x479 (= ?x478 0)))
 (let (($x307 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x274)) 0)))
 (let (($x1280 (and $x307 $x479 $x725 $x1067 $x1361 (not (= (* ?x1713 ?x1158) 0)))))
 (let ((?x2232 (* r00 r00 s00)))
 (let ((?x2229 (* 6 ?x2232)))
 (let ((?x1530 (* r00 s00)))
 (let ((?x861 (* 9 ?x1530)))
 (let ((?x803 (+ 9 (* (- 9) (* ?x1366 (+ 3 s ?x213))) ?x509 ?x861 (* 2 (* (+ 3 s ?x213) (+ 3 s ?x213))) (* 18 (* ?x1366 (+ x ?x253))) (* 6 (* r00 ?x1366 (+ 3 s ?x213))) (* (- 6) (* r00 r00 (+ 3 s ?x213))) ?x577 (* 18 (* r00 (+ x ?x253))) ?x351 ?x2229 (* (- 18) (* x00 ?x1366)) ?x47 (* 18 r) (* 9 (* s00 ?x1366)) (* 2 (* s00 (+ 3 s ?x213))) (* (- 9) (* r00 (+ 3 s ?x213))) (* (- 6) (* r00 s00 ?x1366)))))
 (let ((?x813 (* (- 1) (* ?x1366 ?x1366 (+ x ?x253) (+ x ?x253) (+ 3 s ?x213)))))
 (let ((?x1087 (+ 3 s ?x213)))
 (let ((?x939 (+ x ?x253)))
 (let ((?x953 (+ (* (- 1) (* ?x1366 ?x1366 ?x1366 ?x939 ?x939 ?x939 ?x1087)) ?x813 (* ?x1366 ?x939 ?x939 ?x939))))
 (let ((?x2345 (* 108 ?x1329)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1125 (* 51 ?x564)))
 (let ((?x1232 (* 16 ?x1167)))
 (let ((?x613 (* (- 108) ?x788)))
 (let ((?x1922 (* (- 432) ?x865)))
 (let ((?x485 (* 108 ?x495)))
 (let ((?x2351 (+ (* 216 (* r00 s00 x00)) ?x485 (* (- 54) ?x1530) (* 15 ?x518) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) ?x786) (* 108 ?x837) ?x1922 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x613 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1232 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1125 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x2232) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2345)))
 (let ((?x720 (+ (* (- 24) (* s r)) ?x532 (* 36 (* r00 x r)) (* 24 ?x1530) ?x550 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x789 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x873 ?x899 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x970 (* 36 ?x2232) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1616 (* r00 x)))
 (let ((?x1617 (* 18 ?x1616)))
 (let ((?x858 (+ (* (- 9) (* s r)) ?x509 ?x861 ?x519 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x577 ?x1617 ?x351 ?x2229 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2310 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x351 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1530) (* (- 6) x) ?x59 (* (- 12) ?x442))))
 (let (($x2030 (and (= (+ s00 ?x253 (* 3 (* r r)) (* (- 3) ?x274)) 0) (= ?x2310 0) (= ?x858 0) (= ?x720 0) (= ?x2351 0) (not (= (* ?x953 ?x803) 0)))))
 (rewrite (= $x2030 $x1280))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x250 (exists ((r Int) (s Int) (x Int) )(! (let ((?x218 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x242 (- (* (- 1) ?x212 ?x212 ?x212 ?x214 ?x218 ?x218 ?x218) (* ?x212 ?x212 ?x214 ?x218 ?x218))))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x245 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) (+ ?x242 (* ?x212 ?x218 ?x218 ?x218)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x245 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1652 (lambda ((r Int) (s Int) (x Int) )(let ((?x47 (* 3 s)))
 (let ((?x2232 (* r00 r00 s00)))
 (let ((?x2229 (* 6 ?x2232)))
 (let ((?x351 (* (- 3) s00)))
 (let ((?x564 (* s00 s00)))
 (let ((?x577 (* (- 4) ?x564)))
 (let ((?x994 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x1530 (* r00 s00)))
 (let ((?x861 (* 9 ?x1530)))
 (let ((?x495 (* r00 x00)))
 (let ((?x509 (* (- 18) ?x495)))
 (let ((?x803 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x509 ?x861 ?x994 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x577 (* 18 (* r00 (+ x (* (- 1) s)))) ?x351 ?x2229 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x253 (* (- 1) s)))
 (let ((?x939 (+ x ?x253)))
 (let ((?x1366 (+ 1 r)))
 (let ((?x2221 (* (- 1) (* ?x1366 ?x1366 ?x1366 ?x939 ?x939 ?x939 (+ 3 s (* 6 r))))))
 (let ((?x953 (+ ?x2221 (* (- 1) (* ?x1366 ?x1366 ?x939 ?x939 (+ 3 s (* 6 r)))) (* ?x1366 ?x939 ?x939 ?x939))))
 (let ((?x1329 (* x00 x00)))
 (let ((?x2345 (* 108 ?x1329)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1125 (* 51 ?x564)))
 (let ((?x1167 (* s00 s00 s00)))
 (let ((?x1232 (* 16 ?x1167)))
 (let ((?x788 (* s00 x00)))
 (let ((?x613 (* (- 108) ?x788)))
 (let ((?x865 (* r00 r00 r00 x00)))
 (let ((?x1922 (* (- 432) ?x865)))
 (let ((?x485 (* 108 ?x495)))
 (let ((?x2351 (+ (* 216 (* r00 s00 x00)) ?x485 (* (- 54) ?x1530) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1922 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x613 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1232 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1125 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x2232) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2345)))
 (let ((?x143 (* 9 s)))
 (let ((?x970 (* (- 9) s00)))
 (let ((?x899 (* (- 15) ?x564)))
 (let ((?x860 (* r00 r00 x00)))
 (let ((?x873 (* (- 36) ?x860)))
 (let ((?x789 (* 6 ?x788)))
 (let ((?x518 (* s s)))
 (let ((?x550 (* 3 ?x518)))
 (let ((?x532 (* (- 54) ?x495)))
 (let ((?x720 (+ (* (- 24) (* s r)) ?x532 (* 36 (* r00 x r)) (* 24 ?x1530) ?x550 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x789 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x873 ?x899 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x970 (* 36 ?x2232) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1616 (* r00 x)))
 (let ((?x1617 (* 18 ?x1616)))
 (let ((?x519 (* 2 ?x518)))
 (let ((?x858 (+ (* (- 9) (* s r)) ?x509 ?x861 ?x519 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x577 ?x1617 ?x351 ?x2229 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2310 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x351 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1530) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1279 (= (+ s00 ?x253 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2030 (and $x1279 (= ?x2310 0) (= ?x858 0) (= ?x720 0) (= ?x2351 0) (not (= (* ?x953 ?x803) 0)))))
 (let ((?x218 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x242 (- (* (- 1) ?x212 ?x212 ?x212 ?x214 ?x218 ?x218 ?x218) (* ?x212 ?x212 ?x214 ?x218 ?x218))))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x245 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) (+ ?x242 (* ?x212 ?x218 ?x218 ?x218)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x249 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x245 0))))))
 (rewrite (= $x249 $x2030)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x251 (asserted $x250)))
 (let ((@x1814 (mp (mp @x251 (quant-intro (proof-bind ?x1652) (= $x250 $x1284)) $x1284) (rewrite (= $x1284 $x1284)) $x1284)))
 (let ((@x2251 (mp~ (mp @x1814 (quant-intro (proof-bind ?x680) (= $x1284 $x592)) $x592) (sk (~ $x592 $x428)) $x428)))
 (let ((@x1251 (mp @x2251 (rewrite (= $x428 $x2309)) $x2309)))
 (let ((@x586 (and-elim @x1251 $x2332)))
 (let ((@x588 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2332) $x2117)) @x586 $x2117)))
 (let (($x1404 (>= ?x815 0)))
 (let ((@x1782 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2332) $x1404)) @x586 $x1404)))
 (let (($x2116 (<= ?x2131 0)))
 (let ((@x2318 (and-elim @x1251 $x390)))
 (let ((@x1802 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x390) $x2116)) @x2318 $x2116)))
 (let (($x2012 (>= ?x2131 0)))
 (let ((@x1818 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x390) $x2012)) @x2318 $x2012)))
 (let (($x1403 (<= ?x1903 0)))
 (let ((@x587 (and-elim @x1251 $x1193)))
 (let ((@x354 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1193) $x1403)) @x587 $x1403)))
 (let (($x1405 (>= ?x1903 0)))
 (let ((@x614 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1193) $x1405)) @x587 $x1405)))
 (let (($x1561 (<= ?x291 0)))
 (let ((@x1418 (and-elim @x1251 $x426)))
 (let ((@x2053 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x426) $x1561)) @x1418 $x1561)))
 (let (($x1394 (>= ?x291 0)))
 (let ((@x2021 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x426) $x1394)) @x1418 $x1394)))
 (let (($x1168 (not (<= ?x429 0))))
 (let (($x1481 (>= ?x429 0)))
 (let (($x919 (not $x1827)))
 (let (($x562 (= ?x676 0)))
 (let (($x2041 (not $x562)))
 (let (($x1475 (not $x1481)))
 (let ((@x2125 (hypothesis $x1475)))
 (let (($x1962 (>= ?x676 0)))
 (let ((@x1676 (hypothesis $x562)))
 (let ((@x1882 ((_ th-lemma arith farkas 1 1 1) @x2125 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2041 $x1962)) @x1676 $x1962) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2041 $x1827)) @x1676 $x1827) false)))
 (let (($x1999 (not $x1962)))
 (let ((@x2092 (hypothesis $x1999)))
 (let ((@x2056 ((_ th-lemma arith) @x2125 @x2092 @x1818 @x1802 @x2021 @x2053 @x614 @x354 @x2021 @x2053 @x614 @x354 @x1818 @x1802 @x1782 @x588 false)))
 (let ((@x825 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x562 $x919 $x1999)) (unit-resolution (lemma @x2056 (or $x1962 $x1481)) @x2125 $x1962) (unit-resolution (lemma @x1882 (or $x2041 $x1481)) @x2125 $x2041) $x919)))
 (let ((@x1915 ((_ th-lemma arith) @x2125 @x825 @x1818 @x1802 @x2021 @x2053 @x614 @x354 @x2021 @x2053 @x614 @x354 @x1818 @x1802 @x1782 @x588 false)))
 (let ((@x2096 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2272 $x1168 $x1475)) (and-elim @x1251 $x2036) (or $x1168 $x1475))))
 (let ((@x427 (unit-resolution @x2096 (lemma @x1915 $x1481) $x1168)))
 (let ((@x2183 ((_ th-lemma arith) @x427 (hypothesis $x919) @x1818 @x1802 @x2021 @x2053 @x614 @x354 @x2021 @x2053 @x614 @x354 @x1818 @x1802 @x1782 @x588 false)))
 (let ((@x932 ((_ th-lemma arith) @x427 @x2092 @x1818 @x1802 @x2021 @x2053 @x614 @x354 @x2021 @x2053 @x614 @x354 @x1818 @x1802 @x1782 @x588 false)))
 ((_ th-lemma arith farkas 1 1 1) @x427 (lemma @x932 $x1962) (lemma @x2183 $x1827) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 7
 :arith-assert-diseq        4
 :arith-assert-lower        47
 :arith-assert-upper        15
 :arith-conflicts           6
 :arith-eq-adapter          8
 :arith-gcd-tests           7
 :arith-grobner             5
 :arith-max-min             1488
 :arith-nonlinear-bounds    34
 :arith-nonlinear-horner    50
 :arith-num-rows            10
 :arith-patches             7
 :arith-patches_succ        7
 :arith-pivots              7
 :arith-pseudo-nonlinear    2
 :arith-row-summations      13
 :arith-tableau-max-columns 123
 :arith-tableau-max-rows    10
 :conflicts                 6
 :decisions                 5
 :del-clause                25
 :final-checks              12
 :max-memory                25.13
 :memory                    19.33
 :mk-bool-var               24
 :mk-clause                 29
 :num-allocs                492331367262.00
 :num-checks                1
 :propagations              20
 :rlimit-count              22329762
 :time                      15.06
 :total-time                15.07)
