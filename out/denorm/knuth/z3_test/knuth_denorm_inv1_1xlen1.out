unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun x!0 () Int)
(declare-fun r!2 () Int)
(declare-fun q!3 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x145 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 4 (* d!1 r!2)) (* (- 1) (* q!3 d!1 d!1)) (* 2 (* q!3 d!1)) (* (- 8) r!2) (* (- 4) (* x!0 d!1)))))
 (let (($x583 (>= ?x145 0)))
 (let (($x146 (= ?x145 0)))
 (let ((?x1453 (* x!0 d!1)))
 (let ((?x1455 (* 4 ?x1453)))
 (let ((?x1451 (* 8 r!2)))
 (let ((?x1427 (* q!3 d!1)))
 (let ((?x956 (* (- 2) ?x1427)))
 (let ((?x1163 (* q!3 d!1 d!1)))
 (let ((?x279 (* r00 d00)))
 (let ((?x280 (* 4 ?x279)))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x329 (+ ?x144 ?x192 ?x176 ?x242 ?x280 (* (- 4) (* d!1 r!2)) ?x1163 ?x956 ?x1451 ?x1455)))
 (let ((?x1170 (+ 2 d!1)))
 (let ((?x1381 (+ (- 8) q!3)))
 (let ((?x512 (* ?x1381 ?x1170 ?x1170 ?x329 r!2)))
 (let (($x524 (= ?x512 0)))
 (let (($x1363 (not $x524)))
 (let ((?x756 (* 32 (* q!3 r!2 r!2))))
 (let ((?x1205 (+ (* 4 (* r00 d00 q!3 d!1 d!1 r!2)) (* (- 32) (* r00 q!3 r!2)) (* 2 (* d00 q00 q!3 d!1 d!1 r!2)) (* (- 1) (* d00 d00 q00 q!3 d!1 d!1 r!2)) (* q!3 q!3 d!1 d!1 d!1 d!1 r!2) (* 16 (* r00 d00 q!3 d!1 r!2)) (* (- 4) (* d00 d00 q00 q!3 r!2)) (* (- 4) (* d00 x00 q!3 d!1 d!1 r!2)) ?x756 (* (- 8) (* q!3 d!1 d!1 r!2 r!2)) (* 16 (* r00 d00 q!3 r!2)) (* 2 (* q!3 q!3 d!1 d!1 d!1 r!2)) (* 8 (* d00 q00 q!3 d!1 r!2)) (* (- 16) (* d00 x00 q!3 d!1 r!2)) (* 4 (* x!0 q!3 d!1 d!1 d!1 r!2)) (* 16 (* q!3 d!1 r!2 r!2)) (* 16 (* x!0 q!3 d!1 r!2)) (* (- 4) (* q!3 q!3 d!1 d!1 r!2)) (* (- 4) (* d00 d00 q00 q!3 d!1 r!2)) (* (- 8) (* r00 q!3 d!1 d!1 r!2)) (* (- 32) (* r00 q!3 d!1 r!2)) (* (- 8) (* q!3 q!3 d!1 r!2)) (* 8 (* d00 q00 q!3 r!2)) (* (- 16) (* d00 x00 q!3 r!2)) (* 16 (* x!0 q!3 d!1 d!1 r!2)) (* (- 4) (* q!3 d!1 d!1 d!1 r!2 r!2)))))
 (let (($x1206 (= ?x1205 0)))
 (let ((?x1171 (+ (- 4) q!3)))
 (let ((?x346 (* ?x1171 ?x1170 ?x1170 ?x329 r!2)))
 (let (($x867 (= ?x346 0)))
 (let (($x535 (not $x867)))
 (let (($x606 (or $x535 (not (= (* ?x1170 ?x1170 (+ 4 q!3) ?x329 r!2) 0)) (not $x1206) $x1363)))
 (let (($x572 (and $x146 $x606)))
 (let ((?x1165 (* (- 4) (* r!2 d!1))))
 (let ((?x366 (+ ?x1451 ?x144 ?x192 ?x176 ?x242 ?x280 (* (- 8) d!1) ?x1455 ?x1163 ?x956 ?x1165 (* 2 (* d!1 4)))))
 (let ((?x369 (+ 4 q!3)))
 (let ((?x169 (+ ?x1451 ?x144 ?x192 ?x176 ?x242 ?x280 (* (- 8) (* d!1 2)) (* 16 d!1) ?x1455 ?x1163 ?x956 ?x1165)))
 (let ((?x490 (+ ?x1451 ?x144 ?x192 ?x176 ?x242 ?x280 (* (- 4) (* d!1 2)) (* 8 d!1) ?x1455 ?x1163 ?x956 ?x1165)))
 (let ((?x1167 (+ (* 8 (* q!3 r!2 r00 d00 d!1)) ?x756 (* (- 8) (* q!3 r!2 d00 x00 d!1)) (* (- 2) (* q!3 r!2 d00 d00 q00 d!1)) (* 2 (* d!1 ?x1455 r!2 q!3)) (* 2 (* d!1 ?x242 r!2 q!3)) (* 2 (* d!1 ?x176 r!2 q!3)) (* (- 16) (* q!3 r!2 r00 d!1)) (* (- 8) (* q!3 r!2 r00 d!1 d!1)) (* 8 (* q!3 r!2 x!0 d!1 d!1)) (* 16 (* q!3 r!2 x!0 d!1)) (* 2 (* d!1 ?x192 r!2 q!3)) (* 2 (* d!1 ?x956 r!2 q!3)) (* 4 (* q!3 r!2 x!0 d!1 d!1 d!1)) (* 2 (* d!1 ?x1451 r!2 q!3)) (* 2 (* q!3 r!2 d00 q00 d!1 d!1)) (* 4 (* q!3 r!2 r00 d00 d!1 d!1)) (* (- 32) (* q!3 r!2 r00)) (* (- 4) (* q!3 r!2 d00 d00 q00)) (* 2 (* d!1 ?x1165 r!2 q!3)) (* 2 (* d!1 ?x280 r!2 q!3)) (* (- 16) (* q!3 r!2 d00 x00)) (* (- 8) (* q!3 q!3 r!2 d!1)) (* 8 (* q!3 r!2 d00 q00)) (* 4 (* q!3 r!2 d00 q00 d!1)) (* 16 (* q!3 r!2 r00 d00)) (* 2 (* d!1 ?x1163 r!2 q!3)) (* q!3 q!3 r!2 d!1 d!1 d!1 d!1) (* (- 4) (* q!3 r!2 r!2 d!1 d!1 d!1)) (* 2 (* d!1 ?x144 r!2 q!3)) (* (- 4) (* q!3 r!2 d00 x00 d!1 d!1)) (* (- 1) (* q!3 r!2 d00 d00 q00 d!1 d!1)))))
 (let (($x178 (or (not (= ?x1167 0)) (not (= (* ?x1171 ?x1170 ?x1170 ?x490 r!2) 0)) (not (= (* ?x1381 ?x1170 ?x1170 ?x169 r!2) 0)) (not (= (* ?x1170 ?x1170 ?x369 ?x366 r!2) 0)))))
 (let (($x526 (and (= (+ ?x1451 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1455 ?x1163 ?x956 ?x1165) 0) $x178)))
 (let (($x598 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1351 (* 2 (* d 4))))
 (let ((?x1114 (* r d)))
 (let ((?x1117 (* (- 4) ?x1114)))
 (let ((?x1086 (* (- 2) (* q d))))
 (let ((?x1085 (* q d d)))
 (let ((?x356 (* 4 (* x d))))
 (let ((?x1338 (* (- 8) d)))
 (let ((?x279 (* r00 d00)))
 (let ((?x280 (* 4 ?x279)))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x173 (* 8 r)))
 (let ((?x1356 (+ 4 q)))
 (let ((?x1355 (+ 2 d)))
 (let ((?x1006 (* ?x1355 ?x1355 ?x1356 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1338 ?x356 ?x1085 ?x1086 ?x1117 ?x1351) r)))
 (let ((?x1396 (* 16 d)))
 (let ((?x1099 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 (* (- 8) (* d 2)) ?x1396 ?x356 ?x1085 ?x1086 ?x1117)))
 (let ((?x1407 (+ (- 8) q)))
 (let ((?x1387 (* 8 d)))
 (let ((?x949 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 (* (- 4) (* d 2)) ?x1387 ?x356 ?x1085 ?x1086 ?x1117)))
 (let ((?x1392 (+ (- 4) q)))
 (let ((?x1331 (* (- 4) (* q r r d d d))))
 (let ((?x1327 (* q q r d d d d)))
 (let ((?x1201 (* 16 (* q r r00 d00))))
 (let ((?x1187 (* 8 (* q r d00 q00))))
 (let ((?x1185 (* (- 8) (* q q r d))))
 (let ((?x1179 (* (- 16) (* q r d00 x00))))
 (let ((?x1148 (* (- 4) (* q r d00 d00 q00))))
 (let ((?x1128 (* (- 32) (* q r r00))))
 (let ((?x294 (* 32 (* q r r))))
 (let ((?x873 (+ (* 8 (* q r r00 d00 d)) ?x294 (* (- 8) (* q r d00 x00 d)) (* (- 2) (* q r d00 d00 q00 d)) (* 2 (* d ?x356 r q)) (* 2 (* d ?x242 r q)) (* 2 (* d ?x176 r q)) (* (- 16) (* q r r00 d)) (* (- 8) (* q r r00 d d)) (* 8 (* q r x d d)) (* 16 (* q r x d)) (* 2 (* d ?x192 r q)) (* 2 (* d ?x1086 r q)) (* 4 (* q r x d d d)) (* 2 (* d ?x173 r q)) (* 2 (* q r d00 q00 d d)) (* 4 (* q r r00 d00 d d)) ?x1128 ?x1148 (* 2 (* d ?x1117 r q)) (* 2 (* d ?x280 r q)) ?x1179 ?x1185 ?x1187 (* 4 (* q r d00 q00 d)) ?x1201 (* 2 (* d ?x1085 r q)) ?x1327 ?x1331 (* 2 (* d ?x144 r q)) (* (- 4) (* q r d00 x00 d d)) (* (- 1) (* q r d00 d00 q00 d d)))))
 (let (($x920 (or (not (= ?x873 0)) (not (= (* ?x1392 ?x1355 ?x1355 ?x949 r) 0)) (not (= (* ?x1407 ?x1355 ?x1355 ?x1099 r) 0)) (not (= ?x1006 0)))))
 (and (= (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x356 ?x1085 ?x1086 ?x1117) 0) $x920)))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x433 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x965 (* 4 (* d00 r00))))
 (let ((?x1355 (+ 2 d)))
 (let ((?x479 (* (- 4) (* ?x1355 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x475 (* 4 (* ?x1355 r))))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x1387 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1279 (* (- 8) x)))
 (let ((?x389 (* 16 r)))
 (let ((?x496 (+ 16 ?x389 ?x1279 ?x30 ?x1387 ?x144 ?x475 ?x176 ?x192 (* ?x1355 ?x1355 (+ 4 q)) (* (- 2) (* ?x1355 (+ 4 q))) ?x242 ?x479 ?x965)))
 (let ((?x1356 (+ 4 q)))
 (let (($x658 (not (= (* ?x1355 ?x1355 ?x1356 ?x496 r) 0))))
 (let ((?x1325 (* ?x1355 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x1338 (* (- 8) d)))
 (let ((?x1377 (+ (- 16) ?x389 ?x1279 ?x30 ?x1338 ?x144 ?x475 ?x176 ?x192 (* (+ (- 4) q) ?x1355 ?x1355) (* (- 2) (* (+ (- 4) q) ?x1355)) ?x242 (* (- 4) ?x1325) ?x965)))
 (let ((?x1392 (+ (- 4) q)))
 (let (($x424 (not (= (* ?x1392 ?x1355 ?x1355 ?x1377 r) 0))))
 (let ((?x452 (+ ?x389 ?x1279 ?x30 ?x144 ?x475 ?x176 ?x192 (* ?x1355 ?x1355 q) (* (- 2) (* ?x1355 q)) ?x242 (* (- 4) (* ?x1355 (+ (* 2 r) (* (- 1) x) q))) ?x965)))
 (let (($x285 (not (= (* ?x1355 ?x1355 ?x452 r q) 0))))
 (let ((?x1218 (* ?x1355 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x260 (+ (- 32) ?x389 ?x1279 ?x30 (* (- 16) d) ?x144 ?x475 ?x176 ?x192 (* (+ (- 8) q) ?x1355 ?x1355) (* (- 2) (* (+ (- 8) q) ?x1355)) ?x242 (* (- 4) ?x1218) ?x965)))
 (let ((?x1407 (+ (- 8) q)))
 (let (($x269 (not (= (* ?x1407 ?x1355 ?x1355 ?x260 r) 0))))
 (let ((?x356 (* 4 (* x d))))
 (let ((?x173 (* 8 r)))
 (let ((?x455 (+ ?x173 ?x144 ?x356 ?x176 ?x192 (* d d q) (* (- 2) (* d q)) ?x242 (* (- 4) (* d r)) ?x965)))
 (let (($x464 (= ?x455 0)))
 (and $x464 (or $x269 $x285 $x424 $x658))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x898 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1351 (* 2 (* d 4))))
 (let ((?x1114 (* r d)))
 (let ((?x1117 (* (- 4) ?x1114)))
 (let ((?x1086 (* (- 2) (* q d))))
 (let ((?x1085 (* q d d)))
 (let ((?x356 (* 4 (* x d))))
 (let ((?x1338 (* (- 8) d)))
 (let ((?x279 (* r00 d00)))
 (let ((?x280 (* 4 ?x279)))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x173 (* 8 r)))
 (let ((?x1356 (+ 4 q)))
 (let ((?x1355 (+ 2 d)))
 (let ((?x1006 (* ?x1355 ?x1355 ?x1356 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1338 ?x356 ?x1085 ?x1086 ?x1117 ?x1351) r)))
 (let ((?x1396 (* 16 d)))
 (let ((?x1099 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 (* (- 8) (* d 2)) ?x1396 ?x356 ?x1085 ?x1086 ?x1117)))
 (let ((?x1407 (+ (- 8) q)))
 (let ((?x1387 (* 8 d)))
 (let ((?x949 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 (* (- 4) (* d 2)) ?x1387 ?x356 ?x1085 ?x1086 ?x1117)))
 (let ((?x1392 (+ (- 4) q)))
 (let ((?x1331 (* (- 4) (* q r r d d d))))
 (let ((?x1327 (* q q r d d d d)))
 (let ((?x1201 (* 16 (* q r r00 d00))))
 (let ((?x1187 (* 8 (* q r d00 q00))))
 (let ((?x1185 (* (- 8) (* q q r d))))
 (let ((?x1179 (* (- 16) (* q r d00 x00))))
 (let ((?x1148 (* (- 4) (* q r d00 d00 q00))))
 (let ((?x1128 (* (- 32) (* q r r00))))
 (let ((?x294 (* 32 (* q r r))))
 (let ((?x873 (+ (* 8 (* q r r00 d00 d)) ?x294 (* (- 8) (* q r d00 x00 d)) (* (- 2) (* q r d00 d00 q00 d)) (* 2 (* d ?x356 r q)) (* 2 (* d ?x242 r q)) (* 2 (* d ?x176 r q)) (* (- 16) (* q r r00 d)) (* (- 8) (* q r r00 d d)) (* 8 (* q r x d d)) (* 16 (* q r x d)) (* 2 (* d ?x192 r q)) (* 2 (* d ?x1086 r q)) (* 4 (* q r x d d d)) (* 2 (* d ?x173 r q)) (* 2 (* q r d00 q00 d d)) (* 4 (* q r r00 d00 d d)) ?x1128 ?x1148 (* 2 (* d ?x1117 r q)) (* 2 (* d ?x280 r q)) ?x1179 ?x1185 ?x1187 (* 4 (* q r d00 q00 d)) ?x1201 (* 2 (* d ?x1085 r q)) ?x1327 ?x1331 (* 2 (* d ?x144 r q)) (* (- 4) (* q r d00 x00 d d)) (* (- 1) (* q r d00 d00 q00 d d)))))
 (let (($x920 (or (not (= ?x873 0)) (not (= (* ?x1392 ?x1355 ?x1355 ?x949 r) 0)) (not (= (* ?x1407 ?x1355 ?x1355 ?x1099 r) 0)) (not (= ?x1006 0)))))
 (let (($x975 (and (= (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x356 ?x1085 ?x1086 ?x1117) 0) $x920)))
 (let ((?x965 (* 4 (* d00 r00))))
 (let ((?x479 (* (- 4) (* ?x1355 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x475 (* 4 (* ?x1355 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x1279 (* (- 8) x)))
 (let ((?x389 (* 16 r)))
 (let ((?x496 (+ 16 ?x389 ?x1279 ?x30 ?x1387 ?x144 ?x475 ?x176 ?x192 (* ?x1355 ?x1355 ?x1356) (* (- 2) (* ?x1355 ?x1356)) ?x242 ?x479 ?x965)))
 (let (($x658 (not (= (* ?x1355 ?x1355 ?x1356 ?x496 r) 0))))
 (let ((?x1325 (* ?x1355 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x1377 (+ (- 16) ?x389 ?x1279 ?x30 ?x1338 ?x144 ?x475 ?x176 ?x192 (* ?x1392 ?x1355 ?x1355) (* (- 2) (* ?x1392 ?x1355)) ?x242 (* (- 4) ?x1325) ?x965)))
 (let (($x424 (not (= (* ?x1392 ?x1355 ?x1355 ?x1377 r) 0))))
 (let ((?x452 (+ ?x389 ?x1279 ?x30 ?x144 ?x475 ?x176 ?x192 (* ?x1355 ?x1355 q) (* (- 2) (* ?x1355 q)) ?x242 (* (- 4) (* ?x1355 (+ (* 2 r) (* (- 1) x) q))) ?x965)))
 (let (($x285 (not (= (* ?x1355 ?x1355 ?x452 r q) 0))))
 (let ((?x1218 (* ?x1355 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x260 (+ (- 32) ?x389 ?x1279 ?x30 (* (- 16) d) ?x144 ?x475 ?x176 ?x192 (* ?x1407 ?x1355 ?x1355) (* (- 2) (* ?x1407 ?x1355)) ?x242 (* (- 4) ?x1218) ?x965)))
 (let (($x269 (not (= (* ?x1407 ?x1355 ?x1355 ?x260 r) 0))))
 (let ((?x455 (+ ?x173 ?x144 ?x356 ?x176 ?x192 (* d d q) (* (- 2) (* d q)) ?x242 (* (- 4) (* d r)) ?x965)))
 (let (($x464 (= ?x455 0)))
 (let (($x1166 (and $x464 (or $x269 $x285 $x424 $x658))))
 (rewrite (= $x1166 $x975))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1318 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x965 (* 4 (* d00 r00))))
 (let ((?x451 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x475 (* 4 (* (+ 2 d) r))))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x1279 (* (- 8) x)))
 (let ((?x389 (* 16 r)))
 (let ((?x452 (+ ?x389 ?x1279 ?x30 ?x144 ?x475 ?x176 ?x192 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x242 ?x451 ?x965)))
 (let ((?x1355 (+ 2 d)))
 (let (($x285 (not (= (* ?x1355 ?x1355 ?x452 r q) 0))))
 (let ((?x1325 (* ?x1355 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x1338 (* (- 8) d)))
 (let ((?x1377 (+ (- 16) ?x389 ?x1279 ?x30 ?x1338 ?x144 ?x475 ?x176 ?x192 (* (+ (- 4) q) ?x1355 ?x1355) (* (- 2) (* (+ (- 4) q) ?x1355)) ?x242 (* (- 4) ?x1325) ?x965)))
 (let ((?x1392 (+ (- 4) q)))
 (let (($x424 (not (= (* ?x1392 ?x1355 ?x1355 ?x1377 r) 0))))
 (let ((?x479 (* (- 4) (* ?x1355 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x1387 (* 8 d)))
 (let ((?x496 (+ 16 ?x389 ?x1279 ?x30 ?x1387 ?x144 ?x475 ?x176 ?x192 (* ?x1355 ?x1355 (+ 4 q)) (* (- 2) (* ?x1355 (+ 4 q))) ?x242 ?x479 ?x965)))
 (let ((?x1356 (+ 4 q)))
 (let (($x658 (not (= (* ?x1355 ?x1355 ?x1356 ?x496 r) 0))))
 (let ((?x1218 (* ?x1355 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x260 (+ (- 32) ?x389 ?x1279 ?x30 (* (- 16) d) ?x144 ?x475 ?x176 ?x192 (* (+ (- 8) q) ?x1355 ?x1355) (* (- 2) (* (+ (- 8) q) ?x1355)) ?x242 (* (- 4) ?x1218) ?x965)))
 (let ((?x1407 (+ (- 8) q)))
 (let (($x269 (not (= (* ?x1407 ?x1355 ?x1355 ?x260 r) 0))))
 (let ((?x356 (* 4 (* x d))))
 (let ((?x173 (* 8 r)))
 (let ((?x455 (+ ?x173 ?x144 ?x356 ?x176 ?x192 (* d d q) (* (- 2) (* d q)) ?x242 (* (- 4) (* d r)) ?x965)))
 (let (($x464 (= ?x455 0)))
 (and $x464 (or $x269 $x658 $x424 $x285)))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1161 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x965 (* 4 (* d00 r00))))
 (let ((?x1355 (+ 2 d)))
 (let ((?x479 (* (- 4) (* ?x1355 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x475 (* 4 (* ?x1355 r))))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x1387 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1279 (* (- 8) x)))
 (let ((?x389 (* 16 r)))
 (let ((?x496 (+ 16 ?x389 ?x1279 ?x30 ?x1387 ?x144 ?x475 ?x176 ?x192 (* ?x1355 ?x1355 (+ 4 q)) (* (- 2) (* ?x1355 (+ 4 q))) ?x242 ?x479 ?x965)))
 (let ((?x1356 (+ 4 q)))
 (let (($x658 (not (= (* ?x1355 ?x1355 ?x1356 ?x496 r) 0))))
 (let ((?x1325 (* ?x1355 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x1338 (* (- 8) d)))
 (let ((?x1377 (+ (- 16) ?x389 ?x1279 ?x30 ?x1338 ?x144 ?x475 ?x176 ?x192 (* (+ (- 4) q) ?x1355 ?x1355) (* (- 2) (* (+ (- 4) q) ?x1355)) ?x242 (* (- 4) ?x1325) ?x965)))
 (let ((?x1392 (+ (- 4) q)))
 (let (($x424 (not (= (* ?x1392 ?x1355 ?x1355 ?x1377 r) 0))))
 (let ((?x452 (+ ?x389 ?x1279 ?x30 ?x144 ?x475 ?x176 ?x192 (* ?x1355 ?x1355 q) (* (- 2) (* ?x1355 q)) ?x242 (* (- 4) (* ?x1355 (+ (* 2 r) (* (- 1) x) q))) ?x965)))
 (let (($x285 (not (= (* ?x1355 ?x1355 ?x452 r q) 0))))
 (let ((?x1218 (* ?x1355 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x260 (+ (- 32) ?x389 ?x1279 ?x30 (* (- 16) d) ?x144 ?x475 ?x176 ?x192 (* (+ (- 8) q) ?x1355 ?x1355) (* (- 2) (* (+ (- 8) q) ?x1355)) ?x242 (* (- 4) ?x1218) ?x965)))
 (let ((?x1407 (+ (- 8) q)))
 (let (($x269 (not (= (* ?x1407 ?x1355 ?x1355 ?x260 r) 0))))
 (let ((?x356 (* 4 (* x d))))
 (let ((?x173 (* 8 r)))
 (let ((?x455 (+ ?x173 ?x144 ?x356 ?x176 ?x192 (* d d q) (* (- 2) (* d q)) ?x242 (* (- 4) (* d r)) ?x965)))
 (let (($x464 (= ?x455 0)))
 (let (($x1166 (and $x464 (or $x269 $x285 $x424 $x658))))
 (let (($x1268 (and $x464 (or $x269 $x658 $x424 $x285))))
 (rewrite (= $x1268 $x1166))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x137 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x123 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x117 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let (($x133 (= (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) ?x62 ?x62 ?x123 r) 0)))
 (let ((?x103 (- q 4)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x32 (* 8 r00)))
 (let ((?x99 (- (* 8 (- (- (+ (- (* 2 r) x) q) d) 2)) ?x32)))
 (let ((?x107 (- (+ (- (- (+ ?x99 ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x103)) (* 2 ?x62 ?x103))))
 (let ((?x110 (- (+ ?x107 ?x49) (* 4 ?x62 (- (- (+ (- (* 2 r) x) q) d) 2)))))
 (let ((?x83 (- (+ (- (* 8 (+ (- (* 2 r) x) q)) ?x32) ?x63) ?x39)))
 (let ((?x89 (+ (- (+ (- ?x83 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x93 (* (+ (- ?x89 (* 4 ?x62 (+ (- (* 2 r) x) q))) ?x53) ?x62 ?x62 q r)))
 (let ((?x67 (+ q 4)))
 (let ((?x64 (+ (- (* 8 (+ (- (* 2 r) x) q d 2)) ?x32) ?x63)))
 (let ((?x71 (- (+ (- (- ?x64 ?x39) ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67))))
 (let ((?x74 (- (+ ?x71 ?x49) (* 4 ?x62 (+ (- (* 2 r) x) q d 2)))))
 (let (($x135 (or (not (= (* (+ ?x74 ?x53) ?x62 ?x62 ?x67 r) 0)) (not (= ?x93 0)) (not (= (* (+ ?x110 ?x53) ?x62 ?x62 ?x103 r) 0)) (not $x133))))
 (let ((?x44 (* d d q)))
 (let ((?x45 (+ (- (- (+ (- (* 8 r) ?x32) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (and (= ?x54 0) $x135)))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x404 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x965 (* 4 (* d00 r00))))
 (let ((?x688 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x561 (* 4 (* (+ 2 d) r))))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x163 (* 8 q)))
 (let ((?x1279 (* (- 8) x)))
 (let ((?x570 (* 16 r)))
 (let ((?x1126 (+ ?x570 ?x1279 ?x163 ?x144 ?x561 ?x176 ?x192 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x242 ?x688 ?x965)))
 (let ((?x247 (+ 2 d)))
 (let ((?x273 (* ?x247 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x434 (* (- 8) d)))
 (let ((?x1371 (+ (- 16) ?x570 ?x1279 ?x163 ?x434 ?x144 ?x561 ?x176 ?x192 (* (+ (- 4) q) ?x247 ?x247) (* (- 2) (* (+ (- 4) q) ?x247)) ?x242 (* (- 4) ?x273) ?x965)))
 (let ((?x1075 (+ (- 4) q)))
 (let ((?x293 (* (- 4) (* ?x247 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x173 (* 8 d)))
 (let ((?x653 (+ 16 ?x570 ?x1279 ?x163 ?x173 ?x144 ?x561 ?x176 ?x192 (* ?x247 ?x247 (+ 4 q)) (* (- 2) (* ?x247 (+ 4 q))) ?x242 ?x293 ?x965)))
 (let ((?x331 (+ 4 q)))
 (let ((?x323 (* ?x247 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x1190 (+ (- 32) ?x570 ?x1279 ?x163 (* (- 16) d) ?x144 ?x561 ?x176 ?x192 (* (+ (- 8) q) ?x247 ?x247) (* (- 2) (* (+ (- 8) q) ?x247)) ?x242 (* (- 4) ?x323) ?x965)))
 (let ((?x1305 (+ (- 8) q)))
 (let (($x201 (or (not (= (* ?x1305 ?x247 ?x247 ?x1190 r) 0)) (not (= (* ?x247 ?x247 ?x331 ?x653 r) 0)) (not (= (* ?x1075 ?x247 ?x247 ?x1371 r) 0)) (not (= (* ?x247 ?x247 ?x1126 r q) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x946 (+ ?x30 ?x144 (* 4 (* x d)) ?x176 ?x192 ?x44 (* (- 2) (* d q)) ?x242 (* (- 4) (* d r)) ?x965)))
 (and (= ?x946 0) $x201))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x185 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x965 (* 4 (* d00 r00))))
 (let ((?x688 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x561 (* 4 (* (+ 2 d) r))))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x163 (* 8 q)))
 (let ((?x1279 (* (- 8) x)))
 (let ((?x570 (* 16 r)))
 (let ((?x1126 (+ ?x570 ?x1279 ?x163 ?x144 ?x561 ?x176 ?x192 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x242 ?x688 ?x965)))
 (let ((?x247 (+ 2 d)))
 (let ((?x273 (* ?x247 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x434 (* (- 8) d)))
 (let ((?x1371 (+ (- 16) ?x570 ?x1279 ?x163 ?x434 ?x144 ?x561 ?x176 ?x192 (* (+ (- 4) q) ?x247 ?x247) (* (- 2) (* (+ (- 4) q) ?x247)) ?x242 (* (- 4) ?x273) ?x965)))
 (let ((?x1075 (+ (- 4) q)))
 (let ((?x293 (* (- 4) (* ?x247 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x173 (* 8 d)))
 (let ((?x653 (+ 16 ?x570 ?x1279 ?x163 ?x173 ?x144 ?x561 ?x176 ?x192 (* ?x247 ?x247 (+ 4 q)) (* (- 2) (* ?x247 (+ 4 q))) ?x242 ?x293 ?x965)))
 (let ((?x331 (+ 4 q)))
 (let ((?x323 (* ?x247 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x1190 (+ (- 32) ?x570 ?x1279 ?x163 (* (- 16) d) ?x144 ?x561 ?x176 ?x192 (* (+ (- 8) q) ?x247 ?x247) (* (- 2) (* (+ (- 8) q) ?x247)) ?x242 (* (- 4) ?x323) ?x965)))
 (let ((?x1305 (+ (- 8) q)))
 (let (($x201 (or (not (= (* ?x1305 ?x247 ?x247 ?x1190 r) 0)) (not (= (* ?x247 ?x247 ?x331 ?x653 r) 0)) (not (= (* ?x1075 ?x247 ?x247 ?x1371 r) 0)) (not (= (* ?x247 ?x247 ?x1126 r q) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x946 (+ ?x30 ?x144 (* 4 (* x d)) ?x176 ?x192 ?x44 (* (- 2) (* d q)) ?x242 (* (- 4) (* d r)) ?x965)))
 (let (($x456 (and (= ?x946 0) $x201)))
 (let ((?x123 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x117 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let (($x133 (= (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) ?x62 ?x62 ?x123 r) 0)))
 (let ((?x103 (- q 4)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x32 (* 8 r00)))
 (let ((?x99 (- (* 8 (- (- (+ (- (* 2 r) x) q) d) 2)) ?x32)))
 (let ((?x107 (- (+ (- (- (+ ?x99 ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x103)) (* 2 ?x62 ?x103))))
 (let ((?x110 (- (+ ?x107 ?x49) (* 4 ?x62 (- (- (+ (- (* 2 r) x) q) d) 2)))))
 (let ((?x83 (- (+ (- (* 8 (+ (- (* 2 r) x) q)) ?x32) ?x63) ?x39)))
 (let ((?x89 (+ (- (+ (- ?x83 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x93 (* (+ (- ?x89 (* 4 ?x62 (+ (- (* 2 r) x) q))) ?x53) ?x62 ?x62 q r)))
 (let ((?x67 (+ q 4)))
 (let ((?x64 (+ (- (* 8 (+ (- (* 2 r) x) q d 2)) ?x32) ?x63)))
 (let ((?x71 (- (+ (- (- ?x64 ?x39) ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67))))
 (let ((?x74 (- (+ ?x71 ?x49) (* 4 ?x62 (+ (- (* 2 r) x) q d 2)))))
 (let (($x135 (or (not (= (* (+ ?x74 ?x53) ?x62 ?x62 ?x67 r) 0)) (not (= ?x93 0)) (not (= (* (+ ?x110 ?x53) ?x62 ?x62 ?x103 r) 0)) (not $x133))))
 (let ((?x48 (- (+ (- (- (+ (- ?x30 ?x32) (* 4 d x)) ?x39) ?x41) ?x44) (* 2 d q))))
 (let (($x136 (and (= (+ (- (+ ?x48 ?x49) (* 4 d r)) ?x53) 0) $x135)))
 (rewrite (= $x136 $x456)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1403 (trans (quant-intro (proof-bind ?x185) (= $x137 $x404)) (elim-unused (= $x404 $x1318)) (= $x137 $x1318))))
 (let ((@x27 (asserted $x137)))
 (let ((@x885 (mp (mp @x27 @x1403 $x1318) (quant-intro (proof-bind ?x1161) (= $x1318 $x433)) $x433)))
 (let ((@x407 (mp (mp @x885 (rewrite (= $x433 $x433)) $x433) (quant-intro (proof-bind ?x898) (= $x433 $x598)) $x598)))
 (let ((@x1012 (mp (mp~ @x407 (sk (~ $x598 $x526)) $x526) (rewrite (= $x526 $x572)) $x572)))
 (let ((@x854 (and-elim @x1012 $x146)))
 (let ((@x541 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x146) $x583)) @x854 $x583)))
 (let (($x347 (<= ?x145 0)))
 (let ((@x481 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x146) $x347)) @x854 $x347)))
 (let (($x1418 (not (<= ?x512 0))))
 (let (($x580 (<= ?x346 0)))
 (let (($x367 (>= ?x346 0)))
 (let ((@x545 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x867 (not $x580) (not $x367))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x367)) @x481 @x541 false) $x367) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x580)) @x481 @x541 false) $x580) $x867)))
 (let (($x1283 (>= ?x1205 0)))
 (let (($x215 (<= ?x1205 0)))
 (let ((@x1370 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1206 (not $x215) (not $x1283))) (lemma ((_ th-lemma arith) (hypothesis (not $x215)) @x541 @x481 false) $x215) (lemma ((_ th-lemma arith) (hypothesis (not $x1283)) @x541 @x481 false) $x1283) $x1206)))
 (let ((?x682 (* ?x1170 ?x1170 ?x369 ?x329 r!2)))
 (let (($x549 (= ?x682 0)))
 (let (($x1280 (>= ?x682 0)))
 (let (($x1352 (<= ?x682 0)))
 (let ((@x943 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x549 (not $x1352) (not $x1280))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1352)) @x481 @x541 false) $x1352) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1280)) @x481 @x541 false) $x1280) $x549)))
 (let ((@x608 (unit-resolution (unit-resolution (and-elim @x1012 $x606) @x943 @x1370 (or $x535 $x1363)) @x545 $x1363)))
 (let (($x684 (>= ?x512 0)))
 (let ((@x1419 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x524 $x1418 (not $x684))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x684)) @x481 @x541 false) $x684) @x608 $x1418)))
 ((_ th-lemma arith farkas 1 1 1) @x1419 @x481 @x541 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        7
 :arith-assert-lower        30
 :arith-assert-upper        28
 :arith-conflicts           8
 :arith-eq-adapter          11
 :arith-fixed-eqs           10
 :arith-gcd-tests           2
 :arith-grobner             8
 :arith-max-min             778
 :arith-nonlinear-horner    44
 :arith-num-rows            7
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              2
 :arith-pseudo-nonlinear    18
 :arith-row-summations      1
 :arith-tableau-max-columns 63
 :arith-tableau-max-rows    7
 :conflicts                 8
 :decisions                 24
 :del-clause                31
 :final-checks              8
 :max-memory                19.66
 :memory                    19.19
 :mk-bool-var               33
 :mk-clause                 44
 :num-allocs                549074
 :num-checks                1
 :propagations              36
 :rlimit-count              9458
 :time                      0.01
 :total-time                0.03)
