unsat
((set-logic NIA)
(declare-fun x!0 () Int)
(declare-fun r!1 () Int)
(proof
(let ((?x3580 (* (- 1) r!1)))
 (let ((?x3112 (* r!1 r!1)))
 (let ((?x36 (* r00 r00)))
 (let ((?x2041 (* (- 1) ?x36)))
 (let ((?x1106 (* (- 2) x00)))
 (let ((?x482 (+ r00 ?x1106 ?x2041 ?x3112 ?x3580 (* 2 x!0))))
 (let (($x2896 (<= ?x482 0)))
 (let (($x2640 (= ?x482 0)))
 (let ((?x3578 (+ ?x3580 x!0)))
 (let ((?x3287 (+ 1 r!1)))
 (let ((?x5027 (* r00 ?x3287 ?x3287 ?x3287 ?x3287 ?x3578 ?x3578 ?x3578)))
 (let ((?x3621 (* x!0 x!0 x!0)))
 (let ((?x3290 (* 11 (* r!1 r!1 r!1))))
 (let ((?x3596 (* (- 1) (* r!1 r!1 r!1 r!1 r!1))))
 (let ((?x3147 (* (- 2) (* r!1 x!0 x!0 x!0 x!0))))
 (let ((?x217 (* 10 (* r!1 r!1 x!0 x!0 x!0))))
 (let ((?x3603 (* (- 11) (* r!1 x!0))))
 (let ((?x3520 (* (- 17) (* r!1 r!1 x!0))))
 (let ((?x130 (* 3 (* r!1 x!0 x!0 x!0))))
 (let ((?x3548 (* 3 (* ?x3287 ?x3287 ?x3287 ?x3287 ?x3578 ?x3578 ?x3578))))
 (let ((?x3165 (* 9 (* r!1 r!1 r!1 r!1 x!0))))
 (let ((?x3162 (* 6 (* r!1 r!1 r!1 r!1))))
 (let ((?x3551 (* (- 1) x!0)))
 (let ((?x3280 (* 7 ?x3112)))
 (let ((?x3106 (* (- 6) (* r!1 r!1 r!1 x!0))))
 (let ((?x2846 (* (- 2) (* ?x3287 ?x3287 ?x3287 ?x3287 ?x3578 ?x3578))))
 (let ((?x2838 (* (- 16) (* r!1 r!1 r!1 x!0 x!0))))
 (let ((?x2828 (* (- 4) (* ?x3287 ?x3287 ?x3287 ?x3578 ?x3578 ?x3578 ?x3578))))
 (let ((?x2826 (* (- 2) (* ?x3287 ?x3287 ?x3287 ?x3578 ?x3578 ?x3578))))
 (let ((?x2823 (* (- 2) (* x00 ?x3287 ?x3287 ?x3287 ?x3287 ?x3578 ?x3578 ?x3578))))
 (let ((?x2814 (* 2 (* ?x3287 ?x3287 ?x3287 ?x3287 ?x3287 ?x3578))))
 (let ((?x2820 (* (- 3) (* ?x3287 ?x3287 ?x3287 ?x3287 ?x3287 ?x3578 ?x3578 ?x3578))))
 (let ((?x2799 (* 2 (* ?x3287 ?x3287 ?x3578 ?x3578 ?x3578 ?x3578))))
 (let ((?x1769 (* 2 (* ?x3287 ?x3287 ?x3287 ?x3287 ?x3578 ?x3578 ?x3578 ?x3578))))
 (let ((?x1670 (* (- 1) (* ?x3287 ?x3287 ?x3287 ?x3287 ?x3287 ?x3287 ?x3578))))
 (let ((?x1759 (* ?x3287 ?x3287 ?x3287 ?x3287 ?x3287 ?x3287 ?x3578 ?x3578 ?x3578)))
 (let ((?x4991 (* (- 1) (* r00 r00 ?x3287 ?x3287 ?x3287 ?x3287 ?x3578 ?x3578 ?x3578))))
 (let ((?x136 (* (- 3) (* r!1 r!1 x!0 x!0))))
 (let ((?x134 (* 5 (* r!1 x!0 x!0))))
 (let ((?x128 (* 4 (* x!0 x!0))))
 (let ((?x2965 (+ ?x128 ?x134 ?x136 ?x4991 (* (- 1) (* r00 x!0 x!0 x!0)) (* (- 4) (* r00 r00 r!1 r!1 r!1)) ?x1759 ?x1670 ?x1769 ?x2799 (* (- 30) (* x00 r!1 r!1 r!1 x!0 x!0)) (* (- 4) (* x00 r!1 r!1 r!1 r!1 r!1 r!1)) (* (- 1) (* r00 r!1)) (* (- 6) (* r00 r00 r!1 r!1 r!1 r!1 x!0 x!0)) (* 2 (* x00 x!0 x!0 x!0)) (* 10 (* x00 r!1 x!0 x!0 x!0)) (* 12 (* x00 r!1 r!1 r!1 r!1 r!1 x!0)) ?x2820 ?x2814 ?x2823 ?x2826 ?x2828 ?x2838 ?x2846 (* 10 (* x00 r!1 r!1 x!0 x!0 x!0)) (* 4 (* x00 r!1 r!1 r!1 x!0 x!0 x!0)) (* 4 (* r00 r!1 r!1 r!1)) (* 8 (* r00 r!1 r!1 r!1 r!1)) (* 6 (* r00 r!1 r!1 r!1 r!1 r!1)) (* (- 8) (* r00 r00 r!1 r!1 r!1 r!1)) (* (- 6) (* r00 r!1 r!1 x!0)) (* (- 18) (* r00 r!1 r!1 r!1 x!0)) (* 3 (* r00 r!1 x!0 x!0)) (* 15 (* r00 r!1 r!1 x!0 x!0)) ?x3106 ?x3280 r!1 ?x3551 ?x3162 ?x3165 ?x3548 ?x130 (* r00 r00 x!0 x!0 x!0) (* 5 (* r00 r00 r!1 x!0 x!0 x!0)) (* 5 (* r00 r00 r!1 r!1 x!0 x!0 x!0)) (* (- 15) (* r00 r00 r!1 r!1 r!1 x!0 x!0)) ?x3520 ?x3603 ?x217 ?x3147 ?x3596 ?x3290 ?x3621 (* (- 16) (* r00 r!1 r!1 r!1 r!1 x!0)) (* 16 (* r00 r00 r!1 r!1 r!1 r!1 x!0)) (* (- 5) (* r00 r!1 r!1 x!0 x!0 x!0)) (* (- 3) (* r00 r00 r!1 x!0 x!0)) (* (- 15) (* r00 r00 r!1 r!1 x!0 x!0)) (* (- 6) (* r00 r00 r!1 r!1 r!1 r!1 r!1)) (* 18 (* r00 r00 r!1 r!1 r!1 x!0)) (* (- 2) (* x00 x!0)) (* 36 (* x00 r!1 r!1 r!1 x!0)) (* r00 r00 r!1) (* (- 12) (* x00 r!1 r!1 r!1 r!1 r!1)) (* 6 (* r00 r!1 r!1 r!1 r!1 x!0 x!0)) (* 15 (* r00 r!1 r!1 r!1 x!0 x!0)) (* (- 5) (* r00 r!1 x!0 x!0 x!0)) (* 6 (* r00 r00 r!1 r!1 x!0)) (* (- 6) (* x00 r!1 x!0 x!0)) (* 12 (* x00 r!1 r!1 x!0)) (* 32 (* x00 r!1 r!1 r!1 r!1 x!0)) (* (- 12) (* x00 r!1 r!1 r!1 r!1 x!0 x!0)) (* 2 (* x00 r!1)) (* (- 1) (* r00 r00 x!0)) (* 2 (* r00 r00 r!1 r!1 r!1 x!0 x!0 x!0)) (* (- 2) (* r00 r!1 r!1 r!1 x!0 x!0 x!0)) ?x5027 (* (- 2) (* r00 r00 r!1 r!1 r!1 r!1 r!1 r!1)) (* (- 8) (* x00 r!1 r!1 r!1)) (* (- 16) (* x00 r!1 r!1 r!1 r!1)) (* 6 (* r00 r00 r!1 r!1 r!1 r!1 r!1 x!0)) (* (- 30) (* x00 r!1 r!1 x!0 x!0)) (* 2 (* r00 r!1 r!1 r!1 r!1 r!1 r!1)) (* (- 6) (* r00 r!1 r!1 r!1 r!1 r!1 x!0)) (* r00 x!0))))
 (let (($x2946 (= ?x2965 0)))
 (let (($x2777 (not $x2946)))
 (let (($x2945 (and $x2640 $x2777)))
 (let ((?x2798 (+ r!1 ?x3551 ?x3280 (* 2 (* x!0 x!0 x!0 x00)) (* 12 (* r!1 r!1 r!1 r!1 r!1 x!0 x00)) (* 10 (* r!1 x!0 x!0 x!0 x00)) (* 10 (* r!1 r!1 x!0 x!0 x!0 x00)) (* 4 (* r!1 r!1 r!1 x!0 x!0 x!0 x00)) (* 4 (* r!1 r!1 r!1 r00)) (* 8 (* r!1 r!1 r!1 r!1 r00)) (* 6 (* r!1 r!1 r!1 r!1 r!1 r00)) (* (- 6) (* r!1 r!1 x!0 r00)) (* (- 18) (* r!1 r!1 r!1 x!0 r00)) (* (- 16) (* r!1 r!1 r!1 r!1 x!0 r00)) ?x3147 (* 3 (* r!1 x!0 x!0 r00)) (* 15 (* r!1 r!1 x!0 x!0 r00)) (* 15 (* r!1 r!1 r!1 x!0 x!0 r00)) (* (- 1) (* x!0 x!0 x!0 r00)) (* (- 5) (* r!1 x!0 x!0 x!0 r00)) (* (- 5) (* r!1 r!1 x!0 x!0 x!0 r00)) (* (- 1) (* r!1 r00)) (* x!0 r00) ?x3603 ?x3520 ?x3106 ?x3165 ?x3290 ?x3162 ?x3596 (* (- 4) (* r!1 r!1 r!1 r00 r00)) (* (- 8) (* r!1 r!1 r!1 r!1 r00 r00)) (* 16 (* r!1 r!1 r!1 r!1 x!0 r00 r00)) (* (- 3) (* r!1 x!0 x!0 r00 r00)) (* (- 15) (* r!1 r!1 x!0 x!0 r00 r00)) (* (- 15) (* r!1 r!1 r!1 x!0 x!0 r00 r00)) (* (- 6) (* r!1 r!1 r!1 r!1 x!0 x!0 r00 r00)) (* x!0 x!0 x!0 r00 r00) (* (- 4) (* r!1 r!1 r!1 r!1 r!1 r!1 x00)) (* 5 (* r!1 x!0 x!0 x!0 r00 r00)) (* 5 (* r!1 r!1 x!0 x!0 x!0 r00 r00)) ?x3548 (* (- 2) (* r!1 r!1 r!1 r!1 r!1 r!1 r00 r00)) ?x217 ?x130 ?x3621 ?x128 ?x134 ?x136 ?x4991 ?x5027 (* 2 (* r!1 r!1 r!1 x!0 x!0 x!0 r00 r00)) (* r!1 r00 r00) (* (- 1) (* x!0 r00 r00)) (* 2 (* r!1 x00)) (* (- 12) (* r!1 r!1 r!1 r!1 x!0 x!0 x00)) (* 32 (* r!1 r!1 r!1 r!1 x!0 x00)) (* 36 (* r!1 r!1 r!1 x!0 x00)) (* 12 (* r!1 r!1 x!0 x00)) (* (- 2) (* x!0 x00)) ?x1759 ?x1670 ?x1769 ?x2846 (* 2 (* r!1 r!1 r!1 r!1 r!1 r!1 r00)) ?x2838 (* (- 6) (* r!1 r!1 r!1 r!1 r!1 x!0 r00)) (* 6 (* r!1 r!1 r!1 r!1 x!0 x!0 r00)) (* (- 2) (* r!1 r!1 r!1 x!0 x!0 x!0 r00)) ?x2828 ?x2826 ?x2823 (* 18 (* r!1 r!1 r!1 x!0 r00 r00)) (* 6 (* r!1 r!1 x!0 r00 r00)) ?x2820 ?x2814 (* (- 16) (* r!1 r!1 r!1 r!1 x00)) (* (- 8) (* r!1 r!1 r!1 x00)) (* (- 6) (* r!1 r!1 r!1 r!1 r!1 r00 r00)) (* 6 (* r!1 r!1 r!1 r!1 r!1 x!0 r00 r00)) (* (- 6) (* r!1 x!0 x!0 x00)) (* (- 12) (* r!1 r!1 r!1 r!1 r!1 x00)) (* (- 30) (* r!1 r!1 x!0 x!0 x00)) (* (- 30) (* r!1 r!1 r!1 x!0 x!0 x00)) ?x2799)))
 (let ((?x35 (* 2 x00)))
 (let ((?x179 (* (- 1) r00)))
 (let (($x2795 (and (= (+ r!1 (* (- 2) x!0) ?x179 (* (- 1) ?x3112) ?x35 ?x36) 0) (not (= ?x2798 0)))))
 (let (($x5832 (exists ((r Int) (x Int) )(! (let ((?x129 (* (- 1) r)))
 (let ((?x192 (+ ?x129 x)))
 (let ((?x221 (+ 1 r)))
 (let ((?x5514 (* (- 6) (* r x x x00))))
 (let ((?x5482 (* (- 8) (* r r r x00))))
 (let ((?x2324 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192)))
 (let ((?x2013 (* r r00 r00)))
 (let ((?x1507 (* x x x)))
 (let ((?x1227 (* x x x r00 r00)))
 (let ((?x1248 (* (- 3) (* r x x r00 r00))))
 (let ((?x664 (* x r00)))
 (let ((?x809 (* (- 1) x)))
 (let ((?x5825 (+ r ?x809 (* 7 (* r r)) (* 2 (* x x x x00)) (* 12 (* r r r r r x x00)) (* 10 (* r x x x x00)) (* 10 (* r r x x x x00)) (* 4 (* r r r x x x x00)) (* 4 (* r r r r00)) (* 8 (* r r r r r00)) (* 6 (* r r r r r r00)) (* (- 6) (* r r x r00)) (* (- 18) (* r r r x r00)) (* (- 16) (* r r r r x r00)) (* (- 2) (* r x x x x)) (* 3 (* r x x r00)) (* 15 (* r r x x r00)) (* 15 (* r r r x x r00)) (* (- 1) (* x x x r00)) (* (- 5) (* r x x x r00)) (* (- 5) (* r r x x x r00)) (* (- 1) (* r r00)) ?x664 (* (- 11) (* r x)) (* (- 17) (* r r x)) (* (- 6) (* r r r x)) (* 9 (* r r r r x)) (* 11 (* r r r)) (* 6 (* r r r r)) (* (- 1) (* r r r r r)) (* (- 4) (* r r r r00 r00)) (* (- 8) (* r r r r r00 r00)) (* 16 (* r r r r x r00 r00)) ?x1248 (* (- 15) (* r r x x r00 r00)) (* (- 15) (* r r r x x r00 r00)) (* (- 6) (* r r r r x x r00 r00)) ?x1227 (* (- 4) (* r r r r r r x00)) (* 5 (* r x x x r00 r00)) (* 5 (* r r x x x r00 r00)) (* 3 (* ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192)) (* (- 2) (* r r r r r r r00 r00)) (* 10 (* r r x x x)) (* 3 (* r x x x)) ?x1507 (* 4 (* x x)) (* 5 (* r x x)) (* (- 3) (* r r x x)) (* (- 1) (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192)) (* r00 ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192) (* 2 (* r r r x x x r00 r00)) ?x2013 (* (- 1) (* x r00 r00)) (* 2 (* r x00)) (* (- 12) (* r r r r x x x00)) (* 32 (* r r r r x x00)) (* 36 (* r r r x x00)) (* 12 (* r r x x00)) (* (- 2) (* x x00)) ?x2324 (* (- 1) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x192)) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192 ?x192)) (* (- 2) (* ?x221 ?x221 ?x221 ?x221 ?x192 ?x192)) (* 2 (* r r r r r r r00)) (* (- 16) (* r r r x x)) (* (- 6) (* r r r r r x r00)) (* 6 (* r r r r x x r00)) (* (- 2) (* r r r x x x r00)) (* (- 4) (* ?x221 ?x221 ?x221 ?x192 ?x192 ?x192 ?x192)) (* (- 2) (* ?x221 ?x221 ?x221 ?x192 ?x192 ?x192)) (* (- 2) (* x00 ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192)) (* 18 (* r r r x r00 r00)) (* 6 (* r r x r00 r00)) (* (- 3) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192)) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x192)) (* (- 16) (* r r r r x00)) ?x5482 (* (- 6) (* r r r r r r00 r00)) (* 6 (* r r r r r x r00 r00)) ?x5514 (* (- 12) (* r r r r r x00)) (* (- 30) (* r r x x x00)) (* (- 30) (* r r r x x x00)) (* 2 (* ?x221 ?x221 ?x192 ?x192 ?x192 ?x192)))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x30 (* r r)))
 (let ((?x180 (* (- 1) ?x30)))
 (let ((?x179 (* (- 1) r00)))
 (let ((?x178 (* (- 2) x)))
 (let (($x182 (= (+ r ?x178 ?x179 ?x180 ?x35 ?x36) 0)))
 (and $x182 (not (= ?x5825 0))))))))))))))))))))))) :qid k!26))
 ))
 (let (($x2259 (exists ((r Int) (x Int) )(! (let ((?x129 (* (- 1) r)))
 (let ((?x3950 (+ x ?x129)))
 (let ((?x221 (+ 1 r)))
 (let ((?x1085 (* r00 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x4705 (* r00 ?x221 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x4694 (* r00 r00 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x4191 (* r00 r00 ?x221 ?x3950)))
 (let ((?x1500 (* ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x2543 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x2467 (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x948 (* r00 r00 ?x3950 ?x3950 ?x3950)))
 (let ((?x1119 (* r00 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x1063 (* ?x221 ?x221 ?x3950)))
 (let ((?x2102 (* r00 r00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x918 (* ?x221 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x645 (+ (* 2 (* x00 ?x3950 ?x3950 ?x3950)) (* (- 4) (* x00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 ?x221 ?x3950)) ?x918 (* (- 2) (* ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) ?x2102 ?x1063 ?x1119 (* (- 2) (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* (- 3) (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* x00 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* 2 (* x00 ?x221 ?x3950)) (* (- 1) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) ?x948 ?x2467 ?x2543 (* (- 2) (* r00 r00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* ?x221 ?x221 ?x221 ?x3950)) (* 2 (* x00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* r00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 4 (* ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* 3 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x221 ?x3950 ?x3950)) (* (- 2) (* x00 ?x221 ?x3950 ?x3950 ?x3950)) ?x1500 ?x4191 (* (- 2) (* ?x221 ?x3950 ?x3950)) ?x4694 ?x4705 (* 2 (* x00 ?x221 ?x221 ?x221 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* 2 (* x00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) ?x1085))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x178 (* (- 2) x)))
 (let ((?x30 (* r r)))
 (let ((?x180 (* (- 1) ?x30)))
 (let ((?x179 (* (- 1) r00)))
 (and (= (+ r ?x179 ?x180 ?x178 ?x35 ?x36) 0) (not (= ?x645 0))))))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x5834 (lambda ((r Int) (x Int) )(let ((?x129 (* (- 1) r)))
 (let ((?x192 (+ ?x129 x)))
 (let ((?x221 (+ 1 r)))
 (let ((?x5514 (* (- 6) (* r x x x00))))
 (let ((?x5482 (* (- 8) (* r r r x00))))
 (let ((?x2324 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192)))
 (let ((?x2013 (* r r00 r00)))
 (let ((?x1507 (* x x x)))
 (let ((?x1227 (* x x x r00 r00)))
 (let ((?x1248 (* (- 3) (* r x x r00 r00))))
 (let ((?x664 (* x r00)))
 (let ((?x809 (* (- 1) x)))
 (let ((?x5825 (+ r ?x809 (* 7 (* r r)) (* 2 (* x x x x00)) (* 12 (* r r r r r x x00)) (* 10 (* r x x x x00)) (* 10 (* r r x x x x00)) (* 4 (* r r r x x x x00)) (* 4 (* r r r r00)) (* 8 (* r r r r r00)) (* 6 (* r r r r r r00)) (* (- 6) (* r r x r00)) (* (- 18) (* r r r x r00)) (* (- 16) (* r r r r x r00)) (* (- 2) (* r x x x x)) (* 3 (* r x x r00)) (* 15 (* r r x x r00)) (* 15 (* r r r x x r00)) (* (- 1) (* x x x r00)) (* (- 5) (* r x x x r00)) (* (- 5) (* r r x x x r00)) (* (- 1) (* r r00)) ?x664 (* (- 11) (* r x)) (* (- 17) (* r r x)) (* (- 6) (* r r r x)) (* 9 (* r r r r x)) (* 11 (* r r r)) (* 6 (* r r r r)) (* (- 1) (* r r r r r)) (* (- 4) (* r r r r00 r00)) (* (- 8) (* r r r r r00 r00)) (* 16 (* r r r r x r00 r00)) ?x1248 (* (- 15) (* r r x x r00 r00)) (* (- 15) (* r r r x x r00 r00)) (* (- 6) (* r r r r x x r00 r00)) ?x1227 (* (- 4) (* r r r r r r x00)) (* 5 (* r x x x r00 r00)) (* 5 (* r r x x x r00 r00)) (* 3 (* ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192)) (* (- 2) (* r r r r r r r00 r00)) (* 10 (* r r x x x)) (* 3 (* r x x x)) ?x1507 (* 4 (* x x)) (* 5 (* r x x)) (* (- 3) (* r r x x)) (* (- 1) (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192)) (* r00 ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192) (* 2 (* r r r x x x r00 r00)) ?x2013 (* (- 1) (* x r00 r00)) (* 2 (* r x00)) (* (- 12) (* r r r r x x x00)) (* 32 (* r r r r x x00)) (* 36 (* r r r x x00)) (* 12 (* r r x x00)) (* (- 2) (* x x00)) ?x2324 (* (- 1) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x192)) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192 ?x192)) (* (- 2) (* ?x221 ?x221 ?x221 ?x221 ?x192 ?x192)) (* 2 (* r r r r r r r00)) (* (- 16) (* r r r x x)) (* (- 6) (* r r r r r x r00)) (* 6 (* r r r r x x r00)) (* (- 2) (* r r r x x x r00)) (* (- 4) (* ?x221 ?x221 ?x221 ?x192 ?x192 ?x192 ?x192)) (* (- 2) (* ?x221 ?x221 ?x221 ?x192 ?x192 ?x192)) (* (- 2) (* x00 ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192)) (* 18 (* r r r x r00 r00)) (* 6 (* r r x r00 r00)) (* (- 3) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x192 ?x192 ?x192)) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x192)) (* (- 16) (* r r r r x00)) ?x5482 (* (- 6) (* r r r r r r00 r00)) (* 6 (* r r r r r x r00 r00)) ?x5514 (* (- 12) (* r r r r r x00)) (* (- 30) (* r r x x x00)) (* (- 30) (* r r r x x x00)) (* 2 (* ?x221 ?x221 ?x192 ?x192 ?x192 ?x192)))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x30 (* r r)))
 (let ((?x180 (* (- 1) ?x30)))
 (let ((?x179 (* (- 1) r00)))
 (let ((?x178 (* (- 2) x)))
 (let (($x182 (= (+ r ?x178 ?x179 ?x180 ?x35 ?x36) 0)))
 (let (($x4337 (and $x182 (not (= ?x5825 0)))))
 (let ((?x3950 (+ x ?x129)))
 (let ((?x4244 (* x00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x4705 (* r00 ?x221 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x4694 (* r00 r00 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x4191 (* r00 r00 ?x221 ?x3950)))
 (let ((?x1500 (* ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x2543 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x2467 (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x948 (* r00 r00 ?x3950 ?x3950 ?x3950)))
 (let ((?x1119 (* r00 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x1063 (* ?x221 ?x221 ?x3950)))
 (let ((?x2102 (* r00 r00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x918 (* ?x221 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x645 (+ (* 2 (* x00 ?x3950 ?x3950 ?x3950)) (* (- 4) (* x00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 ?x221 ?x3950)) ?x918 (* (- 2) (* ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) ?x2102 ?x1063 ?x1119 (* (- 2) (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* (- 3) (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* x00 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* 2 (* x00 ?x221 ?x3950)) (* (- 1) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) ?x948 ?x2467 ?x2543 (* (- 2) (* r00 r00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* ?x221 ?x221 ?x221 ?x3950)) (* 2 (* x00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* r00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 4 (* ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* 3 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x221 ?x3950 ?x3950)) (* (- 2) (* x00 ?x221 ?x3950 ?x3950 ?x3950)) ?x1500 ?x4191 (* (- 2) (* ?x221 ?x3950 ?x3950)) ?x4694 ?x4705 (* 2 (* x00 ?x221 ?x221 ?x221 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* 2 ?x4244) (* (- 1) (* r00 ?x221 ?x221 ?x221 ?x3950)))))
 (let (($x652 (and (= (+ r ?x179 ?x180 ?x178 ?x35 ?x36) 0) (not (= ?x645 0)))))
 (rewrite (= $x652 $x4337)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x969 (exists ((r Int) (x Int) )(! (let ((?x129 (* (- 1) r)))
 (let ((?x3950 (+ x ?x129)))
 (let ((?x221 (+ 1 r)))
 (let ((?x1085 (* r00 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x1556 (* ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x1544 (* r00 r00 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x1532 (* r00 ?x3950 ?x3950 ?x3950)))
 (let ((?x912 (* r00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x872 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x278 (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x934 (* r00 ?x221 ?x3950)))
 (let ((?x898 (* r00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x4109 (+ (* (- 2) (* x00 ?x3950 ?x3950 ?x3950)) (* 4 (* x00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) ?x898 ?x934 (* (- 1) (* ?x221 ?x221 ?x221 ?x221 ?x3950)) (* 2 (* ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* ?x221 ?x221 ?x3950)) (* (- 1) (* r00 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950)) ?x278 (* 3 (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* x00 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* (- 2) (* x00 ?x221 ?x3950)) ?x872 (* 2 (* ?x3950 ?x3950 ?x3950 ?x3950)) ?x912 (* (- 1) (* r00 r00 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* 2 (* r00 r00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) ?x1532 ?x1544 ?x1556 (* (- 2) (* x00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* r00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 4) (* ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 3) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x3950 ?x3950)) (* 2 (* x00 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x3950)) (* 2 (* ?x221 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x221 ?x221 ?x3950)) (* (- 1) (* r00 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* (- 2) (* x00 ?x221 ?x221 ?x221 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* (- 2) (* x00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) ?x1085)))
 (let ((?x36 (* r00 r00)))
 (let ((?x2041 (* (- 1) ?x36)))
 (let ((?x1106 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (and (= (+ ?x129 r00 ?x30 ?x32 ?x1106 ?x2041) 0) (not (= ?x4109 0))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x2033 (lambda ((r Int) (x Int) )(let ((?x129 (* (- 1) r)))
 (let ((?x3950 (+ x ?x129)))
 (let ((?x221 (+ 1 r)))
 (let ((?x1085 (* r00 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x4705 (* r00 ?x221 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x4694 (* r00 r00 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x4191 (* r00 r00 ?x221 ?x3950)))
 (let ((?x1500 (* ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x2543 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x2467 (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x948 (* r00 r00 ?x3950 ?x3950 ?x3950)))
 (let ((?x1119 (* r00 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x1063 (* ?x221 ?x221 ?x3950)))
 (let ((?x2102 (* r00 r00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x918 (* ?x221 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x645 (+ (* 2 (* x00 ?x3950 ?x3950 ?x3950)) (* (- 4) (* x00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 ?x221 ?x3950)) ?x918 (* (- 2) (* ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) ?x2102 ?x1063 ?x1119 (* (- 2) (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* (- 3) (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* x00 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* 2 (* x00 ?x221 ?x3950)) (* (- 1) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) ?x948 ?x2467 ?x2543 (* (- 2) (* r00 r00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* ?x221 ?x221 ?x221 ?x3950)) (* 2 (* x00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* r00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 4 (* ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* 3 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x221 ?x3950 ?x3950)) (* (- 2) (* x00 ?x221 ?x3950 ?x3950 ?x3950)) ?x1500 ?x4191 (* (- 2) (* ?x221 ?x3950 ?x3950)) ?x4694 ?x4705 (* 2 (* x00 ?x221 ?x221 ?x221 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* 2 (* x00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) ?x1085))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x178 (* (- 2) x)))
 (let ((?x30 (* r r)))
 (let ((?x180 (* (- 1) ?x30)))
 (let ((?x179 (* (- 1) r00)))
 (let (($x652 (and (= (+ r ?x179 ?x180 ?x178 ?x35 ?x36) 0) (not (= ?x645 0)))))
 (let ((?x1556 (* ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x1544 (* r00 r00 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x1532 (* r00 ?x3950 ?x3950 ?x3950)))
 (let ((?x912 (* r00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x872 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x278 (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x934 (* r00 ?x221 ?x3950)))
 (let ((?x898 (* r00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x4109 (+ (* (- 2) (* x00 ?x3950 ?x3950 ?x3950)) (* 4 (* x00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) ?x898 ?x934 (* (- 1) ?x918) (* 2 (* ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 1) ?x2102) (* (- 1) ?x1063) (* (- 1) ?x1119) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950)) ?x278 (* 3 (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* x00 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* (- 2) (* x00 ?x221 ?x3950)) ?x872 (* 2 (* ?x3950 ?x3950 ?x3950 ?x3950)) ?x912 (* (- 1) ?x948) (* (- 1) ?x2467) (* (- 1) ?x2543) (* 2 (* r00 r00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) ?x1532 ?x1544 ?x1556 (* (- 2) (* x00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* r00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 4) (* ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 3) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x3950 ?x3950)) (* 2 (* x00 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) ?x1500) (* (- 1) ?x4191) (* 2 (* ?x221 ?x3950 ?x3950)) (* (- 1) ?x4694) (* (- 1) ?x4705) (* (- 2) (* x00 ?x221 ?x221 ?x221 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* (- 2) (* x00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) ?x1085)))
 (let (($x854 (= (+ ?x129 r00 ?x30 (* 2 x) (* (- 2) x00) (* (- 1) ?x36)) 0)))
 (let (($x894 (and $x854 (not (= ?x4109 0)))))
 (rewrite (= $x894 $x652)))))))))))))))))))))))))))))))))))))
 ))
 (let (($x124 (exists ((r Int) (x Int) )(! (let ((?x42 (- x r)))
 (let ((?x45 (+ r 1)))
 (let ((?x49 (+ (* (- 2) ?x42 ?x42 ?x42 x00) (* 4 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42 x00) (* ?x45 ?x45 r00 ?x42 ?x42 ?x42) (* ?x45 r00 ?x42))))
 (let ((?x53 (+ (- ?x49 (* ?x45 ?x45 ?x45 ?x45 ?x42)) (* 2 ?x45 ?x45 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x58 (- (- ?x53 (* ?x45 ?x45 r00 r00 ?x42 ?x42 ?x42)) (* ?x45 ?x45 ?x42))))
 (let ((?x62 (+ (- ?x58 (* ?x45 r00 ?x42 ?x42 ?x42)) (* 2 ?x45 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42 ?x42) (* 2 ?x45 ?x45 ?x42 ?x42 ?x42))))
 (let ((?x69 (+ (- ?x62 (* 2 ?x45 ?x45 ?x45 ?x45 ?x42 ?x42)) (* ?x45 ?x45 ?x45 ?x45 r00 r00 ?x42) (* 3 ?x45 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42) (* 2 ?x45 ?x45 ?x45 ?x45 ?x42 x00))))
 (let ((?x75 (+ (- ?x69 (* 2 ?x45 ?x42 x00)) (* ?x45 ?x45 ?x45 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42) (* 2 ?x42 ?x42 ?x42 ?x42) (* ?x45 ?x45 ?x45 ?x45 r00 ?x42 ?x42 ?x42))))
 (let ((?x80 (- (- ?x75 (* r00 r00 ?x42 ?x42 ?x42)) (* ?x45 ?x45 ?x45 ?x45 r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x86 (+ (- ?x80 (* ?x45 ?x45 ?x45 ?x45 ?x45 ?x45 ?x42)) (* 2 ?x45 ?x45 ?x45 r00 r00 ?x42 ?x42 ?x42) (* r00 ?x42 ?x42 ?x42) (* ?x45 r00 r00 ?x42 ?x42 ?x42) (* ?x45 ?x45 ?x45 ?x42))))
 (let ((?x94 (- (- ?x86 (* 2 ?x45 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42 x00)) (* 2 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42))))
 (let ((?x96 (- (- ?x94 (* 2 ?x45 ?x45 ?x45 r00 ?x42 ?x42 ?x42)) (* 4 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x98 (- (- ?x96 (* 2 ?x45 ?x42 ?x42 ?x42 ?x42)) (* 3 ?x45 ?x45 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42))))
 (let ((?x101 (+ ?x98 (* 2 ?x45 ?x45 ?x45 ?x42 ?x42) (* 2 ?x45 ?x42 ?x42 ?x42 x00))))
 (let ((?x107 (+ (- (- ?x101 (* ?x45 ?x42 ?x42 ?x42)) (* ?x45 r00 r00 ?x42)) (* 2 ?x45 ?x42 ?x42))))
 (let ((?x112 (- (- ?x107 (* ?x45 ?x45 ?x45 r00 r00 ?x42)) (* ?x45 ?x45 ?x45 ?x45 r00 ?x42))))
 (let ((?x115 (+ (- ?x112 (* 2 ?x45 ?x45 ?x45 ?x42 x00)) (* 2 ?x45 ?x45 ?x45 ?x45 ?x45 ?x42))))
 (let ((?x119 (+ (- ?x115 (* 2 ?x45 ?x45 ?x42 ?x42 ?x42 x00)) (* ?x45 ?x45 ?x45 r00 ?x42))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 (* r r) (* 2 x)) ?x35) ?x36)))
 (and (= ?x38 0) (or (not (= ?x119 0))))))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x938 (lambda ((r Int) (x Int) )(let ((?x129 (* (- 1) r)))
 (let ((?x3950 (+ x ?x129)))
 (let ((?x221 (+ 1 r)))
 (let ((?x1085 (* r00 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x1556 (* ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x1544 (* r00 r00 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x1532 (* r00 ?x3950 ?x3950 ?x3950)))
 (let ((?x912 (* r00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x872 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x278 (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x3950)))
 (let ((?x934 (* r00 ?x221 ?x3950)))
 (let ((?x898 (* r00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)))
 (let ((?x4109 (+ (* (- 2) (* x00 ?x3950 ?x3950 ?x3950)) (* 4 (* x00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) ?x898 ?x934 (* (- 1) (* ?x221 ?x221 ?x221 ?x221 ?x3950)) (* 2 (* ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* ?x221 ?x221 ?x3950)) (* (- 1) (* r00 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950)) ?x278 (* 3 (* ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* x00 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* (- 2) (* x00 ?x221 ?x3950)) ?x872 (* 2 (* ?x3950 ?x3950 ?x3950 ?x3950)) ?x912 (* (- 1) (* r00 r00 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* 2 (* r00 r00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) ?x1532 ?x1544 ?x1556 (* (- 2) (* x00 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 2) (* r00 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 4) (* ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 2) (* ?x221 ?x3950 ?x3950 ?x3950 ?x3950)) (* (- 3) (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x3950 ?x3950)) (* 2 (* x00 ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* ?x221 ?x3950 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x3950)) (* 2 (* ?x221 ?x3950 ?x3950)) (* (- 1) (* r00 r00 ?x221 ?x221 ?x221 ?x3950)) (* (- 1) (* r00 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* (- 2) (* x00 ?x221 ?x221 ?x221 ?x3950)) (* 2 (* ?x221 ?x221 ?x221 ?x221 ?x221 ?x3950)) (* (- 2) (* x00 ?x221 ?x221 ?x3950 ?x3950 ?x3950)) ?x1085)))
 (let ((?x36 (* r00 r00)))
 (let ((?x2041 (* (- 1) ?x36)))
 (let ((?x1106 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (let (($x894 (and (= (+ ?x129 r00 ?x30 ?x32 ?x1106 ?x2041) 0) (not (= ?x4109 0)))))
 (let ((?x42 (- x r)))
 (let ((?x45 (+ r 1)))
 (let ((?x49 (+ (* (- 2) ?x42 ?x42 ?x42 x00) (* 4 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42 x00) (* ?x45 ?x45 r00 ?x42 ?x42 ?x42) (* ?x45 r00 ?x42))))
 (let ((?x53 (+ (- ?x49 (* ?x45 ?x45 ?x45 ?x45 ?x42)) (* 2 ?x45 ?x45 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x58 (- (- ?x53 (* ?x45 ?x45 r00 r00 ?x42 ?x42 ?x42)) (* ?x45 ?x45 ?x42))))
 (let ((?x62 (+ (- ?x58 (* ?x45 r00 ?x42 ?x42 ?x42)) (* 2 ?x45 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42 ?x42) (* 2 ?x45 ?x45 ?x42 ?x42 ?x42))))
 (let ((?x69 (+ (- ?x62 (* 2 ?x45 ?x45 ?x45 ?x45 ?x42 ?x42)) (* ?x45 ?x45 ?x45 ?x45 r00 r00 ?x42) (* 3 ?x45 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42) (* 2 ?x45 ?x45 ?x45 ?x45 ?x42 x00))))
 (let ((?x75 (+ (- ?x69 (* 2 ?x45 ?x42 x00)) (* ?x45 ?x45 ?x45 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42) (* 2 ?x42 ?x42 ?x42 ?x42) (* ?x45 ?x45 ?x45 ?x45 r00 ?x42 ?x42 ?x42))))
 (let ((?x80 (- (- ?x75 (* r00 r00 ?x42 ?x42 ?x42)) (* ?x45 ?x45 ?x45 ?x45 r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x86 (+ (- ?x80 (* ?x45 ?x45 ?x45 ?x45 ?x45 ?x45 ?x42)) (* 2 ?x45 ?x45 ?x45 r00 r00 ?x42 ?x42 ?x42) (* r00 ?x42 ?x42 ?x42) (* ?x45 r00 r00 ?x42 ?x42 ?x42) (* ?x45 ?x45 ?x45 ?x42))))
 (let ((?x94 (- (- ?x86 (* 2 ?x45 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42 x00)) (* 2 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42))))
 (let ((?x96 (- (- ?x94 (* 2 ?x45 ?x45 ?x45 r00 ?x42 ?x42 ?x42)) (* 4 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x98 (- (- ?x96 (* 2 ?x45 ?x42 ?x42 ?x42 ?x42)) (* 3 ?x45 ?x45 ?x45 ?x45 ?x45 ?x42 ?x42 ?x42))))
 (let ((?x101 (+ ?x98 (* 2 ?x45 ?x45 ?x45 ?x42 ?x42) (* 2 ?x45 ?x42 ?x42 ?x42 x00))))
 (let ((?x107 (+ (- (- ?x101 (* ?x45 ?x42 ?x42 ?x42)) (* ?x45 r00 r00 ?x42)) (* 2 ?x45 ?x42 ?x42))))
 (let ((?x112 (- (- ?x107 (* ?x45 ?x45 ?x45 r00 r00 ?x42)) (* ?x45 ?x45 ?x45 ?x45 r00 ?x42))))
 (let ((?x115 (+ (- ?x112 (* 2 ?x45 ?x45 ?x45 ?x42 x00)) (* 2 ?x45 ?x45 ?x45 ?x45 ?x45 ?x42))))
 (let ((?x119 (+ (- ?x115 (* 2 ?x45 ?x45 ?x42 ?x42 ?x42 x00)) (* ?x45 ?x45 ?x45 r00 ?x42))))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 ?x30 ?x32) (* 2 x00)) ?x36)))
 (let (($x123 (and (= ?x38 0) (or (not (= ?x119 0))))))
 (rewrite (= $x123 $x894))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x125 (asserted $x124)))
 (let ((@x1114 (mp (mp @x125 (quant-intro (proof-bind ?x938) (= $x124 $x969)) $x969) (rewrite (= $x969 $x969)) $x969)))
 (let ((@x3652 (mp (mp @x1114 (quant-intro (proof-bind ?x2033) (= $x969 $x2259)) $x2259) (quant-intro (proof-bind ?x5834) (= $x2259 $x5832)) $x5832)))
 (let ((@x2867 (mp (mp~ @x3652 (sk (~ $x5832 $x2795)) $x2795) (rewrite (= $x2795 $x2945)) $x2945)))
 (let ((@x2872 (and-elim @x2867 $x2640)))
 (let ((@x4937 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2640) $x2896)) @x2872 $x2896)))
 (let (($x2892 (>= ?x482 0)))
 (let ((@x4914 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2640) $x2892)) @x2872 $x2892)))
 (let (($x3354 (not (>= ?x2965 0))))
 (let (($x2889 (<= ?x2965 0)))
 (let ((@x2069 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2946 (not $x2889) $x3354)) (and-elim @x2867 $x2777) (or (not $x2889) $x3354))))
 (let ((@x1912 (unit-resolution @x2069 (lemma ((_ th-lemma arith) (hypothesis (not $x2889)) @x4914 @x4937 false) $x2889) $x3354)))
 ((_ th-lemma arith) @x1912 @x4914 @x4937 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 1
 :arith-assert-diseq        1
 :arith-assert-lower        27
 :arith-assert-upper        3
 :arith-conflicts           2
 :arith-eq-adapter          2
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             696
 :arith-nonlinear-bounds    24
 :arith-nonlinear-horner    8
 :arith-num-rows            4
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              2
 :arith-tableau-max-columns 124
 :arith-tableau-max-rows    4
 :conflicts                 2
 :decisions                 1
 :del-clause                7
 :final-checks              4
 :max-memory                4.47
 :memory                    3.68
 :mk-bool-var               12
 :mk-clause                 7
 :num-allocs                2032086
 :num-checks                1
 :propagations              4
 :rlimit-count              18067
 :time                      0.02
 :total-time                0.03)
