unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x761 (* 2 (* k!2 m!1))))
 (let ((?x675 (* m!1 m!1)))
 (let ((?x548 (* (- 27) c!3)))
 (let ((?x384 (* (- 5) m!1)))
 (let ((?x508 (* k!2 k!2)))
 (let ((?x383 (* (- 32) k!2)))
 (let ((?x558 (* 9 n!0)))
 (let ((?x273 (+ 13 (* (- 9) (* n!0 c!3)) ?x558 ?x383 ?x508 ?x384 ?x548 ?x675 (* (- 9) (* n!0 k!2)) ?x761)))
 (let (($x305 (<= ?x273 0)))
 (let ((?x321 (* (- 1) k!2)))
 (let ((?x337 (+ (* 3 n!0) (* 3 (* n!0 n!0)) ?x321)))
 (let (($x433 (<= ?x337 (- 1))))
 (let (($x338 (= ?x337 (- 1))))
 (let ((?x398 (* (- 36) (* n!0 n!0 n!0))))
 (let ((?x366 (* (- 1) ?x675)))
 (let ((?x679 (* (- 12) m!1)))
 (let ((?x510 (* k!2 k!2 k!2 m!1)))
 (let ((?x405 (* n!0 n!0)))
 (let ((?x677 (* (- 108) ?x405)))
 (let ((?x385 (* 6 (* k!2 k!2 k!2))))
 (let ((?x390 (* (- 108) n!0)))
 (let ((?x728 (+ k!2 m!1)))
 (let ((?x635 (+ 1 n!0)))
 (let ((?x109 (* 6 (* c!3 c!3 c!3))))
 (let ((?x690 (+ (- 36) ?x109 (* (- 36) (* n!0 n!0 m!1)) (* 18 (* k!2 k!2 c!3)) (* ?x635 ?x635 ?x728 ?x728 ?x728 (+ k!2 c!3)) ?x390 ?x385 ?x677 (* (- 1) (* n!0 n!0 n!0 m!1 m!1)) (* (- 3) (* n!0 m!1 m!1)) ?x510 (* (- 12) (* n!0 n!0 n!0 m!1)) (* (- 3) (* n!0 n!0 m!1 m!1)) (* 3 (* k!2 k!2 m!1 c!3)) (* 3 (* k!2 m!1 c!3 c!3)) (* (- 36) (* n!0 m!1)) ?x679 (* m!1 c!3 c!3 c!3) ?x366 (* 18 (* k!2 c!3 c!3)) ?x398)))
 (let ((?x424 (* ?x690 ?x273)))
 (let (($x437 (= ?x424 0)))
 (let (($x416 (not $x437)))
 (let ((?x723 (* n!0 k!2)))
 (let ((?x331 (+ (* 2 n!0) ?x321 (* (- 3) c!3) ?x723)))
 (let (($x528 (= ?x331 (- 1))))
 (let ((?x681 (* 18 c!3)))
 (let ((?x594 (* (- 1) ?x508)))
 (let ((?x389 (* 5 k!2)))
 (let ((?x615 (* (- 9) n!0)))
 (let ((?x458 (+ (* 9 (* n!0 c!3)) ?x615 ?x389 ?x594 ?x681)))
 (let (($x113 (= ?x458 4)))
 (let ((?x349 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x350 (= ?x349 (- 6))))
 (let (($x464 (and $x350 $x113 $x528 $x338 $x416)))
 (let ((?x194 (+ 13 ?x548 ?x383 ?x384 ?x558 ?x508 (* (- 9) (* k!2 n!0)) (* (- 9) (* c!3 n!0)) ?x761 ?x675)))
 (let ((?x770 (+ (- 36) ?x679 ?x390 ?x677 ?x366 (* (- 1) (* m!1 m!1 n!0 n!0 n!0)) (* (- 12) (* m!1 n!0 n!0 n!0)) ?x398 (* ?x635 ?x635 ?x728 ?x728 ?x728 (+ c!3 k!2)) (* (- 36) (* m!1 n!0)) (* (- 3) (* m!1 m!1 n!0)) (* (- 36) (* m!1 n!0 n!0)) (* (- 3) (* m!1 m!1 n!0 n!0)) (* c!3 c!3 c!3 m!1) (* 3 (* c!3 c!3 k!2 m!1)) (* 3 (* c!3 k!2 k!2 m!1)) ?x510 ?x109 (* 18 (* c!3 c!3 k!2)) (* 18 (* c!3 k!2 k!2)) ?x385)))
 (let (($x401 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x410 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x681 ?x389 ?x615 ?x594 (* 9 (* c!3 n!0))) 4) $x401 (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x405)) 1) (not (= (* ?x770 ?x194) 0)))))
 (let (($x680 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x460 (* m m)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x481 (+ 13 (* (- 27) c) (* (- 32) k) ?x426 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) ?x460)))
 (let ((?x802 (* 6 (* k k k))))
 (let ((?x783 (* c k k)))
 (let ((?x817 (* 18 ?x783)))
 (let ((?x765 (* c c k)))
 (let ((?x816 (* 18 ?x765)))
 (let ((?x758 (* 6 (* c c c))))
 (let ((?x751 (* k k k m)))
 (let ((?x819 (* 3 (* c k k m))))
 (let ((?x818 (* 3 (* c c k m))))
 (let ((?x744 (* c c c m)))
 (let ((?x707 (* (- 3) (* m m n n))))
 (let ((?x714 (* (- 36) (* m n n))))
 (let ((?x701 (* (- 3) (* m m n))))
 (let ((?x715 (* (- 36) (* m n))))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x550 (* ?x341 ?x341 ?x72 ?x72 ?x72 ?x68)))
 (let ((?x661 (* (- 36) (* n n n))))
 (let ((?x664 (* (- 12) (* m n n n))))
 (let ((?x695 (* (- 1) (* m m n n n))))
 (let ((?x696 (* (- 1) ?x460)))
 (let ((?x269 (* n n)))
 (let ((?x668 (* (- 108) ?x269)))
 (let ((?x671 (* (- 108) n)))
 (let ((?x713 (* (- 12) m)))
 (let ((?x651 (+ (- 36) ?x713 ?x671 ?x668 ?x696 ?x695 ?x664 ?x661 ?x550 ?x715 ?x701 ?x714 ?x707 ?x744 ?x818 ?x819 ?x751 ?x758 ?x816 ?x817 ?x802)))
 (let (($x298 (= (+ k (* (- 3) n) (* (- 3) ?x269)) 1)))
 (let (($x260 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x208 (= (+ ?x40 ?x44 ?x210 ?x211 (* 9 (* c n))) 4)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 $x208 $x260 $x298 (not (= (* ?x651 ?x481) 0))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x515 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x460 (* m m)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x481 (+ 13 (* (- 27) c) (* (- 32) k) ?x426 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) ?x460)))
 (let ((?x802 (* 6 (* k k k))))
 (let ((?x758 (* 6 (* c c c))))
 (let ((?x751 (* k k k m)))
 (let ((?x819 (* 3 (* c k k m))))
 (let ((?x818 (* 3 (* c c k m))))
 (let ((?x744 (* c c c m)))
 (let ((?x707 (* (- 3) (* m m n n))))
 (let ((?x714 (* (- 36) (* m n n))))
 (let ((?x701 (* (- 3) (* m m n))))
 (let ((?x715 (* (- 36) (* m n))))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x550 (* ?x341 ?x341 ?x72 ?x72 ?x72 ?x68)))
 (let ((?x661 (* (- 36) (* n n n))))
 (let ((?x664 (* (- 12) (* m n n n))))
 (let ((?x695 (* (- 1) (* m m n n n))))
 (let ((?x696 (* (- 1) ?x460)))
 (let ((?x269 (* n n)))
 (let ((?x668 (* (- 108) ?x269)))
 (let ((?x671 (* (- 108) n)))
 (let ((?x713 (* (- 12) m)))
 (let ((?x520 (+ (- 36) ?x713 ?x671 (* 6 (* k c c)) ?x668 ?x696 ?x695 ?x664 ?x661 ?x550 ?x715 ?x701 ?x714 ?x707 (* 6 (* k c k)) (* 6 (* k k c)) (* 6 (* c k c)) ?x744 ?x818 ?x819 ?x751 ?x758 (* 6 (* c c k)) (* 6 (* c k k)) ?x802)))
 (let (($x298 (= (+ k (* (- 3) n) (* (- 3) ?x269)) 1)))
 (let (($x260 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x208 (= (+ ?x40 ?x44 ?x210 ?x211 (* 9 (* c n))) 4)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 $x208 $x260 $x298 (not (= (* ?x520 ?x481) 0))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x649 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x460 (* m m)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x481 (+ 13 (* (- 27) c) (* (- 32) k) ?x426 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) ?x460)))
 (let ((?x802 (* 6 (* k k k))))
 (let ((?x783 (* c k k)))
 (let ((?x817 (* 18 ?x783)))
 (let ((?x765 (* c c k)))
 (let ((?x816 (* 18 ?x765)))
 (let ((?x758 (* 6 (* c c c))))
 (let ((?x751 (* k k k m)))
 (let ((?x819 (* 3 (* c k k m))))
 (let ((?x818 (* 3 (* c c k m))))
 (let ((?x744 (* c c c m)))
 (let ((?x707 (* (- 3) (* m m n n))))
 (let ((?x714 (* (- 36) (* m n n))))
 (let ((?x701 (* (- 3) (* m m n))))
 (let ((?x715 (* (- 36) (* m n))))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x550 (* ?x341 ?x341 ?x72 ?x72 ?x72 ?x68)))
 (let ((?x661 (* (- 36) (* n n n))))
 (let ((?x664 (* (- 12) (* m n n n))))
 (let ((?x695 (* (- 1) (* m m n n n))))
 (let ((?x696 (* (- 1) ?x460)))
 (let ((?x269 (* n n)))
 (let ((?x668 (* (- 108) ?x269)))
 (let ((?x671 (* (- 108) n)))
 (let ((?x713 (* (- 12) m)))
 (let ((?x651 (+ (- 36) ?x713 ?x671 ?x668 ?x696 ?x695 ?x664 ?x661 ?x550 ?x715 ?x701 ?x714 ?x707 ?x744 ?x818 ?x819 ?x751 ?x758 ?x816 ?x817 ?x802)))
 (let (($x298 (= (+ k (* (- 3) n) (* (- 3) ?x269)) 1)))
 (let (($x260 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x208 (= (+ ?x40 ?x44 ?x210 ?x211 (* 9 (* c n))) 4)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x565 (and $x124 $x208 $x260 $x298 (not (= (* ?x651 ?x481) 0)))))
 (let ((?x520 (+ (- 36) ?x713 ?x671 (* 6 (* k c c)) ?x668 ?x696 ?x695 ?x664 ?x661 ?x550 ?x715 ?x701 ?x714 ?x707 (* 6 (* k c k)) (* 6 (* k k c)) (* 6 (* c k c)) ?x744 ?x818 ?x819 ?x751 ?x758 (* 6 ?x765) (* 6 ?x783) ?x802)))
 (let (($x600 (and $x124 $x208 $x260 $x298 (not (= (* ?x520 ?x481) 0)))))
 (rewrite (= $x600 $x565))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x322 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x620 (* (- 18) c)))
 (let ((?x493 (+ 13 ?x620 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x426 ?x48 ?x78)))
 (let ((?x626 (+ 6 m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x68 (+ c k)))
 (let ((?x550 (* ?x341 ?x341 ?x72 ?x72 ?x72 ?x68)))
 (let ((?x470 (+ ?x550 (* (- 1) (* ?x341 ?x341 ?x341 ?x626 ?x626)) (* ?x626 ?x68 ?x68 ?x68))))
 (let (($x375 (not (= (* ?x470 ?x493) 0))))
 (let (($x358 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x585 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x210 ?x211) 4) $x585 $x358 $x375))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x393 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x460 (* m m)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x481 (+ 13 (* (- 27) c) (* (- 32) k) ?x426 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) ?x460)))
 (let ((?x802 (* 6 (* k k k))))
 (let ((?x758 (* 6 (* c c c))))
 (let ((?x751 (* k k k m)))
 (let ((?x819 (* 3 (* c k k m))))
 (let ((?x818 (* 3 (* c c k m))))
 (let ((?x744 (* c c c m)))
 (let ((?x707 (* (- 3) (* m m n n))))
 (let ((?x714 (* (- 36) (* m n n))))
 (let ((?x701 (* (- 3) (* m m n))))
 (let ((?x715 (* (- 36) (* m n))))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x550 (* ?x341 ?x341 ?x72 ?x72 ?x72 ?x68)))
 (let ((?x661 (* (- 36) (* n n n))))
 (let ((?x664 (* (- 12) (* m n n n))))
 (let ((?x695 (* (- 1) (* m m n n n))))
 (let ((?x696 (* (- 1) ?x460)))
 (let ((?x269 (* n n)))
 (let ((?x668 (* (- 108) ?x269)))
 (let ((?x671 (* (- 108) n)))
 (let ((?x713 (* (- 12) m)))
 (let ((?x520 (+ (- 36) ?x713 ?x671 (* 6 (* k c c)) ?x668 ?x696 ?x695 ?x664 ?x661 ?x550 ?x715 ?x701 ?x714 ?x707 (* 6 (* k c k)) (* 6 (* k k c)) (* 6 (* c k c)) ?x744 ?x818 ?x819 ?x751 ?x758 (* 6 (* c c k)) (* 6 (* c k k)) ?x802)))
 (let (($x298 (= (+ k (* (- 3) n) (* (- 3) ?x269)) 1)))
 (let (($x260 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x208 (= (+ ?x40 ?x44 ?x210 ?x211 (* 9 (* c n))) 4)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x600 (and $x124 $x208 $x260 $x298 (not (= (* ?x520 ?x481) 0)))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x620 (* (- 18) c)))
 (let ((?x493 (+ 13 ?x620 (* (- 23) k) (* (- 9) (* ?x341 ?x68)) ?x426 ?x48 ?x78)))
 (let ((?x470 (+ ?x550 (* (- 1) (* ?x341 ?x341 ?x341 (+ 6 m) (+ 6 m))) (* (+ 6 m) ?x68 ?x68 ?x68))))
 (let (($x375 (not (= (* ?x470 ?x493) 0))))
 (let (($x358 (= (+ (* 3 ?x269) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x585 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x605 (and $x124 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x210 ?x211) 4) $x585 $x358 $x375)))
 (rewrite (= $x605 $x600))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x376 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x620 (* (- 18) c)))
 (let ((?x493 (+ 13 ?x620 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x426 ?x48 ?x78)))
 (let ((?x626 (+ 6 m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x68 (+ c k)))
 (let ((?x550 (* ?x341 ?x341 ?x72 ?x72 ?x72 ?x68)))
 (let ((?x470 (+ ?x550 (* (- 1) (* ?x341 ?x341 ?x341 ?x626 ?x626)) (* ?x626 ?x68 ?x68 ?x68))))
 (let (($x375 (not (= (* ?x470 ?x493) 0))))
 (let (($x358 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x422 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x717 (= (+ ?x620 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 $x717 $x422 $x358 $x375))))))))))))))))) :qid k!34))
 ))
 (let ((?x325 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x620 (* (- 18) c)))
 (let ((?x493 (+ 13 ?x620 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x426 ?x48 ?x78)))
 (let ((?x626 (+ 6 m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x68 (+ c k)))
 (let ((?x550 (* ?x341 ?x341 ?x72 ?x72 ?x72 ?x68)))
 (let ((?x470 (+ ?x550 (* (- 1) (* ?x341 ?x341 ?x341 ?x626 ?x626)) (* ?x626 ?x68 ?x68 ?x68))))
 (let (($x375 (not (= (* ?x470 ?x493) 0))))
 (let (($x358 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x585 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x605 (and $x124 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x210 ?x211) 4) $x585 $x358 $x375)))
 (let (($x422 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x717 (= (+ ?x620 (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49) (- 4))))
 (let (($x386 (and $x124 $x717 $x422 $x358 $x375)))
 (rewrite (= $x386 $x605)))))))))))))))))))))))))))
 ))
 (let (($x91 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x81 (+ m 6)))
 (let ((?x72 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x85 (+ (- (* ?x68 ?x72 ?x72 ?x72 ?x70 ?x70) (* ?x81 ?x81 ?x70 ?x70 ?x70)) (* ?x68 ?x68 ?x68 ?x81))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x76 (- (- (- (* 4 1) (* 18 ?x68)) (* 9 ?x68 ?x70)) (* 5 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* (+ ?x76 (* 9 ?x70) ?x78) ?x85) 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x379 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x620 (* (- 18) c)))
 (let ((?x493 (+ 13 ?x620 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x426 ?x48 ?x78)))
 (let ((?x626 (+ 6 m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x68 (+ c k)))
 (let ((?x550 (* ?x341 ?x341 ?x72 ?x72 ?x72 ?x68)))
 (let ((?x470 (+ ?x550 (* (- 1) (* ?x341 ?x341 ?x341 ?x626 ?x626)) (* ?x626 ?x68 ?x68 ?x68))))
 (let (($x375 (not (= (* ?x470 ?x493) 0))))
 (let (($x358 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x422 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x717 (= (+ ?x620 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x386 (and $x124 $x717 $x422 $x358 $x375)))
 (let ((?x70 (+ n 1)))
 (let ((?x81 (+ m 6)))
 (let ((?x85 (+ (- (* ?x68 ?x72 ?x72 ?x72 ?x70 ?x70) (* ?x81 ?x81 ?x70 ?x70 ?x70)) (* ?x68 ?x68 ?x68 ?x81))))
 (let ((?x76 (- (- (- (* 4 1) (* 18 ?x68)) (* 9 ?x68 ?x70)) (* 5 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x90 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* (+ ?x76 (* 9 ?x70) ?x78) ?x85) 0))))))
 (rewrite (= $x90 $x386)))))))))))))))))))))))))))))))
 ))
 (let ((@x92 (asserted $x91)))
 (let ((@x604 (mp (mp @x92 (quant-intro (proof-bind ?x379) (= $x91 $x376)) $x376) (rewrite (= $x376 $x376)) $x376)))
 (let ((@x397 (mp (mp @x604 (quant-intro (proof-bind ?x325) (= $x376 $x322)) $x322) (quant-intro (proof-bind ?x393) (= $x322 $x515)) $x515)))
 (let ((@x343 (mp~ (mp @x397 (quant-intro (proof-bind ?x649) (= $x515 $x680)) $x680) (sk (~ $x680 $x410)) $x410)))
 (let ((@x602 (mp @x343 (rewrite (= $x410 $x464)) $x464)))
 (let ((@x333 (and-elim @x602 $x338)))
 (let ((@x726 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x338) $x433)) @x333 $x433)))
 (let (($x538 (>= ?x337 (- 1))))
 (let ((@x535 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x338) $x538)) @x333 $x538)))
 (let (($x359 (<= ?x349 (- 6))))
 (let ((@x283 (and-elim @x602 $x350)))
 (let ((@x347 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x350) $x359)) @x283 $x359)))
 (let (($x457 (>= ?x349 (- 6))))
 (let ((@x505 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x350) $x457)) @x283 $x457)))
 (let (($x238 (<= ?x458 4)))
 (let ((@x572 (and-elim @x602 $x113)))
 (let ((@x573 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x113) $x238)) @x572 $x238)))
 (let (($x434 (>= ?x458 4)))
 (let ((@x134 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x113) $x434)) @x572 $x434)))
 (let (($x270 (<= ?x331 (- 1))))
 (let ((@x332 (and-elim @x602 $x528)))
 (let ((@x526 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x528) $x270)) @x332 $x270)))
 (let (($x441 (>= ?x331 (- 1))))
 (let ((@x596 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x528) $x441)) @x332 $x441)))
 (let ((@x940 ((_ th-lemma arith) (hypothesis (not $x305)) @x505 @x347 @x134 @x573 @x134 @x573 @x596 @x526 @x505 @x347 @x505 @x347 @x134 @x573 @x505 @x347 @x134 @x573 @x505 @x347 @x134 @x573 @x596 @x526 @x134 @x573 @x134 @x573 @x505 @x347 @x505 @x347 @x535 @x726 false)))
 (let ((@x222 (lemma @x940 $x305)))
 (let (($x1152 (>= ?x273 0)))
 (let ((@x1262 ((_ th-lemma arith) (hypothesis (not $x1152)) @x535 @x726 @x505 @x347 @x596 @x526 @x535 @x726 @x505 @x347 @x535 @x726 @x505 @x347 @x505 @x347 @x505 @x347 @x134 @x573 @x505 @x347 @x535 @x726 @x505 @x347 @x134 @x573 @x535 @x726 @x596 @x526 @x535 @x726 @x535 @x726 @x505 @x347 @x134 @x573 @x596 @x526 false)))
 (let ((@x1253 (lemma @x1262 $x1152)))
 (let (($x1219 (not (<= ?x424 0))))
 (let (($x506 (>= ?x424 0)))
 (let ((@x1204 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x506)) (hypothesis $x1152) @x222 false) (or (not $x1152) $x506))))
 (let ((@x1223 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x437 $x1219 (not $x506))) (and-elim @x602 $x416) (or $x1219 (not $x506)))))
 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x1223 (unit-resolution @x1204 @x1253 $x506) $x1219) @x1253 @x222 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 144
 :arith-assert-diseq        23
 :arith-assert-lower        920
 :arith-assert-upper        960
 :arith-bound-prop          4
 :arith-branch-var          28
 :arith-conflicts           43
 :arith-eq-adapter          29
 :arith-fixed-eqs           164
 :arith-gcd-tests           248
 :arith-gomory-cuts         17
 :arith-grobner             72
 :arith-ineq-splits         28
 :arith-max-min             7085
 :arith-nonlinear-bounds    476
 :arith-nonlinear-horner    745
 :arith-num-rows            17
 :arith-offset-eqs          6
 :arith-patches             61
 :arith-patches_succ        5
 :arith-pivots              1246
 :arith-pseudo-nonlinear    229
 :arith-row-summations      9240
 :arith-tableau-max-columns 69
 :arith-tableau-max-rows    17
 :conflicts                 50
 :decisions                 240
 :del-clause                90
 :final-checks              209
 :max-memory                4.24
 :memory                    3.28
 :minimized-lits            2
 :mk-bool-var               298
 :mk-clause                 180
 :num-allocs                74465590
 :num-checks                1
 :propagations              225
 :rlimit-count              1113790
 :time                      0.65
 :total-time                0.66)
