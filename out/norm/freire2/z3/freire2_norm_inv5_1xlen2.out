unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x7667 (* (- 1) s!1)))
 (let ((?x353 (* r00 r00)))
 (let ((?x5953 (* (- 3) ?x353)))
 (let ((?x1302 (+ s00 ?x5953 (* 3 (* r!2 r!2)) ?x7667)))
 (let (($x1033 (<= ?x1302 0)))
 (let (($x1303 (= ?x1302 0)))
 (let ((?x3425 (+ 3 (* 6 r!2) s!1)))
 (let ((?x5359 (+ x!0 ?x7667)))
 (let ((?x3430 (+ 1 r!2)))
 (let ((?x4784 (+ (* 5184 (* s00 r00 x00 r!2 x!0 s!1)) (* (- 432) (* s00 r00 x00 r!2 s!1 s!1 s!1)) (* (- 216) (* r00 r00 r00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 144) (* s00 s00 s00 s!1)) (* 10368 (* r00 r00 r00 x00 r!2 s!1 s!1)) (* 648 (* s00 s00 r00 s!1 s!1)) (* 12960 (* r00 r00 r00 x00 r!2 r!2 s!1 s!1)) (* (- 2592) (* s00 r00 x00 r!2 r!2 r!2 s!1 s!1)) (* (- 2592) (* r00 r00 r00 x00 x!0 s!1)) (* (- 72) (* s00 s00 r00 r00 r!2 x!0 s!1 s!1)) (* (- 324) (* s00 s00 r00 r00 x!0)) (* (- 216) (* s00 r00 x00 r!2 r!2 s!1 s!1 s!1)) (* 2592 (* s00 r00 x00 r!2 r!2 r!2 x!0 s!1)) (* (- 15552) (* r00 r00 r00 x00 r!2 r!2 r!2 r!2 x!0)) (* (- 12960) (* r00 r00 r00 x00 r!2 r!2 x!0 s!1)) (* (- 4) (* ?x3430 ?x3430 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 5184) (* r00 r00 r00 x00 r!2 r!2 r!2 x!0 s!1)) (* 108 (* s00 s00 r00 s!1 s!1 s!1)) (* (- 216) (* s00 r00 x00 s!1 s!1 s!1)) (* 3888 (* s00 s00 r00 r00 r!2 r!2 r!2 s!1)) (* 46656 (* r00 r00 r00 x00 r!2 r!2 r!2 s!1)) (* (- 12) (* s00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 9) (* ?x5359 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 108) (* ?x5359 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425)) (* 16 (* s00 s00 s00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 3888) (* r00 r00 r00 x00 x!0)) (* (- 7776) (* s00 r00 x00 r!2 r!2 r!2 r!2 s!1)) (* (- 1296) (* s00 r00 x00 s!1 s!1)) (* (- 5184) (* s00 r00 x00 r!2 s!1 s!1)) (* 216 (* r00 s00 x00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 36) (* s00 r00 r00 x!0 s!1 s!1)) (* 108 (* ?x3430 ?x3430 ?x5359 ?x5359 ?x5359 ?x3425 ?x3425)) (* (- 23328) (* r00 r00 r00 x00 r!2 x!0)) (* (- 54) (* r00 s00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425)) (* (- 36) (* s00 s00 r00 r00 x!0 s!1 s!1)) (* 23328 (* s00 r00 x00 r!2 r!2 r!2 x!0)) (* 5184 (* r00 r00 r00 x00 r!2 r!2 r!2 s!1 s!1)) (* 432 (* r00 r00 r00 x00 s!1 s!1 s!1)) (* 36 (* s00 r00 r00 r!2 r!2 s!1 s!1 s!1)) (* 96 (* s00 s00 s00 x!0 s!1)) (* 432 (* s00 s00 r00 r00 r!2 r!2 r!2 s!1 s!1)) (* (- 432) (* s00 s00 r00 r00 r!2 r!2 r!2 x!0 s!1)) (* (- 1728) (* s00 s00 s00 r!2 r!2 r!2 s!1)) (* (- 72) (* s00 r00 r00 r!2 x!0 s!1 s!1)) (* (- 36) (* s00 r00 r00 r!2 r!2 x!0 s!1 s!1)) (* (- 2592) (* s00 s00 r00 r!2 x!0 s!1)) (* 50544 (* r00 r00 r00 x00 r!2 r!2 s!1)) (* 9 (* s00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* 4212 (* s00 s00 r00 r00 r!2 r!2 s!1)) (* (- 108) (* s00 x00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425)) (* (- 54) (* r00 s00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* 36 (* s00 s00 r00 r00 s!1 s!1 s!1)) (* 108 (* x00 x00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425)) (* 864 (* r00 r00 r00 x00 r!2 s!1 s!1 s!1)) (* (- 216) (* r00 s00 ?x5359 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* 25272 (* s00 r00 x00 r!2 r!2 x!0)) (* 16 (* s00 s00 s00 x!0 s!1 s!1)) (* 384 (* s00 s00 s00 r!2 x!0 s!1)) (* 576 (* s00 s00 s00 r!2 r!2 r!2 r!2 x!0)) (* 32 (* s00 s00 s00 r!2 x!0 s!1 s!1)) (* 16 (* s00 s00 s00 r!2 r!2 x!0 s!1 s!1)) (* 216 (* r00 r00 r00 s00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* 432 (* r00 r00 r00 ?x5359 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 192) (* s00 s00 s00 r!2 r!2 r!2 s!1 s!1)) (* (- 3888) (* s00 s00 r00 r!2 r!2 r!2 r!2 x!0)) (* 15 (* ?x5359 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425 ?x3425)) (* 1728 (* s00 s00 s00 r!2 r!2 r!2 x!0)) (* 23328 (* r00 r00 r00 x00 r!2 s!1)) (* (- 16) (* s00 s00 s00 s!1 s!1 s!1)) (* (- 32) (* s00 s00 s00 r!2 s!1 s!1 s!1)) (* (- 16) (* s00 s00 s00 r!2 r!2 s!1 s!1 s!1)) (* 1872 (* s00 s00 s00 r!2 r!2 x!0)) (* 1944 (* s00 s00 r00 r00 r!2 s!1)) (* 480 (* s00 s00 s00 r!2 r!2 x!0 s!1)) (* 192 (* s00 s00 s00 r!2 r!2 r!2 x!0 s!1)) (* (- 216) (* r00 s00 ?x3430 ?x3430 ?x5359 ?x5359 ?x3425 ?x3425)) (* (- 576) (* s00 s00 s00 r!2 r!2 r!2 r!2 s!1)) (* (- 108) (* s00 x00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 1296) (* s00 s00 r00 r00 r!2 r!2 r!2 r!2 x!0)) (* (- 1944) (* s00 s00 r00 r00 r!2 x!0)) (* 11664 (* s00 r00 x00 r!2 x!0)) (* 2592 (* r00 r00 r00 x00 s!1 s!1)) (* 25272 (* s00 r00 r00 r00 r!2 r!2 x!0)) (* (- 432) (* r00 r00 r00 x00 x!0 s!1 s!1)) (* 4212 (* s00 r00 r00 r!2 r!2 s!1)) (* (- 216) (* s00 r00 r00 x!0 s!1)) (* (- 4212) (* s00 s00 r00 r00 r!2 r!2 x!0)) (* (- 648) (* s00 s00 r00 x!0 s!1)) (* (- 1080) (* s00 s00 r00 r00 r!2 r!2 x!0 s!1)) (* 11664 (* s00 s00 r00 r!2 r!2 r!2 s!1)) (* (- 108) (* r00 ?x5359 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 1296) (* s00 r00 r00 r!2 r!2 r!2 r!2 x!0)) (* 108 (* ?x5359 ?x5359 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 9) (* ?x3430 ?x3430 ?x5359 ?x3425 ?x3425 ?x3425)) (* 108 (* r00 x00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425)) (* (- 5832) (* s00 s00 r00 r!2 x!0)) (* 54 (* r00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 5184) (* s00 r00 r00 r00 r!2 s!1 s!1)) (* (- 216) (* s00 r00 r00 r00 s!1 s!1 s!1)) (* (- 23328) (* s00 r00 r00 r00 r!2 r!2 r!2 s!1)) (* (- 3888) (* s00 s00 r00 r00 r!2 r!2 r!2 x!0)) (* (- 216) (* s00 r00 r00 r00 r!2 r!2 s!1 s!1 s!1)) (* 23328 (* s00 r00 r00 r00 r!2 r!2 r!2 x!0)) (* 432 (* s00 r00 x00 r!2 x!0 s!1 s!1)) (* (- 6480) (* s00 r00 x00 r!2 r!2 s!1 s!1)) (* 216 (* s00 r00 x00 x!0 s!1 s!1)) (* 7776 (* s00 r00 x00 r!2 r!2 r!2 r!2 x!0)) (* (- 1944) (* s00 r00 x00 s!1)) (* 432 (* s00 r00 r00 r!2 r!2 r!2 s!1 s!1)) (* (- 25272) (* s00 r00 x00 r!2 r!2 s!1)) (* (- 3240) (* s00 s00 r00 r!2 r!2 x!0 s!1)) (* (- 23328) (* s00 r00 x00 r!2 r!2 r!2 s!1)) (* (- 108) (* ?x3430 ?x3430 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* 108 (* x00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425)) (* 12636 (* s00 s00 r00 r!2 r!2 s!1)) (* 108 (* x00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 1296) (* s00 r00 r00 r00 s!1 s!1)) (* (- 36) (* r00 r00 s00 s00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* 324 (* s00 s00 r00 r00 s!1)) (* 3240 (* s00 s00 r00 r!2 r!2 s!1 s!1)) (* 3888 (* r00 r00 r00 x00 s!1)) (* 1296 (* s00 s00 r00 r!2 r!2 r!2 s!1 s!1)) (* 36 (* r00 r00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 12636) (* s00 s00 r00 r!2 r!2 x!0)) (* 324 (* s00 r00 r00 s!1)) (* (- 216) (* x00 ?x3430 ?x3430 ?x5359 ?x5359 ?x3425 ?x3425)) (* 1296 (* s00 r00 x00 x!0 s!1)) (* (- 4) (* ?x5359 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 46656) (* r00 r00 r00 x00 r!2 r!2 r!2 x!0)) (* (- 108) (* s00 s00 r00 r!2 r!2 x!0 s!1 s!1)) (* (- 1080) (* s00 r00 r00 r!2 r!2 x!0 s!1)) (* 216 (* s00 r00 r00 r00 x!0 s!1 s!1)) (* 432 (* s00 r00 r00 r00 r!2 x!0 s!1 s!1)) (* 5832 (* s00 s00 r00 r!2 s!1)) (* 6480 (* s00 r00 x00 r!2 r!2 x!0 s!1)) (* 108 (* s00 ?x3430 ?x3430 ?x5359 ?x5359 ?x3425 ?x3425)) (* (- 972) (* s00 s00 r00 x!0)) (* 972 (* s00 s00 r00 s!1)) (* 216 (* s00 r00 r00 r00 r!2 r!2 x!0 s!1 s!1)) (* 1296 (* s00 r00 r00 r!2 r!2 r!2 r!2 s!1)) (* (- 7776) (* s00 r00 r00 r00 r!2 r!2 r!2 r!2 s!1)) (* (- 108) (* r00 ?x3430 ?x3430 ?x5359 ?x5359 ?x3425 ?x3425)) (* (- 216) (* x00 ?x5359 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 1296) (* s00 s00 r00 r!2 r!2 r!2 x!0 s!1)) (* 51 (* s00 s00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425)) (* 3888 (* s00 s00 r00 r!2 r!2 r!2 r!2 s!1)) (* (- 11664) (* s00 s00 r00 r!2 r!2 r!2 x!0)) (* 432 (* r00 r00 r00 ?x3430 ?x3430 ?x5359 ?x5359 ?x3425 ?x3425)) (* 1080 (* s00 r00 r00 r!2 r!2 s!1 s!1)) (* 2592 (* s00 r00 r00 r00 r!2 r!2 r!2 x!0 s!1)) (* 864 (* s00 r00 r00 r!2 s!1 s!1)) (* 7776 (* s00 r00 r00 r00 r!2 r!2 r!2 r!2 x!0)) (* 5184 (* s00 r00 r00 r00 r!2 x!0 s!1)) (* (- 216) (* r00 r00 r00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 3888) (* s00 r00 r00 r!2 r!2 r!2 x!0)) (* (- 108) (* r00 s00 s00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* 216 (* s00 r00 r00 s!1 s!1)) (* (- 4212) (* s00 r00 r00 r!2 r!2 x!0)) (* 3888 (* s00 r00 r00 r!2 r!2 r!2 s!1)) (* (- 1944) (* s00 r00 r00 r!2 x!0)) (* (- 432) (* r00 r00 r00 x00 r!2 r!2 x!0 s!1 s!1)) (* (- 864) (* r00 r00 r00 x00 r!2 x!0 s!1 s!1)) (* (- 2592) (* s00 r00 r00 r00 r!2 r!2 r!2 s!1 s!1)) (* 432 (* r00 r00 r00 x00 r!2 r!2 s!1 s!1 s!1)) (* (- 6480) (* s00 r00 r00 r00 r!2 r!2 s!1 s!1)) (* (- 864) (* s00 r00 r00 r!2 x!0 s!1)) (* (- 1944) (* s00 r00 r00 r00 s!1)) (* 108 (* x00 x00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* 1944 (* s00 r00 x00 x!0)) (* 15 (* ?x3430 ?x3430 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 36) (* r00 r00 s00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 11664) (* s00 r00 r00 r00 r!2 s!1)) (* (- 25272) (* s00 r00 r00 r00 r!2 r!2 s!1)) (* 216 (* s00 s00 r00 r!2 s!1 s!1 s!1)) (* 108 (* s00 s00 r00 r!2 r!2 s!1 s!1 s!1)) (* 1944 (* s00 r00 r00 r00 x!0)) (* 36 (* r00 r00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425)) (* 216 (* s00 r00 x00 r!2 r!2 x!0 s!1 s!1)) (* 108 (* r00 s00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 324) (* s00 r00 r00 x!0)) (* (- 432) (* s00 r00 r00 r00 r!2 s!1 s!1 s!1)) (* 51 (* s00 s00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* 9 (* s00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425)) (* 11664 (* s00 r00 r00 r00 r!2 x!0)) (* (- 108) (* s00 s00 r00 x!0 s!1 s!1)) (* 54 (* r00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425 ?x3425)) (* 1296 (* s00 r00 r00 r00 x!0 s!1)) (* 6480 (* s00 r00 r00 r00 r!2 r!2 x!0 s!1)) (* 1944 (* s00 r00 r00 r!2 s!1)) (* (- 216) (* s00 s00 r00 r!2 x!0 s!1 s!1)) (* 2592 (* s00 s00 r00 r!2 s!1 s!1)) (* 1080 (* s00 s00 r00 r00 r!2 r!2 s!1 s!1)) (* (- 864) (* s00 s00 r00 r00 r!2 x!0 s!1)) (* (- 216) (* s00 s00 r00 r00 x!0 s!1)) (* 216 (* s00 s00 r00 r00 s!1 s!1)) (* 864 (* s00 s00 r00 r00 r!2 s!1 s!1)) (* 108 (* r00 s00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 432) (* s00 r00 r00 r!2 r!2 r!2 x!0 s!1)) (* 36 (* r00 r00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425 ?x3425)) (* 108 (* s00 ?x5359 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 480) (* s00 s00 s00 r!2 r!2 s!1 s!1)) (* 108 (* r00 x00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* 864 (* s00 s00 s00 r!2 x!0)) (* (- 96) (* s00 s00 s00 s!1 s!1)) (* (- 66) (* s00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425 ?x3425)) (* 36 (* r00 r00 ?x3430 ?x3430 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 66) (* s00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425)) (* 72 (* s00 r00 r00 r!2 s!1 s!1 s!1)) (* 36 (* s00 r00 r00 s!1 s!1 s!1)) (* (- 50544) (* r00 r00 r00 x00 r!2 r!2 x!0)) (* (- 432) (* r00 r00 r00 x00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425)) (* (- 36) (* s00 s00 r00 r00 r!2 r!2 x!0 s!1 s!1)) (* 144 (* s00 s00 s00 x!0)) (* (- 864) (* s00 s00 s00 r!2 s!1)) (* (- 10368) (* r00 r00 r00 x00 r!2 x!0 s!1)) (* (- 384) (* s00 s00 s00 r!2 s!1 s!1)) (* 72 (* s00 s00 r00 r00 r!2 s!1 s!1 s!1)) (* (- 12) (* s00 ?x5359 ?x5359 ?x3425 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 1872) (* s00 s00 s00 r!2 r!2 s!1)) (* 36 (* s00 s00 r00 r00 r!2 r!2 s!1 s!1 s!1)) (* 1296 (* s00 s00 r00 r00 r!2 r!2 r!2 r!2 s!1)) (* (- 11664) (* s00 r00 x00 r!2 s!1)) (* 15552 (* r00 r00 r00 x00 r!2 r!2 r!2 r!2 s!1)))))
 (let (($x4785 (= ?x4784 0)))
 (let (($x7770 (not $x4785)))
 (let ((?x5027 (* (- 9) s!1)))
 (let ((?x5894 (* r00 r00 s!1)))
 (let ((?x5025 (* 36 ?x5894)))
 (let ((?x1398 (* x00 x00)))
 (let ((?x706 (* 108 ?x1398)))
 (let ((?x1236 (* s00 s00 s00)))
 (let ((?x6500 (* 16 ?x1236)))
 (let ((?x934 (* r00 r00 r00 x00)))
 (let ((?x6193 (* (- 432) ?x934)))
 (let ((?x857 (* s00 x00)))
 (let ((?x6443 (* (- 108) ?x857)))
 (let ((?x699 (* s00 r00 r00)))
 (let ((?x5007 (* (- 36) ?x699)))
 (let ((?x643 (* s00 s00)))
 (let ((?x6537 (* 51 ?x643)))
 (let ((?x574 (* r00 x00)))
 (let ((?x5902 (* 108 ?x574)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1760 (+ ?x137 (* (- 108) (* r00 x!0)) (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x5902 ?x6537 ?x5007 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x6443 ?x6193 (* 216 (* s00 r00 r00 r00)) (* 108 (* s00 x!0)) ?x6500 ?x706 (* 54 (* r00 s!1)) (* 15 (* s!1 s!1)) (* 108 (* s00 r00 s!1)) (* 108 (* x!0 x!0)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 216) (* x00 x!0)) (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* (- 66) (* s00 s!1)) ?x5025 ?x5027 (* 108 (* x00 s!1)) (* (- 108) (* x!0 s!1)))))
 (let ((?x929 (* r00 r00 x00)))
 (let ((?x6130 (* 36 ?x929)))
 (let ((?x1574 (* (- 6) ?x857)))
 (let ((?x6131 (* 15 ?x643)))
 (let ((?x6299 (* 54 ?x574)))
 (let ((?x5037 (+ ?x137 (* (- 54) (* r00 x!0)) (* (- 24) (* s00 r00)) ?x6299 ?x6131 ?x5007 (* 2 (* s00 s00 r00)) ?x1574 ?x6130 (* (- 36) (* r00 r!2 x!0)) (* 6 (* s00 x!0)) (* 24 (* r00 s!1)) (* (- 3) (* s!1 s!1)) (* 2 (* s00 r00 s!1)) (* (- 24) (* s00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 2) (* r!2 s!1 s!1)) (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) ?x5025 ?x5027 (* 6 (* x00 s!1)) (* (- 2) (* s00 r!2 s!1)) (* (- 54) (* r!2 x!0)) (* (- 4) (* r00 s!1 s!1)) (* (- 6) (* x!0 s!1)) (* 4 (* s00 s00 r!2)) (* 36 (* r00 x00 r!2)) (* 24 (* r!2 s!1)))))
 (let (($x5041 (= ?x5037 0)))
 (let ((?x4833 (* (- 3) s!1)))
 (let ((?x1361 (* 4 ?x643)))
 (let ((?x6300 (* 18 ?x574)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2918 (+ ?x44 (* (- 18) (* r00 x!0)) (* (- 9) (* s00 r00)) ?x6300 ?x1361 (* (- 6) ?x699) (* 9 (* r00 s!1)) (* (- 2) (* s!1 s!1)) (* 6 (* s00 r00 r!2)) (* (- 9) (* s00 r!2)) (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* 6 ?x5894) (* (- 6) (* r00 r!2 s!1)) ?x4833 (* (- 18) (* r!2 x!0)) (* 9 (* r!2 s!1)))))
 (let (($x3199 (= ?x2918 0)))
 (let ((?x7935 (* r!2 s!1)))
 (let ((?x1859 (* 2 ?x7935)))
 (let ((?x6629 (* 6 x!0)))
 (let ((?x6254 (* 3 r!2)))
 (let ((?x521 (* r00 r00 r00)))
 (let ((?x522 (* 12 ?x521)))
 (let ((?x478 (* s00 r00)))
 (let ((?x556 (* (- 6) ?x478)))
 (let ((?x553 (* (- 6) x00)))
 (let ((?x552 (* (- 3) r00)))
 (let ((?x409 (+ ?x44 ?x552 ?x553 ?x556 ?x522 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x6254 ?x6629 ?x4833 ?x1859)))
 (let (($x417 (= ?x409 0)))
 (let (($x4786 (and $x1303 $x417 $x3199 $x5041 (= ?x1760 0) $x7770)))
 (let ((?x7668 (+ ?x7667 x!0)))
 (let ((?x815 (+ (* 324 (* s!1 s00 s00 r00 r00)) (* 1296 (* r!2 r!2 r!2 s!1 s!1 s00 s00 r00)) (* 216 (* r00 s00 x00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 54) (* r00 s00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425)) (* (- 324) (* x!0 s00 s00 r00 r00)) (* 50544 (* r!2 r!2 s!1 r00 r00 r00 x00)) (* 4212 (* r!2 r!2 s!1 s00 s00 r00 r00)) (* 432 (* s!1 s!1 s!1 r00 r00 r00 x00)) (* (- 4212) (* r!2 r!2 x!0 s00 s00 r00 r00)) (* (- 1944) (* r!2 x!0 s00 s00 r00 r00)) (* (- 108) (* s00 x00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 3888) (* r!2 r!2 r!2 r!2 x!0 s00 s00 r00)) (* (- 4) (* ?x3430 ?x3430 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425 ?x3425)) (* 648 (* s!1 s!1 s00 s00 r00)) (* (- 3888) (* x!0 r00 r00 r00 x00)) (* (- 12960) (* r!2 r!2 s!1 x!0 r00 r00 r00 x00)) (* (- 15552) (* r!2 r!2 r!2 r!2 x!0 r00 r00 r00 x00)) (* (- 5184) (* r!2 r!2 r!2 s!1 x!0 r00 r00 r00 x00)) (* 3888 (* r!2 r!2 r!2 s!1 s00 s00 r00 r00)) (* 5184 (* r!2 r!2 r!2 s!1 s!1 r00 r00 r00 x00)) (* 23328 (* r!2 r!2 r!2 x!0 s00 r00 x00)) (* 25272 (* r!2 r!2 x!0 s00 r00 x00)) (* (- 23328) (* r!2 x!0 r00 r00 r00 x00)) (* (- 50544) (* r!2 r!2 x!0 r00 r00 r00 x00)) (* 11664 (* r!2 x!0 s00 r00 x00)) (* 6480 (* r!2 r!2 s!1 x!0 s00 r00 x00)) (* 5184 (* r!2 s!1 x!0 s00 r00 x00)) (* 46656 (* r!2 r!2 r!2 s!1 r00 r00 r00 x00)) (* 1296 (* s!1 x!0 s00 r00 x00)) (* (- 46656) (* r!2 r!2 r!2 x!0 r00 r00 r00 x00)) (* 2592 (* s!1 s!1 r00 r00 r00 x00)) (* 1944 (* x!0 s00 r00 x00)) (* (- 216) (* r!2 r!2 s!1 s!1 s!1 s00 r00 x00)) (* 10368 (* r!2 s!1 s!1 r00 r00 r00 x00)) (* (- 432) (* r!2 s!1 s!1 s!1 s00 r00 x00)) (* 12960 (* r!2 r!2 s!1 s!1 r00 r00 r00 x00)) (* (- 216) (* s!1 s!1 s!1 s00 r00 x00)) (* (- 2592) (* r!2 r!2 r!2 s!1 s!1 s00 r00 x00)) (* (- 2592) (* s!1 x!0 r00 r00 r00 x00)) (* (- 6480) (* r!2 r!2 s!1 s!1 s00 r00 x00)) (* (- 10368) (* r!2 s!1 x!0 r00 r00 r00 x00)) (* (- 5184) (* r!2 s!1 s!1 s00 r00 x00)) (* (- 1296) (* s!1 s!1 s00 r00 x00)) (* (- 7776) (* r!2 r!2 r!2 r!2 s!1 s00 r00 x00)) (* (- 23328) (* r!2 r!2 r!2 s!1 s00 r00 x00)) (* (- 25272) (* r!2 r!2 s!1 s00 r00 x00)) (* 15552 (* r!2 r!2 r!2 r!2 s!1 r00 r00 r00 x00)) (* (- 11664) (* r!2 s!1 s00 r00 x00)) (* 216 (* r!2 r!2 s!1 s!1 x!0 s00 r00 x00)) (* 432 (* r!2 s!1 s!1 x!0 s00 r00 x00)) (* 216 (* s!1 s!1 x!0 s00 r00 x00)) (* 2592 (* r!2 r!2 r!2 s!1 x!0 s00 r00 x00)) (* 7776 (* r!2 r!2 r!2 r!2 x!0 s00 r00 x00)) (* (- 1944) (* s!1 s00 r00 x00)) (* 432 (* r!2 r!2 r!2 s!1 s!1 s00 r00 r00)) (* (- 3240) (* r!2 r!2 s!1 x!0 s00 s00 r00)) (* 108 (* x00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 108) (* ?x3430 ?x3430 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 216) (* r00 r00 r00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425)) (* 108 (* s00 ?x3430 ?x3430 ?x7668 ?x7668 ?x3425 ?x3425)) (* (- 108) (* r00 ?x3430 ?x3430 ?x7668 ?x7668 ?x3425 ?x3425)) (* (- 108) (* r00 ?x7668 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 36) (* r00 r00 s00 s00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* 12636 (* r!2 r!2 s!1 s00 s00 r00)) (* (- 9) (* ?x3430 ?x3430 ?x7668 ?x3425 ?x3425 ?x3425)) (* 51 (* s00 s00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425)) (* (- 216) (* x00 ?x3430 ?x3430 ?x7668 ?x7668 ?x3425 ?x3425)) (* (- 12636) (* r!2 r!2 x!0 s00 s00 r00)) (* 3888 (* s!1 r00 r00 r00 x00)) (* 36 (* r00 r00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 4) (* ?x7668 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425 ?x3425 ?x3425)) (* 432 (* r00 r00 r00 ?x3430 ?x3430 ?x7668 ?x7668 ?x3425 ?x3425)) (* 108 (* r00 x00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425)) (* 54 (* r00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425)) (* 972 (* s!1 s00 s00 r00)) (* 5832 (* r!2 s!1 s00 s00 r00)) (* (- 972) (* x!0 s00 s00 r00)) (* (- 5832) (* r!2 x!0 s00 s00 r00)) (* 11664 (* r!2 r!2 r!2 s!1 s00 s00 r00)) (* (- 11664) (* r!2 r!2 r!2 x!0 s00 s00 r00)) (* 3888 (* r!2 r!2 r!2 r!2 s!1 s00 s00 r00)) (* (- 648) (* s!1 x!0 s00 s00 r00)) (* (- 1296) (* r!2 r!2 r!2 s!1 x!0 s00 s00 r00)) (* 3240 (* r!2 r!2 s!1 s!1 s00 s00 r00)) (* 324 (* s!1 s00 r00 r00)) (* (- 1296) (* r!2 r!2 r!2 r!2 x!0 s00 r00 r00)) (* (- 216) (* x00 ?x7668 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* 108 (* ?x7668 ?x7668 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 108) (* r00 s00 s00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* 4212 (* r!2 r!2 s!1 s00 r00 r00)) (* (- 1944) (* r!2 x!0 s00 r00 r00)) (* (- 4212) (* r!2 r!2 x!0 s00 r00 r00)) (* 3888 (* r!2 r!2 r!2 s!1 s00 r00 r00)) (* 216 (* s!1 s!1 s00 r00 r00)) (* (- 216) (* r00 r00 r00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 3888) (* r!2 r!2 r!2 x!0 s00 r00 r00)) (* (- 864) (* r!2 s!1 x!0 s00 r00 r00)) (* (- 216) (* s!1 s!1 s!1 s00 r00 r00 r00)) (* 432 (* r!2 r!2 s!1 s!1 s!1 r00 r00 r00 x00)) (* (- 6480) (* r!2 r!2 s!1 s!1 s00 r00 r00 r00)) (* (- 2592) (* r!2 r!2 r!2 s!1 s!1 s00 r00 r00 r00)) (* (- 432) (* s!1 s!1 x!0 r00 r00 r00 x00)) (* (- 5184) (* r!2 s!1 s!1 s00 r00 r00 r00)) (* (- 864) (* r!2 s!1 s!1 x!0 r00 r00 r00 x00)) (* (- 432) (* r!2 r!2 s!1 s!1 x!0 r00 r00 r00 x00)) (* (- 1296) (* s!1 s!1 s00 r00 r00 r00)) (* 108 (* x00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 7776) (* r!2 r!2 r!2 r!2 s!1 s00 r00 r00 r00)) (* (- 23328) (* r!2 r!2 r!2 s!1 s00 r00 r00 r00)) (* (- 25272) (* r!2 r!2 s!1 s00 r00 r00 r00)) (* (- 11664) (* r!2 s!1 s00 r00 r00 r00)) (* (- 36) (* r00 r00 s00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* 15 (* ?x3430 ?x3430 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425)) (* 36 (* r00 r00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 1944) (* s!1 s00 r00 r00 r00)) (* (- 432) (* r!2 s!1 s!1 s!1 s00 r00 r00 r00)) (* 108 (* r00 s00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425)) (* 1944 (* x!0 s00 r00 r00 r00)) (* 9 (* s00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425)) (* 51 (* s00 s00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 216) (* r!2 r!2 s!1 s!1 s!1 s00 r00 r00 r00)) (* 11664 (* r!2 x!0 s00 r00 r00 r00)) (* 108 (* x00 x00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* 25272 (* r!2 r!2 x!0 s00 r00 r00 r00)) (* 54 (* r00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425 ?x3425)) (* 23328 (* r!2 r!2 r!2 x!0 s00 r00 r00 r00)) (* 1944 (* r!2 s!1 s00 r00 r00)) (* 1296 (* s!1 x!0 s00 r00 r00 r00)) (* 6480 (* r!2 r!2 s!1 x!0 s00 r00 r00 r00)) (* (- 324) (* x!0 s00 r00 r00)) (* 5184 (* r!2 s!1 x!0 s00 r00 r00 r00)) (* 7776 (* r!2 r!2 r!2 r!2 x!0 s00 r00 r00 r00)) (* 864 (* r!2 s!1 s!1 s00 r00 r00)) (* 2592 (* r!2 r!2 r!2 s!1 x!0 s00 r00 r00 r00)) (* 1080 (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* (- 216) (* s!1 x!0 s00 r00 r00)) (* (- 1080) (* r!2 r!2 s!1 x!0 s00 r00 r00)) (* 216 (* s!1 s!1 x!0 s00 r00 r00 r00)) (* 432 (* r!2 s!1 s!1 x!0 s00 r00 r00 r00)) (* 216 (* r!2 r!2 s!1 s!1 x!0 s00 r00 r00 r00)) (* 1296 (* r!2 r!2 r!2 r!2 s!1 s00 r00 r00)) (* (- 3888) (* r!2 r!2 r!2 x!0 s00 s00 r00 r00)) (* 216 (* r!2 s!1 s!1 s!1 s00 s00 r00)) (* 108 (* r!2 r!2 s!1 s!1 s!1 s00 s00 r00)) (* (- 108) (* s!1 s!1 x!0 s00 s00 r00)) (* (- 216) (* r!2 s!1 s!1 x!0 s00 s00 r00)) (* (- 108) (* r!2 r!2 s!1 s!1 x!0 s00 s00 r00)) (* 2592 (* r!2 s!1 s!1 s00 s00 r00)) (* 1080 (* r!2 r!2 s!1 s!1 s00 s00 r00 r00)) (* (- 216) (* s!1 x!0 s00 s00 r00 r00)) (* (- 864) (* r!2 s!1 x!0 s00 s00 r00 r00)) (* 216 (* s!1 s!1 s00 s00 r00 r00)) (* 864 (* r!2 s!1 s!1 s00 s00 r00 r00)) (* (- 1080) (* r!2 r!2 s!1 x!0 s00 s00 r00 r00)) (* 1944 (* r!2 s!1 s00 s00 r00 r00)) (* 1296 (* r!2 r!2 r!2 r!2 s!1 s00 s00 r00 r00)) (* (- 1296) (* r!2 r!2 r!2 r!2 x!0 s00 s00 r00 r00)) (* 432 (* r!2 r!2 r!2 s!1 s!1 s00 s00 r00 r00)) (* (- 432) (* r!2 r!2 r!2 s!1 x!0 s00 s00 r00 r00)) (* 36 (* s!1 s!1 s!1 s00 s00 r00 r00)) (* 72 (* r!2 s!1 s!1 s!1 s00 s00 r00 r00)) (* 36 (* r!2 r!2 s!1 s!1 s!1 s00 s00 r00 r00)) (* (- 2592) (* r!2 s!1 x!0 s00 s00 r00)) (* (- 36) (* s!1 s!1 x!0 s00 s00 r00 r00)) (* (- 72) (* r!2 s!1 s!1 x!0 s00 s00 r00 r00)) (* (- 36) (* r!2 r!2 s!1 s!1 x!0 s00 s00 r00 r00)) (* (- 66) (* s00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425 ?x3425)) (* 15 (* ?x7668 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425 ?x3425)) (* 432 (* r00 r00 r00 ?x7668 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 216) (* r00 s00 ?x3430 ?x3430 ?x7668 ?x7668 ?x3425 ?x3425)) (* 108 (* s00 ?x7668 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* 36 (* r00 r00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425)) (* 108 (* x00 x00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425)) (* (- 108) (* ?x7668 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 54) (* r00 s00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* 108 (* r00 s00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425 ?x3425)) (* 216 (* r00 r00 r00 s00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* 36 (* r00 r00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425 ?x3425)) (* 108 (* r00 x00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 66) (* s00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 216) (* r00 s00 ?x7668 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 432) (* r00 r00 r00 x00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 12) (* s00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425)) (* 9 (* s00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* 16 (* s00 s00 s00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425)) (* (- 108) (* s00 x00 ?x3430 ?x3430 ?x7668 ?x3425 ?x3425)) (* (- 9) (* ?x7668 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425)) (* (- 432) (* r!2 r!2 r!2 s!1 x!0 s00 r00 r00)) (* 36 (* s!1 s!1 s!1 s00 r00 r00)) (* 72 (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* 108 (* s!1 s!1 s!1 s00 s00 r00)) (* (- 144) (* s!1 s00 s00 s00)) (* 864 (* r!2 s!1 s!1 s!1 r00 r00 r00 x00)) (* (- 864) (* r!2 s!1 s00 s00 s00)) (* (- 96) (* s!1 s!1 s00 s00 s00)) (* 144 (* x!0 s00 s00 s00)) (* 864 (* r!2 x!0 s00 s00 s00)) (* 96 (* s!1 x!0 s00 s00 s00)) (* 36 (* r!2 r!2 s!1 s!1 s!1 s00 r00 r00)) (* (- 36) (* s!1 s!1 x!0 s00 r00 r00)) (* (- 72) (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 36) (* r!2 r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 1872) (* r!2 r!2 s!1 s00 s00 s00)) (* (- 1728) (* r!2 r!2 r!2 s!1 s00 s00 s00)) (* (- 384) (* r!2 s!1 s!1 s00 s00 s00)) (* (- 480) (* r!2 r!2 s!1 s!1 s00 s00 s00)) (* (- 12) (* s00 ?x7668 ?x7668 ?x3425 ?x3425 ?x3425 ?x3425 ?x3425)) (* 108 (* ?x3430 ?x3430 ?x7668 ?x7668 ?x7668 ?x3425 ?x3425)) (* (- 576) (* r!2 r!2 r!2 r!2 s!1 s00 s00 s00)) (* (- 192) (* r!2 r!2 r!2 s!1 s!1 s00 s00 s00)) (* 23328 (* r!2 s!1 r00 r00 r00 x00)) (* (- 16) (* s!1 s!1 s!1 s00 s00 s00)) (* (- 32) (* r!2 s!1 s!1 s!1 s00 s00 s00)) (* (- 16) (* r!2 r!2 s!1 s!1 s!1 s00 s00 s00)) (* 1872 (* r!2 r!2 x!0 s00 s00 s00)) (* 1728 (* r!2 r!2 r!2 x!0 s00 s00 s00)) (* 384 (* r!2 s!1 x!0 s00 s00 s00)) (* 480 (* r!2 r!2 s!1 x!0 s00 s00 s00)) (* 576 (* r!2 r!2 r!2 r!2 x!0 s00 s00 s00)) (* 192 (* r!2 r!2 r!2 s!1 x!0 s00 s00 s00)) (* 16 (* s!1 s!1 x!0 s00 s00 s00)) (* 32 (* r!2 s!1 s!1 x!0 s00 s00 s00)) (* 16 (* r!2 r!2 s!1 s!1 x!0 s00 s00 s00)))))
 (let ((?x1428 (* (- 108) ?x1398)))
 (let ((?x1427 (* (- 16) ?x1236)))
 (let ((?x1108 (* s00 r00 r00 r00)))
 (let ((?x1423 (* (- 216) ?x1108)))
 (let ((?x935 (* 432 ?x934)))
 (let ((?x1181 (* 108 ?x857)))
 (let ((?x783 (* s00 s00 r00 r00)))
 (let ((?x784 (* 36 ?x783)))
 (let ((?x720 (* s00 s00 r00)))
 (let ((?x1064 (* 108 ?x720)))
 (let ((?x1052 (* 36 ?x699)))
 (let ((?x1417 (* (- 51) ?x643)))
 (let ((?x7375 (* s!1 r00 r00)))
 (let ((?x5797 (* (- 36) ?x7375)))
 (let ((?x1414 (* (- 108) ?x574)))
 (let ((?x565 (* s00 r00 x00)))
 (let ((?x1413 (* (- 216) ?x565)))
 (let ((?x572 (* 54 ?x478)))
 (let ((?x1039 (* (- 9) s00)))
 (let ((?x1908 (* 9 s!1)))
 (let ((?x7861 (+ ?x1908 ?x1039 ?x572 ?x1413 ?x1414 (* (- 15) (* s!1 s!1)) ?x5797 ?x1417 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1052 ?x1064 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x784 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1181 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x935 (* 12 (* s!1 s!1 s00)) ?x1423 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1427 (* 216 (* x!0 x00)) ?x1428)))
 (let ((?x942 (* (- 36) ?x929)))
 (let ((?x858 (* 6 ?x857)))
 (let ((?x748 (* (- 2) ?x720)))
 (let ((?x968 (* (- 15) ?x643)))
 (let ((?x603 (* (- 54) ?x574)))
 (let ((?x616 (* 24 ?x478)))
 (let ((?x2204 (+ ?x1908 ?x1039 (* (- 24) ?x7935) (* 24 (* r!2 s00)) ?x616 ?x603 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x5797 ?x968 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1052 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x748 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x858 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x942 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x700 (* 6 ?x699)))
 (let ((?x656 (* (- 4) ?x643)))
 (let ((?x588 (* (- 18) ?x574)))
 (let ((?x593 (* 9 ?x478)))
 (let ((?x430 (* (- 3) s00)))
 (let ((?x5781 (+ (* 3 s!1) ?x430 (* (- 9) ?x7935) (* 9 (* r!2 s00)) ?x593 ?x588 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x7375) ?x656 (* 18 (* x!0 r00)) ?x700 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x3827 (+ ?x6254 ?x4833 ?x6629 ?x44 ?x552 ?x553 ?x1859 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x556 ?x522)))
 (let (($x398 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x353)) 0)))
 (let (($x817 (and $x398 (= ?x3827 0) (= ?x5781 0) (= ?x2204 0) (= ?x7861 0) (not (= ?x815 0)))))
 (let (($x6502 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1438 (+ 3 ?x213 s)))
 (let ((?x332 (* (- 1) s)))
 (let ((?x1444 (+ ?x332 x)))
 (let ((?x1435 (+ 1 r)))
 (let ((?x523 (+ (* 324 (* s s00 s00 r00 r00)) (* 1296 (* r r r s s s00 s00 r00)) (* 216 (* r00 s00 x00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 54) (* r00 s00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438)) (* (- 324) (* x s00 s00 r00 r00)) (* 50544 (* r r s r00 r00 r00 x00)) (* 4212 (* r r s s00 s00 r00 r00)) (* 432 (* s s s r00 r00 r00 x00)) (* (- 4212) (* r r x s00 s00 r00 r00)) (* (- 1944) (* r x s00 s00 r00 r00)) (* (- 108) (* s00 x00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 3888) (* r r r r x s00 s00 r00)) (* (- 4) (* ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438 ?x1438)) (* 648 (* s s s00 s00 r00)) (* (- 3888) (* x r00 r00 r00 x00)) (* (- 12960) (* r r s x r00 r00 r00 x00)) (* (- 15552) (* r r r r x r00 r00 r00 x00)) (* (- 5184) (* r r r s x r00 r00 r00 x00)) (* 3888 (* r r r s s00 s00 r00 r00)) (* 5184 (* r r r s s r00 r00 r00 x00)) (* 23328 (* r r r x s00 r00 x00)) (* 25272 (* r r x s00 r00 x00)) (* (- 23328) (* r x r00 r00 r00 x00)) (* (- 50544) (* r r x r00 r00 r00 x00)) (* 11664 (* r x s00 r00 x00)) (* 6480 (* r r s x s00 r00 x00)) (* 5184 (* r s x s00 r00 x00)) (* 46656 (* r r r s r00 r00 r00 x00)) (* 1296 (* s x s00 r00 x00)) (* (- 46656) (* r r r x r00 r00 r00 x00)) (* 2592 (* s s r00 r00 r00 x00)) (* 1944 (* x s00 r00 x00)) (* (- 216) (* r r s s s s00 r00 x00)) (* 10368 (* r s s r00 r00 r00 x00)) (* (- 432) (* r s s s s00 r00 x00)) (* 12960 (* r r s s r00 r00 r00 x00)) (* (- 216) (* s s s s00 r00 x00)) (* (- 2592) (* r r r s s s00 r00 x00)) (* (- 2592) (* s x r00 r00 r00 x00)) (* (- 6480) (* r r s s s00 r00 x00)) (* (- 10368) (* r s x r00 r00 r00 x00)) (* (- 5184) (* r s s s00 r00 x00)) (* (- 1296) (* s s s00 r00 x00)) (* (- 7776) (* r r r r s s00 r00 x00)) (* (- 23328) (* r r r s s00 r00 x00)) (* (- 25272) (* r r s s00 r00 x00)) (* 15552 (* r r r r s r00 r00 r00 x00)) (* (- 11664) (* r s s00 r00 x00)) (* 216 (* r r s s x s00 r00 x00)) (* 432 (* r s s x s00 r00 x00)) (* 216 (* s s x s00 r00 x00)) (* 2592 (* r r r s x s00 r00 x00)) (* 7776 (* r r r r x s00 r00 x00)) (* (- 1944) (* s s00 r00 x00)) (* 432 (* r r r s s s00 r00 r00)) (* (- 3240) (* r r s x s00 s00 r00)) (* 108 (* x00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* (- 108) (* ?x1435 ?x1435 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 216) (* r00 r00 r00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* 108 (* s00 ?x1435 ?x1435 ?x1444 ?x1444 ?x1438 ?x1438)) (* (- 108) (* r00 ?x1435 ?x1435 ?x1444 ?x1444 ?x1438 ?x1438)) (* (- 108) (* r00 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 36) (* r00 r00 s00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 12636 (* r r s s00 s00 r00)) (* (- 9) (* ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* 51 (* s00 s00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438)) (* (- 216) (* x00 ?x1435 ?x1435 ?x1444 ?x1444 ?x1438 ?x1438)) (* (- 12636) (* r r x s00 s00 r00)) (* 3888 (* s r00 r00 r00 x00)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 4) (* ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438 ?x1438 ?x1438)) (* 432 (* r00 r00 r00 ?x1435 ?x1435 ?x1444 ?x1444 ?x1438 ?x1438)) (* 108 (* r00 x00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438)) (* 54 (* r00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* 972 (* s s00 s00 r00)) (* 5832 (* r s s00 s00 r00)) (* (- 972) (* x s00 s00 r00)) (* (- 5832) (* r x s00 s00 r00)) (* 11664 (* r r r s s00 s00 r00)) (* (- 11664) (* r r r x s00 s00 r00)) (* 3888 (* r r r r s s00 s00 r00)) (* (- 648) (* s x s00 s00 r00)) (* (- 1296) (* r r r s x s00 s00 r00)) (* 3240 (* r r s s s00 s00 r00)) (* 324 (* s s00 r00 r00)) (* (- 1296) (* r r r r x s00 r00 r00)) (* (- 216) (* x00 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 108 (* ?x1444 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 108) (* r00 s00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 4212 (* r r s s00 r00 r00)) (* (- 1944) (* r x s00 r00 r00)) (* (- 4212) (* r r x s00 r00 r00)) (* 3888 (* r r r s s00 r00 r00)) (* 216 (* s s s00 r00 r00)) (* (- 216) (* r00 r00 r00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 3888) (* r r r x s00 r00 r00)) (* (- 864) (* r s x s00 r00 r00)) (* (- 216) (* s s s s00 r00 r00 r00)) (* 432 (* r r s s s r00 r00 r00 x00)) (* (- 6480) (* r r s s s00 r00 r00 r00)) (* (- 2592) (* r r r s s s00 r00 r00 r00)) (* (- 432) (* s s x r00 r00 r00 x00)) (* (- 5184) (* r s s s00 r00 r00 r00)) (* (- 864) (* r s s x r00 r00 r00 x00)) (* (- 432) (* r r s s x r00 r00 r00 x00)) (* (- 1296) (* s s s00 r00 r00 r00)) (* 108 (* x00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 7776) (* r r r r s s00 r00 r00 r00)) (* (- 23328) (* r r r s s00 r00 r00 r00)) (* (- 25272) (* r r s s00 r00 r00 r00)) (* (- 11664) (* r s s00 r00 r00 r00)) (* (- 36) (* r00 r00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 15 (* ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* 36 (* r00 r00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* (- 1944) (* s s00 r00 r00 r00)) (* (- 432) (* r s s s s00 r00 r00 r00)) (* 108 (* r00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* 1944 (* x s00 r00 r00 r00)) (* 9 (* s00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438)) (* 51 (* s00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 216) (* r r s s s s00 r00 r00 r00)) (* 11664 (* r x s00 r00 r00 r00)) (* 108 (* x00 x00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 25272 (* r r x s00 r00 r00 r00)) (* 54 (* r00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* 23328 (* r r r x s00 r00 r00 r00)) (* 1944 (* r s s00 r00 r00)) (* 1296 (* s x s00 r00 r00 r00)) (* 6480 (* r r s x s00 r00 r00 r00)) (* (- 324) (* x s00 r00 r00)) (* 5184 (* r s x s00 r00 r00 r00)) (* 7776 (* r r r r x s00 r00 r00 r00)) (* 864 (* r s s s00 r00 r00)) (* 2592 (* r r r s x s00 r00 r00 r00)) (* 1080 (* r r s s s00 r00 r00)) (* (- 216) (* s x s00 r00 r00)) (* (- 1080) (* r r s x s00 r00 r00)) (* 216 (* s s x s00 r00 r00 r00)) (* 432 (* r s s x s00 r00 r00 r00)) (* 216 (* r r s s x s00 r00 r00 r00)) (* 1296 (* r r r r s s00 r00 r00)) (* (- 3888) (* r r r x s00 s00 r00 r00)) (* 216 (* r s s s s00 s00 r00)) (* 108 (* r r s s s s00 s00 r00)) (* (- 108) (* s s x s00 s00 r00)) (* (- 216) (* r s s x s00 s00 r00)) (* (- 108) (* r r s s x s00 s00 r00)) (* 2592 (* r s s s00 s00 r00)) (* 1080 (* r r s s s00 s00 r00 r00)) (* (- 216) (* s x s00 s00 r00 r00)) (* (- 864) (* r s x s00 s00 r00 r00)) (* 216 (* s s s00 s00 r00 r00)) (* 864 (* r s s s00 s00 r00 r00)) (* (- 1080) (* r r s x s00 s00 r00 r00)) (* 1944 (* r s s00 s00 r00 r00)) (* 1296 (* r r r r s s00 s00 r00 r00)) (* (- 1296) (* r r r r x s00 s00 r00 r00)) (* 432 (* r r r s s s00 s00 r00 r00)) (* (- 432) (* r r r s x s00 s00 r00 r00)) (* 36 (* s s s s00 s00 r00 r00)) (* 72 (* r s s s s00 s00 r00 r00)) (* 36 (* r r s s s s00 s00 r00 r00)) (* (- 2592) (* r s x s00 s00 r00)) (* (- 36) (* s s x s00 s00 r00 r00)) (* (- 72) (* r s s x s00 s00 r00 r00)) (* (- 36) (* r r s s x s00 s00 r00 r00)) (* (- 66) (* s00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* 15 (* ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438 ?x1438)) (* 432 (* r00 r00 r00 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 216) (* r00 s00 ?x1435 ?x1435 ?x1444 ?x1444 ?x1438 ?x1438)) (* 108 (* s00 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* 108 (* x00 x00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438)) (* (- 108) (* ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* (- 54) (* r00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 108 (* r00 s00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* 216 (* r00 r00 r00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 36 (* r00 r00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438 ?x1438)) (* 108 (* r00 x00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 66) (* s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* (- 216) (* r00 s00 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 432) (* r00 r00 r00 x00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 12) (* s00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* 9 (* s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 16 (* s00 s00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 108) (* s00 x00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438)) (* (- 9) (* ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* (- 432) (* r r r s x s00 r00 r00)) (* 36 (* s s s s00 r00 r00)) (* 72 (* r s s s s00 r00 r00)) (* 108 (* s s s s00 s00 r00)) (* (- 144) (* s s00 s00 s00)) (* 864 (* r s s s r00 r00 r00 x00)) (* (- 864) (* r s s00 s00 s00)) (* (- 96) (* s s s00 s00 s00)) (* 144 (* x s00 s00 s00)) (* 864 (* r x s00 s00 s00)) (* 96 (* s x s00 s00 s00)) (* 36 (* r r s s s s00 r00 r00)) (* (- 36) (* s s x s00 r00 r00)) (* (- 72) (* r s s x s00 r00 r00)) (* (- 36) (* r r s s x s00 r00 r00)) (* (- 1872) (* r r s s00 s00 s00)) (* (- 1728) (* r r r s s00 s00 s00)) (* (- 384) (* r s s s00 s00 s00)) (* (- 480) (* r r s s s00 s00 s00)) (* (- 12) (* s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438 ?x1438)) (* 108 (* ?x1435 ?x1435 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438)) (* (- 576) (* r r r r s s00 s00 s00)) (* (- 192) (* r r r s s s00 s00 s00)) (* 23328 (* r s r00 r00 r00 x00)) (* (- 16) (* s s s s00 s00 s00)) (* (- 32) (* r s s s s00 s00 s00)) (* (- 16) (* r r s s s s00 s00 s00)) (* 1872 (* r r x s00 s00 s00)) (* 1728 (* r r r x s00 s00 s00)) (* 384 (* r s x s00 s00 s00)) (* 480 (* r r s x s00 s00 s00)) (* 576 (* r r r r x s00 s00 s00)) (* 192 (* r r r s x s00 s00 s00)) (* 16 (* s s x s00 s00 s00)) (* 32 (* r s s x s00 s00 s00)) (* 16 (* r r s s x s00 s00 s00)))))
 (let ((?x1398 (* x00 x00)))
 (let ((?x1428 (* (- 108) ?x1398)))
 (let ((?x1236 (* s00 s00 s00)))
 (let ((?x1427 (* (- 16) ?x1236)))
 (let ((?x1108 (* s00 r00 r00 r00)))
 (let ((?x1423 (* (- 216) ?x1108)))
 (let ((?x934 (* r00 r00 r00 x00)))
 (let ((?x935 (* 432 ?x934)))
 (let ((?x857 (* s00 x00)))
 (let ((?x1181 (* 108 ?x857)))
 (let ((?x783 (* s00 s00 r00 r00)))
 (let ((?x784 (* 36 ?x783)))
 (let ((?x720 (* s00 s00 r00)))
 (let ((?x1064 (* 108 ?x720)))
 (let ((?x699 (* s00 r00 r00)))
 (let ((?x1052 (* 36 ?x699)))
 (let ((?x643 (* s00 s00)))
 (let ((?x1417 (* (- 51) ?x643)))
 (let ((?x617 (* s r00 r00)))
 (let ((?x916 (* (- 36) ?x617)))
 (let ((?x574 (* r00 x00)))
 (let ((?x1414 (* (- 108) ?x574)))
 (let ((?x565 (* s00 r00 x00)))
 (let ((?x1413 (* (- 216) ?x565)))
 (let ((?x478 (* s00 r00)))
 (let ((?x572 (* 54 ?x478)))
 (let ((?x1039 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1429 (+ ?x143 ?x1039 ?x572 ?x1413 ?x1414 (* (- 15) (* s s)) ?x916 ?x1417 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1052 ?x1064 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x784 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1181 (* 108 (* s x)) (* (- 108) (* x x)) ?x935 (* 12 (* s s s00)) ?x1423 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1427 (* 216 (* x x00)) ?x1428)))
 (let (($x1430 (= ?x1429 0)))
 (let ((?x929 (* r00 r00 x00)))
 (let ((?x942 (* (- 36) ?x929)))
 (let ((?x858 (* 6 ?x857)))
 (let ((?x748 (* (- 2) ?x720)))
 (let ((?x968 (* (- 15) ?x643)))
 (let ((?x597 (* s s)))
 (let ((?x621 (* 3 ?x597)))
 (let ((?x603 (* (- 54) ?x574)))
 (let ((?x616 (* 24 ?x478)))
 (let ((?x1131 (+ ?x143 ?x1039 (* (- 24) (* r s)) (* 24 (* r s00)) ?x616 ?x603 ?x621 (* 54 (* r x)) (* 36 (* r x r00)) ?x916 ?x968 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1052 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x748 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x858 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x942 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1136 (= ?x1131 0)))
 (let ((?x700 (* 6 ?x699)))
 (let ((?x656 (* (- 4) ?x643)))
 (let ((?x598 (* 2 ?x597)))
 (let ((?x588 (* (- 18) ?x574)))
 (let ((?x593 (* 9 ?x478)))
 (let ((?x430 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x797 (+ ?x47 ?x430 (* (- 9) (* r s)) (* 9 (* r s00)) ?x593 ?x588 ?x598 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x617) ?x656 (* 18 (* x r00)) ?x700 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x804 (= ?x797 0)))
 (let ((?x521 (* r00 r00 r00)))
 (let ((?x522 (* 12 ?x521)))
 (let ((?x556 (* (- 6) ?x478)))
 (let ((?x553 (* (- 6) x00)))
 (let ((?x552 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x551 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x557 (+ ?x43 ?x551 ?x56 ?x44 ?x552 ?x553 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x556 ?x522)))
 (let (($x558 (= ?x557 0)))
 (let ((?x353 (* r00 r00)))
 (let ((?x354 (* 3 ?x353)))
 (let ((?x383 (* (- 1) s00)))
 (let (($x386 (= (+ s ?x383 (* (- 3) (* r r)) ?x354) 0)))
 (and $x386 $x558 $x804 $x1136 $x1430 (not (= ?x523 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1766 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x5990 (+ 3 s ?x213)))
 (let ((?x332 (* (- 1) s)))
 (let ((?x5852 (+ x ?x332)))
 (let ((?x1435 (+ 1 r)))
 (let ((?x4646 (+ (* 66 (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 15) (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* s00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 9) (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* s00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 54 (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 54 (* r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 432) (* r00 r00 r00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 4 (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 216) (* r00 s00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 s00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 216) (* r00 r00 r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 432 (* r00 r00 r00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 16) (* s00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* s00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 12 (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 9 (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 108 (* ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 66 (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 432 (* r00 r00 r00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 15) (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 51) (* s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 9) (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* ?x5852 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 54) (* r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* x00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 12 (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* ?x1435 ?x1435 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990)) (* (- 216) (* r00 r00 r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 108) (* x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 9 (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 51) (* s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 4 (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* 108 (* ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* r00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* s00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 432) (* r00 r00 r00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* (- 54) (* r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 216 (* x00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 216) (* r00 s00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)))))
 (let (($x6048 (not (= ?x4646 0))))
 (let ((?x1398 (* x00 x00)))
 (let ((?x706 (* 108 ?x1398)))
 (let ((?x6631 (* (- 9) s)))
 (let ((?x1581 (* r00 r00 s00)))
 (let ((?x6601 (* (- 36) ?x1581)))
 (let ((?x137 (* 9 s00)))
 (let ((?x643 (* s00 s00)))
 (let ((?x6537 (* 51 ?x643)))
 (let ((?x5948 (* r00 r00 s)))
 (let ((?x6129 (* 36 ?x5948)))
 (let ((?x1236 (* s00 s00 s00)))
 (let ((?x6500 (* 16 ?x1236)))
 (let ((?x857 (* s00 x00)))
 (let ((?x6443 (* (- 108) ?x857)))
 (let ((?x934 (* r00 r00 r00 x00)))
 (let ((?x6193 (* (- 432) ?x934)))
 (let ((?x574 (* r00 x00)))
 (let ((?x5902 (* 108 ?x574)))
 (let ((?x2959 (+ (* 216 (* r00 s00 x00)) ?x5902 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6193 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6443 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6500 (* (- 108) (* x s)) ?x6129 ?x6537 (* (- 108) (* r00 x)) ?x137 ?x6601 ?x6631 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x706)))
 (let (($x4565 (= ?x2959 0)))
 (let ((?x6131 (* 15 ?x643)))
 (let ((?x929 (* r00 r00 x00)))
 (let ((?x6130 (* 36 ?x929)))
 (let ((?x1574 (* (- 6) ?x857)))
 (let ((?x6299 (* 54 ?x574)))
 (let ((?x2061 (+ (* 24 (* s r)) ?x6299 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1574 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x6129 ?x6130 ?x6131 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6601 (* 54 (* x00 r)) ?x6631 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x551 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1361 (* 4 ?x643)))
 (let ((?x6300 (* 18 ?x574)))
 (let ((?x1237 (+ (* 9 (* s r)) ?x6300 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x5948) ?x1361 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1581) (* 18 (* x00 r)) ?x551 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x521 (* r00 r00 r00)))
 (let ((?x522 (* 12 ?x521)))
 (let ((?x553 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x552 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x964 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x551 ?x552 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x553 ?x522)))
 (let (($x5878 (= (+ s00 ?x332 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x5878 (= ?x964 0) (= ?x1237 0) (= ?x2061 0) $x4565 $x6048))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x6437 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1438 (+ 3 ?x213 s)))
 (let ((?x332 (* (- 1) s)))
 (let ((?x1444 (+ ?x332 x)))
 (let ((?x1435 (+ 1 r)))
 (let ((?x523 (+ (* 324 (* s s00 s00 r00 r00)) (* 1296 (* r r r s s s00 s00 r00)) (* 216 (* r00 s00 x00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 54) (* r00 s00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438)) (* (- 324) (* x s00 s00 r00 r00)) (* 50544 (* r r s r00 r00 r00 x00)) (* 4212 (* r r s s00 s00 r00 r00)) (* 432 (* s s s r00 r00 r00 x00)) (* (- 4212) (* r r x s00 s00 r00 r00)) (* (- 1944) (* r x s00 s00 r00 r00)) (* (- 108) (* s00 x00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 3888) (* r r r r x s00 s00 r00)) (* (- 4) (* ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438 ?x1438)) (* 648 (* s s s00 s00 r00)) (* (- 3888) (* x r00 r00 r00 x00)) (* (- 12960) (* r r s x r00 r00 r00 x00)) (* (- 15552) (* r r r r x r00 r00 r00 x00)) (* (- 5184) (* r r r s x r00 r00 r00 x00)) (* 3888 (* r r r s s00 s00 r00 r00)) (* 5184 (* r r r s s r00 r00 r00 x00)) (* 23328 (* r r r x s00 r00 x00)) (* 25272 (* r r x s00 r00 x00)) (* (- 23328) (* r x r00 r00 r00 x00)) (* (- 50544) (* r r x r00 r00 r00 x00)) (* 11664 (* r x s00 r00 x00)) (* 6480 (* r r s x s00 r00 x00)) (* 5184 (* r s x s00 r00 x00)) (* 46656 (* r r r s r00 r00 r00 x00)) (* 1296 (* s x s00 r00 x00)) (* (- 46656) (* r r r x r00 r00 r00 x00)) (* 2592 (* s s r00 r00 r00 x00)) (* 1944 (* x s00 r00 x00)) (* (- 216) (* r r s s s s00 r00 x00)) (* 10368 (* r s s r00 r00 r00 x00)) (* (- 432) (* r s s s s00 r00 x00)) (* 12960 (* r r s s r00 r00 r00 x00)) (* (- 216) (* s s s s00 r00 x00)) (* (- 2592) (* r r r s s s00 r00 x00)) (* (- 2592) (* s x r00 r00 r00 x00)) (* (- 6480) (* r r s s s00 r00 x00)) (* (- 10368) (* r s x r00 r00 r00 x00)) (* (- 5184) (* r s s s00 r00 x00)) (* (- 1296) (* s s s00 r00 x00)) (* (- 7776) (* r r r r s s00 r00 x00)) (* (- 23328) (* r r r s s00 r00 x00)) (* (- 25272) (* r r s s00 r00 x00)) (* 15552 (* r r r r s r00 r00 r00 x00)) (* (- 11664) (* r s s00 r00 x00)) (* 216 (* r r s s x s00 r00 x00)) (* 432 (* r s s x s00 r00 x00)) (* 216 (* s s x s00 r00 x00)) (* 2592 (* r r r s x s00 r00 x00)) (* 7776 (* r r r r x s00 r00 x00)) (* (- 1944) (* s s00 r00 x00)) (* 432 (* r r r s s s00 r00 r00)) (* (- 3240) (* r r s x s00 s00 r00)) (* 108 (* x00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* (- 108) (* ?x1435 ?x1435 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 216) (* r00 r00 r00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* 108 (* s00 ?x1435 ?x1435 ?x1444 ?x1444 ?x1438 ?x1438)) (* (- 108) (* r00 ?x1435 ?x1435 ?x1444 ?x1444 ?x1438 ?x1438)) (* (- 108) (* r00 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 36) (* r00 r00 s00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 12636 (* r r s s00 s00 r00)) (* (- 9) (* ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* 51 (* s00 s00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438)) (* (- 216) (* x00 ?x1435 ?x1435 ?x1444 ?x1444 ?x1438 ?x1438)) (* (- 12636) (* r r x s00 s00 r00)) (* 3888 (* s r00 r00 r00 x00)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 4) (* ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438 ?x1438 ?x1438)) (* 432 (* r00 r00 r00 ?x1435 ?x1435 ?x1444 ?x1444 ?x1438 ?x1438)) (* 108 (* r00 x00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438)) (* 54 (* r00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* 972 (* s s00 s00 r00)) (* 5832 (* r s s00 s00 r00)) (* (- 972) (* x s00 s00 r00)) (* (- 5832) (* r x s00 s00 r00)) (* 11664 (* r r r s s00 s00 r00)) (* (- 11664) (* r r r x s00 s00 r00)) (* 3888 (* r r r r s s00 s00 r00)) (* (- 648) (* s x s00 s00 r00)) (* (- 1296) (* r r r s x s00 s00 r00)) (* 3240 (* r r s s s00 s00 r00)) (* 324 (* s s00 r00 r00)) (* (- 1296) (* r r r r x s00 r00 r00)) (* (- 216) (* x00 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 108 (* ?x1444 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 108) (* r00 s00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 4212 (* r r s s00 r00 r00)) (* (- 1944) (* r x s00 r00 r00)) (* (- 4212) (* r r x s00 r00 r00)) (* 3888 (* r r r s s00 r00 r00)) (* 216 (* s s s00 r00 r00)) (* (- 216) (* r00 r00 r00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 3888) (* r r r x s00 r00 r00)) (* (- 864) (* r s x s00 r00 r00)) (* (- 216) (* s s s s00 r00 r00 r00)) (* 432 (* r r s s s r00 r00 r00 x00)) (* (- 6480) (* r r s s s00 r00 r00 r00)) (* (- 2592) (* r r r s s s00 r00 r00 r00)) (* (- 432) (* s s x r00 r00 r00 x00)) (* (- 5184) (* r s s s00 r00 r00 r00)) (* (- 864) (* r s s x r00 r00 r00 x00)) (* (- 432) (* r r s s x r00 r00 r00 x00)) (* (- 1296) (* s s s00 r00 r00 r00)) (* 108 (* x00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 7776) (* r r r r s s00 r00 r00 r00)) (* (- 23328) (* r r r s s00 r00 r00 r00)) (* (- 25272) (* r r s s00 r00 r00 r00)) (* (- 11664) (* r s s00 r00 r00 r00)) (* (- 36) (* r00 r00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 15 (* ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* 36 (* r00 r00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* (- 1944) (* s s00 r00 r00 r00)) (* (- 432) (* r s s s s00 r00 r00 r00)) (* 108 (* r00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* 1944 (* x s00 r00 r00 r00)) (* 9 (* s00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438)) (* 51 (* s00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 216) (* r r s s s s00 r00 r00 r00)) (* 11664 (* r x s00 r00 r00 r00)) (* 108 (* x00 x00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 25272 (* r r x s00 r00 r00 r00)) (* 54 (* r00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* 23328 (* r r r x s00 r00 r00 r00)) (* 1944 (* r s s00 r00 r00)) (* 1296 (* s x s00 r00 r00 r00)) (* 6480 (* r r s x s00 r00 r00 r00)) (* (- 324) (* x s00 r00 r00)) (* 5184 (* r s x s00 r00 r00 r00)) (* 7776 (* r r r r x s00 r00 r00 r00)) (* 864 (* r s s s00 r00 r00)) (* 2592 (* r r r s x s00 r00 r00 r00)) (* 1080 (* r r s s s00 r00 r00)) (* (- 216) (* s x s00 r00 r00)) (* (- 1080) (* r r s x s00 r00 r00)) (* 216 (* s s x s00 r00 r00 r00)) (* 432 (* r s s x s00 r00 r00 r00)) (* 216 (* r r s s x s00 r00 r00 r00)) (* 1296 (* r r r r s s00 r00 r00)) (* (- 3888) (* r r r x s00 s00 r00 r00)) (* 216 (* r s s s s00 s00 r00)) (* 108 (* r r s s s s00 s00 r00)) (* (- 108) (* s s x s00 s00 r00)) (* (- 216) (* r s s x s00 s00 r00)) (* (- 108) (* r r s s x s00 s00 r00)) (* 2592 (* r s s s00 s00 r00)) (* 1080 (* r r s s s00 s00 r00 r00)) (* (- 216) (* s x s00 s00 r00 r00)) (* (- 864) (* r s x s00 s00 r00 r00)) (* 216 (* s s s00 s00 r00 r00)) (* 864 (* r s s s00 s00 r00 r00)) (* (- 1080) (* r r s x s00 s00 r00 r00)) (* 1944 (* r s s00 s00 r00 r00)) (* 1296 (* r r r r s s00 s00 r00 r00)) (* (- 1296) (* r r r r x s00 s00 r00 r00)) (* 432 (* r r r s s s00 s00 r00 r00)) (* (- 432) (* r r r s x s00 s00 r00 r00)) (* 36 (* s s s s00 s00 r00 r00)) (* 72 (* r s s s s00 s00 r00 r00)) (* 36 (* r r s s s s00 s00 r00 r00)) (* (- 2592) (* r s x s00 s00 r00)) (* (- 36) (* s s x s00 s00 r00 r00)) (* (- 72) (* r s s x s00 s00 r00 r00)) (* (- 36) (* r r s s x s00 s00 r00 r00)) (* (- 66) (* s00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* 15 (* ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438 ?x1438)) (* 432 (* r00 r00 r00 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 216) (* r00 s00 ?x1435 ?x1435 ?x1444 ?x1444 ?x1438 ?x1438)) (* 108 (* s00 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 36 (* r00 r00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* 108 (* x00 x00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438)) (* (- 108) (* ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* (- 54) (* r00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 108 (* r00 s00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438)) (* 216 (* r00 r00 r00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 36 (* r00 r00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438 ?x1438)) (* 108 (* r00 x00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 66) (* s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* (- 216) (* r00 s00 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 432) (* r00 r00 r00 x00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 12) (* s00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* 9 (* s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* 16 (* s00 s00 s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438)) (* (- 108) (* s00 x00 ?x1435 ?x1435 ?x1444 ?x1438 ?x1438)) (* (- 9) (* ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438)) (* (- 432) (* r r r s x s00 r00 r00)) (* 36 (* s s s s00 r00 r00)) (* 72 (* r s s s s00 r00 r00)) (* 108 (* s s s s00 s00 r00)) (* (- 144) (* s s00 s00 s00)) (* 864 (* r s s s r00 r00 r00 x00)) (* (- 864) (* r s s00 s00 s00)) (* (- 96) (* s s s00 s00 s00)) (* 144 (* x s00 s00 s00)) (* 864 (* r x s00 s00 s00)) (* 96 (* s x s00 s00 s00)) (* 36 (* r r s s s s00 r00 r00)) (* (- 36) (* s s x s00 r00 r00)) (* (- 72) (* r s s x s00 r00 r00)) (* (- 36) (* r r s s x s00 r00 r00)) (* (- 1872) (* r r s s00 s00 s00)) (* (- 1728) (* r r r s s00 s00 s00)) (* (- 384) (* r s s s00 s00 s00)) (* (- 480) (* r r s s s00 s00 s00)) (* (- 12) (* s00 ?x1444 ?x1444 ?x1438 ?x1438 ?x1438 ?x1438 ?x1438)) (* 108 (* ?x1435 ?x1435 ?x1444 ?x1444 ?x1444 ?x1438 ?x1438)) (* (- 576) (* r r r r s s00 s00 s00)) (* (- 192) (* r r r s s s00 s00 s00)) (* 23328 (* r s r00 r00 r00 x00)) (* (- 16) (* s s s s00 s00 s00)) (* (- 32) (* r s s s s00 s00 s00)) (* (- 16) (* r r s s s s00 s00 s00)) (* 1872 (* r r x s00 s00 s00)) (* 1728 (* r r r x s00 s00 s00)) (* 384 (* r s x s00 s00 s00)) (* 480 (* r r s x s00 s00 s00)) (* 576 (* r r r r x s00 s00 s00)) (* 192 (* r r r s x s00 s00 s00)) (* 16 (* s s x s00 s00 s00)) (* 32 (* r s s x s00 s00 s00)) (* 16 (* r r s s x s00 s00 s00)))))
 (let ((?x1398 (* x00 x00)))
 (let ((?x1428 (* (- 108) ?x1398)))
 (let ((?x1236 (* s00 s00 s00)))
 (let ((?x1427 (* (- 16) ?x1236)))
 (let ((?x1108 (* s00 r00 r00 r00)))
 (let ((?x1423 (* (- 216) ?x1108)))
 (let ((?x934 (* r00 r00 r00 x00)))
 (let ((?x935 (* 432 ?x934)))
 (let ((?x857 (* s00 x00)))
 (let ((?x1181 (* 108 ?x857)))
 (let ((?x783 (* s00 s00 r00 r00)))
 (let ((?x784 (* 36 ?x783)))
 (let ((?x720 (* s00 s00 r00)))
 (let ((?x1064 (* 108 ?x720)))
 (let ((?x699 (* s00 r00 r00)))
 (let ((?x1052 (* 36 ?x699)))
 (let ((?x643 (* s00 s00)))
 (let ((?x1417 (* (- 51) ?x643)))
 (let ((?x617 (* s r00 r00)))
 (let ((?x916 (* (- 36) ?x617)))
 (let ((?x574 (* r00 x00)))
 (let ((?x1414 (* (- 108) ?x574)))
 (let ((?x565 (* s00 r00 x00)))
 (let ((?x1413 (* (- 216) ?x565)))
 (let ((?x478 (* s00 r00)))
 (let ((?x572 (* 54 ?x478)))
 (let ((?x1039 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1429 (+ ?x143 ?x1039 ?x572 ?x1413 ?x1414 (* (- 15) (* s s)) ?x916 ?x1417 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1052 ?x1064 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x784 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1181 (* 108 (* s x)) (* (- 108) (* x x)) ?x935 (* 12 (* s s s00)) ?x1423 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1427 (* 216 (* x x00)) ?x1428)))
 (let (($x1430 (= ?x1429 0)))
 (let ((?x929 (* r00 r00 x00)))
 (let ((?x942 (* (- 36) ?x929)))
 (let ((?x858 (* 6 ?x857)))
 (let ((?x748 (* (- 2) ?x720)))
 (let ((?x968 (* (- 15) ?x643)))
 (let ((?x597 (* s s)))
 (let ((?x621 (* 3 ?x597)))
 (let ((?x603 (* (- 54) ?x574)))
 (let ((?x616 (* 24 ?x478)))
 (let ((?x1131 (+ ?x143 ?x1039 (* (- 24) (* r s)) (* 24 (* r s00)) ?x616 ?x603 ?x621 (* 54 (* r x)) (* 36 (* r x r00)) ?x916 ?x968 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1052 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x748 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x858 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x942 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1136 (= ?x1131 0)))
 (let ((?x700 (* 6 ?x699)))
 (let ((?x656 (* (- 4) ?x643)))
 (let ((?x598 (* 2 ?x597)))
 (let ((?x588 (* (- 18) ?x574)))
 (let ((?x593 (* 9 ?x478)))
 (let ((?x430 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x797 (+ ?x47 ?x430 (* (- 9) (* r s)) (* 9 (* r s00)) ?x593 ?x588 ?x598 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x617) ?x656 (* 18 (* x r00)) ?x700 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x804 (= ?x797 0)))
 (let ((?x521 (* r00 r00 r00)))
 (let ((?x522 (* 12 ?x521)))
 (let ((?x556 (* (- 6) ?x478)))
 (let ((?x553 (* (- 6) x00)))
 (let ((?x552 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x551 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x557 (+ ?x43 ?x551 ?x56 ?x44 ?x552 ?x553 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x556 ?x522)))
 (let (($x558 (= ?x557 0)))
 (let ((?x353 (* r00 r00)))
 (let ((?x354 (* 3 ?x353)))
 (let ((?x383 (* (- 1) s00)))
 (let (($x386 (= (+ s ?x383 (* (- 3) (* r r)) ?x354) 0)))
 (let (($x5963 (and $x386 $x558 $x804 $x1136 $x1430 (not (= ?x523 0)))))
 (let ((?x5990 (+ 3 s ?x213)))
 (let ((?x5852 (+ x ?x332)))
 (let ((?x4646 (+ (* 66 (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 15) (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* s00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 9) (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* s00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 54 (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 54 (* r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 432) (* r00 r00 r00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 4 (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 216) (* r00 s00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 s00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 216) (* r00 r00 r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 432 (* r00 r00 r00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 16) (* s00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* s00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 12 (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 9 (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 108 (* ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 66 (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 432 (* r00 r00 r00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 15) (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 51) (* s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 9) (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* ?x5852 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 54) (* r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* x00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 12 (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* ?x1435 ?x1435 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990)) (* (- 216) (* r00 r00 r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 108) (* x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 9 (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 51) (* s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 4 (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* 108 (* ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* r00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* s00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 432) (* r00 r00 r00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* (- 54) (* r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 216 (* x00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 216) (* r00 s00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)))))
 (let (($x6048 (not (= ?x4646 0))))
 (let ((?x706 (* 108 ?x1398)))
 (let ((?x6631 (* (- 9) s)))
 (let ((?x1581 (* r00 r00 s00)))
 (let ((?x6601 (* (- 36) ?x1581)))
 (let ((?x137 (* 9 s00)))
 (let ((?x6537 (* 51 ?x643)))
 (let ((?x5948 (* r00 r00 s)))
 (let ((?x6129 (* 36 ?x5948)))
 (let ((?x6500 (* 16 ?x1236)))
 (let ((?x6443 (* (- 108) ?x857)))
 (let ((?x6193 (* (- 432) ?x934)))
 (let ((?x5902 (* 108 ?x574)))
 (let ((?x2959 (+ (* 216 (* r00 s00 x00)) ?x5902 (* (- 54) (* r00 s00)) (* 15 ?x597) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6193 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6443 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6500 (* (- 108) (* x s)) ?x6129 ?x6537 (* (- 108) (* r00 x)) ?x137 ?x6601 ?x6631 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x706)))
 (let (($x4565 (= ?x2959 0)))
 (let ((?x6131 (* 15 ?x643)))
 (let ((?x6130 (* 36 ?x929)))
 (let ((?x1574 (* (- 6) ?x857)))
 (let ((?x6299 (* 54 ?x574)))
 (let ((?x2061 (+ (* 24 (* s r)) ?x6299 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x597) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1574 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x6129 ?x6130 ?x6131 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6601 (* 54 (* x00 r)) ?x6631 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x1361 (* 4 ?x643)))
 (let ((?x6300 (* 18 ?x574)))
 (let ((?x1237 (+ (* 9 (* s r)) ?x6300 (* (- 9) (* r00 s00)) (* (- 2) ?x597) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x5948) ?x1361 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1581) (* 18 (* x00 r)) ?x551 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x964 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x551 ?x552 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x553 ?x522)))
 (let (($x5878 (= (+ s00 ?x332 (* 3 (* r r)) (* (- 3) ?x353)) 0)))
 (let (($x1622 (and $x5878 (= ?x964 0) (= ?x1237 0) (= ?x2061 0) $x4565 $x6048)))
 (rewrite (= $x1622 $x5963))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x5911 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x5990 (+ 3 s ?x213)))
 (let ((?x332 (* (- 1) s)))
 (let ((?x5852 (+ x ?x332)))
 (let ((?x1435 (+ 1 r)))
 (let ((?x4646 (+ (* 66 (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 15) (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* s00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 9) (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* s00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 54 (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 54 (* r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 432) (* r00 r00 r00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 4 (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 216) (* r00 s00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 s00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 216) (* r00 r00 r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 432 (* r00 r00 r00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 16) (* s00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* s00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 12 (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 9 (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 108 (* ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 66 (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 432 (* r00 r00 r00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 15) (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 51) (* s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 9) (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* ?x5852 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 54) (* r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* x00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 12 (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* ?x1435 ?x1435 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990)) (* (- 216) (* r00 r00 r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 108) (* x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 9 (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 51) (* s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 4 (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* 108 (* ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* r00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* s00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 432) (* r00 r00 r00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* (- 54) (* r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 216 (* x00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 216) (* r00 s00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)))))
 (let (($x6048 (not (= ?x4646 0))))
 (let ((?x1398 (* x00 x00)))
 (let ((?x706 (* 108 ?x1398)))
 (let ((?x6631 (* (- 9) s)))
 (let ((?x1581 (* r00 r00 s00)))
 (let ((?x6601 (* (- 36) ?x1581)))
 (let ((?x137 (* 9 s00)))
 (let ((?x643 (* s00 s00)))
 (let ((?x6537 (* 51 ?x643)))
 (let ((?x5948 (* r00 r00 s)))
 (let ((?x6129 (* 36 ?x5948)))
 (let ((?x1236 (* s00 s00 s00)))
 (let ((?x6500 (* 16 ?x1236)))
 (let ((?x857 (* s00 x00)))
 (let ((?x6443 (* (- 108) ?x857)))
 (let ((?x934 (* r00 r00 r00 x00)))
 (let ((?x6193 (* (- 432) ?x934)))
 (let ((?x574 (* r00 x00)))
 (let ((?x5902 (* 108 ?x574)))
 (let ((?x2959 (+ (* 216 (* r00 s00 x00)) ?x5902 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6193 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6443 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6500 (* (- 108) (* x s)) ?x6129 ?x6537 (* (- 108) (* r00 x)) ?x137 ?x6601 ?x6631 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x706)))
 (let (($x4565 (= ?x2959 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1039 (* (- 9) s00)))
 (let ((?x968 (* (- 15) ?x643)))
 (let ((?x929 (* r00 r00 x00)))
 (let ((?x942 (* (- 36) ?x929)))
 (let ((?x858 (* 6 ?x857)))
 (let ((?x597 (* s s)))
 (let ((?x621 (* 3 ?x597)))
 (let ((?x603 (* (- 54) ?x574)))
 (let ((?x6381 (+ (* (- 24) (* s r)) ?x603 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x621 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x858 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x5948) ?x942 ?x968 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1039 (* 36 ?x1581) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x430 (* (- 3) s00)))
 (let ((?x656 (* (- 4) ?x643)))
 (let ((?x598 (* 2 ?x597)))
 (let ((?x588 (* (- 18) ?x574)))
 (let ((?x1219 (+ (* (- 9) (* s r)) ?x588 (* 9 (* r00 s00)) ?x598 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x5948) ?x656 (* 18 (* r00 x)) ?x430 (* 6 ?x1581) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x5855 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x430 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x5878 (= (+ s00 ?x332 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x5878 (= ?x5855 0) (= ?x1219 0) (= ?x6381 0) $x4565 $x6048)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1763 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x5990 (+ 3 s ?x213)))
 (let ((?x332 (* (- 1) s)))
 (let ((?x5852 (+ x ?x332)))
 (let ((?x1435 (+ 1 r)))
 (let ((?x4646 (+ (* 66 (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 15) (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* s00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 9) (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* s00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 54 (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 54 (* r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 432) (* r00 r00 r00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 4 (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 216) (* r00 s00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 s00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 216) (* r00 r00 r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 432 (* r00 r00 r00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 16) (* s00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* s00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 12 (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 9 (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 108 (* ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 66 (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 432 (* r00 r00 r00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 15) (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 51) (* s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 9) (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* ?x5852 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 54) (* r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* x00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 12 (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* ?x1435 ?x1435 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990)) (* (- 216) (* r00 r00 r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 108) (* x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 9 (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 51) (* s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 4 (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* 108 (* ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* r00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* s00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 432) (* r00 r00 r00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* (- 54) (* r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 216 (* x00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 216) (* r00 s00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)))))
 (let (($x6048 (not (= ?x4646 0))))
 (let ((?x1398 (* x00 x00)))
 (let ((?x706 (* 108 ?x1398)))
 (let ((?x6631 (* (- 9) s)))
 (let ((?x1581 (* r00 r00 s00)))
 (let ((?x6601 (* (- 36) ?x1581)))
 (let ((?x137 (* 9 s00)))
 (let ((?x643 (* s00 s00)))
 (let ((?x6537 (* 51 ?x643)))
 (let ((?x5948 (* r00 r00 s)))
 (let ((?x6129 (* 36 ?x5948)))
 (let ((?x1236 (* s00 s00 s00)))
 (let ((?x6500 (* 16 ?x1236)))
 (let ((?x857 (* s00 x00)))
 (let ((?x6443 (* (- 108) ?x857)))
 (let ((?x934 (* r00 r00 r00 x00)))
 (let ((?x6193 (* (- 432) ?x934)))
 (let ((?x574 (* r00 x00)))
 (let ((?x5902 (* 108 ?x574)))
 (let ((?x2959 (+ (* 216 (* r00 s00 x00)) ?x5902 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6193 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6443 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6500 (* (- 108) (* x s)) ?x6129 ?x6537 (* (- 108) (* r00 x)) ?x137 ?x6601 ?x6631 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x706)))
 (let (($x4565 (= ?x2959 0)))
 (let ((?x6131 (* 15 ?x643)))
 (let ((?x929 (* r00 r00 x00)))
 (let ((?x6130 (* 36 ?x929)))
 (let ((?x1574 (* (- 6) ?x857)))
 (let ((?x6299 (* 54 ?x574)))
 (let ((?x2061 (+ (* 24 (* s r)) ?x6299 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1574 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x6129 ?x6130 ?x6131 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6601 (* 54 (* x00 r)) ?x6631 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x551 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1361 (* 4 ?x643)))
 (let ((?x6300 (* 18 ?x574)))
 (let ((?x1237 (+ (* 9 (* s r)) ?x6300 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x5948) ?x1361 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1581) (* 18 (* x00 r)) ?x551 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x521 (* r00 r00 r00)))
 (let ((?x522 (* 12 ?x521)))
 (let ((?x553 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x552 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x964 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x551 ?x552 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x553 ?x522)))
 (let (($x5878 (= (+ s00 ?x332 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1622 (and $x5878 (= ?x964 0) (= ?x1237 0) (= ?x2061 0) $x4565 $x6048)))
 (let ((?x143 (* 9 s)))
 (let ((?x1039 (* (- 9) s00)))
 (let ((?x968 (* (- 15) ?x643)))
 (let ((?x942 (* (- 36) ?x929)))
 (let ((?x858 (* 6 ?x857)))
 (let ((?x597 (* s s)))
 (let ((?x621 (* 3 ?x597)))
 (let ((?x603 (* (- 54) ?x574)))
 (let ((?x6381 (+ (* (- 24) (* s r)) ?x603 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x621 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x858 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x5948) ?x942 ?x968 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1039 (* 36 ?x1581) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x430 (* (- 3) s00)))
 (let ((?x656 (* (- 4) ?x643)))
 (let ((?x598 (* 2 ?x597)))
 (let ((?x588 (* (- 18) ?x574)))
 (let ((?x1219 (+ (* (- 9) (* s r)) ?x588 (* 9 (* r00 s00)) ?x598 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x5948) ?x656 (* 18 (* r00 x)) ?x430 (* 6 ?x1581) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x5855 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x430 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x521))))
 (let (($x5833 (and $x5878 (= ?x5855 0) (= ?x1219 0) (= ?x6381 0) $x4565 $x6048)))
 (rewrite (= $x5833 $x1622)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x329 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x220 (- (* 66 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215) (* 15 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x222 (- (- ?x220 (* 108 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)) (* 9 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x227 (+ ?x222 (* 108 ?x214 ?x214 ?x214 s00 ?x215 ?x215 x00) (* 216 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215) (* 54 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215) (* 54 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x231 (+ (- ?x227 (* 432 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x236 (- (- ?x231 (* 216 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 x00)) (* 36 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x239 (+ (- ?x236 (* 108 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) (* 216 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x243 (- (- ?x239 (* 108 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215)) (* 216 r00 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x247 (- (+ ?x243 (* 432 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) (* 16 ?x214 ?x214 ?x214 s00 s00 s00 ?x215 ?x215))))
 (let ((?x250 (+ ?x247 (* 108 ?x212 ?x212 ?x214 ?x214 s00 ?x215 x00) (* 12 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x254 (+ (- ?x250 (* 108 ?x212 ?x212 ?x214 ?x214 ?x215 x00 x00)) (* 9 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x258 (+ (- ?x254 (* 36 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 108 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x263 (+ (- ?x258 (* 108 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 x00)) (* 66 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 432 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x215 x00))))
 (let ((?x271 (- (- ?x263 (* 15 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 36 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x273 (- (- ?x271 (* 51 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215)) (* 108 ?x214 ?x214 ?x214 ?x215 ?x215 x00 x00))))
 (let ((?x275 (- (- ?x273 (* 108 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) (* 9 ?x212 ?x212 ?x214 ?x214 s00 ?x215))))
 (let ((?x278 (+ ?x275 (* 108 r00 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215) (* 36 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x282 (- (- ?x278 (* 108 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) (* 54 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x287 (+ ?x282 (* 216 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00) (* 216 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215) (* 36 ?x212 ?x212 r00 r00 ?x214 ?x214 s00 ?x215) (* 12 ?x214 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x292 (- (- ?x287 (* 108 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 216 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 s00 ?x215))))
 (let ((?x295 (+ (- ?x292 (* 108 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) (* 9 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x300 (- (- ?x295 (* 108 ?x212 ?x212 r00 ?x214 ?x214 ?x215 x00)) (* 36 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x307 (+ (- ?x300 (* 51 ?x212 ?x212 ?x214 ?x214 s00 s00 ?x215)) (* 108 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215) (* 4 ?x214 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 108 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215) (* 108 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 216 r00 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x311 (+ (- ?x307 (* 108 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215)) (* 36 r00 r00 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215))))
 (let ((?x315 (- (- ?x311 (* 432 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x215 ?x215)) (* 54 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x318 (+ ?x315 (* 216 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 x00) (* 108 ?x212 ?x212 r00 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x322 (+ (- ?x318 (* 216 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 x00)) (* 36 ?x212 ?x212 r00 r00 ?x214 ?x214 s00 s00 ?x215))))
 (let (($x325 (= (- ?x322 (* 16 ?x212 ?x212 ?x214 ?x214 s00 s00 s00 ?x215)) 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not $x325)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5847 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x5990 (+ 3 s ?x213)))
 (let ((?x332 (* (- 1) s)))
 (let ((?x5852 (+ x ?x332)))
 (let ((?x1435 (+ 1 r)))
 (let ((?x4646 (+ (* 66 (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 15) (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* s00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 9) (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* s00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 54 (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 54 (* r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 432) (* r00 r00 r00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 4 (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 216) (* r00 s00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 s00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 216) (* r00 r00 r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 432 (* r00 r00 r00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 16) (* s00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* s00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 12 (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 9 (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 108 (* ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 66 (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 432 (* r00 r00 r00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 15) (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 51) (* s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* x00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 9) (* s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* ?x5852 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 54) (* r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* x00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 12 (* s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* ?x1435 ?x1435 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990)) (* (- 216) (* r00 r00 r00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 108) (* x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 9 (* ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 108) (* r00 x00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 36) (* r00 r00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 51) (* s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 4 (* ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990 ?x5990)) (* 108 (* ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 108 (* r00 ?x5852 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 216 (* r00 r00 r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* (- 108) (* s00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 s00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* (- 432) (* r00 r00 r00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* (- 54) (* r00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990 ?x5990)) (* 216 (* x00 ?x1435 ?x1435 ?x5852 ?x5852 ?x5990 ?x5990)) (* 108 (* r00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 216) (* r00 s00 x00 ?x5852 ?x5852 ?x5990 ?x5990 ?x5990)) (* 36 (* r00 r00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)) (* (- 16) (* s00 s00 s00 ?x1435 ?x1435 ?x5852 ?x5990 ?x5990)))))
 (let (($x6048 (not (= ?x4646 0))))
 (let ((?x1398 (* x00 x00)))
 (let ((?x706 (* 108 ?x1398)))
 (let ((?x6631 (* (- 9) s)))
 (let ((?x1581 (* r00 r00 s00)))
 (let ((?x6601 (* (- 36) ?x1581)))
 (let ((?x137 (* 9 s00)))
 (let ((?x643 (* s00 s00)))
 (let ((?x6537 (* 51 ?x643)))
 (let ((?x5948 (* r00 r00 s)))
 (let ((?x6129 (* 36 ?x5948)))
 (let ((?x1236 (* s00 s00 s00)))
 (let ((?x6500 (* 16 ?x1236)))
 (let ((?x857 (* s00 x00)))
 (let ((?x6443 (* (- 108) ?x857)))
 (let ((?x934 (* r00 r00 r00 x00)))
 (let ((?x6193 (* (- 432) ?x934)))
 (let ((?x574 (* r00 x00)))
 (let ((?x5902 (* 108 ?x574)))
 (let ((?x2959 (+ (* 216 (* r00 s00 x00)) ?x5902 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6193 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6443 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6500 (* (- 108) (* x s)) ?x6129 ?x6537 (* (- 108) (* r00 x)) ?x137 ?x6601 ?x6631 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x706)))
 (let (($x4565 (= ?x2959 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1039 (* (- 9) s00)))
 (let ((?x968 (* (- 15) ?x643)))
 (let ((?x929 (* r00 r00 x00)))
 (let ((?x942 (* (- 36) ?x929)))
 (let ((?x858 (* 6 ?x857)))
 (let ((?x597 (* s s)))
 (let ((?x621 (* 3 ?x597)))
 (let ((?x603 (* (- 54) ?x574)))
 (let ((?x6381 (+ (* (- 24) (* s r)) ?x603 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x621 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x858 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x5948) ?x942 ?x968 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1039 (* 36 ?x1581) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x430 (* (- 3) s00)))
 (let ((?x656 (* (- 4) ?x643)))
 (let ((?x598 (* 2 ?x597)))
 (let ((?x588 (* (- 18) ?x574)))
 (let ((?x1219 (+ (* (- 9) (* s r)) ?x588 (* 9 (* r00 s00)) ?x598 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x5948) ?x656 (* 18 (* r00 x)) ?x430 (* 6 ?x1581) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x5855 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x430 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x5878 (= (+ s00 ?x332 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x5833 (and $x5878 (= ?x5855 0) (= ?x1219 0) (= ?x6381 0) $x4565 $x6048)))
 (let ((?x215 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x220 (- (* 66 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215) (* 15 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x222 (- (- ?x220 (* 108 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)) (* 9 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x227 (+ ?x222 (* 108 ?x214 ?x214 ?x214 s00 ?x215 ?x215 x00) (* 216 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215) (* 54 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215) (* 54 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x231 (+ (- ?x227 (* 432 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x236 (- (- ?x231 (* 216 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 x00)) (* 36 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x239 (+ (- ?x236 (* 108 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) (* 216 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x243 (- (- ?x239 (* 108 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215)) (* 216 r00 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x247 (- (+ ?x243 (* 432 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) (* 16 ?x214 ?x214 ?x214 s00 s00 s00 ?x215 ?x215))))
 (let ((?x250 (+ ?x247 (* 108 ?x212 ?x212 ?x214 ?x214 s00 ?x215 x00) (* 12 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x254 (+ (- ?x250 (* 108 ?x212 ?x212 ?x214 ?x214 ?x215 x00 x00)) (* 9 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x258 (+ (- ?x254 (* 36 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 108 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x263 (+ (- ?x258 (* 108 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 x00)) (* 66 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 432 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x215 x00))))
 (let ((?x271 (- (- ?x263 (* 15 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 36 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x273 (- (- ?x271 (* 51 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215)) (* 108 ?x214 ?x214 ?x214 ?x215 ?x215 x00 x00))))
 (let ((?x275 (- (- ?x273 (* 108 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) (* 9 ?x212 ?x212 ?x214 ?x214 s00 ?x215))))
 (let ((?x278 (+ ?x275 (* 108 r00 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215) (* 36 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x282 (- (- ?x278 (* 108 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) (* 54 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x287 (+ ?x282 (* 216 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00) (* 216 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215) (* 36 ?x212 ?x212 r00 r00 ?x214 ?x214 s00 ?x215) (* 12 ?x214 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x292 (- (- ?x287 (* 108 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 216 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 s00 ?x215))))
 (let ((?x295 (+ (- ?x292 (* 108 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) (* 9 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x300 (- (- ?x295 (* 108 ?x212 ?x212 r00 ?x214 ?x214 ?x215 x00)) (* 36 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x307 (+ (- ?x300 (* 51 ?x212 ?x212 ?x214 ?x214 s00 s00 ?x215)) (* 108 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215) (* 4 ?x214 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 108 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215) (* 108 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 216 r00 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x311 (+ (- ?x307 (* 108 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215)) (* 36 r00 r00 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215))))
 (let ((?x315 (- (- ?x311 (* 432 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x215 ?x215)) (* 54 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x318 (+ ?x315 (* 216 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 x00) (* 108 ?x212 ?x212 r00 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x322 (+ (- ?x318 (* 216 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 x00)) (* 36 ?x212 ?x212 r00 r00 ?x214 ?x214 s00 s00 ?x215))))
 (let (($x325 (= (- ?x322 (* 16 ?x212 ?x212 ?x214 ?x214 s00 s00 s00 ?x215)) 0)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x328 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not $x325)))))
 (rewrite (= $x328 $x5833)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x330 (asserted $x329)))
 (let ((@x6281 (mp (mp @x330 (quant-intro (proof-bind ?x5847) (= $x329 $x5911)) $x5911) (rewrite (= $x5911 $x5911)) $x5911)))
 (let ((@x3841 (mp (mp @x6281 (quant-intro (proof-bind ?x1763) (= $x5911 $x1766)) $x1766) (quant-intro (proof-bind ?x6437) (= $x1766 $x6502)) $x6502)))
 (let ((@x1043 (mp (mp~ @x3841 (sk (~ $x6502 $x817)) $x817) (rewrite (= $x817 $x4786)) $x4786)))
 (let ((@x2141 (and-elim @x1043 $x1303)))
 (let ((@x402 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1303) $x1033)) @x2141 $x1033)))
 (let (($x3943 (>= ?x1302 0)))
 (let ((@x2311 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1303) $x3943)) @x2141 $x3943)))
 (let (($x3946 (<= ?x409 0)))
 (let ((@x5040 (and-elim @x1043 $x417)))
 (let ((@x7357 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x417) $x3946)) @x5040 $x3946)))
 (let (($x1167 (>= ?x409 0)))
 (let ((@x5563 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x417) $x1167)) @x5040 $x1167)))
 (let (($x5968 (<= ?x5037 0)))
 (let ((@x5044 (and-elim @x1043 $x5041)))
 (let ((@x5186 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5041) $x5968)) @x5044 $x5968)))
 (let (($x3181 (>= ?x5037 0)))
 (let ((@x1197 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5041) $x3181)) @x5044 $x3181)))
 (let (($x7175 (<= ?x2918 0)))
 (let ((@x5046 (and-elim @x1043 $x3199)))
 (let ((@x7383 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3199) $x7175)) @x5046 $x7175)))
 (let (($x5889 (>= ?x2918 0)))
 (let ((@x407 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3199) $x5889)) @x5046 $x5889)))
 (let (($x2460 (not (<= ?x4784 0))))
 (let (($x3383 (>= ?x4784 0)))
 (let ((@x5002 ((_ th-lemma arith) (hypothesis (not $x3383)) @x2311 @x402 @x407 @x7383 @x1197 @x5186 @x407 @x7383 @x1197 @x5186 @x5563 @x7357 @x2311 @x402 false)))
 (let ((@x4677 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4785 $x2460 (not $x3383))) (and-elim @x1043 $x7770) (or $x2460 (not $x3383)))))
 ((_ th-lemma arith) (unit-resolution @x4677 (lemma @x5002 $x3383) $x2460) @x2311 @x402 @x407 @x7383 @x1197 @x5186 @x407 @x7383 @x1197 @x5186 @x5563 @x7357 @x2311 @x402 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        33
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2206
 :arith-nonlinear-bounds    26
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      8
 :arith-tableau-max-columns 387
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                5.53
 :memory                    4.08
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                13555605
 :num-checks                1
 :propagations              12
 :rlimit-count              122376
 :time                      0.11
 :total-time                0.13)
