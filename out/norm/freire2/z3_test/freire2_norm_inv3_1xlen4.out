unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x4917 (* (- 1) s!1)))
 (let ((?x362 (* r00 r00)))
 (let ((?x4475 (* (- 3) ?x362)))
 (let ((?x1233 (+ s00 ?x4475 ?x4917 (* 3 (* r!2 r!2)))))
 (let (($x517 (<= ?x1233 0)))
 (let (($x1690 (= ?x1233 0)))
 (let ((?x2655 (* 6 r!2)))
 (let ((?x4761 (+ 3 s!1 ?x2655)))
 (let ((?x4769 (+ x!0 ?x4917)))
 (let ((?x1858 (+ 1 r!2)))
 (let ((?x3497 (* (- 6) (* r00 s00 ?x1858 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761))))
 (let ((?x3310 (* (- 6) (* r00 r00 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761))))
 (let ((?x3086 (* 6 (* r00 ?x1858 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761))))
 (let ((?x1930 (* 6 (* r00 r00 s00 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761))))
 (let ((?x3367 (+ ?x1930 (* (- 9) (* s00 ?x1858 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 216 (* r00 x00 s!1 s!1 s!1 r!2)) (* 2 (* ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* 108 (* s00 s!1 s!1 r!2)) (* 108 (* r00 x00 s!1 s!1 s!1)) (* 27 (* s00 x!0 x!0)) (* 648 (* r00 x00 x!0 x!0 r!2 r!2)) (* 36 (* s00 s00 s!1 s!1)) (* 9 (* ?x1858 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* 3 (* s00 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 72) (* s00 r00 r00 x!0 x!0 s!1 r!2)) (* 9 (* r00 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 36) (* s00 x!0 s!1 s!1)) (* 18 (* s00 x!0 x!0 s!1)) (* 108 (* s00 x!0 x!0 r!2)) (* (- 324) (* s00 r00 x!0 x!0 r!2)) (* 162 (* s00 r00 x!0 s!1)) (* (- 2) (* s00 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* 432 (* s00 r00 r00 x!0 s!1 r!2)) (* (- 9) (* r00 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 81) (* s00 r00 s!1 s!1)) (* (- 324) (* s00 r00 x!0 x!0 r!2 r!2)) (* 36 (* s00 x!0 x!0 s!1 r!2)) (* (- 4) (* s00 s00 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761)) (* (- 9) (* s00 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761)) (* (- 216) (* r00 x00 x!0 s!1 s!1)) (* 108 (* s00 s!1 s!1 r!2 r!2)) (* (- 324) (* s00 r00 s!1 s!1 r!2)) (* (- 54) (* s00 r00 s!1 s!1 s!1)) (* 108 (* r00 x00 x!0 x!0 s!1)) (* (- 9) (* s00 r00 s!1 s!1 s!1 s!1)) (* (- 2) (* s00 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 108 (* s00 r00 x!0 s!1 s!1)) (* (- 108) (* s00 r00 x!0 x!0 s!1 r!2)) (* 648 (* r00 x00 x!0 x!0 r!2)) (* (- 216) (* s00 r00 r00 s!1 s!1 r!2)) (* 18 (* r00 x00 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 288) (* s00 s00 x!0 s!1 r!2 r!2)) (* (- 6) (* s00 x!0 s!1 s!1 s!1)) (* (- 9) (* s00 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 4 (* s00 s00 s!1 s!1 s!1 s!1)) (* 18 (* s00 s!1 s!1 s!1)) (* (- 3) (* ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* (- 6) (* r00 ?x1858 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* (- 72) (* s00 x!0 s!1 s!1 r!2)) (* (- 324) (* r00 x00 x!0 s!1)) (* (- 3) (* s00 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761)) (* 36 (* s00 s!1 s!1 s!1 r!2)) (* 3 (* s00 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 18 (* x00 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 8) (* s00 s00 x!0 s!1 s!1 s!1)) (* 18 (* r00 x00 x!0 x!0 s!1 s!1)) (* (- 36) (* s00 r00 r00 x!0 x!0 s!1)) (* (- 2) (* ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* 3 (* s00 s!1 s!1 s!1 s!1)) (* (- 9) (* r00 s00 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 18) (* ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761)) (* 6 (* r00 s00 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761)) (* 216 (* r00 x00 x!0 x!0 s!1 r!2)) (* 48 (* s00 s00 s!1 s!1 s!1 r!2)) (* (- 9) (* ?x1858 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 54) (* s00 r00 r00 x!0 x!0)) (* 162 (* r00 x00 s!1 s!1)) (* (- 3) (* ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 72) (* s00 s00 x!0 s!1)) (* (- 6) (* r00 r00 s00 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 144 (* s00 s00 s!1 s!1 r!2)) (* 27 (* s00 s!1 s!1)) (* (- 288) (* s00 s00 x!0 s!1 r!2)) (* 24 (* s00 s00 s!1 s!1 s!1)) (* (- 6) (* r00 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* 144 (* s00 s00 x!0 x!0 r!2)) (* 36 (* s00 s00 x!0 x!0)) (* (- 3) (* ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* 144 (* s00 s00 x!0 x!0 r!2 r!2)) (* (- 9) (* r00 s00 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 216) (* s00 r00 r00 x!0 x!0 r!2 r!2)) (* (- 72) (* s00 r00 r00 s!1 s!1 s!1 r!2)) (* 6 (* r00 r00 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 6) (* s00 r00 r00 x!0 x!0 s!1 s!1)) (* (- 36) (* r00 x00 x!0 s!1 s!1 s!1)) (* 18 (* x00 ?x1858 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 144 (* s00 s00 s!1 s!1 r!2 r!2)) (* 12 (* s00 r00 r00 x!0 s!1 s!1 s!1)) (* (- 6) (* s00 r00 r00 s!1 s!1 s!1 s!1)) (* 4 (* s00 s00 x!0 x!0 s!1 s!1)) (* 48 (* s00 s00 x!0 x!0 s!1 r!2)) (* 9 (* r00 s00 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761)) (* (- 216) (* s00 x!0 s!1 r!2)) (* (- 216) (* s00 x!0 s!1 r!2 r!2)) (* 9 (* ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* (- 96) (* s00 s00 x!0 s!1 s!1 r!2)) (* (- 54) (* s00 r00 r00 s!1 s!1)) (* 6 (* r00 s00 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 9 (* r00 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* 432 (* s00 r00 r00 x!0 s!1 r!2 r!2)) (* (- 81) (* s00 r00 x!0 x!0)) (* (- 9) (* s00 r00 x!0 x!0 s!1 s!1)) (* (- 216) (* s00 r00 r00 s!1 s!1 r!2 r!2)) (* (- 18) (* ?x1858 ?x4769 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 324) (* s00 r00 s!1 s!1 r!2 r!2)) (* 4 (* s00 s00 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 9 (* r00 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* 18 (* r00 x00 s!1 s!1 s!1 s!1)) (* (- 6) (* r00 r00 s00 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 9 (* s00 ?x1858 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761)) (* 3 (* s00 x!0 x!0 s!1 s!1)) (* 144 (* s00 r00 r00 x!0 s!1 s!1 r!2)) (* 24 (* s00 s00 x!0 x!0 s!1)) (* (- 48) (* s00 s00 x!0 s!1 s!1)) (* 18 (* r00 x00 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 108) (* s00 r00 s!1 s!1 s!1 r!2)) (* 18 (* s00 r00 x!0 s!1 s!1 s!1)) (* (- 18) (* r00 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 216 (* s00 r00 x!0 s!1 s!1 r!2)) (* 648 (* s00 r00 x!0 s!1 r!2 r!2)) (* 162 (* r00 x00 x!0 x!0)) (* (- 1296) (* r00 x00 x!0 s!1 r!2 r!2)) (* 6 (* r00 s00 ?x1858 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 72 (* s00 r00 r00 x!0 s!1 s!1)) (* (- 1296) (* r00 x00 x!0 s!1 r!2)) (* 2 (* s00 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 18) (* ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 18 (* ?x1858 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761)) (* (- 2) (* ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761 ?x4761)) (* 108 (* s00 r00 r00 x!0 s!1)) (* (- 18) (* r00 ?x4769 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 18 (* x00 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761)) (* (- 54) (* s00 x!0 s!1)) (* 648 (* s00 r00 x!0 s!1 r!2)) (* 6 (* r00 r00 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* (- 36) (* s00 r00 r00 s!1 s!1 s!1)) (* 648 (* r00 x00 s!1 s!1 r!2 r!2)) (* (- 54) (* s00 r00 x!0 x!0 s!1)) (* (- 2) (* s00 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) (* 18 (* r00 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761)) (* (- 6) (* r00 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) ?x3086 ?x3310 (* 648 (* r00 x00 s!1 s!1 r!2)) (* 4 (* s00 s00 ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 216) (* s00 r00 r00 x!0 x!0 r!2)) (* (- 18) (* r00 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761)) (* (- 2) (* ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761 ?x4761)) (* 9 (* ?x1858 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* 6 (* r00 r00 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761 ?x4761)) ?x3497 (* 108 (* s00 x!0 x!0 r!2 r!2)) (* 3 (* ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761 ?x4761)) (* (- 432) (* r00 x00 x!0 s!1 s!1 r!2)) (* (- 18) (* x00 ?x1858 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761)) (* (- 18) (* r00 x00 ?x1858 ?x1858 ?x1858 ?x4769 ?x4769 ?x4769 ?x4761 ?x4761)))))
 (let (($x3375 (= ?x3367 0)))
 (let (($x3390 (not $x3375)))
 (let ((?x4669 (* r00 r00 s!1)))
 (let ((?x3448 (* 36 ?x4669)))
 (let ((?x1407 (* x00 x00)))
 (let ((?x4207 (* 108 ?x1407)))
 (let ((?x1245 (* s00 s00 s00)))
 (let ((?x3973 (* 16 ?x1245)))
 (let ((?x3930 (* (- 9) s!1)))
 (let ((?x943 (* r00 r00 r00 x00)))
 (let ((?x3311 (* (- 432) ?x943)))
 (let ((?x866 (* s00 x00)))
 (let ((?x3744 (* (- 108) ?x866)))
 (let ((?x708 (* s00 r00 r00)))
 (let ((?x4723 (* (- 36) ?x708)))
 (let ((?x652 (* s00 s00)))
 (let ((?x4068 (* 51 ?x652)))
 (let ((?x583 (* r00 x00)))
 (let ((?x2656 (* 108 ?x583)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4202 (+ ?x137 (* (- 54) (* s00 r00)) (* 54 (* r00 s!1)) (* 216 (* s00 r00 x00)) ?x2656 ?x4068 ?x4723 (* (- 108) (* s00 s00 r00)) (* 15 (* s!1 s!1)) (* (- 36) (* s00 s00 r00 r00)) ?x3744 (* (- 66) (* s00 s!1)) ?x3311 ?x3930 (* 216 (* s00 r00 r00 r00)) ?x3973 (* 108 (* x!0 x!0)) ?x4207 (* 108 (* x00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* (- 108) (* r00 x!0)) (* (- 216) (* x00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* 108 (* s00 r00 s!1)) (* 108 (* s00 x!0)) (* (- 108) (* x!0 s!1)) ?x3448 (* (- 216) (* r00 r00 r00 s!1)))))
 (let (($x4326 (= ?x4202 0)))
 (let ((?x3450 (+ ?x137 (* (- 24) (* s00 r00)) (* 24 (* r00 s!1)) (* 54 ?x583) (* 15 ?x652) ?x4723 (* 2 (* s00 s00 r00)) (* (- 3) (* s!1 s!1)) (* (- 6) ?x866) (* (- 12) (* s00 s!1)) (* 36 (* r00 r00 x00)) (* 24 (* s!1 r!2)) ?x3930 (* (- 24) (* s00 r!2)) (* 6 (* x00 s!1)) (* 4 (* s00 s00 r!2)) (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* 2 (* s00 r00 s!1)) (* (- 54) (* x!0 r!2)) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 6) (* x!0 s!1)) (* (- 2) (* s00 s!1 r!2)) (* (- 36) (* r00 x!0 r!2)) ?x3448)))
 (let (($x3740 (= ?x3450 0)))
 (let ((?x4640 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3342 (+ ?x44 (* (- 9) (* s00 r00)) (* 9 (* r00 s!1)) (* 18 ?x583) (* 4 ?x652) (* (- 6) ?x708) (* (- 2) (* s!1 s!1)) (* (- 2) (* s00 s!1)) (* 9 (* s!1 r!2)) ?x4640 (* (- 9) (* s00 r!2)) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* 6 (* s00 r00 r!2)) (* (- 6) (* r00 s!1 r!2)) (* (- 18) (* x!0 r!2)) (* 6 ?x4669))))
 (let (($x3349 (= ?x3342 0)))
 (let ((?x407 (* 3 r!2)))
 (let ((?x4636 (* 6 x!0)))
 (let ((?x530 (* r00 r00 r00)))
 (let ((?x531 (* 12 ?x530)))
 (let ((?x487 (* s00 r00)))
 (let ((?x565 (* (- 6) ?x487)))
 (let ((?x562 (* (- 6) x00)))
 (let ((?x561 (* (- 3) r00)))
 (let ((?x836 (+ ?x44 ?x561 ?x562 ?x565 ?x531 (* 2 (* s!1 r!2)) ?x4636 ?x4640 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)) ?x407)))
 (let (($x4957 (= ?x836 0)))
 (let (($x4777 (and $x1690 $x4957 $x3349 $x3740 $x4326 $x3390)))
 (let ((?x2651 (+ 3 ?x2655 s!1)))
 (let ((?x4830 (+ ?x4917 x!0)))
 (let ((?x4231 (* (- 6) (* r00 r00 s00 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651))))
 (let ((?x4696 (* 6 (* r00 r00 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651))))
 (let ((?x4093 (* (- 6) (* r00 ?x1858 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651))))
 (let ((?x2661 (* 6 (* r00 s00 ?x1858 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651))))
 (let ((?x4941 (+ ?x2661 (* (- 6) (* r00 r00 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* (- 432) (* r!2 s!1 x!0 s00 r00 r00)) (* (- 27) (* s!1 s!1 s00)) (* 2 (* ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651 ?x2651)) (* 18 (* r00 ?x4830 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 18) (* x00 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651)) (* 216 (* r!2 x!0 x!0 s00 r00 r00)) (* 36 (* s!1 s!1 s!1 s00 r00 r00)) (* 2 (* s00 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 6) (* r00 r00 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* (- 9) (* r00 s00 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651)) (* 36 (* s!1 x!0 x!0 s00 r00 r00)) (* (- 432) (* r!2 r!2 s!1 x!0 s00 r00 r00)) (* (- 3) (* s00 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 216 (* r!2 r!2 s!1 s!1 s00 r00 r00)) ?x4093 (* 6 (* r00 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 18 (* r00 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 72) (* s!1 s!1 x!0 s00 r00 r00)) (* 2 (* ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651 ?x2651)) (* (- 18) (* ?x1858 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651)) (* (- 216) (* r!2 s!1 s!1 x!0 s00 r00)) (* 9 (* r00 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 2 (* s00 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* (- 18) (* x00 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 18 (* ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 648) (* r!2 r!2 s!1 x!0 s00 r00)) (* (- 648) (* r!2 s!1 x!0 s00 r00)) (* (- 18) (* s!1 s!1 s!1 x!0 s00 r00)) (* 54 (* s!1 x!0 x!0 s00 r00)) (* 108 (* r!2 s!1 x!0 x!0 s00 r00)) (* (- 108) (* s!1 s!1 x!0 s00 r00)) (* 9 (* s!1 s!1 x!0 x!0 s00 r00)) (* 324 (* r!2 r!2 x!0 x!0 s00 r00)) (* (- 162) (* s!1 x!0 s00 r00)) (* 324 (* r!2 x!0 x!0 s00 r00)) (* 81 (* x!0 x!0 s00 r00)) (* 6 (* r00 r00 s00 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 18) (* r00 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651)) (* (- 4) (* s00 s00 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 9 (* s!1 s!1 s!1 s!1 s00 r00)) (* 108 (* r!2 s!1 s!1 s!1 s00 r00)) (* (- 9) (* s00 ?x1858 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651)) (* 54 (* s!1 s!1 s!1 s00 r00)) (* (- 18) (* r00 x00 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 324 (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 9) (* r00 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* 3 (* ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* 324 (* r!2 s!1 s!1 s00 r00)) (* (- 6) (* r00 s00 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 81 (* s!1 s!1 s00 r00)) (* (- 9) (* r00 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* (- 3) (* s00 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 18 (* r00 x00 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651)) (* 6 (* r00 ?x1858 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* 36 (* s!1 s!1 x!0 s00)) (* 216 (* r!2 s!1 x!0 s00)) (* 54 (* s!1 x!0 s00)) (* (- 18) (* s!1 s!1 s!1 s00)) (* (- 108) (* r!2 s!1 s!1 s00)) (* (- 27) (* x!0 x!0 s00)) (* (- 108) (* r!2 x!0 x!0 s00)) (* (- 18) (* s!1 x!0 x!0 s00)) (* 18 (* ?x1858 ?x4830 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 3) (* s!1 s!1 x!0 x!0 s00)) (* (- 36) (* r!2 s!1 x!0 x!0 s00)) (* 4 (* s00 s00 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651)) (* (- 108) (* r!2 r!2 s!1 s!1 s00)) (* (- 36) (* r!2 s!1 s!1 s!1 s00)) (* (- 3) (* s!1 s!1 s!1 s!1 s00)) (* 216 (* r!2 r!2 s!1 x!0 s00)) (* 72 (* r!2 s!1 s!1 x!0 s00)) (* 3 (* s00 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651)) (* 6 (* s!1 s!1 s!1 x!0 s00)) (* (- 3) (* ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 108) (* r!2 r!2 x!0 x!0 s00)) (* 18 (* x00 ?x1858 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651)) (* 432 (* r!2 s!1 s!1 x!0 r00 x00)) (* (- 108) (* s!1 x!0 s00 r00 r00)) (* 1296 (* r!2 s!1 x!0 r00 x00)) (* (- 9) (* ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* 3 (* ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* 324 (* s!1 x!0 r00 x00)) (* 2 (* s00 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* 216 (* s!1 s!1 x!0 r00 x00)) (* (- 6) (* r00 s00 ?x1858 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 1296 (* r!2 r!2 s!1 x!0 r00 x00)) ?x4696 (* (- 9) (* ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 2) (* ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* 9 (* s00 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 36 (* s!1 s!1 s!1 x!0 r00 x00)) (* (- 162) (* x!0 x!0 r00 x00)) (* (- 648) (* r!2 x!0 x!0 r00 x00)) (* (- 108) (* s!1 x!0 x!0 r00 x00)) (* 9 (* r00 s00 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 9 (* s00 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651)) (* (- 648) (* r!2 r!2 x!0 x!0 r00 x00)) ?x4231 (* 9 (* s00 ?x1858 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 216) (* r!2 s!1 x!0 x!0 r00 x00)) (* (- 18) (* s!1 s!1 x!0 x!0 r00 x00)) (* 54 (* s!1 s!1 s00 r00 r00)) (* (- 18) (* s!1 s!1 s!1 s!1 r00 x00)) (* (- 216) (* r!2 s!1 s!1 s!1 r00 x00)) (* (- 108) (* s!1 s!1 s!1 r00 x00)) (* (- 648) (* r!2 r!2 s!1 s!1 r00 x00)) (* (- 2) (* s00 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 648) (* r!2 s!1 s!1 r00 x00)) (* 54 (* x!0 x!0 s00 r00 r00)) (* (- 162) (* s!1 s!1 r00 x00)) (* 216 (* r!2 s!1 s!1 s00 r00 r00)) (* 18 (* r00 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651)) (* 9 (* ?x1858 ?x1858 ?x1858 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 18) (* r00 x00 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 72 (* s!1 x!0 s00 s00)) (* 18 (* ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651)) (* (- 6) (* r00 s00 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651)) (* 3 (* ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 9 (* r00 s00 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 36) (* s!1 s!1 s00 s00)) (* 6 (* r00 r00 s00 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 144) (* r!2 s!1 s!1 s00 s00)) (* (- 24) (* s!1 s!1 s!1 s00 s00)) (* 6 (* r00 ?x1858 ?x4830 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* 288 (* r!2 s!1 x!0 s00 s00)) (* 48 (* s!1 s!1 x!0 s00 s00)) (* (- 36) (* x!0 x!0 s00 s00)) (* (- 144) (* r!2 x!0 x!0 s00 s00)) (* (- 24) (* s!1 x!0 x!0 s00 s00)) (* 2 (* ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* (- 4) (* s00 s00 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 9) (* ?x1858 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651 ?x2651)) (* 216 (* r!2 r!2 x!0 x!0 s00 r00 r00)) (* 72 (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* (- 144) (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 48) (* r!2 s!1 s!1 s!1 s00 s00)) (* (- 4) (* s!1 s!1 s!1 s!1 s00 s00)) (* 72 (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* (- 9) (* r00 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 288 (* r!2 r!2 s!1 x!0 s00 s00)) (* 96 (* r!2 s!1 s!1 x!0 s00 s00)) (* 8 (* s!1 s!1 s!1 x!0 s00 s00)) (* (- 6) (* r00 r00 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* (- 144) (* r!2 r!2 x!0 x!0 s00 s00)) (* (- 48) (* r!2 s!1 x!0 x!0 s00 s00)) (* (- 4) (* s!1 s!1 x!0 x!0 s00 s00)) (* 6 (* s!1 s!1 s!1 s!1 s00 r00 r00)) (* (- 12) (* s!1 s!1 s!1 x!0 s00 r00 r00)) (* (- 144) (* r!2 r!2 s!1 s!1 s00 s00)) (* (- 18) (* x00 ?x1858 ?x1858 ?x4830 ?x4830 ?x2651 ?x2651 ?x2651)) (* 6 (* s!1 s!1 x!0 x!0 s00 r00 r00)))))
 (let ((?x1437 (* (- 108) ?x1407)))
 (let ((?x1436 (* (- 16) ?x1245)))
 (let ((?x1117 (* s00 r00 r00 r00)))
 (let ((?x1432 (* (- 216) ?x1117)))
 (let ((?x944 (* 432 ?x943)))
 (let ((?x1190 (* 108 ?x866)))
 (let ((?x792 (* s00 s00 r00 r00)))
 (let ((?x793 (* 36 ?x792)))
 (let ((?x729 (* s00 s00 r00)))
 (let ((?x1073 (* 108 ?x729)))
 (let ((?x1061 (* 36 ?x708)))
 (let ((?x1426 (* (- 51) ?x652)))
 (let ((?x2544 (* s!1 r00 r00)))
 (let ((?x818 (* (- 36) ?x2544)))
 (let ((?x1423 (* (- 108) ?x583)))
 (let ((?x574 (* s00 r00 x00)))
 (let ((?x1422 (* (- 216) ?x574)))
 (let ((?x581 (* 54 ?x487)))
 (let ((?x1048 (* (- 9) s00)))
 (let ((?x3514 (* 9 s!1)))
 (let ((?x1720 (+ ?x3514 ?x1048 ?x581 ?x1422 ?x1423 (* (- 15) (* s!1 s!1)) ?x818 ?x1426 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1061 ?x1073 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x793 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1190 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x944 (* 12 (* s!1 s!1 s00)) ?x1432 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1436 (* 216 (* x!0 x00)) ?x1437)))
 (let ((?x938 (* r00 r00 x00)))
 (let ((?x951 (* (- 36) ?x938)))
 (let ((?x867 (* 6 ?x866)))
 (let ((?x757 (* (- 2) ?x729)))
 (let ((?x977 (* (- 15) ?x652)))
 (let ((?x612 (* (- 54) ?x583)))
 (let ((?x625 (* 24 ?x487)))
 (let ((?x4210 (+ ?x3514 ?x1048 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x625 ?x612 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x818 ?x977 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1061 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x757 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x867 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x951 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x709 (* 6 ?x708)))
 (let ((?x665 (* (- 4) ?x652)))
 (let ((?x597 (* (- 18) ?x583)))
 (let ((?x602 (* 9 ?x487)))
 (let ((?x439 (* (- 3) s00)))
 (let ((?x3128 (+ (* 3 s!1) ?x439 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x602 ?x597 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x2544) ?x665 (* 18 (* x!0 r00)) ?x709 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x2311 (+ ?x407 ?x4640 ?x4636 ?x44 ?x561 ?x562 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x565 ?x531)))
 (let (($x4543 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x362)) 0)))
 (let (($x4951 (and $x4543 (= ?x2311 0) (= ?x3128 0) (= ?x4210 0) (= ?x1720 0) (not (= ?x4941 0)))))
 (let (($x2498 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1444 (+ 3 ?x211 s)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x1450 (+ ?x341 x)))
 (let ((?x1457 (+ 1 r)))
 (let ((?x4890 (* (- 144) (* r r s s s00 s00))))
 (let ((?x4869 (* (- 4) (* s s x x s00 s00))))
 (let ((?x4972 (* (- 48) (* r s x x s00 s00))))
 (let ((?x4842 (* (- 144) (* r r x x s00 s00))))
 (let ((?x4969 (* 8 (* s s s x s00 s00))))
 (let ((?x4967 (* 96 (* r s s x s00 s00))))
 (let ((?x4965 (* 288 (* r r s x s00 s00))))
 (let ((?x4735 (* (- 4) (* s s s s s00 s00))))
 (let ((?x4960 (* (- 48) (* r s s s s00 s00))))
 (let ((?x4971 (* (- 24) (* s x x s00 s00))))
 (let ((?x4970 (* (- 144) (* r x x s00 s00))))
 (let ((?x4949 (* (- 36) (* x x s00 s00))))
 (let ((?x4964 (* 48 (* s s x s00 s00))))
 (let ((?x4962 (* 288 (* r s x s00 s00))))
 (let ((?x4974 (* (- 24) (* s s s s00 s00))))
 (let ((?x4973 (* (- 144) (* r s s s00 s00))))
 (let ((?x4874 (* (- 36) (* s s s00 s00))))
 (let ((?x4795 (* 72 (* s x s00 s00))))
 (let ((?x4299 (* (- 162) (* s s r00 x00))))
 (let ((?x4317 (* (- 648) (* r s s r00 x00))))
 (let ((?x4271 (* (- 648) (* r r s s r00 x00))))
 (let ((?x4316 (* (- 108) (* s s s r00 x00))))
 (let ((?x4315 (* (- 216) (* r s s s r00 x00))))
 (let ((?x4233 (* (- 18) (* s s s s r00 x00))))
 (let ((?x4157 (* (- 18) (* s s x x r00 x00))))
 (let ((?x4314 (* (- 216) (* r s x x r00 x00))))
 (let ((?x2122 (* (- 6) (* r00 r00 s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444))))
 (let ((?x4126 (* (- 648) (* r r x x r00 x00))))
 (let ((?x4313 (* (- 108) (* s x x r00 x00))))
 (let ((?x4312 (* (- 648) (* r x x r00 x00))))
 (let ((?x4090 (* (- 162) (* x x r00 x00))))
 (let ((?x4311 (* 36 (* s s s x r00 x00))))
 (let ((?x2501 (* 6 (* r00 r00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444))))
 (let ((?x4309 (* 1296 (* r r s x r00 x00))))
 (let ((?x4308 (* 216 (* s s x r00 x00))))
 (let ((?x4307 (* 324 (* s x r00 x00))))
 (let ((?x4306 (* 1296 (* r s x r00 x00))))
 (let ((?x4310 (* 432 (* r s s x r00 x00))))
 (let ((?x3564 (* (- 108) (* r r x x s00))))
 (let ((?x3585 (* 6 (* s s s x s00))))
 (let ((?x3582 (* 72 (* r s s x s00))))
 (let ((?x3581 (* 216 (* r r s x s00))))
 (let ((?x3407 (* (- 3) (* s s s s s00))))
 (let ((?x3580 (* (- 36) (* r s s s s00))))
 (let ((?x3387 (* (- 108) (* r r s s s00))))
 (let ((?x3577 (* (- 36) (* r s x x s00))))
 (let ((?x3337 (* (- 3) (* s s x x s00))))
 (let ((?x3587 (* (- 18) (* s x x s00))))
 (let ((?x3586 (* (- 108) (* r x x s00))))
 (let ((?x3566 (* (- 27) (* x x s00))))
 (let ((?x3578 (* (- 108) (* r s s s00))))
 (let ((?x3579 (* (- 18) (* s s s s00))))
 (let ((?x3532 (* 54 (* s x s00))))
 (let ((?x3584 (* 216 (* r s x s00))))
 (let ((?x3583 (* 36 (* s s x s00))))
 (let ((?x4341 (* (- 6) (* r00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444))))
 (let ((?x1001 (* s s s00)))
 (let ((?x3328 (* (- 27) ?x1001)))
 (let ((?x2330 (* 6 (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444))))
 (let ((?x3179 (+ ?x2330 (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 432) (* r s x s00 r00 r00)) ?x3328 (* 2 (* ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* 18 (* r00 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) (* x00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444)) (* 216 (* r x x s00 r00 r00)) (* 36 (* s s s s00 r00 r00)) (* 2 (* s00 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 r00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 36 (* s x x s00 r00 r00)) (* (- 432) (* r r s x s00 r00 r00)) (* (- 3) (* s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 216 (* r r s s s00 r00 r00)) ?x4341 (* 6 (* r00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* r00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 72) (* s s x s00 r00 r00)) (* 2 (* ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* (- 216) (* r s s x s00 r00)) (* 9 (* r00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 2 (* s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* x00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 648) (* r r s x s00 r00)) (* (- 648) (* r s x s00 r00)) (* (- 18) (* s s s x s00 r00)) (* 54 (* s x x s00 r00)) (* 108 (* r s x x s00 r00)) (* (- 108) (* s s x s00 r00)) (* 9 (* s s x x s00 r00)) (* 324 (* r r x x s00 r00)) (* (- 162) (* s x s00 r00)) (* 324 (* r x x s00 r00)) (* 81 (* x x s00 r00)) (* 6 (* r00 r00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) (* r00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* (- 4) (* s00 s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* s s s s s00 r00)) (* 108 (* r s s s s00 r00)) (* (- 9) (* s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 54 (* s s s s00 r00)) (* (- 18) (* r00 x00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 324 (* r r s s s00 r00)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 (* ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 324 (* r s s s00 r00)) (* (- 6) (* r00 s00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 81 (* s s s00 r00)) (* (- 9) (* r00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 3) (* s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* r00 x00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 6 (* r00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x3583 ?x3584 ?x3532 ?x3579 ?x3578 ?x3566 ?x3586 ?x3587 (* 18 (* ?x1457 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x3337 ?x3577 (* 4 (* s00 s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x3387 ?x3580 ?x3407 ?x3581 ?x3582 (* 3 (* s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x3585 (* (- 3) (* ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x3564 (* 18 (* x00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x4310 (* (- 108) (* s x s00 r00 r00)) ?x4306 (* (- 9) (* ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 (* ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x4307 (* 2 (* s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x4308 (* (- 6) (* r00 s00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4309 ?x2501 (* (- 9) (* ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 2) (* ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 9 (* s00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4311 ?x4090 ?x4312 ?x4313 (* 9 (* r00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444)) ?x4126 ?x2122 (* 9 (* s00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4314 ?x4157 (* 54 (* s s s00 r00 r00)) ?x4233 ?x4315 ?x4316 ?x4271 (* (- 2) (* s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4317 (* 54 (* x x s00 r00 r00)) ?x4299 (* 216 (* r s s s00 r00 r00)) (* 18 (* r00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 9 (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) (* r00 x00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4795 (* 18 (* ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* (- 6) (* r00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444)) (* 3 (* ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* r00 s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4874 (* 6 (* r00 r00 s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4973 ?x4974 (* 6 (* r00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x4962 ?x4964 ?x4949 ?x4970 ?x4971 (* 2 (* ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 4) (* s00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) (* ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 216 (* r r x x s00 r00 r00)) (* 72 (* r s s s s00 r00 r00)) (* (- 144) (* r s s x s00 r00 r00)) ?x4960 ?x4735 (* 72 (* r s x x s00 r00 r00)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4965 ?x4967 ?x4969 (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4842 ?x4972 ?x4869 (* 6 (* s s s s s00 r00 r00)) (* (- 12) (* s s s x s00 r00 r00)) ?x4890 (* (- 18) (* x00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 6 (* s s x x s00 r00 r00)))))
 (let ((?x1407 (* x00 x00)))
 (let ((?x1437 (* (- 108) ?x1407)))
 (let ((?x1245 (* s00 s00 s00)))
 (let ((?x1436 (* (- 16) ?x1245)))
 (let ((?x1117 (* s00 r00 r00 r00)))
 (let ((?x1432 (* (- 216) ?x1117)))
 (let ((?x943 (* r00 r00 r00 x00)))
 (let ((?x944 (* 432 ?x943)))
 (let ((?x866 (* s00 x00)))
 (let ((?x1190 (* 108 ?x866)))
 (let ((?x792 (* s00 s00 r00 r00)))
 (let ((?x793 (* 36 ?x792)))
 (let ((?x729 (* s00 s00 r00)))
 (let ((?x1073 (* 108 ?x729)))
 (let ((?x708 (* s00 r00 r00)))
 (let ((?x1061 (* 36 ?x708)))
 (let ((?x652 (* s00 s00)))
 (let ((?x1426 (* (- 51) ?x652)))
 (let ((?x626 (* s r00 r00)))
 (let ((?x925 (* (- 36) ?x626)))
 (let ((?x583 (* r00 x00)))
 (let ((?x1423 (* (- 108) ?x583)))
 (let ((?x574 (* s00 r00 x00)))
 (let ((?x1422 (* (- 216) ?x574)))
 (let ((?x487 (* s00 r00)))
 (let ((?x581 (* 54 ?x487)))
 (let ((?x1048 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1438 (+ ?x143 ?x1048 ?x581 ?x1422 ?x1423 (* (- 15) (* s s)) ?x925 ?x1426 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1061 ?x1073 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x793 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1190 (* 108 (* s x)) (* (- 108) (* x x)) ?x944 (* 12 ?x1001) ?x1432 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1436 (* 216 (* x x00)) ?x1437)))
 (let (($x1439 (= ?x1438 0)))
 (let ((?x938 (* r00 r00 x00)))
 (let ((?x951 (* (- 36) ?x938)))
 (let ((?x867 (* 6 ?x866)))
 (let ((?x757 (* (- 2) ?x729)))
 (let ((?x977 (* (- 15) ?x652)))
 (let ((?x606 (* s s)))
 (let ((?x630 (* 3 ?x606)))
 (let ((?x612 (* (- 54) ?x583)))
 (let ((?x625 (* 24 ?x487)))
 (let ((?x1140 (+ ?x143 ?x1048 (* (- 24) (* r s)) (* 24 (* r s00)) ?x625 ?x612 ?x630 (* 54 (* r x)) (* 36 (* r x r00)) ?x925 ?x977 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1061 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x757 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x867 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x951 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1145 (= ?x1140 0)))
 (let ((?x709 (* 6 ?x708)))
 (let ((?x665 (* (- 4) ?x652)))
 (let ((?x607 (* 2 ?x606)))
 (let ((?x597 (* (- 18) ?x583)))
 (let ((?x602 (* 9 ?x487)))
 (let ((?x439 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x806 (+ ?x47 ?x439 (* (- 9) (* r s)) (* 9 (* r s00)) ?x602 ?x597 ?x607 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x626) ?x665 (* 18 (* x r00)) ?x709 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x813 (= ?x806 0)))
 (let ((?x530 (* r00 r00 r00)))
 (let ((?x531 (* 12 ?x530)))
 (let ((?x565 (* (- 6) ?x487)))
 (let ((?x562 (* (- 6) x00)))
 (let ((?x561 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x566 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x561 ?x562 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x565 ?x531)))
 (let (($x567 (= ?x566 0)))
 (let ((?x362 (* r00 r00)))
 (let ((?x363 (* 3 ?x362)))
 (let ((?x392 (* (- 1) s00)))
 (let (($x395 (= (+ s ?x392 (* (- 3) (* r r)) ?x363) 0)))
 (and $x395 $x567 $x813 $x1145 $x1439 (not (= ?x3179 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x4578 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x4492 (+ 3 s ?x211)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x4533 (+ x ?x341)))
 (let ((?x1457 (+ 1 r)))
 (let ((?x2108 (* (- 6) (* r00 ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492))))
 (let ((?x4841 (* (- 6) (* r00 r00 s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492))))
 (let ((?x4730 (* 6 (* r00 r00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492))))
 (let ((?x4681 (* 6 (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492))))
 (let ((?x2561 (+ (* 2 (* ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 18) (* ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 3) (* s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 2 (* s00 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 r00 s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 18) (* r00 x00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 3) (* ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* r00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 18 (* r00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 9) (* r00 s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 9) (* ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 2 (* s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 18 (* r00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* r00 s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 3 (* ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 9) (* ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 2 (* ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 9 (* ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 18) (* r00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 9) (* s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* 18 (* x00 ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* 3 (* ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 2 (* s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 18) (* x00 ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 18 (* ?x1457 ?x4533 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 6) (* r00 r00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) ?x4681 (* (- 6) (* r00 s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492)) ?x4730 (* (- 4) (* s00 s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 9) (* ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) ?x4841 (* (- 6) (* r00 r00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 r00 s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 3 (* ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 4) (* s00 s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* s00 ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 3 (* s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) ?x2108 (* 18 (* ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 6) (* r00 r00 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* r00 s00 ?x4533 ?x4533 ?x4492 ?x4492)) (* 4 (* s00 s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* 18 (* r00 x00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 6) (* r00 s00 ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 6) (* r00 s00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 3) (* s00 ?x4533 ?x4533 ?x4492 ?x4492)) (* 9 (* r00 s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 2) (* s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 2) (* ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 18) (* x00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492)) (* 18 (* r00 ?x4533 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* s00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 r00 s00 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 18) (* x00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 18 (* ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 9) (* r00 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 18) (* r00 x00 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 18) (* r00 x00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 9) (* r00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 9) (* r00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 3) (* s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 4) (* s00 s00 ?x4533 ?x4533 ?x4492 ?x4492)) (* 2 (* ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492 ?x4492)))))
 (let ((?x1407 (* x00 x00)))
 (let ((?x4207 (* 108 ?x1407)))
 (let ((?x137 (* 9 s00)))
 (let ((?x652 (* s00 s00)))
 (let ((?x4068 (* 51 ?x652)))
 (let ((?x1245 (* s00 s00 s00)))
 (let ((?x3973 (* 16 ?x1245)))
 (let ((?x866 (* s00 x00)))
 (let ((?x3744 (* (- 108) ?x866)))
 (let ((?x943 (* r00 r00 r00 x00)))
 (let ((?x3311 (* (- 432) ?x943)))
 (let ((?x583 (* r00 x00)))
 (let ((?x2656 (* 108 ?x583)))
 (let ((?x4215 (+ (* 216 (* r00 s00 x00)) ?x2656 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3311 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3744 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3973 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x4068 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4207)))
 (let ((?x143 (* 9 s)))
 (let ((?x1048 (* (- 9) s00)))
 (let ((?x977 (* (- 15) ?x652)))
 (let ((?x938 (* r00 r00 x00)))
 (let ((?x951 (* (- 36) ?x938)))
 (let ((?x867 (* 6 ?x866)))
 (let ((?x606 (* s s)))
 (let ((?x630 (* 3 ?x606)))
 (let ((?x612 (* (- 54) ?x583)))
 (let ((?x4025 (+ (* (- 24) (* s r)) ?x612 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x630 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x867 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x951 ?x977 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1048 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x439 (* (- 3) s00)))
 (let ((?x665 (* (- 4) ?x652)))
 (let ((?x607 (* 2 ?x606)))
 (let ((?x597 (* (- 18) ?x583)))
 (let ((?x3298 (+ (* (- 9) (* s r)) ?x597 (* 9 (* r00 s00)) ?x607 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x665 (* 18 (* r00 x)) ?x439 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x4521 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x439 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x4480 (= (+ s00 ?x341 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x4480 (= ?x4521 0) (= ?x3298 0) (= ?x4025 0) (= ?x4215 0) (not (= ?x2561 0))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x4486 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1444 (+ 3 ?x211 s)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x1450 (+ ?x341 x)))
 (let ((?x1457 (+ 1 r)))
 (let ((?x4890 (* (- 144) (* r r s s s00 s00))))
 (let ((?x4869 (* (- 4) (* s s x x s00 s00))))
 (let ((?x4972 (* (- 48) (* r s x x s00 s00))))
 (let ((?x4842 (* (- 144) (* r r x x s00 s00))))
 (let ((?x4969 (* 8 (* s s s x s00 s00))))
 (let ((?x4967 (* 96 (* r s s x s00 s00))))
 (let ((?x4965 (* 288 (* r r s x s00 s00))))
 (let ((?x4735 (* (- 4) (* s s s s s00 s00))))
 (let ((?x4960 (* (- 48) (* r s s s s00 s00))))
 (let ((?x4971 (* (- 24) (* s x x s00 s00))))
 (let ((?x4970 (* (- 144) (* r x x s00 s00))))
 (let ((?x4949 (* (- 36) (* x x s00 s00))))
 (let ((?x4964 (* 48 (* s s x s00 s00))))
 (let ((?x4962 (* 288 (* r s x s00 s00))))
 (let ((?x4974 (* (- 24) (* s s s s00 s00))))
 (let ((?x4973 (* (- 144) (* r s s s00 s00))))
 (let ((?x4874 (* (- 36) (* s s s00 s00))))
 (let ((?x4795 (* 72 (* s x s00 s00))))
 (let ((?x4299 (* (- 162) (* s s r00 x00))))
 (let ((?x4317 (* (- 648) (* r s s r00 x00))))
 (let ((?x4271 (* (- 648) (* r r s s r00 x00))))
 (let ((?x4316 (* (- 108) (* s s s r00 x00))))
 (let ((?x4315 (* (- 216) (* r s s s r00 x00))))
 (let ((?x4233 (* (- 18) (* s s s s r00 x00))))
 (let ((?x4157 (* (- 18) (* s s x x r00 x00))))
 (let ((?x4314 (* (- 216) (* r s x x r00 x00))))
 (let ((?x2122 (* (- 6) (* r00 r00 s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444))))
 (let ((?x4126 (* (- 648) (* r r x x r00 x00))))
 (let ((?x4313 (* (- 108) (* s x x r00 x00))))
 (let ((?x4312 (* (- 648) (* r x x r00 x00))))
 (let ((?x4090 (* (- 162) (* x x r00 x00))))
 (let ((?x4311 (* 36 (* s s s x r00 x00))))
 (let ((?x2501 (* 6 (* r00 r00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444))))
 (let ((?x4309 (* 1296 (* r r s x r00 x00))))
 (let ((?x4308 (* 216 (* s s x r00 x00))))
 (let ((?x4307 (* 324 (* s x r00 x00))))
 (let ((?x4306 (* 1296 (* r s x r00 x00))))
 (let ((?x4310 (* 432 (* r s s x r00 x00))))
 (let ((?x3564 (* (- 108) (* r r x x s00))))
 (let ((?x3585 (* 6 (* s s s x s00))))
 (let ((?x3582 (* 72 (* r s s x s00))))
 (let ((?x3581 (* 216 (* r r s x s00))))
 (let ((?x3407 (* (- 3) (* s s s s s00))))
 (let ((?x3580 (* (- 36) (* r s s s s00))))
 (let ((?x3387 (* (- 108) (* r r s s s00))))
 (let ((?x3577 (* (- 36) (* r s x x s00))))
 (let ((?x3337 (* (- 3) (* s s x x s00))))
 (let ((?x3587 (* (- 18) (* s x x s00))))
 (let ((?x3586 (* (- 108) (* r x x s00))))
 (let ((?x3566 (* (- 27) (* x x s00))))
 (let ((?x3578 (* (- 108) (* r s s s00))))
 (let ((?x3579 (* (- 18) (* s s s s00))))
 (let ((?x3532 (* 54 (* s x s00))))
 (let ((?x3584 (* 216 (* r s x s00))))
 (let ((?x3583 (* 36 (* s s x s00))))
 (let ((?x4341 (* (- 6) (* r00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444))))
 (let ((?x1001 (* s s s00)))
 (let ((?x3328 (* (- 27) ?x1001)))
 (let ((?x2330 (* 6 (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444))))
 (let ((?x3179 (+ ?x2330 (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 432) (* r s x s00 r00 r00)) ?x3328 (* 2 (* ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* 18 (* r00 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) (* x00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444)) (* 216 (* r x x s00 r00 r00)) (* 36 (* s s s s00 r00 r00)) (* 2 (* s00 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 r00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 36 (* s x x s00 r00 r00)) (* (- 432) (* r r s x s00 r00 r00)) (* (- 3) (* s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 216 (* r r s s s00 r00 r00)) ?x4341 (* 6 (* r00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* r00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 72) (* s s x s00 r00 r00)) (* 2 (* ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* (- 216) (* r s s x s00 r00)) (* 9 (* r00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 2 (* s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* x00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 648) (* r r s x s00 r00)) (* (- 648) (* r s x s00 r00)) (* (- 18) (* s s s x s00 r00)) (* 54 (* s x x s00 r00)) (* 108 (* r s x x s00 r00)) (* (- 108) (* s s x s00 r00)) (* 9 (* s s x x s00 r00)) (* 324 (* r r x x s00 r00)) (* (- 162) (* s x s00 r00)) (* 324 (* r x x s00 r00)) (* 81 (* x x s00 r00)) (* 6 (* r00 r00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) (* r00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* (- 4) (* s00 s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* s s s s s00 r00)) (* 108 (* r s s s s00 r00)) (* (- 9) (* s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 54 (* s s s s00 r00)) (* (- 18) (* r00 x00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 324 (* r r s s s00 r00)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 (* ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 324 (* r s s s00 r00)) (* (- 6) (* r00 s00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 81 (* s s s00 r00)) (* (- 9) (* r00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 3) (* s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* r00 x00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 6 (* r00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x3583 ?x3584 ?x3532 ?x3579 ?x3578 ?x3566 ?x3586 ?x3587 (* 18 (* ?x1457 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x3337 ?x3577 (* 4 (* s00 s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x3387 ?x3580 ?x3407 ?x3581 ?x3582 (* 3 (* s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x3585 (* (- 3) (* ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x3564 (* 18 (* x00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x4310 (* (- 108) (* s x s00 r00 r00)) ?x4306 (* (- 9) (* ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 (* ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x4307 (* 2 (* s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x4308 (* (- 6) (* r00 s00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4309 ?x2501 (* (- 9) (* ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 2) (* ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 9 (* s00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4311 ?x4090 ?x4312 ?x4313 (* 9 (* r00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444)) ?x4126 ?x2122 (* 9 (* s00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4314 ?x4157 (* 54 (* s s s00 r00 r00)) ?x4233 ?x4315 ?x4316 ?x4271 (* (- 2) (* s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4317 (* 54 (* x x s00 r00 r00)) ?x4299 (* 216 (* r s s s00 r00 r00)) (* 18 (* r00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 9 (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) (* r00 x00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4795 (* 18 (* ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* (- 6) (* r00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444)) (* 3 (* ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* r00 s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4874 (* 6 (* r00 r00 s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4973 ?x4974 (* 6 (* r00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x4962 ?x4964 ?x4949 ?x4970 ?x4971 (* 2 (* ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 4) (* s00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) (* ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 216 (* r r x x s00 r00 r00)) (* 72 (* r s s s s00 r00 r00)) (* (- 144) (* r s s x s00 r00 r00)) ?x4960 ?x4735 (* 72 (* r s x x s00 r00 r00)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4965 ?x4967 ?x4969 (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4842 ?x4972 ?x4869 (* 6 (* s s s s s00 r00 r00)) (* (- 12) (* s s s x s00 r00 r00)) ?x4890 (* (- 18) (* x00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 6 (* s s x x s00 r00 r00)))))
 (let ((?x1407 (* x00 x00)))
 (let ((?x1437 (* (- 108) ?x1407)))
 (let ((?x1245 (* s00 s00 s00)))
 (let ((?x1436 (* (- 16) ?x1245)))
 (let ((?x1117 (* s00 r00 r00 r00)))
 (let ((?x1432 (* (- 216) ?x1117)))
 (let ((?x943 (* r00 r00 r00 x00)))
 (let ((?x944 (* 432 ?x943)))
 (let ((?x866 (* s00 x00)))
 (let ((?x1190 (* 108 ?x866)))
 (let ((?x792 (* s00 s00 r00 r00)))
 (let ((?x793 (* 36 ?x792)))
 (let ((?x729 (* s00 s00 r00)))
 (let ((?x1073 (* 108 ?x729)))
 (let ((?x708 (* s00 r00 r00)))
 (let ((?x1061 (* 36 ?x708)))
 (let ((?x652 (* s00 s00)))
 (let ((?x1426 (* (- 51) ?x652)))
 (let ((?x626 (* s r00 r00)))
 (let ((?x925 (* (- 36) ?x626)))
 (let ((?x583 (* r00 x00)))
 (let ((?x1423 (* (- 108) ?x583)))
 (let ((?x574 (* s00 r00 x00)))
 (let ((?x1422 (* (- 216) ?x574)))
 (let ((?x487 (* s00 r00)))
 (let ((?x581 (* 54 ?x487)))
 (let ((?x1048 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1438 (+ ?x143 ?x1048 ?x581 ?x1422 ?x1423 (* (- 15) (* s s)) ?x925 ?x1426 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1061 ?x1073 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x793 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1190 (* 108 (* s x)) (* (- 108) (* x x)) ?x944 (* 12 ?x1001) ?x1432 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1436 (* 216 (* x x00)) ?x1437)))
 (let (($x1439 (= ?x1438 0)))
 (let ((?x938 (* r00 r00 x00)))
 (let ((?x951 (* (- 36) ?x938)))
 (let ((?x867 (* 6 ?x866)))
 (let ((?x757 (* (- 2) ?x729)))
 (let ((?x977 (* (- 15) ?x652)))
 (let ((?x606 (* s s)))
 (let ((?x630 (* 3 ?x606)))
 (let ((?x612 (* (- 54) ?x583)))
 (let ((?x625 (* 24 ?x487)))
 (let ((?x1140 (+ ?x143 ?x1048 (* (- 24) (* r s)) (* 24 (* r s00)) ?x625 ?x612 ?x630 (* 54 (* r x)) (* 36 (* r x r00)) ?x925 ?x977 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1061 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x757 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x867 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x951 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1145 (= ?x1140 0)))
 (let ((?x709 (* 6 ?x708)))
 (let ((?x665 (* (- 4) ?x652)))
 (let ((?x607 (* 2 ?x606)))
 (let ((?x597 (* (- 18) ?x583)))
 (let ((?x602 (* 9 ?x487)))
 (let ((?x439 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x806 (+ ?x47 ?x439 (* (- 9) (* r s)) (* 9 (* r s00)) ?x602 ?x597 ?x607 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x626) ?x665 (* 18 (* x r00)) ?x709 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x813 (= ?x806 0)))
 (let ((?x530 (* r00 r00 r00)))
 (let ((?x531 (* 12 ?x530)))
 (let ((?x565 (* (- 6) ?x487)))
 (let ((?x562 (* (- 6) x00)))
 (let ((?x561 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x566 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x561 ?x562 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x565 ?x531)))
 (let (($x567 (= ?x566 0)))
 (let ((?x362 (* r00 r00)))
 (let ((?x363 (* 3 ?x362)))
 (let ((?x392 (* (- 1) s00)))
 (let (($x395 (= (+ s ?x392 (* (- 3) (* r r)) ?x363) 0)))
 (let (($x863 (and $x395 $x567 $x813 $x1145 $x1439 (not (= ?x3179 0)))))
 (let ((?x4492 (+ 3 s ?x211)))
 (let ((?x4533 (+ x ?x341)))
 (let ((?x2108 (* (- 6) (* r00 ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492))))
 (let ((?x4841 (* (- 6) (* r00 r00 s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492))))
 (let ((?x4730 (* 6 (* r00 r00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492))))
 (let ((?x4681 (* 6 (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492))))
 (let ((?x2561 (+ (* 2 (* ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 18) (* ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 3) (* s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 2 (* s00 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 r00 s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 18) (* r00 x00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 3) (* ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* r00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 18 (* r00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 9) (* r00 s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 9) (* ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 2 (* s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 18 (* r00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* r00 s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 3 (* ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 9) (* ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 2 (* ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 9 (* ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 18) (* r00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 9) (* s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* 18 (* x00 ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* 3 (* ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 2 (* s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 18) (* x00 ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 18 (* ?x1457 ?x4533 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 6) (* r00 r00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) ?x4681 (* (- 6) (* r00 s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492)) ?x4730 (* (- 4) (* s00 s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 9) (* ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) ?x4841 (* (- 6) (* r00 r00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 r00 s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 3 (* ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 4) (* s00 s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* s00 ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 3 (* s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) ?x2108 (* 18 (* ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 6) (* r00 r00 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* r00 s00 ?x4533 ?x4533 ?x4492 ?x4492)) (* 4 (* s00 s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* 18 (* r00 x00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 6) (* r00 s00 ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 6) (* r00 s00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 3) (* s00 ?x4533 ?x4533 ?x4492 ?x4492)) (* 9 (* r00 s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 2) (* s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 2) (* ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 18) (* x00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492)) (* 18 (* r00 ?x4533 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* s00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 r00 s00 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 18) (* x00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 18 (* ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 9) (* r00 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 18) (* r00 x00 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 18) (* r00 x00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 9) (* r00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 9) (* r00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 3) (* s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 4) (* s00 s00 ?x4533 ?x4533 ?x4492 ?x4492)) (* 2 (* ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492 ?x4492)))))
 (let ((?x4207 (* 108 ?x1407)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4068 (* 51 ?x652)))
 (let ((?x3973 (* 16 ?x1245)))
 (let ((?x3744 (* (- 108) ?x866)))
 (let ((?x3311 (* (- 432) ?x943)))
 (let ((?x2656 (* 108 ?x583)))
 (let ((?x4215 (+ (* 216 (* r00 s00 x00)) ?x2656 (* (- 54) (* r00 s00)) (* 15 ?x606) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3311 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3744 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3973 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x4068 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4207)))
 (let ((?x4025 (+ (* (- 24) (* s r)) ?x612 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x630 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x867 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x951 ?x977 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1048 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x3298 (+ (* (- 9) (* s r)) ?x597 (* 9 (* r00 s00)) ?x607 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x665 (* 18 (* r00 x)) ?x439 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x4521 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x439 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x530))))
 (let (($x4370 (and (= (+ s00 ?x341 (* 3 (* r r)) (* (- 3) ?x362)) 0) (= ?x4521 0) (= ?x3298 0) (= ?x4025 0) (= ?x4215 0) (not (= ?x2561 0)))))
 (rewrite (= $x4370 $x863))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x338 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x219 (- (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 18 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x224 (+ (- ?x219 (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 2 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 6 ?x216 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x228 (- (- ?x224 (* 18 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x231 (+ ?x228 (* 9 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 18 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x234 (- ?x231 (* 9 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x241 (+ (- ?x234 (* 9 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213) (* 18 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x246 (+ (- ?x241 (* 9 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 2 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x249 (- ?x246 (* 18 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x250 (- ?x249 (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x254 (+ ?x250 (* 18 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 x00) (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 2 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x258 (+ (- ?x254 (* 18 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x262 (+ (- ?x258 (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x266 (+ (- ?x262 (* 6 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x272 (- (- ?x266 (* 4 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x273 (- ?x272 (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x277 (+ (- ?x273 (* 6 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x282 (+ (- ?x277 (* 4 ?x216 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x284 (- ?x282 (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x288 (- (+ ?x284 (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x292 (+ ?x288 (* 9 r00 ?x212 ?x212 s00 ?x213 ?x213) (* 4 ?x216 ?x216 ?x216 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213) (* 18 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x297 (- (- ?x292 (* 6 ?x216 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213)) (* 6 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x301 (+ (- ?x297 (* 3 ?x212 ?x212 s00 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 9 ?x216 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x305 (- ?x301 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x306 (- ?x305 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x311 (+ (- ?x306 (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 x00)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 9 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 6 r00 r00 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x315 (+ (- ?x311 (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00)) (* 18 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x319 (+ (- ?x315 (* 9 r00 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x327 (- (- ?x319 (* 18 r00 ?x212 ?x212 ?x213 ?x213 x00)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x329 (- (- ?x327 (* 9 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x331 (- (- ?x329 (* 3 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213)) (* 4 ?x212 ?x212 s00 s00 ?x213 ?x213))))
 (let (($x334 (= (+ ?x331 (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not $x334)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x4630 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x4492 (+ 3 s ?x211)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x4533 (+ x ?x341)))
 (let ((?x1457 (+ 1 r)))
 (let ((?x2108 (* (- 6) (* r00 ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492))))
 (let ((?x4841 (* (- 6) (* r00 r00 s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492))))
 (let ((?x4730 (* 6 (* r00 r00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492))))
 (let ((?x4681 (* 6 (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492))))
 (let ((?x2561 (+ (* 2 (* ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 18) (* ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 3) (* s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 2 (* s00 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 r00 s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 18) (* r00 x00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 3) (* ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* r00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 18 (* r00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 9) (* r00 s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 9) (* ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 2 (* s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 18 (* r00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* r00 s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 3 (* ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 9) (* ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 2 (* ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 9 (* ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 18) (* r00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 9) (* s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* 18 (* x00 ?x1457 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* 3 (* ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 2 (* s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 18) (* x00 ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 18 (* ?x1457 ?x4533 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 6) (* r00 r00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) ?x4681 (* (- 6) (* r00 s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492)) ?x4730 (* (- 4) (* s00 s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 9) (* ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) ?x4841 (* (- 6) (* r00 r00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 r00 s00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 3 (* ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 4) (* s00 s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* s00 ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 3 (* s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) ?x2108 (* 18 (* ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 6) (* r00 r00 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* r00 s00 ?x4533 ?x4533 ?x4492 ?x4492)) (* 4 (* s00 s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* 18 (* r00 x00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 6) (* r00 s00 ?x1457 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 6) (* r00 s00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 3) (* s00 ?x4533 ?x4533 ?x4492 ?x4492)) (* 9 (* r00 s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 2) (* s00 ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 2) (* ?x1457 ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 18) (* x00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492)) (* 18 (* r00 ?x4533 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 9 (* s00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 r00 s00 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 18) (* x00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 18 (* ?x1457 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 9) (* r00 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* 6 (* r00 ?x1457 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 18) (* r00 x00 ?x4533 ?x4533 ?x4492 ?x4492)) (* (- 18) (* r00 x00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 9) (* r00 ?x4533 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 9) (* r00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492)) (* (- 3) (* s00 ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492)) (* (- 4) (* s00 s00 ?x4533 ?x4533 ?x4492 ?x4492)) (* 2 (* ?x1457 ?x4533 ?x4533 ?x4492 ?x4492 ?x4492 ?x4492 ?x4492)))))
 (let ((?x1407 (* x00 x00)))
 (let ((?x4207 (* 108 ?x1407)))
 (let ((?x137 (* 9 s00)))
 (let ((?x652 (* s00 s00)))
 (let ((?x4068 (* 51 ?x652)))
 (let ((?x1245 (* s00 s00 s00)))
 (let ((?x3973 (* 16 ?x1245)))
 (let ((?x866 (* s00 x00)))
 (let ((?x3744 (* (- 108) ?x866)))
 (let ((?x943 (* r00 r00 r00 x00)))
 (let ((?x3311 (* (- 432) ?x943)))
 (let ((?x583 (* r00 x00)))
 (let ((?x2656 (* 108 ?x583)))
 (let ((?x4215 (+ (* 216 (* r00 s00 x00)) ?x2656 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3311 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3744 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3973 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x4068 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4207)))
 (let ((?x143 (* 9 s)))
 (let ((?x1048 (* (- 9) s00)))
 (let ((?x977 (* (- 15) ?x652)))
 (let ((?x938 (* r00 r00 x00)))
 (let ((?x951 (* (- 36) ?x938)))
 (let ((?x867 (* 6 ?x866)))
 (let ((?x606 (* s s)))
 (let ((?x630 (* 3 ?x606)))
 (let ((?x612 (* (- 54) ?x583)))
 (let ((?x4025 (+ (* (- 24) (* s r)) ?x612 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x630 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x867 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x951 ?x977 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1048 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x439 (* (- 3) s00)))
 (let ((?x665 (* (- 4) ?x652)))
 (let ((?x607 (* 2 ?x606)))
 (let ((?x597 (* (- 18) ?x583)))
 (let ((?x3298 (+ (* (- 9) (* s r)) ?x597 (* 9 (* r00 s00)) ?x607 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x665 (* 18 (* r00 x)) ?x439 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x4521 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x439 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x4480 (= (+ s00 ?x341 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x4370 (and $x4480 (= ?x4521 0) (= ?x3298 0) (= ?x4025 0) (= ?x4215 0) (not (= ?x2561 0)))))
 (let ((?x213 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x219 (- (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 18 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x224 (+ (- ?x219 (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 2 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 6 ?x216 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x228 (- (- ?x224 (* 18 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x231 (+ ?x228 (* 9 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 18 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x234 (- ?x231 (* 9 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x241 (+ (- ?x234 (* 9 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213) (* 18 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x246 (+ (- ?x241 (* 9 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 2 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x249 (- ?x246 (* 18 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x250 (- ?x249 (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x254 (+ ?x250 (* 18 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 x00) (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 2 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x258 (+ (- ?x254 (* 18 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x262 (+ (- ?x258 (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x266 (+ (- ?x262 (* 6 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x272 (- (- ?x266 (* 4 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x273 (- ?x272 (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x277 (+ (- ?x273 (* 6 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x282 (+ (- ?x277 (* 4 ?x216 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x284 (- ?x282 (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x288 (- (+ ?x284 (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x292 (+ ?x288 (* 9 r00 ?x212 ?x212 s00 ?x213 ?x213) (* 4 ?x216 ?x216 ?x216 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213) (* 18 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x297 (- (- ?x292 (* 6 ?x216 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213)) (* 6 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x301 (+ (- ?x297 (* 3 ?x212 ?x212 s00 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 9 ?x216 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x305 (- ?x301 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x306 (- ?x305 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x311 (+ (- ?x306 (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 x00)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 9 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 6 r00 r00 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x315 (+ (- ?x311 (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00)) (* 18 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x319 (+ (- ?x315 (* 9 r00 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x327 (- (- ?x319 (* 18 r00 ?x212 ?x212 ?x213 ?x213 x00)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x329 (- (- ?x327 (* 9 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x331 (- (- ?x329 (* 3 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213)) (* 4 ?x212 ?x212 s00 s00 ?x213 ?x213))))
 (let (($x334 (= (+ ?x331 (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) 0)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x337 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not $x334)))))
 (rewrite (= $x337 $x4370))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x339 (asserted $x338)))
 (let ((@x2714 (mp (mp @x339 (quant-intro (proof-bind ?x4630) (= $x338 $x4578)) $x4578) (rewrite (= $x4578 $x4578)) $x4578)))
 (let ((@x4954 (mp~ (mp @x2714 (quant-intro (proof-bind ?x4486) (= $x4578 $x2498)) $x2498) (sk (~ $x2498 $x4951)) $x4951)))
 (let ((@x2810 (mp @x4954 (rewrite (= $x4951 $x4777)) $x4777)))
 (let ((@x3299 (and-elim @x2810 $x1690)))
 (let ((@x4124 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1690) $x517)) @x3299 $x517)))
 (let (($x4854 (>= ?x1233 0)))
 (let ((@x820 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1690) $x4854)) @x3299 $x4854)))
 (let (($x4753 (<= ?x4202 0)))
 (let ((@x3755 (and-elim @x2810 $x4326)))
 (let ((@x2318 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4326) $x4753)) @x3755 $x4753)))
 (let (($x4765 (>= ?x4202 0)))
 (let ((@x1101 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4326) $x4765)) @x3755 $x4765)))
 (let (($x4863 (<= ?x836 0)))
 (let ((@x3748 (and-elim @x2810 $x4957)))
 (let ((@x958 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4957) $x4863)) @x3748 $x4863)))
 (let (($x4980 (>= ?x836 0)))
 (let ((@x4226 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4957) $x4980)) @x3748 $x4980)))
 (let (($x4984 (<= ?x3342 0)))
 (let ((@x3753 (and-elim @x2810 $x3349)))
 (let ((@x4659 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3349) $x4984)) @x3753 $x4984)))
 (let (($x4982 (>= ?x3342 0)))
 (let ((@x3695 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3349) $x4982)) @x3753 $x4982)))
 (let (($x4414 (<= ?x3450 0)))
 (let ((@x4861 (and-elim @x2810 $x3740)))
 (let ((@x1170 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3740) $x4414)) @x4861 $x4414)))
 (let (($x4979 (>= ?x3450 0)))
 (let ((@x2631 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3740) $x4979)) @x4861 $x4979)))
 (let (($x1926 (not (<= ?x3367 0))))
 (let (($x4265 (>= ?x3367 0)))
 (let ((@x2265 ((_ th-lemma arith) (hypothesis (not $x4265)) @x820 @x4124 @x3695 @x4659 @x3695 @x4659 @x2631 @x1170 @x2631 @x1170 @x2631 @x1170 @x820 @x4124 @x3695 @x4659 @x3695 @x4659 @x4226 @x958 @x820 @x4124 @x1101 @x2318 @x820 @x4124 false)))
 (let ((@x3118 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3375 $x1926 (not $x4265))) (and-elim @x2810 $x3390) (or $x1926 (not $x4265)))))
 ((_ th-lemma arith) (unit-resolution @x3118 (lemma @x2265 $x4265) $x1926) @x820 @x4124 @x3695 @x4659 @x3695 @x4659 @x2631 @x1170 @x2631 @x1170 @x2631 @x1170 @x820 @x4124 @x3695 @x4659 @x3695 @x4659 @x4226 @x958 @x820 @x4124 @x1101 @x2318 @x820 @x4124 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        41
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1630
 :arith-nonlinear-bounds    34
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      9
 :arith-tableau-max-columns 261
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                20.49
 :memory                    19.58
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                1531620
 :num-checks                1
 :propagations              12
 :rlimit-count              49938
 :time                      0.05
 :total-time                0.07)
