unsat
((set-logic NIA)
(declare-fun q!2 () Int)
(declare-fun r!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x82 (* y00 q00)))
 (let ((?x1093 (+ r00 ?x82 (* (- 1) r!1) (* (- 1) (* y00 q!2)))))
 (let (($x196 (<= ?x1093 0)))
 (let (($x1456 (= ?x1093 0)))
 (let ((?x1283 (* y00 y00 y00 r00)))
 (let ((?x884 (* y00 y00 y00 y00 q00)))
 (let ((?x2001 (+ (* y00 y00 y00 q!2 q!2 r!1) (* (- 1) (* y00 y00 y00 y00 q!2 q!2)) (* (- 2) (* y00 y00 y00 y00 y00 q00 q!2)) (* 2 (* y00 y00 r00)) (* y00 y00 r!1 r!1) (* (- 6) (* y00 y00 y00 q00 q!2 r!1 r!1)) (* (- 1) (* y00 y00 y00 r!1)) (* (- 1) (* y00 y00 y00 y00 q!2)) (* y00 y00 y00 r00 q!2) (* 2 (* y00 y00 y00 q00)) (* (- 2) (* y00 q!2 r!1 r!1 r!1 r!1)) (* (- 1) (* y00 q!2 q!2 r!1 r!1 r!1 r!1)) (* 3 (* y00 y00 y00 r00 q!2 q!2 r!1)) (* (- 1) (* y00 r!1 r!1 r!1 r!1)) (* 3 (* y00 y00 r00 q!2 q!2)) (* 2 (* y00 y00 q00 q!2 r!1 r!1 r!1)) (* (- 1) (* y00 y00 r00 r!1)) (* y00 y00 q00 q!2 q!2 r!1 r!1 r!1) (* y00 y00 y00 y00 q00 q!2) (* y00 y00 q00 r!1 r!1 r!1) (* (- 3) (* y00 y00 y00 q00 r!1 r!1)) (* 4 (* y00 y00 y00 q00 q!2)) (* (- 2) (* y00 y00 r!1)) (* (- 4) (* y00 y00 q!2 r!1)) (* (- 2) (* y00 y00 y00 q!2)) ?x884 (* 5 (* y00 y00 q!2 r!1 r!1 r!1)) (* 3 (* y00 y00 y00 r00 r!1)) (* 3 (* y00 y00 y00 y00 q00 r!1)) (* (- 1) (* y00 y00 y00 y00 y00 q00)) (* (- 3) (* y00 y00 y00 r!1 r!1)) (* 3 (* y00 y00 y00 q!2 q!2 r!1 r!1)) (* y00 y00 y00 y00 r!1) (* (- 1) (* y00 y00 y00 y00 q!2 r!1)) (* (- 1) (* y00 y00 q!2 q!2 q!2 r!1)) (* (- 4) (* y00 y00 y00 q!2 q!2)) (* y00 y00 y00 y00 y00 q!2) (* 2 (* y00 y00 y00 y00 y00 q!2 q!2)) (* (- 5) (* y00 y00 y00 y00 q!2 q!2 r!1)) (* 3 (* y00 y00 y00 q!2 q!2 q!2 r!1 r!1)) ?x1283 (* (- 1) (* y00 y00 y00 q!2 q!2 q!2 q!2)) (* y00 r00 r!1 r!1 r!1) (* (- 1) (* y00 y00 y00 y00 r00 q!2 q!2)) (* (- 1) (* y00 y00 q!2 q!2 q!2 r!1 r!1 r!1)) (* (- 3) (* y00 y00 y00 y00 q!2 q!2 q!2 r!1)) (* y00 y00 y00 y00 y00 q!2 q!2 q!2) (* 2 (* y00 r00 q!2 r!1 r!1 r!1)) (* y00 r00 q!2 q!2 r!1 r!1 r!1) (* (- 1) (* y00 y00 r00 q!2 r!1)) (* (- 6) (* y00 y00 r00 q!2 r!1 r!1)) (* (- 3) (* y00 y00 q!2 q!2 r!1)) (* (- 3) (* y00 y00 y00 q!2 q!2 q!2)) (* (- 1) (* y00 y00 y00 q00 r!1)) (* y00 y00 q!2 r!1 r!1) (* (- 3) (* y00 y00 r00 r!1 r!1)) (* (- 3) (* y00 y00 r00 q!2 q!2 r!1 r!1)) (* (- 3) (* y00 y00 y00 q!2 r!1 r!1)) (* (- 2) (* y00 y00 y00 y00 r00 q!2)) (* 4 (* y00 y00 r00 q!2)) (* 6 (* y00 y00 y00 y00 q00 q!2 r!1)) (* (- 1) (* y00 y00 y00 y00 y00 q00 q!2 q!2)) (* y00 y00 y00 q00 q!2 q!2 q!2) (* y00 y00 r00 q!2 q!2 q!2) (* 6 (* y00 y00 y00 r00 q!2 r!1)) (* 3 (* y00 y00 r!1 r!1 r!1)) (* y00 y00 q!2 q!2 r!1 r!1 r!1) (* 3 (* y00 y00 y00 q00 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 r00)) (* (- 3) (* y00 y00 y00 q00 q!2 q!2 r!1 r!1)) (* 3 (* y00 y00 y00 y00 q00 q!2 q!2 r!1)) (* (- 1) (* y00 y00 y00 q00 q!2 r!1)))))
 (let (($x1638 (= ?x2001 0)))
 (let (($x948 (not $x1638)))
 (let ((?x506 (+ y00 (* (- 1) y!0))))
 (let (($x508 (= ?x506 0)))
 (let (($x1567 (and $x508 $x1456 $x948)))
 (let ((?x2074 (* y00 y00 y00 y00 r00)))
 (let ((?x1284 (* (- 1) ?x1283)))
 (let ((?x1169 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x887 (* (- 1) ?x884)))
 (let ((?x269 (* y00 y00 y00 q00)))
 (let ((?x935 (* (- 2) ?x269)))
 (let ((?x138 (* y00 y00 r00)))
 (let ((?x243 (* (- 2) ?x138)))
 (let ((?x1877 (+ (* 2 (* r!1 y00 y00)) (* 4 (* q!2 r!1 y00 y00)) (* 2 (* q!2 y00 y00 y00)) ?x243 (* (- 4) (* q!2 y00 y00 r00)) (* (- 3) (* q!2 q!2 y00 y00 r00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 r00)) ?x935 (* (- 4) (* q!2 y00 y00 y00 q00)) (* (- 3) (* q!2 q!2 y00 y00 y00 q00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 y00 q00)) (* r!1 r!1 r!1 r!1 y00) (* 2 (* q!2 r!1 r!1 r!1 r!1 y00)) (* q!2 q!2 r!1 r!1 r!1 r!1 y00) (* (- 3) (* r!1 r!1 r!1 y00 y00)) (* (- 5) (* q!2 r!1 r!1 r!1 y00 y00)) (* (- 1) (* q!2 q!2 r!1 r!1 r!1 y00 y00)) (* 3 (* r!1 r!1 y00 y00 y00)) (* 3 (* q!2 r!1 r!1 y00 y00 y00)) (* (- 3) (* q!2 q!2 r!1 r!1 y00 y00 y00)) (* (- 1) (* r!1 y00 y00 y00 y00)) (* q!2 r!1 y00 y00 y00 y00) (* 5 (* q!2 q!2 r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 y00 y00 y00 y00 y00)) (* (- 2) (* q!2 q!2 y00 y00 y00 y00 y00)) (* 4 (* q!2 q!2 y00 y00 y00)) (* 3 (* q!2 q!2 r!1 y00 y00)) (* q!2 q!2 q!2 r!1 y00 y00) (* 3 (* q!2 q!2 q!2 y00 y00 y00)) (* r!1 y00 y00 y00 q00) (* q!2 r!1 y00 y00 y00 q00) ?x887 (* (- 1) (* q!2 y00 y00 y00 y00 q00)) (* (- 1) (* r!1 r!1 r!1 y00 y00 q00)) (* (- 2) (* q!2 r!1 r!1 r!1 y00 y00 q00)) (* (- 1) (* q!2 q!2 r!1 r!1 r!1 y00 y00 q00)) (* 3 (* r!1 r!1 y00 y00 y00 q00)) (* 6 (* q!2 r!1 r!1 y00 y00 y00 q00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00 q00)) (* (- 3) (* r!1 y00 y00 y00 y00 q00)) (* (- 6) (* q!2 r!1 y00 y00 y00 y00 q00)) (* (- 3) (* q!2 q!2 r!1 y00 y00 y00 y00 q00)) ?x1169 (* 2 (* q!2 y00 y00 y00 y00 y00 q00)) (* q!2 q!2 y00 y00 y00 y00 y00 q00) (* r!1 y00 y00 r00) (* q!2 r!1 y00 y00 r00) ?x1284 (* (- 1) (* q!2 y00 y00 y00 r00)) (* q!2 q!2 q!2 q!2 y00 y00 y00) (* (- 1) (* r!1 r!1 y00 y00)) (* (- 1) (* q!2 r!1 r!1 y00 y00)) (* r!1 y00 y00 y00) (* q!2 y00 y00 y00 y00) (* (- 1) (* q!2 q!2 r!1 y00 y00 y00)) (* q!2 q!2 y00 y00 y00 y00) (* q!2 q!2 q!2 r!1 r!1 r!1 y00 y00) (* (- 3) (* q!2 q!2 q!2 r!1 r!1 y00 y00 y00)) (* 3 (* q!2 q!2 q!2 r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 y00 y00 y00)) (* (- 1) (* r!1 r!1 r!1 y00 r00)) (* (- 2) (* q!2 r!1 r!1 r!1 y00 r00)) (* (- 1) (* q!2 q!2 r!1 r!1 r!1 y00 r00)) (* 3 (* r!1 r!1 y00 y00 r00)) (* 6 (* q!2 r!1 r!1 y00 y00 r00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 r00)) (* (- 3) (* r!1 y00 y00 y00 r00)) (* (- 6) (* q!2 r!1 y00 y00 y00 r00)) (* (- 3) (* q!2 q!2 r!1 y00 y00 y00 r00)) ?x2074 (* 2 (* q!2 y00 y00 y00 y00 r00)) (* q!2 q!2 y00 y00 y00 y00 r00))))
 (let (($x1508 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x82)) 0) (not (= ?x1877 0)))))
 (let (($x95 (exists ((q Int) (r Int) (y Int) )(! (let ((?x2074 (* y00 y00 y00 y00 r00)))
 (let ((?x1283 (* y00 y00 y00 r00)))
 (let ((?x1284 (* (- 1) ?x1283)))
 (let ((?x1169 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x884 (* y00 y00 y00 y00 q00)))
 (let ((?x887 (* (- 1) ?x884)))
 (let ((?x269 (* y00 y00 y00 q00)))
 (let ((?x935 (* (- 2) ?x269)))
 (let ((?x138 (* y00 y00 r00)))
 (let ((?x243 (* (- 2) ?x138)))
 (let ((?x2168 (+ (* 2 (* r y00 y00)) (* 4 (* q r y00 y00)) (* 2 (* q y00 y00 y00)) ?x243 (* (- 4) (* q y00 y00 r00)) (* (- 3) (* q q y00 y00 r00)) (* (- 1) (* q q q y00 y00 r00)) ?x935 (* (- 4) (* q y00 y00 y00 q00)) (* (- 3) (* q q y00 y00 y00 q00)) (* (- 1) (* q q q y00 y00 y00 q00)) (* r r r r y00) (* 2 (* q r r r r y00)) (* q q r r r r y00) (* (- 3) (* r r r y00 y00)) (* (- 5) (* q r r r y00 y00)) (* (- 1) (* q q r r r y00 y00)) (* 3 (* r r y00 y00 y00)) (* 3 (* q r r y00 y00 y00)) (* (- 3) (* q q r r y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00)) (* q r y00 y00 y00 y00) (* 5 (* q q r y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00 y00)) (* (- 2) (* q q y00 y00 y00 y00 y00)) (* 4 (* q q y00 y00 y00)) (* 3 (* q q r y00 y00)) (* q q q r y00 y00) (* 3 (* q q q y00 y00 y00)) (* r y00 y00 y00 q00) (* q r y00 y00 y00 q00) ?x887 (* (- 1) (* q y00 y00 y00 y00 q00)) (* (- 1) (* r r r y00 y00 q00)) (* (- 2) (* q r r r y00 y00 q00)) (* (- 1) (* q q r r r y00 y00 q00)) (* 3 (* r r y00 y00 y00 q00)) (* 6 (* q r r y00 y00 y00 q00)) (* 3 (* q q r r y00 y00 y00 q00)) (* (- 3) (* r y00 y00 y00 y00 q00)) (* (- 6) (* q r y00 y00 y00 y00 q00)) (* (- 3) (* q q r y00 y00 y00 y00 q00)) ?x1169 (* 2 (* q y00 y00 y00 y00 y00 q00)) (* q q y00 y00 y00 y00 y00 q00) (* r y00 y00 r00) (* q r y00 y00 r00) ?x1284 (* (- 1) (* q y00 y00 y00 r00)) (* q q q q y00 y00 y00) (* (- 1) (* r r y00 y00)) (* (- 1) (* q r r y00 y00)) (* r y00 y00 y00) (* q y00 y00 y00 y00) (* (- 1) (* q q r y00 y00 y00)) (* q q y00 y00 y00 y00) (* q q q r r r y00 y00) (* (- 3) (* q q q r r y00 y00 y00)) (* 3 (* q q q r y00 y00 y00 y00)) (* (- 1) (* q q q y00 y00 y00 y00 y00)) (* (- 1) (* r r r y00 r00)) (* (- 2) (* q r r r y00 r00)) (* (- 1) (* q q r r r y00 r00)) (* 3 (* r r y00 y00 r00)) (* 6 (* q r r y00 y00 r00)) (* 3 (* q q r r y00 y00 r00)) (* (- 3) (* r y00 y00 y00 r00)) (* (- 6) (* q r y00 y00 y00 r00)) (* (- 3) (* q q r y00 y00 y00 r00)) ?x2074 (* 2 (* q y00 y00 y00 y00 r00)) (* q q y00 y00 y00 y00 r00))))
 (let (($x112 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (and (= (+ y (* (- 1) y00)) 0) $x112 (not (= ?x2168 0))))))))))))))) :qid k!29))
 ))
 (let (($x1103 (exists ((q Int) (r Int) (y Int) )(! (let ((?x80 (* (- 1) y00)))
 (let ((?x1175 (+ r ?x80)))
 (let ((?x1166 (+ 1 q)))
 (let ((?x958 (+ (* y00 y00 ?x1166 ?x1175) (* (- 1) (* r00 y00 y00 ?x1166 ?x1166 ?x1166)) (* (- 1) (* r00 y00 y00 ?x1166)) (* (- 1) (* q00 y00 y00 y00 ?x1166 ?x1166 ?x1166)) (* y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175 ?x1175) (* y00 y00 y00 ?x1166 ?x1166) (* y00 y00 ?x1166 ?x1166 ?x1166 ?x1175) (* q00 y00 y00 y00 ?x1166 ?x1175) (* (- 1) (* q00 y00 y00 y00 ?x1166)) (* (- 1) (* q00 y00 y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175)) (* r00 y00 y00 ?x1166 ?x1175) (* y00 y00 y00 ?x1166 ?x1166 ?x1166 ?x1166) (* (- 1) (* y00 y00 ?x1166 ?x1175 ?x1175)) (* (- 1) (* y00 y00 y00 ?x1166 ?x1166 ?x1175)) (* y00 y00 ?x1166 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175) (* (- 1) (* r00 y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175)))))
 (let (($x111 (not (= ?x958 0))))
 (let (($x758 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x758 $x111))))))) :qid k!29))
 ))
 (let ((?x139 (lambda ((q Int) (r Int) (y Int) )(let ((?x2074 (* y00 y00 y00 y00 r00)))
 (let ((?x1283 (* y00 y00 y00 r00)))
 (let ((?x1284 (* (- 1) ?x1283)))
 (let ((?x1169 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x884 (* y00 y00 y00 y00 q00)))
 (let ((?x887 (* (- 1) ?x884)))
 (let ((?x269 (* y00 y00 y00 q00)))
 (let ((?x935 (* (- 2) ?x269)))
 (let ((?x138 (* y00 y00 r00)))
 (let ((?x243 (* (- 2) ?x138)))
 (let ((?x2168 (+ (* 2 (* r y00 y00)) (* 4 (* q r y00 y00)) (* 2 (* q y00 y00 y00)) ?x243 (* (- 4) (* q y00 y00 r00)) (* (- 3) (* q q y00 y00 r00)) (* (- 1) (* q q q y00 y00 r00)) ?x935 (* (- 4) (* q y00 y00 y00 q00)) (* (- 3) (* q q y00 y00 y00 q00)) (* (- 1) (* q q q y00 y00 y00 q00)) (* r r r r y00) (* 2 (* q r r r r y00)) (* q q r r r r y00) (* (- 3) (* r r r y00 y00)) (* (- 5) (* q r r r y00 y00)) (* (- 1) (* q q r r r y00 y00)) (* 3 (* r r y00 y00 y00)) (* 3 (* q r r y00 y00 y00)) (* (- 3) (* q q r r y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00)) (* q r y00 y00 y00 y00) (* 5 (* q q r y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00 y00)) (* (- 2) (* q q y00 y00 y00 y00 y00)) (* 4 (* q q y00 y00 y00)) (* 3 (* q q r y00 y00)) (* q q q r y00 y00) (* 3 (* q q q y00 y00 y00)) (* r y00 y00 y00 q00) (* q r y00 y00 y00 q00) ?x887 (* (- 1) (* q y00 y00 y00 y00 q00)) (* (- 1) (* r r r y00 y00 q00)) (* (- 2) (* q r r r y00 y00 q00)) (* (- 1) (* q q r r r y00 y00 q00)) (* 3 (* r r y00 y00 y00 q00)) (* 6 (* q r r y00 y00 y00 q00)) (* 3 (* q q r r y00 y00 y00 q00)) (* (- 3) (* r y00 y00 y00 y00 q00)) (* (- 6) (* q r y00 y00 y00 y00 q00)) (* (- 3) (* q q r y00 y00 y00 y00 q00)) ?x1169 (* 2 (* q y00 y00 y00 y00 y00 q00)) (* q q y00 y00 y00 y00 y00 q00) (* r y00 y00 r00) (* q r y00 y00 r00) ?x1284 (* (- 1) (* q y00 y00 y00 r00)) (* q q q q y00 y00 y00) (* (- 1) (* r r y00 y00)) (* (- 1) (* q r r y00 y00)) (* r y00 y00 y00) (* q y00 y00 y00 y00) (* (- 1) (* q q r y00 y00 y00)) (* q q y00 y00 y00 y00) (* q q q r r r y00 y00) (* (- 3) (* q q q r r y00 y00 y00)) (* 3 (* q q q r y00 y00 y00 y00)) (* (- 1) (* q q q y00 y00 y00 y00 y00)) (* (- 1) (* r r r y00 r00)) (* (- 2) (* q r r r y00 r00)) (* (- 1) (* q q r r r y00 r00)) (* 3 (* r r y00 y00 r00)) (* 6 (* q r r y00 y00 r00)) (* 3 (* q q r r y00 y00 r00)) (* (- 3) (* r y00 y00 y00 r00)) (* (- 6) (* q r y00 y00 y00 r00)) (* (- 3) (* q q r y00 y00 y00 r00)) ?x2074 (* 2 (* q y00 y00 y00 y00 r00)) (* q q y00 y00 y00 y00 r00))))
 (let (($x112 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x120 (and (= (+ y (* (- 1) y00)) 0) $x112 (not (= ?x2168 0)))))
 (let ((?x80 (* (- 1) y00)))
 (let ((?x1175 (+ r ?x80)))
 (let ((?x1166 (+ 1 q)))
 (let ((?x958 (+ (* y00 y00 ?x1166 ?x1175) (* (- 1) (* r00 y00 y00 ?x1166 ?x1166 ?x1166)) (* (- 1) (* r00 y00 y00 ?x1166)) (* (- 1) (* q00 y00 y00 y00 ?x1166 ?x1166 ?x1166)) (* y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175 ?x1175) (* y00 y00 y00 ?x1166 ?x1166) (* y00 y00 ?x1166 ?x1166 ?x1166 ?x1175) (* q00 y00 y00 y00 ?x1166 ?x1175) (* (- 1) (* q00 y00 y00 y00 ?x1166)) (* (- 1) (* q00 y00 y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175)) (* r00 y00 y00 ?x1166 ?x1175) (* y00 y00 y00 ?x1166 ?x1166 ?x1166 ?x1166) (* (- 1) (* y00 y00 ?x1166 ?x1175 ?x1175)) (* (- 1) (* y00 y00 y00 ?x1166 ?x1166 ?x1175)) (* y00 y00 ?x1166 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175) (* (- 1) (* r00 y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175)))))
 (let (($x111 (not (= ?x958 0))))
 (let (($x758 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x188 (and (= (+ y00 (* (- 1) y)) 0) $x758 $x111)))
 (rewrite (= $x188 $x120)))))))))))))))))))))))
 ))
 (let (($x118 (exists ((q Int) (r Int) (y Int) )(! (let ((?x80 (* (- 1) y00)))
 (let ((?x1175 (+ r ?x80)))
 (let ((?x1166 (+ 1 q)))
 (let ((?x958 (+ (* y00 y00 ?x1166 ?x1175) (* (- 1) (* r00 y00 y00 ?x1166 ?x1166 ?x1166)) (* (- 1) (* r00 y00 y00 ?x1166)) (* (- 1) (* q00 y00 y00 y00 ?x1166 ?x1166 ?x1166)) (* y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175 ?x1175) (* y00 y00 y00 ?x1166 ?x1166) (* y00 y00 ?x1166 ?x1166 ?x1166 ?x1175) (* q00 y00 y00 y00 ?x1166 ?x1175) (* (- 1) (* q00 y00 y00 y00 ?x1166)) (* (- 1) (* q00 y00 y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175)) (* r00 y00 y00 ?x1166 ?x1175) (* y00 y00 y00 ?x1166 ?x1166 ?x1166 ?x1166) (* (- 1) (* y00 y00 ?x1166 ?x1175 ?x1175)) (* (- 1) (* y00 y00 y00 ?x1166 ?x1166 ?x1175)) (* y00 y00 ?x1166 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175) (* (- 1) (* r00 y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175)))))
 (let (($x111 (not (= ?x958 0))))
 (let (($x758 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x80 y) 0) $x758 $x111))))))) :qid k!29))
 ))
 (let ((?x122 (lambda ((q Int) (r Int) (y Int) )(let ((?x80 (* (- 1) y00)))
 (let ((?x1175 (+ r ?x80)))
 (let ((?x1166 (+ 1 q)))
 (let ((?x958 (+ (* y00 y00 ?x1166 ?x1175) (* (- 1) (* r00 y00 y00 ?x1166 ?x1166 ?x1166)) (* (- 1) (* r00 y00 y00 ?x1166)) (* (- 1) (* q00 y00 y00 y00 ?x1166 ?x1166 ?x1166)) (* y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175 ?x1175) (* y00 y00 y00 ?x1166 ?x1166) (* y00 y00 ?x1166 ?x1166 ?x1166 ?x1175) (* q00 y00 y00 y00 ?x1166 ?x1175) (* (- 1) (* q00 y00 y00 y00 ?x1166)) (* (- 1) (* q00 y00 y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175)) (* r00 y00 y00 ?x1166 ?x1175) (* y00 y00 y00 ?x1166 ?x1166 ?x1166 ?x1166) (* (- 1) (* y00 y00 ?x1166 ?x1175 ?x1175)) (* (- 1) (* y00 y00 y00 ?x1166 ?x1166 ?x1175)) (* y00 y00 ?x1166 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175) (* (- 1) (* r00 y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175)))))
 (let (($x111 (not (= ?x958 0))))
 (let (($x758 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x188 (and (= (+ y00 (* (- 1) y)) 0) $x758 $x111)))
 (let (($x1744 (and (= (+ ?x80 y) 0) $x758 $x111)))
 (rewrite (= $x1744 $x188)))))))))))
 ))
 (let (($x75 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x49 (- (- (* ?x42 ?x43 y00 y00) (* ?x42 ?x42 ?x42 r00 y00 y00)) (* ?x42 r00 y00 y00))))
 (let ((?x55 (+ (- ?x49 (* ?x42 ?x42 ?x42 q00 y00 y00 y00)) (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 y00) (* ?x42 ?x42 y00 y00 y00) (* ?x42 ?x42 ?x42 ?x43 y00 y00) (* ?x42 q00 ?x43 y00 y00 y00))))
 (let ((?x59 (- (- ?x55 (* ?x42 q00 y00 y00 y00)) (* ?x42 ?x42 q00 ?x43 ?x43 ?x43 y00 y00))))
 (let ((?x62 (+ ?x59 (* ?x42 ?x43 r00 y00 y00) (* ?x42 ?x42 ?x42 ?x42 y00 y00 y00))))
 (let ((?x66 (- (- ?x62 (* ?x42 ?x43 ?x43 y00 y00)) (* ?x42 ?x42 ?x43 y00 y00 y00))))
 (let ((?x70 (- (+ ?x66 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00)) (* ?x42 ?x42 ?x43 ?x43 ?x43 r00 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x70 0)))))))))))) :qid k!29))
 ))
 (let ((?x189 (lambda ((q Int) (r Int) (y Int) )(let ((?x80 (* (- 1) y00)))
 (let ((?x1175 (+ r ?x80)))
 (let ((?x1166 (+ 1 q)))
 (let ((?x958 (+ (* y00 y00 ?x1166 ?x1175) (* (- 1) (* r00 y00 y00 ?x1166 ?x1166 ?x1166)) (* (- 1) (* r00 y00 y00 ?x1166)) (* (- 1) (* q00 y00 y00 y00 ?x1166 ?x1166 ?x1166)) (* y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175 ?x1175) (* y00 y00 y00 ?x1166 ?x1166) (* y00 y00 ?x1166 ?x1166 ?x1166 ?x1175) (* q00 y00 y00 y00 ?x1166 ?x1175) (* (- 1) (* q00 y00 y00 y00 ?x1166)) (* (- 1) (* q00 y00 y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175)) (* r00 y00 y00 ?x1166 ?x1175) (* y00 y00 y00 ?x1166 ?x1166 ?x1166 ?x1166) (* (- 1) (* y00 y00 ?x1166 ?x1175 ?x1175)) (* (- 1) (* y00 y00 y00 ?x1166 ?x1166 ?x1175)) (* y00 y00 ?x1166 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175) (* (- 1) (* r00 y00 ?x1166 ?x1166 ?x1175 ?x1175 ?x1175)))))
 (let (($x111 (not (= ?x958 0))))
 (let (($x758 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1744 (and (= (+ ?x80 y) 0) $x758 $x111)))
 (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x49 (- (- (* ?x42 ?x43 y00 y00) (* ?x42 ?x42 ?x42 r00 y00 y00)) (* ?x42 r00 y00 y00))))
 (let ((?x55 (+ (- ?x49 (* ?x42 ?x42 ?x42 q00 y00 y00 y00)) (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 y00) (* ?x42 ?x42 y00 y00 y00) (* ?x42 ?x42 ?x42 ?x43 y00 y00) (* ?x42 q00 ?x43 y00 y00 y00))))
 (let ((?x59 (- (- ?x55 (* ?x42 q00 y00 y00 y00)) (* ?x42 ?x42 q00 ?x43 ?x43 ?x43 y00 y00))))
 (let ((?x62 (+ ?x59 (* ?x42 ?x43 r00 y00 y00) (* ?x42 ?x42 ?x42 ?x42 y00 y00 y00))))
 (let ((?x66 (- (- ?x62 (* ?x42 ?x43 ?x43 y00 y00)) (* ?x42 ?x42 ?x43 y00 y00 y00))))
 (let ((?x70 (- (+ ?x66 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00)) (* ?x42 ?x42 ?x43 ?x43 ?x43 r00 y00))))
 (let (($x74 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x70 0))))))
 (rewrite (= $x74 $x1744)))))))))))))))))))
 ))
 (let ((@x76 (asserted $x75)))
 (let ((@x770 (mp (mp @x76 (quant-intro (proof-bind ?x189) (= $x75 $x118)) $x118) (rewrite (= $x118 $x118)) $x118)))
 (let ((@x1452 (mp (mp @x770 (quant-intro (proof-bind ?x122) (= $x118 $x1103)) $x1103) (quant-intro (proof-bind ?x139) (= $x1103 $x95)) $x95)))
 (let ((@x949 (mp (mp~ @x1452 (sk (~ $x95 $x1508)) $x1508) (rewrite (= $x1508 $x1567)) $x1567)))
 (let ((@x895 (and-elim @x949 $x1456)))
 (let ((@x995 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1456) $x196)) @x895 $x196)))
 (let (($x202 (>= ?x1093 0)))
 (let ((@x1339 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1456) $x202)) @x895 $x202)))
 (let (($x902 (<= ?x506 0)))
 (let ((@x992 (and-elim @x949 $x508)))
 (let ((@x1087 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x508) $x902)) @x992 $x902)))
 (let (($x990 (>= ?x506 0)))
 (let ((@x626 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x508) $x990)) @x992 $x990)))
 (let (($x1385 (not (<= ?x2001 0))))
 (let (($x2115 (>= ?x2001 0)))
 (let ((@x1321 (lemma ((_ th-lemma arith) (hypothesis (not $x2115)) @x626 @x1087 @x1339 @x995 false) $x2115)))
 (let ((@x1545 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1638 $x1385 (not $x2115))) (and-elim @x949 $x948) (or $x1385 (not $x2115)))))
 ((_ th-lemma arith) (unit-resolution @x1545 @x1321 $x1385) @x626 @x1087 @x1339 @x995 false)))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        8
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             628
 :arith-nonlinear-bounds    4
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              3
 :arith-tableau-max-columns 95
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                3.90
 :memory                    3.32
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1381862
 :num-checks                1
 :propagations              6
 :rlimit-count              9297
 :time                      0.01
 :total-time                0.02)
