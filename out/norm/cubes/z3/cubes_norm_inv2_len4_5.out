unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x441 (* (- 1) k!2)))
 (let ((?x1653 (+ (* 3 n!0) ?x441 (* 3 (* n!0 n!0)))))
 (let (($x979 (<= ?x1653 (- 1))))
 (let (($x1287 (= ?x1653 (- 1))))
 (let ((?x1123 (+ k!2 c!3)))
 (let ((?x1098 (+ m!1 k!2)))
 (let ((?x607 (+ 6 m!1)))
 (let ((?x649 (+ 1 n!0)))
 (let ((?x705 (* 24 c!3)))
 (let ((?x939 (* 24 k!2)))
 (let ((?x1409 (+ (* 9 (* ?x649 ?x607 ?x607 ?x1098 ?x1098 ?x1098 ?x1123 ?x1123)) (* 72 (* n!0 n!0 k!2)) (* 5 (* ?x607 ?x607 ?x1098 ?x1098 ?x1098 ?x1098 ?x1123)) (* 12 (* n!0 m!1 c!3)) (* 4 (* m!1 c!3)) (* 72 (* n!0 k!2)) (* (- 9) (* ?x649 ?x607 ?x607 ?x1098 ?x1098 ?x1098 ?x1123)) (* 72 (* n!0 c!3)) ?x939 (* 12 (* n!0 m!1 k!2)) (* (- 4) (* ?x649 ?x649 ?x607 ?x607 ?x607 ?x1098 ?x1123)) (* (- 9) (* ?x649 ?x649 ?x649 ?x607 ?x607 ?x607 ?x1098 ?x1123)) (* 5 (* ?x649 ?x649 ?x607 ?x607 ?x607 ?x1098 ?x1098 ?x1123)) (* 24 (* n!0 n!0 n!0 c!3)) (* 12 (* n!0 n!0 m!1 k!2)) (* (- 5) (* ?x649 ?x649 ?x607 ?x607 ?x1098 ?x1098 ?x1123 ?x1123 ?x1123)) (* (- 1) (* ?x649 ?x649 ?x607 ?x607 ?x607 ?x1098 ?x1098 ?x1098 ?x1123)) (* 18 (* ?x649 ?x649 ?x607 ?x607 ?x607 ?x1098 ?x1123 ?x1123)) (* 18 (* ?x607 ?x607 ?x1098 ?x1098 ?x1098 ?x1123 ?x1123)) (* ?x649 ?x649 ?x607 ?x607 ?x1098 ?x1098 ?x1098 ?x1123 ?x1123 ?x1123) (* 4 (* n!0 n!0 n!0 m!1 c!3)) (* 24 (* n!0 n!0 n!0 k!2)) (* 12 (* n!0 n!0 m!1 c!3)) (* (- 18) (* ?x649 ?x649 ?x649 ?x607 ?x1123 ?x1123)) (* (- 1) (* ?x607 ?x607 ?x1098 ?x1098 ?x1098 ?x1098 ?x1098 ?x1123)) ?x705 (* (- 9) (* ?x649 ?x649 ?x649 ?x649 ?x607 ?x1123 ?x1123)) (* (- 5) (* ?x649 ?x649 ?x649 ?x607 ?x1098 ?x1123)) (* ?x649 ?x649 ?x649 ?x607 ?x1098 ?x1098 ?x1123) (* (- 18) (* ?x649 ?x649 ?x607 ?x607 ?x1098 ?x1123 ?x1123 ?x1123 ?x1123)) (* 9 (* ?x649 ?x649 ?x649 ?x607 ?x607 ?x1098 ?x1123 ?x1123 ?x1123)) (* 9 (* ?x649 ?x649 ?x649 ?x607 ?x607 ?x607 ?x1098 ?x1123 ?x1123)) (* 9 (* ?x649 ?x649 ?x649 ?x649 ?x607 ?x1123)) (* (- 9) (* ?x649 ?x649 ?x649 ?x607 ?x607 ?x1098 ?x1123 ?x1123 ?x1123 ?x1123)) (* 4 (* n!0 n!0 n!0 m!1 k!2)) (* (- 4) (* ?x607 ?x607 ?x1098 ?x1098 ?x1098 ?x1123)) (* 72 (* n!0 n!0 c!3)) (* 4 (* m!1 k!2)) (* 4 (* ?x649 ?x649 ?x607 ?x607 ?x1098 ?x1123 ?x1123 ?x1123)))))
 (let (($x1129 (= ?x1409 0)))
 (let (($x1636 (not $x1129)))
 (let ((?x415 (* n!0 k!2)))
 (let ((?x643 (+ ?x415 (* 2 n!0) ?x441 (* (- 3) c!3))))
 (let (($x429 (= ?x643 (- 1))))
 (let ((?x397 (* 18 c!3)))
 (let ((?x1416 (* (- 1) (* k!2 k!2))))
 (let ((?x1307 (* 5 k!2)))
 (let ((?x1308 (* (- 9) n!0)))
 (let ((?x762 (+ (* 9 (* n!0 c!3)) ?x1308 ?x1307 ?x1416 ?x397)))
 (let (($x497 (= ?x762 4)))
 (let ((?x381 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x421 (= ?x381 (- 6))))
 (let (($x1320 (and $x421 $x497 $x429 $x1287 $x1636)))
 (let ((?x950 (+ c!3 k!2)))
 (let ((?x879 (+ k!2 m!1)))
 (let ((?x1215 (+ ?x705 ?x939 (* 72 (* k!2 n!0)) (* 72 (* c!3 n!0)) (* 18 (* ?x607 ?x607 ?x879 ?x879 ?x879 ?x950 ?x950)) (* ?x649 ?x649 ?x649 ?x607 ?x879 ?x879 ?x950) (* (- 5) (* ?x649 ?x649 ?x607 ?x607 ?x879 ?x879 ?x950 ?x950 ?x950)) (* (- 4) (* ?x649 ?x649 ?x607 ?x607 ?x607 ?x879 ?x950)) (* (- 9) (* ?x649 ?x649 ?x649 ?x649 ?x607 ?x950 ?x950)) (* 5 (* ?x607 ?x607 ?x879 ?x879 ?x879 ?x879 ?x950)) (* (- 1) (* ?x607 ?x607 ?x879 ?x879 ?x879 ?x879 ?x879 ?x950)) (* (- 1) (* ?x649 ?x649 ?x607 ?x607 ?x607 ?x879 ?x879 ?x879 ?x950)) (* 5 (* ?x649 ?x649 ?x607 ?x607 ?x607 ?x879 ?x879 ?x950)) (* (- 9) (* ?x649 ?x607 ?x607 ?x879 ?x879 ?x879 ?x950)) (* 18 (* ?x649 ?x649 ?x607 ?x607 ?x607 ?x879 ?x950 ?x950)) (* 9 (* ?x649 ?x649 ?x649 ?x607 ?x607 ?x879 ?x950 ?x950 ?x950)) (* 9 (* ?x649 ?x649 ?x649 ?x607 ?x607 ?x607 ?x879 ?x950 ?x950)) (* 4 (* ?x649 ?x649 ?x607 ?x607 ?x879 ?x950 ?x950 ?x950)) (* 4 (* k!2 m!1)) (* 4 (* c!3 m!1)) (* 12 (* c!3 m!1 n!0)) (* 12 (* k!2 m!1 n!0)) (* (- 18) (* ?x649 ?x649 ?x649 ?x607 ?x950 ?x950)) (* 72 (* c!3 n!0 n!0)) (* 72 (* k!2 n!0 n!0)) (* 9 (* ?x649 ?x607 ?x607 ?x879 ?x879 ?x879 ?x950 ?x950)) (* 12 (* c!3 m!1 n!0 n!0)) (* 12 (* k!2 m!1 n!0 n!0)) (* (- 9) (* ?x649 ?x649 ?x649 ?x607 ?x607 ?x879 ?x950 ?x950 ?x950 ?x950)) (* 24 (* c!3 n!0 n!0 n!0)) (* 24 (* k!2 n!0 n!0 n!0)) (* 4 (* c!3 m!1 n!0 n!0 n!0)) (* 4 (* k!2 m!1 n!0 n!0 n!0)) (* ?x649 ?x649 ?x607 ?x607 ?x879 ?x879 ?x879 ?x950 ?x950 ?x950) (* (- 18) (* ?x649 ?x649 ?x607 ?x607 ?x879 ?x950 ?x950 ?x950 ?x950)) (* (- 5) (* ?x649 ?x649 ?x649 ?x607 ?x879 ?x950)) (* (- 9) (* ?x649 ?x649 ?x649 ?x607 ?x607 ?x607 ?x879 ?x950)) (* 9 (* ?x649 ?x649 ?x649 ?x649 ?x607 ?x950)) (* (- 4) (* ?x607 ?x607 ?x879 ?x879 ?x879 ?x950)))))
 (let (($x1604 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x1285 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x397 ?x1307 ?x1308 ?x1416 (* 9 (* c!3 n!0))) 4) $x1604 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x1215 0)))))
 (let (($x349 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x1691 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x521 (+ 1 n)))
 (let ((?x1663 (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68)))
 (let ((?x1382 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x509 (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x69 ?x68)))
 (let ((?x724 (+ (* 24 c) (* 24 k) (* 72 (* k n)) (* 72 (* c n)) (* 18 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x509 (* (- 5) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) (* 5 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* 5 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x68)) (* (- 9) (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* 18 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* 4 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* 4 (* k m)) (* 4 (* c m)) (* 12 (* c m n)) (* 12 (* k m n)) (* (- 18) (* ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) (* 72 (* c n n)) (* 72 (* k n n)) (* 9 (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 12 (* c m n n)) (* 12 (* k m n n)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 24 (* c n n n)) (* 24 (* k n n n)) (* 4 (* c m n n n)) (* 4 (* k m n n n)) ?x1382 (* (- 18) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* 9 ?x1663) (* (- 4) ?x1691))))
 (let (($x326 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x288 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x239 (* (- 1) ?x49)))
 (let ((?x238 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x236 (= (+ ?x40 ?x44 ?x238 ?x239 (* 9 (* c n))) 4)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (and $x152 $x236 $x288 $x326 (not (= ?x724 0))))))))))))))))))))) :qid k!34))
 ))
 (let (($x353 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x334 (+ 6 m)))
 (let ((?x521 (+ 1 n)))
 (let ((?x69 (+ k m)))
 (let ((?x645 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1131 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1121 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1545 (+ (* 4 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* (- 18) (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x68)) ?x1121 (* 18 (* ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) ?x1131 (* (- 9) (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x68)) (* 9 (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 18) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* 5 (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x68)) (* (- 1) (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x69 ?x68)) (* 5 ?x645) (* 4 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* (- 4) (* ?x521 ?x521 ?x521 ?x334 ?x68)))))
 (let (($x1671 (not (= ?x1545 0))))
 (let (($x1467 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x217 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x239 (* (- 1) ?x49)))
 (let ((?x238 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (and $x152 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x238 ?x239) 4) $x217 $x1467 $x1671)))))))))))))))))) :qid k!34))
 ))
 (let ((?x357 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x1691 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x521 (+ 1 n)))
 (let ((?x1663 (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68)))
 (let ((?x1382 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x509 (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x69 ?x68)))
 (let ((?x724 (+ (* 24 c) (* 24 k) (* 72 (* k n)) (* 72 (* c n)) (* 18 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x509 (* (- 5) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) (* 5 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* 5 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x68)) (* (- 9) (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* 18 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* 4 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* 4 (* k m)) (* 4 (* c m)) (* 12 (* c m n)) (* 12 (* k m n)) (* (- 18) (* ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) (* 72 (* c n n)) (* 72 (* k n n)) (* 9 (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 12 (* c m n n)) (* 12 (* k m n n)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 24 (* c n n n)) (* 24 (* k n n n)) (* 4 (* c m n n n)) (* 4 (* k m n n n)) ?x1382 (* (- 18) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* 9 ?x1663) (* (- 4) ?x1691))))
 (let (($x326 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x288 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x239 (* (- 1) ?x49)))
 (let ((?x238 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x236 (= (+ ?x40 ?x44 ?x238 ?x239 (* 9 (* c n))) 4)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (let (($x505 (and $x152 $x236 $x288 $x326 (not (= ?x724 0)))))
 (let ((?x1131 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1121 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1545 (+ (* 4 ?x1691) (* (- 18) (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x68)) ?x1121 (* 18 (* ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) ?x1131 (* (- 9) (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x68)) (* 9 (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* (- 1) ?x1382) (* (- 18) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* 5 (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x68)) (* (- 1) ?x509) (* 5 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 4 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* (- 9) ?x1663) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* (- 4) (* ?x521 ?x521 ?x521 ?x334 ?x68)))))
 (let (($x1671 (not (= ?x1545 0))))
 (let (($x1467 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x217 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1148 (and $x152 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x238 ?x239) 4) $x217 $x1467 $x1671)))
 (rewrite (= $x1148 $x505)))))))))))))))))))))))))))))
 ))
 (let (($x1542 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x334 (+ 6 m)))
 (let ((?x521 (+ 1 n)))
 (let ((?x69 (+ k m)))
 (let ((?x645 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1131 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1121 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1545 (+ (* 4 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* (- 18) (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x68)) ?x1121 (* 18 (* ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) ?x1131 (* (- 9) (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x68)) (* 9 (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 18) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* 5 (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x68)) (* (- 1) (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x69 ?x68)) (* 5 ?x645) (* 4 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* (- 4) (* ?x521 ?x521 ?x521 ?x334 ?x68)))))
 (let (($x1671 (not (= ?x1545 0))))
 (let (($x1467 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x813 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x547 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (and $x152 (= ?x547 (- 4)) $x813 $x1467 $x1671)))))))))))))))) :qid k!34))
 ))
 (let ((?x355 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x334 (+ 6 m)))
 (let ((?x521 (+ 1 n)))
 (let ((?x69 (+ k m)))
 (let ((?x645 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1131 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1121 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1545 (+ (* 4 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* (- 18) (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x68)) ?x1121 (* 18 (* ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) ?x1131 (* (- 9) (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x68)) (* 9 (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 18) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* 5 (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x68)) (* (- 1) (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x69 ?x68)) (* 5 ?x645) (* 4 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* (- 4) (* ?x521 ?x521 ?x521 ?x334 ?x68)))))
 (let (($x1671 (not (= ?x1545 0))))
 (let (($x1467 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x217 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x239 (* (- 1) ?x49)))
 (let ((?x238 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (let (($x1148 (and $x152 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x238 ?x239) 4) $x217 $x1467 $x1671)))
 (let (($x813 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x547 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x206 (and $x152 (= ?x547 (- 4)) $x813 $x1467 $x1671)))
 (rewrite (= $x206 $x1148)))))))))))))))))))))))))
 ))
 (let (($x119 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x77 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x74 (- (* 4 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70) (* 18 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70))))
 (let ((?x81 (+ (- ?x74 (* 5 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70)) (* ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70) (* 18 ?x68 ?x68 ?x70 ?x77 ?x77 ?x77) (* 9 ?x68 ?x68 ?x70 ?x77 ?x77 ?x77 ?x77) (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x77 ?x77))))
 (let ((?x85 (+ (- ?x81 (* 9 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x77)) (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x77 ?x77 ?x77))))
 (let ((?x89 (+ (- ?x85 (* 5 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x77 ?x77)) (* 9 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x77))))
 (let ((?x95 (- (- ?x89 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x77 ?x77)) (* 18 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x77 ?x77))))
 (let ((?x97 (- (- ?x95 (* 9 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x77 ?x77 ?x77)) (* 4 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x77 ?x77))))
 (let ((?x101 (- (+ ?x97 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x77 ?x77)) (* 9 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x77 ?x77 ?x77))))
 (let ((?x105 (- (+ ?x101 (* 5 ?x68 ?x69 ?x70 ?x77 ?x77 ?x77)) (* ?x68 ?x69 ?x69 ?x70 ?x77 ?x77 ?x77))))
 (let ((?x108 (+ ?x105 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x77 ?x77) (* 4 ?x68 ?x69 ?x70 ?x70 ?x70 ?x77 ?x77))))
 (let ((?x112 (+ (- ?x108 (* 9 ?x68 ?x70 ?x77 ?x77 ?x77 ?x77)) (* 9 ?x68 ?x69 ?x70 ?x70 ?x70 ?x77 ?x77 ?x77))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x112 (* 4 ?x68 ?x70 ?x77 ?x77 ?x77)) 0))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x212 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x334 (+ 6 m)))
 (let ((?x521 (+ 1 n)))
 (let ((?x69 (+ k m)))
 (let ((?x645 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1131 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1121 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1545 (+ (* 4 (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* (- 18) (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x334 ?x334 ?x69 ?x69 ?x69 ?x69 ?x68)) ?x1121 (* 18 (* ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68 ?x68)) ?x1131 (* (- 9) (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x69 ?x68)) (* 9 (* ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 18) (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x521 ?x521 ?x334 ?x334 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68 ?x68)) (* 5 (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x68)) (* (- 1) (* ?x521 ?x521 ?x521 ?x334 ?x69 ?x69 ?x68)) (* 5 ?x645) (* 4 (* ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* (- 9) (* ?x521 ?x521 ?x521 ?x521 ?x334 ?x68)) (* 9 (* ?x521 ?x521 ?x521 ?x334 ?x334 ?x334 ?x69 ?x68)) (* (- 4) (* ?x521 ?x521 ?x521 ?x334 ?x68)))))
 (let (($x1671 (not (= ?x1545 0))))
 (let (($x1467 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x813 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x547 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (let (($x206 (and $x152 (= ?x547 (- 4)) $x813 $x1467 $x1671)))
 (let ((?x77 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x74 (- (* 4 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70) (* 18 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70))))
 (let ((?x81 (+ (- ?x74 (* 5 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70)) (* ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70) (* 18 ?x68 ?x68 ?x70 ?x77 ?x77 ?x77) (* 9 ?x68 ?x68 ?x70 ?x77 ?x77 ?x77 ?x77) (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x77 ?x77))))
 (let ((?x85 (+ (- ?x81 (* 9 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x77)) (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x77 ?x77 ?x77))))
 (let ((?x89 (+ (- ?x85 (* 5 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x77 ?x77)) (* 9 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x77))))
 (let ((?x95 (- (- ?x89 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x77 ?x77)) (* 18 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x77 ?x77))))
 (let ((?x97 (- (- ?x95 (* 9 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x77 ?x77 ?x77)) (* 4 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x77 ?x77))))
 (let ((?x101 (- (+ ?x97 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x77 ?x77)) (* 9 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x77 ?x77 ?x77))))
 (let ((?x105 (- (+ ?x101 (* 5 ?x68 ?x69 ?x70 ?x77 ?x77 ?x77)) (* ?x68 ?x69 ?x69 ?x70 ?x77 ?x77 ?x77))))
 (let ((?x108 (+ ?x105 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x77 ?x77) (* 4 ?x68 ?x69 ?x70 ?x70 ?x70 ?x77 ?x77))))
 (let ((?x112 (+ (- ?x108 (* 9 ?x68 ?x70 ?x77 ?x77 ?x77 ?x77)) (* 9 ?x68 ?x69 ?x70 ?x70 ?x70 ?x77 ?x77 ?x77))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x118 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x112 (* 4 ?x68 ?x70 ?x77 ?x77 ?x77)) 0))))))
 (rewrite (= $x118 $x206)))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x120 (asserted $x119)))
 (let ((@x1345 (mp (mp @x120 (quant-intro (proof-bind ?x212) (= $x119 $x1542)) $x1542) (rewrite (= $x1542 $x1542)) $x1542)))
 (let ((@x805 (mp (mp @x1345 (quant-intro (proof-bind ?x355) (= $x1542 $x353)) $x353) (quant-intro (proof-bind ?x357) (= $x353 $x349)) $x349)))
 (let ((@x1639 (mp (mp~ @x805 (sk (~ $x349 $x1285)) $x1285) (rewrite (= $x1285 $x1320)) $x1320)))
 (let ((@x447 (and-elim @x1639 $x1287)))
 (let ((@x1200 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1287) $x979)) @x447 $x979)))
 (let (($x455 (>= ?x1653 (- 1))))
 (let ((@x1330 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1287) $x455)) @x447 $x455)))
 (let (($x1387 (<= ?x762 4)))
 (let ((@x459 (and-elim @x1639 $x497)))
 (let ((@x1082 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x497) $x1387)) @x459 $x1387)))
 (let (($x1403 (>= ?x762 4)))
 (let ((@x1202 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x497) $x1403)) @x459 $x1403)))
 (let (($x141 (<= ?x643 (- 1))))
 (let ((@x1644 (and-elim @x1639 $x429)))
 (let ((@x437 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x429) $x141)) @x1644 $x141)))
 (let (($x1271 (>= ?x643 (- 1))))
 (let ((@x1141 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x429) $x1271)) @x1644 $x1271)))
 (let (($x1277 (<= ?x381 (- 6))))
 (let ((@x753 (and-elim @x1639 $x421)))
 (let ((@x222 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x421) $x1277)) @x753 $x1277)))
 (let (($x599 (>= ?x381 (- 6))))
 (let ((@x1595 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x421) $x599)) @x753 $x599)))
 (let (($x1327 (not (<= ?x1409 0))))
 (let (($x1050 (>= ?x1409 0)))
 (let ((@x1581 ((_ th-lemma arith) (hypothesis (not $x1050)) @x1330 @x1200 @x1595 @x222 @x1330 @x1200 @x1595 @x222 @x1330 @x1200 @x1141 @x437 @x1330 @x1200 @x1330 @x1200 @x1202 @x1082 @x1595 @x222 @x1141 @x437 @x1202 @x1082 @x1330 @x1200 false)))
 (let ((@x1162 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1129 $x1327 (not $x1050))) (and-elim @x1639 $x1636) (or $x1327 (not $x1050)))))
 ((_ th-lemma arith) (unit-resolution @x1162 (lemma @x1581 $x1050) $x1327) @x1330 @x1200 @x1595 @x222 @x1330 @x1200 @x1595 @x222 @x1330 @x1200 @x1141 @x437 @x1330 @x1200 @x1330 @x1200 @x1202 @x1082 @x1595 @x222 @x1141 @x437 @x1202 @x1082 @x1330 @x1200 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        11
 :arith-assert-upper        87
 :arith-branch-var          2
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           7
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             390
 :arith-nonlinear-bounds    3
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              8
 :arith-row-summations      10
 :arith-tableau-max-columns 70
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 75
 :del-clause                16
 :final-checks              9
 :max-memory                3.98
 :memory                    3.37
 :mk-bool-var               95
 :mk-clause                 16
 :num-allocs                2830748
 :num-checks                1
 :propagations              11
 :rlimit-count              28671
 :time                      0.03
 :total-time                0.04)
