unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x2659 (* (- 1) s!1)))
 (let ((?x298 (* r00 r00)))
 (let ((?x1956 (* (- 3) ?x298)))
 (let ((?x4328 (+ s00 ?x1956 ?x2659 (* 3 (* r!2 r!2)))))
 (let (($x4513 (<= ?x4328 0)))
 (let (($x4389 (= ?x4328 0)))
 (let ((?x4835 (* r!2 s!1)))
 (let ((?x2625 (* (- 198) ?x4835)))
 (let ((?x2667 (+ 3 (* 6 r!2) s!1)))
 (let ((?x2658 (+ 1 r!2)))
 (let ((?x4053 (* 6 (* x00 ?x2658 ?x2667 ?x2667 ?x2667))))
 (let ((?x1644 (* (- 69) (* r!2 r!2 s!1 s!1))))
 (let ((?x4145 (* 3 (* ?x2658 ?x2667 ?x2667 ?x2667 ?x2667))))
 (let ((?x4082 (* 216 (* r!2 r!2 r!2 x!0))))
 (let ((?x4073 (* (- 6) (* r!2 s!1 s!1 s!1))))
 (let ((?x4043 (* (- 3) (* s00 ?x2658 ?x2667 ?x2667 ?x2667))))
 (let ((?x4020 (* 3 (* r00 ?x2658 ?x2667 ?x2667 ?x2667))))
 (let ((?x4722 (* 432 (* r!2 r!2 x!0))))
 (let ((?x4057 (* (- 2) (* ?x2658 ?x2658 ?x2667 ?x2667 ?x2667 ?x2667))))
 (let ((?x3675 (* s!1 s!1)))
 (let ((?x2626 (* (- 33) ?x3675)))
 (let ((?x2741 (* r!2 r!2)))
 (let ((?x2578 (* 351 ?x2741)))
 (let ((?x1974 (* (- 1) (* ?x2658 ?x2658 ?x2667 ?x2667 ?x2667))))
 (let ((?x2239 (* r!2 s!1 s!1)))
 (let ((?x2648 (* (- 102) ?x2239)))
 (let ((?x1990 (* s!1 s!1 s!1)))
 (let ((?x2645 (* (- 6) ?x1990)))
 (let ((?x4738 (* (- 180) (* r!2 r!2 r!2 s!1))))
 (let ((?x1970 (* 108 (* r!2 r!2 r!2 r!2))))
 (let ((?x1968 (* 324 (* r!2 r!2 r!2))))
 (let ((?x1969 (* (- 342) (* r!2 r!2 s!1))))
 (let ((?x1306 (* r!2 x!0)))
 (let ((?x2011 (* 270 ?x1306)))
 (let ((?x2575 (* (- 36) s!1)))
 (let ((?x4155 (* 12 (* r00 r00 ?x2658 ?x2658 ?x2667 ?x2667 ?x2667))))
 (let ((?x2624 (* 54 x!0)))
 (let ((?x2623 (* 162 r!2)))
 (let ((?x677 (* (- 3) (* ?x2658 ?x2667 ?x2667 ?x2667))))
 (let ((?x3114 (* (- 4) (* s00 ?x2658 ?x2658 ?x2667 ?x2667 ?x2667))))
 (let ((?x466 (* r00 r00 r00)))
 (let ((?x554 (* (- 216) ?x466)))
 (let ((?x423 (* s00 r00)))
 (let ((?x553 (* 108 ?x423)))
 (let ((?x523 (* (- 108) ?x298)))
 (let ((?x643 (* (- 54) x00)))
 (let ((?x642 (* (- 27) r00)))
 (let ((?x633 (* 63 s00)))
 (let ((?x3308 (+ ?x633 ?x642 ?x643 ?x523 ?x553 ?x554 ?x3114 (* (- 252) (* r00 r00 r00 s!1)) ?x677 (* 864 (* s00 r00 r!2)) (* (- 72) (* r00 r00 s!1)) (* 7 (* s00 s!1 s!1)) ?x2623 ?x2624 (* (- 12) (* r00 r00 r!2 r!2 s!1 s!1)) ?x4155 ?x2575 (* (- 270) (* x00 r!2)) ?x2011 ?x1969 (* 48 (* s00 r!2 r!2 r!2 s!1)) (* 36 (* x!0 s!1)) (* (- 3) (* r00 r!2 s!1 s!1)) (* 48 (* s00 r00 s!1 s!1)) (* (- 135) (* r00 r!2)) (* 144 (* s00 r!2 r!2 r!2 r!2)) (* 150 (* s00 r!2 s!1)) (* 126 (* s00 r00 s!1)) (* (- 36) (* x00 s!1)) ?x1968 ?x1970 ?x4738 ?x2645 (* 42 (* s00 s!1)) (* 6 (* x!0 s!1 s!1)) ?x2648 (* 72 (* r!2 r!2 x!0 s!1)) (* (- 216) (* r00 r00 r00 r!2 r!2 s!1 s!1)) (* (- 54) (* r00 r!2 s!1)) ?x1974 ?x2578 (* (- 12) (* r00 r00 r00 r!2 s!1 s!1 s!1)) (* (- 1296) (* r00 r00 r00 r!2 r!2 r!2 s!1)) (* 6 (* s00 r00 r!2 s!1 s!1 s!1)) (* 2484 (* s00 r00 r!2 r!2)) (* 108 (* s00 r00 r!2 r!2 s!1 s!1)) (* 156 (* s00 r00 r!2 s!1 s!1)) (* 6 (* s00 r00 s!1 s!1 s!1)) (* 4 (* s00 r!2 r!2 s!1 s!1)) (* (- 108) (* x00 r!2 s!1)) (* (- 432) (* x00 r!2 r!2)) ?x2626 (* (- 12) (* r00 r00 s!1 s!1)) (* (- 12) (* r00 r00 r00 s!1 s!1 s!1)) (* (- 72) (* x00 r!2 r!2 s!1)) (* (- 216) (* x00 r!2 r!2 r!2)) (* (- 2592) (* r00 r00 r00 r!2 r!2 r!2 r!2)) (* (- 4) (* s00 ?x2658 ?x2658 (+ x!0 ?x2659) ?x2667 ?x2667 ?x2667)) (* 684 (* s00 r!2 r!2)) ?x4057 ?x4722 ?x4020 ?x4043 ?x4073 ?x4082 ?x4145 (* 11 (* s00 r!2 s!1 s!1)) (* (- 432) (* r00 r00 r!2 r!2 r!2 r!2)) (* (- 360) (* r00 r00 r!2 r!2 s!1)) (* (- 144) (* r00 r00 r!2 r!2 r!2 s!1)) (* 6 (* r!2 x!0 s!1 s!1)) (* (- 24) (* r00 r00 r!2 s!1 s!1)) (* 648 (* s00 r00 r!2 r!2 r!2 s!1)) (* 3024 (* s00 r00 r!2 r!2 r!2)) (* 1296 (* s00 r00 r!2 r!2 r!2 r!2)) (* 108 (* r!2 x!0 s!1)) (* (- 648) (* r00 r00 r!2)) (* (- 288) (* r00 r00 r!2 s!1)) (* (- 1404) (* r00 r00 r00 r!2 s!1)) (* (- 96) (* r00 r00 r00 s!1 s!1)) (* 6 (* x00 ?x2658 (+ x!0 ?x2659) ?x2667 ?x2667 ?x2667)) (* 540 (* s00 r!2 r!2 r!2)) ?x1644 (* (- 1404) (* r00 r00 r!2 r!2)) (* (- 1296) (* r00 r00 r!2 r!2 r!2)) (* (- 3) (* s00 ?x2658 (+ x!0 ?x2659) ?x2667 ?x2667 ?x2667)) (* (- 2) (* ?x2658 ?x2658 (+ x!0 ?x2659) ?x2667 ?x2667 ?x2667 ?x2667)) (* (- 4968) (* r00 r00 r00 r!2 r!2)) (* (- 1728) (* r00 r00 r00 r!2)) (* (- 6048) (* r00 r00 r00 r!2 r!2 r!2)) (* (- 2448) (* r00 r00 r00 r!2 r!2 s!1)) (* (- 312) (* r00 r00 r00 r!2 s!1 s!1)) (* (- 6) (* x00 s!1 s!1)) (* 12 (* r00 r00 ?x2658 ?x2658 (+ x!0 ?x2659) ?x2667 ?x2667 ?x2667)) (* (- 6) (* ?x2658 (+ x!0 ?x2659) ?x2667 ?x2667 ?x2667)) (* (- 36) (* r00 r!2 r!2 s!1)) (* 3 (* r00 ?x2658 (+ x!0 ?x2659) ?x2667 ?x2667 ?x2667)) (* (- 108) (* r00 r!2 r!2 r!2)) (* (- 3) (* ?x2658 ?x2658 (+ x!0 ?x2659) ?x2667 ?x2667 ?x2667)) (* 6 (* r00 s00 ?x2658 (+ x!0 ?x2659) ?x2667 ?x2667 ?x2667)) (* 702 (* s00 r00 r!2 s!1)) (* (- 6) (* x00 r!2 s!1 s!1)) (* (- 12) (* r00 r00 r00 ?x2658 (+ x!0 ?x2659) ?x2667 ?x2667 ?x2667)) (* 1224 (* s00 r00 r!2 r!2 s!1)) (* 3 (* ?x2658 (+ x!0 ?x2659) ?x2667 ?x2667 ?x2667 ?x2667)) (* (- 216) (* r00 r!2 r!2)) (* (- 6) (* ?x2658 (+ x!0 ?x2659) (+ x!0 ?x2659) ?x2667 ?x2667 ?x2667)) (* 156 (* s00 r!2 r!2 s!1)) ?x4053 (* (- 18) (* r00 s!1)) (* 351 (* s00 r!2)) ?x2625 (* (- 3) (* r00 s!1 s!1)))))
 (let (($x3301 (= ?x3308 (- 27))))
 (let (($x4434 (not $x3301)))
 (let ((?x1343 (* x00 x00)))
 (let ((?x4300 (* 108 ?x1343)))
 (let ((?x1649 (* (- 9) s!1)))
 (let ((?x1181 (* s00 s00 s00)))
 (let ((?x3095 (* 16 ?x1181)))
 (let ((?x879 (* r00 r00 r00 x00)))
 (let ((?x4103 (* (- 432) ?x879)))
 (let ((?x802 (* s00 x00)))
 (let ((?x1397 (* (- 108) ?x802)))
 (let ((?x731 (* r00 r00 s!1)))
 (let ((?x1925 (* 36 ?x731)))
 (let ((?x644 (* s00 r00 r00)))
 (let ((?x1923 (* (- 36) ?x644)))
 (let ((?x588 (* s00 s00)))
 (let ((?x3307 (* 51 ?x588)))
 (let ((?x519 (* r00 x00)))
 (let ((?x4605 (* 108 ?x519)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4428 (+ ?x137 (* (- 54) ?x423) (* 216 (* s00 r00 x00)) ?x4605 ?x3307 (* (- 216) (* r00 r00 r00 s!1)) ?x1923 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x1925 (* (- 12) (* s00 s!1 s!1)) ?x1397 ?x4103 (* 216 (* s00 r00 r00 r00)) ?x3095 ?x1649 ?x4300 (* (- 108) (* x!0 s!1)) (* (- 216) (* s00 r00 x!0)) (* 108 (* s00 r00 s!1)) (* 108 (* x00 s!1)) (* (- 4) ?x1990) (* (- 66) (* s00 s!1)) (* (- 108) (* r00 x!0)) (* 15 ?x3675) (* 36 (* r00 r00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* x00 x!0)) (* 108 (* x!0 x!0)) (* 54 (* r00 s!1)) (* 108 (* s00 x!0)))))
 (let ((?x874 (* r00 r00 x00)))
 (let ((?x3976 (* 36 ?x874)))
 (let ((?x490 (* (- 6) ?x802)))
 (let ((?x3978 (* 15 ?x588)))
 (let ((?x3059 (* 54 ?x519)))
 (let ((?x1944 (+ ?x137 (* (- 24) ?x423) ?x3059 ?x3978 ?x1923 (* 2 (* s00 s00 r00)) ?x1925 ?x490 ?x3976 ?x1649 (* 54 (* x00 r!2)) (* (- 54) ?x1306) (* 36 (* r00 x00 r!2)) (* (- 6) (* x!0 s!1)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 r!2 s!1)) (* 2 (* s00 r00 s!1)) (* 6 (* x00 s!1)) (* (- 36) (* r00 r00 x!0)) (* (- 12) (* s00 s!1)) (* (- 2) ?x2239) (* (- 54) (* r00 x!0)) (* (- 3) ?x3675) (* (- 36) (* r00 r!2 x!0)) (* 24 (* r00 s!1)) (* (- 24) (* s00 r!2)) (* 24 ?x4835) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)))))
 (let (($x1945 (= ?x1944 0)))
 (let ((?x4066 (* (- 3) s!1)))
 (let ((?x346 (* 4 ?x588)))
 (let ((?x3636 (* 18 ?x519)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1173 (+ ?x44 (* (- 9) ?x423) ?x3636 ?x346 (* (- 6) ?x644) (* 6 (* s00 r00 r!2)) (* 6 ?x731) ?x4066 (* 18 (* x00 r!2)) (* (- 18) ?x1306) (* (- 2) (* s00 s!1)) (* (- 6) (* r00 r!2 s!1)) (* (- 18) (* r00 x!0)) (* (- 2) ?x3675) (* 9 (* r00 s!1)) (* (- 9) (* s00 r!2)) (* 9 ?x4835))))
 (let (($x1174 (= ?x1173 0)))
 (let ((?x1169 (* 2 ?x4835)))
 (let ((?x4887 (* 6 x!0)))
 (let ((?x1632 (* 3 r!2)))
 (let ((?x467 (* 12 ?x466)))
 (let ((?x501 (* (- 6) ?x423)))
 (let ((?x498 (* (- 6) x00)))
 (let ((?x497 (* (- 3) r00)))
 (let ((?x741 (+ ?x44 ?x497 ?x498 ?x501 ?x467 ?x1632 ?x4887 ?x4066 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x1169)))
 (let (($x743 (= ?x741 0)))
 (let (($x2221 (and $x4389 $x743 $x1174 $x1945 (= ?x4428 0) $x4434)))
 (let ((?x4080 (+ ?x2623 ?x2575 ?x2624 ?x633 ?x642 ?x643 ?x2578 ?x523 ?x2625 (* (- 648) (* r!2 r00 r00)) (* 351 (* r!2 s00)) ?x553 ?x554 ?x2626 ?x2011 (* (- 54) (* r!2 s!1 r00)) (* (- 72) (* s!1 r00 r00)) (* (- 288) (* r!2 s!1 r00 r00)) (* (- 252) (* s!1 r00 r00 r00)) (* (- 3) (* s!1 s!1 r00)) (* (- 270) (* r!2 x00)) (* 42 (* s!1 s00)) (* (- 18) (* s!1 r00)) (* (- 1404) (* r!2 r!2 r00 r00)) (* (- 36) (* s!1 x00)) (* 864 (* r!2 s00 r00)) (* 126 (* s!1 s00 r00)) ?x2645 ?x2648 (* 36 (* s!1 x!0)) (* (- 1296) (* r!2 r!2 r!2 r00 r00)) (* (- 3) (* s00 ?x2658 (+ ?x2659 x!0) ?x2667 ?x2667 ?x2667)) (* (- 2) (* ?x2658 ?x2658 (+ ?x2659 x!0) ?x2667 ?x2667 ?x2667 ?x2667)) (* 150 (* r!2 s!1 s00)) (* 7 (* s!1 s!1 s00)) ?x677 (* (- 12) (* s!1 s!1 r00 r00)) (* (- 36) (* r!2 r!2 s!1 r00)) (* (- 6) (* ?x2658 (+ ?x2659 x!0) ?x2667 ?x2667 ?x2667)) (* 12 (* r00 r00 ?x2658 ?x2658 (+ ?x2659 x!0) ?x2667 ?x2667 ?x2667)) (* (- 3) (* ?x2658 ?x2658 (+ ?x2659 x!0) ?x2667 ?x2667 ?x2667)) ?x3114 (* 6 (* r00 s00 ?x2658 (+ ?x2659 x!0) ?x2667 ?x2667 ?x2667)) (* (- 3) (* r!2 s!1 s!1 r00)) (* 3 (* r00 ?x2658 (+ ?x2659 x!0) ?x2667 ?x2667 ?x2667)) (* 6 (* x00 ?x2658 (+ ?x2659 x!0) ?x2667 ?x2667 ?x2667)) (* (- 12) (* r00 r00 r00 ?x2658 (+ ?x2659 x!0) ?x2667 ?x2667 ?x2667)) (* (- 108) (* r!2 r!2 r!2 r00)) (* (- 216) (* r!2 r!2 r00)) (* 3 (* ?x2658 (+ ?x2659 x!0) ?x2667 ?x2667 ?x2667 ?x2667)) (* (- 135) (* r!2 r00)) (* (- 1404) (* r!2 s!1 r00 r00 r00)) (* (- 4968) (* r!2 r!2 r00 r00 r00)) (* (- 1728) (* r!2 r00 r00 r00)) (* (- 6048) (* r!2 r!2 r!2 r00 r00 r00)) (* (- 2448) (* r!2 r!2 s!1 r00 r00 r00)) (* (- 96) (* s!1 s!1 r00 r00 r00)) (* (- 312) (* r!2 s!1 s!1 r00 r00 r00)) (* (- 6) (* s!1 s!1 x00)) (* (- 6) (* r!2 s!1 s!1 x00)) ?x1644 ?x1968 ?x1969 ?x1970 ?x4738 ?x1974 (* 684 (* r!2 r!2 s00)) ?x4155 (* (- 4) (* s00 ?x2658 ?x2658 (+ ?x2659 x!0) ?x2667 ?x2667 ?x2667)) (* (- 108) (* r!2 s!1 x00)) (* (- 432) (* r!2 r!2 x00)) ?x4145 (* (- 72) (* r!2 r!2 s!1 x00)) (* (- 2592) (* r!2 r!2 r!2 r!2 r00 r00 r00)) (* (- 216) (* r!2 r!2 r!2 x00)) (* (- 1296) (* r!2 r!2 r!2 s!1 r00 r00 r00)) (* (- 216) (* r!2 r!2 s!1 s!1 r00 r00 r00)) ?x4020 (* 4 (* r!2 r!2 s!1 s!1 s00)) (* 11 (* r!2 s!1 s!1 s00)) (* (- 12) (* r!2 s!1 s!1 s!1 r00 r00 r00)) (* 48 (* r!2 r!2 r!2 s!1 s00)) (* 156 (* r!2 r!2 s!1 s00)) (* (- 12) (* s!1 s!1 s!1 r00 r00 r00)) (* 540 (* r!2 r!2 r!2 s00)) (* 144 (* r!2 r!2 r!2 r!2 s00)) (* (- 6) (* ?x2658 (+ ?x2659 x!0) (+ ?x2659 x!0) ?x2667 ?x2667 ?x2667)) (* 702 (* r!2 s!1 s00 r00)) (* 2484 (* r!2 r!2 s00 r00)) (* 6 (* r!2 s!1 s!1 s!1 s00 r00)) ?x4043 (* 156 (* r!2 s!1 s!1 s00 r00)) (* 108 (* r!2 r!2 s!1 s!1 s00 r00)) (* 6 (* s!1 s!1 s!1 s00 r00)) (* 48 (* s!1 s!1 s00 r00)) (* 1224 (* r!2 r!2 s!1 s00 r00)) ?x4053 (* 3024 (* r!2 r!2 r!2 s00 r00)) (* 1296 (* r!2 r!2 r!2 r!2 s00 r00)) ?x4057 (* 648 (* r!2 r!2 r!2 s!1 s00 r00)) (* (- 24) (* r!2 s!1 s!1 r00 r00)) (* 6 (* s!1 s!1 x!0)) (* 6 (* r!2 s!1 s!1 x!0)) (* (- 144) (* r!2 r!2 r!2 s!1 r00 r00)) (* (- 360) (* r!2 r!2 s!1 r00 r00)) (* (- 432) (* r!2 r!2 r!2 r!2 r00 r00)) ?x4073 ?x4722 (* 108 (* r!2 s!1 x!0)) (* (- 12) (* r!2 r!2 s!1 s!1 r00 r00)) ?x4082 (* 72 (* r!2 r!2 s!1 x!0)))))
 (let ((?x1373 (* (- 108) ?x1343)))
 (let ((?x1372 (* (- 16) ?x1181)))
 (let ((?x1053 (* s00 r00 r00 r00)))
 (let ((?x1368 (* (- 216) ?x1053)))
 (let ((?x880 (* 432 ?x879)))
 (let ((?x1126 (* 108 ?x802)))
 (let ((?x728 (* s00 s00 r00 r00)))
 (let ((?x729 (* 36 ?x728)))
 (let ((?x665 (* s00 s00 r00)))
 (let ((?x1009 (* 108 ?x665)))
 (let ((?x997 (* 36 ?x644)))
 (let ((?x1362 (* (- 51) ?x588)))
 (let ((?x932 (* s!1 r00 r00)))
 (let ((?x4816 (* (- 36) ?x932)))
 (let ((?x1359 (* (- 108) ?x519)))
 (let ((?x510 (* s00 r00 x00)))
 (let ((?x1358 (* (- 216) ?x510)))
 (let ((?x517 (* 54 ?x423)))
 (let ((?x984 (* (- 9) s00)))
 (let ((?x2670 (* 9 s!1)))
 (let ((?x3737 (+ ?x2670 ?x984 ?x517 ?x1358 ?x1359 (* (- 15) ?x3675) ?x4816 ?x1362 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x997 ?x1009 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x729 (* (- 108) (* s!1 s00 r00)) (* 4 ?x1990) ?x1126 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x880 (* 12 (* s!1 s!1 s00)) ?x1368 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1372 (* 216 (* x!0 x00)) ?x1373)))
 (let ((?x887 (* (- 36) ?x874)))
 (let ((?x803 (* 6 ?x802)))
 (let ((?x693 (* (- 2) ?x665)))
 (let ((?x913 (* (- 15) ?x588)))
 (let ((?x548 (* (- 54) ?x519)))
 (let ((?x561 (* 24 ?x423)))
 (let ((?x792 (+ ?x2670 ?x984 (* (- 24) ?x4835) (* 24 (* r!2 s00)) ?x561 ?x548 (* 3 ?x3675) (* 54 ?x1306) (* 36 (* r!2 x!0 r00)) ?x4816 ?x913 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x997 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x693 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x803 (* 2 ?x2239) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x887 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x645 (* 6 ?x644)))
 (let ((?x601 (* (- 4) ?x588)))
 (let ((?x533 (* (- 18) ?x519)))
 (let ((?x538 (* 9 ?x423)))
 (let ((?x375 (* (- 3) s00)))
 (let ((?x4074 (+ (* 3 s!1) ?x375 (* (- 9) ?x4835) (* 9 (* r!2 s00)) ?x538 ?x533 (* 2 ?x3675) (* 18 ?x1306) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x932) ?x601 (* 18 (* x!0 r00)) ?x645 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x4733 (+ ?x1632 ?x4066 ?x4887 ?x44 ?x497 ?x498 ?x1169 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x501 ?x467)))
 (let (($x4085 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x2741) (* 3 ?x298)) 0) (= ?x4733 0) (= ?x4074 0) (= ?x792 0) (= ?x3737 0) (not (= ?x4080 (- 27))))))
 (let (($x3067 (exists ((r Int) (s Int) (x Int) )(! (let ((?x5442 (* 72 (* r r s x))))
 (let ((?x5441 (* 216 (* r r r x))))
 (let ((?x5440 (* 108 (* r s x))))
 (let ((?x5439 (* 432 (* r r x))))
 (let ((?x5438 (* (- 6) (* r s s s))))
 (let ((?x4871 (* 6 (* r s s x))))
 (let ((?x4869 (* 6 (* s s x))))
 (let ((?x5437 (* 648 (* r r r s s00 r00))))
 (let ((?x213 (* 6 r)))
 (let ((?x1383 (+ 3 ?x213 s)))
 (let ((?x1380 (+ 1 r)))
 (let ((?x5436 (* 1296 (* r r r r s00 r00))))
 (let ((?x5432 (* 6 (* s s s s00 r00))))
 (let ((?x5431 (* 108 (* r r s s s00 r00))))
 (let ((?x5429 (* 6 (* r s s s s00 r00))))
 (let ((?x277 (* (- 1) s)))
 (let ((?x1389 (+ ?x277 x)))
 (let ((?x5423 (* 144 (* r r r r s00))))
 (let ((?x5422 (* 540 (* r r r s00))))
 (let ((?x5421 (* 156 (* r r s s00))))
 (let ((?x5420 (* 48 (* r r r s s00))))
 (let ((?x5419 (* 11 (* r s s s00))))
 (let ((?x3752 (* 4 (* r r s s s00))))
 (let ((?x5410 (* 3 (* ?x1380 ?x1383 ?x1383 ?x1383 ?x1383))))
 (let ((?x5338 (* (- 1) (* ?x1380 ?x1380 ?x1383 ?x1383 ?x1383))))
 (let ((?x5321 (* (- 180) (* r r r s))))
 (let ((?x5319 (* 108 (* r r r r))))
 (let ((?x5318 (* (- 342) (* r r s))))
 (let ((?x5316 (* 324 (* r r r))))
 (let ((?x5315 (* (- 69) (* r r s s))))
 (let ((?x810 (* s x)))
 (let ((?x5244 (* 36 ?x810)))
 (let ((?x806 (* r s s)))
 (let ((?x5243 (* (- 102) ?x806)))
 (let ((?x800 (* s s s)))
 (let ((?x5245 (* (- 6) ?x800)))
 (let ((?x546 (* r x)))
 (let ((?x5258 (* 270 ?x546)))
 (let ((?x542 (* s s)))
 (let ((?x5261 (* (- 33) ?x542)))
 (let ((?x466 (* r00 r00 r00)))
 (let ((?x554 (* (- 216) ?x466)))
 (let ((?x423 (* s00 r00)))
 (let ((?x553 (* 108 ?x423)))
 (let ((?x342 (* r s)))
 (let ((?x5266 (* (- 198) ?x342)))
 (let ((?x298 (* r00 r00)))
 (let ((?x523 (* (- 108) ?x298)))
 (let ((?x286 (* r r)))
 (let ((?x5268 (* 351 ?x286)))
 (let ((?x643 (* (- 54) x00)))
 (let ((?x642 (* (- 27) r00)))
 (let ((?x633 (* 63 s00)))
 (let ((?x4886 (* 54 x)))
 (let ((?x5271 (* (- 36) s)))
 (let ((?x5274 (* 162 r)))
 (let ((?x884 (+ ?x5274 ?x5271 ?x4886 ?x633 ?x642 ?x643 ?x5268 ?x523 ?x5266 (* (- 648) (* r r00 r00)) (* 351 (* r s00)) ?x553 ?x554 ?x5261 ?x5258 (* (- 54) (* r s r00)) (* (- 72) (* s r00 r00)) (* (- 288) (* r s r00 r00)) (* (- 252) (* s r00 r00 r00)) (* (- 3) (* s s r00)) (* (- 270) (* r x00)) (* 42 (* s s00)) (* (- 18) (* s r00)) (* (- 1404) (* r r r00 r00)) (* (- 36) (* s x00)) (* 864 (* r s00 r00)) (* 126 (* s s00 r00)) ?x5245 ?x5243 ?x5244 (* (- 1296) (* r r r r00 r00)) (* (- 3) (* s00 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 2) (* ?x1380 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383 ?x1383)) (* 150 (* r s s00)) (* 7 (* s s s00)) (* (- 3) (* ?x1380 ?x1383 ?x1383 ?x1383)) (* (- 12) (* s s r00 r00)) (* (- 36) (* r r s r00)) (* (- 6) (* ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* 12 (* r00 r00 ?x1380 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 3) (* ?x1380 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 4) (* s00 ?x1380 ?x1380 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 3) (* r s s r00)) (* 3 (* r00 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* 6 (* x00 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 12) (* r00 r00 r00 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 108) (* r r r r00)) (* (- 216) (* r r r00)) (* 3 (* ?x1380 ?x1389 ?x1383 ?x1383 ?x1383 ?x1383)) (* (- 135) (* r r00)) (* (- 1404) (* r s r00 r00 r00)) (* (- 4968) (* r r r00 r00 r00)) (* (- 1728) (* r r00 r00 r00)) (* (- 6048) (* r r r r00 r00 r00)) (* (- 2448) (* r r s r00 r00 r00)) (* (- 96) (* s s r00 r00 r00)) (* (- 312) (* r s s r00 r00 r00)) (* (- 6) (* s s x00)) (* (- 6) (* r s s x00)) ?x5315 ?x5316 ?x5318 ?x5319 ?x5321 ?x5338 (* 684 (* r r s00)) (* 12 (* r00 r00 ?x1380 ?x1380 ?x1383 ?x1383 ?x1383)) (* (- 4) (* s00 ?x1380 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 108) (* r s x00)) (* (- 432) (* r r x00)) ?x5410 (* (- 72) (* r r s x00)) (* (- 2592) (* r r r r r00 r00 r00)) (* (- 216) (* r r r x00)) (* (- 1296) (* r r r s r00 r00 r00)) (* (- 216) (* r r s s r00 r00 r00)) (* 3 (* r00 ?x1380 ?x1383 ?x1383 ?x1383)) ?x3752 ?x5419 (* (- 12) (* r s s s r00 r00 r00)) ?x5420 ?x5421 (* (- 12) (* s s s r00 r00 r00)) ?x5422 ?x5423 (* (- 6) (* ?x1380 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 702 (* r s s00 r00)) (* 2484 (* r r s00 r00)) ?x5429 (* (- 3) (* s00 ?x1380 ?x1383 ?x1383 ?x1383)) (* 156 (* r s s s00 r00)) ?x5431 ?x5432 (* 48 (* s s s00 r00)) (* 1224 (* r r s s00 r00)) (* 6 (* x00 ?x1380 ?x1383 ?x1383 ?x1383)) (* 3024 (* r r r s00 r00)) ?x5436 (* (- 2) (* ?x1380 ?x1380 ?x1383 ?x1383 ?x1383 ?x1383)) ?x5437 (* (- 24) (* r s s r00 r00)) ?x4869 ?x4871 (* (- 144) (* r r r s r00 r00)) (* (- 360) (* r r s r00 r00)) (* (- 432) (* r r r r r00 r00)) ?x5438 ?x5439 ?x5440 (* (- 12) (* r r s s r00 r00)) ?x5441 ?x5442)))
 (let ((?x1343 (* x00 x00)))
 (let ((?x1373 (* (- 108) ?x1343)))
 (let ((?x1181 (* s00 s00 s00)))
 (let ((?x1372 (* (- 16) ?x1181)))
 (let ((?x1053 (* s00 r00 r00 r00)))
 (let ((?x1368 (* (- 216) ?x1053)))
 (let ((?x879 (* r00 r00 r00 x00)))
 (let ((?x880 (* 432 ?x879)))
 (let ((?x802 (* s00 x00)))
 (let ((?x1126 (* 108 ?x802)))
 (let ((?x728 (* s00 s00 r00 r00)))
 (let ((?x729 (* 36 ?x728)))
 (let ((?x665 (* s00 s00 r00)))
 (let ((?x1009 (* 108 ?x665)))
 (let ((?x644 (* s00 r00 r00)))
 (let ((?x997 (* 36 ?x644)))
 (let ((?x588 (* s00 s00)))
 (let ((?x1362 (* (- 51) ?x588)))
 (let ((?x562 (* s r00 r00)))
 (let ((?x861 (* (- 36) ?x562)))
 (let ((?x519 (* r00 x00)))
 (let ((?x1359 (* (- 108) ?x519)))
 (let ((?x510 (* s00 r00 x00)))
 (let ((?x1358 (* (- 216) ?x510)))
 (let ((?x517 (* 54 ?x423)))
 (let ((?x984 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1374 (+ ?x143 ?x984 ?x517 ?x1358 ?x1359 (* (- 15) ?x542) ?x861 ?x1362 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x997 ?x1009 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x729 (* (- 108) (* s s00 r00)) (* 4 ?x800) ?x1126 (* 108 ?x810) (* (- 108) (* x x)) ?x880 (* 12 (* s s s00)) ?x1368 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1372 (* 216 (* x x00)) ?x1373)))
 (let (($x1375 (= ?x1374 0)))
 (let ((?x874 (* r00 r00 x00)))
 (let ((?x887 (* (- 36) ?x874)))
 (let ((?x803 (* 6 ?x802)))
 (let ((?x693 (* (- 2) ?x665)))
 (let ((?x913 (* (- 15) ?x588)))
 (let ((?x566 (* 3 ?x542)))
 (let ((?x548 (* (- 54) ?x519)))
 (let ((?x561 (* 24 ?x423)))
 (let ((?x1076 (+ ?x143 ?x984 (* (- 24) ?x342) (* 24 (* r s00)) ?x561 ?x548 ?x566 (* 54 ?x546) (* 36 (* r x r00)) ?x861 ?x913 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x997 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x693 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x803 (* 2 ?x806) (* 6 ?x810) (* (- 4) (* r s00 s00)) ?x887 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1081 (= ?x1076 0)))
 (let ((?x645 (* 6 ?x644)))
 (let ((?x601 (* (- 4) ?x588)))
 (let ((?x543 (* 2 ?x542)))
 (let ((?x533 (* (- 18) ?x519)))
 (let ((?x538 (* 9 ?x423)))
 (let ((?x375 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x742 (+ ?x47 ?x375 (* (- 9) ?x342) (* 9 (* r s00)) ?x538 ?x533 ?x543 (* 18 ?x546) (* 6 (* r s r00)) (* (- 6) ?x562) ?x601 (* 18 (* x r00)) ?x645 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x749 (= ?x742 0)))
 (let ((?x467 (* 12 ?x466)))
 (let ((?x501 (* (- 6) ?x423)))
 (let ((?x498 (* (- 6) x00)))
 (let ((?x497 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x496 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x502 (+ ?x43 ?x496 ?x56 ?x44 ?x497 ?x498 (* 2 ?x342) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x501 ?x467)))
 (let (($x503 (= ?x502 0)))
 (let (($x331 (= (+ s (* (- 1) s00) (* (- 3) ?x286) (* 3 ?x298)) 0)))
 (and $x331 $x503 $x749 $x1081 $x1375 (not (= ?x884 (- 27)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x3235 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1953 (+ 3 s ?x213)))
 (let ((?x277 (* (- 1) s)))
 (let ((?x2212 (+ x ?x277)))
 (let ((?x1380 (+ 1 r)))
 (let ((?x3852 (+ (* 4 (* s00 ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 ?x1380 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 r00 ?x1380 ?x1953 ?x1953)) (* 6 (* x00 ?x1380 ?x1953 ?x1953)) (* 12 (* r00 r00 r00 ?x1380 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 ?x1380 ?x1380 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x1380 ?x1953 ?x1953)) (* 3 (* r00 ?x1380 ?x1953 ?x1953)) (* 2 (* ?x1380 ?x1380 ?x1953 ?x1953 ?x1953 ?x1953)) (* ?x1380 ?x1380 ?x1953 ?x1953 ?x1953) (* 3 (* ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 4 (* s00 ?x1380 ?x1380 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* r00 s00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 6 (* ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 6 (* r00 s00 ?x1380 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x1953 ?x1953 ?x1953 ?x1953)) (* 3 (* ?x1380 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1380 ?x1953 ?x1953 ?x1953)) (* 2 (* ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953 ?x1953)) (* (- 4) (* s00 ?x1380 ?x1380 ?x1953 ?x1953)) (* (- 3) (* s00 ?x1380 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 r00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x2212 ?x1953 ?x1953 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* r00 s00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 6) (* ?x1380 ?x2212 ?x1953 ?x1953)) (* 6 (* ?x1380 ?x2212 ?x2212 ?x1953 ?x1953 ?x1953)))))
 (let (($x2080 (not (= ?x3852 0))))
 (let ((?x1343 (* x00 x00)))
 (let ((?x4300 (* 108 ?x1343)))
 (let ((?x3115 (* (- 9) s)))
 (let ((?x2189 (* r00 r00 s00)))
 (let ((?x3236 (* (- 36) ?x2189)))
 (let ((?x137 (* 9 s00)))
 (let ((?x588 (* s00 s00)))
 (let ((?x3307 (* 51 ?x588)))
 (let ((?x2053 (* r00 r00 s)))
 (let ((?x2452 (* 36 ?x2053)))
 (let ((?x1181 (* s00 s00 s00)))
 (let ((?x3095 (* 16 ?x1181)))
 (let ((?x802 (* s00 x00)))
 (let ((?x1397 (* (- 108) ?x802)))
 (let ((?x879 (* r00 r00 r00 x00)))
 (let ((?x4103 (* (- 432) ?x879)))
 (let ((?x519 (* r00 x00)))
 (let ((?x4605 (* 108 ?x519)))
 (let ((?x4306 (+ (* 216 (* r00 s00 x00)) ?x4605 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4103 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1397 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3095 (* (- 108) (* x s)) ?x2452 ?x3307 (* (- 108) (* r00 x)) ?x137 ?x3236 ?x3115 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4300)))
 (let (($x4144 (= ?x4306 0)))
 (let ((?x3978 (* 15 ?x588)))
 (let ((?x874 (* r00 r00 x00)))
 (let ((?x3976 (* 36 ?x874)))
 (let ((?x490 (* (- 6) ?x802)))
 (let ((?x3059 (* 54 ?x519)))
 (let ((?x3241 (+ (* 24 (* s r)) ?x3059 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x490 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2452 ?x3976 ?x3978 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3236 (* 54 (* x00 r)) ?x3115 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x496 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x346 (* 4 ?x588)))
 (let ((?x3636 (* 18 ?x519)))
 (let ((?x3130 (+ (* 9 (* s r)) ?x3636 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2053) ?x346 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2189) (* 18 (* x00 r)) ?x496 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x466 (* r00 r00 r00)))
 (let ((?x467 (* 12 ?x466)))
 (let ((?x498 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x497 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2456 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x496 ?x497 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x498 ?x467)))
 (let (($x2064 (= (+ s00 ?x277 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2064 (= ?x2456 0) (= ?x3130 0) (= ?x3241 0) $x4144 $x2080))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3300 (lambda ((r Int) (s Int) (x Int) )(let ((?x5442 (* 72 (* r r s x))))
 (let ((?x5441 (* 216 (* r r r x))))
 (let ((?x5440 (* 108 (* r s x))))
 (let ((?x5439 (* 432 (* r r x))))
 (let ((?x5438 (* (- 6) (* r s s s))))
 (let ((?x4871 (* 6 (* r s s x))))
 (let ((?x4869 (* 6 (* s s x))))
 (let ((?x5437 (* 648 (* r r r s s00 r00))))
 (let ((?x213 (* 6 r)))
 (let ((?x1383 (+ 3 ?x213 s)))
 (let ((?x1380 (+ 1 r)))
 (let ((?x5436 (* 1296 (* r r r r s00 r00))))
 (let ((?x5432 (* 6 (* s s s s00 r00))))
 (let ((?x5431 (* 108 (* r r s s s00 r00))))
 (let ((?x5429 (* 6 (* r s s s s00 r00))))
 (let ((?x277 (* (- 1) s)))
 (let ((?x1389 (+ ?x277 x)))
 (let ((?x5423 (* 144 (* r r r r s00))))
 (let ((?x5422 (* 540 (* r r r s00))))
 (let ((?x5421 (* 156 (* r r s s00))))
 (let ((?x5420 (* 48 (* r r r s s00))))
 (let ((?x5419 (* 11 (* r s s s00))))
 (let ((?x3752 (* 4 (* r r s s s00))))
 (let ((?x5410 (* 3 (* ?x1380 ?x1383 ?x1383 ?x1383 ?x1383))))
 (let ((?x5338 (* (- 1) (* ?x1380 ?x1380 ?x1383 ?x1383 ?x1383))))
 (let ((?x5321 (* (- 180) (* r r r s))))
 (let ((?x5319 (* 108 (* r r r r))))
 (let ((?x5318 (* (- 342) (* r r s))))
 (let ((?x5316 (* 324 (* r r r))))
 (let ((?x5315 (* (- 69) (* r r s s))))
 (let ((?x810 (* s x)))
 (let ((?x5244 (* 36 ?x810)))
 (let ((?x806 (* r s s)))
 (let ((?x5243 (* (- 102) ?x806)))
 (let ((?x800 (* s s s)))
 (let ((?x5245 (* (- 6) ?x800)))
 (let ((?x546 (* r x)))
 (let ((?x5258 (* 270 ?x546)))
 (let ((?x542 (* s s)))
 (let ((?x5261 (* (- 33) ?x542)))
 (let ((?x466 (* r00 r00 r00)))
 (let ((?x554 (* (- 216) ?x466)))
 (let ((?x423 (* s00 r00)))
 (let ((?x553 (* 108 ?x423)))
 (let ((?x342 (* r s)))
 (let ((?x5266 (* (- 198) ?x342)))
 (let ((?x298 (* r00 r00)))
 (let ((?x523 (* (- 108) ?x298)))
 (let ((?x286 (* r r)))
 (let ((?x5268 (* 351 ?x286)))
 (let ((?x643 (* (- 54) x00)))
 (let ((?x642 (* (- 27) r00)))
 (let ((?x633 (* 63 s00)))
 (let ((?x4886 (* 54 x)))
 (let ((?x5271 (* (- 36) s)))
 (let ((?x5274 (* 162 r)))
 (let ((?x884 (+ ?x5274 ?x5271 ?x4886 ?x633 ?x642 ?x643 ?x5268 ?x523 ?x5266 (* (- 648) (* r r00 r00)) (* 351 (* r s00)) ?x553 ?x554 ?x5261 ?x5258 (* (- 54) (* r s r00)) (* (- 72) (* s r00 r00)) (* (- 288) (* r s r00 r00)) (* (- 252) (* s r00 r00 r00)) (* (- 3) (* s s r00)) (* (- 270) (* r x00)) (* 42 (* s s00)) (* (- 18) (* s r00)) (* (- 1404) (* r r r00 r00)) (* (- 36) (* s x00)) (* 864 (* r s00 r00)) (* 126 (* s s00 r00)) ?x5245 ?x5243 ?x5244 (* (- 1296) (* r r r r00 r00)) (* (- 3) (* s00 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 2) (* ?x1380 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383 ?x1383)) (* 150 (* r s s00)) (* 7 (* s s s00)) (* (- 3) (* ?x1380 ?x1383 ?x1383 ?x1383)) (* (- 12) (* s s r00 r00)) (* (- 36) (* r r s r00)) (* (- 6) (* ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* 12 (* r00 r00 ?x1380 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 3) (* ?x1380 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 4) (* s00 ?x1380 ?x1380 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 3) (* r s s r00)) (* 3 (* r00 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* 6 (* x00 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 12) (* r00 r00 r00 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 108) (* r r r r00)) (* (- 216) (* r r r00)) (* 3 (* ?x1380 ?x1389 ?x1383 ?x1383 ?x1383 ?x1383)) (* (- 135) (* r r00)) (* (- 1404) (* r s r00 r00 r00)) (* (- 4968) (* r r r00 r00 r00)) (* (- 1728) (* r r00 r00 r00)) (* (- 6048) (* r r r r00 r00 r00)) (* (- 2448) (* r r s r00 r00 r00)) (* (- 96) (* s s r00 r00 r00)) (* (- 312) (* r s s r00 r00 r00)) (* (- 6) (* s s x00)) (* (- 6) (* r s s x00)) ?x5315 ?x5316 ?x5318 ?x5319 ?x5321 ?x5338 (* 684 (* r r s00)) (* 12 (* r00 r00 ?x1380 ?x1380 ?x1383 ?x1383 ?x1383)) (* (- 4) (* s00 ?x1380 ?x1380 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 108) (* r s x00)) (* (- 432) (* r r x00)) ?x5410 (* (- 72) (* r r s x00)) (* (- 2592) (* r r r r r00 r00 r00)) (* (- 216) (* r r r x00)) (* (- 1296) (* r r r s r00 r00 r00)) (* (- 216) (* r r s s r00 r00 r00)) (* 3 (* r00 ?x1380 ?x1383 ?x1383 ?x1383)) ?x3752 ?x5419 (* (- 12) (* r s s s r00 r00 r00)) ?x5420 ?x5421 (* (- 12) (* s s s r00 r00 r00)) ?x5422 ?x5423 (* (- 6) (* ?x1380 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 702 (* r s s00 r00)) (* 2484 (* r r s00 r00)) ?x5429 (* (- 3) (* s00 ?x1380 ?x1383 ?x1383 ?x1383)) (* 156 (* r s s s00 r00)) ?x5431 ?x5432 (* 48 (* s s s00 r00)) (* 1224 (* r r s s00 r00)) (* 6 (* x00 ?x1380 ?x1383 ?x1383 ?x1383)) (* 3024 (* r r r s00 r00)) ?x5436 (* (- 2) (* ?x1380 ?x1380 ?x1383 ?x1383 ?x1383 ?x1383)) ?x5437 (* (- 24) (* r s s r00 r00)) ?x4869 ?x4871 (* (- 144) (* r r r s r00 r00)) (* (- 360) (* r r s r00 r00)) (* (- 432) (* r r r r r00 r00)) ?x5438 ?x5439 ?x5440 (* (- 12) (* r r s s r00 r00)) ?x5441 ?x5442)))
 (let ((?x1343 (* x00 x00)))
 (let ((?x1373 (* (- 108) ?x1343)))
 (let ((?x1181 (* s00 s00 s00)))
 (let ((?x1372 (* (- 16) ?x1181)))
 (let ((?x1053 (* s00 r00 r00 r00)))
 (let ((?x1368 (* (- 216) ?x1053)))
 (let ((?x879 (* r00 r00 r00 x00)))
 (let ((?x880 (* 432 ?x879)))
 (let ((?x802 (* s00 x00)))
 (let ((?x1126 (* 108 ?x802)))
 (let ((?x728 (* s00 s00 r00 r00)))
 (let ((?x729 (* 36 ?x728)))
 (let ((?x665 (* s00 s00 r00)))
 (let ((?x1009 (* 108 ?x665)))
 (let ((?x644 (* s00 r00 r00)))
 (let ((?x997 (* 36 ?x644)))
 (let ((?x588 (* s00 s00)))
 (let ((?x1362 (* (- 51) ?x588)))
 (let ((?x562 (* s r00 r00)))
 (let ((?x861 (* (- 36) ?x562)))
 (let ((?x519 (* r00 x00)))
 (let ((?x1359 (* (- 108) ?x519)))
 (let ((?x510 (* s00 r00 x00)))
 (let ((?x1358 (* (- 216) ?x510)))
 (let ((?x517 (* 54 ?x423)))
 (let ((?x984 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1374 (+ ?x143 ?x984 ?x517 ?x1358 ?x1359 (* (- 15) ?x542) ?x861 ?x1362 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x997 ?x1009 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x729 (* (- 108) (* s s00 r00)) (* 4 ?x800) ?x1126 (* 108 ?x810) (* (- 108) (* x x)) ?x880 (* 12 (* s s s00)) ?x1368 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1372 (* 216 (* x x00)) ?x1373)))
 (let (($x1375 (= ?x1374 0)))
 (let ((?x874 (* r00 r00 x00)))
 (let ((?x887 (* (- 36) ?x874)))
 (let ((?x803 (* 6 ?x802)))
 (let ((?x693 (* (- 2) ?x665)))
 (let ((?x913 (* (- 15) ?x588)))
 (let ((?x566 (* 3 ?x542)))
 (let ((?x548 (* (- 54) ?x519)))
 (let ((?x561 (* 24 ?x423)))
 (let ((?x1076 (+ ?x143 ?x984 (* (- 24) ?x342) (* 24 (* r s00)) ?x561 ?x548 ?x566 (* 54 ?x546) (* 36 (* r x r00)) ?x861 ?x913 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x997 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x693 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x803 (* 2 ?x806) (* 6 ?x810) (* (- 4) (* r s00 s00)) ?x887 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1081 (= ?x1076 0)))
 (let ((?x645 (* 6 ?x644)))
 (let ((?x601 (* (- 4) ?x588)))
 (let ((?x543 (* 2 ?x542)))
 (let ((?x533 (* (- 18) ?x519)))
 (let ((?x538 (* 9 ?x423)))
 (let ((?x375 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x742 (+ ?x47 ?x375 (* (- 9) ?x342) (* 9 (* r s00)) ?x538 ?x533 ?x543 (* 18 ?x546) (* 6 (* r s r00)) (* (- 6) ?x562) ?x601 (* 18 (* x r00)) ?x645 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x749 (= ?x742 0)))
 (let ((?x467 (* 12 ?x466)))
 (let ((?x501 (* (- 6) ?x423)))
 (let ((?x498 (* (- 6) x00)))
 (let ((?x497 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x496 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x502 (+ ?x43 ?x496 ?x56 ?x44 ?x497 ?x498 (* 2 ?x342) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x501 ?x467)))
 (let (($x503 (= ?x502 0)))
 (let (($x331 (= (+ s (* (- 1) s00) (* (- 3) ?x286) (* 3 ?x298)) 0)))
 (let (($x3094 (and $x331 $x503 $x749 $x1081 $x1375 (not (= ?x884 (- 27))))))
 (let ((?x1953 (+ 3 s ?x213)))
 (let ((?x2212 (+ x ?x277)))
 (let ((?x3852 (+ (* 4 (* s00 ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 ?x1380 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 r00 ?x1380 ?x1953 ?x1953)) (* 6 (* x00 ?x1380 ?x1953 ?x1953)) (* 12 (* r00 r00 r00 ?x1380 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 ?x1380 ?x1380 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x1380 ?x1953 ?x1953)) (* 3 (* r00 ?x1380 ?x1953 ?x1953)) (* 2 (* ?x1380 ?x1380 ?x1953 ?x1953 ?x1953 ?x1953)) (* ?x1380 ?x1380 ?x1953 ?x1953 ?x1953) (* 3 (* ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 4 (* s00 ?x1380 ?x1380 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* r00 s00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 6 (* ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 6 (* r00 s00 ?x1380 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x1953 ?x1953 ?x1953 ?x1953)) (* 3 (* ?x1380 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1380 ?x1953 ?x1953 ?x1953)) (* 2 (* ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953 ?x1953)) (* (- 4) (* s00 ?x1380 ?x1380 ?x1953 ?x1953)) (* (- 3) (* s00 ?x1380 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 r00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x2212 ?x1953 ?x1953 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* r00 s00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 6) (* ?x1380 ?x2212 ?x1953 ?x1953)) (* 6 (* ?x1380 ?x2212 ?x2212 ?x1953 ?x1953 ?x1953)))))
 (let (($x2080 (not (= ?x3852 0))))
 (let ((?x4300 (* 108 ?x1343)))
 (let ((?x3115 (* (- 9) s)))
 (let ((?x2189 (* r00 r00 s00)))
 (let ((?x3236 (* (- 36) ?x2189)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3307 (* 51 ?x588)))
 (let ((?x2053 (* r00 r00 s)))
 (let ((?x2452 (* 36 ?x2053)))
 (let ((?x3095 (* 16 ?x1181)))
 (let ((?x1397 (* (- 108) ?x802)))
 (let ((?x4103 (* (- 432) ?x879)))
 (let ((?x4605 (* 108 ?x519)))
 (let ((?x4306 (+ (* 216 (* r00 s00 x00)) ?x4605 (* (- 54) (* r00 s00)) (* 15 ?x542) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) ?x800) (* 108 (* x x)) ?x4103 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1397 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3095 (* (- 108) (* x s)) ?x2452 ?x3307 (* (- 108) (* r00 x)) ?x137 ?x3236 ?x3115 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4300)))
 (let (($x4144 (= ?x4306 0)))
 (let ((?x3978 (* 15 ?x588)))
 (let ((?x3976 (* 36 ?x874)))
 (let ((?x490 (* (- 6) ?x802)))
 (let ((?x3059 (* 54 ?x519)))
 (let ((?x3241 (+ (* 24 (* s r)) ?x3059 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x542) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x490 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2452 ?x3976 ?x3978 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3236 (* 54 (* x00 r)) ?x3115 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x346 (* 4 ?x588)))
 (let ((?x3636 (* 18 ?x519)))
 (let ((?x3130 (+ (* 9 (* s r)) ?x3636 (* (- 9) (* r00 s00)) (* (- 2) ?x542) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2053) ?x346 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2189) (* 18 (* x00 r)) ?x496 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x2456 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x496 ?x497 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x498 ?x467)))
 (let (($x2064 (= (+ s00 ?x277 (* 3 ?x286) (* (- 3) ?x298)) 0)))
 (let (($x3246 (and $x2064 (= ?x2456 0) (= ?x3130 0) (= ?x3241 0) $x4144 $x2080)))
 (rewrite (= $x3246 $x3094)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2089 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1953 (+ 3 s ?x213)))
 (let ((?x277 (* (- 1) s)))
 (let ((?x2212 (+ x ?x277)))
 (let ((?x1380 (+ 1 r)))
 (let ((?x3852 (+ (* 4 (* s00 ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 ?x1380 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 r00 ?x1380 ?x1953 ?x1953)) (* 6 (* x00 ?x1380 ?x1953 ?x1953)) (* 12 (* r00 r00 r00 ?x1380 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 ?x1380 ?x1380 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x1380 ?x1953 ?x1953)) (* 3 (* r00 ?x1380 ?x1953 ?x1953)) (* 2 (* ?x1380 ?x1380 ?x1953 ?x1953 ?x1953 ?x1953)) (* ?x1380 ?x1380 ?x1953 ?x1953 ?x1953) (* 3 (* ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 4 (* s00 ?x1380 ?x1380 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* r00 s00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 6 (* ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 6 (* r00 s00 ?x1380 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x1953 ?x1953 ?x1953 ?x1953)) (* 3 (* ?x1380 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1380 ?x1953 ?x1953 ?x1953)) (* 2 (* ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953 ?x1953)) (* (- 4) (* s00 ?x1380 ?x1380 ?x1953 ?x1953)) (* (- 3) (* s00 ?x1380 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 r00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x2212 ?x1953 ?x1953 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* r00 s00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 6) (* ?x1380 ?x2212 ?x1953 ?x1953)) (* 6 (* ?x1380 ?x2212 ?x2212 ?x1953 ?x1953 ?x1953)))))
 (let (($x2080 (not (= ?x3852 0))))
 (let ((?x1343 (* x00 x00)))
 (let ((?x4300 (* 108 ?x1343)))
 (let ((?x3115 (* (- 9) s)))
 (let ((?x2189 (* r00 r00 s00)))
 (let ((?x3236 (* (- 36) ?x2189)))
 (let ((?x137 (* 9 s00)))
 (let ((?x588 (* s00 s00)))
 (let ((?x3307 (* 51 ?x588)))
 (let ((?x2053 (* r00 r00 s)))
 (let ((?x2452 (* 36 ?x2053)))
 (let ((?x1181 (* s00 s00 s00)))
 (let ((?x3095 (* 16 ?x1181)))
 (let ((?x802 (* s00 x00)))
 (let ((?x1397 (* (- 108) ?x802)))
 (let ((?x879 (* r00 r00 r00 x00)))
 (let ((?x4103 (* (- 432) ?x879)))
 (let ((?x519 (* r00 x00)))
 (let ((?x4605 (* 108 ?x519)))
 (let ((?x4306 (+ (* 216 (* r00 s00 x00)) ?x4605 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4103 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1397 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3095 (* (- 108) (* x s)) ?x2452 ?x3307 (* (- 108) (* r00 x)) ?x137 ?x3236 ?x3115 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4300)))
 (let (($x4144 (= ?x4306 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x984 (* (- 9) s00)))
 (let ((?x913 (* (- 15) ?x588)))
 (let ((?x874 (* r00 r00 x00)))
 (let ((?x887 (* (- 36) ?x874)))
 (let ((?x803 (* 6 ?x802)))
 (let ((?x542 (* s s)))
 (let ((?x566 (* 3 ?x542)))
 (let ((?x548 (* (- 54) ?x519)))
 (let ((?x537 (+ (* (- 24) (* s r)) ?x548 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x566 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x803 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2053) ?x887 ?x913 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x984 (* 36 ?x2189) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x375 (* (- 3) s00)))
 (let ((?x601 (* (- 4) ?x588)))
 (let ((?x543 (* 2 ?x542)))
 (let ((?x533 (* (- 18) ?x519)))
 (let ((?x3635 (+ (* (- 9) (* s r)) ?x533 (* 9 (* r00 s00)) ?x543 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2053) ?x601 (* 18 (* r00 x)) ?x375 (* 6 ?x2189) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2004 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x375 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2064 (= (+ s00 ?x277 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2064 (= ?x2004 0) (= ?x3635 0) (= ?x537 0) $x4144 $x2080)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3245 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1953 (+ 3 s ?x213)))
 (let ((?x277 (* (- 1) s)))
 (let ((?x2212 (+ x ?x277)))
 (let ((?x1380 (+ 1 r)))
 (let ((?x3852 (+ (* 4 (* s00 ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 ?x1380 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 r00 ?x1380 ?x1953 ?x1953)) (* 6 (* x00 ?x1380 ?x1953 ?x1953)) (* 12 (* r00 r00 r00 ?x1380 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 ?x1380 ?x1380 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x1380 ?x1953 ?x1953)) (* 3 (* r00 ?x1380 ?x1953 ?x1953)) (* 2 (* ?x1380 ?x1380 ?x1953 ?x1953 ?x1953 ?x1953)) (* ?x1380 ?x1380 ?x1953 ?x1953 ?x1953) (* 3 (* ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 4 (* s00 ?x1380 ?x1380 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* r00 s00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 6 (* ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 6 (* r00 s00 ?x1380 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x1953 ?x1953 ?x1953 ?x1953)) (* 3 (* ?x1380 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1380 ?x1953 ?x1953 ?x1953)) (* 2 (* ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953 ?x1953)) (* (- 4) (* s00 ?x1380 ?x1380 ?x1953 ?x1953)) (* (- 3) (* s00 ?x1380 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 r00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x2212 ?x1953 ?x1953 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* r00 s00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 6) (* ?x1380 ?x2212 ?x1953 ?x1953)) (* 6 (* ?x1380 ?x2212 ?x2212 ?x1953 ?x1953 ?x1953)))))
 (let (($x2080 (not (= ?x3852 0))))
 (let ((?x1343 (* x00 x00)))
 (let ((?x4300 (* 108 ?x1343)))
 (let ((?x3115 (* (- 9) s)))
 (let ((?x2189 (* r00 r00 s00)))
 (let ((?x3236 (* (- 36) ?x2189)))
 (let ((?x137 (* 9 s00)))
 (let ((?x588 (* s00 s00)))
 (let ((?x3307 (* 51 ?x588)))
 (let ((?x2053 (* r00 r00 s)))
 (let ((?x2452 (* 36 ?x2053)))
 (let ((?x1181 (* s00 s00 s00)))
 (let ((?x3095 (* 16 ?x1181)))
 (let ((?x802 (* s00 x00)))
 (let ((?x1397 (* (- 108) ?x802)))
 (let ((?x879 (* r00 r00 r00 x00)))
 (let ((?x4103 (* (- 432) ?x879)))
 (let ((?x519 (* r00 x00)))
 (let ((?x4605 (* 108 ?x519)))
 (let ((?x4306 (+ (* 216 (* r00 s00 x00)) ?x4605 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4103 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1397 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3095 (* (- 108) (* x s)) ?x2452 ?x3307 (* (- 108) (* r00 x)) ?x137 ?x3236 ?x3115 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4300)))
 (let (($x4144 (= ?x4306 0)))
 (let ((?x3978 (* 15 ?x588)))
 (let ((?x874 (* r00 r00 x00)))
 (let ((?x3976 (* 36 ?x874)))
 (let ((?x490 (* (- 6) ?x802)))
 (let ((?x3059 (* 54 ?x519)))
 (let ((?x3241 (+ (* 24 (* s r)) ?x3059 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x490 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2452 ?x3976 ?x3978 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3236 (* 54 (* x00 r)) ?x3115 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x496 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x346 (* 4 ?x588)))
 (let ((?x3636 (* 18 ?x519)))
 (let ((?x3130 (+ (* 9 (* s r)) ?x3636 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2053) ?x346 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2189) (* 18 (* x00 r)) ?x496 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x466 (* r00 r00 r00)))
 (let ((?x467 (* 12 ?x466)))
 (let ((?x498 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x497 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2456 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x496 ?x497 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x498 ?x467)))
 (let (($x2064 (= (+ s00 ?x277 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3246 (and $x2064 (= ?x2456 0) (= ?x3130 0) (= ?x3241 0) $x4144 $x2080)))
 (let ((?x143 (* 9 s)))
 (let ((?x984 (* (- 9) s00)))
 (let ((?x913 (* (- 15) ?x588)))
 (let ((?x887 (* (- 36) ?x874)))
 (let ((?x803 (* 6 ?x802)))
 (let ((?x542 (* s s)))
 (let ((?x566 (* 3 ?x542)))
 (let ((?x548 (* (- 54) ?x519)))
 (let ((?x537 (+ (* (- 24) (* s r)) ?x548 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x566 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x803 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2053) ?x887 ?x913 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x984 (* 36 ?x2189) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x375 (* (- 3) s00)))
 (let ((?x601 (* (- 4) ?x588)))
 (let ((?x543 (* 2 ?x542)))
 (let ((?x533 (* (- 18) ?x519)))
 (let ((?x3635 (+ (* (- 9) (* s r)) ?x533 (* 9 (* r00 s00)) ?x543 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2053) ?x601 (* 18 (* r00 x)) ?x375 (* 6 ?x2189) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2004 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x375 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x466))))
 (let (($x1982 (and $x2064 (= ?x2004 0) (= ?x3635 0) (= ?x537 0) $x4144 $x2080)))
 (rewrite (= $x1982 $x3246)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x274 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x220 (- (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215) (* 3 ?x212 r00 ?x214 ?x214 ?x214))))
 (let ((?x222 (- (- ?x220 (* 12 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214)) (* 12 ?x212 r00 r00 r00 ?x214 ?x214))))
 (let ((?x226 (+ ?x222 (* 6 ?x212 ?x214 ?x214 x00) (* 12 ?x212 r00 r00 r00 ?x214 ?x214 ?x214) (* 12 ?x212 ?x212 r00 r00 ?x214 ?x214))))
 (let ((?x235 (+ (- ?x226 (* 3 ?x212 ?x212 ?x214 ?x214)) (* 3 ?x212 r00 ?x214 ?x214) (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214) (* ?x212 ?x212 ?x214 ?x214 ?x214) (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215) (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 s00) (* 3 ?x212 ?x214 ?x214 ?x214 s00))))
 (let ((?x239 (- (- ?x235 (* 12 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215)) (* 6 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x242 (+ ?x239 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215) (* 6 ?x212 r00 ?x214 ?x214 s00))))
 (let ((?x247 (+ (- ?x242 (* 3 ?x212 ?x214 ?x214 ?x214 ?x214)) (* 3 ?x212 ?x214 ?x214 ?x214) (* 3 ?x212 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x251 (+ (- ?x247 (* 6 ?x212 ?x214 ?x214 ?x214 x00)) (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x256 (- (- ?x251 (* 4 ?x212 ?x212 ?x214 ?x214 s00)) (* 3 ?x212 ?x214 ?x214 s00))))
 (let ((?x259 (+ (- ?x256 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 x00)) (* 12 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x265 (- (- ?x259 (* 3 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 3 ?x212 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x267 (- (- ?x265 (* 6 ?x212 r00 ?x214 ?x214 ?x214 s00)) (* 6 ?x212 ?x214 ?x214 ?x215))))
 (let (($x272 (or (not (= (+ ?x267 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215)) 0)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) $x272)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1996 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1953 (+ 3 s ?x213)))
 (let ((?x277 (* (- 1) s)))
 (let ((?x2212 (+ x ?x277)))
 (let ((?x1380 (+ 1 r)))
 (let ((?x3852 (+ (* 4 (* s00 ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 ?x1380 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 r00 ?x1380 ?x1953 ?x1953)) (* 6 (* x00 ?x1380 ?x1953 ?x1953)) (* 12 (* r00 r00 r00 ?x1380 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 ?x1380 ?x1380 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x1380 ?x1953 ?x1953)) (* 3 (* r00 ?x1380 ?x1953 ?x1953)) (* 2 (* ?x1380 ?x1380 ?x1953 ?x1953 ?x1953 ?x1953)) (* ?x1380 ?x1380 ?x1953 ?x1953 ?x1953) (* 3 (* ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 4 (* s00 ?x1380 ?x1380 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* r00 s00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 6 (* ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 6 (* r00 s00 ?x1380 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x1953 ?x1953 ?x1953 ?x1953)) (* 3 (* ?x1380 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1380 ?x1953 ?x1953 ?x1953)) (* 2 (* ?x1380 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953 ?x1953)) (* (- 4) (* s00 ?x1380 ?x1380 ?x1953 ?x1953)) (* (- 3) (* s00 ?x1380 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 r00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 3) (* ?x1380 ?x2212 ?x1953 ?x1953 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1380 ?x2212 ?x1953 ?x1953 ?x1953)) (* (- 6) (* r00 s00 ?x1380 ?x1953 ?x1953 ?x1953)) (* (- 6) (* ?x1380 ?x2212 ?x1953 ?x1953)) (* 6 (* ?x1380 ?x2212 ?x2212 ?x1953 ?x1953 ?x1953)))))
 (let (($x2080 (not (= ?x3852 0))))
 (let ((?x1343 (* x00 x00)))
 (let ((?x4300 (* 108 ?x1343)))
 (let ((?x3115 (* (- 9) s)))
 (let ((?x2189 (* r00 r00 s00)))
 (let ((?x3236 (* (- 36) ?x2189)))
 (let ((?x137 (* 9 s00)))
 (let ((?x588 (* s00 s00)))
 (let ((?x3307 (* 51 ?x588)))
 (let ((?x2053 (* r00 r00 s)))
 (let ((?x2452 (* 36 ?x2053)))
 (let ((?x1181 (* s00 s00 s00)))
 (let ((?x3095 (* 16 ?x1181)))
 (let ((?x802 (* s00 x00)))
 (let ((?x1397 (* (- 108) ?x802)))
 (let ((?x879 (* r00 r00 r00 x00)))
 (let ((?x4103 (* (- 432) ?x879)))
 (let ((?x519 (* r00 x00)))
 (let ((?x4605 (* 108 ?x519)))
 (let ((?x4306 (+ (* 216 (* r00 s00 x00)) ?x4605 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4103 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1397 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3095 (* (- 108) (* x s)) ?x2452 ?x3307 (* (- 108) (* r00 x)) ?x137 ?x3236 ?x3115 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4300)))
 (let (($x4144 (= ?x4306 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x984 (* (- 9) s00)))
 (let ((?x913 (* (- 15) ?x588)))
 (let ((?x874 (* r00 r00 x00)))
 (let ((?x887 (* (- 36) ?x874)))
 (let ((?x803 (* 6 ?x802)))
 (let ((?x542 (* s s)))
 (let ((?x566 (* 3 ?x542)))
 (let ((?x548 (* (- 54) ?x519)))
 (let ((?x537 (+ (* (- 24) (* s r)) ?x548 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x566 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x803 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2053) ?x887 ?x913 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x984 (* 36 ?x2189) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x375 (* (- 3) s00)))
 (let ((?x601 (* (- 4) ?x588)))
 (let ((?x543 (* 2 ?x542)))
 (let ((?x533 (* (- 18) ?x519)))
 (let ((?x3635 (+ (* (- 9) (* s r)) ?x533 (* 9 (* r00 s00)) ?x543 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2053) ?x601 (* 18 (* r00 x)) ?x375 (* 6 ?x2189) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2004 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x375 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2064 (= (+ s00 ?x277 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1982 (and $x2064 (= ?x2004 0) (= ?x3635 0) (= ?x537 0) $x4144 $x2080)))
 (let ((?x215 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x220 (- (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215) (* 3 ?x212 r00 ?x214 ?x214 ?x214))))
 (let ((?x222 (- (- ?x220 (* 12 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214)) (* 12 ?x212 r00 r00 r00 ?x214 ?x214))))
 (let ((?x226 (+ ?x222 (* 6 ?x212 ?x214 ?x214 x00) (* 12 ?x212 r00 r00 r00 ?x214 ?x214 ?x214) (* 12 ?x212 ?x212 r00 r00 ?x214 ?x214))))
 (let ((?x235 (+ (- ?x226 (* 3 ?x212 ?x212 ?x214 ?x214)) (* 3 ?x212 r00 ?x214 ?x214) (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214) (* ?x212 ?x212 ?x214 ?x214 ?x214) (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215) (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 s00) (* 3 ?x212 ?x214 ?x214 ?x214 s00))))
 (let ((?x239 (- (- ?x235 (* 12 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215)) (* 6 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x242 (+ ?x239 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215) (* 6 ?x212 r00 ?x214 ?x214 s00))))
 (let ((?x247 (+ (- ?x242 (* 3 ?x212 ?x214 ?x214 ?x214 ?x214)) (* 3 ?x212 ?x214 ?x214 ?x214) (* 3 ?x212 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x251 (+ (- ?x247 (* 6 ?x212 ?x214 ?x214 ?x214 x00)) (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x256 (- (- ?x251 (* 4 ?x212 ?x212 ?x214 ?x214 s00)) (* 3 ?x212 ?x214 ?x214 s00))))
 (let ((?x259 (+ (- ?x256 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 x00)) (* 12 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x265 (- (- ?x259 (* 3 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 3 ?x212 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x267 (- (- ?x265 (* 6 ?x212 r00 ?x214 ?x214 ?x214 s00)) (* 6 ?x212 ?x214 ?x214 ?x215))))
 (let (($x272 (or (not (= (+ ?x267 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215)) 0)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x273 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) $x272)))
 (rewrite (= $x273 $x1982)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x275 (asserted $x274)))
 (let ((@x2770 (mp (mp @x275 (quant-intro (proof-bind ?x1996) (= $x274 $x2089)) $x2089) (rewrite (= $x2089 $x2089)) $x2089)))
 (let ((@x3425 (mp (mp @x2770 (quant-intro (proof-bind ?x3245) (= $x2089 $x3235)) $x3235) (quant-intro (proof-bind ?x3300) (= $x3235 $x3067)) $x3067)))
 (let ((@x4340 (mp (mp~ @x3425 (sk (~ $x3067 $x4085)) $x4085) (rewrite (= $x4085 $x2221)) $x2221)))
 (let ((@x4439 (and-elim @x4340 $x4389)))
 (let ((@x4448 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4389) $x4513)) @x4439 $x4513)))
 (let (($x1658 (>= ?x4328 0)))
 (let ((@x4356 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4389) $x1658)) @x4439 $x1658)))
 (let (($x717 (<= ?x741 0)))
 (let ((@x1962 (and-elim @x4340 $x743)))
 (let ((@x5103 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x743) $x717)) @x1962 $x717)))
 (let (($x4775 (>= ?x741 0)))
 (let ((@x1673 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x743) $x4775)) @x1962 $x4775)))
 (let (($x1888 (<= ?x1173 0)))
 (let ((@x1963 (and-elim @x4340 $x1174)))
 (let ((@x4108 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1174) $x1888)) @x1963 $x1888)))
 (let (($x2200 (>= ?x1173 0)))
 (let ((@x1813 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1174) $x2200)) @x1963 $x2200)))
 (let (($x698 (<= ?x1944 0)))
 (let ((@x589 (and-elim @x4340 $x1945)))
 (let ((@x5098 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1945) $x698)) @x589 $x698)))
 (let (($x3730 (>= ?x1944 0)))
 (let ((@x2436 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1945) $x3730)) @x589 $x3730)))
 (let (($x3118 (not (<= ?x3308 (- 27)))))
 (let (($x3733 (>= ?x3308 (- 27))))
 (let ((@x4524 ((_ th-lemma arith) (hypothesis (not $x3733)) @x4356 @x4448 @x2436 @x5098 @x1813 @x4108 @x2436 @x5098 @x2436 @x5098 @x1813 @x4108 @x1813 @x4108 @x4356 @x4448 @x1673 @x5103 @x1673 @x5103 @x4356 @x4448 false)))
 (let ((@x2205 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3301 $x3118 (not $x3733))) (and-elim @x4340 $x4434) (or $x3118 (not $x3733)))))
 ((_ th-lemma arith) (unit-resolution @x2205 (lemma @x4524 $x3733) $x3118) @x4356 @x4448 @x2436 @x5098 @x1813 @x4108 @x2436 @x5098 @x2436 @x5098 @x1813 @x4108 @x1813 @x4108 @x4356 @x4448 @x1673 @x5103 @x1673 @x5103 @x4356 @x4448 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        35
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1076
 :arith-nonlinear-bounds    28
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      13
 :arith-tableau-max-columns 224
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.79
 :memory                    3.84
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                2918444
 :num-checks                1
 :propagations              12
 :rlimit-count              40721
 :time                      0.03
 :total-time                0.04)
