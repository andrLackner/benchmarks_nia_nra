unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x371 (* (- 1) k!2)))
 (let ((?x274 (+ (* 3 (* n!0 n!0)) (* 3 n!0) ?x371)))
 (let (($x184 (<= ?x274 (- 1))))
 (let (($x269 (= ?x274 (- 1))))
 (let ((?x422 (* m!1 m!1)))
 (let ((?x426 (* (- 27) c!3)))
 (let ((?x182 (* (- 32) k!2)))
 (let ((?x427 (* (- 5) m!1)))
 (let ((?x425 (* 9 n!0)))
 (let ((?x199 (* k!2 k!2)))
 (let ((?x331 (+ 13 (* (- 9) (* n!0 c!3)) ?x199 ?x425 ?x427 ?x182 ?x426 ?x422 (* (- 9) (* n!0 k!2)) (* 2 (* m!1 k!2)))))
 (let ((?x284 (+ m!1 k!2)))
 (let ((?x246 (+ 6 m!1)))
 (let ((?x247 (+ 1 n!0)))
 (let ((?x288 (+ 6 m!1 (* (- 1) (* ?x247 ?x247 ?x247 ?x246 ?x284 ?x284 ?x284)))))
 (let ((?x115 (* ?x288 ?x331)))
 (let (($x321 (= ?x115 0)))
 (let (($x114 (not $x321)))
 (let ((?x455 (* n!0 k!2)))
 (let ((?x187 (+ (* 2 n!0) ?x371 (* (- 3) c!3) ?x455)))
 (let (($x97 (= ?x187 (- 1))))
 (let ((?x104 (* 18 c!3)))
 (let ((?x239 (* 5 k!2)))
 (let ((?x464 (* (- 9) n!0)))
 (let ((?x205 (* (- 1) ?x199)))
 (let ((?x254 (+ (* 9 (* n!0 c!3)) ?x205 ?x464 ?x239 ?x104)))
 (let (($x312 (= ?x254 4)))
 (let ((?x305 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x320 (= ?x305 (- 6))))
 (let (($x471 (and $x320 $x312 $x97 $x269 $x114)))
 (let ((?x195 (+ 13 ?x426 ?x182 ?x427 ?x425 ?x199 (* (- 9) (* k!2 n!0)) (* (- 9) (* c!3 n!0)) (* 2 (* k!2 m!1)) ?x422)))
 (let ((?x251 (+ k!2 m!1)))
 (let ((?x194 (* (+ 6 m!1 (* (- 1) (* ?x247 ?x247 ?x247 ?x246 ?x251 ?x251 ?x251))) ?x195)))
 (let (($x273 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x428 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x104 ?x239 ?x464 ?x205 (* 9 (* c!3 n!0))) 4) $x273 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x194 0)))))
 (let (($x103 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x424 (* (- 5) m)))
 (let ((?x479 (+ 13 (* (- 27) c) (* (- 32) k) ?x424 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) (* m m))))
 (let ((?x72 (+ k m)))
 (let ((?x486 (+ 6 m)))
 (let ((?x339 (+ 1 n)))
 (let ((?x418 (* (- 1) (* ?x339 ?x339 ?x339 ?x486 ?x72 ?x72 ?x72))))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x258 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x206 (= (+ ?x40 ?x44 ?x208 ?x209 (* 9 (* c n))) 4)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 $x206 $x258 $x296 (not (= (* (+ 6 m ?x418) ?x479) 0))))))))))))))))))) :qid k!34))
 ))
 (let (($x308 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x424 (* (- 5) m)))
 (let ((?x96 (* (- 18) c)))
 (let ((?x366 (+ 13 ?x96 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x424 ?x48 ?x78)))
 (let ((?x486 (+ 6 m)))
 (let ((?x339 (+ 1 n)))
 (let ((?x418 (* (- 1) (* ?x339 ?x339 ?x339 ?x486 ?x72 ?x72 ?x72))))
 (let (($x217 (not (= (* (+ 6 ?x418 m) ?x366) 0))))
 (let (($x294 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x94 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x94 $x294 $x217))))))))))))))))))) :qid k!34))
 ))
 (let ((?x99 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x424 (* (- 5) m)))
 (let ((?x479 (+ 13 (* (- 27) c) (* (- 32) k) ?x424 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) (* m m))))
 (let ((?x72 (+ k m)))
 (let ((?x486 (+ 6 m)))
 (let ((?x339 (+ 1 n)))
 (let ((?x418 (* (- 1) (* ?x339 ?x339 ?x339 ?x486 ?x72 ?x72 ?x72))))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x258 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x206 (= (+ ?x40 ?x44 ?x208 ?x209 (* 9 (* c n))) 4)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x270 (and $x122 $x206 $x258 $x296 (not (= (* (+ 6 m ?x418) ?x479) 0)))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x96 (* (- 18) c)))
 (let ((?x366 (+ 13 ?x96 (* (- 23) k) (* (- 9) (* ?x339 (+ c k))) ?x424 ?x48 ?x78)))
 (let (($x217 (not (= (* (+ 6 ?x418 m) ?x366) 0))))
 (let (($x294 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x94 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x361 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x94 $x294 $x217)))
 (rewrite (= $x361 $x270)))))))))))))))))))))))))))
 ))
 (let (($x220 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x424 (* (- 5) m)))
 (let ((?x96 (* (- 18) c)))
 (let ((?x366 (+ 13 ?x96 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x424 ?x48 ?x78)))
 (let ((?x486 (+ 6 m)))
 (let ((?x339 (+ 1 n)))
 (let ((?x418 (* (- 1) (* ?x339 ?x339 ?x339 ?x486 ?x72 ?x72 ?x72))))
 (let (($x217 (not (= (* (+ 6 ?x418 m) ?x366) 0))))
 (let (($x294 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x164 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x223 (= (+ ?x96 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 $x223 $x164 $x294 $x217))))))))))))))) :qid k!34))
 ))
 (let ((?x310 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x424 (* (- 5) m)))
 (let ((?x96 (* (- 18) c)))
 (let ((?x366 (+ 13 ?x96 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x424 ?x48 ?x78)))
 (let ((?x486 (+ 6 m)))
 (let ((?x339 (+ 1 n)))
 (let ((?x418 (* (- 1) (* ?x339 ?x339 ?x339 ?x486 ?x72 ?x72 ?x72))))
 (let (($x217 (not (= (* (+ 6 ?x418 m) ?x366) 0))))
 (let (($x294 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x94 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x361 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x94 $x294 $x217)))
 (let (($x164 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x223 (= (+ ?x96 (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49) (- 4))))
 (let (($x233 (and $x122 $x223 $x164 $x294 $x217)))
 (rewrite (= $x233 $x361)))))))))))))))))))))))))
 ))
 (let (($x89 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x72 (+ k m)))
 (let ((?x83 (+ (* (- 1) ?x72 ?x72 ?x72 (+ m 6) ?x70 ?x70 ?x70) m 6)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x75 (- (- (* 4 1) (* 18 (+ c k))) (* 9 (+ c k) ?x70))))
 (let (($x86 (not (= (* (+ (- ?x75 (* 5 ?x72)) (* 9 ?x70) ?x78) ?x83) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x86))))))))))))))) :qid k!34))
 ))
 (let ((?x224 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x424 (* (- 5) m)))
 (let ((?x96 (* (- 18) c)))
 (let ((?x366 (+ 13 ?x96 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x424 ?x48 ?x78)))
 (let ((?x486 (+ 6 m)))
 (let ((?x339 (+ 1 n)))
 (let ((?x418 (* (- 1) (* ?x339 ?x339 ?x339 ?x486 ?x72 ?x72 ?x72))))
 (let (($x217 (not (= (* (+ 6 ?x418 m) ?x366) 0))))
 (let (($x294 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x164 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x223 (= (+ ?x96 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x233 (and $x122 $x223 $x164 $x294 $x217)))
 (let ((?x70 (+ n 1)))
 (let ((?x83 (+ (* (- 1) ?x72 ?x72 ?x72 (+ m 6) ?x70 ?x70 ?x70) m 6)))
 (let ((?x75 (- (- (* 4 1) (* 18 (+ c k))) (* 9 (+ c k) ?x70))))
 (let (($x86 (not (= (* (+ (- ?x75 (* 5 ?x72)) (* 9 ?x70) ?x78) ?x83) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x88 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x86))))
 (rewrite (= $x88 $x233)))))))))))))))))))))))))))))
 ))
 (let ((@x90 (asserted $x89)))
 (let ((@x359 (mp (mp @x90 (quant-intro (proof-bind ?x224) (= $x89 $x220)) $x220) (rewrite (= $x220 $x220)) $x220)))
 (let ((@x393 (mp (mp @x359 (quant-intro (proof-bind ?x310) (= $x220 $x308)) $x308) (quant-intro (proof-bind ?x99) (= $x308 $x103)) $x103)))
 (let ((@x404 (mp (mp~ @x393 (sk (~ $x103 $x428)) $x428) (rewrite (= $x428 $x471)) $x471)))
 (let ((@x653 (and-elim @x404 $x269)))
 (let ((@x280 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x269) $x184)) @x653 $x184)))
 (let (($x169 (>= ?x274 (- 1))))
 (let ((@x442 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x269) $x169)) @x653 $x169)))
 (let (($x167 (<= ?x187 (- 1))))
 (let ((@x145 (and-elim @x404 $x97)))
 (let ((@x318 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x97) $x167)) @x145 $x167)))
 (let (($x168 (>= ?x187 (- 1))))
 (let ((@x409 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x97) $x168)) @x145 $x168)))
 (let (($x166 (<= ?x254 4)))
 (let ((@x232 (and-elim @x404 $x312)))
 (let ((@x317 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x312) $x166)) @x232 $x166)))
 (let (($x162 (>= ?x254 4)))
 (let ((@x412 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x312) $x162)) @x232 $x162)))
 (let (($x153 (<= ?x305 (- 6))))
 (let ((@x334 (and-elim @x404 $x320)))
 (let ((@x401 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x320) $x153)) @x334 $x153)))
 (let (($x356 (>= ?x305 (- 6))))
 (let ((@x419 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x320) $x356)) @x334 $x356)))
 (let (($x911 (>= ?x288 0)))
 (let ((@x816 (hypothesis (not $x911))))
 (let (($x1069 (not (<= ?x115 0))))
 (let (($x185 (>= ?x115 0)))
 (let (($x447 (not $x185)))
 (let ((@x449 (hypothesis $x447)))
 (let ((@x673 ((_ th-lemma arith) @x449 @x816 @x419 @x401 @x442 @x280 @x442 @x280 @x419 @x401 @x412 @x317 @x409 @x318 false)))
 (let ((@x938 (unit-resolution (lemma @x673 (or $x911 $x185)) @x449 $x911)))
 (let (($x304 (<= ?x247 0)))
 (let (($x916 (not $x304)))
 (let ((@x908 (hypothesis $x304)))
 (let (($x327 (>= ?x247 0)))
 (let (($x883 (>= ?x246 (- 24))))
 (let (($x893 (not $x883)))
 (let (($x784 (<= n!0 (- 6))))
 (let (($x512 (>= ?x247 (- 3))))
 (let (($x499 (not $x512)))
 (let (($x365 (>= ?x247 (- 2))))
 (let (($x606 (not $x365)))
 (let (($x628 (<= n!0 (- 3))))
 (let ((@x637 (hypothesis (not $x327))))
 (let (($x623 (not $x628)))
 (let ((@x619 (hypothesis $x623)))
 (let ((@x614 (lemma ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1) @x449 @x401 @x619 @x419 @x637 @x401 @x619 @x419 @x637 false) (or $x628 $x185 $x327))))
 (let ((@x885 (unit-resolution @x614 @x637 @x449 $x628)))
 (let ((@x608 (hypothesis $x365)))
 (let ((@x647 (hypothesis $x628)))
 (let ((@x609 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) @x449 @x419 @x647 @x317 @x409 @x442 @x608 @x401 @x419 @x647 @x401 @x608 @x412 @x318 @x280 false)))
 (let (($x461 (>= n!0 (- 3))))
 (let (($x111 (not $x461)))
 (let ((@x552 (hypothesis $x606)))
 (let ((@x500 (unit-resolution (lemma ((_ th-lemma arith farkas -1 1) (hypothesis $x461) @x552 false) (or $x111 $x365)) @x552 $x111)))
 (let ((@x501 (hypothesis $x512)))
 (let ((@x498 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) @x449 @x419 @x552 @x317 @x409 @x442 @x500 @x501 @x401 @x419 @x552 @x401 @x501 @x412 @x318 @x280 @x500 false)))
 (let ((@x887 (unit-resolution (lemma @x498 (or $x499 $x185 $x365)) (unit-resolution (lemma @x609 (or $x606 $x185 $x623)) @x885 @x449 $x606) @x449 $x499)))
 (let (($x824 (not $x784)))
 (let ((@x820 (hypothesis $x824)))
 (let ((@x226 (hypothesis $x499)))
 (let ((@x821 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) @x449 @x419 @x226 @x317 @x409 @x401 @x820 @x442 @x280 @x419 @x226 @x401 @x820 @x412 @x318 @x280 @x442 false)))
 (let ((@x891 (hypothesis $x883)))
 (let ((@x700 (hypothesis $x784)))
 (let ((@x892 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 1 1 1) @x449 @x419 @x700 @x409 @x401 @x442 @x891 @x317 @x419 @x700 @x891 @x318 @x280 @x412 false)))
 (let ((@x889 (unit-resolution (lemma @x892 (or $x893 $x185 $x824)) (unit-resolution (lemma @x821 (or $x784 $x185 $x512)) @x887 @x449 $x784) @x449 $x893)))
 (let (($x872 (>= m!1 (- 31))))
 (let (($x439 (>= m!1 (- 16))))
 (let (($x113 (<= ?x284 1)))
 (let (($x230 (<= ?x284 0)))
 (let (($x443 (not $x230)))
 (let ((@x444 (hypothesis $x443)))
 (let (($x265 (<= m!1 (- 16))))
 (let (($x643 (not $x265)))
 (let (($x431 (not $x439)))
 (let ((@x432 (hypothesis $x431)))
 (let ((@x450 ((_ th-lemma arith) @x449 @x444 @x401 @x432 @x419 @x442 @x280 @x419 @x401 @x442 @x280 @x442 @x280 @x442 @x280 @x409 @x318 @x442 @x280 @x419 @x401 @x442 @x280 @x412 @x317 @x442 @x280 @x419 @x401 @x412 @x317 @x409 @x318 false)))
 (let ((@x645 (lemma ((_ th-lemma arith gcd-test -1/6 -1/6 -1/6 -1/6) @x419 @x401 (hypothesis $x439) (hypothesis $x265) false) (or $x643 $x431))))
 (let ((@x625 (unit-resolution @x645 (unit-resolution (lemma @x450 (or $x439 $x185 $x230)) @x444 @x449 $x439) $x643)))
 (let ((@x622 ((_ th-lemma arith farkas -1 -1 -1 -1 -1 1 -3 -2 -2 -2 -2 -2 -2 -5 12 -36 -36 -36 12 12 12 1 1 1 1 1) @x419 @x647 @x401 @x419 @x625 @x412 @x318 @x419 @x647 @x419 @x625 @x280 @x647 @x401 @x442 @x637 @x419 @x625 @x419 @x625 @x647 @x449 @x444 @x637 @x419 @x647 false)))
 (let ((@x897 (unit-resolution (lemma @x622 (or $x623 $x327 $x185 $x230)) @x885 @x449 @x637 $x230)))
 (let ((@x245 (hypothesis $x113)))
 (let (($x311 (>= n!0 (- 12))))
 (let ((@x357 (hypothesis (not $x311))))
 (let ((@x154 (lemma ((_ th-lemma arith) @x357 @x245 @x357 @x401 @x280 false) (or $x311 (not $x113)))))
 (let ((@x131 ((_ th-lemma arith farkas 1/3 1/3 1/3 3 1 1 1 1) @x401 @x280 @x245 (unit-resolution @x154 @x245 $x311) @x401 @x280 @x245 @x432 false)))
 (let ((@x901 (unit-resolution (lemma @x131 (or (not $x113) $x439)) (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x443 $x113)) @x897 $x113) $x439)))
 (let ((@x884 (lemma ((_ th-lemma arith farkas -1/6 -1/6 1/6 1/6) (hypothesis $x872) @x419 (hypothesis $x893) @x401 false) (or (not $x872) $x883))))
 (let ((@x903 (unit-resolution @x884 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x872 $x431)) @x901 $x872) @x889 false)))
 (let ((@x940 (unit-resolution (lemma @x903 (or $x327 $x185)) @x449 $x327)))
 (let ((@x941 ((_ th-lemma arith farkas 1 -3 -2 -2 -2 -2 -5 -12 36 36 72 12 12 1 1 1 1 1 1 1) @x317 @x409 @x940 @x401 @x908 @x419 @x419 @x442 @x908 @x940 @x908 @x940 @x908 @x449 @x940 @x908 @x401 @x940 @x908 @x419 false)))
 (let ((@x939 (unit-resolution (lemma @x941 (or $x916 $x185)) @x449 $x916)))
 (let ((?x252 (* n!0 n!0)))
 (let (($x190 (>= ?x252 0)))
 (let ((@x112 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x190)) false) $x190)))
 (let ((@x870 ((_ th-lemma arith) @x419 @x280 @x112 @x401 @x939 @x938 @x938 @x401 @x280 @x112 @x939 @x938 @x401 @x280 @x112 @x939 @x938 @x419 @x419 @x280 @x112 @x401 @x939 @x938 @x401 @x280 @x112 @x939 @x938 @x419 @x419 @x280 false)))
 (let ((@x1104 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x321 $x1069 $x447)) (and-elim @x404 $x114) (or $x1069 $x447))))
 (let ((@x1105 (unit-resolution @x1104 (lemma @x870 $x185) $x1069)))
 (let ((@x1106 ((_ th-lemma arith) @x1105 @x816 @x419 @x401 @x419 @x401 @x442 @x280 @x419 @x401 @x419 @x401 @x409 @x318 @x419 @x401 @x442 @x280 @x419 @x401 @x412 @x317 @x409 @x318 false)))
 (let ((@x1061 (lemma ((_ th-lemma arith farkas 1 1 1) @x1105 (lemma @x1106 $x911) (hypothesis (<= ?x288 0)) false) (not (<= ?x288 0)))))
 ((_ th-lemma arith) @x1105 @x1061 @x442 @x280 @x419 @x401 @x442 @x280 @x419 @x401 @x442 @x280 @x419 @x401 @x412 @x317 @x409 @x318 @x442 @x280 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 73
 :arith-assert-diseq        16
 :arith-assert-lower        651
 :arith-assert-upper        546
 :arith-bound-prop          38
 :arith-branch-var          31
 :arith-conflicts           48
 :arith-eq-adapter          17
 :arith-fixed-eqs           103
 :arith-gcd-tests           157
 :arith-gomory-cuts         21
 :arith-grobner             72
 :arith-ineq-splits         31
 :arith-max-min             4388
 :arith-nonlinear-bounds    141
 :arith-nonlinear-horner    752
 :arith-num-rows            15
 :arith-offset-eqs          3
 :arith-patches             70
 :arith-patches_succ        9
 :arith-pivots              1865
 :arith-pseudo-nonlinear    102
 :arith-row-summations      12605
 :arith-tableau-max-columns 47
 :arith-tableau-max-rows    15
 :conflicts                 54
 :decisions                 223
 :del-clause                227
 :final-checks              221
 :max-memory                3.98
 :memory                    3.24
 :minimized-lits            10
 :mk-bool-var               297
 :mk-clause                 271
 :num-allocs                29470224
 :num-checks                1
 :propagations              338
 :rlimit-count              949700
 :time                      0.35
 :total-time                0.36)
