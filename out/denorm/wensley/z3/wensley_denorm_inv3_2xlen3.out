unsat
((set-logic NRA)
(declare-fun d!6 () Real)
(declare-fun a!8 () Real)
(declare-fun b!7 () Real)
(declare-fun y!5 () Real)
(proof
(let ((?x1498 (* a!8 d!6)))
 (let ((?x589 (* (/ 1.0 2.0) ?x1498)))
 (let ((?x1491 (* a00 d!6)))
 (let ((?x337 (* (- (/ 1.0 2.0)) ?x1491)))
 (let ((?x507 (* y!5 b!7)))
 (let ((?x1380 (* (- 1.0) ?x507)))
 (let ((?x1514 (* y00 b!7)))
 (let ((?x534 (+ ?x1514 ?x1380 ?x337 ?x589)))
 (let (($x885 (>= ?x534 0.0)))
 (let ((?x1266 (+ (* 2.0 ?x507) ?x1491 (* (- 1.0) ?x1498) (* (- 2.0) ?x1514))))
 (let (($x1466 (<= ?x1266 0.0)))
 (let (($x1516 (= 0.0 ?x1266)))
 (let ((@x1284 (symm (commutativity (= $x1516 (= ?x1266 0.0))) (= (= ?x1266 0.0) $x1516))))
 (let (($x1279 (= ?x1266 0.0)))
 (let ((?x1502 (+ ?x1380 ?x337 ?x589 ?x1514)))
 (let ((?x718 (* (/ 1.0 32.0) (* a!8 d!6 d!6 d!6 d!6 d!6))))
 (let ((?x366 (* (/ 3.0 4.0) (* a!8 d!6 y!5 y!5 b!7 b!7 b!7))))
 (let ((?x495 (* (/ 1.0 8.0) (* a!8 d!6 d!6 d!6 y!5 y!5))))
 (let ((?x1220 (* (/ 1.0 32.0) (* d!6 d!6 d!6 d!6 d!6 b!7))))
 (let ((?x719 (* (/ 1.0 8.0) (* a!8 d!6 d!6 d!6 d!6 y!5))))
 (let ((?x712 (* (/ 1.0 8.0) (* d!6 d!6 d!6 d!6 y!5 b!7))))
 (let ((?x202 (* (/ 3.0 4.0) (* a!8 a!8 d!6 y!5 y!5 b!7 b!7))))
 (let ((?x415 (* (/ 1.0 8.0) (* d!6 d!6 y!5 b!7 b!7 b!7 b!7))))
 (let ((?x1363 (* (/ 1.0 4.0) (* a!8 a!8 a!8 d!6 y!5 y!5 b!7))))
 (let ((?x678 (* (/ 1.0 4.0) (* d!6 y!5 y!5 b!7 b!7 b!7 b!7))))
 (let ((?x707 (* (/ 1.0 8.0) (* d!6 d!6 d!6 y!5 y!5 b!7))))
 (let ((?x1556 (* (/ 3.0 8.0) (* a!8 d!6 d!6 y!5 b!7 b!7 b!7))))
 (let ((?x706 (* (/ 3.0 8.0) (* a!8 a!8 d!6 d!6 y!5 b!7 b!7))))
 (let ((?x183 (* a!8 a!8 a!8 d!6 d!6 y!5 b!7)))
 (let ((?x541 (* (/ 1.0 8.0) ?x183)))
 (let ((?x725 (+ ?x541 ?x706 ?x1556 ?x707 ?x678 ?x1363 ?x415 ?x202 ?x712 ?x719 ?x1220 ?x495 ?x366 ?x718)))
 (let ((?x669 (* (/ 1.0 2.0) (* d!6 y!5 y!5 b!7 b!7 b!7))))
 (let ((?x693 (* (/ 3.0 2.0) (* a!8 a!8 d!6 y!5 y!5 b!7))))
 (let ((?x195 (* (/ 9.0 4.0) (* a!8 d!6 d!6 y!5 b!7 b!7))))
 (let ((?x1254 (* (/ 1.0 2.0) (* a!8 a!8 a!8 d!6 y!5 y!5))))
 (let ((?x743 (* (/ 3.0 4.0) (* a!8 a!8 d!6 d!6 d!6 b!7))))
 (let ((?x1102 (* (- (/ 1.0 8.0)) (* a!8 y!5 y!5 b!7 b!7 b!7))))
 (let ((?x1397 (* (/ 1.0 4.0) (* d!6 d!6 d!6 b!7 b!7 b!7))))
 (let ((?x467 (* (- (/ 1.0 8.0)) (* y!5 y!5 b!7 b!7 b!7 b!7))))
 (let ((?x856 (* (/ 3.0 4.0) (* d!6 d!6 y!5 b!7 b!7 b!7))))
 (let ((?x1253 (* (- (/ 1.0 32.0)) (* d!6 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x571 (* (/ 1.0 4.0) (* a!8 a!8 a!8 d!6 d!6 d!6))))
 (let ((?x1301 (* (/ 9.0 4.0) (* a!8 a!8 d!6 d!6 y!5 b!7))))
 (let ((?x904 (* (/ 3.0 4.0) (* a!8 d!6 d!6 d!6 b!7 b!7))))
 (let ((?x1628 (* (- (/ 1.0 8.0)) (* d!6 y!5 b!7 b!7 b!7 b!7))))
 (let ((?x1469 (* (- (/ 1.0 8.0)) (* a!8 d!6 y!5 b!7 b!7 b!7))))
 (let ((?x682 (* a!8 a!8 a!8 d!6 d!6 y!5)))
 (let ((?x148 (* (/ 3.0 4.0) ?x682)))
 (let ((?x1550 (* (/ 3.0 2.0) (* a!8 d!6 y!5 y!5 b!7 b!7))))
 (let ((?x666 (* (- (/ 1.0 32.0)) (* a!8 d!6 d!6 b!7 b!7 b!7))))
 (let ((?x515 (+ ?x666 ?x1550 ?x148 ?x1469 ?x1628 ?x904 ?x1301 ?x571 ?x1253 ?x856 ?x467 ?x1397 ?x1102 ?x743 ?x1254 ?x195 ?x693 ?x669)))
 (let ((?x726 (* ?x515 ?x725 ?x1502)))
 (let (($x544 (= ?x726 0.0)))
 (let (($x728 (not $x544)))
 (let ((?x1623 (* (+ (* (/ 1.0 4.0) ?x682) ?x1102 ?x1254) (+ (* (- (/ 1.0 8.0)) ?x183) ?x1363 ?x495) ?x1502)))
 (let (($x1370 (= ?x1623 0.0)))
 (let (($x1626 (not $x1370)))
 (let (($x659 (or $x1626 $x728)))
 (let ((?x104 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x1478 (= (+ ?x30 ?x104 (* 2.0 (* b00 y!5)) (* (- 1.0) (* d00 a!8))) 0.0)))
 (let (($x1290 (and $x1478 (= (+ (* b00 d!6) (* (- 1.0) (* d00 b!7))) 0.0) $x1279 $x659)))
 (let ((?x1388 (* b!7 y00)))
 (let ((?x1394 (+ (* (/ 1.0 2.0) (* d!6 a!8)) ?x1380 ?x1388 (* (- (/ 1.0 2.0)) (* d!6 a00)))))
 (let ((?x1164 (* (/ 1.0 8.0) (* y!5 y!5 d!6 d!6 d!6 a!8))))
 (let ((?x894 (* (/ 1.0 4.0) (* y!5 y!5 d!6 b!7 a!8 a!8 a!8))))
 (let ((?x1229 (+ (* (/ 1.0 8.0) (* y!5 d!6 d!6 b!7 a!8 a!8 a!8)) ?x894 ?x1164 (* (/ 1.0 4.0) (* y!5 y!5 d!6 b!7 b!7 b!7 b!7)) (* (/ 3.0 4.0) (* y!5 y!5 d!6 b!7 b!7 b!7 a!8)) (* (/ 3.0 4.0) (* y!5 y!5 d!6 b!7 b!7 a!8 a!8)) (* (/ 1.0 8.0) (* y!5 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 3.0 8.0) (* y!5 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 3.0 8.0) (* y!5 d!6 d!6 b!7 b!7 a!8 a!8)) (* (/ 1.0 8.0) (* y!5 y!5 d!6 d!6 d!6 b!7)) (* (/ 1.0 8.0) (* y!5 d!6 d!6 d!6 d!6 b!7)) (* (/ 1.0 8.0) (* y!5 d!6 d!6 d!6 d!6 a!8)) ?x1220 (* (/ 1.0 32.0) (* d!6 d!6 d!6 d!6 d!6 a!8)))))
 (let ((?x234 (* (/ 1.0 2.0) (* y!5 y!5 d!6 a!8 a!8 a!8))))
 (let ((?x1074 (* (- (/ 1.0 8.0)) (* y!5 y!5 b!7 b!7 b!7 a!8))))
 (let ((?x1025 (+ (* (/ 3.0 4.0) (* y!5 d!6 d!6 a!8 a!8 a!8)) ?x1074 ?x234 (* (/ 3.0 4.0) (* y!5 d!6 d!6 b!7 b!7 b!7)) (* (/ 9.0 4.0) (* y!5 d!6 d!6 b!7 b!7 a!8)) (* (/ 9.0 4.0) (* y!5 d!6 d!6 b!7 a!8 a!8)) ?x1397 (* (/ 3.0 4.0) (* d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 4.0) (* d!6 d!6 d!6 b!7 a!8 a!8)) (* (/ 1.0 4.0) (* d!6 d!6 d!6 a!8 a!8 a!8)) ?x467 (* (- (/ 1.0 8.0)) (* y!5 d!6 b!7 b!7 b!7 b!7)) (* (- (/ 1.0 8.0)) (* y!5 d!6 b!7 b!7 b!7 a!8)) ?x1253 (* (- (/ 1.0 32.0)) (* d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 1.0 2.0) (* y!5 y!5 d!6 b!7 b!7 b!7)) (* (/ 3.0 2.0) (* y!5 y!5 d!6 b!7 b!7 a!8)) (* (/ 3.0 2.0) (* y!5 y!5 d!6 b!7 a!8 a!8)))))
 (let ((?x903 (+ (* (- (/ 1.0 8.0)) (* y!5 d!6 d!6 b!7 a!8 a!8 a!8)) ?x894 ?x1164)))
 (let ((?x624 (* (+ (* (/ 1.0 4.0) (* y!5 d!6 d!6 a!8 a!8 a!8)) ?x1074 ?x234) ?x903 ?x1394)))
 (let ((?x593 (* d!6 a!8)))
 (let (($x171 (= (+ ?x593 (* (- 2.0) ?x507) (* 2.0 ?x1388) (* (- 1.0) (* d!6 a00))) 0.0)))
 (let (($x845 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x104 (* 2.0 (* y!5 b00))) 0.0)))
 (let (($x1134 (and $x845 (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) $x171 (or (not (= ?x624 0.0)) (not (= (* ?x1025 ?x1229 ?x1394) 0.0))))))
 (let (($x275 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x149 (* b y00)))
 (let ((?x122 (* y b)))
 (let ((?x186 (* (- 1.0) ?x122)))
 (let ((?x112 (* d a)))
 (let ((?x153 (* (/ 1.0 2.0) ?x112)))
 (let ((?x238 (+ ?x153 ?x186 ?x149 (* (- (/ 1.0 2.0)) (* d a00)))))
 (let ((?x343 (* (/ 1.0 8.0) (* y y d d d a))))
 (let ((?x328 (* (/ 1.0 4.0) (* y y d b a a a))))
 (let ((?x1636 (+ (* (/ 1.0 8.0) (* y d d b a a a)) ?x328 ?x343 (* (/ 1.0 4.0) (* y y d b b b b)) (* (/ 3.0 4.0) (* y y d b b b a)) (* (/ 3.0 4.0) (* y y d b b a a)) (* (/ 1.0 8.0) (* y d d b b b b)) (* (/ 3.0 8.0) (* y d d b b b a)) (* (/ 3.0 8.0) (* y d d b b a a)) (* (/ 1.0 8.0) (* y y d d d b)) (* (/ 1.0 8.0) (* y d d d d b)) (* (/ 1.0 8.0) (* y d d d d a)) (* (/ 1.0 32.0) (* d d d d d b)) (* (/ 1.0 32.0) (* d d d d d a)))))
 (let ((?x305 (* (/ 1.0 2.0) (* y y d a a a))))
 (let ((?x287 (* (- (/ 1.0 8.0)) (* y y b b b a))))
 (let ((?x992 (+ (* (/ 3.0 4.0) (* y d d a a a)) ?x287 ?x305 (* (/ 3.0 4.0) (* y d d b b b)) (* (/ 9.0 4.0) (* y d d b b a)) (* (/ 9.0 4.0) (* y d d b a a)) (* (/ 1.0 4.0) (* d d d b b b)) (* (/ 3.0 4.0) (* d d d b b a)) (* (/ 3.0 4.0) (* d d d b a a)) (* (/ 1.0 4.0) (* d d d a a a)) (* (- (/ 1.0 8.0)) (* y y b b b b)) (* (- (/ 1.0 8.0)) (* y d b b b b)) (* (- (/ 1.0 8.0)) (* y d b b b a)) (* (- (/ 1.0 32.0)) (* d d b b b b)) (* (- (/ 1.0 32.0)) (* d d b b b a)) (* (/ 1.0 2.0) (* y y d b b b)) (* (/ 3.0 2.0) (* y y d b b a)) (* (/ 3.0 2.0) (* y y d b a a)))))
 (let ((?x316 (* y d d b a a a)))
 (let ((?x355 (* (- (/ 1.0 8.0)) ?x316)))
 (let ((?x361 (+ ?x355 ?x328 ?x343)))
 (let ((?x311 (+ (* (/ 1.0 4.0) (* y d d a a a)) ?x287 ?x305)))
 (let (($x1578 (or (not (= (* ?x311 ?x361 ?x238) 0.0)) (not (= (* ?x992 ?x1636 ?x238) 0.0)))))
 (let (($x179 (= (+ ?x112 (* (- 2.0) ?x122) (* 2.0 ?x149) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x101 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x104 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x136 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x104 (* 2.0 (* y b00))) 0.0)))
 (and $x136 $x101 $x179 $x1578))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x1528 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x48 (* a00 d)))
 (let ((?x1037 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x1081 (* y00 b)))
 (let ((?x1184 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x1081 ?x1037)))
 (let ((?x1089 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x73 (+ a b)))
 (let ((?x1508 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1089 ?x1089 d b)) (* (/ 1.0 8.0) (* ?x73 ?x1089 ?x1089 d d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x73 ?x73 ?x1089 d d b)))))
 (let ((?x1052 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1089 d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x1089 ?x1089 b b b)) (* (/ 1.0 2.0) (* ?x73 ?x73 ?x73 ?x1089 ?x1089 d)))))
 (let ((?x316 (* y d d b a a a)))
 (let ((?x355 (* (- (/ 1.0 8.0)) ?x316)))
 (let ((?x343 (* (/ 1.0 8.0) (* y y d d d a))))
 (let ((?x328 (* (/ 1.0 4.0) (* y y d b a a a))))
 (let ((?x305 (* (/ 1.0 2.0) (* y y d a a a))))
 (let ((?x287 (* (- (/ 1.0 8.0)) (* y y b b b a))))
 (let ((?x311 (+ (* (/ 1.0 4.0) (* y d d a a a)) ?x287 ?x305)))
 (let ((?x1261 (* ?x311 (+ ?x328 ?x343 ?x355) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x1081 ?x1037))))
 (let ((?x122 (* y b)))
 (let ((?x144 (* (- 2.0) ?x122)))
 (let ((?x112 (* d a)))
 (let ((?x30 (* a00 d00)))
 (let ((?x104 (* (- 2.0) (* b00 y00))))
 (let (($x1066 (= (+ ?x104 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (and $x1066 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) (= (+ ?x112 ?x144 (* 2.0 ?x1081) (* (- 1.0) ?x48)) 0.0) (or (not (= ?x1261 0.0)) (not (= (* ?x1052 ?x1508 ?x1184) 0.0)))))))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x225 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x149 (* b y00)))
 (let ((?x122 (* y b)))
 (let ((?x186 (* (- 1.0) ?x122)))
 (let ((?x112 (* d a)))
 (let ((?x153 (* (/ 1.0 2.0) ?x112)))
 (let ((?x238 (+ ?x153 ?x186 ?x149 (* (- (/ 1.0 2.0)) (* d a00)))))
 (let ((?x343 (* (/ 1.0 8.0) (* y y d d d a))))
 (let ((?x328 (* (/ 1.0 4.0) (* y y d b a a a))))
 (let ((?x1636 (+ (* (/ 1.0 8.0) (* y d d b a a a)) ?x328 ?x343 (* (/ 1.0 4.0) (* y y d b b b b)) (* (/ 3.0 4.0) (* y y d b b b a)) (* (/ 3.0 4.0) (* y y d b b a a)) (* (/ 1.0 8.0) (* y d d b b b b)) (* (/ 3.0 8.0) (* y d d b b b a)) (* (/ 3.0 8.0) (* y d d b b a a)) (* (/ 1.0 8.0) (* y y d d d b)) (* (/ 1.0 8.0) (* y d d d d b)) (* (/ 1.0 8.0) (* y d d d d a)) (* (/ 1.0 32.0) (* d d d d d b)) (* (/ 1.0 32.0) (* d d d d d a)))))
 (let ((?x305 (* (/ 1.0 2.0) (* y y d a a a))))
 (let ((?x287 (* (- (/ 1.0 8.0)) (* y y b b b a))))
 (let ((?x992 (+ (* (/ 3.0 4.0) (* y d d a a a)) ?x287 ?x305 (* (/ 3.0 4.0) (* y d d b b b)) (* (/ 9.0 4.0) (* y d d b b a)) (* (/ 9.0 4.0) (* y d d b a a)) (* (/ 1.0 4.0) (* d d d b b b)) (* (/ 3.0 4.0) (* d d d b b a)) (* (/ 3.0 4.0) (* d d d b a a)) (* (/ 1.0 4.0) (* d d d a a a)) (* (- (/ 1.0 8.0)) (* y y b b b b)) (* (- (/ 1.0 8.0)) (* y d b b b b)) (* (- (/ 1.0 8.0)) (* y d b b b a)) (* (- (/ 1.0 32.0)) (* d d b b b b)) (* (- (/ 1.0 32.0)) (* d d b b b a)) (* (/ 1.0 2.0) (* y y d b b b)) (* (/ 3.0 2.0) (* y y d b b a)) (* (/ 3.0 2.0) (* y y d b a a)))))
 (let ((?x316 (* y d d b a a a)))
 (let ((?x355 (* (- (/ 1.0 8.0)) ?x316)))
 (let ((?x361 (+ ?x355 ?x328 ?x343)))
 (let ((?x311 (+ (* (/ 1.0 4.0) (* y d d a a a)) ?x287 ?x305)))
 (let (($x1578 (or (not (= (* ?x311 ?x361 ?x238) 0.0)) (not (= (* ?x992 ?x1636 ?x238) 0.0)))))
 (let (($x179 (= (+ ?x112 (* (- 2.0) ?x122) (* 2.0 ?x149) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x101 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x104 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x136 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x104 (* 2.0 (* y b00))) 0.0)))
 (let (($x117 (and $x136 $x101 $x179 $x1578)))
 (let ((?x48 (* a00 d)))
 (let ((?x1037 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x1081 (* y00 b)))
 (let ((?x1184 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x1081 ?x1037)))
 (let ((?x1089 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x73 (+ a b)))
 (let ((?x1508 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1089 ?x1089 d b)) (* (/ 1.0 8.0) (* ?x73 ?x1089 ?x1089 d d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x73 ?x73 ?x1089 d d b)))))
 (let ((?x1052 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1089 d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x1089 ?x1089 b b b)) (* (/ 1.0 2.0) (* ?x73 ?x73 ?x73 ?x1089 ?x1089 d)))))
 (let (($x933 (not (= (* ?x311 (+ ?x328 ?x343 ?x355) (+ ?x153 ?x186 ?x1081 ?x1037)) 0.0))))
 (let (($x1066 (= (+ ?x104 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x1268 (and $x1066 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) (= (+ ?x112 (* (- 2.0) ?x122) (* 2.0 ?x1081) (* (- 1.0) ?x48)) 0.0) (or $x933 (not (= (* ?x1052 ?x1508 ?x1184) 0.0))))))
 (rewrite (= $x1268 $x117)))))))))))))))))))))))))))))))))))))
 ))
 (let (($x95 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x51 (/ d 2.0)))
 (let ((?x75 (+ y ?x51)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x73 (+ a b)))
 (let ((?x87 (+ (* ?x73 ?x73 ?x73 ?x53 ?x51 ?x75 ?x75) (* ?x73 ?x51 ?x51 ?x51 ?x75 ?x75))))
 (let ((?x82 (- (* ?x73 ?x73 ?x73 ?x51 ?x51 ?x75) (* ?x73 ?x53 ?x53 ?x53 ?x75 ?x75))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x79 (- (+ (- (* ?x73 ?x51) (* 2.0 ?x53 ?x75)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x90 (* ?x79 (+ ?x82 (* ?x73 ?x73 ?x73 ?x51 ?x75 ?x75)) (- ?x87 (* ?x73 ?x73 ?x73 ?x53 ?x51 ?x51 ?x75)))))
 (let ((?x67 (+ (* a a a ?x53 ?x51 y y) (* a ?x51 ?x51 ?x51 y y))))
 (let ((?x62 (- (* a a a ?x51 ?x51 y) (* a ?x53 ?x53 ?x53 y y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x70 (* ?x59 (+ ?x62 (* a a a ?x51 y y)) (- ?x67 (* a a a ?x53 ?x51 ?x51 y)))))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let ((?x30 (* a00 d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x70 0.0)) (not (= ?x90 0.0)))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x1080 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x48 (* a00 d)))
 (let ((?x1037 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x1081 (* y00 b)))
 (let ((?x1184 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x1081 ?x1037)))
 (let ((?x1089 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x73 (+ a b)))
 (let ((?x1508 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1089 ?x1089 d b)) (* (/ 1.0 8.0) (* ?x73 ?x1089 ?x1089 d d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x73 ?x73 ?x1089 d d b)))))
 (let ((?x1052 (+ (* (/ 1.0 4.0) (* ?x73 ?x73 ?x73 ?x1089 d d)) (* (- (/ 1.0 8.0)) (* ?x73 ?x1089 ?x1089 b b b)) (* (/ 1.0 2.0) (* ?x73 ?x73 ?x73 ?x1089 ?x1089 d)))))
 (let ((?x316 (* y d d b a a a)))
 (let ((?x355 (* (- (/ 1.0 8.0)) ?x316)))
 (let ((?x343 (* (/ 1.0 8.0) (* y y d d d a))))
 (let ((?x328 (* (/ 1.0 4.0) (* y y d b a a a))))
 (let ((?x305 (* (/ 1.0 2.0) (* y y d a a a))))
 (let ((?x287 (* (- (/ 1.0 8.0)) (* y y b b b a))))
 (let ((?x311 (+ (* (/ 1.0 4.0) (* y d d a a a)) ?x287 ?x305)))
 (let ((?x1261 (* ?x311 (+ ?x328 ?x343 ?x355) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x1081 ?x1037))))
 (let ((?x122 (* y b)))
 (let ((?x144 (* (- 2.0) ?x122)))
 (let ((?x112 (* d a)))
 (let ((?x30 (* a00 d00)))
 (let ((?x104 (* (- 2.0) (* b00 y00))))
 (let (($x1066 (= (+ ?x104 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x1268 (and $x1066 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) (= (+ ?x112 ?x144 (* 2.0 ?x1081) (* (- 1.0) ?x48)) 0.0) (or (not (= ?x1261 0.0)) (not (= (* ?x1052 ?x1508 ?x1184) 0.0))))))
 (let ((?x51 (/ d 2.0)))
 (let ((?x75 (+ y ?x51)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x87 (+ (* ?x73 ?x73 ?x73 ?x53 ?x51 ?x75 ?x75) (* ?x73 ?x51 ?x51 ?x51 ?x75 ?x75))))
 (let ((?x82 (- (* ?x73 ?x73 ?x73 ?x51 ?x51 ?x75) (* ?x73 ?x53 ?x53 ?x53 ?x75 ?x75))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x79 (- (+ (- (* ?x73 ?x51) (* 2.0 ?x53 ?x75)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x90 (* ?x79 (+ ?x82 (* ?x73 ?x73 ?x73 ?x51 ?x75 ?x75)) (- ?x87 (* ?x73 ?x73 ?x73 ?x53 ?x51 ?x51 ?x75)))))
 (let ((?x67 (+ (* a a a ?x53 ?x51 y y) (* a ?x51 ?x51 ?x51 y y))))
 (let ((?x62 (- (* a a a ?x51 ?x51 y) (* a ?x53 ?x53 ?x53 y y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x70 (* ?x59 (+ ?x62 (* a a a ?x51 y y)) (- ?x67 (* a a a ?x53 ?x51 ?x51 y)))))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (let (($x94 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x70 0.0)) (not (= ?x90 0.0))))))
 (rewrite (= $x94 $x1268))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x96 (asserted $x95)))
 (let ((@x1477 (mp (mp @x96 (quant-intro (proof-bind ?x1080) (= $x95 $x1528)) $x1528) (quant-intro (proof-bind ?x225) (= $x1528 $x275)) $x275)))
 (let ((@x1357 (mp (mp~ @x1477 (sk (~ $x275 $x1134)) $x1134) (rewrite (= $x1134 $x1290)) $x1290)))
 (let ((@x1425 (and-elim @x1357 $x1279)))
 (let ((@x1272 (mp @x1425 @x1284 $x1516)))
 (let ((@x1173 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1516) $x1466)) @x1272 $x1466)))
 (let ((@x1464 (lemma ((_ th-lemma arith) @x1173 (hypothesis (not $x885)) false) $x885)))
 (let ((?x235 (+ ?x669 ?x666 ?x1550 ?x1469 ?x1628 ?x904 ?x1301 ?x571 ?x1253 ?x856 ?x467 ?x1397 ?x743 ?x195 ?x693 ?x1254 ?x148 ?x1102)))
 (let (($x266 (<= ?x235 0.0)))
 (let (($x761 (not $x266)))
 (let (($x239 (>= ?x235 0.0)))
 (let (($x538 (<= ?x534 0.0)))
 (let (($x150 (>= ?x1266 0.0)))
 (let ((@x1115 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1516) $x150)) @x1272 $x150)))
 (let ((@x1169 (lemma ((_ th-lemma arith) (hypothesis (not $x538)) @x1115 false) $x538)))
 (let (($x717 (not $x239)))
 (let ((@x715 (hypothesis $x717)))
 (let ((?x1406 (+ ?x1363 ?x718 ?x706 ?x1556 ?x707 ?x678 ?x415 ?x202 ?x712 ?x719 ?x1220 ?x366 ?x495 ?x541)))
 (let (($x1407 (<= ?x1406 0.0)))
 (let (($x767 (not $x1407)))
 (let (($x739 (= ?x1406 0.0)))
 (let (($x780 (not $x739)))
 (let (($x242 (= ?x534 0.0)))
 (let (($x1480 (or (not $x242) $x1370)))
 (let ((@x750 (unit-resolution ((_ th-lemma arith) $x1480) (hypothesis $x1626) (hypothesis $x242) false)))
 (let ((@x744 (unit-resolution (lemma @x750 $x1480) (trans* ((_ th-lemma arith) @x1464 @x1169 @x1115 @x1173 (= ?x534 ?x1266)) @x1425 $x242) $x1370)))
 (let ((@x736 (unit-resolution (and-elim @x1357 $x659) @x744 $x728)))
 (let ((@x783 (unit-resolution (unit-resolution ((_ th-lemma arith) (or $x780 $x544)) @x736 $x780) (symm (hypothesis (= 0.0 ?x1406)) $x739) false)))
 (let ((@x1568 (lemma @x783 (not (= 0.0 ?x1406)))))
 (let (($x1330 (>= ?x1406 0.0)))
 (let (($x296 (not $x1330)))
 (let ((@x713 (hypothesis $x296)))
 (let (($x322 (>= ?x726 0.0)))
 (let (($x794 (not $x322)))
 (let (($x1619 (<= ?x726 0.0)))
 (let (($x711 (not $x1619)))
 (let ((@x708 (hypothesis $x711)))
 (let ((@x1560 (unit-resolution ((_ th-lemma arith) (or (not $x538) $x239 $x1330 $x1619)) @x708 @x713 @x715 @x1169 false)))
 (let ((@x759 (unit-resolution ((_ th-lemma arith) (or (not $x885) $x266 $x1330 $x1619)) @x708 @x713 (hypothesis $x761) @x1464 false)))
 (let (($x1548 (= 0.0 ?x235)))
 (let (($x664 (not $x1548)))
 (let ((@x581 (symm (commutativity (= $x1548 (= ?x235 0.0))) (= (= ?x235 0.0) $x1548))))
 (let (($x884 (= ?x235 0.0)))
 (let (($x196 (not $x884)))
 (let ((@x1631 (unit-resolution ((_ th-lemma arith) (or $x196 $x544)) @x736 (hypothesis $x884) false)))
 (let ((@x1565 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1548 $x761 $x717)) (mp (lemma @x1631 $x196) (monotonicity @x581 (= $x196 $x664)) $x664) (or $x761 $x717))))
 (let ((@x748 (unit-resolution @x1565 (unit-resolution (lemma @x759 (or $x266 $x1619 $x1330)) @x713 @x708 $x266) (unit-resolution (lemma @x1560 (or $x239 $x1619 $x1330)) @x713 @x708 $x239) false)))
 (let ((@x788 ((_ th-lemma arith triangle-eq) (or (= 0.0 ?x1406) $x767 $x296))))
 (let ((@x790 (unit-resolution @x788 (unit-resolution (lemma @x748 (or $x1330 $x1619)) @x708 $x1330) @x1568 $x767)))
 (let ((@x769 (unit-resolution ((_ th-lemma arith) (or (not $x885) $x239 $x1407 $x1619)) @x708 (hypothesis $x767) @x715 @x1464 false)))
 (let ((@x791 (unit-resolution @x1565 (unit-resolution (lemma @x769 (or $x1407 $x1619 $x239)) @x790 @x708 $x239) $x761)))
 (let ((@x1569 (unit-resolution ((_ th-lemma arith) (or (not $x538) $x266 $x1407 $x1619)) @x708 @x790 @x791 @x1169 false)))
 (let (($x1618 (= 0.0 ?x726)))
 (let (($x800 (not $x1618)))
 (let ((@x802 (monotonicity (symm (commutativity (= $x1618 $x544)) (= $x544 $x1618)) (= $x728 $x800))))
 (let ((@x805 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1618 $x711 $x794)) (mp @x736 @x802 $x800) (or $x711 $x794))))
 (let ((@x1571 (unit-resolution @x805 (lemma @x1569 $x1619) $x794)))
 (let ((@x1126 (unit-resolution ((_ th-lemma arith) (or (not $x885) $x239 $x1330 $x322)) @x1571 @x713 @x715 @x1464 false)))
 (let ((@x813 (unit-resolution @x788 (unit-resolution (lemma @x1126 (or $x1330 $x239)) @x715 $x1330) @x1568 $x767)))
 (let ((@x812 (unit-resolution ((_ th-lemma arith) (or (not $x538) $x239 $x1407 $x322)) @x1571 @x813 @x715 @x1169 false)))
 (let ((@x816 (unit-resolution @x1565 (lemma @x812 $x239) $x761)))
 (let ((@x817 (unit-resolution ((_ th-lemma arith) (or (not $x538) $x266 $x1330 $x322)) @x1571 @x713 @x816 @x1169 false)))
 (let ((@x1217 (unit-resolution (unit-resolution @x788 @x1568 (or $x767 $x296)) (lemma @x817 $x1330) $x767)))
 (unit-resolution ((_ th-lemma arith) (or (not $x885) $x266 $x1407 $x322)) @x1571 @x1217 @x816 @x1464 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       38
 :arith-eq-adapter                46
 :arith-bound-propagations-cheap  53
 :arith-conflicts                 177
 :arith-diseq                     47
 :arith-fixed-eqs                 2
 :arith-grobner-calls             5
 :arith-horner-calls              5
 :arith-horner-cross-nested-forms 10
 :arith-lower                     76
 :arith-make-feasible             73
 :arith-max-columns               67
 :arith-max-rows                  11
 :arith-nla-explanations          14
 :arith-nla-lemmas                175
 :arith-propagations              53
 :arith-upper                     67
 :conflicts                       18
 :decisions                       170
 :del-clause                      140
 :final-checks                    40
 :max-memory                      2.69
 :memory                          1.18
 :mk-bool-var                     296
 :mk-clause                       193
 :num-allocs                      2070667
 :num-checks                      1
 :propagations                    153
 :rlimit-count                    9218
 :time                            0.03
 :total-time                      0.03)
