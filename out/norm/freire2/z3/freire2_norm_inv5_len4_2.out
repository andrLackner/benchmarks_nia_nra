unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1626 (* (- 1) s!1)))
 (let ((?x414 (* r00 r00)))
 (let ((?x2713 (* (- 3) ?x414)))
 (let ((?x2677 (+ s00 ?x2713 (* 3 (* r!2 r!2)) ?x1626)))
 (let (($x3368 (<= ?x2677 0)))
 (let (($x3153 (= ?x2677 0)))
 (let ((?x1743 (* 6 r!2)))
 (let ((?x3000 (+ 3 s!1 ?x1743)))
 (let ((?x982 (+ x!0 ?x1626)))
 (let ((?x520 (+ 1 r!2)))
 (let ((?x2420 (* (- 216) (* r00 r00 r00 s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000))))
 (let ((?x1199 (* 216 (* r00 s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000))))
 (let ((?x2037 (* 864 (* r00 r00 r00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000))))
 (let ((?x483 (* (- 864) (* r00 r00 r00 x00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000))))
 (let ((?x1616 (* 32 (* s00 s00 s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000))))
 (let ((?x2930 (* 72 (* r00 r00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000 ?x3000))))
 (let ((?x2934 (* (- 432) (* r00 r00 r00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000))))
 (let ((?x2635 (* (- 432) (* r00 s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000))))
 (let ((?x1143 (* 432 (* r00 r00 r00 s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000))))
 (let ((?x2538 (* (- 72) (* r00 r00 s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000))))
 (let ((?x2227 (* (- 24) (* s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000 ?x3000))))
 (let ((?x486 (* (- 36) (* r00 r00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000))))
 (let ((?x403 (* (- 8) (* ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000 ?x3000 ?x3000))))
 (let ((?x1986 (* 36 (* r00 r00 s00 s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000))))
 (let ((?x2960 (* 216 (* r00 r00 r00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000 ?x3000))))
 (let ((?x3241 (* 432 (* r00 r00 r00 x00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000))))
 (let ((?x2797 (* 432 (* r00 s00 x00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000))))
 (let ((?x2788 (* (- 72) (* r00 r00 s00 s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000))))
 (let ((?x714 (* (- 216) (* r00 s00 s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000))))
 (let ((?x2692 (* (- 432) (* r00 r00 r00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000))))
 (let ((?x1796 (* 72 (* r00 r00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000))))
 (let ((?x568 (+ (* 216 (* x00 x00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 216 (* r00 x00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) ?x1796 (* (- 108) (* r00 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 108 (* x00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* (- 432) (* r00 r00 r00 x00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* (- 108) (* x00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 18 (* s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 36 (* r00 r00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000 ?x3000)) (* 102 (* s00 s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* (- 132) (* s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* 108 (* s00 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* (- 216) (* r00 s00 x00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000)) (* (- 108) (* s00 x00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) ?x2692 (* 108 (* r00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000)) (* 12 (* s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* 216 (* r00 s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000)) (* (- 9) (* s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000)) ?x714 (* (- 12) (* s00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000 ?x3000)) (* (- 16) (* s00 s00 s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000)) ?x2788 (* (- 432) (* x00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) ?x2797 (* (- 36) (* r00 r00 s00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 36 (* r00 r00 s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000)) (* 36 (* r00 r00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* 108 (* r00 x00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) ?x3241 (* 66 (* s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* (- 108) (* r00 s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* (- 108) (* r00 x00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000)) (* 216 (* r00 r00 r00 s00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 216 (* s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) ?x2960 ?x1986 (* (- 15) (* ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* (- 216) (* s00 x00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) ?x403 (* 51 (* s00 s00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 4 (* ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000 ?x3000)) (* 216 (* x00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000)) (* 108 (* s00 x00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000)) (* 108 (* r00 s00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* (- 18) (* ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* (- 216) (* r00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) ?x486 (* 54 (* r00 s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000)) (* 108 (* x00 x00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* (- 4) (* ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000 ?x3000 ?x3000)) (* 432 (* r00 r00 r00 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 216 (* r00 s00 x00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* (- 54) (* r00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 108 (* ?x982 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* (- 51) (* s00 s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000)) (* 108 (* r00 s00 s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000)) (* 216 (* ?x520 ?x520 ?x982 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* (- 54) (* r00 s00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 108 (* r00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* 9 (* ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) ?x2227 ?x2538 (* (- 108) (* s00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000)) ?x1143 (* (- 36) (* r00 r00 s00 s00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) ?x2635 (* (- 216) (* x00 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* (- 216) (* r00 r00 r00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* (- 108) (* ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* 54 (* r00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* (- 36) (* r00 r00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) ?x2934 (* (- 9) (* ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) ?x2930 (* (- 216) (* ?x520 ?x520 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* 16 (* s00 s00 s00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 216 (* x00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* (- 108) (* ?x520 ?x520 ?x520 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000)) (* (- 108) (* x00 x00 ?x520 ?x520 ?x520 ?x982 ?x982 ?x3000 ?x3000)) ?x1616 (* (- 108) (* r00 s00 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 9 (* s00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) ?x483 (* 15 (* ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000 ?x3000)) (* (- 216) (* r00 s00 ?x982 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 108 (* ?x520 ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) (* 30 (* ?x520 ?x520 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000 ?x3000)) ?x2037 (* (- 66) (* s00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000 ?x3000)) (* (- 108) (* r00 s00 s00 ?x982 ?x982 ?x982 ?x3000 ?x3000 ?x3000)) ?x1199 ?x2420)))
 (let (($x571 (= ?x568 0)))
 (let (($x2591 (not $x571)))
 (let ((?x1913 (* (- 9) s!1)))
 (let ((?x1459 (* x00 x00)))
 (let ((?x2885 (* 108 ?x1459)))
 (let ((?x1297 (* s00 s00 s00)))
 (let ((?x912 (* 16 ?x1297)))
 (let ((?x1294 (* r00 r00 s!1)))
 (let ((?x2521 (* 36 ?x1294)))
 (let ((?x995 (* r00 r00 r00 x00)))
 (let ((?x529 (* (- 432) ?x995)))
 (let ((?x918 (* s00 x00)))
 (let ((?x833 (* (- 108) ?x918)))
 (let ((?x760 (* s00 r00 r00)))
 (let ((?x1316 (* (- 36) ?x760)))
 (let ((?x704 (* s00 s00)))
 (let ((?x1805 (* 51 ?x704)))
 (let ((?x635 (* r00 x00)))
 (let ((?x492 (* 108 ?x635)))
 (let ((?x137 (* 9 s00)))
 (let ((?x968 (+ ?x137 (* 108 (* x00 s!1)) (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x492 ?x1805 ?x1316 (* (- 108) (* s00 s00 r00)) (* 432 (* r00 r00 r00 x!0)) (* (- 36) (* s00 s00 r00 r00)) ?x833 (* (- 108) (* x!0 s!1)) ?x529 (* 36 (* r00 r00 s!1 s!1)) (* 216 (* s00 r00 r00 r00)) (* (- 66) (* s00 s!1)) ?x2521 ?x912 (* 54 (* r00 s!1)) ?x2885 (* 108 (* s00 r00 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 216) (* x00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 108 (* s00 x!0)) ?x1913 (* 15 (* s!1 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 108 (* x!0 x!0)) (* (- 108) (* r00 x!0)))))
 (let (($x1924 (= ?x968 0)))
 (let ((?x990 (* r00 r00 x00)))
 (let ((?x1895 (* 36 ?x990)))
 (let ((?x2466 (* (- 6) ?x918)))
 (let ((?x1526 (* 15 ?x704)))
 (let ((?x1178 (* 54 ?x635)))
 (let ((?x1832 (+ ?x137 (* 6 (* x00 s!1)) (* (- 24) (* s00 r00)) ?x1178 ?x1526 ?x1316 (* 2 (* s00 s00 r00)) ?x2466 (* (- 6) (* x!0 s!1)) ?x1895 (* 36 (* r00 x00 r!2)) (* (- 12) (* s00 s!1)) (* (- 54) (* x!0 r!2)) ?x2521 (* 24 (* r00 s!1)) (* (- 36) (* r00 x!0 r!2)) (* 2 (* s00 r00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* (- 2) (* s00 s!1 r!2)) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) ?x1913 (* (- 36) (* r00 r00 x!0)) (* (- 3) (* s!1 s!1)) (* 4 (* s00 s00 r!2)) (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* (- 24) (* s00 r!2)) (* 24 (* s!1 r!2)))))
 (let (($x2330 (= ?x1832 0)))
 (let ((?x3377 (* (- 3) s!1)))
 (let ((?x2929 (* 4 ?x704)))
 (let ((?x1214 (* 18 ?x635)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2149 (+ ?x44 (* 6 (* s00 r00 r!2)) (* (- 9) (* s00 r00)) ?x1214 ?x2929 (* (- 6) ?x760) (* (- 6) (* r00 s!1 r!2)) (* (- 2) (* s00 s!1)) (* (- 18) (* x!0 r!2)) (* 6 ?x1294) (* 9 (* r00 s!1)) ?x3377 (* (- 2) (* s!1 s!1)) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* (- 9) (* s00 r!2)) (* 9 (* s!1 r!2)))))
 (let (($x1051 (= ?x2149 0)))
 (let ((?x1731 (* 3 r!2)))
 (let ((?x1004 (* 6 x!0)))
 (let ((?x582 (* r00 r00 r00)))
 (let ((?x583 (* 12 ?x582)))
 (let ((?x539 (* s00 r00)))
 (let ((?x617 (* (- 6) ?x539)))
 (let ((?x614 (* (- 6) x00)))
 (let ((?x613 (* (- 3) r00)))
 (let ((?x1290 (+ ?x44 ?x613 ?x614 ?x617 ?x583 (* (- 12) (* r00 r00 r!2)) ?x1004 ?x3377 ?x1731 (* 4 (* s00 r!2)) (* 2 (* s!1 r!2)))))
 (let (($x3089 (= ?x1290 0)))
 (let (($x534 (and $x3153 $x3089 $x1051 $x2330 $x1924 $x2591)))
 (let ((?x1324 (+ 3 ?x1743 s!1)))
 (let ((?x2369 (+ ?x1626 x!0)))
 (let ((?x1769 (* (- 72) (* r00 r00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324))))
 (let ((?x2193 (* (- 36) (* r00 r00 s00 s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324))))
 (let ((?x1866 (* (- 216) (* r00 r00 r00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324))))
 (let ((?x2873 (* (- 32) (* s00 s00 s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324))))
 (let ((?x1377 (* 216 (* r00 r00 r00 s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324))))
 (let ((?x1812 (* 36 (* r00 r00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324))))
 (let ((?x3093 (* 72 (* r00 r00 s00 s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324))))
 (let ((?x2933 (* 432 (* r00 r00 r00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324))))
 (let ((?x1721 (* 24 (* s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324 ?x1324))))
 (let ((?x981 (* (- 432) (* r00 s00 x00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324))))
 (let ((?x1040 (* (- 432) (* r00 r00 r00 x00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324))))
 (let ((?x3164 (* 864 (* r00 r00 r00 x00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324))))
 (let ((?x2607 (* 432 (* r00 s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324))))
 (let ((?x823 (* 72 (* r00 r00 s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324))))
 (let ((?x1523 (* (- 864) (* r00 r00 r00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324))))
 (let ((?x1786 (* (- 432) (* r00 r00 r00 s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324))))
 (let ((?x796 (* 8 (* ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324 ?x1324 ?x1324))))
 (let ((?x3108 (* (- 72) (* r00 r00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324 ?x1324))))
 (let ((?x1283 (* 432 (* r00 r00 r00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324))))
 (let ((?x2175 (* (- 216) (* r00 s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324))))
 (let ((?x2921 (* 216 (* r00 s00 s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324))))
 (let ((?x931 (+ ?x2921 (* 9 (* s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324)) ?x2175 ?x1283 (* (- 36) (* r00 r00 s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324)) ?x3108 (* (- 108) (* r00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) (* (- 9) (* s00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 18) (* s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 108 (* r00 s00 s00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 108) (* s00 x00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324)) (* 108 (* ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) (* 216 (* r00 s00 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 108 (* s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324)) (* 108 (* r00 x00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324)) (* (- 108) (* ?x2369 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 36 (* r00 r00 s00 s00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 54) (* r00 s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324)) (* (- 51) (* s00 s00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 108 (* r00 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 108) (* s00 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) ?x796 (* 66 (* s00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) (* (- 102) (* s00 s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 18 (* ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) ?x1786 (* 108 (* r00 s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 9) (* ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 108 (* x00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 108) (* r00 s00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) (* 12 (* s00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324 ?x1324)) (* (- 432) (* r00 r00 r00 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 108 (* x00 x00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324)) ?x1523 (* 36 (* r00 r00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) ?x823 (* (- 108) (* r00 s00 s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324)) (* 216 (* s00 x00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 216 (* r00 r00 r00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) (* 132 (* s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) ?x2607 (* (- 30) (* ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324 ?x1324)) (* 16 (* s00 s00 s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324)) (* 9 (* ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) (* (- 54) (* r00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) (* (- 12) (* s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) (* (- 216) (* x00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) ?x3164 ?x1040 ?x981 ?x1721 (* (- 4) (* ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324 ?x1324)) (* (- 216) (* x00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324)) (* 108 (* s00 x00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 108) (* ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 66) (* s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) ?x2933 (* (- 216) (* s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 216) (* ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) ?x3093 (* 432 (* x00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 108) (* x00 x00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 108) (* x00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) (* 15 (* ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) (* (- 36) (* r00 r00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) (* 432 (* r00 r00 r00 x00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 51 (* s00 s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324)) (* (- 16) (* s00 s00 s00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 54 (* r00 s00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 15) (* ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324 ?x1324)) ?x1812 (* 108 (* ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324)) (* (- 36) (* r00 r00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324 ?x1324)) (* (- 108) (* r00 x00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 54 (* r00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) ?x1377 (* 36 (* r00 r00 s00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 216) (* r00 s00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324)) (* (- 216) (* r00 s00 x00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* (- 108) (* r00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324)) ?x2873 (* 216 (* r00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 4 (* ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324 ?x1324 ?x1324)) (* 216 (* x00 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 108 (* r00 s00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 216 (* ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324 ?x1324)) (* (- 216) (* x00 x00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) (* 216 (* r00 s00 x00 ?x520 ?x520 ?x520 ?x2369 ?x2369 ?x1324 ?x1324)) (* (- 216) (* r00 r00 r00 s00 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) ?x1866 ?x2193 (* (- 216) (* r00 x00 ?x520 ?x520 ?x2369 ?x2369 ?x2369 ?x1324 ?x1324 ?x1324)) ?x1769)))
 (let ((?x1489 (* (- 108) ?x1459)))
 (let ((?x1488 (* (- 16) ?x1297)))
 (let ((?x1169 (* s00 r00 r00 r00)))
 (let ((?x1484 (* (- 216) ?x1169)))
 (let ((?x996 (* 432 ?x995)))
 (let ((?x1242 (* 108 ?x918)))
 (let ((?x844 (* s00 s00 r00 r00)))
 (let ((?x845 (* 36 ?x844)))
 (let ((?x781 (* s00 s00 r00)))
 (let ((?x1125 (* 108 ?x781)))
 (let ((?x1113 (* 36 ?x760)))
 (let ((?x1478 (* (- 51) ?x704)))
 (let ((?x893 (* s!1 r00 r00)))
 (let ((?x1694 (* (- 36) ?x893)))
 (let ((?x1475 (* (- 108) ?x635)))
 (let ((?x626 (* s00 r00 x00)))
 (let ((?x1474 (* (- 216) ?x626)))
 (let ((?x633 (* 54 ?x539)))
 (let ((?x1100 (* (- 9) s00)))
 (let ((?x825 (* 9 s!1)))
 (let ((?x2662 (+ ?x825 ?x1100 ?x633 ?x1474 ?x1475 (* (- 15) (* s!1 s!1)) ?x1694 ?x1478 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1113 ?x1125 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x845 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1242 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x996 (* 12 (* s!1 s!1 s00)) ?x1484 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1488 (* 216 (* x!0 x00)) ?x1489)))
 (let ((?x1003 (* (- 36) ?x990)))
 (let ((?x919 (* 6 ?x918)))
 (let ((?x809 (* (- 2) ?x781)))
 (let ((?x1029 (* (- 15) ?x704)))
 (let ((?x664 (* (- 54) ?x635)))
 (let ((?x677 (* 24 ?x539)))
 (let ((?x3196 (+ ?x825 ?x1100 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x677 ?x664 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x1694 ?x1029 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1113 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x809 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x919 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x1003 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x761 (* 6 ?x760)))
 (let ((?x717 (* (- 4) ?x704)))
 (let ((?x649 (* (- 18) ?x635)))
 (let ((?x654 (* 9 ?x539)))
 (let ((?x491 (* (- 3) s00)))
 (let ((?x2984 (+ (* 3 s!1) ?x491 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x654 ?x649 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x893) ?x717 (* 18 (* x!0 r00)) ?x761 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x463 (+ ?x1731 ?x3377 ?x1004 ?x44 ?x613 ?x614 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x617 ?x583)))
 (let (($x1939 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x414)) 0)))
 (let (($x2800 (and $x1939 (= ?x463 0) (= ?x2984 0) (= ?x3196 0) (= ?x2662 0) (not (= ?x931 0)))))
 (let (($x1512 (exists ((r Int) (s Int) (x Int) )(! (let ((?x212 (* 6 r)))
 (let ((?x1498 (+ 3 ?x212 s)))
 (let ((?x393 (* (- 1) s)))
 (let ((?x1504 (+ ?x393 x)))
 (let ((?x1734 (+ 1 r)))
 (let ((?x1901 (* (- 72) (* r00 r00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x1507 (* (- 36) (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498))))
 (let ((?x3190 (* (- 216) (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x3337 (* (- 32) (* s00 s00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x2746 (* 216 (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498))))
 (let ((?x2834 (* 36 (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x2738 (* 72 (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x2163 (* 432 (* r00 r00 r00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x795 (* 24 (* s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x794 (* (- 432) (* r00 s00 x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x767 (* (- 432) (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498))))
 (let ((?x793 (* 864 (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x3398 (* 432 (* r00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x2195 (* 72 (* r00 r00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x1333 (* (- 864) (* r00 r00 r00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x1101 (* (- 432) (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x1087 (* 8 (* ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x2784 (* (- 72) (* r00 r00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x1738 (* 432 (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498))))
 (let ((?x2027 (* (- 216) (* r00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x2615 (* 216 (* r00 s00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x642 (+ ?x2615 (* 9 (* s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) ?x2027 ?x1738 (* (- 36) (* r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) ?x2784 (* (- 108) (* r00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 9) (* s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 18) (* s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 108 (* r00 s00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* s00 x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* 108 (* ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* 216 (* r00 s00 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 108 (* s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498)) (* 108 (* r00 x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* (- 108) (* ?x1504 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 36 (* r00 r00 s00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 54) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* (- 51) (* s00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 108 (* r00 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* s00 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x1087 (* 66 (* s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 102) (* s00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 18 (* ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) ?x1101 (* 108 (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 9) (* ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 108 (* x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* r00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* 12 (* s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 432) (* r00 r00 r00 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 108 (* x00 x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) ?x1333 (* 36 (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x2195 (* (- 108) (* r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* 216 (* s00 x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 216 (* r00 r00 r00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* 132 (* s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) ?x3398 (* (- 30) (* ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498)) (* 16 (* s00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* 9 (* ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 54) (* r00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 12) (* s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 216) (* x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) ?x793 ?x767 ?x794 ?x795 (* (- 4) (* ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 216) (* x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498)) (* 108 (* s00 x00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 66) (* s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x2163 (* (- 216) (* s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 216) (* ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x2738 (* 432 (* x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* x00 x00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* x00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* 15 (* ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 36) (* r00 r00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* 432 (* r00 r00 r00 x00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 51 (* s00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* (- 16) (* s00 s00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 54 (* r00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 15) (* ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498)) ?x2834 (* 108 (* ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498)) (* (- 36) (* r00 r00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 108) (* r00 x00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 54 (* r00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x2746 (* 36 (* r00 r00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 216) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498)) (* (- 216) (* r00 s00 x00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* r00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498)) ?x3337 (* 216 (* r00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 4 (* ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498)) (* 216 (* x00 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 108 (* r00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 216 (* ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 216) (* x00 x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 216 (* r00 s00 x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* (- 216) (* r00 r00 r00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x3190 ?x1507 (* (- 216) (* r00 x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x1901)))
 (let ((?x1459 (* x00 x00)))
 (let ((?x1489 (* (- 108) ?x1459)))
 (let ((?x1297 (* s00 s00 s00)))
 (let ((?x1488 (* (- 16) ?x1297)))
 (let ((?x1169 (* s00 r00 r00 r00)))
 (let ((?x1484 (* (- 216) ?x1169)))
 (let ((?x995 (* r00 r00 r00 x00)))
 (let ((?x996 (* 432 ?x995)))
 (let ((?x918 (* s00 x00)))
 (let ((?x1242 (* 108 ?x918)))
 (let ((?x844 (* s00 s00 r00 r00)))
 (let ((?x845 (* 36 ?x844)))
 (let ((?x781 (* s00 s00 r00)))
 (let ((?x1125 (* 108 ?x781)))
 (let ((?x760 (* s00 r00 r00)))
 (let ((?x1113 (* 36 ?x760)))
 (let ((?x704 (* s00 s00)))
 (let ((?x1478 (* (- 51) ?x704)))
 (let ((?x678 (* s r00 r00)))
 (let ((?x977 (* (- 36) ?x678)))
 (let ((?x635 (* r00 x00)))
 (let ((?x1475 (* (- 108) ?x635)))
 (let ((?x626 (* s00 r00 x00)))
 (let ((?x1474 (* (- 216) ?x626)))
 (let ((?x539 (* s00 r00)))
 (let ((?x633 (* 54 ?x539)))
 (let ((?x1100 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1490 (+ ?x143 ?x1100 ?x633 ?x1474 ?x1475 (* (- 15) (* s s)) ?x977 ?x1478 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1113 ?x1125 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x845 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1242 (* 108 (* s x)) (* (- 108) (* x x)) ?x996 (* 12 (* s s s00)) ?x1484 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1488 (* 216 (* x x00)) ?x1489)))
 (let (($x1491 (= ?x1490 0)))
 (let ((?x990 (* r00 r00 x00)))
 (let ((?x1003 (* (- 36) ?x990)))
 (let ((?x919 (* 6 ?x918)))
 (let ((?x809 (* (- 2) ?x781)))
 (let ((?x1029 (* (- 15) ?x704)))
 (let ((?x658 (* s s)))
 (let ((?x682 (* 3 ?x658)))
 (let ((?x664 (* (- 54) ?x635)))
 (let ((?x677 (* 24 ?x539)))
 (let ((?x1192 (+ ?x143 ?x1100 (* (- 24) (* r s)) (* 24 (* r s00)) ?x677 ?x664 ?x682 (* 54 (* r x)) (* 36 (* r x r00)) ?x977 ?x1029 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1113 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x809 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x919 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x1003 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1197 (= ?x1192 0)))
 (let ((?x761 (* 6 ?x760)))
 (let ((?x717 (* (- 4) ?x704)))
 (let ((?x659 (* 2 ?x658)))
 (let ((?x649 (* (- 18) ?x635)))
 (let ((?x654 (* 9 ?x539)))
 (let ((?x491 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x858 (+ ?x47 ?x491 (* (- 9) (* r s)) (* 9 (* r s00)) ?x654 ?x649 ?x659 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x678) ?x717 (* 18 (* x r00)) ?x761 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x865 (= ?x858 0)))
 (let ((?x582 (* r00 r00 r00)))
 (let ((?x583 (* 12 ?x582)))
 (let ((?x617 (* (- 6) ?x539)))
 (let ((?x614 (* (- 6) x00)))
 (let ((?x613 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x612 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x618 (+ ?x43 ?x612 ?x56 ?x44 ?x613 ?x614 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x617 ?x583)))
 (let (($x619 (= ?x618 0)))
 (let ((?x414 (* r00 r00)))
 (let ((?x415 (* 3 ?x414)))
 (let ((?x444 (* (- 1) s00)))
 (let (($x447 (= (+ s ?x444 (* (- 3) (* r r)) ?x415) 0)))
 (and $x447 $x619 $x865 $x1197 $x1491 (not (= ?x642 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1083 (exists ((r Int) (s Int) (x Int) )(! (let ((?x212 (* 6 r)))
 (let ((?x756 (+ 3 s ?x212)))
 (let ((?x393 (* (- 1) s)))
 (let ((?x1104 (+ x ?x393)))
 (let ((?x1734 (+ 1 r)))
 (let ((?x3376 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x3328 (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x2575 (* s00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x3083 (* r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2824 (* r00 s00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2906 (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2850 (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2235 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2883 (* r00 r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2872 (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2415 (* r00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x1831 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2574 (* r00 r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2362 (* r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x1837 (* r00 r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x580 (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x1247 (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x969 (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2328 (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x1331 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x3031 (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x2417 (+ (* 15 (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 108 (* s00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 9 (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 432) ?x3031) (* (- 24) ?x1331) (* 9 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 18) (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 216 (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 216) (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 54 (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 432 ?x2328) (* 432 (* r00 r00 r00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 216) (* r00 s00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* x00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 36 (* r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 216) (* r00 s00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 54) (* r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* x00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* r00 s00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* r00 r00 r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 54) (* r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 16 (* s00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 36) ?x969) (* 108 (* r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 108 (* r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 216) ?x1247) (* 216 (* x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 108 (* r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 9) (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 216) (* x00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 30 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 66) (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 132) (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 216) (* s00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 432 ?x580) (* 36 (* r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 16) (* s00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 216 (* r00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 432) ?x1837) (* (- 108) (* r00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 12 (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 51 (* s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 36 (* r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 36) (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 4 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 102 (* s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* x00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* ?x1104 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 36) (* r00 r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* r00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 72 ?x2362) (* (- 72) ?x2574) (* (- 8) ?x1831) (* (- 12) (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 216) ?x2415) (* 18 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 9) (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 51) (* s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 864) ?x2872) (* (- 108) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 864 ?x2883) (* (- 432) ?x2235) (* (- 72) ?x2850) (* 216 ?x2906) (* 66 (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* s00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 15) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 432 ?x2824) (* (- 4) (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* r00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* r00 r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 72 ?x3083) (* 216 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 32 ?x2575) (* (- 432) (* x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* s00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* r00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 54 (* r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 432) (* r00 r00 r00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 36 ?x3328) (* (- 36) (* r00 r00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 ?x3376))))
 (let ((?x1459 (* x00 x00)))
 (let ((?x2885 (* 108 ?x1459)))
 (let ((?x1735 (* (- 9) s)))
 (let ((?x526 (* r00 r00 s00)))
 (let ((?x1614 (* (- 36) ?x526)))
 (let ((?x137 (* 9 s00)))
 (let ((?x704 (* s00 s00)))
 (let ((?x1805 (* 51 ?x704)))
 (let ((?x2311 (* r00 r00 s)))
 (let ((?x1419 (* 36 ?x2311)))
 (let ((?x1297 (* s00 s00 s00)))
 (let ((?x912 (* 16 ?x1297)))
 (let ((?x918 (* s00 x00)))
 (let ((?x833 (* (- 108) ?x918)))
 (let ((?x995 (* r00 r00 r00 x00)))
 (let ((?x529 (* (- 432) ?x995)))
 (let ((?x635 (* r00 x00)))
 (let ((?x492 (* 108 ?x635)))
 (let ((?x2386 (+ (* 216 (* r00 s00 x00)) ?x492 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x529 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x833 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x912 (* (- 108) (* x s)) ?x1419 ?x1805 (* (- 108) (* r00 x)) ?x137 ?x1614 ?x1735 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2885)))
 (let (($x1173 (= ?x2386 0)))
 (let ((?x1526 (* 15 ?x704)))
 (let ((?x990 (* r00 r00 x00)))
 (let ((?x1895 (* 36 ?x990)))
 (let ((?x2466 (* (- 6) ?x918)))
 (let ((?x1178 (* 54 ?x635)))
 (let ((?x2285 (+ (* 24 (* s r)) ?x1178 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2466 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1419 ?x1895 ?x1526 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1614 (* 54 (* x00 r)) ?x1735 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x612 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2929 (* 4 ?x704)))
 (let ((?x1214 (* 18 ?x635)))
 (let ((?x2562 (+ (* 9 (* s r)) ?x1214 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2311) ?x2929 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x526) (* 18 (* x00 r)) ?x612 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x582 (* r00 r00 r00)))
 (let ((?x583 (* 12 ?x582)))
 (let ((?x614 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x613 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2965 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x612 ?x613 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x614 ?x583)))
 (let (($x1595 (= (+ s00 ?x393 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1595 (= ?x2965 0) (= ?x2562 0) (= ?x2285 0) $x1173 (not (= ?x2417 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x641 (lambda ((r Int) (s Int) (x Int) )(let ((?x212 (* 6 r)))
 (let ((?x1498 (+ 3 ?x212 s)))
 (let ((?x393 (* (- 1) s)))
 (let ((?x1504 (+ ?x393 x)))
 (let ((?x1734 (+ 1 r)))
 (let ((?x1901 (* (- 72) (* r00 r00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x1507 (* (- 36) (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498))))
 (let ((?x3190 (* (- 216) (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x3337 (* (- 32) (* s00 s00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x2746 (* 216 (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498))))
 (let ((?x2834 (* 36 (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x2738 (* 72 (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x2163 (* 432 (* r00 r00 r00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x795 (* 24 (* s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x794 (* (- 432) (* r00 s00 x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x767 (* (- 432) (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498))))
 (let ((?x793 (* 864 (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x3398 (* 432 (* r00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x2195 (* 72 (* r00 r00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x1333 (* (- 864) (* r00 r00 r00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x1101 (* (- 432) (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x1087 (* 8 (* ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x2784 (* (- 72) (* r00 r00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x1738 (* 432 (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498))))
 (let ((?x2027 (* (- 216) (* r00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498))))
 (let ((?x2615 (* 216 (* r00 s00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498))))
 (let ((?x642 (+ ?x2615 (* 9 (* s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) ?x2027 ?x1738 (* (- 36) (* r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) ?x2784 (* (- 108) (* r00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 9) (* s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 18) (* s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 108 (* r00 s00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* s00 x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* 108 (* ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* 216 (* r00 s00 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 108 (* s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498)) (* 108 (* r00 x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* (- 108) (* ?x1504 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 36 (* r00 r00 s00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 54) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* (- 51) (* s00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 108 (* r00 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* s00 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x1087 (* 66 (* s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 102) (* s00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 18 (* ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) ?x1101 (* 108 (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 9) (* ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 108 (* x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* r00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* 12 (* s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 432) (* r00 r00 r00 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 108 (* x00 x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) ?x1333 (* 36 (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x2195 (* (- 108) (* r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* 216 (* s00 x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 216 (* r00 r00 r00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* 132 (* s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) ?x3398 (* (- 30) (* ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498)) (* 16 (* s00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* 9 (* ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 54) (* r00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 12) (* s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 216) (* x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) ?x793 ?x767 ?x794 ?x795 (* (- 4) (* ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 216) (* x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498)) (* 108 (* s00 x00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 66) (* s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x2163 (* (- 216) (* s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 216) (* ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x2738 (* 432 (* x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* x00 x00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* x00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* 15 (* ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 36) (* r00 r00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* 432 (* r00 r00 r00 x00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 51 (* s00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* (- 16) (* s00 s00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 54 (* r00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 15) (* ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498)) ?x2834 (* 108 (* ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498)) (* (- 36) (* r00 r00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 108) (* r00 x00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 54 (* r00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x2746 (* 36 (* r00 r00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 216) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498)) (* (- 216) (* r00 s00 x00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* (- 108) (* r00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498)) ?x3337 (* 216 (* r00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 4 (* ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498)) (* 216 (* x00 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 108 (* r00 s00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 216 (* ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498 ?x1498)) (* (- 216) (* x00 x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) (* 216 (* r00 s00 x00 ?x1734 ?x1734 ?x1734 ?x1504 ?x1504 ?x1498 ?x1498)) (* (- 216) (* r00 r00 r00 s00 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x3190 ?x1507 (* (- 216) (* r00 x00 ?x1734 ?x1734 ?x1504 ?x1504 ?x1504 ?x1498 ?x1498 ?x1498)) ?x1901)))
 (let ((?x1459 (* x00 x00)))
 (let ((?x1489 (* (- 108) ?x1459)))
 (let ((?x1297 (* s00 s00 s00)))
 (let ((?x1488 (* (- 16) ?x1297)))
 (let ((?x1169 (* s00 r00 r00 r00)))
 (let ((?x1484 (* (- 216) ?x1169)))
 (let ((?x995 (* r00 r00 r00 x00)))
 (let ((?x996 (* 432 ?x995)))
 (let ((?x918 (* s00 x00)))
 (let ((?x1242 (* 108 ?x918)))
 (let ((?x844 (* s00 s00 r00 r00)))
 (let ((?x845 (* 36 ?x844)))
 (let ((?x781 (* s00 s00 r00)))
 (let ((?x1125 (* 108 ?x781)))
 (let ((?x760 (* s00 r00 r00)))
 (let ((?x1113 (* 36 ?x760)))
 (let ((?x704 (* s00 s00)))
 (let ((?x1478 (* (- 51) ?x704)))
 (let ((?x678 (* s r00 r00)))
 (let ((?x977 (* (- 36) ?x678)))
 (let ((?x635 (* r00 x00)))
 (let ((?x1475 (* (- 108) ?x635)))
 (let ((?x626 (* s00 r00 x00)))
 (let ((?x1474 (* (- 216) ?x626)))
 (let ((?x539 (* s00 r00)))
 (let ((?x633 (* 54 ?x539)))
 (let ((?x1100 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1490 (+ ?x143 ?x1100 ?x633 ?x1474 ?x1475 (* (- 15) (* s s)) ?x977 ?x1478 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1113 ?x1125 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x845 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1242 (* 108 (* s x)) (* (- 108) (* x x)) ?x996 (* 12 (* s s s00)) ?x1484 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1488 (* 216 (* x x00)) ?x1489)))
 (let (($x1491 (= ?x1490 0)))
 (let ((?x990 (* r00 r00 x00)))
 (let ((?x1003 (* (- 36) ?x990)))
 (let ((?x919 (* 6 ?x918)))
 (let ((?x809 (* (- 2) ?x781)))
 (let ((?x1029 (* (- 15) ?x704)))
 (let ((?x658 (* s s)))
 (let ((?x682 (* 3 ?x658)))
 (let ((?x664 (* (- 54) ?x635)))
 (let ((?x677 (* 24 ?x539)))
 (let ((?x1192 (+ ?x143 ?x1100 (* (- 24) (* r s)) (* 24 (* r s00)) ?x677 ?x664 ?x682 (* 54 (* r x)) (* 36 (* r x r00)) ?x977 ?x1029 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1113 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x809 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x919 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x1003 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1197 (= ?x1192 0)))
 (let ((?x761 (* 6 ?x760)))
 (let ((?x717 (* (- 4) ?x704)))
 (let ((?x659 (* 2 ?x658)))
 (let ((?x649 (* (- 18) ?x635)))
 (let ((?x654 (* 9 ?x539)))
 (let ((?x491 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x858 (+ ?x47 ?x491 (* (- 9) (* r s)) (* 9 (* r s00)) ?x654 ?x649 ?x659 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x678) ?x717 (* 18 (* x r00)) ?x761 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x865 (= ?x858 0)))
 (let ((?x582 (* r00 r00 r00)))
 (let ((?x583 (* 12 ?x582)))
 (let ((?x617 (* (- 6) ?x539)))
 (let ((?x614 (* (- 6) x00)))
 (let ((?x613 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x612 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x618 (+ ?x43 ?x612 ?x56 ?x44 ?x613 ?x614 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x617 ?x583)))
 (let (($x619 (= ?x618 0)))
 (let ((?x414 (* r00 r00)))
 (let ((?x415 (* 3 ?x414)))
 (let ((?x444 (* (- 1) s00)))
 (let (($x447 (= (+ s ?x444 (* (- 3) (* r r)) ?x415) 0)))
 (let (($x2350 (and $x447 $x619 $x865 $x1197 $x1491 (not (= ?x642 0)))))
 (let ((?x756 (+ 3 s ?x212)))
 (let ((?x1104 (+ x ?x393)))
 (let ((?x3376 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x3328 (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x2575 (* s00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x3083 (* r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2824 (* r00 s00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2906 (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2850 (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2235 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2883 (* r00 r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2872 (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2415 (* r00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x1831 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2574 (* r00 r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2362 (* r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x1837 (* r00 r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x580 (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x1247 (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x969 (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2328 (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x1331 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x3031 (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x2417 (+ (* 15 (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 108 (* s00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 9 (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 432) ?x3031) (* (- 24) ?x1331) (* 9 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 18) (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 216 (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 216) (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 54 (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 432 ?x2328) (* 432 (* r00 r00 r00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 216) (* r00 s00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* x00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 36 (* r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 216) (* r00 s00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 54) (* r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* x00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* r00 s00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* r00 r00 r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 54) (* r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 16 (* s00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 36) ?x969) (* 108 (* r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 108 (* r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 216) ?x1247) (* 216 (* x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 108 (* r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 9) (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 216) (* x00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 30 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 66) (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 132) (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 216) (* s00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 432 ?x580) (* 36 (* r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 16) (* s00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 216 (* r00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 432) ?x1837) (* (- 108) (* r00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 12 (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 51 (* s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 36 (* r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 36) (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 4 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 102 (* s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* x00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* ?x1104 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 36) (* r00 r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* r00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 72 ?x2362) (* (- 72) ?x2574) (* (- 8) ?x1831) (* (- 12) (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 216) ?x2415) (* 18 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 9) (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 51) (* s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 864) ?x2872) (* (- 108) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 864 ?x2883) (* (- 432) ?x2235) (* (- 72) ?x2850) (* 216 ?x2906) (* 66 (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* s00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 15) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 432 ?x2824) (* (- 4) (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* r00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* r00 r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 72 ?x3083) (* 216 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 32 ?x2575) (* (- 432) (* x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* s00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* r00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 54 (* r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 432) (* r00 r00 r00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 36 ?x3328) (* (- 36) (* r00 r00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 ?x3376))))
 (let ((?x2885 (* 108 ?x1459)))
 (let ((?x1735 (* (- 9) s)))
 (let ((?x526 (* r00 r00 s00)))
 (let ((?x1614 (* (- 36) ?x526)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1805 (* 51 ?x704)))
 (let ((?x2311 (* r00 r00 s)))
 (let ((?x1419 (* 36 ?x2311)))
 (let ((?x912 (* 16 ?x1297)))
 (let ((?x833 (* (- 108) ?x918)))
 (let ((?x529 (* (- 432) ?x995)))
 (let ((?x492 (* 108 ?x635)))
 (let ((?x2386 (+ (* 216 (* r00 s00 x00)) ?x492 (* (- 54) (* r00 s00)) (* 15 ?x658) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x529 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x833 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x912 (* (- 108) (* x s)) ?x1419 ?x1805 (* (- 108) (* r00 x)) ?x137 ?x1614 ?x1735 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2885)))
 (let (($x1173 (= ?x2386 0)))
 (let ((?x1526 (* 15 ?x704)))
 (let ((?x1895 (* 36 ?x990)))
 (let ((?x2466 (* (- 6) ?x918)))
 (let ((?x1178 (* 54 ?x635)))
 (let ((?x2285 (+ (* 24 (* s r)) ?x1178 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x658) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2466 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1419 ?x1895 ?x1526 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1614 (* 54 (* x00 r)) ?x1735 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x2929 (* 4 ?x704)))
 (let ((?x1214 (* 18 ?x635)))
 (let ((?x2562 (+ (* 9 (* s r)) ?x1214 (* (- 9) (* r00 s00)) (* (- 2) ?x658) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2311) ?x2929 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x526) (* 18 (* x00 r)) ?x612 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x2965 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x612 ?x613 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x614 ?x583)))
 (let (($x1595 (= (+ s00 ?x393 (* 3 (* r r)) (* (- 3) ?x414)) 0)))
 (let (($x1600 (and $x1595 (= ?x2965 0) (= ?x2562 0) (= ?x2285 0) $x1173 (not (= ?x2417 0)))))
 (rewrite (= $x1600 $x2350)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1107 (exists ((r Int) (s Int) (x Int) )(! (let ((?x212 (* 6 r)))
 (let ((?x756 (+ 3 s ?x212)))
 (let ((?x393 (* (- 1) s)))
 (let ((?x1104 (+ x ?x393)))
 (let ((?x1734 (+ 1 r)))
 (let ((?x3376 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x3328 (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x2575 (* s00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x3083 (* r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2824 (* r00 s00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2906 (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2850 (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2235 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2883 (* r00 r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2872 (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2415 (* r00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x1831 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2574 (* r00 r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2362 (* r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x1837 (* r00 r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x580 (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x1247 (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x969 (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2328 (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x1331 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x3031 (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x3397 (+ (* (- 15) (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* s00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 9) (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 432 ?x3031) (* 24 ?x1331) (* (- 9) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 18 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 216) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 216 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 54) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 432) ?x2328) (* (- 432) (* r00 r00 r00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 216 (* r00 s00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* x00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 36) (* r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 216 (* r00 s00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 54 (* r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* x00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* r00 s00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* r00 r00 r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 54 (* r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 16) (* s00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 36 ?x969) (* (- 108) (* r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 216 ?x1247) (* (- 216) (* x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 108 (* ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 9 (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 216 (* x00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 30) (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 66 (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 132 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 216 (* s00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 432) ?x580) (* (- 36) (* r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 16 (* s00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 216) (* r00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 432 ?x1837) (* 108 (* r00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 12) (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 51) (* s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 36) (* r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 36 (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 4) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 102) (* s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* x00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* ?x1104 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 36 (* r00 r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* r00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 72) ?x2362) (* 72 ?x2574) (* 8 ?x1831) (* 12 (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 216 ?x2415) (* (- 18) (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 9 (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 51 (* s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 864 ?x2872) (* 108 (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 864) ?x2883) (* 432 ?x2235) (* 72 ?x2850) (* (- 216) ?x2906) (* (- 66) (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* s00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 15 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 432) ?x2824) (* 4 (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 108 (* r00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* r00 r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 72) ?x3083) (* (- 216) (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 32) ?x2575) (* 432 (* x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* s00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* r00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 54) (* r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 432 (* r00 r00 r00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 36) ?x3328) (* 36 (* r00 r00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) ?x3376))))
 (let ((?x1459 (* x00 x00)))
 (let ((?x2885 (* 108 ?x1459)))
 (let ((?x1735 (* (- 9) s)))
 (let ((?x526 (* r00 r00 s00)))
 (let ((?x1614 (* (- 36) ?x526)))
 (let ((?x137 (* 9 s00)))
 (let ((?x704 (* s00 s00)))
 (let ((?x1805 (* 51 ?x704)))
 (let ((?x2311 (* r00 r00 s)))
 (let ((?x1419 (* 36 ?x2311)))
 (let ((?x1297 (* s00 s00 s00)))
 (let ((?x912 (* 16 ?x1297)))
 (let ((?x918 (* s00 x00)))
 (let ((?x833 (* (- 108) ?x918)))
 (let ((?x995 (* r00 r00 r00 x00)))
 (let ((?x529 (* (- 432) ?x995)))
 (let ((?x635 (* r00 x00)))
 (let ((?x492 (* 108 ?x635)))
 (let ((?x2386 (+ (* 216 (* r00 s00 x00)) ?x492 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x529 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x833 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x912 (* (- 108) (* x s)) ?x1419 ?x1805 (* (- 108) (* r00 x)) ?x137 ?x1614 ?x1735 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2885)))
 (let (($x1173 (= ?x2386 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1100 (* (- 9) s00)))
 (let ((?x1029 (* (- 15) ?x704)))
 (let ((?x990 (* r00 r00 x00)))
 (let ((?x1003 (* (- 36) ?x990)))
 (let ((?x919 (* 6 ?x918)))
 (let ((?x658 (* s s)))
 (let ((?x682 (* 3 ?x658)))
 (let ((?x664 (* (- 54) ?x635)))
 (let ((?x2092 (+ (* (- 24) (* s r)) ?x664 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x682 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x919 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2311) ?x1003 ?x1029 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1100 (* 36 ?x526) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x491 (* (- 3) s00)))
 (let ((?x717 (* (- 4) ?x704)))
 (let ((?x659 (* 2 ?x658)))
 (let ((?x649 (* (- 18) ?x635)))
 (let ((?x1872 (+ (* (- 9) (* s r)) ?x649 (* 9 (* r00 s00)) ?x659 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2311) ?x717 (* 18 (* r00 x)) ?x491 (* 6 ?x526) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2665 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x491 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1595 (= (+ s00 ?x393 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1595 (= ?x2665 0) (= ?x1872 0) (= ?x2092 0) $x1173 (not (= ?x3397 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x665 (lambda ((r Int) (s Int) (x Int) )(let ((?x212 (* 6 r)))
 (let ((?x756 (+ 3 s ?x212)))
 (let ((?x393 (* (- 1) s)))
 (let ((?x1104 (+ x ?x393)))
 (let ((?x1734 (+ 1 r)))
 (let ((?x3376 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x3328 (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x2575 (* s00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x3083 (* r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2824 (* r00 s00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2906 (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2850 (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2235 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2883 (* r00 r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2872 (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2415 (* r00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x1831 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2574 (* r00 r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2362 (* r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x1837 (* r00 r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x580 (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x1247 (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x969 (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2328 (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x1331 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x3031 (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x2417 (+ (* 15 (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 108 (* s00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 9 (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 432) ?x3031) (* (- 24) ?x1331) (* 9 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 18) (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 216 (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 216) (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 54 (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 432 ?x2328) (* 432 (* r00 r00 r00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 216) (* r00 s00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* x00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 36 (* r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 216) (* r00 s00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 54) (* r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* x00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* r00 s00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* r00 r00 r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 54) (* r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 16 (* s00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 36) ?x969) (* 108 (* r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 108 (* r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 216) ?x1247) (* 216 (* x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 108 (* r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 9) (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 216) (* x00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 30 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 66) (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 132) (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 216) (* s00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 432 ?x580) (* 36 (* r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 16) (* s00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 216 (* r00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 432) ?x1837) (* (- 108) (* r00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 12 (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 51 (* s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 36 (* r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 36) (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 4 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 102 (* s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* x00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* ?x1104 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 36) (* r00 r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* r00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 72 ?x2362) (* (- 72) ?x2574) (* (- 8) ?x1831) (* (- 12) (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 216) ?x2415) (* 18 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 9) (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* (- 51) (* s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 864) ?x2872) (* (- 108) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 864 ?x2883) (* (- 432) ?x2235) (* (- 72) ?x2850) (* 216 ?x2906) (* 66 (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* s00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 15) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 432 ?x2824) (* (- 4) (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* r00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* r00 r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 72 ?x3083) (* 216 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 32 ?x2575) (* (- 432) (* x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* s00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* r00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 54 (* r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 432) (* r00 r00 r00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 36 ?x3328) (* (- 36) (* r00 r00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 ?x3376))))
 (let ((?x1459 (* x00 x00)))
 (let ((?x2885 (* 108 ?x1459)))
 (let ((?x1735 (* (- 9) s)))
 (let ((?x526 (* r00 r00 s00)))
 (let ((?x1614 (* (- 36) ?x526)))
 (let ((?x137 (* 9 s00)))
 (let ((?x704 (* s00 s00)))
 (let ((?x1805 (* 51 ?x704)))
 (let ((?x2311 (* r00 r00 s)))
 (let ((?x1419 (* 36 ?x2311)))
 (let ((?x1297 (* s00 s00 s00)))
 (let ((?x912 (* 16 ?x1297)))
 (let ((?x918 (* s00 x00)))
 (let ((?x833 (* (- 108) ?x918)))
 (let ((?x995 (* r00 r00 r00 x00)))
 (let ((?x529 (* (- 432) ?x995)))
 (let ((?x635 (* r00 x00)))
 (let ((?x492 (* 108 ?x635)))
 (let ((?x2386 (+ (* 216 (* r00 s00 x00)) ?x492 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x529 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x833 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x912 (* (- 108) (* x s)) ?x1419 ?x1805 (* (- 108) (* r00 x)) ?x137 ?x1614 ?x1735 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2885)))
 (let (($x1173 (= ?x2386 0)))
 (let ((?x1526 (* 15 ?x704)))
 (let ((?x990 (* r00 r00 x00)))
 (let ((?x1895 (* 36 ?x990)))
 (let ((?x2466 (* (- 6) ?x918)))
 (let ((?x1178 (* 54 ?x635)))
 (let ((?x2285 (+ (* 24 (* s r)) ?x1178 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2466 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1419 ?x1895 ?x1526 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1614 (* 54 (* x00 r)) ?x1735 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x612 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2929 (* 4 ?x704)))
 (let ((?x1214 (* 18 ?x635)))
 (let ((?x2562 (+ (* 9 (* s r)) ?x1214 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2311) ?x2929 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x526) (* 18 (* x00 r)) ?x612 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x582 (* r00 r00 r00)))
 (let ((?x583 (* 12 ?x582)))
 (let ((?x614 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x613 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2965 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x612 ?x613 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x614 ?x583)))
 (let (($x1595 (= (+ s00 ?x393 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1600 (and $x1595 (= ?x2965 0) (= ?x2562 0) (= ?x2285 0) $x1173 (not (= ?x2417 0)))))
 (let ((?x3397 (+ (* (- 15) (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* s00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 9) (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 432 ?x3031) (* 24 ?x1331) (* (- 9) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 18 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 216) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 216 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 54) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 432) ?x2328) (* (- 432) (* r00 r00 r00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 216 (* r00 s00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* x00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 36) (* r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 216 (* r00 s00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 54 (* r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* x00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* r00 s00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* r00 r00 r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 54 (* r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 16) (* s00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 36 ?x969) (* (- 108) (* r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 216 ?x1247) (* (- 216) (* x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 108 (* ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 9 (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 216 (* x00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 30) (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 66 (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 132 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 216 (* s00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 432) ?x580) (* (- 36) (* r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 16 (* s00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 216) (* r00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 432 ?x1837) (* 108 (* r00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 12) (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 51) (* s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 36) (* r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 36 (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 4) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 102) (* s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* x00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* ?x1104 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 36 (* r00 r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* r00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 72) ?x2362) (* 72 ?x2574) (* 8 ?x1831) (* 12 (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 216 ?x2415) (* (- 18) (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 9 (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 51 (* s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 864 ?x2872) (* 108 (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 864) ?x2883) (* 432 ?x2235) (* 72 ?x2850) (* (- 216) ?x2906) (* (- 66) (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* s00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 15 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 432) ?x2824) (* 4 (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 108 (* r00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* r00 r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 72) ?x3083) (* (- 216) (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 32) ?x2575) (* 432 (* x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* s00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* r00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 54) (* r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 432 (* r00 r00 r00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 36) ?x3328) (* 36 (* r00 r00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) ?x3376))))
 (let ((?x143 (* 9 s)))
 (let ((?x1100 (* (- 9) s00)))
 (let ((?x1029 (* (- 15) ?x704)))
 (let ((?x1003 (* (- 36) ?x990)))
 (let ((?x919 (* 6 ?x918)))
 (let ((?x658 (* s s)))
 (let ((?x682 (* 3 ?x658)))
 (let ((?x664 (* (- 54) ?x635)))
 (let ((?x2092 (+ (* (- 24) (* s r)) ?x664 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x682 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x919 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2311) ?x1003 ?x1029 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1100 (* 36 ?x526) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x491 (* (- 3) s00)))
 (let ((?x717 (* (- 4) ?x704)))
 (let ((?x659 (* 2 ?x658)))
 (let ((?x649 (* (- 18) ?x635)))
 (let ((?x1872 (+ (* (- 9) (* s r)) ?x649 (* 9 (* r00 s00)) ?x659 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2311) ?x717 (* 18 (* r00 x)) ?x491 (* 6 ?x526) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2665 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x491 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x582))))
 (let (($x3086 (and $x1595 (= ?x2665 0) (= ?x1872 0) (= ?x2092 0) $x1173 (not (= ?x3397 0)))))
 (rewrite (= $x3086 $x1600))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x390 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (- x s)))
 (let ((?x212 (* 6 r)))
 (let ((?x213 (+ s ?x212 3)))
 (let ((?x221 (+ r 1)))
 (let ((?x380 (* 36 ?x221 ?x221 ?x221 r00 r00 ?x213 ?x213 s00 s00 ?x214 ?x214)))
 (let ((?x361 (* 72 ?x221 ?x221 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)))
 (let ((?x346 (* 72 ?x221 ?x221 r00 r00 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214)))
 (let ((?x343 (* 864 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214)))
 (let ((?x339 (* 864 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00)))
 (let ((?x296 (* 432 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)))
 (let ((?x288 (* 432 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)))
 (let ((?x269 (* 216 ?x221 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 s00 ?x214 ?x214)))
 (let ((?x237 (* 432 ?x221 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x214 ?x214 x00)))
 (let ((?x218 (- (* (- 15) ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214) (* 108 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x224 (+ (- ?x218 (* 9 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)) (* 432 ?x221 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x214 ?x214 ?x214) (* 24 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x228 (- (- ?x224 (* 9 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 ?x214 ?x214)) (* 108 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x231 (+ ?x228 (* 108 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 ?x214 ?x214 x00) (* 18 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x233 (- ?x231 (* 216 ?x221 ?x221 ?x221 r00 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x235 (+ ?x233 (* 216 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x241 (- (- ?x235 (* 54 ?x221 ?x221 ?x221 r00 ?x213 ?x213 s00 ?x214 ?x214)) ?x237)))
 (let ((?x242 (- ?x241 (* 432 r00 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x246 (+ (- ?x242 (* 216 ?x221 ?x221 ?x221 ?x213 ?x213 ?x214 ?x214 ?x214 x00)) (* 216 ?x221 ?x221 ?x221 r00 ?x213 ?x213 s00 ?x214 ?x214 x00) (* 108 ?x221 ?x221 ?x221 ?x213 ?x213 ?x214 ?x214 x00 x00))))
 (let ((?x248 (- ?x246 (* 36 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x251 (+ ?x248 (* 216 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 ?x214) (* 54 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x255 (- ?x251 (* 216 ?x221 ?x221 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00 x00))))
 (let ((?x257 (- (- ?x255 (* 216 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 x00)) (* 216 r00 r00 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x261 (- (+ ?x257 (* 54 ?x221 ?x221 ?x221 r00 ?x213 ?x213 ?x213 ?x214 ?x214)) (* 16 ?x213 ?x213 ?x213 s00 s00 s00 ?x214 ?x214 ?x214))))
 (let ((?x263 (+ ?x261 (* 36 ?x221 ?x221 ?x221 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x266 (- ?x263 (* 108 ?x221 ?x221 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x267 (- ?x266 (* 108 ?x221 ?x221 ?x221 r00 ?x213 ?x213 s00 s00 ?x214 ?x214))))
 (let ((?x270 (+ ?x267 (* 108 ?x221 ?x221 ?x221 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214) ?x269)))
 (let ((?x272 (- ?x270 (* 216 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00))))
 (let ((?x276 (- (+ ?x272 (* 108 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214)) (* 108 ?x221 ?x221 ?x221 r00 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x279 (+ ?x276 (* 9 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214) (* 216 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214 x00))))
 (let ((?x282 (- ?x279 (* 30 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x287 (+ ?x282 (* 66 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 132 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 216 ?x221 ?x221 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 x00))))
 (let ((?x291 (- (- ?x287 ?x288) (* 36 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x293 (+ ?x291 (* 16 ?x221 ?x221 ?x221 ?x213 ?x213 s00 s00 s00 ?x214 ?x214))))
 (let ((?x295 (- ?x293 (* 216 ?x221 ?x221 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00))))
 (let ((?x298 (+ ?x295 ?x296 (* 108 ?x221 ?x221 ?x221 r00 ?x213 ?x213 ?x214 ?x214 x00))))
 (let ((?x303 (- ?x298 (* 12 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214))))
 (let ((?x305 (- (- ?x303 (* 51 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214)) (* 36 ?x221 ?x221 ?x221 r00 r00 ?x213 ?x213 s00 ?x214 ?x214))))
 (let ((?x309 (+ (- ?x305 (* 108 r00 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)) (* 36 ?x221 ?x221 ?x221 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214) (* 216 ?x221 ?x221 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x315 (- ?x309 (* 4 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x316 (- ?x315 (* 102 ?x221 ?x221 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214))))
 (let ((?x318 (- (- ?x316 (* 108 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00 x00)) (* 108 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x321 (+ ?x318 (* 36 r00 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 108 r00 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214))))
 (let ((?x324 (- ?x321 (* 72 ?x221 ?x221 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x330 (+ ?x324 (* 72 ?x221 ?x221 r00 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 8 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214) (* 12 ?x213 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 216 ?x221 ?x221 r00 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214))))
 (let ((?x334 (- (- ?x330 (* 18 ?x221 ?x221 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)) (* 216 ?x221 ?x221 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x342 (+ ?x334 (* 9 ?x221 ?x221 ?x221 ?x213 ?x213 s00 ?x214 ?x214) (* 108 ?x221 ?x221 ?x221 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 51 ?x221 ?x221 ?x221 ?x213 ?x213 s00 s00 ?x214 ?x214) ?x339 (* 108 ?x221 ?x221 ?x221 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214) (* 108 ?x221 ?x221 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x347 (+ (- ?x342 ?x343) (* 432 ?x221 ?x221 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 ?x214) ?x346)))
 (let ((?x350 (- ?x347 (* 216 ?x221 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x354 (+ (- ?x350 (* 66 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 s00 ?x214 ?x214)) (* 108 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 x00) (* 15 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x356 (- ?x354 (* 432 ?x221 ?x221 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 x00))))
 (let ((?x360 (+ ?x356 (* 4 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214) (* 108 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214) (* 216 r00 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x367 (- (- ?x360 ?x361) (* 216 ?x221 ?x221 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x369 (- (- ?x367 (* 108 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00)) (* 32 ?x221 ?x221 ?x213 ?x213 ?x213 s00 s00 s00 ?x214 ?x214 ?x214))))
 (let ((?x371 (+ ?x369 (* 432 ?x221 ?x221 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214 x00))))
 (let ((?x376 (- (- ?x371 (* 108 ?x221 ?x221 ?x221 ?x213 ?x213 s00 ?x214 ?x214 x00)) (* 108 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00))))
 (let ((?x379 (+ (- ?x376 (* 54 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)) (* 432 r00 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00))))
 (let ((?x383 (+ (- ?x379 ?x380) (* 36 r00 r00 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214))))
 (let ((?x385 (- ?x383 (* 216 ?x221 ?x221 r00 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x385 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1093 (lambda ((r Int) (s Int) (x Int) )(let ((?x212 (* 6 r)))
 (let ((?x756 (+ 3 s ?x212)))
 (let ((?x393 (* (- 1) s)))
 (let ((?x1104 (+ x ?x393)))
 (let ((?x1734 (+ 1 r)))
 (let ((?x3376 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x3328 (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x2575 (* s00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x3083 (* r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2824 (* r00 s00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2906 (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2850 (* r00 r00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2235 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2883 (* r00 r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2872 (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2415 (* r00 s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x1831 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2574 (* r00 r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x2362 (* r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x1837 (* r00 r00 r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x580 (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)))
 (let ((?x1247 (* r00 r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x969 (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x2328 (* r00 r00 r00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x1331 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)))
 (let ((?x3031 (* r00 r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)))
 (let ((?x3397 (+ (* (- 15) (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* s00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 9) (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 432 ?x3031) (* 24 ?x1331) (* (- 9) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 18 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 216) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 216 (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 54) (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 432) ?x2328) (* (- 432) (* r00 r00 r00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 216 (* r00 s00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* x00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 36) (* r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 216 (* r00 s00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 54 (* r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* x00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* r00 s00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* r00 r00 r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 54 (* r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 16) (* s00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 36 ?x969) (* (- 108) (* r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* r00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 216 ?x1247) (* (- 216) (* x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 108 (* ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 108) (* r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 9 (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 216 (* x00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 30) (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 66 (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 132 (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 216 (* s00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 432) ?x580) (* (- 36) (* r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 16 (* s00 s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 216) (* r00 x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 432 ?x1837) (* 108 (* r00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 12) (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 51) (* s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 36) (* r00 r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 36 (* r00 r00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* r00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 4) (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* (- 102) (* s00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* x00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* ?x1104 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 36 (* r00 r00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* r00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 72) ?x2362) (* 72 ?x2574) (* 8 ?x1831) (* 12 (* s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 216 ?x2415) (* (- 18) (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) (* s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 9 (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 108 (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756)) (* 51 (* s00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* 864 ?x2872) (* 108 (* r00 s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* r00 s00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 864) ?x2883) (* 432 ?x2235) (* 72 ?x2850) (* (- 216) ?x2906) (* (- 66) (* s00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 108 (* s00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 15 (* ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 432) ?x2824) (* 4 (* ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756 ?x756 ?x756)) (* 108 (* r00 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* 216 (* r00 r00 r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 72) ?x3083) (* (- 216) (* ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* (- 32) ?x2575) (* 432 (* x00 ?x1734 ?x1734 ?x1104 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 108) (* s00 x00 ?x1734 ?x1734 ?x1734 ?x1104 ?x1104 ?x756 ?x756)) (* (- 108) (* r00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 54) (* r00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756 ?x756)) (* 432 (* r00 r00 r00 x00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 36) ?x3328) (* 36 (* r00 r00 s00 s00 ?x1104 ?x1104 ?x1104 ?x756 ?x756 ?x756)) (* (- 216) ?x3376))))
 (let ((?x1459 (* x00 x00)))
 (let ((?x2885 (* 108 ?x1459)))
 (let ((?x1735 (* (- 9) s)))
 (let ((?x526 (* r00 r00 s00)))
 (let ((?x1614 (* (- 36) ?x526)))
 (let ((?x137 (* 9 s00)))
 (let ((?x704 (* s00 s00)))
 (let ((?x1805 (* 51 ?x704)))
 (let ((?x2311 (* r00 r00 s)))
 (let ((?x1419 (* 36 ?x2311)))
 (let ((?x1297 (* s00 s00 s00)))
 (let ((?x912 (* 16 ?x1297)))
 (let ((?x918 (* s00 x00)))
 (let ((?x833 (* (- 108) ?x918)))
 (let ((?x995 (* r00 r00 r00 x00)))
 (let ((?x529 (* (- 432) ?x995)))
 (let ((?x635 (* r00 x00)))
 (let ((?x492 (* 108 ?x635)))
 (let ((?x2386 (+ (* 216 (* r00 s00 x00)) ?x492 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x529 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x833 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x912 (* (- 108) (* x s)) ?x1419 ?x1805 (* (- 108) (* r00 x)) ?x137 ?x1614 ?x1735 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2885)))
 (let (($x1173 (= ?x2386 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1100 (* (- 9) s00)))
 (let ((?x1029 (* (- 15) ?x704)))
 (let ((?x990 (* r00 r00 x00)))
 (let ((?x1003 (* (- 36) ?x990)))
 (let ((?x919 (* 6 ?x918)))
 (let ((?x658 (* s s)))
 (let ((?x682 (* 3 ?x658)))
 (let ((?x664 (* (- 54) ?x635)))
 (let ((?x2092 (+ (* (- 24) (* s r)) ?x664 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x682 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x919 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2311) ?x1003 ?x1029 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1100 (* 36 ?x526) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x491 (* (- 3) s00)))
 (let ((?x717 (* (- 4) ?x704)))
 (let ((?x659 (* 2 ?x658)))
 (let ((?x649 (* (- 18) ?x635)))
 (let ((?x1872 (+ (* (- 9) (* s r)) ?x649 (* 9 (* r00 s00)) ?x659 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2311) ?x717 (* 18 (* r00 x)) ?x491 (* 6 ?x526) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2665 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x491 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1595 (= (+ s00 ?x393 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3086 (and $x1595 (= ?x2665 0) (= ?x1872 0) (= ?x2092 0) $x1173 (not (= ?x3397 0)))))
 (let ((?x214 (- x s)))
 (let ((?x213 (+ s ?x212 3)))
 (let ((?x221 (+ r 1)))
 (let ((?x380 (* 36 ?x221 ?x221 ?x221 r00 r00 ?x213 ?x213 s00 s00 ?x214 ?x214)))
 (let ((?x361 (* 72 ?x221 ?x221 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)))
 (let ((?x346 (* 72 ?x221 ?x221 r00 r00 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214)))
 (let ((?x343 (* 864 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214)))
 (let ((?x339 (* 864 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00)))
 (let ((?x296 (* 432 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)))
 (let ((?x288 (* 432 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)))
 (let ((?x269 (* 216 ?x221 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 s00 ?x214 ?x214)))
 (let ((?x237 (* 432 ?x221 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x214 ?x214 x00)))
 (let ((?x218 (- (* (- 15) ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214) (* 108 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x224 (+ (- ?x218 (* 9 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)) (* 432 ?x221 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x214 ?x214 ?x214) (* 24 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x228 (- (- ?x224 (* 9 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 ?x214 ?x214)) (* 108 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x231 (+ ?x228 (* 108 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 ?x214 ?x214 x00) (* 18 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x233 (- ?x231 (* 216 ?x221 ?x221 ?x221 r00 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x235 (+ ?x233 (* 216 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x241 (- (- ?x235 (* 54 ?x221 ?x221 ?x221 r00 ?x213 ?x213 s00 ?x214 ?x214)) ?x237)))
 (let ((?x242 (- ?x241 (* 432 r00 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x246 (+ (- ?x242 (* 216 ?x221 ?x221 ?x221 ?x213 ?x213 ?x214 ?x214 ?x214 x00)) (* 216 ?x221 ?x221 ?x221 r00 ?x213 ?x213 s00 ?x214 ?x214 x00) (* 108 ?x221 ?x221 ?x221 ?x213 ?x213 ?x214 ?x214 x00 x00))))
 (let ((?x248 (- ?x246 (* 36 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x251 (+ ?x248 (* 216 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 ?x214) (* 54 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x255 (- ?x251 (* 216 ?x221 ?x221 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00 x00))))
 (let ((?x257 (- (- ?x255 (* 216 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 x00)) (* 216 r00 r00 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x261 (- (+ ?x257 (* 54 ?x221 ?x221 ?x221 r00 ?x213 ?x213 ?x213 ?x214 ?x214)) (* 16 ?x213 ?x213 ?x213 s00 s00 s00 ?x214 ?x214 ?x214))))
 (let ((?x263 (+ ?x261 (* 36 ?x221 ?x221 ?x221 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x266 (- ?x263 (* 108 ?x221 ?x221 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x267 (- ?x266 (* 108 ?x221 ?x221 ?x221 r00 ?x213 ?x213 s00 s00 ?x214 ?x214))))
 (let ((?x270 (+ ?x267 (* 108 ?x221 ?x221 ?x221 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214) ?x269)))
 (let ((?x272 (- ?x270 (* 216 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00))))
 (let ((?x276 (- (+ ?x272 (* 108 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214)) (* 108 ?x221 ?x221 ?x221 r00 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x279 (+ ?x276 (* 9 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214) (* 216 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214 x00))))
 (let ((?x282 (- ?x279 (* 30 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x287 (+ ?x282 (* 66 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 132 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 216 ?x221 ?x221 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 x00))))
 (let ((?x291 (- (- ?x287 ?x288) (* 36 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x293 (+ ?x291 (* 16 ?x221 ?x221 ?x221 ?x213 ?x213 s00 s00 s00 ?x214 ?x214))))
 (let ((?x295 (- ?x293 (* 216 ?x221 ?x221 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00))))
 (let ((?x298 (+ ?x295 ?x296 (* 108 ?x221 ?x221 ?x221 r00 ?x213 ?x213 ?x214 ?x214 x00))))
 (let ((?x303 (- ?x298 (* 12 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214))))
 (let ((?x305 (- (- ?x303 (* 51 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214)) (* 36 ?x221 ?x221 ?x221 r00 r00 ?x213 ?x213 s00 ?x214 ?x214))))
 (let ((?x309 (+ (- ?x305 (* 108 r00 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)) (* 36 ?x221 ?x221 ?x221 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214) (* 216 ?x221 ?x221 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x315 (- ?x309 (* 4 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x316 (- ?x315 (* 102 ?x221 ?x221 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214))))
 (let ((?x318 (- (- ?x316 (* 108 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00 x00)) (* 108 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x321 (+ ?x318 (* 36 r00 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 108 r00 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214))))
 (let ((?x324 (- ?x321 (* 72 ?x221 ?x221 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x330 (+ ?x324 (* 72 ?x221 ?x221 r00 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 8 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214) (* 12 ?x213 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 216 ?x221 ?x221 r00 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214))))
 (let ((?x334 (- (- ?x330 (* 18 ?x221 ?x221 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214)) (* 216 ?x221 ?x221 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x342 (+ ?x334 (* 9 ?x221 ?x221 ?x221 ?x213 ?x213 s00 ?x214 ?x214) (* 108 ?x221 ?x221 ?x221 ?x213 ?x213 s00 ?x214 ?x214 ?x214) (* 51 ?x221 ?x221 ?x221 ?x213 ?x213 s00 s00 ?x214 ?x214) ?x339 (* 108 ?x221 ?x221 ?x221 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214) (* 108 ?x221 ?x221 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x347 (+ (- ?x342 ?x343) (* 432 ?x221 ?x221 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 ?x214) ?x346)))
 (let ((?x350 (- ?x347 (* 216 ?x221 ?x221 ?x221 r00 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x354 (+ (- ?x350 (* 66 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 s00 ?x214 ?x214)) (* 108 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 x00) (* 15 ?x221 ?x221 ?x221 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214))))
 (let ((?x356 (- ?x354 (* 432 ?x221 ?x221 r00 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214 x00))))
 (let ((?x360 (+ ?x356 (* 4 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214) (* 108 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214) (* 216 r00 r00 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214))))
 (let ((?x367 (- (- ?x360 ?x361) (* 216 ?x221 ?x221 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x369 (- (- ?x367 (* 108 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00)) (* 32 ?x221 ?x221 ?x213 ?x213 ?x213 s00 s00 s00 ?x214 ?x214 ?x214))))
 (let ((?x371 (+ ?x369 (* 432 ?x221 ?x221 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 ?x214 x00))))
 (let ((?x376 (- (- ?x371 (* 108 ?x221 ?x221 ?x221 ?x213 ?x213 s00 ?x214 ?x214 x00)) (* 108 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00))))
 (let ((?x379 (+ (- ?x376 (* 54 r00 ?x213 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214)) (* 432 r00 r00 r00 ?x213 ?x213 ?x213 ?x214 ?x214 ?x214 x00))))
 (let ((?x383 (+ (- ?x379 ?x380) (* 36 r00 r00 ?x213 ?x213 ?x213 s00 s00 ?x214 ?x214 ?x214))))
 (let ((?x385 (- ?x383 (* 216 ?x221 ?x221 r00 ?x213 ?x213 ?x213 ?x213 s00 ?x214 ?x214 ?x214))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x389 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x385 0))))))
 (rewrite (= $x389 $x3086)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x391 (asserted $x390)))
 (let ((@x1207 (mp (mp @x391 (quant-intro (proof-bind ?x1093) (= $x390 $x1107)) $x1107) (rewrite (= $x1107 $x1107)) $x1107)))
 (let ((@x3151 (mp (mp @x1207 (quant-intro (proof-bind ?x665) (= $x1107 $x1083)) $x1083) (quant-intro (proof-bind ?x641) (= $x1083 $x1512)) $x1512)))
 (let ((@x2588 (mp (mp~ @x3151 (sk (~ $x1512 $x2800)) $x2800) (rewrite (= $x2800 $x534)) $x534)))
 (let ((@x2451 (and-elim @x2588 $x3153)))
 (let ((@x2342 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3153) $x3368)) @x2451 $x3368)))
 (let (($x536 (>= ?x2677 0)))
 (let ((@x1226 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3153) $x536)) @x2451 $x536)))
 (let (($x1718 (<= ?x1832 0)))
 (let ((@x2693 (and-elim @x2588 $x2330)))
 (let ((@x2144 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2330) $x1718)) @x2693 $x1718)))
 (let (($x1599 (>= ?x1832 0)))
 (let ((@x1289 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2330) $x1599)) @x2693 $x1599)))
 (let (($x3011 (<= ?x968 0)))
 (let ((@x2775 (and-elim @x2588 $x1924)))
 (let ((@x1260 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1924) $x3011)) @x2775 $x3011)))
 (let (($x3044 (>= ?x968 0)))
 (let ((@x2045 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1924) $x3044)) @x2775 $x3044)))
 (let (($x2605 (<= ?x2149 0)))
 (let ((@x1810 (and-elim @x2588 $x1051)))
 (let ((@x789 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1051) $x2605)) @x1810 $x2605)))
 (let (($x2527 (>= ?x2149 0)))
 (let ((@x718 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1051) $x2527)) @x1810 $x2527)))
 (let (($x2620 (<= ?x1290 0)))
 (let ((@x1813 (and-elim @x2588 $x3089)))
 (let ((@x2129 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3089) $x2620)) @x1813 $x2620)))
 (let (($x2612 (>= ?x1290 0)))
 (let ((@x2728 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3089) $x2612)) @x1813 $x2612)))
 (let (($x1128 (not (<= ?x568 0))))
 (let (($x502 (>= ?x568 0)))
 (let ((@x811 ((_ th-lemma arith) (hypothesis (not $x502)) @x1226 @x2342 @x1289 @x2144 @x1289 @x2144 @x2045 @x1260 @x2045 @x1260 @x1226 @x2342 @x1289 @x2144 @x2728 @x2129 @x1226 @x2342 @x2045 @x1260 @x718 @x789 @x1226 @x2342 @x2045 @x1260 @x1289 @x2144 @x1226 @x2342 false)))
 (let ((@x3347 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x571 $x1128 (not $x502))) (and-elim @x2588 $x2591) (or $x1128 (not $x502)))))
 ((_ th-lemma arith) (unit-resolution @x3347 (lemma @x811 $x502) $x1128) @x1226 @x2342 @x1289 @x2144 @x1289 @x2144 @x2045 @x1260 @x2045 @x1260 @x1226 @x2342 @x1289 @x2144 @x2728 @x2129 @x1226 @x2342 @x2045 @x1260 @x718 @x789 @x1226 @x2342 @x2045 @x1260 @x1289 @x2144 @x1226 @x2342 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        27
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1172
 :arith-nonlinear-bounds    20
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      8
 :arith-tableau-max-columns 201
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.55
 :memory                    3.59
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                6423064
 :num-checks                1
 :propagations              12
 :rlimit-count              62706
 :time                      0.07
 :total-time                0.10)
