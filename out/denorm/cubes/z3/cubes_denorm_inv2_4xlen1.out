unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x150 (+ 6 m!1)))
 (let (($x2708 (<= ?x150 0)))
 (let ((?x102 (+ m!1 (* (- 6) n!0))))
 (let (($x745 (<= ?x102 6)))
 (let (($x96 (= ?x102 6)))
 (let ((?x421 (* m!1 m!1)))
 (let ((?x136 (* 2 (* k!2 m!1))))
 (let ((?x388 (* k!2 n!0)))
 (let ((?x418 (* (- 9) ?x388)))
 (let ((?x353 (* k!2 k!2)))
 (let ((?x192 (* c!3 n!0)))
 (let ((?x172 (* (- 9) ?x192)))
 (let ((?x454 (* 9 n!0)))
 (let ((?x171 (* (- 5) m!1)))
 (let ((?x247 (* (- 32) k!2)))
 (let ((?x154 (* (- 27) c!3)))
 (let ((?x139 (+ 13 ?x154 ?x247 ?x171 ?x454 ?x172 ?x353 ?x418 ?x136 ?x421)))
 (let ((?x153 (+ c!3 k!2)))
 (let ((?x158 (+ k!2 m!1)))
 (let ((?x326 (+ 1 n!0)))
 (let ((?x255 (* ?x326 ?x326 ?x326 ?x326 ?x326 ?x326 ?x150 ?x150 ?x150 ?x150 ?x150 ?x150 ?x150 ?x158 ?x158 ?x158 ?x158 ?x158 ?x158 ?x158 ?x158 ?x153 ?x153 ?x153 ?x153 ?x153 ?x139)))
 (let (($x145 (= ?x255 0)))
 (let (($x292 (not $x145)))
 (let ((?x323 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x310 (= ?x323 1)))
 (let ((?x321 (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x388))))
 (let (($x412 (= ?x321 1)))
 (let ((?x198 (* (- 1) ?x353)))
 (let ((?x205 (* 9 ?x192)))
 (let ((?x747 (* (- 9) n!0)))
 (let ((?x381 (* 5 k!2)))
 (let ((?x100 (* 18 c!3)))
 (let ((?x397 (+ ?x100 ?x381 ?x747 ?x205 ?x198)))
 (let (($x155 (= ?x397 4)))
 (let (($x169 (and $x96 $x155 $x412 $x310 $x292)))
 (let ((?x425 (* ?x326 ?x326 ?x326 ?x326 ?x326 ?x326 ?x150 ?x150 ?x150 ?x150 ?x150 ?x150 ?x150 ?x158 ?x158 ?x158 ?x158 ?x158 ?x158 ?x158 ?x158 ?x153 ?x153 ?x153 ?x153 ?x153 (+ 13 ?x154 ?x247 ?x171 ?x454 ?x353 ?x418 ?x172 ?x136 ?x421))))
 (let (($x423 (and $x96 (= (+ ?x100 ?x381 ?x747 ?x198 ?x205) 4) $x412 $x310 (not (= ?x425 0)))))
 (let (($x371 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x422 (* (- 5) m)))
 (let ((?x477 (+ 13 (* (- 27) c) (* (- 32) k) ?x422 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) (* m m))))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x482 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x229 (* ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68 ?x68 ?x68 ?x477)))
 (let (($x294 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x256 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x204 (= (+ ?x40 ?x44 ?x206 ?x207 (* 9 (* c n))) 4)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (and $x120 $x204 $x256 $x294 (not (= ?x229 0)))))))))))))))))))) :qid k!34))
 ))
 (let (($x170 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x422 (* (- 5) m)))
 (let ((?x190 (* (- 18) c)))
 (let ((?x366 (+ 13 ?x190 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x422 ?x48 ?x78)))
 (let ((?x68 (+ c k)))
 (let ((?x482 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x446 (* ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68 ?x68 ?x68 ?x366)))
 (let (($x480 (not (= ?x446 0))))
 (let (($x287 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x211 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (and $x120 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x206 ?x207) 4) $x211 $x287 $x480)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x386 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x422 (* (- 5) m)))
 (let ((?x477 (+ 13 (* (- 27) c) (* (- 32) k) ?x422 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) (* m m))))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x482 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x229 (* ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68 ?x68 ?x68 ?x477)))
 (let (($x294 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x256 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x204 (= (+ ?x40 ?x44 ?x206 ?x207 (* 9 (* c n))) 4)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (let (($x113 (and $x120 $x204 $x256 $x294 (not (= ?x229 0)))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x190 (* (- 18) c)))
 (let ((?x366 (+ 13 ?x190 (* (- 23) k) (* (- 9) (* ?x337 ?x68)) ?x422 ?x48 ?x78)))
 (let ((?x446 (* ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68 ?x68 ?x68 ?x366)))
 (let (($x480 (not (= ?x446 0))))
 (let (($x287 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x211 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x363 (and $x120 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x206 ?x207) 4) $x211 $x287 $x480)))
 (rewrite (= $x363 $x113)))))))))))))))))))))))))))))
 ))
 (let (($x481 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x422 (* (- 5) m)))
 (let ((?x190 (* (- 18) c)))
 (let ((?x366 (+ 13 ?x190 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x422 ?x48 ?x78)))
 (let ((?x68 (+ c k)))
 (let ((?x482 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x446 (* ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68 ?x68 ?x68 ?x366)))
 (let (($x480 (not (= ?x446 0))))
 (let (($x287 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x151 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x212 (= (+ ?x190 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (and $x120 $x212 $x151 $x287 $x480)))))))))))))))) :qid k!34))
 ))
 (let ((?x199 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x422 (* (- 5) m)))
 (let ((?x190 (* (- 18) c)))
 (let ((?x366 (+ 13 ?x190 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x422 ?x48 ?x78)))
 (let ((?x68 (+ c k)))
 (let ((?x482 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x446 (* ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68 ?x68 ?x68 ?x366)))
 (let (($x480 (not (= ?x446 0))))
 (let (($x287 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x211 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (let (($x363 (and $x120 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x206 ?x207) 4) $x211 $x287 $x480)))
 (let (($x151 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x212 (= (+ ?x190 (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49) (- 4))))
 (let (($x224 (and $x120 $x212 $x151 $x287 $x480)))
 (rewrite (= $x224 $x363))))))))))))))))))))))))))
 ))
 (let (($x87 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x80 (+ m 6)))
 (let ((?x72 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x81 (- 1)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x76 (- (- (- (* 4 1) (* 18 ?x68)) (* 9 ?x68 ?x70)) (* 5 ?x72))))
 (let ((?x82 (* (+ ?x76 (* 9 ?x70) ?x78) ?x72 ?x72 ?x72 ?x80 ?x80 ?x81 ?x68 ?x72 ?x80 ?x80 ?x70 ?x70 ?x70 ?x81 ?x68 ?x68 ?x68 ?x72 ?x80 ?x80 ?x81 ?x68 ?x72 ?x72 ?x72 ?x80 ?x70 ?x70 ?x70)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x82 0))))))))))))))))))) :qid k!34))
 ))
 (let ((?x488 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x422 (* (- 5) m)))
 (let ((?x190 (* (- 18) c)))
 (let ((?x366 (+ 13 ?x190 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x422 ?x48 ?x78)))
 (let ((?x68 (+ c k)))
 (let ((?x482 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x446 (* ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68 ?x68 ?x68 ?x366)))
 (let (($x480 (not (= ?x446 0))))
 (let (($x287 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x151 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x212 (= (+ ?x190 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (let (($x224 (and $x120 $x212 $x151 $x287 $x480)))
 (let ((?x70 (+ n 1)))
 (let ((?x80 (+ m 6)))
 (let ((?x81 (- 1)))
 (let ((?x76 (- (- (- (* 4 1) (* 18 ?x68)) (* 9 ?x68 ?x70)) (* 5 ?x72))))
 (let ((?x82 (* (+ ?x76 (* 9 ?x70) ?x78) ?x72 ?x72 ?x72 ?x80 ?x80 ?x81 ?x68 ?x72 ?x80 ?x80 ?x70 ?x70 ?x70 ?x81 ?x68 ?x68 ?x68 ?x72 ?x80 ?x80 ?x81 ?x68 ?x72 ?x72 ?x72 ?x80 ?x70 ?x70 ?x70)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x86 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x82 0))))))
 (rewrite (= $x86 $x224)))))))))))))))))))))))))))))))
 ))
 (let ((@x88 (asserted $x87)))
 (let ((@x359 (mp (mp @x88 (quant-intro (proof-bind ?x488) (= $x87 $x481)) $x481) (rewrite (= $x481 $x481)) $x481)))
 (let ((@x116 (mp (mp @x359 (quant-intro (proof-bind ?x199) (= $x481 $x170)) $x170) (quant-intro (proof-bind ?x386) (= $x170 $x371)) $x371)))
 (let ((@x218 (mp (mp~ @x116 (sk (~ $x371 $x423)) $x423) (rewrite (= $x423 $x169)) $x169)))
 (let ((@x236 (and-elim @x218 $x96)))
 (let ((@x784 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x96) $x745)) @x236 $x745)))
 (let (($x1814 (>= ?x326 0)))
 (let (($x2065 (not $x1814)))
 (let (($x332 (>= ?x326 (- 1))))
 (let (($x110 (not $x332)))
 (let (($x2323 (<= ?x326 (- 1))))
 (let (($x2356 (<= ?x326 0)))
 (let (($x2362 (not $x2356)))
 (let ((@x2322 (hypothesis $x2362)))
 (let (($x746 (>= ?x102 6)))
 (let ((@x789 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x96) $x746)) @x236 $x746)))
 (let ((?x325 (* n!0 n!0)))
 (let (($x215 (>= ?x325 0)))
 (let ((@x753 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x215)) false) $x215)))
 (let (($x750 (>= ?x323 1)))
 (let ((@x293 (and-elim @x218 $x310)))
 (let ((@x433 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x310) $x750)) @x293 $x750)))
 (let (($x751 (>= ?x321 1)))
 (let ((@x254 (and-elim @x218 $x412)))
 (let ((@x405 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x412) $x751)) @x254 $x751)))
 (let (($x2250 (<= ?x139 0)))
 (let (($x243 (<= ?x321 1)))
 (let ((@x413 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x412) $x243)) @x254 $x243)))
 (let (($x246 (<= ?x397 4)))
 (let ((@x168 (and-elim @x218 $x155)))
 (let ((@x766 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x155) $x246)) @x168 $x246)))
 (let (($x245 (>= ?x397 4)))
 (let ((@x135 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x155) $x245)) @x168 $x245)))
 (let (($x749 (<= ?x323 1)))
 (let ((@x436 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x310) $x749)) @x293 $x749)))
 (let ((@x1840 ((_ th-lemma arith) (hypothesis (not $x2250)) @x433 @x436 @x433 @x436 @x789 @x784 @x433 @x436 @x433 @x436 @x135 @x766 @x433 @x436 @x433 @x436 @x789 @x784 @x405 @x413 @x433 @x436 @x135 @x766 @x405 @x413 false)))
 (let ((@x2258 (lemma @x1840 $x2250)))
 (let (($x2334 (not (<= ?x255 0))))
 (let (($x238 (>= ?x255 0)))
 (let (($x775 (<= m!1 0)))
 (let (($x759 (<= m!1 1)))
 (let (($x451 (not $x238)))
 (let ((@x444 (hypothesis $x451)))
 (let (($x495 (not $x759)))
 (let ((@x163 (hypothesis $x495)))
 (let (($x779 (>= ?x153 0)))
 (let (($x263 (not $x779)))
 (let (($x778 (<= ?x153 0)))
 (let (($x137 (not $x778)))
 (let ((@x452 (hypothesis $x137)))
 (let ((@x419 ((_ th-lemma arith) @x444 @x452 @x784 @x753 @x433 @x163 @x163 @x784 @x163 @x433 @x436 @x789 @x784 @x433 @x436 @x789 @x784 @x405 @x413 @x405 @x413 @x433 @x436 @x789 @x784 @x135 @x766 false)))
 (let ((@x261 (lemma ((_ th-lemma arith farkas 1 1 1) @x444 (hypothesis $x779) (hypothesis $x778) false) (or $x263 $x238 $x137))))
 (let ((@x761 (unit-resolution @x261 (unit-resolution (lemma @x419 (or $x778 $x238 $x759)) @x163 @x444 $x778) @x444 $x263)))
 (let ((@x772 ((_ th-lemma arith) @x163 @x784 @x761 @x163 @x784 @x753 @x433 @x163 @x784 @x405 @x433 false)))
 (let ((@x493 (lemma ((_ th-lemma arith gcd-test -1/6 -1/6 1/6 1/6) (hypothesis (not $x775)) (hypothesis $x759) @x789 @x784 false) (or $x495 $x775))))
 (let ((@x1603 (unit-resolution @x493 (unit-resolution (lemma @x772 (or $x759 $x238)) @x444 $x759) $x775)))
 (let (($x776 (>= m!1 0)))
 (let (($x331 (>= ?x150 (- 11))))
 (let (($x1384 (>= ?x326 (- 3))))
 (let (($x1506 (not $x1384)))
 (let (($x392 (not $x331)))
 (let ((@x362 (hypothesis $x392)))
 (let (($x629 (>= ?x150 (- 12))))
 (let (($x583 (not $x629)))
 (let ((@x220 (hypothesis $x263)))
 (let ((@x584 (hypothesis $x629)))
 (let ((@x585 ((_ th-lemma arith farkas -18 31/2 -30 -90 -90 -90 -90 -1/2 -3/2 1/2 -1/2 -1/2 -1/2 -1/2 -1/2 -1/2 -1/2 -1/2 -1/2 -1/2 -6 -6 -6 -6 -6 -6 -6 1 1) @x362 @x789 @x436 @x362 @x789 @x584 @x784 @x766 @x413 @x362 @x444 @x220 @x784 @x433 @x362 @x789 @x584 @x362 @x789 @x362 @x584 @x784 @x433 @x362 @x789 @x362 @x789 @x584 @x362 false)))
 (let ((@x638 (unit-resolution (lemma @x585 (or $x583 $x331 $x238 $x779)) @x220 @x444 @x362 $x583)))
 (let (($x284 (<= ?x158 0)))
 (let (($x730 (not $x284)))
 (let (($x99 (>= ?x158 0)))
 (let ((@x274 ((_ th-lemma arith) @x362 @x789 @x433 @x362 @x789 @x789 (hypothesis (not $x99)) false)))
 (let ((@x164 (unit-resolution (lemma @x274 (or $x99 $x331)) @x362 $x99)))
 (let ((@x722 (lemma ((_ th-lemma arith farkas 1 1 1) @x444 (hypothesis $x99) (hypothesis $x284) false) (or (not $x99) $x238 $x730))))
 (let ((@x645 ((_ th-lemma arith) @x444 @x220 (unit-resolution @x722 @x164 @x444 $x730) @x638 @x789 @x638 @x433 @x436 @x789 @x784 @x405 @x413 @x433 @x436 @x433 @x436 @x789 @x784 @x135 @x766 @x405 @x413 false)))
 (let ((@x1596 (unit-resolution (lemma @x645 (or $x779 $x238 $x331)) @x362 @x444 $x779)))
 (let ((@x1501 (hypothesis $x1384)))
 (let ((@x129 (hypothesis $x779)))
 (let ((@x1502 ((_ th-lemma arith) @x129 @x433 @x436 @x789 @x1501 @x362 @x789 @x1501 @x362 @x789 @x784 @x789 @x784 @x433 @x436 @x1501 @x789 @x362 @x405 @x413 @x1501 @x789 @x362 false)))
 (let ((@x1605 (unit-resolution (lemma @x1502 (or $x1506 $x263 $x331)) @x1596 @x362 $x1506)))
 (let ((@x1606 ((_ th-lemma arith) @x1605 @x164 @x1596 @x164 @x1605 @x789 @x784 @x433 @x436 @x433 @x436 @x789 @x784 @x433 @x436 @x433 @x436 @x135 @x766 @x135 @x766 @x433 @x436 @x135 @x766 @x405 @x413 @x433 @x436 false)))
 (let ((@x234 (hypothesis $x110)))
 (let ((@x273 (hypothesis $x331)))
 (let ((@x288 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) @x444 @x789 @x273 @x784 @x234 @x766 @x413 @x436 @x789 @x273 @x784 @x234 @x135 @x405 @x433 false)))
 (let ((@x1598 (unit-resolution (lemma @x288 (or $x392 $x238 $x332)) (unit-resolution (lemma @x1606 (or $x331 $x238)) @x444 $x331) @x444 $x332)))
 (let ((@x112 (hypothesis $x332)))
 (let ((@x108 (lemma ((_ th-lemma arith farkas 1 1 1 1 1 1) @x444 @x789 @x112 @x784 (hypothesis (not $x776)) @x789 false) (or $x110 $x238 $x776))))
 (let ((@x821 ((_ th-lemma arith farkas 1 1 1 1 1) @x444 (unit-resolution @x108 @x1598 @x444 $x776) @x784 @x1603 @x789 false)))
 (let ((@x2338 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x145 $x2334 $x451)) (and-elim @x218 $x292) (or $x2334 $x451))))
 (let ((@x2339 (unit-resolution @x2338 (lemma @x821 $x238) $x2334)))
 (let ((@x2269 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 1 1) @x2339 @x2258 @x2322 @x433 @x753 @x405 @x433 @x753 @x789 @x2322 @x2322 @x789 @x2322 false)))
 (let ((@x2366 (lemma ((_ th-lemma arith farkas 1 1 1) @x2339 (hypothesis (not $x2323)) (hypothesis $x2356) false) (or $x2362 $x2323))))
 (let ((@x2350 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) @x2339 @x789 @x112 @x784 (hypothesis $x2323) false) (or (not $x2323) $x110))))
 (let ((@x2377 (unit-resolution @x2350 (unit-resolution @x2366 (lemma @x2269 $x2356) $x2323) $x110)))
 (let ((@x2745 (unit-resolution ((_ th-lemma arith assign-bounds -1 -6) (or $x2708 (not $x745) $x1814)) (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x2065 $x332)) @x2377 $x2065) @x784 $x2708)))
 (let (($x2709 (>= ?x150 0)))
 (let (($x2705 (>= ?x139 0)))
 (let (($x2732 (not $x2705)))
 (let (($x2271 (>= ?x326 (- 2))))
 (let (($x160 (>= n!0 (- 4))))
 (let (($x1248 (<= ?x158 1)))
 (let (($x1617 (not $x1248)))
 (let ((@x1611 (hypothesis $x1248)))
 (let ((@x2260 ((_ th-lemma arith) @x433 @x234 @x789 @x1611 @x1611 @x433 @x234 @x789 @x1611 @x433 @x789 false)))
 (let ((@x2268 (lemma @x2260 (or $x1617 $x332))))
 (let ((@x389 (hypothesis $x1617)))
 (let (($x714 (>= n!0 0)))
 (let (($x301 (not $x714)))
 (let ((@x126 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x301 $x160)) (hypothesis (not $x160)) $x301)))
 (let ((@x414 (hypothesis $x301)))
 (let ((@x141 ((_ th-lemma arith) @x414 @x389 @x452 @x433 @x436 @x389 @x414 @x405 @x413 @x433 @x436 @x789 @x784 @x433 @x436 false)))
 (let ((@x1496 (unit-resolution (lemma @x141 (or $x714 $x1248 $x778)) @x126 @x389 @x452 false)))
 (let ((@x2327 (unit-resolution (lemma @x1496 (or $x1248 $x778 $x160)) (unit-resolution @x2268 @x234 $x1617) @x452 $x160)))
 (let ((@x2332 (hypothesis (not $x2271))))
 (let ((@x2333 (hypothesis $x160)))
 (let ((@x2340 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 1 1) @x2339 @x2258 @x433 @x2332 @x2333 @x413 @x433 @x789 @x2332 @x2333 @x2332 @x2332 @x784 false)))
 (let ((@x2329 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1) @x2339 @x789 (unit-resolution (lemma @x2340 (or $x2271 (not $x160))) @x2327 $x2271) @x784 @x234 @x766 @x413 @x436 @x2258 false)))
 (let ((@x2741 ((_ th-lemma arith farkas 1 1 1) @x2339 @x129 (unit-resolution (lemma @x2329 (or $x332 $x778)) @x2377 $x778) false)))
 (let ((@x2731 (hypothesis (not $x2709))))
 (let ((@x2382 ((_ th-lemma arith gcd-test 1/3 1/3 1/3 1/3 -1/3 -1/3) @x433 @x436 @x789 @x784 (unit-resolution @x2268 @x2377 $x1617) (hypothesis (<= ?x158 2)) false)))
 (let ((@x2231 ((_ th-lemma arith gcd-test -1/3 -1/3 2/3 2/3 -2/3 -2/3) @x433 @x436 @x789 @x784 (lemma @x2382 (not (<= ?x158 2))) (hypothesis (<= ?x158 3)) false)))
 (let ((@x2736 ((_ th-lemma arith farkas 1 1 1 1 1 1 1) @x2339 (hypothesis $x2732) @x220 (lemma @x2231 (not (<= ?x158 3))) @x2731 @x789 @x2731 false)))
 (let ((@x2746 (unit-resolution (lemma @x2736 (or $x2705 $x779 $x2709)) (lemma @x2741 $x263) (lemma ((_ th-lemma arith farkas 1 1 1) @x2339 (hypothesis $x2705) @x2258 false) $x2732) $x2709)))
 ((_ th-lemma arith farkas 1 1 1) @x2339 @x2746 @x2745 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 98
 :arith-assert-diseq        29
 :arith-assert-lower        1016
 :arith-assert-upper        971
 :arith-bound-prop          59
 :arith-branch-var          86
 :arith-conflicts           90
 :arith-eq-adapter          27
 :arith-fixed-eqs           147
 :arith-gcd-tests           907
 :arith-gomory-cuts         66
 :arith-grobner             127
 :arith-ineq-splits         86
 :arith-max-min             7349
 :arith-nonlinear-bounds    179
 :arith-nonlinear-horner    1446
 :arith-num-rows            19
 :arith-offset-eqs          6
 :arith-patches             189
 :arith-patches_succ        17
 :arith-pivots              2883
 :arith-pseudo-nonlinear    149
 :arith-row-summations      23807
 :arith-tableau-max-columns 54
 :arith-tableau-max-rows    19
 :conflicts                 108
 :decisions                 566
 :del-clause                340
 :final-checks              463
 :max-memory                4.44
 :memory                    3.50
 :minimized-lits            14
 :mk-bool-var               622
 :mk-clause                 546
 :num-allocs                6364860
 :num-checks                1
 :propagations              1145
 :restarts                  1
 :rlimit-count              974860
 :time                      0.15
 :total-time                0.15)
