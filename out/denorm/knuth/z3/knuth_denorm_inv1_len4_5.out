unsat
((set-logic NIA)
(declare-fun x!0 () Int)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x1634 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 8) r!2) (* 4 (* r!2 d!1)) (* (- 1) (* d!1 d!1 q!3)) (* 2 (* d!1 q!3)) (* (- 4) (* d!1 x!0)))))
 (let (($x917 (>= ?x1634 0)))
 (let (($x1307 (= ?x1634 0)))
 (let ((?x1270 (* d!1 d!1 q!3)))
 (let ((?x1263 (* r!2 d!1)))
 (let ((?x586 (* (- 4) ?x1263)))
 (let ((?x768 (* 8 r!2)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x1316 (+ ?x164 ?x212 ?x196 ?x262 ?x300 ?x768 ?x586 ?x1270 (* (- 2) (* d!1 q!3)) (* 4 (* d!1 x!0)))))
 (let ((?x1604 (* r!2 r!2 r!2 d!1 d!1)))
 (let ((?x1606 (* (- 8) ?x1604)))
 (let ((?x1537 (* r!2 r!2 r!2)))
 (let ((?x1448 (* (- 48) ?x1537)))
 (let ((?x1450 (* r!2 r!2 r!2 d!1)))
 (let ((?x1060 (* (- 32) ?x1450)))
 (let ((?x1383 (* q!3 q!3 q!3)))
 (let ((?x1362 (* r!2 r!2 x!0)))
 (let ((?x1580 (* 8 ?x1362)))
 (let ((?x799 (* (- 1) (* x!0 q!3 q!3))))
 (let ((?x543 (* 6 (* r!2 r!2 r!2 q!3))))
 (let ((?x1117 (* 4 (* r!2 r!2 r!2 d!1 q!3))))
 (let ((?x1006 (* q!3 q!3)))
 (let ((?x1004 (* (- 20) ?x1006)))
 (let ((?x1003 (* r!2 r!2 d!1)))
 (let ((?x531 (* 16 ?x1003)))
 (let ((?x850 (* r!2 r!2 q!3 q!3)))
 (let ((?x840 (* r!2 r!2)))
 (let ((?x875 (* 32 ?x840)))
 (let ((?x777 (* 128 q!3)))
 (let ((?x582 (* (- 64) x!0)))
 (let ((?x1626 (* (- 128) d!1)))
 (let ((?x583 (* (- 384) r!2)))
 (let ((?x340 (* (- 1) (* r!2 r!2 x!0 q!3))))
 (let ((?x519 (* r!2 r!2 r!2 d!1 d!1 q!3)))
 (let ((?x512 (* r!2 q!3 q!3 q!3)))
 (let ((?x1202 (+ (- 256) (* (- 2) (* d!1 q!3 q!3)) (* (- 12) (* r!2 r!2 q!3)) ?x512 ?x519 (* (- 2) (* r!2 r!2 d!1 q!3)) ?x340 (* (- 22) (* r!2 q!3 q!3)) ?x583 ?x1626 ?x582 ?x777 ?x875 ?x850 ?x531 ?x1004 ?x1117 ?x543 ?x799 (* 160 (* r!2 q!3)) ?x1580 ?x1383 ?x1060 ?x1448 (* 16 (* x!0 q!3)) ?x1606 (* 32 (* d!1 q!3)))))
 (let ((?x1677 (* ?x1202 ?x1316)))
 (let (($x242 (= ?x1677 0)))
 (let (($x976 (not $x242)))
 (let ((?x1685 (* d!1 q!3)))
 (let ((?x592 (* 8 ?x1685)))
 (let ((?x1238 (* 4 ?x1604)))
 (let ((?x509 (* 24 ?x1537)))
 (let ((?x1279 (* 16 ?x1450)))
 (let ((?x1208 (* (- 4) ?x1362)))
 (let ((?x367 (* 10 ?x1006)))
 (let ((?x952 (* 4 ?x1003)))
 (let ((?x721 (* 8 ?x840)))
 (let ((?x488 (* 32 q!3)))
 (let ((?x1665 (* (- 16) x!0)))
 (let ((?x1239 (* 16 d!1)))
 (let ((?x722 (* 96 r!2)))
 (let ((?x530 (* r!2 r!2 d!1 q!3)))
 (let ((?x239 (* d!1 q!3 q!3)))
 (let ((?x846 (+ 32 ?x239 (* 6 (* r!2 r!2 q!3)) ?x512 ?x519 ?x530 ?x340 (* 14 (* r!2 q!3 q!3)) ?x722 ?x1239 ?x1665 ?x488 ?x721 ?x850 ?x952 ?x367 ?x1117 ?x543 ?x799 (* 64 (* r!2 q!3)) ?x1208 ?x1383 ?x1279 ?x509 (* (- 8) (* x!0 q!3)) ?x1238 ?x592)))
 (let ((?x708 (* ?x846 ?x1316)))
 (let (($x1129 (= ?x708 0)))
 (let ((?x902 (+ ?x512 ?x519 ?x340 (* 2 (* r!2 q!3 q!3)) ?x850 ?x1117 ?x543 ?x799 ?x1383)))
 (let ((?x369 (* ?x902 ?x1316)))
 (let (($x1571 (= ?x369 0)))
 (let ((?x437 (* (- 4) ?x1604)))
 (let ((?x1678 (* (- 24) ?x1537)))
 (let ((?x410 (* (- 16) ?x1450)))
 (let ((?x542 (* 4 ?x1362)))
 (let ((?x572 (* (- 10) ?x1006)))
 (let ((?x467 (* (- 16) d!1)))
 (let ((?x381 (* (- 32) r!2)))
 (let ((?x257 (+ (- 32) (* (- 1) ?x239) (* (- 6) (* r!2 r!2 q!3)) ?x512 ?x519 (* (- 1) ?x530) ?x340 (* (- 10) (* r!2 q!3 q!3)) ?x381 ?x467 ?x1665 ?x488 ?x721 ?x850 ?x952 ?x572 ?x1117 ?x543 ?x799 (* 32 (* r!2 q!3)) ?x542 ?x1383 ?x410 ?x1678 (* 8 (* x!0 q!3)) ?x437 ?x592)))
 (let ((?x1327 (* ?x257 ?x1316)))
 (let (($x652 (= ?x1327 0)))
 (let (($x649 (not $x652)))
 (let (($x688 (or $x649 (not $x1571) (not $x1129) $x976)))
 (let (($x1585 (and $x1307 $x688)))
 (let ((?x935 (+ ?x768 ?x164 ?x212 ?x196 (* 4 (* x!0 d!1)) ?x262 ?x300 (* (- 2) (* q!3 d!1)) (* q!3 d!1 d!1) ?x586)))
 (let ((?x1523 (* (- 1) (* q!3 r!2 r!2 x!0))))
 (let ((?x1266 (* 6 (* q!3 r!2 r!2 r!2))))
 (let ((?x1590 (* q!3 q!3 r!2 r!2)))
 (let ((?x776 (* q!3 d!1)))
 (let ((?x1240 (* 8 ?x776)))
 (let ((?x1609 (* 4 (* q!3 r!2 r!2 r!2 d!1))))
 (let ((?x324 (* q!3 q!3 q!3 r!2)))
 (let ((?x382 (* (- 1) (* q!3 q!3 x!0))))
 (let ((?x585 (* q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x522 (+ (- 32) ?x488 ?x381 ?x1665 ?x585 (* 32 (* q!3 r!2)) (* (- 1) (* q!3 q!3 d!1)) ?x721 (* 8 (* q!3 x!0)) ?x382 ?x542 ?x572 ?x952 ?x410 ?x1383 ?x324 ?x437 ?x1609 ?x467 ?x1240 (* (- 6) (* q!3 r!2 r!2)) ?x1590 ?x1266 (* (- 1) (* q!3 r!2 r!2 d!1)) ?x1523 (* (- 10) (* q!3 q!3 r!2)) ?x1678)))
 (let ((?x760 (* q!3 r!2 r!2 d!1)))
 (let ((?x837 (* q!3 q!3 d!1)))
 (let ((?x1349 (+ 32 ?x488 ?x722 ?x1665 ?x585 (* 64 (* q!3 r!2)) ?x837 ?x721 (* (- 8) (* q!3 x!0)) ?x382 ?x1208 ?x367 ?x952 ?x1279 ?x1383 ?x324 ?x1238 ?x1609 ?x1239 ?x1240 (* 6 (* q!3 r!2 r!2)) ?x1590 ?x1266 ?x760 ?x1523 (* 14 (* q!3 q!3 r!2)) ?x509)))
 (let ((?x508 (+ ?x585 ?x382 ?x1383 ?x324 ?x1609 ?x1590 ?x1266 ?x1523 (* 2 (* q!3 q!3 r!2)))))
 (let ((?x714 (+ (- 256) ?x777 ?x583 ?x582 ?x585 (* 160 (* q!3 r!2)) (* (- 2) ?x837) ?x875 (* 16 (* q!3 x!0)) ?x382 ?x1580 ?x1004 ?x531 ?x1060 ?x1383 ?x324 ?x1606 ?x1609 ?x1626 (* 32 ?x776) (* (- 12) (* q!3 r!2 r!2)) ?x1590 ?x1266 (* (- 2) ?x760) ?x1523 (* (- 22) (* q!3 q!3 r!2)) ?x1448)))
 (let (($x525 (or (not (= (* ?x714 ?x935) 0)) (not (= (* ?x508 ?x935) 0)) (not (= (* ?x1349 ?x935) 0)) (not (= (* ?x522 ?x935) 0)))))
 (let (($x539 (and (= ?x935 0) $x525)))
 (let (($x1116 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1575 (* r d)))
 (let ((?x1598 (* (- 4) ?x1575)))
 (let ((?x1572 (* q d d)))
 (let ((?x1561 (* q d)))
 (let ((?x1574 (* (- 2) ?x1561)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x1084 (* 4 (* x d))))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x693 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 ?x300 ?x1574 ?x1572 ?x1598)))
 (let ((?x1770 (* q q r)))
 (let ((?x1056 (* (- 10) ?x1770)))
 (let ((?x1766 (* (- 1) (* q r r x))))
 (let ((?x1718 (* q r r d)))
 (let ((?x1043 (* (- 1) ?x1718)))
 (let ((?x1717 (* 6 (* q r r r))))
 (let ((?x1658 (* q q r r)))
 (let ((?x1656 (* q r r)))
 (let ((?x1038 (* (- 6) ?x1656)))
 (let ((?x1647 (* 8 ?x1561)))
 (let ((?x1016 (* (- 16) d)))
 (let ((?x181 (* 4 (* q r r r d))))
 (let ((?x792 (* r r r d d)))
 (let ((?x1114 (* (- 4) ?x792)))
 (let ((?x749 (* q q q r)))
 (let ((?x724 (* q q q)))
 (let ((?x694 (* r r r d)))
 (let ((?x1474 (* (- 16) ?x694)))
 (let ((?x638 (* r r d)))
 (let ((?x811 (* 4 ?x638)))
 (let ((?x619 (* q q)))
 (let ((?x1115 (* (- 10) ?x619)))
 (let ((?x434 (* (- 1) (* q q x))))
 (let ((?x413 (* q x)))
 (let ((?x1481 (* 8 ?x413)))
 (let ((?x377 (* r r)))
 (let ((?x1527 (* 8 ?x377)))
 (let ((?x336 (* q q d)))
 (let ((?x1138 (* (- 1) ?x336)))
 (let ((?x208 (* q r r r d d)))
 (let ((?x849 (* (- 16) x)))
 (let ((?x1406 (* (- 32) r)))
 (let ((?x1126 (* 32 q)))
 (let ((?x1100 (+ (- 32) ?x1126 ?x1406 ?x849 ?x208 (* 32 (* q r)) ?x1138 ?x1527 ?x1481 ?x434 (* 4 (* r r x)) ?x1115 ?x811 ?x1474 ?x724 ?x749 ?x1114 ?x181 ?x1016 ?x1647 ?x1038 ?x1658 ?x1717 ?x1043 ?x1766 ?x1056 (* (- 24) (* r r r)))))
 (let ((?x1778 (* 14 ?x1770)))
 (let ((?x1657 (* 6 ?x1656)))
 (let ((?x1646 (* 16 d)))
 (let ((?x821 (* 4 ?x792)))
 (let ((?x823 (* 10 ?x619)))
 (let ((?x1645 (* 96 r)))
 (let ((?x1186 (+ 32 ?x1126 ?x1645 ?x849 ?x208 (* 64 (* q r)) ?x336 ?x1527 (* (- 8) ?x413) ?x434 (* (- 4) (* r r x)) ?x823 ?x811 (* 16 ?x694) ?x724 ?x749 ?x821 ?x181 ?x1646 ?x1647 ?x1657 ?x1658 ?x1717 ?x1718 ?x1766 ?x1778 (* 24 (* r r r)))))
 (let ((?x851 (* (+ ?x208 ?x434 ?x724 ?x749 ?x181 ?x1658 ?x1717 ?x1766 (* 2 ?x1770)) ?x693)))
 (let (($x815 (not (= ?x851 0))))
 (let ((?x1472 (* (- 22) ?x1770)))
 (let ((?x1470 (* (- 2) ?x1718)))
 (let ((?x1440 (* (- 12) ?x1656)))
 (let ((?x1435 (* (- 128) d)))
 (let ((?x1476 (* (- 8) ?x792)))
 (let ((?x1477 (* (- 20) ?x619)))
 (let ((?x1439 (* 32 ?x377)))
 (let ((?x1479 (* (- 2) ?x336)))
 (let ((?x1749 (* (- 64) x)))
 (let ((?x1434 (* (- 384) r)))
 (let ((?x460 (+ (- 256) (* 128 q) ?x1434 ?x1749 ?x208 (* 160 (* q r)) ?x1479 ?x1439 (* 16 ?x413) ?x434 (* 8 (* r r x)) ?x1477 (* 16 ?x638) (* (- 32) ?x694) ?x724 ?x749 ?x1476 ?x181 ?x1435 (* 32 ?x1561) ?x1440 ?x1658 ?x1717 ?x1470 ?x1766 ?x1472 (* (- 48) (* r r r)))))
 (let (($x1359 (or (not (= (* ?x460 ?x693) 0)) $x815 (not (= (* ?x1186 ?x693) 0)) (not (= (* ?x1100 ?x693) 0)))))
 (let (($x365 (= ?x693 0)))
 (and $x365 $x1359)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x323 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1575 (* r d)))
 (let ((?x1598 (* (- 4) ?x1575)))
 (let ((?x1572 (* q d d)))
 (let ((?x1561 (* q d)))
 (let ((?x1574 (* (- 2) ?x1561)))
 (let ((?x1646 (* 16 d)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x1084 (* 4 (* x d))))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x1530 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 (* (- 8) (* d 2)) ?x300 ?x1646 ?x1574 ?x1572 ?x1598)))
 (let ((?x1779 (* r r r)))
 (let ((?x1473 (* (- 32) ?x1779)))
 (let ((?x1770 (* q q r)))
 (let ((?x1472 (* (- 22) ?x1770)))
 (let ((?x1766 (* (- 1) (* q r r x))))
 (let ((?x1718 (* q r r d)))
 (let ((?x1470 (* (- 2) ?x1718)))
 (let ((?x1717 (* 6 (* q r r r))))
 (let ((?x161 (* (- 1) x)))
 (let ((?x1690 (* ?x161 r r)))
 (let ((?x1442 (* (- 8) ?x1690)))
 (let ((?x130 (* 2 r)))
 (let ((?x1659 (* ?x130 r r)))
 (let ((?x1441 (* (- 8) ?x1659)))
 (let ((?x1658 (* q q r r)))
 (let ((?x1656 (* q r r)))
 (let ((?x1440 (* (- 12) ?x1656)))
 (let ((?x1436 (* 16 ?x1561)))
 (let ((?x1513 (* (- 8) (* q (* (- 2) d)))))
 (let ((?x1509 (* (- 8) (* q (- 4)))))
 (let ((?x1493 (* (- 8) (* q (- 8) r))))
 (let ((?x1491 (* (- 8) (* (* (- 2) d) r r))))
 (let ((?x1435 (* (- 128) d)))
 (let ((?x181 (* 4 (* q r r r d))))
 (let ((?x749 (* q q q r)))
 (let ((?x724 (* q q q)))
 (let ((?x694 (* r r r d)))
 (let ((?x1474 (* (- 16) ?x694)))
 (let ((?x619 (* q q)))
 (let ((?x1477 (* (- 20) ?x619)))
 (let ((?x434 (* (- 1) (* q q x))))
 (let ((?x413 (* q x)))
 (let ((?x1481 (* 8 ?x413)))
 (let ((?x377 (* r r)))
 (let ((?x1439 (* 32 ?x377)))
 (let ((?x337 (* q ?x161)))
 (let ((?x1480 (* (- 8) ?x337)))
 (let ((?x336 (* q q d)))
 (let ((?x1479 (* (- 2) ?x336)))
 (let ((?x273 (* q r)))
 (let ((?x1471 (* 112 ?x273)))
 (let ((?x222 (* q ?x130)))
 (let ((?x1478 (* (- 8) ?x222)))
 (let ((?x208 (* q r r r d d)))
 (let ((?x1749 (* (- 64) x)))
 (let ((?x1434 (* (- 384) r)))
 (let ((?x879 (* 96 q)))
 (let ((?x379 (+ (- 256) ?x879 ?x1434 ?x1749 ?x208 ?x1478 (* (- 8) (* d d r r r)) ?x1471 ?x1479 ?x1480 ?x1439 ?x1481 ?x434 ?x1477 ?x1474 ?x724 ?x749 ?x181 ?x1435 (* (- 8) (* d 2 r r r)) ?x1491 ?x1493 ?x1509 ?x1513 ?x1436 ?x1440 ?x1658 ?x1441 ?x1442 ?x1717 ?x1470 ?x1766 ?x1472 ?x1473)))
 (let ((?x947 (* 8 d)))
 (let ((?x557 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 (* (- 4) (* d 2)) ?x300 ?x947 ?x1574 ?x1572 ?x1598)))
 (let ((?x1057 (* (- 16) ?x1779)))
 (let ((?x1056 (* (- 10) ?x1770)))
 (let ((?x1043 (* (- 1) ?x1718)))
 (let ((?x1042 (* (- 4) ?x1690)))
 (let ((?x1041 (* (- 4) ?x1659)))
 (let ((?x1038 (* (- 6) ?x1656)))
 (let ((?x1037 (* 4 ?x1561)))
 (let ((?x1409 (* (- 4) (* (* (- 1) d) r r))))
 (let ((?x1407 (* (- 4) (* q (- 4) r))))
 (let ((?x1401 (* (- 4) (* q (- 2)))))
 (let ((?x1399 (* (- 4) (* q (* (- 1) d)))))
 (let ((?x1016 (* (- 16) d)))
 (let ((?x1113 (* (- 8) ?x694)))
 (let ((?x1115 (* (- 10) ?x619)))
 (let ((?x1170 (* 4 ?x413)))
 (let ((?x1527 (* 8 ?x377)))
 (let ((?x1139 (* (- 4) ?x337)))
 (let ((?x1138 (* (- 1) ?x336)))
 (let ((?x1044 (* 24 ?x273)))
 (let ((?x1137 (* (- 4) ?x222)))
 (let ((?x849 (* (- 16) x)))
 (let ((?x1406 (* (- 32) r)))
 (let ((?x313 (* 24 q)))
 (let ((?x1326 (+ (- 32) ?x313 ?x1406 ?x849 ?x208 ?x1137 (* (- 4) (* d d r r r)) ?x1044 ?x1138 ?x1139 ?x1527 ?x1170 ?x434 ?x1115 ?x1113 ?x724 ?x749 ?x181 ?x1016 (* (- 4) (* d 2 r r r)) ?x1399 ?x1401 ?x1407 ?x1409 ?x1037 ?x1038 ?x1658 ?x1041 ?x1042 ?x1717 ?x1043 ?x1766 ?x1056 ?x1057)))
 (let ((?x693 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 ?x300 ?x1574 ?x1572 ?x1598)))
 (let ((?x851 (* (+ ?x208 ?x434 ?x724 ?x749 ?x181 ?x1658 ?x1717 ?x1766 (* 2 ?x1770)) ?x693)))
 (let (($x815 (not (= ?x851 0))))
 (let ((?x1643 (* 2 (* d 4))))
 (let ((?x1601 (* (- 8) d)))
 (let ((?x1394 (* 2 (* d 4 r r r))))
 (let ((?x1780 (* 16 ?x1779)))
 (let ((?x1778 (* 14 ?x1770)))
 (let ((?x1768 (* 4 (* q 4 r))))
 (let ((?x1691 (* 4 ?x1690)))
 (let ((?x1689 (* 4 (* d r r))))
 (let ((?x1687 (* 4 ?x1659)))
 (let ((?x1657 (* 6 ?x1656)))
 (let ((?x1647 (* 8 ?x1561)))
 (let ((?x792 (* r r r d d)))
 (let ((?x821 (* 4 ?x792)))
 (let ((?x695 (* 8 ?x694)))
 (let ((?x823 (* 10 ?x619)))
 (let ((?x414 (* (- 4) ?x413)))
 (let ((?x339 (* 4 ?x337)))
 (let ((?x1769 (* 40 ?x273)))
 (let ((?x822 (* 4 (* q 2))))
 (let ((?x326 (* 4 ?x222)))
 (let ((?x1645 (* 96 r)))
 (let ((?x588 (+ 32 ?x313 ?x1645 ?x849 ?x208 ?x326 ?x822 ?x1769 ?x336 ?x339 ?x1527 ?x414 ?x434 ?x823 ?x695 ?x724 ?x749 ?x821 ?x181 ?x1646 ?x1647 ?x1657 ?x1658 ?x1687 ?x1689 ?x1691 ?x1717 ?x1718 ?x1766 ?x1768 ?x1778 ?x1780 ?x1394)))
 (let ((?x676 (* ?x588 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 ?x300 ?x1601 ?x1574 ?x1572 ?x1598 ?x1643))))
 (let (($x1149 (or (not (= ?x676 0)) $x815 (not (= (* ?x1326 ?x557) 0)) (not (= (* ?x379 ?x1530) 0)))))
 (let (($x365 (= ?x693 0)))
 (and $x365 $x1149))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x357 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1575 (* r d)))
 (let ((?x1598 (* (- 4) ?x1575)))
 (let ((?x1572 (* q d d)))
 (let ((?x1561 (* q d)))
 (let ((?x1574 (* (- 2) ?x1561)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x1084 (* 4 (* x d))))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x693 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 ?x300 ?x1574 ?x1572 ?x1598)))
 (let ((?x1770 (* q q r)))
 (let ((?x1056 (* (- 10) ?x1770)))
 (let ((?x1766 (* (- 1) (* q r r x))))
 (let ((?x1718 (* q r r d)))
 (let ((?x1043 (* (- 1) ?x1718)))
 (let ((?x1717 (* 6 (* q r r r))))
 (let ((?x1658 (* q q r r)))
 (let ((?x1656 (* q r r)))
 (let ((?x1038 (* (- 6) ?x1656)))
 (let ((?x1647 (* 8 ?x1561)))
 (let ((?x1016 (* (- 16) d)))
 (let ((?x181 (* 4 (* q r r r d))))
 (let ((?x792 (* r r r d d)))
 (let ((?x1114 (* (- 4) ?x792)))
 (let ((?x749 (* q q q r)))
 (let ((?x724 (* q q q)))
 (let ((?x694 (* r r r d)))
 (let ((?x1474 (* (- 16) ?x694)))
 (let ((?x638 (* r r d)))
 (let ((?x811 (* 4 ?x638)))
 (let ((?x619 (* q q)))
 (let ((?x1115 (* (- 10) ?x619)))
 (let ((?x434 (* (- 1) (* q q x))))
 (let ((?x413 (* q x)))
 (let ((?x1481 (* 8 ?x413)))
 (let ((?x377 (* r r)))
 (let ((?x1527 (* 8 ?x377)))
 (let ((?x336 (* q q d)))
 (let ((?x1138 (* (- 1) ?x336)))
 (let ((?x208 (* q r r r d d)))
 (let ((?x849 (* (- 16) x)))
 (let ((?x1406 (* (- 32) r)))
 (let ((?x1126 (* 32 q)))
 (let ((?x1100 (+ (- 32) ?x1126 ?x1406 ?x849 ?x208 (* 32 (* q r)) ?x1138 ?x1527 ?x1481 ?x434 (* 4 (* r r x)) ?x1115 ?x811 ?x1474 ?x724 ?x749 ?x1114 ?x181 ?x1016 ?x1647 ?x1038 ?x1658 ?x1717 ?x1043 ?x1766 ?x1056 (* (- 24) (* r r r)))))
 (let ((?x1778 (* 14 ?x1770)))
 (let ((?x1657 (* 6 ?x1656)))
 (let ((?x1646 (* 16 d)))
 (let ((?x821 (* 4 ?x792)))
 (let ((?x823 (* 10 ?x619)))
 (let ((?x1645 (* 96 r)))
 (let ((?x1186 (+ 32 ?x1126 ?x1645 ?x849 ?x208 (* 64 (* q r)) ?x336 ?x1527 (* (- 8) ?x413) ?x434 (* (- 4) (* r r x)) ?x823 ?x811 (* 16 ?x694) ?x724 ?x749 ?x821 ?x181 ?x1646 ?x1647 ?x1657 ?x1658 ?x1717 ?x1718 ?x1766 ?x1778 (* 24 (* r r r)))))
 (let ((?x851 (* (+ ?x208 ?x434 ?x724 ?x749 ?x181 ?x1658 ?x1717 ?x1766 (* 2 ?x1770)) ?x693)))
 (let (($x815 (not (= ?x851 0))))
 (let ((?x1472 (* (- 22) ?x1770)))
 (let ((?x1470 (* (- 2) ?x1718)))
 (let ((?x1440 (* (- 12) ?x1656)))
 (let ((?x1435 (* (- 128) d)))
 (let ((?x1476 (* (- 8) ?x792)))
 (let ((?x1477 (* (- 20) ?x619)))
 (let ((?x1439 (* 32 ?x377)))
 (let ((?x1479 (* (- 2) ?x336)))
 (let ((?x1749 (* (- 64) x)))
 (let ((?x1434 (* (- 384) r)))
 (let ((?x460 (+ (- 256) (* 128 q) ?x1434 ?x1749 ?x208 (* 160 (* q r)) ?x1479 ?x1439 (* 16 ?x413) ?x434 (* 8 (* r r x)) ?x1477 (* 16 ?x638) (* (- 32) ?x694) ?x724 ?x749 ?x1476 ?x181 ?x1435 (* 32 ?x1561) ?x1440 ?x1658 ?x1717 ?x1470 ?x1766 ?x1472 (* (- 48) (* r r r)))))
 (let (($x1359 (or (not (= (* ?x460 ?x693) 0)) $x815 (not (= (* ?x1186 ?x693) 0)) (not (= (* ?x1100 ?x693) 0)))))
 (let (($x365 (= ?x693 0)))
 (let (($x696 (and $x365 $x1359)))
 (let ((?x1530 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 (* (- 8) (* d 2)) ?x300 ?x1646 ?x1574 ?x1572 ?x1598)))
 (let ((?x1779 (* r r r)))
 (let ((?x1473 (* (- 32) ?x1779)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x1690 (* ?x161 r r)))
 (let ((?x1442 (* (- 8) ?x1690)))
 (let ((?x130 (* 2 r)))
 (let ((?x1659 (* ?x130 r r)))
 (let ((?x1441 (* (- 8) ?x1659)))
 (let ((?x1436 (* 16 ?x1561)))
 (let ((?x1513 (* (- 8) (* q (* (- 2) d)))))
 (let ((?x1509 (* (- 8) (* q (- 4)))))
 (let ((?x1493 (* (- 8) (* q (- 8) r))))
 (let ((?x1491 (* (- 8) (* (* (- 2) d) r r))))
 (let ((?x337 (* q ?x161)))
 (let ((?x1480 (* (- 8) ?x337)))
 (let ((?x273 (* q r)))
 (let ((?x1471 (* 112 ?x273)))
 (let ((?x222 (* q ?x130)))
 (let ((?x1478 (* (- 8) ?x222)))
 (let ((?x879 (* 96 q)))
 (let ((?x379 (+ (- 256) ?x879 ?x1434 ?x1749 ?x208 ?x1478 (* (- 8) (* d d r r r)) ?x1471 ?x1479 ?x1480 ?x1439 ?x1481 ?x434 ?x1477 ?x1474 ?x724 ?x749 ?x181 ?x1435 (* (- 8) (* d 2 r r r)) ?x1491 ?x1493 ?x1509 ?x1513 ?x1436 ?x1440 ?x1658 ?x1441 ?x1442 ?x1717 ?x1470 ?x1766 ?x1472 ?x1473)))
 (let ((?x947 (* 8 d)))
 (let ((?x557 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 (* (- 4) (* d 2)) ?x300 ?x947 ?x1574 ?x1572 ?x1598)))
 (let ((?x1057 (* (- 16) ?x1779)))
 (let ((?x1042 (* (- 4) ?x1690)))
 (let ((?x1041 (* (- 4) ?x1659)))
 (let ((?x1037 (* 4 ?x1561)))
 (let ((?x1409 (* (- 4) (* (* (- 1) d) r r))))
 (let ((?x1407 (* (- 4) (* q (- 4) r))))
 (let ((?x1401 (* (- 4) (* q (- 2)))))
 (let ((?x1399 (* (- 4) (* q (* (- 1) d)))))
 (let ((?x1113 (* (- 8) ?x694)))
 (let ((?x1170 (* 4 ?x413)))
 (let ((?x1139 (* (- 4) ?x337)))
 (let ((?x1044 (* 24 ?x273)))
 (let ((?x1137 (* (- 4) ?x222)))
 (let ((?x313 (* 24 q)))
 (let ((?x1326 (+ (- 32) ?x313 ?x1406 ?x849 ?x208 ?x1137 (* (- 4) (* d d r r r)) ?x1044 ?x1138 ?x1139 ?x1527 ?x1170 ?x434 ?x1115 ?x1113 ?x724 ?x749 ?x181 ?x1016 (* (- 4) (* d 2 r r r)) ?x1399 ?x1401 ?x1407 ?x1409 ?x1037 ?x1038 ?x1658 ?x1041 ?x1042 ?x1717 ?x1043 ?x1766 ?x1056 ?x1057)))
 (let ((?x1643 (* 2 (* d 4))))
 (let ((?x1601 (* (- 8) d)))
 (let ((?x1394 (* 2 (* d 4 r r r))))
 (let ((?x1780 (* 16 ?x1779)))
 (let ((?x1768 (* 4 (* q 4 r))))
 (let ((?x1691 (* 4 ?x1690)))
 (let ((?x1689 (* 4 (* d r r))))
 (let ((?x1687 (* 4 ?x1659)))
 (let ((?x695 (* 8 ?x694)))
 (let ((?x414 (* (- 4) ?x413)))
 (let ((?x339 (* 4 ?x337)))
 (let ((?x1769 (* 40 ?x273)))
 (let ((?x822 (* 4 (* q 2))))
 (let ((?x326 (* 4 ?x222)))
 (let ((?x588 (+ 32 ?x313 ?x1645 ?x849 ?x208 ?x326 ?x822 ?x1769 ?x336 ?x339 ?x1527 ?x414 ?x434 ?x823 ?x695 ?x724 ?x749 ?x821 ?x181 ?x1646 ?x1647 ?x1657 ?x1658 ?x1687 ?x1689 ?x1691 ?x1717 ?x1718 ?x1766 ?x1768 ?x1778 ?x1780 ?x1394)))
 (let ((?x676 (* ?x588 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 ?x300 ?x1601 ?x1574 ?x1572 ?x1598 ?x1643))))
 (let (($x1149 (or (not (= ?x676 0)) $x815 (not (= (* ?x1326 ?x557) 0)) (not (= (* ?x379 ?x1530) 0)))))
 (let (($x1157 (and $x365 $x1149)))
 (rewrite (= $x1157 $x696))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x705 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1622 (* 4 (* d00 r00))))
 (let ((?x1482 (* (- 2) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x501 (+ (- 4) ?x130 ?x161 q ?x1482)))
 (let ((?x342 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1275 (* 4 (* ?x342 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x1016 (* (- 16) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x229 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1633 (+ (- 32) ?x409 ?x229 ?x30 ?x1016 ?x164 ?x1275 ?x196 ?x212 (* (+ (- 8) q) ?x342 ?x342) (* (- 2) (* (+ (- 8) q) ?x342)) ?x262 (* (- 4) (* ?x342 ?x501)) ?x1622)))
 (let ((?x1047 (+ (* (+ (- 8) q) ?x501 r r) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) r) (* (+ (- 8) q) ?x342 ?x342 r r r) (* (+ (- 8) q) (+ (- 8) q) ?x501))))
 (let (($x1610 (not (= (* ?x1047 ?x1633) 0))))
 (let ((?x947 (* 8 d)))
 (let ((?x534 (+ 16 ?x409 ?x229 ?x30 ?x947 ?x164 ?x1275 ?x196 ?x212 (* ?x342 ?x342 (+ 4 q)) (* (- 2) (* ?x342 (+ 4 q))) ?x262 (* (- 4) (* ?x342 (+ 2 ?x130 ?x161 q d))) ?x1622)))
 (let ((?x475 (+ (* (+ 4 q) (+ 2 ?x130 ?x161 q d) r r) (* (+ 4 q) (+ 4 q) (+ 4 q) r) (* ?x342 ?x342 (+ 4 q) r r r) (* (+ 4 q) (+ 4 q) (+ 2 ?x130 ?x161 q d)))))
 (let (($x925 (not (= (* ?x475 ?x534) 0))))
 (let ((?x1310 (+ ?x409 ?x229 ?x30 ?x164 ?x1275 ?x196 ?x212 (* ?x342 ?x342 q) (* (- 2) (* ?x342 q)) ?x262 (* (- 4) (* ?x342 (+ ?x130 ?x161 q))) ?x1622)))
 (let ((?x1283 (+ (* (+ ?x130 ?x161 q) r r q) (* r q q q) (* ?x342 ?x342 r r r q) (* (+ ?x130 ?x161 q) q q))))
 (let (($x228 (not (= (* ?x1283 ?x1310) 0))))
 (let ((?x1601 (* (- 8) d)))
 (let ((?x1503 (+ (- 16) ?x409 ?x229 ?x30 ?x1601 ?x164 ?x1275 ?x196 ?x212 (* (+ (- 4) q) ?x342 ?x342) (* (- 2) (* (+ (- 4) q) ?x342)) ?x262 (* (- 4) (* ?x342 (+ (- 2) ?x130 ?x161 q (* (- 1) d)))) ?x1622)))
 (let ((?x1411 (* (- 1) d)))
 (let ((?x1485 (+ (- 2) ?x130 ?x161 q ?x1411)))
 (let ((?x1627 (+ (- 4) q)))
 (let ((?x1488 (+ (* ?x1627 ?x1485 r r) (* ?x1627 ?x1627 ?x1627 r) (* ?x1627 ?x342 ?x342 r r r) (* ?x1627 ?x1627 ?x1485))))
 (let (($x211 (not (= (* ?x1488 ?x1503) 0))))
 (let ((?x1084 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x309 (+ ?x193 ?x164 ?x1084 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x1622)))
 (let (($x317 (= ?x309 0)))
 (and $x317 (or $x211 $x228 $x925 $x1610))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1145 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1575 (* r d)))
 (let ((?x1598 (* (- 4) ?x1575)))
 (let ((?x1572 (* q d d)))
 (let ((?x1561 (* q d)))
 (let ((?x1574 (* (- 2) ?x1561)))
 (let ((?x1646 (* 16 d)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x1084 (* 4 (* x d))))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x1530 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 (* (- 8) (* d 2)) ?x300 ?x1646 ?x1574 ?x1572 ?x1598)))
 (let ((?x1779 (* r r r)))
 (let ((?x1473 (* (- 32) ?x1779)))
 (let ((?x1770 (* q q r)))
 (let ((?x1472 (* (- 22) ?x1770)))
 (let ((?x1766 (* (- 1) (* q r r x))))
 (let ((?x1718 (* q r r d)))
 (let ((?x1470 (* (- 2) ?x1718)))
 (let ((?x1717 (* 6 (* q r r r))))
 (let ((?x161 (* (- 1) x)))
 (let ((?x1690 (* ?x161 r r)))
 (let ((?x1442 (* (- 8) ?x1690)))
 (let ((?x130 (* 2 r)))
 (let ((?x1659 (* ?x130 r r)))
 (let ((?x1441 (* (- 8) ?x1659)))
 (let ((?x1658 (* q q r r)))
 (let ((?x1656 (* q r r)))
 (let ((?x1440 (* (- 12) ?x1656)))
 (let ((?x1436 (* 16 ?x1561)))
 (let ((?x1513 (* (- 8) (* q (* (- 2) d)))))
 (let ((?x1509 (* (- 8) (* q (- 4)))))
 (let ((?x1493 (* (- 8) (* q (- 8) r))))
 (let ((?x1491 (* (- 8) (* (* (- 2) d) r r))))
 (let ((?x1435 (* (- 128) d)))
 (let ((?x181 (* 4 (* q r r r d))))
 (let ((?x749 (* q q q r)))
 (let ((?x724 (* q q q)))
 (let ((?x694 (* r r r d)))
 (let ((?x1474 (* (- 16) ?x694)))
 (let ((?x619 (* q q)))
 (let ((?x1477 (* (- 20) ?x619)))
 (let ((?x434 (* (- 1) (* q q x))))
 (let ((?x413 (* q x)))
 (let ((?x1481 (* 8 ?x413)))
 (let ((?x377 (* r r)))
 (let ((?x1439 (* 32 ?x377)))
 (let ((?x337 (* q ?x161)))
 (let ((?x1480 (* (- 8) ?x337)))
 (let ((?x336 (* q q d)))
 (let ((?x1479 (* (- 2) ?x336)))
 (let ((?x273 (* q r)))
 (let ((?x1471 (* 112 ?x273)))
 (let ((?x222 (* q ?x130)))
 (let ((?x1478 (* (- 8) ?x222)))
 (let ((?x208 (* q r r r d d)))
 (let ((?x1749 (* (- 64) x)))
 (let ((?x1434 (* (- 384) r)))
 (let ((?x879 (* 96 q)))
 (let ((?x379 (+ (- 256) ?x879 ?x1434 ?x1749 ?x208 ?x1478 (* (- 8) (* d d r r r)) ?x1471 ?x1479 ?x1480 ?x1439 ?x1481 ?x434 ?x1477 ?x1474 ?x724 ?x749 ?x181 ?x1435 (* (- 8) (* d 2 r r r)) ?x1491 ?x1493 ?x1509 ?x1513 ?x1436 ?x1440 ?x1658 ?x1441 ?x1442 ?x1717 ?x1470 ?x1766 ?x1472 ?x1473)))
 (let ((?x947 (* 8 d)))
 (let ((?x557 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 (* (- 4) (* d 2)) ?x300 ?x947 ?x1574 ?x1572 ?x1598)))
 (let ((?x1057 (* (- 16) ?x1779)))
 (let ((?x1056 (* (- 10) ?x1770)))
 (let ((?x1043 (* (- 1) ?x1718)))
 (let ((?x1042 (* (- 4) ?x1690)))
 (let ((?x1041 (* (- 4) ?x1659)))
 (let ((?x1038 (* (- 6) ?x1656)))
 (let ((?x1037 (* 4 ?x1561)))
 (let ((?x1409 (* (- 4) (* (* (- 1) d) r r))))
 (let ((?x1407 (* (- 4) (* q (- 4) r))))
 (let ((?x1401 (* (- 4) (* q (- 2)))))
 (let ((?x1399 (* (- 4) (* q (* (- 1) d)))))
 (let ((?x1016 (* (- 16) d)))
 (let ((?x1113 (* (- 8) ?x694)))
 (let ((?x1115 (* (- 10) ?x619)))
 (let ((?x1170 (* 4 ?x413)))
 (let ((?x1527 (* 8 ?x377)))
 (let ((?x1139 (* (- 4) ?x337)))
 (let ((?x1138 (* (- 1) ?x336)))
 (let ((?x1044 (* 24 ?x273)))
 (let ((?x1137 (* (- 4) ?x222)))
 (let ((?x849 (* (- 16) x)))
 (let ((?x1406 (* (- 32) r)))
 (let ((?x313 (* 24 q)))
 (let ((?x1326 (+ (- 32) ?x313 ?x1406 ?x849 ?x208 ?x1137 (* (- 4) (* d d r r r)) ?x1044 ?x1138 ?x1139 ?x1527 ?x1170 ?x434 ?x1115 ?x1113 ?x724 ?x749 ?x181 ?x1016 (* (- 4) (* d 2 r r r)) ?x1399 ?x1401 ?x1407 ?x1409 ?x1037 ?x1038 ?x1658 ?x1041 ?x1042 ?x1717 ?x1043 ?x1766 ?x1056 ?x1057)))
 (let ((?x693 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 ?x300 ?x1574 ?x1572 ?x1598)))
 (let ((?x851 (* (+ ?x208 ?x434 ?x724 ?x749 ?x181 ?x1658 ?x1717 ?x1766 (* 2 ?x1770)) ?x693)))
 (let (($x815 (not (= ?x851 0))))
 (let ((?x1643 (* 2 (* d 4))))
 (let ((?x1601 (* (- 8) d)))
 (let ((?x1394 (* 2 (* d 4 r r r))))
 (let ((?x1780 (* 16 ?x1779)))
 (let ((?x1778 (* 14 ?x1770)))
 (let ((?x1768 (* 4 (* q 4 r))))
 (let ((?x1691 (* 4 ?x1690)))
 (let ((?x1689 (* 4 (* d r r))))
 (let ((?x1687 (* 4 ?x1659)))
 (let ((?x1657 (* 6 ?x1656)))
 (let ((?x1647 (* 8 ?x1561)))
 (let ((?x792 (* r r r d d)))
 (let ((?x821 (* 4 ?x792)))
 (let ((?x695 (* 8 ?x694)))
 (let ((?x823 (* 10 ?x619)))
 (let ((?x414 (* (- 4) ?x413)))
 (let ((?x339 (* 4 ?x337)))
 (let ((?x1769 (* 40 ?x273)))
 (let ((?x822 (* 4 (* q 2))))
 (let ((?x326 (* 4 ?x222)))
 (let ((?x1645 (* 96 r)))
 (let ((?x588 (+ 32 ?x313 ?x1645 ?x849 ?x208 ?x326 ?x822 ?x1769 ?x336 ?x339 ?x1527 ?x414 ?x434 ?x823 ?x695 ?x724 ?x749 ?x821 ?x181 ?x1646 ?x1647 ?x1657 ?x1658 ?x1687 ?x1689 ?x1691 ?x1717 ?x1718 ?x1766 ?x1768 ?x1778 ?x1780 ?x1394)))
 (let ((?x676 (* ?x588 (+ ?x193 ?x164 ?x212 ?x196 ?x1084 ?x262 ?x300 ?x1601 ?x1574 ?x1572 ?x1598 ?x1643))))
 (let (($x1149 (or (not (= ?x676 0)) $x815 (not (= (* ?x1326 ?x557) 0)) (not (= (* ?x379 ?x1530) 0)))))
 (let (($x365 (= ?x693 0)))
 (let (($x1157 (and $x365 $x1149)))
 (let ((?x1622 (* 4 (* d00 r00))))
 (let ((?x1631 (* (- 4) (* (+ 2 d) (+ (- 4) ?x130 ?x161 q (* (- 2) d))))))
 (let ((?x1275 (* 4 (* (+ 2 d) r))))
 (let ((?x30 (* 8 q)))
 (let ((?x229 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1633 (+ (- 32) ?x409 ?x229 ?x30 ?x1016 ?x164 ?x1275 ?x196 ?x212 (* (+ (- 8) q) (+ 2 d) (+ 2 d)) (* (- 2) (* (+ (- 8) q) (+ 2 d))) ?x262 ?x1631 ?x1622)))
 (let ((?x1482 (* (- 2) d)))
 (let ((?x501 (+ (- 4) ?x130 ?x161 q ?x1482)))
 (let ((?x231 (+ (- 8) q)))
 (let ((?x1047 (+ (* ?x231 ?x501 r r) (* ?x231 ?x231 ?x231 r) (* ?x231 (+ 2 d) (+ 2 d) r r r) (* ?x231 ?x231 ?x501))))
 (let (($x1610 (not (= (* ?x1047 ?x1633) 0))))
 (let ((?x534 (+ 16 ?x409 ?x229 ?x30 ?x947 ?x164 ?x1275 ?x196 ?x212 (* (+ 2 d) (+ 2 d) (+ 4 q)) (* (- 2) (* (+ 2 d) (+ 4 q))) ?x262 (* (- 4) (* (+ 2 d) (+ 2 ?x130 ?x161 q d))) ?x1622)))
 (let ((?x475 (+ (* (+ 4 q) (+ 2 ?x130 ?x161 q d) r r) (* (+ 4 q) (+ 4 q) (+ 4 q) r) (* (+ 2 d) (+ 2 d) (+ 4 q) r r r) (* (+ 4 q) (+ 4 q) (+ 2 ?x130 ?x161 q d)))))
 (let (($x925 (not (= (* ?x475 ?x534) 0))))
 (let ((?x1310 (+ ?x409 ?x229 ?x30 ?x164 ?x1275 ?x196 ?x212 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x262 (* (- 4) (* (+ 2 d) (+ ?x130 ?x161 q))) ?x1622)))
 (let ((?x1283 (+ (* (+ ?x130 ?x161 q) r r q) (* r q q q) (* (+ 2 d) (+ 2 d) r r r q) (* (+ ?x130 ?x161 q) q q))))
 (let (($x228 (not (= (* ?x1283 ?x1310) 0))))
 (let ((?x1502 (* (- 4) (* (+ 2 d) (+ (- 2) ?x130 ?x161 q (* (- 1) d))))))
 (let ((?x1503 (+ (- 16) ?x409 ?x229 ?x30 ?x1601 ?x164 ?x1275 ?x196 ?x212 (* (+ (- 4) q) (+ 2 d) (+ 2 d)) (* (- 2) (* (+ (- 4) q) (+ 2 d))) ?x262 ?x1502 ?x1622)))
 (let ((?x1411 (* (- 1) d)))
 (let ((?x1485 (+ (- 2) ?x130 ?x161 q ?x1411)))
 (let ((?x1627 (+ (- 4) q)))
 (let ((?x1488 (+ (* ?x1627 ?x1485 r r) (* ?x1627 ?x1627 ?x1627 r) (* ?x1627 (+ 2 d) (+ 2 d) r r r) (* ?x1627 ?x1627 ?x1485))))
 (let (($x211 (not (= (* ?x1488 ?x1503) 0))))
 (let ((?x309 (+ ?x193 ?x164 ?x1084 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x1622)))
 (let (($x317 (= ?x309 0)))
 (let (($x1391 (and $x317 (or $x211 $x228 $x925 $x1610))))
 (rewrite (= $x1391 $x1157))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x550 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1622 (* 4 (* d00 r00))))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x230 (+ 2 ?x130 ?x161 q d)))
 (let ((?x342 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1275 (* 4 (* ?x342 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x947 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x229 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x534 (+ 16 ?x409 ?x229 ?x30 ?x947 ?x164 ?x1275 ?x196 ?x212 (* ?x342 ?x342 (+ 4 q)) (* (- 2) (* ?x342 (+ 4 q))) ?x262 (* (- 4) (* ?x342 ?x230)) ?x1622)))
 (let ((?x475 (+ (* (+ 4 q) ?x230 r r) (* (+ 4 q) (+ 4 q) (+ 4 q) r) (* ?x342 ?x342 (+ 4 q) r r r) (* (+ 4 q) (+ 4 q) ?x230))))
 (let (($x925 (not (= (* ?x475 ?x534) 0))))
 (let ((?x1601 (* (- 8) d)))
 (let ((?x1503 (+ (- 16) ?x409 ?x229 ?x30 ?x1601 ?x164 ?x1275 ?x196 ?x212 (* (+ (- 4) q) ?x342 ?x342) (* (- 2) (* (+ (- 4) q) ?x342)) ?x262 (* (- 4) (* ?x342 (+ (- 2) ?x130 ?x161 q (* (- 1) d)))) ?x1622)))
 (let ((?x1411 (* (- 1) d)))
 (let ((?x1485 (+ (- 2) ?x130 ?x161 q ?x1411)))
 (let ((?x1627 (+ (- 4) q)))
 (let ((?x1488 (+ (* ?x1627 ?x1485 r r) (* ?x1627 ?x1627 ?x1627 r) (* ?x1627 ?x342 ?x342 r r r) (* ?x1627 ?x1627 ?x1485))))
 (let (($x211 (not (= (* ?x1488 ?x1503) 0))))
 (let ((?x1016 (* (- 16) d)))
 (let ((?x1633 (+ (- 32) ?x409 ?x229 ?x30 ?x1016 ?x164 ?x1275 ?x196 ?x212 (* (+ (- 8) q) ?x342 ?x342) (* (- 2) (* (+ (- 8) q) ?x342)) ?x262 (* (- 4) (* ?x342 (+ (- 4) ?x130 ?x161 q (* (- 2) d)))) ?x1622)))
 (let ((?x1482 (* (- 2) d)))
 (let ((?x501 (+ (- 4) ?x130 ?x161 q ?x1482)))
 (let ((?x231 (+ (- 8) q)))
 (let ((?x1047 (+ (* ?x231 ?x501 r r) (* ?x231 ?x231 ?x231 r) (* ?x231 ?x342 ?x342 r r r) (* ?x231 ?x231 ?x501))))
 (let (($x1610 (not (= (* ?x1047 ?x1633) 0))))
 (let ((?x1310 (+ ?x409 ?x229 ?x30 ?x164 ?x1275 ?x196 ?x212 (* ?x342 ?x342 q) (* (- 2) (* ?x342 q)) ?x262 (* (- 4) (* ?x342 (+ ?x130 ?x161 q))) ?x1622)))
 (let ((?x1283 (+ (* (+ ?x130 ?x161 q) r r q) (* r q q q) (* ?x342 ?x342 r r r q) (* (+ ?x130 ?x161 q) q q))))
 (let (($x228 (not (= (* ?x1283 ?x1310) 0))))
 (let ((?x1084 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x309 (+ ?x193 ?x164 ?x1084 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x1622)))
 (let (($x317 (= ?x309 0)))
 (and $x317 (or $x228 $x1610 $x211 $x925))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1343 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1622 (* 4 (* d00 r00))))
 (let ((?x1482 (* (- 2) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x501 (+ (- 4) ?x130 ?x161 q ?x1482)))
 (let ((?x342 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1275 (* 4 (* ?x342 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x1016 (* (- 16) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x229 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1633 (+ (- 32) ?x409 ?x229 ?x30 ?x1016 ?x164 ?x1275 ?x196 ?x212 (* (+ (- 8) q) ?x342 ?x342) (* (- 2) (* (+ (- 8) q) ?x342)) ?x262 (* (- 4) (* ?x342 ?x501)) ?x1622)))
 (let ((?x1047 (+ (* (+ (- 8) q) ?x501 r r) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) r) (* (+ (- 8) q) ?x342 ?x342 r r r) (* (+ (- 8) q) (+ (- 8) q) ?x501))))
 (let (($x1610 (not (= (* ?x1047 ?x1633) 0))))
 (let ((?x947 (* 8 d)))
 (let ((?x534 (+ 16 ?x409 ?x229 ?x30 ?x947 ?x164 ?x1275 ?x196 ?x212 (* ?x342 ?x342 (+ 4 q)) (* (- 2) (* ?x342 (+ 4 q))) ?x262 (* (- 4) (* ?x342 (+ 2 ?x130 ?x161 q d))) ?x1622)))
 (let ((?x475 (+ (* (+ 4 q) (+ 2 ?x130 ?x161 q d) r r) (* (+ 4 q) (+ 4 q) (+ 4 q) r) (* ?x342 ?x342 (+ 4 q) r r r) (* (+ 4 q) (+ 4 q) (+ 2 ?x130 ?x161 q d)))))
 (let (($x925 (not (= (* ?x475 ?x534) 0))))
 (let ((?x1310 (+ ?x409 ?x229 ?x30 ?x164 ?x1275 ?x196 ?x212 (* ?x342 ?x342 q) (* (- 2) (* ?x342 q)) ?x262 (* (- 4) (* ?x342 (+ ?x130 ?x161 q))) ?x1622)))
 (let ((?x1283 (+ (* (+ ?x130 ?x161 q) r r q) (* r q q q) (* ?x342 ?x342 r r r q) (* (+ ?x130 ?x161 q) q q))))
 (let (($x228 (not (= (* ?x1283 ?x1310) 0))))
 (let ((?x1601 (* (- 8) d)))
 (let ((?x1503 (+ (- 16) ?x409 ?x229 ?x30 ?x1601 ?x164 ?x1275 ?x196 ?x212 (* (+ (- 4) q) ?x342 ?x342) (* (- 2) (* (+ (- 4) q) ?x342)) ?x262 (* (- 4) (* ?x342 (+ (- 2) ?x130 ?x161 q (* (- 1) d)))) ?x1622)))
 (let ((?x1411 (* (- 1) d)))
 (let ((?x1485 (+ (- 2) ?x130 ?x161 q ?x1411)))
 (let ((?x1627 (+ (- 4) q)))
 (let ((?x1488 (+ (* ?x1627 ?x1485 r r) (* ?x1627 ?x1627 ?x1627 r) (* ?x1627 ?x342 ?x342 r r r) (* ?x1627 ?x1627 ?x1485))))
 (let (($x211 (not (= (* ?x1488 ?x1503) 0))))
 (let ((?x1084 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x309 (+ ?x193 ?x164 ?x1084 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x1622)))
 (let (($x317 (= ?x309 0)))
 (let (($x1391 (and $x317 (or $x211 $x228 $x925 $x1610))))
 (let (($x927 (and $x317 (or $x228 $x1610 $x211 $x925))))
 (rewrite (= $x927 $x1391))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x157 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x132 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x138 (- q 8)))
 (let ((?x151 (+ (* ?x138 ?x132 r r) (* ?x138 ?x138 ?x138 r) (* (+ d 2) (+ d 2) ?x138 r r r) (* ?x138 ?x138 ?x132))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x62 (+ d 2)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x140 (+ (- (- (+ (- (* 8 ?x132) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x138))))
 (let ((?x146 (+ (- (+ (- ?x140 (* 2 ?x62 ?x138)) ?x49) (* 4 ?x62 ?x132)) ?x53)))
 (let ((?x107 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x113 (- q 4)))
 (let ((?x126 (+ (* ?x113 ?x107 r r) (* ?x113 ?x113 ?x113 r) (* ?x62 ?x62 ?x113 r r r) (* ?x113 ?x113 ?x107))))
 (let ((?x115 (+ (- (- (+ (- (* 8 ?x107) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x113))))
 (let ((?x121 (+ (- (+ (- ?x115 (* 2 ?x62 ?x113)) ?x49) (* 4 ?x62 ?x107)) ?x53)))
 (let ((?x99 (* q q q r)))
 (let ((?x102 (+ (* q (+ (- (* 2 r) x) q) r r) ?x99 (* ?x62 ?x62 q r r r) (* q q (+ (- (* 2 r) x) q)))))
 (let ((?x87 (+ (- (* 8 (+ (- (* 2 r) x) q)) (* 8 r00)) ?x63)))
 (let ((?x93 (- (+ (- (- ?x87 ?x39) ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q))))
 (let ((?x97 (+ (- (+ ?x93 ?x49) (* 4 ?x62 (+ (- (* 2 r) x) q))) ?x53)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (* ?x67 ?x59 r r) (* ?x67 ?x67 ?x67 r) (* ?x62 ?x62 ?x67 r r r) (* ?x67 ?x67 ?x59))))
 (let ((?x69 (+ (- (- (+ (- (* 8 ?x59) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x67))))
 (let ((?x75 (+ (- (+ (- ?x69 (* 2 ?x62 ?x67)) ?x49) (* 4 ?x62 ?x59)) ?x53)))
 (let (($x155 (or (not (= (* ?x75 ?x80) 0)) (not (= (* ?x97 ?x102) 0)) (not (= (* ?x121 ?x126) 0)) (not (= (* ?x146 ?x151) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x155))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1342 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x1622 (* 4 (* d00 r00))))
 (let ((?x161 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x304 (+ 2 ?x57 ?x161 q d)))
 (let ((?x680 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x702 (* 4 (* ?x680 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 d)))
 (let ((?x570 (* 8 q)))
 (let ((?x229 (* (- 8) x)))
 (let ((?x241 (* 16 r)))
 (let ((?x246 (+ 16 ?x241 ?x229 ?x570 ?x193 ?x164 ?x702 ?x196 ?x212 (* ?x680 ?x680 (+ 4 q)) (* (- 2) (* ?x680 (+ 4 q))) ?x262 (* (- 4) (* ?x680 ?x304)) ?x1622)))
 (let ((?x1350 (+ (* (+ 4 q) ?x304 r r) (* (+ 4 q) (+ 4 q) (+ 4 q) r) (* ?x680 ?x680 (+ 4 q) r r r) (* (+ 4 q) (+ 4 q) ?x304))))
 (let ((?x454 (* (- 8) d)))
 (let ((?x1050 (+ (- 16) ?x241 ?x229 ?x570 ?x454 ?x164 ?x702 ?x196 ?x212 (* (+ (- 4) q) ?x680 ?x680) (* (- 2) (* (+ (- 4) q) ?x680)) ?x262 (* (- 4) (* ?x680 (+ (- 2) ?x57 ?x161 q (* (- 1) d)))) ?x1622)))
 (let ((?x962 (* (- 1) d)))
 (let ((?x617 (+ (- 2) ?x57 ?x161 q ?x962)))
 (let ((?x1068 (+ (- 4) q)))
 (let ((?x1630 (+ (* ?x1068 ?x617 r r) (* ?x1068 ?x1068 ?x1068 r) (* ?x1068 ?x680 ?x680 r r r) (* ?x1068 ?x1068 ?x617))))
 (let ((?x590 (* (- 16) d)))
 (let ((?x873 (+ (- 32) ?x241 ?x229 ?x570 ?x590 ?x164 ?x702 ?x196 ?x212 (* (+ (- 8) q) ?x680 ?x680) (* (- 2) (* (+ (- 8) q) ?x680)) ?x262 (* (- 4) (* ?x680 (+ (- 4) ?x57 ?x161 q (* (- 2) d)))) ?x1622)))
 (let ((?x1224 (* (- 2) d)))
 (let ((?x388 (+ (- 4) ?x57 ?x161 q ?x1224)))
 (let ((?x1640 (+ (- 8) q)))
 (let ((?x1445 (+ (* ?x1640 ?x388 r r) (* ?x1640 ?x1640 ?x1640 r) (* ?x1640 ?x680 ?x680 r r r) (* ?x1640 ?x1640 ?x388))))
 (let ((?x390 (+ ?x241 ?x229 ?x570 ?x164 ?x702 ?x196 ?x212 (* ?x680 ?x680 q) (* (- 2) (* ?x680 q)) ?x262 (* (- 4) (* ?x680 (+ ?x57 ?x161 q))) ?x1622)))
 (let ((?x1085 (+ (* (+ ?x57 ?x161 q) r r q) (* r q q q) (* ?x680 ?x680 r r r q) (* (+ ?x57 ?x161 q) q q))))
 (let (($x308 (or (not (= (* ?x1085 ?x390) 0)) (not (= (* ?x1445 ?x873) 0)) (not (= (* ?x1630 ?x1050) 0)) (not (= (* ?x1350 ?x246) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x773 (+ ?x30 ?x164 (* 4 (* x d)) ?x196 ?x212 ?x44 (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x1622)))
 (and (= ?x773 0) $x308)))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x654 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x1622 (* 4 (* d00 r00))))
 (let ((?x161 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x304 (+ 2 ?x57 ?x161 q d)))
 (let ((?x680 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x702 (* 4 (* ?x680 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 d)))
 (let ((?x570 (* 8 q)))
 (let ((?x229 (* (- 8) x)))
 (let ((?x241 (* 16 r)))
 (let ((?x246 (+ 16 ?x241 ?x229 ?x570 ?x193 ?x164 ?x702 ?x196 ?x212 (* ?x680 ?x680 (+ 4 q)) (* (- 2) (* ?x680 (+ 4 q))) ?x262 (* (- 4) (* ?x680 ?x304)) ?x1622)))
 (let ((?x1350 (+ (* (+ 4 q) ?x304 r r) (* (+ 4 q) (+ 4 q) (+ 4 q) r) (* ?x680 ?x680 (+ 4 q) r r r) (* (+ 4 q) (+ 4 q) ?x304))))
 (let ((?x454 (* (- 8) d)))
 (let ((?x1050 (+ (- 16) ?x241 ?x229 ?x570 ?x454 ?x164 ?x702 ?x196 ?x212 (* (+ (- 4) q) ?x680 ?x680) (* (- 2) (* (+ (- 4) q) ?x680)) ?x262 (* (- 4) (* ?x680 (+ (- 2) ?x57 ?x161 q (* (- 1) d)))) ?x1622)))
 (let ((?x962 (* (- 1) d)))
 (let ((?x617 (+ (- 2) ?x57 ?x161 q ?x962)))
 (let ((?x1068 (+ (- 4) q)))
 (let ((?x1630 (+ (* ?x1068 ?x617 r r) (* ?x1068 ?x1068 ?x1068 r) (* ?x1068 ?x680 ?x680 r r r) (* ?x1068 ?x1068 ?x617))))
 (let ((?x590 (* (- 16) d)))
 (let ((?x873 (+ (- 32) ?x241 ?x229 ?x570 ?x590 ?x164 ?x702 ?x196 ?x212 (* (+ (- 8) q) ?x680 ?x680) (* (- 2) (* (+ (- 8) q) ?x680)) ?x262 (* (- 4) (* ?x680 (+ (- 4) ?x57 ?x161 q (* (- 2) d)))) ?x1622)))
 (let ((?x1224 (* (- 2) d)))
 (let ((?x388 (+ (- 4) ?x57 ?x161 q ?x1224)))
 (let ((?x1640 (+ (- 8) q)))
 (let ((?x1445 (+ (* ?x1640 ?x388 r r) (* ?x1640 ?x1640 ?x1640 r) (* ?x1640 ?x680 ?x680 r r r) (* ?x1640 ?x1640 ?x388))))
 (let ((?x390 (+ ?x241 ?x229 ?x570 ?x164 ?x702 ?x196 ?x212 (* ?x680 ?x680 q) (* (- 2) (* ?x680 q)) ?x262 (* (- 4) (* ?x680 (+ ?x57 ?x161 q))) ?x1622)))
 (let ((?x1085 (+ (* (+ ?x57 ?x161 q) r r q) (* r q q q) (* ?x680 ?x680 r r r q) (* (+ ?x57 ?x161 q) q q))))
 (let (($x308 (or (not (= (* ?x1085 ?x390) 0)) (not (= (* ?x1445 ?x873) 0)) (not (= (* ?x1630 ?x1050) 0)) (not (= (* ?x1350 ?x246) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x773 (+ ?x30 ?x164 (* 4 (* x d)) ?x196 ?x212 ?x44 (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x1622)))
 (let (($x318 (and (= ?x773 0) $x308)))
 (let ((?x132 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x138 (- q 8)))
 (let ((?x151 (+ (* ?x138 ?x132 r r) (* ?x138 ?x138 ?x138 r) (* (+ d 2) (+ d 2) ?x138 r r r) (* ?x138 ?x138 ?x132))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x62 (+ d 2)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x140 (+ (- (- (+ (- (* 8 ?x132) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x138))))
 (let ((?x146 (+ (- (+ (- ?x140 (* 2 ?x62 ?x138)) ?x49) (* 4 ?x62 ?x132)) ?x53)))
 (let ((?x107 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x113 (- q 4)))
 (let ((?x126 (+ (* ?x113 ?x107 r r) (* ?x113 ?x113 ?x113 r) (* ?x62 ?x62 ?x113 r r r) (* ?x113 ?x113 ?x107))))
 (let ((?x115 (+ (- (- (+ (- (* 8 ?x107) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x113))))
 (let ((?x121 (+ (- (+ (- ?x115 (* 2 ?x62 ?x113)) ?x49) (* 4 ?x62 ?x107)) ?x53)))
 (let ((?x99 (* q q q r)))
 (let ((?x102 (+ (* q (+ (- ?x57 x) q) r r) ?x99 (* ?x62 ?x62 q r r r) (* q q (+ (- ?x57 x) q)))))
 (let ((?x88 (- (+ (- (* 8 (+ (- ?x57 x) q)) (* 8 r00)) ?x63) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let (($x104 (= (* (+ (- ?x94 (* 4 ?x62 (+ (- ?x57 x) q))) ?x53) ?x102) 0)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (* ?x67 ?x59 r r) (* ?x67 ?x67 ?x67 r) (* ?x62 ?x62 ?x67 r r r) (* ?x67 ?x67 ?x59))))
 (let ((?x69 (+ (- (- (+ (- (* 8 ?x59) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x67))))
 (let ((?x75 (+ (- (+ (- ?x69 (* 2 ?x62 ?x67)) ?x49) (* 4 ?x62 ?x59)) ?x53)))
 (let (($x155 (or (not (= (* ?x75 ?x80) 0)) (not $x104) (not (= (* ?x121 ?x126) 0)) (not (= (* ?x146 ?x151) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x156 (and (= ?x54 0) $x155)))
 (rewrite (= $x156 $x318)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x554 (trans (quant-intro (proof-bind ?x654) (= $x157 $x1342)) (elim-unused (= $x1342 $x550)) (= $x157 $x550))))
 (let ((@x27 (asserted $x157)))
 (let ((@x1379 (mp (mp @x27 @x554 $x550) (quant-intro (proof-bind ?x1343) (= $x550 $x705)) $x705)))
 (let ((@x612 (mp (mp @x1379 (rewrite (= $x705 $x705)) $x705) (quant-intro (proof-bind ?x1145) (= $x705 $x323)) $x323)))
 (let ((@x1664 (mp~ (mp @x612 (quant-intro (proof-bind ?x357) (= $x323 $x1116)) $x1116) (sk (~ $x1116 $x539)) $x539)))
 (let ((@x506 (mp @x1664 (rewrite (= $x539 $x1585)) $x1585)))
 (let ((@x919 (and-elim @x506 $x1307)))
 (let ((@x1092 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1307) $x917)) @x919 $x917)))
 (let (($x513 (<= ?x1634 0)))
 (let ((@x1346 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1307) $x513)) @x919 $x513)))
 (let (($x867 (not (<= ?x1677 0))))
 (let (($x1638 (<= ?x1327 0)))
 (let (($x1368 (>= ?x1327 0)))
 (let ((@x445 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x652 (not $x1638) (not $x1368))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1368)) @x1346 @x1092 false) $x1368) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1638)) @x1346 @x1092 false) $x1638) $x652)))
 (let (($x574 (>= ?x708 0)))
 (let (($x814 (<= ?x708 0)))
 (let ((@x1468 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1129 (not $x814) (not $x574))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x814)) @x1346 @x1092 false) $x814) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x574)) @x1346 @x1092 false) $x574) $x1129)))
 (let (($x1247 (>= ?x369 0)))
 (let (($x836 (<= ?x369 0)))
 (let ((@x985 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1571 (not $x836) (not $x1247))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x836)) @x1346 @x1092 false) $x836) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1247)) @x1346 @x1092 false) $x1247) $x1571)))
 (let ((@x221 (unit-resolution (unit-resolution (and-elim @x506 $x688) @x985 @x1468 (or $x649 $x976)) @x445 $x976)))
 (let (($x417 (>= ?x1677 0)))
 (let ((@x263 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x242 $x867 (not $x417))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x417)) @x1346 @x1092 false) $x417) @x221 $x867)))
 ((_ th-lemma arith farkas 1 1 1) @x263 @x1346 @x1092 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        58
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             704
 :arith-nonlinear-bounds    20
 :arith-num-rows            6
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 77
 :arith-tableau-max-rows    6
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                3.87
 :memory                    3.26
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1332361
 :num-checks                1
 :propagations              36
 :rlimit-count              9466
 :time                      0.01
 :total-time                0.02)
