unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1101 (* 6 r!2)))
 (let ((?x601 (+ 3 s!1 ?x1101)))
 (let ((?x571 (* (- 1) s!1)))
 (let ((?x580 (+ ?x571 x!0)))
 (let ((?x849 (+ 1 r!2)))
 (let ((?x1195 (+ (* (- 1) (* ?x849 ?x849 ?x580 ?x580 ?x580 ?x601)) (* ?x580 ?x601 ?x601 ?x601) (* (- 1) (* ?x849 ?x580 ?x580 ?x601 ?x601)))))
 (let (($x1466 (<= ?x1195 0)))
 (let ((?x274 (* r00 r00)))
 (let ((?x1572 (* (- 3) ?x274)))
 (let ((?x944 (+ s00 ?x1572 ?x571 (* 3 (* r!2 r!2)))))
 (let (($x1261 (<= ?x944 0)))
 (let (($x942 (= ?x944 0)))
 (let ((?x1292 (* 18 x!0)))
 (let ((?x1692 (* r!2 x!0)))
 (let ((?x516 (* 18 ?x1692)))
 (let ((?x1689 (* s!1 s!1)))
 (let ((?x1690 (* 2 ?x1689)))
 (let ((?x1574 (* r!2 r!2)))
 (let ((?x1392 (* 18 ?x1574)))
 (let ((?x587 (* 9 r!2)))
 (let ((?x1391 (* (- 12) s!1)))
 (let ((?x620 (* s00 r00 r00)))
 (let ((?x621 (* 6 ?x620)))
 (let ((?x564 (* s00 s00)))
 (let ((?x577 (* (- 4) ?x564)))
 (let ((?x495 (* r00 x00)))
 (let ((?x509 (* (- 18) ?x495)))
 (let ((?x399 (* s00 r00)))
 (let ((?x1864 (* 3 ?x399)))
 (let ((?x1567 (* (- 18) ?x274)))
 (let ((?x1686 (* (- 18) x00)))
 (let ((?x641 (* (- 9) r00)))
 (let ((?x1762 (* 12 s00)))
 (let ((?x1028 (+ ?x1762 ?x641 ?x1686 ?x1567 (* (- 21) (* r00 s!1)) ?x1864 ?x509 (* (- 18) (* x00 r!2)) (* (- 6) (* s00 r00 r!2)) ?x577 ?x621 (* 18 (* r00 x!0)) (* 6 (* r00 s!1 r!2)) (* (- 6) (* r00 r00 s!1)) (* (- 36) (* r00 r00 r!2)) ?x1391 (* 21 (* s00 r!2)) (* 36 (* r00 r!2 r!2)) ?x587 ?x1392 ?x1690 ?x516 (* 2 (* s00 s!1)) (* (- 3) (* s!1 r!2)) ?x1292)))
 (let ((?x517 (* ?x1195 ?x1028)))
 (let (($x562 (= ?x517 0)))
 (let (($x1682 (not $x562)))
 (let ((?x1329 (* x00 x00)))
 (let ((?x790 (* 108 ?x1329)))
 (let ((?x1422 (* (- 9) s!1)))
 (let ((?x1167 (* s00 s00 s00)))
 (let ((?x1584 (* 16 ?x1167)))
 (let ((?x908 (* r00 r00 s!1)))
 (let ((?x339 (* 36 ?x908)))
 (let ((?x865 (* r00 r00 r00 x00)))
 (let ((?x1260 (* (- 432) ?x865)))
 (let ((?x788 (* s00 x00)))
 (let ((?x1795 (* (- 108) ?x788)))
 (let ((?x986 (* (- 36) ?x620)))
 (let ((?x1694 (* 51 ?x564)))
 (let ((?x1564 (* 108 ?x495)))
 (let ((?x137 (* 9 s00)))
 (let ((?x918 (+ ?x137 (* 54 (* r00 s!1)) (* (- 54) ?x399) (* 216 (* s00 r00 x00)) ?x1564 (* 108 (* s00 r00 s!1)) ?x1694 ?x986 (* (- 4) (* s!1 s!1 s!1)) (* 108 (* x!0 x!0)) (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 108) (* r00 x!0)) ?x1795 (* 108 (* x00 s!1)) ?x1260 ?x339 (* (- 216) (* x00 x!0)) (* 216 (* s00 r00 r00 r00)) ?x1584 ?x1422 (* (- 108) (* s!1 x!0)) (* (- 12) (* s00 s!1 s!1)) ?x790 (* 15 ?x1689) (* (- 66) (* s00 s!1)) (* 108 (* s00 x!0)) (* (- 216) (* r00 r00 r00 s!1)))))
 (let ((?x860 (* r00 r00 x00)))
 (let ((?x282 (* 36 ?x860)))
 (let ((?x290 (* (- 6) ?x788)))
 (let ((?x298 (* 15 ?x564)))
 (let ((?x1643 (* 54 ?x495)))
 (let ((?x464 (+ ?x137 (* 24 (* r00 s!1)) (* (- 24) ?x399) (* (- 2) (* s00 s!1 r!2)) ?x1643 (* 4 (* s00 s00 r!2)) (* 54 (* x00 r!2)) (* 36 (* r00 x00 r!2)) (* 2 (* s00 r00 s!1)) ?x298 ?x986 (* 2 (* s00 s00 r00)) (* (- 54) (* r00 x!0)) ?x290 (* 6 (* x00 s!1)) ?x282 ?x339 (* (- 36) (* r00 r!2 x!0)) ?x1422 (* (- 4) (* r00 s!1 s!1)) (* (- 6) (* s!1 x!0)) (* (- 24) (* s00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 3) ?x1689) (* (- 54) ?x1692) (* (- 12) (* s00 s!1)) (* 24 (* s!1 r!2)) (* 6 (* s00 x!0)) (* (- 2) (* s!1 s!1 r!2)))))
 (let ((?x761 (* (- 3) s!1)))
 (let ((?x695 (* 4 ?x564)))
 (let ((?x701 (* 18 ?x495)))
 (let ((?x44 (* 3 s00)))
 (let ((?x626 (+ ?x44 (* 9 (* r00 s!1)) (* (- 9) ?x399) ?x701 (* 18 (* x00 r!2)) (* 6 (* s00 r00 r!2)) ?x695 (* (- 6) ?x620) (* (- 18) (* r00 x!0)) (* (- 6) (* r00 s!1 r!2)) (* 6 ?x908) ?x761 (* (- 9) (* s00 r!2)) (* (- 2) ?x1689) (* (- 18) ?x1692) (* (- 2) (* s00 s!1)) (* 9 (* s!1 r!2)))))
 (let (($x259 (= ?x626 0)))
 (let ((?x1127 (* 6 x!0)))
 (let ((?x1772 (* 3 r!2)))
 (let ((?x442 (* r00 r00 r00)))
 (let ((?x443 (* 12 ?x442)))
 (let ((?x477 (* (- 6) ?x399)))
 (let ((?x474 (* (- 6) x00)))
 (let ((?x473 (* (- 3) r00)))
 (let ((?x622 (+ ?x44 ?x473 ?x474 ?x477 ?x443 (* (- 12) (* r00 r00 r!2)) ?x761 (* 4 (* s00 r!2)) ?x1772 (* 2 (* s!1 r!2)) ?x1127)))
 (let (($x973 (= ?x622 0)))
 (let (($x1124 (and $x942 $x973 $x259 (= ?x464 0) (= ?x918 0) $x1682)))
 (let ((?x598 (* (- 6) (* r!2 s00 r00))))
 (let ((?x996 (* s!1 s00)))
 (let ((?x460 (* 2 ?x996)))
 (let ((?x1882 (* r!2 x00)))
 (let ((?x1870 (* (- 18) ?x1882)))
 (let ((?x771 (* x!0 r00)))
 (let ((?x1884 (* 18 ?x771)))
 (let ((?x768 (* s!1 r00 r00)))
 (let ((?x694 (* (- 6) ?x768)))
 (let ((?x952 (* 6 (* r!2 s!1 r00))))
 (let ((?x1395 (+ ?x587 ?x1391 ?x1292 ?x1762 ?x641 ?x1686 ?x1392 ?x1567 (* (- 3) (* r!2 s!1)) (* (- 36) (* r!2 r00 r00)) (* 21 (* r!2 s00)) ?x1864 ?x509 ?x1690 ?x516 ?x952 ?x694 ?x577 ?x1884 ?x621 ?x1870 ?x460 (* (- 21) (* s!1 r00)) ?x598 (* 36 (* r!2 r!2 r00)))))
 (let ((?x670 (* (- 1) (* ?x849 ?x580 ?x580 (+ 3 ?x1101 s!1) (+ 3 ?x1101 s!1)))))
 (let ((?x394 (+ 3 ?x1101 s!1)))
 (let ((?x510 (+ (* (- 1) (* ?x849 ?x849 ?x580 ?x580 ?x580 ?x394)) (* ?x580 ?x394 ?x394 ?x394) ?x670)))
 (let ((?x1359 (* (- 108) ?x1329)))
 (let ((?x1358 (* (- 16) ?x1167)))
 (let ((?x1039 (* s00 r00 r00 r00)))
 (let ((?x1354 (* (- 216) ?x1039)))
 (let ((?x866 (* 432 ?x865)))
 (let ((?x1112 (* 108 ?x788)))
 (let ((?x730 (* s00 s00 r00 r00)))
 (let ((?x731 (* 36 ?x730)))
 (let ((?x665 (* s00 s00 r00)))
 (let ((?x995 (* 108 ?x665)))
 (let ((?x983 (* 36 ?x620)))
 (let ((?x1348 (* (- 51) ?x564)))
 (let ((?x859 (* (- 36) ?x768)))
 (let ((?x1345 (* (- 108) ?x495)))
 (let ((?x488 (* s00 r00 x00)))
 (let ((?x1344 (* (- 216) ?x488)))
 (let ((?x499 (* 54 ?x399)))
 (let ((?x970 (* (- 9) s00)))
 (let ((?x801 (* 9 s!1)))
 (let ((?x457 (+ ?x801 ?x970 ?x499 ?x1344 ?x1345 (* (- 15) ?x1689) ?x859 ?x1348 (* 108 ?x771) (* (- 108) (* x!0 s00)) (* 216 (* s!1 r00 r00 r00)) ?x983 (* 66 ?x996) ?x995 (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x731 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1112 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x866 (* 12 (* s!1 s!1 s00)) ?x1354 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1358 (* 216 (* x!0 x00)) ?x1359)))
 (let ((?x873 (* (- 36) ?x860)))
 (let ((?x789 (* 6 ?x788)))
 (let ((?x683 (* (- 2) ?x665)))
 (let ((?x899 (* (- 15) ?x564)))
 (let ((?x532 (* (- 54) ?x495)))
 (let ((?x547 (* 24 ?x399)))
 (let ((?x1500 (+ ?x801 ?x970 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x547 ?x532 (* 3 ?x1689) (* 54 ?x1692) ?x859 (* 36 (* r!2 x!0 r00)) ?x899 (* 54 ?x771) (* (- 6) (* x!0 s00)) ?x983 (* (- 54) ?x1882) (* 4 (* s!1 s!1 r00)) (* 12 ?x996) ?x683 (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x789 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x873 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x514 (* 9 ?x399)))
 (let ((?x351 (* (- 3) s00)))
 (let ((?x663 (+ (* 3 s!1) ?x351 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x514 ?x509 ?x1690 ?x516 ?x952 ?x694 ?x577 ?x1884 ?x621 ?x1870 ?x460 (* (- 9) (* s!1 r00)) ?x598)))
 (let ((?x1735 (+ ?x1772 ?x761 ?x1127 ?x44 ?x473 ?x474 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x477 ?x443)))
 (let (($x925 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x1574) (* 3 ?x274)) 0) (= ?x1735 0) (= ?x663 0) (= ?x1500 0) (= ?x457 0) (not (= (* ?x510 ?x1395) 0)))))
 (let (($x752 (exists ((r Int) (s Int) (x Int) )(! (let ((?x712 (* (- 6) (* r s00 r00))))
 (let ((?x661 (* s s00)))
 (let ((?x662 (* 2 ?x661)))
 (let ((?x632 (* r x00)))
 (let ((?x645 (* (- 18) ?x632)))
 (let ((?x620 (* s00 r00 r00)))
 (let ((?x621 (* 6 ?x620)))
 (let ((?x590 (* x r00)))
 (let ((?x591 (* 18 ?x590)))
 (let ((?x564 (* s00 s00)))
 (let ((?x577 (* (- 4) ?x564)))
 (let ((?x538 (* s r00 r00)))
 (let ((?x551 (* (- 6) ?x538)))
 (let ((?x527 (* 6 (* r s r00))))
 (let ((?x522 (* r x)))
 (let ((?x523 (* 18 ?x522)))
 (let ((?x518 (* s s)))
 (let ((?x519 (* 2 ?x518)))
 (let ((?x495 (* r00 x00)))
 (let ((?x509 (* (- 18) ?x495)))
 (let ((?x399 (* s00 r00)))
 (let ((?x1864 (* 3 ?x399)))
 (let ((?x324 (* r r00 r00)))
 (let ((?x1576 (* (- 36) ?x324)))
 (let ((?x274 (* r00 r00)))
 (let ((?x1567 (* (- 18) ?x274)))
 (let ((?x1686 (* (- 18) x00)))
 (let ((?x641 (* (- 9) r00)))
 (let ((?x1762 (* 12 s00)))
 (let ((?x1494 (* 18 x)))
 (let ((?x791 (+ (* 9 r) (* (- 12) s) ?x1494 ?x1762 ?x641 ?x1686 (* 18 (* r r)) ?x1567 (* (- 3) (* r s)) ?x1576 (* 21 (* r s00)) ?x1864 ?x509 ?x519 ?x523 ?x527 ?x551 ?x577 ?x591 ?x621 ?x645 ?x662 (* (- 21) (* s r00)) ?x712 (* 36 (* r r r00)))))
 (let ((?x213 (* 6 r)))
 (let ((?x1369 (+ 3 ?x213 s)))
 (let ((?x253 (* (- 1) s)))
 (let ((?x1472 (+ ?x253 x)))
 (let ((?x1366 (+ 1 r)))
 (let ((?x1311 (+ (* (- 1) (* ?x1366 ?x1366 ?x1472 ?x1472 ?x1472 ?x1369)) (* ?x1472 ?x1369 ?x1369 ?x1369) (* (- 1) (* ?x1366 ?x1472 ?x1472 ?x1369 ?x1369)))))
 (let ((?x1329 (* x00 x00)))
 (let ((?x1359 (* (- 108) ?x1329)))
 (let ((?x1167 (* s00 s00 s00)))
 (let ((?x1358 (* (- 16) ?x1167)))
 (let ((?x1039 (* s00 r00 r00 r00)))
 (let ((?x1354 (* (- 216) ?x1039)))
 (let ((?x865 (* r00 r00 r00 x00)))
 (let ((?x866 (* 432 ?x865)))
 (let ((?x788 (* s00 x00)))
 (let ((?x1112 (* 108 ?x788)))
 (let ((?x730 (* s00 s00 r00 r00)))
 (let ((?x731 (* 36 ?x730)))
 (let ((?x665 (* s00 s00 r00)))
 (let ((?x995 (* 108 ?x665)))
 (let ((?x983 (* 36 ?x620)))
 (let ((?x1348 (* (- 51) ?x564)))
 (let ((?x847 (* (- 36) ?x538)))
 (let ((?x1345 (* (- 108) ?x495)))
 (let ((?x488 (* s00 r00 x00)))
 (let ((?x1344 (* (- 216) ?x488)))
 (let ((?x499 (* 54 ?x399)))
 (let ((?x970 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1360 (+ ?x143 ?x970 ?x499 ?x1344 ?x1345 (* (- 15) ?x518) ?x847 ?x1348 (* 108 ?x590) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x983 (* 66 ?x661) ?x995 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x731 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1112 (* 108 (* s x)) (* (- 108) (* x x)) ?x866 (* 12 (* s s s00)) ?x1354 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1358 (* 216 (* x x00)) ?x1359)))
 (let (($x1361 (= ?x1360 0)))
 (let ((?x860 (* r00 r00 x00)))
 (let ((?x873 (* (- 36) ?x860)))
 (let ((?x789 (* 6 ?x788)))
 (let ((?x683 (* (- 2) ?x665)))
 (let ((?x899 (* (- 15) ?x564)))
 (let ((?x550 (* 3 ?x518)))
 (let ((?x532 (* (- 54) ?x495)))
 (let ((?x547 (* 24 ?x399)))
 (let ((?x1062 (+ ?x143 ?x970 (* (- 24) (* r s)) (* 24 (* r s00)) ?x547 ?x532 ?x550 (* 54 ?x522) ?x847 (* 36 (* r x r00)) ?x899 (* 54 ?x590) (* (- 6) (* x s00)) ?x983 (* (- 54) ?x632) (* 4 (* s s r00)) (* 12 ?x661) ?x683 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x789 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x873 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1067 (= ?x1062 0)))
 (let ((?x673 (* s r00)))
 (let ((?x686 (* (- 9) ?x673)))
 (let ((?x514 (* 9 ?x399)))
 (let ((?x372 (* r s00)))
 (let ((?x658 (* 9 ?x372)))
 (let ((?x318 (* r s)))
 (let ((?x490 (* (- 9) ?x318)))
 (let ((?x351 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x718 (+ ?x47 ?x351 ?x490 ?x658 ?x514 ?x509 ?x519 ?x523 ?x527 ?x551 ?x577 ?x591 ?x621 ?x645 ?x662 ?x686 ?x712)))
 (let (($x725 (= ?x718 0)))
 (let ((?x442 (* r00 r00 r00)))
 (let ((?x443 (* 12 ?x442)))
 (let ((?x477 (* (- 6) ?x399)))
 (let ((?x474 (* (- 6) x00)))
 (let ((?x473 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x472 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x478 (+ ?x43 ?x472 ?x56 ?x44 ?x473 ?x474 (* 2 ?x318) (* (- 12) ?x324) (* 4 ?x372) ?x477 ?x443)))
 (let (($x479 (= ?x478 0)))
 (let (($x307 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x274)) 0)))
 (and $x307 $x479 $x725 $x1067 $x1361 (not (= (* ?x1311 ?x791) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1980 (exists ((r Int) (s Int) (x Int) )(! (let ((?x47 (* 3 s)))
 (let ((?x1738 (* r00 r00 s00)))
 (let ((?x1746 (* 6 ?x1738)))
 (let ((?x351 (* (- 3) s00)))
 (let ((?x564 (* s00 s00)))
 (let ((?x577 (* (- 4) ?x564)))
 (let ((?x1577 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x878 (* r00 s00)))
 (let ((?x647 (* 9 ?x878)))
 (let ((?x495 (* r00 x00)))
 (let ((?x509 (* (- 18) ?x495)))
 (let ((?x982 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x509 ?x647 ?x1577 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x577 (* 18 (* r00 (+ x (* (- 1) s)))) ?x351 ?x1746 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x934 (+ 3 s ?x213)))
 (let ((?x253 (* (- 1) s)))
 (let ((?x1399 (+ x ?x253)))
 (let ((?x1366 (+ 1 r)))
 (let ((?x1074 (+ (* (- 1) (* ?x1366 ?x1366 ?x1399 ?x1399 ?x1399 ?x934)) (* ?x1399 ?x934 ?x934 ?x934) (* (- 1) (* ?x1366 ?x1399 ?x1399 ?x934 ?x934)))))
 (let (($x959 (not (= (* ?x1074 ?x982) 0))))
 (let ((?x1329 (* x00 x00)))
 (let ((?x790 (* 108 ?x1329)))
 (let ((?x1465 (* (- 9) s)))
 (let ((?x295 (* (- 36) ?x1738)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1694 (* 51 ?x564)))
 (let ((?x1022 (* r00 r00 s)))
 (let ((?x767 (* 36 ?x1022)))
 (let ((?x1167 (* s00 s00 s00)))
 (let ((?x1584 (* 16 ?x1167)))
 (let ((?x788 (* s00 x00)))
 (let ((?x1795 (* (- 108) ?x788)))
 (let ((?x865 (* r00 r00 r00 x00)))
 (let ((?x1260 (* (- 432) ?x865)))
 (let ((?x1564 (* 108 ?x495)))
 (let ((?x802 (+ (* 216 (* r00 s00 x00)) ?x1564 (* (- 54) ?x878) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1260 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1795 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1584 (* (- 108) (* x s)) ?x767 ?x1694 (* (- 108) (* r00 x)) ?x137 ?x295 ?x1465 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let (($x839 (= ?x802 0)))
 (let ((?x298 (* 15 ?x564)))
 (let ((?x860 (* r00 r00 x00)))
 (let ((?x282 (* 36 ?x860)))
 (let ((?x290 (* (- 6) ?x788)))
 (let ((?x1643 (* 54 ?x495)))
 (let ((?x1397 (+ (* 24 (* s r)) ?x1643 (* (- 36) (* r00 x r)) (* (- 24) ?x878) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x290 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x767 ?x282 ?x298 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x295 (* 54 (* x00 r)) ?x1465 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x472 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x695 (* 4 ?x564)))
 (let ((?x701 (* 18 ?x495)))
 (let ((?x489 (+ (* 9 (* s r)) ?x701 (* (- 9) ?x878) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1022) ?x695 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1738) (* 18 (* x00 r)) ?x472 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x442 (* r00 r00 r00)))
 (let ((?x443 (* 12 ?x442)))
 (let ((?x474 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x473 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1191 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x472 ?x473 (* 4 (* s00 r)) (* (- 6) ?x878) ?x56 ?x474 ?x443)))
 (let (($x612 (= (+ s00 ?x253 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x612 (= ?x1191 0) (= ?x489 0) (= ?x1397 0) $x839 $x959)))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x515 (lambda ((r Int) (s Int) (x Int) )(let ((?x712 (* (- 6) (* r s00 r00))))
 (let ((?x661 (* s s00)))
 (let ((?x662 (* 2 ?x661)))
 (let ((?x632 (* r x00)))
 (let ((?x645 (* (- 18) ?x632)))
 (let ((?x620 (* s00 r00 r00)))
 (let ((?x621 (* 6 ?x620)))
 (let ((?x590 (* x r00)))
 (let ((?x591 (* 18 ?x590)))
 (let ((?x564 (* s00 s00)))
 (let ((?x577 (* (- 4) ?x564)))
 (let ((?x538 (* s r00 r00)))
 (let ((?x551 (* (- 6) ?x538)))
 (let ((?x527 (* 6 (* r s r00))))
 (let ((?x522 (* r x)))
 (let ((?x523 (* 18 ?x522)))
 (let ((?x518 (* s s)))
 (let ((?x519 (* 2 ?x518)))
 (let ((?x495 (* r00 x00)))
 (let ((?x509 (* (- 18) ?x495)))
 (let ((?x399 (* s00 r00)))
 (let ((?x1864 (* 3 ?x399)))
 (let ((?x324 (* r r00 r00)))
 (let ((?x1576 (* (- 36) ?x324)))
 (let ((?x274 (* r00 r00)))
 (let ((?x1567 (* (- 18) ?x274)))
 (let ((?x1686 (* (- 18) x00)))
 (let ((?x641 (* (- 9) r00)))
 (let ((?x1762 (* 12 s00)))
 (let ((?x1494 (* 18 x)))
 (let ((?x791 (+ (* 9 r) (* (- 12) s) ?x1494 ?x1762 ?x641 ?x1686 (* 18 (* r r)) ?x1567 (* (- 3) (* r s)) ?x1576 (* 21 (* r s00)) ?x1864 ?x509 ?x519 ?x523 ?x527 ?x551 ?x577 ?x591 ?x621 ?x645 ?x662 (* (- 21) (* s r00)) ?x712 (* 36 (* r r r00)))))
 (let ((?x213 (* 6 r)))
 (let ((?x1369 (+ 3 ?x213 s)))
 (let ((?x253 (* (- 1) s)))
 (let ((?x1472 (+ ?x253 x)))
 (let ((?x1366 (+ 1 r)))
 (let ((?x1311 (+ (* (- 1) (* ?x1366 ?x1366 ?x1472 ?x1472 ?x1472 ?x1369)) (* ?x1472 ?x1369 ?x1369 ?x1369) (* (- 1) (* ?x1366 ?x1472 ?x1472 ?x1369 ?x1369)))))
 (let ((?x1329 (* x00 x00)))
 (let ((?x1359 (* (- 108) ?x1329)))
 (let ((?x1167 (* s00 s00 s00)))
 (let ((?x1358 (* (- 16) ?x1167)))
 (let ((?x1039 (* s00 r00 r00 r00)))
 (let ((?x1354 (* (- 216) ?x1039)))
 (let ((?x865 (* r00 r00 r00 x00)))
 (let ((?x866 (* 432 ?x865)))
 (let ((?x788 (* s00 x00)))
 (let ((?x1112 (* 108 ?x788)))
 (let ((?x730 (* s00 s00 r00 r00)))
 (let ((?x731 (* 36 ?x730)))
 (let ((?x665 (* s00 s00 r00)))
 (let ((?x995 (* 108 ?x665)))
 (let ((?x983 (* 36 ?x620)))
 (let ((?x1348 (* (- 51) ?x564)))
 (let ((?x847 (* (- 36) ?x538)))
 (let ((?x1345 (* (- 108) ?x495)))
 (let ((?x488 (* s00 r00 x00)))
 (let ((?x1344 (* (- 216) ?x488)))
 (let ((?x499 (* 54 ?x399)))
 (let ((?x970 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1360 (+ ?x143 ?x970 ?x499 ?x1344 ?x1345 (* (- 15) ?x518) ?x847 ?x1348 (* 108 ?x590) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x983 (* 66 ?x661) ?x995 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x731 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1112 (* 108 (* s x)) (* (- 108) (* x x)) ?x866 (* 12 (* s s s00)) ?x1354 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1358 (* 216 (* x x00)) ?x1359)))
 (let (($x1361 (= ?x1360 0)))
 (let ((?x860 (* r00 r00 x00)))
 (let ((?x873 (* (- 36) ?x860)))
 (let ((?x789 (* 6 ?x788)))
 (let ((?x683 (* (- 2) ?x665)))
 (let ((?x899 (* (- 15) ?x564)))
 (let ((?x550 (* 3 ?x518)))
 (let ((?x532 (* (- 54) ?x495)))
 (let ((?x547 (* 24 ?x399)))
 (let ((?x1062 (+ ?x143 ?x970 (* (- 24) (* r s)) (* 24 (* r s00)) ?x547 ?x532 ?x550 (* 54 ?x522) ?x847 (* 36 (* r x r00)) ?x899 (* 54 ?x590) (* (- 6) (* x s00)) ?x983 (* (- 54) ?x632) (* 4 (* s s r00)) (* 12 ?x661) ?x683 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x789 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x873 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1067 (= ?x1062 0)))
 (let ((?x673 (* s r00)))
 (let ((?x686 (* (- 9) ?x673)))
 (let ((?x514 (* 9 ?x399)))
 (let ((?x372 (* r s00)))
 (let ((?x658 (* 9 ?x372)))
 (let ((?x318 (* r s)))
 (let ((?x490 (* (- 9) ?x318)))
 (let ((?x351 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x718 (+ ?x47 ?x351 ?x490 ?x658 ?x514 ?x509 ?x519 ?x523 ?x527 ?x551 ?x577 ?x591 ?x621 ?x645 ?x662 ?x686 ?x712)))
 (let (($x725 (= ?x718 0)))
 (let ((?x442 (* r00 r00 r00)))
 (let ((?x443 (* 12 ?x442)))
 (let ((?x477 (* (- 6) ?x399)))
 (let ((?x474 (* (- 6) x00)))
 (let ((?x473 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x472 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x478 (+ ?x43 ?x472 ?x56 ?x44 ?x473 ?x474 (* 2 ?x318) (* (- 12) ?x324) (* 4 ?x372) ?x477 ?x443)))
 (let (($x479 (= ?x478 0)))
 (let (($x307 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x274)) 0)))
 (let (($x458 (and $x307 $x479 $x725 $x1067 $x1361 (not (= (* ?x1311 ?x791) 0)))))
 (let ((?x1738 (* r00 r00 s00)))
 (let ((?x1746 (* 6 ?x1738)))
 (let ((?x878 (* r00 s00)))
 (let ((?x647 (* 9 ?x878)))
 (let ((?x982 (+ 9 (* (- 9) (* ?x1366 (+ 3 s ?x213))) ?x509 ?x647 (* 2 (* (+ 3 s ?x213) (+ 3 s ?x213))) (* 18 (* ?x1366 (+ x ?x253))) (* 6 (* r00 ?x1366 (+ 3 s ?x213))) (* (- 6) (* r00 r00 (+ 3 s ?x213))) ?x577 (* 18 (* r00 (+ x ?x253))) ?x351 ?x1746 (* (- 18) (* x00 ?x1366)) ?x47 (* 18 r) (* 9 (* s00 ?x1366)) (* 2 (* s00 (+ 3 s ?x213))) (* (- 9) (* r00 (+ 3 s ?x213))) (* (- 6) (* r00 s00 ?x1366)))))
 (let ((?x934 (+ 3 s ?x213)))
 (let ((?x1399 (+ x ?x253)))
 (let ((?x1074 (+ (* (- 1) (* ?x1366 ?x1366 ?x1399 ?x1399 ?x1399 ?x934)) (* ?x1399 ?x934 ?x934 ?x934) (* (- 1) (* ?x1366 ?x1399 ?x1399 ?x934 ?x934)))))
 (let (($x959 (not (= (* ?x1074 ?x982) 0))))
 (let ((?x790 (* 108 ?x1329)))
 (let ((?x1465 (* (- 9) s)))
 (let ((?x295 (* (- 36) ?x1738)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1694 (* 51 ?x564)))
 (let ((?x1022 (* r00 r00 s)))
 (let ((?x767 (* 36 ?x1022)))
 (let ((?x1584 (* 16 ?x1167)))
 (let ((?x1795 (* (- 108) ?x788)))
 (let ((?x1260 (* (- 432) ?x865)))
 (let ((?x1564 (* 108 ?x495)))
 (let ((?x802 (+ (* 216 (* r00 s00 x00)) ?x1564 (* (- 54) ?x878) (* 15 ?x518) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1260 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1795 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1584 (* (- 108) (* x s)) ?x767 ?x1694 (* (- 108) (* r00 x)) ?x137 ?x295 ?x1465 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let (($x839 (= ?x802 0)))
 (let ((?x298 (* 15 ?x564)))
 (let ((?x282 (* 36 ?x860)))
 (let ((?x290 (* (- 6) ?x788)))
 (let ((?x1643 (* 54 ?x495)))
 (let ((?x1397 (+ (* 24 (* s r)) ?x1643 (* (- 36) (* r00 x r)) (* (- 24) ?x878) (* (- 3) ?x518) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x290 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x767 ?x282 ?x298 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x295 (* 54 (* x00 r)) ?x1465 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x695 (* 4 ?x564)))
 (let ((?x701 (* 18 ?x495)))
 (let ((?x489 (+ (* 9 (* s r)) ?x701 (* (- 9) ?x878) (* (- 2) ?x518) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1022) ?x695 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1738) (* 18 (* x00 r)) ?x472 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x1191 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x472 ?x473 (* 4 (* s00 r)) (* (- 6) ?x878) ?x56 ?x474 ?x443)))
 (let (($x612 (= (+ s00 ?x253 (* 3 (* r r)) (* (- 3) ?x274)) 0)))
 (let (($x1385 (and $x612 (= ?x1191 0) (= ?x489 0) (= ?x1397 0) $x839 $x959)))
 (rewrite (= $x1385 $x458))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x961 (exists ((r Int) (s Int) (x Int) )(! (let ((?x47 (* 3 s)))
 (let ((?x1738 (* r00 r00 s00)))
 (let ((?x1746 (* 6 ?x1738)))
 (let ((?x351 (* (- 3) s00)))
 (let ((?x564 (* s00 s00)))
 (let ((?x577 (* (- 4) ?x564)))
 (let ((?x1577 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x878 (* r00 s00)))
 (let ((?x647 (* 9 ?x878)))
 (let ((?x495 (* r00 x00)))
 (let ((?x509 (* (- 18) ?x495)))
 (let ((?x982 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x509 ?x647 ?x1577 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x577 (* 18 (* r00 (+ x (* (- 1) s)))) ?x351 ?x1746 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x934 (+ 3 s ?x213)))
 (let ((?x253 (* (- 1) s)))
 (let ((?x1399 (+ x ?x253)))
 (let ((?x1366 (+ 1 r)))
 (let ((?x1074 (+ (* (- 1) (* ?x1366 ?x1366 ?x1399 ?x1399 ?x1399 ?x934)) (* ?x1399 ?x934 ?x934 ?x934) (* (- 1) (* ?x1366 ?x1399 ?x1399 ?x934 ?x934)))))
 (let (($x959 (not (= (* ?x1074 ?x982) 0))))
 (let ((?x1329 (* x00 x00)))
 (let ((?x790 (* 108 ?x1329)))
 (let ((?x1465 (* (- 9) s)))
 (let ((?x295 (* (- 36) ?x1738)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1694 (* 51 ?x564)))
 (let ((?x1022 (* r00 r00 s)))
 (let ((?x767 (* 36 ?x1022)))
 (let ((?x1167 (* s00 s00 s00)))
 (let ((?x1584 (* 16 ?x1167)))
 (let ((?x788 (* s00 x00)))
 (let ((?x1795 (* (- 108) ?x788)))
 (let ((?x865 (* r00 r00 r00 x00)))
 (let ((?x1260 (* (- 432) ?x865)))
 (let ((?x1564 (* 108 ?x495)))
 (let ((?x802 (+ (* 216 (* r00 s00 x00)) ?x1564 (* (- 54) ?x878) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1260 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1795 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1584 (* (- 108) (* x s)) ?x767 ?x1694 (* (- 108) (* r00 x)) ?x137 ?x295 ?x1465 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let (($x839 (= ?x802 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x970 (* (- 9) s00)))
 (let ((?x899 (* (- 15) ?x564)))
 (let ((?x860 (* r00 r00 x00)))
 (let ((?x873 (* (- 36) ?x860)))
 (let ((?x789 (* 6 ?x788)))
 (let ((?x518 (* s s)))
 (let ((?x550 (* 3 ?x518)))
 (let ((?x532 (* (- 54) ?x495)))
 (let ((?x576 (+ (* (- 24) (* s r)) ?x532 (* 36 (* r00 x r)) (* 24 ?x878) ?x550 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x789 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1022) ?x873 ?x899 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x970 (* 36 ?x1738) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1616 (* r00 x)))
 (let ((?x1617 (* 18 ?x1616)))
 (let ((?x519 (* 2 ?x518)))
 (let ((?x703 (+ (* (- 9) (* s r)) ?x509 ?x647 ?x519 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1022) ?x577 ?x1617 ?x351 ?x1746 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x461 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x351 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x878) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x612 (= (+ s00 ?x253 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x612 (= ?x461 0) (= ?x703 0) (= ?x576 0) $x839 $x959))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x557 (lambda ((r Int) (s Int) (x Int) )(let ((?x47 (* 3 s)))
 (let ((?x1738 (* r00 r00 s00)))
 (let ((?x1746 (* 6 ?x1738)))
 (let ((?x351 (* (- 3) s00)))
 (let ((?x564 (* s00 s00)))
 (let ((?x577 (* (- 4) ?x564)))
 (let ((?x1577 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x878 (* r00 s00)))
 (let ((?x647 (* 9 ?x878)))
 (let ((?x495 (* r00 x00)))
 (let ((?x509 (* (- 18) ?x495)))
 (let ((?x982 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x509 ?x647 ?x1577 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x577 (* 18 (* r00 (+ x (* (- 1) s)))) ?x351 ?x1746 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x934 (+ 3 s ?x213)))
 (let ((?x253 (* (- 1) s)))
 (let ((?x1399 (+ x ?x253)))
 (let ((?x1366 (+ 1 r)))
 (let ((?x1074 (+ (* (- 1) (* ?x1366 ?x1366 ?x1399 ?x1399 ?x1399 ?x934)) (* ?x1399 ?x934 ?x934 ?x934) (* (- 1) (* ?x1366 ?x1399 ?x1399 ?x934 ?x934)))))
 (let (($x959 (not (= (* ?x1074 ?x982) 0))))
 (let ((?x1329 (* x00 x00)))
 (let ((?x790 (* 108 ?x1329)))
 (let ((?x1465 (* (- 9) s)))
 (let ((?x295 (* (- 36) ?x1738)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1694 (* 51 ?x564)))
 (let ((?x1022 (* r00 r00 s)))
 (let ((?x767 (* 36 ?x1022)))
 (let ((?x1167 (* s00 s00 s00)))
 (let ((?x1584 (* 16 ?x1167)))
 (let ((?x788 (* s00 x00)))
 (let ((?x1795 (* (- 108) ?x788)))
 (let ((?x865 (* r00 r00 r00 x00)))
 (let ((?x1260 (* (- 432) ?x865)))
 (let ((?x1564 (* 108 ?x495)))
 (let ((?x802 (+ (* 216 (* r00 s00 x00)) ?x1564 (* (- 54) ?x878) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1260 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1795 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1584 (* (- 108) (* x s)) ?x767 ?x1694 (* (- 108) (* r00 x)) ?x137 ?x295 ?x1465 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let (($x839 (= ?x802 0)))
 (let ((?x298 (* 15 ?x564)))
 (let ((?x860 (* r00 r00 x00)))
 (let ((?x282 (* 36 ?x860)))
 (let ((?x290 (* (- 6) ?x788)))
 (let ((?x1643 (* 54 ?x495)))
 (let ((?x1397 (+ (* 24 (* s r)) ?x1643 (* (- 36) (* r00 x r)) (* (- 24) ?x878) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x290 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x767 ?x282 ?x298 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x295 (* 54 (* x00 r)) ?x1465 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x472 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x695 (* 4 ?x564)))
 (let ((?x701 (* 18 ?x495)))
 (let ((?x489 (+ (* 9 (* s r)) ?x701 (* (- 9) ?x878) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1022) ?x695 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1738) (* 18 (* x00 r)) ?x472 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x442 (* r00 r00 r00)))
 (let ((?x443 (* 12 ?x442)))
 (let ((?x474 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x473 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1191 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x472 ?x473 (* 4 (* s00 r)) (* (- 6) ?x878) ?x56 ?x474 ?x443)))
 (let (($x612 (= (+ s00 ?x253 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1385 (and $x612 (= ?x1191 0) (= ?x489 0) (= ?x1397 0) $x839 $x959)))
 (let ((?x143 (* 9 s)))
 (let ((?x970 (* (- 9) s00)))
 (let ((?x899 (* (- 15) ?x564)))
 (let ((?x873 (* (- 36) ?x860)))
 (let ((?x789 (* 6 ?x788)))
 (let ((?x518 (* s s)))
 (let ((?x550 (* 3 ?x518)))
 (let ((?x532 (* (- 54) ?x495)))
 (let ((?x576 (+ (* (- 24) (* s r)) ?x532 (* 36 (* r00 x r)) (* 24 ?x878) ?x550 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x789 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1022) ?x873 ?x899 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x970 (* 36 ?x1738) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1616 (* r00 x)))
 (let ((?x1617 (* 18 ?x1616)))
 (let ((?x519 (* 2 ?x518)))
 (let ((?x703 (+ (* (- 9) (* s r)) ?x509 ?x647 ?x519 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1022) ?x577 ?x1617 ?x351 ?x1746 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x461 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x351 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x878) (* (- 6) x) ?x59 (* (- 12) ?x442))))
 (let (($x1046 (and $x612 (= ?x461 0) (= ?x703 0) (= ?x576 0) $x839 $x959)))
 (rewrite (= $x1046 $x1385))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x250 (exists ((r Int) (s Int) (x Int) )(! (let ((?x218 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x242 (+ (* (- 1) ?x212 ?x212 ?x214 ?x218 ?x218 ?x218) (* ?x214 ?x214 ?x214 ?x218))))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x245 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) (- ?x242 (* ?x212 ?x214 ?x214 ?x218 ?x218)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x245 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x881 (lambda ((r Int) (s Int) (x Int) )(let ((?x47 (* 3 s)))
 (let ((?x1738 (* r00 r00 s00)))
 (let ((?x1746 (* 6 ?x1738)))
 (let ((?x351 (* (- 3) s00)))
 (let ((?x564 (* s00 s00)))
 (let ((?x577 (* (- 4) ?x564)))
 (let ((?x1577 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x878 (* r00 s00)))
 (let ((?x647 (* 9 ?x878)))
 (let ((?x495 (* r00 x00)))
 (let ((?x509 (* (- 18) ?x495)))
 (let ((?x982 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x509 ?x647 ?x1577 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x577 (* 18 (* r00 (+ x (* (- 1) s)))) ?x351 ?x1746 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x934 (+ 3 s ?x213)))
 (let ((?x253 (* (- 1) s)))
 (let ((?x1399 (+ x ?x253)))
 (let ((?x1366 (+ 1 r)))
 (let ((?x1074 (+ (* (- 1) (* ?x1366 ?x1366 ?x1399 ?x1399 ?x1399 ?x934)) (* ?x1399 ?x934 ?x934 ?x934) (* (- 1) (* ?x1366 ?x1399 ?x1399 ?x934 ?x934)))))
 (let (($x959 (not (= (* ?x1074 ?x982) 0))))
 (let ((?x1329 (* x00 x00)))
 (let ((?x790 (* 108 ?x1329)))
 (let ((?x1465 (* (- 9) s)))
 (let ((?x295 (* (- 36) ?x1738)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1694 (* 51 ?x564)))
 (let ((?x1022 (* r00 r00 s)))
 (let ((?x767 (* 36 ?x1022)))
 (let ((?x1167 (* s00 s00 s00)))
 (let ((?x1584 (* 16 ?x1167)))
 (let ((?x788 (* s00 x00)))
 (let ((?x1795 (* (- 108) ?x788)))
 (let ((?x865 (* r00 r00 r00 x00)))
 (let ((?x1260 (* (- 432) ?x865)))
 (let ((?x1564 (* 108 ?x495)))
 (let ((?x802 (+ (* 216 (* r00 s00 x00)) ?x1564 (* (- 54) ?x878) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1260 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1795 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1584 (* (- 108) (* x s)) ?x767 ?x1694 (* (- 108) (* r00 x)) ?x137 ?x295 ?x1465 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let (($x839 (= ?x802 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x970 (* (- 9) s00)))
 (let ((?x899 (* (- 15) ?x564)))
 (let ((?x860 (* r00 r00 x00)))
 (let ((?x873 (* (- 36) ?x860)))
 (let ((?x789 (* 6 ?x788)))
 (let ((?x518 (* s s)))
 (let ((?x550 (* 3 ?x518)))
 (let ((?x532 (* (- 54) ?x495)))
 (let ((?x576 (+ (* (- 24) (* s r)) ?x532 (* 36 (* r00 x r)) (* 24 ?x878) ?x550 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x789 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1022) ?x873 ?x899 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x970 (* 36 ?x1738) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1616 (* r00 x)))
 (let ((?x1617 (* 18 ?x1616)))
 (let ((?x519 (* 2 ?x518)))
 (let ((?x703 (+ (* (- 9) (* s r)) ?x509 ?x647 ?x519 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1022) ?x577 ?x1617 ?x351 ?x1746 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x461 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x351 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x878) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x612 (= (+ s00 ?x253 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1046 (and $x612 (= ?x461 0) (= ?x703 0) (= ?x576 0) $x839 $x959)))
 (let ((?x218 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x242 (+ (* (- 1) ?x212 ?x212 ?x214 ?x218 ?x218 ?x218) (* ?x214 ?x214 ?x214 ?x218))))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x245 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) (- ?x242 (* ?x212 ?x214 ?x214 ?x218 ?x218)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x249 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x245 0))))))
 (rewrite (= $x249 $x1046)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x251 (asserted $x250)))
 (let ((@x585 (mp (mp @x251 (quant-intro (proof-bind ?x881) (= $x250 $x961)) $x961) (rewrite (= $x961 $x961)) $x961)))
 (let ((@x1798 (mp (mp @x585 (quant-intro (proof-bind ?x557) (= $x961 $x1980)) $x1980) (quant-intro (proof-bind ?x515) (= $x1980 $x752)) $x752)))
 (let ((@x1563 (mp (mp~ @x1798 (sk (~ $x752 $x925)) $x925) (rewrite (= $x925 $x1124)) $x1124)))
 (let ((@x819 (and-elim @x1563 $x942)))
 (let ((@x677 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x942) $x1261)) @x819 $x1261)))
 (let (($x654 (>= ?x944 0)))
 (let ((@x322 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x942) $x654)) @x819 $x654)))
 (let (($x534 (<= ?x622 0)))
 (let ((@x1885 (and-elim @x1563 $x973)))
 (let ((@x1695 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x973) $x534)) @x1885 $x534)))
 (let (($x960 (>= ?x622 0)))
 (let ((@x506 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x973) $x960)) @x1885 $x960)))
 (let (($x1640 (<= ?x626 0)))
 (let ((@x1866 (and-elim @x1563 $x259)))
 (let ((@x1783 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x259) $x1640)) @x1866 $x1640)))
 (let (($x1641 (>= ?x626 0)))
 (let ((@x909 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x259) $x1641)) @x1866 $x1641)))
 (let ((@x965 (hypothesis (not $x1466))))
 (let (($x1462 (not (<= ?x517 0))))
 (let (($x714 (>= ?x517 0)))
 (let (($x1732 (>= ?x1195 0)))
 (let (($x1081 (not $x1732)))
 (let (($x951 (not $x714)))
 (let ((@x1688 (hypothesis $x951)))
 (let ((@x1716 ((_ th-lemma arith) @x1688 @x965 @x322 @x677 @x909 @x1783 @x322 @x677 @x506 @x1695 @x506 @x1695 @x322 @x677 false)))
 (let ((@x835 ((_ th-lemma arith farkas 1 1 1) @x1688 (hypothesis $x1732) (unit-resolution (lemma @x1716 (or $x1466 $x714)) @x1688 $x1466) false)))
 (let ((@x513 ((_ th-lemma arith) @x1688 (unit-resolution (lemma @x835 (or $x1081 $x714)) @x1688 $x1081) @x322 @x677 @x909 @x1783 @x322 @x677 @x506 @x1695 @x506 @x1695 @x322 @x677 false)))
 (let ((@x1606 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x562 $x1462 $x951)) (and-elim @x1563 $x1682) (or $x1462 $x951))))
 (let ((@x734 (unit-resolution @x1606 (lemma @x513 $x714) $x1462)))
 (let ((@x1036 ((_ th-lemma arith) @x734 @x965 @x322 @x677 @x909 @x1783 @x322 @x677 @x506 @x1695 @x506 @x1695 @x322 @x677 false)))
 (let ((@x1493 ((_ th-lemma arith) @x734 (hypothesis $x1081) @x322 @x677 @x909 @x1783 @x322 @x677 @x506 @x1695 @x506 @x1695 @x322 @x677 false)))
 ((_ th-lemma arith farkas 1 1 1) @x734 (lemma @x1493 $x1732) (lemma @x1036 $x1466) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 7
 :arith-assert-diseq        4
 :arith-assert-lower        40
 :arith-assert-upper        15
 :arith-conflicts           6
 :arith-eq-adapter          8
 :arith-fixed-eqs           1
 :arith-gcd-tests           7
 :arith-grobner             7
 :arith-max-min             1648
 :arith-nonlinear-bounds    28
 :arith-nonlinear-horner    70
 :arith-num-rows            10
 :arith-patches             7
 :arith-patches_succ        7
 :arith-pivots              7
 :arith-pseudo-nonlinear    2
 :arith-row-summations      9
 :arith-tableau-max-columns 102
 :arith-tableau-max-rows    10
 :conflicts                 6
 :decisions                 5
 :del-clause                26
 :final-checks              15
 :max-memory                7.90
 :memory                    3.34
 :minimized-lits            1
 :mk-bool-var               30
 :mk-clause                 26
 :num-allocs                38911750015.00
 :num-checks                1
 :propagations              17
 :rlimit-count              8571608
 :time                      4.73
 :total-time                4.72)
