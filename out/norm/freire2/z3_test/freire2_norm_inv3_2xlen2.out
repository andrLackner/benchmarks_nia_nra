unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x737 (* (- 1) s!1)))
 (let ((?x357 (* r00 r00)))
 (let ((?x1043 (* (- 3) ?x357)))
 (let ((?x1240 (+ s00 ?x1043 ?x737 (* 3 (* r!2 r!2)))))
 (let (($x2291 (<= ?x1240 0)))
 (let (($x1224 (= ?x1240 0)))
 (let ((?x2061 (* 6 r!2)))
 (let ((?x2695 (+ 3 s!1 ?x2061)))
 (let ((?x738 (+ ?x737 x!0)))
 (let ((?x723 (+ 1 r!2)))
 (let ((?x2657 (* s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x2571 (* s00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x2527 (* r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x2501 (* r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)))
 (let ((?x2366 (* r00 x00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x2358 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x2350 (* r00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x2317 (* r00 r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)))
 (let ((?x2287 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x2353 (* (- 6) (* r00 r00 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695 ?x2695))))
 (let ((?x2194 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)))
 (let ((?x2184 (* r00 r00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x2095 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)))
 (let ((?x2079 (* r00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695)))
 (let ((?x1953 (* r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x1882 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695 ?x2695)))
 (let ((?x1790 (* s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695)))
 (let ((?x1751 (* r00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695)))
 (let ((?x1749 (* s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x1742 (* s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)))
 (let ((?x614 (* 6 (* r00 r00 s00 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695))))
 (let ((?x1653 (* r00 x00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695)))
 (let ((?x1492 (* x00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x1394 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x1342 (* r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)))
 (let ((?x1287 (* r00 r00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695)))
 (let ((?x1266 (* s00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695)))
 (let ((?x2669 (* (- 6) (* r00 s00 ?x723 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695))))
 (let ((?x1123 (* r00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x977 (* r00 r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x2285 (* 6 (* r00 ?x723 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695 ?x2695))))
 (let ((?x798 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)))
 (let ((?x642 (* r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695)))
 (let ((?x579 (* s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)))
 (let ((?x462 (* s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695)))
 (let ((?x439 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695)))
 (let ((?x337 (* x00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x2695 ?x2695)))
 (let ((?x2670 (+ (* 18 ?x337) (* 9 (* ?x723 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)) (* 2 (* s00 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695 ?x2695)) (* (- 18) ?x439) (* 3 ?x462) (* (- 4) (* s00 s00 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)) (* (- 3) ?x579) (* 3 (* ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695 ?x2695)) (* (- 18) (* ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)) (* (- 2) (* ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695 ?x2695)) (* (- 18) ?x642) (* (- 9) (* r00 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695 ?x2695)) (* 9 (* r00 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)) (* (- 3) (* ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)) (* (- 2) ?x798) ?x2285 (* 6 ?x977) (* (- 18) (* r00 x00 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)) (* 12 (* r00 ?x723 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)) (* (- 3) (* s00 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)) (* (- 6) (* r00 r00 s00 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695)) (* (- 6) ?x1123) ?x2669 (* 4 ?x1266) (* (- 6) ?x1287) (* 9 (* s00 ?x723 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)) (* (- 9) ?x1342) (* 18 ?x1394) (* (- 9) (* ?x723 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695 ?x2695)) (* (- 18) ?x1492) (* 4 (* s00 s00 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695)) (* 18 (* r00 x00 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695)) (* 18 ?x1653) ?x614 (* 2 ?x1742) (* (- 2) ?x1749) (* 6 ?x1751) (* (- 18) (* r00 ?x723 ?x723 ?x738 ?x738 ?x738 ?x2695 ?x2695 ?x2695)) (* 3 (* s00 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695)) (* (- 9) ?x1790) (* 2 (* ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695 ?x2695 ?x2695)) (* 6 (* r00 s00 ?x723 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695)) (* (- 2) (* s00 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)) (* (- 9) (* r00 s00 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695)) (* 2 ?x1882) (* 9 (* r00 s00 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)) (* 12 ?x1953) (* (- 9) ?x2079) (* (- 9) ?x2095) (* 6 ?x2184) (* 3 ?x2194) (* 6 (* r00 r00 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)) ?x2353 (* (- 9) (* s00 ?x723 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695)) (* (- 3) ?x2287) (* (- 6) ?x2317) (* 9 ?x2350) (* 9 ?x2358) (* (- 18) ?x2366) (* 6 ?x2501) (* 18 (* x00 ?x723 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695)) (* 9 ?x2527) (* (- 4) ?x2571) (* 9 ?x2657) (* (- 18) (* x00 ?x723 ?x723 ?x723 ?x723 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)) (* 18 (* ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x2695 ?x2695 ?x2695 ?x2695)))))
 (let (($x786 (= ?x2670 0)))
 (let (($x2052 (not $x786)))
 (let ((?x1404 (* x00 x00)))
 (let ((?x690 (* 108 ?x1404)))
 (let ((?x1242 (* s00 s00 s00)))
 (let ((?x411 (* 16 ?x1242)))
 (let ((?x940 (* r00 r00 r00 x00)))
 (let ((?x1090 (* (- 432) ?x940)))
 (let ((?x2369 (* (- 9) s!1)))
 (let ((?x863 (* s00 x00)))
 (let ((?x1601 (* (- 108) ?x863)))
 (let ((?x804 (* r00 r00 s!1)))
 (let ((?x2250 (* 36 ?x804)))
 (let ((?x703 (* s00 r00 r00)))
 (let ((?x2090 (* (- 36) ?x703)))
 (let ((?x647 (* s00 s00)))
 (let ((?x616 (* 51 ?x647)))
 (let ((?x578 (* r00 x00)))
 (let ((?x1048 (* 108 ?x578)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2378 (+ ?x137 (* (- 54) (* s00 r00)) (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* 216 (* s00 r00 x00)) ?x1048 (* 108 (* x!0 x!0)) ?x616 ?x2090 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x2250 ?x1601 ?x2369 ?x1090 (* 54 (* r00 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 66) (* s00 s!1)) (* 216 (* s00 r00 r00 r00)) ?x411 (* (- 108) (* r00 x!0)) (* 108 (* x00 s!1)) (* 108 (* s00 r00 s!1)) (* 108 (* s00 x!0)) ?x690 (* (- 4) (* s!1 s!1 s!1)) (* (- 108) (* s!1 x!0)) (* 15 (* s!1 s!1)))))
 (let (($x2383 (= ?x2378 0)))
 (let ((?x2676 (+ ?x137 (* (- 24) (* s00 r00)) (* 54 ?x578) (* 54 (* x00 r!2)) (* 15 ?x647) ?x2090 (* 2 (* s00 s00 r00)) ?x2250 (* (- 6) ?x863) (* 36 (* r00 x00 r!2)) ?x2369 (* 36 (* r00 r00 x00)) (* 24 (* r00 s!1)) (* (- 12) (* s00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* (- 54) (* r00 x!0)) (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)) (* 6 (* s00 x!0)) (* (- 2) (* s00 s!1 r!2)) (* 24 (* s!1 r!2)) (* (- 2) (* s!1 s!1 r!2)) (* (- 6) (* s!1 x!0)) (* (- 3) (* s!1 s!1)) (* (- 54) (* r!2 x!0)) (* (- 36) (* r00 r00 x!0)) (* (- 24) (* s00 r!2)) (* (- 36) (* r00 r!2 x!0)) (* 4 (* s00 s00 r!2)))))
 (let (($x2768 (= ?x2676 0)))
 (let ((?x2221 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x473 (+ ?x44 (* (- 9) (* s00 r00)) (* 18 ?x578) (* 18 (* x00 r!2)) (* 4 ?x647) (* (- 6) ?x703) (* (- 6) (* r00 s!1 r!2)) (* 6 ?x804) ?x2221 (* 9 (* r00 s!1)) (* (- 2) (* s00 s!1)) (* (- 18) (* r00 x!0)) (* 9 (* s!1 r!2)) (* (- 2) (* s!1 s!1)) (* (- 18) (* r!2 x!0)) (* (- 9) (* s00 r!2)) (* 6 (* s00 r00 r!2)))))
 (let (($x472 (= ?x473 0)))
 (let ((?x398 (* 6 x!0)))
 (let ((?x1694 (* 3 r!2)))
 (let ((?x525 (* r00 r00 r00)))
 (let ((?x526 (* 12 ?x525)))
 (let ((?x482 (* s00 r00)))
 (let ((?x560 (* (- 6) ?x482)))
 (let ((?x557 (* (- 6) x00)))
 (let ((?x556 (* (- 3) r00)))
 (let ((?x1605 (+ ?x44 ?x556 ?x557 ?x560 ?x526 ?x2221 ?x1694 (* (- 12) (* r00 r00 r!2)) ?x398 (* 2 (* s!1 r!2)) (* 4 (* s00 r!2)))))
 (let (($x1503 (= ?x1605 0)))
 (let (($x1933 (and $x1224 $x1503 $x472 $x2768 $x2383 $x2052)))
 (let ((?x1625 (+ 3 ?x2061 s!1)))
 (let ((?x2115 (* x00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625)))
 (let ((?x2020 (* r00 r00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x532 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625 ?x1625)))
 (let ((?x895 (* 6 (* r00 ?x723 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625 ?x1625))))
 (let ((?x666 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625)))
 (let ((?x907 (* r00 x00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625)))
 (let ((?x1719 (* s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x654 (* r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)))
 (let ((?x2112 (* r00 r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)))
 (let ((?x913 (* (- 6) (* r00 s00 ?x723 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625))))
 (let ((?x1233 (* r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)))
 (let ((?x891 (* r00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x504 (* s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625)))
 (let ((?x469 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)))
 (let ((?x1803 (* r00 x00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x1410 (* s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x1272 (* s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625)))
 (let ((?x816 (* 6 (* r00 r00 s00 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625))))
 (let ((?x542 (* r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625)))
 (let ((?x696 (* r00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625)))
 (let ((?x2484 (* s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x1412 (* r00 r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x1761 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x2785 (* s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)))
 (let ((?x2788 (* r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x576 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)))
 (let ((?x1682 (* s00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625)))
 (let ((?x2733 (* r00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x2730 (* r00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625)))
 (let ((?x1172 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)))
 (let ((?x377 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x374 (* x00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x373 (* r00 r00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625)))
 (let ((?x800 (* s00 s00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x1161 (* ?x723 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x909 (* (- 6) (* r00 r00 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625 ?x1625))))
 (let ((?x1652 (* r00 ?x723 ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)))
 (let ((?x1969 (+ (* 9 ?x1652) (* (- 3) (* ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) ?x909 (* 9 ?x1161) (* (- 4) ?x800) (* (- 6) ?x373) (* (- 18) ?x374) (* 18 ?x377) (* (- 2) ?x1172) (* (- 9) (* r00 s00 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625)) (* 9 (* s00 ?x723 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) (* (- 9) ?x2730) (* 9 ?x2733) (* 3 (* s00 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625)) (* (- 3) (* s00 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) (* 4 ?x1682) (* 3 ?x576) (* (- 2) (* s00 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) (* 12 ?x2788) (* 2 ?x2785) (* (- 3) ?x1761) (* 6 ?x1412) (* 18 (* r00 x00 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625)) (* 3 (* ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625 ?x1625)) (* 18 (* ?x723 ?x723 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) (* (- 6) (* r00 r00 s00 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625)) (* (- 2) ?x2484) (* 6 ?x696) (* (- 9) (* s00 ?x723 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625)) (* (- 18) ?x542) ?x816 (* (- 2) (* ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625 ?x1625)) (* 3 ?x1272) (* 9 ?x1410) (* (- 18) ?x1803) (* 9 (* r00 s00 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) (* (- 18) (* r00 x00 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) (* (- 9) (* ?x723 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625 ?x1625)) (* 12 (* r00 ?x723 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) (* 18 (* x00 ?x723 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625)) (* (- 9) ?x469) (* (- 9) ?x504) (* 9 (* ?x723 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) (* (- 18) (* r00 ?x723 ?x723 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)) (* 6 (* r00 s00 ?x723 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625)) (* (- 18) (* x00 ?x723 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) (* 2 (* s00 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625 ?x1625)) (* (- 6) ?x891) (* (- 9) ?x1233) ?x913 (* (- 9) (* r00 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625 ?x1625)) (* (- 6) ?x2112) (* 6 ?x654) (* (- 3) ?x1719) (* (- 18) (* ?x723 ?x723 ?x723 ?x738 ?x738 ?x738 ?x1625 ?x1625 ?x1625)) (* 9 (* r00 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) (* 18 ?x907) (* (- 4) (* s00 s00 ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) (* (- 18) ?x666) ?x895 (* 4 (* s00 s00 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625)) (* 2 ?x532) (* 2 (* ?x723 ?x723 ?x723 ?x738 ?x1625 ?x1625 ?x1625 ?x1625 ?x1625 ?x1625)) (* 6 ?x2020) (* 6 (* r00 r00 ?x723 ?x723 ?x738 ?x738 ?x1625 ?x1625 ?x1625 ?x1625)) (* 18 ?x2115))))
 (let ((?x1434 (* (- 108) ?x1404)))
 (let ((?x1433 (* (- 16) ?x1242)))
 (let ((?x1114 (* s00 r00 r00 r00)))
 (let ((?x1429 (* (- 216) ?x1114)))
 (let ((?x941 (* 432 ?x940)))
 (let ((?x1187 (* 108 ?x863)))
 (let ((?x791 (* s00 s00 r00 r00)))
 (let ((?x792 (* 36 ?x791)))
 (let ((?x726 (* s00 s00 r00)))
 (let ((?x1070 (* 108 ?x726)))
 (let ((?x1058 (* 36 ?x703)))
 (let ((?x1423 (* (- 51) ?x647)))
 (let ((?x731 (* s!1 r00 r00)))
 (let ((?x1101 (* (- 36) ?x731)))
 (let ((?x1420 (* (- 108) ?x578)))
 (let ((?x571 (* s00 r00 x00)))
 (let ((?x1419 (* (- 216) ?x571)))
 (let ((?x580 (* 54 ?x482)))
 (let ((?x1045 (* (- 9) s00)))
 (let ((?x1109 (* 9 s!1)))
 (let ((?x633 (+ ?x1109 ?x1045 ?x580 ?x1419 ?x1420 (* (- 15) (* s!1 s!1)) ?x1101 ?x1423 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1058 ?x1070 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x792 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1187 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x941 (* 12 (* s!1 s!1 s00)) ?x1429 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1433 (* 216 (* x!0 x00)) ?x1434)))
 (let ((?x935 (* r00 r00 x00)))
 (let ((?x948 (* (- 36) ?x935)))
 (let ((?x864 (* 6 ?x863)))
 (let ((?x754 (* (- 2) ?x726)))
 (let ((?x974 (* (- 15) ?x647)))
 (let ((?x611 (* (- 54) ?x578)))
 (let ((?x624 (* 24 ?x482)))
 (let ((?x2035 (+ ?x1109 ?x1045 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x624 ?x611 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x1101 ?x974 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1058 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x754 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x864 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x948 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x704 (* 6 ?x703)))
 (let ((?x660 (* (- 4) ?x647)))
 (let ((?x592 (* (- 18) ?x578)))
 (let ((?x597 (* 9 ?x482)))
 (let ((?x434 (* (- 3) s00)))
 (let ((?x1548 (+ (* 3 s!1) ?x434 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x597 ?x592 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x731) ?x660 (* 18 (* x!0 r00)) ?x704 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1807 (+ ?x1694 ?x2221 ?x398 ?x44 ?x556 ?x557 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x560 ?x526)))
 (let (($x1108 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x357)) 0)))
 (let (($x1361 (and $x1108 (= ?x1807 0) (= ?x1548 0) (= ?x2035 0) (= ?x633 0) (not (= ?x1969 0)))))
 (let (($x1814 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1444 (+ 3 ?x213 s)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x1450 (+ ?x336 x)))
 (let ((?x1441 (+ 1 r)))
 (let ((?x2693 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x2495 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2200 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1168 (* 6 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x2114 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x2066 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1826 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1809 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1802 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1229 (* (- 6) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x1718 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1614 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1409 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1373 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1227 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1225 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1202 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x761 (* 6 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x1174 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1163 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1158 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1038 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1037 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x980 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x892 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x844 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x836 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x757 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x740 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x663 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x661 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x648 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x549 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x544 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x540 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1296 (* (- 6) (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x471 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1219 (+ (* 9 ?x471) (* (- 3) (* ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x1296 (* 9 ?x540) (* (- 4) ?x544) (* (- 6) ?x549) (* (- 18) ?x648) (* 18 ?x661) (* (- 2) ?x663) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) ?x740) (* 9 ?x757) (* 3 (* s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 3) (* s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 4 ?x836) (* 3 ?x844) (* (- 2) (* s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 12 ?x892) (* 2 ?x980) (* (- 3) ?x1037) (* 6 ?x1038) (* 18 (* r00 x00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 3 (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* 18 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 r00 s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 2) ?x1158) (* 6 ?x1163) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) ?x1174) ?x761 (* (- 2) (* ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 ?x1202) (* 9 ?x1225) (* (- 18) ?x1227) (* 9 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* 12 (* r00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) ?x1373) (* (- 9) ?x1409) (* 9 (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* r00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 6 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 2 (* s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 6) ?x1614) (* (- 9) ?x1718) ?x1229 (* (- 9) (* r00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 6) ?x1802) (* 6 ?x1809) (* (- 3) ?x1826) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* r00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 18 ?x2066) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) ?x2114) ?x1168 (* 4 (* s00 s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 2 ?x2200) (* 2 (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* 6 ?x2495) (* 6 (* r00 r00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 18 ?x2693))))
 (let ((?x1404 (* x00 x00)))
 (let ((?x1434 (* (- 108) ?x1404)))
 (let ((?x1242 (* s00 s00 s00)))
 (let ((?x1433 (* (- 16) ?x1242)))
 (let ((?x1114 (* s00 r00 r00 r00)))
 (let ((?x1429 (* (- 216) ?x1114)))
 (let ((?x940 (* r00 r00 r00 x00)))
 (let ((?x941 (* 432 ?x940)))
 (let ((?x863 (* s00 x00)))
 (let ((?x1187 (* 108 ?x863)))
 (let ((?x791 (* s00 s00 r00 r00)))
 (let ((?x792 (* 36 ?x791)))
 (let ((?x726 (* s00 s00 r00)))
 (let ((?x1070 (* 108 ?x726)))
 (let ((?x703 (* s00 r00 r00)))
 (let ((?x1058 (* 36 ?x703)))
 (let ((?x647 (* s00 s00)))
 (let ((?x1423 (* (- 51) ?x647)))
 (let ((?x621 (* s r00 r00)))
 (let ((?x922 (* (- 36) ?x621)))
 (let ((?x578 (* r00 x00)))
 (let ((?x1420 (* (- 108) ?x578)))
 (let ((?x571 (* s00 r00 x00)))
 (let ((?x1419 (* (- 216) ?x571)))
 (let ((?x482 (* s00 r00)))
 (let ((?x580 (* 54 ?x482)))
 (let ((?x1045 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1435 (+ ?x143 ?x1045 ?x580 ?x1419 ?x1420 (* (- 15) (* s s)) ?x922 ?x1423 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1058 ?x1070 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x792 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1187 (* 108 (* s x)) (* (- 108) (* x x)) ?x941 (* 12 (* s s s00)) ?x1429 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1433 (* 216 (* x x00)) ?x1434)))
 (let (($x1436 (= ?x1435 0)))
 (let ((?x935 (* r00 r00 x00)))
 (let ((?x948 (* (- 36) ?x935)))
 (let ((?x864 (* 6 ?x863)))
 (let ((?x754 (* (- 2) ?x726)))
 (let ((?x974 (* (- 15) ?x647)))
 (let ((?x601 (* s s)))
 (let ((?x627 (* 3 ?x601)))
 (let ((?x611 (* (- 54) ?x578)))
 (let ((?x624 (* 24 ?x482)))
 (let ((?x1137 (+ ?x143 ?x1045 (* (- 24) (* r s)) (* 24 (* r s00)) ?x624 ?x611 ?x627 (* 54 (* r x)) (* 36 (* r x r00)) ?x922 ?x974 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1058 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x754 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x864 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x948 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1142 (= ?x1137 0)))
 (let ((?x704 (* 6 ?x703)))
 (let ((?x660 (* (- 4) ?x647)))
 (let ((?x602 (* 2 ?x601)))
 (let ((?x592 (* (- 18) ?x578)))
 (let ((?x597 (* 9 ?x482)))
 (let ((?x434 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x801 (+ ?x47 ?x434 (* (- 9) (* r s)) (* 9 (* r s00)) ?x597 ?x592 ?x602 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x621) ?x660 (* 18 (* x r00)) ?x704 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x808 (= ?x801 0)))
 (let ((?x525 (* r00 r00 r00)))
 (let ((?x526 (* 12 ?x525)))
 (let ((?x560 (* (- 6) ?x482)))
 (let ((?x557 (* (- 6) x00)))
 (let ((?x556 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x561 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x556 ?x557 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x560 ?x526)))
 (let (($x562 (= ?x561 0)))
 (let ((?x357 (* r00 r00)))
 (let ((?x358 (* 3 ?x357)))
 (let ((?x387 (* (- 1) s00)))
 (let (($x390 (= (+ s ?x387 (* (- 3) (* r r)) ?x358) 0)))
 (and $x390 $x562 $x808 $x1142 $x1436 (not (= ?x1219 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x857 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x954 (+ 3 s ?x213)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x981 (+ x ?x336)))
 (let ((?x1441 (+ 1 r)))
 (let ((?x2740 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x2778 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2621 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2618 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x2610 (* 6 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954))))
 (let ((?x2544 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2763 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2092 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x1827 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2442 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2300 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x1638 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x2072 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1976 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x1763 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x1740 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1539 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x563 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x534 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x481 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x448 (* 6 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954))))
 (let ((?x1438 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x1372 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1313 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x1252 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1188 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x1132 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1065 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x865 (* (- 6) (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954))))
 (let ((?x1021 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2108 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x972 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1545 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x342 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x2526 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1842 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x1209 (* (- 6) (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954))))
 (let ((?x2726 (+ (* (- 9) (* r00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) ?x1209 (* 9 (* r00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* 18 (* ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 2) ?x1842) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 3) (* ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* 4 ?x2526) (* 3 (* ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* 3 (* s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* 18 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 3) ?x342) (* 6 ?x1545) (* (- 12) ?x972) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 18) ?x2108) (* 18 ?x1021) (* 2 (* ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* 2 (* s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) ?x865 (* (- 2) (* s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* 3 ?x1065) (* (- 6) ?x1132) (* (- 2) ?x1188) (* (- 18) ?x1252) (* (- 6) ?x1313) (* (- 9) ?x1372) (* 2 ?x1438) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* 18 (* r00 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)) ?x448 (* (- 3) ?x481) (* 9 ?x534) (* 9 ?x563) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 18) ?x1539) (* 3 ?x1740) (* 18 ?x1763) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* 6 (* r00 r00 s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* 9 ?x1976) (* (- 3) (* s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* 6 ?x2072) (* (- 6) (* r00 r00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 6) ?x1638) (* 9 ?x2300) (* 4 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 6) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 9) ?x2442) (* 2 ?x1827) (* 9 (* r00 s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* 18 ?x2092) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 2) (* ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954 ?x954)) (* (- 6) ?x2763) (* (- 9) ?x2544) ?x2610 (* 6 ?x2618) (* 18 ?x2621) (* 9 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* (- 12) (* r00 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 9) ?x2778) (* (- 4) ?x2740))))
 (let ((?x1404 (* x00 x00)))
 (let ((?x690 (* 108 ?x1404)))
 (let ((?x137 (* 9 s00)))
 (let ((?x647 (* s00 s00)))
 (let ((?x616 (* 51 ?x647)))
 (let ((?x1242 (* s00 s00 s00)))
 (let ((?x411 (* 16 ?x1242)))
 (let ((?x863 (* s00 x00)))
 (let ((?x1601 (* (- 108) ?x863)))
 (let ((?x940 (* r00 r00 r00 x00)))
 (let ((?x1090 (* (- 432) ?x940)))
 (let ((?x578 (* r00 x00)))
 (let ((?x1048 (* 108 ?x578)))
 (let ((?x706 (+ (* 216 (* r00 s00 x00)) ?x1048 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1090 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1601 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x411 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x616 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x690)))
 (let ((?x143 (* 9 s)))
 (let ((?x1045 (* (- 9) s00)))
 (let ((?x974 (* (- 15) ?x647)))
 (let ((?x935 (* r00 r00 x00)))
 (let ((?x948 (* (- 36) ?x935)))
 (let ((?x864 (* 6 ?x863)))
 (let ((?x601 (* s s)))
 (let ((?x627 (* 3 ?x601)))
 (let ((?x611 (* (- 54) ?x578)))
 (let ((?x444 (+ (* (- 24) (* s r)) ?x611 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x627 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x864 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x948 ?x974 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1045 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x434 (* (- 3) s00)))
 (let ((?x660 (* (- 4) ?x647)))
 (let ((?x602 (* 2 ?x601)))
 (let ((?x592 (* (- 18) ?x578)))
 (let ((?x1553 (+ (* (- 9) (* s r)) ?x592 (* 9 (* r00 s00)) ?x602 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x660 (* 18 (* r00 x)) ?x434 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x767 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x434 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1115 (= (+ s00 ?x336 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1115 (= ?x767 0) (= ?x1553 0) (= ?x444 0) (= ?x706 0) (not (= ?x2726 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1806 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1444 (+ 3 ?x213 s)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x1450 (+ ?x336 x)))
 (let ((?x1441 (+ 1 r)))
 (let ((?x2693 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x2495 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2200 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1168 (* 6 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x2114 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x2066 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1826 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1809 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1802 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1229 (* (- 6) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x1718 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1614 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1409 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1373 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1227 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1225 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1202 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x761 (* 6 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x1174 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1163 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1158 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1038 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1037 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x980 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x892 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x844 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x836 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x757 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x740 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x663 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x661 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x648 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x549 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x544 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x540 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1296 (* (- 6) (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x471 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1219 (+ (* 9 ?x471) (* (- 3) (* ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x1296 (* 9 ?x540) (* (- 4) ?x544) (* (- 6) ?x549) (* (- 18) ?x648) (* 18 ?x661) (* (- 2) ?x663) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) ?x740) (* 9 ?x757) (* 3 (* s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 3) (* s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 4 ?x836) (* 3 ?x844) (* (- 2) (* s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 12 ?x892) (* 2 ?x980) (* (- 3) ?x1037) (* 6 ?x1038) (* 18 (* r00 x00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 3 (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* 18 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 r00 s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 2) ?x1158) (* 6 ?x1163) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) ?x1174) ?x761 (* (- 2) (* ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 ?x1202) (* 9 ?x1225) (* (- 18) ?x1227) (* 9 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* 12 (* r00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) ?x1373) (* (- 9) ?x1409) (* 9 (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* r00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 6 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 2 (* s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 6) ?x1614) (* (- 9) ?x1718) ?x1229 (* (- 9) (* r00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 6) ?x1802) (* 6 ?x1809) (* (- 3) ?x1826) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* r00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 18 ?x2066) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) ?x2114) ?x1168 (* 4 (* s00 s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 2 ?x2200) (* 2 (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* 6 ?x2495) (* 6 (* r00 r00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 18 ?x2693))))
 (let ((?x1404 (* x00 x00)))
 (let ((?x1434 (* (- 108) ?x1404)))
 (let ((?x1242 (* s00 s00 s00)))
 (let ((?x1433 (* (- 16) ?x1242)))
 (let ((?x1114 (* s00 r00 r00 r00)))
 (let ((?x1429 (* (- 216) ?x1114)))
 (let ((?x940 (* r00 r00 r00 x00)))
 (let ((?x941 (* 432 ?x940)))
 (let ((?x863 (* s00 x00)))
 (let ((?x1187 (* 108 ?x863)))
 (let ((?x791 (* s00 s00 r00 r00)))
 (let ((?x792 (* 36 ?x791)))
 (let ((?x726 (* s00 s00 r00)))
 (let ((?x1070 (* 108 ?x726)))
 (let ((?x703 (* s00 r00 r00)))
 (let ((?x1058 (* 36 ?x703)))
 (let ((?x647 (* s00 s00)))
 (let ((?x1423 (* (- 51) ?x647)))
 (let ((?x621 (* s r00 r00)))
 (let ((?x922 (* (- 36) ?x621)))
 (let ((?x578 (* r00 x00)))
 (let ((?x1420 (* (- 108) ?x578)))
 (let ((?x571 (* s00 r00 x00)))
 (let ((?x1419 (* (- 216) ?x571)))
 (let ((?x482 (* s00 r00)))
 (let ((?x580 (* 54 ?x482)))
 (let ((?x1045 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1435 (+ ?x143 ?x1045 ?x580 ?x1419 ?x1420 (* (- 15) (* s s)) ?x922 ?x1423 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1058 ?x1070 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x792 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1187 (* 108 (* s x)) (* (- 108) (* x x)) ?x941 (* 12 (* s s s00)) ?x1429 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1433 (* 216 (* x x00)) ?x1434)))
 (let (($x1436 (= ?x1435 0)))
 (let ((?x935 (* r00 r00 x00)))
 (let ((?x948 (* (- 36) ?x935)))
 (let ((?x864 (* 6 ?x863)))
 (let ((?x754 (* (- 2) ?x726)))
 (let ((?x974 (* (- 15) ?x647)))
 (let ((?x601 (* s s)))
 (let ((?x627 (* 3 ?x601)))
 (let ((?x611 (* (- 54) ?x578)))
 (let ((?x624 (* 24 ?x482)))
 (let ((?x1137 (+ ?x143 ?x1045 (* (- 24) (* r s)) (* 24 (* r s00)) ?x624 ?x611 ?x627 (* 54 (* r x)) (* 36 (* r x r00)) ?x922 ?x974 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1058 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x754 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x864 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x948 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1142 (= ?x1137 0)))
 (let ((?x704 (* 6 ?x703)))
 (let ((?x660 (* (- 4) ?x647)))
 (let ((?x602 (* 2 ?x601)))
 (let ((?x592 (* (- 18) ?x578)))
 (let ((?x597 (* 9 ?x482)))
 (let ((?x434 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x801 (+ ?x47 ?x434 (* (- 9) (* r s)) (* 9 (* r s00)) ?x597 ?x592 ?x602 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x621) ?x660 (* 18 (* x r00)) ?x704 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x808 (= ?x801 0)))
 (let ((?x525 (* r00 r00 r00)))
 (let ((?x526 (* 12 ?x525)))
 (let ((?x560 (* (- 6) ?x482)))
 (let ((?x557 (* (- 6) x00)))
 (let ((?x556 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x561 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x556 ?x557 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x560 ?x526)))
 (let (($x562 (= ?x561 0)))
 (let ((?x357 (* r00 r00)))
 (let ((?x358 (* 3 ?x357)))
 (let ((?x387 (* (- 1) s00)))
 (let (($x390 (= (+ s ?x387 (* (- 3) (* r r)) ?x358) 0)))
 (let (($x1939 (and $x390 $x562 $x808 $x1142 $x1436 (not (= ?x1219 0)))))
 (let ((?x954 (+ 3 s ?x213)))
 (let ((?x981 (+ x ?x336)))
 (let ((?x2740 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x2778 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2621 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2618 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x2610 (* 6 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954))))
 (let ((?x2544 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2763 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2092 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x1827 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2442 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2300 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x1638 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x2072 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1976 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x1763 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x1740 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1539 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x563 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x534 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x481 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x448 (* 6 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954))))
 (let ((?x1438 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x1372 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1313 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x1252 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1188 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x1132 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1065 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x865 (* (- 6) (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954))))
 (let ((?x1021 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2108 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x972 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1545 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x342 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x2526 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1842 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x1209 (* (- 6) (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954))))
 (let ((?x2726 (+ (* (- 9) (* r00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) ?x1209 (* 9 (* r00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* 18 (* ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 2) ?x1842) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 3) (* ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* 4 ?x2526) (* 3 (* ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* 3 (* s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* 18 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 3) ?x342) (* 6 ?x1545) (* (- 12) ?x972) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 18) ?x2108) (* 18 ?x1021) (* 2 (* ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* 2 (* s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) ?x865 (* (- 2) (* s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* 3 ?x1065) (* (- 6) ?x1132) (* (- 2) ?x1188) (* (- 18) ?x1252) (* (- 6) ?x1313) (* (- 9) ?x1372) (* 2 ?x1438) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* 18 (* r00 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)) ?x448 (* (- 3) ?x481) (* 9 ?x534) (* 9 ?x563) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 18) ?x1539) (* 3 ?x1740) (* 18 ?x1763) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* 6 (* r00 r00 s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* 9 ?x1976) (* (- 3) (* s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* 6 ?x2072) (* (- 6) (* r00 r00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 6) ?x1638) (* 9 ?x2300) (* 4 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 6) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 9) ?x2442) (* 2 ?x1827) (* 9 (* r00 s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* 18 ?x2092) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 2) (* ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954 ?x954)) (* (- 6) ?x2763) (* (- 9) ?x2544) ?x2610 (* 6 ?x2618) (* 18 ?x2621) (* 9 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* (- 12) (* r00 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 9) ?x2778) (* (- 4) ?x2740))))
 (let ((?x690 (* 108 ?x1404)))
 (let ((?x137 (* 9 s00)))
 (let ((?x616 (* 51 ?x647)))
 (let ((?x411 (* 16 ?x1242)))
 (let ((?x1601 (* (- 108) ?x863)))
 (let ((?x1090 (* (- 432) ?x940)))
 (let ((?x1048 (* 108 ?x578)))
 (let ((?x706 (+ (* 216 (* r00 s00 x00)) ?x1048 (* (- 54) (* r00 s00)) (* 15 ?x601) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1090 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1601 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x411 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x616 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x690)))
 (let ((?x444 (+ (* (- 24) (* s r)) ?x611 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x627 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x864 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x948 ?x974 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1045 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1553 (+ (* (- 9) (* s r)) ?x592 (* 9 (* r00 s00)) ?x602 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x660 (* 18 (* r00 x)) ?x434 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x767 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x434 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x525))))
 (let (($x1270 (and (= (+ s00 ?x336 (* 3 (* r r)) (* (- 3) ?x357)) 0) (= ?x767 0) (= ?x1553 0) (= ?x444 0) (= ?x706 0) (not (= ?x2726 0)))))
 (rewrite (= $x1270 $x1939)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x333 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x325 (* 4 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x324 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x320 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x319 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x313 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x312 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x307 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x302 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x299 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x295 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x291 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x287 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x283 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x278 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x277 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x274 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x271 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x270 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x268 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x263 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x257 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x256 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x255 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x254 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x253 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x251 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x243 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x239 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x237 (* 12 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x235 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x233 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x228 (* 4 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x222 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x218 (- (* (- 9) ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x221 (+ ?x218 (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215) (* 18 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x226 (- (- ?x221 ?x222) (* 18 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x232 (+ (- ?x226 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215)) ?x228 (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215) (* 18 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 x00))))
 (let ((?x241 (- (- (+ (- ?x232 ?x233) ?x235) ?x237) (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x246 (+ (- ?x241 ?x239) ?x243 (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x249 (- ?x246 (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x250 (- ?x249 (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x267 (+ (- (- (- (- (- (+ ?x250 ?x251) ?x253) ?x254) ?x255) ?x256) ?x257) ?x263 (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 x00) (* 18 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x275 (- (+ (- ?x267 ?x268) ?x270 ?x271) (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x281 (- (+ (- ?x275 ?x274) ?x277 ?x278) (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x284 (+ ?x281 (* 6 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215) ?x283)))
 (let ((?x288 (+ (- ?x284 (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) ?x287)))
 (let ((?x292 (- ?x288 (* 6 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x294 (- (- ?x292 (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215)) ?x291)))
 (let ((?x297 (+ ?x294 ?x295 (* 4 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x300 (- ?x297 (* 6 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x304 (+ (- ?x300 ?x299) ?x302 (* 9 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x309 (+ (- ?x304 (* 18 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) ?x307 (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x315 (- (- ?x309 (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x322 (+ (- (- ?x315 ?x312) ?x313) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215) ?x319 ?x320 (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x326 (- ?x322 (* 12 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- (- ?x326 ?x324) ?x325) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1925 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x954 (+ 3 s ?x213)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x981 (+ x ?x336)))
 (let ((?x1441 (+ 1 r)))
 (let ((?x2740 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x2778 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2621 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2618 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x2610 (* 6 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954))))
 (let ((?x2544 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2763 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2092 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x1827 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2442 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2300 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x1638 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x2072 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1976 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x1763 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x1740 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1539 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x563 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x534 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x481 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x448 (* 6 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954))))
 (let ((?x1438 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x1372 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1313 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x1252 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1188 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x1132 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1065 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x865 (* (- 6) (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954))))
 (let ((?x1021 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x2108 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954)))
 (let ((?x972 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1545 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x342 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x2526 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)))
 (let ((?x1842 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)))
 (let ((?x1209 (* (- 6) (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954))))
 (let ((?x2726 (+ (* (- 9) (* r00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) ?x1209 (* 9 (* r00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* 18 (* ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 2) ?x1842) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 3) (* ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* 4 ?x2526) (* 3 (* ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* 3 (* s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* 18 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 3) ?x342) (* 6 ?x1545) (* (- 12) ?x972) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 18) ?x2108) (* 18 ?x1021) (* 2 (* ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* 2 (* s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) ?x865 (* (- 2) (* s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* 3 ?x1065) (* (- 6) ?x1132) (* (- 2) ?x1188) (* (- 18) ?x1252) (* (- 6) ?x1313) (* (- 9) ?x1372) (* 2 ?x1438) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* 18 (* r00 ?x1441 ?x1441 ?x981 ?x981 ?x981 ?x954 ?x954 ?x954)) ?x448 (* (- 3) ?x481) (* 9 ?x534) (* 9 ?x563) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 18) ?x1539) (* 3 ?x1740) (* 18 ?x1763) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* 6 (* r00 r00 s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* 9 ?x1976) (* (- 3) (* s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* 6 ?x2072) (* (- 6) (* r00 r00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 6) ?x1638) (* 9 ?x2300) (* 4 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 6) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 9) ?x2442) (* 2 ?x1827) (* 9 (* r00 s00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* 18 ?x2092) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954)) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 2) (* ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954 ?x954)) (* (- 6) ?x2763) (* (- 9) ?x2544) ?x2610 (* 6 ?x2618) (* 18 ?x2621) (* 9 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x981 ?x954 ?x954 ?x954 ?x954 ?x954)) (* (- 12) (* r00 ?x1441 ?x1441 ?x1441 ?x981 ?x981 ?x954 ?x954 ?x954 ?x954)) (* (- 9) ?x2778) (* (- 4) ?x2740))))
 (let ((?x1404 (* x00 x00)))
 (let ((?x690 (* 108 ?x1404)))
 (let ((?x137 (* 9 s00)))
 (let ((?x647 (* s00 s00)))
 (let ((?x616 (* 51 ?x647)))
 (let ((?x1242 (* s00 s00 s00)))
 (let ((?x411 (* 16 ?x1242)))
 (let ((?x863 (* s00 x00)))
 (let ((?x1601 (* (- 108) ?x863)))
 (let ((?x940 (* r00 r00 r00 x00)))
 (let ((?x1090 (* (- 432) ?x940)))
 (let ((?x578 (* r00 x00)))
 (let ((?x1048 (* 108 ?x578)))
 (let ((?x706 (+ (* 216 (* r00 s00 x00)) ?x1048 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1090 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1601 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x411 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x616 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x690)))
 (let ((?x143 (* 9 s)))
 (let ((?x1045 (* (- 9) s00)))
 (let ((?x974 (* (- 15) ?x647)))
 (let ((?x935 (* r00 r00 x00)))
 (let ((?x948 (* (- 36) ?x935)))
 (let ((?x864 (* 6 ?x863)))
 (let ((?x601 (* s s)))
 (let ((?x627 (* 3 ?x601)))
 (let ((?x611 (* (- 54) ?x578)))
 (let ((?x444 (+ (* (- 24) (* s r)) ?x611 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x627 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x864 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x948 ?x974 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1045 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x434 (* (- 3) s00)))
 (let ((?x660 (* (- 4) ?x647)))
 (let ((?x602 (* 2 ?x601)))
 (let ((?x592 (* (- 18) ?x578)))
 (let ((?x1553 (+ (* (- 9) (* s r)) ?x592 (* 9 (* r00 s00)) ?x602 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x660 (* 18 (* r00 x)) ?x434 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x767 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x434 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1115 (= (+ s00 ?x336 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1270 (and $x1115 (= ?x767 0) (= ?x1553 0) (= ?x444 0) (= ?x706 0) (not (= ?x2726 0)))))
 (let ((?x215 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x325 (* 4 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x324 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x320 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x319 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x313 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x312 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x307 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x302 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x299 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x295 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x291 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x287 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x283 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x278 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x277 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x274 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x271 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x270 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x268 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x263 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x257 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x256 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x255 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x254 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x253 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x251 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x243 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x239 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x237 (* 12 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x235 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x233 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x228 (* 4 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x222 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x218 (- (* (- 9) ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x221 (+ ?x218 (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215) (* 18 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x226 (- (- ?x221 ?x222) (* 18 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x232 (+ (- ?x226 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215)) ?x228 (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215) (* 18 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 x00))))
 (let ((?x241 (- (- (+ (- ?x232 ?x233) ?x235) ?x237) (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x246 (+ (- ?x241 ?x239) ?x243 (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x249 (- ?x246 (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x250 (- ?x249 (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x267 (+ (- (- (- (- (- (+ ?x250 ?x251) ?x253) ?x254) ?x255) ?x256) ?x257) ?x263 (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 x00) (* 18 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x275 (- (+ (- ?x267 ?x268) ?x270 ?x271) (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x281 (- (+ (- ?x275 ?x274) ?x277 ?x278) (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x284 (+ ?x281 (* 6 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215) ?x283)))
 (let ((?x288 (+ (- ?x284 (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) ?x287)))
 (let ((?x292 (- ?x288 (* 6 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x294 (- (- ?x292 (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215)) ?x291)))
 (let ((?x297 (+ ?x294 ?x295 (* 4 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x300 (- ?x297 (* 6 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x304 (+ (- ?x300 ?x299) ?x302 (* 9 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x309 (+ (- ?x304 (* 18 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) ?x307 (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x315 (- (- ?x309 (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x322 (+ (- (- ?x315 ?x312) ?x313) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215) ?x319 ?x320 (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x326 (- ?x322 (* 12 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x332 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- (- ?x326 ?x324) ?x325) 0))))))
 (rewrite (= $x332 $x1270)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x334 (asserted $x333)))
 (let ((@x2192 (mp (mp @x334 (quant-intro (proof-bind ?x1925) (= $x333 $x857)) $x857) (rewrite (= $x857 $x857)) $x857)))
 (let ((@x2700 (mp~ (mp @x2192 (quant-intro (proof-bind ?x1806) (= $x857 $x1814)) $x1814) (sk (~ $x1814 $x1361)) $x1361)))
 (let ((@x489 (mp @x2700 (rewrite (= $x1361 $x1933)) $x1933)))
 (let ((@x2351 (and-elim @x489 $x1224)))
 (let ((@x428 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1224) $x2291)) @x2351 $x2291)))
 (let (($x1733 (>= ?x1240 0)))
 (let ((@x1771 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1224) $x1733)) @x2351 $x1733)))
 (let (($x1397 (<= ?x2378 0)))
 (let ((@x1008 (and-elim @x489 $x2383)))
 (let ((@x2534 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2383) $x1397)) @x1008 $x1397)))
 (let (($x1126 (>= ?x2378 0)))
 (let ((@x1343 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2383) $x1126)) @x1008 $x1126)))
 (let (($x475 (<= ?x473 0)))
 (let ((@x1005 (and-elim @x489 $x472)))
 (let ((@x1565 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x472) $x475)) @x1005 $x475)))
 (let (($x477 (>= ?x473 0)))
 (let ((@x1871 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x472) $x477)) @x1005 $x477)))
 (let (($x1302 (<= ?x1605 0)))
 (let ((@x964 (and-elim @x489 $x1503)))
 (let ((@x1524 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1503) $x1302)) @x964 $x1302)))
 (let (($x474 (>= ?x1605 0)))
 (let ((@x2099 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1503) $x474)) @x964 $x474)))
 (let (($x478 (<= ?x2676 0)))
 (let ((@x1011 (and-elim @x489 $x2768)))
 (let ((@x1395 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2768) $x478)) @x1011 $x478)))
 (let (($x479 (>= ?x2676 0)))
 (let ((@x1570 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2768) $x479)) @x1011 $x479)))
 (let (($x2492 (not (<= ?x2670 0))))
 (let (($x768 (>= ?x2670 0)))
 (let ((@x1888 ((_ th-lemma arith) (hypothesis (not $x768)) @x1771 @x428 @x1570 @x1395 @x1871 @x1565 @x1570 @x1395 @x1871 @x1565 @x1871 @x1565 @x1570 @x1395 @x1771 @x428 @x2099 @x1524 @x1771 @x428 @x1871 @x1565 @x1343 @x2534 @x1771 @x428 false)))
 (let ((@x1568 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x786 $x2492 (not $x768))) (and-elim @x489 $x2052) (or $x2492 (not $x768)))))
 ((_ th-lemma arith) (unit-resolution @x1568 (lemma @x1888 $x768) $x2492) @x1771 @x428 @x1570 @x1395 @x1871 @x1565 @x1570 @x1395 @x1871 @x1565 @x1871 @x1565 @x1570 @x1395 @x1771 @x428 @x2099 @x1524 @x1771 @x428 @x1871 @x1565 @x1343 @x2534 @x1771 @x428 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        35
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             948
 :arith-nonlinear-bounds    28
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 161
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                23.77
 :memory                    19.45
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                1755006305
 :num-checks                1
 :propagations              12
 :rlimit-count              747782
 :time                      0.57
 :total-time                0.59)
