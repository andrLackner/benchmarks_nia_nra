unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(proof
(let ((?x657 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x292 (>= ?x657 (- 6))))
 (let (($x694 (= ?x657 (- 6))))
 (let ((?x209 (+ k!2 c!3)))
 (let ((?x595 (+ m!1 k!2)))
 (let ((?x498 (+ 1 n!0)))
 (let ((?x640 (* k!2 k!2)))
 (let ((?x303 (* (- 1) (* n!0 m!1 m!1 k!2 k!2))))
 (let ((?x576 (* (- 2) (* n!0 m!1 m!1 k!2 c!3))))
 (let ((?x584 (* (- 1) (* n!0 m!1 m!1 c!3 c!3))))
 (let ((?x575 (* (- 6) (* k!2 k!2 k!2))))
 (let ((?x328 (* (- 2) (* m!1 m!1 k!2 c!3))))
 (let ((?x284 (* m!1 m!1)))
 (let ((?x153 (* (- 1) (* m!1 m!1 k!2 k!2))))
 (let ((?x223 (* (- 1) (* m!1 m!1 c!3 c!3))))
 (let ((?x859 (+ (* (- 6) (* m!1 k!2 k!2)) (* (- 6) (* m!1 c!3 c!3)) ?x223 (* (- 12) (* m!1 k!2 c!3)) (* 2 (* n!0 k!2 k!2)) ?x153 (* (- 6) (* n!0 m!1 c!3 c!3)) ?x284 (* (- 6) (* n!0 m!1 k!2 k!2)) ?x328 (* (- 12) (* n!0 m!1 k!2 c!3)) ?x575 ?x584 ?x576 ?x303 ?x640 (* n!0 n!0 m!1 m!1) (* 2 (* m!1 k!2)) (* 4 (* n!0 m!1 k!2)) (* 2 (* n!0 m!1 m!1)) (* (- 1) (* n!0 m!1 k!2 k!2 k!2)) (* (- 2) (* n!0 m!1 k!2 k!2 c!3)) (* 2 (* n!0 n!0 m!1 k!2)) (* n!0 n!0 k!2 k!2) (* (- 6) (* n!0 k!2 c!3 c!3)) (* (- 1) (* m!1 k!2 c!3 c!3)) (* (- 6) (* n!0 k!2 k!2 k!2)) (* (- 1) (* m!1 k!2 k!2 k!2)) (* (- 12) (* k!2 k!2 c!3)) (* (- 6) (* k!2 c!3 c!3)) (* (- 1) (* n!0 m!1 k!2 c!3 c!3)) (* ?x498 ?x498 ?x498 ?x595 ?x595 ?x595 ?x209) (* (- 2) (* m!1 k!2 k!2 c!3)) (* (- 12) (* n!0 k!2 k!2 c!3)))))
 (let ((?x523 (* (- 36) ?x640)))
 (let ((?x674 (* (- 36) (* c!3 c!3))))
 (let ((?x541 (+ (* (- 12) (* m!1 k!2 k!2)) (* (- 1) (* ?x498 ?x595 ?x595 ?x595 ?x209 ?x209 ?x209)) (* (- 12) (* m!1 c!3 c!3)) ?x223 (* (- 24) (* m!1 k!2 c!3)) (* (- 36) (* n!0 k!2 k!2)) ?x153 (* (- 12) (* n!0 m!1 c!3 c!3)) (* (- 72) (* k!2 c!3)) (* ?x498 ?x498 ?x498 (+ 6 m!1) ?x209 ?x209) (* (- 12) (* n!0 m!1 k!2 k!2)) ?x328 (* (- 24) (* n!0 m!1 k!2 c!3)) (* (- 72) (* n!0 k!2 c!3)) ?x584 ?x576 (* (- 36) (* n!0 c!3 c!3)) ?x303 ?x674 ?x523)))
 (let ((?x767 (* (+ (- 6) (* (- 6) n!0) m!1) ?x541 ?x859)))
 (let (($x257 (= ?x767 0)))
 (let (($x768 (not $x257)))
 (let (($x707 (= (+ (* 3 (* n!0 n!0)) (* 3 n!0) (* (- 1) k!2)) (- 1))))
 (let (($x658 (= (+ (* n!0 k!2) (* 2 n!0) (* (- 1) k!2) (* (- 3) c!3)) (- 1))))
 (let ((?x647 (* 18 c!3)))
 (let ((?x649 (* 5 k!2)))
 (let ((?x339 (* (- 9) n!0)))
 (let ((?x635 (* (- 1) ?x640)))
 (let (($x266 (and $x694 (= (+ (* 9 (* n!0 c!3)) ?x635 ?x339 ?x649 ?x647) 4) $x658 $x707 $x768)))
 (let ((?x504 (* (- 1) (* k!2 k!2 m!1 m!1))))
 (let ((?x666 (* (- 2) (* c!3 k!2 m!1 m!1))))
 (let ((?x143 (* (- 1) (* k!2 k!2 m!1 m!1 n!0))))
 (let ((?x195 (* (- 2) (* c!3 k!2 m!1 m!1 n!0))))
 (let ((?x342 (* (- 1) (* c!3 c!3 m!1 m!1 n!0))))
 (let ((?x360 (+ c!3 k!2)))
 (let ((?x365 (+ k!2 m!1)))
 (let ((?x366 (* (- 1) (* c!3 c!3 m!1 m!1))))
 (let ((?x637 (+ ?x640 (* (- 6) (* k!2 k!2 m!1 n!0)) (* (- 12) (* c!3 k!2 m!1)) (* (- 6) (* k!2 k!2 m!1)) (* (- 6) (* c!3 c!3 m!1 n!0)) ?x366 (* (- 6) (* c!3 c!3 m!1)) (* (- 12) (* c!3 k!2 k!2 n!0)) (* (- 2) (* c!3 k!2 k!2 m!1)) (* ?x498 ?x498 ?x498 ?x365 ?x365 ?x365 ?x360) ?x342 ?x195 ?x143 (* (- 1) (* c!3 c!3 k!2 m!1 n!0)) (* (- 2) (* c!3 k!2 k!2 m!1 n!0)) (* (- 1) (* k!2 k!2 k!2 m!1 n!0)) ?x666 (* 2 (* m!1 m!1 n!0)) (* (- 12) (* c!3 k!2 m!1 n!0)) (* 4 (* k!2 m!1 n!0)) (* 2 (* k!2 k!2 n!0)) ?x284 (* 2 (* k!2 m!1)) ?x504 (* m!1 m!1 n!0 n!0) (* 2 (* k!2 m!1 n!0 n!0)) (* k!2 k!2 n!0 n!0) ?x575 (* (- 6) (* c!3 c!3 k!2 n!0)) (* (- 1) (* c!3 c!3 k!2 m!1)) (* (- 6) (* k!2 k!2 k!2 n!0)) (* (- 1) (* k!2 k!2 k!2 m!1)) (* (- 12) (* c!3 k!2 k!2)) (* (- 6) (* c!3 c!3 k!2)))))
 (let ((?x486 (+ ?x523 (* ?x498 ?x498 ?x498 (+ 6 m!1) ?x360 ?x360) (* (- 12) (* k!2 k!2 m!1 n!0)) (* (- 24) (* c!3 k!2 m!1)) (* (- 72) (* c!3 k!2 n!0)) (* (- 1) (* ?x498 ?x365 ?x365 ?x365 ?x360 ?x360 ?x360)) (* (- 12) (* k!2 k!2 m!1)) (* (- 12) (* c!3 c!3 m!1 n!0)) ?x366 (* (- 36) (* c!3 c!3 n!0)) (* (- 12) (* c!3 c!3 m!1)) ?x342 ?x195 ?x143 (* (- 72) (* c!3 k!2)) ?x666 (* (- 24) (* c!3 k!2 m!1 n!0)) (* (- 36) (* k!2 k!2 n!0)) ?x674 ?x504)))
 (let (($x311 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x148 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x647 ?x649 ?x339 ?x635 (* 9 (* c!3 n!0))) 4) $x311 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= (* (+ (- 6) m!1 (* (- 6) n!0)) ?x486 ?x637) 0)))))
 (let (($x928 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x573 (* k k n n)))
 (let ((?x592 (* 2 (* k m n n))))
 (let ((?x570 (* m m n n)))
 (let ((?x499 (* (- 1) (* k k m m))))
 (let ((?x494 (* 2 (* k m))))
 (let ((?x552 (* m m)))
 (let ((?x549 (* k k n)))
 (let ((?x589 (* 2 ?x549)))
 (let ((?x590 (* 4 (* k m n))))
 (let ((?x591 (* 2 (* m m n))))
 (let ((?x643 (* (- 2) (* c k m m))))
 (let ((?x480 (* (- 1) (* k k k m n))))
 (let ((?x474 (* (- 1) (* c c k m n))))
 (let ((?x436 (* (- 1) (* k k m m n))))
 (let ((?x433 (* c k m m n)))
 (let ((?x650 (* (- 2) ?x433)))
 (let ((?x430 (* (- 1) (* c c m m n))))
 (let ((?x73 (+ c k)))
 (let ((?x76 (+ k m)))
 (let ((?x321 (+ 1 n)))
 (let ((?x371 (* ?x321 ?x321 ?x321 ?x76 ?x76 ?x76 ?x73)))
 (let ((?x598 (* (- 1) (* c c m m))))
 (let ((?x49 (* k k)))
 (let ((?x822 (+ ?x49 (* (- 6) (* k k m n)) (* (- 12) (* c k m)) (* (- 6) (* k k m)) (* (- 6) (* c c m n)) ?x598 (* (- 6) (* c c m)) (* (- 12) (* c k k n)) (* (- 2) (* c k k m)) ?x371 ?x430 ?x650 ?x436 ?x474 (* (- 2) (* c k k m n)) ?x480 ?x643 ?x591 (* (- 12) (* c k m n)) ?x590 ?x589 ?x552 ?x494 ?x499 ?x570 ?x592 ?x573 (* (- 6) (* k k k)) (* (- 6) (* c c k n)) (* (- 1) (* c c k m)) (* (- 6) (* k k k n)) (* (- 1) (* k k k m)) (* (- 12) (* c k k)) (* (- 6) (* c c k)))))
 (let ((?x104 (* (- 1) (* ?x321 ?x76 ?x76 ?x76 ?x73 ?x73 ?x73))))
 (let ((?x367 (+ 6 m)))
 (let ((?x127 (* ?x321 ?x321 ?x321 ?x367 ?x73 ?x73)))
 (let ((?x316 (+ (* (- 36) ?x49) ?x127 (* (- 12) (* k k m n)) (* (- 24) (* c k m)) (* (- 72) (* c k n)) ?x104 (* (- 12) (* k k m)) (* (- 12) (* c c m n)) ?x598 (* (- 36) (* c c n)) (* (- 12) (* c c m)) ?x430 ?x650 ?x436 (* (- 72) (* c k)) ?x643 (* (- 24) (* c k m n)) (* (- 36) ?x549) (* (- 36) (* c c)) ?x499)))
 (let ((?x115 (* (- 6) n)))
 (let ((?x121 (+ (- 6) m ?x115)))
 (let (($x306 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x268 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x220 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) ?x49) (* 9 (* c n)))))
 (let (($x216 (= ?x220 4)))
 (let (($x132 (= (+ m ?x115) 6)))
 (and $x132 $x216 $x268 $x306 (not (= (* ?x121 ?x316 ?x822) 0)))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x514 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x73 (+ c k)))
 (let ((?x76 (+ k m)))
 (let ((?x321 (+ 1 n)))
 (let ((?x371 (* ?x321 ?x321 ?x321 ?x76 ?x76 ?x76 ?x73)))
 (let ((?x508 (+ (* (- 1) (* ?x321 (+ 6 m) ?x76 ?x73 ?x73)) ?x371 (* ?x321 ?x321 ?x76 ?x76))))
 (let ((?x367 (+ 6 m)))
 (let ((?x127 (* ?x321 ?x321 ?x321 ?x367 ?x73 ?x73)))
 (let ((?x104 (* (- 1) (* ?x321 ?x76 ?x76 ?x76 ?x73 ?x73 ?x73))))
 (let ((?x115 (* (- 6) n)))
 (let ((?x121 (+ (- 6) m ?x115)))
 (let (($x507 (= (* ?x121 (+ (* (- 1) (* ?x321 ?x367 ?x367 ?x73 ?x73)) ?x104 ?x127) ?x508) 0)))
 (let (($x236 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x485 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x172 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x132 (= (+ m ?x115) 6)))
 (and $x132 (= ?x172 (- 4)) $x485 $x236 (not $x507))))))))))))))))))) :qid k!34))
 ))
 (let ((?x711 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x573 (* k k n n)))
 (let ((?x592 (* 2 (* k m n n))))
 (let ((?x570 (* m m n n)))
 (let ((?x499 (* (- 1) (* k k m m))))
 (let ((?x494 (* 2 (* k m))))
 (let ((?x552 (* m m)))
 (let ((?x549 (* k k n)))
 (let ((?x589 (* 2 ?x549)))
 (let ((?x590 (* 4 (* k m n))))
 (let ((?x591 (* 2 (* m m n))))
 (let ((?x643 (* (- 2) (* c k m m))))
 (let ((?x480 (* (- 1) (* k k k m n))))
 (let ((?x474 (* (- 1) (* c c k m n))))
 (let ((?x436 (* (- 1) (* k k m m n))))
 (let ((?x433 (* c k m m n)))
 (let ((?x650 (* (- 2) ?x433)))
 (let ((?x430 (* (- 1) (* c c m m n))))
 (let ((?x73 (+ c k)))
 (let ((?x76 (+ k m)))
 (let ((?x321 (+ 1 n)))
 (let ((?x371 (* ?x321 ?x321 ?x321 ?x76 ?x76 ?x76 ?x73)))
 (let ((?x598 (* (- 1) (* c c m m))))
 (let ((?x49 (* k k)))
 (let ((?x822 (+ ?x49 (* (- 6) (* k k m n)) (* (- 12) (* c k m)) (* (- 6) (* k k m)) (* (- 6) (* c c m n)) ?x598 (* (- 6) (* c c m)) (* (- 12) (* c k k n)) (* (- 2) (* c k k m)) ?x371 ?x430 ?x650 ?x436 ?x474 (* (- 2) (* c k k m n)) ?x480 ?x643 ?x591 (* (- 12) (* c k m n)) ?x590 ?x589 ?x552 ?x494 ?x499 ?x570 ?x592 ?x573 (* (- 6) (* k k k)) (* (- 6) (* c c k n)) (* (- 1) (* c c k m)) (* (- 6) (* k k k n)) (* (- 1) (* k k k m)) (* (- 12) (* c k k)) (* (- 6) (* c c k)))))
 (let ((?x104 (* (- 1) (* ?x321 ?x76 ?x76 ?x76 ?x73 ?x73 ?x73))))
 (let ((?x367 (+ 6 m)))
 (let ((?x127 (* ?x321 ?x321 ?x321 ?x367 ?x73 ?x73)))
 (let ((?x316 (+ (* (- 36) ?x49) ?x127 (* (- 12) (* k k m n)) (* (- 24) (* c k m)) (* (- 72) (* c k n)) ?x104 (* (- 12) (* k k m)) (* (- 12) (* c c m n)) ?x598 (* (- 36) (* c c n)) (* (- 12) (* c c m)) ?x430 ?x650 ?x436 (* (- 72) (* c k)) ?x643 (* (- 24) (* c k m n)) (* (- 36) ?x549) (* (- 36) (* c c)) ?x499)))
 (let ((?x115 (* (- 6) n)))
 (let ((?x121 (+ (- 6) m ?x115)))
 (let (($x306 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x268 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x220 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) ?x49) (* 9 (* c n)))))
 (let (($x216 (= ?x220 4)))
 (let (($x132 (= (+ m ?x115) 6)))
 (let (($x660 (and $x132 $x216 $x268 $x306 (not (= (* ?x121 ?x316 ?x822) 0)))))
 (let ((?x508 (+ (* (- 1) (* ?x321 ?x367 ?x76 ?x73 ?x73)) ?x371 (* ?x321 ?x321 ?x76 ?x76))))
 (let (($x507 (= (* ?x121 (+ (* (- 1) (* ?x321 ?x367 ?x367 ?x73 ?x73)) ?x104 ?x127) ?x508) 0)))
 (let (($x236 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x485 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x172 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x212 (and $x132 (= ?x172 (- 4)) $x485 $x236 (not $x507))))
 (rewrite (= $x212 $x660))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x90 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ n 1)))
 (let ((?x76 (+ k m)))
 (let ((?x73 (+ c k)))
 (let ((?x84 (+ (* (- 1) ?x73 ?x73 ?x76 (+ m 6) ?x69) (* ?x73 ?x76 ?x76 ?x76 ?x69 ?x69 ?x69) (* ?x76 ?x76 ?x69 ?x69))))
 (let ((?x78 (- (* (- 1) ?x73 ?x73 (+ m 6) (+ m 6) ?x69) (* ?x73 ?x73 ?x73 ?x76 ?x76 ?x76 ?x69))))
 (let ((?x85 (* (- (+ (* (- 6) 1) m 6) (* 6 ?x69)) (+ ?x78 (* ?x73 ?x73 (+ m 6) ?x69 ?x69 ?x69)) ?x84)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x85 0))))))))))))))))) :qid k!34))
 ))
 (let ((?x205 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x73 (+ c k)))
 (let ((?x76 (+ k m)))
 (let ((?x321 (+ 1 n)))
 (let ((?x371 (* ?x321 ?x321 ?x321 ?x76 ?x76 ?x76 ?x73)))
 (let ((?x508 (+ (* (- 1) (* ?x321 (+ 6 m) ?x76 ?x73 ?x73)) ?x371 (* ?x321 ?x321 ?x76 ?x76))))
 (let ((?x367 (+ 6 m)))
 (let ((?x127 (* ?x321 ?x321 ?x321 ?x367 ?x73 ?x73)))
 (let ((?x104 (* (- 1) (* ?x321 ?x76 ?x76 ?x76 ?x73 ?x73 ?x73))))
 (let ((?x115 (* (- 6) n)))
 (let ((?x121 (+ (- 6) m ?x115)))
 (let (($x507 (= (* ?x121 (+ (* (- 1) (* ?x321 ?x367 ?x367 ?x73 ?x73)) ?x104 ?x127) ?x508) 0)))
 (let (($x236 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x485 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x172 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x132 (= (+ m ?x115) 6)))
 (let (($x212 (and $x132 (= ?x172 (- 4)) $x485 $x236 (not $x507))))
 (let ((?x69 (+ n 1)))
 (let ((?x84 (+ (* (- 1) ?x73 ?x73 ?x76 (+ m 6) ?x69) (* ?x73 ?x76 ?x76 ?x76 ?x69 ?x69 ?x69) (* ?x76 ?x76 ?x69 ?x69))))
 (let ((?x78 (- (* (- 1) ?x73 ?x73 (+ m 6) (+ m 6) ?x69) (* ?x73 ?x73 ?x73 ?x76 ?x76 ?x76 ?x69))))
 (let ((?x85 (* (- (+ (* (- 6) 1) m 6) (* 6 ?x69)) (+ ?x78 (* ?x73 ?x73 (+ m 6) ?x69 ?x69 ?x69)) ?x84)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x89 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x85 0))))))
 (rewrite (= $x89 $x212)))))))))))))))))))))))))))))))
 ))
 (let ((@x91 (asserted $x90)))
 (let ((@x281 (mp (mp @x91 (quant-intro (proof-bind ?x205) (= $x90 $x514)) $x514) (rewrite (= $x514 $x514)) $x514)))
 (let ((@x361 (mp~ (mp @x281 (quant-intro (proof-bind ?x711) (= $x514 $x928)) $x928) (sk (~ $x928 $x148)) $x148)))
 (let ((@x372 (mp @x361 (rewrite (= $x148 $x266)) $x266)))
 (let ((@x183 (and-elim @x372 $x694)))
 (let ((@x684 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x694) $x292)) @x183 $x292)))
 (let (($x251 (<= ?x657 (- 6))))
 (let ((@x687 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x694) $x251)) @x183 $x251)))
 (let (($x210 (not (<= ?x767 0))))
 (let (($x302 (>= ?x767 0)))
 (let ((@x596 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x257 $x210 (not $x302))) (and-elim @x372 $x768) (or $x210 (not $x302)))))
 (let ((@x242 (unit-resolution @x596 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x302)) @x687 @x684 false) $x302) $x210)))
 ((_ th-lemma arith farkas 1 1 1) @x242 @x687 @x684 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        45
 :arith-assert-upper        42
 :arith-branch-var          1
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-fixed-eqs           1
 :arith-gcd-tests           6
 :arith-ineq-splits         1
 :arith-max-min             423
 :arith-nonlinear-bounds    94
 :arith-num-rows            11
 :arith-patches             2
 :arith-pivots              7
 :arith-pseudo-nonlinear    4
 :arith-row-summations      13
 :arith-tableau-max-columns 75
 :arith-tableau-max-rows    11
 :conflicts                 4
 :decisions                 9
 :del-clause                17
 :final-checks              6
 :max-memory                19.68
 :memory                    19.17
 :mk-bool-var               20
 :mk-clause                 17
 :num-allocs                542986
 :num-checks                1
 :propagations              10
 :rlimit-count              5544
 :time                      0.01
 :total-time                0.02)
