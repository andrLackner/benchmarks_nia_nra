unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x341 (* 18 c!3)))
 (let ((?x1015 (* (- 9) n!0)))
 (let ((?x1108 (* (- 1) (* k!2 k!2))))
 (let ((?x235 (* 5 k!2)))
 (let ((?x1214 (+ ?x235 ?x1108 ?x1015 ?x341 (* 9 (* n!0 c!3)))))
 (let (($x1416 (<= ?x1214 4)))
 (let (($x659 (= ?x1214 4)))
 (let ((?x1212 (+ k!2 c!3)))
 (let ((?x965 (+ k!2 m!1)))
 (let ((?x1802 (+ 6 m!1)))
 (let ((?x1087 (+ 1 n!0)))
 (let ((?x1739 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x1212 ?x1212 ?x1212)))
 (let ((?x586 (* 9 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212))))
 (let ((?x1484 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212)))
 (let ((?x1460 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212)))
 (let ((?x1607 (* (- 9) (* ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212))))
 (let ((?x1344 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x1212 ?x1212 ?x1212)))
 (let ((?x1342 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212)))
 (let ((?x1752 (* (- 18) (* ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212))))
 (let ((?x1225 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x1212 ?x1212 ?x1212 ?x1212)))
 (let ((?x1165 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212)))
 (let ((?x1024 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212)))
 (let ((?x762 (* (- 5) (* ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212))))
 (let ((?x1016 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212)))
 (let ((?x951 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212)))
 (let ((?x909 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212)))
 (let ((?x247 (* (- 9) (* ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212))))
 (let ((?x808 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212)))
 (let ((?x231 (* (- 5) (* ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212))))
 (let ((?x804 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212)))
 (let ((?x788 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212)))
 (let ((?x749 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212)))
 (let ((?x720 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x1212 ?x1212 ?x1212)))
 (let ((?x665 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212)))
 (let ((?x911 (* (- 9) (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x1212 ?x1212))))
 (let ((?x1427 (* 9 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x1212 ?x1212 ?x1212))))
 (let ((?x553 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x1212 ?x1212 ?x1212 ?x1212)))
 (let ((?x546 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212)))
 (let ((?x383 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212)))
 (let ((?x239 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212)))
 (let ((?x210 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212)))
 (let ((?x623 (* (- 18) (* ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212))))
 (let ((?x188 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212)))
 (let ((?x184 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212)))
 (let ((?x1140 (+ (* ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212) (* (- 1) ?x184) ?x188 ?x623 (* (- 1) ?x210) (* 18 ?x239) (* 9 (* ?x1087 ?x1087 ?x1087 ?x965 ?x1212 ?x1212 ?x1212)) (* ?x1087 ?x1087 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212) (* 4 (* ?x1087 ?x1087 ?x965 ?x1212 ?x1212 ?x1212)) (* (- 5) (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x1212)) (* 5 ?x383) (* ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x1212) (* ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212) (* (- 4) ?x546) (* (- 18) ?x553) ?x1427 (* (- 5) (* ?x1087 ?x1087 ?x965 ?x965 ?x1212 ?x1212 ?x1212)) (* (- 5) (* ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x1212)) ?x911 (* 9 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x1212)) (* (- 4) ?x665) (* 4 ?x720) (* (- 4) ?x749) (* 9 ?x788) (* 5 ?x804) ?x231 (* 4 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x1212)) (* 9 ?x808) ?x247 (* 4 (* ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x1212 ?x1212 ?x1212)) (* 4 (* ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x1212)) (* 5 ?x909) (* 9 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x1212)) (* 18 ?x951) (* (- 9) ?x1016) ?x762 (* 9 ?x1024) (* (- 9) (* ?x1087 ?x1087 ?x1087 ?x965 ?x1212 ?x1212 ?x1212 ?x1212)) (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x1212) (* (- 9) ?x1165) (* (- 18) (* ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x1212 ?x1212)) (* (- 9) ?x1225) ?x1752 (* (- 1) ?x1342) (* 9 ?x1344) ?x1607 (* 4 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212)) (* 18 ?x1460) (* (- 9) (* ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x1212 ?x1212)) (* (- 9) ?x1484) (* (- 18) (* ?x1087 ?x1087 ?x965 ?x1212 ?x1212 ?x1212 ?x1212)) ?x586 (* (- 18) (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x1212 ?x1212)) (* (- 5) ?x1739))))
 (let (($x1147 (= ?x1140 0)))
 (let (($x963 (not $x1147)))
 (let ((?x253 (* (- 3) n!0)))
 (let ((?x722 (* (- 3) (* n!0 n!0))))
 (let ((?x331 (+ k!2 ?x722 ?x253)))
 (let (($x176 (= ?x331 1)))
 (let ((?x1094 (* 3 c!3)))
 (let ((?x1738 (* (- 2) n!0)))
 (let ((?x1009 (* (- 1) (* k!2 n!0))))
 (let ((?x669 (+ k!2 ?x1009 ?x1738 ?x1094)))
 (let (($x1573 (= ?x669 1)))
 (let ((?x409 (+ m!1 (* (- 6) n!0))))
 (let (($x1008 (= ?x409 6)))
 (let (($x1106 (and $x1008 $x659 $x1573 $x176 $x963)))
 (let ((?x1374 (* (- 9) (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 (+ c!3 k!2)))))
 (let ((?x258 (+ c!3 k!2)))
 (let ((?x1043 (* 9 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258))))
 (let ((?x458 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258)))
 (let ((?x1075 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258)))
 (let ((?x890 (* (- 1) (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x258))))
 (let ((?x1201 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258)))
 (let ((?x715 (* (- 9) (* ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x258 ?x258 ?x258))))
 (let ((?x980 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258)))
 (let ((?x662 (* (- 9) (* ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x258 ?x258 ?x258 ?x258 ?x258))))
 (let ((?x570 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258 ?x258)))
 (let ((?x418 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x258 ?x258 ?x258 ?x258)))
 (let ((?x1486 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x258 ?x258 ?x258)))
 (let ((?x915 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x258 ?x258 ?x258)))
 (let ((?x1492 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x258 ?x258 ?x258)))
 (let ((?x1584 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258 ?x258)))
 (let ((?x333 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258)))
 (let ((?x406 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258)))
 (let ((?x256 (* 18 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x258 ?x258 ?x258 ?x258 ?x258 ?x258))))
 (let ((?x1667 (* 5 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258 ?x258))))
 (let ((?x1111 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x258 ?x258 ?x258 ?x258)))
 (let ((?x252 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258 ?x258)))
 (let ((?x1754 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258 ?x258)))
 (let ((?x335 (* 9 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x258 ?x258 ?x258 ?x258 ?x258 ?x258))))
 (let ((?x1055 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258)))
 (let ((?x1425 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258 ?x258 ?x258)))
 (let ((?x1615 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258)))
 (let ((?x685 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258 ?x258 ?x258)))
 (let ((?x250 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258)))
 (let ((?x1582 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258)))
 (let ((?x379 (* (- 1) (* ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258))))
 (let ((?x1216 (* ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258)))
 (let ((?x260 (* (- 1) (* ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258 ?x258))))
 (let ((?x1488 (* 18 (* ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258))))
 (let ((?x391 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258 ?x258)))
 (let ((?x571 (* 5 (* ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258))))
 (let ((?x1580 (* 9 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x258 ?x258))))
 (let ((?x1031 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258)))
 (let ((?x1710 (+ (* 18 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x258 ?x258)) (* 9 ?x1031) ?x1580 ?x571 (* 5 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x258)) (* (- 9) ?x391) ?x1488 ?x260 (* 9 (* ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x258 ?x258)) (* 9 ?x1216) ?x379 (* (- 18) ?x1582) (* (- 1) (* ?x1087 ?x1087 ?x965 ?x965 ?x965 ?x258 ?x258 ?x258)) (* 4 ?x250) (* 18 (* ?x1087 ?x1087 ?x965 ?x258 ?x258 ?x258 ?x258)) (* (- 18) ?x685) ?x1615 (* (- 4) (* ?x1087 ?x1087 ?x965 ?x258 ?x258 ?x258)) (* (- 9) ?x1425) (* (- 5) ?x1055) ?x335 ?x1754 (* (- 1) (* ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x965 ?x258)) (* 4 ?x252) (* (- 4) (* ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x258)) (* 9 ?x1111) (* 9 (* ?x1087 ?x1087 ?x1087 ?x965 ?x258 ?x258 ?x258 ?x258)) ?x1667 ?x256 (* 4 ?x406) ?x333 (* (- 9) (* ?x1087 ?x1087 ?x1087 ?x965 ?x258 ?x258 ?x258)) (* (- 5) ?x1584) (* (- 4) ?x1492) (* 5 (* ?x1087 ?x1087 ?x965 ?x965 ?x258 ?x258 ?x258)) (* (- 9) ?x915) (* 5 ?x1486) (* 18 ?x418) (* 9 ?x570) (* (- 9) (* ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x258)) ?x662 (* (- 1) ?x980) ?x715 (* 5 (* ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x965 ?x258)) (* (- 4) (* ?x1087 ?x1802 ?x1802 ?x1802 ?x1802 ?x965 ?x965 ?x258 ?x258 ?x258)) (* (- 5) ?x1201) ?x890 (* 18 (* ?x1087 ?x1802 ?x1802 ?x965 ?x965 ?x258 ?x258)) (* (- 4) (* ?x1087 ?x1087 ?x1802 ?x1802 ?x965 ?x258 ?x258 ?x258 ?x258 ?x258)) (* (- 18) ?x1075) (* (- 9) ?x458) (* (- 4) (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1802 ?x1802 ?x1802 ?x965 ?x258)) ?x1043 ?x1374)))
 (let (($x723 (and $x1008 (= (+ ?x341 ?x235 ?x1015 ?x1108 (* 9 (* c!3 n!0))) 4) (= (+ ?x1094 k!2 ?x1738 ?x1009) 1) (= (+ k!2 ?x253 ?x722) 1) (not (= ?x1710 0)))))
 (let (($x408 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x382 (+ 6 m)))
 (let ((?x385 (+ 1 n)))
 (let ((?x1815 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)))
 (let ((?x1797 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1775 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1767 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1695 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1687 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1572 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1564 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1553 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1459 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1439 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1406 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1251 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1241 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1194 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1189 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1183 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1088 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x999 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x948 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x898 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x892 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x849 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x759 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x701 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x682 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x624 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x579 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x576 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x541 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x428 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x401 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x307 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x276 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)))
 (let ((?x240 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x686 (+ (* 18 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)) (* 9 ?x240) (* 9 ?x276) (* 5 ?x307) (* 5 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 9) ?x400) (* 18 ?x401) (* (- 1) ?x428) (* 9 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 9 ?x541) (* (- 1) ?x576) (* (- 18) ?x579) (* (- 1) (* ?x385 ?x385 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 4 ?x624) (* 18 (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 18) ?x682) ?x701 (* (- 4) (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 9) ?x759) (* (- 5) ?x849) (* 9 ?x892) ?x898 (* (- 1) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68)) (* 4 ?x948) (* (- 4) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* 9 ?x999) (* 9 (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 5 ?x1088) (* 18 ?x1183) (* 4 ?x1189) ?x1194 (* (- 9) (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 5) ?x1241) (* (- 4) ?x1251) (* 5 (* ?x385 ?x385 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) ?x1400) (* 5 ?x1406) (* 18 ?x1439) (* 9 ?x1459) (* (- 9) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 9) ?x1553) (* (- 1) ?x1564) (* (- 9) ?x1572) (* 5 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)) (* (- 4) (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 5) ?x1687) (* (- 1) ?x1695) (* 18 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)) (* (- 18) ?x1767) (* (- 9) ?x1775) (* (- 4) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)) (* 9 ?x1797) (* (- 9) ?x1815))))
 (let (($x374 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x336 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x287 (* (- 1) ?x49)))
 (let ((?x286 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x284 (= (+ ?x40 ?x44 ?x286 ?x287 (* 9 (* c n))) 4)))
 (let (($x200 (= (+ m (* (- 6) n)) 6)))
 (and $x200 $x284 $x336 $x374 (not (= ?x686 0)))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1136 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x382 (+ 6 m)))
 (let ((?x385 (+ 1 n)))
 (let ((?x1815 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)))
 (let ((?x1775 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1767 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1553 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1564 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1572 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1695 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1687 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1459 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x948 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x701 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1797 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1241 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1251 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x999 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1439 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1406 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x898 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1088 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1194 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1183 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x892 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x428 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x401 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x849 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x605 (* ?x385 ?x385 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x682 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x759 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x579 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x276 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)))
 (let ((?x307 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x240 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x943 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x541 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x624 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1189 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x576 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1824 (+ ?x576 (* 9 (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 4) ?x1189) (* (- 4) ?x624) (* (- 9) ?x541) ?x943 (* (- 9) ?x240) (* (- 9) (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) ?x307) (* (- 18) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)) (* (- 9) ?x276) (* 4 (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* 18 ?x579) (* 9 ?x400) (* 9 ?x759) (* 18 ?x682) ?x605 (* 5 ?x849) (* (- 18) ?x401) ?x428 (* (- 9) ?x892) (* (- 18) ?x1183) (* (- 1) ?x1194) (* (- 5) ?x1088) (* (- 9) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x898) (* 9 ?x1400) (* (- 5) ?x1406) (* (- 18) ?x1439) (* (- 9) ?x999) (* 4 ?x1251) (* 5 ?x1241) (* (- 9) ?x1797) (* (- 1) ?x701) (* 4 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 4) ?x948) (* (- 9) ?x1459) (* 4 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 ?x1687) ?x1695 (* (- 18) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)) (* 9 ?x1572) ?x1564 (* 9 ?x1553) (* 4 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)) (* 18 ?x1767) (* 9 ?x1775) (* 4 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)) (* 9 ?x1815))))
 (let (($x1038 (not (= ?x1824 0))))
 (let (($x807 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x937 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x287 (* (- 1) ?x49)))
 (let ((?x286 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x200 (= (+ m (* (- 6) n)) 6)))
 (and $x200 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x286 ?x287) 4) $x937 $x807 $x1038)))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x799 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x382 (+ 6 m)))
 (let ((?x385 (+ 1 n)))
 (let ((?x1815 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)))
 (let ((?x1797 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1775 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1767 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1695 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1687 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1572 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1564 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1553 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1459 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1439 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1406 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1251 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1241 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1194 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1189 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1183 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1088 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x999 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x948 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x898 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x892 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x849 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x759 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x701 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x682 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x624 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x579 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x576 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x541 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x428 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x401 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x307 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x276 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)))
 (let ((?x240 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x686 (+ (* 18 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)) (* 9 ?x240) (* 9 ?x276) (* 5 ?x307) (* 5 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 9) ?x400) (* 18 ?x401) (* (- 1) ?x428) (* 9 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 9 ?x541) (* (- 1) ?x576) (* (- 18) ?x579) (* (- 1) (* ?x385 ?x385 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 4 ?x624) (* 18 (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 18) ?x682) ?x701 (* (- 4) (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 9) ?x759) (* (- 5) ?x849) (* 9 ?x892) ?x898 (* (- 1) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68)) (* 4 ?x948) (* (- 4) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* 9 ?x999) (* 9 (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 5 ?x1088) (* 18 ?x1183) (* 4 ?x1189) ?x1194 (* (- 9) (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 5) ?x1241) (* (- 4) ?x1251) (* 5 (* ?x385 ?x385 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) ?x1400) (* 5 ?x1406) (* 18 ?x1439) (* 9 ?x1459) (* (- 9) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 9) ?x1553) (* (- 1) ?x1564) (* (- 9) ?x1572) (* 5 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)) (* (- 4) (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 5) ?x1687) (* (- 1) ?x1695) (* 18 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)) (* (- 18) ?x1767) (* (- 9) ?x1775) (* (- 4) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)) (* 9 ?x1797) (* (- 9) ?x1815))))
 (let (($x374 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x336 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x287 (* (- 1) ?x49)))
 (let ((?x286 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x284 (= (+ ?x40 ?x44 ?x286 ?x287 (* 9 (* c n))) 4)))
 (let (($x200 (= (+ m (* (- 6) n)) 6)))
 (let (($x1617 (and $x200 $x284 $x336 $x374 (not (= ?x686 0)))))
 (let ((?x605 (* ?x385 ?x385 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x943 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1824 (+ ?x576 (* 9 (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 4) ?x1189) (* (- 4) ?x624) (* (- 9) ?x541) ?x943 (* (- 9) ?x240) (* (- 9) (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) ?x307) (* (- 18) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)) (* (- 9) ?x276) (* 4 (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* 18 ?x579) (* 9 ?x400) (* 9 ?x759) (* 18 ?x682) ?x605 (* 5 ?x849) (* (- 18) ?x401) ?x428 (* (- 9) ?x892) (* (- 18) ?x1183) (* (- 1) ?x1194) (* (- 5) ?x1088) (* (- 9) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x898) (* 9 ?x1400) (* (- 5) ?x1406) (* (- 18) ?x1439) (* (- 9) ?x999) (* 4 ?x1251) (* 5 ?x1241) (* (- 9) ?x1797) (* (- 1) ?x701) (* 4 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 4) ?x948) (* (- 9) ?x1459) (* 4 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 ?x1687) ?x1695 (* (- 18) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)) (* 9 ?x1572) ?x1564 (* 9 ?x1553) (* 4 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)) (* 18 ?x1767) (* 9 ?x1775) (* 4 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)) (* 9 ?x1815))))
 (let (($x1038 (not (= ?x1824 0))))
 (let (($x807 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x937 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1655 (and $x200 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x286 ?x287) 4) $x937 $x807 $x1038)))
 (rewrite (= $x1655 $x1617))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1040 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x382 (+ 6 m)))
 (let ((?x385 (+ 1 n)))
 (let ((?x1815 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)))
 (let ((?x1775 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1767 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1553 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1564 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1572 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1695 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1687 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1459 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x948 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x701 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1797 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1241 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1251 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x999 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1439 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1406 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x898 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1088 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1194 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1183 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x892 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x428 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x401 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x849 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x605 (* ?x385 ?x385 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x682 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x759 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x579 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x276 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)))
 (let ((?x307 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x240 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x943 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x541 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x624 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1189 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x576 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1824 (+ ?x576 (* 9 (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 4) ?x1189) (* (- 4) ?x624) (* (- 9) ?x541) ?x943 (* (- 9) ?x240) (* (- 9) (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) ?x307) (* (- 18) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)) (* (- 9) ?x276) (* 4 (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* 18 ?x579) (* 9 ?x400) (* 9 ?x759) (* 18 ?x682) ?x605 (* 5 ?x849) (* (- 18) ?x401) ?x428 (* (- 9) ?x892) (* (- 18) ?x1183) (* (- 1) ?x1194) (* (- 5) ?x1088) (* (- 9) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x898) (* 9 ?x1400) (* (- 5) ?x1406) (* (- 18) ?x1439) (* (- 9) ?x999) (* 4 ?x1251) (* 5 ?x1241) (* (- 9) ?x1797) (* (- 1) ?x701) (* 4 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 4) ?x948) (* (- 9) ?x1459) (* 4 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 ?x1687) ?x1695 (* (- 18) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)) (* 9 ?x1572) ?x1564 (* 9 ?x1553) (* 4 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)) (* 18 ?x1767) (* 9 ?x1775) (* 4 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)) (* 9 ?x1815))))
 (let (($x1038 (not (= ?x1824 0))))
 (let (($x807 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1124 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1619 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x200 (= (+ m (* (- 6) n)) 6)))
 (and $x200 (= ?x1619 (- 4)) $x1124 $x807 $x1038)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1626 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x382 (+ 6 m)))
 (let ((?x385 (+ 1 n)))
 (let ((?x1815 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)))
 (let ((?x1775 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1767 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1553 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1564 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1572 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1695 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1687 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1459 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x948 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x701 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1797 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1241 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1251 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x999 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1439 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1406 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x898 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1088 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1194 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1183 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x892 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x428 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x401 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x849 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x605 (* ?x385 ?x385 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x682 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x759 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x579 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x276 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)))
 (let ((?x307 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x240 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x943 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x541 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x624 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1189 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x576 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1824 (+ ?x576 (* 9 (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 4) ?x1189) (* (- 4) ?x624) (* (- 9) ?x541) ?x943 (* (- 9) ?x240) (* (- 9) (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) ?x307) (* (- 18) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)) (* (- 9) ?x276) (* 4 (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* 18 ?x579) (* 9 ?x400) (* 9 ?x759) (* 18 ?x682) ?x605 (* 5 ?x849) (* (- 18) ?x401) ?x428 (* (- 9) ?x892) (* (- 18) ?x1183) (* (- 1) ?x1194) (* (- 5) ?x1088) (* (- 9) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x898) (* 9 ?x1400) (* (- 5) ?x1406) (* (- 18) ?x1439) (* (- 9) ?x999) (* 4 ?x1251) (* 5 ?x1241) (* (- 9) ?x1797) (* (- 1) ?x701) (* 4 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 4) ?x948) (* (- 9) ?x1459) (* 4 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 ?x1687) ?x1695 (* (- 18) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)) (* 9 ?x1572) ?x1564 (* 9 ?x1553) (* 4 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)) (* 18 ?x1767) (* 9 ?x1775) (* 4 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)) (* 9 ?x1815))))
 (let (($x1038 (not (= ?x1824 0))))
 (let (($x807 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x937 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x287 (* (- 1) ?x49)))
 (let ((?x286 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x200 (= (+ m (* (- 6) n)) 6)))
 (let (($x1655 (and $x200 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x286 ?x287) 4) $x937 $x807 $x1038)))
 (let (($x1124 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1619 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x575 (and $x200 (= ?x1619 (- 4)) $x1124 $x807 $x1038)))
 (rewrite (= $x575 $x1655)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x167 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x159 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x158 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x155 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x145 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x141 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x140 (* 4 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x135 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x134 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x132 (* 5 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x131 (* 4 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x127 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x126 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x125 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x123 (* 9 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x115 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x111 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x109 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x103 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x101 (* 18 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x100 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x99 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x98 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x83 (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x77 (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x76 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x75 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x74 (+ (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71) (* 9 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71 ?x71))))
 (let ((?x82 (+ (- (- (- ?x74 ?x75) ?x76) ?x77) (* ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71))))
 (let ((?x91 (- (- ?x82 ?x83) (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71 ?x71))))
 (let ((?x93 (- (- ?x91 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71)) (* 5 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x94 (- ?x93 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x95 (- ?x94 (* 18 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x96 (- ?x95 (* 9 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x104 (+ ?x96 (* 4 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71) ?x98 ?x99 ?x100 ?x101 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x71 ?x71) ?x103)))
 (let ((?x106 (- ?x104 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x108 (+ ?x106 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x117 (- (- ?x108 ?x109) (* 18 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x119 (- (- ?x117 ?x111) (* 5 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x121 (- (- ?x119 (* 9 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71)) (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x136 (- (+ (- (- (- (+ (- ?x121 ?x115) ?x123) ?x125) ?x126) ?x127) ?x131 ?x132) ?x134)))
 (let ((?x143 (- (- (+ (- ?x136 ?x135) (* 4 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71)) ?x140) ?x141)))
 (let ((?x147 (+ ?x143 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71) ?x145 (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x151 (+ (- ?x147 (* 18 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71)) (* 9 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x162 (+ (- ?x151 (* 5 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71) ?x155 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* 4 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71) ?x158 ?x159 (* 4 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* 9 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x162 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1006 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x382 (+ 6 m)))
 (let ((?x385 (+ 1 n)))
 (let ((?x1815 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)))
 (let ((?x1775 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1767 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1553 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1564 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1572 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1695 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1687 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1459 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x948 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x701 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1797 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1241 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1251 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x999 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1439 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1406 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x898 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1088 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1194 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1183 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x892 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x428 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x401 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x849 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x605 (* ?x385 ?x385 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x682 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x759 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x579 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x276 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)))
 (let ((?x307 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x240 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x943 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x541 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x624 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1189 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x576 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1824 (+ ?x576 (* 9 (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 4) ?x1189) (* (- 4) ?x624) (* (- 9) ?x541) ?x943 (* (- 9) ?x240) (* (- 9) (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) ?x307) (* (- 18) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)) (* (- 9) ?x276) (* 4 (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* 18 ?x579) (* 9 ?x400) (* 9 ?x759) (* 18 ?x682) ?x605 (* 5 ?x849) (* (- 18) ?x401) ?x428 (* (- 9) ?x892) (* (- 18) ?x1183) (* (- 1) ?x1194) (* (- 5) ?x1088) (* (- 9) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x898) (* 9 ?x1400) (* (- 5) ?x1406) (* (- 18) ?x1439) (* (- 9) ?x999) (* 4 ?x1251) (* 5 ?x1241) (* (- 9) ?x1797) (* (- 1) ?x701) (* 4 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 4) ?x948) (* (- 9) ?x1459) (* 4 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 ?x1687) ?x1695 (* (- 18) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)) (* 9 ?x1572) ?x1564 (* 9 ?x1553) (* 4 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)) (* 18 ?x1767) (* 9 ?x1775) (* 4 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)) (* 9 ?x1815))))
 (let (($x1038 (not (= ?x1824 0))))
 (let (($x807 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1124 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1619 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x200 (= (+ m (* (- 6) n)) 6)))
 (let (($x575 (and $x200 (= ?x1619 (- 4)) $x1124 $x807 $x1038)))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x159 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x158 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x155 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x145 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x141 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x140 (* 4 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x135 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x134 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x132 (* 5 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x131 (* 4 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x127 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x126 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x125 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x123 (* 9 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x115 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x111 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x109 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x103 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x101 (* 18 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x100 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x99 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x98 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x83 (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x77 (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x76 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x75 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x74 (+ (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71) (* 9 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71 ?x71))))
 (let ((?x82 (+ (- (- (- ?x74 ?x75) ?x76) ?x77) (* ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71))))
 (let ((?x91 (- (- ?x82 ?x83) (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71 ?x71))))
 (let ((?x93 (- (- ?x91 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71)) (* 5 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x94 (- ?x93 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x95 (- ?x94 (* 18 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x96 (- ?x95 (* 9 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x104 (+ ?x96 (* 4 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71) ?x98 ?x99 ?x100 ?x101 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x71 ?x71) ?x103)))
 (let ((?x106 (- ?x104 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x108 (+ ?x106 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x117 (- (- ?x108 ?x109) (* 18 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x119 (- (- ?x117 ?x111) (* 5 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x121 (- (- ?x119 (* 9 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71)) (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x136 (- (+ (- (- (- (+ (- ?x121 ?x115) ?x123) ?x125) ?x126) ?x127) ?x131 ?x132) ?x134)))
 (let ((?x143 (- (- (+ (- ?x136 ?x135) (* 4 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71)) ?x140) ?x141)))
 (let ((?x147 (+ ?x143 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71) ?x145 (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x151 (+ (- ?x147 (* 18 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71)) (* 9 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x162 (+ (- ?x151 (* 5 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71) ?x155 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* 4 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71) ?x158 ?x159 (* 4 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* 9 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x166 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x162 0))))))
 (rewrite (= $x166 $x575)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x168 (asserted $x167)))
 (let ((@x1653 (mp (mp @x168 (quant-intro (proof-bind ?x1006) (= $x167 $x1040)) $x1040) (rewrite (= $x1040 $x1040)) $x1040)))
 (let ((@x243 (mp (mp @x1653 (quant-intro (proof-bind ?x1626) (= $x1040 $x1136)) $x1136) (quant-intro (proof-bind ?x799) (= $x1136 $x408)) $x408)))
 (let ((@x530 (mp (mp~ @x243 (sk (~ $x408 $x723)) $x723) (rewrite (= $x723 $x1106)) $x1106)))
 (let ((@x809 (and-elim @x530 $x659)))
 (let ((@x790 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x659) $x1416)) @x809 $x1416)))
 (let (($x1450 (>= ?x1214 4)))
 (let ((@x1616 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x659) $x1450)) @x809 $x1450)))
 (let (($x1240 (<= ?x331 1)))
 (let ((@x1181 (and-elim @x530 $x176)))
 (let ((@x1401 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x176) $x1240)) @x1181 $x1240)))
 (let (($x1089 (>= ?x331 1)))
 (let ((@x984 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x176) $x1089)) @x1181 $x1089)))
 (let (($x378 (<= ?x669 1)))
 (let ((@x1431 (and-elim @x530 $x1573)))
 (let ((@x801 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1573) $x378)) @x1431 $x378)))
 (let (($x254 (>= ?x669 1)))
 (let ((@x1149 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1573) $x254)) @x1431 $x254)))
 (let (($x1202 (<= ?x409 6)))
 (let ((@x294 (and-elim @x530 $x1008)))
 (let ((@x368 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1008) $x1202)) @x294 $x1202)))
 (let (($x1666 (>= ?x409 6)))
 (let ((@x262 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1008) $x1666)) @x294 $x1666)))
 (let (($x393 (not (<= ?x1140 0))))
 (let (($x373 (>= ?x1140 0)))
 (let ((@x998 ((_ th-lemma arith) (hypothesis (not $x373)) @x984 @x1401 @x262 @x368 @x262 @x368 @x984 @x1401 @x984 @x1401 @x1149 @x801 @x984 @x1401 @x984 @x1401 @x1149 @x801 @x1149 @x801 @x1616 @x790 false)))
 (let ((@x1128 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1147 $x393 (not $x373))) (and-elim @x530 $x963) (or $x393 (not $x373)))))
 ((_ th-lemma arith) (unit-resolution @x1128 (lemma @x998 $x373) $x393) @x984 @x1401 @x262 @x368 @x984 @x1401 @x262 @x368 @x984 @x1401 @x984 @x1401 @x1149 @x801 @x984 @x1401 @x1616 @x790 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        19
 :arith-assert-upper        11
 :arith-branch-var          2
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           15
 :arith-gomory-cuts         1
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             507
 :arith-nonlinear-bounds    10
 :arith-nonlinear-horner    17
 :arith-num-rows            10
 :arith-patches             4
 :arith-pivots              14
 :arith-row-summations      25
 :arith-tableau-max-columns 88
 :arith-tableau-max-rows    10
 :conflicts                 2
 :decisions                 4
 :del-clause                16
 :final-checks              8
 :max-memory                4.90
 :memory                    3.52
 :mk-bool-var               25
 :mk-clause                 16
 :num-allocs                74203108
 :num-checks                1
 :propagations              10
 :rlimit-count              177193
 :time                      0.16
 :total-time                0.18)
