unsat
((set-logic NIA)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(declare-fun z!1 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x1807 (* 18 (* z!1 x!3))))
 (let ((?x1057 (* z00 z00 y!2)))
 (let ((?x1049 (* y00 z!1)))
 (let ((?x801 (* (- 12) ?x1049)))
 (let ((?x850 (* z!1 y!2)))
 (let ((?x1811 (* 12 ?x850)))
 (let ((?x1337 (* (- 108) x!3)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1894 (* 24 ?x561)))
 (let ((?x494 (* z00 y00)))
 (let ((?x769 (* (- 6) ?x494)))
 (let ((?x1332 (* (- 18) (* x00 z!1))))
 (let ((?x1029 (* (- 72) y!2)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1856 (+ ?x67 ?x74 (* (- 12) (* y00 y!2)) ?x1029 ?x1332 ?x769 (* (- 18) (* z00 x00)) (* 18 (* z00 x!3)) ?x1894 (* z00 y00 z!1) (* (- 1) (* z00 z00 y00)) ?x1337 ?x1811 (* (- 12) (* y!2 y!2)) (* (- 1) (* z00 z!1 y!2)) ?x801 ?x1057 ?x1807 (* 6 (* z00 y!2)))))
 (let (($x315 (<= ?x1856 0)))
 (let (($x1841 (= ?x1856 0)))
 (let ((?x1770 (+ y!2 x!3)))
 (let ((?x1772 (+ z!1 y!2)))
 (let ((?x506 (+ 6 z!1)))
 (let ((?x601 (+ 1 n!0)))
 (let ((?x2001 (* y00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1973 (* y00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1265 (* 108 (* x00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770))))
 (let ((?x1725 (* ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1634 (* ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1612 (* z00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1578 (* z00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1554 (* ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1552 (* z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1460 (* z00 z00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x506 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x958 (* (- 108) (* ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770))))
 (let ((?x1436 (* y00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1418 (* z00 z00 z00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1415 (* z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1408 (* y00 z00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1404 (* z00 z00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1386 (* y00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1360 (* z00 z00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1302 (* y00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1296 (* z00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1262 (* ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1253 (* ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1246 (* y00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x506 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1144 (* z00 z00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1035 (* y00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x988 (* ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x954 (* x00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x949 (* z00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x942 (* ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x892 (* y00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x891 (* z00 z00 z00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x887 (* z00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x884 (* y00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x739 (* ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x407 (* (- 72) (* ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770))))
 (let ((?x558 (* z00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x506 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x520 (* ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1164 (* 72 (* y00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770))))
 (let ((?x459 (* y00 z00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x395 (* z00 z00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x391 (* x00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x372 (* z00 z00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x349 (* x00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x1772 ?x1772 ?x1772 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x320 (* ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x506 ?x1772 ?x1770 ?x1770 ?x1770 ?x1770 ?x1770)))
 (let ((?x1198 (+ (* 6 ?x320) (* 108 ?x349) ?x372 (* (- 108) ?x391) (* 6 ?x395) (* 18 ?x459) ?x1164 (* 72 ?x520) (* 6 ?x558) ?x407 (* 108 ?x739) (* (- 12) ?x884) (* 6 ?x887) ?x891 (* (- 72) ?x892) (* (- 72) ?x942) (* (- 6) ?x949) (* (- 108) ?x954) (* 108 ?x988) (* (- 18) ?x1035) (* (- 6) ?x1144) (* 12 ?x1246) (* (- 108) ?x1253) (* (- 6) ?x1262) (* (- 1) ?x1296) (* 18 ?x1302) (* (- 1) ?x1360) (* 72 ?x1386) ?x1404 (* (- 18) ?x1408) (* 6 ?x1415) (* (- 1) ?x1418) (* 12 ?x1436) ?x958 (* (- 1) ?x1460) (* (- 6) ?x1552) (* (- 6) ?x1554) (* (- 6) ?x1578) ?x1612 (* 72 ?x1634) (* 6 ?x1725) ?x1265 (* (- 72) ?x1973) (* (- 12) ?x2001))))
 (let (($x1147 (= ?x1198 0)))
 (let (($x1769 (not $x1147)))
 (let ((?x738 (* z00 z00 y00 y00)))
 (let ((?x393 (+ (* 216 (* y00 x!3)) (* 120 (* y00 y!2)) (* (- 18) (* z00 y00 y!2)) (* (- 216) (* y00 x00)) (* (- 108) (* x!3 x!3)) (* (- 24) ?x494) (* (- 36) (* z00 x00)) (* 36 (* z00 x!3)) (* (- 96) ?x561) (* (- 1) (* z00 z00 y!2 y!2)) (* 12 (* z00 y00 y00)) (* 10 (* z00 z00 y00)) (* (- 18) (* z00 z00 x!3)) ?x738 (* 6 (* z00 y!2 y!2)) (* 108 (* x00 y!2)) (* 18 (* z00 z00 x00)) (* (- 24) (* y!2 y!2)) (* (- 16) (* y00 y00 y00)) (* (- 10) ?x1057) (* 36 (* z00 y00 x00)) (* (- 1) (* z00 z00 z00 y00)) (* (- 2) (* z00 z00 z00 x00)) (* (- 108) (* x00 x00)) (* 24 (* z00 y!2)) (* z00 z00 z00 y!2) (* 12 (* y00 y!2 y!2)) (* 2 (* z00 z00 z00 x!3)) (* (- 36) (* z00 y00 x!3)) (* 216 (* x00 x!3)) (* 4 (* y!2 y!2 y!2)) (* (- 108) (* y!2 x!3)))))
 (let (($x399 (= ?x393 0)))
 (let ((?x670 (* z00 y00 y00)))
 (let ((?x727 (* 36 ?x561)))
 (let ((?x610 (* 6 ?x494)))
 (let ((?x356 (* z00 y00 y!2)))
 (let ((?x1918 (+ ?x67 ?x74 (* (- 18) (* y00 x!3)) (* (- 36) (* y00 y!2)) ?x356 (* (- 3) (* z00 x00 z!1)) ?x1029 ?x1332 (* 18 (* y00 x00)) ?x610 ?x727 ?x670 (* (- 3) (* z00 z00 y00)) (* 3 (* z00 z00 x!3)) ?x1337 (* 2 (* y00 y00 z!1)) (* (- 2) (* z00 y!2 y!2)) (* (- 18) (* x00 y!2)) ?x1811 (* (- 3) (* z00 z00 x00)) ?x801 (* 3 ?x1057) ?x1807 (* 3 (* z00 z!1 x!3)) (* (- 6) (* z00 y!2)) (* 18 (* y!2 x!3)) (* (- 1) (* z!1 y!2 y!2)) (* (- 1) (* y00 z!1 y!2)))))
 (let (($x1511 (= ?x1918 0)))
 (let ((?x353 (* z00 z00)))
 (let ((?x1708 (* (- 6) ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x765 (+ ?x67 ?x55 ?x74 ?x1708 ?x1029 (* (- 18) ?x494) (* 6 (* z00 z!1)) (* (- 1) (* z00 z00 z!1)) ?x1337 (* 6 ?x850) (* 12 ?x1049))))
 (let (($x1028 (= ?x765 0)))
 (let ((?x1352 (* z!1 z!1)))
 (let ((?x1342 (* (- 1) ?x353)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x405 (+ ?x49 ?x43 ?x1342 (* (- 6) z!1) (* (- 12) y!2) ?x1352)))
 (let (($x605 (= ?x405 0)))
 (let ((?x599 (* (- 6) n00)))
 (let ((?x1212 (+ z00 ?x599 (* (- 1) z!1) (* 6 n!0))))
 (let (($x477 (= ?x1212 0)))
 (let (($x1177 (and $x477 $x605 $x1028 $x1841 $x1511 $x399 $x1769)))
 (let ((?x1975 (+ x!3 y!2)))
 (let ((?x493 (+ y!2 z!1)))
 (let ((?x931 (* z00 z00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1206 (* z00 z00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x789 (* z00 z00 z00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x479 (* ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1580 (* z00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1295 (* ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1157 (* z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1510 (* y00 z00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1605 (* z00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x997 (* y00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1220 (* y00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x922 (* z00 z00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x506 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x924 (* y00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x893 (* z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1226 (* y00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1013 (* ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1201 (* z00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x791 (* ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1127 (* 108 (* x00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975))))
 (let ((?x919 (* x00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1115 (* ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x788 (* ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x688 (* x00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1298 (* ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x560 (* y00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x563 (* ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x2019 (* z00 z00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x553 (* y00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x506 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1553 (* z00 z00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1683 (* ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x689 (* z00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1112 (* x00 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x471 (* (- 108) (* ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975))))
 (let ((?x709 (* z00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x506 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x710 (* 72 (* y00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975))))
 (let ((?x668 (* ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x506 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1109 (* y00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x493 ?x493 ?x493 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1102 (* y00 z00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1110 (* z00 z00 z00 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1753 (* (- 72) (* ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975))))
 (let ((?x2110 (* y00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x1444 (* z00 z00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x511 (* y00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x506 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x653 (* z00 z00 ?x601 ?x601 ?x601 ?x601 ?x601 ?x506 ?x506 ?x506 ?x493 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975 ?x1975)))
 (let ((?x874 (+ (* 6 ?x653) (* (- 12) ?x511) (* (- 1) ?x1444) (* (- 72) ?x2110) ?x1753 ?x1110 (* (- 18) ?x1102) (* 72 ?x1109) (* 6 ?x668) ?x710 (* 6 ?x709) ?x471 (* (- 108) ?x1112) (* (- 1) ?x689) (* 108 ?x1683) ?x1553 (* 12 ?x553) (* (- 6) ?x2019) (* 72 ?x563) (* 12 ?x560) (* (- 108) ?x1298) (* (- 108) ?x688) (* 6 ?x788) (* 72 ?x1115) (* 108 ?x919) ?x1127 (* (- 6) ?x791) (* (- 6) ?x1201) (* (- 6) ?x1013) (* (- 72) ?x1226) (* (- 6) ?x893) (* 18 ?x924) (* (- 1) ?x922) (* (- 18) ?x1220) (* (- 12) ?x997) (* (- 6) ?x1605) (* 18 ?x1510) (* 6 ?x1157) (* (- 72) ?x1295) ?x1580 (* 108 ?x479) (* (- 1) ?x789) ?x1206 (* 6 ?x931))))
 (let ((?x1278 (* x00 x00)))
 (let ((?x1279 (* 108 ?x1278)))
 (let ((?x1175 (* z00 z00 z00 x00)))
 (let ((?x1176 (* 2 ?x1175)))
 (let ((?x1172 (* z00 z00 z00 y00)))
 (let ((?x1069 (* z00 y00 x00)))
 (let ((?x1082 (* (- 36) ?x1069)))
 (let ((?x966 (* y00 y00 y00)))
 (let ((?x967 (* 16 ?x966)))
 (let ((?x881 (* z00 z00 x00)))
 (let ((?x1132 (* (- 18) ?x881)))
 (let ((?x753 (* (- 1) ?x738)))
 (let ((?x695 (* z00 z00 y00)))
 (let ((?x1233 (* (- 10) ?x695)))
 (let ((?x705 (* (- 12) ?x670)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x531 (* z00 x00)))
 (let ((?x449 (* 36 ?x531)))
 (let ((?x859 (* 24 ?x494)))
 (let ((?x441 (* y00 x00)))
 (let ((?x432 (* 216 ?x441)))
 (let ((?x1776 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x432 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x859 ?x449 (* 24 (* y!2 y!2)) ?x1032 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x705 ?x1233 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x753 (* 108 (* x!3 x!3)) (* (- 4) (* y!2 y!2 y!2)) (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1132 (* (- 216) (* x!3 y00)) ?x967 (* (- 12) (* y!2 y!2 y00)) ?x1082 (* (- 216) (* x!3 x00)) ?x1172 ?x1176 (* 36 (* x!3 z00 y00)) ?x1279)))
 (let ((?x882 (* 3 ?x881)))
 (let ((?x944 (* 3 ?x695)))
 (let ((?x677 (* (- 1) ?x670)))
 (let ((?x1083 (* 18 (* z!1 x00))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x2003 (* z!1 y00)))
 (let ((?x930 (* 12 ?x2003)))
 (let ((?x792 (* (- 18) (* x!3 z!1))))
 (let ((?x442 (* (- 18) ?x441)))
 (let ((?x778 (* y!2 z!1)))
 (let ((?x871 (* (- 12) ?x778)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x586 (* 72 y!2)))
 (let ((?x1084 (* 108 x!3)))
 (let ((?x1738 (+ ?x1084 ?x586 ?x516 ?x573 (* (- 3) (* y!2 z00 z00)) (* y!2 y!2 z!1) ?x871 ?x442 (* (- 18) (* x!3 y!2)) ?x792 ?x930 ?x769 ?x864 ?x1083 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x677 ?x944 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x882 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x532 (* 18 ?x531)))
 (let ((?x1297 (+ ?x1084 ?x586 ?x516 ?x573 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x871 ?x792 ?x930 ?x610 ?x532 (* 12 (* y!2 y!2)) ?x590 ?x1083 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x695 (* (- 18) (* x!3 z00)))))
 (let ((?x495 (* 18 ?x494)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x926 (+ ?x1084 ?x586 ?x516 ?x446 ?x573 (* z!1 z00 z00) ?x457 (* (- 6) ?x778) (* (- 12) ?x2003) ?x495 (* (- 6) (* z!1 z00)))))
 (let ((?x424 (* (- 12) y00)))
 (let ((?x423 (* (- 6) z00)))
 (let (($x362 (= (+ (* 12 y!2) (* 6 z!1) ?x423 ?x424 (* (- 1) ?x1352) ?x353) 0)))
 (let (($x779 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x362 (= ?x926 0) (= ?x1297 0) (= ?x1738 0) (= ?x1776 0) (not (= ?x874 0)))))
 (let (($x1126 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x2109 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1086 (* 6 ?x2109)))
 (let ((?x2085 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2028 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1062 (* (- 1) ?x2028)))
 (let ((?x2013 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1091 (* 108 ?x2013)))
 (let ((?x1979 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1878 (* (- 72) ?x1962)))
 (let ((?x1947 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2080 (* 6 ?x1947)))
 (let ((?x1931 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x402 (* 18 ?x1931)))
 (let ((?x1908 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1074 (* (- 6) ?x1908)))
 (let ((?x1868 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1088 (* (- 12) ?x1868)))
 (let ((?x1821 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x578 (* (- 18) ?x1821)))
 (let ((?x1748 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1344 (* (- 1) ?x1748)))
 (let ((?x1712 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1077 (* 18 ?x1712)))
 (let ((?x1678 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1089 (* (- 6) ?x1678)))
 (let ((?x1662 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1090 (* (- 72) ?x1662)))
 (let ((?x1630 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1838 (* (- 6) ?x1630)))
 (let ((?x1622 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1883 (* (- 6) ?x1622)))
 (let ((?x1608 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1361 (* (- 6) ?x1608)))
 (let ((?x1592 (* x00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x567 (* 108 ?x1592)))
 (let ((?x1585 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1085 (* 108 ?x1585)))
 (let ((?x1575 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x440 (* 72 ?x1575)))
 (let ((?x1549 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x577 (* 6 ?x1549)))
 (let ((?x1537 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1892 (* (- 108) ?x1537)))
 (let ((?x1527 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x546 (* (- 108) ?x1527)))
 (let ((?x1482 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x640 (* 12 ?x1482)))
 (let ((?x1373 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1880 (* 72 ?x1373)))
 (let ((?x1329 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1518 (* (- 6) ?x1329)))
 (let ((?x1248 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x991 (* 12 ?x1248)))
 (let ((?x1204 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x674 (* 108 ?x1168)))
 (let ((?x1148 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1438 (* (- 1) ?x1148)))
 (let ((?x1104 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1521 (* (- 108) ?x1104)))
 (let ((?x1030 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x478 (* (- 108) ?x1030)))
 (let ((?x981 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1513 (* 6 ?x981)))
 (let ((?x971 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1456 (* 72 ?x971)))
 (let ((?x939 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1178 (* 6 ?x939)))
 (let ((?x933 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x371 (* 72 ?x933)))
 (let ((?x888 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x748 (* (- 18) ?x888)))
 (let ((?x700 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x669 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x394 (* (- 72) ?x669)))
 (let ((?x527 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1025 (* (- 72) ?x527)))
 (let ((?x392 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1006 (* (- 1) ?x392)))
 (let ((?x368 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1485 (* (- 12) ?x368)))
 (let ((?x317 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x984 (* 6 ?x317)))
 (let ((?x1134 (+ ?x984 ?x1485 ?x1006 ?x1025 ?x394 ?x700 ?x748 ?x371 ?x1178 ?x1456 ?x1513 ?x478 ?x1521 ?x1438 ?x674 ?x1204 ?x991 ?x1518 ?x1880 ?x640 ?x546 ?x1892 ?x577 ?x440 ?x1085 ?x567 ?x1361 ?x1883 ?x1838 ?x1090 ?x1089 ?x1077 ?x1344 ?x578 ?x1088 ?x1074 ?x402 ?x2080 ?x1878 ?x1979 ?x1091 ?x1062 ?x2085 ?x1086)))
 (let ((?x1278 (* x00 x00)))
 (let ((?x1279 (* 108 ?x1278)))
 (let ((?x1175 (* z00 z00 z00 x00)))
 (let ((?x1176 (* 2 ?x1175)))
 (let ((?x1172 (* z00 z00 z00 y00)))
 (let ((?x1069 (* z00 y00 x00)))
 (let ((?x1082 (* (- 36) ?x1069)))
 (let ((?x966 (* y00 y00 y00)))
 (let ((?x967 (* 16 ?x966)))
 (let ((?x881 (* z00 z00 x00)))
 (let ((?x1132 (* (- 18) ?x881)))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x738 (* z00 z00 y00 y00)))
 (let ((?x753 (* (- 1) ?x738)))
 (let ((?x695 (* z00 z00 y00)))
 (let ((?x1233 (* (- 10) ?x695)))
 (let ((?x670 (* z00 y00 y00)))
 (let ((?x705 (* (- 12) ?x670)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x531 (* z00 x00)))
 (let ((?x449 (* 36 ?x531)))
 (let ((?x494 (* z00 y00)))
 (let ((?x859 (* 24 ?x494)))
 (let ((?x441 (* y00 x00)))
 (let ((?x432 (* 216 ?x441)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1299 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x432 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x859 ?x449 ?x780 ?x1032 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x705 ?x1233 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x753 ?x785 ?x837 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1132 (* (- 216) (* x y00)) ?x967 (* (- 12) (* y y y00)) ?x1082 (* (- 216) (* x x00)) ?x1172 ?x1176 (* 36 (* x z00 y00)) ?x1279)))
 (let (($x1304 (= ?x1299 0)))
 (let ((?x882 (* 3 ?x881)))
 (let ((?x944 (* 3 ?x695)))
 (let ((?x677 (* (- 1) ?x670)))
 (let ((?x607 (* 18 (* z x00))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x769 (* (- 6) ?x494)))
 (let ((?x468 (* z y00)))
 (let ((?x469 (* 12 ?x468)))
 (let ((?x502 (* (- 18) (* x z))))
 (let ((?x442 (* (- 18) ?x441)))
 (let ((?x437 (* y z)))
 (let ((?x461 (* (- 12) ?x437)))
 (let ((?x135 (* y y z)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1000 (+ ?x64 ?x71 ?x516 ?x573 (* (- 3) (* y z00 z00)) ?x135 ?x461 ?x442 (* (- 18) (* x y)) ?x502 ?x469 ?x769 ?x864 ?x607 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x677 ?x944 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x882 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1007 (= ?x1000 0)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x532 (* 18 ?x531)))
 (let ((?x610 (* 6 ?x494)))
 (let ((?x103 (* y z z00)))
 (let ((?x749 (+ ?x64 ?x71 ?x516 ?x573 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x461 ?x502 ?x469 ?x610 ?x532 ?x538 ?x590 ?x607 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x695 (* (- 18) (* x z00)))))
 (let (($x754 (= ?x749 0)))
 (let ((?x495 (* 18 ?x494)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x589 (+ ?x64 ?x71 ?x516 ?x446 ?x573 ?x76 ?x457 (* (- 6) ?x437) (* (- 12) ?x468) ?x495 (* (- 6) (* z z00)))))
 (let (($x594 (= ?x589 0)))
 (let ((?x50 (* z z)))
 (let ((?x425 (* (- 1) ?x50)))
 (let ((?x424 (* (- 12) y00)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x427 (= (+ ?x45 ?x46 ?x423 ?x424 ?x425 ?x353) 0)))
 (let (($x345 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x345 $x427 $x594 $x754 $x1007 $x1304 (not (= ?x1134 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x2074 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x1947 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2080 (* 6 ?x1947)))
 (let ((?x1962 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1878 (* (- 72) ?x1962)))
 (let ((?x1979 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1537 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1892 (* (- 108) ?x1537)))
 (let ((?x1373 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1880 (* 72 ?x1373)))
 (let ((?x1622 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1883 (* (- 6) ?x1622)))
 (let ((?x1630 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1838 (* (- 6) ?x1630)))
 (let ((?x1908 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1074 (* (- 6) ?x1908)))
 (let ((?x2085 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1821 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x578 (* (- 18) ?x1821)))
 (let ((?x1549 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x577 (* 6 ?x1549)))
 (let ((?x1592 (* x00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x567 (* 108 ?x1592)))
 (let ((?x2013 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1091 (* 108 ?x2013)))
 (let ((?x1662 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1090 (* (- 72) ?x1662)))
 (let ((?x1678 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1089 (* (- 6) ?x1678)))
 (let ((?x1868 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1088 (* (- 12) ?x1868)))
 (let ((?x2109 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1086 (* 6 ?x2109)))
 (let ((?x1931 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x402 (* 18 ?x1931)))
 (let ((?x2028 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1062 (* (- 1) ?x2028)))
 (let ((?x1585 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1085 (* 108 ?x1585)))
 (let ((?x1712 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1077 (* 18 ?x1712)))
 (let ((?x669 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x394 (* (- 72) ?x669)))
 (let ((?x939 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1178 (* 6 ?x939)))
 (let ((?x1748 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1344 (* (- 1) ?x1748)))
 (let ((?x1329 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1518 (* (- 6) ?x1329)))
 (let ((?x981 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1513 (* 6 ?x981)))
 (let ((?x1104 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1521 (* (- 108) ?x1104)))
 (let ((?x1608 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1361 (* (- 6) ?x1608)))
 (let ((?x1575 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x440 (* 72 ?x1575)))
 (let ((?x700 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1030 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x478 (* (- 108) ?x1030)))
 (let ((?x317 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x984 (* 6 ?x317)))
 (let ((?x392 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1006 (* (- 1) ?x392)))
 (let ((?x368 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1485 (* (- 12) ?x368)))
 (let ((?x527 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1025 (* (- 72) ?x527)))
 (let ((?x1148 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1438 (* (- 1) ?x1148)))
 (let ((?x1248 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x991 (* 12 ?x1248)))
 (let ((?x971 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1456 (* 72 ?x971)))
 (let ((?x1482 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x640 (* 12 ?x1482)))
 (let ((?x933 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x371 (* 72 ?x933)))
 (let ((?x1527 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x546 (* (- 108) ?x1527)))
 (let ((?x888 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x748 (* (- 18) ?x888)))
 (let ((?x1168 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x674 (* 108 ?x1168)))
 (let ((?x1204 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1879 (+ ?x1204 ?x674 ?x748 ?x546 ?x371 ?x640 ?x1456 ?x991 ?x1438 ?x1025 ?x1485 ?x1006 ?x984 ?x478 ?x700 ?x440 ?x1361 ?x1521 ?x1513 ?x1518 ?x1344 ?x1178 ?x394 ?x1077 ?x1085 ?x1062 ?x402 ?x1086 ?x1088 ?x1089 ?x1090 ?x1091 ?x567 ?x577 ?x578 ?x2085 ?x1074 ?x1838 ?x1883 ?x1880 ?x1892 ?x1979 ?x1878 ?x2080)))
 (let ((?x1278 (* x00 x00)))
 (let ((?x1279 (* 108 ?x1278)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x966 (* y00 y00 y00)))
 (let ((?x967 (* 16 ?x966)))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x1516 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1290 (= ?x1516 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x1710 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1582 (* (- 108) x)))
 (let ((?x581 (* x00 z)))
 (let ((?x620 (* (- 18) ?x581)))
 (let ((?x727 (* 36 ?x561)))
 (let ((?x593 (* z y)))
 (let ((?x1740 (* 12 ?x593)))
 (let ((?x846 (* z00 y)))
 (let ((?x809 (* (- 6) ?x846)))
 (let ((?x686 (* y00 z00)))
 (let ((?x684 (* 6 ?x686)))
 (let ((?x1207 (* y00 z)))
 (let ((?x1916 (* (- 12) ?x1207)))
 (let ((?x842 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x806 (* z x)))
 (let ((?x447 (* 18 ?x806)))
 (let ((?x630 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x447 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x842 ?x1916 ?x684 (* (- 36) (* y00 y)) ?x809 ?x1740 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x727 ?x620 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1582 ?x67 (* (- 18) (* y00 x)) ?x1710 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x328 (* z00 z00 y)))
 (let ((?x470 (* 6 ?x846)))
 (let ((?x1128 (* (- 6) ?x686)))
 (let ((?x1894 (* 24 ?x561)))
 (let ((?x591 (* y00 z00 z)))
 (let ((?x713 (+ ?x591 ?x1740 ?x447 (* (- 18) (* x00 z00)) (* (- 12) ?x535) ?x1894 ?x620 ?x1916 ?x1128 (* (- 12) (* y00 y)) ?x1582 ?x67 ?x470 ?x1710 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x328)))
 (let ((?x1208 (* 12 ?x1207)))
 (let ((?x353 (* z00 z00)))
 (let ((?x1708 (* (- 6) ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1736 (+ (* 6 ?x593) ?x55 ?x1708 ?x1208 (* (- 18) ?x686) ?x1582 ?x67 (* 6 (* z00 z)) ?x1710 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x425 (* (- 1) ?x50)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x424 (* (- 12) y00)))
 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x353 ?x424 ?x45 ?x46 ?x423 ?x425) 0) (= ?x1736 0) (= ?x713 0) (= ?x630 0) $x1290 (not (= ?x1879 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x460 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x2109 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1086 (* 6 ?x2109)))
 (let ((?x2085 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2028 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1062 (* (- 1) ?x2028)))
 (let ((?x2013 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1091 (* 108 ?x2013)))
 (let ((?x1979 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1878 (* (- 72) ?x1962)))
 (let ((?x1947 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2080 (* 6 ?x1947)))
 (let ((?x1931 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x402 (* 18 ?x1931)))
 (let ((?x1908 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1074 (* (- 6) ?x1908)))
 (let ((?x1868 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1088 (* (- 12) ?x1868)))
 (let ((?x1821 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x578 (* (- 18) ?x1821)))
 (let ((?x1748 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1344 (* (- 1) ?x1748)))
 (let ((?x1712 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1077 (* 18 ?x1712)))
 (let ((?x1678 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1089 (* (- 6) ?x1678)))
 (let ((?x1662 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1090 (* (- 72) ?x1662)))
 (let ((?x1630 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1838 (* (- 6) ?x1630)))
 (let ((?x1622 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1883 (* (- 6) ?x1622)))
 (let ((?x1608 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1361 (* (- 6) ?x1608)))
 (let ((?x1592 (* x00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x567 (* 108 ?x1592)))
 (let ((?x1585 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1085 (* 108 ?x1585)))
 (let ((?x1575 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x440 (* 72 ?x1575)))
 (let ((?x1549 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x577 (* 6 ?x1549)))
 (let ((?x1537 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1892 (* (- 108) ?x1537)))
 (let ((?x1527 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x546 (* (- 108) ?x1527)))
 (let ((?x1482 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x640 (* 12 ?x1482)))
 (let ((?x1373 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1880 (* 72 ?x1373)))
 (let ((?x1329 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1518 (* (- 6) ?x1329)))
 (let ((?x1248 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x991 (* 12 ?x1248)))
 (let ((?x1204 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x674 (* 108 ?x1168)))
 (let ((?x1148 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1438 (* (- 1) ?x1148)))
 (let ((?x1104 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1521 (* (- 108) ?x1104)))
 (let ((?x1030 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x478 (* (- 108) ?x1030)))
 (let ((?x981 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1513 (* 6 ?x981)))
 (let ((?x971 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1456 (* 72 ?x971)))
 (let ((?x939 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1178 (* 6 ?x939)))
 (let ((?x933 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x371 (* 72 ?x933)))
 (let ((?x888 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x748 (* (- 18) ?x888)))
 (let ((?x700 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x669 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x394 (* (- 72) ?x669)))
 (let ((?x527 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1025 (* (- 72) ?x527)))
 (let ((?x392 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1006 (* (- 1) ?x392)))
 (let ((?x368 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1485 (* (- 12) ?x368)))
 (let ((?x317 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x984 (* 6 ?x317)))
 (let ((?x1134 (+ ?x984 ?x1485 ?x1006 ?x1025 ?x394 ?x700 ?x748 ?x371 ?x1178 ?x1456 ?x1513 ?x478 ?x1521 ?x1438 ?x674 ?x1204 ?x991 ?x1518 ?x1880 ?x640 ?x546 ?x1892 ?x577 ?x440 ?x1085 ?x567 ?x1361 ?x1883 ?x1838 ?x1090 ?x1089 ?x1077 ?x1344 ?x578 ?x1088 ?x1074 ?x402 ?x2080 ?x1878 ?x1979 ?x1091 ?x1062 ?x2085 ?x1086)))
 (let ((?x1278 (* x00 x00)))
 (let ((?x1279 (* 108 ?x1278)))
 (let ((?x1175 (* z00 z00 z00 x00)))
 (let ((?x1176 (* 2 ?x1175)))
 (let ((?x1172 (* z00 z00 z00 y00)))
 (let ((?x1069 (* z00 y00 x00)))
 (let ((?x1082 (* (- 36) ?x1069)))
 (let ((?x966 (* y00 y00 y00)))
 (let ((?x967 (* 16 ?x966)))
 (let ((?x881 (* z00 z00 x00)))
 (let ((?x1132 (* (- 18) ?x881)))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x738 (* z00 z00 y00 y00)))
 (let ((?x753 (* (- 1) ?x738)))
 (let ((?x695 (* z00 z00 y00)))
 (let ((?x1233 (* (- 10) ?x695)))
 (let ((?x670 (* z00 y00 y00)))
 (let ((?x705 (* (- 12) ?x670)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x531 (* z00 x00)))
 (let ((?x449 (* 36 ?x531)))
 (let ((?x494 (* z00 y00)))
 (let ((?x859 (* 24 ?x494)))
 (let ((?x441 (* y00 x00)))
 (let ((?x432 (* 216 ?x441)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1299 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x432 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x859 ?x449 ?x780 ?x1032 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x705 ?x1233 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x753 ?x785 ?x837 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1132 (* (- 216) (* x y00)) ?x967 (* (- 12) (* y y y00)) ?x1082 (* (- 216) (* x x00)) ?x1172 ?x1176 (* 36 (* x z00 y00)) ?x1279)))
 (let (($x1304 (= ?x1299 0)))
 (let ((?x882 (* 3 ?x881)))
 (let ((?x944 (* 3 ?x695)))
 (let ((?x677 (* (- 1) ?x670)))
 (let ((?x607 (* 18 (* z x00))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x769 (* (- 6) ?x494)))
 (let ((?x468 (* z y00)))
 (let ((?x469 (* 12 ?x468)))
 (let ((?x502 (* (- 18) (* x z))))
 (let ((?x442 (* (- 18) ?x441)))
 (let ((?x437 (* y z)))
 (let ((?x461 (* (- 12) ?x437)))
 (let ((?x135 (* y y z)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1000 (+ ?x64 ?x71 ?x516 ?x573 (* (- 3) (* y z00 z00)) ?x135 ?x461 ?x442 (* (- 18) (* x y)) ?x502 ?x469 ?x769 ?x864 ?x607 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x677 ?x944 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x882 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1007 (= ?x1000 0)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x532 (* 18 ?x531)))
 (let ((?x610 (* 6 ?x494)))
 (let ((?x103 (* y z z00)))
 (let ((?x749 (+ ?x64 ?x71 ?x516 ?x573 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x461 ?x502 ?x469 ?x610 ?x532 ?x538 ?x590 ?x607 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x695 (* (- 18) (* x z00)))))
 (let (($x754 (= ?x749 0)))
 (let ((?x495 (* 18 ?x494)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x589 (+ ?x64 ?x71 ?x516 ?x446 ?x573 ?x76 ?x457 (* (- 6) ?x437) (* (- 12) ?x468) ?x495 (* (- 6) (* z z00)))))
 (let (($x594 (= ?x589 0)))
 (let ((?x50 (* z z)))
 (let ((?x425 (* (- 1) ?x50)))
 (let ((?x424 (* (- 12) y00)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x427 (= (+ ?x45 ?x46 ?x423 ?x424 ?x425 ?x353) 0)))
 (let (($x345 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x1245 (and $x345 $x427 $x594 $x754 $x1007 $x1304 (not (= ?x1134 0)))))
 (let ((?x1879 (+ ?x1204 ?x674 ?x748 ?x546 ?x371 ?x640 ?x1456 ?x991 ?x1438 ?x1025 ?x1485 ?x1006 ?x984 ?x478 ?x700 ?x440 ?x1361 ?x1521 ?x1513 ?x1518 ?x1344 ?x1178 ?x394 ?x1077 ?x1085 ?x1062 ?x402 ?x1086 ?x1088 ?x1089 ?x1090 ?x1091 ?x567 ?x577 ?x578 ?x2085 ?x1074 ?x1838 ?x1883 ?x1880 ?x1892 ?x1979 ?x1878 ?x2080)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1516 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1290 (= ?x1516 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x1710 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1582 (* (- 108) x)))
 (let ((?x581 (* x00 z)))
 (let ((?x620 (* (- 18) ?x581)))
 (let ((?x727 (* 36 ?x561)))
 (let ((?x593 (* z y)))
 (let ((?x1740 (* 12 ?x593)))
 (let ((?x846 (* z00 y)))
 (let ((?x809 (* (- 6) ?x846)))
 (let ((?x686 (* y00 z00)))
 (let ((?x684 (* 6 ?x686)))
 (let ((?x1207 (* y00 z)))
 (let ((?x1916 (* (- 12) ?x1207)))
 (let ((?x842 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x806 (* z x)))
 (let ((?x447 (* 18 ?x806)))
 (let ((?x630 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x447 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x842 ?x1916 ?x684 (* (- 36) (* y00 y)) ?x809 ?x1740 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x727 ?x620 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1582 ?x67 (* (- 18) (* y00 x)) ?x1710 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x328 (* z00 z00 y)))
 (let ((?x470 (* 6 ?x846)))
 (let ((?x1128 (* (- 6) ?x686)))
 (let ((?x1894 (* 24 ?x561)))
 (let ((?x591 (* y00 z00 z)))
 (let ((?x713 (+ ?x591 ?x1740 ?x447 (* (- 18) (* x00 z00)) (* (- 12) ?x535) ?x1894 ?x620 ?x1916 ?x1128 (* (- 12) (* y00 y)) ?x1582 ?x67 ?x470 ?x1710 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x328)))
 (let ((?x1208 (* 12 ?x1207)))
 (let ((?x1708 (* (- 6) ?x353)))
 (let ((?x1736 (+ (* 6 ?x593) ?x55 ?x1708 ?x1208 (* (- 18) ?x686) ?x1582 ?x67 (* 6 (* z00 z)) ?x1710 ?x74 (* (- 1) (* z00 z00 z)))))
 (let (($x2078 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x353 ?x424 ?x45 ?x46 ?x423 ?x425) 0) (= ?x1736 0) (= ?x713 0) (= ?x630 0) $x1290 (not (= ?x1879 0)))))
 (rewrite (= $x2078 $x1245)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x562 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x1947 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1979 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1537 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1622 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1630 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1908 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2085 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1821 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1549 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1592 (* x00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2013 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1662 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1678 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1868 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2109 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1931 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2028 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1585 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1712 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x669 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x939 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1748 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1329 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x981 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1104 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1608 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1575 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x700 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1030 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x317 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x392 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x368 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x527 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1148 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1248 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x971 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1482 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x933 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1527 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x888 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1204 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1652 (+ (* (- 1) ?x1204) (* (- 108) ?x1168) (* 18 ?x888) (* 108 ?x1527) (* (- 72) ?x933) (* (- 12) ?x1482) (* (- 72) ?x971) (* (- 12) ?x1248) ?x1148 (* 72 ?x527) (* 12 ?x368) ?x392 (* (- 6) ?x317) (* 108 ?x1030) (* (- 1) ?x700) (* (- 72) ?x1575) (* 6 ?x1608) (* 108 ?x1104) (* (- 6) ?x981) (* 6 ?x1329) ?x1748 (* (- 6) ?x939) (* 72 ?x669) (* (- 18) ?x1712) (* (- 108) ?x1585) ?x2028 (* (- 18) ?x1931) (* (- 6) ?x2109) (* 12 ?x1868) (* 6 ?x1678) (* 72 ?x1662) (* (- 108) ?x2013) (* (- 108) ?x1592) (* (- 6) ?x1549) (* 18 ?x1821) (* (- 1) ?x2085) (* 6 ?x1908) (* 6 ?x1630) (* 6 ?x1622) (* (- 72) ?x1373) (* 108 ?x1537) (* (- 1) ?x1979) (* 72 ?x1962) (* (- 6) ?x1947))))
 (let ((?x1278 (* x00 x00)))
 (let ((?x1279 (* 108 ?x1278)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x966 (* y00 y00 y00)))
 (let ((?x967 (* 16 ?x966)))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x1516 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1290 (= ?x1516 0)))
 (let ((?x987 (* y00 z y)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x961 (* z y y)))
 (let ((?x581 (* x00 z)))
 (let ((?x582 (* 18 ?x581)))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x593 (* z y)))
 (let ((?x1182 (* (- 12) ?x593)))
 (let ((?x846 (* z00 y)))
 (let ((?x470 (* 6 ?x846)))
 (let ((?x686 (* y00 z00)))
 (let ((?x1128 (* (- 6) ?x686)))
 (let ((?x1207 (* y00 z)))
 (let ((?x1208 (* 12 ?x1207)))
 (let ((?x806 (* z x)))
 (let ((?x503 (* (- 18) ?x806)))
 (let ((?x608 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x503 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1208 ?x1128 (* 36 (* y00 y)) ?x470 ?x1182 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x864 ?x582 ?x961 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x516 (* 18 (* y00 x)) ?x71 ?x573 ?x987 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x929 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x809 (* (- 6) ?x846)))
 (let ((?x684 (* 6 ?x686)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x1891 (+ (* (- 1) (* y00 z00 z)) ?x1182 ?x503 (* 18 (* x00 z00)) ?x538 ?x590 ?x582 ?x1208 ?x684 (* 12 (* y00 y)) ?x64 ?x516 ?x809 ?x71 ?x573 ?x99 (* (- 18) (* z00 x)) ?x929 (* (- 1) (* z00 z00 y)))))
 (let ((?x1076 (* z00 z00 z)))
 (let ((?x1916 (* (- 12) ?x1207)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x1087 (+ (* (- 6) ?x593) ?x446 ?x457 ?x1916 (* 18 ?x686) ?x64 ?x516 (* (- 6) (* z00 z)) ?x71 ?x573 ?x1076)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1342 (* (- 1) ?x353)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1342 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1087 0) (= ?x1891 0) (= ?x608 0) $x1290 (not (= ?x1652 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x443 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x1947 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2080 (* 6 ?x1947)))
 (let ((?x1962 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1878 (* (- 72) ?x1962)))
 (let ((?x1979 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1537 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1892 (* (- 108) ?x1537)))
 (let ((?x1373 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1880 (* 72 ?x1373)))
 (let ((?x1622 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1883 (* (- 6) ?x1622)))
 (let ((?x1630 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1838 (* (- 6) ?x1630)))
 (let ((?x1908 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1074 (* (- 6) ?x1908)))
 (let ((?x2085 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1821 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x578 (* (- 18) ?x1821)))
 (let ((?x1549 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x577 (* 6 ?x1549)))
 (let ((?x1592 (* x00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x567 (* 108 ?x1592)))
 (let ((?x2013 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1091 (* 108 ?x2013)))
 (let ((?x1662 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1090 (* (- 72) ?x1662)))
 (let ((?x1678 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1089 (* (- 6) ?x1678)))
 (let ((?x1868 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1088 (* (- 12) ?x1868)))
 (let ((?x2109 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1086 (* 6 ?x2109)))
 (let ((?x1931 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x402 (* 18 ?x1931)))
 (let ((?x2028 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1062 (* (- 1) ?x2028)))
 (let ((?x1585 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1085 (* 108 ?x1585)))
 (let ((?x1712 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1077 (* 18 ?x1712)))
 (let ((?x669 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x394 (* (- 72) ?x669)))
 (let ((?x939 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1178 (* 6 ?x939)))
 (let ((?x1748 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1344 (* (- 1) ?x1748)))
 (let ((?x1329 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1518 (* (- 6) ?x1329)))
 (let ((?x981 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1513 (* 6 ?x981)))
 (let ((?x1104 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1521 (* (- 108) ?x1104)))
 (let ((?x1608 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1361 (* (- 6) ?x1608)))
 (let ((?x1575 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x440 (* 72 ?x1575)))
 (let ((?x700 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1030 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x478 (* (- 108) ?x1030)))
 (let ((?x317 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x984 (* 6 ?x317)))
 (let ((?x392 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1006 (* (- 1) ?x392)))
 (let ((?x368 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1485 (* (- 12) ?x368)))
 (let ((?x527 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1025 (* (- 72) ?x527)))
 (let ((?x1148 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1438 (* (- 1) ?x1148)))
 (let ((?x1248 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x991 (* 12 ?x1248)))
 (let ((?x971 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1456 (* 72 ?x971)))
 (let ((?x1482 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x640 (* 12 ?x1482)))
 (let ((?x933 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x371 (* 72 ?x933)))
 (let ((?x1527 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x546 (* (- 108) ?x1527)))
 (let ((?x888 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x748 (* (- 18) ?x888)))
 (let ((?x1168 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x674 (* 108 ?x1168)))
 (let ((?x1204 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1879 (+ ?x1204 ?x674 ?x748 ?x546 ?x371 ?x640 ?x1456 ?x991 ?x1438 ?x1025 ?x1485 ?x1006 ?x984 ?x478 ?x700 ?x440 ?x1361 ?x1521 ?x1513 ?x1518 ?x1344 ?x1178 ?x394 ?x1077 ?x1085 ?x1062 ?x402 ?x1086 ?x1088 ?x1089 ?x1090 ?x1091 ?x567 ?x577 ?x578 ?x2085 ?x1074 ?x1838 ?x1883 ?x1880 ?x1892 ?x1979 ?x1878 ?x2080)))
 (let ((?x1278 (* x00 x00)))
 (let ((?x1279 (* 108 ?x1278)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x966 (* y00 y00 y00)))
 (let ((?x967 (* 16 ?x966)))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x1516 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1290 (= ?x1516 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x1710 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1582 (* (- 108) x)))
 (let ((?x581 (* x00 z)))
 (let ((?x620 (* (- 18) ?x581)))
 (let ((?x727 (* 36 ?x561)))
 (let ((?x593 (* z y)))
 (let ((?x1740 (* 12 ?x593)))
 (let ((?x846 (* z00 y)))
 (let ((?x809 (* (- 6) ?x846)))
 (let ((?x686 (* y00 z00)))
 (let ((?x684 (* 6 ?x686)))
 (let ((?x1207 (* y00 z)))
 (let ((?x1916 (* (- 12) ?x1207)))
 (let ((?x842 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x806 (* z x)))
 (let ((?x447 (* 18 ?x806)))
 (let ((?x630 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x447 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x842 ?x1916 ?x684 (* (- 36) (* y00 y)) ?x809 ?x1740 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x727 ?x620 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1582 ?x67 (* (- 18) (* y00 x)) ?x1710 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x328 (* z00 z00 y)))
 (let ((?x470 (* 6 ?x846)))
 (let ((?x1128 (* (- 6) ?x686)))
 (let ((?x1894 (* 24 ?x561)))
 (let ((?x591 (* y00 z00 z)))
 (let ((?x713 (+ ?x591 ?x1740 ?x447 (* (- 18) (* x00 z00)) (* (- 12) ?x535) ?x1894 ?x620 ?x1916 ?x1128 (* (- 12) (* y00 y)) ?x1582 ?x67 ?x470 ?x1710 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x328)))
 (let ((?x1208 (* 12 ?x1207)))
 (let ((?x353 (* z00 z00)))
 (let ((?x1708 (* (- 6) ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1736 (+ (* 6 ?x593) ?x55 ?x1708 ?x1208 (* (- 18) ?x686) ?x1582 ?x67 (* 6 (* z00 z)) ?x1710 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x425 (* (- 1) ?x50)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x424 (* (- 12) y00)))
 (let (($x2078 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x353 ?x424 ?x45 ?x46 ?x423 ?x425) 0) (= ?x1736 0) (= ?x713 0) (= ?x630 0) $x1290 (not (= ?x1879 0)))))
 (let ((?x1652 (+ (* (- 1) ?x1204) (* (- 108) ?x1168) (* 18 ?x888) (* 108 ?x1527) (* (- 72) ?x933) (* (- 12) ?x1482) (* (- 72) ?x971) (* (- 12) ?x1248) ?x1148 (* 72 ?x527) (* 12 ?x368) ?x392 (* (- 6) ?x317) (* 108 ?x1030) (* (- 1) ?x700) (* (- 72) ?x1575) (* 6 ?x1608) (* 108 ?x1104) (* (- 6) ?x981) (* 6 ?x1329) ?x1748 (* (- 6) ?x939) (* 72 ?x669) (* (- 18) ?x1712) (* (- 108) ?x1585) ?x2028 (* (- 18) ?x1931) (* (- 6) ?x2109) (* 12 ?x1868) (* 6 ?x1678) (* 72 ?x1662) (* (- 108) ?x2013) (* (- 108) ?x1592) (* (- 6) ?x1549) (* 18 ?x1821) (* (- 1) ?x2085) (* 6 ?x1908) (* 6 ?x1630) (* 6 ?x1622) (* (- 72) ?x1373) (* 108 ?x1537) (* (- 1) ?x1979) (* 72 ?x1962) (* (- 6) ?x1947))))
 (let ((?x987 (* y00 z y)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x961 (* z y y)))
 (let ((?x582 (* 18 ?x581)))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x1182 (* (- 12) ?x593)))
 (let ((?x503 (* (- 18) ?x806)))
 (let ((?x608 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x503 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) ?x842) ?x1208 ?x1128 (* 36 (* y00 y)) ?x470 ?x1182 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x864 ?x582 ?x961 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x516 (* 18 (* y00 x)) ?x71 ?x573 ?x987 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) ?x328))))
 (let ((?x929 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x1891 (+ (* (- 1) ?x591) ?x1182 ?x503 (* 18 (* x00 z00)) ?x538 ?x590 ?x582 ?x1208 ?x684 (* 12 (* y00 y)) ?x64 ?x516 ?x809 ?x71 ?x573 ?x99 (* (- 18) (* z00 x)) ?x929 (* (- 1) ?x328))))
 (let ((?x1076 (* z00 z00 z)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x1087 (+ (* (- 6) ?x593) ?x446 ?x457 ?x1916 (* 18 ?x686) ?x64 ?x516 (* (- 6) (* z00 z)) ?x71 ?x573 ?x1076)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1342 (* (- 1) ?x353)))
 (let (($x1167 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1342 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1087 0) (= ?x1891 0) (= ?x608 0) $x1290 (not (= ?x1652 0)))))
 (rewrite (= $x1167 $x2078))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x300 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x218 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x294 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x292 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x290 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x288 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x286 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x284 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x283 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x282 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x280 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00 z00)))
 (let ((?x278 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00)))
 (let ((?x274 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x273 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x272 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x270 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x269 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x268 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x265 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x264 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x262 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x259 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x258 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x256 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x254 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x252 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x251 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x249 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x247 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x246 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x243 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x242 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x240 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x238 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x236 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x235 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x234 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x233 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x228 (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x227 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x226 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x225 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218)))
 (let ((?x223 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x222 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x220 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x29 (- 1)))
 (let ((?x219 (* ?x29 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x237 (+ (- (- (- (- (+ (- ?x219 ?x220) ?x222 ?x223) ?x225) ?x226) ?x227) ?x228) ?x233 ?x234 ?x235 ?x236)))
 (let ((?x253 (+ (- (+ (- (- (+ (- ?x237 ?x238) ?x240) ?x242) ?x243) ?x246 ?x247) ?x249) ?x251 ?x252)))
 (let ((?x267 (- (- (+ (- (- (+ (- ?x253 ?x254) ?x256) ?x258) ?x259) ?x262) ?x264) ?x265)))
 (let ((?x281 (- (+ (- (- (- (+ ?x267 ?x268 ?x269 ?x270) ?x272) ?x273) ?x274) ?x278) ?x280)))
 (let ((?x295 (- (+ (- (+ (- (+ ?x281 ?x282 ?x283 ?x284) ?x286) ?x288) ?x290) ?x292) ?x294)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* ?x29 z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x295 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x654 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x1947 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1979 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1537 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1622 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1630 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1908 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2085 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1821 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1549 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1592 (* x00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2013 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1662 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1678 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1868 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2109 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1931 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2028 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1585 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1712 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x669 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x939 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1748 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1329 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x981 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1104 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1608 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1575 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x700 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1030 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x317 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x392 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x368 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x527 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1148 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1248 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x971 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1482 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x933 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1527 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x888 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1204 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1652 (+ (* (- 1) ?x1204) (* (- 108) ?x1168) (* 18 ?x888) (* 108 ?x1527) (* (- 72) ?x933) (* (- 12) ?x1482) (* (- 72) ?x971) (* (- 12) ?x1248) ?x1148 (* 72 ?x527) (* 12 ?x368) ?x392 (* (- 6) ?x317) (* 108 ?x1030) (* (- 1) ?x700) (* (- 72) ?x1575) (* 6 ?x1608) (* 108 ?x1104) (* (- 6) ?x981) (* 6 ?x1329) ?x1748 (* (- 6) ?x939) (* 72 ?x669) (* (- 18) ?x1712) (* (- 108) ?x1585) ?x2028 (* (- 18) ?x1931) (* (- 6) ?x2109) (* 12 ?x1868) (* 6 ?x1678) (* 72 ?x1662) (* (- 108) ?x2013) (* (- 108) ?x1592) (* (- 6) ?x1549) (* 18 ?x1821) (* (- 1) ?x2085) (* 6 ?x1908) (* 6 ?x1630) (* 6 ?x1622) (* (- 72) ?x1373) (* 108 ?x1537) (* (- 1) ?x1979) (* 72 ?x1962) (* (- 6) ?x1947))))
 (let ((?x1278 (* x00 x00)))
 (let ((?x1279 (* 108 ?x1278)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x966 (* y00 y00 y00)))
 (let ((?x967 (* 16 ?x966)))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x1516 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1290 (= ?x1516 0)))
 (let ((?x987 (* y00 z y)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x961 (* z y y)))
 (let ((?x581 (* x00 z)))
 (let ((?x582 (* 18 ?x581)))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x593 (* z y)))
 (let ((?x1182 (* (- 12) ?x593)))
 (let ((?x846 (* z00 y)))
 (let ((?x470 (* 6 ?x846)))
 (let ((?x686 (* y00 z00)))
 (let ((?x1128 (* (- 6) ?x686)))
 (let ((?x1207 (* y00 z)))
 (let ((?x1208 (* 12 ?x1207)))
 (let ((?x806 (* z x)))
 (let ((?x503 (* (- 18) ?x806)))
 (let ((?x608 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x503 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1208 ?x1128 (* 36 (* y00 y)) ?x470 ?x1182 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x864 ?x582 ?x961 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x516 (* 18 (* y00 x)) ?x71 ?x573 ?x987 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x929 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x809 (* (- 6) ?x846)))
 (let ((?x684 (* 6 ?x686)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x1891 (+ (* (- 1) (* y00 z00 z)) ?x1182 ?x503 (* 18 (* x00 z00)) ?x538 ?x590 ?x582 ?x1208 ?x684 (* 12 (* y00 y)) ?x64 ?x516 ?x809 ?x71 ?x573 ?x99 (* (- 18) (* z00 x)) ?x929 (* (- 1) (* z00 z00 y)))))
 (let ((?x1076 (* z00 z00 z)))
 (let ((?x1916 (* (- 12) ?x1207)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x1087 (+ (* (- 6) ?x593) ?x446 ?x457 ?x1916 (* 18 ?x686) ?x64 ?x516 (* (- 6) (* z00 z)) ?x71 ?x573 ?x1076)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1342 (* (- 1) ?x353)))
 (let (($x1167 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1342 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1087 0) (= ?x1891 0) (= ?x608 0) $x1290 (not (= ?x1652 0)))))
 (let ((?x218 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x294 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x292 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x290 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x288 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x286 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x284 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x283 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x282 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x280 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00 z00)))
 (let ((?x278 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00)))
 (let ((?x274 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x273 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x272 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x270 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x269 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x268 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x265 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x264 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x262 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x259 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x258 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x256 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x254 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x252 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x251 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x249 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x247 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x246 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x243 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x242 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x240 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x238 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x236 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x235 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x234 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x233 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x228 (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x227 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x226 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x225 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218)))
 (let ((?x223 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x222 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x220 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x29 (- 1)))
 (let ((?x219 (* ?x29 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x237 (+ (- (- (- (- (+ (- ?x219 ?x220) ?x222 ?x223) ?x225) ?x226) ?x227) ?x228) ?x233 ?x234 ?x235 ?x236)))
 (let ((?x253 (+ (- (+ (- (- (+ (- ?x237 ?x238) ?x240) ?x242) ?x243) ?x246 ?x247) ?x249) ?x251 ?x252)))
 (let ((?x267 (- (- (+ (- (- (+ (- ?x253 ?x254) ?x256) ?x258) ?x259) ?x262) ?x264) ?x265)))
 (let ((?x281 (- (+ (- (- (- (+ ?x267 ?x268 ?x269 ?x270) ?x272) ?x273) ?x274) ?x278) ?x280)))
 (let ((?x295 (- (+ (- (+ (- (+ ?x281 ?x282 ?x283 ?x284) ?x286) ?x288) ?x290) ?x292) ?x294)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* ?x29 z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x299 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x295 0))))))
 (rewrite (= $x299 $x1167)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x301 (asserted $x300)))
 (let ((@x1210 (mp (mp @x301 (quant-intro (proof-bind ?x654) (= $x300 $x562)) $x562) (rewrite (= $x562 $x562)) $x562)))
 (let ((@x521 (mp (mp @x1210 (quant-intro (proof-bind ?x443) (= $x562 $x2074)) $x2074) (quant-intro (proof-bind ?x460) (= $x2074 $x1126)) $x1126)))
 (let ((@x704 (mp (mp~ @x521 (sk (~ $x1126 $x779)) $x779) (rewrite (= $x779 $x1177)) $x1177)))
 (let ((@x672 (and-elim @x704 $x1841)))
 (let ((@x1500 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1841) $x315)) @x672 $x315)))
 (let (($x624 (>= ?x1856 0)))
 (let ((@x329 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1841) $x624)) @x672 $x624)))
 (let (($x1925 (<= ?x1918 0)))
 (let ((@x1572 (and-elim @x704 $x1511)))
 (let ((@x857 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1511) $x1925)) @x1572 $x1925)))
 (let (($x1839 (>= ?x1918 0)))
 (let ((@x1005 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1511) $x1839)) @x1572 $x1839)))
 (let (($x1433 (<= ?x405 0)))
 (let ((@x566 (and-elim @x704 $x605)))
 (let ((@x400 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x605) $x1433)) @x566 $x1433)))
 (let (($x340 (>= ?x405 0)))
 (let ((@x374 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x605) $x340)) @x566 $x340)))
 (let (($x1845 (<= ?x393 0)))
 (let ((@x1416 (and-elim @x704 $x399)))
 (let ((@x350 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x399) $x1845)) @x1416 $x1845)))
 (let (($x1356 (>= ?x393 0)))
 (let ((@x1483 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x399) $x1356)) @x1416 $x1356)))
 (let (($x1654 (<= ?x1212 0)))
 (let ((@x899 (and-elim @x704 $x477)))
 (let ((@x1621 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x477) $x1654)) @x899 $x1654)))
 (let (($x876 (>= ?x1212 0)))
 (let ((@x1426 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x477) $x876)) @x899 $x876)))
 (let (($x323 (<= ?x765 0)))
 (let ((@x574 (and-elim @x704 $x1028)))
 (let ((@x1313 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1028) $x323)) @x574 $x323)))
 (let (($x972 (>= ?x765 0)))
 (let ((@x1001 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1028) $x972)) @x574 $x972)))
 (let (($x347 (not (<= ?x1198 0))))
 (let (($x1316 (>= ?x1198 0)))
 (let ((@x1156 ((_ th-lemma arith) (hypothesis (not $x1316)) @x1426 @x1621 @x1005 @x857 @x374 @x400 @x1426 @x1621 @x329 @x1500 @x1005 @x857 @x1483 @x350 @x1483 @x350 @x1005 @x857 @x1483 @x350 @x1001 @x1313 @x329 @x1500 @x1426 @x1621 @x1483 @x350 @x329 @x1500 @x374 @x400 @x1005 @x857 @x329 @x1500 false)))
 (let ((@x1923 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1147 $x347 (not $x1316))) (and-elim @x704 $x1769) (or $x347 (not $x1316)))))
 ((_ th-lemma arith) (unit-resolution @x1923 (lemma @x1156 $x1316) $x347) @x1426 @x1621 @x1005 @x857 @x374 @x400 @x1426 @x1621 @x329 @x1500 @x1005 @x857 @x1483 @x350 @x1483 @x350 @x1005 @x857 @x1483 @x350 @x1001 @x1313 @x329 @x1500 @x1426 @x1621 @x1483 @x350 @x329 @x1500 @x374 @x400 @x1005 @x857 @x329 @x1500 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        28
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-grobner             2
 :arith-max-min             796
 :arith-nonlinear-bounds    20
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-pivots              7
 :arith-row-summations      10
 :arith-tableau-max-columns 140
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                7.94
 :memory                    3.59
 :mk-bool-var               27
 :mk-clause                 22
 :num-allocs                982536431
 :num-checks                1
 :propagations              14
 :rlimit-count              535004
 :time                      0.38
 :total-time                0.40)
