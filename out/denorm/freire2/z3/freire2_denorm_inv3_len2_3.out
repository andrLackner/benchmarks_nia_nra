unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x271 (* r00 r00)))
 (let ((?x1569 (* (- 3) ?x271)))
 (let ((?x1171 (* (- 1) s!1)))
 (let ((?x1819 (+ s00 ?x1171 ?x1569 (* 3 (* r!2 r!2)))))
 (let (($x855 (<= ?x1819 0)))
 (let (($x944 (= ?x1819 0)))
 (let ((?x1481 (* r!2 r!2)))
 (let ((?x1712 (* 18 ?x1481)))
 (let ((?x1295 (* 9 r!2)))
 (let ((?x617 (* s00 r00 r00)))
 (let ((?x618 (* 6 ?x617)))
 (let ((?x561 (* s00 s00)))
 (let ((?x574 (* (- 4) ?x561)))
 (let ((?x514 (* s!1 s!1)))
 (let ((?x513 (* 2 ?x514)))
 (let ((?x492 (* r00 x00)))
 (let ((?x506 (* (- 18) ?x492)))
 (let ((?x396 (* s00 r00)))
 (let ((?x1861 (* 3 ?x396)))
 (let ((?x1564 (* (- 18) ?x271)))
 (let ((?x1389 (* 18 x!0)))
 (let ((?x1376 (* (- 12) s!1)))
 (let ((?x1683 (* (- 18) x00)))
 (let ((?x885 (* (- 9) r00)))
 (let ((?x1759 (* 12 s00)))
 (let ((?x585 (+ ?x1759 ?x885 ?x1683 ?x1376 ?x1389 ?x1564 (* 2 (* s00 s!1)) ?x1861 (* (- 6) (* s00 r00 r!2)) ?x506 ?x513 ?x574 (* (- 21) (* r00 s!1)) ?x618 (* 18 (* x!0 r!2)) (* (- 3) (* s!1 r!2)) (* 6 (* r00 s!1 r!2)) (* (- 6) (* r00 r00 s!1)) (* 18 (* r00 x!0)) (* (- 18) (* x00 r!2)) ?x1295 (* 21 (* s00 r!2)) ?x1712 (* (- 36) (* r00 r00 r!2)) (* 36 (* r00 r!2 r!2)))))
 (let ((?x653 (* 6 r!2)))
 (let ((?x770 (+ 3 s!1 ?x653)))
 (let ((?x668 (+ ?x1171 x!0)))
 (let ((?x579 (+ 1 r!2)))
 (let ((?x602 (+ (* ?x579 ?x579 ?x579 ?x770 ?x770) (* (- 1) (* ?x579 ?x668 ?x668 ?x668 ?x770 ?x770 ?x770)))))
 (let ((?x932 (* ?x602 ?x585)))
 (let (($x1248 (= ?x932 0)))
 (let (($x954 (not $x1248)))
 (let ((?x1326 (* x00 x00)))
 (let ((?x795 (* 108 ?x1326)))
 (let ((?x1164 (* s00 s00 s00)))
 (let ((?x599 (* 16 ?x1164)))
 (let ((?x976 (* r00 r00 s!1)))
 (let ((?x989 (* 36 ?x976)))
 (let ((?x862 (* r00 r00 r00 x00)))
 (let ((?x1262 (* (- 432) ?x862)))
 (let ((?x785 (* s00 x00)))
 (let ((?x1795 (* (- 108) ?x785)))
 (let ((?x1041 (* (- 36) ?x617)))
 (let ((?x1695 (* 51 ?x561)))
 (let ((?x1561 (* 108 ?x492)))
 (let ((?x1693 (* (- 9) s!1)))
 (let ((?x137 (* 9 s00)))
 (let ((?x734 (+ ?x137 ?x1693 (* (- 66) (* s00 s!1)) (* (- 216) (* x00 x!0)) (* (- 54) ?x396) (* (- 216) (* r00 r00 r00 s!1)) (* 216 (* s00 r00 x00)) ?x1561 (* 15 ?x514) ?x1695 (* 54 (* r00 s!1)) (* 36 (* r00 r00 s!1 s!1)) ?x1041 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* (- 12) (* s00 s!1 s!1)) ?x1795 (* (- 108) (* s!1 x!0)) ?x1262 ?x989 (* (- 108) (* r00 x!0)) (* 216 (* s00 r00 r00 r00)) (* 108 (* s00 x!0)) (* 432 (* r00 r00 r00 x!0)) (* 108 (* x!0 x!0)) ?x599 ?x795 (* 108 (* x00 s!1)) (* 108 (* s00 r00 s!1)) (* (- 216) (* s00 r00 x!0)) (* (- 4) (* s!1 s!1 s!1)))))
 (let ((?x857 (* r00 r00 x00)))
 (let ((?x1448 (* 36 ?x857)))
 (let ((?x552 (* (- 6) ?x785)))
 (let ((?x1449 (* 15 ?x561)))
 (let ((?x1751 (* 54 ?x492)))
 (let ((?x1472 (+ ?x137 ?x1693 (* (- 12) (* s00 s!1)) (* (- 24) ?x396) ?x1751 (* (- 2) (* s!1 s!1 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 3) ?x514) ?x1449 (* 24 (* r00 s!1)) ?x1041 (* (- 54) (* x!0 r!2)) (* 2 (* s00 s00 r00)) ?x552 ?x1448 (* (- 6) (* s!1 x!0)) (* (- 36) (* r00 x!0 r!2)) (* 24 (* s!1 r!2)) ?x989 (* (- 54) (* r00 x!0)) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* 54 (* x00 r!2)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 s!1 r!2)) (* (- 24) (* s00 r!2)) (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)) (* 36 (* r00 x00 r!2)))))
 (let (($x1827 (= ?x1472 0)))
 (let ((?x1240 (* 4 ?x561)))
 (let ((?x702 (* 18 ?x492)))
 (let ((?x1793 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x332 (+ ?x44 ?x1793 (* (- 2) (* s00 s!1)) (* (- 9) ?x396) (* 6 (* s00 r00 r!2)) ?x702 (* (- 2) ?x514) ?x1240 (* 9 (* r00 s!1)) (* (- 6) ?x617) (* (- 18) (* x!0 r!2)) (* 9 (* s!1 r!2)) (* (- 6) (* r00 s!1 r!2)) (* 6 ?x976) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* (- 9) (* s00 r!2)))))
 (let (($x1089 (= ?x332 0)))
 (let ((?x1786 (* 3 r!2)))
 (let ((?x439 (* r00 r00 r00)))
 (let ((?x440 (* 12 ?x439)))
 (let ((?x474 (* (- 6) ?x396)))
 (let ((?x1792 (* 6 x!0)))
 (let ((?x471 (* (- 6) x00)))
 (let ((?x470 (* (- 3) r00)))
 (let ((?x841 (+ ?x44 ?x470 ?x471 ?x1793 ?x1792 ?x474 ?x440 (* 2 (* s!1 r!2)) ?x1786 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)))))
 (let (($x953 (= ?x841 0)))
 (let (($x1255 (and $x944 $x953 $x1089 $x1827 (= ?x734 0) $x954)))
 (let ((?x1560 (* (- 6) (* r!2 s00 r00))))
 (let ((?x856 (* s!1 s00)))
 (let ((?x1034 (* 2 ?x856)))
 (let ((?x649 (* r!2 x00)))
 (let ((?x648 (* (- 18) ?x649)))
 (let ((?x720 (* x!0 r00)))
 (let ((?x1182 (* 18 ?x720)))
 (let ((?x1492 (* s!1 r00 r00)))
 (let ((?x736 (* (- 6) ?x1492)))
 (let ((?x1483 (* 6 (* r!2 s!1 r00))))
 (let ((?x1686 (* r!2 x!0)))
 (let ((?x1680 (* 18 ?x1686)))
 (let ((?x1381 (+ ?x1295 ?x1376 ?x1389 ?x1759 ?x885 ?x1683 ?x1712 ?x1564 (* (- 3) (* r!2 s!1)) (* (- 36) (* r!2 r00 r00)) (* 21 (* r!2 s00)) ?x1861 ?x506 ?x513 ?x1680 ?x1483 ?x736 ?x574 ?x1182 ?x618 ?x648 ?x1034 (* (- 21) (* s!1 r00)) ?x1560 (* 36 (* r!2 r!2 r00)))))
 (let ((?x674 (+ 3 ?x653 s!1)))
 (let ((?x663 (+ (* (- 1) (* ?x579 ?x668 ?x668 ?x668 ?x674 ?x674 ?x674)) (* ?x579 ?x579 ?x579 ?x674 ?x674))))
 (let ((?x1356 (* (- 108) ?x1326)))
 (let ((?x1355 (* (- 16) ?x1164)))
 (let ((?x1036 (* s00 r00 r00 r00)))
 (let ((?x1351 (* (- 216) ?x1036)))
 (let ((?x863 (* 432 ?x862)))
 (let ((?x1109 (* 108 ?x785)))
 (let ((?x727 (* s00 s00 r00 r00)))
 (let ((?x728 (* 36 ?x727)))
 (let ((?x662 (* s00 s00 r00)))
 (let ((?x992 (* 108 ?x662)))
 (let ((?x980 (* 36 ?x617)))
 (let ((?x1345 (* (- 51) ?x561)))
 (let ((?x822 (* (- 36) ?x1492)))
 (let ((?x1342 (* (- 108) ?x492)))
 (let ((?x485 (* s00 r00 x00)))
 (let ((?x1341 (* (- 216) ?x485)))
 (let ((?x496 (* 54 ?x396)))
 (let ((?x967 (* (- 9) s00)))
 (let ((?x738 (* 9 s!1)))
 (let ((?x623 (+ ?x738 ?x967 ?x496 ?x1341 ?x1342 (* (- 15) ?x514) ?x822 ?x1345 (* 108 ?x720) (* (- 108) (* x!0 s00)) (* 216 (* s!1 r00 r00 r00)) ?x980 (* 66 ?x856) ?x992 (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x728 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1109 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x863 (* 12 (* s!1 s!1 s00)) ?x1351 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1355 (* 216 (* x!0 x00)) ?x1356)))
 (let ((?x870 (* (- 36) ?x857)))
 (let ((?x786 (* 6 ?x785)))
 (let ((?x680 (* (- 2) ?x662)))
 (let ((?x896 (* (- 15) ?x561)))
 (let ((?x529 (* (- 54) ?x492)))
 (let ((?x544 (* 24 ?x396)))
 (let ((?x1234 (+ ?x738 ?x967 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x544 ?x529 (* 3 ?x514) (* 54 ?x1686) ?x822 (* 36 (* r!2 x!0 r00)) ?x896 (* 54 ?x720) (* (- 6) (* x!0 s00)) ?x980 (* (- 54) ?x649) (* 4 (* s!1 s!1 r00)) (* 12 ?x856) ?x680 (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x786 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x870 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x511 (* 9 ?x396)))
 (let ((?x348 (* (- 3) s00)))
 (let ((?x1570 (+ (* 3 s!1) ?x348 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x511 ?x506 ?x513 ?x1680 ?x1483 ?x736 ?x574 ?x1182 ?x618 ?x648 ?x1034 (* (- 9) (* s!1 r00)) ?x1560)))
 (let ((?x971 (+ ?x1786 ?x1793 ?x1792 ?x44 ?x470 ?x471 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x474 ?x440)))
 (let (($x937 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x1481) (* 3 ?x271)) 0) (= ?x971 0) (= ?x1570 0) (= ?x1234 0) (= ?x623 0) (not (= (* ?x663 ?x1381) 0)))))
 (let (($x765 (exists ((r Int) (s Int) (x Int) )(! (let ((?x709 (* (- 6) (* r s00 r00))))
 (let ((?x658 (* s s00)))
 (let ((?x659 (* 2 ?x658)))
 (let ((?x629 (* r x00)))
 (let ((?x642 (* (- 18) ?x629)))
 (let ((?x617 (* s00 r00 r00)))
 (let ((?x618 (* 6 ?x617)))
 (let ((?x587 (* x r00)))
 (let ((?x588 (* 18 ?x587)))
 (let ((?x561 (* s00 s00)))
 (let ((?x574 (* (- 4) ?x561)))
 (let ((?x535 (* s r00 r00)))
 (let ((?x548 (* (- 6) ?x535)))
 (let ((?x524 (* 6 (* r s r00))))
 (let ((?x519 (* r x)))
 (let ((?x520 (* 18 ?x519)))
 (let ((?x515 (* s s)))
 (let ((?x516 (* 2 ?x515)))
 (let ((?x492 (* r00 x00)))
 (let ((?x506 (* (- 18) ?x492)))
 (let ((?x396 (* s00 r00)))
 (let ((?x1861 (* 3 ?x396)))
 (let ((?x321 (* r r00 r00)))
 (let ((?x1573 (* (- 36) ?x321)))
 (let ((?x271 (* r00 r00)))
 (let ((?x1564 (* (- 18) ?x271)))
 (let ((?x1683 (* (- 18) x00)))
 (let ((?x885 (* (- 9) r00)))
 (let ((?x1759 (* 12 s00)))
 (let ((?x1491 (* 18 x)))
 (let ((?x925 (+ (* 9 r) (* (- 12) s) ?x1491 ?x1759 ?x885 ?x1683 (* 18 (* r r)) ?x1564 (* (- 3) (* r s)) ?x1573 (* 21 (* r s00)) ?x1861 ?x506 ?x516 ?x520 ?x524 ?x548 ?x574 ?x588 ?x618 ?x642 ?x659 (* (- 21) (* s r00)) ?x709 (* 36 (* r r r00)))))
 (let ((?x213 (* 6 r)))
 (let ((?x1366 (+ 3 ?x213 s)))
 (let ((?x1363 (+ 1 r)))
 (let ((?x1885 (* ?x1363 ?x1363 ?x1363 ?x1366 ?x1366)))
 (let ((?x250 (* (- 1) s)))
 (let ((?x1469 (+ ?x250 x)))
 (let (($x848 (= (* (+ (* (- 1) (* ?x1363 ?x1469 ?x1469 ?x1469 ?x1366 ?x1366 ?x1366)) ?x1885) ?x925) 0)))
 (let ((?x1326 (* x00 x00)))
 (let ((?x1356 (* (- 108) ?x1326)))
 (let ((?x1164 (* s00 s00 s00)))
 (let ((?x1355 (* (- 16) ?x1164)))
 (let ((?x1036 (* s00 r00 r00 r00)))
 (let ((?x1351 (* (- 216) ?x1036)))
 (let ((?x862 (* r00 r00 r00 x00)))
 (let ((?x863 (* 432 ?x862)))
 (let ((?x785 (* s00 x00)))
 (let ((?x1109 (* 108 ?x785)))
 (let ((?x727 (* s00 s00 r00 r00)))
 (let ((?x728 (* 36 ?x727)))
 (let ((?x662 (* s00 s00 r00)))
 (let ((?x992 (* 108 ?x662)))
 (let ((?x980 (* 36 ?x617)))
 (let ((?x1345 (* (- 51) ?x561)))
 (let ((?x844 (* (- 36) ?x535)))
 (let ((?x1342 (* (- 108) ?x492)))
 (let ((?x485 (* s00 r00 x00)))
 (let ((?x1341 (* (- 216) ?x485)))
 (let ((?x496 (* 54 ?x396)))
 (let ((?x967 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1357 (+ ?x143 ?x967 ?x496 ?x1341 ?x1342 (* (- 15) ?x515) ?x844 ?x1345 (* 108 ?x587) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x980 (* 66 ?x658) ?x992 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x728 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1109 (* 108 (* s x)) (* (- 108) (* x x)) ?x863 (* 12 (* s s s00)) ?x1351 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1355 (* 216 (* x x00)) ?x1356)))
 (let (($x1358 (= ?x1357 0)))
 (let ((?x857 (* r00 r00 x00)))
 (let ((?x870 (* (- 36) ?x857)))
 (let ((?x786 (* 6 ?x785)))
 (let ((?x680 (* (- 2) ?x662)))
 (let ((?x896 (* (- 15) ?x561)))
 (let ((?x547 (* 3 ?x515)))
 (let ((?x529 (* (- 54) ?x492)))
 (let ((?x544 (* 24 ?x396)))
 (let ((?x1059 (+ ?x143 ?x967 (* (- 24) (* r s)) (* 24 (* r s00)) ?x544 ?x529 ?x547 (* 54 ?x519) ?x844 (* 36 (* r x r00)) ?x896 (* 54 ?x587) (* (- 6) (* x s00)) ?x980 (* (- 54) ?x629) (* 4 (* s s r00)) (* 12 ?x658) ?x680 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x786 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x870 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1064 (= ?x1059 0)))
 (let ((?x670 (* s r00)))
 (let ((?x683 (* (- 9) ?x670)))
 (let ((?x511 (* 9 ?x396)))
 (let ((?x369 (* r s00)))
 (let ((?x655 (* 9 ?x369)))
 (let ((?x315 (* r s)))
 (let ((?x487 (* (- 9) ?x315)))
 (let ((?x348 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x715 (+ ?x47 ?x348 ?x487 ?x655 ?x511 ?x506 ?x516 ?x520 ?x524 ?x548 ?x574 ?x588 ?x618 ?x642 ?x659 ?x683 ?x709)))
 (let (($x722 (= ?x715 0)))
 (let ((?x439 (* r00 r00 r00)))
 (let ((?x440 (* 12 ?x439)))
 (let ((?x474 (* (- 6) ?x396)))
 (let ((?x471 (* (- 6) x00)))
 (let ((?x470 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x469 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x475 (+ ?x43 ?x469 ?x56 ?x44 ?x470 ?x471 (* 2 ?x315) (* (- 12) ?x321) (* 4 ?x369) ?x474 ?x440)))
 (let (($x476 (= ?x475 0)))
 (let (($x304 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x271)) 0)))
 (and $x304 $x476 $x722 $x1064 $x1358 (not $x848)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1574 (exists ((r Int) (s Int) (x Int) )(! (let ((?x47 (* 3 s)))
 (let ((?x1735 (* r00 r00 s00)))
 (let ((?x1743 (* 6 ?x1735)))
 (let ((?x348 (* (- 3) s00)))
 (let ((?x561 (* s00 s00)))
 (let ((?x574 (* (- 4) ?x561)))
 (let ((?x1576 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x875 (* r00 s00)))
 (let ((?x644 (* 9 ?x875)))
 (let ((?x492 (* r00 x00)))
 (let ((?x506 (* (- 18) ?x492)))
 (let ((?x988 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x506 ?x644 ?x1576 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x574 (* 18 (* r00 (+ x (* (- 1) s)))) ?x348 ?x1743 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x931 (+ 3 s ?x213)))
 (let ((?x250 (* (- 1) s)))
 (let ((?x1397 (+ x ?x250)))
 (let ((?x1363 (+ 1 r)))
 (let ((?x1063 (+ (* ?x1363 ?x1363 ?x1363 ?x931 ?x931) (* (- 1) (* ?x1363 ?x1397 ?x1397 ?x1397 ?x931 ?x931 ?x931)))))
 (let (($x956 (not (= (* ?x1063 ?x988) 0))))
 (let ((?x1326 (* x00 x00)))
 (let ((?x795 (* 108 ?x1326)))
 (let ((?x1975 (* (- 9) s)))
 (let ((?x1429 (* (- 36) ?x1735)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1695 (* 51 ?x561)))
 (let ((?x1019 (* r00 r00 s)))
 (let ((?x498 (* 36 ?x1019)))
 (let ((?x1164 (* s00 s00 s00)))
 (let ((?x599 (* 16 ?x1164)))
 (let ((?x785 (* s00 x00)))
 (let ((?x1795 (* (- 108) ?x785)))
 (let ((?x862 (* r00 r00 r00 x00)))
 (let ((?x1262 (* (- 432) ?x862)))
 (let ((?x1561 (* 108 ?x492)))
 (let ((?x830 (+ (* 216 (* r00 s00 x00)) ?x1561 (* (- 54) ?x875) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1262 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1795 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x599 (* (- 108) (* x s)) ?x498 ?x1695 (* (- 108) (* r00 x)) ?x137 ?x1429 ?x1975 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x795)))
 (let (($x842 (= ?x830 0)))
 (let ((?x1449 (* 15 ?x561)))
 (let ((?x857 (* r00 r00 x00)))
 (let ((?x1448 (* 36 ?x857)))
 (let ((?x552 (* (- 6) ?x785)))
 (let ((?x1751 (* 54 ?x492)))
 (let ((?x1454 (+ (* 24 (* s r)) ?x1751 (* (- 36) (* r00 x r)) (* (- 24) ?x875) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x552 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x498 ?x1448 ?x1449 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1429 (* 54 (* x00 r)) ?x1975 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x469 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1240 (* 4 ?x561)))
 (let ((?x702 (* 18 ?x492)))
 (let ((?x1452 (+ (* 9 (* s r)) ?x702 (* (- 9) ?x875) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1019) ?x1240 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1735) (* 18 (* x00 r)) ?x469 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x439 (* r00 r00 r00)))
 (let ((?x440 (* 12 ?x439)))
 (let ((?x471 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x470 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x935 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x469 ?x470 (* 4 (* s00 r)) (* (- 6) ?x875) ?x56 ?x471 ?x440)))
 (let (($x609 (= (+ s00 ?x250 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x609 (= ?x935 0) (= ?x1452 0) (= ?x1454 0) $x842 $x956)))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1769 (lambda ((r Int) (s Int) (x Int) )(let ((?x709 (* (- 6) (* r s00 r00))))
 (let ((?x658 (* s s00)))
 (let ((?x659 (* 2 ?x658)))
 (let ((?x629 (* r x00)))
 (let ((?x642 (* (- 18) ?x629)))
 (let ((?x617 (* s00 r00 r00)))
 (let ((?x618 (* 6 ?x617)))
 (let ((?x587 (* x r00)))
 (let ((?x588 (* 18 ?x587)))
 (let ((?x561 (* s00 s00)))
 (let ((?x574 (* (- 4) ?x561)))
 (let ((?x535 (* s r00 r00)))
 (let ((?x548 (* (- 6) ?x535)))
 (let ((?x524 (* 6 (* r s r00))))
 (let ((?x519 (* r x)))
 (let ((?x520 (* 18 ?x519)))
 (let ((?x515 (* s s)))
 (let ((?x516 (* 2 ?x515)))
 (let ((?x492 (* r00 x00)))
 (let ((?x506 (* (- 18) ?x492)))
 (let ((?x396 (* s00 r00)))
 (let ((?x1861 (* 3 ?x396)))
 (let ((?x321 (* r r00 r00)))
 (let ((?x1573 (* (- 36) ?x321)))
 (let ((?x271 (* r00 r00)))
 (let ((?x1564 (* (- 18) ?x271)))
 (let ((?x1683 (* (- 18) x00)))
 (let ((?x885 (* (- 9) r00)))
 (let ((?x1759 (* 12 s00)))
 (let ((?x1491 (* 18 x)))
 (let ((?x925 (+ (* 9 r) (* (- 12) s) ?x1491 ?x1759 ?x885 ?x1683 (* 18 (* r r)) ?x1564 (* (- 3) (* r s)) ?x1573 (* 21 (* r s00)) ?x1861 ?x506 ?x516 ?x520 ?x524 ?x548 ?x574 ?x588 ?x618 ?x642 ?x659 (* (- 21) (* s r00)) ?x709 (* 36 (* r r r00)))))
 (let ((?x213 (* 6 r)))
 (let ((?x1366 (+ 3 ?x213 s)))
 (let ((?x1363 (+ 1 r)))
 (let ((?x1885 (* ?x1363 ?x1363 ?x1363 ?x1366 ?x1366)))
 (let ((?x250 (* (- 1) s)))
 (let ((?x1469 (+ ?x250 x)))
 (let (($x848 (= (* (+ (* (- 1) (* ?x1363 ?x1469 ?x1469 ?x1469 ?x1366 ?x1366 ?x1366)) ?x1885) ?x925) 0)))
 (let ((?x1326 (* x00 x00)))
 (let ((?x1356 (* (- 108) ?x1326)))
 (let ((?x1164 (* s00 s00 s00)))
 (let ((?x1355 (* (- 16) ?x1164)))
 (let ((?x1036 (* s00 r00 r00 r00)))
 (let ((?x1351 (* (- 216) ?x1036)))
 (let ((?x862 (* r00 r00 r00 x00)))
 (let ((?x863 (* 432 ?x862)))
 (let ((?x785 (* s00 x00)))
 (let ((?x1109 (* 108 ?x785)))
 (let ((?x727 (* s00 s00 r00 r00)))
 (let ((?x728 (* 36 ?x727)))
 (let ((?x662 (* s00 s00 r00)))
 (let ((?x992 (* 108 ?x662)))
 (let ((?x980 (* 36 ?x617)))
 (let ((?x1345 (* (- 51) ?x561)))
 (let ((?x844 (* (- 36) ?x535)))
 (let ((?x1342 (* (- 108) ?x492)))
 (let ((?x485 (* s00 r00 x00)))
 (let ((?x1341 (* (- 216) ?x485)))
 (let ((?x496 (* 54 ?x396)))
 (let ((?x967 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1357 (+ ?x143 ?x967 ?x496 ?x1341 ?x1342 (* (- 15) ?x515) ?x844 ?x1345 (* 108 ?x587) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x980 (* 66 ?x658) ?x992 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x728 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1109 (* 108 (* s x)) (* (- 108) (* x x)) ?x863 (* 12 (* s s s00)) ?x1351 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1355 (* 216 (* x x00)) ?x1356)))
 (let (($x1358 (= ?x1357 0)))
 (let ((?x857 (* r00 r00 x00)))
 (let ((?x870 (* (- 36) ?x857)))
 (let ((?x786 (* 6 ?x785)))
 (let ((?x680 (* (- 2) ?x662)))
 (let ((?x896 (* (- 15) ?x561)))
 (let ((?x547 (* 3 ?x515)))
 (let ((?x529 (* (- 54) ?x492)))
 (let ((?x544 (* 24 ?x396)))
 (let ((?x1059 (+ ?x143 ?x967 (* (- 24) (* r s)) (* 24 (* r s00)) ?x544 ?x529 ?x547 (* 54 ?x519) ?x844 (* 36 (* r x r00)) ?x896 (* 54 ?x587) (* (- 6) (* x s00)) ?x980 (* (- 54) ?x629) (* 4 (* s s r00)) (* 12 ?x658) ?x680 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x786 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x870 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1064 (= ?x1059 0)))
 (let ((?x670 (* s r00)))
 (let ((?x683 (* (- 9) ?x670)))
 (let ((?x511 (* 9 ?x396)))
 (let ((?x369 (* r s00)))
 (let ((?x655 (* 9 ?x369)))
 (let ((?x315 (* r s)))
 (let ((?x487 (* (- 9) ?x315)))
 (let ((?x348 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x715 (+ ?x47 ?x348 ?x487 ?x655 ?x511 ?x506 ?x516 ?x520 ?x524 ?x548 ?x574 ?x588 ?x618 ?x642 ?x659 ?x683 ?x709)))
 (let (($x722 (= ?x715 0)))
 (let ((?x439 (* r00 r00 r00)))
 (let ((?x440 (* 12 ?x439)))
 (let ((?x474 (* (- 6) ?x396)))
 (let ((?x471 (* (- 6) x00)))
 (let ((?x470 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x469 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x475 (+ ?x43 ?x469 ?x56 ?x44 ?x470 ?x471 (* 2 ?x315) (* (- 12) ?x321) (* 4 ?x369) ?x474 ?x440)))
 (let (($x476 (= ?x475 0)))
 (let (($x304 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x271)) 0)))
 (let (($x847 (and $x304 $x476 $x722 $x1064 $x1358 (not $x848))))
 (let ((?x1735 (* r00 r00 s00)))
 (let ((?x1743 (* 6 ?x1735)))
 (let ((?x875 (* r00 s00)))
 (let ((?x644 (* 9 ?x875)))
 (let ((?x988 (+ 9 (* (- 9) (* ?x1363 (+ 3 s ?x213))) ?x506 ?x644 (* 2 (* (+ 3 s ?x213) (+ 3 s ?x213))) (* 18 (* ?x1363 (+ x ?x250))) (* 6 (* r00 ?x1363 (+ 3 s ?x213))) (* (- 6) (* r00 r00 (+ 3 s ?x213))) ?x574 (* 18 (* r00 (+ x ?x250))) ?x348 ?x1743 (* (- 18) (* x00 ?x1363)) ?x47 (* 18 r) (* 9 (* s00 ?x1363)) (* 2 (* s00 (+ 3 s ?x213))) (* (- 9) (* r00 (+ 3 s ?x213))) (* (- 6) (* r00 s00 ?x1363)))))
 (let ((?x931 (+ 3 s ?x213)))
 (let ((?x1397 (+ x ?x250)))
 (let ((?x1063 (+ (* ?x1363 ?x1363 ?x1363 ?x931 ?x931) (* (- 1) (* ?x1363 ?x1397 ?x1397 ?x1397 ?x931 ?x931 ?x931)))))
 (let (($x956 (not (= (* ?x1063 ?x988) 0))))
 (let ((?x795 (* 108 ?x1326)))
 (let ((?x1975 (* (- 9) s)))
 (let ((?x1429 (* (- 36) ?x1735)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1695 (* 51 ?x561)))
 (let ((?x1019 (* r00 r00 s)))
 (let ((?x498 (* 36 ?x1019)))
 (let ((?x599 (* 16 ?x1164)))
 (let ((?x1795 (* (- 108) ?x785)))
 (let ((?x1262 (* (- 432) ?x862)))
 (let ((?x1561 (* 108 ?x492)))
 (let ((?x830 (+ (* 216 (* r00 s00 x00)) ?x1561 (* (- 54) ?x875) (* 15 ?x515) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1262 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1795 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x599 (* (- 108) (* x s)) ?x498 ?x1695 (* (- 108) (* r00 x)) ?x137 ?x1429 ?x1975 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x795)))
 (let (($x842 (= ?x830 0)))
 (let ((?x1449 (* 15 ?x561)))
 (let ((?x1448 (* 36 ?x857)))
 (let ((?x552 (* (- 6) ?x785)))
 (let ((?x1751 (* 54 ?x492)))
 (let ((?x1454 (+ (* 24 (* s r)) ?x1751 (* (- 36) (* r00 x r)) (* (- 24) ?x875) (* (- 3) ?x515) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x552 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x498 ?x1448 ?x1449 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1429 (* 54 (* x00 r)) ?x1975 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x1240 (* 4 ?x561)))
 (let ((?x702 (* 18 ?x492)))
 (let ((?x1452 (+ (* 9 (* s r)) ?x702 (* (- 9) ?x875) (* (- 2) ?x515) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1019) ?x1240 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1735) (* 18 (* x00 r)) ?x469 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x935 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x469 ?x470 (* 4 (* s00 r)) (* (- 6) ?x875) ?x56 ?x471 ?x440)))
 (let (($x609 (= (+ s00 ?x250 (* 3 (* r r)) (* (- 3) ?x271)) 0)))
 (let (($x916 (and $x609 (= ?x935 0) (= ?x1452 0) (= ?x1454 0) $x842 $x956)))
 (rewrite (= $x916 $x847)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x958 (exists ((r Int) (s Int) (x Int) )(! (let ((?x47 (* 3 s)))
 (let ((?x1735 (* r00 r00 s00)))
 (let ((?x1743 (* 6 ?x1735)))
 (let ((?x348 (* (- 3) s00)))
 (let ((?x561 (* s00 s00)))
 (let ((?x574 (* (- 4) ?x561)))
 (let ((?x1576 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x875 (* r00 s00)))
 (let ((?x644 (* 9 ?x875)))
 (let ((?x492 (* r00 x00)))
 (let ((?x506 (* (- 18) ?x492)))
 (let ((?x988 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x506 ?x644 ?x1576 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x574 (* 18 (* r00 (+ x (* (- 1) s)))) ?x348 ?x1743 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x931 (+ 3 s ?x213)))
 (let ((?x250 (* (- 1) s)))
 (let ((?x1397 (+ x ?x250)))
 (let ((?x1363 (+ 1 r)))
 (let ((?x1063 (+ (* ?x1363 ?x1363 ?x1363 ?x931 ?x931) (* (- 1) (* ?x1363 ?x1397 ?x1397 ?x1397 ?x931 ?x931 ?x931)))))
 (let (($x956 (not (= (* ?x1063 ?x988) 0))))
 (let ((?x1326 (* x00 x00)))
 (let ((?x795 (* 108 ?x1326)))
 (let ((?x1975 (* (- 9) s)))
 (let ((?x1429 (* (- 36) ?x1735)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1695 (* 51 ?x561)))
 (let ((?x1019 (* r00 r00 s)))
 (let ((?x498 (* 36 ?x1019)))
 (let ((?x1164 (* s00 s00 s00)))
 (let ((?x599 (* 16 ?x1164)))
 (let ((?x785 (* s00 x00)))
 (let ((?x1795 (* (- 108) ?x785)))
 (let ((?x862 (* r00 r00 r00 x00)))
 (let ((?x1262 (* (- 432) ?x862)))
 (let ((?x1561 (* 108 ?x492)))
 (let ((?x830 (+ (* 216 (* r00 s00 x00)) ?x1561 (* (- 54) ?x875) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1262 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1795 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x599 (* (- 108) (* x s)) ?x498 ?x1695 (* (- 108) (* r00 x)) ?x137 ?x1429 ?x1975 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x795)))
 (let (($x842 (= ?x830 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x967 (* (- 9) s00)))
 (let ((?x896 (* (- 15) ?x561)))
 (let ((?x857 (* r00 r00 x00)))
 (let ((?x870 (* (- 36) ?x857)))
 (let ((?x786 (* 6 ?x785)))
 (let ((?x515 (* s s)))
 (let ((?x547 (* 3 ?x515)))
 (let ((?x529 (* (- 54) ?x492)))
 (let ((?x1600 (+ (* (- 24) (* s r)) ?x529 (* 36 (* r00 x r)) (* 24 ?x875) ?x547 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x786 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1019) ?x870 ?x896 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x967 (* 36 ?x1735) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1613 (* r00 x)))
 (let ((?x1614 (* 18 ?x1613)))
 (let ((?x516 (* 2 ?x515)))
 (let ((?x701 (+ (* (- 9) (* s r)) ?x506 ?x644 ?x516 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1019) ?x574 ?x1614 ?x348 ?x1743 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x458 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x348 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x875) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x609 (= (+ s00 ?x250 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x609 (= ?x458 0) (= ?x701 0) (= ?x1600 0) $x842 $x956))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1382 (lambda ((r Int) (s Int) (x Int) )(let ((?x47 (* 3 s)))
 (let ((?x1735 (* r00 r00 s00)))
 (let ((?x1743 (* 6 ?x1735)))
 (let ((?x348 (* (- 3) s00)))
 (let ((?x561 (* s00 s00)))
 (let ((?x574 (* (- 4) ?x561)))
 (let ((?x1576 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x875 (* r00 s00)))
 (let ((?x644 (* 9 ?x875)))
 (let ((?x492 (* r00 x00)))
 (let ((?x506 (* (- 18) ?x492)))
 (let ((?x988 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x506 ?x644 ?x1576 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x574 (* 18 (* r00 (+ x (* (- 1) s)))) ?x348 ?x1743 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x931 (+ 3 s ?x213)))
 (let ((?x250 (* (- 1) s)))
 (let ((?x1397 (+ x ?x250)))
 (let ((?x1363 (+ 1 r)))
 (let ((?x1063 (+ (* ?x1363 ?x1363 ?x1363 ?x931 ?x931) (* (- 1) (* ?x1363 ?x1397 ?x1397 ?x1397 ?x931 ?x931 ?x931)))))
 (let (($x956 (not (= (* ?x1063 ?x988) 0))))
 (let ((?x1326 (* x00 x00)))
 (let ((?x795 (* 108 ?x1326)))
 (let ((?x1975 (* (- 9) s)))
 (let ((?x1429 (* (- 36) ?x1735)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1695 (* 51 ?x561)))
 (let ((?x1019 (* r00 r00 s)))
 (let ((?x498 (* 36 ?x1019)))
 (let ((?x1164 (* s00 s00 s00)))
 (let ((?x599 (* 16 ?x1164)))
 (let ((?x785 (* s00 x00)))
 (let ((?x1795 (* (- 108) ?x785)))
 (let ((?x862 (* r00 r00 r00 x00)))
 (let ((?x1262 (* (- 432) ?x862)))
 (let ((?x1561 (* 108 ?x492)))
 (let ((?x830 (+ (* 216 (* r00 s00 x00)) ?x1561 (* (- 54) ?x875) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1262 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1795 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x599 (* (- 108) (* x s)) ?x498 ?x1695 (* (- 108) (* r00 x)) ?x137 ?x1429 ?x1975 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x795)))
 (let (($x842 (= ?x830 0)))
 (let ((?x1449 (* 15 ?x561)))
 (let ((?x857 (* r00 r00 x00)))
 (let ((?x1448 (* 36 ?x857)))
 (let ((?x552 (* (- 6) ?x785)))
 (let ((?x1751 (* 54 ?x492)))
 (let ((?x1454 (+ (* 24 (* s r)) ?x1751 (* (- 36) (* r00 x r)) (* (- 24) ?x875) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x552 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x498 ?x1448 ?x1449 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1429 (* 54 (* x00 r)) ?x1975 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x469 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1240 (* 4 ?x561)))
 (let ((?x702 (* 18 ?x492)))
 (let ((?x1452 (+ (* 9 (* s r)) ?x702 (* (- 9) ?x875) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1019) ?x1240 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1735) (* 18 (* x00 r)) ?x469 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x439 (* r00 r00 r00)))
 (let ((?x440 (* 12 ?x439)))
 (let ((?x471 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x470 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x935 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x469 ?x470 (* 4 (* s00 r)) (* (- 6) ?x875) ?x56 ?x471 ?x440)))
 (let (($x609 (= (+ s00 ?x250 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x916 (and $x609 (= ?x935 0) (= ?x1452 0) (= ?x1454 0) $x842 $x956)))
 (let ((?x143 (* 9 s)))
 (let ((?x967 (* (- 9) s00)))
 (let ((?x896 (* (- 15) ?x561)))
 (let ((?x870 (* (- 36) ?x857)))
 (let ((?x786 (* 6 ?x785)))
 (let ((?x515 (* s s)))
 (let ((?x547 (* 3 ?x515)))
 (let ((?x529 (* (- 54) ?x492)))
 (let ((?x1600 (+ (* (- 24) (* s r)) ?x529 (* 36 (* r00 x r)) (* 24 ?x875) ?x547 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x786 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1019) ?x870 ?x896 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x967 (* 36 ?x1735) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1613 (* r00 x)))
 (let ((?x1614 (* 18 ?x1613)))
 (let ((?x516 (* 2 ?x515)))
 (let ((?x701 (+ (* (- 9) (* s r)) ?x506 ?x644 ?x516 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1019) ?x574 ?x1614 ?x348 ?x1743 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x458 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x348 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x875) (* (- 6) x) ?x59 (* (- 12) ?x439))))
 (let (($x1043 (and $x609 (= ?x458 0) (= ?x701 0) (= ?x1600 0) $x842 $x956)))
 (rewrite (= $x1043 $x916))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x247 (exists ((r Int) (s Int) (x Int) )(! (let ((?x218 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x241 (- (* ?x212 ?x212 ?x212 ?x214 ?x214) (* ?x212 ?x214 ?x214 ?x214 ?x218 ?x218 ?x218))))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x242 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) ?x241)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x242 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x878 (lambda ((r Int) (s Int) (x Int) )(let ((?x47 (* 3 s)))
 (let ((?x1735 (* r00 r00 s00)))
 (let ((?x1743 (* 6 ?x1735)))
 (let ((?x348 (* (- 3) s00)))
 (let ((?x561 (* s00 s00)))
 (let ((?x574 (* (- 4) ?x561)))
 (let ((?x1576 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x875 (* r00 s00)))
 (let ((?x644 (* 9 ?x875)))
 (let ((?x492 (* r00 x00)))
 (let ((?x506 (* (- 18) ?x492)))
 (let ((?x988 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x506 ?x644 ?x1576 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x574 (* 18 (* r00 (+ x (* (- 1) s)))) ?x348 ?x1743 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x931 (+ 3 s ?x213)))
 (let ((?x250 (* (- 1) s)))
 (let ((?x1397 (+ x ?x250)))
 (let ((?x1363 (+ 1 r)))
 (let ((?x1063 (+ (* ?x1363 ?x1363 ?x1363 ?x931 ?x931) (* (- 1) (* ?x1363 ?x1397 ?x1397 ?x1397 ?x931 ?x931 ?x931)))))
 (let (($x956 (not (= (* ?x1063 ?x988) 0))))
 (let ((?x1326 (* x00 x00)))
 (let ((?x795 (* 108 ?x1326)))
 (let ((?x1975 (* (- 9) s)))
 (let ((?x1429 (* (- 36) ?x1735)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1695 (* 51 ?x561)))
 (let ((?x1019 (* r00 r00 s)))
 (let ((?x498 (* 36 ?x1019)))
 (let ((?x1164 (* s00 s00 s00)))
 (let ((?x599 (* 16 ?x1164)))
 (let ((?x785 (* s00 x00)))
 (let ((?x1795 (* (- 108) ?x785)))
 (let ((?x862 (* r00 r00 r00 x00)))
 (let ((?x1262 (* (- 432) ?x862)))
 (let ((?x1561 (* 108 ?x492)))
 (let ((?x830 (+ (* 216 (* r00 s00 x00)) ?x1561 (* (- 54) ?x875) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1262 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1795 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x599 (* (- 108) (* x s)) ?x498 ?x1695 (* (- 108) (* r00 x)) ?x137 ?x1429 ?x1975 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x795)))
 (let (($x842 (= ?x830 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x967 (* (- 9) s00)))
 (let ((?x896 (* (- 15) ?x561)))
 (let ((?x857 (* r00 r00 x00)))
 (let ((?x870 (* (- 36) ?x857)))
 (let ((?x786 (* 6 ?x785)))
 (let ((?x515 (* s s)))
 (let ((?x547 (* 3 ?x515)))
 (let ((?x529 (* (- 54) ?x492)))
 (let ((?x1600 (+ (* (- 24) (* s r)) ?x529 (* 36 (* r00 x r)) (* 24 ?x875) ?x547 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x786 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1019) ?x870 ?x896 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x967 (* 36 ?x1735) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1613 (* r00 x)))
 (let ((?x1614 (* 18 ?x1613)))
 (let ((?x516 (* 2 ?x515)))
 (let ((?x701 (+ (* (- 9) (* s r)) ?x506 ?x644 ?x516 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1019) ?x574 ?x1614 ?x348 ?x1743 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x458 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x348 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x875) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x609 (= (+ s00 ?x250 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1043 (and $x609 (= ?x458 0) (= ?x701 0) (= ?x1600 0) $x842 $x956)))
 (let ((?x218 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x241 (- (* ?x212 ?x212 ?x212 ?x214 ?x214) (* ?x212 ?x214 ?x214 ?x214 ?x218 ?x218 ?x218))))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x242 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) ?x241)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x246 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x242 0))))))
 (rewrite (= $x246 $x1043)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x248 (asserted $x247)))
 (let ((@x673 (mp (mp @x248 (quant-intro (proof-bind ?x878) (= $x247 $x958)) $x958) (rewrite (= $x958 $x958)) $x958)))
 (let ((@x1787 (mp (mp @x673 (quant-intro (proof-bind ?x1382) (= $x958 $x1574)) $x1574) (quant-intro (proof-bind ?x1769) (= $x1574 $x765)) $x765)))
 (let ((@x1195 (mp (mp~ @x1787 (sk (~ $x765 $x937)) $x937) (rewrite (= $x937 $x1255)) $x1255)))
 (let ((@x1258 (and-elim @x1195 $x944)))
 (let ((@x531 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x944) $x855)) @x1258 $x855)))
 (let (($x1702 (>= ?x1819 0)))
 (let ((@x880 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x944) $x1702)) @x1258 $x1702)))
 (let (($x911 (<= ?x332 0)))
 (let ((@x397 (and-elim @x1195 $x1089)))
 (let ((@x1417 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1089) $x911)) @x397 $x911)))
 (let (($x711 (>= ?x332 0)))
 (let ((@x1308 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1089) $x711)) @x397 $x711)))
 (let (($x1768 (<= ?x841 0)))
 (let ((@x1880 (and-elim @x1195 $x953)))
 (let ((@x568 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x953) $x1768)) @x1880 $x1768)))
 (let (($x882 (>= ?x841 0)))
 (let ((@x691 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x953) $x882)) @x1880 $x882)))
 (let (($x803 (<= ?x585 0)))
 (let (($x1142 (<= ?x1472 0)))
 (let ((@x1428 (and-elim @x1195 $x1827)))
 (let ((@x1973 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1827) $x1142)) @x1428 $x1142)))
 (let (($x1667 (>= ?x1472 0)))
 (let ((@x428 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1827) $x1667)) @x1428 $x1667)))
 (let ((@x598 ((_ th-lemma arith) (hypothesis (not $x803)) @x880 @x531 @x428 @x1973 @x1308 @x1417 @x1308 @x1417 @x428 @x1973 @x880 @x531 @x880 @x531 @x691 @x568 false)))
 (let ((@x913 (lemma @x598 $x803)))
 (let (($x4482 (not (>= ?x932 0))))
 (let (($x787 (<= ?x932 0)))
 (let (($x5209 (>= ?x602 0)))
 (let (($x5251 (not $x5209)))
 (let (($x2498 (not $x787)))
 (let ((@x2508 (hypothesis $x2498)))
 (let ((@x5223 (unit-resolution (lemma ((_ th-lemma arith farkas 1 1 1) @x2508 (hypothesis $x5209) @x913 false) (or $x5251 $x787)) @x2508 $x5251)))
 (let ((@x5218 (lemma ((_ th-lemma arith) @x2508 @x5223 @x880 @x531 @x691 @x568 @x1308 @x1417 @x880 @x531 false) $x787)))
 (let ((@x4446 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1248 $x2498 $x4482)) (and-elim @x1195 $x954) (or $x2498 $x4482))))
 (let ((@x5279 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x4446 @x5218 $x4482) (hypothesis (>= ?x585 0)) @x913 false)))
 ((_ th-lemma arith) (lemma @x5279 (not (>= ?x585 0))) @x880 @x531 @x691 @x568 @x1308 @x1417 @x880 @x531 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 115
 :arith-assert-diseq        8
 :arith-assert-lower        933
 :arith-assert-upper        769
 :arith-branch-var          14
 :arith-conflicts           42
 :arith-eq-adapter          14
 :arith-fixed-eqs           181
 :arith-gcd-tests           199
 :arith-gomory-cuts         13
 :arith-grobner             32
 :arith-ineq-splits         14
 :arith-max-min             6112
 :arith-nonlinear-bounds    392
 :arith-nonlinear-horner    407
 :arith-num-rows            30
 :arith-offset-eqs          11
 :arith-patches             49
 :arith-patches_succ        21
 :arith-pivots              603
 :arith-pseudo-nonlinear    210
 :arith-row-summations      2273
 :arith-tableau-max-columns 162
 :arith-tableau-max-rows    30
 :conflicts                 42
 :decisions                 444
 :del-clause                96
 :final-checks              118
 :max-memory                6.60
 :memory                    3.83
 :minimized-lits            1
 :mk-bool-var               286
 :mk-clause                 149
 :num-allocs                11422581417.00
 :num-checks                1
 :propagations              166
 :rlimit-count              2953532
 :time                      12.03
 :total-time                12.02)
