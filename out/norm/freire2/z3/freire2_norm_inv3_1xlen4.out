unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x3345 (* (- 1) s!1)))
 (let ((?x362 (* r00 r00)))
 (let ((?x2524 (* (- 3) ?x362)))
 (let ((?x2522 (+ s00 ?x2524 (* 3 (* r!2 r!2)) ?x3345)))
 (let (($x4476 (<= ?x2522 0)))
 (let (($x2296 (= ?x2522 0)))
 (let ((?x3481 (+ 3 (* 6 r!2) s!1)))
 (let ((?x1567 (+ x!0 ?x3345)))
 (let ((?x3340 (+ 1 r!2)))
 (let ((?x2657 (* 6 (* r00 ?x3340 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481))))
 (let ((?x4978 (* (- 6) (* r00 s00 ?x3340 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481))))
 (let ((?x4151 (* (- 6) (* r00 r00 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481))))
 (let ((?x2053 (* 6 (* r00 r00 s00 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481))))
 (let ((?x3930 (+ (* 9 (* ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* (- 6) (* s00 x!0 s!1 s!1 s!1)) (* 162 (* s00 r00 x!0 s!1)) (* 36 (* s00 r!2 x!0 x!0 s!1)) (* 108 (* s00 r!2 x!0 x!0)) (* 3 (* s00 s!1 s!1 s!1 s!1)) (* 18 (* r00 x00 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* (- 4) (* s00 s00 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481)) (* 108 (* r00 x00 s!1 s!1 s!1)) (* (- 216) (* s00 r!2 x!0 s!1)) (* 216 (* r00 x00 r!2 x!0 x!0 s!1)) (* (- 6) (* s00 r00 r00 x!0 x!0 s!1 s!1)) (* 648 (* r00 x00 r!2 r!2 x!0 x!0)) (* 108 (* r00 x00 x!0 x!0 s!1)) (* 3 (* s00 x!0 x!0 s!1 s!1)) (* 9 (* r00 s00 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481)) (* (- 3) (* ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 2) (* s00 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 36) (* s00 r00 r00 s!1 s!1 s!1)) (* (- 18) (* r00 ?x1567 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* (- 3) (* s00 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481)) (* 144 (* s00 s00 r!2 r!2 x!0 x!0)) (* (- 108) (* s00 r00 r!2 x!0 x!0 s!1)) (* (- 324) (* r00 x00 x!0 s!1)) (* 648 (* r00 x00 r!2 x!0 x!0)) (* (- 6) (* s00 r00 r00 s!1 s!1 s!1 s!1)) (* 12 (* s00 r00 r00 x!0 s!1 s!1 s!1)) (* 18 (* x00 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 162 (* r00 x00 s!1 s!1)) (* 36 (* s00 r!2 s!1 s!1 s!1)) (* 3 (* ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 72 (* s00 r00 r00 x!0 s!1 s!1)) (* 48 (* s00 s00 r!2 s!1 s!1 s!1)) (* 6 (* r00 s00 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 9 (* r00 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* (- 3) (* ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* 36 (* s00 s00 s!1 s!1)) (* (- 288) (* s00 s00 r!2 r!2 x!0 s!1)) (* 36 (* s00 s00 x!0 x!0)) (* 4 (* s00 s00 x!0 x!0 s!1 s!1)) (* 144 (* s00 s00 r!2 x!0 x!0)) (* 144 (* s00 s00 r!2 s!1 s!1)) (* 9 (* r00 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* 18 (* r00 x00 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 24 (* s00 s00 x!0 x!0 s!1)) (* (- 48) (* s00 s00 x!0 s!1 s!1)) (* (- 72) (* s00 r00 r00 r!2 s!1 s!1 s!1)) (* 9 (* s00 ?x3340 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481)) (* (- 18) (* ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481)) (* (- 6) (* r00 r00 s00 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* (- 9) (* r00 s00 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* (- 288) (* s00 s00 r!2 x!0 s!1)) (* 4 (* s00 s00 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 18 (* r00 x00 x!0 x!0 s!1 s!1)) (* 9 (* ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 216) (* r00 x00 x!0 s!1 s!1)) (* (- 6) (* r00 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) ?x2053 (* 162 (* r00 x00 x!0 x!0)) (* (- 36) (* s00 x!0 s!1 s!1)) (* (- 36) (* r00 x00 x!0 s!1 s!1 s!1)) (* 18 (* r00 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481)) (* 108 (* s00 r!2 r!2 s!1 s!1)) (* 18 (* s00 x!0 x!0 s!1)) (* (- 18) (* ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 18 (* s00 r00 x!0 s!1 s!1 s!1)) (* (- 96) (* s00 s00 r!2 x!0 s!1 s!1)) (* (- 1296) (* r00 x00 r!2 x!0 s!1)) (* 3 (* s00 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 4 (* s00 s00 s!1 s!1 s!1 s!1)) (* 27 (* s00 s!1 s!1)) ?x4151 (* 6 (* r00 r00 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* (- 432) (* r00 x00 r!2 x!0 s!1 s!1)) (* 108 (* s00 r!2 r!2 x!0 x!0)) (* 6 (* r00 r00 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 3) (* ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 18 (* x00 ?x3340 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* (- 18) (* x00 ?x3340 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481)) (* 48 (* s00 s00 r!2 x!0 x!0 s!1)) (* (- 216) (* s00 r00 r00 r!2 r!2 x!0 x!0)) (* (- 81) (* s00 r00 s!1 s!1)) (* (- 9) (* ?x3340 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 144 (* s00 r00 r00 r!2 x!0 s!1 s!1)) (* (- 6) (* r00 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 1296) (* r00 x00 r!2 r!2 x!0 s!1)) (* (- 2) (* ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 18) (* r00 x00 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481)) (* (- 72) (* s00 r00 r00 r!2 x!0 x!0 s!1)) (* (- 2) (* ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 18) (* ?x3340 ?x1567 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 432 (* s00 r00 r00 r!2 r!2 x!0 s!1)) (* (- 216) (* s00 r00 r00 r!2 x!0 x!0)) (* 9 (* r00 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 324) (* s00 r00 r!2 s!1 s!1)) (* 18 (* ?x3340 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481)) (* 216 (* s00 r00 r!2 x!0 s!1 s!1)) (* 2 (* s00 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* (- 9) (* s00 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481)) (* 6 (* r00 r00 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 2) (* s00 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* 144 (* s00 s00 r!2 r!2 s!1 s!1)) (* (- 216) (* s00 r!2 r!2 x!0 s!1)) (* (- 9) (* r00 ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* (- 9) (* r00 s00 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) ?x4978 (* 648 (* r00 x00 r!2 s!1 s!1)) (* 648 (* s00 r00 r!2 r!2 x!0 s!1)) (* 648 (* r00 x00 r!2 r!2 s!1 s!1)) (* 3 (* s00 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 18 (* r00 x00 s!1 s!1 s!1 s!1)) (* 108 (* s00 r00 r00 x!0 s!1)) (* (- 54) (* s00 r00 s!1 s!1 s!1)) (* (- 8) (* s00 s00 x!0 s!1 s!1 s!1)) (* (- 216) (* s00 r00 r00 r!2 r!2 s!1 s!1)) (* (- 6) (* r00 ?x3340 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* 2 (* ?x3340 ?x3340 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 54) (* s00 x!0 s!1)) (* 108 (* s00 r!2 s!1 s!1)) (* 9 (* ?x3340 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* 27 (* s00 x!0 x!0)) (* (- 54) (* s00 r00 r00 s!1 s!1)) (* (- 9) (* s00 r00 x!0 x!0 s!1 s!1)) (* (- 36) (* s00 r00 r00 x!0 x!0 s!1)) (* (- 324) (* s00 r00 r!2 x!0 x!0)) (* 18 (* x00 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481)) (* (- 216) (* s00 r00 r00 r!2 s!1 s!1)) (* (- 54) (* s00 r00 r00 x!0 x!0)) (* (- 9) (* s00 r00 s!1 s!1 s!1 s!1)) (* 432 (* s00 r00 r00 r!2 x!0 s!1)) (* (- 324) (* s00 r00 r!2 r!2 s!1 s!1)) (* (- 6) (* r00 r00 s00 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* (- 72) (* s00 s00 x!0 s!1)) (* 24 (* s00 s00 s!1 s!1 s!1)) (* (- 18) (* r00 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481)) (* (- 2) (* ?x1567 ?x1567 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 54) (* s00 r00 x!0 x!0 s!1)) (* 108 (* s00 r00 x!0 s!1 s!1)) (* (- 18) (* r00 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 216 (* r00 x00 r!2 s!1 s!1 s!1)) ?x2657 (* (- 9) (* s00 ?x3340 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 4 (* s00 s00 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 6 (* r00 s00 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481)) (* (- 2) (* s00 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 648 (* s00 r00 r!2 x!0 s!1)) (* (- 72) (* s00 r!2 x!0 s!1 s!1)) (* (- 81) (* s00 r00 x!0 x!0)) (* (- 108) (* s00 r00 r!2 s!1 s!1 s!1)) (* 18 (* s00 s!1 s!1 s!1)) (* (- 324) (* s00 r00 r!2 r!2 x!0 x!0)) (* (- 9) (* s00 ?x3340 ?x1567 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)) (* 6 (* r00 s00 ?x3340 ?x3340 ?x1567 ?x1567 ?x3481 ?x3481 ?x3481)))))
 (let (($x2357 (= ?x3930 0)))
 (let (($x4932 (not $x2357)))
 (let ((?x4548 (* (- 9) s!1)))
 (let ((?x2521 (* r00 r00 s!1)))
 (let ((?x4733 (* 36 ?x2521)))
 (let ((?x1407 (* x00 x00)))
 (let ((?x2090 (* 108 ?x1407)))
 (let ((?x1245 (* s00 s00 s00)))
 (let ((?x3873 (* 16 ?x1245)))
 (let ((?x943 (* r00 r00 r00 x00)))
 (let ((?x4976 (* (- 432) ?x943)))
 (let ((?x866 (* s00 x00)))
 (let ((?x752 (* (- 108) ?x866)))
 (let ((?x708 (* s00 r00 r00)))
 (let ((?x1900 (* (- 36) ?x708)))
 (let ((?x652 (* s00 s00)))
 (let ((?x4043 (* 51 ?x652)))
 (let ((?x583 (* r00 x00)))
 (let ((?x4472 (* 108 ?x583)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2664 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x4472 ?x4043 ?x1900 (* (- 108) (* s00 s00 r00)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 36) (* s00 s00 r00 r00)) ?x752 ?x4976 (* (- 108) (* x!0 s!1)) (* 108 (* x00 s!1)) (* 216 (* s00 r00 r00 r00)) ?x3873 ?x2090 (* 108 (* s00 x!0)) (* 54 (* r00 s!1)) (* (- 108) (* r00 x!0)) (* (- 66) (* s00 s!1)) ?x4733 (* 15 (* s!1 s!1)) (* (- 12) (* s00 s!1 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* 108 (* x!0 x!0)) (* 108 (* s00 r00 s!1)) ?x4548 (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* (- 216) (* x00 x!0)) (* 36 (* r00 r00 s!1 s!1)))))
 (let (($x993 (= ?x2664 0)))
 (let ((?x938 (* r00 r00 x00)))
 (let ((?x4453 (* 36 ?x938)))
 (let ((?x4947 (* (- 6) ?x866)))
 (let ((?x4832 (* 15 ?x652)))
 (let ((?x4910 (* 54 ?x583)))
 (let ((?x4551 (+ ?x137 (* (- 24) (* s00 r00)) ?x4910 ?x4832 ?x1900 (* 2 (* s00 s00 r00)) ?x4947 ?x4453 (* (- 6) (* x!0 s!1)) (* 6 (* x00 s!1)) (* (- 2) (* r!2 s!1 s!1)) (* 6 (* s00 x!0)) (* 24 (* r00 s!1)) (* 54 (* x00 r!2)) (* (- 54) (* r!2 x!0)) (* (- 24) (* s00 r!2)) (* (- 54) (* r00 x!0)) (* (- 12) (* s00 s!1)) (* (- 36) (* r00 r!2 x!0)) (* (- 4) (* r00 s!1 s!1)) (* 36 (* r00 x00 r!2)) (* (- 2) (* s00 r!2 s!1)) (* 4 (* s00 s00 r!2)) ?x4733 (* (- 36) (* r00 r00 x!0)) (* (- 3) (* s!1 s!1)) (* 24 (* r!2 s!1)) (* 2 (* s00 r00 s!1)) ?x4548)))
 (let (($x1772 (= ?x4551 0)))
 (let ((?x3919 (* (- 3) s!1)))
 (let ((?x4322 (* 4 ?x652)))
 (let ((?x2500 (* 18 ?x583)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4716 (+ ?x44 (* (- 9) (* s00 r00)) ?x2500 ?x4322 (* (- 6) ?x708) (* 6 (* s00 r00 r!2)) (* 9 (* r00 s!1)) (* 18 (* x00 r!2)) (* (- 18) (* r!2 x!0)) (* (- 9) (* s00 r!2)) (* (- 6) (* r00 r!2 s!1)) (* (- 18) (* r00 x!0)) (* (- 2) (* s00 s!1)) (* 6 ?x2521) (* (- 2) (* s!1 s!1)) (* 9 (* r!2 s!1)) ?x3919)))
 (let (($x2201 (= ?x4716 0)))
 (let ((?x3562 (* r!2 s!1)))
 (let ((?x3368 (* 2 ?x3562)))
 (let ((?x3934 (* 6 x!0)))
 (let ((?x584 (* 3 r!2)))
 (let ((?x530 (* r00 r00 r00)))
 (let ((?x531 (* 12 ?x530)))
 (let ((?x487 (* s00 r00)))
 (let ((?x565 (* (- 6) ?x487)))
 (let ((?x562 (* (- 6) x00)))
 (let ((?x561 (* (- 3) r00)))
 (let ((?x2125 (+ ?x44 ?x561 ?x562 ?x565 ?x531 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x584 ?x3934 ?x3368 ?x3919)))
 (let (($x1519 (= ?x2125 0)))
 (let (($x3420 (and $x2296 $x1519 $x2201 $x1772 $x993 $x4932)))
 (let ((?x3347 (+ ?x3345 x!0)))
 (let ((?x3922 (* (- 6) (* r00 r00 s00 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481))))
 (let ((?x719 (* (- 6) (* r00 ?x3340 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481))))
 (let ((?x961 (* 6 (* r00 r00 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481))))
 (let ((?x3450 (* 6 (* r00 s00 ?x3340 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481))))
 (let ((?x845 (+ (* 18 (* ?x3340 ?x3347 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 6) (* r00 r00 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 18) (* r00 x00 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 9) (* r00 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* 3 (* s00 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481)) (* (- 27) (* s!1 s!1 s00)) (* (- 18) (* ?x3340 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481)) (* 72 (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* 2 (* ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481 ?x3481)) (* 9 (* s00 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481)) (* 2 (* s00 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* 4 (* s00 s00 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481)) (* 18 (* r00 x00 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481)) (* 9 (* r00 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 9 (* r00 s00 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 6 (* r00 ?x3340 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* 216 (* r!2 x!0 x!0 s00 r00 r00)) (* 36 (* s!1 s!1 s!1 s00 r00 r00)) (* (- 2) (* s00 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 216) (* r!2 s!1 s!1 x!0 s00 r00)) (* (- 3) (* s00 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 648) (* r!2 r!2 s!1 x!0 s00 r00)) (* (- 648) (* r!2 s!1 x!0 s00 r00)) (* (- 18) (* s!1 s!1 s!1 x!0 s00 r00)) (* 54 (* s!1 x!0 x!0 s00 r00)) (* 108 (* r!2 s!1 x!0 x!0 s00 r00)) (* (- 108) (* s!1 s!1 x!0 s00 r00)) (* 3 (* ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* 2 (* s00 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 108) (* s!1 x!0 s00 r00 r00)) (* (- 2) (* ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* 9 (* s00 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 9 (* s!1 s!1 x!0 x!0 s00 r00)) (* 324 (* r!2 r!2 x!0 x!0 s00 r00)) (* 54 (* s!1 s!1 s00 r00 r00)) (* (- 162) (* s!1 x!0 s00 r00)) (* (- 3) (* ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 9) (* r00 s00 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481)) (* 324 (* r!2 x!0 x!0 s00 r00)) (* 54 (* x!0 x!0 s00 r00 r00)) (* 81 (* x!0 x!0 s00 r00)) (* 216 (* r!2 s!1 s!1 s00 r00 r00)) (* (- 18) (* x00 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481)) (* 18 (* r00 ?x3347 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 432) (* r!2 s!1 x!0 s00 r00 r00)) (* (- 72) (* s!1 s!1 x!0 s00 r00 r00)) (* 9 (* s!1 s!1 s!1 s!1 s00 r00)) (* 108 (* r!2 s!1 s!1 s!1 s00 r00)) (* 36 (* s!1 x!0 x!0 s00 r00 r00)) (* 54 (* s!1 s!1 s!1 s00 r00)) (* 216 (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* 324 (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 432) (* r!2 r!2 s!1 x!0 s00 r00 r00)) ?x3450 (* 324 (* r!2 s!1 s!1 s00 r00)) (* 216 (* r!2 r!2 x!0 x!0 s00 r00 r00)) (* (- 9) (* s00 ?x3340 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481)) (* 18 (* x00 ?x3340 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481)) (* 72 (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* (- 144) (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* 81 (* s!1 s!1 s00 r00)) ?x961 (* (- 6) (* r00 r00 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 6) (* r00 r00 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 6) (* r00 s00 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 6) (* r00 s00 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481)) (* (- 4) (* s00 s00 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 9) (* r00 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 2 (* ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* 9 (* r00 s00 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 36 (* s!1 s!1 x!0 s00)) (* 6 (* r00 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* 3 (* ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 216 (* r!2 s!1 x!0 s00)) (* 54 (* s!1 x!0 s00)) (* (- 18) (* s!1 s!1 s!1 s00)) (* (- 108) (* r!2 s!1 s!1 s00)) (* (- 9) (* ?x3340 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 27) (* x!0 x!0 s00)) (* (- 108) (* r!2 x!0 x!0 s00)) (* (- 18) (* s!1 x!0 x!0 s00)) (* (- 3) (* s!1 s!1 x!0 x!0 s00)) (* (- 36) (* r!2 s!1 x!0 x!0 s00)) (* 18 (* r00 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481)) (* (- 108) (* r!2 r!2 s!1 s!1 s00)) (* (- 36) (* r!2 s!1 s!1 s!1 s00)) (* (- 3) (* s!1 s!1 s!1 s!1 s00)) (* 216 (* r!2 r!2 s!1 x!0 s00)) (* 72 (* r!2 s!1 s!1 x!0 s00)) (* (- 18) (* x00 ?x3340 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 6 (* s!1 s!1 s!1 x!0 s00)) (* (- 108) (* r!2 r!2 x!0 x!0 s00)) (* 432 (* r!2 s!1 s!1 x!0 r00 x00)) (* (- 18) (* r00 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481)) (* 1296 (* r!2 s!1 x!0 r00 x00)) (* 6 (* r00 r00 s00 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 18 (* ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481)) (* 324 (* s!1 x!0 r00 x00)) (* 216 (* s!1 s!1 x!0 r00 x00)) (* 1296 (* r!2 r!2 s!1 x!0 r00 x00)) (* 2 (* ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 9) (* ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 36 (* s!1 s!1 s!1 x!0 r00 x00)) (* 9 (* ?x3340 ?x3340 ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 162) (* x!0 x!0 r00 x00)) (* 6 (* s!1 s!1 s!1 s!1 s00 r00 r00)) (* (- 648) (* r!2 x!0 x!0 r00 x00)) (* (- 12) (* s!1 s!1 s!1 x!0 s00 r00 r00)) (* (- 108) (* s!1 x!0 x!0 r00 x00)) (* (- 648) (* r!2 r!2 x!0 x!0 r00 x00)) (* (- 216) (* r!2 s!1 x!0 x!0 r00 x00)) (* 6 (* s!1 s!1 x!0 x!0 s00 r00 r00)) (* (- 18) (* s!1 s!1 x!0 x!0 r00 x00)) (* (- 4) (* s00 s00 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 18) (* s!1 s!1 s!1 s!1 r00 x00)) (* (- 216) (* r!2 s!1 s!1 s!1 r00 x00)) (* (- 108) (* s!1 s!1 s!1 r00 x00)) (* (- 648) (* r!2 r!2 s!1 s!1 r00 x00)) (* (- 648) (* r!2 s!1 s!1 r00 x00)) (* (- 162) (* s!1 s!1 r00 x00)) (* (- 18) (* x00 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 18 (* ?x3340 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 72 (* s!1 x!0 s00 s00)) (* (- 18) (* r00 x00 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 9) (* r00 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 3) (* s00 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 6) (* r00 s00 ?x3340 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 36) (* s!1 s!1 s00 s00)) (* (- 144) (* r!2 s!1 s!1 s00 s00)) (* (- 24) (* s!1 s!1 s!1 s00 s00)) ?x719 (* 288 (* r!2 s!1 x!0 s00 s00)) (* 48 (* s!1 s!1 x!0 s00 s00)) (* (- 36) (* x!0 x!0 s00 s00)) (* (- 144) (* r!2 x!0 x!0 s00 s00)) (* (- 24) (* s!1 x!0 x!0 s00 s00)) (* 2 (* s00 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 9 (* s00 ?x3340 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 48) (* r!2 s!1 s!1 s!1 s00 s00)) (* (- 4) (* s!1 s!1 s!1 s!1 s00 s00)) (* 288 (* r!2 r!2 s!1 x!0 s00 s00)) (* 96 (* r!2 s!1 s!1 x!0 s00 s00)) (* 8 (* s!1 s!1 s!1 x!0 s00 s00)) (* (- 144) (* r!2 r!2 x!0 x!0 s00 s00)) (* (- 9) (* ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* 3 (* ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481 ?x3481)) (* (- 48) (* r!2 s!1 x!0 x!0 s00 s00)) (* 6 (* r00 r00 s00 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 4) (* s!1 s!1 x!0 x!0 s00 s00)) (* 6 (* r00 ?x3340 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* 18 (* r00 ?x3340 ?x3347 ?x3347 ?x3347 ?x3481 ?x3481 ?x3481)) (* (- 144) (* r!2 r!2 s!1 s!1 s00 s00)) ?x3922)))
 (let ((?x1437 (* (- 108) ?x1407)))
 (let ((?x1436 (* (- 16) ?x1245)))
 (let ((?x1117 (* s00 r00 r00 r00)))
 (let ((?x1432 (* (- 216) ?x1117)))
 (let ((?x944 (* 432 ?x943)))
 (let ((?x1190 (* 108 ?x866)))
 (let ((?x792 (* s00 s00 r00 r00)))
 (let ((?x793 (* 36 ?x792)))
 (let ((?x729 (* s00 s00 r00)))
 (let ((?x1073 (* 108 ?x729)))
 (let ((?x1061 (* 36 ?x708)))
 (let ((?x1426 (* (- 51) ?x652)))
 (let ((?x2466 (* s!1 r00 r00)))
 (let ((?x4786 (* (- 36) ?x2466)))
 (let ((?x1423 (* (- 108) ?x583)))
 (let ((?x574 (* s00 r00 x00)))
 (let ((?x1422 (* (- 216) ?x574)))
 (let ((?x581 (* 54 ?x487)))
 (let ((?x1048 (* (- 9) s00)))
 (let ((?x1270 (* 9 s!1)))
 (let ((?x3377 (+ ?x1270 ?x1048 ?x581 ?x1422 ?x1423 (* (- 15) (* s!1 s!1)) ?x4786 ?x1426 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1061 ?x1073 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x793 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1190 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x944 (* 12 (* s!1 s!1 s00)) ?x1432 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1436 (* 216 (* x!0 x00)) ?x1437)))
 (let ((?x951 (* (- 36) ?x938)))
 (let ((?x867 (* 6 ?x866)))
 (let ((?x757 (* (- 2) ?x729)))
 (let ((?x977 (* (- 15) ?x652)))
 (let ((?x612 (* (- 54) ?x583)))
 (let ((?x625 (* 24 ?x487)))
 (let ((?x4710 (+ ?x1270 ?x1048 (* (- 24) ?x3562) (* 24 (* r!2 s00)) ?x625 ?x612 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x4786 ?x977 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1061 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x757 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x867 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x951 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x709 (* 6 ?x708)))
 (let ((?x665 (* (- 4) ?x652)))
 (let ((?x597 (* (- 18) ?x583)))
 (let ((?x602 (* 9 ?x487)))
 (let ((?x439 (* (- 3) s00)))
 (let ((?x2098 (+ (* 3 s!1) ?x439 (* (- 9) ?x3562) (* 9 (* r!2 s00)) ?x602 ?x597 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x2466) ?x665 (* 18 (* x!0 r00)) ?x709 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x2889 (+ ?x584 ?x3919 ?x3934 ?x44 ?x561 ?x562 ?x3368 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x565 ?x531)))
 (let (($x1764 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x362)) 0)))
 (let (($x3923 (and $x1764 (= ?x2889 0) (= ?x2098 0) (= ?x4710 0) (= ?x3377 0) (not (= ?x845 0)))))
 (let (($x3733 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1444 (+ 3 ?x211 s)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x1450 (+ ?x341 x)))
 (let ((?x1457 (+ 1 r)))
 (let ((?x3110 (* (- 6) (* r00 r00 s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444))))
 (let ((?x4890 (* (- 144) (* r r s s s00 s00))))
 (let ((?x4869 (* (- 4) (* s s x x s00 s00))))
 (let ((?x4972 (* (- 48) (* r s x x s00 s00))))
 (let ((?x4842 (* (- 144) (* r r x x s00 s00))))
 (let ((?x4969 (* 8 (* s s s x s00 s00))))
 (let ((?x4967 (* 96 (* r s s x s00 s00))))
 (let ((?x4965 (* 288 (* r r s x s00 s00))))
 (let ((?x4735 (* (- 4) (* s s s s s00 s00))))
 (let ((?x4960 (* (- 48) (* r s s s s00 s00))))
 (let ((?x4971 (* (- 24) (* s x x s00 s00))))
 (let ((?x4970 (* (- 144) (* r x x s00 s00))))
 (let ((?x4949 (* (- 36) (* x x s00 s00))))
 (let ((?x4964 (* 48 (* s s x s00 s00))))
 (let ((?x4962 (* 288 (* r s x s00 s00))))
 (let ((?x3909 (* (- 6) (* r00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444))))
 (let ((?x4974 (* (- 24) (* s s s s00 s00))))
 (let ((?x4973 (* (- 144) (* r s s s00 s00))))
 (let ((?x4874 (* (- 36) (* s s s00 s00))))
 (let ((?x4795 (* 72 (* s x s00 s00))))
 (let ((?x4299 (* (- 162) (* s s r00 x00))))
 (let ((?x4317 (* (- 648) (* r s s r00 x00))))
 (let ((?x4271 (* (- 648) (* r r s s r00 x00))))
 (let ((?x4316 (* (- 108) (* s s s r00 x00))))
 (let ((?x4315 (* (- 216) (* r s s s r00 x00))))
 (let ((?x4233 (* (- 18) (* s s s s r00 x00))))
 (let ((?x4157 (* (- 18) (* s s x x r00 x00))))
 (let ((?x4314 (* (- 216) (* r s x x r00 x00))))
 (let ((?x4126 (* (- 648) (* r r x x r00 x00))))
 (let ((?x4313 (* (- 108) (* s x x r00 x00))))
 (let ((?x4312 (* (- 648) (* r x x r00 x00))))
 (let ((?x4090 (* (- 162) (* x x r00 x00))))
 (let ((?x4311 (* 36 (* s s s x r00 x00))))
 (let ((?x4309 (* 1296 (* r r s x r00 x00))))
 (let ((?x4308 (* 216 (* s s x r00 x00))))
 (let ((?x4307 (* 324 (* s x r00 x00))))
 (let ((?x4306 (* 1296 (* r s x r00 x00))))
 (let ((?x4310 (* 432 (* r s s x r00 x00))))
 (let ((?x3564 (* (- 108) (* r r x x s00))))
 (let ((?x3585 (* 6 (* s s s x s00))))
 (let ((?x3582 (* 72 (* r s s x s00))))
 (let ((?x3581 (* 216 (* r r s x s00))))
 (let ((?x3407 (* (- 3) (* s s s s s00))))
 (let ((?x3580 (* (- 36) (* r s s s s00))))
 (let ((?x3387 (* (- 108) (* r r s s s00))))
 (let ((?x3577 (* (- 36) (* r s x x s00))))
 (let ((?x3337 (* (- 3) (* s s x x s00))))
 (let ((?x3587 (* (- 18) (* s x x s00))))
 (let ((?x3586 (* (- 108) (* r x x s00))))
 (let ((?x3566 (* (- 27) (* x x s00))))
 (let ((?x3578 (* (- 108) (* r s s s00))))
 (let ((?x3579 (* (- 18) (* s s s s00))))
 (let ((?x3532 (* 54 (* s x s00))))
 (let ((?x3584 (* 216 (* r s x s00))))
 (let ((?x3583 (* 36 (* s s x s00))))
 (let ((?x2116 (* 6 (* r00 r00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444))))
 (let ((?x1528 (* 6 (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444))))
 (let ((?x1001 (* s s s00)))
 (let ((?x3328 (* (- 27) ?x1001)))
 (let ((?x4330 (+ (* 18 (* ?x1457 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* r00 x00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 (* s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x3328 (* (- 18) (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 72 (* r s x x s00 r00 r00)) (* 2 (* ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* 9 (* s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444)) (* 2 (* s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 4 (* s00 s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 18 (* r00 x00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 9 (* r00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* r00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 6 (* r00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 216 (* r x x s00 r00 r00)) (* 36 (* s s s s00 r00 r00)) (* (- 2) (* s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 216) (* r s s x s00 r00)) (* (- 3) (* s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 648) (* r r s x s00 r00)) (* (- 648) (* r s x s00 r00)) (* (- 18) (* s s s x s00 r00)) (* 54 (* s x x s00 r00)) (* 108 (* r s x x s00 r00)) (* (- 108) (* s s x s00 r00)) (* 3 (* ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 2 (* s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 108) (* s x s00 r00 r00)) (* (- 2) (* ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 9 (* s00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* s s x x s00 r00)) (* 324 (* r r x x s00 r00)) (* 54 (* s s s00 r00 r00)) (* (- 162) (* s x s00 r00)) (* (- 3) (* ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 324 (* r x x s00 r00)) (* 54 (* x x s00 r00 r00)) (* 81 (* x x s00 r00)) (* 216 (* r s s s00 r00 r00)) (* (- 18) (* x00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444)) (* 18 (* r00 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 432) (* r s x s00 r00 r00)) (* (- 72) (* s s x s00 r00 r00)) (* 9 (* s s s s s00 r00)) (* 108 (* r s s s s00 r00)) (* 36 (* s x x s00 r00 r00)) (* 54 (* s s s s00 r00)) (* 216 (* r r s s s00 r00 r00)) (* 324 (* r r s s s00 r00)) (* (- 432) (* r r s x s00 r00 r00)) ?x1528 (* 324 (* r s s s00 r00)) (* 216 (* r r x x s00 r00 r00)) (* (- 9) (* s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 18 (* x00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 72 (* r s s s s00 r00 r00)) (* (- 144) (* r s s x s00 r00 r00)) (* 81 (* s s s00 r00)) ?x2116 (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 r00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 s00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444)) (* (- 4) (* s00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 2 (* ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 9 (* r00 s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x3583 (* 6 (* r00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 (* ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x3584 ?x3532 ?x3579 ?x3578 (* (- 9) (* ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x3566 ?x3586 ?x3587 ?x3337 ?x3577 (* 18 (* r00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x3387 ?x3580 ?x3407 ?x3581 ?x3582 (* (- 18) (* x00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x3585 ?x3564 ?x4310 (* (- 18) (* r00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x4306 (* 6 (* r00 r00 s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x4307 ?x4308 ?x4309 (* 2 (* ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) (* ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4311 (* 9 (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4090 (* 6 (* s s s s s00 r00 r00)) ?x4312 (* (- 12) (* s s s x s00 r00 r00)) ?x4313 ?x4126 ?x4314 (* 6 (* s s x x s00 r00 r00)) ?x4157 (* (- 4) (* s00 s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4233 ?x4315 ?x4316 ?x4271 ?x4317 ?x4299 (* (- 18) (* x00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4795 (* (- 18) (* r00 x00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) (* r00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 3) (* s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 s00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4874 ?x4973 ?x4974 ?x3909 ?x4962 ?x4964 ?x4949 ?x4970 ?x4971 (* 2 (* s00 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* s00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4960 ?x4735 ?x4965 ?x4967 ?x4969 ?x4842 (* (- 9) (* ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 (* ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x4972 (* 6 (* r00 r00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4869 (* 6 (* r00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* r00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4890 ?x3110)))
 (let ((?x1407 (* x00 x00)))
 (let ((?x1437 (* (- 108) ?x1407)))
 (let ((?x1245 (* s00 s00 s00)))
 (let ((?x1436 (* (- 16) ?x1245)))
 (let ((?x1117 (* s00 r00 r00 r00)))
 (let ((?x1432 (* (- 216) ?x1117)))
 (let ((?x943 (* r00 r00 r00 x00)))
 (let ((?x944 (* 432 ?x943)))
 (let ((?x866 (* s00 x00)))
 (let ((?x1190 (* 108 ?x866)))
 (let ((?x792 (* s00 s00 r00 r00)))
 (let ((?x793 (* 36 ?x792)))
 (let ((?x729 (* s00 s00 r00)))
 (let ((?x1073 (* 108 ?x729)))
 (let ((?x708 (* s00 r00 r00)))
 (let ((?x1061 (* 36 ?x708)))
 (let ((?x652 (* s00 s00)))
 (let ((?x1426 (* (- 51) ?x652)))
 (let ((?x626 (* s r00 r00)))
 (let ((?x925 (* (- 36) ?x626)))
 (let ((?x583 (* r00 x00)))
 (let ((?x1423 (* (- 108) ?x583)))
 (let ((?x574 (* s00 r00 x00)))
 (let ((?x1422 (* (- 216) ?x574)))
 (let ((?x487 (* s00 r00)))
 (let ((?x581 (* 54 ?x487)))
 (let ((?x1048 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1438 (+ ?x143 ?x1048 ?x581 ?x1422 ?x1423 (* (- 15) (* s s)) ?x925 ?x1426 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1061 ?x1073 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x793 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1190 (* 108 (* s x)) (* (- 108) (* x x)) ?x944 (* 12 ?x1001) ?x1432 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1436 (* 216 (* x x00)) ?x1437)))
 (let (($x1439 (= ?x1438 0)))
 (let ((?x938 (* r00 r00 x00)))
 (let ((?x951 (* (- 36) ?x938)))
 (let ((?x867 (* 6 ?x866)))
 (let ((?x757 (* (- 2) ?x729)))
 (let ((?x977 (* (- 15) ?x652)))
 (let ((?x606 (* s s)))
 (let ((?x630 (* 3 ?x606)))
 (let ((?x612 (* (- 54) ?x583)))
 (let ((?x625 (* 24 ?x487)))
 (let ((?x1140 (+ ?x143 ?x1048 (* (- 24) (* r s)) (* 24 (* r s00)) ?x625 ?x612 ?x630 (* 54 (* r x)) (* 36 (* r x r00)) ?x925 ?x977 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1061 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x757 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x867 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x951 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1145 (= ?x1140 0)))
 (let ((?x709 (* 6 ?x708)))
 (let ((?x665 (* (- 4) ?x652)))
 (let ((?x607 (* 2 ?x606)))
 (let ((?x597 (* (- 18) ?x583)))
 (let ((?x602 (* 9 ?x487)))
 (let ((?x439 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x806 (+ ?x47 ?x439 (* (- 9) (* r s)) (* 9 (* r s00)) ?x602 ?x597 ?x607 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x626) ?x665 (* 18 (* x r00)) ?x709 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x813 (= ?x806 0)))
 (let ((?x530 (* r00 r00 r00)))
 (let ((?x531 (* 12 ?x530)))
 (let ((?x565 (* (- 6) ?x487)))
 (let ((?x562 (* (- 6) x00)))
 (let ((?x561 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x560 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x566 (+ ?x43 ?x560 ?x56 ?x44 ?x561 ?x562 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x565 ?x531)))
 (let (($x567 (= ?x566 0)))
 (let ((?x362 (* r00 r00)))
 (let ((?x363 (* 3 ?x362)))
 (let ((?x392 (* (- 1) s00)))
 (let (($x395 (= (+ s ?x392 (* (- 3) (* r r)) ?x363) 0)))
 (and $x395 $x567 $x813 $x1145 $x1439 (not (= ?x4330 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x4843 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x4584 (+ 3 s ?x211)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x1783 (+ x ?x341)))
 (let ((?x1457 (+ 1 r)))
 (let ((?x2060 (* (- 6) (* r00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584))))
 (let ((?x2497 (* (- 6) (* r00 r00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584))))
 (let ((?x1932 (* 6 (* r00 r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584))))
 (let ((?x2377 (* 6 (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584))))
 (let ((?x402 (+ (* 2 (* ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 3) (* ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* r00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 9 (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* x00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 3 (* ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 6) (* r00 r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) ?x2377 (* (- 6) (* r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) ?x1932 (* (- 4) (* s00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) ?x2497 (* (- 6) (* r00 r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 4) (* s00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) ?x2060 (* 18 (* ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 6) (* r00 r00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 4 (* s00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* r00 x00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 6) (* r00 s00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 6) (* r00 s00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 2) (* s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 2) (* ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* r00 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 4) (* s00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 2 (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584 ?x4584)))))
 (let (($x4155 (not (= ?x402 0))))
 (let ((?x1407 (* x00 x00)))
 (let ((?x2090 (* 108 ?x1407)))
 (let ((?x849 (* (- 9) s)))
 (let ((?x4749 (* r00 r00 s00)))
 (let ((?x3933 (* (- 36) ?x4749)))
 (let ((?x137 (* 9 s00)))
 (let ((?x652 (* s00 s00)))
 (let ((?x4043 (* 51 ?x652)))
 (let ((?x579 (* r00 r00 s)))
 (let ((?x4920 (* 36 ?x579)))
 (let ((?x1245 (* s00 s00 s00)))
 (let ((?x3873 (* 16 ?x1245)))
 (let ((?x866 (* s00 x00)))
 (let ((?x752 (* (- 108) ?x866)))
 (let ((?x943 (* r00 r00 r00 x00)))
 (let ((?x4976 (* (- 432) ?x943)))
 (let ((?x583 (* r00 x00)))
 (let ((?x4472 (* 108 ?x583)))
 (let ((?x1829 (+ (* 216 (* r00 s00 x00)) ?x4472 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4976 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x752 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3873 (* (- 108) (* x s)) ?x4920 ?x4043 (* (- 108) (* r00 x)) ?x137 ?x3933 ?x849 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2090)))
 (let (($x1471 (= ?x1829 0)))
 (let ((?x4832 (* 15 ?x652)))
 (let ((?x938 (* r00 r00 x00)))
 (let ((?x4453 (* 36 ?x938)))
 (let ((?x4947 (* (- 6) ?x866)))
 (let ((?x4910 (* 54 ?x583)))
 (let ((?x4837 (+ (* 24 (* s r)) ?x4910 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x4947 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4920 ?x4453 ?x4832 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3933 (* 54 (* x00 r)) ?x849 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x560 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4322 (* 4 ?x652)))
 (let ((?x2500 (* 18 ?x583)))
 (let ((?x861 (+ (* 9 (* s r)) ?x2500 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x579) ?x4322 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x4749) (* 18 (* x00 r)) ?x560 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x530 (* r00 r00 r00)))
 (let ((?x531 (* 12 ?x530)))
 (let ((?x562 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x561 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3766 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x560 ?x561 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x562 ?x531)))
 (let (($x2963 (= (+ s00 ?x341 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2963 (= ?x3766 0) (= ?x861 0) (= ?x4837 0) $x1471 $x4155))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3978 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1444 (+ 3 ?x211 s)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x1450 (+ ?x341 x)))
 (let ((?x1457 (+ 1 r)))
 (let ((?x3110 (* (- 6) (* r00 r00 s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444))))
 (let ((?x4890 (* (- 144) (* r r s s s00 s00))))
 (let ((?x4869 (* (- 4) (* s s x x s00 s00))))
 (let ((?x4972 (* (- 48) (* r s x x s00 s00))))
 (let ((?x4842 (* (- 144) (* r r x x s00 s00))))
 (let ((?x4969 (* 8 (* s s s x s00 s00))))
 (let ((?x4967 (* 96 (* r s s x s00 s00))))
 (let ((?x4965 (* 288 (* r r s x s00 s00))))
 (let ((?x4735 (* (- 4) (* s s s s s00 s00))))
 (let ((?x4960 (* (- 48) (* r s s s s00 s00))))
 (let ((?x4971 (* (- 24) (* s x x s00 s00))))
 (let ((?x4970 (* (- 144) (* r x x s00 s00))))
 (let ((?x4949 (* (- 36) (* x x s00 s00))))
 (let ((?x4964 (* 48 (* s s x s00 s00))))
 (let ((?x4962 (* 288 (* r s x s00 s00))))
 (let ((?x3909 (* (- 6) (* r00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444))))
 (let ((?x4974 (* (- 24) (* s s s s00 s00))))
 (let ((?x4973 (* (- 144) (* r s s s00 s00))))
 (let ((?x4874 (* (- 36) (* s s s00 s00))))
 (let ((?x4795 (* 72 (* s x s00 s00))))
 (let ((?x4299 (* (- 162) (* s s r00 x00))))
 (let ((?x4317 (* (- 648) (* r s s r00 x00))))
 (let ((?x4271 (* (- 648) (* r r s s r00 x00))))
 (let ((?x4316 (* (- 108) (* s s s r00 x00))))
 (let ((?x4315 (* (- 216) (* r s s s r00 x00))))
 (let ((?x4233 (* (- 18) (* s s s s r00 x00))))
 (let ((?x4157 (* (- 18) (* s s x x r00 x00))))
 (let ((?x4314 (* (- 216) (* r s x x r00 x00))))
 (let ((?x4126 (* (- 648) (* r r x x r00 x00))))
 (let ((?x4313 (* (- 108) (* s x x r00 x00))))
 (let ((?x4312 (* (- 648) (* r x x r00 x00))))
 (let ((?x4090 (* (- 162) (* x x r00 x00))))
 (let ((?x4311 (* 36 (* s s s x r00 x00))))
 (let ((?x4309 (* 1296 (* r r s x r00 x00))))
 (let ((?x4308 (* 216 (* s s x r00 x00))))
 (let ((?x4307 (* 324 (* s x r00 x00))))
 (let ((?x4306 (* 1296 (* r s x r00 x00))))
 (let ((?x4310 (* 432 (* r s s x r00 x00))))
 (let ((?x3564 (* (- 108) (* r r x x s00))))
 (let ((?x3585 (* 6 (* s s s x s00))))
 (let ((?x3582 (* 72 (* r s s x s00))))
 (let ((?x3581 (* 216 (* r r s x s00))))
 (let ((?x3407 (* (- 3) (* s s s s s00))))
 (let ((?x3580 (* (- 36) (* r s s s s00))))
 (let ((?x3387 (* (- 108) (* r r s s s00))))
 (let ((?x3577 (* (- 36) (* r s x x s00))))
 (let ((?x3337 (* (- 3) (* s s x x s00))))
 (let ((?x3587 (* (- 18) (* s x x s00))))
 (let ((?x3586 (* (- 108) (* r x x s00))))
 (let ((?x3566 (* (- 27) (* x x s00))))
 (let ((?x3578 (* (- 108) (* r s s s00))))
 (let ((?x3579 (* (- 18) (* s s s s00))))
 (let ((?x3532 (* 54 (* s x s00))))
 (let ((?x3584 (* 216 (* r s x s00))))
 (let ((?x3583 (* 36 (* s s x s00))))
 (let ((?x2116 (* 6 (* r00 r00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444))))
 (let ((?x1528 (* 6 (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444))))
 (let ((?x1001 (* s s s00)))
 (let ((?x3328 (* (- 27) ?x1001)))
 (let ((?x4330 (+ (* 18 (* ?x1457 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* r00 x00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 (* s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x3328 (* (- 18) (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 72 (* r s x x s00 r00 r00)) (* 2 (* ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* 9 (* s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444)) (* 2 (* s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 4 (* s00 s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 18 (* r00 x00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 9 (* r00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* r00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 6 (* r00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 216 (* r x x s00 r00 r00)) (* 36 (* s s s s00 r00 r00)) (* (- 2) (* s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 216) (* r s s x s00 r00)) (* (- 3) (* s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 648) (* r r s x s00 r00)) (* (- 648) (* r s x s00 r00)) (* (- 18) (* s s s x s00 r00)) (* 54 (* s x x s00 r00)) (* 108 (* r s x x s00 r00)) (* (- 108) (* s s x s00 r00)) (* 3 (* ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 2 (* s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 108) (* s x s00 r00 r00)) (* (- 2) (* ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 9 (* s00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* s s x x s00 r00)) (* 324 (* r r x x s00 r00)) (* 54 (* s s s00 r00 r00)) (* (- 162) (* s x s00 r00)) (* (- 3) (* ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 324 (* r x x s00 r00)) (* 54 (* x x s00 r00 r00)) (* 81 (* x x s00 r00)) (* 216 (* r s s s00 r00 r00)) (* (- 18) (* x00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444)) (* 18 (* r00 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 432) (* r s x s00 r00 r00)) (* (- 72) (* s s x s00 r00 r00)) (* 9 (* s s s s s00 r00)) (* 108 (* r s s s s00 r00)) (* 36 (* s x x s00 r00 r00)) (* 54 (* s s s s00 r00)) (* 216 (* r r s s s00 r00 r00)) (* 324 (* r r s s s00 r00)) (* (- 432) (* r r s x s00 r00 r00)) ?x1528 (* 324 (* r s s s00 r00)) (* 216 (* r r x x s00 r00 r00)) (* (- 9) (* s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 18 (* x00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) (* 72 (* r s s s s00 r00 r00)) (* (- 144) (* r s s x s00 r00 r00)) (* 81 (* s s s00 r00)) ?x2116 (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 r00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 s00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444)) (* (- 4) (* s00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 2 (* ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 9 (* r00 s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x3583 (* 6 (* r00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 (* ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x3584 ?x3532 ?x3579 ?x3578 (* (- 9) (* ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x3566 ?x3586 ?x3587 ?x3337 ?x3577 (* 18 (* r00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x3387 ?x3580 ?x3407 ?x3581 ?x3582 (* (- 18) (* x00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x3585 ?x3564 ?x4310 (* (- 18) (* r00 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x4306 (* 6 (* r00 r00 s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)) ?x4307 ?x4308 ?x4309 (* 2 (* ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) (* ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4311 (* 9 (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4090 (* 6 (* s s s s s00 r00 r00)) ?x4312 (* (- 12) (* s s s x s00 r00 r00)) ?x4313 ?x4126 ?x4314 (* 6 (* s s x x s00 r00 r00)) ?x4157 (* (- 4) (* s00 s00 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4233 ?x4315 ?x4316 ?x4271 ?x4317 ?x4299 (* (- 18) (* x00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* ?x1457 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4795 (* (- 18) (* r00 x00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) (* r00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 3) (* s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 s00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4874 ?x4973 ?x4974 ?x3909 ?x4962 ?x4964 ?x4949 ?x4970 ?x4971 (* 2 (* s00 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 (* s00 ?x1457 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4960 ?x4735 ?x4965 ?x4967 ?x4969 ?x4842 (* (- 9) (* ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 (* ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) ?x4972 (* 6 (* r00 r00 s00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4869 (* 6 (* r00 ?x1457 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* r00 ?x1457 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) ?x4890 ?x3110)))
 (let ((?x1407 (* x00 x00)))
 (let ((?x1437 (* (- 108) ?x1407)))
 (let ((?x1245 (* s00 s00 s00)))
 (let ((?x1436 (* (- 16) ?x1245)))
 (let ((?x1117 (* s00 r00 r00 r00)))
 (let ((?x1432 (* (- 216) ?x1117)))
 (let ((?x943 (* r00 r00 r00 x00)))
 (let ((?x944 (* 432 ?x943)))
 (let ((?x866 (* s00 x00)))
 (let ((?x1190 (* 108 ?x866)))
 (let ((?x792 (* s00 s00 r00 r00)))
 (let ((?x793 (* 36 ?x792)))
 (let ((?x729 (* s00 s00 r00)))
 (let ((?x1073 (* 108 ?x729)))
 (let ((?x708 (* s00 r00 r00)))
 (let ((?x1061 (* 36 ?x708)))
 (let ((?x652 (* s00 s00)))
 (let ((?x1426 (* (- 51) ?x652)))
 (let ((?x626 (* s r00 r00)))
 (let ((?x925 (* (- 36) ?x626)))
 (let ((?x583 (* r00 x00)))
 (let ((?x1423 (* (- 108) ?x583)))
 (let ((?x574 (* s00 r00 x00)))
 (let ((?x1422 (* (- 216) ?x574)))
 (let ((?x487 (* s00 r00)))
 (let ((?x581 (* 54 ?x487)))
 (let ((?x1048 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1438 (+ ?x143 ?x1048 ?x581 ?x1422 ?x1423 (* (- 15) (* s s)) ?x925 ?x1426 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1061 ?x1073 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x793 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1190 (* 108 (* s x)) (* (- 108) (* x x)) ?x944 (* 12 ?x1001) ?x1432 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1436 (* 216 (* x x00)) ?x1437)))
 (let (($x1439 (= ?x1438 0)))
 (let ((?x938 (* r00 r00 x00)))
 (let ((?x951 (* (- 36) ?x938)))
 (let ((?x867 (* 6 ?x866)))
 (let ((?x757 (* (- 2) ?x729)))
 (let ((?x977 (* (- 15) ?x652)))
 (let ((?x606 (* s s)))
 (let ((?x630 (* 3 ?x606)))
 (let ((?x612 (* (- 54) ?x583)))
 (let ((?x625 (* 24 ?x487)))
 (let ((?x1140 (+ ?x143 ?x1048 (* (- 24) (* r s)) (* 24 (* r s00)) ?x625 ?x612 ?x630 (* 54 (* r x)) (* 36 (* r x r00)) ?x925 ?x977 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1061 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x757 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x867 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x951 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1145 (= ?x1140 0)))
 (let ((?x709 (* 6 ?x708)))
 (let ((?x665 (* (- 4) ?x652)))
 (let ((?x607 (* 2 ?x606)))
 (let ((?x597 (* (- 18) ?x583)))
 (let ((?x602 (* 9 ?x487)))
 (let ((?x439 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x806 (+ ?x47 ?x439 (* (- 9) (* r s)) (* 9 (* r s00)) ?x602 ?x597 ?x607 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x626) ?x665 (* 18 (* x r00)) ?x709 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x813 (= ?x806 0)))
 (let ((?x530 (* r00 r00 r00)))
 (let ((?x531 (* 12 ?x530)))
 (let ((?x565 (* (- 6) ?x487)))
 (let ((?x562 (* (- 6) x00)))
 (let ((?x561 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x560 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x566 (+ ?x43 ?x560 ?x56 ?x44 ?x561 ?x562 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x565 ?x531)))
 (let (($x567 (= ?x566 0)))
 (let ((?x362 (* r00 r00)))
 (let ((?x363 (* 3 ?x362)))
 (let ((?x392 (* (- 1) s00)))
 (let (($x395 (= (+ s ?x392 (* (- 3) (* r r)) ?x363) 0)))
 (let (($x4061 (and $x395 $x567 $x813 $x1145 $x1439 (not (= ?x4330 0)))))
 (let ((?x4584 (+ 3 s ?x211)))
 (let ((?x1783 (+ x ?x341)))
 (let ((?x2060 (* (- 6) (* r00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584))))
 (let ((?x2497 (* (- 6) (* r00 r00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584))))
 (let ((?x1932 (* 6 (* r00 r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584))))
 (let ((?x2377 (* 6 (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584))))
 (let ((?x402 (+ (* 2 (* ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 3) (* ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* r00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 9 (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* x00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 3 (* ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 6) (* r00 r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) ?x2377 (* (- 6) (* r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) ?x1932 (* (- 4) (* s00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) ?x2497 (* (- 6) (* r00 r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 4) (* s00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) ?x2060 (* 18 (* ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 6) (* r00 r00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 4 (* s00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* r00 x00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 6) (* r00 s00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 6) (* r00 s00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 2) (* s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 2) (* ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* r00 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 4) (* s00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 2 (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584 ?x4584)))))
 (let (($x4155 (not (= ?x402 0))))
 (let ((?x2090 (* 108 ?x1407)))
 (let ((?x849 (* (- 9) s)))
 (let ((?x4749 (* r00 r00 s00)))
 (let ((?x3933 (* (- 36) ?x4749)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4043 (* 51 ?x652)))
 (let ((?x579 (* r00 r00 s)))
 (let ((?x4920 (* 36 ?x579)))
 (let ((?x3873 (* 16 ?x1245)))
 (let ((?x752 (* (- 108) ?x866)))
 (let ((?x4976 (* (- 432) ?x943)))
 (let ((?x4472 (* 108 ?x583)))
 (let ((?x1829 (+ (* 216 (* r00 s00 x00)) ?x4472 (* (- 54) (* r00 s00)) (* 15 ?x606) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4976 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x752 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3873 (* (- 108) (* x s)) ?x4920 ?x4043 (* (- 108) (* r00 x)) ?x137 ?x3933 ?x849 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2090)))
 (let (($x1471 (= ?x1829 0)))
 (let ((?x4832 (* 15 ?x652)))
 (let ((?x4453 (* 36 ?x938)))
 (let ((?x4947 (* (- 6) ?x866)))
 (let ((?x4910 (* 54 ?x583)))
 (let ((?x4837 (+ (* 24 (* s r)) ?x4910 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x606) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x4947 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4920 ?x4453 ?x4832 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3933 (* 54 (* x00 r)) ?x849 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x4322 (* 4 ?x652)))
 (let ((?x2500 (* 18 ?x583)))
 (let ((?x861 (+ (* 9 (* s r)) ?x2500 (* (- 9) (* r00 s00)) (* (- 2) ?x606) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x579) ?x4322 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x4749) (* 18 (* x00 r)) ?x560 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x3766 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x560 ?x561 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x562 ?x531)))
 (let (($x2963 (= (+ s00 ?x341 (* 3 (* r r)) (* (- 3) ?x362)) 0)))
 (let (($x1394 (and $x2963 (= ?x3766 0) (= ?x861 0) (= ?x4837 0) $x1471 $x4155)))
 (rewrite (= $x1394 $x4061)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1681 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x4584 (+ 3 s ?x211)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x1783 (+ x ?x341)))
 (let ((?x1457 (+ 1 r)))
 (let ((?x2060 (* (- 6) (* r00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584))))
 (let ((?x2497 (* (- 6) (* r00 r00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584))))
 (let ((?x1932 (* 6 (* r00 r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584))))
 (let ((?x2377 (* 6 (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584))))
 (let ((?x402 (+ (* 2 (* ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 3) (* ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* r00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 9 (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* x00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 3 (* ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 6) (* r00 r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) ?x2377 (* (- 6) (* r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) ?x1932 (* (- 4) (* s00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) ?x2497 (* (- 6) (* r00 r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 4) (* s00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) ?x2060 (* 18 (* ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 6) (* r00 r00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 4 (* s00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* r00 x00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 6) (* r00 s00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 6) (* r00 s00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 2) (* s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 2) (* ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* r00 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 4) (* s00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 2 (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584 ?x4584)))))
 (let (($x4155 (not (= ?x402 0))))
 (let ((?x1407 (* x00 x00)))
 (let ((?x2090 (* 108 ?x1407)))
 (let ((?x849 (* (- 9) s)))
 (let ((?x4749 (* r00 r00 s00)))
 (let ((?x3933 (* (- 36) ?x4749)))
 (let ((?x137 (* 9 s00)))
 (let ((?x652 (* s00 s00)))
 (let ((?x4043 (* 51 ?x652)))
 (let ((?x579 (* r00 r00 s)))
 (let ((?x4920 (* 36 ?x579)))
 (let ((?x1245 (* s00 s00 s00)))
 (let ((?x3873 (* 16 ?x1245)))
 (let ((?x866 (* s00 x00)))
 (let ((?x752 (* (- 108) ?x866)))
 (let ((?x943 (* r00 r00 r00 x00)))
 (let ((?x4976 (* (- 432) ?x943)))
 (let ((?x583 (* r00 x00)))
 (let ((?x4472 (* 108 ?x583)))
 (let ((?x1829 (+ (* 216 (* r00 s00 x00)) ?x4472 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4976 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x752 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3873 (* (- 108) (* x s)) ?x4920 ?x4043 (* (- 108) (* r00 x)) ?x137 ?x3933 ?x849 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2090)))
 (let (($x1471 (= ?x1829 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1048 (* (- 9) s00)))
 (let ((?x977 (* (- 15) ?x652)))
 (let ((?x938 (* r00 r00 x00)))
 (let ((?x951 (* (- 36) ?x938)))
 (let ((?x867 (* 6 ?x866)))
 (let ((?x606 (* s s)))
 (let ((?x630 (* 3 ?x606)))
 (let ((?x612 (* (- 54) ?x583)))
 (let ((?x1367 (+ (* (- 24) (* s r)) ?x612 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x630 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x867 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x579) ?x951 ?x977 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1048 (* 36 ?x4749) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x439 (* (- 3) s00)))
 (let ((?x665 (* (- 4) ?x652)))
 (let ((?x607 (* 2 ?x606)))
 (let ((?x597 (* (- 18) ?x583)))
 (let ((?x4835 (+ (* (- 9) (* s r)) ?x597 (* 9 (* r00 s00)) ?x607 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x579) ?x665 (* 18 (* r00 x)) ?x439 (* 6 ?x4749) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x538 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x439 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2963 (= (+ s00 ?x341 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2963 (= ?x538 0) (= ?x4835 0) (= ?x1367 0) $x1471 $x4155)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x4955 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x4584 (+ 3 s ?x211)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x1783 (+ x ?x341)))
 (let ((?x1457 (+ 1 r)))
 (let ((?x2060 (* (- 6) (* r00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584))))
 (let ((?x2497 (* (- 6) (* r00 r00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584))))
 (let ((?x1932 (* 6 (* r00 r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584))))
 (let ((?x2377 (* 6 (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584))))
 (let ((?x402 (+ (* 2 (* ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 3) (* ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* r00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 9 (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* x00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 3 (* ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 6) (* r00 r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) ?x2377 (* (- 6) (* r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) ?x1932 (* (- 4) (* s00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) ?x2497 (* (- 6) (* r00 r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 4) (* s00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) ?x2060 (* 18 (* ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 6) (* r00 r00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 4 (* s00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* r00 x00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 6) (* r00 s00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 6) (* r00 s00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 2) (* s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 2) (* ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* r00 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 4) (* s00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 2 (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584 ?x4584)))))
 (let (($x4155 (not (= ?x402 0))))
 (let ((?x1407 (* x00 x00)))
 (let ((?x2090 (* 108 ?x1407)))
 (let ((?x849 (* (- 9) s)))
 (let ((?x4749 (* r00 r00 s00)))
 (let ((?x3933 (* (- 36) ?x4749)))
 (let ((?x137 (* 9 s00)))
 (let ((?x652 (* s00 s00)))
 (let ((?x4043 (* 51 ?x652)))
 (let ((?x579 (* r00 r00 s)))
 (let ((?x4920 (* 36 ?x579)))
 (let ((?x1245 (* s00 s00 s00)))
 (let ((?x3873 (* 16 ?x1245)))
 (let ((?x866 (* s00 x00)))
 (let ((?x752 (* (- 108) ?x866)))
 (let ((?x943 (* r00 r00 r00 x00)))
 (let ((?x4976 (* (- 432) ?x943)))
 (let ((?x583 (* r00 x00)))
 (let ((?x4472 (* 108 ?x583)))
 (let ((?x1829 (+ (* 216 (* r00 s00 x00)) ?x4472 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4976 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x752 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3873 (* (- 108) (* x s)) ?x4920 ?x4043 (* (- 108) (* r00 x)) ?x137 ?x3933 ?x849 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2090)))
 (let (($x1471 (= ?x1829 0)))
 (let ((?x4832 (* 15 ?x652)))
 (let ((?x938 (* r00 r00 x00)))
 (let ((?x4453 (* 36 ?x938)))
 (let ((?x4947 (* (- 6) ?x866)))
 (let ((?x4910 (* 54 ?x583)))
 (let ((?x4837 (+ (* 24 (* s r)) ?x4910 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x4947 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4920 ?x4453 ?x4832 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3933 (* 54 (* x00 r)) ?x849 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x560 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4322 (* 4 ?x652)))
 (let ((?x2500 (* 18 ?x583)))
 (let ((?x861 (+ (* 9 (* s r)) ?x2500 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x579) ?x4322 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x4749) (* 18 (* x00 r)) ?x560 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x530 (* r00 r00 r00)))
 (let ((?x531 (* 12 ?x530)))
 (let ((?x562 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x561 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3766 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x560 ?x561 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x562 ?x531)))
 (let (($x2963 (= (+ s00 ?x341 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1394 (and $x2963 (= ?x3766 0) (= ?x861 0) (= ?x4837 0) $x1471 $x4155)))
 (let ((?x143 (* 9 s)))
 (let ((?x1048 (* (- 9) s00)))
 (let ((?x977 (* (- 15) ?x652)))
 (let ((?x951 (* (- 36) ?x938)))
 (let ((?x867 (* 6 ?x866)))
 (let ((?x606 (* s s)))
 (let ((?x630 (* 3 ?x606)))
 (let ((?x612 (* (- 54) ?x583)))
 (let ((?x1367 (+ (* (- 24) (* s r)) ?x612 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x630 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x867 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x579) ?x951 ?x977 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1048 (* 36 ?x4749) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x439 (* (- 3) s00)))
 (let ((?x665 (* (- 4) ?x652)))
 (let ((?x607 (* 2 ?x606)))
 (let ((?x597 (* (- 18) ?x583)))
 (let ((?x4835 (+ (* (- 9) (* s r)) ?x597 (* 9 (* r00 s00)) ?x607 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x579) ?x665 (* 18 (* r00 x)) ?x439 (* 6 ?x4749) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x538 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x439 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x530))))
 (let (($x4711 (and $x2963 (= ?x538 0) (= ?x4835 0) (= ?x1367 0) $x1471 $x4155)))
 (rewrite (= $x4711 $x1394)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x338 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x219 (- (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 18 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x224 (+ (- ?x219 (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 2 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 6 ?x216 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x228 (- (- ?x224 (* 18 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x231 (+ ?x228 (* 9 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 18 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x234 (- ?x231 (* 9 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x241 (+ (- ?x234 (* 9 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213) (* 18 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x246 (+ (- ?x241 (* 9 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 2 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x249 (- ?x246 (* 18 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x250 (- ?x249 (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x254 (+ ?x250 (* 18 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 x00) (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 2 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x258 (+ (- ?x254 (* 18 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x262 (+ (- ?x258 (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x266 (+ (- ?x262 (* 6 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x272 (- (- ?x266 (* 4 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x273 (- ?x272 (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x277 (+ (- ?x273 (* 6 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x282 (+ (- ?x277 (* 4 ?x216 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x284 (- ?x282 (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x288 (- (+ ?x284 (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x292 (+ ?x288 (* 9 r00 ?x212 ?x212 s00 ?x213 ?x213) (* 4 ?x216 ?x216 ?x216 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213) (* 18 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x297 (- (- ?x292 (* 6 ?x216 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213)) (* 6 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x301 (+ (- ?x297 (* 3 ?x212 ?x212 s00 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 9 ?x216 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x305 (- ?x301 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x306 (- ?x305 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x311 (+ (- ?x306 (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 x00)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 9 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 6 r00 r00 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x315 (+ (- ?x311 (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00)) (* 18 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x319 (+ (- ?x315 (* 9 r00 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x327 (- (- ?x319 (* 18 r00 ?x212 ?x212 ?x213 ?x213 x00)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x329 (- (- ?x327 (* 9 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x331 (- (- ?x329 (* 3 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213)) (* 4 ?x212 ?x212 s00 s00 ?x213 ?x213))))
 (let (($x334 (= (+ ?x331 (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not $x334)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1242 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x4584 (+ 3 s ?x211)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x1783 (+ x ?x341)))
 (let ((?x1457 (+ 1 r)))
 (let ((?x2060 (* (- 6) (* r00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584))))
 (let ((?x2497 (* (- 6) (* r00 r00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584))))
 (let ((?x1932 (* 6 (* r00 r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584))))
 (let ((?x2377 (* 6 (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584))))
 (let ((?x402 (+ (* 2 (* ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 3) (* ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* r00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* r00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 9 (* ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 9) (* s00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* x00 ?x1457 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 3 (* ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 2 (* s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* ?x1457 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 6) (* r00 r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) ?x2377 (* (- 6) (* r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) ?x1932 (* (- 4) (* s00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) ?x2497 (* (- 6) (* r00 r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 4) (* s00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 3 (* s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) ?x2060 (* 18 (* ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 6) (* r00 r00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 4 (* s00 s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* r00 x00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 6) (* r00 s00 ?x1457 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 6) (* r00 s00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 9 (* r00 s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 2) (* s00 ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 2) (* ?x1457 ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584)) (* 18 (* r00 ?x1783 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 9 (* s00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 r00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 18) (* x00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 18 (* ?x1457 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* 6 (* r00 ?x1457 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1783 ?x1783 ?x4584 ?x4584)) (* (- 18) (* r00 x00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1783 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 9) (* r00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584)) (* (- 3) (* s00 ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584)) (* (- 4) (* s00 s00 ?x1783 ?x1783 ?x4584 ?x4584)) (* 2 (* ?x1457 ?x1783 ?x1783 ?x4584 ?x4584 ?x4584 ?x4584 ?x4584)))))
 (let (($x4155 (not (= ?x402 0))))
 (let ((?x1407 (* x00 x00)))
 (let ((?x2090 (* 108 ?x1407)))
 (let ((?x849 (* (- 9) s)))
 (let ((?x4749 (* r00 r00 s00)))
 (let ((?x3933 (* (- 36) ?x4749)))
 (let ((?x137 (* 9 s00)))
 (let ((?x652 (* s00 s00)))
 (let ((?x4043 (* 51 ?x652)))
 (let ((?x579 (* r00 r00 s)))
 (let ((?x4920 (* 36 ?x579)))
 (let ((?x1245 (* s00 s00 s00)))
 (let ((?x3873 (* 16 ?x1245)))
 (let ((?x866 (* s00 x00)))
 (let ((?x752 (* (- 108) ?x866)))
 (let ((?x943 (* r00 r00 r00 x00)))
 (let ((?x4976 (* (- 432) ?x943)))
 (let ((?x583 (* r00 x00)))
 (let ((?x4472 (* 108 ?x583)))
 (let ((?x1829 (+ (* 216 (* r00 s00 x00)) ?x4472 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4976 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x752 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3873 (* (- 108) (* x s)) ?x4920 ?x4043 (* (- 108) (* r00 x)) ?x137 ?x3933 ?x849 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2090)))
 (let (($x1471 (= ?x1829 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1048 (* (- 9) s00)))
 (let ((?x977 (* (- 15) ?x652)))
 (let ((?x938 (* r00 r00 x00)))
 (let ((?x951 (* (- 36) ?x938)))
 (let ((?x867 (* 6 ?x866)))
 (let ((?x606 (* s s)))
 (let ((?x630 (* 3 ?x606)))
 (let ((?x612 (* (- 54) ?x583)))
 (let ((?x1367 (+ (* (- 24) (* s r)) ?x612 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x630 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x867 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x579) ?x951 ?x977 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1048 (* 36 ?x4749) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x439 (* (- 3) s00)))
 (let ((?x665 (* (- 4) ?x652)))
 (let ((?x607 (* 2 ?x606)))
 (let ((?x597 (* (- 18) ?x583)))
 (let ((?x4835 (+ (* (- 9) (* s r)) ?x597 (* 9 (* r00 s00)) ?x607 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x579) ?x665 (* 18 (* r00 x)) ?x439 (* 6 ?x4749) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x538 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x439 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2963 (= (+ s00 ?x341 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x4711 (and $x2963 (= ?x538 0) (= ?x4835 0) (= ?x1367 0) $x1471 $x4155)))
 (let ((?x213 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x219 (- (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 18 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x224 (+ (- ?x219 (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 2 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 6 ?x216 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x228 (- (- ?x224 (* 18 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x231 (+ ?x228 (* 9 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 18 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x234 (- ?x231 (* 9 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x241 (+ (- ?x234 (* 9 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213) (* 18 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x246 (+ (- ?x241 (* 9 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 2 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x249 (- ?x246 (* 18 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x250 (- ?x249 (* 9 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x254 (+ ?x250 (* 18 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 x00) (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 2 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x258 (+ (- ?x254 (* 18 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x262 (+ (- ?x258 (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x266 (+ (- ?x262 (* 6 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x272 (- (- ?x266 (* 4 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x273 (- ?x272 (* 6 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x277 (+ (- ?x273 (* 6 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x282 (+ (- ?x277 (* 4 ?x216 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x284 (- ?x282 (* 6 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x288 (- (+ ?x284 (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x292 (+ ?x288 (* 9 r00 ?x212 ?x212 s00 ?x213 ?x213) (* 4 ?x216 ?x216 ?x216 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213) (* 18 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x297 (- (- ?x292 (* 6 ?x216 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213)) (* 6 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x301 (+ (- ?x297 (* 3 ?x212 ?x212 s00 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 9 ?x216 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x305 (- ?x301 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x306 (- ?x305 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x311 (+ (- ?x306 (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 x00)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 9 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 6 r00 r00 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x315 (+ (- ?x311 (* 18 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00)) (* 18 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x319 (+ (- ?x315 (* 9 r00 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x327 (- (- ?x319 (* 18 r00 ?x212 ?x212 ?x213 ?x213 x00)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x329 (- (- ?x327 (* 9 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x331 (- (- ?x329 (* 3 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213)) (* 4 ?x212 ?x212 s00 s00 ?x213 ?x213))))
 (let (($x334 (= (+ ?x331 (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) 0)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x337 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not $x334)))))
 (rewrite (= $x337 $x4711)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x339 (asserted $x338)))
 (let ((@x2498 (mp (mp @x339 (quant-intro (proof-bind ?x1242) (= $x338 $x1681)) $x1681) (rewrite (= $x1681 $x1681)) $x1681)))
 (let ((@x3982 (mp (mp @x2498 (quant-intro (proof-bind ?x4955) (= $x1681 $x4843)) $x4843) (quant-intro (proof-bind ?x3978) (= $x4843 $x3733)) $x3733)))
 (let ((@x4556 (mp (mp~ @x3982 (sk (~ $x3733 $x3923)) $x3923) (rewrite (= $x3923 $x3420)) $x3420)))
 (let ((@x4701 (and-elim @x4556 $x2296)))
 (let ((@x3510 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2296) $x4476)) @x4701 $x4476)))
 (let (($x1118 (>= ?x2522 0)))
 (let ((@x1646 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2296) $x1118)) @x4701 $x1118)))
 (let (($x2340 (<= ?x2664 0)))
 (let ((@x3939 (and-elim @x4556 $x993)))
 (let ((@x3318 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x993) $x2340)) @x3939 $x2340)))
 (let (($x2644 (>= ?x2664 0)))
 (let ((@x4404 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x993) $x2644)) @x3939 $x2644)))
 (let (($x2696 (<= ?x4716 0)))
 (let ((@x1626 (and-elim @x4556 $x2201)))
 (let ((@x3401 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2201) $x2696)) @x1626 $x2696)))
 (let (($x4105 (>= ?x4716 0)))
 (let ((@x2791 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2201) $x4105)) @x1626 $x4105)))
 (let (($x730 (<= ?x4551 0)))
 (let ((@x1953 (and-elim @x4556 $x1772)))
 (let ((@x3315 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1772) $x730)) @x1953 $x730)))
 (let (($x2346 (>= ?x4551 0)))
 (let ((@x1554 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1772) $x2346)) @x1953 $x2346)))
 (let (($x2094 (<= ?x2125 0)))
 (let ((@x1775 (and-elim @x4556 $x1519)))
 (let ((@x546 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1519) $x2094)) @x1775 $x2094)))
 (let (($x2222 (>= ?x2125 0)))
 (let ((@x4402 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1519) $x2222)) @x1775 $x2222)))
 (let (($x3534 (not (<= ?x3930 0))))
 (let (($x4777 (>= ?x3930 0)))
 (let ((@x3395 ((_ th-lemma arith) (hypothesis (not $x4777)) @x1646 @x3510 @x1554 @x3315 @x2791 @x3401 @x1554 @x3315 @x2791 @x3401 @x2791 @x3401 @x4402 @x546 @x1646 @x3510 @x1554 @x3315 @x1646 @x3510 @x2791 @x3401 @x4404 @x3318 @x1646 @x3510 false)))
 (let ((@x4509 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2357 $x3534 (not $x4777))) (and-elim @x4556 $x4932) (or $x3534 (not $x4777)))))
 ((_ th-lemma arith) (unit-resolution @x4509 (lemma @x3395 $x4777) $x3534) @x1646 @x3510 @x1554 @x3315 @x2791 @x3401 @x1554 @x3315 @x2791 @x3401 @x2791 @x3401 @x4402 @x546 @x1646 @x3510 @x1554 @x3315 @x1646 @x3510 @x2791 @x3401 @x4404 @x3318 @x1646 @x3510 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        41
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1630
 :arith-nonlinear-bounds    34
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 261
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                5.36
 :memory                    3.70
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                45288609
 :num-checks                1
 :propagations              12
 :rlimit-count              175519
 :time                      0.13
 :total-time                0.15)
