unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x334 (+ m!1 (* (- 6) n!0))))
 (let (($x266 (<= ?x334 6)))
 (let (($x476 (= ?x334 6)))
 (let ((?x868 (+ c!3 k!2)))
 (let ((?x902 (+ m!1 k!2)))
 (let ((?x201 (+ 6 m!1)))
 (let ((?x481 (+ 1 n!0)))
 (let ((?x930 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868)))
 (let ((?x788 (* ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x902 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x739 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868)))
 (let ((?x731 (* ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x902 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x657 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x613 (* ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x902 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x606 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x902 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x593 (* ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x569 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x902 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x532 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x495 (* ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x431 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x383 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x902 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x712 (* 6 (* ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868))))
 (let ((?x313 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x265 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x250 (* ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x902 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x249 (* ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x902 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x248 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868)))
 (let ((?x232 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868)))
 (let ((?x183 (* 6 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x902 ?x902 ?x868 ?x868 ?x868))))
 (let ((?x196 (* ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x902 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x147 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x902 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x133 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x902 ?x902 ?x902 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x983 (+ (* 6 ?x133) (* (- 7) ?x147) (* 6 ?x196) ?x183 (* (- 6) ?x232) (* (- 7) ?x248) (* (- 1) ?x249) (* 6 ?x250) (* (- 6) ?x265) (* 6 ?x313) ?x712 (* (- 6) ?x383) (* 6 ?x431) (* (- 7) ?x495) (* (- 1) ?x532) (* 6 ?x569) ?x593 ?x606 (* (- 1) ?x613) (* 6 ?x657) (* 6 ?x731) (* 6 ?x739) (* 6 ?x788) ?x930)))
 (let (($x982 (= ?x983 0)))
 (let (($x384 (not $x982)))
 (let (($x733 (= (+ (* 3 n!0) (* 3 (* n!0 n!0)) (* (- 1) k!2)) (- 1))))
 (let (($x494 (= (+ (* 3 c!3) (* (- 2) n!0) (* (- 1) (* n!0 k!2)) k!2) 1)))
 (let ((?x253 (* 5 k!2)))
 (let ((?x546 (* (- 1) (* k!2 k!2))))
 (let ((?x689 (* (- 9) n!0)))
 (let ((?x668 (* 9 (* c!3 n!0))))
 (let ((?x315 (* 18 c!3)))
 (let (($x194 (and $x476 (= (+ ?x315 ?x668 ?x689 ?x546 ?x253) 4) $x494 $x733 $x384)))
 (let ((?x813 (+ k!2 m!1)))
 (let ((?x296 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868)))
 (let ((?x695 (* 6 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868))))
 (let ((?x921 (* ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x813 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x726 (* 6 (* ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868))))
 (let ((?x946 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868)))
 (let ((?x548 (* ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x813 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x1023 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x678 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x787 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x679 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x813 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x515 (* ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x813 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x379 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x802 (* ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x519 (* ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x813 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x558 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868)))
 (let ((?x851 (* ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x257 (* ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x813 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x799 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x813 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x708 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868)))
 (let ((?x348 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x813 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x374 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x813 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x880 (* ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x813 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x793 (* ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x201 ?x201 ?x813 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x952 (* ?x481 ?x481 ?x481 ?x481 ?x201 ?x201 ?x201 ?x201 ?x813 ?x813 ?x868 ?x868 ?x868 ?x868 ?x868 ?x868)))
 (let ((?x162 (+ (* 6 ?x952) (* 6 ?x793) (* (- 6) ?x880) (* (- 7) ?x374) ?x348 ?x708 (* 6 ?x799) (* 6 ?x257) ?x851 (* (- 7) ?x558) (* (- 1) ?x519) (* (- 7) ?x802) (* (- 6) ?x379) (* (- 1) ?x515) (* 6 ?x679) (* 6 ?x787) (* (- 1) ?x678) (* 6 ?x1023) (* 6 ?x548) (* 6 ?x946) ?x726 (* 6 ?x921) ?x695 (* (- 6) ?x296))))
 (let (($x609 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x161 (and $x476 (= (+ ?x315 ?x253 ?x689 ?x546 ?x668) 4) $x609 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x162 0)))))
 (let (($x906 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x337 (+ 6 m)))
 (let ((?x340 (+ 1 n)))
 (let ((?x989 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x959 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x927 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x924 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x914 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x750 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x715 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x644 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x637 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x620 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x475 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x469 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x436 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x311 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x267 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x235 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x222 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x220 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x208 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x170 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x156 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x855 (+ (* 6 ?x156) (* 6 ?x170) (* (- 6) ?x208) (* (- 7) ?x220) ?x222 ?x235 (* 6 ?x267) (* 6 ?x311) ?x436 (* (- 7) ?x461) (* (- 1) ?x469) (* (- 7) ?x475) (* (- 6) ?x580) (* (- 1) ?x620) (* 6 ?x637) (* 6 ?x644) (* (- 1) ?x715) (* 6 ?x742) (* 6 ?x750) (* 6 ?x914) (* 6 ?x924) (* 6 ?x927) (* 6 ?x959) (* (- 6) ?x989))))
 (let (($x329 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x291 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x243 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x239 (= ?x243 4)))
 (let (($x155 (= (+ m (* (- 6) n)) 6)))
 (and $x155 $x239 $x291 $x329 (not (= ?x855 0))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x178 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x337 (+ 6 m)))
 (let ((?x340 (+ 1 n)))
 (let ((?x927 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x914 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x989 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x959 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x469 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x436 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x924 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x475 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x644 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x750 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x637 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x715 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x156 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x235 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x170 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x267 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x311 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x620 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x222 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x220 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x208 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x818 (+ (* 6 ?x208) (* 7 ?x220) (* (- 1) ?x222) ?x620 (* (- 6) ?x311) (* (- 6) ?x267) (* (- 6) ?x170) (* (- 1) ?x235) (* (- 6) ?x156) (* (- 6) ?x742) ?x715 (* (- 6) ?x637) (* (- 6) ?x750) (* (- 6) ?x644) (* 7 ?x475) (* 6 ?x580) (* (- 6) ?x924) (* (- 1) ?x436) (* 7 ?x461) ?x469 (* (- 6) ?x959) (* 6 ?x989) (* (- 6) ?x914) (* (- 6) ?x927))))
 (let (($x139 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x564 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x339 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x155 (= (+ m (* (- 6) n)) 6)))
 (and $x155 (= ?x339 (- 4)) $x564 $x139 (not (= ?x818 0)))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x897 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x337 (+ 6 m)))
 (let ((?x340 (+ 1 n)))
 (let ((?x989 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x959 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x927 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x924 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x914 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x750 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x715 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x644 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x637 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x620 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x475 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x469 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x436 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x311 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x267 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x235 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x222 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x220 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x208 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x170 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x156 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x855 (+ (* 6 ?x156) (* 6 ?x170) (* (- 6) ?x208) (* (- 7) ?x220) ?x222 ?x235 (* 6 ?x267) (* 6 ?x311) ?x436 (* (- 7) ?x461) (* (- 1) ?x469) (* (- 7) ?x475) (* (- 6) ?x580) (* (- 1) ?x620) (* 6 ?x637) (* 6 ?x644) (* (- 1) ?x715) (* 6 ?x742) (* 6 ?x750) (* 6 ?x914) (* 6 ?x924) (* 6 ?x927) (* 6 ?x959) (* (- 6) ?x989))))
 (let (($x329 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x291 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x243 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x239 (= ?x243 4)))
 (let (($x155 (= (+ m (* (- 6) n)) 6)))
 (let (($x145 (and $x155 $x239 $x291 $x329 (not (= ?x855 0)))))
 (let ((?x818 (+ (* 6 ?x208) (* 7 ?x220) (* (- 1) ?x222) ?x620 (* (- 6) ?x311) (* (- 6) ?x267) (* (- 6) ?x170) (* (- 1) ?x235) (* (- 6) ?x156) (* (- 6) ?x742) ?x715 (* (- 6) ?x637) (* (- 6) ?x750) (* (- 6) ?x644) (* 7 ?x475) (* 6 ?x580) (* (- 6) ?x924) (* (- 1) ?x436) (* 7 ?x461) ?x469 (* (- 6) ?x959) (* 6 ?x989) (* (- 6) ?x914) (* (- 6) ?x927))))
 (let (($x139 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x564 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x339 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x148 (and $x155 (= ?x339 (- 4)) $x564 $x139 (not (= ?x818 0)))))
 (rewrite (= $x148 $x145)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x122 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x115 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x114 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x112 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x110 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x108 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x107 (* 7 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x104 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x103 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x101 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x100 (* 7 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x96 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x95 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x94 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x92 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x85 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x84 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x83 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x82 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x81 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x80 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x78 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x76 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x74 (* 7 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x72 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x89 (- (- (- (- (+ (- (+ ?x72 ?x74) ?x76) ?x78) ?x80) ?x81) ?x82) ?x83)))
 (let ((?x102 (+ (- (- (- (+ (- (- ?x89 ?x84) ?x85) ?x92) ?x94) ?x95) ?x96) ?x100 ?x101)))
 (let ((?x117 (- (- (+ (- (+ (- (- ?x102 ?x103) ?x104) ?x107 ?x108) ?x110) ?x112) ?x114) ?x115)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x117 0)))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x219 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x337 (+ 6 m)))
 (let ((?x340 (+ 1 n)))
 (let ((?x927 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x914 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x989 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x959 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x469 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x436 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x924 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x475 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x644 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x750 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x637 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x715 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x156 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x235 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x170 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x267 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x311 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x620 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x222 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x220 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x208 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x818 (+ (* 6 ?x208) (* 7 ?x220) (* (- 1) ?x222) ?x620 (* (- 6) ?x311) (* (- 6) ?x267) (* (- 6) ?x170) (* (- 1) ?x235) (* (- 6) ?x156) (* (- 6) ?x742) ?x715 (* (- 6) ?x637) (* (- 6) ?x750) (* (- 6) ?x644) (* 7 ?x475) (* 6 ?x580) (* (- 6) ?x924) (* (- 1) ?x436) (* 7 ?x461) ?x469 (* (- 6) ?x959) (* 6 ?x989) (* (- 6) ?x914) (* (- 6) ?x927))))
 (let (($x139 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x564 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x339 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x155 (= (+ m (* (- 6) n)) 6)))
 (let (($x148 (and $x155 (= ?x339 (- 4)) $x564 $x139 (not (= ?x818 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x115 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x114 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x112 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x110 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x108 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x107 (* 7 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x104 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x103 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x101 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x100 (* 7 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x96 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x95 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x94 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x92 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x85 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x84 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x83 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x82 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x81 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x80 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x78 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x76 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x74 (* 7 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x72 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x89 (- (- (- (- (+ (- (+ ?x72 ?x74) ?x76) ?x78) ?x80) ?x81) ?x82) ?x83)))
 (let ((?x102 (+ (- (- (- (+ (- (- ?x89 ?x84) ?x85) ?x92) ?x94) ?x95) ?x96) ?x100 ?x101)))
 (let ((?x117 (- (- (+ (- (+ (- (- ?x102 ?x103) ?x104) ?x107 ?x108) ?x110) ?x112) ?x114) ?x115)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x121 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x117 0))))))
 (rewrite (= $x121 $x148))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x123 (asserted $x122)))
 (let ((@x195 (mp (mp @x123 (quant-intro (proof-bind ?x219) (= $x122 $x178)) $x178) (rewrite (= $x178 $x178)) $x178)))
 (let ((@x435 (mp~ (mp @x195 (quant-intro (proof-bind ?x897) (= $x178 $x906)) $x906) (sk (~ $x906 $x161)) $x161)))
 (let ((@x917 (mp @x435 (rewrite (= $x161 $x194)) $x194)))
 (let ((@x223 (and-elim @x917 $x476)))
 (let ((@x184 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x476) $x266)) @x223 $x266)))
 (let (($x247 (>= ?x334 6)))
 (let ((@x951 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x476) $x247)) @x223 $x247)))
 (let (($x693 (not (<= ?x983 0))))
 (let (($x285 (>= ?x983 0)))
 (let ((@x164 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x982 $x693 (not $x285))) (and-elim @x917 $x384) (or $x693 (not $x285)))))
 (let ((@x585 (unit-resolution @x164 (lemma ((_ th-lemma arith) (hypothesis (not $x285)) @x951 @x184 false) $x285) $x693)))
 ((_ th-lemma arith) @x585 @x951 @x184 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        15
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             341
 :arith-nonlinear-bounds    9
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 53
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                19.83
 :memory                    19.34
 :mk-bool-var               17
 :mk-clause                 16
 :num-allocs                647063
 :num-checks                1
 :propagations              11
 :rlimit-count              9279
 :time                      0.02
 :total-time                0.04)
