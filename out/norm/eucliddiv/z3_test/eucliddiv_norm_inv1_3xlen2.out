unsat
((set-logic NIA)
(proof
(let (($x67 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x49 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00)))
 (let ((?x55 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x59 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00)))
 (let ((?x45 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x52 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00)))
 (let ((?x46 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x56 (* ?x42 ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x50 (* ?x42 ?x43 ?x43 ?x43 ?x43 y00)))
 (let ((?x28 (- 1)))
 (let ((?x44 (* ?x28 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00)))
 (let ((?x47 (- ?x44 ?x45)))
 (let ((?x48 (- ?x47 ?x46)))
 (let ((?x51 (+ ?x48 ?x49 ?x50)))
 (let ((?x53 (- ?x51 ?x52)))
 (let ((?x54 (- ?x53 ?x50)))
 (let ((?x57 (+ ?x54 ?x55 ?x56)))
 (let ((?x58 (- ?x57 ?x56)))
 (let ((?x60 (+ ?x58 ?x46 ?x52 ?x45 ?x59)))
 (let ((?x61 (- ?x60 ?x55)))
 (let ((?x62 (- ?x61 ?x49)))
 (let (($x63 (= ?x62 0)))
 (let (($x64 (not $x63)))
 (let (($x65 (or $x64)))
 (let (($x41 (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0)))
 (let (($x33 (= (+ (* ?x28 y00) y) 0)))
 (and $x33 $x41 $x65)))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x209 (exists ((q Int) (r Int) (y Int) )(! false :qid k!29))
 ))
 (let ((?x204 (lambda ((q Int) (r Int) (y Int) )(let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x49 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00)))
 (let ((?x55 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x59 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00)))
 (let ((?x45 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x52 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00)))
 (let ((?x46 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x56 (* ?x42 ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x50 (* ?x42 ?x43 ?x43 ?x43 ?x43 y00)))
 (let ((?x28 (- 1)))
 (let ((?x44 (* ?x28 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00)))
 (let ((?x47 (- ?x44 ?x45)))
 (let ((?x48 (- ?x47 ?x46)))
 (let ((?x51 (+ ?x48 ?x49 ?x50)))
 (let ((?x53 (- ?x51 ?x52)))
 (let ((?x54 (- ?x53 ?x50)))
 (let ((?x57 (+ ?x54 ?x55 ?x56)))
 (let ((?x58 (- ?x57 ?x56)))
 (let ((?x60 (+ ?x58 ?x46 ?x52 ?x45 ?x59)))
 (let ((?x61 (- ?x60 ?x55)))
 (let ((?x62 (- ?x61 ?x49)))
 (let (($x63 (= ?x62 0)))
 (let (($x64 (not $x63)))
 (let (($x65 (or $x64)))
 (let (($x41 (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0)))
 (let (($x33 (= (+ (* ?x28 y00) y) 0)))
 (let (($x66 (and $x33 $x41 $x65)))
 (let (($x460 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x97 (= (+ (* (- 1) y00) y) 0)))
 (let (($x217 (and $x97 $x460 false)))
 (let ((?x72 (* (- 1) y00)))
 (let ((?x80 (+ r ?x72)))
 (let ((?x74 (+ 1 q)))
 (let ((?x143 (* y00 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x257 (+ ?x143 (* (- 1) ?x143))))
 (let ((@x142 (rewrite (= ?x43 ?x80))))
 (let ((@x483 (rewrite (= ?x42 ?x74))))
 (let ((@x323 (monotonicity @x483 @x483 @x142 @x142 @x142 @x142 @x142 (= ?x49 (* ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 y00)))))
 (let ((@x96 (trans @x323 (rewrite (= (* ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 y00) ?x143)) (= ?x49 ?x143))))
 (let ((?x133 (* y00 y00 ?x74 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x272 (+ ?x143 ?x133)))
 (let ((?x266 (+ ?x272 (* (- 1) ?x133))))
 (let ((?x130 (* ?x74 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00)))
 (let ((@x132 (monotonicity @x483 @x483 @x483 @x483 @x142 @x142 @x142 @x142 @x142 @x142 @x142 (= ?x55 ?x130))))
 (let ((@x137 (trans @x132 (rewrite (= ?x130 ?x133)) (= ?x55 ?x133))))
 (let ((?x230 (* y00 y00 y00 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x466 (* y00 y00 y00 y00 ?x74 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x195 (* y00 y00 y00 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x221 (* y00 y00 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x99 (* (- 1) ?x195)))
 (let ((?x504 (* (- 1) ?x221)))
 (let ((?x310 (* (- 1) ?x466)))
 (let ((?x368 (* (- 1) ?x230)))
 (let ((?x305 (+ ?x368 ?x310 ?x504 ?x143 ?x99 ?x133)))
 (let ((?x278 (+ ?x305 ?x221 ?x195 ?x466 ?x230)))
 (let ((@x327 (rewrite (= (* ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00 y00) ?x230))))
 (let ((@x325 (monotonicity @x483 @x483 @x142 @x142 @x142 @x142 @x142 (= ?x59 (* ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00 y00)))))
 (let ((?x475 (* ?x74 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00 y00 y00)))
 (let ((@x470 (monotonicity @x483 @x483 @x483 @x483 @x142 @x142 @x142 @x142 @x142 @x142 @x142 (= ?x45 ?x475))))
 (let ((@x448 (trans @x470 (rewrite (= ?x475 ?x466)) (= ?x45 ?x466))))
 (let ((?x304 (* ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00 y00)))
 (let ((@x192 (monotonicity @x483 @x483 @x483 @x142 @x142 @x142 @x142 @x142 @x142 (= ?x52 ?x304))))
 (let ((@x79 (trans @x192 (rewrite (= ?x304 ?x195)) (= ?x52 ?x195))))
 (let ((?x348 (* ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00)))
 (let ((@x220 (monotonicity @x483 @x483 @x483 @x142 @x142 @x142 @x142 @x142 @x142 (= ?x46 ?x348))))
 (let ((@x299 (trans @x220 (rewrite (= ?x348 ?x221)) (= ?x46 ?x221))))
 (let ((?x141 (* y00 y00 y00 y00 ?x74 ?x74 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x157 (+ ?x368 ?x310 ?x504 ?x143 ?x99 ?x133 ?x141)))
 (let ((?x312 (+ ?x157 (* (- 1) ?x141))))
 (let ((?x138 (* ?x74 ?x74 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00 y00 y00)))
 (let ((@x140 (monotonicity @x483 @x483 @x483 @x483 @x483 @x142 @x142 @x142 @x142 @x142 @x142 @x142 @x142 (= ?x56 ?x138))))
 (let ((@x149 (trans @x140 (rewrite (= ?x138 ?x141)) (= ?x56 ?x141))))
 (let ((?x125 (+ ?x368 ?x310 ?x504 ?x143 ?x99)))
 (let ((?x199 (* y00 ?x74 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x111 (+ ?x368 ?x310 ?x504 ?x143 ?x199 ?x99)))
 (let ((?x120 (+ ?x111 (* (- 1) ?x199))))
 (let ((@x196 (monotonicity @x483 @x142 @x142 @x142 @x142 (= ?x50 (* ?x74 ?x80 ?x80 ?x80 ?x80 y00)))))
 (let ((@x147 (trans @x196 (rewrite (= (* ?x74 ?x80 ?x80 ?x80 ?x80 y00) ?x199)) (= ?x50 ?x199))))
 (let ((?x244 (+ ?x368 ?x310 ?x504 ?x143 ?x199)))
 (let ((?x100 (+ ?x244 ?x99)))
 (let ((?x81 (- ?x244 ?x195)))
 (let ((?x362 (* (- 1) ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00 y00)))
 (let ((@x480 (monotonicity (rewrite (= ?x28 (- 1))) @x483 @x483 @x142 @x142 @x142 @x142 @x142 (= ?x44 ?x362))))
 (let ((@x153 (monotonicity (trans @x480 (rewrite (= ?x362 ?x368)) (= ?x44 ?x368)) @x448 (= ?x47 (- ?x368 ?x466)))))
 (let ((@x346 (trans @x153 (rewrite (= (- ?x368 ?x466) (+ ?x368 ?x310))) (= ?x47 (+ ?x368 ?x310)))))
 (let ((@x207 (trans (monotonicity @x346 @x299 (= ?x48 (- (+ ?x368 ?x310) ?x221))) (rewrite (= (- (+ ?x368 ?x310) ?x221) (+ (+ ?x368 ?x310) ?x504))) (= ?x48 (+ (+ ?x368 ?x310) ?x504)))))
 (let ((@x578 (trans @x207 (rewrite (= (+ (+ ?x368 ?x310) ?x504) (+ ?x368 ?x310 ?x504))) (= ?x48 (+ ?x368 ?x310 ?x504)))))
 (let ((@x514 (monotonicity @x578 @x96 @x147 (= ?x51 (+ (+ ?x368 ?x310 ?x504) ?x143 ?x199)))))
 (let ((@x313 (trans @x514 (rewrite (= (+ (+ ?x368 ?x310 ?x504) ?x143 ?x199) ?x244)) (= ?x51 ?x244))))
 (let ((@x110 (trans (monotonicity @x313 @x79 (= ?x53 ?x81)) (rewrite (= ?x81 ?x100)) (= ?x53 ?x100))))
 (let ((@x118 (monotonicity (trans @x110 (rewrite (= ?x100 ?x111)) (= ?x53 ?x111)) @x147 (= ?x54 (- ?x111 ?x199)))))
 (let ((@x129 (trans (trans @x118 (rewrite (= (- ?x111 ?x199) ?x120)) (= ?x54 ?x120)) (rewrite (= ?x120 ?x125)) (= ?x54 ?x125))))
 (let ((@x164 (trans (monotonicity @x129 @x137 @x149 (= ?x57 (+ ?x125 ?x133 ?x141))) (rewrite (= (+ ?x125 ?x133 ?x141) ?x157)) (= ?x57 ?x157))))
 (let ((@x302 (trans (monotonicity @x164 @x149 (= ?x58 (- ?x157 ?x141))) (rewrite (= (- ?x157 ?x141) ?x312)) (= ?x58 ?x312))))
 (let ((@x274 (monotonicity (trans @x302 (rewrite (= ?x312 ?x305)) (= ?x58 ?x305)) @x299 @x79 @x448 (trans @x325 @x327 (= ?x59 ?x230)) (= ?x60 ?x278))))
 (let ((@x268 (monotonicity (trans @x274 (rewrite (= ?x278 ?x272)) (= ?x60 ?x272)) @x137 (= ?x61 (- ?x272 ?x133)))))
 (let ((@x258 (trans (trans @x268 (rewrite (= (- ?x272 ?x133) ?x266)) (= ?x61 ?x266)) (rewrite (= ?x266 ?x143)) (= ?x61 ?x143))))
 (let ((@x253 (trans (monotonicity @x258 @x96 (= ?x62 (- ?x143 ?x143))) (rewrite (= (- ?x143 ?x143) ?x257)) (= ?x62 ?x257))))
 (let ((@x245 (monotonicity (trans @x253 (rewrite (= ?x257 0)) $x63) (= $x63 (= 0 0)))))
 (let ((@x226 (monotonicity (trans @x245 (rewrite (= (= 0 0) true)) (= $x63 true)) (= $x64 (not true)))))
 (let ((@x225 (monotonicity (trans @x226 (rewrite (= (not true) false)) (= $x64 false)) (= $x65 (or false)))))
 (let ((@x215 (monotonicity (rewrite (= $x33 $x97)) (rewrite (= $x41 $x460)) (trans @x225 (rewrite (= (or false) false)) (= $x65 false)) (= $x66 $x217))))
 (trans @x215 (rewrite (= $x217 false)) (= $x66 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x190 (trans (quant-intro (proof-bind ?x204) (= $x67 $x209)) (elim-unused (= $x209 false)) (= $x67 false))))
 (let ((@x68 (asserted $x67)))
 (mp @x68 @x190 false))))))))

(:max-memory   19.14
 :memory       19.14
 :num-allocs   254530
 :rlimit-count 446
 :time         0.00
 :total-time   0.02)
