unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun r!2 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x445 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 1) (* d!1 d!1 q!3)) (* (- 4) (* x!0 d!1)) (* 2 (* d!1 q!3)) (* (- 8) r!2) (* 4 (* r!2 d!1)))))
 (let (($x2056 (>= ?x445 0)))
 (let (($x448 (= ?x445 0)))
 (let ((?x1759 (* r!2 d!1)))
 (let ((?x1632 (* (- 4) ?x1759)))
 (let ((?x1565 (* 8 r!2)))
 (let ((?x888 (* x!0 d!1)))
 (let ((?x1116 (* 4 ?x888)))
 (let ((?x537 (* d!1 d!1 q!3)))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x1837 (+ ?x182 ?x230 ?x214 ?x280 ?x318 ?x537 ?x1116 (* (- 2) (* d!1 q!3)) ?x1565 ?x1632)))
 (let ((?x2684 (* r!2 r!2 r!2 r!2 d!1)))
 (let ((?x644 (* 32 ?x2684)))
 (let ((?x2428 (* 2 (* r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x2480 (* r!2 r!2 r!2)))
 (let ((?x1861 (* 72 ?x2480)))
 (let ((?x2240 (* r!2 r!2 r!2 r!2)))
 (let ((?x696 (* 64 ?x2240)))
 (let ((?x2072 (* (- 2) (* x!0 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x2029 (* r!2 r!2 d!1 q!3)))
 (let ((?x1841 (* r!2 r!2)))
 (let ((?x1846 (* (- 8) ?x1841)))
 (let ((?x1833 (* (- 1) (* x!0 r!2 r!2 q!3))))
 (let ((?x1667 (* r!2 r!2 r!2 q!3)))
 (let ((?x1427 (* 66 ?x1667)))
 (let ((?x1375 (* 2 r!2)))
 (let ((?x2030 (* (- 1) x!0)))
 (let ((?x2627 (+ 2 ?x2030 ?x1375 d!1 q!3)))
 (let ((?x2145 (+ 4 q!3)))
 (let ((?x2688 (+ 2 d!1)))
 (let ((?x1411 (* r!2 r!2 r!2 d!1 q!3 q!3 q!3)))
 (let ((?x1401 (* 2 (* r!2 r!2 r!2 r!2 d!1 q!3 q!3))))
 (let ((?x1403 (* r!2 r!2 r!2 d!1 d!1 q!3)))
 (let ((?x1409 (* 8 ?x1403)))
 (let ((?x1248 (* r!2 r!2 r!2 d!1 q!3)))
 (let ((?x1423 (* 48 ?x1248)))
 (let ((?x1242 (* r!2 r!2 r!2 d!1 d!1 q!3 q!3)))
 (let ((?x1225 (* (- 1) (* x!0 r!2 r!2 r!2 d!1 q!3 q!3))))
 (let ((?x1130 (* r!2 r!2 d!1)))
 (let ((?x1611 (* 4 ?x1130)))
 (let ((?x1107 (* x!0 r!2 r!2 r!2)))
 (let ((?x1826 (* (- 32) ?x1107)))
 (let ((?x1384 (* 4 (* r!2 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x809 (* x!0 r!2 r!2 r!2 d!1)))
 (let ((?x710 (* (- 16) ?x809)))
 (let ((?x480 (* r!2 r!2 r!2 d!1 d!1)))
 (let ((?x1156 (* 16 ?x480)))
 (let ((?x479 (* r!2 r!2 r!2 d!1)))
 (let ((?x377 (* 64 ?x479)))
 (let ((?x597 (+ ?x377 ?x1156 (* 32 (* r!2 r!2 r!2 r!2 q!3)) ?x710 ?x1384 ?x1826 ?x1611 ?x1225 ?x1242 ?x1423 (* (- 1) (* ?x2688 ?x2688 ?x2145 ?x2145 ?x2627 ?x2627)) ?x1409 ?x1401 ?x1411 (* 12 (* r!2 r!2 r!2 d!1 q!3 q!3)) (* 16 (* r!2 r!2 r!2 r!2 d!1 q!3)) (* (- 1) (* ?x2688 ?x2145 ?x2145 ?x2145 ?x2627 r!2)) ?x1427 (* 20 (* r!2 r!2 r!2 q!3 q!3)) ?x1833 (* (- 16) (* x!0 r!2 r!2 r!2 q!3)) ?x1846 ?x2029 (* (- 4) (* x!0 r!2 r!2)) (* (- 8) (* x!0 r!2 r!2 r!2 d!1 q!3)) ?x2072 ?x696 ?x1861 (* (- 2) (* r!2 r!2 q!3)) ?x2428 ?x644)))
 (let ((?x1535 (* ?x597 ?x1837)))
 (let (($x1406 (= ?x1535 0)))
 (let (($x2461 (not $x1406)))
 (let ((?x2459 (* 128 ?x2684)))
 (let ((?x2626 (* (- 528) ?x2480)))
 (let ((?x1651 (* 256 ?x2240)))
 (let ((?x2709 (* (- 32) ?x1841)))
 (let ((?x2075 (* (- 2) d!1)))
 (let ((?x1706 (+ (- 4) ?x2030 ?x1375 ?x2075 q!3)))
 (let ((?x235 (+ (- 8) q!3)))
 (let ((?x2058 (* 16 ?x1130)))
 (let ((?x2152 (* (- 128) ?x480)))
 (let ((?x1973 (* (- 512) ?x479)))
 (let ((?x412 (+ ?x1973 ?x2152 (* (- 64) (* r!2 r!2 r!2 r!2 q!3)) (* (- 64) ?x809) ?x1384 (* (- 128) ?x1107) ?x2058 ?x1225 (* (- 2) ?x1242) (* 192 ?x1248) (* 32 ?x1403) ?x1401 ?x1411 (* (- 24) (* r!2 r!2 r!2 d!1 q!3 q!3)) (* (- 32) (* r!2 r!2 r!2 r!2 d!1 q!3)) (* (- 1) (* ?x235 ?x235 ?x235 ?x2688 ?x1706 r!2)) (* (- 1) (* ?x235 ?x235 ?x2688 ?x2688 ?x1706 ?x1706)) (* 258 ?x1667) (* (- 40) (* r!2 r!2 r!2 q!3 q!3)) ?x1833 (* 32 (* x!0 r!2 r!2 r!2 q!3)) ?x2709 (* (- 2) ?x2029) (* 8 (* x!0 r!2 r!2)) (* 16 (* x!0 r!2 r!2 r!2 d!1 q!3)) ?x2072 ?x1651 ?x2626 (* 4 (* r!2 r!2 q!3)) ?x2428 ?x2459)))
 (let ((?x1454 (* ?x412 ?x1837)))
 (let (($x1188 (= ?x1454 0)))
 (let ((?x2114 (* (- 72) ?x2480)))
 (let ((?x1131 (* (- 1) d!1)))
 (let ((?x1813 (+ (- 2) ?x2030 ?x1375 ?x1131 q!3)))
 (let ((?x197 (+ (- 4) q!3)))
 (let ((?x2687 (* (- 16) ?x480)))
 (let ((?x2680 (* (- 64) ?x479)))
 (let ((?x1856 (+ ?x2680 ?x2687 (* (- 32) (* r!2 r!2 r!2 r!2 q!3)) ?x710 ?x1384 ?x1826 ?x1611 ?x1225 (* (- 1) ?x1242) (* (- 1) (* ?x197 ?x197 ?x2688 ?x2688 ?x1813 ?x1813)) ?x1423 (* (- 1) (* ?x197 ?x197 ?x197 ?x2688 ?x1813 r!2)) ?x1409 ?x1401 ?x1411 (* (- 12) (* r!2 r!2 r!2 d!1 q!3 q!3)) (* (- 16) (* r!2 r!2 r!2 r!2 d!1 q!3)) ?x1427 (* (- 20) (* r!2 r!2 r!2 q!3 q!3)) ?x1833 (* 16 (* x!0 r!2 r!2 r!2 q!3)) ?x1846 (* (- 1) ?x2029) (* 4 (* x!0 r!2 r!2)) (* 8 (* x!0 r!2 r!2 r!2 d!1 q!3)) ?x2072 ?x696 ?x2114 (* 2 (* r!2 r!2 q!3)) ?x2428 ?x644)))
 (let ((?x1355 (* ?x1856 ?x1837)))
 (let (($x1241 (= ?x1355 0)))
 (let ((?x887 (* (- 4) (* q!3 q!3 q!3 q!3))))
 (let ((?x590 (+ (* (- 16) (* r!2 r!2 q!3 q!3)) (* (- 4) (* r!2 r!2 q!3 q!3 q!3)) (* (- 4) (* x!0 x!0 d!1 q!3 q!3)) ?x1384 (* (- 1) (* r!2 d!1 q!3 q!3 q!3 q!3)) (* 16 (* x!0 r!2 q!3 q!3)) (* 8 (* x!0 d!1 q!3 q!3 q!3)) ?x1225 (* 2 (* x!0 r!2 q!3 q!3 q!3)) (* (- 16) (* r!2 q!3 q!3 q!3)) (* (- 1) (* d!1 d!1 q!3 q!3 q!3 q!3)) (* 4 (* x!0 r!2 d!1 d!1 q!3 q!3)) (* (- 2) (* r!2 r!2 d!1 q!3 q!3 q!3)) (* x!0 r!2 d!1 q!3 q!3 q!3) (* 8 (* x!0 q!3 q!3 q!3)) (* (- 4) (* d!1 q!3 q!3 q!3 q!3)) ?x1401 ?x1411 (* (- 1) (* x!0 x!0 d!1 d!1 q!3 q!3)) (* (- 4) (* x!0 x!0 q!3 q!3)) (* 2 ?x1667) (* (- 16) (* r!2 d!1 q!3 q!3 q!3)) (* (- 4) (* r!2 d!1 d!1 q!3 q!3 q!3)) ?x1833 (* (- 2) (* r!2 q!3 q!3 q!3 q!3)) (* 2 (* x!0 d!1 d!1 q!3 q!3 q!3)) ?x887 ?x2072 (* 16 (* x!0 r!2 d!1 q!3 q!3)) (* (- 4) (* r!2 r!2 d!1 d!1 q!3 q!3)) (* (- 16) (* r!2 r!2 d!1 q!3 q!3)) ?x2428)))
 (let ((?x524 (* ?x590 ?x1837)))
 (let (($x709 (= ?x524 0)))
 (let (($x544 (not $x709)))
 (let (($x1915 (or $x544 (not $x1241) (not $x1188) $x2461)))
 (let (($x716 (and $x448 $x1915)))
 (let ((?x2695 (+ ?x1565 ?x182 ?x230 ?x214 ?x280 ?x318 ?x1116 ?x1632 (* q!3 d!1 d!1) (* (- 2) (* q!3 d!1)))))
 (let ((?x464 (* 2 (* q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x626 (* (- 1) (* q!3 r!2 r!2 x!0))))
 (let ((?x1358 (* q!3 q!3 q!3 r!2 r!2 r!2 d!1)))
 (let ((?x2698 (* 2 (* q!3 q!3 r!2 r!2 r!2 r!2 d!1))))
 (let ((?x946 (* (- 2) (* q!3 q!3 r!2 r!2 r!2 x!0))))
 (let ((?x539 (* (- 1) (* ?x235 ?x235 ?x235 ?x2688 (+ (- 4) q!3 ?x1375 ?x2030 ?x2075) r!2))))
 (let ((?x365 (+ (- 4) q!3 ?x1375 ?x2030 ?x2075)))
 (let ((?x2686 (* 4 (* q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x708 (* (- 1) (* q!3 q!3 r!2 r!2 r!2 x!0 d!1))))
 (let ((?x473 (+ ?x708 (* (- 64) (* r!2 r!2 r!2 x!0 d!1)) ?x2709 (* 8 (* r!2 r!2 x!0)) (* (- 128) (* r!2 r!2 r!2 x!0)) (* 32 (* q!3 r!2 r!2 r!2 x!0)) ?x2686 (* (- 2) (* q!3 q!3 r!2 r!2 r!2 d!1 d!1)) (* (- 1) (* ?x235 ?x235 ?x2688 ?x2688 ?x365 ?x365)) ?x539 ?x946 (* 16 (* q!3 r!2 r!2 r!2 x!0 d!1)) (* (- 64) (* q!3 r!2 r!2 r!2 r!2)) ?x2698 ?x2152 (* 32 (* q!3 r!2 r!2 r!2 d!1 d!1)) ?x1973 ?x1358 (* (- 24) (* q!3 q!3 r!2 r!2 r!2 d!1)) (* 192 (* q!3 r!2 r!2 r!2 d!1)) ?x2459 ?x1651 (* (- 32) (* q!3 r!2 r!2 r!2 r!2 d!1)) (* 258 (* q!3 r!2 r!2 r!2)) (* (- 2) (* q!3 r!2 r!2 d!1)) ?x626 (* (- 40) (* q!3 q!3 r!2 r!2 r!2)) ?x464 ?x2058 ?x2626 (* 4 (* q!3 r!2 r!2)))))
 (let ((?x419 (* q!3 r!2 r!2 d!1)))
 (let ((?x1273 (* q!3 r!2 r!2 r!2)))
 (let ((?x2702 (* 66 ?x1273)))
 (let ((?x1601 (* q!3 r!2 r!2 r!2 d!1)))
 (let ((?x1003 (* 48 ?x1601)))
 (let ((?x2236 (* q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x1334 (* 8 ?x2236)))
 (let ((?x739 (+ 2 q!3 ?x1375 ?x2030 d!1)))
 (let ((?x2556 (* q!3 q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x581 (* r!2 r!2 r!2 x!0)))
 (let ((?x1848 (* (- 32) ?x581)))
 (let ((?x2682 (* r!2 r!2 r!2 x!0 d!1)))
 (let ((?x1325 (* (- 16) ?x2682)))
 (let ((?x2697 (+ ?x708 ?x1325 ?x1846 (* (- 4) (* r!2 r!2 x!0)) ?x1848 (* (- 16) (* q!3 r!2 r!2 r!2 x!0)) ?x2686 ?x2556 ?x946 (* (- 1) (* ?x2688 ?x2145 ?x2145 ?x2145 ?x739 r!2)) (* (- 1) (* ?x2688 ?x2688 ?x2145 ?x2145 ?x739 ?x739)) (* (- 8) (* q!3 r!2 r!2 r!2 x!0 d!1)) (* 32 (* q!3 r!2 r!2 r!2 r!2)) ?x2698 ?x1156 ?x1334 ?x377 ?x1358 (* 12 (* q!3 q!3 r!2 r!2 r!2 d!1)) ?x1003 ?x644 ?x696 (* 16 (* q!3 r!2 r!2 r!2 r!2 d!1)) ?x2702 ?x419 ?x626 (* 20 (* q!3 q!3 r!2 r!2 r!2)) ?x464 ?x1611 ?x1861 (* (- 2) (* q!3 r!2 r!2)))))
 (let ((?x1302 (+ ?x708 (* 8 (* q!3 q!3 q!3 x!0 d!1)) (* (- 16) (* q!3 q!3 r!2 r!2)) ?x2686 (* (- 16) (* q!3 q!3 q!3 r!2)) ?x946 ?x887 (* (- 2) (* q!3 q!3 q!3 q!3 r!2)) (* (- 4) (* q!3 q!3 q!3 r!2 r!2)) (* 8 (* q!3 q!3 q!3 x!0)) (* 2 (* q!3 q!3 q!3 r!2 x!0)) ?x2698 (* 2 (* q!3 q!3 q!3 x!0 d!1 d!1)) (* q!3 q!3 q!3 r!2 x!0 d!1) (* (- 2) (* q!3 q!3 q!3 r!2 r!2 d!1)) (* (- 4) (* q!3 q!3 q!3 q!3 d!1)) (* (- 1) (* q!3 q!3 q!3 q!3 d!1 d!1)) (* (- 16) (* q!3 q!3 q!3 r!2 d!1)) (* (- 4) (* q!3 q!3 q!3 r!2 d!1 d!1)) (* (- 1) (* q!3 q!3 q!3 q!3 r!2 d!1)) (* 4 (* q!3 q!3 r!2 x!0 d!1 d!1)) ?x1358 (* (- 1) (* q!3 q!3 x!0 x!0 d!1 d!1)) (* 16 (* q!3 q!3 r!2 x!0 d!1)) (* (- 4) (* q!3 q!3 x!0 x!0 d!1)) (* 16 (* q!3 q!3 r!2 x!0)) (* (- 4) (* q!3 q!3 r!2 r!2 d!1 d!1)) (* (- 16) (* q!3 q!3 r!2 r!2 d!1)) (* (- 4) (* q!3 q!3 x!0 x!0)) (* 2 ?x1273) ?x626 ?x464)))
 (let ((?x1338 (+ (- 2) q!3 ?x1375 ?x2030 ?x1131)))
 (let ((?x1897 (+ ?x708 ?x1325 ?x1846 (* 4 (* r!2 r!2 x!0)) ?x1848 (* 16 (* q!3 r!2 r!2 r!2 x!0)) ?x2686 (* (- 1) ?x2556) ?x946 (* 8 (* q!3 r!2 r!2 r!2 x!0 d!1)) (* (- 1) (* ?x197 ?x197 ?x197 ?x2688 ?x1338 r!2)) (* (- 1) (* ?x197 ?x197 ?x2688 ?x2688 ?x1338 ?x1338)) (* (- 32) (* q!3 r!2 r!2 r!2 r!2)) ?x2698 ?x2687 ?x1334 ?x2680 ?x1358 (* (- 12) (* q!3 q!3 r!2 r!2 r!2 d!1)) ?x1003 ?x644 ?x696 (* (- 16) (* q!3 r!2 r!2 r!2 r!2 d!1)) ?x2702 (* (- 1) ?x419) ?x626 (* (- 20) (* q!3 q!3 r!2 r!2 r!2)) ?x464 ?x1611 ?x2114 (* 2 (* q!3 r!2 r!2)))))
 (let (($x2440 (or (not (= (* ?x1897 ?x2695) 0)) (not (= (* ?x1302 ?x2695) 0)) (not (= (* ?x2697 ?x2695) 0)) (not (= (* ?x473 ?x2695) 0)))))
 (let (($x2464 (and (= ?x2695 0) $x2440)))
 (let (($x444 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2451 (* (- 2) (* q d))))
 (let ((?x2455 (* q d d)))
 (let ((?x2452 (* r d)))
 (let ((?x2453 (* (- 4) ?x2452)))
 (let ((?x463 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x801 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x463 ?x2453 ?x2455 ?x2451)))
 (let ((?x2753 (* q r r)))
 (let ((?x2791 (* 4 ?x2753)))
 (let ((?x2554 (* 2 (* q q q r r r))))
 (let ((?x2419 (* (- 1) (* q r r x))))
 (let ((?x2412 (* q r r d)))
 (let ((?x2787 (* (- 2) ?x2412)))
 (let ((?x2223 (* q r r r r d)))
 (let ((?x2798 (* (- 32) ?x2223)))
 (let ((?x2218 (* r r r r)))
 (let ((?x2796 (* 256 ?x2218)))
 (let ((?x2216 (* r r r r d)))
 (let ((?x2797 (* 128 ?x2216)))
 (let ((?x1991 (* q q r r r d)))
 (let ((?x530 (* (- 24) ?x1991)))
 (let ((?x1990 (* q q q r r r d)))
 (let ((?x1951 (* r r r d)))
 (let ((?x2793 (* (- 512) ?x1951)))
 (let ((?x1734 (* q r r r d d)))
 (let ((?x2801 (* 32 ?x1734)))
 (let ((?x1724 (* r r r d d)))
 (let ((?x2800 (* (- 128) ?x1724)))
 (let ((?x1723 (* 2 (* q q r r r r d))))
 (let ((?x934 (* (- 2) (* q q r r r x))))
 (let ((?x2782 (* (- 2) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x1030 (+ (- 4) q ?x144 ?x179 ?x2782)))
 (let ((?x2402 (+ 2 d)))
 (let ((?x2781 (+ (- 8) q)))
 (let ((?x1057 (* (- 1) (* ?x2781 ?x2781 ?x2781 ?x2402 ?x1030 r))))
 (let ((?x932 (* (- 1) (* ?x2781 ?x2781 ?x2402 ?x2402 ?x1030 ?x1030))))
 (let ((?x855 (* q q r r r d d)))
 (let ((?x2802 (* (- 2) ?x855)))
 (let ((?x2568 (* 4 (* q q r r r r))))
 (let ((?x647 (* r r r x)))
 (let ((?x2803 (* (- 128) ?x647)))
 (let ((?x395 (* r r)))
 (let ((?x2792 (* (- 32) ?x395)))
 (let ((?x381 (* r r r x d)))
 (let ((?x1718 (* (- 64) ?x381)))
 (let ((?x1922 (* (- 1) (* q q r r r x d))))
 (let ((?x1194 (+ ?x1922 ?x1718 ?x2792 (* 8 (* r r x)) ?x2803 (* 32 (* q r r r x)) ?x2568 ?x2802 ?x932 ?x1057 ?x934 (* 16 (* q r r r x d)) (* (- 64) (* q r r r r)) ?x1723 ?x2800 ?x2801 ?x2793 ?x1990 ?x530 (* 192 (* q r r r d)) ?x2797 ?x2796 ?x2798 (* 258 (* q r r r)) ?x2787 ?x2419 (* (- 40) (* q q r r r)) ?x2554 (* 16 (* r r d)) (* (- 528) (* r r r)) ?x2791)))
 (let ((?x2754 (* (- 2) ?x2753)))
 (let ((?x2711 (* r r d)))
 (let ((?x1933 (* 4 ?x2711)))
 (let ((?x2406 (* q r r r)))
 (let ((?x965 (* 66 ?x2406)))
 (let ((?x1696 (* 16 ?x2223)))
 (let ((?x2219 (* 64 ?x2218)))
 (let ((?x2217 (* 32 ?x2216)))
 (let ((?x2054 (* q r r r d)))
 (let ((?x1987 (* 48 ?x2054)))
 (let ((?x2063 (* 64 ?x1951)))
 (let ((?x732 (* 8 ?x1734)))
 (let ((?x1725 (* 16 ?x1724)))
 (let ((?x1174 (* q r r r x d)))
 (let ((?x1644 (* (- 8) ?x1174)))
 (let ((?x570 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2403 (+ 4 q)))
 (let ((?x1757 (* (- 1) (* ?x2402 ?x2402 ?x2403 ?x2403 ?x570 ?x570))))
 (let ((?x1129 (* (- 1) (* ?x2402 ?x2403 ?x2403 ?x2403 ?x570 r))))
 (let ((?x643 (* (- 32) ?x647)))
 (let ((?x1809 (* (- 8) ?x395)))
 (let ((?x1113 (* (- 16) ?x381)))
 (let ((?x2569 (+ ?x1922 ?x1113 ?x1809 (* (- 4) (* r r x)) ?x643 (* (- 16) (* q r r r x)) ?x2568 ?x855 ?x934 ?x1129 ?x1757 ?x1644 (* 32 (* q r r r r)) ?x1723 ?x1725 ?x732 ?x2063 ?x1990 (* 12 ?x1991) ?x1987 ?x2217 ?x2219 ?x1696 ?x965 ?x2412 ?x2419 (* 20 (* q q r r r)) ?x2554 ?x1933 (* 72 (* r r r)) ?x2754)))
 (let ((?x435 (* 2 ?x2406)))
 (let ((?x2283 (* (- 4) (* q q x x))))
 (let ((?x2242 (* (- 16) (* q q r r d))))
 (let ((?x2232 (* (- 4) (* q q r r d d))))
 (let ((?x2230 (* 16 (* q q r x))))
 (let ((?x2516 (* (- 4) (* q q x x d))))
 (let ((?x2638 (* 16 (* q q r x d))))
 (let ((?x2204 (* (- 1) (* q q x x d d))))
 (let ((?x2608 (* 4 (* q q r x d d))))
 (let ((?x1261 (* (- 1) (* q q q q r d))))
 (let ((?x1875 (* (- 4) (* q q q r d d))))
 (let ((?x1873 (* (- 16) (* q q q r d))))
 (let ((?x1867 (* (- 1) (* q q q q d d))))
 (let ((?x1835 (* (- 4) (* q q q q d))))
 (let ((?x2378 (* (- 2) (* q q q r r d))))
 (let ((?x1800 (* q q q r x d)))
 (let ((?x2592 (* 2 (* q q q x d d))))
 (let ((?x1033 (* q q q r x)))
 (let ((?x1794 (* 2 ?x1033)))
 (let ((?x1023 (* q q q x)))
 (let ((?x2228 (* 8 ?x1023)))
 (let ((?x986 (* q q q r r)))
 (let ((?x1793 (* (- 4) ?x986)))
 (let ((?x944 (* q q q q r)))
 (let ((?x437 (* (- 2) ?x944)))
 (let ((?x936 (* q q q q)))
 (let ((?x1795 (* (- 4) ?x936)))
 (let ((?x868 (* q q q r)))
 (let ((?x1868 (* (- 16) ?x868)))
 (let ((?x390 (* (- 16) (* q q r r))))
 (let ((?x2639 (* 8 (* q q q x d))))
 (let ((?x1857 (+ ?x1922 ?x2639 ?x390 ?x2568 ?x1868 ?x934 ?x1795 ?x437 ?x1793 ?x2228 ?x1794 ?x1723 ?x2592 ?x1800 ?x2378 ?x1835 ?x1867 ?x1873 ?x1875 ?x1261 ?x2608 ?x1990 ?x2204 ?x2638 ?x2516 ?x2230 ?x2232 ?x2242 ?x2283 ?x435 ?x2419 ?x2554)))
 (let ((?x2327 (* 2 ?x2753)))
 (let ((?x2321 (* (- 1) ?x2412)))
 (let ((?x2362 (* (- 16) ?x2223)))
 (let ((?x1730 (* (- 12) ?x1991)))
 (let ((?x2328 (* (- 64) ?x1951)))
 (let ((?x2364 (* (- 16) ?x1724)))
 (let ((?x1697 (* q r r r r)))
 (let ((?x2799 (* (- 32) ?x1697)))
 (let ((?x2305 (* (- 1) d)))
 (let ((?x735 (+ (- 2) q ?x144 ?x179 ?x2305)))
 (let ((?x2304 (+ (- 4) q)))
 (let ((?x1485 (* (- 1) (* ?x2304 ?x2304 ?x2402 ?x2402 ?x735 ?x735))))
 (let ((?x1343 (* (- 1) (* ?x2304 ?x2304 ?x2304 ?x2402 ?x735 r))))
 (let ((?x1700 (* 8 ?x1174)))
 (let ((?x2365 (* (- 1) ?x855)))
 (let ((?x692 (* q r r r x)))
 (let ((?x2806 (* 16 ?x692)))
 (let ((?x1974 (+ ?x1922 ?x1113 ?x1809 (* 4 (* r r x)) ?x643 ?x2806 ?x2568 ?x2365 ?x934 ?x1700 ?x1343 ?x1485 ?x2799 ?x1723 ?x2364 ?x732 ?x2328 ?x1990 ?x1730 ?x1987 ?x2217 ?x2219 ?x2362 ?x965 ?x2321 ?x2419 (* (- 20) (* q q r r r)) ?x2554 ?x1933 (* (- 72) (* r r r)) ?x2327)))
 (let (($x1790 (or (not (= (* ?x1974 ?x801) 0)) (not (= (* ?x1857 ?x801) 0)) (not (= (* ?x2569 ?x801) 0)) (not (= (* ?x1194 ?x801) 0)))))
 (let (($x1702 (= ?x801 0)))
 (and $x1702 $x1790)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1231 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2451 (* (- 2) (* q d))))
 (let ((?x2455 (* q d d)))
 (let ((?x2452 (* r d)))
 (let ((?x2453 (* (- 4) ?x2452)))
 (let ((?x2380 (* 2 (* d 4))))
 (let ((?x2458 (* (- 8) d)))
 (let ((?x463 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x2753 (* q r r)))
 (let ((?x2754 (* (- 2) ?x2753)))
 (let ((?x144 (* 2 r)))
 (let ((?x2751 (* ?x144 r r)))
 (let ((?x2752 (* 4 ?x2751)))
 (let ((?x2747 (* 2 (* q 4 2 r r r))))
 (let ((?x2744 (* r r r)))
 (let ((?x2745 (* 64 ?x2744)))
 (let ((?x2559 (* 2 (* q 4 ?x144 r r r))))
 (let ((?x2554 (* 2 (* q q q r r r))))
 (let ((?x2489 (* 2 (* q 4 q r r r))))
 (let ((?x2492 (* q q r r r)))
 (let ((?x2493 (* 8 ?x2492)))
 (let ((?x2743 (* 2 (* q q 2 r r r))))
 (let ((?x2439 (* 2 (* q q ?x144 r r r))))
 (let ((?x2438 (* 2 (* q q d r r r))))
 (let ((?x2442 (* 2 (* q 4 d r r r))))
 (let ((?x2436 (* 2 (* q 4 (* (- 1) x) r r r))))
 (let ((?x2419 (* (- 1) (* q r r x))))
 (let ((?x2434 (* 2 (* q q (* (- 1) x) r r r))))
 (let ((?x2412 (* q r r d)))
 (let ((?x2406 (* q r r r)))
 (let ((?x2413 (* 50 ?x2406)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x2404 (* ?x179 r r)))
 (let ((?x2405 (* 4 ?x2404)))
 (let ((?x2410 (* 4 (* d r r))))
 (let ((?x2223 (* q r r r r d)))
 (let ((?x1696 (* 16 ?x2223)))
 (let ((?x2218 (* r r r r)))
 (let ((?x2219 (* 64 ?x2218)))
 (let ((?x2216 (* r r r r d)))
 (let ((?x2217 (* 32 ?x2216)))
 (let ((?x2054 (* q r r r d)))
 (let ((?x1997 (* 40 ?x2054)))
 (let ((?x1991 (* q q r r r d)))
 (let ((?x1988 (* 10 ?x1991)))
 (let ((?x1990 (* q q q r r r d)))
 (let ((?x1951 (* r r r d)))
 (let ((?x2063 (* 64 ?x1951)))
 (let ((?x1734 (* q r r r d d)))
 (let ((?x732 (* 8 ?x1734)))
 (let ((?x1724 (* r r r d d)))
 (let ((?x1725 (* 16 ?x1724)))
 (let ((?x1723 (* 2 (* q q r r r r d))))
 (let ((?x1697 (* q r r r r)))
 (let ((?x1701 (* 16 ?x1697)))
 (let ((?x1174 (* q r r r x d)))
 (let ((?x1644 (* (- 8) ?x1174)))
 (let ((?x570 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2403 (+ 4 q)))
 (let ((?x2402 (+ 2 d)))
 (let ((?x1757 (* (- 1) (* ?x2402 ?x2402 ?x2403 ?x2403 ?x570 ?x570))))
 (let ((?x1129 (* (- 1) (* ?x2402 ?x2403 ?x2403 ?x2403 ?x570 r))))
 (let ((?x855 (* q q r r r d d)))
 (let ((?x692 (* q r r r x)))
 (let ((?x704 (* (- 8) ?x692)))
 (let ((?x647 (* r r r x)))
 (let ((?x643 (* (- 32) ?x647)))
 (let ((?x395 (* r r)))
 (let ((?x1809 (* (- 8) ?x395)))
 (let ((?x381 (* r r r x d)))
 (let ((?x1113 (* (- 16) ?x381)))
 (let ((?x1922 (* (- 1) (* q q r r r x d))))
 (let ((?x1529 (+ ?x1922 ?x1113 ?x1809 ?x643 ?x704 ?x855 ?x1129 ?x1757 ?x1644 ?x1701 ?x1723 ?x1725 ?x732 ?x2063 ?x1990 ?x1988 ?x1997 ?x2217 ?x2219 ?x1696 ?x2410 ?x2405 ?x2413 ?x2412 ?x2434 ?x2419 ?x2436 ?x2442 ?x2438 ?x2439 ?x2743 ?x2493 ?x2489 ?x2554 ?x2559 ?x2745 ?x2747 ?x2752 ?x2754)))
 (let ((?x1814 (* ?x1529 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x463 ?x2458 ?x2380 ?x2453 ?x2455 ?x2451))))
 (let ((?x2759 (* 16 d)))
 (let ((?x1455 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x463 ?x2759 ?x2453 ?x2455 ?x2451)))
 (let ((?x2824 (* (- 8) (* (* (- 2) d) r r))))
 (let ((?x2791 (* 4 ?x2753)))
 (let ((?x2790 (* (- 8) ?x2751)))
 (let ((?x2789 (* (- 512) ?x2744)))
 (let ((?x2787 (* (- 2) ?x2412)))
 (let ((?x2786 (* 194 ?x2406)))
 (let ((?x2785 (* (- 8) ?x2404)))
 (let ((?x2362 (* (- 16) ?x2223)))
 (let ((?x2796 (* 256 ?x2218)))
 (let ((?x2797 (* 128 ?x2216)))
 (let ((?x530 (* (- 24) ?x1991)))
 (let ((?x2793 (* (- 512) ?x1951)))
 (let ((?x2800 (* (- 128) ?x1724)))
 (let ((?x2799 (* (- 32) ?x1697)))
 (let ((?x1700 (* 8 ?x1174)))
 (let ((?x934 (* (- 2) (* q q r r r x))))
 (let ((?x2782 (* (- 2) d)))
 (let ((?x1030 (+ (- 4) q ?x144 ?x179 ?x2782)))
 (let ((?x2781 (+ (- 8) q)))
 (let ((?x1057 (* (- 1) (* ?x2781 ?x2781 ?x2781 ?x2402 ?x1030 r))))
 (let ((?x932 (* (- 1) (* ?x2781 ?x2781 ?x2402 ?x2402 ?x1030 ?x1030))))
 (let ((?x2802 (* (- 2) ?x855)))
 (let ((?x2568 (* 4 (* q q r r r r))))
 (let ((?x2806 (* 16 ?x692)))
 (let ((?x2803 (* (- 128) ?x647)))
 (let ((?x2792 (* (- 32) ?x395)))
 (let ((?x1718 (* (- 64) ?x381)))
 (let ((?x2220 (+ ?x1922 ?x1718 ?x2792 (* (- 8) (* q 2 ?x2782 r r r)) ?x2803 ?x2806 ?x2568 (* (- 8) (* q 2 q r r r)) ?x2802 ?x932 (* (- 8) (* q 2 (- 4) r r r)) ?x1057 ?x934 (* (- 8) (* q d (- 4) r r r)) (* (- 8) (* q d ?x144 r r r)) (* (- 8) (* q 2 ?x179 r r r)) ?x1700 (* (- 8) (* q 2 ?x144 r r r)) ?x2799 ?x1723 ?x2800 (* 16 ?x1734) (* (- 8) (* q d ?x179 r r r)) (* (- 8) (* q d ?x2782 r r r)) ?x2793 ?x1990 ?x530 (* 128 ?x2054) ?x2797 ?x2796 ?x2362 ?x2785 ?x2786 ?x2787 ?x2419 (* (- 24) ?x2492) ?x2554 ?x2789 ?x2790 ?x2791 ?x2824)))
 (let ((?x2293 (* 8 d)))
 (let ((?x195 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x463 ?x2293 ?x2453 ?x2455 ?x2451)))
 (let ((?x2764 (* (- 4) (* (* (- 1) d) r r))))
 (let ((?x2327 (* 2 ?x2753)))
 (let ((?x2326 (* (- 4) ?x2751)))
 (let ((?x2323 (* (- 64) ?x2744)))
 (let ((?x2321 (* (- 1) ?x2412)))
 (let ((?x2320 (* (- 4) ?x2404)))
 (let ((?x1730 (* (- 12) ?x1991)))
 (let ((?x2328 (* (- 64) ?x1951)))
 (let ((?x2364 (* (- 16) ?x1724)))
 (let ((?x2363 (* (- 16) ?x1697)))
 (let ((?x2305 (* (- 1) d)))
 (let ((?x735 (+ (- 2) q ?x144 ?x179 ?x2305)))
 (let ((?x2304 (+ (- 4) q)))
 (let ((?x1485 (* (- 1) (* ?x2304 ?x2304 ?x2402 ?x2402 ?x735 ?x735))))
 (let ((?x1343 (* (- 1) (* ?x2304 ?x2304 ?x2304 ?x2402 ?x735 r))))
 (let ((?x2365 (* (- 1) ?x855)))
 (let ((?x2368 (* 8 ?x692)))
 (let ((?x555 (+ ?x1922 ?x1113 ?x1809 ?x643 (* (- 4) (* q d ?x2305 r r r)) ?x2368 ?x2568 (* (- 4) (* q 2 q r r r)) ?x2365 ?x934 (* (- 4) (* q d ?x144 r r r)) (* (- 4) (* q 2 ?x179 r r r)) (* 4 ?x1174) (* (- 4) (* q 2 (- 2) r r r)) (* (- 4) (* q d (- 2) r r r)) (* (- 4) (* q 2 ?x144 r r r)) ?x1343 ?x1485 (* (- 4) (* q 2 ?x2305 r r r)) ?x2363 ?x1723 ?x2364 (* 4 ?x1734) (* (- 4) (* q d ?x179 r r r)) ?x2328 ?x1990 ?x1730 (* 32 ?x2054) ?x2217 ?x2219 (* (- 8) ?x2223) ?x2320 ?x2413 ?x2321 ?x2419 (* (- 12) ?x2492) ?x2554 ?x2323 ?x2326 ?x2327 ?x2764)))
 (let ((?x801 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x463 ?x2453 ?x2455 ?x2451)))
 (let ((?x435 (* 2 ?x2406)))
 (let ((?x2283 (* (- 4) (* q q x x))))
 (let ((?x2242 (* (- 16) (* q q r r d))))
 (let ((?x2232 (* (- 4) (* q q r r d d))))
 (let ((?x2230 (* 16 (* q q r x))))
 (let ((?x2516 (* (- 4) (* q q x x d))))
 (let ((?x2638 (* 16 (* q q r x d))))
 (let ((?x2204 (* (- 1) (* q q x x d d))))
 (let ((?x2608 (* 4 (* q q r x d d))))
 (let ((?x1261 (* (- 1) (* q q q q r d))))
 (let ((?x1875 (* (- 4) (* q q q r d d))))
 (let ((?x1873 (* (- 16) (* q q q r d))))
 (let ((?x1867 (* (- 1) (* q q q q d d))))
 (let ((?x1835 (* (- 4) (* q q q q d))))
 (let ((?x2378 (* (- 2) (* q q q r r d))))
 (let ((?x1800 (* q q q r x d)))
 (let ((?x2592 (* 2 (* q q q x d d))))
 (let ((?x1033 (* q q q r x)))
 (let ((?x1794 (* 2 ?x1033)))
 (let ((?x1023 (* q q q x)))
 (let ((?x2228 (* 8 ?x1023)))
 (let ((?x986 (* q q q r r)))
 (let ((?x1793 (* (- 4) ?x986)))
 (let ((?x944 (* q q q q r)))
 (let ((?x437 (* (- 2) ?x944)))
 (let ((?x936 (* q q q q)))
 (let ((?x1795 (* (- 4) ?x936)))
 (let ((?x868 (* q q q r)))
 (let ((?x1868 (* (- 16) ?x868)))
 (let ((?x390 (* (- 16) (* q q r r))))
 (let ((?x2639 (* 8 (* q q q x d))))
 (let ((?x2722 (+ ?x1922 ?x2639 ?x390 ?x1868 ?x1795 ?x437 ?x1793 ?x2228 ?x1794 ?x1723 ?x2592 ?x1800 ?x2378 ?x1835 ?x1867 ?x1873 ?x1875 ?x1261 ?x2608 ?x1990 ?x2204 ?x2638 ?x2516 ?x2230 ?x2232 ?x2242 ?x2283 ?x435 ?x2419 (* 2 (* ?x179 r r r q q)) (* 2 (* q r r r q q)) (* 2 (* ?x144 r r r q q)))))
 (let (($x237 (or (not (= (* ?x2722 ?x801) 0)) (not (= (* ?x555 ?x195) 0)) (not (= (* ?x2220 ?x1455) 0)) (not (= ?x1814 0)))))
 (let (($x1702 (= ?x801 0)))
 (and $x1702 $x237))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1549 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2451 (* (- 2) (* q d))))
 (let ((?x2455 (* q d d)))
 (let ((?x2452 (* r d)))
 (let ((?x2453 (* (- 4) ?x2452)))
 (let ((?x463 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x801 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x463 ?x2453 ?x2455 ?x2451)))
 (let ((?x2753 (* q r r)))
 (let ((?x2791 (* 4 ?x2753)))
 (let ((?x2554 (* 2 (* q q q r r r))))
 (let ((?x2419 (* (- 1) (* q r r x))))
 (let ((?x2412 (* q r r d)))
 (let ((?x2787 (* (- 2) ?x2412)))
 (let ((?x2223 (* q r r r r d)))
 (let ((?x2798 (* (- 32) ?x2223)))
 (let ((?x2218 (* r r r r)))
 (let ((?x2796 (* 256 ?x2218)))
 (let ((?x2216 (* r r r r d)))
 (let ((?x2797 (* 128 ?x2216)))
 (let ((?x1991 (* q q r r r d)))
 (let ((?x530 (* (- 24) ?x1991)))
 (let ((?x1990 (* q q q r r r d)))
 (let ((?x1951 (* r r r d)))
 (let ((?x2793 (* (- 512) ?x1951)))
 (let ((?x1734 (* q r r r d d)))
 (let ((?x2801 (* 32 ?x1734)))
 (let ((?x1724 (* r r r d d)))
 (let ((?x2800 (* (- 128) ?x1724)))
 (let ((?x1723 (* 2 (* q q r r r r d))))
 (let ((?x934 (* (- 2) (* q q r r r x))))
 (let ((?x2782 (* (- 2) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x1030 (+ (- 4) q ?x144 ?x179 ?x2782)))
 (let ((?x2402 (+ 2 d)))
 (let ((?x2781 (+ (- 8) q)))
 (let ((?x1057 (* (- 1) (* ?x2781 ?x2781 ?x2781 ?x2402 ?x1030 r))))
 (let ((?x932 (* (- 1) (* ?x2781 ?x2781 ?x2402 ?x2402 ?x1030 ?x1030))))
 (let ((?x855 (* q q r r r d d)))
 (let ((?x2802 (* (- 2) ?x855)))
 (let ((?x2568 (* 4 (* q q r r r r))))
 (let ((?x647 (* r r r x)))
 (let ((?x2803 (* (- 128) ?x647)))
 (let ((?x395 (* r r)))
 (let ((?x2792 (* (- 32) ?x395)))
 (let ((?x381 (* r r r x d)))
 (let ((?x1718 (* (- 64) ?x381)))
 (let ((?x1922 (* (- 1) (* q q r r r x d))))
 (let ((?x1194 (+ ?x1922 ?x1718 ?x2792 (* 8 (* r r x)) ?x2803 (* 32 (* q r r r x)) ?x2568 ?x2802 ?x932 ?x1057 ?x934 (* 16 (* q r r r x d)) (* (- 64) (* q r r r r)) ?x1723 ?x2800 ?x2801 ?x2793 ?x1990 ?x530 (* 192 (* q r r r d)) ?x2797 ?x2796 ?x2798 (* 258 (* q r r r)) ?x2787 ?x2419 (* (- 40) (* q q r r r)) ?x2554 (* 16 (* r r d)) (* (- 528) (* r r r)) ?x2791)))
 (let ((?x2754 (* (- 2) ?x2753)))
 (let ((?x2711 (* r r d)))
 (let ((?x1933 (* 4 ?x2711)))
 (let ((?x2406 (* q r r r)))
 (let ((?x965 (* 66 ?x2406)))
 (let ((?x1696 (* 16 ?x2223)))
 (let ((?x2219 (* 64 ?x2218)))
 (let ((?x2217 (* 32 ?x2216)))
 (let ((?x2054 (* q r r r d)))
 (let ((?x1987 (* 48 ?x2054)))
 (let ((?x2063 (* 64 ?x1951)))
 (let ((?x732 (* 8 ?x1734)))
 (let ((?x1725 (* 16 ?x1724)))
 (let ((?x1174 (* q r r r x d)))
 (let ((?x1644 (* (- 8) ?x1174)))
 (let ((?x570 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2403 (+ 4 q)))
 (let ((?x1757 (* (- 1) (* ?x2402 ?x2402 ?x2403 ?x2403 ?x570 ?x570))))
 (let ((?x1129 (* (- 1) (* ?x2402 ?x2403 ?x2403 ?x2403 ?x570 r))))
 (let ((?x643 (* (- 32) ?x647)))
 (let ((?x1809 (* (- 8) ?x395)))
 (let ((?x1113 (* (- 16) ?x381)))
 (let ((?x2569 (+ ?x1922 ?x1113 ?x1809 (* (- 4) (* r r x)) ?x643 (* (- 16) (* q r r r x)) ?x2568 ?x855 ?x934 ?x1129 ?x1757 ?x1644 (* 32 (* q r r r r)) ?x1723 ?x1725 ?x732 ?x2063 ?x1990 (* 12 ?x1991) ?x1987 ?x2217 ?x2219 ?x1696 ?x965 ?x2412 ?x2419 (* 20 (* q q r r r)) ?x2554 ?x1933 (* 72 (* r r r)) ?x2754)))
 (let ((?x435 (* 2 ?x2406)))
 (let ((?x2283 (* (- 4) (* q q x x))))
 (let ((?x2242 (* (- 16) (* q q r r d))))
 (let ((?x2232 (* (- 4) (* q q r r d d))))
 (let ((?x2230 (* 16 (* q q r x))))
 (let ((?x2516 (* (- 4) (* q q x x d))))
 (let ((?x2638 (* 16 (* q q r x d))))
 (let ((?x2204 (* (- 1) (* q q x x d d))))
 (let ((?x2608 (* 4 (* q q r x d d))))
 (let ((?x1261 (* (- 1) (* q q q q r d))))
 (let ((?x1875 (* (- 4) (* q q q r d d))))
 (let ((?x1873 (* (- 16) (* q q q r d))))
 (let ((?x1867 (* (- 1) (* q q q q d d))))
 (let ((?x1835 (* (- 4) (* q q q q d))))
 (let ((?x2378 (* (- 2) (* q q q r r d))))
 (let ((?x1800 (* q q q r x d)))
 (let ((?x2592 (* 2 (* q q q x d d))))
 (let ((?x1033 (* q q q r x)))
 (let ((?x1794 (* 2 ?x1033)))
 (let ((?x1023 (* q q q x)))
 (let ((?x2228 (* 8 ?x1023)))
 (let ((?x986 (* q q q r r)))
 (let ((?x1793 (* (- 4) ?x986)))
 (let ((?x944 (* q q q q r)))
 (let ((?x437 (* (- 2) ?x944)))
 (let ((?x936 (* q q q q)))
 (let ((?x1795 (* (- 4) ?x936)))
 (let ((?x868 (* q q q r)))
 (let ((?x1868 (* (- 16) ?x868)))
 (let ((?x390 (* (- 16) (* q q r r))))
 (let ((?x2639 (* 8 (* q q q x d))))
 (let ((?x1857 (+ ?x1922 ?x2639 ?x390 ?x2568 ?x1868 ?x934 ?x1795 ?x437 ?x1793 ?x2228 ?x1794 ?x1723 ?x2592 ?x1800 ?x2378 ?x1835 ?x1867 ?x1873 ?x1875 ?x1261 ?x2608 ?x1990 ?x2204 ?x2638 ?x2516 ?x2230 ?x2232 ?x2242 ?x2283 ?x435 ?x2419 ?x2554)))
 (let ((?x2327 (* 2 ?x2753)))
 (let ((?x2321 (* (- 1) ?x2412)))
 (let ((?x2362 (* (- 16) ?x2223)))
 (let ((?x1730 (* (- 12) ?x1991)))
 (let ((?x2328 (* (- 64) ?x1951)))
 (let ((?x2364 (* (- 16) ?x1724)))
 (let ((?x1697 (* q r r r r)))
 (let ((?x2799 (* (- 32) ?x1697)))
 (let ((?x2305 (* (- 1) d)))
 (let ((?x735 (+ (- 2) q ?x144 ?x179 ?x2305)))
 (let ((?x2304 (+ (- 4) q)))
 (let ((?x1485 (* (- 1) (* ?x2304 ?x2304 ?x2402 ?x2402 ?x735 ?x735))))
 (let ((?x1343 (* (- 1) (* ?x2304 ?x2304 ?x2304 ?x2402 ?x735 r))))
 (let ((?x1700 (* 8 ?x1174)))
 (let ((?x2365 (* (- 1) ?x855)))
 (let ((?x692 (* q r r r x)))
 (let ((?x2806 (* 16 ?x692)))
 (let ((?x1974 (+ ?x1922 ?x1113 ?x1809 (* 4 (* r r x)) ?x643 ?x2806 ?x2568 ?x2365 ?x934 ?x1700 ?x1343 ?x1485 ?x2799 ?x1723 ?x2364 ?x732 ?x2328 ?x1990 ?x1730 ?x1987 ?x2217 ?x2219 ?x2362 ?x965 ?x2321 ?x2419 (* (- 20) (* q q r r r)) ?x2554 ?x1933 (* (- 72) (* r r r)) ?x2327)))
 (let (($x1790 (or (not (= (* ?x1974 ?x801) 0)) (not (= (* ?x1857 ?x801) 0)) (not (= (* ?x2569 ?x801) 0)) (not (= (* ?x1194 ?x801) 0)))))
 (let (($x1702 (= ?x801 0)))
 (let (($x2563 (and $x1702 $x1790)))
 (let ((?x2380 (* 2 (* d 4))))
 (let ((?x2458 (* (- 8) d)))
 (let ((?x2751 (* ?x144 r r)))
 (let ((?x2752 (* 4 ?x2751)))
 (let ((?x2747 (* 2 (* q 4 2 r r r))))
 (let ((?x2744 (* r r r)))
 (let ((?x2745 (* 64 ?x2744)))
 (let ((?x2559 (* 2 (* q 4 ?x144 r r r))))
 (let ((?x2489 (* 2 (* q 4 q r r r))))
 (let ((?x2492 (* q q r r r)))
 (let ((?x2493 (* 8 ?x2492)))
 (let ((?x2743 (* 2 (* q q 2 r r r))))
 (let ((?x2439 (* 2 (* q q ?x144 r r r))))
 (let ((?x2438 (* 2 (* q q d r r r))))
 (let ((?x2442 (* 2 (* q 4 d r r r))))
 (let ((?x2436 (* 2 (* q 4 ?x179 r r r))))
 (let ((?x2434 (* 2 (* q q ?x179 r r r))))
 (let ((?x2413 (* 50 ?x2406)))
 (let ((?x2404 (* ?x179 r r)))
 (let ((?x2405 (* 4 ?x2404)))
 (let ((?x2410 (* 4 (* d r r))))
 (let ((?x1997 (* 40 ?x2054)))
 (let ((?x1988 (* 10 ?x1991)))
 (let ((?x1701 (* 16 ?x1697)))
 (let ((?x704 (* (- 8) ?x692)))
 (let ((?x1529 (+ ?x1922 ?x1113 ?x1809 ?x643 ?x704 ?x855 ?x1129 ?x1757 ?x1644 ?x1701 ?x1723 ?x1725 ?x732 ?x2063 ?x1990 ?x1988 ?x1997 ?x2217 ?x2219 ?x1696 ?x2410 ?x2405 ?x2413 ?x2412 ?x2434 ?x2419 ?x2436 ?x2442 ?x2438 ?x2439 ?x2743 ?x2493 ?x2489 ?x2554 ?x2559 ?x2745 ?x2747 ?x2752 ?x2754)))
 (let ((?x1814 (* ?x1529 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x463 ?x2458 ?x2380 ?x2453 ?x2455 ?x2451))))
 (let ((?x2759 (* 16 d)))
 (let ((?x1455 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x463 ?x2759 ?x2453 ?x2455 ?x2451)))
 (let ((?x2824 (* (- 8) (* ?x2782 r r))))
 (let ((?x2790 (* (- 8) ?x2751)))
 (let ((?x2789 (* (- 512) ?x2744)))
 (let ((?x2786 (* 194 ?x2406)))
 (let ((?x2785 (* (- 8) ?x2404)))
 (let ((?x2220 (+ ?x1922 ?x1718 ?x2792 (* (- 8) (* q 2 ?x2782 r r r)) ?x2803 ?x2806 ?x2568 (* (- 8) (* q 2 q r r r)) ?x2802 ?x932 (* (- 8) (* q 2 (- 4) r r r)) ?x1057 ?x934 (* (- 8) (* q d (- 4) r r r)) (* (- 8) (* q d ?x144 r r r)) (* (- 8) (* q 2 ?x179 r r r)) ?x1700 (* (- 8) (* q 2 ?x144 r r r)) ?x2799 ?x1723 ?x2800 (* 16 ?x1734) (* (- 8) (* q d ?x179 r r r)) (* (- 8) (* q d ?x2782 r r r)) ?x2793 ?x1990 ?x530 (* 128 ?x2054) ?x2797 ?x2796 ?x2362 ?x2785 ?x2786 ?x2787 ?x2419 (* (- 24) ?x2492) ?x2554 ?x2789 ?x2790 ?x2791 ?x2824)))
 (let ((?x2293 (* 8 d)))
 (let ((?x195 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x463 ?x2293 ?x2453 ?x2455 ?x2451)))
 (let ((?x2764 (* (- 4) (* ?x2305 r r))))
 (let ((?x2326 (* (- 4) ?x2751)))
 (let ((?x2323 (* (- 64) ?x2744)))
 (let ((?x2320 (* (- 4) ?x2404)))
 (let ((?x2363 (* (- 16) ?x1697)))
 (let ((?x2368 (* 8 ?x692)))
 (let ((?x555 (+ ?x1922 ?x1113 ?x1809 ?x643 (* (- 4) (* q d ?x2305 r r r)) ?x2368 ?x2568 (* (- 4) (* q 2 q r r r)) ?x2365 ?x934 (* (- 4) (* q d ?x144 r r r)) (* (- 4) (* q 2 ?x179 r r r)) (* 4 ?x1174) (* (- 4) (* q 2 (- 2) r r r)) (* (- 4) (* q d (- 2) r r r)) (* (- 4) (* q 2 ?x144 r r r)) ?x1343 ?x1485 (* (- 4) (* q 2 ?x2305 r r r)) ?x2363 ?x1723 ?x2364 (* 4 ?x1734) (* (- 4) (* q d ?x179 r r r)) ?x2328 ?x1990 ?x1730 (* 32 ?x2054) ?x2217 ?x2219 (* (- 8) ?x2223) ?x2320 ?x2413 ?x2321 ?x2419 (* (- 12) ?x2492) ?x2554 ?x2323 ?x2326 ?x2327 ?x2764)))
 (let ((?x2722 (+ ?x1922 ?x2639 ?x390 ?x1868 ?x1795 ?x437 ?x1793 ?x2228 ?x1794 ?x1723 ?x2592 ?x1800 ?x2378 ?x1835 ?x1867 ?x1873 ?x1875 ?x1261 ?x2608 ?x1990 ?x2204 ?x2638 ?x2516 ?x2230 ?x2232 ?x2242 ?x2283 ?x435 ?x2419 (* 2 (* ?x179 r r r q q)) (* 2 (* q r r r q q)) (* 2 (* ?x144 r r r q q)))))
 (let (($x237 (or (not (= (* ?x2722 ?x801) 0)) (not (= (* ?x555 ?x195) 0)) (not (= (* ?x2220 ?x1455) 0)) (not (= ?x1814 0)))))
 (let (($x434 (and $x1702 $x237)))
 (rewrite (= $x434 $x2563))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1212 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1919 (* 4 (* d00 r00))))
 (let ((?x1277 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1881 (* 4 (* (+ 2 d) r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x1937 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x1284 (+ ?x427 ?x1937 ?x30 ?x182 ?x1881 ?x214 ?x230 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x280 ?x1277 ?x1919)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x1769 (+ ?x144 ?x179 q)))
 (let ((?x2402 (+ 2 d)))
 (let ((?x1275 (+ (* (- 1) (* ?x2402 ?x1769 r q q q)) (* (- 1) (* ?x2402 ?x2402 ?x1769 ?x1769 q q)) (* ?x1769 r r q) (* (- 1) (* r r q q)) (* ?x2402 ?x1769 r r r q q))))
 (let ((?x2293 (* 8 d)))
 (let ((?x1752 (+ 16 ?x427 ?x1937 ?x30 ?x2293 ?x182 ?x1881 ?x214 ?x230 (* ?x2402 ?x2402 (+ 4 q)) (* (- 2) (* ?x2402 (+ 4 q))) ?x280 (* (- 4) (* ?x2402 (+ 2 ?x144 ?x179 q d))) ?x1919)))
 (let ((?x406 (+ 2 ?x144 ?x179 q d)))
 (let ((?x2403 (+ 4 q)))
 (let ((?x1420 (+ (* (- 1) (* ?x2402 ?x2403 ?x2403 ?x2403 ?x406 r)) (* (- 1) (* ?x2402 ?x2402 ?x2403 ?x2403 ?x406 ?x406)) (* ?x2403 ?x406 r r) (* (- 1) (* ?x2403 ?x2403 r r)) (* ?x2402 ?x2403 ?x2403 ?x406 r r r))))
 (let ((?x2458 (* (- 8) d)))
 (let ((?x1940 (+ (- 16) ?x427 ?x1937 ?x30 ?x2458 ?x182 ?x1881 ?x214 ?x230 (* (+ (- 4) q) ?x2402 ?x2402) (* (- 2) (* (+ (- 4) q) ?x2402)) ?x280 (* (- 4) (* ?x2402 (+ (- 2) ?x144 ?x179 q (* (- 1) d)))) ?x1919)))
 (let ((?x2305 (* (- 1) d)))
 (let ((?x1921 (+ (- 2) ?x144 ?x179 q ?x2305)))
 (let ((?x2304 (+ (- 4) q)))
 (let ((?x263 (+ (* (- 1) (* ?x2304 ?x2304 ?x2304 ?x2402 ?x1921 r)) (* (- 1) (* ?x2304 ?x2304 ?x2402 ?x2402 ?x1921 ?x1921)) (* ?x2304 ?x1921 r r) (* (- 1) (* ?x2304 ?x2304 r r)) (* ?x2304 ?x2304 ?x2402 ?x1921 r r r))))
 (let ((?x1917 (+ (- 32) ?x427 ?x1937 ?x30 (* (- 16) d) ?x182 ?x1881 ?x214 ?x230 (* (+ (- 8) q) ?x2402 ?x2402) (* (- 2) (* (+ (- 8) q) ?x2402)) ?x280 (* (- 4) (* ?x2402 (+ (- 4) ?x144 ?x179 q (* (- 2) d)))) ?x1919)))
 (let ((?x2782 (* (- 2) d)))
 (let ((?x661 (+ (- 4) ?x144 ?x179 q ?x2782)))
 (let ((?x2781 (+ (- 8) q)))
 (let ((?x1962 (+ (* (- 1) (* ?x2781 ?x2781 ?x2781 ?x2402 ?x661 r)) (* (- 1) (* ?x2781 ?x2781 ?x2402 ?x2402 ?x661 ?x661)) (* ?x2781 ?x661 r r) (* (- 1) (* ?x2781 ?x2781 r r)) (* ?x2781 ?x2781 ?x2402 ?x661 r r r))))
 (let (($x1285 (or (not (= (* ?x1962 ?x1917) 0)) (not (= (* ?x263 ?x1940) 0)) (not (= (* ?x1420 ?x1752) 0)) (not (= (* ?x1275 ?x1284) 0)))))
 (let ((?x463 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x651 (+ ?x211 ?x182 ?x463 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1919)))
 (and (= ?x651 0) $x1285)))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1337 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2451 (* (- 2) (* q d))))
 (let ((?x2455 (* q d d)))
 (let ((?x2452 (* r d)))
 (let ((?x2453 (* (- 4) ?x2452)))
 (let ((?x2380 (* 2 (* d 4))))
 (let ((?x2458 (* (- 8) d)))
 (let ((?x463 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x2753 (* q r r)))
 (let ((?x2754 (* (- 2) ?x2753)))
 (let ((?x144 (* 2 r)))
 (let ((?x2751 (* ?x144 r r)))
 (let ((?x2752 (* 4 ?x2751)))
 (let ((?x2747 (* 2 (* q 4 2 r r r))))
 (let ((?x2744 (* r r r)))
 (let ((?x2745 (* 64 ?x2744)))
 (let ((?x2559 (* 2 (* q 4 ?x144 r r r))))
 (let ((?x2554 (* 2 (* q q q r r r))))
 (let ((?x2489 (* 2 (* q 4 q r r r))))
 (let ((?x2492 (* q q r r r)))
 (let ((?x2493 (* 8 ?x2492)))
 (let ((?x2743 (* 2 (* q q 2 r r r))))
 (let ((?x2439 (* 2 (* q q ?x144 r r r))))
 (let ((?x2438 (* 2 (* q q d r r r))))
 (let ((?x2442 (* 2 (* q 4 d r r r))))
 (let ((?x2436 (* 2 (* q 4 (* (- 1) x) r r r))))
 (let ((?x2419 (* (- 1) (* q r r x))))
 (let ((?x2434 (* 2 (* q q (* (- 1) x) r r r))))
 (let ((?x2412 (* q r r d)))
 (let ((?x2406 (* q r r r)))
 (let ((?x2413 (* 50 ?x2406)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x2404 (* ?x179 r r)))
 (let ((?x2405 (* 4 ?x2404)))
 (let ((?x2410 (* 4 (* d r r))))
 (let ((?x2223 (* q r r r r d)))
 (let ((?x1696 (* 16 ?x2223)))
 (let ((?x2218 (* r r r r)))
 (let ((?x2219 (* 64 ?x2218)))
 (let ((?x2216 (* r r r r d)))
 (let ((?x2217 (* 32 ?x2216)))
 (let ((?x2054 (* q r r r d)))
 (let ((?x1997 (* 40 ?x2054)))
 (let ((?x1991 (* q q r r r d)))
 (let ((?x1988 (* 10 ?x1991)))
 (let ((?x1990 (* q q q r r r d)))
 (let ((?x1951 (* r r r d)))
 (let ((?x2063 (* 64 ?x1951)))
 (let ((?x1734 (* q r r r d d)))
 (let ((?x732 (* 8 ?x1734)))
 (let ((?x1724 (* r r r d d)))
 (let ((?x1725 (* 16 ?x1724)))
 (let ((?x1723 (* 2 (* q q r r r r d))))
 (let ((?x1697 (* q r r r r)))
 (let ((?x1701 (* 16 ?x1697)))
 (let ((?x1174 (* q r r r x d)))
 (let ((?x1644 (* (- 8) ?x1174)))
 (let ((?x570 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2403 (+ 4 q)))
 (let ((?x2402 (+ 2 d)))
 (let ((?x1757 (* (- 1) (* ?x2402 ?x2402 ?x2403 ?x2403 ?x570 ?x570))))
 (let ((?x1129 (* (- 1) (* ?x2402 ?x2403 ?x2403 ?x2403 ?x570 r))))
 (let ((?x855 (* q q r r r d d)))
 (let ((?x692 (* q r r r x)))
 (let ((?x704 (* (- 8) ?x692)))
 (let ((?x647 (* r r r x)))
 (let ((?x643 (* (- 32) ?x647)))
 (let ((?x395 (* r r)))
 (let ((?x1809 (* (- 8) ?x395)))
 (let ((?x381 (* r r r x d)))
 (let ((?x1113 (* (- 16) ?x381)))
 (let ((?x1922 (* (- 1) (* q q r r r x d))))
 (let ((?x1529 (+ ?x1922 ?x1113 ?x1809 ?x643 ?x704 ?x855 ?x1129 ?x1757 ?x1644 ?x1701 ?x1723 ?x1725 ?x732 ?x2063 ?x1990 ?x1988 ?x1997 ?x2217 ?x2219 ?x1696 ?x2410 ?x2405 ?x2413 ?x2412 ?x2434 ?x2419 ?x2436 ?x2442 ?x2438 ?x2439 ?x2743 ?x2493 ?x2489 ?x2554 ?x2559 ?x2745 ?x2747 ?x2752 ?x2754)))
 (let ((?x1814 (* ?x1529 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x463 ?x2458 ?x2380 ?x2453 ?x2455 ?x2451))))
 (let ((?x2759 (* 16 d)))
 (let ((?x1455 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x463 ?x2759 ?x2453 ?x2455 ?x2451)))
 (let ((?x2824 (* (- 8) (* (* (- 2) d) r r))))
 (let ((?x2791 (* 4 ?x2753)))
 (let ((?x2790 (* (- 8) ?x2751)))
 (let ((?x2789 (* (- 512) ?x2744)))
 (let ((?x2787 (* (- 2) ?x2412)))
 (let ((?x2786 (* 194 ?x2406)))
 (let ((?x2785 (* (- 8) ?x2404)))
 (let ((?x2362 (* (- 16) ?x2223)))
 (let ((?x2796 (* 256 ?x2218)))
 (let ((?x2797 (* 128 ?x2216)))
 (let ((?x530 (* (- 24) ?x1991)))
 (let ((?x2793 (* (- 512) ?x1951)))
 (let ((?x2800 (* (- 128) ?x1724)))
 (let ((?x2799 (* (- 32) ?x1697)))
 (let ((?x1700 (* 8 ?x1174)))
 (let ((?x934 (* (- 2) (* q q r r r x))))
 (let ((?x2782 (* (- 2) d)))
 (let ((?x1030 (+ (- 4) q ?x144 ?x179 ?x2782)))
 (let ((?x2781 (+ (- 8) q)))
 (let ((?x1057 (* (- 1) (* ?x2781 ?x2781 ?x2781 ?x2402 ?x1030 r))))
 (let ((?x932 (* (- 1) (* ?x2781 ?x2781 ?x2402 ?x2402 ?x1030 ?x1030))))
 (let ((?x2802 (* (- 2) ?x855)))
 (let ((?x2568 (* 4 (* q q r r r r))))
 (let ((?x2806 (* 16 ?x692)))
 (let ((?x2803 (* (- 128) ?x647)))
 (let ((?x2792 (* (- 32) ?x395)))
 (let ((?x1718 (* (- 64) ?x381)))
 (let ((?x2220 (+ ?x1922 ?x1718 ?x2792 (* (- 8) (* q 2 ?x2782 r r r)) ?x2803 ?x2806 ?x2568 (* (- 8) (* q 2 q r r r)) ?x2802 ?x932 (* (- 8) (* q 2 (- 4) r r r)) ?x1057 ?x934 (* (- 8) (* q d (- 4) r r r)) (* (- 8) (* q d ?x144 r r r)) (* (- 8) (* q 2 ?x179 r r r)) ?x1700 (* (- 8) (* q 2 ?x144 r r r)) ?x2799 ?x1723 ?x2800 (* 16 ?x1734) (* (- 8) (* q d ?x179 r r r)) (* (- 8) (* q d ?x2782 r r r)) ?x2793 ?x1990 ?x530 (* 128 ?x2054) ?x2797 ?x2796 ?x2362 ?x2785 ?x2786 ?x2787 ?x2419 (* (- 24) ?x2492) ?x2554 ?x2789 ?x2790 ?x2791 ?x2824)))
 (let ((?x2293 (* 8 d)))
 (let ((?x195 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x463 ?x2293 ?x2453 ?x2455 ?x2451)))
 (let ((?x2764 (* (- 4) (* (* (- 1) d) r r))))
 (let ((?x2327 (* 2 ?x2753)))
 (let ((?x2326 (* (- 4) ?x2751)))
 (let ((?x2323 (* (- 64) ?x2744)))
 (let ((?x2321 (* (- 1) ?x2412)))
 (let ((?x2320 (* (- 4) ?x2404)))
 (let ((?x1730 (* (- 12) ?x1991)))
 (let ((?x2328 (* (- 64) ?x1951)))
 (let ((?x2364 (* (- 16) ?x1724)))
 (let ((?x2363 (* (- 16) ?x1697)))
 (let ((?x2305 (* (- 1) d)))
 (let ((?x735 (+ (- 2) q ?x144 ?x179 ?x2305)))
 (let ((?x2304 (+ (- 4) q)))
 (let ((?x1485 (* (- 1) (* ?x2304 ?x2304 ?x2402 ?x2402 ?x735 ?x735))))
 (let ((?x1343 (* (- 1) (* ?x2304 ?x2304 ?x2304 ?x2402 ?x735 r))))
 (let ((?x2365 (* (- 1) ?x855)))
 (let ((?x2368 (* 8 ?x692)))
 (let ((?x555 (+ ?x1922 ?x1113 ?x1809 ?x643 (* (- 4) (* q d ?x2305 r r r)) ?x2368 ?x2568 (* (- 4) (* q 2 q r r r)) ?x2365 ?x934 (* (- 4) (* q d ?x144 r r r)) (* (- 4) (* q 2 ?x179 r r r)) (* 4 ?x1174) (* (- 4) (* q 2 (- 2) r r r)) (* (- 4) (* q d (- 2) r r r)) (* (- 4) (* q 2 ?x144 r r r)) ?x1343 ?x1485 (* (- 4) (* q 2 ?x2305 r r r)) ?x2363 ?x1723 ?x2364 (* 4 ?x1734) (* (- 4) (* q d ?x179 r r r)) ?x2328 ?x1990 ?x1730 (* 32 ?x2054) ?x2217 ?x2219 (* (- 8) ?x2223) ?x2320 ?x2413 ?x2321 ?x2419 (* (- 12) ?x2492) ?x2554 ?x2323 ?x2326 ?x2327 ?x2764)))
 (let ((?x801 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x463 ?x2453 ?x2455 ?x2451)))
 (let ((?x435 (* 2 ?x2406)))
 (let ((?x2283 (* (- 4) (* q q x x))))
 (let ((?x2242 (* (- 16) (* q q r r d))))
 (let ((?x2232 (* (- 4) (* q q r r d d))))
 (let ((?x2230 (* 16 (* q q r x))))
 (let ((?x2516 (* (- 4) (* q q x x d))))
 (let ((?x2638 (* 16 (* q q r x d))))
 (let ((?x2204 (* (- 1) (* q q x x d d))))
 (let ((?x2608 (* 4 (* q q r x d d))))
 (let ((?x1261 (* (- 1) (* q q q q r d))))
 (let ((?x1875 (* (- 4) (* q q q r d d))))
 (let ((?x1873 (* (- 16) (* q q q r d))))
 (let ((?x1867 (* (- 1) (* q q q q d d))))
 (let ((?x1835 (* (- 4) (* q q q q d))))
 (let ((?x2378 (* (- 2) (* q q q r r d))))
 (let ((?x1800 (* q q q r x d)))
 (let ((?x2592 (* 2 (* q q q x d d))))
 (let ((?x1033 (* q q q r x)))
 (let ((?x1794 (* 2 ?x1033)))
 (let ((?x1023 (* q q q x)))
 (let ((?x2228 (* 8 ?x1023)))
 (let ((?x986 (* q q q r r)))
 (let ((?x1793 (* (- 4) ?x986)))
 (let ((?x944 (* q q q q r)))
 (let ((?x437 (* (- 2) ?x944)))
 (let ((?x936 (* q q q q)))
 (let ((?x1795 (* (- 4) ?x936)))
 (let ((?x868 (* q q q r)))
 (let ((?x1868 (* (- 16) ?x868)))
 (let ((?x390 (* (- 16) (* q q r r))))
 (let ((?x2639 (* 8 (* q q q x d))))
 (let ((?x2722 (+ ?x1922 ?x2639 ?x390 ?x1868 ?x1795 ?x437 ?x1793 ?x2228 ?x1794 ?x1723 ?x2592 ?x1800 ?x2378 ?x1835 ?x1867 ?x1873 ?x1875 ?x1261 ?x2608 ?x1990 ?x2204 ?x2638 ?x2516 ?x2230 ?x2232 ?x2242 ?x2283 ?x435 ?x2419 (* 2 (* ?x179 r r r q q)) (* 2 (* q r r r q q)) (* 2 (* ?x144 r r r q q)))))
 (let (($x237 (or (not (= (* ?x2722 ?x801) 0)) (not (= (* ?x555 ?x195) 0)) (not (= (* ?x2220 ?x1455) 0)) (not (= ?x1814 0)))))
 (let (($x1702 (= ?x801 0)))
 (let (($x434 (and $x1702 $x237)))
 (let ((?x1919 (* 4 (* d00 r00))))
 (let ((?x1881 (* 4 (* ?x2402 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x1937 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x1284 (+ ?x427 ?x1937 ?x30 ?x182 ?x1881 ?x214 ?x230 (* ?x2402 ?x2402 q) (* (- 2) (* ?x2402 q)) ?x280 (* (- 4) (* ?x2402 (+ ?x144 ?x179 q))) ?x1919)))
 (let ((?x1784 (* (- 1) (* ?x2402 ?x2402 (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) q q))))
 (let ((?x1275 (+ (* (- 1) (* ?x2402 (+ ?x144 ?x179 q) r q q q)) ?x1784 (* (+ ?x144 ?x179 q) r r q) (* (- 1) (* r r q q)) (* ?x2402 (+ ?x144 ?x179 q) r r r q q))))
 (let ((?x1752 (+ 16 ?x427 ?x1937 ?x30 ?x2293 ?x182 ?x1881 ?x214 ?x230 (* ?x2402 ?x2402 ?x2403) (* (- 2) (* ?x2402 ?x2403)) ?x280 (* (- 4) (* ?x2402 (+ 2 ?x144 ?x179 q d))) ?x1919)))
 (let ((?x406 (+ 2 ?x144 ?x179 q d)))
 (let ((?x1420 (+ (* (- 1) (* ?x2402 ?x2403 ?x2403 ?x2403 ?x406 r)) (* (- 1) (* ?x2402 ?x2402 ?x2403 ?x2403 ?x406 ?x406)) (* ?x2403 ?x406 r r) (* (- 1) (* ?x2403 ?x2403 r r)) (* ?x2402 ?x2403 ?x2403 ?x406 r r r))))
 (let ((?x1940 (+ (- 16) ?x427 ?x1937 ?x30 ?x2458 ?x182 ?x1881 ?x214 ?x230 (* ?x2304 ?x2402 ?x2402) (* (- 2) (* ?x2304 ?x2402)) ?x280 (* (- 4) (* ?x2402 (+ (- 2) ?x144 ?x179 q ?x2305))) ?x1919)))
 (let ((?x1921 (+ (- 2) ?x144 ?x179 q ?x2305)))
 (let ((?x263 (+ (* (- 1) (* ?x2304 ?x2304 ?x2304 ?x2402 ?x1921 r)) (* (- 1) (* ?x2304 ?x2304 ?x2402 ?x2402 ?x1921 ?x1921)) (* ?x2304 ?x1921 r r) (* (- 1) (* ?x2304 ?x2304 r r)) (* ?x2304 ?x2304 ?x2402 ?x1921 r r r))))
 (let ((?x1917 (+ (- 32) ?x427 ?x1937 ?x30 (* (- 16) d) ?x182 ?x1881 ?x214 ?x230 (* ?x2781 ?x2402 ?x2402) (* (- 2) (* ?x2781 ?x2402)) ?x280 (* (- 4) (* ?x2402 (+ (- 4) ?x144 ?x179 q ?x2782))) ?x1919)))
 (let ((?x661 (+ (- 4) ?x144 ?x179 q ?x2782)))
 (let ((?x1962 (+ (* (- 1) (* ?x2781 ?x2781 ?x2781 ?x2402 ?x661 r)) (* (- 1) (* ?x2781 ?x2781 ?x2402 ?x2402 ?x661 ?x661)) (* ?x2781 ?x661 r r) (* (- 1) (* ?x2781 ?x2781 r r)) (* ?x2781 ?x2781 ?x2402 ?x661 r r r))))
 (let (($x1285 (or (not (= (* ?x1962 ?x1917) 0)) (not (= (* ?x263 ?x1940) 0)) (not (= (* ?x1420 ?x1752) 0)) (not (= (* ?x1275 ?x1284) 0)))))
 (let ((?x651 (+ ?x211 ?x182 ?x463 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1919)))
 (let (($x1286 (and (= ?x651 0) $x1285)))
 (rewrite (= $x1286 $x434))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x175 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x146 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x163 (- (* (- 1) ?x62 ?x152 ?x152 ?x152 ?x146 r) (* ?x62 ?x62 ?x152 ?x152 ?x146 ?x146))))
 (let ((?x169 (+ (- (+ ?x163 (* ?x152 ?x146 r r)) (* ?x152 ?x152 r r)) (* ?x62 ?x152 ?x152 ?x146 r r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x150 (- (+ (- (* 8 ?x146) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x157 (+ (- (+ (- ?x150 ?x41) (* ?x62 ?x62 ?x152)) (* 2 ?x62 ?x152)) ?x49)))
 (let ((?x117 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x134 (- (* (- 1) ?x62 ?x123 ?x123 ?x123 ?x117 r) (* ?x62 ?x62 ?x123 ?x123 ?x117 ?x117))))
 (let ((?x140 (+ (- (+ ?x134 (* ?x123 ?x117 r r)) (* ?x123 ?x123 r r)) (* ?x62 ?x123 ?x123 ?x117 r r r))))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let ((?x109 (* q q r r)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x106 (- (* (- 1) ?x62 q q q ?x90 r) (* ?x62 ?x62 q q ?x90 ?x90))))
 (let ((?x112 (+ (- (+ ?x106 (* q ?x90 r r)) ?x109) (* ?x62 q q ?x90 r r r))))
 (let ((?x94 (- (+ (- (* 8 ?x90) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x100 (+ (- (+ (- ?x94 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (- (* (- 1) ?x62 ?x67 ?x67 ?x67 ?x59 r) (* ?x62 ?x62 ?x67 ?x67 ?x59 ?x59))))
 (let ((?x86 (+ (- (+ ?x80 (* ?x67 ?x59 r r)) (* ?x67 ?x67 r r)) (* ?x62 ?x67 ?x67 ?x59 r r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x173 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x86) 0)) (not (= (* (+ (- ?x100 (* 4 ?x62 ?x90)) ?x53) ?x112) 0)) (not (= (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) ?x140) 0)) (not (= (* (+ (- ?x157 (* 4 ?x62 ?x146)) ?x53) ?x169) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x173)))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x2431 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x1919 (* 4 (* d00 r00))))
 (let ((?x1061 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1017 (* 4 (* (+ 2 d) r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x876 (* 8 q)))
 (let ((?x1937 (* (- 8) x)))
 (let ((?x1930 (* 16 r)))
 (let ((?x216 (+ ?x1930 ?x1937 ?x876 ?x182 ?x1017 ?x214 ?x230 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x280 ?x1061 ?x1919)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x325 (+ ?x57 ?x179 q)))
 (let ((?x285 (+ 2 d)))
 (let ((?x1144 (+ (* (- 1) (* ?x285 ?x325 r q q q)) (* (- 1) (* ?x285 ?x285 ?x325 ?x325 q q)) (* ?x325 r r q) (* (- 1) (* r r q q)) (* ?x285 ?x325 r r r q q))))
 (let ((?x211 (* 8 d)))
 (let ((?x981 (+ 16 ?x1930 ?x1937 ?x876 ?x211 ?x182 ?x1017 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 (+ 2 ?x57 ?x179 q d))) ?x1919)))
 (let ((?x970 (+ 2 ?x57 ?x179 q d)))
 (let ((?x369 (+ 4 q)))
 (let ((?x1049 (+ (* (- 1) (* ?x285 ?x369 ?x369 ?x369 ?x970 r)) (* (- 1) (* ?x285 ?x285 ?x369 ?x369 ?x970 ?x970)) (* ?x369 ?x970 r r) (* (- 1) (* ?x369 ?x369 r r)) (* ?x285 ?x369 ?x369 ?x970 r r r))))
 (let ((?x472 (* (- 8) d)))
 (let ((?x1716 (+ (- 16) ?x1930 ?x1937 ?x876 ?x472 ?x182 ?x1017 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 2) ?x57 ?x179 q (* (- 1) d)))) ?x1919)))
 (let ((?x1173 (* (- 1) d)))
 (let ((?x911 (+ (- 2) ?x57 ?x179 q ?x1173)))
 (let ((?x362 (+ (- 4) q)))
 (let ((?x1751 (+ (* (- 1) (* ?x362 ?x362 ?x362 ?x285 ?x911 r)) (* (- 1) (* ?x362 ?x362 ?x285 ?x285 ?x911 ?x911)) (* ?x362 ?x911 r r) (* (- 1) (* ?x362 ?x362 r r)) (* ?x362 ?x362 ?x285 ?x911 r r r))))
 (let ((?x1308 (+ (- 32) ?x1930 ?x1937 ?x876 (* (- 16) d) ?x182 ?x1017 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 4) ?x57 ?x179 q (* (- 2) d)))) ?x1919)))
 (let ((?x2087 (* (- 2) d)))
 (let ((?x215 (+ (- 4) ?x57 ?x179 q ?x2087)))
 (let ((?x1112 (+ (- 8) q)))
 (let ((?x1388 (+ (* (- 1) (* ?x1112 ?x1112 ?x1112 ?x285 ?x215 r)) (* (- 1) (* ?x1112 ?x1112 ?x285 ?x285 ?x215 ?x215)) (* ?x1112 ?x215 r r) (* (- 1) (* ?x1112 ?x1112 r r)) (* ?x1112 ?x1112 ?x285 ?x215 r r r))))
 (let (($x650 (or (not (= (* ?x1388 ?x1308) 0)) (not (= (* ?x1751 ?x1716) 0)) (not (= (* ?x1049 ?x981) 0)) (not (= (* ?x1144 ?x216) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x805 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1919)))
 (and (= ?x805 0) $x650)))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x910 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x1919 (* 4 (* d00 r00))))
 (let ((?x1061 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1017 (* 4 (* (+ 2 d) r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x876 (* 8 q)))
 (let ((?x1937 (* (- 8) x)))
 (let ((?x1930 (* 16 r)))
 (let ((?x216 (+ ?x1930 ?x1937 ?x876 ?x182 ?x1017 ?x214 ?x230 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x280 ?x1061 ?x1919)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x325 (+ ?x57 ?x179 q)))
 (let ((?x285 (+ 2 d)))
 (let ((?x1144 (+ (* (- 1) (* ?x285 ?x325 r q q q)) (* (- 1) (* ?x285 ?x285 ?x325 ?x325 q q)) (* ?x325 r r q) (* (- 1) (* r r q q)) (* ?x285 ?x325 r r r q q))))
 (let ((?x211 (* 8 d)))
 (let ((?x981 (+ 16 ?x1930 ?x1937 ?x876 ?x211 ?x182 ?x1017 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 (+ 2 ?x57 ?x179 q d))) ?x1919)))
 (let ((?x970 (+ 2 ?x57 ?x179 q d)))
 (let ((?x369 (+ 4 q)))
 (let ((?x1049 (+ (* (- 1) (* ?x285 ?x369 ?x369 ?x369 ?x970 r)) (* (- 1) (* ?x285 ?x285 ?x369 ?x369 ?x970 ?x970)) (* ?x369 ?x970 r r) (* (- 1) (* ?x369 ?x369 r r)) (* ?x285 ?x369 ?x369 ?x970 r r r))))
 (let ((?x472 (* (- 8) d)))
 (let ((?x1716 (+ (- 16) ?x1930 ?x1937 ?x876 ?x472 ?x182 ?x1017 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 2) ?x57 ?x179 q (* (- 1) d)))) ?x1919)))
 (let ((?x1173 (* (- 1) d)))
 (let ((?x911 (+ (- 2) ?x57 ?x179 q ?x1173)))
 (let ((?x362 (+ (- 4) q)))
 (let ((?x1751 (+ (* (- 1) (* ?x362 ?x362 ?x362 ?x285 ?x911 r)) (* (- 1) (* ?x362 ?x362 ?x285 ?x285 ?x911 ?x911)) (* ?x362 ?x911 r r) (* (- 1) (* ?x362 ?x362 r r)) (* ?x362 ?x362 ?x285 ?x911 r r r))))
 (let ((?x1308 (+ (- 32) ?x1930 ?x1937 ?x876 (* (- 16) d) ?x182 ?x1017 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 4) ?x57 ?x179 q (* (- 2) d)))) ?x1919)))
 (let ((?x2087 (* (- 2) d)))
 (let ((?x215 (+ (- 4) ?x57 ?x179 q ?x2087)))
 (let ((?x1112 (+ (- 8) q)))
 (let ((?x1388 (+ (* (- 1) (* ?x1112 ?x1112 ?x1112 ?x285 ?x215 r)) (* (- 1) (* ?x1112 ?x1112 ?x285 ?x285 ?x215 ?x215)) (* ?x1112 ?x215 r r) (* (- 1) (* ?x1112 ?x1112 r r)) (* ?x1112 ?x1112 ?x285 ?x215 r r r))))
 (let (($x650 (or (not (= (* ?x1388 ?x1308) 0)) (not (= (* ?x1751 ?x1716) 0)) (not (= (* ?x1049 ?x981) 0)) (not (= (* ?x1144 ?x216) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x805 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1919)))
 (let (($x655 (and (= ?x805 0) $x650)))
 (let ((?x146 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x163 (- (* (- 1) ?x62 ?x152 ?x152 ?x152 ?x146 r) (* ?x62 ?x62 ?x152 ?x152 ?x146 ?x146))))
 (let ((?x169 (+ (- (+ ?x163 (* ?x152 ?x146 r r)) (* ?x152 ?x152 r r)) (* ?x62 ?x152 ?x152 ?x146 r r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x150 (- (+ (- (* 8 ?x146) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x157 (+ (- (+ (- ?x150 ?x41) (* ?x62 ?x62 ?x152)) (* 2 ?x62 ?x152)) ?x49)))
 (let ((?x117 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x134 (- (* (- 1) ?x62 ?x123 ?x123 ?x123 ?x117 r) (* ?x62 ?x62 ?x123 ?x123 ?x117 ?x117))))
 (let ((?x140 (+ (- (+ ?x134 (* ?x123 ?x117 r r)) (* ?x123 ?x123 r r)) (* ?x62 ?x123 ?x123 ?x117 r r r))))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let ((?x109 (* q q r r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x106 (- (* (- 1) ?x62 q q q ?x90 r) (* ?x62 ?x62 q q ?x90 ?x90))))
 (let ((?x112 (+ (- (+ ?x106 (* q ?x90 r r)) ?x109) (* ?x62 q q ?x90 r r r))))
 (let ((?x94 (- (+ (- (* 8 ?x90) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x100 (+ (- (+ (- ?x94 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (- (* (- 1) ?x62 ?x67 ?x67 ?x67 ?x59 r) (* ?x62 ?x62 ?x67 ?x67 ?x59 ?x59))))
 (let ((?x86 (+ (- (+ ?x80 (* ?x67 ?x59 r r)) (* ?x67 ?x67 r r)) (* ?x62 ?x67 ?x67 ?x59 r r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x173 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x86) 0)) (not (= (* (+ (- ?x100 (* 4 ?x62 ?x90)) ?x53) ?x112) 0)) (not (= (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) ?x140) 0)) (not (= (* (+ (- ?x157 (* 4 ?x62 ?x146)) ?x53) ?x169) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x174 (and (= ?x54 0) $x173)))
 (rewrite (= $x174 $x655))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1290 (trans (quant-intro (proof-bind ?x910) (= $x175 $x2431)) (elim-unused (= $x2431 $x1212)) (= $x175 $x1212))))
 (let ((@x27 (asserted $x175)))
 (let ((@x1142 (mp (mp (mp @x27 @x1290 $x1212) (rewrite (= $x1212 $x1212)) $x1212) (quant-intro (proof-bind ?x1337) (= $x1212 $x1231)) $x1231)))
 (let ((@x538 (mp~ (mp @x1142 (quant-intro (proof-bind ?x1549) (= $x1231 $x444)) $x444) (sk (~ $x444 $x2464)) $x2464)))
 (let ((@x1774 (mp @x538 (rewrite (= $x2464 $x716)) $x716)))
 (let ((@x1134 (and-elim @x1774 $x448)))
 (let ((@x1249 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x448) $x2056)) @x1134 $x2056)))
 (let (($x1424 (<= ?x445 0)))
 (let ((@x2156 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x448) $x1424)) @x1134 $x1424)))
 (let (($x1952 (not (<= ?x1535 0))))
 (let (($x1400 (<= ?x524 0)))
 (let (($x1798 (>= ?x524 0)))
 (let ((@x1391 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x709 (not $x1400) (not $x1798))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1798)) @x2156 @x1249 false) $x1798) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1400)) @x2156 @x1249 false) $x1400) $x709)))
 (let (($x1511 (>= ?x1454 0)))
 (let (($x1810 (<= ?x1454 0)))
 (let ((@x1247 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1188 (not $x1810) (not $x1511))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1810)) @x2156 @x1249 false) $x1810) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1511)) @x2156 @x1249 false) $x1511) $x1188)))
 (let (($x1410 (>= ?x1355 0)))
 (let (($x760 (<= ?x1355 0)))
 (let ((@x1239 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1241 (not $x760) (not $x1410))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x760)) @x2156 @x1249 false) $x760) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1410)) @x2156 @x1249 false) $x1410) $x1241)))
 (let ((@x2246 (unit-resolution (unit-resolution (and-elim @x1774 $x1915) @x1239 @x1247 (or $x544 $x2461)) @x1391 $x2461)))
 (let (($x1829 (>= ?x1535 0)))
 (let ((@x1417 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1406 $x1952 (not $x1829))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1829)) @x2156 @x1249 false) $x1829) @x2246 $x1952)))
 ((_ th-lemma arith farkas 1 1 1) @x1417 @x2156 @x1249 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        102
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1424
 :arith-nonlinear-bounds    64
 :arith-num-rows            13
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 122
 :arith-tableau-max-rows    13
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                4.05
 :memory                    3.45
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1635824
 :num-checks                1
 :propagations              36
 :rlimit-count              15618
 :time                      0.01
 :total-time                0.02)
