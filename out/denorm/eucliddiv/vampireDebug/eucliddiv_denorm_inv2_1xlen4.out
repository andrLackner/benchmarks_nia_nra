% Warning: check-sat is not the last entry. Skipping the rest!
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_2 on eucliddiv_denorm_inv2_1xlen4
% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for eucliddiv_denorm_inv2_1xlen4
% SZS output start Proof for eucliddiv_denorm_inv2_1xlen4
1. ? [X2 : $int,X1 : $int,X0 : $int] : (0 = $sum($product($uminus(1),y00),X2) & 0 = $sum($difference($difference(X1,r00),$product(q00,y00)),$product(X0,y00)) & ~0 = $product($sum($difference($difference($difference(X1,y00),r00),$product(q00,y00)),$product($sum(X0,1),y00)),$sum($difference($sum($product($product($sum(X0,1),$sum(X0,1)),$sum(X0,1)),$product($product($product($product($sum(X0,1),$sum(X0,1)),$sum(X0,1)),$difference(X1,y00)),$difference(X1,y00))),$product($product($sum(X0,1),$sum(X0,1)),$difference(X1,y00))),$product($product($product($product($sum(X0,1),$sum(X0,1)),$sum(X0,1)),y00),y00)))) [input]
2. ? [X2 : $int,X1 : $int,X0 : $int] : (0 = $sum($product($uminus(1),y00),X2) & 0 = $sum($sum($difference(X1,r00),$uminus($product(q00,y00))),$product(X0,y00)) & ~0 = $product($sum($sum($difference($difference(X1,y00),r00),$uminus($product(q00,y00))),$product($sum(X0,1),y00)),$sum($sum($sum($product($product($sum(X0,1),$sum(X0,1)),$sum(X0,1)),$product($product($product($product($sum(X0,1),$sum(X0,1)),$sum(X0,1)),$difference(X1,y00)),$difference(X1,y00))),$uminus($product($product($sum(X0,1),$sum(X0,1)),$difference(X1,y00)))),$product($product($product($product($sum(X0,1),$sum(X0,1)),$sum(X0,1)),y00),y00)))) [theory normalization 1]
3. $sum(X0,X1) = $sum(X1,X0) [theory axiom 144]
4. $sum(X0,$sum(X1,X2)) = $sum($sum(X0,X1),X2) [theory axiom 145]
6. $uminus($sum(X0,X1)) = $sum($uminus(X1),$uminus(X0)) [theory axiom 148]
14. $product(X0,X1) = $product(X1,X0) [theory axiom 144]
21. ? [X2 : $int,X1 : $int,X0 : $int] : (0 = $sum($product($uminus(1),y00),X2) & 0 = $sum($sum($sum(X1,$uminus(r00)),$uminus($product(q00,y00))),$product(X0,y00)) & ~0 = $product($sum($sum($sum($difference(X1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(X0,1),y00)),$sum($sum($sum($product($product($sum(X0,1),$sum(X0,1)),$sum(X0,1)),$product($product($product($product($sum(X0,1),$sum(X0,1)),$sum(X0,1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00)))),$uminus($product($product($sum(X0,1),$sum(X0,1)),$sum(X1,$uminus(y00))))),$product($product($product($product($sum(X0,1),$sum(X0,1)),$sum(X0,1)),y00),y00)))) [theory normalization 2]
22. ? [X0 : $int,X1 : $int,X2 : $int] : (0 = $sum($product($uminus(1),y00),X0) & 0 = $sum($sum($sum(X1,$uminus(r00)),$uminus($product(q00,y00))),$product(X2,y00)) & ~0 = $product($sum($sum($sum($difference(X1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(X2,1),y00)),$sum($sum($sum($product($product($sum(X2,1),$sum(X2,1)),$sum(X2,1)),$product($product($product($product($sum(X2,1),$sum(X2,1)),$sum(X2,1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00)))),$uminus($product($product($sum(X2,1),$sum(X2,1)),$sum(X1,$uminus(y00))))),$product($product($product($product($sum(X2,1),$sum(X2,1)),$sum(X2,1)),y00),y00)))) [rectify 21]
23. ? [X0 : $int,X1 : $int,X2 : $int] : (0 = $sum($product($uminus(1),y00),X0) & 0 = $sum($sum($sum(X1,$uminus(r00)),$uminus($product(q00,y00))),$product(X2,y00)) & 0 != $product($sum($sum($sum($difference(X1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(X2,1),y00)),$sum($sum($sum($product($product($sum(X2,1),$sum(X2,1)),$sum(X2,1)),$product($product($product($product($sum(X2,1),$sum(X2,1)),$sum(X2,1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00)))),$uminus($product($product($sum(X2,1),$sum(X2,1)),$sum(X1,$uminus(y00))))),$product($product($product($product($sum(X2,1),$sum(X2,1)),$sum(X2,1)),y00),y00)))) [flattening 22]
24. 0 != $product($sum($sum($sum($difference(sK1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(sK2,1),y00)),$sum($sum($sum($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),$product($product($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),$sum(sK1,$uminus(y00))),$sum(sK1,$uminus(y00)))),$uminus($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK1,$uminus(y00))))),$product($product($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),y00),y00))) [cnf transformation 23]
25. 0 = $sum($sum($sum(sK1,$uminus(r00)),$uminus($product(q00,y00))),$product(sK2,y00)) [cnf transformation 23]
26. 0 = $sum($product($uminus(1),y00),sK0) [cnf transformation 23]
28. 0 = $sum($product(-1,y00),sK0) [evaluation 26]
34. 1 <=> 0 = $sum($product(-1,y00),sK0) [avatar definition]
36. 0 = $sum($product(-1,y00),sK0) <- (1) [avatar component clause 34]
37. 1 [avatar split clause 28,34]
40. 0 = $sum(sK0,$product(-1,y00)) <- (1) [superposition 3,36]
43. 0 = $sum(sK0,$product(-1,y00)) <- (1) [superposition 3,36]
46. 0 = $sum(sK0,$product(-1,y00)) <- (1) [superposition 36,3]
49. 0 = $sum(sK0,$product(-1,y00)) <- (1) [superposition 36,3]
91. 2 <=> 0 = $sum(sK0,$product(-1,y00)) [avatar definition]
94. 2 | ~1 [avatar split clause 40,34,91]
95. 2 | ~1 [avatar split clause 43,34,91]
96. 2 | ~1 [avatar split clause 46,34,91]
97. 2 | ~1 [avatar split clause 49,34,91]
729. 0 = $sum($sum($sum(sK1,$uminus(r00)),$uminus($product(q00,y00))),$product(y00,sK2)) [forward demodulation 25,14]
730. 0 = $sum($sum(sK1,$sum($uminus(r00),$uminus($product(q00,y00)))),$product(y00,sK2)) [forward demodulation 729,4]
731. 0 = $sum($sum(sK1,$uminus($sum($product(q00,y00),r00))),$product(y00,sK2)) [forward demodulation 730,6]
732. 0 = $sum($sum(sK1,$uminus($sum(r00,$product(q00,y00)))),$product(y00,sK2)) [forward demodulation 731,3]
821. 3 <=> 0 = $sum($sum(sK1,$uminus($sum(r00,$product(q00,y00)))),$product(y00,sK2)) [avatar definition]
824. 3 [avatar split clause 732,821]
938. 0 != $product($sum($sum($sum($difference(sK1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(sK2,1),y00)),$sum($product($product($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),y00),y00),$sum($sum($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),$product($product($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),$sum(sK1,$uminus(y00))),$sum(sK1,$uminus(y00)))),$uminus($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK1,$uminus(y00))))))) [forward demodulation 24,3]
939. 0 != $product($sum($sum($sum($difference(sK1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(sK2,1),y00)),$sum($product($product($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),y00),y00),$sum($uminus($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK1,$uminus(y00)))),$sum($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),$product($product($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),$sum(sK1,$uminus(y00))),$sum(sK1,$uminus(y00))))))) [forward demodulation 938,3]
940. 0 != $product($sum($sum($sum($difference(sK1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(sK2,1),y00)),$sum($product($product($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),y00),y00),$sum($uminus($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK1,$uminus(y00)))),$sum($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),$product($sum(sK1,$uminus(y00)),$product($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),$sum(sK1,$uminus(y00)))))))) [forward demodulation 939,14]
941. 0 != $product($sum($sum($sum($difference(sK1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(sK2,1),y00)),$sum($product($product($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),y00),y00),$sum($uminus($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK1,$uminus(y00)))),$sum($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK2,1)))))))) [forward demodulation 940,14]
942. 0 != $product($sum($sum($sum($difference(sK1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(sK2,1),y00)),$sum($product($product($product($sum(sK2,1),$product($sum(sK2,1),$sum(sK2,1))),y00),y00),$sum($uminus($product($product($sum(sK2,1),$sum(sK2,1)),$sum(sK1,$uminus(y00)))),$sum($product($sum(sK2,1),$product($sum(sK2,1),$sum(sK2,1))),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product($sum(sK2,1),$product($sum(sK2,1),$sum(sK2,1))))))))) [forward demodulation 941,14]
943. 0 != $product($sum($sum($sum($difference(sK1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(1,sK2),y00)),$sum($product($product($product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))),y00),y00),$sum($uminus($product($product($sum(1,sK2),$sum(1,sK2)),$sum(sK1,$uminus(y00)))),$sum($product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))))))) [forward demodulation 942,3]
944. 0 != $product($sum($sum($sum($difference(sK1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(1,sK2),y00)),$sum($product($product($product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))),y00),y00),$sum($uminus($product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$sum(1,sK2)))),$sum($product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))))))) [forward demodulation 943,14]
945. 0 != $product($sum($sum($sum($difference(sK1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(1,sK2),y00)),$sum($product(y00,$product($product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))),y00)),$sum($uminus($product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$sum(1,sK2)))),$sum($product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))))))) [forward demodulation 944,14]
946. 0 != $product($sum($sum($sum($difference(sK1,y00),$uminus(r00)),$uminus($product(q00,y00))),$product($sum(1,sK2),y00)),$sum($product(y00,$product(y00,$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))),$sum($uminus($product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$sum(1,sK2)))),$sum($product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))))))) [forward demodulation 945,14]
947. 0 != $product($sum($product($sum(1,sK2),y00),$sum($sum($difference(sK1,y00),$uminus(r00)),$uminus($product(q00,y00)))),$sum($product(y00,$product(y00,$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))),$sum($uminus($product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$sum(1,sK2)))),$sum($product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))))))) [forward demodulation 946,3]
948. 0 != $product($sum($product($sum(1,sK2),y00),$sum($uminus($product(q00,y00)),$sum($difference(sK1,y00),$uminus(r00)))),$sum($product(y00,$product(y00,$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))),$sum($uminus($product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$sum(1,sK2)))),$sum($product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))))))) [forward demodulation 947,3]
949. 0 != $product($sum($product($sum(1,sK2),y00),$sum($uminus($product(q00,y00)),$sum($uminus(r00),$difference(sK1,y00)))),$sum($product(y00,$product(y00,$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))),$sum($uminus($product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$sum(1,sK2)))),$sum($product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))))))) [forward demodulation 948,3]
950. 0 != $product($sum($product(y00,$sum(1,sK2)),$sum($uminus($product(q00,y00)),$sum($uminus(r00),$difference(sK1,y00)))),$sum($product(y00,$product(y00,$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))),$sum($uminus($product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$sum(1,sK2)))),$sum($product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))))))) [forward demodulation 949,14]
1010. 4 <=> 0 = $product($sum($product(y00,$sum(1,sK2)),$sum($uminus($product(q00,y00)),$sum($uminus(r00),$difference(sK1,y00)))),$sum($product(y00,$product(y00,$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))),$sum($uminus($product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$sum(1,sK2)))),$sum($product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product($sum(1,sK2),$product($sum(1,sK2),$sum(1,sK2))))))))) [avatar definition]
1013. ~4 [avatar split clause 950,1010]
1014. $false [avatar smt refutation 37,94,95,96,97,824,1013]
% SZS output end Proof for eucliddiv_denorm_inv2_1xlen4
% ------------------------------
% Version: Vampire 4.6.1 (commit 1be729b10 on 2022-01-13 14:39:16 +0100)
% Linked with Z3 4.8.15.0 dfe2b27f9aa6d72583014fa301bd79d223fb254f z3-4.8.4-5822-gdfe2b27f9
% Termination reason: Refutation

% Memory used [KB]: 7931
% Time elapsed: 0.262 s
% ------------------------------
----  Runtime statistics ----
clauses created: 998
clauses deleted: 363
ssat_ground_clauses_for_congruence: 7
ssat_new_components: 4
ssat_non_splittable_sat_clauses: 7
ssat_reused_components: 3
ssat_sat_clauses: 7
-----------------------------
% ------------------------------
% Success in time 0.298 s
