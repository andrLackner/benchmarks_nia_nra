unsat
((set-logic NIA)
(declare-fun s!0 () Int)
(declare-fun b!2 () Int)
(declare-fun q!3 () Int)
(declare-fun p!5 () Int)
(declare-fun a!4 () Int)
(declare-fun r!1 () Int)
(proof
(let ((?x798 (* (- 1) (* q00 a00 s!0))))
 (let ((?x589 (* (- 1) (* p00 s00 b!2))))
 (let ((?x658 (* (- 1) (* r00 b00 q!3))))
 (let ((?x507 (* q00 r00 b!2)))
 (let ((?x491 (* p00 b00 s!0)))
 (let ((?x323 (* s00 a00 q!3)))
 (let ((?x807 (+ ?x323 ?x491 ?x507 ?x658 ?x589 ?x798)))
 (let (($x451 (<= ?x807 0)))
 (let (($x815 (= ?x807 0)))
 (let ((?x286 (* q00 a00 r!1)))
 (let ((?x228 (* (- 1) (* s00 a00 p!5))))
 (let ((?x453 (* (- 1) (* p00 b00 r!1))))
 (let ((?x258 (* (- 1) (* q00 r00 a!4))))
 (let ((?x260 (* p00 s00 a!4)))
 (let ((?x256 (* r00 b00 p!5)))
 (let ((?x854 (+ (* (- 1) p!5) q!3)))
 (let ((?x837 (* (- 1) a!4)))
 (let ((?x824 (+ b!2 ?x837)))
 (let ((?x836 (+ (* (- 1) r!1) s!0)))
 (let ((?x841 (* ?x836 ?x836 ?x836 ?x836 ?x836 ?x824 ?x824 ?x824 ?x824 ?x824 ?x824 ?x854 ?x854 (+ ?x256 ?x260 ?x258 ?x453 ?x228 ?x286 ?x323 ?x491 ?x507 ?x658 ?x589 ?x798) r!1 r!1 r!1 r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4 p!5 p!5 p!5 p!5 p!5 p!5 p!5)))
 (let (($x828 (= ?x841 0)))
 (let (($x842 (not $x828)))
 (let ((?x803 (+ p!5 (* (- 1) q!3))))
 (let ((?x879 (* (- 1) b!2)))
 (let ((?x829 (+ ?x879 a!4)))
 (let ((?x877 (+ r!1 (* (- 1) s!0))))
 (let ((?x839 (* ?x877 ?x877 ?x877 ?x877 ?x877 ?x877 ?x877 ?x877 ?x829 ?x829 ?x829 ?x829 ?x803 ?x803 ?x803 ?x803 ?x803 ?x803 ?x803 ?x807 s!0 s!0 s!0 s!0 s!0 b!2 b!2 b!2 b!2 b!2 b!2 q!3 q!3)))
 (let (($x843 (= ?x839 0)))
 (let (($x858 (or (not $x843) $x842)))
 (let ((?x631 (+ ?x256 ?x260 ?x258 ?x453 ?x228 ?x286)))
 (let (($x584 (= ?x631 0)))
 (let ((?x844 (* p!5 b!2)))
 (let ((?x129 (* q00 a00)))
 (let (($x647 (= (+ ?x129 (* (- 1) (* p00 b00)) (* (- 1) (* q!3 a!4)) ?x844) 0)))
 (let ((?x125 (* s00 a00)))
 (let ((?x786 (+ ?x125 (* (- 1) (* r00 b00)) (* (- 1) (* a!4 s!0)) (* r!1 b!2))))
 (let ((?x41 (* q00 r00)))
 (let ((?x632 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x865 (and (= (+ ?x37 ?x632 (* (- 1) (* p!5 s!0)) (* r!1 q!3)) 0) (= ?x786 0) $x647 $x584 $x815 $x858)))
 (let ((?x882 (* (- 1) (* s!0 q00 a00))))
 (let ((?x870 (* q!3 s00 a00)))
 (let ((?x869 (* (- 1) (* q!3 r00 b00))))
 (let ((?x189 (* s!0 p00 b00)))
 (let ((?x327 (* (- 1) (* b!2 p00 s00))))
 (let ((?x122 (* b!2 q00 r00)))
 (let ((?x884 (+ ?x122 ?x327 ?x189 ?x869 ?x870 ?x882)))
 (let ((?x136 (+ a!4 ?x879)))
 (let ((?x804 (* ?x877 ?x877 ?x877 ?x877 ?x877 ?x877 ?x877 ?x877 ?x136 ?x136 ?x136 ?x136 ?x803 ?x803 ?x803 ?x803 ?x803 ?x803 ?x803 ?x884 s!0 s!0 s!0 s!0 s!0 b!2 b!2 b!2 b!2 b!2 b!2 q!3 q!3)))
 (let ((?x812 (* r!1 q00 a00)))
 (let ((?x811 (* (- 1) (* p!5 s00 a00))))
 (let ((?x800 (* (- 1) (* r!1 p00 b00))))
 (let ((?x788 (* p!5 r00 b00)))
 (let ((?x787 (* (- 1) (* a!4 q00 r00))))
 (let ((?x864 (* a!4 p00 s00)))
 (let ((?x851 (+ ?x837 b!2)))
 (let ((?x462 (* ?x836 ?x836 ?x836 ?x836 ?x836 ?x851 ?x851 ?x851 ?x851 ?x851 ?x851 ?x854 ?x854 (+ ?x864 ?x787 ?x122 ?x327 ?x788 ?x800 ?x811 ?x812 ?x189 ?x869 ?x870 ?x882) r!1 r!1 r!1 r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4 p!5 p!5 p!5 p!5 p!5 p!5 p!5)))
 (let (($x863 (= (+ (* a!4 q!3) (* (- 1) ?x129) (* p00 b00) (* (- 1) ?x844)) 0)))
 (let ((?x143 (* r00 b00)))
 (let ((?x132 (* (- 1) ?x125)))
 (let ((?x283 (* a!4 s!0)))
 (let (($x460 (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) (* q!3 r!1))) 0)))
 (let (($x816 (and $x460 (= (+ ?x283 (* (- 1) (* b!2 r!1)) ?x132 ?x143) 0) $x863 (= (+ ?x864 ?x787 ?x788 ?x800 ?x811 ?x812) 0) (= ?x884 0) (or (not (= ?x462 0)) (not (= ?x804 0))))))
 (let (($x482 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x299 (* (- 1) (* s q00 a00))))
 (let ((?x282 (* q s00 a00)))
 (let ((?x257 (* (- 1) (* q r00 b00))))
 (let ((?x247 (* s p00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x271 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x305 (+ ?x72 ?x271 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let ((?x133 (* ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x314 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x305 s s s s s b b b b b b q q)))
 (let ((?x218 (* r q00 a00)))
 (let ((?x240 (* (- 1) (* p s00 a00))))
 (let ((?x239 (* (- 1) (* r p00 b00))))
 (let ((?x184 (* p r00 b00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x238 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x448 (+ ?x63 ?x238 ?x72 ?x271 ?x184 ?x239 ?x240 ?x218 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x608 (* (- 1) p)))
 (let ((?x604 (+ ?x608 q)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x331 (+ ?x325 b)))
 (let ((?x645 (* (- 1) r)))
 (let ((?x640 (+ ?x645 s)))
 (let ((?x489 (* ?x640 ?x640 ?x640 ?x640 ?x640 ?x331 ?x331 ?x331 ?x331 ?x331 ?x331 ?x604 ?x604 ?x448 r r r r r r r r a a a a p p p p p p p)))
 (let (($x310 (= ?x305 0)))
 (let (($x242 (= (+ ?x63 ?x238 ?x184 ?x239 ?x240 ?x218) 0)))
 (let ((?x130 (* p00 b00)))
 (let ((?x129 (* q00 a00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let (($x176 (= (+ (* a q) ?x173 ?x130 (* (- 1) (* p b))) 0)))
 (let ((?x143 (* r00 b00)))
 (let ((?x125 (* s00 a00)))
 (let ((?x132 (* (- 1) ?x125)))
 (let ((?x49 (* a s)))
 (let (($x158 (= (+ ?x49 (* (- 1) (* b r)) ?x132 ?x143) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x153 (= (+ ?x33 ?x134 ?x41 (* (- 1) (* q r))) 0)))
 (and $x153 $x158 $x176 $x242 $x310 (or (not (= ?x489 0)) (not (= ?x133 0))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x566 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x196 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x608 (* (- 1) p)))
 (let ((?x141 (+ q ?x608)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x456 (+ b ?x325)))
 (let ((?x645 (* (- 1) r)))
 (let ((?x579 (+ s ?x645)))
 (let ((?x223 (* ?x579 ?x579 ?x579 ?x579 ?x579 ?x456 ?x456 ?x456 ?x456 ?x456 ?x456 ?x141 ?x141 ?x196 r r r r r r r r a a a a p p p p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x126 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let ((?x444 (* ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x314 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x126 s s s s s b b b b b b q q)))
 (let (($x200 (or (not (= ?x444 0)) (not (= ?x223 0)))))
 (let (($x492 (= ?x126 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x288 (* p00 s00 a)))
 (let ((?x262 (* b00 r00 p)))
 (let ((?x570 (+ ?x262 ?x288 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x249 (* q a)))
 (let (($x295 (= (+ ?x249 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x469 (* r b)))
 (let (($x267 (= (+ ?x469 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x632 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x250 (* r q)))
 (and (= (+ ?x250 (* (- 1) (* s p)) ?x37 ?x632) 0) $x267 $x295 (= ?x570 0) $x492 $x200))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x225 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x299 (* (- 1) (* s q00 a00))))
 (let ((?x282 (* q s00 a00)))
 (let ((?x257 (* (- 1) (* q r00 b00))))
 (let ((?x247 (* s p00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x271 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x305 (+ ?x72 ?x271 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let ((?x133 (* ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x314 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x305 s s s s s b b b b b b q q)))
 (let ((?x218 (* r q00 a00)))
 (let ((?x240 (* (- 1) (* p s00 a00))))
 (let ((?x239 (* (- 1) (* r p00 b00))))
 (let ((?x184 (* p r00 b00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x238 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x448 (+ ?x63 ?x238 ?x72 ?x271 ?x184 ?x239 ?x240 ?x218 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x608 (* (- 1) p)))
 (let ((?x604 (+ ?x608 q)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x331 (+ ?x325 b)))
 (let ((?x645 (* (- 1) r)))
 (let ((?x640 (+ ?x645 s)))
 (let ((?x489 (* ?x640 ?x640 ?x640 ?x640 ?x640 ?x331 ?x331 ?x331 ?x331 ?x331 ?x331 ?x604 ?x604 ?x448 r r r r r r r r a a a a p p p p p p p)))
 (let (($x310 (= ?x305 0)))
 (let (($x242 (= (+ ?x63 ?x238 ?x184 ?x239 ?x240 ?x218) 0)))
 (let ((?x130 (* p00 b00)))
 (let ((?x129 (* q00 a00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let (($x176 (= (+ (* a q) ?x173 ?x130 (* (- 1) (* p b))) 0)))
 (let ((?x143 (* r00 b00)))
 (let ((?x125 (* s00 a00)))
 (let ((?x132 (* (- 1) ?x125)))
 (let ((?x49 (* a s)))
 (let (($x158 (= (+ ?x49 (* (- 1) (* b r)) ?x132 ?x143) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x153 (= (+ ?x33 ?x134 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x782 (and $x153 $x158 $x176 $x242 $x310 (or (not (= ?x489 0)) (not (= ?x133 0))))))
 (let ((?x196 (+ (* q00 r00 (+ b ?x325)) (* b00 p00 (+ s ?x645)) (* (- 1) (* b00 r00 (+ q ?x608))) (* (- 1) (* p00 s00 (+ b ?x325))) (* a00 s00 (+ q ?x608)) (* (- 1) (* a00 q00 (+ s ?x645))))))
 (let ((?x141 (+ q ?x608)))
 (let ((?x456 (+ b ?x325)))
 (let ((?x579 (+ s ?x645)))
 (let ((?x223 (* ?x579 ?x579 ?x579 ?x579 ?x579 ?x456 ?x456 ?x456 ?x456 ?x456 ?x456 ?x141 ?x141 ?x196 r r r r r r r r a a a a p p p p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x126 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x444 (* ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x314 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x126 s s s s s b b b b b b q q)))
 (let (($x200 (or (not (= ?x444 0)) (not (= ?x223 0)))))
 (let (($x492 (= ?x126 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x288 (* p00 s00 a)))
 (let ((?x262 (* b00 r00 p)))
 (let ((?x570 (+ ?x262 ?x288 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x249 (* q a)))
 (let (($x295 (= (+ ?x249 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x469 (* r b)))
 (let (($x267 (= (+ ?x469 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x565 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x558 (and $x565 $x267 $x295 (= ?x570 0) $x492 $x200)))
 (rewrite (= $x558 $x782)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x536 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x196 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x608 (* (- 1) p)))
 (let ((?x141 (+ q ?x608)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x456 (+ b ?x325)))
 (let ((?x645 (* (- 1) r)))
 (let ((?x579 (+ s ?x645)))
 (let ((?x223 (* ?x579 ?x579 ?x579 ?x579 ?x579 ?x456 ?x456 ?x456 ?x456 ?x456 ?x456 ?x141 ?x141 ?x196 r r r r r r r r a a a a p p p p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x126 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let ((?x444 (* ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x314 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x126 s s s s s b b b b b b q q)))
 (let (($x200 (or (not (= ?x444 0)) (not (= ?x223 0)))))
 (let (($x492 (= ?x126 0)))
 (let ((?x572 (* a00 s00 p)))
 (let ((?x185 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x618 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x185 ?x572 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x303 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x279 (* s a)))
 (let (($x292 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x279 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x255 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x255 ?x134 ?x41) 0) $x292 $x303 (= ?x618 0) $x492 $x200))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x562 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x196 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x608 (* (- 1) p)))
 (let ((?x141 (+ q ?x608)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x456 (+ b ?x325)))
 (let ((?x645 (* (- 1) r)))
 (let ((?x579 (+ s ?x645)))
 (let ((?x223 (* ?x579 ?x579 ?x579 ?x579 ?x579 ?x456 ?x456 ?x456 ?x456 ?x456 ?x456 ?x141 ?x141 ?x196 r r r r r r r r a a a a p p p p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x126 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let ((?x444 (* ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x314 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x126 s s s s s b b b b b b q q)))
 (let (($x200 (or (not (= ?x444 0)) (not (= ?x223 0)))))
 (let (($x492 (= ?x126 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x288 (* p00 s00 a)))
 (let ((?x262 (* b00 r00 p)))
 (let ((?x570 (+ ?x262 ?x288 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x249 (* q a)))
 (let (($x295 (= (+ ?x249 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x469 (* r b)))
 (let (($x267 (= (+ ?x469 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x632 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x250 (* r q)))
 (let (($x558 (and (= (+ ?x250 (* (- 1) (* s p)) ?x37 ?x632) 0) $x267 $x295 (= ?x570 0) $x492 $x200)))
 (let ((?x572 (* a00 s00 p)))
 (let ((?x185 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x523 (= (+ (* (- 1) ?x262) (* (- 1) ?x288) ?x65 ?x185 ?x572 (* (- 1) ?x69)) 0)))
 (let (($x303 (= (+ (* (- 1) ?x249) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x292 (= (+ (* (- 1) ?x469) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x139 (and (= (+ (* (- 1) ?x250) (* s p) (* (- 1) ?x37) ?x41) 0) $x292 $x303 $x523 $x492 $x200)))
 (rewrite (= $x139 $x558)))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x109 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x95 (- q p)))
 (let ((?x90 (- b a)))
 (let ((?x92 (- s r)))
 (let ((?x31 (- 1)))
 (let ((?x98 (- (+ (* ?x90 q00 r00) (* b00 p00 ?x92)) (* b00 ?x95 r00))))
 (let ((?x103 (- (+ (- ?x98 (* ?x90 p00 s00)) (* a00 ?x95 s00)) (* a00 q00 ?x92))))
 (let ((?x104 (* ?x103 ?x31 a ?x90 p p r a p p p ?x95 r r ?x92 ?x92 ?x92 a a ?x90 ?x90 ?x90 p p r r ?x92 ?x92 ?x90 ?x90 ?x95 r r r)))
 (let ((?x86 (- r s)))
 (let ((?x85 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x82 (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81)))
 (let ((?x87 (* ?x82 ?x31 ?x84 b ?x85 ?x85 ?x86 ?x84 ?x85 ?x85 ?x85 q ?x86 ?x86 s s s ?x84 ?x84 b b b ?x85 ?x85 ?x86 ?x86 s s b b q ?x86 ?x86 ?x86)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let ((?x41 (* q00 r00)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= (- ?x68 ?x69) 0) (= ?x82 0) (or (not (= ?x87 0)) (not (= ?x104 0))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x446 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x196 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x608 (* (- 1) p)))
 (let ((?x141 (+ q ?x608)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x456 (+ b ?x325)))
 (let ((?x645 (* (- 1) r)))
 (let ((?x579 (+ s ?x645)))
 (let ((?x223 (* ?x579 ?x579 ?x579 ?x579 ?x579 ?x456 ?x456 ?x456 ?x456 ?x456 ?x456 ?x141 ?x141 ?x196 r r r r r r r r a a a a p p p p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x126 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let ((?x444 (* ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x322 ?x314 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x318 ?x126 s s s s s b b b b b b q q)))
 (let (($x200 (or (not (= ?x444 0)) (not (= ?x223 0)))))
 (let (($x492 (= ?x126 0)))
 (let ((?x572 (* a00 s00 p)))
 (let ((?x185 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x618 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x185 ?x572 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x303 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x279 (* s a)))
 (let (($x292 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x279 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x255 (* s p)))
 (let (($x139 (and (= (+ (* (- 1) (* r q)) ?x255 ?x134 ?x41) 0) $x292 $x303 (= ?x618 0) $x492 $x200)))
 (let ((?x95 (- q p)))
 (let ((?x90 (- b a)))
 (let ((?x92 (- s r)))
 (let ((?x31 (- 1)))
 (let ((?x98 (- (+ (* ?x90 q00 r00) (* b00 p00 ?x92)) (* b00 ?x95 r00))))
 (let ((?x103 (- (+ (- ?x98 (* ?x90 p00 s00)) (* a00 ?x95 s00)) (* a00 q00 ?x92))))
 (let ((?x104 (* ?x103 ?x31 a ?x90 p p r a p p p ?x95 r r ?x92 ?x92 ?x92 a a ?x90 ?x90 ?x90 p p r r ?x92 ?x92 ?x90 ?x90 ?x95 r r r)))
 (let ((?x86 (- r s)))
 (let ((?x85 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x82 (- ?x80 ?x81)))
 (let ((?x87 (* ?x82 ?x31 ?x84 b ?x85 ?x85 ?x86 ?x84 ?x85 ?x85 ?x85 q ?x86 ?x86 s s s ?x84 ?x84 b b b ?x85 ?x85 ?x86 ?x86 s s b b q ?x86 ?x86 ?x86)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x108 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= (- ?x68 ?x69) 0) (= ?x82 0) (or (not (= ?x87 0)) (not (= ?x104 0))))))
 (rewrite (= $x108 $x139))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x110 (asserted $x109)))
 (let ((@x530 (mp (mp @x110 (quant-intro (proof-bind ?x446) (= $x109 $x536)) $x536) (rewrite (= $x536 $x536)) $x536)))
 (let ((@x886 (mp (mp @x530 (quant-intro (proof-bind ?x562) (= $x536 $x566)) $x566) (quant-intro (proof-bind ?x225) (= $x566 $x482)) $x482)))
 (let ((@x594 (mp (mp~ @x886 (sk (~ $x482 $x816)) $x816) (rewrite (= $x816 $x865)) $x865)))
 (let ((@x853 (and-elim @x594 $x815)))
 (let ((@x862 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x815) $x451)) @x853 $x451)))
 (let (($x494 (<= ?x631 0)))
 (let ((@x846 (and-elim @x594 $x584)))
 (let ((@x549 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x584) $x494)) @x846 $x494)))
 (let (($x215 (>= ?x807 0)))
 (let ((@x197 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x815) $x215)) @x853 $x215)))
 (let (($x617 (>= ?x631 0)))
 (let ((@x596 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x584) $x617)) @x846 $x617)))
 (let (($x602 (not (<= ?x841 0))))
 (let (($x792 (>= ?x841 0)))
 (let ((@x436 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x792)) @x596 @x197 @x549 @x862 false) $x792)))
 (let ((@x264 (unit-resolution (and-elim @x594 $x858) ((_ th-lemma arith eq-propagate 0 0 0 0) @x197 @x862 @x197 @x862 $x843) $x842)))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x828 $x602 (not $x792))) @x264 @x436 $x602) @x596 @x197 @x549 @x862 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 11
 :arith-assert-diseq        2
 :arith-assert-lower        15
 :arith-assert-upper        14
 :arith-conflicts           2
 :arith-eq-adapter          9
 :arith-fixed-eqs           4
 :arith-grobner             2
 :arith-max-min             174
 :arith-nonlinear-horner    24
 :arith-num-rows            12
 :arith-pivots              5
 :arith-pseudo-nonlinear    4
 :arith-row-summations      2
 :arith-tableau-max-columns 51
 :arith-tableau-max-rows    12
 :conflicts                 2
 :decisions                 2
 :del-clause                19
 :final-checks              2
 :max-memory                3.74
 :memory                    3.17
 :mk-bool-var               33
 :mk-clause                 32
 :num-allocs                1656564
 :num-checks                1
 :propagations              17
 :rlimit-count              6275
 :time                      0.01
 :total-time                0.02)
