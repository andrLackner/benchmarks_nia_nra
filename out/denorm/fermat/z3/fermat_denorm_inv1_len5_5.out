unsat
((set-logic NIA)
(declare-fun u!1 () Int)
(declare-fun v!0 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x813 (* u!1 u!1)))
 (let ((?x48 (* v00 v00)))
 (let ((?x33 (* 2 u00)))
 (let ((?x30 (* 4 r00)))
 (let ((?x946 (+ ?x30 ?x33 (* (- 2) v00) (* (- 1) (* u00 u00)) ?x48 (* (- 2) u!1) (* (- 4) r!2) (* 2 v!0) (* (- 1) (* v!0 v!0)) ?x813)))
 (let (($x551 (>= ?x946 0)))
 (let (($x450 (= ?x946 0)))
 (let ((?x802 (* (- 1) ?x813)))
 (let ((?x682 (* v!0 v!0)))
 (let ((?x509 (* (- 2) v!0)))
 (let ((?x1253 (* 4 r!2)))
 (let ((?x504 (* 2 u!1)))
 (let ((?x202 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x41 (* 2 v00)))
 (let ((?x126 (* (- 2) u00)))
 (let ((?x110 (* (- 4) r00)))
 (let ((?x363 (+ ?x110 ?x126 ?x41 ?x46 ?x202 ?x504 ?x1253 ?x509 ?x682 ?x802)))
 (let ((?x798 (* 8 (* r!2 r!2 r!2 v!0 v!0))))
 (let ((?x1266 (* u!1 u!1 u!1)))
 (let ((?x1293 (* 11 ?x1266)))
 (let ((?x513 (* 6 (* u!1 u!1 u!1 u!1 u!1 v!0 v!0))))
 (let ((?x989 (* u!1 u!1 u!1 v!0)))
 (let ((?x764 (* 12 (* u!1 u!1 u!1 u!1 v!0 v!0))))
 (let ((?x184 (* 8 (* r!2 r!2))))
 (let ((?x824 (* u!1 u!1 u!1 u!1 u!1)))
 (let ((?x1193 (* 6 (* u!1 u!1 u!1 u!1))))
 (let ((?x1288 (* 2 ?x813)))
 (let ((?x778 (* u!1 u!1 u!1 v!0 v!0)))
 (let ((?x700 (* 8 ?x778)))
 (let ((?x701 (* u!1 u!1 u!1 u!1 u!1 u!1 v!0 v!0)))
 (let ((?x653 (* u!1 u!1 v!0 v!0 v!0)))
 (let ((?x447 (* v!0 v!0 v!0)))
 (let ((?x490 (* 4 ?x447)))
 (let ((?x348 (* r!2 r!2 r!2 v!0)))
 (let ((?x157 (* u!1 u!1 u!1 r!2 r!2 r!2 v!0 v!0)))
 (let ((?x1212 (* (- 12) u!1)))
 (let ((?x122 (* u!1 u!1 u!1 r!2 r!2)))
 (let ((?x660 (* 4 (* u!1 v!0 v!0 v!0))))
 (let ((?x1009 (+ (- 8) (* 3 (* u!1 r!2 r!2 v!0)) ?x660 ?x122 ?x1212 ?x157 (* 36 (* u!1 u!1 u!1 r!2 v!0 v!0)) (* 12 (* u!1 r!2 r!2 r!2 v!0 v!0)) ?x348 ?x490 (* 12 (* u!1 u!1 u!1 r!2)) (* 2 (* u!1 u!1 u!1 u!1 r!2)) ?x653 (* 3 (* u!1 u!1 r!2 v!0)) ?x701 (* 3 (* u!1 u!1 u!1 u!1 u!1 r!2 v!0 v!0)) (* 6 (* u!1 u!1 r!2 r!2)) ?x700 (* 18 (* u!1 u!1 u!1 r!2 r!2 v!0 v!0)) ?x1288 ?x1193 ?x824 ?x184 ?x764 ?x989 (* 16 (* u!1 r!2)) (* 18 (* u!1 u!1 u!1 u!1 r!2 v!0 v!0)) ?x513 (* 3 (* u!1 u!1 u!1 u!1 r!2 r!2 v!0 v!0)) (* 36 (* u!1 u!1 r!2 r!2 v!0 v!0)) (* 24 (* u!1 r!2 r!2 v!0 v!0)) (* 24 (* u!1 u!1 r!2 v!0 v!0)) ?x1293 (* 6 (* u!1 u!1 r!2 r!2 r!2 v!0 v!0)) (* 12 (* u!1 r!2 r!2)) (* 24 (* u!1 u!1 r!2)) ?x798)))
 (let ((?x484 (* ?x1009 ?x363)))
 (let (($x943 (= ?x484 0)))
 (let (($x479 (not $x943)))
 (let ((?x1396 (* 3 (* r!2 v!0 v!0 v!0))))
 (let ((?x1415 (* (- 1) (* v!0 v!0 v!0 v!0))))
 (let ((?x1262 (* (- 1) ?x1266)))
 (let ((?x572 (* 6 (* u!1 u!1 v!0 v!0))))
 (let ((?x1449 (* (- 4) (* u!1 u!1 u!1 v!0 v!0 v!0))))
 (let ((?x1201 (* 6 (* r!2 v!0 v!0))))
 (let ((?x1195 (* (- 1) (* u!1 u!1 u!1 v!0 v!0 v!0 v!0 v!0))))
 (let ((?x1264 (* 8 ?x813)))
 (let ((?x832 (* (- 3) (* r!2 r!2 v!0 v!0))))
 (let ((?x859 (* (- 6) (* r!2 r!2 v!0))))
 (let ((?x446 (* (- 2) ?x447)))
 (let ((?x537 (* 2 (* r!2 r!2 r!2))))
 (let ((?x118 (* (- 4) (* u!1 u!1 u!1 v!0 v!0 v!0 v!0))))
 (let ((?x1247 (* 12 (* u!1 u!1 v!0))))
 (let ((?x1250 (+ ?x122 (* (- 12) (* u!1 u!1 u!1 r!2 r!2 v!0)) (* 4 (* u!1 u!1 u!1 r!2 r!2 r!2 v!0)) ?x157 ?x1247 (* 12 (* u!1 u!1 u!1 r!2 v!0 v!0)) (* 4 (* u!1 u!1 u!1 r!2 r!2 r!2)) ?x118 ?x348 ?x537 ?x446 ?x859 ?x653 ?x832 (* (- 3) (* u!1 u!1 u!1 r!2 r!2 v!0 v!0 v!0)) ?x778 (* (- 12) (* u!1 u!1 u!1 r!2 r!2 v!0 v!0)) ?x1264 ?x1195 (* 12 (* u!1 u!1 u!1 r!2 v!0 v!0 v!0)) ?x1201 ?x1449 ?x572 (* 3 (* u!1 u!1 u!1 r!2 v!0 v!0 v!0 v!0)) (* (- 2) (* u!1 u!1 u!1 r!2 v!0)) ?x1262 ?x1415 ?x1396)))
 (let ((?x1282 (* ?x1250 ?x363)))
 (let (($x196 (= ?x1282 0)))
 (let (($x211 (or (not $x196) $x479)))
 (let (($x523 (and $x450 $x211)))
 (let ((?x143 (+ ?x1253 ?x504 ?x509 ?x110 ?x126 ?x41 ?x802 ?x682 ?x46 ?x202)))
 (let ((?x723 (* r!2 r!2 u!1 u!1 u!1)))
 (let ((?x581 (* r!2 r!2 r!2 u!1 u!1 u!1 v!0 v!0)))
 (let ((?x139 (+ (- 8) ?x1212 ?x1288 ?x1293 ?x581 (* 36 (* r!2 u!1 u!1 u!1 v!0 v!0)) (* 18 (* r!2 r!2 u!1 u!1 u!1 v!0 v!0)) ?x723 ?x700 ?x348 ?x490 ?x653 (* 3 (* r!2 r!2 u!1 u!1 u!1 u!1 v!0 v!0)) (* 3 (* r!2 u!1 u!1 u!1 u!1 u!1 v!0 v!0)) ?x701 ?x798 (* 24 (* r!2 r!2 u!1 v!0 v!0)) (* 24 (* r!2 u!1 u!1 v!0 v!0)) (* 12 (* r!2 r!2 r!2 u!1 v!0 v!0)) (* 36 (* r!2 r!2 u!1 u!1 v!0 v!0)) ?x764 (* 6 (* r!2 r!2 r!2 u!1 u!1 v!0 v!0)) (* 18 (* r!2 u!1 u!1 u!1 u!1 v!0 v!0)) ?x513 (* 2 (* r!2 u!1 u!1 u!1 u!1)) ?x824 ?x184 (* 16 (* r!2 u!1)) (* 12 (* r!2 r!2 u!1)) (* 24 (* r!2 u!1 u!1)) (* 6 (* r!2 r!2 u!1 u!1)) (* 12 (* r!2 u!1 u!1 u!1)) ?x1193 (* 3 (* r!2 r!2 u!1 v!0)) (* 3 (* r!2 u!1 u!1 v!0)) ?x989 ?x660)))
 (let ((?x1251 (+ ?x1264 ?x1262 ?x581 (* 4 (* r!2 r!2 r!2 u!1 u!1 u!1)) (* (- 12) (* r!2 r!2 u!1 u!1 u!1 v!0)) (* 12 (* r!2 u!1 u!1 u!1 v!0 v!0)) ?x1449 (* 4 (* r!2 r!2 r!2 u!1 u!1 u!1 v!0)) (* (- 12) (* r!2 r!2 u!1 u!1 u!1 v!0 v!0)) (* 12 (* r!2 u!1 u!1 u!1 v!0 v!0 v!0)) ?x118 (* (- 3) (* r!2 r!2 u!1 u!1 u!1 v!0 v!0 v!0)) (* 3 (* r!2 u!1 u!1 u!1 v!0 v!0 v!0 v!0)) ?x1195 ?x723 (* (- 2) (* r!2 u!1 u!1 u!1 v!0)) ?x778 ?x348 ?x537 ?x859 ?x1201 ?x446 ?x832 ?x1396 ?x1415 ?x653 ?x1247 ?x572)))
 (let (($x687 (and (= ?x143 0) (or (not (= (* ?x1251 ?x143) 0)) (not (= (* ?x139 ?x143) 0))))))
 (let (($x933 (exists ((r Int) (u Int) (v Int) )(! (let ((?x48 (* v00 v00)))
 (let ((?x202 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x43 (* u u)))
 (let ((?x180 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x126 (* (- 2) u00)))
 (let ((?x110 (* (- 4) r00)))
 (let ((?x156 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x28 (* 4 r)))
 (let ((?x208 (+ ?x28 ?x36 ?x156 ?x110 ?x126 ?x41 ?x180 ?x45 ?x46 ?x202)))
 (let ((?x1498 (* 4 (* u v v v))))
 (let ((?x1358 (* u u u v)))
 (let ((?x1374 (* 3 (* r u u v))))
 (let ((?x1373 (* 3 (* r r u v))))
 (let ((?x1343 (* 6 (* u u u u))))
 (let ((?x1342 (* 12 (* r u u u))))
 (let ((?x1341 (* 6 (* r r u u))))
 (let ((?x1337 (* 16 (* r u))))
 (let ((?x1237 (* 8 (* r r))))
 (let ((?x1230 (* u u u u u)))
 (let ((?x1344 (* 2 (* r u u u u))))
 (let ((?x1188 (* 6 (* u u u u u v v))))
 (let ((?x1187 (* 18 (* r u u u u v v))))
 (let ((?x1184 (* 6 (* r r r u u v v))))
 (let ((?x1178 (* 24 (* r u u v v))))
 (let ((?x1177 (* 24 (* r r u v v))))
 (let ((?x930 (* 8 (* r r r v v))))
 (let ((?x923 (* u u u u u u v v)))
 (let ((?x1190 (* 3 (* r u u u u u v v))))
 (let ((?x1189 (* 3 (* r r u u u u v v))))
 (let ((?x801 (* u u v v v)))
 (let ((?x715 (* v v v)))
 (let ((?x1490 (* 4 ?x715)))
 (let ((?x658 (* r r r v)))
 (let ((?x631 (* u u u v v)))
 (let ((?x973 (* 8 ?x631)))
 (let ((?x607 (* r r u u u)))
 (let ((?x442 (* r r u u u v v)))
 (let ((?x1186 (* 18 ?x442)))
 (let ((?x355 (* r r r u u u v v)))
 (let ((?x1399 (* 2 ?x43)))
 (let ((?x1457 (* (- 12) u)))
 (let ((?x1509 (+ (- 8) ?x1457 ?x1399 (* 11 (* u u u)) ?x355 (* 36 (* r u u u v v)) ?x1186 ?x607 ?x973 ?x658 ?x1490 ?x801 ?x1189 ?x1190 ?x923 ?x930 ?x1177 ?x1178 (* 12 (* r r r u v v)) (* 36 (* r r u u v v)) (* 12 (* u u u u v v)) ?x1184 ?x1187 ?x1188 ?x1344 ?x1230 ?x1237 ?x1337 (* 12 (* r r u)) (* 24 (* r u u)) ?x1341 ?x1342 ?x1343 ?x1373 ?x1374 ?x1358 ?x1498)))
 (let ((?x831 (* 6 (* u u v v))))
 (let ((?x751 (* (- 1) (* v v v v))))
 (let ((?x761 (* 3 (* r v v v))))
 (let ((?x760 (* (- 3) (* r r v v))))
 (let ((?x672 (* 2 (* r r r))))
 (let ((?x639 (* (- 2) (* r u u u v))))
 (let ((?x579 (* (- 1) (* u u u v v v v v))))
 (let ((?x596 (* 3 (* r u u u v v v v))))
 (let ((?x594 (* (- 3) (* r r u u u v v v))))
 (let ((?x589 (* 4 (* r r r u u u v))))
 (let ((?x431 (* (- 4) (* u u u v v v))))
 (let ((?x394 (* r u u u v v)))
 (let ((?x588 (* 12 ?x394)))
 (let ((?x586 (* (- 12) (* r r u u u v))))
 (let ((?x369 (* 4 (* r r r u u u))))
 (let ((?x69 (* u u u)))
 (let ((?x780 (* (- 1) ?x69)))
 (let ((?x808 (* 8 ?x43)))
 (let ((?x842 (+ ?x808 ?x780 ?x355 ?x369 ?x586 ?x588 ?x431 ?x589 (* (- 12) ?x442) (* 12 (* r u u u v v v)) (* (- 4) (* u u u v v v v)) ?x594 ?x596 ?x579 ?x607 ?x639 ?x631 ?x658 ?x672 (* (- 6) (* r r v)) (* 6 (* r v v)) (* (- 2) ?x715) ?x760 ?x761 ?x751 ?x801 (* 12 (* u u v)) ?x831)))
 (let (($x213 (= ?x208 0)))
 (and $x213 (or (not (= (* ?x842 ?x208) 0)) (not (= (* ?x1509 ?x208) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!28))
 ))
 (let (($x1322 (exists ((r Int) (u Int) (v Int) )(! (let ((?x48 (* v00 v00)))
 (let ((?x202 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x43 (* u u)))
 (let ((?x180 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x126 (* (- 2) u00)))
 (let ((?x110 (* (- 4) r00)))
 (let ((?x156 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x28 (* 4 r)))
 (let ((?x208 (+ ?x28 ?x36 ?x156 ?x110 ?x126 ?x41 ?x180 ?x45 ?x46 ?x202)))
 (let ((?x1498 (* 4 (* u v v v))))
 (let ((?x1358 (* u u u v)))
 (let ((?x1374 (* 3 (* r u u v))))
 (let ((?x1373 (* 3 (* r r u v))))
 (let ((?x1343 (* 6 (* u u u u))))
 (let ((?x1342 (* 12 (* r u u u))))
 (let ((?x1341 (* 6 (* r r u u))))
 (let ((?x1337 (* 16 (* r u))))
 (let ((?x1237 (* 8 (* r r))))
 (let ((?x1230 (* u u u u u)))
 (let ((?x1344 (* 2 (* r u u u u))))
 (let ((?x1188 (* 6 (* u u u u u v v))))
 (let ((?x1187 (* 18 (* r u u u u v v))))
 (let ((?x1184 (* 6 (* r r r u u v v))))
 (let ((?x1178 (* 24 (* r u u v v))))
 (let ((?x1177 (* 24 (* r r u v v))))
 (let ((?x930 (* 8 (* r r r v v))))
 (let ((?x923 (* u u u u u u v v)))
 (let ((?x1190 (* 3 (* r u u u u u v v))))
 (let ((?x1189 (* 3 (* r r u u u u v v))))
 (let ((?x801 (* u u v v v)))
 (let ((?x715 (* v v v)))
 (let ((?x1490 (* 4 ?x715)))
 (let ((?x658 (* r r r v)))
 (let ((?x631 (* u u u v v)))
 (let ((?x973 (* 8 ?x631)))
 (let ((?x607 (* r r u u u)))
 (let ((?x442 (* r r u u u v v)))
 (let ((?x1186 (* 18 ?x442)))
 (let ((?x355 (* r r r u u u v v)))
 (let ((?x1399 (* 2 ?x43)))
 (let ((?x1457 (* (- 12) u)))
 (let ((?x1198 (+ (- 8) ?x1457 ?x1399 (* 7 (* u u u)) (* 2 (* u 2 r u u v v)) (* 2 (* u 2 u u u v v)) ?x355 (* 24 (* r u u u v v)) ?x1186 ?x607 ?x973 ?x658 ?x1490 (* 2 (* u 2 u r r v v)) (* 2 (* u 2 u r u v v)) ?x801 ?x1189 ?x1190 ?x923 ?x930 ?x1177 ?x1178 (* 8 (* r r r u v v)) (* 24 (* r r u u v v)) (* 8 (* u u u u v v)) (* 2 (* u 2 r r)) (* 2 (* u 2 u r)) ?x1184 (* 2 (* u 2 r u)) ?x1187 (* 2 (* u 2 u u)) ?x1188 (* 2 (* u 2 r u r v v)) ?x1344 ?x1230 ?x1237 ?x1337 (* 8 (* r r u)) (* 16 (* r u u)) ?x1341 ?x1342 ?x1343 (* 2 (* u 2 r r r v v)) (* 2 (* u 2 u u r v v)) (* 2 (* u 2 r r u v v)) ?x1373 ?x1374 ?x1358 ?x1498)))
 (let ((?x463 (* (- 1) v)))
 (let ((?x831 (* 6 (* u u v v))))
 (let ((?x751 (* (- 1) (* v v v v))))
 (let ((?x761 (* 3 (* r v v v))))
 (let ((?x760 (* (- 3) (* r r v v))))
 (let ((?x672 (* 2 (* r r r))))
 (let ((?x639 (* (- 2) (* r u u u v))))
 (let ((?x579 (* (- 1) (* u u u v v v v v))))
 (let ((?x596 (* 3 (* r u u u v v v v))))
 (let ((?x594 (* (- 3) (* r r u u u v v v))))
 (let ((?x589 (* 4 (* r r r u u u v))))
 (let ((?x431 (* (- 4) (* u u u v v v))))
 (let ((?x394 (* r u u u v v)))
 (let ((?x588 (* 12 ?x394)))
 (let ((?x586 (* (- 12) (* r r u u u v))))
 (let ((?x369 (* 4 (* r r r u u u))))
 (let ((?x69 (* u u u)))
 (let ((?x780 (* (- 1) ?x69)))
 (let ((?x808 (* 8 ?x43)))
 (let ((?x1277 (+ ?x808 ?x780 (* 2 (* v 2 u u)) ?x355 ?x369 ?x586 ?x588 (* 2 (* v r ?x463 r u u u)) (* 2 (* v r ?x463 ?x463 u u u)) ?x431 ?x589 (* 2 (* v ?x463 ?x463 r u u u)) (* (- 6) ?x442) (* 6 (* r u u u v v v)) (* 2 (* v r r ?x463 u u u)) (* (- 2) (* u u u v v v v)) (* 2 (* v ?x463 r ?x463 u u u)) ?x594 ?x596 ?x579 ?x607 (* 2 (* r r ?x463)) (* 2 (* ?x463 r ?x463)) ?x639 (* 2 (* ?x463 r r)) (* 2 (* r ?x463 ?x463)) (* 2 (* r ?x463 r)) (* 2 (* ?x463 ?x463 ?x463)) ?x631 ?x658 ?x672 (* 2 (* ?x463 ?x463 r)) ?x760 ?x761 ?x751 ?x801 (* 8 (* u u v)) ?x831 (* 2 (* v ?x463 ?x463 ?x463 u u u)) (* 2 (* v ?x463 r r u u u)))))
 (let (($x213 (= ?x208 0)))
 (and $x213 (or (not (= (* ?x1277 ?x208) 0)) (not (= (* ?x1198 ?x208) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x1223 (lambda ((r Int) (u Int) (v Int) )(let ((?x48 (* v00 v00)))
 (let ((?x202 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x43 (* u u)))
 (let ((?x180 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x126 (* (- 2) u00)))
 (let ((?x110 (* (- 4) r00)))
 (let ((?x156 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x28 (* 4 r)))
 (let ((?x208 (+ ?x28 ?x36 ?x156 ?x110 ?x126 ?x41 ?x180 ?x45 ?x46 ?x202)))
 (let ((?x1498 (* 4 (* u v v v))))
 (let ((?x1358 (* u u u v)))
 (let ((?x1374 (* 3 (* r u u v))))
 (let ((?x1373 (* 3 (* r r u v))))
 (let ((?x1343 (* 6 (* u u u u))))
 (let ((?x1342 (* 12 (* r u u u))))
 (let ((?x1341 (* 6 (* r r u u))))
 (let ((?x1337 (* 16 (* r u))))
 (let ((?x1237 (* 8 (* r r))))
 (let ((?x1230 (* u u u u u)))
 (let ((?x1344 (* 2 (* r u u u u))))
 (let ((?x1188 (* 6 (* u u u u u v v))))
 (let ((?x1187 (* 18 (* r u u u u v v))))
 (let ((?x1184 (* 6 (* r r r u u v v))))
 (let ((?x1178 (* 24 (* r u u v v))))
 (let ((?x1177 (* 24 (* r r u v v))))
 (let ((?x930 (* 8 (* r r r v v))))
 (let ((?x923 (* u u u u u u v v)))
 (let ((?x1190 (* 3 (* r u u u u u v v))))
 (let ((?x1189 (* 3 (* r r u u u u v v))))
 (let ((?x801 (* u u v v v)))
 (let ((?x715 (* v v v)))
 (let ((?x1490 (* 4 ?x715)))
 (let ((?x658 (* r r r v)))
 (let ((?x631 (* u u u v v)))
 (let ((?x973 (* 8 ?x631)))
 (let ((?x607 (* r r u u u)))
 (let ((?x442 (* r r u u u v v)))
 (let ((?x1186 (* 18 ?x442)))
 (let ((?x355 (* r r r u u u v v)))
 (let ((?x1399 (* 2 ?x43)))
 (let ((?x1457 (* (- 12) u)))
 (let ((?x1509 (+ (- 8) ?x1457 ?x1399 (* 11 (* u u u)) ?x355 (* 36 (* r u u u v v)) ?x1186 ?x607 ?x973 ?x658 ?x1490 ?x801 ?x1189 ?x1190 ?x923 ?x930 ?x1177 ?x1178 (* 12 (* r r r u v v)) (* 36 (* r r u u v v)) (* 12 (* u u u u v v)) ?x1184 ?x1187 ?x1188 ?x1344 ?x1230 ?x1237 ?x1337 (* 12 (* r r u)) (* 24 (* r u u)) ?x1341 ?x1342 ?x1343 ?x1373 ?x1374 ?x1358 ?x1498)))
 (let ((?x831 (* 6 (* u u v v))))
 (let ((?x751 (* (- 1) (* v v v v))))
 (let ((?x761 (* 3 (* r v v v))))
 (let ((?x760 (* (- 3) (* r r v v))))
 (let ((?x672 (* 2 (* r r r))))
 (let ((?x639 (* (- 2) (* r u u u v))))
 (let ((?x579 (* (- 1) (* u u u v v v v v))))
 (let ((?x596 (* 3 (* r u u u v v v v))))
 (let ((?x594 (* (- 3) (* r r u u u v v v))))
 (let ((?x589 (* 4 (* r r r u u u v))))
 (let ((?x431 (* (- 4) (* u u u v v v))))
 (let ((?x394 (* r u u u v v)))
 (let ((?x588 (* 12 ?x394)))
 (let ((?x586 (* (- 12) (* r r u u u v))))
 (let ((?x369 (* 4 (* r r r u u u))))
 (let ((?x69 (* u u u)))
 (let ((?x780 (* (- 1) ?x69)))
 (let ((?x808 (* 8 ?x43)))
 (let ((?x842 (+ ?x808 ?x780 ?x355 ?x369 ?x586 ?x588 ?x431 ?x589 (* (- 12) ?x442) (* 12 (* r u u u v v v)) (* (- 4) (* u u u v v v v)) ?x594 ?x596 ?x579 ?x607 ?x639 ?x631 ?x658 ?x672 (* (- 6) (* r r v)) (* 6 (* r v v)) (* (- 2) ?x715) ?x760 ?x761 ?x751 ?x801 (* 12 (* u u v)) ?x831)))
 (let (($x213 (= ?x208 0)))
 (let (($x477 (and $x213 (or (not (= (* ?x842 ?x208) 0)) (not (= (* ?x1509 ?x208) 0))))))
 (let ((?x1198 (+ (- 8) ?x1457 ?x1399 (* 7 ?x69) (* 2 (* u 2 r u u v v)) (* 2 (* u 2 u u u v v)) ?x355 (* 24 ?x394) ?x1186 ?x607 ?x973 ?x658 ?x1490 (* 2 (* u 2 u r r v v)) (* 2 (* u 2 u r u v v)) ?x801 ?x1189 ?x1190 ?x923 ?x930 ?x1177 ?x1178 (* 8 (* r r r u v v)) (* 24 (* r r u u v v)) (* 8 (* u u u u v v)) (* 2 (* u 2 r r)) (* 2 (* u 2 u r)) ?x1184 (* 2 (* u 2 r u)) ?x1187 (* 2 (* u 2 u u)) ?x1188 (* 2 (* u 2 r u r v v)) ?x1344 ?x1230 ?x1237 ?x1337 (* 8 (* r r u)) (* 16 (* r u u)) ?x1341 ?x1342 ?x1343 (* 2 (* u 2 r r r v v)) (* 2 (* u 2 u u r v v)) (* 2 (* u 2 r r u v v)) ?x1373 ?x1374 ?x1358 ?x1498)))
 (let ((?x463 (* (- 1) v)))
 (let ((?x1277 (+ ?x808 ?x780 (* 2 (* v 2 u u)) ?x355 ?x369 ?x586 ?x588 (* 2 (* v r ?x463 r u u u)) (* 2 (* v r ?x463 ?x463 u u u)) ?x431 ?x589 (* 2 (* v ?x463 ?x463 r u u u)) (* (- 6) ?x442) (* 6 (* r u u u v v v)) (* 2 (* v r r ?x463 u u u)) (* (- 2) (* u u u v v v v)) (* 2 (* v ?x463 r ?x463 u u u)) ?x594 ?x596 ?x579 ?x607 (* 2 (* r r ?x463)) (* 2 (* ?x463 r ?x463)) ?x639 (* 2 (* ?x463 r r)) (* 2 (* r ?x463 ?x463)) (* 2 (* r ?x463 r)) (* 2 (* ?x463 ?x463 ?x463)) ?x631 ?x658 ?x672 (* 2 (* ?x463 ?x463 r)) ?x760 ?x761 ?x751 ?x801 (* 8 (* u u v)) ?x831 (* 2 (* v ?x463 ?x463 ?x463 u u u)) (* 2 (* v ?x463 r r u u u)))))
 (let (($x1425 (and $x213 (or (not (= (* ?x1277 ?x208) 0)) (not (= (* ?x1198 ?x208) 0))))))
 (rewrite (= $x1425 $x477))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x372 (exists ((r Int) (u Int) (v Int) )(! (let ((?x48 (* v00 v00)))
 (let ((?x202 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x41 (* 2 v00)))
 (let ((?x156 (* (- 2) v)))
 (let ((?x126 (* (- 2) u00)))
 (let ((?x110 (* (- 4) r00)))
 (let ((?x28 (* 4 r)))
 (let ((?x283 (+ 4 ?x28 (* 6 u) ?x110 ?x126 ?x156 ?x41 (* (- 1) (* (+ 2 u) (+ 2 u))) ?x45 ?x46 ?x202)))
 (let ((?x76 (+ r u)))
 (let ((?x91 (* ?x76 ?x76 ?x76 v)))
 (let ((?x480 (+ 2 u)))
 (let ((?x632 (+ (* ?x480 ?x480 ?x480 ?x76 ?x76 ?x76 v v) (* ?x480 ?x480 ?x480 ?x76 ?x76) ?x91 (* (- 1) (* ?x480 ?x480 ?x480)) (* ?x480 ?x480 v v v))))
 (let ((?x43 (* u u)))
 (let ((?x180 (* (- 1) ?x43)))
 (let ((?x36 (* 2 u)))
 (let ((?x546 (+ (- 4) ?x28 (* (- 6) v) ?x110 ?x126 ?x36 ?x41 ?x180 (* (+ 2 v) (+ 2 v)) ?x46 ?x202)))
 (let ((?x69 (* u u u)))
 (let ((?x780 (* (- 1) ?x69)))
 (let ((?x463 (* (- 1) v)))
 (let ((?x488 (+ r ?x463)))
 (let ((?x467 (+ 2 v)))
 (let ((?x582 (+ (* ?x467 ?x467 ?x488 ?x488 ?x488 u u u) (* ?x488 ?x488 u u u) (* ?x467 ?x488 ?x488 ?x488) ?x780 (* ?x467 ?x467 ?x467 u u))))
 (and (= (+ ?x28 ?x110 ?x126 ?x36 ?x156 ?x41 ?x180 ?x45 ?x46 ?x202) 0) (or (not (= (* ?x582 ?x546) 0)) (not (= (* ?x632 ?x283) 0)))))))))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x1216 (lambda ((r Int) (u Int) (v Int) )(let ((?x48 (* v00 v00)))
 (let ((?x202 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x43 (* u u)))
 (let ((?x180 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x126 (* (- 2) u00)))
 (let ((?x110 (* (- 4) r00)))
 (let ((?x156 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x28 (* 4 r)))
 (let ((?x208 (+ ?x28 ?x36 ?x156 ?x110 ?x126 ?x41 ?x180 ?x45 ?x46 ?x202)))
 (let ((?x1498 (* 4 (* u v v v))))
 (let ((?x1358 (* u u u v)))
 (let ((?x1374 (* 3 (* r u u v))))
 (let ((?x1373 (* 3 (* r r u v))))
 (let ((?x1343 (* 6 (* u u u u))))
 (let ((?x1342 (* 12 (* r u u u))))
 (let ((?x1341 (* 6 (* r r u u))))
 (let ((?x1337 (* 16 (* r u))))
 (let ((?x1237 (* 8 (* r r))))
 (let ((?x1230 (* u u u u u)))
 (let ((?x1344 (* 2 (* r u u u u))))
 (let ((?x1188 (* 6 (* u u u u u v v))))
 (let ((?x1187 (* 18 (* r u u u u v v))))
 (let ((?x1184 (* 6 (* r r r u u v v))))
 (let ((?x1178 (* 24 (* r u u v v))))
 (let ((?x1177 (* 24 (* r r u v v))))
 (let ((?x930 (* 8 (* r r r v v))))
 (let ((?x923 (* u u u u u u v v)))
 (let ((?x1190 (* 3 (* r u u u u u v v))))
 (let ((?x1189 (* 3 (* r r u u u u v v))))
 (let ((?x801 (* u u v v v)))
 (let ((?x715 (* v v v)))
 (let ((?x1490 (* 4 ?x715)))
 (let ((?x658 (* r r r v)))
 (let ((?x631 (* u u u v v)))
 (let ((?x973 (* 8 ?x631)))
 (let ((?x607 (* r r u u u)))
 (let ((?x442 (* r r u u u v v)))
 (let ((?x1186 (* 18 ?x442)))
 (let ((?x355 (* r r r u u u v v)))
 (let ((?x1399 (* 2 ?x43)))
 (let ((?x1457 (* (- 12) u)))
 (let ((?x1198 (+ (- 8) ?x1457 ?x1399 (* 7 (* u u u)) (* 2 (* u 2 r u u v v)) (* 2 (* u 2 u u u v v)) ?x355 (* 24 (* r u u u v v)) ?x1186 ?x607 ?x973 ?x658 ?x1490 (* 2 (* u 2 u r r v v)) (* 2 (* u 2 u r u v v)) ?x801 ?x1189 ?x1190 ?x923 ?x930 ?x1177 ?x1178 (* 8 (* r r r u v v)) (* 24 (* r r u u v v)) (* 8 (* u u u u v v)) (* 2 (* u 2 r r)) (* 2 (* u 2 u r)) ?x1184 (* 2 (* u 2 r u)) ?x1187 (* 2 (* u 2 u u)) ?x1188 (* 2 (* u 2 r u r v v)) ?x1344 ?x1230 ?x1237 ?x1337 (* 8 (* r r u)) (* 16 (* r u u)) ?x1341 ?x1342 ?x1343 (* 2 (* u 2 r r r v v)) (* 2 (* u 2 u u r v v)) (* 2 (* u 2 r r u v v)) ?x1373 ?x1374 ?x1358 ?x1498)))
 (let ((?x463 (* (- 1) v)))
 (let ((?x831 (* 6 (* u u v v))))
 (let ((?x751 (* (- 1) (* v v v v))))
 (let ((?x761 (* 3 (* r v v v))))
 (let ((?x760 (* (- 3) (* r r v v))))
 (let ((?x672 (* 2 (* r r r))))
 (let ((?x639 (* (- 2) (* r u u u v))))
 (let ((?x579 (* (- 1) (* u u u v v v v v))))
 (let ((?x596 (* 3 (* r u u u v v v v))))
 (let ((?x594 (* (- 3) (* r r u u u v v v))))
 (let ((?x589 (* 4 (* r r r u u u v))))
 (let ((?x431 (* (- 4) (* u u u v v v))))
 (let ((?x394 (* r u u u v v)))
 (let ((?x588 (* 12 ?x394)))
 (let ((?x586 (* (- 12) (* r r u u u v))))
 (let ((?x369 (* 4 (* r r r u u u))))
 (let ((?x69 (* u u u)))
 (let ((?x780 (* (- 1) ?x69)))
 (let ((?x808 (* 8 ?x43)))
 (let ((?x1277 (+ ?x808 ?x780 (* 2 (* v 2 u u)) ?x355 ?x369 ?x586 ?x588 (* 2 (* v r ?x463 r u u u)) (* 2 (* v r ?x463 ?x463 u u u)) ?x431 ?x589 (* 2 (* v ?x463 ?x463 r u u u)) (* (- 6) ?x442) (* 6 (* r u u u v v v)) (* 2 (* v r r ?x463 u u u)) (* (- 2) (* u u u v v v v)) (* 2 (* v ?x463 r ?x463 u u u)) ?x594 ?x596 ?x579 ?x607 (* 2 (* r r ?x463)) (* 2 (* ?x463 r ?x463)) ?x639 (* 2 (* ?x463 r r)) (* 2 (* r ?x463 ?x463)) (* 2 (* r ?x463 r)) (* 2 (* ?x463 ?x463 ?x463)) ?x631 ?x658 ?x672 (* 2 (* ?x463 ?x463 r)) ?x760 ?x761 ?x751 ?x801 (* 8 (* u u v)) ?x831 (* 2 (* v ?x463 ?x463 ?x463 u u u)) (* 2 (* v ?x463 r r u u u)))))
 (let (($x213 (= ?x208 0)))
 (let (($x1425 (and $x213 (or (not (= (* ?x1277 ?x208) 0)) (not (= (* ?x1198 ?x208) 0))))))
 (let ((?x283 (+ 4 ?x28 (* 6 u) ?x110 ?x126 ?x156 ?x41 (* (- 1) (* (+ 2 u) (+ 2 u))) ?x45 ?x46 ?x202)))
 (let ((?x76 (+ r u)))
 (let ((?x91 (* ?x76 ?x76 ?x76 v)))
 (let ((?x480 (+ 2 u)))
 (let ((?x632 (+ (* ?x480 ?x480 ?x480 ?x76 ?x76 ?x76 v v) (* ?x480 ?x480 ?x480 ?x76 ?x76) ?x91 (* (- 1) (* ?x480 ?x480 ?x480)) (* ?x480 ?x480 v v v))))
 (let ((?x546 (+ (- 4) ?x28 (* (- 6) v) ?x110 ?x126 ?x36 ?x41 ?x180 (* (+ 2 v) (+ 2 v)) ?x46 ?x202)))
 (let ((?x488 (+ r ?x463)))
 (let ((?x467 (+ 2 v)))
 (let ((?x582 (+ (* ?x467 ?x467 ?x488 ?x488 ?x488 u u u) (* ?x488 ?x488 u u u) (* ?x467 ?x488 ?x488 ?x488) ?x780 (* ?x467 ?x467 ?x467 u u))))
 (let (($x399 (and (= (+ ?x28 ?x110 ?x126 ?x36 ?x156 ?x41 ?x180 ?x45 ?x46 ?x202) 0) (or (not (= (* ?x582 ?x546) 0)) (not (= (* ?x632 ?x283) 0))))))
 (rewrite (= $x399 $x1425)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x102 (exists ((r Int) (u Int) (v Int) )(! (let ((?x76 (+ r u)))
 (let ((?x91 (* ?x76 ?x76 ?x76 v)))
 (let ((?x80 (+ u 2)))
 (let ((?x92 (+ (* ?x76 ?x76 ?x76 ?x80 ?x80 ?x80 v v) (* ?x76 ?x76 ?x80 ?x80 ?x80) ?x91)))
 (let ((?x48 (* v00 v00)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x41 (* 2 v00)))
 (let ((?x38 (* 2 v)))
 (let ((?x82 (+ (- (- (* 4 ?x76) (* 4 r00)) (* 2 u00)) (* 2 ?x80))))
 (let ((?x97 (* (- (+ (- (+ (- ?x82 ?x38) ?x41) (* ?x80 ?x80)) ?x45 ?x46) ?x48) (+ (- ?x92 (* ?x80 ?x80 ?x80)) (* ?x80 ?x80 v v v)))))
 (let ((?x69 (* u u u)))
 (let ((?x57 (+ v 2)))
 (let ((?x52 (- r v)))
 (let ((?x68 (+ (* ?x52 ?x52 ?x52 u u u ?x57 ?x57) (* ?x52 ?x52 u u u) (* ?x52 ?x52 ?x52 ?x57))))
 (let ((?x43 (* u u)))
 (let ((?x36 (* 2 u)))
 (let ((?x59 (- (+ (- (- (* 4 ?x52) (* 4 r00)) (* 2 u00)) ?x36) (* 2 ?x57))))
 (let ((?x73 (* (- (+ (- (+ ?x59 ?x41) ?x43) (* ?x57 ?x57) ?x46) ?x48) (+ (- ?x68 ?x69) (* u u ?x57 ?x57 ?x57)))))
 (let ((?x39 (- (+ (- (- (* 4 r) (* 4 r00)) (* 2 u00)) ?x36) ?x38)))
 (and (= (- (+ (- (+ ?x39 ?x41) ?x43) ?x45 ?x46) ?x48) 0) (or (not (= ?x73 0)) (not (= ?x97 0)))))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x382 (lambda ((r Int) (u Int) (v Int) )(let ((?x48 (* v00 v00)))
 (let ((?x202 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x41 (* 2 v00)))
 (let ((?x156 (* (- 2) v)))
 (let ((?x126 (* (- 2) u00)))
 (let ((?x110 (* (- 4) r00)))
 (let ((?x28 (* 4 r)))
 (let ((?x283 (+ 4 ?x28 (* 6 u) ?x110 ?x126 ?x156 ?x41 (* (- 1) (* (+ 2 u) (+ 2 u))) ?x45 ?x46 ?x202)))
 (let ((?x76 (+ r u)))
 (let ((?x91 (* ?x76 ?x76 ?x76 v)))
 (let ((?x480 (+ 2 u)))
 (let ((?x632 (+ (* ?x480 ?x480 ?x480 ?x76 ?x76 ?x76 v v) (* ?x480 ?x480 ?x480 ?x76 ?x76) ?x91 (* (- 1) (* ?x480 ?x480 ?x480)) (* ?x480 ?x480 v v v))))
 (let ((?x43 (* u u)))
 (let ((?x180 (* (- 1) ?x43)))
 (let ((?x36 (* 2 u)))
 (let ((?x546 (+ (- 4) ?x28 (* (- 6) v) ?x110 ?x126 ?x36 ?x41 ?x180 (* (+ 2 v) (+ 2 v)) ?x46 ?x202)))
 (let ((?x69 (* u u u)))
 (let ((?x780 (* (- 1) ?x69)))
 (let ((?x463 (* (- 1) v)))
 (let ((?x488 (+ r ?x463)))
 (let ((?x467 (+ 2 v)))
 (let ((?x582 (+ (* ?x467 ?x467 ?x488 ?x488 ?x488 u u u) (* ?x488 ?x488 u u u) (* ?x467 ?x488 ?x488 ?x488) ?x780 (* ?x467 ?x467 ?x467 u u))))
 (let (($x399 (and (= (+ ?x28 ?x110 ?x126 ?x36 ?x156 ?x41 ?x180 ?x45 ?x46 ?x202) 0) (or (not (= (* ?x582 ?x546) 0)) (not (= (* ?x632 ?x283) 0))))))
 (let ((?x80 (+ u 2)))
 (let ((?x92 (+ (* ?x76 ?x76 ?x76 ?x80 ?x80 ?x80 v v) (* ?x76 ?x76 ?x80 ?x80 ?x80) ?x91)))
 (let ((?x38 (* 2 v)))
 (let ((?x82 (+ (- (- (* 4 ?x76) (* 4 r00)) (* 2 u00)) (* 2 ?x80))))
 (let ((?x97 (* (- (+ (- (+ (- ?x82 ?x38) ?x41) (* ?x80 ?x80)) ?x45 ?x46) ?x48) (+ (- ?x92 (* ?x80 ?x80 ?x80)) (* ?x80 ?x80 v v v)))))
 (let ((?x57 (+ v 2)))
 (let ((?x52 (- r v)))
 (let ((?x68 (+ (* ?x52 ?x52 ?x52 u u u ?x57 ?x57) (* ?x52 ?x52 u u u) (* ?x52 ?x52 ?x52 ?x57))))
 (let ((?x59 (- (+ (- (- (* 4 ?x52) (* 4 r00)) (* 2 u00)) ?x36) (* 2 ?x57))))
 (let ((?x73 (* (- (+ (- (+ ?x59 ?x41) ?x43) (* ?x57 ?x57) ?x46) ?x48) (+ (- ?x68 ?x69) (* u u ?x57 ?x57 ?x57)))))
 (let ((?x42 (+ (- (+ (- (- ?x28 (* 4 r00)) (* 2 u00)) ?x36) ?x38) ?x41)))
 (let (($x101 (and (= (- (+ (- ?x42 ?x43) ?x45 ?x46) ?x48) 0) (or (not (= ?x73 0)) (not (= ?x97 0))))))
 (rewrite (= $x101 $x399))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x103 (asserted $x102)))
 (let ((@x539 (mp (mp @x103 (quant-intro (proof-bind ?x382) (= $x102 $x372)) $x372) (rewrite (= $x372 $x372)) $x372)))
 (let ((@x1364 (mp (mp @x539 (quant-intro (proof-bind ?x1216) (= $x372 $x1322)) $x1322) (quant-intro (proof-bind ?x1223) (= $x1322 $x933)) $x933)))
 (let ((@x1094 (mp (mp~ @x1364 (sk (~ $x933 $x687)) $x687) (rewrite (= $x687 $x523)) $x523)))
 (let ((@x1206 (and-elim @x1094 $x450)))
 (let ((@x678 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x450) $x551)) @x1206 $x551)))
 (let (($x555 (<= ?x946 0)))
 (let ((@x795 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x450) $x555)) @x1206 $x555)))
 (let (($x466 (not (<= ?x484 0))))
 (let (($x1239 (>= ?x484 0)))
 (let (($x179 (>= ?x1282 0)))
 (let (($x148 (<= ?x1282 0)))
 (let ((@x1290 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x196 (not $x148) (not $x179))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x148)) @x795 @x678 false) $x148) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x179)) @x795 @x678 false) $x179) $x196)))
 (let ((@x738 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x943 $x466 (not $x1239))) (unit-resolution (and-elim @x1094 $x211) @x1290 $x479) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1239)) @x795 @x678 false) $x1239) $x466)))
 ((_ th-lemma arith farkas 1 1 1) @x738 @x795 @x678 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        70
 :arith-assert-upper        14
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-fixed-eqs           5
 :arith-max-min             520
 :arith-nonlinear-bounds    53
 :arith-num-rows            4
 :arith-pivots              1
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 86
 :arith-tableau-max-rows    4
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              4
 :max-memory                3.83
 :memory                    3.28
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1172279
 :num-checks                1
 :propagations              14
 :rlimit-count              8075
 :time                      0.01
 :total-time                0.02)
