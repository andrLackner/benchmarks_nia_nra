unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x778 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x544 (<= ?x778 1)))
 (let (($x1110 (= ?x778 1)))
 (let ((?x121 (+ k!2 c!3)))
 (let ((?x779 (+ 6 m!1)))
 (let ((?x1044 (+ 1 n!0)))
 (let ((?x115 (* 3 (* k!2 m!1 n!0 n!0))))
 (let ((?x1108 (+ k!2 m!1)))
 (let ((?x833 (* 2 (* ?x1044 ?x1044 ?x1044 ?x1044 ?x779 ?x779 ?x779 ?x1108 ?x1108))))
 (let ((?x1115 (* ?x1044 ?x1044 ?x1044 ?x1044 ?x779 ?x779 ?x779 ?x1108 ?x1108 ?x1108)))
 (let ((?x686 (* (- 1) (* ?x1044 ?x1044 ?x1044 ?x779 ?x779 ?x779 ?x1108 ?x1108 ?x1108))))
 (let ((?x1072 (* ?x1044 ?x1044 ?x1044 ?x779 ?x779 ?x779 ?x1108 ?x1108)))
 (let ((?x1056 (* k!2 n!0)))
 (let ((?x713 (* 18 ?x1056)))
 (let ((?x825 (* 18 (* k!2 n!0 n!0))))
 (let ((?x801 (* k!2 m!1 n!0 n!0 n!0)))
 (let ((?x1107 (* 18 (* c!3 n!0 n!0))))
 (let ((?x649 (* c!3 n!0)))
 (let ((?x689 (* 18 ?x649)))
 (let ((?x718 (* 6 c!3)))
 (let ((?x772 (* 6 k!2)))
 (let ((?x204 (* 3 (* k!2 m!1 n!0))))
 (let ((?x205 (* k!2 m!1)))
 (let ((?x1059 (* 6 (* c!3 n!0 n!0 n!0))))
 (let ((?x806 (* 6 (* k!2 n!0 n!0 n!0))))
 (let ((?x582 (+ (* 3 (* m!1 c!3 n!0)) ?x806 ?x1059 ?x205 (* (- 3) (* ?x1044 ?x1044 ?x1044 ?x779 ?x121 ?x121)) ?x204 (* 3 (* ?x1044 ?x1044 ?x779 ?x779 ?x121 ?x121 ?x121 ?x121)) (* (- 1) (* ?x1044 ?x1044 ?x1044 ?x779 ?x1108 ?x121)) (* 3 (* m!1 c!3 n!0 n!0)) ?x772 ?x718 (* ?x1044 ?x1044 ?x779 ?x779 ?x1108 ?x121 ?x121 ?x121) (* (- 1) (* ?x1044 ?x1044 ?x1044 ?x779 ?x779 ?x1108 ?x121 ?x121 ?x121)) ?x689 ?x1107 ?x801 ?x825 ?x713 ?x1072 ?x686 (* m!1 c!3) (* ?x1044 ?x1044 ?x1044 ?x1044 ?x779 ?x1108 ?x121) (* (- 3) (* ?x1044 ?x1044 ?x1044 ?x779 ?x779 ?x779 ?x1108 ?x1108 ?x121)) ?x1115 ?x833 ?x115 (* (- 1) (* ?x1044 ?x1044 ?x779 ?x779 ?x121 ?x121 ?x121)) (* 2 (* ?x1044 ?x1044 ?x1044 ?x1044 ?x779 ?x121)) (* m!1 c!3 n!0 n!0 n!0) (* (- 2) (* ?x1044 ?x1044 ?x1044 ?x779 ?x779 ?x121 ?x121 ?x121)))))
 (let (($x1045 (= ?x582 0)))
 (let (($x1070 (not $x1045)))
 (let ((?x716 (* (- 2) n!0)))
 (let ((?x1122 (* (- 1) ?x1056)))
 (let ((?x1119 (* 3 c!3)))
 (let ((?x200 (+ k!2 ?x1119 ?x1122 ?x716)))
 (let (($x1134 (= ?x200 1)))
 (let ((?x422 (* (- 9) n!0)))
 (let ((?x1055 (* 9 ?x649)))
 (let ((?x620 (* (- 1) (* k!2 k!2))))
 (let ((?x1061 (* 18 c!3)))
 (let ((?x388 (* 5 k!2)))
 (let ((?x1042 (+ ?x388 ?x1061 ?x620 ?x1055 ?x422)))
 (let (($x1095 (= ?x1042 4)))
 (let ((?x406 (+ m!1 (* (- 6) n!0))))
 (let (($x480 (= ?x406 6)))
 (let (($x1040 (and $x480 $x1095 $x1134 $x1110 $x1070)))
 (let ((?x1034 (+ c!3 k!2)))
 (let ((?x179 (+ ?x718 ?x772 ?x713 ?x689 ?x686 (* (- 2) (* ?x1044 ?x1044 ?x1044 ?x779 ?x779 ?x1034 ?x1034 ?x1034)) (* (- 1) (* ?x1044 ?x1044 ?x779 ?x779 ?x1034 ?x1034 ?x1034)) (* (- 3) (* ?x1044 ?x1044 ?x1044 ?x779 ?x779 ?x779 ?x1108 ?x1108 ?x1034)) (* 3 (* ?x1044 ?x1044 ?x779 ?x779 ?x1034 ?x1034 ?x1034 ?x1034)) (* (- 3) (* ?x1044 ?x1044 ?x1044 ?x779 ?x1034 ?x1034)) ?x1115 (* (- 1) (* ?x1044 ?x1044 ?x1044 ?x779 ?x779 ?x1108 ?x1034 ?x1034 ?x1034)) (* ?x1044 ?x1044 ?x779 ?x779 ?x1108 ?x1034 ?x1034 ?x1034) (* (- 1) (* ?x1044 ?x1044 ?x1044 ?x779 ?x1108 ?x1034)) (* ?x1044 ?x1044 ?x1044 ?x1044 ?x779 ?x1108 ?x1034) (* 2 (* ?x1044 ?x1044 ?x1044 ?x1044 ?x779 ?x1034)) (* 3 (* c!3 m!1 n!0 n!0)) ?x825 ?x1107 ?x204 (* 3 (* c!3 m!1 n!0)) ?x801 (* c!3 m!1 n!0 n!0 n!0) ?x115 ?x1059 ?x806 (* c!3 m!1) ?x205 ?x1072 ?x833)))
 (let (($x202 (and $x480 (= (+ ?x1061 ?x388 ?x422 ?x620 ?x1055) 4) (= (+ ?x1119 k!2 ?x716 ?x1122) 1) $x1110 (not (= ?x179 0)))))
 (let (($x585 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x320 (+ 6 m)))
 (let ((?x323 (+ 1 n)))
 (let ((?x1146 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69)))
 (let ((?x638 (* 2 ?x1146)))
 (let ((?x1137 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69)))
 (let ((?x916 (* k m)))
 (let ((?x912 (* c m)))
 (let ((?x862 (* c m n n n)))
 (let ((?x858 (* k m n n n)))
 (let ((?x75 (+ c k)))
 (let ((?x785 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x75)))
 (let ((?x416 (* 2 ?x785)))
 (let ((?x758 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x69 ?x75)))
 (let ((?x727 (* ?x323 ?x323 ?x323 ?x320 ?x69 ?x75)))
 (let ((?x344 (* (- 1) ?x727)))
 (let ((?x702 (* ?x323 ?x323 ?x320 ?x320 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x678 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x717 (* (- 1) ?x678)))
 (let ((?x640 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x69)))
 (let ((?x603 (* ?x323 ?x323 ?x323 ?x320 ?x75 ?x75)))
 (let ((?x670 (* (- 3) ?x603)))
 (let ((?x557 (* ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x482 (* 3 ?x557)))
 (let ((?x499 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x75)))
 (let ((?x665 (* (- 3) ?x499)))
 (let ((?x339 (* ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75)))
 (let ((?x672 (* (- 1) ?x339)))
 (let ((?x336 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75)))
 (let ((?x859 (* (- 2) ?x336)))
 (let ((?x295 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x69)))
 (let ((?x720 (* (- 1) ?x295)))
 (let ((?x366 (+ (* 6 c) (* 6 k) (* 18 (* k n)) (* 18 (* c n)) ?x720 ?x859 ?x672 ?x665 ?x482 ?x670 ?x640 ?x717 ?x702 ?x344 ?x758 ?x416 (* 3 (* c m n n)) (* 18 (* k n n)) (* 18 (* c n n)) (* 3 (* k m n)) (* 3 (* c m n)) ?x858 ?x862 (* 3 (* k m n n)) (* 6 (* c n n n)) (* 6 (* k n n n)) ?x912 ?x916 ?x1137 ?x638)))
 (let (($x310 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x272 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x223 (* (- 1) ?x49)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x220 (= (+ ?x40 ?x44 ?x222 ?x223 (* 9 (* c n))) 4)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (and $x136 $x220 $x272 $x310 (not (= ?x366 0))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1092 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x75 (+ c k)))
 (let ((?x320 (+ 6 m)))
 (let ((?x323 (+ 1 n)))
 (let ((?x816 (* ?x323 ?x323 ?x323 ?x320 ?x75)))
 (let ((?x785 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x75)))
 (let ((?x416 (* 2 ?x785)))
 (let ((?x69 (+ k m)))
 (let ((?x758 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x69 ?x75)))
 (let ((?x727 (* ?x323 ?x323 ?x323 ?x320 ?x69 ?x75)))
 (let ((?x344 (* (- 1) ?x727)))
 (let ((?x702 (* ?x323 ?x323 ?x320 ?x320 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x678 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x717 (* (- 1) ?x678)))
 (let ((?x557 (* ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x482 (* 3 ?x557)))
 (let ((?x336 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75)))
 (let ((?x859 (* (- 2) ?x336)))
 (let ((?x499 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x75)))
 (let ((?x665 (* (- 3) ?x499)))
 (let ((?x339 (* ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75)))
 (let ((?x672 (* (- 1) ?x339)))
 (let ((?x640 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x69)))
 (let ((?x295 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x69)))
 (let ((?x720 (* (- 1) ?x295)))
 (let ((?x603 (* ?x323 ?x323 ?x323 ?x320 ?x75 ?x75)))
 (let ((?x670 (* (- 3) ?x603)))
 (let ((?x1146 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69)))
 (let ((?x638 (* 2 ?x1146)))
 (let ((?x1137 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69)))
 (let ((?x460 (+ ?x1137 ?x638 ?x670 ?x720 ?x640 ?x672 ?x665 ?x859 ?x482 ?x717 ?x702 ?x344 ?x758 ?x416 ?x816)))
 (let (($x1126 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x333 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x223 (* (- 1) ?x49)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (and $x136 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x222 ?x223) 4) $x333 $x1126 (not (= ?x460 0))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x368 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x320 (+ 6 m)))
 (let ((?x323 (+ 1 n)))
 (let ((?x1146 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69)))
 (let ((?x638 (* 2 ?x1146)))
 (let ((?x1137 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69)))
 (let ((?x916 (* k m)))
 (let ((?x912 (* c m)))
 (let ((?x862 (* c m n n n)))
 (let ((?x858 (* k m n n n)))
 (let ((?x75 (+ c k)))
 (let ((?x785 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x75)))
 (let ((?x416 (* 2 ?x785)))
 (let ((?x758 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x69 ?x75)))
 (let ((?x727 (* ?x323 ?x323 ?x323 ?x320 ?x69 ?x75)))
 (let ((?x344 (* (- 1) ?x727)))
 (let ((?x702 (* ?x323 ?x323 ?x320 ?x320 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x678 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x717 (* (- 1) ?x678)))
 (let ((?x640 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x69)))
 (let ((?x603 (* ?x323 ?x323 ?x323 ?x320 ?x75 ?x75)))
 (let ((?x670 (* (- 3) ?x603)))
 (let ((?x557 (* ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x482 (* 3 ?x557)))
 (let ((?x499 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x75)))
 (let ((?x665 (* (- 3) ?x499)))
 (let ((?x339 (* ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75)))
 (let ((?x672 (* (- 1) ?x339)))
 (let ((?x336 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75)))
 (let ((?x859 (* (- 2) ?x336)))
 (let ((?x295 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x69)))
 (let ((?x720 (* (- 1) ?x295)))
 (let ((?x366 (+ (* 6 c) (* 6 k) (* 18 (* k n)) (* 18 (* c n)) ?x720 ?x859 ?x672 ?x665 ?x482 ?x670 ?x640 ?x717 ?x702 ?x344 ?x758 ?x416 (* 3 (* c m n n)) (* 18 (* k n n)) (* 18 (* c n n)) (* 3 (* k m n)) (* 3 (* c m n)) ?x858 ?x862 (* 3 (* k m n n)) (* 6 (* c n n n)) (* 6 (* k n n n)) ?x912 ?x916 ?x1137 ?x638)))
 (let (($x310 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x272 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x223 (* (- 1) ?x49)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x220 (= (+ ?x40 ?x44 ?x222 ?x223 (* 9 (* c n))) 4)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (let (($x1140 (and $x136 $x220 $x272 $x310 (not (= ?x366 0)))))
 (let ((?x816 (* ?x323 ?x323 ?x323 ?x320 ?x75)))
 (let ((?x460 (+ ?x1137 ?x638 ?x670 ?x720 ?x640 ?x672 ?x665 ?x859 ?x482 ?x717 ?x702 ?x344 ?x758 ?x416 ?x816)))
 (let (($x1126 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x333 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1082 (and $x136 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x222 ?x223) 4) $x333 $x1126 (not (= ?x460 0)))))
 (rewrite (= $x1082 $x1140)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1130 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x75 (+ c k)))
 (let ((?x320 (+ 6 m)))
 (let ((?x323 (+ 1 n)))
 (let ((?x816 (* ?x323 ?x323 ?x323 ?x320 ?x75)))
 (let ((?x69 (+ k m)))
 (let ((?x727 (* ?x323 ?x323 ?x323 ?x320 ?x69 ?x75)))
 (let ((?x678 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x339 (* ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75)))
 (let ((?x295 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x69)))
 (let ((?x830 (+ (* (- 1) (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69)) (* (- 2) (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69)) (* 3 (* ?x323 ?x323 ?x323 ?x320 ?x75 ?x75)) ?x295 (* (- 1) (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x69)) ?x339 (* 3 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x75)) (* 2 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75)) (* (- 3) (* ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75 ?x75)) ?x678 (* (- 1) (* ?x323 ?x323 ?x320 ?x320 ?x69 ?x75 ?x75 ?x75)) ?x727 (* (- 1) (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x69 ?x75)) (* (- 2) (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x75)) (* (- 1) ?x816))))
 (let (($x1126 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1103 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x590 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (and $x136 (= ?x590 (- 4)) $x1103 $x1126 (not (= ?x830 0))))))))))))))))))) :qid k!34))
 ))
 (let ((?x450 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x75 (+ c k)))
 (let ((?x320 (+ 6 m)))
 (let ((?x323 (+ 1 n)))
 (let ((?x816 (* ?x323 ?x323 ?x323 ?x320 ?x75)))
 (let ((?x785 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x75)))
 (let ((?x416 (* 2 ?x785)))
 (let ((?x69 (+ k m)))
 (let ((?x758 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x69 ?x75)))
 (let ((?x727 (* ?x323 ?x323 ?x323 ?x320 ?x69 ?x75)))
 (let ((?x344 (* (- 1) ?x727)))
 (let ((?x702 (* ?x323 ?x323 ?x320 ?x320 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x678 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x717 (* (- 1) ?x678)))
 (let ((?x557 (* ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x482 (* 3 ?x557)))
 (let ((?x336 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75)))
 (let ((?x859 (* (- 2) ?x336)))
 (let ((?x499 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x75)))
 (let ((?x665 (* (- 3) ?x499)))
 (let ((?x339 (* ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75)))
 (let ((?x672 (* (- 1) ?x339)))
 (let ((?x640 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x69)))
 (let ((?x295 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x69)))
 (let ((?x720 (* (- 1) ?x295)))
 (let ((?x603 (* ?x323 ?x323 ?x323 ?x320 ?x75 ?x75)))
 (let ((?x670 (* (- 3) ?x603)))
 (let ((?x1146 (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69)))
 (let ((?x638 (* 2 ?x1146)))
 (let ((?x1137 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69)))
 (let ((?x460 (+ ?x1137 ?x638 ?x670 ?x720 ?x640 ?x672 ?x665 ?x859 ?x482 ?x717 ?x702 ?x344 ?x758 ?x416 ?x816)))
 (let (($x1126 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x333 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x223 (* (- 1) ?x49)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (let (($x1082 (and $x136 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x222 ?x223) 4) $x333 $x1126 (not (= ?x460 0)))))
 (let ((?x830 (+ (* (- 1) ?x1137) (* (- 2) ?x1146) (* 3 ?x603) ?x295 (* (- 1) ?x640) ?x339 (* 3 ?x499) (* 2 ?x336) (* (- 3) ?x557) ?x678 (* (- 1) ?x702) ?x727 (* (- 1) ?x758) (* (- 2) ?x785) (* (- 1) ?x816))))
 (let (($x1103 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x590 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1142 (and $x136 (= ?x590 (- 4)) $x1103 $x1126 (not (= ?x830 0)))))
 (rewrite (= $x1142 $x1082)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x75 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x74 (- (* (- 1) ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 2 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x78 (+ ?x74 (* 3 ?x75 ?x75 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x84 (+ (- ?x78 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)) (* ?x75 ?x75 ?x75 ?x70 ?x70 ?x71 ?x71) (* 3 ?x75 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 2 ?x75 ?x75 ?x75 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x88 (+ (- ?x84 (* 3 ?x75 ?x75 ?x75 ?x75 ?x70 ?x70 ?x71 ?x71)) (* ?x75 ?x75 ?x75 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x92 (+ (- ?x88 (* ?x75 ?x75 ?x75 ?x69 ?x70 ?x70 ?x71 ?x71)) (* ?x75 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x97 (- (- ?x92 (* ?x75 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71)) (* 2 ?x75 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x97 (* ?x75 ?x70 ?x71 ?x71 ?x71)) 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1135 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x75 (+ c k)))
 (let ((?x320 (+ 6 m)))
 (let ((?x323 (+ 1 n)))
 (let ((?x816 (* ?x323 ?x323 ?x323 ?x320 ?x75)))
 (let ((?x69 (+ k m)))
 (let ((?x727 (* ?x323 ?x323 ?x323 ?x320 ?x69 ?x75)))
 (let ((?x678 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x339 (* ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75)))
 (let ((?x295 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x69)))
 (let ((?x830 (+ (* (- 1) (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69)) (* (- 2) (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69)) (* 3 (* ?x323 ?x323 ?x323 ?x320 ?x75 ?x75)) ?x295 (* (- 1) (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x69)) ?x339 (* 3 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x320 ?x69 ?x69 ?x75)) (* 2 (* ?x323 ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75)) (* (- 3) (* ?x323 ?x323 ?x320 ?x320 ?x75 ?x75 ?x75 ?x75)) ?x678 (* (- 1) (* ?x323 ?x323 ?x320 ?x320 ?x69 ?x75 ?x75 ?x75)) ?x727 (* (- 1) (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x69 ?x75)) (* (- 2) (* ?x323 ?x323 ?x323 ?x323 ?x320 ?x75)) (* (- 1) ?x816))))
 (let (($x1126 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1103 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x590 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (let (($x1142 (and $x136 (= ?x590 (- 4)) $x1103 $x1126 (not (= ?x830 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x74 (- (* (- 1) ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 2 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x78 (+ ?x74 (* 3 ?x75 ?x75 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x84 (+ (- ?x78 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)) (* ?x75 ?x75 ?x75 ?x70 ?x70 ?x71 ?x71) (* 3 ?x75 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 2 ?x75 ?x75 ?x75 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x88 (+ (- ?x84 (* 3 ?x75 ?x75 ?x75 ?x75 ?x70 ?x70 ?x71 ?x71)) (* ?x75 ?x75 ?x75 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x92 (+ (- ?x88 (* ?x75 ?x75 ?x75 ?x69 ?x70 ?x70 ?x71 ?x71)) (* ?x75 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x97 (- (- ?x92 (* ?x75 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71)) (* 2 ?x75 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x102 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x97 (* ?x75 ?x70 ?x71 ?x71 ?x71)) 0))))))
 (rewrite (= $x102 $x1142))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x636 (mp (mp @x104 (quant-intro (proof-bind ?x1135) (= $x103 $x1130)) $x1130) (rewrite (= $x1130 $x1130)) $x1130)))
 (let ((@x656 (mp (mp @x636 (quant-intro (proof-bind ?x450) (= $x1130 $x1092)) $x1092) (quant-intro (proof-bind ?x368) (= $x1092 $x585)) $x585)))
 (let ((@x1089 (mp (mp~ @x656 (sk (~ $x585 $x202)) $x202) (rewrite (= $x202 $x1040)) $x1040)))
 (let ((@x1080 (and-elim @x1089 $x1110)))
 (let ((@x715 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1110) $x544)) @x1080 $x544)))
 (let (($x476 (>= ?x778 1)))
 (let ((@x1046 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1110) $x476)) @x1080 $x476)))
 (let (($x394 (<= ?x200 1)))
 (let ((@x468 (and-elim @x1089 $x1134)))
 (let ((@x386 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1134) $x394)) @x468 $x394)))
 (let (($x1100 (>= ?x200 1)))
 (let ((@x837 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1134) $x1100)) @x468 $x1100)))
 (let (($x430 (<= ?x406 6)))
 (let ((@x189 (and-elim @x1089 $x480)))
 (let ((@x1085 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x480) $x430)) @x189 $x430)))
 (let (($x1098 (>= ?x406 6)))
 (let ((@x294 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x480) $x1098)) @x189 $x1098)))
 (let (($x1086 (<= ?x1042 4)))
 (let ((@x454 (and-elim @x1089 $x1095)))
 (let ((@x512 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1095) $x1086)) @x454 $x1086)))
 (let (($x408 (>= ?x1042 4)))
 (let ((@x521 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1095) $x408)) @x454 $x408)))
 (let (($x639 (not (<= ?x582 0))))
 (let (($x296 (>= ?x582 0)))
 (let ((@x832 ((_ th-lemma arith) (hypothesis (not $x296)) @x1046 @x715 @x294 @x1085 @x1046 @x715 @x837 @x386 @x1046 @x715 @x1046 @x715 @x521 @x512 @x1046 @x715 @x294 @x1085 @x294 @x1085 @x837 @x386 @x521 @x512 @x1046 @x715 false)))
 (let ((@x564 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1045 $x639 (not $x296))) (and-elim @x1089 $x1070) (or $x639 (not $x296)))))
 ((_ th-lemma arith) (unit-resolution @x564 (lemma @x832 $x296) $x639) @x1046 @x715 @x1046 @x715 @x294 @x1085 @x1046 @x715 @x837 @x386 @x1046 @x715 @x521 @x512 @x1046 @x715 @x294 @x1085 @x294 @x1085 @x837 @x386 @x1046 @x715 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        15
 :arith-assert-upper        15
 :arith-branch-var          2
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           7
 :arith-gomory-cuts         1
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             369
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    19
 :arith-num-rows            10
 :arith-patches             4
 :arith-pivots              12
 :arith-row-summations      30
 :arith-tableau-max-columns 58
 :arith-tableau-max-rows    10
 :conflicts                 3
 :decisions                 6
 :del-clause                16
 :final-checks              9
 :max-memory                3.86
 :memory                    3.27
 :mk-bool-var               27
 :mk-clause                 16
 :num-allocs                2054316
 :num-checks                1
 :propagations              11
 :rlimit-count              20710
 :time                      0.02
 :total-time                0.03)
