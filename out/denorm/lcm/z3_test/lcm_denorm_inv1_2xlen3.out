unsat
((set-logic NIA)
(declare-fun u!5 () Int)
(declare-fun x!3 () Int)
(declare-fun v!4 () Int)
(declare-fun y!2 () Int)
(declare-fun k!10 () Int)
(declare-fun k!00 () Int)
(proof
(let ((?x86 (+ k!00 k!10 (* (- 1) (* y!2 v!4)) (* (- 1) (* x!3 u!5)))))
 (let (($x333 (>= ?x86 0)))
 (let (($x85 (= ?x86 0)))
 (let ((?x945 (* x!3 u!5)))
 (let ((?x938 (* y!2 v!4)))
 (let ((?x536 (* (- 1) k!10)))
 (let ((?x787 (* (- 1) k!00)))
 (let ((?x95 (+ ?x787 ?x536 ?x938 ?x945)))
 (let ((?x1550 (* (- 1) (* y!2 y!2))))
 (let ((?x1489 (* (- 1) (* x!3 x!3))))
 (let ((?x322 (* (- 1) (* y!2 x!3 x!3 x!3 u!5 u!5 v!4 v!4))))
 (let ((?x358 (* y!2 x!3 u!5 v!4 v!4 v!4)))
 (let ((?x153 (+ (* (- 1) (* y!2 x!3 x!3 x!3 v!4 v!4 v!4 v!4)) (* (- 2) (* y!2 x!3 x!3 x!3 u!5 v!4 v!4 v!4)) (* y!2 x!3 v!4 v!4 v!4 v!4) ?x358 (* 2 (* y!2 x!3)) (* (- 1) (* x!3 x!3 u!5 v!4 v!4 v!4)) (* (- 1) (* x!3 x!3 v!4 v!4 v!4 v!4)) (* x!3 x!3 x!3 x!3 u!5 u!5 v!4 v!4) (* 2 (* x!3 x!3 x!3 x!3 u!5 v!4 v!4 v!4)) (* x!3 x!3 x!3 x!3 v!4 v!4 v!4 v!4) ?x322 ?x1489 ?x1550)))
 (let ((?x103 (* (- 1) (* y!2 y!2 x!3 x!3 x!3 v!4))))
 (let ((?x773 (* y!2 y!2 x!3 u!5 u!5 u!5)))
 (let ((?x694 (* (- 1) (* v!4 v!4 v!4))))
 (let ((?x1378 (* (- 1) (* u!5 v!4 v!4))))
 (let ((?x291 (+ (* (- 6) (* y!2 x!3 x!3 u!5 u!5 v!4)) (* (- 2) (* y!2 x!3 x!3 u!5 u!5 u!5)) (* 2 (* y!2 x!3 x!3 x!3 x!3 v!4)) (* (- 1) (* x!3 x!3 x!3 x!3 x!3 v!4)) (* 3 (* y!2 y!2 x!3 u!5 u!5 v!4)) (* y!2 y!2 x!3 v!4 v!4 v!4) (* 3 (* y!2 y!2 x!3 u!5 v!4 v!4)) (* x!3 x!3 x!3 u!5 u!5 u!5) (* 3 (* x!3 x!3 x!3 u!5 u!5 v!4)) (* (- 6) (* y!2 x!3 x!3 u!5 v!4 v!4)) (* (- 2) (* y!2 x!3 x!3 v!4 v!4 v!4)) ?x1378 ?x694 (* 3 (* x!3 x!3 x!3 u!5 v!4 v!4)) (* x!3 x!3 x!3 v!4 v!4 v!4) ?x773 ?x103)))
 (let ((?x597 (* ?x291 ?x153 ?x95)))
 (let (($x215 (= ?x597 0)))
 (let (($x599 (not $x215)))
 (let ((?x130 (+ (* 2 (* y!2 y!2 y!2 y!2 u!5 u!5 u!5 v!4)) (* 3 (* y!2 y!2 x!3 x!3 u!5 u!5 u!5 u!5)) (* y!2 y!2 y!2 y!2 u!5 u!5 u!5 u!5) (* y!2 y!2 y!2 y!2 u!5 u!5 v!4 v!4) (* 6 (* y!2 y!2 x!3 x!3 u!5 u!5 u!5 v!4)) (* 3 (* y!2 y!2 x!3 x!3 u!5 u!5 v!4 v!4)) (* (- 1) (* y!2 x!3 x!3 x!3 u!5 u!5 u!5 u!5)) (* (- 2) (* y!2 x!3 x!3 x!3 u!5 u!5 u!5 v!4)) (* (- 1) (* y!2 y!2 u!5 u!5 u!5 u!5)) (* 3 (* y!2 x!3 u!5 u!5 u!5 v!4)) (* 3 (* y!2 x!3 u!5 u!5 v!4 v!4)) ?x358 (* (- 3) (* y!2 y!2 y!2 x!3 u!5 u!5 v!4 v!4)) (* (- 6) (* y!2 y!2 y!2 x!3 u!5 u!5 u!5 v!4)) (* (- 3) (* y!2 y!2 u!5 u!5 u!5 v!4)) (* (- 3) (* y!2 y!2 u!5 u!5 v!4 v!4)) (* (- 1) (* y!2 y!2 u!5 v!4 v!4 v!4)) (* (- 3) (* y!2 y!2 y!2 x!3 u!5 u!5 u!5 u!5)) ?x322 (* y!2 x!3 u!5 u!5 u!5 u!5) ?x1550)))
 (let ((?x1213 (* (- 1) (* u!5 u!5 u!5))))
 (let ((?x624 (* (- 2) (* u!5 u!5 v!4))))
 (let ((?x297 (+ (* 3 (* y!2 y!2 y!2 x!3 x!3 v!4)) (* y!2 y!2 y!2 y!2 y!2 u!5) (* (- 3) (* y!2 y!2 y!2 y!2 x!3 v!4)) (* y!2 y!2 y!2 y!2 y!2 v!4) (* (- 3) (* y!2 y!2 y!2 y!2 x!3 u!5)) ?x624 ?x1378 (* 3 (* y!2 y!2 y!2 x!3 x!3 u!5)) ?x773 ?x103 (* (- 1) (* y!2 y!2 x!3 x!3 x!3 u!5)) (* (- 1) (* y!2 y!2 y!2 u!5 u!5 u!5)) ?x1213)))
 (let ((?x675 (* ?x297 ?x130 ?x95)))
 (let (($x303 (= ?x675 0)))
 (let (($x302 (or (not $x303) $x599)))
 (let (($x664 (and $x85 $x302)))
 (let ((?x1206 (+ (* u!5 x!3) (* v!4 y!2) ?x787 ?x536)))
 (let ((?x335 (* u!5 v!4 v!4 v!4 x!3 y!2)))
 (let ((?x1431 (* (- 1) (* u!5 u!5 v!4 v!4 x!3 x!3 x!3 y!2))))
 (let ((?x751 (+ ?x1550 ?x1431 ?x335 (* (- 2) (* u!5 v!4 v!4 v!4 x!3 x!3 x!3 y!2)) (* (- 1) (* v!4 v!4 v!4 v!4 x!3 x!3 x!3 y!2)) (* v!4 v!4 v!4 v!4 x!3 y!2) (* (- 1) (* u!5 v!4 v!4 v!4 x!3 x!3)) (* (- 1) (* v!4 v!4 v!4 v!4 x!3 x!3)) ?x1489 (* 2 (* x!3 y!2)) (* u!5 u!5 v!4 v!4 x!3 x!3 x!3 x!3) (* 2 (* u!5 v!4 v!4 v!4 x!3 x!3 x!3 x!3)) (* v!4 v!4 v!4 v!4 x!3 x!3 x!3 x!3))))
 (let ((?x1540 (* (- 1) (* v!4 x!3 x!3 x!3 y!2 y!2))))
 (let ((?x1380 (* u!5 u!5 u!5 x!3 y!2 y!2)))
 (let ((?x994 (+ (* 3 (* u!5 u!5 v!4 x!3 y!2 y!2)) (* 3 (* u!5 v!4 v!4 x!3 y!2 y!2)) (* v!4 v!4 v!4 x!3 y!2 y!2) (* u!5 u!5 u!5 x!3 x!3 x!3) ?x1378 ?x1380 ?x694 ?x1540 (* 3 (* u!5 v!4 v!4 x!3 x!3 x!3)) (* 3 (* u!5 u!5 v!4 x!3 x!3 x!3)) (* v!4 v!4 v!4 x!3 x!3 x!3) (* (- 2) (* u!5 u!5 u!5 x!3 x!3 y!2)) (* (- 6) (* u!5 u!5 v!4 x!3 x!3 y!2)) (* (- 6) (* u!5 v!4 v!4 x!3 x!3 y!2)) (* (- 2) (* v!4 v!4 v!4 x!3 x!3 y!2)) (* (- 1) (* v!4 x!3 x!3 x!3 x!3 x!3)) (* 2 (* v!4 x!3 x!3 x!3 x!3 y!2)))))
 (let ((?x501 (+ ?x1550 (* u!5 u!5 u!5 u!5 y!2 y!2 y!2 y!2) (* u!5 u!5 v!4 v!4 y!2 y!2 y!2 y!2) (* 6 (* u!5 u!5 u!5 v!4 x!3 x!3 y!2 y!2)) (* 3 (* u!5 u!5 v!4 v!4 x!3 x!3 y!2 y!2)) (* (- 1) (* u!5 u!5 u!5 u!5 x!3 x!3 x!3 y!2)) (* (- 2) (* u!5 u!5 u!5 v!4 x!3 x!3 x!3 y!2)) ?x1431 (* u!5 u!5 u!5 u!5 x!3 y!2) (* 3 (* u!5 u!5 u!5 v!4 x!3 y!2)) (* 3 (* u!5 u!5 v!4 v!4 x!3 y!2)) ?x335 (* (- 1) (* u!5 u!5 u!5 u!5 y!2 y!2)) (* (- 3) (* u!5 u!5 u!5 v!4 y!2 y!2)) (* (- 3) (* u!5 u!5 v!4 v!4 y!2 y!2)) (* (- 1) (* u!5 v!4 v!4 v!4 y!2 y!2)) (* (- 3) (* u!5 u!5 u!5 u!5 x!3 y!2 y!2 y!2)) (* (- 6) (* u!5 u!5 u!5 v!4 x!3 y!2 y!2 y!2)) (* (- 3) (* u!5 u!5 v!4 v!4 x!3 y!2 y!2 y!2)) (* 2 (* u!5 u!5 u!5 v!4 y!2 y!2 y!2 y!2)) (* 3 (* u!5 u!5 u!5 u!5 x!3 x!3 y!2 y!2)))))
 (let ((?x1548 (+ ?x1213 ?x624 ?x1378 ?x1380 (* (- 1) (* u!5 u!5 u!5 y!2 y!2 y!2)) (* (- 1) (* u!5 x!3 x!3 x!3 y!2 y!2)) ?x1540 (* 3 (* u!5 x!3 x!3 y!2 y!2 y!2)) (* 3 (* v!4 x!3 x!3 y!2 y!2 y!2)) (* (- 3) (* u!5 x!3 y!2 y!2 y!2 y!2)) (* (- 3) (* v!4 x!3 y!2 y!2 y!2 y!2)) (* u!5 y!2 y!2 y!2 y!2 y!2) (* v!4 y!2 y!2 y!2 y!2 y!2))))
 (let (($x833 (or (not (= (* ?x1548 ?x501 ?x1206) 0)) (not (= (* ?x994 ?x751 ?x1206) 0)))))
 (let (($x846 (and (= ?x1206 0) $x833)))
 (let (($x1556 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x536 (* (- 1) k!10)))
 (let ((?x787 (* (- 1) k!00)))
 (let ((?x34 (* v y)))
 (let ((?x33 (* u x)))
 (let ((?x491 (+ ?x33 ?x34 ?x787 ?x536)))
 (let ((?x915 (* 2 (* x y))))
 (let ((?x910 (* (- 1) (* x x))))
 (let ((?x843 (* (- 1) (* v v v v x x))))
 (let ((?x839 (* (- 1) (* u v v v x x))))
 (let ((?x832 (* v v v v x y)))
 (let ((?x816 (* (- 1) (* v v v v x x x y))))
 (let ((?x440 (* u v v v x y)))
 (let ((?x368 (* (- 1) (* u u v v x x x y))))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x1522 (+ ?x535 ?x368 ?x440 (* (- 2) (* u v v v x x x y)) ?x816 ?x832 ?x839 ?x843 ?x910 ?x915 (* u u v v x x x x) (* 2 (* u v v v x x x x)) (* v v v v x x x x))))
 (let ((?x329 (* (- 1) (* v x x x y y))))
 (let ((?x175 (* u u u x y y)))
 (let ((?x166 (* (- 1) (* u v v))))
 (let ((?x793 (+ (* 3 (* u u v x y y)) (* 3 (* u v v x y y)) (* v v v x y y) (* u u u x x x) ?x166 ?x175 (* (- 1) (* v v v)) ?x329 (* 3 (* u v v x x x)) (* 3 (* u u v x x x)) (* v v v x x x) (* (- 2) (* u u u x x y)) (* (- 6) (* u u v x x y)) (* (- 6) (* u v v x x y)) (* (- 2) (* v v v x x y)) (* (- 1) (* v x x x x x)) (* 2 (* v x x x x y)))))
 (let ((?x507 (* (- 1) (* u v v v y y))))
 (let ((?x516 (* (- 3) (* u u v v y y))))
 (let ((?x515 (* (- 3) (* u u u v y y))))
 (let ((?x463 (* (- 1) (* u u u u y y))))
 (let ((?x514 (* 3 (* u u v v x y))))
 (let ((?x513 (* 3 (* u u u v x y))))
 (let ((?x433 (* u u u u x y)))
 (let ((?x362 (* (- 1) (* u u u u x x x y))))
 (let ((?x989 (+ ?x535 (* u u u u y y y y) (* u u v v y y y y) (* 6 (* u u u v x x y y)) (* 3 (* u u v v x x y y)) ?x362 (* (- 2) (* u u u v x x x y)) ?x368 ?x433 ?x513 ?x514 ?x440 ?x463 ?x515 ?x516 ?x507 (* (- 3) (* u u u u x y y y)) (* (- 6) (* u u u v x y y y)) (* (- 3) (* u u v v x y y y)) (* 2 (* u u u v y y y y)) (* 3 (* u u u u x x y y)))))
 (let ((?x299 (* v y y y y y)))
 (let ((?x295 (* u y y y y y)))
 (let ((?x348 (* (- 3) (* v x y y y y))))
 (let ((?x345 (* (- 3) (* u x y y y y))))
 (let ((?x342 (* 3 (* v x x y y y))))
 (let ((?x339 (* 3 (* u x x y y y))))
 (let ((?x328 (* (- 1) (* u x x x y y))))
 (let ((?x183 (* (- 1) (* u u u y y y))))
 (let ((?x160 (* (- 1) (* u u u))))
 (let ((?x274 (+ ?x160 (* (- 2) (* u u v)) ?x166 ?x175 ?x183 ?x328 ?x329 ?x339 ?x342 ?x345 ?x348 ?x295 ?x299)))
 (let (($x1554 (or (not (= (* ?x274 ?x989 ?x491) 0)) (not (= (* ?x793 ?x1522 ?x491) 0)))))
 (and (= ?x491 0) $x1554))))))))))))))))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x300 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x536 (* (- 1) k!10)))
 (let ((?x429 (* (- 1) x)))
 (let ((?x540 (+ y ?x429)))
 (let ((?x917 (* ?x540 v)))
 (let ((?x61 (+ u v)))
 (let ((?x62 (* ?x61 x)))
 (let ((?x787 (* (- 1) k!00)))
 (let ((?x97 (+ (* (- 1) (* ?x61 ?x61 ?x540 x x x v v)) (* ?x61 ?x540 x v v v) (* (- 1) (* ?x540 ?x540)))))
 (let ((?x157 (+ (* (- 1) (* ?x61 v v)) (* ?x61 ?x61 ?x61 ?x540 ?x540 x) (* (- 1) (* ?x540 ?x540 x x x v)))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x96 (* (- 1) y)))
 (let ((?x108 (+ x ?x96)))
 (let ((?x912 (* ?x108 u)))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x792 (+ (* (- 1) (* ?x44 ?x44 ?x108 ?x108 ?x108 y u u)) (* ?x44 ?x44 ?x44 ?x108 y u) ?x535)))
 (let ((?x543 (+ (* (- 1) (* ?x44 ?x44 u)) (* ?x108 y y u u u) (* (- 1) (* ?x44 ?x108 ?x108 ?x108 y y)))))
 (let (($x230 (or (not (= (* ?x543 ?x792 (+ ?x787 ?x912 ?x45 ?x536)) 0)) (not (= (* ?x157 ?x97 (+ ?x787 ?x62 ?x917 ?x536)) 0)))))
 (and (= (+ ?x787 (* x u) (* y v) ?x536) 0) $x230)))))))))))))))))))) :qid k!29))
 ))
 (let ((?x1558 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x536 (* (- 1) k!10)))
 (let ((?x787 (* (- 1) k!00)))
 (let ((?x34 (* v y)))
 (let ((?x33 (* u x)))
 (let ((?x491 (+ ?x33 ?x34 ?x787 ?x536)))
 (let ((?x915 (* 2 (* x y))))
 (let ((?x910 (* (- 1) (* x x))))
 (let ((?x843 (* (- 1) (* v v v v x x))))
 (let ((?x839 (* (- 1) (* u v v v x x))))
 (let ((?x832 (* v v v v x y)))
 (let ((?x816 (* (- 1) (* v v v v x x x y))))
 (let ((?x440 (* u v v v x y)))
 (let ((?x368 (* (- 1) (* u u v v x x x y))))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x1522 (+ ?x535 ?x368 ?x440 (* (- 2) (* u v v v x x x y)) ?x816 ?x832 ?x839 ?x843 ?x910 ?x915 (* u u v v x x x x) (* 2 (* u v v v x x x x)) (* v v v v x x x x))))
 (let ((?x329 (* (- 1) (* v x x x y y))))
 (let ((?x175 (* u u u x y y)))
 (let ((?x166 (* (- 1) (* u v v))))
 (let ((?x793 (+ (* 3 (* u u v x y y)) (* 3 (* u v v x y y)) (* v v v x y y) (* u u u x x x) ?x166 ?x175 (* (- 1) (* v v v)) ?x329 (* 3 (* u v v x x x)) (* 3 (* u u v x x x)) (* v v v x x x) (* (- 2) (* u u u x x y)) (* (- 6) (* u u v x x y)) (* (- 6) (* u v v x x y)) (* (- 2) (* v v v x x y)) (* (- 1) (* v x x x x x)) (* 2 (* v x x x x y)))))
 (let ((?x507 (* (- 1) (* u v v v y y))))
 (let ((?x516 (* (- 3) (* u u v v y y))))
 (let ((?x515 (* (- 3) (* u u u v y y))))
 (let ((?x463 (* (- 1) (* u u u u y y))))
 (let ((?x514 (* 3 (* u u v v x y))))
 (let ((?x513 (* 3 (* u u u v x y))))
 (let ((?x433 (* u u u u x y)))
 (let ((?x362 (* (- 1) (* u u u u x x x y))))
 (let ((?x989 (+ ?x535 (* u u u u y y y y) (* u u v v y y y y) (* 6 (* u u u v x x y y)) (* 3 (* u u v v x x y y)) ?x362 (* (- 2) (* u u u v x x x y)) ?x368 ?x433 ?x513 ?x514 ?x440 ?x463 ?x515 ?x516 ?x507 (* (- 3) (* u u u u x y y y)) (* (- 6) (* u u u v x y y y)) (* (- 3) (* u u v v x y y y)) (* 2 (* u u u v y y y y)) (* 3 (* u u u u x x y y)))))
 (let ((?x299 (* v y y y y y)))
 (let ((?x295 (* u y y y y y)))
 (let ((?x348 (* (- 3) (* v x y y y y))))
 (let ((?x345 (* (- 3) (* u x y y y y))))
 (let ((?x342 (* 3 (* v x x y y y))))
 (let ((?x339 (* 3 (* u x x y y y))))
 (let ((?x328 (* (- 1) (* u x x x y y))))
 (let ((?x183 (* (- 1) (* u u u y y y))))
 (let ((?x160 (* (- 1) (* u u u))))
 (let ((?x274 (+ ?x160 (* (- 2) (* u u v)) ?x166 ?x175 ?x183 ?x328 ?x329 ?x339 ?x342 ?x345 ?x348 ?x295 ?x299)))
 (let (($x1554 (or (not (= (* ?x274 ?x989 ?x491) 0)) (not (= (* ?x793 ?x1522 ?x491) 0)))))
 (let (($x1593 (and (= ?x491 0) $x1554)))
 (let ((?x429 (* (- 1) x)))
 (let ((?x540 (+ y ?x429)))
 (let ((?x917 (* ?x540 v)))
 (let ((?x61 (+ u v)))
 (let ((?x62 (* ?x61 x)))
 (let ((?x97 (+ (* (- 1) (* ?x61 ?x61 ?x540 x x x v v)) (* ?x61 ?x540 x v v v) (* (- 1) (* ?x540 ?x540)))))
 (let ((?x157 (+ (* (- 1) (* ?x61 v v)) (* ?x61 ?x61 ?x61 ?x540 ?x540 x) (* (- 1) (* ?x540 ?x540 x x x v)))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x96 (* (- 1) y)))
 (let ((?x108 (+ x ?x96)))
 (let ((?x912 (* ?x108 u)))
 (let ((?x792 (+ (* (- 1) (* ?x44 ?x44 ?x108 ?x108 ?x108 y u u)) (* ?x44 ?x44 ?x44 ?x108 y u) ?x535)))
 (let ((?x543 (+ (* (- 1) (* ?x44 ?x44 u)) (* ?x108 y y u u u) (* (- 1) (* ?x44 ?x108 ?x108 ?x108 y y)))))
 (let (($x230 (or (not (= (* ?x543 ?x792 (+ ?x787 ?x912 ?x45 ?x536)) 0)) (not (= (* ?x157 ?x97 (+ ?x787 ?x62 ?x917 ?x536)) 0)))))
 (let (($x238 (and (= (+ ?x787 (* x u) (* y v) ?x536) 0) $x230)))
 (rewrite (= $x238 $x1593))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x476 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x38 (* v00 y00)))
 (let ((?x107 (* (- 1) ?x38)))
 (let ((?x429 (* (- 1) x)))
 (let ((?x540 (+ y ?x429)))
 (let ((?x917 (* ?x540 v)))
 (let ((?x61 (+ u v)))
 (let ((?x62 (* ?x61 x)))
 (let ((?x91 (* (- 1) (* u00 x00))))
 (let ((?x97 (+ (* (- 1) (* ?x61 ?x61 ?x540 x x x v v)) (* ?x61 ?x540 x v v v) (* (- 1) (* ?x540 ?x540)))))
 (let ((?x157 (+ (* (- 1) (* ?x61 v v)) (* ?x61 ?x61 ?x61 ?x540 ?x540 x) (* (- 1) (* ?x540 ?x540 x x x v)))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x96 (* (- 1) y)))
 (let ((?x108 (+ x ?x96)))
 (let ((?x912 (* ?x108 u)))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x792 (+ (* (- 1) (* ?x44 ?x44 ?x108 ?x108 ?x108 y u u)) (* ?x44 ?x44 ?x44 ?x108 y u) ?x535)))
 (let ((?x543 (+ (* (- 1) (* ?x44 ?x44 u)) (* ?x108 y y u u u) (* (- 1) (* ?x44 ?x108 ?x108 ?x108 y y)))))
 (let (($x469 (or (not (= (* ?x543 ?x792 (+ ?x91 ?x912 ?x45 ?x107)) 0)) (not (= (* ?x157 ?x97 (+ ?x91 ?x62 ?x917 ?x107)) 0)))))
 (and (= (+ ?x91 (* x u) (* y v) ?x107) 0) $x469))))))))))))))))))))) :qid k!29))
 ))
 (let ((?x920 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x536 (* (- 1) k!10)))
 (let ((?x429 (* (- 1) x)))
 (let ((?x540 (+ y ?x429)))
 (let ((?x917 (* ?x540 v)))
 (let ((?x61 (+ u v)))
 (let ((?x62 (* ?x61 x)))
 (let ((?x787 (* (- 1) k!00)))
 (let ((?x97 (+ (* (- 1) (* ?x61 ?x61 ?x540 x x x v v)) (* ?x61 ?x540 x v v v) (* (- 1) (* ?x540 ?x540)))))
 (let ((?x157 (+ (* (- 1) (* ?x61 v v)) (* ?x61 ?x61 ?x61 ?x540 ?x540 x) (* (- 1) (* ?x540 ?x540 x x x v)))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x96 (* (- 1) y)))
 (let ((?x108 (+ x ?x96)))
 (let ((?x912 (* ?x108 u)))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x792 (+ (* (- 1) (* ?x44 ?x44 ?x108 ?x108 ?x108 y u u)) (* ?x44 ?x44 ?x44 ?x108 y u) ?x535)))
 (let ((?x543 (+ (* (- 1) (* ?x44 ?x44 u)) (* ?x108 y y u u u) (* (- 1) (* ?x44 ?x108 ?x108 ?x108 y y)))))
 (let (($x230 (or (not (= (* ?x543 ?x792 (+ ?x787 ?x912 ?x45 ?x536)) 0)) (not (= (* ?x157 ?x97 (+ ?x787 ?x62 ?x917 ?x536)) 0)))))
 (let (($x238 (and (= (+ ?x787 (* x u) (* y v) ?x536) 0) $x230)))
 (let ((?x464 (* ?x157 ?x97 (+ (* (- 1) (* u00 x00)) ?x62 ?x917 (* (- 1) (* v00 y00))))))
 (let ((?x533 (* ?x543 ?x792 (+ (* (- 1) (* u00 x00)) ?x912 ?x45 (* (- 1) (* v00 y00))))))
 (let ((?x38 (* v00 y00)))
 (let ((?x107 (* (- 1) ?x38)))
 (let ((?x94 (* y v)))
 (let ((?x89 (* x u)))
 (let ((?x91 (* (- 1) (* u00 x00))))
 (let (($x779 (and (= (+ ?x91 ?x89 ?x94 ?x107) 0) (or (not (= ?x533 0)) (not (= ?x464 0))))))
 (rewrite (= $x779 $x238)))))))))))))))))))))))))))))))
 ))
 (let (($x82 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x63 (- y x)))
 (let ((?x61 (+ u v)))
 (let ((?x29 (- 1)))
 (let ((?x74 (+ (* ?x29 ?x61 ?x61 v v x x x ?x63) (* ?x61 v v v x ?x63))))
 (let ((?x71 (- (+ (* ?x29 ?x61 v v) (* ?x61 ?x61 ?x61 x ?x63 ?x63)) (* v x x x ?x63 ?x63))))
 (let ((?x38 (* v00 y00)))
 (let ((?x77 (* (- (+ (* ?x29 u00 x00) (* ?x61 x) (* v ?x63)) ?x38) ?x71 (- ?x74 (* ?x63 ?x63)))))
 (let ((?x56 (* y y)))
 (let ((?x42 (- x y)))
 (let ((?x44 (+ v u)))
 (let ((?x55 (+ (* ?x29 u u ?x44 ?x44 ?x42 ?x42 ?x42 y) (* u ?x44 ?x44 ?x44 ?x42 y))))
 (let ((?x52 (- (+ (* ?x29 u ?x44 ?x44) (* u u u ?x42 y y)) (* ?x44 ?x42 ?x42 ?x42 y y))))
 (let ((?x58 (* (- (+ (* ?x29 u00 x00) (* u ?x42) (* ?x44 y)) ?x38) ?x52 (- ?x55 ?x56))))
 (let (($x41 (= (- (+ (* ?x29 u00 x00) (* u x) (* v y)) ?x38) 0)))
 (and $x41 (or (not (= ?x58 0)) (not (= ?x77 0)))))))))))))))))) :qid k!29))
 ))
 (let ((?x916 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x38 (* v00 y00)))
 (let ((?x107 (* (- 1) ?x38)))
 (let ((?x429 (* (- 1) x)))
 (let ((?x540 (+ y ?x429)))
 (let ((?x917 (* ?x540 v)))
 (let ((?x61 (+ u v)))
 (let ((?x62 (* ?x61 x)))
 (let ((?x91 (* (- 1) (* u00 x00))))
 (let ((?x97 (+ (* (- 1) (* ?x61 ?x61 ?x540 x x x v v)) (* ?x61 ?x540 x v v v) (* (- 1) (* ?x540 ?x540)))))
 (let ((?x157 (+ (* (- 1) (* ?x61 v v)) (* ?x61 ?x61 ?x61 ?x540 ?x540 x) (* (- 1) (* ?x540 ?x540 x x x v)))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x96 (* (- 1) y)))
 (let ((?x108 (+ x ?x96)))
 (let ((?x912 (* ?x108 u)))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x792 (+ (* (- 1) (* ?x44 ?x44 ?x108 ?x108 ?x108 y u u)) (* ?x44 ?x44 ?x44 ?x108 y u) ?x535)))
 (let ((?x543 (+ (* (- 1) (* ?x44 ?x44 u)) (* ?x108 y y u u u) (* (- 1) (* ?x44 ?x108 ?x108 ?x108 y y)))))
 (let (($x469 (or (not (= (* ?x543 ?x792 (+ ?x91 ?x912 ?x45 ?x107)) 0)) (not (= (* ?x157 ?x97 (+ ?x91 ?x62 ?x917 ?x107)) 0)))))
 (let (($x779 (and (= (+ ?x91 (* x u) (* y v) ?x107) 0) $x469)))
 (let ((?x74 (+ (* (- 1) ?x61 ?x61 v v x x x (- y x)) (* ?x61 v v v x (- y x)))))
 (let ((?x69 (+ (* (- 1) ?x61 v v) (* ?x61 ?x61 ?x61 x (- y x) (- y x)))))
 (let ((?x77 (* (- (+ (* (- 1) u00 x00) ?x62 (* v (- y x))) ?x38) (- ?x69 (* v x x x (- y x) (- y x))) (- ?x74 (* (- y x) (- y x))))))
 (let ((?x42 (- x y)))
 (let ((?x29 (- 1)))
 (let ((?x55 (+ (* ?x29 u u ?x44 ?x44 ?x42 ?x42 ?x42 y) (* u ?x44 ?x44 ?x44 ?x42 y))))
 (let ((?x52 (- (+ (* ?x29 u ?x44 ?x44) (* u u u ?x42 y y)) (* ?x44 ?x42 ?x42 ?x42 y y))))
 (let ((?x58 (* (- (+ (* ?x29 u00 x00) (* u ?x42) ?x45) ?x38) ?x52 (- ?x55 ?x56))))
 (let (($x41 (= (- (+ (* ?x29 u00 x00) (* u x) (* v y)) ?x38) 0)))
 (let (($x81 (and $x41 (or (not (= ?x58 0)) (not (= ?x77 0))))))
 (rewrite (= $x81 $x779))))))))))))))))))))))))))))))))))
 ))
 (let ((@x83 (asserted $x82)))
 (let ((@x797 (mp (mp @x83 (quant-intro (proof-bind ?x916) (= $x82 $x476)) $x476) (rewrite (= $x476 $x476)) $x476)))
 (let ((@x998 (mp (mp @x797 (quant-intro (proof-bind ?x920) (= $x476 $x300)) $x300) (quant-intro (proof-bind ?x1558) (= $x300 $x1556)) $x1556)))
 (let ((@x549 (mp (mp~ @x998 (sk (~ $x1556 $x846)) $x846) (rewrite (= $x846 $x664)) $x664)))
 (let ((@x580 (and-elim @x549 $x85)))
 (let ((@x928 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x85) $x333)) @x580 $x333)))
 (let (($x330 (<= ?x86 0)))
 (let ((@x653 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x85) $x330)) @x580 $x330)))
 (let (($x555 (not (<= ?x597 0))))
 (let (($x940 (>= ?x597 0)))
 (let (($x933 (>= ?x675 0)))
 (let (($x789 (<= ?x675 0)))
 (let ((@x326 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x303 (not $x789) (not $x933))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x789)) @x653 @x928 false) $x789) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x933)) @x653 @x928 false) $x933) $x303)))
 (let ((@x565 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x215 $x555 (not $x940))) (unit-resolution (and-elim @x549 $x302) @x326 $x599) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x940)) @x653 @x928 false) $x940) $x555)))
 ((_ th-lemma arith farkas 1 1 1) @x565 @x653 @x928 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        55
 :arith-assert-upper        14
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-fixed-eqs           5
 :arith-max-min             560
 :arith-nonlinear-bounds    38
 :arith-num-rows            6
 :arith-pivots              1
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 81
 :arith-tableau-max-rows    6
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :eliminated-applications   2
 :final-checks              4
 :max-memory                19.73
 :memory                    19.21
 :mk-bool-var               9
 :mk-clause                 12
 :num-allocs                529751
 :num-checks                1
 :propagations              14
 :rlimit-count              6189
 :time                      0.01
 :total-time                0.02)
