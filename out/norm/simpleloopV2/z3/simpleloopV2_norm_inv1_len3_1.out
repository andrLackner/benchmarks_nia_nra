unsat
((set-logic NIA)
(declare-fun y!0 () Int)
(declare-fun x!1 () Int)
(proof
(let ((?x1578 (+ y00 x00 (* (- 1) x!1) (* (- 1) y!0))))
 (let (($x1136 (<= ?x1578 0)))
 (let (($x3039 (= ?x1578 0)))
 (let ((?x468 (* (- 6) (* y00 x!1 y!0 y!0))))
 (let ((?x1847 (* 9 (* y00 x!1 x!1 y!0))))
 (let ((?x1779 (* (- 1) (* y00 x!1 x!1 x!1))))
 (let ((?x1866 (* 3 (* y00 x!1 x!1 y!0 y!0 y!0))))
 (let ((?x1778 (* (- 3) (* x00 x!1 x!1 x!1 y!0 y!0))))
 (let ((?x3028 (+ 1 y!0)))
 (let ((?x1083 (+ (- 1) x!1)))
 (let ((?x3031 (* ?x1083 ?x1083 ?x1083 ?x1083 ?x3028 ?x3028 ?x3028)))
 (let ((?x3024 (* ?x1083 ?x1083 ?x1083 ?x3028 ?x3028 ?x3028 ?x3028)))
 (let ((?x3008 (* y!0 y!0 y!0 y!0)))
 (let ((?x2992 (* x!1 x!1 y!0)))
 (let ((?x2673 (* (- 3) ?x2992)))
 (let ((?x2989 (* x!1 x!1 y!0 y!0 y!0)))
 (let ((?x2990 (* (- 1) ?x2989)))
 (let ((?x2988 (* y!0 y!0 y!0)))
 (let ((?x2987 (* 3 ?x2988)))
 (let ((?x2960 (* x!1 y!0)))
 (let ((?x3015 (* 3 ?x2960)))
 (let ((?x2749 (* x!1 y!0 y!0 y!0 y!0)))
 (let ((?x3012 (* (- 1) ?x2749)))
 (let ((?x2674 (* x!1 x!1 y!0 y!0)))
 (let ((?x3027 (* (- 3) ?x2674)))
 (let ((?x2666 (* y!0 y!0)))
 (let ((?x3021 (* 3 ?x2666)))
 (let ((?x382 (* (- 6) (* x00 x!1 y!0 y!0))))
 (let ((?x2006 (* x!1 y!0 y!0 y!0)))
 (let ((?x3022 (* (- 2) ?x2006)))
 (let ((?x1776 (* 3 (* x00 x!1 x!1 y!0 y!0 y!0))))
 (let ((?x193 (* (- 1) (* x00 x!1 x!1 x!1))))
 (let ((?x192 (* 9 (* x00 x!1 x!1 y!0))))
 (let ((?x381 (* (- 3) (* y00 x!1 x!1 x!1 y!0 y!0))))
 (let ((?x436 (+ y00 x00 (* 9 (* y00 x!1 x!1 y!0 y!0)) ?x381 (* (- 3) (* x00 x!1 x!1 x!1 y!0)) ?x192 ?x193 ?x1776 ?x3022 (* (- 3) (* y00 x!1 x!1 x!1 y!0)) ?x382 ?x3021 ?x3027 ?x3012 (* (- 6) (* x00 x!1 y!0)) ?x3015 (* (- 3) (* x00 x!1)) ?x2987 ?x2990 ?x2673 ?x3008 ?x3024 ?x3031 (* 3 (* x00 x!1 x!1)) (* 9 (* x00 x!1 x!1 y!0 y!0)) ?x1778 (* (- 2) (* x00 x!1 y!0 y!0 y!0)) (* (- 1) (* x00 x!1 x!1 x!1 y!0 y!0 y!0)) (* (- 2) (* y00 x!1 y!0 y!0 y!0)) ?x1866 (* (- 1) (* y00 x!1 x!1 x!1 y!0 y!0 y!0)) (* (- 3) (* y00 x!1)) (* 3 (* y00 x!1 x!1)) ?x1779 (* (- 6) (* y00 x!1 y!0)) ?x1847 ?x468)))
 (let (($x3051 (= ?x436 0)))
 (let (($x1067 (not $x3051)))
 (let ((?x3147 (* y00 x!1 x!1 x!1 y!0 y!0 y!0)))
 (let ((?x3132 (* x00 x!1 x!1 x!1 y!0 y!0 y!0)))
 (let ((?x2995 (+ 1 x!1)))
 (let ((?x2994 (+ (- 1) y!0)))
 (let ((?x2998 (* ?x2994 ?x2994 ?x2994 ?x2995 ?x2995 ?x2995 ?x2995)))
 (let ((?x469 (+ y00 x00 (* (- 9) (* y00 x!1 x!1 y!0 y!0)) ?x381 (* 3 (* x00 x!1 x!1 x!1 y!0)) ?x192 ?x193 ?x1776 ?x3022 (* 3 (* y00 x!1 x!1 x!1 y!0)) ?x382 ?x3021 (* (- 2) (* x!1 x!1)) ?x3027 ?x2749 (* 6 (* x00 x!1 y!0)) (* (- 2) x!1) (* (- 2) y!0) ?x2960 (* (- 1) (* x00 x!1)) (* (- 3) ?x2988) ?x2989 (* 3 ?x2992) (* (- 1) (* ?x2994 ?x2994 ?x2994 ?x2994 ?x2995 ?x2995 ?x2995)) (* (- 1) ?x2998) ?x3008 (* (- 3) (* x00 x!1 x!1)) (* (- 9) (* x00 x!1 x!1 y!0 y!0)) ?x1778 (* 2 (* x00 x!1 y!0 y!0 y!0)) ?x3132 (* 2 (* y00 x!1 y!0 y!0 y!0)) ?x1866 ?x3147 (* (- 1) (* y00 x!1)) (* (- 3) (* y00 x!1 x!1)) ?x1779 (* 6 (* y00 x!1 y!0)) ?x1847 ?x468)))
 (let (($x1848 (= ?x469 0)))
 (let (($x3052 (or (not $x1848) $x1067)))
 (let (($x3129 (and $x3039 $x3052)))
 (let ((?x3007 (* 9 (* x!1 x!1 y!0 y!0 y00))))
 (let ((?x3006 (* (- 3) (* x!1 x!1 x!1 y!0 y00))))
 (let ((?x93 (* (- 6) (* x!1 y!0 y00))))
 (let ((?x1554 (* 3 (* x!1 x!1 y00))))
 (let ((?x2016 (* (- 1) (* x!1 x!1 x!1 y!0 y!0 y!0 y00))))
 (let ((?x3001 (* (- 2) (* x!1 y!0 y!0 y!0 y00))))
 (let ((?x2665 (* (- 1) (* x!1 x!1 x!1 y!0 y!0 y!0 x00))))
 (let ((?x610 (* (- 2) (* x!1 y!0 y!0 y!0 x00))))
 (let ((?x2980 (* 9 (* x!1 x!1 y!0 y!0 x00))))
 (let ((?x2977 (* (- 3) (* x!1 x!1 x!1 y!0 x00))))
 (let ((?x2959 (* (- 6) (* x!1 y!0 x00))))
 (let ((?x2953 (* 3 (* x!1 x!1 x00))))
 (let ((?x2879 (+ y00 x00 ?x3015 (* (- 3) (* x!1 x00)) ?x2953 (* (- 1) (* x!1 x!1 x!1 x00)) ?x2959 (* 9 (* x!1 x!1 y!0 x00)) ?x2977 (* (- 6) (* x!1 y!0 y!0 x00)) ?x2980 (* (- 3) (* x!1 x!1 x!1 y!0 y!0 x00)) ?x610 (* 3 (* x!1 x!1 y!0 y!0 y!0 x00)) ?x2665 ?x3021 ?x2987 ?x3022 ?x2990 ?x2673 ?x3027 ?x3001 (* 3 (* x!1 x!1 y!0 y!0 y!0 y00)) ?x2016 (* (- 3) (* x!1 y00)) ?x1554 (* (- 1) (* x!1 x!1 x!1 y00)) ?x93 (* 9 (* x!1 x!1 y!0 y00)) ?x3006 (* (- 6) (* x!1 y!0 y!0 y00)) ?x3007 (* (- 3) (* x!1 x!1 x!1 y!0 y!0 y00)) ?x3024 ?x3008 ?x3012 ?x3031)))
 (let ((?x1235 (* x!1 x!1 x!1 y00)))
 (let ((?x3002 (* x!1 y00)))
 (let ((?x2997 (* ?x2994 ?x2994 ?x2994 ?x2994 ?x2995 ?x2995 ?x2995)))
 (let ((?x2978 (* x!1 x!1 x!1 x00)))
 (let ((?x1784 (* x!1 x00)))
 (let ((?x97 (* (- 1) x00)))
 (let ((?x90 (* (- 1) y00)))
 (let ((?x3016 (+ (* 2 x!1) (* 2 y!0) ?x90 ?x97 (* (- 1) ?x2960) ?x1784 ?x2953 ?x2978 ?x2959 (* (- 9) (* x!1 x!1 y!0 x00)) ?x2977 (* 6 (* x!1 y!0 y!0 x00)) ?x2980 (* 3 (* x!1 x!1 x!1 y!0 y!0 x00)) ?x610 (* (- 3) (* x!1 x!1 y!0 y!0 y!0 x00)) ?x2665 (* (- 3) ?x2666) ?x2987 (* 2 ?x2006) ?x2990 (* 2 (* x!1 x!1)) ?x2673 (* 3 ?x2674) ?x2997 ?x2998 ?x3001 (* (- 3) (* x!1 x!1 y!0 y!0 y!0 y00)) ?x2016 ?x3002 ?x1554 ?x1235 ?x93 (* (- 9) (* x!1 x!1 y!0 y00)) ?x3006 (* 6 (* x!1 y!0 y!0 y00)) ?x3007 (* 3 (* x!1 x!1 x!1 y!0 y!0 y00)) (* (- 1) ?x3008) ?x3012)))
 (let (($x3036 (and (= (+ x!1 y!0 ?x90 ?x97) 0) (or (not (= ?x3016 0)) (not (= ?x2879 0))))))
 (let (($x333 (exists ((x Int) (y Int) )(! (let ((?x118 (+ 1 y)))
 (let ((?x108 (+ (- 1) x)))
 (let ((?x1300 (* ?x108 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1293 (* x y y y y)))
 (let ((?x2287 (* (- 1) ?x1293)))
 (let ((?x1289 (* y y y y)))
 (let ((?x1193 (* ?x108 ?x108 ?x108 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x982 (* x x y y y00)))
 (let ((?x2286 (* 9 ?x982)))
 (let ((?x962 (* x x x y y00)))
 (let ((?x2285 (* (- 3) ?x962)))
 (let ((?x951 (* x y y00)))
 (let ((?x2283 (* (- 6) ?x951)))
 (let ((?x938 (* x x y00)))
 (let ((?x2282 (* 3 ?x938)))
 (let ((?x927 (* x x x y y y y00)))
 (let ((?x2281 (* (- 1) ?x927)))
 (let ((?x921 (* x y y y y00)))
 (let ((?x2280 (* (- 2) ?x921)))
 (let ((?x748 (* x x y)))
 (let ((?x2279 (* (- 3) ?x748)))
 (let ((?x730 (* x x y y y)))
 (let ((?x2277 (* (- 1) ?x730)))
 (let ((?x2276 (* 3 (* y y y))))
 (let ((?x510 (* x x x y y y x00)))
 (let ((?x2275 (* (- 1) ?x510)))
 (let ((?x489 (* x y y y x00)))
 (let ((?x2274 (* (- 2) ?x489)))
 (let ((?x385 (* x x y y x00)))
 (let ((?x2273 (* 9 ?x385)))
 (let ((?x334 (* x x x y x00)))
 (let ((?x2272 (* (- 3) ?x334)))
 (let ((?x308 (* x y x00)))
 (let ((?x2270 (* (- 6) ?x308)))
 (let ((?x284 (* x x x00)))
 (let ((?x2269 (* 3 ?x284)))
 (let ((?x3217 (+ y00 x00 (* 3 (* x y)) (* (- 3) (* x x00)) ?x2269 (* (- 1) (* x x x x00)) ?x2270 (* 9 (* x x y x00)) ?x2272 (* (- 6) (* x y y x00)) ?x2273 (* (- 3) (* x x x y y x00)) ?x2274 (* 3 (* x x y y y x00)) ?x2275 (* 3 (* y y)) ?x2276 (* (- 2) (* x y y y)) ?x2277 ?x2279 (* (- 3) (* x x y y)) ?x2280 (* 3 (* x x y y y y00)) ?x2281 (* (- 3) (* x y00)) ?x2282 (* (- 1) (* x x x y00)) ?x2283 (* 9 (* x x y y00)) ?x2285 (* (- 6) (* x y y y00)) ?x2286 (* (- 3) (* x x x y y y00)) ?x1193 ?x1289 ?x2287 ?x1300)))
 (let ((?x1295 (* (- 1) ?x1289)))
 (let ((?x990 (* x x x y y y00)))
 (let ((?x1051 (* 3 ?x990)))
 (let ((?x979 (* x y y y00)))
 (let ((?x1049 (* 6 ?x979)))
 (let ((?x954 (* x x y y00)))
 (let ((?x2284 (* (- 9) ?x954)))
 (let ((?x946 (* x x x y00)))
 (let ((?x935 (* x y00)))
 (let ((?x925 (* x x y y y y00)))
 (let ((?x1053 (* (- 3) ?x925)))
 (let ((?x1381 (+ 1 x)))
 (let ((?x152 (+ (- 1) y)))
 (let ((?x902 (* ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381 ?x1381)))
 (let ((?x887 (* ?x152 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)))
 (let ((?x763 (* x x y y)))
 (let ((?x796 (* 3 ?x763)))
 (let ((?x2278 (* 2 (* x x))))
 (let ((?x728 (* x y y y)))
 (let ((?x1373 (* 2 ?x728)))
 (let ((?x496 (* x x y y y x00)))
 (let ((?x533 (* (- 3) ?x496)))
 (let ((?x402 (* x x x y y x00)))
 (let ((?x531 (* 3 ?x402)))
 (let ((?x376 (* x y y x00)))
 (let ((?x529 (* 6 ?x376)))
 (let ((?x317 (* x x y x00)))
 (let ((?x2271 (* (- 9) ?x317)))
 (let ((?x292 (* x x x x00)))
 (let ((?x281 (* x x00)))
 (let ((?x130 (* x y)))
 (let ((?x131 (* (- 1) ?x130)))
 (let ((?x97 (* (- 1) x00)))
 (let ((?x90 (* (- 1) y00)))
 (let ((?x1737 (* 2 y)))
 (let ((?x1244 (* 2 x)))
 (let ((?x1157 (+ ?x1244 ?x1737 ?x90 ?x97 ?x131 ?x281 ?x2269 ?x292 ?x2270 ?x2271 ?x2272 ?x529 ?x2273 ?x531 ?x2274 ?x533 ?x2275 (* (- 3) (* y y)) ?x2276 ?x1373 ?x2277 ?x2278 ?x2279 ?x796 ?x887 ?x902 ?x2280 ?x1053 ?x2281 ?x935 ?x2282 ?x946 ?x2283 ?x2284 ?x2285 ?x1049 ?x2286 ?x1051 ?x1295 ?x2287)))
 (let (($x116 (= (+ x y ?x90 ?x97) 0)))
 (and $x116 (or (not (= ?x1157 0)) (not (= ?x3217 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x1769 (exists ((x Int) (y Int) )(! (let ((?x118 (+ 1 y)))
 (let ((?x108 (+ (- 1) x)))
 (let ((?x877 (* ?x108 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x864 (* ?x108 ?x108)))
 (let ((?x1300 (* ?x108 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1193 (* ?x108 ?x108 ?x108 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x943 (* y00 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1942 (* x00 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1741 (* ?x108 ?x118)))
 (let ((?x854 (+ ?x1741 (* (- 1) (* x00 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)) ?x1942 (* (- 1) (* ?x108 ?x108 ?x118 ?x118 ?x118)) (* (- 1) (* y00 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)) ?x943 (* (- 1) (* x00 ?x108)) (* (- 1) (* y00 ?x108)) ?x1193 ?x1300 ?x864 (* (- 1) ?x877))))
 (let ((?x1381 (+ 1 x)))
 (let ((?x152 (+ (- 1) y)))
 (let ((?x1040 (* ?x152 ?x152 ?x152 ?x152 ?x1381)))
 (let ((?x915 (* ?x1381 ?x1381)))
 (let ((?x902 (* ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381 ?x1381)))
 (let ((?x887 (* ?x152 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)))
 (let ((?x970 (* y00 ?x152 ?x152 ?x152 ?x1381)))
 (let ((?x936 (* x00 ?x152 ?x152 ?x152 ?x1381)))
 (let ((?x2151 (* ?x152 ?x1381)))
 (let ((?x1001 (+ ?x2151 (* (- 1) (* x00 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)) ?x936 (* (- 1) (* ?x152 ?x152 ?x152 ?x1381 ?x1381)) (* (- 1) (* y00 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)) ?x970 (* (- 1) (* x00 ?x1381)) (* (- 1) (* y00 ?x1381)) ?x887 ?x902 ?x915 (* (- 1) ?x1040))))
 (let (($x1633 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x1633 (or (not (= ?x1001 0)) (not (= ?x854 0))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x349 (lambda ((x Int) (y Int) )(let ((?x118 (+ 1 y)))
 (let ((?x108 (+ (- 1) x)))
 (let ((?x1300 (* ?x108 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1293 (* x y y y y)))
 (let ((?x2287 (* (- 1) ?x1293)))
 (let ((?x1289 (* y y y y)))
 (let ((?x1193 (* ?x108 ?x108 ?x108 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x982 (* x x y y y00)))
 (let ((?x2286 (* 9 ?x982)))
 (let ((?x962 (* x x x y y00)))
 (let ((?x2285 (* (- 3) ?x962)))
 (let ((?x951 (* x y y00)))
 (let ((?x2283 (* (- 6) ?x951)))
 (let ((?x938 (* x x y00)))
 (let ((?x2282 (* 3 ?x938)))
 (let ((?x927 (* x x x y y y y00)))
 (let ((?x2281 (* (- 1) ?x927)))
 (let ((?x921 (* x y y y y00)))
 (let ((?x2280 (* (- 2) ?x921)))
 (let ((?x748 (* x x y)))
 (let ((?x2279 (* (- 3) ?x748)))
 (let ((?x730 (* x x y y y)))
 (let ((?x2277 (* (- 1) ?x730)))
 (let ((?x2276 (* 3 (* y y y))))
 (let ((?x510 (* x x x y y y x00)))
 (let ((?x2275 (* (- 1) ?x510)))
 (let ((?x489 (* x y y y x00)))
 (let ((?x2274 (* (- 2) ?x489)))
 (let ((?x385 (* x x y y x00)))
 (let ((?x2273 (* 9 ?x385)))
 (let ((?x334 (* x x x y x00)))
 (let ((?x2272 (* (- 3) ?x334)))
 (let ((?x308 (* x y x00)))
 (let ((?x2270 (* (- 6) ?x308)))
 (let ((?x284 (* x x x00)))
 (let ((?x2269 (* 3 ?x284)))
 (let ((?x3217 (+ y00 x00 (* 3 (* x y)) (* (- 3) (* x x00)) ?x2269 (* (- 1) (* x x x x00)) ?x2270 (* 9 (* x x y x00)) ?x2272 (* (- 6) (* x y y x00)) ?x2273 (* (- 3) (* x x x y y x00)) ?x2274 (* 3 (* x x y y y x00)) ?x2275 (* 3 (* y y)) ?x2276 (* (- 2) (* x y y y)) ?x2277 ?x2279 (* (- 3) (* x x y y)) ?x2280 (* 3 (* x x y y y y00)) ?x2281 (* (- 3) (* x y00)) ?x2282 (* (- 1) (* x x x y00)) ?x2283 (* 9 (* x x y y00)) ?x2285 (* (- 6) (* x y y y00)) ?x2286 (* (- 3) (* x x x y y y00)) ?x1193 ?x1289 ?x2287 ?x1300)))
 (let ((?x1295 (* (- 1) ?x1289)))
 (let ((?x990 (* x x x y y y00)))
 (let ((?x1051 (* 3 ?x990)))
 (let ((?x979 (* x y y y00)))
 (let ((?x1049 (* 6 ?x979)))
 (let ((?x954 (* x x y y00)))
 (let ((?x2284 (* (- 9) ?x954)))
 (let ((?x946 (* x x x y00)))
 (let ((?x935 (* x y00)))
 (let ((?x925 (* x x y y y y00)))
 (let ((?x1053 (* (- 3) ?x925)))
 (let ((?x1381 (+ 1 x)))
 (let ((?x152 (+ (- 1) y)))
 (let ((?x902 (* ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381 ?x1381)))
 (let ((?x887 (* ?x152 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)))
 (let ((?x763 (* x x y y)))
 (let ((?x796 (* 3 ?x763)))
 (let ((?x2278 (* 2 (* x x))))
 (let ((?x728 (* x y y y)))
 (let ((?x1373 (* 2 ?x728)))
 (let ((?x496 (* x x y y y x00)))
 (let ((?x533 (* (- 3) ?x496)))
 (let ((?x402 (* x x x y y x00)))
 (let ((?x531 (* 3 ?x402)))
 (let ((?x376 (* x y y x00)))
 (let ((?x529 (* 6 ?x376)))
 (let ((?x317 (* x x y x00)))
 (let ((?x2271 (* (- 9) ?x317)))
 (let ((?x292 (* x x x x00)))
 (let ((?x281 (* x x00)))
 (let ((?x130 (* x y)))
 (let ((?x131 (* (- 1) ?x130)))
 (let ((?x97 (* (- 1) x00)))
 (let ((?x90 (* (- 1) y00)))
 (let ((?x1737 (* 2 y)))
 (let ((?x1244 (* 2 x)))
 (let ((?x1157 (+ ?x1244 ?x1737 ?x90 ?x97 ?x131 ?x281 ?x2269 ?x292 ?x2270 ?x2271 ?x2272 ?x529 ?x2273 ?x531 ?x2274 ?x533 ?x2275 (* (- 3) (* y y)) ?x2276 ?x1373 ?x2277 ?x2278 ?x2279 ?x796 ?x887 ?x902 ?x2280 ?x1053 ?x2281 ?x935 ?x2282 ?x946 ?x2283 ?x2284 ?x2285 ?x1049 ?x2286 ?x1051 ?x1295 ?x2287)))
 (let (($x116 (= (+ x y ?x90 ?x97) 0)))
 (let (($x2355 (and $x116 (or (not (= ?x1157 0)) (not (= ?x3217 0))))))
 (let ((?x864 (* ?x108 ?x108)))
 (let ((?x943 (* y00 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1942 (* x00 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1741 (* ?x108 ?x118)))
 (let ((?x854 (+ ?x1741 (* (- 1) (* x00 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)) ?x1942 (* (- 1) (* ?x108 ?x108 ?x118 ?x118 ?x118)) (* (- 1) (* y00 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)) ?x943 (* (- 1) (* x00 ?x108)) (* (- 1) (* y00 ?x108)) ?x1193 ?x1300 ?x864 (* (- 1) (* ?x108 ?x118 ?x118 ?x118 ?x118)))))
 (let ((?x915 (* ?x1381 ?x1381)))
 (let ((?x970 (* y00 ?x152 ?x152 ?x152 ?x1381)))
 (let ((?x936 (* x00 ?x152 ?x152 ?x152 ?x1381)))
 (let ((?x2151 (* ?x152 ?x1381)))
 (let ((?x1001 (+ ?x2151 (* (- 1) (* x00 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)) ?x936 (* (- 1) (* ?x152 ?x152 ?x152 ?x1381 ?x1381)) (* (- 1) (* y00 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)) ?x970 (* (- 1) (* x00 ?x1381)) (* (- 1) (* y00 ?x1381)) ?x887 ?x902 ?x915 (* (- 1) (* ?x152 ?x152 ?x152 ?x152 ?x1381)))))
 (let (($x1633 (= (+ x ?x90 ?x97 y) 0)))
 (let (($x2142 (and $x1633 (or (not (= ?x1001 0)) (not (= ?x854 0))))))
 (rewrite (= $x2142 $x2355)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2081 (exists ((x Int) (y Int) )(! (let ((?x118 (+ 1 y)))
 (let ((?x108 (+ (- 1) x)))
 (let ((?x877 (* ?x108 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x1300 (* ?x108 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1315 (* (- 1) ?x1300)))
 (let ((?x1193 (* ?x108 ?x108 ?x108 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x1309 (* (- 1) ?x1193)))
 (let ((?x964 (* y00 ?x108)))
 (let ((?x833 (* x00 ?x108)))
 (let ((?x809 (* y00 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x2150 (* ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x2023 (* x00 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1002 (+ (* (- 1) (* ?x108 ?x118)) ?x2023 (* (- 1) (* x00 ?x108 ?x118 ?x118 ?x118)) ?x2150 ?x809 (* (- 1) (* y00 ?x108 ?x118 ?x118 ?x118)) ?x833 ?x964 ?x1309 ?x1315 (* (- 1) (* ?x108 ?x108)) ?x877)))
 (let ((?x1381 (+ 1 x)))
 (let ((?x152 (+ (- 1) y)))
 (let ((?x1040 (* ?x152 ?x152 ?x152 ?x152 ?x1381)))
 (let ((?x872 (* y00 ?x1381)))
 (let ((?x987 (* x00 ?x1381)))
 (let ((?x959 (* y00 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)))
 (let ((?x950 (* ?x152 ?x152 ?x152 ?x1381 ?x1381)))
 (let ((?x812 (* x00 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)))
 (let ((?x1058 (+ (* (- 1) (* ?x152 ?x1381)) ?x812 (* (- 1) (* x00 ?x152 ?x152 ?x152 ?x1381)) ?x950 ?x959 (* (- 1) (* y00 ?x152 ?x152 ?x152 ?x1381)) ?x987 ?x872 (* (- 1) (* ?x152 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)) (* (- 1) (* ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381 ?x1381)) (* (- 1) (* ?x1381 ?x1381)) ?x1040)))
 (let (($x1633 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x1633 (or (not (= ?x1058 0)) (not (= ?x1002 0))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x977 (lambda ((x Int) (y Int) )(let ((?x118 (+ 1 y)))
 (let ((?x108 (+ (- 1) x)))
 (let ((?x877 (* ?x108 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x864 (* ?x108 ?x108)))
 (let ((?x1300 (* ?x108 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1193 (* ?x108 ?x108 ?x108 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x943 (* y00 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1942 (* x00 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1741 (* ?x108 ?x118)))
 (let ((?x854 (+ ?x1741 (* (- 1) (* x00 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)) ?x1942 (* (- 1) (* ?x108 ?x108 ?x118 ?x118 ?x118)) (* (- 1) (* y00 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)) ?x943 (* (- 1) (* x00 ?x108)) (* (- 1) (* y00 ?x108)) ?x1193 ?x1300 ?x864 (* (- 1) ?x877))))
 (let ((?x1381 (+ 1 x)))
 (let ((?x152 (+ (- 1) y)))
 (let ((?x1040 (* ?x152 ?x152 ?x152 ?x152 ?x1381)))
 (let ((?x915 (* ?x1381 ?x1381)))
 (let ((?x902 (* ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381 ?x1381)))
 (let ((?x887 (* ?x152 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)))
 (let ((?x970 (* y00 ?x152 ?x152 ?x152 ?x1381)))
 (let ((?x936 (* x00 ?x152 ?x152 ?x152 ?x1381)))
 (let ((?x2151 (* ?x152 ?x1381)))
 (let ((?x1001 (+ ?x2151 (* (- 1) (* x00 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)) ?x936 (* (- 1) (* ?x152 ?x152 ?x152 ?x1381 ?x1381)) (* (- 1) (* y00 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)) ?x970 (* (- 1) (* x00 ?x1381)) (* (- 1) (* y00 ?x1381)) ?x887 ?x902 ?x915 (* (- 1) ?x1040))))
 (let (($x1633 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x2142 (and $x1633 (or (not (= ?x1001 0)) (not (= ?x854 0))))))
 (let ((?x1315 (* (- 1) ?x1300)))
 (let ((?x1309 (* (- 1) ?x1193)))
 (let ((?x964 (* y00 ?x108)))
 (let ((?x833 (* x00 ?x108)))
 (let ((?x809 (* y00 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x2150 (* ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x2023 (* x00 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1002 (+ (* (- 1) ?x1741) ?x2023 (* (- 1) ?x1942) ?x2150 ?x809 (* (- 1) ?x943) ?x833 ?x964 ?x1309 ?x1315 (* (- 1) ?x864) ?x877)))
 (let ((?x872 (* y00 ?x1381)))
 (let ((?x987 (* x00 ?x1381)))
 (let ((?x959 (* y00 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)))
 (let ((?x950 (* ?x152 ?x152 ?x152 ?x1381 ?x1381)))
 (let ((?x812 (* x00 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)))
 (let ((?x1058 (+ (* (- 1) ?x2151) ?x812 (* (- 1) ?x936) ?x950 ?x959 (* (- 1) ?x970) ?x987 ?x872 (* (- 1) ?x887) (* (- 1) ?x902) (* (- 1) ?x915) ?x1040)))
 (let (($x2148 (and $x1633 (or (not (= ?x1058 0)) (not (= ?x1002 0))))))
 (rewrite (= $x2148 $x2142))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x87 (exists ((x Int) (y Int) )(! (let ((?x61 (- y 1)))
 (let ((?x60 (+ x 1)))
 (let ((?x64 (+ (* (- 1) ?x60 ?x61) (* ?x60 ?x60 ?x60 x00 ?x61 ?x61 ?x61))))
 (let ((?x69 (+ (- ?x64 (* ?x60 x00 ?x61 ?x61 ?x61)) (* ?x60 ?x60 ?x61 ?x61 ?x61) (* ?x60 ?x60 ?x60 ?x61 ?x61 ?x61 y00))))
 (let ((?x74 (+ (- ?x69 (* ?x60 ?x61 ?x61 ?x61 y00)) (* ?x60 x00) (* ?x60 y00))))
 (let ((?x79 (- (- ?x74 (* ?x60 ?x60 ?x60 ?x61 ?x61 ?x61 ?x61)) (* ?x60 ?x60 ?x60 ?x60 ?x61 ?x61 ?x61))))
 (let (($x84 (not (= (+ (- ?x79 (* ?x60 ?x60)) (* ?x60 ?x61 ?x61 ?x61 ?x61)) 0))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x39 (+ (* (- 1) ?x35 ?x36) (* ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x44 (+ (- ?x39 (* ?x35 x00 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 y00))))
 (let ((?x49 (+ (- ?x44 (* ?x35 ?x36 ?x36 ?x36 y00)) (* ?x35 x00) (* ?x35 y00))))
 (let ((?x54 (- (- ?x49 (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let (($x59 (not (= (+ (- ?x54 (* ?x35 ?x35)) (* ?x35 ?x36 ?x36 ?x36 ?x36)) 0))))
 (and (= (+ (- (- x y00) x00) y) 0) (or $x59 $x84)))))))))))))))) :qid k!27))
 ))
 (let ((?x1045 (lambda ((x Int) (y Int) )(let ((?x118 (+ 1 y)))
 (let ((?x108 (+ (- 1) x)))
 (let ((?x877 (* ?x108 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x1300 (* ?x108 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1315 (* (- 1) ?x1300)))
 (let ((?x1193 (* ?x108 ?x108 ?x108 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x1309 (* (- 1) ?x1193)))
 (let ((?x964 (* y00 ?x108)))
 (let ((?x833 (* x00 ?x108)))
 (let ((?x809 (* y00 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x2150 (* ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x2023 (* x00 ?x108 ?x108 ?x108 ?x118 ?x118 ?x118)))
 (let ((?x1002 (+ (* (- 1) (* ?x108 ?x118)) ?x2023 (* (- 1) (* x00 ?x108 ?x118 ?x118 ?x118)) ?x2150 ?x809 (* (- 1) (* y00 ?x108 ?x118 ?x118 ?x118)) ?x833 ?x964 ?x1309 ?x1315 (* (- 1) (* ?x108 ?x108)) ?x877)))
 (let ((?x1381 (+ 1 x)))
 (let ((?x152 (+ (- 1) y)))
 (let ((?x1040 (* ?x152 ?x152 ?x152 ?x152 ?x1381)))
 (let ((?x872 (* y00 ?x1381)))
 (let ((?x987 (* x00 ?x1381)))
 (let ((?x959 (* y00 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)))
 (let ((?x950 (* ?x152 ?x152 ?x152 ?x1381 ?x1381)))
 (let ((?x812 (* x00 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)))
 (let ((?x1058 (+ (* (- 1) (* ?x152 ?x1381)) ?x812 (* (- 1) (* x00 ?x152 ?x152 ?x152 ?x1381)) ?x950 ?x959 (* (- 1) (* y00 ?x152 ?x152 ?x152 ?x1381)) ?x987 ?x872 (* (- 1) (* ?x152 ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381)) (* (- 1) (* ?x152 ?x152 ?x152 ?x1381 ?x1381 ?x1381 ?x1381)) (* (- 1) (* ?x1381 ?x1381)) ?x1040)))
 (let (($x1633 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x2148 (and $x1633 (or (not (= ?x1058 0)) (not (= ?x1002 0))))))
 (let ((?x61 (- y 1)))
 (let ((?x60 (+ x 1)))
 (let ((?x64 (+ (* (- 1) ?x60 ?x61) (* ?x60 ?x60 ?x60 x00 ?x61 ?x61 ?x61))))
 (let ((?x69 (+ (- ?x64 (* ?x60 x00 ?x61 ?x61 ?x61)) (* ?x60 ?x60 ?x61 ?x61 ?x61) (* ?x60 ?x60 ?x60 ?x61 ?x61 ?x61 y00))))
 (let ((?x74 (+ (- ?x69 (* ?x60 ?x61 ?x61 ?x61 y00)) (* ?x60 x00) (* ?x60 y00))))
 (let ((?x79 (- (- ?x74 (* ?x60 ?x60 ?x60 ?x61 ?x61 ?x61 ?x61)) (* ?x60 ?x60 ?x60 ?x60 ?x61 ?x61 ?x61))))
 (let (($x84 (not (= (+ (- ?x79 (* ?x60 ?x60)) (* ?x60 ?x61 ?x61 ?x61 ?x61)) 0))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x39 (+ (* (- 1) ?x35 ?x36) (* ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x44 (+ (- ?x39 (* ?x35 x00 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 y00))))
 (let ((?x49 (+ (- ?x44 (* ?x35 ?x36 ?x36 ?x36 y00)) (* ?x35 x00) (* ?x35 y00))))
 (let ((?x54 (- (- ?x49 (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let (($x59 (not (= (+ (- ?x54 (* ?x35 ?x35)) (* ?x35 ?x36 ?x36 ?x36 ?x36)) 0))))
 (let (($x86 (and (= (+ (- (- x y00) x00) y) 0) (or $x59 $x84))))
 (rewrite (= $x86 $x2148))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x88 (asserted $x87)))
 (let ((@x875 (mp (mp @x88 (quant-intro (proof-bind ?x1045) (= $x87 $x2081)) $x2081) (rewrite (= $x2081 $x2081)) $x2081)))
 (let ((@x1835 (mp (mp @x875 (quant-intro (proof-bind ?x977) (= $x2081 $x1769)) $x1769) (quant-intro (proof-bind ?x349) (= $x1769 $x333)) $x333)))
 (let ((@x1782 (mp (mp~ @x1835 (sk (~ $x333 $x3036)) $x3036) (rewrite (= $x3036 $x3129)) $x3129)))
 (let ((@x1874 (and-elim @x1782 $x3039)))
 (let ((@x1192 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3039) $x1136)) @x1874 $x1136)))
 (let (($x163 (>= ?x1578 0)))
 (let ((@x2968 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3039) $x163)) @x1874 $x163)))
 (let (($x3157 (not (<= ?x436 0))))
 (let (($x2438 (>= ?x436 0)))
 (let ((@x243 (lemma ((_ th-lemma arith) (hypothesis (not $x2438)) @x2968 @x1192 @x2968 @x1192 false) $x2438)))
 (let (($x1761 (>= ?x469 0)))
 (let ((@x3035 (lemma ((_ th-lemma arith) (hypothesis (not $x1761)) @x2968 @x1192 @x2968 @x1192 false) $x1761)))
 (let (($x2329 (<= ?x469 0)))
 (let ((@x1903 (lemma ((_ th-lemma arith) (hypothesis (not $x2329)) @x2968 @x1192 @x2968 @x1192 false) $x2329)))
 (let ((@x3040 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1848 (not $x2329) (not $x1761))) @x1903 @x3035 $x1848)))
 (let ((@x3127 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3051 $x3157 (not $x2438))) (unit-resolution (and-elim @x1782 $x3052) @x3040 $x1067) @x243 $x3157)))
 ((_ th-lemma arith) @x3127 @x2968 @x1192 @x2968 @x1192 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        22
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-grobner             4
 :arith-max-min             721
 :arith-nonlinear-bounds    15
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-pivots              3
 :arith-row-summations      2
 :arith-tableau-max-columns 60
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                4.07
 :memory                    3.48
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1965073
 :num-checks                1
 :propagations              14
 :rlimit-count              14894
 :time                      0.02
 :total-time                0.02)
