unsat
((set-logic NIA)
(declare-fun y!0 () Int)
(declare-fun x!1 () Int)
(proof
(let ((?x700 (+ y00 x00 (* (- 1) x!1) (* (- 1) y!0))))
 (let (($x814 (<= ?x700 0)))
 (let (($x1624 (= ?x700 0)))
 (let ((?x2192 (+ 1 y!0)))
 (let ((?x2186 (+ (- 1) x!1)))
 (let ((?x2217 (* ?x2186 ?x2186 ?x2186 ?x2186 ?x2192 ?x2192 ?x2192)))
 (let ((?x2215 (* x!1 x!1 x!1 y!0 y!0)))
 (let ((?x2214 (* x!1 x!1 y!0 y!0)))
 (let ((?x2213 (* ?x2186 ?x2186 ?x2186 ?x2192 ?x2192 ?x2192 ?x2192)))
 (let ((?x2212 (* x!1 x!1 y!0 y!0 y!0)))
 (let ((?x2190 (* (- 7) (* x!1 x!1 y!0))))
 (let ((?x2183 (* (- 2) (* x!1 y!0 y!0 y!0))))
 (let ((?x2211 (* (- 1) (* x!1 x!1))))
 (let ((?x2197 (* x!1 x!1 x!1 x!1)))
 (let ((?x2219 (* 4 (* x!1 x!1 x!1 y!0))))
 (let ((?x2216 (* (- 1) (* x!1 x!1 x!1))))
 (let ((?x516 (* (- 6) (* x!1 y!0 y!0))))
 (let ((?x2185 (* y!0 y!0)))
 (let ((?x719 (+ y00 x00 (* y00 y!0 y!0 y!0) (* (- 3) (* x00 x!1 x!1 x!1 y!0 y!0)) (* x00 y!0 y!0 y!0) (* (- 3) (* x00 x!1 y!0 y!0 y!0)) (* (- 7) (* x00 x!1 y!0 y!0)) (* 6 (* y00 x!1 x!1 y!0)) (* 6 (* x00 x!1 x!1 y!0)) (* 2 (* y00 y!0)) (* 8 (* y00 x!1 x!1 y!0 y!0)) (* 3 (* x00 x!1 x!1 y!0 y!0 y!0)) (* (- 1) (* x00 x!1 x!1 x!1 y!0 y!0 y!0)) (* (- 2) (* y00 x!1 x!1 x!1)) (* (- 3) (* y00 x!1 x!1 x!1 y!0)) (* (- 3) (* x00 x!1 x!1 x!1 y!0)) (* (- 1) (* y00 x!1 x!1 x!1 y!0 y!0 y!0)) (* (- 3) (* y00 x!1 x!1 x!1 y!0 y!0)) (* 3 (* y00 x!1 x!1 y!0 y!0 y!0)) (* (- 3) (* y00 x!1 y!0)) (* 8 (* x00 x!1 x!1 y!0 y!0)) (* (- 2) (* y00 x!1)) (* 3 (* y00 y!0 y!0)) (* (- 2) (* x00 x!1)) (* 4 (* y00 x!1 x!1)) (* 4 (* x00 x!1 x!1)) (* (- 2) (* x00 x!1 x!1 x!1)) (* (- 7) (* y00 x!1 y!0 y!0)) (* (- 3) (* y00 x!1 y!0 y!0 y!0)) (* 2 (* x00 y!0)) (* (- 3) (* x00 x!1 y!0)) (* 3 (* x00 y!0 y!0)) ?x2185 ?x516 ?x2216 ?x2219 ?x2197 ?x2211 ?x2183 ?x2190 ?x2212 ?x2213 ?x2214 ?x2215 ?x2217)))
 (let (($x723 (= ?x719 0)))
 (let (($x986 (not $x723)))
 (let (($x1318 (and $x1624 $x986)))
 (let ((?x422 (+ y00 x00 (* 2 (* y!0 y00)) (* (- 3) (* x!1 y!0 y00)) (* 6 (* x!1 x!1 y!0 y00)) (* (- 2) (* x!1 y00)) (* 4 (* x!1 x!1 y00)) (* (- 2) (* x!1 x00)) (* 4 (* x!1 x!1 x00)) (* (- 2) (* x!1 x!1 x!1 x00)) (* 3 (* y!0 y!0 y00)) (* (- 7) (* x!1 y!0 y!0 y00)) (* 8 (* x!1 x!1 y!0 y!0 y00)) (* 2 (* y!0 x00)) (* (- 3) (* x!1 y!0 x00)) (* 6 (* x!1 x!1 y!0 x00)) (* (- 3) (* x!1 x!1 x!1 y!0 x00)) (* 3 (* y!0 y!0 x00)) (* (- 7) (* x!1 y!0 y!0 x00)) (* 8 (* x!1 x!1 y!0 y!0 x00)) (* (- 3) (* x!1 x!1 x!1 y!0 y!0 x00)) (* y!0 y!0 y!0 x00) (* (- 3) (* x!1 y!0 y!0 y!0 x00)) (* 3 (* x!1 x!1 y!0 y!0 y!0 x00)) (* (- 1) (* x!1 x!1 x!1 y!0 y!0 y!0 x00)) (* (- 2) (* x!1 x!1 x!1 y00)) ?x2185 ?x2183 ?x2212 ?x2211 ?x2190 ?x516 ?x2214 ?x2213 ?x2215 ?x2216 ?x2219 ?x2217 ?x2197 (* y!0 y!0 y!0 y00) (* (- 3) (* x!1 y!0 y!0 y!0 y00)) (* 3 (* x!1 x!1 y!0 y!0 y!0 y00)) (* (- 1) (* x!1 x!1 x!1 y!0 y!0 y!0 y00)) (* (- 3) (* x!1 x!1 x!1 y!0 y00)) (* (- 3) (* x!1 x!1 x!1 y!0 y!0 y00)))))
 (let (($x2194 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (not (= ?x422 0)))))
 (let (($x633 (exists ((x Int) (y Int) )(! (let ((?x1713 (* y y y y00)))
 (let ((?x1364 (* x x x x)))
 (let ((?x100 (+ 1 y)))
 (let ((?x92 (+ (- 1) x)))
 (let ((?x1081 (* ?x92 ?x92 ?x92 ?x92 ?x100 ?x100 ?x100)))
 (let ((?x1036 (* x x x y y)))
 (let ((?x974 (* ?x92 ?x92 ?x92 ?x100 ?x100 ?x100 ?x100)))
 (let ((?x843 (* x x y y)))
 (let ((?x808 (* x x y y y)))
 (let ((?x795 (* y y)))
 (let ((?x584 (* y y y x00)))
 (let ((?x314 (+ y00 x00 (* 2 (* y y00)) (* (- 3) (* x y y00)) (* 6 (* x x y y00)) (* (- 2) (* x y00)) (* 4 (* x x y00)) (* (- 2) (* x x00)) (* 4 (* x x x00)) (* (- 2) (* x x x x00)) (* 3 (* y y y00)) (* (- 7) (* x y y y00)) (* 8 (* x x y y y00)) (* 2 (* y x00)) (* (- 3) (* x y x00)) (* 6 (* x x y x00)) (* (- 3) (* x x x y x00)) (* 3 (* y y x00)) (* (- 7) (* x y y x00)) (* 8 (* x x y y x00)) (* (- 3) (* x x x y y x00)) ?x584 (* (- 3) (* x y y y x00)) (* 3 (* x x y y y x00)) (* (- 1) (* x x x y y y x00)) (* (- 2) (* x x x y00)) ?x795 (* (- 2) (* x y y y)) ?x808 (* (- 1) (* x x)) (* (- 7) (* x x y)) (* (- 6) (* x y y)) ?x843 ?x974 ?x1036 (* (- 1) (* x x x)) (* 4 (* x x x y)) ?x1081 ?x1364 ?x1713 (* (- 3) (* x y y y y00)) (* 3 (* x x y y y y00)) (* (- 1) (* x x x y y y y00)) (* (- 3) (* x x x y y00)) (* (- 3) (* x x x y y y00)))))
 (let (($x102 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x102 (not (= ?x314 0)))))))))))))))) :qid k!26))
 ))
 (let (($x1788 (exists ((x Int) (y Int) )(! (let ((?x1782 (* x x x y y y00)))
 (let ((?x1842 (* 3 ?x1782)))
 (let ((?x1756 (* x x x y y00)))
 (let ((?x1838 (* 3 ?x1756)))
 (let ((?x1727 (* x x x y y y y00)))
 (let ((?x1725 (* x x y y y y00)))
 (let ((?x1844 (* (- 3) ?x1725)))
 (let ((?x1713 (* y y y y00)))
 (let ((?x1714 (* (- 1) ?x1713)))
 (let ((?x1364 (* x x x x)))
 (let ((?x1419 (* (- 1) ?x1364)))
 (let ((?x100 (+ 1 y)))
 (let ((?x92 (+ (- 1) x)))
 (let ((?x1081 (* ?x92 ?x92 ?x92 ?x92 ?x100 ?x100 ?x100)))
 (let ((?x979 (* (- 1) ?x1081)))
 (let ((?x1069 (* x x x y)))
 (let ((?x2084 (* (- 4) ?x1069)))
 (let ((?x1051 (* x x x)))
 (let ((?x1036 (* x x x y y)))
 (let ((?x1151 (* (- 1) ?x1036)))
 (let ((?x974 (* ?x92 ?x92 ?x92 ?x100 ?x100 ?x100 ?x100)))
 (let ((?x1090 (* (- 1) ?x974)))
 (let ((?x843 (* x x y y)))
 (let ((?x1038 (* (- 1) ?x843)))
 (let ((?x839 (* x y y)))
 (let ((?x956 (* 6 ?x839)))
 (let ((?x828 (* x x y)))
 (let ((?x2083 (* 7 ?x828)))
 (let ((?x819 (* x x)))
 (let ((?x808 (* x x y y y)))
 (let ((?x905 (* (- 1) ?x808)))
 (let ((?x806 (* x y y y)))
 (let ((?x936 (* 2 ?x806)))
 (let ((?x795 (* y y)))
 (let ((?x796 (* (- 1) ?x795)))
 (let ((?x768 (* (- 1) (* y 1))))
 (let ((?x702 (* x x x y00)))
 (let ((?x1947 (* 2 ?x702)))
 (let ((?x613 (* x x x y y y x00)))
 (let ((?x599 (* x x y y y x00)))
 (let ((?x632 (* (- 3) ?x599)))
 (let ((?x584 (* y y y x00)))
 (let ((?x587 (* (- 1) ?x584)))
 (let ((?x505 (* x x x y y x00)))
 (let ((?x630 (* 3 ?x505)))
 (let ((?x470 (* y y x00)))
 (let ((?x627 (* (- 3) ?x470)))
 (let ((?x437 (* x x x y x00)))
 (let ((?x626 (* 3 ?x437)))
 (let ((?x402 (* y x00)))
 (let ((?x740 (* (- 2) ?x402)))
 (let ((?x215 (* y y y00)))
 (let ((?x1839 (* (- 3) ?x215)))
 (let ((?x168 (* x x x x00)))
 (let ((?x739 (* 2 ?x168)))
 (let ((?x162 (* x x00)))
 (let ((?x187 (* 2 ?x162)))
 (let ((?x130 (* x y00)))
 (let ((?x721 (* 2 ?x130)))
 (let ((?x116 (* y y00)))
 (let ((?x1536 (* (- 2) ?x116)))
 (let ((?x83 (* (- 1) x00)))
 (let ((?x76 (* (- 1) y00)))
 (let ((?x2296 (+ y ?x76 ?x83 ?x1536 (* 3 (* x y y00)) (* (- 6) (* x x y y00)) ?x721 (* (- 4) (* x x y00)) ?x187 (* (- 4) (* x x x00)) ?x739 ?x1839 (* 7 (* x y y y00)) (* (- 8) (* x x y y y00)) ?x740 (* 3 (* x y x00)) (* (- 6) (* x x y x00)) ?x626 ?x627 (* 7 (* x y y x00)) (* (- 8) (* x x y y x00)) ?x630 ?x587 (* 3 (* x y y y x00)) ?x632 ?x613 ?x1947 ?x768 ?x796 ?x936 ?x905 ?x819 ?x2083 ?x956 ?x1038 ?x1090 ?x1151 ?x1051 ?x2084 ?x979 ?x1419 ?x1714 (* 3 (* x y y y y00)) ?x1844 ?x1727 ?x1838 ?x1842)))
 (let (($x102 (= (+ x y ?x76 ?x83) 0)))
 (and $x102 (not (= ?x2296 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x622 (lambda ((x Int) (y Int) )(let ((?x1713 (* y y y y00)))
 (let ((?x1364 (* x x x x)))
 (let ((?x100 (+ 1 y)))
 (let ((?x92 (+ (- 1) x)))
 (let ((?x1081 (* ?x92 ?x92 ?x92 ?x92 ?x100 ?x100 ?x100)))
 (let ((?x1036 (* x x x y y)))
 (let ((?x974 (* ?x92 ?x92 ?x92 ?x100 ?x100 ?x100 ?x100)))
 (let ((?x843 (* x x y y)))
 (let ((?x808 (* x x y y y)))
 (let ((?x795 (* y y)))
 (let ((?x584 (* y y y x00)))
 (let ((?x314 (+ y00 x00 (* 2 (* y y00)) (* (- 3) (* x y y00)) (* 6 (* x x y y00)) (* (- 2) (* x y00)) (* 4 (* x x y00)) (* (- 2) (* x x00)) (* 4 (* x x x00)) (* (- 2) (* x x x x00)) (* 3 (* y y y00)) (* (- 7) (* x y y y00)) (* 8 (* x x y y y00)) (* 2 (* y x00)) (* (- 3) (* x y x00)) (* 6 (* x x y x00)) (* (- 3) (* x x x y x00)) (* 3 (* y y x00)) (* (- 7) (* x y y x00)) (* 8 (* x x y y x00)) (* (- 3) (* x x x y y x00)) ?x584 (* (- 3) (* x y y y x00)) (* 3 (* x x y y y x00)) (* (- 1) (* x x x y y y x00)) (* (- 2) (* x x x y00)) ?x795 (* (- 2) (* x y y y)) ?x808 (* (- 1) (* x x)) (* (- 7) (* x x y)) (* (- 6) (* x y y)) ?x843 ?x974 ?x1036 (* (- 1) (* x x x)) (* 4 (* x x x y)) ?x1081 ?x1364 ?x1713 (* (- 3) (* x y y y y00)) (* 3 (* x x y y y y00)) (* (- 1) (* x x x y y y y00)) (* (- 3) (* x x x y y00)) (* (- 3) (* x x x y y y00)))))
 (let (($x102 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x1634 (and $x102 (not (= ?x314 0)))))
 (let ((?x1782 (* x x x y y y00)))
 (let ((?x1842 (* 3 ?x1782)))
 (let ((?x1756 (* x x x y y00)))
 (let ((?x1838 (* 3 ?x1756)))
 (let ((?x1727 (* x x x y y y y00)))
 (let ((?x1725 (* x x y y y y00)))
 (let ((?x1844 (* (- 3) ?x1725)))
 (let ((?x1714 (* (- 1) ?x1713)))
 (let ((?x1419 (* (- 1) ?x1364)))
 (let ((?x979 (* (- 1) ?x1081)))
 (let ((?x1069 (* x x x y)))
 (let ((?x2084 (* (- 4) ?x1069)))
 (let ((?x1051 (* x x x)))
 (let ((?x1151 (* (- 1) ?x1036)))
 (let ((?x1090 (* (- 1) ?x974)))
 (let ((?x1038 (* (- 1) ?x843)))
 (let ((?x839 (* x y y)))
 (let ((?x956 (* 6 ?x839)))
 (let ((?x828 (* x x y)))
 (let ((?x2083 (* 7 ?x828)))
 (let ((?x819 (* x x)))
 (let ((?x905 (* (- 1) ?x808)))
 (let ((?x806 (* x y y y)))
 (let ((?x936 (* 2 ?x806)))
 (let ((?x796 (* (- 1) ?x795)))
 (let ((?x768 (* (- 1) (* y 1))))
 (let ((?x702 (* x x x y00)))
 (let ((?x1947 (* 2 ?x702)))
 (let ((?x613 (* x x x y y y x00)))
 (let ((?x599 (* x x y y y x00)))
 (let ((?x632 (* (- 3) ?x599)))
 (let ((?x587 (* (- 1) ?x584)))
 (let ((?x505 (* x x x y y x00)))
 (let ((?x630 (* 3 ?x505)))
 (let ((?x470 (* y y x00)))
 (let ((?x627 (* (- 3) ?x470)))
 (let ((?x437 (* x x x y x00)))
 (let ((?x626 (* 3 ?x437)))
 (let ((?x402 (* y x00)))
 (let ((?x740 (* (- 2) ?x402)))
 (let ((?x215 (* y y y00)))
 (let ((?x1839 (* (- 3) ?x215)))
 (let ((?x168 (* x x x x00)))
 (let ((?x739 (* 2 ?x168)))
 (let ((?x162 (* x x00)))
 (let ((?x187 (* 2 ?x162)))
 (let ((?x130 (* x y00)))
 (let ((?x721 (* 2 ?x130)))
 (let ((?x116 (* y y00)))
 (let ((?x1536 (* (- 2) ?x116)))
 (let ((?x83 (* (- 1) x00)))
 (let ((?x76 (* (- 1) y00)))
 (let ((?x2296 (+ y ?x76 ?x83 ?x1536 (* 3 (* x y y00)) (* (- 6) (* x x y y00)) ?x721 (* (- 4) (* x x y00)) ?x187 (* (- 4) (* x x x00)) ?x739 ?x1839 (* 7 (* x y y y00)) (* (- 8) (* x x y y y00)) ?x740 (* 3 (* x y x00)) (* (- 6) (* x x y x00)) ?x626 ?x627 (* 7 (* x y y x00)) (* (- 8) (* x x y y x00)) ?x630 ?x587 (* 3 (* x y y y x00)) ?x632 ?x613 ?x1947 ?x768 ?x796 ?x936 ?x905 ?x819 ?x2083 ?x956 ?x1038 ?x1090 ?x1151 ?x1051 ?x2084 ?x979 ?x1419 ?x1714 (* 3 (* x y y y y00)) ?x1844 ?x1727 ?x1838 ?x1842)))
 (let (($x2302 (and $x102 (not (= ?x2296 0)))))
 (rewrite (= $x2302 $x1634)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1642 (exists ((x Int) (y Int) )(! (let ((?x1920 (* (- 2) (* (+ (- 1) x) (+ (- 1) x) (+ (- 1) x) (+ 1 y)))))
 (let ((?x100 (+ 1 y)))
 (let ((?x92 (+ (- 1) x)))
 (let ((?x1081 (* ?x92 ?x92 ?x92 ?x92 ?x100 ?x100 ?x100)))
 (let ((?x979 (* (- 1) ?x1081)))
 (let ((?x974 (* ?x92 ?x92 ?x92 ?x100 ?x100 ?x100 ?x100)))
 (let ((?x1090 (* (- 1) ?x974)))
 (let ((?x995 (+ (* y00 ?x92 ?x92 ?x100) (* x00 ?x92 ?x92 ?x92) (* y00 ?x92 ?x92 ?x100 ?x100) (* x00 ?x92 ?x92 ?x92 ?x100 ?x100 ?x100) (* x00 ?x92 ?x92 ?x100) (* y00 ?x92 ?x92 ?x92) (* (- 1) (* ?x92 ?x92 ?x100 ?x100 ?x100)) ?x1090 ?x979 (* (- 1) (* ?x92 ?x92 ?x92 ?x100 ?x100)) (* (- 1) (* ?x92 ?x92 ?x100 ?x100)) (* ?x92 ?x100 ?x100) (* (- 1) (* ?x92 ?x92 ?x92 ?x92)) (* ?x100 ?x100 ?x100) (* (- 1) (* y00 ?x100 ?x100)) (* (- 1) (* x00 ?x100 ?x100)) (* y00 ?x92 ?x92 ?x92 ?x100 ?x100 ?x100) (* x00 ?x92 ?x92 ?x100 ?x100) ?x1920)))
 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (not (= ?x995 0))))))))))) :qid k!26))
 ))
 (let ((?x1639 (lambda ((x Int) (y Int) )(let ((?x1782 (* x x x y y y00)))
 (let ((?x1842 (* 3 ?x1782)))
 (let ((?x1756 (* x x x y y00)))
 (let ((?x1838 (* 3 ?x1756)))
 (let ((?x1727 (* x x x y y y y00)))
 (let ((?x1725 (* x x y y y y00)))
 (let ((?x1844 (* (- 3) ?x1725)))
 (let ((?x1713 (* y y y y00)))
 (let ((?x1714 (* (- 1) ?x1713)))
 (let ((?x1364 (* x x x x)))
 (let ((?x1419 (* (- 1) ?x1364)))
 (let ((?x100 (+ 1 y)))
 (let ((?x92 (+ (- 1) x)))
 (let ((?x1081 (* ?x92 ?x92 ?x92 ?x92 ?x100 ?x100 ?x100)))
 (let ((?x979 (* (- 1) ?x1081)))
 (let ((?x1069 (* x x x y)))
 (let ((?x2084 (* (- 4) ?x1069)))
 (let ((?x1051 (* x x x)))
 (let ((?x1036 (* x x x y y)))
 (let ((?x1151 (* (- 1) ?x1036)))
 (let ((?x974 (* ?x92 ?x92 ?x92 ?x100 ?x100 ?x100 ?x100)))
 (let ((?x1090 (* (- 1) ?x974)))
 (let ((?x843 (* x x y y)))
 (let ((?x1038 (* (- 1) ?x843)))
 (let ((?x839 (* x y y)))
 (let ((?x956 (* 6 ?x839)))
 (let ((?x828 (* x x y)))
 (let ((?x2083 (* 7 ?x828)))
 (let ((?x819 (* x x)))
 (let ((?x808 (* x x y y y)))
 (let ((?x905 (* (- 1) ?x808)))
 (let ((?x806 (* x y y y)))
 (let ((?x936 (* 2 ?x806)))
 (let ((?x795 (* y y)))
 (let ((?x796 (* (- 1) ?x795)))
 (let ((?x768 (* (- 1) (* y 1))))
 (let ((?x702 (* x x x y00)))
 (let ((?x1947 (* 2 ?x702)))
 (let ((?x613 (* x x x y y y x00)))
 (let ((?x599 (* x x y y y x00)))
 (let ((?x632 (* (- 3) ?x599)))
 (let ((?x584 (* y y y x00)))
 (let ((?x587 (* (- 1) ?x584)))
 (let ((?x505 (* x x x y y x00)))
 (let ((?x630 (* 3 ?x505)))
 (let ((?x470 (* y y x00)))
 (let ((?x627 (* (- 3) ?x470)))
 (let ((?x437 (* x x x y x00)))
 (let ((?x626 (* 3 ?x437)))
 (let ((?x402 (* y x00)))
 (let ((?x740 (* (- 2) ?x402)))
 (let ((?x215 (* y y y00)))
 (let ((?x1839 (* (- 3) ?x215)))
 (let ((?x168 (* x x x x00)))
 (let ((?x739 (* 2 ?x168)))
 (let ((?x162 (* x x00)))
 (let ((?x187 (* 2 ?x162)))
 (let ((?x130 (* x y00)))
 (let ((?x721 (* 2 ?x130)))
 (let ((?x116 (* y y00)))
 (let ((?x1536 (* (- 2) ?x116)))
 (let ((?x83 (* (- 1) x00)))
 (let ((?x76 (* (- 1) y00)))
 (let ((?x2296 (+ y ?x76 ?x83 ?x1536 (* 3 (* x y y00)) (* (- 6) (* x x y y00)) ?x721 (* (- 4) (* x x y00)) ?x187 (* (- 4) (* x x x00)) ?x739 ?x1839 (* 7 (* x y y y00)) (* (- 8) (* x x y y y00)) ?x740 (* 3 (* x y x00)) (* (- 6) (* x x y x00)) ?x626 ?x627 (* 7 (* x y y x00)) (* (- 8) (* x x y y x00)) ?x630 ?x587 (* 3 (* x y y y x00)) ?x632 ?x613 ?x1947 ?x768 ?x796 ?x936 ?x905 ?x819 ?x2083 ?x956 ?x1038 ?x1090 ?x1151 ?x1051 ?x2084 ?x979 ?x1419 ?x1714 (* 3 (* x y y y y00)) ?x1844 ?x1727 ?x1838 ?x1842)))
 (let (($x102 (= (+ x y ?x76 ?x83) 0)))
 (let (($x2302 (and $x102 (not (= ?x2296 0)))))
 (let ((?x995 (+ (* y00 ?x92 ?x92 ?x100) (* x00 ?x92 ?x92 ?x92) (* y00 ?x92 ?x92 ?x100 ?x100) (* x00 ?x92 ?x92 ?x92 ?x100 ?x100 ?x100) (* x00 ?x92 ?x92 ?x100) (* y00 ?x92 ?x92 ?x92) (* (- 1) (* ?x92 ?x92 ?x100 ?x100 ?x100)) ?x1090 ?x979 (* (- 1) (* ?x92 ?x92 ?x92 ?x100 ?x100)) (* (- 1) (* ?x92 ?x92 ?x100 ?x100)) (* ?x92 ?x100 ?x100) (* (- 1) (* ?x92 ?x92 ?x92 ?x92)) (* ?x100 ?x100 ?x100) (* (- 1) (* y00 ?x100 ?x100)) (* (- 1) (* x00 ?x100 ?x100)) (* y00 ?x92 ?x92 ?x92 ?x100 ?x100 ?x100) (* x00 ?x92 ?x92 ?x100 ?x100) (* (- 2) (* ?x92 ?x92 ?x92 ?x100)))))
 (let (($x1744 (and (= (+ x ?x76 ?x83 y) 0) (not (= ?x995 0)))))
 (rewrite (= $x1744 $x2302)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x73 (exists ((x Int) (y Int) )(! (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x42 (+ (* ?x34 ?x34 ?x35 y00) (* ?x34 ?x34 ?x34 x00) (* ?x34 ?x34 ?x35 ?x35 y00) (* ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35) (* ?x34 ?x34 x00 ?x35) (* ?x34 ?x34 ?x34 y00))))
 (let ((?x49 (- (- ?x42 (* ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x51 (- (- ?x49 (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35))))
 (let ((?x56 (- (+ (- ?x51 (* ?x34 ?x34 ?x35 ?x35)) (* ?x34 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34))))
 (let ((?x62 (- (- (+ ?x56 (* ?x35 ?x35 ?x35)) (* ?x35 ?x35 y00)) (* x00 ?x35 ?x35))))
 (let ((?x65 (+ ?x62 (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 y00) (* ?x34 ?x34 x00 ?x35 ?x35))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= (- ?x65 (* 2 ?x34 ?x34 ?x34 ?x35)) 0)))))))))))) :qid k!26))
 ))
 (let ((?x1748 (lambda ((x Int) (y Int) )(let ((?x1920 (* (- 2) (* (+ (- 1) x) (+ (- 1) x) (+ (- 1) x) (+ 1 y)))))
 (let ((?x100 (+ 1 y)))
 (let ((?x92 (+ (- 1) x)))
 (let ((?x1081 (* ?x92 ?x92 ?x92 ?x92 ?x100 ?x100 ?x100)))
 (let ((?x979 (* (- 1) ?x1081)))
 (let ((?x974 (* ?x92 ?x92 ?x92 ?x100 ?x100 ?x100 ?x100)))
 (let ((?x1090 (* (- 1) ?x974)))
 (let ((?x995 (+ (* y00 ?x92 ?x92 ?x100) (* x00 ?x92 ?x92 ?x92) (* y00 ?x92 ?x92 ?x100 ?x100) (* x00 ?x92 ?x92 ?x92 ?x100 ?x100 ?x100) (* x00 ?x92 ?x92 ?x100) (* y00 ?x92 ?x92 ?x92) (* (- 1) (* ?x92 ?x92 ?x100 ?x100 ?x100)) ?x1090 ?x979 (* (- 1) (* ?x92 ?x92 ?x92 ?x100 ?x100)) (* (- 1) (* ?x92 ?x92 ?x100 ?x100)) (* ?x92 ?x100 ?x100) (* (- 1) (* ?x92 ?x92 ?x92 ?x92)) (* ?x100 ?x100 ?x100) (* (- 1) (* y00 ?x100 ?x100)) (* (- 1) (* x00 ?x100 ?x100)) (* y00 ?x92 ?x92 ?x92 ?x100 ?x100 ?x100) (* x00 ?x92 ?x92 ?x100 ?x100) ?x1920)))
 (let (($x1744 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (not (= ?x995 0)))))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x42 (+ (* ?x34 ?x34 ?x35 y00) (* ?x34 ?x34 ?x34 x00) (* ?x34 ?x34 ?x35 ?x35 y00) (* ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35) (* ?x34 ?x34 x00 ?x35) (* ?x34 ?x34 ?x34 y00))))
 (let ((?x49 (- (- ?x42 (* ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x51 (- (- ?x49 (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35))))
 (let ((?x56 (- (+ (- ?x51 (* ?x34 ?x34 ?x35 ?x35)) (* ?x34 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34))))
 (let ((?x62 (- (- (+ ?x56 (* ?x35 ?x35 ?x35)) (* ?x35 ?x35 y00)) (* x00 ?x35 ?x35))))
 (let ((?x65 (+ ?x62 (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 y00) (* ?x34 ?x34 x00 ?x35 ?x35))))
 (let (($x72 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= (- ?x65 (* 2 ?x34 ?x34 ?x34 ?x35)) 0))))))
 (rewrite (= $x72 $x1744)))))))))))))))))))))
 ))
 (let ((@x74 (asserted $x73)))
 (let ((@x1777 (mp (mp @x74 (quant-intro (proof-bind ?x1748) (= $x73 $x1642)) $x1642) (rewrite (= $x1642 $x1642)) $x1642)))
 (let ((@x1443 (mp (mp @x1777 (quant-intro (proof-bind ?x1639) (= $x1642 $x1788)) $x1788) (quant-intro (proof-bind ?x622) (= $x1788 $x633)) $x633)))
 (let ((@x204 (mp (mp~ @x1443 (sk (~ $x633 $x2194)) $x2194) (rewrite (= $x2194 $x1318)) $x1318)))
 (let ((@x1627 (and-elim @x204 $x1624)))
 (let ((@x713 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1624) $x814)) @x1627 $x814)))
 (let (($x1647 (>= ?x700 0)))
 (let ((@x720 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1624) $x1647)) @x1627 $x1647)))
 (let (($x2198 (not (>= ?x719 0))))
 (let (($x815 (<= ?x719 0)))
 (let ((@x726 (lemma ((_ th-lemma arith) (hypothesis (not $x815)) @x720 @x713 @x720 @x713 false) $x815)))
 (let ((@x1613 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x723 (not $x815) $x2198)) (and-elim @x204 $x986) (or (not $x815) $x2198))))
 ((_ th-lemma arith) (unit-resolution @x1613 @x726 $x2198) @x720 @x713 @x720 @x713 false))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 1
 :arith-assert-diseq        1
 :arith-assert-lower        11
 :arith-assert-upper        3
 :arith-conflicts           2
 :arith-eq-adapter          2
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             384
 :arith-nonlinear-bounds    8
 :arith-nonlinear-horner    8
 :arith-num-rows            4
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              2
 :arith-row-summations      1
 :arith-tableau-max-columns 63
 :arith-tableau-max-rows    4
 :conflicts                 2
 :decisions                 1
 :del-clause                7
 :final-checks              4
 :max-memory                3.90
 :memory                    3.32
 :mk-bool-var               12
 :mk-clause                 7
 :num-allocs                1499077
 :num-checks                1
 :propagations              4
 :rlimit-count              7796
 :time                      0.01
 :total-time                0.02)
