unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x6409 (* r!2 s!1)))
 (let ((?x5917 (* 2 ?x6409)))
 (let ((?x3659 (* 6 x!0)))
 (let ((?x3657 (* (- 3) s!1)))
 (let ((?x3658 (* 3 r!2)))
 (let ((?x532 (* r00 r00 r00)))
 (let ((?x533 (* 12 ?x532)))
 (let ((?x489 (* s00 r00)))
 (let ((?x567 (* (- 6) ?x489)))
 (let ((?x564 (* (- 6) x00)))
 (let ((?x563 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x5247 (+ ?x44 ?x563 ?x564 ?x567 ?x533 ?x3658 ?x3657 ?x3659 ?x5917 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)))))
 (let (($x1113 (<= ?x5247 0)))
 (let (($x1614 (= ?x5247 0)))
 (let ((?x5680 (+ 3 (* 6 r!2) s!1)))
 (let ((?x1412 (* (- 1) s!1)))
 (let ((?x410 (+ ?x1412 x!0)))
 (let ((?x407 (+ 1 r!2)))
 (let ((?x6748 (* ?x407 ?x407 ?x407 ?x410 ?x5680 ?x5680)))
 (let ((?x6646 (* ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680 ?x5680)))
 (let ((?x6613 (* r00 x00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)))
 (let ((?x6602 (* r00 s00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)))
 (let ((?x6498 (* ?x407 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)))
 (let ((?x6459 (* r00 r00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)))
 (let ((?x6252 (* r00 s00 ?x407 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)))
 (let ((?x5890 (* s00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)))
 (let ((?x2863 (* s00 ?x407 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)))
 (let ((?x2469 (* r00 r00 s00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)))
 (let ((?x2056 (* r00 ?x407 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)))
 (let ((?x1477 (* x00 ?x407 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)))
 (let ((?x1238 (* ?x407 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)))
 (let ((?x897 (* r00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)))
 (let ((?x760 (* s00 s00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)))
 (let ((?x710 (* s00 r00 r00)))
 (let ((?x711 (* 6 ?x710)))
 (let ((?x654 (* s00 s00)))
 (let ((?x667 (* (- 4) ?x654)))
 (let ((?x585 (* r00 x00)))
 (let ((?x599 (* (- 18) ?x585)))
 (let ((?x427 (* r00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)))
 (let ((?x1832 (+ (* 12 s00) (* (- 9) r00) (* (- 18) x00) (* (- 18) (* r00 r00)) (* 24 (* s00 r!2 r!2 s!1 x!0)) (* 21 (* s00 r!2 s!1 x!0)) (* 198 (* s00 r!2 r!2 x!0)) (* 6 (* s00 r00 r00 r!2 r!2 s!1 x!0)) (* 6 (* s00 r00 r00 s!1 x!0)) (* 9 ?x427) (* (- 18) (* x00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* (- 6) (* r00 r00 ?x407 ?x407 ?x410 ?x5680 ?x5680)) (* 72 (* r!2 x!0)) (* (- 3) (* r00 r!2 r!2 r!2 s!1)) (* 270 (* r00 r!2 r!2 s!1 s!1)) (* 270 (* x00 r!2 s!1)) (* 3 ?x489) (* 9 (* s00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) ?x599 ?x667 (* (- 378) (* x00 r!2 r!2 r!2 x!0)) (* 18 (* x00 r!2 r!2 r!2 s!1 s!1)) (* (- 108) (* x00 r!2 r!2 r!2 r!2 x!0)) (* (- 486) (* x00 r!2 r!2 x!0)) (* (- 270) (* x00 r!2 x!0)) (* 9 (* s00 r00 r!2 r!2 s!1 s!1)) ?x711 (* (- 36) (* s00 r00 r00 r!2 r!2 r!2 s!1)) (* 2 (* ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680 ?x5680)) (* 4 ?x760) (* 2 (* ?x407 ?x407 ?x407 ?x5680 ?x5680)) (* 54 (* s00 r!2 r!2 r!2 r!2 x!0)) (* 18 (* r00 r!2 r!2 s!1 s!1 s!1)) (* (- 6) (* s00 r00 r00 s!1 s!1)) (* (- 18) (* r00 r00 r!2 s!1)) (* (- 18) ?x897) (* 486 (* x00 r!2 r!2 s!1)) (* 6 (* r00 ?x407 ?x407 ?x407 ?x410 ?x5680 ?x5680)) (* 6 (* r00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* (- 93) (* s00 r!2 s!1)) (* (- 3) (* s00 r00 s!1 s!1)) (* (- 12) (* s00 s00 r!2)) (* (- 54) (* r00 x00 r!2)) (* (- 18) ?x1238) (* 3 (* ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* 216 (* r00 x00 r!2 s!1)) (* (- 72) (* r00 r!2 s!1 s!1 x!0)) (* 18 (* r00 s!1 s!1 s!1)) (* 12 (* s00 r00 r00 r!2 s!1 x!0)) (* 18 ?x1477) (* 18 (* r00 x!0)) (* (- 9) (* s00 r00 s!1)) (* 18 (* s00 r00 r00 x!0)) (* (- 18) (* r00 r00 r!2 r!2 s!1)) (* 6 (* s00 s!1 x!0)) (* (- 21) (* s00 r!2 s!1 s!1)) (* (- 117) r!2) (* (- 432) (* r00 r!2 s!1 x!0)) (* 270 (* r00 r!2 r!2 x!0 x!0)) (* 54 (* r00 x!0 x!0)) (* (- 6) (* s00 r00 r!2 r!2 r!2 s!1 x!0)) (* 36 (* r00 x00 r!2 s!1 s!1)) (* (- 9) (* ?x407 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* (- 9) (* r00 ?x407 ?x407 ?x410 ?x5680 ?x5680)) (* (- 18) (* x00 r!2 r!2 r!2 s!1 x!0)) (* (- 6) ?x2056) (* 72 (* r!2 r!2 r!2 x!0)) (* (- 24) s!1) (* 216 (* r00 r!2 s!1 s!1)) (* 99 (* r00 r!2 r!2 r!2)) (* (- 12) (* s00 s00 r!2 r!2)) (* (- 4) (* s00 s00 r!2 r!2 r!2)) (* 9 (* r00 r!2 r!2)) (* 108 (* r00 r!2 r!2 r!2 r!2)) (* (- 6) ?x2469) (* 108 (* r!2 r!2 x!0)) (* 18 (* r!2 r!2 r!2 r!2 x!0)) (* 18 (* ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* 18 (* ?x407 ?x407 ?x407 ?x410 ?x410 ?x5680)) (* (- 16) (* s00 s!1)) (* 18 (* r00 x00 r!2 r!2 s!1 s!1)) (* (- 9) ?x2863) (* (- 60) (* s00 s00 r!2 r!2 x!0)) (* (- 18) (* x00 s!1 x!0)) (* (- 12) (* s00 r00 r00 r!2 s!1 s!1)) (* (- 54) (* x00 x!0)) (* (- 6) (* s00 s!1 s!1)) (* 54 (* x00 s!1)) (* 54 (* r00 s!1 s!1)) (* 54 (* r00 r!2 x!0)) (* 18 (* s00 x!0)) (* (- 192) (* s00 r!2 r!2 s!1)) (* 9 (* s00 r00 x!0)) (* 72 (* s00 r00 r00 r!2 x!0)) (* 99 (* s00 r!2 r!2)) (* 3 (* ?x407 ?x407 ?x410 ?x5680 ?x5680)) (* 75 (* s00 r!2 r!2 r!2)) (* 48 (* s00 s00 r!2 s!1)) (* 18 (* s00 r00 r00 r!2)) (* 24 (* s00 s00 r!2 r!2 r!2 s!1)) (* 108 (* x00 r!2 r!2 r!2 r!2 s!1)) (* 18 (* x00 s!1 s!1)) (* 6 (* s00 r00 r00 r!2 r!2 r!2)) (* (- 54) (* x00 r!2 s!1 x!0)) (* (- 54) (* x00 r!2 r!2 s!1 x!0)) (* (- 162) (* r00 r00 r!2 r!2)) (* 2 (* s00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* (- 9) (* r00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* (- 72) (* x00 r!2)) (* (- 24) (* s00 r!2 r!2 s!1 s!1)) (* (- 9) (* s00 r!2 r!2 r!2 s!1 s!1)) (* (- 45) (* r00 r!2 r!2 s!1)) (* (- 36) (* r00 r00 r!2 r!2 r!2 r!2)) (* (- 126) (* r00 r00 r!2 r!2 r!2)) (* 90 (* s00 r00 r00 r!2 r!2 x!0)) (* 18 x!0) (* (- 9) (* s00 r00 r!2 r!2)) (* 108 (* r00 r!2 r!2 r!2 x!0 x!0)) (* (- 270) (* r00 x00 r!2 r!2 x!0)) (* (- 27) (* r00 r!2)) (* (- 216) (* r00 x00 r!2 x!0)) (* (- 540) (* r00 r!2 r!2 s!1 x!0)) (* 36 (* r00 r!2 r!2 r!2 r!2 r!2)) (* 3 (* s00 r00 r!2)) (* 36 (* r00 r!2 s!1 s!1 s!1)) (* (- 6) (* s00 r00 r00 r!2 r!2 s!1 s!1)) (* 171 (* s00 r!2 r!2 r!2 x!0)) (* (- 9) (* s00 r00 r!2 r!2 s!1 x!0)) (* (- 6) (* r00 r00 s!1)) (* 54 (* r00 x00 s!1)) (* 6 (* s00 r00 r!2 r!2 r!2 s!1 s!1)) (* 3 (* s00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* (- 6) (* s00 r00 r!2 r!2 r!2 r!2)) (* (- 18) (* r00 x00 r!2 r!2 r!2)) (* (- 216) (* r00 r!2 r!2 r!2 s!1 x!0)) (* (- 54) (* r00 x00 r!2 r!2)) (* (- 57) (* r00 r!2 s!1)) (* 6 (* r00 r!2 r!2 r!2 r!2 s!1)) (* (- 54) (* s00 r!2 r!2 r!2 r!2 s!1)) (* (- 21) (* r00 s!1)) (* 4 (* s00 s00 r!2 r!2 s!1 s!1)) (* (- 36) (* r00 s!1 s!1 x!0)) (* (- 36) (* r00 r!2 r!2 s!1 s!1 x!0)) (* (- 36) (* s00 r00 r!2 r!2 r!2 r!2 x!0)) (* 3 (* s00 r00 s!1 x!0)) (* (- 72) (* s00 r00 r!2 r!2 r!2 x!0)) (* 36 (* r00 r!2 s!1 x!0 x!0)) (* (- 36) (* r00 x00 r!2 s!1 x!0)) (* (- 18) (* r00 x00 r!2 r!2 s!1 x!0)) (* (- 54) (* r!2 r!2 r!2 r!2 r!2)) (* 18 (* r00 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* (- 2) ?x5890) (* 18 (* r00 r!2 r!2 r!2 x!0)) (* 216 (* r00 r!2 x!0 x!0)) (* (- 6) (* r00 r00 r!2 r!2 r!2 s!1)) (* 18 (* r00 r!2 r!2 s!1 x!0 x!0)) (* 54 (* r00 r!2 r!2 x!0)) (* 36 (* s00 r00 r!2 r!2 r!2 r!2 s!1)) (* 108 (* r00 x00 r!2 r!2 r!2 s!1)) (* 72 (* s00 r00 r!2 r!2 r!2 s!1)) (* (- 18) (* r00 x00 s!1 x!0)) (* (- 15) (* s00 r00 r!2 r!2 r!2)) (* (- 108) (* r00 x00 r!2 r!2 r!2 x!0)) (* 18 (* s00 r00 r!2 x!0)) (* (- 27) (* s00 r00 r!2 r!2 x!0)) (* 27 (* s00 r00 r!2 r!2 s!1)) (* (- 108) (* r00 s!1 x!0)) (* 18 (* r00 x00 s!1 s!1)) (* 108 (* r00 r!2 r!2 r!2 s!1 s!1)) (* (- 18) (* x00 r!2 r!2 r!2 r!2)) (* (- 72) (* x00 r!2 r!2 r!2)) (* (- 108) (* x00 r!2 r!2)) (* 18 (* r00 s!1 x!0 x!0)) (* 270 (* r00 x00 r!2 r!2 s!1)) (* 18 (* s00 r00 r00 r!2 r!2)) (* (- 153) (* r!2 r!2 s!1)) (* (- 105) (* r!2 r!2 r!2 s!1)) (* 36 (* s00 r00 r00 r!2 r!2 r!2 x!0)) (* 21 (* s00 r!2 r!2 r!2 r!2)) (* (- 6) (* r00 s00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* 54 (* x00 r!2 r!2 s!1 s!1)) (* (- 90) (* s00 r00 r00 r!2 r!2 s!1)) (* (- 225) (* r!2 r!2 r!2 r!2)) (* (- 72) (* s00 r00 r00 r!2 s!1)) (* (- 18) (* s00 r00 r00 s!1)) (* 99 (* s00 r!2 x!0)) (* (- 6) (* r00 r00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* (- 369) (* r!2 r!2 r!2)) (* 6 (* r00 r00 s00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* 2 (* ?x407 ?x407 ?x410 ?x5680 ?x5680 ?x5680)) (* 6 ?x6252) (* (- 48) (* s00 s00 r!2 x!0)) (* 8 (* s00 s00 r!2 s!1 s!1)) (* 4 (* s00 s00 s!1 s!1)) (* (- 169) (* s00 r!2 r!2 r!2 s!1)) (* (- 99) ?x6409) (* 6 ?x6459) (* 9 ?x6498) (* 57 (* s00 r!2)) (* (- 90) (* r00 r00 r!2)) (* (- 297) (* r!2 r!2)) (* 9 (* s00 r!2 r!2 r!2 s!1 x!0)) (* (- 18) (* s00 r00 r!2 s!1)) (* (- 4) (* s00 s00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* (- 9) ?x6602) (* 9 (* r00 s00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* (- 18) (* r00 x00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* (- 12) (* s00 s00 x!0)) (* 18 ?x6613) (* (- 4) (* s00 s00 r!2 r!2 s!1 x!0)) (* 2 (* s00 ?x407 ?x407 ?x410 ?x5680 ?x5680)) (* (- 2) ?x6646) (* (- 3) (* ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* (- 8) (* s00 s00 r!2 s!1 x!0)) (* (- 3) (* s00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* 54 (* x00 r!2 s!1 s!1)) (* 378 (* x00 r!2 r!2 r!2 s!1)) (* (- 24) (* s00 s00 r!2 r!2 r!2 x!0)) (* 12 (* s00 s00 s!1)) (* 60 (* s00 s00 r!2 r!2 s!1)) (* (- 27) (* r!2 r!2 r!2 r!2 s!1)) (* (- 9) ?x6748) (* (- 4) (* s00 s00 s!1 x!0)) (* (- 54) (* r00 x00 x!0)))))
 (let (($x1827 (= ?x1832 18)))
 (let (($x1562 (not $x1827)))
 (let ((?x5021 (* r00 r00 s!1)))
 (let ((?x4563 (* 36 ?x5021)))
 (let ((?x3149 (* (- 9) s!1)))
 (let ((?x1409 (* x00 x00)))
 (let ((?x4392 (* 108 ?x1409)))
 (let ((?x1247 (* s00 s00 s00)))
 (let ((?x916 (* 16 ?x1247)))
 (let ((?x945 (* r00 r00 r00 x00)))
 (let ((?x5168 (* (- 432) ?x945)))
 (let ((?x868 (* s00 x00)))
 (let ((?x5403 (* (- 108) ?x868)))
 (let ((?x2318 (* (- 36) ?x710)))
 (let ((?x975 (* 51 ?x654)))
 (let ((?x3620 (* 108 ?x585)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3106 (+ ?x137 (* (- 54) ?x489) (* 216 (* s00 r00 x00)) ?x3620 ?x975 ?x2318 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x5403 ?x5168 (* 216 (* s00 r00 r00 r00)) ?x916 ?x4392 (* 15 (* s!1 s!1)) (* (- 108) (* r00 x!0)) (* 108 (* s00 r00 s!1)) ?x3149 (* (- 66) (* s00 s!1)) (* (- 216) (* x00 x!0)) (* (- 12) (* s00 s!1 s!1)) (* 108 (* x00 s!1)) (* 108 (* s00 x!0)) (* (- 216) (* r00 r00 r00 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) ?x4563 (* (- 108) (* s!1 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* 54 (* r00 s!1)) (* 108 (* x!0 x!0)) (* 36 (* r00 r00 s!1 s!1)))))
 (let (($x3111 (= ?x3106 0)))
 (let ((?x940 (* r00 r00 x00)))
 (let ((?x3286 (* 36 ?x940)))
 (let ((?x3280 (* (- 6) ?x868)))
 (let ((?x3287 (* 15 ?x654)))
 (let ((?x4790 (* 54 ?x585)))
 (let ((?x5904 (+ ?x137 (* (- 54) (* r!2 x!0)) (* (- 24) ?x489) ?x4790 ?x3287 ?x2318 (* 2 (* s00 s00 r00)) ?x3280 ?x3286 (* (- 2) (* s00 r!2 s!1)) (* 4 (* s00 s00 r!2)) (* 36 (* r00 x00 r!2)) (* (- 3) (* s!1 s!1)) (* (- 54) (* r00 x!0)) (* 2 (* s00 r00 s!1)) ?x3149 (* (- 12) (* s00 s!1)) (* (- 36) (* r00 r00 x!0)) (* 6 (* x00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* (- 36) (* r00 r!2 x!0)) (* 6 (* s00 x!0)) (* 54 (* x00 r!2)) ?x4563 (* (- 6) (* s!1 x!0)) (* (- 2) (* r!2 s!1 s!1)) (* 24 (* r00 s!1)) (* 24 ?x6409) (* (- 24) (* s00 r!2)))))
 (let (($x5905 (= ?x5904 0)))
 (let ((?x1691 (* (- 6) ?x710)))
 (let ((?x655 (* 4 ?x654)))
 (let ((?x586 (* 18 ?x585)))
 (let ((?x5506 (+ ?x44 (* (- 18) (* r!2 x!0)) (* (- 9) ?x489) ?x586 ?x655 ?x1691 (* (- 2) (* s!1 s!1)) (* (- 18) (* r00 x!0)) ?x3657 (* (- 2) (* s00 s!1)) (* 18 (* x00 r!2)) (* 6 (* s00 r00 r!2)) (* 6 ?x5021) (* (- 6) (* r00 r!2 s!1)) (* 9 (* r00 s!1)) (* 9 ?x6409) (* (- 9) (* s00 r!2)))))
 (let (($x775 (= ?x5506 0)))
 (let ((?x364 (* r00 r00)))
 (let ((?x2515 (* (- 3) ?x364)))
 (let ((?x6565 (+ s00 ?x2515 ?x1412 (* 3 (* r!2 r!2)))))
 (let (($x6434 (= ?x6565 0)))
 (let (($x3110 (and $x6434 $x1614 $x775 $x5905 $x3111 $x1562)))
 (let ((?x5516 (* (- 3) ?x489)))
 (let ((?x6863 (* 18 ?x364)))
 (let ((?x4188 (* 18 x00)))
 (let ((?x5388 (* 9 r00)))
 (let ((?x6868 (* (- 12) s00)))
 (let ((?x6654 (+ (* 117 r!2) (* 24 s!1) (* (- 18) x!0) ?x6868 ?x5388 ?x4188 (* 297 (* r!2 r!2)) ?x6863 (* 99 ?x6409) (* 90 (* r!2 r00 r00)) (* (- 3) (* s00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* (- 57) (* r!2 s00)) (* 9 ?x2863) (* 36 (* r!2 r!2 r!2 s!1 s00 r00 r00)) ?x5516 ?x586 (* (- 72) (* r!2 x!0)) (* 57 (* r!2 s!1 r00)) (* (- 54) (* r!2 x!0 r00)) (* 6 (* s!1 r00 r00)) ?x655 (* (- 18) (* x!0 s00)) (* (- 72) (* r!2 x!0 s00 r00 r00)) (* (- 18) (* x!0 r00)) (* (- 9) (* s00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) ?x1691 (* (- 54) (* s!1 s!1 r00)) (* 72 (* r!2 x00)) (* 16 (* s!1 s00)) (* 21 (* s!1 r00)) (* (- 54) (* s!1 x00)) (* (- 3) (* r!2 s00 r00)) (* 12 (* r!2 s!1 s!1 s00 r00 r00)) (* (- 6) (* r00 ?x407 ?x407 ?x407 ?x410 ?x5680 ?x5680)) (* 9 (* s!1 s00 r00)) (* 6 ?x2056) (* (- 6) (* r00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* 18 ?x897) (* 12 (* r!2 s00 s00)) (* (- 18) (* r!2 s00 r00 r00)) (* 93 (* r!2 s!1 s00)) (* 6 (* s!1 s!1 s00)) (* 54 (* r!2 r00 x00)) (* (- 54) (* r!2 r!2 r!2 r!2 x!0 s00)) (* 9 ?x6748) (* (- 9) ?x427) (* 18 (* x00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* 6 (* r00 r00 ?x407 ?x407 ?x410 ?x5680 ?x5680)) (* (- 9) (* x!0 s00 r00)) (* (- 3) (* ?x407 ?x407 ?x410 ?x5680 ?x5680)) (* (- 3) (* ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* (- 12) (* r!2 s!1 x!0 s00 r00 r00)) (* 54 (* x!0 x00)) (* (- 99) (* r!2 r!2 s00)) (* (- 75) (* r!2 r!2 r!2 s00)) (* 60 (* r!2 r!2 x!0 s00 s00)) (* (- 48) (* r!2 s!1 s00 s00)) (* (- 4) (* r!2 r!2 s!1 s!1 s00 s00)) (* 48 (* r!2 x!0 s00 s00)) (* (- 8) (* r!2 s!1 s!1 s00 s00)) (* (- 4) (* s!1 s!1 s00 s00)) (* (- 24) (* r!2 r!2 r!2 s!1 s00 s00)) (* 9 (* r00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* (- 60) (* r!2 r!2 s!1 s00 s00)) (* (- 12) (* s!1 s00 s00)) (* 12 (* x!0 s00 s00)) (* 24 (* r!2 r!2 r!2 x!0 s00 s00)) (* 4 (* s!1 x!0 s00 s00)) (* 8 (* r!2 s!1 x!0 s00 s00)) (* 4 (* r!2 r!2 s!1 x!0 s00 s00)) (* 169 (* r!2 r!2 r!2 s!1 s00)) (* 192 (* r!2 r!2 s!1 s00)) (* (- 6) (* r!2 r!2 r!2 s00 r00 r00)) (* 18 (* s!1 x!0 x00)) (* 54 (* r!2 s!1 x!0 x00)) (* 54 (* r!2 r!2 s!1 x!0 x00)) (* 18 (* r!2 r!2 r!2 s!1 x!0 x00)) (* (- 2) (* s00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* 12 (* r!2 r!2 s00 s00)) (* 4 (* r!2 r!2 r!2 s00 s00)) (* (- 216) (* r!2 s!1 s!1 r00)) (* (- 4) ?x760) (* (- 2) (* ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680 ?x5680)) (* 270 (* r!2 x!0 x00)) (* 486 (* r!2 r!2 x!0 x00)) (* 108 (* r!2 r!2 r!2 r!2 x!0 x00)) (* 378 (* r!2 r!2 r!2 x!0 x00)) (* (- 18) (* r!2 r!2 r!2 s!1 s!1 x00)) (* (- 54) (* r!2 r!2 s!1 s!1 x00)) (* (- 54) (* r!2 s!1 s!1 x00)) (* (- 378) (* r!2 r!2 r!2 s!1 x00)) (* (- 108) (* r!2 r!2 r!2 r!2 s!1 x00)) (* (- 18) (* s!1 s!1 x00)) (* (- 2) (* ?x407 ?x407 ?x407 ?x5680 ?x5680)) (* (- 486) (* r!2 r!2 s!1 x00)) (* (- 270) (* r!2 s!1 x00)) (* 108 (* s!1 x!0 r00)) (* (- 270) (* r!2 r!2 s!1 s!1 r00)) (* 432 (* r!2 s!1 x!0 r00)) (* 3 (* r!2 r!2 r!2 s!1 r00)) (* 45 (* r!2 r!2 s!1 r00)) (* (- 108) (* r!2 r!2 r!2 r!2 r00)) (* (- 99) (* r!2 r!2 r!2 r00)) (* (- 9) (* r!2 r!2 r00)) (* (- 18) (* ?x407 ?x407 ?x407 ?x410 ?x410 ?x5680)) (* 27 (* r!2 r00)) (* 540 (* r!2 r!2 s!1 x!0 r00)) (* (- 36) (* r!2 r!2 r!2 r!2 r!2 r00)) (* 9 (* r!2 r!2 s00 r00)) (* 15 (* r!2 r!2 r!2 s00 r00)) (* 6 (* r!2 r!2 r!2 r!2 s00 r00)) (* (- 6) (* r!2 r!2 r!2 r!2 s!1 r00)) (* (- 9) (* r!2 r!2 r!2 s!1 x!0 s00)) (* 18 (* r!2 s!1 s00 r00)) (* (- 27) (* r!2 r!2 s!1 s00 r00)) (* (- 72) (* r!2 r!2 r!2 s!1 s00 r00)) (* (- 36) (* r!2 r!2 r!2 r!2 s!1 s00 r00)) (* 3 (* s!1 s!1 s00 r00)) (* (- 9) (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 6) (* r!2 r!2 r!2 s!1 s!1 s00 r00)) (* 18 ?x1238) (* (- 18) (* r!2 x!0 s00 r00)) (* 27 (* r!2 r!2 x!0 s00 r00)) (* (- 6) ?x6459) (* 72 (* r!2 r!2 r!2 x!0 s00 r00)) (* 36 (* r!2 r!2 r!2 r!2 x!0 s00 r00)) (* (- 3) (* s!1 x!0 s00 r00)) (* 9 (* r00 ?x407 ?x407 ?x410 ?x5680 ?x5680)) (* 9 (* r!2 r!2 s!1 x!0 s00 r00)) (* 9 (* ?x407 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* 6 (* r!2 r!2 r!2 s!1 x!0 s00 r00)) (* (- 54) (* x!0 x!0 r00)) (* (- 270) (* r!2 r!2 x!0 x!0 r00)) (* 18 (* r!2 r!2 s!1 r00 r00)) (* 18 (* r!2 s!1 r00 r00)) (* 36 (* r!2 r!2 r!2 r!2 r00 r00)) (* 126 (* r!2 r!2 r!2 r00 r00)) (* 162 (* r!2 r!2 r00 r00)) (* (- 18) (* r00 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* 2 ?x5890) (* 6 (* r!2 r!2 r!2 s!1 r00 r00)) (* (- 18) (* r!2 r!2 r!2 x!0 r00)) (* (- 216) (* r!2 x!0 x!0 r00)) (* 6 ?x2469) (* 108 (* r!2 r!2 x00)) (* 72 (* r!2 r!2 r!2 x00)) (* 18 (* r!2 r!2 r!2 r!2 x00)) (* (- 108) (* r!2 r!2 r!2 s!1 s!1 r00)) (* (- 54) (* r!2 r!2 x!0 r00)) (* (- 18) ?x1477) (* (- 18) (* r!2 r!2 s00 r00 r00)) (* (- 270) (* r!2 r!2 s!1 r00 x00)) (* (- 18) (* ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* (- 18) (* r!2 r!2 r!2 r!2 x!0)) (* (- 72) (* r!2 r!2 r!2 x!0)) (* (- 108) (* r!2 r!2 x!0)) (* 18 (* r!2 r!2 r!2 r00 x00)) (* 54 (* r!2 r!2 r00 x00)) (* 216 (* r!2 r!2 r!2 s!1 x!0 r00)) (* (- 108) (* r!2 r!2 r!2 s!1 r00 x00)) (* (- 18) (* s!1 s!1 r00 x00)) (* 54 (* x!0 r00 x00)) (* (- 18) (* r!2 r!2 s!1 s!1 r00 x00)) (* (- 36) (* r!2 s!1 s!1 r00 x00)) (* (- 54) (* s!1 r00 x00)) (* (- 108) (* r!2 r!2 r!2 x!0 x!0 r00)) (* (- 18) (* s!1 s!1 s!1 r00)) (* 72 (* r!2 s!1 s!1 x!0 r00)) (* (- 216) (* r!2 s!1 r00 x00)) (* 36 (* s!1 s!1 x!0 r00)) (* 36 (* r!2 r!2 s!1 s!1 x!0 r00)) (* 6 (* s!1 s!1 s00 r00 r00)) (* (- 36) (* r!2 s!1 s!1 s!1 r00)) (* (- 18) (* r!2 r!2 s!1 s!1 s!1 r00)) (* 216 (* r!2 x!0 r00 x00)) (* 270 (* r!2 r!2 x!0 r00 x00)) (* 108 (* r!2 r!2 r!2 x!0 r00 x00)) (* 18 (* s!1 x!0 r00 x00)) (* 36 (* r!2 s!1 x!0 r00 x00)) (* 18 (* r!2 r!2 s!1 x!0 r00 x00)) (* (- 18) (* s!1 x!0 x!0 r00)) (* 153 (* r!2 r!2 s!1)) (* 105 (* r!2 r!2 r!2 s!1)) (* 27 (* r!2 r!2 r!2 r!2 s!1)) (* 54 (* r!2 r!2 r!2 r!2 s!1 s00)) (* (- 36) (* r!2 s!1 x!0 x!0 r00)) (* 54 (* r!2 r!2 r!2 r!2 r!2)) (* 225 (* r!2 r!2 r!2 r!2)) (* 369 (* r!2 r!2 r!2)) (* (- 18) (* r!2 r!2 s!1 x!0 x!0 r00)) (* (- 36) (* r!2 r!2 r!2 x!0 s00 r00 r00)) (* (- 21) (* r!2 r!2 r!2 r!2 s00)) (* 6 (* r00 r00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* 6 (* r00 s00 ?x407 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* (- 6) (* r00 r00 s00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* (- 2) (* ?x407 ?x407 ?x410 ?x5680 ?x5680 ?x5680)) (* (- 6) ?x6252) (* (- 6) (* s!1 x!0 s00 r00 r00)) (* 6 (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* 3 (* s00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* (- 90) (* r!2 r!2 x!0 s00 r00 r00)) (* 4 (* s00 s00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* 9 ?x6602) (* (- 18) (* x!0 s00 r00 r00)) (* (- 6) (* r!2 r!2 s!1 x!0 s00 r00 r00)) (* (- 9) (* r00 s00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* 18 (* r00 x00 ?x407 ?x407 ?x410 ?x410 ?x5680 ?x5680 ?x5680)) (* 18 (* s!1 s00 r00 r00)) (* (- 18) ?x6613) (* (- 24) (* r!2 r!2 s!1 x!0 s00)) (* (- 21) (* r!2 s!1 x!0 s00)) (* (- 6) (* s!1 x!0 s00)) (* (- 171) (* r!2 r!2 r!2 x!0 s00)) (* (- 198) (* r!2 r!2 x!0 s00)) (* (- 99) (* r!2 x!0 s00)) (* (- 9) ?x6498) (* 9 (* r!2 r!2 r!2 s!1 s!1 s00)) (* 24 (* r!2 r!2 s!1 s!1 s00)) (* 21 (* r!2 s!1 s!1 s00)) (* (- 2) (* s00 ?x407 ?x407 ?x410 ?x5680 ?x5680)) (* 2 ?x6646) (* 3 (* ?x407 ?x407 ?x407 ?x410 ?x410 ?x410 ?x5680 ?x5680 ?x5680 ?x5680)) (* 72 (* r!2 s!1 s00 r00 r00)) (* 90 (* r!2 r!2 s!1 s00 r00 r00)))))
 (let ((?x1439 (* (- 108) ?x1409)))
 (let ((?x1438 (* (- 16) ?x1247)))
 (let ((?x1119 (* s00 r00 r00 r00)))
 (let ((?x1434 (* (- 216) ?x1119)))
 (let ((?x946 (* 432 ?x945)))
 (let ((?x1192 (* 108 ?x868)))
 (let ((?x794 (* s00 s00 r00 r00)))
 (let ((?x795 (* 36 ?x794)))
 (let ((?x731 (* s00 s00 r00)))
 (let ((?x1075 (* 108 ?x731)))
 (let ((?x1063 (* 36 ?x710)))
 (let ((?x1428 (* (- 51) ?x654)))
 (let ((?x433 (* s!1 r00 r00)))
 (let ((?x3686 (* (- 36) ?x433)))
 (let ((?x1425 (* (- 108) ?x585)))
 (let ((?x576 (* s00 r00 x00)))
 (let ((?x1424 (* (- 216) ?x576)))
 (let ((?x583 (* 54 ?x489)))
 (let ((?x1050 (* (- 9) s00)))
 (let ((?x2231 (* 9 s!1)))
 (let ((?x2819 (+ ?x2231 ?x1050 ?x583 ?x1424 ?x1425 (* (- 15) (* s!1 s!1)) ?x3686 ?x1428 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1063 ?x1075 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x795 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1192 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x946 (* 12 (* s!1 s!1 s00)) ?x1434 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1438 (* 216 (* x!0 x00)) ?x1439)))
 (let ((?x953 (* (- 36) ?x940)))
 (let ((?x869 (* 6 ?x868)))
 (let ((?x759 (* (- 2) ?x731)))
 (let ((?x979 (* (- 15) ?x654)))
 (let ((?x614 (* (- 54) ?x585)))
 (let ((?x627 (* 24 ?x489)))
 (let ((?x1688 (+ ?x2231 ?x1050 (* (- 24) ?x6409) (* 24 (* r!2 s00)) ?x627 ?x614 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x3686 ?x979 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1063 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x759 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x869 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x953 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x604 (* 9 ?x489)))
 (let ((?x441 (* (- 3) s00)))
 (let ((?x2298 (+ (* 3 s!1) ?x441 (* (- 9) ?x6409) (* 9 (* r!2 s00)) ?x604 ?x599 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x433) ?x667 (* 18 (* x!0 r00)) ?x711 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x2777 (+ ?x3658 ?x3657 ?x3659 ?x44 ?x563 ?x564 ?x5917 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x567 ?x533)))
 (let (($x885 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x364)) 0)))
 (let (($x6431 (and $x885 (= ?x2777 0) (= ?x2298 0) (= ?x1688 0) (= ?x2819 0) (not (= ?x6654 (- 18))))))
 (let (($x6784 (exists ((r Int) (s Int) (x Int) )(! (let ((?x217 (* 6 r)))
 (let ((?x1518 (+ 3 ?x217 s)))
 (let ((?x343 (* (- 1) s)))
 (let ((?x1524 (+ ?x343 x)))
 (let ((?x1448 (+ 1 r)))
 (let ((?x6670 (* 2 (* ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518 ?x1518))))
 (let ((?x6430 (* (- 9) (* ?x1448 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518))))
 (let ((?x6439 (* (- 18) (* r00 x00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x6010 (* 9 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x5696 (* (- 6) (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x7363 (* 54 (* r r r r r))))
 (let ((?x7341 (* 18 (* r r s x r00 x00))))
 (let ((?x7340 (* 36 (* r s x r00 x00))))
 (let ((?x7339 (* 18 (* s x r00 x00))))
 (let ((?x7338 (* 108 (* r r r x r00 x00))))
 (let ((?x7337 (* 270 (* r r x r00 x00))))
 (let ((?x7336 (* 216 (* r x r00 x00))))
 (let ((?x7333 (* (- 216) (* r s r00 x00))))
 (let ((?x7331 (* (- 54) (* s r00 x00))))
 (let ((?x7330 (* (- 36) (* r s s r00 x00))))
 (let ((?x7329 (* (- 18) (* r r s s r00 x00))))
 (let ((?x7328 (* 54 (* x r00 x00))))
 (let ((?x7327 (* (- 18) (* s s r00 x00))))
 (let ((?x7326 (* (- 108) (* r r r s r00 x00))))
 (let ((?x7324 (* 54 (* r r r00 x00))))
 (let ((?x4394 (* 18 (* r r r r00 x00))))
 (let ((?x7295 (* (- 18) (* r r r r x))))
 (let ((?x7294 (* (- 270) (* r r s r00 x00))))
 (let ((?x4204 (* (- 18) (* x00 ?x1448 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x4182 (* 18 (* r r r r x00))))
 (let ((?x7291 (* 72 (* r r r x00))))
 (let ((?x7290 (* 108 (* r r x00))))
 (let ((?x4074 (* 6 (* r00 r00 s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x3976 (* 2 (* s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518))))
 (let ((?x7262 (* 162 (* r r r00 r00))))
 (let ((?x7261 (* 126 (* r r r r00 r00))))
 (let ((?x7260 (* 36 (* r r r r r00 r00))))
 (let ((?x7239 (* 6 (* r r r s x s00 r00))))
 (let ((?x7235 (* 36 (* r r r r x s00 r00))))
 (let ((?x3581 (* (- 6) (* r00 r00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518))))
 (let ((?x3588 (* 18 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x7231 (* (- 6) (* r r r s s s00 r00))))
 (let ((?x7227 (* (- 36) (* r r r r s s00 r00))))
 (let ((?x7199 (* 6 (* r r r r s00 r00))))
 (let ((?x7139 (* (- 270) (* r s x00))))
 (let ((?x7138 (* (- 486) (* r r s x00))))
 (let ((?x7137 (* (- 18) (* s s x00))))
 (let ((?x7136 (* (- 108) (* r r r r s x00))))
 (let ((?x7135 (* (- 378) (* r r r s x00))))
 (let ((?x7134 (* (- 54) (* r s s x00))))
 (let ((?x7133 (* (- 54) (* r r s s x00))))
 (let ((?x7132 (* (- 18) (* r r r s s x00))))
 (let ((?x7131 (* 378 (* r r r x x00))))
 (let ((?x7130 (* 108 (* r r r r x x00))))
 (let ((?x7129 (* 486 (* r r x x00))))
 (let ((?x7128 (* 270 (* r x x00))))
 (let ((?x2548 (* (- 4) (* s00 s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x2337 (* 4 (* r r r s00 s00))))
 (let ((?x7127 (* 12 (* r r s00 s00))))
 (let ((?x2241 (* 18 (* r r r s x x00))))
 (let ((?x7126 (* 54 (* r r s x x00))))
 (let ((?x7125 (* 54 (* r s x x00))))
 (let ((?x2225 (* 18 (* s x x00))))
 (let ((?x7053 (* 4 (* r r s x s00 s00))))
 (let ((?x7052 (* 8 (* r s x s00 s00))))
 (let ((?x7051 (* 4 (* s x s00 s00))))
 (let ((?x7050 (* 24 (* r r r x s00 s00))))
 (let ((?x1798 (* 12 (* x s00 s00))))
 (let ((?x1787 (* (- 12) (* s s00 s00))))
 (let ((?x6804 (* (- 60) (* r r s s00 s00))))
 (let ((?x6803 (* (- 24) (* r r r s s00 s00))))
 (let ((?x6802 (* (- 4) (* s s s00 s00))))
 (let ((?x6801 (* (- 8) (* r s s s00 s00))))
 (let ((?x6800 (* 48 (* r x s00 s00))))
 (let ((?x6806 (* (- 4) (* r r s s s00 s00))))
 (let ((?x6805 (* (- 48) (* r s s00 s00))))
 (let ((?x6808 (* 60 (* r r x s00 s00))))
 (let ((?x1383 (* x x00)))
 (let ((?x2247 (* 54 ?x1383)))
 (let ((?x1158 (* (- 9) (* r00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518))))
 (let ((?x1004 (* r r00 x00)))
 (let ((?x6848 (* 54 ?x1004)))
 (let ((?x888 (* r s00 s00)))
 (let ((?x6852 (* 12 ?x888)))
 (let ((?x1134 (* 18 (* r00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x881 (* 6 (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518))))
 (let ((?x787 (* s x00)))
 (let ((?x2250 (* (- 54) ?x787)))
 (let ((?x751 (* s s00)))
 (let ((?x6853 (* 16 ?x751)))
 (let ((?x722 (* r x00)))
 (let ((?x6856 (* 72 ?x722)))
 (let ((?x710 (* s00 r00 r00)))
 (let ((?x1691 (* (- 6) ?x710)))
 (let ((?x663 (* x s00)))
 (let ((?x6855 (* (- 18) ?x663)))
 (let ((?x654 (* s00 s00)))
 (let ((?x655 (* 4 ?x654)))
 (let ((?x585 (* r00 x00)))
 (let ((?x586 (* 18 ?x585)))
 (let ((?x489 (* s00 r00)))
 (let ((?x5516 (* (- 3) ?x489)))
 (let ((?x467 (* 9 (* s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x414 (* r r00 r00)))
 (let ((?x6862 (* 90 ?x414)))
 (let ((?x364 (* r00 r00)))
 (let ((?x6863 (* 18 ?x364)))
 (let ((?x4188 (* 18 x00)))
 (let ((?x5388 (* 9 r00)))
 (let ((?x6868 (* (- 12) s00)))
 (let ((?x6867 (* (- 18) x)))
 (let ((?x6870 (* 24 s)))
 (let ((?x6762 (+ (* 117 r) ?x6870 ?x6867 ?x6868 ?x5388 ?x4188 (* 297 (* r r)) ?x6863 (* 99 (* r s)) ?x6862 (* (- 3) (* s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* (- 57) (* r s00)) ?x467 (* 36 (* r r r s s00 r00 r00)) ?x5516 ?x586 (* (- 72) (* r x)) (* 57 (* r s r00)) (* (- 54) (* r x r00)) (* 6 (* s r00 r00)) ?x655 ?x6855 (* (- 72) (* r x s00 r00 r00)) (* (- 18) (* x r00)) (* (- 9) (* s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) ?x1691 (* (- 54) (* s s r00)) ?x6856 ?x6853 (* 21 (* s r00)) ?x2250 (* (- 3) (* r s00 r00)) (* 12 (* r s s s00 r00 r00)) (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1518 ?x1518)) (* 9 (* s s00 r00)) ?x881 (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) ?x1134 ?x6852 (* (- 18) (* r s00 r00 r00)) (* 93 (* r s s00)) (* 6 (* s s s00)) ?x6848 (* (- 54) (* r r r r x s00)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x1524 ?x1518 ?x1518)) ?x1158 (* 18 (* x00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* 6 (* r00 r00 ?x1448 ?x1448 ?x1524 ?x1518 ?x1518)) (* (- 9) (* x s00 r00)) (* (- 3) (* ?x1448 ?x1448 ?x1524 ?x1518 ?x1518)) (* (- 3) (* ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) (* (- 12) (* r s x s00 r00 r00)) ?x2247 (* (- 99) (* r r s00)) (* (- 75) (* r r r s00)) ?x6808 ?x6805 ?x6806 ?x6800 ?x6801 ?x6802 ?x6803 (* 9 (* r00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) ?x6804 ?x1787 ?x1798 ?x7050 ?x7051 ?x7052 ?x7053 (* 169 (* r r r s s00)) (* 192 (* r r s s00)) (* (- 6) (* r r r s00 r00 r00)) ?x2225 ?x7125 ?x7126 ?x2241 (* (- 2) (* s00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) ?x7127 ?x2337 (* (- 216) (* r s s r00)) ?x2548 (* (- 2) (* ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518 ?x1518)) ?x7128 ?x7129 ?x7130 ?x7131 ?x7132 ?x7133 ?x7134 ?x7135 ?x7136 ?x7137 (* (- 2) (* ?x1448 ?x1448 ?x1448 ?x1518 ?x1518)) ?x7138 ?x7139 (* 108 (* s x r00)) (* (- 270) (* r r s s r00)) (* 432 (* r s x r00)) (* 3 (* r r r s r00)) (* 45 (* r r s r00)) (* (- 108) (* r r r r r00)) (* (- 99) (* r r r r00)) (* (- 9) (* r r r00)) (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518)) (* 27 (* r r00)) (* 540 (* r r s x r00)) (* (- 36) (* r r r r r r00)) (* 9 (* r r s00 r00)) (* 15 (* r r r s00 r00)) ?x7199 (* (- 6) (* r r r r s r00)) (* (- 9) (* r r r s x s00)) (* 18 (* r s s00 r00)) (* (- 27) (* r r s s00 r00)) (* (- 72) (* r r r s s00 r00)) ?x7227 (* 3 (* s s s00 r00)) (* (- 9) (* r r s s s00 r00)) ?x7231 ?x3588 (* (- 18) (* r x s00 r00)) (* 27 (* r r x s00 r00)) ?x3581 (* 72 (* r r r x s00 r00)) ?x7235 (* (- 3) (* s x s00 r00)) (* 9 (* r00 ?x1448 ?x1448 ?x1524 ?x1518 ?x1518)) (* 9 (* r r s x s00 r00)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) ?x7239 (* (- 54) (* x x r00)) (* (- 270) (* r r x x r00)) (* 18 (* r r s r00 r00)) (* 18 (* r s r00 r00)) ?x7260 ?x7261 ?x7262 (* (- 18) (* r00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) ?x3976 (* 6 (* r r r s r00 r00)) (* (- 18) (* r r r x r00)) (* (- 216) (* r x x r00)) ?x4074 ?x7290 ?x7291 ?x4182 (* (- 108) (* r r r s s r00)) (* (- 54) (* r r x r00)) ?x4204 (* (- 18) (* r r s00 r00 r00)) ?x7294 (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) ?x7295 (* (- 72) (* r r r x)) (* (- 108) (* r r x)) ?x4394 ?x7324 (* 216 (* r r r s x r00)) ?x7326 ?x7327 ?x7328 ?x7329 ?x7330 ?x7331 (* (- 108) (* r r r x x r00)) (* (- 18) (* s s s r00)) (* 72 (* r s s x r00)) ?x7333 (* 36 (* s s x r00)) (* 36 (* r r s s x r00)) (* 6 (* s s s00 r00 r00)) (* (- 36) (* r s s s r00)) (* (- 18) (* r r s s s r00)) ?x7336 ?x7337 ?x7338 ?x7339 ?x7340 ?x7341 (* (- 18) (* s x x r00)) (* 153 (* r r s)) (* 105 (* r r r s)) (* 27 (* r r r r s)) (* 54 (* r r r r s s00)) (* (- 36) (* r s x x r00)) ?x7363 (* 225 (* r r r r)) (* 369 (* r r r)) (* (- 18) (* r r s x x r00)) (* (- 36) (* r r r x s00 r00 r00)) (* (- 21) (* r r r r s00)) (* 6 (* r00 r00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) (* 6 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* (- 6) (* r00 r00 s00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* (- 2) (* ?x1448 ?x1448 ?x1524 ?x1518 ?x1518 ?x1518)) ?x5696 (* (- 6) (* s x s00 r00 r00)) (* 6 (* r r s s s00 r00 r00)) (* 3 (* s00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* (- 90) (* r r x s00 r00 r00)) (* 4 (* s00 s00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) ?x6010 (* (- 18) (* x s00 r00 r00)) (* (- 6) (* r r s x s00 r00 r00)) (* (- 9) (* r00 s00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* 18 (* r00 x00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* 18 (* s s00 r00 r00)) ?x6439 (* (- 24) (* r r s x s00)) (* (- 21) (* r s x s00)) (* (- 6) (* s x s00)) (* (- 171) (* r r r x s00)) (* (- 198) (* r r x s00)) (* (- 99) (* r x s00)) ?x6430 (* 9 (* r r r s s s00)) (* 24 (* r r s s s00)) (* 21 (* r s s s00)) (* (- 2) (* s00 ?x1448 ?x1448 ?x1524 ?x1518 ?x1518)) ?x6670 (* 3 (* ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) (* 72 (* r s s00 r00 r00)) (* 90 (* r r s s00 r00 r00)))))
 (let ((?x1409 (* x00 x00)))
 (let ((?x1439 (* (- 108) ?x1409)))
 (let ((?x1247 (* s00 s00 s00)))
 (let ((?x1438 (* (- 16) ?x1247)))
 (let ((?x1436 (* (- 36) (* s s r00 r00))))
 (let ((?x1119 (* s00 r00 r00 r00)))
 (let ((?x1434 (* (- 216) ?x1119)))
 (let ((?x945 (* r00 r00 r00 x00)))
 (let ((?x946 (* 432 ?x945)))
 (let ((?x868 (* s00 x00)))
 (let ((?x1192 (* 108 ?x868)))
 (let ((?x794 (* s00 s00 r00 r00)))
 (let ((?x795 (* 36 ?x794)))
 (let ((?x731 (* s00 s00 r00)))
 (let ((?x1075 (* 108 ?x731)))
 (let ((?x1063 (* 36 ?x710)))
 (let ((?x1428 (* (- 51) ?x654)))
 (let ((?x628 (* s r00 r00)))
 (let ((?x927 (* (- 36) ?x628)))
 (let ((?x1425 (* (- 108) ?x585)))
 (let ((?x576 (* s00 r00 x00)))
 (let ((?x1424 (* (- 216) ?x576)))
 (let ((?x583 (* 54 ?x489)))
 (let ((?x1050 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1440 (+ ?x143 ?x1050 ?x583 ?x1424 ?x1425 (* (- 15) (* s s)) ?x927 ?x1428 (* (- 108) ?x663) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1063 ?x1075 (* 66 ?x751) (* (- 54) (* s r00)) (* (- 108) ?x787) ?x795 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1192 (* 108 (* s x)) (* (- 108) (* x x)) ?x946 (* 12 (* s s s00)) ?x1434 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) ?x1436 ?x1438 (* 216 ?x1383) ?x1439)))
 (let (($x1441 (= ?x1440 0)))
 (let ((?x940 (* r00 r00 x00)))
 (let ((?x953 (* (- 36) ?x940)))
 (let ((?x869 (* 6 ?x868)))
 (let ((?x759 (* (- 2) ?x731)))
 (let ((?x979 (* (- 15) ?x654)))
 (let ((?x608 (* s s)))
 (let ((?x632 (* 3 ?x608)))
 (let ((?x614 (* (- 54) ?x585)))
 (let ((?x627 (* 24 ?x489)))
 (let ((?x1142 (+ ?x143 ?x1050 (* (- 24) (* r s)) (* 24 (* r s00)) ?x627 ?x614 ?x632 (* 54 (* r x)) (* 36 (* r x r00)) ?x927 ?x979 (* (- 6) ?x663) (* 54 (* x r00)) ?x1063 (* 4 (* s s r00)) (* (- 54) ?x722) ?x759 (* 12 ?x751) (* (- 24) (* s r00)) (* (- 6) ?x787) (* (- 2) (* s s00 r00)) ?x869 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) ?x888) ?x953 (* 2 (* r s s00)) (* (- 36) ?x1004) (* 36 (* x r00 r00)))))
 (let (($x1147 (= ?x1142 0)))
 (let ((?x711 (* 6 ?x710)))
 (let ((?x667 (* (- 4) ?x654)))
 (let ((?x609 (* 2 ?x608)))
 (let ((?x599 (* (- 18) ?x585)))
 (let ((?x604 (* 9 ?x489)))
 (let ((?x441 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x808 (+ ?x47 ?x441 (* (- 9) (* r s)) (* 9 (* r s00)) ?x604 ?x599 ?x609 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x628) ?x667 (* 18 (* x r00)) ?x711 (* (- 18) ?x722) (* 2 ?x751) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x815 (= ?x808 0)))
 (let ((?x532 (* r00 r00 r00)))
 (let ((?x533 (* 12 ?x532)))
 (let ((?x567 (* (- 6) ?x489)))
 (let ((?x564 (* (- 6) x00)))
 (let ((?x563 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x562 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x568 (+ ?x43 ?x562 ?x56 ?x44 ?x563 ?x564 (* 2 (* r s)) (* (- 12) ?x414) (* 4 (* r s00)) ?x567 ?x533)))
 (let (($x569 (= ?x568 0)))
 (let (($x397 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x364)) 0)))
 (and $x397 $x569 $x815 $x1147 $x1441 (not (= ?x6762 (- 18)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x3597 (exists ((r Int) (s Int) (x Int) )(! (let ((?x217 (* 6 r)))
 (let ((?x2665 (+ 3 s ?x217)))
 (let ((?x343 (* (- 1) s)))
 (let ((?x2779 (+ x ?x343)))
 (let ((?x1448 (+ 1 r)))
 (let ((?x1815 (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665)))
 (let ((?x1892 (* s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1654 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x1824 (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x2287 (* r00 r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x2290 (* x00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3654 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3640 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3343 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x3421 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x3402 (* r00 x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1363 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x1554 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1406 (* s00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1230 (* r00 r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x5319 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3589 (+ (* 3 (* s00 ?x1448 ?x1448 ?x1448)) (* (- 9) (* r00 s00 ?x1448 ?x1448 ?x1448)) (* 9 (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 18 (* x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 18 ?x5319) (* 4 (* s00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 3) (* ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 9) (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 2) (* s00 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 6) ?x1230) (* (- 4) ?x1406) (* 18 ?x1554) (* 4 (* s00 s00 ?x1448 ?x1448 ?x1448)) (* 9 (* r00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 2) (* ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 2) (* s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 2) (* ?x1448 ?x1448 ?x1448 ?x2665 ?x2665)) (* 18 (* x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665)) (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2665)) (* 9 (* r00 ?x1448 ?x1448 ?x1448 ?x2665)) (* 6 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448)) (* 6 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 18) (* r00 ?x1448 ?x1448 ?x1448 ?x2779)) (* (- 18) (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 2 ?x1363) (* 6 (* r00 r00 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 6) (* r00 r00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 18 (* x00 ?x1448 ?x1448 ?x1448 ?x1448)) (* (- 18) ?x3402) (* (- 2) (* s00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 9) ?x3421) (* 2 ?x3343) (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779)) (* 18 (* r00 x00 ?x1448 ?x1448 ?x1448)) (* (- 6) (* r00 r00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 3 (* s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 6 (* r00 r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 4 (* s00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 6) ?x3640) (* 9 ?x3654) (* (- 2) (* ?x1448 ?x1448 ?x2779 ?x2665 ?x2665 ?x2665)) (* 6 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 18 (* r00 x00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 9) (* r00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 18 (* r00 x00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 18) ?x2290) (* 6 ?x2287) (* (- 9) (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 3) (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 3 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 6) (* r00 r00 s00 ?x1448 ?x1448 ?x1448)) (* (- 9) (* s00 ?x1448 ?x1448 ?x1448 ?x1448)) (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 6 ?x1824) (* (- 3) (* ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 9) ?x1654) (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 6 (* r00 r00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 3 (* s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 3) (* ?x1448 ?x1448 ?x1448 ?x2665)) (* 9 ?x1892) (* (- 9) (* r00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 18) ?x1815))))
 (let ((?x1409 (* x00 x00)))
 (let ((?x4392 (* 108 ?x1409)))
 (let ((?x1553 (* (- 9) s)))
 (let ((?x5370 (* r00 r00 s00)))
 (let ((?x1792 (* (- 36) ?x5370)))
 (let ((?x137 (* 9 s00)))
 (let ((?x654 (* s00 s00)))
 (let ((?x975 (* 51 ?x654)))
 (let ((?x2115 (* r00 r00 s)))
 (let ((?x5025 (* 36 ?x2115)))
 (let ((?x1247 (* s00 s00 s00)))
 (let ((?x916 (* 16 ?x1247)))
 (let ((?x868 (* s00 x00)))
 (let ((?x5403 (* (- 108) ?x868)))
 (let ((?x945 (* r00 r00 r00 x00)))
 (let ((?x5168 (* (- 432) ?x945)))
 (let ((?x585 (* r00 x00)))
 (let ((?x3620 (* 108 ?x585)))
 (let ((?x4513 (+ (* 216 (* r00 s00 x00)) ?x3620 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x5168 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5403 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x916 (* (- 108) (* x s)) ?x5025 ?x975 (* (- 108) (* r00 x)) ?x137 ?x1792 ?x1553 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4392)))
 (let (($x1647 (= ?x4513 0)))
 (let ((?x3287 (* 15 ?x654)))
 (let ((?x940 (* r00 r00 x00)))
 (let ((?x3286 (* 36 ?x940)))
 (let ((?x3280 (* (- 6) ?x868)))
 (let ((?x4790 (* 54 ?x585)))
 (let ((?x4291 (+ (* 24 (* s r)) ?x4790 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3280 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5025 ?x3286 ?x3287 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1792 (* 54 (* x00 r)) ?x1553 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x562 (* (- 3) s)))
 (let ((?x7366 (* (- 6) ?x5370)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3773 (* r00 x)))
 (let ((?x7248 (* (- 18) ?x3773)))
 (let ((?x655 (* 4 ?x654)))
 (let ((?x1489 (* r00 s00)))
 (let ((?x6816 (* (- 9) ?x1489)))
 (let ((?x586 (* 18 ?x585)))
 (let ((?x4756 (+ (* 9 (* s r)) ?x586 ?x6816 (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2115) ?x655 ?x7248 ?x44 ?x7366 (* 18 (* x00 r)) ?x562 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x532 (* r00 r00 r00)))
 (let ((?x533 (* 12 ?x532)))
 (let ((?x564 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x563 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x4796 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x562 ?x563 (* 4 (* s00 r)) (* (- 6) ?x1489) ?x56 ?x564 ?x533)))
 (let (($x1457 (= (+ s00 ?x343 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1457 (= ?x4796 0) (= ?x4756 0) (= ?x4291 0) $x1647 (not (= ?x3589 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x6793 (lambda ((r Int) (s Int) (x Int) )(let ((?x217 (* 6 r)))
 (let ((?x1518 (+ 3 ?x217 s)))
 (let ((?x343 (* (- 1) s)))
 (let ((?x1524 (+ ?x343 x)))
 (let ((?x1448 (+ 1 r)))
 (let ((?x6670 (* 2 (* ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518 ?x1518))))
 (let ((?x6430 (* (- 9) (* ?x1448 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518))))
 (let ((?x6439 (* (- 18) (* r00 x00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x6010 (* 9 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x5696 (* (- 6) (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x7363 (* 54 (* r r r r r))))
 (let ((?x7341 (* 18 (* r r s x r00 x00))))
 (let ((?x7340 (* 36 (* r s x r00 x00))))
 (let ((?x7339 (* 18 (* s x r00 x00))))
 (let ((?x7338 (* 108 (* r r r x r00 x00))))
 (let ((?x7337 (* 270 (* r r x r00 x00))))
 (let ((?x7336 (* 216 (* r x r00 x00))))
 (let ((?x7333 (* (- 216) (* r s r00 x00))))
 (let ((?x7331 (* (- 54) (* s r00 x00))))
 (let ((?x7330 (* (- 36) (* r s s r00 x00))))
 (let ((?x7329 (* (- 18) (* r r s s r00 x00))))
 (let ((?x7328 (* 54 (* x r00 x00))))
 (let ((?x7327 (* (- 18) (* s s r00 x00))))
 (let ((?x7326 (* (- 108) (* r r r s r00 x00))))
 (let ((?x7324 (* 54 (* r r r00 x00))))
 (let ((?x4394 (* 18 (* r r r r00 x00))))
 (let ((?x7295 (* (- 18) (* r r r r x))))
 (let ((?x7294 (* (- 270) (* r r s r00 x00))))
 (let ((?x4204 (* (- 18) (* x00 ?x1448 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x4182 (* 18 (* r r r r x00))))
 (let ((?x7291 (* 72 (* r r r x00))))
 (let ((?x7290 (* 108 (* r r x00))))
 (let ((?x4074 (* 6 (* r00 r00 s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x3976 (* 2 (* s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518))))
 (let ((?x7262 (* 162 (* r r r00 r00))))
 (let ((?x7261 (* 126 (* r r r r00 r00))))
 (let ((?x7260 (* 36 (* r r r r r00 r00))))
 (let ((?x7239 (* 6 (* r r r s x s00 r00))))
 (let ((?x7235 (* 36 (* r r r r x s00 r00))))
 (let ((?x3581 (* (- 6) (* r00 r00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518))))
 (let ((?x3588 (* 18 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x7231 (* (- 6) (* r r r s s s00 r00))))
 (let ((?x7227 (* (- 36) (* r r r r s s00 r00))))
 (let ((?x7199 (* 6 (* r r r r s00 r00))))
 (let ((?x7139 (* (- 270) (* r s x00))))
 (let ((?x7138 (* (- 486) (* r r s x00))))
 (let ((?x7137 (* (- 18) (* s s x00))))
 (let ((?x7136 (* (- 108) (* r r r r s x00))))
 (let ((?x7135 (* (- 378) (* r r r s x00))))
 (let ((?x7134 (* (- 54) (* r s s x00))))
 (let ((?x7133 (* (- 54) (* r r s s x00))))
 (let ((?x7132 (* (- 18) (* r r r s s x00))))
 (let ((?x7131 (* 378 (* r r r x x00))))
 (let ((?x7130 (* 108 (* r r r r x x00))))
 (let ((?x7129 (* 486 (* r r x x00))))
 (let ((?x7128 (* 270 (* r x x00))))
 (let ((?x2548 (* (- 4) (* s00 s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x2337 (* 4 (* r r r s00 s00))))
 (let ((?x7127 (* 12 (* r r s00 s00))))
 (let ((?x2241 (* 18 (* r r r s x x00))))
 (let ((?x7126 (* 54 (* r r s x x00))))
 (let ((?x7125 (* 54 (* r s x x00))))
 (let ((?x2225 (* 18 (* s x x00))))
 (let ((?x7053 (* 4 (* r r s x s00 s00))))
 (let ((?x7052 (* 8 (* r s x s00 s00))))
 (let ((?x7051 (* 4 (* s x s00 s00))))
 (let ((?x7050 (* 24 (* r r r x s00 s00))))
 (let ((?x1798 (* 12 (* x s00 s00))))
 (let ((?x1787 (* (- 12) (* s s00 s00))))
 (let ((?x6804 (* (- 60) (* r r s s00 s00))))
 (let ((?x6803 (* (- 24) (* r r r s s00 s00))))
 (let ((?x6802 (* (- 4) (* s s s00 s00))))
 (let ((?x6801 (* (- 8) (* r s s s00 s00))))
 (let ((?x6800 (* 48 (* r x s00 s00))))
 (let ((?x6806 (* (- 4) (* r r s s s00 s00))))
 (let ((?x6805 (* (- 48) (* r s s00 s00))))
 (let ((?x6808 (* 60 (* r r x s00 s00))))
 (let ((?x1383 (* x x00)))
 (let ((?x2247 (* 54 ?x1383)))
 (let ((?x1158 (* (- 9) (* r00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518))))
 (let ((?x1004 (* r r00 x00)))
 (let ((?x6848 (* 54 ?x1004)))
 (let ((?x888 (* r s00 s00)))
 (let ((?x6852 (* 12 ?x888)))
 (let ((?x1134 (* 18 (* r00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x881 (* 6 (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518))))
 (let ((?x787 (* s x00)))
 (let ((?x2250 (* (- 54) ?x787)))
 (let ((?x751 (* s s00)))
 (let ((?x6853 (* 16 ?x751)))
 (let ((?x722 (* r x00)))
 (let ((?x6856 (* 72 ?x722)))
 (let ((?x710 (* s00 r00 r00)))
 (let ((?x1691 (* (- 6) ?x710)))
 (let ((?x663 (* x s00)))
 (let ((?x6855 (* (- 18) ?x663)))
 (let ((?x654 (* s00 s00)))
 (let ((?x655 (* 4 ?x654)))
 (let ((?x585 (* r00 x00)))
 (let ((?x586 (* 18 ?x585)))
 (let ((?x489 (* s00 r00)))
 (let ((?x5516 (* (- 3) ?x489)))
 (let ((?x467 (* 9 (* s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518))))
 (let ((?x414 (* r r00 r00)))
 (let ((?x6862 (* 90 ?x414)))
 (let ((?x364 (* r00 r00)))
 (let ((?x6863 (* 18 ?x364)))
 (let ((?x4188 (* 18 x00)))
 (let ((?x5388 (* 9 r00)))
 (let ((?x6868 (* (- 12) s00)))
 (let ((?x6867 (* (- 18) x)))
 (let ((?x6870 (* 24 s)))
 (let ((?x6762 (+ (* 117 r) ?x6870 ?x6867 ?x6868 ?x5388 ?x4188 (* 297 (* r r)) ?x6863 (* 99 (* r s)) ?x6862 (* (- 3) (* s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* (- 57) (* r s00)) ?x467 (* 36 (* r r r s s00 r00 r00)) ?x5516 ?x586 (* (- 72) (* r x)) (* 57 (* r s r00)) (* (- 54) (* r x r00)) (* 6 (* s r00 r00)) ?x655 ?x6855 (* (- 72) (* r x s00 r00 r00)) (* (- 18) (* x r00)) (* (- 9) (* s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) ?x1691 (* (- 54) (* s s r00)) ?x6856 ?x6853 (* 21 (* s r00)) ?x2250 (* (- 3) (* r s00 r00)) (* 12 (* r s s s00 r00 r00)) (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1518 ?x1518)) (* 9 (* s s00 r00)) ?x881 (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) ?x1134 ?x6852 (* (- 18) (* r s00 r00 r00)) (* 93 (* r s s00)) (* 6 (* s s s00)) ?x6848 (* (- 54) (* r r r r x s00)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x1524 ?x1518 ?x1518)) ?x1158 (* 18 (* x00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* 6 (* r00 r00 ?x1448 ?x1448 ?x1524 ?x1518 ?x1518)) (* (- 9) (* x s00 r00)) (* (- 3) (* ?x1448 ?x1448 ?x1524 ?x1518 ?x1518)) (* (- 3) (* ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) (* (- 12) (* r s x s00 r00 r00)) ?x2247 (* (- 99) (* r r s00)) (* (- 75) (* r r r s00)) ?x6808 ?x6805 ?x6806 ?x6800 ?x6801 ?x6802 ?x6803 (* 9 (* r00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) ?x6804 ?x1787 ?x1798 ?x7050 ?x7051 ?x7052 ?x7053 (* 169 (* r r r s s00)) (* 192 (* r r s s00)) (* (- 6) (* r r r s00 r00 r00)) ?x2225 ?x7125 ?x7126 ?x2241 (* (- 2) (* s00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) ?x7127 ?x2337 (* (- 216) (* r s s r00)) ?x2548 (* (- 2) (* ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518 ?x1518)) ?x7128 ?x7129 ?x7130 ?x7131 ?x7132 ?x7133 ?x7134 ?x7135 ?x7136 ?x7137 (* (- 2) (* ?x1448 ?x1448 ?x1448 ?x1518 ?x1518)) ?x7138 ?x7139 (* 108 (* s x r00)) (* (- 270) (* r r s s r00)) (* 432 (* r s x r00)) (* 3 (* r r r s r00)) (* 45 (* r r s r00)) (* (- 108) (* r r r r r00)) (* (- 99) (* r r r r00)) (* (- 9) (* r r r00)) (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518)) (* 27 (* r r00)) (* 540 (* r r s x r00)) (* (- 36) (* r r r r r r00)) (* 9 (* r r s00 r00)) (* 15 (* r r r s00 r00)) ?x7199 (* (- 6) (* r r r r s r00)) (* (- 9) (* r r r s x s00)) (* 18 (* r s s00 r00)) (* (- 27) (* r r s s00 r00)) (* (- 72) (* r r r s s00 r00)) ?x7227 (* 3 (* s s s00 r00)) (* (- 9) (* r r s s s00 r00)) ?x7231 ?x3588 (* (- 18) (* r x s00 r00)) (* 27 (* r r x s00 r00)) ?x3581 (* 72 (* r r r x s00 r00)) ?x7235 (* (- 3) (* s x s00 r00)) (* 9 (* r00 ?x1448 ?x1448 ?x1524 ?x1518 ?x1518)) (* 9 (* r r s x s00 r00)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) ?x7239 (* (- 54) (* x x r00)) (* (- 270) (* r r x x r00)) (* 18 (* r r s r00 r00)) (* 18 (* r s r00 r00)) ?x7260 ?x7261 ?x7262 (* (- 18) (* r00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) ?x3976 (* 6 (* r r r s r00 r00)) (* (- 18) (* r r r x r00)) (* (- 216) (* r x x r00)) ?x4074 ?x7290 ?x7291 ?x4182 (* (- 108) (* r r r s s r00)) (* (- 54) (* r r x r00)) ?x4204 (* (- 18) (* r r s00 r00 r00)) ?x7294 (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) ?x7295 (* (- 72) (* r r r x)) (* (- 108) (* r r x)) ?x4394 ?x7324 (* 216 (* r r r s x r00)) ?x7326 ?x7327 ?x7328 ?x7329 ?x7330 ?x7331 (* (- 108) (* r r r x x r00)) (* (- 18) (* s s s r00)) (* 72 (* r s s x r00)) ?x7333 (* 36 (* s s x r00)) (* 36 (* r r s s x r00)) (* 6 (* s s s00 r00 r00)) (* (- 36) (* r s s s r00)) (* (- 18) (* r r s s s r00)) ?x7336 ?x7337 ?x7338 ?x7339 ?x7340 ?x7341 (* (- 18) (* s x x r00)) (* 153 (* r r s)) (* 105 (* r r r s)) (* 27 (* r r r r s)) (* 54 (* r r r r s s00)) (* (- 36) (* r s x x r00)) ?x7363 (* 225 (* r r r r)) (* 369 (* r r r)) (* (- 18) (* r r s x x r00)) (* (- 36) (* r r r x s00 r00 r00)) (* (- 21) (* r r r r s00)) (* 6 (* r00 r00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) (* 6 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* (- 6) (* r00 r00 s00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* (- 2) (* ?x1448 ?x1448 ?x1524 ?x1518 ?x1518 ?x1518)) ?x5696 (* (- 6) (* s x s00 r00 r00)) (* 6 (* r r s s s00 r00 r00)) (* 3 (* s00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* (- 90) (* r r x s00 r00 r00)) (* 4 (* s00 s00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) ?x6010 (* (- 18) (* x s00 r00 r00)) (* (- 6) (* r r s x s00 r00 r00)) (* (- 9) (* r00 s00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* 18 (* r00 x00 ?x1448 ?x1448 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518)) (* 18 (* s s00 r00 r00)) ?x6439 (* (- 24) (* r r s x s00)) (* (- 21) (* r s x s00)) (* (- 6) (* s x s00)) (* (- 171) (* r r r x s00)) (* (- 198) (* r r x s00)) (* (- 99) (* r x s00)) ?x6430 (* 9 (* r r r s s s00)) (* 24 (* r r s s s00)) (* 21 (* r s s s00)) (* (- 2) (* s00 ?x1448 ?x1448 ?x1524 ?x1518 ?x1518)) ?x6670 (* 3 (* ?x1448 ?x1448 ?x1448 ?x1524 ?x1524 ?x1524 ?x1518 ?x1518 ?x1518 ?x1518)) (* 72 (* r s s00 r00 r00)) (* 90 (* r r s s00 r00 r00)))))
 (let ((?x1409 (* x00 x00)))
 (let ((?x1439 (* (- 108) ?x1409)))
 (let ((?x1247 (* s00 s00 s00)))
 (let ((?x1438 (* (- 16) ?x1247)))
 (let ((?x1436 (* (- 36) (* s s r00 r00))))
 (let ((?x1119 (* s00 r00 r00 r00)))
 (let ((?x1434 (* (- 216) ?x1119)))
 (let ((?x945 (* r00 r00 r00 x00)))
 (let ((?x946 (* 432 ?x945)))
 (let ((?x868 (* s00 x00)))
 (let ((?x1192 (* 108 ?x868)))
 (let ((?x794 (* s00 s00 r00 r00)))
 (let ((?x795 (* 36 ?x794)))
 (let ((?x731 (* s00 s00 r00)))
 (let ((?x1075 (* 108 ?x731)))
 (let ((?x1063 (* 36 ?x710)))
 (let ((?x1428 (* (- 51) ?x654)))
 (let ((?x628 (* s r00 r00)))
 (let ((?x927 (* (- 36) ?x628)))
 (let ((?x1425 (* (- 108) ?x585)))
 (let ((?x576 (* s00 r00 x00)))
 (let ((?x1424 (* (- 216) ?x576)))
 (let ((?x583 (* 54 ?x489)))
 (let ((?x1050 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1440 (+ ?x143 ?x1050 ?x583 ?x1424 ?x1425 (* (- 15) (* s s)) ?x927 ?x1428 (* (- 108) ?x663) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1063 ?x1075 (* 66 ?x751) (* (- 54) (* s r00)) (* (- 108) ?x787) ?x795 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1192 (* 108 (* s x)) (* (- 108) (* x x)) ?x946 (* 12 (* s s s00)) ?x1434 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) ?x1436 ?x1438 (* 216 ?x1383) ?x1439)))
 (let (($x1441 (= ?x1440 0)))
 (let ((?x940 (* r00 r00 x00)))
 (let ((?x953 (* (- 36) ?x940)))
 (let ((?x869 (* 6 ?x868)))
 (let ((?x759 (* (- 2) ?x731)))
 (let ((?x979 (* (- 15) ?x654)))
 (let ((?x608 (* s s)))
 (let ((?x632 (* 3 ?x608)))
 (let ((?x614 (* (- 54) ?x585)))
 (let ((?x627 (* 24 ?x489)))
 (let ((?x1142 (+ ?x143 ?x1050 (* (- 24) (* r s)) (* 24 (* r s00)) ?x627 ?x614 ?x632 (* 54 (* r x)) (* 36 (* r x r00)) ?x927 ?x979 (* (- 6) ?x663) (* 54 (* x r00)) ?x1063 (* 4 (* s s r00)) (* (- 54) ?x722) ?x759 (* 12 ?x751) (* (- 24) (* s r00)) (* (- 6) ?x787) (* (- 2) (* s s00 r00)) ?x869 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) ?x888) ?x953 (* 2 (* r s s00)) (* (- 36) ?x1004) (* 36 (* x r00 r00)))))
 (let (($x1147 (= ?x1142 0)))
 (let ((?x711 (* 6 ?x710)))
 (let ((?x667 (* (- 4) ?x654)))
 (let ((?x609 (* 2 ?x608)))
 (let ((?x599 (* (- 18) ?x585)))
 (let ((?x604 (* 9 ?x489)))
 (let ((?x441 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x808 (+ ?x47 ?x441 (* (- 9) (* r s)) (* 9 (* r s00)) ?x604 ?x599 ?x609 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x628) ?x667 (* 18 (* x r00)) ?x711 (* (- 18) ?x722) (* 2 ?x751) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x815 (= ?x808 0)))
 (let ((?x532 (* r00 r00 r00)))
 (let ((?x533 (* 12 ?x532)))
 (let ((?x567 (* (- 6) ?x489)))
 (let ((?x564 (* (- 6) x00)))
 (let ((?x563 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x562 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x568 (+ ?x43 ?x562 ?x56 ?x44 ?x563 ?x564 (* 2 (* r s)) (* (- 12) ?x414) (* 4 (* r s00)) ?x567 ?x533)))
 (let (($x569 (= ?x568 0)))
 (let (($x397 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x364)) 0)))
 (let (($x2255 (and $x397 $x569 $x815 $x1147 $x1441 (not (= ?x6762 (- 18))))))
 (let ((?x2665 (+ 3 s ?x217)))
 (let ((?x2779 (+ x ?x343)))
 (let ((?x1815 (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665)))
 (let ((?x1892 (* s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1654 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x1824 (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x2287 (* r00 r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x2290 (* x00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3654 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3640 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3343 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x3421 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x3402 (* r00 x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1363 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x1554 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1406 (* s00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1230 (* r00 r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x5319 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3589 (+ (* 3 (* s00 ?x1448 ?x1448 ?x1448)) (* (- 9) (* r00 s00 ?x1448 ?x1448 ?x1448)) (* 9 (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 18 (* x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 18 ?x5319) (* 4 (* s00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 3) (* ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 9) (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 2) (* s00 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 6) ?x1230) (* (- 4) ?x1406) (* 18 ?x1554) (* 4 (* s00 s00 ?x1448 ?x1448 ?x1448)) (* 9 (* r00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 2) (* ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 2) (* s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 2) (* ?x1448 ?x1448 ?x1448 ?x2665 ?x2665)) (* 18 (* x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665)) (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2665)) (* 9 (* r00 ?x1448 ?x1448 ?x1448 ?x2665)) (* 6 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448)) (* 6 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 18) (* r00 ?x1448 ?x1448 ?x1448 ?x2779)) (* (- 18) (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 2 ?x1363) (* 6 (* r00 r00 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 6) (* r00 r00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 18 (* x00 ?x1448 ?x1448 ?x1448 ?x1448)) (* (- 18) ?x3402) (* (- 2) (* s00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 9) ?x3421) (* 2 ?x3343) (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779)) (* 18 (* r00 x00 ?x1448 ?x1448 ?x1448)) (* (- 6) (* r00 r00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 3 (* s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 6 (* r00 r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 4 (* s00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 6) ?x3640) (* 9 ?x3654) (* (- 2) (* ?x1448 ?x1448 ?x2779 ?x2665 ?x2665 ?x2665)) (* 6 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 18 (* r00 x00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 9) (* r00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 18 (* r00 x00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 18) ?x2290) (* 6 ?x2287) (* (- 9) (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 3) (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 3 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 6) (* r00 r00 s00 ?x1448 ?x1448 ?x1448)) (* (- 9) (* s00 ?x1448 ?x1448 ?x1448 ?x1448)) (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 6 ?x1824) (* (- 3) (* ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 9) ?x1654) (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 6 (* r00 r00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 3 (* s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 3) (* ?x1448 ?x1448 ?x1448 ?x2665)) (* 9 ?x1892) (* (- 9) (* r00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 18) ?x1815))))
 (let ((?x4392 (* 108 ?x1409)))
 (let ((?x1553 (* (- 9) s)))
 (let ((?x5370 (* r00 r00 s00)))
 (let ((?x1792 (* (- 36) ?x5370)))
 (let ((?x137 (* 9 s00)))
 (let ((?x975 (* 51 ?x654)))
 (let ((?x2115 (* r00 r00 s)))
 (let ((?x5025 (* 36 ?x2115)))
 (let ((?x916 (* 16 ?x1247)))
 (let ((?x5403 (* (- 108) ?x868)))
 (let ((?x5168 (* (- 432) ?x945)))
 (let ((?x3620 (* 108 ?x585)))
 (let ((?x4513 (+ (* 216 (* r00 s00 x00)) ?x3620 (* (- 54) (* r00 s00)) (* 15 ?x608) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x5168 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5403 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x916 (* (- 108) (* x s)) ?x5025 ?x975 (* (- 108) (* r00 x)) ?x137 ?x1792 ?x1553 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4392)))
 (let (($x1647 (= ?x4513 0)))
 (let ((?x3287 (* 15 ?x654)))
 (let ((?x3286 (* 36 ?x940)))
 (let ((?x3280 (* (- 6) ?x868)))
 (let ((?x4790 (* 54 ?x585)))
 (let ((?x4291 (+ (* 24 (* s r)) ?x4790 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x608) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3280 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5025 ?x3286 ?x3287 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1792 (* 54 (* x00 r)) ?x1553 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x7366 (* (- 6) ?x5370)))
 (let ((?x3773 (* r00 x)))
 (let ((?x7248 (* (- 18) ?x3773)))
 (let ((?x1489 (* r00 s00)))
 (let ((?x6816 (* (- 9) ?x1489)))
 (let ((?x4756 (+ (* 9 (* s r)) ?x586 ?x6816 (* (- 2) ?x608) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2115) ?x655 ?x7248 ?x44 ?x7366 (* 18 (* x00 r)) ?x562 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x4796 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x562 ?x563 (* 4 (* s00 r)) (* (- 6) ?x1489) ?x56 ?x564 ?x533)))
 (let (($x1457 (= (+ s00 ?x343 (* 3 (* r r)) (* (- 3) ?x364)) 0)))
 (let (($x3595 (and $x1457 (= ?x4796 0) (= ?x4756 0) (= ?x4291 0) $x1647 (not (= ?x3589 0)))))
 (rewrite (= $x3595 $x2255)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x3730 (exists ((r Int) (s Int) (x Int) )(! (let ((?x217 (* 6 r)))
 (let ((?x2665 (+ 3 s ?x217)))
 (let ((?x343 (* (- 1) s)))
 (let ((?x2779 (+ x ?x343)))
 (let ((?x1448 (+ 1 r)))
 (let ((?x1815 (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665)))
 (let ((?x1892 (* s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1654 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x1824 (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x2287 (* r00 r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x2290 (* x00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3654 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3640 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3343 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x3421 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x3402 (* r00 x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1363 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x1554 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1406 (* s00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1230 (* r00 r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x5319 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x6268 (+ (* (- 3) (* s00 ?x1448 ?x1448 ?x1448)) (* 9 (* r00 s00 ?x1448 ?x1448 ?x1448)) (* (- 9) (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 18 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 18) (* x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 18) ?x5319) (* (- 4) (* s00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 3 (* ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 9 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* 2 (* s00 ?x1448 ?x1448 ?x1448 ?x2665)) (* 6 ?x1230) (* 4 ?x1406) (* (- 18) ?x1554) (* (- 4) (* s00 s00 ?x1448 ?x1448 ?x1448)) (* (- 9) (* r00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 2 (* ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665 ?x2665)) (* 2 (* s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 2 (* ?x1448 ?x1448 ?x1448 ?x2665 ?x2665)) (* (- 18) (* x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* 18 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665)) (* 6 (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 9) (* r00 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 6) (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448)) (* (- 6) (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* 18 (* r00 ?x1448 ?x1448 ?x1448 ?x2779)) (* 18 (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 2) ?x1363) (* (- 6) (* r00 r00 ?x1448 ?x1448 ?x1448 ?x2665)) (* 6 (* r00 r00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 18) (* x00 ?x1448 ?x1448 ?x1448 ?x1448)) (* 18 ?x3402) (* 2 (* s00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 9 ?x3421) (* (- 2) ?x3343) (* 18 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779)) (* (- 18) (* r00 x00 ?x1448 ?x1448 ?x1448)) (* 6 (* r00 r00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 3) (* s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 6) (* r00 r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 4) (* s00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 6 ?x3640) (* (- 9) ?x3654) (* 2 (* ?x1448 ?x1448 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 6) (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 18) (* r00 x00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 9 (* r00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 18) (* r00 x00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 9) (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2665)) (* 18 ?x2290) (* (- 6) ?x2287) (* 9 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 3 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 3) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 9) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 6 (* r00 r00 s00 ?x1448 ?x1448 ?x1448)) (* 9 (* s00 ?x1448 ?x1448 ?x1448 ?x1448)) (* 6 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 9) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 6) ?x1824) (* 3 (* ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 9 ?x1654) (* 6 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 6) (* r00 r00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 3) (* s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 3 (* ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 9) ?x1892) (* 9 (* r00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 18 ?x1815))))
 (let ((?x1409 (* x00 x00)))
 (let ((?x4392 (* 108 ?x1409)))
 (let ((?x1553 (* (- 9) s)))
 (let ((?x5370 (* r00 r00 s00)))
 (let ((?x1792 (* (- 36) ?x5370)))
 (let ((?x137 (* 9 s00)))
 (let ((?x654 (* s00 s00)))
 (let ((?x975 (* 51 ?x654)))
 (let ((?x2115 (* r00 r00 s)))
 (let ((?x5025 (* 36 ?x2115)))
 (let ((?x1247 (* s00 s00 s00)))
 (let ((?x916 (* 16 ?x1247)))
 (let ((?x868 (* s00 x00)))
 (let ((?x5403 (* (- 108) ?x868)))
 (let ((?x945 (* r00 r00 r00 x00)))
 (let ((?x5168 (* (- 432) ?x945)))
 (let ((?x585 (* r00 x00)))
 (let ((?x3620 (* 108 ?x585)))
 (let ((?x4513 (+ (* 216 (* r00 s00 x00)) ?x3620 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x5168 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5403 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x916 (* (- 108) (* x s)) ?x5025 ?x975 (* (- 108) (* r00 x)) ?x137 ?x1792 ?x1553 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4392)))
 (let (($x1647 (= ?x4513 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1050 (* (- 9) s00)))
 (let ((?x979 (* (- 15) ?x654)))
 (let ((?x940 (* r00 r00 x00)))
 (let ((?x953 (* (- 36) ?x940)))
 (let ((?x869 (* 6 ?x868)))
 (let ((?x608 (* s s)))
 (let ((?x632 (* 3 ?x608)))
 (let ((?x614 (* (- 54) ?x585)))
 (let ((?x4439 (+ (* (- 24) (* s r)) ?x614 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x632 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x869 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2115) ?x953 ?x979 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1050 (* 36 ?x5370) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x441 (* (- 3) s00)))
 (let ((?x667 (* (- 4) ?x654)))
 (let ((?x609 (* 2 ?x608)))
 (let ((?x599 (* (- 18) ?x585)))
 (let ((?x4679 (+ (* (- 9) (* s r)) ?x599 (* 9 (* r00 s00)) ?x609 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2115) ?x667 (* 18 (* r00 x)) ?x441 (* 6 ?x5370) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2745 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x441 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1457 (= (+ s00 ?x343 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1457 (= ?x2745 0) (= ?x4679 0) (= ?x4439 0) $x1647 (not (= ?x6268 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3602 (lambda ((r Int) (s Int) (x Int) )(let ((?x217 (* 6 r)))
 (let ((?x2665 (+ 3 s ?x217)))
 (let ((?x343 (* (- 1) s)))
 (let ((?x2779 (+ x ?x343)))
 (let ((?x1448 (+ 1 r)))
 (let ((?x1815 (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665)))
 (let ((?x1892 (* s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1654 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x1824 (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x2287 (* r00 r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x2290 (* x00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3654 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3640 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3343 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x3421 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x3402 (* r00 x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1363 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x1554 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1406 (* s00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1230 (* r00 r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x5319 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3589 (+ (* 3 (* s00 ?x1448 ?x1448 ?x1448)) (* (- 9) (* r00 s00 ?x1448 ?x1448 ?x1448)) (* 9 (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 18 (* x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 18 ?x5319) (* 4 (* s00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 3) (* ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 9) (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 2) (* s00 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 6) ?x1230) (* (- 4) ?x1406) (* 18 ?x1554) (* 4 (* s00 s00 ?x1448 ?x1448 ?x1448)) (* 9 (* r00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 2) (* ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 2) (* s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 2) (* ?x1448 ?x1448 ?x1448 ?x2665 ?x2665)) (* 18 (* x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665)) (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2665)) (* 9 (* r00 ?x1448 ?x1448 ?x1448 ?x2665)) (* 6 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448)) (* 6 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 18) (* r00 ?x1448 ?x1448 ?x1448 ?x2779)) (* (- 18) (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 2 ?x1363) (* 6 (* r00 r00 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 6) (* r00 r00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 18 (* x00 ?x1448 ?x1448 ?x1448 ?x1448)) (* (- 18) ?x3402) (* (- 2) (* s00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 9) ?x3421) (* 2 ?x3343) (* (- 18) (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779)) (* 18 (* r00 x00 ?x1448 ?x1448 ?x1448)) (* (- 6) (* r00 r00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 3 (* s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 6 (* r00 r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 4 (* s00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 6) ?x3640) (* 9 ?x3654) (* (- 2) (* ?x1448 ?x1448 ?x2779 ?x2665 ?x2665 ?x2665)) (* 6 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 18 (* r00 x00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 9) (* r00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 18 (* r00 x00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 18) ?x2290) (* 6 ?x2287) (* (- 9) (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 3) (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 3 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 6) (* r00 r00 s00 ?x1448 ?x1448 ?x1448)) (* (- 9) (* s00 ?x1448 ?x1448 ?x1448 ?x1448)) (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 9 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 6 ?x1824) (* (- 3) (* ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 9) ?x1654) (* (- 6) (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 6 (* r00 r00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 3 (* s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 3) (* ?x1448 ?x1448 ?x1448 ?x2665)) (* 9 ?x1892) (* (- 9) (* r00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 18) ?x1815))))
 (let ((?x1409 (* x00 x00)))
 (let ((?x4392 (* 108 ?x1409)))
 (let ((?x1553 (* (- 9) s)))
 (let ((?x5370 (* r00 r00 s00)))
 (let ((?x1792 (* (- 36) ?x5370)))
 (let ((?x137 (* 9 s00)))
 (let ((?x654 (* s00 s00)))
 (let ((?x975 (* 51 ?x654)))
 (let ((?x2115 (* r00 r00 s)))
 (let ((?x5025 (* 36 ?x2115)))
 (let ((?x1247 (* s00 s00 s00)))
 (let ((?x916 (* 16 ?x1247)))
 (let ((?x868 (* s00 x00)))
 (let ((?x5403 (* (- 108) ?x868)))
 (let ((?x945 (* r00 r00 r00 x00)))
 (let ((?x5168 (* (- 432) ?x945)))
 (let ((?x585 (* r00 x00)))
 (let ((?x3620 (* 108 ?x585)))
 (let ((?x4513 (+ (* 216 (* r00 s00 x00)) ?x3620 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x5168 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5403 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x916 (* (- 108) (* x s)) ?x5025 ?x975 (* (- 108) (* r00 x)) ?x137 ?x1792 ?x1553 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4392)))
 (let (($x1647 (= ?x4513 0)))
 (let ((?x3287 (* 15 ?x654)))
 (let ((?x940 (* r00 r00 x00)))
 (let ((?x3286 (* 36 ?x940)))
 (let ((?x3280 (* (- 6) ?x868)))
 (let ((?x4790 (* 54 ?x585)))
 (let ((?x4291 (+ (* 24 (* s r)) ?x4790 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3280 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5025 ?x3286 ?x3287 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1792 (* 54 (* x00 r)) ?x1553 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x562 (* (- 3) s)))
 (let ((?x7366 (* (- 6) ?x5370)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3773 (* r00 x)))
 (let ((?x7248 (* (- 18) ?x3773)))
 (let ((?x655 (* 4 ?x654)))
 (let ((?x1489 (* r00 s00)))
 (let ((?x6816 (* (- 9) ?x1489)))
 (let ((?x586 (* 18 ?x585)))
 (let ((?x4756 (+ (* 9 (* s r)) ?x586 ?x6816 (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2115) ?x655 ?x7248 ?x44 ?x7366 (* 18 (* x00 r)) ?x562 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x532 (* r00 r00 r00)))
 (let ((?x533 (* 12 ?x532)))
 (let ((?x564 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x563 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x4796 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x562 ?x563 (* 4 (* s00 r)) (* (- 6) ?x1489) ?x56 ?x564 ?x533)))
 (let (($x1457 (= (+ s00 ?x343 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3595 (and $x1457 (= ?x4796 0) (= ?x4756 0) (= ?x4291 0) $x1647 (not (= ?x3589 0)))))
 (let ((?x6268 (+ (* (- 3) (* s00 ?x1448 ?x1448 ?x1448)) (* 9 (* r00 s00 ?x1448 ?x1448 ?x1448)) (* (- 9) (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 18 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 18) (* x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 18) ?x5319) (* (- 4) (* s00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 3 (* ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 9 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* 2 (* s00 ?x1448 ?x1448 ?x1448 ?x2665)) (* 6 ?x1230) (* 4 ?x1406) (* (- 18) ?x1554) (* (- 4) (* s00 s00 ?x1448 ?x1448 ?x1448)) (* (- 9) (* r00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 2 (* ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665 ?x2665)) (* 2 (* s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 2 (* ?x1448 ?x1448 ?x1448 ?x2665 ?x2665)) (* (- 18) (* x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* 18 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665)) (* 6 (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 9) (* r00 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 6) (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448)) (* (- 6) (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* 18 (* r00 ?x1448 ?x1448 ?x1448 ?x2779)) (* 18 (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 2) ?x1363) (* (- 6) (* r00 r00 ?x1448 ?x1448 ?x1448 ?x2665)) (* 6 (* r00 r00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 18) (* x00 ?x1448 ?x1448 ?x1448 ?x1448)) (* 18 ?x3402) (* 2 (* s00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 9 ?x3421) (* (- 2) ?x3343) (* 18 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779)) (* (- 18) (* r00 x00 ?x1448 ?x1448 ?x1448)) (* 6 (* r00 r00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 3) (* s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 6) (* r00 r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 4) (* s00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 6 ?x3640) (* (- 9) ?x3654) (* 2 (* ?x1448 ?x1448 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 6) (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 18) (* r00 x00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 9 (* r00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 18) (* r00 x00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 9) (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2665)) (* 18 ?x2290) (* (- 6) ?x2287) (* 9 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 3 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 3) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 9) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 6 (* r00 r00 s00 ?x1448 ?x1448 ?x1448)) (* 9 (* s00 ?x1448 ?x1448 ?x1448 ?x1448)) (* 6 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 9) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 6) ?x1824) (* 3 (* ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 9 ?x1654) (* 6 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 6) (* r00 r00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 3) (* s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 3 (* ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 9) ?x1892) (* 9 (* r00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 18 ?x1815))))
 (let ((?x143 (* 9 s)))
 (let ((?x1050 (* (- 9) s00)))
 (let ((?x979 (* (- 15) ?x654)))
 (let ((?x953 (* (- 36) ?x940)))
 (let ((?x869 (* 6 ?x868)))
 (let ((?x608 (* s s)))
 (let ((?x632 (* 3 ?x608)))
 (let ((?x614 (* (- 54) ?x585)))
 (let ((?x4439 (+ (* (- 24) (* s r)) ?x614 (* 36 (* r00 x r)) (* 24 ?x1489) ?x632 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x869 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2115) ?x953 ?x979 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 ?x3773) ?x1050 (* 36 ?x5370) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x441 (* (- 3) s00)))
 (let ((?x667 (* (- 4) ?x654)))
 (let ((?x609 (* 2 ?x608)))
 (let ((?x599 (* (- 18) ?x585)))
 (let ((?x4679 (+ (* (- 9) (* s r)) ?x599 (* 9 ?x1489) ?x609 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2115) ?x667 (* 18 ?x3773) ?x441 (* 6 ?x5370) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2745 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x441 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1489) (* (- 6) x) ?x59 (* (- 12) ?x532))))
 (let (($x2432 (and $x1457 (= ?x2745 0) (= ?x4679 0) (= ?x4439 0) $x1647 (not (= ?x6268 0)))))
 (rewrite (= $x2432 $x3595))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x340 (exists ((r Int) (s Int) (x Int) )(! (let ((?x219 (- x s)))
 (let ((?x217 (* 6 r)))
 (let ((?x218 (+ s ?x217 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x318 (* 6 ?x213 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219)))
 (let ((?x304 (* 6 ?x213 ?x213 ?x213 r00 r00 ?x218 ?x218 ?x218 s00 ?x219 ?x219 ?x219)))
 (let ((?x286 (* 6 ?x213 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 s00 ?x219 ?x219 ?x219)))
 (let ((?x233 (* 6 ?x213 ?x213 ?x213 r00 r00 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219)))
 (let ((?x216 (+ (* (- 3) ?x213 ?x213 ?x213 s00) (* 9 ?x213 ?x213 ?x213 r00 s00))))
 (let ((?x223 (+ (- ?x216 (* 9 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219)) (* 18 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219))))
 (let ((?x228 (- (- ?x223 (* 18 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x219 ?x219 x00)) (* 18 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x235 (+ (- ?x228 (* 4 ?x213 ?x213 ?x218 s00 s00 ?x219)) (* 3 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219) (* 9 ?x213 ?x213 ?x213 ?x218 s00 ?x219) (* 2 ?x213 ?x213 ?x213 ?x218 s00) ?x233 (* 4 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 s00 s00 ?x219 ?x219 ?x219))))
 (let ((?x239 (- ?x235 (* 18 ?x213 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x241 (- (- ?x239 (* 4 ?x213 ?x213 ?x213 s00 s00)) (* 9 ?x213 ?x213 r00 ?x218 ?x218 ?x219))))
 (let ((?x245 (+ ?x241 (* 2 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219) (* 2 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 s00 ?x219 ?x219) (* 2 ?x213 ?x213 ?x213 ?x218 ?x218))))
 (let ((?x250 (+ (- ?x245 (* 18 ?x213 ?x213 ?x213 ?x218 ?x219 x00)) (* 18 ?x213 ?x213 ?x213 ?x218 ?x219 ?x219) (* 6 ?x213 ?x213 ?x213 ?x213 r00 ?x218))))
 (let ((?x255 (- (- ?x250 (* 9 ?x213 ?x213 ?x213 r00 ?x218)) (* 6 ?x213 ?x213 ?x213 ?x213 r00 s00))))
 (let ((?x259 (+ (- ?x255 (* 6 ?x213 ?x213 ?x213 r00 ?x218 s00 ?x219)) (* 18 ?x213 ?x213 ?x213 r00 ?x219) (* 18 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219))))
 (let ((?x262 (- ?x259 (* 2 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 s00 ?x219 ?x219 ?x219))))
 (let ((?x265 (+ (- ?x262 (* 6 ?x213 ?x213 ?x213 r00 r00 ?x218)) (* 6 ?x213 ?x213 r00 r00 ?x218 s00 ?x219))))
 (let ((?x271 (+ (- ?x265 (* 18 ?x213 ?x213 ?x213 ?x213 x00)) (* 18 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 x00) (* 2 ?x213 ?x213 ?x218 ?x218 s00 ?x219) (* 9 ?x213 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219))))
 (let ((?x273 (- ?x271 (* 2 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219))))
 (let ((?x277 (- (+ ?x273 (* 18 ?x213 ?x213 ?x213 ?x213 ?x219)) (* 18 ?x213 ?x213 ?x213 r00 x00))))
 (let ((?x279 (+ ?x277 (* 6 ?x213 ?x213 r00 r00 ?x218 ?x218 ?x218 s00 ?x219 ?x219))))
 (let ((?x284 (- (- ?x279 (* 3 ?x213 ?x213 ?x218 ?x218 ?x218 s00 ?x219 ?x219)) (* 6 ?x213 ?x213 r00 r00 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219))))
 (let ((?x287 (+ (- ?x284 (* 4 ?x213 ?x213 ?x218 ?x218 ?x218 s00 s00 ?x219 ?x219)) ?x286)))
 (let ((?x289 (- ?x287 (* 9 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 s00 ?x219 ?x219 ?x219))))
 (let ((?x294 (- (+ ?x289 (* 2 ?x213 ?x213 ?x218 ?x218 ?x218 ?x219)) (* 6 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 s00 ?x219 ?x219))))
 (let ((?x297 (+ (- ?x294 (* 18 ?x213 ?x213 r00 ?x218 ?x219 x00)) (* 9 ?x213 ?x213 r00 ?x218 ?x218 ?x218 s00 ?x219 ?x219))))
 (let ((?x301 (- (- ?x297 (* 18 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x219 ?x219 x00)) (* 9 ?x213 ?x213 ?x213 ?x213 ?x218))))
 (let ((?x303 (+ ?x301 (* 18 ?x213 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 x00))))
 (let ((?x308 (+ (- ?x303 ?x304) (* 9 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 s00 ?x219 ?x219) (* 3 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 s00 ?x219 ?x219 ?x219))))
 (let ((?x311 (- ?x308 (* 3 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219))))
 (let ((?x316 (+ (- ?x311 (* 9 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219)) (* 6 ?x213 ?x213 ?x213 r00 r00 s00) (* 9 ?x213 ?x213 ?x213 ?x213 s00) (* 6 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x219))))
 (let ((?x324 (+ (- (- ?x316 (* 9 ?x213 ?x213 ?x213 ?x218 ?x218 ?x219)) ?x318) (* 3 ?x213 ?x213 ?x218 ?x218 ?x219) (* 9 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219) (* 6 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219))))
 (let ((?x328 (- (- ?x324 (* 6 ?x213 ?x213 r00 r00 ?x218 ?x218 ?x219)) (* 3 ?x213 ?x213 ?x218 s00 ?x219))))
 (let ((?x332 (- (+ ?x328 (* 3 ?x213 ?x213 ?x213 ?x218)) (* 9 ?x213 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 s00 ?x219 ?x219 ?x219))))
 (let ((?x335 (+ ?x332 (* 9 ?x213 ?x213 r00 ?x218 s00 ?x219) (* 18 ?x213 ?x213 r00 ?x218 ?x219 ?x219))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x335 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1496 (lambda ((r Int) (s Int) (x Int) )(let ((?x217 (* 6 r)))
 (let ((?x2665 (+ 3 s ?x217)))
 (let ((?x343 (* (- 1) s)))
 (let ((?x2779 (+ x ?x343)))
 (let ((?x1448 (+ 1 r)))
 (let ((?x1815 (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665)))
 (let ((?x1892 (* s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1654 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x1824 (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x2287 (* r00 r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x2290 (* x00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3654 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3640 (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x3343 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x3421 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x3402 (* r00 x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1363 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x1554 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1406 (* s00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x1230 (* r00 r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)))
 (let ((?x5319 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)))
 (let ((?x6268 (+ (* (- 3) (* s00 ?x1448 ?x1448 ?x1448)) (* 9 (* r00 s00 ?x1448 ?x1448 ?x1448)) (* (- 9) (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 18 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 18) (* x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 18) ?x5319) (* (- 4) (* s00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 3 (* ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 9 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* 2 (* s00 ?x1448 ?x1448 ?x1448 ?x2665)) (* 6 ?x1230) (* 4 ?x1406) (* (- 18) ?x1554) (* (- 4) (* s00 s00 ?x1448 ?x1448 ?x1448)) (* (- 9) (* r00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 2 (* ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665 ?x2665)) (* 2 (* s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 2 (* ?x1448 ?x1448 ?x1448 ?x2665 ?x2665)) (* (- 18) (* x00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* 18 (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665)) (* 6 (* r00 ?x1448 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 9) (* r00 ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 6) (* r00 s00 ?x1448 ?x1448 ?x1448 ?x1448)) (* (- 6) (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665)) (* 18 (* r00 ?x1448 ?x1448 ?x1448 ?x2779)) (* 18 (* r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 2) ?x1363) (* (- 6) (* r00 r00 ?x1448 ?x1448 ?x1448 ?x2665)) (* 6 (* r00 r00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* (- 18) (* x00 ?x1448 ?x1448 ?x1448 ?x1448)) (* 18 ?x3402) (* 2 (* s00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 9 ?x3421) (* (- 2) ?x3343) (* 18 (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2779)) (* (- 18) (* r00 x00 ?x1448 ?x1448 ?x1448)) (* 6 (* r00 r00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 3) (* s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 6) (* r00 r00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 4) (* s00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 6 ?x3640) (* (- 9) ?x3654) (* 2 (* ?x1448 ?x1448 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 6) (* r00 s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 18) (* r00 x00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 9 (* r00 s00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 18) (* r00 x00 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 9) (* ?x1448 ?x1448 ?x1448 ?x1448 ?x2665)) (* 18 ?x2290) (* (- 6) ?x2287) (* 9 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* 3 (* s00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665)) (* (- 3) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 9) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* 6 (* r00 r00 s00 ?x1448 ?x1448 ?x1448)) (* 9 (* s00 ?x1448 ?x1448 ?x1448 ?x1448)) (* 6 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 9) (* ?x1448 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 6) ?x1824) (* 3 (* ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* 9 ?x1654) (* 6 (* r00 ?x1448 ?x1448 ?x1448 ?x2779 ?x2779 ?x2665 ?x2665 ?x2665 ?x2665)) (* (- 6) (* r00 r00 ?x1448 ?x1448 ?x2779 ?x2665 ?x2665)) (* (- 3) (* s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 3 (* ?x1448 ?x1448 ?x1448 ?x2665)) (* (- 9) ?x1892) (* 9 (* r00 s00 ?x1448 ?x1448 ?x2779 ?x2665)) (* 18 ?x1815))))
 (let ((?x1409 (* x00 x00)))
 (let ((?x4392 (* 108 ?x1409)))
 (let ((?x1553 (* (- 9) s)))
 (let ((?x5370 (* r00 r00 s00)))
 (let ((?x1792 (* (- 36) ?x5370)))
 (let ((?x137 (* 9 s00)))
 (let ((?x654 (* s00 s00)))
 (let ((?x975 (* 51 ?x654)))
 (let ((?x2115 (* r00 r00 s)))
 (let ((?x5025 (* 36 ?x2115)))
 (let ((?x1247 (* s00 s00 s00)))
 (let ((?x916 (* 16 ?x1247)))
 (let ((?x868 (* s00 x00)))
 (let ((?x5403 (* (- 108) ?x868)))
 (let ((?x945 (* r00 r00 r00 x00)))
 (let ((?x5168 (* (- 432) ?x945)))
 (let ((?x585 (* r00 x00)))
 (let ((?x3620 (* 108 ?x585)))
 (let ((?x4513 (+ (* 216 (* r00 s00 x00)) ?x3620 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x5168 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5403 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x916 (* (- 108) (* x s)) ?x5025 ?x975 (* (- 108) (* r00 x)) ?x137 ?x1792 ?x1553 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4392)))
 (let (($x1647 (= ?x4513 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1050 (* (- 9) s00)))
 (let ((?x979 (* (- 15) ?x654)))
 (let ((?x940 (* r00 r00 x00)))
 (let ((?x953 (* (- 36) ?x940)))
 (let ((?x869 (* 6 ?x868)))
 (let ((?x608 (* s s)))
 (let ((?x632 (* 3 ?x608)))
 (let ((?x614 (* (- 54) ?x585)))
 (let ((?x4439 (+ (* (- 24) (* s r)) ?x614 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x632 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x869 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2115) ?x953 ?x979 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1050 (* 36 ?x5370) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x441 (* (- 3) s00)))
 (let ((?x667 (* (- 4) ?x654)))
 (let ((?x609 (* 2 ?x608)))
 (let ((?x599 (* (- 18) ?x585)))
 (let ((?x4679 (+ (* (- 9) (* s r)) ?x599 (* 9 (* r00 s00)) ?x609 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2115) ?x667 (* 18 (* r00 x)) ?x441 (* 6 ?x5370) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2745 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x441 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1457 (= (+ s00 ?x343 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2432 (and $x1457 (= ?x2745 0) (= ?x4679 0) (= ?x4439 0) $x1647 (not (= ?x6268 0)))))
 (let ((?x219 (- x s)))
 (let ((?x218 (+ s ?x217 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x318 (* 6 ?x213 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219)))
 (let ((?x304 (* 6 ?x213 ?x213 ?x213 r00 r00 ?x218 ?x218 ?x218 s00 ?x219 ?x219 ?x219)))
 (let ((?x286 (* 6 ?x213 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 s00 ?x219 ?x219 ?x219)))
 (let ((?x233 (* 6 ?x213 ?x213 ?x213 r00 r00 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219)))
 (let ((?x216 (+ (* (- 3) ?x213 ?x213 ?x213 s00) (* 9 ?x213 ?x213 ?x213 r00 s00))))
 (let ((?x223 (+ (- ?x216 (* 9 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219)) (* 18 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219))))
 (let ((?x228 (- (- ?x223 (* 18 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x219 ?x219 x00)) (* 18 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x235 (+ (- ?x228 (* 4 ?x213 ?x213 ?x218 s00 s00 ?x219)) (* 3 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219) (* 9 ?x213 ?x213 ?x213 ?x218 s00 ?x219) (* 2 ?x213 ?x213 ?x213 ?x218 s00) ?x233 (* 4 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 s00 s00 ?x219 ?x219 ?x219))))
 (let ((?x239 (- ?x235 (* 18 ?x213 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x241 (- (- ?x239 (* 4 ?x213 ?x213 ?x213 s00 s00)) (* 9 ?x213 ?x213 r00 ?x218 ?x218 ?x219))))
 (let ((?x245 (+ ?x241 (* 2 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219) (* 2 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 s00 ?x219 ?x219) (* 2 ?x213 ?x213 ?x213 ?x218 ?x218))))
 (let ((?x250 (+ (- ?x245 (* 18 ?x213 ?x213 ?x213 ?x218 ?x219 x00)) (* 18 ?x213 ?x213 ?x213 ?x218 ?x219 ?x219) (* 6 ?x213 ?x213 ?x213 ?x213 r00 ?x218))))
 (let ((?x255 (- (- ?x250 (* 9 ?x213 ?x213 ?x213 r00 ?x218)) (* 6 ?x213 ?x213 ?x213 ?x213 r00 s00))))
 (let ((?x259 (+ (- ?x255 (* 6 ?x213 ?x213 ?x213 r00 ?x218 s00 ?x219)) (* 18 ?x213 ?x213 ?x213 r00 ?x219) (* 18 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219))))
 (let ((?x262 (- ?x259 (* 2 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 s00 ?x219 ?x219 ?x219))))
 (let ((?x265 (+ (- ?x262 (* 6 ?x213 ?x213 ?x213 r00 r00 ?x218)) (* 6 ?x213 ?x213 r00 r00 ?x218 s00 ?x219))))
 (let ((?x271 (+ (- ?x265 (* 18 ?x213 ?x213 ?x213 ?x213 x00)) (* 18 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 x00) (* 2 ?x213 ?x213 ?x218 ?x218 s00 ?x219) (* 9 ?x213 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219))))
 (let ((?x273 (- ?x271 (* 2 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219))))
 (let ((?x277 (- (+ ?x273 (* 18 ?x213 ?x213 ?x213 ?x213 ?x219)) (* 18 ?x213 ?x213 ?x213 r00 x00))))
 (let ((?x279 (+ ?x277 (* 6 ?x213 ?x213 r00 r00 ?x218 ?x218 ?x218 s00 ?x219 ?x219))))
 (let ((?x284 (- (- ?x279 (* 3 ?x213 ?x213 ?x218 ?x218 ?x218 s00 ?x219 ?x219)) (* 6 ?x213 ?x213 r00 r00 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219))))
 (let ((?x287 (+ (- ?x284 (* 4 ?x213 ?x213 ?x218 ?x218 ?x218 s00 s00 ?x219 ?x219)) ?x286)))
 (let ((?x289 (- ?x287 (* 9 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 s00 ?x219 ?x219 ?x219))))
 (let ((?x294 (- (+ ?x289 (* 2 ?x213 ?x213 ?x218 ?x218 ?x218 ?x219)) (* 6 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 s00 ?x219 ?x219))))
 (let ((?x297 (+ (- ?x294 (* 18 ?x213 ?x213 r00 ?x218 ?x219 x00)) (* 9 ?x213 ?x213 r00 ?x218 ?x218 ?x218 s00 ?x219 ?x219))))
 (let ((?x301 (- (- ?x297 (* 18 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x219 ?x219 x00)) (* 9 ?x213 ?x213 ?x213 ?x213 ?x218))))
 (let ((?x303 (+ ?x301 (* 18 ?x213 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 x00))))
 (let ((?x308 (+ (- ?x303 ?x304) (* 9 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 s00 ?x219 ?x219) (* 3 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 s00 ?x219 ?x219 ?x219))))
 (let ((?x311 (- ?x308 (* 3 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219))))
 (let ((?x316 (+ (- ?x311 (* 9 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219)) (* 6 ?x213 ?x213 ?x213 r00 r00 s00) (* 9 ?x213 ?x213 ?x213 ?x213 s00) (* 6 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x219))))
 (let ((?x324 (+ (- (- ?x316 (* 9 ?x213 ?x213 ?x213 ?x218 ?x218 ?x219)) ?x318) (* 3 ?x213 ?x213 ?x218 ?x218 ?x219) (* 9 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219) (* 6 ?x213 ?x213 ?x213 r00 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219))))
 (let ((?x328 (- (- ?x324 (* 6 ?x213 ?x213 r00 r00 ?x218 ?x218 ?x219)) (* 3 ?x213 ?x213 ?x218 s00 ?x219))))
 (let ((?x332 (- (+ ?x328 (* 3 ?x213 ?x213 ?x213 ?x218)) (* 9 ?x213 ?x213 ?x213 ?x213 ?x218 ?x218 ?x218 s00 ?x219 ?x219 ?x219))))
 (let ((?x335 (+ ?x332 (* 9 ?x213 ?x213 r00 ?x218 s00 ?x219) (* 18 ?x213 ?x213 r00 ?x218 ?x219 ?x219))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x339 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x335 0))))))
 (rewrite (= $x339 $x2432)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x341 (asserted $x340)))
 (let ((@x3679 (mp (mp @x341 (quant-intro (proof-bind ?x1496) (= $x340 $x3730)) $x3730) (rewrite (= $x3730 $x3730)) $x3730)))
 (let ((@x4249 (mp (mp @x3679 (quant-intro (proof-bind ?x3602) (= $x3730 $x3597)) $x3597) (quant-intro (proof-bind ?x6793) (= $x3597 $x6784)) $x6784)))
 (let ((@x1565 (mp (mp~ @x4249 (sk (~ $x6784 $x6431)) $x6431) (rewrite (= $x6431 $x3110)) $x3110)))
 (let ((@x7035 (and-elim @x1565 $x1614)))
 (let ((@x5677 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1614) $x1113)) @x7035 $x1113)))
 (let (($x5676 (>= ?x5247 0)))
 (let ((@x6070 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1614) $x5676)) @x7035 $x5676)))
 (let (($x2983 (<= ?x6565 0)))
 (let ((@x1751 (and-elim @x1565 $x6434)))
 (let ((@x4663 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6434) $x2983)) @x1751 $x2983)))
 (let (($x1112 (>= ?x6565 0)))
 (let ((@x3145 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6434) $x1112)) @x1751 $x1112)))
 (let (($x6400 (<= ?x5506 0)))
 (let ((@x3042 (and-elim @x1565 $x775)))
 (let ((@x7025 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x775) $x6400)) @x3042 $x6400)))
 (let (($x2188 (>= ?x5506 0)))
 (let ((@x6286 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x775) $x2188)) @x3042 $x2188)))
 (let (($x5287 (<= ?x5904 0)))
 (let ((@x3043 (and-elim @x1565 $x5905)))
 (let ((@x6397 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5905) $x5287)) @x3043 $x5287)))
 (let (($x3073 (>= ?x5904 0)))
 (let ((@x5994 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5905) $x3073)) @x3043 $x3073)))
 (let (($x3937 (<= ?x3106 0)))
 (let ((@x2990 (and-elim @x1565 $x3111)))
 (let ((@x859 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3111) $x3937)) @x2990 $x3937)))
 (let (($x2973 (>= ?x3106 0)))
 (let ((@x1801 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3111) $x2973)) @x2990 $x2973)))
 (let (($x5586 (not (<= ?x1832 18))))
 (let (($x3061 (>= ?x1832 18)))
 (let ((@x6356 ((_ th-lemma arith) (hypothesis (not $x3061)) @x5994 @x6397 @x5994 @x6397 @x6286 @x7025 @x6286 @x7025 @x3145 @x4663 @x6286 @x7025 @x5994 @x6397 @x6070 @x5677 @x3145 @x4663 @x6286 @x7025 @x5994 @x6397 @x5994 @x6397 @x1801 @x859 @x3145 @x4663 @x6286 @x7025 @x5994 @x6397 @x3145 @x4663 @x6070 @x5677 @x5994 @x6397 @x6286 @x7025 @x6286 @x7025 @x3145 @x4663 @x6070 @x5677 @x3145 @x4663 @x6070 @x5677 @x5994 @x6397 @x6286 @x7025 @x3145 @x4663 @x6070 @x5677 false)))
 (let ((@x3046 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1827 $x5586 (not $x3061))) (and-elim @x1565 $x1562) (or $x5586 (not $x3061)))))
 ((_ th-lemma arith) (unit-resolution @x3046 (lemma @x6356 $x3061) $x5586) @x5994 @x6397 @x5994 @x6397 @x6286 @x7025 @x6286 @x7025 @x3145 @x4663 @x6286 @x7025 @x5994 @x6397 @x6070 @x5677 @x3145 @x4663 @x6286 @x7025 @x5994 @x6397 @x5994 @x6397 @x1801 @x859 @x3145 @x4663 @x6286 @x7025 @x5994 @x6397 @x3145 @x4663 @x6070 @x5677 @x5994 @x6397 @x6286 @x7025 @x6286 @x7025 @x3145 @x4663 @x6070 @x5677 @x3145 @x4663 @x6070 @x5677 @x5994 @x6397 @x6286 @x7025 @x3145 @x4663 @x6070 @x5677 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        39
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           8
 :arith-grobner             2
 :arith-max-min             1936
 :arith-nonlinear-bounds    32
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              6
 :arith-row-summations      15
 :arith-tableau-max-columns 327
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                10.81
 :memory                    4.05
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                35552075461.00
 :num-checks                1
 :propagations              12
 :rlimit-count              4593317
 :time                      3.68
 :total-time                3.68)
