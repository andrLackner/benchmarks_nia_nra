unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x805 (* (- 217) (* k!2 m!1))))
 (let ((?x746 (* (- 1) (* c!3 m!1 m!1 m!1 m!1))))
 (let ((?x343 (* (- 1) (* c!3 k!2 m!1 m!1 m!1))))
 (let ((?x728 (* (- 19) (* m!1 m!1))))
 (let ((?x187 (* (- 18) (* c!3 k!2 m!1 m!1))))
 (let ((?x632 (* (- 216) n!0)))
 (let ((?x823 (* (- 114) m!1)))
 (let ((?x101 (* (- 6) k!2)))
 (let ((?x687 (* m!1 n!0)))
 (let ((?x691 (* (- 108) ?x687)))
 (let ((?x473 (* (- 108) (* c!3 k!2 m!1))))
 (let ((?x311 (* (- 18) (* m!1 m!1 n!0))))
 (let ((?x630 (* (- 18) (* k!2 m!1 m!1 m!1))))
 (let ((?x164 (* (- 108) (* k!2 m!1 m!1))))
 (let ((?x665 (* (- 108) (* c!3 m!1 m!1))))
 (let ((?x144 (* (- 108) (* k!2 k!2 m!1))))
 (let ((?x313 (* (- 1) (* m!1 m!1 m!1))))
 (let ((?x376 (* (- 216) (* c!3 m!1))))
 (let ((?x407 (* k!2 k!2)))
 (let ((?x762 (* (- 216) ?x407)))
 (let ((?x367 (* (- 216) (* c!3 k!2))))
 (let ((?x747 (* (- 1) (* k!2 k!2 m!1 m!1 m!1))))
 (let ((?x320 (+ c!3 k!2)))
 (let ((?x315 (+ k!2 m!1)))
 (let ((?x766 (+ 1 n!0)))
 (let ((?x342 (* (- 1) (* ?x766 (+ 6 m!1) ?x315 ?x315 ?x320 ?x320))))
 (let ((?x318 (* ?x766 ?x766 ?x315 ?x315 ?x320 ?x320 ?x320)))
 (let ((?x314 (* (- 1) (* m!1 m!1 m!1 n!0))))
 (let ((?x461 (* (- 1) (* k!2 m!1 m!1 m!1 m!1))))
 (let ((?x678 (* (- 18) (* k!2 k!2 m!1 m!1))))
 (let ((?x780 (* (- 18) (* c!3 m!1 m!1 m!1))))
 (let ((?x653 (+ (- 216) ?x780 ?x678 ?x461 ?x314 ?x318 ?x342 ?x747 ?x367 ?x762 ?x376 ?x313 ?x144 ?x665 ?x164 ?x630 ?x311 ?x473 ?x691 ?x101 ?x823 ?x632 ?x187 ?x728 ?x343 ?x746 ?x805)))
 (let (($x456 (<= ?x653 0)))
 (let ((?x698 (+ (* 3 (* n!0 n!0)) (* (- 1) k!2) (* 3 n!0))))
 (let (($x195 (<= ?x698 (- 1))))
 (let (($x330 (= ?x698 (- 1))))
 (let ((?x822 (* k!2 n!0)))
 (let ((?x586 (* 2 n!0)))
 (let ((?x585 (* (- 3) k!2)))
 (let ((?x680 (* (- 3) c!3)))
 (let ((?x651 (* ?x653 (+ 3 ?x680 ?x687 ?x585 ?x586 ?x822))))
 (let (($x735 (= ?x651 0)))
 (let (($x336 (not $x735)))
 (let ((?x702 (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x822))))
 (let (($x522 (= ?x702 1)))
 (let ((?x420 (* (- 9) n!0)))
 (let ((?x500 (* 5 k!2)))
 (let ((?x499 (* 18 c!3)))
 (let ((?x323 (* (- 1) ?x407)))
 (let ((?x409 (* 9 (* c!3 n!0))))
 (let ((?x493 (+ m!1 (* (- 6) n!0))))
 (let (($x489 (= ?x493 6)))
 (let (($x335 (and $x489 (= (+ ?x409 ?x323 ?x499 ?x500 ?x420) 4) $x522 $x330 $x336)))
 (let ((?x629 (+ (- 216) ?x101 ?x823 ?x632 ?x762 ?x691 ?x805 ?x728 ?x311 ?x314 ?x313 ?x318 ?x342 ?x343 ?x747 ?x746 ?x461 ?x367 ?x376 ?x473 ?x144 ?x665 ?x164 ?x187 ?x678 ?x780 ?x630)))
 (let (($x451 (and $x489 (= (+ ?x499 ?x500 ?x420 ?x323 ?x409) 4) $x522 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= (* ?x629 (+ 3 ?x680 ?x585 ?x586 ?x822 ?x687)) 0)))))
 (let (($x466 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x352 (* m n)))
 (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x224 (* (- 3) c)))
 (let ((?x412 (+ 3 ?x224 (* (- 3) k) ?x59 ?x55 ?x352)))
 (let ((?x821 (* (- 18) (* k m m m))))
 (let ((?x818 (* (- 18) (* c m m m))))
 (let ((?x815 (* (- 18) (* k k m m))))
 (let ((?x812 (* (- 18) (* c k m m))))
 (let ((?x809 (* (- 108) (* k m m))))
 (let ((?x806 (* (- 108) (* c m m))))
 (let ((?x803 (* (- 108) (* k k m))))
 (let ((?x800 (* (- 108) (* c k m))))
 (let ((?x797 (* (- 216) (* c m))))
 (let ((?x794 (* (- 216) (* c k))))
 (let ((?x774 (* (- 1) (* k m m m m))))
 (let ((?x773 (* (- 1) (* c m m m m))))
 (let ((?x772 (* (- 1) (* k k m m m))))
 (let ((?x771 (* (- 1) (* c k m m m))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x419 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x561 (* (- 1) (* ?x344 ?x419 ?x71 ?x71 ?x68 ?x68))))
 (let ((?x573 (* ?x344 ?x344 ?x71 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x563 (* (- 1) (* m m m))))
 (let ((?x562 (* (- 1) (* m m m n))))
 (let ((?x594 (* (- 18) (* m m n))))
 (let ((?x615 (* (- 19) (* m m))))
 (let ((?x813 (* (- 217) (* k m))))
 (let ((?x602 (* (- 108) ?x352)))
 (let ((?x49 (* k k)))
 (let ((?x788 (* (- 216) ?x49)))
 (let ((?x574 (* (- 216) n)))
 (let ((?x662 (+ (- 216) (* (- 6) k) (* (- 114) m) ?x574 ?x788 ?x602 ?x813 ?x615 ?x594 ?x562 ?x563 ?x573 ?x561 ?x771 ?x772 ?x773 ?x774 ?x794 ?x797 ?x800 ?x803 ?x806 ?x809 ?x812 ?x815 ?x818 ?x821)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 (* c n))) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 $x211 $x263 $x301 (not (= (* ?x662 ?x412) 0)))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x351 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x224 (* (- 3) c)))
 (let ((?x756 (+ 3 ?x224 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x419 (+ 6 m)))
 (let ((?x561 (* (- 1) (* (+ 1 n) ?x419 ?x71 ?x71 ?x68 ?x68))))
 (let ((?x344 (+ 1 n)))
 (let ((?x573 (* ?x344 ?x344 ?x71 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x787 (+ (* (- 1) (* ?x419 ?x71)) ?x573 ?x561 (* (- 1) (* ?x344 ?x419 ?x419 ?x419)) (* (- 1) (* ?x419 ?x419 ?x419 ?x71 ?x68)))))
 (let (($x669 (not (= (* ?x787 ?x756) 0))))
 (let (($x340 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x488 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x488 $x340 $x669)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x579 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x352 (* m n)))
 (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x224 (* (- 3) c)))
 (let ((?x412 (+ 3 ?x224 (* (- 3) k) ?x59 ?x55 ?x352)))
 (let ((?x821 (* (- 18) (* k m m m))))
 (let ((?x818 (* (- 18) (* c m m m))))
 (let ((?x815 (* (- 18) (* k k m m))))
 (let ((?x812 (* (- 18) (* c k m m))))
 (let ((?x809 (* (- 108) (* k m m))))
 (let ((?x806 (* (- 108) (* c m m))))
 (let ((?x803 (* (- 108) (* k k m))))
 (let ((?x800 (* (- 108) (* c k m))))
 (let ((?x797 (* (- 216) (* c m))))
 (let ((?x794 (* (- 216) (* c k))))
 (let ((?x774 (* (- 1) (* k m m m m))))
 (let ((?x773 (* (- 1) (* c m m m m))))
 (let ((?x772 (* (- 1) (* k k m m m))))
 (let ((?x771 (* (- 1) (* c k m m m))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x419 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x561 (* (- 1) (* ?x344 ?x419 ?x71 ?x71 ?x68 ?x68))))
 (let ((?x573 (* ?x344 ?x344 ?x71 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x563 (* (- 1) (* m m m))))
 (let ((?x562 (* (- 1) (* m m m n))))
 (let ((?x594 (* (- 18) (* m m n))))
 (let ((?x615 (* (- 19) (* m m))))
 (let ((?x813 (* (- 217) (* k m))))
 (let ((?x602 (* (- 108) ?x352)))
 (let ((?x49 (* k k)))
 (let ((?x788 (* (- 216) ?x49)))
 (let ((?x574 (* (- 216) n)))
 (let ((?x662 (+ (- 216) (* (- 6) k) (* (- 114) m) ?x574 ?x788 ?x602 ?x813 ?x615 ?x594 ?x562 ?x563 ?x573 ?x561 ?x771 ?x772 ?x773 ?x774 ?x794 ?x797 ?x800 ?x803 ?x806 ?x809 ?x812 ?x815 ?x818 ?x821)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 (* c n))) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x768 (and $x127 $x211 $x263 $x301 (not (= (* ?x662 ?x412) 0)))))
 (let ((?x787 (+ (* (- 1) (* ?x419 ?x71)) ?x573 ?x561 (* (- 1) (* ?x344 ?x419 ?x419 ?x419)) (* (- 1) (* ?x419 ?x419 ?x419 ?x71 ?x68)))))
 (let ((?x811 (* ?x787 (+ 3 ?x224 (* (- 4) k) (* ?x344 ?x71) (* (- 1) m) ?x59))))
 (let (($x669 (not (= ?x811 0))))
 (let (($x340 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x488 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x736 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x488 $x340 $x669)))
 (rewrite (= $x736 $x768)))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x628 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x224 (* (- 3) c)))
 (let ((?x756 (+ 3 ?x224 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x419 (+ 6 m)))
 (let ((?x561 (* (- 1) (* (+ 1 n) ?x419 ?x71 ?x71 ?x68 ?x68))))
 (let ((?x344 (+ 1 n)))
 (let ((?x573 (* ?x344 ?x344 ?x71 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x787 (+ (* (- 1) (* ?x419 ?x71)) ?x573 ?x561 (* (- 1) (* ?x344 ?x419 ?x419 ?x419)) (* (- 1) (* ?x419 ?x419 ?x419 ?x71 ?x68)))))
 (let (($x669 (not (= (* ?x787 ?x756) 0))))
 (let (($x340 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x674 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 (= ?x674 (- 4)) (= (+ ?x224 (* n k) (* (- 1) k) ?x59) (- 1)) $x340 $x669))))))))))))))))) :qid k!34))
 ))
 (let ((?x464 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x224 (* (- 3) c)))
 (let ((?x756 (+ 3 ?x224 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x419 (+ 6 m)))
 (let ((?x561 (* (- 1) (* (+ 1 n) ?x419 ?x71 ?x71 ?x68 ?x68))))
 (let ((?x344 (+ 1 n)))
 (let ((?x573 (* ?x344 ?x344 ?x71 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x787 (+ (* (- 1) (* ?x419 ?x71)) ?x573 ?x561 (* (- 1) (* ?x344 ?x419 ?x419 ?x419)) (* (- 1) (* ?x419 ?x419 ?x419 ?x71 ?x68)))))
 (let (($x669 (not (= (* ?x787 ?x756) 0))))
 (let (($x340 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x488 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x736 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x488 $x340 $x669)))
 (let ((?x48 (* 9 n)))
 (let ((?x674 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x631 (and $x127 (= ?x674 (- 4)) (= (+ ?x224 (* n k) (* (- 1) k) ?x59) (- 1)) $x340 $x669)))
 (rewrite (= $x631 $x736))))))))))))))))))))))))))
 ))
 (let (($x94 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x79 (+ m 6)))
 (let ((?x71 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x82 (+ (* (- 1) ?x71 ?x79) (* ?x68 ?x68 ?x68 ?x71 ?x71 (+ n 1) (+ n 1)))))
 (let ((?x87 (- (- ?x82 (* ?x68 ?x68 ?x71 ?x71 ?x79 (+ n 1))) (* ?x79 ?x79 ?x79 (+ n 1)))))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 (+ n 1))) ?x71) (* 2 (+ n 1)))))
 (let (($x92 (or (not (= (* ?x77 (- ?x87 (* ?x68 ?x71 ?x79 ?x79 ?x79))) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x92))))))))))))))) :qid k!34))
 ))
 (let ((?x673 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x224 (* (- 3) c)))
 (let ((?x756 (+ 3 ?x224 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x419 (+ 6 m)))
 (let ((?x561 (* (- 1) (* (+ 1 n) ?x419 ?x71 ?x71 ?x68 ?x68))))
 (let ((?x344 (+ 1 n)))
 (let ((?x573 (* ?x344 ?x344 ?x71 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x787 (+ (* (- 1) (* ?x419 ?x71)) ?x573 ?x561 (* (- 1) (* ?x344 ?x419 ?x419 ?x419)) (* (- 1) (* ?x419 ?x419 ?x419 ?x71 ?x68)))))
 (let (($x669 (not (= (* ?x787 ?x756) 0))))
 (let (($x340 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x674 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x631 (and $x127 (= ?x674 (- 4)) (= (+ ?x224 (* n k) (* (- 1) k) ?x59) (- 1)) $x340 $x669)))
 (let ((?x82 (+ (* (- 1) ?x71 (+ m 6)) (* ?x68 ?x68 ?x68 ?x71 ?x71 (+ n 1) (+ n 1)))))
 (let ((?x87 (- (- ?x82 (* ?x68 ?x68 ?x71 ?x71 (+ m 6) (+ n 1))) (* (+ m 6) (+ m 6) (+ m 6) (+ n 1)))))
 (let ((?x88 (- ?x87 (* ?x68 ?x71 (+ m 6) (+ m 6) (+ m 6)))))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 (+ n 1))) ?x71) (* 2 (+ n 1)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x93 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* ?x77 ?x88) 0))))))
 (rewrite (= $x93 $x631)))))))))))))))))))))))))))))
 ))
 (let ((@x95 (asserted $x94)))
 (let ((@x611 (mp (mp @x95 (quant-intro (proof-bind ?x673) (= $x94 $x628)) $x628) (rewrite (= $x628 $x628)) $x628)))
 (let ((@x720 (mp (mp @x611 (quant-intro (proof-bind ?x464) (= $x628 $x351)) $x351) (quant-intro (proof-bind ?x579) (= $x351 $x466)) $x466)))
 (let ((@x542 (mp (mp~ @x720 (sk (~ $x466 $x451)) $x451) (rewrite (= $x451 $x335)) $x335)))
 (let ((@x322 (and-elim @x542 $x330)))
 (let ((@x116 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x330) $x195)) @x322 $x195)))
 (let (($x334 (>= ?x698 (- 1))))
 (let ((@x212 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x330) $x334)) @x322 $x334)))
 (let (($x471 (<= ?x493 6)))
 (let ((@x337 (and-elim @x542 $x489)))
 (let ((@x810 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x489) $x471)) @x337 $x471)))
 (let (($x107 (>= ?x493 6)))
 (let ((@x278 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x489) $x107)) @x337 $x107)))
 (let (($x484 (<= ?x702 1)))
 (let ((@x309 (and-elim @x542 $x522)))
 (let ((@x236 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x522) $x484)) @x309 $x484)))
 (let (($x744 (>= ?x702 1)))
 (let ((@x295 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x522) $x744)) @x309 $x744)))
 (let ((@x2004 (hypothesis (not $x456))))
 (let (($x2050 (not (<= ?x651 0))))
 (let (($x697 (>= ?x651 0)))
 (let (($x296 (not $x697)))
 (let ((@x298 (hypothesis $x296)))
 (let ((@x1962 ((_ th-lemma arith) @x298 @x2004 @x278 @x810 @x278 @x810 @x212 @x116 @x295 @x236 @x278 @x810 false)))
 (let (($x483 (>= ?x653 0)))
 (let ((@x2005 (hypothesis (not $x483))))
 (let ((@x1983 (lemma ((_ th-lemma arith) @x298 @x2005 @x278 @x810 @x295 @x236 @x212 @x116 false) (or $x483 $x697))))
 (let ((@x1910 ((_ th-lemma arith farkas 1 1 1) @x298 (unit-resolution @x1983 @x298 $x483) (unit-resolution (lemma @x1962 (or $x456 $x697)) @x298 $x456) false)))
 (let ((@x1819 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x735 $x2050 $x296)) (and-elim @x542 $x336) (or $x2050 $x296))))
 (let ((@x2022 (unit-resolution @x1819 (lemma @x1910 $x697) $x2050)))
 (let ((@x2024 ((_ th-lemma arith) @x2022 @x2004 @x212 @x116 @x295 @x236 @x278 @x810 @x212 @x116 @x278 @x810 @x212 @x116 false)))
 (let ((@x1818 ((_ th-lemma arith) @x2022 @x2005 @x212 @x116 @x295 @x236 @x212 @x116 @x278 @x810 @x212 @x116 false)))
 ((_ th-lemma arith farkas 1 1 1) @x2022 (lemma @x1818 $x483) (lemma @x2024 $x456) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 72
 :arith-assert-diseq        23
 :arith-assert-lower        1197
 :arith-assert-upper        726
 :arith-bound-prop          77
 :arith-branch-var          28
 :arith-conflicts           107
 :arith-eq-adapter          14
 :arith-fixed-eqs           154
 :arith-gcd-tests           575
 :arith-gomory-cuts         24
 :arith-grobner             116
 :arith-ineq-splits         28
 :arith-max-min             11128
 :arith-nonlinear-bounds    173
 :arith-nonlinear-horner    1628
 :arith-num-rows            28
 :arith-offset-eqs          2
 :arith-patches             127
 :arith-patches_succ        72
 :arith-pivots              2775
 :arith-pseudo-nonlinear    153
 :arith-row-summations      28875
 :arith-tableau-max-columns 88
 :arith-tableau-max-rows    28
 :conflicts                 108
 :decisions                 292
 :del-clause                255
 :final-checks              287
 :max-memory                4.59
 :memory                    3.32
 :minimized-lits            17
 :mk-bool-var               573
 :mk-clause                 664
 :num-allocs                834301389
 :num-checks                1
 :propagations              672
 :restarts                  1
 :rlimit-count              6499166
 :time                      3.18
 :total-time                3.19)
