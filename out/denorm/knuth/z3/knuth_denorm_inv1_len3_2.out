unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun r!2 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x1006 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 2 (* q!3 d!1)) (* (- 8) r!2) (* (- 4) (* d!1 x!0)) (* (- 1) (* q!3 d!1 d!1)) (* 4 (* r!2 d!1)))))
 (let (($x470 (>= ?x1006 0)))
 (let (($x891 (= ?x1006 0)))
 (let ((?x702 (* r!2 d!1)))
 (let ((?x1116 (* (- 4) ?x702)))
 (let ((?x701 (* q!3 d!1 d!1)))
 (let ((?x1710 (* 8 r!2)))
 (let ((?x419 (* q!3 d!1)))
 (let ((?x380 (* (- 2) ?x419)))
 (let ((?x296 (* r00 d00)))
 (let ((?x297 (* 4 ?x296)))
 (let ((?x258 (* d00 q00)))
 (let ((?x259 (* 2 ?x258)))
 (let ((?x179 (* d00 x00)))
 (let ((?x193 (* (- 4) ?x179)))
 (let ((?x209 (* (- 1) ?x41)))
 (let ((?x161 (* (- 8) r00)))
 (let ((?x1669 (+ ?x161 ?x209 ?x193 ?x259 ?x297 ?x380 ?x1710 (* 4 (* d!1 x!0)) ?x701 ?x1116)))
 (let ((?x1044 (* (- 4) d!1)))
 (let ((?x1326 (* q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x1193 (* (- 1) x!0)))
 (let ((?x706 (* 2 r!2)))
 (let ((?x425 (+ q!3 ?x706 ?x1193)))
 (let ((?x845 (+ 2 d!1)))
 (let ((?x1304 (* ?x845 ?x845 ?x845 ?x425 ?x425 ?x425 r!2 r!2 r!2 q!3 q!3)))
 (let ((?x850 (* 4 (* q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1638 (* (- 1) (* d!1 d!1))))
 (let ((?x471 (* 4 (* q!3 q!3 q!3 r!2 r!2 r!2 d!1))))
 (let ((?x1369 (* (+ (- 4) ?x471 ?x1638 ?x850 ?x1304 ?x1326 ?x1044) ?x1669)))
 (let (($x575 (= ?x1369 0)))
 (let (($x1738 (not $x575)))
 (let ((?x1749 (* q!3 q!3 r!2 r!2 r!2 d!1)))
 (let ((?x1731 (* (- 96) ?x1749)))
 (let ((?x910 (* (- 2) d!1)))
 (let ((?x1447 (+ (- 4) q!3 ?x706 ?x910 ?x1193)))
 (let ((?x1279 (+ (- 8) q!3)))
 (let ((?x1294 (* q!3 r!2 r!2 r!2)))
 (let ((?x1358 (* 768 ?x1294)))
 (let ((?x1110 (* q!3 q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x744 (* (- 24) ?x1110)))
 (let ((?x1093 (* q!3 q!3 r!2 r!2 r!2)))
 (let ((?x503 (* (- 96) ?x1093)))
 (let ((?x1031 (* r!2 r!2 r!2 d!1 d!1)))
 (let ((?x1734 (* (- 512) ?x1031)))
 (let ((?x956 (* q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x333 (* 192 ?x956)))
 (let ((?x794 (* q!3 r!2 r!2 r!2 d!1)))
 (let ((?x1732 (* 768 ?x794)))
 (let ((?x536 (* r!2 r!2 r!2)))
 (let ((?x1733 (* (- 2048) ?x536)))
 (let ((?x338 (* r!2 r!2 r!2 d!1)))
 (let ((?x494 (* (- 2048) ?x338)))
 (let ((?x731 (+ (- 4) ?x494 ?x471 ?x1733 ?x1638 ?x1732 ?x333 ?x1734 ?x503 ?x744 ?x1358 ?x850 (* ?x1279 ?x1279 ?x845 ?x845 ?x845 ?x1447 ?x1447 ?x1447 r!2 r!2 r!2) ?x1326 ?x1044 ?x1731)))
 (let ((?x714 (* ?x731 ?x1669)))
 (let (($x1504 (= ?x714 0)))
 (let ((?x1117 (* 48 ?x1749)))
 (let ((?x1092 (+ 2 q!3 ?x706 d!1 ?x1193)))
 (let ((?x730 (+ 4 q!3)))
 (let ((?x428 (* 192 ?x1294)))
 (let ((?x522 (* 12 ?x1110)))
 (let ((?x1700 (* 48 ?x1093)))
 (let ((?x341 (* 64 ?x1031)))
 (let ((?x572 (* 48 ?x956)))
 (let ((?x266 (* 192 ?x794)))
 (let ((?x252 (* 256 ?x536)))
 (let ((?x1742 (* 256 ?x338)))
 (let ((?x1544 (+ (- 4) ?x1742 ?x471 ?x252 ?x1638 ?x266 ?x572 ?x341 ?x1700 ?x522 ?x428 ?x850 ?x1326 ?x1044 (* ?x845 ?x845 ?x845 ?x730 ?x730 ?x1092 ?x1092 ?x1092 r!2 r!2 r!2) ?x1117)))
 (let ((?x1538 (* ?x1544 ?x1669)))
 (let (($x1029 (= ?x1538 0)))
 (let ((?x499 (* (- 48) ?x1749)))
 (let ((?x642 (* (- 12) ?x1110)))
 (let ((?x312 (* (- 48) ?x1093)))
 (let ((?x1763 (* (- 64) ?x1031)))
 (let ((?x741 (* (- 256) ?x536)))
 (let ((?x1097 (* (- 1) d!1)))
 (let ((?x1035 (+ (- 2) q!3 ?x706 ?x1097 ?x1193)))
 (let ((?x832 (+ (- 4) q!3)))
 (let ((?x444 (* (- 256) ?x338)))
 (let ((?x1172 (+ (- 4) ?x444 (* ?x832 ?x832 ?x845 ?x845 ?x845 ?x1035 ?x1035 ?x1035 r!2 r!2 r!2) ?x471 ?x741 ?x1638 ?x266 ?x572 ?x1763 ?x312 ?x642 ?x428 ?x850 ?x1326 ?x1044 ?x499)))
 (let ((?x477 (* ?x1172 ?x1669)))
 (let (($x415 (= ?x477 0)))
 (let (($x230 (not $x415)))
 (let (($x510 (or $x230 (not $x1029) (not $x1504) $x1738)))
 (let (($x263 (and $x891 $x510)))
 (let ((?x906 (+ ?x1710 ?x161 ?x209 ?x193 ?x259 ?x297 (* 4 (* x!0 d!1)) ?x380 ?x701 ?x1116)))
 (let ((?x1628 (+ (- 4) q!3 ?x706 ?x1193 ?x910)))
 (let ((?x1166 (+ (- 4) ?x1358 ?x503 ?x850 (* ?x1279 ?x1279 ?x845 ?x845 ?x845 ?x1628 ?x1628 ?x1628 r!2 r!2 r!2) ?x494 ?x1326 ?x471 ?x744 ?x1731 ?x1732 ?x1734 ?x333 ?x1044 ?x1638 ?x1733)))
 (let ((?x1333 (+ (- 2) q!3 ?x706 ?x1193 ?x1097)))
 (let ((?x903 (+ (- 4) (* ?x832 ?x832 ?x845 ?x845 ?x845 ?x1333 ?x1333 ?x1333 r!2 r!2 r!2) ?x428 ?x312 ?x850 ?x444 ?x1326 ?x471 ?x642 ?x499 ?x266 ?x1763 ?x572 ?x1044 ?x1638 ?x741)))
 (let ((?x582 (+ 2 q!3 ?x706 ?x1193 d!1)))
 (let ((?x518 (+ (- 4) ?x428 ?x1700 ?x850 ?x1742 ?x1326 ?x471 ?x522 ?x1117 ?x266 ?x341 ?x572 ?x1044 (* ?x845 ?x845 ?x845 ?x730 ?x730 ?x582 ?x582 ?x582 r!2 r!2 r!2) ?x1638 ?x252)))
 (let (($x1590 (or (not (= (* ?x518 ?x906) 0)) (not (= (* (+ (- 4) ?x850 ?x1326 ?x471 ?x1044 ?x1304 ?x1638) ?x906) 0)) (not (= (* ?x903 ?x906) 0)) (not (= (* ?x1166 ?x906) 0)))))
 (let (($x1662 (and (= ?x906 0) $x1590)))
 (let (($x1050 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1643 (* r d)))
 (let ((?x1765 (* (- 4) ?x1643)))
 (let ((?x1640 (* q d d)))
 (let ((?x1642 (* (- 2) (* q d))))
 (let ((?x235 (* 4 (* x d))))
 (let ((?x296 (* r00 d00)))
 (let ((?x297 (* 4 ?x296)))
 (let ((?x258 (* d00 q00)))
 (let ((?x259 (* 2 ?x258)))
 (let ((?x179 (* d00 x00)))
 (let ((?x193 (* (- 4) ?x179)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x209 (* (- 1) ?x41)))
 (let ((?x161 (* (- 8) r00)))
 (let ((?x190 (* 8 r)))
 (let ((?x241 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 ?x235 ?x1642 ?x1640 ?x1765)))
 (let ((?x2005 (* r r r)))
 (let ((?x1510 (* (- 2048) ?x2005)))
 (let ((?x1787 (* (- 1) (* d d))))
 (let ((?x1786 (* (- 4) d)))
 (let ((?x1214 (* q r r r d d)))
 (let ((?x1492 (* 192 ?x1214)))
 (let ((?x1212 (* r r r d d)))
 (let ((?x1506 (* (- 512) ?x1212)))
 (let ((?x1189 (* q q r r r d d)))
 (let ((?x1494 (* (- 24) ?x1189)))
 (let ((?x1182 (* 4 (* q q q r r r d))))
 (let ((?x1184 (* q q q r r r d d)))
 (let ((?x1016 (* r r r d)))
 (let ((?x1344 (* (- 2048) ?x1016)))
 (let ((?x1431 (* (- 2) d)))
 (let ((?x158 (* (- 1) x)))
 (let ((?x128 (* 2 r)))
 (let ((?x1348 (+ (- 4) q ?x128 ?x158 ?x1431)))
 (let ((?x1185 (+ 2 d)))
 (let ((?x1430 (+ (- 8) q)))
 (let ((?x805 (* ?x1430 ?x1430 ?x1185 ?x1185 ?x1185 ?x1348 ?x1348 ?x1348 r r r)))
 (let ((?x606 (* 4 (* q q q r r r))))
 (let ((?x472 (* q q r r r)))
 (let ((?x1507 (* (- 96) ?x472)))
 (let ((?x417 (* q r r r)))
 (let ((?x1511 (* 768 ?x417)))
 (let ((?x828 (+ (- 4) ?x1511 ?x1507 ?x606 ?x805 ?x1344 ?x1184 ?x1182 ?x1494 (* (- 96) (* q q r r r d)) (* 768 (* q r r r d)) ?x1506 ?x1492 ?x1786 ?x1787 ?x1510)))
 (let ((?x1582 (* (- 256) ?x2005)))
 (let ((?x1213 (* 48 ?x1214)))
 (let ((?x1581 (* (- 64) ?x1212)))
 (let ((?x1209 (* q r r r d)))
 (let ((?x1299 (* 192 ?x1209)))
 (let ((?x1191 (* q q r r r d)))
 (let ((?x1493 (* (- 48) ?x1191)))
 (let ((?x1575 (* (- 12) ?x1189)))
 (let ((?x855 (* (- 256) ?x1016)))
 (let ((?x1579 (* (- 48) ?x472)))
 (let ((?x418 (* 192 ?x417)))
 (let ((?x1550 (* (- 1) d)))
 (let ((?x165 (+ (- 2) q ?x128 ?x158 ?x1550)))
 (let ((?x1551 (+ (- 4) q)))
 (let ((?x271 (* ?x1551 ?x1551 ?x1185 ?x1185 ?x1185 ?x165 ?x165 ?x165 r r r)))
 (let ((?x1736 (+ (- 4) ?x271 ?x418 ?x1579 ?x606 ?x855 ?x1184 ?x1182 ?x1575 ?x1493 ?x1299 ?x1581 ?x1213 ?x1786 ?x1787 ?x1582)))
 (let ((?x1126 (+ q ?x128 ?x158)))
 (let ((?x679 (+ (- 4) ?x606 ?x1184 ?x1182 ?x1786 (* ?x1185 ?x1185 ?x1185 ?x1126 ?x1126 ?x1126 r r r q q) ?x1787)))
 (let (($x734 (not (= (* ?x679 ?x241) 0))))
 (let ((?x2003 (* 256 ?x2005)))
 (let ((?x1715 (+ 2 q ?x128 ?x158 d)))
 (let ((?x1163 (+ 4 q)))
 (let ((?x1618 (* ?x1185 ?x1185 ?x1185 ?x1163 ?x1163 ?x1715 ?x1715 ?x1715 r r r)))
 (let ((?x1194 (* 64 ?x1212)))
 (let ((?x1187 (* 12 ?x1189)))
 (let ((?x480 (* 48 ?x472)))
 (let ((?x1147 (+ (- 4) ?x418 ?x480 ?x606 (* 256 ?x1016) ?x1184 ?x1182 ?x1187 (* 48 ?x1191) ?x1299 ?x1194 ?x1213 ?x1786 ?x1618 ?x1787 ?x2003)))
 (let (($x1775 (or (not (= (* ?x1147 ?x241) 0)) $x734 (not (= (* ?x1736 ?x241) 0)) (not (= (* ?x828 ?x241) 0)))))
 (let (($x1290 (= ?x241 0)))
 (and $x1290 $x1775))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x789 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1643 (* r d)))
 (let ((?x1765 (* (- 4) ?x1643)))
 (let ((?x1640 (* q d d)))
 (let ((?x1642 (* (- 2) (* q d))))
 (let ((?x1588 (* 8 d)))
 (let ((?x235 (* 4 (* x d))))
 (let ((?x296 (* r00 d00)))
 (let ((?x297 (* 4 ?x296)))
 (let ((?x258 (* d00 q00)))
 (let ((?x259 (* 2 ?x258)))
 (let ((?x179 (* d00 x00)))
 (let ((?x193 (* (- 4) ?x179)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x209 (* (- 1) ?x41)))
 (let ((?x161 (* (- 8) r00)))
 (let ((?x190 (* 8 r)))
 (let ((?x175 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 (* (- 4) (* d 2)) ?x235 ?x1588 ?x1642 ?x1640 ?x1765)))
 (let ((?x2005 (* r r r)))
 (let ((?x1582 (* (- 256) ?x2005)))
 (let ((?x1787 (* (- 1) (* d d))))
 (let ((?x1786 (* (- 4) d)))
 (let ((?x1212 (* r r r d d)))
 (let ((?x1581 (* (- 64) ?x1212)))
 (let ((?x1189 (* q q r r r d d)))
 (let ((?x1575 (* (- 12) ?x1189)))
 (let ((?x1182 (* 4 (* q q q r r r d))))
 (let ((?x1184 (* q q q r r r d d)))
 (let ((?x1016 (* r r r d)))
 (let ((?x855 (* (- 256) ?x1016)))
 (let ((?x606 (* 4 (* q q q r r r))))
 (let ((?x1550 (* (- 1) d)))
 (let ((?x158 (* (- 1) x)))
 (let ((?x128 (* 2 r)))
 (let ((?x165 (+ (- 2) q ?x128 ?x158 ?x1550)))
 (let ((?x1185 (+ 2 d)))
 (let ((?x1551 (+ (- 4) q)))
 (let ((?x271 (* ?x1551 ?x1551 ?x1185 ?x1185 ?x1185 ?x165 ?x165 ?x165 r r r)))
 (let ((?x719 (+ (- 4) ?x271 (* 128 (* q r r r)) (* (- 32) (* q q r r r)) (* (- 4) (* q (- 4) d 2 r r r)) (* (- 4) (* q (- 4) 2 d r r r)) ?x606 (* (- 4) (* q q 2 d r r r)) ?x855 ?x1184 ?x1182 ?x1575 (* (- 32) (* q q r r r d)) (* 128 (* q r r r d)) ?x1581 (* 32 (* q r r r d d)) (* (- 4) (* q q d 2 r r r)) ?x1786 (* (- 4) (* q q 2 2 r r r)) (* (- 4) (* q (- 4) 2 2 r r r)) (* (- 4) (* q (- 4) d d r r r)) ?x1787 ?x1582)))
 (let ((?x1783 (* 2 (* d 4))))
 (let ((?x1768 (* (- 8) d)))
 (let ((?x2003 (* 256 ?x2005)))
 (let ((?x2002 (* 2 (* d 4 4 4 r r r))))
 (let ((?x1997 (* 2 (* d q 4 4 r r r))))
 (let ((?x1715 (+ 2 q ?x128 ?x158 d)))
 (let ((?x1163 (+ 4 q)))
 (let ((?x1618 (* ?x1185 ?x1185 ?x1185 ?x1163 ?x1163 ?x1715 ?x1715 ?x1715 r r r)))
 (let ((?x1214 (* q r r r d d)))
 (let ((?x1213 (* 48 ?x1214)))
 (let ((?x1194 (* 64 ?x1212)))
 (let ((?x1209 (* q r r r d)))
 (let ((?x1215 (* 96 ?x1209)))
 (let ((?x1191 (* q q r r r d)))
 (let ((?x1192 (* 24 ?x1191)))
 (let ((?x1187 (* 12 ?x1189)))
 (let ((?x1017 (* 128 ?x1016)))
 (let ((?x532 (* 2 (* d 4 q q r r r))))
 (let ((?x438 (* 2 (* d q 4 q r r r))))
 (let ((?x472 (* q q r r r)))
 (let ((?x480 (* 48 ?x472)))
 (let ((?x473 (* 2 (* d 4 4 q r r r))))
 (let ((?x417 (* q r r r)))
 (let ((?x418 (* 192 ?x417)))
 (let ((?x416 (* 2 (* d q q 4 r r r))))
 (let ((?x408 (* 2 (* d 4 q 4 r r r))))
 (let ((?x1003 (+ (- 4) ?x408 ?x416 ?x418 ?x473 ?x480 ?x438 ?x532 ?x606 ?x1017 ?x1184 ?x1182 ?x1187 ?x1192 ?x1215 ?x1194 ?x1213 ?x1786 ?x1618 ?x1997 ?x2002 ?x1787 ?x2003)))
 (let ((?x328 (* ?x1003 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 ?x235 ?x1768 ?x1642 ?x1640 ?x1765 ?x1783))))
 (let ((?x241 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 ?x235 ?x1642 ?x1640 ?x1765)))
 (let ((?x1126 (+ q ?x128 ?x158)))
 (let ((?x679 (+ (- 4) ?x606 ?x1184 ?x1182 ?x1786 (* ?x1185 ?x1185 ?x1185 ?x1126 ?x1126 ?x1126 r r r q q) ?x1787)))
 (let (($x734 (not (= (* ?x679 ?x241) 0))))
 (let ((?x1513 (* 16 d)))
 (let ((?x1653 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 (* (- 8) (* d 2)) ?x235 ?x1513 ?x1642 ?x1640 ?x1765)))
 (let ((?x1510 (* (- 2048) ?x2005)))
 (let ((?x1506 (* (- 512) ?x1212)))
 (let ((?x1494 (* (- 24) ?x1189)))
 (let ((?x1344 (* (- 2048) ?x1016)))
 (let ((?x1431 (* (- 2) d)))
 (let ((?x1348 (+ (- 4) q ?x128 ?x158 ?x1431)))
 (let ((?x1430 (+ (- 8) q)))
 (let ((?x805 (* ?x1430 ?x1430 ?x1185 ?x1185 ?x1185 ?x1348 ?x1348 ?x1348 r r r)))
 (let ((?x1533 (+ (- 4) (* (- 8) (* q (- 8) 2 d r r r)) (* 512 ?x417) (* (- 64) ?x472) (* (- 8) (* q (- 8) d 2 r r r)) ?x606 ?x805 (* (- 8) (* q (- 8) d d r r r)) (* (- 8) (* q q 2 d r r r)) ?x1344 (* (- 8) (* q (- 8) 2 2 r r r)) ?x1184 ?x1182 ?x1494 (* (- 64) ?x1191) (* 512 ?x1209) ?x1506 (* 128 ?x1214) (* (- 8) (* q q d 2 r r r)) ?x1786 (* (- 8) (* q q 2 2 r r r)) ?x1787 ?x1510)))
 (let (($x784 (or (not (= (* ?x1533 ?x1653) 0)) $x734 (not (= ?x328 0)) (not (= (* ?x719 ?x175) 0)))))
 (let (($x1290 (= ?x241 0)))
 (and $x1290 $x784)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1219 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1643 (* r d)))
 (let ((?x1765 (* (- 4) ?x1643)))
 (let ((?x1640 (* q d d)))
 (let ((?x1642 (* (- 2) (* q d))))
 (let ((?x235 (* 4 (* x d))))
 (let ((?x296 (* r00 d00)))
 (let ((?x297 (* 4 ?x296)))
 (let ((?x258 (* d00 q00)))
 (let ((?x259 (* 2 ?x258)))
 (let ((?x179 (* d00 x00)))
 (let ((?x193 (* (- 4) ?x179)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x209 (* (- 1) ?x41)))
 (let ((?x161 (* (- 8) r00)))
 (let ((?x190 (* 8 r)))
 (let ((?x241 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 ?x235 ?x1642 ?x1640 ?x1765)))
 (let ((?x2005 (* r r r)))
 (let ((?x1510 (* (- 2048) ?x2005)))
 (let ((?x1787 (* (- 1) (* d d))))
 (let ((?x1786 (* (- 4) d)))
 (let ((?x1214 (* q r r r d d)))
 (let ((?x1492 (* 192 ?x1214)))
 (let ((?x1212 (* r r r d d)))
 (let ((?x1506 (* (- 512) ?x1212)))
 (let ((?x1189 (* q q r r r d d)))
 (let ((?x1494 (* (- 24) ?x1189)))
 (let ((?x1182 (* 4 (* q q q r r r d))))
 (let ((?x1184 (* q q q r r r d d)))
 (let ((?x1016 (* r r r d)))
 (let ((?x1344 (* (- 2048) ?x1016)))
 (let ((?x1431 (* (- 2) d)))
 (let ((?x158 (* (- 1) x)))
 (let ((?x128 (* 2 r)))
 (let ((?x1348 (+ (- 4) q ?x128 ?x158 ?x1431)))
 (let ((?x1185 (+ 2 d)))
 (let ((?x1430 (+ (- 8) q)))
 (let ((?x805 (* ?x1430 ?x1430 ?x1185 ?x1185 ?x1185 ?x1348 ?x1348 ?x1348 r r r)))
 (let ((?x606 (* 4 (* q q q r r r))))
 (let ((?x472 (* q q r r r)))
 (let ((?x1507 (* (- 96) ?x472)))
 (let ((?x417 (* q r r r)))
 (let ((?x1511 (* 768 ?x417)))
 (let ((?x828 (+ (- 4) ?x1511 ?x1507 ?x606 ?x805 ?x1344 ?x1184 ?x1182 ?x1494 (* (- 96) (* q q r r r d)) (* 768 (* q r r r d)) ?x1506 ?x1492 ?x1786 ?x1787 ?x1510)))
 (let ((?x1582 (* (- 256) ?x2005)))
 (let ((?x1213 (* 48 ?x1214)))
 (let ((?x1581 (* (- 64) ?x1212)))
 (let ((?x1209 (* q r r r d)))
 (let ((?x1299 (* 192 ?x1209)))
 (let ((?x1191 (* q q r r r d)))
 (let ((?x1493 (* (- 48) ?x1191)))
 (let ((?x1575 (* (- 12) ?x1189)))
 (let ((?x855 (* (- 256) ?x1016)))
 (let ((?x1579 (* (- 48) ?x472)))
 (let ((?x418 (* 192 ?x417)))
 (let ((?x1550 (* (- 1) d)))
 (let ((?x165 (+ (- 2) q ?x128 ?x158 ?x1550)))
 (let ((?x1551 (+ (- 4) q)))
 (let ((?x271 (* ?x1551 ?x1551 ?x1185 ?x1185 ?x1185 ?x165 ?x165 ?x165 r r r)))
 (let ((?x1736 (+ (- 4) ?x271 ?x418 ?x1579 ?x606 ?x855 ?x1184 ?x1182 ?x1575 ?x1493 ?x1299 ?x1581 ?x1213 ?x1786 ?x1787 ?x1582)))
 (let ((?x1126 (+ q ?x128 ?x158)))
 (let ((?x679 (+ (- 4) ?x606 ?x1184 ?x1182 ?x1786 (* ?x1185 ?x1185 ?x1185 ?x1126 ?x1126 ?x1126 r r r q q) ?x1787)))
 (let (($x734 (not (= (* ?x679 ?x241) 0))))
 (let ((?x2003 (* 256 ?x2005)))
 (let ((?x1715 (+ 2 q ?x128 ?x158 d)))
 (let ((?x1163 (+ 4 q)))
 (let ((?x1618 (* ?x1185 ?x1185 ?x1185 ?x1163 ?x1163 ?x1715 ?x1715 ?x1715 r r r)))
 (let ((?x1194 (* 64 ?x1212)))
 (let ((?x1187 (* 12 ?x1189)))
 (let ((?x480 (* 48 ?x472)))
 (let ((?x1147 (+ (- 4) ?x418 ?x480 ?x606 (* 256 ?x1016) ?x1184 ?x1182 ?x1187 (* 48 ?x1191) ?x1299 ?x1194 ?x1213 ?x1786 ?x1618 ?x1787 ?x2003)))
 (let (($x1775 (or (not (= (* ?x1147 ?x241) 0)) $x734 (not (= (* ?x1736 ?x241) 0)) (not (= (* ?x828 ?x241) 0)))))
 (let (($x1290 (= ?x241 0)))
 (let (($x1631 (and $x1290 $x1775)))
 (let ((?x1588 (* 8 d)))
 (let ((?x175 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 (* (- 4) (* d 2)) ?x235 ?x1588 ?x1642 ?x1640 ?x1765)))
 (let ((?x719 (+ (- 4) ?x271 (* 128 ?x417) (* (- 32) ?x472) (* (- 4) (* q (- 4) d 2 r r r)) (* (- 4) (* q (- 4) 2 d r r r)) ?x606 (* (- 4) (* q q 2 d r r r)) ?x855 ?x1184 ?x1182 ?x1575 (* (- 32) ?x1191) (* 128 ?x1209) ?x1581 (* 32 ?x1214) (* (- 4) (* q q d 2 r r r)) ?x1786 (* (- 4) (* q q 2 2 r r r)) (* (- 4) (* q (- 4) 2 2 r r r)) (* (- 4) (* q (- 4) d d r r r)) ?x1787 ?x1582)))
 (let ((?x1783 (* 2 (* d 4))))
 (let ((?x1768 (* (- 8) d)))
 (let ((?x2002 (* 2 (* d 4 4 4 r r r))))
 (let ((?x1997 (* 2 (* d q 4 4 r r r))))
 (let ((?x1215 (* 96 ?x1209)))
 (let ((?x1192 (* 24 ?x1191)))
 (let ((?x1017 (* 128 ?x1016)))
 (let ((?x532 (* 2 (* d 4 q q r r r))))
 (let ((?x438 (* 2 (* d q 4 q r r r))))
 (let ((?x473 (* 2 (* d 4 4 q r r r))))
 (let ((?x416 (* 2 (* d q q 4 r r r))))
 (let ((?x408 (* 2 (* d 4 q 4 r r r))))
 (let ((?x1003 (+ (- 4) ?x408 ?x416 ?x418 ?x473 ?x480 ?x438 ?x532 ?x606 ?x1017 ?x1184 ?x1182 ?x1187 ?x1192 ?x1215 ?x1194 ?x1213 ?x1786 ?x1618 ?x1997 ?x2002 ?x1787 ?x2003)))
 (let ((?x328 (* ?x1003 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 ?x235 ?x1768 ?x1642 ?x1640 ?x1765 ?x1783))))
 (let ((?x1513 (* 16 d)))
 (let ((?x1653 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 (* (- 8) (* d 2)) ?x235 ?x1513 ?x1642 ?x1640 ?x1765)))
 (let ((?x1533 (+ (- 4) (* (- 8) (* q (- 8) 2 d r r r)) (* 512 ?x417) (* (- 64) ?x472) (* (- 8) (* q (- 8) d 2 r r r)) ?x606 ?x805 (* (- 8) (* q (- 8) d d r r r)) (* (- 8) (* q q 2 d r r r)) ?x1344 (* (- 8) (* q (- 8) 2 2 r r r)) ?x1184 ?x1182 ?x1494 (* (- 64) ?x1191) (* 512 ?x1209) ?x1506 (* 128 ?x1214) (* (- 8) (* q q d 2 r r r)) ?x1786 (* (- 8) (* q q 2 2 r r r)) ?x1787 ?x1510)))
 (let (($x784 (or (not (= (* ?x1533 ?x1653) 0)) $x734 (not (= ?x328 0)) (not (= (* ?x719 ?x175) 0)))))
 (let (($x660 (and $x1290 $x784)))
 (rewrite (= $x660 $x1631))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x867 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x958 (* 4 (* d00 r00))))
 (let ((?x839 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x258 (* d00 q00)))
 (let ((?x259 (* 2 ?x258)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x209 (* (- 1) ?x41)))
 (let ((?x179 (* d00 x00)))
 (let ((?x193 (* (- 4) ?x179)))
 (let ((?x1138 (* 4 (* (+ 2 d) r))))
 (let ((?x161 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x487 (* (- 8) x)))
 (let ((?x406 (* 16 r)))
 (let ((?x410 (+ ?x406 ?x487 ?x30 ?x161 ?x1138 ?x193 ?x209 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x259 ?x839 ?x958)))
 (let ((?x158 (* (- 1) x)))
 (let ((?x128 (* 2 r)))
 (let ((?x340 (+ ?x128 ?x158 q)))
 (let ((?x1185 (+ 2 d)))
 (let ((?x1282 (* (- 1) (* ?x1185 ?x1185))))
 (let ((?x346 (+ (* ?x1185 ?x1185 r r r q q q) ?x1282 (* ?x1185 ?x1185 ?x1185 ?x340 ?x340 ?x340 r r r q q))))
 (let (($x1597 (not (= (* ?x346 ?x410) 0))))
 (let ((?x1768 (* (- 8) d)))
 (let ((?x475 (+ (- 16) ?x406 ?x487 ?x30 ?x1768 ?x161 ?x1138 ?x193 ?x209 (* (+ (- 4) q) ?x1185 ?x1185) (* (- 2) (* (+ (- 4) q) ?x1185)) ?x259 (* (- 4) (* ?x1185 (+ (- 2) ?x128 ?x158 q (* (- 1) d)))) ?x958)))
 (let ((?x1550 (* (- 1) d)))
 (let ((?x368 (+ (- 2) ?x128 ?x158 q ?x1550)))
 (let ((?x1551 (+ (- 4) q)))
 (let ((?x398 (+ (* ?x1551 ?x1551 ?x1551 ?x1185 ?x1185 r r r) ?x1282 (* ?x1551 ?x1551 ?x1185 ?x1185 ?x1185 ?x368 ?x368 ?x368 r r r))))
 (let (($x1079 (not (= (* ?x398 ?x475) 0))))
 (let ((?x1588 (* 8 d)))
 (let ((?x1487 (+ 16 ?x406 ?x487 ?x30 ?x1588 ?x161 ?x1138 ?x193 ?x209 (* ?x1185 ?x1185 (+ 4 q)) (* (- 2) (* ?x1185 (+ 4 q))) ?x259 (* (- 4) (* ?x1185 (+ 2 ?x128 ?x158 q d))) ?x958)))
 (let ((?x1026 (+ 2 ?x128 ?x158 q d)))
 (let ((?x1163 (+ 4 q)))
 (let ((?x1183 (+ (* ?x1185 ?x1185 ?x1163 ?x1163 ?x1163 r r r) ?x1282 (* ?x1185 ?x1185 ?x1185 ?x1163 ?x1163 ?x1026 ?x1026 ?x1026 r r r))))
 (let (($x351 (not (= (* ?x1183 ?x1487) 0))))
 (let ((?x1104 (+ (- 32) ?x406 ?x487 ?x30 (* (- 16) d) ?x161 ?x1138 ?x193 ?x209 (* (+ (- 8) q) ?x1185 ?x1185) (* (- 2) (* (+ (- 8) q) ?x1185)) ?x259 (* (- 4) (* ?x1185 (+ (- 4) ?x128 ?x158 q (* (- 2) d)))) ?x958)))
 (let ((?x1431 (* (- 2) d)))
 (let ((?x959 (+ (- 4) ?x128 ?x158 q ?x1431)))
 (let ((?x1430 (+ (- 8) q)))
 (let ((?x1159 (+ (* ?x1430 ?x1430 ?x1430 ?x1185 ?x1185 r r r) ?x1282 (* ?x1430 ?x1430 ?x1185 ?x1185 ?x1185 ?x959 ?x959 ?x959 r r r))))
 (let (($x336 (not (= (* ?x1159 ?x1104) 0))))
 (let ((?x235 (* 4 (* x d))))
 (let ((?x190 (* 8 r)))
 (let ((?x562 (+ ?x190 ?x161 ?x235 ?x193 ?x209 (* d d q) (* (- 2) (* d q)) ?x259 (* (- 4) (* d r)) ?x958)))
 (let (($x563 (= ?x562 0)))
 (and $x563 (or $x336 $x351 $x1079 $x1597)))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x667 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1643 (* r d)))
 (let ((?x1765 (* (- 4) ?x1643)))
 (let ((?x1640 (* q d d)))
 (let ((?x1642 (* (- 2) (* q d))))
 (let ((?x1588 (* 8 d)))
 (let ((?x235 (* 4 (* x d))))
 (let ((?x296 (* r00 d00)))
 (let ((?x297 (* 4 ?x296)))
 (let ((?x258 (* d00 q00)))
 (let ((?x259 (* 2 ?x258)))
 (let ((?x179 (* d00 x00)))
 (let ((?x193 (* (- 4) ?x179)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x209 (* (- 1) ?x41)))
 (let ((?x161 (* (- 8) r00)))
 (let ((?x190 (* 8 r)))
 (let ((?x175 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 (* (- 4) (* d 2)) ?x235 ?x1588 ?x1642 ?x1640 ?x1765)))
 (let ((?x2005 (* r r r)))
 (let ((?x1582 (* (- 256) ?x2005)))
 (let ((?x1787 (* (- 1) (* d d))))
 (let ((?x1786 (* (- 4) d)))
 (let ((?x1212 (* r r r d d)))
 (let ((?x1581 (* (- 64) ?x1212)))
 (let ((?x1189 (* q q r r r d d)))
 (let ((?x1575 (* (- 12) ?x1189)))
 (let ((?x1182 (* 4 (* q q q r r r d))))
 (let ((?x1184 (* q q q r r r d d)))
 (let ((?x1016 (* r r r d)))
 (let ((?x855 (* (- 256) ?x1016)))
 (let ((?x606 (* 4 (* q q q r r r))))
 (let ((?x1550 (* (- 1) d)))
 (let ((?x158 (* (- 1) x)))
 (let ((?x128 (* 2 r)))
 (let ((?x165 (+ (- 2) q ?x128 ?x158 ?x1550)))
 (let ((?x1185 (+ 2 d)))
 (let ((?x1551 (+ (- 4) q)))
 (let ((?x271 (* ?x1551 ?x1551 ?x1185 ?x1185 ?x1185 ?x165 ?x165 ?x165 r r r)))
 (let ((?x719 (+ (- 4) ?x271 (* 128 (* q r r r)) (* (- 32) (* q q r r r)) (* (- 4) (* q (- 4) d 2 r r r)) (* (- 4) (* q (- 4) 2 d r r r)) ?x606 (* (- 4) (* q q 2 d r r r)) ?x855 ?x1184 ?x1182 ?x1575 (* (- 32) (* q q r r r d)) (* 128 (* q r r r d)) ?x1581 (* 32 (* q r r r d d)) (* (- 4) (* q q d 2 r r r)) ?x1786 (* (- 4) (* q q 2 2 r r r)) (* (- 4) (* q (- 4) 2 2 r r r)) (* (- 4) (* q (- 4) d d r r r)) ?x1787 ?x1582)))
 (let ((?x1783 (* 2 (* d 4))))
 (let ((?x1768 (* (- 8) d)))
 (let ((?x2003 (* 256 ?x2005)))
 (let ((?x2002 (* 2 (* d 4 4 4 r r r))))
 (let ((?x1997 (* 2 (* d q 4 4 r r r))))
 (let ((?x1715 (+ 2 q ?x128 ?x158 d)))
 (let ((?x1163 (+ 4 q)))
 (let ((?x1618 (* ?x1185 ?x1185 ?x1185 ?x1163 ?x1163 ?x1715 ?x1715 ?x1715 r r r)))
 (let ((?x1214 (* q r r r d d)))
 (let ((?x1213 (* 48 ?x1214)))
 (let ((?x1194 (* 64 ?x1212)))
 (let ((?x1209 (* q r r r d)))
 (let ((?x1215 (* 96 ?x1209)))
 (let ((?x1191 (* q q r r r d)))
 (let ((?x1192 (* 24 ?x1191)))
 (let ((?x1187 (* 12 ?x1189)))
 (let ((?x1017 (* 128 ?x1016)))
 (let ((?x532 (* 2 (* d 4 q q r r r))))
 (let ((?x438 (* 2 (* d q 4 q r r r))))
 (let ((?x472 (* q q r r r)))
 (let ((?x480 (* 48 ?x472)))
 (let ((?x473 (* 2 (* d 4 4 q r r r))))
 (let ((?x417 (* q r r r)))
 (let ((?x418 (* 192 ?x417)))
 (let ((?x416 (* 2 (* d q q 4 r r r))))
 (let ((?x408 (* 2 (* d 4 q 4 r r r))))
 (let ((?x1003 (+ (- 4) ?x408 ?x416 ?x418 ?x473 ?x480 ?x438 ?x532 ?x606 ?x1017 ?x1184 ?x1182 ?x1187 ?x1192 ?x1215 ?x1194 ?x1213 ?x1786 ?x1618 ?x1997 ?x2002 ?x1787 ?x2003)))
 (let ((?x328 (* ?x1003 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 ?x235 ?x1768 ?x1642 ?x1640 ?x1765 ?x1783))))
 (let ((?x241 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 ?x235 ?x1642 ?x1640 ?x1765)))
 (let ((?x1126 (+ q ?x128 ?x158)))
 (let ((?x679 (+ (- 4) ?x606 ?x1184 ?x1182 ?x1786 (* ?x1185 ?x1185 ?x1185 ?x1126 ?x1126 ?x1126 r r r q q) ?x1787)))
 (let (($x734 (not (= (* ?x679 ?x241) 0))))
 (let ((?x1513 (* 16 d)))
 (let ((?x1653 (+ ?x190 ?x161 ?x209 ?x193 ?x259 ?x297 (* (- 8) (* d 2)) ?x235 ?x1513 ?x1642 ?x1640 ?x1765)))
 (let ((?x1510 (* (- 2048) ?x2005)))
 (let ((?x1506 (* (- 512) ?x1212)))
 (let ((?x1494 (* (- 24) ?x1189)))
 (let ((?x1344 (* (- 2048) ?x1016)))
 (let ((?x1431 (* (- 2) d)))
 (let ((?x1348 (+ (- 4) q ?x128 ?x158 ?x1431)))
 (let ((?x1430 (+ (- 8) q)))
 (let ((?x805 (* ?x1430 ?x1430 ?x1185 ?x1185 ?x1185 ?x1348 ?x1348 ?x1348 r r r)))
 (let ((?x1533 (+ (- 4) (* (- 8) (* q (- 8) 2 d r r r)) (* 512 ?x417) (* (- 64) ?x472) (* (- 8) (* q (- 8) d 2 r r r)) ?x606 ?x805 (* (- 8) (* q (- 8) d d r r r)) (* (- 8) (* q q 2 d r r r)) ?x1344 (* (- 8) (* q (- 8) 2 2 r r r)) ?x1184 ?x1182 ?x1494 (* (- 64) ?x1191) (* 512 ?x1209) ?x1506 (* 128 ?x1214) (* (- 8) (* q q d 2 r r r)) ?x1786 (* (- 8) (* q q 2 2 r r r)) ?x1787 ?x1510)))
 (let (($x784 (or (not (= (* ?x1533 ?x1653) 0)) $x734 (not (= ?x328 0)) (not (= (* ?x719 ?x175) 0)))))
 (let (($x1290 (= ?x241 0)))
 (let (($x660 (and $x1290 $x784)))
 (let ((?x958 (* 4 (* d00 r00))))
 (let ((?x1138 (* 4 (* ?x1185 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x487 (* (- 8) x)))
 (let ((?x406 (* 16 r)))
 (let ((?x410 (+ ?x406 ?x487 ?x30 ?x161 ?x1138 ?x193 ?x209 (* ?x1185 ?x1185 q) (* (- 2) (* ?x1185 q)) ?x259 (* (- 4) (* ?x1185 (+ ?x128 ?x158 q))) ?x958)))
 (let ((?x340 (+ ?x128 ?x158 q)))
 (let ((?x1282 (* (- 1) (* ?x1185 ?x1185))))
 (let ((?x346 (+ (* ?x1185 ?x1185 r r r q q q) ?x1282 (* ?x1185 ?x1185 ?x1185 ?x340 ?x340 ?x340 r r r q q))))
 (let (($x1597 (not (= (* ?x346 ?x410) 0))))
 (let ((?x475 (+ (- 16) ?x406 ?x487 ?x30 ?x1768 ?x161 ?x1138 ?x193 ?x209 (* ?x1551 ?x1185 ?x1185) (* (- 2) (* ?x1551 ?x1185)) ?x259 (* (- 4) (* ?x1185 (+ (- 2) ?x128 ?x158 q ?x1550))) ?x958)))
 (let ((?x368 (+ (- 2) ?x128 ?x158 q ?x1550)))
 (let ((?x398 (+ (* ?x1551 ?x1551 ?x1551 ?x1185 ?x1185 r r r) ?x1282 (* ?x1551 ?x1551 ?x1185 ?x1185 ?x1185 ?x368 ?x368 ?x368 r r r))))
 (let (($x1079 (not (= (* ?x398 ?x475) 0))))
 (let ((?x1487 (+ 16 ?x406 ?x487 ?x30 ?x1588 ?x161 ?x1138 ?x193 ?x209 (* ?x1185 ?x1185 ?x1163) (* (- 2) (* ?x1185 ?x1163)) ?x259 (* (- 4) (* ?x1185 (+ 2 ?x128 ?x158 q d))) ?x958)))
 (let ((?x1026 (+ 2 ?x128 ?x158 q d)))
 (let ((?x1183 (+ (* ?x1185 ?x1185 ?x1163 ?x1163 ?x1163 r r r) ?x1282 (* ?x1185 ?x1185 ?x1185 ?x1163 ?x1163 ?x1026 ?x1026 ?x1026 r r r))))
 (let (($x351 (not (= (* ?x1183 ?x1487) 0))))
 (let ((?x1104 (+ (- 32) ?x406 ?x487 ?x30 (* (- 16) d) ?x161 ?x1138 ?x193 ?x209 (* ?x1430 ?x1185 ?x1185) (* (- 2) (* ?x1430 ?x1185)) ?x259 (* (- 4) (* ?x1185 (+ (- 4) ?x128 ?x158 q ?x1431))) ?x958)))
 (let ((?x959 (+ (- 4) ?x128 ?x158 q ?x1431)))
 (let ((?x1159 (+ (* ?x1430 ?x1430 ?x1430 ?x1185 ?x1185 r r r) ?x1282 (* ?x1430 ?x1430 ?x1185 ?x1185 ?x1185 ?x959 ?x959 ?x959 r r r))))
 (let (($x336 (not (= (* ?x1159 ?x1104) 0))))
 (let ((?x562 (+ ?x190 ?x161 ?x235 ?x193 ?x209 (* d d q) (* (- 2) (* d q)) ?x259 (* (- 4) (* d r)) ?x958)))
 (let (($x563 (= ?x562 0)))
 (let (($x319 (and $x563 (or $x336 $x351 $x1079 $x1597))))
 (rewrite (= $x319 $x660))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1087 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x958 (* 4 (* d00 r00))))
 (let ((?x1550 (* (- 1) d)))
 (let ((?x158 (* (- 1) x)))
 (let ((?x128 (* 2 r)))
 (let ((?x368 (+ (- 2) ?x128 ?x158 q ?x1550)))
 (let ((?x1185 (+ 2 d)))
 (let ((?x258 (* d00 q00)))
 (let ((?x259 (* 2 ?x258)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x209 (* (- 1) ?x41)))
 (let ((?x179 (* d00 x00)))
 (let ((?x193 (* (- 4) ?x179)))
 (let ((?x1138 (* 4 (* ?x1185 r))))
 (let ((?x161 (* (- 8) r00)))
 (let ((?x1768 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x487 (* (- 8) x)))
 (let ((?x406 (* 16 r)))
 (let ((?x475 (+ (- 16) ?x406 ?x487 ?x30 ?x1768 ?x161 ?x1138 ?x193 ?x209 (* (+ (- 4) q) ?x1185 ?x1185) (* (- 2) (* (+ (- 4) q) ?x1185)) ?x259 (* (- 4) (* ?x1185 ?x368)) ?x958)))
 (let ((?x1551 (+ (- 4) q)))
 (let ((?x1282 (* (- 1) (* ?x1185 ?x1185))))
 (let ((?x398 (+ (* ?x1551 ?x1551 ?x1551 ?x1185 ?x1185 r r r) ?x1282 (* ?x1551 ?x1551 ?x1185 ?x1185 ?x1185 ?x368 ?x368 ?x368 r r r))))
 (let (($x1079 (not (= (* ?x398 ?x475) 0))))
 (let ((?x1588 (* 8 d)))
 (let ((?x1487 (+ 16 ?x406 ?x487 ?x30 ?x1588 ?x161 ?x1138 ?x193 ?x209 (* ?x1185 ?x1185 (+ 4 q)) (* (- 2) (* ?x1185 (+ 4 q))) ?x259 (* (- 4) (* ?x1185 (+ 2 ?x128 ?x158 q d))) ?x958)))
 (let ((?x1026 (+ 2 ?x128 ?x158 q d)))
 (let ((?x1163 (+ 4 q)))
 (let ((?x1183 (+ (* ?x1185 ?x1185 ?x1163 ?x1163 ?x1163 r r r) ?x1282 (* ?x1185 ?x1185 ?x1185 ?x1163 ?x1163 ?x1026 ?x1026 ?x1026 r r r))))
 (let (($x351 (not (= (* ?x1183 ?x1487) 0))))
 (let ((?x410 (+ ?x406 ?x487 ?x30 ?x161 ?x1138 ?x193 ?x209 (* ?x1185 ?x1185 q) (* (- 2) (* ?x1185 q)) ?x259 (* (- 4) (* ?x1185 (+ ?x128 ?x158 q))) ?x958)))
 (let ((?x340 (+ ?x128 ?x158 q)))
 (let ((?x346 (+ (* ?x1185 ?x1185 r r r q q q) ?x1282 (* ?x1185 ?x1185 ?x1185 ?x340 ?x340 ?x340 r r r q q))))
 (let (($x1597 (not (= (* ?x346 ?x410) 0))))
 (let ((?x1104 (+ (- 32) ?x406 ?x487 ?x30 (* (- 16) d) ?x161 ?x1138 ?x193 ?x209 (* (+ (- 8) q) ?x1185 ?x1185) (* (- 2) (* (+ (- 8) q) ?x1185)) ?x259 (* (- 4) (* ?x1185 (+ (- 4) ?x128 ?x158 q (* (- 2) d)))) ?x958)))
 (let ((?x1431 (* (- 2) d)))
 (let ((?x959 (+ (- 4) ?x128 ?x158 q ?x1431)))
 (let ((?x1430 (+ (- 8) q)))
 (let ((?x1159 (+ (* ?x1430 ?x1430 ?x1430 ?x1185 ?x1185 r r r) ?x1282 (* ?x1430 ?x1430 ?x1185 ?x1185 ?x1185 ?x959 ?x959 ?x959 r r r))))
 (let (($x336 (not (= (* ?x1159 ?x1104) 0))))
 (let ((?x235 (* 4 (* x d))))
 (let ((?x190 (* 8 r)))
 (let ((?x562 (+ ?x190 ?x161 ?x235 ?x193 ?x209 (* d d q) (* (- 2) (* d q)) ?x259 (* (- 4) (* d r)) ?x958)))
 (let (($x563 (= ?x562 0)))
 (and $x563 (or $x336 $x1597 $x351 $x1079))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x183 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x958 (* 4 (* d00 r00))))
 (let ((?x839 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x258 (* d00 q00)))
 (let ((?x259 (* 2 ?x258)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x209 (* (- 1) ?x41)))
 (let ((?x179 (* d00 x00)))
 (let ((?x193 (* (- 4) ?x179)))
 (let ((?x1138 (* 4 (* (+ 2 d) r))))
 (let ((?x161 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x487 (* (- 8) x)))
 (let ((?x406 (* 16 r)))
 (let ((?x410 (+ ?x406 ?x487 ?x30 ?x161 ?x1138 ?x193 ?x209 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x259 ?x839 ?x958)))
 (let ((?x158 (* (- 1) x)))
 (let ((?x128 (* 2 r)))
 (let ((?x340 (+ ?x128 ?x158 q)))
 (let ((?x1185 (+ 2 d)))
 (let ((?x1282 (* (- 1) (* ?x1185 ?x1185))))
 (let ((?x346 (+ (* ?x1185 ?x1185 r r r q q q) ?x1282 (* ?x1185 ?x1185 ?x1185 ?x340 ?x340 ?x340 r r r q q))))
 (let (($x1597 (not (= (* ?x346 ?x410) 0))))
 (let ((?x1768 (* (- 8) d)))
 (let ((?x475 (+ (- 16) ?x406 ?x487 ?x30 ?x1768 ?x161 ?x1138 ?x193 ?x209 (* (+ (- 4) q) ?x1185 ?x1185) (* (- 2) (* (+ (- 4) q) ?x1185)) ?x259 (* (- 4) (* ?x1185 (+ (- 2) ?x128 ?x158 q (* (- 1) d)))) ?x958)))
 (let ((?x1550 (* (- 1) d)))
 (let ((?x368 (+ (- 2) ?x128 ?x158 q ?x1550)))
 (let ((?x1551 (+ (- 4) q)))
 (let ((?x398 (+ (* ?x1551 ?x1551 ?x1551 ?x1185 ?x1185 r r r) ?x1282 (* ?x1551 ?x1551 ?x1185 ?x1185 ?x1185 ?x368 ?x368 ?x368 r r r))))
 (let (($x1079 (not (= (* ?x398 ?x475) 0))))
 (let ((?x1588 (* 8 d)))
 (let ((?x1487 (+ 16 ?x406 ?x487 ?x30 ?x1588 ?x161 ?x1138 ?x193 ?x209 (* ?x1185 ?x1185 (+ 4 q)) (* (- 2) (* ?x1185 (+ 4 q))) ?x259 (* (- 4) (* ?x1185 (+ 2 ?x128 ?x158 q d))) ?x958)))
 (let ((?x1026 (+ 2 ?x128 ?x158 q d)))
 (let ((?x1163 (+ 4 q)))
 (let ((?x1183 (+ (* ?x1185 ?x1185 ?x1163 ?x1163 ?x1163 r r r) ?x1282 (* ?x1185 ?x1185 ?x1185 ?x1163 ?x1163 ?x1026 ?x1026 ?x1026 r r r))))
 (let (($x351 (not (= (* ?x1183 ?x1487) 0))))
 (let ((?x1104 (+ (- 32) ?x406 ?x487 ?x30 (* (- 16) d) ?x161 ?x1138 ?x193 ?x209 (* (+ (- 8) q) ?x1185 ?x1185) (* (- 2) (* (+ (- 8) q) ?x1185)) ?x259 (* (- 4) (* ?x1185 (+ (- 4) ?x128 ?x158 q (* (- 2) d)))) ?x958)))
 (let ((?x1431 (* (- 2) d)))
 (let ((?x959 (+ (- 4) ?x128 ?x158 q ?x1431)))
 (let ((?x1430 (+ (- 8) q)))
 (let ((?x1159 (+ (* ?x1430 ?x1430 ?x1430 ?x1185 ?x1185 r r r) ?x1282 (* ?x1430 ?x1430 ?x1185 ?x1185 ?x1185 ?x959 ?x959 ?x959 r r r))))
 (let (($x336 (not (= (* ?x1159 ?x1104) 0))))
 (let ((?x235 (* 4 (* x d))))
 (let ((?x190 (* 8 r)))
 (let ((?x562 (+ ?x190 ?x161 ?x235 ?x193 ?x209 (* d d q) (* (- 2) (* d q)) ?x259 (* (- 4) (* d r)) ?x958)))
 (let (($x563 (= ?x562 0)))
 (let (($x319 (and $x563 (or $x336 $x351 $x1079 $x1597))))
 (let (($x1084 (and $x563 (or $x336 $x1597 $x351 $x1079))))
 (rewrite (= $x1084 $x319)))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x154 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x130 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x136 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x148 (+ (- (* ?x62 ?x62 ?x136 ?x136 ?x136 r r r) (* ?x62 ?x62)) (* ?x62 ?x62 ?x62 ?x136 ?x136 ?x130 ?x130 ?x130 r r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x134 (- (+ (- (* 8 ?x130) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x141 (+ (- (+ (- ?x134 ?x41) (* ?x62 ?x62 ?x136)) (* 2 ?x62 ?x136)) ?x49)))
 (let ((?x106 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x112 (- q 4)))
 (let ((?x124 (+ (- (* ?x62 ?x62 ?x112 ?x112 ?x112 r r r) (* ?x62 ?x62)) (* ?x62 ?x62 ?x62 ?x112 ?x112 ?x106 ?x106 ?x106 r r r))))
 (let ((?x110 (- (+ (- (* 8 ?x106) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x117 (+ (- (+ (- ?x110 ?x41) (* ?x62 ?x62 ?x112)) (* 2 ?x62 ?x112)) ?x49)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x84 (+ ?x58 q)))
 (let ((?x101 (+ (- (* ?x62 ?x62 q q q r r r) (* ?x62 ?x62)) (* ?x62 ?x62 ?x62 q q ?x84 ?x84 ?x84 r r r))))
 (let ((?x88 (- (+ (- (* 8 ?x84) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (- (* ?x62 ?x62 ?x67 ?x67 ?x67 r r r) (* ?x62 ?x62)) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 ?x59 r r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x152 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x80) 0)) (not (= (* (+ (- ?x94 (* 4 ?x62 ?x84)) ?x53) ?x101) 0)) (not (= (* (+ (- ?x117 (* 4 ?x62 ?x106)) ?x53) ?x124) 0)) (not (= (* (+ (- ?x141 (* 4 ?x62 ?x130)) ?x53) ?x148) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x152))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1391 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x958 (* 4 (* d00 r00))))
 (let ((?x1011 (* (- 1) d)))
 (let ((?x158 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1305 (+ (- 2) ?x57 ?x158 q ?x1011)))
 (let ((?x264 (+ 2 d)))
 (let ((?x258 (* d00 q00)))
 (let ((?x259 (* 2 ?x258)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x209 (* (- 1) ?x41)))
 (let ((?x179 (* d00 x00)))
 (let ((?x193 (* (- 4) ?x179)))
 (let ((?x313 (* 4 (* ?x264 r))))
 (let ((?x161 (* (- 8) r00)))
 (let ((?x451 (* (- 8) d)))
 (let ((?x214 (* 8 q)))
 (let ((?x487 (* (- 8) x)))
 (let ((?x497 (* 16 r)))
 (let ((?x1061 (+ (- 16) ?x497 ?x487 ?x214 ?x451 ?x161 ?x313 ?x193 ?x209 (* (+ (- 4) q) ?x264 ?x264) (* (- 2) (* (+ (- 4) q) ?x264)) ?x259 (* (- 4) (* ?x264 ?x1305)) ?x958)))
 (let ((?x1069 (+ (- 4) q)))
 (let ((?x1254 (* (- 1) (* ?x264 ?x264))))
 (let ((?x1491 (+ (* ?x1069 ?x1069 ?x1069 ?x264 ?x264 r r r) ?x1254 (* ?x1069 ?x1069 ?x264 ?x264 ?x264 ?x1305 ?x1305 ?x1305 r r r))))
 (let ((?x190 (* 8 d)))
 (let ((?x1356 (+ 16 ?x497 ?x487 ?x214 ?x190 ?x161 ?x313 ?x193 ?x209 (* ?x264 ?x264 (+ 4 q)) (* (- 2) (* ?x264 (+ 4 q))) ?x259 (* (- 4) (* ?x264 (+ 2 ?x57 ?x158 q d))) ?x958)))
 (let ((?x276 (+ 2 ?x57 ?x158 q d)))
 (let ((?x348 (+ 4 q)))
 (let ((?x401 (+ (* ?x264 ?x264 ?x348 ?x348 ?x348 r r r) ?x1254 (* ?x264 ?x264 ?x264 ?x348 ?x348 ?x276 ?x276 ?x276 r r r))))
 (let ((?x360 (+ ?x497 ?x487 ?x214 ?x161 ?x313 ?x193 ?x209 (* ?x264 ?x264 q) (* (- 2) (* ?x264 q)) ?x259 (* (- 4) (* ?x264 (+ ?x57 ?x158 q))) ?x958)))
 (let ((?x1059 (+ ?x57 ?x158 q)))
 (let ((?x256 (+ (* ?x264 ?x264 r r r q q q) ?x1254 (* ?x264 ?x264 ?x264 ?x1059 ?x1059 ?x1059 r r r q q))))
 (let ((?x229 (+ (- 32) ?x497 ?x487 ?x214 (* (- 16) d) ?x161 ?x313 ?x193 ?x209 (* (+ (- 8) q) ?x264 ?x264) (* (- 2) (* (+ (- 8) q) ?x264)) ?x259 (* (- 4) (* ?x264 (+ (- 4) ?x57 ?x158 q (* (- 2) d)))) ?x958)))
 (let ((?x1376 (* (- 2) d)))
 (let ((?x489 (+ (- 4) ?x57 ?x158 q ?x1376)))
 (let ((?x908 (+ (- 8) q)))
 (let ((?x1532 (+ (* ?x908 ?x908 ?x908 ?x264 ?x264 r r r) ?x1254 (* ?x908 ?x908 ?x264 ?x264 ?x264 ?x489 ?x489 ?x489 r r r))))
 (let (($x558 (or (not (= (* ?x1532 ?x229) 0)) (not (= (* ?x256 ?x360) 0)) (not (= (* ?x401 ?x1356) 0)) (not (= (* ?x1491 ?x1061) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1266 (+ ?x30 ?x161 (* 4 (* x d)) ?x193 ?x209 ?x44 (* (- 2) (* d q)) ?x259 (* (- 4) (* d r)) ?x958)))
 (and (= ?x1266 0) $x558)))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x478 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x958 (* 4 (* d00 r00))))
 (let ((?x1011 (* (- 1) d)))
 (let ((?x158 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1305 (+ (- 2) ?x57 ?x158 q ?x1011)))
 (let ((?x264 (+ 2 d)))
 (let ((?x258 (* d00 q00)))
 (let ((?x259 (* 2 ?x258)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x209 (* (- 1) ?x41)))
 (let ((?x179 (* d00 x00)))
 (let ((?x193 (* (- 4) ?x179)))
 (let ((?x313 (* 4 (* ?x264 r))))
 (let ((?x161 (* (- 8) r00)))
 (let ((?x451 (* (- 8) d)))
 (let ((?x214 (* 8 q)))
 (let ((?x487 (* (- 8) x)))
 (let ((?x497 (* 16 r)))
 (let ((?x1061 (+ (- 16) ?x497 ?x487 ?x214 ?x451 ?x161 ?x313 ?x193 ?x209 (* (+ (- 4) q) ?x264 ?x264) (* (- 2) (* (+ (- 4) q) ?x264)) ?x259 (* (- 4) (* ?x264 ?x1305)) ?x958)))
 (let ((?x1069 (+ (- 4) q)))
 (let ((?x1254 (* (- 1) (* ?x264 ?x264))))
 (let ((?x1491 (+ (* ?x1069 ?x1069 ?x1069 ?x264 ?x264 r r r) ?x1254 (* ?x1069 ?x1069 ?x264 ?x264 ?x264 ?x1305 ?x1305 ?x1305 r r r))))
 (let ((?x190 (* 8 d)))
 (let ((?x1356 (+ 16 ?x497 ?x487 ?x214 ?x190 ?x161 ?x313 ?x193 ?x209 (* ?x264 ?x264 (+ 4 q)) (* (- 2) (* ?x264 (+ 4 q))) ?x259 (* (- 4) (* ?x264 (+ 2 ?x57 ?x158 q d))) ?x958)))
 (let ((?x276 (+ 2 ?x57 ?x158 q d)))
 (let ((?x348 (+ 4 q)))
 (let ((?x401 (+ (* ?x264 ?x264 ?x348 ?x348 ?x348 r r r) ?x1254 (* ?x264 ?x264 ?x264 ?x348 ?x348 ?x276 ?x276 ?x276 r r r))))
 (let ((?x360 (+ ?x497 ?x487 ?x214 ?x161 ?x313 ?x193 ?x209 (* ?x264 ?x264 q) (* (- 2) (* ?x264 q)) ?x259 (* (- 4) (* ?x264 (+ ?x57 ?x158 q))) ?x958)))
 (let ((?x1059 (+ ?x57 ?x158 q)))
 (let ((?x256 (+ (* ?x264 ?x264 r r r q q q) ?x1254 (* ?x264 ?x264 ?x264 ?x1059 ?x1059 ?x1059 r r r q q))))
 (let ((?x229 (+ (- 32) ?x497 ?x487 ?x214 (* (- 16) d) ?x161 ?x313 ?x193 ?x209 (* (+ (- 8) q) ?x264 ?x264) (* (- 2) (* (+ (- 8) q) ?x264)) ?x259 (* (- 4) (* ?x264 (+ (- 4) ?x57 ?x158 q (* (- 2) d)))) ?x958)))
 (let ((?x1376 (* (- 2) d)))
 (let ((?x489 (+ (- 4) ?x57 ?x158 q ?x1376)))
 (let ((?x908 (+ (- 8) q)))
 (let ((?x1532 (+ (* ?x908 ?x908 ?x908 ?x264 ?x264 r r r) ?x1254 (* ?x908 ?x908 ?x264 ?x264 ?x264 ?x489 ?x489 ?x489 r r r))))
 (let (($x558 (or (not (= (* ?x1532 ?x229) 0)) (not (= (* ?x256 ?x360) 0)) (not (= (* ?x401 ?x1356) 0)) (not (= (* ?x1491 ?x1061) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1266 (+ ?x30 ?x161 (* 4 (* x d)) ?x193 ?x209 ?x44 (* (- 2) (* d q)) ?x259 (* (- 4) (* d r)) ?x958)))
 (let (($x564 (and (= ?x1266 0) $x558)))
 (let ((?x130 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x136 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x148 (+ (- (* ?x62 ?x62 ?x136 ?x136 ?x136 r r r) (* ?x62 ?x62)) (* ?x62 ?x62 ?x62 ?x136 ?x136 ?x130 ?x130 ?x130 r r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x134 (- (+ (- (* 8 ?x130) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x141 (+ (- (+ (- ?x134 ?x41) (* ?x62 ?x62 ?x136)) (* 2 ?x62 ?x136)) ?x49)))
 (let ((?x106 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x112 (- q 4)))
 (let ((?x124 (+ (- (* ?x62 ?x62 ?x112 ?x112 ?x112 r r r) (* ?x62 ?x62)) (* ?x62 ?x62 ?x62 ?x112 ?x112 ?x106 ?x106 ?x106 r r r))))
 (let ((?x110 (- (+ (- (* 8 ?x106) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x117 (+ (- (+ (- ?x110 ?x41) (* ?x62 ?x62 ?x112)) (* 2 ?x62 ?x112)) ?x49)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x84 (+ ?x58 q)))
 (let ((?x101 (+ (- (* ?x62 ?x62 q q q r r r) (* ?x62 ?x62)) (* ?x62 ?x62 ?x62 q q ?x84 ?x84 ?x84 r r r))))
 (let ((?x88 (- (+ (- (* 8 ?x84) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (- (* ?x62 ?x62 ?x67 ?x67 ?x67 r r r) (* ?x62 ?x62)) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 ?x59 r r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x152 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x80) 0)) (not (= (* (+ (- ?x94 (* 4 ?x62 ?x84)) ?x53) ?x101) 0)) (not (= (* (+ (- ?x117 (* 4 ?x62 ?x106)) ?x53) ?x124) 0)) (not (= (* (+ (- ?x141 (* 4 ?x62 ?x130)) ?x53) ?x148) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x153 (and (= ?x54 0) $x152)))
 (rewrite (= $x153 $x564)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x550 (trans (quant-intro (proof-bind ?x478) (= $x154 $x1391)) (elim-unused (= $x1391 $x1087)) (= $x154 $x1087))))
 (let ((@x27 (asserted $x154)))
 (let ((@x1393 (mp (mp @x27 @x550 $x1087) (quant-intro (proof-bind ?x183) (= $x1087 $x867)) $x867)))
 (let ((@x1331 (mp (mp @x1393 (rewrite (= $x867 $x867)) $x867) (quant-intro (proof-bind ?x667) (= $x867 $x789)) $x789)))
 (let ((@x1417 (mp~ (mp @x1331 (quant-intro (proof-bind ?x1219) (= $x789 $x1050)) $x1050) (sk (~ $x1050 $x1662)) $x1662)))
 (let ((@x596 (mp @x1417 (rewrite (= $x1662 $x263)) $x263)))
 (let ((@x1548 (and-elim @x596 $x891)))
 (let ((@x890 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x891) $x470)) @x1548 $x470)))
 (let (($x844 (<= ?x1006 0)))
 (let ((@x386 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x891) $x844)) @x1548 $x844)))
 (let (($x1762 (not (<= ?x1369 0))))
 (let (($x420 (<= ?x477 0)))
 (let (($x1300 (>= ?x477 0)))
 (let ((@x1750 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x415 (not $x420) (not $x1300))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1300)) @x386 @x890 false) $x1300) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x420)) @x386 @x890 false) $x420) $x415)))
 (let (($x1598 (>= ?x714 0)))
 (let (($x560 (<= ?x714 0)))
 (let ((@x462 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1504 (not $x560) (not $x1598))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x560)) @x386 @x890 false) $x560) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1598)) @x386 @x890 false) $x1598) $x1504)))
 (let (($x897 (>= ?x1538 0)))
 (let (($x1634 (<= ?x1538 0)))
 (let ((@x1272 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1029 (not $x1634) (not $x897))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1634)) @x386 @x890 false) $x1634) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x897)) @x386 @x890 false) $x897) $x1029)))
 (let ((@x388 (unit-resolution (unit-resolution (and-elim @x596 $x510) @x1272 @x462 (or $x230 $x1738)) @x1750 $x1738)))
 (let (($x1100 (>= ?x1369 0)))
 (let ((@x1352 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x575 $x1762 (not $x1100))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1100)) @x386 @x890 false) $x1100) @x388 $x1762)))
 ((_ th-lemma arith farkas 1 1 1) @x1352 @x386 @x890 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        46
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             768
 :arith-nonlinear-bounds    8
 :arith-num-rows            14
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 72
 :arith-tableau-max-rows    14
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                3.88
 :memory                    3.28
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1492955
 :num-checks                1
 :propagations              36
 :rlimit-count              8784
 :time                      0.01
 :total-time                0.02)
