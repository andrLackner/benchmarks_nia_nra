unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1296 (* (- 1) s!1)))
 (let ((?x301 (* r00 r00)))
 (let ((?x2056 (* (- 3) ?x301)))
 (let ((?x3006 (+ s00 ?x2056 (* 3 (* r!2 r!2)) ?x1296)))
 (let (($x5282 (<= ?x3006 0)))
 (let (($x3007 (= ?x3006 0)))
 (let ((?x2485 (+ ?x1296 x!0)))
 (let ((?x1335 (+ 1 r!2)))
 (let ((?x3183 (* 4 (* s00 ?x1335 ?x1335 ?x1335 ?x1335 ?x2485 ?x2485 ?x2485))))
 (let ((?x2043 (* 6 r!2)))
 (let ((?x4864 (+ 3 s!1 ?x2043)))
 (let ((?x4447 (* 6 (* ?x1335 ?x1335 ?x1335 ?x2485 ?x2485 ?x2485 ?x2485))))
 (let ((?x3474 (* s!1 s!1 s!1)))
 (let ((?x1399 (* (- 7) ?x3474)))
 (let ((?x3464 (* 3 (* ?x1335 ?x1335 ?x1335 ?x1335 ?x2485 ?x2485 ?x2485))))
 (let ((?x3439 (* 3 (* r!2 x!0 x!0))))
 (let ((?x3436 (* 20 (* s!1 s!1 x!0))))
 (let ((?x2072 (* 6 (* x!0 x!0 x!0))))
 (let ((?x2077 (* (- 19) (* s!1 x!0 x!0))))
 (let ((?x2068 (* 12 (* r!2 r!2 x!0 x!0))))
 (let ((?x4664 (* (- 12) (* r00 r00 ?x1335 ?x1335 ?x1335 ?x1335 ?x2485 ?x2485 ?x2485))))
 (let ((?x440 (+ (* 180 (* r00 r00 r00 s!1 s!1 s!1 r!2)) (* (- 972) (* s00 r00 s!1 r!2)) (* 1296 (* r00 r00 r00 s!1 s!1 r!2 r!2)) (* 36 (* r00 r00 r00 r!2 r!2 x!0 x!0 x!0)) (* 648 (* s00 r00 s!1 r!2 r!2 x!0)) (* (- 6) (* s00 r00 s!1 s!1 s!1 s!1)) (* (- 648) (* s00 r00 s!1 s!1 r!2 r!2)) (* 3 (* r00 s!1 s!1 s!1)) (* 4 (* s00 s!1 s!1 r!2)) (* (- 2592) (* r00 r00 r00 r!2 r!2 r!2 x!0)) (* 1944 (* s00 r00 r!2 r!2 x!0)) (* (- 4) (* s00 ?x1335 ?x2485 ?x4864 ?x4864 ?x4864)) (* (- 168) (* s00 r00 s!1 s!1)) (* 6 (* s00 r00 s!1 s!1 s!1 x!0)) (* 12 (* r00 r00 r00 x!0 x!0 x!0)) (* 36 (* r00 r00 r00 r!2 x!0 x!0 x!0)) (* (- 9) (* s00 s!1 x!0 x!0)) (* 9 (* s00 r!2 x!0 x!0 x!0)) (* 12 (* r00 r00 ?x1335 ?x2485 ?x4864 ?x4864 ?x4864)) (* (- 9) (* r00 r!2 x!0 x!0 x!0)) (* (- 9) (* s00 s!1 r!2 r!2 r!2 x!0 x!0)) (* 3 (* r00 s!1 s!1 s!1 r!2 r!2 r!2)) (* (- 3) (* r00 s!1 s!1)) (* 6 (* x00 ?x2485 ?x4864 ?x4864 ?x4864)) (* (- 9) (* s00 s!1 s!1 s!1 r!2)) (* (- 6) (* s00 r00 x!0 x!0)) (* (- 3888) (* r00 r00 r00 r!2 r!2 x!0)) (* 972 (* s00 r00 r!2 x!0)) (* (- 3) (* ?x1335 ?x1335 ?x1335 ?x2485 ?x2485 ?x2485 ?x4864)) (* (- 1296) (* r00 r00 r00 s!1 r!2 x!0)) (* (- 648) (* s00 r00 s!1 s!1 r!2)) (* 648 (* s00 r00 s!1 r!2 x!0)) (* (- 9) (* r00 s!1 s!1 x!0)) (* (- 12) (* r00 r00 r!2 x!0 x!0)) (* 2 (* ?x1335 ?x1335 ?x1335 ?x1335 ?x2485 ?x2485 ?x2485 ?x4864)) (* (- 324) (* r00 r00 r00 x!0)) (* (- 1296) (* r00 r00 r00 s!1 r!2 r!2 x!0)) (* 174 (* s00 r00 s!1 x!0)) (* 7 (* s00 s!1 s!1)) (* 6 (* s00 r00 s!1 s!1 s!1 r!2 r!2 r!2)) (* 18 (* s00 r00 s!1 s!1 s!1 r!2 r!2)) (* (- 90) (* s00 r00 s!1 s!1 s!1 r!2)) (* (- 48) (* s00 r00 s!1 s!1 s!1)) (* 7 (* s00 x!0 x!0)) (* (- 3) (* s00 ?x2485 ?x4864 ?x4864 ?x4864)) (* 12 (* r00 r00 r00 s!1 s!1 s!1 s!1)) (* (- 3) (* s00 s!1 s!1 s!1 r!2 r!2 r!2)) (* (- 1944) (* r00 r00 r00 r!2 x!0)) (* (- 6) (* x00 x!0 x!0)) (* (- 12) (* r00 r00 s!1 s!1 r!2)) ?x4664 ?x2068 ?x2077 ?x2072 (* (- 18) (* x00 s!1 s!1 x!0)) (* 9 (* r00 s!1 s!1 s!1 r!2 r!2)) (* 9 (* r00 s!1 s!1 s!1 r!2)) (* (- 24) (* s!1 r!2 r!2 x!0)) (* 54 (* s00 r00 s!1 s!1 r!2 x!0)) (* 24 (* r00 r00 s!1 r!2 x!0)) (* (- 162) (* s00 r00 s!1)) (* 24 (* r00 r00 s!1 x!0)) (* 162 (* s00 r00 x!0)) (* 36 (* s00 r00 s!1 s!1 x!0)) (* (- 54) (* s00 r00 s!1 s!1 r!2 r!2 x!0)) (* 2592 (* r00 r00 r00 s!1 r!2 r!2 r!2)) (* 6 (* r00 s!1 x!0)) (* (- 3) (* r00 x!0 x!0)) (* (- 6) (* s00 r00 x!0 x!0 x!0)) (* 18 (* s00 r00 s!1 x!0 x!0)) (* 9 (* r00 s!1 r!2 r!2 r!2 x!0 x!0)) (* (- 3) (* r00 x!0 x!0 x!0)) (* (- 12) (* r00 r00 x!0 x!0)) (* 12 (* x00 s!1 x!0)) (* 3 (* s00 r!2 r!2 r!2 x!0 x!0 x!0)) (* (- 4) (* s!1 s!1 r!2 x!0)) (* 54 (* s00 r00 s!1 r!2 r!2 x!0 x!0)) (* 18 (* s00 r00 s!1 r!2 r!2 r!2 x!0 x!0)) (* (- 18) (* s00 r00 s!1 s!1 r!2 r!2 r!2 x!0)) (* (- 3) (* r00 r!2 r!2 r!2 x!0 x!0 x!0)) (* 2 (* s!1 r!2 x!0 x!0)) (* (- 6) (* x00 s!1 s!1)) (* (- 1296) (* s00 r00 s!1 r!2 r!2 r!2)) (* 3 (* s00 x!0 x!0 x!0)) (* (- 72) (* r00 r00 r00 s!1 s!1 x!0)) (* (- 9) (* r00 s!1 s!1 r!2 r!2 r!2 x!0)) (* 18 (* x00 s!1 s!1 s!1 r!2 r!2)) (* 6 (* x00 s!1 s!1 s!1 r!2 r!2 r!2)) (* (- 6) (* s00 r00 r!2 r!2 r!2 x!0 x!0 x!0)) (* 6 (* x00 s!1 s!1 s!1)) (* (- 9) (* s00 s!1 s!1 s!1 r!2 r!2)) (* (- 27) (* r00 s!1 s!1 r!2 x!0)) (* (- 18) (* s00 r00 r!2 x!0 x!0 x!0)) (* (- 18) (* s00 r00 r!2 r!2 x!0 x!0 x!0)) (* 18 (* x00 s!1 s!1 s!1 r!2)) (* (- 27) (* r00 s!1 s!1 r!2 r!2 x!0)) ?x3436 ?x3439 ?x3464 ?x1399 (* 27 (* r00 s!1 r!2 r!2 x!0 x!0)) (* (- 1944) (* s00 r00 s!1 r!2 r!2)) (* 3 (* s!1 s!1 r!2)) (* (- 108) (* r00 r00 r00 s!1 r!2 x!0 x!0)) (* (- 3) (* ?x1335 ?x2485 ?x4864 ?x4864 ?x4864)) ?x4447 (* (- 348) (* r00 r00 r00 s!1 x!0)) (* 3 (* r00 ?x2485 ?x4864 ?x4864 ?x4864)) (* 1296 (* r00 r00 r00 s!1 s!1 r!2)) (* 1296 (* s00 r00 r!2 r!2 r!2 x!0)) (* 4 (* s00 r!2 x!0 x!0)) (* (- 12) (* r00 r00 r00 s!1 s!1 s!1 x!0)) (* 108 (* r00 r00 r00 s!1 s!1 r!2 r!2 x!0)) (* 2 (* s!1 s!1 s!1 r!2)) (* 12 (* r00 r00 r00 x!0 x!0)) (* (- 54) (* x00 s!1 s!1 r!2 x!0)) (* (- 54) (* x00 s!1 s!1 r!2 r!2 x!0)) (* (- 27) (* s00 s!1 r!2 r!2 x!0 x!0)) (* (- 18) (* x00 s!1 s!1 r!2 r!2 r!2 x!0)) (* 54 (* x00 s!1 r!2 x!0 x!0)) (* 18 (* x00 s!1 x!0 x!0)) (* 54 (* x00 s!1 r!2 r!2 x!0 x!0)) (* (- 36) (* r00 r00 r00 s!1 r!2 r!2 r!2 x!0 x!0)) (* (- 6) (* x00 r!2 r!2 r!2 x!0 x!0 x!0)) (* (- 2) (* ?x1335 ?x2485 ?x4864 ?x4864 ?x4864 ?x4864)) (* (- 12) (* r00 r00 r00 s!1 s!1 s!1 r!2 r!2 r!2)) (* 18 (* x00 s!1 r!2 r!2 r!2 x!0 x!0)) (* 27 (* r00 s!1 r!2 x!0 x!0)) (* 54 (* s00 r00 s!1 r!2 x!0 x!0)) (* (- 36) (* r00 r00 r00 s!1 s!1 s!1 r!2 r!2)) (* 12 (* r00 r00 r00 r!2 r!2 r!2 x!0 x!0 x!0)) (* 9 (* s00 s!1 s!1 r!2 r!2 r!2 x!0)) (* (- 6) (* ?x2485 ?x2485 ?x4864 ?x4864 ?x4864)) (* 324 (* r00 r00 r00 s!1)) (* 36 (* r00 r00 r00 s!1 s!1 r!2 r!2 r!2 x!0)) (* (- 36) (* r00 r00 r00 s!1 x!0 x!0)) (* (- 18) (* x00 r!2 x!0 x!0 x!0)) (* 27 (* s00 s!1 s!1 r!2 x!0)) (* 9 (* s00 s!1 s!1 x!0)) (* 96 (* r00 r00 r00 s!1 s!1 s!1)) (* (- 3) (* s00 s!1 s!1 s!1)) (* (- 14) (* s00 s!1 x!0)) (* (- 8) (* s00 s!1 r!2 x!0)) (* (- 108) (* r00 r00 r00 s!1 s!1 r!2 x!0)) (* (- 6) (* x00 x!0 x!0 x!0)) (* 336 (* r00 r00 r00 s!1 s!1)) (* (- 108) (* r00 r00 r00 s!1 r!2 r!2 x!0 x!0)) (* 3888 (* r00 r00 r00 s!1 r!2 r!2)) (* (- 27) (* s00 s!1 r!2 x!0 x!0)) (* (- 6) (* s!1 r!2 x!0)) (* 9 (* s00 r!2 r!2 x!0 x!0 x!0)) (* (- 12) (* r00 r00 s!1 s!1)) (* 1944 (* r00 r00 r00 s!1 r!2)) (* 27 (* s00 s!1 s!1 r!2 r!2 x!0)) (* 9 (* r00 s!1 x!0 x!0)) (* 12 (* s!1 s!1 r!2 r!2)) (* 3 (* ?x2485 ?x4864 ?x4864 ?x4864 ?x4864)) (* (- 18) (* x00 r!2 r!2 x!0 x!0 x!0)) ?x3183 (* (- 9) (* r00 r!2 r!2 x!0 x!0 x!0)))))
 (let (($x288 (= ?x440 0)))
 (let (($x759 (not $x288)))
 (let ((?x2445 (* r00 r00 s!1)))
 (let ((?x4277 (* 36 ?x2445)))
 (let ((?x2172 (* (- 9) s!1)))
 (let ((?x1346 (* x00 x00)))
 (let ((?x4656 (* 108 ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x3289 (* 16 ?x1184)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3558 (* (- 432) ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x2731 (* (- 108) ?x805)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x3962 (* (- 36) ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x6248 (* 51 ?x591)))
 (let ((?x522 (* r00 x00)))
 (let ((?x4314 (* 108 ?x522)))
 (let ((?x137 (* 9 s00)))
 (let ((?x735 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x4314 ?x6248 (* 108 (* s00 x!0)) ?x3962 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x2731 (* (- 108) (* r00 x!0)) ?x3558 (* 216 (* s00 r00 r00 r00)) (* 432 (* r00 r00 r00 x!0)) (* (- 12) (* s00 s!1 s!1)) ?x3289 ?x4656 ?x2172 (* 108 (* x!0 x!0)) (* 108 (* s00 r00 s!1)) ?x4277 (* (- 216) (* s00 r00 x!0)) (* (- 66) (* s00 s!1)) (* (- 108) (* s!1 x!0)) (* (- 4) ?x3474) (* 15 (* s!1 s!1)) (* 108 (* x00 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* 54 (* r00 s!1)) (* (- 216) (* x00 x!0)) (* 36 (* r00 r00 s!1 s!1)))))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x870 (* 36 ?x877)))
 (let ((?x891 (* (- 6) ?x805)))
 (let ((?x885 (* 15 ?x591)))
 (let ((?x2271 (* 54 ?x522)))
 (let ((?x5139 (+ ?x137 (* (- 24) (* s00 r00)) ?x2271 ?x885 (* 6 (* s00 x!0)) ?x3962 (* 2 (* s00 s00 r00)) ?x891 (* (- 36) (* r00 r!2 x!0)) (* (- 54) (* r00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* (- 2) (* s00 s!1 r!2)) ?x870 (* 4 (* s00 s00 r!2)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) ?x2172 (* 24 (* s!1 r!2)) (* 2 (* s00 r00 s!1)) ?x4277 (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) (* (- 6) (* s!1 x!0)) (* (- 3) (* s!1 s!1)) (* (- 54) (* r!2 x!0)) (* (- 24) (* s00 r!2)) (* 6 (* x00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* 24 (* r00 s!1)))))
 (let (($x5140 (= ?x5139 0)))
 (let ((?x4630 (* (- 3) s!1)))
 (let ((?x4641 (* 4 ?x591)))
 (let ((?x2862 (* 18 ?x522)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4873 (+ ?x44 (* (- 9) (* s00 r00)) ?x2862 ?x4641 (* (- 6) ?x647) (* (- 18) (* r00 x!0)) ?x4630 (* 9 (* s!1 r!2)) (* 6 ?x2445) (* (- 6) (* r00 s!1 r!2)) (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* (- 2) (* s!1 s!1)) (* (- 18) (* r!2 x!0)) (* (- 9) (* s00 r!2)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)))))
 (let (($x4661 (= ?x4873 0)))
 (let ((?x900 (* 6 x!0)))
 (let ((?x1662 (* 3 r!2)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x426 (* s00 r00)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x6167 (+ ?x44 ?x500 ?x501 ?x504 ?x470 ?x4630 ?x1662 (* 2 (* s!1 r!2)) (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x900)))
 (let (($x3379 (= ?x6167 0)))
 (let (($x460 (and $x3007 $x3379 $x4661 $x5140 (= ?x735 0) $x759)))
 (let ((?x2024 (+ 3 ?x2043 s!1)))
 (let ((?x1006 (+ (* 6 (* s!1 s!1 s!1 x!0 s00 r00)) (* 324 (* s!1 r00 r00 r00)) (* (- 3) (* s!1 s!1 r00)) (* 12 (* x!0 x!0 x!0 r00 r00 r00)) (* 36 (* r!2 x!0 x!0 x!0 r00 r00 r00)) (* 4 (* r!2 x!0 x!0 s00)) (* 7 (* x!0 x!0 s00)) (* (- 162) (* s!1 s00 r00)) ?x1399 (* 3 (* r!2 s!1 s!1)) (* 7 (* s!1 s!1 s00)) (* (- 324) (* x!0 r00 r00 r00)) (* 12 (* r!2 r!2 s!1 s!1)) (* 162 (* x!0 s00 r00)) (* (- 12) (* s!1 s!1 r00 r00)) (* (- 2) (* ?x1335 ?x2485 ?x2024 ?x2024 ?x2024 ?x2024)) (* (- 6) (* r!2 r!2 r!2 x!0 x!0 x!0 x00)) (* (- 18) (* r!2 r!2 x!0 x!0 x!0 x00)) (* 3 (* ?x2485 ?x2024 ?x2024 ?x2024 ?x2024)) (* (- 18) (* r!2 x!0 x!0 x!0 x00)) (* (- 6) (* x!0 x!0 x!0 x00)) (* (- 36) (* r!2 r!2 s!1 s!1 s!1 r00 r00 r00)) (* (- 12) (* r!2 r!2 r!2 s!1 s!1 s!1 r00 r00 r00)) (* 18 (* r!2 r!2 r!2 s!1 x!0 x!0 x00)) (* 54 (* r!2 r!2 s!1 x!0 x!0 x00)) (* 54 (* r!2 s!1 x!0 x!0 x00)) (* 18 (* s!1 x!0 x!0 x00)) (* (- 18) (* r!2 r!2 r!2 s!1 s!1 x!0 x00)) (* (- 54) (* r!2 r!2 s!1 s!1 x!0 x00)) (* (- 54) (* r!2 s!1 s!1 x!0 x00)) (* 12 (* x!0 x!0 r00 r00 r00)) (* 108 (* r!2 r!2 s!1 s!1 x!0 r00 r00 r00)) (* 36 (* r!2 r!2 r!2 s!1 s!1 x!0 r00 r00 r00)) (* (- 36) (* s!1 x!0 x!0 r00 r00 r00)) (* (- 108) (* r!2 s!1 x!0 x!0 r00 r00 r00)) (* (- 108) (* r!2 r!2 s!1 x!0 x!0 r00 r00 r00)) (* (- 36) (* r!2 r!2 r!2 s!1 x!0 x!0 r00 r00 r00)) (* 6 (* r!2 r!2 r!2 s!1 s!1 s!1 x00)) (* 18 (* r!2 r!2 s!1 s!1 s!1 x00)) (* 18 (* r!2 s!1 s!1 s!1 x00)) (* 6 (* s!1 s!1 s!1 x00)) (* (- 18) (* r!2 r!2 x!0 x!0 x!0 s00 r00)) (* (- 6) (* r!2 r!2 r!2 x!0 x!0 x!0 s00 r00)) (* (- 18) (* r!2 x!0 x!0 x!0 s00 r00)) (* (- 6) (* x!0 x!0 x!0 s00 r00)) (* 54 (* r!2 r!2 s!1 x!0 x!0 s00 r00)) (* 18 (* r!2 r!2 r!2 s!1 x!0 x!0 s00 r00)) (* 54 (* r!2 s!1 x!0 x!0 s00 r00)) (* 18 (* s!1 x!0 x!0 s00 r00)) (* (- 18) (* r!2 r!2 r!2 s!1 s!1 x!0 s00 r00)) ?x3183 (* (- 54) (* r!2 r!2 s!1 s!1 x!0 s00 r00)) (* 54 (* r!2 s!1 s!1 x!0 s00 r00)) (* 36 (* s!1 s!1 x!0 s00 r00)) (* (- 48) (* s!1 s!1 s!1 s00 r00)) (* (- 90) (* r!2 s!1 s!1 s!1 s00 r00)) (* 18 (* r!2 r!2 s!1 s!1 s!1 s00 r00)) (* 6 (* r!2 r!2 r!2 s!1 s!1 s!1 s00 r00)) (* 9 (* r!2 r!2 x!0 x!0 x!0 s00)) (* (- 6) (* r!2 s!1 x!0)) ?x3436 ?x3439 (* 9 (* r!2 x!0 x!0 x!0 s00)) (* 3 (* x!0 x!0 x!0 s00)) (* (- 4) (* r!2 s!1 s!1 x!0)) ?x2068 ?x2077 (* 2 (* r!2 s!1 s!1 s!1)) ?x2072 (* 3 (* r!2 r!2 r!2 x!0 x!0 x!0 s00)) (* 12 (* s!1 x!0 x00)) (* (- 6) (* s!1 s!1 x00)) (* 2 (* r!2 s!1 x!0 x!0)) (* (- 4) (* s00 ?x1335 ?x2485 ?x2024 ?x2024 ?x2024)) (* (- 12) (* x!0 x!0 r00 r00)) (* 6 (* s!1 x!0 r00)) (* (- 3) (* x!0 x!0 r00)) (* 2 (* ?x1335 ?x1335 ?x1335 ?x1335 ?x2485 ?x2485 ?x2485 ?x2024)) (* (- 12) (* r!2 x!0 x!0 r00 r00)) (* 24 (* r!2 s!1 x!0 r00 r00)) (* 24 (* s!1 x!0 r00 r00)) (* (- 12) (* r!2 s!1 s!1 r00 r00)) (* 12 (* r!2 r!2 r!2 x!0 x!0 x!0 r00 r00 r00)) (* (- 6) (* x!0 x!0 x00)) ?x4447 (* 12 (* r00 r00 ?x1335 ?x2485 ?x2024 ?x2024 ?x2024)) (* (- 9) (* s!1 x!0 x!0 s00)) (* (- 9) (* r!2 r!2 r!2 s!1 x!0 x!0 s00)) (* (- 9) (* r!2 x!0 x!0 x!0 r00)) (* 36 (* r!2 r!2 x!0 x!0 x!0 r00 r00 r00)) (* (- 9) (* r!2 r!2 x!0 x!0 x!0 r00)) (* (- 3) (* r!2 r!2 r!2 x!0 x!0 x!0 r00)) (* (- 3) (* x!0 x!0 x!0 r00)) (* 9 (* r!2 r!2 r!2 s!1 x!0 x!0 r00)) (* 27 (* r!2 r!2 s!1 x!0 x!0 r00)) (* 27 (* r!2 s!1 x!0 x!0 r00)) (* 9 (* s!1 x!0 x!0 r00)) (* (- 9) (* r!2 r!2 r!2 s!1 s!1 x!0 r00)) (* (- 27) (* r!2 r!2 s!1 s!1 x!0 r00)) (* (- 9) (* r!2 r!2 s!1 s!1 s!1 s00)) (* (- 27) (* r!2 s!1 s!1 x!0 r00)) (* (- 3) (* r!2 r!2 r!2 s!1 s!1 s!1 s00)) (* (- 9) (* s!1 s!1 x!0 r00)) (* 27 (* r!2 r!2 s!1 s!1 x!0 s00)) (* 9 (* r!2 r!2 r!2 s!1 s!1 x!0 s00)) (* (- 27) (* r!2 s!1 x!0 x!0 s00)) (* (- 27) (* r!2 r!2 s!1 x!0 x!0 s00)) (* 3 (* r!2 r!2 r!2 s!1 s!1 s!1 r00)) (* 9 (* r!2 r!2 s!1 s!1 s!1 r00)) (* 9 (* r!2 s!1 s!1 s!1 r00)) (* 3 (* s!1 s!1 s!1 r00)) (* (- 6) (* ?x2485 ?x2485 ?x2024 ?x2024 ?x2024)) (* 4 (* r!2 s!1 s!1 s00)) (* (- 3) (* s!1 s!1 s!1 s00)) (* (- 14) (* s!1 x!0 s00)) (* (- 8) (* r!2 s!1 x!0 s00)) (* 9 (* s!1 s!1 x!0 s00)) (* 27 (* r!2 s!1 s!1 x!0 s00)) ?x3464 (* (- 9) (* r!2 s!1 s!1 s!1 s00)) (* 6 (* x00 ?x2485 ?x2024 ?x2024 ?x2024)) (* (- 6) (* x!0 x!0 s00 r00)) (* (- 3) (* ?x1335 ?x1335 ?x1335 ?x2485 ?x2485 ?x2485 ?x2024)) (* 3 (* r00 ?x2485 ?x2024 ?x2024 ?x2024)) (* 174 (* s!1 x!0 s00 r00)) (* (- 3) (* s00 ?x2485 ?x2024 ?x2024 ?x2024)) (* (- 168) (* s!1 s!1 s00 r00)) ?x4664 (* (- 3) (* ?x1335 ?x2485 ?x2024 ?x2024 ?x2024)) (* 1944 (* r!2 s!1 r00 r00 r00)) (* 336 (* s!1 s!1 r00 r00 r00)) (* 3888 (* r!2 r!2 s!1 r00 r00 r00)) (* 1296 (* r!2 s!1 s!1 r00 r00 r00)) (* 96 (* s!1 s!1 s!1 r00 r00 r00)) (* 2592 (* r!2 r!2 r!2 s!1 r00 r00 r00)) (* 1296 (* r!2 r!2 s!1 s!1 r00 r00 r00)) (* 180 (* r!2 s!1 s!1 s!1 r00 r00 r00)) (* (- 972) (* r!2 s!1 s00 r00)) (* 972 (* r!2 x!0 s00 r00)) (* 12 (* s!1 s!1 s!1 s!1 r00 r00 r00)) (* (- 18) (* s!1 s!1 x!0 x00)) (* (- 1944) (* r!2 x!0 r00 r00 r00)) (* (- 1944) (* r!2 r!2 s!1 s00 r00)) (* (- 348) (* s!1 x!0 r00 r00 r00)) (* 1944 (* r!2 r!2 x!0 s00 r00)) (* (- 3888) (* r!2 r!2 x!0 r00 r00 r00)) (* (- 1296) (* r!2 s!1 x!0 r00 r00 r00)) (* (- 648) (* r!2 s!1 s!1 s00 r00)) (* 648 (* r!2 s!1 x!0 s00 r00)) (* (- 72) (* s!1 s!1 x!0 r00 r00 r00)) (* (- 2592) (* r!2 r!2 r!2 x!0 r00 r00 r00)) (* (- 1296) (* r!2 r!2 s!1 x!0 r00 r00 r00)) (* (- 108) (* r!2 s!1 s!1 x!0 r00 r00 r00)) (* (- 24) (* r!2 r!2 s!1 x!0)) (* (- 1296) (* r!2 r!2 r!2 s!1 s00 r00)) (* (- 12) (* s!1 s!1 s!1 x!0 r00 r00 r00)) (* 1296 (* r!2 r!2 r!2 x!0 s00 r00)) (* (- 648) (* r!2 r!2 s!1 s!1 s00 r00)) (* 648 (* r!2 r!2 s!1 x!0 s00 r00)) (* (- 6) (* s!1 s!1 s!1 s!1 s00 r00)))))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x4787 (* s!1 r00 r00)))
 (let ((?x2080 (* (- 36) ?x4787)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x3729 (* 9 s!1)))
 (let ((?x3494 (+ ?x3729 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s!1 s!1)) ?x2080 ?x1365 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x732 (* (- 108) (* s!1 s00 r00)) (* 4 ?x3474) ?x1129 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x883 (* 12 (* s!1 s!1 s00)) ?x1371 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1375 (* 216 (* x!0 x00)) ?x1376)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x3562 (+ ?x3729 ?x987 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x564 ?x551 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x2080 ?x916 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1000 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x696 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x806 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x890 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x3359 (+ (* 3 s!1) ?x378 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x541 ?x536 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x4787) ?x604 (* 18 (* x!0 r00)) ?x648 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x3752 (+ ?x1662 ?x4630 ?x900 ?x44 ?x500 ?x501 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x504 ?x470)))
 (let (($x4034 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x301)) 0)))
 (let (($x413 (and $x4034 (= ?x3752 0) (= ?x3359 0) (= ?x3562 0) (= ?x3494 0) (not (= ?x1006 0)))))
 (let (($x5042 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (* 6 r)))
 (let ((?x1410 (+ 3 ?x215 s)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x1386 (+ ?x280 x)))
 (let ((?x1407 (+ 1 r)))
 (let ((?x6400 (* 54 (* r s s x s00 r00))))
 (let ((?x310 (+ (* 6 (* s s s x s00 r00)) (* 324 (* s r00 r00 r00)) (* (- 3) (* s s r00)) (* 12 (* x x x r00 r00 r00)) (* 36 (* r x x x r00 r00 r00)) (* 4 (* r x x s00)) (* 7 (* x x s00)) (* (- 162) (* s s00 r00)) (* (- 7) (* s s s)) (* 3 (* r s s)) (* 7 (* s s s00)) (* (- 324) (* x r00 r00 r00)) (* 12 (* r r s s)) (* 162 (* x s00 r00)) (* (- 12) (* s s r00 r00)) (* (- 2) (* ?x1407 ?x1386 ?x1410 ?x1410 ?x1410 ?x1410)) (* (- 6) (* r r r x x x x00)) (* (- 18) (* r r x x x x00)) (* 3 (* ?x1386 ?x1410 ?x1410 ?x1410 ?x1410)) (* (- 18) (* r x x x x00)) (* (- 6) (* x x x x00)) (* (- 36) (* r r s s s r00 r00 r00)) (* (- 12) (* r r r s s s r00 r00 r00)) (* 18 (* r r r s x x x00)) (* 54 (* r r s x x x00)) (* 54 (* r s x x x00)) (* 18 (* s x x x00)) (* (- 18) (* r r r s s x x00)) (* (- 54) (* r r s s x x00)) (* (- 54) (* r s s x x00)) (* 12 (* x x r00 r00 r00)) (* 108 (* r r s s x r00 r00 r00)) (* 36 (* r r r s s x r00 r00 r00)) (* (- 36) (* s x x r00 r00 r00)) (* (- 108) (* r s x x r00 r00 r00)) (* (- 108) (* r r s x x r00 r00 r00)) (* (- 36) (* r r r s x x r00 r00 r00)) (* 6 (* r r r s s s x00)) (* 18 (* r r s s s x00)) (* 18 (* r s s s x00)) (* 6 (* s s s x00)) (* (- 18) (* r r x x x s00 r00)) (* (- 6) (* r r r x x x s00 r00)) (* (- 18) (* r x x x s00 r00)) (* (- 6) (* x x x s00 r00)) (* 54 (* r r s x x s00 r00)) (* 18 (* r r r s x x s00 r00)) (* 54 (* r s x x s00 r00)) (* 18 (* s x x s00 r00)) (* (- 18) (* r r r s s x s00 r00)) (* 4 (* s00 ?x1407 ?x1407 ?x1407 ?x1407 ?x1386 ?x1386 ?x1386)) (* (- 54) (* r r s s x s00 r00)) ?x6400 (* 36 (* s s x s00 r00)) (* (- 48) (* s s s s00 r00)) (* (- 90) (* r s s s s00 r00)) (* 18 (* r r s s s s00 r00)) (* 6 (* r r r s s s s00 r00)) (* 9 (* r r x x x s00)) (* (- 6) (* r s x)) (* 20 (* s s x)) (* 3 (* r x x)) (* 9 (* r x x x s00)) (* 3 (* x x x s00)) (* (- 4) (* r s s x)) (* 12 (* r r x x)) (* (- 19) (* s x x)) (* 2 (* r s s s)) (* 6 (* x x x)) (* 3 (* r r r x x x s00)) (* 12 (* s x x00)) (* (- 6) (* s s x00)) (* 2 (* r s x x)) (* (- 4) (* s00 ?x1407 ?x1386 ?x1410 ?x1410 ?x1410)) (* (- 12) (* x x r00 r00)) (* 6 (* s x r00)) (* (- 3) (* x x r00)) (* 2 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x1386 ?x1386 ?x1386 ?x1410)) (* (- 12) (* r x x r00 r00)) (* 24 (* r s x r00 r00)) (* 24 (* s x r00 r00)) (* (- 12) (* r s s r00 r00)) (* 12 (* r r r x x x r00 r00 r00)) (* (- 6) (* x x x00)) (* 6 (* ?x1407 ?x1407 ?x1407 ?x1386 ?x1386 ?x1386 ?x1386)) (* 12 (* r00 r00 ?x1407 ?x1386 ?x1410 ?x1410 ?x1410)) (* (- 9) (* s x x s00)) (* (- 9) (* r r r s x x s00)) (* (- 9) (* r x x x r00)) (* 36 (* r r x x x r00 r00 r00)) (* (- 9) (* r r x x x r00)) (* (- 3) (* r r r x x x r00)) (* (- 3) (* x x x r00)) (* 9 (* r r r s x x r00)) (* 27 (* r r s x x r00)) (* 27 (* r s x x r00)) (* 9 (* s x x r00)) (* (- 9) (* r r r s s x r00)) (* (- 27) (* r r s s x r00)) (* (- 9) (* r r s s s s00)) (* (- 27) (* r s s x r00)) (* (- 3) (* r r r s s s s00)) (* (- 9) (* s s x r00)) (* 27 (* r r s s x s00)) (* 9 (* r r r s s x s00)) (* (- 27) (* r s x x s00)) (* (- 27) (* r r s x x s00)) (* 3 (* r r r s s s r00)) (* 9 (* r r s s s r00)) (* 9 (* r s s s r00)) (* 3 (* s s s r00)) (* (- 6) (* ?x1386 ?x1386 ?x1410 ?x1410 ?x1410)) (* 4 (* r s s s00)) (* (- 3) (* s s s s00)) (* (- 14) (* s x s00)) (* (- 8) (* r s x s00)) (* 9 (* s s x s00)) (* 27 (* r s s x s00)) (* 3 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x1386 ?x1386 ?x1386)) (* (- 9) (* r s s s s00)) (* 6 (* x00 ?x1386 ?x1410 ?x1410 ?x1410)) (* (- 6) (* x x s00 r00)) (* (- 3) (* ?x1407 ?x1407 ?x1407 ?x1386 ?x1386 ?x1386 ?x1410)) (* 3 (* r00 ?x1386 ?x1410 ?x1410 ?x1410)) (* 174 (* s x s00 r00)) (* (- 3) (* s00 ?x1386 ?x1410 ?x1410 ?x1410)) (* (- 168) (* s s s00 r00)) (* (- 12) (* r00 r00 ?x1407 ?x1407 ?x1407 ?x1407 ?x1386 ?x1386 ?x1386)) (* (- 3) (* ?x1407 ?x1386 ?x1410 ?x1410 ?x1410)) (* 1944 (* r s r00 r00 r00)) (* 336 (* s s r00 r00 r00)) (* 3888 (* r r s r00 r00 r00)) (* 1296 (* r s s r00 r00 r00)) (* 96 (* s s s r00 r00 r00)) (* 2592 (* r r r s r00 r00 r00)) (* 1296 (* r r s s r00 r00 r00)) (* 180 (* r s s s r00 r00 r00)) (* (- 972) (* r s s00 r00)) (* 972 (* r x s00 r00)) (* 12 (* s s s s r00 r00 r00)) (* (- 18) (* s s x x00)) (* (- 1944) (* r x r00 r00 r00)) (* (- 1944) (* r r s s00 r00)) (* (- 348) (* s x r00 r00 r00)) (* 1944 (* r r x s00 r00)) (* (- 3888) (* r r x r00 r00 r00)) (* (- 1296) (* r s x r00 r00 r00)) (* (- 648) (* r s s s00 r00)) (* 648 (* r s x s00 r00)) (* (- 72) (* s s x r00 r00 r00)) (* (- 2592) (* r r r x r00 r00 r00)) (* (- 1296) (* r r s x r00 r00 r00)) (* (- 108) (* r s s x r00 r00 r00)) (* (- 24) (* r r s x)) (* (- 1296) (* r r r s s00 r00)) (* (- 12) (* s s s x r00 r00 r00)) (* 1296 (* r r r x s00 r00)) (* (- 648) (* r r s s s00 r00)) (* 648 (* r r s x s00 r00)) (* (- 6) (* s s s s s00 r00)))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x565 (* s r00 r00)))
 (let ((?x864 (* (- 36) ?x565)))
 (let ((?x522 (* r00 x00)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x426 (* s00 r00)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1377 (+ ?x143 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s s)) ?x864 ?x1365 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x732 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1129 (* 108 (* s x)) (* (- 108) (* x x)) ?x883 (* 12 (* s s s00)) ?x1371 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1375 (* 216 (* x x00)) ?x1376)))
 (let (($x1378 (= ?x1377 0)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1079 (+ ?x143 ?x987 (* (- 24) (* r s)) (* 24 (* r s00)) ?x564 ?x551 ?x569 (* 54 (* r x)) (* 36 (* r x r00)) ?x864 ?x916 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1000 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x696 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x806 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x890 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1084 (= ?x1079 0)))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x745 (+ ?x47 ?x378 (* (- 9) (* r s)) (* 9 (* r s00)) ?x541 ?x536 ?x546 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x565) ?x604 (* 18 (* x r00)) ?x648 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x752 (= ?x745 0)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x499 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x505 (+ ?x43 ?x499 ?x56 ?x44 ?x500 ?x501 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x504 ?x470)))
 (let (($x506 (= ?x505 0)))
 (let ((?x301 (* r00 r00)))
 (let ((?x302 (* 3 ?x301)))
 (let ((?x331 (* (- 1) s00)))
 (let (($x334 (= (+ s ?x331 (* (- 3) (* r r)) ?x302) 0)))
 (and $x334 $x506 $x752 $x1084 $x1378 (not (= ?x310 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x2923 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (* 6 r)))
 (let ((?x3212 (+ 3 s ?x215)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x2081 (+ x ?x280)))
 (let ((?x1407 (+ 1 r)))
 (let ((?x776 (+ (* 3 (* s00 ?x2081 ?x2081)) (* 2 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x3212)) (* (- 6) (* x00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 6) (* ?x2081 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 6) (* r00 s00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 3 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 6 (* ?x2081 ?x2081 ?x2081)) (* (- 3) (* ?x2081 ?x2081 ?x3212)) (* 6 (* x00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 4 (* s00 ?x1407 ?x2081 ?x2081)) (* 2 (* ?x1407 ?x2081 ?x2081 ?x3212)) (* (- 12) (* r00 r00 ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 3) (* ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 3) (* r00 ?x2081 ?x2081)) (* (- 12) (* r00 r00 ?x1407 ?x2081 ?x2081)) (* 6 (* r00 s00 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 4) (* s00 ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 6) (* x00 ?x2081 ?x2081)) (* 4 (* s00 ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 3) (* r00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 6 (* ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x2081)) (* 12 (* r00 r00 ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* r00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* ?x1407 ?x2081 ?x2081)) (* (- 3) (* ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x3212)) (* (- 3) (* s00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* ?x2081 ?x3212 ?x3212 ?x3212 ?x3212)) (* 12 (* r00 r00 r00 ?x2081 ?x2081)) (* (- 2) (* ?x1407 ?x2081 ?x3212 ?x3212 ?x3212 ?x3212)) (* (- 6) (* r00 s00 ?x2081 ?x2081)) (* 12 (* r00 r00 r00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 3 (* s00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 12) (* r00 r00 r00 ?x2081 ?x3212 ?x3212 ?x3212)))))
 (let (($x3455 (not (= ?x776 0))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x4656 (* 108 ?x1346)))
 (let ((?x6059 (* (- 9) s)))
 (let ((?x3445 (* r00 r00 s00)))
 (let ((?x878 (* (- 36) ?x3445)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x6248 (* 51 ?x591)))
 (let ((?x1975 (* r00 r00 s)))
 (let ((?x4706 (* 36 ?x1975)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x3289 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x2731 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3558 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x4314 (* 108 ?x522)))
 (let ((?x4738 (+ (* 216 (* r00 s00 x00)) ?x4314 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3558 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2731 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3289 (* (- 108) (* x s)) ?x4706 ?x6248 (* (- 108) (* r00 x)) ?x137 ?x878 ?x6059 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4656)))
 (let (($x4665 (= ?x4738 0)))
 (let ((?x885 (* 15 ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x870 (* 36 ?x877)))
 (let ((?x891 (* (- 6) ?x805)))
 (let ((?x2271 (* 54 ?x522)))
 (let ((?x2957 (+ (* 24 (* s r)) ?x2271 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x891 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4706 ?x870 ?x885 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x878 (* 54 (* x00 r)) ?x6059 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x499 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4641 (* 4 ?x591)))
 (let ((?x2862 (* 18 ?x522)))
 (let ((?x4636 (+ (* 9 (* s r)) ?x2862 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1975) ?x4641 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3445) (* 18 (* x00 r)) ?x499 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x4877 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x499 ?x500 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x501 ?x470)))
 (let (($x2070 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2070 (= ?x4877 0) (= ?x4636 0) (= ?x2957 0) $x4665 $x3455))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5044 (lambda ((r Int) (s Int) (x Int) )(let ((?x215 (* 6 r)))
 (let ((?x1410 (+ 3 ?x215 s)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x1386 (+ ?x280 x)))
 (let ((?x1407 (+ 1 r)))
 (let ((?x6400 (* 54 (* r s s x s00 r00))))
 (let ((?x310 (+ (* 6 (* s s s x s00 r00)) (* 324 (* s r00 r00 r00)) (* (- 3) (* s s r00)) (* 12 (* x x x r00 r00 r00)) (* 36 (* r x x x r00 r00 r00)) (* 4 (* r x x s00)) (* 7 (* x x s00)) (* (- 162) (* s s00 r00)) (* (- 7) (* s s s)) (* 3 (* r s s)) (* 7 (* s s s00)) (* (- 324) (* x r00 r00 r00)) (* 12 (* r r s s)) (* 162 (* x s00 r00)) (* (- 12) (* s s r00 r00)) (* (- 2) (* ?x1407 ?x1386 ?x1410 ?x1410 ?x1410 ?x1410)) (* (- 6) (* r r r x x x x00)) (* (- 18) (* r r x x x x00)) (* 3 (* ?x1386 ?x1410 ?x1410 ?x1410 ?x1410)) (* (- 18) (* r x x x x00)) (* (- 6) (* x x x x00)) (* (- 36) (* r r s s s r00 r00 r00)) (* (- 12) (* r r r s s s r00 r00 r00)) (* 18 (* r r r s x x x00)) (* 54 (* r r s x x x00)) (* 54 (* r s x x x00)) (* 18 (* s x x x00)) (* (- 18) (* r r r s s x x00)) (* (- 54) (* r r s s x x00)) (* (- 54) (* r s s x x00)) (* 12 (* x x r00 r00 r00)) (* 108 (* r r s s x r00 r00 r00)) (* 36 (* r r r s s x r00 r00 r00)) (* (- 36) (* s x x r00 r00 r00)) (* (- 108) (* r s x x r00 r00 r00)) (* (- 108) (* r r s x x r00 r00 r00)) (* (- 36) (* r r r s x x r00 r00 r00)) (* 6 (* r r r s s s x00)) (* 18 (* r r s s s x00)) (* 18 (* r s s s x00)) (* 6 (* s s s x00)) (* (- 18) (* r r x x x s00 r00)) (* (- 6) (* r r r x x x s00 r00)) (* (- 18) (* r x x x s00 r00)) (* (- 6) (* x x x s00 r00)) (* 54 (* r r s x x s00 r00)) (* 18 (* r r r s x x s00 r00)) (* 54 (* r s x x s00 r00)) (* 18 (* s x x s00 r00)) (* (- 18) (* r r r s s x s00 r00)) (* 4 (* s00 ?x1407 ?x1407 ?x1407 ?x1407 ?x1386 ?x1386 ?x1386)) (* (- 54) (* r r s s x s00 r00)) ?x6400 (* 36 (* s s x s00 r00)) (* (- 48) (* s s s s00 r00)) (* (- 90) (* r s s s s00 r00)) (* 18 (* r r s s s s00 r00)) (* 6 (* r r r s s s s00 r00)) (* 9 (* r r x x x s00)) (* (- 6) (* r s x)) (* 20 (* s s x)) (* 3 (* r x x)) (* 9 (* r x x x s00)) (* 3 (* x x x s00)) (* (- 4) (* r s s x)) (* 12 (* r r x x)) (* (- 19) (* s x x)) (* 2 (* r s s s)) (* 6 (* x x x)) (* 3 (* r r r x x x s00)) (* 12 (* s x x00)) (* (- 6) (* s s x00)) (* 2 (* r s x x)) (* (- 4) (* s00 ?x1407 ?x1386 ?x1410 ?x1410 ?x1410)) (* (- 12) (* x x r00 r00)) (* 6 (* s x r00)) (* (- 3) (* x x r00)) (* 2 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x1386 ?x1386 ?x1386 ?x1410)) (* (- 12) (* r x x r00 r00)) (* 24 (* r s x r00 r00)) (* 24 (* s x r00 r00)) (* (- 12) (* r s s r00 r00)) (* 12 (* r r r x x x r00 r00 r00)) (* (- 6) (* x x x00)) (* 6 (* ?x1407 ?x1407 ?x1407 ?x1386 ?x1386 ?x1386 ?x1386)) (* 12 (* r00 r00 ?x1407 ?x1386 ?x1410 ?x1410 ?x1410)) (* (- 9) (* s x x s00)) (* (- 9) (* r r r s x x s00)) (* (- 9) (* r x x x r00)) (* 36 (* r r x x x r00 r00 r00)) (* (- 9) (* r r x x x r00)) (* (- 3) (* r r r x x x r00)) (* (- 3) (* x x x r00)) (* 9 (* r r r s x x r00)) (* 27 (* r r s x x r00)) (* 27 (* r s x x r00)) (* 9 (* s x x r00)) (* (- 9) (* r r r s s x r00)) (* (- 27) (* r r s s x r00)) (* (- 9) (* r r s s s s00)) (* (- 27) (* r s s x r00)) (* (- 3) (* r r r s s s s00)) (* (- 9) (* s s x r00)) (* 27 (* r r s s x s00)) (* 9 (* r r r s s x s00)) (* (- 27) (* r s x x s00)) (* (- 27) (* r r s x x s00)) (* 3 (* r r r s s s r00)) (* 9 (* r r s s s r00)) (* 9 (* r s s s r00)) (* 3 (* s s s r00)) (* (- 6) (* ?x1386 ?x1386 ?x1410 ?x1410 ?x1410)) (* 4 (* r s s s00)) (* (- 3) (* s s s s00)) (* (- 14) (* s x s00)) (* (- 8) (* r s x s00)) (* 9 (* s s x s00)) (* 27 (* r s s x s00)) (* 3 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x1386 ?x1386 ?x1386)) (* (- 9) (* r s s s s00)) (* 6 (* x00 ?x1386 ?x1410 ?x1410 ?x1410)) (* (- 6) (* x x s00 r00)) (* (- 3) (* ?x1407 ?x1407 ?x1407 ?x1386 ?x1386 ?x1386 ?x1410)) (* 3 (* r00 ?x1386 ?x1410 ?x1410 ?x1410)) (* 174 (* s x s00 r00)) (* (- 3) (* s00 ?x1386 ?x1410 ?x1410 ?x1410)) (* (- 168) (* s s s00 r00)) (* (- 12) (* r00 r00 ?x1407 ?x1407 ?x1407 ?x1407 ?x1386 ?x1386 ?x1386)) (* (- 3) (* ?x1407 ?x1386 ?x1410 ?x1410 ?x1410)) (* 1944 (* r s r00 r00 r00)) (* 336 (* s s r00 r00 r00)) (* 3888 (* r r s r00 r00 r00)) (* 1296 (* r s s r00 r00 r00)) (* 96 (* s s s r00 r00 r00)) (* 2592 (* r r r s r00 r00 r00)) (* 1296 (* r r s s r00 r00 r00)) (* 180 (* r s s s r00 r00 r00)) (* (- 972) (* r s s00 r00)) (* 972 (* r x s00 r00)) (* 12 (* s s s s r00 r00 r00)) (* (- 18) (* s s x x00)) (* (- 1944) (* r x r00 r00 r00)) (* (- 1944) (* r r s s00 r00)) (* (- 348) (* s x r00 r00 r00)) (* 1944 (* r r x s00 r00)) (* (- 3888) (* r r x r00 r00 r00)) (* (- 1296) (* r s x r00 r00 r00)) (* (- 648) (* r s s s00 r00)) (* 648 (* r s x s00 r00)) (* (- 72) (* s s x r00 r00 r00)) (* (- 2592) (* r r r x r00 r00 r00)) (* (- 1296) (* r r s x r00 r00 r00)) (* (- 108) (* r s s x r00 r00 r00)) (* (- 24) (* r r s x)) (* (- 1296) (* r r r s s00 r00)) (* (- 12) (* s s s x r00 r00 r00)) (* 1296 (* r r r x s00 r00)) (* (- 648) (* r r s s s00 r00)) (* 648 (* r r s x s00 r00)) (* (- 6) (* s s s s s00 r00)))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x565 (* s r00 r00)))
 (let ((?x864 (* (- 36) ?x565)))
 (let ((?x522 (* r00 x00)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x426 (* s00 r00)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1377 (+ ?x143 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s s)) ?x864 ?x1365 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x732 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1129 (* 108 (* s x)) (* (- 108) (* x x)) ?x883 (* 12 (* s s s00)) ?x1371 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1375 (* 216 (* x x00)) ?x1376)))
 (let (($x1378 (= ?x1377 0)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1079 (+ ?x143 ?x987 (* (- 24) (* r s)) (* 24 (* r s00)) ?x564 ?x551 ?x569 (* 54 (* r x)) (* 36 (* r x r00)) ?x864 ?x916 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1000 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x696 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x806 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x890 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1084 (= ?x1079 0)))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x745 (+ ?x47 ?x378 (* (- 9) (* r s)) (* 9 (* r s00)) ?x541 ?x536 ?x546 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x565) ?x604 (* 18 (* x r00)) ?x648 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x752 (= ?x745 0)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x499 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x505 (+ ?x43 ?x499 ?x56 ?x44 ?x500 ?x501 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x504 ?x470)))
 (let (($x506 (= ?x505 0)))
 (let ((?x301 (* r00 r00)))
 (let ((?x302 (* 3 ?x301)))
 (let ((?x331 (* (- 1) s00)))
 (let (($x334 (= (+ s ?x331 (* (- 3) (* r r)) ?x302) 0)))
 (let (($x2125 (and $x334 $x506 $x752 $x1084 $x1378 (not (= ?x310 0)))))
 (let ((?x3212 (+ 3 s ?x215)))
 (let ((?x2081 (+ x ?x280)))
 (let ((?x776 (+ (* 3 (* s00 ?x2081 ?x2081)) (* 2 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x3212)) (* (- 6) (* x00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 6) (* ?x2081 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 6) (* r00 s00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 3 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 6 (* ?x2081 ?x2081 ?x2081)) (* (- 3) (* ?x2081 ?x2081 ?x3212)) (* 6 (* x00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 4 (* s00 ?x1407 ?x2081 ?x2081)) (* 2 (* ?x1407 ?x2081 ?x2081 ?x3212)) (* (- 12) (* r00 r00 ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 3) (* ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 3) (* r00 ?x2081 ?x2081)) (* (- 12) (* r00 r00 ?x1407 ?x2081 ?x2081)) (* 6 (* r00 s00 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 4) (* s00 ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 6) (* x00 ?x2081 ?x2081)) (* 4 (* s00 ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 3) (* r00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 6 (* ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x2081)) (* 12 (* r00 r00 ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* r00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* ?x1407 ?x2081 ?x2081)) (* (- 3) (* ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x3212)) (* (- 3) (* s00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* ?x2081 ?x3212 ?x3212 ?x3212 ?x3212)) (* 12 (* r00 r00 r00 ?x2081 ?x2081)) (* (- 2) (* ?x1407 ?x2081 ?x3212 ?x3212 ?x3212 ?x3212)) (* (- 6) (* r00 s00 ?x2081 ?x2081)) (* 12 (* r00 r00 r00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 3 (* s00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 12) (* r00 r00 r00 ?x2081 ?x3212 ?x3212 ?x3212)))))
 (let (($x3455 (not (= ?x776 0))))
 (let ((?x4656 (* 108 ?x1346)))
 (let ((?x6059 (* (- 9) s)))
 (let ((?x3445 (* r00 r00 s00)))
 (let ((?x878 (* (- 36) ?x3445)))
 (let ((?x137 (* 9 s00)))
 (let ((?x6248 (* 51 ?x591)))
 (let ((?x1975 (* r00 r00 s)))
 (let ((?x4706 (* 36 ?x1975)))
 (let ((?x3289 (* 16 ?x1184)))
 (let ((?x2731 (* (- 108) ?x805)))
 (let ((?x3558 (* (- 432) ?x882)))
 (let ((?x4314 (* 108 ?x522)))
 (let ((?x4738 (+ (* 216 (* r00 s00 x00)) ?x4314 (* (- 54) (* r00 s00)) (* 15 ?x545) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3558 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2731 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3289 (* (- 108) (* x s)) ?x4706 ?x6248 (* (- 108) (* r00 x)) ?x137 ?x878 ?x6059 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4656)))
 (let (($x4665 (= ?x4738 0)))
 (let ((?x885 (* 15 ?x591)))
 (let ((?x870 (* 36 ?x877)))
 (let ((?x891 (* (- 6) ?x805)))
 (let ((?x2271 (* 54 ?x522)))
 (let ((?x2957 (+ (* 24 (* s r)) ?x2271 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x545) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x891 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4706 ?x870 ?x885 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x878 (* 54 (* x00 r)) ?x6059 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x4641 (* 4 ?x591)))
 (let ((?x2862 (* 18 ?x522)))
 (let ((?x4636 (+ (* 9 (* s r)) ?x2862 (* (- 9) (* r00 s00)) (* (- 2) ?x545) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1975) ?x4641 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3445) (* 18 (* x00 r)) ?x499 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x4877 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x499 ?x500 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x501 ?x470)))
 (let (($x2070 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) ?x301)) 0)))
 (let (($x3066 (and $x2070 (= ?x4877 0) (= ?x4636 0) (= ?x2957 0) $x4665 $x3455)))
 (rewrite (= $x3066 $x2125)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x3451 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (* 6 r)))
 (let ((?x3212 (+ 3 s ?x215)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x2081 (+ x ?x280)))
 (let ((?x1407 (+ 1 r)))
 (let ((?x776 (+ (* 3 (* s00 ?x2081 ?x2081)) (* 2 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x3212)) (* (- 6) (* x00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 6) (* ?x2081 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 6) (* r00 s00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 3 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 6 (* ?x2081 ?x2081 ?x2081)) (* (- 3) (* ?x2081 ?x2081 ?x3212)) (* 6 (* x00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 4 (* s00 ?x1407 ?x2081 ?x2081)) (* 2 (* ?x1407 ?x2081 ?x2081 ?x3212)) (* (- 12) (* r00 r00 ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 3) (* ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 3) (* r00 ?x2081 ?x2081)) (* (- 12) (* r00 r00 ?x1407 ?x2081 ?x2081)) (* 6 (* r00 s00 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 4) (* s00 ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 6) (* x00 ?x2081 ?x2081)) (* 4 (* s00 ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 3) (* r00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 6 (* ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x2081)) (* 12 (* r00 r00 ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* r00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* ?x1407 ?x2081 ?x2081)) (* (- 3) (* ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x3212)) (* (- 3) (* s00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* ?x2081 ?x3212 ?x3212 ?x3212 ?x3212)) (* 12 (* r00 r00 r00 ?x2081 ?x2081)) (* (- 2) (* ?x1407 ?x2081 ?x3212 ?x3212 ?x3212 ?x3212)) (* (- 6) (* r00 s00 ?x2081 ?x2081)) (* 12 (* r00 r00 r00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 3 (* s00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 12) (* r00 r00 r00 ?x2081 ?x3212 ?x3212 ?x3212)))))
 (let (($x3455 (not (= ?x776 0))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x4656 (* 108 ?x1346)))
 (let ((?x6059 (* (- 9) s)))
 (let ((?x3445 (* r00 r00 s00)))
 (let ((?x878 (* (- 36) ?x3445)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x6248 (* 51 ?x591)))
 (let ((?x1975 (* r00 r00 s)))
 (let ((?x4706 (* 36 ?x1975)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x3289 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x2731 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3558 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x4314 (* 108 ?x522)))
 (let ((?x4738 (+ (* 216 (* r00 s00 x00)) ?x4314 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3558 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2731 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3289 (* (- 108) (* x s)) ?x4706 ?x6248 (* (- 108) (* r00 x)) ?x137 ?x878 ?x6059 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4656)))
 (let (($x4665 (= ?x4738 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x5484 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1975) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 ?x3445) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x2857 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1975) ?x604 (* 18 (* r00 x)) ?x378 (* 6 ?x3445) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x3318 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2070 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2070 (= ?x3318 0) (= ?x2857 0) (= ?x5484 0) $x4665 $x3455)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2959 (lambda ((r Int) (s Int) (x Int) )(let ((?x215 (* 6 r)))
 (let ((?x3212 (+ 3 s ?x215)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x2081 (+ x ?x280)))
 (let ((?x1407 (+ 1 r)))
 (let ((?x776 (+ (* 3 (* s00 ?x2081 ?x2081)) (* 2 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x3212)) (* (- 6) (* x00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 6) (* ?x2081 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 6) (* r00 s00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 3 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 6 (* ?x2081 ?x2081 ?x2081)) (* (- 3) (* ?x2081 ?x2081 ?x3212)) (* 6 (* x00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 4 (* s00 ?x1407 ?x2081 ?x2081)) (* 2 (* ?x1407 ?x2081 ?x2081 ?x3212)) (* (- 12) (* r00 r00 ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 3) (* ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 3) (* r00 ?x2081 ?x2081)) (* (- 12) (* r00 r00 ?x1407 ?x2081 ?x2081)) (* 6 (* r00 s00 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 4) (* s00 ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 6) (* x00 ?x2081 ?x2081)) (* 4 (* s00 ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 3) (* r00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 6 (* ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x2081)) (* 12 (* r00 r00 ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* r00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* ?x1407 ?x2081 ?x2081)) (* (- 3) (* ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x3212)) (* (- 3) (* s00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* ?x2081 ?x3212 ?x3212 ?x3212 ?x3212)) (* 12 (* r00 r00 r00 ?x2081 ?x2081)) (* (- 2) (* ?x1407 ?x2081 ?x3212 ?x3212 ?x3212 ?x3212)) (* (- 6) (* r00 s00 ?x2081 ?x2081)) (* 12 (* r00 r00 r00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 3 (* s00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 12) (* r00 r00 r00 ?x2081 ?x3212 ?x3212 ?x3212)))))
 (let (($x3455 (not (= ?x776 0))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x4656 (* 108 ?x1346)))
 (let ((?x6059 (* (- 9) s)))
 (let ((?x3445 (* r00 r00 s00)))
 (let ((?x878 (* (- 36) ?x3445)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x6248 (* 51 ?x591)))
 (let ((?x1975 (* r00 r00 s)))
 (let ((?x4706 (* 36 ?x1975)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x3289 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x2731 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3558 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x4314 (* 108 ?x522)))
 (let ((?x4738 (+ (* 216 (* r00 s00 x00)) ?x4314 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3558 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2731 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3289 (* (- 108) (* x s)) ?x4706 ?x6248 (* (- 108) (* r00 x)) ?x137 ?x878 ?x6059 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4656)))
 (let (($x4665 (= ?x4738 0)))
 (let ((?x885 (* 15 ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x870 (* 36 ?x877)))
 (let ((?x891 (* (- 6) ?x805)))
 (let ((?x2271 (* 54 ?x522)))
 (let ((?x2957 (+ (* 24 (* s r)) ?x2271 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x891 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4706 ?x870 ?x885 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x878 (* 54 (* x00 r)) ?x6059 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x499 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4641 (* 4 ?x591)))
 (let ((?x2862 (* 18 ?x522)))
 (let ((?x4636 (+ (* 9 (* s r)) ?x2862 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1975) ?x4641 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3445) (* 18 (* x00 r)) ?x499 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x4877 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x499 ?x500 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x501 ?x470)))
 (let (($x2070 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3066 (and $x2070 (= ?x4877 0) (= ?x4636 0) (= ?x2957 0) $x4665 $x3455)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x5484 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1975) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 ?x3445) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x2857 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1975) ?x604 (* 18 (* r00 x)) ?x378 (* 6 ?x3445) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x3318 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x469))))
 (let (($x2053 (and $x2070 (= ?x3318 0) (= ?x2857 0) (= ?x5484 0) $x4665 $x3455)))
 (rewrite (= $x2053 $x3066)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x277 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (- x s)))
 (let ((?x215 (* 6 r)))
 (let ((?x216 (+ s ?x215 3)))
 (let ((?x214 (+ r 1)))
 (let ((?x218 (+ (* 3 s00 ?x211 ?x211) (* 2 ?x214 ?x214 ?x214 ?x214 ?x216 ?x211 ?x211 ?x211))))
 (let ((?x223 (- (- ?x218 (* 6 ?x214 ?x214 ?x214 ?x211 ?x211 ?x211 x00)) (* 6 ?x216 ?x216 ?x216 ?x211 ?x211))))
 (let ((?x227 (+ (- ?x223 (* 6 ?x214 ?x214 ?x214 r00 s00 ?x211 ?x211 ?x211)) (* 3 ?x214 ?x214 ?x214 ?x214 ?x211 ?x211 ?x211) (* 6 ?x211 ?x211 ?x211))))
 (let ((?x233 (+ (- ?x227 (* 3 ?x216 ?x211 ?x211)) (* 6 ?x216 ?x216 ?x216 ?x211 x00) (* 4 ?x214 s00 ?x211 ?x211) (* 2 ?x214 ?x216 ?x211 ?x211))))
 (let ((?x239 (- (- ?x233 (* 12 ?x214 ?x214 ?x214 ?x214 r00 r00 ?x211 ?x211 ?x211)) (* 3 ?x214 ?x216 ?x216 ?x216 ?x211))))
 (let ((?x241 (- (- ?x239 (* 3 r00 ?x211 ?x211)) (* 12 ?x214 r00 r00 ?x211 ?x211))))
 (let ((?x246 (- (+ ?x241 (* 6 r00 ?x216 ?x216 ?x216 s00 ?x211)) (* 4 ?x214 ?x216 ?x216 ?x216 s00 ?x211))))
 (let ((?x249 (+ (- ?x246 (* 6 ?x211 ?x211 x00)) (* 4 ?x214 ?x214 ?x214 ?x214 s00 ?x211 ?x211 ?x211))))
 (let ((?x256 (+ (- ?x249 (* 3 ?x214 ?x214 ?x214 r00 ?x211 ?x211 ?x211)) (* 6 ?x214 ?x214 ?x214 ?x211 ?x211 ?x211 ?x211) (* 12 ?x214 r00 r00 ?x216 ?x216 ?x216 ?x211) (* 3 r00 ?x216 ?x216 ?x216 ?x211) (* 3 ?x214 ?x211 ?x211))))
 (let ((?x260 (- (- ?x256 (* 3 ?x214 ?x214 ?x214 ?x216 ?x211 ?x211 ?x211)) (* 3 ?x216 ?x216 ?x216 s00 ?x211))))
 (let ((?x263 (+ ?x260 (* 3 ?x216 ?x216 ?x216 ?x216 ?x211) (* 12 r00 r00 r00 ?x211 ?x211))))
 (let ((?x267 (- (- ?x263 (* 2 ?x214 ?x216 ?x216 ?x216 ?x216 ?x211)) (* 6 r00 s00 ?x211 ?x211))))
 (let ((?x270 (+ ?x267 (* 12 ?x214 ?x214 ?x214 r00 r00 r00 ?x211 ?x211 ?x211) (* 3 ?x214 ?x214 ?x214 s00 ?x211 ?x211 ?x211))))
 (let (($x274 (not (= (- ?x270 (* 12 r00 r00 r00 ?x216 ?x216 ?x216 ?x211)) 0))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x274)))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3197 (lambda ((r Int) (s Int) (x Int) )(let ((?x215 (* 6 r)))
 (let ((?x3212 (+ 3 s ?x215)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x2081 (+ x ?x280)))
 (let ((?x1407 (+ 1 r)))
 (let ((?x776 (+ (* 3 (* s00 ?x2081 ?x2081)) (* 2 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x3212)) (* (- 6) (* x00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 6) (* ?x2081 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 6) (* r00 s00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 3 (* ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 6 (* ?x2081 ?x2081 ?x2081)) (* (- 3) (* ?x2081 ?x2081 ?x3212)) (* 6 (* x00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 4 (* s00 ?x1407 ?x2081 ?x2081)) (* 2 (* ?x1407 ?x2081 ?x2081 ?x3212)) (* (- 12) (* r00 r00 ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 3) (* ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 3) (* r00 ?x2081 ?x2081)) (* (- 12) (* r00 r00 ?x1407 ?x2081 ?x2081)) (* 6 (* r00 s00 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 4) (* s00 ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* (- 6) (* x00 ?x2081 ?x2081)) (* 4 (* s00 ?x1407 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 3) (* r00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 6 (* ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x2081)) (* 12 (* r00 r00 ?x1407 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* r00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* ?x1407 ?x2081 ?x2081)) (* (- 3) (* ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081 ?x3212)) (* (- 3) (* s00 ?x2081 ?x3212 ?x3212 ?x3212)) (* 3 (* ?x2081 ?x3212 ?x3212 ?x3212 ?x3212)) (* 12 (* r00 r00 r00 ?x2081 ?x2081)) (* (- 2) (* ?x1407 ?x2081 ?x3212 ?x3212 ?x3212 ?x3212)) (* (- 6) (* r00 s00 ?x2081 ?x2081)) (* 12 (* r00 r00 r00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* 3 (* s00 ?x1407 ?x1407 ?x1407 ?x2081 ?x2081 ?x2081)) (* (- 12) (* r00 r00 r00 ?x2081 ?x3212 ?x3212 ?x3212)))))
 (let (($x3455 (not (= ?x776 0))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x4656 (* 108 ?x1346)))
 (let ((?x6059 (* (- 9) s)))
 (let ((?x3445 (* r00 r00 s00)))
 (let ((?x878 (* (- 36) ?x3445)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x6248 (* 51 ?x591)))
 (let ((?x1975 (* r00 r00 s)))
 (let ((?x4706 (* 36 ?x1975)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x3289 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x2731 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3558 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x4314 (* 108 ?x522)))
 (let ((?x4738 (+ (* 216 (* r00 s00 x00)) ?x4314 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3558 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2731 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3289 (* (- 108) (* x s)) ?x4706 ?x6248 (* (- 108) (* r00 x)) ?x137 ?x878 ?x6059 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4656)))
 (let (($x4665 (= ?x4738 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x5484 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1975) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 ?x3445) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x2857 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1975) ?x604 (* 18 (* r00 x)) ?x378 (* 6 ?x3445) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x3318 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2070 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2053 (and $x2070 (= ?x3318 0) (= ?x2857 0) (= ?x5484 0) $x4665 $x3455)))
 (let ((?x211 (- x s)))
 (let ((?x216 (+ s ?x215 3)))
 (let ((?x214 (+ r 1)))
 (let ((?x218 (+ (* 3 s00 ?x211 ?x211) (* 2 ?x214 ?x214 ?x214 ?x214 ?x216 ?x211 ?x211 ?x211))))
 (let ((?x223 (- (- ?x218 (* 6 ?x214 ?x214 ?x214 ?x211 ?x211 ?x211 x00)) (* 6 ?x216 ?x216 ?x216 ?x211 ?x211))))
 (let ((?x227 (+ (- ?x223 (* 6 ?x214 ?x214 ?x214 r00 s00 ?x211 ?x211 ?x211)) (* 3 ?x214 ?x214 ?x214 ?x214 ?x211 ?x211 ?x211) (* 6 ?x211 ?x211 ?x211))))
 (let ((?x233 (+ (- ?x227 (* 3 ?x216 ?x211 ?x211)) (* 6 ?x216 ?x216 ?x216 ?x211 x00) (* 4 ?x214 s00 ?x211 ?x211) (* 2 ?x214 ?x216 ?x211 ?x211))))
 (let ((?x239 (- (- ?x233 (* 12 ?x214 ?x214 ?x214 ?x214 r00 r00 ?x211 ?x211 ?x211)) (* 3 ?x214 ?x216 ?x216 ?x216 ?x211))))
 (let ((?x241 (- (- ?x239 (* 3 r00 ?x211 ?x211)) (* 12 ?x214 r00 r00 ?x211 ?x211))))
 (let ((?x246 (- (+ ?x241 (* 6 r00 ?x216 ?x216 ?x216 s00 ?x211)) (* 4 ?x214 ?x216 ?x216 ?x216 s00 ?x211))))
 (let ((?x249 (+ (- ?x246 (* 6 ?x211 ?x211 x00)) (* 4 ?x214 ?x214 ?x214 ?x214 s00 ?x211 ?x211 ?x211))))
 (let ((?x256 (+ (- ?x249 (* 3 ?x214 ?x214 ?x214 r00 ?x211 ?x211 ?x211)) (* 6 ?x214 ?x214 ?x214 ?x211 ?x211 ?x211 ?x211) (* 12 ?x214 r00 r00 ?x216 ?x216 ?x216 ?x211) (* 3 r00 ?x216 ?x216 ?x216 ?x211) (* 3 ?x214 ?x211 ?x211))))
 (let ((?x260 (- (- ?x256 (* 3 ?x214 ?x214 ?x214 ?x216 ?x211 ?x211 ?x211)) (* 3 ?x216 ?x216 ?x216 s00 ?x211))))
 (let ((?x263 (+ ?x260 (* 3 ?x216 ?x216 ?x216 ?x216 ?x211) (* 12 r00 r00 r00 ?x211 ?x211))))
 (let ((?x267 (- (- ?x263 (* 2 ?x214 ?x216 ?x216 ?x216 ?x216 ?x211)) (* 6 r00 s00 ?x211 ?x211))))
 (let ((?x270 (+ ?x267 (* 12 ?x214 ?x214 ?x214 r00 r00 r00 ?x211 ?x211 ?x211) (* 3 ?x214 ?x214 ?x214 s00 ?x211 ?x211 ?x211))))
 (let (($x274 (not (= (- ?x270 (* 12 r00 r00 r00 ?x216 ?x216 ?x216 ?x211)) 0))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x276 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x274))))
 (rewrite (= $x276 $x2053))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x278 (asserted $x277)))
 (let ((@x2805 (mp (mp @x278 (quant-intro (proof-bind ?x3197) (= $x277 $x3451)) $x3451) (rewrite (= $x3451 $x3451)) $x3451)))
 (let ((@x5151 (mp (mp @x2805 (quant-intro (proof-bind ?x2959) (= $x3451 $x2923)) $x2923) (quant-intro (proof-bind ?x5044) (= $x2923 $x5042)) $x5042)))
 (let ((@x761 (mp (mp~ @x5151 (sk (~ $x5042 $x413)) $x413) (rewrite (= $x413 $x460)) $x460)))
 (let ((@x762 (and-elim @x761 $x3007)))
 (let ((@x4905 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3007) $x5282)) @x762 $x5282)))
 (let (($x5285 (>= ?x3006 0)))
 (let ((@x614 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3007) $x5285)) @x762 $x5285)))
 (let (($x4507 (<= ?x6167 0)))
 (let ((@x5146 (and-elim @x761 $x3379)))
 (let ((@x4917 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3379) $x4507)) @x5146 $x4507)))
 (let (($x4505 (>= ?x6167 0)))
 (let ((@x2444 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3379) $x4505)) @x5146 $x4505)))
 (let (($x5281 (<= ?x4873 0)))
 (let ((@x4863 (and-elim @x761 $x4661)))
 (let ((@x2880 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4661) $x5281)) @x4863 $x5281)))
 (let (($x5280 (>= ?x4873 0)))
 (let ((@x4602 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4661) $x5280)) @x4863 $x5280)))
 (let (($x5288 (<= ?x5139 0)))
 (let ((@x4869 (and-elim @x761 $x5140)))
 (let ((@x4663 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5140) $x5288)) @x4869 $x5288)))
 (let (($x2564 (>= ?x5139 0)))
 (let ((@x4578 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5140) $x2564)) @x4869 $x2564)))
 (let (($x2411 (not (<= ?x440 0))))
 (let (($x2741 (>= ?x440 0)))
 (let ((@x5007 ((_ th-lemma arith) (hypothesis (not $x2741)) @x614 @x4905 @x4578 @x4663 @x4602 @x2880 @x4578 @x4663 @x4602 @x2880 @x2444 @x4917 @x614 @x4905 false)))
 (let ((@x913 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x288 $x2411 (not $x2741))) (and-elim @x761 $x759) (or $x2411 (not $x2741)))))
 ((_ th-lemma arith) (unit-resolution @x913 (lemma @x5007 $x2741) $x2411) @x614 @x4905 @x4578 @x4663 @x4602 @x2880 @x4578 @x4663 @x4602 @x2880 @x2444 @x4917 @x614 @x4905 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        29
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1634
 :arith-nonlinear-bounds    22
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 279
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                5.48
 :memory                    3.95
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                23025075
 :num-checks                1
 :propagations              12
 :rlimit-count              139706
 :time                      0.08
 :total-time                0.10)
