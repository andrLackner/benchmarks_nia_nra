unsat
((set-logic NIA)
(declare-fun y!0 () Int)
(declare-fun x!1 () Int)
(proof
(let ((?x83 (* (- 1) y!0)))
 (let ((?x76 (* (- 1) x!1)))
 (let ((?x1899 (+ y00 x00 ?x76 ?x83)))
 (let (($x1924 (<= ?x1899 0)))
 (let (($x1917 (= ?x1899 0)))
 (let ((?x2306 (* x!1 x!1)))
 (let ((?x255 (* (- 2) ?x2306)))
 (let ((?x1603 (* x!1 y!0 y!0 y!0)))
 (let ((?x1236 (* (- 2) ?x1603)))
 (let ((?x1168 (* x!1 x!1 x!1 y!0)))
 (let ((?x1442 (* 2 ?x1168)))
 (let ((?x654 (* (- 2) (* x00 x!1 y!0 y!0 y!0))))
 (let ((?x1347 (* (- 2) (* y00 x!1 y!0 y!0 y!0))))
 (let ((?x1568 (+ 1 x!1)))
 (let ((?x820 (+ (- 1) y!0)))
 (let ((?x617 (* ?x820 ?x820 ?x820 ?x820 ?x1568 ?x1568)))
 (let ((?x464 (* ?x820 ?x820 ?x820 ?x1568 ?x1568 ?x1568)))
 (let ((?x152 (* y!0 y!0)))
 (let ((?x2305 (* 2 ?x152)))
 (let ((?x2061 (+ (* 2 y00) (* 2 x00) ?x76 (* 4 (* y00 y!0 y!0)) ?x2305 (* (- 1) (* x!1 x!1 y!0 y!0 y!0)) ?x83 ?x464 (* (- 1) (* x00 x!1 x!1 y!0 y!0 y!0)) ?x617 (* (- 1) (* x!1 x!1 x!1)) (* 3 (* x!1 y!0 y!0)) (* (- 1) (* y00 x!1 x!1 y!0 y!0 y!0)) (* 4 (* y00 x!1)) ?x1347 ?x654 (* (- 5) (* y00 y!0)) (* 8 (* y00 x!1 y!0 y!0)) (* (- 1) (* x!1 x!1 x!1 y!0 y!0)) ?x1442 (* (- 10) (* y00 x!1 y!0)) (* 3 (* x!1 x!1 y!0)) (* (- 10) (* x00 x!1 y!0)) (* (- 5) (* y00 x!1 x!1 y!0)) (* 4 (* x00 y!0 y!0)) (* 8 (* x00 x!1 y!0 y!0)) (* (- 1) (* x00 y!0 y!0 y!0)) ?x1236 (* 4 (* x00 x!1 x!1 y!0 y!0)) (* 2 (* y00 x!1 x!1)) (* (- 5) (* x00 x!1 x!1 y!0)) (* (- 5) (* x00 y!0)) (* (- 1) (* y!0 y!0 y!0)) (* 4 (* y00 x!1 x!1 y!0 y!0)) (* (- 1) (* y00 y!0 y!0 y!0)) (* 2 (* x00 x!1 x!1)) (* 4 (* x00 x!1)) ?x255)))
 (let (($x2063 (= ?x2061 0)))
 (let (($x1523 (not $x2063)))
 (let ((?x2090 (* y00 y!0 y!0 y!0)))
 (let ((?x1946 (* y!0 y!0 y!0)))
 (let ((?x1904 (* x00 y!0)))
 (let ((?x1886 (* x00 x!1 x!1 y!0)))
 (let ((?x1582 (* x00 y!0 y!0 y!0)))
 (let ((?x1333 (* y00 x!1 x!1 y!0)))
 (let ((?x1238 (* x!1 x!1 y!0)))
 (let ((?x267 (* (- 3) ?x1238)))
 (let ((?x1055 (+ 1 y!0)))
 (let ((?x1389 (+ (- 1) x!1)))
 (let ((?x1777 (* (- 1) (* ?x1389 ?x1389 ?x1389 ?x1055 ?x1055 ?x1055))))
 (let ((?x1163 (* x!1 x!1 x!1 y!0 y!0)))
 (let ((?x1162 (* (- 1) (* ?x1389 ?x1389 ?x1055 ?x1055 ?x1055 ?x1055))))
 (let ((?x1094 (* y00 y!0)))
 (let ((?x853 (* y00 x!1 x!1 y!0 y!0 y!0)))
 (let ((?x730 (* x!1 y!0 y!0)))
 (let ((?x1583 (* (- 3) ?x730)))
 (let ((?x727 (* x!1 x!1 x!1)))
 (let ((?x529 (* x00 x!1 x!1 y!0 y!0 y!0)))
 (let ((?x188 (* x!1 x!1 y!0 y!0 y!0)))
 (let ((?x1860 (+ x!1 (* 2 (* y00 y!0 y!0)) ?x2305 ?x188 y!0 ?x529 ?x727 ?x1583 ?x853 ?x1347 ?x654 ?x1094 ?x1162 (* (- 4) (* y00 x!1 y!0 y!0)) ?x1163 ?x1442 ?x1777 (* (- 2) (* y00 x!1 y!0)) ?x267 (* (- 2) (* x00 x!1 y!0)) ?x1333 (* 2 (* x00 y!0 y!0)) (* (- 4) (* x00 x!1 y!0 y!0)) ?x1582 ?x1236 (* 2 (* x00 x!1 x!1 y!0 y!0)) ?x1886 ?x1904 ?x1946 (* 2 (* y00 x!1 x!1 y!0 y!0)) ?x2090 ?x255)))
 (let (($x1966 (= ?x1860 0)))
 (let (($x2048 (or (not $x1966) $x1523)))
 (let (($x257 (and $x1917 $x2048)))
 (let ((?x891 (* x!1 x!1 y!0 y!0 y!0 y00)))
 (let ((?x1443 (* y!0 y!0 y!0 y00)))
 (let ((?x1241 (* x!1 x!1 y!0 y!0 y!0 x00)))
 (let ((?x729 (* y!0 y!0 y!0 x00)))
 (let ((?x1996 (* (- 2) x00)))
 (let ((?x1995 (* (- 2) y00)))
 (let ((?x384 (+ x!1 y!0 ?x1995 ?x1996 (* 5 (* y!0 y00)) (* (- 1) ?x617) (* (- 4) (* y!0 y!0 y00)) (* (- 8) (* x!1 y!0 y!0 y00)) (* (- 4) (* x!1 x!1 y!0 y!0 y00)) (* (- 4) (* x!1 y00)) (* (- 2) (* x!1 x!1 y00)) (* 10 (* x!1 y!0 y00)) (* 5 (* x!1 x!1 y!0 y00)) (* (- 2) ?x152) ?x1946 (* 2 ?x1603) ?x188 (* 2 ?x2306) ?x267 ?x1583 (* (- 1) ?x464) (* (- 4) (* x!1 x00)) (* (- 2) (* x!1 x!1 x00)) (* 5 (* y!0 x00)) (* 10 (* x!1 y!0 x00)) (* 5 (* x!1 x!1 y!0 x00)) (* (- 4) (* y!0 y!0 x00)) (* (- 8) (* x!1 y!0 y!0 x00)) (* (- 4) (* x!1 x!1 y!0 y!0 x00)) ?x729 (* 2 (* x!1 y!0 y!0 y!0 x00)) ?x1241 ?x1163 ?x727 (* (- 2) ?x1168) ?x1443 (* 2 (* x!1 y!0 y!0 y!0 y00)) ?x891)))
 (let ((?x728 (* x!1 x!1 y!0 x00)))
 (let ((?x1585 (* y!0 x00)))
 (let ((?x1598 (* x!1 x!1 y!0 y00)))
 (let ((?x1287 (* y!0 y00)))
 (let ((?x118 (+ x!1 y!0 ?x1287 (* 2 (* y!0 y!0 y00)) (* (- 4) (* x!1 y!0 y!0 y00)) (* 2 (* x!1 x!1 y!0 y!0 y00)) (* (- 2) (* x!1 y!0 y00)) ?x1598 ?x2305 ?x1946 ?x1236 ?x188 ?x255 ?x267 ?x1583 ?x1585 (* (- 2) (* x!1 y!0 x00)) ?x728 (* 2 (* y!0 y!0 x00)) (* (- 4) (* x!1 y!0 y!0 x00)) (* 2 (* x!1 x!1 y!0 y!0 x00)) ?x729 (* (- 2) (* x!1 y!0 y!0 y!0 x00)) ?x1241 ?x1162 ?x1777 ?x1163 ?x727 ?x1442 ?x1443 (* (- 2) (* x!1 y!0 y!0 y!0 y00)) ?x891)))
 (let (($x1896 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x118 0)) (not (= ?x384 0))))))
 (let (($x650 (exists ((x Int) (y Int) )(! (let ((?x1090 (* x x y y y y00)))
 (let ((?x1088 (* x y y y y00)))
 (let ((?x1214 (* 2 ?x1088)))
 (let ((?x1084 (* y y y y00)))
 (let ((?x907 (* x x x y)))
 (let ((?x1015 (* (- 2) ?x907)))
 (let ((?x892 (* x x x)))
 (let ((?x876 (* x x x y y)))
 (let ((?x597 (* x x y y y x00)))
 (let ((?x592 (* x y y y x00)))
 (let ((?x698 (* 2 ?x592)))
 (let ((?x585 (* y y y x00)))
 (let ((?x542 (* x x y y x00)))
 (let ((?x2015 (* (- 4) ?x542)))
 (let ((?x533 (* x y y x00)))
 (let ((?x2014 (* (- 8) ?x533)))
 (let ((?x524 (* y y x00)))
 (let ((?x2013 (* (- 4) ?x524)))
 (let ((?x504 (* x x y x00)))
 (let ((?x2012 (* 5 ?x504)))
 (let ((?x495 (* x y x00)))
 (let ((?x2011 (* 10 ?x495)))
 (let ((?x486 (* y x00)))
 (let ((?x2010 (* 5 ?x486)))
 (let ((?x2009 (* (- 2) (* x x x00))))
 (let ((?x476 (* x x00)))
 (let ((?x2008 (* (- 4) ?x476)))
 (let ((?x103 (+ 1 x)))
 (let ((?x183 (+ (- 1) y)))
 (let ((?x392 (* ?x183 ?x183 ?x183 ?x103 ?x103 ?x103)))
 (let ((?x310 (* (- 3) (* x y y))))
 (let ((?x377 (* (- 3) (* x x y))))
 (let ((?x252 (* x x)))
 (let ((?x987 (* 2 ?x252)))
 (let ((?x241 (* x x y y y)))
 (let ((?x239 (* x y y y)))
 (let ((?x371 (* 2 ?x239)))
 (let ((?x235 (* y y y)))
 (let ((?x228 (* y y)))
 (let ((?x1036 (* (- 2) ?x228)))
 (let ((?x154 (* x x y y00)))
 (let ((?x2007 (* 5 ?x154)))
 (let ((?x150 (* x y y00)))
 (let ((?x2006 (* 10 ?x150)))
 (let ((?x2004 (* (- 2) (* x x y00))))
 (let ((?x141 (* x y00)))
 (let ((?x2003 (* (- 4) ?x141)))
 (let ((?x133 (* x x y y y00)))
 (let ((?x2002 (* (- 4) ?x133)))
 (let ((?x131 (* x y y y00)))
 (let ((?x2001 (* (- 8) ?x131)))
 (let ((?x127 (* y y y00)))
 (let ((?x1999 (* (- 4) ?x127)))
 (let ((?x120 (* y y00)))
 (let ((?x1998 (* 5 ?x120)))
 (let ((?x1996 (* (- 2) x00)))
 (let ((?x1995 (* (- 2) y00)))
 (let ((?x2335 (+ x y ?x1995 ?x1996 ?x1998 (* (- 1) (* ?x183 ?x183 ?x183 ?x183 ?x103 ?x103)) ?x1999 ?x2001 ?x2002 ?x2003 ?x2004 ?x2006 ?x2007 ?x1036 ?x235 ?x371 ?x241 ?x987 ?x377 ?x310 (* (- 1) ?x392) ?x2008 ?x2009 ?x2010 ?x2011 ?x2012 ?x2013 ?x2014 ?x2015 ?x585 ?x698 ?x597 ?x876 ?x892 ?x1015 ?x1084 ?x1214 ?x1090)))
 (let ((?x1143 (* (- 2) ?x1088)))
 (let ((?x940 (* 2 ?x907)))
 (let ((?x97 (+ 1 y)))
 (let ((?x89 (+ (- 1) x)))
 (let ((?x726 (* ?x89 ?x89 ?x89 ?x97 ?x97 ?x97)))
 (let ((?x1258 (* (- 1) ?x726)))
 (let ((?x724 (* ?x89 ?x89 ?x97 ?x97 ?x97 ?x97)))
 (let ((?x1257 (* (- 1) ?x724)))
 (let ((?x610 (* (- 2) ?x592)))
 (let ((?x1256 (* 2 ?x542)))
 (let ((?x1255 (* (- 4) ?x533)))
 (let ((?x1254 (* 2 ?x524)))
 (let ((?x935 (* (- 2) ?x252)))
 (let ((?x312 (* (- 2) ?x239)))
 (let ((?x1252 (* 2 ?x228)))
 (let ((?x1250 (* 2 ?x133)))
 (let ((?x1249 (* (- 4) ?x131)))
 (let ((?x1248 (* 2 ?x127)))
 (let ((?x280 (+ x y ?x120 ?x1248 ?x1249 ?x1250 (* (- 2) ?x150) ?x154 ?x1252 ?x235 ?x312 ?x241 ?x935 ?x377 ?x310 ?x486 (* (- 2) ?x495) ?x504 ?x1254 ?x1255 ?x1256 ?x585 ?x610 ?x597 ?x1257 ?x1258 ?x876 ?x892 ?x940 ?x1084 ?x1143 ?x1090)))
 (let (($x99 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x99 (or (not (= ?x280 0)) (not (= ?x2335 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x959 (exists ((x Int) (y Int) )(! (let ((?x103 (+ 1 x)))
 (let ((?x183 (+ (- 1) y)))
 (let ((?x392 (* ?x183 ?x183 ?x183 ?x103 ?x103 ?x103)))
 (let ((?x125 (* ?x183 ?x183 ?x183 ?x183 ?x103 ?x103)))
 (let ((?x337 (+ (* y00 ?x183 ?x183 ?x103 ?x103) (* (- 1) (* ?x183 ?x183 ?x183 ?x103 ?x103)) (* (- 1) (* x00 ?x183 ?x183 ?x183 ?x103 ?x103)) ?x125 ?x392 (* x00 ?x183 ?x183 ?x103 ?x103) (* (- 1) (* ?x183 ?x183 ?x103 ?x103 ?x103)) (* (- 1) (* y00 ?x183 ?x183 ?x183 ?x103 ?x103)))))
 (let ((?x97 (+ 1 y)))
 (let ((?x89 (+ (- 1) x)))
 (let ((?x726 (* ?x89 ?x89 ?x89 ?x97 ?x97 ?x97)))
 (let ((?x724 (* ?x89 ?x89 ?x97 ?x97 ?x97 ?x97)))
 (let ((?x821 (+ (* y00 ?x89 ?x89 ?x97 ?x97) (* (- 1) (* ?x89 ?x89 ?x97 ?x97 ?x97)) (* (- 1) (* x00 ?x89 ?x89 ?x97 ?x97 ?x97)) ?x724 ?x726 (* x00 ?x89 ?x89 ?x97 ?x97) (* (- 1) (* ?x89 ?x89 ?x89 ?x97 ?x97)) (* (- 1) (* y00 ?x89 ?x89 ?x97 ?x97 ?x97)))))
 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x821 0)) (not (= ?x337 0)))))))))))))) :qid k!27))
 ))
 (let ((?x242 (lambda ((x Int) (y Int) )(let ((?x1090 (* x x y y y y00)))
 (let ((?x1088 (* x y y y y00)))
 (let ((?x1214 (* 2 ?x1088)))
 (let ((?x1084 (* y y y y00)))
 (let ((?x907 (* x x x y)))
 (let ((?x1015 (* (- 2) ?x907)))
 (let ((?x892 (* x x x)))
 (let ((?x876 (* x x x y y)))
 (let ((?x597 (* x x y y y x00)))
 (let ((?x592 (* x y y y x00)))
 (let ((?x698 (* 2 ?x592)))
 (let ((?x585 (* y y y x00)))
 (let ((?x542 (* x x y y x00)))
 (let ((?x2015 (* (- 4) ?x542)))
 (let ((?x533 (* x y y x00)))
 (let ((?x2014 (* (- 8) ?x533)))
 (let ((?x524 (* y y x00)))
 (let ((?x2013 (* (- 4) ?x524)))
 (let ((?x504 (* x x y x00)))
 (let ((?x2012 (* 5 ?x504)))
 (let ((?x495 (* x y x00)))
 (let ((?x2011 (* 10 ?x495)))
 (let ((?x486 (* y x00)))
 (let ((?x2010 (* 5 ?x486)))
 (let ((?x2009 (* (- 2) (* x x x00))))
 (let ((?x476 (* x x00)))
 (let ((?x2008 (* (- 4) ?x476)))
 (let ((?x103 (+ 1 x)))
 (let ((?x183 (+ (- 1) y)))
 (let ((?x392 (* ?x183 ?x183 ?x183 ?x103 ?x103 ?x103)))
 (let ((?x310 (* (- 3) (* x y y))))
 (let ((?x377 (* (- 3) (* x x y))))
 (let ((?x252 (* x x)))
 (let ((?x987 (* 2 ?x252)))
 (let ((?x241 (* x x y y y)))
 (let ((?x239 (* x y y y)))
 (let ((?x371 (* 2 ?x239)))
 (let ((?x235 (* y y y)))
 (let ((?x228 (* y y)))
 (let ((?x1036 (* (- 2) ?x228)))
 (let ((?x154 (* x x y y00)))
 (let ((?x2007 (* 5 ?x154)))
 (let ((?x150 (* x y y00)))
 (let ((?x2006 (* 10 ?x150)))
 (let ((?x2004 (* (- 2) (* x x y00))))
 (let ((?x141 (* x y00)))
 (let ((?x2003 (* (- 4) ?x141)))
 (let ((?x133 (* x x y y y00)))
 (let ((?x2002 (* (- 4) ?x133)))
 (let ((?x131 (* x y y y00)))
 (let ((?x2001 (* (- 8) ?x131)))
 (let ((?x127 (* y y y00)))
 (let ((?x1999 (* (- 4) ?x127)))
 (let ((?x120 (* y y00)))
 (let ((?x1998 (* 5 ?x120)))
 (let ((?x1996 (* (- 2) x00)))
 (let ((?x1995 (* (- 2) y00)))
 (let ((?x2335 (+ x y ?x1995 ?x1996 ?x1998 (* (- 1) (* ?x183 ?x183 ?x183 ?x183 ?x103 ?x103)) ?x1999 ?x2001 ?x2002 ?x2003 ?x2004 ?x2006 ?x2007 ?x1036 ?x235 ?x371 ?x241 ?x987 ?x377 ?x310 (* (- 1) ?x392) ?x2008 ?x2009 ?x2010 ?x2011 ?x2012 ?x2013 ?x2014 ?x2015 ?x585 ?x698 ?x597 ?x876 ?x892 ?x1015 ?x1084 ?x1214 ?x1090)))
 (let ((?x1143 (* (- 2) ?x1088)))
 (let ((?x940 (* 2 ?x907)))
 (let ((?x97 (+ 1 y)))
 (let ((?x89 (+ (- 1) x)))
 (let ((?x726 (* ?x89 ?x89 ?x89 ?x97 ?x97 ?x97)))
 (let ((?x1258 (* (- 1) ?x726)))
 (let ((?x724 (* ?x89 ?x89 ?x97 ?x97 ?x97 ?x97)))
 (let ((?x1257 (* (- 1) ?x724)))
 (let ((?x610 (* (- 2) ?x592)))
 (let ((?x1256 (* 2 ?x542)))
 (let ((?x1255 (* (- 4) ?x533)))
 (let ((?x1254 (* 2 ?x524)))
 (let ((?x935 (* (- 2) ?x252)))
 (let ((?x312 (* (- 2) ?x239)))
 (let ((?x1252 (* 2 ?x228)))
 (let ((?x1250 (* 2 ?x133)))
 (let ((?x1249 (* (- 4) ?x131)))
 (let ((?x1248 (* 2 ?x127)))
 (let ((?x280 (+ x y ?x120 ?x1248 ?x1249 ?x1250 (* (- 2) ?x150) ?x154 ?x1252 ?x235 ?x312 ?x241 ?x935 ?x377 ?x310 ?x486 (* (- 2) ?x495) ?x504 ?x1254 ?x1255 ?x1256 ?x585 ?x610 ?x597 ?x1257 ?x1258 ?x876 ?x892 ?x940 ?x1084 ?x1143 ?x1090)))
 (let (($x99 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x2342 (and $x99 (or (not (= ?x280 0)) (not (= ?x2335 0))))))
 (let ((?x125 (* ?x183 ?x183 ?x183 ?x183 ?x103 ?x103)))
 (let ((?x337 (+ (* y00 ?x183 ?x183 ?x103 ?x103) (* (- 1) (* ?x183 ?x183 ?x183 ?x103 ?x103)) (* (- 1) (* x00 ?x183 ?x183 ?x183 ?x103 ?x103)) ?x125 ?x392 (* x00 ?x183 ?x183 ?x103 ?x103) (* (- 1) (* ?x183 ?x183 ?x103 ?x103 ?x103)) (* (- 1) (* y00 ?x183 ?x183 ?x183 ?x103 ?x103)))))
 (let ((?x821 (+ (* y00 ?x89 ?x89 ?x97 ?x97) (* (- 1) (* ?x89 ?x89 ?x97 ?x97 ?x97)) (* (- 1) (* x00 ?x89 ?x89 ?x97 ?x97 ?x97)) ?x724 ?x726 (* x00 ?x89 ?x89 ?x97 ?x97) (* (- 1) (* ?x89 ?x89 ?x89 ?x97 ?x97)) (* (- 1) (* y00 ?x89 ?x89 ?x97 ?x97 ?x97)))))
 (let (($x986 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x821 0)) (not (= ?x337 0))))))
 (rewrite (= $x986 $x2342))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x70 (exists ((x Int) (y Int) )(! (let ((?x52 (- y 1)))
 (let ((?x51 (+ x 1)))
 (let ((?x57 (- (- (* ?x51 ?x51 ?x52 ?x52 y00) (* ?x51 ?x51 ?x52 ?x52 ?x52)) (* ?x51 ?x51 x00 ?x52 ?x52 ?x52))))
 (let ((?x61 (+ ?x57 (* ?x51 ?x51 ?x52 ?x52 ?x52 ?x52) (* ?x51 ?x51 ?x51 ?x52 ?x52 ?x52) (* ?x51 ?x51 x00 ?x52 ?x52))))
 (let ((?x65 (- (- ?x61 (* ?x51 ?x51 ?x51 ?x52 ?x52)) (* ?x51 ?x51 ?x52 ?x52 ?x52 y00))))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x40 (- (- (* ?x34 ?x34 ?x35 ?x35 y00) (* ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x44 (+ ?x40 (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35) (* ?x34 ?x34 x00 ?x35 ?x35))))
 (let ((?x48 (- (- ?x44 (* ?x34 ?x34 ?x34 ?x35 ?x35)) (* ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x48 0)) (not (= ?x65 0)))))))))))))) :qid k!27))
 ))
 (let ((?x962 (lambda ((x Int) (y Int) )(let ((?x103 (+ 1 x)))
 (let ((?x183 (+ (- 1) y)))
 (let ((?x392 (* ?x183 ?x183 ?x183 ?x103 ?x103 ?x103)))
 (let ((?x125 (* ?x183 ?x183 ?x183 ?x183 ?x103 ?x103)))
 (let ((?x337 (+ (* y00 ?x183 ?x183 ?x103 ?x103) (* (- 1) (* ?x183 ?x183 ?x183 ?x103 ?x103)) (* (- 1) (* x00 ?x183 ?x183 ?x183 ?x103 ?x103)) ?x125 ?x392 (* x00 ?x183 ?x183 ?x103 ?x103) (* (- 1) (* ?x183 ?x183 ?x103 ?x103 ?x103)) (* (- 1) (* y00 ?x183 ?x183 ?x183 ?x103 ?x103)))))
 (let ((?x97 (+ 1 y)))
 (let ((?x89 (+ (- 1) x)))
 (let ((?x726 (* ?x89 ?x89 ?x89 ?x97 ?x97 ?x97)))
 (let ((?x724 (* ?x89 ?x89 ?x97 ?x97 ?x97 ?x97)))
 (let ((?x821 (+ (* y00 ?x89 ?x89 ?x97 ?x97) (* (- 1) (* ?x89 ?x89 ?x97 ?x97 ?x97)) (* (- 1) (* x00 ?x89 ?x89 ?x97 ?x97 ?x97)) ?x724 ?x726 (* x00 ?x89 ?x89 ?x97 ?x97) (* (- 1) (* ?x89 ?x89 ?x89 ?x97 ?x97)) (* (- 1) (* y00 ?x89 ?x89 ?x97 ?x97 ?x97)))))
 (let (($x986 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x821 0)) (not (= ?x337 0))))))
 (let ((?x52 (- y 1)))
 (let ((?x51 (+ x 1)))
 (let ((?x57 (- (- (* ?x51 ?x51 ?x52 ?x52 y00) (* ?x51 ?x51 ?x52 ?x52 ?x52)) (* ?x51 ?x51 x00 ?x52 ?x52 ?x52))))
 (let ((?x61 (+ ?x57 (* ?x51 ?x51 ?x52 ?x52 ?x52 ?x52) (* ?x51 ?x51 ?x51 ?x52 ?x52 ?x52) (* ?x51 ?x51 x00 ?x52 ?x52))))
 (let ((?x65 (- (- ?x61 (* ?x51 ?x51 ?x51 ?x52 ?x52)) (* ?x51 ?x51 ?x52 ?x52 ?x52 y00))))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x40 (- (- (* ?x34 ?x34 ?x35 ?x35 y00) (* ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x44 (+ ?x40 (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35) (* ?x34 ?x34 x00 ?x35 ?x35))))
 (let ((?x48 (- (- ?x44 (* ?x34 ?x34 ?x34 ?x35 ?x35)) (* ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (let (($x69 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x48 0)) (not (= ?x65 0))))))
 (rewrite (= $x69 $x986)))))))))))))))))))))))))
 ))
 (let ((@x71 (asserted $x70)))
 (let ((@x357 (mp (mp @x71 (quant-intro (proof-bind ?x962) (= $x70 $x959)) $x959) (rewrite (= $x959 $x959)) $x959)))
 (let ((@x1837 (mp~ (mp @x357 (quant-intro (proof-bind ?x242) (= $x959 $x650)) $x650) (sk (~ $x650 $x1896)) $x1896)))
 (let ((@x1305 (mp @x1837 (rewrite (= $x1896 $x257)) $x257)))
 (let ((@x1594 (and-elim @x1305 $x1917)))
 (let ((@x1898 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1917) $x1924)) @x1594 $x1924)))
 (let (($x1701 (>= ?x1899 0)))
 (let ((@x1029 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1917) $x1701)) @x1594 $x1701)))
 (let (($x1730 (not (<= ?x2061 0))))
 (let (($x1580 (>= ?x2061 0)))
 (let ((@x1374 (lemma ((_ th-lemma arith) (hypothesis (not $x1580)) @x1029 @x1898 @x1029 @x1898 false) $x1580)))
 (let (($x1902 (>= ?x1860 0)))
 (let (($x1905 (<= ?x1860 0)))
 (let ((@x655 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1966 (not $x1905) (not $x1902))) (lemma ((_ th-lemma arith) (hypothesis (not $x1905)) @x1029 @x1898 false) $x1905) (lemma ((_ th-lemma arith) (hypothesis (not $x1902)) @x1029 @x1898 false) $x1902) $x1966)))
 (let ((@x1563 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2063 $x1730 (not $x1580))) (unit-resolution (and-elim @x1305 $x2048) @x655 $x1523) @x1374 $x1730)))
 ((_ th-lemma arith) @x1563 @x1029 @x1898 @x1029 @x1898 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        22
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-gcd-tests           8
 :arith-grobner             4
 :arith-max-min             690
 :arith-nonlinear-bounds    15
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-patches             8
 :arith-patches_succ        8
 :arith-pivots              4
 :arith-row-summations      1
 :arith-tableau-max-columns 59
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                3.92
 :memory                    3.35
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1679901
 :num-checks                1
 :propagations              14
 :rlimit-count              12017
 :time                      0.03
 :total-time                0.05)
