unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x171 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 1) (* q!3 d!1 d!1)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 4) (* x!0 d!1)) (* 2 (* q!3 d!1)) (* (- 8) r!2) (* 4 (* d!1 r!2)))))
 (let (($x413 (>= ?x171 0)))
 (let (($x569 (= ?x171 0)))
 (let ((?x576 (* 8 r!2)))
 (let ((?x477 (* q!3 d!1)))
 (let ((?x943 (* (- 2) ?x477)))
 (let ((?x422 (* x!0 d!1)))
 (let ((?x737 (* 4 ?x422)))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x222 (* q!3 d!1 d!1)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x311 (+ ?x158 ?x206 ?x190 ?x222 ?x256 ?x294 ?x737 ?x943 ?x576 (* (- 4) (* d!1 r!2)))))
 (let ((?x1231 (* (- 1) (* q!3 q!3 q!3 d!1 r!2))))
 (let ((?x406 (* (- 2) (* q!3 q!3 q!3 r!2))))
 (let ((?x339 (* q!3 r!2)))
 (let ((?x560 (* (+ ?x339 ?x406 ?x1231) ?x311)))
 (let (($x1362 (= ?x560 0)))
 (let (($x1366 (not $x1362)))
 (let ((?x1237 (* q!3 d!1 r!2)))
 (let ((?x414 (* (- 48) ?x1237)))
 (let ((?x764 (* q!3 q!3 r!2)))
 (let ((?x289 (* 24 ?x764)))
 (let ((?x262 (* 124 r!2)))
 (let ((?x488 (* (- 95) ?x339)))
 (let ((?x415 (+ ?x488 ?x406 ?x262 (* 64 (* d!1 r!2)) ?x289 ?x1231 (* 12 (* q!3 q!3 d!1 r!2)) ?x414)))
 (let ((?x257 (* ?x415 ?x311)))
 (let (($x462 (= ?x257 0)))
 (let ((?x407 (* (- 24) ?x764)))
 (let ((?x1220 (* (- 124) r!2)))
 (let ((?x465 (+ ?x488 ?x406 ?x1220 (* (- 64) (* d!1 r!2)) ?x407 ?x1231 (* (- 12) (* q!3 q!3 d!1 r!2)) ?x414)))
 (let ((?x467 (* ?x465 ?x311)))
 (let (($x1236 (= ?x467 0)))
 (let ((?x402 (* 48 ?x764)))
 (let ((?x418 (* 1016 r!2)))
 (let ((?x980 (* (- 383) ?x339)))
 (let ((?x214 (+ ?x980 ?x406 ?x418 (* 512 (* d!1 r!2)) ?x402 ?x1231 (* 24 (* q!3 q!3 d!1 r!2)) (* (- 192) ?x1237))))
 (let ((?x428 (* ?x214 ?x311)))
 (let (($x797 (= ?x428 0)))
 (let (($x432 (not $x797)))
 (let (($x261 (or $x432 (not $x1236) (not $x462) $x1366)))
 (let (($x1363 (and $x569 $x261)))
 (let ((?x313 (+ ?x576 ?x158 ?x206 ?x190 ?x256 ?x294 ?x737 ?x943 ?x222 (* (- 4) (* r!2 d!1)))))
 (let (($x533 (= (* (+ ?x339 (* (- 1) (* q!3 q!3 q!3 r!2 d!1)) ?x406) ?x313) 0)))
 (let ((?x408 (* (- 1) (* q!3 q!3 q!3 r!2 d!1))))
 (let ((?x301 (+ ?x418 ?x980 ?x408 (* 24 (* q!3 q!3 r!2 d!1)) ?x402 ?x406 (* (- 192) (* q!3 r!2 d!1)) (* 512 (* r!2 d!1)))))
 (let ((?x215 (* q!3 r!2 d!1)))
 (let ((?x1181 (* (- 48) ?x215)))
 (let ((?x358 (+ ?x262 ?x488 ?x408 (* 12 (* q!3 q!3 r!2 d!1)) ?x289 ?x406 ?x1181 (* 64 (* r!2 d!1)))))
 (let ((?x173 (+ ?x1220 ?x488 ?x408 (* (- 12) (* q!3 q!3 r!2 d!1)) ?x407 ?x406 ?x1181 (* (- 64) (* r!2 d!1)))))
 (let (($x436 (or (not (= (* ?x173 ?x313) 0)) (not (= (* ?x358 ?x313) 0)) (not (= (* ?x301 ?x313) 0)) (not $x533))))
 (let (($x571 (and (= ?x313 0) $x436)))
 (let (($x1128 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1336 (* r d)))
 (let ((?x1367 (* (- 4) ?x1336)))
 (let ((?x1333 (* q d d)))
 (let ((?x1335 (* (- 2) (* q d))))
 (let ((?x1064 (* 4 (* x d))))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x187 (* 8 r)))
 (let ((?x1039 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 ?x1335 ?x1333 ?x1367)))
 (let ((?x754 (* (- 2) (* q q q r))))
 (let ((?x821 (* (- 1) (* q q q r d))))
 (let ((?x267 (* q r)))
 (let (($x1308 (not (= (* (+ ?x267 ?x821 ?x754) ?x1039) 0))))
 (let ((?x530 (* q q r)))
 (let ((?x1145 (* 48 ?x530)))
 (let ((?x1144 (* (- 383) ?x267)))
 (let ((?x1140 (* 1016 r)))
 (let ((?x623 (+ ?x1140 ?x1144 ?x821 (* 24 (* q q r d)) ?x1145 ?x754 (* (- 192) (* q r d)) (* 512 ?x1336))))
 (let ((?x983 (* q r d)))
 (let ((?x1098 (* (- 48) ?x983)))
 (let ((?x887 (* 24 ?x530)))
 (let ((?x1385 (* (- 95) ?x267)))
 (let ((?x886 (* 124 r)))
 (let ((?x1278 (+ ?x886 ?x1385 ?x821 (* 12 (* q q r d)) ?x887 ?x754 ?x1098 (* 64 ?x1336))))
 (let ((?x600 (* (- 24) ?x530)))
 (let ((?x1379 (* (- 124) r)))
 (let ((?x843 (+ ?x1379 ?x1385 ?x821 (* (- 12) (* q q r d)) ?x600 ?x754 ?x1098 (* (- 64) ?x1336))))
 (let (($x396 (or (not (= (* ?x843 ?x1039) 0)) (not (= (* ?x1278 ?x1039) 0)) (not (= (* ?x623 ?x1039) 0)) $x1308)))
 (let (($x891 (= ?x1039 0)))
 (and $x891 $x396))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x681 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1336 (* r d)))
 (let ((?x1367 (* (- 4) ?x1336)))
 (let ((?x1333 (* q d d)))
 (let ((?x1335 (* (- 2) (* q d))))
 (let ((?x1136 (* 16 d)))
 (let ((?x1064 (* 4 (* x d))))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x187 (* 8 r)))
 (let ((?x1406 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 (* (- 8) (* d 2)) ?x1136 ?x1335 ?x1333 ?x1367)))
 (let ((?x754 (* (- 2) (* q q q r))))
 (let ((?x530 (* q q r)))
 (let ((?x1145 (* 48 ?x530)))
 (let ((?x821 (* (- 1) (* q q q r d))))
 (let ((?x267 (* q r)))
 (let ((?x1144 (* (- 383) ?x267)))
 (let ((?x1140 (* 1016 r)))
 (let ((?x623 (+ ?x1140 ?x1144 ?x821 (* 24 (* q q r d)) ?x1145 ?x754 (* (- 192) (* q r d)) (* 512 ?x1336))))
 (let ((?x1039 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 ?x1335 ?x1333 ?x1367)))
 (let (($x1308 (not (= (* (+ ?x267 ?x821 ?x754) ?x1039) 0))))
 (let ((?x872 (* 8 d)))
 (let ((?x734 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 (* (- 4) (* d 2)) ?x872 ?x1335 ?x1333 ?x1367)))
 (let ((?x983 (* q r d)))
 (let ((?x1098 (* (- 48) ?x983)))
 (let ((?x887 (* 24 ?x530)))
 (let ((?x1385 (* (- 95) ?x267)))
 (let ((?x886 (* 124 r)))
 (let ((?x1278 (+ ?x886 ?x1385 ?x821 (* 12 (* q q r d)) ?x887 ?x754 ?x1098 (* 64 ?x1336))))
 (let ((?x1377 (* 2 (* d 4))))
 (let ((?x1370 (* (- 8) d)))
 (let ((?x600 (* (- 24) ?x530)))
 (let ((?x1379 (* (- 124) r)))
 (let ((?x843 (+ ?x1379 ?x1385 ?x821 (* (- 12) (* q q r d)) ?x600 ?x754 ?x1098 (* (- 64) ?x1336))))
 (let ((?x588 (* ?x843 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 ?x1370 ?x1335 ?x1333 ?x1367 ?x1377))))
 (let (($x634 (or (not (= ?x588 0)) (not (= (* ?x1278 ?x734) 0)) $x1308 (not (= (* ?x623 ?x1406) 0)))))
 (let (($x891 (= ?x1039 0)))
 (and $x891 $x634)))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x417 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1336 (* r d)))
 (let ((?x1367 (* (- 4) ?x1336)))
 (let ((?x1333 (* q d d)))
 (let ((?x1335 (* (- 2) (* q d))))
 (let ((?x1064 (* 4 (* x d))))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x187 (* 8 r)))
 (let ((?x1039 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 ?x1335 ?x1333 ?x1367)))
 (let ((?x754 (* (- 2) (* q q q r))))
 (let ((?x821 (* (- 1) (* q q q r d))))
 (let ((?x267 (* q r)))
 (let (($x1308 (not (= (* (+ ?x267 ?x821 ?x754) ?x1039) 0))))
 (let ((?x530 (* q q r)))
 (let ((?x1145 (* 48 ?x530)))
 (let ((?x1144 (* (- 383) ?x267)))
 (let ((?x1140 (* 1016 r)))
 (let ((?x623 (+ ?x1140 ?x1144 ?x821 (* 24 (* q q r d)) ?x1145 ?x754 (* (- 192) (* q r d)) (* 512 ?x1336))))
 (let ((?x983 (* q r d)))
 (let ((?x1098 (* (- 48) ?x983)))
 (let ((?x887 (* 24 ?x530)))
 (let ((?x1385 (* (- 95) ?x267)))
 (let ((?x886 (* 124 r)))
 (let ((?x1278 (+ ?x886 ?x1385 ?x821 (* 12 (* q q r d)) ?x887 ?x754 ?x1098 (* 64 ?x1336))))
 (let ((?x600 (* (- 24) ?x530)))
 (let ((?x1379 (* (- 124) r)))
 (let ((?x843 (+ ?x1379 ?x1385 ?x821 (* (- 12) (* q q r d)) ?x600 ?x754 ?x1098 (* (- 64) ?x1336))))
 (let (($x396 (or (not (= (* ?x843 ?x1039) 0)) (not (= (* ?x1278 ?x1039) 0)) (not (= (* ?x623 ?x1039) 0)) $x1308)))
 (let (($x891 (= ?x1039 0)))
 (let (($x759 (and $x891 $x396)))
 (let ((?x1136 (* 16 d)))
 (let ((?x1406 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 (* (- 8) (* d 2)) ?x1136 ?x1335 ?x1333 ?x1367)))
 (let ((?x872 (* 8 d)))
 (let ((?x734 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 (* (- 4) (* d 2)) ?x872 ?x1335 ?x1333 ?x1367)))
 (let ((?x1377 (* 2 (* d 4))))
 (let ((?x1370 (* (- 8) d)))
 (let ((?x588 (* ?x843 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 ?x1370 ?x1335 ?x1333 ?x1367 ?x1377))))
 (let (($x634 (or (not (= ?x588 0)) (not (= (* ?x1278 ?x734) 0)) $x1308 (not (= (* ?x623 ?x1406) 0)))))
 (let (($x695 (and $x891 $x634)))
 (rewrite (= $x695 $x759)))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1097 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x800 (* 4 (* d00 r00))))
 (let ((?x377 (+ 2 d)))
 (let ((?x392 (* ?x377 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x1084 (* 4 (* ?x377 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x547 (* (- 8) x)))
 (let ((?x403 (* 16 r)))
 (let ((?x973 (+ (- 32) ?x403 ?x547 ?x30 (* (- 16) d) ?x158 ?x1084 ?x190 ?x206 (* (+ (- 8) q) ?x377 ?x377) (* (- 2) (* (+ (- 8) q) ?x377)) ?x256 (* (- 4) ?x392) ?x800)))
 (let ((?x369 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x377 r))))
 (let (($x987 (not (= (* (+ ?x369 (* (+ (- 8) q) r)) ?x973) 0))))
 (let ((?x919 (+ ?x403 ?x547 ?x30 ?x158 ?x1084 ?x190 ?x206 (* ?x377 ?x377 q) (* (- 2) (* ?x377 q)) ?x256 (* (- 4) (* ?x377 (+ (* 2 r) (* (- 1) x) q))) ?x800)))
 (let (($x918 (= (* (+ (* (- 1) (* ?x377 r q q q)) (* r q)) ?x919) 0)))
 (let (($x908 (not $x918)))
 (let ((?x326 (* ?x377 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x1370 (* (- 8) d)))
 (let ((?x328 (+ (- 16) ?x403 ?x547 ?x30 ?x1370 ?x158 ?x1084 ?x190 ?x206 (* (+ (- 4) q) ?x377 ?x377) (* (- 2) (* (+ (- 4) q) ?x377)) ?x256 (* (- 4) ?x326) ?x800)))
 (let ((?x849 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) ?x377 r))))
 (let (($x367 (not (= (* (+ ?x849 (* (+ (- 4) q) r)) ?x328) 0))))
 (let ((?x254 (* (- 4) (* ?x377 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x872 (* 8 d)))
 (let ((?x675 (+ 16 ?x403 ?x547 ?x30 ?x872 ?x158 ?x1084 ?x190 ?x206 (* ?x377 ?x377 (+ 4 q)) (* (- 2) (* ?x377 (+ 4 q))) ?x256 ?x254 ?x800)))
 (let ((?x1077 (* (- 1) (* ?x377 (+ 4 q) (+ 4 q) (+ 4 q) r))))
 (let (($x274 (not (= (* (+ ?x1077 (* (+ 4 q) r)) ?x675) 0))))
 (let ((?x1064 (* 4 (* x d))))
 (let ((?x187 (* 8 r)))
 (let ((?x1074 (+ ?x187 ?x158 ?x1064 ?x190 ?x206 (* d d q) (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x800)))
 (let (($x1050 (= ?x1074 0)))
 (and $x1050 (or $x274 $x367 $x908 $x987)))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x680 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1336 (* r d)))
 (let ((?x1367 (* (- 4) ?x1336)))
 (let ((?x1333 (* q d d)))
 (let ((?x1335 (* (- 2) (* q d))))
 (let ((?x1136 (* 16 d)))
 (let ((?x1064 (* 4 (* x d))))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x187 (* 8 r)))
 (let ((?x1406 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 (* (- 8) (* d 2)) ?x1136 ?x1335 ?x1333 ?x1367)))
 (let ((?x754 (* (- 2) (* q q q r))))
 (let ((?x530 (* q q r)))
 (let ((?x1145 (* 48 ?x530)))
 (let ((?x821 (* (- 1) (* q q q r d))))
 (let ((?x267 (* q r)))
 (let ((?x1144 (* (- 383) ?x267)))
 (let ((?x1140 (* 1016 r)))
 (let ((?x623 (+ ?x1140 ?x1144 ?x821 (* 24 (* q q r d)) ?x1145 ?x754 (* (- 192) (* q r d)) (* 512 ?x1336))))
 (let ((?x1039 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 ?x1335 ?x1333 ?x1367)))
 (let (($x1308 (not (= (* (+ ?x267 ?x821 ?x754) ?x1039) 0))))
 (let ((?x872 (* 8 d)))
 (let ((?x734 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 (* (- 4) (* d 2)) ?x872 ?x1335 ?x1333 ?x1367)))
 (let ((?x983 (* q r d)))
 (let ((?x1098 (* (- 48) ?x983)))
 (let ((?x887 (* 24 ?x530)))
 (let ((?x1385 (* (- 95) ?x267)))
 (let ((?x886 (* 124 r)))
 (let ((?x1278 (+ ?x886 ?x1385 ?x821 (* 12 (* q q r d)) ?x887 ?x754 ?x1098 (* 64 ?x1336))))
 (let ((?x1377 (* 2 (* d 4))))
 (let ((?x1370 (* (- 8) d)))
 (let ((?x600 (* (- 24) ?x530)))
 (let ((?x1379 (* (- 124) r)))
 (let ((?x843 (+ ?x1379 ?x1385 ?x821 (* (- 12) (* q q r d)) ?x600 ?x754 ?x1098 (* (- 64) ?x1336))))
 (let ((?x588 (* ?x843 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1064 ?x1370 ?x1335 ?x1333 ?x1367 ?x1377))))
 (let (($x634 (or (not (= ?x588 0)) (not (= (* ?x1278 ?x734) 0)) $x1308 (not (= (* ?x623 ?x1406) 0)))))
 (let (($x891 (= ?x1039 0)))
 (let (($x695 (and $x891 $x634)))
 (let ((?x800 (* 4 (* d00 r00))))
 (let ((?x377 (+ 2 d)))
 (let ((?x392 (* ?x377 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x1084 (* 4 (* ?x377 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x547 (* (- 8) x)))
 (let ((?x403 (* 16 r)))
 (let ((?x973 (+ (- 32) ?x403 ?x547 ?x30 (* (- 16) d) ?x158 ?x1084 ?x190 ?x206 (* (+ (- 8) q) ?x377 ?x377) (* (- 2) (* (+ (- 8) q) ?x377)) ?x256 (* (- 4) ?x392) ?x800)))
 (let ((?x369 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x377 r))))
 (let (($x987 (not (= (* (+ ?x369 (* (+ (- 8) q) r)) ?x973) 0))))
 (let ((?x919 (+ ?x403 ?x547 ?x30 ?x158 ?x1084 ?x190 ?x206 (* ?x377 ?x377 q) (* (- 2) (* ?x377 q)) ?x256 (* (- 4) (* ?x377 (+ (* 2 r) (* (- 1) x) q))) ?x800)))
 (let (($x918 (= (* (+ (* (- 1) (* ?x377 r q q q)) (* r q)) ?x919) 0)))
 (let (($x908 (not $x918)))
 (let ((?x326 (* ?x377 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x328 (+ (- 16) ?x403 ?x547 ?x30 ?x1370 ?x158 ?x1084 ?x190 ?x206 (* (+ (- 4) q) ?x377 ?x377) (* (- 2) (* (+ (- 4) q) ?x377)) ?x256 (* (- 4) ?x326) ?x800)))
 (let ((?x849 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) ?x377 r))))
 (let (($x367 (not (= (* (+ ?x849 (* (+ (- 4) q) r)) ?x328) 0))))
 (let ((?x254 (* (- 4) (* ?x377 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x675 (+ 16 ?x403 ?x547 ?x30 ?x872 ?x158 ?x1084 ?x190 ?x206 (* ?x377 ?x377 (+ 4 q)) (* (- 2) (* ?x377 (+ 4 q))) ?x256 ?x254 ?x800)))
 (let ((?x1077 (* (- 1) (* ?x377 (+ 4 q) (+ 4 q) (+ 4 q) r))))
 (let (($x274 (not (= (* (+ ?x1077 (* (+ 4 q) r)) ?x675) 0))))
 (let ((?x1074 (+ ?x187 ?x158 ?x1064 ?x190 ?x206 (* d d q) (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x800)))
 (let (($x1050 (= ?x1074 0)))
 (let (($x511 (and $x1050 (or $x274 $x367 $x908 $x987))))
 (rewrite (= $x511 $x695)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x990 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x800 (* 4 (* d00 r00))))
 (let ((?x377 (+ 2 d)))
 (let ((?x392 (* ?x377 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x1084 (* 4 (* ?x377 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x547 (* (- 8) x)))
 (let ((?x403 (* 16 r)))
 (let ((?x973 (+ (- 32) ?x403 ?x547 ?x30 (* (- 16) d) ?x158 ?x1084 ?x190 ?x206 (* (+ (- 8) q) ?x377 ?x377) (* (- 2) (* (+ (- 8) q) ?x377)) ?x256 (* (- 4) ?x392) ?x800)))
 (let ((?x369 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x377 r))))
 (let (($x987 (not (= (* (+ ?x369 (* (+ (- 8) q) r)) ?x973) 0))))
 (let ((?x326 (* ?x377 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x1370 (* (- 8) d)))
 (let ((?x328 (+ (- 16) ?x403 ?x547 ?x30 ?x1370 ?x158 ?x1084 ?x190 ?x206 (* (+ (- 4) q) ?x377 ?x377) (* (- 2) (* (+ (- 4) q) ?x377)) ?x256 (* (- 4) ?x326) ?x800)))
 (let ((?x849 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) ?x377 r))))
 (let (($x367 (not (= (* (+ ?x849 (* (+ (- 4) q) r)) ?x328) 0))))
 (let ((?x919 (+ ?x403 ?x547 ?x30 ?x158 ?x1084 ?x190 ?x206 (* ?x377 ?x377 q) (* (- 2) (* ?x377 q)) ?x256 (* (- 4) (* ?x377 (+ (* 2 r) (* (- 1) x) q))) ?x800)))
 (let (($x918 (= (* (+ (* (- 1) (* ?x377 r q q q)) (* r q)) ?x919) 0)))
 (let (($x908 (not $x918)))
 (let ((?x254 (* (- 4) (* ?x377 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x872 (* 8 d)))
 (let ((?x675 (+ 16 ?x403 ?x547 ?x30 ?x872 ?x158 ?x1084 ?x190 ?x206 (* ?x377 ?x377 (+ 4 q)) (* (- 2) (* ?x377 (+ 4 q))) ?x256 ?x254 ?x800)))
 (let ((?x1077 (* (- 1) (* ?x377 (+ 4 q) (+ 4 q) (+ 4 q) r))))
 (let (($x274 (not (= (* (+ ?x1077 (* (+ 4 q) r)) ?x675) 0))))
 (let ((?x1064 (* 4 (* x d))))
 (let ((?x187 (* 8 r)))
 (let ((?x1074 (+ ?x187 ?x158 ?x1064 ?x190 ?x206 (* d d q) (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x800)))
 (let (($x1050 (= ?x1074 0)))
 (and $x1050 (or $x274 $x908 $x367 $x987)))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x508 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x800 (* 4 (* d00 r00))))
 (let ((?x377 (+ 2 d)))
 (let ((?x392 (* ?x377 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x1084 (* 4 (* ?x377 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x547 (* (- 8) x)))
 (let ((?x403 (* 16 r)))
 (let ((?x973 (+ (- 32) ?x403 ?x547 ?x30 (* (- 16) d) ?x158 ?x1084 ?x190 ?x206 (* (+ (- 8) q) ?x377 ?x377) (* (- 2) (* (+ (- 8) q) ?x377)) ?x256 (* (- 4) ?x392) ?x800)))
 (let ((?x369 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x377 r))))
 (let (($x987 (not (= (* (+ ?x369 (* (+ (- 8) q) r)) ?x973) 0))))
 (let ((?x919 (+ ?x403 ?x547 ?x30 ?x158 ?x1084 ?x190 ?x206 (* ?x377 ?x377 q) (* (- 2) (* ?x377 q)) ?x256 (* (- 4) (* ?x377 (+ (* 2 r) (* (- 1) x) q))) ?x800)))
 (let (($x918 (= (* (+ (* (- 1) (* ?x377 r q q q)) (* r q)) ?x919) 0)))
 (let (($x908 (not $x918)))
 (let ((?x326 (* ?x377 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x1370 (* (- 8) d)))
 (let ((?x328 (+ (- 16) ?x403 ?x547 ?x30 ?x1370 ?x158 ?x1084 ?x190 ?x206 (* (+ (- 4) q) ?x377 ?x377) (* (- 2) (* (+ (- 4) q) ?x377)) ?x256 (* (- 4) ?x326) ?x800)))
 (let ((?x849 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) ?x377 r))))
 (let (($x367 (not (= (* (+ ?x849 (* (+ (- 4) q) r)) ?x328) 0))))
 (let ((?x254 (* (- 4) (* ?x377 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x872 (* 8 d)))
 (let ((?x675 (+ 16 ?x403 ?x547 ?x30 ?x872 ?x158 ?x1084 ?x190 ?x206 (* ?x377 ?x377 (+ 4 q)) (* (- 2) (* ?x377 (+ 4 q))) ?x256 ?x254 ?x800)))
 (let ((?x1077 (* (- 1) (* ?x377 (+ 4 q) (+ 4 q) (+ 4 q) r))))
 (let (($x274 (not (= (* (+ ?x1077 (* (+ 4 q) r)) ?x675) 0))))
 (let ((?x1064 (* 4 (* x d))))
 (let ((?x187 (* 8 r)))
 (let ((?x1074 (+ ?x187 ?x158 ?x1064 ?x190 ?x206 (* d d q) (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x800)))
 (let (($x1050 (= ?x1074 0)))
 (let (($x511 (and $x1050 (or $x274 $x367 $x908 $x987))))
 (let (($x989 (and $x1050 (or $x274 $x908 $x367 $x987))))
 (rewrite (= $x989 $x511)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x151 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x134 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x77 (- 1)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x128 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x132 (- (+ (- (* 8 ?x128) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x139 (+ (- (+ (- ?x132 ?x41) (* ?x62 ?x62 ?x134)) (* 2 ?x62 ?x134)) ?x49)))
 (let ((?x146 (* (+ (- ?x139 (* 4 ?x62 ?x128)) ?x53) (+ (* ?x77 ?x62 ?x134 ?x134 ?x134 r) (* ?x134 r)))))
 (let ((?x122 (+ (* ?x77 ?x62 (- q 4) (- q 4) (- q 4) r) (* (- q 4) r))))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x32 (* 8 r00)))
 (let ((?x107 (- (* 8 (- (- (+ (- (* 2 r) x) q) d) 2)) ?x32)))
 (let ((?x115 (- (+ (- (- (+ ?x107 ?x63) ?x39) ?x41) (* ?x62 ?x62 (- q 4))) (* 2 ?x62 (- q 4)))))
 (let ((?x118 (- (+ ?x115 ?x49) (* 4 ?x62 (- (- (+ (- (* 2 r) x) q) d) 2)))))
 (let ((?x88 (- (+ (- (* 8 (+ (- (* 2 r) x) q)) ?x32) ?x63) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x101 (* (+ (- ?x94 (* 4 ?x62 (+ (- (* 2 r) x) q))) ?x53) (+ (* ?x77 ?x62 q q q r) (* q r)))))
 (let ((?x80 (+ (* ?x77 ?x62 (+ q 4) (+ q 4) (+ q 4) r) (* (+ q 4) r))))
 (let ((?x64 (+ (- (* 8 (+ (- (* 2 r) x) q d 2)) ?x32) ?x63)))
 (let ((?x71 (- (+ (- (- ?x64 ?x39) ?x41) (* ?x62 ?x62 (+ q 4))) (* 2 ?x62 (+ q 4)))))
 (let ((?x74 (- (+ ?x71 ?x49) (* 4 ?x62 (+ (- (* 2 r) x) q d 2)))))
 (let (($x149 (or (not (= (* (+ ?x74 ?x53) ?x80) 0)) (not (= ?x101 0)) (not (= (* (+ ?x118 ?x53) ?x122) 0)) (not (= ?x146 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x45 (+ (- (- (+ (- (* 8 r) ?x32) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (and (= ?x54 0) $x149))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x493 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x800 (* 4 (* d00 r00))))
 (let ((?x584 (+ 2 d)))
 (let ((?x998 (* ?x584 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x297 (* 4 (* ?x584 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x487 (* 8 q)))
 (let ((?x547 (* (- 8) x)))
 (let ((?x531 (* 16 r)))
 (let ((?x1251 (+ (- 32) ?x531 ?x547 ?x487 (* (- 16) d) ?x158 ?x297 ?x190 ?x206 (* (+ (- 8) q) ?x584 ?x584) (* (- 2) (* (+ (- 8) q) ?x584)) ?x256 (* (- 4) ?x998) ?x800)))
 (let ((?x1261 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x584 r))))
 (let ((?x745 (* ?x584 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x448 (* (- 8) d)))
 (let ((?x901 (+ (- 16) ?x531 ?x547 ?x487 ?x448 ?x158 ?x297 ?x190 ?x206 (* (+ (- 4) q) ?x584 ?x584) (* (- 2) (* (+ (- 4) q) ?x584)) ?x256 (* (- 4) ?x745) ?x800)))
 (let ((?x912 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) ?x584 r))))
 (let ((?x365 (+ ?x531 ?x547 ?x487 ?x158 ?x297 ?x190 ?x206 (* ?x584 ?x584 q) (* (- 2) (* ?x584 q)) ?x256 (* (- 4) (* ?x584 (+ (* 2 r) (* (- 1) x) q))) ?x800)))
 (let (($x1023 (= (* (+ (* (- 1) (* ?x584 r q q q)) (* r q)) ?x365) 0)))
 (let ((?x458 (* (- 4) (* ?x584 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x187 (* 8 d)))
 (let ((?x815 (+ 16 ?x531 ?x547 ?x487 ?x187 ?x158 ?x297 ?x190 ?x206 (* ?x584 ?x584 (+ 4 q)) (* (- 2) (* ?x584 (+ 4 q))) ?x256 ?x458 ?x800)))
 (let ((?x703 (* (- 1) (* ?x584 (+ 4 q) (+ 4 q) (+ 4 q) r))))
 (let (($x1271 (or (not (= (* (+ ?x703 (* (+ 4 q) r)) ?x815) 0)) (not $x1023) (not (= (* (+ ?x912 (* (+ (- 4) q) r)) ?x901) 0)) (not (= (* (+ ?x1261 (* (+ (- 8) q) r)) ?x1251) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1127 (+ ?x30 ?x158 (* 4 (* x d)) ?x190 ?x206 ?x44 (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x800)))
 (and (= ?x1127 0) $x1271))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x516 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x800 (* 4 (* d00 r00))))
 (let ((?x584 (+ 2 d)))
 (let ((?x998 (* ?x584 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x297 (* 4 (* ?x584 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x487 (* 8 q)))
 (let ((?x547 (* (- 8) x)))
 (let ((?x531 (* 16 r)))
 (let ((?x1251 (+ (- 32) ?x531 ?x547 ?x487 (* (- 16) d) ?x158 ?x297 ?x190 ?x206 (* (+ (- 8) q) ?x584 ?x584) (* (- 2) (* (+ (- 8) q) ?x584)) ?x256 (* (- 4) ?x998) ?x800)))
 (let ((?x1261 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x584 r))))
 (let ((?x745 (* ?x584 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x448 (* (- 8) d)))
 (let ((?x901 (+ (- 16) ?x531 ?x547 ?x487 ?x448 ?x158 ?x297 ?x190 ?x206 (* (+ (- 4) q) ?x584 ?x584) (* (- 2) (* (+ (- 4) q) ?x584)) ?x256 (* (- 4) ?x745) ?x800)))
 (let ((?x912 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) ?x584 r))))
 (let ((?x365 (+ ?x531 ?x547 ?x487 ?x158 ?x297 ?x190 ?x206 (* ?x584 ?x584 q) (* (- 2) (* ?x584 q)) ?x256 (* (- 4) (* ?x584 (+ (* 2 r) (* (- 1) x) q))) ?x800)))
 (let (($x1023 (= (* (+ (* (- 1) (* ?x584 r q q q)) (* r q)) ?x365) 0)))
 (let ((?x458 (* (- 4) (* ?x584 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x187 (* 8 d)))
 (let ((?x815 (+ 16 ?x531 ?x547 ?x487 ?x187 ?x158 ?x297 ?x190 ?x206 (* ?x584 ?x584 (+ 4 q)) (* (- 2) (* ?x584 (+ 4 q))) ?x256 ?x458 ?x800)))
 (let ((?x703 (* (- 1) (* ?x584 (+ 4 q) (+ 4 q) (+ 4 q) r))))
 (let (($x1271 (or (not (= (* (+ ?x703 (* (+ 4 q) r)) ?x815) 0)) (not $x1023) (not (= (* (+ ?x912 (* (+ (- 4) q) r)) ?x901) 0)) (not (= (* (+ ?x1261 (* (+ (- 8) q) r)) ?x1251) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1127 (+ ?x30 ?x158 (* 4 (* x d)) ?x190 ?x206 ?x44 (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x800)))
 (let (($x657 (and (= ?x1127 0) $x1271)))
 (let ((?x134 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x77 (- 1)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x128 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x132 (- (+ (- (* 8 ?x128) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x139 (+ (- (+ (- ?x132 ?x41) (* ?x62 ?x62 ?x134)) (* 2 ?x62 ?x134)) ?x49)))
 (let ((?x146 (* (+ (- ?x139 (* 4 ?x62 ?x128)) ?x53) (+ (* ?x77 ?x62 ?x134 ?x134 ?x134 r) (* ?x134 r)))))
 (let ((?x122 (+ (* ?x77 ?x62 (- q 4) (- q 4) (- q 4) r) (* (- q 4) r))))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x32 (* 8 r00)))
 (let ((?x107 (- (* 8 (- (- (+ (- (* 2 r) x) q) d) 2)) ?x32)))
 (let ((?x115 (- (+ (- (- (+ ?x107 ?x63) ?x39) ?x41) (* ?x62 ?x62 (- q 4))) (* 2 ?x62 (- q 4)))))
 (let ((?x118 (- (+ ?x115 ?x49) (* 4 ?x62 (- (- (+ (- (* 2 r) x) q) d) 2)))))
 (let ((?x88 (- (+ (- (* 8 (+ (- (* 2 r) x) q)) ?x32) ?x63) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x101 (* (+ (- ?x94 (* 4 ?x62 (+ (- (* 2 r) x) q))) ?x53) (+ (* ?x77 ?x62 q q q r) (* q r)))))
 (let ((?x80 (+ (* ?x77 ?x62 (+ q 4) (+ q 4) (+ q 4) r) (* (+ q 4) r))))
 (let ((?x64 (+ (- (* 8 (+ (- (* 2 r) x) q d 2)) ?x32) ?x63)))
 (let ((?x71 (- (+ (- (- ?x64 ?x39) ?x41) (* ?x62 ?x62 (+ q 4))) (* 2 ?x62 (+ q 4)))))
 (let ((?x74 (- (+ ?x71 ?x49) (* 4 ?x62 (+ (- (* 2 r) x) q d 2)))))
 (let (($x149 (or (not (= (* (+ ?x74 ?x53) ?x80) 0)) (not (= ?x101 0)) (not (= (* (+ ?x118 ?x53) ?x122) 0)) (not (= ?x146 0)))))
 (let ((?x48 (- (+ (- (- (+ (- ?x30 ?x32) (* 4 d x)) ?x39) ?x41) ?x44) (* 2 d q))))
 (let (($x150 (and (= (+ (- (+ ?x48 ?x49) (* 4 d r)) ?x53) 0) $x149)))
 (rewrite (= $x150 $x657))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x929 (trans (quant-intro (proof-bind ?x516) (= $x151 $x493)) (elim-unused (= $x493 $x990)) (= $x151 $x990))))
 (let ((@x27 (asserted $x151)))
 (let ((@x1089 (mp (mp @x27 @x929 $x990) (quant-intro (proof-bind ?x508) (= $x990 $x1097)) $x1097)))
 (let ((@x536 (mp (mp @x1089 (rewrite (= $x1097 $x1097)) $x1097) (quant-intro (proof-bind ?x680) (= $x1097 $x681)) $x681)))
 (let ((@x818 (mp~ (mp @x536 (quant-intro (proof-bind ?x417) (= $x681 $x1128)) $x1128) (sk (~ $x1128 $x571)) $x571)))
 (let ((@x212 (mp @x818 (rewrite (= $x571 $x1363)) $x1363)))
 (let ((@x1359 (and-elim @x212 $x569)))
 (let ((@x435 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x569) $x413)) @x1359 $x413)))
 (let (($x399 (<= ?x171 0)))
 (let ((@x302 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x569) $x399)) @x1359 $x399)))
 (let (($x292 (not (<= ?x560 0))))
 (let (($x416 (<= ?x428 0)))
 (let (($x1200 (>= ?x428 0)))
 (let ((@x741 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x797 (not $x416) (not $x1200))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1200)) @x302 @x435 false) $x1200) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x416)) @x302 @x435 false) $x416) $x797)))
 (let (($x595 (>= ?x257 0)))
 (let (($x1217 (<= ?x257 0)))
 (let ((@x1317 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x462 (not $x1217) (not $x595))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1217)) @x302 @x435 false) $x1217) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x595)) @x302 @x435 false) $x595) $x462)))
 (let (($x598 (>= ?x467 0)))
 (let (($x1232 (<= ?x467 0)))
 (let ((@x1234 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1236 (not $x1232) (not $x598))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1232)) @x302 @x435 false) $x1232) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x598)) @x302 @x435 false) $x598) $x1236)))
 (let ((@x291 (unit-resolution (unit-resolution (and-elim @x212 $x261) @x1234 @x1317 (or $x432 $x1366)) @x741 $x1366)))
 (let (($x1228 (>= ?x560 0)))
 (let ((@x1063 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1362 $x292 (not $x1228))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1228)) @x302 @x435 false) $x1228) @x291 $x292)))
 ((_ th-lemma arith farkas 1 1 1) @x1063 @x302 @x435 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 12
 :arith-assert-diseq        7
 :arith-assert-lower        38
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          13
 :arith-fixed-eqs           12
 :arith-grobner             8
 :arith-max-min             464
 :arith-nonlinear-horner    36
 :arith-num-rows            6
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 54
 :arith-tableau-max-rows    6
 :conflicts                 8
 :decisions                 24
 :del-clause                39
 :final-checks              8
 :max-memory                3.73
 :memory                    3.22
 :mk-bool-var               45
 :mk-clause                 52
 :num-allocs                2018221
 :num-checks                1
 :propagations              36
 :rlimit-count              29480
 :time                      0.02
 :total-time                0.03)
