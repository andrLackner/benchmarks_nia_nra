unsat
((set-logic NIA)
(declare-fun x!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x2136 (+ y00 x00 (* (- 1) y!0) (* (- 1) x!1))))
 (let (($x2201 (<= ?x2136 0)))
 (let (($x2137 (= ?x2136 0)))
 (let ((?x2226 (* y!0 y!0 y!0 y!0 x!1)))
 (let ((?x2263 (* (- 1) (* x00 y!0 y!0 x!1 x!1))))
 (let ((?x2262 (* (- 1) (* y00 y!0 y!0 y!0 x!1))))
 (let ((?x1547 (* (- 1) (* y!0 y!0 x!1))))
 (let ((?x2156 (* y00 x!1)))
 (let ((?x2260 (* (- 1) (* y00 y!0 y!0 x!1 x!1))))
 (let ((?x2148 (* y00 y!0 y!0 x!1)))
 (let ((?x1068 (* 2 (* y00 y!0 y!0))))
 (let ((?x2107 (* x!1 x!1 x!1)))
 (let ((?x2105 (* x!1 x!1)))
 (let ((?x2106 (* (- 1) ?x2105)))
 (let ((?x2093 (* y!0 y!0)))
 (let ((?x323 (* 3 ?x2093)))
 (let ((?x2258 (* (- 2) x!1)))
 (let ((?x641 (* (- 2) y!0)))
 (let ((?x2257 (* (- 1) (* y00 y!0 x!1))))
 (let ((?x1385 (* y!0 y!0 y!0)))
 (let ((?x2256 (* (- 2) ?x1385)))
 (let ((?x1181 (* x00 y!0 y!0 x!1)))
 (let ((?x2252 (* (- 1) (* x00 y!0 x!1))))
 (let ((?x2251 (* 2 (* y!0 y!0 y!0 x!1 x!1))))
 (let ((?x2250 (* (- 1) (* x00 x!1 x!1))))
 (let ((?x2249 (* 2 (* y!0 x!1 x!1))))
 (let ((?x773 (* x00 x!1)))
 (let ((?x2246 (* 2 (* x00 y!0 y!0))))
 (let ((?x2245 (* (- 1) (* y00 x!1 x!1))))
 (let ((?x623 (* y!0 y!0 x!1 x!1 x!1)))
 (let ((?x434 (* y!0 y!0 y!0 y!0)))
 (let ((?x2242 (* (- 1) (* x00 y!0 y!0 y!0 x!1))))
 (let ((?x1156 (* 2 x00)))
 (let ((?x1072 (* 2 y00)))
 (let ((?x2273 (+ ?x1072 ?x1156 ?x2242 ?x434 (* (- 3) (* x00 y!0)) ?x623 (* 2 (* y!0 x!1)) ?x2245 ?x2246 ?x773 (* 2 (* y00 y!0 x!1 x!1)) ?x2249 ?x2250 (* (- 1) (* x00 y!0 y!0 y!0)) ?x2251 ?x2252 ?x1181 (* 2 (* x00 y!0 x!1 x!1)) (* (- 2) (* y!0 x!1 x!1 x!1)) ?x2256 ?x2257 ?x641 ?x2258 ?x323 ?x2106 ?x2107 (* (- 3) (* y00 y!0)) ?x1068 ?x2148 ?x2260 ?x2156 ?x1547 (* (- 1) (* y00 y!0 y!0 y!0)) ?x2262 ?x2263 (* (- 3) (* y!0 y!0 x!1 x!1)) ?x2226)))
 (let (($x2275 (= ?x2273 0)))
 (let (($x2278 (not $x2275)))
 (let ((?x2203 (* y00 y!0 y!0 y!0)))
 (let ((?x2114 (* (- 3) ?x2093)))
 (let ((?x1045 (* x00 y!0 y!0 y!0)))
 (let ((?x2119 (* (- 1) ?x434)))
 (let ((?x2265 (+ ?x1072 ?x1156 ?x2242 ?x2119 (* 3 (* x00 y!0)) ?x623 (* (- 2) (* y!0 x!1)) ?x2245 ?x2246 (* (- 1) ?x773) (* (- 2) (* y00 y!0 x!1 x!1)) ?x2249 ?x2250 ?x1045 ?x2251 ?x2252 (* (- 1) ?x1181) (* (- 2) (* x00 y!0 x!1 x!1)) (* 2 (* y!0 x!1 x!1 x!1)) ?x2256 ?x2257 ?x641 ?x2258 ?x2114 ?x2105 ?x2107 (* 3 (* y00 y!0)) ?x1068 (* (- 1) ?x2148) ?x2260 (* (- 1) ?x2156) ?x1547 ?x2203 ?x2262 ?x2263 (* 3 (* y!0 y!0 x!1 x!1)) ?x2226)))
 (let (($x2267 (= ?x2265 0)))
 (let (($x2144 (or (not $x2267) $x2278)))
 (let (($x1133 (and $x2137 $x2144)))
 (let ((?x493 (* (- 1) (* x!1 y!0 y!0 y!0 y!0))))
 (let ((?x196 (* (- 1) ?x2107)))
 (let ((?x2104 (* (- 1) (* x!1 x!1 x!1 y!0 y!0))))
 (let ((?x2100 (* x!1 x!1 y!0 y!0 x00)))
 (let ((?x2097 (* x!1 x!1 x00)))
 (let ((?x2096 (* (- 2) (* x!1 x!1 y!0))))
 (let ((?x2094 (* x!1 y!0 y!0 y!0 y00)))
 (let ((?x162 (* y!0 y!0 y!0 y00)))
 (let ((?x158 (* x!1 y!0 y!0)))
 (let ((?x1393 (* (- 2) (* x!1 x!1 y!0 y!0 y!0))))
 (let ((?x1429 (* 2 ?x1385)))
 (let ((?x1298 (* y!0 y!0 y!0 x00)))
 (let ((?x2090 (* (- 2) (* y!0 y!0 x00))))
 (let ((?x2089 (* x!1 x!1 y00)))
 (let ((?x2086 (* x!1 y!0 y!0 y!0 x00)))
 (let ((?x2084 (* x!1 y!0 x00)))
 (let ((?x2082 (* x!1 y!0 y00)))
 (let ((?x2080 (* x!1 x!1 y!0 y!0 y00)))
 (let ((?x2078 (* (- 2) (* y!0 y!0 y00))))
 (let ((?x1120 (* (- 2) x00)))
 (let ((?x1041 (* (- 2) y00)))
 (let ((?x2075 (* 2 y!0)))
 (let ((?x2074 (* 2 x!1)))
 (let ((?x2120 (+ ?x2074 ?x2075 ?x1041 ?x1120 (* 3 (* y!0 y00)) ?x2078 (* (- 1) (* x!1 y!0 y!0 y00)) ?x2080 (* (- 1) (* x!1 y00)) ?x2082 (* (- 1) (* x!1 x00)) ?x2084 (* (- 1) (* x!1 y!0 y!0 x00)) ?x2086 (* 3 (* y!0 x00)) ?x2089 ?x2090 (* (- 2) (* x!1 x!1 y!0 y00)) ?x1298 ?x2114 ?x1429 ?x1393 (* (- 2) (* x!1 y!0)) ?x158 ?x162 ?x2094 ?x2096 ?x2097 (* (- 2) (* x!1 x!1 y!0 x00)) ?x2100 (* 3 (* x!1 x!1 y!0 y!0)) ?x2104 ?x2105 ?x196 (* 2 (* x!1 x!1 x!1 y!0)) ?x2119 ?x493)))
 (let ((?x2085 (* x!1 y!0 y!0 x00)))
 (let ((?x2083 (* x!1 x00)))
 (let ((?x2081 (* x!1 y00)))
 (let ((?x2079 (* x!1 y!0 y!0 y00)))
 (let ((?x495 (+ ?x2074 ?x2075 ?x1041 ?x1120 (* (- 3) (* y!0 y00)) ?x2078 ?x2079 ?x2080 ?x2081 ?x2082 ?x2083 ?x2084 ?x2085 ?x2086 (* (- 3) (* y!0 x00)) ?x2089 ?x2090 (* 2 (* x!1 x!1 y!0 y00)) (* (- 1) ?x1298) ?x323 ?x1429 ?x1393 (* 2 (* x!1 y!0)) ?x158 (* (- 1) ?x162) ?x2094 ?x2096 ?x2097 (* 2 (* x!1 x!1 y!0 x00)) ?x2100 (* (- 3) (* x!1 x!1 y!0 y!0)) ?x2104 ?x2106 ?x196 (* (- 2) (* x!1 x!1 x!1 y!0)) ?x434 ?x493)))
 (let (($x2124 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x495 0)) (not (= ?x2120 0))))))
 (let (($x1821 (exists ((x Int) (y Int) )(! (let ((?x1260 (* x y y y y)))
 (let ((?x1360 (* (- 1) ?x1260)))
 (let ((?x959 (* x x x)))
 (let ((?x1358 (* (- 1) ?x959)))
 (let ((?x951 (* x x)))
 (let ((?x941 (* x x x y y)))
 (let ((?x1356 (* (- 1) ?x941)))
 (let ((?x939 (* x x y y)))
 (let ((?x1355 (* 3 ?x939)))
 (let ((?x805 (* x x y y x00)))
 (let ((?x759 (* x x x00)))
 (let ((?x681 (* x x y)))
 (let ((?x679 (* (- 2) ?x681)))
 (let ((?x560 (* x y y y y00)))
 (let ((?x558 (* y y y y00)))
 (let ((?x496 (* x y y)))
 (let ((?x470 (* x x y y y)))
 (let ((?x1348 (* (- 2) ?x470)))
 (let ((?x461 (* y y y)))
 (let ((?x1961 (* 2 ?x461)))
 (let ((?x347 (* y y y x00)))
 (let ((?x328 (* y y x00)))
 (let ((?x1331 (* (- 2) ?x328)))
 (let ((?x317 (* x x y00)))
 (let ((?x271 (* x y y y x00)))
 (let ((?x242 (* x y x00)))
 (let ((?x180 (* x y y00)))
 (let ((?x166 (* x x y y y00)))
 (let ((?x157 (* y y y00)))
 (let ((?x1327 (* (- 2) ?x157)))
 (let ((?x1120 (* (- 2) x00)))
 (let ((?x1041 (* (- 2) y00)))
 (let ((?x1804 (* 2 y)))
 (let ((?x1630 (* 2 x)))
 (let ((?x1997 (+ ?x1630 ?x1804 ?x1041 ?x1120 (* 3 (* y y00)) ?x1327 (* (- 1) (* x y y y00)) ?x166 (* (- 1) (* x y00)) ?x180 (* (- 1) (* x x00)) ?x242 (* (- 1) (* x y y x00)) ?x271 (* 3 (* y x00)) ?x317 ?x1331 (* (- 2) (* x x y y00)) ?x347 (* (- 3) (* y y)) ?x1961 ?x1348 (* (- 2) (* x y)) ?x496 ?x558 ?x560 ?x679 ?x759 (* (- 2) (* x x y x00)) ?x805 ?x1355 ?x1356 ?x951 ?x1358 (* 2 (* x x x y)) (* (- 1) (* y y y y)) ?x1360)))
 (let ((?x1258 (* y y y y)))
 (let ((?x973 (* x x x y)))
 (let ((?x1359 (* (- 2) ?x973)))
 (let ((?x777 (* x x y x00)))
 (let ((?x813 (* 2 ?x777)))
 (let ((?x559 (* (- 1) ?x558)))
 (let ((?x1332 (* (- 1) ?x347)))
 (let ((?x316 (* y x00)))
 (let ((?x1330 (* (- 3) ?x316)))
 (let ((?x254 (* x y y x00)))
 (let ((?x236 (* x x00)))
 (let ((?x175 (* x y00)))
 (let ((?x163 (* x y y y00)))
 (let ((?x146 (* y y00)))
 (let ((?x1326 (* (- 3) ?x146)))
 (let ((?x2663 (+ ?x1630 ?x1804 ?x1041 ?x1120 ?x1326 ?x1327 ?x163 ?x166 ?x175 ?x180 ?x236 ?x242 ?x254 ?x271 ?x1330 ?x317 ?x1331 (* 2 (* x x y y00)) ?x1332 (* 3 (* y y)) ?x1961 ?x1348 (* 2 (* x y)) ?x496 ?x559 ?x560 ?x679 ?x759 ?x813 ?x805 (* (- 3) ?x939) ?x1356 (* (- 1) ?x951) ?x1358 ?x1359 ?x1258 ?x1360)))
 (let (($x115 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x115 (or (not (= ?x2663 0)) (not (= ?x1997 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x628 (exists ((x Int) (y Int) )(! (let ((?x1432 (+ 1 y)))
 (let ((?x1214 (+ (- 1) x)))
 (let ((?x1270 (* ?x1214 ?x1432 ?x1432 ?x1432 ?x1432)))
 (let ((?x364 (* x00 ?x1214 ?x1214 ?x1432 ?x1432)))
 (let ((?x322 (* y00 ?x1214 ?x1432 ?x1432 ?x1432)))
 (let ((?x222 (* x00 ?x1214 ?x1432 ?x1432 ?x1432)))
 (let ((?x208 (* y00 ?x1214 ?x1214 ?x1432 ?x1432)))
 (let ((?x619 (+ ?x208 ?x222 (* (- 2) (* ?x1214 ?x1214 ?x1432 ?x1432 ?x1432)) ?x322 (* (- 2) (* ?x1214 ?x1214 ?x1432)) ?x364 (* (- 1) (* ?x1214 ?x1214 ?x1214 ?x1432 ?x1432)) (* 2 (* y00 ?x1214 ?x1432)) (* 2 (* x00 ?x1214 ?x1432)) (* (- 2) (* ?x1214 ?x1432 ?x1432)) (* (- 1) ?x1270))))
 (let ((?x1278 (+ 1 x)))
 (let ((?x223 (+ (- 1) y)))
 (let ((?x1165 (* ?x223 ?x223 ?x223 ?x223 ?x1278)))
 (let ((?x604 (* x00 ?x223 ?x223 ?x1278 ?x1278)))
 (let ((?x359 (* y00 ?x223 ?x223 ?x223 ?x1278)))
 (let ((?x311 (* x00 ?x223 ?x223 ?x223 ?x1278)))
 (let ((?x299 (* y00 ?x223 ?x223 ?x1278 ?x1278)))
 (let ((?x637 (+ ?x299 ?x311 (* (- 2) (* ?x223 ?x223 ?x223 ?x1278 ?x1278)) ?x359 (* (- 2) (* ?x223 ?x1278 ?x1278)) ?x604 (* (- 1) (* ?x223 ?x223 ?x1278 ?x1278 ?x1278)) (* 2 (* y00 ?x223 ?x1278)) (* 2 (* x00 ?x223 ?x1278)) (* (- 2) (* ?x223 ?x223 ?x1278)) (* (- 1) ?x1165))))
 (let (($x1430 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x1430 (or (not (= ?x637 0)) (not (= ?x619 0))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x143 (lambda ((x Int) (y Int) )(let ((?x1260 (* x y y y y)))
 (let ((?x1360 (* (- 1) ?x1260)))
 (let ((?x959 (* x x x)))
 (let ((?x1358 (* (- 1) ?x959)))
 (let ((?x951 (* x x)))
 (let ((?x941 (* x x x y y)))
 (let ((?x1356 (* (- 1) ?x941)))
 (let ((?x939 (* x x y y)))
 (let ((?x1355 (* 3 ?x939)))
 (let ((?x805 (* x x y y x00)))
 (let ((?x759 (* x x x00)))
 (let ((?x681 (* x x y)))
 (let ((?x679 (* (- 2) ?x681)))
 (let ((?x560 (* x y y y y00)))
 (let ((?x558 (* y y y y00)))
 (let ((?x496 (* x y y)))
 (let ((?x470 (* x x y y y)))
 (let ((?x1348 (* (- 2) ?x470)))
 (let ((?x461 (* y y y)))
 (let ((?x1961 (* 2 ?x461)))
 (let ((?x347 (* y y y x00)))
 (let ((?x328 (* y y x00)))
 (let ((?x1331 (* (- 2) ?x328)))
 (let ((?x317 (* x x y00)))
 (let ((?x271 (* x y y y x00)))
 (let ((?x242 (* x y x00)))
 (let ((?x180 (* x y y00)))
 (let ((?x166 (* x x y y y00)))
 (let ((?x157 (* y y y00)))
 (let ((?x1327 (* (- 2) ?x157)))
 (let ((?x1120 (* (- 2) x00)))
 (let ((?x1041 (* (- 2) y00)))
 (let ((?x1804 (* 2 y)))
 (let ((?x1630 (* 2 x)))
 (let ((?x1997 (+ ?x1630 ?x1804 ?x1041 ?x1120 (* 3 (* y y00)) ?x1327 (* (- 1) (* x y y y00)) ?x166 (* (- 1) (* x y00)) ?x180 (* (- 1) (* x x00)) ?x242 (* (- 1) (* x y y x00)) ?x271 (* 3 (* y x00)) ?x317 ?x1331 (* (- 2) (* x x y y00)) ?x347 (* (- 3) (* y y)) ?x1961 ?x1348 (* (- 2) (* x y)) ?x496 ?x558 ?x560 ?x679 ?x759 (* (- 2) (* x x y x00)) ?x805 ?x1355 ?x1356 ?x951 ?x1358 (* 2 (* x x x y)) (* (- 1) (* y y y y)) ?x1360)))
 (let ((?x1258 (* y y y y)))
 (let ((?x973 (* x x x y)))
 (let ((?x1359 (* (- 2) ?x973)))
 (let ((?x777 (* x x y x00)))
 (let ((?x813 (* 2 ?x777)))
 (let ((?x559 (* (- 1) ?x558)))
 (let ((?x1332 (* (- 1) ?x347)))
 (let ((?x316 (* y x00)))
 (let ((?x1330 (* (- 3) ?x316)))
 (let ((?x254 (* x y y x00)))
 (let ((?x236 (* x x00)))
 (let ((?x175 (* x y00)))
 (let ((?x163 (* x y y y00)))
 (let ((?x146 (* y y00)))
 (let ((?x1326 (* (- 3) ?x146)))
 (let ((?x2663 (+ ?x1630 ?x1804 ?x1041 ?x1120 ?x1326 ?x1327 ?x163 ?x166 ?x175 ?x180 ?x236 ?x242 ?x254 ?x271 ?x1330 ?x317 ?x1331 (* 2 (* x x y y00)) ?x1332 (* 3 (* y y)) ?x1961 ?x1348 (* 2 (* x y)) ?x496 ?x559 ?x560 ?x679 ?x759 ?x813 ?x805 (* (- 3) ?x939) ?x1356 (* (- 1) ?x951) ?x1358 ?x1359 ?x1258 ?x1360)))
 (let (($x115 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x2177 (and $x115 (or (not (= ?x2663 0)) (not (= ?x1997 0))))))
 (let ((?x1432 (+ 1 y)))
 (let ((?x1214 (+ (- 1) x)))
 (let ((?x1270 (* ?x1214 ?x1432 ?x1432 ?x1432 ?x1432)))
 (let ((?x364 (* x00 ?x1214 ?x1214 ?x1432 ?x1432)))
 (let ((?x322 (* y00 ?x1214 ?x1432 ?x1432 ?x1432)))
 (let ((?x222 (* x00 ?x1214 ?x1432 ?x1432 ?x1432)))
 (let ((?x208 (* y00 ?x1214 ?x1214 ?x1432 ?x1432)))
 (let ((?x619 (+ ?x208 ?x222 (* (- 2) (* ?x1214 ?x1214 ?x1432 ?x1432 ?x1432)) ?x322 (* (- 2) (* ?x1214 ?x1214 ?x1432)) ?x364 (* (- 1) (* ?x1214 ?x1214 ?x1214 ?x1432 ?x1432)) (* 2 (* y00 ?x1214 ?x1432)) (* 2 (* x00 ?x1214 ?x1432)) (* (- 2) (* ?x1214 ?x1432 ?x1432)) (* (- 1) ?x1270))))
 (let ((?x1278 (+ 1 x)))
 (let ((?x223 (+ (- 1) y)))
 (let ((?x1165 (* ?x223 ?x223 ?x223 ?x223 ?x1278)))
 (let ((?x604 (* x00 ?x223 ?x223 ?x1278 ?x1278)))
 (let ((?x359 (* y00 ?x223 ?x223 ?x223 ?x1278)))
 (let ((?x311 (* x00 ?x223 ?x223 ?x223 ?x1278)))
 (let ((?x299 (* y00 ?x223 ?x223 ?x1278 ?x1278)))
 (let ((?x637 (+ ?x299 ?x311 (* (- 2) (* ?x223 ?x223 ?x223 ?x1278 ?x1278)) ?x359 (* (- 2) (* ?x223 ?x1278 ?x1278)) ?x604 (* (- 1) (* ?x223 ?x223 ?x1278 ?x1278 ?x1278)) (* 2 (* y00 ?x223 ?x1278)) (* 2 (* x00 ?x223 ?x1278)) (* (- 2) (* ?x223 ?x223 ?x1278)) (* (- 1) ?x1165))))
 (let (($x1430 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x607 (and $x1430 (or (not (= ?x637 0)) (not (= ?x619 0))))))
 (rewrite (= $x607 $x2177))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1437 (exists ((x Int) (y Int) )(! (let ((?x1432 (+ 1 y)))
 (let ((?x1214 (+ (- 1) x)))
 (let ((?x1270 (* ?x1214 ?x1432 ?x1432 ?x1432 ?x1432)))
 (let ((?x371 (* ?x1214 ?x1214 ?x1214 ?x1432 ?x1432)))
 (let ((?x1274 (+ (* (- 1) (* y00 ?x1214 ?x1214 ?x1432 ?x1432)) (* (- 1) (* x00 ?x1214 ?x1432 ?x1432 ?x1432)) (* 2 (* ?x1214 ?x1214 ?x1432 ?x1432 ?x1432)) (* (- 1) (* y00 ?x1214 ?x1432 ?x1432 ?x1432)) (* 2 (* ?x1214 ?x1214 ?x1432)) (* (- 1) (* x00 ?x1214 ?x1214 ?x1432 ?x1432)) ?x371 (* (- 2) (* y00 ?x1214 ?x1432)) (* (- 2) (* x00 ?x1214 ?x1432)) (* 2 (* ?x1214 ?x1432 ?x1432)) ?x1270)))
 (let ((?x1278 (+ 1 x)))
 (let ((?x223 (+ (- 1) y)))
 (let ((?x1165 (* ?x223 ?x223 ?x223 ?x223 ?x1278)))
 (let ((?x385 (* ?x223 ?x223 ?x1278 ?x1278 ?x1278)))
 (let ((?x1900 (+ (* (- 1) (* y00 ?x223 ?x223 ?x1278 ?x1278)) (* (- 1) (* x00 ?x223 ?x223 ?x223 ?x1278)) (* 2 (* ?x223 ?x223 ?x223 ?x1278 ?x1278)) (* (- 1) (* y00 ?x223 ?x223 ?x223 ?x1278)) (* 2 (* ?x223 ?x1278 ?x1278)) (* (- 1) (* x00 ?x223 ?x223 ?x1278 ?x1278)) ?x385 (* (- 2) (* y00 ?x223 ?x1278)) (* (- 2) (* x00 ?x223 ?x1278)) (* 2 (* ?x223 ?x223 ?x1278)) ?x1165)))
 (let (($x1430 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x1430 (or (not (= ?x1900 0)) (not (= ?x1274 0))))))))))))))) :qid k!27))
 ))
 (let ((?x349 (lambda ((x Int) (y Int) )(let ((?x1432 (+ 1 y)))
 (let ((?x1214 (+ (- 1) x)))
 (let ((?x1270 (* ?x1214 ?x1432 ?x1432 ?x1432 ?x1432)))
 (let ((?x364 (* x00 ?x1214 ?x1214 ?x1432 ?x1432)))
 (let ((?x322 (* y00 ?x1214 ?x1432 ?x1432 ?x1432)))
 (let ((?x222 (* x00 ?x1214 ?x1432 ?x1432 ?x1432)))
 (let ((?x208 (* y00 ?x1214 ?x1214 ?x1432 ?x1432)))
 (let ((?x619 (+ ?x208 ?x222 (* (- 2) (* ?x1214 ?x1214 ?x1432 ?x1432 ?x1432)) ?x322 (* (- 2) (* ?x1214 ?x1214 ?x1432)) ?x364 (* (- 1) (* ?x1214 ?x1214 ?x1214 ?x1432 ?x1432)) (* 2 (* y00 ?x1214 ?x1432)) (* 2 (* x00 ?x1214 ?x1432)) (* (- 2) (* ?x1214 ?x1432 ?x1432)) (* (- 1) ?x1270))))
 (let ((?x1278 (+ 1 x)))
 (let ((?x223 (+ (- 1) y)))
 (let ((?x1165 (* ?x223 ?x223 ?x223 ?x223 ?x1278)))
 (let ((?x604 (* x00 ?x223 ?x223 ?x1278 ?x1278)))
 (let ((?x359 (* y00 ?x223 ?x223 ?x223 ?x1278)))
 (let ((?x311 (* x00 ?x223 ?x223 ?x223 ?x1278)))
 (let ((?x299 (* y00 ?x223 ?x223 ?x1278 ?x1278)))
 (let ((?x637 (+ ?x299 ?x311 (* (- 2) (* ?x223 ?x223 ?x223 ?x1278 ?x1278)) ?x359 (* (- 2) (* ?x223 ?x1278 ?x1278)) ?x604 (* (- 1) (* ?x223 ?x223 ?x1278 ?x1278 ?x1278)) (* 2 (* y00 ?x223 ?x1278)) (* 2 (* x00 ?x223 ?x1278)) (* (- 2) (* ?x223 ?x223 ?x1278)) (* (- 1) ?x1165))))
 (let (($x1430 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x607 (and $x1430 (or (not (= ?x637 0)) (not (= ?x619 0))))))
 (let ((?x371 (* ?x1214 ?x1214 ?x1214 ?x1432 ?x1432)))
 (let ((?x1274 (+ (* (- 1) ?x208) (* (- 1) ?x222) (* 2 (* ?x1214 ?x1214 ?x1432 ?x1432 ?x1432)) (* (- 1) ?x322) (* 2 (* ?x1214 ?x1214 ?x1432)) (* (- 1) ?x364) ?x371 (* (- 2) (* y00 ?x1214 ?x1432)) (* (- 2) (* x00 ?x1214 ?x1432)) (* 2 (* ?x1214 ?x1432 ?x1432)) ?x1270)))
 (let ((?x385 (* ?x223 ?x223 ?x1278 ?x1278 ?x1278)))
 (let ((?x1900 (+ (* (- 1) ?x299) (* (- 1) ?x311) (* 2 (* ?x223 ?x223 ?x223 ?x1278 ?x1278)) (* (- 1) ?x359) (* 2 (* ?x223 ?x1278 ?x1278)) (* (- 1) ?x604) ?x385 (* (- 2) (* y00 ?x223 ?x1278)) (* (- 2) (* x00 ?x223 ?x1278)) (* 2 (* ?x223 ?x223 ?x1278)) ?x1165)))
 (let (($x310 (and $x1430 (or (not (= ?x1900 0)) (not (= ?x1274 0))))))
 (rewrite (= $x310 $x607))))))))))))))))))))))))))
 ))
 (let (($x86 (exists ((x Int) (y Int) )(! (let ((?x61 (- y 1)))
 (let ((?x60 (+ x 1)))
 (let ((?x64 (- (* (- 1) ?x60 ?x60 ?x61 ?x61 y00) (* ?x60 x00 ?x61 ?x61 ?x61))))
 (let ((?x68 (- (+ ?x64 (* 2 ?x60 ?x60 ?x61 ?x61 ?x61)) (* ?x60 ?x61 ?x61 ?x61 y00))))
 (let ((?x72 (- (+ ?x68 (* 2 ?x60 ?x60 ?x61)) (* ?x60 ?x60 x00 ?x61 ?x61))))
 (let ((?x77 (- (+ ?x72 (* ?x60 ?x60 ?x60 ?x61 ?x61)) (* 2 ?x60 ?x61 y00))))
 (let ((?x81 (+ (- ?x77 (* 2 ?x60 x00 ?x61)) (* 2 ?x60 ?x61 ?x61) (* ?x60 ?x61 ?x61 ?x61 ?x61))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x39 (- (* (- 1) ?x35 ?x35 ?x36 ?x36 y00) (* ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x44 (- (+ ?x39 (* 2 ?x35 ?x35 ?x36 ?x36 ?x36)) (* ?x35 ?x36 ?x36 ?x36 y00))))
 (let ((?x48 (- (+ ?x44 (* 2 ?x35 ?x35 ?x36)) (* ?x35 ?x35 x00 ?x36 ?x36))))
 (let ((?x53 (- (+ ?x48 (* ?x35 ?x35 ?x35 ?x36 ?x36)) (* 2 ?x35 ?x36 y00))))
 (let ((?x57 (+ (- ?x53 (* 2 ?x35 x00 ?x36)) (* 2 ?x35 ?x36 ?x36) (* ?x35 ?x36 ?x36 ?x36 ?x36))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x57 0)) (not (= ?x81 0)))))))))))))))))) :qid k!27))
 ))
 (let ((?x211 (lambda ((x Int) (y Int) )(let ((?x1432 (+ 1 y)))
 (let ((?x1214 (+ (- 1) x)))
 (let ((?x1270 (* ?x1214 ?x1432 ?x1432 ?x1432 ?x1432)))
 (let ((?x371 (* ?x1214 ?x1214 ?x1214 ?x1432 ?x1432)))
 (let ((?x1274 (+ (* (- 1) (* y00 ?x1214 ?x1214 ?x1432 ?x1432)) (* (- 1) (* x00 ?x1214 ?x1432 ?x1432 ?x1432)) (* 2 (* ?x1214 ?x1214 ?x1432 ?x1432 ?x1432)) (* (- 1) (* y00 ?x1214 ?x1432 ?x1432 ?x1432)) (* 2 (* ?x1214 ?x1214 ?x1432)) (* (- 1) (* x00 ?x1214 ?x1214 ?x1432 ?x1432)) ?x371 (* (- 2) (* y00 ?x1214 ?x1432)) (* (- 2) (* x00 ?x1214 ?x1432)) (* 2 (* ?x1214 ?x1432 ?x1432)) ?x1270)))
 (let ((?x1278 (+ 1 x)))
 (let ((?x223 (+ (- 1) y)))
 (let ((?x1165 (* ?x223 ?x223 ?x223 ?x223 ?x1278)))
 (let ((?x385 (* ?x223 ?x223 ?x1278 ?x1278 ?x1278)))
 (let ((?x1900 (+ (* (- 1) (* y00 ?x223 ?x223 ?x1278 ?x1278)) (* (- 1) (* x00 ?x223 ?x223 ?x223 ?x1278)) (* 2 (* ?x223 ?x223 ?x223 ?x1278 ?x1278)) (* (- 1) (* y00 ?x223 ?x223 ?x223 ?x1278)) (* 2 (* ?x223 ?x1278 ?x1278)) (* (- 1) (* x00 ?x223 ?x223 ?x1278 ?x1278)) ?x385 (* (- 2) (* y00 ?x223 ?x1278)) (* (- 2) (* x00 ?x223 ?x1278)) (* 2 (* ?x223 ?x223 ?x1278)) ?x1165)))
 (let (($x1430 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x310 (and $x1430 (or (not (= ?x1900 0)) (not (= ?x1274 0))))))
 (let ((?x61 (- y 1)))
 (let ((?x60 (+ x 1)))
 (let ((?x64 (- (* (- 1) ?x60 ?x60 ?x61 ?x61 y00) (* ?x60 x00 ?x61 ?x61 ?x61))))
 (let ((?x68 (- (+ ?x64 (* 2 ?x60 ?x60 ?x61 ?x61 ?x61)) (* ?x60 ?x61 ?x61 ?x61 y00))))
 (let ((?x72 (- (+ ?x68 (* 2 ?x60 ?x60 ?x61)) (* ?x60 ?x60 x00 ?x61 ?x61))))
 (let ((?x77 (- (+ ?x72 (* ?x60 ?x60 ?x60 ?x61 ?x61)) (* 2 ?x60 ?x61 y00))))
 (let ((?x81 (+ (- ?x77 (* 2 ?x60 x00 ?x61)) (* 2 ?x60 ?x61 ?x61) (* ?x60 ?x61 ?x61 ?x61 ?x61))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x39 (- (* (- 1) ?x35 ?x35 ?x36 ?x36 y00) (* ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x44 (- (+ ?x39 (* 2 ?x35 ?x35 ?x36 ?x36 ?x36)) (* ?x35 ?x36 ?x36 ?x36 y00))))
 (let ((?x48 (- (+ ?x44 (* 2 ?x35 ?x35 ?x36)) (* ?x35 ?x35 x00 ?x36 ?x36))))
 (let ((?x53 (- (+ ?x48 (* ?x35 ?x35 ?x35 ?x36 ?x36)) (* 2 ?x35 ?x36 y00))))
 (let ((?x57 (+ (- ?x53 (* 2 ?x35 x00 ?x36)) (* 2 ?x35 ?x36 ?x36) (* ?x35 ?x36 ?x36 ?x36 ?x36))))
 (let (($x85 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x57 0)) (not (= ?x81 0))))))
 (rewrite (= $x85 $x310))))))))))))))))))))))))))))))
 ))
 (let ((@x87 (asserted $x86)))
 (let ((@x643 (mp (mp @x87 (quant-intro (proof-bind ?x211) (= $x86 $x1437)) $x1437) (rewrite (= $x1437 $x1437)) $x1437)))
 (let ((@x164 (mp (mp @x643 (quant-intro (proof-bind ?x349) (= $x1437 $x628)) $x628) (quant-intro (proof-bind ?x143) (= $x628 $x1821)) $x1821)))
 (let ((@x2147 (mp (mp~ @x164 (sk (~ $x1821 $x2124)) $x2124) (rewrite (= $x2124 $x1133)) $x1133)))
 (let ((@x788 (and-elim @x2147 $x2137)))
 (let ((@x2139 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2137) $x2201)) @x788 $x2201)))
 (let (($x2202 (>= ?x2136 0)))
 (let ((@x2145 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2137) $x2202)) @x788 $x2202)))
 (let (($x1316 (<= ?x2265 0)))
 (let ((@x1750 (lemma ((_ th-lemma arith) (hypothesis (not $x1316)) @x2145 @x2139 @x2145 @x2139 false) $x1316)))
 (let (($x2150 (>= ?x2265 0)))
 (let ((@x1032 (lemma ((_ th-lemma arith) (hypothesis (not $x2150)) @x2145 @x2139 @x2145 @x2139 false) $x2150)))
 (let (($x2215 (not (<= ?x2273 0))))
 (let (($x1493 (>= ?x2273 0)))
 (let ((@x1036 (lemma ((_ th-lemma arith) (hypothesis (not $x1493)) @x2145 @x2139 @x2145 @x2139 false) $x1493)))
 (let ((@x596 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2267 (not $x1316) (not $x2150))) @x1750 @x1032 $x2267)))
 (let ((@x2155 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2275 $x2215 (not $x1493))) (unit-resolution (and-elim @x2147 $x2144) @x596 $x2278) @x1036 $x2215)))
 ((_ th-lemma arith) @x2155 @x1032 @x1750 @x2145 @x2139 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        23
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-gcd-tests           4
 :arith-grobner             4
 :arith-max-min             577
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    11
 :arith-num-rows            3
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              4
 :arith-row-summations      3
 :arith-tableau-max-columns 46
 :arith-tableau-max-rows    3
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                3.95
 :memory                    3.38
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1416568
 :num-checks                1
 :propagations              14
 :rlimit-count              7478
 :time                      0.01
 :total-time                0.02)
