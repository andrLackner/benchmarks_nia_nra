unsat
((set-logic NIA)
(declare-fun x!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x2167 (* (- 1) y!0)))
 (let ((?x1317 (+ y00 x00 ?x2167 (* (- 1) x!1))))
 (let (($x901 (<= ?x1317 0)))
 (let (($x2339 (= ?x1317 0)))
 (let ((?x2428 (* (- 1) (* y00 y!0 x!1))))
 (let ((?x2453 (* (- 1) (* y00 y!0 y!0 x!1 x!1))))
 (let ((?x2452 (* 2 (* y00 y!0 y!0))))
 (let ((?x2155 (* y!0 y!0 y!0 y!0)))
 (let ((?x2115 (* (- 1) ?x2155)))
 (let ((?x2148 (* x!1 x!1 x!1)))
 (let ((?x2147 (* x!1 x!1)))
 (let ((?x2447 (* (- 1) (* x00 y!0 y!0 x!1 x!1))))
 (let ((?x2446 (* 2 (* y!0 x!1 x!1))))
 (let ((?x2423 (* (- 1) (* y00 y!0 y!0 y!0 x!1))))
 (let ((?x2445 (* (- 1) (* x00 y!0 x!1))))
 (let ((?x2444 (* 2 (* x00 y!0 y!0))))
 (let ((?x2443 (* 2 (* y!0 y!0 y!0 x!1 x!1))))
 (let ((?x2442 (* (- 2) x!1)))
 (let ((?x2421 (* (- 2) y!0)))
 (let ((?x740 (* y!0 y!0 y!0 y!0 x!1)))
 (let ((?x696 (* y!0 y!0 x!1 x!1 x!1)))
 (let ((?x1456 (* (- 1) (* x00 y!0 y!0 y!0 x!1))))
 (let ((?x2418 (* (- 1) (* y00 x!1 x!1))))
 (let ((?x181 (* x00 y!0 y!0 y!0)))
 (let ((?x546 (* (- 1) (* y!0 y!0 x!1))))
 (let ((?x154 (* y00 y!0 y!0 y!0)))
 (let ((?x129 (* y!0 y!0 y!0)))
 (let ((?x2415 (* (- 2) ?x129)))
 (let ((?x2414 (* (- 1) (* x00 x!1 x!1))))
 (let ((?x1156 (* 2 x00)))
 (let ((?x1072 (* 2 y00)))
 (let ((?x2469 (+ ?x1072 ?x1156 ?x2414 ?x2415 ?x154 ?x546 ?x181 (* (- 1) (* x00 y!0 y!0 x!1)) ?x2418 ?x1456 ?x696 (* (- 1) (* y00 y!0 y!0 x!1)) ?x740 (* (- 2) (* y00 y!0 x!1 x!1)) ?x2421 ?x2442 ?x2443 (* (- 2) (* x00 y!0 x!1 x!1)) ?x2444 ?x2445 ?x2423 ?x2446 ?x2447 (* 3 (* y!0 y!0 x!1 x!1)) (* 2 (* y!0 x!1 x!1 x!1)) (* (- 3) (* y!0 y!0)) ?x2147 ?x2148 ?x2115 (* 3 (* x00 y!0)) (* (- 2) (* y!0 x!1)) (* 3 (* y00 y!0)) ?x2452 ?x2453 (* (- 1) (* y00 x!1)) ?x2428 (* (- 1) (* x00 x!1)))))
 (let (($x2470 (= ?x2469 0)))
 (let (($x2426 (not $x2470)))
 (let ((?x2379 (* x00 x!1)))
 (let ((?x2358 (* y00 x!1)))
 (let ((?x724 (* y00 y!0 y!0 x!1)))
 (let ((?x243 (* x00 y!0 y!0 x!1)))
 (let ((?x2454 (+ ?x1072 ?x1156 ?x2414 ?x2415 (* (- 1) ?x154) ?x546 (* (- 1) ?x181) ?x243 ?x2418 ?x1456 ?x696 ?x724 ?x740 (* 2 (* y00 y!0 x!1 x!1)) ?x2421 ?x2442 ?x2443 (* 2 (* x00 y!0 x!1 x!1)) ?x2444 ?x2445 ?x2423 ?x2446 ?x2447 (* (- 3) (* y!0 y!0 x!1 x!1)) (* (- 2) (* y!0 x!1 x!1 x!1)) (* 3 (* y!0 y!0)) (* (- 1) ?x2147) ?x2148 ?x2155 (* (- 3) (* x00 y!0)) (* 2 (* y!0 x!1)) (* (- 3) (* y00 y!0)) ?x2452 ?x2453 ?x2358 ?x2428 ?x2379)))
 (let (($x2455 (= ?x2454 0)))
 (let (($x205 (or (not $x2455) $x2426)))
 (let (($x1181 (and $x2339 $x205)))
 (let ((?x2157 (* (- 1) (* x!1 y!0 y!0 y!0 y!0))))
 (let ((?x2154 (* y!0 y!0 y!0 1)))
 (let ((?x2153 (* y!0 1 1 1)))
 (let ((?x2114 (* (- 1) ?x2148)))
 (let ((?x2146 (* (- 1) (* x!1 x!1 x!1 y!0 y!0))))
 (let ((?x2142 (* x!1 x!1 y!0 y!0 x00)))
 (let ((?x2140 (* x!1 x!1 x00)))
 (let ((?x491 (* x!1 x!1 y00)))
 (let ((?x2112 (* x!1 y!0 y!0 y!0 y00)))
 (let ((?x713 (* (- 2) (* x!1 x!1 y!0 y!0 y!0))))
 (let ((?x2134 (* (- 2) (* y!0 y!0 x00))))
 (let ((?x2110 (* x!1 y!0 y!0 y!0 x00)))
 (let ((?x2128 (* x!1 y!0 y!0 x00)))
 (let ((?x1860 (* x!1 y!0 x00)))
 (let ((?x2127 (* x!1 x00)))
 (let ((?x2126 (* x!1 y!0 y00)))
 (let ((?x1079 (* x!1 y00)))
 (let ((?x2109 (* x!1 x!1 y!0 y!0 y00)))
 (let ((?x203 (* x!1 y!0 y!0 y00)))
 (let ((?x188 (* (- 2) (* y!0 y!0 y00))))
 (let ((?x1120 (* (- 2) x00)))
 (let ((?x1041 (* (- 2) y00)))
 (let ((?x2123 (+ (* 3 x!1) ?x2167 ?x1041 ?x1120 (* (- 3) (* y!0 y00)) ?x188 ?x203 ?x2109 ?x1079 ?x2126 ?x2127 ?x1860 ?x2128 ?x2110 (* (- 3) (* y!0 x00)) ?x2134 (* (- 1) (* y!0 y!0 y!0 x00)) (* y!0 1 1) (* y!0 1) (* y!0 y!0 1) (* y!0 1 y!0) (* (- 2) (* y!0 y!0)) (* (- 1) ?x129) ?x713 (* 4 (* x!1 y!0)) (* 2 (* x!1 y!0 y!0)) (* (- 1) (* y!0 y!0 y!0 y00)) ?x2112 ?x491 (* (- 4) (* x!1 x!1 y!0)) ?x2140 (* 2 (* x!1 x!1 y!0 x00)) ?x2142 (* x!1 (- 1) 1 1) (* x!1 x!1 1 1) (* x!1 (- 1) y!0 1) (* x!1 x!1 y!0 1) (* x!1 (- 1) 1 y!0) (* x!1 x!1 1 y!0) (* x!1 (- 1) y!0 y!0) (* (- 3) (* x!1 x!1 y!0 y!0)) ?x2146 (* (- 2) ?x2147) ?x2114 (* (- 2) (* x!1 x!1 x!1 y!0)) ?x2153 (* y!0 y!0 1 1) (* y!0 1 y!0 1) ?x2154 (* y!0 1 1 y!0) (* y!0 y!0 1 y!0) (* y!0 1 y!0 y!0) ?x2155 ?x2157 (* 2 (* x!1 x!1 y!0 y00)))))
 (let ((?x716 (* y!0 y!0 y!0 y00)))
 (let ((?x799 (* y!0 y!0 y!0 x00)))
 (let ((?x2117 (+ (* 2 x!1) ?x1041 ?x1120 (* 3 (* y!0 y00)) ?x188 (* (- 1) ?x203) ?x2109 (* (- 1) ?x1079) ?x2126 (* (- 1) ?x2127) ?x1860 (* (- 1) ?x2128) ?x2110 (* y!0 x!1 1 x!1) (* 3 (* y!0 x00)) (* y!0 1 x!1 1) (* y!0 x!1 x!1 1) ?x2134 (* y!0 1 1 x!1) (* y!0 1 x!1 x!1) ?x799 (* (- 1) (* y!0 y!0)) ?x129 ?x713 (* (- 6) (* x!1 y!0)) (* 3 (* x!1 y!0 y!0)) ?x716 ?x2112 ?x491 (* (- 5) (* x!1 x!1 y!0)) ?x2140 (* (- 2) (* x!1 x!1 y!0 x00)) ?x2142 (* 3 (* x!1 x!1 y!0 y!0)) ?x2146 ?x2147 ?x2114 (* 2 (* x!1 x!1 x!1 y!0)) (* y!0 (- 1) y!0 1) (* y!0 (- 1) (- 1) x!1) ?x2153 ?x2154 ?x2115 ?x2157 (* y!0 (- 1) (- 1) 1) (* y!0 y!0 (- 1) 1) (* (- 2) (* x!1 x!1 y!0 y00)) (* y!0 x!1 1 1) (* y!0 y!0 (- 1) x!1) (* y!0 (- 1) y!0 x!1))))
 (let (($x1910 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x2117 0)) (not (= ?x2123 0))))))
 (let (($x1750 (exists ((x Int) (y Int) )(! (let ((?x1260 (* x y y y y)))
 (let ((?x1360 (* (- 1) ?x1260)))
 (let ((?x1258 (* y y y y)))
 (let ((?x1254 (* y 1 y y)))
 (let ((?x1250 (* y y 1 y)))
 (let ((?x1246 (* y 1 1 y)))
 (let ((?x1242 (* y y y 1)))
 (let ((?x1238 (* y 1 y 1)))
 (let ((?x1234 (* y y 1 1)))
 (let ((?x1230 (* y 1 1 1)))
 (let ((?x973 (* x x x y)))
 (let ((?x1359 (* (- 2) ?x973)))
 (let ((?x959 (* x x x)))
 (let ((?x1358 (* (- 1) ?x959)))
 (let ((?x941 (* x x x y y)))
 (let ((?x1356 (* (- 1) ?x941)))
 (let ((?x933 (* x (- 1) y y)))
 (let ((?x928 (* x x 1 y)))
 (let ((?x921 (* x (- 1) 1 y)))
 (let ((?x916 (* x x y 1)))
 (let ((?x909 (* x (- 1) y 1)))
 (let ((?x904 (* x x 1 1)))
 (let ((?x897 (* x (- 1) 1 1)))
 (let ((?x805 (* x x y y x00)))
 (let ((?x777 (* x x y x00)))
 (let ((?x813 (* 2 ?x777)))
 (let ((?x759 (* x x x00)))
 (let ((?x681 (* x x y)))
 (let ((?x1005 (* (- 4) ?x681)))
 (let ((?x615 (* x x y00)))
 (let ((?x560 (* x y y y y00)))
 (let ((?x558 (* y y y y00)))
 (let ((?x559 (* (- 1) ?x558)))
 (let ((?x470 (* x x y y y)))
 (let ((?x1348 (* (- 2) ?x470)))
 (let ((?x461 (* y y y)))
 (let ((?x462 (* (- 1) ?x461)))
 (let ((?x450 (* y y)))
 (let ((?x1212 (* (- 2) ?x450)))
 (let ((?x439 (* y 1 y)))
 (let ((?x417 (* y y 1)))
 (let ((?x406 (* y 1)))
 (let ((?x395 (* y 1 1)))
 (let ((?x347 (* y y y x00)))
 (let ((?x1332 (* (- 1) ?x347)))
 (let ((?x328 (* y y x00)))
 (let ((?x1331 (* (- 2) ?x328)))
 (let ((?x316 (* y x00)))
 (let ((?x1330 (* (- 3) ?x316)))
 (let ((?x271 (* x y y y x00)))
 (let ((?x254 (* x y y x00)))
 (let ((?x242 (* x y x00)))
 (let ((?x236 (* x x00)))
 (let ((?x180 (* x y y00)))
 (let ((?x175 (* x y00)))
 (let ((?x166 (* x x y y y00)))
 (let ((?x163 (* x y y y00)))
 (let ((?x157 (* y y y00)))
 (let ((?x1327 (* (- 2) ?x157)))
 (let ((?x146 (* y y00)))
 (let ((?x1326 (* (- 3) ?x146)))
 (let ((?x1120 (* (- 2) x00)))
 (let ((?x1041 (* (- 2) y00)))
 (let ((?x674 (* (- 1) y)))
 (let ((?x2495 (+ (* 3 x) ?x674 ?x1041 ?x1120 ?x1326 ?x1327 ?x163 ?x166 ?x175 ?x180 ?x236 ?x242 ?x254 ?x271 ?x1330 ?x1331 ?x1332 ?x395 ?x406 ?x417 ?x439 ?x1212 ?x462 ?x1348 (* 4 (* x y)) (* 2 (* x y y)) ?x559 ?x560 ?x615 ?x1005 ?x759 ?x813 ?x805 ?x897 ?x904 ?x909 ?x916 ?x921 ?x928 ?x933 (* (- 3) (* x x y y)) ?x1356 (* (- 2) (* x x)) ?x1358 ?x1359 ?x1230 ?x1234 ?x1238 ?x1242 ?x1246 ?x1250 ?x1254 ?x1258 ?x1360 (* 2 (* x x y y00)))))
 (let ((?x951 (* x x)))
 (let ((?x939 (* x x y y)))
 (let ((?x1355 (* 3 ?x939)))
 (let ((?x498 (+ (* 2 x) ?x1041 ?x1120 (* 3 ?x146) ?x1327 (* (- 1) ?x163) ?x166 (* (- 1) ?x175) ?x180 (* (- 1) ?x236) ?x242 (* (- 1) ?x254) ?x271 (* y x 1 x) (* 3 ?x316) (* y 1 x 1) (* y x x 1) ?x1331 (* y 1 1 x) (* y 1 x x) ?x347 (* (- 1) ?x450) ?x461 ?x1348 (* (- 6) (* x y)) (* 3 (* x y y)) ?x558 ?x560 ?x615 (* (- 5) ?x681) ?x759 (* (- 2) ?x777) ?x805 ?x1355 ?x1356 ?x951 ?x1358 (* 2 ?x973) (* y (- 1) y 1) (* y (- 1) (- 1) x) ?x1230 ?x1242 (* (- 1) ?x1258) ?x1360 (* y (- 1) (- 1) 1) (* y y (- 1) 1) (* (- 2) (* x x y y00)) (* y x 1 1) (* y y (- 1) x) (* y (- 1) y x))))
 (let (($x115 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x115 (or (not (= ?x498 0)) (not (= ?x2495 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x1508 (exists ((x Int) (y Int) )(! (let ((?x1507 (+ 1 y)))
 (let ((?x1505 (+ (- 1) x)))
 (let ((?x888 (+ (* (- 1) (* y00 ?x1505 ?x1505 ?x1507 ?x1507)) (* (- 1) (* x00 ?x1505 ?x1507 ?x1507 ?x1507)) (* 2 (* ?x1505 ?x1505 ?x1507 ?x1507 ?x1507)) (* (- 1) (* y00 ?x1505 ?x1507 ?x1507 ?x1507)) (* 2 (* ?x1505 ?x1505 ?x1507)) (* (- 1) (* x00 ?x1505 ?x1505 ?x1507 ?x1507)) (* ?x1505 ?x1505 ?x1505 ?x1507 ?x1507) (* (- 2) (* y00 ?x1505 ?x1507)) (* (- 2) (* x00 ?x1505 ?x1507)) (* 2 (* ?x1505 ?x1507 ?x1507)) (* ?x1505 ?x1507 ?x1507 ?x1507 ?x1507))))
 (let ((?x1827 (+ 1 x)))
 (let ((?x1523 (+ (- 1) y)))
 (let ((?x1736 (+ (* (- 1) (* y00 ?x1523 ?x1523 ?x1827 ?x1827)) (* (- 1) (* x00 ?x1523 ?x1523 ?x1523 ?x1827)) (* 2 (* ?x1523 ?x1523 ?x1523 ?x1827 ?x1827)) (* (- 1) (* y00 ?x1523 ?x1523 ?x1523 ?x1827)) (* 2 (* ?x1523 ?x1827 ?x1827)) (* (- 1) (* x00 ?x1523 ?x1523 ?x1827 ?x1827)) (* ?x1523 ?x1523 ?x1827 ?x1827 ?x1827) (* (- 2) (* y00 ?x1523 ?x1827)) (* (- 2) (* x00 ?x1523 ?x1827)) (* 2 (* ?x1523 ?x1523 ?x1827)) (* ?x1523 ?x1523 ?x1523 ?x1523 ?x1827))))
 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x1736 0)) (not (= ?x888 0)))))))))) :qid k!27))
 ))
 (let ((?x1946 (lambda ((x Int) (y Int) )(let ((?x1260 (* x y y y y)))
 (let ((?x1360 (* (- 1) ?x1260)))
 (let ((?x1258 (* y y y y)))
 (let ((?x1254 (* y 1 y y)))
 (let ((?x1250 (* y y 1 y)))
 (let ((?x1246 (* y 1 1 y)))
 (let ((?x1242 (* y y y 1)))
 (let ((?x1238 (* y 1 y 1)))
 (let ((?x1234 (* y y 1 1)))
 (let ((?x1230 (* y 1 1 1)))
 (let ((?x973 (* x x x y)))
 (let ((?x1359 (* (- 2) ?x973)))
 (let ((?x959 (* x x x)))
 (let ((?x1358 (* (- 1) ?x959)))
 (let ((?x941 (* x x x y y)))
 (let ((?x1356 (* (- 1) ?x941)))
 (let ((?x933 (* x (- 1) y y)))
 (let ((?x928 (* x x 1 y)))
 (let ((?x921 (* x (- 1) 1 y)))
 (let ((?x916 (* x x y 1)))
 (let ((?x909 (* x (- 1) y 1)))
 (let ((?x904 (* x x 1 1)))
 (let ((?x897 (* x (- 1) 1 1)))
 (let ((?x805 (* x x y y x00)))
 (let ((?x777 (* x x y x00)))
 (let ((?x813 (* 2 ?x777)))
 (let ((?x759 (* x x x00)))
 (let ((?x681 (* x x y)))
 (let ((?x1005 (* (- 4) ?x681)))
 (let ((?x615 (* x x y00)))
 (let ((?x560 (* x y y y y00)))
 (let ((?x558 (* y y y y00)))
 (let ((?x559 (* (- 1) ?x558)))
 (let ((?x470 (* x x y y y)))
 (let ((?x1348 (* (- 2) ?x470)))
 (let ((?x461 (* y y y)))
 (let ((?x462 (* (- 1) ?x461)))
 (let ((?x450 (* y y)))
 (let ((?x1212 (* (- 2) ?x450)))
 (let ((?x439 (* y 1 y)))
 (let ((?x417 (* y y 1)))
 (let ((?x406 (* y 1)))
 (let ((?x395 (* y 1 1)))
 (let ((?x347 (* y y y x00)))
 (let ((?x1332 (* (- 1) ?x347)))
 (let ((?x328 (* y y x00)))
 (let ((?x1331 (* (- 2) ?x328)))
 (let ((?x316 (* y x00)))
 (let ((?x1330 (* (- 3) ?x316)))
 (let ((?x271 (* x y y y x00)))
 (let ((?x254 (* x y y x00)))
 (let ((?x242 (* x y x00)))
 (let ((?x236 (* x x00)))
 (let ((?x180 (* x y y00)))
 (let ((?x175 (* x y00)))
 (let ((?x166 (* x x y y y00)))
 (let ((?x163 (* x y y y00)))
 (let ((?x157 (* y y y00)))
 (let ((?x1327 (* (- 2) ?x157)))
 (let ((?x146 (* y y00)))
 (let ((?x1326 (* (- 3) ?x146)))
 (let ((?x1120 (* (- 2) x00)))
 (let ((?x1041 (* (- 2) y00)))
 (let ((?x674 (* (- 1) y)))
 (let ((?x2495 (+ (* 3 x) ?x674 ?x1041 ?x1120 ?x1326 ?x1327 ?x163 ?x166 ?x175 ?x180 ?x236 ?x242 ?x254 ?x271 ?x1330 ?x1331 ?x1332 ?x395 ?x406 ?x417 ?x439 ?x1212 ?x462 ?x1348 (* 4 (* x y)) (* 2 (* x y y)) ?x559 ?x560 ?x615 ?x1005 ?x759 ?x813 ?x805 ?x897 ?x904 ?x909 ?x916 ?x921 ?x928 ?x933 (* (- 3) (* x x y y)) ?x1356 (* (- 2) (* x x)) ?x1358 ?x1359 ?x1230 ?x1234 ?x1238 ?x1242 ?x1246 ?x1250 ?x1254 ?x1258 ?x1360 (* 2 (* x x y y00)))))
 (let ((?x951 (* x x)))
 (let ((?x939 (* x x y y)))
 (let ((?x1355 (* 3 ?x939)))
 (let ((?x498 (+ (* 2 x) ?x1041 ?x1120 (* 3 ?x146) ?x1327 (* (- 1) ?x163) ?x166 (* (- 1) ?x175) ?x180 (* (- 1) ?x236) ?x242 (* (- 1) ?x254) ?x271 (* y x 1 x) (* 3 ?x316) (* y 1 x 1) (* y x x 1) ?x1331 (* y 1 1 x) (* y 1 x x) ?x347 (* (- 1) ?x450) ?x461 ?x1348 (* (- 6) (* x y)) (* 3 (* x y y)) ?x558 ?x560 ?x615 (* (- 5) ?x681) ?x759 (* (- 2) ?x777) ?x805 ?x1355 ?x1356 ?x951 ?x1358 (* 2 ?x973) (* y (- 1) y 1) (* y (- 1) (- 1) x) ?x1230 ?x1242 (* (- 1) ?x1258) ?x1360 (* y (- 1) (- 1) 1) (* y y (- 1) 1) (* (- 2) (* x x y y00)) (* y x 1 1) (* y y (- 1) x) (* y (- 1) y x))))
 (let (($x115 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x2502 (and $x115 (or (not (= ?x498 0)) (not (= ?x2495 0))))))
 (let ((?x1507 (+ 1 y)))
 (let ((?x1505 (+ (- 1) x)))
 (let ((?x888 (+ (* (- 1) (* y00 ?x1505 ?x1505 ?x1507 ?x1507)) (* (- 1) (* x00 ?x1505 ?x1507 ?x1507 ?x1507)) (* 2 (* ?x1505 ?x1505 ?x1507 ?x1507 ?x1507)) (* (- 1) (* y00 ?x1505 ?x1507 ?x1507 ?x1507)) (* 2 (* ?x1505 ?x1505 ?x1507)) (* (- 1) (* x00 ?x1505 ?x1505 ?x1507 ?x1507)) (* ?x1505 ?x1505 ?x1505 ?x1507 ?x1507) (* (- 2) (* y00 ?x1505 ?x1507)) (* (- 2) (* x00 ?x1505 ?x1507)) (* 2 (* ?x1505 ?x1507 ?x1507)) (* ?x1505 ?x1507 ?x1507 ?x1507 ?x1507))))
 (let ((?x1827 (+ 1 x)))
 (let ((?x1523 (+ (- 1) y)))
 (let ((?x1736 (+ (* (- 1) (* y00 ?x1523 ?x1523 ?x1827 ?x1827)) (* (- 1) (* x00 ?x1523 ?x1523 ?x1523 ?x1827)) (* 2 (* ?x1523 ?x1523 ?x1523 ?x1827 ?x1827)) (* (- 1) (* y00 ?x1523 ?x1523 ?x1523 ?x1827)) (* 2 (* ?x1523 ?x1827 ?x1827)) (* (- 1) (* x00 ?x1523 ?x1523 ?x1827 ?x1827)) (* ?x1523 ?x1523 ?x1827 ?x1827 ?x1827) (* (- 2) (* y00 ?x1523 ?x1827)) (* (- 2) (* x00 ?x1523 ?x1827)) (* 2 (* ?x1523 ?x1523 ?x1827)) (* ?x1523 ?x1523 ?x1523 ?x1523 ?x1827))))
 (let (($x1211 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x1736 0)) (not (= ?x888 0))))))
 (rewrite (= $x1211 $x2502)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x86 (exists ((x Int) (y Int) )(! (let ((?x61 (- y 1)))
 (let ((?x60 (+ x 1)))
 (let ((?x64 (- (* (- 1) ?x60 ?x60 ?x61 ?x61 y00) (* ?x60 x00 ?x61 ?x61 ?x61))))
 (let ((?x68 (- (+ ?x64 (* 2 ?x60 ?x60 ?x61 ?x61 ?x61)) (* ?x60 ?x61 ?x61 ?x61 y00))))
 (let ((?x72 (- (+ ?x68 (* 2 ?x60 ?x60 ?x61)) (* ?x60 ?x60 x00 ?x61 ?x61))))
 (let ((?x77 (- (+ ?x72 (* ?x60 ?x60 ?x60 ?x61 ?x61)) (* 2 ?x60 ?x61 y00))))
 (let ((?x81 (+ (- ?x77 (* 2 ?x60 x00 ?x61)) (* 2 ?x60 ?x61 ?x61) (* ?x60 ?x61 ?x61 ?x61 ?x61))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x39 (- (* (- 1) ?x35 ?x35 ?x36 ?x36 y00) (* ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x44 (- (+ ?x39 (* 2 ?x35 ?x35 ?x36 ?x36 ?x36)) (* ?x35 ?x36 ?x36 ?x36 y00))))
 (let ((?x48 (- (+ ?x44 (* 2 ?x35 ?x35 ?x36)) (* ?x35 ?x35 x00 ?x36 ?x36))))
 (let ((?x53 (- (+ ?x48 (* ?x35 ?x35 ?x35 ?x36 ?x36)) (* 2 ?x35 ?x36 y00))))
 (let ((?x57 (+ (- ?x53 (* 2 ?x35 x00 ?x36)) (* 2 ?x35 ?x36 ?x36) (* ?x35 ?x36 ?x36 ?x36 ?x36))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x57 0)) (not (= ?x81 0)))))))))))))))))) :qid k!27))
 ))
 (let ((?x626 (lambda ((x Int) (y Int) )(let ((?x1507 (+ 1 y)))
 (let ((?x1505 (+ (- 1) x)))
 (let ((?x888 (+ (* (- 1) (* y00 ?x1505 ?x1505 ?x1507 ?x1507)) (* (- 1) (* x00 ?x1505 ?x1507 ?x1507 ?x1507)) (* 2 (* ?x1505 ?x1505 ?x1507 ?x1507 ?x1507)) (* (- 1) (* y00 ?x1505 ?x1507 ?x1507 ?x1507)) (* 2 (* ?x1505 ?x1505 ?x1507)) (* (- 1) (* x00 ?x1505 ?x1505 ?x1507 ?x1507)) (* ?x1505 ?x1505 ?x1505 ?x1507 ?x1507) (* (- 2) (* y00 ?x1505 ?x1507)) (* (- 2) (* x00 ?x1505 ?x1507)) (* 2 (* ?x1505 ?x1507 ?x1507)) (* ?x1505 ?x1507 ?x1507 ?x1507 ?x1507))))
 (let ((?x1827 (+ 1 x)))
 (let ((?x1523 (+ (- 1) y)))
 (let ((?x1736 (+ (* (- 1) (* y00 ?x1523 ?x1523 ?x1827 ?x1827)) (* (- 1) (* x00 ?x1523 ?x1523 ?x1523 ?x1827)) (* 2 (* ?x1523 ?x1523 ?x1523 ?x1827 ?x1827)) (* (- 1) (* y00 ?x1523 ?x1523 ?x1523 ?x1827)) (* 2 (* ?x1523 ?x1827 ?x1827)) (* (- 1) (* x00 ?x1523 ?x1523 ?x1827 ?x1827)) (* ?x1523 ?x1523 ?x1827 ?x1827 ?x1827) (* (- 2) (* y00 ?x1523 ?x1827)) (* (- 2) (* x00 ?x1523 ?x1827)) (* 2 (* ?x1523 ?x1523 ?x1827)) (* ?x1523 ?x1523 ?x1523 ?x1523 ?x1827))))
 (let (($x1211 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x1736 0)) (not (= ?x888 0))))))
 (let ((?x61 (- y 1)))
 (let ((?x60 (+ x 1)))
 (let ((?x64 (- (* (- 1) ?x60 ?x60 ?x61 ?x61 y00) (* ?x60 x00 ?x61 ?x61 ?x61))))
 (let ((?x68 (- (+ ?x64 (* 2 ?x60 ?x60 ?x61 ?x61 ?x61)) (* ?x60 ?x61 ?x61 ?x61 y00))))
 (let ((?x72 (- (+ ?x68 (* 2 ?x60 ?x60 ?x61)) (* ?x60 ?x60 x00 ?x61 ?x61))))
 (let ((?x77 (- (+ ?x72 (* ?x60 ?x60 ?x60 ?x61 ?x61)) (* 2 ?x60 ?x61 y00))))
 (let ((?x81 (+ (- ?x77 (* 2 ?x60 x00 ?x61)) (* 2 ?x60 ?x61 ?x61) (* ?x60 ?x61 ?x61 ?x61 ?x61))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x39 (- (* (- 1) ?x35 ?x35 ?x36 ?x36 y00) (* ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x44 (- (+ ?x39 (* 2 ?x35 ?x35 ?x36 ?x36 ?x36)) (* ?x35 ?x36 ?x36 ?x36 y00))))
 (let ((?x48 (- (+ ?x44 (* 2 ?x35 ?x35 ?x36)) (* ?x35 ?x35 x00 ?x36 ?x36))))
 (let ((?x53 (- (+ ?x48 (* ?x35 ?x35 ?x35 ?x36 ?x36)) (* 2 ?x35 ?x36 y00))))
 (let ((?x57 (+ (- ?x53 (* 2 ?x35 x00 ?x36)) (* 2 ?x35 ?x36 ?x36) (* ?x35 ?x36 ?x36 ?x36 ?x36))))
 (let (($x85 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x57 0)) (not (= ?x81 0))))))
 (rewrite (= $x85 $x1211)))))))))))))))))))))))))
 ))
 (let ((@x87 (asserted $x86)))
 (let ((@x628 (mp (mp @x87 (quant-intro (proof-bind ?x626) (= $x86 $x1508)) $x1508) (rewrite (= $x1508 $x1508)) $x1508)))
 (let ((@x1918 (mp~ (mp @x628 (quant-intro (proof-bind ?x1946) (= $x1508 $x1750)) $x1750) (sk (~ $x1750 $x1910)) $x1910)))
 (let ((@x233 (mp @x1918 (rewrite (= $x1910 $x1181)) $x1181)))
 (let ((@x2353 (and-elim @x233 $x2339)))
 (let ((@x902 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2339) $x901)) @x2353 $x901)))
 (let (($x1978 (>= ?x1317 0)))
 (let ((@x2193 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2339) $x1978)) @x2353 $x1978)))
 (let (($x396 (<= ?x2454 0)))
 (let ((@x159 (lemma ((_ th-lemma arith) (hypothesis (not $x396)) @x2193 @x902 @x2193 @x902 false) $x396)))
 (let (($x1057 (>= ?x2454 0)))
 (let ((@x1457 (lemma ((_ th-lemma arith) (hypothesis (not $x1057)) @x2193 @x902 @x2193 @x902 false) $x1057)))
 (let (($x2086 (not (<= ?x2469 0))))
 (let (($x1994 (>= ?x2469 0)))
 (let ((@x1948 (lemma ((_ th-lemma arith) (hypothesis (not $x1994)) @x2193 @x902 @x2193 @x902 false) $x1994)))
 (let ((@x2087 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2455 (not $x396) (not $x1057))) @x159 @x1457 $x2455)))
 (let ((@x2075 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2470 $x2086 (not $x1994))) (unit-resolution (and-elim @x233 $x205) @x2087 $x2426) @x1948 $x2086)))
 ((_ th-lemma arith) @x2075 @x2193 @x902 @x1457 @x159 @x2193 @x902 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        23
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-gcd-tests           8
 :arith-grobner             4
 :arith-max-min             576
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    11
 :arith-num-rows            3
 :arith-patches             6
 :arith-patches_succ        6
 :arith-pivots              3
 :arith-row-summations      4
 :arith-tableau-max-columns 46
 :arith-tableau-max-rows    3
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                19.85
 :memory                    19.34
 :mk-bool-var               9
 :mk-clause                 12
 :num-allocs                612700
 :num-checks                1
 :propagations              14
 :rlimit-count              7303
 :time                      0.01
 :total-time                0.02)
