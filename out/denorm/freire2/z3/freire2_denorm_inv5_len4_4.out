unsat
((set-logic NIA)
(declare-fun x!0 () Int)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x1234 (* x!0 x!0 x!0)))
 (let ((?x2180 (+ 3 (* 6 r!2) s!1)))
 (let ((?x2232 (* (- 1) s!1)))
 (let ((?x2315 (+ ?x2232 x!0)))
 (let ((?x1689 (+ 1 r!2)))
 (let ((?x1232 (* (- 1) (* ?x1689 ?x1689 ?x1689 ?x2315 ?x2315 ?x2180 ?x2180))))
 (let ((?x1226 (* ?x1689 ?x1689 ?x2315 ?x2315 ?x2315 ?x2180 ?x2180 ?x2180)))
 (let ((?x832 (* 3 (* s!1 s!1 x!0))))
 (let ((?x1742 (* (- 3) (* s!1 x!0 x!0))))
 (let ((?x575 (* ?x1689 ?x1689 ?x2315 ?x2315 ?x2315 ?x2180)))
 (let ((?x485 (* s!1 s!1 s!1)))
 (let ((?x773 (* (- 1) ?x485)))
 (let ((?x1243 (+ ?x773 ?x575 ?x1742 ?x832 ?x1226 ?x1232 ?x1234)))
 (let (($x939 (<= ?x1243 0)))
 (let ((?x2016 (* r!2 s!1)))
 (let ((?x2015 (* 2 ?x2016)))
 (let ((?x849 (* 6 x!0)))
 (let ((?x1002 (* (- 3) s!1)))
 (let ((?x1011 (* 3 r!2)))
 (let ((?x461 (* r00 r00 r00)))
 (let ((?x462 (* 12 ?x461)))
 (let ((?x418 (* s00 r00)))
 (let ((?x496 (* (- 6) ?x418)))
 (let ((?x493 (* (- 6) x00)))
 (let ((?x492 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1217 (+ ?x44 ?x492 ?x493 ?x496 ?x462 ?x1011 ?x1002 ?x849 ?x2015 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)))))
 (let (($x2156 (<= ?x1217 0)))
 (let (($x776 (= ?x1217 0)))
 (let ((?x2549 (* s!1 x!0)))
 (let ((?x991 (* (- 324) ?x2549)))
 (let ((?x1157 (* (- 12) (* s00 s!1 s!1))))
 (let ((?x845 (* 396 ?x2016)))
 (let ((?x1916 (* r!2 x!0)))
 (let ((?x909 (* (- 648) ?x1916)))
 (let ((?x1155 (* 36 (* r00 r00 s!1 s!1))))
 (let ((?x1152 (* (- 216) (* s00 r00 x!0))))
 (let ((?x1149 (* (- 216) (* x00 x!0))))
 (let ((?x1114 (* 432 (* r00 r00 r00 x!0))))
 (let ((?x1416 (* s!1 s!1)))
 (let ((?x2508 (* 195 ?x1416)))
 (let ((?x1059 (* (- 324) x!0)))
 (let ((?x1338 (* x00 x00)))
 (let ((?x1339 (* 108 ?x1338)))
 (let ((?x1057 (* 297 s!1)))
 (let ((?x2096 (* (- 162) r!2)))
 (let ((?x1295 (* r!2 r!2)))
 (let ((?x1006 (* (- 756) ?x1295)))
 (let ((?x1214 (* r00 x!0)))
 (let ((?x1926 (* (- 108) ?x1214)))
 (let ((?x1176 (* s00 s00 s00)))
 (let ((?x1177 (* 16 ?x1176)))
 (let ((?x1074 (* (- 432) (* r!2 r!2 s!1))))
 (let ((?x1072 (* (- 864) (* r!2 r!2 r!2))))
 (let ((?x1048 (* s00 r00 r00 r00)))
 (let ((?x1049 (* 216 ?x1048)))
 (let ((?x874 (* r00 r00 r00 x00)))
 (let ((?x904 (* (- 432) ?x874)))
 (let ((?x862 (* s00 x!0)))
 (let ((?x1132 (* 108 ?x862)))
 (let ((?x822 (* r!2 s!1 s!1)))
 (let ((?x315 (* (- 72) ?x822)))
 (let ((?x797 (* s00 x00)))
 (let ((?x1133 (* (- 108) ?x797)))
 (let ((?x792 (* x!0 x!0)))
 (let ((?x1007 (* 108 ?x792)))
 (let ((?x723 (* s00 s00 r00 r00)))
 (let ((?x767 (* (- 36) ?x723)))
 (let ((?x660 (* s00 s00 r00)))
 (let ((?x1031 (* (- 108) ?x660)))
 (let ((?x639 (* s00 r00 r00)))
 (let ((?x1266 (* (- 36) ?x639)))
 (let ((?x583 (* s00 s00)))
 (let ((?x1213 (* 51 ?x583)))
 (let ((?x514 (* r00 x00)))
 (let ((?x510 (* 108 ?x514)))
 (let ((?x505 (* s00 r00 x00)))
 (let ((?x506 (* 216 ?x505)))
 (let ((?x313 (* (- 4) ?x485)))
 (let ((?x1460 (* (- 648) ?x461)))
 (let ((?x1285 (* 270 ?x418)))
 (let ((?x293 (* r00 r00)))
 (let ((?x1316 (* 432 ?x293)))
 (let ((?x2007 (* 324 x00)))
 (let ((?x1192 (* 162 r00)))
 (let ((?x2420 (* (- 297) s00)))
 (let ((?x2078 (+ ?x2420 ?x1192 ?x2007 ?x1316 (* 324 (* x00 s!1)) ?x1285 ?x1460 ?x313 ?x506 ?x510 ?x1213 (* 648 (* x00 r!2)) ?x1266 (* 324 (* s00 r00 s!1)) ?x1031 ?x767 (* 648 (* s00 r00 r!2)) ?x1007 ?x1133 ?x315 ?x1132 (* 162 (* r00 s!1)) ?x904 ?x1049 ?x1072 ?x1074 ?x1177 (* 252 (* r00 r00 s!1)) ?x1926 ?x1006 ?x2096 ?x1057 (* (- 1296) (* r00 r00 r00 r!2)) ?x1339 ?x1059 ?x2508 ?x1114 ?x1149 (* (- 648) (* r00 r00 r00 s!1)) (* (- 144) (* s00 r!2 s!1)) ?x1152 (* (- 432) (* s00 r!2 r!2)) (* 1296 (* r00 r00 r!2 r!2)) (* 324 (* r00 r!2)) ?x1155 ?x909 (* (- 246) (* s00 s!1)) (* 432 (* r00 r00 r!2 s!1)) ?x845 ?x1157 (* (- 828) (* s00 r!2)) (* 1512 (* r00 r00 r!2)) ?x991)))
 (let ((?x2075 (* ?x1243 ?x2078)))
 (let (($x481 (= ?x2075 0)))
 (let (($x2086 (not $x481)))
 (let ((?x1927 (* (- 9) s!1)))
 (let ((?x1184 (* r00 r00 s!1)))
 (let ((?x1932 (* 36 ?x1184)))
 (let ((?x544 (* (- 54) ?x418)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1170 (+ ?x137 (* 108 (* x00 s!1)) ?x544 ?x313 ?x506 ?x510 ?x1213 ?x1266 (* 108 (* s00 r00 s!1)) ?x1031 ?x767 ?x1007 ?x1133 ?x1132 (* 54 (* r00 s!1)) ?x904 ?x1049 ?x1177 ?x1932 ?x1926 ?x1927 ?x1339 (* 15 ?x1416) ?x1114 ?x1149 (* (- 216) (* r00 r00 r00 s!1)) ?x1152 ?x1155 (* (- 66) (* s00 s!1)) ?x1157 (* (- 108) ?x2549))))
 (let (($x1269 (= ?x1170 0)))
 (let ((?x869 (* r00 r00 x00)))
 (let ((?x1448 (* 36 ?x869)))
 (let ((?x1611 (* (- 6) ?x797)))
 (let ((?x1494 (* 15 ?x583)))
 (let ((?x736 (* 54 ?x514)))
 (let ((?x649 (+ ?x137 (* 6 (* x00 s!1)) (* (- 24) ?x418) (* (- 36) (* r00 r!2 x!0)) ?x736 ?x1494 (* 54 (* x00 r!2)) ?x1266 (* 2 (* s00 r00 s!1)) (* 2 ?x660) ?x1611 (* (- 2) ?x822) (* (- 36) (* r00 r00 x!0)) (* 6 ?x862) (* 24 (* r00 s!1)) ?x1448 ?x1932 (* (- 54) ?x1214) ?x1927 (* 36 (* r00 x00 r!2)) (* (- 3) ?x1416) (* (- 2) (* s00 r!2 s!1)) (* (- 4) (* r00 s!1 s!1)) (* (- 54) ?x1916) (* (- 12) (* s00 s!1)) (* 24 ?x2016) (* 4 (* s00 s00 r!2)) (* (- 24) (* s00 r!2)) (* (- 6) ?x2549))))
 (let (($x686 (= ?x649 0)))
 (let ((?x1866 (* 4 ?x583)))
 (let ((?x1069 (* 18 ?x514)))
 (let ((?x821 (+ ?x44 (* (- 9) ?x418) ?x1069 ?x1866 (* 18 (* x00 r!2)) (* (- 6) ?x639) (* 6 (* s00 r00 r!2)) (* 9 (* r00 s!1)) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x1184) (* (- 18) ?x1214) ?x1002 (* (- 2) ?x1416) (* (- 18) ?x1916) (* (- 2) (* s00 s!1)) (* 9 ?x2016) (* (- 9) (* s00 r!2)))))
 (let (($x828 (= ?x821 0)))
 (let ((?x1615 (* (- 3) ?x293)))
 (let ((?x1571 (+ s00 ?x1615 (* 3 ?x1295) ?x2232)))
 (let (($x2397 (= ?x1571 0)))
 (let (($x469 (and $x2397 $x776 $x828 $x686 $x1269 $x2086)))
 (let ((?x352 (+ ?x2096 ?x1057 ?x1059 ?x2420 ?x1192 ?x2007 ?x1006 ?x1316 ?x845 (* 1512 (* r!2 r00 r00)) (* (- 828) (* r!2 s00)) ?x1285 ?x1460 ?x506 ?x510 ?x2508 ?x909 (* 252 (* s!1 r00 r00)) ?x1213 (* 108 (* x!0 s00)) (* (- 108) (* x!0 r00)) (* (- 648) (* s!1 r00 r00 r00)) ?x1266 (* 648 (* r!2 x00)) ?x1031 (* (- 246) (* s!1 s00)) (* 162 (* s!1 r00)) (* 324 (* s!1 x00)) (* 648 (* r!2 s00 r00)) ?x767 (* 324 (* s!1 s00 r00)) ?x313 ?x1133 ?x315 ?x991 ?x1007 ?x904 (* (- 144) (* r!2 s!1 s00)) (* (- 12) (* s!1 s!1 s00)) ?x1049 (* 432 (* x!0 r00 r00 r00)) (* 324 (* r!2 r00)) (* (- 216) (* x!0 s00 r00)) (* 36 (* s!1 s!1 r00 r00)) ?x1177 (* (- 216) (* x!0 x00)) ?x1339 (* (- 1296) (* r!2 r00 r00 r00)) ?x1072 ?x1074 (* 1296 (* r!2 r!2 r00 r00)) (* (- 432) (* r!2 r!2 s00)) (* 432 (* r!2 s!1 r00 r00)))))
 (let ((?x1368 (* (- 108) ?x1338)))
 (let ((?x1367 (* (- 16) ?x1176)))
 (let ((?x1363 (* (- 216) ?x1048)))
 (let ((?x875 (* 432 ?x874)))
 (let ((?x1121 (* 108 ?x797)))
 (let ((?x724 (* 36 ?x723)))
 (let ((?x1004 (* 108 ?x660)))
 (let ((?x992 (* 36 ?x639)))
 (let ((?x1357 (* (- 51) ?x583)))
 (let ((?x1882 (* s!1 r00 r00)))
 (let ((?x1533 (* (- 36) ?x1882)))
 (let ((?x1354 (* (- 108) ?x514)))
 (let ((?x1353 (* (- 216) ?x505)))
 (let ((?x512 (* 54 ?x418)))
 (let ((?x979 (* (- 9) s00)))
 (let ((?x704 (* 9 s!1)))
 (let ((?x2473 (+ ?x704 ?x979 ?x512 ?x1353 ?x1354 (* (- 15) ?x1416) ?x1533 ?x1357 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x992 ?x1004 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x724 (* (- 108) (* s!1 s00 r00)) (* 4 ?x485) ?x1121 (* 108 ?x2549) (* (- 108) ?x792) ?x875 (* 12 (* s!1 s!1 s00)) ?x1363 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1367 (* 216 (* x!0 x00)) ?x1368)))
 (let ((?x882 (* (- 36) ?x869)))
 (let ((?x798 (* 6 ?x797)))
 (let ((?x688 (* (- 2) ?x660)))
 (let ((?x908 (* (- 15) ?x583)))
 (let ((?x543 (* (- 54) ?x514)))
 (let ((?x556 (* 24 ?x418)))
 (let ((?x941 (+ ?x704 ?x979 (* (- 24) ?x2016) (* 24 (* r!2 s00)) ?x556 ?x543 (* 3 ?x1416) (* 54 ?x1916) (* 36 (* r!2 x!0 r00)) ?x1533 ?x908 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x992 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x688 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x798 (* 2 ?x822) (* 6 ?x2549) (* (- 4) (* r!2 s00 s00)) ?x882 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x640 (* 6 ?x639)))
 (let ((?x596 (* (- 4) ?x583)))
 (let ((?x528 (* (- 18) ?x514)))
 (let ((?x533 (* 9 ?x418)))
 (let ((?x370 (* (- 3) s00)))
 (let ((?x2441 (+ (* 3 s!1) ?x370 (* (- 9) ?x2016) (* 9 (* r!2 s00)) ?x533 ?x528 (* 2 ?x1416) (* 18 ?x1916) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1882) ?x596 (* 18 (* x!0 r00)) ?x640 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1168 (+ ?x1011 ?x1002 ?x849 ?x44 ?x492 ?x493 ?x2015 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x496 ?x462)))
 (let (($x530 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x1295) (* 3 ?x293)) 0) (= ?x1168 0) (= ?x2441 0) (= ?x941 0) (= ?x2473 0) (not (= (* (+ ?x773 ?x575 ?x1226 ?x1232 ?x1234 ?x832 ?x1742) ?x352) 0)))))
 (let (($x1139 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1919 (* (- 432) (* r r s00))))
 (let ((?x1762 (* (- 432) (* r r s))))
 (let ((?x1708 (* (- 864) (* r r r))))
 (let ((?x1471 (* (- 1296) (* r r00 r00 r00))))
 (let ((?x1338 (* x00 x00)))
 (let ((?x1339 (* 108 ?x1338)))
 (let ((?x1312 (* x x00)))
 (let ((?x1325 (* (- 216) ?x1312)))
 (let ((?x1176 (* s00 s00 s00)))
 (let ((?x1177 (* 16 ?x1176)))
 (let ((?x1146 (* x s00 r00)))
 (let ((?x1159 (* (- 216) ?x1146)))
 (let ((?x1048 (* s00 r00 r00 r00)))
 (let ((?x1049 (* 216 ?x1048)))
 (let ((?x932 (* s s s00)))
 (let ((?x961 (* (- 12) ?x932)))
 (let ((?x921 (* r s s00)))
 (let ((?x1938 (* (- 144) ?x921)))
 (let ((?x874 (* r00 r00 r00 x00)))
 (let ((?x904 (* (- 432) ?x874)))
 (let ((?x846 (* x x)))
 (let ((?x847 (* 108 ?x846)))
 (let ((?x801 (* r s s)))
 (let ((?x1763 (* (- 72) ?x801)))
 (let ((?x797 (* s00 x00)))
 (let ((?x1133 (* (- 108) ?x797)))
 (let ((?x795 (* s s s)))
 (let ((?x815 (* (- 4) ?x795)))
 (let ((?x723 (* s00 s00 r00 r00)))
 (let ((?x767 (* (- 36) ?x723)))
 (let ((?x716 (* s x00)))
 (let ((?x2563 (* 324 ?x716)))
 (let ((?x660 (* s00 s00 r00)))
 (let ((?x1031 (* (- 108) ?x660)))
 (let ((?x639 (* s00 r00 r00)))
 (let ((?x1266 (* (- 36) ?x639)))
 (let ((?x609 (* x r00)))
 (let ((?x1236 (* (- 108) ?x609)))
 (let ((?x583 (* s00 s00)))
 (let ((?x1213 (* 51 ?x583)))
 (let ((?x541 (* r x)))
 (let ((?x2302 (* (- 648) ?x541)))
 (let ((?x514 (* r00 x00)))
 (let ((?x510 (* 108 ?x514)))
 (let ((?x505 (* s00 r00 x00)))
 (let ((?x506 (* 216 ?x505)))
 (let ((?x461 (* r00 r00 r00)))
 (let ((?x1460 (* (- 648) ?x461)))
 (let ((?x418 (* s00 r00)))
 (let ((?x1285 (* 270 ?x418)))
 (let ((?x391 (* r s00)))
 (let ((?x2102 (* (- 828) ?x391)))
 (let ((?x293 (* r00 r00)))
 (let ((?x1316 (* 432 ?x293)))
 (let ((?x2007 (* 324 x00)))
 (let ((?x1192 (* 162 r00)))
 (let ((?x2420 (* (- 297) s00)))
 (let ((?x2292 (* (- 324) x)))
 (let ((?x1323 (+ (* (- 162) r) (* 297 s) ?x2292 ?x2420 ?x1192 ?x2007 (* (- 756) (* r r)) ?x1316 (* 396 (* r s)) (* 1512 (* r r00 r00)) ?x2102 ?x1285 ?x1460 ?x506 ?x510 (* 195 (* s s)) ?x2302 (* 252 (* s r00 r00)) ?x1213 (* 108 (* x s00)) ?x1236 (* (- 648) (* s r00 r00 r00)) ?x1266 (* 648 (* r x00)) ?x1031 (* (- 246) (* s s00)) (* 162 (* s r00)) ?x2563 (* 648 (* r s00 r00)) ?x767 (* 324 (* s s00 r00)) ?x815 ?x1133 ?x1763 (* (- 324) (* s x)) ?x847 ?x904 ?x1938 ?x961 ?x1049 (* 432 (* x r00 r00 r00)) (* 324 (* r r00)) ?x1159 (* 36 (* s s r00 r00)) ?x1177 ?x1325 ?x1339 ?x1471 ?x1708 ?x1762 (* 1296 (* r r r00 r00)) ?x1919 (* 432 (* r s r00 r00)))))
 (let ((?x2718 (* (- 3) (* s x x))))
 (let ((?x2721 (* 3 (* s s x))))
 (let ((?x2666 (* x x x)))
 (let ((?x211 (* 6 r)))
 (let ((?x1375 (+ 3 ?x211 s)))
 (let ((?x272 (* (- 1) s)))
 (let ((?x1791 (+ ?x272 x)))
 (let ((?x2581 (+ 1 r)))
 (let ((?x2674 (* (- 1) ?x795)))
 (let ((?x1989 (+ ?x2674 (* ?x2581 ?x2581 ?x1791 ?x1791 ?x1791 ?x1375) (* ?x2581 ?x2581 ?x1791 ?x1791 ?x1791 ?x1375 ?x1375 ?x1375) (* (- 1) (* ?x2581 ?x2581 ?x2581 ?x1791 ?x1791 ?x1375 ?x1375)) ?x2666 ?x2721 ?x2718)))
 (let ((?x1368 (* (- 108) ?x1338)))
 (let ((?x1367 (* (- 16) ?x1176)))
 (let ((?x1363 (* (- 216) ?x1048)))
 (let ((?x875 (* 432 ?x874)))
 (let ((?x1121 (* 108 ?x797)))
 (let ((?x724 (* 36 ?x723)))
 (let ((?x1004 (* 108 ?x660)))
 (let ((?x992 (* 36 ?x639)))
 (let ((?x1357 (* (- 51) ?x583)))
 (let ((?x557 (* s r00 r00)))
 (let ((?x856 (* (- 36) ?x557)))
 (let ((?x1354 (* (- 108) ?x514)))
 (let ((?x1353 (* (- 216) ?x505)))
 (let ((?x512 (* 54 ?x418)))
 (let ((?x979 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1369 (+ ?x143 ?x979 ?x512 ?x1353 ?x1354 (* (- 15) (* s s)) ?x856 ?x1357 (* (- 108) (* x s00)) (* 108 ?x609) (* 216 (* s r00 r00 r00)) ?x992 ?x1004 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x716) ?x724 (* (- 108) (* s s00 r00)) (* 4 ?x795) ?x1121 (* 108 (* s x)) (* (- 108) ?x846) ?x875 (* 12 ?x932) ?x1363 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1146) (* (- 36) (* s s r00 r00)) ?x1367 (* 216 ?x1312) ?x1368)))
 (let (($x1370 (= ?x1369 0)))
 (let ((?x869 (* r00 r00 x00)))
 (let ((?x882 (* (- 36) ?x869)))
 (let ((?x798 (* 6 ?x797)))
 (let ((?x688 (* (- 2) ?x660)))
 (let ((?x908 (* (- 15) ?x583)))
 (let ((?x537 (* s s)))
 (let ((?x561 (* 3 ?x537)))
 (let ((?x543 (* (- 54) ?x514)))
 (let ((?x556 (* 24 ?x418)))
 (let ((?x1071 (+ ?x143 ?x979 (* (- 24) (* r s)) (* 24 ?x391) ?x556 ?x543 ?x561 (* 54 ?x541) (* 36 (* r x r00)) ?x856 ?x908 (* (- 6) (* x s00)) (* 54 ?x609) ?x992 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x688 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x716) (* (- 2) (* s s00 r00)) ?x798 (* 2 ?x801) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x882 (* 2 ?x921) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1076 (= ?x1071 0)))
 (let ((?x640 (* 6 ?x639)))
 (let ((?x596 (* (- 4) ?x583)))
 (let ((?x538 (* 2 ?x537)))
 (let ((?x528 (* (- 18) ?x514)))
 (let ((?x533 (* 9 ?x418)))
 (let ((?x370 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x737 (+ ?x47 ?x370 (* (- 9) (* r s)) (* 9 ?x391) ?x533 ?x528 ?x538 (* 18 ?x541) (* 6 (* r s r00)) (* (- 6) ?x557) ?x596 (* 18 ?x609) ?x640 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x744 (= ?x737 0)))
 (let ((?x462 (* 12 ?x461)))
 (let ((?x496 (* (- 6) ?x418)))
 (let ((?x493 (* (- 6) x00)))
 (let ((?x492 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x491 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x497 (+ ?x43 ?x491 ?x56 ?x44 ?x492 ?x493 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 ?x391) ?x496 ?x462)))
 (let (($x498 (= ?x497 0)))
 (let (($x326 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x293)) 0)))
 (and $x326 $x498 $x744 $x1076 $x1370 (not (= (* ?x1989 ?x1323) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1860 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1338 (* x00 x00)))
 (let ((?x1339 (* 108 ?x1338)))
 (let ((?x1690 (* (- 9) s)))
 (let ((?x671 (* r00 r00 s00)))
 (let ((?x1457 (* (- 36) ?x671)))
 (let ((?x137 (* 9 s00)))
 (let ((?x583 (* s00 s00)))
 (let ((?x1213 (* 51 ?x583)))
 (let ((?x1034 (* (- 108) (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x1176 (* s00 s00 s00)))
 (let ((?x1177 (* 16 ?x1176)))
 (let ((?x211 (* 6 r)))
 (let ((?x1569 (+ 3 s ?x211)))
 (let ((?x797 (* s00 x00)))
 (let ((?x1133 (* (- 108) ?x797)))
 (let ((?x2399 (* 216 (* r00 r00 r00 s00))))
 (let ((?x844 (* r00 s00 s00)))
 (let ((?x2561 (* (- 108) ?x844)))
 (let ((?x874 (* r00 r00 r00 x00)))
 (let ((?x904 (* (- 432) ?x874)))
 (let ((?x1854 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x1719 (* r00 s00)))
 (let ((?x1700 (* (- 54) ?x1719)))
 (let ((?x514 (* r00 x00)))
 (let ((?x510 (* 108 ?x514)))
 (let ((?x1669 (* 216 (* r00 s00 x00))))
 (let ((?x1107 (+ (- 27) ?x1669 ?x510 ?x1700 (* 15 (* ?x1569 ?x1569)) (* (- 216) (* r00 r00 r00 ?x1569)) ?x1854 (* (- 4) (* ?x1569 ?x1569 ?x1569)) (* 108 (* (+ x (* (- 1) s)) (+ x (* (- 1) s)))) ?x904 (* (- 12) (* s00 ?x1569 ?x1569)) (* 108 (* s00 (+ x (* (- 1) s)))) ?x2561 ?x2399 (* 108 (* x00 ?x1569)) (* 432 (* r00 r00 r00 (+ x (* (- 1) s)))) (* (- 66) (* s00 ?x1569)) (* 108 (* r00 s00 ?x1569)) ?x1133 (* (- 216) (* r00 s00 (+ x (* (- 1) s)))) (* 36 (* r00 r00 ?x1569 ?x1569)) ?x1177 ?x1034 (* 36 (* r00 r00 ?x1569)) ?x1213 (* (- 108) (* r00 (+ x (* (- 1) s)))) ?x137 ?x1457 ?x1690 (* (- 54) r) (* 54 (* r00 ?x1569)) (* (- 216) (* x00 (+ x (* (- 1) s)))) ?x1339)))
 (let ((?x272 (* (- 1) s)))
 (let ((?x689 (+ x ?x272)))
 (let ((?x2581 (+ 1 r)))
 (let ((?x442 (+ (* (- 1) (* ?x2581 ?x2581 ?x2581 ?x689 ?x689 ?x1569 ?x1569)) (* ?x2581 ?x2581 ?x689 ?x689 ?x689 ?x1569) (* ?x2581 ?x2581 ?x689 ?x689 ?x689 ?x1569 ?x1569 ?x1569) (* ?x689 ?x689 ?x689))))
 (let (($x1766 (not (= (* ?x442 ?x1107) 0))))
 (let ((?x2378 (* r00 s)))
 (let ((?x2500 (* 54 ?x2378)))
 (let ((?x2337 (* r00 r00 s)))
 (let ((?x2338 (* 36 ?x2337)))
 (let ((?x2223 (* 36 (* r00 r00 s s))))
 (let ((?x2026 (* 432 (* r00 r00 r00 x))))
 (let ((?x1961 (* s00 x)))
 (let ((?x1962 (* 108 ?x1961)))
 (let ((?x846 (* x x)))
 (let ((?x847 (* 108 ?x846)))
 (let ((?x795 (* s s s)))
 (let ((?x815 (* (- 4) ?x795)))
 (let ((?x734 (+ ?x1669 ?x510 ?x1700 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x1854 ?x815 ?x847 ?x904 (* (- 12) (* s00 s s)) ?x1962 ?x2561 ?x2399 (* 108 (* x00 s)) ?x2026 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1133 (* (- 216) (* r00 s00 x)) ?x2223 ?x1177 (* (- 108) (* x s)) ?x2338 ?x1213 (* (- 108) (* r00 x)) ?x137 ?x1457 ?x1690 ?x2500 (* (- 216) (* x00 x)) ?x1339)))
 (let (($x740 (= ?x734 0)))
 (let ((?x1494 (* 15 ?x583)))
 (let ((?x869 (* r00 r00 x00)))
 (let ((?x1448 (* 36 ?x869)))
 (let ((?x1611 (* (- 6) ?x797)))
 (let ((?x736 (* 54 ?x514)))
 (let ((?x2148 (+ (* 24 (* s r)) ?x736 (* (- 36) (* r00 x r)) (* (- 24) ?x1719) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 ?x1961) (* (- 4) (* r00 s s)) (* 2 ?x844) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1611 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2338 ?x1448 ?x1494 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1457 (* 54 (* x00 r)) ?x1690 (* (- 24) (* s00 r)) (* 24 ?x2378) (* (- 36) (* r00 r00 x)))))
 (let ((?x491 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1866 (* 4 ?x583)))
 (let ((?x1069 (* 18 ?x514)))
 (let ((?x2555 (+ (* 9 (* s r)) ?x1069 (* (- 9) ?x1719) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2337) ?x1866 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x671) (* 18 (* x00 r)) ?x491 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 ?x2378) (* 6 (* r00 s00 r)))))
 (let ((?x461 (* r00 r00 r00)))
 (let ((?x462 (* 12 ?x461)))
 (let ((?x493 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x492 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1845 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x491 ?x492 (* 4 (* s00 r)) (* (- 6) ?x1719) ?x56 ?x493 ?x462)))
 (let (($x819 (= (+ s00 ?x272 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x819 (= ?x1845 0) (= ?x2555 0) (= ?x2148 0) $x740 $x1766)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1167 (lambda ((r Int) (s Int) (x Int) )(let ((?x1919 (* (- 432) (* r r s00))))
 (let ((?x1762 (* (- 432) (* r r s))))
 (let ((?x1708 (* (- 864) (* r r r))))
 (let ((?x1471 (* (- 1296) (* r r00 r00 r00))))
 (let ((?x1338 (* x00 x00)))
 (let ((?x1339 (* 108 ?x1338)))
 (let ((?x1312 (* x x00)))
 (let ((?x1325 (* (- 216) ?x1312)))
 (let ((?x1176 (* s00 s00 s00)))
 (let ((?x1177 (* 16 ?x1176)))
 (let ((?x1146 (* x s00 r00)))
 (let ((?x1159 (* (- 216) ?x1146)))
 (let ((?x1048 (* s00 r00 r00 r00)))
 (let ((?x1049 (* 216 ?x1048)))
 (let ((?x932 (* s s s00)))
 (let ((?x961 (* (- 12) ?x932)))
 (let ((?x921 (* r s s00)))
 (let ((?x1938 (* (- 144) ?x921)))
 (let ((?x874 (* r00 r00 r00 x00)))
 (let ((?x904 (* (- 432) ?x874)))
 (let ((?x846 (* x x)))
 (let ((?x847 (* 108 ?x846)))
 (let ((?x801 (* r s s)))
 (let ((?x1763 (* (- 72) ?x801)))
 (let ((?x797 (* s00 x00)))
 (let ((?x1133 (* (- 108) ?x797)))
 (let ((?x795 (* s s s)))
 (let ((?x815 (* (- 4) ?x795)))
 (let ((?x723 (* s00 s00 r00 r00)))
 (let ((?x767 (* (- 36) ?x723)))
 (let ((?x716 (* s x00)))
 (let ((?x2563 (* 324 ?x716)))
 (let ((?x660 (* s00 s00 r00)))
 (let ((?x1031 (* (- 108) ?x660)))
 (let ((?x639 (* s00 r00 r00)))
 (let ((?x1266 (* (- 36) ?x639)))
 (let ((?x609 (* x r00)))
 (let ((?x1236 (* (- 108) ?x609)))
 (let ((?x583 (* s00 s00)))
 (let ((?x1213 (* 51 ?x583)))
 (let ((?x541 (* r x)))
 (let ((?x2302 (* (- 648) ?x541)))
 (let ((?x514 (* r00 x00)))
 (let ((?x510 (* 108 ?x514)))
 (let ((?x505 (* s00 r00 x00)))
 (let ((?x506 (* 216 ?x505)))
 (let ((?x461 (* r00 r00 r00)))
 (let ((?x1460 (* (- 648) ?x461)))
 (let ((?x418 (* s00 r00)))
 (let ((?x1285 (* 270 ?x418)))
 (let ((?x391 (* r s00)))
 (let ((?x2102 (* (- 828) ?x391)))
 (let ((?x293 (* r00 r00)))
 (let ((?x1316 (* 432 ?x293)))
 (let ((?x2007 (* 324 x00)))
 (let ((?x1192 (* 162 r00)))
 (let ((?x2420 (* (- 297) s00)))
 (let ((?x2292 (* (- 324) x)))
 (let ((?x1323 (+ (* (- 162) r) (* 297 s) ?x2292 ?x2420 ?x1192 ?x2007 (* (- 756) (* r r)) ?x1316 (* 396 (* r s)) (* 1512 (* r r00 r00)) ?x2102 ?x1285 ?x1460 ?x506 ?x510 (* 195 (* s s)) ?x2302 (* 252 (* s r00 r00)) ?x1213 (* 108 (* x s00)) ?x1236 (* (- 648) (* s r00 r00 r00)) ?x1266 (* 648 (* r x00)) ?x1031 (* (- 246) (* s s00)) (* 162 (* s r00)) ?x2563 (* 648 (* r s00 r00)) ?x767 (* 324 (* s s00 r00)) ?x815 ?x1133 ?x1763 (* (- 324) (* s x)) ?x847 ?x904 ?x1938 ?x961 ?x1049 (* 432 (* x r00 r00 r00)) (* 324 (* r r00)) ?x1159 (* 36 (* s s r00 r00)) ?x1177 ?x1325 ?x1339 ?x1471 ?x1708 ?x1762 (* 1296 (* r r r00 r00)) ?x1919 (* 432 (* r s r00 r00)))))
 (let ((?x2718 (* (- 3) (* s x x))))
 (let ((?x2721 (* 3 (* s s x))))
 (let ((?x2666 (* x x x)))
 (let ((?x211 (* 6 r)))
 (let ((?x1375 (+ 3 ?x211 s)))
 (let ((?x272 (* (- 1) s)))
 (let ((?x1791 (+ ?x272 x)))
 (let ((?x2581 (+ 1 r)))
 (let ((?x2674 (* (- 1) ?x795)))
 (let ((?x1989 (+ ?x2674 (* ?x2581 ?x2581 ?x1791 ?x1791 ?x1791 ?x1375) (* ?x2581 ?x2581 ?x1791 ?x1791 ?x1791 ?x1375 ?x1375 ?x1375) (* (- 1) (* ?x2581 ?x2581 ?x2581 ?x1791 ?x1791 ?x1375 ?x1375)) ?x2666 ?x2721 ?x2718)))
 (let ((?x1368 (* (- 108) ?x1338)))
 (let ((?x1367 (* (- 16) ?x1176)))
 (let ((?x1363 (* (- 216) ?x1048)))
 (let ((?x875 (* 432 ?x874)))
 (let ((?x1121 (* 108 ?x797)))
 (let ((?x724 (* 36 ?x723)))
 (let ((?x1004 (* 108 ?x660)))
 (let ((?x992 (* 36 ?x639)))
 (let ((?x1357 (* (- 51) ?x583)))
 (let ((?x557 (* s r00 r00)))
 (let ((?x856 (* (- 36) ?x557)))
 (let ((?x1354 (* (- 108) ?x514)))
 (let ((?x1353 (* (- 216) ?x505)))
 (let ((?x512 (* 54 ?x418)))
 (let ((?x979 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1369 (+ ?x143 ?x979 ?x512 ?x1353 ?x1354 (* (- 15) (* s s)) ?x856 ?x1357 (* (- 108) (* x s00)) (* 108 ?x609) (* 216 (* s r00 r00 r00)) ?x992 ?x1004 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x716) ?x724 (* (- 108) (* s s00 r00)) (* 4 ?x795) ?x1121 (* 108 (* s x)) (* (- 108) ?x846) ?x875 (* 12 ?x932) ?x1363 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1146) (* (- 36) (* s s r00 r00)) ?x1367 (* 216 ?x1312) ?x1368)))
 (let (($x1370 (= ?x1369 0)))
 (let ((?x869 (* r00 r00 x00)))
 (let ((?x882 (* (- 36) ?x869)))
 (let ((?x798 (* 6 ?x797)))
 (let ((?x688 (* (- 2) ?x660)))
 (let ((?x908 (* (- 15) ?x583)))
 (let ((?x537 (* s s)))
 (let ((?x561 (* 3 ?x537)))
 (let ((?x543 (* (- 54) ?x514)))
 (let ((?x556 (* 24 ?x418)))
 (let ((?x1071 (+ ?x143 ?x979 (* (- 24) (* r s)) (* 24 ?x391) ?x556 ?x543 ?x561 (* 54 ?x541) (* 36 (* r x r00)) ?x856 ?x908 (* (- 6) (* x s00)) (* 54 ?x609) ?x992 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x688 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x716) (* (- 2) (* s s00 r00)) ?x798 (* 2 ?x801) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x882 (* 2 ?x921) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1076 (= ?x1071 0)))
 (let ((?x640 (* 6 ?x639)))
 (let ((?x596 (* (- 4) ?x583)))
 (let ((?x538 (* 2 ?x537)))
 (let ((?x528 (* (- 18) ?x514)))
 (let ((?x533 (* 9 ?x418)))
 (let ((?x370 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x737 (+ ?x47 ?x370 (* (- 9) (* r s)) (* 9 ?x391) ?x533 ?x528 ?x538 (* 18 ?x541) (* 6 (* r s r00)) (* (- 6) ?x557) ?x596 (* 18 ?x609) ?x640 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x744 (= ?x737 0)))
 (let ((?x462 (* 12 ?x461)))
 (let ((?x496 (* (- 6) ?x418)))
 (let ((?x493 (* (- 6) x00)))
 (let ((?x492 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x491 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x497 (+ ?x43 ?x491 ?x56 ?x44 ?x492 ?x493 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 ?x391) ?x496 ?x462)))
 (let (($x498 (= ?x497 0)))
 (let (($x326 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x293)) 0)))
 (let (($x759 (and $x326 $x498 $x744 $x1076 $x1370 (not (= (* ?x1989 ?x1323) 0)))))
 (let ((?x1690 (* (- 9) s)))
 (let ((?x671 (* r00 r00 s00)))
 (let ((?x1457 (* (- 36) ?x671)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2399 (* 216 (* r00 r00 r00 s00))))
 (let ((?x844 (* r00 s00 s00)))
 (let ((?x2561 (* (- 108) ?x844)))
 (let ((?x2404 (* (- 4) (* (+ 3 s ?x211) (+ 3 s ?x211) (+ 3 s ?x211)))))
 (let ((?x1854 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x1719 (* r00 s00)))
 (let ((?x1700 (* (- 54) ?x1719)))
 (let ((?x1669 (* 216 (* r00 s00 x00))))
 (let ((?x1107 (+ (- 27) ?x1669 ?x510 ?x1700 (* 15 (* (+ 3 s ?x211) (+ 3 s ?x211))) (* (- 216) (* r00 r00 r00 (+ 3 s ?x211))) ?x1854 ?x2404 (* 108 (* (+ x ?x272) (+ x ?x272))) ?x904 (* (- 12) (* s00 (+ 3 s ?x211) (+ 3 s ?x211))) (* 108 (* s00 (+ x ?x272))) ?x2561 ?x2399 (* 108 (* x00 (+ 3 s ?x211))) (* 432 (* r00 r00 r00 (+ x ?x272))) (* (- 66) (* s00 (+ 3 s ?x211))) (* 108 (* r00 s00 (+ 3 s ?x211))) ?x1133 (* (- 216) (* r00 s00 (+ x ?x272))) (* 36 (* r00 r00 (+ 3 s ?x211) (+ 3 s ?x211))) ?x1177 (* (- 108) (* (+ x ?x272) (+ 3 s ?x211))) (* 36 (* r00 r00 (+ 3 s ?x211))) ?x1213 (* (- 108) (* r00 (+ x ?x272))) ?x137 ?x1457 ?x1690 (* (- 54) r) (* 54 (* r00 (+ 3 s ?x211))) (* (- 216) (* x00 (+ x ?x272))) ?x1339)))
 (let ((?x1569 (+ 3 s ?x211)))
 (let ((?x689 (+ x ?x272)))
 (let ((?x442 (+ (* (- 1) (* ?x2581 ?x2581 ?x2581 ?x689 ?x689 ?x1569 ?x1569)) (* ?x2581 ?x2581 ?x689 ?x689 ?x689 ?x1569) (* ?x2581 ?x2581 ?x689 ?x689 ?x689 ?x1569 ?x1569 ?x1569) (* ?x689 ?x689 ?x689))))
 (let (($x1766 (not (= (* ?x442 ?x1107) 0))))
 (let ((?x2378 (* r00 s)))
 (let ((?x2500 (* 54 ?x2378)))
 (let ((?x2337 (* r00 r00 s)))
 (let ((?x2338 (* 36 ?x2337)))
 (let ((?x2223 (* 36 (* r00 r00 s s))))
 (let ((?x2026 (* 432 (* r00 r00 r00 x))))
 (let ((?x1961 (* s00 x)))
 (let ((?x1962 (* 108 ?x1961)))
 (let ((?x734 (+ ?x1669 ?x510 ?x1700 (* 15 ?x537) (* (- 216) (* r00 r00 r00 s)) ?x1854 ?x815 ?x847 ?x904 (* (- 12) (* s00 s s)) ?x1962 ?x2561 ?x2399 (* 108 (* x00 s)) ?x2026 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1133 (* (- 216) (* r00 s00 x)) ?x2223 ?x1177 (* (- 108) (* x s)) ?x2338 ?x1213 (* (- 108) (* r00 x)) ?x137 ?x1457 ?x1690 ?x2500 (* (- 216) (* x00 x)) ?x1339)))
 (let (($x740 (= ?x734 0)))
 (let ((?x1494 (* 15 ?x583)))
 (let ((?x1448 (* 36 ?x869)))
 (let ((?x1611 (* (- 6) ?x797)))
 (let ((?x736 (* 54 ?x514)))
 (let ((?x2148 (+ (* 24 (* s r)) ?x736 (* (- 36) (* r00 x r)) (* (- 24) ?x1719) (* (- 3) ?x537) (* (- 54) (* x r)) (* 6 ?x1961) (* (- 4) (* r00 s s)) (* 2 ?x844) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1611 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2338 ?x1448 ?x1494 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1457 (* 54 (* x00 r)) ?x1690 (* (- 24) (* s00 r)) (* 24 ?x2378) (* (- 36) (* r00 r00 x)))))
 (let ((?x1866 (* 4 ?x583)))
 (let ((?x1069 (* 18 ?x514)))
 (let ((?x2555 (+ (* 9 (* s r)) ?x1069 (* (- 9) ?x1719) (* (- 2) ?x537) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2337) ?x1866 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x671) (* 18 (* x00 r)) ?x491 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 ?x2378) (* 6 (* r00 s00 r)))))
 (let ((?x1845 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x491 ?x492 (* 4 (* s00 r)) (* (- 6) ?x1719) ?x56 ?x493 ?x462)))
 (let (($x819 (= (+ s00 ?x272 (* 3 (* r r)) (* (- 3) ?x293)) 0)))
 (let (($x1875 (and $x819 (= ?x1845 0) (= ?x2555 0) (= ?x2148 0) $x740 $x1766)))
 (rewrite (= $x1875 $x759))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x364 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1338 (* x00 x00)))
 (let ((?x1339 (* 108 ?x1338)))
 (let ((?x1690 (* (- 9) s)))
 (let ((?x671 (* r00 r00 s00)))
 (let ((?x1457 (* (- 36) ?x671)))
 (let ((?x137 (* 9 s00)))
 (let ((?x583 (* s00 s00)))
 (let ((?x1213 (* 51 ?x583)))
 (let ((?x1034 (* (- 108) (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x1176 (* s00 s00 s00)))
 (let ((?x1177 (* 16 ?x1176)))
 (let ((?x211 (* 6 r)))
 (let ((?x1569 (+ 3 s ?x211)))
 (let ((?x797 (* s00 x00)))
 (let ((?x1133 (* (- 108) ?x797)))
 (let ((?x2399 (* 216 (* r00 r00 r00 s00))))
 (let ((?x844 (* r00 s00 s00)))
 (let ((?x2561 (* (- 108) ?x844)))
 (let ((?x874 (* r00 r00 r00 x00)))
 (let ((?x904 (* (- 432) ?x874)))
 (let ((?x1854 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x1719 (* r00 s00)))
 (let ((?x1700 (* (- 54) ?x1719)))
 (let ((?x514 (* r00 x00)))
 (let ((?x510 (* 108 ?x514)))
 (let ((?x1669 (* 216 (* r00 s00 x00))))
 (let ((?x1107 (+ (- 27) ?x1669 ?x510 ?x1700 (* 15 (* ?x1569 ?x1569)) (* (- 216) (* r00 r00 r00 ?x1569)) ?x1854 (* (- 4) (* ?x1569 ?x1569 ?x1569)) (* 108 (* (+ x (* (- 1) s)) (+ x (* (- 1) s)))) ?x904 (* (- 12) (* s00 ?x1569 ?x1569)) (* 108 (* s00 (+ x (* (- 1) s)))) ?x2561 ?x2399 (* 108 (* x00 ?x1569)) (* 432 (* r00 r00 r00 (+ x (* (- 1) s)))) (* (- 66) (* s00 ?x1569)) (* 108 (* r00 s00 ?x1569)) ?x1133 (* (- 216) (* r00 s00 (+ x (* (- 1) s)))) (* 36 (* r00 r00 ?x1569 ?x1569)) ?x1177 ?x1034 (* 36 (* r00 r00 ?x1569)) ?x1213 (* (- 108) (* r00 (+ x (* (- 1) s)))) ?x137 ?x1457 ?x1690 (* (- 54) r) (* 54 (* r00 ?x1569)) (* (- 216) (* x00 (+ x (* (- 1) s)))) ?x1339)))
 (let ((?x272 (* (- 1) s)))
 (let ((?x689 (+ x ?x272)))
 (let ((?x2581 (+ 1 r)))
 (let ((?x442 (+ (* (- 1) (* ?x2581 ?x2581 ?x2581 ?x689 ?x689 ?x1569 ?x1569)) (* ?x2581 ?x2581 ?x689 ?x689 ?x689 ?x1569) (* ?x2581 ?x2581 ?x689 ?x689 ?x689 ?x1569 ?x1569 ?x1569) (* ?x689 ?x689 ?x689))))
 (let (($x1766 (not (= (* ?x442 ?x1107) 0))))
 (let ((?x2378 (* r00 s)))
 (let ((?x2500 (* 54 ?x2378)))
 (let ((?x2337 (* r00 r00 s)))
 (let ((?x2338 (* 36 ?x2337)))
 (let ((?x2223 (* 36 (* r00 r00 s s))))
 (let ((?x2026 (* 432 (* r00 r00 r00 x))))
 (let ((?x1961 (* s00 x)))
 (let ((?x1962 (* 108 ?x1961)))
 (let ((?x846 (* x x)))
 (let ((?x847 (* 108 ?x846)))
 (let ((?x795 (* s s s)))
 (let ((?x815 (* (- 4) ?x795)))
 (let ((?x734 (+ ?x1669 ?x510 ?x1700 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x1854 ?x815 ?x847 ?x904 (* (- 12) (* s00 s s)) ?x1962 ?x2561 ?x2399 (* 108 (* x00 s)) ?x2026 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1133 (* (- 216) (* r00 s00 x)) ?x2223 ?x1177 (* (- 108) (* x s)) ?x2338 ?x1213 (* (- 108) (* r00 x)) ?x137 ?x1457 ?x1690 ?x2500 (* (- 216) (* x00 x)) ?x1339)))
 (let (($x740 (= ?x734 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x979 (* (- 9) s00)))
 (let ((?x908 (* (- 15) ?x583)))
 (let ((?x869 (* r00 r00 x00)))
 (let ((?x882 (* (- 36) ?x869)))
 (let ((?x798 (* 6 ?x797)))
 (let ((?x537 (* s s)))
 (let ((?x561 (* 3 ?x537)))
 (let ((?x543 (* (- 54) ?x514)))
 (let ((?x682 (+ (* (- 24) (* s r)) ?x543 (* 36 (* r00 x r)) (* 24 ?x1719) ?x561 (* 54 (* x r)) (* (- 6) ?x1961) (* 4 (* r00 s s)) (* (- 2) ?x844) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x798 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2337) ?x882 ?x908 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x979 (* 36 ?x671) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2378) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x370 (* (- 3) s00)))
 (let ((?x596 (* (- 4) ?x583)))
 (let ((?x538 (* 2 ?x537)))
 (let ((?x528 (* (- 18) ?x514)))
 (let ((?x1335 (+ (* (- 9) (* s r)) ?x528 (* 9 ?x1719) ?x538 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2337) ?x596 (* 18 (* r00 x)) ?x370 (* 6 ?x671) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2378) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1754 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x370 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1719) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x819 (= (+ s00 ?x272 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x819 (= ?x1754 0) (= ?x1335 0) (= ?x682 0) $x740 $x1766))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1861 (lambda ((r Int) (s Int) (x Int) )(let ((?x1338 (* x00 x00)))
 (let ((?x1339 (* 108 ?x1338)))
 (let ((?x1690 (* (- 9) s)))
 (let ((?x671 (* r00 r00 s00)))
 (let ((?x1457 (* (- 36) ?x671)))
 (let ((?x137 (* 9 s00)))
 (let ((?x583 (* s00 s00)))
 (let ((?x1213 (* 51 ?x583)))
 (let ((?x1034 (* (- 108) (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x1176 (* s00 s00 s00)))
 (let ((?x1177 (* 16 ?x1176)))
 (let ((?x211 (* 6 r)))
 (let ((?x1569 (+ 3 s ?x211)))
 (let ((?x797 (* s00 x00)))
 (let ((?x1133 (* (- 108) ?x797)))
 (let ((?x2399 (* 216 (* r00 r00 r00 s00))))
 (let ((?x844 (* r00 s00 s00)))
 (let ((?x2561 (* (- 108) ?x844)))
 (let ((?x874 (* r00 r00 r00 x00)))
 (let ((?x904 (* (- 432) ?x874)))
 (let ((?x1854 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x1719 (* r00 s00)))
 (let ((?x1700 (* (- 54) ?x1719)))
 (let ((?x514 (* r00 x00)))
 (let ((?x510 (* 108 ?x514)))
 (let ((?x1669 (* 216 (* r00 s00 x00))))
 (let ((?x1107 (+ (- 27) ?x1669 ?x510 ?x1700 (* 15 (* ?x1569 ?x1569)) (* (- 216) (* r00 r00 r00 ?x1569)) ?x1854 (* (- 4) (* ?x1569 ?x1569 ?x1569)) (* 108 (* (+ x (* (- 1) s)) (+ x (* (- 1) s)))) ?x904 (* (- 12) (* s00 ?x1569 ?x1569)) (* 108 (* s00 (+ x (* (- 1) s)))) ?x2561 ?x2399 (* 108 (* x00 ?x1569)) (* 432 (* r00 r00 r00 (+ x (* (- 1) s)))) (* (- 66) (* s00 ?x1569)) (* 108 (* r00 s00 ?x1569)) ?x1133 (* (- 216) (* r00 s00 (+ x (* (- 1) s)))) (* 36 (* r00 r00 ?x1569 ?x1569)) ?x1177 ?x1034 (* 36 (* r00 r00 ?x1569)) ?x1213 (* (- 108) (* r00 (+ x (* (- 1) s)))) ?x137 ?x1457 ?x1690 (* (- 54) r) (* 54 (* r00 ?x1569)) (* (- 216) (* x00 (+ x (* (- 1) s)))) ?x1339)))
 (let ((?x272 (* (- 1) s)))
 (let ((?x689 (+ x ?x272)))
 (let ((?x2581 (+ 1 r)))
 (let ((?x442 (+ (* (- 1) (* ?x2581 ?x2581 ?x2581 ?x689 ?x689 ?x1569 ?x1569)) (* ?x2581 ?x2581 ?x689 ?x689 ?x689 ?x1569) (* ?x2581 ?x2581 ?x689 ?x689 ?x689 ?x1569 ?x1569 ?x1569) (* ?x689 ?x689 ?x689))))
 (let (($x1766 (not (= (* ?x442 ?x1107) 0))))
 (let ((?x2378 (* r00 s)))
 (let ((?x2500 (* 54 ?x2378)))
 (let ((?x2337 (* r00 r00 s)))
 (let ((?x2338 (* 36 ?x2337)))
 (let ((?x2223 (* 36 (* r00 r00 s s))))
 (let ((?x2026 (* 432 (* r00 r00 r00 x))))
 (let ((?x1961 (* s00 x)))
 (let ((?x1962 (* 108 ?x1961)))
 (let ((?x846 (* x x)))
 (let ((?x847 (* 108 ?x846)))
 (let ((?x795 (* s s s)))
 (let ((?x815 (* (- 4) ?x795)))
 (let ((?x734 (+ ?x1669 ?x510 ?x1700 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x1854 ?x815 ?x847 ?x904 (* (- 12) (* s00 s s)) ?x1962 ?x2561 ?x2399 (* 108 (* x00 s)) ?x2026 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1133 (* (- 216) (* r00 s00 x)) ?x2223 ?x1177 (* (- 108) (* x s)) ?x2338 ?x1213 (* (- 108) (* r00 x)) ?x137 ?x1457 ?x1690 ?x2500 (* (- 216) (* x00 x)) ?x1339)))
 (let (($x740 (= ?x734 0)))
 (let ((?x1494 (* 15 ?x583)))
 (let ((?x869 (* r00 r00 x00)))
 (let ((?x1448 (* 36 ?x869)))
 (let ((?x1611 (* (- 6) ?x797)))
 (let ((?x736 (* 54 ?x514)))
 (let ((?x2148 (+ (* 24 (* s r)) ?x736 (* (- 36) (* r00 x r)) (* (- 24) ?x1719) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 ?x1961) (* (- 4) (* r00 s s)) (* 2 ?x844) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1611 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2338 ?x1448 ?x1494 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1457 (* 54 (* x00 r)) ?x1690 (* (- 24) (* s00 r)) (* 24 ?x2378) (* (- 36) (* r00 r00 x)))))
 (let ((?x491 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1866 (* 4 ?x583)))
 (let ((?x1069 (* 18 ?x514)))
 (let ((?x2555 (+ (* 9 (* s r)) ?x1069 (* (- 9) ?x1719) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2337) ?x1866 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x671) (* 18 (* x00 r)) ?x491 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 ?x2378) (* 6 (* r00 s00 r)))))
 (let ((?x461 (* r00 r00 r00)))
 (let ((?x462 (* 12 ?x461)))
 (let ((?x493 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x492 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1845 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x491 ?x492 (* 4 (* s00 r)) (* (- 6) ?x1719) ?x56 ?x493 ?x462)))
 (let (($x819 (= (+ s00 ?x272 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1875 (and $x819 (= ?x1845 0) (= ?x2555 0) (= ?x2148 0) $x740 $x1766)))
 (let ((?x143 (* 9 s)))
 (let ((?x979 (* (- 9) s00)))
 (let ((?x908 (* (- 15) ?x583)))
 (let ((?x882 (* (- 36) ?x869)))
 (let ((?x798 (* 6 ?x797)))
 (let ((?x537 (* s s)))
 (let ((?x561 (* 3 ?x537)))
 (let ((?x543 (* (- 54) ?x514)))
 (let ((?x682 (+ (* (- 24) (* s r)) ?x543 (* 36 (* r00 x r)) (* 24 ?x1719) ?x561 (* 54 (* x r)) (* (- 6) ?x1961) (* 4 (* r00 s s)) (* (- 2) ?x844) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x798 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2337) ?x882 ?x908 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x979 (* 36 ?x671) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2378) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x370 (* (- 3) s00)))
 (let ((?x596 (* (- 4) ?x583)))
 (let ((?x538 (* 2 ?x537)))
 (let ((?x528 (* (- 18) ?x514)))
 (let ((?x1335 (+ (* (- 9) (* s r)) ?x528 (* 9 ?x1719) ?x538 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2337) ?x596 (* 18 (* r00 x)) ?x370 (* 6 ?x671) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2378) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1754 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x370 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1719) (* (- 6) x) ?x59 (* (- 12) ?x461))))
 (let (($x673 (and $x819 (= ?x1754 0) (= ?x1335 0) (= ?x682 0) $x740 $x1766)))
 (rewrite (= $x673 $x1875))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x269 (exists ((r Int) (s Int) (x Int) )(! (let ((?x220 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x258 (+ r 1)))
 (let ((?x263 (+ (* (- 1) ?x258 ?x258 ?x258 ?x212 ?x212 ?x220 ?x220) (* ?x258 ?x258 ?x212 ?x220 ?x220 ?x220) (* ?x258 ?x258 ?x212 ?x212 ?x212 ?x220 ?x220 ?x220) (* ?x220 ?x220 ?x220))))
 (let ((?x208 (* 108 x00 x00)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x197 (* 51 s00 s00)))
 (let ((?x192 (* 16 s00 s00 s00)))
 (let ((?x186 (* 108 s00 x00)))
 (let ((?x177 (* 216 r00 r00 r00 s00)))
 (let ((?x175 (* 108 r00 s00 s00)))
 (let ((?x169 (* 432 r00 r00 r00 x00)))
 (let ((?x161 (* 36 r00 r00 s00 s00)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x218 (- (- (+ ?x157 (* 15 ?x212 ?x212)) (* 216 r00 r00 r00 ?x212)) ?x161)))
 (let ((?x225 (- (- (+ (- ?x218 (* 4 ?x212 ?x212 ?x212)) (* 108 ?x220 ?x220)) ?x169) (* 12 ?x212 ?x212 s00))))
 (let ((?x231 (+ (- (+ ?x225 (* 108 s00 ?x220)) ?x175) ?x177 (* 108 ?x212 x00) (* 432 r00 r00 r00 ?x220))))
 (let ((?x237 (- (+ (- ?x231 (* 66 ?x212 s00)) (* 108 r00 ?x212 s00)) ?x186)))
 (let ((?x240 (+ (- ?x237 (* 216 r00 s00 ?x220)) (* 36 r00 r00 ?x212 ?x212) ?x192)))
 (let ((?x246 (- (+ (- ?x240 (* 108 ?x212 ?x220)) (* 36 r00 r00 ?x212) ?x197) (* 108 r00 ?x220))))
 (let ((?x254 (- (+ (- (- (+ ?x246 ?x137) ?x139) (* 9 ?x212)) (* 54 r00 ?x212)) (* 216 ?x220 x00))))
 (let ((?x143 (* 9 s)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) ?x161)))
 (let ((?x172 (- (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) ?x169) (* 12 s s s00))))
 (let ((?x180 (+ (- (+ ?x172 (* 108 s00 x)) ?x175) ?x177 (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) ?x186)))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) ?x192)))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 ?x197) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 ?x208) 0) (or (not (= (* (+ ?x254 ?x208) ?x263) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x983 (lambda ((r Int) (s Int) (x Int) )(let ((?x1338 (* x00 x00)))
 (let ((?x1339 (* 108 ?x1338)))
 (let ((?x1690 (* (- 9) s)))
 (let ((?x671 (* r00 r00 s00)))
 (let ((?x1457 (* (- 36) ?x671)))
 (let ((?x137 (* 9 s00)))
 (let ((?x583 (* s00 s00)))
 (let ((?x1213 (* 51 ?x583)))
 (let ((?x1034 (* (- 108) (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x1176 (* s00 s00 s00)))
 (let ((?x1177 (* 16 ?x1176)))
 (let ((?x211 (* 6 r)))
 (let ((?x1569 (+ 3 s ?x211)))
 (let ((?x797 (* s00 x00)))
 (let ((?x1133 (* (- 108) ?x797)))
 (let ((?x2399 (* 216 (* r00 r00 r00 s00))))
 (let ((?x844 (* r00 s00 s00)))
 (let ((?x2561 (* (- 108) ?x844)))
 (let ((?x874 (* r00 r00 r00 x00)))
 (let ((?x904 (* (- 432) ?x874)))
 (let ((?x1854 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x1719 (* r00 s00)))
 (let ((?x1700 (* (- 54) ?x1719)))
 (let ((?x514 (* r00 x00)))
 (let ((?x510 (* 108 ?x514)))
 (let ((?x1669 (* 216 (* r00 s00 x00))))
 (let ((?x1107 (+ (- 27) ?x1669 ?x510 ?x1700 (* 15 (* ?x1569 ?x1569)) (* (- 216) (* r00 r00 r00 ?x1569)) ?x1854 (* (- 4) (* ?x1569 ?x1569 ?x1569)) (* 108 (* (+ x (* (- 1) s)) (+ x (* (- 1) s)))) ?x904 (* (- 12) (* s00 ?x1569 ?x1569)) (* 108 (* s00 (+ x (* (- 1) s)))) ?x2561 ?x2399 (* 108 (* x00 ?x1569)) (* 432 (* r00 r00 r00 (+ x (* (- 1) s)))) (* (- 66) (* s00 ?x1569)) (* 108 (* r00 s00 ?x1569)) ?x1133 (* (- 216) (* r00 s00 (+ x (* (- 1) s)))) (* 36 (* r00 r00 ?x1569 ?x1569)) ?x1177 ?x1034 (* 36 (* r00 r00 ?x1569)) ?x1213 (* (- 108) (* r00 (+ x (* (- 1) s)))) ?x137 ?x1457 ?x1690 (* (- 54) r) (* 54 (* r00 ?x1569)) (* (- 216) (* x00 (+ x (* (- 1) s)))) ?x1339)))
 (let ((?x272 (* (- 1) s)))
 (let ((?x689 (+ x ?x272)))
 (let ((?x2581 (+ 1 r)))
 (let ((?x442 (+ (* (- 1) (* ?x2581 ?x2581 ?x2581 ?x689 ?x689 ?x1569 ?x1569)) (* ?x2581 ?x2581 ?x689 ?x689 ?x689 ?x1569) (* ?x2581 ?x2581 ?x689 ?x689 ?x689 ?x1569 ?x1569 ?x1569) (* ?x689 ?x689 ?x689))))
 (let (($x1766 (not (= (* ?x442 ?x1107) 0))))
 (let ((?x2378 (* r00 s)))
 (let ((?x2500 (* 54 ?x2378)))
 (let ((?x2337 (* r00 r00 s)))
 (let ((?x2338 (* 36 ?x2337)))
 (let ((?x2223 (* 36 (* r00 r00 s s))))
 (let ((?x2026 (* 432 (* r00 r00 r00 x))))
 (let ((?x1961 (* s00 x)))
 (let ((?x1962 (* 108 ?x1961)))
 (let ((?x846 (* x x)))
 (let ((?x847 (* 108 ?x846)))
 (let ((?x795 (* s s s)))
 (let ((?x815 (* (- 4) ?x795)))
 (let ((?x734 (+ ?x1669 ?x510 ?x1700 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x1854 ?x815 ?x847 ?x904 (* (- 12) (* s00 s s)) ?x1962 ?x2561 ?x2399 (* 108 (* x00 s)) ?x2026 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1133 (* (- 216) (* r00 s00 x)) ?x2223 ?x1177 (* (- 108) (* x s)) ?x2338 ?x1213 (* (- 108) (* r00 x)) ?x137 ?x1457 ?x1690 ?x2500 (* (- 216) (* x00 x)) ?x1339)))
 (let (($x740 (= ?x734 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x979 (* (- 9) s00)))
 (let ((?x908 (* (- 15) ?x583)))
 (let ((?x869 (* r00 r00 x00)))
 (let ((?x882 (* (- 36) ?x869)))
 (let ((?x798 (* 6 ?x797)))
 (let ((?x537 (* s s)))
 (let ((?x561 (* 3 ?x537)))
 (let ((?x543 (* (- 54) ?x514)))
 (let ((?x682 (+ (* (- 24) (* s r)) ?x543 (* 36 (* r00 x r)) (* 24 ?x1719) ?x561 (* 54 (* x r)) (* (- 6) ?x1961) (* 4 (* r00 s s)) (* (- 2) ?x844) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x798 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2337) ?x882 ?x908 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x979 (* 36 ?x671) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2378) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x370 (* (- 3) s00)))
 (let ((?x596 (* (- 4) ?x583)))
 (let ((?x538 (* 2 ?x537)))
 (let ((?x528 (* (- 18) ?x514)))
 (let ((?x1335 (+ (* (- 9) (* s r)) ?x528 (* 9 ?x1719) ?x538 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2337) ?x596 (* 18 (* r00 x)) ?x370 (* 6 ?x671) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2378) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1754 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x370 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1719) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x819 (= (+ s00 ?x272 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x673 (and $x819 (= ?x1754 0) (= ?x1335 0) (= ?x682 0) $x740 $x1766)))
 (let ((?x220 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x258 (+ r 1)))
 (let ((?x263 (+ (* (- 1) ?x258 ?x258 ?x258 ?x212 ?x212 ?x220 ?x220) (* ?x258 ?x258 ?x212 ?x220 ?x220 ?x220) (* ?x258 ?x258 ?x212 ?x212 ?x212 ?x220 ?x220 ?x220) (* ?x220 ?x220 ?x220))))
 (let ((?x208 (* 108 x00 x00)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x197 (* 51 s00 s00)))
 (let ((?x192 (* 16 s00 s00 s00)))
 (let ((?x186 (* 108 s00 x00)))
 (let ((?x177 (* 216 r00 r00 r00 s00)))
 (let ((?x175 (* 108 r00 s00 s00)))
 (let ((?x169 (* 432 r00 r00 r00 x00)))
 (let ((?x161 (* 36 r00 r00 s00 s00)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x218 (- (- (+ ?x157 (* 15 ?x212 ?x212)) (* 216 r00 r00 r00 ?x212)) ?x161)))
 (let ((?x225 (- (- (+ (- ?x218 (* 4 ?x212 ?x212 ?x212)) (* 108 ?x220 ?x220)) ?x169) (* 12 ?x212 ?x212 s00))))
 (let ((?x231 (+ (- (+ ?x225 (* 108 s00 ?x220)) ?x175) ?x177 (* 108 ?x212 x00) (* 432 r00 r00 r00 ?x220))))
 (let ((?x237 (- (+ (- ?x231 (* 66 ?x212 s00)) (* 108 r00 ?x212 s00)) ?x186)))
 (let ((?x240 (+ (- ?x237 (* 216 r00 s00 ?x220)) (* 36 r00 r00 ?x212 ?x212) ?x192)))
 (let ((?x246 (- (+ (- ?x240 (* 108 ?x212 ?x220)) (* 36 r00 r00 ?x212) ?x197) (* 108 r00 ?x220))))
 (let ((?x254 (- (+ (- (- (+ ?x246 ?x137) ?x139) (* 9 ?x212)) (* 54 r00 ?x212)) (* 216 ?x220 x00))))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) ?x161)))
 (let ((?x172 (- (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) ?x169) (* 12 s s s00))))
 (let ((?x180 (+ (- (+ ?x172 (* 108 s00 x)) ?x175) ?x177 (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) ?x186)))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) ?x192)))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 ?x197) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x268 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 ?x208) 0) (or (not (= (* (+ ?x254 ?x208) ?x263) 0))))))
 (rewrite (= $x268 $x673))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x270 (asserted $x269)))
 (let ((@x2248 (mp (mp @x270 (quant-intro (proof-bind ?x983) (= $x269 $x364)) $x364) (rewrite (= $x364 $x364)) $x364)))
 (let ((@x1644 (mp (mp @x2248 (quant-intro (proof-bind ?x1861) (= $x364 $x1860)) $x1860) (quant-intro (proof-bind ?x1167) (= $x1860 $x1139)) $x1139)))
 (let ((@x712 (mp (mp~ @x1644 (sk (~ $x1139 $x530)) $x530) (rewrite (= $x530 $x469)) $x469)))
 (let ((@x1546 (and-elim @x712 $x776)))
 (let ((@x701 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x776) $x2156)) @x1546 $x2156)))
 (let (($x1294 (>= ?x1217 0)))
 (let ((@x1254 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x776) $x1294)) @x1546 $x1294)))
 (let (($x987 (<= ?x1571 0)))
 (let ((@x2553 (and-elim @x712 $x2397)))
 (let ((@x1871 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2397) $x987)) @x2553 $x987)))
 (let (($x1297 (>= ?x1571 0)))
 (let ((@x1453 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2397) $x1297)) @x2553 $x1297)))
 (let (($x1291 (<= ?x821 0)))
 (let ((@x2257 (and-elim @x712 $x828)))
 (let ((@x695 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x828) $x1291)) @x2257 $x1291)))
 (let (($x1293 (>= ?x821 0)))
 (let ((@x1277 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x828) $x1293)) @x2257 $x1293)))
 (let (($x694 (<= ?x649 0)))
 (let ((@x1649 (and-elim @x712 $x686)))
 (let ((@x2439 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x686) $x694)) @x1649 $x694)))
 (let (($x1111 (>= ?x649 0)))
 (let ((@x888 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x686) $x1111)) @x1649 $x1111)))
 (let (($x344 (<= ?x1170 0)))
 (let ((@x1557 (and-elim @x712 $x1269)))
 (let ((@x412 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1269) $x344)) @x1557 $x344)))
 (let (($x1108 (>= ?x1170 0)))
 (let ((@x872 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1269) $x1108)) @x1557 $x1108)))
 (let ((@x482 (hypothesis (not $x939))))
 (let (($x730 (not (<= ?x2075 0))))
 (let (($x1647 (>= ?x2075 0)))
 (let (($x1592 (>= ?x1243 0)))
 (let (($x1127 (not $x1592)))
 (let (($x411 (not $x1647)))
 (let ((@x1914 (hypothesis $x411)))
 (let ((@x1896 ((_ th-lemma arith) @x1914 @x482 @x1453 @x1871 @x1277 @x695 @x1453 @x1871 @x1277 @x695 @x872 @x412 @x1254 @x701 @x1453 @x1871 @x888 @x2439 @x1277 @x695 @x1453 @x1871 @x1254 @x701 false)))
 (let ((@x2284 ((_ th-lemma arith farkas 1 1 1) @x1914 (hypothesis $x1592) (unit-resolution (lemma @x1896 (or $x939 $x1647)) @x1914 $x939) false)))
 (let ((@x2275 ((_ th-lemma arith) @x1914 (unit-resolution (lemma @x2284 (or $x1127 $x1647)) @x1914 $x1127) @x1453 @x1871 @x1277 @x695 @x1453 @x1871 @x1277 @x695 @x872 @x412 @x1254 @x701 @x1453 @x1871 @x888 @x2439 @x1277 @x695 @x1453 @x1871 @x1254 @x701 false)))
 (let ((@x2357 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x481 $x730 $x411)) (and-elim @x712 $x2086) (or $x730 $x411))))
 (let ((@x628 (unit-resolution @x2357 (lemma @x2275 $x1647) $x730)))
 (let ((@x892 ((_ th-lemma arith) @x628 @x482 @x1453 @x1871 @x1277 @x695 @x1453 @x1871 @x1277 @x695 @x872 @x412 @x1254 @x701 @x1453 @x1871 @x888 @x2439 @x1277 @x695 @x1453 @x1871 @x1254 @x701 false)))
 (let ((@x1760 ((_ th-lemma arith) @x628 (hypothesis $x1127) @x1453 @x1871 @x1277 @x695 @x1453 @x1871 @x1277 @x695 @x872 @x412 @x1254 @x701 @x1453 @x1871 @x888 @x2439 @x1277 @x695 @x1453 @x1871 @x1254 @x701 false)))
 ((_ th-lemma arith farkas 1 1 1) @x628 (lemma @x1760 $x1592) (lemma @x892 $x939) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 7
 :arith-assert-diseq        4
 :arith-assert-lower        43
 :arith-assert-upper        15
 :arith-conflicts           6
 :arith-eq-adapter          8
 :arith-fixed-eqs           1
 :arith-gcd-tests           16
 :arith-grobner             7
 :arith-max-min             1889
 :arith-nonlinear-bounds    31
 :arith-nonlinear-horner    70
 :arith-num-rows            10
 :arith-patches             10
 :arith-patches_succ        10
 :arith-pivots              7
 :arith-pseudo-nonlinear    2
 :arith-row-summations      14
 :arith-tableau-max-columns 130
 :arith-tableau-max-rows    10
 :conflicts                 6
 :decisions                 5
 :del-clause                26
 :final-checks              15
 :max-memory                5.23
 :memory                    3.39
 :minimized-lits            1
 :mk-bool-var               30
 :mk-clause                 26
 :num-allocs                305434644
 :num-checks                1
 :propagations              17
 :rlimit-count              1542054
 :time                      0.78
 :total-time                0.79)
