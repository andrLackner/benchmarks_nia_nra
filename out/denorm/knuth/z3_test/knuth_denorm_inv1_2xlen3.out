unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x451 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 4 (* r!2 d!1)) (* (- 4) (* x!0 d!1)) (* (- 1) (* q!3 d!1 d!1)) (* 2 (* q!3 d!1)) (* (- 8) r!2))))
 (let (($x697 (>= ?x451 0)))
 (let (($x423 (= ?x451 0)))
 (let ((?x383 (* 8 r!2)))
 (let ((?x418 (* q!3 d!1)))
 (let ((?x408 (* (- 2) ?x418)))
 (let ((?x417 (* q!3 d!1 d!1)))
 (let ((?x414 (* x!0 d!1)))
 (let ((?x415 (* 4 ?x414)))
 (let ((?x402 (* r!2 d!1)))
 (let ((?x416 (* (- 4) ?x402)))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x2461 (+ ?x182 ?x230 ?x214 ?x280 ?x318 ?x416 ?x415 ?x417 ?x408 ?x383)))
 (let ((?x1186 (* (- 2) d!1)))
 (let ((?x3119 (* (- 1) x!0)))
 (let ((?x3563 (* 2 r!2)))
 (let ((?x2261 (+ (- 4) q!3 ?x3563 ?x3119 ?x1186)))
 (let ((?x4034 (+ 2 d!1)))
 (let ((?x4029 (+ (- 8) q!3)))
 (let ((?x4037 (* (- 1) (* ?x4029 ?x4029 ?x4029 ?x4034 ?x4034 ?x2261 ?x2261 r!2 r!2 r!2))))
 (let ((?x2777 (* (- 1) (* ?x2261 ?x2261 ?x2261 r!2))))
 (let ((?x849 (* ?x4029 ?x4029 ?x4034 ?x4034 ?x4034 ?x2261 r!2)))
 (let ((?x3598 (* q!3 q!3 q!3 r!2 r!2 r!2)))
 (let ((?x3594 (* 6 ?x3598)))
 (let ((?x3597 (* q!3 r!2 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x3583 (* 5 (* q!3 q!3 q!3 r!2 r!2 r!2 d!1))))
 (let ((?x3561 (* 2 (* r!2 r!2 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x3243 (* r!2 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x4047 (* 12 ?x3243)))
 (let ((?x3019 (* (- 1) (* r!2 r!2 r!2 x!0 d!1 d!1 d!1))))
 (let ((?x2245 (* q!3 q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x1821 (* (- 26) ?x2245)))
 (let ((?x1822 (* (- 2) (* q!3 q!3 r!2 r!2 r!2 x!0))))
 (let ((?x1928 (* q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x1374 (* (- 1) (* q!3 q!3 r!2 r!2 r!2 x!0 d!1))))
 (let ((?x2243 (* 4 (* q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x1031 (* r!2 r!2 r!2 r!2)))
 (let ((?x1032 (* 272 ?x1031)))
 (let ((?x739 (* r!2 r!2 r!2)))
 (let ((?x740 (* (- 2592) ?x739)))
 (let ((?x2379 (* 2 (* q!3 q!3 r!2 r!2 r!2 r!2 d!1))))
 (let ((?x461 (* r!2 r!2 r!2 x!0 d!1 d!1)))
 (let ((?x2957 (* (- 6) ?x461)))
 (let ((?x410 (* r!2 r!2 r!2 x!0)))
 (let ((?x3562 (* (- 136) ?x410)))
 (let ((?x409 (* r!2 r!2 r!2 d!1 d!1 d!1 d!1)))
 (let ((?x386 (* (- 2) ?x409)))
 (let ((?x4065 (+ ?x386 ?x3562 (* (- 136) (* q!3 q!3 r!2 r!2 r!2)) ?x2957 (* 32 (* q!3 r!2 r!2 r!2 x!0)) ?x2379 ?x740 (* (- 2624) (* r!2 r!2 r!2 d!1)) ?x1032 ?x2243 (* 16 (* q!3 r!2 r!2 r!2 x!0 d!1)) (* (- 688) (* r!2 r!2 r!2 d!1 d!1)) ?x1374 (* 972 (* q!3 r!2 r!2 r!2 d!1)) ?x1928 ?x1822 (* (- 120) (* q!3 q!3 r!2 r!2 r!2 d!1)) ?x1821 (* (- 76) (* r!2 r!2 r!2 x!0 d!1)) (* (- 32) (* q!3 r!2 r!2 r!2 r!2 d!1)) ?x3019 (* 1032 (* q!3 r!2 r!2 r!2)) (* (- 64) (* q!3 r!2 r!2 r!2 r!2)) ?x4047 ?x3561 (* 230 (* q!3 r!2 r!2 r!2 d!1 d!1)) ?x3583 (* (- 16) (* r!2 r!2 r!2 d!1 d!1 d!1)) ?x3597 ?x3594 (* 152 (* r!2 r!2 r!2 r!2 d!1)))))
 (let ((?x3993 (* ?x4065 (+ ?x849 ?x2777 ?x4037) ?x2461)))
 (let (($x4110 (= ?x3993 0)))
 (let (($x4126 (not $x4110)))
 (let ((?x1284 (* (- 1) d!1)))
 (let ((?x1276 (+ (- 2) q!3 ?x3563 ?x3119 ?x1284)))
 (let ((?x1275 (+ (- 4) q!3)))
 (let ((?x772 (* (- 1) (* ?x1275 ?x1275 ?x1275 ?x4034 ?x4034 ?x1276 ?x1276 r!2 r!2 r!2))))
 (let ((?x1541 (* (- 1) (* ?x1276 ?x1276 ?x1276 r!2))))
 (let ((?x1611 (* ?x1275 ?x1275 ?x4034 ?x4034 ?x4034 ?x1276 r!2)))
 (let ((?x4254 (* r!2 r!2 r!2 r!2 d!1)))
 (let ((?x3418 (* 56 ?x4254)))
 (let ((?x3295 (* q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x741 (* 62 ?x3295)))
 (let ((?x3151 (* q!3 r!2 r!2 r!2 r!2)))
 (let ((?x1946 (* (- 32) ?x3151)))
 (let ((?x3075 (* q!3 r!2 r!2 r!2)))
 (let ((?x3389 (* 264 ?x3075)))
 (let ((?x2903 (* q!3 r!2 r!2 r!2 r!2 d!1)))
 (let ((?x327 (* (- 16) ?x2903)))
 (let ((?x2759 (* r!2 r!2 r!2 x!0 d!1)))
 (let ((?x3417 (* (- 28) ?x2759)))
 (let ((?x660 (* (- 13) ?x2245)))
 (let ((?x1684 (* q!3 r!2 r!2 r!2 d!1)))
 (let ((?x3424 (* 252 ?x1684)))
 (let ((?x1208 (* q!3 r!2 r!2 r!2 x!0 d!1)))
 (let ((?x1194 (* 8 ?x1208)))
 (let ((?x756 (* 80 ?x1031)))
 (let ((?x1724 (* (- 336) ?x739)))
 (let ((?x612 (* q!3 r!2 r!2 r!2 x!0)))
 (let ((?x2519 (* 16 ?x612)))
 (let ((?x1787 (* (- 40) ?x410)))
 (let ((?x1776 (* (- 1) ?x409)))
 (let ((?x3373 (+ ?x1776 ?x1787 (* (- 68) (* q!3 q!3 r!2 r!2 r!2)) ?x2957 ?x2519 ?x2379 ?x1724 (* (- 352) (* r!2 r!2 r!2 d!1)) ?x756 ?x2243 ?x1194 (* (- 104) (* r!2 r!2 r!2 d!1 d!1)) ?x1374 ?x3424 ?x1928 ?x1822 (* (- 60) (* q!3 q!3 r!2 r!2 r!2 d!1)) ?x660 ?x3417 ?x327 ?x3019 ?x3389 ?x1946 ?x4047 ?x3561 ?x741 ?x3583 (* (- 8) (* r!2 r!2 r!2 d!1 d!1 d!1)) ?x3597 ?x3594 ?x3418)))
 (let ((?x2023 (* ?x3373 (+ ?x1611 ?x1541 ?x772) ?x2461)))
 (let (($x2024 (= ?x2023 0)))
 (let ((?x766 (+ 2 q!3 ?x3563 ?x3119 d!1)))
 (let ((?x371 (+ 4 q!3)))
 (let ((?x281 (+ (* (- 1) (* ?x4034 ?x4034 ?x371 ?x371 ?x371 ?x766 ?x766 r!2 r!2 r!2)) (* (- 1) (* ?x766 ?x766 ?x766 r!2)) (* ?x4034 ?x4034 ?x4034 ?x371 ?x371 ?x766 r!2))))
 (let ((?x3590 (* r!2 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x1756 (* 8 ?x3590)))
 (let ((?x1662 (* 16 ?x2903)))
 (let ((?x1544 (* 13 ?x2245)))
 (let ((?x1550 (* (- 8) ?x1208)))
 (let ((?x1551 (* 336 ?x739)))
 (let ((?x3189 (+ ?x409 ?x1787 (* 68 (* q!3 q!3 r!2 r!2 r!2)) ?x2957 (* (- 16) ?x612) ?x2379 ?x1551 (* 352 (* r!2 r!2 r!2 d!1)) ?x756 ?x2243 ?x1550 (* 104 (* r!2 r!2 r!2 d!1 d!1)) ?x1374 ?x3424 ?x1928 ?x1822 (* 60 (* q!3 q!3 r!2 r!2 r!2 d!1)) ?x1544 ?x3417 ?x1662 ?x3019 ?x3389 (* 32 ?x3151) ?x4047 ?x3561 ?x741 ?x3583 ?x1756 ?x3597 ?x3594 ?x3418)))
 (let ((?x4093 (* ?x3189 ?x281 ?x2461)))
 (let (($x3980 (= ?x4093 0)))
 (let ((?x569 (* (- 1) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x4120 (* (- 4) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x4125 (* (- 12) ?x3075)))
 (let ((?x2989 (* (- 6) (* r!2 r!2 x!0 x!0))))
 (let ((?x260 (* (- 4) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1))))
 (let ((?x1770 (* (- 16) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1))))
 (let ((?x2317 (* (- 4) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x1412 (* (- 1) (* q!3 q!3 r!2 x!0 d!1 d!1 d!1))))
 (let ((?x2343 (* 2 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1 d!1))))
 (let ((?x2341 (* 2 (* q!3 q!3 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x2336 (* q!3 q!3 q!3 r!2 d!1 d!1 d!1)))
 (let ((?x1532 (* (- 16) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1))))
 (let ((?x2334 (* 8 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0))))
 (let ((?x2990 (* 6 (* q!3 q!3 q!3 r!2 d!1 d!1))))
 (let ((?x2332 (* (- 16) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x2327 (* 16 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x2183 (* 7 (* q!3 q!3 q!3 r!2))))
 (let ((?x1558 (* (- 4) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1))))
 (let ((?x1639 (* 16 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1))))
 (let ((?x1632 (* 4 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1 d!1))))
 (let ((?x3457 (* (- 16) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x3588 (* (- 1) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1 d!1))))
 (let ((?x2294 (* 8 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1))))
 (let ((?x2114 (* (- 8) ?x1031)))
 (let ((?x1547 (* (- 4) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x2982 (* (- 4) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x2111 (* 12 ?x410)))
 (let ((?x276 (* r!2 x!0 x!0 x!0)))
 (let ((?x207 (* (- 3) (* q!3 r!2 x!0 x!0))))
 (let ((?x273 (* 12 (* q!3 r!2 r!2 x!0))))
 (let ((?x272 (* (- 5) (* q!3 q!3 r!2 x!0))))
 (let ((?x270 (* 10 (* q!3 q!3 r!2 r!2))))
 (let ((?x3542 (+ ?x270 ?x272 ?x273 ?x207 ?x276 ?x2111 ?x2982 ?x1547 (* 12 (* q!3 q!3 q!3 r!2 d!1)) ?x2114 ?x2294 ?x3588 (* (- 6) (* q!3 q!3 r!2 x!0 d!1 d!1)) ?x3457 ?x1632 ?x1639 ?x1558 ?x2183 ?x2327 ?x2332 ?x2990 ?x2334 ?x1532 ?x2336 (* 24 (* q!3 q!3 r!2 r!2 d!1)) (* 12 (* q!3 q!3 r!2 r!2 d!1 d!1)) ?x2341 ?x2343 ?x1412 ?x2317 ?x1770 ?x260 ?x2989 ?x4125 (* (- 12) (* q!3 q!3 r!2 x!0 d!1)) ?x4120 ?x569)))
 (let ((?x2175 (* 6 ?x3295)))
 (let ((?x2108 (* 8 ?x3075)))
 (let ((?x2165 (* 16 ?x1031)))
 (let ((?x688 (* (- 8) ?x410)))
 (let ((?x2493 (+ ?x688 ?x2957 ?x2379 ?x2165 ?x2243 ?x1374 (* 12 ?x1684) ?x1928 ?x1822 (* (- 12) ?x2759) ?x3019 ?x2108 ?x4047 ?x3561 ?x2175 ?x3583 ?x3597 ?x3594 (* 24 ?x4254))))
 (let ((?x2065 (* ?x2493 ?x3542 ?x2461)))
 (let (($x3478 (= ?x2065 0)))
 (let (($x1069 (not $x3478)))
 (let (($x4085 (or $x1069 (not $x3980) (not $x2024) $x4126)))
 (let (($x3981 (and $x423 $x4085)))
 (let ((?x2441 (+ ?x383 ?x182 ?x230 ?x214 ?x280 ?x318 ?x415 (* (- 8) d!1) ?x416 ?x417 ?x408 (* 2 (* d!1 4)))))
 (let ((?x1536 (* (- 24) ?x2759)))
 (let ((?x1589 (* 2 (* d!1 d!1 ?x3563 r!2 r!2 r!2))))
 (let ((?x1707 (* 2 (* d!1 2 ?x3563 r!2 r!2 r!2))))
 (let ((?x2428 (* 2 (* d!1 2 q!3 r!2 r!2 r!2))))
 (let ((?x3592 (* 2 (* d!1 2 ?x3119 r!2 r!2 r!2))))
 (let ((?x3599 (* 2 (* d!1 d!1 ?x3119 r!2 r!2 r!2))))
 (let ((?x1788 (* 48 ?x4254)))
 (let ((?x259 (* (- 4) ?x461)))
 (let ((?x407 (* 8 ?x3243)))
 (let ((?x370 (+ ?x407 ?x3561 ?x409 ?x1787 ?x3019 ?x259 ?x1788 ?x756 ?x3599 ?x3597 ?x3594 ?x3592 ?x1756 ?x3583 ?x2428 (* 2 (* d!1 d!1 2 r!2 r!2 r!2)) ?x1707 ?x1589 (* 2 (* d!1 2 d!1 r!2 r!2 r!2)) (* 2 (* q!3 4 2 r!2 r!2 r!2)) (* 2 (* q!3 q!3 2 r!2 r!2 r!2)) (* 2 (* q!3 4 ?x3563 r!2 r!2 r!2)) (* 2 (* q!3 q!3 ?x3563 r!2 r!2 r!2)) ?x1544 (* 2 (* d!1 2 2 r!2 r!2 r!2)) ?x1928 (* 34 (* q!3 q!3 r!2 r!2 r!2 d!1)) ?x1550 ?x1374 ?x1551 (* 2 (* q!3 4 d!1 r!2 r!2 r!2)) (* (- 8) ?x612) ?x2379 (* 16 ?x3151) ?x1662 (* 2 (* q!3 q!3 ?x3119 r!2 r!2 r!2)) (* 2 (* q!3 4 ?x3119 r!2 r!2 r!2)) (* 2 (* q!3 q!3 d!1 r!2 r!2 r!2)) (* 2 (* d!1 q!3 4 4 r!2 r!2 r!2)) (* 2 (* d!1 4 4 4 r!2 r!2 r!2)) (* 2 (* d!1 4 q!3 4 r!2 r!2 r!2)) (* 2 (* q!3 4 q!3 r!2 r!2 r!2)) (* 56 (* q!3 q!3 r!2 r!2 r!2)) (* 248 ?x3075) (* 2 (* d!1 q!3 4 q!3 r!2 r!2 r!2)) (* 2 (* d!1 4 q!3 q!3 r!2 r!2 r!2)) (* 2 (* d!1 4 4 q!3 r!2 r!2 r!2)) (* 2 (* d!1 q!3 q!3 4 r!2 r!2 r!2)) ?x1536 ?x741 (* 144 ?x1684) (* 96 (* r!2 r!2 r!2 d!1 d!1)) (* 216 (* r!2 r!2 r!2 d!1)))))
 (let ((?x1759 (+ ?x383 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d!1 2)) ?x415 (* 8 d!1) ?x416 ?x417 ?x408)))
 (let ((?x1678 (+ (* (- 4) (* q!3 q!3 2 d!1 r!2 r!2 r!2)) ?x407 ?x3561 ?x1776 ?x1787 (* (- 4) (* q!3 2 ?x3563 r!2 r!2 r!2)) ?x3019 ?x259 (* (- 4) (* q!3 d!1 ?x3563 r!2 r!2 r!2)) ?x1788 ?x756 (* (- 4) (* q!3 2 q!3 r!2 r!2 r!2)) ?x3599 ?x3597 ?x3594 (* (- 4) (* q!3 q!3 2 2 r!2 r!2 r!2)) ?x3592 (* (- 6) ?x3590) ?x3583 ?x2428 (* (- 4) (* q!3 d!1 ?x3119 r!2 r!2 r!2)) (* (- 4) (* q!3 (- 4) 2 2 r!2 r!2 r!2)) (* (- 4) (* q!3 (- 4) d!1 2 r!2 r!2 r!2)) (* (- 4) (* q!3 (- 4) 2 d!1 r!2 r!2 r!2)) (* (- 4) (* q!3 (- 4) d!1 d!1 r!2 r!2 r!2)) ?x1707 ?x1589 (* (- 4) (* q!3 q!3 d!1 2 r!2 r!2 r!2)) ?x2243 ?x660 ?x1928 ?x1822 (* (- 44) (* q!3 q!3 r!2 r!2 r!2 d!1)) (* 4 ?x1208) ?x1374 (* (- 4) (* q!3 2 (- 2) r!2 r!2 r!2)) (* (- 4) (* q!3 d!1 (- 2) r!2 r!2 r!2)) (* (- 4) (* q!3 2 ?x1284 r!2 r!2 r!2)) (* (- 4) (* q!3 d!1 ?x1284 r!2 r!2 r!2)) ?x1724 (* (- 4) (* q!3 2 ?x3119 r!2 r!2 r!2)) (* 8 ?x612) ?x2379 (* (- 16) ?x3151) (* (- 8) ?x2903) (* (- 44) (* q!3 q!3 r!2 r!2 r!2)) (* 184 ?x3075) ?x1536 (* 42 ?x3295) (* 168 ?x1684) (* (- 96) (* r!2 r!2 r!2 d!1 d!1)) (* (- 344) (* r!2 r!2 r!2 d!1)) (* 2 (* d!1 2 (- 2) r!2 r!2 r!2)) (* 2 (* d!1 d!1 (- 2) r!2 r!2 r!2)) (* 2 (* d!1 2 ?x1284 r!2 r!2 r!2)) (* 2 (* d!1 d!1 ?x1284 r!2 r!2 r!2)))))
 (let ((?x1395 (+ ?x383 ?x182 ?x230 ?x214 ?x280 ?x318 ?x415 ?x416 ?x417 ?x408)))
 (let ((?x931 (+ ?x2111 (* 2 (* d!1 2 q!3 r!2 q!3 q!3)) ?x2183 ?x2114 (* 2 (* d!1 d!1 ?x3119 r!2 q!3 q!3)) (* 2 (* d!1 2 ?x3119 r!2 q!3 q!3)) ?x2294 ?x2343 ?x1547 ?x1639 ?x1632 ?x1558 ?x3588 ?x1412 (* (- 4) (* q!3 q!3 r!2 x!0 d!1 d!1)) (* 2 (* d!1 d!1 ?x3563 r!2 q!3 q!3)) (* 2 (* d!1 2 ?x3563 r!2 q!3 q!3)) (* (- 8) (* q!3 q!3 r!2 x!0 d!1)) ?x4120 ?x4125 ?x569 ?x2982 ?x2317 ?x2327 ?x1770 ?x2332 ?x2334 ?x1532 ?x3457 ?x260 ?x270 ?x272 ?x273 ?x207 ?x2989 ?x276 (* 8 (* q!3 q!3 q!3 r!2 d!1)) ?x2990 ?x2336 (* 16 (* q!3 q!3 r!2 r!2 d!1)) (* 8 (* q!3 q!3 r!2 r!2 d!1 d!1)) ?x2341)))
 (let ((?x2104 (+ ?x407 ?x3561 ?x688 ?x3019 ?x259 (* 2 (* ?x3119 r!2 r!2 r!2 q!3 q!3)) (* 16 ?x4254) ?x2165 (* 2 (* ?x3563 r!2 r!2 r!2 q!3 q!3)) ?x3599 ?x3597 (* 4 ?x3598) ?x3592 ?x3583 (* 2 (* q!3 r!2 r!2 r!2 q!3 q!3)) ?x2428 ?x1707 ?x1589 ?x1928 ?x1374 ?x2379 ?x2108 (* (- 8) ?x2759) ?x2175 (* 8 ?x1684))))
 (let ((?x580 (+ ?x383 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d!1 2)) ?x415 (* 16 d!1) ?x416 ?x417 ?x408)))
 (let ((?x2254 (+ (* (- 8) (* q!3 (- 8) d!1 2 r!2 r!2 r!2)) (* (- 8) (* q!3 q!3 2 d!1 r!2 r!2 r!2)) ?x407 ?x3561 ?x386 ?x3562 (* (- 8) (* q!3 2 ?x3563 r!2 r!2 r!2)) ?x3019 ?x259 (* (- 8) (* q!3 d!1 ?x3563 r!2 r!2 r!2)) (* 144 ?x4254) ?x1032 (* (- 8) (* q!3 2 (- 4) r!2 r!2 r!2)) (* (- 8) (* q!3 d!1 (- 4) r!2 r!2 r!2)) (* (- 8) (* q!3 2 q!3 r!2 r!2 r!2)) (* (- 8) (* q!3 2 ?x1186 r!2 r!2 r!2)) ?x3599 ?x3597 ?x3594 (* (- 8) (* q!3 d!1 ?x1186 r!2 r!2 r!2)) (* (- 8) (* q!3 q!3 2 2 r!2 r!2 r!2)) ?x3592 (* (- 12) ?x3590) (* (- 8) (* q!3 (- 8) 2 d!1 r!2 r!2 r!2)) ?x3583 (* (- 8) (* q!3 (- 8) 2 2 r!2 r!2 r!2)) (* (- 8) (* q!3 (- 8) d!1 d!1 r!2 r!2 r!2)) ?x2428 (* (- 8) (* q!3 d!1 ?x3119 r!2 r!2 r!2)) ?x1707 ?x1589 (* (- 8) (* q!3 q!3 d!1 2 r!2 r!2 r!2)) ?x2243 ?x1821 ?x1928 ?x1822 (* (- 88) (* q!3 q!3 r!2 r!2 r!2 d!1)) ?x1194 ?x1374 ?x740 (* (- 8) (* q!3 2 ?x3119 r!2 r!2 r!2)) ?x2519 ?x2379 ?x1946 ?x327 (* (- 88) (* q!3 q!3 r!2 r!2 r!2)) (* 712 ?x3075) (* (- 72) ?x2759) (* 150 ?x3295) (* 648 ?x1684) (* (- 672) (* r!2 r!2 r!2 d!1 d!1)) (* (- 2608) (* r!2 r!2 r!2 d!1)) (* 2 (* d!1 2 (- 4) r!2 r!2 r!2)) (* 2 (* d!1 d!1 (- 4) r!2 r!2 r!2)) (* 2 (* d!1 2 ?x1186 r!2 r!2 r!2)) (* 2 (* d!1 d!1 ?x1186 r!2 r!2 r!2)))))
 (let (($x1437 (or (not (= (* ?x2254 (+ ?x2777 ?x4037 ?x849) ?x580) 0)) (not (= (* ?x2104 ?x931 ?x1395) 0)) (not (= (* ?x1678 (+ ?x1611 ?x772 ?x1541) ?x1759) 0)) (not (= (* ?x370 ?x281 ?x2441) 0)))))
 (let (($x2293 (and (= ?x1395 0) $x1437)))
 (let (($x4253 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x3485 (* 2 (* d 4))))
 (let ((?x3224 (* (- 2) (* q d))))
 (let ((?x3225 (* q d d)))
 (let ((?x3217 (* r d)))
 (let ((?x3347 (* (- 4) ?x3217)))
 (let ((?x3345 (* (- 8) d)))
 (let ((?x3106 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x2977 (+ 2 q ?x144 ?x179 d)))
 (let ((?x3476 (+ 4 q)))
 (let ((?x3487 (+ 2 d)))
 (let ((?x4333 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x2977 ?x2977 r r r)) (* (- 1) (* ?x2977 ?x2977 ?x2977 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x2977 r))))
 (let ((?x3731 (* r r r d)))
 (let ((?x3732 (* 216 ?x3731)))
 (let ((?x3729 (* r r r d d)))
 (let ((?x3730 (* 96 ?x3729)))
 (let ((?x3701 (* q r r r d)))
 (let ((?x3702 (* 144 ?x3701)))
 (let ((?x3699 (* q r r r d d)))
 (let ((?x3700 (* 62 ?x3699)))
 (let ((?x3585 (* r r r x d)))
 (let ((?x3336 (* (- 24) ?x3585)))
 (let ((?x3289 (* 2 (* d q q 4 r r r))))
 (let ((?x3286 (* 2 (* d 4 4 q r r r))))
 (let ((?x3495 (* 2 (* d 4 q q r r r))))
 (let ((?x3453 (* 2 (* d q 4 q r r r))))
 (let ((?x3454 (* q r r r)))
 (let ((?x3452 (* 248 ?x3454)))
 (let ((?x3450 (* q q r r r)))
 (let ((?x3496 (* 56 ?x3450)))
 (let ((?x3449 (* 2 (* q 4 q r r r))))
 (let ((?x3284 (* 2 (* d 4 q 4 r r r))))
 (let ((?x2768 (* 2 (* d 4 4 4 r r r))))
 (let ((?x3282 (* 2 (* d q 4 4 r r r))))
 (let ((?x3042 (* 2 (* q q d r r r))))
 (let ((?x3040 (* 2 (* q 4 ?x179 r r r))))
 (let ((?x3038 (* 2 (* q q ?x179 r r r))))
 (let ((?x3036 (* q r r r r d)))
 (let ((?x3035 (* 16 ?x3036)))
 (let ((?x3034 (* q r r r r)))
 (let ((?x3033 (* 16 ?x3034)))
 (let ((?x3023 (* 2 (* q q r r r r d))))
 (let ((?x3020 (* q r r r x)))
 (let ((?x3017 (* (- 8) ?x3020)))
 (let ((?x3044 (* 2 (* q 4 d r r r))))
 (let ((?x2769 (* r r r)))
 (let ((?x2767 (* 336 ?x2769)))
 (let ((?x2529 (* (- 1) (* q q r r r x d))))
 (let ((?x2600 (* q q r r r d)))
 (let ((?x2598 (* 34 ?x2600)))
 (let ((?x2595 (* q q q r r r d d)))
 (let ((?x1804 (* 2 (* d 2 2 r r r))))
 (let ((?x2591 (* q q r r r d d)))
 (let ((?x2592 (* 13 ?x2591)))
 (let ((?x2476 (* 2 (* q q ?x144 r r r))))
 (let ((?x2474 (* 2 (* q 4 ?x144 r r r))))
 (let ((?x2412 (* 2 (* q q 2 r r r))))
 (let ((?x2410 (* 2 (* q 4 2 r r r))))
 (let ((?x862 (* 2 (* d 2 d r r r))))
 (let ((?x2290 (* 2 (* d d ?x144 r r r))))
 (let ((?x2281 (* 2 (* d 2 ?x144 r r r))))
 (let ((?x2043 (* 2 (* d d 2 r r r))))
 (let ((?x1836 (* 2 (* d 2 q r r r))))
 (let ((?x1634 (* 5 (* q q q r r r d))))
 (let ((?x1225 (* r r r d d d)))
 (let ((?x1438 (* 8 ?x1225)))
 (let ((?x1161 (* 2 (* d 2 ?x179 r r r))))
 (let ((?x990 (* q q q r r r)))
 (let ((?x3168 (* 6 ?x990)))
 (let ((?x982 (* q r r r d d d)))
 (let ((?x960 (* 2 (* d d ?x179 r r r))))
 (let ((?x769 (* r r r r)))
 (let ((?x983 (* 80 ?x769)))
 (let ((?x765 (* r r r r d)))
 (let ((?x387 (* 48 ?x765)))
 (let ((?x803 (* (- 4) (* r r r x d d))))
 (let ((?x978 (* (- 1) (* r r r x d d d))))
 (let ((?x552 (* r r r x)))
 (let ((?x553 (* (- 40) ?x552)))
 (let ((?x551 (* r r r d d d d)))
 (let ((?x432 (* 2 (* r r r r d d d))))
 (let ((?x430 (* 8 (* r r r r d d))))
 (let ((?x4175 (+ ?x430 ?x432 ?x551 ?x553 ?x978 ?x803 ?x387 ?x983 ?x960 ?x982 ?x3168 ?x1161 ?x1438 ?x1634 ?x1836 ?x2043 ?x2281 ?x2290 ?x862 ?x2410 ?x2412 ?x2474 ?x2476 ?x2592 ?x1804 ?x2595 ?x2598 (* (- 8) (* q r r r x d)) ?x2529 ?x2767 ?x3044 ?x3017 ?x3023 ?x3033 ?x3035 ?x3038 ?x3040 ?x3042 ?x3282 ?x2768 ?x3284 ?x3449 ?x3496 ?x3452 ?x3453 ?x3495 ?x3286 ?x3289 ?x3336 ?x3700 ?x3702 ?x3730 ?x3732)))
 (let ((?x4371 (* ?x4175 ?x4333 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x3106 ?x3345 ?x3347 ?x3225 ?x3224 ?x3485))))
 (let ((?x3820 (* 8 d)))
 (let ((?x2917 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x3106 ?x3820 ?x3347 ?x3225 ?x3224)))
 (let ((?x3825 (* (- 1) d)))
 (let ((?x2274 (+ (- 2) q ?x144 ?x179 ?x3825)))
 (let ((?x3824 (+ (- 4) q)))
 (let ((?x489 (+ (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x2274 r) (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x2274 ?x2274 r r r)) (* (- 1) (* ?x2274 ?x2274 ?x2274 r)))))
 (let ((?x3867 (* 2 (* d d ?x3825 r r r))))
 (let ((?x3865 (* 2 (* d 2 ?x3825 r r r))))
 (let ((?x3863 (* 2 (* d d (- 2) r r r))))
 (let ((?x3861 (* 2 (* d 2 (- 2) r r r))))
 (let ((?x3832 (* (- 96) ?x3729)))
 (let ((?x3841 (* (- 16) ?x3034)))
 (let ((?x3843 (* 8 ?x3020)))
 (let ((?x3835 (* (- 336) ?x2769)))
 (let ((?x2562 (* (- 2) (* q q r r r x))))
 (let ((?x3837 (* (- 13) ?x2591)))
 (let ((?x2506 (* 4 (* q q r r r r))))
 (let ((?x3838 (* (- 6) ?x1225)))
 (let ((?x3839 (* (- 1) ?x551)))
 (let ((?x3338 (+ (* (- 4) (* q q 2 d r r r)) ?x430 ?x432 ?x3839 ?x553 (* (- 4) (* q 2 ?x144 r r r)) ?x978 ?x803 (* (- 4) (* q d ?x144 r r r)) ?x387 ?x983 (* (- 4) (* q 2 q r r r)) ?x960 ?x982 ?x3168 (* (- 4) (* q q 2 2 r r r)) ?x1161 ?x3838 ?x1634 ?x1836 (* (- 4) (* q d ?x179 r r r)) (* (- 4) (* q (- 4) 2 2 r r r)) (* (- 4) (* q (- 4) d 2 r r r)) (* (- 4) (* q (- 4) 2 d r r r)) (* (- 4) (* q (- 4) d d r r r)) ?x2281 ?x2290 (* (- 4) (* q q d 2 r r r)) ?x2506 ?x3837 ?x2595 ?x2562 (* (- 44) ?x2600) (* 4 (* q r r r x d)) ?x2529 (* (- 4) (* q 2 (- 2) r r r)) (* (- 4) (* q d (- 2) r r r)) (* (- 4) (* q 2 ?x3825 r r r)) (* (- 4) (* q d ?x3825 r r r)) ?x3835 (* (- 4) (* q 2 ?x179 r r r)) ?x3843 ?x3023 ?x3841 (* (- 8) ?x3036) (* (- 44) ?x3450) (* 184 ?x3454) ?x3336 (* 42 ?x3699) (* 168 ?x3701) ?x3832 (* (- 344) ?x3731) ?x3861 ?x3863 ?x3865 ?x3867)))
 (let ((?x881 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x3106 ?x3347 ?x3225 ?x3224)))
 (let ((?x3801 (* 2 (* q q r r d d d))))
 (let ((?x3799 (* 8 (* q q r r d d))))
 (let ((?x3797 (* 16 (* q q r r d))))
 (let ((?x3795 (* q q q r d d d)))
 (let ((?x3794 (* 6 (* q q q r d d))))
 (let ((?x3792 (* 8 (* q q q r d))))
 (let ((?x3780 (* r x x x)))
 (let ((?x3779 (* (- 6) (* r r x x))))
 (let ((?x3777 (* (- 3) (* q r x x))))
 (let ((?x3775 (* 12 (* q r r x))))
 (let ((?x3773 (* (- 5) (* q q r x))))
 (let ((?x3771 (* 10 (* q q r r))))
 (let ((?x3752 (* (- 16) (* q q q q r r r r))))
 (let ((?x3748 (* 8 (* q q q q r r r x))))
 (let ((?x3744 (* (- 16) (* q q q r r r r r))))
 (let ((?x3740 (* 16 (* q q q r r r r x))))
 (let ((?x3736 (* (- 4) (* q q q r r r x x))))
 (let ((?x3082 (* (- 12) ?x3454)))
 (let ((?x3087 (* (- 4) (* q q q q q r r r))))
 (let ((?x3084 (* (- 8) ?x769)))
 (let ((?x678 (* q q q r)))
 (let ((?x3769 (* 7 ?x678)))
 (let ((?x3085 (* 12 ?x552)))
 (let ((?x2158 (+ ?x3085 (* 2 (* d 2 q r q q)) ?x3769 ?x3084 (* 2 (* d d ?x179 r q q)) (* 2 (* d 2 ?x179 r q q)) (* 8 (* q q q q r r r x d)) (* 2 (* q q q q r r r x d d)) (* (- 4) (* q q q r r r r r d d)) (* 16 (* q q q r r r r x d)) (* 4 (* q q q r r r r x d d)) (* (- 4) (* q q q r r r x x d)) (* (- 1) (* q q q r r r x x d d)) (* (- 1) (* q q r x d d d)) (* (- 4) (* q q r x d d)) (* 2 (* d d ?x144 r q q)) (* 2 (* d 2 ?x144 r q q)) (* (- 8) (* q q r x d)) ?x3087 ?x3082 (* (- 1) (* q q q q q r r r d d)) (* (- 4) (* q q q q r r r r d d)) ?x3736 ?x3740 (* (- 16) (* q q q r r r r r d)) ?x3744 ?x3748 (* (- 16) (* q q q q r r r r d)) ?x3752 (* (- 4) (* q q q q q r r r d)) ?x3771 ?x3773 ?x3775 ?x3777 ?x3779 ?x3780 ?x3792 ?x3794 ?x3795 ?x3797 ?x3799 ?x3801)))
 (let ((?x3810 (* 8 ?x3701)))
 (let ((?x3809 (* 6 ?x3699)))
 (let ((?x3811 (* 8 ?x3454)))
 (let ((?x3812 (* 16 ?x769)))
 (let ((?x3813 (* 16 ?x765)))
 (let ((?x3814 (* (- 8) ?x552)))
 (let ((?x1287 (+ ?x430 ?x432 ?x3814 ?x978 ?x803 (* 2 (* ?x179 r r r q q)) ?x3813 ?x3812 (* 2 (* ?x144 r r r q q)) ?x960 ?x982 (* 4 ?x990) ?x1161 ?x1634 (* 2 (* q r r r q q)) ?x1836 ?x2281 ?x2290 ?x2595 ?x2529 ?x3023 ?x3811 (* (- 8) ?x3585) ?x3809 ?x3810)))
 (let ((?x3884 (* 16 d)))
 (let ((?x1057 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x3106 ?x3884 ?x3347 ?x3225 ?x3224)))
 (let ((?x3889 (* (- 2) d)))
 (let ((?x1233 (+ (- 4) q ?x144 ?x179 ?x3889)))
 (let ((?x3888 (+ (- 8) q)))
 (let ((?x1843 (+ (* (- 1) (* ?x1233 ?x1233 ?x1233 r)) (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x1233 ?x1233 r r r)) (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x1233 r))))
 (let ((?x3940 (* 2 (* d d ?x3889 r r r))))
 (let ((?x3938 (* 2 (* d 2 ?x3889 r r r))))
 (let ((?x3936 (* 2 (* d d (- 4) r r r))))
 (let ((?x3934 (* 2 (* d 2 (- 4) r r r))))
 (let ((?x3898 (* (- 672) ?x3729)))
 (let ((?x3840 (* (- 16) ?x3036)))
 (let ((?x3912 (* (- 32) ?x3034)))
 (let ((?x3914 (* 16 ?x3020)))
 (let ((?x3902 (* (- 2592) ?x2769)))
 (let ((?x3904 (* (- 26) ?x2591)))
 (let ((?x3905 (* (- 12) ?x1225)))
 (let ((?x3906 (* 272 ?x769)))
 (let ((?x3907 (* 144 ?x765)))
 (let ((?x3909 (* (- 136) ?x552)))
 (let ((?x3908 (* (- 2) ?x551)))
 (let ((?x1046 (+ (* (- 8) (* q (- 8) d 2 r r r)) (* (- 8) (* q q 2 d r r r)) ?x430 ?x432 ?x3908 ?x3909 (* (- 8) (* q 2 ?x144 r r r)) ?x978 ?x803 (* (- 8) (* q d ?x144 r r r)) ?x3907 ?x3906 (* (- 8) (* q 2 (- 4) r r r)) (* (- 8) (* q d (- 4) r r r)) (* (- 8) (* q 2 q r r r)) (* (- 8) (* q 2 ?x3889 r r r)) ?x960 ?x982 ?x3168 (* (- 8) (* q d ?x3889 r r r)) (* (- 8) (* q q 2 2 r r r)) ?x1161 ?x3905 (* (- 8) (* q (- 8) 2 d r r r)) ?x1634 (* (- 8) (* q (- 8) 2 2 r r r)) (* (- 8) (* q (- 8) d d r r r)) ?x1836 (* (- 8) (* q d ?x179 r r r)) ?x2281 ?x2290 (* (- 8) (* q q d 2 r r r)) ?x2506 ?x3904 ?x2595 ?x2562 (* (- 88) ?x2600) (* 8 (* q r r r x d)) ?x2529 ?x3902 (* (- 8) (* q 2 ?x179 r r r)) ?x3914 ?x3023 ?x3912 ?x3840 (* (- 88) ?x3450) (* 712 ?x3454) (* (- 72) ?x3585) (* 150 ?x3699) (* 648 ?x3701) ?x3898 (* (- 2608) ?x3731) ?x3934 ?x3936 ?x3938 ?x3940)))
 (let (($x4237 (or (not (= (* ?x1046 ?x1843 ?x1057) 0)) (not (= (* ?x1287 ?x2158 ?x881) 0)) (not (= (* ?x3338 ?x489 ?x2917) 0)) (not (= ?x4371 0)))))
 (and (= ?x881 0) $x4237))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x585 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1667 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x1562 (+ 2 ?x144 ?x179 q d)))
 (let ((?x3487 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x828 (* 4 (* ?x3487 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x3820 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1393 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x847 (+ 16 ?x427 ?x1393 ?x30 ?x3820 ?x182 ?x828 ?x214 ?x230 (* ?x3487 ?x3487 (+ 4 q)) (* (- 2) (* ?x3487 (+ 4 q))) ?x280 (* (- 4) (* ?x3487 ?x1562)) ?x1667)))
 (let ((?x3476 (+ 4 q)))
 (let ((?x830 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x1562 ?x1562 r r r)) (* (- 1) (* ?x1562 ?x1562 ?x1562 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x1562 r))))
 (let ((?x603 (+ (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 r r r) (* ?x3487 ?x3487 ?x3487 ?x1562 r r r) (* ?x3487 ?x3476 ?x3476 ?x1562 r r r))))
 (let (($x2306 (not (= (* ?x603 ?x830 ?x847) 0))))
 (let ((?x3345 (* (- 8) d)))
 (let ((?x2022 (+ (- 16) ?x427 ?x1393 ?x30 ?x3345 ?x182 ?x828 ?x214 ?x230 (* (+ (- 4) q) ?x3487 ?x3487) (* (- 2) (* (+ (- 4) q) ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 2) ?x144 ?x179 q (* (- 1) d)))) ?x1667)))
 (let ((?x3825 (* (- 1) d)))
 (let ((?x2528 (+ (- 2) ?x144 ?x179 q ?x3825)))
 (let ((?x3824 (+ (- 4) q)))
 (let ((?x2036 (+ (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x2528 ?x2528 r r r)) (* (- 1) (* ?x2528 ?x2528 ?x2528 r)) (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x2528 r))))
 (let ((?x1922 (+ (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x2528 r r r) (* ?x3824 ?x3824 ?x3487 ?x2528 r r r))))
 (let (($x2056 (not (= (* ?x1922 ?x2036 ?x2022) 0))))
 (let ((?x440 (+ ?x427 ?x1393 ?x30 ?x182 ?x828 ?x214 ?x230 (* ?x3487 ?x3487 q) (* (- 2) (* ?x3487 q)) ?x280 (* (- 4) (* ?x3487 (+ ?x144 ?x179 q))) ?x1667)))
 (let ((?x921 (* (- 1) (* (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) r))))
 (let ((?x254 (+ ?x144 ?x179 q)))
 (let ((?x2923 (+ (* (- 1) (* ?x3487 ?x3487 ?x254 ?x254 r r r q q q)) ?x921 (* ?x3487 ?x3487 ?x3487 ?x254 r q q))))
 (let ((?x676 (+ (* ?x3487 ?x3487 r r r q q q) (* ?x3487 ?x3487 ?x3487 ?x254 r r r) (* ?x3487 ?x254 r r r q q))))
 (let (($x1941 (not (= (* ?x676 ?x2923 ?x440) 0))))
 (let ((?x694 (+ (- 32) ?x427 ?x1393 ?x30 (* (- 16) d) ?x182 ?x828 ?x214 ?x230 (* (+ (- 8) q) ?x3487 ?x3487) (* (- 2) (* (+ (- 8) q) ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 4) ?x144 ?x179 q (* (- 2) d)))) ?x1667)))
 (let ((?x3889 (* (- 2) d)))
 (let ((?x2094 (+ (- 4) ?x144 ?x179 q ?x3889)))
 (let ((?x3888 (+ (- 8) q)))
 (let ((?x2084 (+ (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x2094 ?x2094 r r r)) (* (- 1) (* ?x2094 ?x2094 ?x2094 r)) (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x2094 r))))
 (let ((?x2092 (+ (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x2094 r r r) (* ?x3888 ?x3888 ?x3487 ?x2094 r r r))))
 (let (($x679 (not (= (* ?x2092 ?x2084 ?x694) 0))))
 (let ((?x3106 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x600 (+ ?x211 ?x182 ?x3106 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1667)))
 (let (($x563 (= ?x600 0)))
 (and $x563 (or $x679 $x1941 $x2056 $x2306))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x4251 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x3485 (* 2 (* d 4))))
 (let ((?x3224 (* (- 2) (* q d))))
 (let ((?x3225 (* q d d)))
 (let ((?x3217 (* r d)))
 (let ((?x3347 (* (- 4) ?x3217)))
 (let ((?x3345 (* (- 8) d)))
 (let ((?x3106 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x2977 (+ 2 q ?x144 ?x179 d)))
 (let ((?x3476 (+ 4 q)))
 (let ((?x3487 (+ 2 d)))
 (let ((?x4333 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x2977 ?x2977 r r r)) (* (- 1) (* ?x2977 ?x2977 ?x2977 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x2977 r))))
 (let ((?x3731 (* r r r d)))
 (let ((?x3732 (* 216 ?x3731)))
 (let ((?x3729 (* r r r d d)))
 (let ((?x3730 (* 96 ?x3729)))
 (let ((?x3701 (* q r r r d)))
 (let ((?x3702 (* 144 ?x3701)))
 (let ((?x3699 (* q r r r d d)))
 (let ((?x3700 (* 62 ?x3699)))
 (let ((?x3585 (* r r r x d)))
 (let ((?x3336 (* (- 24) ?x3585)))
 (let ((?x3289 (* 2 (* d q q 4 r r r))))
 (let ((?x3286 (* 2 (* d 4 4 q r r r))))
 (let ((?x3495 (* 2 (* d 4 q q r r r))))
 (let ((?x3453 (* 2 (* d q 4 q r r r))))
 (let ((?x3454 (* q r r r)))
 (let ((?x3452 (* 248 ?x3454)))
 (let ((?x3450 (* q q r r r)))
 (let ((?x3496 (* 56 ?x3450)))
 (let ((?x3449 (* 2 (* q 4 q r r r))))
 (let ((?x3284 (* 2 (* d 4 q 4 r r r))))
 (let ((?x2768 (* 2 (* d 4 4 4 r r r))))
 (let ((?x3282 (* 2 (* d q 4 4 r r r))))
 (let ((?x3042 (* 2 (* q q d r r r))))
 (let ((?x3040 (* 2 (* q 4 ?x179 r r r))))
 (let ((?x3038 (* 2 (* q q ?x179 r r r))))
 (let ((?x3036 (* q r r r r d)))
 (let ((?x3035 (* 16 ?x3036)))
 (let ((?x3034 (* q r r r r)))
 (let ((?x3033 (* 16 ?x3034)))
 (let ((?x3023 (* 2 (* q q r r r r d))))
 (let ((?x3020 (* q r r r x)))
 (let ((?x3017 (* (- 8) ?x3020)))
 (let ((?x3044 (* 2 (* q 4 d r r r))))
 (let ((?x2769 (* r r r)))
 (let ((?x2767 (* 336 ?x2769)))
 (let ((?x2529 (* (- 1) (* q q r r r x d))))
 (let ((?x2600 (* q q r r r d)))
 (let ((?x2598 (* 34 ?x2600)))
 (let ((?x2595 (* q q q r r r d d)))
 (let ((?x1804 (* 2 (* d 2 2 r r r))))
 (let ((?x2591 (* q q r r r d d)))
 (let ((?x2592 (* 13 ?x2591)))
 (let ((?x2476 (* 2 (* q q ?x144 r r r))))
 (let ((?x2474 (* 2 (* q 4 ?x144 r r r))))
 (let ((?x2412 (* 2 (* q q 2 r r r))))
 (let ((?x2410 (* 2 (* q 4 2 r r r))))
 (let ((?x862 (* 2 (* d 2 d r r r))))
 (let ((?x2290 (* 2 (* d d ?x144 r r r))))
 (let ((?x2281 (* 2 (* d 2 ?x144 r r r))))
 (let ((?x2043 (* 2 (* d d 2 r r r))))
 (let ((?x1836 (* 2 (* d 2 q r r r))))
 (let ((?x1634 (* 5 (* q q q r r r d))))
 (let ((?x1225 (* r r r d d d)))
 (let ((?x1438 (* 8 ?x1225)))
 (let ((?x1161 (* 2 (* d 2 ?x179 r r r))))
 (let ((?x990 (* q q q r r r)))
 (let ((?x3168 (* 6 ?x990)))
 (let ((?x982 (* q r r r d d d)))
 (let ((?x960 (* 2 (* d d ?x179 r r r))))
 (let ((?x769 (* r r r r)))
 (let ((?x983 (* 80 ?x769)))
 (let ((?x765 (* r r r r d)))
 (let ((?x387 (* 48 ?x765)))
 (let ((?x803 (* (- 4) (* r r r x d d))))
 (let ((?x978 (* (- 1) (* r r r x d d d))))
 (let ((?x552 (* r r r x)))
 (let ((?x553 (* (- 40) ?x552)))
 (let ((?x551 (* r r r d d d d)))
 (let ((?x432 (* 2 (* r r r r d d d))))
 (let ((?x430 (* 8 (* r r r r d d))))
 (let ((?x4175 (+ ?x430 ?x432 ?x551 ?x553 ?x978 ?x803 ?x387 ?x983 ?x960 ?x982 ?x3168 ?x1161 ?x1438 ?x1634 ?x1836 ?x2043 ?x2281 ?x2290 ?x862 ?x2410 ?x2412 ?x2474 ?x2476 ?x2592 ?x1804 ?x2595 ?x2598 (* (- 8) (* q r r r x d)) ?x2529 ?x2767 ?x3044 ?x3017 ?x3023 ?x3033 ?x3035 ?x3038 ?x3040 ?x3042 ?x3282 ?x2768 ?x3284 ?x3449 ?x3496 ?x3452 ?x3453 ?x3495 ?x3286 ?x3289 ?x3336 ?x3700 ?x3702 ?x3730 ?x3732)))
 (let ((?x4371 (* ?x4175 ?x4333 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x3106 ?x3345 ?x3347 ?x3225 ?x3224 ?x3485))))
 (let ((?x3820 (* 8 d)))
 (let ((?x2917 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x3106 ?x3820 ?x3347 ?x3225 ?x3224)))
 (let ((?x3825 (* (- 1) d)))
 (let ((?x2274 (+ (- 2) q ?x144 ?x179 ?x3825)))
 (let ((?x3824 (+ (- 4) q)))
 (let ((?x489 (+ (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x2274 r) (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x2274 ?x2274 r r r)) (* (- 1) (* ?x2274 ?x2274 ?x2274 r)))))
 (let ((?x3867 (* 2 (* d d ?x3825 r r r))))
 (let ((?x3865 (* 2 (* d 2 ?x3825 r r r))))
 (let ((?x3863 (* 2 (* d d (- 2) r r r))))
 (let ((?x3861 (* 2 (* d 2 (- 2) r r r))))
 (let ((?x3832 (* (- 96) ?x3729)))
 (let ((?x3841 (* (- 16) ?x3034)))
 (let ((?x3843 (* 8 ?x3020)))
 (let ((?x3835 (* (- 336) ?x2769)))
 (let ((?x2562 (* (- 2) (* q q r r r x))))
 (let ((?x3837 (* (- 13) ?x2591)))
 (let ((?x2506 (* 4 (* q q r r r r))))
 (let ((?x3838 (* (- 6) ?x1225)))
 (let ((?x3839 (* (- 1) ?x551)))
 (let ((?x3338 (+ (* (- 4) (* q q 2 d r r r)) ?x430 ?x432 ?x3839 ?x553 (* (- 4) (* q 2 ?x144 r r r)) ?x978 ?x803 (* (- 4) (* q d ?x144 r r r)) ?x387 ?x983 (* (- 4) (* q 2 q r r r)) ?x960 ?x982 ?x3168 (* (- 4) (* q q 2 2 r r r)) ?x1161 ?x3838 ?x1634 ?x1836 (* (- 4) (* q d ?x179 r r r)) (* (- 4) (* q (- 4) 2 2 r r r)) (* (- 4) (* q (- 4) d 2 r r r)) (* (- 4) (* q (- 4) 2 d r r r)) (* (- 4) (* q (- 4) d d r r r)) ?x2281 ?x2290 (* (- 4) (* q q d 2 r r r)) ?x2506 ?x3837 ?x2595 ?x2562 (* (- 44) ?x2600) (* 4 (* q r r r x d)) ?x2529 (* (- 4) (* q 2 (- 2) r r r)) (* (- 4) (* q d (- 2) r r r)) (* (- 4) (* q 2 ?x3825 r r r)) (* (- 4) (* q d ?x3825 r r r)) ?x3835 (* (- 4) (* q 2 ?x179 r r r)) ?x3843 ?x3023 ?x3841 (* (- 8) ?x3036) (* (- 44) ?x3450) (* 184 ?x3454) ?x3336 (* 42 ?x3699) (* 168 ?x3701) ?x3832 (* (- 344) ?x3731) ?x3861 ?x3863 ?x3865 ?x3867)))
 (let ((?x881 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x3106 ?x3347 ?x3225 ?x3224)))
 (let ((?x3801 (* 2 (* q q r r d d d))))
 (let ((?x3799 (* 8 (* q q r r d d))))
 (let ((?x3797 (* 16 (* q q r r d))))
 (let ((?x3795 (* q q q r d d d)))
 (let ((?x3794 (* 6 (* q q q r d d))))
 (let ((?x3792 (* 8 (* q q q r d))))
 (let ((?x3780 (* r x x x)))
 (let ((?x3779 (* (- 6) (* r r x x))))
 (let ((?x3777 (* (- 3) (* q r x x))))
 (let ((?x3775 (* 12 (* q r r x))))
 (let ((?x3773 (* (- 5) (* q q r x))))
 (let ((?x3771 (* 10 (* q q r r))))
 (let ((?x3752 (* (- 16) (* q q q q r r r r))))
 (let ((?x3748 (* 8 (* q q q q r r r x))))
 (let ((?x3744 (* (- 16) (* q q q r r r r r))))
 (let ((?x3740 (* 16 (* q q q r r r r x))))
 (let ((?x3736 (* (- 4) (* q q q r r r x x))))
 (let ((?x3082 (* (- 12) ?x3454)))
 (let ((?x3087 (* (- 4) (* q q q q q r r r))))
 (let ((?x3084 (* (- 8) ?x769)))
 (let ((?x678 (* q q q r)))
 (let ((?x3769 (* 7 ?x678)))
 (let ((?x3085 (* 12 ?x552)))
 (let ((?x2158 (+ ?x3085 (* 2 (* d 2 q r q q)) ?x3769 ?x3084 (* 2 (* d d ?x179 r q q)) (* 2 (* d 2 ?x179 r q q)) (* 8 (* q q q q r r r x d)) (* 2 (* q q q q r r r x d d)) (* (- 4) (* q q q r r r r r d d)) (* 16 (* q q q r r r r x d)) (* 4 (* q q q r r r r x d d)) (* (- 4) (* q q q r r r x x d)) (* (- 1) (* q q q r r r x x d d)) (* (- 1) (* q q r x d d d)) (* (- 4) (* q q r x d d)) (* 2 (* d d ?x144 r q q)) (* 2 (* d 2 ?x144 r q q)) (* (- 8) (* q q r x d)) ?x3087 ?x3082 (* (- 1) (* q q q q q r r r d d)) (* (- 4) (* q q q q r r r r d d)) ?x3736 ?x3740 (* (- 16) (* q q q r r r r r d)) ?x3744 ?x3748 (* (- 16) (* q q q q r r r r d)) ?x3752 (* (- 4) (* q q q q q r r r d)) ?x3771 ?x3773 ?x3775 ?x3777 ?x3779 ?x3780 ?x3792 ?x3794 ?x3795 ?x3797 ?x3799 ?x3801)))
 (let ((?x3810 (* 8 ?x3701)))
 (let ((?x3809 (* 6 ?x3699)))
 (let ((?x3811 (* 8 ?x3454)))
 (let ((?x3812 (* 16 ?x769)))
 (let ((?x3813 (* 16 ?x765)))
 (let ((?x3814 (* (- 8) ?x552)))
 (let ((?x1287 (+ ?x430 ?x432 ?x3814 ?x978 ?x803 (* 2 (* ?x179 r r r q q)) ?x3813 ?x3812 (* 2 (* ?x144 r r r q q)) ?x960 ?x982 (* 4 ?x990) ?x1161 ?x1634 (* 2 (* q r r r q q)) ?x1836 ?x2281 ?x2290 ?x2595 ?x2529 ?x3023 ?x3811 (* (- 8) ?x3585) ?x3809 ?x3810)))
 (let ((?x3884 (* 16 d)))
 (let ((?x1057 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x3106 ?x3884 ?x3347 ?x3225 ?x3224)))
 (let ((?x3889 (* (- 2) d)))
 (let ((?x1233 (+ (- 4) q ?x144 ?x179 ?x3889)))
 (let ((?x3888 (+ (- 8) q)))
 (let ((?x1843 (+ (* (- 1) (* ?x1233 ?x1233 ?x1233 r)) (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x1233 ?x1233 r r r)) (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x1233 r))))
 (let ((?x3940 (* 2 (* d d ?x3889 r r r))))
 (let ((?x3938 (* 2 (* d 2 ?x3889 r r r))))
 (let ((?x3936 (* 2 (* d d (- 4) r r r))))
 (let ((?x3934 (* 2 (* d 2 (- 4) r r r))))
 (let ((?x3898 (* (- 672) ?x3729)))
 (let ((?x3840 (* (- 16) ?x3036)))
 (let ((?x3912 (* (- 32) ?x3034)))
 (let ((?x3914 (* 16 ?x3020)))
 (let ((?x3902 (* (- 2592) ?x2769)))
 (let ((?x3904 (* (- 26) ?x2591)))
 (let ((?x3905 (* (- 12) ?x1225)))
 (let ((?x3906 (* 272 ?x769)))
 (let ((?x3907 (* 144 ?x765)))
 (let ((?x3909 (* (- 136) ?x552)))
 (let ((?x3908 (* (- 2) ?x551)))
 (let ((?x1046 (+ (* (- 8) (* q (- 8) d 2 r r r)) (* (- 8) (* q q 2 d r r r)) ?x430 ?x432 ?x3908 ?x3909 (* (- 8) (* q 2 ?x144 r r r)) ?x978 ?x803 (* (- 8) (* q d ?x144 r r r)) ?x3907 ?x3906 (* (- 8) (* q 2 (- 4) r r r)) (* (- 8) (* q d (- 4) r r r)) (* (- 8) (* q 2 q r r r)) (* (- 8) (* q 2 ?x3889 r r r)) ?x960 ?x982 ?x3168 (* (- 8) (* q d ?x3889 r r r)) (* (- 8) (* q q 2 2 r r r)) ?x1161 ?x3905 (* (- 8) (* q (- 8) 2 d r r r)) ?x1634 (* (- 8) (* q (- 8) 2 2 r r r)) (* (- 8) (* q (- 8) d d r r r)) ?x1836 (* (- 8) (* q d ?x179 r r r)) ?x2281 ?x2290 (* (- 8) (* q q d 2 r r r)) ?x2506 ?x3904 ?x2595 ?x2562 (* (- 88) ?x2600) (* 8 (* q r r r x d)) ?x2529 ?x3902 (* (- 8) (* q 2 ?x179 r r r)) ?x3914 ?x3023 ?x3912 ?x3840 (* (- 88) ?x3450) (* 712 ?x3454) (* (- 72) ?x3585) (* 150 ?x3699) (* 648 ?x3701) ?x3898 (* (- 2608) ?x3731) ?x3934 ?x3936 ?x3938 ?x3940)))
 (let (($x4237 (or (not (= (* ?x1046 ?x1843 ?x1057) 0)) (not (= (* ?x1287 ?x2158 ?x881) 0)) (not (= (* ?x3338 ?x489 ?x2917) 0)) (not (= ?x4371 0)))))
 (let (($x4275 (and (= ?x881 0) $x4237)))
 (let ((?x1667 (* 4 (* d00 r00))))
 (let ((?x828 (* 4 (* ?x3487 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x1393 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x847 (+ 16 ?x427 ?x1393 ?x30 ?x3820 ?x182 ?x828 ?x214 ?x230 (* ?x3487 ?x3487 ?x3476) (* (- 2) (* ?x3487 ?x3476)) ?x280 (* (- 4) (* ?x3487 (+ 2 ?x144 ?x179 q d))) ?x1667)))
 (let ((?x1562 (+ 2 ?x144 ?x179 q d)))
 (let ((?x830 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x1562 ?x1562 r r r)) (* (- 1) (* ?x1562 ?x1562 ?x1562 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x1562 r))))
 (let ((?x603 (+ (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 r r r) (* ?x3487 ?x3487 ?x3487 ?x1562 r r r) (* ?x3487 ?x3476 ?x3476 ?x1562 r r r))))
 (let (($x2306 (not (= (* ?x603 ?x830 ?x847) 0))))
 (let ((?x2022 (+ (- 16) ?x427 ?x1393 ?x30 ?x3345 ?x182 ?x828 ?x214 ?x230 (* ?x3824 ?x3487 ?x3487) (* (- 2) (* ?x3824 ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 2) ?x144 ?x179 q ?x3825))) ?x1667)))
 (let ((?x2528 (+ (- 2) ?x144 ?x179 q ?x3825)))
 (let ((?x2036 (+ (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x2528 ?x2528 r r r)) (* (- 1) (* ?x2528 ?x2528 ?x2528 r)) (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x2528 r))))
 (let ((?x1922 (+ (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x2528 r r r) (* ?x3824 ?x3824 ?x3487 ?x2528 r r r))))
 (let (($x2056 (not (= (* ?x1922 ?x2036 ?x2022) 0))))
 (let ((?x440 (+ ?x427 ?x1393 ?x30 ?x182 ?x828 ?x214 ?x230 (* ?x3487 ?x3487 q) (* (- 2) (* ?x3487 q)) ?x280 (* (- 4) (* ?x3487 (+ ?x144 ?x179 q))) ?x1667)))
 (let ((?x921 (* (- 1) (* (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) r))))
 (let ((?x254 (+ ?x144 ?x179 q)))
 (let ((?x2923 (+ (* (- 1) (* ?x3487 ?x3487 ?x254 ?x254 r r r q q q)) ?x921 (* ?x3487 ?x3487 ?x3487 ?x254 r q q))))
 (let ((?x676 (+ (* ?x3487 ?x3487 r r r q q q) (* ?x3487 ?x3487 ?x3487 ?x254 r r r) (* ?x3487 ?x254 r r r q q))))
 (let (($x1941 (not (= (* ?x676 ?x2923 ?x440) 0))))
 (let ((?x694 (+ (- 32) ?x427 ?x1393 ?x30 (* (- 16) d) ?x182 ?x828 ?x214 ?x230 (* ?x3888 ?x3487 ?x3487) (* (- 2) (* ?x3888 ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 4) ?x144 ?x179 q ?x3889))) ?x1667)))
 (let ((?x2094 (+ (- 4) ?x144 ?x179 q ?x3889)))
 (let ((?x2084 (+ (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x2094 ?x2094 r r r)) (* (- 1) (* ?x2094 ?x2094 ?x2094 r)) (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x2094 r))))
 (let ((?x2092 (+ (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x2094 r r r) (* ?x3888 ?x3888 ?x3487 ?x2094 r r r))))
 (let (($x679 (not (= (* ?x2092 ?x2084 ?x694) 0))))
 (let ((?x600 (+ ?x211 ?x182 ?x3106 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1667)))
 (let (($x563 (= ?x600 0)))
 (let (($x1692 (and $x563 (or $x679 $x1941 $x2056 $x2306))))
 (rewrite (= $x1692 $x4275)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x677 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1667 (* 4 (* d00 r00))))
 (let ((?x3889 (* (- 2) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x2094 (+ (- 4) ?x144 ?x179 q ?x3889)))
 (let ((?x3487 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x828 (* 4 (* ?x3487 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x1393 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x694 (+ (- 32) ?x427 ?x1393 ?x30 (* (- 16) d) ?x182 ?x828 ?x214 ?x230 (* (+ (- 8) q) ?x3487 ?x3487) (* (- 2) (* (+ (- 8) q) ?x3487)) ?x280 (* (- 4) (* ?x3487 ?x2094)) ?x1667)))
 (let ((?x3888 (+ (- 8) q)))
 (let ((?x2084 (+ (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x2094 ?x2094 r r r)) (* (- 1) (* ?x2094 ?x2094 ?x2094 r)) (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x2094 r))))
 (let ((?x2092 (+ (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x2094 r r r) (* ?x3888 ?x3888 ?x3487 ?x2094 r r r))))
 (let (($x679 (not (= (* ?x2092 ?x2084 ?x694) 0))))
 (let ((?x3345 (* (- 8) d)))
 (let ((?x2022 (+ (- 16) ?x427 ?x1393 ?x30 ?x3345 ?x182 ?x828 ?x214 ?x230 (* (+ (- 4) q) ?x3487 ?x3487) (* (- 2) (* (+ (- 4) q) ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 2) ?x144 ?x179 q (* (- 1) d)))) ?x1667)))
 (let ((?x3825 (* (- 1) d)))
 (let ((?x2528 (+ (- 2) ?x144 ?x179 q ?x3825)))
 (let ((?x3824 (+ (- 4) q)))
 (let ((?x2036 (+ (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x2528 ?x2528 r r r)) (* (- 1) (* ?x2528 ?x2528 ?x2528 r)) (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x2528 r))))
 (let ((?x1922 (+ (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x2528 r r r) (* ?x3824 ?x3824 ?x3487 ?x2528 r r r))))
 (let (($x2056 (not (= (* ?x1922 ?x2036 ?x2022) 0))))
 (let ((?x440 (+ ?x427 ?x1393 ?x30 ?x182 ?x828 ?x214 ?x230 (* ?x3487 ?x3487 q) (* (- 2) (* ?x3487 q)) ?x280 (* (- 4) (* ?x3487 (+ ?x144 ?x179 q))) ?x1667)))
 (let ((?x921 (* (- 1) (* (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) r))))
 (let ((?x254 (+ ?x144 ?x179 q)))
 (let ((?x2923 (+ (* (- 1) (* ?x3487 ?x3487 ?x254 ?x254 r r r q q q)) ?x921 (* ?x3487 ?x3487 ?x3487 ?x254 r q q))))
 (let ((?x676 (+ (* ?x3487 ?x3487 r r r q q q) (* ?x3487 ?x3487 ?x3487 ?x254 r r r) (* ?x3487 ?x254 r r r q q))))
 (let (($x1941 (not (= (* ?x676 ?x2923 ?x440) 0))))
 (let ((?x3820 (* 8 d)))
 (let ((?x847 (+ 16 ?x427 ?x1393 ?x30 ?x3820 ?x182 ?x828 ?x214 ?x230 (* ?x3487 ?x3487 (+ 4 q)) (* (- 2) (* ?x3487 (+ 4 q))) ?x280 (* (- 4) (* ?x3487 (+ 2 ?x144 ?x179 q d))) ?x1667)))
 (let ((?x1562 (+ 2 ?x144 ?x179 q d)))
 (let ((?x3476 (+ 4 q)))
 (let ((?x830 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x1562 ?x1562 r r r)) (* (- 1) (* ?x1562 ?x1562 ?x1562 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x1562 r))))
 (let ((?x603 (+ (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 r r r) (* ?x3487 ?x3487 ?x3487 ?x1562 r r r) (* ?x3487 ?x3476 ?x3476 ?x1562 r r r))))
 (let (($x2306 (not (= (* ?x603 ?x830 ?x847) 0))))
 (let ((?x3106 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x600 (+ ?x211 ?x182 ?x3106 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1667)))
 (let (($x563 (= ?x600 0)))
 (and $x563 (or $x2306 $x1941 $x2056 $x679))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1688 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1667 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x1562 (+ 2 ?x144 ?x179 q d)))
 (let ((?x3487 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x828 (* 4 (* ?x3487 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x3820 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1393 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x847 (+ 16 ?x427 ?x1393 ?x30 ?x3820 ?x182 ?x828 ?x214 ?x230 (* ?x3487 ?x3487 (+ 4 q)) (* (- 2) (* ?x3487 (+ 4 q))) ?x280 (* (- 4) (* ?x3487 ?x1562)) ?x1667)))
 (let ((?x3476 (+ 4 q)))
 (let ((?x830 (+ (* (- 1) (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 ?x1562 ?x1562 r r r)) (* (- 1) (* ?x1562 ?x1562 ?x1562 r)) (* ?x3487 ?x3487 ?x3487 ?x3476 ?x3476 ?x1562 r))))
 (let ((?x603 (+ (* ?x3487 ?x3487 ?x3476 ?x3476 ?x3476 r r r) (* ?x3487 ?x3487 ?x3487 ?x1562 r r r) (* ?x3487 ?x3476 ?x3476 ?x1562 r r r))))
 (let (($x2306 (not (= (* ?x603 ?x830 ?x847) 0))))
 (let ((?x3345 (* (- 8) d)))
 (let ((?x2022 (+ (- 16) ?x427 ?x1393 ?x30 ?x3345 ?x182 ?x828 ?x214 ?x230 (* (+ (- 4) q) ?x3487 ?x3487) (* (- 2) (* (+ (- 4) q) ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 2) ?x144 ?x179 q (* (- 1) d)))) ?x1667)))
 (let ((?x3825 (* (- 1) d)))
 (let ((?x2528 (+ (- 2) ?x144 ?x179 q ?x3825)))
 (let ((?x3824 (+ (- 4) q)))
 (let ((?x2036 (+ (* (- 1) (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 ?x2528 ?x2528 r r r)) (* (- 1) (* ?x2528 ?x2528 ?x2528 r)) (* ?x3824 ?x3824 ?x3487 ?x3487 ?x3487 ?x2528 r))))
 (let ((?x1922 (+ (* ?x3824 ?x3824 ?x3824 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x2528 r r r) (* ?x3824 ?x3824 ?x3487 ?x2528 r r r))))
 (let (($x2056 (not (= (* ?x1922 ?x2036 ?x2022) 0))))
 (let ((?x440 (+ ?x427 ?x1393 ?x30 ?x182 ?x828 ?x214 ?x230 (* ?x3487 ?x3487 q) (* (- 2) (* ?x3487 q)) ?x280 (* (- 4) (* ?x3487 (+ ?x144 ?x179 q))) ?x1667)))
 (let ((?x921 (* (- 1) (* (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) r))))
 (let ((?x254 (+ ?x144 ?x179 q)))
 (let ((?x2923 (+ (* (- 1) (* ?x3487 ?x3487 ?x254 ?x254 r r r q q q)) ?x921 (* ?x3487 ?x3487 ?x3487 ?x254 r q q))))
 (let ((?x676 (+ (* ?x3487 ?x3487 r r r q q q) (* ?x3487 ?x3487 ?x3487 ?x254 r r r) (* ?x3487 ?x254 r r r q q))))
 (let (($x1941 (not (= (* ?x676 ?x2923 ?x440) 0))))
 (let ((?x694 (+ (- 32) ?x427 ?x1393 ?x30 (* (- 16) d) ?x182 ?x828 ?x214 ?x230 (* (+ (- 8) q) ?x3487 ?x3487) (* (- 2) (* (+ (- 8) q) ?x3487)) ?x280 (* (- 4) (* ?x3487 (+ (- 4) ?x144 ?x179 q (* (- 2) d)))) ?x1667)))
 (let ((?x3889 (* (- 2) d)))
 (let ((?x2094 (+ (- 4) ?x144 ?x179 q ?x3889)))
 (let ((?x3888 (+ (- 8) q)))
 (let ((?x2084 (+ (* (- 1) (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 ?x2094 ?x2094 r r r)) (* (- 1) (* ?x2094 ?x2094 ?x2094 r)) (* ?x3888 ?x3888 ?x3487 ?x3487 ?x3487 ?x2094 r))))
 (let ((?x2092 (+ (* ?x3888 ?x3888 ?x3888 ?x3487 ?x3487 r r r) (* ?x3487 ?x3487 ?x3487 ?x2094 r r r) (* ?x3888 ?x3888 ?x3487 ?x2094 r r r))))
 (let (($x679 (not (= (* ?x2092 ?x2084 ?x694) 0))))
 (let ((?x3106 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x600 (+ ?x211 ?x182 ?x3106 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1667)))
 (let (($x563 (= ?x600 0)))
 (let (($x1692 (and $x563 (or $x679 $x1941 $x2056 $x2306))))
 (let (($x682 (and $x563 (or $x2306 $x1941 $x2056 $x679))))
 (rewrite (= $x682 $x1692))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x175 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x146 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x169 (+ (* ?x62 ?x62 ?x152 ?x152 ?x152 r r r) (* ?x62 ?x62 ?x62 ?x146 r r r) (* ?x62 ?x152 ?x152 ?x146 r r r))))
 (let ((?x163 (- (* (- 1) ?x62 ?x62 ?x152 ?x152 ?x152 ?x146 ?x146 r r r) (* ?x146 ?x146 ?x146 r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x150 (- (+ (- (* 8 ?x146) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x157 (+ (- (+ (- ?x150 ?x41) (* ?x62 ?x62 ?x152)) (* 2 ?x62 ?x152)) ?x49)))
 (let ((?x170 (* (+ (- ?x157 (* 4 ?x62 ?x146)) ?x53) (+ ?x163 (* ?x62 ?x62 ?x62 ?x152 ?x152 ?x146 r)) ?x169)))
 (let ((?x117 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x140 (+ (* ?x62 ?x62 ?x123 ?x123 ?x123 r r r) (* ?x62 ?x62 ?x62 ?x117 r r r) (* ?x62 ?x123 ?x123 ?x117 r r r))))
 (let ((?x134 (- (* (- 1) ?x62 ?x62 ?x123 ?x123 ?x123 ?x117 ?x117 r r r) (* ?x117 ?x117 ?x117 r))))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let ((?x141 (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) (+ ?x134 (* ?x62 ?x62 ?x62 ?x123 ?x123 ?x117 r)) ?x140)))
 (let ((?x112 (+ (* ?x62 ?x62 q q q r r r) (* ?x62 ?x62 ?x62 (+ (- (* 2 r) x) q) r r r) (* ?x62 q q (+ (- (* 2 r) x) q) r r r))))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x106 (- (* (- 1) ?x62 ?x62 q q q ?x90 ?x90 r r r) (* ?x90 ?x90 ?x90 r))))
 (let ((?x94 (- (+ (- (* 8 ?x90) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x100 (+ (- (+ (- ?x94 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x113 (* (+ (- ?x100 (* 4 ?x62 ?x90)) ?x53) (+ ?x106 (* ?x62 ?x62 ?x62 q q ?x90 r)) ?x112)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x86 (+ (* ?x62 ?x62 ?x67 ?x67 ?x67 r r r) (* ?x62 ?x62 ?x62 ?x59 r r r) (* ?x62 ?x67 ?x67 ?x59 r r r))))
 (let ((?x80 (- (* (- 1) ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 r r r) (* ?x59 ?x59 ?x59 r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x87 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (+ ?x80 (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 r)) ?x86)))
 (let (($x173 (or (not (= ?x87 0)) (not (= ?x113 0)) (not (= ?x141 0)) (not (= ?x170 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x173))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x686 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x1667 (* 4 (* d00 r00))))
 (let ((?x2652 (* (- 2) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x3104 (+ (- 4) ?x57 ?x179 q ?x2652)))
 (let ((?x285 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1650 (* 4 (* ?x285 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x1495 (* 8 q)))
 (let ((?x1393 (* (- 8) x)))
 (let ((?x2715 (* 16 r)))
 (let ((?x664 (+ (- 32) ?x2715 ?x1393 ?x1495 (* (- 16) d) ?x182 ?x1650 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 ?x3104)) ?x1667)))
 (let ((?x1526 (+ (- 8) q)))
 (let ((?x771 (+ (* (- 1) (* ?x1526 ?x1526 ?x1526 ?x285 ?x285 ?x3104 ?x3104 r r r)) (* (- 1) (* ?x3104 ?x3104 ?x3104 r)) (* ?x1526 ?x1526 ?x285 ?x285 ?x285 ?x3104 r))))
 (let ((?x792 (+ (* ?x1526 ?x1526 ?x1526 ?x285 ?x285 r r r) (* ?x285 ?x285 ?x285 ?x3104 r r r) (* ?x1526 ?x1526 ?x285 ?x3104 r r r))))
 (let ((?x472 (* (- 8) d)))
 (let ((?x673 (+ (- 16) ?x2715 ?x1393 ?x1495 ?x472 ?x182 ?x1650 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 2) ?x57 ?x179 q (* (- 1) d)))) ?x1667)))
 (let ((?x2298 (* (- 1) d)))
 (let ((?x1588 (+ (- 2) ?x57 ?x179 q ?x2298)))
 (let ((?x342 (+ (- 4) q)))
 (let ((?x385 (+ (* (- 1) (* ?x342 ?x342 ?x342 ?x285 ?x285 ?x1588 ?x1588 r r r)) (* (- 1) (* ?x1588 ?x1588 ?x1588 r)) (* ?x342 ?x342 ?x285 ?x285 ?x285 ?x1588 r))))
 (let ((?x460 (+ (* ?x342 ?x342 ?x342 ?x285 ?x285 r r r) (* ?x285 ?x285 ?x285 ?x1588 r r r) (* ?x342 ?x342 ?x285 ?x1588 r r r))))
 (let ((?x3105 (+ ?x2715 ?x1393 ?x1495 ?x182 ?x1650 ?x214 ?x230 (* ?x285 ?x285 q) (* (- 2) (* ?x285 q)) ?x280 (* (- 4) (* ?x285 (+ ?x57 ?x179 q))) ?x1667)))
 (let ((?x3111 (* (- 1) (* (+ ?x57 ?x179 q) (+ ?x57 ?x179 q) (+ ?x57 ?x179 q) r))))
 (let ((?x3188 (+ ?x57 ?x179 q)))
 (let ((?x3125 (+ (* (- 1) (* ?x285 ?x285 ?x3188 ?x3188 r r r q q q)) ?x3111 (* ?x285 ?x285 ?x285 ?x3188 r q q))))
 (let ((?x601 (+ (* ?x285 ?x285 r r r q q q) (* ?x285 ?x285 ?x285 ?x3188 r r r) (* ?x285 ?x3188 r r r q q))))
 (let ((?x211 (* 8 d)))
 (let ((?x1621 (+ 16 ?x2715 ?x1393 ?x1495 ?x211 ?x182 ?x1650 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 (+ 2 ?x57 ?x179 q d))) ?x1667)))
 (let ((?x1741 (+ 2 ?x57 ?x179 q d)))
 (let ((?x369 (+ 4 q)))
 (let ((?x1071 (+ (* (- 1) (* ?x285 ?x285 ?x369 ?x369 ?x369 ?x1741 ?x1741 r r r)) (* (- 1) (* ?x1741 ?x1741 ?x1741 r)) (* ?x285 ?x285 ?x285 ?x369 ?x369 ?x1741 r))))
 (let ((?x1102 (+ (* ?x285 ?x285 ?x369 ?x369 ?x369 r r r) (* ?x285 ?x285 ?x285 ?x1741 r r r) (* ?x285 ?x369 ?x369 ?x1741 r r r))))
 (let (($x773 (or (not (= (* ?x1102 ?x1071 ?x1621) 0)) (not (= (* ?x601 ?x3125 ?x3105) 0)) (not (= (* ?x460 ?x385 ?x673) 0)) (not (= (* ?x792 ?x771 ?x664) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1672 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1667)))
 (and (= ?x1672 0) $x773)))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1522 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x1667 (* 4 (* d00 r00))))
 (let ((?x2652 (* (- 2) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x3104 (+ (- 4) ?x57 ?x179 q ?x2652)))
 (let ((?x285 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1650 (* 4 (* ?x285 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x1495 (* 8 q)))
 (let ((?x1393 (* (- 8) x)))
 (let ((?x2715 (* 16 r)))
 (let ((?x664 (+ (- 32) ?x2715 ?x1393 ?x1495 (* (- 16) d) ?x182 ?x1650 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 ?x3104)) ?x1667)))
 (let ((?x1526 (+ (- 8) q)))
 (let ((?x771 (+ (* (- 1) (* ?x1526 ?x1526 ?x1526 ?x285 ?x285 ?x3104 ?x3104 r r r)) (* (- 1) (* ?x3104 ?x3104 ?x3104 r)) (* ?x1526 ?x1526 ?x285 ?x285 ?x285 ?x3104 r))))
 (let ((?x792 (+ (* ?x1526 ?x1526 ?x1526 ?x285 ?x285 r r r) (* ?x285 ?x285 ?x285 ?x3104 r r r) (* ?x1526 ?x1526 ?x285 ?x3104 r r r))))
 (let ((?x472 (* (- 8) d)))
 (let ((?x673 (+ (- 16) ?x2715 ?x1393 ?x1495 ?x472 ?x182 ?x1650 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 2) ?x57 ?x179 q (* (- 1) d)))) ?x1667)))
 (let ((?x2298 (* (- 1) d)))
 (let ((?x1588 (+ (- 2) ?x57 ?x179 q ?x2298)))
 (let ((?x342 (+ (- 4) q)))
 (let ((?x385 (+ (* (- 1) (* ?x342 ?x342 ?x342 ?x285 ?x285 ?x1588 ?x1588 r r r)) (* (- 1) (* ?x1588 ?x1588 ?x1588 r)) (* ?x342 ?x342 ?x285 ?x285 ?x285 ?x1588 r))))
 (let ((?x460 (+ (* ?x342 ?x342 ?x342 ?x285 ?x285 r r r) (* ?x285 ?x285 ?x285 ?x1588 r r r) (* ?x342 ?x342 ?x285 ?x1588 r r r))))
 (let ((?x3105 (+ ?x2715 ?x1393 ?x1495 ?x182 ?x1650 ?x214 ?x230 (* ?x285 ?x285 q) (* (- 2) (* ?x285 q)) ?x280 (* (- 4) (* ?x285 (+ ?x57 ?x179 q))) ?x1667)))
 (let ((?x3111 (* (- 1) (* (+ ?x57 ?x179 q) (+ ?x57 ?x179 q) (+ ?x57 ?x179 q) r))))
 (let ((?x3188 (+ ?x57 ?x179 q)))
 (let ((?x3125 (+ (* (- 1) (* ?x285 ?x285 ?x3188 ?x3188 r r r q q q)) ?x3111 (* ?x285 ?x285 ?x285 ?x3188 r q q))))
 (let ((?x601 (+ (* ?x285 ?x285 r r r q q q) (* ?x285 ?x285 ?x285 ?x3188 r r r) (* ?x285 ?x3188 r r r q q))))
 (let ((?x211 (* 8 d)))
 (let ((?x1621 (+ 16 ?x2715 ?x1393 ?x1495 ?x211 ?x182 ?x1650 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 (+ 2 ?x57 ?x179 q d))) ?x1667)))
 (let ((?x1741 (+ 2 ?x57 ?x179 q d)))
 (let ((?x369 (+ 4 q)))
 (let ((?x1071 (+ (* (- 1) (* ?x285 ?x285 ?x369 ?x369 ?x369 ?x1741 ?x1741 r r r)) (* (- 1) (* ?x1741 ?x1741 ?x1741 r)) (* ?x285 ?x285 ?x285 ?x369 ?x369 ?x1741 r))))
 (let ((?x1102 (+ (* ?x285 ?x285 ?x369 ?x369 ?x369 r r r) (* ?x285 ?x285 ?x285 ?x1741 r r r) (* ?x285 ?x369 ?x369 ?x1741 r r r))))
 (let (($x773 (or (not (= (* ?x1102 ?x1071 ?x1621) 0)) (not (= (* ?x601 ?x3125 ?x3105) 0)) (not (= (* ?x460 ?x385 ?x673) 0)) (not (= (* ?x792 ?x771 ?x664) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1672 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1667)))
 (let (($x595 (and (= ?x1672 0) $x773)))
 (let ((?x146 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x169 (+ (* ?x62 ?x62 ?x152 ?x152 ?x152 r r r) (* ?x62 ?x62 ?x62 ?x146 r r r) (* ?x62 ?x152 ?x152 ?x146 r r r))))
 (let ((?x163 (- (* (- 1) ?x62 ?x62 ?x152 ?x152 ?x152 ?x146 ?x146 r r r) (* ?x146 ?x146 ?x146 r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x150 (- (+ (- (* 8 ?x146) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x157 (+ (- (+ (- ?x150 ?x41) (* ?x62 ?x62 ?x152)) (* 2 ?x62 ?x152)) ?x49)))
 (let ((?x170 (* (+ (- ?x157 (* 4 ?x62 ?x146)) ?x53) (+ ?x163 (* ?x62 ?x62 ?x62 ?x152 ?x152 ?x146 r)) ?x169)))
 (let ((?x117 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x140 (+ (* ?x62 ?x62 ?x123 ?x123 ?x123 r r r) (* ?x62 ?x62 ?x62 ?x117 r r r) (* ?x62 ?x123 ?x123 ?x117 r r r))))
 (let ((?x134 (- (* (- 1) ?x62 ?x62 ?x123 ?x123 ?x123 ?x117 ?x117 r r r) (* ?x117 ?x117 ?x117 r))))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let ((?x141 (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) (+ ?x134 (* ?x62 ?x62 ?x62 ?x123 ?x123 ?x117 r)) ?x140)))
 (let ((?x112 (+ (* ?x62 ?x62 q q q r r r) (* ?x62 ?x62 ?x62 (+ (- ?x57 x) q) r r r) (* ?x62 q q (+ (- ?x57 x) q) r r r))))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x106 (- (* (- 1) ?x62 ?x62 q q q ?x90 ?x90 r r r) (* ?x90 ?x90 ?x90 r))))
 (let ((?x94 (- (+ (- (* 8 ?x90) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x100 (+ (- (+ (- ?x94 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x113 (* (+ (- ?x100 (* 4 ?x62 ?x90)) ?x53) (+ ?x106 (* ?x62 ?x62 ?x62 q q ?x90 r)) ?x112)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x86 (+ (* ?x62 ?x62 ?x67 ?x67 ?x67 r r r) (* ?x62 ?x62 ?x62 ?x59 r r r) (* ?x62 ?x67 ?x67 ?x59 r r r))))
 (let ((?x80 (- (* (- 1) ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 r r r) (* ?x59 ?x59 ?x59 r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x87 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (+ ?x80 (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 r)) ?x86)))
 (let (($x173 (or (not (= ?x87 0)) (not (= ?x113 0)) (not (= ?x141 0)) (not (= ?x170 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x174 (and (= ?x54 0) $x173)))
 (rewrite (= $x174 $x595)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x662 (trans (quant-intro (proof-bind ?x1522) (= $x175 $x686)) (elim-unused (= $x686 $x677)) (= $x175 $x677))))
 (let ((@x27 (asserted $x175)))
 (let ((@x1222 (mp (mp @x27 @x662 $x677) (quant-intro (proof-bind ?x1688) (= $x677 $x585)) $x585)))
 (let ((@x2194 (mp (mp @x1222 (rewrite (= $x585 $x585)) $x585) (quant-intro (proof-bind ?x4251) (= $x585 $x4253)) $x4253)))
 (let ((@x2757 (mp (mp~ @x2194 (sk (~ $x4253 $x2293)) $x2293) (rewrite (= $x2293 $x3981)) $x3981)))
 (let ((@x4117 (and-elim @x2757 $x423)))
 (let ((@x2918 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x423) $x697)) @x4117 $x697)))
 (let (($x3968 (<= ?x451 0)))
 (let ((@x1711 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x423) $x3968)) @x4117 $x3968)))
 (let (($x4337 (not (<= ?x3993 0))))
 (let (($x3969 (<= ?x2065 0)))
 (let (($x1716 (>= ?x2065 0)))
 (let ((@x1706 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3478 (not $x3969) (not $x1716))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1716)) @x1711 @x2918 false) $x1716) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x3969)) @x1711 @x2918 false) $x3969) $x3478)))
 (let (($x1117 (>= ?x2023 0)))
 (let (($x2904 (<= ?x2023 0)))
 (let ((@x4245 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2024 (not $x2904) (not $x1117))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2904)) @x1711 @x2918 false) $x2904) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1117)) @x1711 @x2918 false) $x1117) $x2024)))
 (let (($x963 (>= ?x4093 0)))
 (let (($x1294 (<= ?x4093 0)))
 (let ((@x1256 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3980 (not $x1294) (not $x963))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1294)) @x1711 @x2918 false) $x1294) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x963)) @x1711 @x2918 false) $x963) $x3980)))
 (let ((@x1635 (unit-resolution (unit-resolution (and-elim @x2757 $x4085) @x1256 @x4245 (or $x1069 $x4126)) @x1706 $x4126)))
 (let (($x3551 (>= ?x3993 0)))
 (let ((@x2634 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4110 $x4337 (not $x3551))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x3551)) @x1711 @x2918 false) $x3551) @x1635 $x4337)))
 ((_ th-lemma arith farkas 1 1 1) @x2634 @x1711 @x2918 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        82
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1728
 :arith-nonlinear-bounds    44
 :arith-num-rows            17
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 164
 :arith-tableau-max-rows    17
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                20.19
 :memory                    19.47
 :mk-bool-var               15
 :mk-clause                 20
 :num-allocs                852813
 :num-checks                1
 :propagations              36
 :rlimit-count              16170
 :time                      0.01
 :total-time                0.03)
