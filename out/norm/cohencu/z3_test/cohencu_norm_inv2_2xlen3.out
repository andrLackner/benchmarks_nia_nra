unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun n!0 () Int)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(proof
(let ((?x460 (* (- 6) n00)))
 (let ((?x1081 (+ z00 ?x460 (* 6 n!0) (* (- 1) z!1))))
 (let (($x553 (<= ?x1081 0)))
 (let (($x1237 (= ?x1081 0)))
 (let ((?x903 (+ x!3 y!2)))
 (let ((?x779 (+ z!1 y!2)))
 (let ((?x395 (+ 6 z!1)))
 (let ((?x916 (+ 1 n!0)))
 (let ((?x2139 (* z00 z00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x903 ?x903)))
 (let ((?x735 (* 12 (* ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x903 ?x903))))
 (let ((?x326 (* (- 6) (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x779 ?x779 ?x903))))
 (let ((?x2038 (* ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x395 ?x903 ?x903)))
 (let ((?x1719 (* ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x395 ?x395 ?x903 ?x903)))
 (let ((?x1653 (* z00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x903 ?x903)))
 (let ((?x1616 (* (- 1) (* z00 z00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x903))))
 (let ((?x1604 (* z00 ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x903 ?x903)))
 (let ((?x375 (* 12 (* y00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x903))))
 (let ((?x1511 (* z00 z00 ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x903 ?x903)))
 (let ((?x1453 (* z00 z00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x903 ?x903)))
 (let ((?x966 (* 12 (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x779 ?x903 ?x903))))
 (let ((?x1023 (* 12 (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x903 ?x903))))
 (let ((?x1231 (* z00 z00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x779 ?x779 ?x903)))
 (let ((?x613 (* 6 (* z00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x903))))
 (let ((?x1037 (* (- 6) (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x903))))
 (let ((?x1128 (* y00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x903 ?x903)))
 (let ((?x1041 (* ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x779 ?x903 ?x903)))
 (let ((?x529 (* (- 12) (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x903))))
 (let ((?x867 (* ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x903 ?x903)))
 (let ((?x769 (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x395 ?x903 ?x903)))
 (let ((?x1626 (* 12 (* y00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x779 ?x779 ?x903))))
 (let ((?x728 (* ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x903 ?x903)))
 (let ((?x1247 (* 6 (* z00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x779 ?x779 ?x903))))
 (let ((?x667 (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x903 ?x903)))
 (let ((?x664 (* z00 z00 ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x903 ?x903)))
 (let ((?x586 (* (- 12) (* y00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x903 ?x903))))
 (let ((?x468 (* z00 ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x903 ?x903)))
 (let ((?x446 (* y00 ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x903 ?x903)))
 (let ((?x426 (* y00 ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x903 ?x903)))
 (let ((?x387 (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x395 ?x395 ?x903 ?x903)))
 (let ((?x1763 (* (- 12) (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x779 ?x779 ?x779 ?x903))))
 (let ((?x324 (* (- 6) (* z00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x903 ?x903))))
 (let ((?x574 (* 6 (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x903 ?x903))))
 (let ((?x353 (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x779 ?x779 ?x903)))
 (let ((?x1163 (+ ?x353 ?x574 ?x324 ?x1763 (* (- 1) ?x387) (* (- 12) ?x426) (* (- 1) (* z00 z00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x903)) (* (- 12) ?x446) (* (- 6) ?x468) (* z00 z00 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779) (* 12 (* ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779 ?x779)) ?x586 (* (- 12) (* y00 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779)) ?x664 (* (- 1) ?x667) ?x1247 (* 6 ?x728) (* 6 (* z00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x903)) ?x1626 (* 6 ?x769) (* (- 1) ?x867) (* 6 (* z00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x903)) (* 12 (* y00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x903)) ?x529 (* 12 ?x1041) (* (- 12) ?x1128) ?x1037 (* (- 6) (* z00 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779)) (* (- 1) (* z00 z00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x903)) ?x613 (* (- 1) ?x1231) (* (- 1) (* ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779)) ?x1023 ?x966 (* 6 (* ?x916 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x779)) ?x1453 ?x1511 (* (- 6) (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x779 ?x903)) ?x375 (* (- 6) ?x1604) ?x1616 (* (- 6) ?x1653) (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x903) (* (- 1) ?x1719) (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x779 ?x903) (* (- 6) (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x779 ?x903)) (* 12 (* y00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x903)) (* (- 12) (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x903)) (* 6 ?x2038) ?x326 (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x779 ?x903) (* (- 12) (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x779 ?x779 ?x903)) ?x735 ?x2139)))
 (let (($x1120 (= ?x1163 0)))
 (let (($x1085 (not $x1120)))
 (let ((?x755 (* z00 z00 y00 y00)))
 (let ((?x822 (+ (* 6 (* z00 y!2 y!2)) (* (- 216) (* y00 x00)) (* (- 24) (* z00 y00)) (* (- 36) (* z00 x00)) (* (- 18) (* z00 z00 x!3)) (* (- 96) (* y00 y00)) (* 120 (* y00 y!2)) (* 12 (* y00 y!2 y!2)) (* 12 (* z00 y00 y00)) (* 108 (* x00 y!2)) (* (- 108) (* x!3 x!3)) (* 10 (* z00 z00 y00)) ?x755 (* 216 (* y00 x!3)) (* 36 (* z00 x!3)) (* 18 (* z00 z00 x00)) (* (- 24) (* y!2 y!2)) (* (- 16) (* y00 y00 y00)) (* 4 (* y!2 y!2 y!2)) (* (- 108) (* x!3 y!2)) (* 36 (* z00 y00 x00)) (* (- 1) (* z00 z00 z00 y00)) (* (- 2) (* z00 z00 z00 x00)) (* (- 108) (* x00 x00)) (* 216 (* x00 x!3)) (* 24 (* z00 y!2)) (* (- 18) (* z00 y00 y!2)) (* (- 36) (* z00 y00 x!3)) (* (- 10) (* z00 z00 y!2)) (* (- 1) (* z00 z00 y!2 y!2)) (* z00 z00 z00 y!2) (* 2 (* z00 z00 z00 x!3)))))
 (let ((?x2191 (* z!1 y!2)))
 (let ((?x999 (* 12 ?x2191)))
 (let ((?x1758 (* z00 y00 y!2)))
 (let ((?x1380 (* y00 z!1)))
 (let ((?x584 (* (- 12) ?x1380)))
 (let ((?x1336 (* (- 72) y!2)))
 (let ((?x1554 (* (- 108) x!3)))
 (let ((?x1270 (* (- 18) (* x00 z!1))))
 (let ((?x687 (* z00 y00 y00)))
 (let ((?x654 (* x!3 z!1)))
 (let ((?x1407 (* 18 ?x654)))
 (let ((?x511 (* z00 y00)))
 (let ((?x627 (* 6 ?x511)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x851 (+ ?x67 ?x74 (* (- 2) (* z00 y!2 y!2)) (* 18 (* y00 x00)) (* 3 (* z00 x!3 z!1)) ?x627 (* (- 1) (* z!1 y!2 y!2)) (* 3 (* z00 z00 x!3)) (* 36 (* y00 y00)) ?x1407 (* (- 36) (* y00 y!2)) ?x687 (* (- 18) (* x00 y!2)) (* (- 3) (* z00 z00 y00)) (* (- 18) (* y00 x!3)) (* (- 3) (* z00 z00 x00)) ?x1270 (* 18 (* x!3 y!2)) ?x1554 ?x1336 ?x584 (* (- 6) (* z00 y!2)) (* (- 3) (* z00 x00 z!1)) ?x1758 (* 3 (* z00 z00 y!2)) (* (- 1) (* y00 z!1 y!2)) (* 2 (* y00 y00 z!1)) ?x999)))
 (let ((?x1850 (* z00 z00 y!2)))
 (let ((?x786 (* (- 6) ?x511)))
 (let ((?x1005 (+ ?x67 ?x74 ?x786 (* z00 y00 z!1) (* (- 18) (* z00 x00)) (* 24 (* y00 y00)) ?x1407 (* (- 12) (* y00 y!2)) (* (- 1) (* z00 z00 y00)) (* (- 1) (* z00 z!1 y!2)) (* 18 (* z00 x!3)) ?x1270 (* (- 12) (* y!2 y!2)) ?x1554 ?x1336 ?x584 (* 6 (* z00 y!2)) ?x1850 ?x999)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x417 (+ ?x67 ?x55 ?x74 (* (- 6) (* z00 z00)) (* (- 18) ?x511) (* 6 (* z00 z!1)) ?x1554 ?x1336 (* 12 ?x1380) (* (- 1) (* z00 z00 z!1)) (* 6 ?x2191))))
 (let ((?x809 (* z!1 z!1)))
 (let ((?x370 (* z00 z00)))
 (let ((?x400 (* (- 1) ?x370)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x2177 (+ ?x49 ?x43 ?x400 ?x809 (* (- 6) z!1) (* (- 12) y!2))))
 (let (($x2184 (= ?x2177 0)))
 (let (($x1651 (and $x1237 $x2184 (= ?x417 0) (= ?x1005 0) (= ?x851 0) (= ?x822 0) $x1085)))
 (let ((?x462 (+ y!2 z!1)))
 (let ((?x677 (* 12 (* y00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x903 ?x903))))
 (let ((?x645 (* y00 ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x903 ?x903)))
 (let ((?x637 (* (- 12) (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x903 ?x903))))
 (let ((?x526 (* (- 6) (* z00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x903))))
 (let ((?x1312 (* 12 (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x903))))
 (let ((?x1656 (* z00 z00 ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x903 ?x903)))
 (let ((?x756 (* ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x462 ?x903 ?x903)))
 (let ((?x1106 (* (- 12) (* ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x903 ?x903))))
 (let ((?x720 (* z00 z00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x462 ?x462 ?x903)))
 (let ((?x787 (* (- 12) (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x462 ?x903 ?x903))))
 (let ((?x1364 (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x903 ?x903)))
 (let ((?x1108 (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x462 ?x462 ?x903)))
 (let ((?x1153 (* 6 (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x462 ?x462 ?x903))))
 (let ((?x807 (* (- 6) (* z00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x462 ?x462 ?x903))))
 (let ((?x476 (* ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x903 ?x903)))
 (let ((?x1682 (* (- 12) (* y00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x462 ?x462 ?x903))))
 (let ((?x1716 (* ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x903 ?x903)))
 (let ((?x421 (* (- 12) (* y00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x903))))
 (let ((?x1418 (* 12 (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x903))))
 (let ((?x1744 (* 6 (* z00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x903 ?x903))))
 (let ((?x1242 (* 6 (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x903))))
 (let ((?x668 (* (- 6) (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x903 ?x903))))
 (let ((?x1302 (* z00 z00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x903 ?x903)))
 (let ((?x875 (* (- 1) (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x903))))
 (let ((?x718 (* z00 ?x916 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x903 ?x903)))
 (let ((?x679 (+ (* 12 (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x903)) (* 6 ?x718) ?x875 (* (- 1) ?x1302) (* (- 1) ?x1511) ?x387 ?x668 ?x1242 ?x1744 ?x1418 (* (- 6) ?x769) (* (- 1) ?x1453) (* z00 z00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x903) (* 6 ?x468) ?x421 (* 6 ?x1653) (* (- 6) (* z00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x903)) (* (- 1) (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x903)) ?x1716 ?x1682 (* (- 6) ?x476) (* z00 z00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x903) ?x807 (* (- 12) (* y00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x903)) ?x1153 (* (- 1) ?x1108) ?x1364 ?x787 (* 6 (* z00 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462)) (* ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462) ?x720 (* 12 ?x1128) (* 12 (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x903)) ?x1106 (* (- 12) ?x756) (* (- 6) (* ?x916 ?x395 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462)) (* (- 12) (* ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462 ?x462)) (* (- 1) (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x395 ?x462 ?x903)) (* (- 1) ?x1656) (* (- 1) (* z00 z00 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462)) (* z00 z00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x903) (* (- 6) ?x2038) (* 6 (* ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x462 ?x903)) (* 6 (* ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x395 ?x462 ?x903)) ?x1719 ?x1312 (* (- 12) (* y00 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x903)) (* 12 ?x426) ?x526 ?x637 (* 12 ?x645) (* (- 6) (* z00 ?x916 ?x916 ?x916 ?x395 ?x395 ?x395 ?x462 ?x903)) (* 12 (* y00 ?x916 ?x395 ?x395 ?x395 ?x462 ?x462 ?x462)) ?x677)))
 (let ((?x1295 (* x00 x00)))
 (let ((?x1296 (* 108 ?x1295)))
 (let ((?x1192 (* z00 z00 z00 x00)))
 (let ((?x1193 (* 2 ?x1192)))
 (let ((?x1189 (* z00 z00 z00 y00)))
 (let ((?x1086 (* z00 y00 x00)))
 (let ((?x1099 (* (- 36) ?x1086)))
 (let ((?x983 (* y00 y00 y00)))
 (let ((?x984 (* 16 ?x983)))
 (let ((?x898 (* z00 z00 x00)))
 (let ((?x1149 (* (- 18) ?x898)))
 (let ((?x770 (* (- 1) ?x755)))
 (let ((?x712 (* z00 z00 y00)))
 (let ((?x1250 (* (- 10) ?x712)))
 (let ((?x722 (* (- 12) ?x687)))
 (let ((?x578 (* y00 y00)))
 (let ((?x1049 (* 96 ?x578)))
 (let ((?x548 (* z00 x00)))
 (let ((?x466 (* 36 ?x548)))
 (let ((?x876 (* 24 ?x511)))
 (let ((?x458 (* y00 x00)))
 (let ((?x449 (* 216 ?x458)))
 (let ((?x762 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x449 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x876 ?x466 (* 24 (* y!2 y!2)) ?x1049 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x722 ?x1250 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x770 (* 108 (* x!3 x!3)) (* (- 4) (* y!2 y!2 y!2)) (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1149 (* (- 216) (* x!3 y00)) ?x984 (* (- 12) (* y!2 y!2 y00)) ?x1099 (* (- 216) (* x!3 x00)) ?x1189 ?x1193 (* 36 (* x!3 z00 y00)) ?x1296)))
 (let ((?x899 (* 3 ?x898)))
 (let ((?x961 (* 3 ?x712)))
 (let ((?x694 (* (- 1) ?x687)))
 (let ((?x1481 (* 18 (* z!1 x00))))
 (let ((?x881 (* (- 36) ?x578)))
 (let ((?x1253 (* z!1 y00)))
 (let ((?x1478 (* 12 ?x1253)))
 (let ((?x1475 (* (- 18) ?x654)))
 (let ((?x459 (* (- 18) ?x458)))
 (let ((?x909 (* y!2 z!1)))
 (let ((?x711 (* (- 12) ?x909)))
 (let ((?x590 (* (- 108) x00)))
 (let ((?x533 (* (- 72) y00)))
 (let ((?x788 (* 72 y!2)))
 (let ((?x780 (* 108 x!3)))
 (let ((?x791 (+ ?x780 ?x788 ?x533 ?x590 (* (- 3) (* y!2 z00 z00)) (* y!2 y!2 z!1) ?x711 ?x459 (* (- 18) (* x!3 y!2)) ?x1475 ?x1478 ?x786 ?x881 ?x1481 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x694 ?x961 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x899 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x607 (* (- 24) ?x578)))
 (let ((?x549 (* 18 ?x548)))
 (let ((?x1435 (+ ?x780 ?x788 ?x533 ?x590 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x711 ?x1475 ?x1478 ?x627 ?x549 (* 12 (* y!2 y!2)) ?x607 ?x1481 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x712 (* (- 18) (* x!3 z00)))))
 (let ((?x512 (* 18 ?x511)))
 (let ((?x474 (* 6 ?x370)))
 (let ((?x463 (* (- 1) ?x55)))
 (let ((?x778 (+ ?x780 ?x788 ?x533 ?x463 ?x590 (* z!1 z00 z00) ?x474 (* (- 6) ?x909) (* (- 12) ?x1253) ?x512 (* (- 6) (* z!1 z00)))))
 (let ((?x441 (* (- 12) y00)))
 (let ((?x440 (* (- 6) z00)))
 (let (($x1393 (= (+ (* 12 y!2) (* 6 z!1) ?x440 ?x441 (* (- 1) ?x809) ?x370) 0)))
 (let (($x1466 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x1393 (= ?x778 0) (= ?x1435 0) (= ?x791 0) (= ?x762 0) (not (= ?x679 0)))))
 (let (($x371 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x217 (+ x y)))
 (let ((?x218 (+ y z)))
 (let ((?x451 (+ 6 z)))
 (let ((?x457 (+ 1 n)))
 (let ((?x2199 (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x2121 (* y00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x2104 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217 ?x217)))
 (let ((?x2096 (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x2045 (* y00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x2024 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1995 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1903 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1853 (* z00 z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)))
 (let ((?x1811 (* z00 z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1794 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1713 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217 ?x217)))
 (let ((?x1678 (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1619 (* z00 z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1588 (* ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)))
 (let ((?x1547 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1517 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1412 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1405 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1375 (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1360 (* z00 z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)))
 (let ((?x1352 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1315 (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1303 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1074 (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1070 (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x1032 (* z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1008 (* z00 z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x828 (* z00 z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x804 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x767 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x750 (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x724 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x702 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x693 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x646 (* z00 z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x582 (* z00 z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x531 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x428 (* z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1133 (+ (* 12 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)) (* 6 ?x428) (* (- 1) ?x531) (* (- 1) ?x582) (* (- 1) ?x646) ?x693 (* (- 6) ?x702) (* 6 ?x724) (* 6 ?x750) (* 12 ?x767) (* (- 6) ?x804) (* (- 1) ?x828) ?x1008 (* 6 ?x1032) (* (- 12) ?x1070) (* 6 ?x1074) (* (- 6) (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* (- 1) (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x1303 (* (- 12) ?x1315) (* (- 6) ?x1352) ?x1360 (* (- 6) ?x1375) (* (- 12) (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 6 ?x1405) (* (- 1) ?x1412) ?x1517 (* (- 12) ?x1547) (* 6 (* z00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) ?x1588 ?x1619 (* 12 ?x1678) (* 12 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)) (* (- 12) ?x1713) (* (- 12) ?x1794) (* (- 6) (* ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) (* (- 12) (* ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218)) (* (- 1) (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) (* (- 1) ?x1811) (* (- 1) (* z00 z00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) ?x1853 (* (- 6) ?x1903) (* 6 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 6 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x1995 (* 12 ?x2024) (* (- 12) (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 12 ?x2045) (* (- 6) ?x2096) (* (- 12) ?x2104) (* 12 ?x2121) (* (- 6) (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 12 (* y00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) (* 12 ?x2199))))
 (let ((?x1295 (* x00 x00)))
 (let ((?x1296 (* 108 ?x1295)))
 (let ((?x1192 (* z00 z00 z00 x00)))
 (let ((?x1193 (* 2 ?x1192)))
 (let ((?x1189 (* z00 z00 z00 y00)))
 (let ((?x1086 (* z00 y00 x00)))
 (let ((?x1099 (* (- 36) ?x1086)))
 (let ((?x983 (* y00 y00 y00)))
 (let ((?x984 (* 16 ?x983)))
 (let ((?x898 (* z00 z00 x00)))
 (let ((?x1149 (* (- 18) ?x898)))
 (let ((?x854 (* (- 4) (* y y y))))
 (let ((?x802 (* 108 (* x x))))
 (let ((?x755 (* z00 z00 y00 y00)))
 (let ((?x770 (* (- 1) ?x755)))
 (let ((?x712 (* z00 z00 y00)))
 (let ((?x1250 (* (- 10) ?x712)))
 (let ((?x687 (* z00 y00 y00)))
 (let ((?x722 (* (- 12) ?x687)))
 (let ((?x578 (* y00 y00)))
 (let ((?x1049 (* 96 ?x578)))
 (let ((?x552 (* y y)))
 (let ((?x797 (* 24 ?x552)))
 (let ((?x548 (* z00 x00)))
 (let ((?x466 (* 36 ?x548)))
 (let ((?x511 (* z00 y00)))
 (let ((?x876 (* 24 ?x511)))
 (let ((?x458 (* y00 x00)))
 (let ((?x449 (* 216 ?x458)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1316 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x449 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x876 ?x466 ?x797 ?x1049 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x722 ?x1250 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x770 ?x802 ?x854 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1149 (* (- 216) (* x y00)) ?x984 (* (- 12) (* y y y00)) ?x1099 (* (- 216) (* x x00)) ?x1189 ?x1193 (* 36 (* x z00 y00)) ?x1296)))
 (let (($x1321 (= ?x1316 0)))
 (let ((?x899 (* 3 ?x898)))
 (let ((?x961 (* 3 ?x712)))
 (let ((?x694 (* (- 1) ?x687)))
 (let ((?x624 (* 18 (* z x00))))
 (let ((?x881 (* (- 36) ?x578)))
 (let ((?x786 (* (- 6) ?x511)))
 (let ((?x485 (* z y00)))
 (let ((?x486 (* 12 ?x485)))
 (let ((?x519 (* (- 18) (* x z))))
 (let ((?x459 (* (- 18) ?x458)))
 (let ((?x454 (* y z)))
 (let ((?x478 (* (- 12) ?x454)))
 (let ((?x135 (* y y z)))
 (let ((?x590 (* (- 108) x00)))
 (let ((?x533 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1017 (+ ?x64 ?x71 ?x533 ?x590 (* (- 3) (* y z00 z00)) ?x135 ?x478 ?x459 (* (- 18) (* x y)) ?x519 ?x486 ?x786 ?x881 ?x624 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x694 ?x961 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x899 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1024 (= ?x1017 0)))
 (let ((?x607 (* (- 24) ?x578)))
 (let ((?x555 (* 12 ?x552)))
 (let ((?x549 (* 18 ?x548)))
 (let ((?x627 (* 6 ?x511)))
 (let ((?x103 (* y z z00)))
 (let ((?x766 (+ ?x64 ?x71 ?x533 ?x590 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x478 ?x519 ?x486 ?x627 ?x549 ?x555 ?x607 ?x624 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x712 (* (- 18) (* x z00)))))
 (let (($x771 (= ?x766 0)))
 (let ((?x512 (* 18 ?x511)))
 (let ((?x370 (* z00 z00)))
 (let ((?x474 (* 6 ?x370)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x463 (* (- 1) ?x55)))
 (let ((?x606 (+ ?x64 ?x71 ?x533 ?x463 ?x590 ?x76 ?x474 (* (- 6) ?x454) (* (- 12) ?x485) ?x512 (* (- 6) (* z z00)))))
 (let (($x611 (= ?x606 0)))
 (let ((?x441 (* (- 12) y00)))
 (let ((?x440 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x444 (= (+ ?x45 ?x46 ?x440 ?x441 (* (- 1) (* z z)) ?x370) 0)))
 (let (($x362 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x362 $x444 $x611 $x771 $x1024 $x1321 (not (= ?x1133 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x1761 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x217 (+ x y)))
 (let ((?x218 (+ y z)))
 (let ((?x451 (+ 6 z)))
 (let ((?x457 (+ 1 n)))
 (let ((?x2199 (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x2121 (* y00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x2104 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217 ?x217)))
 (let ((?x2096 (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x1995 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1903 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1008 (* z00 z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x2024 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1290 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)))
 (let ((?x2045 (* y00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1811 (* z00 z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1810 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)))
 (let ((?x1794 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1838 (* z00 z00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)))
 (let ((?x1619 (* z00 z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1678 (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x646 (* z00 z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1713 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217 ?x217)))
 (let ((?x1352 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1032 (* z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1303 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x804 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x693 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x828 (* z00 z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1547 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1412 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1375 (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1405 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1070 (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x1315 (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x428 (* z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x750 (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1074 (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x724 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x582 (* z00 z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x531 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x1517 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x767 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x702 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x2220 (+ (* (- 12) (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)) (* 6 ?x702) (* (- 12) ?x767) (* (- 1) ?x1517) (* 12 (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x531 ?x582 (* (- 12) (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)) (* (- 6) ?x724) (* (- 6) ?x1074) (* (- 6) ?x750) (* (- 6) ?x428) (* 12 ?x1315) (* 12 ?x1070) (* (- 6) ?x1405) (* 6 ?x1375) ?x1412 (* 6 (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 12 ?x1547) (* (- 1) (* z00 z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x828 (* (- 1) ?x693) (* 6 ?x804) (* (- 1) ?x1303) (* (- 6) ?x1032) (* 6 ?x1352) (* 12 ?x1713) ?x646 (* (- 12) ?x1678) (* (- 6) (* z00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) (* (- 1) ?x1619) (* (- 1) (* z00 z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x1838 (* 12 (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* (- 1) (* ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) (* (- 6) (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 12 ?x1794) (* 6 (* ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) ?x1810 (* 12 (* ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218)) ?x1811 (* (- 12) ?x2045) (* (- 6) (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x1290 (* (- 12) ?x2024) (* (- 1) ?x1008) (* 6 ?x1903) (* (- 1) ?x1995) (* 6 ?x2096) (* 12 ?x2104) (* (- 12) ?x2121) (* 6 (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* (- 12) (* y00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) (* (- 12) ?x2199))))
 (let ((?x1295 (* x00 x00)))
 (let ((?x1296 (* 108 ?x1295)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x578 (* y00 y00)))
 (let ((?x1049 (* 96 ?x578)))
 (let ((?x983 (* y00 y00 y00)))
 (let ((?x984 (* 16 ?x983)))
 (let ((?x854 (* (- 4) (* y y y))))
 (let ((?x802 (* 108 (* x x))))
 (let ((?x552 (* y y)))
 (let ((?x797 (* 24 ?x552)))
 (let ((?x879 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x797 ?x802 ?x854 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x984 (* (- 6) (* z00 y y)) ?x1049 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1296 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x590 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x533 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x684 (* 18 (* x00 z))))
 (let ((?x881 (* (- 36) ?x578)))
 (let ((?x424 (* z y)))
 (let ((?x379 (* (- 12) ?x424)))
 (let ((?x1102 (* y00 z)))
 (let ((?x1103 (* 12 ?x1102)))
 (let ((?x328 (* (- 18) (* z x))))
 (let ((?x949 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x328 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1103 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x379 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x881 ?x684 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x533 (* 18 (* y00 x)) ?x71 ?x590 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x607 (* (- 24) ?x578)))
 (let ((?x555 (* 12 ?x552)))
 (let ((?x734 (+ (* (- 1) (* y00 z00 z)) ?x379 ?x328 (* 18 (* x00 z00)) ?x555 ?x607 ?x684 ?x1103 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x533 (* (- 6) (* z00 y)) ?x71 ?x590 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x370 (* z00 z00)))
 (let ((?x474 (* 6 ?x370)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x463 (* (- 1) ?x55)))
 (let ((?x870 (+ (* (- 6) ?x424) ?x463 ?x474 (* (- 12) ?x1102) (* 18 (* y00 z00)) ?x64 ?x533 (* (- 6) (* z00 z)) ?x71 ?x590 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x400 (* (- 1) ?x370)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x400 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x870 0) (= ?x734 0) (= ?x949 0) (= ?x879 0) (not (= ?x2220 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x981 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x217 (+ x y)))
 (let ((?x218 (+ y z)))
 (let ((?x451 (+ 6 z)))
 (let ((?x457 (+ 1 n)))
 (let ((?x2199 (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x2121 (* y00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x2104 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217 ?x217)))
 (let ((?x2096 (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x2045 (* y00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x2024 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1995 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1903 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1853 (* z00 z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)))
 (let ((?x1811 (* z00 z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1794 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1713 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217 ?x217)))
 (let ((?x1678 (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1619 (* z00 z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1588 (* ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)))
 (let ((?x1547 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1517 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1412 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1405 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1375 (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1360 (* z00 z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)))
 (let ((?x1352 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1315 (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1303 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1074 (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1070 (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x1032 (* z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1008 (* z00 z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x828 (* z00 z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x804 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x767 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x750 (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x724 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x702 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x693 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x646 (* z00 z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x582 (* z00 z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x531 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x428 (* z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1133 (+ (* 12 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)) (* 6 ?x428) (* (- 1) ?x531) (* (- 1) ?x582) (* (- 1) ?x646) ?x693 (* (- 6) ?x702) (* 6 ?x724) (* 6 ?x750) (* 12 ?x767) (* (- 6) ?x804) (* (- 1) ?x828) ?x1008 (* 6 ?x1032) (* (- 12) ?x1070) (* 6 ?x1074) (* (- 6) (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* (- 1) (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x1303 (* (- 12) ?x1315) (* (- 6) ?x1352) ?x1360 (* (- 6) ?x1375) (* (- 12) (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 6 ?x1405) (* (- 1) ?x1412) ?x1517 (* (- 12) ?x1547) (* 6 (* z00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) ?x1588 ?x1619 (* 12 ?x1678) (* 12 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)) (* (- 12) ?x1713) (* (- 12) ?x1794) (* (- 6) (* ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) (* (- 12) (* ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218)) (* (- 1) (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) (* (- 1) ?x1811) (* (- 1) (* z00 z00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) ?x1853 (* (- 6) ?x1903) (* 6 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 6 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x1995 (* 12 ?x2024) (* (- 12) (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 12 ?x2045) (* (- 6) ?x2096) (* (- 12) ?x2104) (* 12 ?x2121) (* (- 6) (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 12 (* y00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) (* 12 ?x2199))))
 (let ((?x1295 (* x00 x00)))
 (let ((?x1296 (* 108 ?x1295)))
 (let ((?x1192 (* z00 z00 z00 x00)))
 (let ((?x1193 (* 2 ?x1192)))
 (let ((?x1189 (* z00 z00 z00 y00)))
 (let ((?x1086 (* z00 y00 x00)))
 (let ((?x1099 (* (- 36) ?x1086)))
 (let ((?x983 (* y00 y00 y00)))
 (let ((?x984 (* 16 ?x983)))
 (let ((?x898 (* z00 z00 x00)))
 (let ((?x1149 (* (- 18) ?x898)))
 (let ((?x854 (* (- 4) (* y y y))))
 (let ((?x802 (* 108 (* x x))))
 (let ((?x755 (* z00 z00 y00 y00)))
 (let ((?x770 (* (- 1) ?x755)))
 (let ((?x712 (* z00 z00 y00)))
 (let ((?x1250 (* (- 10) ?x712)))
 (let ((?x687 (* z00 y00 y00)))
 (let ((?x722 (* (- 12) ?x687)))
 (let ((?x578 (* y00 y00)))
 (let ((?x1049 (* 96 ?x578)))
 (let ((?x552 (* y y)))
 (let ((?x797 (* 24 ?x552)))
 (let ((?x548 (* z00 x00)))
 (let ((?x466 (* 36 ?x548)))
 (let ((?x511 (* z00 y00)))
 (let ((?x876 (* 24 ?x511)))
 (let ((?x458 (* y00 x00)))
 (let ((?x449 (* 216 ?x458)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1316 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x449 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x876 ?x466 ?x797 ?x1049 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x722 ?x1250 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x770 ?x802 ?x854 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1149 (* (- 216) (* x y00)) ?x984 (* (- 12) (* y y y00)) ?x1099 (* (- 216) (* x x00)) ?x1189 ?x1193 (* 36 (* x z00 y00)) ?x1296)))
 (let (($x1321 (= ?x1316 0)))
 (let ((?x899 (* 3 ?x898)))
 (let ((?x961 (* 3 ?x712)))
 (let ((?x694 (* (- 1) ?x687)))
 (let ((?x624 (* 18 (* z x00))))
 (let ((?x881 (* (- 36) ?x578)))
 (let ((?x786 (* (- 6) ?x511)))
 (let ((?x485 (* z y00)))
 (let ((?x486 (* 12 ?x485)))
 (let ((?x519 (* (- 18) (* x z))))
 (let ((?x459 (* (- 18) ?x458)))
 (let ((?x454 (* y z)))
 (let ((?x478 (* (- 12) ?x454)))
 (let ((?x135 (* y y z)))
 (let ((?x590 (* (- 108) x00)))
 (let ((?x533 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1017 (+ ?x64 ?x71 ?x533 ?x590 (* (- 3) (* y z00 z00)) ?x135 ?x478 ?x459 (* (- 18) (* x y)) ?x519 ?x486 ?x786 ?x881 ?x624 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x694 ?x961 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x899 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1024 (= ?x1017 0)))
 (let ((?x607 (* (- 24) ?x578)))
 (let ((?x555 (* 12 ?x552)))
 (let ((?x549 (* 18 ?x548)))
 (let ((?x627 (* 6 ?x511)))
 (let ((?x103 (* y z z00)))
 (let ((?x766 (+ ?x64 ?x71 ?x533 ?x590 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x478 ?x519 ?x486 ?x627 ?x549 ?x555 ?x607 ?x624 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x712 (* (- 18) (* x z00)))))
 (let (($x771 (= ?x766 0)))
 (let ((?x512 (* 18 ?x511)))
 (let ((?x370 (* z00 z00)))
 (let ((?x474 (* 6 ?x370)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x463 (* (- 1) ?x55)))
 (let ((?x606 (+ ?x64 ?x71 ?x533 ?x463 ?x590 ?x76 ?x474 (* (- 6) ?x454) (* (- 12) ?x485) ?x512 (* (- 6) (* z z00)))))
 (let (($x611 (= ?x606 0)))
 (let ((?x441 (* (- 12) y00)))
 (let ((?x440 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x444 (= (+ ?x45 ?x46 ?x440 ?x441 (* (- 1) (* z z)) ?x370) 0)))
 (let (($x362 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x1633 (and $x362 $x444 $x611 $x771 $x1024 $x1321 (not (= ?x1133 0)))))
 (let ((?x1290 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)))
 (let ((?x1810 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)))
 (let ((?x1838 (* z00 z00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)))
 (let ((?x2220 (+ (* (- 12) (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)) (* 6 ?x702) (* (- 12) ?x767) (* (- 1) ?x1517) (* 12 (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x531 ?x582 (* (- 12) (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)) (* (- 6) ?x724) (* (- 6) ?x1074) (* (- 6) ?x750) (* (- 6) ?x428) (* 12 ?x1315) (* 12 ?x1070) (* (- 6) ?x1405) (* 6 ?x1375) ?x1412 (* 6 (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 12 ?x1547) (* (- 1) ?x1360) ?x828 (* (- 1) ?x693) (* 6 ?x804) (* (- 1) ?x1303) (* (- 6) ?x1032) (* 6 ?x1352) (* 12 ?x1713) ?x646 (* (- 12) ?x1678) (* (- 6) (* z00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) (* (- 1) ?x1619) (* (- 1) ?x1853) ?x1838 (* 12 (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* (- 1) ?x1588) (* (- 6) (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 12 ?x1794) (* 6 (* ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) ?x1810 (* 12 (* ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218)) ?x1811 (* (- 12) ?x2045) (* (- 6) (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x1290 (* (- 12) ?x2024) (* (- 1) ?x1008) (* 6 ?x1903) (* (- 1) ?x1995) (* 6 ?x2096) (* 12 ?x2104) (* (- 12) ?x2121) (* 6 (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* (- 12) (* y00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) (* (- 12) ?x2199))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x879 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x797 ?x802 ?x854 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x984 (* (- 6) (* z00 y y)) ?x1049 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1296 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x684 (* 18 (* x00 z))))
 (let ((?x424 (* z y)))
 (let ((?x379 (* (- 12) ?x424)))
 (let ((?x1102 (* y00 z)))
 (let ((?x1103 (* 12 ?x1102)))
 (let ((?x328 (* (- 18) (* z x))))
 (let ((?x949 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x328 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1103 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x379 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x881 ?x684 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x533 (* 18 (* y00 x)) ?x71 ?x590 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x734 (+ (* (- 1) (* y00 z00 z)) ?x379 ?x328 (* 18 (* x00 z00)) ?x555 ?x607 ?x684 ?x1103 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x533 (* (- 6) (* z00 y)) ?x71 ?x590 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x870 (+ (* (- 6) ?x424) ?x463 ?x474 (* (- 12) ?x1102) (* 18 (* y00 z00)) ?x64 ?x533 (* (- 6) (* z00 z)) ?x71 ?x590 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x400 (* (- 1) ?x370)))
 (let (($x1101 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x400 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x870 0) (= ?x734 0) (= ?x949 0) (= ?x879 0) (not (= ?x2220 0)))))
 (rewrite (= $x1101 $x1633)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x317 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x219 (+ z 6)))
 (let ((?x218 (+ y z)))
 (let ((?x217 (+ x y)))
 (let ((?x216 (+ n 1)))
 (let ((?x310 (* 12 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 y00 ?x219 ?x219 ?x219)))
 (let ((?x305 (* 12 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 y00 ?x219 ?x219 ?x219)))
 (let ((?x300 (* ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x298 (* 6 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x288 (* 12 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x286 (* ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00 z00)))
 (let ((?x282 (* 12 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219)))
 (let ((?x269 (* ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00 z00)))
 (let ((?x265 (* ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 z00 z00)))
 (let ((?x264 (* 12 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x263 (* 6 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x260 (* 6 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 z00)))
 (let ((?x259 (* ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x249 (* 12 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219)))
 (let ((?x247 (* ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x246 (* 6 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00)))
 (let ((?x244 (* 6 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x241 (* 12 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 y00 ?x219 ?x219 ?x219)))
 (let ((?x235 (* 6 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00)))
 (let ((?x234 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00)))
 (let ((?x229 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00 z00)))
 (let ((?x224 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x223 (* 12 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219)))
 (let ((?x221 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x222 (+ (* (- 12) ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x219 ?x219 ?x219) ?x221)))
 (let ((?x230 (+ (- (- ?x222 ?x223) ?x224) (* 12 ?x216 ?x216 ?x216 ?x217 ?x218 y00 ?x219 ?x219 ?x219) (* ?x216 ?x216 ?x217 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219) ?x229)))
 (let ((?x237 (- (- ?x230 (* 12 ?x216 ?x216 ?x217 ?x218 ?x218 ?x219 ?x219 ?x219)) (* 6 ?x216 ?x216 ?x217 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x238 (- ?x237 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 z00))))
 (let ((?x243 (+ (- (- ?x238 ?x234) ?x235) ?x241 (* 12 ?x216 ?x216 ?x217 ?x218 ?x218 y00 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x250 (+ (- ?x243 ?x244) ?x246 ?x247 (* 6 ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 z00) ?x249)))
 (let ((?x254 (+ (- ?x250 (* ?x216 ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 z00 z00)) (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 z00 z00))))
 (let ((?x256 (- ?x254 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x258 (+ ?x256 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x271 (- (+ (- (- ?x258 ?x259) ?x260) ?x263 ?x264 ?x265) (* 12 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x273 (- (- ?x271 (* 6 ?x216 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00)) ?x269)))
 (let ((?x277 (+ (- ?x273 (* ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 z00 z00)) (* ?x216 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00 z00) (* 12 ?x216 ?x216 ?x217 ?x218 y00 ?x219 ?x219 ?x219))))
 (let ((?x281 (- (- ?x277 (* ?x216 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219)) (* 6 ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x287 (+ ?x281 ?x282 (* 6 ?x216 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219) (* ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219) (* 12 ?x216 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219) ?x286)))
 (let ((?x291 (- (- ?x287 ?x288) (* 6 ?x216 ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x296 (- (+ ?x291 (* ?x216 ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219)) (* 12 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x297 (- ?x296 (* ?x216 ?x216 ?x217 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219 z00 z00))))
 (let ((?x304 (+ (- (+ ?x297 ?x298) ?x300) (* 6 ?x216 ?x216 ?x217 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219 z00) (* 12 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x308 (+ (- ?x304 ?x305) (* 6 ?x216 ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 z00))))
 (let ((?x312 (- (- ?x308 (* 12 ?x216 ?x218 ?x218 ?x218 y00 ?x219 ?x219 ?x219)) ?x310)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x312 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x689 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x217 (+ x y)))
 (let ((?x218 (+ y z)))
 (let ((?x451 (+ 6 z)))
 (let ((?x457 (+ 1 n)))
 (let ((?x2199 (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x2121 (* y00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x2104 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217 ?x217)))
 (let ((?x2096 (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x1995 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1903 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1008 (* z00 z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x2024 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1290 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)))
 (let ((?x2045 (* y00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1811 (* z00 z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1810 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)))
 (let ((?x1794 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1838 (* z00 z00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)))
 (let ((?x1619 (* z00 z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1678 (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x646 (* z00 z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1713 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217 ?x217)))
 (let ((?x1352 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1032 (* z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1303 (* ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x804 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x693 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x828 (* z00 z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x1547 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1412 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1375 (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1405 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x1070 (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x1315 (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x428 (* z00 ?x457 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x750 (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x1074 (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x217 ?x217)))
 (let ((?x724 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x582 (* z00 z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x531 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)))
 (let ((?x1517 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x767 (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218 ?x218 ?x218 ?x217)))
 (let ((?x702 (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x217 ?x217)))
 (let ((?x2220 (+ (* (- 12) (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)) (* 6 ?x702) (* (- 12) ?x767) (* (- 1) ?x1517) (* 12 (* y00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x531 ?x582 (* (- 12) (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x217)) (* (- 6) ?x724) (* (- 6) ?x1074) (* (- 6) ?x750) (* (- 6) ?x428) (* 12 ?x1315) (* 12 ?x1070) (* (- 6) ?x1405) (* 6 ?x1375) ?x1412 (* 6 (* z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 12 ?x1547) (* (- 1) (* z00 z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x828 (* (- 1) ?x693) (* 6 ?x804) (* (- 1) ?x1303) (* (- 6) ?x1032) (* 6 ?x1352) (* 12 ?x1713) ?x646 (* (- 12) ?x1678) (* (- 6) (* z00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) (* (- 1) ?x1619) (* (- 1) (* z00 z00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x1838 (* 12 (* y00 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* (- 1) (* ?x457 ?x451 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) (* (- 6) (* ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) (* 12 ?x1794) (* 6 (* ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) ?x1810 (* 12 (* ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218 ?x218)) ?x1811 (* (- 12) ?x2045) (* (- 6) (* ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x451 ?x218 ?x217)) ?x1290 (* (- 12) ?x2024) (* (- 1) ?x1008) (* 6 ?x1903) (* (- 1) ?x1995) (* 6 ?x2096) (* 12 ?x2104) (* (- 12) ?x2121) (* 6 (* z00 ?x457 ?x457 ?x457 ?x451 ?x451 ?x451 ?x218 ?x217)) (* (- 12) (* y00 ?x457 ?x451 ?x451 ?x451 ?x218 ?x218 ?x218)) (* (- 12) ?x2199))))
 (let ((?x1295 (* x00 x00)))
 (let ((?x1296 (* 108 ?x1295)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x578 (* y00 y00)))
 (let ((?x1049 (* 96 ?x578)))
 (let ((?x983 (* y00 y00 y00)))
 (let ((?x984 (* 16 ?x983)))
 (let ((?x854 (* (- 4) (* y y y))))
 (let ((?x802 (* 108 (* x x))))
 (let ((?x552 (* y y)))
 (let ((?x797 (* 24 ?x552)))
 (let ((?x879 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x797 ?x802 ?x854 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x984 (* (- 6) (* z00 y y)) ?x1049 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1296 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x590 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x533 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x684 (* 18 (* x00 z))))
 (let ((?x881 (* (- 36) ?x578)))
 (let ((?x424 (* z y)))
 (let ((?x379 (* (- 12) ?x424)))
 (let ((?x1102 (* y00 z)))
 (let ((?x1103 (* 12 ?x1102)))
 (let ((?x328 (* (- 18) (* z x))))
 (let ((?x949 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x328 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1103 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x379 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x881 ?x684 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x533 (* 18 (* y00 x)) ?x71 ?x590 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x607 (* (- 24) ?x578)))
 (let ((?x555 (* 12 ?x552)))
 (let ((?x734 (+ (* (- 1) (* y00 z00 z)) ?x379 ?x328 (* 18 (* x00 z00)) ?x555 ?x607 ?x684 ?x1103 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x533 (* (- 6) (* z00 y)) ?x71 ?x590 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x370 (* z00 z00)))
 (let ((?x474 (* 6 ?x370)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x463 (* (- 1) ?x55)))
 (let ((?x870 (+ (* (- 6) ?x424) ?x463 ?x474 (* (- 12) ?x1102) (* 18 (* y00 z00)) ?x64 ?x533 (* (- 6) (* z00 z)) ?x71 ?x590 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x400 (* (- 1) ?x370)))
 (let (($x1101 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x400 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x870 0) (= ?x734 0) (= ?x949 0) (= ?x879 0) (not (= ?x2220 0)))))
 (let ((?x219 (+ z 6)))
 (let ((?x216 (+ n 1)))
 (let ((?x310 (* 12 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 y00 ?x219 ?x219 ?x219)))
 (let ((?x305 (* 12 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 y00 ?x219 ?x219 ?x219)))
 (let ((?x300 (* ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x298 (* 6 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x288 (* 12 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x286 (* ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00 z00)))
 (let ((?x282 (* 12 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219)))
 (let ((?x269 (* ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00 z00)))
 (let ((?x265 (* ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 z00 z00)))
 (let ((?x264 (* 12 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x263 (* 6 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x260 (* 6 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 z00)))
 (let ((?x259 (* ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x249 (* 12 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219)))
 (let ((?x247 (* ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x246 (* 6 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00)))
 (let ((?x244 (* 6 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x241 (* 12 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 y00 ?x219 ?x219 ?x219)))
 (let ((?x235 (* 6 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00)))
 (let ((?x234 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00)))
 (let ((?x229 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00 z00)))
 (let ((?x224 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x223 (* 12 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219)))
 (let ((?x221 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219)))
 (let ((?x222 (+ (* (- 12) ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x219 ?x219 ?x219) ?x221)))
 (let ((?x230 (+ (- (- ?x222 ?x223) ?x224) (* 12 ?x216 ?x216 ?x216 ?x217 ?x218 y00 ?x219 ?x219 ?x219) (* ?x216 ?x216 ?x217 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219) ?x229)))
 (let ((?x237 (- (- ?x230 (* 12 ?x216 ?x216 ?x217 ?x218 ?x218 ?x219 ?x219 ?x219)) (* 6 ?x216 ?x216 ?x217 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x238 (- ?x237 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 z00))))
 (let ((?x243 (+ (- (- ?x238 ?x234) ?x235) ?x241 (* 12 ?x216 ?x216 ?x217 ?x218 ?x218 y00 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x250 (+ (- ?x243 ?x244) ?x246 ?x247 (* 6 ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 z00) ?x249)))
 (let ((?x254 (+ (- ?x250 (* ?x216 ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 z00 z00)) (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 z00 z00))))
 (let ((?x256 (- ?x254 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x258 (+ ?x256 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x271 (- (+ (- (- ?x258 ?x259) ?x260) ?x263 ?x264 ?x265) (* 12 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x273 (- (- ?x271 (* 6 ?x216 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00)) ?x269)))
 (let ((?x277 (+ (- ?x273 (* ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 z00 z00)) (* ?x216 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 z00 z00) (* 12 ?x216 ?x216 ?x217 ?x218 y00 ?x219 ?x219 ?x219))))
 (let ((?x281 (- (- ?x277 (* ?x216 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219)) (* 6 ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x287 (+ ?x281 ?x282 (* 6 ?x216 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219) (* ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219) (* 12 ?x216 ?x218 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219) ?x286)))
 (let ((?x291 (- (- ?x287 ?x288) (* 6 ?x216 ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x296 (- (+ ?x291 (* ?x216 ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219)) (* 12 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x297 (- ?x296 (* ?x216 ?x216 ?x217 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219 z00 z00))))
 (let ((?x304 (+ (- (+ ?x297 ?x298) ?x300) (* 6 ?x216 ?x216 ?x217 ?x218 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219 z00) (* 12 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x219 ?x219 ?x219 ?x219 ?x219))))
 (let ((?x308 (+ (- ?x304 ?x305) (* 6 ?x216 ?x216 ?x216 ?x217 ?x218 ?x219 ?x219 ?x219 z00))))
 (let ((?x312 (- (- ?x308 (* 12 ?x216 ?x218 ?x218 ?x218 y00 ?x219 ?x219 ?x219)) ?x310)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x316 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x312 0))))))
 (rewrite (= $x316 $x1101))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x318 (asserted $x317)))
 (let ((@x1550 (mp (mp @x318 (quant-intro (proof-bind ?x689) (= $x317 $x1761)) $x1761) (rewrite (= $x1761 $x1761)) $x1761)))
 (let ((@x1464 (mp~ (mp @x1550 (quant-intro (proof-bind ?x981) (= $x1761 $x371)) $x371) (sk (~ $x371 $x1466)) $x1466)))
 (let ((@x527 (mp @x1464 (rewrite (= $x1466 $x1651)) $x1651)))
 (let ((@x943 (and-elim @x527 $x1237)))
 (let ((@x1865 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1237) $x553)) @x943 $x553)))
 (let (($x1421 (>= ?x1081 0)))
 (let ((@x1482 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1237) $x1421)) @x943 $x1421)))
 (let (($x575 (<= ?x2177 0)))
 (let ((@x2216 (and-elim @x527 $x2184)))
 (let ((@x800 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2184) $x575)) @x2216 $x575)))
 (let (($x373 (>= ?x2177 0)))
 (let ((@x1545 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2184) $x373)) @x2216 $x373)))
 (let (($x1635 (not (<= ?x1163 0))))
 (let (($x2200 (>= ?x1163 0)))
 (let ((@x1774 ((_ th-lemma arith) (hypothesis (not $x2200)) @x1482 @x1865 @x1545 @x800 @x1482 @x1865 false)))
 (let ((@x1318 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1120 $x1635 (not $x2200))) (and-elim @x527 $x1085) (or $x1635 (not $x2200)))))
 ((_ th-lemma arith) (unit-resolution @x1318 (lemma @x1774 $x2200) $x1635) @x1482 @x1865 @x1545 @x800 @x1482 @x1865 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        26
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             878
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      8
 :arith-tableau-max-columns 150
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                20.58
 :memory                    19.43
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                5733183
 :num-checks                1
 :propagations              14
 :rlimit-count              66949
 :time                      0.06
 :total-time                0.08)
