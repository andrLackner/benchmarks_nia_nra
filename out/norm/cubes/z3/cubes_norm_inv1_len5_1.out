unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x2188 (* (- 1) k!2)))
 (let ((?x2260 (+ (* 3 n!0) (* 3 (* n!0 n!0)) ?x2188)))
 (let (($x1512 (<= ?x2260 (- 1))))
 (let (($x2313 (= ?x2260 (- 1))))
 (let ((?x2226 (+ c!3 k!2)))
 (let ((?x1106 (+ m!1 k!2)))
 (let ((?x2376 (+ 6 m!1)))
 (let ((?x1576 (+ 1 n!0)))
 (let ((?x1830 (* m!1 m!1 m!1 m!1)))
 (let ((?x692 (+ (* 6 (* ?x1576 ?x1576 ?x1576 ?x2376 ?x2376 ?x2376 ?x1106 ?x2226)) (* (- 36) (* c!3 c!3 m!1)) (* (- 12) (* n!0 m!1 m!1 m!1)) (* (- 6) (* ?x1576 ?x1576 ?x2376 ?x1106 ?x2226 ?x2226)) (* (- 72) (* n!0 c!3 k!2 k!2)) (* (- 5) (* m!1 k!2 k!2 k!2)) (* (- 6) (* ?x1576 ?x2376 ?x2376 ?x1106 ?x1106 ?x1106 ?x2226)) (* (- 6) (* n!0 n!0 k!2 k!2 k!2)) (* (- 18) (* n!0 n!0 m!1 m!1 k!2)) (* (- 54) (* m!1 k!2 k!2)) (* (- 18) (* m!1 m!1 k!2)) (* (- 72) (* c!3 k!2 k!2)) (* 6 (* ?x1576 ?x1576 ?x1576 ?x1576 ?x2376 ?x2376 ?x2376 ?x1106 ?x2226)) (* (- 6) (* n!0 c!3 c!3 m!1 m!1)) (* (- 5) (* n!0 m!1 k!2 k!2 k!2)) (* (- 12) (* n!0 c!3 m!1 k!2 k!2)) (* (- 6) (* n!0 c!3 c!3 m!1 k!2)) (* (- 6) (* ?x2376 ?x2376 ?x1106 ?x1106 ?x1106 ?x2226)) (* (- 12) (* c!3 m!1 m!1 k!2)) (* (- 6) (* ?x1576 ?x2376 ?x2376 ?x2376 ?x1106 ?x1106)) (* (- 18) (* n!0 n!0 m!1 k!2 k!2)) (* (- 36) (* n!0 c!3 c!3 k!2)) (* (- 3) (* m!1 m!1 k!2 k!2)) (* (- 48) (* n!0 k!2 k!2 k!2)) (* (- 12) (* c!3 m!1 k!2 k!2)) (* (- 6) (* c!3 c!3 m!1 k!2)) (* (- 12) (* n!0 c!3 m!1 m!1 k!2)) (* (- 36) (* c!3 c!3 k!2)) (* (- 6) (* n!0 n!0 m!1 m!1 m!1)) (* ?x1576 ?x2376 ?x2376 ?x2376 ?x2376 ?x1106 ?x1106) (* (- 1) (* ?x1576 ?x1576 ?x1576 ?x2376 ?x2376 ?x2376 ?x2376 ?x1106 ?x2226)) (* n!0 m!1 m!1 m!1 m!1) (* (- 36) (* n!0 c!3 c!3 m!1)) (* (- 6) (* m!1 m!1 m!1)) (* 3 (* n!0 m!1 m!1 m!1 k!2)) (* (- 6) (* ?x1576 ?x1576 ?x2376 ?x2376 ?x2376 ?x1106 ?x1106)) (* (- 72) (* c!3 m!1 k!2)) ?x1830 (* (- 3) (* n!0 m!1 m!1 k!2 k!2)) (* 3 (* m!1 m!1 m!1 k!2)) (* (- 42) (* k!2 k!2 k!2)) (* ?x2376 ?x2376 ?x2376 ?x1106 ?x1106 ?x1106 ?x2226) (* (- 36) (* n!0 m!1 m!1 k!2)) (* (- 72) (* n!0 m!1 k!2 k!2)) (* (- 72) (* n!0 c!3 m!1 k!2)) (* (- 6) (* c!3 c!3 m!1 m!1)) (* ?x1576 ?x2376 ?x2376 ?x1106 ?x2226 ?x2226))))
 (let (($x2427 (= ?x692 0)))
 (let (($x1206 (not $x2427)))
 (let ((?x1051 (+ (* 2 n!0) (* (- 3) c!3) (* n!0 k!2) ?x2188)))
 (let (($x1048 (= ?x1051 (- 1))))
 (let ((?x1066 (* k!2 k!2)))
 (let ((?x1083 (+ (* 9 n!0) (* (- 18) c!3) ?x1066 (* (- 9) (* n!0 c!3)) (* (- 5) k!2))))
 (let (($x1081 (= ?x1083 (- 4))))
 (let ((?x2331 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x2330 (= ?x2331 (- 6))))
 (let (($x1018 (and $x2330 $x1081 $x1048 $x2313 $x1206)))
 (let ((?x2399 (* (- 1) (* ?x1576 ?x2376 ?x2376 ?x2376 ?x2376 (+ k!2 m!1) (+ k!2 m!1)))))
 (let ((?x148 (* (- 6) (* ?x1576 ?x1576 ?x1576 ?x1576 ?x2376 ?x2376 ?x2376 (+ k!2 m!1) ?x2226))))
 (let ((?x716 (* 6 (* ?x1576 ?x1576 ?x2376 ?x2376 ?x2376 (+ k!2 m!1) (+ k!2 m!1)))))
 (let ((?x2192 (+ k!2 m!1)))
 (let ((?x1920 (+ (* 6 (* c!3 c!3 k!2 m!1 n!0)) (* 12 (* c!3 k!2 k!2 m!1 n!0)) (* 5 (* k!2 k!2 k!2 m!1 n!0)) (* 6 (* c!3 c!3 m!1 m!1 n!0)) (* 12 (* c!3 k!2 m!1 m!1 n!0)) (* 3 (* k!2 k!2 m!1 m!1 n!0)) (* 36 (* c!3 c!3 k!2)) (* 72 (* c!3 k!2 k!2)) (* 42 (* k!2 k!2 k!2)) (* 36 (* c!3 c!3 m!1)) (* 72 (* c!3 k!2 m!1)) (* 54 (* k!2 k!2 m!1)) (* 6 (* c!3 c!3 k!2 m!1)) (* 12 (* c!3 k!2 k!2 m!1)) (* 5 (* k!2 k!2 k!2 m!1)) (* 6 (* c!3 c!3 m!1 m!1)) (* 6 (* ?x2376 ?x2376 ?x2192 ?x2192 ?x2192 ?x2226)) (* 12 (* c!3 k!2 m!1 m!1)) (* 3 (* k!2 k!2 m!1 m!1)) (* 36 (* c!3 c!3 k!2 n!0)) (* 72 (* c!3 k!2 k!2 n!0)) (* 48 (* k!2 k!2 k!2 n!0)) (* 36 (* c!3 c!3 m!1 n!0)) (* 72 (* c!3 k!2 m!1 n!0)) (* 72 (* k!2 k!2 m!1 n!0)) (* (- 3) (* k!2 m!1 m!1 m!1 n!0)) (* (- 1) (* m!1 m!1 m!1 m!1 n!0)) (* 18 (* k!2 m!1 m!1)) (* 6 (* m!1 m!1 m!1)) (* (- 3) (* k!2 m!1 m!1 m!1)) (* (- 1) ?x1830) (* 36 (* k!2 m!1 m!1 n!0)) (* 12 (* m!1 m!1 m!1 n!0)) (* (- 6) (* ?x1576 ?x1576 ?x1576 ?x2376 ?x2376 ?x2376 ?x2192 ?x2226)) (* ?x1576 ?x1576 ?x1576 ?x2376 ?x2376 ?x2376 ?x2376 ?x2192 ?x2226) (* 6 (* ?x1576 ?x2376 ?x2376 ?x2376 ?x2192 ?x2192)) (* 6 (* k!2 k!2 k!2 n!0 n!0)) (* 18 (* k!2 k!2 m!1 n!0 n!0)) (* (- 1) (* ?x1576 ?x2376 ?x2376 ?x2192 ?x2226 ?x2226)) (* (- 1) (* ?x2376 ?x2376 ?x2376 ?x2192 ?x2192 ?x2192 ?x2226)) (* 6 (* ?x1576 ?x2376 ?x2376 ?x2192 ?x2192 ?x2192 ?x2226)) (* 6 (* ?x1576 ?x1576 ?x2376 ?x2192 ?x2226 ?x2226)) ?x716 (* 18 (* k!2 m!1 m!1 n!0 n!0)) (* 6 (* m!1 m!1 m!1 n!0 n!0)) ?x148 ?x2399)))
 (let (($x2337 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x1059 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x1066) (* 9 (* c!3 n!0)))))
 (let (($x895 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x1059 4) $x2337 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x1920 0)))))
 (let (($x2389 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x458 (+ 1 n)))
 (let ((?x2312 (* ?x458 ?x319 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x368 (* (- 1) ?x2312)))
 (let ((?x68 (+ c k)))
 (let ((?x2259 (* ?x458 ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x364 (* (- 6) ?x2259)))
 (let ((?x2233 (* 6 (* m m m n n))))
 (let ((?x2518 (* 18 (* k m m n n))))
 (let ((?x1681 (* ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x985 (* 6 ?x1681)))
 (let ((?x1603 (* ?x458 ?x458 ?x319 ?x69 ?x68 ?x68)))
 (let ((?x1563 (* 6 ?x1603)))
 (let ((?x1498 (* ?x458 ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x991 (* 6 ?x1498)))
 (let ((?x1460 (* ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x2303 (* (- 1) ?x1460)))
 (let ((?x1458 (* ?x458 ?x319 ?x319 ?x69 ?x68 ?x68)))
 (let ((?x2258 (* (- 1) ?x1458)))
 (let ((?x1075 (* ?x458 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x358 (* 6 ?x1075)))
 (let ((?x1053 (* ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x1037 (* ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x346 (* (- 6) ?x1037)))
 (let ((?x639 (* ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x2301 (* 6 ?x639)))
 (let ((?x675 (+ (* 6 (* c c k m n)) (* 12 (* c k k m n)) (* 5 (* k k k m n)) (* 6 (* c c m m n)) (* 12 (* c k m m n)) (* 3 (* k k m m n)) (* 36 (* c c k)) (* 72 (* c k k)) (* 42 (* k k k)) (* 36 (* c c m)) (* 72 (* c k m)) (* 54 (* k k m)) (* 6 (* c c k m)) (* 12 (* c k k m)) (* 5 (* k k k m)) (* 6 (* c c m m)) ?x2301 (* 12 (* c k m m)) (* 3 (* k k m m)) (* 36 (* c c k n)) (* 72 (* c k k n)) (* 48 (* k k k n)) (* 36 (* c c m n)) (* 72 (* c k m n)) (* 72 (* k k m n)) (* (- 3) (* k m m m n)) (* (- 1) (* m m m m n)) (* 18 (* k m m)) (* 6 (* m m m)) (* (- 3) (* k m m m)) (* (- 1) (* m m m m)) (* 36 (* k m m n)) (* 12 (* m m m n)) ?x346 ?x1053 ?x358 (* 6 (* k k k n n)) (* 18 (* k k m n n)) ?x2258 ?x2303 ?x991 ?x1563 ?x985 ?x2518 ?x2233 ?x364 ?x368)))
 (let (($x311 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x273 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x224 (* (- 1) ?x49)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x221 (= (+ ?x40 ?x44 ?x223 ?x224 (* 9 (* c n))) 4)))
 (let (($x137 (= (+ m (* (- 6) n)) 6)))
 (and $x137 $x221 $x273 $x311 (not (= ?x675 0)))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1007 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x458 (+ 1 n)))
 (let ((?x2312 (* ?x458 ?x319 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x368 (* (- 1) ?x2312)))
 (let ((?x68 (+ c k)))
 (let ((?x2259 (* ?x458 ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x364 (* (- 6) ?x2259)))
 (let ((?x1075 (* ?x458 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x358 (* 6 ?x1075)))
 (let ((?x1053 (* ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x1037 (* ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x346 (* (- 6) ?x1037)))
 (let ((?x1681 (* ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x985 (* 6 ?x1681)))
 (let ((?x1498 (* ?x458 ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x991 (* 6 ?x1498)))
 (let ((?x1603 (* ?x458 ?x458 ?x319 ?x69 ?x68 ?x68)))
 (let ((?x1563 (* 6 ?x1603)))
 (let ((?x1458 (* ?x458 ?x319 ?x319 ?x69 ?x68 ?x68)))
 (let ((?x2258 (* (- 1) ?x1458)))
 (let ((?x1460 (* ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x2303 (* (- 1) ?x1460)))
 (let ((?x639 (* ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x2301 (* 6 ?x639)))
 (let ((?x366 (+ ?x2301 (* 6 (* ?x458 ?x319 ?x69 ?x68 ?x68)) ?x2303 ?x2258 (* (- 1) (* ?x458 ?x319 ?x69 ?x69 ?x69)) ?x1563 ?x991 ?x985 (* 6 (* ?x458 ?x69 ?x69 ?x69)) ?x346 ?x1053 ?x358 (* 6 (* ?x458 ?x458 ?x69 ?x69 ?x69)) ?x364 ?x368)))
 (let (($x579 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1419 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x224 (* (- 1) ?x49)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x137 (= (+ m (* (- 6) n)) 6)))
 (and $x137 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x223 ?x224) 4) $x1419 $x579 (not (= ?x366 0))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1425 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x458 (+ 1 n)))
 (let ((?x2312 (* ?x458 ?x319 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x368 (* (- 1) ?x2312)))
 (let ((?x68 (+ c k)))
 (let ((?x2259 (* ?x458 ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x364 (* (- 6) ?x2259)))
 (let ((?x2233 (* 6 (* m m m n n))))
 (let ((?x2518 (* 18 (* k m m n n))))
 (let ((?x1681 (* ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x985 (* 6 ?x1681)))
 (let ((?x1603 (* ?x458 ?x458 ?x319 ?x69 ?x68 ?x68)))
 (let ((?x1563 (* 6 ?x1603)))
 (let ((?x1498 (* ?x458 ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x991 (* 6 ?x1498)))
 (let ((?x1460 (* ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x2303 (* (- 1) ?x1460)))
 (let ((?x1458 (* ?x458 ?x319 ?x319 ?x69 ?x68 ?x68)))
 (let ((?x2258 (* (- 1) ?x1458)))
 (let ((?x1075 (* ?x458 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x358 (* 6 ?x1075)))
 (let ((?x1053 (* ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x1037 (* ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x346 (* (- 6) ?x1037)))
 (let ((?x639 (* ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x2301 (* 6 ?x639)))
 (let ((?x675 (+ (* 6 (* c c k m n)) (* 12 (* c k k m n)) (* 5 (* k k k m n)) (* 6 (* c c m m n)) (* 12 (* c k m m n)) (* 3 (* k k m m n)) (* 36 (* c c k)) (* 72 (* c k k)) (* 42 (* k k k)) (* 36 (* c c m)) (* 72 (* c k m)) (* 54 (* k k m)) (* 6 (* c c k m)) (* 12 (* c k k m)) (* 5 (* k k k m)) (* 6 (* c c m m)) ?x2301 (* 12 (* c k m m)) (* 3 (* k k m m)) (* 36 (* c c k n)) (* 72 (* c k k n)) (* 48 (* k k k n)) (* 36 (* c c m n)) (* 72 (* c k m n)) (* 72 (* k k m n)) (* (- 3) (* k m m m n)) (* (- 1) (* m m m m n)) (* 18 (* k m m)) (* 6 (* m m m)) (* (- 3) (* k m m m)) (* (- 1) (* m m m m)) (* 36 (* k m m n)) (* 12 (* m m m n)) ?x346 ?x1053 ?x358 (* 6 (* k k k n n)) (* 18 (* k k m n n)) ?x2258 ?x2303 ?x991 ?x1563 ?x985 ?x2518 ?x2233 ?x364 ?x368)))
 (let (($x311 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x273 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x224 (* (- 1) ?x49)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x221 (= (+ ?x40 ?x44 ?x223 ?x224 (* 9 (* c n))) 4)))
 (let (($x137 (= (+ m (* (- 6) n)) 6)))
 (let (($x1244 (and $x137 $x221 $x273 $x311 (not (= ?x675 0)))))
 (let ((?x366 (+ ?x2301 (* 6 (* ?x458 ?x319 ?x69 ?x68 ?x68)) ?x2303 ?x2258 (* (- 1) (* ?x458 ?x319 ?x69 ?x69 ?x69)) ?x1563 ?x991 ?x985 (* 6 (* ?x458 ?x69 ?x69 ?x69)) ?x346 ?x1053 ?x358 (* 6 (* ?x458 ?x458 ?x69 ?x69 ?x69)) ?x364 ?x368)))
 (let (($x579 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1419 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x372 (and $x137 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x223 ?x224) 4) $x1419 $x579 (not (= ?x366 0)))))
 (rewrite (= $x372 $x1244)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x741 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x458 (+ 1 n)))
 (let ((?x2312 (* ?x458 ?x319 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x68 (+ c k)))
 (let ((?x2259 (* ?x458 ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x1524 (* ?x458 ?x319 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* ?x458 ?x319 ?x319 ?x69 ?x68 ?x68)))
 (let ((?x1460 (* ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x2187 (+ (* (- 6) (* ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)) (* (- 6) (* ?x458 ?x319 ?x69 ?x68 ?x68)) ?x1460 ?x1458 ?x1524 (* (- 6) (* ?x458 ?x458 ?x319 ?x69 ?x68 ?x68)) (* (- 6) (* ?x458 ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)) (* (- 6) (* ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x69)) (* (- 6) (* ?x458 ?x69 ?x69 ?x69)) (* 6 (* ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x68)) (* (- 1) (* ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x319 ?x69 ?x68)) (* (- 6) (* ?x458 ?x319 ?x319 ?x319 ?x69 ?x69)) (* (- 6) (* ?x458 ?x458 ?x69 ?x69 ?x69)) (* 6 ?x2259) ?x2312)))
 (let (($x579 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2086 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1403 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x137 (= (+ m (* (- 6) n)) 6)))
 (and $x137 (= ?x1403 (- 4)) $x2086 $x579 (not (= ?x2187 0))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1022 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x458 (+ 1 n)))
 (let ((?x2312 (* ?x458 ?x319 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x368 (* (- 1) ?x2312)))
 (let ((?x68 (+ c k)))
 (let ((?x2259 (* ?x458 ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x364 (* (- 6) ?x2259)))
 (let ((?x1075 (* ?x458 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x358 (* 6 ?x1075)))
 (let ((?x1053 (* ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x1037 (* ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x346 (* (- 6) ?x1037)))
 (let ((?x1681 (* ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x985 (* 6 ?x1681)))
 (let ((?x1498 (* ?x458 ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x991 (* 6 ?x1498)))
 (let ((?x1603 (* ?x458 ?x458 ?x319 ?x69 ?x68 ?x68)))
 (let ((?x1563 (* 6 ?x1603)))
 (let ((?x1458 (* ?x458 ?x319 ?x319 ?x69 ?x68 ?x68)))
 (let ((?x2258 (* (- 1) ?x1458)))
 (let ((?x1460 (* ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x2303 (* (- 1) ?x1460)))
 (let ((?x639 (* ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x2301 (* 6 ?x639)))
 (let ((?x366 (+ ?x2301 (* 6 (* ?x458 ?x319 ?x69 ?x68 ?x68)) ?x2303 ?x2258 (* (- 1) (* ?x458 ?x319 ?x69 ?x69 ?x69)) ?x1563 ?x991 ?x985 (* 6 (* ?x458 ?x69 ?x69 ?x69)) ?x346 ?x1053 ?x358 (* 6 (* ?x458 ?x458 ?x69 ?x69 ?x69)) ?x364 ?x368)))
 (let (($x579 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1419 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x224 (* (- 1) ?x49)))
 (let ((?x223 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x137 (= (+ m (* (- 6) n)) 6)))
 (let (($x372 (and $x137 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x223 ?x224) 4) $x1419 $x579 (not (= ?x366 0)))))
 (let ((?x1524 (* ?x458 ?x319 ?x69 ?x69 ?x69)))
 (let ((?x2187 (+ (* (- 6) ?x639) (* (- 6) (* ?x458 ?x319 ?x69 ?x68 ?x68)) ?x1460 ?x1458 ?x1524 (* (- 6) ?x1603) (* (- 6) ?x1498) (* (- 6) ?x1681) (* (- 6) (* ?x458 ?x69 ?x69 ?x69)) (* 6 ?x1037) (* (- 1) ?x1053) (* (- 6) ?x1075) (* (- 6) (* ?x458 ?x458 ?x69 ?x69 ?x69)) (* 6 ?x2259) ?x2312)))
 (let (($x2086 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1403 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x864 (and $x137 (= ?x1403 (- 4)) $x2086 $x579 (not (= ?x2187 0)))))
 (rewrite (= $x864 $x372))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x102 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x74 (- (* (- 6) (+ c k) ?x69 ?x69 ?x69 ?x70 ?x70) (* 6 (+ c k) (+ c k) ?x69 ?x70 ?x72))))
 (let ((?x78 (+ ?x74 (* (+ c k) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70) (* (+ c k) (+ c k) ?x69 ?x70 ?x70 ?x72) (* ?x69 ?x69 ?x69 ?x70 ?x72))))
 (let ((?x84 (- (- ?x78 (* 6 (+ c k) (+ c k) ?x69 ?x70 ?x72 ?x72)) (* 6 (+ c k) ?x69 ?x69 ?x69 ?x70 ?x70 ?x72))))
 (let ((?x86 (- (- ?x84 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72)) (* 6 ?x69 ?x69 ?x69 ?x72))))
 (let ((?x88 (+ ?x86 (* 6 (+ c k) ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x93 (- (- ?x88 (* (+ c k) ?x69 ?x70 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72)) (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72))))
 (let ((?x97 (+ (- ?x93 (* 6 ?x69 ?x69 ?x69 ?x72 ?x72)) (* 6 (+ c k) ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72 ?x72) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x97 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x967 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x458 (+ 1 n)))
 (let ((?x2312 (* ?x458 ?x319 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x68 (+ c k)))
 (let ((?x2259 (* ?x458 ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x68)))
 (let ((?x1524 (* ?x458 ?x319 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* ?x458 ?x319 ?x319 ?x69 ?x68 ?x68)))
 (let ((?x1460 (* ?x319 ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x2187 (+ (* (- 6) (* ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)) (* (- 6) (* ?x458 ?x319 ?x69 ?x68 ?x68)) ?x1460 ?x1458 ?x1524 (* (- 6) (* ?x458 ?x458 ?x319 ?x69 ?x68 ?x68)) (* (- 6) (* ?x458 ?x319 ?x319 ?x69 ?x69 ?x69 ?x68)) (* (- 6) (* ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x69)) (* (- 6) (* ?x458 ?x69 ?x69 ?x69)) (* 6 (* ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x69 ?x68)) (* (- 1) (* ?x458 ?x458 ?x458 ?x319 ?x319 ?x319 ?x319 ?x69 ?x68)) (* (- 6) (* ?x458 ?x319 ?x319 ?x319 ?x69 ?x69)) (* (- 6) (* ?x458 ?x458 ?x69 ?x69 ?x69)) (* 6 ?x2259) ?x2312)))
 (let (($x579 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2086 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1403 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x137 (= (+ m (* (- 6) n)) 6)))
 (let (($x864 (and $x137 (= ?x1403 (- 4)) $x2086 $x579 (not (= ?x2187 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x74 (- (* (- 6) ?x68 ?x69 ?x69 ?x69 ?x70 ?x70) (* 6 ?x68 ?x68 ?x69 ?x70 ?x72))))
 (let ((?x78 (+ ?x74 (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70) (* ?x68 ?x68 ?x69 ?x70 ?x70 ?x72) (* ?x69 ?x69 ?x69 ?x70 ?x72))))
 (let ((?x84 (- (- ?x78 (* 6 ?x68 ?x68 ?x69 ?x70 ?x72 ?x72)) (* 6 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x72))))
 (let ((?x86 (- (- ?x84 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72)) (* 6 ?x69 ?x69 ?x69 ?x72))))
 (let ((?x92 (- (+ ?x86 (* 6 ?x68 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72)) (* ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x94 (- (- ?x92 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72)) (* 6 ?x69 ?x69 ?x69 ?x72 ?x72))))
 (let ((?x97 (+ ?x94 (* 6 ?x68 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72 ?x72) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x101 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x97 0))))))
 (rewrite (= $x101 $x864)))))))))))))))))))))))))))))))))))
 ))
 (let ((@x103 (asserted $x102)))
 (let ((@x2257 (mp (mp @x103 (quant-intro (proof-bind ?x967) (= $x102 $x741)) $x741) (rewrite (= $x741 $x741)) $x741)))
 (let ((@x1564 (mp (mp @x2257 (quant-intro (proof-bind ?x1022) (= $x741 $x1007)) $x1007) (quant-intro (proof-bind ?x1425) (= $x1007 $x2389)) $x2389)))
 (let ((@x582 (mp (mp~ @x1564 (sk (~ $x2389 $x895)) $x895) (rewrite (= $x895 $x1018)) $x1018)))
 (let ((@x1043 (and-elim @x582 $x2313)))
 (let ((@x1347 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2313) $x1512)) @x1043 $x1512)))
 (let (($x2195 (>= ?x2260 (- 1))))
 (let ((@x1101 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2313) $x2195)) @x1043 $x2195)))
 (let (($x1416 (<= ?x1051 (- 1))))
 (let ((@x2317 (and-elim @x582 $x1048)))
 (let ((@x406 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1048) $x1416)) @x2317 $x1416)))
 (let (($x1420 (>= ?x1051 (- 1))))
 (let ((@x2284 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1048) $x1420)) @x2317 $x1420)))
 (let (($x659 (<= ?x1083 (- 4))))
 (let ((@x1047 (and-elim @x582 $x1081)))
 (let ((@x1121 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1081) $x659)) @x1047 $x659)))
 (let (($x382 (>= ?x1083 (- 4))))
 (let ((@x2180 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1081) $x382)) @x1047 $x382)))
 (let (($x1922 (<= ?x2331 (- 6))))
 (let ((@x1198 (and-elim @x582 $x2330)))
 (let ((@x1201 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2330) $x1922)) @x1198 $x1922)))
 (let (($x1490 (>= ?x2331 (- 6))))
 (let ((@x1534 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2330) $x1490)) @x1198 $x1490)))
 (let (($x1087 (not (>= ?x692 0))))
 (let (($x2253 (<= ?x692 0)))
 (let ((@x1078 ((_ th-lemma arith) (hypothesis (not $x2253)) @x1101 @x1347 @x1534 @x1201 @x1101 @x1347 @x2284 @x406 @x1534 @x1201 @x1101 @x1347 @x2284 @x406 @x1534 @x1201 @x1101 @x1347 @x2180 @x1121 @x2284 @x406 @x1101 @x1347 false)))
 (let ((@x1058 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2427 (not $x2253) $x1087)) (and-elim @x582 $x1206) (or (not $x2253) $x1087))))
 ((_ th-lemma arith) (unit-resolution @x1058 (lemma @x1078 $x2253) $x1087) @x1101 @x1347 @x1534 @x1201 @x1101 @x1347 @x2284 @x406 @x1534 @x1201 @x1101 @x1347 @x2284 @x406 @x1534 @x1201 @x1101 @x1347 @x2180 @x1121 @x2284 @x406 @x1101 @x1347 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        20
 :arith-assert-upper        63
 :arith-branch-var          3
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           13
 :arith-grobner             2
 :arith-ineq-splits         3
 :arith-max-min             642
 :arith-nonlinear-bounds    11
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             6
 :arith-patches_succ        1
 :arith-pivots              12
 :arith-row-summations      14
 :arith-tableau-max-columns 82
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 53
 :del-clause                16
 :final-checks              11
 :max-memory                4.02
 :memory                    3.46
 :mk-bool-var               73
 :mk-clause                 16
 :num-allocs                1474679
 :num-checks                1
 :propagations              12
 :rlimit-count              12342
 :time                      0.01
 :total-time                0.02)
