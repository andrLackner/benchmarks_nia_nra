unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x624 (* r!2 r!2)))
 (let ((?x887 (* 3 ?x624)))
 (let ((?x837 (* (- 1) s!1)))
 (let ((?x280 (* r00 r00)))
 (let ((?x622 (* (- 3) ?x280)))
 (let ((?x1658 (+ s00 ?x622 ?x837 ?x887)))
 (let (($x1476 (<= ?x1658 0)))
 (let (($x923 (= ?x1658 0)))
 (let ((?x847 (+ 3 (* 6 r!2) s!1)))
 (let ((?x558 (+ x!0 ?x837)))
 (let ((?x2482 (* 3 (* r00 r00 (+ 1 r!2) (+ 1 r!2) ?x558 ?x558 ?x558 ?x847))))
 (let ((?x328 (* 3 (* (+ 1 r!2) (+ 1 r!2) ?x558 ?x558 ?x558 ?x847 ?x847 ?x847))))
 (let ((?x304 (+ 1 r!2)))
 (let ((?x1784 (* s00 ?x304 ?x304 ?x847 ?x847 ?x847)))
 (let ((?x656 (+ s00 ?x622 (* (- 3) (* r00 r00 r!2 r!2)) (* 3 (* s00 x!0 x!0 s!1)) (* (- 9) (* r00 r00 r!2 s!1 s!1 s!1)) (* 9 (* r00 r00 x!0 s!1 s!1)) (* 3 (* s00 r!2 s!1 s!1 s!1)) (* (- 3) (* r00 r00 ?x558 ?x558 ?x558 ?x847 ?x847 ?x847)) (* 6 (* r!2 r!2 r!2)) (* s00 r!2 r!2) (* 3 (* r!2 r!2 r!2 r!2)) ?x837 ?x887 (* (- 1) (* ?x304 ?x304 ?x847 ?x847 ?x847 ?x847)) (* (- 1) (* r!2 r!2 s!1)) (* 9 (* r00 r00 r!2 r!2 x!0 x!0 x!0)) (* (- 3) (* s00 r!2 r!2 r!2 x!0 s!1 s!1)) (* (- 1) (* s00 ?x304 ?x304 ?x558 ?x558 ?x558 ?x847)) (* ?x304 ?x304 ?x304 ?x558 ?x558 ?x558 ?x847) (* 27 (* r00 r00 r!2 x!0 s!1 s!1)) (* 3 (* ?x304 ?x304 ?x304 ?x304 ?x847 ?x847 ?x847)) (* (- 3) (* r00 r00 ?x304 ?x304 ?x847 ?x847 ?x847)) (* 3 (* r00 r00 r!2 r!2 r!2 x!0 x!0 x!0)) (* (- 6) (* r00 r00 r!2)) (* 2 (* s00 r!2)) (* (- 27) (* r00 r00 r!2 r!2 x!0 x!0 s!1)) (* (- 1) (* ?x558 ?x558 ?x558 ?x847 ?x847 ?x847 ?x847)) (* (- 3) (* s00 r!2 x!0 x!0 x!0)) (* s00 r!2 r!2 r!2 s!1 s!1 s!1) (* (- 3) (* s00 r!2 r!2 x!0 x!0 x!0)) (* 3 (* r00 r00 x!0 x!0 x!0)) (* (- 1) (* s00 x!0 x!0 x!0)) (* (- 3) (* ?x304 ?x304 ?x304 ?x304 ?x558 ?x558 ?x558 ?x847)) (* (- 9) (* s00 r!2 r!2 x!0 s!1 s!1)) (* (- 9) (* r00 r00 r!2 r!2 r!2 x!0 x!0 s!1)) (* 3 (* s00 r!2 r!2 s!1 s!1 s!1)) (* 9 (* r00 r00 r!2 x!0 x!0 x!0)) (* 9 (* s00 r!2 x!0 x!0 s!1)) (* (- 9) (* s00 r!2 x!0 s!1 s!1)) (* (- 9) (* r00 r00 r!2 r!2 s!1 s!1 s!1)) ?x1784 (* 3 (* s00 r!2 r!2 r!2 x!0 x!0 s!1)) (* (- 1) (* s00 r!2 r!2 r!2 x!0 x!0 x!0)) (* 9 (* s00 r!2 r!2 x!0 x!0 s!1)) (* 9 (* r00 r00 r!2 r!2 r!2 x!0 s!1 s!1)) (* (- 27) (* r00 r00 r!2 x!0 x!0 s!1)) (* (- 2) (* r!2 s!1)) (* (- 3) (* r00 r00 s!1 s!1 s!1)) (* (- 3) (* r00 r00 r!2 r!2 r!2 s!1 s!1 s!1)) (* ?x304 ?x304 ?x558 ?x558 ?x558 ?x847 ?x847) (* s00 s!1 s!1 s!1) (* (- 3) (* ?x304 ?x304 ?x304 ?x304 ?x304 ?x558 ?x558 ?x558)) (* 27 (* r00 r00 r!2 r!2 x!0 s!1 s!1)) ?x328 (* (- 9) (* r00 r00 x!0 x!0 s!1)) ?x2482 (* (- 3) (* s00 x!0 s!1 s!1)) (* s00 ?x558 ?x558 ?x558 ?x847 ?x847 ?x847))))
 (let (($x1633 (= ?x656 0)))
 (let (($x2143 (not $x1633)))
 (let ((?x1325 (* x00 x00)))
 (let ((?x2491 (* 108 ?x1325)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x685 (* 16 ?x1163)))
 (let ((?x986 (* r00 r00 s!1)))
 (let ((?x1293 (* 36 ?x986)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x1985 (* (- 432) ?x861)))
 (let ((?x784 (* s00 x00)))
 (let ((?x1521 (* (- 108) ?x784)))
 (let ((?x626 (* s00 r00 r00)))
 (let ((?x1421 (* (- 36) ?x626)))
 (let ((?x1287 (* (- 9) s!1)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1795 (* 51 ?x570)))
 (let ((?x501 (* r00 x00)))
 (let ((?x2035 (* 108 ?x501)))
 (let ((?x137 (* 9 s00)))
 (let ((?x423 (+ ?x137 (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* (- 54) (* s00 r00)) (* 108 (* s00 x!0)) (* 108 (* x00 s!1)) (* 216 (* s00 r00 x00)) ?x2035 (* (- 4) (* s!1 s!1 s!1)) ?x1795 ?x1287 ?x1421 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x1521 ?x1985 ?x1293 (* 216 (* s00 r00 r00 r00)) (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)) (* 108 (* x!0 x!0)) ?x685 (* 108 (* s00 r00 s!1)) (* (- 108) (* x!0 s!1)) ?x2491 (* (- 216) (* r00 r00 r00 s!1)) (* (- 108) (* r00 x!0)) (* 15 (* s!1 s!1)))))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x1974 (* 36 ?x856)))
 (let ((?x1967 (* (- 6) ?x784)))
 (let ((?x1447 (* 15 ?x570)))
 (let ((?x2083 (* 54 ?x501)))
 (let ((?x1423 (+ ?x137 (* (- 24) (* s00 r00)) (* 6 (* s00 x!0)) (* 6 (* x00 s!1)) ?x2083 ?x1447 (* (- 2) (* r!2 s!1 s!1)) ?x1287 ?x1421 (* 2 (* s00 s00 r00)) ?x1967 ?x1974 (* (- 24) (* s00 r!2)) ?x1293 (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) (* (- 36) (* r00 r!2 x!0)) (* (- 4) (* r00 s!1 s!1)) (* 2 (* s00 r00 s!1)) (* (- 6) (* x!0 s!1)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 r!2 s!1)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 54) (* r!2 x!0)) (* (- 54) (* r00 x!0)) (* 24 (* r!2 s!1)) (* (- 3) (* s!1 s!1)))))
 (let ((?x2130 (* (- 3) s!1)))
 (let ((?x1248 (* 4 ?x570)))
 (let ((?x1843 (* 18 ?x501)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1139 (+ ?x44 (* (- 9) (* s00 r00)) ?x1843 ?x1248 ?x2130 (* (- 6) ?x626) (* (- 9) (* s00 r!2)) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x986) (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)) (* (- 18) (* r!2 x!0)) (* (- 18) (* r00 x!0)) (* 9 (* r!2 s!1)) (* (- 2) (* s!1 s!1)))))
 (let ((?x1939 (* r!2 s!1)))
 (let ((?x2239 (* 2 ?x1939)))
 (let ((?x2123 (* 6 x!0)))
 (let ((?x536 (* 3 r!2)))
 (let ((?x448 (* r00 r00 r00)))
 (let ((?x449 (* 12 ?x448)))
 (let ((?x405 (* s00 r00)))
 (let ((?x483 (* (- 6) ?x405)))
 (let ((?x480 (* (- 6) x00)))
 (let ((?x479 (* (- 3) r00)))
 (let ((?x995 (+ ?x44 ?x479 ?x480 ?x483 ?x449 ?x536 ?x2123 ?x2130 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x2239)))
 (let (($x1283 (and $x923 (= ?x995 0) (= ?x1139 0) (= ?x1423 0) (= ?x423 0) $x2143)))
 (let ((?x846 (+ ?x837 x!0)))
 (let ((?x635 (* r!2 r!2 s!1)))
 (let ((?x629 (* ?x304 ?x304 ?x847 ?x847 ?x847 ?x847)))
 (let ((?x281 (* 3 ?x280)))
 (let ((?x265 (* (- 3) ?x624)))
 (let ((?x310 (* (- 1) s00)))
 (let ((?x859 (+ s!1 ?x310 (* 9 (* r!2 s!1 s!1 s!1 r00 r00)) ?x265 ?x281 (* (- 9) (* s!1 s!1 x!0 r00 r00)) ?x2239 (* 6 (* r!2 r00 r00)) (* (- 9) (* r!2 x!0 x!0 x!0 r00 r00)) (* (- 9) (* r!2 r!2 x!0 x!0 x!0 r00 r00)) (* (- 2) (* r!2 s00)) (* (- 3) (* r!2 r!2 r!2 x!0 x!0 x!0 r00 r00)) (* (- 9) (* r!2 r!2 r!2 s!1 s!1 x!0 r00 r00)) (* 3 (* s!1 s!1 s!1 r00 r00)) (* (- 3) (* ?x304 ?x304 ?x846 ?x846 ?x846 ?x847 ?x847 ?x847)) (* 3 (* r00 r00 ?x304 ?x304 ?x847 ?x847 ?x847)) (* (- 1) (* ?x304 ?x304 ?x304 ?x846 ?x846 ?x846 ?x847)) (* (- 27) (* r!2 s!1 s!1 x!0 r00 r00)) (* 9 (* s!1 x!0 x!0 r00 r00)) (* 9 (* r!2 r!2 s!1 s!1 s!1 r00 r00)) (* 27 (* r!2 s!1 x!0 x!0 r00 r00)) (* 27 (* r!2 r!2 s!1 x!0 x!0 r00 r00)) (* (- 3) (* r00 r00 ?x304 ?x304 ?x846 ?x846 ?x846 ?x847)) (* 9 (* r!2 r!2 r!2 s!1 x!0 x!0 r00 r00)) (* 3 (* r!2 r!2 r!2 s!1 s!1 s!1 r00 r00)) (* (- 3) (* x!0 x!0 x!0 r00 r00)) (* (- 1) (* r!2 r!2 s00)) (* (- 27) (* r!2 r!2 s!1 s!1 x!0 r00 r00)) (* (- 6) (* r!2 r!2 r!2)) (* (- 3) (* r!2 r!2 r!2 r!2)) (* 3 (* ?x304 ?x304 ?x304 ?x304 ?x304 ?x846 ?x846 ?x846)) (* 3 (* r00 r00 ?x846 ?x846 ?x846 ?x847 ?x847 ?x847)) ?x629 (* (- 1) (* ?x304 ?x304 ?x846 ?x846 ?x846 ?x847 ?x847)) ?x635 (* (- 1) (* s!1 s!1 s!1 s00)) (* (- 3) (* r!2 s!1 s!1 s!1 s00)) (* (- 3) (* r!2 r!2 s!1 s!1 s!1 s00)) (* (- 1) (* r!2 r!2 r!2 s!1 s!1 s!1 s00)) (* 3 (* s!1 s!1 x!0 s00)) (* 9 (* r!2 s!1 s!1 x!0 s00)) (* 9 (* r!2 r!2 s!1 s!1 x!0 s00)) (* 3 (* r!2 r!2 r!2 s!1 s!1 x!0 s00)) (* ?x846 ?x846 ?x846 ?x847 ?x847 ?x847 ?x847) (* (- 3) (* s!1 x!0 x!0 s00)) (* (- 9) (* r!2 s!1 x!0 x!0 s00)) (* (- 9) (* r!2 r!2 s!1 x!0 x!0 s00)) (* (- 3) (* r!2 r!2 r!2 s!1 x!0 x!0 s00)) (* x!0 x!0 x!0 s00) (* 3 (* r!2 x!0 x!0 x!0 s00)) (* 3 (* ?x304 ?x304 ?x304 ?x304 ?x846 ?x846 ?x846 ?x847)) (* 3 (* r!2 r!2 x!0 x!0 x!0 s00)) (* (- 1) (* s00 ?x846 ?x846 ?x846 ?x847 ?x847 ?x847)) (* r!2 r!2 r!2 x!0 x!0 x!0 s00) (* (- 3) (* ?x304 ?x304 ?x304 ?x304 ?x847 ?x847 ?x847)) (* s00 ?x304 ?x304 ?x846 ?x846 ?x846 ?x847) (* (- 1) ?x1784) (* 3 (* r!2 r!2 r00 r00)))))
 (let ((?x1355 (* (- 108) ?x1325)))
 (let ((?x1354 (* (- 16) ?x1163)))
 (let ((?x1035 (* s00 r00 r00 r00)))
 (let ((?x1350 (* (- 216) ?x1035)))
 (let ((?x862 (* 432 ?x861)))
 (let ((?x1108 (* 108 ?x784)))
 (let ((?x710 (* s00 s00 r00 r00)))
 (let ((?x711 (* 36 ?x710)))
 (let ((?x647 (* s00 s00 r00)))
 (let ((?x991 (* 108 ?x647)))
 (let ((?x979 (* 36 ?x626)))
 (let ((?x1344 (* (- 51) ?x570)))
 (let ((?x896 (* s!1 r00 r00)))
 (let ((?x1600 (* (- 36) ?x896)))
 (let ((?x1341 (* (- 108) ?x501)))
 (let ((?x492 (* s00 r00 x00)))
 (let ((?x1340 (* (- 216) ?x492)))
 (let ((?x499 (* 54 ?x405)))
 (let ((?x966 (* (- 9) s00)))
 (let ((?x1075 (* 9 s!1)))
 (let ((?x1114 (+ ?x1075 ?x966 ?x499 ?x1340 ?x1341 (* (- 15) (* s!1 s!1)) ?x1600 ?x1344 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x979 ?x991 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x711 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1108 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x862 (* 12 (* s!1 s!1 s00)) ?x1350 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1354 (* 216 (* x!0 x00)) ?x1355)))
 (let ((?x869 (* (- 36) ?x856)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x675 (* (- 2) ?x647)))
 (let ((?x895 (* (- 15) ?x570)))
 (let ((?x530 (* (- 54) ?x501)))
 (let ((?x543 (* 24 ?x405)))
 (let ((?x535 (+ ?x1075 ?x966 (* (- 24) ?x1939) (* 24 (* r!2 s00)) ?x543 ?x530 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x1600 ?x895 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x979 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x675 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x785 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x869 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x627 (* 6 ?x626)))
 (let ((?x583 (* (- 4) ?x570)))
 (let ((?x515 (* (- 18) ?x501)))
 (let ((?x520 (* 9 ?x405)))
 (let ((?x357 (* (- 3) s00)))
 (let ((?x1072 (+ (* 3 s!1) ?x357 (* (- 9) ?x1939) (* 9 (* r!2 s00)) ?x520 ?x515 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x896) ?x583 (* 18 (* x!0 r00)) ?x627 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x2107 (+ ?x536 ?x2130 ?x2123 ?x44 ?x479 ?x480 ?x2239 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x483 ?x449)))
 (let (($x866 (and (= (+ s!1 ?x310 ?x265 ?x281) 0) (= ?x2107 0) (= ?x1072 0) (= ?x535 0) (= ?x1114 0) (not (= ?x859 0)))))
 (let (($x2079 (exists ((r Int) (s Int) (x Int) )(! (let ((?x2439 (* 3 (* r r r00 r00))))
 (let ((?x214 (* 6 r)))
 (let ((?x1391 (+ 3 ?x214 s)))
 (let ((?x1362 (+ 1 r)))
 (let ((?x259 (* (- 1) s)))
 (let ((?x1397 (+ ?x259 x)))
 (let ((?x2203 (* r r r x x x s00)))
 (let ((?x2220 (* 3 (* r r x x x s00))))
 (let ((?x2219 (* 3 (* r x x x s00))))
 (let ((?x2177 (* x x x s00)))
 (let ((?x2218 (* (- 3) (* r r r s x x s00))))
 (let ((?x2217 (* (- 9) (* r r s x x s00))))
 (let ((?x2216 (* (- 9) (* r s x x s00))))
 (let ((?x2215 (* (- 3) (* s x x s00))))
 (let ((?x2214 (* 3 (* r r r s s x s00))))
 (let ((?x2213 (* 9 (* r r s s x s00))))
 (let ((?x2212 (* 9 (* r s s x s00))))
 (let ((?x2211 (* 3 (* s s x s00))))
 (let ((?x1887 (* (- 1) (* r r r s s s s00))))
 (let ((?x2210 (* (- 3) (* r r s s s s00))))
 (let ((?x2209 (* (- 3) (* r s s s s00))))
 (let ((?x1841 (* (- 1) (* s s s s00))))
 (let ((?x1823 (* r r s)))
 (let ((?x1634 (* ?x1362 ?x1362 ?x1391 ?x1391 ?x1391 ?x1391)))
 (let ((?x2508 (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1362 ?x1397 ?x1397 ?x1397))))
 (let ((?x2507 (* (- 3) (* r r r r))))
 (let ((?x2504 (* (- 1) (* r r s00))))
 (let ((?x378 (* r s00)))
 (let ((?x2500 (* (- 2) ?x378)))
 (let ((?x330 (* r r00 r00)))
 (let ((?x2499 (* 6 ?x330)))
 (let ((?x324 (* r s)))
 (let ((?x481 (* 2 ?x324)))
 (let ((?x280 (* r00 r00)))
 (let ((?x281 (* 3 ?x280)))
 (let ((?x268 (* r r)))
 (let ((?x311 (* (- 3) ?x268)))
 (let ((?x310 (* (- 1) s00)))
 (let ((?x1619 (+ s ?x310 (* 9 (* r s s s r00 r00)) ?x311 ?x281 (* (- 9) (* s s x r00 r00)) ?x481 ?x2499 (* (- 9) (* r x x x r00 r00)) (* (- 9) (* r r x x x r00 r00)) ?x2500 (* (- 3) (* r r r x x x r00 r00)) (* (- 9) (* r r r s s x r00 r00)) (* 3 (* s s s r00 r00)) (* (- 3) (* ?x1362 ?x1362 ?x1397 ?x1397 ?x1397 ?x1391 ?x1391 ?x1391)) (* 3 (* r00 r00 ?x1362 ?x1362 ?x1391 ?x1391 ?x1391)) (* (- 1) (* ?x1362 ?x1362 ?x1362 ?x1397 ?x1397 ?x1397 ?x1391)) (* (- 27) (* r s s x r00 r00)) (* 9 (* s x x r00 r00)) (* 9 (* r r s s s r00 r00)) (* 27 (* r s x x r00 r00)) (* 27 (* r r s x x r00 r00)) (* (- 3) (* r00 r00 ?x1362 ?x1362 ?x1397 ?x1397 ?x1397 ?x1391)) (* 9 (* r r r s x x r00 r00)) (* 3 (* r r r s s s r00 r00)) (* (- 3) (* x x x r00 r00)) ?x2504 (* (- 27) (* r r s s x r00 r00)) (* (- 6) (* r r r)) ?x2507 ?x2508 (* 3 (* r00 r00 ?x1397 ?x1397 ?x1397 ?x1391 ?x1391 ?x1391)) ?x1634 (* (- 1) (* ?x1362 ?x1362 ?x1397 ?x1397 ?x1397 ?x1391 ?x1391)) ?x1823 ?x1841 ?x2209 ?x2210 ?x1887 ?x2211 ?x2212 ?x2213 ?x2214 (* ?x1397 ?x1397 ?x1397 ?x1391 ?x1391 ?x1391 ?x1391) ?x2215 ?x2216 ?x2217 ?x2218 ?x2177 ?x2219 (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1397 ?x1397 ?x1397 ?x1391)) ?x2220 (* (- 1) (* s00 ?x1397 ?x1397 ?x1397 ?x1391 ?x1391 ?x1391)) ?x2203 (* (- 3) (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1391 ?x1391 ?x1391)) (* s00 ?x1362 ?x1362 ?x1397 ?x1397 ?x1397 ?x1391) (* (- 1) (* s00 ?x1362 ?x1362 ?x1391 ?x1391 ?x1391)) ?x2439)))
 (let ((?x1325 (* x00 x00)))
 (let ((?x1355 (* (- 108) ?x1325)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x1354 (* (- 16) ?x1163)))
 (let ((?x1035 (* s00 r00 r00 r00)))
 (let ((?x1350 (* (- 216) ?x1035)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x862 (* 432 ?x861)))
 (let ((?x784 (* s00 x00)))
 (let ((?x1108 (* 108 ?x784)))
 (let ((?x710 (* s00 s00 r00 r00)))
 (let ((?x711 (* 36 ?x710)))
 (let ((?x647 (* s00 s00 r00)))
 (let ((?x991 (* 108 ?x647)))
 (let ((?x626 (* s00 r00 r00)))
 (let ((?x979 (* 36 ?x626)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1344 (* (- 51) ?x570)))
 (let ((?x544 (* s r00 r00)))
 (let ((?x843 (* (- 36) ?x544)))
 (let ((?x501 (* r00 x00)))
 (let ((?x1341 (* (- 108) ?x501)))
 (let ((?x492 (* s00 r00 x00)))
 (let ((?x1340 (* (- 216) ?x492)))
 (let ((?x405 (* s00 r00)))
 (let ((?x499 (* 54 ?x405)))
 (let ((?x966 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1356 (+ ?x143 ?x966 ?x499 ?x1340 ?x1341 (* (- 15) (* s s)) ?x843 ?x1344 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x979 ?x991 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x711 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1108 (* 108 (* s x)) (* (- 108) (* x x)) ?x862 (* 12 (* s s s00)) ?x1350 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1354 (* 216 (* x x00)) ?x1355)))
 (let (($x1357 (= ?x1356 0)))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x869 (* (- 36) ?x856)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x675 (* (- 2) ?x647)))
 (let ((?x895 (* (- 15) ?x570)))
 (let ((?x524 (* s s)))
 (let ((?x548 (* 3 ?x524)))
 (let ((?x530 (* (- 54) ?x501)))
 (let ((?x543 (* 24 ?x405)))
 (let ((?x1058 (+ ?x143 ?x966 (* (- 24) ?x324) (* 24 ?x378) ?x543 ?x530 ?x548 (* 54 (* r x)) (* 36 (* r x r00)) ?x843 ?x895 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x979 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x675 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x785 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x869 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1063 (= ?x1058 0)))
 (let ((?x627 (* 6 ?x626)))
 (let ((?x583 (* (- 4) ?x570)))
 (let ((?x525 (* 2 ?x524)))
 (let ((?x515 (* (- 18) ?x501)))
 (let ((?x520 (* 9 ?x405)))
 (let ((?x357 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x724 (+ ?x47 ?x357 (* (- 9) ?x324) (* 9 ?x378) ?x520 ?x515 ?x525 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x544) ?x583 (* 18 (* x r00)) ?x627 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x731 (= ?x724 0)))
 (let ((?x448 (* r00 r00 r00)))
 (let ((?x449 (* 12 ?x448)))
 (let ((?x483 (* (- 6) ?x405)))
 (let ((?x480 (* (- 6) x00)))
 (let ((?x479 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x478 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x484 (+ ?x43 ?x478 ?x56 ?x44 ?x479 ?x480 ?x481 (* (- 12) ?x330) (* 4 ?x378) ?x483 ?x449)))
 (let (($x485 (= ?x484 0)))
 (let (($x313 (= (+ s ?x310 ?x311 ?x281) 0)))
 (and $x313 $x485 $x731 $x1063 $x1357 (not (= ?x1619 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x2090 (exists ((r Int) (s Int) (x Int) )(! (let ((?x259 (* (- 1) s)))
 (let ((?x1753 (+ x ?x259)))
 (let ((?x1362 (+ 1 r)))
 (let ((?x214 (* 6 r)))
 (let ((?x830 (+ 3 s ?x214)))
 (let ((?x1022 (+ (* s00 ?x1362 ?x1362) (* s00 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830) (* (- 3) (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* (- 3) (* r00 r00 ?x1362 ?x1362 ?x830 ?x830 ?x830)) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830 ?x830)) (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362)) (* 3 (* ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830)) (* (- 3) (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830 ?x830) (* (- 1) (* ?x1362 ?x1362 ?x830 ?x830 ?x830 ?x830)) (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362 ?x830 ?x830 ?x830)) (* (- 3) (* r00 r00 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830)) (* (- 1) (* s00 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* 3 (* r00 r00 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* s00 ?x1362 ?x1362 ?x830 ?x830 ?x830) (* ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830) (* (- 1) (* ?x1362 ?x1362 ?x830)) (* (- 1) (* s00 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* 3 (* r00 r00 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* (- 3) (* r00 r00 ?x1362 ?x1362)))))
 (let (($x1008 (not (= ?x1022 0))))
 (let ((?x1325 (* x00 x00)))
 (let ((?x2491 (* 108 ?x1325)))
 (let ((?x2333 (* (- 9) s)))
 (let ((?x1005 (* r00 r00 s00)))
 (let ((?x2256 (* (- 36) ?x1005)))
 (let ((?x137 (* 9 s00)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1795 (* 51 ?x570)))
 (let ((?x1313 (* r00 r00 s)))
 (let ((?x1942 (* 36 ?x1313)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x685 (* 16 ?x1163)))
 (let ((?x784 (* s00 x00)))
 (let ((?x1521 (* (- 108) ?x784)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x1985 (* (- 432) ?x861)))
 (let ((?x501 (* r00 x00)))
 (let ((?x2035 (* 108 ?x501)))
 (let ((?x864 (+ (* 216 (* r00 s00 x00)) ?x2035 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1985 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1521 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x685 (* (- 108) (* x s)) ?x1942 ?x1795 (* (- 108) (* r00 x)) ?x137 ?x2256 ?x2333 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2491)))
 (let (($x876 (= ?x864 0)))
 (let ((?x1447 (* 15 ?x570)))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x1974 (* 36 ?x856)))
 (let ((?x1967 (* (- 6) ?x784)))
 (let ((?x2083 (* 54 ?x501)))
 (let ((?x2054 (+ (* 24 (* s r)) ?x2083 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1967 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1942 ?x1974 ?x1447 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2256 (* 54 (* x00 r)) ?x2333 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x478 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1248 (* 4 ?x570)))
 (let ((?x1843 (* 18 ?x501)))
 (let ((?x1024 (+ (* 9 (* s r)) ?x1843 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1313) ?x1248 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1005) (* 18 (* x00 r)) ?x478 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x448 (* r00 r00 r00)))
 (let ((?x449 (* 12 ?x448)))
 (let ((?x480 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x479 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1256 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x478 ?x479 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x480 ?x449)))
 (let (($x974 (= (+ s00 ?x259 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x974 (= ?x1256 0) (= ?x1024 0) (= ?x2054 0) $x876 $x1008))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2122 (lambda ((r Int) (s Int) (x Int) )(let ((?x2439 (* 3 (* r r r00 r00))))
 (let ((?x214 (* 6 r)))
 (let ((?x1391 (+ 3 ?x214 s)))
 (let ((?x1362 (+ 1 r)))
 (let ((?x259 (* (- 1) s)))
 (let ((?x1397 (+ ?x259 x)))
 (let ((?x2203 (* r r r x x x s00)))
 (let ((?x2220 (* 3 (* r r x x x s00))))
 (let ((?x2219 (* 3 (* r x x x s00))))
 (let ((?x2177 (* x x x s00)))
 (let ((?x2218 (* (- 3) (* r r r s x x s00))))
 (let ((?x2217 (* (- 9) (* r r s x x s00))))
 (let ((?x2216 (* (- 9) (* r s x x s00))))
 (let ((?x2215 (* (- 3) (* s x x s00))))
 (let ((?x2214 (* 3 (* r r r s s x s00))))
 (let ((?x2213 (* 9 (* r r s s x s00))))
 (let ((?x2212 (* 9 (* r s s x s00))))
 (let ((?x2211 (* 3 (* s s x s00))))
 (let ((?x1887 (* (- 1) (* r r r s s s s00))))
 (let ((?x2210 (* (- 3) (* r r s s s s00))))
 (let ((?x2209 (* (- 3) (* r s s s s00))))
 (let ((?x1841 (* (- 1) (* s s s s00))))
 (let ((?x1823 (* r r s)))
 (let ((?x1634 (* ?x1362 ?x1362 ?x1391 ?x1391 ?x1391 ?x1391)))
 (let ((?x2508 (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1362 ?x1397 ?x1397 ?x1397))))
 (let ((?x2507 (* (- 3) (* r r r r))))
 (let ((?x2504 (* (- 1) (* r r s00))))
 (let ((?x378 (* r s00)))
 (let ((?x2500 (* (- 2) ?x378)))
 (let ((?x330 (* r r00 r00)))
 (let ((?x2499 (* 6 ?x330)))
 (let ((?x324 (* r s)))
 (let ((?x481 (* 2 ?x324)))
 (let ((?x280 (* r00 r00)))
 (let ((?x281 (* 3 ?x280)))
 (let ((?x268 (* r r)))
 (let ((?x311 (* (- 3) ?x268)))
 (let ((?x310 (* (- 1) s00)))
 (let ((?x1619 (+ s ?x310 (* 9 (* r s s s r00 r00)) ?x311 ?x281 (* (- 9) (* s s x r00 r00)) ?x481 ?x2499 (* (- 9) (* r x x x r00 r00)) (* (- 9) (* r r x x x r00 r00)) ?x2500 (* (- 3) (* r r r x x x r00 r00)) (* (- 9) (* r r r s s x r00 r00)) (* 3 (* s s s r00 r00)) (* (- 3) (* ?x1362 ?x1362 ?x1397 ?x1397 ?x1397 ?x1391 ?x1391 ?x1391)) (* 3 (* r00 r00 ?x1362 ?x1362 ?x1391 ?x1391 ?x1391)) (* (- 1) (* ?x1362 ?x1362 ?x1362 ?x1397 ?x1397 ?x1397 ?x1391)) (* (- 27) (* r s s x r00 r00)) (* 9 (* s x x r00 r00)) (* 9 (* r r s s s r00 r00)) (* 27 (* r s x x r00 r00)) (* 27 (* r r s x x r00 r00)) (* (- 3) (* r00 r00 ?x1362 ?x1362 ?x1397 ?x1397 ?x1397 ?x1391)) (* 9 (* r r r s x x r00 r00)) (* 3 (* r r r s s s r00 r00)) (* (- 3) (* x x x r00 r00)) ?x2504 (* (- 27) (* r r s s x r00 r00)) (* (- 6) (* r r r)) ?x2507 ?x2508 (* 3 (* r00 r00 ?x1397 ?x1397 ?x1397 ?x1391 ?x1391 ?x1391)) ?x1634 (* (- 1) (* ?x1362 ?x1362 ?x1397 ?x1397 ?x1397 ?x1391 ?x1391)) ?x1823 ?x1841 ?x2209 ?x2210 ?x1887 ?x2211 ?x2212 ?x2213 ?x2214 (* ?x1397 ?x1397 ?x1397 ?x1391 ?x1391 ?x1391 ?x1391) ?x2215 ?x2216 ?x2217 ?x2218 ?x2177 ?x2219 (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1397 ?x1397 ?x1397 ?x1391)) ?x2220 (* (- 1) (* s00 ?x1397 ?x1397 ?x1397 ?x1391 ?x1391 ?x1391)) ?x2203 (* (- 3) (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1391 ?x1391 ?x1391)) (* s00 ?x1362 ?x1362 ?x1397 ?x1397 ?x1397 ?x1391) (* (- 1) (* s00 ?x1362 ?x1362 ?x1391 ?x1391 ?x1391)) ?x2439)))
 (let ((?x1325 (* x00 x00)))
 (let ((?x1355 (* (- 108) ?x1325)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x1354 (* (- 16) ?x1163)))
 (let ((?x1035 (* s00 r00 r00 r00)))
 (let ((?x1350 (* (- 216) ?x1035)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x862 (* 432 ?x861)))
 (let ((?x784 (* s00 x00)))
 (let ((?x1108 (* 108 ?x784)))
 (let ((?x710 (* s00 s00 r00 r00)))
 (let ((?x711 (* 36 ?x710)))
 (let ((?x647 (* s00 s00 r00)))
 (let ((?x991 (* 108 ?x647)))
 (let ((?x626 (* s00 r00 r00)))
 (let ((?x979 (* 36 ?x626)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1344 (* (- 51) ?x570)))
 (let ((?x544 (* s r00 r00)))
 (let ((?x843 (* (- 36) ?x544)))
 (let ((?x501 (* r00 x00)))
 (let ((?x1341 (* (- 108) ?x501)))
 (let ((?x492 (* s00 r00 x00)))
 (let ((?x1340 (* (- 216) ?x492)))
 (let ((?x405 (* s00 r00)))
 (let ((?x499 (* 54 ?x405)))
 (let ((?x966 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1356 (+ ?x143 ?x966 ?x499 ?x1340 ?x1341 (* (- 15) (* s s)) ?x843 ?x1344 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x979 ?x991 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x711 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1108 (* 108 (* s x)) (* (- 108) (* x x)) ?x862 (* 12 (* s s s00)) ?x1350 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1354 (* 216 (* x x00)) ?x1355)))
 (let (($x1357 (= ?x1356 0)))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x869 (* (- 36) ?x856)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x675 (* (- 2) ?x647)))
 (let ((?x895 (* (- 15) ?x570)))
 (let ((?x524 (* s s)))
 (let ((?x548 (* 3 ?x524)))
 (let ((?x530 (* (- 54) ?x501)))
 (let ((?x543 (* 24 ?x405)))
 (let ((?x1058 (+ ?x143 ?x966 (* (- 24) ?x324) (* 24 ?x378) ?x543 ?x530 ?x548 (* 54 (* r x)) (* 36 (* r x r00)) ?x843 ?x895 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x979 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x675 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x785 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x869 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1063 (= ?x1058 0)))
 (let ((?x627 (* 6 ?x626)))
 (let ((?x583 (* (- 4) ?x570)))
 (let ((?x525 (* 2 ?x524)))
 (let ((?x515 (* (- 18) ?x501)))
 (let ((?x520 (* 9 ?x405)))
 (let ((?x357 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x724 (+ ?x47 ?x357 (* (- 9) ?x324) (* 9 ?x378) ?x520 ?x515 ?x525 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x544) ?x583 (* 18 (* x r00)) ?x627 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x731 (= ?x724 0)))
 (let ((?x448 (* r00 r00 r00)))
 (let ((?x449 (* 12 ?x448)))
 (let ((?x483 (* (- 6) ?x405)))
 (let ((?x480 (* (- 6) x00)))
 (let ((?x479 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x478 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x484 (+ ?x43 ?x478 ?x56 ?x44 ?x479 ?x480 ?x481 (* (- 12) ?x330) (* 4 ?x378) ?x483 ?x449)))
 (let (($x485 (= ?x484 0)))
 (let (($x313 (= (+ s ?x310 ?x311 ?x281) 0)))
 (let (($x1991 (and $x313 $x485 $x731 $x1063 $x1357 (not (= ?x1619 0)))))
 (let ((?x1753 (+ x ?x259)))
 (let ((?x830 (+ 3 s ?x214)))
 (let ((?x1022 (+ (* s00 ?x1362 ?x1362) (* s00 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830) (* (- 3) (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* (- 3) (* r00 r00 ?x1362 ?x1362 ?x830 ?x830 ?x830)) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830 ?x830)) (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362)) (* 3 (* ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830)) (* (- 3) (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830 ?x830) (* (- 1) (* ?x1362 ?x1362 ?x830 ?x830 ?x830 ?x830)) (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362 ?x830 ?x830 ?x830)) (* (- 3) (* r00 r00 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830)) (* (- 1) (* s00 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* 3 (* r00 r00 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* s00 ?x1362 ?x1362 ?x830 ?x830 ?x830) (* ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830) (* (- 1) (* ?x1362 ?x1362 ?x830)) (* (- 1) (* s00 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* 3 (* r00 r00 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* (- 3) (* r00 r00 ?x1362 ?x1362)))))
 (let (($x1008 (not (= ?x1022 0))))
 (let ((?x2491 (* 108 ?x1325)))
 (let ((?x2333 (* (- 9) s)))
 (let ((?x1005 (* r00 r00 s00)))
 (let ((?x2256 (* (- 36) ?x1005)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1795 (* 51 ?x570)))
 (let ((?x1313 (* r00 r00 s)))
 (let ((?x1942 (* 36 ?x1313)))
 (let ((?x685 (* 16 ?x1163)))
 (let ((?x1521 (* (- 108) ?x784)))
 (let ((?x1985 (* (- 432) ?x861)))
 (let ((?x2035 (* 108 ?x501)))
 (let ((?x864 (+ (* 216 (* r00 s00 x00)) ?x2035 (* (- 54) (* r00 s00)) (* 15 ?x524) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1985 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1521 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x685 (* (- 108) (* x s)) ?x1942 ?x1795 (* (- 108) (* r00 x)) ?x137 ?x2256 ?x2333 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2491)))
 (let (($x876 (= ?x864 0)))
 (let ((?x1447 (* 15 ?x570)))
 (let ((?x1974 (* 36 ?x856)))
 (let ((?x1967 (* (- 6) ?x784)))
 (let ((?x2083 (* 54 ?x501)))
 (let ((?x2054 (+ (* 24 (* s r)) ?x2083 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x524) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1967 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1942 ?x1974 ?x1447 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2256 (* 54 (* x00 r)) ?x2333 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x1248 (* 4 ?x570)))
 (let ((?x1843 (* 18 ?x501)))
 (let ((?x1024 (+ (* 9 (* s r)) ?x1843 (* (- 9) (* r00 s00)) (* (- 2) ?x524) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1313) ?x1248 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1005) (* 18 (* x00 r)) ?x478 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x1256 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x478 ?x479 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x480 ?x449)))
 (let (($x974 (= (+ s00 ?x259 (* 3 ?x268) (* (- 3) ?x280)) 0)))
 (let (($x2095 (and $x974 (= ?x1256 0) (= ?x1024 0) (= ?x2054 0) $x876 $x1008)))
 (rewrite (= $x2095 $x1991))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x412 (exists ((r Int) (s Int) (x Int) )(! (let ((?x259 (* (- 1) s)))
 (let ((?x1753 (+ x ?x259)))
 (let ((?x1362 (+ 1 r)))
 (let ((?x214 (* 6 r)))
 (let ((?x830 (+ 3 s ?x214)))
 (let ((?x1022 (+ (* s00 ?x1362 ?x1362) (* s00 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830) (* (- 3) (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* (- 3) (* r00 r00 ?x1362 ?x1362 ?x830 ?x830 ?x830)) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830 ?x830)) (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362)) (* 3 (* ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830)) (* (- 3) (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830 ?x830) (* (- 1) (* ?x1362 ?x1362 ?x830 ?x830 ?x830 ?x830)) (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362 ?x830 ?x830 ?x830)) (* (- 3) (* r00 r00 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830)) (* (- 1) (* s00 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* 3 (* r00 r00 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* s00 ?x1362 ?x1362 ?x830 ?x830 ?x830) (* ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830) (* (- 1) (* ?x1362 ?x1362 ?x830)) (* (- 1) (* s00 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* 3 (* r00 r00 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* (- 3) (* r00 r00 ?x1362 ?x1362)))))
 (let (($x1008 (not (= ?x1022 0))))
 (let ((?x1325 (* x00 x00)))
 (let ((?x2491 (* 108 ?x1325)))
 (let ((?x2333 (* (- 9) s)))
 (let ((?x1005 (* r00 r00 s00)))
 (let ((?x2256 (* (- 36) ?x1005)))
 (let ((?x137 (* 9 s00)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1795 (* 51 ?x570)))
 (let ((?x1313 (* r00 r00 s)))
 (let ((?x1942 (* 36 ?x1313)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x685 (* 16 ?x1163)))
 (let ((?x784 (* s00 x00)))
 (let ((?x1521 (* (- 108) ?x784)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x1985 (* (- 432) ?x861)))
 (let ((?x501 (* r00 x00)))
 (let ((?x2035 (* 108 ?x501)))
 (let ((?x864 (+ (* 216 (* r00 s00 x00)) ?x2035 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1985 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1521 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x685 (* (- 108) (* x s)) ?x1942 ?x1795 (* (- 108) (* r00 x)) ?x137 ?x2256 ?x2333 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2491)))
 (let (($x876 (= ?x864 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x966 (* (- 9) s00)))
 (let ((?x895 (* (- 15) ?x570)))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x869 (* (- 36) ?x856)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x524 (* s s)))
 (let ((?x548 (* 3 ?x524)))
 (let ((?x530 (* (- 54) ?x501)))
 (let ((?x2153 (+ (* (- 24) (* s r)) ?x530 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x548 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x785 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1313) ?x869 ?x895 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x966 (* 36 ?x1005) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x357 (* (- 3) s00)))
 (let ((?x583 (* (- 4) ?x570)))
 (let ((?x525 (* 2 ?x524)))
 (let ((?x515 (* (- 18) ?x501)))
 (let ((?x1845 (+ (* (- 9) (* s r)) ?x515 (* 9 (* r00 s00)) ?x525 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1313) ?x583 (* 18 (* r00 x)) ?x357 (* 6 ?x1005) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x469 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x357 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x974 (= (+ s00 ?x259 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x974 (= ?x469 0) (= ?x1845 0) (= ?x2153 0) $x876 $x1008)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2094 (lambda ((r Int) (s Int) (x Int) )(let ((?x259 (* (- 1) s)))
 (let ((?x1753 (+ x ?x259)))
 (let ((?x1362 (+ 1 r)))
 (let ((?x214 (* 6 r)))
 (let ((?x830 (+ 3 s ?x214)))
 (let ((?x1022 (+ (* s00 ?x1362 ?x1362) (* s00 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830) (* (- 3) (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* (- 3) (* r00 r00 ?x1362 ?x1362 ?x830 ?x830 ?x830)) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830 ?x830)) (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362)) (* 3 (* ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830)) (* (- 3) (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830 ?x830) (* (- 1) (* ?x1362 ?x1362 ?x830 ?x830 ?x830 ?x830)) (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362 ?x830 ?x830 ?x830)) (* (- 3) (* r00 r00 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830)) (* (- 1) (* s00 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* 3 (* r00 r00 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* s00 ?x1362 ?x1362 ?x830 ?x830 ?x830) (* ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830) (* (- 1) (* ?x1362 ?x1362 ?x830)) (* (- 1) (* s00 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* 3 (* r00 r00 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* (- 3) (* r00 r00 ?x1362 ?x1362)))))
 (let (($x1008 (not (= ?x1022 0))))
 (let ((?x1325 (* x00 x00)))
 (let ((?x2491 (* 108 ?x1325)))
 (let ((?x2333 (* (- 9) s)))
 (let ((?x1005 (* r00 r00 s00)))
 (let ((?x2256 (* (- 36) ?x1005)))
 (let ((?x137 (* 9 s00)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1795 (* 51 ?x570)))
 (let ((?x1313 (* r00 r00 s)))
 (let ((?x1942 (* 36 ?x1313)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x685 (* 16 ?x1163)))
 (let ((?x784 (* s00 x00)))
 (let ((?x1521 (* (- 108) ?x784)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x1985 (* (- 432) ?x861)))
 (let ((?x501 (* r00 x00)))
 (let ((?x2035 (* 108 ?x501)))
 (let ((?x864 (+ (* 216 (* r00 s00 x00)) ?x2035 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1985 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1521 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x685 (* (- 108) (* x s)) ?x1942 ?x1795 (* (- 108) (* r00 x)) ?x137 ?x2256 ?x2333 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2491)))
 (let (($x876 (= ?x864 0)))
 (let ((?x1447 (* 15 ?x570)))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x1974 (* 36 ?x856)))
 (let ((?x1967 (* (- 6) ?x784)))
 (let ((?x2083 (* 54 ?x501)))
 (let ((?x2054 (+ (* 24 (* s r)) ?x2083 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1967 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1942 ?x1974 ?x1447 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2256 (* 54 (* x00 r)) ?x2333 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x478 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1248 (* 4 ?x570)))
 (let ((?x1843 (* 18 ?x501)))
 (let ((?x1024 (+ (* 9 (* s r)) ?x1843 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1313) ?x1248 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1005) (* 18 (* x00 r)) ?x478 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x448 (* r00 r00 r00)))
 (let ((?x449 (* 12 ?x448)))
 (let ((?x480 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x479 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1256 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x478 ?x479 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x480 ?x449)))
 (let (($x974 (= (+ s00 ?x259 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2095 (and $x974 (= ?x1256 0) (= ?x1024 0) (= ?x2054 0) $x876 $x1008)))
 (let ((?x143 (* 9 s)))
 (let ((?x966 (* (- 9) s00)))
 (let ((?x895 (* (- 15) ?x570)))
 (let ((?x869 (* (- 36) ?x856)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x524 (* s s)))
 (let ((?x548 (* 3 ?x524)))
 (let ((?x530 (* (- 54) ?x501)))
 (let ((?x2153 (+ (* (- 24) (* s r)) ?x530 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x548 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x785 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1313) ?x869 ?x895 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x966 (* 36 ?x1005) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x357 (* (- 3) s00)))
 (let ((?x583 (* (- 4) ?x570)))
 (let ((?x525 (* 2 ?x524)))
 (let ((?x515 (* (- 18) ?x501)))
 (let ((?x1845 (+ (* (- 9) (* s r)) ?x515 (* 9 (* r00 s00)) ?x525 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1313) ?x583 (* 18 (* r00 x)) ?x357 (* 6 ?x1005) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x469 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x357 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x448))))
 (let (($x359 (and $x974 (= ?x469 0) (= ?x1845 0) (= ?x2153 0) $x876 $x1008)))
 (rewrite (= $x359 $x2095)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x256 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (- x s)))
 (let ((?x212 (+ r 1)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x222 (- (+ (* ?x212 ?x212 s00) (* ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x224 (- (- ?x222 (* 3 ?x212 ?x212 r00 r00 ?x215 ?x215 ?x215)) (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x227 (+ ?x224 (* 3 ?x212 ?x212 ?x212 ?x212) (* 3 ?x212 ?x212 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x231 (+ (- ?x227 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216)) (* ?x212 ?x212 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x235 (+ (- ?x231 (* ?x212 ?x212 ?x215 ?x215 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x215 ?x215 ?x215))))
 (let ((?x239 (- (- ?x235 (* 3 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* ?x212 ?x212 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x243 (+ ?x239 (* 3 ?x212 ?x212 r00 r00 ?x215 ?x216 ?x216 ?x216) (* ?x212 ?x212 ?x215 ?x215 ?x215 s00) (* ?x212 ?x212 ?x212 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x247 (- (- ?x243 (* ?x212 ?x212 ?x215)) (* ?x212 ?x212 ?x212 s00 ?x216 ?x216 ?x216))))
 (let ((?x251 (- (+ ?x247 (* 3 ?x212 ?x212 ?x212 r00 r00 ?x216 ?x216 ?x216)) (* 3 ?x212 ?x212 r00 r00))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x251 0))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1707 (lambda ((r Int) (s Int) (x Int) )(let ((?x259 (* (- 1) s)))
 (let ((?x1753 (+ x ?x259)))
 (let ((?x1362 (+ 1 r)))
 (let ((?x214 (* 6 r)))
 (let ((?x830 (+ 3 s ?x214)))
 (let ((?x1022 (+ (* s00 ?x1362 ?x1362) (* s00 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830) (* (- 3) (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* (- 3) (* r00 r00 ?x1362 ?x1362 ?x830 ?x830 ?x830)) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830 ?x830)) (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362)) (* 3 (* ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830)) (* (- 3) (* ?x1362 ?x1362 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830 ?x830) (* (- 1) (* ?x1362 ?x1362 ?x830 ?x830 ?x830 ?x830)) (* 3 (* ?x1362 ?x1362 ?x1362 ?x1362 ?x830 ?x830 ?x830)) (* (- 3) (* r00 r00 ?x1753 ?x1753 ?x1753 ?x830 ?x830 ?x830)) (* (- 1) (* s00 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* 3 (* r00 r00 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830)) (* s00 ?x1362 ?x1362 ?x830 ?x830 ?x830) (* ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753 ?x830) (* (- 1) (* ?x1362 ?x1362 ?x830)) (* (- 1) (* s00 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* 3 (* r00 r00 ?x1362 ?x1362 ?x1362 ?x1753 ?x1753 ?x1753)) (* (- 3) (* r00 r00 ?x1362 ?x1362)))))
 (let (($x1008 (not (= ?x1022 0))))
 (let ((?x1325 (* x00 x00)))
 (let ((?x2491 (* 108 ?x1325)))
 (let ((?x2333 (* (- 9) s)))
 (let ((?x1005 (* r00 r00 s00)))
 (let ((?x2256 (* (- 36) ?x1005)))
 (let ((?x137 (* 9 s00)))
 (let ((?x570 (* s00 s00)))
 (let ((?x1795 (* 51 ?x570)))
 (let ((?x1313 (* r00 r00 s)))
 (let ((?x1942 (* 36 ?x1313)))
 (let ((?x1163 (* s00 s00 s00)))
 (let ((?x685 (* 16 ?x1163)))
 (let ((?x784 (* s00 x00)))
 (let ((?x1521 (* (- 108) ?x784)))
 (let ((?x861 (* r00 r00 r00 x00)))
 (let ((?x1985 (* (- 432) ?x861)))
 (let ((?x501 (* r00 x00)))
 (let ((?x2035 (* 108 ?x501)))
 (let ((?x864 (+ (* 216 (* r00 s00 x00)) ?x2035 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1985 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1521 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x685 (* (- 108) (* x s)) ?x1942 ?x1795 (* (- 108) (* r00 x)) ?x137 ?x2256 ?x2333 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2491)))
 (let (($x876 (= ?x864 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x966 (* (- 9) s00)))
 (let ((?x895 (* (- 15) ?x570)))
 (let ((?x856 (* r00 r00 x00)))
 (let ((?x869 (* (- 36) ?x856)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x524 (* s s)))
 (let ((?x548 (* 3 ?x524)))
 (let ((?x530 (* (- 54) ?x501)))
 (let ((?x2153 (+ (* (- 24) (* s r)) ?x530 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x548 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x785 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1313) ?x869 ?x895 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x966 (* 36 ?x1005) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x357 (* (- 3) s00)))
 (let ((?x583 (* (- 4) ?x570)))
 (let ((?x525 (* 2 ?x524)))
 (let ((?x515 (* (- 18) ?x501)))
 (let ((?x1845 (+ (* (- 9) (* s r)) ?x515 (* 9 (* r00 s00)) ?x525 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1313) ?x583 (* 18 (* r00 x)) ?x357 (* 6 ?x1005) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x469 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x357 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x974 (= (+ s00 ?x259 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x359 (and $x974 (= ?x469 0) (= ?x1845 0) (= ?x2153 0) $x876 $x1008)))
 (let ((?x216 (- x s)))
 (let ((?x212 (+ r 1)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x222 (- (+ (* ?x212 ?x212 s00) (* ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x224 (- (- ?x222 (* 3 ?x212 ?x212 r00 r00 ?x215 ?x215 ?x215)) (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x227 (+ ?x224 (* 3 ?x212 ?x212 ?x212 ?x212) (* 3 ?x212 ?x212 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x231 (+ (- ?x227 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216)) (* ?x212 ?x212 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x235 (+ (- ?x231 (* ?x212 ?x212 ?x215 ?x215 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x215 ?x215 ?x215))))
 (let ((?x239 (- (- ?x235 (* 3 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* ?x212 ?x212 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x243 (+ ?x239 (* 3 ?x212 ?x212 r00 r00 ?x215 ?x216 ?x216 ?x216) (* ?x212 ?x212 ?x215 ?x215 ?x215 s00) (* ?x212 ?x212 ?x212 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x247 (- (- ?x243 (* ?x212 ?x212 ?x215)) (* ?x212 ?x212 ?x212 s00 ?x216 ?x216 ?x216))))
 (let ((?x251 (- (+ ?x247 (* 3 ?x212 ?x212 ?x212 r00 r00 ?x216 ?x216 ?x216)) (* 3 ?x212 ?x212 r00 r00))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x255 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x251 0))))))
 (rewrite (= $x255 $x359)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x257 (asserted $x256)))
 (let ((@x1388 (mp (mp @x257 (quant-intro (proof-bind ?x1707) (= $x256 $x412)) $x412) (rewrite (= $x412 $x412)) $x412)))
 (let ((@x1632 (mp (mp @x1388 (quant-intro (proof-bind ?x2094) (= $x412 $x2090)) $x2090) (quant-intro (proof-bind ?x2122) (= $x2090 $x2079)) $x2079)))
 (let ((@x611 (mp (mp~ @x1632 (sk (~ $x2079 $x866)) $x866) (rewrite (= $x866 $x1283)) $x1283)))
 (let ((@x871 (and-elim @x611 $x923)))
 (let ((@x734 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x923) $x1476)) @x871 $x1476)))
 (let (($x1172 (>= ?x1658 0)))
 (let ((@x1361 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x923) $x1172)) @x871 $x1172)))
 (let (($x810 (not (<= ?x656 0))))
 (let (($x425 (>= ?x656 0)))
 (let ((@x1220 (lemma ((_ th-lemma arith) (hypothesis (not $x425)) @x1361 @x734 @x1361 @x734 false) $x425)))
 (let ((@x1252 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1633 $x810 (not $x425))) (and-elim @x611 $x2143) (or $x810 (not $x425)))))
 ((_ th-lemma arith) (unit-resolution @x1252 @x1220 $x810) @x1361 @x734 @x1361 @x734 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        29
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             834
 :arith-nonlinear-bounds    22
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 148
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.20
 :memory                    3.40
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                3640109
 :num-checks                1
 :propagations              12
 :rlimit-count              56131
 :time                      0.04
 :total-time                0.04)
