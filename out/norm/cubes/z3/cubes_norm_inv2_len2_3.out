unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x281 (* (- 1) k!2)))
 (let ((?x310 (+ (* 3 n!0) (* 3 (* n!0 n!0)) ?x281)))
 (let (($x144 (<= ?x310 (- 1))))
 (let (($x311 (= ?x310 (- 1))))
 (let ((?x254 (+ c!3 k!2)))
 (let ((?x470 (+ k!2 m!1)))
 (let ((?x636 (+ 6 m!1)))
 (let ((?x458 (+ 1 n!0)))
 (let ((?x750 (* ?x458 ?x458 ?x458 ?x636 ?x470 ?x470 ?x254 ?x254)))
 (let ((?x242 (* ?x458 ?x458 ?x458 ?x636 ?x470 ?x470 ?x470 ?x470 ?x254 ?x254)))
 (let ((?x766 (+ (* 9 (* ?x458 ?x458 ?x458 ?x470 ?x470 ?x470 ?x254 ?x254)) (* 5 (* ?x458 ?x458 ?x470 ?x470 ?x470 ?x470 ?x254)) ?x242 (* (- 9) (* ?x458 ?x458 ?x458 ?x470 ?x470 ?x470 ?x254)) (* (- 4) (* ?x458 ?x458 ?x470 ?x470 ?x470 ?x254)) (* 18 (* ?x458 ?x458 ?x470 ?x470 ?x470 ?x254 ?x254)) (* (- 1) (* ?x458 ?x458 ?x470 ?x470 ?x470 ?x470 ?x470 ?x254)) (* (- 5) (* ?x458 ?x458 ?x458 ?x636 ?x470 ?x470 ?x470 ?x254 ?x254)) (* (- 9) (* ?x458 ?x458 ?x458 ?x458 ?x636 ?x470 ?x470 ?x254 ?x254 ?x254)) (* 9 (* ?x458 ?x458 ?x458 ?x458 ?x636 ?x470 ?x470 ?x254 ?x254)) (* (- 18) (* ?x458 ?x458 ?x458 ?x636 ?x470 ?x470 ?x254 ?x254 ?x254)) (* 4 ?x750))))
 (let (($x666 (= ?x766 0)))
 (let (($x710 (not $x666)))
 (let ((?x284 (+ (* 2 n!0) (* (- 3) c!3) ?x281 (* n!0 k!2))))
 (let (($x285 (= ?x284 (- 1))))
 (let ((?x580 (* k!2 k!2)))
 (let ((?x798 (+ (* 9 n!0) (* (- 18) c!3) (* (- 5) k!2) ?x580 (* (- 9) (* n!0 c!3)))))
 (let (($x467 (= ?x798 (- 4))))
 (let ((?x759 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x143 (= ?x759 (- 6))))
 (let (($x482 (and $x143 $x467 $x285 $x311 $x710)))
 (let ((?x263 (* ?x458 ?x458 ?x470 ?x470 ?x470 ?x470 ?x470 ?x254)))
 (let ((?x243 (+ (* 18 (* ?x458 ?x458 ?x458 ?x636 ?x470 ?x470 ?x254 ?x254 ?x254)) (* 4 (* ?x458 ?x458 ?x470 ?x470 ?x470 ?x254)) (* (- 18) (* ?x458 ?x458 ?x470 ?x470 ?x470 ?x254 ?x254)) (* (- 5) (* ?x458 ?x458 ?x470 ?x470 ?x470 ?x470 ?x254)) (* (- 9) (* ?x458 ?x458 ?x458 ?x470 ?x470 ?x470 ?x254 ?x254)) (* 9 (* ?x458 ?x458 ?x458 ?x470 ?x470 ?x470 ?x254)) (* (- 1) ?x242) (* (- 4) ?x750) ?x263 (* 5 (* ?x458 ?x458 ?x458 ?x636 ?x470 ?x470 ?x470 ?x254 ?x254)) (* (- 9) (* ?x458 ?x458 ?x458 ?x458 ?x636 ?x470 ?x470 ?x254 ?x254)) (* 9 (* ?x458 ?x458 ?x458 ?x458 ?x636 ?x470 ?x470 ?x254 ?x254 ?x254)))))
 (let (($x215 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x548 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x580) (* 9 (* c!3 n!0)))))
 (let (($x320 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x548 4) $x215 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x243 0)))))
 (let (($x795 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x535 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x787 (* ?x315 ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x102 (* 9 ?x787)))
 (let ((?x744 (* ?x315 ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x280 (* (- 9) ?x744)))
 (let ((?x733 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x120 (* 5 ?x733)))
 (let ((?x622 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x606 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x298 (* (- 4) ?x606)))
 (let ((?x538 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x296 (* (- 1) ?x538)))
 (let ((?x219 (* ?x315 ?x315 ?x315 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x158 (* 9 ?x219)))
 (let ((?x212 (* ?x315 ?x315 ?x315 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x159 (* (- 9) ?x212)))
 (let ((?x204 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x110 (* (- 5) ?x204)))
 (let ((?x182 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x181 (* (- 18) ?x182)))
 (let ((?x162 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x149 (* 4 ?x162)))
 (let ((?x127 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x165 (* 18 ?x127)))
 (let (($x273 (= (+ ?x165 ?x149 ?x181 ?x110 ?x159 ?x158 ?x296 ?x298 ?x622 ?x120 ?x280 ?x102) 0)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 (* c n))) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 $x214 $x266 $x304 (not $x273))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x785 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x535 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x733 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x120 (* 5 ?x733)))
 (let ((?x744 (* ?x315 ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x280 (* (- 9) ?x744)))
 (let ((?x787 (* ?x315 ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x102 (* 9 ?x787)))
 (let ((?x622 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x606 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x298 (* (- 4) ?x606)))
 (let ((?x538 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x296 (* (- 1) ?x538)))
 (let ((?x127 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x165 (* 18 ?x127)))
 (let ((?x219 (* ?x315 ?x315 ?x315 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x158 (* 9 ?x219)))
 (let ((?x212 (* ?x315 ?x315 ?x315 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x159 (* (- 9) ?x212)))
 (let ((?x204 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x110 (* (- 5) ?x204)))
 (let ((?x182 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x181 (* (- 18) ?x182)))
 (let ((?x162 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x149 (* 4 ?x162)))
 (let (($x672 (= (+ ?x149 ?x181 ?x110 ?x159 ?x158 ?x165 ?x296 ?x298 ?x622 ?x102 ?x280 ?x120) 0)))
 (let (($x139 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x178 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x178 $x139 (not $x672)))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x264 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x535 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x787 (* ?x315 ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x102 (* 9 ?x787)))
 (let ((?x744 (* ?x315 ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x280 (* (- 9) ?x744)))
 (let ((?x733 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x120 (* 5 ?x733)))
 (let ((?x622 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x606 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x298 (* (- 4) ?x606)))
 (let ((?x538 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x296 (* (- 1) ?x538)))
 (let ((?x219 (* ?x315 ?x315 ?x315 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x158 (* 9 ?x219)))
 (let ((?x212 (* ?x315 ?x315 ?x315 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x159 (* (- 9) ?x212)))
 (let ((?x204 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x110 (* (- 5) ?x204)))
 (let ((?x182 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x181 (* (- 18) ?x182)))
 (let ((?x162 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x149 (* 4 ?x162)))
 (let ((?x127 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x165 (* 18 ?x127)))
 (let (($x273 (= (+ ?x165 ?x149 ?x181 ?x110 ?x159 ?x158 ?x296 ?x298 ?x622 ?x120 ?x280 ?x102) 0)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 (* c n))) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x274 (and $x130 $x214 $x266 $x304 (not $x273))))
 (let (($x672 (= (+ ?x149 ?x181 ?x110 ?x159 ?x158 ?x165 ?x296 ?x298 ?x622 ?x102 ?x280 ?x120) 0)))
 (let (($x139 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x178 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x674 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x178 $x139 (not $x672))))
 (rewrite (= $x674 $x274)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x101 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x535 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x733 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x538 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x584 (+ (* (- 4) (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x69)) (* 18 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x69 ?x69)) (* 5 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x70 ?x69)) (* 9 (* ?x315 ?x315 ?x315 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 9) (* ?x315 ?x315 ?x315 ?x70 ?x70 ?x70 ?x69)) (* (- 18) (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69 ?x69)) ?x538 (* 4 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)) (* (- 9) (* ?x315 ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 9 (* ?x315 ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69)) (* (- 5) ?x733))))
 (let (($x139 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x234 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x151 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 (= ?x151 (- 4)) $x234 $x139 (not (= ?x584 0)))))))))))))))) :qid k!34))
 ))
 (let ((?x147 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x535 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x733 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x120 (* 5 ?x733)))
 (let ((?x744 (* ?x315 ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x280 (* (- 9) ?x744)))
 (let ((?x787 (* ?x315 ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x102 (* 9 ?x787)))
 (let ((?x622 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x606 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x298 (* (- 4) ?x606)))
 (let ((?x538 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x296 (* (- 1) ?x538)))
 (let ((?x127 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x165 (* 18 ?x127)))
 (let ((?x219 (* ?x315 ?x315 ?x315 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x158 (* 9 ?x219)))
 (let ((?x212 (* ?x315 ?x315 ?x315 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x159 (* (- 9) ?x212)))
 (let ((?x204 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x110 (* (- 5) ?x204)))
 (let ((?x182 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x181 (* (- 18) ?x182)))
 (let ((?x162 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x149 (* 4 ?x162)))
 (let (($x672 (= (+ ?x149 ?x181 ?x110 ?x159 ?x158 ?x165 ?x296 ?x298 ?x622 ?x102 ?x280 ?x120) 0)))
 (let (($x139 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x178 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x674 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x178 $x139 (not $x672))))
 (let ((?x584 (+ (* (- 4) ?x162) (* 18 ?x182) (* 5 ?x204) (* 9 ?x212) (* (- 9) ?x219) (* (- 18) ?x127) ?x538 (* 4 ?x606) (* (- 1) ?x622) (* (- 9) ?x787) (* 9 ?x744) (* (- 5) ?x733))))
 (let (($x234 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x151 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x206 (and $x130 (= ?x151 (- 4)) $x234 $x139 (not (= ?x584 0)))))
 (rewrite (= $x206 $x674)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x97 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x78 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x76 (+ (* (- 4) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* 18 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* 5 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71) (* 9 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x81 (- (- ?x76 (* 9 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)) (* 18 ?x69 ?x69 ?x69 ?x70 ?x70 ?x78 ?x71 ?x71 ?x71))))
 (let ((?x84 (+ ?x81 (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x78 ?x71 ?x71 ?x71) (* 4 ?x69 ?x69 ?x70 ?x70 ?x78 ?x71 ?x71 ?x71))))
 (let ((?x88 (- (- ?x84 (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)) (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x78 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x92 (- (+ ?x88 (* 9 ?x69 ?x69 ?x70 ?x70 ?x78 ?x71 ?x71 ?x71 ?x71)) (* 5 ?x69 ?x69 ?x70 ?x70 ?x70 ?x78 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x92 0)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x211 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x535 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x733 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x538 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x584 (+ (* (- 4) (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x69)) (* 18 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x69 ?x69)) (* 5 (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x70 ?x69)) (* 9 (* ?x315 ?x315 ?x315 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 9) (* ?x315 ?x315 ?x315 ?x70 ?x70 ?x70 ?x69)) (* (- 18) (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69 ?x69)) ?x538 (* 4 (* ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x315 ?x315 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)) (* (- 9) (* ?x315 ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 9 (* ?x315 ?x315 ?x315 ?x315 ?x535 ?x70 ?x70 ?x69 ?x69)) (* (- 5) ?x733))))
 (let (($x139 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x234 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x151 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x206 (and $x130 (= ?x151 (- 4)) $x234 $x139 (not (= ?x584 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x78 (+ m 6)))
 (let ((?x76 (+ (* (- 4) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* 18 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* 5 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71) (* 9 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x81 (- (- ?x76 (* 9 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)) (* 18 ?x69 ?x69 ?x69 ?x70 ?x70 ?x78 ?x71 ?x71 ?x71))))
 (let ((?x84 (+ ?x81 (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x78 ?x71 ?x71 ?x71) (* 4 ?x69 ?x69 ?x70 ?x70 ?x78 ?x71 ?x71 ?x71))))
 (let ((?x88 (- (- ?x84 (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)) (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x78 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x92 (- (+ ?x88 (* 9 ?x69 ?x69 ?x70 ?x70 ?x78 ?x71 ?x71 ?x71 ?x71)) (* 5 ?x69 ?x69 ?x70 ?x70 ?x70 ?x78 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x96 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x92 0))))))
 (rewrite (= $x96 $x206))))))))))))))))))))))))))))))
 ))
 (let ((@x98 (asserted $x97)))
 (let ((@x775 (mp (mp @x98 (quant-intro (proof-bind ?x211) (= $x97 $x101)) $x101) (rewrite (= $x101 $x101)) $x101)))
 (let ((@x796 (mp (mp @x775 (quant-intro (proof-bind ?x147) (= $x101 $x785)) $x785) (quant-intro (proof-bind ?x264) (= $x785 $x795)) $x795)))
 (let ((@x713 (mp (mp~ @x796 (sk (~ $x795 $x320)) $x320) (rewrite (= $x320 $x482)) $x482)))
 (let ((@x300 (and-elim @x713 $x311)))
 (let ((@x142 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x311) $x144)) @x300 $x144)))
 (let (($x145 (>= ?x310 (- 1))))
 (let ((@x617 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x311) $x145)) @x300 $x145)))
 (let (($x107 (<= ?x759 (- 6))))
 (let ((@x567 (and-elim @x713 $x143)))
 (let ((@x223 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x143) $x107)) @x567 $x107)))
 (let (($x187 (>= ?x759 (- 6))))
 (let ((@x531 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x143) $x187)) @x567 $x187)))
 (let (($x201 (<= ?x798 (- 4))))
 (let ((@x295 (and-elim @x713 $x467)))
 (let ((@x764 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x467) $x201)) @x295 $x201)))
 (let (($x124 (>= ?x798 (- 4))))
 (let ((@x134 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x467) $x124)) @x295 $x124)))
 (let (($x132 (<= ?x284 (- 1))))
 (let ((@x299 (and-elim @x713 $x285)))
 (let ((@x104 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x285) $x132)) @x299 $x132)))
 (let (($x317 (>= ?x284 (- 1))))
 (let ((@x694 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x285) $x317)) @x299 $x317)))
 (let (($x294 (not (<= ?x766 0))))
 (let (($x227 (>= ?x766 0)))
 (let ((@x170 ((_ th-lemma arith) (hypothesis (not $x227)) @x617 @x142 @x531 @x223 @x617 @x142 @x694 @x104 @x617 @x142 @x617 @x142 @x694 @x104 @x694 @x104 @x134 @x764 @x531 @x223 @x617 @x142 false)))
 (let ((@x712 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x666 $x294 (not $x227))) (and-elim @x713 $x710) (or $x294 (not $x227)))))
 ((_ th-lemma arith) (unit-resolution @x712 (lemma @x170 $x227) $x294) @x617 @x142 @x531 @x223 @x617 @x142 @x694 @x104 @x617 @x142 @x617 @x142 @x694 @x104 @x694 @x104 @x134 @x764 @x531 @x223 @x617 @x142 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        11
 :arith-assert-upper        10
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           7
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             178
 :arith-nonlinear-bounds    4
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             3
 :arith-patches_succ        1
 :arith-pivots              9
 :arith-row-summations      10
 :arith-tableau-max-columns 44
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.67
 :memory                    3.17
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1586437
 :num-checks                1
 :propagations              10
 :rlimit-count              12240
 :time                      0.01
 :total-time                0.02)
