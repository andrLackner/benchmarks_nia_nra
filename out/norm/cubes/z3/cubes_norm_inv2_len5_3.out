unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x1658 (* (- 3) n!0)))
 (let ((?x1179 (* (- 3) (* n!0 n!0))))
 (let ((?x1108 (+ k!2 ?x1179 ?x1658)))
 (let (($x1845 (<= ?x1108 1)))
 (let (($x456 (= ?x1108 1)))
 (let ((?x1691 (* 432 (* c!3 m!1))))
 (let ((?x1431 (* 4 (* c!3 m!1 m!1 m!1 n!0))))
 (let ((?x914 (* 864 c!3)))
 (let ((?x601 (* 432 (* k!2 m!1))))
 (let ((?x1296 (+ k!2 c!3)))
 (let ((?x1547 (+ k!2 m!1)))
 (let ((?x1536 (+ 6 m!1)))
 (let ((?x595 (+ 1 n!0)))
 (let ((?x1489 (* (- 5) (* ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1547 ?x1296 ?x1296))))
 (let ((?x1419 (* 4 (* ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1296 ?x1296))))
 (let ((?x1463 (* (- 4) (* ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547))))
 (let ((?x1495 (* ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1547 ?x1547 ?x1296 ?x1296)))
 (let ((?x1549 (* 864 k!2)))
 (let ((?x1440 (* c!3 n!0)))
 (let ((?x1544 (* 864 ?x1440)))
 (let ((?x597 (* 72 (* c!3 m!1 m!1))))
 (let ((?x382 (* 432 (* k!2 m!1 n!0))))
 (let ((?x1860 (* 9 (* ?x595 ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1296 ?x1296))))
 (let ((?x1640 (* 72 (* c!3 m!1 m!1 n!0))))
 (let ((?x1330 (* 5 (* ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1547))))
 (let ((?x386 (* 4 (* c!3 m!1 m!1 m!1))))
 (let ((?x1239 (* ?x595 ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1296 ?x1296 ?x1296)))
 (let ((?x1443 (* (- 1) (* ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1547 ?x1547))))
 (let ((?x1538 (* (- 18) (* ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1296 ?x1296 ?x1296))))
 (let ((?x2048 (* (- 9) (* ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547))))
 (let ((?x1421 (* 72 (* k!2 m!1 m!1))))
 (let ((?x1331 (* 4 (* k!2 m!1 m!1 m!1 n!0))))
 (let ((?x1453 (* 4 (* k!2 m!1 m!1 m!1))))
 (let ((?x1327 (* 72 (* k!2 m!1 m!1 n!0))))
 (let ((?x603 (* k!2 n!0)))
 (let ((?x573 (* 864 ?x603)))
 (let ((?x390 (* 432 (* c!3 m!1 n!0))))
 (let ((?x1466 (+ ?x390 ?x573 ?x1327 (* 9 (* ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1296)) ?x1453 ?x1331 ?x1421 (* 9 (* ?x595 ?x595 ?x595 ?x595 ?x1536 ?x1296 ?x1296)) ?x2048 ?x1538 ?x1443 (* (- 9) ?x1239) ?x386 ?x1330 (* (- 18) (* ?x595 ?x595 ?x595 ?x1536 ?x1296 ?x1296 ?x1296)) ?x1640 (* 9 (* ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1296)) (* (- 5) (* ?x595 ?x595 ?x595 ?x1536 ?x1547 ?x1296 ?x1296)) ?x1860 (* (- 18) (* ?x595 ?x1536 ?x1536 ?x1536 ?x1296 ?x1296)) (* (- 9) (* ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1296 ?x1296)) (* 4 (* ?x595 ?x595 ?x595 ?x1536 ?x1296 ?x1296)) (* ?x595 ?x595 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1547 ?x1547 ?x1296) ?x382 (* (- 9) (* ?x595 ?x595 ?x595 ?x595 ?x1536 ?x1296 ?x1296 ?x1296)) (* 4 (* ?x595 ?x595 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1296)) ?x597 (* 18 (* ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1296)) ?x1544 (* 9 (* ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1296)) ?x1549 (* (- 18) (* ?x595 ?x595 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1296 ?x1296)) (* ?x595 ?x595 ?x595 ?x1536 ?x1547 ?x1547 ?x1296 ?x1296) ?x1495 (* ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1296) ?x1463 ?x1419 (* (- 5) (* ?x595 ?x595 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1547 ?x1296)) ?x1489 (* (- 9) (* ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1296 ?x1296)) (* (- 5) (* ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1296)) ?x601 ?x914 ?x1431 ?x1691)))
 (let (($x380 (= ?x1466 0)))
 (let (($x1491 (not $x380)))
 (let ((?x1645 (+ ?x603 (* (- 1) k!2) (* (- 3) c!3) (* 2 n!0))))
 (let (($x2047 (= ?x1645 (- 1))))
 (let ((?x448 (* k!2 k!2)))
 (let ((?x1575 (+ ?x448 (* (- 9) ?x1440) (* (- 5) k!2) (* (- 18) c!3) (* 9 n!0))))
 (let (($x396 (= ?x1575 (- 4))))
 (let ((?x1478 (+ m!1 (* (- 6) n!0))))
 (let (($x1643 (= ?x1478 6)))
 (let (($x1184 (and $x1643 $x396 $x2047 $x456 $x1491)))
 (let ((?x446 (+ c!3 k!2)))
 (let ((?x1543 (* (- 5) (* ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1547 ?x446 ?x446))))
 (let ((?x1182 (* 4 (* ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x446 ?x446))))
 (let ((?x1346 (* ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1547 ?x1547 ?x446 ?x446)))
 (let ((?x1577 (* 9 (* ?x595 ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x446 ?x446))))
 (let ((?x410 (* (- 18) (* ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x446 ?x446 ?x446))))
 (let ((?x1935 (* ?x595 ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x446 ?x446 ?x446)))
 (let ((?x1669 (+ ?x914 ?x1549 ?x573 ?x1544 (* (- 5) (* ?x595 ?x595 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1547 ?x446)) (* (- 9) (* ?x595 ?x595 ?x595 ?x595 ?x1536 ?x446 ?x446 ?x446)) (* 9 (* ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x446)) (* (- 9) ?x1935) ?x410 (* (- 18) (* ?x595 ?x595 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x446 ?x446)) ?x1691 ?x601 ?x597 ?x1421 ?x1331 ?x1431 ?x1453 ?x386 ?x390 ?x382 ?x1640 ?x1327 (* 18 (* ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x446)) (* 4 (* ?x595 ?x595 ?x595 ?x1536 ?x446 ?x446)) ?x2048 ?x1577 (* (- 18) (* ?x595 ?x1536 ?x1536 ?x1536 ?x446 ?x446)) ?x1463 (* 9 (* ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x446)) (* ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x446) (* ?x595 ?x595 ?x595 ?x1536 ?x1547 ?x1547 ?x446 ?x446) (* 9 (* ?x595 ?x595 ?x595 ?x595 ?x1536 ?x446 ?x446)) (* 4 (* ?x595 ?x595 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x446)) (* (- 5) (* ?x595 ?x595 ?x595 ?x1536 ?x1547 ?x446 ?x446)) (* 9 (* ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x446)) ?x1346 (* (- 5) (* ?x595 ?x1536 ?x1536 ?x1536 ?x1547 ?x446)) (* (- 9) (* ?x595 ?x595 ?x1536 ?x1536 ?x1536 ?x446 ?x446)) ?x1182 (* (- 18) (* ?x595 ?x595 ?x595 ?x1536 ?x446 ?x446 ?x446)) ?x1443 (* (- 9) (* ?x595 ?x595 ?x595 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x446 ?x446)) ?x1543 ?x1330 (* ?x595 ?x595 ?x1536 ?x1536 ?x1547 ?x1547 ?x1547 ?x1547 ?x1547 ?x446))))
 (let ((?x1322 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x448) (* 9 ?x1440))))
 (let (($x1185 (and $x1643 (= ?x1322 4) (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x603)) 1) (= (+ k!2 ?x1658 ?x1179) 1) (not (= ?x1669 0)))))
 (let (($x1375 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x73 (+ k m)))
 (let ((?x344 (+ 6 m)))
 (let ((?x347 (+ 1 n)))
 (let ((?x1978 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1949 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x1951 (* 5 ?x1949)))
 (let ((?x1878 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1917 (* (- 5) ?x1878)))
 (let ((?x1771 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1820 (* (- 9) ?x1771)))
 (let ((?x1677 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x1694 (* (- 1) ?x1677)))
 (let ((?x1663 (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)))
 (let ((?x1383 (* (- 18) ?x1663)))
 (let ((?x1655 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1284 (* 4 ?x1655)))
 (let ((?x1620 (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)))
 (let ((?x1267 (* (- 9) ?x1620)))
 (let ((?x1603 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x69)))
 (let ((?x1610 (* (- 5) ?x1603)))
 (let ((?x1593 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1590 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1592 (* 9 ?x1590)))
 (let ((?x1559 (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x69 ?x69)))
 (let ((?x1551 (* (- 5) ?x1559)))
 (let ((?x1557 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1558 (* 4 ?x1557)))
 (let ((?x1554 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)))
 (let ((?x1220 (* 9 ?x1554)))
 (let ((?x1542 (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1541 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x69)))
 (let ((?x1529 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1530 (* 9 ?x1529)))
 (let ((?x1371 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)))
 (let ((?x1642 (* (- 4) ?x1371)))
 (let ((?x1347 (* ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)))
 (let ((?x1525 (* (- 18) ?x1347)))
 (let ((?x1280 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1283 (* 9 ?x1280)))
 (let ((?x1238 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)))
 (let ((?x1574 (* (- 9) ?x1238)))
 (let ((?x1217 (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)))
 (let ((?x1350 (* 4 ?x1217)))
 (let ((?x1212 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1213 (* 18 ?x1212)))
 (let ((?x967 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1711 (* (- 18) ?x967)))
 (let ((?x619 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x1027 (* (- 18) ?x619)))
 (let ((?x551 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x587 (* (- 9) ?x551)))
 (let ((?x517 (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69)))
 (let ((?x519 (* 9 ?x517)))
 (let ((?x486 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)))
 (let ((?x376 (* (- 9) ?x486)))
 (let ((?x408 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x438 (* (- 5) ?x408)))
 (let ((?x1650 (+ (* 864 c) (* 864 k) (* 864 (* k n)) (* 864 (* c n)) ?x438 ?x376 ?x519 ?x587 ?x1027 ?x1711 (* 432 (* c m)) (* 432 (* k m)) (* 72 (* c m m)) (* 72 (* k m m)) (* 4 (* k m m m n)) (* 4 (* c m m m n)) (* 4 (* k m m m)) (* 4 (* c m m m)) (* 432 (* c m n)) (* 432 (* k m n)) (* 72 (* c m m n)) (* 72 (* k m m n)) ?x1213 ?x1350 ?x1574 ?x1283 ?x1525 ?x1642 ?x1530 ?x1541 ?x1542 ?x1220 ?x1558 ?x1551 ?x1592 ?x1593 ?x1610 ?x1267 ?x1284 ?x1383 ?x1694 ?x1820 ?x1917 ?x1951 ?x1978)))
 (let (($x334 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x296 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x247 (* (- 1) ?x49)))
 (let ((?x246 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x244 (= (+ ?x40 ?x44 ?x246 ?x247 (* 9 (* c n))) 4)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (and $x160 $x244 $x296 $x334 (not (= ?x1650 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x2346 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x73 (+ k m)))
 (let ((?x344 (+ 6 m)))
 (let ((?x347 (+ 1 n)))
 (let ((?x1978 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1878 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x619 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x551 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x1677 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x1655 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1280 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1593 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1630 (+ (* 18 (* ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)) (* (- 18) (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)) (* (- 1) (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x69)) (* (- 1) (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x73 ?x69 ?x69)) (* (- 4) (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)) (* (- 9) (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)) (* (- 4) (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)) (* 5 (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x69 ?x69)) (* (- 9) (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)) (* 9 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)) (* (- 9) (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)) (* (- 1) ?x1593) (* 5 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x69)) (* 9 (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)) (* 4 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)) (* (- 9) ?x1280) (* (- 4) ?x1655) (* 18 (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)) ?x1677 (* 9 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)) (* 5 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69)) (* (- 4) (* ?x347 ?x344 ?x344 ?x344 ?x69)) (* (- 9) (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69)) (* 9 ?x551) (* 18 ?x619) (* 18 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)) (* 9 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)) (* 5 ?x1878) (* (- 5) (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73)) (* (- 1) ?x1978))))
 (let (($x1516 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1159 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x247 (* (- 1) ?x49)))
 (let ((?x246 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (and $x160 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x246 ?x247) 4) $x1159 $x1516 (not (= ?x1630 0)))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1274 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x73 (+ k m)))
 (let ((?x344 (+ 6 m)))
 (let ((?x347 (+ 1 n)))
 (let ((?x1978 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1949 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x1951 (* 5 ?x1949)))
 (let ((?x1878 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1917 (* (- 5) ?x1878)))
 (let ((?x1771 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1820 (* (- 9) ?x1771)))
 (let ((?x1677 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x1694 (* (- 1) ?x1677)))
 (let ((?x1663 (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)))
 (let ((?x1383 (* (- 18) ?x1663)))
 (let ((?x1655 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1284 (* 4 ?x1655)))
 (let ((?x1620 (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)))
 (let ((?x1267 (* (- 9) ?x1620)))
 (let ((?x1603 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x69)))
 (let ((?x1610 (* (- 5) ?x1603)))
 (let ((?x1593 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1590 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1592 (* 9 ?x1590)))
 (let ((?x1559 (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x69 ?x69)))
 (let ((?x1551 (* (- 5) ?x1559)))
 (let ((?x1557 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1558 (* 4 ?x1557)))
 (let ((?x1554 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)))
 (let ((?x1220 (* 9 ?x1554)))
 (let ((?x1542 (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1541 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x69)))
 (let ((?x1529 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1530 (* 9 ?x1529)))
 (let ((?x1371 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)))
 (let ((?x1642 (* (- 4) ?x1371)))
 (let ((?x1347 (* ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)))
 (let ((?x1525 (* (- 18) ?x1347)))
 (let ((?x1280 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1283 (* 9 ?x1280)))
 (let ((?x1238 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)))
 (let ((?x1574 (* (- 9) ?x1238)))
 (let ((?x1217 (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)))
 (let ((?x1350 (* 4 ?x1217)))
 (let ((?x1212 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1213 (* 18 ?x1212)))
 (let ((?x967 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1711 (* (- 18) ?x967)))
 (let ((?x619 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x1027 (* (- 18) ?x619)))
 (let ((?x551 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x587 (* (- 9) ?x551)))
 (let ((?x517 (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69)))
 (let ((?x519 (* 9 ?x517)))
 (let ((?x486 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)))
 (let ((?x376 (* (- 9) ?x486)))
 (let ((?x408 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x438 (* (- 5) ?x408)))
 (let ((?x1650 (+ (* 864 c) (* 864 k) (* 864 (* k n)) (* 864 (* c n)) ?x438 ?x376 ?x519 ?x587 ?x1027 ?x1711 (* 432 (* c m)) (* 432 (* k m)) (* 72 (* c m m)) (* 72 (* k m m)) (* 4 (* k m m m n)) (* 4 (* c m m m n)) (* 4 (* k m m m)) (* 4 (* c m m m)) (* 432 (* c m n)) (* 432 (* k m n)) (* 72 (* c m m n)) (* 72 (* k m m n)) ?x1213 ?x1350 ?x1574 ?x1283 ?x1525 ?x1642 ?x1530 ?x1541 ?x1542 ?x1220 ?x1558 ?x1551 ?x1592 ?x1593 ?x1610 ?x1267 ?x1284 ?x1383 ?x1694 ?x1820 ?x1917 ?x1951 ?x1978)))
 (let (($x334 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x296 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x247 (* (- 1) ?x49)))
 (let ((?x246 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x244 (= (+ ?x40 ?x44 ?x246 ?x247 (* 9 (* c n))) 4)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (let (($x1189 (and $x160 $x244 $x296 $x334 (not (= ?x1650 0)))))
 (let ((?x1630 (+ (* 18 ?x1347) (* (- 18) ?x1212) (* (- 1) ?x1541) (* (- 1) ?x1542) (* (- 4) ?x1217) (* (- 9) ?x1554) (* (- 4) ?x1557) (* 5 ?x1559) (* (- 9) ?x1529) (* 9 ?x1238) (* (- 9) ?x1590) (* (- 1) ?x1593) (* 5 ?x1603) (* 9 ?x1620) (* 4 ?x1371) (* (- 9) ?x1280) (* (- 4) ?x1655) (* 18 ?x1663) ?x1677 (* 9 ?x486) (* 5 ?x408) (* (- 4) (* ?x347 ?x344 ?x344 ?x344 ?x69)) (* (- 9) ?x517) (* 9 ?x551) (* 18 ?x619) (* 18 ?x967) (* 9 ?x1771) (* 5 ?x1878) (* (- 5) ?x1949) (* (- 1) ?x1978))))
 (let (($x1516 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1159 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1268 (and $x160 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x246 ?x247) 4) $x1159 $x1516 (not (= ?x1630 0)))))
 (rewrite (= $x1268 $x1189))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1564 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x73 (+ k m)))
 (let ((?x344 (+ 6 m)))
 (let ((?x347 (+ 1 n)))
 (let ((?x1978 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1949 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x1951 (* 5 ?x1949)))
 (let ((?x1878 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1917 (* (- 5) ?x1878)))
 (let ((?x1771 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1820 (* (- 9) ?x1771)))
 (let ((?x967 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1711 (* (- 18) ?x967)))
 (let ((?x619 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x1027 (* (- 18) ?x619)))
 (let ((?x551 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x587 (* (- 9) ?x551)))
 (let ((?x517 (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69)))
 (let ((?x519 (* 9 ?x517)))
 (let ((?x408 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x438 (* (- 5) ?x408)))
 (let ((?x486 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)))
 (let ((?x376 (* (- 9) ?x486)))
 (let ((?x1677 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x1694 (* (- 1) ?x1677)))
 (let ((?x1663 (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)))
 (let ((?x1383 (* (- 18) ?x1663)))
 (let ((?x1655 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1284 (* 4 ?x1655)))
 (let ((?x1280 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1283 (* 9 ?x1280)))
 (let ((?x1371 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)))
 (let ((?x1642 (* (- 4) ?x1371)))
 (let ((?x1620 (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)))
 (let ((?x1267 (* (- 9) ?x1620)))
 (let ((?x1603 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x69)))
 (let ((?x1610 (* (- 5) ?x1603)))
 (let ((?x1593 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1590 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1592 (* 9 ?x1590)))
 (let ((?x1238 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)))
 (let ((?x1574 (* (- 9) ?x1238)))
 (let ((?x1529 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1530 (* 9 ?x1529)))
 (let ((?x1559 (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x69 ?x69)))
 (let ((?x1551 (* (- 5) ?x1559)))
 (let ((?x1557 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1558 (* 4 ?x1557)))
 (let ((?x1554 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)))
 (let ((?x1220 (* 9 ?x1554)))
 (let ((?x1217 (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)))
 (let ((?x1350 (* 4 ?x1217)))
 (let ((?x1542 (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1541 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x69)))
 (let ((?x1212 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1213 (* 18 ?x1212)))
 (let ((?x1347 (* ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)))
 (let ((?x1525 (* (- 18) ?x1347)))
 (let ((?x2015 (+ ?x1525 ?x1213 ?x1541 ?x1542 ?x1350 ?x1220 ?x1558 ?x1551 ?x1530 ?x1574 ?x1592 ?x1593 ?x1610 ?x1267 ?x1642 ?x1283 ?x1284 ?x1383 ?x1694 ?x376 ?x438 (* 4 (* ?x347 ?x344 ?x344 ?x344 ?x69)) ?x519 ?x587 ?x1027 ?x1711 ?x1820 ?x1917 ?x1951 ?x1978)))
 (let (($x1516 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1197 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1464 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (and $x160 (= ?x1464 (- 4)) $x1197 $x1516 (not (= ?x2015 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x364 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x73 (+ k m)))
 (let ((?x344 (+ 6 m)))
 (let ((?x347 (+ 1 n)))
 (let ((?x1978 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1878 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x619 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x551 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x1677 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x1655 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1280 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1593 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1630 (+ (* 18 (* ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)) (* (- 18) (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)) (* (- 1) (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x69)) (* (- 1) (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x73 ?x69 ?x69)) (* (- 4) (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)) (* (- 9) (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)) (* (- 4) (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)) (* 5 (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x69 ?x69)) (* (- 9) (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)) (* 9 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)) (* (- 9) (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)) (* (- 1) ?x1593) (* 5 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x69)) (* 9 (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)) (* 4 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)) (* (- 9) ?x1280) (* (- 4) ?x1655) (* 18 (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)) ?x1677 (* 9 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)) (* 5 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69)) (* (- 4) (* ?x347 ?x344 ?x344 ?x344 ?x69)) (* (- 9) (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69)) (* 9 ?x551) (* 18 ?x619) (* 18 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)) (* 9 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)) (* 5 ?x1878) (* (- 5) (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73)) (* (- 1) ?x1978))))
 (let (($x1516 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1159 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x247 (* (- 1) ?x49)))
 (let ((?x246 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (let (($x1268 (and $x160 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x246 ?x247) 4) $x1159 $x1516 (not (= ?x1630 0)))))
 (let ((?x1949 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x1951 (* 5 ?x1949)))
 (let ((?x1917 (* (- 5) ?x1878)))
 (let ((?x1771 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1820 (* (- 9) ?x1771)))
 (let ((?x967 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1711 (* (- 18) ?x967)))
 (let ((?x1027 (* (- 18) ?x619)))
 (let ((?x587 (* (- 9) ?x551)))
 (let ((?x517 (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69)))
 (let ((?x519 (* 9 ?x517)))
 (let ((?x408 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x438 (* (- 5) ?x408)))
 (let ((?x486 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)))
 (let ((?x376 (* (- 9) ?x486)))
 (let ((?x1694 (* (- 1) ?x1677)))
 (let ((?x1663 (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)))
 (let ((?x1383 (* (- 18) ?x1663)))
 (let ((?x1284 (* 4 ?x1655)))
 (let ((?x1283 (* 9 ?x1280)))
 (let ((?x1371 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)))
 (let ((?x1642 (* (- 4) ?x1371)))
 (let ((?x1620 (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)))
 (let ((?x1267 (* (- 9) ?x1620)))
 (let ((?x1603 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x69)))
 (let ((?x1610 (* (- 5) ?x1603)))
 (let ((?x1590 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1592 (* 9 ?x1590)))
 (let ((?x1238 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)))
 (let ((?x1574 (* (- 9) ?x1238)))
 (let ((?x1529 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1530 (* 9 ?x1529)))
 (let ((?x1559 (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x69 ?x69)))
 (let ((?x1551 (* (- 5) ?x1559)))
 (let ((?x1557 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1558 (* 4 ?x1557)))
 (let ((?x1554 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)))
 (let ((?x1220 (* 9 ?x1554)))
 (let ((?x1217 (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)))
 (let ((?x1350 (* 4 ?x1217)))
 (let ((?x1542 (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1541 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x69)))
 (let ((?x1212 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1213 (* 18 ?x1212)))
 (let ((?x1347 (* ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)))
 (let ((?x1525 (* (- 18) ?x1347)))
 (let ((?x2015 (+ ?x1525 ?x1213 ?x1541 ?x1542 ?x1350 ?x1220 ?x1558 ?x1551 ?x1530 ?x1574 ?x1592 ?x1593 ?x1610 ?x1267 ?x1642 ?x1283 ?x1284 ?x1383 ?x1694 ?x376 ?x438 (* 4 (* ?x347 ?x344 ?x344 ?x344 ?x69)) ?x519 ?x587 ?x1027 ?x1711 ?x1820 ?x1917 ?x1951 ?x1978)))
 (let (($x1197 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1464 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1351 (and $x160 (= ?x1464 (- 4)) $x1197 $x1516 (not (= ?x2015 0)))))
 (rewrite (= $x1351 $x1268))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x127 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x73 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x114 (* 5 ?x69 ?x69 ?x73 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x111 (* 18 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x110 (* 9 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x96 (* 9 ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x88 (* ?x69 ?x69 ?x73 ?x73 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x80 (+ (* (- 18) ?x69 ?x69 ?x70 ?x70 ?x70 ?x71) (* 18 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70) (* ?x69 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71) (* ?x69 ?x69 ?x73 ?x73 ?x70 ?x71 ?x71 ?x71) (* 4 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 9 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71) (* 4 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x84 (+ (- ?x80 (* 5 ?x69 ?x69 ?x73 ?x70 ?x71 ?x71 ?x71)) (* 9 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x89 (+ (- ?x84 (* 9 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71)) (* 9 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71) ?x88)))
 (let ((?x94 (- (- ?x89 (* 5 ?x69 ?x73 ?x70 ?x70 ?x70 ?x71)) (* 9 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x98 (+ (- ?x94 (* 4 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70)) ?x96 (* 4 ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x104 (- (- ?x98 (* 18 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* ?x73 ?x73 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70))))
 (let ((?x106 (- (- ?x104 (* 9 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71)) (* 5 ?x69 ?x73 ?x73 ?x73 ?x73 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x109 (+ ?x106 (* 4 ?x69 ?x70 ?x70 ?x70 ?x71) (* 9 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x117 (- (- (- ?x109 ?x110) ?x111) (* 18 ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x118 (- ?x117 (* 9 ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x122 (+ (- ?x118 ?x114) (* 5 ?x73 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70) (* ?x69 ?x73 ?x73 ?x73 ?x73 ?x73 ?x70 ?x70 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x122 0))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1223 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x73 (+ k m)))
 (let ((?x344 (+ 6 m)))
 (let ((?x347 (+ 1 n)))
 (let ((?x1978 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1949 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x1951 (* 5 ?x1949)))
 (let ((?x1878 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1917 (* (- 5) ?x1878)))
 (let ((?x1771 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1820 (* (- 9) ?x1771)))
 (let ((?x967 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1711 (* (- 18) ?x967)))
 (let ((?x619 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x1027 (* (- 18) ?x619)))
 (let ((?x551 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x587 (* (- 9) ?x551)))
 (let ((?x517 (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69)))
 (let ((?x519 (* 9 ?x517)))
 (let ((?x408 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x438 (* (- 5) ?x408)))
 (let ((?x486 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)))
 (let ((?x376 (* (- 9) ?x486)))
 (let ((?x1677 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x1694 (* (- 1) ?x1677)))
 (let ((?x1663 (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69 ?x69)))
 (let ((?x1383 (* (- 18) ?x1663)))
 (let ((?x1655 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1284 (* 4 ?x1655)))
 (let ((?x1280 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1283 (* 9 ?x1280)))
 (let ((?x1371 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)))
 (let ((?x1642 (* (- 4) ?x1371)))
 (let ((?x1620 (* ?x347 ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)))
 (let ((?x1267 (* (- 9) ?x1620)))
 (let ((?x1603 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x69)))
 (let ((?x1610 (* (- 5) ?x1603)))
 (let ((?x1593 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1590 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1592 (* 9 ?x1590)))
 (let ((?x1238 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x73)))
 (let ((?x1574 (* (- 9) ?x1238)))
 (let ((?x1529 (* ?x347 ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1530 (* 9 ?x1529)))
 (let ((?x1559 (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x69 ?x69)))
 (let ((?x1551 (* (- 5) ?x1559)))
 (let ((?x1557 (* ?x347 ?x347 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1558 (* 4 ?x1557)))
 (let ((?x1554 (* ?x347 ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)))
 (let ((?x1220 (* 9 ?x1554)))
 (let ((?x1217 (* ?x347 ?x347 ?x347 ?x344 ?x69 ?x69)))
 (let ((?x1350 (* 4 ?x1217)))
 (let ((?x1542 (* ?x347 ?x347 ?x347 ?x344 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1541 (* ?x347 ?x344 ?x344 ?x344 ?x73 ?x73 ?x69)))
 (let ((?x1212 (* ?x344 ?x344 ?x344 ?x73 ?x73 ?x73 ?x69)))
 (let ((?x1213 (* 18 ?x1212)))
 (let ((?x1347 (* ?x347 ?x344 ?x344 ?x344 ?x69 ?x69)))
 (let ((?x1525 (* (- 18) ?x1347)))
 (let ((?x2015 (+ ?x1525 ?x1213 ?x1541 ?x1542 ?x1350 ?x1220 ?x1558 ?x1551 ?x1530 ?x1574 ?x1592 ?x1593 ?x1610 ?x1267 ?x1642 ?x1283 ?x1284 ?x1383 ?x1694 ?x376 ?x438 (* 4 (* ?x347 ?x344 ?x344 ?x344 ?x69)) ?x519 ?x587 ?x1027 ?x1711 ?x1820 ?x1917 ?x1951 ?x1978)))
 (let (($x1516 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1197 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1464 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (let (($x1351 (and $x160 (= ?x1464 (- 4)) $x1197 $x1516 (not (= ?x2015 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x114 (* 5 ?x69 ?x69 ?x73 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x111 (* 18 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x110 (* 9 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x96 (* 9 ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x88 (* ?x69 ?x69 ?x73 ?x73 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x80 (+ (* (- 18) ?x69 ?x69 ?x70 ?x70 ?x70 ?x71) (* 18 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70) (* ?x69 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71) (* ?x69 ?x69 ?x73 ?x73 ?x70 ?x71 ?x71 ?x71) (* 4 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 9 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71) (* 4 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x84 (+ (- ?x80 (* 5 ?x69 ?x69 ?x73 ?x70 ?x71 ?x71 ?x71)) (* 9 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x89 (+ (- ?x84 (* 9 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71)) (* 9 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71) ?x88)))
 (let ((?x94 (- (- ?x89 (* 5 ?x69 ?x73 ?x70 ?x70 ?x70 ?x71)) (* 9 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x98 (+ (- ?x94 (* 4 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70)) ?x96 (* 4 ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x104 (- (- ?x98 (* 18 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* ?x73 ?x73 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70))))
 (let ((?x106 (- (- ?x104 (* 9 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71)) (* 5 ?x69 ?x73 ?x73 ?x73 ?x73 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x109 (+ ?x106 (* 4 ?x69 ?x70 ?x70 ?x70 ?x71) (* 9 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x117 (- (- (- ?x109 ?x110) ?x111) (* 18 ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x118 (- ?x117 (* 9 ?x69 ?x69 ?x73 ?x73 ?x73 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x122 (+ (- ?x118 ?x114) (* 5 ?x73 ?x73 ?x73 ?x73 ?x70 ?x70 ?x70) (* ?x69 ?x73 ?x73 ?x73 ?x73 ?x73 ?x70 ?x70 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x126 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x122 0))))))
 (rewrite (= $x126 $x1351)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x128 (asserted $x127)))
 (let ((@x1858 (mp (mp @x128 (quant-intro (proof-bind ?x1223) (= $x127 $x1564)) $x1564) (rewrite (= $x1564 $x1564)) $x1564)))
 (let ((@x1432 (mp (mp @x1858 (quant-intro (proof-bind ?x364) (= $x1564 $x2346)) $x2346) (quant-intro (proof-bind ?x1274) (= $x2346 $x1375)) $x1375)))
 (let ((@x1457 (mp (mp~ @x1432 (sk (~ $x1375 $x1185)) $x1185) (rewrite (= $x1185 $x1184)) $x1184)))
 (let ((@x589 (and-elim @x1457 $x456)))
 (let ((@x1480 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x456) $x1845)) @x589 $x1845)))
 (let (($x1200 (>= ?x1108 1)))
 (let ((@x1261 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x456) $x1200)) @x589 $x1200)))
 (let (($x1180 (<= ?x1575 (- 4))))
 (let ((@x458 (and-elim @x1457 $x396)))
 (let ((@x1633 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x396) $x1180)) @x458 $x1180)))
 (let (($x1556 (>= ?x1575 (- 4))))
 (let ((@x1648 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x396) $x1556)) @x458 $x1556)))
 (let (($x1667 (<= ?x1645 (- 1))))
 (let ((@x1242 (and-elim @x1457 $x2047)))
 (let ((@x1664 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2047) $x1667)) @x1242 $x1667)))
 (let (($x1450 (>= ?x1645 (- 1))))
 (let ((@x1425 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2047) $x1450)) @x1242 $x1450)))
 (let (($x1249 (<= ?x1478 6)))
 (let ((@x1198 (and-elim @x1457 $x1643)))
 (let ((@x1373 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1643) $x1249)) @x1198 $x1249)))
 (let (($x1202 (>= ?x1478 6)))
 (let ((@x1236 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1643) $x1202)) @x1198 $x1202)))
 (let (($x1540 (not (<= ?x1466 0))))
 (let (($x1192 (>= ?x1466 0)))
 (let ((@x1799 ((_ th-lemma arith) (hypothesis (not $x1192)) @x1261 @x1480 @x1236 @x1373 @x1261 @x1480 @x1425 @x1664 @x1261 @x1480 @x1261 @x1480 @x1648 @x1633 @x1261 @x1480 @x1236 @x1373 @x1236 @x1373 @x1425 @x1664 @x1648 @x1633 @x1261 @x1480 false)))
 (let ((@x1811 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x380 $x1540 (not $x1192))) (and-elim @x1457 $x1491) (or $x1540 (not $x1192)))))
 ((_ th-lemma arith) (unit-resolution @x1811 (lemma @x1799 $x1192) $x1540) @x1261 @x1480 @x1236 @x1373 @x1261 @x1480 @x1425 @x1664 @x1261 @x1480 @x1261 @x1480 @x1648 @x1633 @x1261 @x1480 @x1236 @x1373 @x1236 @x1373 @x1425 @x1664 @x1648 @x1633 @x1261 @x1480 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        11
 :arith-assert-upper        59
 :arith-branch-var          2
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           7
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             478
 :arith-nonlinear-bounds    3
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              8
 :arith-row-summations      10
 :arith-tableau-max-columns 75
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 47
 :del-clause                16
 :final-checks              9
 :max-memory                4.14
 :memory                    3.44
 :mk-bool-var               67
 :mk-clause                 16
 :num-allocs                3608335
 :num-checks                1
 :propagations              11
 :rlimit-count              33735
 :time                      0.03
 :total-time                0.04)
