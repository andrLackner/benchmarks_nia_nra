unsat
((set-logic NIA)
(declare-fun y!2 () Int)
(declare-fun z!1 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x1265 (* (- 18) (* x00 z!1))))
 (let ((?x723 (* (- 72) y!2)))
 (let ((?x714 (* (- 108) x!3)))
 (let ((?x1084 (* y!2 z!1)))
 (let ((?x1208 (* 12 ?x1084)))
 (let ((?x764 (* z00 z00 y!2)))
 (let ((?x494 (* z00 y00)))
 (let ((?x769 (* (- 6) ?x494)))
 (let ((?x401 (* x!3 z!1)))
 (let ((?x1203 (* 18 ?x401)))
 (let ((?x383 (* y00 z!1)))
 (let ((?x554 (* (- 12) ?x383)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1209 (+ ?x67 ?x74 ?x554 ?x1203 (* 6 (* z00 y!2)) ?x769 (* (- 18) (* z00 x00)) (* 24 (* y00 y00)) (* z00 y00 z!1) (* (- 1) (* z00 z00 y00)) (* 18 (* z00 x!3)) ?x764 (* (- 1) (* z00 y!2 z!1)) (* (- 12) (* y00 y!2)) ?x1208 ?x714 ?x723 ?x1265 (* (- 12) (* y!2 y!2)))))
 (let (($x537 (<= ?x1209 0)))
 (let (($x982 (= ?x1209 0)))
 (let ((?x1095 (+ x!3 y!2)))
 (let ((?x1038 (+ y!2 z!1)))
 (let ((?x665 (+ 6 z!1)))
 (let ((?x1101 (+ 1 n!0)))
 (let ((?x2099 (* y00 z00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1335 (* 18 ?x2099)))
 (let ((?x2096 (* z00 z00 z00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1966 (* y00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1750 (* 12 ?x1966)))
 (let ((?x1902 (* z00 z00 z00 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1907 (* (- 1) ?x1902)))
 (let ((?x1788 (* y00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1796 (* 72 ?x1788)))
 (let ((?x1613 (* z00 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x665 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1379 (* 6 ?x1613)))
 (let ((?x1562 (* ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1125 (* 6 ?x1562)))
 (let ((?x1776 (* (- 72) (* ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095))))
 (let ((?x1522 (* ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1909 (* 108 ?x1522)))
 (let ((?x1517 (* z00 z00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1471 (* x00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1470 (* 108 ?x1471)))
 (let ((?x1433 (* y00 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x620 (* (- 72) ?x1433)))
 (let ((?x1392 (* y00 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x605 (* (- 12) ?x1392)))
 (let ((?x1331 (* z00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1407 (* 6 ?x1331)))
 (let ((?x1316 (* y00 z00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1646 (* (- 18) ?x1316)))
 (let ((?x1288 (* ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1467 (* 72 ?x1288)))
 (let ((?x1115 (* (- 108) (* ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095))))
 (let ((?x1167 (* y00 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x665 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1114 (* 12 ?x1167)))
 (let ((?x1162 (* z00 z00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1694 (* 6 ?x1162)))
 (let ((?x1161 (* x00 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1152 (* (- 108) ?x1161)))
 (let ((?x1106 (* ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1318 (* (- 6) ?x1106)))
 (let ((?x1093 (* z00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x373 (* (- 6) ?x1093)))
 (let ((?x990 (* ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1514 (* (- 72) ?x990)))
 (let ((?x962 (* ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x553 (* 72 ?x962)))
 (let ((?x891 (* z00 z00 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x886 (* x00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1237 (* (- 108) ?x886)))
 (let ((?x866 (* 72 (* y00 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095))))
 (let ((?x857 (* z00 z00 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x484 (* (- 6) ?x857)))
 (let ((?x851 (* z00 z00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1297 (* (- 1) ?x851)))
 (let ((?x850 (* z00 z00 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1663 (* 6 ?x850)))
 (let ((?x793 (* z00 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1128 (* (- 6) ?x793)))
 (let ((?x693 (* z00 z00 z00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x684 (* (- 1) ?x693)))
 (let ((?x690 (* ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x665 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x400 (* 6 ?x690)))
 (let ((?x664 (* y00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x651 (* (- 12) ?x664)))
 (let ((?x611 (* y00 z00 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1117 (* (- 18) ?x611)))
 (let ((?x575 (* y00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1360 (* (- 72) ?x575)))
 (let ((?x517 (* ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x509 (* (- 6) ?x517)))
 (let ((?x505 (* z00 z00 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x665 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1320 (* (- 1) ?x505)))
 (let ((?x518 (* 108 (* x00 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095))))
 (let ((?x378 (* z00 z00 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x379 (* (- 6) ?x378)))
 (let ((?x371 (* y00 z00 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x380 (* 18 ?x371)))
 (let ((?x334 (* ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x1038 ?x1038 ?x1038 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x404 (* (- 108) ?x334)))
 (let ((?x333 (* ?x1101 ?x1101 ?x1101 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x1038 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1369 (* 108 ?x333)))
 (let ((?x311 (* z00 z00 z00 ?x1101 ?x1101 ?x665 ?x665 ?x665 ?x665 ?x1095 ?x1095 ?x1095 ?x1095 ?x1095)))
 (let ((?x1044 (+ ?x311 ?x1369 ?x404 ?x380 ?x379 ?x518 ?x1320 ?x509 ?x1360 ?x1117 ?x651 ?x400 ?x684 ?x1128 ?x1663 ?x1297 ?x484 ?x866 ?x1237 ?x891 ?x553 ?x1514 ?x373 ?x1318 ?x1152 ?x1694 ?x1114 ?x1115 ?x1467 ?x1646 ?x1407 ?x605 ?x620 ?x1470 ?x1517 ?x1909 ?x1776 ?x1125 ?x1379 ?x1796 ?x1907 ?x1750 ?x2096 ?x1335)))
 (let (($x1064 (= ?x1044 0)))
 (let (($x1060 (not $x1064)))
 (let ((?x2072 (* y!2 y!2)))
 (let ((?x950 (* 24 ?x2072)))
 (let ((?x1610 (* 108 (* x!3 x!3))))
 (let ((?x721 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x1176 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1172 (* z00 z00 z00 y00)))
 (let ((?x1082 (* (- 36) (* z00 y00 x00))))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x881 (* z00 z00 x00)))
 (let ((?x1132 (* (- 18) ?x881)))
 (let ((?x753 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x695 (* z00 z00 y00)))
 (let ((?x1233 (* (- 10) ?x695)))
 (let ((?x670 (* z00 y00 y00)))
 (let ((?x705 (* (- 12) ?x670)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x531 (* z00 x00)))
 (let ((?x449 (* 36 ?x531)))
 (let ((?x859 (* 24 ?x494)))
 (let ((?x441 (* y00 x00)))
 (let ((?x432 (* 216 ?x441)))
 (let ((?x405 (* x!3 y!2)))
 (let ((?x480 (* 108 ?x405)))
 (let ((?x428 (+ ?x480 ?x432 (* (- 24) (* z00 y!2)) ?x859 ?x449 ?x1032 ?x705 ?x1233 ?x753 (* (- 36) (* z00 x!3)) (* 10 ?x764) (* z00 z00 y!2 y!2) (* (- 1) (* z00 z00 z00 y!2)) (* (- 2) (* z00 z00 z00 x!3)) (* (- 120) (* y00 y!2)) ?x1132 (* 18 (* z00 y00 y!2)) ?x967 (* (- 216) (* x00 x!3)) ?x1082 (* (- 216) (* y00 x!3)) (* (- 12) (* y00 y!2 y!2)) ?x1172 ?x1176 ?x1279 (* 36 (* z00 y00 x!3)) (* (- 108) (* x00 y!2)) ?x721 ?x1610 (* (- 6) (* z00 y!2 y!2)) (* 18 (* z00 z00 x!3)) ?x950)))
 (let (($x1105 (= ?x428 0)))
 (let ((?x954 (* z00 y00 y!2)))
 (let ((?x610 (* 6 ?x494)))
 (let ((?x657 (+ ?x67 ?x74 ?x554 ?x1203 (* 18 ?x405) (* 3 (* z00 x!3 z!1)) (* 18 ?x441) (* (- 6) (* z00 y!2)) ?x610 (* (- 3) (* z00 x00 z!1)) (* 36 ?x561) ?x670 (* (- 3) ?x695) (* 3 ?x764) (* (- 36) (* y00 y!2)) (* (- 3) ?x881) ?x954 ?x1208 (* (- 18) (* y00 x!3)) ?x714 ?x723 ?x1265 (* (- 18) (* x00 y!2)) (* (- 2) (* z00 y!2 y!2)) (* (- 1) (* y00 y!2 z!1)) (* (- 1) (* y!2 y!2 z!1)) (* 3 (* z00 z00 x!3)) (* 2 (* y00 y00 z!1)))))
 (let (($x658 (= ?x657 0)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1511 (+ ?x67 ?x55 ?x74 (* (- 6) (* z00 z00)) (* 12 ?x383) (* (- 18) ?x494) (* 6 ?x1084) ?x714 (* 6 (* z00 z!1)) ?x723 (* (- 1) (* z00 z00 z!1)))))
 (let (($x1443 (= ?x1511 0)))
 (let ((?x353 (* z00 z00)))
 (let ((?x786 (* (- 1) ?x353)))
 (let ((?x350 (* z!1 z!1)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x1188 (+ ?x49 ?x43 ?x350 ?x786 (* (- 12) y!2) (* (- 6) z!1))))
 (let (($x790 (= ?x1188 0)))
 (let ((?x399 (* (- 6) n00)))
 (let ((?x789 (+ z00 ?x399 (* 6 n!0) (* (- 1) z!1))))
 (let (($x501 (= ?x789 0)))
 (let (($x1235 (and $x501 $x790 $x1443 $x982 $x658 $x1105 $x1060)))
 (let ((?x1012 (+ ?x1694 ?x651 ?x684 ?x1796 ?x1360 ?x891 ?x1776 ?x1369 ?x311 ?x404 ?x400 ?x1379 ?x1117 ?x1115 ?x1114 ?x1152 ?x866 ?x1297 ?x484 ?x1467 ?x1237 ?x1125 ?x553 ?x1470 ?x518 ?x509 ?x1128 ?x1318 ?x620 ?x373 ?x1335 ?x1320 ?x1646 ?x605 ?x1750 ?x379 ?x380 ?x1407 ?x1514 ?x1517 ?x1909 ?x1907 ?x2096 ?x1663)))
 (let ((?x1109 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x432 (* (- 2) (* x!3 z00 z00 z00)) ?x480 ?x859 ?x449 ?x950 ?x1032 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x705 ?x1233 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x753 ?x1610 ?x721 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1132 (* (- 216) (* x!3 y00)) ?x967 (* (- 12) (* y!2 y!2 y00)) ?x1082 (* (- 216) (* x!3 x00)) ?x1172 ?x1176 (* 36 (* x!3 z00 y00)) ?x1279)))
 (let ((?x882 (* 3 ?x881)))
 (let ((?x944 (* 3 ?x695)))
 (let ((?x677 (* (- 1) ?x670)))
 (let ((?x1815 (* 18 (* z!1 x00))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x1074 (* z!1 y00)))
 (let ((?x1814 (* 12 ?x1074)))
 (let ((?x1642 (* (- 18) ?x401)))
 (let ((?x442 (* (- 18) ?x441)))
 (let ((?x758 (* (- 12) ?x1084)))
 (let ((?x1813 (* y!2 y!2 z!1)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x956 (* 72 y!2)))
 (let ((?x540 (* 108 x!3)))
 (let ((?x625 (+ ?x540 ?x956 ?x516 ?x573 (* (- 3) (* y!2 z00 z00)) ?x1813 ?x758 ?x442 (* (- 18) ?x405) ?x1642 ?x1814 ?x769 ?x864 ?x1815 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x677 ?x944 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x882 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x532 (* 18 ?x531)))
 (let ((?x1347 (+ ?x540 ?x956 ?x516 ?x573 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x758 ?x1642 ?x1814 ?x610 ?x532 (* 12 ?x2072) ?x590 ?x1815 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x695 (* (- 18) (* x!3 z00)))))
 (let ((?x495 (* 18 ?x494)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x1812 (+ ?x540 ?x956 ?x516 ?x446 ?x573 (* z!1 z00 z00) ?x457 (* (- 6) ?x1084) (* (- 12) ?x1074) ?x495 (* (- 6) (* z!1 z00)))))
 (let ((?x424 (* (- 12) y00)))
 (let ((?x423 (* (- 6) z00)))
 (let (($x2076 (= (+ (* 12 y!2) (* 6 z!1) ?x423 ?x424 (* (- 1) ?x350) ?x353) 0)))
 (let (($x679 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x2076 (= ?x1812 0) (= ?x1347 0) (= ?x625 0) (= ?x1109 0) (not (= ?x1012 0)))))
 (let (($x961 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x2109 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2085 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2028 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2013 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1979 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1947 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1931 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1908 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1885 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1868 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1821 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1748 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1712 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1678 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1662 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1630 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1622 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1608 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1592 (* x00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1585 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1575 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1549 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1537 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1329 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1156 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1144 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1104 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1051 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1030 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x992 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x981 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x939 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x845 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x700 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x689 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x669 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x652 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x527 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x504 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x392 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x368 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x317 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1668 (+ (* 6 ?x317) (* (- 12) ?x368) (* (- 1) ?x392) (* 72 ?x504) (* (- 72) ?x527) ?x652 (* (- 72) ?x669) (* 108 ?x689) ?x700 (* (- 108) ?x845) (* 6 ?x939) (* 6 ?x981) (* (- 18) ?x992) (* (- 108) ?x1030) (* 12 ?x1051) (* (- 108) ?x1104) (* 72 ?x1144) (* (- 1) ?x1156) (* (- 6) ?x1329) (* 72 ?x1373) (* (- 108) ?x1537) (* 6 ?x1549) (* 72 ?x1575) (* 108 ?x1585) (* 108 ?x1592) (* (- 6) ?x1608) (* (- 6) ?x1622) (* (- 6) ?x1630) (* (- 72) ?x1662) (* (- 6) ?x1678) (* 18 ?x1712) (* (- 1) ?x1748) (* (- 18) ?x1821) (* (- 12) ?x1868) (* 12 ?x1885) (* (- 6) ?x1908) (* 18 ?x1931) (* 6 ?x1947) (* (- 72) ?x1962) ?x1979 (* 108 ?x2013) (* (- 1) ?x2028) ?x2085 (* 6 ?x2109))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x1176 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1172 (* z00 z00 z00 y00)))
 (let ((?x1082 (* (- 36) (* z00 y00 x00))))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x881 (* z00 z00 x00)))
 (let ((?x1132 (* (- 18) ?x881)))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x753 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x695 (* z00 z00 y00)))
 (let ((?x1233 (* (- 10) ?x695)))
 (let ((?x670 (* z00 y00 y00)))
 (let ((?x705 (* (- 12) ?x670)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x531 (* z00 x00)))
 (let ((?x449 (* 36 ?x531)))
 (let ((?x494 (* z00 y00)))
 (let ((?x859 (* 24 ?x494)))
 (let ((?x441 (* y00 x00)))
 (let ((?x432 (* 216 ?x441)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1299 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x432 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x859 ?x449 ?x780 ?x1032 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x705 ?x1233 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x753 ?x785 ?x837 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1132 (* (- 216) (* x y00)) ?x967 (* (- 12) (* y y y00)) ?x1082 (* (- 216) (* x x00)) ?x1172 ?x1176 (* 36 (* x z00 y00)) ?x1279)))
 (let (($x1304 (= ?x1299 0)))
 (let ((?x882 (* 3 ?x881)))
 (let ((?x944 (* 3 ?x695)))
 (let ((?x677 (* (- 1) ?x670)))
 (let ((?x607 (* 18 (* z x00))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x769 (* (- 6) ?x494)))
 (let ((?x468 (* z y00)))
 (let ((?x469 (* 12 ?x468)))
 (let ((?x502 (* (- 18) (* x z))))
 (let ((?x442 (* (- 18) ?x441)))
 (let ((?x437 (* y z)))
 (let ((?x461 (* (- 12) ?x437)))
 (let ((?x135 (* y y z)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1000 (+ ?x64 ?x71 ?x516 ?x573 (* (- 3) (* y z00 z00)) ?x135 ?x461 ?x442 (* (- 18) (* x y)) ?x502 ?x469 ?x769 ?x864 ?x607 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x677 ?x944 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x882 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1007 (= ?x1000 0)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x532 (* 18 ?x531)))
 (let ((?x610 (* 6 ?x494)))
 (let ((?x103 (* y z z00)))
 (let ((?x749 (+ ?x64 ?x71 ?x516 ?x573 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x461 ?x502 ?x469 ?x610 ?x532 ?x538 ?x590 ?x607 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x695 (* (- 18) (* x z00)))))
 (let (($x754 (= ?x749 0)))
 (let ((?x495 (* 18 ?x494)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x589 (+ ?x64 ?x71 ?x516 ?x446 ?x573 ?x76 ?x457 (* (- 6) ?x437) (* (- 12) ?x468) ?x495 (* (- 6) (* z z00)))))
 (let (($x594 (= ?x589 0)))
 (let ((?x424 (* (- 12) y00)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x427 (= (+ ?x45 ?x46 ?x423 ?x424 (* (- 1) (* z z)) ?x353) 0)))
 (let (($x345 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x345 $x427 $x594 $x754 $x1007 $x1304 (not (= ?x1668 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x748 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x1947 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1979 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1537 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1622 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1630 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1908 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2085 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1821 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1549 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1592 (* x00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2013 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1662 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1678 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1868 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2109 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1931 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2028 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1585 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1712 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x669 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x939 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1748 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1329 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x981 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1104 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1608 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1575 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x700 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1030 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x317 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x392 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x368 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x527 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1156 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1051 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1144 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1885 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x504 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x845 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x992 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x689 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x652 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1652 (+ (* (- 1) ?x652) (* (- 108) ?x689) (* 18 ?x992) (* 108 ?x845) (* (- 72) ?x504) (* (- 12) ?x1885) (* (- 72) ?x1144) (* (- 12) ?x1051) ?x1156 (* 72 ?x527) (* 12 ?x368) ?x392 (* (- 6) ?x317) (* 108 ?x1030) (* (- 1) ?x700) (* (- 72) ?x1575) (* 6 ?x1608) (* 108 ?x1104) (* (- 6) ?x981) (* 6 ?x1329) ?x1748 (* (- 6) ?x939) (* 72 ?x669) (* (- 18) ?x1712) (* (- 108) ?x1585) ?x2028 (* (- 18) ?x1931) (* (- 6) ?x2109) (* 12 ?x1868) (* 6 ?x1678) (* 72 ?x1662) (* (- 108) ?x2013) (* (- 108) ?x1592) (* (- 6) ?x1549) (* 18 ?x1821) (* (- 1) ?x2085) (* 6 ?x1908) (* 6 ?x1630) (* 6 ?x1622) (* (- 72) ?x1373) (* 108 ?x1537) (* (- 1) ?x1979) (* 72 ?x1962) (* (- 6) ?x1947))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x1516 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x642 (* 18 (* x00 z))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x768 (* z y)))
 (let ((?x447 (* (- 12) ?x768)))
 (let ((?x1070 (* y00 z)))
 (let ((?x1076 (* 12 ?x1070)))
 (let ((?x522 (* (- 18) (* z x))))
 (let ((?x931 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x522 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1076 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x447 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x864 ?x642 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x516 (* 18 (* y00 x)) ?x71 ?x573 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x1005 (+ (* (- 1) (* y00 z00 z)) ?x447 ?x522 (* 18 (* x00 z00)) ?x538 ?x590 ?x642 ?x1076 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x516 (* (- 6) (* z00 y)) ?x71 ?x573 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x1300 (+ (* (- 6) ?x768) ?x446 ?x457 (* (- 12) ?x1070) (* 18 (* y00 z00)) ?x64 ?x516 (* (- 6) (* z00 z)) ?x71 ?x573 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x786 (* (- 1) ?x353)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x786 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1300 0) (= ?x1005 0) (= ?x931 0) (= ?x1516 0) (not (= ?x1652 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x942 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x2109 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2085 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2028 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2013 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1979 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1947 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1931 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1908 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1885 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1868 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1821 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1748 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1712 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1678 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1662 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1630 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1622 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1608 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1592 (* x00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1585 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1575 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1549 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1537 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1329 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1156 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1144 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1104 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1051 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1030 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x992 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x981 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x939 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x845 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x700 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x689 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x669 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x652 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x527 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x504 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x392 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x368 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x317 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1668 (+ (* 6 ?x317) (* (- 12) ?x368) (* (- 1) ?x392) (* 72 ?x504) (* (- 72) ?x527) ?x652 (* (- 72) ?x669) (* 108 ?x689) ?x700 (* (- 108) ?x845) (* 6 ?x939) (* 6 ?x981) (* (- 18) ?x992) (* (- 108) ?x1030) (* 12 ?x1051) (* (- 108) ?x1104) (* 72 ?x1144) (* (- 1) ?x1156) (* (- 6) ?x1329) (* 72 ?x1373) (* (- 108) ?x1537) (* 6 ?x1549) (* 72 ?x1575) (* 108 ?x1585) (* 108 ?x1592) (* (- 6) ?x1608) (* (- 6) ?x1622) (* (- 6) ?x1630) (* (- 72) ?x1662) (* (- 6) ?x1678) (* 18 ?x1712) (* (- 1) ?x1748) (* (- 18) ?x1821) (* (- 12) ?x1868) (* 12 ?x1885) (* (- 6) ?x1908) (* 18 ?x1931) (* 6 ?x1947) (* (- 72) ?x1962) ?x1979 (* 108 ?x2013) (* (- 1) ?x2028) ?x2085 (* 6 ?x2109))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x1176 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1172 (* z00 z00 z00 y00)))
 (let ((?x1082 (* (- 36) (* z00 y00 x00))))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x881 (* z00 z00 x00)))
 (let ((?x1132 (* (- 18) ?x881)))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x753 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x695 (* z00 z00 y00)))
 (let ((?x1233 (* (- 10) ?x695)))
 (let ((?x670 (* z00 y00 y00)))
 (let ((?x705 (* (- 12) ?x670)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x531 (* z00 x00)))
 (let ((?x449 (* 36 ?x531)))
 (let ((?x494 (* z00 y00)))
 (let ((?x859 (* 24 ?x494)))
 (let ((?x441 (* y00 x00)))
 (let ((?x432 (* 216 ?x441)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1299 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x432 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x859 ?x449 ?x780 ?x1032 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x705 ?x1233 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x753 ?x785 ?x837 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1132 (* (- 216) (* x y00)) ?x967 (* (- 12) (* y y y00)) ?x1082 (* (- 216) (* x x00)) ?x1172 ?x1176 (* 36 (* x z00 y00)) ?x1279)))
 (let (($x1304 (= ?x1299 0)))
 (let ((?x882 (* 3 ?x881)))
 (let ((?x944 (* 3 ?x695)))
 (let ((?x677 (* (- 1) ?x670)))
 (let ((?x607 (* 18 (* z x00))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x769 (* (- 6) ?x494)))
 (let ((?x468 (* z y00)))
 (let ((?x469 (* 12 ?x468)))
 (let ((?x502 (* (- 18) (* x z))))
 (let ((?x442 (* (- 18) ?x441)))
 (let ((?x437 (* y z)))
 (let ((?x461 (* (- 12) ?x437)))
 (let ((?x135 (* y y z)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1000 (+ ?x64 ?x71 ?x516 ?x573 (* (- 3) (* y z00 z00)) ?x135 ?x461 ?x442 (* (- 18) (* x y)) ?x502 ?x469 ?x769 ?x864 ?x607 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x677 ?x944 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x882 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1007 (= ?x1000 0)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x532 (* 18 ?x531)))
 (let ((?x610 (* 6 ?x494)))
 (let ((?x103 (* y z z00)))
 (let ((?x749 (+ ?x64 ?x71 ?x516 ?x573 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x461 ?x502 ?x469 ?x610 ?x532 ?x538 ?x590 ?x607 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x695 (* (- 18) (* x z00)))))
 (let (($x754 (= ?x749 0)))
 (let ((?x495 (* 18 ?x494)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x589 (+ ?x64 ?x71 ?x516 ?x446 ?x573 ?x76 ?x457 (* (- 6) ?x437) (* (- 12) ?x468) ?x495 (* (- 6) (* z z00)))))
 (let (($x594 (= ?x589 0)))
 (let ((?x424 (* (- 12) y00)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x427 (= (+ ?x45 ?x46 ?x423 ?x424 (* (- 1) (* z z)) ?x353) 0)))
 (let (($x345 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x1560 (and $x345 $x427 $x594 $x754 $x1007 $x1304 (not (= ?x1668 0)))))
 (let ((?x1652 (+ (* (- 1) ?x652) (* (- 108) ?x689) (* 18 ?x992) (* 108 ?x845) (* (- 72) ?x504) (* (- 12) ?x1885) (* (- 72) ?x1144) (* (- 12) ?x1051) ?x1156 (* 72 ?x527) (* 12 ?x368) ?x392 (* (- 6) ?x317) (* 108 ?x1030) (* (- 1) ?x700) (* (- 72) ?x1575) (* 6 ?x1608) (* 108 ?x1104) (* (- 6) ?x981) (* 6 ?x1329) ?x1748 (* (- 6) ?x939) (* 72 ?x669) (* (- 18) ?x1712) (* (- 108) ?x1585) ?x2028 (* (- 18) ?x1931) (* (- 6) ?x2109) (* 12 ?x1868) (* 6 ?x1678) (* 72 ?x1662) (* (- 108) ?x2013) (* (- 108) ?x1592) (* (- 6) ?x1549) (* 18 ?x1821) (* (- 1) ?x2085) (* 6 ?x1908) (* 6 ?x1630) (* 6 ?x1622) (* (- 72) ?x1373) (* 108 ?x1537) (* (- 1) ?x1979) (* 72 ?x1962) (* (- 6) ?x1947))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1516 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x642 (* 18 (* x00 z))))
 (let ((?x768 (* z y)))
 (let ((?x447 (* (- 12) ?x768)))
 (let ((?x1070 (* y00 z)))
 (let ((?x1076 (* 12 ?x1070)))
 (let ((?x522 (* (- 18) (* z x))))
 (let ((?x931 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x522 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1076 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x447 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x864 ?x642 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x516 (* 18 (* y00 x)) ?x71 ?x573 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1005 (+ (* (- 1) (* y00 z00 z)) ?x447 ?x522 (* 18 (* x00 z00)) ?x538 ?x590 ?x642 ?x1076 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x516 (* (- 6) (* z00 y)) ?x71 ?x573 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x1300 (+ (* (- 6) ?x768) ?x446 ?x457 (* (- 12) ?x1070) (* 18 (* y00 z00)) ?x64 ?x516 (* (- 6) (* z00 z)) ?x71 ?x573 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x786 (* (- 1) ?x353)))
 (let (($x688 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x786 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1300 0) (= ?x1005 0) (= ?x931 0) (= ?x1516 0) (not (= ?x1652 0)))))
 (rewrite (= $x688 $x1560))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x300 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x218 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x294 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x292 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x290 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x288 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x286 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x284 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x283 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x282 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x280 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00 z00)))
 (let ((?x278 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00)))
 (let ((?x274 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x273 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x272 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x270 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x269 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x268 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x265 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x264 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x262 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x259 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x258 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x256 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x254 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x252 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x251 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x249 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x247 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x246 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x243 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x242 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x240 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x238 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x236 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x235 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x234 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x233 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x228 (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x227 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x226 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x225 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218)))
 (let ((?x223 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x222 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x220 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x29 (- 1)))
 (let ((?x219 (* ?x29 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x237 (+ (- (- (- (- (+ (- ?x219 ?x220) ?x222 ?x223) ?x225) ?x226) ?x227) ?x228) ?x233 ?x234 ?x235 ?x236)))
 (let ((?x253 (+ (- (+ (- (- (+ (- ?x237 ?x238) ?x240) ?x242) ?x243) ?x246 ?x247) ?x249) ?x251 ?x252)))
 (let ((?x267 (- (- (+ (- (- (+ (- ?x253 ?x254) ?x256) ?x258) ?x259) ?x262) ?x264) ?x265)))
 (let ((?x281 (- (+ (- (- (- (+ ?x267 ?x268 ?x269 ?x270) ?x272) ?x273) ?x274) ?x278) ?x280)))
 (let ((?x295 (- (+ (- (+ (- (+ ?x281 ?x282 ?x283 ?x284) ?x286) ?x288) ?x290) ?x292) ?x294)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* ?x29 z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x295 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1135 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x1947 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1979 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1537 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1622 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1630 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1908 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2085 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1821 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1549 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1592 (* x00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2013 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1662 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1678 (* z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1868 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2109 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1931 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2028 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1585 (* x00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1712 (* y00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x669 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x939 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1748 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1329 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x981 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1104 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1608 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1575 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x700 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1030 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x317 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x392 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x368 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x527 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1156 (* z00 z00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1051 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1144 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1885 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x504 (* y00 ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x845 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x992 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x689 (* ?x462 ?x462 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x652 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x448 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1652 (+ (* (- 1) ?x652) (* (- 108) ?x689) (* 18 ?x992) (* 108 ?x845) (* (- 72) ?x504) (* (- 12) ?x1885) (* (- 72) ?x1144) (* (- 12) ?x1051) ?x1156 (* 72 ?x527) (* 12 ?x368) ?x392 (* (- 6) ?x317) (* 108 ?x1030) (* (- 1) ?x700) (* (- 72) ?x1575) (* 6 ?x1608) (* 108 ?x1104) (* (- 6) ?x981) (* 6 ?x1329) ?x1748 (* (- 6) ?x939) (* 72 ?x669) (* (- 18) ?x1712) (* (- 108) ?x1585) ?x2028 (* (- 18) ?x1931) (* (- 6) ?x2109) (* 12 ?x1868) (* 6 ?x1678) (* 72 ?x1662) (* (- 108) ?x2013) (* (- 108) ?x1592) (* (- 6) ?x1549) (* 18 ?x1821) (* (- 1) ?x2085) (* 6 ?x1908) (* 6 ?x1630) (* 6 ?x1622) (* (- 72) ?x1373) (* 108 ?x1537) (* (- 1) ?x1979) (* 72 ?x1962) (* (- 6) ?x1947))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x837 (* (- 4) (* y y y))))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x1516 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x642 (* 18 (* x00 z))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x768 (* z y)))
 (let ((?x447 (* (- 12) ?x768)))
 (let ((?x1070 (* y00 z)))
 (let ((?x1076 (* 12 ?x1070)))
 (let ((?x522 (* (- 18) (* z x))))
 (let ((?x931 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x522 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1076 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x447 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x864 ?x642 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x516 (* 18 (* y00 x)) ?x71 ?x573 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x1005 (+ (* (- 1) (* y00 z00 z)) ?x447 ?x522 (* 18 (* x00 z00)) ?x538 ?x590 ?x642 ?x1076 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x516 (* (- 6) (* z00 y)) ?x71 ?x573 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x1300 (+ (* (- 6) ?x768) ?x446 ?x457 (* (- 12) ?x1070) (* 18 (* y00 z00)) ?x64 ?x516 (* (- 6) (* z00 z)) ?x71 ?x573 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x786 (* (- 1) ?x353)))
 (let (($x688 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x786 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1300 0) (= ?x1005 0) (= ?x931 0) (= ?x1516 0) (not (= ?x1652 0)))))
 (let ((?x218 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x294 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x292 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x290 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x288 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x286 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x284 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x283 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x282 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x280 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00 z00)))
 (let ((?x278 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00)))
 (let ((?x274 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x273 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x272 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x270 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x269 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x268 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x265 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x264 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x262 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x259 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x258 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x256 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x254 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x252 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x251 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x249 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x247 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x246 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x243 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x242 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x240 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x238 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x236 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x235 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x234 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x233 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x228 (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x227 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x226 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x225 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218)))
 (let ((?x223 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x222 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x220 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x29 (- 1)))
 (let ((?x219 (* ?x29 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x237 (+ (- (- (- (- (+ (- ?x219 ?x220) ?x222 ?x223) ?x225) ?x226) ?x227) ?x228) ?x233 ?x234 ?x235 ?x236)))
 (let ((?x253 (+ (- (+ (- (- (+ (- ?x237 ?x238) ?x240) ?x242) ?x243) ?x246 ?x247) ?x249) ?x251 ?x252)))
 (let ((?x267 (- (- (+ (- (- (+ (- ?x253 ?x254) ?x256) ?x258) ?x259) ?x262) ?x264) ?x265)))
 (let ((?x281 (- (+ (- (- (- (+ ?x267 ?x268 ?x269 ?x270) ?x272) ?x273) ?x274) ?x278) ?x280)))
 (let ((?x295 (- (+ (- (+ (- (+ ?x281 ?x282 ?x283 ?x284) ?x286) ?x288) ?x290) ?x292) ?x294)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* ?x29 z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x299 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x295 0))))))
 (rewrite (= $x299 $x688)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x301 (asserted $x300)))
 (let ((@x1621 (mp (mp @x301 (quant-intro (proof-bind ?x1135) (= $x300 $x748)) $x748) (rewrite (= $x748 $x748)) $x748)))
 (let ((@x702 (mp~ (mp @x1621 (quant-intro (proof-bind ?x942) (= $x748 $x961)) $x961) (sk (~ $x961 $x679)) $x679)))
 (let ((@x1063 (mp @x702 (rewrite (= $x679 $x1235)) $x1235)))
 (let ((@x989 (and-elim @x1063 $x982)))
 (let ((@x1217 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x982) $x537)) @x989 $x537)))
 (let (($x547 (>= ?x1209 0)))
 (let ((@x901 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x982) $x547)) @x989 $x547)))
 (let (($x976 (<= ?x657 0)))
 (let ((@x997 (and-elim @x1063 $x658)))
 (let ((@x1898 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x658) $x976)) @x997 $x976)))
 (let (($x666 (>= ?x657 0)))
 (let ((@x510 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x658) $x666)) @x997 $x666)))
 (let (($x326 (<= ?x428 0)))
 (let ((@x1899 (and-elim @x1063 $x1105)))
 (let ((@x1120 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1105) $x326)) @x1899 $x326)))
 (let (($x1725 (>= ?x428 0)))
 (let ((@x1582 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1105) $x1725)) @x1899 $x1725)))
 (let (($x545 (<= ?x1511 0)))
 (let ((@x1439 (and-elim @x1063 $x1443)))
 (let ((@x988 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1443) $x545)) @x1439 $x545)))
 (let (($x536 (>= ?x1511 0)))
 (let ((@x876 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1443) $x536)) @x1439 $x536)))
 (let (($x530 (<= ?x1188 0)))
 (let ((@x1011 (and-elim @x1063 $x790)))
 (let ((@x1062 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x790) $x530)) @x1011 $x530)))
 (let (($x602 (>= ?x1188 0)))
 (let ((@x1687 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x790) $x602)) @x1011 $x602)))
 (let (($x867 (<= ?x789 0)))
 (let ((@x1226 (and-elim @x1063 $x501)))
 (let ((@x434 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x501) $x867)) @x1226 $x867)))
 (let (($x472 (>= ?x789 0)))
 (let ((@x1229 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x501) $x472)) @x1226 $x472)))
 (let (($x892 (not (<= ?x1044 0))))
 (let (($x772 (>= ?x1044 0)))
 (let ((@x1189 ((_ th-lemma arith) (hypothesis (not $x772)) @x1229 @x434 @x1229 @x434 @x1687 @x1062 @x1229 @x434 @x901 @x1217 @x1687 @x1062 @x876 @x988 @x901 @x1217 @x1582 @x1120 @x510 @x1898 @x901 @x1217 false)))
 (let ((@x1354 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1064 $x892 (not $x772))) (and-elim @x1063 $x1060) (or $x892 (not $x772)))))
 ((_ th-lemma arith) (unit-resolution @x1354 (lemma @x1189 $x772) $x892) @x1229 @x434 @x1229 @x434 @x1687 @x1062 @x1229 @x434 @x901 @x1217 @x1687 @x1062 @x876 @x988 @x901 @x1217 @x1582 @x1120 @x510 @x1898 @x901 @x1217 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        28
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             796
 :arith-nonlinear-bounds    20
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      8
 :arith-tableau-max-columns 140
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                54.25
 :memory                    19.51
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                309515221360.00
 :num-checks                1
 :propagations              14
 :rlimit-count              7626192
 :time                      14.72
 :total-time                14.74)
