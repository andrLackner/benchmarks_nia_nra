unsat
((set-logic NIA)
(declare-fun x!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x704 (+ y00 x00 (* (- 1) y!0) (* (- 1) x!1))))
 (let (($x696 (<= ?x704 0)))
 (let (($x886 (= ?x704 0)))
 (let ((?x184 (* (- 8) (* x00 y!0 x!1))))
 (let ((?x1804 (* y!0 y!0 y!0 y!0)))
 (let ((?x1806 (* (- 1) ?x1804)))
 (let ((?x1419 (+ 1 y!0)))
 (let ((?x1476 (+ (- 1) x!1)))
 (let ((?x1506 (* ?x1476 ?x1476 ?x1476 ?x1419 ?x1419 ?x1419)))
 (let ((?x1357 (* y!0 y!0 y!0)))
 (let ((?x183 (* (- 3) ?x1357)))
 (let ((?x243 (* 2 (* y00 x!1 x!1))))
 (let ((?x181 (* 3 (* y00 y!0 y!0 x!1 x!1))))
 (let ((?x908 (* x!1 x!1)))
 (let ((?x856 (* 2 ?x908)))
 (let ((?x905 (* x!1 x!1 x!1)))
 (let ((?x182 (* (- 1) ?x905)))
 (let ((?x168 (* (- 2) x!1)))
 (let ((?x167 (* 6 (* x00 y!0 y!0))))
 (let ((?x110 (* (- 2) (* x00 y!0 y!0 y!0 x!1))))
 (let ((?x761 (* x00 y!0 y!0 y!0 x!1 x!1)))
 (let ((?x180 (* (- 2) (* y00 y!0 y!0 y!0 x!1))))
 (let ((?x719 (* y!0 x!1 x!1)))
 (let ((?x106 (* (- 2) y!0)))
 (let ((?x107 (* 3 (* x00 y!0 y!0 x!1 x!1))))
 (let ((?x366 (* 6 (* y00 y!0 y!0))))
 (let ((?x463 (* 2 (* x00 x!1 x!1))))
 (let ((?x541 (* y00 y!0 y!0 y!0 x!1 x!1)))
 (let ((?x104 (* (- 1) (* y!0 y!0 x!1))))
 (let ((?x361 (* y!0 y!0)))
 (let ((?x857 (* (- 4) ?x361)))
 (let ((?x97 (* (- 8) (* y00 y!0 x!1))))
 (let ((?x689 (* 3 x00)))
 (let ((?x142 (* 3 y00)))
 (let ((?x855 (+ ?x142 ?x689 (* 2 (* x00 y!0 y!0 y!0)) ?x97 (* 4 (* x00 y!0 x!1 x!1)) ?x857 (* 4 (* y00 y!0 x!1 x!1)) (* (- 4) (* y00 x!1)) (* 2 (* y00 y!0 y!0 y!0)) ?x104 ?x541 (* (- 1) (* y!0 x!1 x!1 x!1)) (* (- 1) (* y!0 y!0 x!1 x!1)) (* (- 6) (* y00 y!0 y!0 x!1)) (* 7 (* x00 y!0)) ?x463 ?x366 (* (- 2) (* y!0 x!1)) ?x107 (* (- 1) (* y!0 y!0 y!0 x!1)) ?x106 (* (- 6) (* x00 y!0 y!0 x!1)) ?x719 ?x180 ?x761 ?x110 ?x167 ?x168 ?x182 ?x856 ?x181 ?x243 ?x183 (* (- 4) (* x00 x!1)) (* (- 1) (* ?x1476 ?x1476 ?x1419 ?x1419 ?x1419 ?x1419)) (* (- 1) ?x1506) (* 7 (* y00 y!0)) ?x1806 ?x184)))
 (let (($x1268 (= ?x855 0)))
 (let (($x231 (not $x1268)))
 (let ((?x1355 (* (- 2) ?x908)))
 (let ((?x849 (+ 1 x!1)))
 (let ((?x893 (+ (- 1) y!0)))
 (let ((?x848 (* ?x893 ?x893 ?x893 ?x849 ?x849 ?x849)))
 (let ((?x836 (* ?x893 ?x893 ?x893 ?x893 ?x849 ?x849)))
 (let ((?x642 (* y!0 y!0 y!0 x!1)))
 (let ((?x569 (* y!0 y!0 x!1 x!1)))
 (let ((?x560 (* y!0 x!1 x!1 x!1)))
 (let ((?x274 (* 4 ?x361)))
 (let ((?x170 (+ ?x142 ?x689 (* (- 2) (* x00 y!0 y!0 y!0)) ?x97 (* (- 4) (* x00 y!0 x!1 x!1)) ?x274 (* (- 4) (* y00 y!0 x!1 x!1)) (* 4 (* y00 x!1)) (* (- 2) (* y00 y!0 y!0 y!0)) ?x104 (* (- 1) ?x541) ?x560 ?x569 (* 6 (* y00 y!0 y!0 x!1)) (* (- 7) (* x00 y!0)) ?x463 ?x366 (* 2 (* y!0 x!1)) ?x107 ?x642 ?x106 (* 6 (* x00 y!0 y!0 x!1)) ?x719 ?x180 (* (- 1) ?x761) ?x110 ?x167 ?x836 ?x848 ?x168 ?x182 ?x1355 ?x181 ?x243 ?x183 (* 4 (* x00 x!1)) (* (- 7) (* y00 y!0)) ?x1804 ?x184)))
 (let (($x169 (= ?x170 0)))
 (let (($x468 (or (not $x169) $x231)))
 (let (($x212 (and $x886 $x468)))
 (let ((?x1401 (* x!1 y!0 y!0 y!0)))
 (let ((?x254 (* 3 ?x1357)))
 (let ((?x1805 (* (- 3) (* x!1 x!1 y!0 y!0 y00))))
 (let ((?x227 (* 2 (* x!1 y!0 y!0 y!0 y00))))
 (let ((?x907 (* x!1 x!1 y!0 y!0)))
 (let ((?x858 (* x!1 y!0 y!0)))
 (let ((?x884 (* x!1 x!1 x!1 y!0)))
 (let ((?x993 (* (- 1) (* x!1 x!1 y!0))))
 (let ((?x1477 (* ?x1476 ?x1476 ?x1419 ?x1419 ?x1419 ?x1419)))
 (let ((?x93 (* 2 (* x!1 y!0 y!0 y!0 x00))))
 (let ((?x897 (* (- 3) (* x!1 x!1 y!0 y!0 x00))))
 (let ((?x894 (* (- 6) (* y!0 y!0 x00))))
 (let ((?x846 (* 8 (* x!1 y!0 x00))))
 (let ((?x882 (* (- 2) (* x!1 x!1 x00))))
 (let ((?x834 (* (- 6) (* y!0 y!0 y00))))
 (let ((?x756 (* (- 2) (* x!1 x!1 y00))))
 (let ((?x1539 (* 8 (* x!1 y!0 y00))))
 (let ((?x1162 (* (- 3) x00)))
 (let ((?x1161 (* (- 3) y00)))
 (let ((?x1203 (* 2 y!0)))
 (let ((?x615 (* 2 x!1)))
 (let ((?x1095 (+ ?x615 ?x1203 ?x1161 ?x1162 (* (- 7) (* y!0 y00)) ?x1539 (* (- 4) (* x!1 x!1 y!0 y00)) (* 4 (* x!1 y00)) ?x756 ?x834 (* (- 2) (* y!0 y!0 y!0 y00)) (* 4 (* x!1 x00)) ?x882 (* (- 7) (* y!0 x00)) ?x846 (* (- 4) (* x!1 x!1 y!0 x00)) ?x894 (* (- 2) (* y!0 y!0 y!0 x00)) (* 6 (* x!1 y!0 y!0 x00)) ?x897 ?x93 (* (- 1) (* x!1 x!1 y!0 y!0 y!0 x00)) ?x1477 ?x993 (* 2 (* x!1 y!0)) ?x884 ?x1355 ?x905 ?x1506 ?x274 ?x858 ?x907 ?x227 (* (- 1) (* x!1 x!1 y!0 y!0 y!0 y00)) (* 6 (* x!1 y!0 y!0 y00)) ?x1805 ?x254 ?x1401 ?x1804)))
 (let ((?x362 (* x!1 x!1 y!0 y!0 y!0 y00)))
 (let ((?x852 (* x!1 x!1 y!0 y!0 y!0 x00)))
 (let ((?x655 (+ ?x615 ?x1203 ?x1161 ?x1162 (* 7 (* y!0 y00)) ?x1539 (* 4 (* x!1 x!1 y!0 y00)) (* (- 4) (* x!1 y00)) ?x756 ?x834 (* 2 (* y!0 y!0 y!0 y00)) (* (- 4) (* x!1 x00)) ?x882 (* 7 (* y!0 x00)) ?x846 (* 4 (* x!1 x!1 y!0 x00)) ?x894 (* (- 1) ?x836) (* 2 (* y!0 y!0 y!0 x00)) (* (- 1) ?x848) (* (- 6) (* x!1 y!0 y!0 x00)) ?x897 ?x93 ?x852 ?x993 (* (- 2) (* x!1 y!0)) (* (- 1) ?x884) ?x856 ?x905 ?x857 ?x858 (* (- 1) ?x907) ?x227 ?x362 (* (- 6) (* x!1 y!0 y!0 y00)) ?x1805 ?x254 (* (- 1) ?x1401) ?x1806)))
 (let (($x273 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x655 0)) (not (= ?x1095 0))))))
 (let (($x1151 (exists ((x Int) (y Int) )(! (let ((?x1075 (* y y y y)))
 (let ((?x974 (* x y y y)))
 (let ((?x1188 (* 3 (* y y y))))
 (let ((?x1187 (* (- 3) (* x x y y y00))))
 (let ((?x874 (* x x y y y y00)))
 (let ((?x1185 (* (- 1) ?x874)))
 (let ((?x1184 (* 2 (* x y y y y00))))
 (let ((?x726 (* x x y y)))
 (let ((?x724 (* x y y)))
 (let ((?x720 (* y y)))
 (let ((?x1183 (* 4 ?x720)))
 (let ((?x111 (+ 1 y)))
 (let ((?x103 (+ (- 1) x)))
 (let ((?x614 (* ?x103 ?x103 ?x103 ?x111 ?x111 ?x111)))
 (let ((?x559 (* x x x)))
 (let ((?x552 (* x x)))
 (let ((?x577 (* (- 2) ?x552)))
 (let ((?x540 (* x x x y)))
 (let ((?x538 (* x y)))
 (let ((?x578 (* 2 ?x538)))
 (let ((?x542 (* (- 1) (* x x y))))
 (let ((?x520 (* ?x103 ?x103 ?x111 ?x111 ?x111 ?x111)))
 (let ((?x477 (* x x y y y x00)))
 (let ((?x1182 (* (- 1) ?x477)))
 (let ((?x1181 (* 2 (* x y y y x00))))
 (let ((?x1180 (* (- 3) (* x x y y x00))))
 (let ((?x307 (* y y y x00)))
 (let ((?x1178 (* (- 2) ?x307)))
 (let ((?x1177 (* (- 6) (* y y x00))))
 (let ((?x246 (* x x y x00)))
 (let ((?x1176 (* (- 4) ?x246)))
 (let ((?x241 (* x y x00)))
 (let ((?x1343 (* 8 ?x241)))
 (let ((?x234 (* y x00)))
 (let ((?x1174 (* (- 7) ?x234)))
 (let ((?x1173 (* (- 2) (* x x x00))))
 (let ((?x172 (* y y y y00)))
 (let ((?x1171 (* (- 2) ?x172)))
 (let ((?x1170 (* (- 6) (* y y y00))))
 (let ((?x1169 (* (- 2) (* x x y00))))
 (let ((?x133 (* x x y y00)))
 (let ((?x1167 (* (- 4) ?x133)))
 (let ((?x131 (* x y y00)))
 (let ((?x1630 (* 8 ?x131)))
 (let ((?x127 (* y y00)))
 (let ((?x1164 (* (- 7) ?x127)))
 (let ((?x1162 (* (- 3) x00)))
 (let ((?x1161 (* (- 3) y00)))
 (let ((?x757 (* 2 y)))
 (let ((?x573 (* 2 x)))
 (let ((?x2130 (+ ?x573 ?x757 ?x1161 ?x1162 ?x1164 ?x1630 ?x1167 (* 4 (* x y00)) ?x1169 ?x1170 ?x1171 (* 4 (* x x00)) ?x1173 ?x1174 ?x1343 ?x1176 ?x1177 ?x1178 (* 6 (* x y y x00)) ?x1180 ?x1181 ?x1182 ?x520 ?x542 ?x578 ?x540 ?x577 ?x559 ?x614 ?x1183 ?x724 ?x726 ?x1184 ?x1185 (* 6 (* x y y y00)) ?x1187 ?x1188 ?x974 ?x1075)))
 (let ((?x1132 (* (- 1) ?x1075)))
 (let ((?x1025 (* (- 1) ?x974)))
 (let ((?x898 (* x y y y00)))
 (let ((?x1618 (* (- 6) ?x898)))
 (let ((?x784 (* (- 1) ?x726)))
 (let ((?x1139 (* (- 4) ?x720)))
 (let ((?x667 (* 2 ?x552)))
 (let ((?x602 (* (- 1) ?x540)))
 (let ((?x664 (* (- 2) ?x538)))
 (let ((?x416 (* x y y x00)))
 (let ((?x1329 (* (- 6) ?x416)))
 (let ((?x117 (+ 1 x)))
 (let ((?x164 (+ (- 1) y)))
 (let ((?x300 (* (- 1) (* ?x164 ?x164 ?x164 ?x117 ?x117 ?x117))))
 (let ((?x514 (* 2 ?x307)))
 (let ((?x873 (* (- 1) (* ?x164 ?x164 ?x164 ?x164 ?x117 ?x117))))
 (let ((?x511 (* 4 ?x246)))
 (let ((?x508 (* 7 ?x234)))
 (let ((?x225 (* x x00)))
 (let ((?x1341 (* (- 4) ?x225)))
 (let ((?x950 (* 2 ?x172)))
 (let ((?x141 (* x y00)))
 (let ((?x1631 (* (- 4) ?x141)))
 (let ((?x946 (* 4 ?x133)))
 (let ((?x1480 (+ ?x573 ?x757 ?x1161 ?x1162 (* 7 ?x127) ?x1630 ?x946 ?x1631 ?x1169 ?x1170 ?x950 ?x1341 ?x1173 ?x508 ?x1343 ?x511 ?x1177 ?x873 ?x514 ?x300 ?x1329 ?x1180 ?x1181 ?x477 ?x542 ?x664 ?x602 ?x667 ?x559 ?x1139 ?x724 ?x784 ?x1184 ?x874 ?x1618 ?x1187 ?x1188 ?x1025 ?x1132)))
 (let (($x113 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x113 (or (not (= ?x1480 0)) (not (= ?x2130 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x1138 (exists ((x Int) (y Int) )(! (let ((?x735 (* (- 1) (* (+ 1 y) (+ 1 y) (+ 1 y) (+ 1 y)))))
 (let ((?x311 (* (- 1) (* (+ (- 1) x) (+ 1 y) (+ 1 y) (+ 1 y)))))
 (let ((?x111 (+ 1 y)))
 (let ((?x103 (+ (- 1) x)))
 (let ((?x708 (+ (* y00 ?x103 ?x103 ?x111) (* y00 ?x111 ?x111 ?x111) (* x00 ?x103 ?x103 ?x111) (* x00 ?x111 ?x111 ?x111) (* x00 ?x103 ?x103 ?x111 ?x111 ?x111) (* (- 1) (* ?x103 ?x103 ?x111 ?x111 ?x111 ?x111)) (* (- 1) (* ?x103 ?x103 ?x103 ?x111 ?x111 ?x111)) (* (- 1) (* ?x103 ?x103 ?x103 ?x111)) (* (- 1) (* ?x103 ?x103 ?x111 ?x111)) (* y00 ?x103 ?x103 ?x111 ?x111 ?x111) ?x311 ?x735)))
 (let ((?x570 (* (- 1) (* (+ (- 1) y) (+ (- 1) y) (+ (- 1) y) (+ (- 1) y)))))
 (let ((?x558 (* (- 1) (* (+ (- 1) y) (+ (- 1) y) (+ (- 1) y) (+ 1 x)))))
 (let ((?x117 (+ 1 x)))
 (let ((?x164 (+ (- 1) y)))
 (let ((?x300 (* (- 1) (* ?x164 ?x164 ?x164 ?x117 ?x117 ?x117))))
 (let ((?x873 (* (- 1) (* ?x164 ?x164 ?x164 ?x164 ?x117 ?x117))))
 (let ((?x526 (+ (* y00 ?x164 ?x117 ?x117) (* y00 ?x164 ?x164 ?x164) (* x00 ?x164 ?x117 ?x117) (* x00 ?x164 ?x164 ?x164) (* x00 ?x164 ?x164 ?x164 ?x117 ?x117) ?x873 ?x300 (* (- 1) (* ?x164 ?x117 ?x117 ?x117)) (* (- 1) (* ?x164 ?x164 ?x117 ?x117)) (* y00 ?x164 ?x164 ?x164 ?x117 ?x117) ?x558 ?x570)))
 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x526 0)) (not (= ?x708 0)))))))))))))))) :qid k!27))
 ))
 (let ((?x1134 (lambda ((x Int) (y Int) )(let ((?x1075 (* y y y y)))
 (let ((?x974 (* x y y y)))
 (let ((?x1188 (* 3 (* y y y))))
 (let ((?x1187 (* (- 3) (* x x y y y00))))
 (let ((?x874 (* x x y y y y00)))
 (let ((?x1185 (* (- 1) ?x874)))
 (let ((?x1184 (* 2 (* x y y y y00))))
 (let ((?x726 (* x x y y)))
 (let ((?x724 (* x y y)))
 (let ((?x720 (* y y)))
 (let ((?x1183 (* 4 ?x720)))
 (let ((?x111 (+ 1 y)))
 (let ((?x103 (+ (- 1) x)))
 (let ((?x614 (* ?x103 ?x103 ?x103 ?x111 ?x111 ?x111)))
 (let ((?x559 (* x x x)))
 (let ((?x552 (* x x)))
 (let ((?x577 (* (- 2) ?x552)))
 (let ((?x540 (* x x x y)))
 (let ((?x538 (* x y)))
 (let ((?x578 (* 2 ?x538)))
 (let ((?x542 (* (- 1) (* x x y))))
 (let ((?x520 (* ?x103 ?x103 ?x111 ?x111 ?x111 ?x111)))
 (let ((?x477 (* x x y y y x00)))
 (let ((?x1182 (* (- 1) ?x477)))
 (let ((?x1181 (* 2 (* x y y y x00))))
 (let ((?x1180 (* (- 3) (* x x y y x00))))
 (let ((?x307 (* y y y x00)))
 (let ((?x1178 (* (- 2) ?x307)))
 (let ((?x1177 (* (- 6) (* y y x00))))
 (let ((?x246 (* x x y x00)))
 (let ((?x1176 (* (- 4) ?x246)))
 (let ((?x241 (* x y x00)))
 (let ((?x1343 (* 8 ?x241)))
 (let ((?x234 (* y x00)))
 (let ((?x1174 (* (- 7) ?x234)))
 (let ((?x1173 (* (- 2) (* x x x00))))
 (let ((?x172 (* y y y y00)))
 (let ((?x1171 (* (- 2) ?x172)))
 (let ((?x1170 (* (- 6) (* y y y00))))
 (let ((?x1169 (* (- 2) (* x x y00))))
 (let ((?x133 (* x x y y00)))
 (let ((?x1167 (* (- 4) ?x133)))
 (let ((?x131 (* x y y00)))
 (let ((?x1630 (* 8 ?x131)))
 (let ((?x127 (* y y00)))
 (let ((?x1164 (* (- 7) ?x127)))
 (let ((?x1162 (* (- 3) x00)))
 (let ((?x1161 (* (- 3) y00)))
 (let ((?x757 (* 2 y)))
 (let ((?x573 (* 2 x)))
 (let ((?x2130 (+ ?x573 ?x757 ?x1161 ?x1162 ?x1164 ?x1630 ?x1167 (* 4 (* x y00)) ?x1169 ?x1170 ?x1171 (* 4 (* x x00)) ?x1173 ?x1174 ?x1343 ?x1176 ?x1177 ?x1178 (* 6 (* x y y x00)) ?x1180 ?x1181 ?x1182 ?x520 ?x542 ?x578 ?x540 ?x577 ?x559 ?x614 ?x1183 ?x724 ?x726 ?x1184 ?x1185 (* 6 (* x y y y00)) ?x1187 ?x1188 ?x974 ?x1075)))
 (let ((?x1132 (* (- 1) ?x1075)))
 (let ((?x1025 (* (- 1) ?x974)))
 (let ((?x898 (* x y y y00)))
 (let ((?x1618 (* (- 6) ?x898)))
 (let ((?x784 (* (- 1) ?x726)))
 (let ((?x1139 (* (- 4) ?x720)))
 (let ((?x667 (* 2 ?x552)))
 (let ((?x602 (* (- 1) ?x540)))
 (let ((?x664 (* (- 2) ?x538)))
 (let ((?x416 (* x y y x00)))
 (let ((?x1329 (* (- 6) ?x416)))
 (let ((?x117 (+ 1 x)))
 (let ((?x164 (+ (- 1) y)))
 (let ((?x300 (* (- 1) (* ?x164 ?x164 ?x164 ?x117 ?x117 ?x117))))
 (let ((?x514 (* 2 ?x307)))
 (let ((?x873 (* (- 1) (* ?x164 ?x164 ?x164 ?x164 ?x117 ?x117))))
 (let ((?x511 (* 4 ?x246)))
 (let ((?x508 (* 7 ?x234)))
 (let ((?x225 (* x x00)))
 (let ((?x1341 (* (- 4) ?x225)))
 (let ((?x950 (* 2 ?x172)))
 (let ((?x141 (* x y00)))
 (let ((?x1631 (* (- 4) ?x141)))
 (let ((?x946 (* 4 ?x133)))
 (let ((?x1480 (+ ?x573 ?x757 ?x1161 ?x1162 (* 7 ?x127) ?x1630 ?x946 ?x1631 ?x1169 ?x1170 ?x950 ?x1341 ?x1173 ?x508 ?x1343 ?x511 ?x1177 ?x873 ?x514 ?x300 ?x1329 ?x1180 ?x1181 ?x477 ?x542 ?x664 ?x602 ?x667 ?x559 ?x1139 ?x724 ?x784 ?x1184 ?x874 ?x1618 ?x1187 ?x1188 ?x1025 ?x1132)))
 (let (($x113 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x1472 (and $x113 (or (not (= ?x1480 0)) (not (= ?x2130 0))))))
 (let ((?x708 (+ (* y00 ?x103 ?x103 ?x111) (* y00 ?x111 ?x111 ?x111) (* x00 ?x103 ?x103 ?x111) (* x00 ?x111 ?x111 ?x111) (* x00 ?x103 ?x103 ?x111 ?x111 ?x111) (* (- 1) ?x520) (* (- 1) ?x614) (* (- 1) (* ?x103 ?x103 ?x103 ?x111)) (* (- 1) (* ?x103 ?x103 ?x111 ?x111)) (* y00 ?x103 ?x103 ?x111 ?x111 ?x111) (* (- 1) (* ?x103 ?x111 ?x111 ?x111)) (* (- 1) (* ?x111 ?x111 ?x111 ?x111)))))
 (let ((?x526 (+ (* y00 ?x164 ?x117 ?x117) (* y00 ?x164 ?x164 ?x164) (* x00 ?x164 ?x117 ?x117) (* x00 ?x164 ?x164 ?x164) (* x00 ?x164 ?x164 ?x164 ?x117 ?x117) ?x873 ?x300 (* (- 1) (* ?x164 ?x117 ?x117 ?x117)) (* (- 1) (* ?x164 ?x164 ?x117 ?x117)) (* y00 ?x164 ?x164 ?x164 ?x117 ?x117) (* (- 1) (* ?x164 ?x164 ?x164 ?x117)) (* (- 1) (* ?x164 ?x164 ?x164 ?x164)))))
 (let (($x286 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x526 0)) (not (= ?x708 0))))))
 (rewrite (= $x286 $x1472))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x84 (exists ((x Int) (y Int) )(! (let ((?x59 (- y 1)))
 (let ((?x58 (+ x 1)))
 (let ((?x65 (+ (* ?x58 ?x58 ?x59 y00) (* ?x59 ?x59 ?x59 y00) (* ?x58 ?x58 x00 ?x59) (* x00 ?x59 ?x59 ?x59) (* ?x58 ?x58 x00 ?x59 ?x59 ?x59))))
 (let ((?x71 (- (- ?x65 (* ?x58 ?x58 ?x59 ?x59 ?x59 ?x59)) (* ?x58 ?x58 ?x58 ?x59 ?x59 ?x59))))
 (let ((?x75 (+ (- (- ?x71 (* ?x58 ?x58 ?x58 ?x59)) (* ?x58 ?x58 ?x59 ?x59)) (* ?x58 ?x58 ?x59 ?x59 ?x59 y00))))
 (let (($x80 (= (- (- ?x75 (* ?x58 ?x59 ?x59 ?x59)) (* ?x59 ?x59 ?x59 ?x59)) 0)))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x41 (+ (* ?x34 ?x34 ?x35 y00) (* ?x35 ?x35 ?x35 y00) (* ?x34 ?x34 x00 ?x35) (* x00 ?x35 ?x35 ?x35) (* ?x34 ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x47 (- (- ?x41 (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35))))
 (let ((?x51 (+ (- (- ?x47 (* ?x34 ?x34 ?x34 ?x35)) (* ?x34 ?x34 ?x35 ?x35)) (* ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (let (($x56 (= (- (- ?x51 (* ?x34 ?x35 ?x35 ?x35)) (* ?x35 ?x35 ?x35 ?x35)) 0)))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not $x56) (not $x80))))))))))))))) :qid k!27))
 ))
 (let ((?x861 (lambda ((x Int) (y Int) )(let ((?x735 (* (- 1) (* (+ 1 y) (+ 1 y) (+ 1 y) (+ 1 y)))))
 (let ((?x311 (* (- 1) (* (+ (- 1) x) (+ 1 y) (+ 1 y) (+ 1 y)))))
 (let ((?x111 (+ 1 y)))
 (let ((?x103 (+ (- 1) x)))
 (let ((?x708 (+ (* y00 ?x103 ?x103 ?x111) (* y00 ?x111 ?x111 ?x111) (* x00 ?x103 ?x103 ?x111) (* x00 ?x111 ?x111 ?x111) (* x00 ?x103 ?x103 ?x111 ?x111 ?x111) (* (- 1) (* ?x103 ?x103 ?x111 ?x111 ?x111 ?x111)) (* (- 1) (* ?x103 ?x103 ?x103 ?x111 ?x111 ?x111)) (* (- 1) (* ?x103 ?x103 ?x103 ?x111)) (* (- 1) (* ?x103 ?x103 ?x111 ?x111)) (* y00 ?x103 ?x103 ?x111 ?x111 ?x111) ?x311 ?x735)))
 (let ((?x570 (* (- 1) (* (+ (- 1) y) (+ (- 1) y) (+ (- 1) y) (+ (- 1) y)))))
 (let ((?x558 (* (- 1) (* (+ (- 1) y) (+ (- 1) y) (+ (- 1) y) (+ 1 x)))))
 (let ((?x117 (+ 1 x)))
 (let ((?x164 (+ (- 1) y)))
 (let ((?x300 (* (- 1) (* ?x164 ?x164 ?x164 ?x117 ?x117 ?x117))))
 (let ((?x873 (* (- 1) (* ?x164 ?x164 ?x164 ?x164 ?x117 ?x117))))
 (let ((?x526 (+ (* y00 ?x164 ?x117 ?x117) (* y00 ?x164 ?x164 ?x164) (* x00 ?x164 ?x117 ?x117) (* x00 ?x164 ?x164 ?x164) (* x00 ?x164 ?x164 ?x164 ?x117 ?x117) ?x873 ?x300 (* (- 1) (* ?x164 ?x117 ?x117 ?x117)) (* (- 1) (* ?x164 ?x164 ?x117 ?x117)) (* y00 ?x164 ?x164 ?x164 ?x117 ?x117) ?x558 ?x570)))
 (let (($x286 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x526 0)) (not (= ?x708 0))))))
 (let ((?x59 (- y 1)))
 (let ((?x58 (+ x 1)))
 (let ((?x65 (+ (* ?x58 ?x58 ?x59 y00) (* ?x59 ?x59 ?x59 y00) (* ?x58 ?x58 x00 ?x59) (* x00 ?x59 ?x59 ?x59) (* ?x58 ?x58 x00 ?x59 ?x59 ?x59))))
 (let ((?x71 (- (- ?x65 (* ?x58 ?x58 ?x59 ?x59 ?x59 ?x59)) (* ?x58 ?x58 ?x58 ?x59 ?x59 ?x59))))
 (let ((?x75 (+ (- (- ?x71 (* ?x58 ?x58 ?x58 ?x59)) (* ?x58 ?x58 ?x59 ?x59)) (* ?x58 ?x58 ?x59 ?x59 ?x59 y00))))
 (let (($x80 (= (- (- ?x75 (* ?x58 ?x59 ?x59 ?x59)) (* ?x59 ?x59 ?x59 ?x59)) 0)))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x41 (+ (* ?x34 ?x34 ?x35 y00) (* ?x35 ?x35 ?x35 y00) (* ?x34 ?x34 x00 ?x35) (* x00 ?x35 ?x35 ?x35) (* ?x34 ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x47 (- (- ?x41 (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35))))
 (let ((?x51 (+ (- (- ?x47 (* ?x34 ?x34 ?x34 ?x35)) (* ?x34 ?x34 ?x35 ?x35)) (* ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (let (($x56 (= (- (- ?x51 (* ?x34 ?x35 ?x35 ?x35)) (* ?x35 ?x35 ?x35 ?x35)) 0)))
 (let (($x83 (and (= (+ (- (- x y00) x00) y) 0) (or (not $x56) (not $x80)))))
 (rewrite (= $x83 $x286)))))))))))))))))))))))))))))
 ))
 (let ((@x85 (asserted $x84)))
 (let ((@x297 (mp (mp @x85 (quant-intro (proof-bind ?x861) (= $x84 $x1138)) $x1138) (rewrite (= $x1138 $x1138)) $x1138)))
 (let ((@x454 (mp~ (mp @x297 (quant-intro (proof-bind ?x1134) (= $x1138 $x1151)) $x1151) (sk (~ $x1151 $x273)) $x273)))
 (let ((@x455 (mp @x454 (rewrite (= $x273 $x212)) $x212)))
 (let ((@x1438 (and-elim @x455 $x886)))
 (let ((@x619 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x886) $x696)) @x1438 $x696)))
 (let (($x228 (>= ?x704 0)))
 (let ((@x1799 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x886) $x228)) @x1438 $x228)))
 (let (($x643 (not (<= ?x855 0))))
 (let (($x213 (>= ?x855 0)))
 (let ((@x188 (lemma ((_ th-lemma arith) (hypothesis (not $x213)) @x1799 @x619 @x1799 @x619 false) $x213)))
 (let (($x743 (>= ?x170 0)))
 (let ((@x553 (lemma ((_ th-lemma arith) (hypothesis (not $x743)) @x1799 @x619 @x1799 @x619 false) $x743)))
 (let (($x256 (<= ?x170 0)))
 (let ((@x958 (lemma ((_ th-lemma arith) (hypothesis (not $x256)) @x1799 @x619 @x1799 @x619 false) $x256)))
 (let ((@x2067 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x169 (not $x256) (not $x743))) @x958 @x553 $x169)))
 (let ((@x942 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1268 $x643 (not $x213))) (unit-resolution (and-elim @x455 $x468) @x2067 $x231) @x188 $x643)))
 ((_ th-lemma arith) @x942 @x1799 @x619 @x1799 @x619 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        30
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-grobner             4
 :arith-max-min             697
 :arith-nonlinear-bounds    23
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-pivots              3
 :arith-row-summations      2
 :arith-tableau-max-columns 62
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                3.91
 :memory                    3.32
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1723956
 :num-checks                1
 :propagations              14
 :rlimit-count              13161
 :time                      0.01
 :total-time                0.02)
