unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x3442 (* (- 1) s!1)))
 (let ((?x397 (* r00 r00)))
 (let ((?x5966 (* (- 3) ?x397)))
 (let ((?x7381 (+ s00 ?x5966 ?x3442 (* 3 (* r!2 r!2)))))
 (let (($x3203 (<= ?x7381 0)))
 (let (($x7378 (= ?x7381 0)))
 (let ((?x7328 (* 6 r!2)))
 (let ((?x9009 (+ 3 s!1 ?x7328)))
 (let ((?x9000 (+ x!0 ?x3442)))
 (let ((?x3476 (+ 1 r!2)))
 (let ((?x4782 (* (- 2) (* r00 s00 s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009))))
 (let ((?x4781 (* 36 (* r00 r00 s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009))))
 (let ((?x2658 (* (- 36) (* r00 r00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009 ?x9009))))
 (let ((?x2768 (* (- 36) (* r00 r00 x00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009))))
 (let ((?x2645 (* (- 36) (* r00 x00 ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009))))
 (let ((?x2741 (* 36 (* r00 ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009))))
 (let ((?x4676 (* 2 (* s00 ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009 ?x9009))))
 (let ((?x2702 (* (- 4) (* s00 s00 ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009))))
 (let ((?x6392 (* 36 (* r00 r00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009))))
 (let ((?x4722 (* 2 (* ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009 ?x9009 ?x9009))))
 (let ((?x4726 (* 4 (* r00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009 ?x9009 ?x9009))))
 (let ((?x1101 (* (- 2) (* r00 s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009 ?x9009))))
 (let ((?x4791 (+ (* 90 (* x00 x!0 x!0 x!0 r!2)) (* 78 (* s00 x!0 x!0 s!1 s!1)) ?x1101 (* 57 (* s00 s!1 s!1 s!1)) (* 252 (* r00 r00 x!0 s!1 s!1 s!1)) (* 6 (* s00 x!0 x!0 s!1 s!1 r!2)) (* 270 (* x00 x!0 s!1 s!1 r!2)) (* (- 6) (* s!1 s!1 s!1 s!1 s!1)) (* (- 15) (* s00 s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009)) (* 270 (* r00 x00 x!0 s!1 s!1)) (* (- 36) (* r00 x00 s!1 s!1 s!1 r!2)) (* 6 (* ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9000 ?x9009 ?x9009)) (* 54 (* r00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* (- 38) (* s00 x!0 x!0 x!0 s!1)) ?x4726 (* (- 144) (* r00 s!1 s!1 s!1 r!2)) ?x4722 (* (- 90) (* r00 x00 s!1 s!1 s!1)) (* (- 18) (* s00 r00 x!0 x!0 x!0)) (* (- 114) (* s!1 s!1 s!1 s!1 r!2)) (* 36 (* s00 x!0 x!0 s!1 r!2 r!2)) (* (- 15) (* s00 s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* (- 66) (* s00 x!0 s!1 s!1 s!1)) (* 384 (* r00 x!0 x!0 x!0 s!1)) (* 36 (* r00 ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9000 ?x9009)) (* (- 6) (* s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9000 ?x9009)) (* 54 (* s00 r00 x!0 x!0 s!1)) (* (- 9) (* s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* 12 (* s00 s00 x!0 s!1 s!1 r!2)) (* (- 36) (* r00 r00 x00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009)) (* (- 108) (* r00 r00 x00 x!0 x!0 s!1)) (* 12 (* s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009)) ?x6392 (* 36 (* r00 r00 s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009)) (* 45 (* x!0 x!0 x!0)) (* 9 (* ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009 ?x9009)) (* 4 (* s00 s00 x!0 x!0 x!0 r!2)) (* (- 108) (* r00 r00 s!1 s!1 s!1)) (* (- 2) (* ?x3476 ?x9000 ?x9000 ?x9000 ?x9009 ?x9009)) (* 72 (* r00 x!0 x!0 x!0)) (* (- 2) (* r00 s00 s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009)) ?x2702 (* (- 4) (* s00 s00 s!1 s!1 s!1 r!2)) (* (- 270) (* x00 x!0 x!0 s!1 r!2)) (* 432 (* r00 x!0 s!1 s!1 s!1)) (* 324 (* r00 r00 x!0 s!1 s!1)) (* (- 54) (* s00 r00 x!0 s!1 s!1)) (* 432 (* x!0 s!1 s!1 s!1 r!2)) (* 6 (* s00 x00 s!1 s!1 s!1)) (* 18 (* s00 r00 s!1 s!1 s!1)) (* 57 (* s00 s00 x!0 s!1 s!1)) (* (- 36) (* r00 x!0 x!0 x!0 x!0 r!2)) (* 9 (* ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009)) (* (- 36) (* s00 x!0 s!1 s!1 r!2 r!2)) (* 342 (* s00 x!0 x!0 s!1 r!2)) (* (- 324) (* r00 r00 x!0 x!0 s!1 s!1)) (* (- 24) (* ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009)) (* 180 (* r00 r00 x!0 x!0 x!0 s!1)) (* (- 12) (* s00 x!0 x!0 x!0 r!2 r!2)) (* (- 2) (* s00 s00 r00 s!1 s!1 s!1)) (* (- 2) (* s00 x!0 x!0 x!0 s!1 r!2)) (* 12 (* s00 s!1 s!1 s!1 r!2 r!2)) (* (- 171) (* s00 x!0 s!1 s!1)) (* 108 (* r00 x00 x!0 s!1 s!1 r!2)) (* (- 57) (* s00 s00 x!0 x!0 s!1)) (* (- 4) (* s00 s00 ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009)) (* 36 (* r00 r00 x00 x!0 x!0 x!0)) (* (- 6) (* x00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009)) (* 2 (* s00 s00 r00 x!0 x!0 x!0)) (* (- 72) (* r00 r00 s!1 s!1 s!1 s!1)) (* 54 (* ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* (- 54) (* x00 ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009)) (* 2 (* s00 ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009)) (* (- 270) (* r00 x00 x!0 x!0 s!1)) (* (- 87) (* s!1 s!1 s!1 s!1)) (* (- 72) (* x!0 x!0 x!0 x!0)) (* (- 6) (* s00 x!0 s!1 s!1 s!1 r!2)) (* 6 (* s00 x00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* (- 90) (* r00 x!0 x!0 x!0 x!0)) (* (- 24) (* r00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009 ?x9009)) (* 6 (* x00 x!0 x!0 x!0 s!1)) (* 3 (* ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009 ?x9009 ?x9009)) ?x4676 (* (- 216) (* r00 r00 s!1 s!1 s!1 r!2)) (* 216 (* x00 x!0 s!1 s!1)) (* 24 (* x!0 x!0 x!0 s!1 s!1)) (* (- 648) (* r00 r00 x!0 x!0 s!1 r!2)) (* (- 162) (* s!1 s!1 s!1 r!2)) (* (- 108) (* s00 r00 r00 x!0 s!1 s!1)) (* (- 36) (* s00 r00 r00 x!0 x!0 x!0)) ?x2741 (* (- 18) (* s00 x00 x!0 s!1 s!1)) (* 144 (* r00 x!0 s!1 s!1 s!1 r!2)) (* (- 18) (* x00 x!0 x!0 s!1 s!1)) (* (- 6) (* x00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009 ?x9009)) (* 12 (* s00 r00 x!0 x!0 x!0 r!2)) (* 12 (* s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009 ?x9009)) (* (- 432) (* x!0 x!0 s!1 r!2 r!2)) (* (- 36) (* r00 x00 ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009)) (* (- 72) (* x00 s!1 s!1 s!1)) (* (- 135) (* x!0 x!0 s!1)) (* (- 12) (* s00 r00 s!1 s!1 s!1 r!2)) (* (- 9) (* s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009)) (* 432 (* x!0 s!1 s!1 r!2 r!2)) (* (- 324) (* r00 r00 x!0 x!0 s!1)) (* (- 36) (* r00 r00 x!0 x!0 x!0 x!0)) (* (- 6) (* s00 s00 r00 x!0 x!0 s!1)) (* 54 (* r00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9000 ?x9009)) (* (- 6) (* x00 s!1 s!1 s!1 s!1)) (* 108 (* r00 r00 x!0 x!0 x!0)) (* 333 (* x!0 s!1 s!1 s!1)) (* (- 2) (* s00 r00 s!1 s!1 s!1 s!1)) (* (- 36) (* r00 r00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009)) (* (- 486) (* x!0 x!0 s!1 r!2)) (* 36 (* r00 x00 x!0 x!0 x!0 r!2)) ?x2645 ?x2768 (* (- 612) (* r00 x!0 x!0 s!1 s!1)) (* 3 (* ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* 4 (* r00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* 6 (* s00 x00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009)) (* 303 (* x!0 x!0 x!0 s!1)) (* (- 216) (* x00 x!0 x!0 s!1)) (* 2 (* s00 r00 x!0 x!0 x!0 s!1)) (* 135 (* x!0 s!1 s!1)) ?x2658 (* (- 72) (* r00 s!1 s!1 s!1)) (* 486 (* x!0 s!1 s!1 r!2)) (* 384 (* x!0 x!0 x!0 s!1 r!2)) (* 24 (* s00 ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* (- 114) (* r00 s!1 s!1 s!1 s!1)) (* (- 477) (* x!0 x!0 s!1 s!1)) (* (- 6) (* x!0 x!0 x!0 x!0 s!1)) (* (- 2) (* r00 s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009)) (* 648 (* r00 r00 x!0 s!1 s!1 r!2)) (* 216 (* r00 r00 x!0 x!0 x!0 r!2)) (* 36 (* s00 r00 r00 s!1 s!1 s!1)) (* 108 (* s00 r00 r00 x!0 x!0 s!1)) (* 6 (* s00 r00 x!0 s!1 s!1 s!1)) (* 114 (* s00 s!1 s!1 s!1 r!2)) (* 216 (* r00 x!0 s!1 s!1)) (* (- 36) (* s00 r00 x!0 x!0 s!1 r!2)) (* (- 342) (* s00 x!0 s!1 s!1 r!2)) (* 18 (* s00 x00 x!0 x!0 s!1)) (* (- 24) (* ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009 ?x9009)) (* (- 144) (* s!1 s!1 s!1 r!2 r!2)) (* (- 108) (* r00 x00 x!0 x!0 s!1 r!2)) (* (- 36) (* r00 r00 x00 s!1 s!1 s!1)) (* 6 (* s00 x!0 x!0 x!0 x!0)) (* (- 6) (* s00 x00 x!0 x!0 x!0)) (* 24 (* r00 s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009)) (* (- 57) (* s00 x!0 x!0 x!0)) (* 144 (* r00 x!0 x!0 x!0 r!2)) (* (- 216) (* r00 x!0 x!0 s!1)) (* 171 (* s00 x!0 x!0 s!1)) (* 2 (* ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* (- 6) (* s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* (- 19) (* s00 s00 s!1 s!1 s!1)) (* 144 (* r00 x!0 x!0 x!0 s!1 r!2)) (* (- 54) (* r00 x00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* 6 (* ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009 ?x9009)) (* 24 (* x!0 s!1 s!1 s!1 s!1)) (* 432 (* r00 x!0 s!1 s!1 r!2)) (* 144 (* x!0 x!0 x!0 r!2 r!2)) (* 24 (* r00 s00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* 2 (* s00 s!1 s!1 s!1 s!1 r!2)) (* 19 (* s00 s00 x!0 x!0 x!0)) (* (- 36) (* r00 s!1 s!1 s!1 s!1 r!2)) (* (- 6) (* s00 r00 x!0 x!0 s!1 s!1)) (* (- 612) (* x!0 x!0 s!1 s!1 r!2)) (* (- 36) (* x!0 x!0 s!1 s!1 s!1)) (* (- 432) (* r00 x!0 x!0 s!1 r!2)) (* (- 54) (* x00 ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009 ?x9009)) (* (- 114) (* s00 x!0 x!0 x!0 r!2)) (* (- 45) (* s!1 s!1 s!1)) (* 36 (* s00 r00 x!0 s!1 s!1 r!2)) (* (- 216) (* r00 x!0 x!0 s!1 s!1 r!2)) (* (- 24) (* r00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009 ?x9009)) (* 162 (* x!0 x!0 x!0 r!2)) (* (- 90) (* x!0 x!0 x!0 x!0 r!2)) (* 20 (* s00 s!1 s!1 s!1 s!1)) (* 54 (* ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9000 ?x9009)) (* 72 (* x00 x!0 x!0 x!0)) (* 108 (* r00 r00 x00 x!0 s!1 s!1)) (* (- 90) (* x00 s!1 s!1 s!1 r!2)) (* 6 (* s00 s00 r00 x!0 s!1 s!1)) (* (- 4) (* r00 ?x9000 ?x9000 ?x9000 ?x9009 ?x9009)) (* 18 (* x00 x!0 s!1 s!1 s!1)) (* 36 (* r00 r00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9000 ?x9009)) ?x4781 ?x4782 (* (- 12) (* s00 s00 x!0 x!0 s!1 r!2)) (* 90 (* r00 x00 x!0 x!0 x!0)) (* 24 (* s00 ?x3476 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009)) (* (- 54) (* r00 x00 ?x3476 ?x3476 ?x3476 ?x9000 ?x9000 ?x9009)) (* (- 3) (* ?x9000 ?x9000 ?x9000 ?x9009 ?x9009)))))
 (let (($x4792 (= ?x4791 0)))
 (let (($x3643 (not $x4792)))
 (let ((?x5343 (* (- 9) s!1)))
 (let ((?x3172 (* r00 r00 s!1)))
 (let ((?x3849 (* 36 ?x3172)))
 (let ((?x1442 (* x00 x00)))
 (let ((?x6594 (* 108 ?x1442)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x6468 (* 16 ?x1280)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x6280 (* (- 432) ?x978)))
 (let ((?x901 (* s00 x00)))
 (let ((?x6438 (* (- 108) ?x901)))
 (let ((?x743 (* s00 r00 r00)))
 (let ((?x1487 (* (- 36) ?x743)))
 (let ((?x687 (* s00 s00)))
 (let ((?x6496 (* 51 ?x687)))
 (let ((?x618 (* r00 x00)))
 (let ((?x5846 (* 108 ?x618)))
 (let ((?x137 (* 9 s00)))
 (let ((?x8986 (+ ?x137 (* (- 54) (* s00 r00)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 216 (* s00 r00 x00)) ?x5846 ?x6496 ?x1487 (* (- 108) (* s00 s00 r00)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 36) (* s00 s00 r00 r00)) ?x6438 ?x6280 (* 216 (* s00 r00 r00 r00)) (* (- 216) (* x00 x!0)) ?x6468 ?x6594 (* 108 (* x!0 x!0)) ?x3849 (* 108 (* x00 s!1)) (* (- 108) (* r00 x!0)) (* 54 (* r00 s!1)) (* 108 (* s00 x!0)) (* 108 (* s00 r00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 36 (* r00 r00 s!1 s!1)) (* (- 108) (* x!0 s!1)) (* (- 66) (* s00 s!1)) ?x5343 (* (- 4) (* s!1 s!1 s!1)) (* 15 (* s!1 s!1)))))
 (let (($x8988 (= ?x8986 0)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x8646 (* 36 ?x973)))
 (let ((?x6178 (* (- 6) ?x901)))
 (let ((?x5896 (* 15 ?x687)))
 (let ((?x6144 (* 54 ?x618)))
 (let ((?x2316 (+ ?x137 (* (- 24) (* s00 r00)) ?x6144 (* (- 4) (* r00 s!1 s!1)) ?x5896 ?x1487 (* 2 (* s00 s00 r00)) ?x6178 ?x8646 (* (- 2) (* s00 s!1 r!2)) ?x3849 (* 6 (* x00 s!1)) (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* 24 (* r00 s!1)) (* (- 36) (* r00 x!0 r!2)) (* 6 (* s00 x!0)) (* 2 (* s00 r00 s!1)) (* (- 6) (* x!0 s!1)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s!1 s!1 r!2)) (* (- 12) (* s00 s!1)) ?x5343 (* (- 24) (* s00 r!2)) (* 24 (* s!1 r!2)) (* (- 54) (* x!0 r!2)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 3) (* s!1 s!1)))))
 (let (($x2310 (= ?x2316 0)))
 (let ((?x6675 (* (- 3) s!1)))
 (let ((?x8254 (* 4 ?x687)))
 (let ((?x8726 (* 18 ?x618)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1568 (+ ?x44 (* (- 9) (* s00 r00)) ?x8726 ?x8254 (* (- 6) ?x743) (* 6 ?x3172) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)) (* (- 2) (* s00 s!1)) (* (- 6) (* r00 s!1 r!2)) ?x6675 (* (- 9) (* s00 r!2)) (* 9 (* s!1 r!2)) (* (- 18) (* x!0 r!2)) (* (- 2) (* s!1 s!1)))))
 (let (($x2019 (= ?x1568 0)))
 (let ((?x6680 (* 3 r!2)))
 (let ((?x6677 (* 6 x!0)))
 (let ((?x565 (* r00 r00 r00)))
 (let ((?x566 (* 12 ?x565)))
 (let ((?x522 (* s00 r00)))
 (let ((?x600 (* (- 6) ?x522)))
 (let ((?x597 (* (- 6) x00)))
 (let ((?x596 (* (- 3) r00)))
 (let ((?x3180 (+ ?x44 ?x596 ?x597 ?x600 ?x566 ?x6677 ?x6675 ?x6680 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) (* 2 (* s!1 r!2)))))
 (let (($x3206 (= ?x3180 0)))
 (let (($x6068 (and $x7378 $x3206 $x2019 $x2310 $x8988 $x3643)))
 (let ((?x3525 (+ 3 ?x7328 s!1)))
 (let ((?x2029 (+ ?x3442 x!0)))
 (let ((?x7125 (* 36 (* r00 r00 x00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525))))
 (let ((?x7507 (* 2 (* r00 s00 s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525))))
 (let ((?x8159 (* (- 36) (* r00 r00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525))))
 (let ((?x2833 (* (- 2) (* ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525 ?x3525 ?x3525))))
 (let ((?x2991 (* 4 (* s00 s00 ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525))))
 (let ((?x2983 (* (- 4) (* r00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525 ?x3525 ?x3525))))
 (let ((?x2943 (* 2 (* r00 s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525 ?x3525))))
 (let ((?x2820 (* (- 36) (* r00 ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525))))
 (let ((?x8990 (* 36 (* r00 x00 ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525))))
 (let ((?x7631 (* 36 (* r00 r00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525 ?x3525))))
 (let ((?x6281 (* (- 2) (* s00 ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525 ?x3525))))
 (let ((?x812 (* (- 36) (* r00 r00 s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525))))
 (let ((?x7177 (+ (* 12 (* r!2 s!1 x!0 x!0 s00 s00)) (* (- 90) (* x!0 x!0 x!0 r00 x00)) (* (- 36) (* r!2 x!0 x!0 x!0 r00 x00)) (* (- 24) (* s00 ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525)) (* 54 (* r00 x00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525)) (* (- 24) (* r00 s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) ?x812 (* (- 108) (* x!0 x!0 x!0 r00 r00)) (* 45 (* s!1 s!1 s!1)) ?x6281 (* (- 3) (* ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525 ?x3525 ?x3525)) (* 216 (* s!1 x!0 x!0 r00)) (* 3 (* ?x2029 ?x2029 ?x2029 ?x3525 ?x3525)) (* (- 6) (* s00 x00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525)) (* 54 (* r00 x00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) (* 54 (* x00 ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) (* (- 6) (* ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x2029 ?x3525 ?x3525)) (* 15 (* s00 s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) ?x7631 (* 36 (* r!2 x!0 x!0 x!0 x!0 r00)) (* (- 2) (* s00 ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525)) (* 54 (* x00 ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525)) (* 90 (* x!0 x!0 x!0 x!0 r00)) (* (- 144) (* r!2 s!1 x!0 x!0 x!0 r00)) (* 19 (* s!1 s!1 s!1 s00 s00)) (* (- 2) (* ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) (* (- 19) (* x!0 x!0 x!0 s00 s00)) (* 57 (* s!1 x!0 x!0 s00 s00)) (* (- 57) (* s!1 s!1 x!0 s00 s00)) (* (- 9) (* ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525)) (* (- 384) (* s!1 x!0 x!0 x!0 r00)) (* 24 (* r00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525)) (* 216 (* r!2 s!1 s!1 x!0 x!0 r00)) (* 612 (* s!1 s!1 x!0 x!0 r00)) (* (- 144) (* r!2 s!1 s!1 s!1 x!0 r00)) (* (- 432) (* s!1 s!1 s!1 x!0 r00)) (* 4 (* s00 s00 ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525)) (* 36 (* r!2 s!1 s!1 s!1 s!1 r00)) (* 114 (* s!1 s!1 s!1 s!1 r00)) (* 72 (* s!1 s!1 s!1 x00)) (* (- 6) (* s!1 x!0 x!0 x!0 x00)) (* (- 72) (* x!0 x!0 x!0 x00)) (* (- 4) (* r00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) ?x8990 (* (- 216) (* s!1 s!1 x!0 x00)) (* 216 (* s!1 x!0 x!0 x00)) (* (- 45) (* x!0 x!0 x!0)) (* (- 12) (* s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525 ?x3525)) (* (- 303) (* s!1 x!0 x!0 x!0)) (* (- 135) (* s!1 s!1 x!0)) (* 135 (* s!1 x!0 x!0)) (* 216 (* r!2 s!1 s!1 s!1 r00 r00)) (* 486 (* r!2 s!1 x!0 x!0)) (* 477 (* s!1 s!1 x!0 x!0)) (* (- 24) (* s00 ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) (* 24 (* r00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525 ?x3525)) (* 2 (* r00 s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525)) (* (- 648) (* r!2 s!1 s!1 x!0 r00 r00)) (* (- 333) (* s!1 s!1 s!1 x!0)) (* (- 486) (* r!2 s!1 s!1 x!0)) (* 36 (* r00 x00 ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525)) (* 6 (* x00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525 ?x3525)) (* 648 (* r!2 s!1 x!0 x!0 r00 r00)) (* 87 (* s!1 s!1 s!1 s!1)) (* 162 (* r!2 s!1 s!1 s!1)) (* (- 162) (* r!2 x!0 x!0 x!0)) (* (- 216) (* r!2 x!0 x!0 x!0 r00 r00)) (* 12 (* r!2 s!1 s!1 s!1 s00 r00)) (* (- 2) (* s!1 x!0 x!0 x!0 s00 r00)) (* (- 12) (* r!2 x!0 x!0 x!0 s00 r00)) (* 2 (* s!1 s!1 s!1 s!1 s00 r00)) (* 72 (* x!0 x!0 x!0 x!0)) (* 6 (* s!1 x!0 x!0 x!0 x!0)) (* 36 (* r00 r00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525)) (* (- 36) (* r!2 s!1 s!1 x!0 s00 r00)) (* 36 (* r!2 s!1 x!0 x!0 s00 r00)) (* 9 (* s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525)) (* (- 6) (* s!1 s!1 s!1 x!0 s00 r00)) (* 6 (* s!1 s!1 x!0 x!0 s00 r00)) (* 6 (* s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) (* (- 6) (* ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525 ?x3525)) (* (- 144) (* r!2 x!0 x!0 x!0 r00)) (* 114 (* r!2 s!1 s!1 s!1 s!1)) (* 6 (* s!1 s!1 s!1 s!1 s!1)) (* (- 432) (* r!2 s!1 s!1 s!1 x!0)) (* (- 24) (* s!1 s!1 s!1 s!1 x!0)) (* (- 432) (* r!2 s!1 s!1 x!0 r00)) (* (- 144) (* r!2 r!2 x!0 x!0 x!0)) (* 612 (* r!2 s!1 s!1 x!0 x!0)) (* 36 (* s!1 s!1 s!1 x!0 x!0)) (* 432 (* r!2 s!1 x!0 x!0 r00)) (* 432 (* r!2 r!2 s!1 x!0 x!0)) (* (- 384) (* r!2 s!1 x!0 x!0 x!0)) (* (- 24) (* s!1 s!1 x!0 x!0 x!0)) (* 90 (* r!2 x!0 x!0 x!0 x!0)) (* (- 36) (* s!1 s!1 s!1 s00 r00 r00)) (* 108 (* s!1 s!1 x!0 s00 r00 r00)) (* (- 108) (* s!1 x!0 x!0 s00 r00 r00)) (* 36 (* x!0 x!0 x!0 s00 r00 r00)) ?x2820 (* (- 6) (* s00 x00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) (* (- 6) (* s!1 s!1 s!1 s00 x00)) (* 18 (* s!1 s!1 x!0 s00 x00)) (* (- 18) (* s!1 x!0 x!0 s00 x00)) (* (- 432) (* r!2 r!2 s!1 s!1 x!0)) (* 144 (* r!2 r!2 s!1 s!1 s!1)) (* 6 (* x!0 x!0 x!0 s00 x00)) (* 57 (* x!0 x!0 x!0 s00)) (* (- 24) (* r00 s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525)) (* (- 171) (* s!1 x!0 x!0 s00)) (* 171 (* s!1 s!1 x!0 s00)) (* (- 57) (* s!1 s!1 s!1 s00)) (* (- 114) (* r!2 s!1 s!1 s!1 s00)) (* 342 (* r!2 s!1 s!1 x!0 s00)) (* (- 342) (* r!2 s!1 x!0 x!0 s00)) (* 114 (* r!2 x!0 x!0 x!0 s00)) ?x2943 (* (- 12) (* r!2 s!1 s!1 x!0 s00 s00)) (* 2 (* r00 s00 s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525)) (* 4 (* r!2 s!1 s!1 s!1 s00 s00)) (* (- 36) (* r00 ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x2029 ?x3525)) (* (- 90) (* r!2 x!0 x!0 x!0 x00)) (* (- 54) (* s!1 x!0 x!0 s00 r00)) (* 18 (* x!0 x!0 x!0 s00 r00)) (* 6 (* s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x2029 ?x3525)) (* (- 18) (* s!1 s!1 s!1 s00 r00)) (* 54 (* s!1 s!1 x!0 s00 r00)) (* 9 (* s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) (* 66 (* s!1 s!1 s!1 x!0 s00)) (* 108 (* s!1 s!1 s!1 r00 r00)) (* (- 4) (* r!2 x!0 x!0 x!0 s00 s00)) (* (- 9) (* ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525 ?x3525)) (* (- 20) (* s!1 s!1 s!1 s!1 s00)) ?x2983 (* 38 (* s!1 x!0 x!0 x!0 s00)) (* (- 78) (* s!1 s!1 x!0 x!0 s00)) ?x2991 (* 72 (* s!1 s!1 s!1 r00)) (* (- 216) (* s!1 s!1 x!0 r00)) ?x2833 (* (- 54) (* ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x2029 ?x3525)) (* 24 (* ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525 ?x3525)) (* 144 (* r!2 s!1 s!1 s!1 r00)) (* (- 72) (* x!0 x!0 x!0 r00)) (* 2 (* ?x3476 ?x2029 ?x2029 ?x2029 ?x3525 ?x3525)) (* (- 36) (* r!2 r!2 s!1 x!0 x!0 s00)) (* (- 6) (* r!2 s!1 s!1 x!0 x!0 s00)) (* 12 (* r!2 r!2 x!0 x!0 x!0 s00)) (* 2 (* r!2 s!1 x!0 x!0 x!0 s00)) (* (- 12) (* r!2 r!2 s!1 s!1 s!1 s00)) (* (- 2) (* r!2 s!1 s!1 s!1 s!1 s00)) (* 36 (* r!2 r!2 s!1 s!1 x!0 s00)) (* 6 (* r!2 s!1 s!1 s!1 x!0 s00)) (* (- 54) (* r00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) (* (- 324) (* s!1 s!1 x!0 r00 r00)) (* (- 18) (* s!1 s!1 s!1 x!0 x00)) (* 270 (* r!2 s!1 x!0 x!0 x00)) (* (- 6) (* s!1 s!1 x!0 s00 s00 r00)) (* 4 (* r00 ?x2029 ?x2029 ?x2029 ?x3525 ?x3525)) (* 90 (* r!2 s!1 s!1 s!1 x00)) (* (- 270) (* r!2 s!1 s!1 x!0 x00)) (* 15 (* s00 s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525)) (* 2 (* s!1 s!1 s!1 s00 s00 r00)) (* 6 (* s!1 s!1 s!1 s!1 x00)) (* 18 (* s!1 s!1 x!0 x!0 x00)) (* 6 (* s!1 x!0 x!0 s00 s00 r00)) (* (- 54) (* r00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x2029 ?x3525)) ?x8159 (* (- 36) (* r00 r00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x2029 ?x3525)) (* 72 (* s!1 s!1 s!1 s!1 r00 r00)) (* (- 252) (* s!1 s!1 s!1 x!0 r00 r00)) (* 324 (* s!1 s!1 x!0 x!0 r00 r00)) (* 24 (* ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525)) (* (- 180) (* s!1 x!0 x!0 x!0 r00 r00)) (* 36 (* x!0 x!0 x!0 x!0 r00 r00)) (* 324 (* s!1 x!0 x!0 r00 r00)) (* (- 2) (* x!0 x!0 x!0 s00 s00 r00)) (* 6 (* x00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525)) (* (- 36) (* x!0 x!0 x!0 r00 r00 x00)) ?x7507 (* (- 54) (* ?x3476 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) (* (- 36) (* r00 r00 s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525)) (* 36 (* r00 r00 x00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525)) (* 90 (* s!1 s!1 s!1 r00 x00)) (* 36 (* r!2 s!1 s!1 s!1 r00 x00)) (* (- 270) (* s!1 s!1 x!0 r00 x00)) (* (- 108) (* r!2 s!1 s!1 x!0 r00 x00)) (* 270 (* s!1 x!0 x!0 r00 x00)) (* 108 (* r!2 s!1 x!0 x!0 r00 x00)) (* 36 (* s!1 s!1 s!1 r00 r00 x00)) (* (- 6) (* x!0 x!0 x!0 x!0 s00)) (* (- 108) (* s!1 s!1 x!0 r00 r00 x00)) (* (- 3) (* ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525 ?x3525)) ?x7125 (* 108 (* s!1 x!0 x!0 r00 r00 x00)) (* (- 12) (* s00 ?x3476 ?x3476 ?x3476 ?x2029 ?x2029 ?x3525 ?x3525)))))
 (let ((?x1472 (* (- 108) ?x1442)))
 (let ((?x1471 (* (- 16) ?x1280)))
 (let ((?x1152 (* s00 r00 r00 r00)))
 (let ((?x1467 (* (- 216) ?x1152)))
 (let ((?x979 (* 432 ?x978)))
 (let ((?x1225 (* 108 ?x901)))
 (let ((?x827 (* s00 s00 r00 r00)))
 (let ((?x828 (* 36 ?x827)))
 (let ((?x764 (* s00 s00 r00)))
 (let ((?x1108 (* 108 ?x764)))
 (let ((?x1096 (* 36 ?x743)))
 (let ((?x1461 (* (- 51) ?x687)))
 (let ((?x5253 (* s!1 r00 r00)))
 (let ((?x5643 (* (- 36) ?x5253)))
 (let ((?x1458 (* (- 108) ?x618)))
 (let ((?x609 (* s00 r00 x00)))
 (let ((?x1457 (* (- 216) ?x609)))
 (let ((?x616 (* 54 ?x522)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x6828 (* 9 s!1)))
 (let ((?x8433 (+ ?x6828 ?x1083 ?x616 ?x1457 ?x1458 (* (- 15) (* s!1 s!1)) ?x5643 ?x1461 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1096 ?x1108 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x828 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1225 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x979 (* 12 (* s!1 s!1 s00)) ?x1467 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1471 (* 216 (* x!0 x00)) ?x1472)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x792 (* (- 2) ?x764)))
 (let ((?x1012 (* (- 15) ?x687)))
 (let ((?x647 (* (- 54) ?x618)))
 (let ((?x660 (* 24 ?x522)))
 (let ((?x5792 (+ ?x6828 ?x1083 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x660 ?x647 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x5643 ?x1012 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1096 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x792 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x902 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x986 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x744 (* 6 ?x743)))
 (let ((?x700 (* (- 4) ?x687)))
 (let ((?x632 (* (- 18) ?x618)))
 (let ((?x637 (* 9 ?x522)))
 (let ((?x474 (* (- 3) s00)))
 (let ((?x7974 (+ (* 3 s!1) ?x474 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x637 ?x632 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x5253) ?x700 (* 18 (* x!0 r00)) ?x744 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x6806 (+ ?x6680 ?x6675 ?x6677 ?x44 ?x596 ?x597 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x600 ?x566)))
 (let (($x6699 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x397)) 0)))
 (let (($x7387 (and $x6699 (= ?x6806 0) (= ?x7974 0) (= ?x5792 0) (= ?x8433 0) (not (= ?x7177 0)))))
 (let (($x5905 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1484 (+ 3 ?x214 s)))
 (let ((?x376 (* (- 1) s)))
 (let ((?x1490 (+ ?x376 x)))
 (let ((?x1481 (+ 1 r)))
 (let ((?x8831 (* 36 (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x9651 (* 36 (* s s s r00 r00 x00))))
 (let ((?x3097 (* 2 (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x9468 (* 36 (* x x x x r00 r00))))
 (let ((?x9465 (* (- 180) (* s x x x r00 r00))))
 (let ((?x5428 (* (- 36) (* r00 r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x9449 (* 2 (* s s s s00 s00 r00))))
 (let ((?x9431 (* 6 (* r s s s x s00))))
 (let ((?x9430 (* 36 (* r r s s x s00))))
 (let ((?x9429 (* (- 2) (* r s s s s s00))))
 (let ((?x9428 (* (- 12) (* r r s s s s00))))
 (let ((?x9427 (* 2 (* r s x x x s00))))
 (let ((?x9426 (* 12 (* r r x x x s00))))
 (let ((?x9425 (* (- 6) (* r s s x x s00))))
 (let ((?x9424 (* (- 36) (* r r s x x s00))))
 (let ((?x5114 (* (- 2) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484 ?x1484))))
 (let ((?x7275 (* 4 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x4659 (* (- 4) (* r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484 ?x1484))))
 (let ((?x3739 (* 2 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484))))
 (let ((?x9316 (* 114 (* r x x x s00))))
 (let ((?x9317 (* (- 342) (* r s x x s00))))
 (let ((?x9318 (* 342 (* r s s x s00))))
 (let ((?x9320 (* (- 114) (* r s s s s00))))
 (let ((?x9326 (* 6 (* x x x s00 x00))))
 (let ((?x9323 (* (- 18) (* s x x s00 x00))))
 (let ((?x9328 (* 18 (* s s x s00 x00))))
 (let ((?x9325 (* (- 6) (* s s s s00 x00))))
 (let ((?x3317 (* (- 36) (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x9330 (* 36 (* x x x s00 r00 r00))))
 (let ((?x9327 (* (- 108) (* s x x s00 r00 r00))))
 (let ((?x9332 (* 108 (* s s x s00 r00 r00))))
 (let ((?x9329 (* (- 36) (* s s s s00 r00 r00))))
 (let ((?x9334 (* 90 (* r x x x x))))
 (let ((?x9331 (* (- 24) (* s s x x x))))
 (let ((?x9336 (* (- 384) (* r s x x x))))
 (let ((?x9338 (* 36 (* s s s x x))))
 (let ((?x9340 (* (- 24) (* s s s s x))))
 (let ((?x9342 (* 6 (* s s s s s))))
 (let ((?x2677 (* 6 (* s x x x x))))
 (let ((?x9344 (* 72 (* x x x x))))
 (let ((?x9353 (* 135 (* s x x))))
 (let ((?x9354 (* (- 135) (* s s x))))
 (let ((?x9355 (* (- 303) (* s x x x))))
 (let ((?x9358 (* (- 45) (* x x x))))
 (let ((?x2231 (* 36 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x9062 (* (- 72) (* x x x x00))))
 (let ((?x9060 (* (- 6) (* s x x x x00))))
 (let ((?x9059 (* 36 (* r s s s s r00))))
 (let ((?x9057 (* (- 144) (* r s s s x r00))))
 (let ((?x9052 (* 216 (* r s s x x r00))))
 (let ((?x9257 (* (- 144) (* r s x x x r00))))
 (let ((?x9259 (* 90 (* x x x x r00))))
 (let ((?x9264 (* 36 (* r x x x x r00))))
 (let ((?x1544 (* 36 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484))))
 (let ((?x1107 (* (- 2) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484))))
 (let ((?x899 (* s s s)))
 (let ((?x9225 (* 45 ?x899)))
 (let ((?x810 (* (- 36) (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x3841 (+ (* 12 (* r s x x s00 s00)) (* (- 90) (* x x x r00 x00)) (* (- 36) (* r x x x r00 x00)) (* (- 24) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* 54 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* (- 24) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) ?x810 (* (- 108) (* x x x r00 r00)) ?x9225 ?x1107 (* (- 3) (* ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484 ?x1484)) (* 216 (* s x x r00)) (* 3 (* ?x1490 ?x1490 ?x1490 ?x1484 ?x1484)) (* (- 6) (* s00 x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* 54 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* 54 (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* (- 6) (* ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484)) (* 15 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) ?x1544 ?x9264 (* (- 2) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) (* 54 (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) ?x9259 ?x9257 (* 19 (* s s s s00 s00)) (* (- 2) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* (- 19) (* x x x s00 s00)) (* 57 (* s x x s00 s00)) (* (- 57) (* s s x s00 s00)) (* (- 9) (* ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) (* (- 384) (* s x x x r00)) (* 24 (* r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) ?x9052 (* 612 (* s s x x r00)) ?x9057 (* (- 432) (* s s s x r00)) (* 4 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) ?x9059 (* 114 (* s s s s r00)) (* 72 (* s s s x00)) ?x9060 ?x9062 (* (- 4) (* r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) ?x2231 (* (- 216) (* s s x x00)) (* 216 (* s x x x00)) ?x9358 (* (- 12) (* s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484)) ?x9355 ?x9354 ?x9353 (* 216 (* r s s s r00 r00)) (* 486 (* r s x x)) (* 477 (* s s x x)) (* (- 24) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* 24 (* r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484)) (* 2 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) (* (- 648) (* r s s x r00 r00)) (* (- 333) (* s s s x)) (* (- 486) (* r s s x)) (* 36 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* 6 (* x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484)) (* 648 (* r s x x r00 r00)) (* 87 (* s s s s)) (* 162 (* r s s s)) (* (- 162) (* r x x x)) (* (- 216) (* r x x x r00 r00)) (* 12 (* r s s s s00 r00)) (* (- 2) (* s x x x s00 r00)) (* (- 12) (* r x x x s00 r00)) (* 2 (* s s s s s00 r00)) ?x9344 ?x2677 (* 36 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) (* (- 36) (* r s s x s00 r00)) (* 36 (* r s x x s00 r00)) (* 9 (* s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* (- 6) (* s s s x s00 r00)) (* 6 (* s s x x s00 r00)) (* 6 (* s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* (- 6) (* ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484)) (* (- 144) (* r x x x r00)) (* 114 (* r s s s s)) ?x9342 (* (- 432) (* r s s s x)) ?x9340 (* (- 432) (* r s s x r00)) (* (- 144) (* r r x x x)) (* 612 (* r s s x x)) ?x9338 (* 432 (* r s x x r00)) (* 432 (* r r s x x)) ?x9336 ?x9331 ?x9334 ?x9329 ?x9332 ?x9327 ?x9330 ?x3317 (* (- 6) (* s00 x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) ?x9325 ?x9328 ?x9323 (* (- 432) (* r r s s x)) (* 144 (* r r s s s)) ?x9326 (* 57 (* x x x s00)) (* (- 24) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* (- 171) (* s x x s00)) (* 171 (* s s x s00)) (* (- 57) (* s s s s00)) ?x9320 ?x9318 ?x9317 ?x9316 ?x3739 (* (- 12) (* r s s x s00 s00)) (* 2 (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* 4 (* r s s s s00 s00)) (* (- 36) (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484)) (* (- 90) (* r x x x x00)) (* (- 54) (* s x x s00 r00)) (* 18 (* x x x s00 r00)) (* 6 (* s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484)) (* (- 18) (* s s s s00 r00)) (* 54 (* s s x s00 r00)) (* 9 (* s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* 66 (* s s s x s00)) (* 108 (* s s s r00 r00)) (* (- 4) (* r x x x s00 s00)) (* (- 9) (* ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484)) (* (- 20) (* s s s s s00)) ?x4659 (* 38 (* s x x x s00)) (* (- 78) (* s s x x s00)) ?x7275 (* 72 (* s s s r00)) (* (- 216) (* s s x r00)) ?x5114 (* (- 54) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484)) (* 24 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484)) (* 144 (* r s s s r00)) (* (- 72) (* x x x r00)) (* 2 (* ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484)) ?x9424 ?x9425 ?x9426 ?x9427 ?x9428 ?x9429 ?x9430 ?x9431 (* (- 54) (* r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* (- 324) (* s s x r00 r00)) (* (- 18) (* s s s x x00)) (* 270 (* r s x x x00)) (* (- 6) (* s s x s00 s00 r00)) (* 4 (* r00 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484)) (* 90 (* r s s s x00)) (* (- 270) (* r s s x x00)) (* 15 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) ?x9449 (* 6 (* s s s s x00)) (* 18 (* s s x x x00)) (* 6 (* s x x s00 s00 r00)) (* (- 54) (* r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484)) ?x5428 (* (- 36) (* r00 r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484)) (* 72 (* s s s s r00 r00)) (* (- 252) (* s s s x r00 r00)) (* 324 (* s s x x r00 r00)) (* 24 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) ?x9465 ?x9468 (* 324 (* s x x r00 r00)) (* (- 2) (* x x x s00 s00 r00)) (* 6 (* x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) (* (- 36) (* x x x r00 r00 x00)) ?x3097 (* (- 54) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* (- 36) (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* 36 (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* 90 (* s s s r00 x00)) (* 36 (* r s s s r00 x00)) (* (- 270) (* s s x r00 x00)) (* (- 108) (* r s s x r00 x00)) (* 270 (* s x x r00 x00)) (* 108 (* r s x x r00 x00)) ?x9651 (* (- 6) (* x x x x s00)) (* (- 108) (* s s x r00 r00 x00)) (* (- 3) (* ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) ?x8831 (* 108 (* s x x r00 r00 x00)) (* (- 12) (* s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)))))
 (let ((?x1442 (* x00 x00)))
 (let ((?x1472 (* (- 108) ?x1442)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x1471 (* (- 16) ?x1280)))
 (let ((?x1152 (* s00 r00 r00 r00)))
 (let ((?x1467 (* (- 216) ?x1152)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x979 (* 432 ?x978)))
 (let ((?x901 (* s00 x00)))
 (let ((?x1225 (* 108 ?x901)))
 (let ((?x827 (* s00 s00 r00 r00)))
 (let ((?x828 (* 36 ?x827)))
 (let ((?x764 (* s00 s00 r00)))
 (let ((?x1108 (* 108 ?x764)))
 (let ((?x743 (* s00 r00 r00)))
 (let ((?x1096 (* 36 ?x743)))
 (let ((?x687 (* s00 s00)))
 (let ((?x1461 (* (- 51) ?x687)))
 (let ((?x661 (* s r00 r00)))
 (let ((?x960 (* (- 36) ?x661)))
 (let ((?x618 (* r00 x00)))
 (let ((?x1458 (* (- 108) ?x618)))
 (let ((?x609 (* s00 r00 x00)))
 (let ((?x1457 (* (- 216) ?x609)))
 (let ((?x522 (* s00 r00)))
 (let ((?x616 (* 54 ?x522)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1473 (+ ?x143 ?x1083 ?x616 ?x1457 ?x1458 (* (- 15) (* s s)) ?x960 ?x1461 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1096 ?x1108 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x828 (* (- 108) (* s s00 r00)) (* 4 ?x899) ?x1225 (* 108 (* s x)) (* (- 108) (* x x)) ?x979 (* 12 (* s s s00)) ?x1467 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1471 (* 216 (* x x00)) ?x1472)))
 (let (($x1474 (= ?x1473 0)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x792 (* (- 2) ?x764)))
 (let ((?x1012 (* (- 15) ?x687)))
 (let ((?x641 (* s s)))
 (let ((?x665 (* 3 ?x641)))
 (let ((?x647 (* (- 54) ?x618)))
 (let ((?x660 (* 24 ?x522)))
 (let ((?x1175 (+ ?x143 ?x1083 (* (- 24) (* r s)) (* 24 (* r s00)) ?x660 ?x647 ?x665 (* 54 (* r x)) (* 36 (* r x r00)) ?x960 ?x1012 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1096 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x792 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x902 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x986 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1180 (= ?x1175 0)))
 (let ((?x744 (* 6 ?x743)))
 (let ((?x700 (* (- 4) ?x687)))
 (let ((?x642 (* 2 ?x641)))
 (let ((?x632 (* (- 18) ?x618)))
 (let ((?x637 (* 9 ?x522)))
 (let ((?x474 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x841 (+ ?x47 ?x474 (* (- 9) (* r s)) (* 9 (* r s00)) ?x637 ?x632 ?x642 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x661) ?x700 (* 18 (* x r00)) ?x744 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x848 (= ?x841 0)))
 (let ((?x565 (* r00 r00 r00)))
 (let ((?x566 (* 12 ?x565)))
 (let ((?x600 (* (- 6) ?x522)))
 (let ((?x597 (* (- 6) x00)))
 (let ((?x596 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x595 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x601 (+ ?x43 ?x595 ?x56 ?x44 ?x596 ?x597 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x600 ?x566)))
 (let (($x602 (= ?x601 0)))
 (let ((?x397 (* r00 r00)))
 (let ((?x398 (* 3 ?x397)))
 (let ((?x427 (* (- 1) s00)))
 (let (($x430 (= (+ s ?x427 (* (- 3) (* r r)) ?x398) 0)))
 (and $x430 $x602 $x848 $x1180 $x1474 (not (= ?x3841 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x4131 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x5958 (+ 3 s ?x214)))
 (let ((?x376 (* (- 1) s)))
 (let ((?x5998 (+ x ?x376)))
 (let ((?x1481 (+ 1 r)))
 (let ((?x8978 (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)))
 (let ((?x8942 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8624 (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8596 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8528 (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8332 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8253 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8224 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8034 (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x6708 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x4644 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x3168 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x6065 (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x3982 (+ (* 36 ?x6065) (* (- 6) (* s00 ?x5998 ?x5998 ?x5998 ?x5998)) (* 24 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 3) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 9) (* s00 ?x5998 ?x5998 ?x5998)) (* 36 (* r00 ?x1481 ?x5998 ?x5998 ?x5998 ?x5998)) (* 15 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 54) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 4 (* r00 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 6) (* x00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 24) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 9 (* ?x5998 ?x5998 ?x5998 ?x5958)) (* 6 (* ?x5998 ?x5998 ?x5998 ?x5998 ?x5958)) (* 36 (* r00 r00 s00 ?x5998 ?x5998 ?x5998)) (* 6 (* s00 x00 ?x5998 ?x5998 ?x5998)) (* 24 (* s00 ?x1481 ?x5998 ?x5998 ?x5998)) (* (- 36) (* r00 x00 ?x1481 ?x5998 ?x5998 ?x5998)) (* 54 (* r00 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 4) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 15 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 36 ?x3168) (* 54 (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 2) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 54) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 9) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 6) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 2) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 15) (* s00 s00 ?x5998 ?x5998 ?x5998)) (* 24 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 54) (* x00 ?x1481 ?x5998 ?x5998 ?x5998)) (* 4 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 4 ?x4644) (* 36 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 24 (* r00 s00 ?x5998 ?x5998 ?x5998)) (* (- 36) ?x6708) (* (- 12) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 6 (* x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 54) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 3) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 54) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 24 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 12 (* s00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 6) (* s00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 12) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 36) ?x8034) (* (- 24) (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* 2 (* s00 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 6 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 9 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 24) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 2) ?x8224) (* 36 ?x8253) (* (- 54) (* r00 x00 ?x5998 ?x5998 ?x5998)) (* 36 (* r00 r00 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 4) ?x8332) (* 36 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 2) (* r00 s00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 24) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 6) (* s00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 54 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 9 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 6 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 4) (* s00 s00 ?x1481 ?x5998 ?x5998 ?x5998)) (* (- 36) ?x8528) (* (- 6) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 9) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 3 (* ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 2) ?x8596) (* (- 24) (* r00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 ?x8624) (* 54 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 36) (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 54 (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 2) (* r00 s00 s00 ?x5998 ?x5998 ?x5998)) (* 6 (* x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 36) (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 36) (* r00 r00 x00 ?x5998 ?x5998 ?x5998)) (* 36 (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 54 (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 24 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 24) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 36) (* r00 r00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 ?x8942) (* (- 36) ?x8978))))
 (let ((?x1442 (* x00 x00)))
 (let ((?x6594 (* 108 ?x1442)))
 (let ((?x6553 (* (- 9) s)))
 (let ((?x5869 (* r00 r00 s00)))
 (let ((?x6535 (* (- 36) ?x5869)))
 (let ((?x137 (* 9 s00)))
 (let ((?x687 (* s00 s00)))
 (let ((?x6496 (* 51 ?x687)))
 (let ((?x6029 (* r00 r00 s)))
 (let ((?x5713 (* 36 ?x6029)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x6468 (* 16 ?x1280)))
 (let ((?x901 (* s00 x00)))
 (let ((?x6438 (* (- 108) ?x901)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x6280 (* (- 432) ?x978)))
 (let ((?x618 (* r00 x00)))
 (let ((?x5846 (* 108 ?x618)))
 (let ((?x6599 (+ (* 216 (* r00 s00 x00)) ?x5846 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6280 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6438 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6468 (* (- 108) (* x s)) ?x5713 ?x6496 (* (- 108) (* r00 x)) ?x137 ?x6535 ?x6553 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6594)))
 (let (($x6604 (= ?x6599 0)))
 (let ((?x5896 (* 15 ?x687)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x8646 (* 36 ?x973)))
 (let ((?x6178 (* (- 6) ?x901)))
 (let ((?x6144 (* 54 ?x618)))
 (let ((?x8503 (+ (* 24 (* s r)) ?x6144 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x6178 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5713 ?x8646 ?x5896 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6535 (* 54 (* x00 r)) ?x6553 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x595 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x8254 (* 4 ?x687)))
 (let ((?x8726 (* 18 ?x618)))
 (let ((?x8274 (+ (* 9 (* s r)) ?x8726 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x6029) ?x8254 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x5869) (* 18 (* x00 r)) ?x595 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x565 (* r00 r00 r00)))
 (let ((?x566 (* 12 ?x565)))
 (let ((?x597 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x596 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x8269 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x595 ?x596 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x597 ?x566)))
 (let (($x5977 (= (+ s00 ?x376 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x5977 (= ?x8269 0) (= ?x8274 0) (= ?x8503 0) $x6604 (not (= ?x3982 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5680 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1484 (+ 3 ?x214 s)))
 (let ((?x376 (* (- 1) s)))
 (let ((?x1490 (+ ?x376 x)))
 (let ((?x1481 (+ 1 r)))
 (let ((?x8831 (* 36 (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x9651 (* 36 (* s s s r00 r00 x00))))
 (let ((?x3097 (* 2 (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x9468 (* 36 (* x x x x r00 r00))))
 (let ((?x9465 (* (- 180) (* s x x x r00 r00))))
 (let ((?x5428 (* (- 36) (* r00 r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x9449 (* 2 (* s s s s00 s00 r00))))
 (let ((?x9431 (* 6 (* r s s s x s00))))
 (let ((?x9430 (* 36 (* r r s s x s00))))
 (let ((?x9429 (* (- 2) (* r s s s s s00))))
 (let ((?x9428 (* (- 12) (* r r s s s s00))))
 (let ((?x9427 (* 2 (* r s x x x s00))))
 (let ((?x9426 (* 12 (* r r x x x s00))))
 (let ((?x9425 (* (- 6) (* r s s x x s00))))
 (let ((?x9424 (* (- 36) (* r r s x x s00))))
 (let ((?x5114 (* (- 2) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484 ?x1484))))
 (let ((?x7275 (* 4 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x4659 (* (- 4) (* r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484 ?x1484))))
 (let ((?x3739 (* 2 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484))))
 (let ((?x9316 (* 114 (* r x x x s00))))
 (let ((?x9317 (* (- 342) (* r s x x s00))))
 (let ((?x9318 (* 342 (* r s s x s00))))
 (let ((?x9320 (* (- 114) (* r s s s s00))))
 (let ((?x9326 (* 6 (* x x x s00 x00))))
 (let ((?x9323 (* (- 18) (* s x x s00 x00))))
 (let ((?x9328 (* 18 (* s s x s00 x00))))
 (let ((?x9325 (* (- 6) (* s s s s00 x00))))
 (let ((?x3317 (* (- 36) (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x9330 (* 36 (* x x x s00 r00 r00))))
 (let ((?x9327 (* (- 108) (* s x x s00 r00 r00))))
 (let ((?x9332 (* 108 (* s s x s00 r00 r00))))
 (let ((?x9329 (* (- 36) (* s s s s00 r00 r00))))
 (let ((?x9334 (* 90 (* r x x x x))))
 (let ((?x9331 (* (- 24) (* s s x x x))))
 (let ((?x9336 (* (- 384) (* r s x x x))))
 (let ((?x9338 (* 36 (* s s s x x))))
 (let ((?x9340 (* (- 24) (* s s s s x))))
 (let ((?x9342 (* 6 (* s s s s s))))
 (let ((?x2677 (* 6 (* s x x x x))))
 (let ((?x9344 (* 72 (* x x x x))))
 (let ((?x9353 (* 135 (* s x x))))
 (let ((?x9354 (* (- 135) (* s s x))))
 (let ((?x9355 (* (- 303) (* s x x x))))
 (let ((?x9358 (* (- 45) (* x x x))))
 (let ((?x2231 (* 36 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x9062 (* (- 72) (* x x x x00))))
 (let ((?x9060 (* (- 6) (* s x x x x00))))
 (let ((?x9059 (* 36 (* r s s s s r00))))
 (let ((?x9057 (* (- 144) (* r s s s x r00))))
 (let ((?x9052 (* 216 (* r s s x x r00))))
 (let ((?x9257 (* (- 144) (* r s x x x r00))))
 (let ((?x9259 (* 90 (* x x x x r00))))
 (let ((?x9264 (* 36 (* r x x x x r00))))
 (let ((?x1544 (* 36 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484))))
 (let ((?x1107 (* (- 2) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484))))
 (let ((?x899 (* s s s)))
 (let ((?x9225 (* 45 ?x899)))
 (let ((?x810 (* (- 36) (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484))))
 (let ((?x3841 (+ (* 12 (* r s x x s00 s00)) (* (- 90) (* x x x r00 x00)) (* (- 36) (* r x x x r00 x00)) (* (- 24) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* 54 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* (- 24) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) ?x810 (* (- 108) (* x x x r00 r00)) ?x9225 ?x1107 (* (- 3) (* ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484 ?x1484)) (* 216 (* s x x r00)) (* 3 (* ?x1490 ?x1490 ?x1490 ?x1484 ?x1484)) (* (- 6) (* s00 x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* 54 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* 54 (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* (- 6) (* ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484)) (* 15 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) ?x1544 ?x9264 (* (- 2) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) (* 54 (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) ?x9259 ?x9257 (* 19 (* s s s s00 s00)) (* (- 2) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* (- 19) (* x x x s00 s00)) (* 57 (* s x x s00 s00)) (* (- 57) (* s s x s00 s00)) (* (- 9) (* ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) (* (- 384) (* s x x x r00)) (* 24 (* r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) ?x9052 (* 612 (* s s x x r00)) ?x9057 (* (- 432) (* s s s x r00)) (* 4 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) ?x9059 (* 114 (* s s s s r00)) (* 72 (* s s s x00)) ?x9060 ?x9062 (* (- 4) (* r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) ?x2231 (* (- 216) (* s s x x00)) (* 216 (* s x x x00)) ?x9358 (* (- 12) (* s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484)) ?x9355 ?x9354 ?x9353 (* 216 (* r s s s r00 r00)) (* 486 (* r s x x)) (* 477 (* s s x x)) (* (- 24) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* 24 (* r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484)) (* 2 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) (* (- 648) (* r s s x r00 r00)) (* (- 333) (* s s s x)) (* (- 486) (* r s s x)) (* 36 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* 6 (* x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484)) (* 648 (* r s x x r00 r00)) (* 87 (* s s s s)) (* 162 (* r s s s)) (* (- 162) (* r x x x)) (* (- 216) (* r x x x r00 r00)) (* 12 (* r s s s s00 r00)) (* (- 2) (* s x x x s00 r00)) (* (- 12) (* r x x x s00 r00)) (* 2 (* s s s s s00 r00)) ?x9344 ?x2677 (* 36 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) (* (- 36) (* r s s x s00 r00)) (* 36 (* r s x x s00 r00)) (* 9 (* s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* (- 6) (* s s s x s00 r00)) (* 6 (* s s x x s00 r00)) (* 6 (* s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* (- 6) (* ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484)) (* (- 144) (* r x x x r00)) (* 114 (* r s s s s)) ?x9342 (* (- 432) (* r s s s x)) ?x9340 (* (- 432) (* r s s x r00)) (* (- 144) (* r r x x x)) (* 612 (* r s s x x)) ?x9338 (* 432 (* r s x x r00)) (* 432 (* r r s x x)) ?x9336 ?x9331 ?x9334 ?x9329 ?x9332 ?x9327 ?x9330 ?x3317 (* (- 6) (* s00 x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) ?x9325 ?x9328 ?x9323 (* (- 432) (* r r s s x)) (* 144 (* r r s s s)) ?x9326 (* 57 (* x x x s00)) (* (- 24) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* (- 171) (* s x x s00)) (* 171 (* s s x s00)) (* (- 57) (* s s s s00)) ?x9320 ?x9318 ?x9317 ?x9316 ?x3739 (* (- 12) (* r s s x s00 s00)) (* 2 (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* 4 (* r s s s s00 s00)) (* (- 36) (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484)) (* (- 90) (* r x x x x00)) (* (- 54) (* s x x s00 r00)) (* 18 (* x x x s00 r00)) (* 6 (* s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484)) (* (- 18) (* s s s s00 r00)) (* 54 (* s s x s00 r00)) (* 9 (* s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* 66 (* s s s x s00)) (* 108 (* s s s r00 r00)) (* (- 4) (* r x x x s00 s00)) (* (- 9) (* ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484)) (* (- 20) (* s s s s s00)) ?x4659 (* 38 (* s x x x s00)) (* (- 78) (* s s x x s00)) ?x7275 (* 72 (* s s s r00)) (* (- 216) (* s s x r00)) ?x5114 (* (- 54) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484)) (* 24 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484 ?x1484)) (* 144 (* r s s s r00)) (* (- 72) (* x x x r00)) (* 2 (* ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484)) ?x9424 ?x9425 ?x9426 ?x9427 ?x9428 ?x9429 ?x9430 ?x9431 (* (- 54) (* r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* (- 324) (* s s x r00 r00)) (* (- 18) (* s s s x x00)) (* 270 (* r s x x x00)) (* (- 6) (* s s x s00 s00 r00)) (* 4 (* r00 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484)) (* 90 (* r s s s x00)) (* (- 270) (* r s s x x00)) (* 15 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) ?x9449 (* 6 (* s s s s x00)) (* 18 (* s s x x x00)) (* 6 (* s x x s00 s00 r00)) (* (- 54) (* r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484)) ?x5428 (* (- 36) (* r00 r00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484)) (* 72 (* s s s s r00 r00)) (* (- 252) (* s s s x r00 r00)) (* 324 (* s s x x r00 r00)) (* 24 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) ?x9465 ?x9468 (* 324 (* s x x r00 r00)) (* (- 2) (* x x x s00 s00 r00)) (* 6 (* x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)) (* (- 36) (* x x x r00 r00 x00)) ?x3097 (* (- 54) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) (* (- 36) (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* 36 (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484)) (* 90 (* s s s r00 x00)) (* 36 (* r s s s r00 x00)) (* (- 270) (* s s x r00 x00)) (* (- 108) (* r s s x r00 x00)) (* 270 (* s x x r00 x00)) (* 108 (* r s x x r00 x00)) ?x9651 (* (- 6) (* x x x x s00)) (* (- 108) (* s s x r00 r00 x00)) (* (- 3) (* ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484 ?x1484)) ?x8831 (* 108 (* s x x r00 r00 x00)) (* (- 12) (* s00 ?x1481 ?x1481 ?x1481 ?x1490 ?x1490 ?x1484 ?x1484)))))
 (let ((?x1442 (* x00 x00)))
 (let ((?x1472 (* (- 108) ?x1442)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x1471 (* (- 16) ?x1280)))
 (let ((?x1152 (* s00 r00 r00 r00)))
 (let ((?x1467 (* (- 216) ?x1152)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x979 (* 432 ?x978)))
 (let ((?x901 (* s00 x00)))
 (let ((?x1225 (* 108 ?x901)))
 (let ((?x827 (* s00 s00 r00 r00)))
 (let ((?x828 (* 36 ?x827)))
 (let ((?x764 (* s00 s00 r00)))
 (let ((?x1108 (* 108 ?x764)))
 (let ((?x743 (* s00 r00 r00)))
 (let ((?x1096 (* 36 ?x743)))
 (let ((?x687 (* s00 s00)))
 (let ((?x1461 (* (- 51) ?x687)))
 (let ((?x661 (* s r00 r00)))
 (let ((?x960 (* (- 36) ?x661)))
 (let ((?x618 (* r00 x00)))
 (let ((?x1458 (* (- 108) ?x618)))
 (let ((?x609 (* s00 r00 x00)))
 (let ((?x1457 (* (- 216) ?x609)))
 (let ((?x522 (* s00 r00)))
 (let ((?x616 (* 54 ?x522)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1473 (+ ?x143 ?x1083 ?x616 ?x1457 ?x1458 (* (- 15) (* s s)) ?x960 ?x1461 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1096 ?x1108 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x828 (* (- 108) (* s s00 r00)) (* 4 ?x899) ?x1225 (* 108 (* s x)) (* (- 108) (* x x)) ?x979 (* 12 (* s s s00)) ?x1467 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1471 (* 216 (* x x00)) ?x1472)))
 (let (($x1474 (= ?x1473 0)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x792 (* (- 2) ?x764)))
 (let ((?x1012 (* (- 15) ?x687)))
 (let ((?x641 (* s s)))
 (let ((?x665 (* 3 ?x641)))
 (let ((?x647 (* (- 54) ?x618)))
 (let ((?x660 (* 24 ?x522)))
 (let ((?x1175 (+ ?x143 ?x1083 (* (- 24) (* r s)) (* 24 (* r s00)) ?x660 ?x647 ?x665 (* 54 (* r x)) (* 36 (* r x r00)) ?x960 ?x1012 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1096 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x792 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x902 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x986 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1180 (= ?x1175 0)))
 (let ((?x744 (* 6 ?x743)))
 (let ((?x700 (* (- 4) ?x687)))
 (let ((?x642 (* 2 ?x641)))
 (let ((?x632 (* (- 18) ?x618)))
 (let ((?x637 (* 9 ?x522)))
 (let ((?x474 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x841 (+ ?x47 ?x474 (* (- 9) (* r s)) (* 9 (* r s00)) ?x637 ?x632 ?x642 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x661) ?x700 (* 18 (* x r00)) ?x744 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x848 (= ?x841 0)))
 (let ((?x565 (* r00 r00 r00)))
 (let ((?x566 (* 12 ?x565)))
 (let ((?x600 (* (- 6) ?x522)))
 (let ((?x597 (* (- 6) x00)))
 (let ((?x596 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x595 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x601 (+ ?x43 ?x595 ?x56 ?x44 ?x596 ?x597 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x600 ?x566)))
 (let (($x602 (= ?x601 0)))
 (let ((?x397 (* r00 r00)))
 (let ((?x398 (* 3 ?x397)))
 (let ((?x427 (* (- 1) s00)))
 (let (($x430 (= (+ s ?x427 (* (- 3) (* r r)) ?x398) 0)))
 (let (($x3850 (and $x430 $x602 $x848 $x1180 $x1474 (not (= ?x3841 0)))))
 (let ((?x5958 (+ 3 s ?x214)))
 (let ((?x5998 (+ x ?x376)))
 (let ((?x8978 (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)))
 (let ((?x8942 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8624 (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8596 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8528 (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8332 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8253 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8224 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8034 (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x6708 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x4644 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x3168 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x6065 (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x3982 (+ (* 36 ?x6065) (* (- 6) (* s00 ?x5998 ?x5998 ?x5998 ?x5998)) (* 24 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 3) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 9) (* s00 ?x5998 ?x5998 ?x5998)) (* 36 (* r00 ?x1481 ?x5998 ?x5998 ?x5998 ?x5998)) (* 15 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 54) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 4 (* r00 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 6) (* x00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 24) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 9 (* ?x5998 ?x5998 ?x5998 ?x5958)) (* 6 (* ?x5998 ?x5998 ?x5998 ?x5998 ?x5958)) (* 36 (* r00 r00 s00 ?x5998 ?x5998 ?x5998)) (* 6 (* s00 x00 ?x5998 ?x5998 ?x5998)) (* 24 (* s00 ?x1481 ?x5998 ?x5998 ?x5998)) (* (- 36) (* r00 x00 ?x1481 ?x5998 ?x5998 ?x5998)) (* 54 (* r00 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 4) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 15 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 36 ?x3168) (* 54 (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 2) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 54) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 9) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 6) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 2) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 15) (* s00 s00 ?x5998 ?x5998 ?x5998)) (* 24 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 54) (* x00 ?x1481 ?x5998 ?x5998 ?x5998)) (* 4 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 4 ?x4644) (* 36 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 24 (* r00 s00 ?x5998 ?x5998 ?x5998)) (* (- 36) ?x6708) (* (- 12) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 6 (* x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 54) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 3) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 54) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 24 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 12 (* s00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 6) (* s00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 12) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 36) ?x8034) (* (- 24) (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* 2 (* s00 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 6 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 9 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 24) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 2) ?x8224) (* 36 ?x8253) (* (- 54) (* r00 x00 ?x5998 ?x5998 ?x5998)) (* 36 (* r00 r00 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 4) ?x8332) (* 36 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 2) (* r00 s00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 24) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 6) (* s00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 54 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 9 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 6 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 4) (* s00 s00 ?x1481 ?x5998 ?x5998 ?x5998)) (* (- 36) ?x8528) (* (- 6) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 9) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 3 (* ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 2) ?x8596) (* (- 24) (* r00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 ?x8624) (* 54 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 36) (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 54 (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 2) (* r00 s00 s00 ?x5998 ?x5998 ?x5998)) (* 6 (* x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 36) (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 36) (* r00 r00 x00 ?x5998 ?x5998 ?x5998)) (* 36 (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 54 (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 24 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 24) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 36) (* r00 r00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 ?x8942) (* (- 36) ?x8978))))
 (let ((?x6594 (* 108 ?x1442)))
 (let ((?x6553 (* (- 9) s)))
 (let ((?x5869 (* r00 r00 s00)))
 (let ((?x6535 (* (- 36) ?x5869)))
 (let ((?x137 (* 9 s00)))
 (let ((?x6496 (* 51 ?x687)))
 (let ((?x6029 (* r00 r00 s)))
 (let ((?x5713 (* 36 ?x6029)))
 (let ((?x6468 (* 16 ?x1280)))
 (let ((?x6438 (* (- 108) ?x901)))
 (let ((?x6280 (* (- 432) ?x978)))
 (let ((?x5846 (* 108 ?x618)))
 (let ((?x6599 (+ (* 216 (* r00 s00 x00)) ?x5846 (* (- 54) (* r00 s00)) (* 15 ?x641) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) ?x899) (* 108 (* x x)) ?x6280 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6438 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6468 (* (- 108) (* x s)) ?x5713 ?x6496 (* (- 108) (* r00 x)) ?x137 ?x6535 ?x6553 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6594)))
 (let (($x6604 (= ?x6599 0)))
 (let ((?x5896 (* 15 ?x687)))
 (let ((?x8646 (* 36 ?x973)))
 (let ((?x6178 (* (- 6) ?x901)))
 (let ((?x6144 (* 54 ?x618)))
 (let ((?x8503 (+ (* 24 (* s r)) ?x6144 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x641) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x6178 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5713 ?x8646 ?x5896 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6535 (* 54 (* x00 r)) ?x6553 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x8254 (* 4 ?x687)))
 (let ((?x8726 (* 18 ?x618)))
 (let ((?x8274 (+ (* 9 (* s r)) ?x8726 (* (- 9) (* r00 s00)) (* (- 2) ?x641) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x6029) ?x8254 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x5869) (* 18 (* x00 r)) ?x595 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x8269 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x595 ?x596 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x597 ?x566)))
 (let (($x5977 (= (+ s00 ?x376 (* 3 (* r r)) (* (- 3) ?x397)) 0)))
 (let (($x4002 (and $x5977 (= ?x8269 0) (= ?x8274 0) (= ?x8503 0) $x6604 (not (= ?x3982 0)))))
 (rewrite (= $x4002 $x3850))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x6152 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x5958 (+ 3 s ?x214)))
 (let ((?x376 (* (- 1) s)))
 (let ((?x5998 (+ x ?x376)))
 (let ((?x1481 (+ 1 r)))
 (let ((?x8978 (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)))
 (let ((?x8942 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8624 (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8596 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8528 (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8332 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8253 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8224 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8034 (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x6708 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x4644 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x3168 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x6065 (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8987 (+ (* (- 36) ?x6065) (* 6 (* s00 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 24) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 3 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 9 (* s00 ?x5998 ?x5998 ?x5998)) (* (- 36) (* r00 ?x1481 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 15) (* s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 54 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 4) (* r00 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* 6 (* x00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 24 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 9) (* ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 6) (* ?x5998 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 36) (* r00 r00 s00 ?x5998 ?x5998 ?x5998)) (* (- 6) (* s00 x00 ?x5998 ?x5998 ?x5998)) (* (- 24) (* s00 ?x1481 ?x5998 ?x5998 ?x5998)) (* 36 (* r00 x00 ?x1481 ?x5998 ?x5998 ?x5998)) (* (- 54) (* r00 ?x5998 ?x5998 ?x5998 ?x5998)) (* 4 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 15) (* s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 36) ?x3168) (* (- 54) (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 2 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 54 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 9 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 6 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* 2 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 15 (* s00 s00 ?x5998 ?x5998 ?x5998)) (* (- 24) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 54 (* x00 ?x1481 ?x5998 ?x5998 ?x5998)) (* (- 4) (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 4) ?x4644) (* (- 36) (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 24) (* r00 s00 ?x5998 ?x5998 ?x5998)) (* 36 ?x6708) (* 12 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 6) (* x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 54 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 3 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)) (* 54 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 24) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 12) (* s00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 6 (* s00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 12 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 36 ?x8034) (* 24 (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 2) (* s00 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 6) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 9) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 24 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 2 ?x8224) (* (- 36) ?x8253) (* 54 (* r00 x00 ?x5998 ?x5998 ?x5998)) (* (- 36) (* r00 r00 ?x5998 ?x5998 ?x5998 ?x5998)) (* 4 ?x8332) (* (- 36) (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 2 (* r00 s00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 24 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 6 (* s00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 54) (* r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 9) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 6) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 4 (* s00 s00 ?x1481 ?x5998 ?x5998 ?x5998)) (* 36 ?x8528) (* 6 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 9 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 3) (* ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* 2 ?x8596) (* 24 (* r00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) ?x8624) (* (- 54) (* r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 36 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 54) (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5998)) (* 2 (* r00 s00 s00 ?x5998 ?x5998 ?x5998)) (* (- 6) (* x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 36 (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 36 (* r00 r00 x00 ?x5998 ?x5998 ?x5998)) (* (- 36) (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 54) (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 24) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 24 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 36 (* r00 r00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) ?x8942) (* 36 ?x8978))))
 (let ((?x1442 (* x00 x00)))
 (let ((?x6594 (* 108 ?x1442)))
 (let ((?x6553 (* (- 9) s)))
 (let ((?x5869 (* r00 r00 s00)))
 (let ((?x6535 (* (- 36) ?x5869)))
 (let ((?x137 (* 9 s00)))
 (let ((?x687 (* s00 s00)))
 (let ((?x6496 (* 51 ?x687)))
 (let ((?x6029 (* r00 r00 s)))
 (let ((?x5713 (* 36 ?x6029)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x6468 (* 16 ?x1280)))
 (let ((?x901 (* s00 x00)))
 (let ((?x6438 (* (- 108) ?x901)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x6280 (* (- 432) ?x978)))
 (let ((?x618 (* r00 x00)))
 (let ((?x5846 (* 108 ?x618)))
 (let ((?x6599 (+ (* 216 (* r00 s00 x00)) ?x5846 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6280 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6438 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6468 (* (- 108) (* x s)) ?x5713 ?x6496 (* (- 108) (* r00 x)) ?x137 ?x6535 ?x6553 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6594)))
 (let (($x6604 (= ?x6599 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x1012 (* (- 15) ?x687)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x641 (* s s)))
 (let ((?x665 (* 3 ?x641)))
 (let ((?x647 (* (- 54) ?x618)))
 (let ((?x5773 (+ (* (- 24) (* s r)) ?x647 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x665 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x902 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x6029) ?x986 ?x1012 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1083 (* 36 ?x5869) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x474 (* (- 3) s00)))
 (let ((?x700 (* (- 4) ?x687)))
 (let ((?x642 (* 2 ?x641)))
 (let ((?x632 (* (- 18) ?x618)))
 (let ((?x6176 (+ (* (- 9) (* s r)) ?x632 (* 9 (* r00 s00)) ?x642 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x6029) ?x700 (* 18 (* r00 x)) ?x474 (* 6 ?x5869) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x6063 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x474 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x5977 (= (+ s00 ?x376 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x5977 (= ?x6063 0) (= ?x6176 0) (= ?x5773 0) $x6604 (not (= ?x8987 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x8941 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x5958 (+ 3 s ?x214)))
 (let ((?x376 (* (- 1) s)))
 (let ((?x5998 (+ x ?x376)))
 (let ((?x1481 (+ 1 r)))
 (let ((?x8978 (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)))
 (let ((?x8942 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8624 (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8596 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8528 (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8332 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8253 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8224 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8034 (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x6708 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x4644 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x3168 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x6065 (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x3982 (+ (* 36 ?x6065) (* (- 6) (* s00 ?x5998 ?x5998 ?x5998 ?x5998)) (* 24 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 3) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 9) (* s00 ?x5998 ?x5998 ?x5998)) (* 36 (* r00 ?x1481 ?x5998 ?x5998 ?x5998 ?x5998)) (* 15 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 54) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 4 (* r00 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 6) (* x00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 24) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 9 (* ?x5998 ?x5998 ?x5998 ?x5958)) (* 6 (* ?x5998 ?x5998 ?x5998 ?x5998 ?x5958)) (* 36 (* r00 r00 s00 ?x5998 ?x5998 ?x5998)) (* 6 (* s00 x00 ?x5998 ?x5998 ?x5998)) (* 24 (* s00 ?x1481 ?x5998 ?x5998 ?x5998)) (* (- 36) (* r00 x00 ?x1481 ?x5998 ?x5998 ?x5998)) (* 54 (* r00 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 4) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 15 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 36 ?x3168) (* 54 (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 2) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 54) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 9) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 6) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 2) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 15) (* s00 s00 ?x5998 ?x5998 ?x5998)) (* 24 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 54) (* x00 ?x1481 ?x5998 ?x5998 ?x5998)) (* 4 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 4 ?x4644) (* 36 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 24 (* r00 s00 ?x5998 ?x5998 ?x5998)) (* (- 36) ?x6708) (* (- 12) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 6 (* x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 54) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 3) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 54) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 24 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 12 (* s00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 6) (* s00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 12) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 36) ?x8034) (* (- 24) (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* 2 (* s00 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 6 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 9 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 24) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 2) ?x8224) (* 36 ?x8253) (* (- 54) (* r00 x00 ?x5998 ?x5998 ?x5998)) (* 36 (* r00 r00 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 4) ?x8332) (* 36 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 2) (* r00 s00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 24) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 6) (* s00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 54 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 9 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 6 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 4) (* s00 s00 ?x1481 ?x5998 ?x5998 ?x5998)) (* (- 36) ?x8528) (* (- 6) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 9) (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 3 (* ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 2) ?x8596) (* (- 24) (* r00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 ?x8624) (* 54 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 36) (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 54 (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 2) (* r00 s00 s00 ?x5998 ?x5998 ?x5998)) (* 6 (* x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 36) (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 36) (* r00 r00 x00 ?x5998 ?x5998 ?x5998)) (* 36 (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 54 (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 24 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 24) (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 36) (* r00 r00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 2 ?x8942) (* (- 36) ?x8978))))
 (let ((?x1442 (* x00 x00)))
 (let ((?x6594 (* 108 ?x1442)))
 (let ((?x6553 (* (- 9) s)))
 (let ((?x5869 (* r00 r00 s00)))
 (let ((?x6535 (* (- 36) ?x5869)))
 (let ((?x137 (* 9 s00)))
 (let ((?x687 (* s00 s00)))
 (let ((?x6496 (* 51 ?x687)))
 (let ((?x6029 (* r00 r00 s)))
 (let ((?x5713 (* 36 ?x6029)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x6468 (* 16 ?x1280)))
 (let ((?x901 (* s00 x00)))
 (let ((?x6438 (* (- 108) ?x901)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x6280 (* (- 432) ?x978)))
 (let ((?x618 (* r00 x00)))
 (let ((?x5846 (* 108 ?x618)))
 (let ((?x6599 (+ (* 216 (* r00 s00 x00)) ?x5846 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6280 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6438 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6468 (* (- 108) (* x s)) ?x5713 ?x6496 (* (- 108) (* r00 x)) ?x137 ?x6535 ?x6553 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6594)))
 (let (($x6604 (= ?x6599 0)))
 (let ((?x5896 (* 15 ?x687)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x8646 (* 36 ?x973)))
 (let ((?x6178 (* (- 6) ?x901)))
 (let ((?x6144 (* 54 ?x618)))
 (let ((?x8503 (+ (* 24 (* s r)) ?x6144 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x6178 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5713 ?x8646 ?x5896 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6535 (* 54 (* x00 r)) ?x6553 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x595 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x8254 (* 4 ?x687)))
 (let ((?x8726 (* 18 ?x618)))
 (let ((?x8274 (+ (* 9 (* s r)) ?x8726 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x6029) ?x8254 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x5869) (* 18 (* x00 r)) ?x595 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x565 (* r00 r00 r00)))
 (let ((?x566 (* 12 ?x565)))
 (let ((?x597 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x596 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x8269 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x595 ?x596 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x597 ?x566)))
 (let (($x5977 (= (+ s00 ?x376 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x4002 (and $x5977 (= ?x8269 0) (= ?x8274 0) (= ?x8503 0) $x6604 (not (= ?x3982 0)))))
 (let ((?x8987 (+ (* (- 36) ?x6065) (* 6 (* s00 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 24) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 3 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 9 (* s00 ?x5998 ?x5998 ?x5998)) (* (- 36) (* r00 ?x1481 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 15) (* s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 54 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 4) (* r00 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* 6 (* x00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 24 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 9) (* ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 6) (* ?x5998 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 36) (* r00 r00 s00 ?x5998 ?x5998 ?x5998)) (* (- 6) (* s00 x00 ?x5998 ?x5998 ?x5998)) (* (- 24) (* s00 ?x1481 ?x5998 ?x5998 ?x5998)) (* 36 (* r00 x00 ?x1481 ?x5998 ?x5998 ?x5998)) (* (- 54) (* r00 ?x5998 ?x5998 ?x5998 ?x5998)) (* 4 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 15) (* s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 36) ?x3168) (* (- 54) (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 2 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 54 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 9 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 6 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* 2 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 15 (* s00 s00 ?x5998 ?x5998 ?x5998)) (* (- 24) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 54 (* x00 ?x1481 ?x5998 ?x5998 ?x5998)) (* (- 4) (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 4) ?x4644) (* (- 36) (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 24) (* r00 s00 ?x5998 ?x5998 ?x5998)) (* 36 ?x6708) (* 12 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 6) (* x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 54 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 3 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)) (* 54 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 24) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 12) (* s00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 6 (* s00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 12 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 36 ?x8034) (* 24 (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 2) (* s00 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 6) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 9) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 24 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 2 ?x8224) (* (- 36) ?x8253) (* 54 (* r00 x00 ?x5998 ?x5998 ?x5998)) (* (- 36) (* r00 r00 ?x5998 ?x5998 ?x5998 ?x5998)) (* 4 ?x8332) (* (- 36) (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 2 (* r00 s00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 24 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 6 (* s00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 54) (* r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 9) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 6) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 4 (* s00 s00 ?x1481 ?x5998 ?x5998 ?x5998)) (* 36 ?x8528) (* 6 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 9 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 3) (* ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* 2 ?x8596) (* 24 (* r00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) ?x8624) (* (- 54) (* r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 36 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 54) (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5998)) (* 2 (* r00 s00 s00 ?x5998 ?x5998 ?x5998)) (* (- 6) (* x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 36 (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 36 (* r00 r00 x00 ?x5998 ?x5998 ?x5998)) (* (- 36) (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 54) (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 24) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 24 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 36 (* r00 r00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) ?x8942) (* 36 ?x8978))))
 (let ((?x143 (* 9 s)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x1012 (* (- 15) ?x687)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x641 (* s s)))
 (let ((?x665 (* 3 ?x641)))
 (let ((?x647 (* (- 54) ?x618)))
 (let ((?x5773 (+ (* (- 24) (* s r)) ?x647 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x665 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x902 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x6029) ?x986 ?x1012 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1083 (* 36 ?x5869) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x474 (* (- 3) s00)))
 (let ((?x700 (* (- 4) ?x687)))
 (let ((?x642 (* 2 ?x641)))
 (let ((?x632 (* (- 18) ?x618)))
 (let ((?x6176 (+ (* (- 9) (* s r)) ?x632 (* 9 (* r00 s00)) ?x642 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x6029) ?x700 (* 18 (* r00 x)) ?x474 (* 6 ?x5869) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x6063 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x474 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x565))))
 (let (($x5985 (and $x5977 (= ?x6063 0) (= ?x6176 0) (= ?x5773 0) $x6604 (not (= ?x8987 0)))))
 (rewrite (= $x5985 $x4002))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x373 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (- x s)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x217 (* (- 36) ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216 x00)))
 (let ((?x221 (- (+ ?x217 (* 6 s00 ?x216 ?x216 ?x216 ?x216)) (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x224 (+ ?x221 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216) (* 9 s00 ?x216 ?x216 ?x216))))
 (let ((?x228 (- (- ?x224 (* 36 ?x213 r00 ?x216 ?x216 ?x216 ?x216)) (* 15 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x230 (+ ?x228 (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x234 (+ (- ?x230 (* 4 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 6 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x238 (+ (- ?x234 (* 2 ?x213 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x216 ?x216)) (* 24 ?x213 ?x213 ?x213 r00 ?x215 s00 ?x216 ?x216))))
 (let ((?x245 (- (- ?x238 (* 9 ?x215 ?x216 ?x216 ?x216)) (* 6 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x247 (- (- ?x245 (* 36 r00 r00 s00 ?x216 ?x216 ?x216)) (* 6 s00 ?x216 ?x216 ?x216 x00))))
 (let ((?x250 (+ (- ?x247 (* 24 ?x213 s00 ?x216 ?x216 ?x216)) (* 36 ?x213 r00 ?x216 ?x216 ?x216 x00))))
 (let ((?x254 (+ (- ?x250 (* 54 r00 ?x216 ?x216 ?x216 ?x216)) (* 4 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x258 (- ?x254 (* 15 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x259 (- ?x258 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x267 (+ (- ?x259 (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216 x00)) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216) (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216) (* 15 s00 s00 ?x216 ?x216 ?x216))))
 (let ((?x271 (+ (- ?x267 (* 24 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216)) (* 54 ?x213 ?x216 ?x216 ?x216 x00))))
 (let ((?x277 (- (- ?x271 (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216 ?x216)) (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x279 (- (- ?x277 (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 x00)) (* 24 r00 s00 ?x216 ?x216 ?x216))))
 (let ((?x282 (+ ?x279 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 12 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x284 (- ?x282 (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x288 (+ ?x284 (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216) (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216) (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x291 (- ?x288 (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x297 (+ (- ?x291 (* 12 ?x215 s00 ?x216 ?x216 ?x216)) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 x00) (* 12 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216) (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 24 ?x213 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x304 (- (- ?x297 (* 2 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 2 ?x213 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x306 (- (- ?x304 (* 6 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216 ?x216)) (* 2 ?x213 ?x213 ?x213 r00 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x310 (+ (- ?x306 (* 9 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216)) (* 24 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x312 (- ?x310 (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x316 (- (+ ?x312 (* 54 r00 ?x216 ?x216 ?x216 x00)) (* 36 r00 r00 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x318 (+ ?x316 (* 4 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x324 (+ (- ?x318 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216)) (* 2 r00 ?x215 s00 ?x216 ?x216 ?x216) (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216) (* 6 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216 x00))))
 (let ((?x328 (- ?x324 (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x330 (- (- ?x328 (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216)) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x335 (+ ?x330 (* 4 ?x213 s00 s00 ?x216 ?x216 ?x216) (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x340 (+ (- ?x335 (* 3 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216) (* 24 r00 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x343 (- ?x340 (* 2 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x346 (+ (- ?x343 (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 x00)) (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x350 (+ (- ?x346 (* 54 ?x213 ?x216 ?x216 ?x216 ?x216)) (* 2 r00 s00 s00 ?x216 ?x216 ?x216))))
 (let ((?x355 (+ (- ?x350 (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 x00)) (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 s00 ?x216 ?x216) (* 36 r00 r00 ?x216 ?x216 ?x216 x00))))
 (let ((?x360 (- (- ?x355 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216 x00)) (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x361 (- ?x360 (* 24 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x364 (+ ?x361 (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216) (* 36 r00 r00 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x366 (- ?x364 (* 2 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let (($x369 (= (+ ?x366 (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216)) 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not $x369))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5647 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x5958 (+ 3 s ?x214)))
 (let ((?x376 (* (- 1) s)))
 (let ((?x5998 (+ x ?x376)))
 (let ((?x1481 (+ 1 r)))
 (let ((?x8978 (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)))
 (let ((?x8942 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8624 (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8596 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8528 (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8332 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8253 (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8224 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x8034 (* r00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x6708 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x4644 (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x3168 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)))
 (let ((?x6065 (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)))
 (let ((?x8987 (+ (* (- 36) ?x6065) (* 6 (* s00 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 24) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 3 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 9 (* s00 ?x5998 ?x5998 ?x5998)) (* (- 36) (* r00 ?x1481 ?x5998 ?x5998 ?x5998 ?x5998)) (* (- 15) (* s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 54 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 4) (* r00 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* 6 (* x00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 24 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 9) (* ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 6) (* ?x5998 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 36) (* r00 r00 s00 ?x5998 ?x5998 ?x5998)) (* (- 6) (* s00 x00 ?x5998 ?x5998 ?x5998)) (* (- 24) (* s00 ?x1481 ?x5998 ?x5998 ?x5998)) (* 36 (* r00 x00 ?x1481 ?x5998 ?x5998 ?x5998)) (* (- 54) (* r00 ?x5998 ?x5998 ?x5998 ?x5998)) (* 4 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 15) (* s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 36) ?x3168) (* (- 54) (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 2 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 54 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 9 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 6 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* 2 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 15 (* s00 s00 ?x5998 ?x5998 ?x5998)) (* (- 24) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 54 (* x00 ?x1481 ?x5998 ?x5998 ?x5998)) (* (- 4) (* s00 s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 4) ?x4644) (* (- 36) (* r00 x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 24) (* r00 s00 ?x5998 ?x5998 ?x5998)) (* 36 ?x6708) (* 12 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 6) (* x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 54 (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* 3 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958 ?x5958)) (* 54 (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 24) (* ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 12) (* s00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 6 (* s00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 12 (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 36 ?x8034) (* 24 (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* (- 2) (* s00 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 6) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) (* r00 s00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 9) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 24 (* r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 2 ?x8224) (* (- 36) ?x8253) (* 54 (* r00 x00 ?x5998 ?x5998 ?x5998)) (* (- 36) (* r00 r00 ?x5998 ?x5998 ?x5998 ?x5998)) (* 4 ?x8332) (* (- 36) (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 2 (* r00 s00 ?x5998 ?x5998 ?x5998 ?x5958)) (* 24 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 6 (* s00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 54) (* r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 9) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 6) (* s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 4 (* s00 s00 ?x1481 ?x5998 ?x5998 ?x5998)) (* 36 ?x8528) (* 6 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 9 (* ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* (- 3) (* ?x5998 ?x5998 ?x5998 ?x5958 ?x5958)) (* 2 ?x8596) (* 24 (* r00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) ?x8624) (* (- 54) (* r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 36 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 54) (* ?x1481 ?x5998 ?x5998 ?x5998 ?x5998)) (* 2 (* r00 s00 s00 ?x5998 ?x5998 ?x5998)) (* (- 6) (* x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958)) (* 36 (* r00 r00 s00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* 36 (* r00 r00 x00 ?x5998 ?x5998 ?x5998)) (* (- 36) (* r00 r00 x00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958)) (* (- 54) (* x00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* (- 24) (* r00 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958 ?x5958)) (* 24 (* s00 ?x1481 ?x1481 ?x1481 ?x1481 ?x5998 ?x5998 ?x5958 ?x5958 ?x5958)) (* 36 (* r00 r00 ?x5998 ?x5998 ?x5998 ?x5958)) (* (- 2) ?x8942) (* 36 ?x8978))))
 (let ((?x1442 (* x00 x00)))
 (let ((?x6594 (* 108 ?x1442)))
 (let ((?x6553 (* (- 9) s)))
 (let ((?x5869 (* r00 r00 s00)))
 (let ((?x6535 (* (- 36) ?x5869)))
 (let ((?x137 (* 9 s00)))
 (let ((?x687 (* s00 s00)))
 (let ((?x6496 (* 51 ?x687)))
 (let ((?x6029 (* r00 r00 s)))
 (let ((?x5713 (* 36 ?x6029)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x6468 (* 16 ?x1280)))
 (let ((?x901 (* s00 x00)))
 (let ((?x6438 (* (- 108) ?x901)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x6280 (* (- 432) ?x978)))
 (let ((?x618 (* r00 x00)))
 (let ((?x5846 (* 108 ?x618)))
 (let ((?x6599 (+ (* 216 (* r00 s00 x00)) ?x5846 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6280 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6438 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x6468 (* (- 108) (* x s)) ?x5713 ?x6496 (* (- 108) (* r00 x)) ?x137 ?x6535 ?x6553 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6594)))
 (let (($x6604 (= ?x6599 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x1012 (* (- 15) ?x687)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x641 (* s s)))
 (let ((?x665 (* 3 ?x641)))
 (let ((?x647 (* (- 54) ?x618)))
 (let ((?x5773 (+ (* (- 24) (* s r)) ?x647 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x665 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x902 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x6029) ?x986 ?x1012 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1083 (* 36 ?x5869) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x474 (* (- 3) s00)))
 (let ((?x700 (* (- 4) ?x687)))
 (let ((?x642 (* 2 ?x641)))
 (let ((?x632 (* (- 18) ?x618)))
 (let ((?x6176 (+ (* (- 9) (* s r)) ?x632 (* 9 (* r00 s00)) ?x642 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x6029) ?x700 (* 18 (* r00 x)) ?x474 (* 6 ?x5869) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x6063 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x474 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x5977 (= (+ s00 ?x376 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x5985 (and $x5977 (= ?x6063 0) (= ?x6176 0) (= ?x5773 0) $x6604 (not (= ?x8987 0)))))
 (let ((?x216 (- x s)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x217 (* (- 36) ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216 x00)))
 (let ((?x221 (- (+ ?x217 (* 6 s00 ?x216 ?x216 ?x216 ?x216)) (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x224 (+ ?x221 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216) (* 9 s00 ?x216 ?x216 ?x216))))
 (let ((?x228 (- (- ?x224 (* 36 ?x213 r00 ?x216 ?x216 ?x216 ?x216)) (* 15 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x230 (+ ?x228 (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x234 (+ (- ?x230 (* 4 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 6 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x238 (+ (- ?x234 (* 2 ?x213 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x216 ?x216)) (* 24 ?x213 ?x213 ?x213 r00 ?x215 s00 ?x216 ?x216))))
 (let ((?x245 (- (- ?x238 (* 9 ?x215 ?x216 ?x216 ?x216)) (* 6 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x247 (- (- ?x245 (* 36 r00 r00 s00 ?x216 ?x216 ?x216)) (* 6 s00 ?x216 ?x216 ?x216 x00))))
 (let ((?x250 (+ (- ?x247 (* 24 ?x213 s00 ?x216 ?x216 ?x216)) (* 36 ?x213 r00 ?x216 ?x216 ?x216 x00))))
 (let ((?x254 (+ (- ?x250 (* 54 r00 ?x216 ?x216 ?x216 ?x216)) (* 4 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x258 (- ?x254 (* 15 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x259 (- ?x258 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x267 (+ (- ?x259 (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216 x00)) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216) (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216) (* 15 s00 s00 ?x216 ?x216 ?x216))))
 (let ((?x271 (+ (- ?x267 (* 24 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216 ?x216)) (* 54 ?x213 ?x216 ?x216 ?x216 x00))))
 (let ((?x277 (- (- ?x271 (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216 ?x216)) (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x279 (- (- ?x277 (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 x00)) (* 24 r00 s00 ?x216 ?x216 ?x216))))
 (let ((?x282 (+ ?x279 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 12 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x284 (- ?x282 (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x288 (+ ?x284 (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216) (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216) (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x291 (- ?x288 (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x297 (+ (- ?x291 (* 12 ?x215 s00 ?x216 ?x216 ?x216)) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 x00) (* 12 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216 ?x216) (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 24 ?x213 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x304 (- (- ?x297 (* 2 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 2 ?x213 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x306 (- (- ?x304 (* 6 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216 ?x216)) (* 2 ?x213 ?x213 ?x213 r00 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x310 (+ (- ?x306 (* 9 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216)) (* 24 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x312 (- ?x310 (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x316 (- (+ ?x312 (* 54 r00 ?x216 ?x216 ?x216 x00)) (* 36 r00 r00 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x318 (+ ?x316 (* 4 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x324 (+ (- ?x318 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216)) (* 2 r00 ?x215 s00 ?x216 ?x216 ?x216) (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216) (* 6 ?x213 ?x213 ?x213 ?x215 s00 ?x216 ?x216 x00))))
 (let ((?x328 (- ?x324 (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x330 (- (- ?x328 (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216)) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x335 (+ ?x330 (* 4 ?x213 s00 s00 ?x216 ?x216 ?x216) (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x340 (+ (- ?x335 (* 3 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216) (* 24 r00 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x343 (- ?x340 (* 2 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216))))
 (let ((?x346 (+ (- ?x343 (* 54 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 x00)) (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x350 (+ (- ?x346 (* 54 ?x213 ?x216 ?x216 ?x216 ?x216)) (* 2 r00 s00 s00 ?x216 ?x216 ?x216))))
 (let ((?x355 (+ (- ?x350 (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216 x00)) (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 s00 ?x216 ?x216) (* 36 r00 r00 ?x216 ?x216 ?x216 x00))))
 (let ((?x360 (- (- ?x355 (* 36 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216 x00)) (* 54 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x361 (- ?x360 (* 24 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x364 (+ ?x361 (* 24 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216) (* 36 r00 r00 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x366 (- ?x364 (* 2 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let (($x369 (= (+ ?x366 (* 36 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216 ?x216)) 0)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x372 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not $x369)))))
 (rewrite (= $x372 $x5985))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x374 (asserted $x373)))
 (let ((@x8713 (mp (mp @x374 (quant-intro (proof-bind ?x5647) (= $x373 $x6152)) $x6152) (rewrite (= $x6152 $x6152)) $x6152)))
 (let ((@x5818 (mp (mp @x8713 (quant-intro (proof-bind ?x8941) (= $x6152 $x4131)) $x4131) (quant-intro (proof-bind ?x5680) (= $x4131 $x5905)) $x5905)))
 (let ((@x3645 (mp (mp~ @x5818 (sk (~ $x5905 $x7387)) $x7387) (rewrite (= $x7387 $x6068)) $x6068)))
 (let ((@x3649 (and-elim @x3645 $x7378)))
 (let ((@x5975 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7378) $x3203)) @x3649 $x3203)))
 (let (($x6936 (>= ?x7381 0)))
 (let ((@x2258 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7378) $x6936)) @x3649 $x6936)))
 (let (($x3219 (<= ?x8986 0)))
 (let ((@x778 (and-elim @x3645 $x8988)))
 (let ((@x4443 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x8988) $x3219)) @x778 $x3219)))
 (let (($x8996 (>= ?x8986 0)))
 (let ((@x6006 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x8988) $x8996)) @x778 $x8996)))
 (let (($x3220 (<= ?x3180 0)))
 (let ((@x7962 (and-elim @x3645 $x3206)))
 (let ((@x8377 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3206) $x3220)) @x7962 $x3220)))
 (let (($x2335 (>= ?x3180 0)))
 (let ((@x4514 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3206) $x2335)) @x7962 $x2335)))
 (let (($x2334 (<= ?x1568 0)))
 (let ((@x1069 (and-elim @x3645 $x2019)))
 (let ((@x3162 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2019) $x2334)) @x1069 $x2334)))
 (let (($x9005 (>= ?x1568 0)))
 (let ((@x7461 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2019) $x9005)) @x1069 $x9005)))
 (let (($x9001 (<= ?x2316 0)))
 (let ((@x7976 (and-elim @x3645 $x2310)))
 (let ((@x6323 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2310) $x9001)) @x7976 $x9001)))
 (let (($x3221 (>= ?x2316 0)))
 (let ((@x6414 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2310) $x3221)) @x7976 $x3221)))
 (let (($x6245 (not (<= ?x4791 0))))
 (let (($x8287 (>= ?x4791 0)))
 (let ((@x2263 ((_ th-lemma arith) (hypothesis (not $x8287)) @x2258 @x5975 @x7461 @x3162 @x7461 @x3162 @x6414 @x6323 @x6414 @x6323 @x6414 @x6323 @x2258 @x5975 @x7461 @x3162 @x7461 @x3162 @x4514 @x8377 @x2258 @x5975 @x6006 @x4443 @x2258 @x5975 false)))
 (let ((@x7377 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4792 $x6245 (not $x8287))) (and-elim @x3645 $x3643) (or $x6245 (not $x8287)))))
 ((_ th-lemma arith) (unit-resolution @x7377 (lemma @x2263 $x8287) $x6245) @x2258 @x5975 @x7461 @x3162 @x7461 @x3162 @x6414 @x6323 @x6414 @x6323 @x6414 @x6323 @x2258 @x5975 @x7461 @x3162 @x7461 @x3162 @x4514 @x8377 @x2258 @x5975 @x6006 @x4443 @x2258 @x5975 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        39
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1976
 :arith-nonlinear-bounds    32
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 332
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                5.38
 :memory                    4.19
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                5315449
 :num-checks                1
 :propagations              12
 :rlimit-count              68478
 :time                      0.06
 :total-time                0.09)
