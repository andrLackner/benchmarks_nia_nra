unsat
((set-logic NIA)
(declare-fun s!0 () Int)
(declare-fun b!2 () Int)
(declare-fun q!3 () Int)
(declare-fun p!5 () Int)
(declare-fun a!4 () Int)
(declare-fun r!1 () Int)
(proof
(let ((?x226 (* (- 1) (* q00 a00 s!0))))
 (let ((?x177 (* q00 r00 b!2)))
 (let ((?x167 (* (- 1) (* p00 s00 b!2))))
 (let ((?x169 (* p00 b00 s!0)))
 (let ((?x123 (* (- 1) (* r00 b00 q!3))))
 (let ((?x138 (* s00 a00 q!3)))
 (let ((?x216 (+ ?x138 ?x123 ?x169 ?x167 ?x177 ?x226)))
 (let (($x168 (<= ?x216 0)))
 (let (($x182 (= ?x216 0)))
 (let ((?x424 (+ p!5 (* (- 1) q!3))))
 (let ((?x194 (* (- 1) b!2)))
 (let ((?x199 (+ ?x194 a!4)))
 (let ((?x201 (* (- 1) s!0)))
 (let ((?x389 (+ ?x201 r!1)))
 (let ((?x198 (* ?x389 ?x389 ?x389 ?x199 ?x199 ?x199 ?x424 ?x424 ?x216 s!0 s!0 s!0 s!0 b!2 b!2 b!2 q!3 q!3)))
 (let (($x189 (= ?x198 0)))
 (let (($x197 (not $x189)))
 (let ((?x539 (* p00 s00 a!4)))
 (let ((?x494 (* r00 b00 p!5)))
 (let ((?x433 (* q00 a00 r!1)))
 (let ((?x400 (+ ?x138 ?x123 ?x169 ?x167 ?x177 ?x226 (* (- 1) (* s00 a00 p!5)) (* (- 1) (* p00 b00 r!1)) ?x433 ?x494 (* (- 1) (* q00 r00 a!4)) ?x539)))
 (let ((?x505 (+ (* (- 1) p!5) q!3)))
 (let ((?x259 (* (- 1) a!4)))
 (let ((?x514 (+ b!2 ?x259)))
 (let ((?x478 (* (- 1) r!1)))
 (let ((?x561 (+ s!0 ?x478)))
 (let ((?x445 (* ?x561 ?x561 ?x561 ?x561 ?x514 ?x514 ?x514 ?x505 ?x505 ?x400 r!1 r!1 r!1 a!4 a!4 a!4 p!5 p!5)))
 (let (($x492 (= ?x445 0)))
 (let (($x446 (not $x492)))
 (let (($x464 (or $x446 $x197)))
 (let ((?x496 (* q00 r00 a!4)))
 (let ((?x415 (* p00 b00 r!1)))
 (let ((?x413 (* s00 a00 p!5)))
 (let ((?x498 (+ ?x413 ?x415 (* (- 1) ?x433) (* (- 1) ?x494) ?x496 (* (- 1) ?x539))))
 (let (($x500 (= ?x498 0)))
 (let ((?x352 (* p!5 b!2)))
 (let ((?x129 (* q00 a00)))
 (let (($x441 (= (+ ?x129 (* (- 1) (* p00 b00)) (* (- 1) (* q!3 a!4)) ?x352) 0)))
 (let ((?x203 (* b!2 r!1)))
 (let ((?x125 (* s00 a00)))
 (let (($x455 (= (+ ?x125 (* (- 1) (* r00 b00)) ?x203 (* (- 1) (* a!4 s!0))) 0)))
 (let ((?x408 (* q!3 r!1)))
 (let ((?x37 (* p00 s00)))
 (let (($x488 (= (+ ?x37 (* (- 1) (* q00 r00)) (* (- 1) (* p!5 s!0)) ?x408) 0)))
 (let (($x214 (and $x488 $x455 $x441 $x500 $x182 $x464)))
 (let ((?x443 (* (- 1) (* s!0 q00 a00))))
 (let ((?x332 (* q!3 s00 a00)))
 (let ((?x326 (* (- 1) (* q!3 r00 b00))))
 (let ((?x162 (* s!0 p00 b00)))
 (let ((?x163 (* (- 1) (* b!2 p00 s00))))
 (let ((?x178 (* b!2 q00 r00)))
 (let ((?x474 (+ ?x178 ?x163 ?x162 ?x326 ?x332 ?x443)))
 (let ((?x471 (+ a!4 ?x194)))
 (let ((?x200 (+ r!1 ?x201)))
 (let ((?x430 (* ?x200 ?x200 ?x200 ?x471 ?x471 ?x471 ?x424 ?x424 ?x474 s!0 s!0 s!0 s!0 b!2 b!2 b!2 q!3 q!3)))
 (let ((?x127 (* r!1 q00 a00)))
 (let ((?x147 (* (- 1) (* p!5 s00 a00))))
 (let ((?x307 (* (- 1) (* r!1 p00 b00))))
 (let ((?x373 (* p!5 r00 b00)))
 (let ((?x453 (* (- 1) (* a!4 q00 r00))))
 (let ((?x432 (* a!4 p00 s00)))
 (let ((?x499 (+ ?x259 b!2)))
 (let ((?x122 (+ ?x478 s!0)))
 (let ((?x418 (* ?x122 ?x122 ?x122 ?x122 ?x499 ?x499 ?x499 ?x505 ?x505 (+ ?x432 ?x453 ?x178 ?x163 ?x373 ?x307 ?x147 ?x127 ?x162 ?x326 ?x332 ?x443) r!1 r!1 r!1 a!4 a!4 a!4 p!5 p!5)))
 (let (($x481 (= (+ (* a!4 q!3) (* (- 1) ?x129) (* p00 b00) (* (- 1) ?x352)) 0)))
 (let (($x414 (= (+ (* a!4 s!0) (* (- 1) ?x203) (* (- 1) ?x125) (* r00 b00)) 0)))
 (let (($x235 (= (+ (* p!5 s!0) (* (- 1) ?x37) (* q00 r00) (* (- 1) ?x408)) 0)))
 (let (($x425 (and $x235 $x414 $x481 (= (+ ?x432 ?x453 ?x373 ?x307 ?x147 ?x127) 0) (= ?x474 0) (or (not (= ?x418 0)) (not (= ?x430 0))))))
 (let (($x405 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x299 (* (- 1) (* s q00 a00))))
 (let ((?x282 (* q s00 a00)))
 (let ((?x257 (* (- 1) (* q r00 b00))))
 (let ((?x247 (* s p00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x271 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x305 (+ ?x72 ?x271 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x322 (+ p (* (- 1) q))))
 (let ((?x318 (+ a (* (- 1) b))))
 (let ((?x314 (+ r (* (- 1) s))))
 (let ((?x548 (* ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x322 ?x322 ?x305 s s s s b b b q q)))
 (let ((?x218 (* r q00 a00)))
 (let ((?x240 (* (- 1) (* p s00 a00))))
 (let ((?x239 (* (- 1) (* r p00 b00))))
 (let ((?x184 (* p r00 b00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x238 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x550 (+ ?x63 ?x238 ?x72 ?x271 ?x184 ?x239 ?x240 ?x218 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x458 (* (- 1) p)))
 (let ((?x454 (+ ?x458 q)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x331 (+ ?x325 b)))
 (let ((?x495 (* (- 1) r)))
 (let ((?x490 (+ ?x495 s)))
 (let ((?x283 (* ?x490 ?x490 ?x490 ?x490 ?x331 ?x331 ?x331 ?x454 ?x454 ?x550 r r r a a a p p)))
 (let (($x310 (= ?x305 0)))
 (let (($x242 (= (+ ?x63 ?x238 ?x184 ?x239 ?x240 ?x218) 0)))
 (let ((?x130 (* p00 b00)))
 (let ((?x129 (* q00 a00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let (($x176 (= (+ (* a q) ?x173 ?x130 (* (- 1) (* p b))) 0)))
 (let ((?x143 (* r00 b00)))
 (let ((?x125 (* s00 a00)))
 (let ((?x132 (* (- 1) ?x125)))
 (let ((?x49 (* a s)))
 (let (($x158 (= (+ ?x49 (* (- 1) (* b r)) ?x132 ?x143) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x153 (= (+ ?x33 ?x134 ?x41 (* (- 1) (* q r))) 0)))
 (and $x153 $x158 $x176 $x242 $x310 (or (not (= ?x283 0)) (not (= ?x548 0))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x304 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x196 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x458 (* (- 1) p)))
 (let ((?x292 (+ q ?x458)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x261 (+ b ?x325)))
 (let ((?x495 (* (- 1) r)))
 (let ((?x287 (+ s ?x495)))
 (let ((?x223 (* ?x287 ?x287 ?x287 ?x287 ?x261 ?x261 ?x261 ?x292 ?x292 ?x196 r r r a a a p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x469 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x322 (+ p (* (- 1) q))))
 (let ((?x318 (+ a (* (- 1) b))))
 (let ((?x314 (+ r (* (- 1) s))))
 (let ((?x275 (* ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x322 ?x322 ?x469 s s s s b b b q q)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x489 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x367 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x379 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x134 ?x41) 0) (= ?x379 0) $x367 (= ?x489 0) (= ?x469 0) (or (not (= ?x275 0)) (not (= ?x223 0)))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x426 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x299 (* (- 1) (* s q00 a00))))
 (let ((?x282 (* q s00 a00)))
 (let ((?x257 (* (- 1) (* q r00 b00))))
 (let ((?x247 (* s p00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x271 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x305 (+ ?x72 ?x271 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x322 (+ p (* (- 1) q))))
 (let ((?x318 (+ a (* (- 1) b))))
 (let ((?x314 (+ r (* (- 1) s))))
 (let ((?x548 (* ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x322 ?x322 ?x305 s s s s b b b q q)))
 (let ((?x218 (* r q00 a00)))
 (let ((?x240 (* (- 1) (* p s00 a00))))
 (let ((?x239 (* (- 1) (* r p00 b00))))
 (let ((?x184 (* p r00 b00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x238 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x550 (+ ?x63 ?x238 ?x72 ?x271 ?x184 ?x239 ?x240 ?x218 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x458 (* (- 1) p)))
 (let ((?x454 (+ ?x458 q)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x331 (+ ?x325 b)))
 (let ((?x495 (* (- 1) r)))
 (let ((?x490 (+ ?x495 s)))
 (let ((?x283 (* ?x490 ?x490 ?x490 ?x490 ?x331 ?x331 ?x331 ?x454 ?x454 ?x550 r r r a a a p p)))
 (let (($x310 (= ?x305 0)))
 (let (($x242 (= (+ ?x63 ?x238 ?x184 ?x239 ?x240 ?x218) 0)))
 (let ((?x130 (* p00 b00)))
 (let ((?x129 (* q00 a00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let (($x176 (= (+ (* a q) ?x173 ?x130 (* (- 1) (* p b))) 0)))
 (let ((?x143 (* r00 b00)))
 (let ((?x125 (* s00 a00)))
 (let ((?x132 (* (- 1) ?x125)))
 (let ((?x49 (* a s)))
 (let (($x158 (= (+ ?x49 (* (- 1) (* b r)) ?x132 ?x143) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x153 (= (+ ?x33 ?x134 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x472 (and $x153 $x158 $x176 $x242 $x310 (or (not (= ?x283 0)) (not (= ?x548 0))))))
 (let ((?x196 (+ (* q00 r00 (+ b ?x325)) (* b00 p00 (+ s ?x495)) (* (- 1) (* b00 r00 (+ q ?x458))) (* (- 1) (* p00 s00 (+ b ?x325))) (* a00 s00 (+ q ?x458)) (* (- 1) (* a00 q00 (+ s ?x495))))))
 (let ((?x292 (+ q ?x458)))
 (let ((?x261 (+ b ?x325)))
 (let ((?x287 (+ s ?x495)))
 (let ((?x223 (* ?x287 ?x287 ?x287 ?x287 ?x261 ?x261 ?x261 ?x292 ?x292 ?x196 r r r a a a p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x469 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x275 (* ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x322 ?x322 ?x469 s s s s b b b q q)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x489 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x367 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x379 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x139 (and (= (+ (* (- 1) (* r q)) (* s p) ?x134 ?x41) 0) (= ?x379 0) $x367 (= ?x489 0) (= ?x469 0) (or (not (= ?x275 0)) (not (= ?x223 0))))))
 (rewrite (= $x139 $x472)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x109 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x92 (- s r)))
 (let ((?x90 (- b a)))
 (let ((?x95 (- q p)))
 (let ((?x31 (- 1)))
 (let ((?x98 (- (+ (* ?x90 q00 r00) (* b00 p00 ?x92)) (* b00 ?x95 r00))))
 (let ((?x103 (- (+ (- ?x98 (* ?x90 p00 s00)) (* a00 ?x95 s00)) (* a00 q00 ?x92))))
 (let ((?x104 (* ?x103 ?x31 ?x90 ?x90 ?x95 ?x95 r r ?x92 a a a ?x90 p p r ?x92 ?x92 ?x92)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x85 (- a b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x82 (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81)))
 (let ((?x87 (* ?x82 ?x31 b b q q ?x84 ?x84 s ?x85 ?x85 ?x85 b ?x86 ?x86 ?x84 s s s)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let ((?x41 (* q00 r00)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= (- ?x68 ?x69) 0) (= ?x82 0) (or (not (= ?x87 0)) (not (= ?x104 0))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x273 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x196 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x458 (* (- 1) p)))
 (let ((?x292 (+ q ?x458)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x261 (+ b ?x325)))
 (let ((?x495 (* (- 1) r)))
 (let ((?x287 (+ s ?x495)))
 (let ((?x223 (* ?x287 ?x287 ?x287 ?x287 ?x261 ?x261 ?x261 ?x292 ?x292 ?x196 r r r a a a p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x469 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x322 (+ p (* (- 1) q))))
 (let ((?x318 (+ a (* (- 1) b))))
 (let ((?x314 (+ r (* (- 1) s))))
 (let ((?x275 (* ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x322 ?x322 ?x469 s s s s b b b q q)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x489 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x367 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x379 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let (($x139 (and (= (+ (* (- 1) (* r q)) (* s p) ?x134 ?x41) 0) (= ?x379 0) $x367 (= ?x489 0) (= ?x469 0) (or (not (= ?x275 0)) (not (= ?x223 0))))))
 (let ((?x92 (- s r)))
 (let ((?x90 (- b a)))
 (let ((?x95 (- q p)))
 (let ((?x31 (- 1)))
 (let ((?x98 (- (+ (* ?x90 q00 r00) (* b00 p00 ?x92)) (* b00 ?x95 r00))))
 (let ((?x103 (- (+ (- ?x98 (* ?x90 p00 s00)) (* a00 ?x95 s00)) (* a00 q00 ?x92))))
 (let ((?x104 (* ?x103 ?x31 ?x90 ?x90 ?x95 ?x95 r r ?x92 a a a ?x90 p p r ?x92 ?x92 ?x92)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x85 (- a b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x82 (- ?x80 ?x81)))
 (let ((?x87 (* ?x82 ?x31 b b q q ?x84 ?x84 s ?x85 ?x85 ?x85 b ?x86 ?x86 ?x84 s s s)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x108 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= (- ?x68 ?x69) 0) (= ?x82 0) (or (not (= ?x87 0)) (not (= ?x104 0))))))
 (rewrite (= $x108 $x139))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x110 (asserted $x109)))
 (let ((@x386 (mp (mp @x110 (quant-intro (proof-bind ?x273) (= $x109 $x304)) $x304) (rewrite (= $x304 $x304)) $x304)))
 (let ((@x516 (mp~ (mp @x386 (quant-intro (proof-bind ?x426) (= $x304 $x405)) $x405) (sk (~ $x405 $x425)) $x425)))
 (let ((@x467 (mp @x516 (rewrite (= $x425 $x214)) $x214)))
 (let ((@x411 (and-elim @x467 $x182)))
 (let ((@x212 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x182) $x168)) @x411 $x168)))
 (let (($x145 (>= ?x498 0)))
 (let ((@x135 (and-elim @x467 $x500)))
 (let ((@x156 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x500) $x145)) @x135 $x145)))
 (let (($x160 (>= ?x216 0)))
 (let ((@x186 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x182) $x160)) @x411 $x160)))
 (let (($x166 (<= ?x498 0)))
 (let ((@x152 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x500) $x166)) @x135 $x166)))
 (let (($x279 (not (<= ?x445 0))))
 (let ((@x225 (unit-resolution (hypothesis $x197) ((_ th-lemma arith eq-propagate 0 0 0 0) @x186 @x212 @x186 @x212 $x189) false)))
 (let (($x244 (>= ?x445 0)))
 (let ((@x245 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x244)) @x152 @x186 @x156 @x212 false) $x244)))
 (let ((@x459 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x492 $x279 (not $x244))) @x245 (unit-resolution (and-elim @x467 $x464) (lemma @x225 $x189) $x446) $x279)))
 ((_ th-lemma arith farkas 1 1 1 1 1) @x459 @x152 @x186 @x156 @x212 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 9
 :arith-assert-diseq        2
 :arith-assert-lower        14
 :arith-assert-upper        13
 :arith-conflicts           2
 :arith-eq-adapter          9
 :arith-fixed-eqs           3
 :arith-grobner             2
 :arith-max-min             174
 :arith-nonlinear-horner    24
 :arith-num-rows            12
 :arith-pivots              5
 :arith-pseudo-nonlinear    4
 :arith-row-summations      2
 :arith-tableau-max-columns 51
 :arith-tableau-max-rows    12
 :conflicts                 3
 :decisions                 2
 :del-clause                19
 :final-checks              2
 :max-memory                19.63
 :memory                    19.17
 :mk-bool-var               27
 :mk-clause                 32
 :num-allocs                483191
 :num-checks                1
 :propagations              15
 :rlimit-count              5772
 :time                      0.01
 :total-time                0.02)
