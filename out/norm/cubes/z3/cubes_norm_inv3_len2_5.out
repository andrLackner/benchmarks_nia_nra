unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x317 (* (- 1) k!2)))
 (let ((?x523 (+ (* 3 (* n!0 n!0)) (* 3 n!0) ?x317)))
 (let (($x211 (<= ?x523 (- 1))))
 (let (($x544 (= ?x523 (- 1))))
 (let ((?x250 (+ c!3 k!2)))
 (let ((?x430 (+ k!2 m!1)))
 (let ((?x243 (+ 1 n!0)))
 (let ((?x436 (* (- 2) (* ?x243 ?x243 ?x243 ?x243 ?x430 ?x430 ?x250))))
 (let ((?x620 (* ?x243 ?x243 ?x243 ?x430 ?x430 ?x430 ?x250)))
 (let ((?x429 (+ 6 m!1)))
 (let ((?x221 (* 3 (* ?x243 ?x429 ?x429 ?x429 ?x430 ?x430 ?x250 ?x250 ?x250 ?x250))))
 (let ((?x121 (* (- 1) (* ?x243 ?x429 ?x429 ?x429 ?x430 ?x430 ?x250 ?x250 ?x250))))
 (let ((?x434 (* 3 (* ?x243 ?x243 ?x243 ?x430 ?x430 ?x250 ?x250))))
 (let ((?x427 (* (- 1) (* ?x243 ?x243 ?x243 ?x430 ?x430 ?x250))))
 (let ((?x159 (* (- 2) (* ?x243 ?x243 ?x429 ?x429 ?x429 ?x430 ?x430 ?x250 ?x250 ?x250))))
 (let ((?x533 (* (- 1) (* ?x243 ?x243 ?x429 ?x429 ?x429 ?x430 ?x430 ?x430 ?x250 ?x250 ?x250))))
 (let ((?x289 (* (- 1) (* ?x243 ?x243 ?x243 ?x243 ?x430 ?x430 ?x430 ?x250))))
 (let ((?x198 (* ?x243 ?x429 ?x429 ?x429 ?x430 ?x430 ?x430 ?x250 ?x250 ?x250)))
 (let ((?x100 (+ ?x198 ?x289 ?x533 ?x159 ?x427 ?x434 ?x121 ?x221 ?x620 ?x436)))
 (let (($x218 (= ?x100 0)))
 (let (($x99 (not $x218)))
 (let ((?x439 (+ (* 2 n!0) (* n!0 k!2) (* (- 3) c!3) ?x317)))
 (let (($x433 (= ?x439 (- 1))))
 (let ((?x162 (* k!2 k!2)))
 (let ((?x319 (+ ?x162 (* 9 n!0) (* (- 18) c!3) (* (- 5) k!2) (* (- 9) (* n!0 c!3)))))
 (let (($x431 (= ?x319 (- 4))))
 (let ((?x609 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x334 (= ?x609 (- 6))))
 (let (($x203 (and $x334 $x431 $x433 $x544 $x99)))
 (let (($x147 (not (= (+ ?x434 ?x533 ?x620 ?x427 ?x436 ?x221 ?x198 ?x159 ?x289 ?x121) 0))))
 (let (($x163 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x180 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x162) (* 9 (* c!3 n!0)))))
 (let (($x148 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x180 4) $x163 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) $x147)))
 (let (($x461 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x313 (+ 6 m)))
 (let ((?x316 (+ 1 n)))
 (let ((?x579 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x571 (* (- 1) ?x579)))
 (let ((?x539 (* ?x316 ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x473 (* (- 1) ?x539)))
 (let ((?x531 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x437 (* (- 2) ?x531)))
 (let ((?x503 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x455 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x506 (* 3 ?x455)))
 (let ((?x329 (* ?x316 ?x316 ?x316 ?x316 ?x70 ?x70 ?x69)))
 (let ((?x444 (* (- 2) ?x329)))
 (let ((?x208 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69)))
 (let ((?x186 (* (- 1) ?x208)))
 (let ((?x207 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x187 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x200 (* (- 1) ?x187)))
 (let ((?x107 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x110 (* 3 ?x107)))
 (let (($x466 (not (= (+ ?x110 ?x200 ?x207 ?x186 ?x444 ?x506 ?x503 ?x437 ?x473 ?x571) 0))))
 (let (($x303 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x265 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x216 (* (- 1) ?x49)))
 (let ((?x215 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x213 (= (+ ?x40 ?x44 ?x215 ?x216 (* 9 (* c n))) 4)))
 (let (($x129 (= (+ m (* (- 6) n)) 6)))
 (and $x129 $x213 $x265 $x303 $x466))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x120 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x316 (+ 1 n)))
 (let ((?x329 (* ?x316 ?x316 ?x316 ?x316 ?x70 ?x70 ?x69)))
 (let ((?x313 (+ 6 m)))
 (let ((?x579 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x539 (* ?x316 ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x208 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69)))
 (let ((?x187 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x610 (+ ?x187 (* (- 1) (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)) ?x208 (* (- 3) (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69 ?x69)) ?x539 (* (- 1) (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 2 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 3) (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)) ?x579 (* 2 ?x329))))
 (let (($x157 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x600 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x216 (* (- 1) ?x49)))
 (let ((?x215 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x129 (= (+ m (* (- 6) n)) 6)))
 (and $x129 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x215 ?x216) 4) $x600 $x157 (not (= ?x610 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x626 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x313 (+ 6 m)))
 (let ((?x316 (+ 1 n)))
 (let ((?x579 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x571 (* (- 1) ?x579)))
 (let ((?x539 (* ?x316 ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x473 (* (- 1) ?x539)))
 (let ((?x531 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x437 (* (- 2) ?x531)))
 (let ((?x503 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x455 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x506 (* 3 ?x455)))
 (let ((?x329 (* ?x316 ?x316 ?x316 ?x316 ?x70 ?x70 ?x69)))
 (let ((?x444 (* (- 2) ?x329)))
 (let ((?x208 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69)))
 (let ((?x186 (* (- 1) ?x208)))
 (let ((?x207 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x187 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x200 (* (- 1) ?x187)))
 (let ((?x107 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x110 (* 3 ?x107)))
 (let (($x466 (not (= (+ ?x110 ?x200 ?x207 ?x186 ?x444 ?x506 ?x503 ?x437 ?x473 ?x571) 0))))
 (let (($x303 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x265 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x216 (* (- 1) ?x49)))
 (let ((?x215 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x213 (= (+ ?x40 ?x44 ?x215 ?x216 (* 9 (* c n))) 4)))
 (let (($x129 (= (+ m (* (- 6) n)) 6)))
 (let (($x282 (and $x129 $x213 $x265 $x303 $x466)))
 (let ((?x610 (+ ?x187 (* (- 1) ?x207) ?x208 (* (- 3) ?x107) ?x539 (* (- 1) ?x503) (* 2 ?x531) (* (- 3) ?x455) ?x579 (* 2 ?x329))))
 (let (($x157 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x600 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x118 (and $x129 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x215 ?x216) 4) $x600 $x157 (not (= ?x610 0)))))
 (rewrite (= $x118 $x282))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x219 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x316 (+ 1 n)))
 (let ((?x329 (* ?x316 ?x316 ?x316 ?x316 ?x70 ?x70 ?x69)))
 (let ((?x444 (* (- 2) ?x329)))
 (let ((?x313 (+ 6 m)))
 (let ((?x579 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x571 (* (- 1) ?x579)))
 (let ((?x455 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x506 (* 3 ?x455)))
 (let ((?x531 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x437 (* (- 2) ?x531)))
 (let ((?x503 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x539 (* ?x316 ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x473 (* (- 1) ?x539)))
 (let ((?x107 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x110 (* 3 ?x107)))
 (let ((?x208 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69)))
 (let ((?x186 (* (- 1) ?x208)))
 (let ((?x207 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x187 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x200 (* (- 1) ?x187)))
 (let (($x214 (not (= (+ ?x200 ?x207 ?x186 ?x110 ?x473 ?x503 ?x437 ?x506 ?x571 ?x444) 0))))
 (let (($x157 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x246 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x315 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x129 (= (+ m (* (- 6) n)) 6)))
 (and $x129 (= ?x315 (- 4)) $x246 $x157 $x214)))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x122 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x316 (+ 1 n)))
 (let ((?x329 (* ?x316 ?x316 ?x316 ?x316 ?x70 ?x70 ?x69)))
 (let ((?x313 (+ 6 m)))
 (let ((?x579 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x539 (* ?x316 ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x208 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69)))
 (let ((?x187 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x610 (+ ?x187 (* (- 1) (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)) ?x208 (* (- 3) (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69 ?x69)) ?x539 (* (- 1) (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 2 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 3) (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)) ?x579 (* 2 ?x329))))
 (let (($x157 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x600 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x216 (* (- 1) ?x49)))
 (let ((?x215 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x129 (= (+ m (* (- 6) n)) 6)))
 (let (($x118 (and $x129 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x215 ?x216) 4) $x600 $x157 (not (= ?x610 0)))))
 (let ((?x444 (* (- 2) ?x329)))
 (let ((?x571 (* (- 1) ?x579)))
 (let ((?x455 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x506 (* 3 ?x455)))
 (let ((?x531 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x437 (* (- 2) ?x531)))
 (let ((?x503 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x473 (* (- 1) ?x539)))
 (let ((?x107 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x110 (* 3 ?x107)))
 (let ((?x186 (* (- 1) ?x208)))
 (let ((?x207 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x200 (* (- 1) ?x187)))
 (let (($x214 (not (= (+ ?x200 ?x207 ?x186 ?x110 ?x473 ?x503 ?x437 ?x506 ?x571 ?x444) 0))))
 (let (($x246 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x315 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x177 (and $x129 (= ?x315 (- 4)) $x246 $x157 $x214)))
 (rewrite (= $x177 $x118))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x96 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x71 (+ m 6)))
 (let ((?x73 (* (- 1) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x77 (- (+ ?x73 (* ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72)) (* ?x69 ?x70 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x81 (- (+ ?x77 (* 3 ?x69 ?x69 ?x70 ?x70 ?x72 ?x72 ?x72)) (* ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x85 (- (+ ?x81 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)) (* 2 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x87 (+ ?x85 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x91 (- (- ?x87 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)) (* 2 ?x69 ?x70 ?x70 ?x72 ?x72 ?x72 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x91 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x206 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x316 (+ 1 n)))
 (let ((?x329 (* ?x316 ?x316 ?x316 ?x316 ?x70 ?x70 ?x69)))
 (let ((?x444 (* (- 2) ?x329)))
 (let ((?x313 (+ 6 m)))
 (let ((?x579 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x571 (* (- 1) ?x579)))
 (let ((?x455 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x506 (* 3 ?x455)))
 (let ((?x531 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x437 (* (- 2) ?x531)))
 (let ((?x503 (* ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x539 (* ?x316 ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x473 (* (- 1) ?x539)))
 (let ((?x107 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x110 (* 3 ?x107)))
 (let ((?x208 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x69)))
 (let ((?x186 (* (- 1) ?x208)))
 (let ((?x207 (* ?x316 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x187 (* ?x316 ?x316 ?x313 ?x313 ?x313 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x200 (* (- 1) ?x187)))
 (let (($x214 (not (= (+ ?x200 ?x207 ?x186 ?x110 ?x473 ?x503 ?x437 ?x506 ?x571 ?x444) 0))))
 (let (($x157 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x246 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x315 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x129 (= (+ m (* (- 6) n)) 6)))
 (let (($x177 (and $x129 (= ?x315 (- 4)) $x246 $x157 $x214)))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x73 (* (- 1) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x77 (- (+ ?x73 (* ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72)) (* ?x69 ?x70 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x81 (- (+ ?x77 (* 3 ?x69 ?x69 ?x70 ?x70 ?x72 ?x72 ?x72)) (* ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x85 (- (+ ?x81 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)) (* 2 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x87 (+ ?x85 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x91 (- (- ?x87 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)) (* 2 ?x69 ?x70 ?x70 ?x72 ?x72 ?x72 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x95 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x91 0))))))
 (rewrite (= $x95 $x177)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x97 (asserted $x96)))
 (let ((@x201 (mp (mp @x97 (quant-intro (proof-bind ?x206) (= $x96 $x219)) $x219) (rewrite (= $x219 $x219)) $x219)))
 (let ((@x542 (mp (mp @x201 (quant-intro (proof-bind ?x122) (= $x219 $x120)) $x120) (quant-intro (proof-bind ?x626) (= $x120 $x461)) $x461)))
 (let ((@x204 (mp (mp~ @x542 (sk (~ $x461 $x148)) $x148) (rewrite (= $x148 $x203)) $x203)))
 (let ((@x252 (and-elim @x204 $x544)))
 (let ((@x104 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x544) $x211)) @x252 $x211)))
 (let (($x226 (>= ?x523 (- 1))))
 (let ((@x351 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x544) $x226)) @x252 $x226)))
 (let (($x253 (<= ?x439 (- 1))))
 (let ((@x242 (and-elim @x204 $x433)))
 (let ((@x239 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x433) $x253)) @x242 $x253)))
 (let (($x209 (>= ?x439 (- 1))))
 (let ((@x302 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x433) $x209)) @x242 $x209)))
 (let (($x240 (<= ?x319 (- 4))))
 (let ((@x116 (and-elim @x204 $x431)))
 (let ((@x318 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x431) $x240)) @x116 $x240)))
 (let (($x541 (>= ?x319 (- 4))))
 (let ((@x145 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x431) $x541)) @x116 $x541)))
 (let (($x248 (<= ?x609 (- 6))))
 (let ((@x585 (and-elim @x204 $x334)))
 (let ((@x176 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x334) $x248)) @x585 $x248)))
 (let (($x545 (>= ?x609 (- 6))))
 (let ((@x499 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x334) $x545)) @x585 $x545)))
 (let (($x275 (not (<= ?x100 0))))
 (let (($x193 (>= ?x100 0)))
 (let ((@x307 ((_ th-lemma arith) (hypothesis (not $x193)) @x351 @x104 @x499 @x176 @x499 @x176 @x351 @x104 @x351 @x104 @x302 @x239 @x351 @x104 @x302 @x239 @x145 @x318 @x302 @x239 @x351 @x104 false)))
 (let ((@x152 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x218 $x275 (not $x193))) (and-elim @x204 $x99) (or $x275 (not $x193)))))
 ((_ th-lemma arith) (unit-resolution @x152 (lemma @x307 $x193) $x275) @x351 @x104 @x499 @x176 @x499 @x176 @x351 @x104 @x351 @x104 @x302 @x239 @x351 @x104 @x302 @x239 @x145 @x318 @x302 @x239 @x351 @x104 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        13
 :arith-assert-upper        18
 :arith-branch-var          2
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           7
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             157
 :arith-nonlinear-bounds    3
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              9
 :arith-row-summations      10
 :arith-tableau-max-columns 40
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 9
 :del-clause                16
 :final-checks              8
 :max-memory                3.74
 :memory                    3.16
 :mk-bool-var               29
 :mk-clause                 16
 :num-allocs                1993849
 :num-checks                1
 :propagations              12
 :rlimit-count              17642
 :time                      0.02
 :total-time                0.02)
