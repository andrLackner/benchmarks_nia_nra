unsat
((set-logic NIA)
(declare-fun s!0 () Int)
(declare-fun q!3 () Int)
(declare-fun b!2 () Int)
(declare-fun r!1 () Int)
(declare-fun a!4 () Int)
(declare-fun p!5 () Int)
(proof
(let ((?x993 (* (- 1) (* q00 a00 s!0))))
 (let ((?x976 (* (- 1) (* r00 b00 q!3))))
 (let ((?x850 (* p00 b00 s!0)))
 (let ((?x809 (* (- 1) (* p00 s00 b!2))))
 (let ((?x843 (* q00 r00 b!2)))
 (let ((?x265 (* s00 a00 q!3)))
 (let ((?x1124 (+ ?x265 ?x843 ?x809 ?x850 ?x976 ?x993)))
 (let (($x968 (<= ?x1124 0)))
 (let (($x647 (= ?x1124 0)))
 (let ((?x193 (* q00 a00 r!1)))
 (let ((?x194 (* (- 1) (* p00 b00 r!1))))
 (let ((?x184 (* (- 1) (* q00 r00 a!4))))
 (let ((?x142 (* p00 s00 a!4)))
 (let ((?x844 (* (- 1) (* s00 a00 p!5))))
 (let ((?x126 (* r00 b00 p!5)))
 (let ((?x1064 (* p!5 p!5 p!5)))
 (let ((?x1053 (* (- 1) (* s!0 s!0 s!0 r!1 b!2 a!4))))
 (let ((?x754 (* (- 1) p!5)))
 (let ((?x481 (+ q!3 ?x754)))
 (let ((?x374 (* (- 1) a!4)))
 (let ((?x1060 (+ b!2 ?x374)))
 (let ((?x665 (* (+ s!0 (* (- 1) r!1)) ?x1060 ?x1060 ?x1060 ?x481 ?x481 ?x481 r!1 r!1 r!1 p!5)))
 (let ((?x626 (* (- 1) (* r!1 a!4 p!5))))
 (let ((?x908 (+ (* (- 1) (* r!1 r!1 r!1 r!1 a!4 a!4)) ?x626 ?x665 (* (- 3) (* s!0 s!0 r!1 r!1 a!4 a!4)) (* r!1 r!1 r!1 r!1 b!2 a!4) (* 3 (* s!0 s!0 r!1 r!1 b!2 a!4)) (* s!0 s!0 s!0 r!1 a!4 a!4) (* (- 3) (* s!0 r!1 r!1 r!1 b!2 a!4)) (* 3 (* s!0 r!1 r!1 r!1 a!4 a!4)) ?x1053 ?x1064)))
 (let ((?x392 (* ?x908 (+ ?x126 ?x844 ?x142 ?x184 ?x194 ?x193 ?x265 ?x843 ?x809 ?x850 ?x976 ?x993))))
 (let (($x889 (= ?x392 0)))
 (let (($x388 (not $x889)))
 (let ((?x129 (* (- 1) (* q!3 q!3 q!3))))
 (let ((?x717 (* s!0 r!1 r!1 r!1 b!2 b!2 b!2 q!3 q!3 q!3 p!5)))
 (let ((?x621 (* s!0 s!0 s!0 s!0 b!2 b!2 b!2 q!3 q!3 q!3 q!3)))
 (let ((?x431 (* s!0 s!0 s!0 r!1 b!2 b!2 b!2 q!3 q!3 q!3 q!3)))
 (let ((?x377 (* s!0 s!0 s!0 r!1 b!2 b!2 b!2 q!3 q!3 q!3 p!5)))
 (let ((?x276 (* s!0 s!0 r!1 r!1 b!2 b!2 b!2 q!3 q!3 q!3 q!3)))
 (let ((?x274 (* s!0 s!0 r!1 r!1 b!2 b!2 b!2 q!3 q!3 q!3 p!5)))
 (let ((?x273 (* s!0 r!1 r!1 r!1 b!2 b!2 b!2 q!3 q!3 q!3 q!3)))
 (let ((?x227 (* s!0 s!0 s!0 s!0 b!2 b!2 b!2 q!3 q!3 q!3 p!5)))
 (let ((?x635 (+ (* (- 1) ?x227) (* (- 1) ?x273) (* (- 3) ?x274) (* 3 ?x276) (* 3 ?x377) (* (- 3) (* q!3 p!5 p!5)) (* (- 1) (* r!1 b!2 q!3)) (* 3 (* q!3 q!3 p!5)) (* (- 3) ?x431) (* (- 1) (* s!0 q!3 a!4)) (* (- 1) (* s!0 b!2 p!5)) (* s!0 s!0 s!0 s!0 b!2 a!4) (* s!0 s!0 s!0 r!1 b!2 b!2) (* r!1 q!3 a!4) ?x626 (* s!0 b!2 q!3) ?x621 (* r!1 b!2 p!5) (* s!0 a!4 p!5) ?x717 (* (- 1) (* s!0 s!0 s!0 s!0 b!2 b!2)) ?x1053 ?x1064 ?x129)))
 (let (($x867 (= (* ?x635 ?x1124) 0)))
 (let (($x899 (or (not $x867) $x388)))
 (let ((?x848 (+ ?x126 ?x844 ?x142 ?x184 ?x194 ?x193)))
 (let (($x854 (= ?x848 0)))
 (let ((?x144 (* p00 b00)))
 (let ((?x187 (* (- 1) (* q00 a00))))
 (let ((?x157 (* r00 b00)))
 (let ((?x146 (* (- 1) (* s00 a00))))
 (let ((?x41 (* q00 r00)))
 (let ((?x577 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x988 (and (= (+ ?x37 ?x577 (* (- 1) (* s!0 p!5)) (* r!1 q!3)) 0) (= (+ (* s!0 a!4) ?x146 (* (- 1) (* r!1 b!2)) ?x157) 0) (= (+ (* q!3 a!4) ?x187 ?x144 (* (- 1) (* b!2 p!5))) 0) $x854 $x647 $x899)))
 (let ((?x489 (* (- 1) (* s!0 q00 a00))))
 (let ((?x399 (* q!3 s00 a00)))
 (let ((?x396 (* (- 1) (* q!3 r00 b00))))
 (let ((?x536 (* s!0 p00 b00)))
 (let ((?x834 (* r!1 q00 a00)))
 (let ((?x1104 (* (- 1) (* p!5 s00 a00))))
 (let ((?x230 (* (- 1) (* r!1 p00 b00))))
 (let ((?x204 (* p!5 r00 b00)))
 (let ((?x792 (* (- 1) (* b!2 p00 s00))))
 (let ((?x797 (* b!2 q00 r00)))
 (let ((?x216 (* (- 1) (* a!4 q00 r00))))
 (let ((?x973 (* a!4 p00 s00)))
 (let ((?x804 (* (- 1) (* p!5 a!4 r!1))))
 (let ((?x756 (+ ?x754 q!3)))
 (let ((?x890 (+ ?x374 b!2)))
 (let ((?x757 (* (+ (* (- 1) r!1) s!0) ?x890 ?x890 ?x890 ?x756 ?x756 ?x756 r!1 r!1 r!1 p!5)))
 (let ((?x165 (* (- 1) (* a!4 b!2 r!1 s!0 s!0 s!0))))
 (let ((?x205 (+ ?x1064 ?x165 ?x757 ?x804 (* (- 1) (* a!4 a!4 r!1 r!1 r!1 r!1)) (* a!4 b!2 r!1 r!1 r!1 r!1) (* 3 (* a!4 a!4 r!1 r!1 r!1 s!0)) (* (- 3) (* a!4 b!2 r!1 r!1 r!1 s!0)) (* (- 3) (* a!4 a!4 r!1 r!1 s!0 s!0)) (* 3 (* a!4 b!2 r!1 r!1 s!0 s!0)) (* a!4 a!4 r!1 s!0 s!0 s!0))))
 (let ((?x197 (* ?x205 (+ ?x973 ?x216 ?x797 ?x792 ?x204 ?x230 ?x1104 ?x834 ?x536 ?x396 ?x399 ?x489))))
 (let ((?x511 (+ ?x797 ?x792 ?x536 ?x396 ?x399 ?x489)))
 (let ((?x242 (* q!3 q!3 q!3 q!3 b!2 b!2 b!2 s!0 s!0 s!0 s!0)))
 (let ((?x861 (* p!5 q!3 q!3 q!3 b!2 b!2 b!2 s!0 s!0 s!0 s!0)))
 (let ((?x904 (* q!3 q!3 q!3 q!3 b!2 b!2 b!2 r!1 s!0 s!0 s!0)))
 (let ((?x879 (* p!5 q!3 q!3 q!3 b!2 b!2 b!2 r!1 s!0 s!0 s!0)))
 (let ((?x829 (* q!3 q!3 q!3 q!3 b!2 b!2 b!2 r!1 r!1 s!0 s!0)))
 (let ((?x825 (* p!5 q!3 q!3 q!3 b!2 b!2 b!2 r!1 r!1 s!0 s!0)))
 (let ((?x789 (* q!3 q!3 q!3 q!3 b!2 b!2 b!2 r!1 r!1 r!1 s!0)))
 (let ((?x790 (* p!5 q!3 q!3 q!3 b!2 b!2 b!2 r!1 r!1 r!1 s!0)))
 (let ((?x731 (+ ?x1064 (* (- 1) (* q!3 b!2 r!1)) (* (- 3) (* p!5 p!5 q!3)) (* 3 (* p!5 q!3 q!3)) ?x129 ?x165 (* b!2 b!2 r!1 s!0 s!0 s!0) (* a!4 b!2 s!0 s!0 s!0 s!0) (* (- 1) (* b!2 b!2 s!0 s!0 s!0 s!0)) (* p!5 a!4 s!0) (* (- 1) (* p!5 b!2 s!0)) ?x790 (* (- 1) ?x789) (* (- 3) ?x825) (* 3 ?x829) (* 3 ?x879) (* (- 3) ?x904) (* p!5 b!2 r!1) (* (- 1) ?x861) (* a!4 q!3 r!1) ?x242 (* (- 1) (* a!4 q!3 s!0)) ?x804 (* q!3 b!2 s!0))))
 (let (($x530 (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) (* q!3 r!1))) 0)))
 (let (($x896 (and $x530 (= (+ (* a!4 s!0) (* (- 1) (* b!2 r!1)) ?x146 ?x157) 0) (= (+ (* a!4 q!3) ?x187 ?x144 (* (- 1) (* p!5 b!2))) 0) (= (+ ?x973 ?x216 ?x204 ?x230 ?x1104 ?x834) 0) (= ?x511 0) (or (not (= (* ?x731 ?x511) 0)) (not (= ?x197 0))))))
 (let (($x309 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x313 (* (- 1) (* s q00 a00))))
 (let ((?x296 (* q s00 a00)))
 (let ((?x271 (* (- 1) (* q r00 b00))))
 (let ((?x261 (* s p00 b00)))
 (let ((?x232 (* r q00 a00)))
 (let ((?x254 (* (- 1) (* p s00 a00))))
 (let ((?x253 (* (- 1) (* r p00 b00))))
 (let ((?x198 (* p r00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x285 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x252 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x828 (+ ?x63 ?x252 ?x72 ?x285 ?x198 ?x253 ?x254 ?x232 ?x261 ?x271 ?x296 ?x313)))
 (let ((?x956 (* a a r s s s)))
 (let ((?x1004 (* 3 (* a b r r s s))))
 (let ((?x1001 (* (- 3) (* a a r r s s))))
 (let ((?x998 (* (- 3) (* a b r r r s))))
 (let ((?x995 (* 3 (* a a r r r s))))
 (let ((?x878 (* a b r r r r)))
 (let ((?x983 (* (- 1) (* a a r r r r))))
 (let ((?x839 (* (- 1) (* p a r))))
 (let ((?x680 (* (- 1) p)))
 (let ((?x676 (+ ?x680 q)))
 (let ((?x340 (* (- 1) a)))
 (let ((?x362 (+ ?x340 b)))
 (let ((?x436 (* (- 1) r)))
 (let ((?x446 (+ ?x436 s)))
 (let ((?x466 (* (- 1) (* a b r s s s))))
 (let ((?x112 (* p p p)))
 (let ((?x1079 (+ ?x112 ?x466 (* ?x446 ?x362 ?x362 ?x362 ?x676 ?x676 ?x676 r r r p) ?x839 ?x983 ?x878 ?x995 ?x998 ?x1001 ?x1004 ?x956)))
 (let ((?x319 (+ ?x72 ?x285 ?x261 ?x271 ?x296 ?x313)))
 (let ((?x634 (* q q q q b b b s s s s)))
 (let ((?x628 (* (- 1) (* p q q q b b b s s s s))))
 (let ((?x645 (* (- 3) (* q q q q b b b r s s s))))
 (let ((?x644 (* 3 (* p q q q b b b r s s s))))
 (let ((?x643 (* 3 (* q q q q b b b r r s s))))
 (let ((?x642 (* (- 3) (* p q q q b b b r r s s))))
 (let ((?x522 (* (- 1) (* q q q q b b b r r r s))))
 (let ((?x512 (* p q q q b b b r r r s)))
 (let ((?x469 (* (- 1) (* b b s s s s))))
 (let ((?x451 (* a b s s s s)))
 (let ((?x447 (* b b r s s s)))
 (let ((?x410 (* (- 1) (* q q q))))
 (let ((?x419 (* 3 (* p q q))))
 (let ((?x417 (* (- 3) (* p p q))))
 (let ((?x760 (+ ?x112 (* (- 1) (* q b r)) ?x417 ?x419 ?x410 ?x466 ?x447 ?x451 ?x469 (* p a s) (* (- 1) (* p b s)) ?x512 ?x522 ?x642 ?x643 ?x644 ?x645 (* p b r) ?x628 (* a q r) ?x634 (* (- 1) (* a q s)) ?x839 (* q b s))))
 (let (($x324 (= ?x319 0)))
 (let (($x256 (= (+ ?x63 ?x252 ?x198 ?x253 ?x254 ?x232) 0)))
 (let ((?x144 (* p00 b00)))
 (let ((?x187 (* (- 1) (* q00 a00))))
 (let (($x190 (= (+ (* a q) ?x187 ?x144 (* (- 1) (* p b))) 0)))
 (let ((?x157 (* r00 b00)))
 (let ((?x146 (* (- 1) (* s00 a00))))
 (let ((?x49 (* a s)))
 (let (($x172 (= (+ ?x49 (* (- 1) (* b r)) ?x146 ?x157) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x148 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x167 (= (+ ?x33 ?x148 ?x41 (* (- 1) (* q r))) 0)))
 (and $x167 $x172 $x190 $x256 $x324 (or (not (= (* ?x760 ?x319) 0)) (not (= (* ?x1079 ?x828) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x944 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x394 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x680 (* (- 1) p)))
 (let ((?x565 (+ q ?x680)))
 (let ((?x340 (* (- 1) a)))
 (let ((?x600 (+ b ?x340)))
 (let ((?x436 (* (- 1) r)))
 (let ((?x497 (+ s ?x436)))
 (let ((?x112 (* p p p)))
 (let ((?x919 (+ (* (- 1) (* r a p)) ?x112 (* (- 1) (* ?x497 ?x497 ?x497 ?x600 r a)) (* ?x497 ?x600 ?x600 ?x600 ?x565 ?x565 ?x565 r r r p))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x517 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x331 (* (- 1) q)))
 (let ((?x494 (+ p ?x331)))
 (let ((?x335 (* (- 1) s)))
 (let ((?x537 (+ r ?x335)))
 (let ((?x586 (+ (* (- 1) (* ?x537 (+ a (* (- 1) b)) ?x494)) (* ?x494 ?x494 ?x494) (* (- 1) (* ?x537 (+ a (* (- 1) b)) s s s b)) (* ?x537 ?x537 ?x537 ?x494 s b b b q q q))))
 (let (($x876 (or (not (= (* ?x586 ?x517) 0)) (not (= (* ?x919 ?x394) 0)))))
 (let (($x521 (= ?x517 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x479 (* p00 s00 a)))
 (let ((?x715 (* b00 r00 p)))
 (let ((?x784 (+ ?x715 ?x479 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x710 (* q a)))
 (let (($x516 (= (+ ?x710 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x698 (* r b)))
 (let (($x719 (= (+ ?x698 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x577 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x705 (* r q)))
 (and (= (+ ?x705 (* (- 1) (* s p)) ?x37 ?x577) 0) $x719 $x516 (= ?x784 0) $x521 $x876))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x495 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x313 (* (- 1) (* s q00 a00))))
 (let ((?x296 (* q s00 a00)))
 (let ((?x271 (* (- 1) (* q r00 b00))))
 (let ((?x261 (* s p00 b00)))
 (let ((?x232 (* r q00 a00)))
 (let ((?x254 (* (- 1) (* p s00 a00))))
 (let ((?x253 (* (- 1) (* r p00 b00))))
 (let ((?x198 (* p r00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x285 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x252 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x828 (+ ?x63 ?x252 ?x72 ?x285 ?x198 ?x253 ?x254 ?x232 ?x261 ?x271 ?x296 ?x313)))
 (let ((?x956 (* a a r s s s)))
 (let ((?x1004 (* 3 (* a b r r s s))))
 (let ((?x1001 (* (- 3) (* a a r r s s))))
 (let ((?x998 (* (- 3) (* a b r r r s))))
 (let ((?x995 (* 3 (* a a r r r s))))
 (let ((?x878 (* a b r r r r)))
 (let ((?x983 (* (- 1) (* a a r r r r))))
 (let ((?x839 (* (- 1) (* p a r))))
 (let ((?x680 (* (- 1) p)))
 (let ((?x676 (+ ?x680 q)))
 (let ((?x340 (* (- 1) a)))
 (let ((?x362 (+ ?x340 b)))
 (let ((?x436 (* (- 1) r)))
 (let ((?x446 (+ ?x436 s)))
 (let ((?x466 (* (- 1) (* a b r s s s))))
 (let ((?x112 (* p p p)))
 (let ((?x1079 (+ ?x112 ?x466 (* ?x446 ?x362 ?x362 ?x362 ?x676 ?x676 ?x676 r r r p) ?x839 ?x983 ?x878 ?x995 ?x998 ?x1001 ?x1004 ?x956)))
 (let ((?x319 (+ ?x72 ?x285 ?x261 ?x271 ?x296 ?x313)))
 (let ((?x634 (* q q q q b b b s s s s)))
 (let ((?x628 (* (- 1) (* p q q q b b b s s s s))))
 (let ((?x645 (* (- 3) (* q q q q b b b r s s s))))
 (let ((?x644 (* 3 (* p q q q b b b r s s s))))
 (let ((?x643 (* 3 (* q q q q b b b r r s s))))
 (let ((?x642 (* (- 3) (* p q q q b b b r r s s))))
 (let ((?x522 (* (- 1) (* q q q q b b b r r r s))))
 (let ((?x512 (* p q q q b b b r r r s)))
 (let ((?x469 (* (- 1) (* b b s s s s))))
 (let ((?x451 (* a b s s s s)))
 (let ((?x447 (* b b r s s s)))
 (let ((?x410 (* (- 1) (* q q q))))
 (let ((?x419 (* 3 (* p q q))))
 (let ((?x417 (* (- 3) (* p p q))))
 (let ((?x760 (+ ?x112 (* (- 1) (* q b r)) ?x417 ?x419 ?x410 ?x466 ?x447 ?x451 ?x469 (* p a s) (* (- 1) (* p b s)) ?x512 ?x522 ?x642 ?x643 ?x644 ?x645 (* p b r) ?x628 (* a q r) ?x634 (* (- 1) (* a q s)) ?x839 (* q b s))))
 (let (($x324 (= ?x319 0)))
 (let (($x256 (= (+ ?x63 ?x252 ?x198 ?x253 ?x254 ?x232) 0)))
 (let ((?x144 (* p00 b00)))
 (let ((?x187 (* (- 1) (* q00 a00))))
 (let (($x190 (= (+ (* a q) ?x187 ?x144 (* (- 1) (* p b))) 0)))
 (let ((?x157 (* r00 b00)))
 (let ((?x146 (* (- 1) (* s00 a00))))
 (let ((?x49 (* a s)))
 (let (($x172 (= (+ ?x49 (* (- 1) (* b r)) ?x146 ?x157) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x148 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x167 (= (+ ?x33 ?x148 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x1137 (and $x167 $x172 $x190 $x256 $x324 (or (not (= (* ?x760 ?x319) 0)) (not (= (* ?x1079 ?x828) 0))))))
 (let ((?x394 (+ (* q00 r00 (+ b ?x340)) (* b00 p00 (+ s ?x436)) (* (- 1) (* b00 r00 (+ q ?x680))) (* (- 1) (* p00 s00 (+ b ?x340))) (* a00 s00 (+ q ?x680)) (* (- 1) (* a00 q00 (+ s ?x436))))))
 (let ((?x565 (+ q ?x680)))
 (let ((?x600 (+ b ?x340)))
 (let ((?x497 (+ s ?x436)))
 (let ((?x919 (+ (* (- 1) (* r a p)) ?x112 (* (- 1) (* ?x497 ?x497 ?x497 ?x600 r a)) (* ?x497 ?x600 ?x600 ?x600 ?x565 ?x565 ?x565 r r r p))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x517 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x331 (* (- 1) q)))
 (let ((?x494 (+ p ?x331)))
 (let ((?x335 (* (- 1) s)))
 (let ((?x537 (+ r ?x335)))
 (let ((?x586 (+ (* (- 1) (* ?x537 (+ a (* (- 1) b)) ?x494)) (* ?x494 ?x494 ?x494) (* (- 1) (* ?x537 (+ a (* (- 1) b)) s s s b)) (* ?x537 ?x537 ?x537 ?x494 s b b b q q q))))
 (let (($x876 (or (not (= (* ?x586 ?x517) 0)) (not (= (* ?x919 ?x394) 0)))))
 (let (($x521 (= ?x517 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x479 (* p00 s00 a)))
 (let ((?x715 (* b00 r00 p)))
 (let ((?x784 (+ ?x715 ?x479 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x710 (* q a)))
 (let (($x516 (= (+ ?x710 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x698 (* r b)))
 (let (($x719 (= (+ ?x698 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x694 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x930 (and $x694 $x719 $x516 (= ?x784 0) $x521 $x876)))
 (rewrite (= $x930 $x1137))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x554 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x394 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x680 (* (- 1) p)))
 (let ((?x565 (+ q ?x680)))
 (let ((?x340 (* (- 1) a)))
 (let ((?x600 (+ b ?x340)))
 (let ((?x436 (* (- 1) r)))
 (let ((?x497 (+ s ?x436)))
 (let ((?x112 (* p p p)))
 (let ((?x919 (+ (* (- 1) (* r a p)) ?x112 (* (- 1) (* ?x497 ?x497 ?x497 ?x600 r a)) (* ?x497 ?x600 ?x600 ?x600 ?x565 ?x565 ?x565 r r r p))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x517 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x331 (* (- 1) q)))
 (let ((?x494 (+ p ?x331)))
 (let ((?x335 (* (- 1) s)))
 (let ((?x537 (+ r ?x335)))
 (let ((?x586 (+ (* (- 1) (* ?x537 (+ a (* (- 1) b)) ?x494)) (* ?x494 ?x494 ?x494) (* (- 1) (* ?x537 (+ a (* (- 1) b)) s s s b)) (* ?x537 ?x537 ?x537 ?x494 s b b b q q q))))
 (let (($x876 (or (not (= (* ?x586 ?x517) 0)) (not (= (* ?x919 ?x394) 0)))))
 (let (($x521 (= ?x517 0)))
 (let ((?x657 (* a00 s00 p)))
 (let ((?x464 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x573 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x464 ?x657 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x524 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x478 (* s a)))
 (let (($x484 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x478 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x148 (* (- 1) ?x37)))
 (let ((?x708 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x708 ?x148 ?x41) 0) $x484 $x524 (= ?x573 0) $x521 $x876))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x945 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x394 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x680 (* (- 1) p)))
 (let ((?x565 (+ q ?x680)))
 (let ((?x340 (* (- 1) a)))
 (let ((?x600 (+ b ?x340)))
 (let ((?x436 (* (- 1) r)))
 (let ((?x497 (+ s ?x436)))
 (let ((?x112 (* p p p)))
 (let ((?x919 (+ (* (- 1) (* r a p)) ?x112 (* (- 1) (* ?x497 ?x497 ?x497 ?x600 r a)) (* ?x497 ?x600 ?x600 ?x600 ?x565 ?x565 ?x565 r r r p))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x517 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x331 (* (- 1) q)))
 (let ((?x494 (+ p ?x331)))
 (let ((?x335 (* (- 1) s)))
 (let ((?x537 (+ r ?x335)))
 (let ((?x586 (+ (* (- 1) (* ?x537 (+ a (* (- 1) b)) ?x494)) (* ?x494 ?x494 ?x494) (* (- 1) (* ?x537 (+ a (* (- 1) b)) s s s b)) (* ?x537 ?x537 ?x537 ?x494 s b b b q q q))))
 (let (($x876 (or (not (= (* ?x586 ?x517) 0)) (not (= (* ?x919 ?x394) 0)))))
 (let (($x521 (= ?x517 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x479 (* p00 s00 a)))
 (let ((?x715 (* b00 r00 p)))
 (let ((?x784 (+ ?x715 ?x479 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x710 (* q a)))
 (let (($x516 (= (+ ?x710 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x698 (* r b)))
 (let (($x719 (= (+ ?x698 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x577 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x705 (* r q)))
 (let (($x930 (and (= (+ ?x705 (* (- 1) (* s p)) ?x37 ?x577) 0) $x719 $x516 (= ?x784 0) $x521 $x876)))
 (let ((?x657 (* a00 s00 p)))
 (let ((?x464 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x588 (= (+ (* (- 1) ?x715) (* (- 1) ?x479) ?x65 ?x464 ?x657 (* (- 1) ?x69)) 0)))
 (let (($x524 (= (+ (* (- 1) ?x710) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x484 (= (+ (* (- 1) ?x698) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x571 (and (= (+ (* (- 1) ?x705) (* s p) (* (- 1) ?x37) ?x41) 0) $x484 $x524 $x588 $x521 $x876)))
 (rewrite (= $x571 $x930)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x123 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x99 (- s r)))
 (let ((?x102 (- q p)))
 (let ((?x97 (- b a)))
 (let ((?x115 (- (+ (* (- 1) a p r) (* p p p)) (* a ?x97 r ?x99 ?x99 ?x99))))
 (let ((?x117 (+ ?x115 (* ?x97 ?x97 ?x97 p ?x102 ?x102 ?x102 r r r ?x99))))
 (let ((?x105 (- (+ (* ?x97 q00 r00) (* b00 p00 ?x99)) (* b00 ?x102 r00))))
 (let ((?x110 (- (+ (- ?x105 (* ?x97 p00 s00)) (* a00 ?x102 s00)) (* a00 q00 ?x99))))
 (let ((?x86 (- r s)))
 (let ((?x85 (- p q)))
 (let ((?x91 (- (+ (* (- 1) (- a b) ?x85 ?x86) (* ?x85 ?x85 ?x85)) (* (- a b) b ?x86 s s s))))
 (let ((?x93 (+ ?x91 (* b b b ?x85 q q q ?x86 ?x86 ?x86 s))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x82 (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) ?x49 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= ?x82 0) (or (not (= (* ?x82 ?x93) 0)) (not (= (* ?x110 ?x117) 0)))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x550 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x394 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x680 (* (- 1) p)))
 (let ((?x565 (+ q ?x680)))
 (let ((?x340 (* (- 1) a)))
 (let ((?x600 (+ b ?x340)))
 (let ((?x436 (* (- 1) r)))
 (let ((?x497 (+ s ?x436)))
 (let ((?x112 (* p p p)))
 (let ((?x919 (+ (* (- 1) (* r a p)) ?x112 (* (- 1) (* ?x497 ?x497 ?x497 ?x600 r a)) (* ?x497 ?x600 ?x600 ?x600 ?x565 ?x565 ?x565 r r r p))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x517 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x331 (* (- 1) q)))
 (let ((?x494 (+ p ?x331)))
 (let ((?x335 (* (- 1) s)))
 (let ((?x537 (+ r ?x335)))
 (let ((?x586 (+ (* (- 1) (* ?x537 (+ a (* (- 1) b)) ?x494)) (* ?x494 ?x494 ?x494) (* (- 1) (* ?x537 (+ a (* (- 1) b)) s s s b)) (* ?x537 ?x537 ?x537 ?x494 s b b b q q q))))
 (let (($x876 (or (not (= (* ?x586 ?x517) 0)) (not (= (* ?x919 ?x394) 0)))))
 (let (($x521 (= ?x517 0)))
 (let ((?x657 (* a00 s00 p)))
 (let ((?x464 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x573 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x464 ?x657 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x524 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x478 (* s a)))
 (let (($x484 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x478 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x148 (* (- 1) ?x37)))
 (let ((?x708 (* s p)))
 (let (($x571 (and (= (+ (* (- 1) (* r q)) ?x708 ?x148 ?x41) 0) $x484 $x524 (= ?x573 0) $x521 $x876)))
 (let ((?x99 (- s r)))
 (let ((?x102 (- q p)))
 (let ((?x97 (- b a)))
 (let ((?x115 (- (+ (* (- 1) a p r) ?x112) (* a ?x97 r ?x99 ?x99 ?x99))))
 (let ((?x117 (+ ?x115 (* ?x97 ?x97 ?x97 p ?x102 ?x102 ?x102 r r r ?x99))))
 (let ((?x105 (- (+ (* ?x97 q00 r00) (* b00 p00 ?x99)) (* b00 ?x102 r00))))
 (let ((?x110 (- (+ (- ?x105 (* ?x97 p00 s00)) (* a00 ?x102 s00)) (* a00 q00 ?x99))))
 (let ((?x86 (- r s)))
 (let ((?x85 (- p q)))
 (let ((?x91 (- (+ (* (- 1) (- a b) ?x85 ?x86) (* ?x85 ?x85 ?x85)) (* (- a b) b ?x86 s s s))))
 (let ((?x93 (+ ?x91 (* b b b ?x85 q q q ?x86 ?x86 ?x86 s))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x82 (- ?x80 ?x81)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x122 (and $x44 $x53 $x61 (= (- ?x68 ?x69) 0) (= ?x82 0) (or (not (= (* ?x82 ?x93) 0)) (not (= (* ?x110 ?x117) 0))))))
 (rewrite (= $x122 $x571))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x124 (asserted $x123)))
 (let ((@x781 (mp (mp @x124 (quant-intro (proof-bind ?x550) (= $x123 $x554)) $x554) (rewrite (= $x554 $x554)) $x554)))
 (let ((@x737 (mp (mp @x781 (quant-intro (proof-bind ?x945) (= $x554 $x944)) $x944) (quant-intro (proof-bind ?x495) (= $x944 $x309)) $x309)))
 (let ((@x885 (mp (mp~ @x737 (sk (~ $x309 $x896)) $x896) (rewrite (= $x896 $x988)) $x988)))
 (let ((@x873 (and-elim @x885 $x647)))
 (let ((@x989 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x647) $x968)) @x873 $x968)))
 (let (($x959 (<= ?x848 0)))
 (let ((@x871 (and-elim @x885 $x854)))
 (let ((@x859 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x854) $x959)) @x871 $x959)))
 (let (($x744 (>= ?x1124 0)))
 (let ((@x902 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x647) $x744)) @x873 $x744)))
 (let (($x962 (>= ?x848 0)))
 (let ((@x906 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x854) $x962)) @x871 $x962)))
 (let (($x857 (not (<= ?x392 0))))
 (let (($x702 (>= ?x392 0)))
 (let ((@x907 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x702)) @x906 @x902 @x859 @x989 false) $x702)))
 (let ((@x913 (unit-resolution (and-elim @x885 $x899) ((_ th-lemma arith eq-propagate 0 0 0 0) @x902 @x989 @x902 @x989 $x867) $x388)))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x889 $x857 (not $x702))) @x913 @x907 $x857) @x906 @x902 @x859 @x989 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 9
 :arith-assert-diseq        2
 :arith-assert-lower        21
 :arith-assert-upper        14
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-fixed-eqs           4
 :arith-max-min             298
 :arith-nonlinear-bounds    6
 :arith-num-rows            11
 :arith-pivots              5
 :arith-pseudo-nonlinear    4
 :arith-row-summations      2
 :arith-tableau-max-columns 84
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 2
 :del-clause                15
 :final-checks              2
 :max-memory                3.78
 :memory                    3.21
 :mk-bool-var               27
 :mk-clause                 24
 :num-allocs                1199229
 :num-checks                1
 :propagations              17
 :rlimit-count              5729
 :time                      0.01
 :total-time                0.02)
