unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x781 (* (- 1) s!1)))
 (let ((?x324 (* r00 r00)))
 (let ((?x1017 (* (- 3) ?x324)))
 (let ((?x1142 (+ s00 ?x1017 (* 3 (* r!2 r!2)) ?x781)))
 (let (($x489 (<= ?x1142 0)))
 (let (($x1143 (= ?x1142 0)))
 (let ((?x598 (* 6 r!2)))
 (let ((?x1701 (+ 3 s!1 ?x598)))
 (let ((?x388 (+ ?x781 x!0)))
 (let ((?x1824 (* 12 (* r00 r00 (+ 1 r!2) ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701))))
 (let ((?x1819 (* (- 12) (* r00 r00 r00 (+ 1 r!2) ?x388 ?x388 ?x1701 ?x1701 ?x1701))))
 (let ((?x1051 (+ 1 r!2)))
 (let ((?x1497 (* (- 3) (* ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701 ?x1701))))
 (let ((?x1438 (* 3 (* s00 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701))))
 (let ((?x1781 (* r00 r00 ?x1051 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701)))
 (let ((?x1538 (* 3 (* ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701))))
 (let ((?x2015 (* (- 6) (* r00 s00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701))))
 (let ((?x1592 (* r00 r00 r00 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701)))
 (let ((?x666 (* (- 6) (* x00 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701))))
 (let ((?x395 (* (- 3) (* r00 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701))))
 (let ((?x1619 (* 6 (* ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701))))
 (let ((?x1616 (* 6 (* ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701))))
 (let ((?x644 (* (- 3) (* ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701))))
 (let ((?x643 (* 4 (* s00 ?x1051 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701))))
 (let ((?x624 (* 2 (* ?x1051 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701 ?x1701))))
 (let ((?x790 (* 4 (* s00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701))))
 (let ((?x1283 (* (- 6) (* r00 s00 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701))))
 (let ((?x859 (* r00 r00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701)))
 (let ((?x800 (* 3 (* ?x1051 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701))))
 (let ((?x1314 (* (- 6) (* x00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701))))
 (let ((?x782 (* (- 3) (* r00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701))))
 (let ((?x480 (* r00 r00 r00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701)))
 (let ((?x960 (* 2 (* ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701))))
 (let ((?x789 (* 3 (* s00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701))))
 (let ((?x1271 (+ ?x789 ?x960 (* 3 (* ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701)) (* 12 ?x480) ?x782 ?x1314 (* (- 2) (* ?x1051 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701)) ?x800 (* 6 (* x00 ?x1051 ?x388 ?x388 ?x1701 ?x1701 ?x1701)) (* (- 6) (* ?x388 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701)) (* 6 (* r00 s00 ?x1051 ?x388 ?x388 ?x1701 ?x1701 ?x1701)) (* 3 (* ?x1051 ?x388 ?x388 ?x1701 ?x1701 ?x1701 ?x1701)) (* (- 12) ?x859) ?x1283 ?x790 ?x624 ?x643 ?x644 (* 6 (* r00 s00 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701)) ?x1616 (* (- 6) (* ?x1051 ?x388 ?x388 ?x388 ?x1701 ?x1701 ?x1701)) (* 12 (* r00 r00 ?x1051 ?x1051 ?x388 ?x388 ?x1701 ?x1701 ?x1701)) (* (- 3) (* ?x1051 ?x1051 ?x388 ?x388 ?x1701 ?x1701 ?x1701)) ?x1619 ?x395 ?x666 (* (- 4) (* s00 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701)) (* (- 2) (* ?x1051 ?x1051 ?x388 ?x388 ?x1701 ?x1701 ?x1701 ?x1701)) (* 3 (* r00 ?x1051 ?x388 ?x388 ?x1701 ?x1701 ?x1701)) (* 12 ?x1592) ?x2015 (* 3 (* r00 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701)) (* (- 12) (* r00 r00 r00 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701)) ?x1538 (* (- 12) ?x1781) ?x1438 (* (- 4) (* s00 ?x1051 ?x1051 ?x388 ?x388 ?x1701 ?x1701 ?x1701)) (* (- 3) (* s00 ?x1051 ?x388 ?x388 ?x1701 ?x1701 ?x1701)) ?x1497 (* (- 3) (* s00 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701)) (* (- 3) (* ?x1051 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701)) ?x1819 ?x1824 (* 6 (* x00 ?x388 ?x388 ?x388 ?x388 ?x1701 ?x1701)))))
 (let (($x1963 (= ?x1271 0)))
 (let (($x1041 (not $x1963)))
 (let ((?x1369 (* x00 x00)))
 (let ((?x678 (* 108 ?x1369)))
 (let ((?x1301 (* r00 r00 s!1)))
 (let ((?x1806 (* 36 ?x1301)))
 (let ((?x1207 (* s00 s00 s00)))
 (let ((?x1466 (* 16 ?x1207)))
 (let ((?x905 (* r00 r00 r00 x00)))
 (let ((?x750 (* (- 432) ?x905)))
 (let ((?x828 (* s00 x00)))
 (let ((?x1087 (* (- 108) ?x828)))
 (let ((?x670 (* s00 r00 r00)))
 (let ((?x1249 (* (- 36) ?x670)))
 (let ((?x614 (* s00 s00)))
 (let ((?x481 (* 51 ?x614)))
 (let ((?x1248 (* (- 9) s!1)))
 (let ((?x545 (* r00 x00)))
 (let ((?x867 (* 108 ?x545)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1774 (+ ?x137 (* (- 54) (* s00 r00)) (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 108 (* x00 s!1)) (* 216 (* s00 r00 x00)) ?x867 ?x1248 (* (- 108) (* r00 x!0)) ?x481 ?x1249 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x1087 ?x750 (* 108 (* x!0 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* 216 (* s00 r00 r00 r00)) ?x1466 (* 108 (* s00 x!0)) ?x1806 ?x678 (* 54 (* r00 s!1)) (* (- 108) (* s!1 x!0)) (* (- 66) (* s00 s!1)) (* 108 (* s00 r00 s!1)) (* 36 (* r00 r00 s!1 s!1)) (* 15 (* s!1 s!1)) (* (- 216) (* x00 x!0)))))
 (let (($x1523 (= ?x1774 0)))
 (let ((?x900 (* r00 r00 x00)))
 (let ((?x1200 (* 36 ?x900)))
 (let ((?x1540 (* (- 6) ?x828)))
 (let ((?x1623 (* 15 ?x614)))
 (let ((?x1754 (* 54 ?x545)))
 (let ((?x1366 (+ ?x137 (* (- 36) (* r00 r!2 x!0)) (* (- 24) (* s00 r00)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* 6 (* x00 s!1)) ?x1754 ?x1248 (* (- 54) (* r00 x!0)) ?x1623 ?x1249 (* 2 (* s00 s00 r00)) (* (- 24) (* s00 r!2)) ?x1540 ?x1200 (* (- 2) (* s!1 s!1 r!2)) (* 6 (* s00 x!0)) ?x1806 (* 24 (* r00 s!1)) (* 24 (* s!1 r!2)) (* (- 6) (* s!1 x!0)) (* (- 12) (* s00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* 2 (* s00 r00 s!1)) (* 54 (* x00 r!2)) (* (- 2) (* s00 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* (- 3) (* s!1 s!1)) (* (- 54) (* r!2 x!0)))))
 (let ((?x1593 (* 4 ?x614)))
 (let ((?x2016 (* (- 3) s!1)))
 (let ((?x830 (* 18 ?x545)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1370 (+ ?x44 (* (- 9) (* s00 r00)) ?x830 ?x2016 (* (- 18) (* r00 x!0)) ?x1593 (* (- 6) ?x670) (* (- 9) (* s00 r!2)) (* (- 6) (* r00 s!1 r!2)) (* 6 (* s00 r00 r!2)) (* 6 ?x1301) (* 9 (* r00 s!1)) (* 9 (* s!1 r!2)) (* (- 2) (* s00 s!1)) (* 18 (* x00 r!2)) (* (- 2) (* s!1 s!1)) (* (- 18) (* r!2 x!0)))))
 (let (($x1091 (= ?x1370 0)))
 (let ((?x1802 (* 6 x!0)))
 (let ((?x2001 (* 3 r!2)))
 (let ((?x492 (* r00 r00 r00)))
 (let ((?x493 (* 12 ?x492)))
 (let ((?x449 (* s00 r00)))
 (let ((?x527 (* (- 6) ?x449)))
 (let ((?x524 (* (- 6) x00)))
 (let ((?x523 (* (- 3) r00)))
 (let ((?x745 (+ ?x44 ?x523 ?x524 ?x527 ?x493 ?x2016 (* 4 (* s00 r!2)) ?x2001 ?x1802 (* (- 12) (* r00 r00 r!2)) (* 2 (* s!1 r!2)))))
 (let (($x947 (= ?x745 0)))
 (let (($x1708 (and $x1143 $x947 $x1091 (= ?x1366 0) $x1523 $x1041)))
 (let ((?x1460 (+ 3 ?x598 s!1)))
 (let ((?x1654 (* 6 (* x00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460))))
 (let ((?x1578 (* r00 r00 r00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460)))
 (let ((?x1565 (* (- 6) (* ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460))))
 (let ((?x1129 (* r00 r00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460)))
 (let ((?x553 (* 6 (* x00 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460))))
 (let ((?x509 (* (- 6) (* ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460))))
 (let ((?x2150 (* 3 (* r00 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460))))
 (let ((?x389 (* 6 (* r00 s00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460))))
 (let ((?x2038 (* (- 3) (* s00 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460))))
 (let ((?x630 (* 6 (* r00 s00 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460))))
 (let ((?x622 (* (- 3) (* ?x1051 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460))))
 (let ((?x1991 (* (- 3) (* s00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460))))
 (let ((?x2175 (* (- 2) (* ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460))))
 (let ((?x700 (* 3 (* ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460 ?x1460))))
 (let ((?x1583 (* (- 2) (* ?x1051 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460 ?x1460))))
 (let ((?x1302 (* r00 r00 ?x1051 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460)))
 (let ((?x619 (* r00 r00 r00 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460)))
 (let ((?x958 (* (- 4) (* s00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460))))
 (let ((?x957 (* (- 4) (* s00 ?x1051 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460))))
 (let ((?x1836 (* 3 (* ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460))))
 (let ((?x672 (* 3 (* r00 ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460))))
 (let ((?x511 (* (- 3) (* ?x1051 ?x1051 ?x1051 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460))))
 (let ((?x1794 (+ (* 12 (* r00 r00 r00 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460)) ?x511 ?x672 ?x1836 (* (- 12) (* r00 r00 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460)) (* 3 (* ?x1051 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460)) (* 3 (* s00 ?x1051 ?x388 ?x388 ?x1460 ?x1460 ?x1460)) ?x957 ?x958 (* 4 (* s00 ?x1051 ?x1051 ?x388 ?x388 ?x1460 ?x1460 ?x1460)) (* 2 (* ?x1051 ?x1051 ?x388 ?x388 ?x1460 ?x1460 ?x1460 ?x1460)) (* (- 12) ?x619) (* 12 ?x1302) (* (- 3) (* r00 ?x1051 ?x388 ?x388 ?x1460 ?x1460 ?x1460)) (* (- 3) (* r00 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460)) ?x1583 (* 4 (* s00 ?x1051 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460)) ?x700 (* 12 (* r00 r00 r00 ?x1051 ?x388 ?x388 ?x1460 ?x1460 ?x1460)) (* (- 3) (* ?x1051 ?x388 ?x388 ?x1460 ?x1460 ?x1460 ?x1460)) (* (- 6) (* r00 s00 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460)) ?x2175 ?x1991 (* (- 6) (* x00 ?x1051 ?x388 ?x388 ?x1460 ?x1460 ?x1460)) (* (- 3) (* ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460)) ?x622 ?x630 ?x2038 (* (- 12) (* r00 r00 ?x1051 ?x1051 ?x388 ?x388 ?x1460 ?x1460 ?x1460)) (* 2 (* ?x1051 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460)) ?x389 (* (- 6) (* x00 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460)) ?x2150 ?x509 (* 6 (* ?x388 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460)) ?x553 (* 3 (* ?x1051 ?x1051 ?x388 ?x388 ?x1460 ?x1460 ?x1460)) (* (- 6) (* r00 s00 ?x1051 ?x388 ?x388 ?x1460 ?x1460 ?x1460)) (* 12 ?x1129) ?x1565 (* (- 12) ?x1578) (* 6 (* ?x1051 ?x388 ?x388 ?x388 ?x1460 ?x1460 ?x1460)) ?x1654 (* 3 (* s00 ?x388 ?x388 ?x388 ?x388 ?x1460 ?x1460)))))
 (let ((?x1399 (* (- 108) ?x1369)))
 (let ((?x1398 (* (- 16) ?x1207)))
 (let ((?x1079 (* s00 r00 r00 r00)))
 (let ((?x1394 (* (- 216) ?x1079)))
 (let ((?x906 (* 432 ?x905)))
 (let ((?x1152 (* 108 ?x828)))
 (let ((?x754 (* s00 s00 r00 r00)))
 (let ((?x755 (* 36 ?x754)))
 (let ((?x691 (* s00 s00 r00)))
 (let ((?x1035 (* 108 ?x691)))
 (let ((?x1023 (* 36 ?x670)))
 (let ((?x1388 (* (- 51) ?x614)))
 (let ((?x2105 (* s!1 r00 r00)))
 (let ((?x1003 (* (- 36) ?x2105)))
 (let ((?x1385 (* (- 108) ?x545)))
 (let ((?x536 (* s00 r00 x00)))
 (let ((?x1384 (* (- 216) ?x536)))
 (let ((?x543 (* 54 ?x449)))
 (let ((?x1010 (* (- 9) s00)))
 (let ((?x1958 (* 9 s!1)))
 (let ((?x618 (+ ?x1958 ?x1010 ?x543 ?x1384 ?x1385 (* (- 15) (* s!1 s!1)) ?x1003 ?x1388 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1023 ?x1035 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x755 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1152 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x906 (* 12 (* s!1 s!1 s00)) ?x1394 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1398 (* 216 (* x!0 x00)) ?x1399)))
 (let ((?x913 (* (- 36) ?x900)))
 (let ((?x829 (* 6 ?x828)))
 (let ((?x719 (* (- 2) ?x691)))
 (let ((?x939 (* (- 15) ?x614)))
 (let ((?x574 (* (- 54) ?x545)))
 (let ((?x587 (* 24 ?x449)))
 (let ((?x751 (+ ?x1958 ?x1010 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x587 ?x574 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x1003 ?x939 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1023 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x719 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x829 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x913 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x671 (* 6 ?x670)))
 (let ((?x627 (* (- 4) ?x614)))
 (let ((?x559 (* (- 18) ?x545)))
 (let ((?x564 (* 9 ?x449)))
 (let ((?x401 (* (- 3) s00)))
 (let ((?x1321 (+ (* 3 s!1) ?x401 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x564 ?x559 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x2105) ?x627 (* 18 (* x!0 r00)) ?x671 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x2194 (+ ?x2001 ?x2016 ?x1802 ?x44 ?x523 ?x524 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x527 ?x493)))
 (let (($x1910 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x324)) 0)))
 (let (($x1457 (and $x1910 (= ?x2194 0) (= ?x1321 0) (= ?x751 0) (= ?x618 0) (not (= ?x1794 0)))))
 (let (($x1002 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1409 (+ 3 ?x213 s)))
 (let ((?x303 (* (- 1) s)))
 (let ((?x1415 (+ ?x303 x)))
 (let ((?x1406 (+ 1 r)))
 (let ((?x2317 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x2207 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)))
 (let ((?x495 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x2144 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)))
 (let ((?x1204 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1254 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x898 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1018 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1310 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1371 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1090 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1487 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x499 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1327 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409))))
 (let ((?x2346 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409))))
 (let ((?x907 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)))
 (let ((?x806 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)))
 (let ((?x2048 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1368 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1374 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1170 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x2368 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x400 (+ (* 12 (* r00 r00 r00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x2368 ?x1170 ?x1374 (* (- 12) (* r00 r00 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) (* 3 (* ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) (* 3 (* s00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x1368 ?x2048 (* 4 (* s00 ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 2 (* ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409)) (* (- 12) ?x806) (* 12 ?x907) (* (- 3) (* r00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 3) (* r00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x2346 (* 4 (* s00 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x1327 (* 12 (* r00 r00 r00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 3) (* ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409)) (* (- 6) (* r00 s00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x499 ?x1487 (* (- 6) (* x00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 3) (* ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x1090 ?x1371 ?x1310 (* (- 12) (* r00 r00 ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 2 (* ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x1018 (* (- 6) (* x00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x898 ?x1254 (* 6 (* ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x1204 (* 3 (* ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 6) (* r00 s00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 12 ?x2144) ?x495 (* (- 12) ?x2207) (* 6 (* ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x2317 (* 3 (* s00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)))))
 (let ((?x1369 (* x00 x00)))
 (let ((?x1399 (* (- 108) ?x1369)))
 (let ((?x1207 (* s00 s00 s00)))
 (let ((?x1398 (* (- 16) ?x1207)))
 (let ((?x1079 (* s00 r00 r00 r00)))
 (let ((?x1394 (* (- 216) ?x1079)))
 (let ((?x905 (* r00 r00 r00 x00)))
 (let ((?x906 (* 432 ?x905)))
 (let ((?x828 (* s00 x00)))
 (let ((?x1152 (* 108 ?x828)))
 (let ((?x754 (* s00 s00 r00 r00)))
 (let ((?x755 (* 36 ?x754)))
 (let ((?x691 (* s00 s00 r00)))
 (let ((?x1035 (* 108 ?x691)))
 (let ((?x670 (* s00 r00 r00)))
 (let ((?x1023 (* 36 ?x670)))
 (let ((?x614 (* s00 s00)))
 (let ((?x1388 (* (- 51) ?x614)))
 (let ((?x588 (* s r00 r00)))
 (let ((?x887 (* (- 36) ?x588)))
 (let ((?x545 (* r00 x00)))
 (let ((?x1385 (* (- 108) ?x545)))
 (let ((?x536 (* s00 r00 x00)))
 (let ((?x1384 (* (- 216) ?x536)))
 (let ((?x449 (* s00 r00)))
 (let ((?x543 (* 54 ?x449)))
 (let ((?x1010 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1400 (+ ?x143 ?x1010 ?x543 ?x1384 ?x1385 (* (- 15) (* s s)) ?x887 ?x1388 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1023 ?x1035 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x755 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1152 (* 108 (* s x)) (* (- 108) (* x x)) ?x906 (* 12 (* s s s00)) ?x1394 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1398 (* 216 (* x x00)) ?x1399)))
 (let (($x1401 (= ?x1400 0)))
 (let ((?x900 (* r00 r00 x00)))
 (let ((?x913 (* (- 36) ?x900)))
 (let ((?x829 (* 6 ?x828)))
 (let ((?x719 (* (- 2) ?x691)))
 (let ((?x939 (* (- 15) ?x614)))
 (let ((?x568 (* s s)))
 (let ((?x592 (* 3 ?x568)))
 (let ((?x574 (* (- 54) ?x545)))
 (let ((?x587 (* 24 ?x449)))
 (let ((?x1102 (+ ?x143 ?x1010 (* (- 24) (* r s)) (* 24 (* r s00)) ?x587 ?x574 ?x592 (* 54 (* r x)) (* 36 (* r x r00)) ?x887 ?x939 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1023 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x719 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x829 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x913 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1107 (= ?x1102 0)))
 (let ((?x671 (* 6 ?x670)))
 (let ((?x627 (* (- 4) ?x614)))
 (let ((?x569 (* 2 ?x568)))
 (let ((?x559 (* (- 18) ?x545)))
 (let ((?x564 (* 9 ?x449)))
 (let ((?x401 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x768 (+ ?x47 ?x401 (* (- 9) (* r s)) (* 9 (* r s00)) ?x564 ?x559 ?x569 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x588) ?x627 (* 18 (* x r00)) ?x671 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x775 (= ?x768 0)))
 (let ((?x492 (* r00 r00 r00)))
 (let ((?x493 (* 12 ?x492)))
 (let ((?x527 (* (- 6) ?x449)))
 (let ((?x524 (* (- 6) x00)))
 (let ((?x523 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x522 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x528 (+ ?x43 ?x522 ?x56 ?x44 ?x523 ?x524 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x527 ?x493)))
 (let (($x529 (= ?x528 0)))
 (let ((?x324 (* r00 r00)))
 (let ((?x325 (* 3 ?x324)))
 (let ((?x354 (* (- 1) s00)))
 (let (($x357 (= (+ s ?x354 (* (- 3) (* r r)) ?x325) 0)))
 (and $x357 $x529 $x775 $x1107 $x1401 (not (= ?x400 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x353 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x664 (+ 3 s ?x213)))
 (let ((?x303 (* (- 1) s)))
 (let ((?x1001 (+ x ?x303)))
 (let ((?x1406 (+ 1 r)))
 (let ((?x2367 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x2318 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664))))
 (let ((?x2265 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1864 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))
 (let ((?x1919 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)))
 (let ((?x1490 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1827 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1849 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1732 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1600 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))
 (let ((?x483 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x419 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1295 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1246 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1160 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x910 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x882 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x945 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)))
 (let ((?x387 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1508 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x803 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1825 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664))))
 (let ((?x2344 (+ (* 4 (* s00 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x1825 (* (- 3) (* ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 (* r00 r00 r00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 3) (* r00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x803 ?x1508 ?x387 (* (- 6) (* x00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 2 (* ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664)) (* 4 (* s00 ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 12) ?x945) (* (- 12) (* r00 r00 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x882 ?x910 (* (- 6) (* r00 s00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* (- 3) (* r00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) ?x1160 (* 3 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x1246 ?x1295 (* (- 3) (* ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664)) (* (- 6) (* x00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x419 ?x483 (* 3 (* s00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* (- 6) (* r00 s00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 ?x1600) ?x1732 ?x1849 ?x1827 ?x1490 (* 3 (* ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 ?x1919) (* (- 12) (* r00 r00 ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 6 (* ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* 12 (* r00 r00 r00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* 2 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 12) ?x1864) ?x2265 ?x2318 (* 3 (* s00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) ?x2367 (* 6 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))))
 (let (($x1903 (not (= ?x2344 0))))
 (let ((?x1369 (* x00 x00)))
 (let ((?x678 (* 108 ?x1369)))
 (let ((?x340 (* (- 9) s)))
 (let ((?x1608 (* r00 r00 s00)))
 (let ((?x556 (* (- 36) ?x1608)))
 (let ((?x137 (* 9 s00)))
 (let ((?x614 (* s00 s00)))
 (let ((?x481 (* 51 ?x614)))
 (let ((?x1080 (* r00 r00 s)))
 (let ((?x1667 (* 36 ?x1080)))
 (let ((?x1207 (* s00 s00 s00)))
 (let ((?x1466 (* 16 ?x1207)))
 (let ((?x828 (* s00 x00)))
 (let ((?x1087 (* (- 108) ?x828)))
 (let ((?x905 (* r00 r00 r00 x00)))
 (let ((?x750 (* (- 432) ?x905)))
 (let ((?x545 (* r00 x00)))
 (let ((?x867 (* 108 ?x545)))
 (let ((?x752 (+ (* 216 (* r00 s00 x00)) ?x867 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x750 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1087 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1466 (* (- 108) (* x s)) ?x1667 ?x481 (* (- 108) (* r00 x)) ?x137 ?x556 ?x340 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x678)))
 (let (($x774 (= ?x752 0)))
 (let ((?x1623 (* 15 ?x614)))
 (let ((?x900 (* r00 r00 x00)))
 (let ((?x1200 (* 36 ?x900)))
 (let ((?x1540 (* (- 6) ?x828)))
 (let ((?x1754 (* 54 ?x545)))
 (let ((?x330 (+ (* 24 (* s r)) ?x1754 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1540 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1667 ?x1200 ?x1623 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x556 (* 54 (* x00 r)) ?x340 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x522 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1593 (* 4 ?x614)))
 (let ((?x830 (* 18 ?x545)))
 (let ((?x720 (+ (* 9 (* s r)) ?x830 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1080) ?x1593 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1608) (* 18 (* x00 r)) ?x522 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x492 (* r00 r00 r00)))
 (let ((?x493 (* 12 ?x492)))
 (let ((?x524 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x523 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x634 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x522 ?x523 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x524 ?x493)))
 (let (($x694 (= (+ s00 ?x303 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x694 (= ?x634 0) (= ?x720 0) (= ?x330 0) $x774 $x1903))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x677 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1409 (+ 3 ?x213 s)))
 (let ((?x303 (* (- 1) s)))
 (let ((?x1415 (+ ?x303 x)))
 (let ((?x1406 (+ 1 r)))
 (let ((?x2317 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x2207 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)))
 (let ((?x495 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x2144 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)))
 (let ((?x1204 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1254 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x898 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1018 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1310 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1371 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1090 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1487 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x499 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1327 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409))))
 (let ((?x2346 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409))))
 (let ((?x907 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)))
 (let ((?x806 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)))
 (let ((?x2048 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1368 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1374 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1170 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x2368 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x400 (+ (* 12 (* r00 r00 r00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x2368 ?x1170 ?x1374 (* (- 12) (* r00 r00 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) (* 3 (* ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) (* 3 (* s00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x1368 ?x2048 (* 4 (* s00 ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 2 (* ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409)) (* (- 12) ?x806) (* 12 ?x907) (* (- 3) (* r00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 3) (* r00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x2346 (* 4 (* s00 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x1327 (* 12 (* r00 r00 r00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 3) (* ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409)) (* (- 6) (* r00 s00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x499 ?x1487 (* (- 6) (* x00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 3) (* ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x1090 ?x1371 ?x1310 (* (- 12) (* r00 r00 ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 2 (* ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x1018 (* (- 6) (* x00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x898 ?x1254 (* 6 (* ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x1204 (* 3 (* ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 6) (* r00 s00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 12 ?x2144) ?x495 (* (- 12) ?x2207) (* 6 (* ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x2317 (* 3 (* s00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)))))
 (let ((?x1369 (* x00 x00)))
 (let ((?x1399 (* (- 108) ?x1369)))
 (let ((?x1207 (* s00 s00 s00)))
 (let ((?x1398 (* (- 16) ?x1207)))
 (let ((?x1079 (* s00 r00 r00 r00)))
 (let ((?x1394 (* (- 216) ?x1079)))
 (let ((?x905 (* r00 r00 r00 x00)))
 (let ((?x906 (* 432 ?x905)))
 (let ((?x828 (* s00 x00)))
 (let ((?x1152 (* 108 ?x828)))
 (let ((?x754 (* s00 s00 r00 r00)))
 (let ((?x755 (* 36 ?x754)))
 (let ((?x691 (* s00 s00 r00)))
 (let ((?x1035 (* 108 ?x691)))
 (let ((?x670 (* s00 r00 r00)))
 (let ((?x1023 (* 36 ?x670)))
 (let ((?x614 (* s00 s00)))
 (let ((?x1388 (* (- 51) ?x614)))
 (let ((?x588 (* s r00 r00)))
 (let ((?x887 (* (- 36) ?x588)))
 (let ((?x545 (* r00 x00)))
 (let ((?x1385 (* (- 108) ?x545)))
 (let ((?x536 (* s00 r00 x00)))
 (let ((?x1384 (* (- 216) ?x536)))
 (let ((?x449 (* s00 r00)))
 (let ((?x543 (* 54 ?x449)))
 (let ((?x1010 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1400 (+ ?x143 ?x1010 ?x543 ?x1384 ?x1385 (* (- 15) (* s s)) ?x887 ?x1388 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1023 ?x1035 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x755 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1152 (* 108 (* s x)) (* (- 108) (* x x)) ?x906 (* 12 (* s s s00)) ?x1394 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1398 (* 216 (* x x00)) ?x1399)))
 (let (($x1401 (= ?x1400 0)))
 (let ((?x900 (* r00 r00 x00)))
 (let ((?x913 (* (- 36) ?x900)))
 (let ((?x829 (* 6 ?x828)))
 (let ((?x719 (* (- 2) ?x691)))
 (let ((?x939 (* (- 15) ?x614)))
 (let ((?x568 (* s s)))
 (let ((?x592 (* 3 ?x568)))
 (let ((?x574 (* (- 54) ?x545)))
 (let ((?x587 (* 24 ?x449)))
 (let ((?x1102 (+ ?x143 ?x1010 (* (- 24) (* r s)) (* 24 (* r s00)) ?x587 ?x574 ?x592 (* 54 (* r x)) (* 36 (* r x r00)) ?x887 ?x939 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1023 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x719 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x829 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x913 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1107 (= ?x1102 0)))
 (let ((?x671 (* 6 ?x670)))
 (let ((?x627 (* (- 4) ?x614)))
 (let ((?x569 (* 2 ?x568)))
 (let ((?x559 (* (- 18) ?x545)))
 (let ((?x564 (* 9 ?x449)))
 (let ((?x401 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x768 (+ ?x47 ?x401 (* (- 9) (* r s)) (* 9 (* r s00)) ?x564 ?x559 ?x569 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x588) ?x627 (* 18 (* x r00)) ?x671 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x775 (= ?x768 0)))
 (let ((?x492 (* r00 r00 r00)))
 (let ((?x493 (* 12 ?x492)))
 (let ((?x527 (* (- 6) ?x449)))
 (let ((?x524 (* (- 6) x00)))
 (let ((?x523 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x522 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x528 (+ ?x43 ?x522 ?x56 ?x44 ?x523 ?x524 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x527 ?x493)))
 (let (($x529 (= ?x528 0)))
 (let ((?x324 (* r00 r00)))
 (let ((?x325 (* 3 ?x324)))
 (let ((?x354 (* (- 1) s00)))
 (let (($x357 (= (+ s ?x354 (* (- 3) (* r r)) ?x325) 0)))
 (let (($x454 (and $x357 $x529 $x775 $x1107 $x1401 (not (= ?x400 0)))))
 (let ((?x664 (+ 3 s ?x213)))
 (let ((?x1001 (+ x ?x303)))
 (let ((?x2367 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x2318 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664))))
 (let ((?x2265 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1864 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))
 (let ((?x1919 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)))
 (let ((?x1490 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1827 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1849 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1732 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1600 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))
 (let ((?x483 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x419 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1295 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1246 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1160 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x910 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x882 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x945 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)))
 (let ((?x387 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1508 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x803 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1825 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664))))
 (let ((?x2344 (+ (* 4 (* s00 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x1825 (* (- 3) (* ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 (* r00 r00 r00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 3) (* r00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x803 ?x1508 ?x387 (* (- 6) (* x00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 2 (* ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664)) (* 4 (* s00 ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 12) ?x945) (* (- 12) (* r00 r00 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x882 ?x910 (* (- 6) (* r00 s00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* (- 3) (* r00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) ?x1160 (* 3 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x1246 ?x1295 (* (- 3) (* ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664)) (* (- 6) (* x00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x419 ?x483 (* 3 (* s00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* (- 6) (* r00 s00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 ?x1600) ?x1732 ?x1849 ?x1827 ?x1490 (* 3 (* ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 ?x1919) (* (- 12) (* r00 r00 ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 6 (* ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* 12 (* r00 r00 r00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* 2 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 12) ?x1864) ?x2265 ?x2318 (* 3 (* s00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) ?x2367 (* 6 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))))
 (let (($x1903 (not (= ?x2344 0))))
 (let ((?x678 (* 108 ?x1369)))
 (let ((?x340 (* (- 9) s)))
 (let ((?x1608 (* r00 r00 s00)))
 (let ((?x556 (* (- 36) ?x1608)))
 (let ((?x137 (* 9 s00)))
 (let ((?x481 (* 51 ?x614)))
 (let ((?x1080 (* r00 r00 s)))
 (let ((?x1667 (* 36 ?x1080)))
 (let ((?x1466 (* 16 ?x1207)))
 (let ((?x1087 (* (- 108) ?x828)))
 (let ((?x750 (* (- 432) ?x905)))
 (let ((?x867 (* 108 ?x545)))
 (let ((?x752 (+ (* 216 (* r00 s00 x00)) ?x867 (* (- 54) (* r00 s00)) (* 15 ?x568) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x750 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1087 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1466 (* (- 108) (* x s)) ?x1667 ?x481 (* (- 108) (* r00 x)) ?x137 ?x556 ?x340 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x678)))
 (let (($x774 (= ?x752 0)))
 (let ((?x1623 (* 15 ?x614)))
 (let ((?x1200 (* 36 ?x900)))
 (let ((?x1540 (* (- 6) ?x828)))
 (let ((?x1754 (* 54 ?x545)))
 (let ((?x330 (+ (* 24 (* s r)) ?x1754 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x568) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1540 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1667 ?x1200 ?x1623 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x556 (* 54 (* x00 r)) ?x340 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x1593 (* 4 ?x614)))
 (let ((?x830 (* 18 ?x545)))
 (let ((?x720 (+ (* 9 (* s r)) ?x830 (* (- 9) (* r00 s00)) (* (- 2) ?x568) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1080) ?x1593 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1608) (* 18 (* x00 r)) ?x522 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x634 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x522 ?x523 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x524 ?x493)))
 (let (($x694 (= (+ s00 ?x303 (* 3 (* r r)) (* (- 3) ?x324)) 0)))
 (let (($x359 (and $x694 (= ?x634 0) (= ?x720 0) (= ?x330 0) $x774 $x1903)))
 (rewrite (= $x359 $x454))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1907 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x664 (+ 3 s ?x213)))
 (let ((?x303 (* (- 1) s)))
 (let ((?x1001 (+ x ?x303)))
 (let ((?x1406 (+ 1 r)))
 (let ((?x2367 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x2318 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664))))
 (let ((?x2265 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1864 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))
 (let ((?x1919 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)))
 (let ((?x1490 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1827 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1849 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1732 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1600 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))
 (let ((?x483 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x419 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1295 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1246 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1160 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x910 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x882 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x945 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)))
 (let ((?x387 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1508 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x803 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1825 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664))))
 (let ((?x2344 (+ (* 4 (* s00 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x1825 (* (- 3) (* ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 (* r00 r00 r00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 3) (* r00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x803 ?x1508 ?x387 (* (- 6) (* x00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 2 (* ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664)) (* 4 (* s00 ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 12) ?x945) (* (- 12) (* r00 r00 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x882 ?x910 (* (- 6) (* r00 s00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* (- 3) (* r00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) ?x1160 (* 3 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x1246 ?x1295 (* (- 3) (* ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664)) (* (- 6) (* x00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x419 ?x483 (* 3 (* s00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* (- 6) (* r00 s00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 ?x1600) ?x1732 ?x1849 ?x1827 ?x1490 (* 3 (* ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 ?x1919) (* (- 12) (* r00 r00 ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 6 (* ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* 12 (* r00 r00 r00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* 2 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 12) ?x1864) ?x2265 ?x2318 (* 3 (* s00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) ?x2367 (* 6 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))))
 (let (($x1903 (not (= ?x2344 0))))
 (let ((?x1369 (* x00 x00)))
 (let ((?x678 (* 108 ?x1369)))
 (let ((?x340 (* (- 9) s)))
 (let ((?x1608 (* r00 r00 s00)))
 (let ((?x556 (* (- 36) ?x1608)))
 (let ((?x137 (* 9 s00)))
 (let ((?x614 (* s00 s00)))
 (let ((?x481 (* 51 ?x614)))
 (let ((?x1080 (* r00 r00 s)))
 (let ((?x1667 (* 36 ?x1080)))
 (let ((?x1207 (* s00 s00 s00)))
 (let ((?x1466 (* 16 ?x1207)))
 (let ((?x828 (* s00 x00)))
 (let ((?x1087 (* (- 108) ?x828)))
 (let ((?x905 (* r00 r00 r00 x00)))
 (let ((?x750 (* (- 432) ?x905)))
 (let ((?x545 (* r00 x00)))
 (let ((?x867 (* 108 ?x545)))
 (let ((?x752 (+ (* 216 (* r00 s00 x00)) ?x867 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x750 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1087 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1466 (* (- 108) (* x s)) ?x1667 ?x481 (* (- 108) (* r00 x)) ?x137 ?x556 ?x340 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x678)))
 (let (($x774 (= ?x752 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1010 (* (- 9) s00)))
 (let ((?x939 (* (- 15) ?x614)))
 (let ((?x900 (* r00 r00 x00)))
 (let ((?x913 (* (- 36) ?x900)))
 (let ((?x829 (* 6 ?x828)))
 (let ((?x568 (* s s)))
 (let ((?x592 (* 3 ?x568)))
 (let ((?x574 (* (- 54) ?x545)))
 (let ((?x784 (+ (* (- 24) (* s r)) ?x574 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x592 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x829 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1080) ?x913 ?x939 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1010 (* 36 ?x1608) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x401 (* (- 3) s00)))
 (let ((?x627 (* (- 4) ?x614)))
 (let ((?x569 (* 2 ?x568)))
 (let ((?x559 (* (- 18) ?x545)))
 (let ((?x710 (+ (* (- 9) (* s r)) ?x559 (* 9 (* r00 s00)) ?x569 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1080) ?x627 (* 18 (* r00 x)) ?x401 (* 6 ?x1608) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2351 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x401 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x694 (= (+ s00 ?x303 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x694 (= ?x2351 0) (= ?x710 0) (= ?x784 0) $x774 $x1903)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x358 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x664 (+ 3 s ?x213)))
 (let ((?x303 (* (- 1) s)))
 (let ((?x1001 (+ x ?x303)))
 (let ((?x1406 (+ 1 r)))
 (let ((?x2367 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x2318 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664))))
 (let ((?x2265 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1864 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))
 (let ((?x1919 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)))
 (let ((?x1490 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1827 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1849 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1732 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1600 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))
 (let ((?x483 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x419 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1295 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1246 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1160 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x910 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x882 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x945 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)))
 (let ((?x387 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1508 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x803 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1825 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664))))
 (let ((?x2344 (+ (* 4 (* s00 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x1825 (* (- 3) (* ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 (* r00 r00 r00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 3) (* r00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x803 ?x1508 ?x387 (* (- 6) (* x00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 2 (* ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664)) (* 4 (* s00 ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 12) ?x945) (* (- 12) (* r00 r00 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x882 ?x910 (* (- 6) (* r00 s00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* (- 3) (* r00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) ?x1160 (* 3 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x1246 ?x1295 (* (- 3) (* ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664)) (* (- 6) (* x00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x419 ?x483 (* 3 (* s00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* (- 6) (* r00 s00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 ?x1600) ?x1732 ?x1849 ?x1827 ?x1490 (* 3 (* ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 ?x1919) (* (- 12) (* r00 r00 ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 6 (* ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* 12 (* r00 r00 r00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* 2 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 12) ?x1864) ?x2265 ?x2318 (* 3 (* s00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) ?x2367 (* 6 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))))
 (let (($x1903 (not (= ?x2344 0))))
 (let ((?x1369 (* x00 x00)))
 (let ((?x678 (* 108 ?x1369)))
 (let ((?x340 (* (- 9) s)))
 (let ((?x1608 (* r00 r00 s00)))
 (let ((?x556 (* (- 36) ?x1608)))
 (let ((?x137 (* 9 s00)))
 (let ((?x614 (* s00 s00)))
 (let ((?x481 (* 51 ?x614)))
 (let ((?x1080 (* r00 r00 s)))
 (let ((?x1667 (* 36 ?x1080)))
 (let ((?x1207 (* s00 s00 s00)))
 (let ((?x1466 (* 16 ?x1207)))
 (let ((?x828 (* s00 x00)))
 (let ((?x1087 (* (- 108) ?x828)))
 (let ((?x905 (* r00 r00 r00 x00)))
 (let ((?x750 (* (- 432) ?x905)))
 (let ((?x545 (* r00 x00)))
 (let ((?x867 (* 108 ?x545)))
 (let ((?x752 (+ (* 216 (* r00 s00 x00)) ?x867 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x750 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1087 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1466 (* (- 108) (* x s)) ?x1667 ?x481 (* (- 108) (* r00 x)) ?x137 ?x556 ?x340 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x678)))
 (let (($x774 (= ?x752 0)))
 (let ((?x1623 (* 15 ?x614)))
 (let ((?x900 (* r00 r00 x00)))
 (let ((?x1200 (* 36 ?x900)))
 (let ((?x1540 (* (- 6) ?x828)))
 (let ((?x1754 (* 54 ?x545)))
 (let ((?x330 (+ (* 24 (* s r)) ?x1754 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1540 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1667 ?x1200 ?x1623 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x556 (* 54 (* x00 r)) ?x340 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x522 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1593 (* 4 ?x614)))
 (let ((?x830 (* 18 ?x545)))
 (let ((?x720 (+ (* 9 (* s r)) ?x830 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1080) ?x1593 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1608) (* 18 (* x00 r)) ?x522 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x492 (* r00 r00 r00)))
 (let ((?x493 (* 12 ?x492)))
 (let ((?x524 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x523 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x634 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x522 ?x523 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x524 ?x493)))
 (let (($x694 (= (+ s00 ?x303 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x359 (and $x694 (= ?x634 0) (= ?x720 0) (= ?x330 0) $x774 $x1903)))
 (let ((?x143 (* 9 s)))
 (let ((?x1010 (* (- 9) s00)))
 (let ((?x939 (* (- 15) ?x614)))
 (let ((?x913 (* (- 36) ?x900)))
 (let ((?x829 (* 6 ?x828)))
 (let ((?x568 (* s s)))
 (let ((?x592 (* 3 ?x568)))
 (let ((?x574 (* (- 54) ?x545)))
 (let ((?x784 (+ (* (- 24) (* s r)) ?x574 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x592 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x829 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1080) ?x913 ?x939 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1010 (* 36 ?x1608) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x401 (* (- 3) s00)))
 (let ((?x627 (* (- 4) ?x614)))
 (let ((?x569 (* 2 ?x568)))
 (let ((?x559 (* (- 18) ?x545)))
 (let ((?x710 (+ (* (- 9) (* s r)) ?x559 (* 9 (* r00 s00)) ?x569 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1080) ?x627 (* 18 (* r00 x)) ?x401 (* 6 ?x1608) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2351 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x401 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x492))))
 (let (($x1770 (and $x694 (= ?x2351 0) (= ?x710 0) (= ?x784 0) $x774 $x1903)))
 (rewrite (= $x1770 $x359)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x300 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x286 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x284 (* 12 ?x212 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x276 (* 12 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x273 (* 4 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x268 (* 2 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x265 (* 12 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x249 (* 4 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)))
 (let ((?x246 (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)))
 (let ((?x235 (* 12 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x226 (* 6 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x218 (+ (* 4 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215) (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x222 (+ (- ?x218 (* 3 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) (* 12 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x227 (+ (- ?x222 (* 3 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215) ?x226)))
 (let ((?x230 (- ?x227 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x234 (+ (- ?x230 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x238 (- (- ?x234 ?x235) (* 12 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x241 (+ ?x238 (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 x00) (* 3 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x245 (- (- ?x241 (* 6 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* 3 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x253 (- (+ ?x245 ?x246 (* 3 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) ?x249)))
 (let ((?x254 (- ?x253 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x256 (- (- ?x254 (* 3 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 6 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00))))
 (let ((?x258 (+ ?x256 (* 6 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00))))
 (let ((?x260 (- ?x258 (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x264 (- (+ ?x260 (* 3 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* 6 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x269 (- (+ ?x264 ?x265) (* 6 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x272 (+ (- ?x269 ?x268) (* 3 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x277 (+ (- ?x272 ?x273) (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215) ?x276)))
 (let ((?x283 (+ (- ?x277 (* 12 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 6 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215) (* 12 r00 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215) (* 2 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x288 (- (- ?x283 ?x284) (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x293 (- (+ (- ?x288 ?x286) (* 3 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let (($x297 (not (= (+ ?x293 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) 0))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x297))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1652 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x664 (+ 3 s ?x213)))
 (let ((?x303 (* (- 1) s)))
 (let ((?x1001 (+ x ?x303)))
 (let ((?x1406 (+ 1 r)))
 (let ((?x2367 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x2318 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664))))
 (let ((?x2265 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1864 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))
 (let ((?x1919 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)))
 (let ((?x1490 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1827 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1849 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1732 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1600 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))
 (let ((?x483 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x419 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1295 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1246 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1160 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x910 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x882 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x945 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)))
 (let ((?x387 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x1508 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664))))
 (let ((?x803 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664))))
 (let ((?x1825 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664))))
 (let ((?x2344 (+ (* 4 (* s00 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x1825 (* (- 3) (* ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 (* r00 r00 r00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 3) (* r00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x803 ?x1508 ?x387 (* (- 6) (* x00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 2 (* ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664)) (* 4 (* s00 ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 12) ?x945) (* (- 12) (* r00 r00 ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x882 ?x910 (* (- 6) (* r00 s00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* (- 3) (* r00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) ?x1160 (* 3 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x1246 ?x1295 (* (- 3) (* ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664 ?x664)) (* (- 6) (* x00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) ?x419 ?x483 (* 3 (* s00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* (- 6) (* r00 s00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 ?x1600) ?x1732 ?x1849 ?x1827 ?x1490 (* 3 (* ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 12 ?x1919) (* (- 12) (* r00 r00 ?x1406 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* 6 (* ?x1001 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* 12 (* r00 r00 r00 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664)) (* 2 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)) (* (- 12) ?x1864) ?x2265 ?x2318 (* 3 (* s00 ?x1406 ?x1001 ?x1001 ?x664 ?x664 ?x664)) ?x2367 (* 6 (* ?x1406 ?x1001 ?x1001 ?x1001 ?x664 ?x664 ?x664)))))
 (let (($x1903 (not (= ?x2344 0))))
 (let ((?x1369 (* x00 x00)))
 (let ((?x678 (* 108 ?x1369)))
 (let ((?x340 (* (- 9) s)))
 (let ((?x1608 (* r00 r00 s00)))
 (let ((?x556 (* (- 36) ?x1608)))
 (let ((?x137 (* 9 s00)))
 (let ((?x614 (* s00 s00)))
 (let ((?x481 (* 51 ?x614)))
 (let ((?x1080 (* r00 r00 s)))
 (let ((?x1667 (* 36 ?x1080)))
 (let ((?x1207 (* s00 s00 s00)))
 (let ((?x1466 (* 16 ?x1207)))
 (let ((?x828 (* s00 x00)))
 (let ((?x1087 (* (- 108) ?x828)))
 (let ((?x905 (* r00 r00 r00 x00)))
 (let ((?x750 (* (- 432) ?x905)))
 (let ((?x545 (* r00 x00)))
 (let ((?x867 (* 108 ?x545)))
 (let ((?x752 (+ (* 216 (* r00 s00 x00)) ?x867 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x750 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1087 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1466 (* (- 108) (* x s)) ?x1667 ?x481 (* (- 108) (* r00 x)) ?x137 ?x556 ?x340 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x678)))
 (let (($x774 (= ?x752 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1010 (* (- 9) s00)))
 (let ((?x939 (* (- 15) ?x614)))
 (let ((?x900 (* r00 r00 x00)))
 (let ((?x913 (* (- 36) ?x900)))
 (let ((?x829 (* 6 ?x828)))
 (let ((?x568 (* s s)))
 (let ((?x592 (* 3 ?x568)))
 (let ((?x574 (* (- 54) ?x545)))
 (let ((?x784 (+ (* (- 24) (* s r)) ?x574 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x592 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x829 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1080) ?x913 ?x939 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1010 (* 36 ?x1608) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x401 (* (- 3) s00)))
 (let ((?x627 (* (- 4) ?x614)))
 (let ((?x569 (* 2 ?x568)))
 (let ((?x559 (* (- 18) ?x545)))
 (let ((?x710 (+ (* (- 9) (* s r)) ?x559 (* 9 (* r00 s00)) ?x569 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1080) ?x627 (* 18 (* r00 x)) ?x401 (* 6 ?x1608) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2351 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x401 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x694 (= (+ s00 ?x303 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1770 (and $x694 (= ?x2351 0) (= ?x710 0) (= ?x784 0) $x774 $x1903)))
 (let ((?x215 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x286 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x284 (* 12 ?x212 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x276 (* 12 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x273 (* 4 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x268 (* 2 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x265 (* 12 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x249 (* 4 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)))
 (let ((?x246 (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)))
 (let ((?x235 (* 12 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x226 (* 6 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x218 (+ (* 4 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215) (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x222 (+ (- ?x218 (* 3 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) (* 12 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x227 (+ (- ?x222 (* 3 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215) ?x226)))
 (let ((?x230 (- ?x227 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x234 (+ (- ?x230 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x238 (- (- ?x234 ?x235) (* 12 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x241 (+ ?x238 (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 x00) (* 3 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x245 (- (- ?x241 (* 6 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* 3 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x253 (- (+ ?x245 ?x246 (* 3 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) ?x249)))
 (let ((?x254 (- ?x253 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x256 (- (- ?x254 (* 3 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 6 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00))))
 (let ((?x258 (+ ?x256 (* 6 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00))))
 (let ((?x260 (- ?x258 (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x264 (- (+ ?x260 (* 3 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* 6 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x269 (- (+ ?x264 ?x265) (* 6 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x272 (+ (- ?x269 ?x268) (* 3 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x277 (+ (- ?x272 ?x273) (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215) ?x276)))
 (let ((?x283 (+ (- ?x277 (* 12 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 6 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215) (* 12 r00 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215) (* 2 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x288 (- (- ?x283 ?x284) (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x293 (- (+ (- ?x288 ?x286) (* 3 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let (($x297 (not (= (+ ?x293 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) 0))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x299 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x297))))
 (rewrite (= $x299 $x1770)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x301 (asserted $x300)))
 (let ((@x687 (mp (mp @x301 (quant-intro (proof-bind ?x1652) (= $x300 $x1907)) $x1907) (rewrite (= $x1907 $x1907)) $x1907)))
 (let ((@x1995 (mp (mp @x687 (quant-intro (proof-bind ?x358) (= $x1907 $x353)) $x353) (quant-intro (proof-bind ?x677) (= $x353 $x1002)) $x1002)))
 (let ((@x840 (mp (mp~ @x1995 (sk (~ $x1002 $x1457)) $x1457) (rewrite (= $x1457 $x1708)) $x1708)))
 (let ((@x1454 (and-elim @x840 $x1143)))
 (let ((@x982 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1143) $x489)) @x1454 $x489)))
 (let (($x1252 (>= ?x1142 0)))
 (let ((@x1999 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1143) $x1252)) @x1454 $x1252)))
 (let (($x2172 (<= ?x1774 0)))
 (let ((@x1287 (and-elim @x840 $x1523)))
 (let ((@x1158 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1523) $x2172)) @x1287 $x2172)))
 (let (($x1375 (>= ?x1774 0)))
 (let ((@x2283 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1523) $x1375)) @x1287 $x1375)))
 (let (($x2106 (<= ?x1370 0)))
 (let ((@x1278 (and-elim @x840 $x1091)))
 (let ((@x1757 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1091) $x2106)) @x1278 $x2106)))
 (let (($x2360 (>= ?x1370 0)))
 (let ((@x1996 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1091) $x2360)) @x1278 $x2360)))
 (let (($x1313 (<= ?x745 0)))
 (let ((@x1378 (and-elim @x840 $x947)))
 (let ((@x2299 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x947) $x1313)) @x1378 $x1313)))
 (let (($x1323 (>= ?x745 0)))
 (let ((@x1197 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x947) $x1323)) @x1378 $x1323)))
 (let (($x594 (not (<= ?x1271 0))))
 (let (($x1088 (>= ?x1271 0)))
 (let ((@x2354 ((_ th-lemma arith) (hypothesis (not $x1088)) @x1999 @x982 @x1996 @x1757 @x1999 @x982 @x1996 @x1757 @x1197 @x2299 @x1999 @x982 @x1996 @x1757 @x2283 @x1158 @x1999 @x982 false)))
 (let ((@x2310 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1963 $x594 (not $x1088))) (and-elim @x840 $x1041) (or $x594 (not $x1088)))))
 ((_ th-lemma arith) (unit-resolution @x2310 (lemma @x2354 $x1088) $x594) @x1999 @x982 @x1996 @x1757 @x1999 @x982 @x1996 @x1757 @x1197 @x2299 @x1999 @x982 @x1996 @x1757 @x2283 @x1158 @x1999 @x982 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        25
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             782
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      7
 :arith-tableau-max-columns 139
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.89
 :memory                    3.42
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                42901360
 :num-checks                1
 :propagations              12
 :rlimit-count              170196
 :time                      0.11
 :total-time                0.13)
