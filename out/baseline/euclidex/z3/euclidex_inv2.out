unsat
((set-logic NIA)
(proof
(let (($x219 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x295 (* (- 1) ?x51)))
 (let ((?x47 (* a00 s00)))
 (let ((?x348 (* (+ b (* (- 1) a)) r)))
 (let (($x131 (= (+ ?x348 ?x47 (* (- 1) (* (+ s (* (- 1) r)) a)) ?x295) 0)))
 (let (($x190 (not $x131)))
 (let ((?x271 (* (+ r (* (- 1) s)) b)))
 (let (($x351 (= (+ ?x271 ?x47 (* (- 1) (* (+ a (* (- 1) b)) s)) ?x295) 0)))
 (let (($x145 (not $x351)))
 (let (($x218 (or $x145 $x190)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x217 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x224 (= ?x217 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x262 (* p00 s00 a)))
 (let ((?x297 (* b00 r00 p)))
 (let ((?x120 (+ ?x297 ?x262 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x247 (= ?x120 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x275 (* q a)))
 (let (($x350 (= (+ ?x275 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x293 (* s a)))
 (let ((?x303 (* (- 1) ?x293)))
 (let ((?x197 (* r b)))
 (let ((?x258 (+ ?x197 ?x47 ?x303 ?x295)))
 (let (($x199 (= ?x258 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x185 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x294 (* s p)))
 (let ((?x183 (* (- 1) ?x294)))
 (let ((?x260 (* r q)))
 (let ((?x184 (+ ?x260 ?x183 ?x37 ?x185)))
 (let (($x274 (= ?x184 0)))
 (and $x274 $x199 $x350 $x247 $x224 $x218))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x442 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! false :qid k!38))
 ))
 (let ((?x443 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x295 (* (- 1) ?x51)))
 (let ((?x47 (* a00 s00)))
 (let ((?x348 (* (+ b (* (- 1) a)) r)))
 (let (($x131 (= (+ ?x348 ?x47 (* (- 1) (* (+ s (* (- 1) r)) a)) ?x295) 0)))
 (let (($x190 (not $x131)))
 (let ((?x271 (* (+ r (* (- 1) s)) b)))
 (let (($x351 (= (+ ?x271 ?x47 (* (- 1) (* (+ a (* (- 1) b)) s)) ?x295) 0)))
 (let (($x145 (not $x351)))
 (let (($x218 (or $x145 $x190)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x217 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x224 (= ?x217 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x262 (* p00 s00 a)))
 (let ((?x297 (* b00 r00 p)))
 (let ((?x120 (+ ?x297 ?x262 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x247 (= ?x120 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x275 (* q a)))
 (let (($x350 (= (+ ?x275 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x293 (* s a)))
 (let ((?x303 (* (- 1) ?x293)))
 (let ((?x197 (* r b)))
 (let ((?x258 (+ ?x197 ?x47 ?x303 ?x295)))
 (let (($x199 (= ?x258 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x185 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x294 (* s p)))
 (let ((?x183 (* (- 1) ?x294)))
 (let ((?x260 (* r q)))
 (let ((?x184 (+ ?x260 ?x183 ?x37 ?x185)))
 (let (($x274 (= ?x184 0)))
 (let (($x191 (and $x274 $x199 $x350 $x247 $x224 $x218)))
 (let ((?x136 (* r00 b00)))
 (let ((?x118 (* s00 a00)))
 (let ((?x125 (* (- 1) ?x118)))
 (let ((?x112 (* b r)))
 (let ((?x113 (* (- 1) ?x112)))
 (let ((?x49 (* a s)))
 (let (($x151 (= (+ ?x49 ?x113 ?x125 ?x136) 0)))
 (let (($x393 (not $x151)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x302 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x307 (= ?x302 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x238 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x239 (= ?x238 0)))
 (let ((?x172 (+ (* a q) (* (- 1) (* q00 a00)) (* p00 b00) (* (- 1) (* p b)))))
 (let (($x173 (= ?x172 0)))
 (let (($x146 (= (+ (* p s) (* (- 1) ?x37) ?x41 (* (- 1) (* q r))) 0)))
 (let (($x432 (and $x146 $x151 $x173 $x239 $x307 $x393)))
 (let ((@x425 (monotonicity (rewrite (= $x145 $x393)) (rewrite (= $x190 $x393)) (= $x218 (or $x393 $x393)))))
 (let ((@x155 (rewrite (= (= (+ (* (- 1) ?x49) ?x112 ?x118 (* (- 1) ?x136)) 0) $x151))))
 (let ((?x232 (* (- 1) ?x136)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x132 (+ ?x213 ?x112 ?x118 ?x232)))
 (let ((?x234 (+ ?x112 ?x118 ?x213 ?x232)))
 (let ((@x243 (monotonicity (rewrite (= ?x197 ?x112)) (rewrite (= ?x47 ?x118)) (rewrite (= ?x303 ?x213)) (rewrite (= ?x295 ?x232)) (= ?x258 ?x234))))
 (let ((@x144 (monotonicity (trans @x243 (rewrite (= ?x234 ?x132)) (= ?x258 ?x132)) (= $x199 (= ?x132 0)))))
 (let ((?x110 (* q r)))
 (let ((?x33 (* p s)))
 (let ((?x115 (* (- 1) ?x33)))
 (let ((?x334 (+ ?x115 ?x37 ?x185 ?x110)))
 (let (($x353 (= ?x334 0)))
 (let ((@x332 (monotonicity (rewrite (= ?x260 ?x110)) (rewrite (= ?x183 ?x115)) (= ?x184 (+ ?x110 ?x115 ?x37 ?x185)))))
 (let ((@x148 (trans @x332 (rewrite (= (+ ?x110 ?x115 ?x37 ?x185) ?x334)) (= ?x184 ?x334))))
 (let ((@x180 (trans (monotonicity @x148 (= $x274 $x353)) (rewrite (= $x353 $x146)) (= $x274 $x146))))
 (let ((@x436 (monotonicity @x180 (trans @x144 @x155 (= $x199 $x151)) (rewrite (= $x350 $x173)) (rewrite (= $x247 $x239)) (rewrite (= $x224 $x307)) (trans @x425 (rewrite (= (or $x393 $x393) $x393)) (= $x218 $x393)) (= $x191 $x432))))
 (trans @x436 (rewrite (= $x432 false)) (= $x191 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x452 (trans (quant-intro (proof-bind ?x443) (= $x219 $x442)) (elim-unused (= $x442 false)) (= $x219 false))))
 (let (($x116 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x223 (* (+ s (* (- 1) r)) a)))
 (let ((?x47 (* a00 s00)))
 (let ((?x227 (* (- 1) ?x47)))
 (let (($x107 (= (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x227 ?x223 ?x51) 0)))
 (let ((?x193 (* (+ a (* (- 1) b)) s)))
 (let (($x208 (= (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x227 ?x193 ?x51) 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x217 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x224 (= ?x217 0)))
 (let ((?x322 (* a00 s00 p)))
 (let ((?x311 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x134 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x311 ?x322 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x150 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x127 (* (- 1) ?x37)))
 (let ((?x294 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x294 ?x127 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x227 (* s a) ?x51) 0) $x150 (= ?x134 0) $x224 (or (not $x208) (not $x107)))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x356 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x295 (* (- 1) ?x51)))
 (let ((?x47 (* a00 s00)))
 (let ((?x348 (* (+ b (* (- 1) a)) r)))
 (let (($x131 (= (+ ?x348 ?x47 (* (- 1) (* (+ s (* (- 1) r)) a)) ?x295) 0)))
 (let (($x190 (not $x131)))
 (let ((?x271 (* (+ r (* (- 1) s)) b)))
 (let (($x351 (= (+ ?x271 ?x47 (* (- 1) (* (+ a (* (- 1) b)) s)) ?x295) 0)))
 (let (($x145 (not $x351)))
 (let (($x218 (or $x145 $x190)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x217 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x224 (= ?x217 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x262 (* p00 s00 a)))
 (let ((?x297 (* b00 r00 p)))
 (let ((?x120 (+ ?x297 ?x262 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x247 (= ?x120 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x275 (* q a)))
 (let (($x350 (= (+ ?x275 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x293 (* s a)))
 (let ((?x303 (* (- 1) ?x293)))
 (let ((?x197 (* r b)))
 (let ((?x258 (+ ?x197 ?x47 ?x303 ?x295)))
 (let (($x199 (= ?x258 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x185 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x294 (* s p)))
 (let ((?x183 (* (- 1) ?x294)))
 (let ((?x260 (* r q)))
 (let ((?x184 (+ ?x260 ?x183 ?x37 ?x185)))
 (let (($x274 (= ?x184 0)))
 (let (($x191 (and $x274 $x199 $x350 $x247 $x224 $x218)))
 (let ((?x223 (* (+ s (* (- 1) r)) a)))
 (let ((?x227 (* (- 1) ?x47)))
 (let (($x208 (= (+ (* (- 1) ?x271) ?x227 (* (+ a (* (- 1) b)) s) ?x51) 0)))
 (let ((?x322 (* a00 s00 p)))
 (let ((?x311 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x272 (= (+ (* (- 1) ?x297) (* (- 1) ?x262) ?x65 ?x311 ?x322 (* (- 1) ?x69)) 0)))
 (let (($x150 (= (+ (* (- 1) ?x275) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x333 (and (= (+ (* (- 1) ?x260) ?x294 (* (- 1) ?x37) ?x41) 0) (= (+ (* (- 1) ?x197) ?x227 ?x293 ?x51) 0) $x150 $x272 $x224 (or (not $x208) (not (= (+ (* (- 1) ?x348) ?x227 ?x223 ?x51) 0))))))
 (rewrite (= $x333 $x191)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x102 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x97 (+ (- (* (- 1) (- b a) r) (* a00 s00)) (* a (- s r)) ?x51)))
 (let ((?x89 (+ (- (* (- 1) b (- r s)) (* a00 s00)) (* (- a b) s) ?x51)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x89 0)) (not (= ?x97 0))))))))))))))))))) :qid k!38))
 ))
 (let ((?x340 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x223 (* (+ s (* (- 1) r)) a)))
 (let ((?x47 (* a00 s00)))
 (let ((?x227 (* (- 1) ?x47)))
 (let (($x107 (= (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x227 ?x223 ?x51) 0)))
 (let ((?x193 (* (+ a (* (- 1) b)) s)))
 (let (($x208 (= (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x227 ?x193 ?x51) 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x217 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x224 (= ?x217 0)))
 (let ((?x322 (* a00 s00 p)))
 (let ((?x311 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x134 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x311 ?x322 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x150 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x127 (* (- 1) ?x37)))
 (let ((?x294 (* s p)))
 (let (($x333 (and (= (+ (* (- 1) (* r q)) ?x294 ?x127 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x227 (* s a) ?x51) 0) $x150 (= ?x134 0) $x224 (or (not $x208) (not $x107)))))
 (let ((?x97 (+ (- (* (- 1) (- b a) r) ?x47) (* a (- s r)) ?x51)))
 (let ((?x89 (+ (- (* (- 1) b (- r s)) ?x47) (* (- a b) s) ?x51)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x101 (and $x44 (= (+ (- (* (- 1) b r) ?x47) (* a s) ?x51) 0) $x61 (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x89 0)) (not (= ?x97 0))))))
 (rewrite (= $x101 $x333))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x103 (asserted $x102)))
 (let ((@x265 (mp (mp @x103 (quant-intro (proof-bind ?x340) (= $x102 $x116)) $x116) (rewrite (= $x116 $x116)) $x116)))
 (mp (mp @x265 (quant-intro (proof-bind ?x356) (= $x116 $x219)) $x219) @x452 false)))))))))))))

(:max-memory   3.35
 :memory       3.04
 :mk-bool-var  6
 :num-allocs   965939
 :num-checks   1
 :rlimit-count 1019
 :time         0.01
 :total-time   0.01)
