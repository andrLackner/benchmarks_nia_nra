unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x5050 (* (- 1) s!1)))
 (let ((?x345 (* r00 r00)))
 (let ((?x2213 (* (- 3) ?x345)))
 (let ((?x3405 (+ s00 ?x2213 ?x5050 (* 3 (* r!2 r!2)))))
 (let (($x3094 (<= ?x3405 0)))
 (let (($x3583 (= ?x3405 0)))
 (let ((?x4382 (* 6 r!2)))
 (let ((?x1587 (+ 3 s!1 ?x4382)))
 (let ((?x3054 (+ x!0 ?x5050)))
 (let ((?x5052 (+ 1 r!2)))
 (let ((?x5063 (* x!0 x!0)))
 (let ((?x558 (* (- 72) ?x5063)))
 (let ((?x4384 (* s!1 s!1 s!1)))
 (let ((?x393 (* (- 1) ?x4384)))
 (let ((?x3112 (* s!1 s!1)))
 (let ((?x5049 (* (- 57) ?x3112)))
 (let ((?x3281 (+ (* 2 (* ?x5052 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587 ?x1587 ?x1587)) (* 19 (* s00 s00 x!0)) (* (- 2) (* r00 s00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587 ?x1587)) (* (- 4) (* s00 s00 s!1 r!2)) (* 2 (* s00 r00 x!0 s!1)) (* 12 (* s00 r00 x!0 r!2)) (* 36 (* s00 r00 r00 s!1)) (* (- 19) (* s00 s00 s!1)) (* (- 144) (* r00 x!0 r!2 r!2)) (* (- 4) (* r00 x!0 s!1 s!1)) (* 4 (* r00 s!1 s!1 s!1)) (* (- 36) (* r00 x00 s!1 r!2)) (* (- 36) (* r00 r00 x00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587)) (* (- 26) (* s00 x!0 s!1)) (* 2 (* s!1 s!1 s!1 r!2)) (* (- 54) (* x00 ?x5052 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587)) (* (- 24) (* r00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587 ?x1587)) (* (- 36) (* r00 r00 x!0 x!0)) (* 54 (* r00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x3054 ?x1587)) (* (- 6) (* x!0 x!0 s!1)) (* (- 6) (* s00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x3054 ?x1587)) (* 12 (* s00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587 ?x1587)) (* 24 (* s!1 s!1 r!2 r!2)) (* (- 2) (* s00 x!0 s!1 r!2)) (* (- 6) (* x00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587 ?x1587)) (* 108 (* s!1 r!2 r!2)) (* 36 (* r00 x!0)) (* (- 108) (* x!0 r!2 r!2)) (* 4 (* s00 s00 x!0 r!2)) (* 3 (* ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587 ?x1587 ?x1587)) (* 36 (* r00 ?x5052 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x3054 ?x1587)) (* 4 (* r00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587 ?x1587 ?x1587)) (* (- 54) (* r00 x00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587)) (* (- 2) (* s00 r00 s!1 s!1)) (* 20 (* s00 s!1 s!1)) (* 6 (* s00 x!0 x!0)) (* (- 15) (* s00 s00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587)) (* (- 4) (* s00 s00 ?x5052 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587)) (* (- 90) (* r00 s!1 s!1)) (* (- 72) (* x00 s!1)) (* 18 (* s00 r00 s!1)) (* (- 42) (* s!1 s!1 r!2)) (* 108 (* r00 r00 x!0)) (* 114 (* s00 s!1 r!2)) ?x5049 (* (- 24) (* ?x5052 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587 ?x1587)) (* (- 72) (* r00 r00 s!1 s!1)) (* 2 (* s00 ?x5052 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587 ?x1587)) (* 24 (* s00 ?x5052 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587)) (* (- 12) (* s00 x!0 r!2 r!2)) (* 12 (* s00 s!1 r!2 r!2)) (* 2 (* s00 s!1 s!1 r!2)) (* 57 (* s00 s!1)) (* (- 36) (* r00 r00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587 ?x1587)) (* (- 12) (* s00 r00 s!1 r!2)) (* 7 (* x!0 s!1 s!1)) (* 36 (* r00 x00 x!0 r!2)) (* 36 (* r00 r00 s00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587)) (* (- 90) (* r00 x00 s!1)) (* 6 (* s00 x00 s!1)) (* (- 2) (* x!0 s!1 s!1 r!2)) (* (- 2) (* r00 s00 s00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587)) (* 36 (* s!1 r!2)) (* (- 36) (* x!0 r!2)) (* 2 (* s00 s00 r00 x!0)) (* 36 (* r00 r00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x3054 ?x1587)) (* 90 (* r00 x00 x!0)) (* 6 (* s00 x00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587)) (* (- 90) (* x!0 x!0 r!2)) (* (- 9) (* s00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587)) (* 24 (* r00 s00 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587)) ?x393 (* (- 114) (* s00 x!0 r!2)) (* (- 2) (* s00 s00 r00 s!1)) (* (- 90) (* x00 s!1 r!2)) (* 72 (* s!1 r!2 r!2 r!2)) (* (- 6) (* s00 x00 x!0)) (* 12 (* r00 s!1 s!1 r!2)) (* 180 (* r00 x!0 s!1)) (* (- 90) (* r00 x!0 x!0)) (* (- 36) (* r00 x!0 x!0 r!2)) (* (- 216) (* r00 r00 s!1 r!2)) (* 24 (* r00 x!0 s!1 r!2)) (* (- 36) (* r00 r00 x00 s!1)) (* (- 108) (* r00 r00 s!1)) (* 132 (* x!0 s!1 r!2)) (* (- 6) (* x00 s!1 s!1)) (* 108 (* r00 r00 x!0 s!1)) (* (- 36) (* r00 s!1)) (* 90 (* x00 x!0 r!2)) (* 6 (* x00 x!0 s!1)) (* (- 72) (* x!0 r!2 r!2 r!2)) ?x558 (* (- 24) (* x!0 s!1 r!2 r!2)) (* (- 36) (* r00 x00 ?x5052 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587)) (* (- 36) (* s00 r00 r00 x!0)) (* 6 (* ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x3054 ?x1587 ?x1587)) (* 54 (* ?x5052 ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x3054 ?x1587)) (* 36 (* r00 r00 x00 x!0)) (* (- 18) (* s00 r00 x!0)) (* 72 (* x00 x!0)) (* 144 (* r00 s!1 r!2 r!2)) (* 9 (* ?x5052 ?x5052 ?x3054 ?x3054 ?x3054 ?x1587 ?x1587)) (* 216 (* r00 r00 x!0 r!2)) (* (- 57) (* s00 x!0)) (* 129 (* x!0 s!1)))))
 (let (($x3258 (= ?x3281 0)))
 (let (($x4401 (not $x3258)))
 (let ((?x4746 (* r00 r00 s!1)))
 (let ((?x3132 (* 36 ?x4746)))
 (let ((?x6591 (* (- 9) s!1)))
 (let ((?x1390 (* x00 x00)))
 (let ((?x5618 (* 108 ?x1390)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x1348 (* 16 ?x1228)))
 (let ((?x926 (* r00 r00 r00 x00)))
 (let ((?x2597 (* (- 432) ?x926)))
 (let ((?x849 (* s00 x00)))
 (let ((?x1579 (* (- 108) ?x849)))
 (let ((?x691 (* s00 r00 r00)))
 (let ((?x3117 (* (- 36) ?x691)))
 (let ((?x635 (* s00 s00)))
 (let ((?x5267 (* 51 ?x635)))
 (let ((?x566 (* r00 x00)))
 (let ((?x4402 (* 108 ?x566)))
 (let ((?x137 (* 9 s00)))
 (let ((?x5691 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x4402 ?x5267 ?x3117 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x1579 ?x2597 (* 216 (* s00 r00 r00 r00)) ?x1348 ?x5618 (* (- 108) (* r00 x!0)) ?x6591 (* (- 12) (* s00 s!1 s!1)) (* 108 (* x00 s!1)) (* 108 (* s00 r00 s!1)) (* 15 ?x3112) (* (- 216) (* r00 r00 r00 s!1)) (* 36 (* r00 r00 s!1 s!1)) (* (- 66) (* s00 s!1)) (* (- 4) ?x4384) ?x3132 (* 54 (* r00 s!1)) (* 108 ?x5063) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* (- 216) (* x00 x!0)) (* 108 (* s00 x!0)) (* (- 108) (* x!0 s!1)))))
 (let (($x1602 (= ?x5691 0)))
 (let ((?x921 (* r00 r00 x00)))
 (let ((?x2648 (* 36 ?x921)))
 (let ((?x3597 (* (- 6) ?x849)))
 (let ((?x2643 (* 15 ?x635)))
 (let ((?x2910 (* 54 ?x566)))
 (let ((?x6603 (+ ?x137 (* (- 24) (* s00 r00)) ?x2910 ?x2643 ?x3117 (* 2 (* s00 s00 r00)) ?x3597 ?x2648 (* (- 54) (* r00 x!0)) ?x6591 (* (- 36) (* r00 x!0 r!2)) (* (- 4) (* r00 s!1 s!1)) (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 2) (* s00 s!1 r!2)) (* 36 (* r00 x00 r!2)) (* (- 3) ?x3112) (* (- 12) (* s00 s!1)) (* (- 24) (* s00 r!2)) (* 24 (* s!1 r!2)) (* (- 54) (* x!0 r!2)) ?x3132 (* 24 (* r00 s!1)) (* 54 (* x00 r!2)) (* 6 (* s00 x!0)) (* (- 6) (* x!0 s!1)))))
 (let (($x6623 (= ?x6603 0)))
 (let ((?x3105 (* (- 3) s!1)))
 (let ((?x2089 (* 4 ?x635)))
 (let ((?x4447 (* 18 ?x566)))
 (let ((?x44 (* 3 s00)))
 (let ((?x6520 (+ ?x44 (* (- 9) (* s00 r00)) ?x4447 ?x2089 (* (- 6) ?x691) (* 6 (* s00 r00 r!2)) (* (- 18) (* r00 x!0)) ?x3105 (* (- 2) ?x3112) (* (- 2) (* s00 s!1)) (* (- 9) (* s00 r!2)) (* 9 (* s!1 r!2)) (* (- 18) (* x!0 r!2)) (* (- 6) (* r00 s!1 r!2)) (* 6 ?x4746) (* 9 (* r00 s!1)) (* 18 (* x00 r!2)))))
 (let (($x2995 (= ?x6520 0)))
 (let ((?x3103 (* 3 r!2)))
 (let ((?x3107 (* 6 x!0)))
 (let ((?x513 (* r00 r00 r00)))
 (let ((?x514 (* 12 ?x513)))
 (let ((?x470 (* s00 r00)))
 (let ((?x548 (* (- 6) ?x470)))
 (let ((?x545 (* (- 6) x00)))
 (let ((?x544 (* (- 3) r00)))
 (let ((?x3694 (+ ?x44 ?x544 ?x545 ?x548 ?x514 ?x3107 ?x3105 ?x3103 (* 4 (* s00 r!2)) (* 2 (* s!1 r!2)) (* (- 12) (* r00 r00 r!2)))))
 (let (($x2911 (= ?x3694 0)))
 (let (($x4946 (and $x3583 $x2911 $x2995 $x6623 $x1602 $x4401)))
 (let ((?x4258 (+ 3 ?x4382 s!1)))
 (let ((?x4263 (+ ?x5050 x!0)))
 (let ((?x2835 (+ (* 36 (* r!2 s!1)) (* (- 4) (* s00 s00 ?x5052 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258)) (* (- 2) (* r00 s00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258 ?x4258)) ?x5049 (* (- 36) (* r!2 x!0)) (* (- 108) (* s!1 r00 r00)) (* (- 57) (* x!0 s00)) (* 36 (* x!0 r00)) (* (- 90) (* s!1 s!1 r00)) (* 57 (* s!1 s00)) (* (- 36) (* s!1 r00)) (* (- 72) (* s!1 x00)) (* 18 (* s!1 s00 r00)) ?x393 (* (- 42) (* r!2 s!1 s!1)) (* 129 (* s!1 x!0)) ?x558 (* 114 (* r!2 s!1 s00)) (* 20 (* s!1 s!1 s00)) (* 108 (* x!0 r00 r00)) (* (- 18) (* x!0 s00 r00)) (* (- 72) (* s!1 s!1 r00 r00)) (* 72 (* x!0 x00)) (* 6 (* s!1 s00 x00)) (* (- 6) (* x!0 s00 x00)) (* 12 (* r!2 s!1 s!1 r00)) (* 180 (* s!1 x!0 r00)) (* 24 (* r!2 s!1 x!0 r00)) (* (- 90) (* x!0 x!0 r00)) (* (- 36) (* r!2 x!0 x!0 r00)) (* 7 (* s!1 s!1 x!0)) (* 132 (* r!2 s!1 x!0)) (* (- 90) (* r!2 x!0 x!0)) (* 90 (* r!2 x!0 x00)) (* (- 6) (* s!1 x!0 x!0)) (* (- 114) (* r!2 x!0 s00)) (* (- 26) (* s!1 x!0 s00)) (* (- 36) (* x!0 s00 r00 r00)) (* 36 (* s!1 s00 r00 r00)) (* 108 (* r!2 r!2 s!1)) (* (- 108) (* r!2 r!2 x!0)) (* 4 (* r!2 x!0 s00 s00)) (* 6 (* x!0 x!0 s00)) (* 12 (* r!2 x!0 s00 r00)) (* 2 (* s!1 x!0 s00 r00)) (* (- 2) (* s!1 s!1 s00 r00)) (* (- 90) (* r!2 s!1 x00)) (* (- 2) (* s!1 s00 s00 r00)) (* 2 (* x!0 s00 s00 r00)) (* 19 (* x!0 s00 s00)) (* (- 19) (* s!1 s00 s00)) (* (- 24) (* ?x5052 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258 ?x4258)) (* (- 54) (* r00 x00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258)) (* (- 36) (* r00 r00 x00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258)) (* 54 (* ?x5052 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4263 ?x4258)) (* (- 90) (* s!1 r00 x00)) (* 90 (* x!0 r00 x00)) (* (- 36) (* s!1 r00 r00 x00)) (* 36 (* x!0 r00 r00 x00)) (* 36 (* r00 ?x5052 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4263 ?x4258)) (* 4 (* r00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258 ?x4258 ?x4258)) (* (- 4) (* r!2 s!1 s00 s00)) (* 2 (* ?x5052 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258 ?x4258 ?x4258)) (* 4 (* s!1 s!1 s!1 r00)) (* 144 (* r!2 r!2 s!1 r00)) (* (- 144) (* r!2 r!2 x!0 r00)) (* (- 4) (* s!1 s!1 x!0 r00)) (* 24 (* s00 ?x5052 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258)) (* 2 (* s00 ?x5052 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258 ?x4258)) (* (- 9) (* s00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258)) (* (- 2) (* r00 s00 s00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258)) (* (- 24) (* r00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258 ?x4258)) (* (- 36) (* r00 r00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258 ?x4258)) (* 3 (* ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258 ?x4258 ?x4258)) (* (- 12) (* r!2 s!1 s00 r00)) (* (- 36) (* r00 x00 ?x5052 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258)) (* 9 (* ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258 ?x4258)) (* (- 36) (* r!2 s!1 r00 x00)) (* 6 (* ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4263 ?x4258 ?x4258)) (* 36 (* r!2 x!0 r00 x00)) (* (- 6) (* x00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258 ?x4258)) (* 216 (* r!2 x!0 r00 r00)) (* (- 216) (* r!2 s!1 r00 r00)) (* 36 (* r00 r00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4263 ?x4258)) (* 6 (* s00 x00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258)) (* (- 6) (* s00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4263 ?x4258)) (* 24 (* r00 s00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258)) (* 36 (* r00 r00 s00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258)) (* 12 (* s00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258 ?x4258)) (* 108 (* s!1 x!0 r00 r00)) (* (- 36) (* x!0 x!0 r00 r00)) (* 54 (* r00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4263 ?x4258)) (* (- 54) (* x00 ?x5052 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258)) (* (- 15) (* s00 s00 ?x5052 ?x5052 ?x4263 ?x4263 ?x4263 ?x4258)) (* 12 (* r!2 r!2 s!1 s00)) (* 2 (* r!2 s!1 s!1 s00)) (* (- 12) (* r!2 r!2 x!0 s00)) (* (- 2) (* r!2 s!1 x!0 s00)) (* (- 2) (* r!2 s!1 s!1 x!0)) (* (- 6) (* s!1 s!1 x00)) (* 6 (* s!1 x!0 x00)) (* 72 (* r!2 r!2 r!2 s!1)) (* 24 (* r!2 r!2 s!1 s!1)) (* 2 (* r!2 s!1 s!1 s!1)) (* (- 24) (* r!2 r!2 s!1 x!0)) (* (- 72) (* r!2 r!2 r!2 x!0)))))
 (let ((?x1420 (* (- 108) ?x1390)))
 (let ((?x1419 (* (- 16) ?x1228)))
 (let ((?x1100 (* s00 r00 r00 r00)))
 (let ((?x1415 (* (- 216) ?x1100)))
 (let ((?x927 (* 432 ?x926)))
 (let ((?x1173 (* 108 ?x849)))
 (let ((?x775 (* s00 s00 r00 r00)))
 (let ((?x776 (* 36 ?x775)))
 (let ((?x712 (* s00 s00 r00)))
 (let ((?x1056 (* 108 ?x712)))
 (let ((?x1044 (* 36 ?x691)))
 (let ((?x1409 (* (- 51) ?x635)))
 (let ((?x6297 (* s!1 r00 r00)))
 (let ((?x4083 (* (- 36) ?x6297)))
 (let ((?x1406 (* (- 108) ?x566)))
 (let ((?x557 (* s00 r00 x00)))
 (let ((?x1405 (* (- 216) ?x557)))
 (let ((?x564 (* 54 ?x470)))
 (let ((?x1031 (* (- 9) s00)))
 (let ((?x4320 (* 9 s!1)))
 (let ((?x5054 (+ ?x4320 ?x1031 ?x564 ?x1405 ?x1406 (* (- 15) ?x3112) ?x4083 ?x1409 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1044 ?x1056 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x776 (* (- 108) (* s!1 s00 r00)) (* 4 ?x4384) ?x1173 (* 108 (* s!1 x!0)) (* (- 108) ?x5063) ?x927 (* 12 (* s!1 s!1 s00)) ?x1415 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1419 (* 216 (* x!0 x00)) ?x1420)))
 (let ((?x934 (* (- 36) ?x921)))
 (let ((?x850 (* 6 ?x849)))
 (let ((?x740 (* (- 2) ?x712)))
 (let ((?x960 (* (- 15) ?x635)))
 (let ((?x595 (* (- 54) ?x566)))
 (let ((?x608 (* 24 ?x470)))
 (let ((?x2669 (+ ?x4320 ?x1031 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x608 ?x595 (* 3 ?x3112) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x4083 ?x960 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1044 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x740 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x850 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x934 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x692 (* 6 ?x691)))
 (let ((?x648 (* (- 4) ?x635)))
 (let ((?x580 (* (- 18) ?x566)))
 (let ((?x585 (* 9 ?x470)))
 (let ((?x422 (* (- 3) s00)))
 (let ((?x4570 (+ (* 3 s!1) ?x422 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x585 ?x580 (* 2 ?x3112) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x6297) ?x648 (* 18 (* x!0 r00)) ?x692 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x4588 (+ ?x3103 ?x3105 ?x3107 ?x44 ?x544 ?x545 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x548 ?x514)))
 (let (($x3102 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x345)) 0)))
 (let (($x3493 (and $x3102 (= ?x4588 0) (= ?x4570 0) (= ?x2669 0) (= ?x5054 0) (not (= ?x2835 0)))))
 (let (($x1342 (exists ((r Int) (s Int) (x Int) )(! (let ((?x6574 (* (- 72) (* r r r x))))
 (let ((?x6594 (* (- 24) (* r r s x))))
 (let ((?x6547 (* 2 (* r s s s))))
 (let ((?x6593 (* 24 (* r r s s))))
 (let ((?x6531 (* 72 (* r r r s))))
 (let ((?x6443 (* 6 (* s x x00))))
 (let ((?x6581 (* (- 2) (* r s s x))))
 (let ((?x6107 (* (- 2) (* r s x s00))))
 (let ((?x6095 (* (- 12) (* r r x s00))))
 (let ((?x6079 (* 2 (* r s s s00))))
 (let ((?x6068 (* 12 (* r r s s00))))
 (let ((?x217 (* 6 r)))
 (let ((?x1508 (+ 3 ?x217 s)))
 (let ((?x324 (* (- 1) s)))
 (let ((?x1430 (+ ?x324 x)))
 (let ((?x1505 (+ 1 r)))
 (let ((?x5304 (* (- 36) (* x x r00 r00))))
 (let ((?x3975 (* (- 4) (* s s x r00))))
 (let ((?x3945 (* (- 144) (* r r x r00))))
 (let ((?x3749 (* 144 (* r r s r00))))
 (let ((?x3700 (* 4 (* s s s r00))))
 (let ((?x2156 (* 36 (* s s00 r00 r00))))
 (let ((?x2144 (* (- 36) (* x s00 r00 r00))))
 (let ((?x6238 (* (- 114) (* r x s00))))
 (let ((?x1955 (* (- 6) (* s x x))))
 (let ((?x6030 (* (- 90) (* r x x))))
 (let ((?x6618 (* 132 (* r s x))))
 (let ((?x6616 (* 7 (* s s x))))
 (let ((?x1636 (* (- 36) (* r x x r00))))
 (let ((?x2274 (* (- 90) (* x x r00))))
 (let ((?x4005 (* 24 (* r s x r00))))
 (let ((?x4002 (* 12 (* r s s r00))))
 (let ((?x1493 (* (- 6) (* x s00 x00))))
 (let ((?x1484 (* 6 (* s s00 x00))))
 (let ((?x1364 (* x x00)))
 (let ((?x6270 (* 72 ?x1364)))
 (let ((?x973 (* r s s00)))
 (let ((?x6234 (* 114 ?x973)))
 (let ((?x898 (* x x)))
 (let ((?x6027 (* (- 72) ?x898)))
 (let ((?x857 (* s x)))
 (let ((?x6614 (* 129 ?x857)))
 (let ((?x847 (* s s s)))
 (let ((?x6611 (* (- 1) ?x847)))
 (let ((?x623 (+ (* 36 (* r s)) (* (- 4) (* s00 s00 ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 2) (* r00 s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* (- 57) (* s s)) (* (- 36) (* r x)) (* (- 108) (* s r00 r00)) (* (- 57) (* x s00)) (* 36 (* x r00)) (* (- 90) (* s s r00)) (* 57 (* s s00)) (* (- 36) (* s r00)) (* (- 72) (* s x00)) (* 18 (* s s00 r00)) ?x6611 (* (- 42) (* r s s)) ?x6614 ?x6027 ?x6234 (* 20 (* s s s00)) (* 108 (* x r00 r00)) (* (- 18) (* x s00 r00)) (* (- 72) (* s s r00 r00)) ?x6270 ?x1484 ?x1493 ?x4002 (* 180 (* s x r00)) ?x4005 ?x2274 ?x1636 ?x6616 ?x6618 ?x6030 (* 90 (* r x x00)) ?x1955 ?x6238 (* (- 26) (* s x s00)) ?x2144 ?x2156 (* 108 (* r r s)) (* (- 108) (* r r x)) (* 4 (* r x s00 s00)) (* 6 (* x x s00)) (* 12 (* r x s00 r00)) (* 2 (* s x s00 r00)) (* (- 2) (* s s s00 r00)) (* (- 90) (* r s x00)) (* (- 2) (* s s00 s00 r00)) (* 2 (* x s00 s00 r00)) (* 19 (* x s00 s00)) (* (- 19) (* s s00 s00)) (* (- 24) (* ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* (- 54) (* r00 x00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 36) (* r00 r00 x00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* 54 (* ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 90) (* s r00 x00)) (* 90 (* x r00 x00)) (* (- 36) (* s r00 r00 x00)) (* 36 (* x r00 r00 x00)) (* 36 (* r00 ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1430 ?x1508)) (* 4 (* r00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508 ?x1508)) (* (- 4) (* r s s00 s00)) (* 2 (* ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508 ?x1508)) ?x3700 ?x3749 ?x3945 ?x3975 (* 24 (* s00 ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* 2 (* s00 ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* (- 9) (* s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 2) (* r00 s00 s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 24) (* r00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* 3 (* ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508 ?x1508)) (* (- 12) (* r s s00 r00)) (* (- 36) (* r00 x00 ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* 9 (* ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* (- 36) (* r s r00 x00)) (* 6 (* ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* 36 (* r x r00 x00)) (* (- 6) (* x00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* 216 (* r x r00 r00)) (* (- 216) (* r s r00 r00)) (* 36 (* r00 r00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1430 ?x1508)) (* 6 (* s00 x00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 6) (* s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1430 ?x1508)) (* 24 (* r00 s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* 36 (* r00 r00 s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* 12 (* s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* 108 (* s x r00 r00)) ?x5304 (* 54 (* r00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 54) (* x00 ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 15) (* s00 s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) ?x6068 ?x6079 ?x6095 ?x6107 ?x6581 (* (- 6) (* s s x00)) ?x6443 ?x6531 ?x6593 ?x6547 ?x6594 ?x6574)))
 (let ((?x1390 (* x00 x00)))
 (let ((?x1420 (* (- 108) ?x1390)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x1419 (* (- 16) ?x1228)))
 (let ((?x1224 (* s s r00 r00)))
 (let ((?x1417 (* (- 36) ?x1224)))
 (let ((?x1100 (* s00 r00 r00 r00)))
 (let ((?x1415 (* (- 216) ?x1100)))
 (let ((?x926 (* r00 r00 r00 x00)))
 (let ((?x927 (* 432 ?x926)))
 (let ((?x849 (* s00 x00)))
 (let ((?x1173 (* 108 ?x849)))
 (let ((?x775 (* s00 s00 r00 r00)))
 (let ((?x776 (* 36 ?x775)))
 (let ((?x732 (* s s00)))
 (let ((?x1136 (* 66 ?x732)))
 (let ((?x712 (* s00 s00 r00)))
 (let ((?x1056 (* 108 ?x712)))
 (let ((?x691 (* s00 r00 r00)))
 (let ((?x1044 (* 36 ?x691)))
 (let ((?x635 (* s00 s00)))
 (let ((?x1409 (* (- 51) ?x635)))
 (let ((?x609 (* s r00 r00)))
 (let ((?x908 (* (- 36) ?x609)))
 (let ((?x566 (* r00 x00)))
 (let ((?x1406 (* (- 108) ?x566)))
 (let ((?x557 (* s00 r00 x00)))
 (let ((?x1405 (* (- 216) ?x557)))
 (let ((?x470 (* s00 r00)))
 (let ((?x564 (* 54 ?x470)))
 (let ((?x1031 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1421 (+ ?x143 ?x1031 ?x564 ?x1405 ?x1406 (* (- 15) (* s s)) ?x908 ?x1409 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1044 ?x1056 ?x1136 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x776 (* (- 108) (* s s00 r00)) (* 4 ?x847) ?x1173 (* 108 ?x857) (* (- 108) ?x898) ?x927 (* 12 (* s s s00)) ?x1415 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) ?x1417 ?x1419 (* 216 ?x1364) ?x1420)))
 (let (($x1422 (= ?x1421 0)))
 (let ((?x921 (* r00 r00 x00)))
 (let ((?x934 (* (- 36) ?x921)))
 (let ((?x850 (* 6 ?x849)))
 (let ((?x740 (* (- 2) ?x712)))
 (let ((?x960 (* (- 15) ?x635)))
 (let ((?x589 (* s s)))
 (let ((?x613 (* 3 ?x589)))
 (let ((?x595 (* (- 54) ?x566)))
 (let ((?x608 (* 24 ?x470)))
 (let ((?x1123 (+ ?x143 ?x1031 (* (- 24) (* r s)) (* 24 (* r s00)) ?x608 ?x595 ?x613 (* 54 (* r x)) (* 36 (* r x r00)) ?x908 ?x960 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1044 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x740 (* 12 ?x732) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x850 (* 2 (* r s s)) (* 6 ?x857) (* (- 4) (* r s00 s00)) ?x934 (* 2 ?x973) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1128 (= ?x1123 0)))
 (let ((?x692 (* 6 ?x691)))
 (let ((?x648 (* (- 4) ?x635)))
 (let ((?x590 (* 2 ?x589)))
 (let ((?x580 (* (- 18) ?x566)))
 (let ((?x585 (* 9 ?x470)))
 (let ((?x422 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x789 (+ ?x47 ?x422 (* (- 9) (* r s)) (* 9 (* r s00)) ?x585 ?x580 ?x590 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x609) ?x648 (* 18 (* x r00)) ?x692 (* (- 18) (* r x00)) (* 2 ?x732) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x796 (= ?x789 0)))
 (let ((?x513 (* r00 r00 r00)))
 (let ((?x514 (* 12 ?x513)))
 (let ((?x548 (* (- 6) ?x470)))
 (let ((?x545 (* (- 6) x00)))
 (let ((?x544 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x543 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x549 (+ ?x43 ?x543 ?x56 ?x44 ?x544 ?x545 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x548 ?x514)))
 (let (($x550 (= ?x549 0)))
 (let ((?x345 (* r00 r00)))
 (let ((?x346 (* 3 ?x345)))
 (let ((?x375 (* (- 1) s00)))
 (let (($x378 (= (+ s ?x375 (* (- 3) (* r r)) ?x346) 0)))
 (and $x378 $x550 $x796 $x1128 $x1422 (not (= ?x623 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1501 (exists ((r Int) (s Int) (x Int) )(! (let ((?x217 (* 6 r)))
 (let ((?x6241 (+ 3 s ?x217)))
 (let ((?x324 (* (- 1) s)))
 (let ((?x2246 (+ x ?x324)))
 (let ((?x1505 (+ 1 r)))
 (let ((?x4529 (+ (* 6 (* s00 ?x2246 ?x2246)) (* (- 6) (* s00 x00 ?x2246)) (* 2 (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* 2 (* r00 s00 ?x2246 ?x6241)) (* (- 36) (* r00 ?x1505 ?x2246 ?x2246)) (* (- 4) (* s00 s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 2) (* r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 36) (* r00 r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 24 (* r00 ?x2246 ?x6241)) (* 54 (* x00 ?x1505 ?x2246)) (* (- 6) (* ?x2246 ?x2246 ?x6241)) (* 9 (* s00 ?x2246)) (* (- 12) (* s00 ?x2246 ?x6241)) (* (- 36) (* r00 r00 s00 ?x2246)) (* 2 (* r00 s00 s00 ?x2246)) (* (- 54) (* r00 ?x2246 ?x2246)) (* (- 3) (* ?x2246 ?x6241 ?x6241)) (* (- 24) (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 54) (* r00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 15 (* s00 s00 ?x2246)) (* (- 36) (* r00 r00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* r00 x00 ?x2246)) (* 36 (* r00 r00 x00 ?x2246)) (* 36 (* r00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 4 (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* 4 (* s00 s00 ?x1505 ?x2246)) (* (- 54) (* x00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 4) (* r00 ?x2246 ?x6241 ?x6241)) (* 6 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 9 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 2 (* s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 36) (* r00 x00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 6) (* x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 2) (* r00 s00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 x00 ?x1505 ?x2246)) (* 24 (* s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 9) (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 r00 ?x2246 ?x6241)) (* 24 (* ?x1505 ?x2246 ?x6241)) (* (- 36) (* r00 r00 ?x2246 ?x2246)) (* 6 (* s00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 6) (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 24) (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 24) (* r00 s00 ?x2246)) (* (- 9) (* ?x2246 ?x6241)) (* 24 (* r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 3 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* (- 24) (* s00 ?x1505 ?x2246)) (* 36 (* r00 r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 54) (* ?x1505 ?x2246 ?x2246)) (* 12 (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 2) (* s00 ?x1505 ?x2246 ?x6241)) (* (- 15) (* s00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 6 (* x00 ?x2246 ?x6241)) (* (- 2) (* ?x1505 ?x2246 ?x6241 ?x6241)))))
 (let (($x2220 (not (= ?x4529 0))))
 (let ((?x1390 (* x00 x00)))
 (let ((?x5618 (* 108 ?x1390)))
 (let ((?x6301 (* (- 9) s)))
 (let ((?x1381 (* r00 r00 s00)))
 (let ((?x6284 (* (- 36) ?x1381)))
 (let ((?x137 (* 9 s00)))
 (let ((?x635 (* s00 s00)))
 (let ((?x5267 (* 51 ?x635)))
 (let ((?x4232 (* r00 r00 s)))
 (let ((?x2645 (* 36 ?x4232)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x1348 (* 16 ?x1228)))
 (let ((?x849 (* s00 x00)))
 (let ((?x1579 (* (- 108) ?x849)))
 (let ((?x926 (* r00 r00 r00 x00)))
 (let ((?x2597 (* (- 432) ?x926)))
 (let ((?x566 (* r00 x00)))
 (let ((?x4402 (* 108 ?x566)))
 (let ((?x5622 (+ (* 216 (* r00 s00 x00)) ?x4402 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2597 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1579 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1348 (* (- 108) (* x s)) ?x2645 ?x5267 (* (- 108) (* r00 x)) ?x137 ?x6284 ?x6301 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5618)))
 (let (($x5515 (= ?x5622 0)))
 (let ((?x2643 (* 15 ?x635)))
 (let ((?x921 (* r00 r00 x00)))
 (let ((?x2648 (* 36 ?x921)))
 (let ((?x3597 (* (- 6) ?x849)))
 (let ((?x2910 (* 54 ?x566)))
 (let ((?x3037 (+ (* 24 (* s r)) ?x2910 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3597 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2645 ?x2648 ?x2643 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6284 (* 54 (* x00 r)) ?x6301 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x543 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2089 (* 4 ?x635)))
 (let ((?x4447 (* 18 ?x566)))
 (let ((?x3390 (+ (* 9 (* s r)) ?x4447 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x4232) ?x2089 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1381) (* 18 (* x00 r)) ?x543 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x513 (* r00 r00 r00)))
 (let ((?x514 (* 12 ?x513)))
 (let ((?x545 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x544 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x6248 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x543 ?x544 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x545 ?x514)))
 (let (($x2237 (= (+ s00 ?x324 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2237 (= ?x6248 0) (= ?x3390 0) (= ?x3037 0) $x5515 $x2220))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1324 (lambda ((r Int) (s Int) (x Int) )(let ((?x6574 (* (- 72) (* r r r x))))
 (let ((?x6594 (* (- 24) (* r r s x))))
 (let ((?x6547 (* 2 (* r s s s))))
 (let ((?x6593 (* 24 (* r r s s))))
 (let ((?x6531 (* 72 (* r r r s))))
 (let ((?x6443 (* 6 (* s x x00))))
 (let ((?x6581 (* (- 2) (* r s s x))))
 (let ((?x6107 (* (- 2) (* r s x s00))))
 (let ((?x6095 (* (- 12) (* r r x s00))))
 (let ((?x6079 (* 2 (* r s s s00))))
 (let ((?x6068 (* 12 (* r r s s00))))
 (let ((?x217 (* 6 r)))
 (let ((?x1508 (+ 3 ?x217 s)))
 (let ((?x324 (* (- 1) s)))
 (let ((?x1430 (+ ?x324 x)))
 (let ((?x1505 (+ 1 r)))
 (let ((?x5304 (* (- 36) (* x x r00 r00))))
 (let ((?x3975 (* (- 4) (* s s x r00))))
 (let ((?x3945 (* (- 144) (* r r x r00))))
 (let ((?x3749 (* 144 (* r r s r00))))
 (let ((?x3700 (* 4 (* s s s r00))))
 (let ((?x2156 (* 36 (* s s00 r00 r00))))
 (let ((?x2144 (* (- 36) (* x s00 r00 r00))))
 (let ((?x6238 (* (- 114) (* r x s00))))
 (let ((?x1955 (* (- 6) (* s x x))))
 (let ((?x6030 (* (- 90) (* r x x))))
 (let ((?x6618 (* 132 (* r s x))))
 (let ((?x6616 (* 7 (* s s x))))
 (let ((?x1636 (* (- 36) (* r x x r00))))
 (let ((?x2274 (* (- 90) (* x x r00))))
 (let ((?x4005 (* 24 (* r s x r00))))
 (let ((?x4002 (* 12 (* r s s r00))))
 (let ((?x1493 (* (- 6) (* x s00 x00))))
 (let ((?x1484 (* 6 (* s s00 x00))))
 (let ((?x1364 (* x x00)))
 (let ((?x6270 (* 72 ?x1364)))
 (let ((?x973 (* r s s00)))
 (let ((?x6234 (* 114 ?x973)))
 (let ((?x898 (* x x)))
 (let ((?x6027 (* (- 72) ?x898)))
 (let ((?x857 (* s x)))
 (let ((?x6614 (* 129 ?x857)))
 (let ((?x847 (* s s s)))
 (let ((?x6611 (* (- 1) ?x847)))
 (let ((?x623 (+ (* 36 (* r s)) (* (- 4) (* s00 s00 ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 2) (* r00 s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* (- 57) (* s s)) (* (- 36) (* r x)) (* (- 108) (* s r00 r00)) (* (- 57) (* x s00)) (* 36 (* x r00)) (* (- 90) (* s s r00)) (* 57 (* s s00)) (* (- 36) (* s r00)) (* (- 72) (* s x00)) (* 18 (* s s00 r00)) ?x6611 (* (- 42) (* r s s)) ?x6614 ?x6027 ?x6234 (* 20 (* s s s00)) (* 108 (* x r00 r00)) (* (- 18) (* x s00 r00)) (* (- 72) (* s s r00 r00)) ?x6270 ?x1484 ?x1493 ?x4002 (* 180 (* s x r00)) ?x4005 ?x2274 ?x1636 ?x6616 ?x6618 ?x6030 (* 90 (* r x x00)) ?x1955 ?x6238 (* (- 26) (* s x s00)) ?x2144 ?x2156 (* 108 (* r r s)) (* (- 108) (* r r x)) (* 4 (* r x s00 s00)) (* 6 (* x x s00)) (* 12 (* r x s00 r00)) (* 2 (* s x s00 r00)) (* (- 2) (* s s s00 r00)) (* (- 90) (* r s x00)) (* (- 2) (* s s00 s00 r00)) (* 2 (* x s00 s00 r00)) (* 19 (* x s00 s00)) (* (- 19) (* s s00 s00)) (* (- 24) (* ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* (- 54) (* r00 x00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 36) (* r00 r00 x00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* 54 (* ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 90) (* s r00 x00)) (* 90 (* x r00 x00)) (* (- 36) (* s r00 r00 x00)) (* 36 (* x r00 r00 x00)) (* 36 (* r00 ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1430 ?x1508)) (* 4 (* r00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508 ?x1508)) (* (- 4) (* r s s00 s00)) (* 2 (* ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508 ?x1508)) ?x3700 ?x3749 ?x3945 ?x3975 (* 24 (* s00 ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* 2 (* s00 ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* (- 9) (* s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 2) (* r00 s00 s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 24) (* r00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* 3 (* ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508 ?x1508)) (* (- 12) (* r s s00 r00)) (* (- 36) (* r00 x00 ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* 9 (* ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* (- 36) (* r s r00 x00)) (* 6 (* ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* 36 (* r x r00 x00)) (* (- 6) (* x00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* 216 (* r x r00 r00)) (* (- 216) (* r s r00 r00)) (* 36 (* r00 r00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1430 ?x1508)) (* 6 (* s00 x00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 6) (* s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1430 ?x1508)) (* 24 (* r00 s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* 36 (* r00 r00 s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* 12 (* s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508 ?x1508)) (* 108 (* s x r00 r00)) ?x5304 (* 54 (* r00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 54) (* x00 ?x1505 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) (* (- 15) (* s00 s00 ?x1505 ?x1505 ?x1430 ?x1430 ?x1430 ?x1508)) ?x6068 ?x6079 ?x6095 ?x6107 ?x6581 (* (- 6) (* s s x00)) ?x6443 ?x6531 ?x6593 ?x6547 ?x6594 ?x6574)))
 (let ((?x1390 (* x00 x00)))
 (let ((?x1420 (* (- 108) ?x1390)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x1419 (* (- 16) ?x1228)))
 (let ((?x1224 (* s s r00 r00)))
 (let ((?x1417 (* (- 36) ?x1224)))
 (let ((?x1100 (* s00 r00 r00 r00)))
 (let ((?x1415 (* (- 216) ?x1100)))
 (let ((?x926 (* r00 r00 r00 x00)))
 (let ((?x927 (* 432 ?x926)))
 (let ((?x849 (* s00 x00)))
 (let ((?x1173 (* 108 ?x849)))
 (let ((?x775 (* s00 s00 r00 r00)))
 (let ((?x776 (* 36 ?x775)))
 (let ((?x732 (* s s00)))
 (let ((?x1136 (* 66 ?x732)))
 (let ((?x712 (* s00 s00 r00)))
 (let ((?x1056 (* 108 ?x712)))
 (let ((?x691 (* s00 r00 r00)))
 (let ((?x1044 (* 36 ?x691)))
 (let ((?x635 (* s00 s00)))
 (let ((?x1409 (* (- 51) ?x635)))
 (let ((?x609 (* s r00 r00)))
 (let ((?x908 (* (- 36) ?x609)))
 (let ((?x566 (* r00 x00)))
 (let ((?x1406 (* (- 108) ?x566)))
 (let ((?x557 (* s00 r00 x00)))
 (let ((?x1405 (* (- 216) ?x557)))
 (let ((?x470 (* s00 r00)))
 (let ((?x564 (* 54 ?x470)))
 (let ((?x1031 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1421 (+ ?x143 ?x1031 ?x564 ?x1405 ?x1406 (* (- 15) (* s s)) ?x908 ?x1409 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1044 ?x1056 ?x1136 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x776 (* (- 108) (* s s00 r00)) (* 4 ?x847) ?x1173 (* 108 ?x857) (* (- 108) ?x898) ?x927 (* 12 (* s s s00)) ?x1415 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) ?x1417 ?x1419 (* 216 ?x1364) ?x1420)))
 (let (($x1422 (= ?x1421 0)))
 (let ((?x921 (* r00 r00 x00)))
 (let ((?x934 (* (- 36) ?x921)))
 (let ((?x850 (* 6 ?x849)))
 (let ((?x740 (* (- 2) ?x712)))
 (let ((?x960 (* (- 15) ?x635)))
 (let ((?x589 (* s s)))
 (let ((?x613 (* 3 ?x589)))
 (let ((?x595 (* (- 54) ?x566)))
 (let ((?x608 (* 24 ?x470)))
 (let ((?x1123 (+ ?x143 ?x1031 (* (- 24) (* r s)) (* 24 (* r s00)) ?x608 ?x595 ?x613 (* 54 (* r x)) (* 36 (* r x r00)) ?x908 ?x960 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1044 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x740 (* 12 ?x732) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x850 (* 2 (* r s s)) (* 6 ?x857) (* (- 4) (* r s00 s00)) ?x934 (* 2 ?x973) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1128 (= ?x1123 0)))
 (let ((?x692 (* 6 ?x691)))
 (let ((?x648 (* (- 4) ?x635)))
 (let ((?x590 (* 2 ?x589)))
 (let ((?x580 (* (- 18) ?x566)))
 (let ((?x585 (* 9 ?x470)))
 (let ((?x422 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x789 (+ ?x47 ?x422 (* (- 9) (* r s)) (* 9 (* r s00)) ?x585 ?x580 ?x590 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x609) ?x648 (* 18 (* x r00)) ?x692 (* (- 18) (* r x00)) (* 2 ?x732) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x796 (= ?x789 0)))
 (let ((?x513 (* r00 r00 r00)))
 (let ((?x514 (* 12 ?x513)))
 (let ((?x548 (* (- 6) ?x470)))
 (let ((?x545 (* (- 6) x00)))
 (let ((?x544 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x543 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x549 (+ ?x43 ?x543 ?x56 ?x44 ?x544 ?x545 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x548 ?x514)))
 (let (($x550 (= ?x549 0)))
 (let ((?x345 (* r00 r00)))
 (let ((?x346 (* 3 ?x345)))
 (let ((?x375 (* (- 1) s00)))
 (let (($x378 (= (+ s ?x375 (* (- 3) (* r r)) ?x346) 0)))
 (let (($x628 (and $x378 $x550 $x796 $x1128 $x1422 (not (= ?x623 0)))))
 (let ((?x4524 (* (- 2) (* ?x1505 (+ x ?x324) (+ 3 s ?x217) (+ 3 s ?x217)))))
 (let ((?x6241 (+ 3 s ?x217)))
 (let ((?x2246 (+ x ?x324)))
 (let ((?x4529 (+ (* 6 (* s00 ?x2246 ?x2246)) (* (- 6) (* s00 x00 ?x2246)) (* 2 (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* 2 (* r00 s00 ?x2246 ?x6241)) (* (- 36) (* r00 ?x1505 ?x2246 ?x2246)) (* (- 4) (* s00 s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 2) (* r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 36) (* r00 r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 24 (* r00 ?x2246 ?x6241)) (* 54 (* x00 ?x1505 ?x2246)) (* (- 6) (* ?x2246 ?x2246 ?x6241)) (* 9 (* s00 ?x2246)) (* (- 12) (* s00 ?x2246 ?x6241)) (* (- 36) (* r00 r00 s00 ?x2246)) (* 2 (* r00 s00 s00 ?x2246)) (* (- 54) (* r00 ?x2246 ?x2246)) (* (- 3) (* ?x2246 ?x6241 ?x6241)) (* (- 24) (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 54) (* r00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 15 (* s00 s00 ?x2246)) (* (- 36) (* r00 r00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* r00 x00 ?x2246)) (* 36 (* r00 r00 x00 ?x2246)) (* 36 (* r00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 4 (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* 4 (* s00 s00 ?x1505 ?x2246)) (* (- 54) (* x00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 4) (* r00 ?x2246 ?x6241 ?x6241)) (* 6 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 9 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 2 (* s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 36) (* r00 x00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 6) (* x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 2) (* r00 s00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 x00 ?x1505 ?x2246)) (* 24 (* s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 9) (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 r00 ?x2246 ?x6241)) (* 24 (* ?x1505 ?x2246 ?x6241)) (* (- 36) (* r00 r00 ?x2246 ?x2246)) (* 6 (* s00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 6) (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 24) (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 24) (* r00 s00 ?x2246)) (* (- 9) (* ?x2246 ?x6241)) (* 24 (* r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 3 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* (- 24) (* s00 ?x1505 ?x2246)) (* 36 (* r00 r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 54) (* ?x1505 ?x2246 ?x2246)) (* 12 (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 2) (* s00 ?x1505 ?x2246 ?x6241)) (* (- 15) (* s00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 6 (* x00 ?x2246 ?x6241)) ?x4524)))
 (let (($x2220 (not (= ?x4529 0))))
 (let ((?x5618 (* 108 ?x1390)))
 (let ((?x6301 (* (- 9) s)))
 (let ((?x1381 (* r00 r00 s00)))
 (let ((?x6284 (* (- 36) ?x1381)))
 (let ((?x137 (* 9 s00)))
 (let ((?x5267 (* 51 ?x635)))
 (let ((?x4232 (* r00 r00 s)))
 (let ((?x2645 (* 36 ?x4232)))
 (let ((?x1348 (* 16 ?x1228)))
 (let ((?x1579 (* (- 108) ?x849)))
 (let ((?x2597 (* (- 432) ?x926)))
 (let ((?x4402 (* 108 ?x566)))
 (let ((?x5622 (+ (* 216 (* r00 s00 x00)) ?x4402 (* (- 54) (* r00 s00)) (* 15 ?x589) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) ?x847) (* 108 ?x898) ?x2597 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1579 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1348 (* (- 108) (* x s)) ?x2645 ?x5267 (* (- 108) (* r00 x)) ?x137 ?x6284 ?x6301 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5618)))
 (let (($x5515 (= ?x5622 0)))
 (let ((?x2643 (* 15 ?x635)))
 (let ((?x2648 (* 36 ?x921)))
 (let ((?x3597 (* (- 6) ?x849)))
 (let ((?x2910 (* 54 ?x566)))
 (let ((?x3037 (+ (* 24 (* s r)) ?x2910 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x589) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3597 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2645 ?x2648 ?x2643 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6284 (* 54 (* x00 r)) ?x6301 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x2089 (* 4 ?x635)))
 (let ((?x4447 (* 18 ?x566)))
 (let ((?x3390 (+ (* 9 (* s r)) ?x4447 (* (- 9) (* r00 s00)) (* (- 2) ?x589) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x4232) ?x2089 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1381) (* 18 (* x00 r)) ?x543 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x6248 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x543 ?x544 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x545 ?x514)))
 (let (($x2237 (= (+ s00 ?x324 (* 3 (* r r)) (* (- 3) ?x345)) 0)))
 (let (($x4490 (and $x2237 (= ?x6248 0) (= ?x3390 0) (= ?x3037 0) $x5515 $x2220)))
 (rewrite (= $x4490 $x628))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2221 (exists ((r Int) (s Int) (x Int) )(! (let ((?x217 (* 6 r)))
 (let ((?x6241 (+ 3 s ?x217)))
 (let ((?x324 (* (- 1) s)))
 (let ((?x2246 (+ x ?x324)))
 (let ((?x1505 (+ 1 r)))
 (let ((?x4529 (+ (* 6 (* s00 ?x2246 ?x2246)) (* (- 6) (* s00 x00 ?x2246)) (* 2 (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* 2 (* r00 s00 ?x2246 ?x6241)) (* (- 36) (* r00 ?x1505 ?x2246 ?x2246)) (* (- 4) (* s00 s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 2) (* r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 36) (* r00 r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 24 (* r00 ?x2246 ?x6241)) (* 54 (* x00 ?x1505 ?x2246)) (* (- 6) (* ?x2246 ?x2246 ?x6241)) (* 9 (* s00 ?x2246)) (* (- 12) (* s00 ?x2246 ?x6241)) (* (- 36) (* r00 r00 s00 ?x2246)) (* 2 (* r00 s00 s00 ?x2246)) (* (- 54) (* r00 ?x2246 ?x2246)) (* (- 3) (* ?x2246 ?x6241 ?x6241)) (* (- 24) (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 54) (* r00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 15 (* s00 s00 ?x2246)) (* (- 36) (* r00 r00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* r00 x00 ?x2246)) (* 36 (* r00 r00 x00 ?x2246)) (* 36 (* r00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 4 (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* 4 (* s00 s00 ?x1505 ?x2246)) (* (- 54) (* x00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 4) (* r00 ?x2246 ?x6241 ?x6241)) (* 6 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 9 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 2 (* s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 36) (* r00 x00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 6) (* x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 2) (* r00 s00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 x00 ?x1505 ?x2246)) (* 24 (* s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 9) (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 r00 ?x2246 ?x6241)) (* 24 (* ?x1505 ?x2246 ?x6241)) (* (- 36) (* r00 r00 ?x2246 ?x2246)) (* 6 (* s00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 6) (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 24) (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 24) (* r00 s00 ?x2246)) (* (- 9) (* ?x2246 ?x6241)) (* 24 (* r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 3 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* (- 24) (* s00 ?x1505 ?x2246)) (* 36 (* r00 r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 54) (* ?x1505 ?x2246 ?x2246)) (* 12 (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 2) (* s00 ?x1505 ?x2246 ?x6241)) (* (- 15) (* s00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 6 (* x00 ?x2246 ?x6241)) (* (- 2) (* ?x1505 ?x2246 ?x6241 ?x6241)))))
 (let (($x2220 (not (= ?x4529 0))))
 (let ((?x1390 (* x00 x00)))
 (let ((?x5618 (* 108 ?x1390)))
 (let ((?x6301 (* (- 9) s)))
 (let ((?x1381 (* r00 r00 s00)))
 (let ((?x6284 (* (- 36) ?x1381)))
 (let ((?x137 (* 9 s00)))
 (let ((?x635 (* s00 s00)))
 (let ((?x5267 (* 51 ?x635)))
 (let ((?x4232 (* r00 r00 s)))
 (let ((?x2645 (* 36 ?x4232)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x1348 (* 16 ?x1228)))
 (let ((?x849 (* s00 x00)))
 (let ((?x1579 (* (- 108) ?x849)))
 (let ((?x926 (* r00 r00 r00 x00)))
 (let ((?x2597 (* (- 432) ?x926)))
 (let ((?x566 (* r00 x00)))
 (let ((?x4402 (* 108 ?x566)))
 (let ((?x5622 (+ (* 216 (* r00 s00 x00)) ?x4402 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2597 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1579 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1348 (* (- 108) (* x s)) ?x2645 ?x5267 (* (- 108) (* r00 x)) ?x137 ?x6284 ?x6301 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5618)))
 (let (($x5515 (= ?x5622 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1031 (* (- 9) s00)))
 (let ((?x960 (* (- 15) ?x635)))
 (let ((?x921 (* r00 r00 x00)))
 (let ((?x934 (* (- 36) ?x921)))
 (let ((?x850 (* 6 ?x849)))
 (let ((?x589 (* s s)))
 (let ((?x613 (* 3 ?x589)))
 (let ((?x595 (* (- 54) ?x566)))
 (let ((?x1652 (+ (* (- 24) (* s r)) ?x595 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x613 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x850 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x4232) ?x934 ?x960 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1031 (* 36 ?x1381) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x422 (* (- 3) s00)))
 (let ((?x648 (* (- 4) ?x635)))
 (let ((?x590 (* 2 ?x589)))
 (let ((?x580 (* (- 18) ?x566)))
 (let ((?x2955 (+ (* (- 9) (* s r)) ?x580 (* 9 (* r00 s00)) ?x590 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x4232) ?x648 (* 18 (* r00 x)) ?x422 (* 6 ?x1381) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x5087 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x422 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2237 (= (+ s00 ?x324 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2237 (= ?x5087 0) (= ?x2955 0) (= ?x1652 0) $x5515 $x2220)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3136 (lambda ((r Int) (s Int) (x Int) )(let ((?x217 (* 6 r)))
 (let ((?x6241 (+ 3 s ?x217)))
 (let ((?x324 (* (- 1) s)))
 (let ((?x2246 (+ x ?x324)))
 (let ((?x1505 (+ 1 r)))
 (let ((?x4529 (+ (* 6 (* s00 ?x2246 ?x2246)) (* (- 6) (* s00 x00 ?x2246)) (* 2 (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* 2 (* r00 s00 ?x2246 ?x6241)) (* (- 36) (* r00 ?x1505 ?x2246 ?x2246)) (* (- 4) (* s00 s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 2) (* r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 36) (* r00 r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 24 (* r00 ?x2246 ?x6241)) (* 54 (* x00 ?x1505 ?x2246)) (* (- 6) (* ?x2246 ?x2246 ?x6241)) (* 9 (* s00 ?x2246)) (* (- 12) (* s00 ?x2246 ?x6241)) (* (- 36) (* r00 r00 s00 ?x2246)) (* 2 (* r00 s00 s00 ?x2246)) (* (- 54) (* r00 ?x2246 ?x2246)) (* (- 3) (* ?x2246 ?x6241 ?x6241)) (* (- 24) (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 54) (* r00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 15 (* s00 s00 ?x2246)) (* (- 36) (* r00 r00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* r00 x00 ?x2246)) (* 36 (* r00 r00 x00 ?x2246)) (* 36 (* r00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 4 (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* 4 (* s00 s00 ?x1505 ?x2246)) (* (- 54) (* x00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 4) (* r00 ?x2246 ?x6241 ?x6241)) (* 6 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 9 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 2 (* s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 36) (* r00 x00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 6) (* x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 2) (* r00 s00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 x00 ?x1505 ?x2246)) (* 24 (* s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 9) (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 r00 ?x2246 ?x6241)) (* 24 (* ?x1505 ?x2246 ?x6241)) (* (- 36) (* r00 r00 ?x2246 ?x2246)) (* 6 (* s00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 6) (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 24) (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 24) (* r00 s00 ?x2246)) (* (- 9) (* ?x2246 ?x6241)) (* 24 (* r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 3 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* (- 24) (* s00 ?x1505 ?x2246)) (* 36 (* r00 r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 54) (* ?x1505 ?x2246 ?x2246)) (* 12 (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 2) (* s00 ?x1505 ?x2246 ?x6241)) (* (- 15) (* s00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 6 (* x00 ?x2246 ?x6241)) (* (- 2) (* ?x1505 ?x2246 ?x6241 ?x6241)))))
 (let (($x2220 (not (= ?x4529 0))))
 (let ((?x1390 (* x00 x00)))
 (let ((?x5618 (* 108 ?x1390)))
 (let ((?x6301 (* (- 9) s)))
 (let ((?x1381 (* r00 r00 s00)))
 (let ((?x6284 (* (- 36) ?x1381)))
 (let ((?x137 (* 9 s00)))
 (let ((?x635 (* s00 s00)))
 (let ((?x5267 (* 51 ?x635)))
 (let ((?x4232 (* r00 r00 s)))
 (let ((?x2645 (* 36 ?x4232)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x1348 (* 16 ?x1228)))
 (let ((?x849 (* s00 x00)))
 (let ((?x1579 (* (- 108) ?x849)))
 (let ((?x926 (* r00 r00 r00 x00)))
 (let ((?x2597 (* (- 432) ?x926)))
 (let ((?x566 (* r00 x00)))
 (let ((?x4402 (* 108 ?x566)))
 (let ((?x5622 (+ (* 216 (* r00 s00 x00)) ?x4402 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2597 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1579 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1348 (* (- 108) (* x s)) ?x2645 ?x5267 (* (- 108) (* r00 x)) ?x137 ?x6284 ?x6301 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5618)))
 (let (($x5515 (= ?x5622 0)))
 (let ((?x2643 (* 15 ?x635)))
 (let ((?x921 (* r00 r00 x00)))
 (let ((?x2648 (* 36 ?x921)))
 (let ((?x3597 (* (- 6) ?x849)))
 (let ((?x2910 (* 54 ?x566)))
 (let ((?x3037 (+ (* 24 (* s r)) ?x2910 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3597 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2645 ?x2648 ?x2643 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6284 (* 54 (* x00 r)) ?x6301 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x543 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2089 (* 4 ?x635)))
 (let ((?x4447 (* 18 ?x566)))
 (let ((?x3390 (+ (* 9 (* s r)) ?x4447 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x4232) ?x2089 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1381) (* 18 (* x00 r)) ?x543 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x513 (* r00 r00 r00)))
 (let ((?x514 (* 12 ?x513)))
 (let ((?x545 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x544 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x6248 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x543 ?x544 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x545 ?x514)))
 (let (($x2237 (= (+ s00 ?x324 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x4490 (and $x2237 (= ?x6248 0) (= ?x3390 0) (= ?x3037 0) $x5515 $x2220)))
 (let ((?x143 (* 9 s)))
 (let ((?x1031 (* (- 9) s00)))
 (let ((?x960 (* (- 15) ?x635)))
 (let ((?x934 (* (- 36) ?x921)))
 (let ((?x850 (* 6 ?x849)))
 (let ((?x589 (* s s)))
 (let ((?x613 (* 3 ?x589)))
 (let ((?x595 (* (- 54) ?x566)))
 (let ((?x1652 (+ (* (- 24) (* s r)) ?x595 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x613 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x850 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x4232) ?x934 ?x960 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1031 (* 36 ?x1381) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x422 (* (- 3) s00)))
 (let ((?x648 (* (- 4) ?x635)))
 (let ((?x590 (* 2 ?x589)))
 (let ((?x580 (* (- 18) ?x566)))
 (let ((?x2955 (+ (* (- 9) (* s r)) ?x580 (* 9 (* r00 s00)) ?x590 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x4232) ?x648 (* 18 (* r00 x)) ?x422 (* 6 ?x1381) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x5087 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x422 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x513))))
 (let (($x1491 (and $x2237 (= ?x5087 0) (= ?x2955 0) (= ?x1652 0) $x5515 $x2220)))
 (rewrite (= $x1491 $x4490)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x321 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (- x s)))
 (let ((?x217 (* 6 r)))
 (let ((?x218 (+ s ?x217 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x221 (+ (- (* 6 s00 ?x211 ?x211) (* 6 s00 ?x211 x00)) (* 2 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x211 ?x211 ?x211) (* 2 r00 ?x218 s00 ?x211))))
 (let ((?x227 (- (- ?x221 (* 36 ?x216 r00 ?x211 ?x211)) (* 4 ?x216 ?x216 ?x216 ?x218 s00 s00 ?x211 ?x211 ?x211))))
 (let ((?x229 (- (- ?x227 (* 2 ?x216 ?x216 r00 ?x218 ?x218 s00 ?x211 ?x211 ?x211)) (* 36 ?x216 ?x216 r00 r00 ?x218 ?x218 ?x211 ?x211 ?x211))))
 (let ((?x234 (- (+ ?x229 (* 24 r00 ?x218 ?x211) (* 54 ?x216 ?x211 x00)) (* 6 ?x218 ?x211 ?x211))))
 (let ((?x240 (- (- (+ ?x234 (* 9 s00 ?x211)) (* 12 ?x218 s00 ?x211)) (* 36 r00 r00 s00 ?x211))))
 (let ((?x247 (- (+ ?x240 (* 2 r00 s00 s00 ?x211)) (* 54 r00 ?x211 ?x211))))
 (let ((?x249 (- (- ?x247 (* 3 ?x218 ?x218 ?x211)) (* 24 ?x216 ?x216 ?x216 ?x218 ?x218 ?x211 ?x211 ?x211))))
 (let ((?x252 (+ (- ?x249 (* 54 ?x216 ?x216 r00 ?x218 ?x211 ?x211 ?x211 x00)) (* 15 s00 s00 ?x211))))
 (let ((?x261 (+ (- ?x252 (* 36 ?x216 ?x216 r00 r00 ?x218 ?x211 ?x211 ?x211 x00)) (* 54 ?x216 ?x216 ?x216 ?x218 ?x211 ?x211 ?x211 ?x211) (* 54 r00 ?x211 x00) (* 36 r00 r00 ?x211 x00) (* 36 ?x216 ?x216 ?x216 r00 ?x218 ?x211 ?x211 ?x211 ?x211) (* 4 ?x216 ?x216 r00 ?x218 ?x218 ?x218 ?x211 ?x211 ?x211) (* 4 ?x216 s00 s00 ?x211))))
 (let ((?x265 (- (- ?x261 (* 54 ?x216 ?x216 ?x216 ?x218 ?x211 ?x211 ?x211 x00)) (* 4 r00 ?x218 ?x218 ?x211))))
 (let ((?x269 (+ ?x265 (* 6 ?x216 ?x216 ?x218 ?x218 ?x211 ?x211 ?x211 ?x211) (* 9 ?x216 ?x216 ?x218 ?x218 ?x211 ?x211 ?x211) (* 2 ?x216 ?x216 ?x216 ?x218 ?x218 s00 ?x211 ?x211 ?x211))))
 (let ((?x274 (- (- ?x269 (* 36 ?x216 ?x216 ?x216 r00 ?x218 ?x211 ?x211 ?x211 x00)) (* 6 ?x216 ?x216 ?x218 ?x218 ?x211 ?x211 ?x211 x00))))
 (let ((?x278 (+ (- ?x274 (* 2 ?x216 ?x216 r00 ?x218 s00 s00 ?x211 ?x211 ?x211)) (* 36 ?x216 r00 ?x211 x00) (* 24 ?x216 ?x216 ?x216 ?x218 s00 ?x211 ?x211 ?x211))))
 (let ((?x284 (+ (- ?x278 (* 9 ?x216 ?x216 ?x218 s00 ?x211 ?x211 ?x211)) (* 36 ?x216 ?x216 r00 r00 ?x218 ?x211 ?x211 ?x211 ?x211) (* 36 r00 r00 ?x218 ?x211) (* 24 ?x216 ?x218 ?x211))))
 (let ((?x288 (+ (- ?x284 (* 36 r00 r00 ?x211 ?x211)) (* 6 ?x216 ?x216 ?x218 s00 ?x211 ?x211 ?x211 x00))))
 (let ((?x294 (- (- ?x288 (* 6 ?x216 ?x216 ?x218 s00 ?x211 ?x211 ?x211 ?x211)) (* 24 ?x216 ?x216 r00 ?x218 ?x218 ?x211 ?x211 ?x211))))
 (let ((?x299 (+ (- (- ?x294 (* 24 r00 s00 ?x211)) (* 9 ?x218 ?x211)) (* 24 ?x216 ?x216 r00 ?x218 s00 ?x211 ?x211 ?x211) (* 3 ?x216 ?x216 ?x218 ?x218 ?x218 ?x211 ?x211 ?x211))))
 (let ((?x303 (+ (- ?x299 (* 24 ?x216 s00 ?x211)) (* 36 ?x216 ?x216 r00 r00 ?x218 s00 ?x211 ?x211 ?x211))))
 (let ((?x307 (+ (- ?x303 (* 54 ?x216 ?x211 ?x211)) (* 12 ?x216 ?x216 ?x218 ?x218 s00 ?x211 ?x211 ?x211))))
 (let ((?x311 (- (- ?x307 (* 2 ?x216 ?x218 s00 ?x211)) (* 15 ?x216 ?x216 ?x218 s00 s00 ?x211 ?x211 ?x211))))
 (let ((?x314 (+ ?x311 (* 54 ?x216 ?x216 r00 ?x218 ?x211 ?x211 ?x211 ?x211) (* 6 ?x218 ?x211 x00))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- ?x314 (* 2 ?x216 ?x218 ?x218 ?x211)) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2658 (lambda ((r Int) (s Int) (x Int) )(let ((?x217 (* 6 r)))
 (let ((?x6241 (+ 3 s ?x217)))
 (let ((?x324 (* (- 1) s)))
 (let ((?x2246 (+ x ?x324)))
 (let ((?x1505 (+ 1 r)))
 (let ((?x4529 (+ (* 6 (* s00 ?x2246 ?x2246)) (* (- 6) (* s00 x00 ?x2246)) (* 2 (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* 2 (* r00 s00 ?x2246 ?x6241)) (* (- 36) (* r00 ?x1505 ?x2246 ?x2246)) (* (- 4) (* s00 s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 2) (* r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 36) (* r00 r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 24 (* r00 ?x2246 ?x6241)) (* 54 (* x00 ?x1505 ?x2246)) (* (- 6) (* ?x2246 ?x2246 ?x6241)) (* 9 (* s00 ?x2246)) (* (- 12) (* s00 ?x2246 ?x6241)) (* (- 36) (* r00 r00 s00 ?x2246)) (* 2 (* r00 s00 s00 ?x2246)) (* (- 54) (* r00 ?x2246 ?x2246)) (* (- 3) (* ?x2246 ?x6241 ?x6241)) (* (- 24) (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 54) (* r00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 15 (* s00 s00 ?x2246)) (* (- 36) (* r00 r00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* r00 x00 ?x2246)) (* 36 (* r00 r00 x00 ?x2246)) (* 36 (* r00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 4 (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* 4 (* s00 s00 ?x1505 ?x2246)) (* (- 54) (* x00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 4) (* r00 ?x2246 ?x6241 ?x6241)) (* 6 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 9 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* 2 (* s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 36) (* r00 x00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 6) (* x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 2) (* r00 s00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 x00 ?x1505 ?x2246)) (* 24 (* s00 ?x1505 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 9) (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 36 (* r00 r00 ?x2246 ?x6241)) (* 24 (* ?x1505 ?x2246 ?x6241)) (* (- 36) (* r00 r00 ?x2246 ?x2246)) (* 6 (* s00 x00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 6) (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 24) (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 24) (* r00 s00 ?x2246)) (* (- 9) (* ?x2246 ?x6241)) (* 24 (* r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 3 (* ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241 ?x6241)) (* (- 24) (* s00 ?x1505 ?x2246)) (* 36 (* r00 r00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* (- 54) (* ?x1505 ?x2246 ?x2246)) (* 12 (* s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241 ?x6241)) (* (- 2) (* s00 ?x1505 ?x2246 ?x6241)) (* (- 15) (* s00 s00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x6241)) (* 54 (* r00 ?x1505 ?x1505 ?x2246 ?x2246 ?x2246 ?x2246 ?x6241)) (* 6 (* x00 ?x2246 ?x6241)) (* (- 2) (* ?x1505 ?x2246 ?x6241 ?x6241)))))
 (let (($x2220 (not (= ?x4529 0))))
 (let ((?x1390 (* x00 x00)))
 (let ((?x5618 (* 108 ?x1390)))
 (let ((?x6301 (* (- 9) s)))
 (let ((?x1381 (* r00 r00 s00)))
 (let ((?x6284 (* (- 36) ?x1381)))
 (let ((?x137 (* 9 s00)))
 (let ((?x635 (* s00 s00)))
 (let ((?x5267 (* 51 ?x635)))
 (let ((?x4232 (* r00 r00 s)))
 (let ((?x2645 (* 36 ?x4232)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x1348 (* 16 ?x1228)))
 (let ((?x849 (* s00 x00)))
 (let ((?x1579 (* (- 108) ?x849)))
 (let ((?x926 (* r00 r00 r00 x00)))
 (let ((?x2597 (* (- 432) ?x926)))
 (let ((?x566 (* r00 x00)))
 (let ((?x4402 (* 108 ?x566)))
 (let ((?x5622 (+ (* 216 (* r00 s00 x00)) ?x4402 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2597 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1579 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1348 (* (- 108) (* x s)) ?x2645 ?x5267 (* (- 108) (* r00 x)) ?x137 ?x6284 ?x6301 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5618)))
 (let (($x5515 (= ?x5622 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1031 (* (- 9) s00)))
 (let ((?x960 (* (- 15) ?x635)))
 (let ((?x921 (* r00 r00 x00)))
 (let ((?x934 (* (- 36) ?x921)))
 (let ((?x850 (* 6 ?x849)))
 (let ((?x589 (* s s)))
 (let ((?x613 (* 3 ?x589)))
 (let ((?x595 (* (- 54) ?x566)))
 (let ((?x1652 (+ (* (- 24) (* s r)) ?x595 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x613 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x850 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x4232) ?x934 ?x960 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1031 (* 36 ?x1381) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x422 (* (- 3) s00)))
 (let ((?x648 (* (- 4) ?x635)))
 (let ((?x590 (* 2 ?x589)))
 (let ((?x580 (* (- 18) ?x566)))
 (let ((?x2955 (+ (* (- 9) (* s r)) ?x580 (* 9 (* r00 s00)) ?x590 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x4232) ?x648 (* 18 (* r00 x)) ?x422 (* 6 ?x1381) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x5087 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x422 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2237 (= (+ s00 ?x324 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1491 (and $x2237 (= ?x5087 0) (= ?x2955 0) (= ?x1652 0) $x5515 $x2220)))
 (let ((?x211 (- x s)))
 (let ((?x218 (+ s ?x217 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x221 (+ (- (* 6 s00 ?x211 ?x211) (* 6 s00 ?x211 x00)) (* 2 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x211 ?x211 ?x211) (* 2 r00 ?x218 s00 ?x211))))
 (let ((?x227 (- (- ?x221 (* 36 ?x216 r00 ?x211 ?x211)) (* 4 ?x216 ?x216 ?x216 ?x218 s00 s00 ?x211 ?x211 ?x211))))
 (let ((?x229 (- (- ?x227 (* 2 ?x216 ?x216 r00 ?x218 ?x218 s00 ?x211 ?x211 ?x211)) (* 36 ?x216 ?x216 r00 r00 ?x218 ?x218 ?x211 ?x211 ?x211))))
 (let ((?x234 (- (+ ?x229 (* 24 r00 ?x218 ?x211) (* 54 ?x216 ?x211 x00)) (* 6 ?x218 ?x211 ?x211))))
 (let ((?x240 (- (- (+ ?x234 (* 9 s00 ?x211)) (* 12 ?x218 s00 ?x211)) (* 36 r00 r00 s00 ?x211))))
 (let ((?x247 (- (+ ?x240 (* 2 r00 s00 s00 ?x211)) (* 54 r00 ?x211 ?x211))))
 (let ((?x249 (- (- ?x247 (* 3 ?x218 ?x218 ?x211)) (* 24 ?x216 ?x216 ?x216 ?x218 ?x218 ?x211 ?x211 ?x211))))
 (let ((?x252 (+ (- ?x249 (* 54 ?x216 ?x216 r00 ?x218 ?x211 ?x211 ?x211 x00)) (* 15 s00 s00 ?x211))))
 (let ((?x261 (+ (- ?x252 (* 36 ?x216 ?x216 r00 r00 ?x218 ?x211 ?x211 ?x211 x00)) (* 54 ?x216 ?x216 ?x216 ?x218 ?x211 ?x211 ?x211 ?x211) (* 54 r00 ?x211 x00) (* 36 r00 r00 ?x211 x00) (* 36 ?x216 ?x216 ?x216 r00 ?x218 ?x211 ?x211 ?x211 ?x211) (* 4 ?x216 ?x216 r00 ?x218 ?x218 ?x218 ?x211 ?x211 ?x211) (* 4 ?x216 s00 s00 ?x211))))
 (let ((?x265 (- (- ?x261 (* 54 ?x216 ?x216 ?x216 ?x218 ?x211 ?x211 ?x211 x00)) (* 4 r00 ?x218 ?x218 ?x211))))
 (let ((?x269 (+ ?x265 (* 6 ?x216 ?x216 ?x218 ?x218 ?x211 ?x211 ?x211 ?x211) (* 9 ?x216 ?x216 ?x218 ?x218 ?x211 ?x211 ?x211) (* 2 ?x216 ?x216 ?x216 ?x218 ?x218 s00 ?x211 ?x211 ?x211))))
 (let ((?x274 (- (- ?x269 (* 36 ?x216 ?x216 ?x216 r00 ?x218 ?x211 ?x211 ?x211 x00)) (* 6 ?x216 ?x216 ?x218 ?x218 ?x211 ?x211 ?x211 x00))))
 (let ((?x278 (+ (- ?x274 (* 2 ?x216 ?x216 r00 ?x218 s00 s00 ?x211 ?x211 ?x211)) (* 36 ?x216 r00 ?x211 x00) (* 24 ?x216 ?x216 ?x216 ?x218 s00 ?x211 ?x211 ?x211))))
 (let ((?x284 (+ (- ?x278 (* 9 ?x216 ?x216 ?x218 s00 ?x211 ?x211 ?x211)) (* 36 ?x216 ?x216 r00 r00 ?x218 ?x211 ?x211 ?x211 ?x211) (* 36 r00 r00 ?x218 ?x211) (* 24 ?x216 ?x218 ?x211))))
 (let ((?x288 (+ (- ?x284 (* 36 r00 r00 ?x211 ?x211)) (* 6 ?x216 ?x216 ?x218 s00 ?x211 ?x211 ?x211 x00))))
 (let ((?x294 (- (- ?x288 (* 6 ?x216 ?x216 ?x218 s00 ?x211 ?x211 ?x211 ?x211)) (* 24 ?x216 ?x216 r00 ?x218 ?x218 ?x211 ?x211 ?x211))))
 (let ((?x299 (+ (- (- ?x294 (* 24 r00 s00 ?x211)) (* 9 ?x218 ?x211)) (* 24 ?x216 ?x216 r00 ?x218 s00 ?x211 ?x211 ?x211) (* 3 ?x216 ?x216 ?x218 ?x218 ?x218 ?x211 ?x211 ?x211))))
 (let ((?x303 (+ (- ?x299 (* 24 ?x216 s00 ?x211)) (* 36 ?x216 ?x216 r00 r00 ?x218 s00 ?x211 ?x211 ?x211))))
 (let ((?x307 (+ (- ?x303 (* 54 ?x216 ?x211 ?x211)) (* 12 ?x216 ?x216 ?x218 ?x218 s00 ?x211 ?x211 ?x211))))
 (let ((?x311 (- (- ?x307 (* 2 ?x216 ?x218 s00 ?x211)) (* 15 ?x216 ?x216 ?x218 s00 s00 ?x211 ?x211 ?x211))))
 (let ((?x314 (+ ?x311 (* 54 ?x216 ?x216 r00 ?x218 ?x211 ?x211 ?x211 ?x211) (* 6 ?x218 ?x211 x00))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x320 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- ?x314 (* 2 ?x216 ?x218 ?x218 ?x211)) 0))))))
 (rewrite (= $x320 $x1491)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x322 (asserted $x321)))
 (let ((@x4439 (mp (mp @x322 (quant-intro (proof-bind ?x2658) (= $x321 $x2221)) $x2221) (rewrite (= $x2221 $x2221)) $x2221)))
 (let ((@x735 (mp (mp @x4439 (quant-intro (proof-bind ?x3136) (= $x2221 $x1501)) $x1501) (quant-intro (proof-bind ?x1324) (= $x1501 $x1342)) $x1342)))
 (let ((@x3056 (mp (mp~ @x735 (sk (~ $x1342 $x3493)) $x3493) (rewrite (= $x3493 $x4946)) $x4946)))
 (let ((@x1359 (and-elim @x3056 $x3583)))
 (let ((@x3587 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3583) $x3094)) @x1359 $x3094)))
 (let (($x6575 (>= ?x3405 0)))
 (let ((@x728 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3583) $x6575)) @x1359 $x6575)))
 (let (($x2713 (<= ?x3694 0)))
 (let ((@x3022 (and-elim @x3056 $x2911)))
 (let ((@x6562 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2911) $x2713)) @x3022 $x2713)))
 (let (($x2741 (>= ?x3694 0)))
 (let ((@x2608 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2911) $x2741)) @x3022 $x2741)))
 (let (($x3074 (<= ?x6520 0)))
 (let ((@x3133 (and-elim @x3056 $x2995)))
 (let ((@x6521 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2995) $x3074)) @x3133 $x3074)))
 (let (($x6479 (>= ?x6520 0)))
 (let ((@x6588 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2995) $x6479)) @x3133 $x6479)))
 (let (($x1641 (<= ?x5691 0)))
 (let ((@x3138 (and-elim @x3056 $x1602)))
 (let ((@x3174 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1602) $x1641)) @x3138 $x1641)))
 (let (($x1551 (>= ?x5691 0)))
 (let ((@x3044 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1602) $x1551)) @x3138 $x1551)))
 (let (($x3129 (<= ?x6603 0)))
 (let ((@x3139 (and-elim @x3056 $x6623)))
 (let ((@x3025 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6623) $x3129)) @x3139 $x3129)))
 (let (($x1454 (>= ?x6603 0)))
 (let ((@x3426 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6623) $x1454)) @x3139 $x1454)))
 (let (($x1556 (not (<= ?x3281 0))))
 (let (($x1644 (>= ?x3281 0)))
 (let ((@x3404 ((_ th-lemma arith) (hypothesis (not $x1644)) @x728 @x3587 @x6588 @x6521 @x6588 @x6521 @x3426 @x3025 @x3426 @x3025 @x728 @x3587 @x6588 @x6521 @x3426 @x3025 @x3044 @x3174 @x728 @x3587 @x6588 @x6521 @x2608 @x6562 @x728 @x3587 false)))
 (let ((@x3177 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3258 $x1556 (not $x1644))) (and-elim @x3056 $x4401) (or $x1556 (not $x1644)))))
 ((_ th-lemma arith) (unit-resolution @x3177 (lemma @x3404 $x1644) $x1556) @x728 @x3587 @x6588 @x6521 @x6588 @x6521 @x3426 @x3025 @x3426 @x3025 @x728 @x3587 @x6588 @x6521 @x3426 @x3025 @x3044 @x3174 @x728 @x3587 @x6588 @x6521 @x2608 @x6562 @x728 @x3587 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        29
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1106
 :arith-nonlinear-bounds    22
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 200
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.85
 :memory                    3.91
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                3342471
 :num-checks                1
 :propagations              12
 :rlimit-count              48192
 :time                      0.04
 :total-time                0.05)
