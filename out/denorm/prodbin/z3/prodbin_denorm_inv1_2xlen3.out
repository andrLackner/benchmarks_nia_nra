unsat
((set-logic NRA)
(declare-fun z!4 () Real)
(declare-fun x!6 () Real)
(declare-fun y!5 () Real)
(proof
(let ((?x81 (* x00 y00)))
 (let ((?x82 (* (- 1.0) ?x81)))
 (let ((?x101 (* (- 1.0) z00)))
 (let ((?x952 (* y!5 x!6)))
 (let ((?x1111 (+ ?x952 z!4 ?x101 ?x82)))
 (let (($x459 (= ?x1111 0.0)))
 (let (($x462 (not $x459)))
 (let ((?x1046 (+ ?x101 ?x82 ?x952 z!4)))
 (let ((?x436 (* z!4 z!4 y!5 y!5 y!5 x!6 x!6 x!6)))
 (let ((?x1470 (* (- 1.0) ?x436)))
 (let ((?x429 (* z!4 z!4 z!4 y!5 y!5 y!5 x!6)))
 (let ((?x426 (* (- (/ 1.0 4.0)) ?x429)))
 (let ((?x77 (* z!4 z!4 z!4 y!5 y!5 y!5 x!6 x!6)))
 (let ((?x207 (* (- (/ 1.0 2.0)) ?x77)))
 (let ((?x1297 (* z!4 z!4 y!5 x!6 x!6)))
 (let ((?x1302 (* (- 2.0) ?x1297)))
 (let ((?x1294 (* z!4 z!4 z!4 y!5 y!5 x!6 x!6)))
 (let ((?x1293 (* (- 1.0) ?x1294)))
 (let ((?x1144 (* z!4 z!4 z!4 x!6)))
 (let ((?x1136 (* (- 2.0) ?x1144)))
 (let (($x1086 (= (* (+ ?x1136 ?x1293 ?x1302) (+ ?x207 ?x426 ?x1470) ?x1046) 0.0)))
 (let (($x1091 (not $x1086)))
 (let ((?x2091 (* y!5 y!5 y!5 x!6 x!6 x!6 x!6)))
 (let ((?x1966 (* (- (/ 1.0 4.0)) ?x2091)))
 (let ((?x2078 (* y!5 y!5 y!5 x!6 x!6 x!6 x!6 x!6)))
 (let ((?x1969 (* (- (/ 3.0 2.0)) ?x2078)))
 (let ((?x1998 (* z!4 y!5 y!5 x!6 x!6 x!6 x!6)))
 (let ((?x866 (* (/ 21.0 2.0) ?x1998)))
 (let ((?x1965 (* z!4 y!5 y!5 y!5 x!6 x!6 x!6 x!6)))
 (let ((?x2080 (* (- (/ 7.0 2.0)) ?x1965)))
 (let ((?x1817 (* z!4 y!5 y!5 x!6 x!6 x!6)))
 (let ((?x1141 (* (/ 9.0 4.0) ?x1817)))
 (let ((?x1806 (* z!4 z!4 y!5 y!5 y!5 x!6 x!6)))
 (let ((?x1814 (* (- (/ 3.0 4.0)) ?x1806)))
 (let ((?x1804 (* z!4 z!4 y!5 x!6 x!6 x!6)))
 (let ((?x621 (* (- (/ 15.0 2.0)) ?x1804)))
 (let ((?x1782 (* z!4 z!4 x!6 x!6 x!6)))
 (let ((?x1359 (* (/ 5.0 2.0) ?x1782)))
 (let ((?x1718 (* z!4 y!5 x!6 x!6 x!6)))
 (let ((?x337 (* (- (/ 9.0 4.0)) ?x1718)))
 (let ((?x1565 (* z!4 z!4 x!6 x!6)))
 (let ((?x1147 (* (/ 3.0 4.0) ?x1565)))
 (let ((?x1563 (* y!5 y!5 x!6 x!6 x!6 x!6 x!6)))
 (let ((?x889 (* (/ 9.0 2.0) ?x1563)))
 (let ((?x1471 (* x!6 x!6 x!6 x!6 x!6)))
 (let ((?x881 (* (/ 3.0 2.0) ?x1471)))
 (let ((?x1148 (* (- (/ 9.0 4.0)) ?x1297)))
 (let ((?x1362 (* (/ 3.0 2.0) ?x1294)))
 (let ((?x1280 (* z!4 z!4 y!5 y!5 x!6 x!6)))
 (let ((?x938 (* (/ 9.0 4.0) ?x1280)))
 (let ((?x1277 (* z!4 z!4 z!4 y!5 y!5 x!6)))
 (let ((?x1278 (* (/ 3.0 4.0) ?x1277)))
 (let ((?x1179 (* y!5 y!5 x!6 x!6 x!6 x!6)))
 (let ((?x1183 (* (/ 3.0 4.0) ?x1179)))
 (let ((?x1153 (* z!4 z!4 z!4 x!6 x!6)))
 (let ((?x549 (* (/ 1.0 2.0) ?x1153)))
 (let ((?x1152 (* z!4 y!5 y!5 y!5 x!6 x!6 x!6)))
 (let ((?x1154 (* (- (/ 3.0 4.0)) ?x1152)))
 (let ((?x989 (* (/ 1.0 4.0) ?x1144)))
 (let ((?x993 (* z!4 z!4 z!4 y!5 x!6)))
 (let ((?x1274 (* (- (/ 3.0 4.0)) ?x993)))
 (let ((?x975 (* x!6 x!6 x!6 x!6)))
 (let ((?x983 (* (/ 1.0 4.0) ?x975)))
 (let ((?x854 (* z!4 z!4 z!4 y!5 x!6 x!6)))
 (let ((?x868 (* (- (/ 3.0 2.0)) ?x854)))
 (let ((?x788 (* z!4 x!6 x!6 x!6)))
 (let ((?x1151 (* (/ 3.0 4.0) ?x788)))
 (let ((?x498 (* y!5 x!6 x!6 x!6 x!6)))
 (let ((?x934 (* (- (/ 3.0 4.0)) ?x498)))
 (let ((?x2088 (* (- (/ 5.0 2.0)) ?x436)))
 (let ((?x434 (* z!4 y!5 x!6 x!6 x!6 x!6)))
 (let ((?x865 (* (- (/ 21.0 2.0)) ?x434)))
 (let ((?x282 (* y!5 x!6 x!6 x!6 x!6 x!6)))
 (let ((?x884 (* (- (/ 9.0 2.0)) ?x282)))
 (let ((?x235 (* z!4 x!6 x!6 x!6 x!6)))
 (let ((?x1350 (* (/ 7.0 2.0) ?x235)))
 (let ((?x220 (* z!4 z!4 y!5 y!5 x!6 x!6 x!6)))
 (let ((?x1353 (* (/ 15.0 2.0) ?x220)))
 (let ((?x1118 (+ ?x207 ?x1353 ?x1350 ?x884 ?x426 ?x865 ?x2088 ?x934 ?x1151 ?x868 ?x983 ?x1274 ?x989 ?x1154 ?x549 ?x1183 ?x1278 ?x938 ?x1362 ?x1148 ?x881 ?x889 ?x1147 ?x337 ?x1359 ?x621 ?x1814 ?x1141 ?x2080 ?x866 ?x1969 ?x1966)))
 (let ((?x666 (* (- 3.0) ?x1998)))
 (let ((?x224 (* 6.0 ?x1804)))
 (let ((?x1802 (* (- 3.0) ?x1782)))
 (let ((?x501 (* (- 4.0) ?x1718)))
 (let ((?x2094 (* (- 4.0) ?x1565)))
 (let ((?x290 (* (- 1.0) ?x1563)))
 (let ((?x2085 (* (- 1.0) ?x1471)))
 (let ((?x1155 (* (- 1.0) ?x1153)))
 (let ((?x1797 (* 2.0 ?x854)))
 (let ((?x1715 (* (- 2.0) ?x788)))
 (let ((?x1338 (* (- 2.0) ?x498)))
 (let ((?x441 (* 6.0 ?x434)))
 (let ((?x1556 (* 2.0 ?x282)))
 (let ((?x305 (* (- 3.0) ?x235)))
 (let ((?x232 (* (- 3.0) ?x220)))
 (let ((?x1087 (+ ?x232 ?x305 ?x1556 ?x441 ?x1338 ?x1715 ?x1797 ?x1136 ?x1155 ?x1293 ?x1302 ?x2085 ?x290 ?x2094 ?x501 ?x1802 ?x224 ?x666)))
 (let ((?x1113 (* ?x1087 ?x1118 ?x1046)))
 (let (($x1116 (= ?x1113 0.0)))
 (let ((?x1538 (+ (* (/ 9.0 4.0) ?x1297) (* (- (/ 1.0 4.0)) ?x1144) (* (- (/ 3.0 2.0)) ?x1294) (* (/ 5.0 2.0) ?x436) (* (/ 1.0 2.0) ?x77) (* (/ 1.0 4.0) ?x429) (* (- (/ 21.0 2.0)) ?x1998) (* (- (/ 15.0 2.0)) ?x220) (* (- (/ 7.0 2.0)) ?x235) (* (/ 9.0 2.0) ?x282) (* (/ 21.0 2.0) ?x434) (* (/ 3.0 4.0) ?x498) (* (- (/ 3.0 4.0)) ?x788) (* (/ 3.0 2.0) ?x854) (* (- (/ 1.0 2.0)) ?x1153) (* (- (/ 3.0 2.0)) ?x1471) (* (- (/ 9.0 2.0)) ?x1563) (* (- (/ 3.0 4.0)) ?x1565) (* (/ 9.0 4.0) ?x1718) (* (- (/ 5.0 2.0)) ?x1782) (* (/ 15.0 2.0) ?x1804) (* (/ 1.0 4.0) ?x2091) (* (- (/ 1.0 4.0)) ?x975) (* (/ 3.0 4.0) ?x993) (* (/ 3.0 4.0) ?x1152) (* (- (/ 3.0 4.0)) ?x1179) (* (- (/ 3.0 4.0)) ?x1277) (* (- (/ 9.0 4.0)) ?x1280) (* (/ 3.0 4.0) ?x1806) (* (- (/ 9.0 4.0)) ?x1817) (* (/ 7.0 2.0) ?x1965) (* (/ 3.0 2.0) ?x2078))))
 (let (($x198 (<= ?x1538 0.0)))
 (let (($x374 (not $x198)))
 (let ((?x593 (+ ?x1148 ?x989 ?x1362 ?x2088 ?x207 ?x426 ?x866 ?x1353 ?x1350 ?x884 ?x865 ?x934 ?x1151 ?x868 ?x549 ?x881 ?x889 ?x1147 ?x337 ?x1359 ?x621 ?x1966 ?x983 ?x1274 ?x1154 ?x1183 ?x1278 ?x938 ?x1814 ?x1141 ?x2080 ?x1969)))
 (let (($x1088 (>= ?x593 0.0)))
 (let (($x369 (not $x1088)))
 (let (($x367 (= 0.0 ?x593)))
 (let (($x383 (not $x367)))
 (let (($x1117 (not $x1116)))
 (let ((@x1750 (hypothesis $x1117)))
 (let (($x197 (= ?x593 0.0)))
 (let (($x199 (not $x197)))
 (let ((@x330 (unit-resolution (unit-resolution ((_ th-lemma arith) (or $x199 $x1116)) @x1750 $x199) (symm (hypothesis $x367) $x197) false)))
 (let ((@x438 (unit-resolution (lemma @x330 (or $x383 $x1116)) @x1750 $x383)))
 (let (($x950 (<= ?x593 0.0)))
 (let (($x1540 (>= ?x1538 0.0)))
 (let ((?x1100 (+ ?x2085 ?x290 ?x2094 ?x501 ?x1802 ?x224 ?x1302 ?x1136 ?x1293 ?x666 ?x232 ?x305 ?x1556 ?x441 ?x1338 ?x1715 ?x1797 ?x1155)))
 (let (($x1162 (= 0.0 ?x1100)))
 (let (($x332 (not $x1162)))
 (let (($x1159 (= ?x1100 0.0)))
 (let (($x1708 (not $x1159)))
 (let ((@x360 (unit-resolution (unit-resolution ((_ th-lemma arith) (or $x1708 $x1116)) @x1750 $x1708) (symm (hypothesis $x1162) $x1159) false)))
 (let ((@x308 (unit-resolution (lemma @x360 (or $x332 $x1116)) @x1750 $x332)))
 (let (($x1119 (>= ?x1113 0.0)))
 (let (($x203 (not $x1119)))
 (let (($x1081 (= 0.0 ?x1113)))
 (let (($x431 (not $x1081)))
 (let ((@x307 (monotonicity (symm (commutativity (= $x1081 $x1116)) (= $x1116 $x1081)) (= $x1117 $x431))))
 (let (($x1082 (<= ?x1113 0.0)))
 (let ((@x1902 (hypothesis $x332)))
 (let (($x1999 (not $x1082)))
 (let ((@x780 (hypothesis $x1999)))
 (let (($x1098 (<= ?x1100 0.0)))
 (let ((?x782 (+ ?x1471 ?x1563 (* 4.0 ?x1565) (* 4.0 ?x1718) (* 3.0 ?x1782) (* (- 6.0) ?x1804) (* 2.0 ?x1297) (* 2.0 ?x1144) ?x1294 (* 3.0 ?x1998) (* 3.0 ?x220) (* 3.0 ?x235) (* (- 2.0) ?x282) (* (- 6.0) ?x434) (* 2.0 ?x498) (* 2.0 ?x788) (* (- 2.0) ?x854) ?x1153)))
 (let (($x747 (>= ?x782 0.0)))
 (let (($x1905 (not $x1540)))
 (let ((@x1730 (hypothesis $x1905)))
 (let (($x400 (<= ?x1111 0.0)))
 (let ((?x1075 (+ z00 ?x81 (* (- 1.0) ?x952) (* (- 1.0) z!4))))
 (let (($x1062 (>= ?x1075 0.0)))
 (let (($x1078 (= 0.0 ?x1075)))
 (let ((@x505 (symm (commutativity (= $x1078 (= ?x1075 0.0))) (= (= ?x1075 0.0) $x1078))))
 (let (($x1076 (= ?x1075 0.0)))
 (let (($x1114 (or $x1091 $x1117)))
 (let (($x609 (and $x1076 $x1114)))
 (let ((?x1270 (+ z!4 ?x101 ?x82 ?x952)))
 (let ((?x1067 (+ ?x549 ?x868 ?x1362 ?x1359 ?x621 ?x1353 ?x1350 ?x865 ?x866 ?x881 ?x884 ?x889 ?x1147 ?x1148 ?x1151 ?x337 ?x983 ?x934 ?x989 ?x1274 ?x1278 ?x426 ?x938 ?x1814 ?x1141 ?x1154 ?x1183 ?x1966 ?x207 ?x2088 ?x2080 ?x1969)))
 (let ((?x542 (+ ?x1155 ?x1797 ?x1293 ?x1802 ?x224 ?x232 ?x305 ?x441 ?x666 ?x2085 ?x1556 ?x290 ?x2094 ?x1302 ?x1715 ?x501 ?x1338 ?x1136)))
 (let (($x1068 (or (not (= (* (+ ?x1293 ?x1302 ?x1136) (+ ?x426 ?x207 ?x1470) ?x1270) 0.0)) (not (= (* ?x542 ?x1067 ?x1270) 0.0)))))
 (let (($x1055 (and (= ?x1270 0.0) $x1068)))
 (let (($x2084 (exists ((x Real) (y Real) (z Real) )(! (let ((?x87 (* y x)))
 (let ((?x81 (* x00 y00)))
 (let ((?x82 (* (- 1.0) ?x81)))
 (let ((?x101 (* (- 1.0) z00)))
 (let ((?x107 (+ z ?x101 ?x82 ?x87)))
 (let ((?x2000 (* (- (/ 1.0 2.0)) (* z z z y y y x x))))
 (let ((?x1370 (* (- (/ 1.0 4.0)) (* z z z y y y x))))
 (let ((?x2325 (+ (* (/ 1.0 2.0) (* z z z x x)) (* (- (/ 3.0 2.0)) (* z z z y x x)) (* (/ 3.0 2.0) (* z z z y y x x)) (* (/ 5.0 2.0) (* z z x x x)) (* (- (/ 15.0 2.0)) (* z z y x x x)) (* (/ 15.0 2.0) (* z z y y x x x)) (* (/ 7.0 2.0) (* z x x x x)) (* (- (/ 21.0 2.0)) (* z y x x x x)) (* (/ 21.0 2.0) (* z y y x x x x)) (* (/ 3.0 2.0) (* x x x x x)) (* (- (/ 9.0 2.0)) (* y x x x x x)) (* (/ 9.0 2.0) (* y y x x x x x)) (* (/ 3.0 4.0) (* z z x x)) (* (- (/ 9.0 4.0)) (* z z y x x)) (* (/ 3.0 4.0) (* z x x x)) (* (- (/ 9.0 4.0)) (* z y x x x)) (* (/ 1.0 4.0) (* x x x x)) (* (- (/ 3.0 4.0)) (* y x x x x)) (* (/ 1.0 4.0) (* z z z x)) (* (- (/ 3.0 4.0)) (* z z z y x)) (* (/ 3.0 4.0) (* z z z y y x)) ?x1370 (* (/ 9.0 4.0) (* z z y y x x)) (* (- (/ 3.0 4.0)) (* z z y y y x x)) (* (/ 9.0 4.0) (* z y y x x x)) (* (- (/ 3.0 4.0)) (* z y y y x x x)) (* (/ 3.0 4.0) (* y y x x x x)) (* (- (/ 1.0 4.0)) (* y y y x x x x)) ?x2000 (* (- (/ 5.0 2.0)) (* z z y y y x x x)) (* (- (/ 7.0 2.0)) (* z y y y x x x x)) (* (- (/ 3.0 2.0)) (* y y y x x x x x)))))
 (let ((?x758 (* z z z x)))
 (let ((?x761 (* (- 2.0) ?x758)))
 (let ((?x553 (* z z y x x)))
 (let ((?x668 (* (- 2.0) ?x553)))
 (let ((?x243 (* z z z y y x x)))
 (let ((?x503 (* (- 1.0) ?x243)))
 (let ((?x810 (+ (* (- 1.0) (* z z z x x)) (* 2.0 (* z z z y x x)) ?x503 (* (- 3.0) (* z z x x x)) (* 6.0 (* z z y x x x)) (* (- 3.0) (* z z y y x x x)) (* (- 3.0) (* z x x x x)) (* 6.0 (* z y x x x x)) (* (- 3.0) (* z y y x x x x)) (* (- 1.0) (* x x x x x)) (* 2.0 (* y x x x x x)) (* (- 1.0) (* y y x x x x x)) (* (- 4.0) (* z z x x)) ?x668 (* (- 2.0) (* z x x x)) (* (- 4.0) (* z y x x x)) (* (- 2.0) (* y x x x x)) ?x761)))
 (let ((?x2385 (+ ?x1370 ?x2000 (* (- 1.0) (* z z y y y x x x)))))
 (let ((?x144 (+ ?x503 ?x668 ?x761)))
 (let (($x2087 (or (not (= (* ?x144 ?x2385 ?x107) 0.0)) (not (= (* ?x810 ?x2325 ?x107) 0.0)))))
 (let (($x112 (= ?x107 0.0)))
 (and $x112 $x2087)))))))))))))))))))) :qid k!28))
 ))
 (let (($x684 (exists ((x Real) (y Real) (z Real) )(! (let ((?x101 (* (- 1.0) z00)))
 (let ((?x81 (* x00 y00)))
 (let ((?x82 (* (- 1.0) ?x81)))
 (let ((?x686 (+ ?x82 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x101)))
 (let ((?x123 (* (/ 1.0 2.0) y)))
 (let ((?x1659 (+ (- (/ 1.0 2.0)) ?x123)))
 (let ((?x40 (+ z x)))
 (let ((?x946 (+ (* (- 2.0) (* ?x40 ?x40 ?x40 ?x1659 ?x1659 ?x1659 x)) (* (- 4.0) (* ?x40 ?x40 ?x40 ?x1659 ?x1659 ?x1659 x x)) (* (- 8.0) (* ?x40 ?x40 ?x1659 ?x1659 ?x1659 x x x)))))
 (let ((?x857 (+ (* (- 4.0) (* ?x40 ?x40 ?x40 ?x1659 ?x1659 x x)) (* (- 4.0) (* ?x40 ?x40 ?x1659 x x)) (* (- 2.0) (* ?x40 ?x40 ?x40 x)))))
 (let ((?x87 (* y x)))
 (let ((?x626 (+ ?x82 ?x87 z ?x101)))
 (let ((?x2000 (* (- (/ 1.0 2.0)) (* z z z y y y x x))))
 (let ((?x1370 (* (- (/ 1.0 4.0)) (* z z z y y y x))))
 (let ((?x2385 (+ ?x1370 ?x2000 (* (- 1.0) (* z z y y y x x x)))))
 (let ((?x758 (* z z z x)))
 (let ((?x761 (* (- 2.0) ?x758)))
 (let ((?x553 (* z z y x x)))
 (let ((?x668 (* (- 2.0) ?x553)))
 (let ((?x243 (* z z z y y x x)))
 (let ((?x503 (* (- 1.0) ?x243)))
 (let ((?x144 (+ ?x503 ?x668 ?x761)))
 (let (($x663 (or (not (= (* ?x144 ?x2385 ?x626) 0.0)) (not (= (* ?x857 ?x946 ?x686) 0.0)))))
 (and (= ?x626 0.0) $x663))))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x2076 (lambda ((x Real) (y Real) (z Real) )(let ((?x87 (* y x)))
 (let ((?x81 (* x00 y00)))
 (let ((?x82 (* (- 1.0) ?x81)))
 (let ((?x101 (* (- 1.0) z00)))
 (let ((?x107 (+ z ?x101 ?x82 ?x87)))
 (let ((?x2000 (* (- (/ 1.0 2.0)) (* z z z y y y x x))))
 (let ((?x1370 (* (- (/ 1.0 4.0)) (* z z z y y y x))))
 (let ((?x2325 (+ (* (/ 1.0 2.0) (* z z z x x)) (* (- (/ 3.0 2.0)) (* z z z y x x)) (* (/ 3.0 2.0) (* z z z y y x x)) (* (/ 5.0 2.0) (* z z x x x)) (* (- (/ 15.0 2.0)) (* z z y x x x)) (* (/ 15.0 2.0) (* z z y y x x x)) (* (/ 7.0 2.0) (* z x x x x)) (* (- (/ 21.0 2.0)) (* z y x x x x)) (* (/ 21.0 2.0) (* z y y x x x x)) (* (/ 3.0 2.0) (* x x x x x)) (* (- (/ 9.0 2.0)) (* y x x x x x)) (* (/ 9.0 2.0) (* y y x x x x x)) (* (/ 3.0 4.0) (* z z x x)) (* (- (/ 9.0 4.0)) (* z z y x x)) (* (/ 3.0 4.0) (* z x x x)) (* (- (/ 9.0 4.0)) (* z y x x x)) (* (/ 1.0 4.0) (* x x x x)) (* (- (/ 3.0 4.0)) (* y x x x x)) (* (/ 1.0 4.0) (* z z z x)) (* (- (/ 3.0 4.0)) (* z z z y x)) (* (/ 3.0 4.0) (* z z z y y x)) ?x1370 (* (/ 9.0 4.0) (* z z y y x x)) (* (- (/ 3.0 4.0)) (* z z y y y x x)) (* (/ 9.0 4.0) (* z y y x x x)) (* (- (/ 3.0 4.0)) (* z y y y x x x)) (* (/ 3.0 4.0) (* y y x x x x)) (* (- (/ 1.0 4.0)) (* y y y x x x x)) ?x2000 (* (- (/ 5.0 2.0)) (* z z y y y x x x)) (* (- (/ 7.0 2.0)) (* z y y y x x x x)) (* (- (/ 3.0 2.0)) (* y y y x x x x x)))))
 (let ((?x758 (* z z z x)))
 (let ((?x761 (* (- 2.0) ?x758)))
 (let ((?x553 (* z z y x x)))
 (let ((?x668 (* (- 2.0) ?x553)))
 (let ((?x243 (* z z z y y x x)))
 (let ((?x503 (* (- 1.0) ?x243)))
 (let ((?x810 (+ (* (- 1.0) (* z z z x x)) (* 2.0 (* z z z y x x)) ?x503 (* (- 3.0) (* z z x x x)) (* 6.0 (* z z y x x x)) (* (- 3.0) (* z z y y x x x)) (* (- 3.0) (* z x x x x)) (* 6.0 (* z y x x x x)) (* (- 3.0) (* z y y x x x x)) (* (- 1.0) (* x x x x x)) (* 2.0 (* y x x x x x)) (* (- 1.0) (* y y x x x x x)) (* (- 4.0) (* z z x x)) ?x668 (* (- 2.0) (* z x x x)) (* (- 4.0) (* z y x x x)) (* (- 2.0) (* y x x x x)) ?x761)))
 (let ((?x2385 (+ ?x1370 ?x2000 (* (- 1.0) (* z z y y y x x x)))))
 (let ((?x144 (+ ?x503 ?x668 ?x761)))
 (let (($x2087 (or (not (= (* ?x144 ?x2385 ?x107) 0.0)) (not (= (* ?x810 ?x2325 ?x107) 0.0)))))
 (let (($x112 (= ?x107 0.0)))
 (let (($x2155 (and $x112 $x2087)))
 (let ((?x686 (+ ?x82 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x101)))
 (let ((?x123 (* (/ 1.0 2.0) y)))
 (let ((?x1659 (+ (- (/ 1.0 2.0)) ?x123)))
 (let ((?x40 (+ z x)))
 (let ((?x946 (+ (* (- 2.0) (* ?x40 ?x40 ?x40 ?x1659 ?x1659 ?x1659 x)) (* (- 4.0) (* ?x40 ?x40 ?x40 ?x1659 ?x1659 ?x1659 x x)) (* (- 8.0) (* ?x40 ?x40 ?x1659 ?x1659 ?x1659 x x x)))))
 (let ((?x857 (+ (* (- 4.0) (* ?x40 ?x40 ?x40 ?x1659 ?x1659 x x)) (* (- 4.0) (* ?x40 ?x40 ?x1659 x x)) (* (- 2.0) (* ?x40 ?x40 ?x40 x)))))
 (let (($x663 (or (not (= (* ?x144 ?x2385 (+ ?x82 ?x87 z ?x101)) 0.0)) (not (= (* ?x857 ?x946 ?x686) 0.0)))))
 (let (($x679 (and (= (+ ?x82 ?x87 z ?x101) 0.0) $x663)))
 (rewrite (= $x679 $x2155)))))))))))))))))))))))))))))))
 ))
 (let (($x73 (exists ((x Real) (y Real) (z Real) )(! (let ((?x54 (/ y 2.0)))
 (let ((?x66 (- (* (- 1.0) 2.0 x ?x54 ?x54 ?x54 z z z) (* 2.0 x 2.0 x ?x54 ?x54 ?x54 z z z))))
 (let ((?x67 (- ?x66 (* 2.0 x 2.0 x 2.0 x ?x54 ?x54 ?x54 z z))))
 (let ((?x61 (- (* (- 1.0) 2.0 x 2.0 x ?x54 ?x54 z z z) (* 2.0 x 2.0 x ?x54 z z))))
 (let ((?x68 (* (- (+ (* (- 1.0) x00 y00) (* 2.0 x ?x54) z) z00) (- ?x61 (* 2.0 x z z z)) ?x67)))
 (let ((?x40 (+ z x)))
 (let ((?x36 (/ (- y 1.0) 2.0)))
 (let ((?x49 (- (* (- 1.0) 2.0 x ?x36 ?x36 ?x36 ?x40 ?x40 ?x40) (* 2.0 x 2.0 x ?x36 ?x36 ?x36 ?x40 ?x40 ?x40))))
 (let ((?x50 (- ?x49 (* 2.0 x 2.0 x 2.0 x ?x36 ?x36 ?x36 ?x40 ?x40))))
 (let ((?x44 (- (* (- 1.0) 2.0 x 2.0 x ?x36 ?x36 ?x40 ?x40 ?x40) (* 2.0 x 2.0 x ?x36 ?x40 ?x40))))
 (let ((?x39 (- (+ (* (- 1.0) x00 y00) (* 2.0 x ?x36) z x) z00)))
 (let (($x53 (not (= (* ?x39 (- ?x44 (* 2.0 x ?x40 ?x40 ?x40)) ?x50) 0.0))))
 (let (($x33 (= (- (+ (* (- 1.0) x00 y00) (* x y) z) z00) 0.0)))
 (and $x33 (or $x53 (not (= ?x68 0.0))))))))))))))))) :qid k!28))
 ))
 (let ((?x658 (lambda ((x Real) (y Real) (z Real) )(let ((?x101 (* (- 1.0) z00)))
 (let ((?x81 (* x00 y00)))
 (let ((?x82 (* (- 1.0) ?x81)))
 (let ((?x686 (+ ?x82 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x101)))
 (let ((?x123 (* (/ 1.0 2.0) y)))
 (let ((?x1659 (+ (- (/ 1.0 2.0)) ?x123)))
 (let ((?x40 (+ z x)))
 (let ((?x946 (+ (* (- 2.0) (* ?x40 ?x40 ?x40 ?x1659 ?x1659 ?x1659 x)) (* (- 4.0) (* ?x40 ?x40 ?x40 ?x1659 ?x1659 ?x1659 x x)) (* (- 8.0) (* ?x40 ?x40 ?x1659 ?x1659 ?x1659 x x x)))))
 (let ((?x857 (+ (* (- 4.0) (* ?x40 ?x40 ?x40 ?x1659 ?x1659 x x)) (* (- 4.0) (* ?x40 ?x40 ?x1659 x x)) (* (- 2.0) (* ?x40 ?x40 ?x40 x)))))
 (let ((?x87 (* y x)))
 (let ((?x626 (+ ?x82 ?x87 z ?x101)))
 (let ((?x2000 (* (- (/ 1.0 2.0)) (* z z z y y y x x))))
 (let ((?x1370 (* (- (/ 1.0 4.0)) (* z z z y y y x))))
 (let ((?x2385 (+ ?x1370 ?x2000 (* (- 1.0) (* z z y y y x x x)))))
 (let ((?x758 (* z z z x)))
 (let ((?x761 (* (- 2.0) ?x758)))
 (let ((?x553 (* z z y x x)))
 (let ((?x668 (* (- 2.0) ?x553)))
 (let ((?x243 (* z z z y y x x)))
 (let ((?x503 (* (- 1.0) ?x243)))
 (let ((?x144 (+ ?x503 ?x668 ?x761)))
 (let (($x663 (or (not (= (* ?x144 ?x2385 ?x626) 0.0)) (not (= (* ?x857 ?x946 ?x686) 0.0)))))
 (let (($x679 (and (= ?x626 0.0) $x663)))
 (let ((?x54 (/ y 2.0)))
 (let ((?x66 (- (* (- 1.0) 2.0 x ?x54 ?x54 ?x54 z z z) (* 2.0 x 2.0 x ?x54 ?x54 ?x54 z z z))))
 (let ((?x67 (- ?x66 (* 2.0 x 2.0 x 2.0 x ?x54 ?x54 ?x54 z z))))
 (let ((?x61 (- (* (- 1.0) 2.0 x 2.0 x ?x54 ?x54 z z z) (* 2.0 x 2.0 x ?x54 z z))))
 (let ((?x68 (* (- (+ (* (- 1.0) x00 y00) (* 2.0 x ?x54) z) z00) (- ?x61 (* 2.0 x z z z)) ?x67)))
 (let ((?x36 (/ (- y 1.0) 2.0)))
 (let ((?x49 (- (* (- 1.0) 2.0 x ?x36 ?x36 ?x36 ?x40 ?x40 ?x40) (* 2.0 x 2.0 x ?x36 ?x36 ?x36 ?x40 ?x40 ?x40))))
 (let ((?x50 (- ?x49 (* 2.0 x 2.0 x 2.0 x ?x36 ?x36 ?x36 ?x40 ?x40))))
 (let ((?x44 (- (* (- 1.0) 2.0 x 2.0 x ?x36 ?x36 ?x40 ?x40 ?x40) (* 2.0 x 2.0 x ?x36 ?x40 ?x40))))
 (let ((?x39 (- (+ (* (- 1.0) x00 y00) (* 2.0 x ?x36) z x) z00)))
 (let (($x53 (not (= (* ?x39 (- ?x44 (* 2.0 x ?x40 ?x40 ?x40)) ?x50) 0.0))))
 (let (($x33 (= (- (+ (* (- 1.0) x00 y00) (* x y) z) z00) 0.0)))
 (let (($x72 (and $x33 (or $x53 (not (= ?x68 0.0))))))
 (rewrite (= $x72 $x679)))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x74 (asserted $x73)))
 (let ((@x1312 (mp (mp @x74 (quant-intro (proof-bind ?x658) (= $x73 $x684)) $x684) (quant-intro (proof-bind ?x2076) (= $x684 $x2084)) $x2084)))
 (let ((@x1061 (mp (mp~ @x1312 (sk (~ $x2084 $x1055)) $x1055) (rewrite (= $x1055 $x609)) $x609)))
 (let ((@x1770 (and-elim @x1061 $x1076)))
 (let ((@x502 (mp @x1770 @x505 $x1078)))
 (let ((@x607 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1078) $x1062)) @x502 $x1062)))
 (let ((@x2007 (lemma ((_ th-lemma arith) @x607 (hypothesis (not $x400)) false) $x400)))
 (let ((@x1142 (unit-resolution ((_ th-lemma arith) (or (not $x400) $x747 $x1540 $x1082)) @x780 (hypothesis (not $x747)) @x1730 @x2007 false)))
 (let ((@x1064 ((_ th-lemma arith) (or $x1098 (not $x747)))))
 (let ((@x1104 (unit-resolution @x1064 (unit-resolution (lemma @x1142 (or $x747 $x1082 $x1540)) @x1730 @x780 $x747) $x1098)))
 (let (($x1103 (>= ?x1100 0.0)))
 (let (($x1163 (<= ?x782 0.0)))
 (let (($x1737 (not $x1163)))
 (let ((@x359 (hypothesis $x1737)))
 (let (($x1107 (>= ?x1111 0.0)))
 (let (($x558 (<= ?x1075 0.0)))
 (let ((@x190 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1078) $x558)) @x502 $x558)))
 (let ((@x1760 (lemma ((_ th-lemma arith) (hypothesis (not $x1107)) @x190 false) $x1107)))
 (let ((@x361 (unit-resolution ((_ th-lemma arith) (or (not $x1107) $x1163 $x1540 $x1082)) @x780 @x1730 @x1760 @x359 false)))
 (let ((@x356 (lemma ((_ th-lemma arith) (hypothesis $x1163) (hypothesis (not $x1103)) false) (or $x1737 $x1103))))
 (let ((@x1108 (unit-resolution @x356 (unit-resolution (lemma @x361 (or $x1163 $x1082 $x1540)) @x1730 @x780 $x1163) $x1103)))
 (let ((@x918 ((_ th-lemma arith triangle-eq) (or $x1162 (not $x1098) (not $x1103)))))
 (let ((@x1164 (lemma (unit-resolution @x918 @x1108 @x1104 @x1902 false) (or $x1540 $x1162 $x1082))))
 (let ((@x331 ((_ th-lemma arith) (or $x950 $x1905))))
 (let ((@x396 ((_ th-lemma arith triangle-eq) (or $x367 (not $x950) $x369))))
 (let ((@x397 (unit-resolution @x396 (unit-resolution @x331 (unit-resolution @x1164 @x780 @x1902 $x1540) $x950) (hypothesis $x383) $x369)))
 (let ((@x379 (lemma ((_ th-lemma arith) (hypothesis $x369) (hypothesis $x198) false) (or $x374 $x1088))))
 (let ((@x398 (unit-resolution @x379 @x397 $x374)))
 (let (($x1898 (not $x747)))
 (let (($x1109 (not $x1098)))
 (let ((@x1165 (hypothesis $x374)))
 (let ((@x1800 (unit-resolution ((_ th-lemma arith) (or (not $x400) $x1163 $x198 $x1082)) @x780 @x2007 @x359 @x1165 false)))
 (let ((@x323 (unit-resolution @x356 (unit-resolution (lemma @x1800 (or $x198 $x1082 $x1163)) @x398 @x780 $x1163) $x1103)))
 (let ((@x404 (unit-resolution ((_ th-lemma arith) (or (not $x1107) $x747 $x198 $x1082)) @x780 (unit-resolution @x1064 (unit-resolution @x918 @x323 @x1902 $x1109) $x1898) @x1760 @x398 false)))
 (let ((@x444 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1081 $x1999 $x203)) (unit-resolution (lemma @x404 (or $x1082 $x1162 $x367)) @x308 @x438 $x1082) (mp @x1750 @x307 $x431) $x203)))
 (let ((@x317 (hypothesis $x203)))
 (let ((@x410 (unit-resolution ((_ th-lemma arith) (or (not $x400) $x1163 $x1540 $x1119)) @x317 @x1730 @x2007 @x359 false)))
 (let ((@x413 (unit-resolution @x356 (unit-resolution (lemma @x410 (or $x1163 $x1119 $x1540)) @x1730 @x317 $x1163) $x1103)))
 (let ((@x414 (unit-resolution ((_ th-lemma arith) (or (not $x1107) $x747 $x1540 $x1119)) @x317 (unit-resolution @x1064 (unit-resolution @x918 @x413 @x1902 $x1109) $x1898) @x1730 @x1760 false)))
 (let ((@x445 (unit-resolution @x331 (unit-resolution (lemma @x414 (or $x1540 $x1119 $x1162)) @x444 @x308 $x1540) $x950)))
 (let ((@x209 (unit-resolution @x379 (unit-resolution @x396 @x445 @x438 $x369) $x374)))
 (let ((@x205 (unit-resolution ((_ th-lemma arith) (or (not $x1107) $x1163 $x198 $x1119)) @x317 @x1760 @x359 @x1165 false)))
 (let ((@x309 (unit-resolution @x356 (unit-resolution (lemma @x205 (or $x1163 $x1119 $x198)) @x444 @x209 $x1163) $x1103)))
 (let ((@x454 (unit-resolution ((_ th-lemma arith) (or (not $x400) $x747 $x198 $x1119)) @x444 (unit-resolution @x1064 (unit-resolution @x918 @x309 @x308 $x1109) $x1898) @x2007 @x209 false)))
 (let ((@x467 (unit-resolution ((_ th-lemma arith) (or $x462 $x1086)) (unit-resolution (and-elim @x1061 $x1114) (lemma @x454 $x1116) $x1091) (hypothesis $x459) false)))
 (let ((@x304 (trans* (symm ((_ th-lemma arith) @x1760 @x2007 @x607 @x190 (= ?x1075 ?x1111)) (= ?x1111 ?x1075)) @x1770 $x459)))
 (unit-resolution @x304 (lemma @x467 $x462) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                      20
 :arith-eq-adapter               23
 :arith-bound-propagations-cheap 37
 :arith-bound-propagations-lp    2
 :arith-conflicts                100
 :arith-diseq                    28
 :arith-fixed-eqs                5
 :arith-grobner-calls            5
 :arith-horner-calls             5
 :arith-lower                    81
 :arith-make-feasible            73
 :arith-max-columns              59
 :arith-max-rows                 13
 :arith-nla-lemmas               96
 :arith-propagations             37
 :arith-upper                    60
 :conflicts                      17
 :decisions                      136
 :del-clause                     126
 :final-checks                   40
 :max-memory                     3.44
 :memory                         1.26
 :mk-bool-var                    195
 :mk-clause                      177
 :num-allocs                     5206942
 :num-checks                     1
 :propagations                   148
 :rlimit-count                   9080
 :time                           0.05
 :total-time                     0.06)
