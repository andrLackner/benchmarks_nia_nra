unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x369 (+ (* 3 (* n!0 n!0)) (* (- 1) k!2) (* 3 n!0))))
 (let (($x403 (<= ?x369 (- 1))))
 (let (($x644 (= ?x369 (- 1))))
 (let ((?x651 (+ k!2 c!3)))
 (let ((?x1110 (+ k!2 m!1)))
 (let ((?x990 (+ 6 m!1)))
 (let ((?x756 (+ 1 n!0)))
 (let ((?x193 (+ (* 5 (* ?x1110 ?x1110 ?x1110 ?x1110 ?x651 ?x651 ?x651)) (* (- 9) (* ?x756 ?x1110 ?x1110 ?x1110 ?x651 ?x651 ?x651)) (* (- 18) (* ?x756 ?x990 ?x990 ?x990 ?x1110 ?x651 ?x651)) (* (- 5) (* ?x756 ?x990 ?x990 ?x990 ?x1110 ?x1110 ?x651)) (* (- 1) (* ?x756 ?x756 ?x756 ?x990 ?x1110 ?x1110 ?x1110 ?x1110 ?x651)) (* (- 9) (* ?x756 ?x756 ?x990 ?x990 ?x990 ?x1110 ?x651 ?x651)) (* (- 9) (* ?x756 ?x756 ?x756 ?x756 ?x990 ?x1110 ?x1110 ?x651)) (* 9 (* ?x756 ?x756 ?x990 ?x990 ?x990 ?x1110 ?x651)) (* 18 (* ?x1110 ?x1110 ?x1110 ?x651 ?x651 ?x651 ?x651)) (* (- 4) (* ?x1110 ?x1110 ?x1110 ?x651 ?x651 ?x651)) (* (- 1) (* ?x1110 ?x1110 ?x1110 ?x1110 ?x1110 ?x651 ?x651 ?x651)) (* 9 (* ?x756 ?x1110 ?x1110 ?x1110 ?x651 ?x651 ?x651 ?x651)) (* 5 (* ?x756 ?x756 ?x756 ?x990 ?x1110 ?x1110 ?x1110 ?x651)) (* 18 (* ?x756 ?x756 ?x756 ?x990 ?x1110 ?x1110 ?x651 ?x651)) (* 9 (* ?x756 ?x756 ?x756 ?x756 ?x990 ?x1110 ?x1110 ?x651 ?x651)) (* ?x756 ?x990 ?x990 ?x990 ?x1110 ?x1110 ?x1110 ?x651) (* (- 4) (* ?x756 ?x756 ?x756 ?x990 ?x1110 ?x1110 ?x651)) (* 4 (* ?x756 ?x990 ?x990 ?x990 ?x1110 ?x651)))))
 (let (($x420 (= ?x193 0)))
 (let (($x424 (not $x420)))
 (let ((?x973 (* 3 c!3)))
 (let ((?x362 (* (- 1) (* k!2 n!0))))
 (let ((?x1127 (* (- 2) n!0)))
 (let ((?x697 (+ k!2 ?x1127 ?x362 ?x973)))
 (let (($x698 (= ?x697 1)))
 (let ((?x333 (* k!2 k!2)))
 (let ((?x967 (+ ?x333 (* (- 5) k!2) (* (- 9) (* n!0 c!3)) (* 9 n!0) (* (- 18) c!3))))
 (let (($x981 (= ?x967 (- 4))))
 (let ((?x605 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x1108 (= ?x605 (- 6))))
 (let (($x846 (and $x1108 $x981 $x698 $x644 $x424)))
 (let ((?x764 (+ c!3 k!2)))
 (let ((?x452 (+ (* 4 (* ?x1110 ?x1110 ?x1110 ?x764 ?x764 ?x764)) (* ?x1110 ?x1110 ?x1110 ?x1110 ?x1110 ?x764 ?x764 ?x764) (* 5 (* ?x756 ?x990 ?x990 ?x990 ?x1110 ?x1110 ?x764)) (* (- 18) (* ?x756 ?x756 ?x756 ?x990 ?x1110 ?x1110 ?x764 ?x764)) (* 18 (* ?x756 ?x990 ?x990 ?x990 ?x1110 ?x764 ?x764)) (* (- 9) (* ?x756 ?x756 ?x756 ?x756 ?x990 ?x1110 ?x1110 ?x764 ?x764)) (* (- 5) (* ?x756 ?x756 ?x756 ?x990 ?x1110 ?x1110 ?x1110 ?x764)) (* (- 1) (* ?x756 ?x990 ?x990 ?x990 ?x1110 ?x1110 ?x1110 ?x764)) (* (- 4) (* ?x756 ?x990 ?x990 ?x990 ?x1110 ?x764)) (* (- 18) (* ?x1110 ?x1110 ?x1110 ?x764 ?x764 ?x764 ?x764)) (* ?x756 ?x756 ?x756 ?x990 ?x1110 ?x1110 ?x1110 ?x1110 ?x764) (* 9 (* ?x756 ?x756 ?x990 ?x990 ?x990 ?x1110 ?x764 ?x764)) (* 9 (* ?x756 ?x1110 ?x1110 ?x1110 ?x764 ?x764 ?x764)) (* 4 (* ?x756 ?x756 ?x756 ?x990 ?x1110 ?x1110 ?x764)) (* 9 (* ?x756 ?x756 ?x756 ?x756 ?x990 ?x1110 ?x1110 ?x764)) (* (- 9) (* ?x756 ?x756 ?x990 ?x990 ?x990 ?x1110 ?x764)) (* (- 5) (* ?x1110 ?x1110 ?x1110 ?x1110 ?x764 ?x764 ?x764)) (* (- 9) (* ?x756 ?x1110 ?x1110 ?x1110 ?x764 ?x764 ?x764 ?x764)))))
 (let ((?x763 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x333) (* 9 (* c!3 n!0)))))
 (let (($x456 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x763 4) (= (+ ?x973 k!2 ?x1127 ?x362) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x452 0)))))
 (let (($x133 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x325 (+ 1 n)))
 (let ((?x1104 (* (- 9) (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x926 (* (- 5) (* ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x322 (+ 6 m)))
 (let ((?x1013 (* (- 9) (* ?x325 ?x325 ?x322 ?x322 ?x322 ?x69 ?x68))))
 (let ((?x878 (* 9 (* ?x325 ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x859 (* 4 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x828 (* 9 (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x815 (* 9 (* ?x325 ?x325 ?x322 ?x322 ?x322 ?x69 ?x68 ?x68))))
 (let ((?x806 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x788 (* (- 18) (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x753 (* (- 4) (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x68))))
 (let ((?x711 (* (- 1) (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x69 ?x69 ?x68))))
 (let ((?x685 (* (- 5) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x68))))
 (let ((?x643 (* (- 9) (* ?x325 ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x612 (* 18 (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x68 ?x68))))
 (let ((?x602 (* (- 18) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x574 (* 5 (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x298 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x289 (* 4 (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x801 (+ ?x289 ?x298 ?x574 ?x602 ?x612 ?x643 ?x685 ?x711 ?x753 ?x788 ?x806 ?x815 ?x828 ?x859 ?x878 ?x1013 ?x926 ?x1104)))
 (let (($x314 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x276 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x224 (= (+ ?x40 ?x44 ?x226 ?x227 (* 9 (* c n))) 4)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (and $x140 $x224 $x276 $x314 (not (= ?x801 0))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x205 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x298 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x289 (* 4 (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x322 (+ 6 m)))
 (let ((?x325 (+ 1 n)))
 (let ((?x1013 (* (- 9) (* ?x325 ?x325 ?x322 ?x322 ?x322 ?x69 ?x68))))
 (let ((?x926 (* (- 5) (* ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x878 (* 9 (* ?x325 ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x1104 (* (- 9) (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x859 (* 4 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x828 (* 9 (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x815 (* 9 (* ?x325 ?x325 ?x322 ?x322 ?x322 ?x69 ?x68 ?x68))))
 (let ((?x806 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x788 (* (- 18) (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x753 (* (- 4) (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x68))))
 (let ((?x711 (* (- 1) (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x69 ?x69 ?x68))))
 (let ((?x685 (* (- 5) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x68))))
 (let ((?x643 (* (- 9) (* ?x325 ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x612 (* 18 (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x68 ?x68))))
 (let ((?x602 (* (- 18) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x574 (* 5 (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x458 (+ ?x574 ?x602 ?x612 ?x643 ?x685 ?x711 ?x753 ?x788 ?x806 ?x815 ?x828 ?x859 ?x1104 ?x878 ?x926 ?x1013 ?x289 ?x298)))
 (let (($x544 (not (= ?x458 0))))
 (let (($x541 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x518 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (and $x140 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x226 ?x227) 4) $x518 $x541 $x544))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x331 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x325 (+ 1 n)))
 (let ((?x1104 (* (- 9) (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x926 (* (- 5) (* ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x322 (+ 6 m)))
 (let ((?x1013 (* (- 9) (* ?x325 ?x325 ?x322 ?x322 ?x322 ?x69 ?x68))))
 (let ((?x878 (* 9 (* ?x325 ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x859 (* 4 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x828 (* 9 (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x815 (* 9 (* ?x325 ?x325 ?x322 ?x322 ?x322 ?x69 ?x68 ?x68))))
 (let ((?x806 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x788 (* (- 18) (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x753 (* (- 4) (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x68))))
 (let ((?x711 (* (- 1) (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x69 ?x69 ?x68))))
 (let ((?x685 (* (- 5) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x68))))
 (let ((?x643 (* (- 9) (* ?x325 ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x612 (* 18 (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x68 ?x68))))
 (let ((?x602 (* (- 18) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x574 (* 5 (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x298 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x289 (* 4 (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x801 (+ ?x289 ?x298 ?x574 ?x602 ?x612 ?x643 ?x685 ?x711 ?x753 ?x788 ?x806 ?x815 ?x828 ?x859 ?x878 ?x1013 ?x926 ?x1104)))
 (let (($x314 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x276 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x224 (= (+ ?x40 ?x44 ?x226 ?x227 (* 9 (* c n))) 4)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (let (($x792 (and $x140 $x224 $x276 $x314 (not (= ?x801 0)))))
 (let ((?x458 (+ ?x574 ?x602 ?x612 ?x643 ?x685 ?x711 ?x753 ?x788 ?x806 ?x815 ?x828 ?x859 ?x1104 ?x878 ?x926 ?x1013 ?x289 ?x298)))
 (let (($x544 (not (= ?x458 0))))
 (let (($x541 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x518 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x206 (and $x140 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x226 ?x227) 4) $x518 $x541 $x544)))
 (rewrite (= $x206 $x792)))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x551 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x298 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x289 (* 4 (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x322 (+ 6 m)))
 (let ((?x325 (+ 1 n)))
 (let ((?x1013 (* (- 9) (* ?x325 ?x325 ?x322 ?x322 ?x322 ?x69 ?x68))))
 (let ((?x926 (* (- 5) (* ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x878 (* 9 (* ?x325 ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x1104 (* (- 9) (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x859 (* 4 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x828 (* 9 (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x815 (* 9 (* ?x325 ?x325 ?x322 ?x322 ?x322 ?x69 ?x68 ?x68))))
 (let ((?x806 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x788 (* (- 18) (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x753 (* (- 4) (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x68))))
 (let ((?x711 (* (- 1) (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x69 ?x69 ?x68))))
 (let ((?x685 (* (- 5) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x68))))
 (let ((?x643 (* (- 9) (* ?x325 ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x612 (* 18 (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x68 ?x68))))
 (let ((?x602 (* (- 18) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x574 (* 5 (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x458 (+ ?x574 ?x602 ?x612 ?x643 ?x685 ?x711 ?x753 ?x788 ?x806 ?x815 ?x828 ?x859 ?x1104 ?x878 ?x926 ?x1013 ?x289 ?x298)))
 (let (($x544 (not (= ?x458 0))))
 (let (($x541 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x411 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x356 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (and $x140 (= ?x356 (- 4)) $x411 $x541 $x544))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x202 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x298 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x289 (* 4 (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x322 (+ 6 m)))
 (let ((?x325 (+ 1 n)))
 (let ((?x1013 (* (- 9) (* ?x325 ?x325 ?x322 ?x322 ?x322 ?x69 ?x68))))
 (let ((?x926 (* (- 5) (* ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x878 (* 9 (* ?x325 ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x1104 (* (- 9) (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x859 (* 4 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x828 (* 9 (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x815 (* 9 (* ?x325 ?x325 ?x322 ?x322 ?x322 ?x69 ?x68 ?x68))))
 (let ((?x806 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x788 (* (- 18) (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x753 (* (- 4) (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x68))))
 (let ((?x711 (* (- 1) (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x69 ?x69 ?x68))))
 (let ((?x685 (* (- 5) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x68))))
 (let ((?x643 (* (- 9) (* ?x325 ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x612 (* 18 (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x68 ?x68))))
 (let ((?x602 (* (- 18) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x574 (* 5 (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x458 (+ ?x574 ?x602 ?x612 ?x643 ?x685 ?x711 ?x753 ?x788 ?x806 ?x815 ?x828 ?x859 ?x1104 ?x878 ?x926 ?x1013 ?x289 ?x298)))
 (let (($x544 (not (= ?x458 0))))
 (let (($x541 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x518 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (let (($x206 (and $x140 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x226 ?x227) 4) $x518 $x541 $x544)))
 (let (($x411 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x356 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x585 (and $x140 (= ?x356 (- 4)) $x411 $x541 $x544)))
 (rewrite (= $x585 $x206))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x107 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x101 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x74 (- (* 5 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71) (* 18 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x82 (- (+ ?x74 (* 18 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71)) (* 9 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x84 (- (- ?x82 (* 5 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x86 (- (- ?x84 (* 4 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71)) (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69))))
 (let ((?x91 (+ ?x86 (* ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 9 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x71) (* 4 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x95 (+ (- ?x91 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x71)) (* 9 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x99 (- (- ?x95 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69)) (* 9 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let (($x104 (not (= (+ ?x99 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69) ?x101) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x104)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x580 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x298 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x289 (* 4 (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x322 (+ 6 m)))
 (let ((?x325 (+ 1 n)))
 (let ((?x1013 (* (- 9) (* ?x325 ?x325 ?x322 ?x322 ?x322 ?x69 ?x68))))
 (let ((?x926 (* (- 5) (* ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x878 (* 9 (* ?x325 ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x1104 (* (- 9) (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x859 (* 4 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x828 (* 9 (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x815 (* 9 (* ?x325 ?x325 ?x322 ?x322 ?x322 ?x69 ?x68 ?x68))))
 (let ((?x806 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x788 (* (- 18) (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x753 (* (- 4) (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x68))))
 (let ((?x711 (* (- 1) (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x69 ?x69 ?x68))))
 (let ((?x685 (* (- 5) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x68))))
 (let ((?x643 (* (- 9) (* ?x325 ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x612 (* 18 (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x68 ?x68))))
 (let ((?x602 (* (- 18) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x574 (* 5 (* ?x325 ?x322 ?x322 ?x322 ?x69 ?x69 ?x68))))
 (let ((?x458 (+ ?x574 ?x602 ?x612 ?x643 ?x685 ?x711 ?x753 ?x788 ?x806 ?x815 ?x828 ?x859 ?x1104 ?x878 ?x926 ?x1013 ?x289 ?x298)))
 (let (($x544 (not (= ?x458 0))))
 (let (($x541 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x411 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x356 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (let (($x585 (and $x140 (= ?x356 (- 4)) $x411 $x541 $x544)))
 (let ((?x101 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x74 (- (* 5 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71) (* 18 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x82 (- (+ ?x74 (* 18 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71)) (* 9 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x84 (- (- ?x82 (* 5 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x86 (- (- ?x84 (* 4 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71)) (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69))))
 (let ((?x91 (+ ?x86 (* ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 9 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x71) (* 4 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x95 (+ (- ?x91 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x71)) (* 9 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x99 (- (- ?x95 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69)) (* 9 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let (($x104 (not (= (+ ?x99 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69) ?x101) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x106 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x104))))
 (rewrite (= $x106 $x585)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x108 (asserted $x107)))
 (let ((@x203 (mp (mp @x108 (quant-intro (proof-bind ?x580) (= $x107 $x551)) $x551) (rewrite (= $x551 $x551)) $x551)))
 (let ((@x717 (mp (mp @x203 (quant-intro (proof-bind ?x202) (= $x551 $x205)) $x205) (quant-intro (proof-bind ?x331) (= $x205 $x133)) $x133)))
 (let ((@x581 (mp (mp~ @x717 (sk (~ $x133 $x456)) $x456) (rewrite (= $x456 $x846)) $x846)))
 (let ((@x762 (and-elim @x581 $x644)))
 (let ((@x528 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x644) $x403)) @x762 $x403)))
 (let (($x194 (>= ?x369 (- 1))))
 (let ((@x300 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x644) $x194)) @x762 $x194)))
 (let (($x349 (<= ?x697 1)))
 (let ((@x1018 (and-elim @x581 $x698)))
 (let ((@x130 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x698) $x349)) @x1018 $x349)))
 (let (($x858 (>= ?x697 1)))
 (let ((@x450 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x698) $x858)) @x1018 $x858)))
 (let (($x789 (<= ?x967 (- 4))))
 (let ((@x758 (and-elim @x581 $x981)))
 (let ((@x598 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x981) $x789)) @x758 $x789)))
 (let (($x852 (>= ?x967 (- 4))))
 (let ((@x355 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x981) $x852)) @x758 $x852)))
 (let (($x380 (<= ?x605 (- 6))))
 (let ((@x854 (and-elim @x581 $x1108)))
 (let ((@x426 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1108) $x380)) @x854 $x380)))
 (let (($x388 (>= ?x605 (- 6))))
 (let ((@x527 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1108) $x388)) @x854 $x388)))
 (let (($x732 (not (<= ?x193 0))))
 (let (($x354 (>= ?x193 0)))
 (let ((@x610 ((_ th-lemma arith) (hypothesis (not $x354)) @x300 @x528 @x527 @x426 @x527 @x426 @x300 @x528 @x300 @x528 @x450 @x130 @x300 @x528 @x450 @x130 @x355 @x598 @x450 @x130 @x300 @x528 false)))
 (let ((@x530 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x420 $x732 (not $x354))) (and-elim @x581 $x424) (or $x732 (not $x354)))))
 ((_ th-lemma arith) (unit-resolution @x530 (lemma @x610 $x354) $x732) @x300 @x528 @x527 @x426 @x527 @x426 @x300 @x528 @x300 @x528 @x450 @x130 @x300 @x528 @x450 @x130 @x355 @x598 @x450 @x130 @x300 @x528 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        13
 :arith-assert-upper        28
 :arith-branch-var          2
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           11
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             247
 :arith-nonlinear-bounds    3
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             5
 :arith-patches_succ        1
 :arith-pivots              10
 :arith-row-summations      10
 :arith-tableau-max-columns 49
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 22
 :del-clause                16
 :final-checks              9
 :max-memory                3.84
 :memory                    3.25
 :mk-bool-var               42
 :mk-clause                 16
 :num-allocs                1998710
 :num-checks                1
 :propagations              11
 :rlimit-count              17797
 :time                      0.02
 :total-time                0.02)
