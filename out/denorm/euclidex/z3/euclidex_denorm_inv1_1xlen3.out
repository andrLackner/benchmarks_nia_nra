unsat
((set-logic NIA)
(declare-fun p!5 () Int)
(declare-fun s!0 () Int)
(declare-fun r!1 () Int)
(declare-fun q!3 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(proof
(let ((?x788 (* q!3 r!1)))
 (let ((?x41 (* q00 r00)))
 (let ((?x656 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x687 (+ ?x37 ?x656 ?x788 (* (- 1) (* s!0 p!5)))))
 (let (($x609 (>= ?x687 0)))
 (let (($x890 (= ?x687 0)))
 (let ((?x871 (* s!0 p!5)))
 (let ((?x392 (* (- 1) ?x788)))
 (let ((?x141 (* (- 1) ?x37)))
 (let ((?x685 (+ ?x141 ?x41 ?x392 ?x871)))
 (let ((?x847 (* q!3 b!2 r!1 r!1 r!1)))
 (let ((?x742 (* (- 1) (* q!3 q!3 b!2 b!2 b!2 b!2 s!0 s!0))))
 (let ((?x861 (* (- 1) (* q!3 b!2 s!0 s!0 s!0))))
 (let ((?x738 (* (- 1) q!3)))
 (let ((?x610 (+ ?x738 p!5)))
 (let ((?x818 (* (- 1) b!2)))
 (let ((?x613 (+ ?x818 a!4)))
 (let ((?x821 (* (- 1) s!0)))
 (let ((?x631 (+ ?x821 r!1)))
 (let ((?x607 (* ?x631 ?x631 ?x631 ?x613 ?x613 ?x610 ?x610 ?x610 s!0 s!0 s!0 b!2 b!2 q!3 q!3 q!3)))
 (let ((?x463 (* p!5 r!1 r!1 r!1 a!4)))
 (let ((?x425 (* q!3 b!2 s!0 p!5 r!1 a!4 a!4 a!4)))
 (let ((?x446 (+ (* 3 (* q!3 q!3 b!2 b!2 b!2 s!0 s!0 a!4)) (* q!3 q!3 b!2 s!0 s!0 a!4 a!4 a!4) (* q!3 b!2 b!2 b!2 b!2 s!0 s!0 p!5) (* 3 (* q!3 s!0 r!1 r!1 a!4)) (* 3 (* q!3 b!2 b!2 s!0 s!0 p!5 a!4 a!4)) (* (- 3) (* q!3 b!2 b!2 b!2 s!0 s!0 p!5 a!4)) (* (- 1) (* q!3 b!2 s!0 s!0 p!5 a!4 a!4 a!4)) (* (- 3) (* q!3 q!3 b!2 b!2 s!0 s!0 a!4 a!4)) (* (- 3) (* q!3 s!0 s!0 r!1 a!4)) (* b!2 s!0 s!0 s!0 p!5) (* 3 (* s!0 s!0 p!5 r!1 a!4)) (* (- 1) (* q!3 b!2 b!2 b!2 b!2 s!0 p!5 r!1)) ?x425 (* (- 3) (* s!0 p!5 r!1 r!1 a!4)) (* 3 (* b!2 s!0 p!5 r!1 r!1)) (* 3 (* q!3 b!2 b!2 b!2 s!0 p!5 r!1 a!4)) ?x463 (* (- 1) (* q!3 q!3 b!2 s!0 r!1 a!4 a!4 a!4)) (* (- 3) (* b!2 s!0 s!0 p!5 r!1)) (* 3 (* q!3 b!2 s!0 s!0 r!1)) (* (- 1) (* s!0 s!0 s!0 p!5 a!4)) (* q!3 s!0 s!0 s!0 a!4) ?x607 (* (- 3) (* q!3 b!2 b!2 s!0 p!5 r!1 a!4 a!4)) (* (- 1) (* b!2 p!5 r!1 r!1 r!1)) ?x861 (* (- 1) (* q!3 r!1 r!1 r!1 a!4)) ?x742 ?x847 (* (- 3) (* q!3 b!2 s!0 r!1 r!1)) (* (- 3) (* q!3 q!3 b!2 b!2 b!2 s!0 r!1 a!4)) (* 3 (* q!3 q!3 b!2 b!2 s!0 r!1 a!4 a!4)) (* q!3 q!3 b!2 b!2 b!2 b!2 s!0 r!1))))
 (let ((?x357 (* ?x446 ?x685)))
 (let (($x630 (= ?x357 0)))
 (let ((?x798 (* (- 1) p!5)))
 (let ((?x410 (+ q!3 ?x798)))
 (let ((?x795 (* (- 1) a!4)))
 (let ((?x415 (+ b!2 ?x795)))
 (let ((?x792 (* (- 1) r!1)))
 (let ((?x420 (+ s!0 ?x792)))
 (let ((?x761 (* ?x420 ?x420 ?x420 ?x415 ?x415 ?x410 ?x410 ?x410 r!1 r!1 r!1 a!4 a!4 p!5 p!5 p!5)))
 (let ((?x608 (+ (* (- 1) (* p!5 p!5 r!1 r!1 a!4 a!4 a!4 a!4)) (* q!3 p!5 r!1 r!1 a!4 a!4 a!4 a!4) ?x425 ?x463 (* b!2 p!5 p!5 r!1 r!1 a!4 a!4 a!4) (* (- 1) (* q!3 b!2 p!5 r!1 r!1 a!4 a!4 a!4)) (* s!0 p!5 p!5 r!1 a!4 a!4 a!4 a!4) (* (- 1) (* b!2 s!0 p!5 p!5 r!1 a!4 a!4 a!4)) (* (- 1) (* q!3 s!0 p!5 r!1 a!4 a!4 a!4 a!4)) ?x761)))
 (let ((?x605 (* ?x608 ?x685)))
 (let (($x397 (= ?x605 0)))
 (let (($x604 (not $x397)))
 (let (($x617 (or $x604 (not $x630))))
 (let ((?x419 (+ (* q00 r00 b!2) (* (- 1) (* p00 s00 b!2)) (* p00 b00 s!0) (* (- 1) (* r00 b00 q!3)) (* s00 a00 q!3) (* (- 1) (* q00 a00 s!0)))))
 (let ((?x391 (+ (* p00 b00 r!1) (* (- 1) (* q00 a00 r!1)) (* (- 1) (* p00 s00 a!4)) (* (- 1) (* r00 b00 p!5)) (* s00 a00 p!5) (* q00 r00 a!4))))
 (let ((?x136 (* q00 a00)))
 (let ((?x416 (+ ?x136 (* (- 1) (* p00 b00)) (* b!2 p!5) (* (- 1) (* q!3 a!4)))))
 (let ((?x351 (* b!2 r!1)))
 (let ((?x132 (* s00 a00)))
 (let (($x753 (= (+ ?x132 (* (- 1) (* r00 b00)) ?x351 (* (- 1) (* s!0 a!4))) 0)))
 (let (($x566 (and $x890 $x753 (= ?x416 0) (= ?x391 0) (= ?x419 0) $x617)))
 (let ((?x393 (+ (* p!5 s!0) ?x141 ?x41 ?x392)))
 (let ((?x799 (* p!5 a!4 r!1 r!1 r!1)))
 (let ((?x824 (+ p!5 ?x738)))
 (let ((?x819 (+ a!4 ?x818)))
 (let ((?x826 (+ r!1 ?x821)))
 (let ((?x822 (* ?x826 ?x826 ?x826 ?x819 ?x819 ?x824 ?x824 ?x824 s!0 s!0 s!0 b!2 b!2 q!3 q!3 q!3)))
 (let ((?x796 (* p!5 a!4 a!4 a!4 q!3 b!2 r!1 s!0)))
 (let ((?x866 (+ ?x796 (* (- 3) (* p!5 a!4 a!4 q!3 b!2 b!2 r!1 s!0)) (* 3 (* p!5 a!4 q!3 b!2 b!2 b!2 r!1 s!0)) ?x822 (* (- 1) (* p!5 q!3 b!2 b!2 b!2 b!2 r!1 s!0)) (* (- 1) (* a!4 a!4 a!4 q!3 q!3 b!2 r!1 s!0)) (* 3 (* a!4 a!4 q!3 q!3 b!2 b!2 r!1 s!0)) (* (- 3) (* a!4 q!3 q!3 b!2 b!2 b!2 r!1 s!0)) (* q!3 q!3 b!2 b!2 b!2 b!2 r!1 s!0) (* (- 1) (* p!5 a!4 a!4 a!4 q!3 b!2 s!0 s!0)) (* 3 (* p!5 a!4 a!4 q!3 b!2 b!2 s!0 s!0)) (* (- 3) (* p!5 a!4 q!3 b!2 b!2 b!2 s!0 s!0)) (* p!5 q!3 b!2 b!2 b!2 b!2 s!0 s!0) (* a!4 a!4 a!4 q!3 q!3 b!2 s!0 s!0) (* (- 3) (* a!4 a!4 q!3 q!3 b!2 b!2 s!0 s!0)) (* 3 (* a!4 q!3 q!3 b!2 b!2 b!2 s!0 s!0)) ?x742 ?x799 (* (- 1) (* p!5 b!2 r!1 r!1 r!1)) (* (- 1) (* a!4 q!3 r!1 r!1 r!1)) ?x847 (* (- 3) (* p!5 a!4 r!1 r!1 s!0)) (* 3 (* p!5 b!2 r!1 r!1 s!0)) (* 3 (* a!4 q!3 r!1 r!1 s!0)) (* (- 3) (* q!3 b!2 r!1 r!1 s!0)) (* 3 (* p!5 a!4 r!1 s!0 s!0)) (* (- 3) (* p!5 b!2 r!1 s!0 s!0)) (* (- 3) (* a!4 q!3 r!1 s!0 s!0)) (* 3 (* q!3 b!2 r!1 s!0 s!0)) (* (- 1) (* p!5 a!4 s!0 s!0 s!0)) (* p!5 b!2 s!0 s!0 s!0) (* a!4 q!3 s!0 s!0 s!0) ?x861)))
 (let ((?x800 (+ ?x798 q!3)))
 (let ((?x674 (+ ?x795 b!2)))
 (let ((?x793 (+ ?x792 s!0)))
 (let ((?x735 (* ?x793 ?x793 ?x793 ?x674 ?x674 ?x800 ?x800 ?x800 r!1 r!1 r!1 a!4 a!4 p!5 p!5 p!5)))
 (let ((?x812 (+ ?x735 ?x796 ?x799 (* (- 1) (* p!5 a!4 a!4 a!4 a!4 q!3 r!1 s!0)) (* (- 1) (* p!5 p!5 a!4 a!4 a!4 b!2 r!1 s!0)) (* p!5 p!5 a!4 a!4 a!4 a!4 r!1 s!0) (* (- 1) (* p!5 a!4 a!4 a!4 q!3 b!2 r!1 r!1)) (* p!5 a!4 a!4 a!4 a!4 q!3 r!1 r!1) (* p!5 p!5 a!4 a!4 a!4 b!2 r!1 r!1) (* (- 1) (* p!5 p!5 a!4 a!4 a!4 a!4 r!1 r!1)))))
 (let ((?x790 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x780 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let ((?x137 (* p00 b00)))
 (let ((?x180 (* (- 1) ?x136)))
 (let (($x210 (= (+ (* a!4 s!0) (* (- 1) ?x351) (* (- 1) ?x132) (* r00 b00)) 0)))
 (let (($x683 (and (= ?x393 0) $x210 (= (+ (* a!4 q!3) ?x180 ?x137 (* (- 1) (* p!5 b!2))) 0) (= ?x780 0) (= ?x790 0) (or (not (= (* ?x812 ?x393) 0)) (not (= (* ?x866 ?x393) 0))))))
 (let (($x739 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x125 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x141 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x155 (+ ?x33 ?x141 ?x41 ?x125)))
 (let ((?x925 (* (- 1) (* q b s s s))))
 (let ((?x915 (* a q s s s)))
 (let ((?x910 (* p b s s s)))
 (let ((?x904 (* (- 1) (* p a s s s))))
 (let ((?x938 (* 3 (* q b r s s))))
 (let ((?x937 (* (- 3) (* a q r s s))))
 (let ((?x936 (* (- 3) (* p b r s s))))
 (let ((?x935 (* 3 (* p a r s s))))
 (let ((?x934 (* (- 3) (* q b r r s))))
 (let ((?x933 (* 3 (* a q r r s))))
 (let ((?x932 (* 3 (* p b r r s))))
 (let ((?x931 (* (- 3) (* p a r r s))))
 (let ((?x711 (* q b r r r)))
 (let ((?x705 (* (- 1) (* a q r r r))))
 (let ((?x701 (* (- 1) (* p b r r r))))
 (let ((?x697 (* p a r r r)))
 (let ((?x635 (* (- 1) (* q q b b b b s s))))
 (let ((?x650 (* 3 (* a q q b b b s s))))
 (let ((?x649 (* (- 3) (* a a q q b b s s))))
 (let ((?x575 (* a a a q q b s s)))
 (let ((?x567 (* p q b b b b s s)))
 (let ((?x648 (* (- 3) (* p a q b b b s s))))
 (let ((?x647 (* 3 (* p a a q b b s s))))
 (let ((?x513 (* (- 1) (* p a a a q b s s))))
 (let ((?x501 (* q q b b b b r s)))
 (let ((?x646 (* (- 3) (* a q q b b b r s))))
 (let ((?x645 (* 3 (* a a q q b b r s))))
 (let ((?x447 (* (- 1) (* a a a q q b r s))))
 (let ((?x437 (* (- 1) (* p q b b b b r s))))
 (let ((?x277 (+ p (* (- 1) q))))
 (let ((?x342 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x260 (+ r ?x258)))
 (let ((?x427 (* ?x260 ?x260 ?x260 ?x342 ?x342 ?x277 ?x277 ?x277 s s s b b q q q)))
 (let ((?x644 (* 3 (* p a q b b b r s))))
 (let ((?x642 (* (- 3) (* p a a q b b r s))))
 (let ((?x385 (* p a a a q b r s)))
 (let ((?x1165 (+ ?x385 ?x642 ?x644 ?x427 ?x437 ?x447 ?x645 ?x646 ?x501 ?x513 ?x647 ?x648 ?x567 ?x575 ?x649 ?x650 ?x635 ?x697 ?x701 ?x705 ?x711 ?x931 ?x932 ?x933 ?x934 ?x935 ?x936 ?x937 ?x938 ?x904 ?x910 ?x915 ?x925)))
 (let ((?x1046 (* (- 1) (* p p a a a a r r))))
 (let ((?x1040 (* p p a a a b r r)))
 (let ((?x1032 (* p a a a a q r r)))
 (let ((?x1020 (* (- 1) (* p a a a q b r r))))
 (let ((?x1014 (* p p a a a a r s)))
 (let ((?x1002 (* (- 1) (* p p a a a b r s))))
 (let ((?x992 (* (- 1) (* p a a a a q r s))))
 (let ((?x346 (* (- 1) p)))
 (let ((?x384 (+ ?x346 q)))
 (let ((?x1077 (* (- 1) a)))
 (let ((?x1073 (+ ?x1077 b)))
 (let ((?x1102 (* (- 1) r)))
 (let ((?x269 (+ ?x1102 s)))
 (let ((?x327 (* ?x269 ?x269 ?x269 ?x1073 ?x1073 ?x384 ?x384 ?x384 r r r a a p p p)))
 (let (($x1251 (= (* (+ ?x327 ?x385 ?x697 ?x992 ?x1002 ?x1014 ?x1020 ?x1032 ?x1040 ?x1046) ?x155) 0)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x312 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x317 (= ?x312 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x248 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x249 (= ?x248 0)))
 (let ((?x137 (* p00 b00)))
 (let ((?x136 (* q00 a00)))
 (let ((?x180 (* (- 1) ?x136)))
 (let (($x183 (= (+ (* a q) ?x180 ?x137 (* (- 1) (* p b))) 0)))
 (let ((?x150 (* r00 b00)))
 (let ((?x132 (* s00 a00)))
 (let ((?x139 (* (- 1) ?x132)))
 (let ((?x49 (* a s)))
 (let (($x165 (= (+ ?x49 (* (- 1) (* b r)) ?x139 ?x150) 0)))
 (let (($x160 (= ?x155 0)))
 (and $x160 $x165 $x183 $x249 $x317 (or (not $x1251) (not (= (* ?x1165 ?x155) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x880 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x141 (* (- 1) ?x37)))
 (let ((?x1087 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x141 ?x41)))
 (let ((?x346 (* (- 1) p)))
 (let ((?x1075 (+ q ?x346)))
 (let ((?x1077 (* (- 1) a)))
 (let ((?x1031 (+ b ?x1077)))
 (let ((?x1102 (* (- 1) r)))
 (let ((?x724 (+ s ?x1102)))
 (let ((?x663 (* ?x724 ?x724 ?x724 ?x1031 ?x1031 ?x1075 ?x1075 ?x1075 r r r a a p p p)))
 (let ((?x713 (+ (* ?x724 ?x1031 ?x1075 r a a a p) (* r r r a p) ?x663)))
 (let ((?x726 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x141 ?x41)))
 (let ((?x277 (+ p (* (- 1) q))))
 (let ((?x342 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x260 (+ r ?x258)))
 (let ((?x427 (* ?x260 ?x260 ?x260 ?x342 ?x342 ?x277 ?x277 ?x277 s s s b b q q q)))
 (let ((?x347 (+ (* ?x260 ?x342 ?x342 ?x342 ?x277 s b q) (* ?x260 ?x260 ?x260 ?x342 ?x277) ?x427)))
 (let (($x658 (or (not (= (* ?x347 ?x726) 0)) (not (= (* ?x713 ?x1087) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x629 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x1030 (= ?x629 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x1107 (* p00 s00 a)))
 (let ((?x928 (* b00 r00 p)))
 (let ((?x730 (+ ?x928 ?x1107 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x319 (* q a)))
 (let (($x1013 (= (+ ?x319 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x310 (* r b)))
 (let (($x1045 (= (+ ?x310 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x888 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (and $x888 $x1045 $x1013 (= ?x730 0) $x1030 $x658))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x741 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x125 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x141 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x155 (+ ?x33 ?x141 ?x41 ?x125)))
 (let ((?x925 (* (- 1) (* q b s s s))))
 (let ((?x915 (* a q s s s)))
 (let ((?x910 (* p b s s s)))
 (let ((?x904 (* (- 1) (* p a s s s))))
 (let ((?x938 (* 3 (* q b r s s))))
 (let ((?x937 (* (- 3) (* a q r s s))))
 (let ((?x936 (* (- 3) (* p b r s s))))
 (let ((?x935 (* 3 (* p a r s s))))
 (let ((?x934 (* (- 3) (* q b r r s))))
 (let ((?x933 (* 3 (* a q r r s))))
 (let ((?x932 (* 3 (* p b r r s))))
 (let ((?x931 (* (- 3) (* p a r r s))))
 (let ((?x711 (* q b r r r)))
 (let ((?x705 (* (- 1) (* a q r r r))))
 (let ((?x701 (* (- 1) (* p b r r r))))
 (let ((?x697 (* p a r r r)))
 (let ((?x635 (* (- 1) (* q q b b b b s s))))
 (let ((?x650 (* 3 (* a q q b b b s s))))
 (let ((?x649 (* (- 3) (* a a q q b b s s))))
 (let ((?x575 (* a a a q q b s s)))
 (let ((?x567 (* p q b b b b s s)))
 (let ((?x648 (* (- 3) (* p a q b b b s s))))
 (let ((?x647 (* 3 (* p a a q b b s s))))
 (let ((?x513 (* (- 1) (* p a a a q b s s))))
 (let ((?x501 (* q q b b b b r s)))
 (let ((?x646 (* (- 3) (* a q q b b b r s))))
 (let ((?x645 (* 3 (* a a q q b b r s))))
 (let ((?x447 (* (- 1) (* a a a q q b r s))))
 (let ((?x437 (* (- 1) (* p q b b b b r s))))
 (let ((?x277 (+ p (* (- 1) q))))
 (let ((?x342 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x260 (+ r ?x258)))
 (let ((?x427 (* ?x260 ?x260 ?x260 ?x342 ?x342 ?x277 ?x277 ?x277 s s s b b q q q)))
 (let ((?x644 (* 3 (* p a q b b b r s))))
 (let ((?x642 (* (- 3) (* p a a q b b r s))))
 (let ((?x385 (* p a a a q b r s)))
 (let ((?x1165 (+ ?x385 ?x642 ?x644 ?x427 ?x437 ?x447 ?x645 ?x646 ?x501 ?x513 ?x647 ?x648 ?x567 ?x575 ?x649 ?x650 ?x635 ?x697 ?x701 ?x705 ?x711 ?x931 ?x932 ?x933 ?x934 ?x935 ?x936 ?x937 ?x938 ?x904 ?x910 ?x915 ?x925)))
 (let ((?x1046 (* (- 1) (* p p a a a a r r))))
 (let ((?x1040 (* p p a a a b r r)))
 (let ((?x1032 (* p a a a a q r r)))
 (let ((?x1020 (* (- 1) (* p a a a q b r r))))
 (let ((?x1014 (* p p a a a a r s)))
 (let ((?x1002 (* (- 1) (* p p a a a b r s))))
 (let ((?x992 (* (- 1) (* p a a a a q r s))))
 (let ((?x346 (* (- 1) p)))
 (let ((?x384 (+ ?x346 q)))
 (let ((?x1077 (* (- 1) a)))
 (let ((?x1073 (+ ?x1077 b)))
 (let ((?x1102 (* (- 1) r)))
 (let ((?x269 (+ ?x1102 s)))
 (let ((?x327 (* ?x269 ?x269 ?x269 ?x1073 ?x1073 ?x384 ?x384 ?x384 r r r a a p p p)))
 (let (($x1251 (= (* (+ ?x327 ?x385 ?x697 ?x992 ?x1002 ?x1014 ?x1020 ?x1032 ?x1040 ?x1046) ?x155) 0)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x312 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x317 (= ?x312 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x248 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x249 (= ?x248 0)))
 (let ((?x137 (* p00 b00)))
 (let ((?x136 (* q00 a00)))
 (let ((?x180 (* (- 1) ?x136)))
 (let (($x183 (= (+ (* a q) ?x180 ?x137 (* (- 1) (* p b))) 0)))
 (let ((?x150 (* r00 b00)))
 (let ((?x132 (* s00 a00)))
 (let ((?x139 (* (- 1) ?x132)))
 (let ((?x49 (* a s)))
 (let (($x165 (= (+ ?x49 (* (- 1) (* b r)) ?x139 ?x150) 0)))
 (let (($x160 (= ?x155 0)))
 (let (($x964 (and $x160 $x165 $x183 $x249 $x317 (or (not $x1251) (not (= (* ?x1165 ?x155) 0))))))
 (let ((?x1087 (+ (* (- 1) (* (+ q ?x346) r)) (* (+ s ?x1102) p) ?x141 ?x41)))
 (let ((?x1075 (+ q ?x346)))
 (let ((?x1031 (+ b ?x1077)))
 (let ((?x724 (+ s ?x1102)))
 (let ((?x663 (* ?x724 ?x724 ?x724 ?x1031 ?x1031 ?x1075 ?x1075 ?x1075 r r r a a p p p)))
 (let ((?x713 (+ (* ?x724 ?x1031 ?x1075 r a a a p) (* r r r a p) ?x663)))
 (let ((?x347 (+ (* ?x260 ?x342 ?x342 ?x342 ?x277 s b q) (* ?x260 ?x260 ?x260 ?x342 ?x277) ?x427)))
 (let (($x275 (= (* ?x347 (+ (* (- 1) (* ?x260 q)) (* ?x277 s) ?x141 ?x41)) 0)))
 (let (($x658 (or (not $x275) (not (= (* ?x713 ?x1087) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x629 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x1030 (= ?x629 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x1107 (* p00 s00 a)))
 (let ((?x928 (* b00 r00 p)))
 (let ((?x730 (+ ?x928 ?x1107 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x319 (* q a)))
 (let (($x1013 (= (+ ?x319 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x310 (* r b)))
 (let (($x1045 (= (+ ?x310 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x888 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x1038 (and $x888 $x1045 $x1013 (= ?x730 0) $x1030 $x658)))
 (rewrite (= $x1038 $x964)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x497 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x141 (* (- 1) ?x37)))
 (let ((?x1087 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x141 ?x41)))
 (let ((?x346 (* (- 1) p)))
 (let ((?x1075 (+ q ?x346)))
 (let ((?x1077 (* (- 1) a)))
 (let ((?x1031 (+ b ?x1077)))
 (let ((?x1102 (* (- 1) r)))
 (let ((?x724 (+ s ?x1102)))
 (let ((?x663 (* ?x724 ?x724 ?x724 ?x1031 ?x1031 ?x1075 ?x1075 ?x1075 r r r a a p p p)))
 (let ((?x713 (+ (* ?x724 ?x1031 ?x1075 r a a a p) (* r r r a p) ?x663)))
 (let ((?x726 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x141 ?x41)))
 (let ((?x277 (+ p (* (- 1) q))))
 (let ((?x342 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x260 (+ r ?x258)))
 (let ((?x427 (* ?x260 ?x260 ?x260 ?x342 ?x342 ?x277 ?x277 ?x277 s s s b b q q q)))
 (let ((?x347 (+ (* ?x260 ?x342 ?x342 ?x342 ?x277 s b q) (* ?x260 ?x260 ?x260 ?x342 ?x277) ?x427)))
 (let (($x658 (or (not (= (* ?x347 ?x726) 0)) (not (= (* ?x713 ?x1087) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x629 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x1030 (= ?x629 0)))
 (let ((?x807 (* a00 s00 p)))
 (let ((?x1052 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x520 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x1052 ?x807 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x472 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x1044 (* s a)))
 (let (($x479 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x1044 ?x51) 0)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x141 ?x41) 0) $x479 $x472 (= ?x520 0) $x1030 $x658)))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x568 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x141 (* (- 1) ?x37)))
 (let ((?x1087 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x141 ?x41)))
 (let ((?x346 (* (- 1) p)))
 (let ((?x1075 (+ q ?x346)))
 (let ((?x1077 (* (- 1) a)))
 (let ((?x1031 (+ b ?x1077)))
 (let ((?x1102 (* (- 1) r)))
 (let ((?x724 (+ s ?x1102)))
 (let ((?x663 (* ?x724 ?x724 ?x724 ?x1031 ?x1031 ?x1075 ?x1075 ?x1075 r r r a a p p p)))
 (let ((?x713 (+ (* ?x724 ?x1031 ?x1075 r a a a p) (* r r r a p) ?x663)))
 (let ((?x726 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x141 ?x41)))
 (let ((?x277 (+ p (* (- 1) q))))
 (let ((?x342 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x260 (+ r ?x258)))
 (let ((?x427 (* ?x260 ?x260 ?x260 ?x342 ?x342 ?x277 ?x277 ?x277 s s s b b q q q)))
 (let ((?x347 (+ (* ?x260 ?x342 ?x342 ?x342 ?x277 s b q) (* ?x260 ?x260 ?x260 ?x342 ?x277) ?x427)))
 (let (($x658 (or (not (= (* ?x347 ?x726) 0)) (not (= (* ?x713 ?x1087) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x629 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x1030 (= ?x629 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x1107 (* p00 s00 a)))
 (let ((?x928 (* b00 r00 p)))
 (let ((?x730 (+ ?x928 ?x1107 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x319 (* q a)))
 (let (($x1013 (= (+ ?x319 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x310 (* r b)))
 (let (($x1045 (= (+ ?x310 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x888 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x1038 (and $x888 $x1045 $x1013 (= ?x730 0) $x1030 $x658)))
 (let ((?x807 (* a00 s00 p)))
 (let ((?x1052 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x133 (= (+ (* (- 1) ?x928) (* (- 1) ?x1107) ?x65 ?x1052 ?x807 (* (- 1) ?x69)) 0)))
 (let (($x472 (= (+ (* (- 1) ?x319) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x479 (= (+ (* (- 1) ?x310) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x771 (and (= (+ (* (- 1) (* r q)) (* s p) ?x141 ?x41) 0) $x479 $x472 $x133 $x1030 $x658)))
 (rewrite (= $x771 $x1038)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x116 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x101 (- s r)))
 (let ((?x99 (- q p)))
 (let ((?x106 (- b a)))
 (let ((?x109 (* a a ?x106 ?x106 p p p ?x99 ?x99 ?x99 r r r ?x101 ?x101 ?x101)))
 (let ((?x110 (+ (* a a a ?x106 p ?x99 r ?x101) (* a p r r r) ?x109)))
 (let ((?x41 (* q00 r00)))
 (let ((?x105 (+ (- (+ (* (- 1) ?x99 r) (* p ?x101)) (* p00 s00)) ?x41)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x91 (- a b)))
 (let ((?x94 (* ?x91 ?x91 b b ?x86 ?x86 ?x86 q q q ?x84 ?x84 ?x84 s s s)))
 (let ((?x95 (+ (* ?x91 ?x91 ?x91 b ?x86 q ?x84 s) (* ?x91 ?x86 ?x84 ?x84 ?x84) ?x94)))
 (let ((?x90 (+ (- (+ (* (- 1) q ?x84) (* ?x86 s)) (* p00 s00)) ?x41)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) ?x49 ?x51) 0)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= (* ?x90 ?x95) 0)) (not (= (* ?x105 ?x110) 0)))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x603 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x141 (* (- 1) ?x37)))
 (let ((?x1087 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x141 ?x41)))
 (let ((?x346 (* (- 1) p)))
 (let ((?x1075 (+ q ?x346)))
 (let ((?x1077 (* (- 1) a)))
 (let ((?x1031 (+ b ?x1077)))
 (let ((?x1102 (* (- 1) r)))
 (let ((?x724 (+ s ?x1102)))
 (let ((?x663 (* ?x724 ?x724 ?x724 ?x1031 ?x1031 ?x1075 ?x1075 ?x1075 r r r a a p p p)))
 (let ((?x713 (+ (* ?x724 ?x1031 ?x1075 r a a a p) (* r r r a p) ?x663)))
 (let ((?x726 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x141 ?x41)))
 (let ((?x277 (+ p (* (- 1) q))))
 (let ((?x342 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x260 (+ r ?x258)))
 (let ((?x427 (* ?x260 ?x260 ?x260 ?x342 ?x342 ?x277 ?x277 ?x277 s s s b b q q q)))
 (let ((?x347 (+ (* ?x260 ?x342 ?x342 ?x342 ?x277 s b q) (* ?x260 ?x260 ?x260 ?x342 ?x277) ?x427)))
 (let (($x658 (or (not (= (* ?x347 ?x726) 0)) (not (= (* ?x713 ?x1087) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x629 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x1030 (= ?x629 0)))
 (let ((?x807 (* a00 s00 p)))
 (let ((?x1052 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x520 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x1052 ?x807 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x472 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x1044 (* s a)))
 (let (($x479 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x1044 ?x51) 0)))
 (let (($x771 (and (= (+ (* (- 1) (* r q)) (* s p) ?x141 ?x41) 0) $x479 $x472 (= ?x520 0) $x1030 $x658)))
 (let ((?x101 (- s r)))
 (let ((?x99 (- q p)))
 (let ((?x106 (- b a)))
 (let ((?x109 (* a a ?x106 ?x106 p p p ?x99 ?x99 ?x99 r r r ?x101 ?x101 ?x101)))
 (let ((?x110 (+ (* a a a ?x106 p ?x99 r ?x101) (* a p r r r) ?x109)))
 (let ((?x111 (* (+ (- (+ (* (- 1) ?x99 r) (* p ?x101)) ?x37) ?x41) ?x110)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x91 (- a b)))
 (let ((?x94 (* ?x91 ?x91 b b ?x86 ?x86 ?x86 q q q ?x84 ?x84 ?x84 s s s)))
 (let ((?x95 (+ (* ?x91 ?x91 ?x91 b ?x86 q ?x84 s) (* ?x91 ?x86 ?x84 ?x84 ?x84) ?x94)))
 (let ((?x96 (* (+ (- (+ (* (- 1) q ?x84) (* ?x86 s)) ?x37) ?x41) ?x95)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x115 (and $x44 $x53 $x61 (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x96 0)) (not (= ?x111 0))))))
 (rewrite (= $x115 $x771)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x117 (asserted $x116)))
 (let ((@x591 (mp (mp @x117 (quant-intro (proof-bind ?x603) (= $x116 $x497)) $x497) (rewrite (= $x497 $x497)) $x497)))
 (let ((@x734 (mp (mp @x591 (quant-intro (proof-bind ?x568) (= $x497 $x880)) $x880) (quant-intro (proof-bind ?x741) (= $x880 $x739)) $x739)))
 (let ((@x615 (mp (mp~ @x734 (sk (~ $x739 $x683)) $x683) (rewrite (= $x683 $x566)) $x566)))
 (let ((@x1029 (and-elim @x615 $x890)))
 (let ((@x640 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x890) $x609)) @x1029 $x609)))
 (let (($x614 (<= ?x687 0)))
 (let ((@x616 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x890) $x614)) @x1029 $x614)))
 (let (($x991 (not (<= ?x605 0))))
 (let (($x875 (>= ?x357 0)))
 (let (($x750 (<= ?x357 0)))
 (let ((@x462 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x630 (not $x750) (not $x875))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x750)) @x616 @x640 false) $x750) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x875)) @x616 @x640 false) $x875) $x630)))
 (let (($x878 (>= ?x605 0)))
 (let ((@x348 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x397 $x991 (not $x878))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x878)) @x616 @x640 false) $x878) (unit-resolution (and-elim @x615 $x617) @x462 $x604) $x991)))
 ((_ th-lemma arith farkas 1 1 1) @x348 @x616 @x640 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        3
 :arith-assert-lower        29
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          7
 :arith-fixed-eqs           6
 :arith-max-min             696
 :arith-nonlinear-bounds    10
 :arith-num-rows            14
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 96
 :arith-tableau-max-rows    14
 :conflicts                 4
 :decisions                 7
 :del-clause                15
 :final-checks              4
 :max-memory                3.78
 :memory                    3.19
 :mk-bool-var               27
 :mk-clause                 24
 :num-allocs                1261040
 :num-checks                1
 :propagations              19
 :rlimit-count              7159
 :time                      0.01
 :total-time                0.02)
