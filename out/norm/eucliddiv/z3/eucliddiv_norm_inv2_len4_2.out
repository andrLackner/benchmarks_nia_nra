unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun q!2 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x84 (* y00 q00)))
 (let ((?x1226 (+ r00 ?x84 (* (- 1) (* y00 q!2)) (* (- 1) r!1))))
 (let (($x1426 (<= ?x1226 0)))
 (let (($x1069 (= ?x1226 0)))
 (let ((?x79 (* (- 1) y00)))
 (let ((?x2850 (+ ?x79 r!1)))
 (let ((?x1997 (+ 1 q!2)))
 (let ((?x2342 (* y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x2854 (* (- 1) ?x2342)))
 (let ((?x2164 (* y00 y00 y00 y00 q00)))
 (let ((?x2662 (* (- 1) ?x2164)))
 (let ((?x1882 (* y00 y00 y00 r00)))
 (let ((?x1675 (* (- 1) ?x1882)))
 (let ((?x1343 (* y00 y00 y00 y00)))
 (let ((?x902 (* y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x2926 (* (- 1) ?x902)))
 (let ((?x2916 (* (- 1) (* y00 y00 y00 y00 y00 r00))))
 (let ((?x409 (* y00 y00 y00 q00)))
 (let ((?x299 (* y00 y00 y00 y00 y00 y00 r00)))
 (let ((?x96 (* (- 1) ?x299)))
 (let ((?x134 (* y00 y00 r00)))
 (let ((?x2105 (+ ?x134 ?x96 (* 2 (* y00 y00 y00 y00 y00 q00 r!1)) (* y00 y00 y00 r!1 r!1 r!1) (* (- 3) (* y00 y00 y00 y00 r00 q!2 r!1 r!1)) (* (- 1) (* y00 y00 y00 q!2 q!2 q!2 q!2)) (* (- 3) (* y00 y00 y00 y00 r00 r!1 r!1)) (* 3 (* y00 y00 y00 q00 q!2 q!2)) (* (- 2) (* y00 y00 y00 y00 y00 q!2 r!1)) (* 3 (* y00 y00 y00 y00 y00 q!2 q!2 r!1 r!1)) (* (- 2) (* y00 y00 y00 y00 y00 y00 q!2 r!1)) (* 3 (* y00 y00 y00 y00 y00 r00 r!1)) (* 3 (* y00 y00 y00 y00 y00 r00 q!2 r!1)) (* (- 1) (* y00 y00 y00 y00 y00 y00 r00 q!2)) (* 3 (* y00 y00 r00 q!2)) ?x409 ?x2916 (* y00 y00 y00 y00 q00 r!1 r!1 r!1) (* y00 y00 y00 r00 r!1 r!1 r!1) (* 3 (* y00 y00 y00 y00 y00 y00 q00 r!1)) ?x2926 (* (- 3) (* y00 y00 y00 y00 y00 q00 q!2 r!1 r!1)) (* (- 3) (* y00 y00 y00 y00 y00 q00 r!1 r!1)) (* 3 (* y00 y00 r00 q!2 q!2)) (* y00 y00 y00 r00 q!2 r!1 r!1 r!1) (* (- 1) (* y00 y00 y00 y00 q00 q!2 q!2)) ?x1343 (* y00 y00 y00 y00 y00 y00 y00 q!2) (* (- 3) (* y00 y00 y00 y00 y00 r!1 r!1)) (* y00 y00 y00 q00 q!2 q!2 q!2) (* (- 2) (* y00 y00 y00 y00 r!1 r!1)) (* y00 y00 y00 y00 y00 r!1) (* 3 (* y00 y00 y00 q00 q!2)) (* y00 y00 y00 y00 q!2 r!1 r!1) (* y00 y00 y00 y00 y00 y00 q!2) (* 3 (* y00 y00 y00 y00 r!1 r!1 r!1)) (* 2 (* y00 y00 y00 y00 q!2 r!1 r!1 r!1)) (* (- 1) (* y00 y00 y00 y00 q!2 q!2 r!1 r!1 r!1)) (* (- 1) (* y00 y00 y00 r00 r!1 r!1)) (* 2 (* y00 y00 y00 y00 r00 r!1)) (* y00 y00 y00 y00 y00 y00 r!1) (* (- 3) (* y00 y00 y00 y00 y00 y00 q!2 q!2 r!1)) (* y00 y00 y00 y00 y00 y00 y00 q!2 q!2) (* (- 1) (* y00 y00 r!1)) (* (- 3) (* y00 y00 y00 q!2 q!2)) (* (- 3) (* y00 y00 q!2 r!1)) (* (- 3) (* y00 y00 q!2 q!2 r!1)) ?x1675 (* (- 1) (* y00 y00 q!2 q!2 q!2 r!1)) (* (- 1) (* y00 y00 y00 q!2)) (* (- 3) (* y00 y00 y00 q!2 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 q00 r!1 r!1)) (* y00 q00 r!1 r!1 r!1) ?x2662 (* 3 (* y00 y00 y00 q00 r!1)) (* (- 3) (* y00 y00 q00 q!2 q!2 r!1 r!1)) (* y00 y00 r00 q!2 q!2 q!2) (* y00 y00 y00 y00 q00 q!2 r!1 r!1 r!1) ?x2854 (* (- 6) (* y00 y00 q00 q!2 r!1 r!1)) (* (- 3) (* y00 y00 q00 r!1 r!1)) (* y00 q00 q!2 q!2 r!1 r!1 r!1) (* (- 2) (* y00 y00 y00 y00 q00 q!2)) (* 3 (* y00 y00 y00 q00 q!2 q!2 r!1)) (* 6 (* y00 y00 y00 q00 q!2 r!1)) (* 2 (* y00 q00 q!2 r!1 r!1 r!1)) (* 2 (* r00 q!2 r!1 r!1 r!1)) (* (- 6) (* y00 r00 q!2 r!1 r!1)) (* 9 (* y00 y00 q!2 r!1 r!1)) (* (- 1) (* y00 r!1 r!1 r!1)) (* (- 3) (* y00 q!2 r!1 r!1 r!1)) (* (- 3) (* y00 q!2 q!2 r!1 r!1 r!1)) (* (- 1) (* y00 q!2 q!2 q!2 r!1 r!1 r!1)) (* 3 (* y00 y00 r!1 r!1)) (* 9 (* y00 y00 q!2 q!2 r!1 r!1)) (* 3 (* y00 y00 q!2 q!2 q!2 r!1 r!1)) (* (- 3) (* y00 y00 y00 r!1)) (* (- 9) (* y00 y00 y00 q!2 r!1)) (* (- 9) (* y00 y00 y00 q!2 q!2 r!1)) (* 3 (* y00 y00 y00 y00 q!2)) (* (- 3) (* y00 y00 y00 q!2 q!2 q!2 r!1)) (* 3 (* y00 y00 y00 y00 q!2 q!2)) (* y00 y00 y00 y00 q!2 q!2 q!2) (* (- 1) (* y00 y00 y00 q!2 r!1 r!1 r!1 r!1)) (* (- 1) (* y00 y00 y00 r!1 r!1 r!1 r!1)) (* r00 r!1 r!1 r!1) (* r00 q!2 q!2 r!1 r!1 r!1) (* (- 3) (* y00 r00 r!1 r!1)) (* (- 3) (* y00 r00 q!2 q!2 r!1 r!1)) (* 3 (* y00 y00 r00 r!1)) (* 6 (* y00 y00 r00 q!2 r!1)) (* 3 (* y00 y00 r00 q!2 q!2 r!1)) (* (- 2) (* y00 y00 y00 r00 q!2)) (* (- 1) (* y00 y00 y00 r00 q!2 q!2)) (* (- 1) (* ?x1997 ?x1997 ?x2850 ?x2850 ?x2850 ?x2850)) (* (- 1) (* y00 y00 y00 y00 y00 y00 y00 q00 q!2)) (* 3 (* y00 y00 y00 y00 y00 y00 q00 q!2 r!1)))))
 (let (($x2109 (= ?x2105 0)))
 (let (($x1850 (not $x2109)))
 (let ((?x2062 (+ y00 (* (- 1) y!0))))
 (let (($x2063 (= ?x2062 0)))
 (let (($x2113 (and $x2063 $x1069 $x1850)))
 (let ((?x2008 (+ r!1 ?x79)))
 (let ((?x1992 (+ ?x134 (* 3 (* q!2 y00 y00 r00)) (* 3 (* q!2 q!2 y00 y00 r00)) (* q!2 q!2 q!2 y00 y00 r00) (* r!1 r!1 r!1 y00 y00 y00 r00) (* q!2 r!1 r!1 r!1 y00 y00 y00 r00) (* (- 3) (* r!1 r!1 y00 y00 y00 y00 r00)) (* (- 3) (* q!2 r!1 r!1 y00 y00 y00 y00 r00)) (* 3 (* r!1 y00 y00 y00 y00 y00 r00)) (* 3 (* q!2 r!1 y00 y00 y00 y00 y00 r00)) ?x96 (* (- 1) (* q!2 y00 y00 y00 y00 y00 y00 r00)) (* r!1 r!1 r!1 y00 y00 y00) (* (- 2) (* r!1 r!1 y00 y00 y00 y00)) (* r!1 y00 y00 y00 y00 y00) ?x409 (* 3 (* q!2 y00 y00 y00 q00)) (* 3 (* q!2 q!2 y00 y00 y00 q00)) (* q!2 q!2 q!2 y00 y00 y00 q00) (* q!2 r!1 r!1 y00 y00 y00 y00) (* (- 2) (* q!2 r!1 y00 y00 y00 y00 y00)) (* q!2 y00 y00 y00 y00 y00 y00) (* 3 (* r!1 r!1 r!1 y00 y00 y00 y00)) (* 2 (* q!2 r!1 r!1 r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 r!1 r!1 r!1 y00 y00 y00 y00)) (* (- 1) (* r!1 r!1 y00 y00 y00 r00)) (* (- 3) (* r!1 r!1 y00 y00 y00 y00 y00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00 y00 y00)) (* 2 (* r!1 y00 y00 y00 y00 r00)) (* r!1 y00 y00 y00 y00 y00 y00) ?x2916 (* (- 2) (* q!2 r!1 y00 y00 y00 y00 y00 y00)) (* (- 3) (* q!2 q!2 r!1 y00 y00 y00 y00 y00 y00)) (* q!2 y00 y00 y00 y00 y00 y00 y00) (* q!2 q!2 y00 y00 y00 y00 y00 y00 y00) (* (- 3) (* q!2 r!1 y00 y00)) (* (- 1) (* r!1 y00 y00)) (* (- 3) (* q!2 q!2 r!1 y00 y00)) (* (- 1) (* q!2 q!2 q!2 r!1 y00 y00)) (* (- 1) (* q!2 y00 y00 y00)) (* (- 3) (* q!2 q!2 y00 y00 y00)) (* (- 3) (* q!2 q!2 q!2 y00 y00 y00)) (* (- 1) (* r!1 r!1 y00 y00 y00 y00 q00)) (* 2 (* r!1 y00 y00 y00 y00 y00 q00)) ?x2926 (* (- 1) (* q!2 q!2 q!2 q!2 y00 y00 y00)) (* (- 1) (* r!1 r!1 r!1 y00)) (* (- 3) (* q!2 r!1 r!1 r!1 y00)) (* (- 3) (* q!2 q!2 r!1 r!1 r!1 y00)) (* (- 1) (* q!2 q!2 q!2 r!1 r!1 r!1 y00)) (* 3 (* r!1 r!1 y00 y00)) (* 9 (* q!2 r!1 r!1 y00 y00)) (* 9 (* q!2 q!2 r!1 r!1 y00 y00)) (* 3 (* q!2 q!2 q!2 r!1 r!1 y00 y00)) (* (- 3) (* r!1 y00 y00 y00)) (* (- 9) (* q!2 r!1 y00 y00 y00)) (* (- 9) (* q!2 q!2 r!1 y00 y00 y00)) (* (- 3) (* q!2 q!2 q!2 r!1 y00 y00 y00)) ?x1343 (* 3 (* q!2 y00 y00 y00 y00)) (* 3 (* q!2 q!2 y00 y00 y00 y00)) (* q!2 q!2 q!2 y00 y00 y00 y00) (* (- 1) (* q!2 r!1 r!1 r!1 r!1 y00 y00 y00)) (* (- 1) (* r!1 r!1 r!1 r!1 y00 y00 y00)) (* r!1 r!1 r!1 r00) (* 2 (* q!2 r!1 r!1 r!1 r00)) (* q!2 q!2 r!1 r!1 r!1 r00) (* (- 3) (* r!1 r!1 y00 r00)) (* (- 6) (* q!2 r!1 r!1 y00 r00)) (* (- 3) (* q!2 q!2 r!1 r!1 y00 r00)) (* 3 (* r!1 y00 y00 r00)) (* 6 (* q!2 r!1 y00 y00 r00)) (* 3 (* q!2 q!2 r!1 y00 y00 r00)) ?x1675 (* (- 2) (* q!2 y00 y00 y00 r00)) (* (- 1) (* q!2 q!2 y00 y00 y00 r00)) (* (- 1) (* ?x1997 ?x1997 ?x2008 ?x2008 ?x2008 ?x2008)) (* 2 (* q!2 r!1 r!1 r!1 y00 q00)) (* r!1 r!1 r!1 y00 q00) (* q!2 q!2 r!1 r!1 r!1 y00 q00) (* (- 3) (* r!1 r!1 y00 y00 q00)) (* (- 6) (* q!2 r!1 r!1 y00 y00 q00)) (* (- 3) (* q!2 q!2 r!1 r!1 y00 y00 q00)) (* 3 (* r!1 y00 y00 y00 q00)) (* 6 (* q!2 r!1 y00 y00 y00 q00)) (* 3 (* q!2 q!2 r!1 y00 y00 y00 q00)) ?x2662 (* (- 2) (* q!2 y00 y00 y00 y00 q00)) (* (- 1) (* q!2 q!2 y00 y00 y00 y00 q00)) (* r!1 r!1 r!1 y00 y00 y00 y00 q00) (* q!2 r!1 r!1 r!1 y00 y00 y00 y00 q00) (* (- 3) (* r!1 r!1 y00 y00 y00 y00 y00 q00)) (* (- 3) (* q!2 r!1 r!1 y00 y00 y00 y00 y00 q00)) (* 3 (* r!1 y00 y00 y00 y00 y00 y00 q00)) (* 3 (* q!2 r!1 y00 y00 y00 y00 y00 y00 q00)) ?x2854 (* (- 1) (* q!2 y00 y00 y00 y00 y00 y00 y00 q00)))))
 (let (($x1956 (and (= (+ y!0 ?x79) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x84)) 0) (not (= ?x1992 0)))))
 (let (($x2951 (exists ((q Int) (r Int) (y Int) )(! (let ((?x2342 (* y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x2854 (* (- 1) ?x2342)))
 (let ((?x2239 (* q r r r y00 y00 y00 y00 q00)))
 (let ((?x2236 (* r r r y00 y00 y00 y00 q00)))
 (let ((?x2164 (* y00 y00 y00 y00 q00)))
 (let ((?x2662 (* (- 1) ?x2164)))
 (let ((?x1989 (* q q r r r y00 q00)))
 (let ((?x1931 (* r r r y00 q00)))
 (let ((?x79 (* (- 1) y00)))
 (let ((?x81 (+ r ?x79)))
 (let ((?x112 (+ 1 q)))
 (let ((?x1922 (* ?x112 ?x112 ?x81 ?x81 ?x81 ?x81)))
 (let ((?x937 (* (- 1) ?x1922)))
 (let ((?x1882 (* y00 y00 y00 r00)))
 (let ((?x1675 (* (- 1) ?x1882)))
 (let ((?x1721 (* q q r r r r00)))
 (let ((?x1718 (* r r r r00)))
 (let ((?x1363 (* q q q y00 y00 y00 y00)))
 (let ((?x1343 (* y00 y00 y00 y00)))
 (let ((?x902 (* y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x2926 (* (- 1) ?x902)))
 (let ((?x685 (* q q y00 y00 y00 y00 y00 y00 y00)))
 (let ((?x679 (* q y00 y00 y00 y00 y00 y00 y00)))
 (let ((?x2916 (* (- 1) (* y00 y00 y00 y00 y00 r00))))
 (let ((?x609 (* r y00 y00 y00 y00 y00 y00)))
 (let ((?x483 (* q y00 y00 y00 y00 y00 y00)))
 (let ((?x452 (* q r r y00 y00 y00 y00)))
 (let ((?x434 (* q q q y00 y00 y00 q00)))
 (let ((?x409 (* y00 y00 y00 q00)))
 (let ((?x361 (* r y00 y00 y00 y00 y00)))
 (let ((?x333 (* r r r y00 y00 y00)))
 (let ((?x299 (* y00 y00 y00 y00 y00 y00 r00)))
 (let ((?x96 (* (- 1) ?x299)))
 (let ((?x202 (* q r r r y00 y00 y00 r00)))
 (let ((?x199 (* r r r y00 y00 y00 r00)))
 (let ((?x159 (* q q q y00 y00 r00)))
 (let ((?x134 (* y00 y00 r00)))
 (let ((?x2944 (+ ?x134 (* 3 (* q y00 y00 r00)) (* 3 (* q q y00 y00 r00)) ?x159 ?x199 ?x202 (* (- 3) (* r r y00 y00 y00 y00 r00)) (* (- 3) (* q r r y00 y00 y00 y00 r00)) (* 3 (* r y00 y00 y00 y00 y00 r00)) (* 3 (* q r y00 y00 y00 y00 y00 r00)) ?x96 (* (- 1) (* q y00 y00 y00 y00 y00 y00 r00)) ?x333 (* (- 2) (* r r y00 y00 y00 y00)) ?x361 ?x409 (* 3 (* q y00 y00 y00 q00)) (* 3 (* q q y00 y00 y00 q00)) ?x434 ?x452 (* (- 2) (* q r y00 y00 y00 y00 y00)) ?x483 (* 3 (* r r r y00 y00 y00 y00)) (* 2 (* q r r r y00 y00 y00 y00)) (* (- 1) (* q q r r r y00 y00 y00 y00)) (* (- 1) (* r r y00 y00 y00 r00)) (* (- 3) (* r r y00 y00 y00 y00 y00)) (* 3 (* q q r r y00 y00 y00 y00 y00)) (* 2 (* r y00 y00 y00 y00 r00)) ?x609 ?x2916 (* (- 2) (* q r y00 y00 y00 y00 y00 y00)) (* (- 3) (* q q r y00 y00 y00 y00 y00 y00)) ?x679 ?x685 (* (- 3) (* q r y00 y00)) (* (- 1) (* r y00 y00)) (* (- 3) (* q q r y00 y00)) (* (- 1) (* q q q r y00 y00)) (* (- 1) (* q y00 y00 y00)) (* (- 3) (* q q y00 y00 y00)) (* (- 3) (* q q q y00 y00 y00)) (* (- 1) (* r r y00 y00 y00 y00 q00)) (* 2 (* r y00 y00 y00 y00 y00 q00)) ?x2926 (* (- 1) (* q q q q y00 y00 y00)) (* (- 1) (* r r r y00)) (* (- 3) (* q r r r y00)) (* (- 3) (* q q r r r y00)) (* (- 1) (* q q q r r r y00)) (* 3 (* r r y00 y00)) (* 9 (* q r r y00 y00)) (* 9 (* q q r r y00 y00)) (* 3 (* q q q r r y00 y00)) (* (- 3) (* r y00 y00 y00)) (* (- 9) (* q r y00 y00 y00)) (* (- 9) (* q q r y00 y00 y00)) (* (- 3) (* q q q r y00 y00 y00)) ?x1343 (* 3 (* q y00 y00 y00 y00)) (* 3 (* q q y00 y00 y00 y00)) ?x1363 (* (- 1) (* q r r r r y00 y00 y00)) (* (- 1) (* r r r r y00 y00 y00)) ?x1718 (* 2 (* q r r r r00)) ?x1721 (* (- 3) (* r r y00 r00)) (* (- 6) (* q r r y00 r00)) (* (- 3) (* q q r r y00 r00)) (* 3 (* r y00 y00 r00)) (* 6 (* q r y00 y00 r00)) (* 3 (* q q r y00 y00 r00)) ?x1675 (* (- 2) (* q y00 y00 y00 r00)) (* (- 1) (* q q y00 y00 y00 r00)) ?x937 (* 2 (* q r r r y00 q00)) ?x1931 ?x1989 (* (- 3) (* r r y00 y00 q00)) (* (- 6) (* q r r y00 y00 q00)) (* (- 3) (* q q r r y00 y00 q00)) (* 3 (* r y00 y00 y00 q00)) (* 6 (* q r y00 y00 y00 q00)) (* 3 (* q q r y00 y00 y00 q00)) ?x2662 (* (- 2) (* q y00 y00 y00 y00 q00)) (* (- 1) (* q q y00 y00 y00 y00 q00)) ?x2236 ?x2239 (* (- 3) (* r r y00 y00 y00 y00 y00 q00)) (* (- 3) (* q r r y00 y00 y00 y00 y00 q00)) (* 3 (* r y00 y00 y00 y00 y00 y00 q00)) (* 3 (* q r y00 y00 y00 y00 y00 y00 q00)) ?x2854 (* (- 1) (* q y00 y00 y00 y00 y00 y00 y00 q00)))))
 (let (($x113 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x90 (= (+ y ?x79) 0)))
 (and $x90 $x113 (not (= ?x2944 0))))))))))))))))))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x624 (exists ((q Int) (r Int) (y Int) )(! (let ((?x79 (* (- 1) y00)))
 (let ((?x81 (+ r ?x79)))
 (let ((?x112 (+ 1 q)))
 (let ((?x729 (* q00 y00 y00 y00 y00 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x1922 (* ?x112 ?x112 ?x81 ?x81 ?x81 ?x81)))
 (let ((?x537 (* y00 y00 y00 ?x112 ?x81 ?x81 ?x81 ?x81)))
 (let ((?x653 (* y00 ?x112 ?x112 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x528 (* y00 y00 y00 ?x112 ?x112 ?x112 ?x112)))
 (let ((?x615 (* q00 y00 y00 y00 y00 ?x81 ?x81)))
 (let ((?x582 (* y00 y00 ?x112 ?x112 ?x112 ?x81)))
 (let ((?x602 (* y00 y00 y00 y00 ?x112 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x555 (* r00 y00 y00 y00 ?x81 ?x81)))
 (let ((?x564 (+ ?x555 (* (- 1) (* r00 y00 y00 ?x112 ?x112 ?x112)) (* (- 1) (* r00 y00 y00 y00 ?x112 ?x81 ?x81 ?x81)) (* (- 1) (* y00 y00 y00 ?x81 ?x81 ?x81)) (* (- 1) (* q00 y00 y00 y00 ?x112 ?x112 ?x112)) (* (- 1) (* y00 y00 y00 y00 ?x112 ?x81 ?x81)) ?x602 ?x582 ?x615 ?x528 ?x653 ?x537 (* (- 1) (* r00 ?x112 ?x112 ?x81 ?x81 ?x81)) ?x1922 (* (- 1) (* q00 y00 ?x112 ?x112 ?x81 ?x81 ?x81)) (* (- 1) ?x729))))
 (let (($x576 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x576 (not (= ?x564 0))))))))))))))))) :qid k!29))
 ))
 (let ((?x2953 (lambda ((q Int) (r Int) (y Int) )(let ((?x2342 (* y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x2854 (* (- 1) ?x2342)))
 (let ((?x2239 (* q r r r y00 y00 y00 y00 q00)))
 (let ((?x2236 (* r r r y00 y00 y00 y00 q00)))
 (let ((?x2164 (* y00 y00 y00 y00 q00)))
 (let ((?x2662 (* (- 1) ?x2164)))
 (let ((?x1989 (* q q r r r y00 q00)))
 (let ((?x1931 (* r r r y00 q00)))
 (let ((?x79 (* (- 1) y00)))
 (let ((?x81 (+ r ?x79)))
 (let ((?x112 (+ 1 q)))
 (let ((?x1922 (* ?x112 ?x112 ?x81 ?x81 ?x81 ?x81)))
 (let ((?x937 (* (- 1) ?x1922)))
 (let ((?x1882 (* y00 y00 y00 r00)))
 (let ((?x1675 (* (- 1) ?x1882)))
 (let ((?x1721 (* q q r r r r00)))
 (let ((?x1718 (* r r r r00)))
 (let ((?x1363 (* q q q y00 y00 y00 y00)))
 (let ((?x1343 (* y00 y00 y00 y00)))
 (let ((?x902 (* y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x2926 (* (- 1) ?x902)))
 (let ((?x685 (* q q y00 y00 y00 y00 y00 y00 y00)))
 (let ((?x679 (* q y00 y00 y00 y00 y00 y00 y00)))
 (let ((?x2916 (* (- 1) (* y00 y00 y00 y00 y00 r00))))
 (let ((?x609 (* r y00 y00 y00 y00 y00 y00)))
 (let ((?x483 (* q y00 y00 y00 y00 y00 y00)))
 (let ((?x452 (* q r r y00 y00 y00 y00)))
 (let ((?x434 (* q q q y00 y00 y00 q00)))
 (let ((?x409 (* y00 y00 y00 q00)))
 (let ((?x361 (* r y00 y00 y00 y00 y00)))
 (let ((?x333 (* r r r y00 y00 y00)))
 (let ((?x299 (* y00 y00 y00 y00 y00 y00 r00)))
 (let ((?x96 (* (- 1) ?x299)))
 (let ((?x202 (* q r r r y00 y00 y00 r00)))
 (let ((?x199 (* r r r y00 y00 y00 r00)))
 (let ((?x159 (* q q q y00 y00 r00)))
 (let ((?x134 (* y00 y00 r00)))
 (let ((?x2944 (+ ?x134 (* 3 (* q y00 y00 r00)) (* 3 (* q q y00 y00 r00)) ?x159 ?x199 ?x202 (* (- 3) (* r r y00 y00 y00 y00 r00)) (* (- 3) (* q r r y00 y00 y00 y00 r00)) (* 3 (* r y00 y00 y00 y00 y00 r00)) (* 3 (* q r y00 y00 y00 y00 y00 r00)) ?x96 (* (- 1) (* q y00 y00 y00 y00 y00 y00 r00)) ?x333 (* (- 2) (* r r y00 y00 y00 y00)) ?x361 ?x409 (* 3 (* q y00 y00 y00 q00)) (* 3 (* q q y00 y00 y00 q00)) ?x434 ?x452 (* (- 2) (* q r y00 y00 y00 y00 y00)) ?x483 (* 3 (* r r r y00 y00 y00 y00)) (* 2 (* q r r r y00 y00 y00 y00)) (* (- 1) (* q q r r r y00 y00 y00 y00)) (* (- 1) (* r r y00 y00 y00 r00)) (* (- 3) (* r r y00 y00 y00 y00 y00)) (* 3 (* q q r r y00 y00 y00 y00 y00)) (* 2 (* r y00 y00 y00 y00 r00)) ?x609 ?x2916 (* (- 2) (* q r y00 y00 y00 y00 y00 y00)) (* (- 3) (* q q r y00 y00 y00 y00 y00 y00)) ?x679 ?x685 (* (- 3) (* q r y00 y00)) (* (- 1) (* r y00 y00)) (* (- 3) (* q q r y00 y00)) (* (- 1) (* q q q r y00 y00)) (* (- 1) (* q y00 y00 y00)) (* (- 3) (* q q y00 y00 y00)) (* (- 3) (* q q q y00 y00 y00)) (* (- 1) (* r r y00 y00 y00 y00 q00)) (* 2 (* r y00 y00 y00 y00 y00 q00)) ?x2926 (* (- 1) (* q q q q y00 y00 y00)) (* (- 1) (* r r r y00)) (* (- 3) (* q r r r y00)) (* (- 3) (* q q r r r y00)) (* (- 1) (* q q q r r r y00)) (* 3 (* r r y00 y00)) (* 9 (* q r r y00 y00)) (* 9 (* q q r r y00 y00)) (* 3 (* q q q r r y00 y00)) (* (- 3) (* r y00 y00 y00)) (* (- 9) (* q r y00 y00 y00)) (* (- 9) (* q q r y00 y00 y00)) (* (- 3) (* q q q r y00 y00 y00)) ?x1343 (* 3 (* q y00 y00 y00 y00)) (* 3 (* q q y00 y00 y00 y00)) ?x1363 (* (- 1) (* q r r r r y00 y00 y00)) (* (- 1) (* r r r r y00 y00 y00)) ?x1718 (* 2 (* q r r r r00)) ?x1721 (* (- 3) (* r r y00 r00)) (* (- 6) (* q r r y00 r00)) (* (- 3) (* q q r r y00 r00)) (* 3 (* r y00 y00 r00)) (* 6 (* q r y00 y00 r00)) (* 3 (* q q r y00 y00 r00)) ?x1675 (* (- 2) (* q y00 y00 y00 r00)) (* (- 1) (* q q y00 y00 y00 r00)) ?x937 (* 2 (* q r r r y00 q00)) ?x1931 ?x1989 (* (- 3) (* r r y00 y00 q00)) (* (- 6) (* q r r y00 y00 q00)) (* (- 3) (* q q r r y00 y00 q00)) (* 3 (* r y00 y00 y00 q00)) (* 6 (* q r y00 y00 y00 q00)) (* 3 (* q q r y00 y00 y00 q00)) ?x2662 (* (- 2) (* q y00 y00 y00 y00 q00)) (* (- 1) (* q q y00 y00 y00 y00 q00)) ?x2236 ?x2239 (* (- 3) (* r r y00 y00 y00 y00 y00 q00)) (* (- 3) (* q r r y00 y00 y00 y00 y00 q00)) (* 3 (* r y00 y00 y00 y00 y00 y00 q00)) (* 3 (* q r y00 y00 y00 y00 y00 y00 q00)) ?x2854 (* (- 1) (* q y00 y00 y00 y00 y00 y00 y00 q00)))))
 (let (($x113 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x90 (= (+ y ?x79) 0)))
 (let (($x707 (and $x90 $x113 (not (= ?x2944 0)))))
 (let ((?x537 (* y00 y00 y00 ?x112 ?x81 ?x81 ?x81 ?x81)))
 (let ((?x653 (* y00 ?x112 ?x112 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x528 (* y00 y00 y00 ?x112 ?x112 ?x112 ?x112)))
 (let ((?x615 (* q00 y00 y00 y00 y00 ?x81 ?x81)))
 (let ((?x582 (* y00 y00 ?x112 ?x112 ?x112 ?x81)))
 (let ((?x602 (* y00 y00 y00 y00 ?x112 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x555 (* r00 y00 y00 y00 ?x81 ?x81)))
 (let ((?x564 (+ ?x555 (* (- 1) (* r00 y00 y00 ?x112 ?x112 ?x112)) (* (- 1) (* r00 y00 y00 y00 ?x112 ?x81 ?x81 ?x81)) (* (- 1) (* y00 y00 y00 ?x81 ?x81 ?x81)) (* (- 1) (* q00 y00 y00 y00 ?x112 ?x112 ?x112)) (* (- 1) (* y00 y00 y00 y00 ?x112 ?x81 ?x81)) ?x602 ?x582 ?x615 ?x528 ?x653 ?x537 (* (- 1) (* r00 ?x112 ?x112 ?x81 ?x81 ?x81)) ?x1922 (* (- 1) (* q00 y00 ?x112 ?x112 ?x81 ?x81 ?x81)) (* (- 1) (* q00 y00 y00 y00 y00 ?x112 ?x81 ?x81 ?x81)))))
 (let (($x576 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x607 (and (= (+ y00 (* (- 1) y)) 0) $x576 (not (= ?x564 0)))))
 (rewrite (= $x607 $x707))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x611 (exists ((q Int) (r Int) (y Int) )(! (let ((?x79 (* (- 1) y00)))
 (let ((?x81 (+ r ?x79)))
 (let ((?x112 (+ 1 q)))
 (let ((?x729 (* q00 y00 y00 y00 y00 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x721 (* q00 y00 ?x112 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x1922 (* ?x112 ?x112 ?x81 ?x81 ?x81 ?x81)))
 (let ((?x937 (* (- 1) ?x1922)))
 (let ((?x691 (* r00 ?x112 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x606 (* y00 y00 y00 y00 ?x112 ?x81 ?x81)))
 (let ((?x596 (* q00 y00 y00 y00 ?x112 ?x112 ?x112)))
 (let ((?x589 (* y00 y00 y00 ?x81 ?x81 ?x81)))
 (let ((?x584 (* r00 y00 y00 y00 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x571 (* r00 y00 y00 ?x112 ?x112 ?x112)))
 (let ((?x757 (+ (* (- 1) (* r00 y00 y00 y00 ?x81 ?x81)) ?x571 ?x584 ?x589 ?x596 ?x606 (* (- 1) (* y00 y00 y00 y00 ?x112 ?x112 ?x81 ?x81 ?x81)) (* (- 1) (* y00 y00 ?x112 ?x112 ?x112 ?x81)) (* (- 1) (* q00 y00 y00 y00 y00 ?x81 ?x81)) (* (- 1) (* y00 y00 y00 ?x112 ?x112 ?x112 ?x112)) (* (- 1) (* y00 ?x112 ?x112 ?x112 ?x81 ?x81 ?x81)) (* (- 1) (* y00 y00 y00 ?x112 ?x81 ?x81 ?x81 ?x81)) ?x691 ?x937 ?x721 ?x729)))
 (let (($x576 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x79 y) 0) $x576 (not (= ?x757 0)))))))))))))))))) :qid k!29))
 ))
 (let ((?x531 (lambda ((q Int) (r Int) (y Int) )(let ((?x79 (* (- 1) y00)))
 (let ((?x81 (+ r ?x79)))
 (let ((?x112 (+ 1 q)))
 (let ((?x729 (* q00 y00 y00 y00 y00 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x1922 (* ?x112 ?x112 ?x81 ?x81 ?x81 ?x81)))
 (let ((?x537 (* y00 y00 y00 ?x112 ?x81 ?x81 ?x81 ?x81)))
 (let ((?x653 (* y00 ?x112 ?x112 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x528 (* y00 y00 y00 ?x112 ?x112 ?x112 ?x112)))
 (let ((?x615 (* q00 y00 y00 y00 y00 ?x81 ?x81)))
 (let ((?x582 (* y00 y00 ?x112 ?x112 ?x112 ?x81)))
 (let ((?x602 (* y00 y00 y00 y00 ?x112 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x555 (* r00 y00 y00 y00 ?x81 ?x81)))
 (let ((?x564 (+ ?x555 (* (- 1) (* r00 y00 y00 ?x112 ?x112 ?x112)) (* (- 1) (* r00 y00 y00 y00 ?x112 ?x81 ?x81 ?x81)) (* (- 1) (* y00 y00 y00 ?x81 ?x81 ?x81)) (* (- 1) (* q00 y00 y00 y00 ?x112 ?x112 ?x112)) (* (- 1) (* y00 y00 y00 y00 ?x112 ?x81 ?x81)) ?x602 ?x582 ?x615 ?x528 ?x653 ?x537 (* (- 1) (* r00 ?x112 ?x112 ?x81 ?x81 ?x81)) ?x1922 (* (- 1) (* q00 y00 ?x112 ?x112 ?x81 ?x81 ?x81)) (* (- 1) ?x729))))
 (let (($x576 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x607 (and (= (+ y00 (* (- 1) y)) 0) $x576 (not (= ?x564 0)))))
 (let ((?x721 (* q00 y00 ?x112 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x937 (* (- 1) ?x1922)))
 (let ((?x691 (* r00 ?x112 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x606 (* y00 y00 y00 y00 ?x112 ?x81 ?x81)))
 (let ((?x596 (* q00 y00 y00 y00 ?x112 ?x112 ?x112)))
 (let ((?x589 (* y00 y00 y00 ?x81 ?x81 ?x81)))
 (let ((?x584 (* r00 y00 y00 y00 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x571 (* r00 y00 y00 ?x112 ?x112 ?x112)))
 (let ((?x757 (+ (* (- 1) ?x555) ?x571 ?x584 ?x589 ?x596 ?x606 (* (- 1) ?x602) (* (- 1) ?x582) (* (- 1) ?x615) (* (- 1) ?x528) (* (- 1) ?x653) (* (- 1) ?x537) ?x691 ?x937 ?x721 ?x729)))
 (let (($x521 (and (= (+ ?x79 y) 0) $x576 (not (= ?x757 0)))))
 (rewrite (= $x521 $x607))))))))))))))))))))))))))))
 ))
 (let (($x74 (exists ((q Int) (r Int) (y Int) )(! (let ((?x42 (- r y00)))
 (let ((?x44 (+ q 1)))
 (let ((?x50 (+ (* (- 1) ?x42 ?x42 r00 y00 y00 y00) (* ?x44 ?x44 ?x44 r00 y00 y00) (* ?x44 ?x42 ?x42 ?x42 r00 y00 y00 y00) (* ?x42 ?x42 ?x42 y00 y00 y00) (* ?x44 ?x44 ?x44 q00 y00 y00 y00) (* ?x44 ?x42 ?x42 y00 y00 y00 y00))))
 (let ((?x58 (- (- ?x50 (* ?x44 ?x44 ?x42 ?x42 ?x42 y00 y00 y00 y00)) (* ?x44 ?x44 ?x44 ?x42 y00 y00))))
 (let ((?x60 (- (- ?x58 (* q00 ?x42 ?x42 y00 y00 y00 y00)) (* ?x44 ?x44 ?x44 ?x44 y00 y00 y00))))
 (let ((?x62 (- (- ?x60 (* ?x44 ?x44 ?x44 ?x42 ?x42 ?x42 y00)) (* ?x44 ?x42 ?x42 ?x42 ?x42 y00 y00 y00))))
 (let ((?x66 (- (+ ?x62 (* ?x44 ?x44 ?x42 ?x42 ?x42 r00)) (* ?x44 ?x44 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x69 (+ ?x66 (* ?x44 ?x44 q00 ?x42 ?x42 ?x42 y00) (* ?x44 q00 ?x42 ?x42 ?x42 y00 y00 y00 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x69 0)))))))))))) :qid k!29))
 ))
 (let ((?x601 (lambda ((q Int) (r Int) (y Int) )(let ((?x79 (* (- 1) y00)))
 (let ((?x81 (+ r ?x79)))
 (let ((?x112 (+ 1 q)))
 (let ((?x729 (* q00 y00 y00 y00 y00 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x721 (* q00 y00 ?x112 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x1922 (* ?x112 ?x112 ?x81 ?x81 ?x81 ?x81)))
 (let ((?x937 (* (- 1) ?x1922)))
 (let ((?x691 (* r00 ?x112 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x606 (* y00 y00 y00 y00 ?x112 ?x81 ?x81)))
 (let ((?x596 (* q00 y00 y00 y00 ?x112 ?x112 ?x112)))
 (let ((?x589 (* y00 y00 y00 ?x81 ?x81 ?x81)))
 (let ((?x584 (* r00 y00 y00 y00 ?x112 ?x81 ?x81 ?x81)))
 (let ((?x571 (* r00 y00 y00 ?x112 ?x112 ?x112)))
 (let ((?x757 (+ (* (- 1) (* r00 y00 y00 y00 ?x81 ?x81)) ?x571 ?x584 ?x589 ?x596 ?x606 (* (- 1) (* y00 y00 y00 y00 ?x112 ?x112 ?x81 ?x81 ?x81)) (* (- 1) (* y00 y00 ?x112 ?x112 ?x112 ?x81)) (* (- 1) (* q00 y00 y00 y00 y00 ?x81 ?x81)) (* (- 1) (* y00 y00 y00 ?x112 ?x112 ?x112 ?x112)) (* (- 1) (* y00 ?x112 ?x112 ?x112 ?x81 ?x81 ?x81)) (* (- 1) (* y00 y00 y00 ?x112 ?x81 ?x81 ?x81 ?x81)) ?x691 ?x937 ?x721 ?x729)))
 (let (($x576 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x521 (and (= (+ ?x79 y) 0) $x576 (not (= ?x757 0)))))
 (let ((?x42 (- r y00)))
 (let ((?x44 (+ q 1)))
 (let ((?x50 (+ (* (- 1) ?x42 ?x42 r00 y00 y00 y00) (* ?x44 ?x44 ?x44 r00 y00 y00) (* ?x44 ?x42 ?x42 ?x42 r00 y00 y00 y00) (* ?x42 ?x42 ?x42 y00 y00 y00) (* ?x44 ?x44 ?x44 q00 y00 y00 y00) (* ?x44 ?x42 ?x42 y00 y00 y00 y00))))
 (let ((?x58 (- (- ?x50 (* ?x44 ?x44 ?x42 ?x42 ?x42 y00 y00 y00 y00)) (* ?x44 ?x44 ?x44 ?x42 y00 y00))))
 (let ((?x60 (- (- ?x58 (* q00 ?x42 ?x42 y00 y00 y00 y00)) (* ?x44 ?x44 ?x44 ?x44 y00 y00 y00))))
 (let ((?x62 (- (- ?x60 (* ?x44 ?x44 ?x44 ?x42 ?x42 ?x42 y00)) (* ?x44 ?x42 ?x42 ?x42 ?x42 y00 y00 y00))))
 (let ((?x66 (- (+ ?x62 (* ?x44 ?x44 ?x42 ?x42 ?x42 r00)) (* ?x44 ?x44 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x69 (+ ?x66 (* ?x44 ?x44 q00 ?x42 ?x42 ?x42 y00) (* ?x44 q00 ?x42 ?x42 ?x42 y00 y00 y00 y00))))
 (let (($x73 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x69 0))))))
 (rewrite (= $x73 $x521))))))))))))))))))))))))))))
 ))
 (let ((@x75 (asserted $x74)))
 (let ((@x646 (mp (mp @x75 (quant-intro (proof-bind ?x601) (= $x74 $x611)) $x611) (rewrite (= $x611 $x611)) $x611)))
 (let ((@x2827 (mp (mp @x646 (quant-intro (proof-bind ?x531) (= $x611 $x624)) $x624) (quant-intro (proof-bind ?x2953) (= $x624 $x2951)) $x2951)))
 (let ((@x1858 (mp (mp~ @x2827 (sk (~ $x2951 $x1956)) $x1956) (rewrite (= $x1956 $x2113)) $x2113)))
 (let ((@x1954 (and-elim @x1858 $x1069)))
 (let ((@x2126 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1069) $x1426)) @x1954 $x1426)))
 (let (($x1519 (>= ?x1226 0)))
 (let ((@x2909 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1069) $x1519)) @x1954 $x1519)))
 (let (($x364 (<= ?x2062 0)))
 (let ((@x760 (and-elim @x1858 $x2063)))
 (let ((@x2196 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2063) $x364)) @x760 $x364)))
 (let (($x1515 (>= ?x2062 0)))
 (let ((@x2373 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2063) $x1515)) @x760 $x1515)))
 (let (($x2195 (not (<= ?x2105 0))))
 (let (($x1510 (>= ?x2105 0)))
 (let ((@x2372 ((_ th-lemma arith) (hypothesis (not $x1510)) @x2373 @x2196 @x2373 @x2196 @x2909 @x2126 false)))
 (let ((@x2194 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2109 $x2195 (not $x1510))) (and-elim @x1858 $x1850) (or $x2195 (not $x1510)))))
 ((_ th-lemma arith) (unit-resolution @x2194 (lemma @x2372 $x1510) $x2195) @x2373 @x2196 @x2373 @x2196 @x2909 @x2126 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        16
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-grobner             2
 :arith-max-min             836
 :arith-nonlinear-bounds    12
 :arith-nonlinear-horner    10
 :arith-num-rows            5
 :arith-offset-eqs          1
 :arith-pivots              3
 :arith-row-summations      1
 :arith-tableau-max-columns 121
 :arith-tableau-max-rows    5
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                4.01
 :memory                    3.35
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1735527
 :num-checks                1
 :propagations              6
 :rlimit-count              16082
 :time                      0.02
 :total-time                0.02)
