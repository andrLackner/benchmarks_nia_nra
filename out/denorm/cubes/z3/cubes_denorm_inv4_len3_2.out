unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x368 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x858 (<= ?x368 1)))
 (let (($x190 (= ?x368 1)))
 (let ((?x350 (+ c!3 k!2)))
 (let ((?x340 (+ k!2 m!1)))
 (let ((?x335 (+ 6 m!1)))
 (let ((?x132 (+ 1 n!0)))
 (let ((?x1502 (* ?x132 ?x132 ?x132 ?x335 ?x340 ?x340 ?x350 ?x350 n!0)))
 (let ((?x615 (* ?x132 ?x132 ?x335 ?x335 ?x335 ?x340 ?x340 ?x340 ?x350 ?x350 n!0 n!0)))
 (let ((?x345 (* ?x132 ?x132 ?x335 ?x335 ?x335 ?x340 ?x340 ?x340 ?x350 ?x350 m!1)))
 (let ((?x310 (* ?x132 ?x132 ?x335 ?x335 ?x335 ?x340 ?x340 ?x340 ?x350 ?x350 k!2)))
 (let ((?x188 (* ?x132 ?x132 ?x335 ?x335 ?x335 ?x340 ?x340 ?x340 ?x350 ?x350 n!0)))
 (let ((?x566 (+ (* 324 (* m!1 m!1 n!0)) (* 756 (* k!2 k!2 n!0 n!0)) (* (- 108) (* k!2 k!2 m!1)) (* (- 108) (* k!2 m!1 m!1)) (* 396 (* k!2 m!1 m!1 n!0 n!0)) (* (- 36) (* k!2 m!1 m!1 m!1)) (* (- 3) (* k!2 k!2 m!1 m!1 m!1 n!0 n!0)) (* (- 54) (* k!2 m!1 m!1 m!1 n!0)) (* 648 (* k!2 m!1 n!0)) (* 1080 (* k!2 m!1 n!0 n!0 n!0)) (* (- 15) (* m!1 m!1 m!1 m!1 n!0)) (* 15 (* k!2 k!2 m!1 m!1 n!0 n!0 n!0)) (* 144 (* k!2 k!2 m!1 n!0 n!0)) (* 540 (* k!2 k!2 n!0 n!0 n!0)) (* 216 (* k!2 m!1 n!0 n!0 n!0 n!0)) (* 36 (* k!2 k!2 m!1 n!0 n!0 n!0 n!0)) (* 9 ?x188) (* 9 (* m!1 m!1 m!1 m!1 n!0 n!0)) (* (- 36) (* k!2 k!2 m!1 m!1)) (* 108 (* k!2 k!2 n!0 n!0 n!0 n!0)) (* (- 1) (* m!1 m!1 m!1 m!1 m!1 n!0 n!0)) (* (- 12) (* k!2 k!2 k!2 m!1 n!0 n!0)) (* 7 (* ?x132 ?x132 ?x335 ?x335 ?x335 ?x340 ?x340 ?x340 ?x350 ?x350)) (* 1512 (* k!2 m!1 n!0 n!0)) (* (- 108) (* k!2 k!2 m!1 n!0)) (* (- 1) ?x310) (* (- 1) (* m!1 m!1 m!1 m!1 m!1)) (* 216 (* m!1 m!1 m!1 n!0 n!0)) (* (- 1) (* k!2 k!2 k!2 m!1 m!1)) (* (- 72) (* k!2 k!2 k!2 n!0)) (* (- 36) (* m!1 m!1 m!1)) (* 36 (* m!1 m!1 m!1 n!0)) (* (- 12) (* m!1 m!1 m!1 m!1)) (* 30 (* k!2 m!1 m!1 m!1 n!0 n!0 n!0)) (* (- 2) (* m!1 m!1 m!1 m!1 m!1 n!0)) (* 360 (* k!2 m!1 m!1 n!0 n!0 n!0)) (* 756 (* m!1 m!1 n!0 n!0)) (* (- 12) (* k!2 k!2 k!2 m!1)) (* (- 15) (* k!2 k!2 m!1 m!1 n!0 n!0)) (* (- 3) (* k!2 m!1 m!1 m!1 m!1)) (* 7 (* ?x132 ?x132 ?x335 ?x335 ?x340 ?x340)) (* (- 1) ?x345) (* (- 1) (* ?x132 ?x132 ?x132 ?x335 ?x340 ?x340 ?x350 ?x350 k!2)) (* 3 (* k!2 k!2 m!1 m!1 n!0 n!0 n!0 n!0)) (* (- 36) (* k!2 k!2 k!2 n!0 n!0)) (* 324 (* k!2 k!2 n!0)) (* 7 (* ?x132 ?x132 ?x132 ?x335 ?x340 ?x340 ?x350 ?x350)) (* 72 (* k!2 m!1 m!1 n!0 n!0 n!0 n!0)) (* (- 24) (* k!2 k!2 k!2 m!1 n!0)) (* 6 (* k!2 m!1 m!1 m!1 n!0 n!0 n!0 n!0)) (* 108 (* m!1 m!1 n!0 n!0 n!0 n!0)) (* 36 (* m!1 m!1 m!1 n!0 n!0 n!0 n!0)) (* 3 (* m!1 m!1 m!1 m!1 n!0 n!0 n!0 n!0)) (* (- 3) (* k!2 m!1 m!1 m!1 m!1 n!0 n!0)) (* (- 6) (* k!2 k!2 m!1 m!1 m!1 n!0)) (* (- 2) (* k!2 k!2 k!2 m!1 m!1 n!0)) (* (- 36) (* k!2 k!2 k!2)) (* 6 (* k!2 m!1 m!1 m!1 n!0 n!0)) (* 3 ?x615) (* 3 (* ?x132 ?x132 ?x132 ?x335 ?x340 ?x340 ?x350 ?x350 n!0 n!0)) (* 180 (* k!2 k!2 m!1 n!0 n!0 n!0)) (* (- 3) (* k!2 k!2 m!1 m!1 m!1)) (* (- 6) (* k!2 m!1 m!1 m!1 m!1 n!0)) (* 540 (* m!1 m!1 n!0 n!0 n!0)) (* (- 63) (* k!2 k!2 m!1 m!1 n!0)) (* (- 1) (* k!2 k!2 k!2 m!1 m!1 n!0 n!0)) (* (- 1) (* ?x132 ?x132 ?x132 ?x335 ?x340 ?x340 ?x350 ?x350 m!1)) (* 9 ?x1502) (* 15 (* m!1 m!1 m!1 m!1 n!0 n!0 n!0)) (* 180 (* m!1 m!1 m!1 n!0 n!0 n!0)))))
 (let (($x561 (= ?x566 0)))
 (let (($x572 (not $x561)))
 (let ((?x242 (* (- 2) n!0)))
 (let ((?x218 (* (- 1) (* k!2 n!0))))
 (let ((?x236 (* 3 c!3)))
 (let ((?x631 (+ ?x236 ?x218 k!2 ?x242)))
 (let (($x540 (= ?x631 1)))
 (let ((?x155 (* (- 9) n!0)))
 (let ((?x171 (* (- 1) (* k!2 k!2))))
 (let ((?x243 (* 9 (* c!3 n!0))))
 (let ((?x275 (* 5 k!2)))
 (let ((?x277 (* 18 c!3)))
 (let ((?x630 (+ ?x277 ?x275 ?x243 ?x171 ?x155)))
 (let (($x536 (= ?x630 4)))
 (let ((?x289 (+ m!1 (* (- 6) n!0))))
 (let (($x272 (= ?x289 6)))
 (let (($x751 (and $x272 $x536 $x540 $x190 $x572)))
 (let ((?x1496 (* ?x132 ?x132 ?x132 ?x335 ?x340 ?x340 ?x350 ?x350 m!1)))
 (let ((?x269 (* m!1 m!1 m!1 m!1 m!1 n!0 n!0)))
 (let ((?x314 (* m!1 m!1 m!1 m!1 m!1)))
 (let ((?x346 (* ?x132 ?x132 ?x132 ?x335 ?x340 ?x340 ?x350 ?x350 k!2)))
 (let ((?x649 (* k!2 k!2 k!2 m!1 m!1 n!0 n!0)))
 (let ((?x316 (* k!2 k!2 k!2 m!1 m!1)))
 (let ((?x618 (+ (* 24 (* k!2 k!2 k!2 m!1 n!0)) (* 72 (* k!2 k!2 k!2 n!0)) (* (- 7) (* ?x132 ?x132 ?x335 ?x335 ?x340 ?x340)) (* 12 (* k!2 k!2 k!2 m!1)) (* (- 7) (* ?x132 ?x132 ?x132 ?x335 ?x340 ?x340 ?x350 ?x350)) (* 12 (* k!2 k!2 k!2 m!1 n!0 n!0)) (* 36 (* k!2 k!2 k!2 n!0 n!0)) (* (- 7) (* ?x132 ?x132 ?x335 ?x335 ?x335 ?x340 ?x340 ?x340 ?x350 ?x350)) (* 15 (* k!2 k!2 m!1 m!1 n!0 n!0)) (* (- 6) (* k!2 m!1 m!1 m!1 n!0 n!0)) (* (- 9) (* m!1 m!1 m!1 m!1 n!0 n!0)) (* 108 (* k!2 k!2 m!1)) (* 108 (* k!2 k!2 m!1 n!0)) (* (- 144) (* k!2 k!2 m!1 n!0 n!0)) (* 36 (* k!2 k!2 m!1 m!1)) (* 63 (* k!2 k!2 m!1 m!1 n!0)) ?x316 (* 2 (* k!2 k!2 k!2 m!1 m!1 n!0)) ?x649 (* 36 (* k!2 k!2 k!2)) (* 3 (* k!2 k!2 m!1 m!1 m!1)) (* 6 (* k!2 k!2 m!1 m!1 m!1 n!0)) (* 3 (* k!2 k!2 m!1 m!1 m!1 n!0 n!0)) (* 108 (* k!2 m!1 m!1)) (* (- 396) (* k!2 m!1 m!1 n!0 n!0)) (* 36 (* k!2 m!1 m!1 m!1)) (* 54 (* k!2 m!1 m!1 m!1 n!0)) (* 3 (* k!2 m!1 m!1 m!1 m!1)) (* 6 (* k!2 m!1 m!1 m!1 m!1 n!0)) (* 3 (* k!2 m!1 m!1 m!1 m!1 n!0 n!0)) ?x346 (* 36 (* m!1 m!1 m!1)) (* 12 (* m!1 m!1 m!1 m!1)) ?x314 ?x310 (* (- 36) (* m!1 m!1 m!1 n!0)) (* (- 216) (* m!1 m!1 m!1 n!0 n!0)) (* 15 (* m!1 m!1 m!1 m!1 n!0)) (* 2 (* m!1 m!1 m!1 m!1 m!1 n!0)) ?x269 ?x1496 (* (- 648) (* k!2 m!1 n!0)) (* (- 324) (* m!1 m!1 n!0)) (* (- 756) (* k!2 k!2 n!0 n!0)) (* (- 540) (* k!2 k!2 n!0 n!0 n!0)) (* (- 180) (* k!2 k!2 m!1 n!0 n!0 n!0)) ?x345 (* (- 324) (* k!2 k!2 n!0)) (* (- 15) (* k!2 k!2 m!1 m!1 n!0 n!0 n!0)) (* (- 1512) (* k!2 m!1 n!0 n!0)) (* (- 1080) (* k!2 m!1 n!0 n!0 n!0)) (* (- 360) (* k!2 m!1 m!1 n!0 n!0 n!0)) (* (- 30) (* k!2 m!1 m!1 m!1 n!0 n!0 n!0)) (* (- 756) (* m!1 m!1 n!0 n!0)) (* (- 540) (* m!1 m!1 n!0 n!0 n!0)) (* (- 180) (* m!1 m!1 m!1 n!0 n!0 n!0)) (* (- 15) (* m!1 m!1 m!1 m!1 n!0 n!0 n!0)) (* (- 9) ?x1502) (* (- 108) (* k!2 k!2 n!0 n!0 n!0 n!0)) (* (- 36) (* k!2 k!2 m!1 n!0 n!0 n!0 n!0)) (* (- 9) ?x188) (* (- 3) (* k!2 k!2 m!1 m!1 n!0 n!0 n!0 n!0)) (* (- 216) (* k!2 m!1 n!0 n!0 n!0 n!0)) (* (- 72) (* k!2 m!1 m!1 n!0 n!0 n!0 n!0)) (* (- 6) (* k!2 m!1 m!1 m!1 n!0 n!0 n!0 n!0)) (* (- 108) (* m!1 m!1 n!0 n!0 n!0 n!0)) (* (- 36) (* m!1 m!1 m!1 n!0 n!0 n!0 n!0)) (* (- 3) (* m!1 m!1 m!1 m!1 n!0 n!0 n!0 n!0)) (* (- 3) (* ?x132 ?x132 ?x132 ?x335 ?x340 ?x340 ?x350 ?x350 n!0 n!0)) (* (- 3) ?x615))))
 (let (($x624 (and $x272 (= (+ ?x277 ?x275 ?x155 ?x171 ?x243) 4) (= (+ ?x236 k!2 ?x242 ?x218) 1) $x190 (not (= ?x618 0)))))
 (let (($x167 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x78 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x390 (+ 6 m)))
 (let ((?x303 (+ 1 n)))
 (let ((?x2373 (* (- 3) (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78 n n))))
 (let ((?x1884 (* (- 9) (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78 n))))
 (let ((?x2285 (+ (* 24 (* k k k m n)) (* 72 (* k k k n)) (* (- 7) (* ?x303 ?x303 ?x390 ?x390 ?x71 ?x71)) (* 12 (* k k k m)) (* (- 7) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78)) (* 12 (* k k k m n n)) (* 36 (* k k k n n)) (* (- 7) (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78)) (* 15 (* k k m m n n)) (* (- 6) (* k m m m n n)) (* (- 9) (* m m m m n n)) (* 108 (* k k m)) (* 108 (* k k m n)) (* (- 144) (* k k m n n)) (* 36 (* k k m m)) (* 63 (* k k m m n)) (* k k k m m) (* 2 (* k k k m m n)) (* k k k m m n n) (* 36 (* k k k)) (* 3 (* k k m m m)) (* 6 (* k k m m m n)) (* 3 (* k k m m m n n)) (* 108 (* k m m)) (* (- 396) (* k m m n n)) (* 36 (* k m m m)) (* 54 (* k m m m n)) (* 3 (* k m m m m)) (* 6 (* k m m m m n)) (* 3 (* k m m m m n n)) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78 k) (* 36 (* m m m)) (* 12 (* m m m m)) (* m m m m m) (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78 k) (* (- 36) (* m m m n)) (* (- 216) (* m m m n n)) (* 15 (* m m m m n)) (* 2 (* m m m m m n)) (* m m m m m n n) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78 m) (* (- 648) (* k m n)) (* (- 324) (* m m n)) (* (- 756) (* k k n n)) (* (- 540) (* k k n n n)) (* (- 180) (* k k m n n n)) (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78 m) (* (- 324) (* k k n)) (* (- 15) (* k k m m n n n)) (* (- 1512) (* k m n n)) (* (- 1080) (* k m n n n)) (* (- 360) (* k m m n n n)) (* (- 30) (* k m m m n n n)) (* (- 756) (* m m n n)) (* (- 540) (* m m n n n)) (* (- 180) (* m m m n n n)) (* (- 15) (* m m m m n n n)) (* (- 9) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78 n)) (* (- 108) (* k k n n n n)) (* (- 36) (* k k m n n n n)) ?x1884 (* (- 3) (* k k m m n n n n)) (* (- 216) (* k m n n n n)) (* (- 72) (* k m m n n n n)) (* (- 6) (* k m m m n n n n)) (* (- 108) (* m m n n n n)) (* (- 36) (* m m m n n n n)) (* (- 3) (* m m m m n n n n)) (* (- 3) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78 n n)) ?x2373)))
 (let (($x295 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x257 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x208 (* (- 1) ?x49)))
 (let ((?x207 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x205 (= (+ ?x40 ?x44 ?x207 ?x208 (* 9 (* c n))) 4)))
 (let (($x121 (= (+ m (* (- 6) n)) 6)))
 (and $x121 $x205 $x257 $x295 (not (= ?x2285 0))))))))))))))))))) :qid k!34))
 ))
 (let (($x610 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x351 (* (- 1) m)))
 (let ((?x235 (* (- 1) k)))
 (let ((?x599 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x235 ?x351 ?x65)))
 (let ((?x78 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x390 (+ 6 m)))
 (let ((?x303 (+ 1 n)))
 (let ((?x364 (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78)))
 (let ((?x385 (+ (* (- 1) (* ?x303 ?x303 ?x390 ?x390 ?x71 ?x71)) (* (- 1) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78)) (* (- 1) ?x364))))
 (let (($x200 (not (= (* ?x385 ?x599) 0))))
 (let (($x169 (= (+ (* 3 (* n n)) ?x235 ?x65) (- 1))))
 (let (($x279 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x208 (* (- 1) ?x49)))
 (let ((?x207 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x121 (= (+ m (* (- 6) n)) 6)))
 (and $x121 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x207 ?x208) 4) $x279 $x169 $x200)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x268 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x78 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x390 (+ 6 m)))
 (let ((?x303 (+ 1 n)))
 (let ((?x2373 (* (- 3) (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78 n n))))
 (let ((?x1884 (* (- 9) (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78 n))))
 (let ((?x2285 (+ (* 24 (* k k k m n)) (* 72 (* k k k n)) (* (- 7) (* ?x303 ?x303 ?x390 ?x390 ?x71 ?x71)) (* 12 (* k k k m)) (* (- 7) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78)) (* 12 (* k k k m n n)) (* 36 (* k k k n n)) (* (- 7) (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78)) (* 15 (* k k m m n n)) (* (- 6) (* k m m m n n)) (* (- 9) (* m m m m n n)) (* 108 (* k k m)) (* 108 (* k k m n)) (* (- 144) (* k k m n n)) (* 36 (* k k m m)) (* 63 (* k k m m n)) (* k k k m m) (* 2 (* k k k m m n)) (* k k k m m n n) (* 36 (* k k k)) (* 3 (* k k m m m)) (* 6 (* k k m m m n)) (* 3 (* k k m m m n n)) (* 108 (* k m m)) (* (- 396) (* k m m n n)) (* 36 (* k m m m)) (* 54 (* k m m m n)) (* 3 (* k m m m m)) (* 6 (* k m m m m n)) (* 3 (* k m m m m n n)) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78 k) (* 36 (* m m m)) (* 12 (* m m m m)) (* m m m m m) (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78 k) (* (- 36) (* m m m n)) (* (- 216) (* m m m n n)) (* 15 (* m m m m n)) (* 2 (* m m m m m n)) (* m m m m m n n) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78 m) (* (- 648) (* k m n)) (* (- 324) (* m m n)) (* (- 756) (* k k n n)) (* (- 540) (* k k n n n)) (* (- 180) (* k k m n n n)) (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78 m) (* (- 324) (* k k n)) (* (- 15) (* k k m m n n n)) (* (- 1512) (* k m n n)) (* (- 1080) (* k m n n n)) (* (- 360) (* k m m n n n)) (* (- 30) (* k m m m n n n)) (* (- 756) (* m m n n)) (* (- 540) (* m m n n n)) (* (- 180) (* m m m n n n)) (* (- 15) (* m m m m n n n)) (* (- 9) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78 n)) (* (- 108) (* k k n n n n)) (* (- 36) (* k k m n n n n)) ?x1884 (* (- 3) (* k k m m n n n n)) (* (- 216) (* k m n n n n)) (* (- 72) (* k m m n n n n)) (* (- 6) (* k m m m n n n n)) (* (- 108) (* m m n n n n)) (* (- 36) (* m m m n n n n)) (* (- 3) (* m m m m n n n n)) (* (- 3) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78 n n)) ?x2373)))
 (let (($x295 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x257 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x208 (* (- 1) ?x49)))
 (let ((?x207 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x205 (= (+ ?x40 ?x44 ?x207 ?x208 (* 9 (* c n))) 4)))
 (let (($x121 (= (+ m (* (- 6) n)) 6)))
 (let (($x2273 (and $x121 $x205 $x257 $x295 (not (= ?x2285 0)))))
 (let ((?x65 (* 3 n)))
 (let ((?x351 (* (- 1) m)))
 (let ((?x235 (* (- 1) k)))
 (let ((?x385 (+ (* (- 1) (* ?x303 ?x303 ?x390 ?x390 ?x71 ?x71)) (* (- 1) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78)) (* (- 1) (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78)))))
 (let (($x622 (= (* ?x385 (+ 4 (* 3 (* ?x303 ?x303)) ?x235 ?x351 ?x65)) 0)))
 (let (($x200 (not $x622)))
 (let (($x169 (= (+ (* 3 (* n n)) ?x235 ?x65) (- 1))))
 (let (($x279 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x291 (and $x121 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x207 ?x208) 4) $x279 $x169 $x200)))
 (rewrite (= $x291 $x2273)))))))))))))))))))))))))))))
 ))
 (let (($x202 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x351 (* (- 1) m)))
 (let ((?x235 (* (- 1) k)))
 (let ((?x599 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x235 ?x351 ?x65)))
 (let ((?x78 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x390 (+ 6 m)))
 (let ((?x303 (+ 1 n)))
 (let ((?x364 (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78)))
 (let ((?x385 (+ (* (- 1) (* ?x303 ?x303 ?x390 ?x390 ?x71 ?x71)) (* (- 1) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78)) (* (- 1) ?x364))))
 (let (($x200 (not (= (* ?x385 ?x599) 0))))
 (let (($x169 (= (+ (* 3 (* n n)) ?x235 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x525 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x121 (= (+ m (* (- 6) n)) 6)))
 (and $x121 (= ?x525 (- 4)) (= (+ (* (- 3) c) (* n k) ?x235 (* 2 n)) (- 1)) $x169 $x200))))))))))))))))) :qid k!34))
 ))
 (let ((?x607 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x351 (* (- 1) m)))
 (let ((?x235 (* (- 1) k)))
 (let ((?x599 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x235 ?x351 ?x65)))
 (let ((?x78 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x390 (+ 6 m)))
 (let ((?x303 (+ 1 n)))
 (let ((?x364 (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78)))
 (let ((?x385 (+ (* (- 1) (* ?x303 ?x303 ?x390 ?x390 ?x71 ?x71)) (* (- 1) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78)) (* (- 1) ?x364))))
 (let (($x200 (not (= (* ?x385 ?x599) 0))))
 (let (($x169 (= (+ (* 3 (* n n)) ?x235 ?x65) (- 1))))
 (let (($x279 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x208 (* (- 1) ?x49)))
 (let ((?x207 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x121 (= (+ m (* (- 6) n)) 6)))
 (let (($x291 (and $x121 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x207 ?x208) 4) $x279 $x169 $x200)))
 (let ((?x48 (* 9 n)))
 (let ((?x525 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x203 (and $x121 (= ?x525 (- 4)) (= (+ (* (- 3) c) (* n k) ?x235 (* 2 n)) (- 1)) $x169 $x200)))
 (rewrite (= $x203 $x291))))))))))))))))))))))))))
 ))
 (let (($x88 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ n 1)))
 (let ((?x76 (+ m 6)))
 (let ((?x71 (+ k m)))
 (let ((?x78 (+ c k)))
 (let ((?x81 (- (* (- 1) ?x71 ?x71 ?x76 ?x76 ?x68 ?x68) (* ?x78 ?x78 ?x71 ?x71 ?x76 ?x68 ?x68 ?x68))))
 (let ((?x83 (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) (- ?x81 (* ?x78 ?x78 ?x71 ?x71 ?x71 ?x76 ?x76 ?x76 ?x68 ?x68)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x83 0))))))))))))))))) :qid k!34))
 ))
 (let ((?x179 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x351 (* (- 1) m)))
 (let ((?x235 (* (- 1) k)))
 (let ((?x599 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x235 ?x351 ?x65)))
 (let ((?x78 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x390 (+ 6 m)))
 (let ((?x303 (+ 1 n)))
 (let ((?x364 (* ?x303 ?x303 ?x390 ?x390 ?x390 ?x71 ?x71 ?x71 ?x78 ?x78)))
 (let ((?x385 (+ (* (- 1) (* ?x303 ?x303 ?x390 ?x390 ?x71 ?x71)) (* (- 1) (* ?x303 ?x303 ?x303 ?x390 ?x71 ?x71 ?x78 ?x78)) (* (- 1) ?x364))))
 (let (($x200 (not (= (* ?x385 ?x599) 0))))
 (let (($x169 (= (+ (* 3 (* n n)) ?x235 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x525 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x121 (= (+ m (* (- 6) n)) 6)))
 (let (($x203 (and $x121 (= ?x525 (- 4)) (= (+ (* (- 3) c) (* n k) ?x235 (* 2 n)) (- 1)) $x169 $x200)))
 (let ((?x68 (+ n 1)))
 (let ((?x76 (+ m 6)))
 (let ((?x81 (- (* (- 1) ?x71 ?x71 ?x76 ?x76 ?x68 ?x68) (* ?x78 ?x78 ?x71 ?x71 ?x76 ?x68 ?x68 ?x68))))
 (let ((?x83 (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) (- ?x81 (* ?x78 ?x78 ?x71 ?x71 ?x71 ?x76 ?x76 ?x76 ?x68 ?x68)))))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x87 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 (= (+ (- (+ 1 (* 3 n n)) k) ?x65) 0) (or (not (= ?x83 0))))))
 (rewrite (= $x87 $x203)))))))))))))))))))))))))))))
 ))
 (let ((@x89 (asserted $x88)))
 (let ((@x118 (mp (mp @x89 (quant-intro (proof-bind ?x179) (= $x88 $x202)) $x202) (rewrite (= $x202 $x202)) $x202)))
 (let ((@x211 (mp (mp @x118 (quant-intro (proof-bind ?x607) (= $x202 $x610)) $x610) (quant-intro (proof-bind ?x268) (= $x610 $x167)) $x167)))
 (let ((@x574 (mp (mp~ @x211 (sk (~ $x167 $x624)) $x624) (rewrite (= $x624 $x751)) $x751)))
 (let ((@x537 (and-elim @x574 $x190)))
 (let ((@x1339 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x190) $x858)) @x537 $x858)))
 (let (($x844 (>= ?x368 1)))
 (let ((@x819 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x190) $x844)) @x537 $x844)))
 (let (($x761 (<= ?x630 4)))
 (let ((@x541 (and-elim @x574 $x536)))
 (let ((@x823 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x536) $x761)) @x541 $x761)))
 (let (($x856 (>= ?x630 4)))
 (let ((@x585 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x536) $x856)) @x541 $x856)))
 (let (($x764 (<= ?x289 6)))
 (let ((@x576 (and-elim @x574 $x272)))
 (let ((@x776 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x272) $x764)) @x576 $x764)))
 (let (($x762 (>= ?x289 6)))
 (let ((@x763 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x272) $x762)) @x576 $x762)))
 (let (($x860 (<= ?x631 1)))
 (let ((@x543 (and-elim @x574 $x540)))
 (let ((@x1338 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x540) $x860)) @x543 $x860)))
 (let (($x857 (>= ?x631 1)))
 (let ((@x873 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x540) $x857)) @x543 $x857)))
 (let (($x778 (not (<= ?x566 0))))
 (let (($x845 (>= ?x566 0)))
 (let ((@x782 ((_ th-lemma arith) (hypothesis (not $x845)) @x819 @x1339 @x763 @x776 @x763 @x776 @x819 @x1339 @x819 @x1339 @x873 @x1338 @x819 @x1339 @x763 @x776 @x585 @x823 @x819 @x1339 false)))
 (let ((@x1353 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x561 $x778 (not $x845))) (and-elim @x574 $x572) (or $x778 (not $x845)))))
 ((_ th-lemma arith) (unit-resolution @x1353 (lemma @x782 $x845) $x778) @x819 @x1339 @x763 @x776 @x763 @x776 @x819 @x1339 @x819 @x1339 @x873 @x1338 @x819 @x1339 @x763 @x776 @x585 @x823 @x819 @x1339 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        33
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             793
 :arith-nonlinear-bounds    36
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 124
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                4.02
 :memory                    3.34
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1767523
 :num-checks                1
 :propagations              11
 :rlimit-count              15235
 :time                      0.02
 :total-time                0.02)
