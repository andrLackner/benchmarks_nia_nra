unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x802 (* (- 3) n!0)))
 (let ((?x432 (* (- 3) (* n!0 n!0))))
 (let ((?x317 (+ k!2 ?x432 ?x802)))
 (let (($x705 (<= ?x317 1)))
 (let (($x174 (= ?x317 1)))
 (let ((?x557 (* (- 1) (* m!1 m!1 m!1 m!1))))
 (let ((?x594 (* 648 (* k!2 n!0 n!0 n!0))))
 (let ((?x800 (* (- 36) (* m!1 m!1))))
 (let ((?x811 (* (- 12) (* k!2 m!1 m!1))))
 (let ((?x374 (+ c!3 k!2)))
 (let ((?x437 (+ k!2 m!1)))
 (let ((?x715 (+ 1 n!0)))
 (let ((?x535 (* (- 1) (* m!1 ?x715 ?x715 ?x437 ?x437 ?x374 ?x374 ?x374))))
 (let ((?x660 (* 6 (* ?x715 ?x715 ?x437 ?x437 ?x374 ?x374 ?x374))))
 (let ((?x246 (* 648 (* k!2 n!0 n!0))))
 (let ((?x531 (+ 6 m!1)))
 (let ((?x576 (* m!1 ?x715 ?x715 ?x531 ?x531 ?x531 ?x437 ?x374 ?x374)))
 (let ((?x385 (* (- 6) (* n!0 ?x715 ?x531 ?x531 ?x531 ?x437 ?x374 ?x374 ?x374))))
 (let ((?x678 (* (- 36) (* k!2 m!1))))
 (let ((?x204 (* (- 6) (* ?x715 ?x715 ?x531 ?x531 ?x531 ?x437 ?x374 ?x374))))
 (let ((?x726 (* (- 1) (* k!2 m!1 m!1 m!1))))
 (let ((?x461 (* k!2 n!0)))
 (let ((?x351 (* 216 ?x461)))
 (let ((?x421 (* 6 (* ?x715 ?x715 ?x715 ?x531 ?x531 ?x437))))
 (let ((?x458 (* (- 6) (* ?x715 ?x531 ?x531 ?x531 ?x437 ?x374 ?x374 ?x374))))
 (let ((?x568 (* 216 (* k!2 n!0 n!0 n!0 n!0))))
 (let ((?x265 (* m!1 ?x715 ?x531 ?x531 ?x531 ?x437 ?x374 ?x374 ?x374)))
 (let ((?x210 (* (- 6) (* n!0 ?x715 ?x715 ?x531 ?x531 ?x531 ?x437 ?x374 ?x374))))
 (let ((?x203 (* 6 (* n!0 ?x715 ?x715 ?x437 ?x437 ?x374 ?x374 ?x374))))
 (let ((?x592 (* (- 12) (* m!1 m!1 m!1))))
 (let ((?x390 (+ (* 216 (* n!0 n!0 n!0 n!0 m!1)) (* 648 (* n!0 n!0 n!0 m!1)) ?x592 ?x203 ?x210 ?x265 ?x568 (* 6 (* n!0 n!0 n!0 m!1 m!1 m!1)) ?x458 ?x421 (* 72 (* k!2 n!0 n!0 n!0 n!0 m!1)) (* 108 (* n!0 n!0 m!1 m!1)) (* (- 18) (* k!2 n!0 n!0 m!1 m!1)) (* (- 18) (* n!0 n!0 m!1 m!1 m!1)) (* (- 30) (* n!0 m!1 m!1 m!1)) (* 6 (* n!0 n!0 n!0 n!0 m!1 m!1 m!1)) (* (- 30) (* k!2 n!0 m!1 m!1)) (* (- 36) (* n!0 m!1 m!1)) (* (- 36) (* k!2 n!0 m!1)) (* (- 3) (* n!0 m!1 m!1 m!1 m!1)) ?x351 ?x726 ?x204 (* 108 (* k!2 n!0 n!0 m!1)) (* (- 3) (* k!2 n!0 n!0 m!1 m!1 m!1)) ?x678 ?x385 ?x576 (* 648 (* n!0 n!0 m!1)) (* (- 3) (* k!2 n!0 m!1 m!1 m!1)) (* 180 (* k!2 n!0 n!0 n!0 m!1)) (* 6 (* k!2 n!0 n!0 n!0 n!0 m!1 m!1)) ?x246 (* 72 (* n!0 n!0 n!0 n!0 m!1 m!1)) ?x660 (* (- 3) (* n!0 n!0 m!1 m!1 m!1 m!1)) (* 6 (* k!2 n!0 n!0 n!0 m!1 m!1)) (* (- 1) (* n!0 n!0 n!0 m!1 m!1 m!1 m!1)) (* 216 (* n!0 m!1)) ?x535 ?x811 (* 180 (* n!0 n!0 n!0 m!1 m!1)) ?x800 ?x594 ?x557 (* (- 1) (* k!2 n!0 n!0 n!0 m!1 m!1 m!1)))))
 (let (($x698 (= ?x390 0)))
 (let (($x656 (not $x698)))
 (let ((?x781 (* (- 2) n!0)))
 (let ((?x468 (* (- 1) ?x461)))
 (let ((?x555 (* 3 c!3)))
 (let ((?x280 (+ ?x555 k!2 ?x468 ?x781)))
 (let (($x151 (= ?x280 1)))
 (let ((?x207 (* k!2 k!2)))
 (let ((?x294 (+ ?x207 (* (- 18) c!3) (* (- 9) (* c!3 n!0)) (* (- 5) k!2) (* 9 n!0))))
 (let (($x292 (= ?x294 (- 4))))
 (let ((?x261 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x259 (= ?x261 (- 6))))
 (let (($x541 (and $x259 $x292 $x151 $x174 $x656)))
 (let ((?x187 (+ ?x351 ?x576 ?x385 ?x568 ?x535 ?x594 ?x811 ?x592 ?x726 ?x557 (* (- 36) (* k!2 m!1 n!0)) (* (- 36) (* m!1 m!1 n!0)) (* (- 30) (* k!2 m!1 m!1 n!0)) (* (- 30) (* m!1 m!1 m!1 n!0)) (* 72 (* k!2 m!1 n!0 n!0 n!0 n!0)) (* 72 (* m!1 m!1 n!0 n!0 n!0 n!0)) (* 6 (* k!2 m!1 m!1 n!0 n!0 n!0 n!0)) (* (- 3) (* m!1 m!1 m!1 m!1 n!0)) (* (- 3) (* k!2 m!1 m!1 m!1 n!0)) (* 648 (* m!1 n!0 n!0)) (* 6 (* m!1 m!1 m!1 n!0 n!0 n!0 n!0)) (* 216 (* m!1 n!0 n!0 n!0 n!0)) ?x421 (* (- 1) (* m!1 m!1 m!1 m!1 n!0 n!0 n!0)) ?x678 ?x800 (* 108 (* k!2 m!1 n!0 n!0)) (* 108 (* m!1 m!1 n!0 n!0)) (* (- 18) (* k!2 m!1 m!1 n!0 n!0)) (* (- 18) (* m!1 m!1 m!1 n!0 n!0)) (* (- 3) (* k!2 m!1 m!1 m!1 n!0 n!0)) (* (- 3) (* m!1 m!1 m!1 m!1 n!0 n!0)) ?x458 ?x660 ?x204 (* 180 (* k!2 m!1 n!0 n!0 n!0)) (* 180 (* m!1 m!1 n!0 n!0 n!0)) (* 648 (* m!1 n!0 n!0 n!0)) (* 6 (* k!2 m!1 m!1 n!0 n!0 n!0)) (* 6 (* m!1 m!1 m!1 n!0 n!0 n!0)) (* (- 1) (* k!2 m!1 m!1 m!1 n!0 n!0 n!0)) (* 216 (* m!1 n!0)) ?x246 ?x265 ?x210 ?x203)))
 (let ((?x337 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x207) (* 9 (* c!3 n!0)))))
 (let (($x165 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x337 4) (= (+ ?x555 k!2 ?x781 ?x468) 1) (= (+ k!2 ?x802 ?x432) 1) (not (= ?x187 0)))))
 (let (($x377 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x73 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x1156 (* 6 (* n ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73))))
 (let ((?x365 (+ 6 m)))
 (let ((?x1153 (* (- 6) (* n ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73))))
 (let ((?x1101 (* m ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x991 (* (- 1) (* k m m m n n n))))
 (let ((?x744 (* ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73)))
 (let ((?x1147 (* (- 6) ?x744)))
 (let ((?x743 (* ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x1148 (* 6 ?x743)))
 (let ((?x737 (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x1145 (* (- 6) ?x737)))
 (let ((?x986 (* (- 3) (* m m m m n n))))
 (let ((?x985 (* (- 3) (* k m m m n n))))
 (let ((?x979 (* (- 36) (* m m))))
 (let ((?x978 (* (- 36) (* k m))))
 (let ((?x977 (* (- 1) (* m m m m n n n))))
 (let ((?x584 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x74)))
 (let ((?x1146 (* 6 ?x584)))
 (let ((?x975 (* (- 3) (* k m m m n))))
 (let ((?x974 (* (- 3) (* m m m m n))))
 (let ((?x965 (* (- 1) (* m m m m))))
 (let ((?x964 (* (- 1) (* k m m m))))
 (let ((?x962 (* (- 12) (* m m m))))
 (let ((?x960 (* (- 12) (* k m m))))
 (let ((?x1139 (* (- 1) (* m ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73))))
 (let ((?x1137 (* (- 6) (* n ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73))))
 (let ((?x128 (* m ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73)))
 (let ((?x1099 (+ (* 216 (* k n)) ?x128 ?x1137 (* 216 (* k n n n n)) ?x1139 (* 648 (* k n n n)) ?x960 ?x962 ?x964 ?x965 (* (- 36) (* k m n)) (* (- 36) (* m m n)) (* (- 30) (* k m m n)) (* (- 30) (* m m m n)) (* 72 (* k m n n n n)) (* 72 (* m m n n n n)) (* 6 (* k m m n n n n)) ?x974 ?x975 (* 648 (* m n n)) (* 6 (* m m m n n n n)) (* 216 (* m n n n n)) ?x1146 ?x977 ?x978 ?x979 (* 108 (* k m n n)) (* 108 (* m m n n)) (* (- 18) (* k m m n n)) (* (- 18) (* m m m n n)) ?x985 ?x986 ?x1145 ?x1148 ?x1147 (* 180 (* k m n n n)) (* 180 (* m m n n n)) (* 648 (* m n n n)) (* 6 (* k m m n n n)) (* 6 (* m m m n n n)) ?x991 (* 216 (* m n)) (* 648 (* k n n)) ?x1101 ?x1153 ?x1156)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 (* c n))) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 $x214 $x266 $x304 (not (= ?x1099 0))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x452 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x73 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x1156 (* 6 (* n ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73))))
 (let ((?x365 (+ 6 m)))
 (let ((?x1153 (* (- 6) (* n ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73))))
 (let ((?x1101 (* m ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x991 (* (- 1) (* k m m m n n n))))
 (let ((?x771 (* m m m n n n)))
 (let ((?x990 (* (- 12) ?x771)))
 (let ((?x766 (* k m m n n n)))
 (let ((?x989 (* (- 12) ?x766)))
 (let ((?x757 (* m m n n n)))
 (let ((?x988 (* (- 36) ?x757)))
 (let ((?x752 (* k m n n n)))
 (let ((?x987 (* (- 36) ?x752)))
 (let ((?x744 (* ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73)))
 (let ((?x1147 (* (- 6) ?x744)))
 (let ((?x743 (* ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x1148 (* 6 ?x743)))
 (let ((?x737 (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x1145 (* (- 6) ?x737)))
 (let ((?x986 (* (- 3) (* m m m m n n))))
 (let ((?x985 (* (- 3) (* k m m m n n))))
 (let ((?x654 (* m m m n n)))
 (let ((?x984 (* (- 36) ?x654)))
 (let ((?x649 (* k m m n n)))
 (let ((?x983 (* (- 36) ?x649)))
 (let ((?x640 (* m m n n)))
 (let ((?x982 (* (- 108) ?x640)))
 (let ((?x635 (* k m n n)))
 (let ((?x981 (* (- 108) ?x635)))
 (let ((?x979 (* (- 36) (* m m))))
 (let ((?x978 (* (- 36) (* k m))))
 (let ((?x977 (* (- 1) (* m m m m n n n))))
 (let ((?x584 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x74)))
 (let ((?x1146 (* 6 ?x584)))
 (let ((?x975 (* (- 3) (* k m m m n))))
 (let ((?x974 (* (- 3) (* m m m m n))))
 (let ((?x465 (* m m m n)))
 (let ((?x971 (* (- 36) ?x465)))
 (let ((?x464 (* k m m n)))
 (let ((?x970 (* (- 36) ?x464)))
 (let ((?x451 (* m m n)))
 (let ((?x968 (* (- 108) ?x451)))
 (let ((?x450 (* k m n)))
 (let ((?x967 (* (- 108) ?x450)))
 (let ((?x965 (* (- 1) (* m m m m))))
 (let ((?x964 (* (- 1) (* k m m m))))
 (let ((?x962 (* (- 12) (* m m m))))
 (let ((?x960 (* (- 12) (* k m m))))
 (let ((?x1139 (* (- 1) (* m ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73))))
 (let ((?x1137 (* (- 6) (* n ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73))))
 (let ((?x128 (* m ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73)))
 (let ((?x1155 (+ ?x128 (* 6 (* n 1 n 1 6 m m)) (* 6 (* n n n 1 6 m m)) (* 6 (* n 1 1 n 6 m m)) (* 6 (* n 1 1 1 6 m k)) (* 6 (* n n 1 n 6 m m)) (* 6 (* n 1 n n 6 m m)) (* 6 (* n n n n 6 m m)) (* 6 (* n n 1 1 6 m k)) (* 6 (* n 1 1 1 m m m)) (* 6 (* n n 1 1 m m m)) (* 6 (* n 1 n n 6 6 k)) (* 6 (* n 1 n 1 m m m)) (* 6 (* n n n 1 m m m)) (* 6 (* n n n n 6 6 k)) (* 6 (* n 1 1 1 m 6 k)) (* 6 (* n n 1 1 m 6 k)) (* 6 (* n 1 n 1 m 6 k)) (* 6 (* n n n 1 m 6 k)) (* 6 (* n 1 1 n m m m)) (* 6 (* n n 1 n m m m)) (* 6 (* n 1 n n m m m)) (* 6 (* n n n n m m m)) (* 6 (* n n 1 1 6 6 m)) (* 6 (* n 1 n 1 6 6 m)) (* 6 (* n n n 1 6 6 m)) (* 6 (* n 1 1 n 6 6 m)) (* 6 (* n n 1 n 6 6 m)) (* 6 (* n 1 n n 6 6 m)) (* 6 (* n n n n 6 6 m)) (* 6 (* n 1 1 1 m 6 m)) (* 6 (* n n 1 1 m 6 m)) (* 6 (* n 1 n 1 m 6 m)) (* 6 (* n n n 1 m 6 m)) (* 6 (* n 1 1 n m 6 m)) (* 6 (* n n 1 n m 6 m)) (* 6 (* n 1 n n m 6 m)) (* 6 (* n n n n m 6 m)) (* 6 (* n 1 1 1 6 m m)) (* 6 (* n n 1 1 6 m m)) (* 6 (* n n 1 n 6 m k)) (* 6 (* n 1 1 n 6 m k)) (* 6 (* n 1 n n 6 m k)) (* 6 (* n n n n 6 m k)) (* 6 (* n 1 1 1 m m k)) (* 6 (* n n 1 1 m m k)) (* 6 (* n 1 n 1 m m k)) (* 6 (* n n n 1 m m k)) (* 6 (* n 1 1 n m m k)) (* 6 (* n n 1 n m m k)) (* 6 (* n 1 n n m m k)) (* 6 (* n n n n m m k)) (* 6 (* n 1 1 1 6 6 m)) (* 6 (* n 1 n 1 6 m k)) (* 6 (* n n n 1 6 m k)) ?x1137 (* 6 (* n 1 n n m 6 k)) (* 6 (* n n n n m 6 k)) ?x1139 ?x960 ?x962 ?x964 ?x965 ?x967 ?x968 ?x970 ?x971 (* 6 (* n 1 1 n m 6 k)) (* 6 (* n n 1 n m 6 k)) (* 6 (* n n 1 1 6 6 k)) ?x974 ?x975 ?x1146 ?x977 ?x978 ?x979 ?x981 ?x982 ?x983 ?x984 ?x985 ?x986 ?x1145 ?x1148 ?x1147 ?x987 ?x988 ?x989 ?x990 ?x991 (* 6 (* n 1 1 1 6 6 k)) (* 6 (* n 1 n 1 6 6 k)) (* 6 (* n n n 1 6 6 k)) (* 6 (* n 1 1 n 6 6 k)) (* 6 (* n n 1 n 6 6 k)) ?x1101 ?x1153 ?x1156)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 (* c n))) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 $x214 $x266 $x304 (not (= ?x1155 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x486 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x73 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x1156 (* 6 (* n ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73))))
 (let ((?x365 (+ 6 m)))
 (let ((?x1153 (* (- 6) (* n ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73))))
 (let ((?x1101 (* m ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x991 (* (- 1) (* k m m m n n n))))
 (let ((?x744 (* ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73)))
 (let ((?x1147 (* (- 6) ?x744)))
 (let ((?x743 (* ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x1148 (* 6 ?x743)))
 (let ((?x737 (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x1145 (* (- 6) ?x737)))
 (let ((?x986 (* (- 3) (* m m m m n n))))
 (let ((?x985 (* (- 3) (* k m m m n n))))
 (let ((?x979 (* (- 36) (* m m))))
 (let ((?x978 (* (- 36) (* k m))))
 (let ((?x977 (* (- 1) (* m m m m n n n))))
 (let ((?x584 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x74)))
 (let ((?x1146 (* 6 ?x584)))
 (let ((?x975 (* (- 3) (* k m m m n))))
 (let ((?x974 (* (- 3) (* m m m m n))))
 (let ((?x965 (* (- 1) (* m m m m))))
 (let ((?x964 (* (- 1) (* k m m m))))
 (let ((?x962 (* (- 12) (* m m m))))
 (let ((?x960 (* (- 12) (* k m m))))
 (let ((?x1139 (* (- 1) (* m ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73))))
 (let ((?x1137 (* (- 6) (* n ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73))))
 (let ((?x128 (* m ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73)))
 (let ((?x1099 (+ (* 216 (* k n)) ?x128 ?x1137 (* 216 (* k n n n n)) ?x1139 (* 648 (* k n n n)) ?x960 ?x962 ?x964 ?x965 (* (- 36) (* k m n)) (* (- 36) (* m m n)) (* (- 30) (* k m m n)) (* (- 30) (* m m m n)) (* 72 (* k m n n n n)) (* 72 (* m m n n n n)) (* 6 (* k m m n n n n)) ?x974 ?x975 (* 648 (* m n n)) (* 6 (* m m m n n n n)) (* 216 (* m n n n n)) ?x1146 ?x977 ?x978 ?x979 (* 108 (* k m n n)) (* 108 (* m m n n)) (* (- 18) (* k m m n n)) (* (- 18) (* m m m n n)) ?x985 ?x986 ?x1145 ?x1148 ?x1147 (* 180 (* k m n n n)) (* 180 (* m m n n n)) (* 648 (* m n n n)) (* 6 (* k m m n n n)) (* 6 (* m m m n n n)) ?x991 (* 216 (* m n)) (* 648 (* k n n)) ?x1101 ?x1153 ?x1156)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 (* c n))) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x1175 (and $x130 $x214 $x266 $x304 (not (= ?x1099 0)))))
 (let ((?x771 (* m m m n n n)))
 (let ((?x990 (* (- 12) ?x771)))
 (let ((?x766 (* k m m n n n)))
 (let ((?x989 (* (- 12) ?x766)))
 (let ((?x757 (* m m n n n)))
 (let ((?x988 (* (- 36) ?x757)))
 (let ((?x752 (* k m n n n)))
 (let ((?x987 (* (- 36) ?x752)))
 (let ((?x654 (* m m m n n)))
 (let ((?x984 (* (- 36) ?x654)))
 (let ((?x649 (* k m m n n)))
 (let ((?x983 (* (- 36) ?x649)))
 (let ((?x640 (* m m n n)))
 (let ((?x982 (* (- 108) ?x640)))
 (let ((?x635 (* k m n n)))
 (let ((?x981 (* (- 108) ?x635)))
 (let ((?x465 (* m m m n)))
 (let ((?x971 (* (- 36) ?x465)))
 (let ((?x464 (* k m m n)))
 (let ((?x970 (* (- 36) ?x464)))
 (let ((?x451 (* m m n)))
 (let ((?x968 (* (- 108) ?x451)))
 (let ((?x450 (* k m n)))
 (let ((?x967 (* (- 108) ?x450)))
 (let ((?x1155 (+ ?x128 (* 6 (* n 1 n 1 6 m m)) (* 6 (* n n n 1 6 m m)) (* 6 (* n 1 1 n 6 m m)) (* 6 (* n 1 1 1 6 m k)) (* 6 (* n n 1 n 6 m m)) (* 6 (* n 1 n n 6 m m)) (* 6 (* n n n n 6 m m)) (* 6 (* n n 1 1 6 m k)) (* 6 (* n 1 1 1 m m m)) (* 6 (* n n 1 1 m m m)) (* 6 (* n 1 n n 6 6 k)) (* 6 (* n 1 n 1 m m m)) (* 6 (* n n n 1 m m m)) (* 6 (* n n n n 6 6 k)) (* 6 (* n 1 1 1 m 6 k)) (* 6 (* n n 1 1 m 6 k)) (* 6 (* n 1 n 1 m 6 k)) (* 6 (* n n n 1 m 6 k)) (* 6 (* n 1 1 n m m m)) (* 6 (* n n 1 n m m m)) (* 6 (* n 1 n n m m m)) (* 6 (* n n n n m m m)) (* 6 (* n n 1 1 6 6 m)) (* 6 (* n 1 n 1 6 6 m)) (* 6 (* n n n 1 6 6 m)) (* 6 (* n 1 1 n 6 6 m)) (* 6 (* n n 1 n 6 6 m)) (* 6 (* n 1 n n 6 6 m)) (* 6 (* n n n n 6 6 m)) (* 6 (* n 1 1 1 m 6 m)) (* 6 (* n n 1 1 m 6 m)) (* 6 (* n 1 n 1 m 6 m)) (* 6 (* n n n 1 m 6 m)) (* 6 (* n 1 1 n m 6 m)) (* 6 (* n n 1 n m 6 m)) (* 6 (* n 1 n n m 6 m)) (* 6 (* n n n n m 6 m)) (* 6 (* n 1 1 1 6 m m)) (* 6 (* n n 1 1 6 m m)) (* 6 (* n n 1 n 6 m k)) (* 6 (* n 1 1 n 6 m k)) (* 6 (* n 1 n n 6 m k)) (* 6 (* n n n n 6 m k)) (* 6 (* n 1 1 1 m m k)) (* 6 (* n n 1 1 m m k)) (* 6 (* n 1 n 1 m m k)) (* 6 (* n n n 1 m m k)) (* 6 (* n 1 1 n m m k)) (* 6 (* n n 1 n m m k)) (* 6 (* n 1 n n m m k)) (* 6 (* n n n n m m k)) (* 6 (* n 1 1 1 6 6 m)) (* 6 (* n 1 n 1 6 m k)) (* 6 (* n n n 1 6 m k)) ?x1137 (* 6 (* n 1 n n m 6 k)) (* 6 (* n n n n m 6 k)) ?x1139 ?x960 ?x962 ?x964 ?x965 ?x967 ?x968 ?x970 ?x971 (* 6 (* n 1 1 n m 6 k)) (* 6 (* n n 1 n m 6 k)) (* 6 (* n n 1 1 6 6 k)) ?x974 ?x975 ?x1146 ?x977 ?x978 ?x979 ?x981 ?x982 ?x983 ?x984 ?x985 ?x986 ?x1145 ?x1148 ?x1147 ?x987 ?x988 ?x989 ?x990 ?x991 (* 6 (* n 1 1 1 6 6 k)) (* 6 (* n 1 n 1 6 6 k)) (* 6 (* n n n 1 6 6 k)) (* 6 (* n 1 1 n 6 6 k)) (* 6 (* n n 1 n 6 6 k)) ?x1101 ?x1153 ?x1156)))
 (let (($x565 (and $x130 $x214 $x266 $x304 (not (= ?x1155 0)))))
 (rewrite (= $x565 $x1175))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x646 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x365 (+ 6 m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x584 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x74)))
 (let ((?x73 (+ c k)))
 (let ((?x744 (* ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73)))
 (let ((?x743 (* ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x765 (+ (* (- 1) (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73)) ?x743 (* (- 1) ?x744) ?x584)))
 (let (($x586 (not (= (* (+ (- 6) m (* (- 6) n)) ?x765) 0))))
 (let (($x691 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x721 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x721 $x691 $x586)))))))))))))))))) :qid k!34))
 ))
 (let ((?x388 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x73 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x1156 (* 6 (* n ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73))))
 (let ((?x365 (+ 6 m)))
 (let ((?x1153 (* (- 6) (* n ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73))))
 (let ((?x1101 (* m ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x991 (* (- 1) (* k m m m n n n))))
 (let ((?x771 (* m m m n n n)))
 (let ((?x990 (* (- 12) ?x771)))
 (let ((?x766 (* k m m n n n)))
 (let ((?x989 (* (- 12) ?x766)))
 (let ((?x757 (* m m n n n)))
 (let ((?x988 (* (- 36) ?x757)))
 (let ((?x752 (* k m n n n)))
 (let ((?x987 (* (- 36) ?x752)))
 (let ((?x744 (* ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73)))
 (let ((?x1147 (* (- 6) ?x744)))
 (let ((?x743 (* ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x1148 (* 6 ?x743)))
 (let ((?x737 (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x1145 (* (- 6) ?x737)))
 (let ((?x986 (* (- 3) (* m m m m n n))))
 (let ((?x985 (* (- 3) (* k m m m n n))))
 (let ((?x654 (* m m m n n)))
 (let ((?x984 (* (- 36) ?x654)))
 (let ((?x649 (* k m m n n)))
 (let ((?x983 (* (- 36) ?x649)))
 (let ((?x640 (* m m n n)))
 (let ((?x982 (* (- 108) ?x640)))
 (let ((?x635 (* k m n n)))
 (let ((?x981 (* (- 108) ?x635)))
 (let ((?x979 (* (- 36) (* m m))))
 (let ((?x978 (* (- 36) (* k m))))
 (let ((?x977 (* (- 1) (* m m m m n n n))))
 (let ((?x584 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x74)))
 (let ((?x1146 (* 6 ?x584)))
 (let ((?x975 (* (- 3) (* k m m m n))))
 (let ((?x974 (* (- 3) (* m m m m n))))
 (let ((?x465 (* m m m n)))
 (let ((?x971 (* (- 36) ?x465)))
 (let ((?x464 (* k m m n)))
 (let ((?x970 (* (- 36) ?x464)))
 (let ((?x451 (* m m n)))
 (let ((?x968 (* (- 108) ?x451)))
 (let ((?x450 (* k m n)))
 (let ((?x967 (* (- 108) ?x450)))
 (let ((?x965 (* (- 1) (* m m m m))))
 (let ((?x964 (* (- 1) (* k m m m))))
 (let ((?x962 (* (- 12) (* m m m))))
 (let ((?x960 (* (- 12) (* k m m))))
 (let ((?x1139 (* (- 1) (* m ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73))))
 (let ((?x1137 (* (- 6) (* n ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73))))
 (let ((?x128 (* m ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73)))
 (let ((?x1155 (+ ?x128 (* 6 (* n 1 n 1 6 m m)) (* 6 (* n n n 1 6 m m)) (* 6 (* n 1 1 n 6 m m)) (* 6 (* n 1 1 1 6 m k)) (* 6 (* n n 1 n 6 m m)) (* 6 (* n 1 n n 6 m m)) (* 6 (* n n n n 6 m m)) (* 6 (* n n 1 1 6 m k)) (* 6 (* n 1 1 1 m m m)) (* 6 (* n n 1 1 m m m)) (* 6 (* n 1 n n 6 6 k)) (* 6 (* n 1 n 1 m m m)) (* 6 (* n n n 1 m m m)) (* 6 (* n n n n 6 6 k)) (* 6 (* n 1 1 1 m 6 k)) (* 6 (* n n 1 1 m 6 k)) (* 6 (* n 1 n 1 m 6 k)) (* 6 (* n n n 1 m 6 k)) (* 6 (* n 1 1 n m m m)) (* 6 (* n n 1 n m m m)) (* 6 (* n 1 n n m m m)) (* 6 (* n n n n m m m)) (* 6 (* n n 1 1 6 6 m)) (* 6 (* n 1 n 1 6 6 m)) (* 6 (* n n n 1 6 6 m)) (* 6 (* n 1 1 n 6 6 m)) (* 6 (* n n 1 n 6 6 m)) (* 6 (* n 1 n n 6 6 m)) (* 6 (* n n n n 6 6 m)) (* 6 (* n 1 1 1 m 6 m)) (* 6 (* n n 1 1 m 6 m)) (* 6 (* n 1 n 1 m 6 m)) (* 6 (* n n n 1 m 6 m)) (* 6 (* n 1 1 n m 6 m)) (* 6 (* n n 1 n m 6 m)) (* 6 (* n 1 n n m 6 m)) (* 6 (* n n n n m 6 m)) (* 6 (* n 1 1 1 6 m m)) (* 6 (* n n 1 1 6 m m)) (* 6 (* n n 1 n 6 m k)) (* 6 (* n 1 1 n 6 m k)) (* 6 (* n 1 n n 6 m k)) (* 6 (* n n n n 6 m k)) (* 6 (* n 1 1 1 m m k)) (* 6 (* n n 1 1 m m k)) (* 6 (* n 1 n 1 m m k)) (* 6 (* n n n 1 m m k)) (* 6 (* n 1 1 n m m k)) (* 6 (* n n 1 n m m k)) (* 6 (* n 1 n n m m k)) (* 6 (* n n n n m m k)) (* 6 (* n 1 1 1 6 6 m)) (* 6 (* n 1 n 1 6 m k)) (* 6 (* n n n 1 6 m k)) ?x1137 (* 6 (* n 1 n n m 6 k)) (* 6 (* n n n n m 6 k)) ?x1139 ?x960 ?x962 ?x964 ?x965 ?x967 ?x968 ?x970 ?x971 (* 6 (* n 1 1 n m 6 k)) (* 6 (* n n 1 n m 6 k)) (* 6 (* n n 1 1 6 6 k)) ?x974 ?x975 ?x1146 ?x977 ?x978 ?x979 ?x981 ?x982 ?x983 ?x984 ?x985 ?x986 ?x1145 ?x1148 ?x1147 ?x987 ?x988 ?x989 ?x990 ?x991 (* 6 (* n 1 1 1 6 6 k)) (* 6 (* n 1 n 1 6 6 k)) (* 6 (* n n n 1 6 6 k)) (* 6 (* n 1 1 n 6 6 k)) (* 6 (* n n 1 n 6 6 k)) ?x1101 ?x1153 ?x1156)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 (* c n))) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x565 (and $x130 $x214 $x266 $x304 (not (= ?x1155 0)))))
 (let ((?x768 (* (+ (- 6) m (* (- 6) n)) (+ (* (- 1) ?x737) ?x743 (* (- 1) ?x744) ?x584))))
 (let (($x586 (not (= ?x768 0))))
 (let (($x691 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x721 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x725 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x721 $x691 $x586)))
 (rewrite (= $x725 $x565)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x775 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ k m)))
 (let ((?x365 (+ 6 m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x584 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x74)))
 (let ((?x73 (+ c k)))
 (let ((?x744 (* ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73)))
 (let ((?x743 (* ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x765 (+ (* (- 1) (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73)) ?x743 (* (- 1) ?x744) ?x584)))
 (let (($x586 (not (= (* (+ (- 6) m (* (- 6) n)) ?x765) 0))))
 (let (($x691 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x556 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x616 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 (= ?x616 (- 4)) $x556 $x691 $x586)))))))))))))))) :qid k!34))
 ))
 (let ((?x648 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x365 (+ 6 m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x584 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x74)))
 (let ((?x73 (+ c k)))
 (let ((?x744 (* ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73)))
 (let ((?x743 (* ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x765 (+ (* (- 1) (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73)) ?x743 (* (- 1) ?x744) ?x584)))
 (let (($x586 (not (= (* (+ (- 6) m (* (- 6) n)) ?x765) 0))))
 (let (($x691 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x721 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x725 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x721 $x691 $x586)))
 (let (($x556 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x616 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x735 (and $x130 (= ?x616 (- 4)) $x556 $x691 $x586)))
 (rewrite (= $x735 $x725)))))))))))))))))))))))))
 ))
 (let (($x88 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ n 1)))
 (let ((?x75 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x73 (+ c k)))
 (let ((?x78 (+ (* (- 1) ?x73 ?x73 ?x73 ?x74 ?x75 ?x75 ?x75 ?x69) (* ?x73 ?x73 ?x73 ?x74 ?x74 ?x69 ?x69))))
 (let ((?x82 (+ (- ?x78 (* ?x73 ?x73 ?x74 ?x75 ?x75 ?x75 ?x69 ?x69)) (* ?x74 ?x75 ?x75 ?x69 ?x69 ?x69))))
 (let (($x84 (= (* (- (+ (* (- 6) 1) m 6) (* 6 ?x69)) ?x82) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x84))))))))))))))))) :qid k!34))
 ))
 (let ((?x745 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ k m)))
 (let ((?x365 (+ 6 m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x584 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x74)))
 (let ((?x73 (+ c k)))
 (let ((?x744 (* ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73)))
 (let ((?x743 (* ?x319 ?x319 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x765 (+ (* (- 1) (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x73 ?x73 ?x73)) ?x743 (* (- 1) ?x744) ?x584)))
 (let (($x586 (not (= (* (+ (- 6) m (* (- 6) n)) ?x765) 0))))
 (let (($x691 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x556 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x616 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x735 (and $x130 (= ?x616 (- 4)) $x556 $x691 $x586)))
 (let ((?x69 (+ n 1)))
 (let ((?x75 (+ m 6)))
 (let ((?x78 (+ (* (- 1) ?x73 ?x73 ?x73 ?x74 ?x75 ?x75 ?x75 ?x69) (* ?x73 ?x73 ?x73 ?x74 ?x74 ?x69 ?x69))))
 (let ((?x82 (+ (- ?x78 (* ?x73 ?x73 ?x74 ?x75 ?x75 ?x75 ?x69 ?x69)) (* ?x74 ?x75 ?x75 ?x69 ?x69 ?x69))))
 (let (($x84 (= (* (- (+ (* (- 6) 1) m 6) (* 6 ?x69)) ?x82) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x87 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x84)))))
 (rewrite (= $x87 $x735))))))))))))))))))))))))))))))
 ))
 (let ((@x89 (asserted $x88)))
 (let ((@x718 (mp (mp @x89 (quant-intro (proof-bind ?x745) (= $x88 $x775)) $x775) (rewrite (= $x775 $x775)) $x775)))
 (let ((@x499 (mp (mp @x718 (quant-intro (proof-bind ?x648) (= $x775 $x646)) $x646) (quant-intro (proof-bind ?x388) (= $x646 $x452)) $x452)))
 (let ((@x157 (mp~ (mp @x499 (quant-intro (proof-bind ?x486) (= $x452 $x377)) $x377) (sk (~ $x377 $x165)) $x165)))
 (let ((@x428 (mp @x157 (rewrite (= $x165 $x541)) $x541)))
 (let ((@x325 (and-elim @x428 $x174)))
 (let ((@x116 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x174) $x705)) @x325 $x705)))
 (let (($x235 (>= ?x317 1)))
 (let ((@x790 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x174) $x235)) @x325 $x235)))
 (let (($x706 (<= ?x280 1)))
 (let ((@x947 (and-elim @x428 $x151)))
 (let ((@x597 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x151) $x706)) @x947 $x706)))
 (let (($x384 (>= ?x280 1)))
 (let ((@x525 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x151) $x384)) @x947 $x384)))
 (let (($x287 (<= ?x294 (- 4))))
 (let ((@x168 (and-elim @x428 $x292)))
 (let ((@x196 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x292) $x287)) @x168 $x287)))
 (let (($x228 (>= ?x294 (- 4))))
 (let ((@x588 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x292) $x228)) @x168 $x228)))
 (let (($x310 (<= ?x261 (- 6))))
 (let ((@x665 (and-elim @x428 $x259)))
 (let ((@x523 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x259) $x310)) @x665 $x310)))
 (let (($x571 (>= ?x261 (- 6))))
 (let ((@x607 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x259) $x571)) @x665 $x571)))
 (let (($x534 (not (<= ?x390 0))))
 (let (($x758 (>= ?x390 0)))
 (let ((@x573 ((_ th-lemma arith) (hypothesis (not $x758)) @x790 @x116 @x607 @x523 @x607 @x523 @x790 @x116 @x525 @x597 @x790 @x116 @x525 @x597 @x790 @x116 @x607 @x523 @x588 @x196 @x525 @x597 @x790 @x116 false)))
 (let ((@x308 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x698 $x534 (not $x758))) (and-elim @x428 $x656) (or $x534 (not $x758)))))
 ((_ th-lemma arith) (unit-resolution @x308 (lemma @x573 $x758) $x534) @x790 @x116 @x607 @x523 @x607 @x523 @x790 @x116 @x525 @x597 @x790 @x116 @x525 @x597 @x790 @x116 @x607 @x523 @x588 @x196 @x525 @x597 @x790 @x116 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        23
 :arith-assert-upper        19
 :arith-branch-var          2
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           12
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             660
 :arith-nonlinear-bounds    35
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             6
 :arith-patches_succ        2
 :arith-pivots              13
 :arith-row-summations      30
 :arith-tableau-max-columns 82
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 9
 :del-clause                16
 :final-checks              10
 :max-memory                3.78
 :memory                    3.20
 :mk-bool-var               29
 :mk-clause                 16
 :num-allocs                1413364
 :num-checks                1
 :propagations              12
 :rlimit-count              11887
 :time                      0.01
 :total-time                0.02)
