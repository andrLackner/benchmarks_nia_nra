unsat
((set-logic NIA)
(declare-fun y!0 () Int)
(declare-fun x!1 () Int)
(proof
(let ((?x315 (* (- 1) y!0)))
 (let ((?x2497 (* (- 1) x!1)))
 (let ((?x344 (+ y00 x00 ?x2497 ?x315)))
 (let (($x2749 (<= ?x344 0)))
 (let (($x199 (= ?x344 0)))
 (let ((?x385 (+ 1 y!0)))
 (let ((?x820 (+ (- 1) x!1)))
 (let ((?x2754 (* y00 ?x820 ?x820 ?x820 ?x820 ?x820 ?x820 ?x385 ?x385)))
 (let ((?x2551 (* x!1 y!0 y!0)))
 (let ((?x1418 (* 2 ?x2551)))
 (let ((?x2549 (* x!1 x!1 y!0 y!0)))
 (let ((?x2508 (* (- 1) ?x2549)))
 (let ((?x2546 (* x!1 x!1 x!1)))
 (let ((?x2250 (* (- 1) ?x2546)))
 (let ((?x2466 (* x!1 x!1)))
 (let ((?x2577 (* 2 ?x2466)))
 (let ((?x2265 (* (- 4) (* y00 x!1 x!1 x!1 y!0 y!0))))
 (let ((?x1606 (* x00 y!0 y!0)))
 (let ((?x2133 (* (- 4) (* x00 x!1 y!0 y!0))))
 (let ((?x2269 (* (- 4) (* x00 x!1 x!1 x!1 y!0 y!0))))
 (let ((?x2268 (* (- 4) (* y00 x!1 y!0 y!0))))
 (let ((?x1064 (* x!1 y!0)))
 (let ((?x1047 (* x!1 x!1 y!0)))
 (let ((?x372 (* x00 ?x820 ?x820 ?x820 ?x820 ?x820 ?x820 ?x385 ?x385)))
 (let ((?x339 (* x!1 x!1 x!1 y!0)))
 (let ((?x335 (* (- 1) ?x339)))
 (let ((?x303 (* y00 y!0 y!0)))
 (let ((?x170 (* y00 x!1 x!1 x!1 x!1 y!0 y!0)))
 (let ((?x165 (* x00 x!1 x!1 x!1 x!1 y!0 y!0)))
 (let ((?x139 (* y!0 y!0)))
 (let ((?x872 (* (- 1) ?x139)))
 (let ((?x435 (+ (* 3 y00) (* 3 x00) ?x872 (* 6 (* y00 x!1 x!1 y!0 y!0)) ?x165 ?x170 ?x303 ?x2497 ?x335 ?x372 (* (- 1) (* ?x820 ?x820 ?x820 ?x820 ?x820 ?x820 ?x385 ?x385 ?x385)) (* (- 1) (* ?x820 ?x820 ?x820 ?x820 ?x820 ?x820 ?x820 ?x385 ?x385)) (* (- 14) (* x00 x!1 y!0)) (* (- 1) (* ?x820 ?x820 ?x820 ?x820 ?x820 ?x385)) (* (- 10) (* x00 x!1)) (* 2 (* y00 x!1 x!1 x!1 x!1)) (* (- 1) (* ?x820 ?x820 ?x820 ?x820 ?x385 ?x385)) ?x1047 (* (- 1) (* ?x820 ?x820 ?x820 ?x820 ?x820 ?x385 ?x385)) (* 13 (* x00 x!1 x!1)) ?x1064 (* (- 8) (* x00 x!1 x!1 x!1)) ?x2268 ?x2269 (* 3 (* x00 x!1 x!1 x!1 x!1 y!0)) (* (- 8) (* y00 x!1 x!1 x!1)) (* (- 12) (* x00 x!1 x!1 x!1 y!0)) (* 6 (* x00 x!1 x!1 y!0 y!0)) ?x2133 ?x1606 ?x315 (* 2 (* x00 x!1 x!1 x!1 x!1)) (* (- 1) (* ?x820 ?x820 ?x820 ?x820 ?x385 ?x385 ?x385)) ?x2265 (* 19 (* x00 x!1 x!1 y!0)) (* 4 (* x00 y!0)) (* (- 12) (* y00 x!1 x!1 x!1 y!0)) (* 3 (* y00 x!1 x!1 x!1 x!1 y!0)) (* 13 (* y00 x!1 x!1)) (* (- 10) (* y00 x!1)) (* 4 (* y00 y!0)) (* 19 (* y00 x!1 x!1 y!0)) (* (- 14) (* y00 x!1 y!0)) ?x2577 ?x2250 ?x2508 ?x1418 ?x2754)))
 (let (($x2828 (= ?x435 0)))
 (let (($x2869 (not $x2828)))
 (let ((?x371 (+ 1 x!1)))
 (let ((?x2635 (+ (- 1) y!0)))
 (let ((?x2498 (* y00 ?x2635 ?x2635 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371)))
 (let ((?x815 (* (- 2) ?x2466)))
 (let ((?x2199 (* y00 x!1 x!1)))
 (let ((?x2149 (* y00 x!1 x!1 x!1 x!1 y!0)))
 (let ((?x1550 (* ?x2635 ?x2635 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371)))
 (let ((?x1544 (* x00 x!1 x!1 x!1 x!1 y!0)))
 (let ((?x2524 (* (- 1) ?x1064)))
 (let ((?x1060 (* ?x2635 ?x2635 ?x371 ?x371 ?x371 ?x371 ?x371)))
 (let ((?x1059 (* x00 x!1 x!1)))
 (let ((?x410 (* ?x2635 ?x2635 ?x2635 ?x371 ?x371 ?x371 ?x371)))
 (let ((?x340 (* ?x2635 ?x2635 ?x371 ?x371 ?x371 ?x371)))
 (let ((?x338 (* ?x2635 ?x371 ?x371 ?x371 ?x371 ?x371)))
 (let ((?x286 (* ?x2635 ?x2635 ?x2635 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371)))
 (let ((?x2136 (+ y00 x00 ?x139 (* (- 6) (* y00 x!1 x!1 y!0 y!0)) (* (- 1) ?x165) (* (- 1) ?x170) ?x286 (* (- 1) ?x303) ?x2497 ?x338 ?x339 ?x340 ?x410 (* 2 (* x00 x!1 y!0)) (* 2 (* x00 x!1)) ?x1047 ?x1059 ?x1060 ?x2524 (* (- 1) (* x00 ?x2635 ?x2635 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371)) ?x2268 ?x2269 ?x1544 (* 4 (* x00 x!1 x!1 x!1 y!0)) ?x1550 (* (- 6) (* x00 x!1 x!1 y!0 y!0)) ?x2133 (* (- 1) ?x1606) ?x315 ?x2265 (* 5 (* x00 x!1 x!1 y!0)) (* 4 (* y00 x!1 x!1 x!1 y!0)) ?x2149 ?x2199 (* 2 (* y00 x!1)) (* 5 (* y00 x!1 x!1 y!0)) (* 2 (* y00 x!1 y!0)) ?x815 (* (- 1) ?x2498) ?x2250 ?x2549 ?x1418)))
 (let (($x2251 (= ?x2136 0)))
 (let (($x2216 (or (not $x2251) $x2869)))
 (let (($x2874 (and $x199 $x2216)))
 (let ((?x885 (* ?x820 ?x820 ?x820 ?x820 ?x820 ?x385)))
 (let ((?x312 (* 4 (* x!1 x!1 x!1 y!0 y!0 y00))))
 (let ((?x311 (* 4 (* x!1 y!0 y!0 y00))))
 (let ((?x945 (* ?x820 ?x820 ?x820 ?x820 ?x385 ?x385)))
 (let ((?x877 (* ?x820 ?x820 ?x820 ?x820 ?x820 ?x820 ?x820 ?x385 ?x385)))
 (let ((?x1056 (* ?x820 ?x820 ?x820 ?x820 ?x820 ?x385 ?x385)))
 (let ((?x814 (* ?x820 ?x820 ?x820 ?x820 ?x820 ?x820 ?x385 ?x385 ?x385)))
 (let ((?x2191 (* 4 (* x!1 x!1 x!1 y!0 y!0 x00))))
 (let ((?x360 (* 4 (* x!1 y!0 y!0 x00))))
 (let ((?x1884 (* ?x820 ?x820 ?x820 ?x820 ?x385 ?x385 ?x385)))
 (let ((?x2192 (* (- 1) ?x1047)))
 (let ((?x2576 (* (- 2) ?x2551)))
 (let ((?x1311 (* (- 3) x00)))
 (let ((?x1802 (* (- 3) y00)))
 (let ((?x1044 (+ x!1 y!0 ?x1802 ?x1311 (* (- 4) (* y!0 y00)) (* 14 (* x!1 y!0 y00)) (* (- 19) (* x!1 x!1 y!0 y00)) (* 10 (* x!1 y00)) (* 12 (* x!1 x!1 x!1 y!0 y00)) (* (- 3) (* x!1 x!1 x!1 x!1 y!0 y00)) (* (- 13) (* x!1 x!1 y00)) (* 8 (* x!1 x!1 x!1 y00)) (* (- 2) (* x!1 x!1 x!1 x!1 y00)) (* (- 1) ?x2754) (* 10 (* x!1 x00)) (* (- 13) (* x!1 x!1 x00)) (* (- 4) (* y!0 x00)) (* 14 (* x!1 y!0 x00)) (* (- 19) (* x!1 x!1 y!0 x00)) (* (- 1) ?x372) (* 8 (* x!1 x!1 x!1 x00)) (* (- 2) (* x!1 x!1 x!1 x!1 x00)) (* 12 (* x!1 x!1 x!1 y!0 x00)) (* (- 3) (* x!1 x!1 x!1 x!1 y!0 x00)) ?x139 ?x2576 ?x2549 ?x815 ?x2524 ?x2192 ?x1884 (* (- 1) (* y!0 y!0 x00)) ?x360 (* (- 6) (* x!1 x!1 y!0 y!0 x00)) ?x2191 (* (- 1) (* x!1 x!1 x!1 x!1 y!0 y!0 x00)) ?x2546 (* (- 1) (* y!0 y!0 y00)) ?x814 ?x1056 ?x339 ?x877 ?x945 ?x311 (* (- 6) (* x!1 x!1 y!0 y!0 y00)) ?x312 (* (- 1) (* x!1 x!1 x!1 x!1 y!0 y!0 y00)) ?x885)))
 (let ((?x1353 (* x00 ?x2635 ?x2635 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371)))
 (let ((?x1576 (* x!1 x!1 x!1 x!1 y!0 y!0 y00)))
 (let ((?x2547 (* y!0 y!0 y00)))
 (let ((?x2510 (* x!1 x!1 x!1 x!1 y!0 y!0 x00)))
 (let ((?x193 (* y!0 y!0 x00)))
 (let ((?x109 (* (- 1) x00)))
 (let ((?x102 (* (- 1) y00)))
 (let ((?x2784 (+ x!1 y!0 ?x102 ?x109 (* (- 1) ?x410) (* (- 2) (* x!1 y!0 y00)) (* (- 5) (* x!1 x!1 y!0 y00)) (* (- 2) (* x!1 y00)) (* (- 4) (* x!1 x!1 x!1 y!0 y00)) (* (- 1) (* x!1 x!1 x!1 x!1 y!0 y00)) (* (- 1) (* x!1 x!1 y00)) ?x2498 (* (- 2) (* x!1 x00)) (* (- 1) (* x!1 x!1 x00)) (* (- 2) (* x!1 y!0 x00)) (* (- 5) (* x!1 x!1 y!0 x00)) (* (- 1) ?x1550) (* (- 4) (* x!1 x!1 x!1 y!0 x00)) (* (- 1) (* x!1 x!1 x!1 x!1 y!0 x00)) ?x872 ?x2576 ?x2508 ?x2577 ?x1064 ?x2192 ?x193 ?x360 (* 6 (* x!1 x!1 y!0 y!0 x00)) ?x2191 ?x2510 ?x2546 ?x2547 ?x335 ?x311 (* 6 (* x!1 x!1 y!0 y!0 y00)) ?x312 ?x1576 (* (- 1) ?x1060) ?x1353 (* (- 1) ?x286) (* (- 1) ?x340) (* (- 1) ?x338))))
 (let (($x2544 (and (= (+ x!1 y!0 ?x102 ?x109) 0) (or (not (= ?x2784 0)) (not (= ?x1044 0))))))
 (let (($x1072 (exists ((x Int) (y Int) )(! (let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1821 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1581 (* x x x x y y y00)))
 (let ((?x1727 (* (- 1) ?x1581)))
 (let ((?x1781 (* 4 (* x x x y y y00))))
 (let ((?x1575 (* x x y y y00)))
 (let ((?x1791 (* (- 6) ?x1575)))
 (let ((?x1790 (* 4 (* x y y y00))))
 (let ((?x1558 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1499 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1461 (* x x x y)))
 (let ((?x1446 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1444 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1428 (* y y y00)))
 (let ((?x1427 (* (- 1) ?x1428)))
 (let ((?x1341 (* x x x)))
 (let ((?x1151 (* x x x x y y x00)))
 (let ((?x1206 (* (- 1) ?x1151)))
 (let ((?x1289 (* 4 (* x x x y y x00))))
 (let ((?x1110 (* x x y y x00)))
 (let ((?x1299 (* (- 6) ?x1110)))
 (let ((?x1300 (* 4 (* x y y x00))))
 (let ((?x1095 (* y y x00)))
 (let ((?x1202 (* (- 1) ?x1095)))
 (let ((?x830 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1472 (* (- 1) (* x x y))))
 (let ((?x783 (* x x y y)))
 (let ((?x822 (* (- 2) (* x y y))))
 (let ((?x777 (* y y)))
 (let ((?x633 (* x x x x y x00)))
 (let ((?x1325 (* (- 3) ?x633)))
 (let ((?x607 (* x x x y x00)))
 (let ((?x1324 (* 12 ?x607)))
 (let ((?x1322 (* (- 2) (* x x x x x00))))
 (let ((?x1321 (* 8 (* x x x x00))))
 (let ((?x468 (* x00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1508 (* (- 1) ?x468)))
 (let ((?x441 (* x x y x00)))
 (let ((?x1320 (* (- 19) ?x441)))
 (let ((?x436 (* x y x00)))
 (let ((?x1318 (* 14 ?x436)))
 (let ((?x1316 (* (- 4) (* y x00))))
 (let ((?x424 (* x x x00)))
 (let ((?x1315 (* (- 13) ?x424)))
 (let ((?x420 (* x x00)))
 (let ((?x1313 (* 10 ?x420)))
 (let ((?x350 (* y00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x355 (* (- 1) ?x350)))
 (let ((?x1813 (* (- 2) (* x x x x y00))))
 (let ((?x1812 (* 8 (* x x x y00))))
 (let ((?x225 (* x x x x y y00)))
 (let ((?x1810 (* (- 3) ?x225)))
 (let ((?x223 (* x x x y y00)))
 (let ((?x1809 (* 12 ?x223)))
 (let ((?x157 (* x x y y00)))
 (let ((?x1806 (* (- 19) ?x157)))
 (let ((?x1803 (* (- 4) (* y y00))))
 (let ((?x1311 (* (- 3) x00)))
 (let ((?x1802 (* (- 3) y00)))
 (let ((?x3202 (+ x y ?x1802 ?x1311 ?x1803 (* 14 (* x y y00)) ?x1806 (* 10 (* x y00)) ?x1809 ?x1810 (* (- 13) (* x x y00)) ?x1812 ?x1813 ?x355 ?x1313 ?x1315 ?x1316 ?x1318 ?x1320 ?x1508 ?x1321 ?x1322 ?x1324 ?x1325 ?x777 ?x822 ?x783 (* (- 2) (* x x)) (* (- 1) (* x y)) ?x1472 ?x830 ?x1202 ?x1300 ?x1299 ?x1289 ?x1206 ?x1341 ?x1427 ?x1444 ?x1446 ?x1461 ?x1499 ?x1558 ?x1790 ?x1791 ?x1781 ?x1727 ?x1821)))
 (let ((?x1905 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x2238 (* ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x334 (* (- 1) ?x2238)))
 (let ((?x2205 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x307 (* (- 1) ?x2205)))
 (let ((?x2196 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1214 (* (- 1) ?x2196)))
 (let ((?x2182 (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2151 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1742 (* (- 1) ?x2151)))
 (let ((?x2742 (* 6 ?x1575)))
 (let ((?x2823 (* (- 1) ?x1461)))
 (let ((?x2395 (* 6 ?x1110)))
 (let ((?x799 (* x y)))
 (let ((?x794 (* x x)))
 (let ((?x2824 (* 2 ?x794)))
 (let ((?x2825 (* (- 1) ?x783)))
 (let ((?x778 (* (- 1) ?x777)))
 (let ((?x675 (* (- 1) ?x633)))
 (let ((?x644 (* (- 4) ?x607)))
 (let ((?x442 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x470 (* (- 1) ?x442)))
 (let ((?x2826 (* (- 5) ?x441)))
 (let ((?x448 (* (- 2) ?x436)))
 (let ((?x467 (* (- 1) ?x424)))
 (let ((?x1878 (* (- 2) ?x420)))
 (let ((?x399 (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x321 (* (- 1) ?x225)))
 (let ((?x293 (* (- 4) ?x223)))
 (let ((?x2827 (* (- 5) ?x157)))
 (let ((?x149 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2798 (* (- 1) ?x149)))
 (let ((?x109 (* (- 1) x00)))
 (let ((?x102 (* (- 1) y00)))
 (let ((?x561 (+ x y ?x102 ?x109 ?x2798 (* (- 2) (* x y y00)) ?x2827 (* (- 2) (* x y00)) ?x293 ?x321 (* (- 1) (* x x y00)) ?x399 ?x1878 ?x467 ?x448 ?x2826 ?x470 ?x644 ?x675 ?x778 ?x822 ?x2825 ?x2824 ?x799 ?x1472 ?x1095 ?x1300 ?x2395 ?x1289 ?x1151 ?x1341 ?x1428 ?x2823 ?x1790 ?x2742 ?x1781 ?x1581 ?x1742 ?x2182 ?x1214 ?x307 ?x334)))
 (let (($x128 (= (+ x y ?x102 ?x109) 0)))
 (and $x128 (or (not (= ?x561 0)) (not (= ?x3202 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x2796 (exists ((x Int) (y Int) )(! (let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1821 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x402 (* y00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x468 (* x00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x350 (* y00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x342 (* x00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x2455 (* x00 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1360 (* x00 ?x120 ?x120 ?x130)))
 (let ((?x2800 (* y00 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1452 (* y00 ?x120 ?x120 ?x130)))
 (let ((?x2142 (+ ?x1452 ?x2800 ?x1360 ?x2455 (* (- 1) (* ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)) ?x342 ?x350 (* (- 1) (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x468 (* (- 1) (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)) (* (- 1) (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* ?x120 ?x120 ?x120 ?x130)) ?x402 (* (- 1) ?x1821))))
 (let ((?x1905 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x2238 (* ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x334 (* (- 1) ?x2238)))
 (let ((?x2224 (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2205 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x307 (* (- 1) ?x2205)))
 (let ((?x2151 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1742 (* (- 1) ?x2151)))
 (let ((?x2196 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1214 (* (- 1) ?x2196)))
 (let ((?x2182 (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x442 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x470 (* (- 1) ?x442)))
 (let ((?x399 (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x821 (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x149 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2798 (* (- 1) ?x149)))
 (let ((?x341 (* x00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x635 (* x00 ?x184 ?x1905 ?x1905)))
 (let ((?x2427 (* y00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x395 (* y00 ?x184 ?x1905 ?x1905)))
 (let ((?x188 (+ ?x395 ?x2427 ?x635 ?x341 (* (- 1) (* ?x184 ?x184 ?x1905 ?x1905)) ?x2798 ?x821 ?x399 ?x470 ?x2182 ?x1214 ?x1742 ?x307 (* (- 1) (* ?x184 ?x1905 ?x1905 ?x1905)) ?x2224 ?x334)))
 (let (($x2769 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x2769 (or (not (= ?x188 0)) (not (= ?x2142 0)))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1078 (lambda ((x Int) (y Int) )(let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1821 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1581 (* x x x x y y y00)))
 (let ((?x1727 (* (- 1) ?x1581)))
 (let ((?x1781 (* 4 (* x x x y y y00))))
 (let ((?x1575 (* x x y y y00)))
 (let ((?x1791 (* (- 6) ?x1575)))
 (let ((?x1790 (* 4 (* x y y y00))))
 (let ((?x1558 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1499 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1461 (* x x x y)))
 (let ((?x1446 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1444 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1428 (* y y y00)))
 (let ((?x1427 (* (- 1) ?x1428)))
 (let ((?x1341 (* x x x)))
 (let ((?x1151 (* x x x x y y x00)))
 (let ((?x1206 (* (- 1) ?x1151)))
 (let ((?x1289 (* 4 (* x x x y y x00))))
 (let ((?x1110 (* x x y y x00)))
 (let ((?x1299 (* (- 6) ?x1110)))
 (let ((?x1300 (* 4 (* x y y x00))))
 (let ((?x1095 (* y y x00)))
 (let ((?x1202 (* (- 1) ?x1095)))
 (let ((?x830 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1472 (* (- 1) (* x x y))))
 (let ((?x783 (* x x y y)))
 (let ((?x822 (* (- 2) (* x y y))))
 (let ((?x777 (* y y)))
 (let ((?x633 (* x x x x y x00)))
 (let ((?x1325 (* (- 3) ?x633)))
 (let ((?x607 (* x x x y x00)))
 (let ((?x1324 (* 12 ?x607)))
 (let ((?x1322 (* (- 2) (* x x x x x00))))
 (let ((?x1321 (* 8 (* x x x x00))))
 (let ((?x468 (* x00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1508 (* (- 1) ?x468)))
 (let ((?x441 (* x x y x00)))
 (let ((?x1320 (* (- 19) ?x441)))
 (let ((?x436 (* x y x00)))
 (let ((?x1318 (* 14 ?x436)))
 (let ((?x1316 (* (- 4) (* y x00))))
 (let ((?x424 (* x x x00)))
 (let ((?x1315 (* (- 13) ?x424)))
 (let ((?x420 (* x x00)))
 (let ((?x1313 (* 10 ?x420)))
 (let ((?x350 (* y00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x355 (* (- 1) ?x350)))
 (let ((?x1813 (* (- 2) (* x x x x y00))))
 (let ((?x1812 (* 8 (* x x x y00))))
 (let ((?x225 (* x x x x y y00)))
 (let ((?x1810 (* (- 3) ?x225)))
 (let ((?x223 (* x x x y y00)))
 (let ((?x1809 (* 12 ?x223)))
 (let ((?x157 (* x x y y00)))
 (let ((?x1806 (* (- 19) ?x157)))
 (let ((?x1803 (* (- 4) (* y y00))))
 (let ((?x1311 (* (- 3) x00)))
 (let ((?x1802 (* (- 3) y00)))
 (let ((?x3202 (+ x y ?x1802 ?x1311 ?x1803 (* 14 (* x y y00)) ?x1806 (* 10 (* x y00)) ?x1809 ?x1810 (* (- 13) (* x x y00)) ?x1812 ?x1813 ?x355 ?x1313 ?x1315 ?x1316 ?x1318 ?x1320 ?x1508 ?x1321 ?x1322 ?x1324 ?x1325 ?x777 ?x822 ?x783 (* (- 2) (* x x)) (* (- 1) (* x y)) ?x1472 ?x830 ?x1202 ?x1300 ?x1299 ?x1289 ?x1206 ?x1341 ?x1427 ?x1444 ?x1446 ?x1461 ?x1499 ?x1558 ?x1790 ?x1791 ?x1781 ?x1727 ?x1821)))
 (let ((?x1905 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x2238 (* ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x334 (* (- 1) ?x2238)))
 (let ((?x2205 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x307 (* (- 1) ?x2205)))
 (let ((?x2196 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1214 (* (- 1) ?x2196)))
 (let ((?x2182 (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2151 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1742 (* (- 1) ?x2151)))
 (let ((?x2742 (* 6 ?x1575)))
 (let ((?x2823 (* (- 1) ?x1461)))
 (let ((?x2395 (* 6 ?x1110)))
 (let ((?x799 (* x y)))
 (let ((?x794 (* x x)))
 (let ((?x2824 (* 2 ?x794)))
 (let ((?x2825 (* (- 1) ?x783)))
 (let ((?x778 (* (- 1) ?x777)))
 (let ((?x675 (* (- 1) ?x633)))
 (let ((?x644 (* (- 4) ?x607)))
 (let ((?x442 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x470 (* (- 1) ?x442)))
 (let ((?x2826 (* (- 5) ?x441)))
 (let ((?x448 (* (- 2) ?x436)))
 (let ((?x467 (* (- 1) ?x424)))
 (let ((?x1878 (* (- 2) ?x420)))
 (let ((?x399 (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x321 (* (- 1) ?x225)))
 (let ((?x293 (* (- 4) ?x223)))
 (let ((?x2827 (* (- 5) ?x157)))
 (let ((?x149 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2798 (* (- 1) ?x149)))
 (let ((?x109 (* (- 1) x00)))
 (let ((?x102 (* (- 1) y00)))
 (let ((?x561 (+ x y ?x102 ?x109 ?x2798 (* (- 2) (* x y y00)) ?x2827 (* (- 2) (* x y00)) ?x293 ?x321 (* (- 1) (* x x y00)) ?x399 ?x1878 ?x467 ?x448 ?x2826 ?x470 ?x644 ?x675 ?x778 ?x822 ?x2825 ?x2824 ?x799 ?x1472 ?x1095 ?x1300 ?x2395 ?x1289 ?x1151 ?x1341 ?x1428 ?x2823 ?x1790 ?x2742 ?x1781 ?x1581 ?x1742 ?x2182 ?x1214 ?x307 ?x334)))
 (let (($x128 (= (+ x y ?x102 ?x109) 0)))
 (let (($x3197 (and $x128 (or (not (= ?x561 0)) (not (= ?x3202 0))))))
 (let ((?x402 (* y00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x342 (* x00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x2455 (* x00 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1360 (* x00 ?x120 ?x120 ?x130)))
 (let ((?x2800 (* y00 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1452 (* y00 ?x120 ?x120 ?x130)))
 (let ((?x2142 (+ ?x1452 ?x2800 ?x1360 ?x2455 (* (- 1) (* ?x120 ?x120 ?x130 ?x130)) (* (- 1) ?x830) ?x342 ?x350 (* (- 1) ?x1499) ?x468 (* (- 1) ?x1444) (* (- 1) ?x1446) (* (- 1) ?x1558) (* (- 1) (* ?x120 ?x120 ?x120 ?x130)) ?x402 (* (- 1) ?x1821))))
 (let ((?x2224 (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x821 (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x341 (* x00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x635 (* x00 ?x184 ?x1905 ?x1905)))
 (let ((?x2427 (* y00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x395 (* y00 ?x184 ?x1905 ?x1905)))
 (let ((?x188 (+ ?x395 ?x2427 ?x635 ?x341 (* (- 1) (* ?x184 ?x184 ?x1905 ?x1905)) ?x2798 ?x821 ?x399 ?x470 ?x2182 ?x1214 ?x1742 ?x307 (* (- 1) (* ?x184 ?x1905 ?x1905 ?x1905)) ?x2224 ?x334)))
 (let (($x2769 (= (+ x ?x102 ?x109 y) 0)))
 (let (($x365 (and $x2769 (or (not (= ?x188 0)) (not (= ?x2142 0))))))
 (rewrite (= $x365 $x3197))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1787 (exists ((x Int) (y Int) )(! (let ((?x1905 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x2238 (* ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2146 (* ?x184 ?x1905 ?x1905 ?x1905)))
 (let ((?x2205 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2151 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2196 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x442 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x149 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x354 (* ?x184 ?x184 ?x1905 ?x1905)))
 (let ((?x610 (+ (* (- 1) (* y00 ?x184 ?x1905 ?x1905)) (* (- 1) (* y00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) (* (- 1) (* x00 ?x184 ?x1905 ?x1905)) (* (- 1) (* x00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) ?x354 ?x149 (* (- 1) (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) (* (- 1) (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)) ?x442 (* (- 1) (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)) ?x2196 ?x2151 ?x2205 ?x2146 (* (- 1) (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) ?x2238)))
 (let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1821 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1861 (* ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1558 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1446 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1444 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x468 (* x00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1508 (* (- 1) ?x468)))
 (let ((?x1499 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x350 (* y00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x355 (* (- 1) ?x350)))
 (let ((?x830 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x333 (* ?x120 ?x120 ?x130 ?x130)))
 (let ((?x438 (+ (* (- 1) (* y00 ?x120 ?x120 ?x130)) (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x130)) ?x333 ?x830 (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x355 ?x1499 ?x1508 ?x1444 ?x1446 ?x1558 ?x1861 (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x1821)))
 (let (($x2769 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x2769 (or (not (= ?x438 0)) (not (= ?x610 0))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1847 (lambda ((x Int) (y Int) )(let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1821 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x402 (* y00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x468 (* x00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x350 (* y00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x342 (* x00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x2455 (* x00 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1360 (* x00 ?x120 ?x120 ?x130)))
 (let ((?x2800 (* y00 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1452 (* y00 ?x120 ?x120 ?x130)))
 (let ((?x2142 (+ ?x1452 ?x2800 ?x1360 ?x2455 (* (- 1) (* ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)) ?x342 ?x350 (* (- 1) (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x468 (* (- 1) (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)) (* (- 1) (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* ?x120 ?x120 ?x120 ?x130)) ?x402 (* (- 1) ?x1821))))
 (let ((?x1905 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x2238 (* ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x334 (* (- 1) ?x2238)))
 (let ((?x2224 (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2205 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x307 (* (- 1) ?x2205)))
 (let ((?x2151 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1742 (* (- 1) ?x2151)))
 (let ((?x2196 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1214 (* (- 1) ?x2196)))
 (let ((?x2182 (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x442 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x470 (* (- 1) ?x442)))
 (let ((?x399 (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x821 (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x149 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2798 (* (- 1) ?x149)))
 (let ((?x341 (* x00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x635 (* x00 ?x184 ?x1905 ?x1905)))
 (let ((?x2427 (* y00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x395 (* y00 ?x184 ?x1905 ?x1905)))
 (let ((?x188 (+ ?x395 ?x2427 ?x635 ?x341 (* (- 1) (* ?x184 ?x184 ?x1905 ?x1905)) ?x2798 ?x821 ?x399 ?x470 ?x2182 ?x1214 ?x1742 ?x307 (* (- 1) (* ?x184 ?x1905 ?x1905 ?x1905)) ?x2224 ?x334)))
 (let (($x2769 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x365 (and $x2769 (or (not (= ?x188 0)) (not (= ?x2142 0))))))
 (let ((?x2146 (* ?x184 ?x1905 ?x1905 ?x1905)))
 (let ((?x354 (* ?x184 ?x184 ?x1905 ?x1905)))
 (let ((?x610 (+ (* (- 1) ?x395) (* (- 1) ?x2427) (* (- 1) ?x635) (* (- 1) ?x341) ?x354 ?x149 (* (- 1) ?x821) (* (- 1) ?x399) ?x442 (* (- 1) ?x2182) ?x2196 ?x2151 ?x2205 ?x2146 (* (- 1) ?x2224) ?x2238)))
 (let ((?x1861 (* ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1558 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1446 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1444 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1508 (* (- 1) ?x468)))
 (let ((?x1499 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x355 (* (- 1) ?x350)))
 (let ((?x830 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x333 (* ?x120 ?x120 ?x130 ?x130)))
 (let ((?x438 (+ (* (- 1) ?x1452) (* (- 1) ?x2800) (* (- 1) ?x1360) (* (- 1) ?x2455) ?x333 ?x830 (* (- 1) ?x342) ?x355 ?x1499 ?x1508 ?x1444 ?x1446 ?x1558 ?x1861 (* (- 1) ?x402) ?x1821)))
 (let (($x800 (and $x2769 (or (not (= ?x438 0)) (not (= ?x610 0))))))
 (rewrite (= $x800 $x365))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x99 (exists ((x Int) (y Int) )(! (let ((?x67 (- y 1)))
 (let ((?x66 (+ x 1)))
 (let ((?x72 (- (* (- 1) ?x66 ?x66 ?x67 y00) (* ?x66 ?x66 ?x66 ?x66 ?x67 y00))))
 (let ((?x74 (- (- ?x72 (* ?x66 ?x66 x00 ?x67)) (* ?x66 ?x66 ?x66 ?x66 x00 ?x67))))
 (let ((?x77 (+ ?x74 (* ?x66 ?x66 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 ?x67))))
 (let ((?x81 (- (- ?x77 (* ?x66 ?x66 ?x66 ?x66 x00 ?x67 ?x67)) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 y00))))
 (let ((?x85 (- (+ ?x81 (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67)) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 x00 ?x67 ?x67))))
 (let ((?x90 (+ ?x85 (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x67))))
 (let ((?x94 (+ (- ?x90 (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 y00)) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x67))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x41 (- (* (- 1) ?x35 ?x35 ?x36 y00) (* ?x35 ?x35 ?x35 ?x35 ?x36 y00))))
 (let ((?x43 (- (- ?x41 (* ?x35 ?x35 x00 ?x36)) (* ?x35 ?x35 ?x35 ?x35 x00 ?x36))))
 (let ((?x46 (+ ?x43 (* ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x50 (- (- ?x46 (* ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 y00))))
 (let ((?x54 (- (+ ?x50 (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36))))
 (let ((?x59 (+ ?x54 (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x36))))
 (let ((?x63 (+ (- ?x59 (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 y00)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x36))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x63 0)) (not (= ?x94 0)))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1684 (lambda ((x Int) (y Int) )(let ((?x1905 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x2238 (* ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2146 (* ?x184 ?x1905 ?x1905 ?x1905)))
 (let ((?x2205 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2151 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x2196 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x442 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x149 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x354 (* ?x184 ?x184 ?x1905 ?x1905)))
 (let ((?x610 (+ (* (- 1) (* y00 ?x184 ?x1905 ?x1905)) (* (- 1) (* y00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) (* (- 1) (* x00 ?x184 ?x1905 ?x1905)) (* (- 1) (* x00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) ?x354 ?x149 (* (- 1) (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) (* (- 1) (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)) ?x442 (* (- 1) (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)) ?x2196 ?x2151 ?x2205 ?x2146 (* (- 1) (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) ?x2238)))
 (let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1821 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1861 (* ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1558 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1446 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1444 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x468 (* x00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1508 (* (- 1) ?x468)))
 (let ((?x1499 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x350 (* y00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x355 (* (- 1) ?x350)))
 (let ((?x830 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x333 (* ?x120 ?x120 ?x130 ?x130)))
 (let ((?x438 (+ (* (- 1) (* y00 ?x120 ?x120 ?x130)) (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x130)) ?x333 ?x830 (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x355 ?x1499 ?x1508 ?x1444 ?x1446 ?x1558 ?x1861 (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x1821)))
 (let (($x2769 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x800 (and $x2769 (or (not (= ?x438 0)) (not (= ?x610 0))))))
 (let ((?x67 (- y 1)))
 (let ((?x66 (+ x 1)))
 (let ((?x72 (- (* (- 1) ?x66 ?x66 ?x67 y00) (* ?x66 ?x66 ?x66 ?x66 ?x67 y00))))
 (let ((?x74 (- (- ?x72 (* ?x66 ?x66 x00 ?x67)) (* ?x66 ?x66 ?x66 ?x66 x00 ?x67))))
 (let ((?x77 (+ ?x74 (* ?x66 ?x66 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 ?x67))))
 (let ((?x81 (- (- ?x77 (* ?x66 ?x66 ?x66 ?x66 x00 ?x67 ?x67)) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 y00))))
 (let ((?x85 (- (+ ?x81 (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67)) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 x00 ?x67 ?x67))))
 (let ((?x90 (+ ?x85 (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x67))))
 (let ((?x94 (+ (- ?x90 (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 y00)) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x67))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x41 (- (* (- 1) ?x35 ?x35 ?x36 y00) (* ?x35 ?x35 ?x35 ?x35 ?x36 y00))))
 (let ((?x43 (- (- ?x41 (* ?x35 ?x35 x00 ?x36)) (* ?x35 ?x35 ?x35 ?x35 x00 ?x36))))
 (let ((?x46 (+ ?x43 (* ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x50 (- (- ?x46 (* ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 y00))))
 (let ((?x54 (- (+ ?x50 (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36))))
 (let ((?x59 (+ ?x54 (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x36))))
 (let ((?x63 (+ (- ?x59 (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 y00)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x36))))
 (let (($x98 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x63 0)) (not (= ?x94 0))))))
 (rewrite (= $x98 $x800))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x100 (asserted $x99)))
 (let ((@x345 (mp (mp @x100 (quant-intro (proof-bind ?x1684) (= $x99 $x1787)) $x1787) (rewrite (= $x1787 $x1787)) $x1787)))
 (let ((@x813 (mp (mp @x345 (quant-intro (proof-bind ?x1847) (= $x1787 $x2796)) $x2796) (quant-intro (proof-bind ?x1078) (= $x2796 $x1072)) $x1072)))
 (let ((@x2212 (mp (mp~ @x813 (sk (~ $x1072 $x2544)) $x2544) (rewrite (= $x2544 $x2874)) $x2874)))
 (let ((@x2144 (and-elim @x2212 $x199)))
 (let ((@x1043 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x199) $x2749)) @x2144 $x2749)))
 (let (($x2838 (>= ?x344 0)))
 (let ((@x2865 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x199) $x2838)) @x2144 $x2838)))
 (let (($x1598 (not (<= ?x435 0))))
 (let (($x2872 (>= ?x435 0)))
 (let ((@x2261 (lemma ((_ th-lemma arith) (hypothesis (not $x2872)) @x2865 @x1043 @x2865 @x1043 false) $x2872)))
 (let (($x2875 (>= ?x2136 0)))
 (let ((@x2279 (lemma ((_ th-lemma arith) (hypothesis (not $x2875)) @x2865 @x1043 @x2865 @x1043 false) $x2875)))
 (let (($x356 (<= ?x2136 0)))
 (let ((@x2290 (lemma ((_ th-lemma arith) (hypothesis (not $x356)) @x2865 @x1043 @x2865 @x1043 false) $x356)))
 (let ((@x879 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2251 (not $x356) (not $x2875))) @x2290 @x2279 $x2251)))
 (let ((@x1885 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2828 $x1598 (not $x2872))) (unit-resolution (and-elim @x2212 $x2216) @x879 $x2869) @x2261 $x1598)))
 ((_ th-lemma arith) @x1885 @x2865 @x1043 @x2865 @x1043 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        26
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-grobner             4
 :arith-max-min             941
 :arith-nonlinear-bounds    19
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-pivots              3
 :arith-row-summations      2
 :arith-tableau-max-columns 80
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                4.07
 :memory                    3.50
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                2390203
 :num-checks                1
 :propagations              14
 :rlimit-count              17471
 :time                      0.02
 :total-time                0.03)
