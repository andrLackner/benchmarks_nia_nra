unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun x!0 () Int)
(declare-fun q!3 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x2152 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 2 (* d!1 q!3)) (* (- 1) (* d!1 d!1 q!3)) (* (- 4) (* d!1 x!0)) (* (- 8) r!2) (* 4 (* d!1 r!2)))))
 (let (($x1735 (>= ?x2152 0)))
 (let (($x378 (= ?x2152 0)))
 (let ((?x391 (* 8 r!2)))
 (let ((?x1292 (* d!1 d!1 q!3)))
 (let ((?x305 (* r00 d00)))
 (let ((?x306 (* 4 ?x305)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x693 (+ ?x170 ?x218 ?x202 ?x268 ?x306 (* (- 2) (* d!1 q!3)) ?x1292 (* 4 (* d!1 x!0)) ?x391 (* (- 4) (* d!1 r!2)))))
 (let ((?x720 (* 12 (* d!1 d!1 r!2 r!2 r!2))))
 (let ((?x2008 (* 2 (* d!1 d!1 d!1 r!2 r!2 r!2))))
 (let ((?x2059 (* (- 8) (* x!0 r!2 r!2))))
 (let ((?x1758 (* q!3 q!3 r!2 r!2)))
 (let ((?x764 (* 24 ?x1758)))
 (let ((?x1707 (* q!3 r!2 r!2)))
 (let ((?x393 (* (- 184) ?x1707)))
 (let ((?x1557 (* d!1 d!1 d!1 q!3 r!2 r!2)))
 (let ((?x390 (* (- 1) (* d!1 d!1 d!1 x!0 r!2 r!2))))
 (let ((?x1480 (* r!2 r!2)))
 (let ((?x2134 (* 480 ?x1480)))
 (let ((?x730 (* 6 (* d!1 d!1 q!3 r!2 r!2))))
 (let ((?x1215 (* 12 (* d!1 q!3 r!2 r!2))))
 (let ((?x1674 (* (- 6) (* d!1 d!1 x!0 r!2 r!2))))
 (let ((?x610 (* (- 1) (* q!3 q!3 q!3 r!2 r!2))))
 (let ((?x871 (* 2 r!2)))
 (let ((?x503 (* (- 1) x!0)))
 (let ((?x1369 (* (- 2) d!1)))
 (let ((?x699 (+ (- 4) ?x1369 ?x503 q!3 ?x871)))
 (let ((?x1579 (+ 2 d!1)))
 (let ((?x1753 (+ (- 8) q!3)))
 (let ((?x1678 (* 16 (* r!2 r!2 r!2))))
 (let ((?x1560 (* (- 12) (* d!1 x!0 r!2 r!2))))
 (let ((?x1554 (* 24 (* d!1 r!2 r!2 r!2))))
 (let ((?x1836 (+ ?x1554 (* (- 1) (* ?x1753 ?x1753 ?x1579 ?x1579 ?x1579 ?x699 r!2)) ?x1560 ?x1678 (* ?x1753 ?x1753 ?x1753 ?x1579 ?x1579 ?x1579 ?x699 ?x699 ?x699) (* (- 16) (* d!1 d!1 d!1 r!2 r!2)) ?x610 ?x1674 ?x1215 ?x730 (* (- 48) (* d!1 d!1 r!2 r!2)) (* (- 64) (* d!1 r!2 r!2)) ?x2134 ?x390 ?x1557 (* (- 2) (* d!1 d!1 d!1 d!1 r!2 r!2)) ?x393 ?x764 ?x2059 ?x2008 ?x720)))
 (let ((?x1839 (* ?x1836 ?x693)))
 (let (($x448 (= ?x1839 0)))
 (let (($x2054 (not $x448)))
 (let ((?x189 (* (- 16) ?x1758)))
 (let ((?x1293 (* 8 ?x1707)))
 (let ((?x564 (+ ?x503 q!3 ?x871)))
 (let ((?x1705 (* (- 8) (* q!3 q!3 q!3 r!2))))
 (let ((?x1015 (+ ?x1554 (* 6 (* d!1 d!1 x!0 q!3 q!3 r!2)) ?x1560 ?x1678 ?x1705 ?x610 (* (- 12) (* d!1 d!1 q!3 q!3 r!2 r!2)) (* (- 24) (* d!1 q!3 q!3 r!2 r!2)) (* d!1 d!1 d!1 x!0 q!3 q!3 r!2) (* (- 2) (* d!1 d!1 d!1 q!3 q!3 r!2 r!2)) (* (- 6) (* d!1 d!1 q!3 q!3 q!3 r!2)) (* ?x1579 ?x1579 ?x1579 ?x564 ?x564 ?x564 q!3 q!3 q!3) ?x1674 (* (- 1) (* d!1 d!1 d!1 q!3 q!3 q!3 r!2)) (* 12 (* d!1 x!0 q!3 q!3 r!2)) ?x1215 ?x730 ?x390 ?x1557 (* (- 12) (* d!1 q!3 q!3 q!3 r!2)) ?x1293 ?x189 ?x2059 ?x2008 ?x720 (* 8 (* x!0 q!3 q!3 r!2)))))
 (let ((?x615 (* ?x1015 ?x693)))
 (let (($x1719 (= ?x615 0)))
 (let ((?x1513 (* 12 ?x1758)))
 (let ((?x1672 (* (- 40) ?x1707)))
 (let ((?x215 (* (- 1) d!1)))
 (let ((?x1221 (+ (- 2) ?x215 ?x503 q!3 ?x871)))
 (let ((?x1740 (+ (- 4) q!3)))
 (let ((?x1564 (* 48 ?x1480)))
 (let ((?x1761 (+ ?x1554 ?x1560 (* (- 1) (* ?x1740 ?x1740 ?x1579 ?x1579 ?x1579 ?x1221 r!2)) ?x1678 (* (- 8) (* d!1 d!1 d!1 r!2 r!2)) ?x610 ?x1674 ?x1215 ?x730 (* (- 24) (* d!1 d!1 r!2 r!2)) (* (- 32) (* d!1 r!2 r!2)) ?x1564 ?x390 ?x1557 (* ?x1740 ?x1740 ?x1740 ?x1579 ?x1579 ?x1579 ?x1221 ?x1221 ?x1221) (* (- 1) (* d!1 d!1 d!1 d!1 r!2 r!2)) ?x1672 ?x1513 ?x2059 ?x2008 ?x720)))
 (let ((?x565 (* ?x1761 ?x693)))
 (let (($x1376 (= ?x565 0)))
 (let ((?x461 (* (- 12) ?x1758)))
 (let ((?x1695 (* d!1 d!1 d!1 d!1 r!2 r!2)))
 (let ((?x1731 (* (- 48) ?x1480)))
 (let ((?x951 (+ 2 d!1 ?x503 q!3 ?x871)))
 (let ((?x1646 (+ 4 q!3)))
 (let ((?x634 (+ ?x1554 ?x1560 ?x1678 (* 8 (* d!1 d!1 d!1 r!2 r!2)) ?x610 (* ?x1579 ?x1579 ?x1579 ?x1646 ?x1646 ?x1646 ?x951 ?x951 ?x951) ?x1674 (* (- 1) (* ?x1579 ?x1579 ?x1579 ?x1646 ?x1646 ?x951 r!2)) ?x1215 ?x730 (* 24 (* d!1 d!1 r!2 r!2)) (* 32 (* d!1 r!2 r!2)) ?x1731 ?x390 ?x1557 ?x1695 ?x1672 ?x461 ?x2059 ?x2008 ?x720)))
 (let ((?x1886 (* ?x634 ?x693)))
 (let (($x589 (= ?x1886 0)))
 (let (($x763 (not $x589)))
 (let (($x555 (or $x763 (not $x1376) (not $x1719) $x2054)))
 (let (($x479 (and $x378 $x555)))
 (let ((?x2120 (+ ?x391 ?x170 ?x218 ?x202 ?x268 ?x306 (* 4 (* x!0 d!1)) (* (- 2) (* q!3 d!1)) (* (- 4) (* r!2 d!1)) (* q!3 d!1 d!1))))
 (let ((?x364 (* (- 6) (* r!2 r!2 x!0 d!1 d!1))))
 (let ((?x248 (+ 2 q!3 ?x871 ?x503 d!1)))
 (let ((?x1098 (* (- 8) (* r!2 r!2 x!0))))
 (let ((?x2009 (* 12 (* r!2 r!2 r!2 d!1 d!1))))
 (let ((?x439 (* 2 (* r!2 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x1247 (* r!2 r!2 d!1 d!1 d!1 d!1)))
 (let ((?x1575 (* 24 (* r!2 r!2 r!2 d!1))))
 (let ((?x2163 (* 6 (* q!3 r!2 r!2 d!1 d!1))))
 (let ((?x1377 (* q!3 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x980 (* (- 1) (* r!2 r!2 x!0 d!1 d!1 d!1))))
 (let ((?x508 (* (- 12) (* r!2 r!2 x!0 d!1))))
 (let ((?x576 (* 12 (* q!3 r!2 r!2 d!1))))
 (let ((?x1636 (+ (* 24 (* r!2 r!2 d!1 d!1)) (* 32 (* r!2 r!2 d!1)) ?x1731 ?x1672 ?x610 ?x461 ?x576 (* 8 (* r!2 r!2 d!1 d!1 d!1)) (* (- 1) (* ?x1579 ?x1579 ?x1579 ?x1646 ?x1646 ?x248 r!2)) ?x508 ?x980 ?x1377 ?x2163 ?x1678 ?x1575 ?x1247 ?x439 ?x2009 ?x1098 (* ?x1579 ?x1579 ?x1579 ?x1646 ?x1646 ?x1646 ?x248 ?x248 ?x248) ?x364)))
 (let ((?x1734 (+ q!3 ?x871 ?x503)))
 (let ((?x574 (+ ?x1293 (* 8 (* q!3 q!3 r!2 x!0)) ?x610 ?x1705 ?x189 ?x576 ?x508 (* (- 1) (* q!3 q!3 q!3 r!2 d!1 d!1 d!1)) (* (- 12) (* q!3 q!3 q!3 r!2 d!1)) (* (- 6) (* q!3 q!3 q!3 r!2 d!1 d!1)) (* (- 24) (* q!3 q!3 r!2 r!2 d!1)) (* (- 12) (* q!3 q!3 r!2 r!2 d!1 d!1)) (* ?x1579 ?x1579 ?x1579 ?x1734 ?x1734 ?x1734 q!3 q!3 q!3) ?x980 (* q!3 q!3 r!2 x!0 d!1 d!1 d!1) ?x1377 ?x2163 (* 6 (* q!3 q!3 r!2 x!0 d!1 d!1)) (* 12 (* q!3 q!3 r!2 x!0 d!1)) (* (- 2) (* q!3 q!3 r!2 r!2 d!1 d!1 d!1)) ?x1678 ?x1575 ?x439 ?x2009 ?x1098 ?x364)))
 (let ((?x432 (+ (- 2) q!3 ?x871 ?x503 ?x215)))
 (let ((?x1253 (+ (* (- 24) (* r!2 r!2 d!1 d!1)) (* (- 32) (* r!2 r!2 d!1)) ?x1564 (* (- 1) (* ?x1740 ?x1740 ?x1579 ?x1579 ?x1579 ?x432 r!2)) ?x1672 ?x610 ?x1513 (* ?x1740 ?x1740 ?x1740 ?x1579 ?x1579 ?x1579 ?x432 ?x432 ?x432) ?x576 (* (- 8) (* r!2 r!2 d!1 d!1 d!1)) ?x508 ?x980 ?x1377 ?x2163 ?x1678 ?x1575 (* (- 1) ?x1247) ?x439 ?x2009 ?x1098 ?x364)))
 (let ((?x1574 (* (- 1) (* ?x1753 ?x1753 ?x1579 ?x1579 ?x1579 (+ (- 4) q!3 ?x871 ?x503 ?x1369) r!2))))
 (let ((?x1037 (+ (- 4) q!3 ?x871 ?x503 ?x1369)))
 (let ((?x441 (+ (* (- 48) (* r!2 r!2 d!1 d!1)) (* (- 64) (* r!2 r!2 d!1)) (* ?x1753 ?x1753 ?x1753 ?x1579 ?x1579 ?x1579 ?x1037 ?x1037 ?x1037) ?x2134 ?x393 ?x610 ?x764 ?x1574 ?x576 (* (- 16) (* r!2 r!2 d!1 d!1 d!1)) ?x508 ?x980 ?x1377 ?x2163 ?x1678 ?x1575 (* (- 2) ?x1247) ?x439 ?x2009 ?x1098 ?x364)))
 (let (($x1770 (or (not (= (* ?x441 ?x2120) 0)) (not (= (* ?x1253 ?x2120) 0)) (not (= (* ?x574 ?x2120) 0)) (not (= (* ?x1636 ?x2120) 0)))))
 (let (($x1772 (and (= ?x2120 0) $x1770)))
 (let (($x552 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2091 (* q d d)))
 (let ((?x2060 (* r d)))
 (let ((?x2061 (* (- 4) ?x2060)))
 (let ((?x2064 (* (- 2) (* q d))))
 (let ((?x1087 (* 4 (* x d))))
 (let ((?x305 (* r00 d00)))
 (let ((?x306 (* 4 ?x305)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x199 (* 8 r)))
 (let ((?x259 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x2064 ?x2061 ?x2091)))
 (let ((?x2162 (* r r x d d)))
 (let ((?x613 (* (- 6) ?x2162)))
 (let ((?x167 (* (- 1) x)))
 (let ((?x135 (* 2 r)))
 (let ((?x976 (+ 2 q ?x135 ?x167 d)))
 (let ((?x2165 (+ 4 q)))
 (let ((?x2167 (+ 2 d)))
 (let ((?x2159 (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x976 ?x976 ?x976)))
 (let ((?x2148 (* (- 8) (* r r x))))
 (let ((?x2124 (* r r r d d)))
 (let ((?x1040 (* 12 ?x2124)))
 (let ((?x2123 (* 2 (* r r r d d d))))
 (let ((?x2121 (* r r d d d d)))
 (let ((?x2117 (* r r r d)))
 (let ((?x542 (* 24 ?x2117)))
 (let ((?x2113 (* 16 (* r r r))))
 (let ((?x1074 (* 6 (* q r r d d))))
 (let ((?x1901 (* q r r d d d)))
 (let ((?x1773 (* (- 1) (* r r x d d d))))
 (let ((?x1370 (* r r x d)))
 (let ((?x478 (* (- 12) ?x1370)))
 (let ((?x875 (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x976 r))))
 (let ((?x1054 (* r r d d d)))
 (let ((?x217 (* 8 ?x1054)))
 (let ((?x1050 (* q r r d)))
 (let ((?x363 (* 12 ?x1050)))
 (let ((?x766 (* q q r r)))
 (let ((?x1430 (* (- 12) ?x766)))
 (let ((?x694 (* q q q r r)))
 (let ((?x2171 (* (- 1) ?x694)))
 (let ((?x513 (* q r r)))
 (let ((?x532 (* (- 40) ?x513)))
 (let ((?x383 (* r r)))
 (let ((?x931 (* (- 48) ?x383)))
 (let ((?x2035 (+ (* 24 (* r r d d)) (* 32 (* r r d)) ?x931 ?x532 ?x2171 ?x1430 ?x363 ?x217 ?x875 ?x478 ?x1773 ?x1901 ?x1074 ?x2113 ?x542 ?x2121 ?x2123 ?x1040 ?x2148 ?x2159 ?x613)))
 (let ((?x942 (* (- 2) (* q q r r d d d))))
 (let ((?x1053 (* 12 (* q q r x d))))
 (let ((?x1042 (* 6 (* q q r x d d))))
 (let ((?x1801 (* q q r x d d d)))
 (let ((?x1584 (+ q ?x135 ?x167)))
 (let ((?x1568 (* ?x2167 ?x2167 ?x2167 ?x1584 ?x1584 ?x1584 q q q)))
 (let ((?x1546 (* q q r r d d)))
 (let ((?x933 (* (- 12) ?x1546)))
 (let ((?x1541 (* q q r r d)))
 (let ((?x997 (* (- 24) ?x1541)))
 (let ((?x1539 (* q q q r d d)))
 (let ((?x559 (* (- 6) ?x1539)))
 (let ((?x1534 (* q q q r d)))
 (let ((?x934 (* (- 12) ?x1534)))
 (let ((?x620 (* (- 1) (* q q q r d d d))))
 (let ((?x1601 (* (- 16) ?x766)))
 (let ((?x703 (* q q q r)))
 (let ((?x1413 (* (- 8) ?x703)))
 (let ((?x627 (* q q r x)))
 (let ((?x1549 (* 8 ?x627)))
 (let ((?x1415 (* 8 ?x513)))
 (let ((?x1738 (+ ?x1415 ?x1549 ?x2171 ?x1413 ?x1601 ?x363 ?x478 ?x620 ?x934 ?x559 ?x997 ?x933 ?x1568 ?x1773 ?x1801 ?x1901 ?x1074 ?x1042 ?x1053 ?x942 ?x2113 ?x542 ?x2123 ?x1040 ?x2148 ?x613)))
 (let ((?x1820 (* (- 1) ?x2121)))
 (let ((?x1805 (* (- 1) d)))
 (let ((?x1105 (+ (- 2) q ?x135 ?x167 ?x1805)))
 (let ((?x1804 (+ (- 4) q)))
 (let ((?x1010 (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1105 ?x1105 ?x1105)))
 (let ((?x1827 (* 12 ?x766)))
 (let ((?x1510 (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1105 r))))
 (let ((?x1826 (* 48 ?x383)))
 (let ((?x704 (+ (* (- 24) (* r r d d)) (* (- 32) (* r r d)) ?x1826 ?x1510 ?x532 ?x2171 ?x1827 ?x1010 ?x363 (* (- 8) ?x1054) ?x478 ?x1773 ?x1901 ?x1074 ?x2113 ?x542 ?x1820 ?x2123 ?x1040 ?x2148 ?x613)))
 (let ((?x1920 (* (- 2) ?x2121)))
 (let ((?x1919 (* (- 2) d)))
 (let ((?x549 (+ (- 4) q ?x135 ?x167 ?x1919)))
 (let ((?x1921 (+ (- 8) q)))
 (let ((?x1033 (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x549 r))))
 (let ((?x1910 (* 24 ?x766)))
 (let ((?x1907 (* (- 184) ?x513)))
 (let ((?x1911 (* 480 ?x383)))
 (let ((?x353 (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x549 ?x549 ?x549)))
 (let ((?x1655 (+ (* (- 48) (* r r d d)) (* (- 64) (* r r d)) ?x353 ?x1911 ?x1907 ?x2171 ?x1910 ?x1033 ?x363 (* (- 16) ?x1054) ?x478 ?x1773 ?x1901 ?x1074 ?x2113 ?x542 ?x1920 ?x2123 ?x1040 ?x2148 ?x613)))
 (let (($x2004 (or (not (= (* ?x1655 ?x259) 0)) (not (= (* ?x704 ?x259) 0)) (not (= (* ?x1738 ?x259) 0)) (not (= (* ?x2035 ?x259) 0)))))
 (let (($x1611 (= ?x259 0)))
 (and $x1611 $x2004))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1235 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2091 (* q d d)))
 (let ((?x2060 (* r d)))
 (let ((?x2061 (* (- 4) ?x2060)))
 (let ((?x2064 (* (- 2) (* q d))))
 (let ((?x1593 (* 8 d)))
 (let ((?x1087 (* 4 (* x d))))
 (let ((?x305 (* r00 d00)))
 (let ((?x306 (* 4 ?x305)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x199 (* 8 r)))
 (let ((?x1479 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x1593 ?x2064 (* (- 4) (* d 2)) ?x2061 ?x2091)))
 (let ((?x2162 (* r r x d d)))
 (let ((?x741 (* (- 4) ?x2162)))
 (let ((?x2148 (* (- 8) (* r r x))))
 (let ((?x2124 (* r r r d d)))
 (let ((?x2125 (* 8 ?x2124)))
 (let ((?x2123 (* 2 (* r r r d d d))))
 (let ((?x2121 (* r r d d d d)))
 (let ((?x1820 (* (- 1) ?x2121)))
 (let ((?x2117 (* r r r d)))
 (let ((?x2115 (* 16 ?x2117)))
 (let ((?x2113 (* 16 (* r r r))))
 (let ((?x1074 (* 6 (* q r r d d))))
 (let ((?x1901 (* q r r d d d)))
 (let ((?x1869 (* 2 (* d 2 (- 2) r r))))
 (let ((?x1866 (* 2 (* d d (- 2) r r))))
 (let ((?x1864 (* 2 (* d 2 (* (- 1) d) r r))))
 (let ((?x1862 (* 2 (* d d (* (- 1) d) r r))))
 (let ((?x1773 (* (- 1) (* r r x d d d))))
 (let ((?x1370 (* r r x d)))
 (let ((?x412 (* (- 8) ?x1370)))
 (let ((?x1054 (* r r d d d)))
 (let ((?x1821 (* (- 6) ?x1054)))
 (let ((?x1050 (* q r r d)))
 (let ((?x1051 (* 8 ?x1050)))
 (let ((?x1805 (* (- 1) d)))
 (let ((?x167 (* (- 1) x)))
 (let ((?x135 (* 2 r)))
 (let ((?x1105 (+ (- 2) q ?x135 ?x167 ?x1805)))
 (let ((?x2167 (+ 2 d)))
 (let ((?x1804 (+ (- 4) q)))
 (let ((?x1010 (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1105 ?x1105 ?x1105)))
 (let ((?x766 (* q q r r)))
 (let ((?x1827 (* 12 ?x766)))
 (let ((?x694 (* q q q r r)))
 (let ((?x2171 (* (- 1) ?x694)))
 (let ((?x513 (* q r r)))
 (let ((?x532 (* (- 40) ?x513)))
 (let ((?x1510 (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1105 r))))
 (let ((?x489 (* 2 (* d 2 q r r))))
 (let ((?x484 (* 2 (* d 2 ?x135 r r))))
 (let ((?x383 (* r r)))
 (let ((?x1826 (* 48 ?x383)))
 (let ((?x447 (* 2 (* d d ?x135 r r))))
 (let ((?x351 (* 2 (* d 2 ?x167 r r))))
 (let ((?x333 (* r r d)))
 (let ((?x1823 (* (- 24) ?x333)))
 (let ((?x238 (* 2 (* d d ?x167 r r))))
 (let ((?x227 (* r r d d)))
 (let ((?x1822 (* (- 16) ?x227)))
 (let ((?x1160 (+ ?x1822 ?x238 ?x1823 ?x351 ?x447 ?x1826 ?x484 ?x489 ?x1510 ?x532 ?x2171 ?x1827 ?x1010 ?x1051 ?x1821 ?x412 ?x1773 ?x1862 ?x1864 ?x1866 ?x1869 ?x1901 ?x1074 ?x2113 ?x2115 ?x1820 ?x2123 ?x2125 ?x2148 ?x741)))
 (let ((?x2169 (* 2 (* d 4))))
 (let ((?x1982 (* (- 8) d)))
 (let ((?x976 (+ 2 q ?x135 ?x167 d)))
 (let ((?x2165 (+ 4 q)))
 (let ((?x2159 (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x976 ?x976 ?x976)))
 (let ((?x875 (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x976 r))))
 (let ((?x217 (* 8 ?x1054)))
 (let ((?x987 (* 2 (* d d 2 r r))))
 (let ((?x953 (* 2 (* d 2 2 r r))))
 (let ((?x1430 (* (- 12) ?x766)))
 (let ((?x931 (* (- 48) ?x383)))
 (let ((?x362 (* 2 (* d 2 d r r))))
 (let ((?x342 (* 24 ?x333)))
 (let ((?x221 (* 16 ?x227)))
 (let ((?x668 (+ ?x221 ?x238 ?x342 ?x351 ?x362 ?x447 ?x931 ?x484 ?x489 ?x532 ?x2171 ?x1430 ?x953 ?x987 ?x1051 ?x217 ?x875 ?x412 ?x1773 ?x1901 ?x1074 ?x2113 ?x2115 ?x2121 ?x2123 ?x2125 ?x2148 ?x2159 ?x741)))
 (let ((?x1192 (* ?x668 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x1982 ?x2064 ?x2061 ?x2091 ?x2169))))
 (let ((?x1930 (* 16 d)))
 (let ((?x2101 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x1930 ?x2064 (* (- 8) (* d 2)) ?x2061 ?x2091)))
 (let ((?x1920 (* (- 2) ?x2121)))
 (let ((?x1931 (* 2 (* d 2 (- 4) r r))))
 (let ((?x1932 (* 2 (* d d (- 4) r r))))
 (let ((?x1913 (* 2 (* d d (* (- 2) d) r r))))
 (let ((?x1925 (* 2 (* d 2 (* (- 2) d) r r))))
 (let ((?x1917 (* (- 12) ?x1054)))
 (let ((?x1919 (* (- 2) d)))
 (let ((?x549 (+ (- 4) q ?x135 ?x167 ?x1919)))
 (let ((?x1921 (+ (- 8) q)))
 (let ((?x1033 (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x549 r))))
 (let ((?x1910 (* 24 ?x766)))
 (let ((?x1907 (* (- 184) ?x513)))
 (let ((?x1911 (* 480 ?x383)))
 (let ((?x353 (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x549 ?x549 ?x549)))
 (let ((?x1912 (* (- 48) ?x333)))
 (let ((?x1916 (* (- 32) ?x227)))
 (let ((?x1471 (+ ?x1916 ?x238 ?x1912 ?x351 ?x353 ?x447 ?x1911 ?x484 ?x489 ?x1907 ?x2171 ?x1910 ?x1033 ?x1051 ?x1917 ?x412 ?x1773 ?x1901 ?x1074 ?x1925 ?x1913 ?x1932 ?x1931 ?x2113 ?x2115 ?x1920 ?x2123 ?x2125 ?x2148 ?x741)))
 (let ((?x259 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x2064 ?x2061 ?x2091)))
 (let ((?x942 (* (- 2) (* q q r r d d d))))
 (let ((?x1053 (* 12 (* q q r x d))))
 (let ((?x1042 (* 6 (* q q r x d d))))
 (let ((?x1801 (* q q r x d d d)))
 (let ((?x1584 (+ q ?x135 ?x167)))
 (let ((?x1568 (* ?x2167 ?x2167 ?x2167 ?x1584 ?x1584 ?x1584 q q q)))
 (let ((?x1546 (* q q r r d d)))
 (let ((?x933 (* (- 12) ?x1546)))
 (let ((?x1541 (* q q r r d)))
 (let ((?x997 (* (- 24) ?x1541)))
 (let ((?x1539 (* q q q r d d)))
 (let ((?x559 (* (- 6) ?x1539)))
 (let ((?x1534 (* q q q r d)))
 (let ((?x934 (* (- 12) ?x1534)))
 (let ((?x620 (* (- 1) (* q q q r d d d))))
 (let ((?x1601 (* (- 16) ?x766)))
 (let ((?x703 (* q q q r)))
 (let ((?x1413 (* (- 8) ?x703)))
 (let ((?x627 (* q q r x)))
 (let ((?x1549 (* 8 ?x627)))
 (let ((?x1415 (* 8 ?x513)))
 (let ((?x598 (+ ?x238 ?x351 ?x447 ?x484 ?x489 ?x1415 ?x1549 ?x2171 ?x1413 ?x1601 ?x1051 ?x412 ?x620 ?x934 ?x559 ?x997 ?x933 ?x1568 ?x1773 ?x1801 ?x1901 ?x1074 ?x1042 ?x1053 ?x942 ?x2113 ?x2115 ?x2123 ?x2125 ?x2148 ?x741)))
 (let (($x1218 (or (not (= (* ?x598 ?x259) 0)) (not (= (* ?x1471 ?x2101) 0)) (not (= ?x1192 0)) (not (= (* ?x1160 ?x1479) 0)))))
 (let (($x1611 (= ?x259 0)))
 (and $x1611 $x1218)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x480 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2091 (* q d d)))
 (let ((?x2060 (* r d)))
 (let ((?x2061 (* (- 4) ?x2060)))
 (let ((?x2064 (* (- 2) (* q d))))
 (let ((?x1087 (* 4 (* x d))))
 (let ((?x305 (* r00 d00)))
 (let ((?x306 (* 4 ?x305)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x199 (* 8 r)))
 (let ((?x259 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x2064 ?x2061 ?x2091)))
 (let ((?x2162 (* r r x d d)))
 (let ((?x613 (* (- 6) ?x2162)))
 (let ((?x167 (* (- 1) x)))
 (let ((?x135 (* 2 r)))
 (let ((?x976 (+ 2 q ?x135 ?x167 d)))
 (let ((?x2165 (+ 4 q)))
 (let ((?x2167 (+ 2 d)))
 (let ((?x2159 (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x976 ?x976 ?x976)))
 (let ((?x2148 (* (- 8) (* r r x))))
 (let ((?x2124 (* r r r d d)))
 (let ((?x1040 (* 12 ?x2124)))
 (let ((?x2123 (* 2 (* r r r d d d))))
 (let ((?x2121 (* r r d d d d)))
 (let ((?x2117 (* r r r d)))
 (let ((?x542 (* 24 ?x2117)))
 (let ((?x2113 (* 16 (* r r r))))
 (let ((?x1074 (* 6 (* q r r d d))))
 (let ((?x1901 (* q r r d d d)))
 (let ((?x1773 (* (- 1) (* r r x d d d))))
 (let ((?x1370 (* r r x d)))
 (let ((?x478 (* (- 12) ?x1370)))
 (let ((?x875 (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x976 r))))
 (let ((?x1054 (* r r d d d)))
 (let ((?x217 (* 8 ?x1054)))
 (let ((?x1050 (* q r r d)))
 (let ((?x363 (* 12 ?x1050)))
 (let ((?x766 (* q q r r)))
 (let ((?x1430 (* (- 12) ?x766)))
 (let ((?x694 (* q q q r r)))
 (let ((?x2171 (* (- 1) ?x694)))
 (let ((?x513 (* q r r)))
 (let ((?x532 (* (- 40) ?x513)))
 (let ((?x383 (* r r)))
 (let ((?x931 (* (- 48) ?x383)))
 (let ((?x2035 (+ (* 24 (* r r d d)) (* 32 (* r r d)) ?x931 ?x532 ?x2171 ?x1430 ?x363 ?x217 ?x875 ?x478 ?x1773 ?x1901 ?x1074 ?x2113 ?x542 ?x2121 ?x2123 ?x1040 ?x2148 ?x2159 ?x613)))
 (let ((?x942 (* (- 2) (* q q r r d d d))))
 (let ((?x1053 (* 12 (* q q r x d))))
 (let ((?x1042 (* 6 (* q q r x d d))))
 (let ((?x1801 (* q q r x d d d)))
 (let ((?x1584 (+ q ?x135 ?x167)))
 (let ((?x1568 (* ?x2167 ?x2167 ?x2167 ?x1584 ?x1584 ?x1584 q q q)))
 (let ((?x1546 (* q q r r d d)))
 (let ((?x933 (* (- 12) ?x1546)))
 (let ((?x1541 (* q q r r d)))
 (let ((?x997 (* (- 24) ?x1541)))
 (let ((?x1539 (* q q q r d d)))
 (let ((?x559 (* (- 6) ?x1539)))
 (let ((?x1534 (* q q q r d)))
 (let ((?x934 (* (- 12) ?x1534)))
 (let ((?x620 (* (- 1) (* q q q r d d d))))
 (let ((?x1601 (* (- 16) ?x766)))
 (let ((?x703 (* q q q r)))
 (let ((?x1413 (* (- 8) ?x703)))
 (let ((?x627 (* q q r x)))
 (let ((?x1549 (* 8 ?x627)))
 (let ((?x1415 (* 8 ?x513)))
 (let ((?x1738 (+ ?x1415 ?x1549 ?x2171 ?x1413 ?x1601 ?x363 ?x478 ?x620 ?x934 ?x559 ?x997 ?x933 ?x1568 ?x1773 ?x1801 ?x1901 ?x1074 ?x1042 ?x1053 ?x942 ?x2113 ?x542 ?x2123 ?x1040 ?x2148 ?x613)))
 (let ((?x1820 (* (- 1) ?x2121)))
 (let ((?x1805 (* (- 1) d)))
 (let ((?x1105 (+ (- 2) q ?x135 ?x167 ?x1805)))
 (let ((?x1804 (+ (- 4) q)))
 (let ((?x1010 (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1105 ?x1105 ?x1105)))
 (let ((?x1827 (* 12 ?x766)))
 (let ((?x1510 (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1105 r))))
 (let ((?x1826 (* 48 ?x383)))
 (let ((?x704 (+ (* (- 24) (* r r d d)) (* (- 32) (* r r d)) ?x1826 ?x1510 ?x532 ?x2171 ?x1827 ?x1010 ?x363 (* (- 8) ?x1054) ?x478 ?x1773 ?x1901 ?x1074 ?x2113 ?x542 ?x1820 ?x2123 ?x1040 ?x2148 ?x613)))
 (let ((?x1920 (* (- 2) ?x2121)))
 (let ((?x1919 (* (- 2) d)))
 (let ((?x549 (+ (- 4) q ?x135 ?x167 ?x1919)))
 (let ((?x1921 (+ (- 8) q)))
 (let ((?x1033 (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x549 r))))
 (let ((?x1910 (* 24 ?x766)))
 (let ((?x1907 (* (- 184) ?x513)))
 (let ((?x1911 (* 480 ?x383)))
 (let ((?x353 (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x549 ?x549 ?x549)))
 (let ((?x1655 (+ (* (- 48) (* r r d d)) (* (- 64) (* r r d)) ?x353 ?x1911 ?x1907 ?x2171 ?x1910 ?x1033 ?x363 (* (- 16) ?x1054) ?x478 ?x1773 ?x1901 ?x1074 ?x2113 ?x542 ?x1920 ?x2123 ?x1040 ?x2148 ?x613)))
 (let (($x2004 (or (not (= (* ?x1655 ?x259) 0)) (not (= (* ?x704 ?x259) 0)) (not (= (* ?x1738 ?x259) 0)) (not (= (* ?x2035 ?x259) 0)))))
 (let (($x1611 (= ?x259 0)))
 (let (($x791 (and $x1611 $x2004)))
 (let ((?x1593 (* 8 d)))
 (let ((?x1479 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x1593 ?x2064 (* (- 4) (* d 2)) ?x2061 ?x2091)))
 (let ((?x741 (* (- 4) ?x2162)))
 (let ((?x2125 (* 8 ?x2124)))
 (let ((?x2115 (* 16 ?x2117)))
 (let ((?x1869 (* 2 (* d 2 (- 2) r r))))
 (let ((?x1866 (* 2 (* d d (- 2) r r))))
 (let ((?x1864 (* 2 (* d 2 ?x1805 r r))))
 (let ((?x1862 (* 2 (* d d ?x1805 r r))))
 (let ((?x412 (* (- 8) ?x1370)))
 (let ((?x1821 (* (- 6) ?x1054)))
 (let ((?x1051 (* 8 ?x1050)))
 (let ((?x489 (* 2 (* d 2 q r r))))
 (let ((?x484 (* 2 (* d 2 ?x135 r r))))
 (let ((?x447 (* 2 (* d d ?x135 r r))))
 (let ((?x351 (* 2 (* d 2 ?x167 r r))))
 (let ((?x333 (* r r d)))
 (let ((?x1823 (* (- 24) ?x333)))
 (let ((?x238 (* 2 (* d d ?x167 r r))))
 (let ((?x227 (* r r d d)))
 (let ((?x1822 (* (- 16) ?x227)))
 (let ((?x1160 (+ ?x1822 ?x238 ?x1823 ?x351 ?x447 ?x1826 ?x484 ?x489 ?x1510 ?x532 ?x2171 ?x1827 ?x1010 ?x1051 ?x1821 ?x412 ?x1773 ?x1862 ?x1864 ?x1866 ?x1869 ?x1901 ?x1074 ?x2113 ?x2115 ?x1820 ?x2123 ?x2125 ?x2148 ?x741)))
 (let ((?x2169 (* 2 (* d 4))))
 (let ((?x1982 (* (- 8) d)))
 (let ((?x987 (* 2 (* d d 2 r r))))
 (let ((?x953 (* 2 (* d 2 2 r r))))
 (let ((?x362 (* 2 (* d 2 d r r))))
 (let ((?x342 (* 24 ?x333)))
 (let ((?x221 (* 16 ?x227)))
 (let ((?x668 (+ ?x221 ?x238 ?x342 ?x351 ?x362 ?x447 ?x931 ?x484 ?x489 ?x532 ?x2171 ?x1430 ?x953 ?x987 ?x1051 ?x217 ?x875 ?x412 ?x1773 ?x1901 ?x1074 ?x2113 ?x2115 ?x2121 ?x2123 ?x2125 ?x2148 ?x2159 ?x741)))
 (let ((?x1192 (* ?x668 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x1982 ?x2064 ?x2061 ?x2091 ?x2169))))
 (let ((?x1930 (* 16 d)))
 (let ((?x2101 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x1930 ?x2064 (* (- 8) (* d 2)) ?x2061 ?x2091)))
 (let ((?x1931 (* 2 (* d 2 (- 4) r r))))
 (let ((?x1932 (* 2 (* d d (- 4) r r))))
 (let ((?x1913 (* 2 (* d d ?x1919 r r))))
 (let ((?x1925 (* 2 (* d 2 ?x1919 r r))))
 (let ((?x1917 (* (- 12) ?x1054)))
 (let ((?x1912 (* (- 48) ?x333)))
 (let ((?x1916 (* (- 32) ?x227)))
 (let ((?x1471 (+ ?x1916 ?x238 ?x1912 ?x351 ?x353 ?x447 ?x1911 ?x484 ?x489 ?x1907 ?x2171 ?x1910 ?x1033 ?x1051 ?x1917 ?x412 ?x1773 ?x1901 ?x1074 ?x1925 ?x1913 ?x1932 ?x1931 ?x2113 ?x2115 ?x1920 ?x2123 ?x2125 ?x2148 ?x741)))
 (let ((?x598 (+ ?x238 ?x351 ?x447 ?x484 ?x489 ?x1415 ?x1549 ?x2171 ?x1413 ?x1601 ?x1051 ?x412 ?x620 ?x934 ?x559 ?x997 ?x933 ?x1568 ?x1773 ?x1801 ?x1901 ?x1074 ?x1042 ?x1053 ?x942 ?x2113 ?x2115 ?x2123 ?x2125 ?x2148 ?x741)))
 (let (($x1218 (or (not (= (* ?x598 ?x259) 0)) (not (= (* ?x1471 ?x2101) 0)) (not (= ?x1192 0)) (not (= (* ?x1160 ?x1479) 0)))))
 (let (($x1137 (and $x1611 $x1218)))
 (rewrite (= $x1137 $x791))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x671 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x630 (* 4 (* d00 r00))))
 (let ((?x1805 (* (- 1) d)))
 (let ((?x167 (* (- 1) x)))
 (let ((?x135 (* 2 r)))
 (let ((?x1701 (+ (- 2) ?x135 ?x167 q ?x1805)))
 (let ((?x2167 (+ 2 d)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x1628 (* 4 (* ?x2167 r))))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x1982 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x726 (* (- 8) x)))
 (let ((?x415 (* 16 r)))
 (let ((?x1627 (+ (- 16) ?x415 ?x726 ?x30 ?x1982 ?x170 ?x1628 ?x202 ?x218 (* (+ (- 4) q) ?x2167 ?x2167) (* (- 2) (* (+ (- 4) q) ?x2167)) ?x268 (* (- 4) (* ?x2167 ?x1701)) ?x630)))
 (let ((?x1694 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) r r))))
 (let ((?x1804 (+ (- 4) q)))
 (let ((?x804 (+ (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1701 r)) (* ?x2167 ?x2167 ?x2167 ?x1701 r r) (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1701 ?x1701 ?x1701) ?x1694)))
 (let (($x1620 (not (= (* ?x804 ?x1627) 0))))
 (let ((?x222 (+ (- 32) ?x415 ?x726 ?x30 (* (- 16) d) ?x170 ?x1628 ?x202 ?x218 (* (+ (- 8) q) ?x2167 ?x2167) (* (- 2) (* (+ (- 8) q) ?x2167)) ?x268 (* (- 4) (* ?x2167 (+ (- 4) ?x135 ?x167 q (* (- 2) d)))) ?x630)))
 (let ((?x444 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) r r))))
 (let ((?x1919 (* (- 2) d)))
 (let ((?x1621 (+ (- 4) ?x135 ?x167 q ?x1919)))
 (let ((?x1921 (+ (- 8) q)))
 (let ((?x445 (+ (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x1621 r)) (* ?x2167 ?x2167 ?x2167 ?x1621 r r) (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x1621 ?x1621 ?x1621) ?x444)))
 (let (($x1402 (not (= (* ?x445 ?x222) 0))))
 (let ((?x1388 (+ ?x415 ?x726 ?x30 ?x170 ?x1628 ?x202 ?x218 (* ?x2167 ?x2167 q) (* (- 2) (* ?x2167 q)) ?x268 (* (- 4) (* ?x2167 (+ ?x135 ?x167 q))) ?x630)))
 (let ((?x1403 (+ ?x135 ?x167 q)))
 (let ((?x1396 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x1403 r q q)) (* ?x2167 ?x2167 ?x2167 ?x1403 r r) (* ?x2167 ?x2167 ?x2167 ?x1403 ?x1403 ?x1403 q q q) (* (- 1) (* r r q q q)))))
 (let (($x1389 (not (= (* ?x1396 ?x1388) 0))))
 (let ((?x1593 (* 8 d)))
 (let ((?x770 (+ 16 ?x415 ?x726 ?x30 ?x1593 ?x170 ?x1628 ?x202 ?x218 (* ?x2167 ?x2167 (+ 4 q)) (* (- 2) (* ?x2167 (+ 4 q))) ?x268 (* (- 4) (* ?x2167 (+ 2 ?x135 ?x167 q d))) ?x630)))
 (let ((?x1093 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) r r))))
 (let ((?x1386 (+ 2 ?x135 ?x167 q d)))
 (let ((?x2165 (+ 4 q)))
 (let ((?x1078 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x1386 r)) (* ?x2167 ?x2167 ?x2167 ?x1386 r r) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x1386 ?x1386 ?x1386) ?x1093)))
 (let (($x761 (not (= (* ?x1078 ?x770) 0))))
 (let ((?x1087 (* 4 (* x d))))
 (let ((?x199 (* 8 r)))
 (let ((?x1664 (+ ?x199 ?x170 ?x1087 ?x202 ?x218 (* d d q) (* (- 2) (* d q)) ?x268 (* (- 4) (* d r)) ?x630)))
 (let (($x1665 (= ?x1664 0)))
 (and $x1665 (or $x761 $x1389 $x1402 $x1620))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1223 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2091 (* q d d)))
 (let ((?x2060 (* r d)))
 (let ((?x2061 (* (- 4) ?x2060)))
 (let ((?x2064 (* (- 2) (* q d))))
 (let ((?x1593 (* 8 d)))
 (let ((?x1087 (* 4 (* x d))))
 (let ((?x305 (* r00 d00)))
 (let ((?x306 (* 4 ?x305)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x199 (* 8 r)))
 (let ((?x1479 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x1593 ?x2064 (* (- 4) (* d 2)) ?x2061 ?x2091)))
 (let ((?x2162 (* r r x d d)))
 (let ((?x741 (* (- 4) ?x2162)))
 (let ((?x2148 (* (- 8) (* r r x))))
 (let ((?x2124 (* r r r d d)))
 (let ((?x2125 (* 8 ?x2124)))
 (let ((?x2123 (* 2 (* r r r d d d))))
 (let ((?x2121 (* r r d d d d)))
 (let ((?x1820 (* (- 1) ?x2121)))
 (let ((?x2117 (* r r r d)))
 (let ((?x2115 (* 16 ?x2117)))
 (let ((?x2113 (* 16 (* r r r))))
 (let ((?x1074 (* 6 (* q r r d d))))
 (let ((?x1901 (* q r r d d d)))
 (let ((?x1869 (* 2 (* d 2 (- 2) r r))))
 (let ((?x1866 (* 2 (* d d (- 2) r r))))
 (let ((?x1864 (* 2 (* d 2 (* (- 1) d) r r))))
 (let ((?x1862 (* 2 (* d d (* (- 1) d) r r))))
 (let ((?x1773 (* (- 1) (* r r x d d d))))
 (let ((?x1370 (* r r x d)))
 (let ((?x412 (* (- 8) ?x1370)))
 (let ((?x1054 (* r r d d d)))
 (let ((?x1821 (* (- 6) ?x1054)))
 (let ((?x1050 (* q r r d)))
 (let ((?x1051 (* 8 ?x1050)))
 (let ((?x1805 (* (- 1) d)))
 (let ((?x167 (* (- 1) x)))
 (let ((?x135 (* 2 r)))
 (let ((?x1105 (+ (- 2) q ?x135 ?x167 ?x1805)))
 (let ((?x2167 (+ 2 d)))
 (let ((?x1804 (+ (- 4) q)))
 (let ((?x1010 (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1105 ?x1105 ?x1105)))
 (let ((?x766 (* q q r r)))
 (let ((?x1827 (* 12 ?x766)))
 (let ((?x694 (* q q q r r)))
 (let ((?x2171 (* (- 1) ?x694)))
 (let ((?x513 (* q r r)))
 (let ((?x532 (* (- 40) ?x513)))
 (let ((?x1510 (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1105 r))))
 (let ((?x489 (* 2 (* d 2 q r r))))
 (let ((?x484 (* 2 (* d 2 ?x135 r r))))
 (let ((?x383 (* r r)))
 (let ((?x1826 (* 48 ?x383)))
 (let ((?x447 (* 2 (* d d ?x135 r r))))
 (let ((?x351 (* 2 (* d 2 ?x167 r r))))
 (let ((?x333 (* r r d)))
 (let ((?x1823 (* (- 24) ?x333)))
 (let ((?x238 (* 2 (* d d ?x167 r r))))
 (let ((?x227 (* r r d d)))
 (let ((?x1822 (* (- 16) ?x227)))
 (let ((?x1160 (+ ?x1822 ?x238 ?x1823 ?x351 ?x447 ?x1826 ?x484 ?x489 ?x1510 ?x532 ?x2171 ?x1827 ?x1010 ?x1051 ?x1821 ?x412 ?x1773 ?x1862 ?x1864 ?x1866 ?x1869 ?x1901 ?x1074 ?x2113 ?x2115 ?x1820 ?x2123 ?x2125 ?x2148 ?x741)))
 (let ((?x2169 (* 2 (* d 4))))
 (let ((?x1982 (* (- 8) d)))
 (let ((?x976 (+ 2 q ?x135 ?x167 d)))
 (let ((?x2165 (+ 4 q)))
 (let ((?x2159 (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x976 ?x976 ?x976)))
 (let ((?x875 (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x976 r))))
 (let ((?x217 (* 8 ?x1054)))
 (let ((?x987 (* 2 (* d d 2 r r))))
 (let ((?x953 (* 2 (* d 2 2 r r))))
 (let ((?x1430 (* (- 12) ?x766)))
 (let ((?x931 (* (- 48) ?x383)))
 (let ((?x362 (* 2 (* d 2 d r r))))
 (let ((?x342 (* 24 ?x333)))
 (let ((?x221 (* 16 ?x227)))
 (let ((?x668 (+ ?x221 ?x238 ?x342 ?x351 ?x362 ?x447 ?x931 ?x484 ?x489 ?x532 ?x2171 ?x1430 ?x953 ?x987 ?x1051 ?x217 ?x875 ?x412 ?x1773 ?x1901 ?x1074 ?x2113 ?x2115 ?x2121 ?x2123 ?x2125 ?x2148 ?x2159 ?x741)))
 (let ((?x1192 (* ?x668 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x1982 ?x2064 ?x2061 ?x2091 ?x2169))))
 (let ((?x1930 (* 16 d)))
 (let ((?x2101 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x1930 ?x2064 (* (- 8) (* d 2)) ?x2061 ?x2091)))
 (let ((?x1920 (* (- 2) ?x2121)))
 (let ((?x1931 (* 2 (* d 2 (- 4) r r))))
 (let ((?x1932 (* 2 (* d d (- 4) r r))))
 (let ((?x1913 (* 2 (* d d (* (- 2) d) r r))))
 (let ((?x1925 (* 2 (* d 2 (* (- 2) d) r r))))
 (let ((?x1917 (* (- 12) ?x1054)))
 (let ((?x1919 (* (- 2) d)))
 (let ((?x549 (+ (- 4) q ?x135 ?x167 ?x1919)))
 (let ((?x1921 (+ (- 8) q)))
 (let ((?x1033 (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x549 r))))
 (let ((?x1910 (* 24 ?x766)))
 (let ((?x1907 (* (- 184) ?x513)))
 (let ((?x1911 (* 480 ?x383)))
 (let ((?x353 (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x549 ?x549 ?x549)))
 (let ((?x1912 (* (- 48) ?x333)))
 (let ((?x1916 (* (- 32) ?x227)))
 (let ((?x1471 (+ ?x1916 ?x238 ?x1912 ?x351 ?x353 ?x447 ?x1911 ?x484 ?x489 ?x1907 ?x2171 ?x1910 ?x1033 ?x1051 ?x1917 ?x412 ?x1773 ?x1901 ?x1074 ?x1925 ?x1913 ?x1932 ?x1931 ?x2113 ?x2115 ?x1920 ?x2123 ?x2125 ?x2148 ?x741)))
 (let ((?x259 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x1087 ?x2064 ?x2061 ?x2091)))
 (let ((?x942 (* (- 2) (* q q r r d d d))))
 (let ((?x1053 (* 12 (* q q r x d))))
 (let ((?x1042 (* 6 (* q q r x d d))))
 (let ((?x1801 (* q q r x d d d)))
 (let ((?x1584 (+ q ?x135 ?x167)))
 (let ((?x1568 (* ?x2167 ?x2167 ?x2167 ?x1584 ?x1584 ?x1584 q q q)))
 (let ((?x1546 (* q q r r d d)))
 (let ((?x933 (* (- 12) ?x1546)))
 (let ((?x1541 (* q q r r d)))
 (let ((?x997 (* (- 24) ?x1541)))
 (let ((?x1539 (* q q q r d d)))
 (let ((?x559 (* (- 6) ?x1539)))
 (let ((?x1534 (* q q q r d)))
 (let ((?x934 (* (- 12) ?x1534)))
 (let ((?x620 (* (- 1) (* q q q r d d d))))
 (let ((?x1601 (* (- 16) ?x766)))
 (let ((?x703 (* q q q r)))
 (let ((?x1413 (* (- 8) ?x703)))
 (let ((?x627 (* q q r x)))
 (let ((?x1549 (* 8 ?x627)))
 (let ((?x1415 (* 8 ?x513)))
 (let ((?x598 (+ ?x238 ?x351 ?x447 ?x484 ?x489 ?x1415 ?x1549 ?x2171 ?x1413 ?x1601 ?x1051 ?x412 ?x620 ?x934 ?x559 ?x997 ?x933 ?x1568 ?x1773 ?x1801 ?x1901 ?x1074 ?x1042 ?x1053 ?x942 ?x2113 ?x2115 ?x2123 ?x2125 ?x2148 ?x741)))
 (let (($x1218 (or (not (= (* ?x598 ?x259) 0)) (not (= (* ?x1471 ?x2101) 0)) (not (= ?x1192 0)) (not (= (* ?x1160 ?x1479) 0)))))
 (let (($x1611 (= ?x259 0)))
 (let (($x1137 (and $x1611 $x1218)))
 (let ((?x630 (* 4 (* d00 r00))))
 (let ((?x1628 (* 4 (* ?x2167 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x726 (* (- 8) x)))
 (let ((?x415 (* 16 r)))
 (let ((?x1627 (+ (- 16) ?x415 ?x726 ?x30 ?x1982 ?x170 ?x1628 ?x202 ?x218 (* ?x1804 ?x2167 ?x2167) (* (- 2) (* ?x1804 ?x2167)) ?x268 (* (- 4) (* ?x2167 (+ (- 2) ?x135 ?x167 q ?x1805))) ?x630)))
 (let ((?x1701 (+ (- 2) ?x135 ?x167 q ?x1805)))
 (let ((?x804 (+ (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1701 r)) (* ?x2167 ?x2167 ?x2167 ?x1701 r r) (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1701 ?x1701 ?x1701) (* (- 1) (* ?x1804 ?x1804 ?x1804 r r)))))
 (let (($x1620 (not (= (* ?x804 ?x1627) 0))))
 (let ((?x222 (+ (- 32) ?x415 ?x726 ?x30 (* (- 16) d) ?x170 ?x1628 ?x202 ?x218 (* ?x1921 ?x2167 ?x2167) (* (- 2) (* ?x1921 ?x2167)) ?x268 (* (- 4) (* ?x2167 (+ (- 4) ?x135 ?x167 q ?x1919))) ?x630)))
 (let ((?x1621 (+ (- 4) ?x135 ?x167 q ?x1919)))
 (let ((?x445 (+ (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x1621 r)) (* ?x2167 ?x2167 ?x2167 ?x1621 r r) (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x1621 ?x1621 ?x1621) (* (- 1) (* ?x1921 ?x1921 ?x1921 r r)))))
 (let (($x1402 (not (= (* ?x445 ?x222) 0))))
 (let ((?x1388 (+ ?x415 ?x726 ?x30 ?x170 ?x1628 ?x202 ?x218 (* ?x2167 ?x2167 q) (* (- 2) (* ?x2167 q)) ?x268 (* (- 4) (* ?x2167 (+ ?x135 ?x167 q))) ?x630)))
 (let ((?x1403 (+ ?x135 ?x167 q)))
 (let ((?x1396 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x1403 r q q)) (* ?x2167 ?x2167 ?x2167 ?x1403 r r) (* ?x2167 ?x2167 ?x2167 ?x1403 ?x1403 ?x1403 q q q) (* (- 1) (* r r q q q)))))
 (let (($x1389 (not (= (* ?x1396 ?x1388) 0))))
 (let ((?x770 (+ 16 ?x415 ?x726 ?x30 ?x1593 ?x170 ?x1628 ?x202 ?x218 (* ?x2167 ?x2167 ?x2165) (* (- 2) (* ?x2167 ?x2165)) ?x268 (* (- 4) (* ?x2167 (+ 2 ?x135 ?x167 q d))) ?x630)))
 (let ((?x1386 (+ 2 ?x135 ?x167 q d)))
 (let ((?x1078 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x1386 r)) (* ?x2167 ?x2167 ?x2167 ?x1386 r r) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x1386 ?x1386 ?x1386) (* (- 1) (* ?x2165 ?x2165 ?x2165 r r)))))
 (let (($x761 (not (= (* ?x1078 ?x770) 0))))
 (let ((?x1664 (+ ?x199 ?x170 ?x1087 ?x202 ?x218 (* d d q) (* (- 2) (* d q)) ?x268 (* (- 4) (* d r)) ?x630)))
 (let (($x1665 (= ?x1664 0)))
 (let (($x740 (and $x1665 (or $x761 $x1389 $x1402 $x1620))))
 (rewrite (= $x740 $x1137)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x852 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x630 (* 4 (* d00 r00))))
 (let ((?x167 (* (- 1) x)))
 (let ((?x135 (* 2 r)))
 (let ((?x1386 (+ 2 ?x135 ?x167 q d)))
 (let ((?x2167 (+ 2 d)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x1628 (* 4 (* ?x2167 r))))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x1593 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x726 (* (- 8) x)))
 (let ((?x415 (* 16 r)))
 (let ((?x770 (+ 16 ?x415 ?x726 ?x30 ?x1593 ?x170 ?x1628 ?x202 ?x218 (* ?x2167 ?x2167 (+ 4 q)) (* (- 2) (* ?x2167 (+ 4 q))) ?x268 (* (- 4) (* ?x2167 ?x1386)) ?x630)))
 (let ((?x1093 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) r r))))
 (let ((?x2165 (+ 4 q)))
 (let ((?x1078 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x1386 r)) (* ?x2167 ?x2167 ?x2167 ?x1386 r r) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x1386 ?x1386 ?x1386) ?x1093)))
 (let (($x761 (not (= (* ?x1078 ?x770) 0))))
 (let ((?x1388 (+ ?x415 ?x726 ?x30 ?x170 ?x1628 ?x202 ?x218 (* ?x2167 ?x2167 q) (* (- 2) (* ?x2167 q)) ?x268 (* (- 4) (* ?x2167 (+ ?x135 ?x167 q))) ?x630)))
 (let ((?x1403 (+ ?x135 ?x167 q)))
 (let ((?x1396 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x1403 r q q)) (* ?x2167 ?x2167 ?x2167 ?x1403 r r) (* ?x2167 ?x2167 ?x2167 ?x1403 ?x1403 ?x1403 q q q) (* (- 1) (* r r q q q)))))
 (let (($x1389 (not (= (* ?x1396 ?x1388) 0))))
 (let ((?x222 (+ (- 32) ?x415 ?x726 ?x30 (* (- 16) d) ?x170 ?x1628 ?x202 ?x218 (* (+ (- 8) q) ?x2167 ?x2167) (* (- 2) (* (+ (- 8) q) ?x2167)) ?x268 (* (- 4) (* ?x2167 (+ (- 4) ?x135 ?x167 q (* (- 2) d)))) ?x630)))
 (let ((?x444 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) r r))))
 (let ((?x1919 (* (- 2) d)))
 (let ((?x1621 (+ (- 4) ?x135 ?x167 q ?x1919)))
 (let ((?x1921 (+ (- 8) q)))
 (let ((?x445 (+ (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x1621 r)) (* ?x2167 ?x2167 ?x2167 ?x1621 r r) (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x1621 ?x1621 ?x1621) ?x444)))
 (let (($x1402 (not (= (* ?x445 ?x222) 0))))
 (let ((?x1982 (* (- 8) d)))
 (let ((?x1627 (+ (- 16) ?x415 ?x726 ?x30 ?x1982 ?x170 ?x1628 ?x202 ?x218 (* (+ (- 4) q) ?x2167 ?x2167) (* (- 2) (* (+ (- 4) q) ?x2167)) ?x268 (* (- 4) (* ?x2167 (+ (- 2) ?x135 ?x167 q (* (- 1) d)))) ?x630)))
 (let ((?x1694 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) r r))))
 (let ((?x1805 (* (- 1) d)))
 (let ((?x1701 (+ (- 2) ?x135 ?x167 q ?x1805)))
 (let ((?x1804 (+ (- 4) q)))
 (let ((?x804 (+ (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1701 r)) (* ?x2167 ?x2167 ?x2167 ?x1701 r r) (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1701 ?x1701 ?x1701) ?x1694)))
 (let (($x1620 (not (= (* ?x804 ?x1627) 0))))
 (let ((?x1087 (* 4 (* x d))))
 (let ((?x199 (* 8 r)))
 (let ((?x1664 (+ ?x199 ?x170 ?x1087 ?x202 ?x218 (* d d q) (* (- 2) (* d q)) ?x268 (* (- 4) (* d r)) ?x630)))
 (let (($x1665 (= ?x1664 0)))
 (and $x1665 (or $x1620 $x1402 $x1389 $x761))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x223 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x630 (* 4 (* d00 r00))))
 (let ((?x1805 (* (- 1) d)))
 (let ((?x167 (* (- 1) x)))
 (let ((?x135 (* 2 r)))
 (let ((?x1701 (+ (- 2) ?x135 ?x167 q ?x1805)))
 (let ((?x2167 (+ 2 d)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x1628 (* 4 (* ?x2167 r))))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x1982 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x726 (* (- 8) x)))
 (let ((?x415 (* 16 r)))
 (let ((?x1627 (+ (- 16) ?x415 ?x726 ?x30 ?x1982 ?x170 ?x1628 ?x202 ?x218 (* (+ (- 4) q) ?x2167 ?x2167) (* (- 2) (* (+ (- 4) q) ?x2167)) ?x268 (* (- 4) (* ?x2167 ?x1701)) ?x630)))
 (let ((?x1694 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) r r))))
 (let ((?x1804 (+ (- 4) q)))
 (let ((?x804 (+ (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1701 r)) (* ?x2167 ?x2167 ?x2167 ?x1701 r r) (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x1701 ?x1701 ?x1701) ?x1694)))
 (let (($x1620 (not (= (* ?x804 ?x1627) 0))))
 (let ((?x222 (+ (- 32) ?x415 ?x726 ?x30 (* (- 16) d) ?x170 ?x1628 ?x202 ?x218 (* (+ (- 8) q) ?x2167 ?x2167) (* (- 2) (* (+ (- 8) q) ?x2167)) ?x268 (* (- 4) (* ?x2167 (+ (- 4) ?x135 ?x167 q (* (- 2) d)))) ?x630)))
 (let ((?x444 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) r r))))
 (let ((?x1919 (* (- 2) d)))
 (let ((?x1621 (+ (- 4) ?x135 ?x167 q ?x1919)))
 (let ((?x1921 (+ (- 8) q)))
 (let ((?x445 (+ (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x1621 r)) (* ?x2167 ?x2167 ?x2167 ?x1621 r r) (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x1621 ?x1621 ?x1621) ?x444)))
 (let (($x1402 (not (= (* ?x445 ?x222) 0))))
 (let ((?x1388 (+ ?x415 ?x726 ?x30 ?x170 ?x1628 ?x202 ?x218 (* ?x2167 ?x2167 q) (* (- 2) (* ?x2167 q)) ?x268 (* (- 4) (* ?x2167 (+ ?x135 ?x167 q))) ?x630)))
 (let ((?x1403 (+ ?x135 ?x167 q)))
 (let ((?x1396 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x1403 r q q)) (* ?x2167 ?x2167 ?x2167 ?x1403 r r) (* ?x2167 ?x2167 ?x2167 ?x1403 ?x1403 ?x1403 q q q) (* (- 1) (* r r q q q)))))
 (let (($x1389 (not (= (* ?x1396 ?x1388) 0))))
 (let ((?x1593 (* 8 d)))
 (let ((?x770 (+ 16 ?x415 ?x726 ?x30 ?x1593 ?x170 ?x1628 ?x202 ?x218 (* ?x2167 ?x2167 (+ 4 q)) (* (- 2) (* ?x2167 (+ 4 q))) ?x268 (* (- 4) (* ?x2167 (+ 2 ?x135 ?x167 q d))) ?x630)))
 (let ((?x1093 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) r r))))
 (let ((?x1386 (+ 2 ?x135 ?x167 q d)))
 (let ((?x2165 (+ 4 q)))
 (let ((?x1078 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x1386 r)) (* ?x2167 ?x2167 ?x2167 ?x1386 r r) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x1386 ?x1386 ?x1386) ?x1093)))
 (let (($x761 (not (= (* ?x1078 ?x770) 0))))
 (let ((?x1087 (* 4 (* x d))))
 (let ((?x199 (* 8 r)))
 (let ((?x1664 (+ ?x199 ?x170 ?x1087 ?x202 ?x218 (* d d q) (* (- 2) (* d q)) ?x268 (* (- 4) (* d r)) ?x630)))
 (let (($x1665 (= ?x1664 0)))
 (let (($x740 (and $x1665 (or $x761 $x1389 $x1402 $x1620))))
 (let (($x857 (and $x1665 (or $x1620 $x1402 $x1389 $x761))))
 (rewrite (= $x857 $x740))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x163 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x137 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x143 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x155 (+ (* (- 1) ?x62 ?x62 ?x62 ?x143 ?x143 ?x137 r) (* ?x62 ?x62 ?x62 ?x137 r r) (* ?x62 ?x62 ?x62 ?x143 ?x143 ?x143 ?x137 ?x137 ?x137))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x141 (- (+ (- (* 8 ?x137) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x148 (+ (- (+ (- ?x141 ?x41) (* ?x62 ?x62 ?x143)) (* 2 ?x62 ?x143)) ?x49)))
 (let ((?x158 (* (+ (- ?x148 (* 4 ?x62 ?x137)) ?x53) (- ?x155 (* ?x143 ?x143 ?x143 r r)))))
 (let ((?x111 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x117 (- q 4)))
 (let ((?x129 (+ (* (- 1) ?x62 ?x62 ?x62 ?x117 ?x117 ?x111 r) (* ?x62 ?x62 ?x62 ?x111 r r) (* ?x62 ?x62 ?x62 ?x117 ?x117 ?x117 ?x111 ?x111 ?x111))))
 (let ((?x115 (- (+ (- (* 8 ?x111) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x122 (+ (- (+ (- ?x115 ?x41) (* ?x62 ?x62 ?x117)) (* 2 ?x62 ?x117)) ?x49)))
 (let ((?x132 (* (+ (- ?x122 (* 4 ?x62 ?x111)) ?x53) (- ?x129 (* ?x117 ?x117 ?x117 r r)))))
 (let ((?x105 (* q q q r r)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x87 (+ ?x58 q)))
 (let ((?x104 (+ (* (- 1) ?x62 ?x62 ?x62 q q ?x87 r) (* ?x62 ?x62 ?x62 ?x87 r r) (* ?x62 ?x62 ?x62 q q q ?x87 ?x87 ?x87))))
 (let ((?x91 (- (+ (- (* 8 ?x87) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x97 (+ (- (+ (- ?x91 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let (($x109 (not (= (* (+ (- ?x97 (* 4 ?x62 ?x87)) ?x53) (- ?x104 ?x105)) 0))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x81 (+ (* (- 1) ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 r) (* ?x62 ?x62 ?x62 ?x59 r r) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x84 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (- ?x81 (* ?x67 ?x67 ?x67 r r)))))
 (let (($x161 (or (not (= ?x84 0)) $x109 (not (= ?x132 0)) (not (= ?x158 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x161)))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1102 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x630 (* 4 (* d00 r00))))
 (let ((?x167 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1751 (+ 2 ?x57 ?x167 q d)))
 (let ((?x273 (+ 2 d)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x673 (* 4 (* ?x273 r))))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x199 (* 8 d)))
 (let ((?x843 (* 8 q)))
 (let ((?x726 (* (- 8) x)))
 (let ((?x844 (* 16 r)))
 (let ((?x2140 (+ 16 ?x844 ?x726 ?x843 ?x199 ?x170 ?x673 ?x202 ?x218 (* ?x273 ?x273 (+ 4 q)) (* (- 2) (* ?x273 (+ 4 q))) ?x268 (* (- 4) (* ?x273 ?x1751)) ?x630)))
 (let ((?x2130 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) r r))))
 (let ((?x357 (+ 4 q)))
 (let ((?x1375 (+ (* (- 1) (* ?x273 ?x273 ?x273 ?x357 ?x357 ?x1751 r)) (* ?x273 ?x273 ?x273 ?x1751 r r) (* ?x273 ?x273 ?x273 ?x357 ?x357 ?x357 ?x1751 ?x1751 ?x1751) ?x2130)))
 (let ((?x1082 (+ ?x844 ?x726 ?x843 ?x170 ?x673 ?x202 ?x218 (* ?x273 ?x273 q) (* (- 2) (* ?x273 q)) ?x268 (* (- 4) (* ?x273 (+ ?x57 ?x167 q))) ?x630)))
 (let ((?x727 (+ ?x57 ?x167 q)))
 (let ((?x1059 (+ (* (- 1) (* ?x273 ?x273 ?x273 ?x727 r q q)) (* ?x273 ?x273 ?x273 ?x727 r r) (* ?x273 ?x273 ?x273 ?x727 ?x727 ?x727 q q q) (* (- 1) (* r r q q q)))))
 (let ((?x661 (+ (- 32) ?x844 ?x726 ?x843 (* (- 16) d) ?x170 ?x673 ?x202 ?x218 (* (+ (- 8) q) ?x273 ?x273) (* (- 2) (* (+ (- 8) q) ?x273)) ?x268 (* (- 4) (* ?x273 (+ (- 4) ?x57 ?x167 q (* (- 2) d)))) ?x630)))
 (let ((?x914 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) r r))))
 (let ((?x1587 (* (- 2) d)))
 (let ((?x1081 (+ (- 4) ?x57 ?x167 q ?x1587)))
 (let ((?x1368 (+ (- 8) q)))
 (let ((?x809 (+ (* (- 1) (* ?x1368 ?x1368 ?x273 ?x273 ?x273 ?x1081 r)) (* ?x273 ?x273 ?x273 ?x1081 r r) (* ?x1368 ?x1368 ?x1368 ?x273 ?x273 ?x273 ?x1081 ?x1081 ?x1081) ?x914)))
 (let ((?x460 (* (- 8) d)))
 (let ((?x410 (+ (- 16) ?x844 ?x726 ?x843 ?x460 ?x170 ?x673 ?x202 ?x218 (* (+ (- 4) q) ?x273 ?x273) (* (- 2) (* (+ (- 4) q) ?x273)) ?x268 (* (- 4) (* ?x273 (+ (- 2) ?x57 ?x167 q (* (- 1) d)))) ?x630)))
 (let ((?x573 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) r r))))
 (let ((?x1178 (* (- 1) d)))
 (let ((?x1675 (+ (- 2) ?x57 ?x167 q ?x1178)))
 (let ((?x979 (+ (- 4) q)))
 (let ((?x251 (+ (* (- 1) (* ?x979 ?x979 ?x273 ?x273 ?x273 ?x1675 r)) (* ?x273 ?x273 ?x273 ?x1675 r r) (* ?x979 ?x979 ?x979 ?x273 ?x273 ?x273 ?x1675 ?x1675 ?x1675) ?x573)))
 (let (($x1663 (or (not (= (* ?x251 ?x410) 0)) (not (= (* ?x809 ?x661) 0)) (not (= (* ?x1059 ?x1082) 0)) (not (= (* ?x1375 ?x2140) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x869 (+ ?x30 ?x170 (* 4 (* x d)) ?x202 ?x218 ?x44 (* (- 2) (* d q)) ?x268 (* (- 4) (* d r)) ?x630)))
 (and (= ?x869 0) $x1663)))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x738 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x630 (* 4 (* d00 r00))))
 (let ((?x167 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1751 (+ 2 ?x57 ?x167 q d)))
 (let ((?x273 (+ 2 d)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x673 (* 4 (* ?x273 r))))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x199 (* 8 d)))
 (let ((?x843 (* 8 q)))
 (let ((?x726 (* (- 8) x)))
 (let ((?x844 (* 16 r)))
 (let ((?x2140 (+ 16 ?x844 ?x726 ?x843 ?x199 ?x170 ?x673 ?x202 ?x218 (* ?x273 ?x273 (+ 4 q)) (* (- 2) (* ?x273 (+ 4 q))) ?x268 (* (- 4) (* ?x273 ?x1751)) ?x630)))
 (let ((?x2130 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) r r))))
 (let ((?x357 (+ 4 q)))
 (let ((?x1375 (+ (* (- 1) (* ?x273 ?x273 ?x273 ?x357 ?x357 ?x1751 r)) (* ?x273 ?x273 ?x273 ?x1751 r r) (* ?x273 ?x273 ?x273 ?x357 ?x357 ?x357 ?x1751 ?x1751 ?x1751) ?x2130)))
 (let ((?x1082 (+ ?x844 ?x726 ?x843 ?x170 ?x673 ?x202 ?x218 (* ?x273 ?x273 q) (* (- 2) (* ?x273 q)) ?x268 (* (- 4) (* ?x273 (+ ?x57 ?x167 q))) ?x630)))
 (let ((?x727 (+ ?x57 ?x167 q)))
 (let ((?x1059 (+ (* (- 1) (* ?x273 ?x273 ?x273 ?x727 r q q)) (* ?x273 ?x273 ?x273 ?x727 r r) (* ?x273 ?x273 ?x273 ?x727 ?x727 ?x727 q q q) (* (- 1) (* r r q q q)))))
 (let ((?x661 (+ (- 32) ?x844 ?x726 ?x843 (* (- 16) d) ?x170 ?x673 ?x202 ?x218 (* (+ (- 8) q) ?x273 ?x273) (* (- 2) (* (+ (- 8) q) ?x273)) ?x268 (* (- 4) (* ?x273 (+ (- 4) ?x57 ?x167 q (* (- 2) d)))) ?x630)))
 (let ((?x914 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) r r))))
 (let ((?x1587 (* (- 2) d)))
 (let ((?x1081 (+ (- 4) ?x57 ?x167 q ?x1587)))
 (let ((?x1368 (+ (- 8) q)))
 (let ((?x809 (+ (* (- 1) (* ?x1368 ?x1368 ?x273 ?x273 ?x273 ?x1081 r)) (* ?x273 ?x273 ?x273 ?x1081 r r) (* ?x1368 ?x1368 ?x1368 ?x273 ?x273 ?x273 ?x1081 ?x1081 ?x1081) ?x914)))
 (let ((?x460 (* (- 8) d)))
 (let ((?x410 (+ (- 16) ?x844 ?x726 ?x843 ?x460 ?x170 ?x673 ?x202 ?x218 (* (+ (- 4) q) ?x273 ?x273) (* (- 2) (* (+ (- 4) q) ?x273)) ?x268 (* (- 4) (* ?x273 (+ (- 2) ?x57 ?x167 q (* (- 1) d)))) ?x630)))
 (let ((?x573 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) r r))))
 (let ((?x1178 (* (- 1) d)))
 (let ((?x1675 (+ (- 2) ?x57 ?x167 q ?x1178)))
 (let ((?x979 (+ (- 4) q)))
 (let ((?x251 (+ (* (- 1) (* ?x979 ?x979 ?x273 ?x273 ?x273 ?x1675 r)) (* ?x273 ?x273 ?x273 ?x1675 r r) (* ?x979 ?x979 ?x979 ?x273 ?x273 ?x273 ?x1675 ?x1675 ?x1675) ?x573)))
 (let (($x1663 (or (not (= (* ?x251 ?x410) 0)) (not (= (* ?x809 ?x661) 0)) (not (= (* ?x1059 ?x1082) 0)) (not (= (* ?x1375 ?x2140) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x869 (+ ?x30 ?x170 (* 4 (* x d)) ?x202 ?x218 ?x44 (* (- 2) (* d q)) ?x268 (* (- 4) (* d r)) ?x630)))
 (let (($x1658 (and (= ?x869 0) $x1663)))
 (let ((?x137 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x143 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x155 (+ (* (- 1) ?x62 ?x62 ?x62 ?x143 ?x143 ?x137 r) (* ?x62 ?x62 ?x62 ?x137 r r) (* ?x62 ?x62 ?x62 ?x143 ?x143 ?x143 ?x137 ?x137 ?x137))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x141 (- (+ (- (* 8 ?x137) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x148 (+ (- (+ (- ?x141 ?x41) (* ?x62 ?x62 ?x143)) (* 2 ?x62 ?x143)) ?x49)))
 (let ((?x158 (* (+ (- ?x148 (* 4 ?x62 ?x137)) ?x53) (- ?x155 (* ?x143 ?x143 ?x143 r r)))))
 (let ((?x111 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x117 (- q 4)))
 (let ((?x129 (+ (* (- 1) ?x62 ?x62 ?x62 ?x117 ?x117 ?x111 r) (* ?x62 ?x62 ?x62 ?x111 r r) (* ?x62 ?x62 ?x62 ?x117 ?x117 ?x117 ?x111 ?x111 ?x111))))
 (let ((?x115 (- (+ (- (* 8 ?x111) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x122 (+ (- (+ (- ?x115 ?x41) (* ?x62 ?x62 ?x117)) (* 2 ?x62 ?x117)) ?x49)))
 (let ((?x132 (* (+ (- ?x122 (* 4 ?x62 ?x111)) ?x53) (- ?x129 (* ?x117 ?x117 ?x117 r r)))))
 (let ((?x105 (* q q q r r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x87 (+ ?x58 q)))
 (let ((?x104 (+ (* (- 1) ?x62 ?x62 ?x62 q q ?x87 r) (* ?x62 ?x62 ?x62 ?x87 r r) (* ?x62 ?x62 ?x62 q q q ?x87 ?x87 ?x87))))
 (let ((?x91 (- (+ (- (* 8 ?x87) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x97 (+ (- (+ (- ?x91 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let (($x109 (not (= (* (+ (- ?x97 (* 4 ?x62 ?x87)) ?x53) (- ?x104 ?x105)) 0))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x81 (+ (* (- 1) ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 r) (* ?x62 ?x62 ?x62 ?x59 r r) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x84 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (- ?x81 (* ?x67 ?x67 ?x67 r r)))))
 (let (($x161 (or (not (= ?x84 0)) $x109 (not (= ?x132 0)) (not (= ?x158 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x162 (and (= ?x54 0) $x161)))
 (rewrite (= $x162 $x1658))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x854 (trans (quant-intro (proof-bind ?x738) (= $x163 $x1102)) (elim-unused (= $x1102 $x852)) (= $x163 $x852))))
 (let ((@x27 (asserted $x163)))
 (let ((@x1749 (mp (mp @x27 @x854 $x852) (quant-intro (proof-bind ?x223) (= $x852 $x671)) $x671)))
 (let ((@x628 (mp (mp @x1749 (rewrite (= $x671 $x671)) $x671) (quant-intro (proof-bind ?x1223) (= $x671 $x1235)) $x1235)))
 (let ((@x654 (mp~ (mp @x628 (quant-intro (proof-bind ?x480) (= $x1235 $x552)) $x552) (sk (~ $x552 $x1772)) $x1772)))
 (let ((@x475 (mp @x654 (rewrite (= $x1772 $x479)) $x479)))
 (let ((@x421 (and-elim @x475 $x378)))
 (let ((@x352 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x378) $x1735)) @x421 $x1735)))
 (let (($x762 (<= ?x2152 0)))
 (let ((@x456 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x378) $x762)) @x421 $x762)))
 (let (($x1086 (not (<= ?x1839 0))))
 (let (($x556 (<= ?x1886 0)))
 (let (($x1762 (>= ?x1886 0)))
 (let ((@x1252 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x589 (not $x556) (not $x1762))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1762)) @x456 @x352 false) $x1762) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x556)) @x456 @x352 false) $x556) $x589)))
 (let (($x2013 (>= ?x615 0)))
 (let (($x1637 (<= ?x615 0)))
 (let ((@x708 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1719 (not $x1637) (not $x2013))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1637)) @x456 @x352 false) $x1637) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2013)) @x456 @x352 false) $x2013) $x1719)))
 (let (($x803 (>= ?x565 0)))
 (let (($x183 (<= ?x565 0)))
 (let ((@x543 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1376 (not $x183) (not $x803))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x183)) @x456 @x352 false) $x183) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x803)) @x456 @x352 false) $x803) $x1376)))
 (let ((@x1257 (unit-resolution (unit-resolution (and-elim @x475 $x555) @x543 @x708 (or $x763 $x2054)) @x1252 $x2054)))
 (let (($x2097 (>= ?x1839 0)))
 (let ((@x1736 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x448 $x1086 (not $x2097))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2097)) @x456 @x352 false) $x2097) @x1257 $x1086)))
 ((_ th-lemma arith farkas 1 1 1) @x1736 @x456 @x352 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        76
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1088
 :arith-nonlinear-bounds    38
 :arith-num-rows            14
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 94
 :arith-tableau-max-rows    14
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                3.93
 :memory                    3.36
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1584667
 :num-checks                1
 :propagations              36
 :rlimit-count              11496
 :time                      0.01
 :total-time                0.03)
