unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x542 (* (- 1) k!2)))
 (let ((?x244 (* n!0 n!0)))
 (let ((?x545 (* 3 ?x244)))
 (let ((?x393 (+ ?x545 ?x542 (* 3 n!0))))
 (let (($x228 (<= ?x393 (- 1))))
 (let (($x141 (= ?x393 (- 1))))
 (let ((?x128 (+ k!2 c!3)))
 (let ((?x167 (+ k!2 m!1)))
 (let ((?x587 (+ 6 m!1)))
 (let ((?x134 (+ (* (+ 1 n!0) ?x167 ?x167 ?x128 ?x128 ?x128) (* (- 1) (* ?x587 ?x587 ?x167 ?x167 ?x128 ?x128 ?x128)))))
 (let ((?x589 (+ 1 n!0)))
 (let ((?x592 (+ (* (- 1) (* ?x589 ?x589 ?x167 ?x167 ?x167 ?x128)) (* ?x589 ?x589 ?x587 ?x587 ?x587 ?x167 ?x167 ?x167 ?x128))))
 (let ((?x372 (* (- 24) (* k!2 m!1 n!0))))
 (let ((?x732 (* (- 6) (* m!1 m!1))))
 (let ((?x735 (* (- 6) (* m!1 m!1 n!0 n!0))))
 (let ((?x730 (* k!2 k!2)))
 (let ((?x528 (* (- 6) ?x730)))
 (let ((?x137 (* (- 2) (* m!1 m!1 m!1 n!0))))
 (let ((?x182 (* (- 12) (* m!1 m!1 n!0))))
 (let ((?x593 (* (- 4) (* k!2 m!1 m!1 n!0))))
 (let ((?x385 (* (- 2) (* k!2 m!1 m!1))))
 (let ((?x719 (* (- 12) (* k!2 m!1 n!0 n!0))))
 (let ((?x354 (* (- 12) (* k!2 k!2 n!0))))
 (let ((?x741 (* (- 6) (* k!2 k!2 n!0 n!0))))
 (let ((?x145 (* (- 2) (* k!2 k!2 m!1 n!0))))
 (let ((?x190 (* (- 1) (* k!2 k!2 m!1 n!0 n!0))))
 (let ((?x102 (* (- 1) (* m!1 m!1 m!1))))
 (let ((?x586 (* (- 2) (* k!2 m!1 m!1 n!0 n!0))))
 (let ((?x779 (* (- 1) (* k!2 k!2 m!1))))
 (let ((?x534 (* (- 1) (* m!1 m!1 m!1 n!0 n!0))))
 (let ((?x201 (* (- 12) (* k!2 m!1))))
 (let ((?x105 (+ ?x201 ?x534 ?x779 ?x586 ?x102 ?x190 ?x145 ?x741 ?x354 (* ?x589 ?x589 ?x587 ?x167 ?x167 ?x128) ?x719 ?x385 ?x593 ?x182 ?x137 ?x528 ?x735 ?x732 ?x372)))
 (let ((?x229 (* ?x105 ?x592 ?x134 (+ 7 ?x545 ?x542 (* (- 1) m!1) (* 9 n!0)))))
 (let (($x110 (= ?x229 0)))
 (let (($x100 (not $x110)))
 (let (($x628 (= (+ k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0)) (* 3 c!3)) 1)))
 (let ((?x162 (* (- 1) ?x730)))
 (let ((?x722 (* 18 c!3)))
 (let ((?x728 (* (- 9) n!0)))
 (let ((?x726 (* 5 k!2)))
 (let ((?x725 (+ m!1 (* (- 6) n!0))))
 (let (($x724 (= ?x725 6)))
 (let (($x274 (and $x724 (= (+ ?x726 ?x728 (* 9 (* n!0 c!3)) ?x722 ?x162) 4) $x628 $x141 $x100)))
 (let ((?x358 (+ c!3 k!2)))
 (let ((?x541 (+ (* (- 1) (* ?x587 ?x587 ?x167 ?x167 ?x358 ?x358 ?x358)) (* ?x589 ?x167 ?x167 ?x358 ?x358 ?x358))))
 (let ((?x121 (+ (* ?x589 ?x589 ?x587 ?x587 ?x587 ?x167 ?x167 ?x167 ?x358) (* (- 1) (* ?x589 ?x589 ?x167 ?x167 ?x167 ?x358)))))
 (let ((?x192 (+ ?x528 ?x779 ?x145 ?x354 ?x719 ?x385 ?x593 ?x741 ?x735 ?x372 ?x732 ?x182 ?x201 ?x102 ?x137 (* ?x589 ?x589 ?x587 ?x167 ?x167 ?x358) ?x534 ?x586 ?x190)))
 (let ((?x369 (* ?x192 ?x121 ?x541 (+ 7 ?x542 (* (- 1) m!1) (* 9 n!0) ?x545))))
 (let (($x248 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x374 (and $x724 (= (+ ?x722 ?x726 ?x728 ?x162 (* 9 (* c!3 n!0))) 4) $x248 (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x244)) 1) (not (= ?x369 0)))))
 (let (($x168 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x270 (* n n)))
 (let ((?x271 (* 3 ?x270)))
 (let ((?x48 (* 9 n)))
 (let ((?x355 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x76 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x307 (+ 1 n)))
 (let ((?x323 (* (- 1) (* (+ 6 m) (+ 6 m) ?x71 ?x71 ?x76 ?x76 ?x76))))
 (let ((?x344 (+ ?x323 (* ?x307 ?x71 ?x71 ?x76 ?x76 ?x76))))
 (let ((?x624 (* (- 1) (* ?x307 ?x307 ?x71 ?x71 ?x71 ?x76))))
 (let ((?x530 (+ 6 m)))
 (let ((?x321 (* ?x307 ?x307 ?x530 ?x530 ?x530 ?x71 ?x71 ?x71 ?x76)))
 (let ((?x703 (* (- 1) (* k k m n n))))
 (let ((?x639 (* (- 1) (* m m m n n))))
 (let ((?x626 (* ?x307 ?x307 ?x530 ?x71 ?x71 ?x76)))
 (let ((?x761 (+ (* (- 6) (* k k)) (* (- 1) (* k k m)) (* (- 2) (* k k m n)) (* (- 12) (* k k n)) (* (- 12) (* k m n n)) (* (- 2) (* k m m)) (* (- 4) (* k m m n)) (* (- 6) (* k k n n)) (* (- 6) (* m m n n)) (* (- 24) (* k m n)) (* (- 6) (* m m)) (* (- 12) (* m m n)) (* (- 12) (* k m)) (* (- 1) (* m m m)) (* (- 2) (* m m m n)) ?x626 ?x639 (* (- 2) (* k m m n n)) ?x703)))
 (let (($x737 (= (* ?x761 (+ ?x321 ?x624) ?x344 (+ 7 ?x239 ?x355 ?x48 ?x271)) 0)))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) ?x270)) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 (* c n))) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 $x209 $x261 $x299 (not $x737))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x562 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x355 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x394 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x239 ?x355 ?x65)))
 (let ((?x76 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x307 (+ 1 n)))
 (let ((?x323 (* (- 1) (* (+ 6 m) (+ 6 m) ?x71 ?x71 ?x76 ?x76 ?x76))))
 (let ((?x344 (+ ?x323 (* ?x307 ?x71 ?x71 ?x76 ?x76 ?x76))))
 (let ((?x530 (+ 6 m)))
 (let ((?x321 (* ?x307 ?x307 ?x530 ?x530 ?x530 ?x71 ?x71 ?x71 ?x76)))
 (let ((?x624 (* (- 1) (* ?x307 ?x307 ?x71 ?x71 ?x71 ?x76))))
 (let ((?x626 (* ?x307 ?x307 ?x530 ?x71 ?x71 ?x76)))
 (let ((?x348 (* (+ (* (- 1) (* ?x307 ?x307 ?x530 ?x71 ?x71)) ?x626) (+ ?x624 ?x321) ?x344 ?x394)))
 (let (($x205 (not (= ?x348 0))))
 (let (($x174 (= (+ (* 3 (* n n)) ?x239 ?x65) (- 1))))
 (let (($x283 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x211 ?x212) 4) $x283 $x174 $x205)))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x186 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x270 (* n n)))
 (let ((?x271 (* 3 ?x270)))
 (let ((?x48 (* 9 n)))
 (let ((?x355 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x76 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x307 (+ 1 n)))
 (let ((?x323 (* (- 1) (* (+ 6 m) (+ 6 m) ?x71 ?x71 ?x76 ?x76 ?x76))))
 (let ((?x344 (+ ?x323 (* ?x307 ?x71 ?x71 ?x76 ?x76 ?x76))))
 (let ((?x624 (* (- 1) (* ?x307 ?x307 ?x71 ?x71 ?x71 ?x76))))
 (let ((?x530 (+ 6 m)))
 (let ((?x321 (* ?x307 ?x307 ?x530 ?x530 ?x530 ?x71 ?x71 ?x71 ?x76)))
 (let ((?x703 (* (- 1) (* k k m n n))))
 (let ((?x639 (* (- 1) (* m m m n n))))
 (let ((?x626 (* ?x307 ?x307 ?x530 ?x71 ?x71 ?x76)))
 (let ((?x761 (+ (* (- 6) (* k k)) (* (- 1) (* k k m)) (* (- 2) (* k k m n)) (* (- 12) (* k k n)) (* (- 12) (* k m n n)) (* (- 2) (* k m m)) (* (- 4) (* k m m n)) (* (- 6) (* k k n n)) (* (- 6) (* m m n n)) (* (- 24) (* k m n)) (* (- 6) (* m m)) (* (- 12) (* m m n)) (* (- 12) (* k m)) (* (- 1) (* m m m)) (* (- 2) (* m m m n)) ?x626 ?x639 (* (- 2) (* k m m n n)) ?x703)))
 (let (($x737 (= (* ?x761 (+ ?x321 ?x624) ?x344 (+ 7 ?x239 ?x355 ?x48 ?x271)) 0)))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) ?x270)) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 (* c n))) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x736 (and $x125 $x209 $x261 $x299 (not $x737))))
 (let ((?x348 (* (+ (* (- 1) (* ?x307 ?x307 ?x530 ?x71 ?x71)) ?x626) (+ ?x624 ?x321) ?x344 (+ 4 (* 3 (* ?x307 ?x307)) ?x239 ?x355 (* 3 n)))))
 (let (($x205 (not (= ?x348 0))))
 (let (($x174 (= (+ ?x271 ?x239 (* 3 n)) (- 1))))
 (let (($x283 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x296 (and $x125 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x211 ?x212) 4) $x283 $x174 $x205)))
 (rewrite (= $x296 $x736))))))))))))))))))))))))))))))))))))
 ))
 (let (($x207 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x355 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x394 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x239 ?x355 ?x65)))
 (let ((?x76 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x307 (+ 1 n)))
 (let ((?x323 (* (- 1) (* (+ 6 m) (+ 6 m) ?x71 ?x71 ?x76 ?x76 ?x76))))
 (let ((?x344 (+ ?x323 (* ?x307 ?x71 ?x71 ?x76 ?x76 ?x76))))
 (let ((?x530 (+ 6 m)))
 (let ((?x321 (* ?x307 ?x307 ?x530 ?x530 ?x530 ?x71 ?x71 ?x71 ?x76)))
 (let ((?x624 (* (- 1) (* ?x307 ?x307 ?x71 ?x71 ?x71 ?x76))))
 (let ((?x626 (* ?x307 ?x307 ?x530 ?x71 ?x71 ?x76)))
 (let ((?x348 (* (+ (* (- 1) (* ?x307 ?x307 ?x530 ?x71 ?x71)) ?x626) (+ ?x624 ?x321) ?x344 ?x394)))
 (let (($x205 (not (= ?x348 0))))
 (let (($x174 (= (+ (* 3 (* n n)) ?x239 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x636 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 (= ?x636 (- 4)) (= (+ (* (- 3) c) (* n k) ?x239 (* 2 n)) (- 1)) $x174 $x205))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x563 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x355 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x394 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x239 ?x355 ?x65)))
 (let ((?x76 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x307 (+ 1 n)))
 (let ((?x323 (* (- 1) (* (+ 6 m) (+ 6 m) ?x71 ?x71 ?x76 ?x76 ?x76))))
 (let ((?x344 (+ ?x323 (* ?x307 ?x71 ?x71 ?x76 ?x76 ?x76))))
 (let ((?x530 (+ 6 m)))
 (let ((?x321 (* ?x307 ?x307 ?x530 ?x530 ?x530 ?x71 ?x71 ?x71 ?x76)))
 (let ((?x624 (* (- 1) (* ?x307 ?x307 ?x71 ?x71 ?x71 ?x76))))
 (let ((?x626 (* ?x307 ?x307 ?x530 ?x71 ?x71 ?x76)))
 (let ((?x348 (* (+ (* (- 1) (* ?x307 ?x307 ?x530 ?x71 ?x71)) ?x626) (+ ?x624 ?x321) ?x344 ?x394)))
 (let (($x205 (not (= ?x348 0))))
 (let (($x174 (= (+ (* 3 (* n n)) ?x239 ?x65) (- 1))))
 (let (($x283 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x296 (and $x125 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x211 ?x212) 4) $x283 $x174 $x205)))
 (let ((?x48 (* 9 n)))
 (let ((?x636 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x208 (and $x125 (= ?x636 (- 4)) (= (+ (* (- 3) c) (* n k) ?x239 (* 2 n)) (- 1)) $x174 $x205)))
 (rewrite (= $x208 $x296))))))))))))))))))))))))))))))
 ))
 (let (($x92 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ n 1)))
 (let ((?x78 (+ m 6)))
 (let ((?x71 (+ k m)))
 (let ((?x76 (+ c k)))
 (let ((?x86 (+ (* (- 1) ?x71 ?x71 ?x78 ?x68 ?x68) (* ?x76 ?x71 ?x71 ?x78 ?x68 ?x68))))
 (let ((?x83 (+ (* (- 1) ?x76 ?x76 ?x76 ?x71 ?x71 ?x78 ?x78) (* ?x76 ?x76 ?x76 ?x71 ?x71 ?x68))))
 (let ((?x80 (+ (* (- 1) ?x76 ?x71 ?x71 ?x71 ?x68 ?x68) (* ?x76 ?x71 ?x71 ?x71 ?x78 ?x78 ?x78 ?x68 ?x68))))
 (let ((?x87 (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) ?x80 ?x83 ?x86)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x87 0))))))))))))))))))) :qid k!34))
 ))
 (let ((?x196 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x355 (* (- 1) m)))
 (let ((?x239 (* (- 1) k)))
 (let ((?x394 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x239 ?x355 ?x65)))
 (let ((?x76 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x307 (+ 1 n)))
 (let ((?x323 (* (- 1) (* (+ 6 m) (+ 6 m) ?x71 ?x71 ?x76 ?x76 ?x76))))
 (let ((?x344 (+ ?x323 (* ?x307 ?x71 ?x71 ?x76 ?x76 ?x76))))
 (let ((?x530 (+ 6 m)))
 (let ((?x321 (* ?x307 ?x307 ?x530 ?x530 ?x530 ?x71 ?x71 ?x71 ?x76)))
 (let ((?x624 (* (- 1) (* ?x307 ?x307 ?x71 ?x71 ?x71 ?x76))))
 (let ((?x626 (* ?x307 ?x307 ?x530 ?x71 ?x71 ?x76)))
 (let ((?x348 (* (+ (* (- 1) (* ?x307 ?x307 ?x530 ?x71 ?x71)) ?x626) (+ ?x624 ?x321) ?x344 ?x394)))
 (let (($x205 (not (= ?x348 0))))
 (let (($x174 (= (+ (* 3 (* n n)) ?x239 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x636 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x208 (and $x125 (= ?x636 (- 4)) (= (+ (* (- 3) c) (* n k) ?x239 (* 2 n)) (- 1)) $x174 $x205)))
 (let ((?x68 (+ n 1)))
 (let ((?x78 (+ m 6)))
 (let ((?x75 (- 1)))
 (let ((?x86 (+ (* ?x75 ?x71 ?x71 ?x78 ?x68 ?x68) (* ?x76 ?x71 ?x71 ?x78 ?x68 ?x68))))
 (let ((?x83 (+ (* ?x75 ?x76 ?x76 ?x76 ?x71 ?x71 ?x78 ?x78) (* ?x76 ?x76 ?x76 ?x71 ?x71 ?x68))))
 (let ((?x80 (+ (* ?x75 ?x76 ?x71 ?x71 ?x71 ?x68 ?x68) (* ?x76 ?x71 ?x71 ?x71 ?x78 ?x78 ?x78 ?x68 ?x68))))
 (let ((?x87 (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) ?x80 ?x83 ?x86)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x91 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 (= (+ (- (+ 1 (* 3 n n)) k) ?x65) 0) (or (not (= ?x87 0))))))
 (rewrite (= $x91 $x208))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x93 (asserted $x92)))
 (let ((@x123 (mp (mp @x93 (quant-intro (proof-bind ?x196) (= $x92 $x207)) $x207) (rewrite (= $x207 $x207)) $x207)))
 (let ((@x188 (mp (mp @x123 (quant-intro (proof-bind ?x563) (= $x207 $x562)) $x562) (quant-intro (proof-bind ?x186) (= $x562 $x168)) $x168)))
 (let ((@x142 (mp (mp~ @x188 (sk (~ $x168 $x374)) $x374) (rewrite (= $x374 $x274)) $x274)))
 (let ((@x598 (and-elim @x142 $x141)))
 (let ((@x580 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x141) $x228)) @x598 $x228)))
 (let (($x574 (>= ?x725 6)))
 (let ((@x104 (and-elim @x142 $x724)))
 (let ((@x222 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x724) $x574)) @x104 $x574)))
 (let (($x578 (>= ?x393 (- 1))))
 (let ((@x334 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x141) $x578)) @x598 $x578)))
 (let (($x603 (<= ?x725 6)))
 (let ((@x288 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x724) $x603)) @x104 $x603)))
 (let (($x280 (not (<= ?x229 0))))
 (let (($x308 (>= ?x229 0)))
 (let ((@x129 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x308)) @x288 @x334 @x222 @x580 false) $x308)))
 (let ((@x346 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x110 $x280 (not $x308))) (and-elim @x142 $x100) (or $x280 (not $x308)))))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution @x346 @x129 $x280) @x288 @x334 @x222 @x580 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        26
 :arith-assert-upper        25
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-fixed-eqs           1
 :arith-gcd-tests           3
 :arith-ineq-splits         1
 :arith-max-min             151
 :arith-nonlinear-bounds    25
 :arith-num-rows            12
 :arith-patches             2
 :arith-pivots              5
 :arith-pseudo-nonlinear    2
 :arith-row-summations      5
 :arith-tableau-max-columns 57
 :arith-tableau-max-rows    12
 :conflicts                 2
 :decisions                 4
 :del-clause                16
 :final-checks              4
 :max-memory                3.62
 :memory                    3.16
 :mk-bool-var               24
 :mk-clause                 16
 :num-allocs                1165844
 :num-checks                1
 :propagations              10
 :rlimit-count              3796
 :time                      0.01
 :total-time                0.01)
