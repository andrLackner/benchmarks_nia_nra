unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x694 (* k!2 k!2)))
 (let ((?x1395 (+ (* 9 n!0) ?x694 (* (- 5) k!2) (* (- 18) c!3) (* (- 9) (* n!0 c!3)))))
 (let (($x566 (<= ?x1395 (- 4))))
 (let (($x1400 (= ?x1395 (- 4))))
 (let ((?x562 (+ k!2 c!3)))
 (let ((?x558 (+ m!1 k!2)))
 (let ((?x1602 (+ 6 m!1)))
 (let ((?x760 (+ 1 n!0)))
 (let ((?x1908 (* (- 108) (* c!3 c!3))))
 (let ((?x757 (* 108 c!3)))
 (let ((?x756 (* 108 k!2)))
 (let ((?x775 (* (- 108) ?x694)))
 (let ((?x510 (* k!2 k!2 k!2)))
 (let ((?x1498 (+ (* 2 (* n!0 k!2 k!2 k!2)) (* k!2 k!2 c!3) (* n!0 n!0 k!2 k!2 k!2) (* m!1 m!1 n!0 k!2 c!3) (* 36 (* m!1 c!3)) (* (- 3) (* m!1 m!1 c!3 c!3)) (* (- 6) (* m!1 m!1 k!2 c!3)) ?x510 (* (- 3) (* m!1 m!1 k!2 k!2)) (* 2 (* ?x760 ?x760 ?x760 ?x558 ?x558 ?x562)) (* (- 3) (* ?x760 ?x760 ?x558 ?x558 ?x562 ?x562)) (* (- 2) (* ?x760 ?x760 ?x1602 ?x1602 ?x1602 ?x558 ?x562 ?x562)) (* 16 (* m!1 m!1 n!0 c!3)) (* 16 (* m!1 n!0 k!2 k!2)) ?x775 ?x756 ?x757 ?x1908 (* m!1 m!1 n!0 k!2 k!2) (* (- 216) (* k!2 c!3)) (* 2 (* n!0 k!2 k!2 c!3)) (* (- 1) (* ?x760 ?x760 ?x1602 ?x1602 ?x1602 ?x558 ?x558 ?x562 ?x562)) (* 72 (* n!0 k!2)) (* 2 (* m!1 n!0 n!0 k!2 c!3)) (* 36 (* m!1 k!2)) (* (- 1) (* ?x760 ?x1602 ?x1602 ?x1602 ?x558 ?x562 ?x562)) (* 3 (* ?x760 ?x1602 ?x1602 ?x1602 ?x558 ?x562 ?x562 ?x562)) (* m!1 m!1 m!1 n!0 c!3) (* (- 36) (* m!1 c!3 c!3)) (* 16 (* m!1 n!0 k!2 c!3)) (* 36 (* n!0 k!2 k!2)) (* 4 (* m!1 m!1 c!3)) (* 60 (* m!1 n!0 c!3)) (* 60 (* m!1 n!0 k!2)) (* 72 (* n!0 c!3)) (* 2 (* ?x760 ?x760 ?x760 ?x760 ?x1602 ?x558 ?x558 ?x562 ?x562 ?x562)) (* m!1 m!1 n!0 n!0 k!2) (* ?x760 ?x760 ?x760 ?x760 ?x1602 ?x558 ?x558 ?x558 ?x562 ?x562 ?x562) (* m!1 m!1 n!0 n!0 c!3) (* 2 (* m!1 n!0 n!0 k!2 k!2)) (* (- 70) (* m!1 k!2 c!3)) (* 16 (* m!1 m!1 n!0 k!2)) (* 36 (* n!0 k!2 c!3)) (* ?x760 ?x760 ?x760 ?x558 ?x558 ?x558 ?x562) (* m!1 m!1 m!1 n!0 k!2) (* (- 34) (* m!1 k!2 k!2)) (* 4 (* m!1 m!1 k!2)) (* (- 1) (* ?x760 ?x760 ?x760 ?x1602 ?x558 ?x558 ?x558 ?x562 ?x562 ?x562)) (* ?x760 ?x760 ?x760 ?x1602 ?x558 ?x558 ?x562 ?x562 ?x562) (* ?x760 ?x1602 ?x1602 ?x1602 ?x558 ?x558 ?x562 ?x562) (* n!0 n!0 k!2 k!2 c!3) (* (- 1) (* ?x760 ?x760 ?x558 ?x558 ?x558 ?x562)) (* (- 3) (* ?x760 ?x760 ?x760 ?x1602 ?x558 ?x558 ?x562 ?x562 ?x562 ?x562)))))
 (let (($x1681 (= ?x1498 0)))
 (let (($x557 (not $x1681)))
 (let ((?x563 (* (- 1) k!2)))
 (let ((?x539 (+ (* 3 n!0) ?x563 (* 3 (* n!0 n!0)))))
 (let (($x542 (= ?x539 (- 1))))
 (let ((?x983 (* n!0 k!2)))
 (let ((?x568 (+ (* 2 n!0) ?x563 (* (- 3) c!3) ?x983)))
 (let (($x485 (= ?x568 (- 1))))
 (let ((?x768 (+ m!1 (* (- 6) n!0))))
 (let (($x767 (= ?x768 6)))
 (let (($x1428 (and $x767 $x1400 $x485 $x542 $x557)))
 (let ((?x754 (+ c!3 k!2)))
 (let ((?x753 (+ k!2 m!1)))
 (let ((?x852 (+ ?x757 ?x756 ?x775 (* 72 (* k!2 n!0)) (* (- 3) (* ?x760 ?x760 ?x753 ?x753 ?x754 ?x754)) (* 72 (* c!3 n!0)) (* ?x760 ?x1602 ?x1602 ?x1602 ?x753 ?x753 ?x754 ?x754) (* c!3 k!2 k!2 n!0 n!0) (* k!2 k!2 k!2 n!0 n!0) (* 2 (* c!3 k!2 m!1 n!0 n!0)) (* 2 (* k!2 k!2 m!1 n!0 n!0)) (* c!3 m!1 m!1 n!0 n!0) (* k!2 m!1 m!1 n!0 n!0) (* ?x760 ?x760 ?x760 ?x760 ?x1602 ?x753 ?x753 ?x753 ?x754 ?x754 ?x754) (* c!3 k!2 k!2) ?x510 (* (- 70) (* c!3 k!2 m!1)) (* (- 34) (* k!2 k!2 m!1)) (* 2 (* ?x760 ?x760 ?x760 ?x760 ?x1602 ?x753 ?x753 ?x754 ?x754 ?x754)) (* 4 (* c!3 m!1 m!1)) (* 4 (* k!2 m!1 m!1)) (* 2 (* c!3 k!2 k!2 n!0)) (* 2 (* k!2 k!2 k!2 n!0)) (* 16 (* c!3 k!2 m!1 n!0)) (* 16 (* k!2 k!2 m!1 n!0)) (* 16 (* c!3 m!1 m!1 n!0)) (* 16 (* k!2 m!1 m!1 n!0)) (* (- 2) (* ?x760 ?x760 ?x1602 ?x1602 ?x1602 ?x753 ?x754 ?x754)) (* (- 6) (* c!3 k!2 m!1 m!1)) (* (- 3) (* k!2 k!2 m!1 m!1)) (* 2 (* ?x760 ?x760 ?x760 ?x753 ?x753 ?x754)) (* c!3 k!2 m!1 m!1 n!0) (* k!2 k!2 m!1 m!1 n!0) (* (- 1) (* ?x760 ?x1602 ?x1602 ?x1602 ?x753 ?x754 ?x754)) (* 3 (* ?x760 ?x1602 ?x1602 ?x1602 ?x753 ?x754 ?x754 ?x754)) (* (- 3) (* c!3 c!3 m!1 m!1)) (* (- 1) (* ?x760 ?x760 ?x753 ?x753 ?x753 ?x754)) (* (- 3) (* ?x760 ?x760 ?x760 ?x1602 ?x753 ?x753 ?x754 ?x754 ?x754 ?x754)) (* (- 216) (* c!3 k!2)) (* ?x760 ?x760 ?x760 ?x753 ?x753 ?x753 ?x754) (* 36 (* c!3 m!1)) (* 36 (* k!2 m!1)) (* (- 1) (* ?x760 ?x760 ?x1602 ?x1602 ?x1602 ?x753 ?x753 ?x754 ?x754)) (* 36 (* c!3 k!2 n!0)) (* 36 (* k!2 k!2 n!0)) (* 60 (* c!3 m!1 n!0)) (* 60 (* k!2 m!1 n!0)) (* c!3 m!1 m!1 m!1 n!0) (* k!2 m!1 m!1 m!1 n!0) (* ?x760 ?x760 ?x760 ?x1602 ?x753 ?x753 ?x754 ?x754 ?x754) (* (- 1) (* ?x760 ?x760 ?x760 ?x1602 ?x753 ?x753 ?x753 ?x754 ?x754 ?x754)) (* (- 36) (* c!3 c!3 m!1)) ?x1908)))
 (let (($x761 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x1862 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x694) (* 9 (* c!3 n!0)))))
 (let (($x1442 (and $x767 (= ?x1862 4) $x761 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x852 0)))))
 (let (($x868 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1921 (* (- 108) (* c c))))
 (let ((?x1943 (* (- 36) (* c c m))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x1242 (+ 6 m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x1879 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1965 (* (- 1) ?x1879)))
 (let ((?x1712 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1626 (* k m m m n)))
 (let ((?x1623 (* c m m m n)))
 (let ((?x1456 (* 36 (* k k n))))
 (let ((?x1452 (* 36 (* c k n))))
 (let ((?x1423 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1433 (* (- 1) ?x1423)))
 (let ((?x1412 (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1945 (* (- 216) (* c k))))
 (let ((?x1208 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x965 (* (- 3) ?x1208)))
 (let ((?x1018 (* ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x862 (* (- 1) ?x1018)))
 (let ((?x975 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x976 (* 3 ?x975)))
 (let ((?x884 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)))
 (let ((?x512 (* (- 1) ?x884)))
 (let ((?x883 (* k k m m n)))
 (let ((?x879 (* c k m m n)))
 (let ((?x865 (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x69)))
 (let ((?x430 (* 2 ?x865)))
 (let ((?x572 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)))
 (let ((?x490 (* (- 2) ?x572)))
 (let ((?x1646 (* 16 (* k m m n))))
 (let ((?x1645 (* 16 (* c m m n))))
 (let ((?x1644 (* 16 (* k k m n))))
 (let ((?x1643 (* 16 (* c k m n))))
 (let ((?x600 (* 2 (* k k k n))))
 (let ((?x599 (* 2 (* c k k n))))
 (let ((?x526 (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x527 (* 2 ?x526)))
 (let ((?x1960 (* (- 34) (* k k m))))
 (let ((?x1958 (* (- 70) (* c k m))))
 (let ((?x509 (* k k k)))
 (let ((?x506 (* c k k)))
 (let ((?x501 (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x500 (* k m m n n)))
 (let ((?x499 (* c m m n n)))
 (let ((?x606 (* 2 (* k k m n n))))
 (let ((?x605 (* 2 (* c k m n n))))
 (let ((?x494 (* k k k n n)))
 (let ((?x493 (* c k k n n)))
 (let ((?x475 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x130 (* ?x327 ?x327 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1100 (* (- 3) ?x130)))
 (let ((?x49 (* k k)))
 (let ((?x1926 (* (- 108) ?x49)))
 (let ((?x857 (+ (* 108 c) (* 108 k) ?x1926 (* 72 (* k n)) ?x1100 (* 72 (* c n)) ?x475 ?x493 ?x494 ?x605 ?x606 ?x499 ?x500 ?x501 ?x506 ?x509 ?x1958 ?x1960 ?x527 (* 4 (* c m m)) (* 4 (* k m m)) ?x599 ?x600 ?x1643 ?x1644 ?x1645 ?x1646 ?x490 (* (- 6) (* c k m m)) (* (- 3) (* k k m m)) ?x430 ?x879 ?x883 ?x512 ?x976 (* (- 3) (* c c m m)) ?x862 ?x965 ?x1945 ?x1412 (* 36 (* c m)) (* 36 (* k m)) ?x1433 ?x1452 ?x1456 (* 60 (* c m n)) (* 60 (* k m n)) ?x1623 ?x1626 ?x1712 ?x1965 ?x1943 ?x1921)))
 (let (($x317 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x279 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x230 (* (- 1) ?x49)))
 (let ((?x229 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x227 (= (+ ?x40 ?x44 ?x229 ?x230 (* 9 (* c n))) 4)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (and $x143 $x227 $x279 $x317 (not (= ?x857 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x598 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x1242 (+ 6 m)))
 (let ((?x1819 (* ?x1242 ?x1242 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x1806 (* ?x1242 ?x1242 ?x70 ?x69)))
 (let ((?x327 (+ 1 n)))
 (let ((?x1879 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x501 (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x884 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)))
 (let ((?x1423 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1018 (* ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1813 (+ ?x1018 (* (- 1) (* ?x327 ?x327 ?x70 ?x70 ?x69)) (* 3 (* ?x327 ?x327 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)) ?x1423 (* (- 3) (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69 ?x69)) (* (- 2) (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x69)) (* (- 1) (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 3 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)) ?x884 (* (- 2) (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 1) (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x1242 ?x1242 ?x69)) (* (- 1) (* ?x327 ?x1242 ?x1242 ?x70 ?x69)) (* (- 2) (* ?x327 ?x1242 ?x1242 ?x69)) (* 2 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)) (* (- 1) ?x501) ?x1879 ?x1806 (* 3 ?x1819))))
 (let (($x207 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1865 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x230 (* (- 1) ?x49)))
 (let ((?x229 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (and $x143 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x229 ?x230) 4) $x1865 $x207 (not (= ?x1813 0))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x875 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1921 (* (- 108) (* c c))))
 (let ((?x1943 (* (- 36) (* c c m))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x1242 (+ 6 m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x1879 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1965 (* (- 1) ?x1879)))
 (let ((?x1712 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1626 (* k m m m n)))
 (let ((?x1623 (* c m m m n)))
 (let ((?x1456 (* 36 (* k k n))))
 (let ((?x1452 (* 36 (* c k n))))
 (let ((?x1423 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1433 (* (- 1) ?x1423)))
 (let ((?x1412 (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1945 (* (- 216) (* c k))))
 (let ((?x1208 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x965 (* (- 3) ?x1208)))
 (let ((?x1018 (* ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x862 (* (- 1) ?x1018)))
 (let ((?x975 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x976 (* 3 ?x975)))
 (let ((?x884 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)))
 (let ((?x512 (* (- 1) ?x884)))
 (let ((?x883 (* k k m m n)))
 (let ((?x879 (* c k m m n)))
 (let ((?x865 (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x69)))
 (let ((?x430 (* 2 ?x865)))
 (let ((?x572 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)))
 (let ((?x490 (* (- 2) ?x572)))
 (let ((?x1646 (* 16 (* k m m n))))
 (let ((?x1645 (* 16 (* c m m n))))
 (let ((?x1644 (* 16 (* k k m n))))
 (let ((?x1643 (* 16 (* c k m n))))
 (let ((?x600 (* 2 (* k k k n))))
 (let ((?x599 (* 2 (* c k k n))))
 (let ((?x526 (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x527 (* 2 ?x526)))
 (let ((?x1960 (* (- 34) (* k k m))))
 (let ((?x1958 (* (- 70) (* c k m))))
 (let ((?x509 (* k k k)))
 (let ((?x506 (* c k k)))
 (let ((?x501 (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x500 (* k m m n n)))
 (let ((?x499 (* c m m n n)))
 (let ((?x606 (* 2 (* k k m n n))))
 (let ((?x605 (* 2 (* c k m n n))))
 (let ((?x494 (* k k k n n)))
 (let ((?x493 (* c k k n n)))
 (let ((?x475 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x130 (* ?x327 ?x327 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1100 (* (- 3) ?x130)))
 (let ((?x49 (* k k)))
 (let ((?x1926 (* (- 108) ?x49)))
 (let ((?x857 (+ (* 108 c) (* 108 k) ?x1926 (* 72 (* k n)) ?x1100 (* 72 (* c n)) ?x475 ?x493 ?x494 ?x605 ?x606 ?x499 ?x500 ?x501 ?x506 ?x509 ?x1958 ?x1960 ?x527 (* 4 (* c m m)) (* 4 (* k m m)) ?x599 ?x600 ?x1643 ?x1644 ?x1645 ?x1646 ?x490 (* (- 6) (* c k m m)) (* (- 3) (* k k m m)) ?x430 ?x879 ?x883 ?x512 ?x976 (* (- 3) (* c c m m)) ?x862 ?x965 ?x1945 ?x1412 (* 36 (* c m)) (* 36 (* k m)) ?x1433 ?x1452 ?x1456 (* 60 (* c m n)) (* 60 (* k m n)) ?x1623 ?x1626 ?x1712 ?x1965 ?x1943 ?x1921)))
 (let (($x317 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x279 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x230 (* (- 1) ?x49)))
 (let ((?x229 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x227 (= (+ ?x40 ?x44 ?x229 ?x230 (* 9 (* c n))) 4)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x1735 (and $x143 $x227 $x279 $x317 (not (= ?x857 0)))))
 (let ((?x1806 (* ?x1242 ?x1242 ?x70 ?x69)))
 (let ((?x1813 (+ ?x1018 (* (- 1) (* ?x327 ?x327 ?x70 ?x70 ?x69)) (* 3 ?x130) (* (- 1) ?x1412) ?x1423 (* (- 3) ?x975) (* (- 2) ?x865) (* (- 1) ?x1712) (* 3 ?x1208) ?x884 (* (- 2) ?x526) (* (- 1) ?x475) (* (- 1) (* ?x1242 ?x1242 ?x69)) (* (- 1) (* ?x327 ?x1242 ?x1242 ?x70 ?x69)) (* (- 2) (* ?x327 ?x1242 ?x1242 ?x69)) (* 2 ?x572) (* (- 1) ?x501) ?x1879 ?x1806 (* 3 (* ?x1242 ?x1242 ?x69 ?x69)))))
 (let (($x207 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1865 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x134 (and $x143 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x229 ?x230) 4) $x1865 $x207 (not (= ?x1813 0)))))
 (rewrite (= $x134 $x1735)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x705 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x1242 (+ 6 m)))
 (let ((?x1819 (* ?x1242 ?x1242 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x1879 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1965 (* (- 1) ?x1879)))
 (let ((?x501 (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x572 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)))
 (let ((?x490 (* (- 2) ?x572)))
 (let ((?x551 (* ?x327 ?x1242 ?x1242 ?x70 ?x69)))
 (let ((?x540 (* ?x1242 ?x1242 ?x69)))
 (let ((?x475 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x526 (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x527 (* 2 ?x526)))
 (let ((?x884 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)))
 (let ((?x512 (* (- 1) ?x884)))
 (let ((?x1208 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x965 (* (- 3) ?x1208)))
 (let ((?x1712 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x865 (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x69)))
 (let ((?x430 (* 2 ?x865)))
 (let ((?x975 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x976 (* 3 ?x975)))
 (let ((?x1423 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1433 (* (- 1) ?x1423)))
 (let ((?x1412 (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x130 (* ?x327 ?x327 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1100 (* (- 3) ?x130)))
 (let ((?x129 (* ?x327 ?x327 ?x70 ?x70 ?x69)))
 (let ((?x1018 (* ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x862 (* (- 1) ?x1018)))
 (let ((?x1040 (+ ?x862 ?x129 ?x1100 ?x1412 ?x1433 ?x976 ?x430 ?x1712 ?x965 ?x512 ?x527 ?x475 ?x540 ?x551 (* 2 (* ?x327 ?x1242 ?x1242 ?x69)) ?x490 ?x501 ?x1965 (* (- 1) (* ?x1242 ?x1242 ?x70 ?x69)) (* (- 3) ?x1819))))
 (let (($x207 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1690 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1942 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (and $x143 (= ?x1942 (- 4)) $x1690 $x207 (not (= ?x1040 0)))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1399 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x1242 (+ 6 m)))
 (let ((?x1819 (* ?x1242 ?x1242 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x1806 (* ?x1242 ?x1242 ?x70 ?x69)))
 (let ((?x327 (+ 1 n)))
 (let ((?x1879 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x501 (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x884 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)))
 (let ((?x1423 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1018 (* ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1813 (+ ?x1018 (* (- 1) (* ?x327 ?x327 ?x70 ?x70 ?x69)) (* 3 (* ?x327 ?x327 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)) ?x1423 (* (- 3) (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69 ?x69)) (* (- 2) (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x69)) (* (- 1) (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 3 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)) ?x884 (* (- 2) (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 1) (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x1242 ?x1242 ?x69)) (* (- 1) (* ?x327 ?x1242 ?x1242 ?x70 ?x69)) (* (- 2) (* ?x327 ?x1242 ?x1242 ?x69)) (* 2 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)) (* (- 1) ?x501) ?x1879 ?x1806 (* 3 ?x1819))))
 (let (($x207 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1865 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x230 (* (- 1) ?x49)))
 (let ((?x229 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x134 (and $x143 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x229 ?x230) 4) $x1865 $x207 (not (= ?x1813 0)))))
 (let ((?x1965 (* (- 1) ?x1879)))
 (let ((?x572 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)))
 (let ((?x490 (* (- 2) ?x572)))
 (let ((?x551 (* ?x327 ?x1242 ?x1242 ?x70 ?x69)))
 (let ((?x540 (* ?x1242 ?x1242 ?x69)))
 (let ((?x475 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x526 (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x527 (* 2 ?x526)))
 (let ((?x512 (* (- 1) ?x884)))
 (let ((?x1208 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x965 (* (- 3) ?x1208)))
 (let ((?x1712 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x865 (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x69)))
 (let ((?x430 (* 2 ?x865)))
 (let ((?x975 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x976 (* 3 ?x975)))
 (let ((?x1433 (* (- 1) ?x1423)))
 (let ((?x1412 (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x130 (* ?x327 ?x327 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1100 (* (- 3) ?x130)))
 (let ((?x129 (* ?x327 ?x327 ?x70 ?x70 ?x69)))
 (let ((?x862 (* (- 1) ?x1018)))
 (let ((?x1040 (+ ?x862 ?x129 ?x1100 ?x1412 ?x1433 ?x976 ?x430 ?x1712 ?x965 ?x512 ?x527 ?x475 ?x540 ?x551 (* 2 (* ?x327 ?x1242 ?x1242 ?x69)) ?x490 ?x501 ?x1965 (* (- 1) ?x1806) (* (- 3) ?x1819))))
 (let (($x1690 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1942 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x213 (and $x143 (= ?x1942 (- 4)) $x1690 $x207 (not (= ?x1040 0)))))
 (rewrite (= $x213 $x134)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x110 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x79 (+ m 6)))
 (let ((?x69 (+ c k)))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ k m)))
 (let ((?x74 (+ (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x78 (+ (- ?x74 (* 3 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71)) (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x85 (+ (- ?x78 (* ?x69 ?x69 ?x70 ?x70 ?x79 ?x79 ?x79 ?x71 ?x71)) (* 3 ?x69 ?x69 ?x69 ?x70 ?x79 ?x79 ?x79 ?x71) (* 2 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x79 ?x71 ?x71 ?x71))))
 (let ((?x88 (- ?x85 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x79 ?x71 ?x71 ?x71))))
 (let ((?x95 (+ (- ?x88 (* ?x69 ?x69 ?x70 ?x79 ?x79 ?x79 ?x71)) (* 2 ?x69 ?x69 ?x69 ?x70 ?x70 ?x79 ?x71 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x70 ?x70 ?x79 ?x79 ?x79 ?x71) (* ?x69 ?x79 ?x79) (* ?x69 ?x70 ?x79 ?x79 ?x71) (* 2 ?x69 ?x79 ?x79 ?x71))))
 (let ((?x99 (+ (- ?x95 (* 2 ?x69 ?x69 ?x70 ?x79 ?x79 ?x79 ?x71 ?x71)) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x79 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x104 (- (- ?x99 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x79 ?x71 ?x71 ?x71)) (* ?x69 ?x70 ?x79 ?x79))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x104 (* 3 ?x69 ?x69 ?x79 ?x79)) 0)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x122 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x1242 (+ 6 m)))
 (let ((?x1819 (* ?x1242 ?x1242 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x1879 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1965 (* (- 1) ?x1879)))
 (let ((?x501 (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x572 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)))
 (let ((?x490 (* (- 2) ?x572)))
 (let ((?x551 (* ?x327 ?x1242 ?x1242 ?x70 ?x69)))
 (let ((?x540 (* ?x1242 ?x1242 ?x69)))
 (let ((?x475 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x526 (* ?x327 ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x527 (* 2 ?x526)))
 (let ((?x884 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69)))
 (let ((?x512 (* (- 1) ?x884)))
 (let ((?x1208 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x965 (* (- 3) ?x1208)))
 (let ((?x1712 (* ?x327 ?x327 ?x327 ?x1242 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x865 (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x69)))
 (let ((?x430 (* 2 ?x865)))
 (let ((?x975 (* ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x976 (* 3 ?x975)))
 (let ((?x1423 (* ?x327 ?x327 ?x1242 ?x1242 ?x1242 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1433 (* (- 1) ?x1423)))
 (let ((?x1412 (* ?x327 ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x130 (* ?x327 ?x327 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1100 (* (- 3) ?x130)))
 (let ((?x129 (* ?x327 ?x327 ?x70 ?x70 ?x69)))
 (let ((?x1018 (* ?x327 ?x327 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x862 (* (- 1) ?x1018)))
 (let ((?x1040 (+ ?x862 ?x129 ?x1100 ?x1412 ?x1433 ?x976 ?x430 ?x1712 ?x965 ?x512 ?x527 ?x475 ?x540 ?x551 (* 2 (* ?x327 ?x1242 ?x1242 ?x69)) ?x490 ?x501 ?x1965 (* (- 1) (* ?x1242 ?x1242 ?x70 ?x69)) (* (- 3) ?x1819))))
 (let (($x207 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1690 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1942 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x213 (and $x143 (= ?x1942 (- 4)) $x1690 $x207 (not (= ?x1040 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x79 (+ m 6)))
 (let ((?x74 (+ (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x78 (+ (- ?x74 (* 3 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71)) (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x85 (+ (- ?x78 (* ?x69 ?x69 ?x70 ?x70 ?x79 ?x79 ?x79 ?x71 ?x71)) (* 3 ?x69 ?x69 ?x69 ?x70 ?x79 ?x79 ?x79 ?x71) (* 2 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x79 ?x71 ?x71 ?x71))))
 (let ((?x88 (- ?x85 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x79 ?x71 ?x71 ?x71))))
 (let ((?x95 (+ (- ?x88 (* ?x69 ?x69 ?x70 ?x79 ?x79 ?x79 ?x71)) (* 2 ?x69 ?x69 ?x69 ?x70 ?x70 ?x79 ?x71 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x70 ?x70 ?x79 ?x79 ?x79 ?x71) (* ?x69 ?x79 ?x79) (* ?x69 ?x70 ?x79 ?x79 ?x71) (* 2 ?x69 ?x79 ?x79 ?x71))))
 (let ((?x99 (+ (- ?x95 (* 2 ?x69 ?x69 ?x70 ?x79 ?x79 ?x79 ?x71 ?x71)) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x79 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x104 (- (- ?x99 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x79 ?x71 ?x71 ?x71)) (* ?x69 ?x70 ?x79 ?x79))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x109 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x104 (* 3 ?x69 ?x69 ?x79 ?x79)) 0))))))
 (rewrite (= $x109 $x213))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x111 (asserted $x110)))
 (let ((@x1590 (mp (mp @x111 (quant-intro (proof-bind ?x122) (= $x110 $x705)) $x705) (rewrite (= $x705 $x705)) $x705)))
 (let ((@x1873 (mp (mp @x1590 (quant-intro (proof-bind ?x1399) (= $x705 $x598)) $x598) (quant-intro (proof-bind ?x875) (= $x598 $x868)) $x868)))
 (let ((@x560 (mp (mp~ @x1873 (sk (~ $x868 $x1442)) $x1442) (rewrite (= $x1442 $x1428)) $x1428)))
 (let ((@x1820 (and-elim @x560 $x1400)))
 (let ((@x1816 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1400) $x566)) @x1820 $x566)))
 (let (($x1868 (>= ?x1395 (- 4))))
 (let ((@x1090 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1400) $x1868)) @x1820 $x1868)))
 (let (($x1280 (<= ?x568 (- 1))))
 (let ((@x1784 (and-elim @x560 $x485)))
 (let ((@x1896 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x485) $x1280)) @x1784 $x1280)))
 (let (($x553 (>= ?x568 (- 1))))
 (let ((@x180 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x485) $x553)) @x1784 $x553)))
 (let (($x602 (<= ?x539 (- 1))))
 (let ((@x1807 (and-elim @x560 $x542)))
 (let ((@x1781 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x542) $x602)) @x1807 $x602)))
 (let (($x782 (>= ?x539 (- 1))))
 (let ((@x921 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x542) $x782)) @x1807 $x782)))
 (let (($x1121 (<= ?x768 6)))
 (let ((@x1916 (and-elim @x560 $x767)))
 (let ((@x791 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x767) $x1121)) @x1916 $x1121)))
 (let (($x1812 (>= ?x768 6)))
 (let ((@x528 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x767) $x1812)) @x1916 $x1812)))
 (let (($x1188 (not (<= ?x1498 0))))
 (let (($x565 (>= ?x1498 0)))
 (let ((@x679 ((_ th-lemma arith) (hypothesis (not $x565)) @x528 @x791 @x921 @x1781 @x180 @x1896 @x921 @x1781 @x180 @x1896 @x921 @x1781 @x180 @x1896 @x1090 @x1816 @x921 @x1781 @x528 @x791 @x528 @x791 @x921 @x1781 @x921 @x1781 @x180 @x1896 @x1090 @x1816 false)))
 (let ((@x583 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1681 $x1188 (not $x565))) (and-elim @x560 $x557) (or $x1188 (not $x565)))))
 ((_ th-lemma arith) (unit-resolution @x583 (lemma @x679 $x565) $x1188) @x528 @x791 @x921 @x1781 @x180 @x1896 @x921 @x1781 @x180 @x1896 @x921 @x1781 @x180 @x1896 @x1090 @x1816 @x921 @x1781 @x528 @x791 @x528 @x791 @x921 @x1781 @x921 @x1781 @x180 @x1896 @x1090 @x1816 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        20
 :arith-assert-upper        65
 :arith-branch-var          2
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           16
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             653
 :arith-nonlinear-bounds    13
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             6
 :arith-patches_succ        3
 :arith-pivots              10
 :arith-row-summations      26
 :arith-tableau-max-columns 89
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 55
 :del-clause                16
 :final-checks              9
 :max-memory                3.96
 :memory                    3.34
 :mk-bool-var               75
 :mk-clause                 16
 :num-allocs                2034760
 :num-checks                1
 :propagations              12
 :rlimit-count              22822
 :time                      0.02
 :total-time                0.03)
