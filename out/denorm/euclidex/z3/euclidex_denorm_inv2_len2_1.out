unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun b!2 () Int)
(declare-fun s!0 () Int)
(declare-fun a!4 () Int)
(declare-fun p!5 () Int)
(declare-fun q!3 () Int)
(proof
(let ((?x538 (* b!2 r!1)))
 (let ((?x127 (* s00 a00)))
 (let ((?x235 (+ ?x127 (* (- 1) (* r00 b00)) (* (- 1) (* a!4 s!0)) ?x538)))
 (let (($x644 (>= ?x235 0)))
 (let (($x239 (= ?x235 0)))
 (let ((?x503 (* (- 1) ?x538)))
 (let ((?x523 (* a!4 s!0)))
 (let ((?x145 (* r00 b00)))
 (let ((?x134 (* (- 1) ?x127)))
 (let ((?x194 (+ ?x134 ?x145 ?x523 ?x503)))
 (let ((?x641 (* a!4 b!2 b!2 p!5 p!5)))
 (let ((?x569 (* p!5 s!0 s!0 s!0)))
 (let ((?x394 (+ (* a!4 a!4 a!4 p!5 p!5) (* (- 2) (* a!4 a!4 b!2 p!5 p!5)) (* 3 (* r!1 r!1 p!5 s!0)) (* (- 1) (* r!1 r!1 r!1 p!5)) ?x569 ?x641 (* (- 3) (* r!1 p!5 s!0 s!0)))))
 (let ((?x624 (* ?x394 ?x194)))
 (let (($x549 (= ?x624 0)))
 (let ((?x570 (* (- 1) (* q!3 s!0 s!0 s!0))))
 (let ((?x628 (+ (* a!4 b!2 b!2 q!3 q!3) (* (- 1) (* b!2 b!2 b!2 p!5 p!5)) (* 2 (* b!2 b!2 b!2 q!3 p!5)) (* (- 2) (* a!4 b!2 b!2 q!3 p!5)) (* (- 1) (* b!2 b!2 b!2 q!3 q!3)) ?x570 ?x569 ?x641)))
 (let ((?x429 (* ?x628 ?x194)))
 (let (($x142 (= ?x429 0)))
 (let (($x439 (not $x142)))
 (let (($x505 (or $x439 (not $x549))))
 (let ((?x154 (+ (* p00 s00 b!2) (* (- 1) (* p00 b00 s!0)) (* r00 b00 q!3) (* (- 1) (* s00 a00 q!3)) (* q00 a00 s!0) (* (- 1) (* q00 r00 b!2)))))
 (let ((?x594 (+ (* q00 r00 a!4) (* (- 1) (* r00 b00 p!5)) (* (- 1) (* p00 s00 a!4)) (* p00 b00 r!1) (* s00 a00 p!5) (* (- 1) (* q00 a00 r!1)))))
 (let ((?x133 (* q00 a00)))
 (let ((?x164 (+ (* b!2 p!5) ?x133 (* (- 1) (* p00 b00)) (* (- 1) (* a!4 q!3)))))
 (let ((?x41 (* q00 r00)))
 (let ((?x406 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x376 (and (= (+ ?x37 ?x406 (* r!1 q!3) (* (- 1) (* p!5 s!0))) 0) $x239 (= ?x164 0) (= ?x594 0) (= ?x154 0) $x505)))
 (let ((?x504 (+ ?x523 ?x503 ?x134 ?x145)))
 (let ((?x560 (* p!5 p!5 a!4 b!2 b!2)))
 (let ((?x587 (+ ?x560 ?x569 (* p!5 p!5 a!4 a!4 a!4) (* (- 2) (* p!5 p!5 a!4 a!4 b!2)) (* (- 1) (* p!5 r!1 r!1 r!1)) (* 3 (* p!5 r!1 r!1 s!0)) (* (- 3) (* p!5 r!1 s!0 s!0)))))
 (let ((?x571 (+ ?x560 (* (- 1) (* p!5 p!5 b!2 b!2 b!2)) (* (- 2) (* p!5 a!4 q!3 b!2 b!2)) (* 2 (* p!5 q!3 b!2 b!2 b!2)) (* a!4 q!3 q!3 b!2 b!2) (* (- 1) (* q!3 q!3 b!2 b!2 b!2)) ?x569 ?x570)))
 (let ((?x556 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x200 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let ((?x138 (* p00 b00)))
 (let ((?x179 (* (- 1) ?x133)))
 (let ((?x284 (* a!4 q!3)))
 (let (($x516 (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) (* q!3 r!1))) 0)))
 (let (($x438 (and $x516 (= ?x504 0) (= (+ ?x284 ?x179 ?x138 (* (- 1) (* p!5 b!2))) 0) (= ?x200 0) (= ?x556 0) (or (not (= (* ?x571 ?x504) 0)) (not (= (* ?x587 ?x504) 0))))))
 (let (($x539 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x145 (* r00 b00)))
 (let ((?x127 (* s00 a00)))
 (let ((?x134 (* (- 1) ?x127)))
 (let ((?x122 (* (- 1) (* b r))))
 (let ((?x49 (* a s)))
 (let ((?x152 (+ ?x49 ?x122 ?x134 ?x145)))
 (let ((?x427 (* p s s s)))
 (let ((?x352 (* p p a b b)))
 (let ((?x593 (+ ?x352 ?x427 (* p p a a a) (* (- 2) (* p p a a b)) (* (- 1) (* p r r r)) (* 3 (* p r r s)) (* (- 3) (* p r s s)))))
 (let ((?x444 (+ ?x352 (* (- 1) (* p p b b b)) (* (- 2) (* p a q b b)) (* 2 (* p q b b b)) (* a q q b b) (* (- 1) (* q q b b b)) ?x427 (* (- 1) (* q s s s)))))
 (let ((?x72 (* b q00 r00)))
 (let ((?x311 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x316 (= ?x311 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x247 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x248 (= ?x247 0)))
 (let ((?x138 (* p00 b00)))
 (let ((?x133 (* q00 a00)))
 (let ((?x179 (* (- 1) ?x133)))
 (let (($x182 (= (+ (* a q) ?x179 ?x138 (* (- 1) (* p b))) 0)))
 (let (($x160 (= ?x152 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x136 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x155 (= (+ ?x33 ?x136 ?x41 (* (- 1) (* q r))) 0)))
 (and $x155 $x160 $x182 $x248 $x316 (or (not (= (* ?x444 ?x152) 0)) (not (= (* ?x593 ?x152) 0)))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x323 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x369 (* (- 1) ?x47)))
 (let ((?x502 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x369 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x320 (+ s (* (- 1) r))))
 (let ((?x297 (+ (* (+ b (* (- 1) a)) (+ b (* (- 1) a)) a p p) (* ?x320 ?x320 ?x320 p))))
 (let ((?x135 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x369 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x468 (+ p (* (- 1) q))))
 (let ((?x140 (+ a (* (- 1) b))))
 (let (($x491 (= (* (+ (* ?x140 ?x468 ?x468 b b) (* ?x468 s s s)) ?x135) 0)))
 (let (($x478 (or (not $x491) (not (= (* ?x297 ?x502) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x466 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x475 (= ?x466 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x385 (* p00 s00 a)))
 (let ((?x341 (* b00 r00 p)))
 (let ((?x377 (+ ?x341 ?x385 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x312 (* q a)))
 (let (($x370 (= (+ ?x312 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x409 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x406 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x561 (* r q)))
 (and (= (+ ?x561 (* (- 1) (* s p)) ?x37 ?x406) 0) $x409 $x370 (= ?x377 0) $x475 $x478))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x541 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x145 (* r00 b00)))
 (let ((?x127 (* s00 a00)))
 (let ((?x134 (* (- 1) ?x127)))
 (let ((?x122 (* (- 1) (* b r))))
 (let ((?x49 (* a s)))
 (let ((?x152 (+ ?x49 ?x122 ?x134 ?x145)))
 (let ((?x427 (* p s s s)))
 (let ((?x352 (* p p a b b)))
 (let ((?x593 (+ ?x352 ?x427 (* p p a a a) (* (- 2) (* p p a a b)) (* (- 1) (* p r r r)) (* 3 (* p r r s)) (* (- 3) (* p r s s)))))
 (let ((?x444 (+ ?x352 (* (- 1) (* p p b b b)) (* (- 2) (* p a q b b)) (* 2 (* p q b b b)) (* a q q b b) (* (- 1) (* q q b b b)) ?x427 (* (- 1) (* q s s s)))))
 (let ((?x72 (* b q00 r00)))
 (let ((?x311 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x316 (= ?x311 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x247 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x248 (= ?x247 0)))
 (let ((?x138 (* p00 b00)))
 (let ((?x133 (* q00 a00)))
 (let ((?x179 (* (- 1) ?x133)))
 (let (($x182 (= (+ (* a q) ?x179 ?x138 (* (- 1) (* p b))) 0)))
 (let (($x160 (= ?x152 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x136 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x155 (= (+ ?x33 ?x136 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x629 (and $x155 $x160 $x182 $x248 $x316 (or (not (= (* ?x444 ?x152) 0)) (not (= (* ?x593 ?x152) 0))))))
 (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x369 (* (- 1) ?x47)))
 (let ((?x502 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x369 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x320 (+ s (* (- 1) r))))
 (let ((?x297 (+ (* (+ b (* (- 1) a)) (+ b (* (- 1) a)) a p p) (* ?x320 ?x320 ?x320 p))))
 (let ((?x135 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x369 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x468 (+ p (* (- 1) q))))
 (let ((?x140 (+ a (* (- 1) b))))
 (let (($x491 (= (* (+ (* ?x140 ?x468 ?x468 b b) (* ?x468 s s s)) ?x135) 0)))
 (let (($x478 (or (not $x491) (not (= (* ?x297 ?x502) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x466 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x475 (= ?x466 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x385 (* p00 s00 a)))
 (let ((?x341 (* b00 r00 p)))
 (let ((?x377 (+ ?x341 ?x385 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x312 (* q a)))
 (let (($x370 (= (+ ?x312 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x409 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let (($x399 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x467 (and $x399 $x409 $x370 (= ?x377 0) $x475 $x478)))
 (rewrite (= $x467 $x629))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x344 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x369 (* (- 1) ?x47)))
 (let ((?x502 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x369 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x320 (+ s (* (- 1) r))))
 (let ((?x297 (+ (* (+ b (* (- 1) a)) (+ b (* (- 1) a)) a p p) (* ?x320 ?x320 ?x320 p))))
 (let ((?x135 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x369 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x468 (+ p (* (- 1) q))))
 (let ((?x140 (+ a (* (- 1) b))))
 (let (($x491 (= (* (+ (* ?x140 ?x468 ?x468 b b) (* ?x468 s s s)) ?x135) 0)))
 (let (($x478 (or (not $x491) (not (= (* ?x297 ?x502) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x466 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x475 (= ?x466 0)))
 (let ((?x402 (* a00 s00 p)))
 (let ((?x346 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x231 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x346 ?x402 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x393 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x136 (* (- 1) ?x37)))
 (let ((?x353 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x353 ?x136 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x369 (* s a) ?x51) 0) $x393 (= ?x231 0) $x475 $x478)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x361 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x369 (* (- 1) ?x47)))
 (let ((?x502 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x369 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x320 (+ s (* (- 1) r))))
 (let ((?x297 (+ (* (+ b (* (- 1) a)) (+ b (* (- 1) a)) a p p) (* ?x320 ?x320 ?x320 p))))
 (let ((?x135 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x369 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x468 (+ p (* (- 1) q))))
 (let ((?x140 (+ a (* (- 1) b))))
 (let (($x491 (= (* (+ (* ?x140 ?x468 ?x468 b b) (* ?x468 s s s)) ?x135) 0)))
 (let (($x478 (or (not $x491) (not (= (* ?x297 ?x502) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x466 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x475 (= ?x466 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x385 (* p00 s00 a)))
 (let ((?x341 (* b00 r00 p)))
 (let ((?x377 (+ ?x341 ?x385 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x312 (* q a)))
 (let (($x370 (= (+ ?x312 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x409 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x406 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x561 (* r q)))
 (let (($x467 (and (= (+ ?x561 (* (- 1) (* s p)) ?x37 ?x406) 0) $x409 $x370 (= ?x377 0) $x475 $x478)))
 (let ((?x402 (* a00 s00 p)))
 (let ((?x346 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x129 (= (+ (* (- 1) ?x341) (* (- 1) ?x385) ?x65 ?x346 ?x402 (* (- 1) ?x69)) 0)))
 (let (($x393 (= (+ (* (- 1) ?x312) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x436 (and (= (+ (* (- 1) ?x561) (* s p) (* (- 1) ?x37) ?x41) 0) (= (+ (* (- 1) (* r b)) ?x369 (* s a) ?x51) 0) $x393 $x129 $x475 $x478)))
 (rewrite (= $x436 $x467))))))))))))))))))))))))))))))))))))
 ))
 (let (($x111 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x105 (+ (* a (- b a) (- b a) p p) (* p (- s r) (- s r) (- s r)))))
 (let ((?x51 (* b00 r00)))
 (let ((?x102 (+ (- (* (- 1) (- b a) r) (* a00 s00)) (* a (- s r)) ?x51)))
 (let ((?x93 (+ (* (- a b) b b (- p q) (- p q)) (* (- p q) s s s))))
 (let ((?x89 (+ (- (* (- 1) b (- r s)) (* a00 s00)) (* (- a b) s) ?x51)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= (* ?x89 ?x93) 0)) (not (= (* ?x102 ?x105) 0))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x390 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x369 (* (- 1) ?x47)))
 (let ((?x502 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x369 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x320 (+ s (* (- 1) r))))
 (let ((?x297 (+ (* (+ b (* (- 1) a)) (+ b (* (- 1) a)) a p p) (* ?x320 ?x320 ?x320 p))))
 (let ((?x135 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x369 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x468 (+ p (* (- 1) q))))
 (let ((?x140 (+ a (* (- 1) b))))
 (let (($x491 (= (* (+ (* ?x140 ?x468 ?x468 b b) (* ?x468 s s s)) ?x135) 0)))
 (let (($x478 (or (not $x491) (not (= (* ?x297 ?x502) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x466 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x475 (= ?x466 0)))
 (let ((?x402 (* a00 s00 p)))
 (let ((?x346 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x231 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x346 ?x402 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x393 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x136 (* (- 1) ?x37)))
 (let ((?x353 (* s p)))
 (let (($x436 (and (= (+ (* (- 1) (* r q)) ?x353 ?x136 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x369 (* s a) ?x51) 0) $x393 (= ?x231 0) $x475 $x478)))
 (let ((?x105 (+ (* a (- b a) (- b a) p p) (* p (- s r) (- s r) (- s r)))))
 (let ((?x102 (+ (- (* (- 1) (- b a) r) ?x47) (* a (- s r)) ?x51)))
 (let ((?x93 (+ (* (- a b) b b (- p q) (- p q)) (* (- p q) s s s))))
 (let ((?x89 (+ (- (* (- 1) b (- r s)) ?x47) (* (- a b) s) ?x51)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x110 (and $x44 (= (+ (- (* (- 1) b r) ?x47) (* a s) ?x51) 0) $x61 (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= (* ?x89 ?x93) 0)) (not (= (* ?x102 ?x105) 0))))))
 (rewrite (= $x110 $x436))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x112 (asserted $x111)))
 (let ((@x445 (mp (mp @x112 (quant-intro (proof-bind ?x390) (= $x111 $x344)) $x344) (rewrite (= $x344 $x344)) $x344)))
 (let ((@x507 (mp (mp @x445 (quant-intro (proof-bind ?x361) (= $x344 $x323)) $x323) (quant-intro (proof-bind ?x541) (= $x323 $x539)) $x539)))
 (let ((@x290 (mp (mp~ @x507 (sk (~ $x539 $x438)) $x438) (rewrite (= $x438 $x376)) $x376)))
 (let ((@x572 (and-elim @x290 $x239)))
 (let ((@x139 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x239) $x644)) @x572 $x644)))
 (let (($x642 (<= ?x235 0)))
 (let ((@x533 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x239) $x642)) @x572 $x642)))
 (let (($x212 (not (<= ?x429 0))))
 (let (($x309 (>= ?x624 0)))
 (let (($x274 (<= ?x624 0)))
 (let ((@x474 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x549 (not $x274) (not $x309))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x274)) @x533 @x139 false) $x274) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x309)) @x533 @x139 false) $x309) $x549)))
 (let (($x272 (>= ?x429 0)))
 (let ((@x249 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x142 $x212 (not $x272))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x272)) @x533 @x139 false) $x272) (unit-resolution (and-elim @x290 $x505) @x474 $x439) $x212)))
 ((_ th-lemma arith farkas 1 1 1) @x249 @x533 @x139 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             424
 :arith-nonlinear-horner    30
 :arith-num-rows            8
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 64
 :arith-tableau-max-rows    8
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                29.89
 :memory                    3.09
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                12311972606.00
 :num-checks                1
 :propagations              19
 :rlimit-count              7028027
 :time                      2.28
 :total-time                2.29)
