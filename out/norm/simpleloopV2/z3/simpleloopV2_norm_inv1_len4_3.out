unsat
((set-logic NIA)
(declare-fun y!0 () Int)
(declare-fun x!1 () Int)
(proof
(let ((?x2658 (* (- 1) y!0)))
 (let ((?x1690 (* (- 1) x!1)))
 (let ((?x2664 (+ y00 x00 ?x1690 ?x2658)))
 (let (($x2329 (<= ?x2664 0)))
 (let (($x2701 (= ?x2664 0)))
 (let ((?x2945 (* x!1 x!1 y!0 y!0 y!0)))
 (let ((?x2820 (* (- 1) ?x2945)))
 (let ((?x2813 (* x!1 y!0 y!0 y!0)))
 (let ((?x746 (* 2 ?x2813)))
 (let ((?x2731 (* y!0 y!0 y!0 y!0)))
 (let ((?x2602 (* (- 1) ?x2731)))
 (let ((?x2708 (* x!1 x!1 x!1 x!1)))
 (let ((?x1990 (* (- 1) ?x2708)))
 (let ((?x2654 (* 6 (* x00 x!1 y!0 y!0))))
 (let ((?x3019 (* (- 3) (* x00 x!1 x!1 y!0 y!0 y!0))))
 (let ((?x2585 (* 3 (* x00 x!1 x!1 x!1 y!0 y!0))))
 (let ((?x1981 (* x!1 y!0 y!0)))
 (let ((?x1017 (* 2 ?x1981)))
 (let ((?x1396 (* y!0 y!0 y!0)))
 (let ((?x1400 (* 3 ?x1396)))
 (let ((?x644 (* 6 (* y00 x!1 y!0 y!0))))
 (let ((?x642 (* 3 (* y00 x!1 x!1 x!1 y!0 y!0))))
 (let ((?x1791 (+ 1 x!1)))
 (let ((?x2689 (+ (- 1) y!0)))
 (let ((?x962 (* ?x2689 ?x2689 ?x2689 ?x1791 ?x1791 ?x1791 ?x1791)))
 (let ((?x639 (* (- 3) (* y00 x!1 x!1 y!0 y!0 y!0))))
 (let ((?x555 (* x!1 y!0 y!0 y!0 y!0)))
 (let ((?x2621 (* (- 1) ?x555)))
 (let ((?x548 (* x!1 x!1 x!1)))
 (let ((?x2376 (* (- 4) ?x548)))
 (let ((?x272 (* ?x2689 ?x2689 ?x2689 ?x2689 ?x1791 ?x1791 ?x1791)))
 (let ((?x636 (* 2 x00)))
 (let ((?x633 (* 2 y00)))
 (let ((?x2667 (+ ?x633 ?x636 (* (- 1) (* y00 y!0)) ?x272 ?x2376 ?x2621 ?x639 ?x1690 (* (- 10) (* y00 x!1 x!1 y!0)) (* 7 (* y00 x!1)) ?x962 ?x642 (* (- 2) (* y00 x!1 y!0 y!0 y!0)) ?x644 ?x1400 (* (- 4) (* x!1 x!1)) (* 9 (* y00 x!1 x!1 y!0 y!0)) (* 7 (* y00 x!1 x!1)) (* (- 1) (* y00 x!1 x!1 x!1 y!0 y!0 y!0)) (* (- 8) (* y00 x!1 y!0)) (* 4 (* x!1 x!1 y!0 y!0)) ?x1017 (* (- 3) (* y00 x!1 x!1 x!1 y!0)) (* (- 6) (* x!1 y!0)) (* 7 (* x00 x!1)) (* 2 (* x00 x!1 x!1 x!1)) (* (- 1) (* x00 y!0)) (* (- 8) (* x00 x!1 y!0)) (* (- 10) (* x00 x!1 x!1 y!0)) (* (- 3) (* x00 x!1 x!1 x!1 y!0)) ?x2585 (* (- 2) (* x00 x!1 y!0 y!0 y!0)) (* 2 (* y00 x!1 x!1 x!1)) ?x3019 ?x2654 (* 9 (* x00 x!1 x!1 y!0 y!0)) ?x2658 ?x1990 ?x2602 (* (- 2) (* y!0 y!0)) ?x746 (* (- 5) (* x!1 x!1 y!0)) ?x2820 (* 7 (* x00 x!1 x!1)) (* (- 1) (* x00 x!1 x!1 x!1 y!0 y!0 y!0)))))
 (let (($x2666 (= ?x2667 0)))
 (let (($x2702 (not $x2666)))
 (let ((?x3314 (* x00 x!1 x!1 x!1 y!0 y!0 y!0)))
 (let ((?x3028 (* x00 x!1 x!1)))
 (let ((?x2814 (* x!1 x!1 y!0)))
 (let ((?x2372 (* x00 y!0)))
 (let ((?x1856 (+ 1 y!0)))
 (let ((?x542 (+ (- 1) x!1)))
 (let ((?x1982 (* ?x542 ?x542 ?x542 ?x1856 ?x1856 ?x1856 ?x1856)))
 (let ((?x1787 (* y00 x!1 x!1 x!1 y!0 y!0 y!0)))
 (let ((?x1780 (* y00 x!1 x!1)))
 (let ((?x2640 (* (- 3) ?x1396)))
 (let ((?x148 (* y00 y!0)))
 (let ((?x2611 (+ ?x633 ?x636 ?x148 (* (- 1) (* ?x542 ?x542 ?x542 ?x542 ?x1856 ?x1856 ?x1856)) ?x2376 ?x555 ?x639 (* (- 3) x!1) (* (- 8) (* y00 x!1 x!1 y!0)) (* (- 3) (* y00 x!1)) ?x642 (* 2 (* y00 x!1 y!0 y!0 y!0)) ?x644 ?x2640 (* 6 (* x!1 x!1)) (* (- 9) (* y00 x!1 x!1 y!0 y!0)) ?x1780 ?x1787 (* 4 (* y00 x!1 y!0)) (* 2 (* x!1 x!1 y!0 y!0)) ?x1017 (* (- 1) ?x1982) (* 3 (* y00 x!1 x!1 x!1 y!0)) (* 2 (* x!1 y!0)) (* (- 3) (* x00 x!1)) ?x2372 (* 4 (* x00 x!1 y!0)) (* (- 8) (* x00 x!1 x!1 y!0)) (* 3 (* x00 x!1 x!1 x!1 y!0)) ?x2585 (* 2 (* x00 x!1 y!0 y!0 y!0)) ?x3019 ?x2654 (* (- 9) (* x00 x!1 x!1 y!0 y!0)) (* (- 3) y!0) ?x2708 ?x2602 (* (- 4) (* y!0 y!0)) ?x746 ?x2814 ?x2945 ?x3028 ?x3314)))
 (let (($x745 (= ?x2611 0)))
 (let (($x3045 (or (not $x745) $x2702)))
 (let (($x1706 (and $x2701 $x3045)))
 (let ((?x2624 (* (- 3) (* x!1 x!1 x!1 y!0 y!0 y00))))
 (let ((?x2732 (* x!1 x!1 x!1 y!0 y!0 y!0 y00)))
 (let ((?x2615 (* 3 (* x!1 x!1 y!0 y!0 y!0 y00))))
 (let ((?x1989 (* 4 ?x548)))
 (let ((?x2723 (* (- 6) (* x!1 y!0 y!0 y00))))
 (let ((?x554 (* (- 2) ?x1981)))
 (let ((?x2763 (* (- 2) ?x2813)))
 (let ((?x2762 (* x!1 x!1 x!1 y!0 y!0 y!0 x00)))
 (let ((?x2720 (* 3 (* x!1 x!1 y!0 y!0 y!0 x00))))
 (let ((?x951 (* (- 3) (* x!1 x!1 x!1 y!0 y!0 x00))))
 (let ((?x2812 (* (- 6) (* x!1 y!0 y!0 x00))))
 (let ((?x2802 (* y!0 x00)))
 (let ((?x2699 (* y!0 y00)))
 (let ((?x3134 (* (- 2) x00)))
 (let ((?x986 (* (- 2) y00)))
 (let ((?x2681 (+ x!1 y!0 ?x986 ?x3134 ?x2699 (* 8 (* x!1 y!0 y00)) (* 10 (* x!1 x!1 y!0 y00)) (* (- 7) (* x!1 y00)) (* (- 7) (* x!1 x00)) (* (- 7) (* x!1 x!1 x00)) (* (- 2) (* x!1 x!1 x!1 x00)) ?x2802 (* 8 (* x!1 y!0 x00)) (* 10 (* x!1 x!1 y!0 x00)) (* 3 (* x!1 x!1 x!1 y!0 x00)) ?x2812 (* (- 9) (* x!1 x!1 y!0 y!0 x00)) ?x951 (* 2 (* x!1 y!0 y!0 y!0 x00)) ?x2720 ?x2762 (* (- 7) (* x!1 x!1 y00)) (* (- 2) (* x!1 x!1 x!1 y00)) (* 2 (* y!0 y!0)) ?x2640 ?x2763 ?x2945 (* 4 (* x!1 x!1)) (* 6 (* x!1 y!0)) (* 5 ?x2814) ?x554 (* (- 4) (* x!1 x!1 y!0 y!0)) (* 2 (* x!1 y!0 y!0 y!0 y00)) ?x2723 ?x1989 ?x2708 ?x2731 ?x555 (* (- 1) ?x272) ?x2615 ?x2732 (* 3 (* x!1 x!1 x!1 y!0 y00)) (* (- 9) (* x!1 x!1 y!0 y!0 y00)) ?x2624 (* (- 1) ?x962))))
 (let ((?x337 (* ?x542 ?x542 ?x542 ?x542 ?x1856 ?x1856 ?x1856)))
 (let ((?x2605 (+ (* 3 x!1) (* 3 y!0) ?x986 ?x3134 (* (- 1) ?x2699) (* (- 4) (* x!1 y!0 y00)) (* 8 (* x!1 x!1 y!0 y00)) (* 3 (* x!1 y00)) (* 3 (* x!1 x00)) (* (- 1) (* x!1 x!1 x00)) (* (- 1) ?x2802) (* (- 4) (* x!1 y!0 x00)) (* 8 (* x!1 x!1 y!0 x00)) (* (- 3) (* x!1 x!1 x!1 y!0 x00)) ?x2812 (* 9 (* x!1 x!1 y!0 y!0 x00)) ?x951 (* (- 2) (* x!1 y!0 y!0 y!0 x00)) ?x2720 (* (- 1) ?x2762) (* (- 1) (* x!1 x!1 y00)) (* 4 (* y!0 y!0)) ?x1400 ?x2763 ?x2820 (* (- 6) (* x!1 x!1)) (* (- 2) (* x!1 y!0)) (* (- 1) ?x2814) ?x554 (* (- 2) (* x!1 x!1 y!0 y!0)) (* (- 2) (* x!1 y!0 y!0 y!0 y00)) ?x2723 ?x1982 ?x337 ?x1989 ?x1990 ?x2731 ?x2621 ?x2615 (* (- 1) ?x2732) (* (- 3) (* x!1 x!1 x!1 y!0 y00)) (* 9 (* x!1 x!1 y!0 y!0 y00)) ?x2624)))
 (let (($x2659 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x2605 0)) (not (= ?x2681 0))))))
 (let (($x2757 (exists ((x Int) (y Int) )(! (let ((?x2010 (+ 1 x)))
 (let ((?x182 (+ (- 1) y)))
 (let ((?x1836 (* ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010 ?x2010)))
 (let ((?x1717 (* (- 1) ?x1836)))
 (let ((?x1961 (* (- 3) (* x x x y y y00))))
 (let ((?x1776 (* x x y y y00)))
 (let ((?x3032 (* (- 9) ?x1776)))
 (let ((?x1757 (* x x x y y00)))
 (let ((?x1838 (* 3 ?x1757)))
 (let ((?x1731 (* x x x y y y y00)))
 (let ((?x1952 (* 3 (* x x y y y y00))))
 (let ((?x1723 (* ?x182 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1648 (* (- 1) ?x1723)))
 (let ((?x1507 (* x y y y y)))
 (let ((?x1505 (* y y y y)))
 (let ((?x1384 (* x x x x)))
 (let ((?x1446 (* 4 (* x x x))))
 (let ((?x1918 (* (- 6) (* x y y y00))))
 (let ((?x1239 (* x y y y y00)))
 (let ((?x1843 (* 2 ?x1239)))
 (let ((?x1086 (* x x y y)))
 (let ((?x3149 (* (- 4) ?x1086)))
 (let ((?x1082 (* x y y)))
 (let ((?x1332 (* (- 2) ?x1082)))
 (let ((?x1071 (* x x y)))
 (let ((?x3148 (* 5 ?x1071)))
 (let ((?x1067 (* x y)))
 (let ((?x1198 (* 6 ?x1067)))
 (let ((?x1062 (* x x)))
 (let ((?x1406 (* 4 ?x1062)))
 (let ((?x1051 (* x x y y y)))
 (let ((?x1120 (* (- 2) (* x y y y))))
 (let ((?x1045 (* y y y)))
 (let ((?x3147 (* (- 3) ?x1045)))
 (let ((?x1038 (* y y)))
 (let ((?x3146 (* 2 ?x1038)))
 (let ((?x3145 (* (- 2) (* x x x y00))))
 (let ((?x953 (* x x y00)))
 (let ((?x2677 (* (- 7) ?x953)))
 (let ((?x589 (* x x x y y y x00)))
 (let ((?x767 (* 3 (* x x y y y x00))))
 (let ((?x568 (* x y y y x00)))
 (let ((?x608 (* 2 ?x568)))
 (let ((?x759 (* (- 3) (* x x x y y x00))))
 (let ((?x464 (* x x y y x00)))
 (let ((?x2190 (* (- 9) ?x464)))
 (let ((?x753 (* (- 6) (* x y y x00))))
 (let ((?x413 (* x x x y x00)))
 (let ((?x603 (* 3 ?x413)))
 (let ((?x396 (* x x y x00)))
 (let ((?x3143 (* 10 ?x396)))
 (let ((?x387 (* x y x00)))
 (let ((?x3142 (* 8 ?x387)))
 (let ((?x378 (* y x00)))
 (let ((?x3141 (* (- 2) (* x x x x00))))
 (let ((?x194 (* x x x00)))
 (let ((?x3140 (* (- 7) ?x194)))
 (let ((?x190 (* x x00)))
 (let ((?x3139 (* (- 7) ?x190)))
 (let ((?x164 (* x y00)))
 (let ((?x2656 (* (- 7) ?x164)))
 (let ((?x155 (* x x y y00)))
 (let ((?x3137 (* 10 ?x155)))
 (let ((?x152 (* x y y00)))
 (let ((?x2676 (* 8 ?x152)))
 (let ((?x146 (* y y00)))
 (let ((?x3134 (* (- 2) x00)))
 (let ((?x986 (* (- 2) y00)))
 (let ((?x968 (+ x y ?x986 ?x3134 ?x146 ?x2676 ?x3137 ?x2656 ?x3139 ?x3140 ?x3141 ?x378 ?x3142 ?x3143 ?x603 ?x753 ?x2190 ?x759 ?x608 ?x767 ?x589 ?x2677 ?x3145 ?x3146 ?x3147 ?x1120 ?x1051 ?x1406 ?x1198 ?x3148 ?x1332 ?x3149 ?x1843 ?x1918 ?x1446 ?x1384 ?x1505 ?x1507 ?x1648 ?x1952 ?x1731 ?x1838 ?x3032 ?x1961 ?x1717)))
 (let ((?x1973 (* 9 ?x1776)))
 (let ((?x1955 (* (- 3) ?x1757)))
 (let ((?x1886 (* (- 1) ?x1731)))
 (let ((?x1579 (* (- 1) ?x1507)))
 (let ((?x1430 (* (- 1) ?x1384)))
 (let ((?x128 (+ 1 y)))
 (let ((?x118 (+ (- 1) x)))
 (let ((?x1276 (* ?x118 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1274 (* ?x118 ?x118 ?x118 ?x128 ?x128 ?x128 ?x128)))
 (let ((?x1915 (* (- 2) ?x1239)))
 (let ((?x1353 (* (- 2) ?x1086)))
 (let ((?x1350 (* (- 1) ?x1071)))
 (let ((?x1453 (* (- 6) ?x1062)))
 (let ((?x1148 (* (- 1) ?x1051)))
 (let ((?x1629 (* 3 ?x1045)))
 (let ((?x1628 (* 4 ?x1038)))
 (let ((?x1665 (* (- 1) ?x953)))
 (let ((?x655 (* (- 1) ?x589)))
 (let ((?x764 (* (- 2) ?x568)))
 (let ((?x780 (* 9 ?x464)))
 (let ((?x747 (* (- 3) ?x413)))
 (let ((?x933 (* 8 ?x396)))
 (let ((?x931 (* (- 4) ?x387)))
 (let ((?x1288 (* (- 1) ?x378)))
 (let ((?x195 (* (- 1) ?x194)))
 (let ((?x1820 (* 3 ?x190)))
 (let ((?x166 (* 3 ?x164)))
 (let ((?x1986 (* 8 ?x155)))
 (let ((?x3508 (* (- 4) ?x152)))
 (let ((?x2819 (* (- 1) ?x146)))
 (let ((?x1114 (* 3 y)))
 (let ((?x2707 (+ (* 3 x) ?x1114 ?x986 ?x3134 ?x2819 ?x3508 ?x1986 ?x166 ?x1820 ?x195 ?x1288 ?x931 ?x933 ?x747 ?x753 ?x780 ?x759 ?x764 ?x767 ?x655 ?x1665 ?x1628 ?x1629 ?x1120 ?x1148 ?x1453 (* (- 2) ?x1067) ?x1350 ?x1332 ?x1353 ?x1915 ?x1918 ?x1274 ?x1276 ?x1446 ?x1430 ?x1505 ?x1579 ?x1952 ?x1886 ?x1955 ?x1973 ?x1961)))
 (let (($x126 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x126 (or (not (= ?x2707 0)) (not (= ?x968 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x1641 (exists ((x Int) (y Int) )(! (let ((?x3026 (* y y y 1)))
 (let ((?x1961 (* (- 3) (* x x x y y y00))))
 (let ((?x1776 (* x x y y y00)))
 (let ((?x1973 (* 9 ?x1776)))
 (let ((?x1757 (* x x x y y00)))
 (let ((?x1955 (* (- 3) ?x1757)))
 (let ((?x1731 (* x x x y y y y00)))
 (let ((?x1886 (* (- 1) ?x1731)))
 (let ((?x1952 (* 3 (* x x y y y y00))))
 (let ((?x1507 (* x y y y y)))
 (let ((?x1579 (* (- 1) ?x1507)))
 (let ((?x1505 (* y y y y)))
 (let ((?x1384 (* x x x x)))
 (let ((?x1430 (* (- 1) ?x1384)))
 (let ((?x1446 (* 4 (* x x x))))
 (let ((?x128 (+ 1 y)))
 (let ((?x118 (+ (- 1) x)))
 (let ((?x1276 (* ?x118 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1274 (* ?x118 ?x118 ?x118 ?x128 ?x128 ?x128 ?x128)))
 (let ((?x1918 (* (- 6) (* x y y y00))))
 (let ((?x1239 (* x y y y y00)))
 (let ((?x1915 (* (- 2) ?x1239)))
 (let ((?x1086 (* x x y y)))
 (let ((?x1353 (* (- 2) ?x1086)))
 (let ((?x1071 (* x x y)))
 (let ((?x1350 (* (- 1) ?x1071)))
 (let ((?x1051 (* x x y y y)))
 (let ((?x1148 (* (- 1) ?x1051)))
 (let ((?x1120 (* (- 2) (* x y y y))))
 (let ((?x953 (* x x y00)))
 (let ((?x1665 (* (- 1) ?x953)))
 (let ((?x589 (* x x x y y y x00)))
 (let ((?x655 (* (- 1) ?x589)))
 (let ((?x767 (* 3 (* x x y y y x00))))
 (let ((?x568 (* x y y y x00)))
 (let ((?x764 (* (- 2) ?x568)))
 (let ((?x759 (* (- 3) (* x x x y y x00))))
 (let ((?x464 (* x x y y x00)))
 (let ((?x780 (* 9 ?x464)))
 (let ((?x753 (* (- 6) (* x y y x00))))
 (let ((?x413 (* x x x y x00)))
 (let ((?x747 (* (- 3) ?x413)))
 (let ((?x396 (* x x y x00)))
 (let ((?x933 (* 8 ?x396)))
 (let ((?x387 (* x y x00)))
 (let ((?x931 (* (- 4) ?x387)))
 (let ((?x379 (* y y 1 1)))
 (let ((?x378 (* y x00)))
 (let ((?x1288 (* (- 1) ?x378)))
 (let ((?x194 (* x x x00)))
 (let ((?x195 (* (- 1) ?x194)))
 (let ((?x190 (* x x00)))
 (let ((?x1820 (* 3 ?x190)))
 (let ((?x164 (* x y00)))
 (let ((?x166 (* 3 ?x164)))
 (let ((?x155 (* x x y y00)))
 (let ((?x1986 (* 8 ?x155)))
 (let ((?x152 (* x y y00)))
 (let ((?x3508 (* (- 4) ?x152)))
 (let ((?x146 (* y y00)))
 (let ((?x2819 (* (- 1) ?x146)))
 (let ((?x3134 (* (- 2) x00)))
 (let ((?x986 (* (- 2) y00)))
 (let ((?x3512 (+ x ?x986 ?x3134 ?x2819 ?x3508 ?x1986 ?x166 ?x1820 ?x195 (* y 1 1) ?x1288 ?x379 ?x931 ?x933 ?x747 ?x753 ?x780 ?x759 ?x764 ?x767 ?x655 (* x y 1 1) (* x 1 y 1) (* x y y 1) (* x 1 1 y) (* y 1 y) (* x y 1 y) (* x 1 y y) ?x1665 (* (- 1) (* y y)) ?x1120 ?x1148 (* (- 4) (* x x)) (* (- 5) (* x y)) ?x1350 (* (- 5) (* x y y)) ?x1353 ?x1915 ?x1918 ?x1274 ?x1276 ?x1446 ?x1430 ?x1505 ?x1579 ?x1952 ?x1886 ?x1955 ?x1973 ?x1961 (* x (- 1) (- 1)) (* x x (- 1)) (* x (- 1) x) (* y 1 1 1) (* y 1 y y) (* y 1 y 1) (* y 1 1 y) (* y y 1 y) (* x 1 1 1) (* y y 1) (* y 1) ?x3026)))
 (let ((?x2010 (+ 1 x)))
 (let ((?x182 (+ (- 1) y)))
 (let ((?x1836 (* ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010 ?x2010)))
 (let ((?x1717 (* (- 1) ?x1836)))
 (let ((?x3032 (* (- 9) ?x1776)))
 (let ((?x1838 (* 3 ?x1757)))
 (let ((?x1723 (* ?x182 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1648 (* (- 1) ?x1723)))
 (let ((?x1843 (* 2 ?x1239)))
 (let ((?x3149 (* (- 4) ?x1086)))
 (let ((?x1082 (* x y y)))
 (let ((?x1332 (* (- 2) ?x1082)))
 (let ((?x1062 (* x x)))
 (let ((?x1406 (* 4 ?x1062)))
 (let ((?x1038 (* y y)))
 (let ((?x3145 (* (- 2) (* x x x y00))))
 (let ((?x2677 (* (- 7) ?x953)))
 (let ((?x608 (* 2 ?x568)))
 (let ((?x2190 (* (- 9) ?x464)))
 (let ((?x603 (* 3 ?x413)))
 (let ((?x3143 (* 10 ?x396)))
 (let ((?x3142 (* 8 ?x387)))
 (let ((?x3141 (* (- 2) (* x x x x00))))
 (let ((?x3140 (* (- 7) ?x194)))
 (let ((?x3139 (* (- 7) ?x190)))
 (let ((?x2656 (* (- 7) ?x164)))
 (let ((?x3137 (* 10 ?x155)))
 (let ((?x2676 (* 8 ?x152)))
 (let ((?x2680 (+ x y ?x986 ?x3134 ?x146 ?x2676 ?x3137 ?x2656 ?x3139 ?x3140 ?x3141 (* (- 1) (* y (- 1) x x)) (* (- 1) (* y (- 1) 1 1)) ?x378 (* (- 1) ?x379) ?x3142 (* (- 1) (* y (- 1) x 1)) ?x3143 (* (- 1) (* y y x 1)) (* (- 1) (* y (- 1) 1 x)) (* (- 1) (* y y 1 x)) ?x603 ?x753 ?x2190 ?x759 ?x608 ?x767 ?x589 (* (- 1) (* y (- 1) y x)) ?x2677 ?x3145 ?x1038 (* (- 2) (* y y y)) ?x1120 ?x1051 ?x1406 (* 5 (* x y)) (* 4 ?x1071) ?x1332 ?x3149 ?x1843 ?x1918 ?x1446 ?x1384 ?x1505 ?x1507 (* (- 1) (* y y (- 1) x)) ?x1648 ?x1952 ?x1731 ?x1838 ?x3032 ?x1961 ?x1717 (* (- 1) (* y (- 1) (- 1) 1)) (* (- 1) (* y (- 1) y 1)) (* (- 1) (* y y (- 1) 1)) (* (- 1) ?x3026) (* (- 1) (* y (- 1) (- 1) x)))))
 (let (($x126 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x126 (or (not (= ?x2680 0)) (not (= ?x3512 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x2801 (lambda ((x Int) (y Int) )(let ((?x2010 (+ 1 x)))
 (let ((?x182 (+ (- 1) y)))
 (let ((?x1836 (* ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010 ?x2010)))
 (let ((?x1717 (* (- 1) ?x1836)))
 (let ((?x1961 (* (- 3) (* x x x y y y00))))
 (let ((?x1776 (* x x y y y00)))
 (let ((?x3032 (* (- 9) ?x1776)))
 (let ((?x1757 (* x x x y y00)))
 (let ((?x1838 (* 3 ?x1757)))
 (let ((?x1731 (* x x x y y y y00)))
 (let ((?x1952 (* 3 (* x x y y y y00))))
 (let ((?x1723 (* ?x182 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1648 (* (- 1) ?x1723)))
 (let ((?x1507 (* x y y y y)))
 (let ((?x1505 (* y y y y)))
 (let ((?x1384 (* x x x x)))
 (let ((?x1446 (* 4 (* x x x))))
 (let ((?x1918 (* (- 6) (* x y y y00))))
 (let ((?x1239 (* x y y y y00)))
 (let ((?x1843 (* 2 ?x1239)))
 (let ((?x1086 (* x x y y)))
 (let ((?x3149 (* (- 4) ?x1086)))
 (let ((?x1082 (* x y y)))
 (let ((?x1332 (* (- 2) ?x1082)))
 (let ((?x1071 (* x x y)))
 (let ((?x3148 (* 5 ?x1071)))
 (let ((?x1067 (* x y)))
 (let ((?x1198 (* 6 ?x1067)))
 (let ((?x1062 (* x x)))
 (let ((?x1406 (* 4 ?x1062)))
 (let ((?x1051 (* x x y y y)))
 (let ((?x1120 (* (- 2) (* x y y y))))
 (let ((?x1045 (* y y y)))
 (let ((?x3147 (* (- 3) ?x1045)))
 (let ((?x1038 (* y y)))
 (let ((?x3146 (* 2 ?x1038)))
 (let ((?x3145 (* (- 2) (* x x x y00))))
 (let ((?x953 (* x x y00)))
 (let ((?x2677 (* (- 7) ?x953)))
 (let ((?x589 (* x x x y y y x00)))
 (let ((?x767 (* 3 (* x x y y y x00))))
 (let ((?x568 (* x y y y x00)))
 (let ((?x608 (* 2 ?x568)))
 (let ((?x759 (* (- 3) (* x x x y y x00))))
 (let ((?x464 (* x x y y x00)))
 (let ((?x2190 (* (- 9) ?x464)))
 (let ((?x753 (* (- 6) (* x y y x00))))
 (let ((?x413 (* x x x y x00)))
 (let ((?x603 (* 3 ?x413)))
 (let ((?x396 (* x x y x00)))
 (let ((?x3143 (* 10 ?x396)))
 (let ((?x387 (* x y x00)))
 (let ((?x3142 (* 8 ?x387)))
 (let ((?x378 (* y x00)))
 (let ((?x3141 (* (- 2) (* x x x x00))))
 (let ((?x194 (* x x x00)))
 (let ((?x3140 (* (- 7) ?x194)))
 (let ((?x190 (* x x00)))
 (let ((?x3139 (* (- 7) ?x190)))
 (let ((?x164 (* x y00)))
 (let ((?x2656 (* (- 7) ?x164)))
 (let ((?x155 (* x x y y00)))
 (let ((?x3137 (* 10 ?x155)))
 (let ((?x152 (* x y y00)))
 (let ((?x2676 (* 8 ?x152)))
 (let ((?x146 (* y y00)))
 (let ((?x3134 (* (- 2) x00)))
 (let ((?x986 (* (- 2) y00)))
 (let ((?x968 (+ x y ?x986 ?x3134 ?x146 ?x2676 ?x3137 ?x2656 ?x3139 ?x3140 ?x3141 ?x378 ?x3142 ?x3143 ?x603 ?x753 ?x2190 ?x759 ?x608 ?x767 ?x589 ?x2677 ?x3145 ?x3146 ?x3147 ?x1120 ?x1051 ?x1406 ?x1198 ?x3148 ?x1332 ?x3149 ?x1843 ?x1918 ?x1446 ?x1384 ?x1505 ?x1507 ?x1648 ?x1952 ?x1731 ?x1838 ?x3032 ?x1961 ?x1717)))
 (let ((?x1973 (* 9 ?x1776)))
 (let ((?x1955 (* (- 3) ?x1757)))
 (let ((?x1886 (* (- 1) ?x1731)))
 (let ((?x1579 (* (- 1) ?x1507)))
 (let ((?x1430 (* (- 1) ?x1384)))
 (let ((?x128 (+ 1 y)))
 (let ((?x118 (+ (- 1) x)))
 (let ((?x1276 (* ?x118 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1274 (* ?x118 ?x118 ?x118 ?x128 ?x128 ?x128 ?x128)))
 (let ((?x1915 (* (- 2) ?x1239)))
 (let ((?x1353 (* (- 2) ?x1086)))
 (let ((?x1350 (* (- 1) ?x1071)))
 (let ((?x1453 (* (- 6) ?x1062)))
 (let ((?x1148 (* (- 1) ?x1051)))
 (let ((?x1629 (* 3 ?x1045)))
 (let ((?x1628 (* 4 ?x1038)))
 (let ((?x1665 (* (- 1) ?x953)))
 (let ((?x655 (* (- 1) ?x589)))
 (let ((?x764 (* (- 2) ?x568)))
 (let ((?x780 (* 9 ?x464)))
 (let ((?x747 (* (- 3) ?x413)))
 (let ((?x933 (* 8 ?x396)))
 (let ((?x931 (* (- 4) ?x387)))
 (let ((?x1288 (* (- 1) ?x378)))
 (let ((?x195 (* (- 1) ?x194)))
 (let ((?x1820 (* 3 ?x190)))
 (let ((?x166 (* 3 ?x164)))
 (let ((?x1986 (* 8 ?x155)))
 (let ((?x3508 (* (- 4) ?x152)))
 (let ((?x2819 (* (- 1) ?x146)))
 (let ((?x1114 (* 3 y)))
 (let ((?x2707 (+ (* 3 x) ?x1114 ?x986 ?x3134 ?x2819 ?x3508 ?x1986 ?x166 ?x1820 ?x195 ?x1288 ?x931 ?x933 ?x747 ?x753 ?x780 ?x759 ?x764 ?x767 ?x655 ?x1665 ?x1628 ?x1629 ?x1120 ?x1148 ?x1453 (* (- 2) ?x1067) ?x1350 ?x1332 ?x1353 ?x1915 ?x1918 ?x1274 ?x1276 ?x1446 ?x1430 ?x1505 ?x1579 ?x1952 ?x1886 ?x1955 ?x1973 ?x1961)))
 (let (($x126 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x2806 (and $x126 (or (not (= ?x2707 0)) (not (= ?x968 0))))))
 (let ((?x3026 (* y y y 1)))
 (let ((?x379 (* y y 1 1)))
 (let ((?x3512 (+ x ?x986 ?x3134 ?x2819 ?x3508 ?x1986 ?x166 ?x1820 ?x195 (* y 1 1) ?x1288 ?x379 ?x931 ?x933 ?x747 ?x753 ?x780 ?x759 ?x764 ?x767 ?x655 (* x y 1 1) (* x 1 y 1) (* x y y 1) (* x 1 1 y) (* y 1 y) (* x y 1 y) (* x 1 y y) ?x1665 (* (- 1) ?x1038) ?x1120 ?x1148 (* (- 4) ?x1062) (* (- 5) ?x1067) ?x1350 (* (- 5) ?x1082) ?x1353 ?x1915 ?x1918 ?x1274 ?x1276 ?x1446 ?x1430 ?x1505 ?x1579 ?x1952 ?x1886 ?x1955 ?x1973 ?x1961 (* x (- 1) (- 1)) (* x x (- 1)) (* x (- 1) x) (* y 1 1 1) (* y 1 y y) (* y 1 y 1) (* y 1 1 y) (* y y 1 y) (* x 1 1 1) (* y y 1) (* y 1) ?x3026)))
 (let ((?x2680 (+ x y ?x986 ?x3134 ?x146 ?x2676 ?x3137 ?x2656 ?x3139 ?x3140 ?x3141 (* (- 1) (* y (- 1) x x)) (* (- 1) (* y (- 1) 1 1)) ?x378 (* (- 1) ?x379) ?x3142 (* (- 1) (* y (- 1) x 1)) ?x3143 (* (- 1) (* y y x 1)) (* (- 1) (* y (- 1) 1 x)) (* (- 1) (* y y 1 x)) ?x603 ?x753 ?x2190 ?x759 ?x608 ?x767 ?x589 (* (- 1) (* y (- 1) y x)) ?x2677 ?x3145 ?x1038 (* (- 2) ?x1045) ?x1120 ?x1051 ?x1406 (* 5 ?x1067) (* 4 ?x1071) ?x1332 ?x3149 ?x1843 ?x1918 ?x1446 ?x1384 ?x1505 ?x1507 (* (- 1) (* y y (- 1) x)) ?x1648 ?x1952 ?x1731 ?x1838 ?x3032 ?x1961 ?x1717 (* (- 1) (* y (- 1) (- 1) 1)) (* (- 1) (* y (- 1) y 1)) (* (- 1) (* y y (- 1) 1)) (* (- 1) ?x3026) (* (- 1) (* y (- 1) (- 1) x)))))
 (let (($x927 (and $x126 (or (not (= ?x2680 0)) (not (= ?x3512 0))))))
 (rewrite (= $x927 $x2806)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1144 (exists ((x Int) (y Int) )(! (let ((?x128 (+ 1 y)))
 (let ((?x118 (+ (- 1) x)))
 (let ((?x1672 (* y00 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1825 (* ?x118 ?x128 ?x128 ?x128 ?x128)))
 (let ((?x1716 (* ?x118 ?x118 ?x118 ?x118)))
 (let ((?x1794 (* ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1676 (* x00 ?x118 ?x118 ?x128)))
 (let ((?x1753 (* x00 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1652 (* y00 ?x118 ?x118 ?x128)))
 (let ((?x1755 (+ ?x1652 (* (- 1) (* x00 ?x118 ?x118 ?x118)) ?x1753 (* (- 1) (* x00 ?x118 ?x128 ?x128 ?x128)) ?x1676 (* (- 1) (* y00 ?x118 ?x118 ?x118)) ?x1794 (* (- 1) (* y00 ?x118 ?x128 ?x128 ?x128)) (* (- 1) (* ?x118 ?x118 ?x118 ?x128 ?x128 ?x128 ?x128)) (* (- 1) (* ?x118 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)) (* (- 1) (* ?x118 ?x118 ?x128 ?x128)) ?x1716 ?x1825 ?x1672)))
 (let ((?x2010 (+ 1 x)))
 (let ((?x182 (+ (- 1) y)))
 (let ((?x1147 (* y00 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1168 (* ?x182 ?x182 ?x182 ?x182 ?x2010)))
 (let ((?x1160 (* ?x2010 ?x2010 ?x2010 ?x2010)))
 (let ((?x1836 (* ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010 ?x2010)))
 (let ((?x1717 (* (- 1) ?x1836)))
 (let ((?x1723 (* ?x182 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1648 (* (- 1) ?x1723)))
 (let ((?x1821 (* ?x182 ?x182 ?x182 ?x2010 ?x2010)))
 (let ((?x1695 (* x00 ?x182 ?x2010 ?x2010)))
 (let ((?x1770 (* x00 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1667 (* y00 ?x182 ?x2010 ?x2010)))
 (let ((?x1220 (+ ?x1667 (* (- 1) (* x00 ?x2010 ?x2010 ?x2010)) ?x1770 (* (- 1) (* x00 ?x182 ?x182 ?x182 ?x2010)) ?x1695 (* (- 1) (* y00 ?x2010 ?x2010 ?x2010)) ?x1821 (* (- 1) (* y00 ?x182 ?x182 ?x182 ?x2010)) ?x1648 ?x1717 (* (- 1) (* ?x182 ?x182 ?x2010 ?x2010)) ?x1160 ?x1168 ?x1147)))
 (let (($x1745 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x1745 (or (not (= ?x1220 0)) (not (= ?x1755 0))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1678 (lambda ((x Int) (y Int) )(let ((?x3026 (* y y y 1)))
 (let ((?x1961 (* (- 3) (* x x x y y y00))))
 (let ((?x1776 (* x x y y y00)))
 (let ((?x1973 (* 9 ?x1776)))
 (let ((?x1757 (* x x x y y00)))
 (let ((?x1955 (* (- 3) ?x1757)))
 (let ((?x1731 (* x x x y y y y00)))
 (let ((?x1886 (* (- 1) ?x1731)))
 (let ((?x1952 (* 3 (* x x y y y y00))))
 (let ((?x1507 (* x y y y y)))
 (let ((?x1579 (* (- 1) ?x1507)))
 (let ((?x1505 (* y y y y)))
 (let ((?x1384 (* x x x x)))
 (let ((?x1430 (* (- 1) ?x1384)))
 (let ((?x1446 (* 4 (* x x x))))
 (let ((?x128 (+ 1 y)))
 (let ((?x118 (+ (- 1) x)))
 (let ((?x1276 (* ?x118 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1274 (* ?x118 ?x118 ?x118 ?x128 ?x128 ?x128 ?x128)))
 (let ((?x1918 (* (- 6) (* x y y y00))))
 (let ((?x1239 (* x y y y y00)))
 (let ((?x1915 (* (- 2) ?x1239)))
 (let ((?x1086 (* x x y y)))
 (let ((?x1353 (* (- 2) ?x1086)))
 (let ((?x1071 (* x x y)))
 (let ((?x1350 (* (- 1) ?x1071)))
 (let ((?x1051 (* x x y y y)))
 (let ((?x1148 (* (- 1) ?x1051)))
 (let ((?x1120 (* (- 2) (* x y y y))))
 (let ((?x953 (* x x y00)))
 (let ((?x1665 (* (- 1) ?x953)))
 (let ((?x589 (* x x x y y y x00)))
 (let ((?x655 (* (- 1) ?x589)))
 (let ((?x767 (* 3 (* x x y y y x00))))
 (let ((?x568 (* x y y y x00)))
 (let ((?x764 (* (- 2) ?x568)))
 (let ((?x759 (* (- 3) (* x x x y y x00))))
 (let ((?x464 (* x x y y x00)))
 (let ((?x780 (* 9 ?x464)))
 (let ((?x753 (* (- 6) (* x y y x00))))
 (let ((?x413 (* x x x y x00)))
 (let ((?x747 (* (- 3) ?x413)))
 (let ((?x396 (* x x y x00)))
 (let ((?x933 (* 8 ?x396)))
 (let ((?x387 (* x y x00)))
 (let ((?x931 (* (- 4) ?x387)))
 (let ((?x379 (* y y 1 1)))
 (let ((?x378 (* y x00)))
 (let ((?x1288 (* (- 1) ?x378)))
 (let ((?x194 (* x x x00)))
 (let ((?x195 (* (- 1) ?x194)))
 (let ((?x190 (* x x00)))
 (let ((?x1820 (* 3 ?x190)))
 (let ((?x164 (* x y00)))
 (let ((?x166 (* 3 ?x164)))
 (let ((?x155 (* x x y y00)))
 (let ((?x1986 (* 8 ?x155)))
 (let ((?x152 (* x y y00)))
 (let ((?x3508 (* (- 4) ?x152)))
 (let ((?x146 (* y y00)))
 (let ((?x2819 (* (- 1) ?x146)))
 (let ((?x3134 (* (- 2) x00)))
 (let ((?x986 (* (- 2) y00)))
 (let ((?x3512 (+ x ?x986 ?x3134 ?x2819 ?x3508 ?x1986 ?x166 ?x1820 ?x195 (* y 1 1) ?x1288 ?x379 ?x931 ?x933 ?x747 ?x753 ?x780 ?x759 ?x764 ?x767 ?x655 (* x y 1 1) (* x 1 y 1) (* x y y 1) (* x 1 1 y) (* y 1 y) (* x y 1 y) (* x 1 y y) ?x1665 (* (- 1) (* y y)) ?x1120 ?x1148 (* (- 4) (* x x)) (* (- 5) (* x y)) ?x1350 (* (- 5) (* x y y)) ?x1353 ?x1915 ?x1918 ?x1274 ?x1276 ?x1446 ?x1430 ?x1505 ?x1579 ?x1952 ?x1886 ?x1955 ?x1973 ?x1961 (* x (- 1) (- 1)) (* x x (- 1)) (* x (- 1) x) (* y 1 1 1) (* y 1 y y) (* y 1 y 1) (* y 1 1 y) (* y y 1 y) (* x 1 1 1) (* y y 1) (* y 1) ?x3026)))
 (let ((?x2010 (+ 1 x)))
 (let ((?x182 (+ (- 1) y)))
 (let ((?x1836 (* ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010 ?x2010)))
 (let ((?x1717 (* (- 1) ?x1836)))
 (let ((?x3032 (* (- 9) ?x1776)))
 (let ((?x1838 (* 3 ?x1757)))
 (let ((?x1723 (* ?x182 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1648 (* (- 1) ?x1723)))
 (let ((?x1843 (* 2 ?x1239)))
 (let ((?x3149 (* (- 4) ?x1086)))
 (let ((?x1082 (* x y y)))
 (let ((?x1332 (* (- 2) ?x1082)))
 (let ((?x1062 (* x x)))
 (let ((?x1406 (* 4 ?x1062)))
 (let ((?x1038 (* y y)))
 (let ((?x3145 (* (- 2) (* x x x y00))))
 (let ((?x2677 (* (- 7) ?x953)))
 (let ((?x608 (* 2 ?x568)))
 (let ((?x2190 (* (- 9) ?x464)))
 (let ((?x603 (* 3 ?x413)))
 (let ((?x3143 (* 10 ?x396)))
 (let ((?x3142 (* 8 ?x387)))
 (let ((?x3141 (* (- 2) (* x x x x00))))
 (let ((?x3140 (* (- 7) ?x194)))
 (let ((?x3139 (* (- 7) ?x190)))
 (let ((?x2656 (* (- 7) ?x164)))
 (let ((?x3137 (* 10 ?x155)))
 (let ((?x2676 (* 8 ?x152)))
 (let ((?x2680 (+ x y ?x986 ?x3134 ?x146 ?x2676 ?x3137 ?x2656 ?x3139 ?x3140 ?x3141 (* (- 1) (* y (- 1) x x)) (* (- 1) (* y (- 1) 1 1)) ?x378 (* (- 1) ?x379) ?x3142 (* (- 1) (* y (- 1) x 1)) ?x3143 (* (- 1) (* y y x 1)) (* (- 1) (* y (- 1) 1 x)) (* (- 1) (* y y 1 x)) ?x603 ?x753 ?x2190 ?x759 ?x608 ?x767 ?x589 (* (- 1) (* y (- 1) y x)) ?x2677 ?x3145 ?x1038 (* (- 2) (* y y y)) ?x1120 ?x1051 ?x1406 (* 5 (* x y)) (* 4 ?x1071) ?x1332 ?x3149 ?x1843 ?x1918 ?x1446 ?x1384 ?x1505 ?x1507 (* (- 1) (* y y (- 1) x)) ?x1648 ?x1952 ?x1731 ?x1838 ?x3032 ?x1961 ?x1717 (* (- 1) (* y (- 1) (- 1) 1)) (* (- 1) (* y (- 1) y 1)) (* (- 1) (* y y (- 1) 1)) (* (- 1) ?x3026) (* (- 1) (* y (- 1) (- 1) x)))))
 (let (($x126 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x927 (and $x126 (or (not (= ?x2680 0)) (not (= ?x3512 0))))))
 (let ((?x1672 (* y00 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1825 (* ?x118 ?x128 ?x128 ?x128 ?x128)))
 (let ((?x1716 (* ?x118 ?x118 ?x118 ?x118)))
 (let ((?x1794 (* ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1676 (* x00 ?x118 ?x118 ?x128)))
 (let ((?x1753 (* x00 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1652 (* y00 ?x118 ?x118 ?x128)))
 (let ((?x1755 (+ ?x1652 (* (- 1) (* x00 ?x118 ?x118 ?x118)) ?x1753 (* (- 1) (* x00 ?x118 ?x128 ?x128 ?x128)) ?x1676 (* (- 1) (* y00 ?x118 ?x118 ?x118)) ?x1794 (* (- 1) (* y00 ?x118 ?x128 ?x128 ?x128)) (* (- 1) ?x1274) (* (- 1) ?x1276) (* (- 1) (* ?x118 ?x118 ?x128 ?x128)) ?x1716 ?x1825 ?x1672)))
 (let ((?x1147 (* y00 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1168 (* ?x182 ?x182 ?x182 ?x182 ?x2010)))
 (let ((?x1160 (* ?x2010 ?x2010 ?x2010 ?x2010)))
 (let ((?x1821 (* ?x182 ?x182 ?x182 ?x2010 ?x2010)))
 (let ((?x1695 (* x00 ?x182 ?x2010 ?x2010)))
 (let ((?x1770 (* x00 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1667 (* y00 ?x182 ?x2010 ?x2010)))
 (let ((?x1220 (+ ?x1667 (* (- 1) (* x00 ?x2010 ?x2010 ?x2010)) ?x1770 (* (- 1) (* x00 ?x182 ?x182 ?x182 ?x2010)) ?x1695 (* (- 1) (* y00 ?x2010 ?x2010 ?x2010)) ?x1821 (* (- 1) (* y00 ?x182 ?x182 ?x182 ?x2010)) ?x1648 ?x1717 (* (- 1) (* ?x182 ?x182 ?x2010 ?x2010)) ?x1160 ?x1168 ?x1147)))
 (let (($x1745 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x1685 (and $x1745 (or (not (= ?x1220 0)) (not (= ?x1755 0))))))
 (rewrite (= $x1685 $x927))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1759 (exists ((x Int) (y Int) )(! (let ((?x2010 (+ 1 x)))
 (let ((?x182 (+ (- 1) y)))
 (let ((?x1147 (* y00 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1842 (* ?x182 ?x182 ?x2010 ?x2010)))
 (let ((?x1836 (* ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010 ?x2010)))
 (let ((?x1723 (* ?x182 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1687 (* y00 ?x182 ?x182 ?x182 ?x2010)))
 (let ((?x1811 (* y00 ?x2010 ?x2010 ?x2010)))
 (let ((?x1786 (* x00 ?x182 ?x182 ?x182 ?x2010)))
 (let ((?x1769 (* x00 ?x2010 ?x2010 ?x2010)))
 (let ((?x1118 (+ (* (- 1) (* y00 ?x182 ?x2010 ?x2010)) ?x1769 (* (- 1) (* x00 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)) ?x1786 (* (- 1) (* x00 ?x182 ?x2010 ?x2010)) ?x1811 (* (- 1) (* ?x182 ?x182 ?x182 ?x2010 ?x2010)) ?x1687 ?x1723 ?x1836 ?x1842 (* (- 1) (* ?x2010 ?x2010 ?x2010 ?x2010)) (* (- 1) (* ?x182 ?x182 ?x182 ?x182 ?x2010)) (* (- 1) ?x1147))))
 (let ((?x128 (+ 1 y)))
 (let ((?x118 (+ (- 1) x)))
 (let ((?x1672 (* y00 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1810 (* ?x118 ?x118 ?x128 ?x128)))
 (let ((?x1276 (* ?x118 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1274 (* ?x118 ?x118 ?x118 ?x128 ?x128 ?x128 ?x128)))
 (let ((?x1805 (* y00 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1686 (* y00 ?x118 ?x118 ?x118)))
 (let ((?x1226 (* x00 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1657 (* x00 ?x118 ?x118 ?x118)))
 (let ((?x1712 (+ (* (- 1) (* y00 ?x118 ?x118 ?x128)) ?x1657 (* (- 1) (* x00 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)) ?x1226 (* (- 1) (* x00 ?x118 ?x118 ?x128)) ?x1686 (* (- 1) (* ?x118 ?x118 ?x128 ?x128 ?x128)) ?x1805 ?x1274 ?x1276 ?x1810 (* (- 1) (* ?x118 ?x118 ?x118 ?x118)) (* (- 1) (* ?x118 ?x128 ?x128 ?x128 ?x128)) (* (- 1) ?x1672))))
 (let (($x1745 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x1745 (or (not (= ?x1712 0)) (not (= ?x1118 0))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1188 (lambda ((x Int) (y Int) )(let ((?x128 (+ 1 y)))
 (let ((?x118 (+ (- 1) x)))
 (let ((?x1672 (* y00 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1825 (* ?x118 ?x128 ?x128 ?x128 ?x128)))
 (let ((?x1716 (* ?x118 ?x118 ?x118 ?x118)))
 (let ((?x1794 (* ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1676 (* x00 ?x118 ?x118 ?x128)))
 (let ((?x1753 (* x00 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1652 (* y00 ?x118 ?x118 ?x128)))
 (let ((?x1755 (+ ?x1652 (* (- 1) (* x00 ?x118 ?x118 ?x118)) ?x1753 (* (- 1) (* x00 ?x118 ?x128 ?x128 ?x128)) ?x1676 (* (- 1) (* y00 ?x118 ?x118 ?x118)) ?x1794 (* (- 1) (* y00 ?x118 ?x128 ?x128 ?x128)) (* (- 1) (* ?x118 ?x118 ?x118 ?x128 ?x128 ?x128 ?x128)) (* (- 1) (* ?x118 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)) (* (- 1) (* ?x118 ?x118 ?x128 ?x128)) ?x1716 ?x1825 ?x1672)))
 (let ((?x2010 (+ 1 x)))
 (let ((?x182 (+ (- 1) y)))
 (let ((?x1147 (* y00 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1168 (* ?x182 ?x182 ?x182 ?x182 ?x2010)))
 (let ((?x1160 (* ?x2010 ?x2010 ?x2010 ?x2010)))
 (let ((?x1836 (* ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010 ?x2010)))
 (let ((?x1717 (* (- 1) ?x1836)))
 (let ((?x1723 (* ?x182 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1648 (* (- 1) ?x1723)))
 (let ((?x1821 (* ?x182 ?x182 ?x182 ?x2010 ?x2010)))
 (let ((?x1695 (* x00 ?x182 ?x2010 ?x2010)))
 (let ((?x1770 (* x00 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1667 (* y00 ?x182 ?x2010 ?x2010)))
 (let ((?x1220 (+ ?x1667 (* (- 1) (* x00 ?x2010 ?x2010 ?x2010)) ?x1770 (* (- 1) (* x00 ?x182 ?x182 ?x182 ?x2010)) ?x1695 (* (- 1) (* y00 ?x2010 ?x2010 ?x2010)) ?x1821 (* (- 1) (* y00 ?x182 ?x182 ?x182 ?x2010)) ?x1648 ?x1717 (* (- 1) (* ?x182 ?x182 ?x2010 ?x2010)) ?x1160 ?x1168 ?x1147)))
 (let (($x1745 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x1685 (and $x1745 (or (not (= ?x1220 0)) (not (= ?x1755 0))))))
 (let ((?x1842 (* ?x182 ?x182 ?x2010 ?x2010)))
 (let ((?x1687 (* y00 ?x182 ?x182 ?x182 ?x2010)))
 (let ((?x1811 (* y00 ?x2010 ?x2010 ?x2010)))
 (let ((?x1786 (* x00 ?x182 ?x182 ?x182 ?x2010)))
 (let ((?x1769 (* x00 ?x2010 ?x2010 ?x2010)))
 (let ((?x1118 (+ (* (- 1) ?x1667) ?x1769 (* (- 1) ?x1770) ?x1786 (* (- 1) ?x1695) ?x1811 (* (- 1) ?x1821) ?x1687 ?x1723 ?x1836 ?x1842 (* (- 1) ?x1160) (* (- 1) ?x1168) (* (- 1) ?x1147))))
 (let ((?x1810 (* ?x118 ?x118 ?x128 ?x128)))
 (let ((?x1276 (* ?x118 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1274 (* ?x118 ?x118 ?x118 ?x128 ?x128 ?x128 ?x128)))
 (let ((?x1805 (* y00 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1686 (* y00 ?x118 ?x118 ?x118)))
 (let ((?x1226 (* x00 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1657 (* x00 ?x118 ?x118 ?x118)))
 (let ((?x1712 (+ (* (- 1) ?x1652) ?x1657 (* (- 1) ?x1753) ?x1226 (* (- 1) ?x1676) ?x1686 (* (- 1) ?x1794) ?x1805 ?x1274 ?x1276 ?x1810 (* (- 1) ?x1716) (* (- 1) ?x1825) (* (- 1) ?x1672))))
 (let (($x1675 (and $x1745 (or (not (= ?x1712 0)) (not (= ?x1118 0))))))
 (rewrite (= $x1675 $x1685))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x97 (exists ((x Int) (y Int) )(! (let ((?x66 (- y 1)))
 (let ((?x65 (+ x 1)))
 (let ((?x71 (- (+ (* (- 1) ?x65 ?x65 ?x66 y00) (* ?x65 ?x65 ?x65 x00)) (* ?x65 ?x65 ?x65 x00 ?x66 ?x66 ?x66))))
 (let ((?x75 (- (+ ?x71 (* ?x65 x00 ?x66 ?x66 ?x66)) (* ?x65 ?x65 x00 ?x66))))
 (let ((?x84 (+ (- (+ ?x75 (* ?x65 ?x65 ?x65 y00)) (* ?x65 ?x65 ?x66 ?x66 ?x66)) (* ?x65 ?x66 ?x66 ?x66 y00) (* ?x65 ?x65 ?x65 ?x66 ?x66 ?x66 ?x66) (* ?x65 ?x65 ?x65 ?x65 ?x66 ?x66 ?x66) (* ?x65 ?x65 ?x66 ?x66))))
 (let ((?x90 (- (- (- ?x84 (* ?x65 ?x65 ?x65 ?x65)) (* ?x65 ?x66 ?x66 ?x66 ?x66)) (* ?x65 ?x65 ?x65 ?x66 ?x66 ?x66 y00))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x41 (- (+ (* (- 1) ?x35 ?x35 ?x36 y00) (* ?x35 ?x35 ?x35 x00)) (* ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x45 (- (+ ?x41 (* ?x35 x00 ?x36 ?x36 ?x36)) (* ?x35 ?x35 x00 ?x36))))
 (let ((?x54 (+ (- (+ ?x45 (* ?x35 ?x35 ?x35 y00)) (* ?x35 ?x35 ?x36 ?x36 ?x36)) (* ?x35 ?x36 ?x36 ?x36 y00) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x36 ?x36))))
 (let ((?x60 (- (- (- ?x54 (* ?x35 ?x35 ?x35 ?x35)) (* ?x35 ?x36 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 y00))))
 (let (($x95 (or (not (= (+ ?x60 (* 0 ?x35 ?x35 ?x35 ?x36)) 0)) (not (= (+ ?x90 (* 0 ?x65 ?x65 ?x65 ?x66)) 0)))))
 (and (= (+ (- (- x y00) x00) y) 0) $x95)))))))))))))) :qid k!27))
 ))
 (let ((?x1223 (lambda ((x Int) (y Int) )(let ((?x2010 (+ 1 x)))
 (let ((?x182 (+ (- 1) y)))
 (let ((?x1147 (* y00 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1842 (* ?x182 ?x182 ?x2010 ?x2010)))
 (let ((?x1836 (* ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010 ?x2010)))
 (let ((?x1723 (* ?x182 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)))
 (let ((?x1687 (* y00 ?x182 ?x182 ?x182 ?x2010)))
 (let ((?x1811 (* y00 ?x2010 ?x2010 ?x2010)))
 (let ((?x1786 (* x00 ?x182 ?x182 ?x182 ?x2010)))
 (let ((?x1769 (* x00 ?x2010 ?x2010 ?x2010)))
 (let ((?x1118 (+ (* (- 1) (* y00 ?x182 ?x2010 ?x2010)) ?x1769 (* (- 1) (* x00 ?x182 ?x182 ?x182 ?x2010 ?x2010 ?x2010)) ?x1786 (* (- 1) (* x00 ?x182 ?x2010 ?x2010)) ?x1811 (* (- 1) (* ?x182 ?x182 ?x182 ?x2010 ?x2010)) ?x1687 ?x1723 ?x1836 ?x1842 (* (- 1) (* ?x2010 ?x2010 ?x2010 ?x2010)) (* (- 1) (* ?x182 ?x182 ?x182 ?x182 ?x2010)) (* (- 1) ?x1147))))
 (let ((?x128 (+ 1 y)))
 (let ((?x118 (+ (- 1) x)))
 (let ((?x1672 (* y00 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1810 (* ?x118 ?x118 ?x128 ?x128)))
 (let ((?x1276 (* ?x118 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1274 (* ?x118 ?x118 ?x118 ?x128 ?x128 ?x128 ?x128)))
 (let ((?x1805 (* y00 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1686 (* y00 ?x118 ?x118 ?x118)))
 (let ((?x1226 (* x00 ?x118 ?x128 ?x128 ?x128)))
 (let ((?x1657 (* x00 ?x118 ?x118 ?x118)))
 (let ((?x1712 (+ (* (- 1) (* y00 ?x118 ?x118 ?x128)) ?x1657 (* (- 1) (* x00 ?x118 ?x118 ?x118 ?x128 ?x128 ?x128)) ?x1226 (* (- 1) (* x00 ?x118 ?x118 ?x128)) ?x1686 (* (- 1) (* ?x118 ?x118 ?x128 ?x128 ?x128)) ?x1805 ?x1274 ?x1276 ?x1810 (* (- 1) (* ?x118 ?x118 ?x118 ?x118)) (* (- 1) (* ?x118 ?x128 ?x128 ?x128 ?x128)) (* (- 1) ?x1672))))
 (let (($x1745 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x1675 (and $x1745 (or (not (= ?x1712 0)) (not (= ?x1118 0))))))
 (let ((?x66 (- y 1)))
 (let ((?x65 (+ x 1)))
 (let ((?x71 (- (+ (* (- 1) ?x65 ?x65 ?x66 y00) (* ?x65 ?x65 ?x65 x00)) (* ?x65 ?x65 ?x65 x00 ?x66 ?x66 ?x66))))
 (let ((?x75 (- (+ ?x71 (* ?x65 x00 ?x66 ?x66 ?x66)) (* ?x65 ?x65 x00 ?x66))))
 (let ((?x84 (+ (- (+ ?x75 (* ?x65 ?x65 ?x65 y00)) (* ?x65 ?x65 ?x66 ?x66 ?x66)) (* ?x65 ?x66 ?x66 ?x66 y00) (* ?x65 ?x65 ?x65 ?x66 ?x66 ?x66 ?x66) (* ?x65 ?x65 ?x65 ?x65 ?x66 ?x66 ?x66) (* ?x65 ?x65 ?x66 ?x66))))
 (let ((?x90 (- (- (- ?x84 (* ?x65 ?x65 ?x65 ?x65)) (* ?x65 ?x66 ?x66 ?x66 ?x66)) (* ?x65 ?x65 ?x65 ?x66 ?x66 ?x66 y00))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x41 (- (+ (* (- 1) ?x35 ?x35 ?x36 y00) (* ?x35 ?x35 ?x35 x00)) (* ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x45 (- (+ ?x41 (* ?x35 x00 ?x36 ?x36 ?x36)) (* ?x35 ?x35 x00 ?x36))))
 (let ((?x54 (+ (- (+ ?x45 (* ?x35 ?x35 ?x35 y00)) (* ?x35 ?x35 ?x36 ?x36 ?x36)) (* ?x35 ?x36 ?x36 ?x36 y00) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x36 ?x36))))
 (let ((?x60 (- (- (- ?x54 (* ?x35 ?x35 ?x35 ?x35)) (* ?x35 ?x36 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 y00))))
 (let (($x95 (or (not (= (+ ?x60 (* 0 ?x35 ?x35 ?x35 ?x36)) 0)) (not (= (+ ?x90 (* 0 ?x65 ?x65 ?x65 ?x66)) 0)))))
 (let (($x96 (and (= (+ (- (- x y00) x00) y) 0) $x95)))
 (rewrite (= $x96 $x1675)))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x98 (asserted $x97)))
 (let ((@x1756 (mp (mp @x98 (quant-intro (proof-bind ?x1223) (= $x97 $x1759)) $x1759) (rewrite (= $x1759 $x1759)) $x1759)))
 (let ((@x340 (mp (mp @x1756 (quant-intro (proof-bind ?x1188) (= $x1759 $x1144)) $x1144) (quant-intro (proof-bind ?x1678) (= $x1144 $x1641)) $x1641)))
 (let ((@x900 (mp~ (mp @x340 (quant-intro (proof-bind ?x2801) (= $x1641 $x2757)) $x2757) (sk (~ $x2757 $x2659)) $x2659)))
 (let ((@x2649 (mp @x900 (rewrite (= $x2659 $x1706)) $x1706)))
 (let ((@x2648 (and-elim @x2649 $x2701)))
 (let ((@x2379 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2701) $x2329)) @x2648 $x2329)))
 (let (($x615 (>= ?x2664 0)))
 (let ((@x2711 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2701) $x615)) @x2648 $x615)))
 (let (($x1262 (not (<= ?x2667 0))))
 (let (($x1257 (>= ?x2667 0)))
 (let ((@x2821 (lemma ((_ th-lemma arith) (hypothesis (not $x1257)) @x2711 @x2379 @x2711 @x2379 false) $x1257)))
 (let (($x2479 (>= ?x2611 0)))
 (let ((@x2529 (lemma ((_ th-lemma arith) (hypothesis (not $x2479)) @x2711 @x2379 @x2711 @x2379 false) $x2479)))
 (let (($x2343 (<= ?x2611 0)))
 (let ((@x2349 (lemma ((_ th-lemma arith) (hypothesis (not $x2343)) @x2711 @x2379 @x2711 @x2379 false) $x2343)))
 (let ((@x1269 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x745 (not $x2343) (not $x2479))) @x2349 @x2529 $x745)))
 (let ((@x2825 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2666 $x1262 (not $x1257))) (unit-resolution (and-elim @x2649 $x3045) @x1269 $x2702) @x2821 $x1262)))
 ((_ th-lemma arith) @x2825 @x2711 @x2379 @x2711 @x2379 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        27
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-grobner             4
 :arith-max-min             796
 :arith-nonlinear-bounds    20
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-pivots              3
 :arith-row-summations      2
 :arith-tableau-max-columns 71
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                4.10
 :memory                    3.53
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1953579
 :num-checks                1
 :propagations              14
 :rlimit-count              16481
 :time                      0.02
 :total-time                0.03)
