unsat
((set-logic NIA)
(declare-fun y!0 () Int)
(declare-fun x!1 () Int)
(proof
(let ((?x300 (+ y00 x00 (* (- 1) x!1) (* (- 1) y!0))))
 (let (($x1678 (<= ?x300 0)))
 (let (($x394 (= ?x300 0)))
 (let ((?x786 (+ 1 y!0)))
 (let ((?x954 (+ (- 1) x!1)))
 (let ((?x2136 (* ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x2019 (* x00 ?x954 ?x954 ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786)))
 (let ((?x917 (* ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x859 (* x!1 y!0 y!0 y!0 y!0)))
 (let ((?x854 (* x!1 x!1 y!0 y!0 y!0)))
 (let ((?x768 (* ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x738 (* ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x582 (* x!1 y!0 y!0)))
 (let ((?x581 (* ?x954 ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786)))
 (let ((?x251 (* y00 ?x954 ?x954 ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786)))
 (let ((?x2191 (+ y00 x00 (* x00 x!1 x!1 x!1 x!1) (* (- 3) (* y00 y!0)) (* 3 (* x!1 y!0 y!0 y!0)) (* 4 (* x!1 x!1 y!0 y!0)) (* y00 x!1 x!1 x!1 x!1 y!0) (* 6 (* x00 x!1 x!1)) (* (- 1) (* y!0 y!0 y!0 y!0)) ?x251 (* (- 4) (* y!0 y!0 y!0)) (* (- 1) (* ?x954 ?x954 ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786)) (* 12 (* y00 x!1 y!0 y!0)) (* (- 1) (* ?x954 ?x954 ?x786 ?x786 ?x786 ?x786 ?x786)) (* (- 1) (* ?x954 ?x786 ?x786 ?x786 ?x786 ?x786)) (* (- 1) (* ?x954 ?x954 ?x954 ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786)) (* (- 2) x!1) (* 13 (* x00 x!1 y!0 y!0 y!0)) (* (- 2) y!0) (* (- 1) (* ?x954 ?x954 ?x954 ?x954 ?x954 ?x786)) ?x581 ?x582 (* x00 x!1 y!0 y!0 y!0 y!0 y!0) (* (- 1) (* y00 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786 ?x786)) (* 13 (* y00 x!1 y!0 y!0 y!0)) (* 5 (* x!1 x!1 y!0)) (* (- 5) (* y!0 y!0)) (* (- 1) (* ?x954 ?x954 ?x954 ?x954 ?x786 ?x786)) (* (- 1) (* x00 ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786)) ?x738 (* (- 3) (* x!1 y!0)) ?x768 (* (- 1) (* y00 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786)) (* (- 1) (* ?x954 ?x786 ?x786 ?x786 ?x786 ?x786 ?x786)) ?x854 (* (- 1) (* ?x954 ?x954 ?x786 ?x786 ?x786 ?x786)) (* (- 1) (* x00 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786)) ?x859 ?x917 (* 2 (* x!1 x!1)) (* (- 1) (* x00 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786 ?x786)) (* y00 x!1 x!1 x!1 x!1) (* (- 4) (* y00 x!1 x!1 x!1)) (* 6 (* y00 x!1 x!1)) (* (- 4) (* y00 x!1)) (* 6 (* y00 x!1 y!0 y!0 y!0 y!0)) (* 6 (* x00 x!1 x!1 y!0)) (* (- 13) (* x00 y!0 y!0 y!0)) (* (- 4) (* y00 x!1 x!1 x!1 y!0)) (* (- 6) (* x00 y!0 y!0 y!0 y!0)) (* (- 12) (* x00 y!0 y!0)) (* 6 (* x00 x!1 y!0 y!0 y!0 y!0)) (* (- 4) (* x00 x!1 x!1 x!1)) (* (- 3) (* x00 y!0)) (* (- 4) (* x00 x!1 x!1 x!1 y!0)) (* x00 x!1 x!1 x!1 x!1 y!0) (* 6 (* y00 x!1 x!1 y!0)) (* (- 1) (* x00 y!0 y!0 y!0 y!0 y!0)) (* (- 4) (* x00 x!1)) (* (- 6) (* y00 y!0 y!0 y!0 y!0)) (* (- 1) (* y00 y!0 y!0 y!0 y!0 y!0)) (* y00 x!1 y!0 y!0 y!0 y!0 y!0) ?x2019 (* (- 1) (* y00 ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786)) (* (- 13) (* y00 y!0 y!0 y!0)) (* 2 ?x2136) (* (- 12) (* y00 y!0 y!0)) (* 12 (* x00 x!1 y!0 y!0)))))
 (let (($x1846 (= ?x2191 0)))
 (let (($x221 (not $x1846)))
 (let (($x1361 (and $x394 $x221)))
 (let ((?x500 (* ?x954 ?x954 ?x954 ?x954 ?x954 ?x786)))
 (let ((?x2045 (* y00 ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786)))
 (let ((?x254 (* ?x954 ?x954 ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x690 (* ?x954 ?x954 ?x954 ?x954 ?x786 ?x786)))
 (let ((?x691 (* x00 ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786)))
 (let ((?x247 (* y!0 y!0 y!0 y!0)))
 (let ((?x778 (* y00 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x663 (* y00 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x267 (* ?x954 ?x786 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x801 (* ?x954 ?x786 ?x786 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x269 (* ?x954 ?x954 ?x954 ?x954 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786)))
 (let ((?x263 (* ?x954 ?x954 ?x786 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x856 (* ?x954 ?x954 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x857 (* x00 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x955 (* x00 ?x954 ?x954 ?x954 ?x786 ?x786 ?x786 ?x786 ?x786)))
 (let ((?x113 (* (- 1) x00)))
 (let ((?x106 (* (- 1) y00)))
 (let ((?x179 (+ (* 2 x!1) (* 2 y!0) ?x106 ?x113 ?x955 (* 3 (* y!0 y00)) (* (- 6) (* x!1 x!1 y!0 y00)) (* 4 (* x!1 x!1 x!1 y!0 y00)) (* (- 1) (* x!1 x!1 x!1 x!1 y!0 y00)) (* 4 (* x!1 y00)) (* (- 6) (* x!1 x!1 y00)) (* 4 (* x!1 x!1 x!1 y00)) (* (- 1) (* x!1 x!1 x!1 x!1 y00)) (* 12 (* y!0 y!0 y00)) (* 13 (* y!0 y!0 y!0 y00)) (* (- 13) (* x!1 y!0 y!0 y!0 y00)) (* (- 12) (* x!1 y!0 y!0 y00)) (* 5 (* y!0 y!0)) (* 4 (* y!0 y!0 y!0)) (* (- 3) (* x!1 y!0 y!0 y!0)) (* (- 1) ?x854) (* (- 2) (* x!1 x!1)) (* 3 (* x!1 y!0)) (* (- 5) (* x!1 x!1 y!0)) (* (- 1) ?x582) (* (- 4) (* x!1 x!1 y!0 y!0)) ?x857 ?x856 (* (- 1) ?x917) (* y!0 y!0 y!0 y!0 y!0 y00) (* 6 (* y!0 y!0 y!0 y!0 y00)) (* (- 1) (* x!1 y!0 y!0 y!0 y!0 y!0 y00)) (* (- 2) ?x2136) (* (- 6) (* x!1 y!0 y!0 y!0 y!0 y00)) ?x263 ?x269 (* (- 13) (* x!1 y!0 y!0 y!0 x00)) ?x801 ?x267 (* (- 12) (* x!1 y!0 y!0 x00)) ?x663 (* 4 (* x!1 x00)) (* (- 1) ?x581) (* (- 6) (* x!1 y!0 y!0 y!0 y!0 x00)) (* 6 (* y!0 y!0 y!0 y!0 x00)) (* 13 (* y!0 y!0 y!0 x00)) (* 3 (* y!0 x00)) (* 12 (* y!0 y!0 x00)) (* (- 6) (* x!1 x!1 x00)) (* 4 (* x!1 x!1 x!1 x00)) (* (- 1) (* x!1 x!1 x!1 x!1 x00)) (* (- 6) (* x!1 x!1 y!0 x00)) (* 4 (* x!1 x!1 x!1 y!0 x00)) (* (- 1) (* x!1 x!1 x!1 x!1 y!0 x00)) ?x778 (* (- 1) ?x768) (* (- 1) ?x2019) ?x247 (* (- 1) ?x859) (* (- 1) ?x251) ?x691 (* (- 1) ?x738) ?x690 ?x254 (* (- 1) (* x!1 y!0 y!0 y!0 y!0 y!0 x00)) ?x2045 (* y!0 y!0 y!0 y!0 y!0 x00) ?x500)))
 (let (($x176 (and (= (+ x!1 y!0 ?x106 ?x113) 0) (not (= ?x179 0)))))
 (let (($x646 (exists ((x Int) (y Int) )(! (let ((?x130 (+ 1 y)))
 (let ((?x122 (+ (- 1) x)))
 (let ((?x2842 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130)))
 (let ((?x2697 (* y y y y y x00)))
 (let ((?x2612 (* y00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x2665 (* (- 1) (* x y y y y y x00))))
 (let ((?x2531 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2526 (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130)))
 (let ((?x2486 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x2298 (* x00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x2180 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x2273 (* (- 1) (* x y y y y))))
 (let ((?x2204 (* y y y y)))
 (let ((?x2322 (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1909 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x1932 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1806 (* (- 1) (* x x x x y x00))))
 (let ((?x1848 (* 4 (* x x x y x00))))
 (let ((?x1857 (* (- 6) (* x x y x00))))
 (let ((?x1803 (* (- 1) (* x x x x x00))))
 (let ((?x1856 (* 4 (* x x x x00))))
 (let ((?x1855 (* (- 6) (* x x x00))))
 (let ((?x2830 (* 6 (* y y y y x00))))
 (let ((?x2829 (* (- 6) (* x y y y y x00))))
 (let ((?x1222 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1854 (* 4 (* x x00))))
 (let ((?x1321 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2828 (* (- 12) (* x y y x00))))
 (let ((?x1304 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1303 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2827 (* (- 13) (* x y y y x00))))
 (let ((?x1163 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1161 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1951 (* (- 6) (* x y y y y y00))))
 (let ((?x944 (* (- 2) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x1040 (* (- 1) (* x y y y y y y00))))
 (let ((?x1950 (* 6 (* y y y y y00))))
 (let ((?x793 (* y y y y y y00)))
 (let ((?x844 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x665 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x561 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x914 (* (- 4) (* x x y y))))
 (let ((?x530 (* (- 1) (* x y y))))
 (let ((?x911 (* (- 5) (* x x y))))
 (let ((?x629 (* 3 (* x y))))
 (let ((?x906 (* (- 2) (* x x))))
 (let ((?x595 (* (- 1) (* x x y y y))))
 (let ((?x2319 (* (- 3) (* x y y y))))
 (let ((?x2307 (* 4 (* y y y))))
 (let ((?x2318 (* 5 (* y y))))
 (let ((?x2166 (* (- 12) (* x y y y00))))
 (let ((?x1952 (* (- 13) (* x y y y y00))))
 (let ((?x1949 (* 13 (* y y y y00))))
 (let ((?x145 (* (- 1) (* x x x x y00))))
 (let ((?x349 (* 4 (* x x x y00))))
 (let ((?x348 (* (- 6) (* x x y00))))
 (let ((?x346 (* 4 (* x y00))))
 (let ((?x148 (* (- 1) (* x x x x y y00))))
 (let ((?x331 (* 4 (* x x x y y00))))
 (let ((?x351 (* (- 6) (* x x y y00))))
 (let ((?x108 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x113 (* (- 1) x00)))
 (let ((?x106 (* (- 1) y00)))
 (let ((?x727 (* 2 y)))
 (let ((?x644 (* 2 x)))
 (let ((?x2328 (+ ?x644 ?x727 ?x106 ?x113 ?x108 (* 3 (* y y00)) ?x351 ?x331 ?x148 ?x346 ?x348 ?x349 ?x145 (* 12 (* y y y00)) ?x1949 ?x1952 ?x2166 ?x2318 ?x2307 ?x2319 ?x595 ?x906 ?x629 ?x911 ?x530 ?x914 ?x561 ?x665 ?x844 ?x793 ?x1950 ?x1040 ?x944 ?x1951 ?x1161 ?x1163 ?x2827 ?x1303 ?x1304 ?x2828 ?x1321 ?x1854 ?x1222 ?x2829 ?x2830 (* 13 (* y y y x00)) (* 3 (* y x00)) (* 12 (* y y x00)) ?x1855 ?x1856 ?x1803 ?x1857 ?x1848 ?x1806 ?x1932 ?x1909 ?x2322 ?x2204 ?x2273 ?x2180 ?x2298 ?x2486 ?x2526 ?x2531 ?x2665 ?x2612 ?x2697 ?x2842)))
 (let (($x132 (= (+ x y ?x106 ?x113) 0)))
 (and $x132 (not (= ?x2328 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!26))
 ))
 (let (($x609 (exists ((x Int) (y Int) )(! (let ((?x130 (+ 1 y)))
 (let ((?x122 (+ (- 1) x)))
 (let ((?x2612 (* y00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x2842 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130)))
 (let ((?x1932 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2526 (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130)))
 (let ((?x2531 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2322 (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x2486 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x2298 (* x00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1909 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x2180 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1303 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1304 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1321 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1222 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1163 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1161 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x944 (* (- 2) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x844 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x665 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x561 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x108 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2392 (+ ?x108 ?x561 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x130)) (* y00 ?x122 ?x130 ?x130 ?x130) (* (- 1) (* ?x122 ?x122 ?x130 ?x130 ?x130)) ?x665 ?x844 ?x944 (* (- 1) (* ?x122 ?x122 ?x130 ?x130)) (* (- 1) (* y00 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)) ?x1161 ?x1163 ?x1222 ?x1321 (* x00 ?x122 ?x130 ?x130) ?x1304 ?x1303 (* (- 1) (* x00 ?x122 ?x130 ?x130 ?x130 ?x130)) (* x00 ?x122 ?x130 ?x130 ?x130) (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x130)) ?x2180 ?x1909 ?x2298 (* (- 1) (* y00 ?x122 ?x130 ?x130 ?x130 ?x130)) (* (- 1) (* ?x122 ?x130 ?x130 ?x130)) (* y00 ?x122 ?x130 ?x130) (* (- 1) (* ?x122 ?x130 ?x130 ?x130 ?x130)) ?x2486 ?x2322 ?x2531 ?x2526 ?x1932 (* (- 1) (* x00 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)) ?x2842 ?x2612)))
 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (not (= ?x2392 0))))))))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x894 (lambda ((x Int) (y Int) )(let ((?x130 (+ 1 y)))
 (let ((?x122 (+ (- 1) x)))
 (let ((?x2842 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130)))
 (let ((?x2697 (* y y y y y x00)))
 (let ((?x2612 (* y00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x2665 (* (- 1) (* x y y y y y x00))))
 (let ((?x2531 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2526 (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130)))
 (let ((?x2486 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x2298 (* x00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x2180 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x2273 (* (- 1) (* x y y y y))))
 (let ((?x2204 (* y y y y)))
 (let ((?x2322 (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1909 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x1932 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1806 (* (- 1) (* x x x x y x00))))
 (let ((?x1848 (* 4 (* x x x y x00))))
 (let ((?x1857 (* (- 6) (* x x y x00))))
 (let ((?x1803 (* (- 1) (* x x x x x00))))
 (let ((?x1856 (* 4 (* x x x x00))))
 (let ((?x1855 (* (- 6) (* x x x00))))
 (let ((?x2830 (* 6 (* y y y y x00))))
 (let ((?x2829 (* (- 6) (* x y y y y x00))))
 (let ((?x1222 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1854 (* 4 (* x x00))))
 (let ((?x1321 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2828 (* (- 12) (* x y y x00))))
 (let ((?x1304 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1303 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2827 (* (- 13) (* x y y y x00))))
 (let ((?x1163 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1161 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1951 (* (- 6) (* x y y y y y00))))
 (let ((?x944 (* (- 2) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x1040 (* (- 1) (* x y y y y y y00))))
 (let ((?x1950 (* 6 (* y y y y y00))))
 (let ((?x793 (* y y y y y y00)))
 (let ((?x844 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x665 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x561 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x914 (* (- 4) (* x x y y))))
 (let ((?x530 (* (- 1) (* x y y))))
 (let ((?x911 (* (- 5) (* x x y))))
 (let ((?x629 (* 3 (* x y))))
 (let ((?x906 (* (- 2) (* x x))))
 (let ((?x595 (* (- 1) (* x x y y y))))
 (let ((?x2319 (* (- 3) (* x y y y))))
 (let ((?x2307 (* 4 (* y y y))))
 (let ((?x2318 (* 5 (* y y))))
 (let ((?x2166 (* (- 12) (* x y y y00))))
 (let ((?x1952 (* (- 13) (* x y y y y00))))
 (let ((?x1949 (* 13 (* y y y y00))))
 (let ((?x145 (* (- 1) (* x x x x y00))))
 (let ((?x349 (* 4 (* x x x y00))))
 (let ((?x348 (* (- 6) (* x x y00))))
 (let ((?x346 (* 4 (* x y00))))
 (let ((?x148 (* (- 1) (* x x x x y y00))))
 (let ((?x331 (* 4 (* x x x y y00))))
 (let ((?x351 (* (- 6) (* x x y y00))))
 (let ((?x108 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x113 (* (- 1) x00)))
 (let ((?x106 (* (- 1) y00)))
 (let ((?x727 (* 2 y)))
 (let ((?x644 (* 2 x)))
 (let ((?x2328 (+ ?x644 ?x727 ?x106 ?x113 ?x108 (* 3 (* y y00)) ?x351 ?x331 ?x148 ?x346 ?x348 ?x349 ?x145 (* 12 (* y y y00)) ?x1949 ?x1952 ?x2166 ?x2318 ?x2307 ?x2319 ?x595 ?x906 ?x629 ?x911 ?x530 ?x914 ?x561 ?x665 ?x844 ?x793 ?x1950 ?x1040 ?x944 ?x1951 ?x1161 ?x1163 ?x2827 ?x1303 ?x1304 ?x2828 ?x1321 ?x1854 ?x1222 ?x2829 ?x2830 (* 13 (* y y y x00)) (* 3 (* y x00)) (* 12 (* y y x00)) ?x1855 ?x1856 ?x1803 ?x1857 ?x1848 ?x1806 ?x1932 ?x1909 ?x2322 ?x2204 ?x2273 ?x2180 ?x2298 ?x2486 ?x2526 ?x2531 ?x2665 ?x2612 ?x2697 ?x2842)))
 (let (($x132 (= (+ x y ?x106 ?x113) 0)))
 (let (($x2488 (and $x132 (not (= ?x2328 0)))))
 (let ((?x2392 (+ ?x108 ?x561 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x130)) (* y00 ?x122 ?x130 ?x130 ?x130) (* (- 1) (* ?x122 ?x122 ?x130 ?x130 ?x130)) ?x665 ?x844 ?x944 (* (- 1) (* ?x122 ?x122 ?x130 ?x130)) (* (- 1) (* y00 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)) ?x1161 ?x1163 ?x1222 ?x1321 (* x00 ?x122 ?x130 ?x130) ?x1304 ?x1303 (* (- 1) (* x00 ?x122 ?x130 ?x130 ?x130 ?x130)) (* x00 ?x122 ?x130 ?x130 ?x130) (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x130)) ?x2180 ?x1909 ?x2298 (* (- 1) (* y00 ?x122 ?x130 ?x130 ?x130 ?x130)) (* (- 1) (* ?x122 ?x130 ?x130 ?x130)) (* y00 ?x122 ?x130 ?x130) (* (- 1) (* ?x122 ?x130 ?x130 ?x130 ?x130)) ?x2486 ?x2322 ?x2531 ?x2526 ?x1932 (* (- 1) (* x00 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)) ?x2842 ?x2612)))
 (let (($x1065 (and (= (+ x ?x106 ?x113 y) 0) (not (= ?x2392 0)))))
 (rewrite (= $x1065 $x2488)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((x Int) (y Int) )(! (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x38 (+ (* ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x42 (+ (- ?x38 (* ?x34 ?x34 ?x34 ?x34 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35 y00))))
 (let ((?x46 (+ (- ?x42 (* ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x53 (- (- ?x46 (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35)) (* 2 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x55 (- (- ?x53 (* ?x34 ?x34 ?x35 ?x35)) (* ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 y00))))
 (let ((?x58 (+ ?x55 (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35))))
 (let ((?x65 (+ (- ?x58 (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 y00) (* ?x34 x00 ?x35 ?x35) (* ?x34 ?x35 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x69 (+ (- ?x65 (* ?x34 x00 ?x35 ?x35 ?x35 ?x35)) (* ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x74 (- (- ?x69 (* ?x34 ?x34 ?x34 ?x34 x00 ?x35)) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (let ((?x77 (+ (- ?x74 (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x81 (- (- ?x77 (* ?x34 ?x35 ?x35 ?x35 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35))))
 (let ((?x88 (- (- (+ ?x81 (* ?x34 ?x35 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x93 (+ (- ?x88 (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 y00))))
 (let ((?x98 (+ (- ?x93 (* ?x34 x00 ?x35 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x35) (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x98 0)))))))))))))))))))) :qid k!26))
 ))
 (let ((?x605 (lambda ((x Int) (y Int) )(let ((?x130 (+ 1 y)))
 (let ((?x122 (+ (- 1) x)))
 (let ((?x2612 (* y00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x2842 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130)))
 (let ((?x1932 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2526 (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130)))
 (let ((?x2531 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2322 (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x2486 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x2298 (* x00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1909 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x2180 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1303 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1304 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1321 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1222 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1163 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1161 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x944 (* (- 2) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x844 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x665 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x561 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x108 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2392 (+ ?x108 ?x561 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x130)) (* y00 ?x122 ?x130 ?x130 ?x130) (* (- 1) (* ?x122 ?x122 ?x130 ?x130 ?x130)) ?x665 ?x844 ?x944 (* (- 1) (* ?x122 ?x122 ?x130 ?x130)) (* (- 1) (* y00 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)) ?x1161 ?x1163 ?x1222 ?x1321 (* x00 ?x122 ?x130 ?x130) ?x1304 ?x1303 (* (- 1) (* x00 ?x122 ?x130 ?x130 ?x130 ?x130)) (* x00 ?x122 ?x130 ?x130 ?x130) (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x130)) ?x2180 ?x1909 ?x2298 (* (- 1) (* y00 ?x122 ?x130 ?x130 ?x130 ?x130)) (* (- 1) (* ?x122 ?x130 ?x130 ?x130)) (* y00 ?x122 ?x130 ?x130) (* (- 1) (* ?x122 ?x130 ?x130 ?x130 ?x130)) ?x2486 ?x2322 ?x2531 ?x2526 ?x1932 (* (- 1) (* x00 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)) ?x2842 ?x2612)))
 (let (($x1065 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (not (= ?x2392 0)))))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x38 (+ (* ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x42 (+ (- ?x38 (* ?x34 ?x34 ?x34 ?x34 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35 y00))))
 (let ((?x46 (+ (- ?x42 (* ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x53 (- (- ?x46 (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35)) (* 2 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x55 (- (- ?x53 (* ?x34 ?x34 ?x35 ?x35)) (* ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 y00))))
 (let ((?x58 (+ ?x55 (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35))))
 (let ((?x65 (+ (- ?x58 (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 y00) (* ?x34 x00 ?x35 ?x35) (* ?x34 ?x35 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x69 (+ (- ?x65 (* ?x34 x00 ?x35 ?x35 ?x35 ?x35)) (* ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x74 (- (- ?x69 (* ?x34 ?x34 ?x34 ?x34 x00 ?x35)) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (let ((?x77 (+ (- ?x74 (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x81 (- (- ?x77 (* ?x34 ?x35 ?x35 ?x35 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35))))
 (let ((?x88 (- (- (+ ?x81 (* ?x34 ?x35 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x93 (+ (- ?x88 (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 y00))))
 (let ((?x98 (+ (- ?x93 (* ?x34 x00 ?x35 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x35) (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (let (($x102 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x98 0))))))
 (rewrite (= $x102 $x1065)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x1715 (mp (mp @x104 (quant-intro (proof-bind ?x605) (= $x103 $x609)) $x609) (rewrite (= $x609 $x609)) $x609)))
 (let ((@x1118 (mp~ (mp @x1715 (quant-intro (proof-bind ?x894) (= $x609 $x646)) $x646) (sk (~ $x646 $x176)) $x176)))
 (let ((@x414 (mp @x1118 (rewrite (= $x176 $x1361)) $x1361)))
 (let ((@x133 (and-elim @x414 $x394)))
 (let ((@x270 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x394) $x1678)) @x133 $x1678)))
 (let (($x171 (>= ?x300 0)))
 (let ((@x1398 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x394) $x171)) @x133 $x171)))
 (let (($x342 (not (>= ?x2191 0))))
 (let (($x1534 (<= ?x2191 0)))
 (let ((@x401 (lemma ((_ th-lemma arith) (hypothesis (not $x1534)) @x1398 @x270 @x1398 @x270 false) $x1534)))
 (let ((@x850 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1846 (not $x1534) $x342)) (and-elim @x414 $x221) (or (not $x1534) $x342))))
 ((_ th-lemma arith) (unit-resolution @x850 @x401 $x342) @x1398 @x270 @x1398 @x270 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 1
 :arith-assert-diseq        1
 :arith-assert-lower        19
 :arith-assert-upper        3
 :arith-conflicts           2
 :arith-eq-adapter          2
 :arith-gcd-tests           3
 :arith-grobner             2
 :arith-max-min             545
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    8
 :arith-num-rows            4
 :arith-patches             3
 :arith-patches_succ        3
 :arith-pivots              3
 :arith-row-summations      1
 :arith-tableau-max-columns 89
 :arith-tableau-max-rows    4
 :conflicts                 2
 :decisions                 1
 :del-clause                7
 :final-checks              4
 :max-memory                4.08
 :memory                    3.52
 :mk-bool-var               12
 :mk-clause                 7
 :num-allocs                2099399
 :num-checks                1
 :propagations              4
 :rlimit-count              10308
 :time                      0.02
 :total-time                0.03)
