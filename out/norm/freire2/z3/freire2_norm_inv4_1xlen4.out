unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x9601 (* (- 1) s!1)))
 (let ((?x440 (* r00 r00)))
 (let ((?x4682 (* (- 3) ?x440)))
 (let ((?x1582 (+ s00 ?x4682 ?x9601 (* 3 (* r!2 r!2)))))
 (let (($x4294 (<= ?x1582 0)))
 (let (($x11124 (= ?x1582 0)))
 (let ((?x10158 (* 6 r!2)))
 (let ((?x2033 (+ 3 s!1 ?x10158)))
 (let ((?x10156 (+ ?x9601 x!0)))
 (let ((?x9600 (+ 1 r!2)))
 (let ((?x10556 (+ (* 756 (* r00 r00 x00 s!1 x!0 x!0 r!2)) (* 216 (* r00 s!1 x!0 x!0 x!0 r!2 r!2)) (* 24 (* r00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033 ?x2033)) (* (- 10) (* s00 s00 r00 x!0 x!0 x!0 r!2 r!2)) (* (- 162) (* r00 x00 x!0 x!0 x!0 r!2 r!2)) (* (- 72) (* s00 s!1 s!1 x!0 r!2 r!2 r!2)) (* 15 (* s00 s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033)) (* 168 (* s00 r00 x!0 x!0 x!0 r!2)) (* 24 (* s00 r00 s!1 x!0 x!0 x!0 r!2)) (* 36 (* r00 x00 x!0 x!0 x!0 r!2 r!2 r!2)) (* (- 108) (* r00 r00 x00 s!1 s!1 s!1 x!0)) (* 48 (* s00 r00 x!0 x!0 x!0)) (* (- 162) (* r00 x00 s!1 s!1 s!1 x!0 r!2)) (* (- 12) (* s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033 ?x2033)) (* (- 216) (* r00 x00 s!1 s!1 x!0)) (* 72 (* r00 x00 s!1 s!1 s!1)) (* 24 (* ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033)) (* (- 6) (* s00 s00 r00 s!1 s!1 s!1 x!0 r!2)) (* (- 486) (* r00 x00 s!1 s!1 x!0 r!2 r!2)) (* 6 (* s00 s00 r00 s!1 s!1 x!0 x!0 r!2)) (* (- 6) (* s00 s00 r00 s!1 s!1 s!1 x!0)) (* 162 (* r00 x00 s!1 s!1 x!0 x!0)) (* (- 504) (* s00 r00 s!1 x!0 x!0 r!2)) (* (- 117) (* s00 x!0 x!0 x!0 r!2 r!2)) (* (- 72) (* s00 r00 s!1 s!1 x!0 x!0)) (* 72 (* s00 s!1 x!0 x!0 r!2 r!2 r!2)) (* 72 (* s00 r00 s!1 s!1 s!1 x!0 r!2)) (* (- 4) (* s00 s00 r00 x!0 x!0 x!0)) (* 54 (* r00 x00 s!1 s!1 s!1 s!1)) (* 24 (* s00 r00 s!1 x!0 x!0 x!0)) (* (- 36) (* r00 x00 s!1 s!1 s!1 r!2 r!2 r!2)) (* 54 (* r00 x00 s!1 s!1 s!1 s!1 r!2)) (* 405 (* s00 s!1 x!0 x!0 r!2)) (* (- 54) (* r00 s!1 s!1 s!1 s!1)) (* (- 2) (* s00 s00 r00 s!1 x!0 x!0 x!0)) (* (- 24) (* s00 ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033)) (* (- 54) (* ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156)) (* 189 (* s00 s00 s!1 x!0 x!0 r!2 r!2)) (* (- 78) (* s00 s00 s!1 s!1 x!0)) (* (- 36) (* r00 r00 s00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* (- 180) (* r00 r00 x00 x!0 x!0 x!0 r!2 r!2)) (* (- 24) (* s00 x!0 x!0 x!0 r!2 r!2 r!2)) (* 36 (* r00 r00 x00 s!1 s!1 s!1 s!1 r!2)) (* (- 126) (* s00 s!1 s!1 x!0)) (* 42 (* s00 s!1 s!1 s!1)) (* 252 (* r00 r00 x00 s!1 s!1 s!1 r!2)) (* 4 (* s00 s00 r00 s!1 s!1 s!1)) (* (- 14) (* s00 s00 r00 x!0 x!0 x!0 r!2)) (* 54 (* x00 ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033)) (* (- 24) (* r00 s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033)) (* 162 (* r00 x00 s!1 s!1 x!0 x!0 r!2)) (* 4 (* s00 s00 x!0 x!0 x!0 r!2 r!2 r!2)) (* (- 36) (* r00 r00 x00 s!1 x!0 x!0 x!0 r!2)) (* (- 12) (* s00 s00 s!1 x!0 x!0 r!2 r!2 r!2)) (* (- 144) (* s00 r00 s!1 x!0 x!0)) (* 78 (* s00 s00 s!1 x!0 x!0)) (* 12 (* s00 s00 r00 s!1 x!0 x!0)) (* 270 (* r00 x00 s!1 s!1 s!1 r!2)) (* 162 (* r00 x00 s!1 s!1 s!1 r!2 r!2)) (* 2 (* r00 s00 s00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 42 (* s00 s00 r00 s!1 x!0 x!0 r!2)) (* 12 (* s00 s00 s!1 s!1 x!0 r!2 r!2 r!2)) (* (- 540) (* r00 r00 x00 s!1 s!1 x!0 r!2 r!2)) (* 810 (* r00 x00 s!1 x!0 x!0 r!2)) (* (- 54) (* r00 x00 s!1 x!0 x!0 x!0 r!2)) (* (- 108) (* r00 x!0 x!0 x!0 x!0 r!2)) (* (- 2) (* ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033)) (* (- 486) (* x00 s!1 x!0 x!0 r!2 r!2)) (* (- 6) (* s00 x00 s!1 s!1 s!1 s!1)) (* 36 (* r00 r00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033 ?x2033)) (* 2 (* ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 144 (* s00 r00 s!1 s!1 x!0)) (* (- 26) (* s00 s00 x!0 x!0 x!0)) (* 135 (* s00 s!1 s!1 s!1 r!2)) (* (- 108) (* r00 r00 x00 s!1 s!1 s!1 x!0 r!2)) (* (- 54) (* r00 x00 s!1 x!0 x!0 x!0)) (* 144 (* r00 r00 s!1 s!1 s!1 x!0)) (* 486 (* r00 x00 s!1 x!0 x!0 r!2 r!2)) (* (- 2) (* ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033 ?x2033)) (* 162 (* x00 s!1 s!1 x!0 r!2 r!2 r!2)) (* (- 108) (* r00 s!1 s!1 s!1 s!1 r!2)) (* (- 360) (* s00 r00 s!1 x!0 x!0 r!2 r!2)) (* (- 72) (* s00 r00 s!1 s!1 x!0 x!0 r!2)) (* 288 (* r00 r00 s!1 s!1 s!1 x!0 r!2)) (* (- 4) (* r00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033 ?x2033)) (* 540 (* r00 r00 x00 s!1 x!0 x!0 r!2 r!2)) (* 360 (* s00 r00 s!1 s!1 x!0 r!2 r!2)) (* (- 168) (* s00 r00 s!1 s!1 s!1 r!2)) (* (- 93) (* s00 s00 x!0 x!0 x!0 r!2)) (* (- 30) (* s00 x00 s!1 s!1 s!1 r!2 r!2)) (* 486 (* x00 s!1 s!1 x!0 r!2 r!2)) (* (- 54) (* r00 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x2033 ?x2033)) (* 54 (* x00 x!0 x!0 x!0)) (* 54 (* x00 x!0 x!0 x!0 r!2 r!2 r!2)) (* 36 (* r00 x00 ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033)) (* (- 6) (* s00 x00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033)) (* (- 36) (* r00 r00 s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033)) (* (- 36) (* r00 r00 ?x10156 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 3 (* ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 30 (* s00 s00 r00 s!1 x!0 x!0 r!2 r!2)) (* (- 48) (* x00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033)) (* (- 72) (* r00 r00 s!1 s!1 s!1 s!1 r!2)) (* 4 (* s00 s00 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 54 (* x00 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 216 (* r00 s!1 s!1 s!1 x!0 r!2 r!2)) (* (- 648) (* r00 s!1 s!1 x!0 x!0 r!2)) (* 2 (* r00 s00 s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033)) (* (- 24) (* s00 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* (- 33) (* s00 s!1 x!0 x!0 x!0)) (* (- 30) (* s00 s00 r00 s!1 s!1 x!0 r!2 r!2)) (* (- 42) (* s00 s00 r00 s!1 s!1 x!0 r!2)) (* (- 2) (* s00 ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033 ?x2033)) (* 216 (* r00 s!1 s!1 s!1 x!0)) (* 126 (* s00 x00 s!1 s!1 x!0 r!2)) (* (- 54) (* r00 ?x10156 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* (- 6) (* x00 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033)) (* (- 9) (* ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033)) (* (- 42) (* s00 x00 s!1 s!1 s!1 r!2)) (* (- 6) (* s00 x00 s!1 s!1 s!1 s!1 r!2)) (* (- 36) (* s00 x00 s!1 x!0 x!0)) (* 12 (* s00 x00 x!0 x!0 x!0)) (* (- 279) (* s00 s00 s!1 s!1 x!0 r!2)) (* (- 72) (* r00 r00 x!0 x!0 x!0 x!0 r!2)) (* 9 (* s00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* (- 810) (* r00 x00 s!1 s!1 x!0 r!2)) (* 24 (* r00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033)) (* 144 (* r00 r00 s!1 x!0 x!0 x!0 r!2 r!2)) (* 36 (* r00 r00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033)) (* 288 (* r00 r00 s!1 x!0 x!0 x!0 r!2)) (* (- 162) (* x00 s!1 x!0 x!0)) (* (- 486) (* x00 s!1 x!0 x!0 r!2)) (* (- 36) (* r00 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 4 (* r00 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* (- 54) (* x00 s!1 s!1 s!1)) (* (- 162) (* x00 s!1 x!0 x!0 r!2 r!2 r!2)) (* (- 36) (* r00 ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x2033 ?x2033)) (* (- 162) (* x00 s!1 s!1 s!1 r!2)) (* (- 162) (* x00 s!1 s!1 s!1 r!2 r!2)) (* (- 54) (* x00 s!1 s!1 s!1 r!2 r!2 r!2)) (* 162 (* x00 s!1 s!1 x!0)) (* 486 (* x00 s!1 s!1 x!0 r!2)) (* 216 (* r00 s!1 x!0 x!0 x!0)) (* 162 (* x00 x!0 x!0 x!0 r!2 r!2)) (* 144 (* r00 r00 s!1 s!1 s!1 x!0 r!2 r!2)) (* (- 24) (* r00 s00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* (- 2) (* s00 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033)) (* 24 (* s00 s!1 s!1 s!1 r!2 r!2 r!2)) (* (- 108) (* r00 x00 s!1 x!0 x!0 r!2 r!2 r!2)) (* (- 36) (* s00 r00 r00 s!1 s!1 s!1 s!1 r!2)) (* 2 (* r00 s00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033)) (* 108 (* s00 r00 r00 s!1 s!1 s!1 x!0 r!2)) (* 24 (* ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033)) (* (- 270) (* r00 x00 x!0 x!0 x!0 r!2)) (* (- 36) (* r00 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156)) (* 6 (* s00 ?x10156 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 72 (* s00 r00 s!1 s!1 s!1 x!0)) (* 36 (* r00 r00 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x2033)) (* (- 12) (* s00 s00 r00 s!1 s!1 x!0)) (* (- 2) (* s00 s00 r00 s!1 x!0 x!0 x!0 r!2)) (* (- 42) (* s00 x!0 x!0 x!0)) (* 12 (* s00 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033)) (* (- 4) (* s00 s00 s!1 s!1 s!1 r!2 r!2 r!2)) (* 6 (* s00 x!0 x!0 x!0 x!0 r!2 r!2)) (* 36 (* r00 r00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033)) (* (- 216) (* r00 r00 s!1 s!1 x!0 x!0)) (* (- 54) (* r00 s!1 s!1 s!1 s!1 r!2 r!2)) (* 93 (* s00 s00 s!1 s!1 s!1 r!2)) (* 14 (* s00 s00 r00 s!1 s!1 s!1 r!2)) (* (- 36) (* r00 r00 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033)) (* 10 (* s00 s00 r00 s!1 s!1 s!1 r!2 r!2)) (* 4 (* s00 s00 ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033)) (* 36 (* r00 r00 x00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 15 (* s00 s00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 24 (* ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033 ?x2033)) (* 48 (* ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x2033)) (* 2 (* r00 s00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033)) (* (- 48) (* s00 r00 s!1 s!1 s!1)) (* 36 (* s00 x00 s!1 s!1 x!0)) (* (- 12) (* s00 x00 s!1 s!1 s!1)) (* (- 36) (* r00 r00 x00 s!1 x!0 x!0 x!0)) (* 12 (* s00 x!0 x!0 x!0 x!0 r!2)) (* 9 (* s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033)) (* (- 120) (* s00 r00 s!1 s!1 s!1 r!2 r!2)) (* 216 (* r00 x00 s!1 x!0 x!0)) (* 6 (* s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x2033 ?x2033)) (* (- 4) (* r00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033)) (* 54 (* r00 x00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 108 (* r00 x00 s!1 s!1 x!0 r!2 r!2 r!2)) (* 504 (* s00 r00 s!1 s!1 x!0 r!2)) (* 6 (* s00 x!0 x!0 x!0 x!0)) (* 117 (* s00 s!1 s!1 s!1 r!2 r!2)) (* (- 405) (* s00 s!1 s!1 x!0 r!2)) (* (- 351) (* s00 s!1 s!1 x!0 r!2 r!2)) (* 351 (* s00 s!1 x!0 x!0 r!2 r!2)) (* (- 135) (* s00 x!0 x!0 x!0 r!2)) (* (- 36) (* r00 r00 s!1 s!1 s!1 s!1)) (* (- 216) (* r00 r00 s!1 s!1 x!0 x!0 r!2 r!2)) (* (- 432) (* r00 r00 s!1 s!1 x!0 x!0 r!2)) (* 432 (* r00 s!1 x!0 x!0 x!0 r!2)) (* 6 (* s00 s00 r00 s!1 s!1 x!0 x!0)) (* (- 36) (* r00 r00 s!1 s!1 s!1 s!1 r!2 r!2)) (* 15 (* s00 s!1 s!1 s!1 s!1)) (* 21 (* s00 s!1 s!1 s!1 s!1 r!2)) (* (- 51) (* s00 s!1 s!1 s!1 x!0)) (* 6 (* s00 s!1 s!1 s!1 s!1 r!2 r!2)) (* (- 75) (* s00 s!1 s!1 s!1 x!0 r!2)) (* (- 24) (* s00 s!1 s!1 s!1 x!0 r!2 r!2)) (* 63 (* s00 s!1 s!1 x!0 x!0)) (* 99 (* s00 s!1 s!1 x!0 x!0 r!2)) (* 36 (* s00 s!1 s!1 x!0 x!0 r!2 r!2)) (* 2 (* s00 s00 r00 s!1 s!1 s!1 s!1)) (* 2 (* s00 s00 r00 s!1 s!1 s!1 s!1 r!2)) (* 36 (* r00 r00 x00 s!1 s!1 s!1 s!1)) (* (- 72) (* r00 x00 x!0 x!0 x!0)) (* 36 (* r00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x2033)) (* (- 12) (* s00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033)) (* 120 (* s00 r00 x!0 x!0 x!0 r!2 r!2)) (* (- 24) (* s00 s!1 x!0 x!0 x!0 r!2 r!2)) (* 18 (* s00 x00 s!1 s!1 s!1 x!0 r!2)) (* 126 (* s00 s!1 x!0 x!0)) (* (- 189) (* s00 s00 s!1 s!1 x!0 r!2 r!2)) (* 36 (* r00 x00 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 6 (* s00 x00 s!1 x!0 x!0 x!0 r!2)) (* 90 (* s00 x00 s!1 s!1 x!0 r!2 r!2)) (* 18 (* s00 x00 s!1 s!1 s!1 x!0)) (* 26 (* s00 s00 s!1 s!1 s!1)) (* 252 (* s00 r00 r00 x!0 x!0 x!0 r!2)) (* (- 126) (* s00 x00 s!1 x!0 x!0 r!2)) (* 42 (* s00 x00 x!0 x!0 x!0 r!2)) (* (- 90) (* s00 x00 s!1 x!0 x!0 r!2 r!2)) (* (- 18) (* s00 x00 s!1 s!1 x!0 x!0)) (* (- 57) (* s00 s!1 x!0 x!0 x!0 r!2)) (* (- 54) (* ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x2033 ?x2033)) (* 108 (* s00 r00 r00 s!1 s!1 s!1 x!0)) (* 12 (* s00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033)) (* 756 (* s00 r00 r00 s!1 s!1 x!0 r!2)) (* (- 756) (* s00 r00 r00 s!1 x!0 x!0 r!2)) (* 540 (* s00 r00 r00 s!1 s!1 x!0 r!2 r!2)) (* (- 2) (* s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033)) (* (- 6) (* ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 216 (* s00 r00 r00 s!1 s!1 x!0)) (* (- 252) (* s00 r00 r00 s!1 s!1 s!1 r!2)) (* (- 72) (* s00 r00 r00 s!1 s!1 s!1)) (* (- 36) (* r00 r00 x!0 x!0 x!0 x!0)) (* (- 162) (* r00 x00 s!1 s!1 s!1 x!0)) (* (- 756) (* r00 r00 x00 s!1 s!1 x!0 r!2)) (* 144 (* r00 r00 s!1 x!0 x!0 x!0)) (* (- 24) (* s00 r00 s!1 s!1 s!1 s!1 r!2)) (* (- 24) (* s00 r00 s!1 s!1 s!1 s!1)) (* (- 252) (* r00 r00 x00 x!0 x!0 x!0 r!2)) (* 6 (* s00 x00 s!1 x!0 x!0 x!0)) (* 72 (* s00 r00 r00 x!0 x!0 x!0)) (* (- 540) (* s00 r00 r00 s!1 x!0 x!0 r!2 r!2)) (* 30 (* s00 x00 x!0 x!0 x!0 r!2 r!2)) (* 24 (* r00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033)) (* 54 (* r00 x00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033)) (* 15 (* s00 s00 s!1 s!1 s!1 s!1)) (* (- 6) (* ?x10156 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033)) (* (- 15) (* s00 s00 s!1 x!0 x!0 x!0)) (* (- 54) (* ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)) (* 108 (* r00 r00 x00 s!1 s!1 x!0 x!0)) (* 15 (* s00 s00 s!1 s!1 s!1 s!1 r!2)) (* 9 (* ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033)) (* (- 216) (* s00 r00 r00 s!1 x!0 x!0)) (* (- 27) (* ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033)) (* (- 36) (* r00 r00 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x2033 ?x2033)) (* (- 6) (* s00 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x2033)) (* (- 36) (* r00 x00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033)) (* (- 18) (* s00 x00 s!1 s!1 x!0 x!0 r!2)) (* (- 45) (* s00 s00 s!1 s!1 s!1 x!0)) (* (- 216) (* r00 r00 x00 s!1 s!1 x!0)) (* (- 180) (* s00 r00 r00 s!1 s!1 s!1 r!2 r!2)) (* (- 4) (* r00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033)) (* (- 108) (* s00 r00 r00 s!1 s!1 x!0 x!0 r!2)) (* 6 (* ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033)) (* 36 (* s00 r00 r00 s!1 x!0 x!0 x!0 r!2)) (* 36 (* s00 r00 r00 s!1 x!0 x!0 x!0)) (* 180 (* s00 r00 r00 x!0 x!0 x!0 r!2 r!2)) (* 108 (* r00 r00 x00 s!1 s!1 x!0 x!0 r!2)) (* (- 108) (* s00 r00 r00 s!1 s!1 x!0 x!0)) (* 2 (* r00 s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033 ?x2033)) (* (- 9) (* ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033 ?x2033)) (* 45 (* s00 s00 s!1 s!1 x!0 x!0)) (* 432 (* r00 s!1 s!1 s!1 x!0 r!2)) (* (- 36) (* s00 r00 r00 s!1 s!1 s!1 s!1)) (* (- 2) (* r00 s00 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033)) (* 2 (* s00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033)) (* (- 3) (* ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033)) (* 6 (* x00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033)) (* 54 (* r00 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x2033)) (* (- 4) (* s00 s00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033)) (* (- 3) (* ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033 ?x2033)) (* (- 45) (* s00 s00 s!1 s!1 s!1 x!0 r!2)) (* (- 15) (* s00 s00 s!1 x!0 x!0 x!0 r!2)) (* 45 (* s00 s00 s!1 s!1 x!0 x!0 r!2)) (* (- 9) (* ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033 ?x2033)) (* 6 (* x00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033 ?x2033)) (* (- 24) (* r00 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033)) (* 36 (* r00 r00 x00 ?x9600 ?x9600 ?x9600 ?x10156 ?x2033 ?x2033)) (* (- 36) (* r00 r00 x!0 x!0 x!0 x!0 r!2 r!2)) (* (- 54) (* r00 x!0 x!0 x!0 x!0 r!2 r!2)) (* (- 54) (* r00 x!0 x!0 x!0 x!0)) (* (- 72) (* r00 r00 x00 x!0 x!0 x!0)) (* 180 (* r00 r00 x00 s!1 s!1 s!1 r!2 r!2)) (* 162 (* x00 x!0 x!0 x!0 r!2)) (* (- 324) (* r00 s!1 s!1 x!0 x!0 r!2 r!2)) (* 72 (* r00 r00 x00 s!1 s!1 s!1)) (* (- 2) (* ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033)) (* (- 324) (* r00 s!1 s!1 x!0 x!0)) (* 63 (* s00 s00 s!1 s!1 s!1 r!2 r!2)) (* (- 63) (* s00 s00 x!0 x!0 x!0 r!2 r!2)) (* 279 (* s00 s00 s!1 x!0 x!0 r!2)) (* 216 (* r00 r00 x00 s!1 x!0 x!0)) (* (- 6) (* s00 x00 ?x10156 ?x10156 ?x10156 ?x2033 ?x2033 ?x2033)))))
 (let (($x9987 (= ?x10556 0)))
 (let (($x10579 (not $x9987)))
 (let ((?x1593 (* r00 r00 s!1)))
 (let ((?x3617 (* 36 ?x1593)))
 (let ((?x1485 (* x00 x00)))
 (let ((?x5857 (* 108 ?x1485)))
 (let ((?x9899 (* (- 9) s!1)))
 (let ((?x1323 (* s00 s00 s00)))
 (let ((?x8628 (* 16 ?x1323)))
 (let ((?x1021 (* r00 r00 r00 x00)))
 (let ((?x8353 (* (- 432) ?x1021)))
 (let ((?x944 (* s00 x00)))
 (let ((?x8583 (* (- 108) ?x944)))
 (let ((?x786 (* s00 r00 r00)))
 (let ((?x8280 (* (- 36) ?x786)))
 (let ((?x730 (* s00 s00)))
 (let ((?x8671 (* 51 ?x730)))
 (let ((?x661 (* r00 x00)))
 (let ((?x9592 (* 108 ?x661)))
 (let ((?x137 (* 9 s00)))
 (let ((?x669 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x9592 ?x8671 ?x8280 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x8583 ?x8353 (* 216 (* s00 r00 r00 r00)) ?x8628 (* (- 216) (* x00 x!0)) ?x9899 ?x5857 ?x3617 (* (- 108) (* r00 x!0)) (* 54 (* r00 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* 108 (* x!0 x!0)) (* 432 (* r00 r00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* 108 (* s00 x!0)) (* (- 108) (* s!1 x!0)) (* 108 (* x00 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 216) (* s00 r00 x!0)) (* 15 (* s!1 s!1)) (* 108 (* s00 r00 s!1)) (* (- 66) (* s00 s!1)) (* (- 12) (* s00 s!1 s!1)))))
 (let (($x6393 (= ?x669 0)))
 (let ((?x1016 (* r00 r00 x00)))
 (let ((?x5646 (* 36 ?x1016)))
 (let ((?x7268 (* (- 6) ?x944)))
 (let ((?x5654 (* 15 ?x730)))
 (let ((?x7249 (* 54 ?x661)))
 (let ((?x9388 (+ ?x137 (* (- 24) (* s00 r00)) ?x7249 (* (- 36) (* r00 r00 x!0)) ?x5654 ?x8280 (* 2 (* s00 s00 r00)) ?x7268 ?x5646 ?x9899 ?x3617 (* (- 24) (* s00 r!2)) (* (- 54) (* r00 x!0)) (* 24 (* r00 s!1)) (* 6 (* s00 x!0)) (* (- 6) (* s!1 x!0)) (* 6 (* x00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* (- 36) (* r00 x!0 r!2)) (* (- 3) (* s!1 s!1)) (* 2 (* s00 r00 s!1)) (* 36 (* r00 x00 r!2)) (* (- 2) (* s00 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* (- 12) (* s00 s!1)) (* 24 (* s!1 r!2)) (* (- 54) (* x!0 r!2)) (* 54 (* x00 r!2)) (* (- 4) (* r00 s!1 s!1)))))
 (let (($x9392 (= ?x9388 0)))
 (let ((?x4272 (* (- 3) s!1)))
 (let ((?x8146 (* 4 ?x730)))
 (let ((?x5133 (* 18 ?x661)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1931 (+ ?x44 (* (- 9) (* s00 r00)) ?x5133 ?x8146 (* (- 6) ?x786) ?x4272 (* (- 6) (* r00 s!1 r!2)) (* 6 ?x1593) (* (- 9) (* s00 r!2)) (* (- 18) (* r00 x!0)) (* 9 (* r00 s!1)) (* (- 2) (* s!1 s!1)) (* (- 2) (* s00 s!1)) (* 9 (* s!1 r!2)) (* (- 18) (* x!0 r!2)) (* 18 (* x00 r!2)) (* 6 (* s00 r00 r!2)))))
 (let (($x1938 (= ?x1931 0)))
 (let ((?x4271 (* 3 r!2)))
 (let ((?x2416 (* 6 x!0)))
 (let ((?x608 (* r00 r00 r00)))
 (let ((?x609 (* 12 ?x608)))
 (let ((?x565 (* s00 r00)))
 (let ((?x643 (* (- 6) ?x565)))
 (let ((?x640 (* (- 6) x00)))
 (let ((?x639 (* (- 3) r00)))
 (let ((?x11137 (+ ?x44 ?x639 ?x640 ?x643 ?x609 ?x4272 (* 4 (* s00 r!2)) ?x2416 ?x4271 (* 2 (* s!1 r!2)) (* (- 12) (* r00 r00 r!2)))))
 (let (($x11139 (= ?x11137 0)))
 (let (($x10618 (and $x11124 $x11139 $x1938 $x9392 $x6393 $x10579)))
 (let ((?x6947 (+ 3 ?x10158 s!1)))
 (let ((?x553 (+ (* 108 (* r!2 x!0 x!0 x!0 x!0 r00)) (* 54 (* r!2 r!2 x!0 x!0 x!0 x!0 r00)) (* 54 (* x!0 x!0 x!0 x!0 r00)) (* 24 (* r00 s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947)) (* (- 36) (* r00 r00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947)) (* (- 24) (* r00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947 ?x6947)) (* 36 (* r00 r00 s00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* 63 (* r!2 r!2 x!0 x!0 x!0 s00 s00)) (* 93 (* r!2 x!0 x!0 x!0 s00 s00)) (* 26 (* x!0 x!0 x!0 s00 s00)) (* (- 189) (* r!2 r!2 s!1 x!0 x!0 s00 s00)) (* (- 279) (* r!2 s!1 x!0 x!0 s00 s00)) (* (- 78) (* s!1 x!0 x!0 s00 s00)) (* (- 144) (* s!1 x!0 x!0 x!0 r00 r00)) (* 279 (* r!2 s!1 s!1 x!0 s00 s00)) (* 189 (* r!2 r!2 s!1 s!1 x!0 s00 s00)) (* 78 (* s!1 s!1 x!0 s00 s00)) (* 24 (* r!2 r!2 r!2 x!0 x!0 x!0 s00)) (* 2 (* ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947)) (* (- 63) (* r!2 r!2 s!1 s!1 s!1 s00 s00)) (* (- 93) (* r!2 s!1 s!1 s!1 s00 s00)) (* (- 26) (* s!1 s!1 s!1 s00 s00)) (* (- 9) (* s00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* 756 (* r!2 s!1 s!1 x!0 r00 r00 x00)) (* (- 216) (* r!2 r!2 s!1 x!0 x!0 x!0 r00)) (* (- 756) (* r!2 s!1 x!0 x!0 r00 r00 x00)) (* 2 (* s00 ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947 ?x6947)) (* 12 (* s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 36) (* r00 x00 ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947)) (* (- 72) (* s!1 s!1 s!1 r00 r00 x00)) (* 216 (* s!1 s!1 x!0 r00 r00 x00)) (* (- 180) (* r!2 r!2 s!1 s!1 s!1 r00 r00 x00)) (* (- 252) (* r!2 s!1 s!1 s!1 r00 r00 x00)) (* 36 (* x!0 x!0 x!0 x!0 r00 r00)) (* 540 (* r!2 r!2 s!1 s!1 x!0 r00 r00 x00)) (* 72 (* r!2 x!0 x!0 x!0 x!0 r00 r00)) (* (- 216) (* s!1 x!0 x!0 r00 r00 x00)) (* 36 (* r!2 r!2 x!0 x!0 x!0 x!0 r00 r00)) (* (- 540) (* r!2 r!2 s!1 x!0 x!0 r00 r00 x00)) (* (- 6) (* r!2 s!1 s!1 x!0 x!0 s00 s00 r00)) (* 180 (* r!2 r!2 x!0 x!0 x!0 r00 r00 x00)) (* 252 (* r!2 x!0 x!0 x!0 r00 r00 x00)) (* 72 (* x!0 x!0 x!0 r00 r00 x00)) (* (- 36) (* r00 r00 x00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 4) (* s00 s00 ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947)) (* (- 42) (* s!1 s!1 s!1 s00)) (* 126 (* s!1 s!1 x!0 s00)) (* (- 12) (* s00 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947)) (* (- 126) (* s!1 x!0 x!0 s00)) (* (- 54) (* x00 ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947)) (* 42 (* x!0 x!0 x!0 s00)) (* 36 (* r00 r00 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947)) (* (- 14) (* r!2 s!1 s!1 s!1 s00 s00 r00)) (* (- 4) (* s!1 s!1 s!1 s00 s00 r00)) (* (- 36) (* s!1 s!1 s!1 s!1 r00 r00 x00)) (* (- 10) (* r!2 r!2 s!1 s!1 s!1 s00 s00 r00)) (* 2 (* r!2 s!1 x!0 x!0 x!0 s00 s00 r00)) (* (- 36) (* r00 r00 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x6947)) (* 12 (* s!1 s!1 x!0 s00 s00 r00)) (* 42 (* r!2 s!1 s!1 x!0 s00 s00 r00)) (* 30 (* r!2 r!2 s!1 s!1 x!0 s00 s00 r00)) (* (- 12) (* s!1 x!0 x!0 s00 s00 r00)) (* (- 42) (* r!2 s!1 x!0 x!0 s00 s00 r00)) (* (- 30) (* r!2 r!2 s!1 x!0 x!0 s00 s00 r00)) (* 4 (* x!0 x!0 x!0 s00 s00 r00)) (* 14 (* r!2 x!0 x!0 x!0 s00 s00 r00)) (* 10 (* r!2 r!2 x!0 x!0 x!0 s00 s00 r00)) (* (- 36) (* r!2 s!1 s!1 s!1 s!1 r00 r00 x00)) (* (- 2) (* ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 36) (* r00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x6947)) (* (- 36) (* r00 r00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 24) (* r00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947)) (* (- 54) (* x00 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 2) (* r00 s00 s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947)) (* (- 432) (* r!2 s!1 s!1 s!1 x!0 r00)) (* (- 216) (* r!2 r!2 s!1 s!1 s!1 x!0 r00)) (* 648 (* r!2 s!1 s!1 x!0 x!0 r00)) (* (- 4) (* s00 s00 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* 72 (* r!2 s!1 s!1 s!1 s!1 r00 r00)) (* 54 (* s!1 s!1 s!1 s!1 r00)) (* 54 (* r00 ?x10156 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* 24 (* s00 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* 2 (* s!1 x!0 x!0 x!0 s00 s00 r00)) (* (- 4) (* r!2 r!2 r!2 x!0 x!0 x!0 s00 s00)) (* 12 (* r!2 r!2 r!2 s!1 x!0 x!0 s00 s00)) (* 36 (* r00 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156)) (* (- 6) (* x00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 2) (* s00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947)) (* (- 54) (* r00 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x6947)) (* 4 (* s00 s00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947)) (* 48 (* x00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947)) (* 2 (* ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947 ?x6947)) (* (- 12) (* r!2 r!2 r!2 s!1 s!1 x!0 s00 s00)) (* (- 6) (* s00 ?x10156 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* 108 (* r!2 s!1 s!1 s!1 s!1 r00)) (* 54 (* r!2 r!2 s!1 s!1 s!1 s!1 r00)) (* (- 216) (* s!1 s!1 s!1 x!0 r00)) (* 324 (* s!1 s!1 x!0 x!0 r00)) (* 324 (* r!2 r!2 s!1 s!1 x!0 x!0 r00)) (* 4 (* r!2 r!2 r!2 s!1 s!1 s!1 s00 s00)) (* (- 2) (* r00 s00 s00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* 12 (* s00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947)) (* (- 216) (* s!1 x!0 x!0 x!0 r00)) (* 54 (* r00 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x6947 ?x6947)) (* (- 54) (* x!0 x!0 x!0 x00)) (* (- 162) (* r!2 r!2 x!0 x!0 x!0 x00)) (* (- 162) (* r!2 x!0 x!0 x!0 x00)) (* (- 54) (* r!2 r!2 r!2 x!0 x!0 x!0 x00)) (* (- 144) (* r!2 r!2 s!1 s!1 s!1 x!0 r00 r00)) (* 24 (* r00 s00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* 2 (* s00 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947)) (* 36 (* r00 ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x6947 ?x6947)) (* (- 4) (* r00 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* 36 (* r00 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* 162 (* r!2 r!2 r!2 s!1 x!0 x!0 x00)) (* 486 (* r!2 r!2 s!1 x!0 x!0 x00)) (* 486 (* r!2 s!1 x!0 x!0 x00)) (* 162 (* s!1 x!0 x!0 x00)) (* 54 (* s!1 s!1 s!1 x00)) (* 162 (* r!2 s!1 s!1 s!1 x00)) (* 162 (* r!2 r!2 s!1 s!1 s!1 x00)) (* 54 (* r!2 r!2 r!2 s!1 s!1 s!1 x00)) (* (- 162) (* s!1 s!1 x!0 x00)) (* (- 486) (* r!2 s!1 s!1 x!0 x00)) (* (- 486) (* r!2 r!2 s!1 s!1 x!0 x00)) (* (- 162) (* r!2 r!2 r!2 s!1 s!1 x!0 x00)) (* 6 (* s!1 s!1 s!1 x!0 s00 s00 r00)) (* 6 (* r!2 s!1 s!1 s!1 x!0 s00 s00 r00)) (* 2 (* r00 s00 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947)) (* 3 (* ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947 ?x6947)) (* (- 24) (* ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947)) (* 24 (* s00 ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947)) (* (- 72) (* s!1 s!1 s!1 r00 x00)) (* (- 270) (* r!2 s!1 s!1 s!1 r00 x00)) (* (- 162) (* r!2 r!2 s!1 s!1 s!1 r00 x00)) (* 36 (* r!2 r!2 r!2 s!1 s!1 s!1 r00 x00)) (* 216 (* s!1 s!1 x!0 r00 x00)) (* 810 (* r!2 s!1 s!1 x!0 r00 x00)) (* 486 (* r!2 r!2 s!1 s!1 x!0 r00 x00)) (* (- 108) (* r!2 r!2 r!2 s!1 s!1 x!0 r00 x00)) (* (- 216) (* s!1 x!0 x!0 r00 x00)) (* (- 810) (* r!2 s!1 x!0 x!0 r00 x00)) (* (- 486) (* r!2 r!2 s!1 x!0 x!0 r00 x00)) (* 108 (* r!2 r!2 r!2 s!1 x!0 x!0 r00 x00)) (* (- 24) (* r!2 r!2 r!2 s!1 s!1 s!1 s00)) (* 72 (* x!0 x!0 x!0 r00 x00)) (* 270 (* r!2 x!0 x!0 x!0 r00 x00)) (* 162 (* r!2 r!2 x!0 x!0 x!0 r00 x00)) (* (- 15) (* s00 s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947)) (* 72 (* r!2 r!2 r!2 s!1 s!1 x!0 s00)) (* (- 36) (* r!2 r!2 r!2 x!0 x!0 x!0 r00 x00)) (* 108 (* s!1 s!1 s!1 x!0 r00 r00 x00)) (* (- 504) (* r!2 s!1 s!1 x!0 s00 r00)) (* (- 144) (* s!1 s!1 x!0 s00 r00)) (* (- 54) (* s!1 s!1 s!1 s!1 r00 x00)) (* (- 144) (* s!1 s!1 s!1 x!0 r00 r00)) (* 4 (* r00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947 ?x6947)) (* (- 360) (* r!2 r!2 s!1 s!1 x!0 s00 r00)) (* (- 72) (* s!1 s!1 s!1 x!0 s00 r00)) (* (- 72) (* r!2 s!1 s!1 s!1 x!0 s00 r00)) (* 144 (* s!1 x!0 x!0 s00 r00)) (* 504 (* r!2 s!1 x!0 x!0 s00 r00)) (* 360 (* r!2 r!2 s!1 x!0 x!0 s00 r00)) (* 72 (* s!1 s!1 x!0 x!0 s00 r00)) (* 72 (* r!2 s!1 s!1 x!0 x!0 s00 r00)) (* (- 54) (* r!2 s!1 s!1 s!1 s!1 r00 x00)) (* 162 (* s!1 s!1 s!1 x!0 r00 x00)) (* 162 (* r!2 s!1 s!1 s!1 x!0 r00 x00)) (* (- 48) (* x!0 x!0 x!0 s00 r00)) (* (- 168) (* r!2 x!0 x!0 x!0 s00 r00)) (* (- 162) (* s!1 s!1 x!0 x!0 r00 x00)) (* (- 24) (* r!2 s!1 x!0 x!0 x!0 s00 r00)) (* (- 120) (* r!2 r!2 x!0 x!0 x!0 s00 r00)) (* (- 162) (* r!2 s!1 s!1 x!0 x!0 r00 x00)) (* (- 24) (* s!1 x!0 x!0 x!0 s00 r00)) (* 24 (* r!2 s!1 s!1 s!1 s!1 s00 r00)) (* 54 (* s!1 x!0 x!0 x!0 r00 x00)) (* 24 (* s!1 s!1 s!1 s!1 s00 r00)) (* 54 (* r!2 s!1 x!0 x!0 x!0 r00 x00)) (* 120 (* r!2 r!2 s!1 s!1 s!1 s00 r00)) (* 168 (* r!2 s!1 s!1 s!1 s00 r00)) (* (- 288) (* r!2 s!1 s!1 s!1 x!0 r00 r00)) (* 48 (* s!1 s!1 s!1 s00 r00)) (* 108 (* r!2 s!1 s!1 s!1 x!0 r00 r00 x00)) (* (- 135) (* r!2 s!1 s!1 s!1 s00)) (* (- 117) (* r!2 r!2 s!1 s!1 s!1 s00)) (* 405 (* r!2 s!1 s!1 x!0 s00)) (* 351 (* r!2 r!2 s!1 s!1 x!0 s00)) (* (- 405) (* r!2 s!1 x!0 x!0 s00)) (* (- 351) (* r!2 r!2 s!1 x!0 x!0 s00)) (* (- 72) (* r!2 r!2 r!2 s!1 x!0 x!0 s00)) (* 135 (* r!2 x!0 x!0 x!0 s00)) (* 117 (* r!2 r!2 x!0 x!0 x!0 s00)) (* (- 432) (* r!2 s!1 x!0 x!0 x!0 r00)) (* (- 6) (* s!1 s!1 x!0 x!0 s00 s00 r00)) (* 36 (* r!2 r!2 s!1 s!1 s!1 s!1 r00 r00)) (* (- 15) (* s!1 s!1 s!1 s!1 s00)) (* (- 21) (* r!2 s!1 s!1 s!1 s!1 s00)) (* (- 6) (* r!2 r!2 s!1 s!1 s!1 s!1 s00)) (* 51 (* s!1 s!1 s!1 x!0 s00)) (* 75 (* r!2 s!1 s!1 s!1 x!0 s00)) (* 24 (* r!2 r!2 s!1 s!1 s!1 x!0 s00)) (* (- 63) (* s!1 s!1 x!0 x!0 s00)) (* (- 99) (* r!2 s!1 s!1 x!0 x!0 s00)) (* (- 36) (* r!2 r!2 s!1 s!1 x!0 x!0 s00)) (* (- 2) (* s!1 s!1 s!1 s!1 s00 s00 r00)) (* (- 2) (* r!2 s!1 s!1 s!1 s!1 s00 s00 r00)) (* 216 (* s!1 s!1 x!0 x!0 r00 r00)) (* 6 (* x00 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947)) (* 33 (* s!1 x!0 x!0 x!0 s00)) (* 57 (* r!2 s!1 x!0 x!0 x!0 s00)) (* 24 (* r!2 r!2 s!1 x!0 x!0 x!0 s00)) (* 432 (* r!2 s!1 s!1 x!0 x!0 r00 r00)) (* 216 (* r!2 r!2 s!1 s!1 x!0 x!0 r00 r00)) (* 36 (* s!1 s!1 s!1 s!1 r00 r00)) (* (- 6) (* x!0 x!0 x!0 x!0 s00)) (* (- 12) (* r!2 x!0 x!0 x!0 x!0 s00)) (* (- 6) (* r!2 r!2 x!0 x!0 x!0 x!0 s00)) (* 36 (* s!1 x!0 x!0 x!0 r00 r00 x00)) (* 36 (* r!2 s!1 x!0 x!0 x!0 r00 r00 x00)) (* 12 (* s!1 s!1 s!1 s00 x00)) (* (- 36) (* s!1 s!1 x!0 s00 x00)) (* 36 (* s!1 x!0 x!0 s00 x00)) (* (- 12) (* x!0 x!0 x!0 s00 x00)) (* 42 (* r!2 s!1 s!1 s!1 s00 x00)) (* 30 (* r!2 r!2 s!1 s!1 s!1 s00 x00)) (* 6 (* s!1 s!1 s!1 s!1 s00 x00)) (* 6 (* r!2 s!1 s!1 s!1 s!1 s00 x00)) (* (- 126) (* r!2 s!1 s!1 x!0 s00 x00)) (* (- 90) (* r!2 r!2 s!1 s!1 x!0 s00 x00)) (* (- 18) (* s!1 s!1 s!1 x!0 s00 x00)) (* (- 18) (* r!2 s!1 s!1 s!1 x!0 s00 x00)) (* 126 (* r!2 s!1 x!0 x!0 s00 x00)) (* 90 (* r!2 r!2 s!1 x!0 x!0 s00 x00)) (* (- 24) (* ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947)) (* 18 (* s!1 s!1 x!0 x!0 s00 x00)) (* 4 (* r00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947)) (* 18 (* r!2 s!1 s!1 x!0 x!0 s00 x00)) (* 6 (* s00 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x6947)) (* 36 (* r00 x00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947)) (* (- 42) (* r!2 x!0 x!0 x!0 s00 x00)) (* (- 30) (* r!2 r!2 x!0 x!0 x!0 s00 x00)) (* (- 6) (* s!1 x!0 x!0 x!0 s00 x00)) (* (- 6) (* r!2 s!1 x!0 x!0 x!0 s00 x00)) (* (- 36) (* r00 x00 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 9) (* ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947)) (* (- 6) (* ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947)) (* 2 (* s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947)) (* (- 12) (* s00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947)) (* (- 36) (* r00 r00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947)) (* 756 (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* (- 108) (* s!1 s!1 x!0 x!0 r00 r00 x00)) (* 108 (* s!1 s!1 x!0 x!0 s00 r00 r00)) (* 108 (* r!2 s!1 s!1 x!0 x!0 s00 r00 r00)) (* (- 108) (* r!2 s!1 s!1 s!1 x!0 s00 r00 r00)) (* 216 (* s!1 x!0 x!0 s00 r00 r00)) (* (- 108) (* s!1 s!1 s!1 x!0 s00 r00 r00)) (* (- 756) (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 540) (* r!2 r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 216) (* s!1 s!1 x!0 s00 r00 r00)) (* 54 (* ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x6947 ?x6947)) (* 6 (* ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* 180 (* r!2 r!2 s!1 s!1 s!1 s00 r00 r00)) (* 36 (* r!2 s!1 s!1 s!1 s!1 s00 r00 r00)) (* 36 (* s!1 s!1 s!1 s!1 s00 r00 r00)) (* 72 (* s!1 s!1 s!1 s00 r00 r00)) (* 252 (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* (- 252) (* r!2 x!0 x!0 x!0 s00 r00 r00)) (* (- 144) (* r!2 r!2 s!1 x!0 x!0 x!0 r00 r00)) (* (- 36) (* r!2 s!1 x!0 x!0 x!0 s00 r00 r00)) (* (- 180) (* r!2 r!2 x!0 x!0 x!0 s00 r00 r00)) (* (- 36) (* s!1 x!0 x!0 x!0 s00 r00 r00)) (* (- 72) (* x!0 x!0 x!0 s00 r00 r00)) (* 540 (* r!2 r!2 s!1 x!0 x!0 s00 r00 r00)) (* (- 288) (* r!2 s!1 x!0 x!0 x!0 r00 r00)) (* (- 108) (* r!2 s!1 s!1 x!0 x!0 r00 r00 x00)) (* (- 45) (* s!1 s!1 x!0 x!0 s00 s00)) (* 45 (* s!1 s!1 s!1 x!0 s00 s00)) (* (- 45) (* r!2 s!1 s!1 x!0 x!0 s00 s00)) (* (- 15) (* s!1 s!1 s!1 s!1 s00 s00)) (* 15 (* r!2 s!1 x!0 x!0 x!0 s00 s00)) (* 15 (* s!1 x!0 x!0 x!0 s00 s00)) (* (- 15) (* r!2 s!1 s!1 s!1 s!1 s00 s00)) (* 45 (* r!2 s!1 s!1 s!1 x!0 s00 s00)) (* 24 (* r00 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947)) (* 9 (* ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947)) (* 3 (* ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947)) (* 9 (* ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947)) (* 6 (* ?x10156 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947)) (* (- 2) (* r00 s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 15) (* s00 s00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 48) (* ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x6947)) (* 54 (* ?x9600 ?x10156 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 24) (* ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 2) (* r00 s00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947)) (* 6 (* s00 x00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947)) (* (- 3) (* ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* 9 (* ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947 ?x6947)) (* 36 (* r00 r00 s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947)) (* 36 (* r00 r00 ?x10156 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 36) (* r00 r00 x00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947)) (* (- 2) (* r00 s00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947)) (* 2 (* ?x9600 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947)) (* 27 (* ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947)) (* (- 6) (* s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x6947 ?x6947)) (* (- 54) (* r00 x00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947)) (* 36 (* r00 r00 ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x6947 ?x6947)) (* 4 (* r00 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947)) (* 6 (* s00 x00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 6) (* x00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947)) (* 54 (* ?x9600 ?x9600 ?x9600 ?x10156 ?x10156 ?x10156 ?x10156)) (* (- 54) (* r00 x00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947)) (* (- 24) (* r00 ?x10156 ?x10156 ?x10156 ?x6947 ?x6947 ?x6947 ?x6947)) (* (- 9) (* s00 ?x9600 ?x9600 ?x9600 ?x10156 ?x6947 ?x6947)))))
 (let ((?x1515 (* (- 108) ?x1485)))
 (let ((?x1514 (* (- 16) ?x1323)))
 (let ((?x1195 (* s00 r00 r00 r00)))
 (let ((?x1510 (* (- 216) ?x1195)))
 (let ((?x1022 (* 432 ?x1021)))
 (let ((?x1268 (* 108 ?x944)))
 (let ((?x870 (* s00 s00 r00 r00)))
 (let ((?x871 (* 36 ?x870)))
 (let ((?x807 (* s00 s00 r00)))
 (let ((?x1151 (* 108 ?x807)))
 (let ((?x1139 (* 36 ?x786)))
 (let ((?x1504 (* (- 51) ?x730)))
 (let ((?x2318 (* s!1 r00 r00)))
 (let ((?x5346 (* (- 36) ?x2318)))
 (let ((?x1501 (* (- 108) ?x661)))
 (let ((?x652 (* s00 r00 x00)))
 (let ((?x1500 (* (- 216) ?x652)))
 (let ((?x659 (* 54 ?x565)))
 (let ((?x1126 (* (- 9) s00)))
 (let ((?x7797 (* 9 s!1)))
 (let ((?x7660 (+ ?x7797 ?x1126 ?x659 ?x1500 ?x1501 (* (- 15) (* s!1 s!1)) ?x5346 ?x1504 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1139 ?x1151 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x871 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1268 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x1022 (* 12 (* s!1 s!1 s00)) ?x1510 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1514 (* 216 (* x!0 x00)) ?x1515)))
 (let ((?x1029 (* (- 36) ?x1016)))
 (let ((?x945 (* 6 ?x944)))
 (let ((?x835 (* (- 2) ?x807)))
 (let ((?x1055 (* (- 15) ?x730)))
 (let ((?x690 (* (- 54) ?x661)))
 (let ((?x703 (* 24 ?x565)))
 (let ((?x7436 (+ ?x7797 ?x1126 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x703 ?x690 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x5346 ?x1055 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1139 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x835 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x945 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x1029 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x787 (* 6 ?x786)))
 (let ((?x743 (* (- 4) ?x730)))
 (let ((?x675 (* (- 18) ?x661)))
 (let ((?x680 (* 9 ?x565)))
 (let ((?x517 (* (- 3) s00)))
 (let ((?x7791 (+ (* 3 s!1) ?x517 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x680 ?x675 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x2318) ?x743 (* 18 (* x!0 r00)) ?x787 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x7647 (+ ?x4271 ?x4272 ?x2416 ?x44 ?x639 ?x640 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x643 ?x609)))
 (let (($x10456 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x440)) 0)))
 (let (($x11117 (and $x10456 (= ?x7647 0) (= ?x7791 0) (= ?x7436 0) (= ?x7660 0) (not (= ?x553 0)))))
 (let (($x8366 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1522 (+ 3 ?x211 s)))
 (let ((?x419 (* (- 1) s)))
 (let ((?x1528 (+ ?x419 x)))
 (let ((?x1535 (+ 1 r)))
 (let ((?x10379 (* (- 36) (* s x x x s00 r00 r00))))
 (let ((?x10358 (* (- 36) (* r s x x x s00 r00 r00))))
 (let ((?x10310 (* 36 (* s s s s s00 r00 r00))))
 (let ((?x10300 (* 36 (* r s s s s s00 r00 r00))))
 (let ((?x10568 (* (- 108) (* s s s x s00 r00 r00))))
 (let ((?x10566 (* (- 108) (* r s s s x s00 r00 r00))))
 (let ((?x10565 (* 108 (* r s s x x s00 r00 r00))))
 (let ((?x10564 (* 108 (* s s x x s00 r00 r00))))
 (let ((?x9328 (* (- 6) (* r s x x x s00 x00))))
 (let ((?x9317 (* (- 6) (* s x x x s00 x00))))
 (let ((?x9356 (* 18 (* r s s x x s00 x00))))
 (let ((?x9355 (* 18 (* s s x x s00 x00))))
 (let ((?x9352 (* (- 18) (* r s s s x s00 x00))))
 (let ((?x9351 (* (- 18) (* s s s x s00 x00))))
 (let ((?x9014 (* 6 (* r s s s s s00 x00))))
 (let ((?x9004 (* 6 (* s s s s s00 x00))))
 (let ((?x8686 (* (- 6) (* r r x x x x s00))))
 (let ((?x8704 (* (- 12) (* r x x x x s00))))
 (let ((?x8660 (* (- 6) (* x x x x s00))))
 (let ((?x8703 (* 24 (* r r s x x x s00))))
 (let ((?x8700 (* (- 36) (* r r s s x x s00))))
 (let ((?x8697 (* 24 (* r r s s s x s00))))
 (let ((?x8241 (* (- 6) (* r r s s s s s00))))
 (let ((?x7357 (* 24 (* s s s s s00 r00))))
 (let ((?x7347 (* 24 (* r s s s s s00 r00))))
 (let ((?x7287 (* (- 24) (* s x x x s00 r00))))
 (let ((?x7266 (* (- 24) (* r s x x x s00 r00))))
 (let ((?x7413 (* 72 (* r s s x x s00 r00))))
 (let ((?x7412 (* 72 (* s s x x s00 r00))))
 (let ((?x7407 (* (- 72) (* r s s s x s00 r00))))
 (let ((?x7406 (* (- 72) (* s s s x s00 r00))))
 (let ((?x6714 (* (- 36) (* r r r x x x r00 x00))))
 (let ((?x6733 (* 108 (* r r r s x x r00 x00))))
 (let ((?x6728 (* (- 108) (* r r r s s x r00 x00))))
 (let ((?x6352 (* 36 (* r r r s s s r00 x00))))
 (let ((?x5941 (* (- 162) (* r r r s s x x00))))
 (let ((?x5940 (* (- 486) (* r r s s x x00))))
 (let ((?x5939 (* (- 486) (* r s s x x00))))
 (let ((?x5937 (* (- 162) (* s s x x00))))
 (let ((?x5744 (* 54 (* r r r s s s x00))))
 (let ((?x5936 (* 162 (* r r s s s x00))))
 (let ((?x5935 (* 162 (* r s s s x00))))
 (let ((?x5724 (* 54 (* s s s x00))))
 (let ((?x5934 (* 162 (* s x x x00))))
 (let ((?x5933 (* 486 (* r s x x x00))))
 (let ((?x5932 (* 486 (* r r s x x x00))))
 (let ((?x5930 (* 162 (* r r r s x x x00))))
 (let ((?x5656 (* (- 54) (* r r r x x x x00))))
 (let ((?x5927 (* (- 162) (* r x x x x00))))
 (let ((?x5928 (* (- 162) (* r r x x x x00))))
 (let ((?x5639 (* (- 54) (* x x x x00))))
 (let ((?x4638 (* 4 (* r r r s s s s00 s00))))
 (let ((?x4667 (* (- 12) (* r r r s s x s00 s00))))
 (let ((?x4666 (* 12 (* r r r s x x s00 s00))))
 (let ((?x4490 (* (- 4) (* r r r x x x s00 s00))))
 (let ((?x7448 (* (- 26) (* s s s s00 s00))))
 (let ((?x7450 (* 78 (* s s x s00 s00))))
 (let ((?x7452 (* (- 78) (* s x x s00 s00))))
 (let ((?x7454 (* 26 (* x x x s00 s00))))
 (let ((?x13195 (+ (* 108 (* r x x x x r00)) (* 54 (* r r x x x x r00)) (* 54 (* x x x x r00)) (* 24 (* r00 s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 36) (* r00 r00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* (- 24) (* r00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* 36 (* r00 r00 s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 63 (* r r x x x s00 s00)) (* 93 (* r x x x s00 s00)) ?x7454 (* (- 189) (* r r s x x s00 s00)) (* (- 279) (* r s x x s00 s00)) ?x7452 (* (- 144) (* s x x x r00 r00)) (* 279 (* r s s x s00 s00)) (* 189 (* r r s s x s00 s00)) ?x7450 (* 24 (* r r r x x x s00)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 63) (* r r s s s s00 s00)) (* (- 93) (* r s s s s00 s00)) ?x7448 (* (- 9) (* s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 756 (* r s s x r00 r00 x00)) (* (- 216) (* r r s x x x r00)) (* (- 756) (* r s x x r00 r00 x00)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* 12 (* s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 36) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 72) (* s s s r00 r00 x00)) (* 216 (* s s x r00 r00 x00)) (* (- 180) (* r r s s s r00 r00 x00)) (* (- 252) (* r s s s r00 r00 x00)) (* 36 (* x x x x r00 r00)) (* 540 (* r r s s x r00 r00 x00)) (* 72 (* r x x x x r00 r00)) (* (- 216) (* s x x r00 r00 x00)) (* 36 (* r r x x x x r00 r00)) (* (- 540) (* r r s x x r00 r00 x00)) (* (- 6) (* r s s x x s00 s00 r00)) (* 180 (* r r x x x r00 r00 x00)) (* 252 (* r x x x r00 r00 x00)) (* 72 (* x x x r00 r00 x00)) (* (- 36) (* r00 r00 x00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 4) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 42) (* s s s s00)) (* 126 (* s s x s00)) (* (- 12) (* s00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 126) (* s x x s00)) (* (- 54) (* x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* 42 (* x x x s00)) (* 36 (* r00 r00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 14) (* r s s s s00 s00 r00)) (* (- 4) (* s s s s00 s00 r00)) (* (- 36) (* s s s s r00 r00 x00)) (* (- 10) (* r r s s s s00 s00 r00)) (* 2 (* r s x x x s00 s00 r00)) (* (- 36) (* r00 r00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522)) (* 12 (* s s x s00 s00 r00)) (* 42 (* r s s x s00 s00 r00)) (* 30 (* r r s s x s00 s00 r00)) (* (- 12) (* s x x s00 s00 r00)) (* (- 42) (* r s x x s00 s00 r00)) (* (- 30) (* r r s x x s00 s00 r00)) (* 4 (* x x x s00 s00 r00)) (* 14 (* r x x x s00 s00 r00)) (* 10 (* r r x x x s00 s00 r00)) (* (- 36) (* r s s s s r00 r00 x00)) (* (- 2) (* ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 36) (* r00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 24) (* r00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* (- 54) (* x00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 2) (* r00 s00 s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 432) (* r s s s x r00)) (* (- 216) (* r r s s s x r00)) (* 648 (* r s s x x r00)) (* (- 4) (* s00 s00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 72 (* r s s s s r00 r00)) (* 54 (* s s s s r00)) (* 54 (* r00 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 24 (* s00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 2 (* s x x x s00 s00 r00)) ?x4490 ?x4666 (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528)) (* (- 6) (* x00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 2) (* s00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 54) (* r00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522)) (* 4 (* s00 s00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* 48 (* x00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* 2 (* ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522 ?x1522)) ?x4667 (* (- 6) (* s00 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 108 (* r s s s s r00)) (* 54 (* r r s s s s r00)) (* (- 216) (* s s s x r00)) (* 324 (* s s x x r00)) (* 324 (* r r s s x x r00)) ?x4638 (* (- 2) (* r00 s00 s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 12 (* s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* (- 216) (* s x x x r00)) (* 54 (* r00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1522 ?x1522)) ?x5639 ?x5928 ?x5927 ?x5656 (* (- 144) (* r r s s s x r00 r00)) (* 24 (* r00 s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 2 (* s00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 4) (* r00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 36 (* r00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) ?x5930 ?x5932 ?x5933 ?x5934 ?x5724 ?x5935 ?x5936 ?x5744 ?x5937 ?x5939 ?x5940 ?x5941 (* 6 (* s s s x s00 s00 r00)) (* 6 (* r s s s x s00 s00 r00)) (* 2 (* r00 s00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* 3 (* ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522 ?x1522)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* 24 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 72) (* s s s r00 x00)) (* (- 270) (* r s s s r00 x00)) (* (- 162) (* r r s s s r00 x00)) ?x6352 (* 216 (* s s x r00 x00)) (* 810 (* r s s x r00 x00)) (* 486 (* r r s s x r00 x00)) ?x6728 (* (- 216) (* s x x r00 x00)) (* (- 810) (* r s x x r00 x00)) (* (- 486) (* r r s x x r00 x00)) ?x6733 (* (- 24) (* r r r s s s s00)) (* 72 (* x x x r00 x00)) (* 270 (* r x x x r00 x00)) (* 162 (* r r x x x r00 x00)) (* (- 15) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* 72 (* r r r s s x s00)) ?x6714 (* 108 (* s s s x r00 r00 x00)) (* (- 504) (* r s s x s00 r00)) (* (- 144) (* s s x s00 r00)) (* (- 54) (* s s s s r00 x00)) (* (- 144) (* s s s x r00 r00)) (* 4 (* r00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522 ?x1522)) (* (- 360) (* r r s s x s00 r00)) ?x7406 ?x7407 (* 144 (* s x x s00 r00)) (* 504 (* r s x x s00 r00)) (* 360 (* r r s x x s00 r00)) ?x7412 ?x7413 (* (- 54) (* r s s s s r00 x00)) (* 162 (* s s s x r00 x00)) (* 162 (* r s s s x r00 x00)) (* (- 48) (* x x x s00 r00)) (* (- 168) (* r x x x s00 r00)) (* (- 162) (* s s x x r00 x00)) ?x7266 (* (- 120) (* r r x x x s00 r00)) (* (- 162) (* r s s x x r00 x00)) ?x7287 ?x7347 (* 54 (* s x x x r00 x00)) ?x7357 (* 54 (* r s x x x r00 x00)) (* 120 (* r r s s s s00 r00)) (* 168 (* r s s s s00 r00)) (* (- 288) (* r s s s x r00 r00)) (* 48 (* s s s s00 r00)) (* 108 (* r s s s x r00 r00 x00)) (* (- 135) (* r s s s s00)) (* (- 117) (* r r s s s s00)) (* 405 (* r s s x s00)) (* 351 (* r r s s x s00)) (* (- 405) (* r s x x s00)) (* (- 351) (* r r s x x s00)) (* (- 72) (* r r r s x x s00)) (* 135 (* r x x x s00)) (* 117 (* r r x x x s00)) (* (- 432) (* r s x x x r00)) (* (- 6) (* s s x x s00 s00 r00)) (* 36 (* r r s s s s r00 r00)) (* (- 15) (* s s s s s00)) (* (- 21) (* r s s s s s00)) ?x8241 (* 51 (* s s s x s00)) (* 75 (* r s s s x s00)) ?x8697 (* (- 63) (* s s x x s00)) (* (- 99) (* r s s x x s00)) ?x8700 (* (- 2) (* s s s s s00 s00 r00)) (* (- 2) (* r s s s s s00 s00 r00)) (* 216 (* s s x x r00 r00)) (* 6 (* x00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* 33 (* s x x x s00)) (* 57 (* r s x x x s00)) ?x8703 (* 432 (* r s s x x r00 r00)) (* 216 (* r r s s x x r00 r00)) (* 36 (* s s s s r00 r00)) ?x8660 ?x8704 ?x8686 (* 36 (* s x x x r00 r00 x00)) (* 36 (* r s x x x r00 r00 x00)) (* 12 (* s s s s00 x00)) (* (- 36) (* s s x s00 x00)) (* 36 (* s x x s00 x00)) (* (- 12) (* x x x s00 x00)) (* 42 (* r s s s s00 x00)) (* 30 (* r r s s s s00 x00)) ?x9004 ?x9014 (* (- 126) (* r s s x s00 x00)) (* (- 90) (* r r s s x s00 x00)) ?x9351 ?x9352 (* 126 (* r s x x s00 x00)) (* 90 (* r r s x x s00 x00)) (* (- 24) (* ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) ?x9355 (* 4 (* r00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) ?x9356 (* 6 (* s00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522)) (* 36 (* r00 x00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* (- 42) (* r x x x s00 x00)) (* (- 30) (* r r x x x s00 x00)) ?x9317 ?x9328 (* (- 36) (* r00 x00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 9) (* ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 6) (* ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* (- 12) (* s00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* 756 (* r s x x s00 r00 r00)) (* (- 108) (* s s x x r00 r00 x00)) ?x10564 ?x10565 ?x10566 (* 216 (* s x x s00 r00 r00)) ?x10568 (* (- 756) (* r s s x s00 r00 r00)) (* (- 540) (* r r s s x s00 r00 r00)) (* (- 216) (* s s x s00 r00 r00)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1522 ?x1522)) (* 6 (* ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 180 (* r r s s s s00 r00 r00)) ?x10300 ?x10310 (* 72 (* s s s s00 r00 r00)) (* 252 (* r s s s s00 r00 r00)) (* (- 252) (* r x x x s00 r00 r00)) (* (- 144) (* r r s x x x r00 r00)) ?x10358 (* (- 180) (* r r x x x s00 r00 r00)) ?x10379 (* (- 72) (* x x x s00 r00 r00)) (* 540 (* r r s x x s00 r00 r00)) (* (- 288) (* r s x x x r00 r00)) (* (- 108) (* r s s x x r00 r00 x00)) (* (- 45) (* s s x x s00 s00)) (* 45 (* s s s x s00 s00)) (* (- 45) (* r s s x x s00 s00)) (* (- 15) (* s s s s s00 s00)) (* 15 (* r s x x x s00 s00)) (* 15 (* s x x x s00 s00)) (* (- 15) (* r s s s s s00 s00)) (* 45 (* r s s s x s00 s00)) (* 24 (* r00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* 9 (* ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* 3 (* ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* 9 (* ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* 6 (* ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 15) (* s00 s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 48) (* ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522)) (* 54 (* ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 2) (* r00 s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* 6 (* s00 x00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 3) (* ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 9 (* ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* 36 (* r00 r00 s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* 36 (* r00 r00 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 36) (* r00 r00 x00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* 27 (* ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 6) (* s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 54) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* 36 (* r00 r00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1522 ?x1522)) (* 4 (* r00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* 6 (* s00 x00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 6) (* x00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528)) (* (- 54) (* r00 x00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 24) (* r00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* (- 9) (* s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)))))
 (let ((?x1485 (* x00 x00)))
 (let ((?x1515 (* (- 108) ?x1485)))
 (let ((?x1323 (* s00 s00 s00)))
 (let ((?x1514 (* (- 16) ?x1323)))
 (let ((?x1195 (* s00 r00 r00 r00)))
 (let ((?x1510 (* (- 216) ?x1195)))
 (let ((?x1021 (* r00 r00 r00 x00)))
 (let ((?x1022 (* 432 ?x1021)))
 (let ((?x944 (* s00 x00)))
 (let ((?x1268 (* 108 ?x944)))
 (let ((?x870 (* s00 s00 r00 r00)))
 (let ((?x871 (* 36 ?x870)))
 (let ((?x807 (* s00 s00 r00)))
 (let ((?x1151 (* 108 ?x807)))
 (let ((?x786 (* s00 r00 r00)))
 (let ((?x1139 (* 36 ?x786)))
 (let ((?x730 (* s00 s00)))
 (let ((?x1504 (* (- 51) ?x730)))
 (let ((?x704 (* s r00 r00)))
 (let ((?x1003 (* (- 36) ?x704)))
 (let ((?x661 (* r00 x00)))
 (let ((?x1501 (* (- 108) ?x661)))
 (let ((?x652 (* s00 r00 x00)))
 (let ((?x1500 (* (- 216) ?x652)))
 (let ((?x565 (* s00 r00)))
 (let ((?x659 (* 54 ?x565)))
 (let ((?x1126 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1516 (+ ?x143 ?x1126 ?x659 ?x1500 ?x1501 (* (- 15) (* s s)) ?x1003 ?x1504 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1139 ?x1151 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x871 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1268 (* 108 (* s x)) (* (- 108) (* x x)) ?x1022 (* 12 (* s s s00)) ?x1510 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1514 (* 216 (* x x00)) ?x1515)))
 (let (($x1517 (= ?x1516 0)))
 (let ((?x1016 (* r00 r00 x00)))
 (let ((?x1029 (* (- 36) ?x1016)))
 (let ((?x945 (* 6 ?x944)))
 (let ((?x835 (* (- 2) ?x807)))
 (let ((?x1055 (* (- 15) ?x730)))
 (let ((?x684 (* s s)))
 (let ((?x708 (* 3 ?x684)))
 (let ((?x690 (* (- 54) ?x661)))
 (let ((?x703 (* 24 ?x565)))
 (let ((?x1218 (+ ?x143 ?x1126 (* (- 24) (* r s)) (* 24 (* r s00)) ?x703 ?x690 ?x708 (* 54 (* r x)) (* 36 (* r x r00)) ?x1003 ?x1055 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1139 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x835 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x945 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x1029 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1223 (= ?x1218 0)))
 (let ((?x787 (* 6 ?x786)))
 (let ((?x743 (* (- 4) ?x730)))
 (let ((?x685 (* 2 ?x684)))
 (let ((?x675 (* (- 18) ?x661)))
 (let ((?x680 (* 9 ?x565)))
 (let ((?x517 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x884 (+ ?x47 ?x517 (* (- 9) (* r s)) (* 9 (* r s00)) ?x680 ?x675 ?x685 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x704) ?x743 (* 18 (* x r00)) ?x787 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x891 (= ?x884 0)))
 (let ((?x608 (* r00 r00 r00)))
 (let ((?x609 (* 12 ?x608)))
 (let ((?x643 (* (- 6) ?x565)))
 (let ((?x640 (* (- 6) x00)))
 (let ((?x639 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x638 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x644 (+ ?x43 ?x638 ?x56 ?x44 ?x639 ?x640 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x643 ?x609)))
 (let (($x645 (= ?x644 0)))
 (let ((?x440 (* r00 r00)))
 (let ((?x441 (* 3 ?x440)))
 (let ((?x470 (* (- 1) s00)))
 (let (($x473 (= (+ s ?x470 (* (- 3) (* r r)) ?x441) 0)))
 (and $x473 $x645 $x891 $x1223 $x1517 (not (= ?x13195 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x5665 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x9032 (+ 3 s ?x211)))
 (let ((?x419 (* (- 1) s)))
 (let ((?x5767 (+ x ?x419)))
 (let ((?x1535 (+ 1 r)))
 (let ((?x6235 (+ (* 3 (* ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* 2 (* r00 s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 15) (* s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 6 (* x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 36) (* r00 r00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 4) (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 24) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 4 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 15) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 54 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 12 (* s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 54 (* r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 24 (* r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 24 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 2 (* r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 24 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 24) (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 9 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 9) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 6) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 12) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 2) (* r00 s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 6 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 12) (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 6 (* s00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 24 (* r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 54 (* r00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 2) (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 6) (* x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 2) (* r00 s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 54) (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 4 (* s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 48 (* x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 2 (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 6) (* s00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 54 (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 9) (* s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 6 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 36) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 12 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 4 (* r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* 15 (* s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 9) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 6) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 6) (* s00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 54) (* r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 3 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 9 (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 48) (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 6 (* ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 9 (* ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 54 (* ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 15) (* s00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 6 (* s00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 3) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 36) (* r00 r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 9 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 27 (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 6) (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 4 (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 6 (* s00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 36) (* r00 r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 54) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 6) (* x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 54) (* r00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 9) (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)))))
 (let (($x8095 (not (= ?x6235 0))))
 (let ((?x1485 (* x00 x00)))
 (let ((?x5857 (* 108 ?x1485)))
 (let ((?x3787 (* (- 9) s)))
 (let ((?x8086 (* r00 r00 s00)))
 (let ((?x624 (* (- 36) ?x8086)))
 (let ((?x137 (* 9 s00)))
 (let ((?x730 (* s00 s00)))
 (let ((?x8671 (* 51 ?x730)))
 (let ((?x4478 (* r00 r00 s)))
 (let ((?x8302 (* 36 ?x4478)))
 (let ((?x1323 (* s00 s00 s00)))
 (let ((?x8628 (* 16 ?x1323)))
 (let ((?x944 (* s00 x00)))
 (let ((?x8583 (* (- 108) ?x944)))
 (let ((?x1021 (* r00 r00 r00 x00)))
 (let ((?x8353 (* (- 432) ?x1021)))
 (let ((?x661 (* r00 x00)))
 (let ((?x9592 (* 108 ?x661)))
 (let ((?x5136 (+ (* 216 (* r00 s00 x00)) ?x9592 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x8353 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x8583 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x8628 (* (- 108) (* x s)) ?x8302 ?x8671 (* (- 108) (* r00 x)) ?x137 ?x624 ?x3787 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5857)))
 (let (($x5027 (= ?x5136 0)))
 (let ((?x5654 (* 15 ?x730)))
 (let ((?x1016 (* r00 r00 x00)))
 (let ((?x5646 (* 36 ?x1016)))
 (let ((?x7268 (* (- 6) ?x944)))
 (let ((?x7249 (* 54 ?x661)))
 (let ((?x5662 (+ (* 24 (* s r)) ?x7249 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x7268 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x8302 ?x5646 ?x5654 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x624 (* 54 (* x00 r)) ?x3787 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x638 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x8146 (* 4 ?x730)))
 (let ((?x5133 (* 18 ?x661)))
 (let ((?x8197 (+ (* 9 (* s r)) ?x5133 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x4478) ?x8146 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x8086) (* 18 (* x00 r)) ?x638 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x608 (* r00 r00 r00)))
 (let ((?x609 (* 12 ?x608)))
 (let ((?x640 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x639 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x5022 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x638 ?x639 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x640 ?x609)))
 (let (($x5479 (= (+ s00 ?x419 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x5479 (= ?x5022 0) (= ?x8197 0) (= ?x5662 0) $x5027 $x8095))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5461 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1522 (+ 3 ?x211 s)))
 (let ((?x419 (* (- 1) s)))
 (let ((?x1528 (+ ?x419 x)))
 (let ((?x1535 (+ 1 r)))
 (let ((?x10379 (* (- 36) (* s x x x s00 r00 r00))))
 (let ((?x10358 (* (- 36) (* r s x x x s00 r00 r00))))
 (let ((?x10310 (* 36 (* s s s s s00 r00 r00))))
 (let ((?x10300 (* 36 (* r s s s s s00 r00 r00))))
 (let ((?x10568 (* (- 108) (* s s s x s00 r00 r00))))
 (let ((?x10566 (* (- 108) (* r s s s x s00 r00 r00))))
 (let ((?x10565 (* 108 (* r s s x x s00 r00 r00))))
 (let ((?x10564 (* 108 (* s s x x s00 r00 r00))))
 (let ((?x9328 (* (- 6) (* r s x x x s00 x00))))
 (let ((?x9317 (* (- 6) (* s x x x s00 x00))))
 (let ((?x9356 (* 18 (* r s s x x s00 x00))))
 (let ((?x9355 (* 18 (* s s x x s00 x00))))
 (let ((?x9352 (* (- 18) (* r s s s x s00 x00))))
 (let ((?x9351 (* (- 18) (* s s s x s00 x00))))
 (let ((?x9014 (* 6 (* r s s s s s00 x00))))
 (let ((?x9004 (* 6 (* s s s s s00 x00))))
 (let ((?x8686 (* (- 6) (* r r x x x x s00))))
 (let ((?x8704 (* (- 12) (* r x x x x s00))))
 (let ((?x8660 (* (- 6) (* x x x x s00))))
 (let ((?x8703 (* 24 (* r r s x x x s00))))
 (let ((?x8700 (* (- 36) (* r r s s x x s00))))
 (let ((?x8697 (* 24 (* r r s s s x s00))))
 (let ((?x8241 (* (- 6) (* r r s s s s s00))))
 (let ((?x7357 (* 24 (* s s s s s00 r00))))
 (let ((?x7347 (* 24 (* r s s s s s00 r00))))
 (let ((?x7287 (* (- 24) (* s x x x s00 r00))))
 (let ((?x7266 (* (- 24) (* r s x x x s00 r00))))
 (let ((?x7413 (* 72 (* r s s x x s00 r00))))
 (let ((?x7412 (* 72 (* s s x x s00 r00))))
 (let ((?x7407 (* (- 72) (* r s s s x s00 r00))))
 (let ((?x7406 (* (- 72) (* s s s x s00 r00))))
 (let ((?x6714 (* (- 36) (* r r r x x x r00 x00))))
 (let ((?x6733 (* 108 (* r r r s x x r00 x00))))
 (let ((?x6728 (* (- 108) (* r r r s s x r00 x00))))
 (let ((?x6352 (* 36 (* r r r s s s r00 x00))))
 (let ((?x5941 (* (- 162) (* r r r s s x x00))))
 (let ((?x5940 (* (- 486) (* r r s s x x00))))
 (let ((?x5939 (* (- 486) (* r s s x x00))))
 (let ((?x5937 (* (- 162) (* s s x x00))))
 (let ((?x5744 (* 54 (* r r r s s s x00))))
 (let ((?x5936 (* 162 (* r r s s s x00))))
 (let ((?x5935 (* 162 (* r s s s x00))))
 (let ((?x5724 (* 54 (* s s s x00))))
 (let ((?x5934 (* 162 (* s x x x00))))
 (let ((?x5933 (* 486 (* r s x x x00))))
 (let ((?x5932 (* 486 (* r r s x x x00))))
 (let ((?x5930 (* 162 (* r r r s x x x00))))
 (let ((?x5656 (* (- 54) (* r r r x x x x00))))
 (let ((?x5927 (* (- 162) (* r x x x x00))))
 (let ((?x5928 (* (- 162) (* r r x x x x00))))
 (let ((?x5639 (* (- 54) (* x x x x00))))
 (let ((?x4638 (* 4 (* r r r s s s s00 s00))))
 (let ((?x4667 (* (- 12) (* r r r s s x s00 s00))))
 (let ((?x4666 (* 12 (* r r r s x x s00 s00))))
 (let ((?x4490 (* (- 4) (* r r r x x x s00 s00))))
 (let ((?x7448 (* (- 26) (* s s s s00 s00))))
 (let ((?x7450 (* 78 (* s s x s00 s00))))
 (let ((?x7452 (* (- 78) (* s x x s00 s00))))
 (let ((?x7454 (* 26 (* x x x s00 s00))))
 (let ((?x13195 (+ (* 108 (* r x x x x r00)) (* 54 (* r r x x x x r00)) (* 54 (* x x x x r00)) (* 24 (* r00 s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 36) (* r00 r00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* (- 24) (* r00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* 36 (* r00 r00 s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 63 (* r r x x x s00 s00)) (* 93 (* r x x x s00 s00)) ?x7454 (* (- 189) (* r r s x x s00 s00)) (* (- 279) (* r s x x s00 s00)) ?x7452 (* (- 144) (* s x x x r00 r00)) (* 279 (* r s s x s00 s00)) (* 189 (* r r s s x s00 s00)) ?x7450 (* 24 (* r r r x x x s00)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 63) (* r r s s s s00 s00)) (* (- 93) (* r s s s s00 s00)) ?x7448 (* (- 9) (* s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 756 (* r s s x r00 r00 x00)) (* (- 216) (* r r s x x x r00)) (* (- 756) (* r s x x r00 r00 x00)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* 12 (* s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 36) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 72) (* s s s r00 r00 x00)) (* 216 (* s s x r00 r00 x00)) (* (- 180) (* r r s s s r00 r00 x00)) (* (- 252) (* r s s s r00 r00 x00)) (* 36 (* x x x x r00 r00)) (* 540 (* r r s s x r00 r00 x00)) (* 72 (* r x x x x r00 r00)) (* (- 216) (* s x x r00 r00 x00)) (* 36 (* r r x x x x r00 r00)) (* (- 540) (* r r s x x r00 r00 x00)) (* (- 6) (* r s s x x s00 s00 r00)) (* 180 (* r r x x x r00 r00 x00)) (* 252 (* r x x x r00 r00 x00)) (* 72 (* x x x r00 r00 x00)) (* (- 36) (* r00 r00 x00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 4) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 42) (* s s s s00)) (* 126 (* s s x s00)) (* (- 12) (* s00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 126) (* s x x s00)) (* (- 54) (* x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* 42 (* x x x s00)) (* 36 (* r00 r00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 14) (* r s s s s00 s00 r00)) (* (- 4) (* s s s s00 s00 r00)) (* (- 36) (* s s s s r00 r00 x00)) (* (- 10) (* r r s s s s00 s00 r00)) (* 2 (* r s x x x s00 s00 r00)) (* (- 36) (* r00 r00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522)) (* 12 (* s s x s00 s00 r00)) (* 42 (* r s s x s00 s00 r00)) (* 30 (* r r s s x s00 s00 r00)) (* (- 12) (* s x x s00 s00 r00)) (* (- 42) (* r s x x s00 s00 r00)) (* (- 30) (* r r s x x s00 s00 r00)) (* 4 (* x x x s00 s00 r00)) (* 14 (* r x x x s00 s00 r00)) (* 10 (* r r x x x s00 s00 r00)) (* (- 36) (* r s s s s r00 r00 x00)) (* (- 2) (* ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 36) (* r00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 24) (* r00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* (- 54) (* x00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 2) (* r00 s00 s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 432) (* r s s s x r00)) (* (- 216) (* r r s s s x r00)) (* 648 (* r s s x x r00)) (* (- 4) (* s00 s00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 72 (* r s s s s r00 r00)) (* 54 (* s s s s r00)) (* 54 (* r00 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 24 (* s00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 2 (* s x x x s00 s00 r00)) ?x4490 ?x4666 (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528)) (* (- 6) (* x00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 2) (* s00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 54) (* r00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522)) (* 4 (* s00 s00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* 48 (* x00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* 2 (* ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522 ?x1522)) ?x4667 (* (- 6) (* s00 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 108 (* r s s s s r00)) (* 54 (* r r s s s s r00)) (* (- 216) (* s s s x r00)) (* 324 (* s s x x r00)) (* 324 (* r r s s x x r00)) ?x4638 (* (- 2) (* r00 s00 s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 12 (* s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* (- 216) (* s x x x r00)) (* 54 (* r00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1522 ?x1522)) ?x5639 ?x5928 ?x5927 ?x5656 (* (- 144) (* r r s s s x r00 r00)) (* 24 (* r00 s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 2 (* s00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 4) (* r00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 36 (* r00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) ?x5930 ?x5932 ?x5933 ?x5934 ?x5724 ?x5935 ?x5936 ?x5744 ?x5937 ?x5939 ?x5940 ?x5941 (* 6 (* s s s x s00 s00 r00)) (* 6 (* r s s s x s00 s00 r00)) (* 2 (* r00 s00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* 3 (* ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522 ?x1522)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* 24 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 72) (* s s s r00 x00)) (* (- 270) (* r s s s r00 x00)) (* (- 162) (* r r s s s r00 x00)) ?x6352 (* 216 (* s s x r00 x00)) (* 810 (* r s s x r00 x00)) (* 486 (* r r s s x r00 x00)) ?x6728 (* (- 216) (* s x x r00 x00)) (* (- 810) (* r s x x r00 x00)) (* (- 486) (* r r s x x r00 x00)) ?x6733 (* (- 24) (* r r r s s s s00)) (* 72 (* x x x r00 x00)) (* 270 (* r x x x r00 x00)) (* 162 (* r r x x x r00 x00)) (* (- 15) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* 72 (* r r r s s x s00)) ?x6714 (* 108 (* s s s x r00 r00 x00)) (* (- 504) (* r s s x s00 r00)) (* (- 144) (* s s x s00 r00)) (* (- 54) (* s s s s r00 x00)) (* (- 144) (* s s s x r00 r00)) (* 4 (* r00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522 ?x1522)) (* (- 360) (* r r s s x s00 r00)) ?x7406 ?x7407 (* 144 (* s x x s00 r00)) (* 504 (* r s x x s00 r00)) (* 360 (* r r s x x s00 r00)) ?x7412 ?x7413 (* (- 54) (* r s s s s r00 x00)) (* 162 (* s s s x r00 x00)) (* 162 (* r s s s x r00 x00)) (* (- 48) (* x x x s00 r00)) (* (- 168) (* r x x x s00 r00)) (* (- 162) (* s s x x r00 x00)) ?x7266 (* (- 120) (* r r x x x s00 r00)) (* (- 162) (* r s s x x r00 x00)) ?x7287 ?x7347 (* 54 (* s x x x r00 x00)) ?x7357 (* 54 (* r s x x x r00 x00)) (* 120 (* r r s s s s00 r00)) (* 168 (* r s s s s00 r00)) (* (- 288) (* r s s s x r00 r00)) (* 48 (* s s s s00 r00)) (* 108 (* r s s s x r00 r00 x00)) (* (- 135) (* r s s s s00)) (* (- 117) (* r r s s s s00)) (* 405 (* r s s x s00)) (* 351 (* r r s s x s00)) (* (- 405) (* r s x x s00)) (* (- 351) (* r r s x x s00)) (* (- 72) (* r r r s x x s00)) (* 135 (* r x x x s00)) (* 117 (* r r x x x s00)) (* (- 432) (* r s x x x r00)) (* (- 6) (* s s x x s00 s00 r00)) (* 36 (* r r s s s s r00 r00)) (* (- 15) (* s s s s s00)) (* (- 21) (* r s s s s s00)) ?x8241 (* 51 (* s s s x s00)) (* 75 (* r s s s x s00)) ?x8697 (* (- 63) (* s s x x s00)) (* (- 99) (* r s s x x s00)) ?x8700 (* (- 2) (* s s s s s00 s00 r00)) (* (- 2) (* r s s s s s00 s00 r00)) (* 216 (* s s x x r00 r00)) (* 6 (* x00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* 33 (* s x x x s00)) (* 57 (* r s x x x s00)) ?x8703 (* 432 (* r s s x x r00 r00)) (* 216 (* r r s s x x r00 r00)) (* 36 (* s s s s r00 r00)) ?x8660 ?x8704 ?x8686 (* 36 (* s x x x r00 r00 x00)) (* 36 (* r s x x x r00 r00 x00)) (* 12 (* s s s s00 x00)) (* (- 36) (* s s x s00 x00)) (* 36 (* s x x s00 x00)) (* (- 12) (* x x x s00 x00)) (* 42 (* r s s s s00 x00)) (* 30 (* r r s s s s00 x00)) ?x9004 ?x9014 (* (- 126) (* r s s x s00 x00)) (* (- 90) (* r r s s x s00 x00)) ?x9351 ?x9352 (* 126 (* r s x x s00 x00)) (* 90 (* r r s x x s00 x00)) (* (- 24) (* ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) ?x9355 (* 4 (* r00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) ?x9356 (* 6 (* s00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522)) (* 36 (* r00 x00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* (- 42) (* r x x x s00 x00)) (* (- 30) (* r r x x x s00 x00)) ?x9317 ?x9328 (* (- 36) (* r00 x00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 9) (* ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 6) (* ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* (- 12) (* s00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* 756 (* r s x x s00 r00 r00)) (* (- 108) (* s s x x r00 r00 x00)) ?x10564 ?x10565 ?x10566 (* 216 (* s x x s00 r00 r00)) ?x10568 (* (- 756) (* r s s x s00 r00 r00)) (* (- 540) (* r r s s x s00 r00 r00)) (* (- 216) (* s s x s00 r00 r00)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1522 ?x1522)) (* 6 (* ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 180 (* r r s s s s00 r00 r00)) ?x10300 ?x10310 (* 72 (* s s s s00 r00 r00)) (* 252 (* r s s s s00 r00 r00)) (* (- 252) (* r x x x s00 r00 r00)) (* (- 144) (* r r s x x x r00 r00)) ?x10358 (* (- 180) (* r r x x x s00 r00 r00)) ?x10379 (* (- 72) (* x x x s00 r00 r00)) (* 540 (* r r s x x s00 r00 r00)) (* (- 288) (* r s x x x r00 r00)) (* (- 108) (* r s s x x r00 r00 x00)) (* (- 45) (* s s x x s00 s00)) (* 45 (* s s s x s00 s00)) (* (- 45) (* r s s x x s00 s00)) (* (- 15) (* s s s s s00 s00)) (* 15 (* r s x x x s00 s00)) (* 15 (* s x x x s00 s00)) (* (- 15) (* r s s s s s00 s00)) (* 45 (* r s s s x s00 s00)) (* 24 (* r00 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* 9 (* ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* 3 (* ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* 9 (* ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* 6 (* ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 15) (* s00 s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 48) (* ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522)) (* 54 (* ?x1535 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 2) (* r00 s00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* 6 (* s00 x00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 3) (* ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* 9 (* ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522)) (* 36 (* r00 r00 s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* 36 (* r00 r00 ?x1528 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 36) (* r00 r00 x00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* 27 (* ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 6) (* s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1522 ?x1522)) (* (- 54) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)) (* 36 (* r00 r00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1522 ?x1522)) (* 4 (* r00 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522)) (* 6 (* s00 x00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 6) (* x00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x1528 ?x1528 ?x1528 ?x1528)) (* (- 54) (* r00 x00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522)) (* (- 24) (* r00 ?x1528 ?x1528 ?x1528 ?x1522 ?x1522 ?x1522 ?x1522)) (* (- 9) (* s00 ?x1535 ?x1535 ?x1535 ?x1528 ?x1522 ?x1522)))))
 (let ((?x1485 (* x00 x00)))
 (let ((?x1515 (* (- 108) ?x1485)))
 (let ((?x1323 (* s00 s00 s00)))
 (let ((?x1514 (* (- 16) ?x1323)))
 (let ((?x1195 (* s00 r00 r00 r00)))
 (let ((?x1510 (* (- 216) ?x1195)))
 (let ((?x1021 (* r00 r00 r00 x00)))
 (let ((?x1022 (* 432 ?x1021)))
 (let ((?x944 (* s00 x00)))
 (let ((?x1268 (* 108 ?x944)))
 (let ((?x870 (* s00 s00 r00 r00)))
 (let ((?x871 (* 36 ?x870)))
 (let ((?x807 (* s00 s00 r00)))
 (let ((?x1151 (* 108 ?x807)))
 (let ((?x786 (* s00 r00 r00)))
 (let ((?x1139 (* 36 ?x786)))
 (let ((?x730 (* s00 s00)))
 (let ((?x1504 (* (- 51) ?x730)))
 (let ((?x704 (* s r00 r00)))
 (let ((?x1003 (* (- 36) ?x704)))
 (let ((?x661 (* r00 x00)))
 (let ((?x1501 (* (- 108) ?x661)))
 (let ((?x652 (* s00 r00 x00)))
 (let ((?x1500 (* (- 216) ?x652)))
 (let ((?x565 (* s00 r00)))
 (let ((?x659 (* 54 ?x565)))
 (let ((?x1126 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1516 (+ ?x143 ?x1126 ?x659 ?x1500 ?x1501 (* (- 15) (* s s)) ?x1003 ?x1504 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1139 ?x1151 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x871 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1268 (* 108 (* s x)) (* (- 108) (* x x)) ?x1022 (* 12 (* s s s00)) ?x1510 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1514 (* 216 (* x x00)) ?x1515)))
 (let (($x1517 (= ?x1516 0)))
 (let ((?x1016 (* r00 r00 x00)))
 (let ((?x1029 (* (- 36) ?x1016)))
 (let ((?x945 (* 6 ?x944)))
 (let ((?x835 (* (- 2) ?x807)))
 (let ((?x1055 (* (- 15) ?x730)))
 (let ((?x684 (* s s)))
 (let ((?x708 (* 3 ?x684)))
 (let ((?x690 (* (- 54) ?x661)))
 (let ((?x703 (* 24 ?x565)))
 (let ((?x1218 (+ ?x143 ?x1126 (* (- 24) (* r s)) (* 24 (* r s00)) ?x703 ?x690 ?x708 (* 54 (* r x)) (* 36 (* r x r00)) ?x1003 ?x1055 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1139 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x835 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x945 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x1029 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1223 (= ?x1218 0)))
 (let ((?x787 (* 6 ?x786)))
 (let ((?x743 (* (- 4) ?x730)))
 (let ((?x685 (* 2 ?x684)))
 (let ((?x675 (* (- 18) ?x661)))
 (let ((?x680 (* 9 ?x565)))
 (let ((?x517 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x884 (+ ?x47 ?x517 (* (- 9) (* r s)) (* 9 (* r s00)) ?x680 ?x675 ?x685 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x704) ?x743 (* 18 (* x r00)) ?x787 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x891 (= ?x884 0)))
 (let ((?x608 (* r00 r00 r00)))
 (let ((?x609 (* 12 ?x608)))
 (let ((?x643 (* (- 6) ?x565)))
 (let ((?x640 (* (- 6) x00)))
 (let ((?x639 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x638 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x644 (+ ?x43 ?x638 ?x56 ?x44 ?x639 ?x640 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x643 ?x609)))
 (let (($x645 (= ?x644 0)))
 (let ((?x440 (* r00 r00)))
 (let ((?x441 (* 3 ?x440)))
 (let ((?x470 (* (- 1) s00)))
 (let (($x473 (= (+ s ?x470 (* (- 3) (* r r)) ?x441) 0)))
 (let (($x13201 (and $x473 $x645 $x891 $x1223 $x1517 (not (= ?x13195 0)))))
 (let ((?x9032 (+ 3 s ?x211)))
 (let ((?x5767 (+ x ?x419)))
 (let ((?x6235 (+ (* 3 (* ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* 2 (* r00 s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 15) (* s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 6 (* x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 36) (* r00 r00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 4) (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 24) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 4 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 15) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 54 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 12 (* s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 54 (* r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 24 (* r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 24 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 2 (* r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 24 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 24) (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 9 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 9) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 6) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 12) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 2) (* r00 s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 6 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 12) (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 6 (* s00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 24 (* r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 54 (* r00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 2) (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 6) (* x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 2) (* r00 s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 54) (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 4 (* s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 48 (* x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 2 (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 6) (* s00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 54 (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 9) (* s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 6 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 36) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 12 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 4 (* r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* 15 (* s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 9) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 6) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 6) (* s00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 54) (* r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 3 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 9 (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 48) (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 6 (* ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 9 (* ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 54 (* ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 15) (* s00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 6 (* s00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 3) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 36) (* r00 r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 9 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 27 (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 6) (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 4 (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 6 (* s00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 36) (* r00 r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 54) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 6) (* x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 54) (* r00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 9) (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)))))
 (let (($x8095 (not (= ?x6235 0))))
 (let ((?x5857 (* 108 ?x1485)))
 (let ((?x3787 (* (- 9) s)))
 (let ((?x8086 (* r00 r00 s00)))
 (let ((?x624 (* (- 36) ?x8086)))
 (let ((?x137 (* 9 s00)))
 (let ((?x8671 (* 51 ?x730)))
 (let ((?x4478 (* r00 r00 s)))
 (let ((?x8302 (* 36 ?x4478)))
 (let ((?x8628 (* 16 ?x1323)))
 (let ((?x8583 (* (- 108) ?x944)))
 (let ((?x8353 (* (- 432) ?x1021)))
 (let ((?x9592 (* 108 ?x661)))
 (let ((?x5136 (+ (* 216 (* r00 s00 x00)) ?x9592 (* (- 54) (* r00 s00)) (* 15 ?x684) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x8353 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x8583 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x8628 (* (- 108) (* x s)) ?x8302 ?x8671 (* (- 108) (* r00 x)) ?x137 ?x624 ?x3787 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5857)))
 (let (($x5027 (= ?x5136 0)))
 (let ((?x5654 (* 15 ?x730)))
 (let ((?x5646 (* 36 ?x1016)))
 (let ((?x7268 (* (- 6) ?x944)))
 (let ((?x7249 (* 54 ?x661)))
 (let ((?x5662 (+ (* 24 (* s r)) ?x7249 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x684) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x7268 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x8302 ?x5646 ?x5654 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x624 (* 54 (* x00 r)) ?x3787 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x8146 (* 4 ?x730)))
 (let ((?x5133 (* 18 ?x661)))
 (let ((?x8197 (+ (* 9 (* s r)) ?x5133 (* (- 9) (* r00 s00)) (* (- 2) ?x684) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x4478) ?x8146 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x8086) (* 18 (* x00 r)) ?x638 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x5022 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x638 ?x639 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x640 ?x609)))
 (let (($x5479 (= (+ s00 ?x419 (* 3 (* r r)) (* (- 3) ?x440)) 0)))
 (let (($x5569 (and $x5479 (= ?x5022 0) (= ?x8197 0) (= ?x5662 0) $x5027 $x8095)))
 (rewrite (= $x5569 $x13201)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x8097 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x9032 (+ 3 s ?x211)))
 (let ((?x419 (* (- 1) s)))
 (let ((?x5767 (+ x ?x419)))
 (let ((?x1535 (+ 1 r)))
 (let ((?x6235 (+ (* 3 (* ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* 2 (* r00 s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 15) (* s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 6 (* x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 36) (* r00 r00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 4) (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 24) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 4 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 15) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 54 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 12 (* s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 54 (* r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 24 (* r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 24 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 2 (* r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 24 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 24) (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 9 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 9) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 6) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 12) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 2) (* r00 s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 6 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 12) (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 6 (* s00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 24 (* r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 54 (* r00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 2) (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 6) (* x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 2) (* r00 s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 54) (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 4 (* s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 48 (* x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 2 (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 6) (* s00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 54 (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 9) (* s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 6 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 36) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 12 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 4 (* r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* 15 (* s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 9) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 6) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 6) (* s00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 54) (* r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 3 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 9 (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 48) (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 6 (* ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 9 (* ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 54 (* ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 15) (* s00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 6 (* s00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 3) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 36) (* r00 r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 9 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 27 (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 6) (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 4 (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 6 (* s00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 36) (* r00 r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 54) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 6) (* x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 54) (* r00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 9) (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)))))
 (let (($x8095 (not (= ?x6235 0))))
 (let ((?x1485 (* x00 x00)))
 (let ((?x5857 (* 108 ?x1485)))
 (let ((?x3787 (* (- 9) s)))
 (let ((?x8086 (* r00 r00 s00)))
 (let ((?x624 (* (- 36) ?x8086)))
 (let ((?x137 (* 9 s00)))
 (let ((?x730 (* s00 s00)))
 (let ((?x8671 (* 51 ?x730)))
 (let ((?x4478 (* r00 r00 s)))
 (let ((?x8302 (* 36 ?x4478)))
 (let ((?x1323 (* s00 s00 s00)))
 (let ((?x8628 (* 16 ?x1323)))
 (let ((?x944 (* s00 x00)))
 (let ((?x8583 (* (- 108) ?x944)))
 (let ((?x1021 (* r00 r00 r00 x00)))
 (let ((?x8353 (* (- 432) ?x1021)))
 (let ((?x661 (* r00 x00)))
 (let ((?x9592 (* 108 ?x661)))
 (let ((?x5136 (+ (* 216 (* r00 s00 x00)) ?x9592 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x8353 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x8583 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x8628 (* (- 108) (* x s)) ?x8302 ?x8671 (* (- 108) (* r00 x)) ?x137 ?x624 ?x3787 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5857)))
 (let (($x5027 (= ?x5136 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1126 (* (- 9) s00)))
 (let ((?x1055 (* (- 15) ?x730)))
 (let ((?x1016 (* r00 r00 x00)))
 (let ((?x1029 (* (- 36) ?x1016)))
 (let ((?x945 (* 6 ?x944)))
 (let ((?x684 (* s s)))
 (let ((?x708 (* 3 ?x684)))
 (let ((?x690 (* (- 54) ?x661)))
 (let ((?x8532 (+ (* (- 24) (* s r)) ?x690 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x708 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x945 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x4478) ?x1029 ?x1055 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1126 (* 36 ?x8086) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x517 (* (- 3) s00)))
 (let ((?x743 (* (- 4) ?x730)))
 (let ((?x685 (* 2 ?x684)))
 (let ((?x675 (* (- 18) ?x661)))
 (let ((?x8196 (+ (* (- 9) (* s r)) ?x675 (* 9 (* r00 s00)) ?x685 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x4478) ?x743 (* 18 (* r00 x)) ?x517 (* 6 ?x8086) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x8022 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x517 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x5479 (= (+ s00 ?x419 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x5479 (= ?x8022 0) (= ?x8196 0) (= ?x8532 0) $x5027 $x8095)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5666 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x9032 (+ 3 s ?x211)))
 (let ((?x419 (* (- 1) s)))
 (let ((?x5767 (+ x ?x419)))
 (let ((?x1535 (+ 1 r)))
 (let ((?x6235 (+ (* 3 (* ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* 2 (* r00 s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 15) (* s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 6 (* x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 36) (* r00 r00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 4) (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 24) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 4 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 15) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 54 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 12 (* s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 54 (* r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 24 (* r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 24 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 2 (* r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 24 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 24) (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 9 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 9) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 6) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 12) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 2) (* r00 s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 6 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 12) (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 6 (* s00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 24 (* r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 54 (* r00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 2) (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 6) (* x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 2) (* r00 s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 54) (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 4 (* s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 48 (* x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 2 (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 6) (* s00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 54 (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 9) (* s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 6 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 36) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 12 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 4 (* r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* 15 (* s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 9) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 6) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 6) (* s00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 54) (* r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 3 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 9 (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 48) (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 6 (* ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 9 (* ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 54 (* ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 15) (* s00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 6 (* s00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 3) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 36) (* r00 r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 9 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 27 (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 6) (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 4 (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 6 (* s00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 36) (* r00 r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 54) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 6) (* x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 54) (* r00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 9) (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)))))
 (let (($x8095 (not (= ?x6235 0))))
 (let ((?x1485 (* x00 x00)))
 (let ((?x5857 (* 108 ?x1485)))
 (let ((?x3787 (* (- 9) s)))
 (let ((?x8086 (* r00 r00 s00)))
 (let ((?x624 (* (- 36) ?x8086)))
 (let ((?x137 (* 9 s00)))
 (let ((?x730 (* s00 s00)))
 (let ((?x8671 (* 51 ?x730)))
 (let ((?x4478 (* r00 r00 s)))
 (let ((?x8302 (* 36 ?x4478)))
 (let ((?x1323 (* s00 s00 s00)))
 (let ((?x8628 (* 16 ?x1323)))
 (let ((?x944 (* s00 x00)))
 (let ((?x8583 (* (- 108) ?x944)))
 (let ((?x1021 (* r00 r00 r00 x00)))
 (let ((?x8353 (* (- 432) ?x1021)))
 (let ((?x661 (* r00 x00)))
 (let ((?x9592 (* 108 ?x661)))
 (let ((?x5136 (+ (* 216 (* r00 s00 x00)) ?x9592 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x8353 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x8583 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x8628 (* (- 108) (* x s)) ?x8302 ?x8671 (* (- 108) (* r00 x)) ?x137 ?x624 ?x3787 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5857)))
 (let (($x5027 (= ?x5136 0)))
 (let ((?x5654 (* 15 ?x730)))
 (let ((?x1016 (* r00 r00 x00)))
 (let ((?x5646 (* 36 ?x1016)))
 (let ((?x7268 (* (- 6) ?x944)))
 (let ((?x7249 (* 54 ?x661)))
 (let ((?x5662 (+ (* 24 (* s r)) ?x7249 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x7268 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x8302 ?x5646 ?x5654 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x624 (* 54 (* x00 r)) ?x3787 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x638 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x8146 (* 4 ?x730)))
 (let ((?x5133 (* 18 ?x661)))
 (let ((?x8197 (+ (* 9 (* s r)) ?x5133 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x4478) ?x8146 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x8086) (* 18 (* x00 r)) ?x638 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x608 (* r00 r00 r00)))
 (let ((?x609 (* 12 ?x608)))
 (let ((?x640 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x639 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x5022 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x638 ?x639 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x640 ?x609)))
 (let (($x5479 (= (+ s00 ?x419 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x5569 (and $x5479 (= ?x5022 0) (= ?x8197 0) (= ?x5662 0) $x5027 $x8095)))
 (let ((?x143 (* 9 s)))
 (let ((?x1126 (* (- 9) s00)))
 (let ((?x1055 (* (- 15) ?x730)))
 (let ((?x1029 (* (- 36) ?x1016)))
 (let ((?x945 (* 6 ?x944)))
 (let ((?x684 (* s s)))
 (let ((?x708 (* 3 ?x684)))
 (let ((?x690 (* (- 54) ?x661)))
 (let ((?x8532 (+ (* (- 24) (* s r)) ?x690 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x708 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x945 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x4478) ?x1029 ?x1055 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1126 (* 36 ?x8086) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x517 (* (- 3) s00)))
 (let ((?x743 (* (- 4) ?x730)))
 (let ((?x685 (* 2 ?x684)))
 (let ((?x675 (* (- 18) ?x661)))
 (let ((?x8196 (+ (* (- 9) (* s r)) ?x675 (* 9 (* r00 s00)) ?x685 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x4478) ?x743 (* 18 (* r00 x)) ?x517 (* 6 ?x8086) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x8022 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x517 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x608))))
 (let (($x2031 (and $x5479 (= ?x8022 0) (= ?x8196 0) (= ?x8532 0) $x5027 $x8095)))
 (rewrite (= $x2031 $x5569)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x416 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x218 (+ (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 2 ?x216 r00 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x223 (+ (- ?x218 (* 15 ?x216 ?x216 s00 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 x00) (* 36 ?x216 ?x216 r00 r00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x227 (- (- ?x223 (* 36 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00)) (* 4 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 s00 s00 ?x213))))
 (let ((?x230 (+ ?x227 (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 36 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x236 (+ (- ?x230 (* 4 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 36 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 24 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 36 ?x216 ?x216 r00 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x240 (+ (- ?x236 (* 24 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 4 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213))))
 (let ((?x244 (- (- ?x240 (* 15 ?x216 ?x216 ?x216 ?x212 ?x212 s00 s00 ?x213)) (* 36 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x251 (+ ?x244 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213) (* 36 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213 x00) (* 54 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213) (* 12 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 54 ?x216 r00 ?x212 ?x213 ?x213 ?x213 x00) (* 24 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 ?x213))))
 (let ((?x255 (- (- ?x251 (* 36 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 24 ?x216 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x258 (+ ?x255 (* 24 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213) (* 2 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x262 (+ (- ?x258 (* 36 ?x216 ?x216 r00 r00 ?x213 ?x213 ?x213 x00)) (* 24 ?x216 ?x216 ?x216 s00 ?x213 ?x213 ?x213))))
 (let ((?x266 (+ (- ?x262 (* 24 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213)) (* 36 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x270 (- (- ?x266 (* 2 r00 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213)) (* 4 ?x216 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x275 (- (+ ?x270 (* 9 ?x216 ?x212 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x278 (+ (- ?x275 (* 6 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 2 ?x216 ?x216 ?x216 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x283 (- (- ?x278 (* 12 ?x216 ?x216 ?x212 s00 ?x213 ?x213 ?x213)) (* 36 ?x216 ?x216 r00 r00 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x286 (+ (- ?x283 (* 2 ?x216 ?x216 r00 s00 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x212 s00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x292 (- (- ?x286 (* 4 ?x216 ?x216 ?x216 s00 s00 ?x213 ?x213 ?x213)) (* 12 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x294 (- (- ?x292 (* 54 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 x00)) (* 36 ?x216 r00 r00 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x299 (+ ?x294 (* 6 ?x216 ?x216 s00 ?x213 ?x213 ?x213 x00) (* 24 ?x216 ?x216 r00 s00 ?x213 ?x213 ?x213) (* 54 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 24 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x303 (+ (- ?x299 (* 54 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00)) (* 36 ?x216 ?x216 ?x216 r00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x310 (- (- ?x303 (* 2 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 x00))))
 (let ((?x312 (- (- ?x310 (* 2 ?x216 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 2 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 s00 ?x213))))
 (let ((?x315 (+ (- ?x312 (* 54 ?x216 r00 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 4 ?x216 ?x216 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x319 (- (- ?x315 (* 36 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 36 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x213))))
 (let ((?x323 (+ ?x319 (* 48 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213 x00) (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x327 (- (- ?x323 (* 24 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213)) (* 6 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x332 (- (+ ?x327 (* 54 ?x216 ?x216 r00 ?x213 ?x213 ?x213 ?x213)) (* 9 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x337 (+ (- ?x332 (* 54 ?x216 ?x216 ?x216 ?x213 ?x213 ?x213 x00)) (* 54 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213) (* 36 ?x216 r00 r00 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x341 (- (- ?x337 (* 36 ?x216 ?x216 ?x216 r00 ?x213 ?x213 ?x213 x00)) (* 36 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 x00))))
 (let ((?x345 (+ ?x341 (* 12 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213) (* 36 ?x216 r00 r00 ?x212 ?x212 ?x213 ?x213 ?x213) (* 2 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213))))
 (let ((?x350 (+ (- ?x345 (* 24 ?x216 r00 ?x212 s00 ?x213 ?x213 ?x213)) (* 4 r00 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 15 ?x216 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x356 (- (- ?x350 (* 9 ?x216 ?x216 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 s00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x358 (- (- ?x356 (* 6 ?x216 ?x212 s00 ?x213 ?x213 ?x213 x00)) (* 54 ?x216 ?x216 r00 ?x213 ?x213 ?x213 x00))))
 (let ((?x361 (+ ?x358 (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213) (* 9 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x368 (+ (- ?x361 (* 48 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 6 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 9 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 54 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 24 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x373 (- (- ?x368 (* 24 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213)) (* 15 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x376 (+ (- ?x373 (* 2 r00 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213 x00))))
 (let ((?x381 (- (- ?x376 (* 3 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 2 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213))))
 (let ((?x387 (+ (- ?x381 (* 36 ?x216 r00 r00 ?x212 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213) (* 36 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 s00 ?x213) (* 27 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x395 (+ (- ?x387 (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213 ?x213)) (* 36 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 2 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213) (* 36 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x213 ?x213) (* 4 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213 x00))))
 (let ((?x399 (- (- ?x395 (* 36 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x213 x00)) (* 2 ?x216 ?x216 r00 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x407 (- (+ ?x399 (* 54 ?x216 ?x216 ?x216 ?x213 ?x213 ?x213 ?x213)) (* 54 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 x00))))
 (let ((?x409 (- (- ?x407 (* 6 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00)) (* 54 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x411 (- (- ?x409 (* 24 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x411 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x8041 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x9032 (+ 3 s ?x211)))
 (let ((?x419 (* (- 1) s)))
 (let ((?x5767 (+ x ?x419)))
 (let ((?x1535 (+ 1 r)))
 (let ((?x6235 (+ (* 3 (* ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* 2 (* r00 s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 15) (* s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 6 (* x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 36) (* r00 r00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 4) (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 24) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 4 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 15) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 54 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 12 (* s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 54 (* r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 24 (* r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 24 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 2 (* r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 24 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 24) (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 9 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 9) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 6) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 12) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 2) (* r00 s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 6 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 4) (* s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 12) (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 6 (* s00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 24 (* r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 54 (* r00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 2) (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 6) (* x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 2) (* r00 s00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 54) (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 4 (* s00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 48 (* x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 2 (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 6) (* s00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 54 (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 9) (* s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 54) (* x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 6 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 36) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 36) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 12 (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 2 (* s00 ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 4 (* r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032 ?x9032)) (* 15 (* s00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 9) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* (- 6) (* s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 6) (* s00 x00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 54) (* r00 x00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767)) (* 3 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 9 (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* (- 48) (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032)) (* 6 (* ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 9 (* ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 54 (* ?x1535 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 24 (* r00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 24) (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 15) (* s00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 6 (* s00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 3) (* ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 36) (* r00 r00 s00 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 9 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* 27 (* ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* (- 6) (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x5767 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* 2 (* ?x1535 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* 36 (* r00 r00 ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x9032 ?x9032)) (* 4 (* r00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032)) (* 6 (* s00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 36) (* r00 r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 2) (* r00 s00 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x9032)) (* 54 (* ?x1535 ?x1535 ?x1535 ?x5767 ?x5767 ?x5767 ?x5767)) (* (- 54) (* r00 x00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)) (* (- 6) (* x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 54) (* r00 x00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032)) (* (- 24) (* r00 ?x5767 ?x5767 ?x5767 ?x9032 ?x9032 ?x9032 ?x9032)) (* (- 9) (* s00 ?x1535 ?x1535 ?x1535 ?x5767 ?x9032 ?x9032)))))
 (let (($x8095 (not (= ?x6235 0))))
 (let ((?x1485 (* x00 x00)))
 (let ((?x5857 (* 108 ?x1485)))
 (let ((?x3787 (* (- 9) s)))
 (let ((?x8086 (* r00 r00 s00)))
 (let ((?x624 (* (- 36) ?x8086)))
 (let ((?x137 (* 9 s00)))
 (let ((?x730 (* s00 s00)))
 (let ((?x8671 (* 51 ?x730)))
 (let ((?x4478 (* r00 r00 s)))
 (let ((?x8302 (* 36 ?x4478)))
 (let ((?x1323 (* s00 s00 s00)))
 (let ((?x8628 (* 16 ?x1323)))
 (let ((?x944 (* s00 x00)))
 (let ((?x8583 (* (- 108) ?x944)))
 (let ((?x1021 (* r00 r00 r00 x00)))
 (let ((?x8353 (* (- 432) ?x1021)))
 (let ((?x661 (* r00 x00)))
 (let ((?x9592 (* 108 ?x661)))
 (let ((?x5136 (+ (* 216 (* r00 s00 x00)) ?x9592 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x8353 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x8583 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x8628 (* (- 108) (* x s)) ?x8302 ?x8671 (* (- 108) (* r00 x)) ?x137 ?x624 ?x3787 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5857)))
 (let (($x5027 (= ?x5136 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1126 (* (- 9) s00)))
 (let ((?x1055 (* (- 15) ?x730)))
 (let ((?x1016 (* r00 r00 x00)))
 (let ((?x1029 (* (- 36) ?x1016)))
 (let ((?x945 (* 6 ?x944)))
 (let ((?x684 (* s s)))
 (let ((?x708 (* 3 ?x684)))
 (let ((?x690 (* (- 54) ?x661)))
 (let ((?x8532 (+ (* (- 24) (* s r)) ?x690 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x708 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x945 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x4478) ?x1029 ?x1055 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1126 (* 36 ?x8086) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x517 (* (- 3) s00)))
 (let ((?x743 (* (- 4) ?x730)))
 (let ((?x685 (* 2 ?x684)))
 (let ((?x675 (* (- 18) ?x661)))
 (let ((?x8196 (+ (* (- 9) (* s r)) ?x675 (* 9 (* r00 s00)) ?x685 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x4478) ?x743 (* 18 (* r00 x)) ?x517 (* 6 ?x8086) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x8022 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x517 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x5479 (= (+ s00 ?x419 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2031 (and $x5479 (= ?x8022 0) (= ?x8196 0) (= ?x8532 0) $x5027 $x8095)))
 (let ((?x213 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x218 (+ (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 2 ?x216 r00 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x223 (+ (- ?x218 (* 15 ?x216 ?x216 s00 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 x00) (* 36 ?x216 ?x216 r00 r00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x227 (- (- ?x223 (* 36 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00)) (* 4 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 s00 s00 ?x213))))
 (let ((?x230 (+ ?x227 (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 36 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x236 (+ (- ?x230 (* 4 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 36 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 24 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 36 ?x216 ?x216 r00 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x240 (+ (- ?x236 (* 24 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 4 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x212 ?x213))))
 (let ((?x244 (- (- ?x240 (* 15 ?x216 ?x216 ?x216 ?x212 ?x212 s00 s00 ?x213)) (* 36 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x251 (+ ?x244 (* 2 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213) (* 36 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213 x00) (* 54 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213) (* 12 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 54 ?x216 r00 ?x212 ?x213 ?x213 ?x213 x00) (* 24 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 ?x213))))
 (let ((?x255 (- (- ?x251 (* 36 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 24 ?x216 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x258 (+ ?x255 (* 24 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213) (* 2 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x262 (+ (- ?x258 (* 36 ?x216 ?x216 r00 r00 ?x213 ?x213 ?x213 x00)) (* 24 ?x216 ?x216 ?x216 s00 ?x213 ?x213 ?x213))))
 (let ((?x266 (+ (- ?x262 (* 24 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213)) (* 36 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x270 (- (- ?x266 (* 2 r00 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213)) (* 4 ?x216 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x275 (- (+ ?x270 (* 9 ?x216 ?x212 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x278 (+ (- ?x275 (* 6 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 2 ?x216 ?x216 ?x216 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x283 (- (- ?x278 (* 12 ?x216 ?x216 ?x212 s00 ?x213 ?x213 ?x213)) (* 36 ?x216 ?x216 r00 r00 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x286 (+ (- ?x283 (* 2 ?x216 ?x216 r00 s00 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x212 s00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x292 (- (- ?x286 (* 4 ?x216 ?x216 ?x216 s00 s00 ?x213 ?x213 ?x213)) (* 12 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x294 (- (- ?x292 (* 54 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 x00)) (* 36 ?x216 r00 r00 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x299 (+ ?x294 (* 6 ?x216 ?x216 s00 ?x213 ?x213 ?x213 x00) (* 24 ?x216 ?x216 r00 s00 ?x213 ?x213 ?x213) (* 54 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 24 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x303 (+ (- ?x299 (* 54 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00)) (* 36 ?x216 ?x216 ?x216 r00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x310 (- (- ?x303 (* 2 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 x00))))
 (let ((?x312 (- (- ?x310 (* 2 ?x216 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 2 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 s00 ?x213))))
 (let ((?x315 (+ (- ?x312 (* 54 ?x216 r00 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 4 ?x216 ?x216 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x319 (- (- ?x315 (* 36 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 36 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x213))))
 (let ((?x323 (+ ?x319 (* 48 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213 x00) (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x327 (- (- ?x323 (* 24 ?x216 ?x216 r00 ?x212 ?x213 ?x213 ?x213)) (* 6 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x332 (- (+ ?x327 (* 54 ?x216 ?x216 r00 ?x213 ?x213 ?x213 ?x213)) (* 9 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x337 (+ (- ?x332 (* 54 ?x216 ?x216 ?x216 ?x213 ?x213 ?x213 x00)) (* 54 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213) (* 36 ?x216 r00 r00 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x341 (- (- ?x337 (* 36 ?x216 ?x216 ?x216 r00 ?x213 ?x213 ?x213 x00)) (* 36 ?x216 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 x00))))
 (let ((?x345 (+ ?x341 (* 12 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213) (* 36 ?x216 r00 r00 ?x212 ?x212 ?x213 ?x213 ?x213) (* 2 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213))))
 (let ((?x350 (+ (- ?x345 (* 24 ?x216 r00 ?x212 s00 ?x213 ?x213 ?x213)) (* 4 r00 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 15 ?x216 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x356 (- (- ?x350 (* 9 ?x216 ?x216 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 s00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x358 (- (- ?x356 (* 6 ?x216 ?x212 s00 ?x213 ?x213 ?x213 x00)) (* 54 ?x216 ?x216 r00 ?x213 ?x213 ?x213 x00))))
 (let ((?x361 (+ ?x358 (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213) (* 9 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x368 (+ (- ?x361 (* 48 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 6 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 9 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 54 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 24 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x373 (- (- ?x368 (* 24 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213)) (* 15 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x376 (+ (- ?x373 (* 2 r00 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213 x00))))
 (let ((?x381 (- (- ?x376 (* 3 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 2 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213))))
 (let ((?x387 (+ (- ?x381 (* 36 ?x216 r00 r00 ?x212 s00 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213) (* 36 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 s00 ?x213) (* 27 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x395 (+ (- ?x387 (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213 ?x213)) (* 36 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 2 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213) (* 36 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x213 ?x213) (* 4 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213 x00))))
 (let ((?x399 (- (- ?x395 (* 36 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x213 x00)) (* 2 ?x216 ?x216 r00 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x407 (- (+ ?x399 (* 54 ?x216 ?x216 ?x216 ?x213 ?x213 ?x213 ?x213)) (* 54 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213 x00))))
 (let ((?x409 (- (- ?x407 (* 6 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00)) (* 54 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x411 (- (- ?x409 (* 24 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x415 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x411 0))))))
 (rewrite (= $x415 $x2031)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x417 (asserted $x416)))
 (let ((@x9508 (mp (mp @x417 (quant-intro (proof-bind ?x8041) (= $x416 $x8097)) $x8097) (rewrite (= $x8097 $x8097)) $x8097)))
 (let ((@x9869 (mp (mp @x9508 (quant-intro (proof-bind ?x5666) (= $x8097 $x5665)) $x5665) (quant-intro (proof-bind ?x5461) (= $x5665 $x8366)) $x8366)))
 (let ((@x6452 (mp (mp~ @x9869 (sk (~ $x8366 $x11117)) $x11117) (rewrite (= $x11117 $x10618)) $x10618)))
 (let ((@x3280 (and-elim @x6452 $x11124)))
 (let ((@x3055 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x11124) $x4294)) @x3280 $x4294)))
 (let (($x4136 (>= ?x1582 0)))
 (let ((@x2876 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x11124) $x4136)) @x3280 $x4136)))
 (let (($x4246 (<= ?x669 0)))
 (let ((@x5805 (and-elim @x6452 $x6393)))
 (let ((@x10136 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6393) $x4246)) @x5805 $x4246)))
 (let (($x10686 (>= ?x669 0)))
 (let ((@x10754 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6393) $x10686)) @x5805 $x10686)))
 (let (($x10691 (<= ?x1931 0)))
 (let ((@x5802 (and-elim @x6452 $x1938)))
 (let ((@x10496 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1938) $x10691)) @x5802 $x10691)))
 (let (($x10072 (>= ?x1931 0)))
 (let ((@x7466 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1938) $x10072)) @x5802 $x10072)))
 (let (($x9806 (<= ?x9388 0)))
 (let ((@x2942 (and-elim @x6452 $x9392)))
 (let ((@x3359 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9392) $x9806)) @x2942 $x9806)))
 (let (($x10064 (>= ?x9388 0)))
 (let ((@x6367 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9392) $x10064)) @x2942 $x10064)))
 (let (($x4302 (<= ?x11137 0)))
 (let ((@x5630 (and-elim @x6452 $x11139)))
 (let ((@x4942 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x11139) $x4302)) @x5630 $x4302)))
 (let (($x10684 (>= ?x11137 0)))
 (let ((@x11143 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x11139) $x10684)) @x5630 $x10684)))
 (let (($x10304 (not (<= ?x10556 0))))
 (let (($x1810 (>= ?x10556 0)))
 (let ((@x8131 ((_ th-lemma arith) (hypothesis (not $x1810)) @x2876 @x3055 @x6367 @x3359 @x7466 @x10496 @x6367 @x3359 @x7466 @x10496 @x7466 @x10496 @x11143 @x4942 @x2876 @x3055 @x6367 @x3359 @x2876 @x3055 @x7466 @x10496 @x10754 @x10136 @x2876 @x3055 false)))
 (let ((@x4949 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x9987 $x10304 (not $x1810))) (and-elim @x6452 $x10579) (or $x10304 (not $x1810)))))
 ((_ th-lemma arith) (unit-resolution @x4949 (lemma @x8131 $x1810) $x10304) @x2876 @x3055 @x6367 @x3359 @x7466 @x10496 @x6367 @x3359 @x7466 @x10496 @x7466 @x10496 @x11143 @x4942 @x2876 @x3055 @x6367 @x3359 @x2876 @x3055 @x7466 @x10496 @x10754 @x10136 @x2876 @x3055 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        43
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2924
 :arith-nonlinear-bounds    36
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 484
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                6.37
 :memory                    4.72
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                13970358
 :num-checks                1
 :propagations              12
 :rlimit-count              128012
 :time                      0.16
 :total-time                0.21)
