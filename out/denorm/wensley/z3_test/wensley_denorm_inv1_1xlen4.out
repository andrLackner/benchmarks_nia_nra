unsat
((set-logic NRA)
(declare-fun d!6 () Real)
(declare-fun a!8 () Real)
(declare-fun b!7 () Real)
(declare-fun y!5 () Real)
(proof
(let ((?x624 (* (- 2.0) (* y!5 b!7))))
 (let ((?x752 (+ (* 2.0 (* y00 b!7)) ?x624 (* a!8 d!6) (* (- 1.0) (* a00 d!6)))))
 (let (($x591 (>= ?x752 0.0)))
 (let (($x586 (= 0.0 ?x752)))
 (let ((@x867 (symm (commutativity (= $x586 (= ?x752 0.0))) (= (= ?x752 0.0) $x586))))
 (let (($x495 (= ?x752 0.0)))
 (let ((?x618 (* (- 1.0) (* d00 b!7))))
 (let ((?x482 (* b00 d!6)))
 (let ((?x614 (+ ?x482 ?x618)))
 (let (($x566 (= ?x614 0.0)))
 (let ((?x953 (* (- 1.0) (* d00 a!8))))
 (let ((?x214 (* 2.0 (* b00 y!5))))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let ((?x892 (+ ?x30 ?x86 ?x214 ?x953)))
 (let (($x580 (= ?x892 0.0)))
 (let ((?x886 (* (/ 3.0 32.0) (* a!8 a!8 y!5 b!7 d!6 d!6 d!6 d!6))))
 (let ((?x424 (* (/ 1.0 4.0) (* a!8 b!7 b!7 d!6 d!6))))
 (let ((?x533 (* (/ 1.0 64.0) (* a!8 a!8 b!7 d!6 d!6 d!6 d!6 d!6))))
 (let ((?x711 (* (/ 1.0 64.0) (* b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6))))
 (let ((?x340 (* (/ 1.0 64.0) (* b!7 b!7 b!7 d!6 d!6 d!6 d!6))))
 (let ((?x579 (* (/ 1.0 32.0) (* a!8 y!5 b!7 b!7 d!6 d!6 d!6))))
 (let ((?x755 (* (/ 1.0 8.0) (* b!7 b!7 b!7 d!6 d!6))))
 (let ((?x442 (* (/ 1.0 64.0) (* a!8 b!7 b!7 d!6 d!6 d!6 d!6))))
 (let ((?x332 (* (/ 3.0 32.0) (* y!5 b!7 b!7 b!7 d!6 d!6 d!6 d!6))))
 (let ((?x648 (* (/ 3.0 16.0) (* a!8 a!8 y!5 y!5 b!7 d!6 d!6 d!6))))
 (let ((?x621 (* (/ 3.0 16.0) (* y!5 y!5 b!7 b!7 b!7 d!6 d!6 d!6))))
 (let ((?x616 (* (/ 1.0 4.0) (* a!8 y!5 y!5 y!5 b!7 b!7 d!6 d!6))))
 (let ((?x599 (* (/ 1.0 128.0) (* a!8 a!8 b!7 b!7 b!7 d!6 d!6 d!6 d!6))))
 (let ((?x583 (* (/ 1.0 128.0) (* b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6))))
 (let ((?x582 (* (/ 1.0 32.0) (* a!8 y!5 b!7 b!7 b!7 b!7 d!6 d!6 d!6))))
 (let ((?x565 (* (/ 1.0 8.0) (* y!5 y!5 y!5 b!7 b!7 b!7 d!6 d!6))))
 (let ((?x142 (* (/ 1.0 32.0) (* y!5 b!7 b!7 b!7 d!6 d!6 d!6))))
 (let ((?x497 (* (/ 1.0 64.0) (* y!5 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6))))
 (let ((?x782 (* (/ 3.0 16.0) (* a!8 y!5 b!7 b!7 d!6 d!6 d!6 d!6))))
 (let ((?x629 (* (/ 3.0 8.0) (* a!8 y!5 y!5 b!7 b!7 d!6 d!6 d!6))))
 (let ((?x590 (* (/ 1.0 64.0) (* a!8 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6))))
 (let ((?x109 (* (/ 1.0 64.0) (* a!8 a!8 y!5 b!7 b!7 b!7 d!6 d!6 d!6))))
 (let ((?x908 (* (/ 1.0 32.0) (* a!8 b!7 b!7 d!6 d!6 d!6 d!6 d!6))))
 (let ((?x498 (* (/ 1.0 8.0) (* a!8 a!8 b!7 d!6 d!6))))
 (let ((?x105 (* (/ 1.0 8.0) (* a!8 a!8 y!5 y!5 y!5 b!7 d!6 d!6))))
 (let ((?x396 (+ ?x105 ?x498 ?x908 ?x109 ?x590 ?x629 ?x782 ?x497 ?x142 ?x565 ?x582 ?x583 ?x599 ?x616 ?x621 ?x648 ?x332 ?x442 ?x755 ?x579 ?x340 ?x711 ?x533 ?x424 ?x886)))
 (let ((?x875 (* (+ ?x30 ?x86 ?x482 ?x214 ?x953 ?x618) ?x396)))
 (let (($x765 (= ?x875 0.0)))
 (let (($x134 (not $x765)))
 (let ((?x617 (* (- (/ 1.0 4.0)) (* b00 y00 a!8 a!8 y!5 y!5 y!5 b!7 d!6 d!6))))
 (let ((?x370 (* (- (/ 1.0 8.0)) (* d00 a!8 a!8 a!8 y!5 y!5 y!5 b!7 d!6 d!6))))
 (let ((?x231 (* (/ 1.0 8.0) (* a00 d00 a!8 a!8 y!5 y!5 y!5 b!7 d!6 d!6))))
 (let ((?x843 (* d00 a!8 a!8 a!8 y!5 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x839 (* b00 y00 a!8 a!8 y!5 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x833 (* b00 a!8 a!8 y!5 y!5 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x473 (* a00 d00 a!8 a!8 y!5 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x143 (* (/ 1.0 4.0) (* b00 a!8 a!8 y!5 y!5 y!5 y!5 b!7 d!6 d!6))))
 (let ((?x772 (+ ?x143 (* (- (/ 1.0 4.0)) (* b00 y00 a!8 a!8 b!7 d!6 d!6)) (* (- (/ 1.0 32.0)) (* d00 a!8 a!8 y!5 b!7 b!7 d!6 d!6 d!6)) (* (/ 1.0 32.0) (* a00 d00 a!8 y!5 b!7 b!7 d!6 d!6 d!6)) (* (/ 1.0 64.0) ?x473) (* (/ 1.0 4.0) (* b00 a!8 a!8 y!5 b!7 d!6 d!6)) (* (/ 1.0 8.0) (* a00 d00 a!8 a!8 b!7 d!6 d!6)) (* (- (/ 1.0 8.0)) (* d00 a!8 a!8 a!8 b!7 d!6 d!6)) (* (- (/ 1.0 16.0)) (* b00 y00 a!8 y!5 b!7 b!7 d!6 d!6 d!6)) (* (/ 1.0 32.0) ?x833) (* (- (/ 1.0 32.0)) ?x839) (* (- (/ 1.0 64.0)) ?x843) ?x231 (* (/ 1.0 16.0) (* b00 a!8 y!5 y!5 b!7 b!7 d!6 d!6 d!6)) ?x370 ?x617)))
 (let (($x563 (= ?x772 0.0)))
 (let (($x837 (not $x563)))
 (let (($x84 (or $x837 $x134)))
 (let (($x946 (and $x84 $x580 $x566 $x495)))
 (let ((?x558 (+ (* d!6 a!8) ?x624 (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00)))))
 (let (($x115 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x86 (* 2.0 (* y!5 b00))) 0.0)))
 (let ((?x411 (+ (* (/ 1.0 64.0) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 8.0) (* y!5 y!5 y!5 d!6 d!6 b!7 a!8 a!8)) (* (/ 1.0 8.0) (* d!6 d!6 b!7 a!8 a!8)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 1.0 64.0) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 128.0) (* d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 128.0) (* d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 8.0) (* y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 4.0) (* y!5 y!5 y!5 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 3.0 8.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 a!8 a!8)) (* (/ 3.0 32.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 3.0 16.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 32.0) (* y!5 d!6 d!6 d!6 d!6 b!7 a!8 a!8)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 a!8 a!8)) (* (/ 1.0 8.0) (* d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 4.0) (* d!6 d!6 b!7 b!7 a!8)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 b!7 b!7 a!8)))))
 (let ((?x675 (* d!6 b00)))
 (let ((?x945 (* 2.0 (* y!5 b00))))
 (let ((?x87 (* (- 1.0) (* a!8 d00))))
 (let (($x415 (= (* (+ ?x30 ?x87 ?x86 ?x945 (* (- 1.0) (* b!7 d00)) ?x675) ?x411) 0.0)))
 (let ((?x898 (* (/ 1.0 4.0) (* y!5 y!5 y!5 y!5 d!6 d!6 b!7 a!8 a!8 b00))))
 (let ((?x899 (* (- (/ 1.0 4.0)) (* y!5 y!5 y!5 d!6 d!6 b!7 a!8 a!8 b00 y00))))
 (let ((?x965 (* (- (/ 1.0 8.0)) (* y!5 y!5 y!5 d!6 d!6 b!7 a!8 a!8 a!8 d00))))
 (let ((?x491 (* (/ 1.0 8.0) (* y!5 y!5 y!5 d!6 d!6 b!7 a!8 a!8 a00 d00))))
 (let ((?x176 (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 b00)))
 (let ((?x850 (* y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 b00 y00)))
 (let ((?x261 (* y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 d00)))
 (let ((?x816 (* y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a00 d00)))
 (let ((?x924 (+ (* (/ 1.0 64.0) ?x816) (* (- (/ 1.0 64.0)) ?x261) (* (- (/ 1.0 32.0)) ?x850) (* (/ 1.0 32.0) ?x176) ?x491 ?x965 ?x899 ?x898 (* (/ 1.0 8.0) (* d!6 d!6 b!7 a!8 a!8 a00 d00)) (* (- (/ 1.0 8.0)) (* d!6 d!6 b!7 a!8 a!8 a!8 d00)) (* (- (/ 1.0 4.0)) (* d!6 d!6 b!7 a!8 a!8 b00 y00)) (* (/ 1.0 4.0) (* y!5 d!6 d!6 b!7 a!8 a!8 b00)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 b!7 b!7 a!8 a00 d00)) (* (- (/ 1.0 32.0)) (* y!5 d!6 d!6 d!6 b!7 b!7 a!8 a!8 d00)) (* (- (/ 1.0 16.0)) (* y!5 d!6 d!6 d!6 b!7 b!7 a!8 b00 y00)) (* (/ 1.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8 b00)))))
 (let (($x635 (and (or (not (= ?x924 0.0)) (not $x415)) $x115 (= (+ (* b!7 d00) (* (- 1.0) ?x675)) 0.0) (= ?x558 0.0))))
 (let (($x653 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x153 (* (- 2.0) (* y b))))
 (let ((?x131 (* d a)))
 (let (($x188 (= (+ ?x131 ?x153 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x124 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x92 (* 2.0 (* y b00))))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let ((?x33 (* a d00)))
 (let ((?x107 (* (- 1.0) ?x33)))
 (let ((?x30 (* a00 d00)))
 (let (($x118 (= (+ ?x30 ?x107 ?x86 ?x92) 0.0)))
 (let ((?x225 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x209 (* (/ 1.0 8.0) (* d d b a a))))
 (let ((?x194 (* (/ 1.0 8.0) (* y y y d d b a a))))
 (let ((?x169 (* (/ 1.0 64.0) (* y d d d b b b a a))))
 (let ((?x964 (+ ?x169 ?x194 ?x209 ?x225 (* (/ 1.0 64.0) (* y d d d b b b b b)) (* (/ 1.0 32.0) (* y d d d b b b b a)) (* (/ 1.0 128.0) (* d d d d b b b b b)) (* (/ 1.0 64.0) (* d d d d b b b b a)) (* (/ 1.0 128.0) (* d d d d b b b a a)) (* (/ 1.0 8.0) (* y y y d d b b b)) (* (/ 1.0 4.0) (* y y y d d b b a)) (* (/ 3.0 16.0) (* y y d d d b b b)) (* (/ 3.0 8.0) (* y y d d d b b a)) (* (/ 3.0 16.0) (* y y d d d b a a)) (* (/ 3.0 32.0) (* y d d d d b b b)) (* (/ 3.0 16.0) (* y d d d d b b a)) (* (/ 3.0 32.0) (* y d d d d b a a)) (* (/ 1.0 64.0) (* d d d d d b b b)) (* (/ 1.0 32.0) (* d d d d d b b a)) (* (/ 1.0 64.0) (* d d d d d b a a)) (* (/ 1.0 8.0) (* d d b b b)) (* (/ 1.0 4.0) (* d d b b a)) (* (/ 1.0 32.0) (* y d d d b b b)) (* (/ 1.0 64.0) (* d d d d b b b)) (* (/ 1.0 64.0) (* d d d d b b a)))))
 (let ((?x244 (* (+ ?x30 ?x107 ?x86 ?x92 (* (- 1.0) (* b d00)) (* d b00)) ?x964)))
 (let ((?x258 (* (/ 1.0 32.0) (* y y d d d b b b a a b00))))
 (let ((?x248 (* (- (/ 1.0 32.0)) (* y d d d b b b a a b00 y00))))
 (let ((?x237 (* (- (/ 1.0 64.0)) (* y d d d b b b a a a d00))))
 (let ((?x162 (* (/ 1.0 64.0) (* y d d d b b b a a a00 d00))))
 (let ((?x385 (+ ?x162 ?x237 ?x248 ?x258 (* (/ 1.0 8.0) (* y y y d d b a a a00 d00)) (* (- (/ 1.0 8.0)) (* y y y d d b a a a d00)) (* (- (/ 1.0 4.0)) (* y y y d d b a a b00 y00)) (* (/ 1.0 4.0) (* y y y y d d b a a b00)) (* (/ 1.0 8.0) (* d d b a a a00 d00)) (* (- (/ 1.0 8.0)) (* d d b a a a d00)) (* (- (/ 1.0 4.0)) (* d d b a a b00 y00)) (* (/ 1.0 4.0) (* y d d b a a b00)) (* (/ 1.0 32.0) (* y d d d b b a a00 d00)) (* (- (/ 1.0 32.0)) (* y d d d b b a a d00)) (* (- (/ 1.0 16.0)) (* y d d d b b a b00 y00)) (* (/ 1.0 16.0) (* y y d d d b b a b00)))))
 (let (($x227 (not (= ?x385 0.0))))
 (and (or $x227 (not (= ?x244 0.0))) $x118 $x124 $x188))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x479 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x153 (* (- 2.0) (* y b))))
 (let ((?x131 (* d a)))
 (let (($x433 (= (+ ?x131 ?x153 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x98 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x182 (* 2.0 (* b00 y))))
 (let ((?x30 (* a00 d00)))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let ((?x407 (+ ?x86 ?x30 ?x182 (* (- 1.0) (* d00 a)))))
 (let (($x613 (= ?x407 0.0)))
 (let ((?x144 (* (/ 1.0 2.0) d)))
 (let ((?x469 (+ y ?x144)))
 (let ((?x64 (+ a b)))
 (let ((?x196 (+ (* (/ 1.0 64.0) (* ?x64 ?x64 ?x469 d d d b b b)) (* (/ 1.0 8.0) (* ?x64 ?x64 ?x469 ?x469 ?x469 d d b)) (* (/ 1.0 8.0) (* ?x64 ?x64 d d b)) (* (/ 1.0 32.0) (* ?x64 ?x469 d d d b b)))))
 (let ((?x707 (* (+ ?x86 ?x30 (* 2.0 (* b00 ?x469)) (* (- 1.0) (* d00 ?x64))) ?x196)))
 (let ((?x225 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x209 (* (/ 1.0 8.0) (* d d b a a))))
 (let ((?x194 (* (/ 1.0 8.0) (* y y y d d b a a))))
 (let ((?x169 (* (/ 1.0 64.0) (* y d d d b b b a a))))
 (let (($x203 (or (not (= (* ?x407 (+ ?x169 ?x194 ?x209 ?x225)) 0.0)) (not (= ?x707 0.0)))))
 (and $x203 $x613 $x98 $x433)))))))))))))))))))) :qid k!33))
 ))
 (let ((?x507 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x153 (* (- 2.0) (* y b))))
 (let ((?x131 (* d a)))
 (let (($x188 (= (+ ?x131 ?x153 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x124 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x92 (* 2.0 (* y b00))))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let ((?x33 (* a d00)))
 (let ((?x107 (* (- 1.0) ?x33)))
 (let ((?x30 (* a00 d00)))
 (let (($x118 (= (+ ?x30 ?x107 ?x86 ?x92) 0.0)))
 (let ((?x225 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x209 (* (/ 1.0 8.0) (* d d b a a))))
 (let ((?x194 (* (/ 1.0 8.0) (* y y y d d b a a))))
 (let ((?x169 (* (/ 1.0 64.0) (* y d d d b b b a a))))
 (let ((?x964 (+ ?x169 ?x194 ?x209 ?x225 (* (/ 1.0 64.0) (* y d d d b b b b b)) (* (/ 1.0 32.0) (* y d d d b b b b a)) (* (/ 1.0 128.0) (* d d d d b b b b b)) (* (/ 1.0 64.0) (* d d d d b b b b a)) (* (/ 1.0 128.0) (* d d d d b b b a a)) (* (/ 1.0 8.0) (* y y y d d b b b)) (* (/ 1.0 4.0) (* y y y d d b b a)) (* (/ 3.0 16.0) (* y y d d d b b b)) (* (/ 3.0 8.0) (* y y d d d b b a)) (* (/ 3.0 16.0) (* y y d d d b a a)) (* (/ 3.0 32.0) (* y d d d d b b b)) (* (/ 3.0 16.0) (* y d d d d b b a)) (* (/ 3.0 32.0) (* y d d d d b a a)) (* (/ 1.0 64.0) (* d d d d d b b b)) (* (/ 1.0 32.0) (* d d d d d b b a)) (* (/ 1.0 64.0) (* d d d d d b a a)) (* (/ 1.0 8.0) (* d d b b b)) (* (/ 1.0 4.0) (* d d b b a)) (* (/ 1.0 32.0) (* y d d d b b b)) (* (/ 1.0 64.0) (* d d d d b b b)) (* (/ 1.0 64.0) (* d d d d b b a)))))
 (let ((?x244 (* (+ ?x30 ?x107 ?x86 ?x92 (* (- 1.0) (* b d00)) (* d b00)) ?x964)))
 (let ((?x258 (* (/ 1.0 32.0) (* y y d d d b b b a a b00))))
 (let ((?x248 (* (- (/ 1.0 32.0)) (* y d d d b b b a a b00 y00))))
 (let ((?x237 (* (- (/ 1.0 64.0)) (* y d d d b b b a a a d00))))
 (let ((?x162 (* (/ 1.0 64.0) (* y d d d b b b a a a00 d00))))
 (let ((?x385 (+ ?x162 ?x237 ?x248 ?x258 (* (/ 1.0 8.0) (* y y y d d b a a a00 d00)) (* (- (/ 1.0 8.0)) (* y y y d d b a a a d00)) (* (- (/ 1.0 4.0)) (* y y y d d b a a b00 y00)) (* (/ 1.0 4.0) (* y y y y d d b a a b00)) (* (/ 1.0 8.0) (* d d b a a a00 d00)) (* (- (/ 1.0 8.0)) (* d d b a a a d00)) (* (- (/ 1.0 4.0)) (* d d b a a b00 y00)) (* (/ 1.0 4.0) (* y d d b a a b00)) (* (/ 1.0 32.0) (* y d d d b b a a00 d00)) (* (- (/ 1.0 32.0)) (* y d d d b b a a d00)) (* (- (/ 1.0 16.0)) (* y d d d b b a b00 y00)) (* (/ 1.0 16.0) (* y y d d d b b a b00)))))
 (let (($x227 (not (= ?x385 0.0))))
 (let (($x652 (and (or $x227 (not (= ?x244 0.0))) $x118 $x124 $x188)))
 (let (($x433 (= (+ ?x131 ?x153 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x98 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x182 (* 2.0 (* b00 y))))
 (let ((?x407 (+ ?x86 ?x30 ?x182 (* (- 1.0) (* d00 a)))))
 (let (($x613 (= ?x407 0.0)))
 (let ((?x144 (* (/ 1.0 2.0) d)))
 (let ((?x469 (+ y ?x144)))
 (let ((?x64 (+ a b)))
 (let ((?x196 (+ (* (/ 1.0 64.0) (* ?x64 ?x64 ?x469 d d d b b b)) (* (/ 1.0 8.0) (* ?x64 ?x64 ?x469 ?x469 ?x469 d d b)) (* (/ 1.0 8.0) (* ?x64 ?x64 d d b)) (* (/ 1.0 32.0) (* ?x64 ?x469 d d d b b)))))
 (let ((?x707 (* (+ ?x86 ?x30 (* 2.0 (* b00 ?x469)) (* (- 1.0) (* d00 ?x64))) ?x196)))
 (let (($x203 (or (not (= (* ?x407 (+ ?x169 ?x194 ?x209 ?x225)) 0.0)) (not (= ?x707 0.0)))))
 (let (($x400 (and $x203 $x613 $x98 $x433)))
 (rewrite (= $x400 $x652))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x416 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x144 (* (/ 1.0 2.0) d)))
 (let ((?x469 (+ y ?x144)))
 (let ((?x64 (+ a b)))
 (let ((?x196 (+ (* (/ 1.0 64.0) (* ?x64 ?x64 ?x469 d d d b b b)) (* (/ 1.0 8.0) (* ?x64 ?x64 ?x469 ?x469 ?x469 d d b)) (* (/ 1.0 8.0) (* ?x64 ?x64 d d b)) (* (/ 1.0 32.0) (* ?x64 ?x469 d d d b b)))))
 (let ((?x30 (* a00 d00)))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let ((?x707 (* (+ ?x86 ?x30 (* 2.0 (* b00 ?x469)) (* (- 1.0) (* d00 ?x64))) ?x196)))
 (let ((?x225 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x209 (* (/ 1.0 8.0) (* d d b a a))))
 (let ((?x194 (* (/ 1.0 8.0) (* y y y d d b a a))))
 (let ((?x169 (* (/ 1.0 64.0) (* y d d d b b b a a))))
 (let ((?x182 (* 2.0 (* b00 y))))
 (let ((?x407 (+ ?x86 ?x30 ?x182 (* (- 1.0) (* d00 a)))))
 (let (($x203 (or (not (= (* ?x407 (+ ?x169 ?x194 ?x209 ?x225)) 0.0)) (not (= ?x707 0.0)))))
 (let ((?x153 (* (- 2.0) (* y b))))
 (let ((?x131 (* d a)))
 (let (($x433 (= (+ ?x131 ?x153 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x98 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let (($x613 (= ?x407 0.0)))
 (and $x613 $x98 $x433 $x203)))))))))))))))))))) :qid k!33))
 ))
 (let (($x77 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x52 (/ d 2.0)))
 (let ((?x61 (+ y ?x52)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x64 (+ a b)))
 (let ((?x71 (+ (* ?x64 ?x64 ?x51 ?x51 ?x51 ?x52 ?x52 ?x52 ?x61) (* ?x64 ?x64 ?x51 ?x52 ?x52 ?x61 ?x61 ?x61) (* ?x64 ?x64 ?x51 ?x52 ?x52) (* ?x64 ?x51 ?x51 ?x52 ?x52 ?x52 ?x61))))
 (let ((?x30 (* a00 d00)))
 (let ((?x27 (* (- 2.0) b00 y00)))
 (let (($x73 (= (* (- (+ ?x27 ?x30 (* 2.0 b00 ?x61)) (* ?x64 d00)) ?x71) 0.0)))
 (let ((?x57 (+ (* a a ?x51 ?x51 ?x51 ?x52 ?x52 ?x52 y) (* a a ?x51 ?x52 ?x52 y y y) (* a a ?x51 ?x52 ?x52) (* a ?x51 ?x51 ?x52 ?x52 ?x52 y))))
 (let ((?x33 (* a d00)))
 (let ((?x34 (- (+ ?x27 ?x30 (* 2.0 b00 y)) ?x33)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (and (= ?x34 0.0) (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= (* ?x34 ?x57) 0.0)) (not $x73)))))))))))))))) :qid k!33))
 ))
 (let ((?x462 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x144 (* (/ 1.0 2.0) d)))
 (let ((?x469 (+ y ?x144)))
 (let ((?x64 (+ a b)))
 (let ((?x196 (+ (* (/ 1.0 64.0) (* ?x64 ?x64 ?x469 d d d b b b)) (* (/ 1.0 8.0) (* ?x64 ?x64 ?x469 ?x469 ?x469 d d b)) (* (/ 1.0 8.0) (* ?x64 ?x64 d d b)) (* (/ 1.0 32.0) (* ?x64 ?x469 d d d b b)))))
 (let ((?x30 (* a00 d00)))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let ((?x707 (* (+ ?x86 ?x30 (* 2.0 (* b00 ?x469)) (* (- 1.0) (* d00 ?x64))) ?x196)))
 (let ((?x225 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x209 (* (/ 1.0 8.0) (* d d b a a))))
 (let ((?x194 (* (/ 1.0 8.0) (* y y y d d b a a))))
 (let ((?x169 (* (/ 1.0 64.0) (* y d d d b b b a a))))
 (let ((?x182 (* 2.0 (* b00 y))))
 (let ((?x407 (+ ?x86 ?x30 ?x182 (* (- 1.0) (* d00 a)))))
 (let (($x203 (or (not (= (* ?x407 (+ ?x169 ?x194 ?x209 ?x225)) 0.0)) (not (= ?x707 0.0)))))
 (let ((?x153 (* (- 2.0) (* y b))))
 (let ((?x131 (* d a)))
 (let (($x433 (= (+ ?x131 ?x153 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x98 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let (($x613 (= ?x407 0.0)))
 (let (($x305 (and $x613 $x98 $x433 $x203)))
 (let ((?x52 (/ d 2.0)))
 (let ((?x61 (+ y ?x52)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x71 (+ (* ?x64 ?x64 ?x51 ?x51 ?x51 ?x52 ?x52 ?x52 ?x61) (* ?x64 ?x64 ?x51 ?x52 ?x52 ?x61 ?x61 ?x61) (* ?x64 ?x64 ?x51 ?x52 ?x52) (* ?x64 ?x51 ?x51 ?x52 ?x52 ?x52 ?x61))))
 (let ((?x66 (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 ?x61)) (* ?x64 d00))))
 (let ((?x57 (+ (* a a ?x51 ?x51 ?x51 ?x52 ?x52 ?x52 y) (* a a ?x51 ?x52 ?x52 y y y) (* a a ?x51 ?x52 ?x52) (* a ?x51 ?x51 ?x52 ?x52 ?x52 y))))
 (let ((?x33 (* a d00)))
 (let ((?x34 (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let (($x76 (and (= ?x34 0.0) (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= (* ?x34 ?x57) 0.0)) (not (= (* ?x66 ?x71) 0.0))))))
 (rewrite (= $x76 $x305))))))))))))))))))))))))))))))))))
 ))
 (let ((@x78 (asserted $x77)))
 (let ((@x353 (mp (mp @x78 (quant-intro (proof-bind ?x462) (= $x77 $x416)) $x416) (rewrite (= $x416 $x479)) $x479)))
 (let ((@x645 (mp~ (mp @x353 (quant-intro (proof-bind ?x507) (= $x479 $x653)) $x653) (sk (~ $x653 $x635)) $x635)))
 (let ((@x493 (mp @x645 (rewrite (= $x635 $x946)) $x946)))
 (let ((@x868 (mp (and-elim @x493 $x495) @x867 $x586)))
 (let (($x588 (<= ?x752 0.0)))
 (let (($x578 (>= ?x614 0.0)))
 (let (($x560 (= 0.0 ?x614)))
 (let ((@x457 (mp (and-elim @x493 $x566) (symm (commutativity (= $x560 $x566)) (= $x566 $x560)) $x560)))
 (let ((@x343 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x560) $x578)) @x457 $x578)))
 (let (($x577 (<= ?x614 0.0)))
 (let ((@x425 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x560) $x577)) @x457 $x577)))
 (let (($x646 (<= ?x772 0.0)))
 (let (($x366 (not $x646)))
 (let (($x367 (>= ?x772 0.0)))
 (let (($x487 (>= ?x892 0.0)))
 (let (($x489 (= 0.0 ?x892)))
 (let ((@x336 (mp (and-elim @x493 $x580) (symm (commutativity (= $x489 $x580)) (= $x580 $x489)) $x489)))
 (let ((@x297 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x489) $x487)) @x336 $x487)))
 (let (($x371 (<= ?x892 0.0)))
 (let ((@x212 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x489) $x371)) @x336 $x371)))
 (let ((@x529 (unit-resolution ((_ th-lemma arith) (or (not $x371) (not $x487) $x367)) (hypothesis (not $x367)) @x212 @x297 false)))
 (let (($x535 (= 0.0 ?x772)))
 (let (($x854 (not $x535)))
 (let ((@x858 (monotonicity (symm (commutativity (= $x535 $x563)) (= $x563 $x535)) (= $x837 $x854))))
 (let ((?x602 (+ ?x886 ?x105 ?x498 ?x908 ?x109 ?x590 ?x629 ?x782 ?x497 ?x142 ?x565 ?x582 ?x583 ?x599 ?x616 ?x621 ?x648 ?x332 ?x442 ?x755 ?x579 ?x340 ?x711 ?x533 ?x424)))
 (let (($x628 (>= ?x602 0.0)))
 (let (($x229 (not $x628)))
 (let (($x620 (= 0.0 ?x602)))
 (let (($x452 (not $x620)))
 (let ((@x508 (hypothesis $x134)))
 (let (($x611 (= ?x602 0.0)))
 (let (($x506 (not $x611)))
 (let ((@x224 (unit-resolution (unit-resolution ((_ th-lemma arith) (or $x506 $x765)) @x508 $x506) (symm (hypothesis $x620) $x611) false)))
 (let ((@x315 (lemma @x224 (or $x452 $x765))))
 (let (($x504 (<= ?x602 0.0)))
 (let (($x960 (<= ?x875 0.0)))
 (let (($x792 (not $x960)))
 (let (($x968 (>= ?x875 0.0)))
 (let ((@x537 (commutativity (= (= 0.0 ?x875) $x765))))
 (let (($x610 (= 0.0 ?x875)))
 (let (($x584 (not $x610)))
 (let (($x120 (not $x968)))
 (let ((@x282 (hypothesis $x120)))
 (let ((@x692 (mp (unit-resolution ((_ th-lemma arith triangle-eq) (or $x584 $x968)) @x282 $x584) (monotonicity @x537 (= $x584 $x134)) $x134)))
 (let ((?x630 (+ ?x482 ?x214 ?x953 ?x618 ?x30 ?x86)))
 (let (($x739 (<= ?x630 0.0)))
 (let ((@x449 (lemma ((_ th-lemma arith) (hypothesis (not $x739)) @x425 @x212 false) $x739)))
 (let ((@x904 (unit-resolution ((_ th-lemma arith) (or (not $x739) $x628 $x968)) @x282 @x449 (hypothesis $x229) false)))
 (let (($x273 (not $x504)))
 (let ((@x795 (hypothesis $x273)))
 (let (($x587 (>= ?x630 0.0)))
 (let ((@x940 (lemma ((_ th-lemma arith) @x297 @x343 (hypothesis (not $x587)) false) $x587)))
 (let ((@x793 (unit-resolution ((_ th-lemma arith) (or (not $x587) $x504 $x968)) @x282 @x940 @x795 false)))
 (let ((@x339 ((_ th-lemma arith triangle-eq) (or $x620 $x273 $x229))))
 (let ((@x928 (unit-resolution @x339 (unit-resolution (lemma @x793 (or $x504 $x968)) @x282 $x504) (unit-resolution (lemma @x904 (or $x628 $x968)) @x282 $x628) $x620)))
 (let ((@x702 (mp @x508 (monotonicity (symm @x537 (= $x765 $x610)) (= $x134 $x584)) $x584)))
 (let ((@x704 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x610 $x792 $x120)) @x702 (lemma (unit-resolution @x315 @x928 @x692 false) $x968) $x792)))
 (let ((@x650 (unit-resolution ((_ th-lemma arith) (or (not $x739) $x504 $x960)) (hypothesis $x792) @x795 @x449 false)))
 (let ((@x709 (unit-resolution @x339 (unit-resolution (lemma @x650 (or $x504 $x960)) @x704 $x504) (unit-resolution @x315 @x508 $x452) $x229)))
 (let ((@x661 (unit-resolution ((_ th-lemma arith) (or (not $x587) $x628 $x960)) @x704 @x940 @x709 false)))
 (let ((@x826 (mp (unit-resolution (and-elim @x493 $x84) (lemma @x661 $x765) $x837) @x858 $x854)))
 (let ((@x511 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x535 $x366 (not $x367))) @x826 (or $x366 (not $x367)))))
 (unit-resolution ((_ th-lemma arith) (or (not $x588) $x646 (not $x591) (not $x577) (not $x578))) (unit-resolution @x511 (lemma @x529 $x367) $x366) @x425 @x343 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x586) $x588)) @x868 $x588) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x586) $x591)) @x868 $x591) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       40
 :arith-eq-adapter                38
 :arith-conflicts                 63
 :arith-diseq                     47
 :arith-grobner-calls             4
 :arith-grobner-conflicts         2
 :arith-horner-calls              4
 :arith-horner-cross-nested-forms 4
 :arith-lower                     43
 :arith-make-feasible             42
 :arith-max-columns               72
 :arith-max-rows                  8
 :arith-nla-explanations          57
 :arith-nla-lemmas                61
 :arith-offset-eqs                9
 :arith-upper                     41
 :conflicts                       13
 :decisions                       47
 :del-clause                      121
 :final-checks                    35
 :max-memory                      18.50
 :memory                          17.37
 :minimized-lits                  1
 :mk-bool-var                     176
 :mk-clause                       162
 :num-allocs                      3453935
 :num-checks                      1
 :propagations                    65
 :rlimit-count                    6565
 :time                            0.02
 :total-time                      0.03)
