unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x1024 (* (- 1) k!2)))
 (let ((?x926 (+ (* 3 n!0) ?x1024 (* 3 (* n!0 n!0)))))
 (let (($x277 (<= ?x926 (- 1))))
 (let (($x464 (= ?x926 (- 1))))
 (let ((?x872 (+ k!2 c!3)))
 (let ((?x742 (+ k!2 m!1)))
 (let ((?x207 (+ 6 m!1)))
 (let ((?x1094 (+ 1 n!0)))
 (let ((?x1215 (* ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x1143 (* ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x1062 (* ?x1094 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x1033 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x1032 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x1011 (* ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x996 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872)))
 (let ((?x939 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x930 (* ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x929 (* ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x879 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x862 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x832 (* ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x738 (* ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x645 (* ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x642 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872)))
 (let ((?x636 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872)))
 (let ((?x604 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x595 (* ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x575 (* ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x573 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872)))
 (let ((?x465 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872)))
 (let ((?x462 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872)))
 (let ((?x426 (* ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x420 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872)))
 (let ((?x391 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x377 (* ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x360 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x350 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x327 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872)))
 (let ((?x258 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x256 (* ?x1094 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x872 ?x872 ?x872 ?x872 ?x872)))
 (let ((?x221 (+ ?x256 (* 3 ?x258) (* (- 1) ?x327) (* (- 1) ?x350) ?x360 ?x377 (* 3 ?x391) (* (- 1) ?x420) (* (- 3) ?x426) (* (- 3) ?x462) (* (- 3) ?x465) ?x573 (* (- 1) ?x575) (* (- 3) ?x595) (* 3 ?x604) (* (- 3) ?x636) (* (- 3) ?x642) ?x645 (* (- 1) ?x738) (* 3 ?x832) (* 3 ?x862) (* 3 ?x879) (* (- 1) ?x929) (* 3 ?x930) ?x939 ?x996 (* (- 3) ?x1011) (* (- 1) ?x1032) (* 3 ?x1033) (* (- 1) ?x1062) (* (- 3) ?x1143) ?x1215)))
 (let (($x142 (= ?x221 0)))
 (let (($x160 (not $x142)))
 (let ((?x259 (+ (* 2 n!0) ?x1024 (* (- 3) c!3) (* n!0 k!2))))
 (let (($x1100 (= ?x259 (- 1))))
 (let ((?x367 (* 18 c!3)))
 (let ((?x383 (* 5 k!2)))
 (let ((?x457 (* (- 9) n!0)))
 (let ((?x598 (* (- 1) (* k!2 k!2))))
 (let ((?x941 (+ (* 9 (* n!0 c!3)) ?x598 ?x457 ?x383 ?x367)))
 (let (($x1139 (= ?x941 4)))
 (let ((?x702 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x1213 (= ?x702 (- 6))))
 (let (($x715 (and $x1213 $x1139 $x1100 $x464 $x160)))
 (let ((?x317 (+ c!3 k!2)))
 (let ((?x320 (* ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x948 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x325 (* ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x281 (* ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x514 (* ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x736 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x209 (* ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x218 (* ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x774 (* ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x786 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x199 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317)))
 (let ((?x684 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317)))
 (let ((?x706 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x488 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317)))
 (let ((?x348 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x707 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x768 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x206 (* ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x270 (* ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x607 (* ?x1094 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x398 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x208 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317)))
 (let ((?x1210 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x1087 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317)))
 (let ((?x213 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317)))
 (let ((?x775 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317)))
 (let ((?x211 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317)))
 (let ((?x319 (* ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x353 (* ?x1094 ?x1094 ?x1094 ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x773 (* ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x260 (* ?x1094 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x445 (* ?x1094 ?x1094 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x207 ?x742 ?x742 ?x742 ?x742 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317)))
 (let ((?x326 (+ ?x445 ?x260 ?x773 ?x353 (* (- 1) ?x319) (* (- 1) ?x211) (* 3 ?x775) ?x213 (* 3 ?x1087) (* (- 1) ?x1210) (* 3 ?x208) ?x398 (* (- 1) ?x607) ?x270 (* (- 3) ?x206) (* (- 3) ?x768) (* (- 3) ?x707) (* (- 3) ?x348) (* (- 1) ?x488) (* (- 1) ?x706) ?x684 (* 3 ?x199) (* (- 3) ?x786) (* 3 ?x774) (* (- 3) ?x218) (* 3 ?x209) (* (- 3) ?x736) (* (- 1) ?x514) (* 3 ?x281) (* (- 1) ?x325) (* (- 3) ?x948) (* 3 ?x320))))
 (let (($x660 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x496 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x367 ?x383 ?x457 ?x598 (* 9 (* c!3 n!0))) 4) $x660 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x326 0)))))
 (let (($x990 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x349 (+ 6 m)))
 (let ((?x352 (+ 1 n)))
 (let ((?x1207 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1134 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1126 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1110 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1043 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1031 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1022 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x827 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x797 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x792 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x767 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x729 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x668 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x662 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x638 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x624 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x617 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x590 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x581 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x561 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x558 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x479 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x468 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x422 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x368 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x336 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x299 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x272 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x225 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x181 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x138 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x178 (+ ?x138 ?x181 ?x225 ?x272 (* (- 1) ?x299) (* (- 1) ?x336) (* 3 ?x368) ?x422 (* 3 ?x461) (* (- 1) ?x468) (* 3 ?x479) ?x558 (* (- 1) ?x561) ?x581 (* (- 3) ?x590) (* (- 3) ?x617) (* (- 3) ?x624) (* (- 3) ?x638) (* (- 1) ?x662) (* (- 1) ?x668) ?x729 (* 3 ?x767) (* (- 3) ?x792) (* 3 ?x797) (* (- 3) ?x827) (* 3 ?x1022) (* (- 3) ?x1031) (* (- 1) ?x1043) (* 3 ?x1110) (* (- 1) ?x1126) (* (- 3) ?x1134) (* 3 ?x1207))))
 (let (($x341 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x303 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x254 (* (- 1) ?x49)))
 (let ((?x253 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x251 (= (+ ?x40 ?x44 ?x253 ?x254 (* 9 (* c n))) 4)))
 (let (($x167 (= (+ m (* (- 6) n)) 6)))
 (and $x167 $x251 $x303 $x341 (not (= ?x178 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x577 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x349 (+ 6 m)))
 (let ((?x352 (+ 1 n)))
 (let ((?x624 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x590 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1043 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x827 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x797 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x792 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1110 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1126 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1134 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x368 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x617 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1207 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x767 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x468 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x729 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1022 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x581 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1031 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x668 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x638 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x479 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x422 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x138 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x225 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x181 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x299 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x272 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x336 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x558 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x561 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x662 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x675 (+ ?x662 ?x561 (* (- 1) ?x558) ?x336 (* (- 1) ?x272) ?x299 (* (- 1) ?x181) (* (- 1) ?x225) (* (- 1) ?x138) (* (- 1) ?x422) (* (- 3) ?x479) (* 3 ?x638) (* (- 3) ?x461) ?x668 (* 3 ?x1031) (* (- 1) ?x581) (* (- 3) ?x1022) (* (- 1) ?x729) ?x468 (* (- 3) ?x767) (* (- 3) ?x1207) (* 3 ?x617) (* (- 3) ?x368) (* 3 ?x1134) ?x1126 (* (- 3) ?x1110) (* 3 ?x792) (* (- 3) ?x797) (* 3 ?x827) ?x1043 (* 3 ?x590) (* 3 ?x624))))
 (let (($x318 (not (= ?x675 0))))
 (let (($x571 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x449 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x254 (* (- 1) ?x49)))
 (let ((?x253 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x167 (= (+ m (* (- 6) n)) 6)))
 (and $x167 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x253 ?x254) 4) $x449 $x571 $x318))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1225 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x349 (+ 6 m)))
 (let ((?x352 (+ 1 n)))
 (let ((?x1207 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1134 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1126 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1110 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1043 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1031 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1022 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x827 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x797 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x792 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x767 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x729 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x668 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x662 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x638 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x624 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x617 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x590 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x581 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x561 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x558 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x479 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x468 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x422 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x368 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x336 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x299 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x272 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x225 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x181 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x138 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x178 (+ ?x138 ?x181 ?x225 ?x272 (* (- 1) ?x299) (* (- 1) ?x336) (* 3 ?x368) ?x422 (* 3 ?x461) (* (- 1) ?x468) (* 3 ?x479) ?x558 (* (- 1) ?x561) ?x581 (* (- 3) ?x590) (* (- 3) ?x617) (* (- 3) ?x624) (* (- 3) ?x638) (* (- 1) ?x662) (* (- 1) ?x668) ?x729 (* 3 ?x767) (* (- 3) ?x792) (* 3 ?x797) (* (- 3) ?x827) (* 3 ?x1022) (* (- 3) ?x1031) (* (- 1) ?x1043) (* 3 ?x1110) (* (- 1) ?x1126) (* (- 3) ?x1134) (* 3 ?x1207))))
 (let (($x341 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x303 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x254 (* (- 1) ?x49)))
 (let ((?x253 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x251 (= (+ ?x40 ?x44 ?x253 ?x254 (* 9 (* c n))) 4)))
 (let (($x167 (= (+ m (* (- 6) n)) 6)))
 (let (($x632 (and $x167 $x251 $x303 $x341 (not (= ?x178 0)))))
 (let ((?x675 (+ ?x662 ?x561 (* (- 1) ?x558) ?x336 (* (- 1) ?x272) ?x299 (* (- 1) ?x181) (* (- 1) ?x225) (* (- 1) ?x138) (* (- 1) ?x422) (* (- 3) ?x479) (* 3 ?x638) (* (- 3) ?x461) ?x668 (* 3 ?x1031) (* (- 1) ?x581) (* (- 3) ?x1022) (* (- 1) ?x729) ?x468 (* (- 3) ?x767) (* (- 3) ?x1207) (* 3 ?x617) (* (- 3) ?x368) (* 3 ?x1134) ?x1126 (* (- 3) ?x1110) (* 3 ?x792) (* (- 3) ?x797) (* 3 ?x827) ?x1043 (* 3 ?x590) (* 3 ?x624))))
 (let (($x318 (not (= ?x675 0))))
 (let (($x571 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x449 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x411 (and $x167 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x253 ?x254) 4) $x449 $x571 $x318)))
 (rewrite (= $x411 $x632)))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x322 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x349 (+ 6 m)))
 (let ((?x352 (+ 1 n)))
 (let ((?x624 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x590 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1043 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x827 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x797 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x792 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1110 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1126 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1134 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x368 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x617 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1207 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x767 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x468 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x729 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1022 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x581 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1031 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x668 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x638 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x479 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x422 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x138 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x225 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x181 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x299 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x272 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x336 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x558 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x561 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x662 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x675 (+ ?x662 ?x561 (* (- 1) ?x558) ?x336 (* (- 1) ?x272) ?x299 (* (- 1) ?x181) (* (- 1) ?x225) (* (- 1) ?x138) (* (- 1) ?x422) (* (- 3) ?x479) (* 3 ?x638) (* (- 3) ?x461) ?x668 (* 3 ?x1031) (* (- 1) ?x581) (* (- 3) ?x1022) (* (- 1) ?x729) ?x468 (* (- 3) ?x767) (* (- 3) ?x1207) (* 3 ?x617) (* (- 3) ?x368) (* 3 ?x1134) ?x1126 (* (- 3) ?x1110) (* 3 ?x792) (* (- 3) ?x797) (* 3 ?x827) ?x1043 (* 3 ?x590) (* 3 ?x624))))
 (let (($x318 (not (= ?x675 0))))
 (let (($x571 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x446 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x687 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x167 (= (+ m (* (- 6) n)) 6)))
 (and $x167 (= ?x687 (- 4)) $x446 $x571 $x318))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x480 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x349 (+ 6 m)))
 (let ((?x352 (+ 1 n)))
 (let ((?x624 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x590 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1043 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x827 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x797 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x792 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1110 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1126 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1134 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x368 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x617 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1207 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x767 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x468 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x729 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1022 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x581 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1031 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x668 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x638 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x479 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x422 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x138 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x225 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x181 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x299 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x272 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x336 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x558 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x561 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x662 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x675 (+ ?x662 ?x561 (* (- 1) ?x558) ?x336 (* (- 1) ?x272) ?x299 (* (- 1) ?x181) (* (- 1) ?x225) (* (- 1) ?x138) (* (- 1) ?x422) (* (- 3) ?x479) (* 3 ?x638) (* (- 3) ?x461) ?x668 (* 3 ?x1031) (* (- 1) ?x581) (* (- 3) ?x1022) (* (- 1) ?x729) ?x468 (* (- 3) ?x767) (* (- 3) ?x1207) (* 3 ?x617) (* (- 3) ?x368) (* 3 ?x1134) ?x1126 (* (- 3) ?x1110) (* 3 ?x792) (* (- 3) ?x797) (* 3 ?x827) ?x1043 (* 3 ?x590) (* 3 ?x624))))
 (let (($x318 (not (= ?x675 0))))
 (let (($x571 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x449 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x254 (* (- 1) ?x49)))
 (let ((?x253 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x167 (= (+ m (* (- 6) n)) 6)))
 (let (($x411 (and $x167 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x253 ?x254) 4) $x449 $x571 $x318)))
 (let (($x446 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x687 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x663 (and $x167 (= ?x687 (- 4)) $x446 $x571 $x318)))
 (rewrite (= $x663 $x411))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x134 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x128 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x127 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x126 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x125 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x123 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x121 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x119 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x117 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x116 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x114 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x112 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x109 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x108 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x106 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x102 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x101 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x100 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x98 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x97 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x95 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x93 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x87 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x86 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x85 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x84 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x83 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x81 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x79 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x77 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x75 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x73 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x72 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x89 (- (- (+ (- (+ (- (+ ?x72 ?x73) ?x75) ?x77) ?x79) ?x81) ?x83) ?x84)))
 (let ((?x103 (- (+ (- (+ (- (- (- ?x89 ?x85) ?x86) ?x87) ?x93) ?x95) ?x97 ?x98) ?x100)))
 (let ((?x115 (- (+ (- (- (+ (- (- ?x103 ?x101) ?x102) ?x106) ?x108) ?x109) ?x112) ?x114)))
 (let ((?x129 (+ (- (+ (- (+ ?x115 ?x116 ?x117) ?x119) ?x121) ?x123) ?x125 ?x126 ?x127 ?x128)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x129 0))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x562 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x349 (+ 6 m)))
 (let ((?x352 (+ 1 n)))
 (let ((?x624 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x590 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1043 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x827 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x797 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x792 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1110 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1126 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1134 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x368 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x617 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1207 (* ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x767 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x468 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x729 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1022 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x581 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1031 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x668 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x638 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x479 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x422 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x138 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x225 (* ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x181 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x299 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x272 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x336 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x558 (* ?x352 ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x561 (* ?x352 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x662 (* ?x352 ?x352 ?x352 ?x352 ?x349 ?x349 ?x349 ?x349 ?x349 ?x349 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x675 (+ ?x662 ?x561 (* (- 1) ?x558) ?x336 (* (- 1) ?x272) ?x299 (* (- 1) ?x181) (* (- 1) ?x225) (* (- 1) ?x138) (* (- 1) ?x422) (* (- 3) ?x479) (* 3 ?x638) (* (- 3) ?x461) ?x668 (* 3 ?x1031) (* (- 1) ?x581) (* (- 3) ?x1022) (* (- 1) ?x729) ?x468 (* (- 3) ?x767) (* (- 3) ?x1207) (* 3 ?x617) (* (- 3) ?x368) (* 3 ?x1134) ?x1126 (* (- 3) ?x1110) (* 3 ?x792) (* (- 3) ?x797) (* 3 ?x827) ?x1043 (* 3 ?x590) (* 3 ?x624))))
 (let (($x318 (not (= ?x675 0))))
 (let (($x571 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x446 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x687 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x167 (= (+ m (* (- 6) n)) 6)))
 (let (($x663 (and $x167 (= ?x687 (- 4)) $x446 $x571 $x318)))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x128 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x127 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x126 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x125 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x123 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x121 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x119 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x117 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x116 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x114 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x112 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x109 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x108 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x106 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x102 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x101 (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x100 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x98 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x97 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x95 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x93 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x87 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x86 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x85 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x84 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x83 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x81 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x79 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x77 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x75 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x73 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x72 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x89 (- (- (+ (- (+ (- (+ ?x72 ?x73) ?x75) ?x77) ?x79) ?x81) ?x83) ?x84)))
 (let ((?x103 (- (+ (- (+ (- (- (- ?x89 ?x85) ?x86) ?x87) ?x93) ?x95) ?x97 ?x98) ?x100)))
 (let ((?x115 (- (+ (- (- (+ (- (- ?x103 ?x101) ?x102) ?x106) ?x108) ?x109) ?x112) ?x114)))
 (let ((?x129 (+ (- (+ (- (+ ?x115 ?x116 ?x117) ?x119) ?x121) ?x123) ?x125 ?x126 ?x127 ?x128)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x133 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x129 0))))))
 (rewrite (= $x133 $x663))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x135 (asserted $x134)))
 (let ((@x315 (mp (mp @x135 (quant-intro (proof-bind ?x562) (= $x134 $x322)) $x322) (rewrite (= $x322 $x322)) $x322)))
 (let ((@x921 (mp (mp @x315 (quant-intro (proof-bind ?x480) (= $x322 $x577)) $x577) (quant-intro (proof-bind ?x1225) (= $x577 $x990)) $x990)))
 (let ((@x324 (mp (mp~ @x921 (sk (~ $x990 $x496)) $x496) (rewrite (= $x496 $x715)) $x715)))
 (let ((@x731 (and-elim @x324 $x464)))
 (let ((@x236 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x464) $x277)) @x731 $x277)))
 (let (($x669 (>= ?x926 (- 1))))
 (let ((@x399 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x464) $x669)) @x731 $x669)))
 (let (($x515 (<= ?x941 4)))
 (let ((@x728 (and-elim @x324 $x1139)))
 (let ((@x396 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1139) $x515)) @x728 $x515)))
 (let (($x810 (>= ?x941 4)))
 (let ((@x194 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1139) $x810)) @x728 $x810)))
 (let (($x215 (<= ?x702 (- 6))))
 (let ((@x332 (and-elim @x324 $x1213)))
 (let ((@x882 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1213) $x215)) @x332 $x215)))
 (let (($x338 (>= ?x702 (- 6))))
 (let ((@x313 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1213) $x338)) @x332 $x338)))
 (let (($x202 (<= ?x259 (- 1))))
 (let ((@x1084 (and-elim @x324 $x1100)))
 (let ((@x165 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1100) $x202)) @x1084 $x202)))
 (let (($x659 (>= ?x259 (- 1))))
 (let ((@x641 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1100) $x659)) @x1084 $x659)))
 (let (($x656 (not (<= ?x221 0))))
 (let (($x219 (>= ?x221 0)))
 (let ((@x481 ((_ th-lemma arith) (hypothesis (not $x219)) @x399 @x236 @x313 @x882 @x399 @x236 @x399 @x236 @x641 @x165 @x399 @x236 @x313 @x882 @x194 @x396 @x399 @x236 false)))
 (let ((@x224 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x142 $x656 (not $x219))) (and-elim @x324 $x160) (or $x656 (not $x219)))))
 ((_ th-lemma arith) (unit-resolution @x224 (lemma @x481 $x219) $x656) @x399 @x236 @x313 @x882 @x399 @x236 @x399 @x236 @x641 @x165 @x399 @x236 @x313 @x882 @x194 @x396 @x399 @x236 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        17
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           1
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             419
 :arith-nonlinear-bounds    12
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             1
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 61
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                4.30
 :memory                    3.59
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                5681683
 :num-checks                1
 :propagations              11
 :rlimit-count              44443
 :time                      0.07
 :total-time                0.08)
