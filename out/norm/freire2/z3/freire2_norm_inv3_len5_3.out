unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x5421 (* (- 3) s!1)))
 (let ((?x679 (* s00 s00)))
 (let ((?x6641 (* 4 ?x679)))
 (let ((?x610 (* r00 x00)))
 (let ((?x2522 (* 18 ?x610)))
 (let ((?x44 (* 3 s00)))
 (let ((?x10188 (+ ?x44 (* (- 9) (* s00 r00)) ?x2522 ?x6641 (* (- 6) (* s00 r00 r00)) (* (- 2) (* s00 s!1)) ?x5421 (* (- 2) (* s!1 s!1)) (* (- 9) (* s00 r!2)) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* (- 18) (* r!2 x!0)) (* 6 (* r00 r00 s!1)) (* (- 6) (* r00 s!1 r!2)) (* 9 (* s!1 r!2)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)))))
 (let (($x3686 (<= ?x10188 0)))
 (let (($x10189 (= ?x10188 0)))
 (let ((?x5506 (* 6 r!2)))
 (let ((?x9742 (+ 3 s!1 ?x5506)))
 (let ((?x5480 (* (- 1) s!1)))
 (let ((?x5481 (+ ?x5480 x!0)))
 (let ((?x5478 (+ 1 r!2)))
 (let ((?x7152 (* 54 (* r!2 r!2 x!0 x!0 x!0))))
 (let ((?x11139 (* (- 18) (* x!0 x!0 x!0 x!0))))
 (let ((?x11143 (* (- 18) (* r!2 x!0 x!0 x!0 x!0))))
 (let ((?x6700 (* 54 (* s!1 s!1 x!0))))
 (let ((?x6196 (* 18 (* x!0 x!0 x!0))))
 (let ((?x4796 (* s!1 s!1 s!1)))
 (let ((?x862 (* (- 18) ?x4796)))
 (let ((?x990 (* (- 24) (* s!1 s!1 s!1 s!1))))
 (let ((?x3612 (* 90 (* s!1 s!1 s!1 x!0))))
 (let ((?x6188 (* 78 (* s!1 x!0 x!0 x!0))))
 (let ((?x2203 (* (- 126) (* s!1 s!1 x!0 x!0))))
 (let ((?x703 (* (- 18) (* ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x5481))))
 (let ((?x3547 (* (- 54) (* s!1 x!0 x!0))))
 (let ((?x1016 (* 63 (* r!2 x!0 x!0 x!0))))
 (let ((?x735 (* s00 r00 r00)))
 (let ((?x13227 (* 54 ?x735)))
 (let ((?x11588 (* (- 36) ?x679)))
 (let ((?x13222 (* (- 162) ?x610)))
 (let ((?x514 (* s00 r00)))
 (let ((?x13220 (* 27 ?x514)))
 (let ((?x389 (* r00 r00)))
 (let ((?x10497 (* (- 162) ?x389)))
 (let ((?x11992 (* (- 162) x00)))
 (let ((?x13217 (* 54 s00)))
 (let ((?x1894 (+ ?x13217 ?x11992 ?x10497 (* (- 6) (* r00 ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742)) (* (- 18) (* x00 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742)) (* 108 (* r00 r00 s!1 s!1 r!2 x!0)) (* 6 (* r00 r00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742)) (* (- 54) (* r00 r00 s!1 x!0 x!0)) (* (- 144) (* s00 s00 r!2 r!2 r!2)) (* (- 18) (* x00 s!1 s!1 s!1 r!2)) (* (- 72) (* s00 s00 s!1 r!2)) (* 9 (* ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742 ?x9742)) (* (- 9) (* s00 ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742)) (* 864 (* s00 r!2 r!2 r!2)) (* (- 18) (* r00 r00 s!1 s!1 x!0 x!0)) (* 234 (* s00 s!1 r!2 r!2)) (* 6 (* r00 r00 s!1 x!0 x!0 x!0)) ?x13220 (* (- 6) (* s00 x!0 x!0)) (* 6 (* r00 r00 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742 ?x9742)) (* 3 (* s00 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742)) (* (- 18) (* x00 s!1 s!1 s!1)) (* 90 (* x00 s!1 s!1 r!2 r!2)) (* 36 (* x00 s!1 s!1 r!2)) ?x13222 (* 216 (* s00 r00 r00 r!2 r!2 r!2)) (* (- 27) (* s!1 s!1 s!1 s!1 r!2)) ?x11588 (* 90 (* r00 s!1 s!1 s!1 r!2 r!2)) (* 66 (* s00 s!1 r!2 r!2 r!2 x!0)) ?x13227 (* 18 (* x00 ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742)) (* (- 270) (* r00 s!1 s!1 r!2 r!2 x!0)) (* (- 2) (* ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742 ?x9742 ?x9742)) (* (- 144) (* r00 s!1 s!1 r!2 x!0)) (* (- 48) (* s00 s00 s!1 r!2 r!2)) (* 99 (* s!1 s!1 s!1 r!2 x!0)) (* (- 135) (* s!1 s!1 r!2 x!0 x!0)) (* 4 (* s00 s00 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742)) (* (- 54) (* r00 s!1 s!1 r!2 r!2 r!2 x!0)) (* (- 3240) (* r00 r00 r!2 r!2 r!2)) (* (- 1296) (* r00 r00 r!2 r!2 r!2 r!2)) (* (- 810) (* r00 r00 s!1 r!2)) (* (- 1296) (* r00 r00 s!1 r!2 r!2)) (* (- 648) (* r00 r00 s!1 r!2 r!2 r!2)) ?x1016 (* (- 2) (* ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742)) (* 18 (* x00 s!1 s!1 r!2 r!2 r!2 r!2)) (* (- 162) (* r00 r00 s!1 s!1 r!2)) (* (- 144) (* x00 s!1 r!2 x!0)) (* (- 36) (* x00 s!1 r!2 r!2 r!2 r!2 x!0)) (* (- 18) (* r00 s!1 s!1 s!1 r!2 x!0)) ?x3547 (* (- 9) (* ?x5478 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742 ?x9742)) (* 6 (* r00 s!1 s!1 s!1 s!1 r!2)) (* (- 2) (* ?x5481 ?x5481 ?x5481 ?x9742 ?x9742)) (* (- 2916) (* r00 r00 r!2 r!2)) (* 72 (* x00 s!1 s!1 r!2 r!2 r!2)) (* (- 4) (* s00 s00 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742)) (* 18 (* s00 r00 s!1 r!2)) (* (- 828) (* s00 r00 r00 s!1 r!2 r!2 x!0)) (* (- 42) (* r00 r00 s!1 s!1 s!1 r!2)) (* (- 648) (* r00 x00 r!2 r!2 r!2)) (* 216 (* r00 s!1 r!2 r!2 x!0)) (* 648 (* r00 r!2 r!2 r!2 x!0)) (* (- 216) (* s00 r00 r!2 r!2 r!2 r!2)) (* 4 (* s00 s00 s!1 s!1 r!2 r!2 r!2)) (* (- 72) (* s00 r00 s!1 r!2 r!2 r!2)) (* 324 (* r00 s!1 r!2 x!0)) (* (- 12) (* s00 r00 s!1 r!2 r!2 r!2 r!2 x!0)) (* 108 (* r00 s!1 x!0)) (* (- 72) (* s00 r00 s!1 r!2 r!2)) (* 1296 (* r00 r!2 r!2 x!0)) (* (- 54) (* s00 r00 r!2 r!2)) (* (- 324) (* s00 r00 r!2 r!2 r!2)) (* (- 108) (* r00 r00 s!1 r!2 x!0 x!0)) (* 54 (* r00 r00 s!1 s!1 x!0)) (* (- 45) (* s00 r!2 r!2 x!0 x!0)) (* 9 (* r00 s00 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742)) (* (- 216) (* x00 s!1 r!2 r!2 r!2)) (* (- 648) (* x00 r!2 r!2 r!2 r!2)) (* (- 540) (* x00 s!1 r!2 r!2)) (* (- 432) (* x00 s!1 r!2)) (* (- 1944) (* x00 r!2 r!2 r!2)) (* (- 2106) (* x00 r!2 r!2)) (* (- 288) (* s00 s00 r!2 r!2)) (* (- 18) (* r00 x00 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742)) (* (- 504) (* s00 r00 r00 s!1 r!2 x!0)) (* (- 24) (* s00 s00 s!1)) (* (- 6) (* r00 s!1 r!2 x!0 x!0 x!0)) (* 18 (* r00 s!1 s!1 r!2 x!0 x!0)) (* 6 (* s00 r00 r!2 r!2 r!2 r!2 x!0 x!0)) (* 9 (* r00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742)) (* 2 (* ?x5478 ?x9742 ?x9742 ?x9742 ?x9742)) (* 18 (* r00 r00 x!0 x!0 x!0)) (* 2 (* s00 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742 ?x9742)) (* (- 420) (* s00 r00 r00 s!1 r!2 r!2 r!2 x!0)) (* 36 (* s00 s!1)) (* (- 9) (* s00 r00 s!1 s!1 x!0)) ?x703 ?x2203 (* 63 (* s00 s!1 r!2 x!0 x!0)) (* 12 (* s00 s!1 x!0)) (* (- 2) (* s00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742)) (* 4 (* s00 s00 r!2 r!2 r!2 x!0 x!0)) (* (- 36) (* s00 s!1 s!1 x!0)) (* 36 (* r00 x00 s!1 s!1 r!2)) (* (- 24) (* s00 s00 s!1 r!2 x!0)) (* (- 12) (* s00 r00 r00 s!1 s!1 s!1 r!2 x!0)) (* 54 (* r00 x00 s!1 s!1 r!2 r!2)) (* 162 (* s00 s!1 r!2)) (* (- 36) (* r00 x00 s!1 r!2 r!2 r!2 x!0)) (* 324 (* s00 r!2 r!2 r!2 r!2)) (* (- 90) (* r00 r!2 r!2 x!0 x!0 x!0)) (* 81 (* r00 s!1 s!1 s!1 x!0)) (* (- 216) (* s00 r00 r00 s!1 s!1 r!2 x!0)) (* (- 36) (* r00 x00 s!1 x!0)) (* (- 12) (* s00 r00 r00 s!1 s!1 s!1 x!0)) (* (- 117) (* r00 s!1 s!1 x!0 x!0)) (* 75 (* r00 s!1 x!0 x!0 x!0)) (* (- 18) (* r00 x!0 x!0 x!0 x!0)) (* (- 8) (* s00 s00 s!1 x!0)) (* (- 4) (* s00 s00 s!1 s!1 s!1)) (* 12 (* s00 s00 s!1 s!1 x!0)) (* 4 (* s00 s00 x!0 x!0)) (* 12 (* s00 s00 r!2 x!0 x!0)) (* (- 12) (* s00 s00 s!1 x!0 x!0)) (* (- 18) (* r00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742)) (* 12 (* s00 s00 r!2 r!2 x!0 x!0)) (* 6 (* r00 s00 ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742)) (* 6 (* s00 r00 r00 s!1 s!1 s!1 s!1 r!2)) (* (- 180) (* s00 s00 r!2)) (* 810 (* r00 r!2 x!0)) ?x6188 ?x3612 ?x990 (* (- 9) (* r00 s!1 s!1 x!0)) (* 414 (* s00 r00 r00 r!2 r!2 x!0 x!0)) (* (- 324) (* r00 x00 s!1 r!2)) (* (- 33) (* s00 r!2 r!2 r!2 x!0 x!0)) (* 27 (* r00 s!1 x!0 x!0)) (* (- 30) (* s00 r00 s!1 r!2 r!2 r!2 x!0)) (* (- 9) (* r00 x!0 x!0 x!0)) ?x862 (* (- 9) (* r00 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742 ?x9742)) (* 81 (* s!1 r!2 x!0 x!0 x!0)) (* (- 9) (* s00 s!1 s!1 r!2 r!2 r!2 r!2)) (* 210 (* s00 r00 r00 r!2 r!2 r!2 x!0 x!0)) (* (- 6) (* r00 r00 s00 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742)) (* 54 (* x00 s!1 s!1 x!0)) (* 18 (* ?x5478 ?x5478 ?x5481 ?x5481 ?x5481 ?x9742 ?x9742)) (* (- 108) (* r00 x00 s!1)) (* 2 (* ?x5478 ?x5481 ?x5481 ?x9742 ?x9742 ?x9742 ?x9742)) (* (- 144) (* x00 s!1 r!2 r!2 r!2 x!0)) (* 6 (* r00 ?x5478 ?x5478 ?x9742 ?x9742 ?x9742)) (* 162 (* r00 s!1 r!2 x!0 x!0)) (* 270 (* r00 s!1 r!2 r!2 x!0 x!0)) (* 54 (* r00 s!1 r!2 r!2 r!2 x!0 x!0)) ?x6196 (* (- 810) (* r00 x00 r!2)) (* 351 (* s00 r!2)) (* 162 (* s!1 s!1 r!2 r!2 x!0)) (* 8 (* s00 s00 s!1 s!1 r!2)) (* (- 1134) (* r00 r00 r!2)) ?x6700 (* 162 (* r00 x!0)) (* (- 972) (* x00 r!2)) (* (- 18) (* r00 x00 s!1 s!1 s!1)) (* (- 21) (* r00 s!1 s!1 s!1 s!1)) (* (- 108) (* x00 s!1)) (* 15 (* s00 r00 s!1 s!1 r!2 r!2 r!2)) (* 6 (* s00 r00 s!1 r!2 x!0)) (* 432 (* s00 r00 r00 r!2 r!2)) (* 6 (* s00 r00 s!1 x!0)) (* 3 (* s00 r00 s!1 s!1 r!2 r!2)) (* 6 (* s00 r00 r!2 x!0 x!0 x!0)) (* 6 (* r00 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742 ?x9742)) (* 3 (* ?x5478 ?x9742 ?x9742 ?x9742)) (* (- 2) (* s00 s!1 x!0 x!0 x!0)) (* 189 (* s!1 s!1 r!2 x!0)) (* 72 (* s00 r00 r00 s!1 r!2 r!2)) (* 18 (* x00 x!0 x!0)) (* 12 (* s00 s00 s!1 s!1 r!2 r!2)) (* 36 (* s00 s!1 x!0 x!0)) (* 18 (* ?x5478 ?x5478 ?x5481 ?x9742 ?x9742)) (* (- 6) (* s00 r00 r00 x!0 x!0 x!0)) (* 108 (* s00 r00 r00 s!1 r!2)) (* (- 162) (* r00 r00 s!1)) (* 3 (* ?x5478 ?x5481 ?x5481 ?x9742 ?x9742 ?x9742)) (* (- 6) (* r00 ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742 ?x9742)) (* (- 21) (* s00 r!2 x!0 x!0 x!0)) (* 36 (* s00 r00 r00 s!1)) (* 2 (* s00 ?x5478 ?x9742 ?x9742 ?x9742)) (* 18 (* x00 r!2 x!0 x!0 x!0)) (* (- 54) (* r00 r00 s!1 s!1)) (* 72 (* x00 r!2 r!2 r!2 x!0 x!0)) (* 108 (* x00 r!2 r!2 x!0 x!0)) (* 72 (* x00 r!2 x!0 x!0)) (* 54 (* s00 r00 r00 s!1 x!0 x!0)) (* (- 63) (* s!1 s!1 s!1 r!2)) (* (- 189) (* s!1 r!2 x!0 x!0)) (* 42 (* s00 r00 r00 s!1 s!1 s!1)) (* (- 8) (* s00 s00 s!1 r!2 r!2 r!2 x!0)) (* 18 (* r00 x00 x!0 x!0 x!0)) (* 6 (* s00 r00 r00 s!1 s!1 s!1 s!1)) (* 18 (* s00 r00 s!1)) (* (- 108) (* r00 x00 s!1 r!2 x!0)) (* (- 12) (* s00 x!0 x!0 x!0)) (* (- 810) (* r00 s!1 r!2)) (* (- 9) (* r00 ?x5478 ?x9742 ?x9742 ?x9742)) (* 9 (* s00 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742)) (* 2 (* s00 s!1 s!1 s!1 s!1)) (* (- 108) (* r00 s!1 s!1)) (* (- 6) (* s00 s!1 s!1 s!1 x!0)) (* 6 (* s00 s!1 s!1 x!0 x!0)) (* 18 (* x00 r!2 r!2 r!2 r!2 x!0 x!0)) (* (- 36) (* x00 s!1 x!0)) (* (- 54) (* x00 s!1 r!2 x!0 x!0)) (* (- 54) (* x00 s!1 x!0 x!0)) (* 3 (* s00 r00 s!1 s!1 s!1)) (* 9 (* ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742)) (* (- 3) (* ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742 ?x9742)) (* 90 (* s00 s!1 r!2 r!2 x!0)) (* 54 (* s00 s!1 r!2 x!0)) (* (- 6) (* r00 r00 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742 ?x9742)) (* (- 6) (* s00 r00 s!1 s!1 s!1 r!2)) (* 18 (* s00 s!1 r!2 r!2 r!2 r!2 x!0)) (* 18 (* r00 r00 s!1 s!1 s!1 x!0)) (* (- 6) (* r00 r00 s!1 s!1 s!1 s!1)) (* (- 6) (* s00 r00 s!1 s!1 r!2)) (* (- 9) (* r00 s00 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742)) (* (- 1296) (* r00 x00 r!2 r!2)) (* (- 2) (* s00 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742 ?x9742)) (* (- 9) (* r00 s!1 s!1 s!1)) (* 36 (* r00 s!1 s!1 s!1 r!2)) (* (- 216) (* r00 s!1 s!1 r!2 r!2)) (* (- 6) (* r00 s00 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742)) (* (- 18) (* s00 r00 s!1 r!2 x!0 x!0)) (* (- 1296) (* r00 s!1 r!2 r!2)) (* (- 648) (* r00 s!1 r!2 r!2 r!2)) (* 18 (* s00 r00 s!1 s!1 r!2 x!0)) (* (- 324) (* r00 s!1 s!1 r!2)) (* (- 9) (* ?x5478 ?x5478 ?x9742 ?x9742 ?x9742)) (* (- 162) (* s!1 r!2 r!2 x!0 x!0)) (* (- 24) (* s00 s00 s!1 r!2 r!2 x!0)) (* 9 (* r00 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742 ?x9742)) (* 252 (* s00 r00 r00 r!2 x!0 x!0)) (* 6 (* s00 r00 s!1 s!1 r!2 r!2 r!2 r!2)) (* 837 (* s00 r!2 r!2)) (* (- 3) (* ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742)) (* (- 3) (* s00 r00 x!0 x!0)) (* 18 (* r00 ?x5478 ?x5481 ?x5481 ?x5481 ?x9742 ?x9742)) (* (- 3) (* s00 r00 r!2 x!0 x!0)) (* 9 (* s00 r00 r!2 r!2 x!0 x!0)) (* 15 (* s00 r00 r!2 r!2 r!2 x!0 x!0)) (* (- 162) (* r00 s!1)) (* 81 (* s00 r00 r!2)) (* (- 18) (* ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742)) (* (- 90) (* s00 r00 r00 s!1 s!1 x!0)) (* 18 (* r00 x00 ?x5478 ?x5478 ?x5478 ?x5481 ?x9742 ?x9742)) (* 12 (* s00 s!1 s!1 s!1)) (* 21 (* s00 s!1 s!1 s!1 r!2)) (* (- 63) (* s00 s!1 s!1 r!2 x!0)) (* 54 (* r00 x00 s!1 s!1 x!0)) (* 108 (* s00 r00 r00 s!1 r!2 x!0 x!0)) ?x11143 (* 18 (* r00 s!1 s!1 s!1 r!2 r!2 r!2)) (* (- 54) (* s!1 s!1 s!1 r!2 r!2)) ?x11139 (* (- 27) (* s00 r!2 x!0 x!0)) (* 48 (* s00 r00 r00 x!0 x!0)) (* 270 (* s00 r00 r00 r!2)) (* (- 18) (* s00 r00 s!1 r!2 r!2 x!0)) (* (- 9) (* s00 r!2 r!2 r!2 r!2 x!0 x!0)) (* 54 (* s00 r00 r00 s!1 s!1)) (* 414 (* s00 r00 r00 s!1 s!1 r!2 r!2)) (* 210 (* s00 r00 r00 s!1 s!1 r!2 r!2 r!2)) (* (- 216) (* r00 x00 s!1 r!2 r!2)) (* 36 (* r00 r00 r!2 x!0 x!0 x!0)) (* (- 96) (* s00 r00 r00 s!1 x!0)) (* (- 216) (* x00 s!1 r!2 r!2 x!0)) (* 258 (* s00 r00 r00 s!1 s!1 r!2)) (* (- 24) (* r00 r00 s!1 s!1 s!1)) (* (- 108) (* r00 r00 s!1 s!1 r!2 r!2)) (* 54 (* x00 s!1 s!1 r!2 x!0)) (* 108 (* s00 s!1 r!2 r!2 r!2)) (* (- 33) (* s00 s!1 s!1 r!2 r!2 r!2)) (* 6 (* s00 r00 r00 s!1 s!1 r!2 x!0 x!0)) ?x7152 (* 18 (* r00 x00 s!1 s!1 r!2 r!2 r!2)) (* 54 (* r00 x00 r!2 x!0 x!0)) (* 72 (* s00 r00 r00 s!1 r!2 r!2 x!0 x!0)) (* 18 (* r00 x00 x!0 x!0)) (* 18 (* r00 x00 r!2 r!2 r!2 x!0 x!0)) (* (- 54) (* r00 x00 s!1 x!0 x!0)) (* (- 144) (* s00 r00 r00 s!1 s!1 r!2 r!2 x!0)) (* 54 (* r00 x00 r!2 r!2 x!0 x!0)) (* 108 (* s00 r00 r00 s!1 s!1 s!1 r!2)) (* 9 (* s00 r00 s!1 x!0 x!0)) (* (- 3) (* s00 r00 x!0 x!0 x!0)) (* 18 (* x00 x!0 x!0 x!0)) (* (- 36) (* s00 s!1 s!1 r!2 r!2)) (* (- 12) (* s00 s!1 s!1 r!2)) (* 72 (* s00 r00 r00 s!1 s!1 s!1 r!2 r!2)) (* 4 (* s00 s00 x!0 x!0 x!0)) (* 6 (* s00 r00 r00 s!1 s!1 x!0 x!0)) (* (- 108) (* r00 x00 s!1 r!2 r!2 x!0)) (* (- 54) (* r00 r!2 x!0 x!0 x!0)) (* (- 18) (* r00 r!2 r!2 r!2 x!0 x!0 x!0)) (* (- 3) (* s00 ?x5478 ?x5481 ?x5481 ?x9742 ?x9742)))))
 (let (($x1709 (= ?x1894 0)))
 (let (($x6115 (not $x1709)))
 (let ((?x9025 (* r00 r00 s!1)))
 (let ((?x7490 (* 36 ?x9025)))
 (let ((?x7468 (* (- 9) s!1)))
 (let ((?x1434 (* x00 x00)))
 (let ((?x10006 (* 108 ?x1434)))
 (let ((?x1272 (* s00 s00 s00)))
 (let ((?x7465 (* 16 ?x1272)))
 (let ((?x970 (* r00 r00 r00 x00)))
 (let ((?x9646 (* (- 432) ?x970)))
 (let ((?x893 (* s00 x00)))
 (let ((?x7428 (* (- 108) ?x893)))
 (let ((?x10352 (* (- 36) ?x735)))
 (let ((?x7491 (* 51 ?x679)))
 (let ((?x3086 (* 108 ?x610)))
 (let ((?x640 (* (- 54) ?x514)))
 (let ((?x137 (* 9 s00)))
 (let ((?x5368 (+ ?x137 ?x640 (* 216 (* s00 r00 x00)) ?x3086 ?x7491 ?x10352 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x7428 ?x9646 (* 216 (* s00 r00 r00 r00)) ?x7465 ?x10006 (* (- 66) (* s00 s!1)) (* 108 (* s00 x!0)) (* (- 4) ?x4796) (* 108 (* x!0 x!0)) ?x7468 (* (- 108) (* s!1 x!0)) (* 15 (* s!1 s!1)) (* (- 108) (* r00 x!0)) (* 108 (* x00 s!1)) ?x7490 (* 36 (* r00 r00 s!1 s!1)) (* 108 (* s00 r00 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* (- 216) (* r00 r00 r00 s!1)) (* 54 (* r00 s!1)))))
 (let (($x5162 (= ?x5368 0)))
 (let ((?x965 (* r00 r00 x00)))
 (let ((?x11285 (* 36 ?x965)))
 (let ((?x9223 (* (- 6) ?x893)))
 (let ((?x7343 (* 15 ?x679)))
 (let ((?x4242 (* 54 ?x610)))
 (let ((?x11185 (+ ?x137 (* (- 24) ?x514) ?x4242 ?x7343 ?x10352 (* 2 (* s00 s00 r00)) ?x9223 ?x11285 (* (- 12) (* s00 s!1)) (* (- 36) (* r00 r00 x!0)) (* (- 2) (* s00 s!1 r!2)) (* 6 (* s00 x!0)) (* 4 (* s00 s00 r!2)) (* (- 36) (* r00 r!2 x!0)) ?x7468 (* (- 6) (* s!1 x!0)) (* (- 3) (* s!1 s!1)) (* 36 (* r00 x00 r!2)) (* (- 24) (* s00 r!2)) (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* 6 (* x00 s!1)) (* (- 54) (* r!2 x!0)) ?x7490 (* 2 (* s00 r00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* (- 4) (* r00 s!1 s!1)) (* 24 (* s!1 r!2)) (* 24 (* r00 s!1)))))
 (let (($x2876 (= ?x11185 0)))
 (let ((?x5418 (* 6 x!0)))
 (let ((?x5423 (* 3 r!2)))
 (let ((?x557 (* r00 r00 r00)))
 (let ((?x558 (* 12 ?x557)))
 (let ((?x592 (* (- 6) ?x514)))
 (let ((?x589 (* (- 6) x00)))
 (let ((?x588 (* (- 3) r00)))
 (let ((?x9461 (+ ?x44 ?x588 ?x589 ?x592 ?x558 ?x5421 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)) ?x5423 ?x5418 (* 2 (* s!1 r!2)))))
 (let (($x9470 (= ?x9461 0)))
 (let ((?x9750 (* (- 3) ?x389)))
 (let ((?x10109 (+ s00 ?x9750 (* 3 (* r!2 r!2)) ?x5480)))
 (let (($x10110 (= ?x10109 0)))
 (let (($x1702 (and $x10110 $x9470 $x10189 $x2876 $x5162 $x6115)))
 (let ((?x5507 (+ 3 ?x5506 s!1)))
 (let ((?x5413 (* s!1 x00)))
 (let ((?x5451 (* (- 108) ?x5413)))
 (let ((?x9110 (+ ?x13217 ?x11992 ?x10497 (* (- 1134) (* r!2 r00 r00)) (* 351 (* r!2 s00)) ?x13220 (* 324 (* r!2 r!2 r!2 r!2 s00)) ?x13222 (* 6 (* r00 r00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507)) (* (- 810) (* r!2 s!1 r00)) (* 810 (* r!2 x!0 r00)) (* (- 162) (* s!1 r00 r00)) ?x11588 (* 162 (* x!0 r00)) ?x13227 (* (- 108) (* s!1 s!1 r00)) (* (- 972) (* r!2 x00)) (* 36 (* s!1 s00)) (* (- 162) (* s!1 r00)) ?x5451 (* 81 (* r!2 s00 r00)) (* 18 (* s!1 s00 r00)) ?x862 (* (- 180) (* r!2 s00 s00)) (* 162 (* r!2 s!1 s00)) (* (- 810) (* r!2 r00 x00)) (* 432 (* r!2 r!2 s00 r00 r00)) (* (- 54) (* s!1 s!1 r00 r00)) (* 6 (* r00 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507 ?x5507)) (* 18 (* x!0 x!0 x00)) (* 72 (* r!2 x!0 x!0 x00)) (* 108 (* r!2 r!2 x!0 x!0 x00)) (* 72 (* r!2 r!2 r!2 x!0 x!0 x00)) (* 18 (* r!2 r!2 r!2 r!2 x!0 x!0 x00)) (* 216 (* r!2 r!2 r!2 s00 r00 r00)) ?x6700 ?x3547 (* (- 18) (* ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507)) ?x6196 ?x6188 (* (- 189) (* r!2 s!1 x!0 x!0)) (* 36 (* s!1 s00 r00 r00)) ?x2203 (* 108 (* r!2 s!1 s00 r00 r00)) ?x3612 (* 189 (* r!2 s!1 s!1 x!0)) ?x990 (* (- 63) (* r!2 s!1 s!1 s!1)) (* 72 (* r!2 r!2 s!1 s00 r00 r00)) ?x1016 (* (- 6) (* x!0 x!0 x!0 s00 r00 r00)) (* 18 (* ?x5478 ?x5478 ?x5481 ?x5507 ?x5507)) (* 54 (* s!1 x!0 x!0 s00 r00 r00)) (* 42 (* s!1 s!1 s!1 s00 r00 r00)) (* (- 90) (* s!1 s!1 x!0 s00 r00 r00)) (* 18 (* r00 x00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507)) (* 12 (* s!1 s!1 s!1 s00)) (* (- 36) (* s!1 s!1 x!0 s00)) (* 36 (* s!1 x!0 x!0 s00)) (* 3 (* ?x5478 ?x5481 ?x5481 ?x5507 ?x5507 ?x5507)) (* (- 12) (* x!0 x!0 x!0 s00)) (* 21 (* r!2 s!1 s!1 s!1 s00)) (* (- 63) (* r!2 s!1 s!1 x!0 s00)) (* 63 (* r!2 s!1 x!0 x!0 s00)) (* (- 3) (* ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507 ?x5507)) (* 9 (* ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507)) (* (- 21) (* r!2 x!0 x!0 x!0 s00)) (* (- 9) (* r00 ?x5478 ?x5507 ?x5507 ?x5507)) (* (- 6) (* r00 ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507 ?x5507)) (* 8 (* r!2 s!1 s!1 s00 s00)) (* (- 4) (* s!1 s!1 s!1 s00 s00)) (* (- 8) (* s!1 x!0 s00 s00)) (* (- 24) (* r!2 s!1 x!0 s00 s00)) (* 12 (* s!1 s!1 x!0 s00 s00)) (* 4 (* x!0 x!0 s00 s00)) (* 12 (* r!2 x!0 x!0 s00 s00)) (* (- 12) (* s!1 x!0 x!0 s00 s00)) (* 270 (* r!2 s00 r00 r00)) (* 12 (* r!2 r!2 s!1 s!1 s00 s00)) (* 4 (* r!2 r!2 r!2 s!1 s!1 s00 s00)) (* (- 54) (* r!2 r!2 s!1 s!1 s!1)) (* 162 (* r!2 r!2 s!1 s!1 x!0)) (* (- 162) (* r!2 r!2 s!1 x!0 x!0)) (* (- 24) (* r!2 r!2 s!1 x!0 s00 s00)) ?x7152 (* (- 8) (* r!2 r!2 r!2 s!1 x!0 s00 s00)) (* 2 (* s00 ?x5478 ?x5507 ?x5507 ?x5507)) (* 18 (* x!0 x!0 x!0 r00 x00)) (* 6 (* r00 s00 ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507)) (* 12 (* r!2 r!2 x!0 x!0 s00 s00)) (* 4 (* r!2 r!2 r!2 x!0 x!0 s00 s00)) (* (- 2) (* s00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507)) (* (- 21) (* s!1 s!1 s!1 s!1 r00)) (* 81 (* s!1 s!1 s!1 x!0 r00)) (* (- 117) (* s!1 s!1 x!0 x!0 r00)) (* 75 (* s!1 x!0 x!0 x!0 r00)) (* (- 18) (* x!0 x!0 x!0 x!0 r00)) (* (- 36) (* s!1 x!0 x00)) (* 9 (* s00 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507)) (* 18 (* r!2 x!0 x!0 x!0 x00)) (* 18 (* x!0 x!0 x!0 x00)) (* (- 36) (* r!2 r!2 s!1 s!1 s00)) (* (- 12) (* r!2 s!1 s!1 s00)) (* 72 (* r!2 r!2 s!1 s!1 s!1 s00 r00 r00)) (* 6 (* s!1 s!1 x!0 x!0 s00 r00 r00)) (* 4 (* x!0 x!0 x!0 s00 s00)) (* (- 18) (* r00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507)) (* (- 216) (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 54) (* s!1 x!0 x!0 r00 x00)) (* 108 (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* 18 (* r!2 r!2 r!2 x!0 x!0 r00 x00)) (* 54 (* r!2 r!2 x!0 x!0 r00 x00)) (* 54 (* r!2 x!0 x!0 r00 x00)) (* 18 (* x!0 x!0 r00 x00)) (* (- 144) (* r!2 r!2 s!1 s!1 x!0 s00 r00 r00)) (* 54 (* s!1 s!1 x!0 r00 x00)) (* 72 (* r!2 r!2 s!1 x!0 x!0 s00 r00 r00)) (* (- 36) (* r!2 r!2 r!2 s!1 x!0 r00 x00)) (* (- 108) (* r!2 r!2 s!1 x!0 r00 x00)) (* (- 108) (* r!2 s!1 x!0 r00 x00)) (* 6 (* s!1 s!1 s!1 s!1 s00 r00 r00)) (* 6 (* r!2 s!1 s!1 s!1 s!1 s00 r00 r00)) (* (- 36) (* s!1 x!0 r00 x00)) (* (- 12) (* s!1 s!1 s!1 x!0 s00 r00 r00)) (* 36 (* r!2 s!1 s!1 r00 x00)) (* (- 12) (* r!2 s!1 s!1 s!1 x!0 s00 r00 r00)) (* 54 (* r!2 r!2 s!1 s!1 r00 x00)) (* (- 18) (* s!1 s!1 s!1 r00 x00)) (* 6 (* r!2 s!1 s!1 x!0 x!0 s00 r00 r00)) (* 18 (* r!2 r!2 r!2 s!1 s!1 r00 x00)) (* 108 (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* 9 (* s!1 x!0 x!0 s00 r00)) (* (- 3) (* x!0 x!0 x!0 s00 r00)) (* (- 9) (* s!1 s!1 x!0 s00 r00)) (* 3 (* s!1 s!1 s!1 s00 r00)) (* (- 54) (* s!1 x!0 x!0 x00)) (* (- 54) (* r!2 s!1 x!0 x!0 x00)) (* (- 6) (* r00 r00 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507 ?x5507)) (* (- 6) (* r!2 s!1 s!1 s!1 s00 r00)) (* (- 324) (* r!2 s!1 s!1 r00)) (* 18 (* r!2 s!1 s!1 x!0 s00 r00)) (* (- 648) (* r!2 r!2 r!2 s!1 r00)) (* (- 1296) (* r!2 r!2 s!1 r00)) (* (- 9) (* r00 s00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507)) (* (- 18) (* r!2 s!1 x!0 x!0 s00 r00)) (* 6 (* r!2 x!0 x!0 x!0 s00 r00)) (* (- 3) (* ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507)) (* 837 (* r!2 r!2 s00)) (* (- 216) (* r!2 r!2 s!1 s!1 r00)) (* 36 (* r!2 s!1 s!1 s!1 r00)) (* (- 9) (* s!1 s!1 s!1 r00)) (* (- 2) (* s00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507 ?x5507)) (* (- 1296) (* r!2 r!2 r00 x00)) (* 2 (* s!1 s!1 s!1 s!1 s00)) (* (- 6) (* s!1 s!1 s!1 x!0 s00)) (* 6 (* s!1 s!1 x!0 x!0 s00)) (* (- 2) (* s!1 x!0 x!0 x!0 s00)) (* 15 (* r!2 r!2 r!2 x!0 x!0 s00 r00)) (* 9 (* r!2 r!2 x!0 x!0 s00 r00)) (* (- 3) (* r!2 x!0 x!0 s00 r00)) (* 18 (* r00 ?x5478 ?x5481 ?x5481 ?x5481 ?x5507 ?x5507)) (* (- 3) (* x!0 x!0 s00 r00)) (* (- 30) (* r!2 r!2 r!2 s!1 x!0 s00 r00)) (* (- 18) (* r!2 r!2 s!1 x!0 s00 r00)) (* 6 (* r!2 s!1 x!0 s00 r00)) (* 6 (* s!1 x!0 s00 r00)) (* 15 (* r!2 r!2 r!2 s!1 s!1 s00 r00)) (* 3 (* r!2 r!2 s!1 s!1 s00 r00)) (* 6 (* r!2 r!2 r!2 r!2 s!1 s!1 s00 r00)) (* (- 6) (* r!2 s!1 s!1 s00 r00)) ?x703 (* 54 (* s!1 s!1 s00 r00 r00)) (* 258 (* r!2 s!1 s!1 s00 r00 r00)) (* (- 216) (* r!2 r!2 s!1 x!0 x00)) (* 414 (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* 210 (* r!2 r!2 r!2 s!1 s!1 s00 r00 r00)) (* (- 216) (* r!2 r!2 s!1 r00 x00)) (* (- 96) (* s!1 x!0 s00 r00 r00)) (* (- 504) (* r!2 s!1 x!0 s00 r00 r00)) (* (- 828) (* r!2 r!2 s!1 x!0 s00 r00 r00)) (* (- 420) (* r!2 r!2 r!2 s!1 x!0 s00 r00 r00)) (* 48 (* x!0 x!0 s00 r00 r00)) (* (- 6) (* r00 s00 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507)) (* 252 (* r!2 x!0 x!0 s00 r00 r00)) (* 414 (* r!2 r!2 x!0 x!0 s00 r00 r00)) (* (- 9) (* r00 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507 ?x5507)) (* 210 (* r!2 r!2 r!2 x!0 x!0 s00 r00 r00)) (* 81 (* r!2 s!1 x!0 x!0 x!0)) (* 9 (* r00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507 ?x5507)) (* (- 9) (* ?x5478 ?x5478 ?x5507 ?x5507 ?x5507)) (* 54 (* s!1 s!1 x!0 x00)) (* 54 (* r!2 s!1 s!1 x!0 x00)) (* 108 (* r!2 r!2 r!2 s!1 s00)) (* (- 33) (* r!2 r!2 r!2 s!1 s!1 s00)) (* 12 (* s!1 x!0 s00)) (* 54 (* r!2 s!1 x!0 s00)) (* 90 (* r!2 r!2 s!1 x!0 s00)) (* 66 (* r!2 r!2 r!2 s!1 x!0 s00)) (* (- 6) (* x!0 x!0 s00)) (* (- 27) (* r!2 x!0 x!0 s00)) (* (- 45) (* r!2 r!2 x!0 x!0 s00)) (* (- 33) (* r!2 r!2 r!2 x!0 x!0 s00)) (* (- 9) (* r!2 r!2 r!2 r!2 s!1 s!1 s00)) (* (- 6) (* r00 r00 s00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507)) (* 18 (* ?x5478 ?x5478 ?x5481 ?x5481 ?x5481 ?x5507 ?x5507)) (* (- 9) (* r!2 r!2 r!2 r!2 x!0 x!0 s00)) (* 18 (* r!2 r!2 r!2 r!2 s!1 x!0 s00)) (* 3 (* ?x5478 ?x5507 ?x5507 ?x5507)) (* (- 324) (* r!2 s!1 r00 x00)) (* (- 18) (* r!2 r!2 r!2 x!0 x!0 x!0 r00)) (* (- 90) (* r!2 r!2 x!0 x!0 x!0 r00)) (* (- 54) (* r!2 x!0 x!0 x!0 r00)) (* (- 9) (* x!0 x!0 x!0 r00)) (* 54 (* r!2 r!2 r!2 s!1 x!0 x!0 r00)) (* 270 (* r!2 r!2 s!1 x!0 x!0 r00)) (* 162 (* r!2 s!1 x!0 x!0 r00)) (* (- 144) (* r!2 r!2 r!2 s!1 x!0 x00)) (* 27 (* s!1 x!0 x!0 r00)) (* 2 (* ?x5478 ?x5481 ?x5481 ?x5507 ?x5507 ?x5507 ?x5507)) (* (- 108) (* s!1 r00 x00)) (* 4 (* s00 s00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507)) (* (- 54) (* r!2 r!2 r!2 s!1 s!1 x!0 r00)) (* (- 270) (* r!2 r!2 s!1 s!1 x!0 r00)) (* (- 2) (* ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507 ?x5507 ?x5507)) (* (- 144) (* r!2 s!1 s!1 x!0 r00)) (* 2 (* ?x5478 ?x5507 ?x5507 ?x5507 ?x5507)) (* 90 (* r!2 r!2 s!1 s!1 s!1 r00)) (* 18 (* r!2 r!2 r!2 s!1 s!1 s!1 r00)) (* (- 2) (* ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507)) (* (- 9) (* s!1 s!1 x!0 r00)) (* (- 36) (* r!2 r!2 r!2 r!2 s!1 x!0 x00)) (* (- 144) (* r!2 s!1 x!0 x00)) ?x11139 ?x11143 (* (- 27) (* r!2 s!1 s!1 s!1 s!1)) (* 99 (* r!2 s!1 s!1 s!1 x!0)) (* (- 135) (* r!2 s!1 s!1 x!0 x!0)) (* (- 3) (* s00 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507)) (* 18 (* x00 ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507)) (* (- 2) (* ?x5481 ?x5481 ?x5481 ?x5507 ?x5507)) (* (- 42) (* r!2 s!1 s!1 s!1 r00 r00)) (* (- 24) (* s!1 s!1 s!1 r00 r00)) (* (- 108) (* r!2 r!2 s!1 s!1 r00 r00)) (* (- 162) (* r!2 s!1 s!1 r00 r00)) (* 18 (* r!2 r!2 r!2 r!2 s!1 s!1 x00)) (* (- 648) (* r!2 r!2 r!2 s!1 r00 r00)) (* (- 1296) (* r!2 r!2 s!1 r00 r00)) (* (- 810) (* r!2 s!1 r00 r00)) (* (- 1296) (* r!2 r!2 r!2 r!2 r00 r00)) (* (- 3240) (* r!2 r!2 r!2 r00 r00)) (* (- 2916) (* r!2 r!2 r00 r00)) (* 72 (* r!2 r!2 r!2 s!1 s!1 x00)) (* (- 4) (* s00 s00 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507)) (* 18 (* r!2 s!1 s00 r00)) (* (- 54) (* r!2 r!2 s00 r00)) (* (- 324) (* r!2 r!2 r!2 s00 r00)) (* 1296 (* r!2 r!2 x!0 r00)) (* (- 72) (* r!2 r!2 s!1 s00 r00)) (* 108 (* s!1 x!0 r00)) (* (- 12) (* r!2 r!2 r!2 r!2 s!1 x!0 s00 r00)) (* 324 (* r!2 s!1 x!0 r00)) (* (- 72) (* r!2 r!2 r!2 s!1 s00 r00)) (* (- 216) (* r!2 r!2 r!2 r!2 s00 r00)) (* 648 (* r!2 r!2 r!2 x!0 r00)) (* 216 (* r!2 r!2 s!1 x!0 r00)) (* (- 648) (* r!2 r!2 r!2 r00 x00)) (* 6 (* r!2 s!1 s!1 s!1 s!1 r00)) (* (- 9) (* ?x5478 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507 ?x5507)) (* (- 18) (* r!2 s!1 s!1 s!1 x!0 r00)) (* 18 (* r!2 s!1 s!1 x!0 x!0 r00)) (* (- 6) (* r!2 s!1 x!0 x!0 x!0 r00)) (* (- 24) (* s!1 s00 s00)) (* (- 18) (* r00 x00 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507)) (* (- 288) (* r!2 r!2 s00 s00)) (* (- 72) (* r!2 s!1 s00 s00)) (* (- 144) (* r!2 r!2 r!2 s00 s00)) (* (- 48) (* r!2 r!2 s!1 s00 s00)) (* 9 (* r00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507)) (* 6 (* r!2 r!2 r!2 r!2 x!0 x!0 s00 r00)) (* 234 (* r!2 r!2 s!1 s00)) (* 864 (* r!2 r!2 r!2 s00)) (* (- 9) (* s00 ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507)) (* 9 (* ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507 ?x5507)) (* (- 18) (* s!1 s!1 s!1 x00)) (* 36 (* r!2 s!1 s!1 x00)) (* 90 (* r!2 r!2 s!1 s!1 x00)) (* (- 18) (* r!2 s!1 s!1 s!1 x00)) (* (- 2106) (* r!2 r!2 x00)) (* (- 1944) (* r!2 r!2 r!2 x00)) (* (- 432) (* r!2 s!1 x00)) (* (- 540) (* r!2 r!2 s!1 x00)) (* (- 648) (* r!2 r!2 r!2 r!2 x00)) (* (- 216) (* r!2 r!2 r!2 s!1 x00)) (* 9 (* r00 s00 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507)) (* 54 (* s!1 s!1 x!0 r00 r00)) (* (- 18) (* x00 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507)) (* (- 6) (* r00 ?x5478 ?x5478 ?x5478 ?x5478 ?x5481 ?x5481 ?x5507)) (* (- 54) (* s!1 x!0 x!0 r00 r00)) (* 2 (* s00 ?x5478 ?x5481 ?x5481 ?x5507 ?x5507 ?x5507)) (* 18 (* x!0 x!0 x!0 r00 r00)) (* 108 (* r!2 s!1 s!1 x!0 r00 r00)) (* (- 108) (* r!2 s!1 x!0 x!0 r00 r00)) (* 36 (* r!2 x!0 x!0 x!0 r00 r00)) (* (- 6) (* s!1 s!1 s!1 s!1 r00 r00)) (* 18 (* s!1 s!1 s!1 x!0 r00 r00)) (* (- 18) (* s!1 s!1 x!0 x!0 r00 r00)) (* 6 (* s!1 x!0 x!0 x!0 r00 r00)) (* 6 (* r00 r00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507 ?x5507)) (* 3 (* s00 ?x5478 ?x5478 ?x5478 ?x5481 ?x5507 ?x5507)) (* 6 (* r00 ?x5478 ?x5478 ?x5507 ?x5507 ?x5507)))))
 (let ((?x1464 (* (- 108) ?x1434)))
 (let ((?x1463 (* (- 16) ?x1272)))
 (let ((?x1144 (* s00 r00 r00 r00)))
 (let ((?x1459 (* (- 216) ?x1144)))
 (let ((?x971 (* 432 ?x970)))
 (let ((?x1217 (* 108 ?x893)))
 (let ((?x819 (* s00 s00 r00 r00)))
 (let ((?x820 (* 36 ?x819)))
 (let ((?x756 (* s00 s00 r00)))
 (let ((?x1100 (* 108 ?x756)))
 (let ((?x1088 (* 36 ?x735)))
 (let ((?x1453 (* (- 51) ?x679)))
 (let ((?x9272 (* s!1 r00 r00)))
 (let ((?x5427 (* (- 36) ?x9272)))
 (let ((?x1450 (* (- 108) ?x610)))
 (let ((?x601 (* s00 r00 x00)))
 (let ((?x1449 (* (- 216) ?x601)))
 (let ((?x608 (* 54 ?x514)))
 (let ((?x1075 (* (- 9) s00)))
 (let ((?x5467 (* 9 s!1)))
 (let ((?x5479 (+ ?x5467 ?x1075 ?x608 ?x1449 ?x1450 (* (- 15) (* s!1 s!1)) ?x5427 ?x1453 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1088 ?x1100 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) ?x5451 ?x820 (* (- 108) (* s!1 s00 r00)) (* 4 ?x4796) ?x1217 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x971 (* 12 (* s!1 s!1 s00)) ?x1459 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1463 (* 216 (* x!0 x00)) ?x1464)))
 (let ((?x978 (* (- 36) ?x965)))
 (let ((?x894 (* 6 ?x893)))
 (let ((?x784 (* (- 2) ?x756)))
 (let ((?x1004 (* (- 15) ?x679)))
 (let ((?x639 (* (- 54) ?x610)))
 (let ((?x652 (* 24 ?x514)))
 (let ((?x4793 (+ ?x5467 ?x1075 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x652 ?x639 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x5427 ?x1004 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1088 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x784 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) ?x5413) (* (- 2) (* s!1 s00 r00)) ?x894 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x978 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x736 (* 6 ?x735)))
 (let ((?x692 (* (- 4) ?x679)))
 (let ((?x624 (* (- 18) ?x610)))
 (let ((?x629 (* 9 ?x514)))
 (let ((?x466 (* (- 3) s00)))
 (let ((?x5443 (+ (* 3 s!1) ?x466 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x629 ?x624 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x9272) ?x692 (* 18 (* x!0 r00)) ?x736 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x4799 (+ ?x5423 ?x5421 ?x5418 ?x44 ?x588 ?x589 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x592 ?x558)))
 (let (($x5417 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x389)) 0)))
 (let (($x9447 (and $x5417 (= ?x4799 0) (= ?x5443 0) (= ?x4793 0) (= ?x5479 0) (not (= ?x9110 0)))))
 (let (($x13475 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1476 (+ 3 ?x214 s)))
 (let ((?x1473 (+ 1 r)))
 (let ((?x13466 (* 3 (* s00 ?x1473 ?x1473 ?x1473 (+ (* (- 1) s) x) ?x1476 ?x1476))))
 (let ((?x368 (* (- 1) s)))
 (let ((?x1526 (+ ?x368 x)))
 (let ((?x12118 (* (- 216) (* r r r s x00))))
 (let ((?x12048 (* (- 648) (* r r r r x00))))
 (let ((?x12117 (* (- 540) (* r r s x00))))
 (let ((?x12115 (* (- 432) (* r s x00))))
 (let ((?x12114 (* (- 1944) (* r r r x00))))
 (let ((?x12113 (* (- 2106) (* r r x00))))
 (let ((?x11659 (* (- 48) (* r r s s00 s00))))
 (let ((?x11622 (* (- 144) (* r r r s00 s00))))
 (let ((?x11658 (* (- 72) (* r s s00 s00))))
 (let ((?x11656 (* (- 288) (* r r s00 s00))))
 (let ((?x11657 (* (- 24) (* s s00 s00))))
 (let ((?x11442 (* (- 6) (* r s x x x r00))))
 (let ((?x11455 (* 18 (* r s s x x r00))))
 (let ((?x11453 (* (- 18) (* r s s s x r00))))
 (let ((?x11294 (* 6 (* r s s s s r00))))
 (let ((?x10866 (* (- 216) (* r r r r s00 r00))))
 (let ((?x10930 (* (- 72) (* r r r s s00 r00))))
 (let ((?x10513 (* (- 2916) (* r r r00 r00))))
 (let ((?x10511 (* (- 3240) (* r r r r00 r00))))
 (let ((?x10364 (* (- 1296) (* r r r r r00 r00))))
 (let ((?x10508 (* (- 810) (* r s r00 r00))))
 (let ((?x10507 (* (- 1296) (* r r s r00 r00))))
 (let ((?x10506 (* (- 648) (* r r r s r00 r00))))
 (let ((?x10504 (* (- 162) (* r s s r00 r00))))
 (let ((?x10503 (* (- 108) (* r r s s r00 r00))))
 (let ((?x9910 (* (- 18) (* r x x x x))))
 (let ((?x9907 (* (- 18) (* x x x x))))
 (let ((?x9388 (* 18 (* r r r s s s r00))))
 (let ((?x11485 (* 90 (* r r s s s r00))))
 (let ((?x11482 (* (- 270) (* r r s s x r00))))
 (let ((?x9559 (* (- 54) (* r r r s s x r00))))
 (let ((?x11478 (* 270 (* r r s x x r00))))
 (let ((?x9555 (* 54 (* r r r s x x r00))))
 (let ((?x11474 (* (- 90) (* r r x x x r00))))
 (let ((?x9138 (* (- 18) (* r r r x x x r00))))
 (let ((?x8801 (* 18 (* r r r r s x s00))))
 (let ((?x8705 (* (- 9) (* r r r r x x s00))))
 (let ((?x8644 (* (- 9) (* r r r r s s s00))))
 (let ((?x7649 (* (- 9) (* ?x1473 ?x1473 ?x1476 ?x1476 ?x1476))))
 (let ((?x9938 (* 81 (* r s x x x))))
 (let ((?x7127 (* (- 18) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1526))))
 (let ((?x6716 (* (- 2) (* s x x x s00))))
 (let ((?x6727 (* 6 (* s s x x s00))))
 (let ((?x6724 (* (- 6) (* s s s x s00))))
 (let ((?x6591 (* 2 (* s s s s s00))))
 (let ((?x3989 (* 18 (* x x x x00))))
 (let ((?x3987 (* 18 (* r x x x x00))))
 (let ((?x3642 (* (- 18) (* x x x x r00))))
 (let ((?x6751 (* (- 21) (* r x x x s00))))
 (let ((?x6749 (* 63 (* r s x x s00))))
 (let ((?x6747 (* (- 63) (* r s s x s00))))
 (let ((?x2068 (* (- 6) (* x x x s00 r00 r00))))
 (let ((?x9933 (* 78 (* s x x x))))
 (let ((?x7889 (* 18 (* x x x))))
 (let ((?x7892 (* (- 54) (* s x x))))
 (let ((?x7891 (* 54 (* s s x))))
 (let ((?x1661 (* 18 (* r r r r x x x00))))
 (let ((?x1631 (* 18 (* x x x00))))
 (let ((?x1268 (* s s r00 r00)))
 (let ((?x10505 (* (- 54) ?x1268)))
 (let ((?x913 (* r s00 s00)))
 (let ((?x11655 (* (- 180) ?x913)))
 (let ((?x891 (* s s s)))
 (let ((?x7894 (* (- 18) ?x891)))
 (let ((?x812 (* s x00)))
 (let ((?x1456 (* (- 108) ?x812)))
 (let ((?x747 (* r x00)))
 (let ((?x12111 (* (- 972) ?x747)))
 (let ((?x735 (* s00 r00 r00)))
 (let ((?x13227 (* 54 ?x735)))
 (let ((?x679 (* s00 s00)))
 (let ((?x11588 (* (- 36) ?x679)))
 (let ((?x653 (* s r00 r00)))
 (let ((?x10509 (* (- 162) ?x653)))
 (let ((?x610 (* r00 x00)))
 (let ((?x13222 (* (- 162) ?x610)))
 (let ((?x514 (* s00 r00)))
 (let ((?x13220 (* 27 ?x514)))
 (let ((?x439 (* r r00 r00)))
 (let ((?x10515 (* (- 1134) ?x439)))
 (let ((?x389 (* r00 r00)))
 (let ((?x10497 (* (- 162) ?x389)))
 (let ((?x11992 (* (- 162) x00)))
 (let ((?x13217 (* 54 s00)))
 (let ((?x13468 (+ ?x13217 ?x11992 ?x10497 ?x10515 (* 351 (* r s00)) ?x13220 (* 324 (* r r r r s00)) ?x13222 (* 6 (* r00 r00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476)) (* (- 810) (* r s r00)) (* 810 (* r x r00)) ?x10509 ?x11588 (* 162 (* x r00)) ?x13227 (* (- 108) (* s s r00)) ?x12111 (* 36 (* s s00)) (* (- 162) (* s r00)) ?x1456 (* 81 (* r s00 r00)) (* 18 (* s s00 r00)) ?x7894 ?x11655 (* 162 (* r s s00)) (* (- 810) (* r r00 x00)) (* 432 (* r r s00 r00 r00)) ?x10505 (* 6 (* r00 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476)) ?x1631 (* 72 (* r x x x00)) (* 108 (* r r x x x00)) (* 72 (* r r r x x x00)) ?x1661 (* 216 (* r r r s00 r00 r00)) ?x7891 ?x7892 (* (- 18) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) ?x7889 ?x9933 (* (- 189) (* r s x x)) (* 36 (* s s00 r00 r00)) (* (- 126) (* s s x x)) (* 108 (* r s s00 r00 r00)) (* 90 (* s s s x)) (* 189 (* r s s x)) (* (- 24) (* s s s s)) (* (- 63) (* r s s s)) (* 72 (* r r s s00 r00 r00)) (* 63 (* r x x x)) ?x2068 (* 18 (* ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* 54 (* s x x s00 r00 r00)) (* 42 (* s s s s00 r00 r00)) (* (- 90) (* s s x s00 r00 r00)) (* 18 (* r00 x00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* 12 (* s s s s00)) (* (- 36) (* s s x s00)) (* 36 (* s x x s00)) (* 3 (* ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476)) (* (- 12) (* x x x s00)) (* 21 (* r s s s s00)) ?x6747 ?x6749 (* (- 3) (* ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476)) (* 9 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476)) ?x6751 (* (- 9) (* r00 ?x1473 ?x1476 ?x1476 ?x1476)) (* (- 6) (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476)) (* 8 (* r s s s00 s00)) (* (- 4) (* s s s s00 s00)) (* (- 8) (* s x s00 s00)) (* (- 24) (* r s x s00 s00)) (* 12 (* s s x s00 s00)) (* 4 (* x x s00 s00)) (* 12 (* r x x s00 s00)) (* (- 12) (* s x x s00 s00)) (* 270 (* r s00 r00 r00)) (* 12 (* r r s s s00 s00)) (* 4 (* r r r s s s00 s00)) (* (- 54) (* r r s s s)) (* 162 (* r r s s x)) (* (- 162) (* r r s x x)) (* (- 24) (* r r s x s00 s00)) (* 54 (* r r x x x)) (* (- 8) (* r r r s x s00 s00)) (* 2 (* s00 ?x1473 ?x1476 ?x1476 ?x1476)) (* 18 (* x x x r00 x00)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* 12 (* r r x x s00 s00)) (* 4 (* r r r x x s00 s00)) (* (- 2) (* s00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476)) (* (- 21) (* s s s s r00)) (* 81 (* s s s x r00)) (* (- 117) (* s s x x r00)) (* 75 (* s x x x r00)) ?x3642 (* (- 36) (* s x x00)) (* 9 (* s00 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) ?x3987 ?x3989 (* (- 36) (* r r s s s00)) (* (- 12) (* r s s s00)) (* 72 (* r r s s s s00 r00 r00)) (* 6 (* s s x x s00 r00 r00)) (* 4 (* x x x s00 s00)) (* (- 18) (* r00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* (- 216) (* r s s x s00 r00 r00)) (* (- 54) (* s x x r00 x00)) (* 108 (* r s x x s00 r00 r00)) (* 18 (* r r r x x r00 x00)) (* 54 (* r r x x r00 x00)) (* 54 (* r x x r00 x00)) (* 18 (* x x r00 x00)) (* (- 144) (* r r s s x s00 r00 r00)) (* 54 (* s s x r00 x00)) (* 72 (* r r s x x s00 r00 r00)) (* (- 36) (* r r r s x r00 x00)) (* (- 108) (* r r s x r00 x00)) (* (- 108) (* r s x r00 x00)) (* 6 (* s s s s s00 r00 r00)) (* 6 (* r s s s s s00 r00 r00)) (* (- 36) (* s x r00 x00)) (* (- 12) (* s s s x s00 r00 r00)) (* 36 (* r s s r00 x00)) (* (- 12) (* r s s s x s00 r00 r00)) (* 54 (* r r s s r00 x00)) (* (- 18) (* s s s r00 x00)) (* 6 (* r s s x x s00 r00 r00)) (* 18 (* r r r s s r00 x00)) (* 108 (* r s s s s00 r00 r00)) (* 9 (* s x x s00 r00)) (* (- 3) (* x x x s00 r00)) (* (- 9) (* s s x s00 r00)) (* 3 (* s s s s00 r00)) (* (- 54) (* s x x x00)) (* (- 54) (* r s x x x00)) (* (- 6) (* r00 r00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476)) (* (- 6) (* r s s s s00 r00)) (* (- 324) (* r s s r00)) (* 18 (* r s s x s00 r00)) (* (- 648) (* r r r s r00)) (* (- 1296) (* r r s r00)) (* (- 9) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* (- 18) (* r s x x s00 r00)) (* 6 (* r x x x s00 r00)) (* (- 3) (* ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476)) (* 837 (* r r s00)) (* (- 216) (* r r s s r00)) (* 36 (* r s s s r00)) (* (- 9) (* s s s r00)) (* (- 2) (* s00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476)) (* (- 1296) (* r r r00 x00)) ?x6591 ?x6724 ?x6727 ?x6716 (* 15 (* r r r x x s00 r00)) (* 9 (* r r x x s00 r00)) (* (- 3) (* r x x s00 r00)) (* 18 (* r00 ?x1473 ?x1526 ?x1526 ?x1526 ?x1476 ?x1476)) (* (- 3) (* x x s00 r00)) (* (- 30) (* r r r s x s00 r00)) (* (- 18) (* r r s x s00 r00)) (* 6 (* r s x s00 r00)) (* 6 (* s x s00 r00)) (* 15 (* r r r s s s00 r00)) (* 3 (* r r s s s00 r00)) (* 6 (* r r r r s s s00 r00)) (* (- 6) (* r s s s00 r00)) ?x7127 (* 54 (* s s s00 r00 r00)) (* 258 (* r s s s00 r00 r00)) (* (- 216) (* r r s x x00)) (* 414 (* r r s s s00 r00 r00)) (* 210 (* r r r s s s00 r00 r00)) (* (- 216) (* r r s r00 x00)) (* (- 96) (* s x s00 r00 r00)) (* (- 504) (* r s x s00 r00 r00)) (* (- 828) (* r r s x s00 r00 r00)) (* (- 420) (* r r r s x s00 r00 r00)) (* 48 (* x x s00 r00 r00)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* 252 (* r x x s00 r00 r00)) (* 414 (* r r x x s00 r00 r00)) (* (- 9) (* r00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476)) (* 210 (* r r r x x s00 r00 r00)) ?x9938 (* 9 (* r00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476)) ?x7649 (* 54 (* s s x x00)) (* 54 (* r s s x x00)) (* 108 (* r r r s s00)) (* (- 33) (* r r r s s s00)) (* 12 (* s x s00)) (* 54 (* r s x s00)) (* 90 (* r r s x s00)) (* 66 (* r r r s x s00)) (* (- 6) (* x x s00)) (* (- 27) (* r x x s00)) (* (- 45) (* r r x x s00)) (* (- 33) (* r r r x x s00)) ?x8644 (* (- 6) (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* 18 (* ?x1473 ?x1473 ?x1526 ?x1526 ?x1526 ?x1476 ?x1476)) ?x8705 ?x8801 (* 3 (* ?x1473 ?x1476 ?x1476 ?x1476)) (* (- 324) (* r s r00 x00)) ?x9138 ?x11474 (* (- 54) (* r x x x r00)) (* (- 9) (* x x x r00)) ?x9555 ?x11478 (* 162 (* r s x x r00)) (* (- 144) (* r r r s x x00)) (* 27 (* s x x r00)) (* 2 (* ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476 ?x1476)) (* (- 108) (* s r00 x00)) (* 4 (* s00 s00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) ?x9559 ?x11482 (* (- 2) (* ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476 ?x1476)) (* (- 144) (* r s s x r00)) (* 2 (* ?x1473 ?x1476 ?x1476 ?x1476 ?x1476)) ?x11485 ?x9388 (* (- 2) (* ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* (- 9) (* s s x r00)) (* (- 36) (* r r r r s x x00)) (* (- 144) (* r s x x00)) ?x9907 ?x9910 (* (- 27) (* r s s s s)) (* 99 (* r s s s x)) (* (- 135) (* r s s x x)) (* (- 3) (* s00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* 18 (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* (- 2) (* ?x1526 ?x1526 ?x1526 ?x1476 ?x1476)) (* (- 42) (* r s s s r00 r00)) (* (- 24) (* s s s r00 r00)) ?x10503 ?x10504 (* 18 (* r r r r s s x00)) ?x10506 ?x10507 ?x10508 ?x10364 ?x10511 ?x10513 (* 72 (* r r r s s x00)) (* (- 4) (* s00 s00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* 18 (* r s s00 r00)) (* (- 54) (* r r s00 r00)) (* (- 324) (* r r r s00 r00)) (* 1296 (* r r x r00)) (* (- 72) (* r r s s00 r00)) (* 108 (* s x r00)) (* (- 12) (* r r r r s x s00 r00)) (* 324 (* r s x r00)) ?x10930 ?x10866 (* 648 (* r r r x r00)) (* 216 (* r r s x r00)) (* (- 648) (* r r r r00 x00)) ?x11294 (* (- 9) (* ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476)) ?x11453 ?x11455 ?x11442 ?x11657 (* (- 18) (* r00 x00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) ?x11656 ?x11658 ?x11622 ?x11659 (* 9 (* r00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476)) (* 6 (* r r r r x x s00 r00)) (* 234 (* r r s s00)) (* 864 (* r r r s00)) (* (- 9) (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* 9 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476)) (* (- 18) (* s s s x00)) (* 36 (* r s s x00)) (* 90 (* r r s s x00)) (* (- 18) (* r s s s x00)) ?x12113 ?x12114 ?x12115 ?x12117 ?x12048 ?x12118 (* 9 (* r00 s00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* 54 (* s s x r00 r00)) (* (- 18) (* x00 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* (- 6) (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476)) (* (- 54) (* s x x r00 r00)) (* 2 (* s00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476)) (* 18 (* x x x r00 r00)) (* 108 (* r s s x r00 r00)) (* (- 108) (* r s x x r00 r00)) (* 36 (* r x x x r00 r00)) (* (- 6) (* s s s s r00 r00)) (* 18 (* s s s x r00 r00)) (* (- 18) (* s s x x r00 r00)) (* 6 (* s x x x r00 r00)) (* 6 (* r00 r00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476)) ?x13466 (* 6 (* r00 ?x1473 ?x1473 ?x1476 ?x1476 ?x1476)))))
 (let ((?x1434 (* x00 x00)))
 (let ((?x1464 (* (- 108) ?x1434)))
 (let ((?x1272 (* s00 s00 s00)))
 (let ((?x1463 (* (- 16) ?x1272)))
 (let ((?x1144 (* s00 r00 r00 r00)))
 (let ((?x1459 (* (- 216) ?x1144)))
 (let ((?x970 (* r00 r00 r00 x00)))
 (let ((?x971 (* 432 ?x970)))
 (let ((?x893 (* s00 x00)))
 (let ((?x1217 (* 108 ?x893)))
 (let ((?x819 (* s00 s00 r00 r00)))
 (let ((?x820 (* 36 ?x819)))
 (let ((?x756 (* s00 s00 r00)))
 (let ((?x1100 (* 108 ?x756)))
 (let ((?x1088 (* 36 ?x735)))
 (let ((?x1453 (* (- 51) ?x679)))
 (let ((?x952 (* (- 36) ?x653)))
 (let ((?x1450 (* (- 108) ?x610)))
 (let ((?x601 (* s00 r00 x00)))
 (let ((?x1449 (* (- 216) ?x601)))
 (let ((?x608 (* 54 ?x514)))
 (let ((?x1075 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1465 (+ ?x143 ?x1075 ?x608 ?x1449 ?x1450 (* (- 15) (* s s)) ?x952 ?x1453 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1088 ?x1100 (* 66 (* s s00)) (* (- 54) (* s r00)) ?x1456 ?x820 (* (- 108) (* s s00 r00)) (* 4 ?x891) ?x1217 (* 108 (* s x)) (* (- 108) (* x x)) ?x971 (* 12 (* s s s00)) ?x1459 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) ?x1268) ?x1463 (* 216 (* x x00)) ?x1464)))
 (let (($x1466 (= ?x1465 0)))
 (let ((?x965 (* r00 r00 x00)))
 (let ((?x978 (* (- 36) ?x965)))
 (let ((?x894 (* 6 ?x893)))
 (let ((?x784 (* (- 2) ?x756)))
 (let ((?x1004 (* (- 15) ?x679)))
 (let ((?x633 (* s s)))
 (let ((?x657 (* 3 ?x633)))
 (let ((?x639 (* (- 54) ?x610)))
 (let ((?x652 (* 24 ?x514)))
 (let ((?x1167 (+ ?x143 ?x1075 (* (- 24) (* r s)) (* 24 (* r s00)) ?x652 ?x639 ?x657 (* 54 (* r x)) (* 36 (* r x r00)) ?x952 ?x1004 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1088 (* 4 (* s s r00)) (* (- 54) ?x747) ?x784 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x812) (* (- 2) (* s s00 r00)) ?x894 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) ?x913) ?x978 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1172 (= ?x1167 0)))
 (let ((?x736 (* 6 ?x735)))
 (let ((?x692 (* (- 4) ?x679)))
 (let ((?x634 (* 2 ?x633)))
 (let ((?x624 (* (- 18) ?x610)))
 (let ((?x629 (* 9 ?x514)))
 (let ((?x466 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x833 (+ ?x47 ?x466 (* (- 9) (* r s)) (* 9 (* r s00)) ?x629 ?x624 ?x634 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x653) ?x692 (* 18 (* x r00)) ?x736 (* (- 18) ?x747) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x840 (= ?x833 0)))
 (let ((?x557 (* r00 r00 r00)))
 (let ((?x558 (* 12 ?x557)))
 (let ((?x592 (* (- 6) ?x514)))
 (let ((?x589 (* (- 6) x00)))
 (let ((?x588 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x587 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x593 (+ ?x43 ?x587 ?x56 ?x44 ?x588 ?x589 (* 2 (* r s)) (* (- 12) ?x439) (* 4 (* r s00)) ?x592 ?x558)))
 (let (($x594 (= ?x593 0)))
 (let (($x422 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x389)) 0)))
 (and $x422 $x594 $x840 $x1172 $x1466 (not (= ?x13468 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x3798 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x9139 (+ 3 s ?x214)))
 (let ((?x368 (* (- 1) s)))
 (let ((?x581 (+ x ?x368)))
 (let ((?x1473 (+ 1 r)))
 (let ((?x4905 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)))
 (let ((?x6057 (+ (* 18 (* r00 x00 ?x1473 ?x9139 ?x9139)) (* (- 18) (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 18 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 3) (* s00 ?x581 ?x581 ?x581)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 3 (* ?x581 ?x581 ?x581 ?x9139)) (* 2 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 6 (* r00 r00 s00 ?x581 ?x581 ?x581)) (* 9 (* s00 ?x1473 ?x581 ?x581 ?x581)) (* 4 (* s00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 18 (* r00 ?x581 ?x581 ?x581 ?x581)) (* (- 2) (* ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139 ?x9139)) (* (- 2) (* ?x1473 ?x9139 ?x9139 ?x9139 ?x9139)) (* (- 4) (* s00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 3) (* ?x1473 ?x9139 ?x9139 ?x9139)) (* 2 (* ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139 ?x9139)) (* 2 (* ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 r00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 4) (* s00 s00 ?x581 ?x581 ?x581)) (* 18 (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 18) (* r00 x00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 18) (* x00 ?x1473 ?x581 ?x581 ?x581)) (* 6 (* r00 r00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 s00 ?x1473 ?x581 ?x581 ?x581)) (* 3 (* ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 9) (* s00 ?x1473 ?x1473 ?x9139 ?x9139)) (* (- 18) (* r00 ?x1473 ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 9) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 9 (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 18 (* r00 x00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 9 (* r00 s00 ?x581 ?x581 ?x581)) (* (- 6) (* r00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 3) (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 3) (* ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 6 (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 ?x1473 ?x9139 ?x9139 ?x9139)) (* 3 (* ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 2 (* s00 ?x581 ?x581 ?x581 ?x9139)) (* 9 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 6 (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 18 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x581)) (* (- 18) (* ?x1473 ?x1473 ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* 6 (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 9 (* ?x1473 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 9) (* ?x1473 ?x581 ?x581 ?x581 ?x9139)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 2 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 2) (* s00 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 18) (* r00 x00 ?x581 ?x581 ?x581)) (* (- 6) (* r00 r00 s00 ?x1473 ?x9139 ?x9139)) (* (- 4) (* s00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 18) (* r00 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 9) (* r00 s00 ?x1473 ?x9139 ?x9139)) (* 3 (* s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 18) (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 2 (* ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* 9 (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 9) (* r00 ?x581 ?x581 ?x581 ?x9139)) (* 9 (* ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 18 (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x581)) (* 18 (* ?x1473 ?x581 ?x581 ?x581 ?x581)) (* (- 6) (* r00 r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 6 (* r00 r00 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 18) (* r00 x00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 9) (* s00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 18) (* ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x9139 ?x9139)) (* 6 (* r00 ?x1473 ?x581 ?x581 ?x581 ?x9139)) (* 4 (* s00 s00 ?x1473 ?x9139 ?x9139)) (* 3 (* s00 ?x1473 ?x9139 ?x9139)) (* 18 (* x00 ?x1473 ?x1473 ?x9139 ?x9139)) (* 18 (* x00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 6 (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 2) (* s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 6) (* r00 r00 ?x581 ?x581 ?x581 ?x9139)) (* (- 6) (* r00 r00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 6) (* r00 ?x1473 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 3) ?x4905))))
 (let ((?x1434 (* x00 x00)))
 (let ((?x10006 (* 108 ?x1434)))
 (let ((?x10060 (* (- 9) s)))
 (let ((?x630 (* r00 r00 s00)))
 (let ((?x10082 (* (- 36) ?x630)))
 (let ((?x137 (* 9 s00)))
 (let ((?x679 (* s00 s00)))
 (let ((?x7491 (* 51 ?x679)))
 (let ((?x3018 (* r00 r00 s)))
 (let ((?x9598 (* 36 ?x3018)))
 (let ((?x1272 (* s00 s00 s00)))
 (let ((?x7465 (* 16 ?x1272)))
 (let ((?x893 (* s00 x00)))
 (let ((?x7428 (* (- 108) ?x893)))
 (let ((?x970 (* r00 r00 r00 x00)))
 (let ((?x9646 (* (- 432) ?x970)))
 (let ((?x610 (* r00 x00)))
 (let ((?x3086 (* 108 ?x610)))
 (let ((?x10239 (+ (* 216 (* r00 s00 x00)) ?x3086 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x9646 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x7428 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7465 (* (- 108) (* x s)) ?x9598 ?x7491 (* (- 108) (* r00 x)) ?x137 ?x10082 ?x10060 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x10006)))
 (let (($x10292 (= ?x10239 0)))
 (let ((?x7343 (* 15 ?x679)))
 (let ((?x965 (* r00 r00 x00)))
 (let ((?x11285 (* 36 ?x965)))
 (let ((?x9223 (* (- 6) ?x893)))
 (let ((?x4242 (* 54 ?x610)))
 (let ((?x1928 (+ (* 24 (* s r)) ?x4242 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x9223 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x9598 ?x11285 ?x7343 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x10082 (* 54 (* x00 r)) ?x10060 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x587 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x6641 (* 4 ?x679)))
 (let ((?x2522 (* 18 ?x610)))
 (let ((?x9324 (+ (* 9 (* s r)) ?x2522 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3018) ?x6641 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x630) (* 18 (* x00 r)) ?x587 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x557 (* r00 r00 r00)))
 (let ((?x558 (* 12 ?x557)))
 (let ((?x589 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x588 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x6764 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x587 ?x588 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x589 ?x558)))
 (let (($x6049 (= (+ s00 ?x368 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x6049 (= ?x6764 0) (= ?x9324 0) (= ?x1928 0) $x10292 (not (= ?x6057 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x13477 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1476 (+ 3 ?x214 s)))
 (let ((?x1473 (+ 1 r)))
 (let ((?x13466 (* 3 (* s00 ?x1473 ?x1473 ?x1473 (+ (* (- 1) s) x) ?x1476 ?x1476))))
 (let ((?x368 (* (- 1) s)))
 (let ((?x1526 (+ ?x368 x)))
 (let ((?x12118 (* (- 216) (* r r r s x00))))
 (let ((?x12048 (* (- 648) (* r r r r x00))))
 (let ((?x12117 (* (- 540) (* r r s x00))))
 (let ((?x12115 (* (- 432) (* r s x00))))
 (let ((?x12114 (* (- 1944) (* r r r x00))))
 (let ((?x12113 (* (- 2106) (* r r x00))))
 (let ((?x11659 (* (- 48) (* r r s s00 s00))))
 (let ((?x11622 (* (- 144) (* r r r s00 s00))))
 (let ((?x11658 (* (- 72) (* r s s00 s00))))
 (let ((?x11656 (* (- 288) (* r r s00 s00))))
 (let ((?x11657 (* (- 24) (* s s00 s00))))
 (let ((?x11442 (* (- 6) (* r s x x x r00))))
 (let ((?x11455 (* 18 (* r s s x x r00))))
 (let ((?x11453 (* (- 18) (* r s s s x r00))))
 (let ((?x11294 (* 6 (* r s s s s r00))))
 (let ((?x10866 (* (- 216) (* r r r r s00 r00))))
 (let ((?x10930 (* (- 72) (* r r r s s00 r00))))
 (let ((?x10513 (* (- 2916) (* r r r00 r00))))
 (let ((?x10511 (* (- 3240) (* r r r r00 r00))))
 (let ((?x10364 (* (- 1296) (* r r r r r00 r00))))
 (let ((?x10508 (* (- 810) (* r s r00 r00))))
 (let ((?x10507 (* (- 1296) (* r r s r00 r00))))
 (let ((?x10506 (* (- 648) (* r r r s r00 r00))))
 (let ((?x10504 (* (- 162) (* r s s r00 r00))))
 (let ((?x10503 (* (- 108) (* r r s s r00 r00))))
 (let ((?x9910 (* (- 18) (* r x x x x))))
 (let ((?x9907 (* (- 18) (* x x x x))))
 (let ((?x9388 (* 18 (* r r r s s s r00))))
 (let ((?x11485 (* 90 (* r r s s s r00))))
 (let ((?x11482 (* (- 270) (* r r s s x r00))))
 (let ((?x9559 (* (- 54) (* r r r s s x r00))))
 (let ((?x11478 (* 270 (* r r s x x r00))))
 (let ((?x9555 (* 54 (* r r r s x x r00))))
 (let ((?x11474 (* (- 90) (* r r x x x r00))))
 (let ((?x9138 (* (- 18) (* r r r x x x r00))))
 (let ((?x8801 (* 18 (* r r r r s x s00))))
 (let ((?x8705 (* (- 9) (* r r r r x x s00))))
 (let ((?x8644 (* (- 9) (* r r r r s s s00))))
 (let ((?x7649 (* (- 9) (* ?x1473 ?x1473 ?x1476 ?x1476 ?x1476))))
 (let ((?x9938 (* 81 (* r s x x x))))
 (let ((?x7127 (* (- 18) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1526))))
 (let ((?x6716 (* (- 2) (* s x x x s00))))
 (let ((?x6727 (* 6 (* s s x x s00))))
 (let ((?x6724 (* (- 6) (* s s s x s00))))
 (let ((?x6591 (* 2 (* s s s s s00))))
 (let ((?x3989 (* 18 (* x x x x00))))
 (let ((?x3987 (* 18 (* r x x x x00))))
 (let ((?x3642 (* (- 18) (* x x x x r00))))
 (let ((?x6751 (* (- 21) (* r x x x s00))))
 (let ((?x6749 (* 63 (* r s x x s00))))
 (let ((?x6747 (* (- 63) (* r s s x s00))))
 (let ((?x2068 (* (- 6) (* x x x s00 r00 r00))))
 (let ((?x9933 (* 78 (* s x x x))))
 (let ((?x7889 (* 18 (* x x x))))
 (let ((?x7892 (* (- 54) (* s x x))))
 (let ((?x7891 (* 54 (* s s x))))
 (let ((?x1661 (* 18 (* r r r r x x x00))))
 (let ((?x1631 (* 18 (* x x x00))))
 (let ((?x1268 (* s s r00 r00)))
 (let ((?x10505 (* (- 54) ?x1268)))
 (let ((?x913 (* r s00 s00)))
 (let ((?x11655 (* (- 180) ?x913)))
 (let ((?x891 (* s s s)))
 (let ((?x7894 (* (- 18) ?x891)))
 (let ((?x812 (* s x00)))
 (let ((?x1456 (* (- 108) ?x812)))
 (let ((?x747 (* r x00)))
 (let ((?x12111 (* (- 972) ?x747)))
 (let ((?x735 (* s00 r00 r00)))
 (let ((?x13227 (* 54 ?x735)))
 (let ((?x679 (* s00 s00)))
 (let ((?x11588 (* (- 36) ?x679)))
 (let ((?x653 (* s r00 r00)))
 (let ((?x10509 (* (- 162) ?x653)))
 (let ((?x610 (* r00 x00)))
 (let ((?x13222 (* (- 162) ?x610)))
 (let ((?x514 (* s00 r00)))
 (let ((?x13220 (* 27 ?x514)))
 (let ((?x439 (* r r00 r00)))
 (let ((?x10515 (* (- 1134) ?x439)))
 (let ((?x389 (* r00 r00)))
 (let ((?x10497 (* (- 162) ?x389)))
 (let ((?x11992 (* (- 162) x00)))
 (let ((?x13217 (* 54 s00)))
 (let ((?x13468 (+ ?x13217 ?x11992 ?x10497 ?x10515 (* 351 (* r s00)) ?x13220 (* 324 (* r r r r s00)) ?x13222 (* 6 (* r00 r00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476)) (* (- 810) (* r s r00)) (* 810 (* r x r00)) ?x10509 ?x11588 (* 162 (* x r00)) ?x13227 (* (- 108) (* s s r00)) ?x12111 (* 36 (* s s00)) (* (- 162) (* s r00)) ?x1456 (* 81 (* r s00 r00)) (* 18 (* s s00 r00)) ?x7894 ?x11655 (* 162 (* r s s00)) (* (- 810) (* r r00 x00)) (* 432 (* r r s00 r00 r00)) ?x10505 (* 6 (* r00 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476)) ?x1631 (* 72 (* r x x x00)) (* 108 (* r r x x x00)) (* 72 (* r r r x x x00)) ?x1661 (* 216 (* r r r s00 r00 r00)) ?x7891 ?x7892 (* (- 18) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) ?x7889 ?x9933 (* (- 189) (* r s x x)) (* 36 (* s s00 r00 r00)) (* (- 126) (* s s x x)) (* 108 (* r s s00 r00 r00)) (* 90 (* s s s x)) (* 189 (* r s s x)) (* (- 24) (* s s s s)) (* (- 63) (* r s s s)) (* 72 (* r r s s00 r00 r00)) (* 63 (* r x x x)) ?x2068 (* 18 (* ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* 54 (* s x x s00 r00 r00)) (* 42 (* s s s s00 r00 r00)) (* (- 90) (* s s x s00 r00 r00)) (* 18 (* r00 x00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* 12 (* s s s s00)) (* (- 36) (* s s x s00)) (* 36 (* s x x s00)) (* 3 (* ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476)) (* (- 12) (* x x x s00)) (* 21 (* r s s s s00)) ?x6747 ?x6749 (* (- 3) (* ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476)) (* 9 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476)) ?x6751 (* (- 9) (* r00 ?x1473 ?x1476 ?x1476 ?x1476)) (* (- 6) (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476)) (* 8 (* r s s s00 s00)) (* (- 4) (* s s s s00 s00)) (* (- 8) (* s x s00 s00)) (* (- 24) (* r s x s00 s00)) (* 12 (* s s x s00 s00)) (* 4 (* x x s00 s00)) (* 12 (* r x x s00 s00)) (* (- 12) (* s x x s00 s00)) (* 270 (* r s00 r00 r00)) (* 12 (* r r s s s00 s00)) (* 4 (* r r r s s s00 s00)) (* (- 54) (* r r s s s)) (* 162 (* r r s s x)) (* (- 162) (* r r s x x)) (* (- 24) (* r r s x s00 s00)) (* 54 (* r r x x x)) (* (- 8) (* r r r s x s00 s00)) (* 2 (* s00 ?x1473 ?x1476 ?x1476 ?x1476)) (* 18 (* x x x r00 x00)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* 12 (* r r x x s00 s00)) (* 4 (* r r r x x s00 s00)) (* (- 2) (* s00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476)) (* (- 21) (* s s s s r00)) (* 81 (* s s s x r00)) (* (- 117) (* s s x x r00)) (* 75 (* s x x x r00)) ?x3642 (* (- 36) (* s x x00)) (* 9 (* s00 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) ?x3987 ?x3989 (* (- 36) (* r r s s s00)) (* (- 12) (* r s s s00)) (* 72 (* r r s s s s00 r00 r00)) (* 6 (* s s x x s00 r00 r00)) (* 4 (* x x x s00 s00)) (* (- 18) (* r00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* (- 216) (* r s s x s00 r00 r00)) (* (- 54) (* s x x r00 x00)) (* 108 (* r s x x s00 r00 r00)) (* 18 (* r r r x x r00 x00)) (* 54 (* r r x x r00 x00)) (* 54 (* r x x r00 x00)) (* 18 (* x x r00 x00)) (* (- 144) (* r r s s x s00 r00 r00)) (* 54 (* s s x r00 x00)) (* 72 (* r r s x x s00 r00 r00)) (* (- 36) (* r r r s x r00 x00)) (* (- 108) (* r r s x r00 x00)) (* (- 108) (* r s x r00 x00)) (* 6 (* s s s s s00 r00 r00)) (* 6 (* r s s s s s00 r00 r00)) (* (- 36) (* s x r00 x00)) (* (- 12) (* s s s x s00 r00 r00)) (* 36 (* r s s r00 x00)) (* (- 12) (* r s s s x s00 r00 r00)) (* 54 (* r r s s r00 x00)) (* (- 18) (* s s s r00 x00)) (* 6 (* r s s x x s00 r00 r00)) (* 18 (* r r r s s r00 x00)) (* 108 (* r s s s s00 r00 r00)) (* 9 (* s x x s00 r00)) (* (- 3) (* x x x s00 r00)) (* (- 9) (* s s x s00 r00)) (* 3 (* s s s s00 r00)) (* (- 54) (* s x x x00)) (* (- 54) (* r s x x x00)) (* (- 6) (* r00 r00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476)) (* (- 6) (* r s s s s00 r00)) (* (- 324) (* r s s r00)) (* 18 (* r s s x s00 r00)) (* (- 648) (* r r r s r00)) (* (- 1296) (* r r s r00)) (* (- 9) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* (- 18) (* r s x x s00 r00)) (* 6 (* r x x x s00 r00)) (* (- 3) (* ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476)) (* 837 (* r r s00)) (* (- 216) (* r r s s r00)) (* 36 (* r s s s r00)) (* (- 9) (* s s s r00)) (* (- 2) (* s00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476)) (* (- 1296) (* r r r00 x00)) ?x6591 ?x6724 ?x6727 ?x6716 (* 15 (* r r r x x s00 r00)) (* 9 (* r r x x s00 r00)) (* (- 3) (* r x x s00 r00)) (* 18 (* r00 ?x1473 ?x1526 ?x1526 ?x1526 ?x1476 ?x1476)) (* (- 3) (* x x s00 r00)) (* (- 30) (* r r r s x s00 r00)) (* (- 18) (* r r s x s00 r00)) (* 6 (* r s x s00 r00)) (* 6 (* s x s00 r00)) (* 15 (* r r r s s s00 r00)) (* 3 (* r r s s s00 r00)) (* 6 (* r r r r s s s00 r00)) (* (- 6) (* r s s s00 r00)) ?x7127 (* 54 (* s s s00 r00 r00)) (* 258 (* r s s s00 r00 r00)) (* (- 216) (* r r s x x00)) (* 414 (* r r s s s00 r00 r00)) (* 210 (* r r r s s s00 r00 r00)) (* (- 216) (* r r s r00 x00)) (* (- 96) (* s x s00 r00 r00)) (* (- 504) (* r s x s00 r00 r00)) (* (- 828) (* r r s x s00 r00 r00)) (* (- 420) (* r r r s x s00 r00 r00)) (* 48 (* x x s00 r00 r00)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* 252 (* r x x s00 r00 r00)) (* 414 (* r r x x s00 r00 r00)) (* (- 9) (* r00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476)) (* 210 (* r r r x x s00 r00 r00)) ?x9938 (* 9 (* r00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476)) ?x7649 (* 54 (* s s x x00)) (* 54 (* r s s x x00)) (* 108 (* r r r s s00)) (* (- 33) (* r r r s s s00)) (* 12 (* s x s00)) (* 54 (* r s x s00)) (* 90 (* r r s x s00)) (* 66 (* r r r s x s00)) (* (- 6) (* x x s00)) (* (- 27) (* r x x s00)) (* (- 45) (* r r x x s00)) (* (- 33) (* r r r x x s00)) ?x8644 (* (- 6) (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* 18 (* ?x1473 ?x1473 ?x1526 ?x1526 ?x1526 ?x1476 ?x1476)) ?x8705 ?x8801 (* 3 (* ?x1473 ?x1476 ?x1476 ?x1476)) (* (- 324) (* r s r00 x00)) ?x9138 ?x11474 (* (- 54) (* r x x x r00)) (* (- 9) (* x x x r00)) ?x9555 ?x11478 (* 162 (* r s x x r00)) (* (- 144) (* r r r s x x00)) (* 27 (* s x x r00)) (* 2 (* ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476 ?x1476)) (* (- 108) (* s r00 x00)) (* 4 (* s00 s00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) ?x9559 ?x11482 (* (- 2) (* ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476 ?x1476)) (* (- 144) (* r s s x r00)) (* 2 (* ?x1473 ?x1476 ?x1476 ?x1476 ?x1476)) ?x11485 ?x9388 (* (- 2) (* ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* (- 9) (* s s x r00)) (* (- 36) (* r r r r s x x00)) (* (- 144) (* r s x x00)) ?x9907 ?x9910 (* (- 27) (* r s s s s)) (* 99 (* r s s s x)) (* (- 135) (* r s s x x)) (* (- 3) (* s00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* 18 (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* (- 2) (* ?x1526 ?x1526 ?x1526 ?x1476 ?x1476)) (* (- 42) (* r s s s r00 r00)) (* (- 24) (* s s s r00 r00)) ?x10503 ?x10504 (* 18 (* r r r r s s x00)) ?x10506 ?x10507 ?x10508 ?x10364 ?x10511 ?x10513 (* 72 (* r r r s s x00)) (* (- 4) (* s00 s00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* 18 (* r s s00 r00)) (* (- 54) (* r r s00 r00)) (* (- 324) (* r r r s00 r00)) (* 1296 (* r r x r00)) (* (- 72) (* r r s s00 r00)) (* 108 (* s x r00)) (* (- 12) (* r r r r s x s00 r00)) (* 324 (* r s x r00)) ?x10930 ?x10866 (* 648 (* r r r x r00)) (* 216 (* r r s x r00)) (* (- 648) (* r r r r00 x00)) ?x11294 (* (- 9) (* ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476)) ?x11453 ?x11455 ?x11442 ?x11657 (* (- 18) (* r00 x00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) ?x11656 ?x11658 ?x11622 ?x11659 (* 9 (* r00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476)) (* 6 (* r r r r x x s00 r00)) (* 234 (* r r s s00)) (* 864 (* r r r s00)) (* (- 9) (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476)) (* 9 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476)) (* (- 18) (* s s s x00)) (* 36 (* r s s x00)) (* 90 (* r r s s x00)) (* (- 18) (* r s s s x00)) ?x12113 ?x12114 ?x12115 ?x12117 ?x12048 ?x12118 (* 9 (* r00 s00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* 54 (* s s x r00 r00)) (* (- 18) (* x00 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476)) (* (- 6) (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x1526 ?x1526 ?x1476)) (* (- 54) (* s x x r00 r00)) (* 2 (* s00 ?x1473 ?x1526 ?x1526 ?x1476 ?x1476 ?x1476)) (* 18 (* x x x r00 r00)) (* 108 (* r s s x r00 r00)) (* (- 108) (* r s x x r00 r00)) (* 36 (* r x x x r00 r00)) (* (- 6) (* s s s s r00 r00)) (* 18 (* s s s x r00 r00)) (* (- 18) (* s s x x r00 r00)) (* 6 (* s x x x r00 r00)) (* 6 (* r00 r00 ?x1473 ?x1473 ?x1473 ?x1526 ?x1476 ?x1476 ?x1476)) ?x13466 (* 6 (* r00 ?x1473 ?x1473 ?x1476 ?x1476 ?x1476)))))
 (let ((?x1434 (* x00 x00)))
 (let ((?x1464 (* (- 108) ?x1434)))
 (let ((?x1272 (* s00 s00 s00)))
 (let ((?x1463 (* (- 16) ?x1272)))
 (let ((?x1144 (* s00 r00 r00 r00)))
 (let ((?x1459 (* (- 216) ?x1144)))
 (let ((?x970 (* r00 r00 r00 x00)))
 (let ((?x971 (* 432 ?x970)))
 (let ((?x893 (* s00 x00)))
 (let ((?x1217 (* 108 ?x893)))
 (let ((?x819 (* s00 s00 r00 r00)))
 (let ((?x820 (* 36 ?x819)))
 (let ((?x756 (* s00 s00 r00)))
 (let ((?x1100 (* 108 ?x756)))
 (let ((?x1088 (* 36 ?x735)))
 (let ((?x1453 (* (- 51) ?x679)))
 (let ((?x952 (* (- 36) ?x653)))
 (let ((?x1450 (* (- 108) ?x610)))
 (let ((?x601 (* s00 r00 x00)))
 (let ((?x1449 (* (- 216) ?x601)))
 (let ((?x608 (* 54 ?x514)))
 (let ((?x1075 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1465 (+ ?x143 ?x1075 ?x608 ?x1449 ?x1450 (* (- 15) (* s s)) ?x952 ?x1453 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1088 ?x1100 (* 66 (* s s00)) (* (- 54) (* s r00)) ?x1456 ?x820 (* (- 108) (* s s00 r00)) (* 4 ?x891) ?x1217 (* 108 (* s x)) (* (- 108) (* x x)) ?x971 (* 12 (* s s s00)) ?x1459 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) ?x1268) ?x1463 (* 216 (* x x00)) ?x1464)))
 (let (($x1466 (= ?x1465 0)))
 (let ((?x965 (* r00 r00 x00)))
 (let ((?x978 (* (- 36) ?x965)))
 (let ((?x894 (* 6 ?x893)))
 (let ((?x784 (* (- 2) ?x756)))
 (let ((?x1004 (* (- 15) ?x679)))
 (let ((?x633 (* s s)))
 (let ((?x657 (* 3 ?x633)))
 (let ((?x639 (* (- 54) ?x610)))
 (let ((?x652 (* 24 ?x514)))
 (let ((?x1167 (+ ?x143 ?x1075 (* (- 24) (* r s)) (* 24 (* r s00)) ?x652 ?x639 ?x657 (* 54 (* r x)) (* 36 (* r x r00)) ?x952 ?x1004 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1088 (* 4 (* s s r00)) (* (- 54) ?x747) ?x784 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x812) (* (- 2) (* s s00 r00)) ?x894 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) ?x913) ?x978 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1172 (= ?x1167 0)))
 (let ((?x736 (* 6 ?x735)))
 (let ((?x692 (* (- 4) ?x679)))
 (let ((?x634 (* 2 ?x633)))
 (let ((?x624 (* (- 18) ?x610)))
 (let ((?x629 (* 9 ?x514)))
 (let ((?x466 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x833 (+ ?x47 ?x466 (* (- 9) (* r s)) (* 9 (* r s00)) ?x629 ?x624 ?x634 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x653) ?x692 (* 18 (* x r00)) ?x736 (* (- 18) ?x747) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x840 (= ?x833 0)))
 (let ((?x557 (* r00 r00 r00)))
 (let ((?x558 (* 12 ?x557)))
 (let ((?x592 (* (- 6) ?x514)))
 (let ((?x589 (* (- 6) x00)))
 (let ((?x588 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x587 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x593 (+ ?x43 ?x587 ?x56 ?x44 ?x588 ?x589 (* 2 (* r s)) (* (- 12) ?x439) (* 4 (* r s00)) ?x592 ?x558)))
 (let (($x594 (= ?x593 0)))
 (let (($x422 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x389)) 0)))
 (let (($x11699 (and $x422 $x594 $x840 $x1172 $x1466 (not (= ?x13468 0)))))
 (let ((?x9139 (+ 3 s ?x214)))
 (let ((?x581 (+ x ?x368)))
 (let ((?x4905 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)))
 (let ((?x6057 (+ (* 18 (* r00 x00 ?x1473 ?x9139 ?x9139)) (* (- 18) (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 18 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 3) (* s00 ?x581 ?x581 ?x581)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 3 (* ?x581 ?x581 ?x581 ?x9139)) (* 2 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 6 (* r00 r00 s00 ?x581 ?x581 ?x581)) (* 9 (* s00 ?x1473 ?x581 ?x581 ?x581)) (* 4 (* s00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 18 (* r00 ?x581 ?x581 ?x581 ?x581)) (* (- 2) (* ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139 ?x9139)) (* (- 2) (* ?x1473 ?x9139 ?x9139 ?x9139 ?x9139)) (* (- 4) (* s00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 3) (* ?x1473 ?x9139 ?x9139 ?x9139)) (* 2 (* ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139 ?x9139)) (* 2 (* ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 r00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 4) (* s00 s00 ?x581 ?x581 ?x581)) (* 18 (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 18) (* r00 x00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 18) (* x00 ?x1473 ?x581 ?x581 ?x581)) (* 6 (* r00 r00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 s00 ?x1473 ?x581 ?x581 ?x581)) (* 3 (* ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 9) (* s00 ?x1473 ?x1473 ?x9139 ?x9139)) (* (- 18) (* r00 ?x1473 ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 9) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 9 (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 18 (* r00 x00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 9 (* r00 s00 ?x581 ?x581 ?x581)) (* (- 6) (* r00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 3) (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 3) (* ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 6 (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 ?x1473 ?x9139 ?x9139 ?x9139)) (* 3 (* ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 2 (* s00 ?x581 ?x581 ?x581 ?x9139)) (* 9 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 6 (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 18 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x581)) (* (- 18) (* ?x1473 ?x1473 ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* 6 (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 9 (* ?x1473 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 9) (* ?x1473 ?x581 ?x581 ?x581 ?x9139)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 2 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 2) (* s00 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 18) (* r00 x00 ?x581 ?x581 ?x581)) (* (- 6) (* r00 r00 s00 ?x1473 ?x9139 ?x9139)) (* (- 4) (* s00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 18) (* r00 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 9) (* r00 s00 ?x1473 ?x9139 ?x9139)) (* 3 (* s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 18) (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 2 (* ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* 9 (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 9) (* r00 ?x581 ?x581 ?x581 ?x9139)) (* 9 (* ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 18 (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x581)) (* 18 (* ?x1473 ?x581 ?x581 ?x581 ?x581)) (* (- 6) (* r00 r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 6 (* r00 r00 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 18) (* r00 x00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 9) (* s00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 18) (* ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x9139 ?x9139)) (* 6 (* r00 ?x1473 ?x581 ?x581 ?x581 ?x9139)) (* 4 (* s00 s00 ?x1473 ?x9139 ?x9139)) (* 3 (* s00 ?x1473 ?x9139 ?x9139)) (* 18 (* x00 ?x1473 ?x1473 ?x9139 ?x9139)) (* 18 (* x00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 6 (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 2) (* s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 6) (* r00 r00 ?x581 ?x581 ?x581 ?x9139)) (* (- 6) (* r00 r00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 6) (* r00 ?x1473 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 3) ?x4905))))
 (let ((?x10006 (* 108 ?x1434)))
 (let ((?x10060 (* (- 9) s)))
 (let ((?x630 (* r00 r00 s00)))
 (let ((?x10082 (* (- 36) ?x630)))
 (let ((?x137 (* 9 s00)))
 (let ((?x7491 (* 51 ?x679)))
 (let ((?x3018 (* r00 r00 s)))
 (let ((?x9598 (* 36 ?x3018)))
 (let ((?x7465 (* 16 ?x1272)))
 (let ((?x7428 (* (- 108) ?x893)))
 (let ((?x9646 (* (- 432) ?x970)))
 (let ((?x3086 (* 108 ?x610)))
 (let ((?x10239 (+ (* 216 (* r00 s00 x00)) ?x3086 (* (- 54) (* r00 s00)) (* 15 ?x633) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) ?x891) (* 108 (* x x)) ?x9646 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x7428 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7465 (* (- 108) (* x s)) ?x9598 ?x7491 (* (- 108) (* r00 x)) ?x137 ?x10082 ?x10060 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x10006)))
 (let (($x10292 (= ?x10239 0)))
 (let ((?x7343 (* 15 ?x679)))
 (let ((?x11285 (* 36 ?x965)))
 (let ((?x9223 (* (- 6) ?x893)))
 (let ((?x4242 (* 54 ?x610)))
 (let ((?x1928 (+ (* 24 (* s r)) ?x4242 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x633) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x9223 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x9598 ?x11285 ?x7343 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x10082 (* 54 (* x00 r)) ?x10060 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x6641 (* 4 ?x679)))
 (let ((?x2522 (* 18 ?x610)))
 (let ((?x9324 (+ (* 9 (* s r)) ?x2522 (* (- 9) (* r00 s00)) (* (- 2) ?x633) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3018) ?x6641 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x630) (* 18 (* x00 r)) ?x587 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x6764 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x587 ?x588 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x589 ?x558)))
 (let (($x6049 (= (+ s00 ?x368 (* 3 (* r r)) (* (- 3) ?x389)) 0)))
 (let (($x3173 (and $x6049 (= ?x6764 0) (= ?x9324 0) (= ?x1928 0) $x10292 (not (= ?x6057 0)))))
 (rewrite (= $x3173 $x11699)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x4942 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x9139 (+ 3 s ?x214)))
 (let ((?x368 (* (- 1) s)))
 (let ((?x581 (+ x ?x368)))
 (let ((?x1473 (+ 1 r)))
 (let ((?x4905 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)))
 (let ((?x4915 (+ (* (- 18) (* r00 x00 ?x1473 ?x9139 ?x9139)) (* 18 (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 18) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 3 (* s00 ?x581 ?x581 ?x581)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 3) (* ?x581 ?x581 ?x581 ?x9139)) (* (- 2) (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 6) (* r00 r00 s00 ?x581 ?x581 ?x581)) (* (- 9) (* s00 ?x1473 ?x581 ?x581 ?x581)) (* (- 4) (* s00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 18) (* r00 ?x581 ?x581 ?x581 ?x581)) (* 2 (* ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139 ?x9139)) (* 2 (* ?x1473 ?x9139 ?x9139 ?x9139 ?x9139)) (* 4 (* s00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 3 (* ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 2) (* ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139 ?x9139)) (* (- 2) (* ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 6 (* r00 r00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 4 (* s00 s00 ?x581 ?x581 ?x581)) (* (- 18) (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 18 (* r00 x00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 18 (* x00 ?x1473 ?x581 ?x581 ?x581)) (* (- 6) (* r00 r00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 6 (* r00 s00 ?x1473 ?x581 ?x581 ?x581)) (* (- 3) (* ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 9 (* s00 ?x1473 ?x1473 ?x9139 ?x9139)) (* 18 (* r00 ?x1473 ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 9 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 9) (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 18) (* r00 x00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 9) (* r00 s00 ?x581 ?x581 ?x581)) (* 6 (* r00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 3 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 3 (* ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 6) (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 3) (* ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 2) (* s00 ?x581 ?x581 ?x581 ?x9139)) (* (- 9) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 6) (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 18) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x581)) (* 18 (* ?x1473 ?x1473 ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 9) (* ?x1473 ?x1473 ?x9139 ?x9139 ?x9139)) (* 9 (* ?x1473 ?x581 ?x581 ?x581 ?x9139)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 2) (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 2 (* s00 ?x1473 ?x9139 ?x9139 ?x9139)) (* 18 (* r00 x00 ?x581 ?x581 ?x581)) (* 6 (* r00 r00 s00 ?x1473 ?x9139 ?x9139)) (* 4 (* s00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 18 (* r00 ?x1473 ?x581 ?x9139 ?x9139)) (* 9 (* r00 s00 ?x1473 ?x9139 ?x9139)) (* (- 3) (* s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 18 (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 2) (* ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* (- 9) (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 9 (* r00 ?x581 ?x581 ?x581 ?x9139)) (* (- 9) (* ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 18) (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x581)) (* (- 18) (* ?x1473 ?x581 ?x581 ?x581 ?x581)) (* 6 (* r00 r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 6) (* r00 r00 ?x1473 ?x9139 ?x9139 ?x9139)) (* 18 (* r00 x00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 9 (* s00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 18 (* ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x9139 ?x9139)) (* (- 6) (* r00 ?x1473 ?x581 ?x581 ?x581 ?x9139)) (* (- 4) (* s00 s00 ?x1473 ?x9139 ?x9139)) (* (- 3) (* s00 ?x1473 ?x9139 ?x9139)) (* (- 18) (* x00 ?x1473 ?x1473 ?x9139 ?x9139)) (* (- 18) (* x00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 2 (* s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 6 (* r00 r00 ?x581 ?x581 ?x581 ?x9139)) (* 6 (* r00 r00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 6 (* r00 ?x1473 ?x1473 ?x9139 ?x9139 ?x9139)) (* 3 ?x4905))))
 (let ((?x1434 (* x00 x00)))
 (let ((?x10006 (* 108 ?x1434)))
 (let ((?x10060 (* (- 9) s)))
 (let ((?x630 (* r00 r00 s00)))
 (let ((?x10082 (* (- 36) ?x630)))
 (let ((?x137 (* 9 s00)))
 (let ((?x679 (* s00 s00)))
 (let ((?x7491 (* 51 ?x679)))
 (let ((?x3018 (* r00 r00 s)))
 (let ((?x9598 (* 36 ?x3018)))
 (let ((?x1272 (* s00 s00 s00)))
 (let ((?x7465 (* 16 ?x1272)))
 (let ((?x893 (* s00 x00)))
 (let ((?x7428 (* (- 108) ?x893)))
 (let ((?x970 (* r00 r00 r00 x00)))
 (let ((?x9646 (* (- 432) ?x970)))
 (let ((?x610 (* r00 x00)))
 (let ((?x3086 (* 108 ?x610)))
 (let ((?x10239 (+ (* 216 (* r00 s00 x00)) ?x3086 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x9646 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x7428 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7465 (* (- 108) (* x s)) ?x9598 ?x7491 (* (- 108) (* r00 x)) ?x137 ?x10082 ?x10060 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x10006)))
 (let (($x10292 (= ?x10239 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1075 (* (- 9) s00)))
 (let ((?x1004 (* (- 15) ?x679)))
 (let ((?x965 (* r00 r00 x00)))
 (let ((?x978 (* (- 36) ?x965)))
 (let ((?x894 (* 6 ?x893)))
 (let ((?x633 (* s s)))
 (let ((?x657 (* 3 ?x633)))
 (let ((?x639 (* (- 54) ?x610)))
 (let ((?x7393 (+ (* (- 24) (* s r)) ?x639 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x657 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x894 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3018) ?x978 ?x1004 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1075 (* 36 ?x630) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x466 (* (- 3) s00)))
 (let ((?x692 (* (- 4) ?x679)))
 (let ((?x634 (* 2 ?x633)))
 (let ((?x624 (* (- 18) ?x610)))
 (let ((?x2862 (+ (* (- 9) (* s r)) ?x624 (* 9 (* r00 s00)) ?x634 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3018) ?x692 (* 18 (* r00 x)) ?x466 (* 6 ?x630) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x536 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x466 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x6049 (= (+ s00 ?x368 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x6049 (= ?x536 0) (= ?x2862 0) (= ?x7393 0) $x10292 (not (= ?x4915 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3810 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x9139 (+ 3 s ?x214)))
 (let ((?x368 (* (- 1) s)))
 (let ((?x581 (+ x ?x368)))
 (let ((?x1473 (+ 1 r)))
 (let ((?x4905 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)))
 (let ((?x6057 (+ (* 18 (* r00 x00 ?x1473 ?x9139 ?x9139)) (* (- 18) (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 18 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 3) (* s00 ?x581 ?x581 ?x581)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 3 (* ?x581 ?x581 ?x581 ?x9139)) (* 2 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 6 (* r00 r00 s00 ?x581 ?x581 ?x581)) (* 9 (* s00 ?x1473 ?x581 ?x581 ?x581)) (* 4 (* s00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 18 (* r00 ?x581 ?x581 ?x581 ?x581)) (* (- 2) (* ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139 ?x9139)) (* (- 2) (* ?x1473 ?x9139 ?x9139 ?x9139 ?x9139)) (* (- 4) (* s00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 3) (* ?x1473 ?x9139 ?x9139 ?x9139)) (* 2 (* ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139 ?x9139)) (* 2 (* ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 r00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 4) (* s00 s00 ?x581 ?x581 ?x581)) (* 18 (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 18) (* r00 x00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 18) (* x00 ?x1473 ?x581 ?x581 ?x581)) (* 6 (* r00 r00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 s00 ?x1473 ?x581 ?x581 ?x581)) (* 3 (* ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 9) (* s00 ?x1473 ?x1473 ?x9139 ?x9139)) (* (- 18) (* r00 ?x1473 ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 9) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 9 (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 18 (* r00 x00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 9 (* r00 s00 ?x581 ?x581 ?x581)) (* (- 6) (* r00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 3) (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 3) (* ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 6 (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 ?x1473 ?x9139 ?x9139 ?x9139)) (* 3 (* ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 2 (* s00 ?x581 ?x581 ?x581 ?x9139)) (* 9 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 6 (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 18 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x581)) (* (- 18) (* ?x1473 ?x1473 ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* 6 (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 9 (* ?x1473 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 9) (* ?x1473 ?x581 ?x581 ?x581 ?x9139)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 2 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 2) (* s00 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 18) (* r00 x00 ?x581 ?x581 ?x581)) (* (- 6) (* r00 r00 s00 ?x1473 ?x9139 ?x9139)) (* (- 4) (* s00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 18) (* r00 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 9) (* r00 s00 ?x1473 ?x9139 ?x9139)) (* 3 (* s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 18) (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 2 (* ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* 9 (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 9) (* r00 ?x581 ?x581 ?x581 ?x9139)) (* 9 (* ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 18 (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x581)) (* 18 (* ?x1473 ?x581 ?x581 ?x581 ?x581)) (* (- 6) (* r00 r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 6 (* r00 r00 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 18) (* r00 x00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 9) (* s00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 18) (* ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x9139 ?x9139)) (* 6 (* r00 ?x1473 ?x581 ?x581 ?x581 ?x9139)) (* 4 (* s00 s00 ?x1473 ?x9139 ?x9139)) (* 3 (* s00 ?x1473 ?x9139 ?x9139)) (* 18 (* x00 ?x1473 ?x1473 ?x9139 ?x9139)) (* 18 (* x00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 6 (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 2) (* s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 6) (* r00 r00 ?x581 ?x581 ?x581 ?x9139)) (* (- 6) (* r00 r00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 6) (* r00 ?x1473 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 3) ?x4905))))
 (let ((?x1434 (* x00 x00)))
 (let ((?x10006 (* 108 ?x1434)))
 (let ((?x10060 (* (- 9) s)))
 (let ((?x630 (* r00 r00 s00)))
 (let ((?x10082 (* (- 36) ?x630)))
 (let ((?x137 (* 9 s00)))
 (let ((?x679 (* s00 s00)))
 (let ((?x7491 (* 51 ?x679)))
 (let ((?x3018 (* r00 r00 s)))
 (let ((?x9598 (* 36 ?x3018)))
 (let ((?x1272 (* s00 s00 s00)))
 (let ((?x7465 (* 16 ?x1272)))
 (let ((?x893 (* s00 x00)))
 (let ((?x7428 (* (- 108) ?x893)))
 (let ((?x970 (* r00 r00 r00 x00)))
 (let ((?x9646 (* (- 432) ?x970)))
 (let ((?x610 (* r00 x00)))
 (let ((?x3086 (* 108 ?x610)))
 (let ((?x10239 (+ (* 216 (* r00 s00 x00)) ?x3086 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x9646 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x7428 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7465 (* (- 108) (* x s)) ?x9598 ?x7491 (* (- 108) (* r00 x)) ?x137 ?x10082 ?x10060 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x10006)))
 (let (($x10292 (= ?x10239 0)))
 (let ((?x7343 (* 15 ?x679)))
 (let ((?x965 (* r00 r00 x00)))
 (let ((?x11285 (* 36 ?x965)))
 (let ((?x9223 (* (- 6) ?x893)))
 (let ((?x4242 (* 54 ?x610)))
 (let ((?x1928 (+ (* 24 (* s r)) ?x4242 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x9223 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x9598 ?x11285 ?x7343 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x10082 (* 54 (* x00 r)) ?x10060 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x587 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x6641 (* 4 ?x679)))
 (let ((?x2522 (* 18 ?x610)))
 (let ((?x9324 (+ (* 9 (* s r)) ?x2522 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3018) ?x6641 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x630) (* 18 (* x00 r)) ?x587 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x557 (* r00 r00 r00)))
 (let ((?x558 (* 12 ?x557)))
 (let ((?x589 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x588 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x6764 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x587 ?x588 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x589 ?x558)))
 (let (($x6049 (= (+ s00 ?x368 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3173 (and $x6049 (= ?x6764 0) (= ?x9324 0) (= ?x1928 0) $x10292 (not (= ?x6057 0)))))
 (let ((?x4915 (+ (* (- 18) (* r00 x00 ?x1473 ?x9139 ?x9139)) (* 18 (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 18) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 3 (* s00 ?x581 ?x581 ?x581)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 3) (* ?x581 ?x581 ?x581 ?x9139)) (* (- 2) (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 6) (* r00 r00 s00 ?x581 ?x581 ?x581)) (* (- 9) (* s00 ?x1473 ?x581 ?x581 ?x581)) (* (- 4) (* s00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 18) (* r00 ?x581 ?x581 ?x581 ?x581)) (* 2 (* ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139 ?x9139)) (* 2 (* ?x1473 ?x9139 ?x9139 ?x9139 ?x9139)) (* 4 (* s00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 3 (* ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 2) (* ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139 ?x9139)) (* (- 2) (* ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 6 (* r00 r00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 4 (* s00 s00 ?x581 ?x581 ?x581)) (* (- 18) (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 18 (* r00 x00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 18 (* x00 ?x1473 ?x581 ?x581 ?x581)) (* (- 6) (* r00 r00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 6 (* r00 s00 ?x1473 ?x581 ?x581 ?x581)) (* (- 3) (* ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 9 (* s00 ?x1473 ?x1473 ?x9139 ?x9139)) (* 18 (* r00 ?x1473 ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 9 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 9) (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 18) (* r00 x00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 9) (* r00 s00 ?x581 ?x581 ?x581)) (* 6 (* r00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 3 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 3 (* ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 6) (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 3) (* ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 2) (* s00 ?x581 ?x581 ?x581 ?x9139)) (* (- 9) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 6) (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 18) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x581)) (* 18 (* ?x1473 ?x1473 ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 9) (* ?x1473 ?x1473 ?x9139 ?x9139 ?x9139)) (* 9 (* ?x1473 ?x581 ?x581 ?x581 ?x9139)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 2) (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 2 (* s00 ?x1473 ?x9139 ?x9139 ?x9139)) (* 18 (* r00 x00 ?x581 ?x581 ?x581)) (* 6 (* r00 r00 s00 ?x1473 ?x9139 ?x9139)) (* 4 (* s00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 18 (* r00 ?x1473 ?x581 ?x9139 ?x9139)) (* 9 (* r00 s00 ?x1473 ?x9139 ?x9139)) (* (- 3) (* s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 18 (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 2) (* ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* (- 9) (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 9 (* r00 ?x581 ?x581 ?x581 ?x9139)) (* (- 9) (* ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 18) (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x581)) (* (- 18) (* ?x1473 ?x581 ?x581 ?x581 ?x581)) (* 6 (* r00 r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 6) (* r00 r00 ?x1473 ?x9139 ?x9139 ?x9139)) (* 18 (* r00 x00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 9 (* s00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 18 (* ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x9139 ?x9139)) (* (- 6) (* r00 ?x1473 ?x581 ?x581 ?x581 ?x9139)) (* (- 4) (* s00 s00 ?x1473 ?x9139 ?x9139)) (* (- 3) (* s00 ?x1473 ?x9139 ?x9139)) (* (- 18) (* x00 ?x1473 ?x1473 ?x9139 ?x9139)) (* (- 18) (* x00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 2 (* s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 6 (* r00 r00 ?x581 ?x581 ?x581 ?x9139)) (* 6 (* r00 r00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 6 (* r00 ?x1473 ?x1473 ?x9139 ?x9139 ?x9139)) (* 3 ?x4905))))
 (let ((?x143 (* 9 s)))
 (let ((?x1075 (* (- 9) s00)))
 (let ((?x1004 (* (- 15) ?x679)))
 (let ((?x978 (* (- 36) ?x965)))
 (let ((?x894 (* 6 ?x893)))
 (let ((?x633 (* s s)))
 (let ((?x657 (* 3 ?x633)))
 (let ((?x639 (* (- 54) ?x610)))
 (let ((?x7393 (+ (* (- 24) (* s r)) ?x639 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x657 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x894 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3018) ?x978 ?x1004 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1075 (* 36 ?x630) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x466 (* (- 3) s00)))
 (let ((?x692 (* (- 4) ?x679)))
 (let ((?x634 (* 2 ?x633)))
 (let ((?x624 (* (- 18) ?x610)))
 (let ((?x2862 (+ (* (- 9) (* s r)) ?x624 (* 9 (* r00 s00)) ?x634 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3018) ?x692 (* 18 (* r00 x)) ?x466 (* 6 ?x630) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x536 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x466 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x557))))
 (let (($x4951 (and $x6049 (= ?x536 0) (= ?x2862 0) (= ?x7393 0) $x10292 (not (= ?x4915 0)))))
 (rewrite (= $x4951 $x3173))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x365 (exists ((r Int) (s Int) (x Int) )(! (let ((?x217 (- x s)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x219 (+ (* (- 18) ?x213 r00 ?x215 ?x215 x00) (* 18 ?x213 ?x213 ?x213 ?x213 ?x217 ?x217 x00))))
 (let ((?x223 (+ (- ?x219 (* 18 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x217 ?x217)) (* 3 s00 ?x217 ?x217 ?x217))))
 (let ((?x233 (- (- ?x223 (* 6 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x217 ?x217)) (* 3 ?x215 ?x217 ?x217 ?x217))))
 (let ((?x235 (- (- ?x233 (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x217)) (* 9 ?x213 r00 ?x215 ?x215 ?x215 ?x217 ?x217))))
 (let ((?x237 (- (- ?x235 (* 6 r00 r00 s00 ?x217 ?x217 ?x217)) (* 9 ?x213 s00 ?x217 ?x217 ?x217))))
 (let ((?x239 (- (- ?x237 (* 4 ?x213 ?x215 ?x215 s00 s00 ?x217 ?x217)) (* 18 r00 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x244 (+ ?x239 (* 2 ?x213 ?x215 ?x215 ?x215 ?x215 ?x217 ?x217) (* 2 ?x213 ?x215 ?x215 ?x215 ?x215) (* 4 ?x213 ?x213 ?x213 ?x215 ?x215 s00 s00 ?x217) (* 3 ?x213 ?x215 ?x215 ?x215))))
 (let ((?x248 (- (- ?x244 (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x217)) (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 ?x217 ?x217))))
 (let ((?x251 (+ ?x248 (* 6 ?x213 r00 r00 ?x215 ?x215 s00 ?x217 ?x217) (* 4 s00 s00 ?x217 ?x217 ?x217))))
 (let ((?x256 (+ (- ?x251 (* 18 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x217 ?x217)) (* 18 ?x213 ?x213 ?x213 r00 ?x217 ?x217 x00) (* 18 ?x213 ?x217 ?x217 ?x217 x00))))
 (let ((?x260 (- (- ?x256 (* 6 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x217 ?x217)) (* 9 ?x213 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x217))))
 (let ((?x264 (- (+ ?x260 (* 6 ?x213 r00 s00 ?x217 ?x217 ?x217)) (* 3 ?x213 ?x213 ?x213 ?x215 ?x217 ?x217))))
 (let ((?x270 (+ ?x264 (* 9 ?x213 ?x213 ?x215 ?x215 s00) (* 18 ?x213 r00 ?x215 ?x215 ?x217 ?x217 ?x217) (* 6 ?x213 ?x213 ?x213 ?x213 r00 s00 ?x217 ?x217) (* 9 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x217) (* 9 ?x213 r00 ?x215 ?x215 s00 ?x217 ?x217))))
 (let ((?x275 (- (- ?x270 (* 9 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x217)) (* 18 ?x213 r00 ?x215 ?x215 ?x217 ?x217 x00))))
 (let ((?x282 (+ (- ?x275 (* 9 r00 s00 ?x217 ?x217 ?x217)) (* 6 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x217 ?x217) (* 9 ?x213 ?x213 ?x213 r00 ?x215 ?x217 ?x217) (* 3 ?x213 ?x213 ?x213 s00 ?x217 ?x217) (* 3 ?x213 ?x215 ?x215 ?x215 ?x217 ?x217) (* 9 ?x213 ?x213 ?x213 ?x213 ?x215 ?x217 ?x217))))
 (let ((?x286 (+ (- ?x282 (* 6 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x217)) (* 9 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x217))))
 (let ((?x294 (- (- ?x286 (* 9 ?x213 r00 ?x215 ?x215 ?x215)) (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x217))))
 (let ((?x296 (- (- ?x294 (* 2 ?x215 s00 ?x217 ?x217 ?x217)) (* 9 ?x213 ?x213 ?x213 r00 s00 ?x217 ?x217))))
 (let ((?x298 (- (- ?x296 (* 6 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 s00 ?x217)) (* 18 ?x213 ?x213 ?x213 ?x213 ?x217 ?x217 ?x217))))
 (let ((?x303 (- (+ ?x298 (* 18 ?x213 ?x213 ?x215 ?x215 ?x217 ?x217 ?x217)) (* 6 ?x213 ?x213 ?x213 r00 r00 s00 ?x217 ?x217))))
 (let ((?x307 (+ (- ?x303 (* 9 ?x213 ?x213 ?x215 ?x215 ?x215)) (* 9 ?x213 ?x215 ?x217 ?x217 ?x217) (* 6 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x217))))
 (let ((?x316 (+ (- ?x307 (* 2 ?x213 ?x213 ?x213 ?x215 s00 ?x217 ?x217)) (* 2 ?x213 ?x215 ?x215 ?x215 s00) (* 18 r00 ?x217 ?x217 ?x217 x00) (* 6 ?x213 r00 r00 ?x215 ?x215 s00) (* 4 ?x213 ?x213 ?x213 s00 s00 ?x217 ?x217) (* 18 ?x213 r00 ?x215 ?x215 ?x217) (* 9 ?x213 r00 ?x215 ?x215 s00))))
 (let ((?x320 (+ (- ?x316 (* 3 ?x213 ?x215 ?x215 s00 ?x217 ?x217)) (* 18 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x217 x00))))
 (let ((?x324 (- (- ?x320 (* 2 ?x215 ?x215 ?x217 ?x217 ?x217)) (* 9 ?x213 ?x213 ?x213 ?x213 s00 ?x217 ?x217))))
 (let ((?x330 (- (+ ?x324 (* 9 r00 ?x215 ?x217 ?x217 ?x217)) (* 9 ?x213 ?x213 ?x215 ?x215 ?x215 ?x217 ?x217))))
 (let ((?x332 (- (- ?x330 (* 18 ?x213 ?x213 ?x213 r00 ?x217 ?x217 ?x217)) (* 18 ?x213 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x336 (- (+ ?x332 (* 6 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x217 ?x217)) (* 6 ?x213 r00 r00 ?x215 ?x215 ?x215))))
 (let ((?x340 (+ ?x336 (* 18 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x217 x00) (* 9 ?x213 ?x213 ?x215 ?x215 s00 ?x217 ?x217) (* 18 ?x213 ?x213 ?x215 ?x215 ?x217))))
 (let ((?x349 (- (- ?x340 (* 6 ?x213 ?x213 r00 ?x215 ?x215 s00)) (* 6 ?x213 r00 ?x215 ?x217 ?x217 ?x217))))
 (let ((?x351 (- (- ?x349 (* 4 ?x213 ?x215 ?x215 s00 s00)) (* 3 ?x213 ?x215 ?x215 s00))))
 (let ((?x353 (- (- ?x351 (* 18 ?x213 ?x213 ?x215 ?x215 x00)) (* 18 ?x213 ?x213 ?x215 ?x215 ?x217 ?x217 x00))))
 (let ((?x360 (+ (- ?x353 (* 6 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x217 ?x217)) (* 2 ?x213 ?x215 ?x215 ?x215 s00 ?x217 ?x217) (* 6 r00 r00 ?x215 ?x217 ?x217 ?x217) (* 6 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x217) (* 6 ?x213 ?x213 r00 ?x215 ?x215 ?x215) (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x217))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x360 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x11685 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x9139 (+ 3 s ?x214)))
 (let ((?x368 (* (- 1) s)))
 (let ((?x581 (+ x ?x368)))
 (let ((?x1473 (+ 1 r)))
 (let ((?x4905 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)))
 (let ((?x4915 (+ (* (- 18) (* r00 x00 ?x1473 ?x9139 ?x9139)) (* 18 (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 18) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 3 (* s00 ?x581 ?x581 ?x581)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 3) (* ?x581 ?x581 ?x581 ?x9139)) (* (- 2) (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 6) (* r00 r00 s00 ?x581 ?x581 ?x581)) (* (- 9) (* s00 ?x1473 ?x581 ?x581 ?x581)) (* (- 4) (* s00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 18) (* r00 ?x581 ?x581 ?x581 ?x581)) (* 2 (* ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139 ?x9139)) (* 2 (* ?x1473 ?x9139 ?x9139 ?x9139 ?x9139)) (* 4 (* s00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 3 (* ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 2) (* ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139 ?x9139)) (* (- 2) (* ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 6 (* r00 r00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 4 (* s00 s00 ?x581 ?x581 ?x581)) (* (- 18) (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 18 (* r00 x00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 18 (* x00 ?x1473 ?x581 ?x581 ?x581)) (* (- 6) (* r00 r00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 6 (* r00 s00 ?x1473 ?x581 ?x581 ?x581)) (* (- 3) (* ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 9 (* s00 ?x1473 ?x1473 ?x9139 ?x9139)) (* 18 (* r00 ?x1473 ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 9 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 9) (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 18) (* r00 x00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 9) (* r00 s00 ?x581 ?x581 ?x581)) (* 6 (* r00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 3 (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 3 (* ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 6) (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 9 (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 9) (* r00 ?x1473 ?x9139 ?x9139 ?x9139)) (* (- 3) (* ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 2) (* s00 ?x581 ?x581 ?x581 ?x9139)) (* (- 9) (* r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 6) (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 18) (* ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x581)) (* 18 (* ?x1473 ?x1473 ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 r00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* (- 9) (* ?x1473 ?x1473 ?x9139 ?x9139 ?x9139)) (* 9 (* ?x1473 ?x581 ?x581 ?x581 ?x9139)) (* 6 (* r00 s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 2) (* s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 2 (* s00 ?x1473 ?x9139 ?x9139 ?x9139)) (* 18 (* r00 x00 ?x581 ?x581 ?x581)) (* 6 (* r00 r00 s00 ?x1473 ?x9139 ?x9139)) (* 4 (* s00 s00 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 18 (* r00 ?x1473 ?x581 ?x9139 ?x9139)) (* 9 (* r00 s00 ?x1473 ?x9139 ?x9139)) (* (- 3) (* s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 18 (* x00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 2) (* ?x581 ?x581 ?x581 ?x9139 ?x9139)) (* (- 9) (* s00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581)) (* 9 (* r00 ?x581 ?x581 ?x581 ?x9139)) (* (- 9) (* ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* (- 18) (* r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x581)) (* (- 18) (* ?x1473 ?x581 ?x581 ?x581 ?x581)) (* 6 (* r00 r00 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* (- 6) (* r00 r00 ?x1473 ?x9139 ?x9139 ?x9139)) (* 18 (* r00 x00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* 9 (* s00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* 18 (* ?x1473 ?x1473 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 s00 ?x1473 ?x1473 ?x9139 ?x9139)) (* (- 6) (* r00 ?x1473 ?x581 ?x581 ?x581 ?x9139)) (* (- 4) (* s00 s00 ?x1473 ?x9139 ?x9139)) (* (- 3) (* s00 ?x1473 ?x9139 ?x9139)) (* (- 18) (* x00 ?x1473 ?x1473 ?x9139 ?x9139)) (* (- 18) (* x00 ?x1473 ?x1473 ?x581 ?x581 ?x9139 ?x9139)) (* (- 6) (* r00 ?x1473 ?x1473 ?x1473 ?x1473 ?x581 ?x581 ?x9139)) (* 2 (* s00 ?x1473 ?x581 ?x581 ?x9139 ?x9139 ?x9139)) (* 6 (* r00 r00 ?x581 ?x581 ?x581 ?x9139)) (* 6 (* r00 r00 ?x1473 ?x1473 ?x1473 ?x581 ?x9139 ?x9139 ?x9139)) (* 6 (* r00 ?x1473 ?x1473 ?x9139 ?x9139 ?x9139)) (* 3 ?x4905))))
 (let ((?x1434 (* x00 x00)))
 (let ((?x10006 (* 108 ?x1434)))
 (let ((?x10060 (* (- 9) s)))
 (let ((?x630 (* r00 r00 s00)))
 (let ((?x10082 (* (- 36) ?x630)))
 (let ((?x137 (* 9 s00)))
 (let ((?x679 (* s00 s00)))
 (let ((?x7491 (* 51 ?x679)))
 (let ((?x3018 (* r00 r00 s)))
 (let ((?x9598 (* 36 ?x3018)))
 (let ((?x1272 (* s00 s00 s00)))
 (let ((?x7465 (* 16 ?x1272)))
 (let ((?x893 (* s00 x00)))
 (let ((?x7428 (* (- 108) ?x893)))
 (let ((?x970 (* r00 r00 r00 x00)))
 (let ((?x9646 (* (- 432) ?x970)))
 (let ((?x610 (* r00 x00)))
 (let ((?x3086 (* 108 ?x610)))
 (let ((?x10239 (+ (* 216 (* r00 s00 x00)) ?x3086 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x9646 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x7428 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7465 (* (- 108) (* x s)) ?x9598 ?x7491 (* (- 108) (* r00 x)) ?x137 ?x10082 ?x10060 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x10006)))
 (let (($x10292 (= ?x10239 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1075 (* (- 9) s00)))
 (let ((?x1004 (* (- 15) ?x679)))
 (let ((?x965 (* r00 r00 x00)))
 (let ((?x978 (* (- 36) ?x965)))
 (let ((?x894 (* 6 ?x893)))
 (let ((?x633 (* s s)))
 (let ((?x657 (* 3 ?x633)))
 (let ((?x639 (* (- 54) ?x610)))
 (let ((?x7393 (+ (* (- 24) (* s r)) ?x639 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x657 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x894 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3018) ?x978 ?x1004 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1075 (* 36 ?x630) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x466 (* (- 3) s00)))
 (let ((?x692 (* (- 4) ?x679)))
 (let ((?x634 (* 2 ?x633)))
 (let ((?x624 (* (- 18) ?x610)))
 (let ((?x2862 (+ (* (- 9) (* s r)) ?x624 (* 9 (* r00 s00)) ?x634 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3018) ?x692 (* 18 (* r00 x)) ?x466 (* 6 ?x630) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x536 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x466 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x6049 (= (+ s00 ?x368 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x4951 (and $x6049 (= ?x536 0) (= ?x2862 0) (= ?x7393 0) $x10292 (not (= ?x4915 0)))))
 (let ((?x217 (- x s)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x219 (+ (* (- 18) ?x213 r00 ?x215 ?x215 x00) (* 18 ?x213 ?x213 ?x213 ?x213 ?x217 ?x217 x00))))
 (let ((?x223 (+ (- ?x219 (* 18 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x217 ?x217)) (* 3 s00 ?x217 ?x217 ?x217))))
 (let ((?x233 (- (- ?x223 (* 6 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x217 ?x217)) (* 3 ?x215 ?x217 ?x217 ?x217))))
 (let ((?x235 (- (- ?x233 (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x217)) (* 9 ?x213 r00 ?x215 ?x215 ?x215 ?x217 ?x217))))
 (let ((?x237 (- (- ?x235 (* 6 r00 r00 s00 ?x217 ?x217 ?x217)) (* 9 ?x213 s00 ?x217 ?x217 ?x217))))
 (let ((?x239 (- (- ?x237 (* 4 ?x213 ?x215 ?x215 s00 s00 ?x217 ?x217)) (* 18 r00 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x244 (+ ?x239 (* 2 ?x213 ?x215 ?x215 ?x215 ?x215 ?x217 ?x217) (* 2 ?x213 ?x215 ?x215 ?x215 ?x215) (* 4 ?x213 ?x213 ?x213 ?x215 ?x215 s00 s00 ?x217) (* 3 ?x213 ?x215 ?x215 ?x215))))
 (let ((?x248 (- (- ?x244 (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x217)) (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 ?x217 ?x217))))
 (let ((?x251 (+ ?x248 (* 6 ?x213 r00 r00 ?x215 ?x215 s00 ?x217 ?x217) (* 4 s00 s00 ?x217 ?x217 ?x217))))
 (let ((?x256 (+ (- ?x251 (* 18 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x217 ?x217)) (* 18 ?x213 ?x213 ?x213 r00 ?x217 ?x217 x00) (* 18 ?x213 ?x217 ?x217 ?x217 x00))))
 (let ((?x260 (- (- ?x256 (* 6 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x217 ?x217)) (* 9 ?x213 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x217))))
 (let ((?x264 (- (+ ?x260 (* 6 ?x213 r00 s00 ?x217 ?x217 ?x217)) (* 3 ?x213 ?x213 ?x213 ?x215 ?x217 ?x217))))
 (let ((?x270 (+ ?x264 (* 9 ?x213 ?x213 ?x215 ?x215 s00) (* 18 ?x213 r00 ?x215 ?x215 ?x217 ?x217 ?x217) (* 6 ?x213 ?x213 ?x213 ?x213 r00 s00 ?x217 ?x217) (* 9 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x217) (* 9 ?x213 r00 ?x215 ?x215 s00 ?x217 ?x217))))
 (let ((?x275 (- (- ?x270 (* 9 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x217)) (* 18 ?x213 r00 ?x215 ?x215 ?x217 ?x217 x00))))
 (let ((?x282 (+ (- ?x275 (* 9 r00 s00 ?x217 ?x217 ?x217)) (* 6 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x217 ?x217) (* 9 ?x213 ?x213 ?x213 r00 ?x215 ?x217 ?x217) (* 3 ?x213 ?x213 ?x213 s00 ?x217 ?x217) (* 3 ?x213 ?x215 ?x215 ?x215 ?x217 ?x217) (* 9 ?x213 ?x213 ?x213 ?x213 ?x215 ?x217 ?x217))))
 (let ((?x286 (+ (- ?x282 (* 6 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x217)) (* 9 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x217))))
 (let ((?x294 (- (- ?x286 (* 9 ?x213 r00 ?x215 ?x215 ?x215)) (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x217))))
 (let ((?x296 (- (- ?x294 (* 2 ?x215 s00 ?x217 ?x217 ?x217)) (* 9 ?x213 ?x213 ?x213 r00 s00 ?x217 ?x217))))
 (let ((?x298 (- (- ?x296 (* 6 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 s00 ?x217)) (* 18 ?x213 ?x213 ?x213 ?x213 ?x217 ?x217 ?x217))))
 (let ((?x303 (- (+ ?x298 (* 18 ?x213 ?x213 ?x215 ?x215 ?x217 ?x217 ?x217)) (* 6 ?x213 ?x213 ?x213 r00 r00 s00 ?x217 ?x217))))
 (let ((?x307 (+ (- ?x303 (* 9 ?x213 ?x213 ?x215 ?x215 ?x215)) (* 9 ?x213 ?x215 ?x217 ?x217 ?x217) (* 6 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x217))))
 (let ((?x316 (+ (- ?x307 (* 2 ?x213 ?x213 ?x213 ?x215 s00 ?x217 ?x217)) (* 2 ?x213 ?x215 ?x215 ?x215 s00) (* 18 r00 ?x217 ?x217 ?x217 x00) (* 6 ?x213 r00 r00 ?x215 ?x215 s00) (* 4 ?x213 ?x213 ?x213 s00 s00 ?x217 ?x217) (* 18 ?x213 r00 ?x215 ?x215 ?x217) (* 9 ?x213 r00 ?x215 ?x215 s00))))
 (let ((?x320 (+ (- ?x316 (* 3 ?x213 ?x215 ?x215 s00 ?x217 ?x217)) (* 18 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x217 x00))))
 (let ((?x324 (- (- ?x320 (* 2 ?x215 ?x215 ?x217 ?x217 ?x217)) (* 9 ?x213 ?x213 ?x213 ?x213 s00 ?x217 ?x217))))
 (let ((?x330 (- (+ ?x324 (* 9 r00 ?x215 ?x217 ?x217 ?x217)) (* 9 ?x213 ?x213 ?x215 ?x215 ?x215 ?x217 ?x217))))
 (let ((?x332 (- (- ?x330 (* 18 ?x213 ?x213 ?x213 r00 ?x217 ?x217 ?x217)) (* 18 ?x213 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x336 (- (+ ?x332 (* 6 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x217 ?x217)) (* 6 ?x213 r00 r00 ?x215 ?x215 ?x215))))
 (let ((?x340 (+ ?x336 (* 18 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x217 x00) (* 9 ?x213 ?x213 ?x215 ?x215 s00 ?x217 ?x217) (* 18 ?x213 ?x213 ?x215 ?x215 ?x217))))
 (let ((?x349 (- (- ?x340 (* 6 ?x213 ?x213 r00 ?x215 ?x215 s00)) (* 6 ?x213 r00 ?x215 ?x217 ?x217 ?x217))))
 (let ((?x351 (- (- ?x349 (* 4 ?x213 ?x215 ?x215 s00 s00)) (* 3 ?x213 ?x215 ?x215 s00))))
 (let ((?x353 (- (- ?x351 (* 18 ?x213 ?x213 ?x215 ?x215 x00)) (* 18 ?x213 ?x213 ?x215 ?x215 ?x217 ?x217 x00))))
 (let ((?x360 (+ (- ?x353 (* 6 ?x213 ?x213 ?x213 ?x213 r00 ?x215 ?x217 ?x217)) (* 2 ?x213 ?x215 ?x215 ?x215 s00 ?x217 ?x217) (* 6 r00 r00 ?x215 ?x217 ?x217 ?x217) (* 6 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x217) (* 6 ?x213 ?x213 r00 ?x215 ?x215 ?x215) (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x217))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x364 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x360 0))))))
 (rewrite (= $x364 $x4951))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x366 (asserted $x365)))
 (let ((@x2674 (mp (mp @x366 (quant-intro (proof-bind ?x11685) (= $x365 $x4942)) $x4942) (rewrite (= $x4942 $x4942)) $x4942)))
 (let ((@x7432 (mp (mp @x2674 (quant-intro (proof-bind ?x3810) (= $x4942 $x3798)) $x3798) (quant-intro (proof-bind ?x13477) (= $x3798 $x13475)) $x13475)))
 (let ((@x617 (mp (mp~ @x7432 (sk (~ $x13475 $x9447)) $x9447) (rewrite (= $x9447 $x1702)) $x1702)))
 (let ((@x2916 (and-elim @x617 $x10189)))
 (let ((@x1308 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x10189) $x3686)) @x2916 $x3686)))
 (let (($x6790 (>= ?x10188 0)))
 (let ((@x9622 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x10189) $x6790)) @x2916 $x6790)))
 (let (($x5205 (<= ?x10109 0)))
 (let ((@x10339 (and-elim @x617 $x10110)))
 (let ((@x939 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x10110) $x5205)) @x10339 $x5205)))
 (let (($x6799 (>= ?x10109 0)))
 (let ((@x1318 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x10110) $x6799)) @x10339 $x6799)))
 (let (($x3093 (<= ?x11185 0)))
 (let ((@x10289 (and-elim @x617 $x2876)))
 (let ((@x1282 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2876) $x3093)) @x10289 $x3093)))
 (let (($x1165 (>= ?x11185 0)))
 (let ((@x1295 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2876) $x1165)) @x10289 $x1165)))
 (let (($x3546 (<= ?x5368 0)))
 (let ((@x9818 (and-elim @x617 $x5162)))
 (let ((@x879 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5162) $x3546)) @x9818 $x3546)))
 (let (($x606 (>= ?x5368 0)))
 (let ((@x1875 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5162) $x606)) @x9818 $x606)))
 (let (($x10334 (<= ?x9461 0)))
 (let ((@x2915 (and-elim @x617 $x9470)))
 (let ((@x9222 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9470) $x10334)) @x2915 $x10334)))
 (let (($x9620 (>= ?x9461 0)))
 (let ((@x10456 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9470) $x9620)) @x2915 $x9620)))
 (let (($x1917 (not (<= ?x1894 0))))
 (let (($x5933 (>= ?x1894 0)))
 (let ((@x7133 ((_ th-lemma arith) (hypothesis (not $x5933)) @x1318 @x939 @x1295 @x1282 @x9622 @x1308 @x1295 @x1282 @x9622 @x1308 @x10456 @x9222 @x1318 @x939 @x9622 @x1308 @x1295 @x1282 @x1318 @x939 @x9622 @x1308 @x1875 @x879 @x1318 @x939 @x1295 @x1282 @x1318 @x939 @x9622 @x1308 false)))
 (let ((@x8939 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1709 $x1917 (not $x5933))) (and-elim @x617 $x6115) (or $x1917 (not $x5933)))))
 ((_ th-lemma arith) (unit-resolution @x8939 (lemma @x7133 $x5933) $x1917) @x1318 @x939 @x1295 @x1282 @x9622 @x1308 @x1295 @x1282 @x9622 @x1308 @x10456 @x9222 @x1318 @x939 @x9622 @x1308 @x1295 @x1282 @x1318 @x939 @x9622 @x1308 @x1875 @x879 @x1318 @x939 @x1295 @x1282 @x1318 @x939 @x9622 @x1308 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        49
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2686
 :arith-nonlinear-bounds    42
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      12
 :arith-tableau-max-columns 443
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                6.26
 :memory                    4.70
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                10227669
 :num-checks                1
 :propagations              12
 :rlimit-count              132242
 :time                      0.10
 :total-time                0.13)
