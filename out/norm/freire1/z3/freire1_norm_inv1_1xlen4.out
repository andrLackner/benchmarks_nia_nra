unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x408 (* (- 1) r!1)))
 (let ((?x978 (* r!1 r!1)))
 (let ((?x36 (* r00 r00)))
 (let ((?x603 (* (- 1) ?x36)))
 (let ((?x539 (* (- 2) x00)))
 (let ((?x1608 (+ r00 ?x539 ?x603 ?x978 (* 2 x!0) ?x408)))
 (let (($x583 (<= ?x1608 0)))
 (let (($x1597 (= ?x1608 0)))
 (let ((?x1941 (* r!1 r!1 r!1)))
 (let ((?x1890 (* r!1 r!1 r!1 r!1 r!1)))
 (let ((?x1603 (+ x!0 ?x408)))
 (let ((?x403 (+ 1 r!1)))
 (let ((?x1550 (+ (* 2 r00) (* (- 4) x00) (* (- 2) ?x36) (* (- 1) (* r00 r00 r!1 r!1 r!1 r!1 r!1)) (* (- 2) (* r00 x!0 x!0 x!0)) (* 2 (* x!0 r!1)) (* r00 r!1) (* (- 2) (* r00 x!0 x!0 x!0 r!1)) (* (- 12) (* x00 x!0 x!0 r!1)) (* (- 1) (* r!1 r!1 r!1 r!1)) (* (- 2) (* x00 r!1)) (* 3 (* x!0 x!0 r!1 r!1 r!1)) (* 7 (* x!0 x!0 x!0 r!1)) (* (- 1) (* x!0 x!0 x!0 r!1 r!1)) (* 12 (* x00 x!0 r!1 r!1)) (* 12 (* x00 x!0 r!1 r!1 r!1)) (* (- 9) (* x!0 x!0 r!1 r!1)) (* (- 3) (* x!0 r!1 r!1 r!1 r!1)) (* 5 (* x!0 r!1 r!1 r!1)) (* (- 4) (* x00 r!1 r!1 r!1)) (* (- 6) (* x00 x!0 x!0 r!1 r!1 r!1)) (* (- 1) (* r00 x!0 x!0 x!0 r!1 r!1)) (* (- 2) (* ?x403 ?x403 ?x1603 ?x1603 ?x1603 ?x1603)) (* 4 (* x00 x!0 x!0 x!0 r!1)) (* (- 2) (* x00 r!1 r!1 r!1 r!1 r!1)) (* (- 3) (* r00 r00 x!0 x!0 r!1 r!1 r!1)) (* (- 6) (* r00 r00 x!0 x!0 r!1 r!1)) (* (- 12) (* x00 x!0 x!0 r!1 r!1)) (* ?x403 ?x403 ?x403 ?x1603 ?x1603 ?x1603) (* 6 (* r00 x!0 x!0 r!1 r!1)) ?x978 (* 2 (* x00 x!0 x!0 x!0 r!1 r!1)) (* (- 1) (* r00 r00 r!1)) (* (- 2) (* x!0 x!0 x!0 x!0)) (* (- 3) (* r00 x!0 r!1 r!1 r!1 r!1)) (* (- 6) (* r00 r00 x!0 x!0 r!1)) (* 6 (* r00 x!0 x!0 r!1)) (* (- 4) (* x00 r!1 r!1 r!1 r!1)) (* 2 (* r00 r!1 r!1 r!1 r!1)) (* (- 6) (* r00 x!0 r!1 r!1 r!1)) (* (- 6) (* r00 x!0 r!1 r!1)) (* r00 r!1 r!1 r!1 r!1 r!1) (* 2 (* r00 r!1 r!1 r!1)) (* 4 (* x00 x!0 x!0 x!0)) (* (- 1) (* ?x403 ?x403 ?x403 ?x403 ?x1603 ?x1603 ?x1603)) (* r00 r00 x!0 x!0 x!0 r!1 r!1) ?x1890 (* 2 (* r00 r00 x!0 x!0 x!0 r!1)) (* 2 (* r00 r00 x!0 x!0 x!0)) ?x1941 (* 6 (* x00 x!0 r!1 r!1 r!1 r!1)) (* 4 x!0) (* (- 2) r!1) (* 3 (* r00 x!0 x!0 r!1 r!1 r!1)) (* 6 (* r00 r00 x!0 r!1 r!1)) (* 6 (* r00 r00 x!0 r!1 r!1 r!1)) (* 3 (* r00 r00 x!0 r!1 r!1 r!1 r!1)) (* (- 2) (* r00 r00 r!1 r!1 r!1)) (* (- 2) (* r00 r00 r!1 r!1 r!1 r!1)))))
 (let (($x1528 (= ?x1550 0)))
 (let (($x1558 (not $x1528)))
 (let (($x1604 (and $x1597 $x1558)))
 (let ((?x410 (+ ?x408 x!0)))
 (let ((?x279 (* r!1 r!1 r!1 r!1)))
 (let ((?x2188 (* 2 ?x36)))
 (let ((?x2187 (* 4 x00)))
 (let ((?x985 (* (- 1) ?x978)))
 (let ((?x2185 (* (- 2) r00)))
 (let ((?x2100 (+ (* 2 r!1) (* (- 4) x!0) ?x2185 ?x985 ?x2187 ?x2188 (* (- 4) (* x!0 x!0 x!0 x00)) (* (- 2) (* r!1 r!1 r!1 r00)) (* (- 2) (* r!1 r!1 r!1 r!1 r00)) (* (- 1) (* r!1 r!1 r!1 r!1 r!1 r00)) (* 6 (* r!1 r!1 x!0 r00)) (* 6 (* r!1 r!1 r!1 x!0 r00)) (* 4 (* r!1 r!1 r!1 r!1 x00)) (* 3 (* r!1 r!1 r!1 r!1 x!0 r00)) (* 2 (* r!1 r!1 r!1 r!1 r!1 x00)) (* (- 6) (* r!1 x!0 x!0 r00)) (* (- 6) (* r!1 r!1 x!0 x!0 r00)) (* (- 12) (* r!1 r!1 r!1 x!0 x00)) (* (- 3) (* r!1 r!1 r!1 x!0 x!0 r00)) (* (- 6) (* r!1 r!1 r!1 r!1 x!0 x00)) (* 12 (* r!1 r!1 x!0 x!0 x00)) (* 2 (* x!0 x!0 x!0 r00)) (* 2 (* r!1 x!0 x!0 x!0 r00)) (* r!1 r!1 x!0 x!0 x!0 r00) (* 6 (* r!1 r!1 r!1 x!0 x!0 x00)) (* 4 (* r!1 r!1 r!1 x00)) (* 2 (* x!0 x!0 x!0 x!0)) (* (- 1) ?x1890) ?x279 (* (- 5) (* r!1 r!1 r!1 x!0)) (* 3 (* r!1 r!1 r!1 r!1 x!0)) (* 9 (* r!1 r!1 x!0 x!0)) (* 12 (* r!1 x!0 x!0 x00)) (* (- 3) (* r!1 r!1 r!1 x!0 x!0)) (* (- 7) (* r!1 x!0 x!0 x!0)) (* r!1 r!1 x!0 x!0 x!0) (* (- 12) (* r!1 r!1 x!0 x00)) (* (- 1) ?x1941) (* (- 2) (* r!1 x!0)) (* 2 (* r!1 r!1 r!1 r00 r00)) (* 2 (* r!1 r!1 r!1 r!1 r00 r00)) (* r!1 r!1 r!1 r!1 r!1 r00 r00) (* (- 6) (* r!1 r!1 x!0 r00 r00)) (* (- 6) (* r!1 r!1 r!1 x!0 r00 r00)) (* (- 3) (* r!1 r!1 r!1 r!1 x!0 r00 r00)) (* 6 (* r!1 x!0 x!0 r00 r00)) (* 6 (* r!1 r!1 x!0 x!0 r00 r00)) (* 3 (* r!1 r!1 r!1 x!0 x!0 r00 r00)) (* (- 2) (* x!0 x!0 x!0 r00 r00)) (* (- 2) (* r!1 x!0 x!0 x!0 r00 r00)) (* (- 1) (* r!1 r!1 x!0 x!0 x!0 r00 r00)) (* (- 1) (* ?x403 ?x403 ?x403 ?x410 ?x410 ?x410)) (* 2 (* ?x403 ?x403 ?x410 ?x410 ?x410 ?x410)) (* ?x403 ?x403 ?x403 ?x403 ?x410 ?x410 ?x410) (* r!1 r00 r00) (* 2 (* r!1 x00)) (* (- 1) (* r!1 r00)) (* (- 4) (* r!1 x!0 x!0 x!0 x00)) (* (- 2) (* r!1 r!1 x!0 x!0 x!0 x00)))))
 (let (($x2066 (= (+ r!1 (* (- 2) x!0) (* (- 1) r00) ?x985 (* 2 x00) ?x36) 0)))
 (let (($x480 (and $x2066 (not (= ?x2100 0)))))
 (let (($x548 (exists ((r Int) (x Int) )(! (let ((?x2258 (* (- 2) (* r r x x x x00))))
 (let ((?x2234 (* (- 1) (* r r00))))
 (let ((?x1913 (* 2 (* r x00))))
 (let ((?x1842 (* r r00 r00)))
 (let ((?x87 (* (- 1) r)))
 (let ((?x148 (+ ?x87 x)))
 (let ((?x177 (+ 1 r)))
 (let ((?x1743 (* ?x177 ?x177 ?x177 ?x177 ?x148 ?x148 ?x148)))
 (let ((?x2233 (* (- 1) (* ?x177 ?x177 ?x177 ?x148 ?x148 ?x148))))
 (let ((?x2232 (* (- 1) (* r r x x x r00 r00))))
 (let ((?x2231 (* (- 2) (* r x x x r00 r00))))
 (let ((?x2230 (* (- 2) (* x x x r00 r00))))
 (let ((?x2229 (* 3 (* r r r x x r00 r00))))
 (let ((?x2228 (* 6 (* r r x x r00 r00))))
 (let ((?x2227 (* 6 (* r x x r00 r00))))
 (let ((?x2226 (* (- 3) (* r r r r x r00 r00))))
 (let ((?x2225 (* (- 6) (* r r r x r00 r00))))
 (let ((?x2224 (* (- 6) (* r r x r00 r00))))
 (let ((?x1270 (* r r r r r r00 r00)))
 (let ((?x2223 (* 2 (* r r r r r00 r00))))
 (let ((?x2222 (* 2 (* r r r r00 r00))))
 (let ((?x2221 (* (- 2) (* r x))))
 (let ((?x1498 (* (- 1) (* r r r))))
 (let ((?x929 (* r r x x x)))
 (let ((?x727 (* r r r r)))
 (let ((?x432 (* r r x x x r00)))
 (let ((?x449 (* 2 (* r x x x r00))))
 (let ((?x2200 (* 2 (* x x x r00))))
 (let ((?x448 (* (- 3) (* r r r x x r00))))
 (let ((?x447 (* (- 6) (* r r x x r00))))
 (let ((?x2199 (* (- 6) (* r x x r00))))
 (let ((?x443 (* 3 (* r r r r x r00))))
 (let ((?x442 (* 6 (* r r r x r00))))
 (let ((?x2198 (* 6 (* r r x r00))))
 (let ((?x251 (* (- 1) (* r r r r r r00))))
 (let ((?x438 (* (- 2) (* r r r r r00))))
 (let ((?x2197 (* (- 2) (* r r r r00))))
 (let ((?x2196 (* (- 4) (* x x x x00))))
 (let ((?x36 (* r00 r00)))
 (let ((?x2188 (* 2 ?x36)))
 (let ((?x2187 (* 4 x00)))
 (let ((?x30 (* r r)))
 (let ((?x138 (* (- 1) ?x30)))
 (let ((?x2185 (* (- 2) r00)))
 (let ((?x2184 (* (- 4) x)))
 (let ((?x2183 (* 2 r)))
 (let ((?x489 (+ ?x2183 ?x2184 ?x2185 ?x138 ?x2187 ?x2188 ?x2196 ?x2197 ?x438 ?x251 ?x2198 ?x442 (* 4 (* r r r r x00)) ?x443 (* 2 (* r r r r r x00)) ?x2199 ?x447 (* (- 12) (* r r r x x00)) ?x448 (* (- 6) (* r r r r x x00)) (* 12 (* r r x x x00)) ?x2200 ?x449 ?x432 (* 6 (* r r r x x x00)) (* 4 (* r r r x00)) (* 2 (* x x x x)) (* (- 1) (* r r r r r)) ?x727 (* (- 5) (* r r r x)) (* 3 (* r r r r x)) (* 9 (* r r x x)) (* 12 (* r x x x00)) (* (- 3) (* r r r x x)) (* (- 7) (* r x x x)) ?x929 (* (- 12) (* r r x x00)) ?x1498 ?x2221 ?x2222 ?x2223 ?x1270 ?x2224 ?x2225 ?x2226 ?x2227 ?x2228 ?x2229 ?x2230 ?x2231 ?x2232 ?x2233 (* 2 (* ?x177 ?x177 ?x148 ?x148 ?x148 ?x148)) ?x1743 ?x1842 ?x1913 ?x2234 (* (- 4) (* r x x x x00)) ?x2258)))
 (let (($x140 (= (+ r (* (- 2) x) (* (- 1) r00) ?x138 (* 2 x00) ?x36) 0)))
 (and $x140 (not (= ?x489 0))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!26))
 ))
 (let (($x1886 (exists ((r Int) (x Int) )(! (let ((?x87 (* (- 1) r)))
 (let ((?x932 (+ x ?x87)))
 (let ((?x36 (* r00 r00)))
 (let ((?x603 (* (- 1) ?x36)))
 (let ((?x539 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x177 (+ 1 r)))
 (let ((?x1166 (+ (* 2 (* x00 ?x932 ?x932 ?x932)) (* (- 1) (* r00 ?x177 ?x177 ?x932 ?x932 ?x932)) (* (- 2) (* ?x177 ?x177 ?x932 ?x932 ?x932 ?x932)) (* ?x177 ?x177 ?x177) (* 2 (* ?x177 ?x932)) (* r00 r00 ?x177 ?x177 ?x932 ?x932 ?x932) (* ?x177 ?x177 ?x177 ?x932 ?x932 ?x932) (* (- 1) (* ?x177 ?x177 ?x932 ?x932 ?x932)) (* (- 1) (* ?x177 ?x177 ?x177 ?x177 ?x932 ?x932 ?x932)) (* ?x177 ?x932 ?x932 ?x932) (* (- 2) (* ?x932 ?x932 ?x932 ?x932)) (* (- 1) (* r00 r00 ?x177)) (* (- 3) r) r00 (* (- 2) (* x00 ?x177)) (* r00 ?x177) ?x32 ?x539 (* r00 r00 ?x932 ?x932 ?x932) (* 2 (* x00 ?x177 ?x177 ?x932 ?x932 ?x932)) ?x603 (* (- 1) (* r00 ?x932 ?x932 ?x932)))))
 (let (($x359 (not (= ?x1166 1))))
 (let ((?x35 (* 2 x00)))
 (let ((?x136 (* (- 2) x)))
 (let ((?x30 (* r r)))
 (let ((?x138 (* (- 1) ?x30)))
 (let ((?x137 (* (- 1) r00)))
 (and (= (+ r ?x137 ?x138 ?x136 ?x35 ?x36) 0) $x359))))))))))))))) :qid k!26))
 ))
 (let ((?x555 (lambda ((r Int) (x Int) )(let ((?x2258 (* (- 2) (* r r x x x x00))))
 (let ((?x2234 (* (- 1) (* r r00))))
 (let ((?x1913 (* 2 (* r x00))))
 (let ((?x1842 (* r r00 r00)))
 (let ((?x87 (* (- 1) r)))
 (let ((?x148 (+ ?x87 x)))
 (let ((?x177 (+ 1 r)))
 (let ((?x1743 (* ?x177 ?x177 ?x177 ?x177 ?x148 ?x148 ?x148)))
 (let ((?x2233 (* (- 1) (* ?x177 ?x177 ?x177 ?x148 ?x148 ?x148))))
 (let ((?x2232 (* (- 1) (* r r x x x r00 r00))))
 (let ((?x2231 (* (- 2) (* r x x x r00 r00))))
 (let ((?x2230 (* (- 2) (* x x x r00 r00))))
 (let ((?x2229 (* 3 (* r r r x x r00 r00))))
 (let ((?x2228 (* 6 (* r r x x r00 r00))))
 (let ((?x2227 (* 6 (* r x x r00 r00))))
 (let ((?x2226 (* (- 3) (* r r r r x r00 r00))))
 (let ((?x2225 (* (- 6) (* r r r x r00 r00))))
 (let ((?x2224 (* (- 6) (* r r x r00 r00))))
 (let ((?x1270 (* r r r r r r00 r00)))
 (let ((?x2223 (* 2 (* r r r r r00 r00))))
 (let ((?x2222 (* 2 (* r r r r00 r00))))
 (let ((?x2221 (* (- 2) (* r x))))
 (let ((?x1498 (* (- 1) (* r r r))))
 (let ((?x929 (* r r x x x)))
 (let ((?x727 (* r r r r)))
 (let ((?x432 (* r r x x x r00)))
 (let ((?x449 (* 2 (* r x x x r00))))
 (let ((?x2200 (* 2 (* x x x r00))))
 (let ((?x448 (* (- 3) (* r r r x x r00))))
 (let ((?x447 (* (- 6) (* r r x x r00))))
 (let ((?x2199 (* (- 6) (* r x x r00))))
 (let ((?x443 (* 3 (* r r r r x r00))))
 (let ((?x442 (* 6 (* r r r x r00))))
 (let ((?x2198 (* 6 (* r r x r00))))
 (let ((?x251 (* (- 1) (* r r r r r r00))))
 (let ((?x438 (* (- 2) (* r r r r r00))))
 (let ((?x2197 (* (- 2) (* r r r r00))))
 (let ((?x2196 (* (- 4) (* x x x x00))))
 (let ((?x36 (* r00 r00)))
 (let ((?x2188 (* 2 ?x36)))
 (let ((?x2187 (* 4 x00)))
 (let ((?x30 (* r r)))
 (let ((?x138 (* (- 1) ?x30)))
 (let ((?x2185 (* (- 2) r00)))
 (let ((?x2184 (* (- 4) x)))
 (let ((?x2183 (* 2 r)))
 (let ((?x489 (+ ?x2183 ?x2184 ?x2185 ?x138 ?x2187 ?x2188 ?x2196 ?x2197 ?x438 ?x251 ?x2198 ?x442 (* 4 (* r r r r x00)) ?x443 (* 2 (* r r r r r x00)) ?x2199 ?x447 (* (- 12) (* r r r x x00)) ?x448 (* (- 6) (* r r r r x x00)) (* 12 (* r r x x x00)) ?x2200 ?x449 ?x432 (* 6 (* r r r x x x00)) (* 4 (* r r r x00)) (* 2 (* x x x x)) (* (- 1) (* r r r r r)) ?x727 (* (- 5) (* r r r x)) (* 3 (* r r r r x)) (* 9 (* r r x x)) (* 12 (* r x x x00)) (* (- 3) (* r r r x x)) (* (- 7) (* r x x x)) ?x929 (* (- 12) (* r r x x00)) ?x1498 ?x2221 ?x2222 ?x2223 ?x1270 ?x2224 ?x2225 ?x2226 ?x2227 ?x2228 ?x2229 ?x2230 ?x2231 ?x2232 ?x2233 (* 2 (* ?x177 ?x177 ?x148 ?x148 ?x148 ?x148)) ?x1743 ?x1842 ?x1913 ?x2234 (* (- 4) (* r x x x x00)) ?x2258)))
 (let (($x140 (= (+ r (* (- 2) x) (* (- 1) r00) ?x138 (* 2 x00) ?x36) 0)))
 (let (($x516 (and $x140 (not (= ?x489 0)))))
 (let ((?x603 (* (- 1) ?x36)))
 (let ((?x1392 (* 2 (* x00 ?x177 ?x177 (+ x ?x87) (+ x ?x87) (+ x ?x87)))))
 (let ((?x539 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x494 (* (- 2) (* (+ x ?x87) (+ x ?x87) (+ x ?x87) (+ x ?x87)))))
 (let ((?x1042 (* (- 1) (* ?x177 ?x177 ?x177 ?x177 (+ x ?x87) (+ x ?x87) (+ x ?x87)))))
 (let ((?x932 (+ x ?x87)))
 (let ((?x1166 (+ (* 2 (* x00 ?x932 ?x932 ?x932)) (* (- 1) (* r00 ?x177 ?x177 ?x932 ?x932 ?x932)) (* (- 2) (* ?x177 ?x177 ?x932 ?x932 ?x932 ?x932)) (* ?x177 ?x177 ?x177) (* 2 (* ?x177 ?x932)) (* r00 r00 ?x177 ?x177 ?x932 ?x932 ?x932) (* ?x177 ?x177 ?x177 ?x932 ?x932 ?x932) (* (- 1) (* ?x177 ?x177 ?x932 ?x932 ?x932)) ?x1042 (* ?x177 ?x932 ?x932 ?x932) ?x494 (* (- 1) (* r00 r00 ?x177)) (* (- 3) r) r00 (* (- 2) (* x00 ?x177)) (* r00 ?x177) ?x32 ?x539 (* r00 r00 ?x932 ?x932 ?x932) ?x1392 ?x603 (* (- 1) (* r00 ?x932 ?x932 ?x932)))))
 (let (($x359 (not (= ?x1166 1))))
 (let (($x547 (= (+ r (* (- 1) r00) ?x138 (* (- 2) x) (* 2 x00) ?x36) 0)))
 (let (($x1245 (and $x547 $x359)))
 (rewrite (= $x1245 $x516)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x362 (exists ((r Int) (x Int) )(! (let ((?x87 (* (- 1) r)))
 (let ((?x932 (+ x ?x87)))
 (let ((?x36 (* r00 r00)))
 (let ((?x603 (* (- 1) ?x36)))
 (let ((?x539 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x177 (+ 1 r)))
 (let ((?x1166 (+ (* 2 (* x00 ?x932 ?x932 ?x932)) (* (- 1) (* r00 ?x177 ?x177 ?x932 ?x932 ?x932)) (* (- 2) (* ?x177 ?x177 ?x932 ?x932 ?x932 ?x932)) (* ?x177 ?x177 ?x177) (* 2 (* ?x177 ?x932)) (* r00 r00 ?x177 ?x177 ?x932 ?x932 ?x932) (* ?x177 ?x177 ?x177 ?x932 ?x932 ?x932) (* (- 1) (* ?x177 ?x177 ?x932 ?x932 ?x932)) (* (- 1) (* ?x177 ?x177 ?x177 ?x177 ?x932 ?x932 ?x932)) (* ?x177 ?x932 ?x932 ?x932) (* (- 2) (* ?x932 ?x932 ?x932 ?x932)) (* (- 1) (* r00 r00 ?x177)) (* (- 3) r) r00 (* (- 2) (* x00 ?x177)) (* r00 ?x177) ?x32 ?x539 (* r00 r00 ?x932 ?x932 ?x932) (* 2 (* x00 ?x177 ?x177 ?x932 ?x932 ?x932)) ?x603 (* (- 1) (* r00 ?x932 ?x932 ?x932)))))
 (let (($x359 (not (= ?x1166 1))))
 (and (= (+ ?x87 r00 (* r r) ?x32 ?x539 ?x603) 0) $x359)))))))))) :qid k!26))
 ))
 (let ((?x1244 (lambda ((r Int) (x Int) )(let ((?x87 (* (- 1) r)))
 (let ((?x932 (+ x ?x87)))
 (let ((?x36 (* r00 r00)))
 (let ((?x603 (* (- 1) ?x36)))
 (let ((?x539 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x177 (+ 1 r)))
 (let ((?x1166 (+ (* 2 (* x00 ?x932 ?x932 ?x932)) (* (- 1) (* r00 ?x177 ?x177 ?x932 ?x932 ?x932)) (* (- 2) (* ?x177 ?x177 ?x932 ?x932 ?x932 ?x932)) (* ?x177 ?x177 ?x177) (* 2 (* ?x177 ?x932)) (* r00 r00 ?x177 ?x177 ?x932 ?x932 ?x932) (* ?x177 ?x177 ?x177 ?x932 ?x932 ?x932) (* (- 1) (* ?x177 ?x177 ?x932 ?x932 ?x932)) (* (- 1) (* ?x177 ?x177 ?x177 ?x177 ?x932 ?x932 ?x932)) (* ?x177 ?x932 ?x932 ?x932) (* (- 2) (* ?x932 ?x932 ?x932 ?x932)) (* (- 1) (* r00 r00 ?x177)) (* (- 3) r) r00 (* (- 2) (* x00 ?x177)) (* r00 ?x177) ?x32 ?x539 (* r00 r00 ?x932 ?x932 ?x932) (* 2 (* x00 ?x177 ?x177 ?x932 ?x932 ?x932)) ?x603 (* (- 1) (* r00 ?x932 ?x932 ?x932)))))
 (let (($x359 (not (= ?x1166 1))))
 (let ((?x35 (* 2 x00)))
 (let ((?x136 (* (- 2) x)))
 (let ((?x30 (* r r)))
 (let ((?x138 (* (- 1) ?x30)))
 (let ((?x137 (* (- 1) r00)))
 (let (($x1245 (and (= (+ r ?x137 ?x138 ?x136 ?x35 ?x36) 0) $x359)))
 (let (($x611 (and (= (+ ?x87 r00 ?x30 ?x32 ?x539 ?x603) 0) $x359)))
 (rewrite (= $x611 $x1245)))))))))))))))))))
 ))
 (let (($x82 (exists ((r Int) (x Int) )(! (let ((?x36 (* r00 r00)))
 (let ((?x41 (- x r)))
 (let ((?x43 (+ r 1)))
 (let ((?x35 (* 2 x00)))
 (let ((?x46 (- (* 2 ?x41 ?x41 ?x41 x00) (* ?x43 ?x43 r00 ?x41 ?x41 ?x41))))
 (let ((?x53 (+ (- ?x46 (* 2 ?x43 ?x43 ?x41 ?x41 ?x41 ?x41)) (* ?x43 ?x43 ?x43) (* 2 ?x43 ?x41) (* ?x43 ?x43 r00 r00 ?x41 ?x41 ?x41) (* 0 ?x43 ?x43) (* ?x43 ?x43 ?x43 ?x41 ?x41 ?x41))))
 (let ((?x57 (- (- ?x53 (* ?x43 ?x43 ?x41 ?x41 ?x41)) (* ?x43 ?x43 ?x43 ?x43 ?x41 ?x41 ?x41))))
 (let ((?x63 (- (- (+ ?x57 (* ?x43 ?x41 ?x41 ?x41)) (* 2 ?x41 ?x41 ?x41 ?x41)) (* ?x43 r00 r00))))
 (let ((?x70 (+ (- (+ (- ?x63 ?x43) r00) (* 2 ?x43 x00)) (* ?x43 r00) (* 2 ?x41))))
 (let ((?x74 (+ (- ?x70 ?x35) (* r00 r00 ?x41 ?x41 ?x41) (* 2 ?x43 ?x43 ?x41 ?x41 ?x41 x00))))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 (* r r) (* 2 x)) ?x35) ?x36)))
 (and (= ?x38 0) (or (not (= (- (- ?x74 ?x36) (* r00 ?x41 ?x41 ?x41)) 0))))))))))))))) :qid k!26))
 ))
 (let ((?x229 (lambda ((r Int) (x Int) )(let ((?x87 (* (- 1) r)))
 (let ((?x932 (+ x ?x87)))
 (let ((?x36 (* r00 r00)))
 (let ((?x603 (* (- 1) ?x36)))
 (let ((?x539 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x177 (+ 1 r)))
 (let ((?x1166 (+ (* 2 (* x00 ?x932 ?x932 ?x932)) (* (- 1) (* r00 ?x177 ?x177 ?x932 ?x932 ?x932)) (* (- 2) (* ?x177 ?x177 ?x932 ?x932 ?x932 ?x932)) (* ?x177 ?x177 ?x177) (* 2 (* ?x177 ?x932)) (* r00 r00 ?x177 ?x177 ?x932 ?x932 ?x932) (* ?x177 ?x177 ?x177 ?x932 ?x932 ?x932) (* (- 1) (* ?x177 ?x177 ?x932 ?x932 ?x932)) (* (- 1) (* ?x177 ?x177 ?x177 ?x177 ?x932 ?x932 ?x932)) (* ?x177 ?x932 ?x932 ?x932) (* (- 2) (* ?x932 ?x932 ?x932 ?x932)) (* (- 1) (* r00 r00 ?x177)) (* (- 3) r) r00 (* (- 2) (* x00 ?x177)) (* r00 ?x177) ?x32 ?x539 (* r00 r00 ?x932 ?x932 ?x932) (* 2 (* x00 ?x177 ?x177 ?x932 ?x932 ?x932)) ?x603 (* (- 1) (* r00 ?x932 ?x932 ?x932)))))
 (let (($x359 (not (= ?x1166 1))))
 (let (($x611 (and (= (+ ?x87 r00 (* r r) ?x32 ?x539 ?x603) 0) $x359)))
 (let ((?x41 (- x r)))
 (let ((?x43 (+ r 1)))
 (let ((?x35 (* 2 x00)))
 (let ((?x46 (- (* 2 ?x41 ?x41 ?x41 x00) (* ?x43 ?x43 r00 ?x41 ?x41 ?x41))))
 (let ((?x53 (+ (- ?x46 (* 2 ?x43 ?x43 ?x41 ?x41 ?x41 ?x41)) (* ?x43 ?x43 ?x43) (* 2 ?x43 ?x41) (* ?x43 ?x43 r00 r00 ?x41 ?x41 ?x41) (* 0 ?x43 ?x43) (* ?x43 ?x43 ?x43 ?x41 ?x41 ?x41))))
 (let ((?x57 (- (- ?x53 (* ?x43 ?x43 ?x41 ?x41 ?x41)) (* ?x43 ?x43 ?x43 ?x43 ?x41 ?x41 ?x41))))
 (let ((?x63 (- (- (+ ?x57 (* ?x43 ?x41 ?x41 ?x41)) (* 2 ?x41 ?x41 ?x41 ?x41)) (* ?x43 r00 r00))))
 (let ((?x70 (+ (- (+ (- ?x63 ?x43) r00) (* 2 ?x43 x00)) (* ?x43 r00) (* 2 ?x41))))
 (let ((?x74 (+ (- ?x70 ?x35) (* r00 r00 ?x41 ?x41 ?x41) (* 2 ?x43 ?x43 ?x41 ?x41 ?x41 x00))))
 (let (($x40 (= (- (- (+ (* (- 1) r) r00 (* r r) ?x32) ?x35) ?x36) 0)))
 (let (($x81 (and $x40 (or (not (= (- (- ?x74 ?x36) (* r00 ?x41 ?x41 ?x41)) 0))))))
 (rewrite (= $x81 $x611))))))))))))))))))))))))
 ))
 (let ((@x83 (asserted $x82)))
 (let ((@x1880 (mp (mp @x83 (quant-intro (proof-bind ?x229) (= $x82 $x362)) $x362) (rewrite (= $x362 $x362)) $x362)))
 (let ((@x532 (mp (mp @x1880 (quant-intro (proof-bind ?x1244) (= $x362 $x1886)) $x1886) (quant-intro (proof-bind ?x555) (= $x1886 $x548)) $x548)))
 (let ((@x667 (mp (mp~ @x532 (sk (~ $x548 $x480)) $x480) (rewrite (= $x480 $x1604)) $x1604)))
 (let ((@x750 (and-elim @x667 $x1597)))
 (let ((@x602 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1597) $x583)) @x750 $x583)))
 (let (($x585 (>= ?x1608 0)))
 (let ((@x1235 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1597) $x585)) @x750 $x585)))
 (let (($x1717 (not (>= ?x1550 0))))
 (let (($x228 (<= ?x1550 0)))
 (let ((@x608 (lemma ((_ th-lemma arith) (hypothesis (not $x228)) @x1235 @x602 @x1235 @x602 false) $x228)))
 (let ((@x582 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1528 (not $x228) $x1717)) (and-elim @x667 $x1558) (or (not $x228) $x1717))))
 ((_ th-lemma arith) (unit-resolution @x582 @x608 $x1717) @x1235 @x602 @x1235 @x602 false)))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 1
 :arith-assert-diseq        1
 :arith-assert-lower        19
 :arith-assert-upper        3
 :arith-conflicts           2
 :arith-eq-adapter          2
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             472
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    8
 :arith-num-rows            4
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              2
 :arith-row-summations      1
 :arith-tableau-max-columns 79
 :arith-tableau-max-rows    4
 :conflicts                 2
 :decisions                 1
 :del-clause                7
 :final-checks              4
 :max-memory                3.94
 :memory                    3.35
 :mk-bool-var               12
 :mk-clause                 7
 :num-allocs                1403988
 :num-checks                1
 :propagations              4
 :rlimit-count              8911
 :time                      0.01
 :total-time                0.02)
