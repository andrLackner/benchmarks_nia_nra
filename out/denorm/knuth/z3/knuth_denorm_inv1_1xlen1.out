unsat
((set-logic NIA)
(declare-fun q!3 () Int)
(declare-fun d!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x680 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 2 (* d!1 q!3)) (* (- 4) (* d!1 x!0)) (* 4 (* d!1 r!2)) (* (- 8) r!2) (* (- 1) (* d!1 d!1 q!3)))))
 (let (($x1433 (>= ?x680 0)))
 (let (($x1156 (= ?x680 0)))
 (let ((?x1230 (* d!1 d!1 q!3)))
 (let ((?x1191 (* 8 r!2)))
 (let ((?x279 (* r00 d00)))
 (let ((?x280 (* 4 ?x279)))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x1409 (+ ?x144 ?x192 ?x176 ?x242 ?x280 (* (- 2) (* d!1 q!3)) (* 4 (* d!1 x!0)) (* (- 4) (* d!1 r!2)) ?x1191 ?x1230)))
 (let ((?x166 (+ 4 q!3)))
 (let ((?x352 (+ 2 d!1)))
 (let ((?x784 (* ?x352 ?x352 ?x166 ?x1409 r!2)))
 (let (($x824 (= ?x784 0)))
 (let (($x1366 (not $x824)))
 (let ((?x1198 (+ (* 4 (* d!1 d!1 d!1 q!3 r!2 r!2)) (* 4 (* d!1 d!1 q!3 q!3 r!2)) (* (- 16) (* r00 d00 d!1 q!3 r!2)) (* d00 d00 q00 d!1 d!1 q!3 r!2) (* (- 2) (* d!1 d!1 d!1 q!3 q!3 r!2)) (* (- 16) (* r00 d00 q!3 r!2)) (* (- 16) (* d!1 q!3 r!2 r!2)) (* (- 16) (* d!1 d!1 q!3 x!0 r!2)) (* 32 (* r00 d!1 q!3 r!2)) (* (- 32) (* q!3 r!2 r!2)) (* 4 (* d00 d00 q00 d!1 q!3 r!2)) (* 8 (* d!1 d!1 q!3 r!2 r!2)) (* 16 (* d00 x00 q!3 r!2)) (* 4 (* d00 d00 q00 q!3 r!2)) (* (- 16) (* d!1 q!3 x!0 r!2)) (* 16 (* d00 x00 d!1 q!3 r!2)) (* 32 (* r00 q!3 r!2)) (* (- 8) (* d00 q00 q!3 r!2)) (* (- 8) (* d00 q00 d!1 q!3 r!2)) (* 4 (* d00 x00 d!1 d!1 q!3 r!2)) (* 8 (* d!1 q!3 q!3 r!2)) (* (- 4) (* d!1 d!1 d!1 q!3 x!0 r!2)) (* 8 (* r00 d!1 d!1 q!3 r!2)) (* (- 4) (* r00 d00 d!1 d!1 q!3 r!2)) (* (- 1) (* d!1 d!1 d!1 d!1 q!3 q!3 r!2)) (* (- 2) (* d00 q00 d!1 d!1 q!3 r!2)))))
 (let (($x423 (= ?x1198 0)))
 (let ((?x1134 (+ (- 4) q!3)))
 (let ((?x926 (* ?x1134 ?x352 ?x352 ?x1409 r!2)))
 (let (($x700 (= ?x926 0)))
 (let (($x350 (not $x700)))
 (let (($x785 (or $x350 (not $x423) (not (= (* (+ (- 8) q!3) ?x352 ?x352 ?x1409 r!2) 0)) $x1366)))
 (let (($x609 (and $x1156 $x785)))
 (let ((?x896 (+ ?x1191 ?x144 ?x192 ?x176 ?x242 ?x280 (* q!3 d!1 d!1) (* (- 2) (* q!3 d!1)) (* (- 4) (* r!2 d!1)) (* 4 (* x!0 d!1)))))
 (let ((?x1446 (+ (- 8) q!3)))
 (let ((?x807 (+ (* 4 (* q!3 r!2 r00 d00 d!1 d!1)) (* (- 1) (* q!3 r!2 d00 d00 q00 d!1 d!1)) (* 32 (* q!3 r!2 r!2)) (* (- 8) (* q!3 r!2 r00 d!1 d!1)) (* 16 (* q!3 r!2 r00 d00 d!1)) (* (- 32) (* q!3 r!2 r00 d!1)) (* 4 (* q!3 r!2 x!0 d!1 d!1 d!1)) (* 16 (* q!3 r!2 x!0 d!1)) (* (- 32) (* q!3 r!2 r00)) (* (- 4) (* q!3 r!2 d00 d00 q00)) (* (- 16) (* q!3 r!2 d00 x00)) (* (- 4) (* q!3 q!3 r!2 d!1 d!1)) (* (- 8) (* q!3 q!3 r!2 d!1)) (* 8 (* q!3 r!2 d00 q00)) (* 16 (* q!3 r!2 r!2 d!1)) (* 16 (* q!3 r!2 r00 d00)) (* (- 16) (* q!3 r!2 d00 x00 d!1)) (* (- 4) (* q!3 r!2 d00 x00 d!1 d!1)) (* 2 (* q!3 q!3 r!2 d!1 d!1 d!1)) (* (- 8) (* q!3 r!2 r!2 d!1 d!1)) (* q!3 q!3 r!2 d!1 d!1 d!1 d!1) (* (- 4) (* q!3 r!2 r!2 d!1 d!1 d!1)) (* (- 4) (* q!3 r!2 d00 d00 q00 d!1)) (* 16 (* q!3 r!2 x!0 d!1 d!1)) (* 8 (* q!3 r!2 d00 q00 d!1)) (* 2 (* q!3 r!2 d00 q00 d!1 d!1)))))
 (let (($x158 (or (not (= (* ?x1134 ?x352 ?x352 ?x896 r!2) 0)) (not (= ?x807 0)) (not (= (* ?x352 ?x352 ?x166 ?x896 r!2) 0)) (not (= (* ?x1446 ?x352 ?x352 ?x896 r!2) 0)))))
 (let (($x1334 (and (= ?x896 0) $x158)))
 (let (($x159 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x598 (* 4 (* x d))))
 (let ((?x1114 (* r d)))
 (let ((?x1117 (* (- 4) ?x1114)))
 (let ((?x1086 (* (- 2) (* q d))))
 (let ((?x1085 (* q d d)))
 (let ((?x279 (* r00 d00)))
 (let ((?x280 (* 4 ?x279)))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x173 (* 8 r)))
 (let ((?x1212 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1085 ?x1086 ?x1117 ?x598)))
 (let ((?x1355 (+ 2 d)))
 (let ((?x1407 (+ (- 8) q)))
 (let ((?x1457 (* 2 (* q r d00 q00 d d))))
 (let ((?x1331 (* (- 4) (* q r r d d d))))
 (let ((?x1327 (* q q r d d d d)))
 (let ((?x1297 (* (- 8) (* q r r d d))))
 (let ((?x1265 (* 2 (* q q r d d d))))
 (let ((?x298 (* (- 4) (* q r d00 x00 d d))))
 (let ((?x1201 (* 16 (* q r r00 d00))))
 (let ((?x1199 (* 16 (* q r r d))))
 (let ((?x1187 (* 8 (* q r d00 q00))))
 (let ((?x1185 (* (- 8) (* q q r d))))
 (let ((?x1183 (* (- 4) (* q q r d d))))
 (let ((?x1179 (* (- 16) (* q r d00 x00))))
 (let ((?x1148 (* (- 4) (* q r d00 d00 q00))))
 (let ((?x1128 (* (- 32) (* q r r00))))
 (let ((?x1398 (* 16 (* q r x d))))
 (let ((?x643 (* 4 (* q r x d d d))))
 (let ((?x368 (* (- 8) (* q r r00 d d))))
 (let ((?x294 (* 32 (* q r r))))
 (let ((?x240 (* (- 1) (* q r d00 d00 q00 d d))))
 (let ((?x156 (* 4 (* q r r00 d00 d d))))
 (let ((?x344 (+ ?x156 ?x240 ?x294 ?x368 (* 16 (* q r r00 d00 d)) (* (- 32) (* q r r00 d)) ?x643 ?x1398 ?x1128 ?x1148 ?x1179 ?x1183 ?x1185 ?x1187 ?x1199 ?x1201 (* (- 16) (* q r d00 x00 d)) ?x298 ?x1265 ?x1297 ?x1327 ?x1331 (* (- 4) (* q r d00 d00 q00 d)) (* 16 (* q r x d d)) (* 8 (* q r d00 q00 d)) ?x1457)))
 (let (($x172 (or (not (= (* (+ (- 4) q) ?x1355 ?x1355 ?x1212 r) 0)) (not (= ?x344 0)) (not (= (* ?x1355 ?x1355 (+ 4 q) ?x1212 r) 0)) (not (= (* ?x1407 ?x1355 ?x1355 ?x1212 r) 0)))))
 (let (($x184 (= ?x1212 0)))
 (and $x184 $x172)))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x283 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x598 (* 4 (* x d))))
 (let ((?x1114 (* r d)))
 (let ((?x1117 (* (- 4) ?x1114)))
 (let ((?x1086 (* (- 2) (* q d))))
 (let ((?x1085 (* q d d)))
 (let ((?x1387 (* 8 d)))
 (let ((?x279 (* r00 d00)))
 (let ((?x280 (* 4 ?x279)))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x173 (* 8 r)))
 (let ((?x766 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1387 (* (- 4) (* d 2)) ?x1085 ?x1086 ?x1117 ?x598)))
 (let ((?x1355 (+ 2 d)))
 (let ((?x1392 (+ (- 4) q)))
 (let ((?x1396 (* 16 d)))
 (let ((?x1217 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1396 (* (- 8) (* d 2)) ?x1085 ?x1086 ?x1117 ?x598)))
 (let ((?x1407 (+ (- 8) q)))
 (let ((?x1351 (* 2 (* d 4))))
 (let ((?x1338 (* (- 8) d)))
 (let ((?x1356 (+ 4 q)))
 (let ((?x435 (* ?x1355 ?x1355 ?x1356 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1338 ?x1085 ?x1086 ?x1117 ?x1351 ?x598) r)))
 (let ((?x1457 (* 2 (* q r d00 q00 d d))))
 (let ((?x1331 (* (- 4) (* q r r d d d))))
 (let ((?x1327 (* q q r d d d d)))
 (let ((?x298 (* (- 4) (* q r d00 x00 d d))))
 (let ((?x1201 (* 16 (* q r r00 d00))))
 (let ((?x1187 (* 8 (* q r d00 q00))))
 (let ((?x1185 (* (- 8) (* q q r d))))
 (let ((?x1179 (* (- 16) (* q r d00 x00))))
 (let ((?x1148 (* (- 4) (* q r d00 d00 q00))))
 (let ((?x1128 (* (- 32) (* q r r00))))
 (let ((?x1398 (* 16 (* q r x d))))
 (let ((?x643 (* 4 (* q r x d d d))))
 (let ((?x368 (* (- 8) (* q r r00 d d))))
 (let ((?x294 (* 32 (* q r r))))
 (let ((?x240 (* (- 1) (* q r d00 d00 q00 d d))))
 (let ((?x156 (* 4 (* q r r00 d00 d d))))
 (let ((?x625 (+ (* 2 (* d ?x242 r q)) ?x156 ?x240 ?x294 (* 2 (* d ?x176 r q)) ?x368 (* 8 (* q r r00 d00 d)) (* 2 (* d ?x144 r q)) (* 2 (* d ?x173 r q)) (* (- 16) (* q r r00 d)) (* 2 (* d ?x1117 r q)) (* 2 (* d ?x598 r q)) (* 2 (* d ?x1086 r q)) ?x643 ?x1398 (* 2 (* d ?x1085 r q)) ?x1128 ?x1148 ?x1179 ?x1185 ?x1187 ?x1201 (* 2 (* d ?x192 r q)) (* (- 8) (* q r d00 x00 d)) ?x298 (* 2 (* d ?x280 r q)) ?x1327 ?x1331 (* (- 2) (* q r d00 d00 q00 d)) (* 8 (* q r x d d)) (* 4 (* q r d00 q00 d)) ?x1457)))
 (let (($x686 (or (not (= ?x625 0)) (not (= ?x435 0)) (not (= (* ?x1407 ?x1355 ?x1355 ?x1217 r) 0)) (not (= (* ?x1392 ?x1355 ?x1355 ?x766 r) 0)))))
 (let ((?x1212 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1085 ?x1086 ?x1117 ?x598)))
 (let (($x184 (= ?x1212 0)))
 (and $x184 $x686))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x937 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x598 (* 4 (* x d))))
 (let ((?x1114 (* r d)))
 (let ((?x1117 (* (- 4) ?x1114)))
 (let ((?x1086 (* (- 2) (* q d))))
 (let ((?x1085 (* q d d)))
 (let ((?x279 (* r00 d00)))
 (let ((?x280 (* 4 ?x279)))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x173 (* 8 r)))
 (let ((?x1212 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1085 ?x1086 ?x1117 ?x598)))
 (let ((?x1355 (+ 2 d)))
 (let ((?x1407 (+ (- 8) q)))
 (let ((?x1457 (* 2 (* q r d00 q00 d d))))
 (let ((?x1331 (* (- 4) (* q r r d d d))))
 (let ((?x1327 (* q q r d d d d)))
 (let ((?x1297 (* (- 8) (* q r r d d))))
 (let ((?x1265 (* 2 (* q q r d d d))))
 (let ((?x298 (* (- 4) (* q r d00 x00 d d))))
 (let ((?x1201 (* 16 (* q r r00 d00))))
 (let ((?x1199 (* 16 (* q r r d))))
 (let ((?x1187 (* 8 (* q r d00 q00))))
 (let ((?x1185 (* (- 8) (* q q r d))))
 (let ((?x1183 (* (- 4) (* q q r d d))))
 (let ((?x1179 (* (- 16) (* q r d00 x00))))
 (let ((?x1148 (* (- 4) (* q r d00 d00 q00))))
 (let ((?x1128 (* (- 32) (* q r r00))))
 (let ((?x1398 (* 16 (* q r x d))))
 (let ((?x643 (* 4 (* q r x d d d))))
 (let ((?x368 (* (- 8) (* q r r00 d d))))
 (let ((?x294 (* 32 (* q r r))))
 (let ((?x240 (* (- 1) (* q r d00 d00 q00 d d))))
 (let ((?x156 (* 4 (* q r r00 d00 d d))))
 (let ((?x344 (+ ?x156 ?x240 ?x294 ?x368 (* 16 (* q r r00 d00 d)) (* (- 32) (* q r r00 d)) ?x643 ?x1398 ?x1128 ?x1148 ?x1179 ?x1183 ?x1185 ?x1187 ?x1199 ?x1201 (* (- 16) (* q r d00 x00 d)) ?x298 ?x1265 ?x1297 ?x1327 ?x1331 (* (- 4) (* q r d00 d00 q00 d)) (* 16 (* q r x d d)) (* 8 (* q r d00 q00 d)) ?x1457)))
 (let (($x172 (or (not (= (* (+ (- 4) q) ?x1355 ?x1355 ?x1212 r) 0)) (not (= ?x344 0)) (not (= (* ?x1355 ?x1355 (+ 4 q) ?x1212 r) 0)) (not (= (* ?x1407 ?x1355 ?x1355 ?x1212 r) 0)))))
 (let (($x184 (= ?x1212 0)))
 (let (($x178 (and $x184 $x172)))
 (let ((?x1387 (* 8 d)))
 (let ((?x766 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1387 (* (- 4) (* d 2)) ?x1085 ?x1086 ?x1117 ?x598)))
 (let ((?x1392 (+ (- 4) q)))
 (let ((?x1396 (* 16 d)))
 (let ((?x1217 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1396 (* (- 8) (* d 2)) ?x1085 ?x1086 ?x1117 ?x598)))
 (let ((?x1351 (* 2 (* d 4))))
 (let ((?x1338 (* (- 8) d)))
 (let ((?x1356 (+ 4 q)))
 (let ((?x435 (* ?x1355 ?x1355 ?x1356 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1338 ?x1085 ?x1086 ?x1117 ?x1351 ?x598) r)))
 (let ((?x625 (+ (* 2 (* d ?x242 r q)) ?x156 ?x240 ?x294 (* 2 (* d ?x176 r q)) ?x368 (* 8 (* q r r00 d00 d)) (* 2 (* d ?x144 r q)) (* 2 (* d ?x173 r q)) (* (- 16) (* q r r00 d)) (* 2 (* d ?x1117 r q)) (* 2 (* d ?x598 r q)) (* 2 (* d ?x1086 r q)) ?x643 ?x1398 (* 2 (* d ?x1085 r q)) ?x1128 ?x1148 ?x1179 ?x1185 ?x1187 ?x1201 (* 2 (* d ?x192 r q)) (* (- 8) (* q r d00 x00 d)) ?x298 (* 2 (* d ?x280 r q)) ?x1327 ?x1331 (* (- 2) (* q r d00 d00 q00 d)) (* 8 (* q r x d d)) (* 4 (* q r d00 q00 d)) ?x1457)))
 (let (($x686 (or (not (= ?x625 0)) (not (= ?x435 0)) (not (= (* ?x1407 ?x1355 ?x1355 ?x1217 r) 0)) (not (= (* ?x1392 ?x1355 ?x1355 ?x766 r) 0)))))
 (let (($x1361 (and $x184 $x686)))
 (rewrite (= $x1361 $x178)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x287 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x963 (* 4 (* d00 r00))))
 (let ((?x1355 (+ 2 d)))
 (let ((?x1169 (* ?x1355 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x457 (* 4 (* ?x1355 r))))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x530 (* (- 8) x)))
 (let ((?x389 (* 16 r)))
 (let ((?x1173 (+ (- 32) ?x389 ?x530 ?x30 (* (- 16) d) ?x144 ?x457 ?x176 ?x192 (* (+ (- 8) q) ?x1355 ?x1355) (* (- 2) (* (+ (- 8) q) ?x1355)) ?x242 (* (- 4) ?x1169) ?x963)))
 (let ((?x1407 (+ (- 8) q)))
 (let (($x1101 (not (= (* ?x1407 ?x1355 ?x1355 ?x1173 r) 0))))
 (let ((?x314 (* ?x1355 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x1338 (* (- 8) d)))
 (let ((?x337 (+ (- 16) ?x389 ?x530 ?x30 ?x1338 ?x144 ?x457 ?x176 ?x192 (* (+ (- 4) q) ?x1355 ?x1355) (* (- 2) (* (+ (- 4) q) ?x1355)) ?x242 (* (- 4) ?x314) ?x963)))
 (let ((?x1392 (+ (- 4) q)))
 (let (($x354 (not (= (* ?x1392 ?x1355 ?x1355 ?x337 r) 0))))
 (let ((?x605 (+ ?x389 ?x530 ?x30 ?x144 ?x457 ?x176 ?x192 (* ?x1355 ?x1355 q) (* (- 2) (* ?x1355 q)) ?x242 (* (- 4) (* ?x1355 (+ (* 2 r) (* (- 1) x) q))) ?x963)))
 (let (($x267 (not (= (* ?x1355 ?x1355 ?x605 r q) 0))))
 (let ((?x274 (* (- 4) (* ?x1355 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x1387 (* 8 d)))
 (let ((?x275 (+ 16 ?x389 ?x530 ?x30 ?x1387 ?x144 ?x457 ?x176 ?x192 (* ?x1355 ?x1355 (+ 4 q)) (* (- 2) (* ?x1355 (+ 4 q))) ?x242 ?x274 ?x963)))
 (let ((?x1356 (+ 4 q)))
 (let (($x157 (not (= (* ?x1355 ?x1355 ?x1356 ?x275 r) 0))))
 (let ((?x598 (* 4 (* x d))))
 (let ((?x173 (* 8 r)))
 (let ((?x148 (+ ?x173 ?x144 ?x598 ?x176 ?x192 (* d d q) (* (- 2) (* d q)) ?x242 (* (- 4) (* d r)) ?x963)))
 (let (($x150 (= ?x148 0)))
 (and $x150 (or $x157 $x267 $x354 $x1101))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x677 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x598 (* 4 (* x d))))
 (let ((?x1114 (* r d)))
 (let ((?x1117 (* (- 4) ?x1114)))
 (let ((?x1086 (* (- 2) (* q d))))
 (let ((?x1085 (* q d d)))
 (let ((?x1387 (* 8 d)))
 (let ((?x279 (* r00 d00)))
 (let ((?x280 (* 4 ?x279)))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x173 (* 8 r)))
 (let ((?x766 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1387 (* (- 4) (* d 2)) ?x1085 ?x1086 ?x1117 ?x598)))
 (let ((?x1355 (+ 2 d)))
 (let ((?x1392 (+ (- 4) q)))
 (let ((?x1396 (* 16 d)))
 (let ((?x1217 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1396 (* (- 8) (* d 2)) ?x1085 ?x1086 ?x1117 ?x598)))
 (let ((?x1407 (+ (- 8) q)))
 (let ((?x1351 (* 2 (* d 4))))
 (let ((?x1338 (* (- 8) d)))
 (let ((?x1356 (+ 4 q)))
 (let ((?x435 (* ?x1355 ?x1355 ?x1356 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1338 ?x1085 ?x1086 ?x1117 ?x1351 ?x598) r)))
 (let ((?x1457 (* 2 (* q r d00 q00 d d))))
 (let ((?x1331 (* (- 4) (* q r r d d d))))
 (let ((?x1327 (* q q r d d d d)))
 (let ((?x298 (* (- 4) (* q r d00 x00 d d))))
 (let ((?x1201 (* 16 (* q r r00 d00))))
 (let ((?x1187 (* 8 (* q r d00 q00))))
 (let ((?x1185 (* (- 8) (* q q r d))))
 (let ((?x1179 (* (- 16) (* q r d00 x00))))
 (let ((?x1148 (* (- 4) (* q r d00 d00 q00))))
 (let ((?x1128 (* (- 32) (* q r r00))))
 (let ((?x1398 (* 16 (* q r x d))))
 (let ((?x643 (* 4 (* q r x d d d))))
 (let ((?x368 (* (- 8) (* q r r00 d d))))
 (let ((?x294 (* 32 (* q r r))))
 (let ((?x240 (* (- 1) (* q r d00 d00 q00 d d))))
 (let ((?x156 (* 4 (* q r r00 d00 d d))))
 (let ((?x625 (+ (* 2 (* d ?x242 r q)) ?x156 ?x240 ?x294 (* 2 (* d ?x176 r q)) ?x368 (* 8 (* q r r00 d00 d)) (* 2 (* d ?x144 r q)) (* 2 (* d ?x173 r q)) (* (- 16) (* q r r00 d)) (* 2 (* d ?x1117 r q)) (* 2 (* d ?x598 r q)) (* 2 (* d ?x1086 r q)) ?x643 ?x1398 (* 2 (* d ?x1085 r q)) ?x1128 ?x1148 ?x1179 ?x1185 ?x1187 ?x1201 (* 2 (* d ?x192 r q)) (* (- 8) (* q r d00 x00 d)) ?x298 (* 2 (* d ?x280 r q)) ?x1327 ?x1331 (* (- 2) (* q r d00 d00 q00 d)) (* 8 (* q r x d d)) (* 4 (* q r d00 q00 d)) ?x1457)))
 (let (($x686 (or (not (= ?x625 0)) (not (= ?x435 0)) (not (= (* ?x1407 ?x1355 ?x1355 ?x1217 r) 0)) (not (= (* ?x1392 ?x1355 ?x1355 ?x766 r) 0)))))
 (let ((?x1212 (+ ?x173 ?x144 ?x192 ?x176 ?x242 ?x280 ?x1085 ?x1086 ?x1117 ?x598)))
 (let (($x184 (= ?x1212 0)))
 (let (($x1361 (and $x184 $x686)))
 (let ((?x963 (* 4 (* d00 r00))))
 (let ((?x1169 (* ?x1355 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x457 (* 4 (* ?x1355 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x530 (* (- 8) x)))
 (let ((?x389 (* 16 r)))
 (let ((?x1173 (+ (- 32) ?x389 ?x530 ?x30 (* (- 16) d) ?x144 ?x457 ?x176 ?x192 (* ?x1407 ?x1355 ?x1355) (* (- 2) (* ?x1407 ?x1355)) ?x242 (* (- 4) ?x1169) ?x963)))
 (let (($x1101 (not (= (* ?x1407 ?x1355 ?x1355 ?x1173 r) 0))))
 (let ((?x314 (* ?x1355 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x337 (+ (- 16) ?x389 ?x530 ?x30 ?x1338 ?x144 ?x457 ?x176 ?x192 (* ?x1392 ?x1355 ?x1355) (* (- 2) (* ?x1392 ?x1355)) ?x242 (* (- 4) ?x314) ?x963)))
 (let (($x354 (not (= (* ?x1392 ?x1355 ?x1355 ?x337 r) 0))))
 (let ((?x605 (+ ?x389 ?x530 ?x30 ?x144 ?x457 ?x176 ?x192 (* ?x1355 ?x1355 q) (* (- 2) (* ?x1355 q)) ?x242 (* (- 4) (* ?x1355 (+ (* 2 r) (* (- 1) x) q))) ?x963)))
 (let (($x267 (not (= (* ?x1355 ?x1355 ?x605 r q) 0))))
 (let ((?x274 (* (- 4) (* ?x1355 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x275 (+ 16 ?x389 ?x530 ?x30 ?x1387 ?x144 ?x457 ?x176 ?x192 (* ?x1355 ?x1355 ?x1356) (* (- 2) (* ?x1355 ?x1356)) ?x242 ?x274 ?x963)))
 (let (($x157 (not (= (* ?x1355 ?x1355 ?x1356 ?x275 r) 0))))
 (let ((?x148 (+ ?x173 ?x144 ?x598 ?x176 ?x192 (* d d q) (* (- 2) (* d q)) ?x242 (* (- 4) (* d r)) ?x963)))
 (let (($x150 (= ?x148 0)))
 (let (($x497 (and $x150 (or $x157 $x267 $x354 $x1101))))
 (rewrite (= $x497 $x1361)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x342 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x963 (* 4 (* d00 r00))))
 (let ((?x1355 (+ 2 d)))
 (let ((?x314 (* ?x1355 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x457 (* 4 (* ?x1355 r))))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x1338 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x530 (* (- 8) x)))
 (let ((?x389 (* 16 r)))
 (let ((?x337 (+ (- 16) ?x389 ?x530 ?x30 ?x1338 ?x144 ?x457 ?x176 ?x192 (* (+ (- 4) q) ?x1355 ?x1355) (* (- 2) (* (+ (- 4) q) ?x1355)) ?x242 (* (- 4) ?x314) ?x963)))
 (let ((?x1392 (+ (- 4) q)))
 (let (($x354 (not (= (* ?x1392 ?x1355 ?x1355 ?x337 r) 0))))
 (let ((?x1169 (* ?x1355 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x1173 (+ (- 32) ?x389 ?x530 ?x30 (* (- 16) d) ?x144 ?x457 ?x176 ?x192 (* (+ (- 8) q) ?x1355 ?x1355) (* (- 2) (* (+ (- 8) q) ?x1355)) ?x242 (* (- 4) ?x1169) ?x963)))
 (let ((?x1407 (+ (- 8) q)))
 (let (($x1101 (not (= (* ?x1407 ?x1355 ?x1355 ?x1173 r) 0))))
 (let ((?x274 (* (- 4) (* ?x1355 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x1387 (* 8 d)))
 (let ((?x275 (+ 16 ?x389 ?x530 ?x30 ?x1387 ?x144 ?x457 ?x176 ?x192 (* ?x1355 ?x1355 (+ 4 q)) (* (- 2) (* ?x1355 (+ 4 q))) ?x242 ?x274 ?x963)))
 (let ((?x1356 (+ 4 q)))
 (let (($x157 (not (= (* ?x1355 ?x1355 ?x1356 ?x275 r) 0))))
 (let ((?x605 (+ ?x389 ?x530 ?x30 ?x144 ?x457 ?x176 ?x192 (* ?x1355 ?x1355 q) (* (- 2) (* ?x1355 q)) ?x242 (* (- 4) (* ?x1355 (+ (* 2 r) (* (- 1) x) q))) ?x963)))
 (let (($x267 (not (= (* ?x1355 ?x1355 ?x605 r q) 0))))
 (let ((?x598 (* 4 (* x d))))
 (let ((?x173 (* 8 r)))
 (let ((?x148 (+ ?x173 ?x144 ?x598 ?x176 ?x192 (* d d q) (* (- 2) (* d q)) ?x242 (* (- 4) (* d r)) ?x963)))
 (let (($x150 (= ?x148 0)))
 (and $x150 (or $x267 $x157 $x1101 $x354))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x494 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x963 (* 4 (* d00 r00))))
 (let ((?x1355 (+ 2 d)))
 (let ((?x1169 (* ?x1355 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x457 (* 4 (* ?x1355 r))))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x530 (* (- 8) x)))
 (let ((?x389 (* 16 r)))
 (let ((?x1173 (+ (- 32) ?x389 ?x530 ?x30 (* (- 16) d) ?x144 ?x457 ?x176 ?x192 (* (+ (- 8) q) ?x1355 ?x1355) (* (- 2) (* (+ (- 8) q) ?x1355)) ?x242 (* (- 4) ?x1169) ?x963)))
 (let ((?x1407 (+ (- 8) q)))
 (let (($x1101 (not (= (* ?x1407 ?x1355 ?x1355 ?x1173 r) 0))))
 (let ((?x314 (* ?x1355 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x1338 (* (- 8) d)))
 (let ((?x337 (+ (- 16) ?x389 ?x530 ?x30 ?x1338 ?x144 ?x457 ?x176 ?x192 (* (+ (- 4) q) ?x1355 ?x1355) (* (- 2) (* (+ (- 4) q) ?x1355)) ?x242 (* (- 4) ?x314) ?x963)))
 (let ((?x1392 (+ (- 4) q)))
 (let (($x354 (not (= (* ?x1392 ?x1355 ?x1355 ?x337 r) 0))))
 (let ((?x605 (+ ?x389 ?x530 ?x30 ?x144 ?x457 ?x176 ?x192 (* ?x1355 ?x1355 q) (* (- 2) (* ?x1355 q)) ?x242 (* (- 4) (* ?x1355 (+ (* 2 r) (* (- 1) x) q))) ?x963)))
 (let (($x267 (not (= (* ?x1355 ?x1355 ?x605 r q) 0))))
 (let ((?x274 (* (- 4) (* ?x1355 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x1387 (* 8 d)))
 (let ((?x275 (+ 16 ?x389 ?x530 ?x30 ?x1387 ?x144 ?x457 ?x176 ?x192 (* ?x1355 ?x1355 (+ 4 q)) (* (- 2) (* ?x1355 (+ 4 q))) ?x242 ?x274 ?x963)))
 (let ((?x1356 (+ 4 q)))
 (let (($x157 (not (= (* ?x1355 ?x1355 ?x1356 ?x275 r) 0))))
 (let ((?x598 (* 4 (* x d))))
 (let ((?x173 (* 8 r)))
 (let ((?x148 (+ ?x173 ?x144 ?x598 ?x176 ?x192 (* d d q) (* (- 2) (* d q)) ?x242 (* (- 4) (* d r)) ?x963)))
 (let (($x150 (= ?x148 0)))
 (let (($x497 (and $x150 (or $x157 $x267 $x354 $x1101))))
 (let (($x356 (and $x150 (or $x267 $x157 $x1101 $x354))))
 (rewrite (= $x356 $x497))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x137 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x123 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x117 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let (($x133 (= (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) ?x62 ?x62 ?x123 r) 0)))
 (let ((?x103 (- q 4)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x32 (* 8 r00)))
 (let ((?x99 (- (* 8 (- (- (+ (- (* 2 r) x) q) d) 2)) ?x32)))
 (let ((?x107 (- (+ (- (- (+ ?x99 ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x103)) (* 2 ?x62 ?x103))))
 (let ((?x110 (- (+ ?x107 ?x49) (* 4 ?x62 (- (- (+ (- (* 2 r) x) q) d) 2)))))
 (let ((?x83 (- (+ (- (* 8 (+ (- (* 2 r) x) q)) ?x32) ?x63) ?x39)))
 (let ((?x89 (+ (- (+ (- ?x83 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x93 (* (+ (- ?x89 (* 4 ?x62 (+ (- (* 2 r) x) q))) ?x53) ?x62 ?x62 q r)))
 (let ((?x67 (+ q 4)))
 (let ((?x64 (+ (- (* 8 (+ (- (* 2 r) x) q d 2)) ?x32) ?x63)))
 (let ((?x71 (- (+ (- (- ?x64 ?x39) ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67))))
 (let ((?x74 (- (+ ?x71 ?x49) (* 4 ?x62 (+ (- (* 2 r) x) q d 2)))))
 (let (($x135 (or (not (= (* (+ ?x74 ?x53) ?x62 ?x62 ?x67 r) 0)) (not (= ?x93 0)) (not (= (* (+ ?x110 ?x53) ?x62 ?x62 ?x103 r) 0)) (not $x133))))
 (let ((?x44 (* d d q)))
 (let ((?x45 (+ (- (- (+ (- (* 8 r) ?x32) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (and (= ?x54 0) $x135)))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x479 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x963 (* 4 (* d00 r00))))
 (let ((?x247 (+ 2 d)))
 (let ((?x272 (* ?x247 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x573 (* 4 (* ?x247 r))))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x434 (* (- 8) d)))
 (let ((?x473 (* 8 q)))
 (let ((?x530 (* (- 8) x)))
 (let ((?x799 (* 16 r)))
 (let ((?x1166 (+ (- 16) ?x799 ?x530 ?x473 ?x434 ?x144 ?x573 ?x176 ?x192 (* (+ (- 4) q) ?x247 ?x247) (* (- 2) (* (+ (- 4) q) ?x247)) ?x242 (* (- 4) ?x272) ?x963)))
 (let ((?x1075 (+ (- 4) q)))
 (let ((?x1255 (* ?x247 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x1440 (+ (- 32) ?x799 ?x530 ?x473 (* (- 16) d) ?x144 ?x573 ?x176 ?x192 (* (+ (- 8) q) ?x247 ?x247) (* (- 2) (* (+ (- 8) q) ?x247)) ?x242 (* (- 4) ?x1255) ?x963)))
 (let ((?x1305 (+ (- 8) q)))
 (let ((?x425 (* (- 4) (* ?x247 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x173 (* 8 d)))
 (let ((?x809 (+ 16 ?x799 ?x530 ?x473 ?x173 ?x144 ?x573 ?x176 ?x192 (* ?x247 ?x247 (+ 4 q)) (* (- 2) (* ?x247 (+ 4 q))) ?x242 ?x425 ?x963)))
 (let ((?x331 (+ 4 q)))
 (let ((?x1304 (+ ?x799 ?x530 ?x473 ?x144 ?x573 ?x176 ?x192 (* ?x247 ?x247 q) (* (- 2) (* ?x247 q)) ?x242 (* (- 4) (* ?x247 (+ (* 2 r) (* (- 1) x) q))) ?x963)))
 (let (($x147 (or (not (= (* ?x247 ?x247 ?x1304 r q) 0)) (not (= (* ?x247 ?x247 ?x331 ?x809 r) 0)) (not (= (* ?x1305 ?x247 ?x247 ?x1440 r) 0)) (not (= (* ?x1075 ?x247 ?x247 ?x1166 r) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x756 (+ ?x30 ?x144 (* 4 (* x d)) ?x176 ?x192 ?x44 (* (- 2) (* d q)) ?x242 (* (- 4) (* d r)) ?x963)))
 (and (= ?x756 0) $x147)))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x502 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x963 (* 4 (* d00 r00))))
 (let ((?x247 (+ 2 d)))
 (let ((?x272 (* ?x247 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x241 (* d00 q00)))
 (let ((?x242 (* 2 ?x241)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x192 (* (- 1) ?x41)))
 (let ((?x162 (* d00 x00)))
 (let ((?x176 (* (- 4) ?x162)))
 (let ((?x573 (* 4 (* ?x247 r))))
 (let ((?x144 (* (- 8) r00)))
 (let ((?x434 (* (- 8) d)))
 (let ((?x473 (* 8 q)))
 (let ((?x530 (* (- 8) x)))
 (let ((?x799 (* 16 r)))
 (let ((?x1166 (+ (- 16) ?x799 ?x530 ?x473 ?x434 ?x144 ?x573 ?x176 ?x192 (* (+ (- 4) q) ?x247 ?x247) (* (- 2) (* (+ (- 4) q) ?x247)) ?x242 (* (- 4) ?x272) ?x963)))
 (let ((?x1075 (+ (- 4) q)))
 (let ((?x1255 (* ?x247 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x1440 (+ (- 32) ?x799 ?x530 ?x473 (* (- 16) d) ?x144 ?x573 ?x176 ?x192 (* (+ (- 8) q) ?x247 ?x247) (* (- 2) (* (+ (- 8) q) ?x247)) ?x242 (* (- 4) ?x1255) ?x963)))
 (let ((?x1305 (+ (- 8) q)))
 (let ((?x425 (* (- 4) (* ?x247 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x173 (* 8 d)))
 (let ((?x809 (+ 16 ?x799 ?x530 ?x473 ?x173 ?x144 ?x573 ?x176 ?x192 (* ?x247 ?x247 (+ 4 q)) (* (- 2) (* ?x247 (+ 4 q))) ?x242 ?x425 ?x963)))
 (let ((?x331 (+ 4 q)))
 (let ((?x1304 (+ ?x799 ?x530 ?x473 ?x144 ?x573 ?x176 ?x192 (* ?x247 ?x247 q) (* (- 2) (* ?x247 q)) ?x242 (* (- 4) (* ?x247 (+ (* 2 r) (* (- 1) x) q))) ?x963)))
 (let (($x147 (or (not (= (* ?x247 ?x247 ?x1304 r q) 0)) (not (= (* ?x247 ?x247 ?x331 ?x809 r) 0)) (not (= (* ?x1305 ?x247 ?x247 ?x1440 r) 0)) (not (= (* ?x1075 ?x247 ?x247 ?x1166 r) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x756 (+ ?x30 ?x144 (* 4 (* x d)) ?x176 ?x192 ?x44 (* (- 2) (* d q)) ?x242 (* (- 4) (* d r)) ?x963)))
 (let (($x886 (and (= ?x756 0) $x147)))
 (let ((?x123 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x117 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let (($x133 (= (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) ?x62 ?x62 ?x123 r) 0)))
 (let ((?x103 (- q 4)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x32 (* 8 r00)))
 (let ((?x99 (- (* 8 (- (- (+ (- (* 2 r) x) q) d) 2)) ?x32)))
 (let ((?x107 (- (+ (- (- (+ ?x99 ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x103)) (* 2 ?x62 ?x103))))
 (let ((?x110 (- (+ ?x107 ?x49) (* 4 ?x62 (- (- (+ (- (* 2 r) x) q) d) 2)))))
 (let ((?x83 (- (+ (- (* 8 (+ (- (* 2 r) x) q)) ?x32) ?x63) ?x39)))
 (let ((?x89 (+ (- (+ (- ?x83 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x93 (* (+ (- ?x89 (* 4 ?x62 (+ (- (* 2 r) x) q))) ?x53) ?x62 ?x62 q r)))
 (let ((?x67 (+ q 4)))
 (let ((?x64 (+ (- (* 8 (+ (- (* 2 r) x) q d 2)) ?x32) ?x63)))
 (let ((?x71 (- (+ (- (- ?x64 ?x39) ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67))))
 (let ((?x74 (- (+ ?x71 ?x49) (* 4 ?x62 (+ (- (* 2 r) x) q d 2)))))
 (let (($x135 (or (not (= (* (+ ?x74 ?x53) ?x62 ?x62 ?x67 r) 0)) (not (= ?x93 0)) (not (= (* (+ ?x110 ?x53) ?x62 ?x62 ?x103 r) 0)) (not $x133))))
 (let ((?x48 (- (+ (- (- (+ (- ?x30 ?x32) (* 4 d x)) ?x39) ?x41) ?x44) (* 2 d q))))
 (let (($x136 (and (= (+ (- (+ ?x48 ?x49) (* 4 d r)) ?x53) 0) $x135)))
 (rewrite (= $x136 $x886))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x372 (trans (quant-intro (proof-bind ?x502) (= $x137 $x479)) (elim-unused (= $x479 $x342)) (= $x137 $x342))))
 (let ((@x27 (asserted $x137)))
 (let ((@x1324 (mp (mp @x27 @x372 $x342) (quant-intro (proof-bind ?x494) (= $x342 $x287)) $x287)))
 (let ((@x933 (mp (mp @x1324 (rewrite (= $x287 $x287)) $x287) (quant-intro (proof-bind ?x677) (= $x287 $x283)) $x283)))
 (let ((@x409 (mp~ (mp @x933 (quant-intro (proof-bind ?x937) (= $x283 $x159)) $x159) (sk (~ $x159 $x1334)) $x1334)))
 (let ((@x1372 (mp @x409 (rewrite (= $x1334 $x609)) $x609)))
 (let ((@x819 (and-elim @x1372 $x1156)))
 (let ((@x1182 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1156) $x1433)) @x819 $x1433)))
 (let (($x370 (<= ?x680 0)))
 (let ((@x701 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1156) $x370)) @x819 $x370)))
 (let (($x1299 (not (<= ?x784 0))))
 (let (($x1312 (<= ?x926 0)))
 (let (($x670 (>= ?x926 0)))
 (let ((@x1220 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x700 (not $x1312) (not $x670))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x670)) @x701 @x1182 false) $x670) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1312)) @x701 @x1182 false) $x1312) $x700)))
 (let ((?x804 (* ?x1446 ?x352 ?x352 ?x1409 r!2)))
 (let (($x792 (= ?x804 0)))
 (let (($x1239 (>= ?x804 0)))
 (let (($x1345 (<= ?x804 0)))
 (let ((@x1084 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x792 (not $x1345) (not $x1239))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1345)) @x701 @x1182 false) $x1345) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1239)) @x701 @x1182 false) $x1239) $x792)))
 (let (($x707 (>= ?x1198 0)))
 (let (($x593 (<= ?x1198 0)))
 (let ((@x782 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x423 (not $x593) (not $x707))) (lemma ((_ th-lemma arith) (hypothesis (not $x593)) @x1182 @x701 false) $x593) (lemma ((_ th-lemma arith) (hypothesis (not $x707)) @x1182 @x701 false) $x707) $x423)))
 (let ((@x588 (unit-resolution (unit-resolution (and-elim @x1372 $x785) @x782 @x1084 (or $x350 $x1366)) @x1220 $x1366)))
 (let (($x1229 (>= ?x784 0)))
 (let ((@x304 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x824 $x1299 (not $x1229))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1229)) @x701 @x1182 false) $x1229) @x588 $x1299)))
 ((_ th-lemma arith farkas 1 1 1) @x304 @x701 @x1182 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        7
 :arith-assert-lower        30
 :arith-assert-upper        28
 :arith-conflicts           8
 :arith-eq-adapter          11
 :arith-fixed-eqs           10
 :arith-gcd-tests           2
 :arith-grobner             8
 :arith-max-min             782
 :arith-nonlinear-horner    40
 :arith-num-rows            7
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              2
 :arith-pseudo-nonlinear    18
 :arith-row-summations      1
 :arith-tableau-max-columns 63
 :arith-tableau-max-rows    7
 :conflicts                 8
 :decisions                 24
 :del-clause                31
 :final-checks              8
 :max-memory                3.75
 :memory                    3.23
 :mk-bool-var               39
 :mk-clause                 44
 :num-allocs                1540085
 :num-checks                1
 :propagations              36
 :rlimit-count              11330
 :time                      0.02
 :total-time                0.03)
