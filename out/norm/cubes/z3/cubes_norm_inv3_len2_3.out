unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x631 (* c!3 n!0)))
 (let ((?x843 (* 9 ?x631)))
 (let ((?x456 (* (- 9) n!0)))
 (let ((?x453 (* (- 1) (* k!2 k!2))))
 (let ((?x278 (* 18 c!3)))
 (let ((?x815 (* 5 k!2)))
 (let ((?x467 (+ ?x815 ?x278 ?x453 ?x456 ?x843)))
 (let (($x115 (<= ?x467 4)))
 (let (($x470 (= ?x467 4)))
 (let ((?x498 (* 18 (* m!1 m!1 n!0))))
 (let ((?x525 (* (- 216) (* m!1 n!0 n!0))))
 (let ((?x351 (* 72 (* k!2 m!1 m!1))))
 (let ((?x798 (* 432 (* k!2 m!1))))
 (let ((?x586 (* 324 (* c!3 m!1))))
 (let ((?x854 (+ k!2 m!1)))
 (let ((?x137 (+ 6 m!1)))
 (let ((?x916 (+ 1 n!0)))
 (let ((?x849 (* (- 1) (* ?x916 ?x916 ?x137 ?x137 ?x137 ?x854))))
 (let ((?x828 (* 3 (* c!3 m!1 m!1 m!1))))
 (let ((?x274 (* 4 (* k!2 m!1 m!1 m!1 n!0))))
 (let ((?x866 (* 15 (* m!1 m!1 m!1))))
 (let ((?x439 (* 4 (* k!2 m!1 m!1 m!1))))
 (let ((?x807 (* (- 324) (* m!1 n!0))))
 (let ((?x799 (* m!1 m!1 m!1 m!1 n!0)))
 (let ((?x353 (* 54 (* m!1 m!1))))
 (let ((?x711 (* (- 2) (* m!1 m!1 m!1 n!0 n!0))))
 (let ((?x1060 (* 432 (* k!2 m!1 n!0))))
 (let ((?x474 (* 324 (* c!3 m!1 n!0))))
 (let ((?x623 (* 54 (* c!3 m!1 m!1))))
 (let ((?x150 (* 648 ?x631)))
 (let ((?x869 (* (- 1080) n!0)))
 (let ((?x350 (* (- 108) m!1)))
 (let ((?x721 (* 13 (* m!1 m!1 m!1 n!0))))
 (let ((?x839 (* (- 1) (* ?x916 ?x916 ?x916 ?x916 ?x137 ?x854 ?x854 ?x854 ?x854 (+ k!2 c!3)))))
 (let ((?x520 (* (- 2) (* ?x916 ?x916 ?x916 ?x916 ?x137 ?x854 ?x854 ?x854 (+ k!2 c!3)))))
 (let ((?x674 (* 72 (* k!2 m!1 m!1 n!0))))
 (let ((?x475 (* 54 (* c!3 m!1 m!1 n!0))))
 (let ((?x479 (* k!2 n!0)))
 (let ((?x138 (* 864 ?x479)))
 (let ((?x466 (* (- 36) (* m!1 m!1 n!0 n!0))))
 (let ((?x440 (* m!1 m!1 m!1 m!1)))
 (let ((?x454 (* 3 (* c!3 m!1 m!1 m!1 n!0))))
 (let ((?x531 (+ k!2 c!3)))
 (let ((?x183 (* n!0 n!0)))
 (let ((?x832 (* (- 432) ?x183)))
 (let ((?x331 (* 648 c!3)))
 (let ((?x811 (* 864 k!2)))
 (let ((?x285 (+ ?x811 ?x331 ?x832 (* (- 1) (* ?x916 ?x916 ?x916 ?x137 ?x854 ?x854 ?x854 ?x531)) (* 3 (* ?x916 ?x916 ?x916 ?x137 ?x854 ?x854 ?x854 ?x531 ?x531)) ?x454 ?x440 ?x466 ?x138 ?x475 ?x674 (* ?x916 ?x916 ?x916 ?x137 ?x854 ?x854 ?x854 ?x854 ?x531) ?x520 ?x839 ?x721 ?x350 ?x869 ?x150 ?x623 ?x474 ?x1060 ?x711 ?x353 ?x799 ?x807 ?x439 ?x866 ?x274 ?x828 ?x849 ?x586 ?x798 ?x351 ?x525 ?x498)))
 (let (($x118 (= ?x285 648)))
 (let (($x310 (not $x118)))
 (let ((?x200 (* (- 3) n!0)))
 (let ((?x621 (* (- 3) ?x183)))
 (let ((?x622 (+ k!2 ?x621 ?x200)))
 (let (($x818 (= ?x622 1)))
 (let ((?x178 (* (- 2) n!0)))
 (let ((?x193 (* (- 1) ?x479)))
 (let ((?x1092 (* 3 c!3)))
 (let ((?x591 (+ k!2 ?x1092 ?x193 ?x178)))
 (let (($x821 (= ?x591 1)))
 (let ((?x809 (+ m!1 (* (- 6) n!0))))
 (let (($x581 (= ?x809 6)))
 (let (($x196 (and $x581 $x470 $x821 $x818 $x310)))
 (let ((?x537 (+ c!3 k!2)))
 (let ((?x805 (+ ?x331 ?x811 ?x350 ?x869 ?x138 ?x150 ?x849 ?x832 ?x828 ?x274 ?x799 ?x798 ?x353 ?x351 ?x866 ?x439 ?x440 ?x807 ?x1060 ?x498 ?x674 ?x721 (* (- 2) (* ?x916 ?x916 ?x916 ?x916 ?x137 ?x854 ?x854 ?x854 ?x537)) ?x525 ?x466 ?x711 (* ?x916 ?x916 ?x916 ?x137 ?x854 ?x854 ?x854 ?x854 ?x537) (* (- 1) (* ?x916 ?x916 ?x916 ?x916 ?x137 ?x854 ?x854 ?x854 ?x854 ?x537)) (* 3 (* ?x916 ?x916 ?x916 ?x137 ?x854 ?x854 ?x854 ?x537 ?x537)) (* (- 1) (* ?x916 ?x916 ?x916 ?x137 ?x854 ?x854 ?x854 ?x537)) ?x475 ?x623 ?x474 ?x586 ?x454)))
 (let (($x452 (and $x581 (= (+ ?x278 ?x815 ?x456 ?x453 ?x843) 4) (= (+ ?x1092 k!2 ?x178 ?x193) 1) (= (+ k!2 ?x200 ?x621) 1) (not (= ?x805 648)))))
 (let (($x1084 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x949 (* 3 (* c m m m n))))
 (let ((?x97 (* 324 (* c m))))
 (let ((?x208 (* 324 (* c m n))))
 (let ((?x205 (* 54 (* c m m))))
 (let ((?x202 (* 54 (* c m m n))))
 (let ((?x72 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x309 (+ 6 m)))
 (let ((?x312 (+ 1 n)))
 (let ((?x788 (* (- 1) (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x745 (* 3 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72 ?x72))))
 (let ((?x680 (* (- 1) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x686 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72)))
 (let ((?x754 (* (- 2) (* m m m n n))))
 (let ((?x769 (* (- 36) (* m m n n))))
 (let ((?x768 (* (- 216) (* m n n))))
 (let ((?x600 (* (- 2) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x867 (* 13 (* m m m n))))
 (let ((?x420 (* k m m n)))
 (let ((?x917 (* 72 ?x420)))
 (let ((?x1071 (* 18 (* m m n))))
 (let ((?x408 (* k m n)))
 (let ((?x914 (* 432 ?x408)))
 (let ((?x865 (* (- 324) (* m n))))
 (let ((?x398 (* m m m m)))
 (let ((?x395 (* k m m m)))
 (let ((?x915 (* 4 ?x395)))
 (let ((?x863 (* 15 (* m m m))))
 (let ((?x375 (* k m m)))
 (let ((?x912 (* 72 ?x375)))
 (let ((?x367 (* m m)))
 (let ((?x923 (* 54 ?x367)))
 (let ((?x349 (* m m m m n)))
 (let ((?x932 (* 4 (* k m m m n))))
 (let ((?x238 (* 3 (* c m m m))))
 (let ((?x272 (* n n)))
 (let ((?x696 (* (- 432) ?x272)))
 (let ((?x556 (* (- 1) (* ?x312 ?x312 ?x309 ?x309 ?x309 ?x68))))
 (let ((?x149 (* c n)))
 (let ((?x134 (* 648 ?x149)))
 (let ((?x55 (* k n)))
 (let ((?x907 (* 864 ?x55)))
 (let ((?x925 (* (- 1080) n)))
 (let ((?x826 (* (- 108) m)))
 (let ((?x904 (* 864 k)))
 (let ((?x260 (* 648 c)))
 (let ((?x827 (+ ?x260 ?x904 ?x826 ?x925 ?x907 ?x134 ?x556 ?x696 ?x238 ?x932 ?x349 (* 432 (* k m)) ?x923 ?x912 ?x863 ?x915 ?x398 ?x865 ?x914 ?x1071 ?x917 ?x867 ?x600 ?x768 ?x769 ?x754 ?x686 ?x680 ?x745 ?x788 ?x202 ?x205 ?x208 ?x97 ?x949)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) ?x272)) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 ?x149)) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 $x211 $x263 $x301 (not (= ?x827 648))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x713 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x949 (* 3 (* c m m m n))))
 (let ((?x97 (* 324 (* c m))))
 (let ((?x208 (* 324 (* c m n))))
 (let ((?x205 (* 54 (* c m m))))
 (let ((?x202 (* 54 (* c m m n))))
 (let ((?x72 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x309 (+ 6 m)))
 (let ((?x312 (+ 1 n)))
 (let ((?x788 (* (- 1) (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x745 (* 3 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72 ?x72))))
 (let ((?x680 (* (- 1) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x686 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72)))
 (let ((?x754 (* (- 2) (* m m m n n))))
 (let ((?x769 (* (- 36) (* m m n n))))
 (let ((?x768 (* (- 216) (* m n n))))
 (let ((?x600 (* (- 2) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x867 (* 13 (* m m m n))))
 (let ((?x420 (* k m m n)))
 (let ((?x917 (* 72 ?x420)))
 (let ((?x1071 (* 18 (* m m n))))
 (let ((?x408 (* k m n)))
 (let ((?x914 (* 432 ?x408)))
 (let ((?x865 (* (- 324) (* m n))))
 (let ((?x398 (* m m m m)))
 (let ((?x395 (* k m m m)))
 (let ((?x915 (* 4 ?x395)))
 (let ((?x863 (* 15 (* m m m))))
 (let ((?x375 (* k m m)))
 (let ((?x912 (* 72 ?x375)))
 (let ((?x349 (* m m m m n)))
 (let ((?x932 (* 4 (* k m m m n))))
 (let ((?x238 (* 3 (* c m m m))))
 (let ((?x272 (* n n)))
 (let ((?x696 (* (- 432) ?x272)))
 (let ((?x556 (* (- 1) (* ?x312 ?x312 ?x309 ?x309 ?x309 ?x68))))
 (let ((?x149 (* c n)))
 (let ((?x134 (* 648 ?x149)))
 (let ((?x55 (* k n)))
 (let ((?x907 (* 864 ?x55)))
 (let ((?x925 (* (- 1080) n)))
 (let ((?x826 (* (- 108) m)))
 (let ((?x904 (* 864 k)))
 (let ((?x260 (* 648 c)))
 (let ((?x851 (+ ?x260 ?x904 ?x826 ?x925 ?x907 ?x134 ?x556 (* 6 (* m 6 m)) ?x696 ?x238 ?x932 ?x349 (* 396 (* k m)) (* 18 (* m m)) ?x912 ?x863 ?x915 ?x398 ?x865 ?x914 ?x1071 ?x917 ?x867 ?x600 ?x768 ?x769 ?x754 ?x686 ?x680 (* 6 (* m 6 k)) ?x745 ?x788 ?x202 ?x205 ?x208 ?x97 ?x949)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) ?x272)) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 ?x149)) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 $x211 $x263 $x301 (not (= ?x851 648))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x281 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x949 (* 3 (* c m m m n))))
 (let ((?x97 (* 324 (* c m))))
 (let ((?x208 (* 324 (* c m n))))
 (let ((?x205 (* 54 (* c m m))))
 (let ((?x202 (* 54 (* c m m n))))
 (let ((?x72 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x309 (+ 6 m)))
 (let ((?x312 (+ 1 n)))
 (let ((?x788 (* (- 1) (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x745 (* 3 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72 ?x72))))
 (let ((?x680 (* (- 1) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x686 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72)))
 (let ((?x754 (* (- 2) (* m m m n n))))
 (let ((?x769 (* (- 36) (* m m n n))))
 (let ((?x768 (* (- 216) (* m n n))))
 (let ((?x600 (* (- 2) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x867 (* 13 (* m m m n))))
 (let ((?x420 (* k m m n)))
 (let ((?x917 (* 72 ?x420)))
 (let ((?x1071 (* 18 (* m m n))))
 (let ((?x408 (* k m n)))
 (let ((?x914 (* 432 ?x408)))
 (let ((?x865 (* (- 324) (* m n))))
 (let ((?x398 (* m m m m)))
 (let ((?x395 (* k m m m)))
 (let ((?x915 (* 4 ?x395)))
 (let ((?x863 (* 15 (* m m m))))
 (let ((?x375 (* k m m)))
 (let ((?x912 (* 72 ?x375)))
 (let ((?x367 (* m m)))
 (let ((?x923 (* 54 ?x367)))
 (let ((?x349 (* m m m m n)))
 (let ((?x932 (* 4 (* k m m m n))))
 (let ((?x238 (* 3 (* c m m m))))
 (let ((?x272 (* n n)))
 (let ((?x696 (* (- 432) ?x272)))
 (let ((?x556 (* (- 1) (* ?x312 ?x312 ?x309 ?x309 ?x309 ?x68))))
 (let ((?x149 (* c n)))
 (let ((?x134 (* 648 ?x149)))
 (let ((?x55 (* k n)))
 (let ((?x907 (* 864 ?x55)))
 (let ((?x925 (* (- 1080) n)))
 (let ((?x826 (* (- 108) m)))
 (let ((?x904 (* 864 k)))
 (let ((?x260 (* 648 c)))
 (let ((?x827 (+ ?x260 ?x904 ?x826 ?x925 ?x907 ?x134 ?x556 ?x696 ?x238 ?x932 ?x349 (* 432 (* k m)) ?x923 ?x912 ?x863 ?x915 ?x398 ?x865 ?x914 ?x1071 ?x917 ?x867 ?x600 ?x768 ?x769 ?x754 ?x686 ?x680 ?x745 ?x788 ?x202 ?x205 ?x208 ?x97 ?x949)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) ?x272)) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 ?x149)) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x352 (and $x127 $x211 $x263 $x301 (not (= ?x827 648)))))
 (let ((?x851 (+ ?x260 ?x904 ?x826 ?x925 ?x907 ?x134 ?x556 (* 6 (* m 6 m)) ?x696 ?x238 ?x932 ?x349 (* 396 (* k m)) (* 18 ?x367) ?x912 ?x863 ?x915 ?x398 ?x865 ?x914 ?x1071 ?x917 ?x867 ?x600 ?x768 ?x769 ?x754 ?x686 ?x680 (* 6 (* m 6 k)) ?x745 ?x788 ?x202 ?x205 ?x208 ?x97 ?x949)))
 (let (($x1075 (and $x127 $x211 $x263 $x301 (not (= ?x851 648)))))
 (rewrite (= $x1075 $x352))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x681 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x611 (* (- 1) (* (+ 1 n) (+ 6 m) (+ 6 m) (+ 6 m)))))
 (let ((?x72 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x309 (+ 6 m)))
 (let ((?x312 (+ 1 n)))
 (let ((?x600 (* (- 2) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x556 (* (- 1) (* ?x312 ?x312 ?x309 ?x309 ?x309 ?x68))))
 (let ((?x788 (* (- 1) (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x745 (* 3 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72 ?x72))))
 (let ((?x680 (* (- 1) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x686 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72)))
 (let ((?x516 (+ (* ?x312 ?x309 ?x309 ?x309 ?x68) ?x686 ?x680 (* (- 2) (* ?x312 ?x312 ?x309 ?x309 ?x309)) ?x745 (* 3 (* ?x312 ?x309 ?x309 ?x309 ?x72)) ?x788 ?x556 ?x600 ?x611)))
 (let (($x695 (not (= ?x516 0))))
 (let (($x666 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1049 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x1049 $x666 $x695)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x728 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x949 (* 3 (* c m m m n))))
 (let ((?x97 (* 324 (* c m))))
 (let ((?x208 (* 324 (* c m n))))
 (let ((?x205 (* 54 (* c m m))))
 (let ((?x202 (* 54 (* c m m n))))
 (let ((?x72 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x309 (+ 6 m)))
 (let ((?x312 (+ 1 n)))
 (let ((?x788 (* (- 1) (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x745 (* 3 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72 ?x72))))
 (let ((?x680 (* (- 1) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x686 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72)))
 (let ((?x754 (* (- 2) (* m m m n n))))
 (let ((?x769 (* (- 36) (* m m n n))))
 (let ((?x768 (* (- 216) (* m n n))))
 (let ((?x600 (* (- 2) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x867 (* 13 (* m m m n))))
 (let ((?x420 (* k m m n)))
 (let ((?x917 (* 72 ?x420)))
 (let ((?x1071 (* 18 (* m m n))))
 (let ((?x408 (* k m n)))
 (let ((?x914 (* 432 ?x408)))
 (let ((?x865 (* (- 324) (* m n))))
 (let ((?x398 (* m m m m)))
 (let ((?x395 (* k m m m)))
 (let ((?x915 (* 4 ?x395)))
 (let ((?x863 (* 15 (* m m m))))
 (let ((?x375 (* k m m)))
 (let ((?x912 (* 72 ?x375)))
 (let ((?x349 (* m m m m n)))
 (let ((?x932 (* 4 (* k m m m n))))
 (let ((?x238 (* 3 (* c m m m))))
 (let ((?x272 (* n n)))
 (let ((?x696 (* (- 432) ?x272)))
 (let ((?x556 (* (- 1) (* ?x312 ?x312 ?x309 ?x309 ?x309 ?x68))))
 (let ((?x149 (* c n)))
 (let ((?x134 (* 648 ?x149)))
 (let ((?x55 (* k n)))
 (let ((?x907 (* 864 ?x55)))
 (let ((?x925 (* (- 1080) n)))
 (let ((?x826 (* (- 108) m)))
 (let ((?x904 (* 864 k)))
 (let ((?x260 (* 648 c)))
 (let ((?x851 (+ ?x260 ?x904 ?x826 ?x925 ?x907 ?x134 ?x556 (* 6 (* m 6 m)) ?x696 ?x238 ?x932 ?x349 (* 396 (* k m)) (* 18 (* m m)) ?x912 ?x863 ?x915 ?x398 ?x865 ?x914 ?x1071 ?x917 ?x867 ?x600 ?x768 ?x769 ?x754 ?x686 ?x680 (* 6 (* m 6 k)) ?x745 ?x788 ?x202 ?x205 ?x208 ?x97 ?x949)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) ?x272)) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 ?x149)) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x1075 (and $x127 $x211 $x263 $x301 (not (= ?x851 648)))))
 (let ((?x516 (+ (* ?x312 ?x309 ?x309 ?x309 ?x68) ?x686 ?x680 (* (- 2) (* ?x312 ?x312 ?x309 ?x309 ?x309)) ?x745 (* 3 (* ?x312 ?x309 ?x309 ?x309 ?x72)) ?x788 ?x556 ?x600 (* (- 1) (* ?x312 ?x309 ?x309 ?x309)))))
 (let (($x695 (not (= ?x516 0))))
 (let (($x666 (= (+ (* 3 ?x272) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1049 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x703 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x1049 $x666 $x695)))
 (rewrite (= $x703 $x1075)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x698 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x611 (* (- 1) (* (+ 1 n) (+ 6 m) (+ 6 m) (+ 6 m)))))
 (let ((?x72 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x309 (+ 6 m)))
 (let ((?x312 (+ 1 n)))
 (let ((?x600 (* (- 2) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x556 (* (- 1) (* ?x312 ?x312 ?x309 ?x309 ?x309 ?x68))))
 (let ((?x788 (* (- 1) (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x745 (* 3 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72 ?x72))))
 (let ((?x680 (* (- 1) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x686 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72)))
 (let ((?x516 (+ (* ?x312 ?x309 ?x309 ?x309 ?x68) ?x686 ?x680 (* (- 2) (* ?x312 ?x312 ?x309 ?x309 ?x309)) ?x745 (* 3 (* ?x312 ?x309 ?x309 ?x309 ?x72)) ?x788 ?x556 ?x600 ?x611)))
 (let (($x695 (not (= ?x516 0))))
 (let (($x666 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x491 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x111 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 (= ?x111 (- 4)) $x491 $x666 $x695)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x701 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x611 (* (- 1) (* (+ 1 n) (+ 6 m) (+ 6 m) (+ 6 m)))))
 (let ((?x72 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x309 (+ 6 m)))
 (let ((?x312 (+ 1 n)))
 (let ((?x600 (* (- 2) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x556 (* (- 1) (* ?x312 ?x312 ?x309 ?x309 ?x309 ?x68))))
 (let ((?x788 (* (- 1) (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x745 (* 3 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72 ?x72))))
 (let ((?x680 (* (- 1) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x686 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72)))
 (let ((?x516 (+ (* ?x312 ?x309 ?x309 ?x309 ?x68) ?x686 ?x680 (* (- 2) (* ?x312 ?x312 ?x309 ?x309 ?x309)) ?x745 (* 3 (* ?x312 ?x309 ?x309 ?x309 ?x72)) ?x788 ?x556 ?x600 ?x611)))
 (let (($x695 (not (= ?x516 0))))
 (let (($x666 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1049 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x703 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x1049 $x666 $x695)))
 (let (($x491 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x111 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x676 (and $x127 (= ?x111 (- 4)) $x491 $x666 $x695)))
 (rewrite (= $x676 $x703)))))))))))))))))))))))))))))
 ))
 (let (($x94 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x69 (+ m 6)))
 (let ((?x68 (+ k m)))
 (let ((?x72 (+ c k)))
 (let ((?x74 (+ (* ?x68 ?x69 ?x69 ?x69 ?x70) (* ?x72 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70))))
 (let ((?x78 (- (- ?x74 (* ?x72 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70)) (* 2 ?x69 ?x69 ?x69 ?x70 ?x70))))
 (let ((?x81 (+ ?x78 (* 3 ?x72 ?x72 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70) (* 3 ?x72 ?x69 ?x69 ?x69 ?x70))))
 (let ((?x87 (- (- ?x81 (* ?x72 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70)) (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70))))
 (let ((?x89 (- (- ?x87 (* 2 ?x72 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70)) (* ?x69 ?x69 ?x69 ?x70))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x89 0)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x684 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x611 (* (- 1) (* (+ 1 n) (+ 6 m) (+ 6 m) (+ 6 m)))))
 (let ((?x72 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x309 (+ 6 m)))
 (let ((?x312 (+ 1 n)))
 (let ((?x600 (* (- 2) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x556 (* (- 1) (* ?x312 ?x312 ?x309 ?x309 ?x309 ?x68))))
 (let ((?x788 (* (- 1) (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x745 (* 3 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x72 ?x72))))
 (let ((?x680 (* (- 1) (* ?x312 ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72))))
 (let ((?x686 (* ?x312 ?x312 ?x312 ?x309 ?x68 ?x68 ?x68 ?x68 ?x72)))
 (let ((?x516 (+ (* ?x312 ?x309 ?x309 ?x309 ?x68) ?x686 ?x680 (* (- 2) (* ?x312 ?x312 ?x309 ?x309 ?x309)) ?x745 (* 3 (* ?x312 ?x309 ?x309 ?x309 ?x72)) ?x788 ?x556 ?x600 ?x611)))
 (let (($x695 (not (= ?x516 0))))
 (let (($x666 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x491 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x111 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x676 (and $x127 (= ?x111 (- 4)) $x491 $x666 $x695)))
 (let ((?x70 (+ n 1)))
 (let ((?x69 (+ m 6)))
 (let ((?x74 (+ (* ?x68 ?x69 ?x69 ?x69 ?x70) (* ?x72 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70))))
 (let ((?x78 (- (- ?x74 (* ?x72 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70)) (* 2 ?x69 ?x69 ?x69 ?x70 ?x70))))
 (let ((?x81 (+ ?x78 (* 3 ?x72 ?x72 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70) (* 3 ?x72 ?x69 ?x69 ?x69 ?x70))))
 (let ((?x87 (- (- ?x81 (* ?x72 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70)) (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70))))
 (let ((?x89 (- (- ?x87 (* 2 ?x72 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70)) (* ?x69 ?x69 ?x69 ?x70))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x93 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x89 0))))))
 (rewrite (= $x93 $x676))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x95 (asserted $x94)))
 (let ((@x694 (mp (mp @x95 (quant-intro (proof-bind ?x684) (= $x94 $x698)) $x698) (rewrite (= $x698 $x698)) $x698)))
 (let ((@x447 (mp (mp @x694 (quant-intro (proof-bind ?x701) (= $x698 $x681)) $x681) (quant-intro (proof-bind ?x728) (= $x681 $x713)) $x713)))
 (let ((@x539 (mp~ (mp @x447 (quant-intro (proof-bind ?x281) (= $x713 $x1084)) $x1084) (sk (~ $x1084 $x452)) $x452)))
 (let ((@x449 (mp @x539 (rewrite (= $x452 $x196)) $x196)))
 (let ((@x354 (and-elim @x449 $x470)))
 (let ((@x509 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x470) $x115)) @x354 $x115)))
 (let (($x810 (>= ?x467 4)))
 (let ((@x286 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x470) $x810)) @x354 $x810)))
 (let (($x164 (<= ?x809 6)))
 (let ((@x295 (and-elim @x449 $x581)))
 (let ((@x291 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x581) $x164)) @x295 $x164)))
 (let (($x731 (>= ?x809 6)))
 (let ((@x290 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x581) $x731)) @x295 $x731)))
 (let (($x273 (<= ?x622 1)))
 (let ((@x796 (and-elim @x449 $x818)))
 (let ((@x626 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x818) $x273)) @x796 $x273)))
 (let (($x1035 (>= ?x622 1)))
 (let ((@x737 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x818) $x1035)) @x796 $x1035)))
 (let (($x816 (<= ?x591 1)))
 (let ((@x819 (and-elim @x449 $x821)))
 (let ((@x669 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x821) $x816)) @x819 $x816)))
 (let (($x116 (>= ?x591 1)))
 (let ((@x433 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x821) $x116)) @x819 $x116)))
 (let (($x314 (not (<= ?x285 648))))
 (let (($x297 (>= ?x285 648)))
 (let ((@x305 ((_ th-lemma arith) (hypothesis (not $x297)) @x737 @x626 @x286 @x509 @x286 @x509 @x286 @x509 @x737 @x626 @x286 @x509 @x737 @x626 @x433 @x669 @x737 @x626 @x286 @x509 @x290 @x291 @x737 @x626 @x737 @x626 @x286 @x509 @x737 @x626 @x286 @x509 @x737 @x626 @x290 @x291 @x286 @x509 @x737 @x626 @x290 @x291 @x286 @x509 @x290 @x291 @x433 @x669 false)))
 (let ((@x345 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x118 $x314 (not $x297))) (and-elim @x449 $x310) (or $x314 (not $x297)))))
 ((_ th-lemma arith) (unit-resolution @x345 (lemma @x305 $x297) $x314) @x286 @x509 @x433 @x669 @x286 @x509 @x286 @x509 @x433 @x669 @x286 @x509 @x433 @x669 @x433 @x669 @x737 @x626 @x433 @x669 @x290 @x291 @x286 @x509 @x286 @x509 @x433 @x669 @x433 @x669 @x286 @x509 @x433 @x669 @x290 @x291 @x286 @x509 @x290 @x291 @x737 @x626 @x290 @x291 @x286 @x509 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        23
 :arith-assert-upper        49
 :arith-branch-var          3
 :arith-conflicts           5
 :arith-eq-adapter          5
 :arith-gcd-tests           8
 :arith-grobner             2
 :arith-ineq-splits         3
 :arith-max-min             506
 :arith-nonlinear-bounds    17
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             6
 :arith-patches_succ        1
 :arith-pivots              11
 :arith-row-summations      44
 :arith-tableau-max-columns 71
 :arith-tableau-max-rows    9
 :conflicts                 5
 :decisions                 39
 :del-clause                16
 :final-checks              12
 :max-memory                3.81
 :memory                    3.24
 :mk-bool-var               58
 :mk-clause                 16
 :num-allocs                1421107
 :num-checks                1
 :propagations              12
 :rlimit-count              14022
 :time                      0.01
 :total-time                0.02)
