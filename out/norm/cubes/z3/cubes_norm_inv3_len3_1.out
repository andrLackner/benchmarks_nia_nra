unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x738 (* (- 2) n!0)))
 (let ((?x1104 (* 3 c!3)))
 (let ((?x1030 (* k!2 n!0)))
 (let ((?x1067 (* (- 1) ?x1030)))
 (let ((?x766 (+ k!2 ?x1067 ?x1104 ?x738)))
 (let (($x1183 (<= ?x766 1)))
 (let (($x148 (= ?x766 1)))
 (let ((?x1050 (+ k!2 c!3)))
 (let ((?x1037 (+ m!1 k!2)))
 (let ((?x757 (+ 6 m!1)))
 (let ((?x745 (+ 1 n!0)))
 (let ((?x1008 (* (- 24) (* k!2 k!2 k!2 k!2))))
 (let ((?x1170 (* c!3 n!0)))
 (let ((?x1563 (* 216 ?x1170)))
 (let ((?x1105 (* 216 c!3)))
 (let ((?x1130 (* 216 ?x1030)))
 (let ((?x958 (* 216 k!2)))
 (let ((?x779 (* 12 (* k!2 k!2 k!2 n!0))))
 (let ((?x675 (* 18 (* k!2 k!2 k!2))))
 (let ((?x113 (+ (* 12 (* m!1 c!3 c!3 n!0)) (* 18 (* m!1 m!1 k!2 n!0)) (* 36 (* m!1 k!2 c!3)) (* 18 (* m!1 m!1 k!2)) (* 18 (* m!1 m!1 c!3)) (* (- 3) (* m!1 m!1 k!2 k!2)) (* 108 (* m!1 k!2)) (* 4 (* m!1 k!2 k!2 c!3 n!0)) (* 108 (* m!1 c!3)) (* m!1 m!1 m!1 k!2 n!0) (* 2 (* m!1 k!2 c!3 c!3 n!0)) (* (- 60) (* k!2 k!2 c!3 c!3)) (* 24 (* m!1 k!2 c!3 n!0)) (* 12 (* k!2 c!3 c!3 n!0)) (* 18 (* m!1 k!2 k!2)) (* 18 (* m!1 c!3 c!3)) (* (- 3) (* ?x745 ?x745 ?x745 ?x757 ?x1050 ?x1050 ?x1050 ?x1050)) (* m!1 m!1 m!1 c!3 n!0) ?x675 (* (- 2) (* m!1 m!1 m!1 k!2 c!3)) (* (- 3) (* m!1 m!1 c!3 c!3 c!3)) ?x779 (* 2 (* ?x745 ?x745 ?x757 ?x757 ?x757 ?x1050)) (* ?x745 ?x745 ?x745 ?x745 ?x757 ?x1037 ?x1050 ?x1050 ?x1050) (* (- 6) (* m!1 m!1 k!2 c!3)) (* (- 3) (* m!1 m!1 c!3 c!3)) (* m!1 m!1 m!1 c!3) (* ?x745 ?x745 ?x757 ?x757 ?x757 ?x1037 ?x1050) (* 18 (* m!1 m!1 c!3 n!0)) (* (- 3) (* m!1 k!2 c!3 c!3 c!3)) ?x958 (* (- 3) (* ?x745 ?x757 ?x757 ?x757 ?x1050 ?x1050)) (* 108 (* m!1 k!2 n!0)) (* 24 (* k!2 k!2 c!3 n!0)) (* 108 (* m!1 c!3 n!0)) (* m!1 m!1 m!1 k!2) (* 12 (* m!1 k!2 k!2 n!0)) (* (- 1) (* m!1 m!1 m!1 k!2 k!2)) (* (- 13) (* m!1 m!1 k!2 k!2 c!3)) ?x1130 (* 2 (* m!1 m!1 c!3 c!3 n!0)) (* ?x745 ?x745 ?x745 ?x757 ?x1050 ?x1050 ?x1050) (* ?x745 ?x757 ?x1037 ?x1037 ?x1050 ?x1050) (* (- 1) (* m!1 m!1 m!1 c!3 c!3)) ?x1105 (* 4 (* m!1 m!1 k!2 c!3 n!0)) (* 2 (* m!1 m!1 k!2 k!2 n!0)) ?x1563 (* (- 18) (* m!1 c!3 c!3 c!3)) (* (- 18) (* k!2 c!3 c!3 c!3)) (* (- 1) (* ?x745 ?x745 ?x745 ?x757 ?x1037 ?x1050 ?x1050 ?x1050)) (* (- 11) (* m!1 m!1 k!2 c!3 c!3)) (* (- 4) (* m!1 k!2 k!2 k!2 k!2)) (* (- 63) (* m!1 k!2 c!3 c!3)) (* (- 27) (* m!1 k!2 k!2 k!2)) (* 2 (* m!1 k!2 k!2 k!2 n!0)) (* (- 72) (* m!1 k!2 k!2 c!3)) (* (- 5) (* m!1 m!1 k!2 k!2 k!2)) (* (- 11) (* m!1 k!2 k!2 k!2 c!3)) (* (- 10) (* m!1 k!2 k!2 c!3 c!3)) ?x1008 (* (- 66) (* k!2 k!2 k!2 c!3)) (* 2 (* ?x745 ?x745 ?x745 ?x745 ?x757 ?x1050 ?x1050 ?x1050)) (* 36 (* k!2 k!2 c!3)) (* 18 (* k!2 c!3 c!3)) (* (- 1) (* ?x745 ?x757 ?x757 ?x757 ?x1037 ?x1050)))))
 (let (($x216 (= ?x113 0)))
 (let (($x781 (not $x216)))
 (let ((?x1129 (* (- 3) n!0)))
 (let ((?x1564 (* (- 3) (* n!0 n!0))))
 (let ((?x770 (+ k!2 ?x1564 ?x1129)))
 (let (($x1227 (= ?x770 1)))
 (let ((?x322 (* 9 ?x1170)))
 (let ((?x743 (* (- 9) n!0)))
 (let ((?x579 (* 18 c!3)))
 (let ((?x678 (* (- 1) (* k!2 k!2))))
 (let ((?x1005 (* 5 k!2)))
 (let ((?x1222 (+ ?x1005 ?x678 ?x579 ?x743 ?x322)))
 (let (($x165 (= ?x1222 4)))
 (let ((?x1241 (+ m!1 (* (- 6) n!0))))
 (let (($x1562 (= ?x1241 6)))
 (let (($x215 (and $x1562 $x165 $x148 $x1227 $x781)))
 (let ((?x1147 (+ c!3 k!2)))
 (let ((?x722 (+ ?x1105 ?x958 ?x1130 ?x1563 (* 2 (* c!3 c!3 k!2 m!1 n!0)) (* 4 (* c!3 k!2 k!2 m!1 n!0)) (* 2 (* k!2 k!2 k!2 m!1 n!0)) (* 2 (* c!3 c!3 m!1 m!1 n!0)) (* 4 (* c!3 k!2 m!1 m!1 n!0)) (* 2 (* k!2 k!2 m!1 m!1 n!0)) (* (- 3) (* c!3 c!3 c!3 k!2 m!1)) (* (- 10) (* c!3 c!3 k!2 k!2 m!1)) (* (- 11) (* c!3 k!2 k!2 k!2 m!1)) (* (- 4) (* k!2 k!2 k!2 k!2 m!1)) (* (- 3) (* c!3 c!3 c!3 m!1 m!1)) (* (- 11) (* c!3 c!3 k!2 m!1 m!1)) (* (- 13) (* c!3 k!2 k!2 m!1 m!1)) (* (- 5) (* k!2 k!2 k!2 m!1 m!1)) (* (- 18) (* c!3 c!3 c!3 k!2)) (* (- 60) (* c!3 c!3 k!2 k!2)) (* (- 66) (* c!3 k!2 k!2 k!2)) ?x1008 (* (- 18) (* c!3 c!3 c!3 m!1)) (* (- 63) (* c!3 c!3 k!2 m!1)) (* (- 72) (* c!3 k!2 k!2 m!1)) (* (- 27) (* k!2 k!2 k!2 m!1)) (* (- 1) (* ?x745 ?x745 ?x745 ?x757 (+ k!2 m!1) ?x1147 ?x1147 ?x1147)) (* ?x745 ?x757 (+ k!2 m!1) (+ k!2 m!1) ?x1147 ?x1147) (* 12 (* k!2 k!2 m!1 n!0)) (* ?x745 ?x745 ?x745 ?x757 ?x1147 ?x1147 ?x1147) (* 2 (* ?x745 ?x745 ?x745 ?x745 ?x757 ?x1147 ?x1147 ?x1147)) (* (- 1) (* c!3 c!3 m!1 m!1 m!1)) (* (- 2) (* c!3 k!2 m!1 m!1 m!1)) (* (- 1) (* k!2 k!2 m!1 m!1 m!1)) (* ?x745 ?x745 ?x745 ?x745 ?x757 (+ k!2 m!1) ?x1147 ?x1147 ?x1147) (* ?x745 ?x745 ?x757 ?x757 ?x757 (+ k!2 m!1) ?x1147) (* (- 3) (* c!3 c!3 m!1 m!1)) (* (- 6) (* c!3 k!2 m!1 m!1)) (* (- 3) (* k!2 k!2 m!1 m!1)) ?x779 (* 24 (* c!3 k!2 k!2 n!0)) (* 18 (* c!3 c!3 k!2)) (* 2 (* ?x745 ?x745 ?x757 ?x757 ?x757 ?x1147)) (* 36 (* c!3 k!2 k!2)) ?x675 (* (- 3) (* ?x745 ?x745 ?x745 ?x757 ?x1147 ?x1147 ?x1147 ?x1147)) (* 18 (* c!3 c!3 m!1)) (* 36 (* c!3 k!2 m!1)) (* 18 (* k!2 k!2 m!1)) (* 12 (* c!3 c!3 k!2 n!0)) (* (- 1) (* ?x745 ?x757 ?x757 ?x757 (+ k!2 m!1) ?x1147)) (* c!3 m!1 m!1 m!1 n!0) (* k!2 m!1 m!1 m!1 n!0) (* 108 (* c!3 m!1)) (* 108 (* k!2 m!1)) (* 18 (* c!3 m!1 m!1)) (* 18 (* k!2 m!1 m!1)) (* 24 (* c!3 k!2 m!1 n!0)) (* c!3 m!1 m!1 m!1) (* k!2 m!1 m!1 m!1) (* 108 (* c!3 m!1 n!0)) (* 108 (* k!2 m!1 n!0)) (* (- 3) (* ?x745 ?x757 ?x757 ?x757 ?x1147 ?x1147)) (* 18 (* c!3 m!1 m!1 n!0)) (* 18 (* k!2 m!1 m!1 n!0)) (* 12 (* c!3 c!3 m!1 n!0)))))
 (let (($x764 (and $x1562 (= (+ ?x579 ?x1005 ?x743 ?x678 ?x322) 4) (= (+ ?x1104 k!2 ?x738 ?x1067) 1) (= (+ k!2 ?x1129 ?x1564) 1) (not (= ?x722 0)))))
 (let (($x275 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1789 (* 12 (* c c m n))))
 (let ((?x1308 (* 18 (* k m m n))))
 (let ((?x1307 (* 18 (* c m m n))))
 (let ((?x69 (+ c k)))
 (let ((?x317 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x1271 (* ?x320 ?x317 ?x317 ?x317 ?x69 ?x69)))
 (let ((?x1272 (* (- 3) ?x1271)))
 (let ((?x1306 (* 108 (* k m n))))
 (let ((?x1305 (* 108 (* c m n))))
 (let ((?x1256 (* k m m m)))
 (let ((?x1253 (* c m m m)))
 (let ((?x1794 (* 24 (* c k m n))))
 (let ((?x1304 (* 18 (* k m m))))
 (let ((?x1303 (* 18 (* c m m))))
 (let ((?x1302 (* 108 (* k m))))
 (let ((?x1301 (* 108 (* c m))))
 (let ((?x1207 (* k m m m n)))
 (let ((?x1206 (* c m m m n)))
 (let ((?x73 (+ k m)))
 (let ((?x1168 (* ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x596 (* (- 1) ?x1168)))
 (let ((?x1798 (* 12 (* c c k n))))
 (let ((?x1153 (* k k m)))
 (let ((?x1796 (* 18 ?x1153)))
 (let ((?x1145 (* c k m)))
 (let ((?x1800 (* 36 ?x1145)))
 (let ((?x1137 (* c c m)))
 (let ((?x1804 (* 18 ?x1137)))
 (let ((?x1136 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1150 (* (- 3) ?x1136)))
 (let ((?x1133 (* k k k)))
 (let ((?x1803 (* 18 ?x1133)))
 (let ((?x1125 (* c k k)))
 (let ((?x1802 (* 36 ?x1125)))
 (let ((?x1119 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x69)))
 (let ((?x1120 (* 2 ?x1119)))
 (let ((?x1117 (* c c k)))
 (let ((?x1809 (* 18 ?x1117)))
 (let ((?x1810 (* 24 (* c k k n))))
 (let ((?x1808 (* 12 (* k k k n))))
 (let ((?x937 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x916 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x1043 (* (- 1) (* k k m m m))))
 (let ((?x1083 (* (- 2) (* c k m m m))))
 (let ((?x1041 (* (- 1) (* c c m m m))))
 (let ((?x882 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x943 (* 2 ?x882)))
 (let ((?x880 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x1751 (* 12 (* k k m n))))
 (let ((?x792 (* ?x320 ?x317 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x776 (* ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x726 (* (- 1) ?x776)))
 (let ((?x704 (* (- 18) (* c c c m))))
 (let ((?x1064 (* (- 24) (* k k k k))))
 (let ((?x681 (* c k k k)))
 (let ((?x1069 (* (- 66) ?x681)))
 (let ((?x663 (* c c k k)))
 (let ((?x1072 (* (- 60) ?x663)))
 (let ((?x656 (* (- 18) (* c c c k))))
 (let ((?x1075 (* (- 5) (* k k k m m))))
 (let ((?x1074 (* (- 13) (* c k k m m))))
 (let ((?x1078 (* (- 11) (* c c k m m))))
 (let ((?x799 (* (- 3) (* c c c m m))))
 (let ((?x1082 (* (- 4) (* k k k k m))))
 (let ((?x1081 (* (- 11) (* c k k k m))))
 (let ((?x1084 (* (- 10) (* c c k k m))))
 (let ((?x751 (* (- 3) (* c c c k m))))
 (let ((?x525 (* 2 (* k k m m n))))
 (let ((?x522 (* c k m m n)))
 (let ((?x1735 (* 4 ?x522)))
 (let ((?x519 (* 2 (* c c m m n))))
 (let ((?x517 (* 2 (* k k k m n))))
 (let ((?x514 (* c k k m n)))
 (let ((?x1734 (* 4 ?x514)))
 (let ((?x511 (* 2 (* c c k m n))))
 (let ((?x155 (* c n)))
 (let ((?x1259 (* 216 ?x155)))
 (let ((?x55 (* k n)))
 (let ((?x1262 (* 216 ?x55)))
 (let ((?x1217 (* 216 k)))
 (let ((?x1214 (* 216 c)))
 (let ((?x717 (+ ?x1214 ?x1217 ?x1262 ?x1259 ?x511 ?x1734 ?x517 ?x519 ?x1735 ?x525 ?x751 ?x1084 ?x1081 ?x1082 ?x799 ?x1078 ?x1074 ?x1075 ?x656 ?x1072 ?x1069 ?x1064 ?x704 (* (- 63) (* c c k m)) (* (- 72) (* c k k m)) (* (- 27) (* k k k m)) ?x726 ?x792 ?x1751 ?x880 ?x943 ?x1041 ?x1083 ?x1043 ?x916 ?x937 (* (- 3) (* c c m m)) (* (- 6) (* c k m m)) (* (- 3) (* k k m m)) ?x1808 ?x1810 ?x1809 ?x1120 ?x1802 ?x1803 ?x1150 ?x1804 ?x1800 ?x1796 ?x1798 ?x596 ?x1206 ?x1207 ?x1301 ?x1302 ?x1303 ?x1304 ?x1794 ?x1253 ?x1256 ?x1305 ?x1306 ?x1272 ?x1307 ?x1308 ?x1789)))
 (let (($x307 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x269 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x217 (= (+ ?x40 ?x44 ?x219 ?x220 (* 9 ?x155)) 4)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 $x217 $x269 $x307 (not (= ?x717 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1811 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1789 (* 12 (* c c m n))))
 (let ((?x1308 (* 18 (* k m m n))))
 (let ((?x1307 (* 18 (* c m m n))))
 (let ((?x69 (+ c k)))
 (let ((?x317 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x1271 (* ?x320 ?x317 ?x317 ?x317 ?x69 ?x69)))
 (let ((?x1272 (* (- 3) ?x1271)))
 (let ((?x1306 (* 108 (* k m n))))
 (let ((?x1305 (* 108 (* c m n))))
 (let ((?x1256 (* k m m m)))
 (let ((?x1253 (* c m m m)))
 (let ((?x1794 (* 24 (* c k m n))))
 (let ((?x1304 (* 18 (* k m m))))
 (let ((?x1303 (* 18 (* c m m))))
 (let ((?x1302 (* 108 (* k m))))
 (let ((?x1301 (* 108 (* c m))))
 (let ((?x1207 (* k m m m n)))
 (let ((?x1206 (* c m m m n)))
 (let ((?x73 (+ k m)))
 (let ((?x1168 (* ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x596 (* (- 1) ?x1168)))
 (let ((?x1798 (* 12 (* c c k n))))
 (let ((?x1153 (* k k m)))
 (let ((?x1796 (* 18 ?x1153)))
 (let ((?x1145 (* c k m)))
 (let ((?x1800 (* 36 ?x1145)))
 (let ((?x1137 (* c c m)))
 (let ((?x1804 (* 18 ?x1137)))
 (let ((?x1136 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1150 (* (- 3) ?x1136)))
 (let ((?x1133 (* k k k)))
 (let ((?x1803 (* 18 ?x1133)))
 (let ((?x1125 (* c k k)))
 (let ((?x1802 (* 36 ?x1125)))
 (let ((?x1119 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x69)))
 (let ((?x1120 (* 2 ?x1119)))
 (let ((?x1117 (* c c k)))
 (let ((?x1809 (* 18 ?x1117)))
 (let ((?x1810 (* 24 (* c k k n))))
 (let ((?x1808 (* 12 (* k k k n))))
 (let ((?x937 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x916 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x1043 (* (- 1) (* k k m m m))))
 (let ((?x1083 (* (- 2) (* c k m m m))))
 (let ((?x1041 (* (- 1) (* c c m m m))))
 (let ((?x882 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x943 (* 2 ?x882)))
 (let ((?x880 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x1751 (* 12 (* k k m n))))
 (let ((?x792 (* ?x320 ?x317 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x776 (* ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x726 (* (- 1) ?x776)))
 (let ((?x704 (* (- 18) (* c c c m))))
 (let ((?x1064 (* (- 24) (* k k k k))))
 (let ((?x656 (* (- 18) (* c c c k))))
 (let ((?x1075 (* (- 5) (* k k k m m))))
 (let ((?x1074 (* (- 13) (* c k k m m))))
 (let ((?x1078 (* (- 11) (* c c k m m))))
 (let ((?x799 (* (- 3) (* c c c m m))))
 (let ((?x1082 (* (- 4) (* k k k k m))))
 (let ((?x1081 (* (- 11) (* c k k k m))))
 (let ((?x1084 (* (- 10) (* c c k k m))))
 (let ((?x751 (* (- 3) (* c c c k m))))
 (let ((?x525 (* 2 (* k k m m n))))
 (let ((?x522 (* c k m m n)))
 (let ((?x1735 (* 4 ?x522)))
 (let ((?x519 (* 2 (* c c m m n))))
 (let ((?x517 (* 2 (* k k k m n))))
 (let ((?x514 (* c k k m n)))
 (let ((?x1734 (* 4 ?x514)))
 (let ((?x511 (* 2 (* c c k m n))))
 (let ((?x155 (* c n)))
 (let ((?x1259 (* 216 ?x155)))
 (let ((?x55 (* k n)))
 (let ((?x1262 (* 216 ?x55)))
 (let ((?x1217 (* 216 k)))
 (let ((?x1214 (* 216 c)))
 (let ((?x1787 (+ ?x1214 ?x1217 ?x1262 ?x1259 (* (- 6) (* k m c k)) (* (- 6) (* k m k k)) (* (- 6) (* m k c c)) (* (- 6) (* k m k c)) (* (- 6) (* k m c c)) ?x511 ?x1734 ?x517 ?x519 ?x1735 ?x525 ?x751 ?x1084 ?x1081 ?x1082 ?x799 ?x1078 ?x1074 ?x1075 ?x656 (* (- 54) (* c c k k)) (* (- 54) (* c k k k)) ?x1064 ?x704 (* (- 51) (* c c k m)) (* (- 48) (* c k k m)) (* (- 15) (* k k k m)) ?x726 ?x792 ?x1751 ?x880 ?x943 (* (- 6) (* k k k c)) ?x1041 ?x1083 ?x1043 (* (- 6) (* m m k k)) ?x916 ?x937 (* (- 6) (* k k c c)) (* 3 (* c c m m)) (* 6 (* c k m m)) (* (- 6) (* k k c k)) (* 3 (* k k m m)) ?x1808 ?x1810 ?x1809 ?x1120 ?x1802 ?x1803 ?x1150 ?x1804 ?x1800 ?x1796 ?x1798 ?x596 (* (- 6) (* m m c c)) ?x1206 ?x1207 ?x1301 ?x1302 ?x1303 (* (- 6) (* m m c k)) ?x1304 (* (- 6) (* m k k k)) ?x1794 (* (- 6) (* m k c k)) (* (- 6) (* m m k c)) (* (- 6) (* m k k c)) ?x1253 ?x1256 ?x1305 ?x1306 ?x1272 ?x1307 ?x1308 ?x1789)))
 (let (($x307 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x269 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x217 (= (+ ?x40 ?x44 ?x219 ?x220 (* 9 ?x155)) 4)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 $x217 $x269 $x307 (not (= ?x1787 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x883 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1789 (* 12 (* c c m n))))
 (let ((?x1308 (* 18 (* k m m n))))
 (let ((?x1307 (* 18 (* c m m n))))
 (let ((?x69 (+ c k)))
 (let ((?x317 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x1271 (* ?x320 ?x317 ?x317 ?x317 ?x69 ?x69)))
 (let ((?x1272 (* (- 3) ?x1271)))
 (let ((?x1306 (* 108 (* k m n))))
 (let ((?x1305 (* 108 (* c m n))))
 (let ((?x1256 (* k m m m)))
 (let ((?x1253 (* c m m m)))
 (let ((?x1794 (* 24 (* c k m n))))
 (let ((?x1304 (* 18 (* k m m))))
 (let ((?x1303 (* 18 (* c m m))))
 (let ((?x1302 (* 108 (* k m))))
 (let ((?x1301 (* 108 (* c m))))
 (let ((?x1207 (* k m m m n)))
 (let ((?x1206 (* c m m m n)))
 (let ((?x73 (+ k m)))
 (let ((?x1168 (* ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x596 (* (- 1) ?x1168)))
 (let ((?x1798 (* 12 (* c c k n))))
 (let ((?x1153 (* k k m)))
 (let ((?x1796 (* 18 ?x1153)))
 (let ((?x1145 (* c k m)))
 (let ((?x1800 (* 36 ?x1145)))
 (let ((?x1137 (* c c m)))
 (let ((?x1804 (* 18 ?x1137)))
 (let ((?x1136 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1150 (* (- 3) ?x1136)))
 (let ((?x1133 (* k k k)))
 (let ((?x1803 (* 18 ?x1133)))
 (let ((?x1125 (* c k k)))
 (let ((?x1802 (* 36 ?x1125)))
 (let ((?x1119 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x69)))
 (let ((?x1120 (* 2 ?x1119)))
 (let ((?x1117 (* c c k)))
 (let ((?x1809 (* 18 ?x1117)))
 (let ((?x1810 (* 24 (* c k k n))))
 (let ((?x1808 (* 12 (* k k k n))))
 (let ((?x937 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x916 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x1043 (* (- 1) (* k k m m m))))
 (let ((?x1083 (* (- 2) (* c k m m m))))
 (let ((?x1041 (* (- 1) (* c c m m m))))
 (let ((?x882 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x943 (* 2 ?x882)))
 (let ((?x880 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x1751 (* 12 (* k k m n))))
 (let ((?x792 (* ?x320 ?x317 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x776 (* ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x726 (* (- 1) ?x776)))
 (let ((?x704 (* (- 18) (* c c c m))))
 (let ((?x1064 (* (- 24) (* k k k k))))
 (let ((?x681 (* c k k k)))
 (let ((?x1069 (* (- 66) ?x681)))
 (let ((?x663 (* c c k k)))
 (let ((?x1072 (* (- 60) ?x663)))
 (let ((?x656 (* (- 18) (* c c c k))))
 (let ((?x1075 (* (- 5) (* k k k m m))))
 (let ((?x1074 (* (- 13) (* c k k m m))))
 (let ((?x1078 (* (- 11) (* c c k m m))))
 (let ((?x799 (* (- 3) (* c c c m m))))
 (let ((?x1082 (* (- 4) (* k k k k m))))
 (let ((?x1081 (* (- 11) (* c k k k m))))
 (let ((?x1084 (* (- 10) (* c c k k m))))
 (let ((?x751 (* (- 3) (* c c c k m))))
 (let ((?x525 (* 2 (* k k m m n))))
 (let ((?x522 (* c k m m n)))
 (let ((?x1735 (* 4 ?x522)))
 (let ((?x519 (* 2 (* c c m m n))))
 (let ((?x517 (* 2 (* k k k m n))))
 (let ((?x514 (* c k k m n)))
 (let ((?x1734 (* 4 ?x514)))
 (let ((?x511 (* 2 (* c c k m n))))
 (let ((?x155 (* c n)))
 (let ((?x1259 (* 216 ?x155)))
 (let ((?x55 (* k n)))
 (let ((?x1262 (* 216 ?x55)))
 (let ((?x1217 (* 216 k)))
 (let ((?x1214 (* 216 c)))
 (let ((?x717 (+ ?x1214 ?x1217 ?x1262 ?x1259 ?x511 ?x1734 ?x517 ?x519 ?x1735 ?x525 ?x751 ?x1084 ?x1081 ?x1082 ?x799 ?x1078 ?x1074 ?x1075 ?x656 ?x1072 ?x1069 ?x1064 ?x704 (* (- 63) (* c c k m)) (* (- 72) (* c k k m)) (* (- 27) (* k k k m)) ?x726 ?x792 ?x1751 ?x880 ?x943 ?x1041 ?x1083 ?x1043 ?x916 ?x937 (* (- 3) (* c c m m)) (* (- 6) (* c k m m)) (* (- 3) (* k k m m)) ?x1808 ?x1810 ?x1809 ?x1120 ?x1802 ?x1803 ?x1150 ?x1804 ?x1800 ?x1796 ?x1798 ?x596 ?x1206 ?x1207 ?x1301 ?x1302 ?x1303 ?x1304 ?x1794 ?x1253 ?x1256 ?x1305 ?x1306 ?x1272 ?x1307 ?x1308 ?x1789)))
 (let (($x307 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x269 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x217 (= (+ ?x40 ?x44 ?x219 ?x220 (* 9 ?x155)) 4)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x200 (and $x133 $x217 $x269 $x307 (not (= ?x717 0)))))
 (let ((?x1787 (+ ?x1214 ?x1217 ?x1262 ?x1259 (* (- 6) (* k m c k)) (* (- 6) (* k m k k)) (* (- 6) (* m k c c)) (* (- 6) (* k m k c)) (* (- 6) (* k m c c)) ?x511 ?x1734 ?x517 ?x519 ?x1735 ?x525 ?x751 ?x1084 ?x1081 ?x1082 ?x799 ?x1078 ?x1074 ?x1075 ?x656 (* (- 54) ?x663) (* (- 54) ?x681) ?x1064 ?x704 (* (- 51) (* c c k m)) (* (- 48) (* c k k m)) (* (- 15) (* k k k m)) ?x726 ?x792 ?x1751 ?x880 ?x943 (* (- 6) (* k k k c)) ?x1041 ?x1083 ?x1043 (* (- 6) (* m m k k)) ?x916 ?x937 (* (- 6) (* k k c c)) (* 3 (* c c m m)) (* 6 (* c k m m)) (* (- 6) (* k k c k)) (* 3 (* k k m m)) ?x1808 ?x1810 ?x1809 ?x1120 ?x1802 ?x1803 ?x1150 ?x1804 ?x1800 ?x1796 ?x1798 ?x596 (* (- 6) (* m m c c)) ?x1206 ?x1207 ?x1301 ?x1302 ?x1303 (* (- 6) (* m m c k)) ?x1304 (* (- 6) (* m k k k)) ?x1794 (* (- 6) (* m k c k)) (* (- 6) (* m m k c)) (* (- 6) (* m k k c)) ?x1253 ?x1256 ?x1305 ?x1306 ?x1272 ?x1307 ?x1308 ?x1789)))
 (let (($x1010 (and $x133 $x217 $x269 $x307 (not (= ?x1787 0)))))
 (rewrite (= $x1010 $x200))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x850 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x317 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x882 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x73 (+ k m)))
 (let ((?x916 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x776 (* ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x1168 (* ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x1298 (* ?x317 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1089 (+ (* 3 (* ?x320 ?x317 ?x317 ?x317 ?x69 ?x69)) (* (- 2) (* ?x320 ?x317 ?x73 ?x69 ?x69)) (* 3 (* ?x317 ?x73 ?x69 ?x69 ?x69)) ?x1298 (* (- 1) (* ?x317 ?x73 ?x69 ?x69)) (* (- 1) (* ?x320 ?x317 ?x317 ?x317 ?x69)) (* (- 2) (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x69)) (* 3 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69 ?x69)) ?x1168 ?x776 (* (- 1) (* ?x320 ?x317 ?x73 ?x73 ?x69 ?x69)) (* (- 1) ?x916) (* (- 1) (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)) (* (- 1) (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)) (* (- 2) ?x882))))
 (let (($x1257 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x855 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x219 ?x220) 4) $x855 $x1257 (not (= ?x1089 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1813 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1789 (* 12 (* c c m n))))
 (let ((?x1308 (* 18 (* k m m n))))
 (let ((?x1307 (* 18 (* c m m n))))
 (let ((?x69 (+ c k)))
 (let ((?x317 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x1271 (* ?x320 ?x317 ?x317 ?x317 ?x69 ?x69)))
 (let ((?x1272 (* (- 3) ?x1271)))
 (let ((?x1306 (* 108 (* k m n))))
 (let ((?x1305 (* 108 (* c m n))))
 (let ((?x1256 (* k m m m)))
 (let ((?x1253 (* c m m m)))
 (let ((?x1794 (* 24 (* c k m n))))
 (let ((?x1304 (* 18 (* k m m))))
 (let ((?x1303 (* 18 (* c m m))))
 (let ((?x1302 (* 108 (* k m))))
 (let ((?x1301 (* 108 (* c m))))
 (let ((?x1207 (* k m m m n)))
 (let ((?x1206 (* c m m m n)))
 (let ((?x73 (+ k m)))
 (let ((?x1168 (* ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x596 (* (- 1) ?x1168)))
 (let ((?x1798 (* 12 (* c c k n))))
 (let ((?x1153 (* k k m)))
 (let ((?x1796 (* 18 ?x1153)))
 (let ((?x1145 (* c k m)))
 (let ((?x1800 (* 36 ?x1145)))
 (let ((?x1137 (* c c m)))
 (let ((?x1804 (* 18 ?x1137)))
 (let ((?x1136 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1150 (* (- 3) ?x1136)))
 (let ((?x1133 (* k k k)))
 (let ((?x1803 (* 18 ?x1133)))
 (let ((?x1125 (* c k k)))
 (let ((?x1802 (* 36 ?x1125)))
 (let ((?x1119 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x69)))
 (let ((?x1120 (* 2 ?x1119)))
 (let ((?x1117 (* c c k)))
 (let ((?x1809 (* 18 ?x1117)))
 (let ((?x1810 (* 24 (* c k k n))))
 (let ((?x1808 (* 12 (* k k k n))))
 (let ((?x937 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x916 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x1043 (* (- 1) (* k k m m m))))
 (let ((?x1083 (* (- 2) (* c k m m m))))
 (let ((?x1041 (* (- 1) (* c c m m m))))
 (let ((?x882 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x943 (* 2 ?x882)))
 (let ((?x880 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x1751 (* 12 (* k k m n))))
 (let ((?x792 (* ?x320 ?x317 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x776 (* ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x726 (* (- 1) ?x776)))
 (let ((?x704 (* (- 18) (* c c c m))))
 (let ((?x1064 (* (- 24) (* k k k k))))
 (let ((?x656 (* (- 18) (* c c c k))))
 (let ((?x1075 (* (- 5) (* k k k m m))))
 (let ((?x1074 (* (- 13) (* c k k m m))))
 (let ((?x1078 (* (- 11) (* c c k m m))))
 (let ((?x799 (* (- 3) (* c c c m m))))
 (let ((?x1082 (* (- 4) (* k k k k m))))
 (let ((?x1081 (* (- 11) (* c k k k m))))
 (let ((?x1084 (* (- 10) (* c c k k m))))
 (let ((?x751 (* (- 3) (* c c c k m))))
 (let ((?x525 (* 2 (* k k m m n))))
 (let ((?x522 (* c k m m n)))
 (let ((?x1735 (* 4 ?x522)))
 (let ((?x519 (* 2 (* c c m m n))))
 (let ((?x517 (* 2 (* k k k m n))))
 (let ((?x514 (* c k k m n)))
 (let ((?x1734 (* 4 ?x514)))
 (let ((?x511 (* 2 (* c c k m n))))
 (let ((?x155 (* c n)))
 (let ((?x1259 (* 216 ?x155)))
 (let ((?x55 (* k n)))
 (let ((?x1262 (* 216 ?x55)))
 (let ((?x1217 (* 216 k)))
 (let ((?x1214 (* 216 c)))
 (let ((?x1787 (+ ?x1214 ?x1217 ?x1262 ?x1259 (* (- 6) (* k m c k)) (* (- 6) (* k m k k)) (* (- 6) (* m k c c)) (* (- 6) (* k m k c)) (* (- 6) (* k m c c)) ?x511 ?x1734 ?x517 ?x519 ?x1735 ?x525 ?x751 ?x1084 ?x1081 ?x1082 ?x799 ?x1078 ?x1074 ?x1075 ?x656 (* (- 54) (* c c k k)) (* (- 54) (* c k k k)) ?x1064 ?x704 (* (- 51) (* c c k m)) (* (- 48) (* c k k m)) (* (- 15) (* k k k m)) ?x726 ?x792 ?x1751 ?x880 ?x943 (* (- 6) (* k k k c)) ?x1041 ?x1083 ?x1043 (* (- 6) (* m m k k)) ?x916 ?x937 (* (- 6) (* k k c c)) (* 3 (* c c m m)) (* 6 (* c k m m)) (* (- 6) (* k k c k)) (* 3 (* k k m m)) ?x1808 ?x1810 ?x1809 ?x1120 ?x1802 ?x1803 ?x1150 ?x1804 ?x1800 ?x1796 ?x1798 ?x596 (* (- 6) (* m m c c)) ?x1206 ?x1207 ?x1301 ?x1302 ?x1303 (* (- 6) (* m m c k)) ?x1304 (* (- 6) (* m k k k)) ?x1794 (* (- 6) (* m k c k)) (* (- 6) (* m m k c)) (* (- 6) (* m k k c)) ?x1253 ?x1256 ?x1305 ?x1306 ?x1272 ?x1307 ?x1308 ?x1789)))
 (let (($x307 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x269 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x217 (= (+ ?x40 ?x44 ?x219 ?x220 (* 9 ?x155)) 4)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x1010 (and $x133 $x217 $x269 $x307 (not (= ?x1787 0)))))
 (let ((?x1298 (* ?x317 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1089 (+ (* 3 ?x1271) (* (- 2) (* ?x320 ?x317 ?x73 ?x69 ?x69)) (* 3 (* ?x317 ?x73 ?x69 ?x69 ?x69)) ?x1298 (* (- 1) (* ?x317 ?x73 ?x69 ?x69)) (* (- 1) (* ?x320 ?x317 ?x317 ?x317 ?x69)) (* (- 2) ?x1119) (* 3 ?x1136) ?x1168 ?x776 (* (- 1) ?x792) (* (- 1) ?x916) (* (- 1) ?x880) (* (- 1) ?x937) (* (- 2) ?x882))))
 (let (($x1257 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x855 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x856 (and $x133 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x219 ?x220) 4) $x855 $x1257 (not (= ?x1089 0)))))
 (rewrite (= $x856 $x1010)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1286 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x317 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x882 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x943 (* 2 ?x882)))
 (let ((?x73 (+ k m)))
 (let ((?x937 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x880 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x916 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x792 (* ?x320 ?x317 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x776 (* ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x726 (* (- 1) ?x776)))
 (let ((?x1168 (* ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x596 (* (- 1) ?x1168)))
 (let ((?x1136 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1150 (* (- 3) ?x1136)))
 (let ((?x1119 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x69)))
 (let ((?x1120 (* 2 ?x1119)))
 (let ((?x687 (* ?x320 ?x317 ?x317 ?x317 ?x69)))
 (let ((?x124 (* ?x317 ?x73 ?x69 ?x69)))
 (let ((?x1271 (* ?x320 ?x317 ?x317 ?x317 ?x69 ?x69)))
 (let ((?x1272 (* (- 3) ?x1271)))
 (let ((?x949 (+ ?x1272 (* 2 (* ?x320 ?x317 ?x73 ?x69 ?x69)) (* (- 3) (* ?x317 ?x73 ?x69 ?x69 ?x69)) (* (- 1) (* ?x317 ?x73 ?x73 ?x69 ?x69)) ?x124 ?x687 ?x1120 ?x1150 ?x596 ?x726 ?x792 ?x916 ?x880 ?x937 ?x943)))
 (let (($x1257 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1230 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x689 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 (= ?x689 (- 4)) $x1230 $x1257 (not (= ?x949 0)))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x852 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x317 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x882 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x73 (+ k m)))
 (let ((?x916 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x776 (* ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x1168 (* ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x1298 (* ?x317 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x1089 (+ (* 3 (* ?x320 ?x317 ?x317 ?x317 ?x69 ?x69)) (* (- 2) (* ?x320 ?x317 ?x73 ?x69 ?x69)) (* 3 (* ?x317 ?x73 ?x69 ?x69 ?x69)) ?x1298 (* (- 1) (* ?x317 ?x73 ?x69 ?x69)) (* (- 1) (* ?x320 ?x317 ?x317 ?x317 ?x69)) (* (- 2) (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x69)) (* 3 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69 ?x69)) ?x1168 ?x776 (* (- 1) (* ?x320 ?x317 ?x73 ?x73 ?x69 ?x69)) (* (- 1) ?x916) (* (- 1) (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)) (* (- 1) (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)) (* (- 2) ?x882))))
 (let (($x1257 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x855 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x856 (and $x133 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x219 ?x220) 4) $x855 $x1257 (not (= ?x1089 0)))))
 (let ((?x943 (* 2 ?x882)))
 (let ((?x937 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x880 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x792 (* ?x320 ?x317 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x726 (* (- 1) ?x776)))
 (let ((?x596 (* (- 1) ?x1168)))
 (let ((?x1136 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1150 (* (- 3) ?x1136)))
 (let ((?x1119 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x69)))
 (let ((?x1120 (* 2 ?x1119)))
 (let ((?x687 (* ?x320 ?x317 ?x317 ?x317 ?x69)))
 (let ((?x124 (* ?x317 ?x73 ?x69 ?x69)))
 (let ((?x1271 (* ?x320 ?x317 ?x317 ?x317 ?x69 ?x69)))
 (let ((?x1272 (* (- 3) ?x1271)))
 (let ((?x949 (+ ?x1272 (* 2 (* ?x320 ?x317 ?x73 ?x69 ?x69)) (* (- 3) (* ?x317 ?x73 ?x69 ?x69 ?x69)) (* (- 1) ?x1298) ?x124 ?x687 ?x1120 ?x1150 ?x596 ?x726 ?x792 ?x916 ?x880 ?x937 ?x943)))
 (let (($x1230 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x689 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1263 (and $x133 (= ?x689 (- 4)) $x1230 $x1257 (not (= ?x949 0)))))
 (rewrite (= $x1263 $x856)))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x100 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ c k)))
 (let ((?x75 (+ (* (- 3) ?x69 ?x69 ?x70 ?x70 ?x70 ?x71) (* 2 ?x69 ?x69 (+ k m) ?x70 ?x71))))
 (let ((?x79 (- (- ?x75 (* 3 ?x69 ?x69 ?x69 (+ k m) ?x70)) (* ?x69 ?x69 (+ k m) (+ k m) ?x70))))
 (let ((?x83 (+ ?x79 (* ?x69 ?x69 (+ k m) ?x70) (* ?x69 ?x70 ?x70 ?x70 ?x71) (* 2 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x88 (- (- ?x83 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* ?x69 (+ k m) ?x70 ?x70 ?x70 ?x71))))
 (let ((?x95 (+ (- ?x88 (* ?x69 ?x69 ?x69 (+ k m) ?x70 ?x71 ?x71 ?x71)) (* ?x69 ?x69 (+ k m) (+ k m) ?x70 ?x71) (* ?x69 ?x69 ?x69 (+ k m) ?x70 ?x71 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* ?x69 (+ k m) ?x70 ?x70 ?x70 ?x71 ?x71) (* 2 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x95 0))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1276 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x317 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x882 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x943 (* 2 ?x882)))
 (let ((?x73 (+ k m)))
 (let ((?x937 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x880 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x916 (* ?x320 ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x792 (* ?x320 ?x317 ?x73 ?x73 ?x69 ?x69)))
 (let ((?x776 (* ?x320 ?x320 ?x320 ?x317 ?x73 ?x69 ?x69 ?x69)))
 (let ((?x726 (* (- 1) ?x776)))
 (let ((?x1168 (* ?x320 ?x317 ?x317 ?x317 ?x73 ?x69)))
 (let ((?x596 (* (- 1) ?x1168)))
 (let ((?x1136 (* ?x320 ?x320 ?x320 ?x317 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1150 (* (- 3) ?x1136)))
 (let ((?x1119 (* ?x320 ?x320 ?x317 ?x317 ?x317 ?x69)))
 (let ((?x1120 (* 2 ?x1119)))
 (let ((?x687 (* ?x320 ?x317 ?x317 ?x317 ?x69)))
 (let ((?x124 (* ?x317 ?x73 ?x69 ?x69)))
 (let ((?x1271 (* ?x320 ?x317 ?x317 ?x317 ?x69 ?x69)))
 (let ((?x1272 (* (- 3) ?x1271)))
 (let ((?x949 (+ ?x1272 (* 2 (* ?x320 ?x317 ?x73 ?x69 ?x69)) (* (- 3) (* ?x317 ?x73 ?x69 ?x69 ?x69)) (* (- 1) (* ?x317 ?x73 ?x73 ?x69 ?x69)) ?x124 ?x687 ?x1120 ?x1150 ?x596 ?x726 ?x792 ?x916 ?x880 ?x937 ?x943)))
 (let (($x1257 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1230 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x689 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x1263 (and $x133 (= ?x689 (- 4)) $x1230 $x1257 (not (= ?x949 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x75 (+ (* (- 3) ?x69 ?x69 ?x70 ?x70 ?x70 ?x71) (* 2 ?x69 ?x69 ?x73 ?x70 ?x71))))
 (let ((?x79 (- (- ?x75 (* 3 ?x69 ?x69 ?x69 ?x73 ?x70)) (* ?x69 ?x69 ?x73 ?x73 ?x70))))
 (let ((?x83 (+ ?x79 (* ?x69 ?x69 ?x73 ?x70) (* ?x69 ?x70 ?x70 ?x70 ?x71) (* 2 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x88 (- (- ?x83 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* ?x69 ?x73 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x95 (+ (- ?x88 (* ?x69 ?x69 ?x69 ?x73 ?x70 ?x71 ?x71 ?x71)) (* ?x69 ?x69 ?x73 ?x73 ?x70 ?x71) (* ?x69 ?x69 ?x69 ?x73 ?x70 ?x71 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x73 ?x70 ?x70 ?x70 ?x71 ?x71) (* 2 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x99 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x95 0))))))
 (rewrite (= $x99 $x1263))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x101 (asserted $x100)))
 (let ((@x118 (mp (mp @x101 (quant-intro (proof-bind ?x1276) (= $x100 $x1286)) $x1286) (rewrite (= $x1286 $x1286)) $x1286)))
 (let ((@x199 (mp (mp @x118 (quant-intro (proof-bind ?x852) (= $x1286 $x850)) $x850) (quant-intro (proof-bind ?x1813) (= $x850 $x1811)) $x1811)))
 (let ((@x1178 (mp~ (mp @x199 (quant-intro (proof-bind ?x883) (= $x1811 $x275)) $x275) (sk (~ $x275 $x764)) $x764)))
 (let ((@x1040 (mp @x1178 (rewrite (= $x764 $x215)) $x215)))
 (let ((@x1035 (and-elim @x1040 $x148)))
 (let ((@x749 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x148) $x1183)) @x1035 $x1183)))
 (let (($x182 (>= ?x766 1)))
 (let ((@x1684 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x148) $x182)) @x1035 $x182)))
 (let (($x1186 (<= ?x770 1)))
 (let ((@x159 (and-elim @x1040 $x1227)))
 (let ((@x1049 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1227) $x1186)) @x159 $x1186)))
 (let (($x578 (>= ?x770 1)))
 (let ((@x705 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1227) $x578)) @x159 $x578)))
 (let (($x767 (<= ?x1241 6)))
 (let ((@x1160 (and-elim @x1040 $x1562)))
 (let ((@x733 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1562) $x767)) @x1160 $x767)))
 (let (($x1148 (>= ?x1241 6)))
 (let ((@x1065 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1562) $x1148)) @x1160 $x1148)))
 (let (($x1077 (<= ?x1222 4)))
 (let ((@x732 (and-elim @x1040 $x165)))
 (let ((@x789 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x165) $x1077)) @x732 $x1077)))
 (let (($x1292 (>= ?x1222 4)))
 (let ((@x974 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x165) $x1292)) @x732 $x1292)))
 (let (($x1016 (not (<= ?x113 0))))
 (let (($x143 (>= ?x113 0)))
 (let ((@x988 ((_ th-lemma arith) (hypothesis (not $x143)) @x705 @x1049 @x705 @x1049 @x1684 @x749 @x705 @x1049 @x705 @x1049 @x974 @x789 @x1065 @x733 @x705 @x1049 @x1065 @x733 @x1065 @x733 @x1684 @x749 @x974 @x789 @x705 @x1049 false)))
 (let ((@x721 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x216 $x1016 (not $x143))) (and-elim @x1040 $x781) (or $x1016 (not $x143)))))
 ((_ th-lemma arith) (unit-resolution @x721 (lemma @x988 $x143) $x1016) @x705 @x1049 @x1065 @x733 @x705 @x1049 @x705 @x1049 @x1684 @x749 @x974 @x789 @x705 @x1049 @x1684 @x749 @x1684 @x749 @x705 @x1049 @x1065 @x733 @x1065 @x733 @x705 @x1049 @x1684 @x749 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        20
 :arith-assert-upper        19
 :arith-branch-var          2
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           9
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             720
 :arith-nonlinear-bounds    15
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              10
 :arith-row-summations      17
 :arith-tableau-max-columns 109
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 7
 :del-clause                16
 :final-checks              9
 :max-memory                4.00
 :memory                    3.35
 :mk-bool-var               27
 :mk-clause                 16
 :num-allocs                1896551
 :num-checks                1
 :propagations              11
 :rlimit-count              21513
 :time                      0.02
 :total-time                0.03)
