unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x4101 (* (- 1) s!1)))
 (let ((?x303 (* r00 r00)))
 (let ((?x2284 (* (- 3) ?x303)))
 (let ((?x578 (+ s00 ?x2284 (* 3 (* r!2 r!2)) ?x4101)))
 (let (($x1489 (<= ?x578 0)))
 (let (($x579 (= ?x578 0)))
 (let ((?x4116 (+ 3 (* 6 r!2) s!1)))
 (let ((?x4113 (+ ?x4101 x!0)))
 (let ((?x3895 (+ 1 r!2)))
 (let ((?x4125 (* 18 (* ?x3895 ?x3895 ?x3895 ?x4113 ?x4113 ?x4116))))
 (let ((?x4122 (* (- 6) (* r00 r00 ?x3895 ?x3895 ?x4113 ?x4116 ?x4116))))
 (let ((?x4117 (* (- 9) (* r00 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116 ?x4116))))
 (let ((?x4103 (* (- 4) (* s00 s00 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116))))
 (let ((?x443 (* (- 6) (* r00 r00 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116 ?x4116))))
 (let ((?x2224 (* (- 9) (* r00 ?x3895 ?x3895 ?x4113 ?x4116 ?x4116))))
 (let ((?x2343 (* 2 (* ?x3895 ?x3895 ?x4113 ?x4116 ?x4116 ?x4116))))
 (let ((?x3187 (* 2 (* s00 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116 ?x4116))))
 (let ((?x1597 (* 3 (* ?x3895 ?x3895 ?x4113 ?x4116 ?x4116))))
 (let ((?x1049 (* 9 (* s00 ?x3895 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116))))
 (let ((?x4068 (* (- 9) (* ?x3895 ?x3895 ?x3895 ?x4113 ?x4116 ?x4116))))
 (let ((?x1255 (* 3 (* ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116 ?x4116))))
 (let ((?x1248 (* 9 (* r00 s00 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116))))
 (let ((?x1071 (* (- 18) (* x00 ?x3895 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116))))
 (let ((?x939 (* 18 (* ?x3895 ?x3895 ?x4113 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116))))
 (let ((?x906 (* (- 6) (* r00 s00 ?x3895 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116))))
 (let ((?x926 (* 2 (* s00 ?x3895 ?x3895 ?x4113 ?x4116 ?x4116))))
 (let ((?x924 (* 2 (* ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116 ?x4116 ?x4116))))
 (let ((?x920 (* 18 (* r00 ?x3895 ?x4113 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116))))
 (let ((?x916 (* 6 (* r00 ?x3895 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116 ?x4116))))
 (let ((?x764 (* 6 (* r00 ?x3895 ?x3895 ?x3895 ?x4113 ?x4116 ?x4116))))
 (let ((?x762 (* (- 3) (* s00 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116))))
 (let ((?x759 (* (- 18) (* r00 x00 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116))))
 (let ((?x2754 (* 6 (* r00 r00 s00 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116))))
 (let ((?x367 (* (- 9) (* ?x3895 ?x3895 ?x4113 ?x4113 ?x4113 ?x4116 ?x4116 ?x4116 ?x4116))))
 (let ((?x3033 (+ (* 21 (* s00 r!2 s!1 x!0)) ?x367 (* (- 9) (* s00 r!2 r!2 r!2 s!1 s!1)) ?x2754 (* (- 36) (* r00 x00 r!2 s!1 x!0)) (* (- 4) (* s00 s00 s!1 x!0)) ?x759 ?x762 ?x764 (* 54 (* r00 x!0 x!0)) (* 270 (* r00 r!2 r!2 x!0 x!0)) ?x916 ?x920 ?x924 ?x926 ?x906 ?x939 ?x1071 (* (- 6) (* s00 s!1 s!1)) ?x1248 ?x1255 ?x4068 ?x1049 (* (- 171) (* s00 r!2 r!2 r!2 s!1)) (* (- 18) (* x00 r!2 r!2 r!2 s!1 x!0)) (* (- 3) (* s00 r00 s!1 s!1)) (* 171 (* s00 r!2 r!2 r!2 x!0)) (* (- 27) (* s00 r00 r!2 r!2 x!0)) (* 198 (* s00 r!2 r!2 x!0)) (* (- 378) (* x00 r!2 r!2 r!2 x!0)) ?x1597 (* 216 (* r00 r!2 s!1 s!1)) (* 18 (* r00 x00 s!1 s!1)) (* 4 (* s00 s00 s!1 s!1)) (* 36 (* r00 x00 r!2 s!1 s!1)) (* (- 24) (* s00 s00 r!2 r!2 r!2 x!0)) (* (- 9) (* s00 r00 r!2 r!2 s!1 x!0)) (* (- 48) (* s00 s00 r!2 x!0)) (* 378 (* x00 r!2 r!2 r!2 s!1)) (* 108 (* r00 r!2 r!2 r!2 s!1 s!1)) (* 48 (* s00 s00 r!2 s!1)) (* 24 (* s00 s00 r!2 r!2 r!2 s!1)) (* (- 18) (* r00 x00 r!2 r!2 s!1 x!0)) (* 9 (* s00 r!2 r!2 r!2 s!1 x!0)) (* 6 (* s00 s!1 x!0)) (* 99 (* s00 r!2 x!0)) (* 54 (* s00 r!2 r!2 r!2 r!2 x!0)) (* 18 (* r00 s!1 s!1 s!1)) (* 486 (* x00 r!2 r!2 s!1)) (* (- 21) (* s00 r!2 s!1 s!1)) (* 18 (* r00 r!2 r!2 s!1 s!1 s!1)) (* 18 (* s00 r00 r!2 x!0)) (* (- 108) (* r00 x00 r!2 r!2 r!2 x!0)) (* (- 18) (* x00 s!1 x!0)) (* (- 54) (* x00 r!2 s!1 x!0)) (* 24 (* s00 r!2 r!2 s!1 x!0)) (* 9 (* s00 r00 r!2 r!2 s!1 s!1)) (* 72 (* s00 r00 r!2 r!2 r!2 s!1)) (* (- 54) (* x00 r!2 r!2 s!1 x!0)) (* (- 60) (* s00 s00 r!2 r!2 x!0)) (* (- 270) (* r00 x00 r!2 r!2 x!0)) (* 27 (* s00 r00 r!2 r!2 s!1)) (* 18 (* x00 r!2 r!2 r!2 s!1 s!1)) (* (- 18) (* s00 r00 r!2 s!1)) (* 54 (* x00 r!2 r!2 s!1 s!1)) (* 54 (* x00 r!2 s!1 s!1)) (* 18 (* x00 s!1 s!1)) (* (- 108) (* x00 r!2 r!2 r!2 r!2 x!0)) (* 3 (* s00 r00 s!1 x!0)) (* (- 72) (* s00 r00 r!2 r!2 r!2 x!0)) (* (- 108) (* r00 s!1 x!0)) (* (- 432) (* r00 r!2 s!1 x!0)) ?x3187 (* 18 (* r00 s!1 x!0 x!0)) ?x2343 (* 36 (* r00 r!2 s!1 x!0 x!0)) ?x2224 (* 18 (* r00 x00 r!2 r!2 s!1 s!1)) (* 54 (* r00 s!1 s!1)) (* 12 (* s00 r00 r00 r!2 s!1 x!0)) (* 6 (* s00 r00 r!2 r!2 r!2 s!1 s!1)) (* (- 18) (* r00 x00 s!1 x!0)) (* 108 (* r00 r!2 r!2 r!2 x!0 x!0)) (* 216 (* r00 r!2 x!0 x!0)) (* (- 216) (* r00 x00 r!2 x!0)) (* (- 6) (* s00 r00 r!2 r!2 r!2 s!1 x!0)) (* 8 (* s00 s00 r!2 s!1 s!1)) (* (- 36) (* s00 r00 r!2 r!2 r!2 r!2 x!0)) (* (- 36) (* r00 r!2 r!2 s!1 s!1 x!0)) (* 36 (* s00 r00 r00 r!2 r!2 r!2 x!0)) (* 6 (* s00 r00 r00 s!1 x!0)) (* 36 (* r00 r!2 s!1 s!1 s!1)) (* 270 (* x00 r!2 s!1)) (* (- 24) (* s00 r!2 r!2 s!1 s!1)) (* 6 (* s00 r00 r00 r!2 r!2 s!1 x!0)) (* 108 (* x00 r!2 r!2 r!2 r!2 s!1)) (* 60 (* s00 s00 r!2 r!2 s!1)) (* 12 (* s00 s00 s!1)) (* (- 12) (* s00 s00 x!0)) (* 270 (* r00 x00 r!2 r!2 s!1)) (* 54 (* r00 x00 s!1)) (* 4 (* s00 s00 r!2 r!2 s!1 s!1)) (* (- 36) (* r00 s!1 s!1 x!0)) (* (- 72) (* r00 r!2 s!1 s!1 x!0)) (* (- 216) (* r00 r!2 r!2 r!2 s!1 x!0)) (* (- 540) (* r00 r!2 r!2 s!1 x!0)) (* (- 54) (* r00 x00 x!0)) (* 90 (* s00 r00 r00 r!2 r!2 x!0)) (* 18 (* s00 r00 r00 x!0)) (* 72 (* s00 r00 r00 r!2 x!0)) (* (- 6) (* s00 r00 r00 r!2 r!2 s!1 s!1)) (* (- 12) (* s00 r00 r00 r!2 s!1 s!1)) (* (- 6) (* s00 r00 r00 s!1 s!1)) (* (- 36) (* s00 r00 r00 r!2 r!2 r!2 s!1)) (* (- 90) (* s00 r00 r00 r!2 r!2 s!1)) (* (- 72) (* s00 r00 r00 r!2 s!1)) (* (- 18) (* s00 r00 r00 s!1)) (* 36 (* s00 r00 r!2 r!2 r!2 r!2 s!1)) (* 18 (* r00 r!2 r!2 s!1 x!0 x!0)) (* 108 (* r00 x00 r!2 r!2 r!2 s!1)) ?x443 (* (- 486) (* x00 r!2 r!2 x!0)) (* (- 8) (* s00 s00 r!2 s!1 x!0)) (* (- 9) (* s00 r00 s!1)) (* (- 18) (* s00 s!1)) (* (- 54) (* x00 x!0)) (* 9 (* s00 r00 x!0)) (* 18 (* s00 x!0)) (* 54 (* x00 s!1)) (* (- 99) (* s00 r!2 s!1)) (* (- 198) (* s00 r!2 r!2 s!1)) (* 270 (* r00 r!2 r!2 s!1 s!1)) (* 216 (* r00 x00 r!2 s!1)) (* (- 4) (* s00 s00 r!2 r!2 s!1 x!0)) (* (- 54) (* s00 r!2 r!2 r!2 r!2 s!1)) ?x4103 (* (- 270) (* x00 r!2 x!0)) ?x4117 ?x4122 ?x4125)))
 (let (($x3022 (= ?x3033 0)))
 (let (($x2522 (not $x3022)))
 (let ((?x999 (* (- 9) s!1)))
 (let ((?x3509 (* r00 r00 s!1)))
 (let ((?x2201 (* 36 ?x3509)))
 (let ((?x1348 (* x00 x00)))
 (let ((?x2423 (* 108 ?x1348)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x3099 (* 16 ?x1186)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x3685 (* (- 432) ?x884)))
 (let ((?x807 (* s00 x00)))
 (let ((?x982 (* (- 108) ?x807)))
 (let ((?x649 (* s00 r00 r00)))
 (let ((?x1711 (* (- 36) ?x649)))
 (let ((?x593 (* s00 s00)))
 (let ((?x3955 (* 51 ?x593)))
 (let ((?x524 (* r00 x00)))
 (let ((?x1903 (* 108 ?x524)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2387 (+ ?x137 (* (- 54) (* s00 r00)) (* 432 (* r00 r00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* 216 (* s00 r00 x00)) ?x1903 ?x3955 ?x1711 (* (- 108) (* s00 s00 r00)) (* 54 (* r00 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* (- 36) (* s00 s00 r00 r00)) ?x982 ?x3685 (* 216 (* s00 r00 r00 r00)) (* (- 12) (* s00 s!1 s!1)) (* (- 108) (* r00 x!0)) ?x3099 ?x2423 (* (- 216) (* r00 r00 r00 s!1)) (* 108 (* x!0 x!0)) (* 108 (* s00 r00 s!1)) (* (- 66) (* s00 s!1)) (* (- 216) (* x00 x!0)) (* (- 216) (* s00 r00 x!0)) ?x2201 (* 108 (* s00 x!0)) (* 108 (* x00 s!1)) (* (- 108) (* s!1 x!0)) ?x999 (* 15 (* s!1 s!1)))))
 (let (($x2229 (= ?x2387 0)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x1600 (* 36 ?x879)))
 (let ((?x1568 (* (- 6) ?x807)))
 (let ((?x1602 (* 15 ?x593)))
 (let ((?x3774 (* 54 ?x524)))
 (let ((?x981 (+ ?x137 (* (- 24) (* s00 r00)) ?x3774 ?x1602 (* (- 24) (* s00 r!2)) ?x1711 (* 2 (* s00 s00 r00)) (* 24 (* r00 s!1)) ?x1568 ?x1600 (* 36 (* r00 x00 r!2)) (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* (- 36) (* r00 r!2 x!0)) (* (- 4) (* r00 s!1 s!1)) (* 2 (* s00 r00 s!1)) (* (- 12) (* s00 s!1)) (* 4 (* s00 s00 r!2)) ?x2201 (* 6 (* s00 x!0)) (* 6 (* x00 s!1)) (* (- 2) (* s00 r!2 s!1)) (* (- 36) (* r00 r00 x!0)) (* (- 6) (* s!1 x!0)) ?x999 (* (- 2) (* r!2 s!1 s!1)) (* 24 (* r!2 s!1)) (* (- 3) (* s!1 s!1)) (* (- 54) (* r!2 x!0)))))
 (let (($x1821 (= ?x981 0)))
 (let ((?x3994 (* (- 3) s!1)))
 (let ((?x2382 (* 4 ?x593)))
 (let ((?x3575 (* 18 ?x524)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1033 (+ ?x44 (* (- 9) (* s00 r00)) ?x3575 ?x2382 (* (- 9) (* s00 r!2)) (* (- 6) ?x649) (* 9 (* r00 s!1)) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* 6 (* s00 r00 r!2)) (* (- 6) (* r00 r!2 s!1)) (* (- 2) (* s00 s!1)) (* 6 ?x3509) ?x3994 (* 9 (* r!2 s!1)) (* (- 2) (* s!1 s!1)) (* (- 18) (* r!2 x!0)))))
 (let (($x1027 (= ?x1033 0)))
 (let ((?x3883 (* 6 x!0)))
 (let ((?x4000 (* r!2 s!1)))
 (let ((?x4015 (* 2 ?x4000)))
 (let ((?x3993 (* 3 r!2)))
 (let ((?x471 (* r00 r00 r00)))
 (let ((?x472 (* 12 ?x471)))
 (let ((?x428 (* s00 r00)))
 (let ((?x506 (* (- 6) ?x428)))
 (let ((?x503 (* (- 6) x00)))
 (let ((?x502 (* (- 3) r00)))
 (let ((?x1104 (+ ?x44 ?x502 ?x503 ?x506 ?x472 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)) ?x3993 ?x3994 ?x4015 ?x3883)))
 (let (($x1142 (= ?x1104 0)))
 (let (($x3021 (and $x579 $x1142 $x1027 $x1821 $x2229 $x2522)))
 (let ((?x927 (+ (* 18 (* r!2 r!2 s!1 s!1 r00 x00)) (* 18 (* x!0 s00)) (* 6 (* r!2 r!2 r!2 s!1 s!1 s00 r00)) (* (- 4) (* s!1 x!0 s00 s00)) (* 54 (* s!1 s!1 r00)) (* (- 18) (* s!1 x!0 r00 x00)) (* (- 18) (* s!1 s00)) (* (- 36) (* r!2 s!1 x!0 r00 x00)) (* 54 (* s!1 x00)) (* (- 9) (* s!1 s00 r00)) (* (- 216) (* r!2 x!0 r00 x00)) (* (- 6) (* r!2 r!2 r!2 s!1 x!0 s00 r00)) (* (- 99) (* r!2 s!1 s00)) (* (- 6) (* s!1 s!1 s00)) ?x4103 ?x4117 (* 8 (* r!2 s!1 s!1 s00 s00)) (* (- 36) (* r!2 r!2 r!2 r!2 x!0 s00 r00)) (* 9 (* x!0 s00 r00)) ?x4122 ?x4125 (* 108 (* r!2 r!2 r!2 r!2 s!1 x00)) (* (- 54) (* x!0 x00)) (* 60 (* r!2 r!2 s!1 s00 s00)) (* 12 (* s!1 s00 s00)) (* (- 12) (* x!0 s00 s00)) (* (- 270) (* r!2 x!0 x00)) (* 270 (* r!2 r!2 s!1 r00 x00)) (* (- 4) (* r!2 r!2 s!1 x!0 s00 s00)) (* 54 (* s!1 r00 x00)) (* 216 (* r!2 s!1 r00 x00)) (* 4 (* r!2 r!2 s!1 s!1 s00 s00)) (* (- 486) (* r!2 r!2 x!0 x00)) ?x2343 (* 21 (* r!2 s!1 x!0 s00)) (* 24 (* r!2 r!2 s!1 x!0 s00)) ?x2224 (* 171 (* r!2 r!2 r!2 x!0 s00)) ?x916 (* 6 (* s!1 x!0 s00)) ?x906 (* 54 (* r!2 r!2 r!2 r!2 x!0 s00)) ?x939 ?x759 (* 198 (* r!2 r!2 x!0 s00)) (* 99 (* r!2 x!0 s00)) ?x762 ?x764 (* (- 24) (* r!2 r!2 s!1 s!1 s00)) (* 270 (* r!2 s!1 x00)) (* (- 9) (* r!2 r!2 r!2 s!1 s!1 s00)) ?x1248 (* (- 21) (* r!2 s!1 s!1 s00)) (* 486 (* r!2 r!2 s!1 x00)) ?x1255 ?x4068 (* (- 54) (* r!2 r!2 r!2 r!2 s!1 s00)) (* (- 171) (* r!2 r!2 r!2 s!1 s00)) (* (- 198) (* r!2 r!2 s!1 s00)) (* 378 (* r!2 r!2 r!2 s!1 x00)) (* 9 (* r!2 r!2 r!2 s!1 x!0 s00)) (* (- 18) (* r!2 r!2 s!1 x!0 r00 x00)) (* (- 378) (* r!2 r!2 r!2 x!0 x00)) ?x367 (* (- 60) (* r!2 r!2 x!0 s00 s00)) ?x1049 (* (- 54) (* r!2 r!2 s!1 x!0 x00)) (* (- 18) (* r!2 r!2 r!2 s!1 x!0 x00)) (* 36 (* r!2 s!1 s!1 r00 x00)) (* (- 18) (* s!1 x!0 x00)) (* (- 54) (* r!2 s!1 x!0 x00)) (* 18 (* s!1 s!1 r00 x00)) ?x1071 (* (- 108) (* r!2 r!2 r!2 r!2 x!0 x00)) (* 18 (* s!1 s!1 x00)) (* 54 (* r!2 s!1 s!1 x00)) (* 54 (* r!2 r!2 s!1 s!1 x00)) (* 18 (* r!2 r!2 r!2 s!1 s!1 x00)) (* (- 18) (* r!2 s!1 s00 r00)) (* 27 (* r!2 r!2 s!1 s00 r00)) (* (- 270) (* r!2 r!2 x!0 r00 x00)) (* 72 (* r!2 r!2 r!2 s!1 s00 r00)) (* (- 3) (* s!1 s!1 s00 r00)) (* 9 (* r!2 r!2 s!1 s!1 s00 r00)) (* 18 (* r!2 x!0 s00 r00)) (* (- 27) (* r!2 r!2 x!0 s00 r00)) ?x1597 (* (- 48) (* r!2 x!0 s00 s00)) (* (- 72) (* r!2 r!2 r!2 x!0 s00 r00)) (* 3 (* s!1 x!0 s00 r00)) (* (- 9) (* r!2 r!2 s!1 x!0 s00 r00)) (* (- 24) (* r!2 r!2 r!2 x!0 s00 s00)) (* 24 (* r!2 r!2 r!2 s!1 s00 s00)) (* 4 (* s!1 s!1 s00 s00)) (* 216 (* r!2 s!1 s!1 r00)) (* 270 (* r!2 r!2 s!1 s!1 r00)) (* (- 8) (* r!2 s!1 x!0 s00 s00)) (* 108 (* r!2 r!2 r!2 s!1 s!1 r00)) (* 48 (* r!2 s!1 s00 s00)) (* 18 (* s!1 s!1 s!1 r00)) (* 36 (* r!2 s!1 s!1 s!1 r00)) (* 18 (* r!2 r!2 s!1 s!1 s!1 r00)) (* (- 108) (* s!1 x!0 r00)) (* (- 432) (* r!2 s!1 x!0 r00)) ?x3187 ?x443 (* (- 540) (* r!2 r!2 s!1 x!0 r00)) (* (- 216) (* r!2 r!2 r!2 s!1 x!0 r00)) (* (- 36) (* s!1 s!1 x!0 r00)) (* (- 72) (* r!2 s!1 s!1 x!0 r00)) (* (- 36) (* r!2 r!2 s!1 s!1 x!0 r00)) (* 54 (* x!0 x!0 r00)) (* 216 (* r!2 x!0 x!0 r00)) (* 270 (* r!2 r!2 x!0 x!0 r00)) (* 108 (* r!2 r!2 r!2 x!0 x!0 r00)) (* 18 (* s!1 x!0 x!0 r00)) (* 36 (* r!2 s!1 x!0 x!0 r00)) ?x2754 (* 18 (* r!2 r!2 s!1 x!0 x!0 r00)) (* 36 (* r!2 r!2 r!2 r!2 s!1 s00 r00)) (* (- 18) (* s!1 s00 r00 r00)) (* (- 72) (* r!2 s!1 s00 r00 r00)) (* (- 90) (* r!2 r!2 s!1 s00 r00 r00)) (* (- 36) (* r!2 r!2 r!2 s!1 s00 r00 r00)) (* (- 6) (* s!1 s!1 s00 r00 r00)) (* (- 12) (* r!2 s!1 s!1 s00 r00 r00)) (* (- 6) (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* 18 (* x!0 s00 r00 r00)) (* 72 (* r!2 x!0 s00 r00 r00)) (* 90 (* r!2 r!2 x!0 s00 r00 r00)) (* (- 54) (* x!0 r00 x00)) (* 36 (* r!2 r!2 r!2 x!0 s00 r00 r00)) (* 6 (* s!1 x!0 s00 r00 r00)) (* 12 (* r!2 s!1 x!0 s00 r00 r00)) (* 108 (* r!2 r!2 r!2 s!1 r00 x00)) (* 6 (* r!2 r!2 s!1 x!0 s00 r00 r00)) ?x920 (* (- 108) (* r!2 r!2 r!2 x!0 r00 x00)) ?x924 ?x926)))
 (let ((?x1378 (* (- 108) ?x1348)))
 (let ((?x1377 (* (- 16) ?x1186)))
 (let ((?x1058 (* s00 r00 r00 r00)))
 (let ((?x1373 (* (- 216) ?x1058)))
 (let ((?x885 (* 432 ?x884)))
 (let ((?x1131 (* 108 ?x807)))
 (let ((?x733 (* s00 s00 r00 r00)))
 (let ((?x734 (* 36 ?x733)))
 (let ((?x670 (* s00 s00 r00)))
 (let ((?x1014 (* 108 ?x670)))
 (let ((?x1002 (* 36 ?x649)))
 (let ((?x1367 (* (- 51) ?x593)))
 (let ((?x4036 (* s!1 r00 r00)))
 (let ((?x4043 (* (- 36) ?x4036)))
 (let ((?x1364 (* (- 108) ?x524)))
 (let ((?x515 (* s00 r00 x00)))
 (let ((?x1363 (* (- 216) ?x515)))
 (let ((?x522 (* 54 ?x428)))
 (let ((?x989 (* (- 9) s00)))
 (let ((?x3889 (* 9 s!1)))
 (let ((?x3891 (+ ?x3889 ?x989 ?x522 ?x1363 ?x1364 (* (- 15) (* s!1 s!1)) ?x4043 ?x1367 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1002 ?x1014 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x734 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1131 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x885 (* 12 (* s!1 s!1 s00)) ?x1373 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1377 (* 216 (* x!0 x00)) ?x1378)))
 (let ((?x892 (* (- 36) ?x879)))
 (let ((?x808 (* 6 ?x807)))
 (let ((?x698 (* (- 2) ?x670)))
 (let ((?x918 (* (- 15) ?x593)))
 (let ((?x553 (* (- 54) ?x524)))
 (let ((?x566 (* 24 ?x428)))
 (let ((?x4014 (+ ?x3889 ?x989 (* (- 24) ?x4000) (* 24 (* r!2 s00)) ?x566 ?x553 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x4043 ?x918 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1002 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x698 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x808 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x892 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x650 (* 6 ?x649)))
 (let ((?x606 (* (- 4) ?x593)))
 (let ((?x538 (* (- 18) ?x524)))
 (let ((?x543 (* 9 ?x428)))
 (let ((?x380 (* (- 3) s00)))
 (let ((?x3317 (+ (* 3 s!1) ?x380 (* (- 9) ?x4000) (* 9 (* r!2 s00)) ?x543 ?x538 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x4036) ?x606 (* 18 (* x!0 r00)) ?x650 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x3884 (+ ?x3993 ?x3994 ?x3883 ?x44 ?x502 ?x503 ?x4015 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x506 ?x472)))
 (let (($x3998 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x303)) 0)))
 (let (($x2039 (and $x3998 (= ?x3884 0) (= ?x3317 0) (= ?x4014 0) (= ?x3891 0) (not (= ?x927 0)))))
 (let (($x2105 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1390 (+ 3 ?x214 s)))
 (let ((?x282 (* (- 1) s)))
 (let ((?x1396 (+ ?x282 x)))
 (let ((?x1387 (+ 1 r)))
 (let ((?x4513 (* 6 (* r r s x s00 r00 r00))))
 (let ((?x4512 (* 12 (* r s x s00 r00 r00))))
 (let ((?x4511 (* 6 (* s x s00 r00 r00))))
 (let ((?x4510 (* 36 (* r r r x s00 r00 r00))))
 (let ((?x4509 (* 90 (* r r x s00 r00 r00))))
 (let ((?x4508 (* 72 (* r x s00 r00 r00))))
 (let ((?x4507 (* 18 (* x s00 r00 r00))))
 (let ((?x4506 (* (- 6) (* r r s s s00 r00 r00))))
 (let ((?x4505 (* (- 12) (* r s s s00 r00 r00))))
 (let ((?x4504 (* (- 6) (* s s s00 r00 r00))))
 (let ((?x4503 (* (- 36) (* r r r s s00 r00 r00))))
 (let ((?x4502 (* (- 90) (* r r s s00 r00 r00))))
 (let ((?x4501 (* (- 72) (* r s s00 r00 r00))))
 (let ((?x4500 (* (- 18) (* s s00 r00 r00))))
 (let ((?x4499 (* 18 (* r r s x x r00))))
 (let ((?x4498 (* 36 (* r s x x r00))))
 (let ((?x4497 (* 18 (* s x x r00))))
 (let ((?x4496 (* 108 (* r r r x x r00))))
 (let ((?x4495 (* 270 (* r r x x r00))))
 (let ((?x4494 (* 216 (* r x x r00))))
 (let ((?x4493 (* 54 (* x x r00))))
 (let ((?x4492 (* (- 36) (* r r s s x r00))))
 (let ((?x4491 (* (- 72) (* r s s x r00))))
 (let ((?x4490 (* (- 36) (* s s x r00))))
 (let ((?x4489 (* (- 216) (* r r r s x r00))))
 (let ((?x4488 (* (- 540) (* r r s x r00))))
 (let ((?x4486 (* (- 432) (* r s x r00))))
 (let ((?x4485 (* (- 108) (* s x r00))))
 (let ((?x4484 (* 18 (* r r s s s r00))))
 (let ((?x4483 (* 36 (* r s s s r00))))
 (let ((?x4482 (* 18 (* s s s r00))))
 (let ((?x4481 (* 108 (* r r r s s r00))))
 (let ((?x4480 (* 270 (* r r s s r00))))
 (let ((?x4478 (* 216 (* r s s r00))))
 (let ((?x4363 (* (- 18) (* s x x00))))
 (let ((?x4142 (* (- 18) (* r r r s x x00))))
 (let ((?x4275 (* 9 (* r r r s x s00))))
 (let ((?x4274 (* (- 54) (* r r r r s s00))))
 (let ((?x4279 (* (- 9) (* r r r s s s00))))
 (let ((?x4280 (* 54 (* r r r r x s00))))
 (let ((?x4308 (* (- 12) (* x s00 s00))))
 (let ((?x4313 (* 12 (* s s00 s00))))
 (let ((?x1322 (* x x00)))
 (let ((?x4334 (* (- 54) ?x1322)))
 (let ((?x726 (* s x00)))
 (let ((?x4330 (* 54 ?x726)))
 (let ((?x690 (* s s00)))
 (let ((?x4328 (* (- 18) ?x690)))
 (let ((?x653 (* s s r00)))
 (let ((?x4327 (* 54 ?x653)))
 (let ((?x602 (* x s00)))
 (let ((?x4325 (* 18 ?x602)))
 (let ((?x4744 (+ (* 18 (* r r s s r00 x00)) ?x4325 (* 6 (* r r r s s s00 r00)) (* (- 4) (* s x s00 s00)) ?x4327 (* (- 18) (* s x r00 x00)) ?x4328 (* (- 36) (* r s x r00 x00)) ?x4330 (* (- 9) (* s s00 r00)) (* (- 216) (* r x r00 x00)) (* (- 6) (* r r r s x s00 r00)) (* (- 99) (* r s s00)) (* (- 6) (* s s s00)) (* (- 4) (* s00 s00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* (- 9) (* r00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390)) (* 8 (* r s s s00 s00)) (* (- 36) (* r r r r x s00 r00)) (* 9 (* x s00 r00)) (* (- 6) (* r00 r00 ?x1387 ?x1387 ?x1396 ?x1390 ?x1390)) (* 18 (* ?x1387 ?x1387 ?x1387 ?x1396 ?x1396 ?x1390)) (* 108 (* r r r r s x00)) ?x4334 (* 60 (* r r s s00 s00)) ?x4313 ?x4308 (* (- 270) (* r x x00)) (* 270 (* r r s r00 x00)) (* (- 4) (* r r s x s00 s00)) (* 54 (* s r00 x00)) (* 216 (* r s r00 x00)) (* 4 (* r r s s s00 s00)) (* (- 486) (* r r x x00)) (* 2 (* ?x1387 ?x1387 ?x1396 ?x1390 ?x1390 ?x1390)) (* 21 (* r s x s00)) (* 24 (* r r s x s00)) (* (- 9) (* r00 ?x1387 ?x1387 ?x1396 ?x1390 ?x1390)) (* 171 (* r r r x s00)) (* 6 (* r00 ?x1387 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390)) (* 6 (* s x s00)) (* (- 6) (* r00 s00 ?x1387 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) ?x4280 (* 18 (* ?x1387 ?x1387 ?x1396 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* (- 18) (* r00 x00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* 198 (* r r x s00)) (* 99 (* r x s00)) (* (- 3) (* s00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* 6 (* r00 ?x1387 ?x1387 ?x1387 ?x1396 ?x1390 ?x1390)) (* (- 24) (* r r s s s00)) (* 270 (* r s x00)) ?x4279 (* 9 (* r00 s00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* (- 21) (* r s s s00)) (* 486 (* r r s x00)) (* 3 (* ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390)) (* (- 9) (* ?x1387 ?x1387 ?x1387 ?x1396 ?x1390 ?x1390)) ?x4274 (* (- 171) (* r r r s s00)) (* (- 198) (* r r s s00)) (* 378 (* r r r s x00)) ?x4275 (* (- 18) (* r r s x r00 x00)) (* (- 378) (* r r r x x00)) (* (- 9) (* ?x1387 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390)) (* (- 60) (* r r x s00 s00)) (* 9 (* s00 ?x1387 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* (- 54) (* r r s x x00)) ?x4142 (* 36 (* r s s r00 x00)) ?x4363 (* (- 54) (* r s x x00)) (* 18 (* s s r00 x00)) (* (- 18) (* x00 ?x1387 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* (- 108) (* r r r r x x00)) (* 18 (* s s x00)) (* 54 (* r s s x00)) (* 54 (* r r s s x00)) (* 18 (* r r r s s x00)) (* (- 18) (* r s s00 r00)) (* 27 (* r r s s00 r00)) (* (- 270) (* r r x r00 x00)) (* 72 (* r r r s s00 r00)) (* (- 3) (* s s s00 r00)) (* 9 (* r r s s s00 r00)) (* 18 (* r x s00 r00)) (* (- 27) (* r r x s00 r00)) (* 3 (* ?x1387 ?x1387 ?x1396 ?x1390 ?x1390)) (* (- 48) (* r x s00 s00)) (* (- 72) (* r r r x s00 r00)) (* 3 (* s x s00 r00)) (* (- 9) (* r r s x s00 r00)) (* (- 24) (* r r r x s00 s00)) (* 24 (* r r r s s00 s00)) (* 4 (* s s s00 s00)) ?x4478 ?x4480 (* (- 8) (* r s x s00 s00)) ?x4481 (* 48 (* r s s00 s00)) ?x4482 ?x4483 ?x4484 ?x4485 ?x4486 (* 2 (* s00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390)) (* (- 6) (* r00 r00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390)) ?x4488 ?x4489 ?x4490 ?x4491 ?x4492 ?x4493 ?x4494 ?x4495 ?x4496 ?x4497 ?x4498 (* 6 (* r00 r00 s00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) ?x4499 (* 36 (* r r r r s s00 r00)) ?x4500 ?x4501 ?x4502 ?x4503 ?x4504 ?x4505 ?x4506 ?x4507 ?x4508 ?x4509 (* (- 54) (* x r00 x00)) ?x4510 ?x4511 ?x4512 (* 108 (* r r r s r00 x00)) ?x4513 (* 18 (* r00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* (- 108) (* r r r x r00 x00)) (* 2 (* ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390 ?x1390)) (* 2 (* s00 ?x1387 ?x1387 ?x1396 ?x1390 ?x1390)))))
 (let ((?x1348 (* x00 x00)))
 (let ((?x1378 (* (- 108) ?x1348)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x1377 (* (- 16) ?x1186)))
 (let ((?x1058 (* s00 r00 r00 r00)))
 (let ((?x1373 (* (- 216) ?x1058)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x885 (* 432 ?x884)))
 (let ((?x807 (* s00 x00)))
 (let ((?x1131 (* 108 ?x807)))
 (let ((?x733 (* s00 s00 r00 r00)))
 (let ((?x734 (* 36 ?x733)))
 (let ((?x670 (* s00 s00 r00)))
 (let ((?x1014 (* 108 ?x670)))
 (let ((?x649 (* s00 r00 r00)))
 (let ((?x1002 (* 36 ?x649)))
 (let ((?x593 (* s00 s00)))
 (let ((?x1367 (* (- 51) ?x593)))
 (let ((?x567 (* s r00 r00)))
 (let ((?x866 (* (- 36) ?x567)))
 (let ((?x524 (* r00 x00)))
 (let ((?x1364 (* (- 108) ?x524)))
 (let ((?x515 (* s00 r00 x00)))
 (let ((?x1363 (* (- 216) ?x515)))
 (let ((?x428 (* s00 r00)))
 (let ((?x522 (* 54 ?x428)))
 (let ((?x989 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1379 (+ ?x143 ?x989 ?x522 ?x1363 ?x1364 (* (- 15) (* s s)) ?x866 ?x1367 (* (- 108) ?x602) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1002 ?x1014 (* 66 ?x690) (* (- 54) (* s r00)) (* (- 108) ?x726) ?x734 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1131 (* 108 (* s x)) (* (- 108) (* x x)) ?x885 (* 12 (* s s s00)) ?x1373 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1377 (* 216 ?x1322) ?x1378)))
 (let (($x1380 (= ?x1379 0)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x892 (* (- 36) ?x879)))
 (let ((?x808 (* 6 ?x807)))
 (let ((?x698 (* (- 2) ?x670)))
 (let ((?x918 (* (- 15) ?x593)))
 (let ((?x547 (* s s)))
 (let ((?x571 (* 3 ?x547)))
 (let ((?x553 (* (- 54) ?x524)))
 (let ((?x566 (* 24 ?x428)))
 (let ((?x1081 (+ ?x143 ?x989 (* (- 24) (* r s)) (* 24 (* r s00)) ?x566 ?x553 ?x571 (* 54 (* r x)) (* 36 (* r x r00)) ?x866 ?x918 (* (- 6) ?x602) (* 54 (* x r00)) ?x1002 (* 4 ?x653) (* (- 54) (* r x00)) ?x698 (* 12 ?x690) (* (- 24) (* s r00)) (* (- 6) ?x726) (* (- 2) (* s s00 r00)) ?x808 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x892 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1086 (= ?x1081 0)))
 (let ((?x650 (* 6 ?x649)))
 (let ((?x606 (* (- 4) ?x593)))
 (let ((?x548 (* 2 ?x547)))
 (let ((?x538 (* (- 18) ?x524)))
 (let ((?x543 (* 9 ?x428)))
 (let ((?x380 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x747 (+ ?x47 ?x380 (* (- 9) (* r s)) (* 9 (* r s00)) ?x543 ?x538 ?x548 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x567) ?x606 (* 18 (* x r00)) ?x650 (* (- 18) (* r x00)) (* 2 ?x690) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x754 (= ?x747 0)))
 (let ((?x471 (* r00 r00 r00)))
 (let ((?x472 (* 12 ?x471)))
 (let ((?x506 (* (- 6) ?x428)))
 (let ((?x503 (* (- 6) x00)))
 (let ((?x502 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x501 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x507 (+ ?x43 ?x501 ?x56 ?x44 ?x502 ?x503 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x506 ?x472)))
 (let (($x508 (= ?x507 0)))
 (let ((?x303 (* r00 r00)))
 (let ((?x304 (* 3 ?x303)))
 (let ((?x333 (* (- 1) s00)))
 (let (($x336 (= (+ s ?x333 (* (- 3) (* r r)) ?x304) 0)))
 (and $x336 $x508 $x754 $x1086 $x1380 (not (= ?x4744 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x479 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1870 (+ 3 s ?x214)))
 (let ((?x282 (* (- 1) s)))
 (let ((?x644 (+ x ?x282)))
 (let ((?x1387 (+ 1 r)))
 (let ((?x708 (* s00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)))
 (let ((?x671 (+ (* 6 (* r00 r00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 9) (* ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 4) (* s00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* 9 (* s00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 4) (* s00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 6) (* r00 r00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 18) (* x00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 2 (* s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 9 (* s00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* 2 (* ?x1387 ?x1387 ?x644 ?x1870 ?x1870 ?x1870)) (* 18 (* r00 ?x1387 ?x644 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 18) (* r00 x00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 6) (* r00 s00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 9 (* r00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 6 (* r00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 3 (* ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 18) (* r00 x00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 9) (* r00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 6 (* r00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 3) (* s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 9) (* ?x1387 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 18 (* ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 18) (* x00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 9) (* r00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 18 (* ?x1387 ?x1387 ?x1387 ?x644 ?x644 ?x1870)) (* 3 (* ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 6) (* r00 r00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 3) (* s00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 6) (* r00 s00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* 9 (* r00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* 18 (* r00 ?x1387 ?x1387 ?x644 ?x644 ?x1870)) (* 6 (* r00 r00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* 2 (* ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870 ?x1870)) (* 2 ?x708))))
 (let ((?x1348 (* x00 x00)))
 (let ((?x2423 (* 108 ?x1348)))
 (let ((?x1468 (* (- 9) s)))
 (let ((?x3499 (* r00 r00 s00)))
 (let ((?x492 (* (- 36) ?x3499)))
 (let ((?x137 (* 9 s00)))
 (let ((?x593 (* s00 s00)))
 (let ((?x3955 (* 51 ?x593)))
 (let ((?x3413 (* r00 r00 s)))
 (let ((?x3290 (* 36 ?x3413)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x3099 (* 16 ?x1186)))
 (let ((?x807 (* s00 x00)))
 (let ((?x982 (* (- 108) ?x807)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x3685 (* (- 432) ?x884)))
 (let ((?x524 (* r00 x00)))
 (let ((?x1903 (* 108 ?x524)))
 (let ((?x2755 (+ (* 216 (* r00 s00 x00)) ?x1903 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3685 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x982 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3099 (* (- 108) (* x s)) ?x3290 ?x3955 (* (- 108) (* r00 x)) ?x137 ?x492 ?x1468 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2423)))
 (let (($x2770 (= ?x2755 0)))
 (let ((?x1602 (* 15 ?x593)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x1600 (* 36 ?x879)))
 (let ((?x1568 (* (- 6) ?x807)))
 (let ((?x3774 (* 54 ?x524)))
 (let ((?x2359 (+ (* 24 (* s r)) ?x3774 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1568 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3290 ?x1600 ?x1602 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x492 (* 54 (* x00 r)) ?x1468 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x501 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2382 (* 4 ?x593)))
 (let ((?x3575 (* 18 ?x524)))
 (let ((?x2532 (+ (* 9 (* s r)) ?x3575 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3413) ?x2382 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3499) (* 18 (* x00 r)) ?x501 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x471 (* r00 r00 r00)))
 (let ((?x472 (* 12 ?x471)))
 (let ((?x503 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x502 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2736 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x501 ?x502 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x503 ?x472)))
 (let (($x2310 (= (+ s00 ?x282 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2310 (= ?x2736 0) (= ?x2532 0) (= ?x2359 0) $x2770 (not (= ?x671 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2893 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1390 (+ 3 ?x214 s)))
 (let ((?x282 (* (- 1) s)))
 (let ((?x1396 (+ ?x282 x)))
 (let ((?x1387 (+ 1 r)))
 (let ((?x4513 (* 6 (* r r s x s00 r00 r00))))
 (let ((?x4512 (* 12 (* r s x s00 r00 r00))))
 (let ((?x4511 (* 6 (* s x s00 r00 r00))))
 (let ((?x4510 (* 36 (* r r r x s00 r00 r00))))
 (let ((?x4509 (* 90 (* r r x s00 r00 r00))))
 (let ((?x4508 (* 72 (* r x s00 r00 r00))))
 (let ((?x4507 (* 18 (* x s00 r00 r00))))
 (let ((?x4506 (* (- 6) (* r r s s s00 r00 r00))))
 (let ((?x4505 (* (- 12) (* r s s s00 r00 r00))))
 (let ((?x4504 (* (- 6) (* s s s00 r00 r00))))
 (let ((?x4503 (* (- 36) (* r r r s s00 r00 r00))))
 (let ((?x4502 (* (- 90) (* r r s s00 r00 r00))))
 (let ((?x4501 (* (- 72) (* r s s00 r00 r00))))
 (let ((?x4500 (* (- 18) (* s s00 r00 r00))))
 (let ((?x4499 (* 18 (* r r s x x r00))))
 (let ((?x4498 (* 36 (* r s x x r00))))
 (let ((?x4497 (* 18 (* s x x r00))))
 (let ((?x4496 (* 108 (* r r r x x r00))))
 (let ((?x4495 (* 270 (* r r x x r00))))
 (let ((?x4494 (* 216 (* r x x r00))))
 (let ((?x4493 (* 54 (* x x r00))))
 (let ((?x4492 (* (- 36) (* r r s s x r00))))
 (let ((?x4491 (* (- 72) (* r s s x r00))))
 (let ((?x4490 (* (- 36) (* s s x r00))))
 (let ((?x4489 (* (- 216) (* r r r s x r00))))
 (let ((?x4488 (* (- 540) (* r r s x r00))))
 (let ((?x4486 (* (- 432) (* r s x r00))))
 (let ((?x4485 (* (- 108) (* s x r00))))
 (let ((?x4484 (* 18 (* r r s s s r00))))
 (let ((?x4483 (* 36 (* r s s s r00))))
 (let ((?x4482 (* 18 (* s s s r00))))
 (let ((?x4481 (* 108 (* r r r s s r00))))
 (let ((?x4480 (* 270 (* r r s s r00))))
 (let ((?x4478 (* 216 (* r s s r00))))
 (let ((?x4363 (* (- 18) (* s x x00))))
 (let ((?x4142 (* (- 18) (* r r r s x x00))))
 (let ((?x4275 (* 9 (* r r r s x s00))))
 (let ((?x4274 (* (- 54) (* r r r r s s00))))
 (let ((?x4279 (* (- 9) (* r r r s s s00))))
 (let ((?x4280 (* 54 (* r r r r x s00))))
 (let ((?x4308 (* (- 12) (* x s00 s00))))
 (let ((?x4313 (* 12 (* s s00 s00))))
 (let ((?x1322 (* x x00)))
 (let ((?x4334 (* (- 54) ?x1322)))
 (let ((?x726 (* s x00)))
 (let ((?x4330 (* 54 ?x726)))
 (let ((?x690 (* s s00)))
 (let ((?x4328 (* (- 18) ?x690)))
 (let ((?x653 (* s s r00)))
 (let ((?x4327 (* 54 ?x653)))
 (let ((?x602 (* x s00)))
 (let ((?x4325 (* 18 ?x602)))
 (let ((?x4744 (+ (* 18 (* r r s s r00 x00)) ?x4325 (* 6 (* r r r s s s00 r00)) (* (- 4) (* s x s00 s00)) ?x4327 (* (- 18) (* s x r00 x00)) ?x4328 (* (- 36) (* r s x r00 x00)) ?x4330 (* (- 9) (* s s00 r00)) (* (- 216) (* r x r00 x00)) (* (- 6) (* r r r s x s00 r00)) (* (- 99) (* r s s00)) (* (- 6) (* s s s00)) (* (- 4) (* s00 s00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* (- 9) (* r00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390)) (* 8 (* r s s s00 s00)) (* (- 36) (* r r r r x s00 r00)) (* 9 (* x s00 r00)) (* (- 6) (* r00 r00 ?x1387 ?x1387 ?x1396 ?x1390 ?x1390)) (* 18 (* ?x1387 ?x1387 ?x1387 ?x1396 ?x1396 ?x1390)) (* 108 (* r r r r s x00)) ?x4334 (* 60 (* r r s s00 s00)) ?x4313 ?x4308 (* (- 270) (* r x x00)) (* 270 (* r r s r00 x00)) (* (- 4) (* r r s x s00 s00)) (* 54 (* s r00 x00)) (* 216 (* r s r00 x00)) (* 4 (* r r s s s00 s00)) (* (- 486) (* r r x x00)) (* 2 (* ?x1387 ?x1387 ?x1396 ?x1390 ?x1390 ?x1390)) (* 21 (* r s x s00)) (* 24 (* r r s x s00)) (* (- 9) (* r00 ?x1387 ?x1387 ?x1396 ?x1390 ?x1390)) (* 171 (* r r r x s00)) (* 6 (* r00 ?x1387 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390)) (* 6 (* s x s00)) (* (- 6) (* r00 s00 ?x1387 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) ?x4280 (* 18 (* ?x1387 ?x1387 ?x1396 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* (- 18) (* r00 x00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* 198 (* r r x s00)) (* 99 (* r x s00)) (* (- 3) (* s00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* 6 (* r00 ?x1387 ?x1387 ?x1387 ?x1396 ?x1390 ?x1390)) (* (- 24) (* r r s s s00)) (* 270 (* r s x00)) ?x4279 (* 9 (* r00 s00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* (- 21) (* r s s s00)) (* 486 (* r r s x00)) (* 3 (* ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390)) (* (- 9) (* ?x1387 ?x1387 ?x1387 ?x1396 ?x1390 ?x1390)) ?x4274 (* (- 171) (* r r r s s00)) (* (- 198) (* r r s s00)) (* 378 (* r r r s x00)) ?x4275 (* (- 18) (* r r s x r00 x00)) (* (- 378) (* r r r x x00)) (* (- 9) (* ?x1387 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390)) (* (- 60) (* r r x s00 s00)) (* 9 (* s00 ?x1387 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* (- 54) (* r r s x x00)) ?x4142 (* 36 (* r s s r00 x00)) ?x4363 (* (- 54) (* r s x x00)) (* 18 (* s s r00 x00)) (* (- 18) (* x00 ?x1387 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* (- 108) (* r r r r x x00)) (* 18 (* s s x00)) (* 54 (* r s s x00)) (* 54 (* r r s s x00)) (* 18 (* r r r s s x00)) (* (- 18) (* r s s00 r00)) (* 27 (* r r s s00 r00)) (* (- 270) (* r r x r00 x00)) (* 72 (* r r r s s00 r00)) (* (- 3) (* s s s00 r00)) (* 9 (* r r s s s00 r00)) (* 18 (* r x s00 r00)) (* (- 27) (* r r x s00 r00)) (* 3 (* ?x1387 ?x1387 ?x1396 ?x1390 ?x1390)) (* (- 48) (* r x s00 s00)) (* (- 72) (* r r r x s00 r00)) (* 3 (* s x s00 r00)) (* (- 9) (* r r s x s00 r00)) (* (- 24) (* r r r x s00 s00)) (* 24 (* r r r s s00 s00)) (* 4 (* s s s00 s00)) ?x4478 ?x4480 (* (- 8) (* r s x s00 s00)) ?x4481 (* 48 (* r s s00 s00)) ?x4482 ?x4483 ?x4484 ?x4485 ?x4486 (* 2 (* s00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390)) (* (- 6) (* r00 r00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390)) ?x4488 ?x4489 ?x4490 ?x4491 ?x4492 ?x4493 ?x4494 ?x4495 ?x4496 ?x4497 ?x4498 (* 6 (* r00 r00 s00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) ?x4499 (* 36 (* r r r r s s00 r00)) ?x4500 ?x4501 ?x4502 ?x4503 ?x4504 ?x4505 ?x4506 ?x4507 ?x4508 ?x4509 (* (- 54) (* x r00 x00)) ?x4510 ?x4511 ?x4512 (* 108 (* r r r s r00 x00)) ?x4513 (* 18 (* r00 ?x1387 ?x1396 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390)) (* (- 108) (* r r r x r00 x00)) (* 2 (* ?x1387 ?x1396 ?x1396 ?x1396 ?x1390 ?x1390 ?x1390 ?x1390 ?x1390)) (* 2 (* s00 ?x1387 ?x1387 ?x1396 ?x1390 ?x1390)))))
 (let ((?x1348 (* x00 x00)))
 (let ((?x1378 (* (- 108) ?x1348)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x1377 (* (- 16) ?x1186)))
 (let ((?x1058 (* s00 r00 r00 r00)))
 (let ((?x1373 (* (- 216) ?x1058)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x885 (* 432 ?x884)))
 (let ((?x807 (* s00 x00)))
 (let ((?x1131 (* 108 ?x807)))
 (let ((?x733 (* s00 s00 r00 r00)))
 (let ((?x734 (* 36 ?x733)))
 (let ((?x670 (* s00 s00 r00)))
 (let ((?x1014 (* 108 ?x670)))
 (let ((?x649 (* s00 r00 r00)))
 (let ((?x1002 (* 36 ?x649)))
 (let ((?x593 (* s00 s00)))
 (let ((?x1367 (* (- 51) ?x593)))
 (let ((?x567 (* s r00 r00)))
 (let ((?x866 (* (- 36) ?x567)))
 (let ((?x524 (* r00 x00)))
 (let ((?x1364 (* (- 108) ?x524)))
 (let ((?x515 (* s00 r00 x00)))
 (let ((?x1363 (* (- 216) ?x515)))
 (let ((?x428 (* s00 r00)))
 (let ((?x522 (* 54 ?x428)))
 (let ((?x989 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1379 (+ ?x143 ?x989 ?x522 ?x1363 ?x1364 (* (- 15) (* s s)) ?x866 ?x1367 (* (- 108) ?x602) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1002 ?x1014 (* 66 ?x690) (* (- 54) (* s r00)) (* (- 108) ?x726) ?x734 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1131 (* 108 (* s x)) (* (- 108) (* x x)) ?x885 (* 12 (* s s s00)) ?x1373 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1377 (* 216 ?x1322) ?x1378)))
 (let (($x1380 (= ?x1379 0)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x892 (* (- 36) ?x879)))
 (let ((?x808 (* 6 ?x807)))
 (let ((?x698 (* (- 2) ?x670)))
 (let ((?x918 (* (- 15) ?x593)))
 (let ((?x547 (* s s)))
 (let ((?x571 (* 3 ?x547)))
 (let ((?x553 (* (- 54) ?x524)))
 (let ((?x566 (* 24 ?x428)))
 (let ((?x1081 (+ ?x143 ?x989 (* (- 24) (* r s)) (* 24 (* r s00)) ?x566 ?x553 ?x571 (* 54 (* r x)) (* 36 (* r x r00)) ?x866 ?x918 (* (- 6) ?x602) (* 54 (* x r00)) ?x1002 (* 4 ?x653) (* (- 54) (* r x00)) ?x698 (* 12 ?x690) (* (- 24) (* s r00)) (* (- 6) ?x726) (* (- 2) (* s s00 r00)) ?x808 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x892 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1086 (= ?x1081 0)))
 (let ((?x650 (* 6 ?x649)))
 (let ((?x606 (* (- 4) ?x593)))
 (let ((?x548 (* 2 ?x547)))
 (let ((?x538 (* (- 18) ?x524)))
 (let ((?x543 (* 9 ?x428)))
 (let ((?x380 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x747 (+ ?x47 ?x380 (* (- 9) (* r s)) (* 9 (* r s00)) ?x543 ?x538 ?x548 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x567) ?x606 (* 18 (* x r00)) ?x650 (* (- 18) (* r x00)) (* 2 ?x690) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x754 (= ?x747 0)))
 (let ((?x471 (* r00 r00 r00)))
 (let ((?x472 (* 12 ?x471)))
 (let ((?x506 (* (- 6) ?x428)))
 (let ((?x503 (* (- 6) x00)))
 (let ((?x502 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x501 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x507 (+ ?x43 ?x501 ?x56 ?x44 ?x502 ?x503 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x506 ?x472)))
 (let (($x508 (= ?x507 0)))
 (let ((?x303 (* r00 r00)))
 (let ((?x304 (* 3 ?x303)))
 (let ((?x333 (* (- 1) s00)))
 (let (($x336 (= (+ s ?x333 (* (- 3) (* r r)) ?x304) 0)))
 (let (($x4750 (and $x336 $x508 $x754 $x1086 $x1380 (not (= ?x4744 0)))))
 (let ((?x1870 (+ 3 s ?x214)))
 (let ((?x644 (+ x ?x282)))
 (let ((?x708 (* s00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)))
 (let ((?x671 (+ (* 6 (* r00 r00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 9) (* ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 4) (* s00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* 9 (* s00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 4) (* s00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 6) (* r00 r00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 18) (* x00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 2 (* s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 9 (* s00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* 2 (* ?x1387 ?x1387 ?x644 ?x1870 ?x1870 ?x1870)) (* 18 (* r00 ?x1387 ?x644 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 18) (* r00 x00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 6) (* r00 s00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 9 (* r00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 6 (* r00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 3 (* ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 18) (* r00 x00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 9) (* r00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 6 (* r00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 3) (* s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 9) (* ?x1387 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 18 (* ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 18) (* x00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 9) (* r00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 18 (* ?x1387 ?x1387 ?x1387 ?x644 ?x644 ?x1870)) (* 3 (* ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 6) (* r00 r00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 3) (* s00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 6) (* r00 s00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* 9 (* r00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* 18 (* r00 ?x1387 ?x1387 ?x644 ?x644 ?x1870)) (* 6 (* r00 r00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* 2 (* ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870 ?x1870)) (* 2 ?x708))))
 (let ((?x2423 (* 108 ?x1348)))
 (let ((?x1468 (* (- 9) s)))
 (let ((?x3499 (* r00 r00 s00)))
 (let ((?x492 (* (- 36) ?x3499)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3955 (* 51 ?x593)))
 (let ((?x3413 (* r00 r00 s)))
 (let ((?x3290 (* 36 ?x3413)))
 (let ((?x3099 (* 16 ?x1186)))
 (let ((?x982 (* (- 108) ?x807)))
 (let ((?x3685 (* (- 432) ?x884)))
 (let ((?x1903 (* 108 ?x524)))
 (let ((?x2755 (+ (* 216 (* r00 s00 x00)) ?x1903 (* (- 54) (* r00 s00)) (* 15 ?x547) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3685 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x982 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3099 (* (- 108) (* x s)) ?x3290 ?x3955 (* (- 108) (* r00 x)) ?x137 ?x492 ?x1468 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2423)))
 (let (($x2770 (= ?x2755 0)))
 (let ((?x1602 (* 15 ?x593)))
 (let ((?x1600 (* 36 ?x879)))
 (let ((?x1568 (* (- 6) ?x807)))
 (let ((?x3774 (* 54 ?x524)))
 (let ((?x2359 (+ (* 24 (* s r)) ?x3774 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x547) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1568 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3290 ?x1600 ?x1602 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x492 (* 54 (* x00 r)) ?x1468 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x2382 (* 4 ?x593)))
 (let ((?x3575 (* 18 ?x524)))
 (let ((?x2532 (+ (* 9 (* s r)) ?x3575 (* (- 9) (* r00 s00)) (* (- 2) ?x547) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3413) ?x2382 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3499) (* 18 (* x00 r)) ?x501 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x2736 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x501 ?x502 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x503 ?x472)))
 (let (($x2310 (= (+ s00 ?x282 (* 3 (* r r)) (* (- 3) ?x303)) 0)))
 (let (($x493 (and $x2310 (= ?x2736 0) (= ?x2532 0) (= ?x2359 0) $x2770 (not (= ?x671 0)))))
 (rewrite (= $x493 $x4750))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x3590 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1870 (+ 3 s ?x214)))
 (let ((?x282 (* (- 1) s)))
 (let ((?x644 (+ x ?x282)))
 (let ((?x1387 (+ 1 r)))
 (let ((?x708 (* s00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)))
 (let ((?x1302 (+ (* (- 6) (* r00 r00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 9 (* ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 4 (* s00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 9) (* s00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 4 (* s00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 6 (* r00 r00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 18 (* x00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 2) (* s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 9) (* s00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 2) (* ?x1387 ?x1387 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 18) (* r00 ?x1387 ?x644 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 18 (* r00 x00 ?x1387 ?x1387 ?x644 ?x1870)) (* 6 (* r00 s00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 9) (* r00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 6) (* r00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 3) (* ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 18 (* r00 x00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 9 (* r00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 6) (* r00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 3 (* s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 9 (* ?x1387 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 18) (* ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 18 (* x00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* 9 (* r00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 18) (* ?x1387 ?x1387 ?x1387 ?x644 ?x644 ?x1870)) (* (- 3) (* ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 6 (* r00 r00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 3 (* s00 ?x1387 ?x1387 ?x644 ?x1870)) (* 6 (* r00 s00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 9) (* r00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 18) (* r00 ?x1387 ?x1387 ?x644 ?x644 ?x1870)) (* (- 6) (* r00 r00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 2) (* ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 2) ?x708))))
 (let ((?x1348 (* x00 x00)))
 (let ((?x2423 (* 108 ?x1348)))
 (let ((?x1468 (* (- 9) s)))
 (let ((?x3499 (* r00 r00 s00)))
 (let ((?x492 (* (- 36) ?x3499)))
 (let ((?x137 (* 9 s00)))
 (let ((?x593 (* s00 s00)))
 (let ((?x3955 (* 51 ?x593)))
 (let ((?x3413 (* r00 r00 s)))
 (let ((?x3290 (* 36 ?x3413)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x3099 (* 16 ?x1186)))
 (let ((?x807 (* s00 x00)))
 (let ((?x982 (* (- 108) ?x807)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x3685 (* (- 432) ?x884)))
 (let ((?x524 (* r00 x00)))
 (let ((?x1903 (* 108 ?x524)))
 (let ((?x2755 (+ (* 216 (* r00 s00 x00)) ?x1903 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3685 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x982 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3099 (* (- 108) (* x s)) ?x3290 ?x3955 (* (- 108) (* r00 x)) ?x137 ?x492 ?x1468 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2423)))
 (let (($x2770 (= ?x2755 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x989 (* (- 9) s00)))
 (let ((?x918 (* (- 15) ?x593)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x892 (* (- 36) ?x879)))
 (let ((?x808 (* 6 ?x807)))
 (let ((?x547 (* s s)))
 (let ((?x571 (* 3 ?x547)))
 (let ((?x553 (* (- 54) ?x524)))
 (let ((?x2104 (+ (* (- 24) (* s r)) ?x553 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x571 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x808 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3413) ?x892 ?x918 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x989 (* 36 ?x3499) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x380 (* (- 3) s00)))
 (let ((?x606 (* (- 4) ?x593)))
 (let ((?x548 (* 2 ?x547)))
 (let ((?x538 (* (- 18) ?x524)))
 (let ((?x3574 (+ (* (- 9) (* s r)) ?x538 (* 9 (* r00 s00)) ?x548 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3413) ?x606 (* 18 (* r00 x)) ?x380 (* 6 ?x3499) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x3341 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x380 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2310 (= (+ s00 ?x282 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2310 (= ?x3341 0) (= ?x3574 0) (= ?x2104 0) $x2770 (not (= ?x1302 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x525 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1870 (+ 3 s ?x214)))
 (let ((?x282 (* (- 1) s)))
 (let ((?x644 (+ x ?x282)))
 (let ((?x1387 (+ 1 r)))
 (let ((?x708 (* s00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)))
 (let ((?x671 (+ (* 6 (* r00 r00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 9) (* ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 4) (* s00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* 9 (* s00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 4) (* s00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 6) (* r00 r00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 18) (* x00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 2 (* s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 9 (* s00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* 2 (* ?x1387 ?x1387 ?x644 ?x1870 ?x1870 ?x1870)) (* 18 (* r00 ?x1387 ?x644 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 18) (* r00 x00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 6) (* r00 s00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 9 (* r00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 6 (* r00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 3 (* ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 18) (* r00 x00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 9) (* r00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 6 (* r00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 3) (* s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 9) (* ?x1387 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 18 (* ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 18) (* x00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 9) (* r00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 18 (* ?x1387 ?x1387 ?x1387 ?x644 ?x644 ?x1870)) (* 3 (* ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 6) (* r00 r00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 3) (* s00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 6) (* r00 s00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* 9 (* r00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* 18 (* r00 ?x1387 ?x1387 ?x644 ?x644 ?x1870)) (* 6 (* r00 r00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* 2 (* ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870 ?x1870)) (* 2 ?x708))))
 (let ((?x1348 (* x00 x00)))
 (let ((?x2423 (* 108 ?x1348)))
 (let ((?x1468 (* (- 9) s)))
 (let ((?x3499 (* r00 r00 s00)))
 (let ((?x492 (* (- 36) ?x3499)))
 (let ((?x137 (* 9 s00)))
 (let ((?x593 (* s00 s00)))
 (let ((?x3955 (* 51 ?x593)))
 (let ((?x3413 (* r00 r00 s)))
 (let ((?x3290 (* 36 ?x3413)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x3099 (* 16 ?x1186)))
 (let ((?x807 (* s00 x00)))
 (let ((?x982 (* (- 108) ?x807)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x3685 (* (- 432) ?x884)))
 (let ((?x524 (* r00 x00)))
 (let ((?x1903 (* 108 ?x524)))
 (let ((?x2755 (+ (* 216 (* r00 s00 x00)) ?x1903 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3685 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x982 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3099 (* (- 108) (* x s)) ?x3290 ?x3955 (* (- 108) (* r00 x)) ?x137 ?x492 ?x1468 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2423)))
 (let (($x2770 (= ?x2755 0)))
 (let ((?x1602 (* 15 ?x593)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x1600 (* 36 ?x879)))
 (let ((?x1568 (* (- 6) ?x807)))
 (let ((?x3774 (* 54 ?x524)))
 (let ((?x2359 (+ (* 24 (* s r)) ?x3774 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1568 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3290 ?x1600 ?x1602 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x492 (* 54 (* x00 r)) ?x1468 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x501 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2382 (* 4 ?x593)))
 (let ((?x3575 (* 18 ?x524)))
 (let ((?x2532 (+ (* 9 (* s r)) ?x3575 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3413) ?x2382 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3499) (* 18 (* x00 r)) ?x501 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x471 (* r00 r00 r00)))
 (let ((?x472 (* 12 ?x471)))
 (let ((?x503 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x502 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2736 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x501 ?x502 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x503 ?x472)))
 (let (($x2310 (= (+ s00 ?x282 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x493 (and $x2310 (= ?x2736 0) (= ?x2532 0) (= ?x2359 0) $x2770 (not (= ?x671 0)))))
 (let ((?x1302 (+ (* (- 6) (* r00 r00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 9 (* ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 4 (* s00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 9) (* s00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 4 (* s00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 6 (* r00 r00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 18 (* x00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 2) (* s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 9) (* s00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 2) (* ?x1387 ?x1387 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 18) (* r00 ?x1387 ?x644 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 18 (* r00 x00 ?x1387 ?x1387 ?x644 ?x1870)) (* 6 (* r00 s00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 9) (* r00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 6) (* r00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 3) (* ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 18 (* r00 x00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 9 (* r00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 6) (* r00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 3 (* s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 9 (* ?x1387 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 18) (* ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 18 (* x00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* 9 (* r00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 18) (* ?x1387 ?x1387 ?x1387 ?x644 ?x644 ?x1870)) (* (- 3) (* ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 6 (* r00 r00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 3 (* s00 ?x1387 ?x1387 ?x644 ?x1870)) (* 6 (* r00 s00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 9) (* r00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 18) (* r00 ?x1387 ?x1387 ?x644 ?x644 ?x1870)) (* (- 6) (* r00 r00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 2) (* ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 2) ?x708))))
 (let ((?x143 (* 9 s)))
 (let ((?x989 (* (- 9) s00)))
 (let ((?x918 (* (- 15) ?x593)))
 (let ((?x892 (* (- 36) ?x879)))
 (let ((?x808 (* 6 ?x807)))
 (let ((?x547 (* s s)))
 (let ((?x571 (* 3 ?x547)))
 (let ((?x553 (* (- 54) ?x524)))
 (let ((?x2104 (+ (* (- 24) (* s r)) ?x553 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x571 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x808 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3413) ?x892 ?x918 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x989 (* 36 ?x3499) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x380 (* (- 3) s00)))
 (let ((?x606 (* (- 4) ?x593)))
 (let ((?x548 (* 2 ?x547)))
 (let ((?x538 (* (- 18) ?x524)))
 (let ((?x3574 (+ (* (- 9) (* s r)) ?x538 (* 9 (* r00 s00)) ?x548 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3413) ?x606 (* 18 (* r00 x)) ?x380 (* 6 ?x3499) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x3341 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x380 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x471))))
 (let (($x3474 (and $x2310 (= ?x3341 0) (= ?x3574 0) (= ?x2104 0) $x2770 (not (= ?x1302 0)))))
 (rewrite (= $x3474 $x493))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x279 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (- x s)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x220 (+ (* (- 6) ?x213 r00 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 9 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 4 ?x213 ?x213 ?x215 s00 s00 ?x216))))
 (let ((?x226 (+ (- ?x220 (* 9 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 4 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216 ?x216) (* 6 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 18 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x232 (- (- ?x226 (* 2 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 9 ?x213 ?x213 ?x213 ?x215 s00 ?x216))))
 (let ((?x234 (- (- ?x232 (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216)) (* 18 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x237 (+ ?x234 (* 18 ?x213 ?x213 r00 ?x215 ?x216 x00) (* 6 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x242 (- (- ?x237 (* 9 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 6 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x246 (+ (- ?x242 (* 3 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 18 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00) (* 9 ?x213 ?x213 r00 ?x215 ?x215 ?x216))))
 (let ((?x251 (+ (- ?x246 (* 6 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216)) (* 3 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216))))
 (let ((?x256 (+ (- ?x251 (* 18 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216)) (* 18 ?x213 ?x213 ?x213 ?x215 ?x216 x00) (* 9 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x260 (- (- ?x256 (* 18 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216)) (* 3 ?x213 ?x213 ?x215 ?x215 ?x216))))
 (let ((?x264 (+ ?x260 (* 6 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216) (* 3 ?x213 ?x213 ?x215 s00 ?x216) (* 6 ?x213 ?x213 ?x213 r00 ?x215 s00 ?x216))))
 (let ((?x271 (- (- ?x264 (* 9 ?x213 ?x213 r00 ?x215 s00 ?x216)) (* 18 ?x213 ?x213 r00 ?x215 ?x216 ?x216))))
 (let ((?x273 (- (- ?x271 (* 6 ?x213 ?x213 r00 r00 ?x215 s00 ?x216)) (* 2 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let (($x277 (or (not (= (- ?x273 (* 2 ?x213 ?x213 ?x215 ?x215 s00 ?x216)) 0)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) $x277))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3507 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1870 (+ 3 s ?x214)))
 (let ((?x282 (* (- 1) s)))
 (let ((?x644 (+ x ?x282)))
 (let ((?x1387 (+ 1 r)))
 (let ((?x708 (* s00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)))
 (let ((?x1302 (+ (* (- 6) (* r00 r00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 9 (* ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 4 (* s00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 9) (* s00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 4 (* s00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 6 (* r00 r00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 18 (* x00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 2) (* s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 9) (* s00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 2) (* ?x1387 ?x1387 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 18) (* r00 ?x1387 ?x644 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 18 (* r00 x00 ?x1387 ?x1387 ?x644 ?x1870)) (* 6 (* r00 s00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 9) (* r00 s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* (- 6) (* r00 ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 3) (* ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* 18 (* r00 x00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 9 (* r00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 6) (* r00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 3 (* s00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 9 (* ?x1387 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* (- 18) (* ?x1387 ?x1387 ?x644 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870)) (* 18 (* x00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* 9 (* r00 ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 18) (* ?x1387 ?x1387 ?x1387 ?x644 ?x644 ?x1870)) (* (- 3) (* ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 6 (* r00 r00 ?x1387 ?x1387 ?x644 ?x1870 ?x1870)) (* 3 (* s00 ?x1387 ?x1387 ?x644 ?x1870)) (* 6 (* r00 s00 ?x1387 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 9) (* r00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 18) (* r00 ?x1387 ?x1387 ?x644 ?x644 ?x1870)) (* (- 6) (* r00 r00 s00 ?x1387 ?x1387 ?x644 ?x1870)) (* (- 2) (* ?x1387 ?x644 ?x644 ?x644 ?x1870 ?x1870 ?x1870 ?x1870 ?x1870)) (* (- 2) ?x708))))
 (let ((?x1348 (* x00 x00)))
 (let ((?x2423 (* 108 ?x1348)))
 (let ((?x1468 (* (- 9) s)))
 (let ((?x3499 (* r00 r00 s00)))
 (let ((?x492 (* (- 36) ?x3499)))
 (let ((?x137 (* 9 s00)))
 (let ((?x593 (* s00 s00)))
 (let ((?x3955 (* 51 ?x593)))
 (let ((?x3413 (* r00 r00 s)))
 (let ((?x3290 (* 36 ?x3413)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x3099 (* 16 ?x1186)))
 (let ((?x807 (* s00 x00)))
 (let ((?x982 (* (- 108) ?x807)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x3685 (* (- 432) ?x884)))
 (let ((?x524 (* r00 x00)))
 (let ((?x1903 (* 108 ?x524)))
 (let ((?x2755 (+ (* 216 (* r00 s00 x00)) ?x1903 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3685 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x982 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3099 (* (- 108) (* x s)) ?x3290 ?x3955 (* (- 108) (* r00 x)) ?x137 ?x492 ?x1468 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2423)))
 (let (($x2770 (= ?x2755 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x989 (* (- 9) s00)))
 (let ((?x918 (* (- 15) ?x593)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x892 (* (- 36) ?x879)))
 (let ((?x808 (* 6 ?x807)))
 (let ((?x547 (* s s)))
 (let ((?x571 (* 3 ?x547)))
 (let ((?x553 (* (- 54) ?x524)))
 (let ((?x2104 (+ (* (- 24) (* s r)) ?x553 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x571 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x808 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3413) ?x892 ?x918 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x989 (* 36 ?x3499) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x380 (* (- 3) s00)))
 (let ((?x606 (* (- 4) ?x593)))
 (let ((?x548 (* 2 ?x547)))
 (let ((?x538 (* (- 18) ?x524)))
 (let ((?x3574 (+ (* (- 9) (* s r)) ?x538 (* 9 (* r00 s00)) ?x548 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3413) ?x606 (* 18 (* r00 x)) ?x380 (* 6 ?x3499) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x3341 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x380 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2310 (= (+ s00 ?x282 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3474 (and $x2310 (= ?x3341 0) (= ?x3574 0) (= ?x2104 0) $x2770 (not (= ?x1302 0)))))
 (let ((?x216 (- x s)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x220 (+ (* (- 6) ?x213 r00 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 9 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 4 ?x213 ?x213 ?x215 s00 s00 ?x216))))
 (let ((?x226 (+ (- ?x220 (* 9 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 4 ?x213 ?x215 ?x215 ?x215 s00 s00 ?x216 ?x216 ?x216) (* 6 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 18 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x232 (- (- ?x226 (* 2 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 9 ?x213 ?x213 ?x213 ?x215 s00 ?x216))))
 (let ((?x234 (- (- ?x232 (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216)) (* 18 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x237 (+ ?x234 (* 18 ?x213 ?x213 r00 ?x215 ?x216 x00) (* 6 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x242 (- (- ?x237 (* 9 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)) (* 6 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x246 (+ (- ?x242 (* 3 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 18 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00) (* 9 ?x213 ?x213 r00 ?x215 ?x215 ?x216))))
 (let ((?x251 (+ (- ?x246 (* 6 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x216)) (* 3 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 9 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216))))
 (let ((?x256 (+ (- ?x251 (* 18 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216)) (* 18 ?x213 ?x213 ?x213 ?x215 ?x216 x00) (* 9 ?x213 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x260 (- (- ?x256 (* 18 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216)) (* 3 ?x213 ?x213 ?x215 ?x215 ?x216))))
 (let ((?x264 (+ ?x260 (* 6 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216) (* 3 ?x213 ?x213 ?x215 s00 ?x216) (* 6 ?x213 ?x213 ?x213 r00 ?x215 s00 ?x216))))
 (let ((?x271 (- (- ?x264 (* 9 ?x213 ?x213 r00 ?x215 s00 ?x216)) (* 18 ?x213 ?x213 r00 ?x215 ?x216 ?x216))))
 (let ((?x273 (- (- ?x271 (* 6 ?x213 ?x213 r00 r00 ?x215 s00 ?x216)) (* 2 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let (($x277 (or (not (= (- ?x273 (* 2 ?x213 ?x213 ?x215 ?x215 s00 ?x216)) 0)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x278 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) $x277)))
 (rewrite (= $x278 $x3474))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x280 (asserted $x279)))
 (let ((@x3572 (mp (mp @x280 (quant-intro (proof-bind ?x3507) (= $x279 $x3590)) $x3590) (rewrite (= $x3590 $x3590)) $x3590)))
 (let ((@x2176 (mp (mp @x3572 (quant-intro (proof-bind ?x525) (= $x3590 $x479)) $x479) (quant-intro (proof-bind ?x2893) (= $x479 $x2105)) $x2105)))
 (let ((@x2403 (mp (mp~ @x2176 (sk (~ $x2105 $x2039)) $x2039) (rewrite (= $x2039 $x3021)) $x3021)))
 (let ((@x2401 (and-elim @x2403 $x579)))
 (let ((@x2055 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x579) $x1489)) @x2401 $x1489)))
 (let (($x3349 (>= ?x578 0)))
 (let ((@x3898 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x579) $x3349)) @x2401 $x3349)))
 (let (($x1395 (<= ?x2387 0)))
 (let ((@x2503 (and-elim @x2403 $x2229)))
 (let ((@x1680 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2229) $x1395)) @x2503 $x1395)))
 (let (($x1915 (>= ?x2387 0)))
 (let ((@x1508 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2229) $x1915)) @x2503 $x1915)))
 (let (($x3415 (<= ?x1104 0)))
 (let ((@x1896 (and-elim @x2403 $x1142)))
 (let ((@x2623 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1142) $x3415)) @x1896 $x3415)))
 (let (($x3419 (>= ?x1104 0)))
 (let ((@x1893 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1142) $x3419)) @x1896 $x3419)))
 (let (($x1135 (<= ?x1033 0)))
 (let ((@x2232 (and-elim @x2403 $x1027)))
 (let ((@x2607 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1027) $x1135)) @x2232 $x1135)))
 (let (($x1105 (>= ?x1033 0)))
 (let ((@x3552 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1027) $x1105)) @x2232 $x1105)))
 (let (($x3665 (<= ?x981 0)))
 (let ((@x2376 (and-elim @x2403 $x1821)))
 (let ((@x699 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1821) $x3665)) @x2376 $x3665)))
 (let (($x3664 (>= ?x981 0)))
 (let ((@x2001 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1821) $x3664)) @x2376 $x3664)))
 (let (($x3942 (not (<= ?x3033 0))))
 (let (($x488 (>= ?x3033 0)))
 (let ((@x3777 ((_ th-lemma arith) (hypothesis (not $x488)) @x3898 @x2055 @x3552 @x2607 @x2001 @x699 @x2001 @x699 @x3552 @x2607 @x3552 @x2607 @x2001 @x699 @x3898 @x2055 @x3552 @x2607 @x1893 @x2623 @x3898 @x2055 @x1508 @x1680 @x3898 @x2055 false)))
 (let ((@x1894 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3022 $x3942 (not $x488))) (and-elim @x2403 $x2522) (or $x3942 (not $x488)))))
 ((_ th-lemma arith) (unit-resolution @x1894 (lemma @x3777 $x488) $x3942) @x3898 @x2055 @x3552 @x2607 @x2001 @x699 @x2001 @x699 @x3552 @x2607 @x3552 @x2607 @x2001 @x699 @x3898 @x2055 @x3552 @x2607 @x1893 @x2623 @x3898 @x2055 @x1508 @x1680 @x3898 @x2055 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        27
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1476
 :arith-nonlinear-bounds    20
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 253
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.73
 :memory                    3.65
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                6174846
 :num-checks                1
 :propagations              12
 :rlimit-count              87032
 :time                      0.07
 :total-time                0.08)
