unsat
((set-logic NIA)
(declare-fun x!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x942 (+ y00 x00 (* (- 1) y!0) (* (- 1) x!1))))
 (let (($x1121 (<= ?x942 0)))
 (let (($x2223 (= ?x942 0)))
 (let ((?x204 (+ 1 y!0)))
 (let ((?x256 (+ (- 1) x!1)))
 (let ((?x2824 (* ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204 ?x204)))
 (let ((?x2217 (* x00 ?x256 ?x256 ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204)))
 (let ((?x993 (* ?x256 ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204)))
 (let ((?x780 (* ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204 ?x204 ?x204)))
 (let ((?x444 (* ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204 ?x204)))
 (let ((?x290 (* y00 ?x256 ?x256 ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204)))
 (let ((?x1885 (+ y00 x00 (* (- 2) y!0) (* (- 2) x!1) ?x290 ?x444 (* y!0 y!0 y!0 x!1 x!1) (* 6 (* y00 y!0 y!0 y!0 y!0 x!1)) (* (- 4) (* x00 x!1)) (* 12 (* x00 y!0 y!0 x!1)) (* (- 1) (* y00 y!0 y!0 y!0 y!0 y!0)) (* (- 1) (* x00 y!0 y!0 y!0 y!0 y!0)) (* x00 y!0 y!0 y!0 y!0 y!0 x!1) (* (- 1) (* x00 ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204)) (* (- 1) (* x00 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204)) (* (- 1) (* ?x256 ?x256 ?x256 ?x256 ?x204 ?x204)) (* (- 1) (* ?x256 ?x256 ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204)) ?x780 (* y00 y!0 y!0 y!0 y!0 y!0 x!1) (* (- 1) (* y00 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204 ?x204)) (* (- 1) (* ?x256 ?x256 ?x256 ?x256 ?x256 ?x204)) (* (- 1) (* ?x256 ?x256 ?x204 ?x204 ?x204 ?x204 ?x204)) ?x993 (* (- 3) (* x00 y!0)) (* 6 (* x00 y!0 y!0 y!0 y!0 x!1)) (* (- 6) (* x00 y!0 y!0 y!0 y!0)) (* 4 (* y!0 y!0 x!1 x!1)) (* y!0 y!0 x!1) (* 5 (* y!0 x!1 x!1)) (* (- 3) (* y!0 x!1)) (* 3 (* y!0 y!0 y!0 x!1)) (* 12 (* y00 y!0 y!0 x!1)) (* 13 (* y00 y!0 y!0 y!0 x!1)) (* (- 13) (* y00 y!0 y!0 y!0)) (* y00 x!1 x!1 x!1 x!1) (* (- 4) (* y00 x!1 x!1 x!1)) (* 6 (* y00 x!1 x!1)) (* (- 4) (* y00 x!1)) (* y00 y!0 x!1 x!1 x!1 x!1) (* 6 (* y00 y!0 x!1 x!1)) (* 6 (* x00 x!1 x!1)) (* (- 4) (* x00 x!1 x!1 x!1)) (* x00 x!1 x!1 x!1 x!1) (* 6 (* x00 y!0 x!1 x!1)) (* x00 y!0 x!1 x!1 x!1 x!1) (* (- 1) (* y00 ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204)) (* 13 (* x00 y!0 y!0 y!0 x!1)) (* (- 13) (* x00 y!0 y!0 y!0)) (* (- 6) (* y00 y!0 y!0 y!0 y!0)) (* (- 5) (* y!0 y!0)) (* (- 1) (* x00 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204 ?x204)) (* (- 4) (* y!0 y!0 y!0)) (* y!0 y!0 y!0 y!0 x!1) (* 2 (* x!1 x!1)) (* (- 1) (* ?x256 ?x256 ?x204 ?x204 ?x204 ?x204)) ?x2217 (* (- 1) (* y!0 y!0 y!0 y!0)) (* (- 3) (* y00 y!0)) (* (- 12) (* x00 y!0 y!0)) (* (- 12) (* y00 y!0 y!0)) (* (- 4) (* y00 y!0 x!1 x!1 x!1)) (* (- 4) (* x00 y!0 x!1 x!1 x!1)) (* 2 (* ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204)) (* (- 1) (* ?x256 ?x256 ?x256 ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204)) (* (- 1) (* y00 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204)) (* (- 1) (* ?x256 ?x204 ?x204 ?x204 ?x204 ?x204 ?x204)) (* (- 1) (* ?x256 ?x204 ?x204 ?x204 ?x204 ?x204)) ?x2824)))
 (let (($x2304 (= ?x1885 0)))
 (let (($x590 (not $x2304)))
 (let (($x1014 (and $x2223 $x590)))
 (let ((?x791 (* ?x256 ?x256 ?x256 ?x256 ?x256 ?x204)))
 (let ((?x790 (* y00 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204 ?x204)))
 (let ((?x779 (* ?x256 ?x256 ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204)))
 (let ((?x778 (* ?x256 ?x256 ?x256 ?x256 ?x204 ?x204)))
 (let ((?x776 (* x00 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204)))
 (let ((?x2182 (* x00 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204 ?x204)))
 (let ((?x2219 (* y!0 y!0 y!0 y!0)))
 (let ((?x768 (* x00 ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204)))
 (let ((?x1152 (* y00 ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204)))
 (let ((?x2250 (* ?x256 ?x204 ?x204 ?x204 ?x204 ?x204)))
 (let ((?x2249 (* ?x256 ?x204 ?x204 ?x204 ?x204 ?x204 ?x204)))
 (let ((?x2248 (* y00 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204)))
 (let ((?x2246 (* ?x256 ?x256 ?x256 ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204)))
 (let ((?x892 (* ?x256 ?x256 ?x204 ?x204 ?x204 ?x204 ?x204)))
 (let ((?x2200 (* ?x256 ?x256 ?x204 ?x204 ?x204 ?x204)))
 (let ((?x113 (* (- 1) x00)))
 (let ((?x106 (* (- 1) y00)))
 (let ((?x801 (+ (* 2 x!1) (* 2 y!0) ?x106 ?x113 (* 3 (* y!0 y00)) (* (- 1) ?x290) (* (- 6) (* x!1 x!1 y!0 y00)) (* 4 (* x!1 x!1 x!1 y!0 y00)) (* (- 1) (* x!1 x!1 x!1 x!1 y!0 y00)) (* 4 (* x!1 y00)) (* (- 6) (* x!1 x!1 y00)) (* 4 (* x!1 x!1 x!1 y00)) (* (- 1) (* x!1 x!1 x!1 x!1 y00)) (* 12 (* y!0 y!0 y00)) (* 13 (* y!0 y!0 y!0 y00)) (* (- 13) (* x!1 y!0 y!0 y!0 y00)) (* (- 12) (* x!1 y!0 y!0 y00)) (* 5 (* y!0 y!0)) (* 4 (* y!0 y!0 y!0)) (* (- 3) (* x!1 y!0 y!0 y!0)) (* (- 1) (* x!1 x!1 y!0 y!0 y!0)) (* (- 2) (* x!1 x!1)) (* 3 (* x!1 y!0)) (* (- 5) (* x!1 x!1 y!0)) (* (- 1) (* x!1 y!0 y!0)) (* (- 4) (* x!1 x!1 y!0 y!0)) ?x2200 (* (- 1) ?x2824) (* y!0 y!0 y!0 y!0 y!0 y00) (* 6 (* y!0 y!0 y!0 y!0 y00)) (* (- 1) (* x!1 y!0 y!0 y!0 y!0 y!0 y00)) (* (- 2) (* ?x256 ?x256 ?x256 ?x256 ?x204 ?x204 ?x204 ?x204)) (* (- 6) (* x!1 y!0 y!0 y!0 y!0 y00)) ?x892 ?x2246 (* (- 13) (* x!1 y!0 y!0 y!0 x00)) ?x2248 ?x2249 ?x2250 (* (- 12) (* x!1 y!0 y!0 x00)) (* 4 (* x!1 x00)) (* (- 1) ?x993) (* (- 6) (* x!1 y!0 y!0 y!0 y!0 x00)) (* 6 (* y!0 y!0 y!0 y!0 x00)) (* 13 (* y!0 y!0 y!0 x00)) (* 3 (* y!0 x00)) (* 12 (* y!0 y!0 x00)) (* (- 1) ?x2217) ?x1152 (* (- 6) (* x!1 x!1 x00)) (* 4 (* x!1 x!1 x!1 x00)) (* (- 1) (* x!1 x!1 x!1 x!1 x00)) (* (- 6) (* x!1 x!1 y!0 x00)) (* 4 (* x!1 x!1 x!1 y!0 x00)) (* (- 1) (* x!1 x!1 x!1 x!1 y!0 x00)) (* (- 1) ?x444) ?x768 ?x2219 (* (- 1) (* x!1 y!0 y!0 y!0 y!0)) (* (- 1) ?x780) ?x2182 ?x776 ?x778 ?x779 (* (- 1) (* x!1 y!0 y!0 y!0 y!0 y!0 x00)) (* y!0 y!0 y!0 y!0 y!0 x00) ?x790 ?x791)))
 (let (($x922 (and (= (+ x!1 y!0 ?x106 ?x113) 0) (not (= ?x801 0)))))
 (let (($x1475 (exists ((x Int) (y Int) )(! (let ((?x130 (+ 1 y)))
 (let ((?x122 (+ (- 1) x)))
 (let ((?x2842 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130)))
 (let ((?x2757 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2697 (* y y y y y x00)))
 (let ((?x2665 (* (- 1) (* x y y y y y x00))))
 (let ((?x2531 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2526 (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130)))
 (let ((?x2441 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2429 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2486 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x2273 (* (- 1) (* x y y y y))))
 (let ((?x2204 (* y y y y)))
 (let ((?x2069 (* x00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1909 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x1806 (* (- 1) (* x x x x y x00))))
 (let ((?x1848 (* 4 (* x x x y x00))))
 (let ((?x1857 (* (- 6) (* x x y x00))))
 (let ((?x1803 (* (- 1) (* x x x x x00))))
 (let ((?x1856 (* 4 (* x x x x00))))
 (let ((?x1855 (* (- 6) (* x x x00))))
 (let ((?x1520 (* y00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1482 (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x2830 (* 6 (* y y y y x00))))
 (let ((?x2829 (* (- 6) (* x y y y y x00))))
 (let ((?x1222 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1854 (* 4 (* x x00))))
 (let ((?x2828 (* (- 12) (* x y y x00))))
 (let ((?x1304 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1303 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1291 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2827 (* (- 13) (* x y y y x00))))
 (let ((?x1163 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1161 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1951 (* (- 6) (* x y y y y y00))))
 (let ((?x944 (* (- 2) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x1040 (* (- 1) (* x y y y y y y00))))
 (let ((?x1950 (* 6 (* y y y y y00))))
 (let ((?x793 (* y y y y y y00)))
 (let ((?x844 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x665 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x914 (* (- 4) (* x x y y))))
 (let ((?x530 (* (- 1) (* x y y))))
 (let ((?x911 (* (- 5) (* x x y))))
 (let ((?x629 (* 3 (* x y))))
 (let ((?x906 (* (- 2) (* x x))))
 (let ((?x595 (* (- 1) (* x x y y y))))
 (let ((?x2319 (* (- 3) (* x y y y))))
 (let ((?x2307 (* 4 (* y y y))))
 (let ((?x2318 (* 5 (* y y))))
 (let ((?x2166 (* (- 12) (* x y y y00))))
 (let ((?x1952 (* (- 13) (* x y y y y00))))
 (let ((?x1949 (* 13 (* y y y y00))))
 (let ((?x145 (* (- 1) (* x x x x y00))))
 (let ((?x349 (* 4 (* x x x y00))))
 (let ((?x348 (* (- 6) (* x x y00))))
 (let ((?x346 (* 4 (* x y00))))
 (let ((?x148 (* (- 1) (* x x x x y y00))))
 (let ((?x331 (* 4 (* x x x y y00))))
 (let ((?x351 (* (- 6) (* x x y y00))))
 (let ((?x2320 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x113 (* (- 1) x00)))
 (let ((?x106 (* (- 1) y00)))
 (let ((?x727 (* 2 y)))
 (let ((?x644 (* 2 x)))
 (let ((?x2328 (+ ?x644 ?x727 ?x106 ?x113 (* 3 (* y y00)) ?x2320 ?x351 ?x331 ?x148 ?x346 ?x348 ?x349 ?x145 (* 12 (* y y y00)) ?x1949 ?x1952 ?x2166 ?x2318 ?x2307 ?x2319 ?x595 ?x906 ?x629 ?x911 ?x530 ?x914 ?x665 ?x844 ?x793 ?x1950 ?x1040 ?x944 ?x1951 ?x1161 ?x1163 ?x2827 ?x1291 ?x1303 ?x1304 ?x2828 ?x1854 ?x1222 ?x2829 ?x2830 (* 13 (* y y y x00)) (* 3 (* y x00)) (* 12 (* y y x00)) ?x1482 ?x1520 ?x1855 ?x1856 ?x1803 ?x1857 ?x1848 ?x1806 ?x1909 ?x2069 ?x2204 ?x2273 ?x2486 ?x2429 ?x2441 ?x2526 ?x2531 ?x2665 ?x2697 ?x2757 ?x2842)))
 (let (($x132 (= (+ x y ?x106 ?x113) 0)))
 (and $x132 (not (= ?x2328 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!26))
 ))
 (let (($x2450 (exists ((x Int) (y Int) )(! (let ((?x130 (+ 1 y)))
 (let ((?x122 (+ (- 1) x)))
 (let ((?x1520 (* y00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x2842 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130)))
 (let ((?x1291 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2526 (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130)))
 (let ((?x2531 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1482 (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x2486 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x2069 (* x00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1909 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x2320 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1303 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1304 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2757 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1222 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1163 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1161 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x944 (* (- 2) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x844 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x665 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2441 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2429 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x304 (+ ?x2429 ?x2441 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x130)) (* y00 ?x122 ?x130 ?x130 ?x130) (* (- 1) (* ?x122 ?x122 ?x130 ?x130 ?x130)) ?x665 ?x844 ?x944 (* (- 1) (* ?x122 ?x122 ?x130 ?x130)) (* (- 1) (* y00 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)) ?x1161 ?x1163 ?x1222 ?x2757 (* x00 ?x122 ?x130 ?x130) ?x1304 ?x1303 (* (- 1) (* x00 ?x122 ?x130 ?x130 ?x130 ?x130)) (* x00 ?x122 ?x130 ?x130 ?x130) (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x130)) ?x2320 ?x1909 ?x2069 (* (- 1) (* y00 ?x122 ?x130 ?x130 ?x130 ?x130)) (* (- 1) (* ?x122 ?x130 ?x130 ?x130)) (* y00 ?x122 ?x130 ?x130) (* (- 1) (* ?x122 ?x130 ?x130 ?x130 ?x130)) ?x2486 ?x1482 ?x2531 ?x2526 ?x1291 (* (- 1) (* x00 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)) ?x2842 ?x1520)))
 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (not (= ?x304 0))))))))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x2731 (lambda ((x Int) (y Int) )(let ((?x130 (+ 1 y)))
 (let ((?x122 (+ (- 1) x)))
 (let ((?x2842 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130)))
 (let ((?x2757 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2697 (* y y y y y x00)))
 (let ((?x2665 (* (- 1) (* x y y y y y x00))))
 (let ((?x2531 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2526 (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130)))
 (let ((?x2441 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2429 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2486 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x2273 (* (- 1) (* x y y y y))))
 (let ((?x2204 (* y y y y)))
 (let ((?x2069 (* x00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1909 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x1806 (* (- 1) (* x x x x y x00))))
 (let ((?x1848 (* 4 (* x x x y x00))))
 (let ((?x1857 (* (- 6) (* x x y x00))))
 (let ((?x1803 (* (- 1) (* x x x x x00))))
 (let ((?x1856 (* 4 (* x x x x00))))
 (let ((?x1855 (* (- 6) (* x x x00))))
 (let ((?x1520 (* y00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1482 (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x2830 (* 6 (* y y y y x00))))
 (let ((?x2829 (* (- 6) (* x y y y y x00))))
 (let ((?x1222 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1854 (* 4 (* x x00))))
 (let ((?x2828 (* (- 12) (* x y y x00))))
 (let ((?x1304 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1303 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1291 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2827 (* (- 13) (* x y y y x00))))
 (let ((?x1163 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1161 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1951 (* (- 6) (* x y y y y y00))))
 (let ((?x944 (* (- 2) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x1040 (* (- 1) (* x y y y y y y00))))
 (let ((?x1950 (* 6 (* y y y y y00))))
 (let ((?x793 (* y y y y y y00)))
 (let ((?x844 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x665 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x914 (* (- 4) (* x x y y))))
 (let ((?x530 (* (- 1) (* x y y))))
 (let ((?x911 (* (- 5) (* x x y))))
 (let ((?x629 (* 3 (* x y))))
 (let ((?x906 (* (- 2) (* x x))))
 (let ((?x595 (* (- 1) (* x x y y y))))
 (let ((?x2319 (* (- 3) (* x y y y))))
 (let ((?x2307 (* 4 (* y y y))))
 (let ((?x2318 (* 5 (* y y))))
 (let ((?x2166 (* (- 12) (* x y y y00))))
 (let ((?x1952 (* (- 13) (* x y y y y00))))
 (let ((?x1949 (* 13 (* y y y y00))))
 (let ((?x145 (* (- 1) (* x x x x y00))))
 (let ((?x349 (* 4 (* x x x y00))))
 (let ((?x348 (* (- 6) (* x x y00))))
 (let ((?x346 (* 4 (* x y00))))
 (let ((?x148 (* (- 1) (* x x x x y y00))))
 (let ((?x331 (* 4 (* x x x y y00))))
 (let ((?x351 (* (- 6) (* x x y y00))))
 (let ((?x2320 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x113 (* (- 1) x00)))
 (let ((?x106 (* (- 1) y00)))
 (let ((?x727 (* 2 y)))
 (let ((?x644 (* 2 x)))
 (let ((?x2328 (+ ?x644 ?x727 ?x106 ?x113 (* 3 (* y y00)) ?x2320 ?x351 ?x331 ?x148 ?x346 ?x348 ?x349 ?x145 (* 12 (* y y y00)) ?x1949 ?x1952 ?x2166 ?x2318 ?x2307 ?x2319 ?x595 ?x906 ?x629 ?x911 ?x530 ?x914 ?x665 ?x844 ?x793 ?x1950 ?x1040 ?x944 ?x1951 ?x1161 ?x1163 ?x2827 ?x1291 ?x1303 ?x1304 ?x2828 ?x1854 ?x1222 ?x2829 ?x2830 (* 13 (* y y y x00)) (* 3 (* y x00)) (* 12 (* y y x00)) ?x1482 ?x1520 ?x1855 ?x1856 ?x1803 ?x1857 ?x1848 ?x1806 ?x1909 ?x2069 ?x2204 ?x2273 ?x2486 ?x2429 ?x2441 ?x2526 ?x2531 ?x2665 ?x2697 ?x2757 ?x2842)))
 (let (($x132 (= (+ x y ?x106 ?x113) 0)))
 (let (($x2488 (and $x132 (not (= ?x2328 0)))))
 (let ((?x304 (+ ?x2429 ?x2441 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x130)) (* y00 ?x122 ?x130 ?x130 ?x130) (* (- 1) (* ?x122 ?x122 ?x130 ?x130 ?x130)) ?x665 ?x844 ?x944 (* (- 1) (* ?x122 ?x122 ?x130 ?x130)) (* (- 1) (* y00 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)) ?x1161 ?x1163 ?x1222 ?x2757 (* x00 ?x122 ?x130 ?x130) ?x1304 ?x1303 (* (- 1) (* x00 ?x122 ?x130 ?x130 ?x130 ?x130)) (* x00 ?x122 ?x130 ?x130 ?x130) (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x130)) ?x2320 ?x1909 ?x2069 (* (- 1) (* y00 ?x122 ?x130 ?x130 ?x130 ?x130)) (* (- 1) (* ?x122 ?x130 ?x130 ?x130)) (* y00 ?x122 ?x130 ?x130) (* (- 1) (* ?x122 ?x130 ?x130 ?x130 ?x130)) ?x2486 ?x1482 ?x2531 ?x2526 ?x1291 (* (- 1) (* x00 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)) ?x2842 ?x1520)))
 (let (($x2428 (and (= (+ x ?x106 ?x113 y) 0) (not (= ?x304 0)))))
 (rewrite (= $x2428 $x2488)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((x Int) (y Int) )(! (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x38 (+ (* ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x42 (+ (- ?x38 (* ?x34 ?x34 ?x34 ?x34 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35 y00))))
 (let ((?x46 (+ (- ?x42 (* ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x53 (- (- ?x46 (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35)) (* 2 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x55 (- (- ?x53 (* ?x34 ?x34 ?x35 ?x35)) (* ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 y00))))
 (let ((?x58 (+ ?x55 (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35))))
 (let ((?x65 (+ (- ?x58 (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 y00) (* ?x34 x00 ?x35 ?x35) (* ?x34 ?x35 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x69 (+ (- ?x65 (* ?x34 x00 ?x35 ?x35 ?x35 ?x35)) (* ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x74 (- (- ?x69 (* ?x34 ?x34 ?x34 ?x34 x00 ?x35)) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (let ((?x77 (+ (- ?x74 (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x81 (- (- ?x77 (* ?x34 ?x35 ?x35 ?x35 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35))))
 (let ((?x88 (- (- (+ ?x81 (* ?x34 ?x35 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x93 (+ (- ?x88 (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 y00))))
 (let ((?x98 (+ (- ?x93 (* ?x34 x00 ?x35 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x35) (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x98 0)))))))))))))))))))) :qid k!26))
 ))
 (let ((?x2443 (lambda ((x Int) (y Int) )(let ((?x130 (+ 1 y)))
 (let ((?x122 (+ (- 1) x)))
 (let ((?x1520 (* y00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x2842 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130)))
 (let ((?x1291 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2526 (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130)))
 (let ((?x2531 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1482 (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x2486 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x2069 (* x00 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1909 (* (- 1) (* ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x2320 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1303 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1304 (* ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2757 (* y00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1222 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130))))
 (let ((?x1163 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130)))
 (let ((?x1161 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x944 (* (- 2) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x844 (* (- 1) (* ?x122 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130))))
 (let ((?x665 (* ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2441 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x2429 (* x00 ?x122 ?x122 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x304 (+ ?x2429 ?x2441 (* (- 1) (* y00 ?x122 ?x122 ?x122 ?x122 ?x130)) (* y00 ?x122 ?x130 ?x130 ?x130) (* (- 1) (* ?x122 ?x122 ?x130 ?x130 ?x130)) ?x665 ?x844 ?x944 (* (- 1) (* ?x122 ?x122 ?x130 ?x130)) (* (- 1) (* y00 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)) ?x1161 ?x1163 ?x1222 ?x2757 (* x00 ?x122 ?x130 ?x130) ?x1304 ?x1303 (* (- 1) (* x00 ?x122 ?x130 ?x130 ?x130 ?x130)) (* x00 ?x122 ?x130 ?x130 ?x130) (* (- 1) (* x00 ?x122 ?x122 ?x122 ?x122 ?x130)) ?x2320 ?x1909 ?x2069 (* (- 1) (* y00 ?x122 ?x130 ?x130 ?x130 ?x130)) (* (- 1) (* ?x122 ?x130 ?x130 ?x130)) (* y00 ?x122 ?x130 ?x130) (* (- 1) (* ?x122 ?x130 ?x130 ?x130 ?x130)) ?x2486 ?x1482 ?x2531 ?x2526 ?x1291 (* (- 1) (* x00 ?x122 ?x130 ?x130 ?x130 ?x130 ?x130)) ?x2842 ?x1520)))
 (let (($x2428 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (not (= ?x304 0)))))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x38 (+ (* ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x42 (+ (- ?x38 (* ?x34 ?x34 ?x34 ?x34 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35 y00))))
 (let ((?x46 (+ (- ?x42 (* ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x53 (- (- ?x46 (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35)) (* 2 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x55 (- (- ?x53 (* ?x34 ?x34 ?x35 ?x35)) (* ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 y00))))
 (let ((?x58 (+ ?x55 (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35))))
 (let ((?x65 (+ (- ?x58 (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 y00) (* ?x34 x00 ?x35 ?x35) (* ?x34 ?x35 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x69 (+ (- ?x65 (* ?x34 x00 ?x35 ?x35 ?x35 ?x35)) (* ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x74 (- (- ?x69 (* ?x34 ?x34 ?x34 ?x34 x00 ?x35)) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (let ((?x77 (+ (- ?x74 (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x81 (- (- ?x77 (* ?x34 ?x35 ?x35 ?x35 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35))))
 (let ((?x88 (- (- (+ ?x81 (* ?x34 ?x35 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x93 (+ (- ?x88 (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35 y00))))
 (let ((?x98 (+ (- ?x93 (* ?x34 x00 ?x35 ?x35 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x34 ?x34 ?x35) (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (let (($x102 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x98 0))))))
 (rewrite (= $x102 $x2428)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x1462 (mp (mp @x104 (quant-intro (proof-bind ?x2443) (= $x103 $x2450)) $x2450) (rewrite (= $x2450 $x2450)) $x2450)))
 (let ((@x2186 (mp~ (mp @x1462 (quant-intro (proof-bind ?x2731) (= $x2450 $x1475)) $x1475) (sk (~ $x1475 $x922)) $x922)))
 (let ((@x2305 (mp @x2186 (rewrite (= $x922 $x1014)) $x1014)))
 (let ((@x517 (and-elim @x2305 $x2223)))
 (let ((@x1032 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2223) $x1121)) @x517 $x1121)))
 (let (($x1128 (>= ?x942 0)))
 (let ((@x1120 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2223) $x1128)) @x517 $x1128)))
 (let (($x524 (not (>= ?x1885 0))))
 (let (($x1097 (<= ?x1885 0)))
 (let ((@x880 (lemma ((_ th-lemma arith) (hypothesis (not $x1097)) @x1120 @x1032 @x1120 @x1032 false) $x1097)))
 (let ((@x1137 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2304 (not $x1097) $x524)) (and-elim @x2305 $x590) (or (not $x1097) $x524))))
 ((_ th-lemma arith) (unit-resolution @x1137 @x880 $x524) @x1120 @x1032 @x1120 @x1032 false))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 1
 :arith-assert-diseq        1
 :arith-assert-lower        19
 :arith-assert-upper        3
 :arith-conflicts           2
 :arith-eq-adapter          2
 :arith-grobner             2
 :arith-max-min             544
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    8
 :arith-num-rows            4
 :arith-pivots              2
 :arith-row-summations      1
 :arith-tableau-max-columns 89
 :arith-tableau-max-rows    4
 :conflicts                 2
 :decisions                 1
 :del-clause                7
 :final-checks              4
 :max-memory                19.93
 :memory                    19.43
 :mk-bool-var               6
 :mk-clause                 7
 :num-allocs                764319
 :num-checks                1
 :propagations              4
 :rlimit-count              9694
 :time                      0.02
 :total-time                0.03)
