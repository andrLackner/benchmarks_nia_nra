unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1737 (* (- 1) s!1)))
 (let ((?x1372 (* r!2 r!2)))
 (let ((?x1692 (* 3 ?x1372)))
 (let ((?x256 (* r00 r00)))
 (let ((?x270 (* (- 3) ?x256)))
 (let ((?x873 (+ s00 ?x270 ?x1692 ?x1737)))
 (let (($x1460 (<= ?x873 0)))
 (let (($x1551 (= ?x873 0)))
 (let ((?x1610 (* s!1 r!2)))
 (let ((?x1689 (* (- 6) r!2)))
 (let ((?x1295 (* s!1 s!1 s!1)))
 (let ((?x1705 (* (- 1) (* x!0 x!0 x!0))))
 (let ((?x431 (* 6 r!2)))
 (let ((?x1099 (+ 3 s!1 ?x431)))
 (let ((?x373 (+ 1 r!2)))
 (let ((?x1708 (* (- 1) x!0)))
 (let ((?x1712 (+ (- 3) ?x1708 (* s!1 s!1 s!1 r!2 r!2) (* 2 (* s!1 s!1 s!1 r!2)) (* (- 1) (* x!0 x!0 x!0 r!2 r!2)) (* (- 1) (* x!0 r!2)) (* (- 2) (* x!0 x!0 x!0 r!2)) (* (- 1) (* ?x373 ?x373 (+ x!0 ?x1737) ?x1099 ?x1099)) (* 3 (* x!0 x!0 s!1 r!2 r!2)) ?x1705 (* (- 3) (* x!0 s!1 s!1)) (* (- 6) (* x!0 s!1 s!1 r!2)) ?x1295 (* (- 3) (* x!0 s!1 s!1 r!2 r!2)) ?x1689 ?x1610 (* 3 (* x!0 x!0 s!1)) (* 6 (* x!0 x!0 s!1 r!2)))))
 (let ((?x557 (* ?x873 ?x1712)))
 (let (($x258 (= ?x557 0)))
 (let (($x552 (not $x258)))
 (let ((?x275 (* (- 9) s!1)))
 (let ((?x1301 (* x00 x00)))
 (let ((?x574 (* 108 ?x1301)))
 (let ((?x1139 (* s00 s00 s00)))
 (let ((?x525 (* 16 ?x1139)))
 (let ((?x837 (* r00 r00 r00 x00)))
 (let ((?x695 (* (- 432) ?x837)))
 (let ((?x760 (* s00 x00)))
 (let ((?x791 (* (- 108) ?x760)))
 (let ((?x602 (* s00 r00 r00)))
 (let ((?x1164 (* (- 36) ?x602)))
 (let ((?x563 (* r00 r00 s!1)))
 (let ((?x1157 (* 36 ?x563)))
 (let ((?x546 (* s00 s00)))
 (let ((?x1006 (* 51 ?x546)))
 (let ((?x477 (* r00 x00)))
 (let ((?x674 (* 108 ?x477)))
 (let ((?x137 (* 9 s00)))
 (let ((?x586 (+ ?x137 (* (- 216) (* r00 r00 r00 s!1)) (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x674 ?x1006 ?x1157 ?x1164 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x791 ?x695 (* 15 (* s!1 s!1)) (* 108 (* x00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 216 (* s00 r00 r00 r00)) ?x525 (* (- 108) (* x!0 s!1)) (* 432 (* r00 r00 r00 x!0)) (* 108 (* x!0 x!0)) (* (- 4) ?x1295) ?x574 (* 108 (* s00 r00 s!1)) (* (- 216) (* s00 r00 x!0)) (* (- 66) (* s00 s!1)) (* (- 108) (* r00 x!0)) ?x275 (* (- 216) (* x00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* 54 (* r00 s!1)) (* 108 (* s00 x!0)))))
 (let ((?x279 (+ ?x137 (* (- 24) (* s00 r00)) (* 54 ?x477) (* (- 54) (* x!0 r!2)) (* 15 ?x546) ?x1157 ?x1164 (* 2 (* s00 s00 r00)) (* 54 (* x00 r!2)) (* (- 36) (* r00 x!0 r!2)) (* (- 6) ?x760) (* 36 (* r00 r00 x00)) (* (- 3) (* s!1 s!1)) (* (- 24) (* s00 r!2)) (* 6 (* x00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* (- 36) (* r00 r00 x!0)) (* (- 6) (* x!0 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* (- 2) (* s00 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* 36 (* r00 x00 r!2)) (* 2 (* s00 r00 s!1)) (* (- 12) (* s00 s!1)) (* (- 54) (* r00 x!0)) ?x275 (* 24 ?x1610) (* 24 (* r00 s!1)) (* 6 (* s00 x!0)))))
 (let ((?x1373 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1073 (+ ?x44 (* (- 9) (* s00 r00)) (* 18 ?x477) (* (- 18) (* x!0 r!2)) (* 4 ?x546) (* 6 ?x563) (* (- 6) ?x602) (* 18 (* x00 r!2)) (* (- 2) (* s!1 s!1)) (* (- 9) (* s00 r!2)) (* (- 2) (* s00 s!1)) (* 6 (* s00 r00 r!2)) (* (- 18) (* r00 x!0)) ?x1373 (* (- 6) (* r00 s!1 r!2)) (* 9 ?x1610) (* 9 (* r00 s!1)))))
 (let ((?x1254 (* 3 r!2)))
 (let ((?x1255 (* 6 x!0)))
 (let ((?x424 (* r00 r00 r00)))
 (let ((?x425 (* 12 ?x424)))
 (let ((?x381 (* s00 r00)))
 (let ((?x459 (* (- 6) ?x381)))
 (let ((?x456 (* (- 6) x00)))
 (let ((?x455 (* (- 3) r00)))
 (let ((?x673 (+ ?x44 ?x455 ?x456 ?x459 ?x425 ?x1255 (* 4 (* s00 r!2)) ?x1373 ?x1254 (* 2 ?x1610) (* (- 12) (* r00 r00 r!2)))))
 (let (($x494 (and $x1551 (= ?x673 0) (= ?x1073 0) (= ?x279 0) (= ?x586 0) $x552)))
 (let ((?x738 (+ 3 ?x431 s!1)))
 (let ((?x1256 (* r!2 s!1)))
 (let ((?x378 (+ (- 3) ?x1689 ?x1708 ?x1256 (* (- 1) (* r!2 x!0)) ?x1295 ?x1705 (* (- 2) (* r!2 x!0 x!0 x!0)) (* (- 1) (* r!2 r!2 x!0 x!0 x!0)) (* 2 (* r!2 s!1 s!1 s!1)) (* r!2 r!2 s!1 s!1 s!1) (* (- 3) (* s!1 s!1 x!0)) (* (- 6) (* r!2 s!1 s!1 x!0)) (* (- 3) (* r!2 r!2 s!1 s!1 x!0)) (* 3 (* s!1 x!0 x!0)) (* 6 (* r!2 s!1 x!0 x!0)) (* 3 (* r!2 r!2 s!1 x!0 x!0)) (* (- 1) (* ?x373 ?x373 (+ ?x1737 x!0) ?x738 ?x738)))))
 (let ((?x1331 (* (- 108) ?x1301)))
 (let ((?x1330 (* (- 16) ?x1139)))
 (let ((?x1011 (* s00 r00 r00 r00)))
 (let ((?x1326 (* (- 216) ?x1011)))
 (let ((?x838 (* 432 ?x837)))
 (let ((?x1084 (* 108 ?x760)))
 (let ((?x686 (* s00 s00 r00 r00)))
 (let ((?x687 (* 36 ?x686)))
 (let ((?x623 (* s00 s00 r00)))
 (let ((?x967 (* 108 ?x623)))
 (let ((?x955 (* 36 ?x602)))
 (let ((?x1320 (* (- 51) ?x546)))
 (let ((?x481 (* s!1 r00 r00)))
 (let ((?x802 (* (- 36) ?x481)))
 (let ((?x1317 (* (- 108) ?x477)))
 (let ((?x468 (* s00 r00 x00)))
 (let ((?x1316 (* (- 216) ?x468)))
 (let ((?x475 (* 54 ?x381)))
 (let ((?x942 (* (- 9) s00)))
 (let ((?x798 (* 9 s!1)))
 (let ((?x1687 (+ ?x798 ?x942 ?x475 ?x1316 ?x1317 (* (- 15) (* s!1 s!1)) ?x802 ?x1320 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x955 ?x967 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x687 (* (- 108) (* s!1 s00 r00)) (* 4 ?x1295) ?x1084 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x838 (* 12 (* s!1 s!1 s00)) ?x1326 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1330 (* 216 (* x!0 x00)) ?x1331)))
 (let ((?x832 (* r00 r00 x00)))
 (let ((?x845 (* (- 36) ?x832)))
 (let ((?x761 (* 6 ?x760)))
 (let ((?x651 (* (- 2) ?x623)))
 (let ((?x871 (* (- 15) ?x546)))
 (let ((?x506 (* (- 54) ?x477)))
 (let ((?x519 (* 24 ?x381)))
 (let ((?x981 (+ ?x798 ?x942 (* (- 24) ?x1256) (* 24 (* r!2 s00)) ?x519 ?x506 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x802 ?x871 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x955 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x651 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x761 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x845 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x603 (* 6 ?x602)))
 (let ((?x559 (* (- 4) ?x546)))
 (let ((?x491 (* (- 18) ?x477)))
 (let ((?x496 (* 9 ?x381)))
 (let ((?x333 (* (- 3) s00)))
 (let ((?x797 (+ (* 3 s!1) ?x333 (* (- 9) ?x1256) (* 9 (* r!2 s00)) ?x496 ?x491 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x481) ?x559 (* 18 (* x!0 r00)) ?x603 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x630 (+ ?x1254 ?x1373 ?x1255 ?x44 ?x455 ?x456 (* 2 ?x1256) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x459 ?x425)))
 (let (($x1079 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x1372) (* 3 ?x256)) 0) (= ?x630 0) (= ?x797 0) (= ?x981 0) (= ?x1687 0) (not (= (* (+ ?x1737 s00 ?x1692 ?x270) ?x378) 0)))))
 (let (($x271 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1338 (+ 3 ?x211 s)))
 (let ((?x235 (* (- 1) s)))
 (let ((?x1433 (+ ?x235 x)))
 (let ((?x1371 (+ 1 r)))
 (let ((?x1769 (* 3 (* r r s x x))))
 (let ((?x1766 (* 6 (* r s x x))))
 (let ((?x1763 (* 3 (* s x x))))
 (let ((?x1760 (* (- 3) (* r r s s x))))
 (let ((?x1757 (* (- 6) (* r s s x))))
 (let ((?x1754 (* (- 3) (* s s x))))
 (let ((?x1555 (* r r s s s)))
 (let ((?x1749 (* 2 (* r s s s))))
 (let ((?x1732 (* (- 1) (* r r x x x))))
 (let ((?x1746 (* (- 2) (* r x x x))))
 (let ((?x1730 (* (- 1) (* x x x))))
 (let ((?x758 (* s s s)))
 (let ((?x504 (* r x)))
 (let ((?x1486 (* (- 1) ?x504)))
 (let ((?x300 (* r s)))
 (let ((?x1481 (* (- 1) x)))
 (let ((?x1357 (* (- 6) r)))
 (let ((?x438 (+ (- 3) ?x1357 ?x1481 ?x300 ?x1486 ?x758 ?x1730 ?x1746 ?x1732 ?x1749 ?x1555 ?x1754 ?x1757 ?x1760 ?x1763 ?x1766 ?x1769 (* (- 1) (* ?x1371 ?x1371 ?x1433 ?x1338 ?x1338)))))
 (let ((?x1652 (* (+ ?x235 s00 (* 3 (* r r)) (* (- 3) (* r00 r00))) ?x438)))
 (let ((?x1301 (* x00 x00)))
 (let ((?x1331 (* (- 108) ?x1301)))
 (let ((?x1139 (* s00 s00 s00)))
 (let ((?x1330 (* (- 16) ?x1139)))
 (let ((?x1011 (* s00 r00 r00 r00)))
 (let ((?x1326 (* (- 216) ?x1011)))
 (let ((?x837 (* r00 r00 r00 x00)))
 (let ((?x838 (* 432 ?x837)))
 (let ((?x760 (* s00 x00)))
 (let ((?x1084 (* 108 ?x760)))
 (let ((?x686 (* s00 s00 r00 r00)))
 (let ((?x687 (* 36 ?x686)))
 (let ((?x623 (* s00 s00 r00)))
 (let ((?x967 (* 108 ?x623)))
 (let ((?x602 (* s00 r00 r00)))
 (let ((?x955 (* 36 ?x602)))
 (let ((?x546 (* s00 s00)))
 (let ((?x1320 (* (- 51) ?x546)))
 (let ((?x520 (* s r00 r00)))
 (let ((?x819 (* (- 36) ?x520)))
 (let ((?x477 (* r00 x00)))
 (let ((?x1317 (* (- 108) ?x477)))
 (let ((?x468 (* s00 r00 x00)))
 (let ((?x1316 (* (- 216) ?x468)))
 (let ((?x381 (* s00 r00)))
 (let ((?x475 (* 54 ?x381)))
 (let ((?x942 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1332 (+ ?x143 ?x942 ?x475 ?x1316 ?x1317 (* (- 15) (* s s)) ?x819 ?x1320 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x955 ?x967 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x687 (* (- 108) (* s s00 r00)) (* 4 ?x758) ?x1084 (* 108 (* s x)) (* (- 108) (* x x)) ?x838 (* 12 (* s s s00)) ?x1326 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1330 (* 216 (* x x00)) ?x1331)))
 (let (($x1333 (= ?x1332 0)))
 (let ((?x832 (* r00 r00 x00)))
 (let ((?x845 (* (- 36) ?x832)))
 (let ((?x761 (* 6 ?x760)))
 (let ((?x651 (* (- 2) ?x623)))
 (let ((?x871 (* (- 15) ?x546)))
 (let ((?x500 (* s s)))
 (let ((?x524 (* 3 ?x500)))
 (let ((?x506 (* (- 54) ?x477)))
 (let ((?x519 (* 24 ?x381)))
 (let ((?x1034 (+ ?x143 ?x942 (* (- 24) ?x300) (* 24 (* r s00)) ?x519 ?x506 ?x524 (* 54 ?x504) (* 36 (* r x r00)) ?x819 ?x871 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x955 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x651 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x761 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x845 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1039 (= ?x1034 0)))
 (let ((?x603 (* 6 ?x602)))
 (let ((?x559 (* (- 4) ?x546)))
 (let ((?x501 (* 2 ?x500)))
 (let ((?x491 (* (- 18) ?x477)))
 (let ((?x496 (* 9 ?x381)))
 (let ((?x333 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x700 (+ ?x47 ?x333 (* (- 9) ?x300) (* 9 (* r s00)) ?x496 ?x491 ?x501 (* 18 ?x504) (* 6 (* r s r00)) (* (- 6) ?x520) ?x559 (* 18 (* x r00)) ?x603 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x707 (= ?x700 0)))
 (let ((?x424 (* r00 r00 r00)))
 (let ((?x425 (* 12 ?x424)))
 (let ((?x459 (* (- 6) ?x381)))
 (let ((?x456 (* (- 6) x00)))
 (let ((?x455 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x460 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x455 ?x456 (* 2 ?x300) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x459 ?x425)))
 (let (($x461 (= ?x460 0)))
 (let ((?x256 (* r00 r00)))
 (let ((?x257 (* 3 ?x256)))
 (let ((?x286 (* (- 1) s00)))
 (let (($x289 (= (+ s ?x286 (* (- 3) (* r r)) ?x257) 0)))
 (and $x289 $x461 $x707 $x1039 $x1333 (not (= ?x1652 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x342 (exists ((r Int) (s Int) (x Int) )(! (let ((?x235 (* (- 1) s)))
 (let ((?x1701 (+ x ?x235)))
 (let ((?x1371 (+ 1 r)))
 (let ((?x1357 (* (- 6) r)))
 (let ((?x211 (* 6 r)))
 (let ((?x875 (+ 3 s ?x211)))
 (let ((?x807 (+ (- 3) (* (- 1) (* ?x1371 ?x1371 ?x1701 ?x875 ?x875)) ?x235 ?x1357 (* (- 1) (* ?x1371 ?x1701)) (* (- 1) (* ?x1371 ?x1371 ?x1701 ?x1701 ?x1701)))))
 (let ((?x256 (* r00 r00)))
 (let ((?x270 (* (- 3) ?x256)))
 (let (($x1533 (= (* (+ (- 3) s00 ?x235 ?x1357 (* 3 (* ?x1371 ?x1371)) ?x270) ?x807) 0)))
 (let ((?x1301 (* x00 x00)))
 (let ((?x574 (* 108 ?x1301)))
 (let ((?x137 (* 9 s00)))
 (let ((?x546 (* s00 s00)))
 (let ((?x1006 (* 51 ?x546)))
 (let ((?x1139 (* s00 s00 s00)))
 (let ((?x525 (* 16 ?x1139)))
 (let ((?x760 (* s00 x00)))
 (let ((?x791 (* (- 108) ?x760)))
 (let ((?x837 (* r00 r00 r00 x00)))
 (let ((?x695 (* (- 432) ?x837)))
 (let ((?x477 (* r00 x00)))
 (let ((?x674 (* 108 ?x477)))
 (let ((?x610 (+ (* 216 (* r00 s00 x00)) ?x674 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x695 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x791 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x525 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1006 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x574)))
 (let ((?x143 (* 9 s)))
 (let ((?x942 (* (- 9) s00)))
 (let ((?x871 (* (- 15) ?x546)))
 (let ((?x832 (* r00 r00 x00)))
 (let ((?x845 (* (- 36) ?x832)))
 (let ((?x761 (* 6 ?x760)))
 (let ((?x500 (* s s)))
 (let ((?x524 (* 3 ?x500)))
 (let ((?x506 (* (- 54) ?x477)))
 (let ((?x1063 (+ (* (- 24) (* s r)) ?x506 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x524 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x761 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x845 ?x871 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x942 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x333 (* (- 3) s00)))
 (let ((?x559 (* (- 4) ?x546)))
 (let ((?x501 (* 2 ?x500)))
 (let ((?x491 (* (- 18) ?x477)))
 (let ((?x1581 (+ (* (- 9) (* s r)) ?x491 (* 9 (* r00 s00)) ?x501 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x559 (* 18 (* r00 x)) ?x333 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x304 (* (- 3) r)))
 (let ((?x1169 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x304 ?x333 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (and (= (+ s00 ?x235 (* 3 (* r r)) ?x270) 0) (= ?x1169 0) (= ?x1581 0) (= ?x1063 0) (= ?x610 0) (not $x1533)))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x950 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1338 (+ 3 ?x211 s)))
 (let ((?x235 (* (- 1) s)))
 (let ((?x1433 (+ ?x235 x)))
 (let ((?x1371 (+ 1 r)))
 (let ((?x1769 (* 3 (* r r s x x))))
 (let ((?x1766 (* 6 (* r s x x))))
 (let ((?x1763 (* 3 (* s x x))))
 (let ((?x1760 (* (- 3) (* r r s s x))))
 (let ((?x1757 (* (- 6) (* r s s x))))
 (let ((?x1754 (* (- 3) (* s s x))))
 (let ((?x1555 (* r r s s s)))
 (let ((?x1749 (* 2 (* r s s s))))
 (let ((?x1732 (* (- 1) (* r r x x x))))
 (let ((?x1746 (* (- 2) (* r x x x))))
 (let ((?x1730 (* (- 1) (* x x x))))
 (let ((?x758 (* s s s)))
 (let ((?x504 (* r x)))
 (let ((?x1486 (* (- 1) ?x504)))
 (let ((?x300 (* r s)))
 (let ((?x1481 (* (- 1) x)))
 (let ((?x1357 (* (- 6) r)))
 (let ((?x438 (+ (- 3) ?x1357 ?x1481 ?x300 ?x1486 ?x758 ?x1730 ?x1746 ?x1732 ?x1749 ?x1555 ?x1754 ?x1757 ?x1760 ?x1763 ?x1766 ?x1769 (* (- 1) (* ?x1371 ?x1371 ?x1433 ?x1338 ?x1338)))))
 (let ((?x1652 (* (+ ?x235 s00 (* 3 (* r r)) (* (- 3) (* r00 r00))) ?x438)))
 (let ((?x1301 (* x00 x00)))
 (let ((?x1331 (* (- 108) ?x1301)))
 (let ((?x1139 (* s00 s00 s00)))
 (let ((?x1330 (* (- 16) ?x1139)))
 (let ((?x1011 (* s00 r00 r00 r00)))
 (let ((?x1326 (* (- 216) ?x1011)))
 (let ((?x837 (* r00 r00 r00 x00)))
 (let ((?x838 (* 432 ?x837)))
 (let ((?x760 (* s00 x00)))
 (let ((?x1084 (* 108 ?x760)))
 (let ((?x686 (* s00 s00 r00 r00)))
 (let ((?x687 (* 36 ?x686)))
 (let ((?x623 (* s00 s00 r00)))
 (let ((?x967 (* 108 ?x623)))
 (let ((?x602 (* s00 r00 r00)))
 (let ((?x955 (* 36 ?x602)))
 (let ((?x546 (* s00 s00)))
 (let ((?x1320 (* (- 51) ?x546)))
 (let ((?x520 (* s r00 r00)))
 (let ((?x819 (* (- 36) ?x520)))
 (let ((?x477 (* r00 x00)))
 (let ((?x1317 (* (- 108) ?x477)))
 (let ((?x468 (* s00 r00 x00)))
 (let ((?x1316 (* (- 216) ?x468)))
 (let ((?x381 (* s00 r00)))
 (let ((?x475 (* 54 ?x381)))
 (let ((?x942 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1332 (+ ?x143 ?x942 ?x475 ?x1316 ?x1317 (* (- 15) (* s s)) ?x819 ?x1320 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x955 ?x967 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x687 (* (- 108) (* s s00 r00)) (* 4 ?x758) ?x1084 (* 108 (* s x)) (* (- 108) (* x x)) ?x838 (* 12 (* s s s00)) ?x1326 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1330 (* 216 (* x x00)) ?x1331)))
 (let (($x1333 (= ?x1332 0)))
 (let ((?x832 (* r00 r00 x00)))
 (let ((?x845 (* (- 36) ?x832)))
 (let ((?x761 (* 6 ?x760)))
 (let ((?x651 (* (- 2) ?x623)))
 (let ((?x871 (* (- 15) ?x546)))
 (let ((?x500 (* s s)))
 (let ((?x524 (* 3 ?x500)))
 (let ((?x506 (* (- 54) ?x477)))
 (let ((?x519 (* 24 ?x381)))
 (let ((?x1034 (+ ?x143 ?x942 (* (- 24) ?x300) (* 24 (* r s00)) ?x519 ?x506 ?x524 (* 54 ?x504) (* 36 (* r x r00)) ?x819 ?x871 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x955 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x651 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x761 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x845 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1039 (= ?x1034 0)))
 (let ((?x603 (* 6 ?x602)))
 (let ((?x559 (* (- 4) ?x546)))
 (let ((?x501 (* 2 ?x500)))
 (let ((?x491 (* (- 18) ?x477)))
 (let ((?x496 (* 9 ?x381)))
 (let ((?x333 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x700 (+ ?x47 ?x333 (* (- 9) ?x300) (* 9 (* r s00)) ?x496 ?x491 ?x501 (* 18 ?x504) (* 6 (* r s r00)) (* (- 6) ?x520) ?x559 (* 18 (* x r00)) ?x603 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x707 (= ?x700 0)))
 (let ((?x424 (* r00 r00 r00)))
 (let ((?x425 (* 12 ?x424)))
 (let ((?x459 (* (- 6) ?x381)))
 (let ((?x456 (* (- 6) x00)))
 (let ((?x455 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x460 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x455 ?x456 (* 2 ?x300) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x459 ?x425)))
 (let (($x461 (= ?x460 0)))
 (let ((?x256 (* r00 r00)))
 (let ((?x257 (* 3 ?x256)))
 (let ((?x286 (* (- 1) s00)))
 (let (($x289 (= (+ s ?x286 (* (- 3) (* r r)) ?x257) 0)))
 (let (($x949 (and $x289 $x461 $x707 $x1039 $x1333 (not (= ?x1652 0)))))
 (let ((?x875 (+ 3 s ?x211)))
 (let ((?x1701 (+ x ?x235)))
 (let ((?x807 (+ (- 3) (* (- 1) (* ?x1371 ?x1371 ?x1701 ?x875 ?x875)) ?x235 ?x1357 (* (- 1) (* ?x1371 ?x1701)) (* (- 1) (* ?x1371 ?x1371 ?x1701 ?x1701 ?x1701)))))
 (let ((?x339 (* (+ (- 3) s00 ?x235 ?x1357 (* 3 (* ?x1371 ?x1371)) (* (- 3) ?x256)) ?x807)))
 (let ((?x574 (* 108 ?x1301)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1006 (* 51 ?x546)))
 (let ((?x525 (* 16 ?x1139)))
 (let ((?x791 (* (- 108) ?x760)))
 (let ((?x695 (* (- 432) ?x837)))
 (let ((?x674 (* 108 ?x477)))
 (let ((?x610 (+ (* 216 (* r00 s00 x00)) ?x674 (* (- 54) (* r00 s00)) (* 15 ?x500) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) ?x758) (* 108 (* x x)) ?x695 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x791 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x525 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1006 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x574)))
 (let ((?x1063 (+ (* (- 24) (* s r)) ?x506 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x524 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x761 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x845 ?x871 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x942 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1581 (+ (* (- 9) (* s r)) ?x491 (* 9 (* r00 s00)) ?x501 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x559 (* 18 (* r00 x)) ?x333 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x304 (* (- 3) r)))
 (let ((?x1169 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x304 ?x333 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x424))))
 (let (($x596 (and (= (+ s00 ?x235 (* 3 (* r r)) (* (- 3) ?x256)) 0) (= ?x1169 0) (= ?x1581 0) (= ?x1063 0) (= ?x610 0) (not (= ?x339 0)))))
 (rewrite (= $x596 $x949)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x232 (exists ((r Int) (s Int) (x Int) )(! (let ((?x220 (- x s)))
 (let ((?x215 (+ r 1)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x226 (- (- (- (* (- 1) ?x215 ?x215 ?x212 ?x212 ?x220) ?x212) (* ?x215 ?x220)) (* ?x215 ?x215 ?x220 ?x220 ?x220))))
 (let ((?x227 (* (- (+ (- s00 ?x212) (* 3 ?x215 ?x215)) (* 3 r00 r00)) ?x226)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x227 0)))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x412 (lambda ((r Int) (s Int) (x Int) )(let ((?x235 (* (- 1) s)))
 (let ((?x1701 (+ x ?x235)))
 (let ((?x1371 (+ 1 r)))
 (let ((?x1357 (* (- 6) r)))
 (let ((?x211 (* 6 r)))
 (let ((?x875 (+ 3 s ?x211)))
 (let ((?x807 (+ (- 3) (* (- 1) (* ?x1371 ?x1371 ?x1701 ?x875 ?x875)) ?x235 ?x1357 (* (- 1) (* ?x1371 ?x1701)) (* (- 1) (* ?x1371 ?x1371 ?x1701 ?x1701 ?x1701)))))
 (let ((?x256 (* r00 r00)))
 (let ((?x270 (* (- 3) ?x256)))
 (let (($x1533 (= (* (+ (- 3) s00 ?x235 ?x1357 (* 3 (* ?x1371 ?x1371)) ?x270) ?x807) 0)))
 (let ((?x1301 (* x00 x00)))
 (let ((?x574 (* 108 ?x1301)))
 (let ((?x137 (* 9 s00)))
 (let ((?x546 (* s00 s00)))
 (let ((?x1006 (* 51 ?x546)))
 (let ((?x1139 (* s00 s00 s00)))
 (let ((?x525 (* 16 ?x1139)))
 (let ((?x760 (* s00 x00)))
 (let ((?x791 (* (- 108) ?x760)))
 (let ((?x837 (* r00 r00 r00 x00)))
 (let ((?x695 (* (- 432) ?x837)))
 (let ((?x477 (* r00 x00)))
 (let ((?x674 (* 108 ?x477)))
 (let ((?x610 (+ (* 216 (* r00 s00 x00)) ?x674 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x695 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x791 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x525 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1006 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x574)))
 (let ((?x143 (* 9 s)))
 (let ((?x942 (* (- 9) s00)))
 (let ((?x871 (* (- 15) ?x546)))
 (let ((?x832 (* r00 r00 x00)))
 (let ((?x845 (* (- 36) ?x832)))
 (let ((?x761 (* 6 ?x760)))
 (let ((?x500 (* s s)))
 (let ((?x524 (* 3 ?x500)))
 (let ((?x506 (* (- 54) ?x477)))
 (let ((?x1063 (+ (* (- 24) (* s r)) ?x506 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x524 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x761 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x845 ?x871 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x942 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x333 (* (- 3) s00)))
 (let ((?x559 (* (- 4) ?x546)))
 (let ((?x501 (* 2 ?x500)))
 (let ((?x491 (* (- 18) ?x477)))
 (let ((?x1581 (+ (* (- 9) (* s r)) ?x491 (* 9 (* r00 s00)) ?x501 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x559 (* 18 (* r00 x)) ?x333 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x304 (* (- 3) r)))
 (let ((?x1169 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x304 ?x333 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x596 (and (= (+ s00 ?x235 (* 3 (* r r)) ?x270) 0) (= ?x1169 0) (= ?x1581 0) (= ?x1063 0) (= ?x610 0) (not $x1533))))
 (let ((?x220 (- x s)))
 (let ((?x215 (+ r 1)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x226 (- (- (- (* (- 1) ?x215 ?x215 ?x212 ?x212 ?x220) ?x212) (* ?x215 ?x220)) (* ?x215 ?x215 ?x220 ?x220 ?x220))))
 (let ((?x227 (* (- (+ (- s00 ?x212) (* 3 ?x215 ?x215)) (* 3 r00 r00)) ?x226)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x231 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x227 0))))))
 (rewrite (= $x231 $x596)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x233 (asserted $x232)))
 (let ((@x624 (mp (mp @x233 (quant-intro (proof-bind ?x412) (= $x232 $x342)) $x342) (rewrite (= $x342 $x342)) $x342)))
 (let ((@x1398 (mp~ (mp @x624 (quant-intro (proof-bind ?x950) (= $x342 $x271)) $x271) (sk (~ $x271 $x1079)) $x1079)))
 (let ((@x1574 (mp @x1398 (rewrite (= $x1079 $x494)) $x494)))
 (let ((@x1573 (and-elim @x1574 $x1551)))
 (let ((@x985 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1551) $x1460)) @x1573 $x1460)))
 (let (($x1458 (>= ?x873 0)))
 (let ((@x1584 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1551) $x1458)) @x1573 $x1458)))
 (let (($x1436 (not (<= ?x557 0))))
 (let (($x1167 (>= ?x557 0)))
 (let ((@x1224 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x258 $x1436 (not $x1167))) (and-elim @x1574 $x552) (or $x1436 (not $x1167)))))
 (let ((@x1229 (unit-resolution @x1224 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1167)) @x1584 @x985 false) $x1167) $x1436)))
 ((_ th-lemma arith farkas 1 1 1) @x1229 @x1584 @x985 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        9
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-num-rows            9
 :arith-pseudo-nonlinear    2
 :arith-tableau-max-columns 107
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                17
 :max-memory                19.84
 :memory                    19.26
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                595990
 :num-checks                1
 :propagations              12
 :rlimit-count              6691
 :time                      0.01
 :total-time                0.02)
