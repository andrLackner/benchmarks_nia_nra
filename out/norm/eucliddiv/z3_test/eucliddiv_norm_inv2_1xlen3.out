unsat
((set-logic NIA)
(declare-fun q!2 () Int)
(declare-fun r!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x76 (* y00 q00)))
 (let ((?x1381 (+ r00 ?x76 (* (- 1) r!1) (* (- 1) (* y00 q!2)))))
 (let (($x730 (<= ?x1381 0)))
 (let (($x1457 (= ?x1381 0)))
 (let ((?x1673 (* y00 y00 y00 y00 r00)))
 (let ((?x1581 (* (- 1) (* y00 r00))))
 (let ((?x1144 (* (- 1) (* y00 y00 q00))))
 (let ((?x756 (* (- 1) (* q!2 q!2 q!2 r!1 r!1))))
 (let ((?x921 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x714 (* (- 3) (* q!2 r!1 r!1))))
 (let ((?x711 (* (- 3) (* q!2 q!2 r!1 r!1))))
 (let ((?x753 (* (- 1) (* r!1 r!1))))
 (let ((?x626 (* y00 y00 y00 y00 q00)))
 (let ((?x433 (* y00 y00 y00 r00)))
 (let ((?x222 (* q!2 r!1 r!1 r!1 r!1)))
 (let ((?x220 (* r!1 r!1 r!1 r!1)))
 (let ((?x2020 (+ (* y00 q00 q!2 q!2 q!2 r!1) (* (- 3) (* y00 y00 q00 q!2)) (* (- 1) (* y00 y00 q!2 r!1 r!1 r!1)) (* (- 1) (* y00 y00 q00 q!2 q!2 q!2)) (* (- 1) (* y00 y00 r!1 r!1 r!1)) (* (- 2) (* y00 q!2 r!1 r!1 r!1)) (* 3 (* y00 y00 r!1 r!1)) ?x220 ?x222 (* y00 y00 y00 r00 q!2) (* (- 3) (* y00 y00 y00 q00 r!1)) (* r00 r!1) (* (- 3) (* y00 y00 r00 r!1)) ?x433 (* y00 y00 r00 r!1 r!1) (* (- 3) (* y00 r00 q!2)) (* (- 3) (* y00 y00 q00 q!2 q!2)) (* 3 (* y00 q00 q!2 r!1)) (* (- 3) (* y00 r!1 r!1 r!1)) ?x626 ?x753 ?x711 ?x714 (* y00 y00 y00 q!2 r!1 r!1) (* (- 1) (* y00 y00 y00 q!2 q!2 r!1 r!1)) (* (- 1) (* y00 y00 y00 y00 r!1)) (* 2 (* y00 y00 y00 r!1 r!1)) ?x921 (* (- 1) (* r00 q!2 r!1 r!1 r!1)) (* (- 1) (* y00 y00 y00 r!1)) ?x756 (* 2 (* y00 y00 y00 q!2 r!1)) ?x1144 (* 3 (* r00 q!2 q!2 r!1)) (* r00 q!2 q!2 q!2 r!1) (* y00 q00 r!1) (* (- 1) (* y00 y00 y00 y00 y00 q!2)) (* 3 (* y00 q00 q!2 q!2 r!1)) (* (- 1) (* y00 y00 y00 y00 y00 q!2 q!2)) (* y00 y00 r00 q!2 r!1 r!1) (* y00 y00 y00 y00 q00 q!2) (* 2 (* y00 q!2 r!1)) (* (- 3) (* y00 y00 r00 q!2 r!1)) (* y00 r!1) (* (- 1) (* y00 q!2 q!2 q!2 q!2 r!1)) ?x1581 (* y00 y00 q!2) (* 3 (* y00 y00 q!2 q!2)) (* y00 y00 q!2 q!2 q!2 q!2) (* y00 y00 y00 q00 q!2 r!1 r!1) (* (- 2) (* y00 y00 y00 y00 q00 r!1)) (* (- 2) (* y00 y00 y00 y00 q00 q!2 r!1)) (* y00 y00 y00 y00 y00 q00 q!2) (* (- 1) (* y00 q00 r!1 r!1 r!1)) (* (- 1) (* y00 q00 q!2 r!1 r!1 r!1)) (* 3 (* y00 y00 q00 r!1 r!1)) (* 3 (* y00 y00 q!2 q!2 q!2)) (* y00 y00 y00 q00 r!1 r!1) (* (- 2) (* y00 q!2 q!2 q!2 r!1)) ?x1673 (* 3 (* y00 y00 q00 q!2 r!1 r!1)) (* y00 y00 y00 y00 q!2 r!1) (* 2 (* y00 y00 y00 y00 q!2 q!2 r!1)) (* (- 3) (* y00 y00 y00 q00 q!2 r!1)) (* 3 (* y00 r00 r!1 r!1)) (* 3 (* y00 r00 q!2 r!1 r!1)) (* (- 2) (* y00 y00 y00 r00 r!1)) (* (- 2) (* y00 y00 y00 r00 q!2 r!1)) (* y00 y00 y00 y00 r00 q!2) (* y00 q!2 q!2 r!1 r!1 r!1) (* (- 3) (* y00 y00 q!2 q!2 r!1 r!1)) (* 3 (* y00 y00 y00 q!2 q!2 r!1)) (* (- 1) (* y00 y00 y00 y00 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 q!2)) (* (- 1) (* r00 r!1 r!1 r!1)) (* (- 3) (* y00 r00 q!2 q!2)) (* (- 1) (* y00 r00 q!2 q!2 q!2)) (* 3 (* r00 q!2 r!1)))))
 (let (($x2026 (= ?x2020 0)))
 (let (($x1019 (not $x2026)))
 (let ((?x1083 (+ y00 (* (- 1) y!0))))
 (let (($x789 (= ?x1083 0)))
 (let (($x1964 (and $x789 $x1457 $x1019)))
 (let ((?x779 (+ ?x220 ?x222 (* (- 3) (* r!1 r!1 r!1 y00)) (* (- 2) (* q!2 r!1 r!1 r!1 y00)) (* 3 (* r!1 r!1 y00 y00)) (* (- 1) (* r!1 y00 y00 y00)) (* 2 (* q!2 r!1 y00 y00 y00)) (* (- 1) (* q!2 y00 y00 y00 y00)) (* (- 1) (* r!1 r!1 r!1 r00)) (* (- 1) (* q!2 r!1 r!1 r!1 r00)) (* 3 (* r!1 r!1 y00 r00)) (* 3 (* q!2 r!1 r!1 y00 r00)) (* (- 3) (* r!1 y00 y00 r00)) (* (- 3) (* q!2 r!1 y00 y00 r00)) ?x433 (* q!2 y00 y00 y00 r00) (* (- 1) (* r!1 r!1 r!1 y00 q00)) (* (- 1) (* q!2 r!1 r!1 r!1 y00 q00)) (* 3 (* r!1 r!1 y00 y00 q00)) (* 3 (* q!2 r!1 r!1 y00 y00 q00)) (* (- 3) (* r!1 y00 y00 y00 q00)) (* (- 3) (* q!2 r!1 y00 y00 y00 q00)) ?x626 (* q!2 y00 y00 y00 y00 q00) (* r!1 y00) (* 2 (* q!2 r!1 y00)) (* (- 2) (* q!2 q!2 q!2 r!1 y00)) (* (- 1) (* q!2 q!2 q!2 q!2 r!1 y00)) (* q!2 y00 y00) (* 3 (* q!2 q!2 y00 y00)) (* 3 (* q!2 q!2 q!2 y00 y00)) (* q!2 q!2 q!2 q!2 y00 y00) (* r!1 r!1 y00 y00 y00 q00) (* q!2 r!1 r!1 y00 y00 y00 q00) (* (- 2) (* r!1 y00 y00 y00 y00 q00)) (* (- 2) (* q!2 r!1 y00 y00 y00 y00 q00)) ?x921 (* q!2 y00 y00 y00 y00 y00 q00) (* 2 (* r!1 r!1 y00 y00 y00)) (* q!2 r!1 r!1 y00 y00 y00) (* (- 1) (* q!2 q!2 r!1 r!1 y00 y00 y00)) (* (- 1) (* r!1 y00 y00 y00 y00)) (* q!2 r!1 y00 y00 y00 y00) (* 2 (* q!2 q!2 r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 y00 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 y00 y00 y00 y00 y00)) (* r!1 y00 q00) (* 3 (* q!2 r!1 y00 q00)) (* 3 (* q!2 q!2 r!1 y00 q00)) (* q!2 q!2 q!2 r!1 y00 q00) ?x1144 (* (- 3) (* q!2 y00 y00 q00)) (* (- 3) (* q!2 q!2 y00 y00 q00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 q00)) (* (- 1) (* r!1 r!1 r!1 y00 y00)) (* (- 1) (* q!2 r!1 r!1 r!1 y00 y00)) ?x753 ?x714 ?x711 ?x756 (* r!1 r00) (* 3 (* q!2 r!1 r00)) (* 3 (* q!2 q!2 r!1 r00)) (* q!2 q!2 q!2 r!1 r00) ?x1581 (* (- 3) (* q!2 y00 r00)) (* (- 3) (* q!2 q!2 y00 r00)) (* (- 1) (* q!2 q!2 q!2 y00 r00)) (* r!1 r!1 y00 y00 r00) (* q!2 r!1 r!1 y00 y00 r00) (* (- 2) (* r!1 y00 y00 y00 r00)) (* (- 2) (* q!2 r!1 y00 y00 y00 r00)) ?x1673 (* q!2 y00 y00 y00 y00 r00) (* q!2 q!2 r!1 r!1 r!1 y00) (* (- 3) (* q!2 q!2 r!1 r!1 y00 y00)) (* 3 (* q!2 q!2 r!1 y00 y00 y00)) (* (- 1) (* q!2 q!2 y00 y00 y00 y00)))))
 (let (($x781 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x76)) 0) (not (= ?x779 0)))))
 (let (($x89 (exists ((q Int) (r Int) (y Int) )(! (let ((?x1673 (* y00 y00 y00 y00 r00)))
 (let ((?x1581 (* (- 1) (* y00 r00))))
 (let ((?x1144 (* (- 1) (* y00 y00 q00))))
 (let ((?x921 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x626 (* y00 y00 y00 y00 q00)))
 (let ((?x433 (* y00 y00 y00 r00)))
 (let ((?x1889 (+ (* r r r r) (* q r r r r) (* (- 3) (* r r r y00)) (* (- 2) (* q r r r y00)) (* 3 (* r r y00 y00)) (* (- 1) (* r y00 y00 y00)) (* 2 (* q r y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00)) (* (- 1) (* r r r r00)) (* (- 1) (* q r r r r00)) (* 3 (* r r y00 r00)) (* 3 (* q r r y00 r00)) (* (- 3) (* r y00 y00 r00)) (* (- 3) (* q r y00 y00 r00)) ?x433 (* q y00 y00 y00 r00) (* (- 1) (* r r r y00 q00)) (* (- 1) (* q r r r y00 q00)) (* 3 (* r r y00 y00 q00)) (* 3 (* q r r y00 y00 q00)) (* (- 3) (* r y00 y00 y00 q00)) (* (- 3) (* q r y00 y00 y00 q00)) ?x626 (* q y00 y00 y00 y00 q00) (* r y00) (* 2 (* q r y00)) (* (- 2) (* q q q r y00)) (* (- 1) (* q q q q r y00)) (* q y00 y00) (* 3 (* q q y00 y00)) (* 3 (* q q q y00 y00)) (* q q q q y00 y00) (* r r y00 y00 y00 q00) (* q r r y00 y00 y00 q00) (* (- 2) (* r y00 y00 y00 y00 q00)) (* (- 2) (* q r y00 y00 y00 y00 q00)) ?x921 (* q y00 y00 y00 y00 y00 q00) (* 2 (* r r y00 y00 y00)) (* q r r y00 y00 y00) (* (- 1) (* q q r r y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00)) (* q r y00 y00 y00 y00) (* 2 (* q q r y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00 y00)) (* (- 1) (* q q y00 y00 y00 y00 y00)) (* r y00 q00) (* 3 (* q r y00 q00)) (* 3 (* q q r y00 q00)) (* q q q r y00 q00) ?x1144 (* (- 3) (* q y00 y00 q00)) (* (- 3) (* q q y00 y00 q00)) (* (- 1) (* q q q y00 y00 q00)) (* (- 1) (* r r r y00 y00)) (* (- 1) (* q r r r y00 y00)) (* (- 1) (* r r)) (* (- 3) (* q r r)) (* (- 3) (* q q r r)) (* (- 1) (* q q q r r)) (* r r00) (* 3 (* q r r00)) (* 3 (* q q r r00)) (* q q q r r00) ?x1581 (* (- 3) (* q y00 r00)) (* (- 3) (* q q y00 r00)) (* (- 1) (* q q q y00 r00)) (* r r y00 y00 r00) (* q r r y00 y00 r00) (* (- 2) (* r y00 y00 y00 r00)) (* (- 2) (* q r y00 y00 y00 r00)) ?x1673 (* q y00 y00 y00 y00 r00) (* q q r r r y00) (* (- 3) (* q q r r y00 y00)) (* 3 (* q q r y00 y00 y00)) (* (- 1) (* q q y00 y00 y00 y00)))))
 (let (($x106 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (and (= (+ y (* (- 1) y00)) 0) $x106 (not (= ?x1889 0))))))))))) :qid k!29))
 ))
 (let (($x1521 (exists ((q Int) (r Int) (y Int) )(! (let ((?x74 (* (- 1) y00)))
 (let ((?x1514 (+ r ?x74)))
 (let ((?x710 (+ 1 q)))
 (let ((?x1202 (+ (* ?x710 ?x1514 ?x1514 ?x1514 ?x1514) (* (- 1) (* r00 ?x710 ?x1514 ?x1514 ?x1514)) (* (- 1) (* q00 y00 ?x710 ?x1514 ?x1514 ?x1514)) (* (- 1) (* y00 ?x710 ?x710 ?x710 ?x710 ?x1514)) (* q00 y00 y00 y00 ?x710 ?x1514 ?x1514) (* (- 1) (* y00 y00 y00 ?x710 ?x710 ?x1514 ?x1514)) (* q00 y00 ?x710 ?x710 ?x710 ?x1514) (* (- 1) (* y00 y00 ?x710 ?x1514 ?x1514 ?x1514)) (* (- 1) (* ?x710 ?x710 ?x710 ?x1514 ?x1514)) (* r00 ?x710 ?x710 ?x710 ?x1514) (* r00 y00 y00 ?x710 ?x1514 ?x1514) (* y00 ?x710 ?x710 ?x1514 ?x1514 ?x1514))))
 (let (($x985 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x74 y) 0) $x985 (not (= ?x1202 0)))))))) :qid k!29))
 ))
 (let ((?x553 (lambda ((q Int) (r Int) (y Int) )(let ((?x1673 (* y00 y00 y00 y00 r00)))
 (let ((?x1581 (* (- 1) (* y00 r00))))
 (let ((?x1144 (* (- 1) (* y00 y00 q00))))
 (let ((?x921 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x626 (* y00 y00 y00 y00 q00)))
 (let ((?x433 (* y00 y00 y00 r00)))
 (let ((?x1889 (+ (* r r r r) (* q r r r r) (* (- 3) (* r r r y00)) (* (- 2) (* q r r r y00)) (* 3 (* r r y00 y00)) (* (- 1) (* r y00 y00 y00)) (* 2 (* q r y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00)) (* (- 1) (* r r r r00)) (* (- 1) (* q r r r r00)) (* 3 (* r r y00 r00)) (* 3 (* q r r y00 r00)) (* (- 3) (* r y00 y00 r00)) (* (- 3) (* q r y00 y00 r00)) ?x433 (* q y00 y00 y00 r00) (* (- 1) (* r r r y00 q00)) (* (- 1) (* q r r r y00 q00)) (* 3 (* r r y00 y00 q00)) (* 3 (* q r r y00 y00 q00)) (* (- 3) (* r y00 y00 y00 q00)) (* (- 3) (* q r y00 y00 y00 q00)) ?x626 (* q y00 y00 y00 y00 q00) (* r y00) (* 2 (* q r y00)) (* (- 2) (* q q q r y00)) (* (- 1) (* q q q q r y00)) (* q y00 y00) (* 3 (* q q y00 y00)) (* 3 (* q q q y00 y00)) (* q q q q y00 y00) (* r r y00 y00 y00 q00) (* q r r y00 y00 y00 q00) (* (- 2) (* r y00 y00 y00 y00 q00)) (* (- 2) (* q r y00 y00 y00 y00 q00)) ?x921 (* q y00 y00 y00 y00 y00 q00) (* 2 (* r r y00 y00 y00)) (* q r r y00 y00 y00) (* (- 1) (* q q r r y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00)) (* q r y00 y00 y00 y00) (* 2 (* q q r y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00 y00)) (* (- 1) (* q q y00 y00 y00 y00 y00)) (* r y00 q00) (* 3 (* q r y00 q00)) (* 3 (* q q r y00 q00)) (* q q q r y00 q00) ?x1144 (* (- 3) (* q y00 y00 q00)) (* (- 3) (* q q y00 y00 q00)) (* (- 1) (* q q q y00 y00 q00)) (* (- 1) (* r r r y00 y00)) (* (- 1) (* q r r r y00 y00)) (* (- 1) (* r r)) (* (- 3) (* q r r)) (* (- 3) (* q q r r)) (* (- 1) (* q q q r r)) (* r r00) (* 3 (* q r r00)) (* 3 (* q q r r00)) (* q q q r r00) ?x1581 (* (- 3) (* q y00 r00)) (* (- 3) (* q q y00 r00)) (* (- 1) (* q q q y00 r00)) (* r r y00 y00 r00) (* q r r y00 y00 r00) (* (- 2) (* r y00 y00 y00 r00)) (* (- 2) (* q r y00 y00 y00 r00)) ?x1673 (* q y00 y00 y00 y00 r00) (* q q r r r y00) (* (- 3) (* q q r r y00 y00)) (* 3 (* q q r y00 y00 y00)) (* (- 1) (* q q y00 y00 y00 y00)))))
 (let (($x106 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x340 (and (= (+ y (* (- 1) y00)) 0) $x106 (not (= ?x1889 0)))))
 (let ((?x74 (* (- 1) y00)))
 (let ((?x1514 (+ r ?x74)))
 (let ((?x710 (+ 1 q)))
 (let ((?x1202 (+ (* ?x710 ?x1514 ?x1514 ?x1514 ?x1514) (* (- 1) (* r00 ?x710 ?x1514 ?x1514 ?x1514)) (* (- 1) (* q00 y00 ?x710 ?x1514 ?x1514 ?x1514)) (* (- 1) (* y00 ?x710 ?x710 ?x710 ?x710 ?x1514)) (* q00 y00 y00 y00 ?x710 ?x1514 ?x1514) (* (- 1) (* y00 y00 y00 ?x710 ?x710 ?x1514 ?x1514)) (* q00 y00 ?x710 ?x710 ?x710 ?x1514) (* (- 1) (* y00 y00 ?x710 ?x1514 ?x1514 ?x1514)) (* (- 1) (* ?x710 ?x710 ?x710 ?x1514 ?x1514)) (* r00 ?x710 ?x710 ?x710 ?x1514) (* r00 y00 y00 ?x710 ?x1514 ?x1514) (* y00 ?x710 ?x710 ?x1514 ?x1514 ?x1514))))
 (let (($x985 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1829 (and (= (+ ?x74 y) 0) $x985 (not (= ?x1202 0)))))
 (rewrite (= $x1829 $x340))))))))))))))))))
 ))
 (let (($x69 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x49 (- (- (* ?x42 ?x43 ?x43 ?x43 ?x43) (* ?x42 ?x43 ?x43 ?x43 r00)) (* ?x42 q00 ?x43 ?x43 ?x43 y00))))
 (let ((?x52 (+ (- ?x49 (* ?x42 ?x42 ?x42 ?x42 ?x43 y00)) (* ?x42 q00 ?x43 ?x43 y00 y00 y00))))
 (let ((?x56 (+ (- ?x52 (* ?x42 ?x42 ?x43 ?x43 y00 y00 y00)) (* ?x42 ?x42 ?x42 q00 ?x43 y00))))
 (let ((?x60 (- (- ?x56 (* ?x42 ?x43 ?x43 ?x43 y00 y00)) (* ?x42 ?x42 ?x42 ?x43 ?x43))))
 (let ((?x64 (+ ?x60 (* ?x42 ?x42 ?x42 ?x43 r00) (* ?x42 ?x43 ?x43 r00 y00 y00) (* ?x42 ?x42 ?x43 ?x43 ?x43 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x64 0))))))))))) :qid k!29))
 ))
 (let ((?x1524 (lambda ((q Int) (r Int) (y Int) )(let ((?x74 (* (- 1) y00)))
 (let ((?x1514 (+ r ?x74)))
 (let ((?x710 (+ 1 q)))
 (let ((?x1202 (+ (* ?x710 ?x1514 ?x1514 ?x1514 ?x1514) (* (- 1) (* r00 ?x710 ?x1514 ?x1514 ?x1514)) (* (- 1) (* q00 y00 ?x710 ?x1514 ?x1514 ?x1514)) (* (- 1) (* y00 ?x710 ?x710 ?x710 ?x710 ?x1514)) (* q00 y00 y00 y00 ?x710 ?x1514 ?x1514) (* (- 1) (* y00 y00 y00 ?x710 ?x710 ?x1514 ?x1514)) (* q00 y00 ?x710 ?x710 ?x710 ?x1514) (* (- 1) (* y00 y00 ?x710 ?x1514 ?x1514 ?x1514)) (* (- 1) (* ?x710 ?x710 ?x710 ?x1514 ?x1514)) (* r00 ?x710 ?x710 ?x710 ?x1514) (* r00 y00 y00 ?x710 ?x1514 ?x1514) (* y00 ?x710 ?x710 ?x1514 ?x1514 ?x1514))))
 (let (($x985 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1829 (and (= (+ ?x74 y) 0) $x985 (not (= ?x1202 0)))))
 (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x49 (- (- (* ?x42 ?x43 ?x43 ?x43 ?x43) (* ?x42 ?x43 ?x43 ?x43 r00)) (* ?x42 q00 ?x43 ?x43 ?x43 y00))))
 (let ((?x52 (+ (- ?x49 (* ?x42 ?x42 ?x42 ?x42 ?x43 y00)) (* ?x42 q00 ?x43 ?x43 y00 y00 y00))))
 (let ((?x56 (+ (- ?x52 (* ?x42 ?x42 ?x43 ?x43 y00 y00 y00)) (* ?x42 ?x42 ?x42 q00 ?x43 y00))))
 (let ((?x60 (- (- ?x56 (* ?x42 ?x43 ?x43 ?x43 y00 y00)) (* ?x42 ?x42 ?x42 ?x43 ?x43))))
 (let ((?x64 (+ ?x60 (* ?x42 ?x42 ?x42 ?x43 r00) (* ?x42 ?x43 ?x43 r00 y00 y00) (* ?x42 ?x42 ?x43 ?x43 ?x43 y00))))
 (let (($x68 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x64 0))))))
 (rewrite (= $x68 $x1829)))))))))))))))))
 ))
 (let ((@x70 (asserted $x69)))
 (let ((@x1167 (mp (mp @x70 (quant-intro (proof-bind ?x1524) (= $x69 $x1521)) $x1521) (rewrite (= $x1521 $x1521)) $x1521)))
 (let ((@x723 (mp~ (mp @x1167 (quant-intro (proof-bind ?x553) (= $x1521 $x89)) $x89) (sk (~ $x89 $x781)) $x781)))
 (let ((@x1023 (mp @x723 (rewrite (= $x781 $x1964)) $x1964)))
 (let ((@x729 (and-elim @x1023 $x1457)))
 (let ((@x1110 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1457) $x730)) @x729 $x730)))
 (let (($x799 (>= ?x1381 0)))
 (let ((@x491 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1457) $x799)) @x729 $x799)))
 (let (($x797 (<= ?x1083 0)))
 (let ((@x2021 (and-elim @x1023 $x789)))
 (let ((@x1554 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x789) $x797)) @x2021 $x797)))
 (let (($x798 (>= ?x1083 0)))
 (let ((@x1353 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x789) $x798)) @x2021 $x798)))
 (let (($x1599 (not (<= ?x2020 0))))
 (let (($x801 (>= ?x2020 0)))
 (let ((@x362 (lemma ((_ th-lemma arith) (hypothesis (not $x801)) @x1353 @x1554 @x491 @x1110 false) $x801)))
 (let ((@x2047 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2026 $x1599 (not $x801))) (and-elim @x1023 $x1019) (or $x1599 (not $x801)))))
 ((_ th-lemma arith) (unit-resolution @x2047 @x362 $x1599) @x1353 @x1554 @x491 @x1110 false)))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        20
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-grobner             2
 :arith-max-min             664
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-pivots              4
 :arith-tableau-max-columns 95
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                19.81
 :memory                    19.29
 :mk-bool-var               9
 :mk-clause                 10
 :num-allocs                572434
 :num-checks                1
 :propagations              6
 :rlimit-count              8797
 :time                      0.01
 :total-time                0.03)
