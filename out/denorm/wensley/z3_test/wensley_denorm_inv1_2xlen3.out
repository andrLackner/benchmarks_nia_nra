unsat
((set-logic NRA)
(declare-fun y!5 () Real)
(declare-fun a!8 () Real)
(declare-fun b!7 () Real)
(declare-fun d!6 () Real)
(proof
(let ((?x355 (* 2.0 (* b00 y!5))))
 (let ((?x316 (* (- 1.0) (* d00 a!8))))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let ((?x936 (+ ?x30 ?x94 ?x316 ?x355)))
 (let (($x832 (>= ?x936 0.0)))
 (let (($x633 (= 0.0 ?x936)))
 (let ((@x363 (symm (commutativity (= $x633 (= ?x936 0.0))) (= (= ?x936 0.0) $x633))))
 (let (($x945 (= ?x936 0.0)))
 (let ((?x1105 (* (- 2.0) (* y!5 b!7))))
 (let ((?x972 (* d!6 a!8)))
 (let (($x435 (= (+ (* 2.0 (* y00 b!7)) (* (- 1.0) (* a00 d!6)) ?x972 ?x1105) 0.0)))
 (let ((?x452 (* d00 b!7)))
 (let ((?x520 (+ ?x452 (* (- 1.0) (* b00 d!6)))))
 (let (($x512 (= ?x520 0.0)))
 (let ((?x1034 (* (/ 1.0 32.0) (* d!6 d!6 b!7 b!7 b!7 b!7 b!7))))
 (let ((?x108 (* (/ 1.0 8.0) (* d!6 d!6 y!5 y!5 y!5 a!8 a!8 b!7))))
 (let ((?x864 (* (/ 1.0 32.0) (* d!6 d!6 a!8 a!8 b!7 b!7 b!7))))
 (let ((?x1130 (* (/ 3.0 256.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7))))
 (let ((?x488 (+ (* (/ 11.0 64.0) (* d!6 d!6 d!6 y!5 y!5 b!7 b!7 b!7)) ?x1130 (* (/ 1.0 8.0) (* d!6 d!6 y!5 y!5 y!5 b!7 b!7 b!7)) (* (/ 3.0 16.0) (* d!6 d!6 d!6 d!6 y!5 a!8 b!7 b!7)) (* (/ 1.0 4.0) (* d!6 d!6 y!5 y!5 y!5 a!8 b!7 b!7)) (* (/ 3.0 8.0) (* d!6 d!6 d!6 y!5 y!5 a!8 b!7 b!7)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 d!6 a!8 a!8 b!7)) (* (/ 3.0 32.0) (* d!6 d!6 d!6 d!6 y!5 a!8 a!8 b!7)) ?x864 ?x108 (* (/ 1.0 32.0) (* d!6 d!6 d!6 d!6 d!6 a!8 b!7 b!7)) (* (/ 5.0 64.0) (* d!6 d!6 d!6 d!6 y!5 b!7 b!7 b!7)) (* (/ 1.0 16.0) (* d!6 d!6 a!8 b!7 b!7 b!7 b!7)) ?x1034 (* (/ 3.0 16.0) (* d!6 d!6 d!6 y!5 y!5 a!8 a!8 b!7)))))
 (let ((?x162 (* (- (/ 1.0 64.0)) (* d!6 d!6 d!6 d!6 b!7 b!7))))
 (let ((?x117 (* (- (/ 1.0 32.0)) (* d!6 d!6 d!6 b!7 b!7 b!7 b!7))))
 (let ((?x594 (* (- (/ 1.0 8.0)) (* d!6 d!6 d!6 y!5 y!5 a!8))))
 (let ((?x591 (* (- (/ 1.0 16.0)) (* d!6 d!6 y!5 y!5 b!7 b!7))))
 (let ((?x528 (* (- (/ 1.0 32.0)) (* d!6 d!6 d!6 d!6 d!6 b!7))))
 (let ((?x558 (* (- (/ 1.0 16.0)) (* d!6 d!6 y!5 a!8 a!8 b!7 b!7))))
 (let ((?x531 (* (- (/ 1.0 32.0)) (* d!6 d!6 d!6 d!6 d!6 a!8))))
 (let ((?x750 (+ (* (- (/ 1.0 16.0)) (* d!6 d!6 y!5 b!7 b!7 b!7 b!7)) (* (- (/ 1.0 8.0)) (* d!6 d!6 y!5 a!8 b!7 b!7 b!7)) (* (- (/ 1.0 8.0)) (* d!6 d!6 d!6 y!5 y!5 b!7)) ?x531 ?x558 ?x528 ?x591 ?x594 (* (- (/ 1.0 8.0)) (* d!6 d!6 d!6 d!6 y!5 a!8)) (* (- (/ 1.0 8.0)) (* d!6 d!6 d!6 d!6 y!5 b!7)) (* (- (/ 1.0 16.0)) (* d!6 d!6 d!6 a!8 b!7 b!7 b!7)) ?x117 (* (- (/ 1.0 32.0)) (* d!6 d!6 d!6 a!8 a!8 b!7 b!7)) (* (- (/ 1.0 16.0)) (* d!6 d!6 d!6 y!5 b!7 b!7)) ?x162)))
 (let ((?x455 (* ?x750 ?x488 (+ ?x30 ?x94 (* (- 1.0) ?x452) (* b00 d!6) ?x316 ?x355))))
 (let (($x510 (= ?x455 0.0)))
 (let (($x527 (not $x510)))
 (let ((?x812 (+ (* (- (/ 1.0 64.0)) (* d!6 d!6 d!6 y!5 y!5 b!7 b!7 b!7)) ?x864 ?x108)))
 (let ((?x837 (* (+ ?x558 ?x591 ?x594) ?x812 ?x936)))
 (let (($x910 (= ?x837 0.0)))
 (let (($x295 (not $x910)))
 (let (($x509 (or $x295 $x527)))
 (let (($x374 (and $x509 $x945 $x512 $x435)))
 (let (($x584 (= (+ ?x972 ?x1105 (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00))) 0.0)))
 (let ((?x1056 (* 2.0 (* y!5 b00))))
 (let ((?x1055 (* (- 1.0) (* a!8 d00))))
 (let ((?x1084 (+ ?x30 ?x1055 ?x94 ?x1056)))
 (let ((?x1040 (* (/ 1.0 8.0) (* y!5 y!5 y!5 d!6 d!6 b!7 a!8 a!8))))
 (let ((?x1079 (* (/ 1.0 32.0) (* d!6 d!6 b!7 b!7 b!7 a!8 a!8))))
 (let ((?x92 (+ (* (/ 11.0 64.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7)) ?x1079 ?x1040 (* (/ 5.0 64.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) ?x1130 ?x1034 (* (/ 1.0 16.0) (* d!6 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 8.0) (* y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 4.0) (* y!5 y!5 y!5 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 8.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 a!8 a!8)) (* (/ 3.0 16.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 32.0) (* y!5 d!6 d!6 d!6 d!6 b!7 a!8 a!8)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 a!8 a!8)))))
 (let ((?x698 (* (- (/ 1.0 16.0)) (* y!5 d!6 d!6 b!7 b!7 a!8 a!8))))
 (let ((?x1037 (* (- (/ 1.0 8.0)) (* y!5 y!5 d!6 d!6 d!6 a!8))))
 (let ((?x1039 (* (- (/ 1.0 16.0)) (* y!5 y!5 d!6 d!6 b!7 b!7))))
 (let ((?x810 (+ ?x1039 ?x1037 ?x698 (* (- (/ 1.0 8.0)) (* y!5 y!5 d!6 d!6 d!6 b!7)) (* (- (/ 1.0 8.0)) (* y!5 d!6 d!6 d!6 d!6 b!7)) (* (- (/ 1.0 8.0)) (* y!5 d!6 d!6 d!6 d!6 a!8)) ?x528 ?x531 (* (- (/ 1.0 16.0)) (* y!5 d!6 d!6 d!6 b!7 b!7)) ?x162 (* (- (/ 1.0 16.0)) (* y!5 d!6 d!6 b!7 b!7 b!7 b!7)) (* (- (/ 1.0 8.0)) (* y!5 d!6 d!6 b!7 b!7 b!7 a!8)) ?x117 (* (- (/ 1.0 16.0)) (* d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (- (/ 1.0 32.0)) (* d!6 d!6 d!6 b!7 b!7 a!8 a!8)))))
 (let ((?x377 (* ?x810 ?x92 (+ ?x30 ?x1055 ?x94 ?x1056 (* (- 1.0) (* b!7 d00)) (* d!6 b00)))))
 (let ((?x1054 (+ (* (- (/ 1.0 64.0)) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7)) ?x1079 ?x1040)))
 (let (($x366 (or (not (= (* (+ ?x1039 ?x1037 ?x698) ?x1054 ?x1084) 0.0)) (not (= ?x377 0.0)))))
 (let (($x578 (and $x366 (= ?x1084 0.0) (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) $x584)))
 (let (($x365 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x163 (* (- 2.0) (* y b))))
 (let ((?x147 (* d a)))
 (let (($x198 (= (+ ?x147 ?x163 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x136 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x100 (* 2.0 (* y b00))))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x33 (* a d00)))
 (let ((?x115 (* (- 1.0) ?x33)))
 (let ((?x30 (* a00 d00)))
 (let ((?x121 (+ ?x30 ?x115 ?x94 ?x100)))
 (let (($x126 (= ?x121 0.0)))
 (let ((?x220 (* (/ 1.0 8.0) (* y y y d d b a a))))
 (let ((?x204 (* (/ 1.0 32.0) (* d d b b b a a))))
 (let ((?x787 (+ (* (/ 11.0 64.0) (* y y d d d b b b)) ?x204 ?x220 (* (/ 5.0 64.0) (* y d d d d b b b)) (* (/ 3.0 256.0) (* d d d d d b b b)) (* (/ 1.0 32.0) (* d d b b b b b)) (* (/ 1.0 16.0) (* d d b b b b a)) (* (/ 1.0 8.0) (* y y y d d b b b)) (* (/ 1.0 4.0) (* y y y d d b b a)) (* (/ 3.0 8.0) (* y y d d d b b a)) (* (/ 3.0 16.0) (* y y d d d b a a)) (* (/ 3.0 16.0) (* y d d d d b b a)) (* (/ 3.0 32.0) (* y d d d d b a a)) (* (/ 1.0 32.0) (* d d d d d b b a)) (* (/ 1.0 64.0) (* d d d d d b a a)))))
 (let ((?x278 (* (- (/ 1.0 16.0)) (* y d d b b a a))))
 (let ((?x192 (* (- (/ 1.0 8.0)) (* y y d d d a))))
 (let ((?x241 (* (- (/ 1.0 16.0)) (* y y d d b b))))
 (let ((?x1151 (+ ?x241 ?x192 ?x278 (* (- (/ 1.0 8.0)) (* y y d d d b)) (* (- (/ 1.0 8.0)) (* y d d d d b)) (* (- (/ 1.0 8.0)) (* y d d d d a)) (* (- (/ 1.0 32.0)) (* d d d d d b)) (* (- (/ 1.0 32.0)) (* d d d d d a)) (* (- (/ 1.0 16.0)) (* y d d d b b)) (* (- (/ 1.0 64.0)) (* d d d d b b)) (* (- (/ 1.0 16.0)) (* y d d b b b b)) (* (- (/ 1.0 8.0)) (* y d d b b b a)) (* (- (/ 1.0 32.0)) (* d d d b b b b)) (* (- (/ 1.0 16.0)) (* d d d b b b a)) (* (- (/ 1.0 32.0)) (* d d d b b a a)))))
 (let ((?x443 (* ?x1151 ?x787 (+ ?x30 ?x115 ?x94 ?x100 (* (- 1.0) (* b d00)) (* d b00)))))
 (let ((?x222 (+ (* (- (/ 1.0 64.0)) (* y y d d d b b b)) ?x204 ?x220)))
 (let ((?x284 (+ ?x241 ?x192 ?x278)))
 (and (or (not (= (* ?x284 ?x222 ?x121) 0.0)) (not (= ?x443 0.0))) $x126 $x136 $x198)))))))))))))))))))))) :qid k!33))
 ))
 (let (($x335 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x163 (* (- 2.0) (* y b))))
 (let ((?x147 (* d a)))
 (let (($x410 (= (+ ?x147 ?x163 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x597 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x197 (* 2.0 (* b00 y))))
 (let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x559 (+ ?x94 ?x30 ?x197 (* (- 1.0) (* d00 a)))))
 (let (($x116 (= ?x559 0.0)))
 (let ((?x282 (+ ?x94 ?x30 (* 2.0 (* b00 (+ y (* (/ 1.0 2.0) d)))) (* (- 1.0) (* d00 (+ a b))))))
 (let ((?x154 (* (/ 1.0 2.0) d)))
 (let ((?x334 (+ y ?x154)))
 (let ((?x68 (+ a b)))
 (let ((?x349 (+ (* (- (/ 1.0 64.0)) (* ?x334 ?x334 d d d b b b)) (* (/ 1.0 32.0) (* ?x68 ?x68 d d b b b)) (* (/ 1.0 8.0) (* ?x68 ?x68 ?x334 ?x334 ?x334 d d b)))))
 (let ((?x493 (+ (* (- (/ 1.0 8.0)) (* ?x68 ?x334 ?x334 d d d)) (* (- (/ 1.0 16.0)) (* ?x334 ?x334 d d b b)) (* (- (/ 1.0 16.0)) (* ?x68 ?x68 ?x334 d d b b)))))
 (let ((?x220 (* (/ 1.0 8.0) (* y y y d d b a a))))
 (let ((?x204 (* (/ 1.0 32.0) (* d d b b b a a))))
 (let ((?x222 (+ (* (- (/ 1.0 64.0)) (* y y d d d b b b)) ?x204 ?x220)))
 (let ((?x278 (* (- (/ 1.0 16.0)) (* y d d b b a a))))
 (let ((?x241 (* (- (/ 1.0 16.0)) (* y y d d b b))))
 (let ((?x192 (* (- (/ 1.0 8.0)) (* y y d d d a))))
 (let (($x453 (or (not (= (* (+ ?x192 ?x241 ?x278) ?x222 ?x559) 0.0)) (not (= (* ?x493 ?x349 ?x282) 0.0)))))
 (and $x453 $x116 $x597 $x410))))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x381 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x163 (* (- 2.0) (* y b))))
 (let ((?x147 (* d a)))
 (let (($x198 (= (+ ?x147 ?x163 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x136 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x100 (* 2.0 (* y b00))))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x33 (* a d00)))
 (let ((?x115 (* (- 1.0) ?x33)))
 (let ((?x30 (* a00 d00)))
 (let ((?x121 (+ ?x30 ?x115 ?x94 ?x100)))
 (let (($x126 (= ?x121 0.0)))
 (let ((?x220 (* (/ 1.0 8.0) (* y y y d d b a a))))
 (let ((?x204 (* (/ 1.0 32.0) (* d d b b b a a))))
 (let ((?x787 (+ (* (/ 11.0 64.0) (* y y d d d b b b)) ?x204 ?x220 (* (/ 5.0 64.0) (* y d d d d b b b)) (* (/ 3.0 256.0) (* d d d d d b b b)) (* (/ 1.0 32.0) (* d d b b b b b)) (* (/ 1.0 16.0) (* d d b b b b a)) (* (/ 1.0 8.0) (* y y y d d b b b)) (* (/ 1.0 4.0) (* y y y d d b b a)) (* (/ 3.0 8.0) (* y y d d d b b a)) (* (/ 3.0 16.0) (* y y d d d b a a)) (* (/ 3.0 16.0) (* y d d d d b b a)) (* (/ 3.0 32.0) (* y d d d d b a a)) (* (/ 1.0 32.0) (* d d d d d b b a)) (* (/ 1.0 64.0) (* d d d d d b a a)))))
 (let ((?x278 (* (- (/ 1.0 16.0)) (* y d d b b a a))))
 (let ((?x192 (* (- (/ 1.0 8.0)) (* y y d d d a))))
 (let ((?x241 (* (- (/ 1.0 16.0)) (* y y d d b b))))
 (let ((?x1151 (+ ?x241 ?x192 ?x278 (* (- (/ 1.0 8.0)) (* y y d d d b)) (* (- (/ 1.0 8.0)) (* y d d d d b)) (* (- (/ 1.0 8.0)) (* y d d d d a)) (* (- (/ 1.0 32.0)) (* d d d d d b)) (* (- (/ 1.0 32.0)) (* d d d d d a)) (* (- (/ 1.0 16.0)) (* y d d d b b)) (* (- (/ 1.0 64.0)) (* d d d d b b)) (* (- (/ 1.0 16.0)) (* y d d b b b b)) (* (- (/ 1.0 8.0)) (* y d d b b b a)) (* (- (/ 1.0 32.0)) (* d d d b b b b)) (* (- (/ 1.0 16.0)) (* d d d b b b a)) (* (- (/ 1.0 32.0)) (* d d d b b a a)))))
 (let ((?x443 (* ?x1151 ?x787 (+ ?x30 ?x115 ?x94 ?x100 (* (- 1.0) (* b d00)) (* d b00)))))
 (let ((?x222 (+ (* (- (/ 1.0 64.0)) (* y y d d d b b b)) ?x204 ?x220)))
 (let ((?x284 (+ ?x241 ?x192 ?x278)))
 (let (($x364 (and (or (not (= (* ?x284 ?x222 ?x121) 0.0)) (not (= ?x443 0.0))) $x126 $x136 $x198)))
 (let (($x410 (= (+ ?x147 ?x163 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x597 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x197 (* 2.0 (* b00 y))))
 (let ((?x559 (+ ?x94 ?x30 ?x197 (* (- 1.0) (* d00 a)))))
 (let (($x116 (= ?x559 0.0)))
 (let ((?x282 (+ ?x94 ?x30 (* 2.0 (* b00 (+ y (* (/ 1.0 2.0) d)))) (* (- 1.0) (* d00 (+ a b))))))
 (let ((?x154 (* (/ 1.0 2.0) d)))
 (let ((?x334 (+ y ?x154)))
 (let ((?x68 (+ a b)))
 (let ((?x349 (+ (* (- (/ 1.0 64.0)) (* ?x334 ?x334 d d d b b b)) (* (/ 1.0 32.0) (* ?x68 ?x68 d d b b b)) (* (/ 1.0 8.0) (* ?x68 ?x68 ?x334 ?x334 ?x334 d d b)))))
 (let ((?x493 (+ (* (- (/ 1.0 8.0)) (* ?x68 ?x334 ?x334 d d d)) (* (- (/ 1.0 16.0)) (* ?x334 ?x334 d d b b)) (* (- (/ 1.0 16.0)) (* ?x68 ?x68 ?x334 d d b b)))))
 (let (($x453 (or (not (= (* (+ ?x192 ?x241 ?x278) ?x222 ?x559) 0.0)) (not (= (* ?x493 ?x349 ?x282) 0.0)))))
 (let (($x623 (and $x453 $x116 $x597 $x410)))
 (rewrite (= $x623 $x364))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x511 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x282 (+ ?x94 ?x30 (* 2.0 (* b00 (+ y (* (/ 1.0 2.0) d)))) (* (- 1.0) (* d00 (+ a b))))))
 (let ((?x154 (* (/ 1.0 2.0) d)))
 (let ((?x334 (+ y ?x154)))
 (let ((?x68 (+ a b)))
 (let ((?x349 (+ (* (- (/ 1.0 64.0)) (* ?x334 ?x334 d d d b b b)) (* (/ 1.0 32.0) (* ?x68 ?x68 d d b b b)) (* (/ 1.0 8.0) (* ?x68 ?x68 ?x334 ?x334 ?x334 d d b)))))
 (let ((?x493 (+ (* (- (/ 1.0 8.0)) (* ?x68 ?x334 ?x334 d d d)) (* (- (/ 1.0 16.0)) (* ?x334 ?x334 d d b b)) (* (- (/ 1.0 16.0)) (* ?x68 ?x68 ?x334 d d b b)))))
 (let ((?x197 (* 2.0 (* b00 y))))
 (let ((?x559 (+ ?x94 ?x30 ?x197 (* (- 1.0) (* d00 a)))))
 (let ((?x220 (* (/ 1.0 8.0) (* y y y d d b a a))))
 (let ((?x204 (* (/ 1.0 32.0) (* d d b b b a a))))
 (let ((?x222 (+ (* (- (/ 1.0 64.0)) (* y y d d d b b b)) ?x204 ?x220)))
 (let ((?x278 (* (- (/ 1.0 16.0)) (* y d d b b a a))))
 (let ((?x241 (* (- (/ 1.0 16.0)) (* y y d d b b))))
 (let ((?x192 (* (- (/ 1.0 8.0)) (* y y d d d a))))
 (let (($x453 (or (not (= (* (+ ?x192 ?x241 ?x278) ?x222 ?x559) 0.0)) (not (= (* ?x493 ?x349 ?x282) 0.0)))))
 (let ((?x163 (* (- 2.0) (* y b))))
 (let ((?x147 (* d a)))
 (let (($x410 (= (+ ?x147 ?x163 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x597 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let (($x116 (= ?x559 0.0)))
 (and $x116 $x597 $x410 $x453))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x85 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x52 (/ d 2.0)))
 (let ((?x65 (+ y ?x52)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x68 (+ a b)))
 (let ((?x78 (- (* (- 1.0) ?x68 ?x52 ?x52 ?x52 ?x65 ?x65) (* ?x51 ?x51 ?x52 ?x52 ?x65 ?x65))))
 (let ((?x74 (+ (* (- 1.0) ?x51 ?x51 ?x51 ?x52 ?x52 ?x52 ?x65 ?x65) (* ?x68 ?x68 ?x51 ?x51 ?x51 ?x52 ?x52) (* ?x68 ?x68 ?x51 ?x52 ?x52 ?x65 ?x65 ?x65))))
 (let ((?x30 (* a00 d00)))
 (let ((?x27 (* (- 2.0) b00 y00)))
 (let ((?x80 (* (- (+ ?x27 ?x30 (* 2.0 b00 ?x65)) (* ?x68 d00)) ?x74 (- ?x78 (* ?x68 ?x68 ?x51 ?x51 ?x52 ?x52 ?x65)))))
 (let ((?x60 (- (* (- 1.0) a ?x52 ?x52 ?x52 y y) (* ?x51 ?x51 ?x52 ?x52 y y))))
 (let ((?x56 (+ (* (- 1.0) ?x51 ?x51 ?x51 ?x52 ?x52 ?x52 y y) (* a a ?x51 ?x51 ?x51 ?x52 ?x52) (* a a ?x51 ?x52 ?x52 y y y))))
 (let ((?x33 (* a d00)))
 (let ((?x34 (- (+ ?x27 ?x30 (* 2.0 b00 y)) ?x33)))
 (let (($x63 (= (* ?x34 ?x56 (- ?x60 (* a a ?x51 ?x51 ?x52 ?x52 y))) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (and (= ?x34 0.0) (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not $x63) (not (= ?x80 0.0)))))))))))))))))))) :qid k!33))
 ))
 (let ((?x808 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x282 (+ ?x94 ?x30 (* 2.0 (* b00 (+ y (* (/ 1.0 2.0) d)))) (* (- 1.0) (* d00 (+ a b))))))
 (let ((?x154 (* (/ 1.0 2.0) d)))
 (let ((?x334 (+ y ?x154)))
 (let ((?x68 (+ a b)))
 (let ((?x349 (+ (* (- (/ 1.0 64.0)) (* ?x334 ?x334 d d d b b b)) (* (/ 1.0 32.0) (* ?x68 ?x68 d d b b b)) (* (/ 1.0 8.0) (* ?x68 ?x68 ?x334 ?x334 ?x334 d d b)))))
 (let ((?x493 (+ (* (- (/ 1.0 8.0)) (* ?x68 ?x334 ?x334 d d d)) (* (- (/ 1.0 16.0)) (* ?x334 ?x334 d d b b)) (* (- (/ 1.0 16.0)) (* ?x68 ?x68 ?x334 d d b b)))))
 (let ((?x197 (* 2.0 (* b00 y))))
 (let ((?x559 (+ ?x94 ?x30 ?x197 (* (- 1.0) (* d00 a)))))
 (let ((?x220 (* (/ 1.0 8.0) (* y y y d d b a a))))
 (let ((?x204 (* (/ 1.0 32.0) (* d d b b b a a))))
 (let ((?x222 (+ (* (- (/ 1.0 64.0)) (* y y d d d b b b)) ?x204 ?x220)))
 (let ((?x278 (* (- (/ 1.0 16.0)) (* y d d b b a a))))
 (let ((?x241 (* (- (/ 1.0 16.0)) (* y y d d b b))))
 (let ((?x192 (* (- (/ 1.0 8.0)) (* y y d d d a))))
 (let (($x453 (or (not (= (* (+ ?x192 ?x241 ?x278) ?x222 ?x559) 0.0)) (not (= (* ?x493 ?x349 ?x282) 0.0)))))
 (let ((?x163 (* (- 2.0) (* y b))))
 (let ((?x147 (* d a)))
 (let (($x410 (= (+ ?x147 ?x163 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x597 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let (($x116 (= ?x559 0.0)))
 (let (($x740 (and $x116 $x597 $x410 $x453)))
 (let ((?x52 (/ d 2.0)))
 (let ((?x65 (+ y ?x52)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x78 (- (* (- 1.0) ?x68 ?x52 ?x52 ?x52 ?x65 ?x65) (* ?x51 ?x51 ?x52 ?x52 ?x65 ?x65))))
 (let ((?x74 (+ (* (- 1.0) ?x51 ?x51 ?x51 ?x52 ?x52 ?x52 ?x65 ?x65) (* ?x68 ?x68 ?x51 ?x51 ?x51 ?x52 ?x52) (* ?x68 ?x68 ?x51 ?x52 ?x52 ?x65 ?x65 ?x65))))
 (let ((?x70 (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 ?x65)) (* ?x68 d00))))
 (let (($x81 (= (* ?x70 ?x74 (- ?x78 (* ?x68 ?x68 ?x51 ?x51 ?x52 ?x52 ?x65))) 0.0)))
 (let ((?x60 (- (* (- 1.0) a ?x52 ?x52 ?x52 y y) (* ?x51 ?x51 ?x52 ?x52 y y))))
 (let ((?x56 (+ (* (- 1.0) ?x51 ?x51 ?x51 ?x52 ?x52 ?x52 y y) (* a a ?x51 ?x51 ?x51 ?x52 ?x52) (* a a ?x51 ?x52 ?x52 y y y))))
 (let ((?x33 (* a d00)))
 (let ((?x34 (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33)))
 (let (($x63 (= (* ?x34 ?x56 (- ?x60 (* a a ?x51 ?x51 ?x52 ?x52 y))) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let (($x84 (and (= ?x34 0.0) (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not $x63) (not $x81)))))
 (rewrite (= $x84 $x740)))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x86 (asserted $x85)))
 (let ((@x333 (mp (mp @x86 (quant-intro (proof-bind ?x808) (= $x85 $x511)) $x511) (rewrite (= $x511 $x335)) $x335)))
 (let ((@x580 (mp~ (mp @x333 (quant-intro (proof-bind ?x381) (= $x335 $x365)) $x365) (sk (~ $x365 $x578)) $x578)))
 (let ((@x361 (mp @x580 (rewrite (= $x578 $x374)) $x374)))
 (let ((@x450 (mp (and-elim @x361 $x945) @x363 $x633)))
 (let ((@x1138 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x633) $x832)) @x450 $x832)))
 (let (($x831 (<= ?x936 0.0)))
 (let ((@x437 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x633) $x831)) @x450 $x831)))
 (let (($x267 (>= ?x837 0.0)))
 (let (($x529 (not $x267)))
 (let (($x352 (<= ?x837 0.0)))
 (let ((@x891 (unit-resolution ((_ th-lemma arith) (or $x352 (not $x831) (not $x832))) (hypothesis (not $x352)) @x437 @x1138 false)))
 (let (($x497 (= 0.0 ?x837)))
 (let (($x880 (not $x497)))
 (let ((@x244 (monotonicity (symm (commutativity (= $x497 $x910)) (= $x910 $x497)) (= $x295 $x880))))
 (let ((?x505 (* b00 d!6)))
 (let ((?x507 (* (- 1.0) ?x452)))
 (let ((?x113 (+ ?x355 ?x30 ?x507 ?x94 ?x505 ?x316)))
 (let (($x317 (= ?x113 0.0)))
 (let (($x469 (>= ?x520 0.0)))
 (let (($x1107 (= 0.0 ?x520)))
 (let ((@x944 (mp (and-elim @x361 $x512) (symm (commutativity (= $x1107 $x512)) (= $x512 $x1107)) $x1107)))
 (let (($x840 (<= ?x520 0.0)))
 (let ((@x160 ((_ th-lemma arith) @x437 @x1138 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1107) $x840)) @x944 $x840) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1107) $x469)) @x944 $x469) (= 0.0 ?x113))))
 (let (($x501 (or (not $x317) $x510)))
 (let ((@x1124 (unit-resolution ((_ th-lemma arith) $x501) (hypothesis $x527) (hypothesis $x317) false)))
 (let ((@x1097 (unit-resolution (and-elim @x361 $x509) (unit-resolution (lemma @x1124 $x501) (symm @x160 $x317) $x510) $x295)))
 (let ((@x870 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x497 (not $x352) $x529)) (mp @x1097 @x244 $x880) (or (not $x352) $x529))))
 (unit-resolution ((_ th-lemma arith) (or $x267 (not $x831) (not $x832))) (unit-resolution @x870 (lemma @x891 $x352) $x529) @x437 @x1138 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs              21
 :arith-eq-adapter       9
 :arith-conflicts        5
 :arith-diseq            8
 :arith-lower            11
 :arith-make-feasible    10
 :arith-max-columns      63
 :arith-max-rows         9
 :arith-nla-explanations 4
 :arith-nla-lemmas       4
 :arith-offset-eqs       3
 :arith-upper            9
 :conflicts              5
 :decisions              12
 :del-clause             26
 :final-checks           7
 :max-memory             18.05
 :memory                 17.35
 :mk-bool-var            34
 :mk-clause              26
 :num-allocs             156742
 :num-checks             1
 :propagations           18
 :rlimit-count           5078
 :time                   0.00
 :total-time             0.01)
