unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x365 (* (- 1) s!1)))
 (let ((?x301 (* r00 r00)))
 (let ((?x2912 (* (- 3) ?x301)))
 (let ((?x1083 (+ s00 ?x2912 (* 3 (* r!2 r!2)) ?x365)))
 (let (($x445 (<= ?x1083 0)))
 (let (($x819 (= ?x1083 0)))
 (let ((?x2524 (* 39 (* r!2 r!2 r!2 r!2))))
 (let ((?x2448 (* (- 24) (* s!1 s!1 x!0))))
 (let ((?x695 (* 6 r!2)))
 (let ((?x3623 (+ 3 s!1 ?x695)))
 (let ((?x366 (+ ?x365 x!0)))
 (let ((?x3909 (+ 1 r!2)))
 (let ((?x2863 (* 6 x!0)))
 (let ((?x2770 (* 3 r!2)))
 (let ((?x1841 (* 45 (* r!2 r!2 r!2))))
 (let ((?x3484 (* 18 (* r!2 r!2 x!0))))
 (let ((?x3121 (* (- 6) (* r!2 r!2 x!0 x!0 x!0))))
 (let ((?x3141 (* 21 (* s!1 x!0 x!0))))
 (let ((?x3116 (* (- 12) (* r!2 x!0 x!0 x!0))))
 (let ((?x3150 (* (- 6) (* x!0 x!0 x!0))))
 (let ((?x3177 (* 6 (* r!2 r!2 r!2 x!0))))
 (let ((?x363 (* (- 7) s!1)))
 (let ((?x2997 (* 12 (* r!2 r!2 r!2 r!2 r!2))))
 (let ((?x1496 (* r!2 r!2)))
 (let ((?x364 (* 21 ?x1496)))
 (let ((?x1440 (* s!1 x!0)))
 (let ((?x2452 (* (- 12) ?x1440)))
 (let ((?x928 (* s!1 s!1 s!1)))
 (let ((?x2457 (* 9 ?x928)))
 (let ((?x914 (* x!0 x!0)))
 (let ((?x2451 (* 6 ?x914)))
 (let ((?x906 (* 27 (* r!2 x!0 x!0))))
 (let ((?x737 (* 15 (* r!2 r!2 r!2 x!0 x!0))))
 (let ((?x889 (* 36 (* r!2 r!2 x!0 x!0))))
 (let ((?x757 (* s!1 s!1)))
 (let ((?x2466 (* 6 ?x757)))
 (let ((?x725 (* r!2 x!0)))
 (let ((?x735 (* 18 ?x725)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x426 (* s00 r00)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x2115 (* (- 12) ?x301)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x4703 (* 7 s00)))
 (let ((?x649 (+ ?x4703 ?x500 ?x501 ?x2115 (* 12 (* r00 r00 ?x3909 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x3623 ?x3623)) (* 12 (* s00 r00 r!2 x!0 x!0)) (* (- 6) (* r00 s!1 x!0)) ?x504 (* (- 7) (* s00 s!1 s!1)) ?x470 (* 12 (* r00 r00 s!1 s!1)) (* 3 (* r00 x!0 x!0)) (* 36 (* r00 r00 r!2 x!0 x!0)) (* (- 48) (* r00 r00 r!2 r!2 r!2)) (* (- 24) (* r00 r00 r00 s!1 s!1 r!2)) ?x735 (* (- 3) (* r00 r!2 r!2 r!2)) ?x2466 (* 2 (* s!1 r!2 r!2 r!2 r!2)) ?x889 ?x737 ?x906 ?x2451 (* (- 6) (* r00 s!1 r!2 r!2 x!0)) (* 15 (* s!1 s!1 r!2 r!2 r!2)) ?x2457 (* (- 6) (* s00 r00 r!2 r!2 r!2)) (* (- 1) (* s!1 r!2 r!2 r!2)) (* (- 19) (* s!1 r!2)) (* (- 48) (* r00 r00 r!2)) (* 25 (* s00 r!2)) (* (- 18) (* x00 r!2)) (* (- 12) (* s00 r00 s!1 r!2 r!2 x!0)) (* (- 18) (* s00 r00 r!2)) (* 27 (* s!1 s!1 r!2)) (* (- 12) (* r00 r00 r00 s!1 s!1 r!2 r!2)) (* 12 (* x00 s!1 s!1 r!2)) (* 3 (* ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x3623 ?x3623 ?x3623)) (* 18 (* s!1 s!1 s!1 r!2)) (* (- 6) (* x00 r!2 r!2 r!2)) (* 6 (* x00 s!1 s!1)) (* (- 18) (* s00 r00 r!2 r!2)) (* 6 (* r00 s!1 s!1 r!2)) (* 19 (* s00 r!2 r!2 r!2)) (* (- 12) (* s00 r00 s!1 x!0)) ?x2452 ?x364 (* 36 (* s!1 s!1 r!2 r!2)) (* (- 12) (* x00 s!1 x!0)) (* 21 (* s!1 r!2 r!2 x!0 x!0)) (* (- 4) (* s00 r!2 r!2 r!2 x!0 x!0)) (* (- 24) (* r00 r00 r00 r!2 x!0 x!0)) (* 6 (* s00 r00 s!1 s!1 r!2 r!2)) (* (- 12) (* r00 r00 r00 s!1 s!1)) (* 36 (* r00 r00 r!2 r!2 x!0 x!0)) (* 36 (* r00 r00 s!1 s!1 r!2 r!2)) (* (- 4) (* s00 s!1 s!1 r!2 r!2 r!2)) (* 12 (* r00 r00 r!2 r!2 r!2 x!0 x!0)) (* 8 (* s00 s!1 r!2 r!2 r!2 x!0)) (* 3 (* r00 r!2 r!2 x!0 x!0)) (* (- 72) (* s!1 r!2 r!2 x!0)) (* (- 12) (* r00 r00 r00 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x3623 ?x3623)) (* 6 (* r00 s00 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x3623 ?x3623)) (* (- 54) (* s!1 r!2 x!0)) (* (- 12) (* r00 r00 r00 r!2 r!2 x!0 x!0)) (* 4 (* s00 r!2 r!2 r!2 r!2)) ?x2997 (* 24 (* r00 r00 r00 s!1 r!2 r!2 x!0)) (* 48 (* r00 r00 r00 s!1 r!2 x!0)) (* 24 (* r00 r00 r00 s!1 x!0)) (* (- 4) (* s00 ?x3909 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x3623 ?x3623)) (* (- 6) (* ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x366 ?x3623 ?x3623)) (* 36 (* r00 r00 r00 r!2)) (* (- 3) (* s00 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x3623 ?x3623)) (* (- 12) (* r00 s!1 r!2 x!0)) (* (- 15) (* s00 s!1 s!1 r!2 r!2)) (* 3 (* r00 s!1 s!1)) (* 6 (* s00 r00 r!2 r!2 x!0 x!0)) (* (- 24) (* s!1 s!1 r!2 r!2 x!0)) (* (- 48) (* s!1 s!1 r!2 x!0)) (* (- 9) (* r00 r!2 r!2)) (* (- 9) (* r00 r!2)) (* (- 24) (* r00 r00 s!1 r!2 r!2 r!2 x!0)) (* (- 2) (* ?x3909 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x3623 ?x3623 ?x3623)) (* (- 18) (* x00 r!2 r!2)) (* (- 3) (* ?x3909 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x3623 ?x3623)) (* 12 (* x00 r!2 x!0 x!0)) (* (- 24) (* r00 r00 s!1 x!0)) ?x363 ?x3177 ?x3150 ?x3116 ?x3141 ?x3121 (* 6 (* s00 r00 x!0 x!0)) (* 6 (* x00 r!2 r!2 x!0 x!0)) (* 33 (* s00 r!2 r!2)) (* (- 72) (* r00 r00 s!1 r!2 x!0)) (* 12 (* r00 r00 x!0 x!0)) (* (- 72) (* r00 r00 s!1 r!2 r!2 x!0)) (* 12 (* r00 r00 s!1 s!1 r!2 r!2 r!2)) (* 6 (* s00 r00 s!1 s!1)) (* 6 (* r00 r!2 x!0 x!0)) (* 6 (* x00 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x3623 ?x3623)) (* 36 (* r00 r00 s!1 s!1 r!2)) (* (- 12) (* x00 s!1 r!2 r!2 x!0)) (* 12 (* r00 r00 r00 r!2 r!2 r!2)) ?x3484 (* 3 (* r00 s!1 s!1 r!2 r!2)) (* (- 12) (* r00 r00 r!2 r!2 r!2 r!2)) (* 6 (* x00 x!0 x!0)) (* 36 (* r00 r00 r00 r!2 r!2)) (* (- 72) (* r00 r00 r!2 r!2)) ?x1841 (* 42 (* s!1 r!2 x!0 x!0)) (* (- 24) (* s00 r00 s!1 r!2 x!0)) (* 6 (* x00 s!1 s!1 r!2 r!2)) (* (- 30) (* s!1 r!2 r!2 r!2 x!0)) (* (- 2) (* ?x3909 ?x3909 ?x3909 ?x366 ?x366 ?x3623)) (* (- 18) (* s00 s!1 s!1 r!2)) ?x2770 ?x2863 (* 3 (* r00 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x3623 ?x3623)) (* 9 (* s!1 s!1 s!1 r!2 r!2)) ?x2448 (* (- 12) (* r00 r00 r00 x!0 x!0)) (* (- 15) (* s00 r!2 r!2 x!0 x!0)) (* (- 18) (* s00 r!2 x!0 x!0)) (* (- 15) (* s!1 r!2 r!2)) (* (- 7) (* s00 x!0 x!0)) (* 30 (* s00 s!1 r!2 r!2 x!0)) (* (- 24) (* x00 s!1 r!2 x!0)) (* 36 (* s00 s!1 r!2 x!0)) (* 14 (* s00 s!1 x!0)) (* 12 (* s00 r00 s!1 s!1 r!2)) ?x2524)))
 (let (($x3525 (= ?x649 0)))
 (let (($x3883 (not $x3525)))
 (let ((?x1292 (* (- 9) s!1)))
 (let ((?x1346 (* x00 x00)))
 (let ((?x3711 (* 108 ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1457 (* 16 ?x1184)))
 (let ((?x1128 (* r00 r00 s!1)))
 (let ((?x1288 (* 36 ?x1128)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3726 (* (- 432) ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x900 (* (- 108) ?x805)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x389 (* (- 36) ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1518 (* 51 ?x591)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3183 (* 108 ?x522)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3479 (+ ?x137 (* (- 54) ?x426) (* (- 216) (* r00 r00 r00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* 216 (* s00 r00 x00)) ?x3183 ?x1518 ?x389 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* 15 ?x757) ?x900 (* (- 66) (* s00 s!1)) ?x3726 (* 108 ?x914) (* (- 4) ?x928) (* 216 (* s00 r00 r00 r00)) (* 108 (* s00 x!0)) ?x1288 (* (- 108) (* r00 x!0)) ?x1457 (* 54 (* r00 s!1)) (* 108 (* x00 s!1)) (* 108 (* s00 r00 s!1)) ?x3711 (* (- 108) ?x1440) (* (- 216) (* x00 x!0)) ?x1292)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x1772 (* 36 ?x877)))
 (let ((?x1775 (* (- 6) ?x805)))
 (let ((?x1782 (* 15 ?x591)))
 (let ((?x2569 (* 54 ?x522)))
 (let ((?x428 (+ ?x137 (* (- 24) ?x426) ?x2569 ?x1782 ?x389 (* 2 (* s00 s00 r00)) (* (- 54) ?x725) (* (- 3) ?x757) ?x1775 (* (- 12) (* s00 s!1)) ?x1772 (* 6 (* s00 x!0)) (* 24 (* s!1 r!2)) (* (- 24) (* s00 r!2)) ?x1288 (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* 24 (* r00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* (- 2) (* s00 s!1 r!2)) (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)) (* 4 (* s00 s00 r!2)) (* (- 36) (* r00 r!2 x!0)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 6) ?x1440) (* (- 4) (* r00 s!1 s!1)) ?x1292)))
 (let (($x429 (= ?x428 0)))
 (let ((?x2819 (* (- 3) s!1)))
 (let ((?x3780 (* 4 ?x591)))
 (let ((?x3668 (* 18 ?x522)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1910 (+ ?x44 (* (- 9) ?x426) ?x3668 ?x3780 (* (- 6) ?x647) (* (- 18) ?x725) (* (- 2) ?x757) (* (- 6) (* r00 s!1 r!2)) (* (- 2) (* s00 s!1)) (* 9 (* s!1 r!2)) (* (- 9) (* s00 r!2)) (* 6 ?x1128) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)) ?x2819)))
 (let (($x1911 (= ?x1910 0)))
 (let ((?x1131 (+ ?x44 ?x500 ?x501 ?x504 ?x470 (* 2 (* s!1 r!2)) (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x2819 ?x2770 ?x2863)))
 (let (($x1134 (= ?x1131 0)))
 (let (($x4301 (and $x819 $x1134 $x1911 $x429 (= ?x3479 0) $x3883)))
 (let ((?x2575 (+ 3 ?x695 s!1)))
 (let ((?x1540 (* r!2 x00)))
 (let ((?x1716 (* (- 18) ?x1540)))
 (let ((?x815 (+ ?x2770 ?x363 ?x2863 ?x4703 ?x500 ?x501 ?x364 ?x2115 (* 3 (* ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x2575 ?x2575 ?x2575)) (* (- 19) (* r!2 s!1)) (* (- 48) (* r!2 r00 r00)) (* 25 (* r!2 s00)) ?x504 (* 12 (* r00 r00 ?x3909 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x2575 ?x2575)) ?x470 ?x2466 ?x735 (* 12 (* r!2 x!0 x!0 s00 r00)) (* 6 (* x!0 x!0 s00 r00)) (* 6 (* r!2 r!2 x!0 x!0 s00 r00)) (* 6 (* r!2 r!2 s!1 s!1 x00)) (* 3 (* s!1 s!1 r00)) ?x1716 (* (- 18) (* r!2 s00 r00)) (* (- 6) (* ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x366 ?x2575 ?x2575)) (* (- 4) (* s00 ?x3909 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x2575 ?x2575)) ?x2457 (* 27 (* r!2 s!1 s!1)) ?x2452 (* 6 (* r!2 r!2 s!1 s!1 s00 r00)) (* 36 (* r!2 s!1 s!1 r00 r00)) ?x2451 (* (- 12) (* s!1 x!0 x00)) (* (- 24) (* r!2 s!1 x!0 x00)) (* (- 7) (* s!1 s!1 s00)) (* (- 24) (* r!2 s!1 x!0 s00 r00)) (* 12 (* r!2 s!1 s!1 s00 r00)) (* 12 (* s!1 s!1 r00 r00)) (* (- 12) (* r!2 r!2 s!1 x!0 x00)) (* (- 12) (* s!1 x!0 s00 r00)) (* 33 (* r!2 r!2 s00)) (* 19 (* r!2 r!2 r!2 s00)) (* 6 (* r!2 s!1 s!1 r00)) (* 6 (* s!1 s!1 x00)) (* (- 18) (* r!2 r!2 s00 r00)) (* 3 (* r!2 r!2 s!1 s!1 r00)) (* (- 6) (* r!2 r!2 r!2 s00 r00)) (* 12 (* r!2 s!1 s!1 x00)) (* (- 24) (* r!2 r!2 s!1 s!1 x!0)) (* (- 48) (* r!2 s!1 s!1 x!0)) ?x2448 ?x2524 ?x1841 (* (- 9) (* r!2 r00)) (* (- 9) (* r!2 r!2 r00)) (* (- 3) (* r!2 r!2 r!2 r00)) (* (- 6) (* s!1 x!0 r00)) ?x3141 (* 42 (* r!2 s!1 x!0 x!0)) (* 21 (* r!2 r!2 s!1 x!0 x!0)) (* 3 (* r!2 r!2 x!0 x!0 r00)) (* 3 (* r00 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x2575 ?x2575)) ?x3121 ?x3116 ?x3150 (* 9 (* r!2 r!2 s!1 s!1 s!1)) (* 18 (* r!2 s!1 s!1 s!1)) (* 36 (* r!2 r!2 r00 r00 r00)) (* 12 (* r!2 r!2 r!2 r00 r00 r00)) (* (- 72) (* r!2 r!2 r00 r00)) (* (- 12) (* r!2 r!2 r!2 r!2 r00 r00)) (* (- 48) (* r!2 r!2 r!2 r00 r00)) (* 36 (* r!2 r00 r00 r00)) (* 6 (* x!0 x!0 x00)) (* 12 (* r!2 x!0 x!0 x00)) (* 6 (* r!2 r!2 x!0 x!0 x00)) (* (- 3) (* s00 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x2575 ?x2575)) (* (- 2) (* ?x3909 ?x3909 ?x3909 ?x366 ?x366 ?x2575)) (* 3 (* x!0 x!0 r00)) (* (- 12) (* r!2 s!1 x!0 r00)) (* (- 15) (* r!2 r!2 s!1)) (* (- 1) (* r!2 r!2 r!2 s!1)) (* 2 (* r!2 r!2 r!2 r!2 s!1)) ?x3177 ?x3484 (* (- 12) (* r!2 r!2 s!1 x!0 s00 r00)) (* (- 6) (* r!2 r!2 r!2 x00)) (* (- 18) (* r!2 r!2 x00)) (* (- 12) (* r00 r00 r00 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x2575 ?x2575)) (* 6 (* r00 s00 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x2575 ?x2575)) (* 4 (* r!2 r!2 r!2 r!2 s00)) (* (- 15) (* r!2 r!2 x!0 x!0 s00)) (* (- 18) (* r!2 x!0 x!0 s00)) (* (- 7) (* x!0 x!0 s00)) ?x2997 (* 30 (* r!2 r!2 s!1 x!0 s00)) (* 36 (* r!2 s!1 x!0 s00)) (* 14 (* s!1 x!0 s00)) (* (- 15) (* r!2 r!2 s!1 s!1 s00)) (* 6 (* x00 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x2575 ?x2575)) (* (- 18) (* r!2 s!1 s!1 s00)) (* (- 12) (* s!1 s!1 r00 r00 r00)) (* (- 24) (* r!2 s!1 s!1 r00 r00 r00)) (* (- 12) (* r!2 r!2 s!1 s!1 r00 r00 r00)) (* 24 (* s!1 x!0 r00 r00 r00)) (* 48 (* r!2 s!1 x!0 r00 r00 r00)) (* 24 (* r!2 r!2 s!1 x!0 r00 r00 r00)) (* (- 12) (* x!0 x!0 r00 r00 r00)) (* (- 24) (* r!2 x!0 x!0 r00 r00 r00)) (* (- 12) (* r!2 r!2 x!0 x!0 r00 r00 r00)) (* (- 54) (* r!2 s!1 x!0)) (* (- 72) (* r!2 r!2 s!1 x!0)) (* (- 30) (* r!2 r!2 r!2 s!1 x!0)) (* (- 6) (* r!2 r!2 s!1 x!0 r00)) ?x889 ?x737 ?x906 (* 15 (* r!2 r!2 r!2 s!1 s!1)) (* 36 (* r!2 r!2 s!1 s!1)) (* 6 (* s!1 s!1 s00 r00)) (* 6 (* r!2 x!0 x!0 r00)) (* (- 24) (* s!1 x!0 r00 r00)) (* (- 3) (* ?x3909 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x2575 ?x2575)) (* (- 2) (* ?x3909 ?x3909 ?x3909 ?x366 ?x366 ?x366 ?x2575 ?x2575 ?x2575)) (* (- 72) (* r!2 s!1 x!0 r00 r00)) (* 12 (* r!2 r!2 r!2 s!1 s!1 r00 r00)) (* (- 72) (* r!2 r!2 s!1 x!0 r00 r00)) (* (- 24) (* r!2 r!2 r!2 s!1 x!0 r00 r00)) (* 12 (* x!0 x!0 r00 r00)) (* 36 (* r!2 x!0 x!0 r00 r00)) (* 36 (* r!2 r!2 x!0 x!0 r00 r00)) (* 36 (* r!2 r!2 s!1 s!1 r00 r00)) (* 12 (* r!2 r!2 r!2 x!0 x!0 r00 r00)) (* (- 4) (* r!2 r!2 r!2 s!1 s!1 s00)) (* 8 (* r!2 r!2 r!2 s!1 x!0 s00)) (* (- 4) (* r!2 r!2 r!2 x!0 x!0 s00)))))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x759 (* s!1 r00 r00)))
 (let ((?x1253 (* (- 36) ?x759)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x1247 (* 9 s!1)))
 (let ((?x583 (+ ?x1247 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) ?x757) ?x1253 ?x1365 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x732 (* (- 108) (* s!1 s00 r00)) (* 4 ?x928) ?x1129 (* 108 ?x1440) (* (- 108) ?x914) ?x883 (* 12 (* s!1 s!1 s00)) ?x1371 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1375 (* 216 (* x!0 x00)) ?x1376)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1248 (+ ?x1247 ?x987 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x564 ?x551 (* 3 ?x757) (* 54 ?x725) (* 36 (* r!2 x!0 r00)) ?x1253 ?x916 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1000 (* 4 (* s!1 s!1 r00)) (* (- 54) ?x1540) ?x696 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x806 (* 2 (* r!2 s!1 s!1)) (* 6 ?x1440) (* (- 4) (* r!2 s00 s00)) ?x890 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x573 (+ (* 3 s!1) ?x378 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x541 ?x536 (* 2 ?x757) ?x735 (* 6 (* r!2 s!1 r00)) (* (- 6) ?x759) ?x604 (* 18 (* x!0 r00)) ?x648 ?x1716 (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x355 (+ ?x2770 ?x2819 ?x2863 ?x44 ?x500 ?x501 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x504 ?x470)))
 (let (($x1070 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x1496) (* 3 ?x301)) 0) (= ?x355 0) (= ?x573 0) (= ?x1248 0) (= ?x583 0) (not (= ?x815 0)))))
 (let (($x912 (exists ((r Int) (s Int) (x Int) )(! (let ((?x219 (* 6 r)))
 (let ((?x1599 (+ 3 ?x219 s)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x1546 (+ ?x280 x)))
 (let ((?x1383 (+ 1 r)))
 (let ((?x659 (* r x00)))
 (let ((?x672 (* (- 18) ?x659)))
 (let ((?x549 (* r x)))
 (let ((?x550 (* 18 ?x549)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x426 (* s00 r00)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x301 (* r00 r00)))
 (let ((?x2115 (* (- 12) ?x301)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x4703 (* 7 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x4747 (+ ?x43 (* (- 7) s) ?x56 ?x4703 ?x500 ?x501 (* 21 (* r r)) ?x2115 (* 3 (* ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599 ?x1599)) (* (- 19) (* r s)) (* (- 48) (* r r00 r00)) (* 25 (* r s00)) ?x504 (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) ?x470 (* 6 (* s s)) ?x550 (* 12 (* r x x s00 r00)) (* 6 (* x x s00 r00)) (* 6 (* r r x x s00 r00)) (* 6 (* r r s s x00)) (* 3 (* s s r00)) ?x672 (* (- 18) (* r s00 r00)) (* (- 6) (* ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* 9 (* s s s)) (* 27 (* r s s)) (* (- 12) (* s x)) (* 6 (* r r s s s00 r00)) (* 36 (* r s s r00 r00)) (* 6 (* x x)) (* (- 12) (* s x x00)) (* (- 24) (* r s x x00)) (* (- 7) (* s s s00)) (* (- 24) (* r s x s00 r00)) (* 12 (* r s s s00 r00)) (* 12 (* s s r00 r00)) (* (- 12) (* r r s x x00)) (* (- 12) (* s x s00 r00)) (* 33 (* r r s00)) (* 19 (* r r r s00)) (* 6 (* r s s r00)) (* 6 (* s s x00)) (* (- 18) (* r r s00 r00)) (* 3 (* r r s s r00)) (* (- 6) (* r r r s00 r00)) (* 12 (* r s s x00)) (* (- 24) (* r r s s x)) (* (- 48) (* r s s x)) (* (- 24) (* s s x)) (* 39 (* r r r r)) (* 45 (* r r r)) (* (- 9) (* r r00)) (* (- 9) (* r r r00)) (* (- 3) (* r r r r00)) (* (- 6) (* s x r00)) (* 21 (* s x x)) (* 42 (* r s x x)) (* 21 (* r r s x x)) (* 3 (* r r x x r00)) (* 3 (* r00 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* (- 6) (* r r x x x)) (* (- 12) (* r x x x)) (* (- 6) (* x x x)) (* 9 (* r r s s s)) (* 18 (* r s s s)) (* 36 (* r r r00 r00 r00)) (* 12 (* r r r r00 r00 r00)) (* (- 72) (* r r r00 r00)) (* (- 12) (* r r r r r00 r00)) (* (- 48) (* r r r r00 r00)) (* 36 (* r r00 r00 r00)) (* 6 (* x x x00)) (* 12 (* r x x x00)) (* 6 (* r r x x x00)) (* (- 3) (* s00 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x1546 ?x1546 ?x1599)) (* 3 (* x x r00)) (* (- 12) (* r s x r00)) (* (- 15) (* r r s)) (* (- 1) (* r r r s)) (* 2 (* r r r r s)) (* 6 (* r r r x)) (* 18 (* r r x)) (* (- 12) (* r r s x s00 r00)) (* (- 6) (* r r r x00)) (* (- 18) (* r r x00)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* 6 (* r00 s00 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* 4 (* r r r r s00)) (* (- 15) (* r r x x s00)) (* (- 18) (* r x x s00)) (* (- 7) (* x x s00)) (* 12 (* r r r r r)) (* 30 (* r r s x s00)) (* 36 (* r s x s00)) (* 14 (* s x s00)) (* (- 15) (* r r s s s00)) (* 6 (* x00 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* (- 18) (* r s s s00)) (* (- 12) (* s s r00 r00 r00)) (* (- 24) (* r s s r00 r00 r00)) (* (- 12) (* r r s s r00 r00 r00)) (* 24 (* s x r00 r00 r00)) (* 48 (* r s x r00 r00 r00)) (* 24 (* r r s x r00 r00 r00)) (* (- 12) (* x x r00 r00 r00)) (* (- 24) (* r x x r00 r00 r00)) (* (- 12) (* r r x x r00 r00 r00)) (* (- 54) (* r s x)) (* (- 72) (* r r s x)) (* (- 30) (* r r r s x)) (* (- 6) (* r r s x r00)) (* 36 (* r r x x)) (* 15 (* r r r x x)) (* 27 (* r x x)) (* 15 (* r r r s s)) (* 36 (* r r s s)) (* 6 (* s s s00 r00)) (* 6 (* r x x r00)) (* (- 24) (* s x r00 r00)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599 ?x1599)) (* (- 72) (* r s x r00 r00)) (* 12 (* r r r s s r00 r00)) (* (- 72) (* r r s x r00 r00)) (* (- 24) (* r r r s x r00 r00)) (* 12 (* x x r00 r00)) (* 36 (* r x x r00 r00)) (* 36 (* r r x x r00 r00)) (* 36 (* r r s s r00 r00)) (* 12 (* r r r x x r00 r00)) (* (- 4) (* r r r s s s00)) (* 8 (* r r r s x s00)) (* (- 4) (* r r r x x s00)))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x565 (* s r00 r00)))
 (let ((?x864 (* (- 36) ?x565)))
 (let ((?x522 (* r00 x00)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1377 (+ ?x143 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s s)) ?x864 ?x1365 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x732 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1129 (* 108 (* s x)) (* (- 108) (* x x)) ?x883 (* 12 (* s s s00)) ?x1371 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1375 (* 216 (* x x00)) ?x1376)))
 (let (($x1378 (= ?x1377 0)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1079 (+ ?x143 ?x987 (* (- 24) (* r s)) (* 24 (* r s00)) ?x564 ?x551 ?x569 (* 54 ?x549) (* 36 (* r x r00)) ?x864 ?x916 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1000 (* 4 (* s s r00)) (* (- 54) ?x659) ?x696 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x806 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x890 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1084 (= ?x1079 0)))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x745 (+ ?x47 ?x378 (* (- 9) (* r s)) (* 9 (* r s00)) ?x541 ?x536 ?x546 ?x550 (* 6 (* r s r00)) (* (- 6) ?x565) ?x604 (* 18 (* x r00)) ?x648 ?x672 (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x752 (= ?x745 0)))
 (let ((?x44 (* 3 s00)))
 (let ((?x499 (* (- 3) s)))
 (let ((?x505 (+ ?x43 ?x499 ?x56 ?x44 ?x500 ?x501 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x504 ?x470)))
 (let (($x506 (= ?x505 0)))
 (let (($x334 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x301)) 0)))
 (and $x334 $x506 $x752 $x1084 $x1378 (not (= ?x4747 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x3529 (exists ((r Int) (s Int) (x Int) )(! (let ((?x280 (* (- 1) s)))
 (let ((?x3654 (+ x ?x280)))
 (let ((?x1383 (+ 1 r)))
 (let ((?x219 (* 6 r)))
 (let ((?x3758 (+ 3 s ?x219)))
 (let ((?x2300 (+ (* 3 (* s00 ?x1383 ?x1383 ?x1383)) (* (- 6) (* r00 s00 ?x1383 ?x1383 ?x1383)) (* 3 (* r00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758 ?x3758)) (* (- 3) (* r00 ?x1383 ?x1383 ?x1383)) (* 3 (* ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 6) (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654)) (* (- 6) (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 6 (* x00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 12 (* r00 r00 r00 ?x1383 ?x1383 ?x1383)) (* (- 12) (* r00 r00 ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* x00 ?x1383 ?x1383 ?x3654 ?x3654)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 3 (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3758)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)) (* 2 (* ?x1383 ?x1383 ?x1383 ?x1383 ?x3758)) (* 3 (* r00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 6) (* x00 ?x1383 ?x1383 ?x1383)) (* 6 (* ?x1383 ?x1383 ?x1383 ?x3654)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 4 (* s00 ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 3) (* s00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383 ?x3654 ?x3654)) (* 3 (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758 ?x3758)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 3) (* s00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3758)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3758)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)))))
 (let (($x2332 (not (= ?x2300 0))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x3711 (* 108 ?x1346)))
 (let ((?x3071 (* (- 9) s)))
 (let ((?x3512 (* r00 r00 s00)))
 (let ((?x1781 (* (- 36) ?x3512)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1518 (* 51 ?x591)))
 (let ((?x3593 (* r00 r00 s)))
 (let ((?x3955 (* 36 ?x3593)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1457 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x900 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3726 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3183 (* 108 ?x522)))
 (let ((?x2932 (+ (* 216 (* r00 s00 x00)) ?x3183 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3726 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x900 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1457 (* (- 108) (* x s)) ?x3955 ?x1518 (* (- 108) (* r00 x)) ?x137 ?x1781 ?x3071 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3711)))
 (let (($x2866 (= ?x2932 0)))
 (let ((?x1782 (* 15 ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x1772 (* 36 ?x877)))
 (let ((?x1775 (* (- 6) ?x805)))
 (let ((?x2569 (* 54 ?x522)))
 (let ((?x3682 (+ (* 24 (* s r)) ?x2569 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1775 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3955 ?x1772 ?x1782 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1781 (* 54 (* x00 r)) ?x3071 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x499 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3780 (* 4 ?x591)))
 (let ((?x3668 (* 18 ?x522)))
 (let ((?x1569 (+ (* 9 (* s r)) ?x3668 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3593) ?x3780 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3512) (* 18 (* x00 r)) ?x499 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2054 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x499 ?x500 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x501 ?x470)))
 (let (($x2901 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2901 (= ?x2054 0) (= ?x1569 0) (= ?x3682 0) $x2866 $x2332))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x969 (lambda ((r Int) (s Int) (x Int) )(let ((?x219 (* 6 r)))
 (let ((?x1599 (+ 3 ?x219 s)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x1546 (+ ?x280 x)))
 (let ((?x1383 (+ 1 r)))
 (let ((?x659 (* r x00)))
 (let ((?x672 (* (- 18) ?x659)))
 (let ((?x549 (* r x)))
 (let ((?x550 (* 18 ?x549)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x426 (* s00 r00)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x301 (* r00 r00)))
 (let ((?x2115 (* (- 12) ?x301)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x4703 (* 7 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x4747 (+ ?x43 (* (- 7) s) ?x56 ?x4703 ?x500 ?x501 (* 21 (* r r)) ?x2115 (* 3 (* ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599 ?x1599)) (* (- 19) (* r s)) (* (- 48) (* r r00 r00)) (* 25 (* r s00)) ?x504 (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) ?x470 (* 6 (* s s)) ?x550 (* 12 (* r x x s00 r00)) (* 6 (* x x s00 r00)) (* 6 (* r r x x s00 r00)) (* 6 (* r r s s x00)) (* 3 (* s s r00)) ?x672 (* (- 18) (* r s00 r00)) (* (- 6) (* ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* 9 (* s s s)) (* 27 (* r s s)) (* (- 12) (* s x)) (* 6 (* r r s s s00 r00)) (* 36 (* r s s r00 r00)) (* 6 (* x x)) (* (- 12) (* s x x00)) (* (- 24) (* r s x x00)) (* (- 7) (* s s s00)) (* (- 24) (* r s x s00 r00)) (* 12 (* r s s s00 r00)) (* 12 (* s s r00 r00)) (* (- 12) (* r r s x x00)) (* (- 12) (* s x s00 r00)) (* 33 (* r r s00)) (* 19 (* r r r s00)) (* 6 (* r s s r00)) (* 6 (* s s x00)) (* (- 18) (* r r s00 r00)) (* 3 (* r r s s r00)) (* (- 6) (* r r r s00 r00)) (* 12 (* r s s x00)) (* (- 24) (* r r s s x)) (* (- 48) (* r s s x)) (* (- 24) (* s s x)) (* 39 (* r r r r)) (* 45 (* r r r)) (* (- 9) (* r r00)) (* (- 9) (* r r r00)) (* (- 3) (* r r r r00)) (* (- 6) (* s x r00)) (* 21 (* s x x)) (* 42 (* r s x x)) (* 21 (* r r s x x)) (* 3 (* r r x x r00)) (* 3 (* r00 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* (- 6) (* r r x x x)) (* (- 12) (* r x x x)) (* (- 6) (* x x x)) (* 9 (* r r s s s)) (* 18 (* r s s s)) (* 36 (* r r r00 r00 r00)) (* 12 (* r r r r00 r00 r00)) (* (- 72) (* r r r00 r00)) (* (- 12) (* r r r r r00 r00)) (* (- 48) (* r r r r00 r00)) (* 36 (* r r00 r00 r00)) (* 6 (* x x x00)) (* 12 (* r x x x00)) (* 6 (* r r x x x00)) (* (- 3) (* s00 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x1546 ?x1546 ?x1599)) (* 3 (* x x r00)) (* (- 12) (* r s x r00)) (* (- 15) (* r r s)) (* (- 1) (* r r r s)) (* 2 (* r r r r s)) (* 6 (* r r r x)) (* 18 (* r r x)) (* (- 12) (* r r s x s00 r00)) (* (- 6) (* r r r x00)) (* (- 18) (* r r x00)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* 6 (* r00 s00 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* 4 (* r r r r s00)) (* (- 15) (* r r x x s00)) (* (- 18) (* r x x s00)) (* (- 7) (* x x s00)) (* 12 (* r r r r r)) (* 30 (* r r s x s00)) (* 36 (* r s x s00)) (* 14 (* s x s00)) (* (- 15) (* r r s s s00)) (* 6 (* x00 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* (- 18) (* r s s s00)) (* (- 12) (* s s r00 r00 r00)) (* (- 24) (* r s s r00 r00 r00)) (* (- 12) (* r r s s r00 r00 r00)) (* 24 (* s x r00 r00 r00)) (* 48 (* r s x r00 r00 r00)) (* 24 (* r r s x r00 r00 r00)) (* (- 12) (* x x r00 r00 r00)) (* (- 24) (* r x x r00 r00 r00)) (* (- 12) (* r r x x r00 r00 r00)) (* (- 54) (* r s x)) (* (- 72) (* r r s x)) (* (- 30) (* r r r s x)) (* (- 6) (* r r s x r00)) (* 36 (* r r x x)) (* 15 (* r r r x x)) (* 27 (* r x x)) (* 15 (* r r r s s)) (* 36 (* r r s s)) (* 6 (* s s s00 r00)) (* 6 (* r x x r00)) (* (- 24) (* s x r00 r00)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x1546 ?x1546 ?x1546 ?x1599 ?x1599 ?x1599)) (* (- 72) (* r s x r00 r00)) (* 12 (* r r r s s r00 r00)) (* (- 72) (* r r s x r00 r00)) (* (- 24) (* r r r s x r00 r00)) (* 12 (* x x r00 r00)) (* 36 (* r x x r00 r00)) (* 36 (* r r x x r00 r00)) (* 36 (* r r s s r00 r00)) (* 12 (* r r r x x r00 r00)) (* (- 4) (* r r r s s s00)) (* 8 (* r r r s x s00)) (* (- 4) (* r r r x x s00)))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x565 (* s r00 r00)))
 (let ((?x864 (* (- 36) ?x565)))
 (let ((?x522 (* r00 x00)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1377 (+ ?x143 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s s)) ?x864 ?x1365 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x732 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1129 (* 108 (* s x)) (* (- 108) (* x x)) ?x883 (* 12 (* s s s00)) ?x1371 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1375 (* 216 (* x x00)) ?x1376)))
 (let (($x1378 (= ?x1377 0)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1079 (+ ?x143 ?x987 (* (- 24) (* r s)) (* 24 (* r s00)) ?x564 ?x551 ?x569 (* 54 ?x549) (* 36 (* r x r00)) ?x864 ?x916 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1000 (* 4 (* s s r00)) (* (- 54) ?x659) ?x696 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x806 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x890 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1084 (= ?x1079 0)))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x745 (+ ?x47 ?x378 (* (- 9) (* r s)) (* 9 (* r s00)) ?x541 ?x536 ?x546 ?x550 (* 6 (* r s r00)) (* (- 6) ?x565) ?x604 (* 18 (* x r00)) ?x648 ?x672 (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x752 (= ?x745 0)))
 (let ((?x44 (* 3 s00)))
 (let ((?x499 (* (- 3) s)))
 (let ((?x505 (+ ?x43 ?x499 ?x56 ?x44 ?x500 ?x501 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x504 ?x470)))
 (let (($x506 (= ?x505 0)))
 (let (($x334 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x301)) 0)))
 (let (($x4753 (and $x334 $x506 $x752 $x1084 $x1378 (not (= ?x4747 0)))))
 (let ((?x3758 (+ 3 s ?x219)))
 (let ((?x3654 (+ x ?x280)))
 (let ((?x2300 (+ (* 3 (* s00 ?x1383 ?x1383 ?x1383)) (* (- 6) (* r00 s00 ?x1383 ?x1383 ?x1383)) (* 3 (* r00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758 ?x3758)) (* (- 3) (* r00 ?x1383 ?x1383 ?x1383)) (* 3 (* ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 6) (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654)) (* (- 6) (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 6 (* x00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 12 (* r00 r00 r00 ?x1383 ?x1383 ?x1383)) (* (- 12) (* r00 r00 ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* x00 ?x1383 ?x1383 ?x3654 ?x3654)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 3 (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3758)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)) (* 2 (* ?x1383 ?x1383 ?x1383 ?x1383 ?x3758)) (* 3 (* r00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 6) (* x00 ?x1383 ?x1383 ?x1383)) (* 6 (* ?x1383 ?x1383 ?x1383 ?x3654)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 4 (* s00 ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 3) (* s00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383 ?x3654 ?x3654)) (* 3 (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758 ?x3758)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 3) (* s00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3758)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3758)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)))))
 (let (($x2332 (not (= ?x2300 0))))
 (let ((?x3711 (* 108 ?x1346)))
 (let ((?x3071 (* (- 9) s)))
 (let ((?x3512 (* r00 r00 s00)))
 (let ((?x1781 (* (- 36) ?x3512)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1518 (* 51 ?x591)))
 (let ((?x3593 (* r00 r00 s)))
 (let ((?x3955 (* 36 ?x3593)))
 (let ((?x1457 (* 16 ?x1184)))
 (let ((?x900 (* (- 108) ?x805)))
 (let ((?x3726 (* (- 432) ?x882)))
 (let ((?x3183 (* 108 ?x522)))
 (let ((?x2932 (+ (* 216 (* r00 s00 x00)) ?x3183 (* (- 54) (* r00 s00)) (* 15 ?x545) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3726 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x900 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1457 (* (- 108) (* x s)) ?x3955 ?x1518 (* (- 108) (* r00 x)) ?x137 ?x1781 ?x3071 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3711)))
 (let (($x2866 (= ?x2932 0)))
 (let ((?x1782 (* 15 ?x591)))
 (let ((?x1772 (* 36 ?x877)))
 (let ((?x1775 (* (- 6) ?x805)))
 (let ((?x2569 (* 54 ?x522)))
 (let ((?x3682 (+ (* 24 (* s r)) ?x2569 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x545) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1775 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3955 ?x1772 ?x1782 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1781 (* 54 (* x00 r)) ?x3071 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x3780 (* 4 ?x591)))
 (let ((?x3668 (* 18 ?x522)))
 (let ((?x1569 (+ (* 9 (* s r)) ?x3668 (* (- 9) (* r00 s00)) (* (- 2) ?x545) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3593) ?x3780 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3512) (* 18 (* x00 r)) ?x499 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x2054 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x499 ?x500 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x501 ?x470)))
 (let (($x2901 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) ?x301)) 0)))
 (let (($x3532 (and $x2901 (= ?x2054 0) (= ?x1569 0) (= ?x3682 0) $x2866 $x2332)))
 (rewrite (= $x3532 $x4753))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2208 (exists ((r Int) (s Int) (x Int) )(! (let ((?x280 (* (- 1) s)))
 (let ((?x3654 (+ x ?x280)))
 (let ((?x1383 (+ 1 r)))
 (let ((?x219 (* 6 r)))
 (let ((?x3758 (+ 3 s ?x219)))
 (let ((?x2300 (+ (* 3 (* s00 ?x1383 ?x1383 ?x1383)) (* (- 6) (* r00 s00 ?x1383 ?x1383 ?x1383)) (* 3 (* r00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758 ?x3758)) (* (- 3) (* r00 ?x1383 ?x1383 ?x1383)) (* 3 (* ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 6) (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654)) (* (- 6) (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 6 (* x00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 12 (* r00 r00 r00 ?x1383 ?x1383 ?x1383)) (* (- 12) (* r00 r00 ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* x00 ?x1383 ?x1383 ?x3654 ?x3654)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 3 (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3758)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)) (* 2 (* ?x1383 ?x1383 ?x1383 ?x1383 ?x3758)) (* 3 (* r00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 6) (* x00 ?x1383 ?x1383 ?x1383)) (* 6 (* ?x1383 ?x1383 ?x1383 ?x3654)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 4 (* s00 ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 3) (* s00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383 ?x3654 ?x3654)) (* 3 (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758 ?x3758)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 3) (* s00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3758)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3758)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)))))
 (let (($x2332 (not (= ?x2300 0))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x3711 (* 108 ?x1346)))
 (let ((?x3071 (* (- 9) s)))
 (let ((?x3512 (* r00 r00 s00)))
 (let ((?x1781 (* (- 36) ?x3512)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1518 (* 51 ?x591)))
 (let ((?x3593 (* r00 r00 s)))
 (let ((?x3955 (* 36 ?x3593)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1457 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x900 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3726 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3183 (* 108 ?x522)))
 (let ((?x2932 (+ (* 216 (* r00 s00 x00)) ?x3183 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3726 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x900 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1457 (* (- 108) (* x s)) ?x3955 ?x1518 (* (- 108) (* r00 x)) ?x137 ?x1781 ?x3071 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3711)))
 (let (($x2866 (= ?x2932 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x3936 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3593) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 ?x3512) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x3667 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3593) ?x604 (* 18 (* r00 x)) ?x378 (* 6 ?x3512) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x483 (* (- 12) ?x469)))
 (let ((?x59 (* 6 x00)))
 (let ((?x448 (* (- 6) x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1315 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) ?x448 ?x59 ?x483)))
 (let (($x2901 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2901 (= ?x1315 0) (= ?x3667 0) (= ?x3936 0) $x2866 $x2332))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3480 (lambda ((r Int) (s Int) (x Int) )(let ((?x280 (* (- 1) s)))
 (let ((?x3654 (+ x ?x280)))
 (let ((?x1383 (+ 1 r)))
 (let ((?x219 (* 6 r)))
 (let ((?x3758 (+ 3 s ?x219)))
 (let ((?x2300 (+ (* 3 (* s00 ?x1383 ?x1383 ?x1383)) (* (- 6) (* r00 s00 ?x1383 ?x1383 ?x1383)) (* 3 (* r00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758 ?x3758)) (* (- 3) (* r00 ?x1383 ?x1383 ?x1383)) (* 3 (* ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 6) (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654)) (* (- 6) (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 6 (* x00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 12 (* r00 r00 r00 ?x1383 ?x1383 ?x1383)) (* (- 12) (* r00 r00 ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* x00 ?x1383 ?x1383 ?x3654 ?x3654)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 3 (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3758)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)) (* 2 (* ?x1383 ?x1383 ?x1383 ?x1383 ?x3758)) (* 3 (* r00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 6) (* x00 ?x1383 ?x1383 ?x1383)) (* 6 (* ?x1383 ?x1383 ?x1383 ?x3654)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 4 (* s00 ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 3) (* s00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383 ?x3654 ?x3654)) (* 3 (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758 ?x3758)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 3) (* s00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3758)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3758)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)))))
 (let (($x2332 (not (= ?x2300 0))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x3711 (* 108 ?x1346)))
 (let ((?x3071 (* (- 9) s)))
 (let ((?x3512 (* r00 r00 s00)))
 (let ((?x1781 (* (- 36) ?x3512)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1518 (* 51 ?x591)))
 (let ((?x3593 (* r00 r00 s)))
 (let ((?x3955 (* 36 ?x3593)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1457 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x900 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3726 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3183 (* 108 ?x522)))
 (let ((?x2932 (+ (* 216 (* r00 s00 x00)) ?x3183 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3726 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x900 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1457 (* (- 108) (* x s)) ?x3955 ?x1518 (* (- 108) (* r00 x)) ?x137 ?x1781 ?x3071 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3711)))
 (let (($x2866 (= ?x2932 0)))
 (let ((?x1782 (* 15 ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x1772 (* 36 ?x877)))
 (let ((?x1775 (* (- 6) ?x805)))
 (let ((?x2569 (* 54 ?x522)))
 (let ((?x3682 (+ (* 24 (* s r)) ?x2569 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1775 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3955 ?x1772 ?x1782 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1781 (* 54 (* x00 r)) ?x3071 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x499 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3780 (* 4 ?x591)))
 (let ((?x3668 (* 18 ?x522)))
 (let ((?x1569 (+ (* 9 (* s r)) ?x3668 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3593) ?x3780 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3512) (* 18 (* x00 r)) ?x499 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2054 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x499 ?x500 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x501 ?x470)))
 (let (($x2901 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3532 (and $x2901 (= ?x2054 0) (= ?x1569 0) (= ?x3682 0) $x2866 $x2332)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x3936 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3593) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 ?x3512) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x3667 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3593) ?x604 (* 18 (* r00 x)) ?x378 (* 6 ?x3512) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x483 (* (- 12) ?x469)))
 (let ((?x59 (* 6 x00)))
 (let ((?x448 (* (- 6) x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1315 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) ?x448 ?x59 ?x483)))
 (let (($x1221 (and $x2901 (= ?x1315 0) (= ?x3667 0) (= ?x3936 0) $x2866 $x2332)))
 (rewrite (= $x1221 $x3532)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x277 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (- x s)))
 (let ((?x212 (+ r 1)))
 (let ((?x219 (* 6 r)))
 (let ((?x220 (+ s ?x219 3)))
 (let ((?x215 (- (* 3 ?x212 ?x212 ?x212 s00) (* 6 ?x212 ?x212 ?x212 r00 s00))))
 (let ((?x223 (- (+ ?x215 (* 3 ?x212 ?x212 r00 ?x216 ?x216)) (* 2 ?x212 ?x212 ?x212 ?x220 ?x220 ?x220 ?x216 ?x216 ?x216))))
 (let ((?x227 (+ (- ?x223 (* 3 ?x212 ?x212 ?x212 r00)) (* 3 ?x212 ?x212 ?x212 ?x212) (* 6 ?x212 ?x212 r00 ?x220 ?x220 s00 ?x216 ?x216 ?x216))))
 (let ((?x232 (- (- ?x227 (* 6 ?x212 ?x212 ?x216 ?x216 ?x216)) (* 6 ?x212 ?x212 ?x220 ?x220 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x236 (+ (- ?x232 (* 4 ?x212 ?x212 ?x212 ?x220 ?x220 s00 ?x216 ?x216 ?x216)) (* 6 ?x212 ?x212 ?x220 ?x220 ?x216 ?x216 ?x216 x00) (* 12 ?x212 ?x212 ?x212 r00 r00 r00))))
 (let ((?x245 (+ (- ?x236 (* 12 ?x212 ?x212 ?x212 ?x212 r00 r00)) (* 6 ?x212 ?x212 ?x216 ?x216 x00) (* 12 ?x212 ?x212 ?x212 r00 r00 ?x220 ?x220 ?x216 ?x216 ?x216) (* 3 ?x212 ?x212 ?x220 ?x216 ?x216) (* 12 ?x212 ?x212 ?x212 r00 r00 ?x216 ?x216) (* 2 ?x212 ?x212 ?x212 ?x212 ?x220) (* 3 ?x212 ?x212 r00 ?x220 ?x220 ?x216 ?x216 ?x216))))
 (let ((?x249 (+ (- ?x245 (* 6 ?x212 ?x212 ?x212 x00)) (* 6 ?x212 ?x212 ?x212 ?x216))))
 (let ((?x254 (+ (- ?x249 (* 3 ?x212 ?x212 ?x212 ?x220 ?x220 ?x216 ?x216 ?x216)) (* 4 ?x212 ?x212 ?x212 ?x212 s00) (* 6 ?x212 ?x212 r00 s00 ?x216 ?x216))))
 (let ((?x258 (- (- ?x254 (* 3 ?x212 ?x212 s00 ?x216 ?x216)) (* 12 ?x212 ?x212 r00 r00 r00 ?x216 ?x216))))
 (let ((?x267 (- (+ ?x258 (* 3 ?x212 ?x212 ?x220 ?x220 ?x220 ?x216 ?x216 ?x216)) (* 3 ?x212 ?x212 ?x212 ?x216 ?x216))))
 (let ((?x269 (- (- ?x267 (* 3 ?x212 ?x212 ?x220 ?x220 s00 ?x216 ?x216 ?x216)) (* 2 ?x212 ?x212 ?x212 ?x220 ?x216 ?x216))))
 (let ((?x270 (- ?x269 (* 12 ?x212 ?x212 r00 r00 r00 ?x220 ?x220 ?x216 ?x216 ?x216))))
 (let ((?x272 (- (- ?x270 (* 3 ?x212 ?x212 ?x212 ?x220)) (* 4 ?x212 ?x212 ?x212 s00 ?x216 ?x216))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x272 0))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3634 (lambda ((r Int) (s Int) (x Int) )(let ((?x280 (* (- 1) s)))
 (let ((?x3654 (+ x ?x280)))
 (let ((?x1383 (+ 1 r)))
 (let ((?x219 (* 6 r)))
 (let ((?x3758 (+ 3 s ?x219)))
 (let ((?x2300 (+ (* 3 (* s00 ?x1383 ?x1383 ?x1383)) (* (- 6) (* r00 s00 ?x1383 ?x1383 ?x1383)) (* 3 (* r00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758 ?x3758)) (* (- 3) (* r00 ?x1383 ?x1383 ?x1383)) (* 3 (* ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 6) (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654)) (* (- 6) (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 6 (* x00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 12 (* r00 r00 r00 ?x1383 ?x1383 ?x1383)) (* (- 12) (* r00 r00 ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* x00 ?x1383 ?x1383 ?x3654 ?x3654)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 3 (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3758)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)) (* 2 (* ?x1383 ?x1383 ?x1383 ?x1383 ?x3758)) (* 3 (* r00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 6) (* x00 ?x1383 ?x1383 ?x1383)) (* 6 (* ?x1383 ?x1383 ?x1383 ?x3654)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* 4 (* s00 ?x1383 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 3) (* s00 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383 ?x3654 ?x3654)) (* 3 (* ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758 ?x3758)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)) (* (- 3) (* s00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x3654 ?x3654 ?x3758)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383 ?x3654 ?x3654 ?x3654 ?x3758 ?x3758)) (* (- 3) (* ?x1383 ?x1383 ?x1383 ?x3758)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1383 ?x3654 ?x3654)))))
 (let (($x2332 (not (= ?x2300 0))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x3711 (* 108 ?x1346)))
 (let ((?x3071 (* (- 9) s)))
 (let ((?x3512 (* r00 r00 s00)))
 (let ((?x1781 (* (- 36) ?x3512)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1518 (* 51 ?x591)))
 (let ((?x3593 (* r00 r00 s)))
 (let ((?x3955 (* 36 ?x3593)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1457 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x900 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3726 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3183 (* 108 ?x522)))
 (let ((?x2932 (+ (* 216 (* r00 s00 x00)) ?x3183 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3726 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x900 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1457 (* (- 108) (* x s)) ?x3955 ?x1518 (* (- 108) (* r00 x)) ?x137 ?x1781 ?x3071 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3711)))
 (let (($x2866 (= ?x2932 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x3936 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3593) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 ?x3512) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x3667 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3593) ?x604 (* 18 (* r00 x)) ?x378 (* 6 ?x3512) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x483 (* (- 12) ?x469)))
 (let ((?x59 (* 6 x00)))
 (let ((?x448 (* (- 6) x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1315 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) ?x448 ?x59 ?x483)))
 (let (($x2901 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1221 (and $x2901 (= ?x1315 0) (= ?x3667 0) (= ?x3936 0) $x2866 $x2332)))
 (let ((?x216 (- x s)))
 (let ((?x212 (+ r 1)))
 (let ((?x220 (+ s ?x219 3)))
 (let ((?x215 (- (* 3 ?x212 ?x212 ?x212 s00) (* 6 ?x212 ?x212 ?x212 r00 s00))))
 (let ((?x223 (- (+ ?x215 (* 3 ?x212 ?x212 r00 ?x216 ?x216)) (* 2 ?x212 ?x212 ?x212 ?x220 ?x220 ?x220 ?x216 ?x216 ?x216))))
 (let ((?x227 (+ (- ?x223 (* 3 ?x212 ?x212 ?x212 r00)) (* 3 ?x212 ?x212 ?x212 ?x212) (* 6 ?x212 ?x212 r00 ?x220 ?x220 s00 ?x216 ?x216 ?x216))))
 (let ((?x232 (- (- ?x227 (* 6 ?x212 ?x212 ?x216 ?x216 ?x216)) (* 6 ?x212 ?x212 ?x220 ?x220 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x236 (+ (- ?x232 (* 4 ?x212 ?x212 ?x212 ?x220 ?x220 s00 ?x216 ?x216 ?x216)) (* 6 ?x212 ?x212 ?x220 ?x220 ?x216 ?x216 ?x216 x00) (* 12 ?x212 ?x212 ?x212 r00 r00 r00))))
 (let ((?x245 (+ (- ?x236 (* 12 ?x212 ?x212 ?x212 ?x212 r00 r00)) (* 6 ?x212 ?x212 ?x216 ?x216 x00) (* 12 ?x212 ?x212 ?x212 r00 r00 ?x220 ?x220 ?x216 ?x216 ?x216) (* 3 ?x212 ?x212 ?x220 ?x216 ?x216) (* 12 ?x212 ?x212 ?x212 r00 r00 ?x216 ?x216) (* 2 ?x212 ?x212 ?x212 ?x212 ?x220) (* 3 ?x212 ?x212 r00 ?x220 ?x220 ?x216 ?x216 ?x216))))
 (let ((?x249 (+ (- ?x245 (* 6 ?x212 ?x212 ?x212 x00)) (* 6 ?x212 ?x212 ?x212 ?x216))))
 (let ((?x254 (+ (- ?x249 (* 3 ?x212 ?x212 ?x212 ?x220 ?x220 ?x216 ?x216 ?x216)) (* 4 ?x212 ?x212 ?x212 ?x212 s00) (* 6 ?x212 ?x212 r00 s00 ?x216 ?x216))))
 (let ((?x258 (- (- ?x254 (* 3 ?x212 ?x212 s00 ?x216 ?x216)) (* 12 ?x212 ?x212 r00 r00 r00 ?x216 ?x216))))
 (let ((?x267 (- (+ ?x258 (* 3 ?x212 ?x212 ?x220 ?x220 ?x220 ?x216 ?x216 ?x216)) (* 3 ?x212 ?x212 ?x212 ?x216 ?x216))))
 (let ((?x269 (- (- ?x267 (* 3 ?x212 ?x212 ?x220 ?x220 s00 ?x216 ?x216 ?x216)) (* 2 ?x212 ?x212 ?x212 ?x220 ?x216 ?x216))))
 (let ((?x270 (- ?x269 (* 12 ?x212 ?x212 r00 r00 r00 ?x220 ?x220 ?x216 ?x216 ?x216))))
 (let ((?x272 (- (- ?x270 (* 3 ?x212 ?x212 ?x212 ?x220)) (* 4 ?x212 ?x212 ?x212 s00 ?x216 ?x216))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x276 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x272 0))))))
 (rewrite (= $x276 $x1221))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x278 (asserted $x277)))
 (let ((@x3663 (mp (mp @x278 (quant-intro (proof-bind ?x3634) (= $x277 $x2208)) $x2208) (rewrite (= $x2208 $x2208)) $x2208)))
 (let ((@x2779 (mp (mp @x3663 (quant-intro (proof-bind ?x3480) (= $x2208 $x3529)) $x3529) (quant-intro (proof-bind ?x969) (= $x3529 $x912)) $x912)))
 (let ((@x743 (mp (mp~ @x2779 (sk (~ $x912 $x1070)) $x1070) (rewrite (= $x1070 $x4301)) $x4301)))
 (let ((@x3886 (and-elim @x743 $x819)))
 (let ((@x1261 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x819) $x445)) @x3886 $x445)))
 (let (($x1294 (>= ?x1083 0)))
 (let ((@x1851 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x819) $x1294)) @x3886 $x1294)))
 (let (($x459 (<= ?x1131 0)))
 (let ((@x432 (and-elim @x743 $x1134)))
 (let ((@x2803 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1134) $x459)) @x432 $x459)))
 (let (($x443 (>= ?x1131 0)))
 (let ((@x435 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1134) $x443)) @x432 $x443)))
 (let (($x444 (<= ?x1910 0)))
 (let ((@x434 (and-elim @x743 $x1911)))
 (let ((@x1411 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1911) $x444)) @x434 $x444)))
 (let (($x460 (>= ?x1910 0)))
 (let ((@x1182 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1911) $x460)) @x434 $x460)))
 (let (($x446 (<= ?x428 0)))
 (let ((@x436 (and-elim @x743 $x429)))
 (let ((@x1356 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x429) $x446)) @x436 $x446)))
 (let (($x461 (>= ?x428 0)))
 (let ((@x734 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x429) $x461)) @x436 $x461)))
 (let (($x3869 (not (<= ?x649 0))))
 (let (($x466 (>= ?x649 0)))
 (let ((@x1157 ((_ th-lemma arith) (hypothesis (not $x466)) @x1851 @x1261 @x1851 @x1261 @x435 @x2803 @x734 @x1356 @x1182 @x1411 @x734 @x1356 @x1182 @x1411 @x435 @x2803 @x1851 @x1261 false)))
 (let ((@x415 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3525 $x3869 (not $x466))) (and-elim @x743 $x3883) (or $x3869 (not $x466)))))
 ((_ th-lemma arith) (unit-resolution @x415 (lemma @x1157 $x466) $x3869) @x1851 @x1261 @x1851 @x1261 @x435 @x2803 @x734 @x1356 @x1182 @x1411 @x734 @x1356 @x1182 @x1411 @x435 @x2803 @x1851 @x1261 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        41
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1310
 :arith-nonlinear-bounds    34
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      11
 :arith-tableau-max-columns 226
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.71
 :memory                    3.65
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                4610792
 :num-checks                1
 :propagations              12
 :rlimit-count              67118
 :time                      0.05
 :total-time                0.06)
