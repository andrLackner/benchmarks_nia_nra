unsat
((set-logic NRA)
(declare-fun d!6 () Real)
(declare-fun b!7 () Real)
(declare-fun a!8 () Real)
(declare-fun y!5 () Real)
(proof
(let ((?x734 (* a00 d!6)))
 (let ((?x762 (+ (* 2.0 (* b!7 y!5)) (* (- 1.0) (* a!8 d!6)) (* (- 2.0) (* y00 b!7)) ?x734)))
 (let (($x553 (>= ?x762 0.0)))
 (let (($x547 (= 0.0 ?x762)))
 (let ((@x527 (symm (commutativity (= $x547 (= ?x762 0.0))) (= (= ?x762 0.0) $x547))))
 (let (($x1240 (= ?x762 0.0)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x535 (= (+ ?x30 ?x94 (* (- 1.0) (* d00 a!8)) (* 2.0 (* b00 y!5))) 0.0)))
 (let ((?x275 (* y00 b!7)))
 (let ((?x694 (+ (* (- 1.0) (* b!7 y!5)) (* (/ 1.0 2.0) (* a!8 d!6)) ?x275 (* (- (/ 1.0 2.0)) ?x734))))
 (let ((?x1060 (* b!7 b!7 b!7 a!8 a!8 d!6 d!6 d!6 y!5 y!5 y!5)))
 (let ((?x533 (* (- (/ 1.0 64.0)) ?x1060)))
 (let ((?x564 (* b!7 b!7 b!7 b!7 a!8 d!6 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x578 (* (- (/ 1.0 256.0)) ?x564)))
 (let ((?x560 (* b!7 b!7 b!7 a!8 a!8 d!6 d!6 d!6 d!6 d!6 y!5)))
 (let ((?x566 (* (- (/ 3.0 256.0)) ?x560)))
 (let ((?x555 (* b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x571 (* (- (/ 1.0 512.0)) ?x555)))
 (let ((?x549 (* b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 y!5)))
 (let ((?x558 (* (- (/ 3.0 256.0)) ?x549)))
 (let ((?x548 (* b!7 b!7 b!7 b!7 a!8 d!6 d!6 d!6 d!6 d!6 y!5)))
 (let ((?x557 (* (- (/ 3.0 128.0)) ?x548)))
 (let ((?x543 (* b!7 b!7 b!7 a!8 a!8 d!6 d!6 d!6 d!6 y!5 y!5)))
 (let ((?x551 (* (- (/ 3.0 128.0)) ?x543)))
 (let ((?x542 (* b!7 b!7 b!7 b!7 a!8 d!6 d!6 d!6 d!6 y!5 y!5)))
 (let ((?x550 (* (- (/ 3.0 64.0)) ?x542)))
 (let ((?x536 (* b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 y!5 y!5)))
 (let ((?x546 (* (- (/ 3.0 128.0)) ?x536)))
 (let ((?x529 (* b!7 b!7 b!7 b!7 a!8 d!6 d!6 d!6 y!5 y!5 y!5)))
 (let ((?x1058 (* (- (/ 1.0 32.0)) ?x529)))
 (let ((?x526 (* b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 y!5 y!5 y!5)))
 (let ((?x539 (* (- (/ 1.0 64.0)) ?x526)))
 (let ((?x521 (* b!7 d!6 d!6)))
 (let ((?x341 (* (/ 1.0 8.0) ?x521)))
 (let ((?x519 (* b!7 d!6 y!5)))
 (let ((?x523 (* (/ 1.0 4.0) ?x519)))
 (let ((?x330 (* b!7 b!7 b!7 a!8 a!8 d!6 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x1189 (* (- (/ 1.0 512.0)) ?x330)))
 (let ((?x908 (+ ?x1189 ?x523 ?x341 ?x539 ?x1058 ?x546 ?x550 ?x551 ?x557 ?x558 ?x571 ?x566 ?x578 ?x533)))
 (let ((?x871 (* (/ 1.0 2.0) d!6)))
 (let ((?x175 (* (/ 1.0 16.0) (* b!7 b!7 b!7 b!7 d!6 d!6 d!6 y!5 y!5))))
 (let ((?x514 (* (/ 3.0 64.0) (* b!7 b!7 a!8 a!8 d!6 d!6 d!6 d!6 d!6))))
 (let ((?x723 (* (/ 1.0 16.0) (* b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 y!5))))
 (let ((?x604 (* (/ 1.0 16.0) (* b!7 a!8 a!8 a!8 d!6 d!6 d!6 y!5 y!5))))
 (let ((?x628 (* (/ 3.0 16.0) (* b!7 b!7 a!8 a!8 d!6 d!6 d!6 y!5 y!5))))
 (let ((?x189 (* (/ 3.0 16.0) (* b!7 b!7 b!7 a!8 d!6 d!6 d!6 y!5 y!5))))
 (let ((?x1053 (* (/ 3.0 16.0) (* b!7 b!7 a!8 a!8 d!6 d!6 d!6 d!6 y!5))))
 (let ((?x1057 (* (/ 1.0 64.0) (* b!7 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6))))
 (let ((?x720 (* (/ 1.0 64.0) (* b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6))))
 (let ((?x488 (* (/ 1.0 16.0) (* b!7 a!8 a!8 a!8 d!6 d!6 d!6 d!6 y!5))))
 (let ((?x364 (* (/ 3.0 64.0) (* b!7 b!7 b!7 a!8 d!6 d!6 d!6 d!6 d!6))))
 (let ((?x453 (* (/ 3.0 16.0) (* b!7 b!7 b!7 a!8 d!6 d!6 d!6 d!6 y!5))))
 (let ((?x353 (+ ?x453 ?x364 ?x488 ?x720 ?x1057 ?x1053 ?x189 ?x628 ?x604 ?x723 ?x514 ?x175 ?x871)))
 (let ((?x925 (* ?x353 ?x908 ?x694)))
 (let (($x184 (= ?x925 0.0)))
 (let (($x935 (not $x184)))
 (let ((?x1050 (* y00 b!7 b!7 b!7 b!7 a!8 a!8 d!6 d!6 d!6 d!6 y!5 y!5 y!5)))
 (let ((?x732 (* y00 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 d!6 y!5 y!5 y!5 y!5 y!5)))
 (let ((?x729 (* b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 d!6 y!5 y!5 y!5 y!5 y!5 y!5)))
 (let ((?x619 (* b!7 b!7 b!7 b!7 a!8 a!8 d!6 d!6 d!6 d!6 y!5 y!5 y!5 y!5)))
 (let ((?x595 (* b!7 b!7 b!7 a!8 a!8 a!8 d!6 d!6 d!6 d!6 y!5 y!5 y!5 y!5)))
 (let ((?x577 (* a00 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 d!6 d!6 y!5 y!5 y!5 y!5 y!5)))
 (let ((?x568 (* b!7 b!7 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 y!5 y!5 y!5)))
 (let ((?x525 (* b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 d!6 d!6 y!5 y!5 y!5 y!5 y!5)))
 (let ((?x250 (* a00 b!7 b!7 b!7 a!8 a!8 d!6 d!6 d!6 d!6 d!6 y!5 y!5 y!5)))
 (let ((?x179 (* a00 b!7 b!7 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 y!5 y!5 y!5)))
 (let ((?x178 (* b!7 b!7 b!7 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 y!5 y!5 y!5)))
 (let ((?x173 (* y00 b!7 b!7 b!7 a!8 a!8 a!8 d!6 d!6 d!6 d!6 y!5 y!5 y!5)))
 (let ((?x713 (+ (* (/ 1.0 16.0) (* b!7 a!8 d!6 d!6 d!6 y!5)) (* (/ 1.0 64.0) ?x173) (* (- (/ 1.0 256.0)) ?x178) (* (- (/ 1.0 128.0)) ?x179) (* (/ 1.0 256.0) ?x250) (* (- (/ 1.0 8.0)) (* b!7 b!7 d!6 d!6 y!5 y!5)) (* (- (/ 1.0 16.0)) (* a00 b!7 d!6 d!6 d!6 y!5)) (* (/ 1.0 8.0) (* y00 b!7 b!7 d!6 d!6 y!5)) (* (- (/ 1.0 2048.0)) ?x525) (* (/ 1.0 128.0) ?x568) (* (/ 1.0 2048.0) ?x577) (* (- (/ 1.0 64.0)) ?x595) (* (/ 1.0 128.0) ?x619) (* (/ 1.0 1024.0) ?x729) (* (- (/ 1.0 1024.0)) ?x732) (* (- (/ 1.0 128.0)) ?x1050))))
 (let (($x509 (= ?x713 0.0)))
 (let (($x435 (not $x509)))
 (let (($x310 (or $x435 $x935)))
 (let (($x917 (and $x310 $x535 (= (+ (* d00 b!7) (* (- 1.0) (* b00 d!6))) 0.0) $x1240)))
 (let ((?x1123 (* d!6 a!8)))
 (let ((?x249 (+ ?x1123 (* (- 2.0) (* y!5 b!7)) (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00)))))
 (let (($x351 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x94 (* 2.0 (* y!5 b00))) 0.0)))
 (let ((?x1125 (* b!7 y00)))
 (let ((?x1127 (+ (* (/ 1.0 2.0) ?x1123) (* (- 1.0) (* y!5 b!7)) ?x1125 (* (- (/ 1.0 2.0)) (* d!6 a00)))))
 (let ((?x1043 (* d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)))
 (let ((?x1120 (* d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)))
 (let ((?x1118 (* d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)))
 (let ((?x1116 (* y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)))
 (let ((?x875 (* y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)))
 (let ((?x1114 (* y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)))
 (let ((?x1113 (* y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)))
 (let ((?x1109 (* y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)))
 (let ((?x1107 (* y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)))
 (let ((?x1103 (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)))
 (let ((?x1100 (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)))
 (let ((?x1104 (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)))
 (let ((?x1121 (+ (* (/ 1.0 4.0) (* y!5 d!6 b!7)) (* (- (/ 1.0 64.0)) ?x1104) (* (/ 1.0 8.0) (* d!6 d!6 b!7)) (* (- (/ 1.0 64.0)) ?x1100) (* (- (/ 1.0 32.0)) ?x1103) (* (- (/ 3.0 128.0)) ?x1107) (* (- (/ 3.0 64.0)) ?x1109) (* (- (/ 3.0 128.0)) ?x1113) (* (- (/ 3.0 256.0)) ?x1114) (* (- (/ 3.0 128.0)) ?x875) (* (- (/ 3.0 256.0)) ?x1116) (* (- (/ 1.0 512.0)) ?x1118) (* (- (/ 1.0 256.0)) ?x1120) (* (- (/ 1.0 512.0)) ?x1043))))
 (let ((?x1095 (+ ?x871 (* (/ 1.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 a!8 a!8 a!8)) (* (/ 1.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 3.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 3.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8 a!8)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 3.0 16.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 3.0 16.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 d!6 d!6 b!7 a!8 a!8 a!8)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 3.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 3.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 a!8 a!8 a!8)))))
 (let ((?x1033 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a00)))
 (let ((?x1073 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 y00)))
 (let ((?x283 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1146 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x317 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a00)))
 (let ((?x327 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 y00)))
 (let ((?x818 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8)))
 (let ((?x1257 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8)))
 (let ((?x314 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8 a!8 a00)))
 (let ((?x744 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 y00)))
 (let ((?x701 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8)))
 (let ((?x216 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8 a!8 a!8)))
 (let ((?x1074 (+ (* (/ 1.0 16.0) (* y!5 d!6 d!6 d!6 b!7 a!8)) (* (- (/ 1.0 8.0)) (* y!5 y!5 d!6 d!6 b!7 b!7)) (* (/ 1.0 8.0) (* y!5 d!6 d!6 b!7 b!7 y00)) (* (- (/ 1.0 16.0)) (* y!5 d!6 d!6 d!6 b!7 a00)) (* (/ 1.0 128.0) ?x216) (* (- (/ 1.0 64.0)) ?x701) (* (/ 1.0 64.0) ?x744) (* (- (/ 1.0 128.0)) ?x314) (* (- (/ 1.0 256.0)) ?x1257) (* (/ 1.0 128.0) ?x818) (* (- (/ 1.0 128.0)) ?x327) (* (/ 1.0 256.0) ?x317) (* (- (/ 1.0 2048.0)) ?x1146) (* (/ 1.0 1024.0) ?x283) (* (- (/ 1.0 1024.0)) ?x1073) (* (/ 1.0 2048.0) ?x1033))))
 (let (($x698 (and (or (not (= ?x1074 0.0)) (not (= (* ?x1095 ?x1121 ?x1127) 0.0))) $x351 (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) (= ?x249 0.0))))
 (let (($x104 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x112 (* y b)))
 (let ((?x134 (* (- 2.0) ?x112)))
 (let ((?x102 (* d a)))
 (let (($x169 (= (+ ?x102 ?x134 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x91 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x126 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x94 (* 2.0 (* y b00))) 0.0)))
 (let ((?x139 (* b y00)))
 (let ((?x176 (* (- 1.0) ?x112)))
 (let ((?x143 (* (/ 1.0 2.0) ?x102)))
 (let ((?x228 (+ ?x143 ?x176 ?x139 (* (- (/ 1.0 2.0)) (* d a00)))))
 (let ((?x1251 (* (- (/ 1.0 512.0)) (* d d d d d d b b b a a))))
 (let ((?x1248 (* (- (/ 1.0 256.0)) (* d d d d d d b b b b a))))
 (let ((?x1245 (* (- (/ 1.0 512.0)) (* d d d d d d b b b b b))))
 (let ((?x1241 (* (- (/ 3.0 256.0)) (* y d d d d d b b b a a))))
 (let ((?x1238 (* (- (/ 3.0 128.0)) (* y d d d d d b b b b a))))
 (let ((?x1235 (* (- (/ 3.0 256.0)) (* y d d d d d b b b b b))))
 (let ((?x1231 (* (- (/ 3.0 128.0)) (* y y d d d d b b b a a))))
 (let ((?x1228 (* (- (/ 3.0 64.0)) (* y y d d d d b b b b a))))
 (let ((?x1224 (* (- (/ 3.0 128.0)) (* y y d d d d b b b b b))))
 (let ((?x1220 (* (- (/ 1.0 32.0)) (* y y y d d d b b b b a))))
 (let ((?x1216 (* (- (/ 1.0 64.0)) (* y y y d d d b b b b b))))
 (let ((?x287 (* (- (/ 1.0 64.0)) (* y y y d d d b b b a a))))
 (let ((?x258 (* (/ 1.0 4.0) (* y d b))))
 (let ((?x1247 (+ ?x258 ?x287 (* (/ 1.0 8.0) (* d d b)) ?x1216 ?x1220 ?x1224 ?x1228 ?x1231 ?x1235 ?x1238 ?x1241 ?x1245 ?x1248 ?x1251)))
 (let ((?x248 (* (/ 1.0 16.0) (* y y d d d b a a a))))
 (let ((?x111 (* (/ 1.0 2.0) d)))
 (let ((?x784 (+ ?x111 ?x248 (* (/ 1.0 16.0) (* y y d d d b b b b)) (* (/ 3.0 16.0) (* y y d d d b b b a)) (* (/ 3.0 16.0) (* y y d d d b b a a)) (* (/ 1.0 16.0) (* y d d d d b b b b)) (* (/ 3.0 16.0) (* y d d d d b b b a)) (* (/ 3.0 16.0) (* y d d d d b b a a)) (* (/ 1.0 16.0) (* y d d d d b a a a)) (* (/ 1.0 64.0) (* d d d d d b b b b)) (* (/ 3.0 64.0) (* d d d d d b b b a)) (* (/ 3.0 64.0) (* d d d d d b b a a)) (* (/ 1.0 64.0) (* d d d d d b a a a)))))
 (let ((?x482 (* y y y y y d d d d d d d b b b b a a a a a a00)))
 (let ((?x471 (* y y y y y d d d d d d b b b b b a a a a a y00)))
 (let ((?x460 (* y y y y y y d d d d d d b b b b b a a a a a)))
 (let ((?x449 (* y y y y y d d d d d d d b b b b a a a a a a)))
 (let ((?x438 (* y y y d d d d d b b b a a a00)))
 (let ((?x427 (* y y y d d d d b b b b a a y00)))
 (let ((?x417 (* y y y y d d d d b b b b a a)))
 (let ((?x407 (* y y y d d d d d b b b a a a)))
 (let ((?x396 (* y y y d d d d d b b a a a a00)))
 (let ((?x385 (* y y y d d d d b b b a a a y00)))
 (let ((?x375 (* y y y y d d d d b b b a a a)))
 (let ((?x365 (* y y y d d d d d b b a a a a)))
 (let ((?x487 (+ (* (/ 1.0 16.0) (* y d d d b a)) (* (- (/ 1.0 8.0)) (* y y d d b b)) (* (/ 1.0 8.0) (* y d d b b y00)) (* (- (/ 1.0 16.0)) (* y d d d b a00)) (* (/ 1.0 128.0) ?x365) (* (- (/ 1.0 64.0)) ?x375) (* (/ 1.0 64.0) ?x385) (* (- (/ 1.0 128.0)) ?x396) (* (- (/ 1.0 256.0)) ?x407) (* (/ 1.0 128.0) ?x417) (* (- (/ 1.0 128.0)) ?x427) (* (/ 1.0 256.0) ?x438) (* (- (/ 1.0 2048.0)) ?x449) (* (/ 1.0 1024.0) ?x460) (* (- (/ 1.0 1024.0)) ?x471) (* (/ 1.0 2048.0) ?x482))))
 (let (($x119 (not (= ?x487 0.0))))
 (and (or $x119 (not (= (* ?x784 ?x1247 ?x228) 0.0))) $x126 $x91 $x169)))))))))))))))))))))))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x1188 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x112 (* y b)))
 (let ((?x134 (* (- 2.0) ?x112)))
 (let ((?x102 (* d a)))
 (let (($x1204 (= (+ ?x102 ?x134 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x326 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let (($x980 (= (+ ?x94 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x923 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x1140 (* y00 b)))
 (let ((?x960 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x1140 ?x923)))
 (let ((?x111 (* (/ 1.0 2.0) d)))
 (let ((?x1164 (+ y ?x111)))
 (let ((?x68 (+ a b)))
 (let ((?x1028 (* (- (/ 1.0 64.0)) (* ?x68 ?x68 ?x1164 ?x1164 ?x1164 d d d b b b))))
 (let ((?x995 (+ ?x111 (* (/ 1.0 16.0) (* ?x68 ?x68 ?x68 ?x1164 ?x1164 d d d b)))))
 (let (($x993 (not (= (* ?x995 (+ (* (/ 1.0 4.0) (* ?x1164 d b)) ?x1028) ?x960) 0.0))))
 (let ((?x287 (* (- (/ 1.0 64.0)) (* y y y d d d b b b a a))))
 (let ((?x258 (* (/ 1.0 4.0) (* y d b))))
 (let ((?x248 (* (/ 1.0 16.0) (* y y d d d b a a a))))
 (let ((?x989 (* (+ ?x111 ?x248) (+ ?x258 ?x287) (+ (* (/ 1.0 2.0) ?x102) (* (- 1.0) ?x112) ?x1140 ?x923))))
 (let (($x1039 (or (not (= ?x989 0.0)) $x993)))
 (and $x1039 $x980 $x326 $x1204)))))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x88 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x112 (* y b)))
 (let ((?x134 (* (- 2.0) ?x112)))
 (let ((?x102 (* d a)))
 (let (($x169 (= (+ ?x102 ?x134 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x91 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x126 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x94 (* 2.0 (* y b00))) 0.0)))
 (let ((?x139 (* b y00)))
 (let ((?x176 (* (- 1.0) ?x112)))
 (let ((?x143 (* (/ 1.0 2.0) ?x102)))
 (let ((?x228 (+ ?x143 ?x176 ?x139 (* (- (/ 1.0 2.0)) (* d a00)))))
 (let ((?x1251 (* (- (/ 1.0 512.0)) (* d d d d d d b b b a a))))
 (let ((?x1248 (* (- (/ 1.0 256.0)) (* d d d d d d b b b b a))))
 (let ((?x1245 (* (- (/ 1.0 512.0)) (* d d d d d d b b b b b))))
 (let ((?x1241 (* (- (/ 3.0 256.0)) (* y d d d d d b b b a a))))
 (let ((?x1238 (* (- (/ 3.0 128.0)) (* y d d d d d b b b b a))))
 (let ((?x1235 (* (- (/ 3.0 256.0)) (* y d d d d d b b b b b))))
 (let ((?x1231 (* (- (/ 3.0 128.0)) (* y y d d d d b b b a a))))
 (let ((?x1228 (* (- (/ 3.0 64.0)) (* y y d d d d b b b b a))))
 (let ((?x1224 (* (- (/ 3.0 128.0)) (* y y d d d d b b b b b))))
 (let ((?x1220 (* (- (/ 1.0 32.0)) (* y y y d d d b b b b a))))
 (let ((?x1216 (* (- (/ 1.0 64.0)) (* y y y d d d b b b b b))))
 (let ((?x287 (* (- (/ 1.0 64.0)) (* y y y d d d b b b a a))))
 (let ((?x258 (* (/ 1.0 4.0) (* y d b))))
 (let ((?x1247 (+ ?x258 ?x287 (* (/ 1.0 8.0) (* d d b)) ?x1216 ?x1220 ?x1224 ?x1228 ?x1231 ?x1235 ?x1238 ?x1241 ?x1245 ?x1248 ?x1251)))
 (let ((?x248 (* (/ 1.0 16.0) (* y y d d d b a a a))))
 (let ((?x111 (* (/ 1.0 2.0) d)))
 (let ((?x784 (+ ?x111 ?x248 (* (/ 1.0 16.0) (* y y d d d b b b b)) (* (/ 3.0 16.0) (* y y d d d b b b a)) (* (/ 3.0 16.0) (* y y d d d b b a a)) (* (/ 1.0 16.0) (* y d d d d b b b b)) (* (/ 3.0 16.0) (* y d d d d b b b a)) (* (/ 3.0 16.0) (* y d d d d b b a a)) (* (/ 1.0 16.0) (* y d d d d b a a a)) (* (/ 1.0 64.0) (* d d d d d b b b b)) (* (/ 3.0 64.0) (* d d d d d b b b a)) (* (/ 3.0 64.0) (* d d d d d b b a a)) (* (/ 1.0 64.0) (* d d d d d b a a a)))))
 (let ((?x482 (* y y y y y d d d d d d d b b b b a a a a a a00)))
 (let ((?x471 (* y y y y y d d d d d d b b b b b a a a a a y00)))
 (let ((?x460 (* y y y y y y d d d d d d b b b b b a a a a a)))
 (let ((?x449 (* y y y y y d d d d d d d b b b b a a a a a a)))
 (let ((?x438 (* y y y d d d d d b b b a a a00)))
 (let ((?x427 (* y y y d d d d b b b b a a y00)))
 (let ((?x417 (* y y y y d d d d b b b b a a)))
 (let ((?x407 (* y y y d d d d d b b b a a a)))
 (let ((?x396 (* y y y d d d d d b b a a a a00)))
 (let ((?x385 (* y y y d d d d b b b a a a y00)))
 (let ((?x375 (* y y y y d d d d b b b a a a)))
 (let ((?x365 (* y y y d d d d d b b a a a a)))
 (let ((?x487 (+ (* (/ 1.0 16.0) (* y d d d b a)) (* (- (/ 1.0 8.0)) (* y y d d b b)) (* (/ 1.0 8.0) (* y d d b b y00)) (* (- (/ 1.0 16.0)) (* y d d d b a00)) (* (/ 1.0 128.0) ?x365) (* (- (/ 1.0 64.0)) ?x375) (* (/ 1.0 64.0) ?x385) (* (- (/ 1.0 128.0)) ?x396) (* (- (/ 1.0 256.0)) ?x407) (* (/ 1.0 128.0) ?x417) (* (- (/ 1.0 128.0)) ?x427) (* (/ 1.0 256.0) ?x438) (* (- (/ 1.0 2048.0)) ?x449) (* (/ 1.0 1024.0) ?x460) (* (- (/ 1.0 1024.0)) ?x471) (* (/ 1.0 2048.0) ?x482))))
 (let (($x119 (not (= ?x487 0.0))))
 (let (($x107 (and (or $x119 (not (= (* ?x784 ?x1247 ?x228) 0.0))) $x126 $x91 $x169)))
 (let (($x1204 (= (+ ?x102 ?x134 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x326 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let (($x980 (= (+ ?x94 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x923 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x1140 (* y00 b)))
 (let ((?x960 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y ?x111) b)) ?x1140 ?x923)))
 (let ((?x1164 (+ y ?x111)))
 (let ((?x68 (+ a b)))
 (let ((?x1028 (* (- (/ 1.0 64.0)) (* ?x68 ?x68 ?x1164 ?x1164 ?x1164 d d d b b b))))
 (let ((?x995 (+ ?x111 (* (/ 1.0 16.0) (* ?x68 ?x68 ?x68 ?x1164 ?x1164 d d d b)))))
 (let (($x993 (not (= (* ?x995 (+ (* (/ 1.0 4.0) (* ?x1164 d b)) ?x1028) ?x960) 0.0))))
 (let (($x270 (not (= (* (+ ?x111 ?x248) (+ ?x258 ?x287) (+ ?x143 ?x176 ?x1140 ?x923)) 0.0))))
 (let (($x1039 (or $x270 $x993)))
 (let (($x1185 (and $x1039 $x980 $x326 $x1204)))
 (rewrite (= $x1185 $x107))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1041 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x48 (* a00 d)))
 (let ((?x923 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x1140 (* y00 b)))
 (let ((?x960 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x1140 ?x923)))
 (let ((?x111 (* (/ 1.0 2.0) d)))
 (let ((?x1164 (+ y ?x111)))
 (let ((?x68 (+ a b)))
 (let ((?x1028 (* (- (/ 1.0 64.0)) (* ?x68 ?x68 ?x1164 ?x1164 ?x1164 d d d b b b))))
 (let ((?x995 (+ ?x111 (* (/ 1.0 16.0) (* ?x68 ?x68 ?x68 ?x1164 ?x1164 d d d b)))))
 (let (($x993 (not (= (* ?x995 (+ (* (/ 1.0 4.0) (* ?x1164 d b)) ?x1028) ?x960) 0.0))))
 (let ((?x287 (* (- (/ 1.0 64.0)) (* y y y d d d b b b a a))))
 (let ((?x258 (* (/ 1.0 4.0) (* y d b))))
 (let ((?x248 (* (/ 1.0 16.0) (* y y d d d b a a a))))
 (let ((?x989 (* (+ ?x111 ?x248) (+ ?x258 ?x287) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x1140 ?x923))))
 (let (($x1039 (or (not (= ?x989 0.0)) $x993)))
 (let ((?x112 (* y b)))
 (let ((?x134 (* (- 2.0) ?x112)))
 (let ((?x102 (* d a)))
 (let (($x1204 (= (+ ?x102 ?x134 (* 2.0 ?x1140) (* (- 1.0) ?x48)) 0.0)))
 (let (($x326 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let (($x980 (= (+ ?x94 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (and $x980 $x326 $x1204 $x1039)))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x85 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x51 (/ d 2.0)))
 (let ((?x70 (+ y ?x51)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x68 (+ a b)))
 (let ((?x79 (- (* ?x53 ?x51 ?x70) (* ?x68 ?x68 ?x53 ?x53 ?x53 ?x51 ?x51 ?x51 ?x70 ?x70 ?x70))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x74 (- (+ (- (* ?x68 ?x51) (* 2.0 ?x53 ?x70)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x80 (* ?x74 (+ ?x51 (* ?x68 ?x68 ?x68 ?x53 ?x51 ?x51 ?x51 ?x70 ?x70)) ?x79)))
 (let ((?x64 (- (* ?x53 ?x51 y) (* a a ?x53 ?x53 ?x53 ?x51 ?x51 ?x51 y y y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x65 (* ?x59 (+ ?x51 (* a a a ?x53 ?x51 ?x51 ?x51 y y)) ?x64)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let ((?x30 (* a00 d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x65 0.0)) (not (= ?x80 0.0)))))))))))))))))))) :qid k!33))
 ))
 (let ((?x1160 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x48 (* a00 d)))
 (let ((?x923 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x1140 (* y00 b)))
 (let ((?x960 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x1140 ?x923)))
 (let ((?x111 (* (/ 1.0 2.0) d)))
 (let ((?x1164 (+ y ?x111)))
 (let ((?x68 (+ a b)))
 (let ((?x1028 (* (- (/ 1.0 64.0)) (* ?x68 ?x68 ?x1164 ?x1164 ?x1164 d d d b b b))))
 (let ((?x995 (+ ?x111 (* (/ 1.0 16.0) (* ?x68 ?x68 ?x68 ?x1164 ?x1164 d d d b)))))
 (let (($x993 (not (= (* ?x995 (+ (* (/ 1.0 4.0) (* ?x1164 d b)) ?x1028) ?x960) 0.0))))
 (let ((?x287 (* (- (/ 1.0 64.0)) (* y y y d d d b b b a a))))
 (let ((?x258 (* (/ 1.0 4.0) (* y d b))))
 (let ((?x248 (* (/ 1.0 16.0) (* y y d d d b a a a))))
 (let ((?x989 (* (+ ?x111 ?x248) (+ ?x258 ?x287) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x1140 ?x923))))
 (let (($x1039 (or (not (= ?x989 0.0)) $x993)))
 (let ((?x112 (* y b)))
 (let ((?x134 (* (- 2.0) ?x112)))
 (let ((?x102 (* d a)))
 (let (($x1204 (= (+ ?x102 ?x134 (* 2.0 ?x1140) (* (- 1.0) ?x48)) 0.0)))
 (let (($x326 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let (($x980 (= (+ ?x94 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x861 (and $x980 $x326 $x1204 $x1039)))
 (let ((?x51 (/ d 2.0)))
 (let ((?x70 (+ y ?x51)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x79 (- (* ?x53 ?x51 ?x70) (* ?x68 ?x68 ?x53 ?x53 ?x53 ?x51 ?x51 ?x51 ?x70 ?x70 ?x70))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x74 (- (+ (- (* ?x68 ?x51) (* 2.0 ?x53 ?x70)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x80 (* ?x74 (+ ?x51 (* ?x68 ?x68 ?x68 ?x53 ?x51 ?x51 ?x51 ?x70 ?x70)) ?x79)))
 (let ((?x64 (- (* ?x53 ?x51 y) (* a a ?x53 ?x53 ?x53 ?x51 ?x51 ?x51 y y y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x65 (* ?x59 (+ ?x51 (* a a a ?x53 ?x51 ?x51 ?x51 y y)) ?x64)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (let (($x84 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x65 0.0)) (not (= ?x80 0.0))))))
 (rewrite (= $x84 $x861)))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x86 (asserted $x85)))
 (let ((@x928 (mp (mp @x86 (quant-intro (proof-bind ?x1160) (= $x85 $x1041)) $x1041) (rewrite (= $x1041 $x1188)) $x1188)))
 (let ((@x251 (mp~ (mp @x928 (quant-intro (proof-bind ?x88) (= $x1188 $x104)) $x104) (sk (~ $x104 $x698)) $x698)))
 (let ((@x947 (mp @x251 (rewrite (= $x698 $x917)) $x917)))
 (let ((@x704 (mp (and-elim @x947 $x1240) @x527 $x547)))
 (let ((@x537 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x547) $x553)) @x704 $x553)))
 (let (($x344 (<= ?x762 0.0)))
 (let ((@x996 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x547) $x344)) @x704 $x344)))
 (let (($x1031 (<= ?x713 0.0)))
 (let (($x462 (not $x1031)))
 (let (($x737 (>= ?x713 0.0)))
 (let ((@x654 (unit-resolution ((_ th-lemma arith) (or (not $x344) (not $x553) $x737)) (hypothesis (not $x737)) @x996 @x537 false)))
 (let (($x864 (= 0.0 ?x713)))
 (let (($x393 (not $x864)))
 (let ((@x402 (monotonicity (symm (commutativity (= $x864 $x509)) (= $x509 $x864)) (= $x435 $x393))))
 (let ((@x711 (commutativity (= (= 0.0 ?x925) $x184))))
 (let (($x743 (= 0.0 ?x925)))
 (let (($x758 (not $x743)))
 (let ((@x763 (hypothesis $x758)))
 (let ((?x869 (+ ?x533 ?x1189 ?x523 ?x341 ?x539 ?x1058 ?x546 ?x550 ?x551 ?x557 ?x558 ?x571 ?x566 ?x578)))
 (let (($x559 (= ?x869 0.0)))
 (let (($x345 (= 0.0 ?x869)))
 (let ((?x1154 (+ (* (/ 1.0 64.0) ?x1060) (* (/ 1.0 512.0) ?x330) (* (- (/ 1.0 4.0)) ?x519) (* (- (/ 1.0 8.0)) ?x521) (* (/ 1.0 64.0) ?x526) (* (/ 1.0 32.0) ?x529) (* (/ 3.0 128.0) ?x536) (* (/ 3.0 64.0) ?x542) (* (/ 3.0 128.0) ?x543) (* (/ 3.0 128.0) ?x548) (* (/ 3.0 256.0) ?x549) (* (/ 1.0 512.0) ?x555) (* (/ 3.0 256.0) ?x560) (* (/ 1.0 256.0) ?x564))))
 (let (($x678 (>= ?x1154 0.0)))
 (let (($x676 (not $x678)))
 (let (($x180 (<= ?x869 0.0)))
 (let (($x680 (not $x180)))
 (let ((@x1025 (hypothesis (not $x345))))
 (let (($x142 (>= ?x869 0.0)))
 (let (($x171 (<= ?x1154 0.0)))
 (let (($x831 (<= ?x925 0.0)))
 (let (($x707 (not $x831)))
 (let (($x108 (>= ?x925 0.0)))
 (let (($x1013 (not $x108)))
 (let ((@x1022 (hypothesis $x1013)))
 (let ((@x496 (hypothesis $x676)))
 (let ((?x567 (+ ?x1053 ?x189 ?x628 ?x604 ?x723 ?x514 ?x175 ?x871 ?x453 ?x364 ?x488 ?x720 ?x1057)))
 (let (($x677 (<= ?x567 0.0)))
 (let (($x641 (not $x677)))
 (let ((?x185 (* b!7 y!5)))
 (let (($x1143 (<= (+ ?x185 (* (- (/ 1.0 2.0)) (* a!8 d!6)) (* (- 1.0) ?x275) (* (/ 1.0 2.0) ?x734)) 0.0)))
 (let ((@x927 (lemma ((_ th-lemma arith) @x996 (hypothesis (not $x1143)) false) $x1143)))
 (let (($x565 (<= ?x694 0.0)))
 (let ((@x1239 (lemma ((_ th-lemma arith) (hypothesis (not $x565)) @x537 false) $x565)))
 (let ((@x682 (unit-resolution ((_ th-lemma arith) (or $x641 $x678 (not $x1143) $x108 (not $x565))) @x1022 @x1239 @x927 (or $x641 $x678))))
 (let ((@x685 (unit-resolution ((_ th-lemma arith) (or (not $x1143) $x677 $x678 $x108)) @x1022 @x927 (unit-resolution @x682 @x496 $x641) @x496 false)))
 (let (($x816 (>= ?x567 0.0)))
 (let (($x1010 (not $x171)))
 (let ((@x863 (hypothesis $x1010)))
 (let (($x932 (not $x816)))
 (let ((@x981 (hypothesis $x932)))
 (let ((@x913 (unit-resolution ((_ th-lemma arith) (or (not $x1143) $x816 $x171 $x108)) @x1022 @x863 @x927 @x981 false)))
 (let ((@x945 (unit-resolution ((_ th-lemma arith) (or $x932 $x171 (not $x1143) $x108 (not $x565))) @x1022 @x1239 @x863 @x927 (unit-resolution (lemma @x913 (or $x816 $x108 $x171)) @x863 @x1022 $x816) false)))
 (let ((@x642 ((_ th-lemma arith) (or $x142 $x1010))))
 (let ((@x644 (unit-resolution @x642 (unit-resolution (lemma @x945 (or $x171 $x108)) @x1022 $x171) $x142)))
 (let ((@x700 ((_ th-lemma arith triangle-eq) (or $x345 $x680 (not $x142)))))
 (let ((@x706 ((_ th-lemma arith) (unit-resolution @x700 @x644 @x1025 $x680) (unit-resolution (lemma @x685 (or $x678 $x108)) @x1022 $x678) false)))
 (let ((@x651 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x743 $x707 $x1013)) (unit-resolution (lemma @x706 (or $x108 $x345)) @x1025 $x108) @x763 $x707)))
 (let ((@x708 (hypothesis $x707)))
 (let ((@x207 (unit-resolution ((_ th-lemma arith) (or (not $x1143) $x677 $x171 $x831)) @x708 @x863 @x927 (hypothesis $x641) false)))
 (let ((@x502 (unit-resolution ((_ th-lemma arith) (or $x641 $x171 (not $x1143) $x831 (not $x565))) @x708 @x1239 @x863 @x927 (unit-resolution (lemma @x207 (or $x677 $x831 $x171)) @x863 @x708 $x677) false)))
 (let ((@x796 (unit-resolution @x642 (unit-resolution (lemma @x502 (or $x171 $x831)) @x651 $x171) $x142)))
 (let ((@x1177 (unit-resolution ((_ th-lemma arith) (or $x180 $x676)) (unit-resolution @x700 @x796 @x1025 $x680) $x676)))
 (let ((@x401 (unit-resolution ((_ th-lemma arith) (or (not $x1143) $x816 $x678 $x831)) @x708 @x927 @x981 @x496 false)))
 (let ((@x1179 (unit-resolution ((_ th-lemma arith) (or $x932 $x678 (not $x1143) $x831 (not $x565))) @x651 @x1239 @x927 (unit-resolution (lemma @x401 (or $x816 $x831 $x678)) @x651 @x1177 $x816) @x1177 false)))
 (let (($x911 (or (not $x559) $x184)))
 (let ((@x1023 (unit-resolution ((_ th-lemma arith) $x911) (hypothesis $x935) (hypothesis $x559) false)))
 (let ((@x1173 (unit-resolution (lemma @x1023 $x911) (symm (unit-resolution (lemma @x1179 (or $x345 $x743)) @x763 $x345) $x559) (mp @x763 (monotonicity @x711 (= $x758 $x935)) $x935) false)))
 (let ((@x390 (unit-resolution (and-elim @x947 $x310) (mp (lemma @x1173 $x743) @x711 $x184) $x435)))
 (let ((@x117 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x864 $x462 (not $x737))) (mp @x390 @x402 $x393) (or $x462 (not $x737)))))
 (unit-resolution ((_ th-lemma arith) (or (not $x344) $x1031 (not $x553))) (unit-resolution @x117 (lemma @x654 $x737) $x462) @x996 @x537 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       65
 :arith-eq-adapter                37
 :arith-bound-propagations-lp     5
 :arith-conflicts                 260
 :arith-diseq                     68
 :arith-fixed-eqs                 5
 :arith-grobner-calls             9
 :arith-grobner-conflicts         2
 :arith-horner-calls              9
 :arith-horner-cross-nested-forms 16
 :arith-lower                     160
 :arith-make-feasible             146
 :arith-max-columns               76
 :arith-max-rows                  11
 :arith-nla-explanations          312
 :arith-nla-lemmas                256
 :arith-offset-eqs                21
 :arith-upper                     147
 :conflicts                       29
 :decisions                       224
 :del-clause                      146
 :final-checks                    119
 :max-memory                      20.77
 :memory                          17.44
 :minimized-lits                  1
 :mk-bool-var                     418
 :mk-clause                       179
 :num-allocs                      8977567815.00
 :num-checks                      1
 :propagations                    173
 :rlimit-count                    11437
 :time                            11.85
 :total-time                      11.86)
