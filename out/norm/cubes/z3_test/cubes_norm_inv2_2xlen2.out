unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x251 (* (- 1) k!2)))
 (let ((?x934 (+ (* 3 (* n!0 n!0)) ?x251 (* 3 n!0))))
 (let (($x252 (<= ?x934 (- 1))))
 (let (($x912 (= ?x934 (- 1))))
 (let ((?x482 (+ k!2 c!3)))
 (let ((?x270 (+ m!1 k!2)))
 (let ((?x184 (+ 6 m!1)))
 (let ((?x280 (+ 1 n!0)))
 (let ((?x943 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482)))
 (let ((?x939 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x887 (* ?x280 ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x883 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x792 (* ?x280 ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x764 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x184 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x750 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x729 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x720 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x184 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x697 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x650 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x613 (* ?x280 ?x280 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x603 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x184 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x511 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x457 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x394 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x337 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x265 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x184 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x224 (* 4 (* ?x280 ?x280 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482))))
 (let ((?x254 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x248 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x226 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482 ?x482)))
 (let ((?x154 (* ?x280 ?x280 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482)))
 (let ((?x153 (* ?x280 ?x280 ?x184 ?x184 ?x184 ?x270 ?x270 ?x270 ?x270 ?x270 ?x270 ?x482 ?x482 ?x482)))
 (let ((?x453 (+ ?x153 (* (- 5) ?x154) (* (- 18) ?x226) (* (- 9) ?x248) (* 5 ?x254) ?x224 (* 18 ?x265) (* (- 1) ?x337) ?x394 (* 18 ?x457) (* (- 9) ?x511) (* (- 9) ?x603) (* (- 18) ?x613) (* 9 ?x650) (* 5 ?x697) (* (- 4) ?x720) (* 4 ?x729) (* (- 4) ?x750) (* 9 ?x764) (* 9 ?x792) (* (- 5) ?x883) (* (- 9) ?x887) (* (- 1) ?x939) (* 9 ?x943))))
 (let (($x382 (= ?x453 0)))
 (let (($x336 (not $x382)))
 (let ((?x610 (* k!2 n!0)))
 (let ((?x428 (+ ?x610 ?x251 (* (- 3) c!3) (* 2 n!0))))
 (let (($x584 (= ?x428 (- 1))))
 (let ((?x157 (* k!2 k!2)))
 (let ((?x641 (+ ?x157 (* (- 9) (* c!3 n!0)) (* (- 5) k!2) (* (- 18) c!3) (* 9 n!0))))
 (let (($x616 (= ?x641 (- 4))))
 (let ((?x762 (+ m!1 (* (- 6) n!0))))
 (let (($x293 (= ?x762 6)))
 (let (($x739 (and $x293 $x616 $x584 $x912 $x336)))
 (let ((?x242 (+ c!3 k!2)))
 (let ((?x240 (+ k!2 m!1)))
 (let ((?x513 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x212 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x698 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x501 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x184 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x675 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x673 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x184 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x972 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x669 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x1047 (* ?x280 ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x400 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x966 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x448 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x184 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x870 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x303 (* ?x280 ?x280 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242)))
 (let ((?x711 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x184 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x949 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x882 (* ?x280 ?x280 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x424 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x617 (* ?x280 ?x280 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242)))
 (let ((?x419 (* ?x280 ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x121 (* ?x280 ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x122 (* 4 (* ?x280 ?x280 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242))))
 (let ((?x241 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242 ?x242 ?x242)))
 (let ((?x123 (* ?x280 ?x280 ?x280 ?x184 ?x184 ?x184 ?x240 ?x240 ?x240 ?x240 ?x242 ?x242 ?x242)))
 (let ((?x691 (+ (* 9 ?x123) (* (- 1) ?x241) ?x122 (* (- 18) ?x121) (* (- 9) ?x419) ?x617 (* 5 ?x424) (* (- 18) ?x882) (* (- 9) ?x949) (* (- 4) ?x711) (* (- 5) ?x303) (* 5 ?x870) (* 18 ?x448) (* 9 ?x966) (* 4 ?x400) (* 9 ?x1047) (* 18 ?x669) ?x972 (* (- 9) ?x673) (* (- 5) ?x675) (* 9 ?x501) (* (- 4) ?x698) (* (- 9) ?x212) (* (- 1) ?x513))))
 (let ((?x275 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x157) (* 9 (* c!3 n!0)))))
 (let (($x502 (and $x293 (= ?x275 4) (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x610)) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x691 0)))))
 (let (($x946 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x958 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x933 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x925 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x869 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x780 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x772 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x742 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x648 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x640 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x627 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x581 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x551 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x548 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x413 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x364 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x330 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x318 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x307 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x268 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x264 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x255 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x169 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x146 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x885 (+ (* 9 ?x146) (* (- 1) ?x169) (* 4 ?x206) (* (- 18) ?x255) (* (- 9) ?x264) ?x268 (* 5 ?x307) (* (- 18) ?x318) (* (- 9) ?x330) (* (- 4) ?x364) (* (- 5) ?x413) (* 5 ?x548) (* 18 ?x551) (* 9 ?x581) (* 4 ?x627) (* 9 ?x640) (* 18 ?x648) ?x742 (* (- 9) ?x772) (* (- 5) ?x780) (* 9 ?x869) (* (- 4) ?x925) (* (- 9) ?x933) (* (- 1) ?x958))))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x239 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x235 (= ?x239 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 $x235 $x287 $x325 (not (= ?x885 0))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x278 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x364 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x780 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x772 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x548 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x925 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x933 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x627 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x640 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x869 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x958 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x551 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x413 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x742 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x648 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x146 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x169 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x581 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x268 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x264 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x255 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x330 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x318 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x307 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x781 (+ (* (- 5) ?x307) (* 18 ?x318) (* 9 ?x330) (* 18 ?x255) (* 9 ?x264) (* (- 1) ?x268) (* (- 9) ?x581) ?x169 (* (- 4) ?x206) (* (- 9) ?x146) (* (- 18) ?x648) (* (- 1) ?x742) (* 5 ?x413) (* (- 18) ?x551) ?x958 (* (- 9) ?x869) (* (- 9) ?x640) (* (- 4) ?x627) (* 9 ?x933) (* 4 ?x925) (* (- 5) ?x548) (* 9 ?x772) (* 5 ?x780) (* 4 ?x364))))
 (let (($x740 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x971 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x304 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 (= ?x304 (- 4)) $x971 $x740 (not (= ?x781 0)))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x298 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x958 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x933 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x925 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x869 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x780 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x772 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x742 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x648 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x640 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x627 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x581 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x551 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x548 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x413 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x364 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x330 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x318 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x307 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x268 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x264 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x255 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x169 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x146 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x885 (+ (* 9 ?x146) (* (- 1) ?x169) (* 4 ?x206) (* (- 18) ?x255) (* (- 9) ?x264) ?x268 (* 5 ?x307) (* (- 18) ?x318) (* (- 9) ?x330) (* (- 4) ?x364) (* (- 5) ?x413) (* 5 ?x548) (* 18 ?x551) (* 9 ?x581) (* 4 ?x627) (* 9 ?x640) (* 18 ?x648) ?x742 (* (- 9) ?x772) (* (- 5) ?x780) (* 9 ?x869) (* (- 4) ?x925) (* (- 9) ?x933) (* (- 1) ?x958))))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x239 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x235 (= ?x239 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x489 (and $x151 $x235 $x287 $x325 (not (= ?x885 0)))))
 (let ((?x781 (+ (* (- 5) ?x307) (* 18 ?x318) (* 9 ?x330) (* 18 ?x255) (* 9 ?x264) (* (- 1) ?x268) (* (- 9) ?x581) ?x169 (* (- 4) ?x206) (* (- 9) ?x146) (* (- 18) ?x648) (* (- 1) ?x742) (* 5 ?x413) (* (- 18) ?x551) ?x958 (* (- 9) ?x869) (* (- 9) ?x640) (* (- 4) ?x627) (* 9 ?x933) (* 4 ?x925) (* (- 5) ?x548) (* 9 ?x772) (* 5 ?x780) (* 4 ?x364))))
 (let (($x740 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x971 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x304 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x253 (and $x151 (= ?x304 (- 4)) $x971 $x740 (not (= ?x781 0)))))
 (rewrite (= $x253 $x489)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x118 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x112 (* 4 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x111 (* 5 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x110 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x108 (* 5 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x106 (* 4 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x105 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x101 (* 4 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x100 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x99 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x97 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x95 (* 18 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x93 (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x88 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* 18 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x86 (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x83 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x80 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x79 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x77 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x76 (* 18 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x74 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x73 (* (- 5) ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x90 (- (- (+ (- (- (+ ?x73 ?x74 ?x75 ?x76 ?x77) ?x79) ?x80) ?x83) ?x85) ?x86)))
 (let ((?x103 (- (- (+ (- (+ (- (- ?x90 ?x87) ?x88) ?x93) ?x95) ?x97) ?x99) ?x100)))
 (let (($x115 (not (= (+ (- (+ (- ?x103 ?x101) ?x105 ?x106) ?x108) ?x110 ?x111 ?x112) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x115)))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x263 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x364 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x780 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x772 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x548 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x925 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x933 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x627 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x640 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x869 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x958 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x551 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x413 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x742 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x648 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x146 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x169 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x581 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x268 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x264 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x255 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x330 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x318 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x307 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x781 (+ (* (- 5) ?x307) (* 18 ?x318) (* 9 ?x330) (* 18 ?x255) (* 9 ?x264) (* (- 1) ?x268) (* (- 9) ?x581) ?x169 (* (- 4) ?x206) (* (- 9) ?x146) (* (- 18) ?x648) (* (- 1) ?x742) (* 5 ?x413) (* (- 18) ?x551) ?x958 (* (- 9) ?x869) (* (- 9) ?x640) (* (- 4) ?x627) (* 9 ?x933) (* 4 ?x925) (* (- 5) ?x548) (* 9 ?x772) (* 5 ?x780) (* 4 ?x364))))
 (let (($x740 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x971 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x304 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x253 (and $x151 (= ?x304 (- 4)) $x971 $x740 (not (= ?x781 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x112 (* 4 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x111 (* 5 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x110 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x108 (* 5 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x106 (* 4 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x105 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x101 (* 4 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x100 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x99 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x97 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x95 (* 18 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x93 (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x88 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* 18 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x86 (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x83 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x80 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x79 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x77 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x76 (* 18 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x74 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x73 (* (- 5) ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x90 (- (- (+ (- (- (+ ?x73 ?x74 ?x75 ?x76 ?x77) ?x79) ?x80) ?x83) ?x85) ?x86)))
 (let ((?x103 (- (- (+ (- (+ (- (- ?x90 ?x87) ?x88) ?x93) ?x95) ?x97) ?x99) ?x100)))
 (let (($x115 (not (= (+ (- (+ (- ?x103 ?x101) ?x105 ?x106) ?x108) ?x110 ?x111 ?x112) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x117 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x115))))
 (rewrite (= $x117 $x253))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x119 (asserted $x118)))
 (let ((@x236 (mp (mp @x119 (quant-intro (proof-bind ?x263) (= $x118 $x278)) $x278) (rewrite (= $x278 $x278)) $x278)))
 (let ((@x522 (mp~ (mp @x236 (quant-intro (proof-bind ?x298) (= $x278 $x946)) $x946) (sk (~ $x946 $x502)) $x502)))
 (let ((@x716 (mp @x522 (rewrite (= $x502 $x739)) $x739)))
 (let ((@x436 (and-elim @x716 $x912)))
 (let ((@x701 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x912) $x252)) @x436 $x252)))
 (let (($x825 (>= ?x934 (- 1))))
 (let ((@x618 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x912) $x825)) @x436 $x825)))
 (let (($x718 (<= ?x762 6)))
 (let ((@x223 (and-elim @x716 $x293)))
 (let ((@x719 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x293) $x718)) @x223 $x718)))
 (let (($x497 (>= ?x762 6)))
 (let ((@x588 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x293) $x497)) @x223 $x497)))
 (let (($x828 (<= ?x428 (- 1))))
 (let ((@x941 (and-elim @x716 $x584)))
 (let ((@x455 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x584) $x828)) @x941 $x828)))
 (let (($x549 (>= ?x428 (- 1))))
 (let ((@x186 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x584) $x549)) @x941 $x549)))
 (let (($x826 (<= ?x641 (- 4))))
 (let ((@x441 (and-elim @x716 $x616)))
 (let ((@x536 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x616) $x826)) @x441 $x826)))
 (let (($x598 (>= ?x641 (- 4))))
 (let ((@x195 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x616) $x598)) @x441 $x598)))
 (let (($x531 (not (<= ?x453 0))))
 (let (($x515 (>= ?x453 0)))
 (let ((@x178 ((_ th-lemma arith) (hypothesis (not $x515)) @x618 @x701 @x618 @x701 @x186 @x455 @x618 @x701 @x186 @x455 @x195 @x536 @x588 @x719 @x618 @x701 @x186 @x455 @x588 @x719 @x618 @x701 false)))
 (let ((@x723 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x382 $x531 (not $x515))) (and-elim @x716 $x336) (or $x531 (not $x515)))))
 ((_ th-lemma arith) (unit-resolution @x723 (lemma @x178 $x515) $x531) @x618 @x701 @x618 @x701 @x186 @x455 @x618 @x701 @x186 @x455 @x195 @x536 @x588 @x719 @x618 @x701 @x186 @x455 @x588 @x719 @x618 @x701 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        14
 :arith-assert-upper        33
 :arith-branch-var          2
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           15
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             247
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              12
 :arith-row-summations      14
 :arith-tableau-max-columns 56
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 26
 :del-clause                16
 :final-checks              8
 :max-memory                20.17
 :memory                    19.39
 :mk-bool-var               40
 :mk-clause                 16
 :num-allocs                9161763
 :num-checks                1
 :propagations              10
 :rlimit-count              82523
 :time                      0.07
 :total-time                0.09)
