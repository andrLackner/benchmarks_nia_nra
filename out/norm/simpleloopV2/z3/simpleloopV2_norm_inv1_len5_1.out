unsat
((set-logic NIA)
(declare-fun y!0 () Int)
(declare-fun x!1 () Int)
(proof
(let ((?x2565 (* (- 1) y!0)))
 (let ((?x2564 (* (- 1) x!1)))
 (let ((?x2566 (+ y00 x00 ?x2564 ?x2565)))
 (let (($x2622 (<= ?x2566 0)))
 (let (($x2567 (= ?x2566 0)))
 (let ((?x2645 (* x00 x!1 x!1 y!0 y!0)))
 (let ((?x2035 (* (- 1) (* x00 y!0 y!0 y!0))))
 (let ((?x1261 (* (- 1) (* y00 y!0 y!0 y!0))))
 (let ((?x2034 (* 2 (* x00 x!1 x!1))))
 (let ((?x2590 (* y00 x!1 x!1 y!0 y!0)))
 (let ((?x370 (* (- 1) (* x00 y!0))))
 (let ((?x2561 (* y!0 y!0)))
 (let ((?x2557 (* x!1 x!1 x!1 y!0)))
 (let ((?x2560 (* (- 2) ?x2557)))
 (let ((?x2556 (* y!0 y!0 y!0 y!0)))
 (let ((?x2554 (* x!1 x!1 y!0 y!0 y!0)))
 (let ((?x800 (* (- 1) ?x2554)))
 (let ((?x2551 (* x!1 x!1 x!1)))
 (let ((?x2219 (* (- 2) ?x2551)))
 (let ((?x2529 (* x!1 x!1 y!0 y!0)))
 (let ((?x2528 (* x!1 x!1 x!1 y!0 y!0)))
 (let ((?x496 (* (- 1) ?x2528)))
 (let ((?x796 (* (- 1) (* y00 y!0))))
 (let ((?x1101 (* y!0 y!0 y!0)))
 (let ((?x1008 (* 2 ?x1101)))
 (let ((?x2658 (* 2 (* y00 x!1 x!1))))
 (let ((?x2310 (+ y00 x00 ?x2564 (* 4 (* x!1 x!1 y!0)) ?x2658 ?x1008 (* 4 (* x!1 y!0 y!0 y!0)) (* (- 5) (* y00 x!1)) ?x796 (* 8 (* x!1 y!0 y!0)) ?x496 ?x2529 ?x2565 (* 6 (* x!1 y!0)) ?x2219 ?x800 (* 5 (* x!1 x!1)) ?x2556 ?x2560 ?x2561 ?x370 (* (- 2) (* x00 y!0 y!0)) (* (- 2) (* y00 y!0 y!0)) (* (- 3) (* y00 x!1 y!0 y!0)) ?x2590 (* (- 6) (* y00 x!1 y!0)) (* 2 (* y00 x!1 x!1 y!0)) (* (- 5) (* x00 x!1)) ?x2034 ?x1261 ?x2035 (* (- 6) (* x00 x!1 y!0)) (* 2 (* x00 x!1 x!1 y!0)) (* (- 3) (* x00 x!1 y!0 y!0)) ?x2645)))
 (let (($x2075 (= ?x2310 0)))
 (let (($x2096 (not $x2075)))
 (let ((?x2639 (* x00 x!1 y!0 y!0)))
 (let ((?x2585 (* y00 x!1 y!0 y!0)))
 (let ((?x1460 (* 2 ?x2557)))
 (let ((?x1298 (* (- 2) ?x1101)))
 (let ((?x2039 (+ y00 x00 ?x2564 ?x2658 ?x1298 (* 3 (* y00 x!1)) ?x796 ?x496 ?x2529 ?x2565 (* (- 2) (* x!1 y!0)) ?x2219 ?x800 (* (- 3) (* x!1 x!1)) ?x2556 ?x1460 ?x2561 ?x370 (* 2 (* x00 y!0 y!0)) (* 2 (* y00 y!0 y!0)) ?x2585 ?x2590 (* (- 2) (* y00 x!1 y!0)) (* (- 2) (* y00 x!1 x!1 y!0)) (* 3 (* x00 x!1)) ?x2034 ?x1261 ?x2035 (* (- 2) (* x00 x!1 y!0)) (* (- 2) (* x00 x!1 x!1 y!0)) ?x2639 ?x2645)))
 (let (($x2040 (= ?x2039 0)))
 (let (($x2581 (or (not $x2040) $x2096)))
 (let (($x2099 (and $x2567 $x2581)))
 (let ((?x2674 (* (- 1) (* x!1 x!1 y!0 y!0 x00))))
 (let ((?x1395 (* y!0 y!0 y!0 x00)))
 (let ((?x2074 (* y!0 y!0 y!0 y00)))
 (let ((?x634 (* (- 1) ?x2556)))
 (let ((?x2553 (* 2 ?x2551)))
 (let ((?x2548 (* (- 1) ?x2529)))
 (let ((?x2535 (* (- 1) ?x2561)))
 (let ((?x1049 (* (- 2) (* x!1 x!1 x00))))
 (let ((?x2540 (* (- 2) (* x!1 x!1 y00))))
 (let ((?x2073 (* (- 1) (* x!1 x!1 y!0 y!0 y00))))
 (let ((?x1352 (* y!0 y00)))
 (let ((?x2544 (* y!0 x00)))
 (let ((?x122 (* (- 1) x00)))
 (let ((?x115 (* (- 1) y00)))
 (let ((?x1461 (+ x!1 y!0 ?x115 ?x122 ?x2544 (* 2 (* y!0 y!0 x00)) ?x1352 (* 2 (* y!0 y!0 y00)) (* 3 (* x!1 y!0 y!0 y00)) ?x2073 (* 5 (* x!1 y00)) ?x2540 (* 6 (* x!1 y!0 y00)) (* (- 2) (* x!1 x!1 y!0 y00)) (* 5 (* x!1 x00)) ?x1049 ?x2535 ?x1298 (* (- 4) (* x!1 y!0 y!0 y!0)) ?x2554 (* (- 5) (* x!1 x!1)) (* (- 6) (* x!1 y!0)) (* (- 4) (* x!1 x!1 y!0)) (* (- 8) (* x!1 y!0 y!0)) ?x2548 ?x2528 ?x2553 ?x1460 ?x634 ?x2074 ?x1395 (* 6 (* x!1 y!0 x00)) (* (- 2) (* x!1 x!1 y!0 x00)) (* 3 (* x!1 y!0 y!0 x00)) ?x2674)))
 (let ((?x1459 (+ x!1 y!0 ?x115 ?x122 ?x2544 (* (- 2) (* y!0 y!0 x00)) ?x1352 (* (- 2) (* y!0 y!0 y00)) (* (- 1) (* x!1 y!0 y!0 y00)) ?x2073 (* (- 3) (* x!1 y00)) ?x2540 (* 2 (* x!1 y!0 y00)) (* 2 (* x!1 x!1 y!0 y00)) (* (- 3) (* x!1 x00)) ?x1049 ?x2535 ?x1008 ?x2554 (* 3 (* x!1 x!1)) (* 2 (* x!1 y!0)) ?x2548 ?x2528 ?x2553 ?x2560 ?x634 ?x2074 ?x1395 (* 2 (* x!1 y!0 x00)) (* 2 (* x!1 x!1 y!0 x00)) (* (- 1) (* x!1 y!0 y!0 x00)) ?x2674)))
 (let (($x1155 (and (= (+ x!1 y!0 ?x115 ?x122) 0) (or (not (= ?x1459 0)) (not (= ?x1461 0))))))
 (let (($x2571 (exists ((x Int) (y Int) )(! (let ((?x1468 (* x x y y x00)))
 (let ((?x1603 (* (- 1) ?x1468)))
 (let ((?x1463 (* x y y x00)))
 (let ((?x2703 (* 3 ?x1463)))
 (let ((?x1448 (* x x y x00)))
 (let ((?x1601 (* (- 2) ?x1448)))
 (let ((?x1439 (* x y x00)))
 (let ((?x2702 (* 6 ?x1439)))
 (let ((?x1368 (* y y y x00)))
 (let ((?x1211 (* y y y y00)))
 (let ((?x1004 (* y y y y)))
 (let ((?x1599 (* (- 1) ?x1004)))
 (let ((?x656 (* x x x y)))
 (let ((?x690 (* 2 ?x656)))
 (let ((?x641 (* x x x)))
 (let ((?x1598 (* 2 ?x641)))
 (let ((?x625 (* x x x y y)))
 (let ((?x445 (* x x y y)))
 (let ((?x624 (* (- 1) ?x445)))
 (let ((?x430 (* x x y)))
 (let ((?x689 (* (- 4) ?x430)))
 (let ((?x421 (* x x)))
 (let ((?x1597 (* (- 5) ?x421)))
 (let ((?x410 (* x x y y y)))
 (let ((?x1596 (* (- 4) (* x y y y))))
 (let ((?x404 (* y y y)))
 (let ((?x979 (* (- 2) ?x404)))
 (let ((?x397 (* y y)))
 (let ((?x398 (* (- 1) ?x397)))
 (let ((?x293 (* x x x00)))
 (let ((?x1588 (* (- 2) ?x293)))
 (let ((?x291 (* x x00)))
 (let ((?x2701 (* 5 ?x291)))
 (let ((?x258 (* x x y y00)))
 (let ((?x1586 (* (- 2) ?x258)))
 (let ((?x254 (* x y y00)))
 (let ((?x2705 (* 6 ?x254)))
 (let ((?x249 (* x x y00)))
 (let ((?x1584 (* (- 2) ?x249)))
 (let ((?x245 (* x y00)))
 (let ((?x2704 (* 5 ?x245)))
 (let ((?x237 (* x x y y y00)))
 (let ((?x1582 (* (- 1) ?x237)))
 (let ((?x235 (* x y y y00)))
 (let ((?x1581 (* 3 ?x235)))
 (let ((?x231 (* y y y00)))
 (let ((?x1116 (* 2 ?x231)))
 (let ((?x224 (* y y00)))
 (let ((?x191 (* y y x00)))
 (let ((?x1580 (* 2 ?x191)))
 (let ((?x180 (* y x00)))
 (let ((?x122 (* (- 1) x00)))
 (let ((?x115 (* (- 1) y00)))
 (let ((?x1136 (+ x y ?x115 ?x122 ?x180 ?x1580 ?x224 ?x1116 ?x1581 ?x1582 ?x2704 ?x1584 ?x2705 ?x1586 ?x2701 ?x1588 ?x398 ?x979 ?x1596 ?x410 ?x1597 (* (- 6) (* x y)) ?x689 (* (- 8) (* x y y)) ?x624 ?x625 ?x1598 ?x690 ?x1599 ?x1211 ?x1368 ?x2702 ?x1601 ?x2703 ?x1603)))
 (let ((?x145 (* (- 1) ?x1463)))
 (let ((?x1823 (* 2 ?x1448)))
 (let ((?x1600 (* 2 ?x1439)))
 (let ((?x1894 (* (- 2) ?x656)))
 (let ((?x1919 (* 3 ?x421)))
 (let ((?x1852 (* 2 ?x404)))
 (let ((?x143 (* (- 3) ?x291)))
 (let ((?x1673 (* 2 ?x258)))
 (let ((?x1867 (* 2 ?x254)))
 (let ((?x1866 (* (- 3) ?x245)))
 (let ((?x1848 (* (- 1) ?x235)))
 (let ((?x146 (* (- 2) ?x231)))
 (let ((?x736 (* (- 2) ?x191)))
 (let ((?x621 (+ x y ?x115 ?x122 ?x180 ?x736 ?x224 ?x146 ?x1848 ?x1582 ?x1866 ?x1584 ?x1867 ?x1673 ?x143 ?x1588 ?x398 ?x1852 ?x410 ?x1919 (* 2 (* x y)) ?x624 ?x625 ?x1598 ?x1894 ?x1599 ?x1211 ?x1368 ?x1600 ?x1823 ?x145 ?x1603)))
 (let (($x141 (= (+ x y ?x115 ?x122) 0)))
 (and $x141 (or (not (= ?x621 0)) (not (= ?x1136 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x2716 (exists ((x Int) (y Int) )(! (let ((?x1468 (* x x y y x00)))
 (let ((?x1603 (* (- 1) ?x1468)))
 (let ((?x1463 (* x y y x00)))
 (let ((?x2703 (* 3 ?x1463)))
 (let ((?x1448 (* x x y x00)))
 (let ((?x1601 (* (- 2) ?x1448)))
 (let ((?x1439 (* x y x00)))
 (let ((?x2702 (* 6 ?x1439)))
 (let ((?x1368 (* y y y x00)))
 (let ((?x1211 (* y y y y00)))
 (let ((?x1004 (* y y y y)))
 (let ((?x1599 (* (- 1) ?x1004)))
 (let ((?x656 (* x x x y)))
 (let ((?x690 (* 2 ?x656)))
 (let ((?x641 (* x x x)))
 (let ((?x1598 (* 2 ?x641)))
 (let ((?x625 (* x x x y y)))
 (let ((?x445 (* x x y y)))
 (let ((?x624 (* (- 1) ?x445)))
 (let ((?x410 (* x x y y y)))
 (let ((?x1596 (* (- 4) (* x y y y))))
 (let ((?x404 (* y y y)))
 (let ((?x979 (* (- 2) ?x404)))
 (let ((?x397 (* y y)))
 (let ((?x398 (* (- 1) ?x397)))
 (let ((?x293 (* x x x00)))
 (let ((?x1588 (* (- 2) ?x293)))
 (let ((?x291 (* x x00)))
 (let ((?x2701 (* 5 ?x291)))
 (let ((?x258 (* x x y y00)))
 (let ((?x1586 (* (- 2) ?x258)))
 (let ((?x254 (* x y y00)))
 (let ((?x2705 (* 6 ?x254)))
 (let ((?x249 (* x x y00)))
 (let ((?x1584 (* (- 2) ?x249)))
 (let ((?x245 (* x y00)))
 (let ((?x2704 (* 5 ?x245)))
 (let ((?x237 (* x x y y y00)))
 (let ((?x1582 (* (- 1) ?x237)))
 (let ((?x235 (* x y y y00)))
 (let ((?x1581 (* 3 ?x235)))
 (let ((?x231 (* y y y00)))
 (let ((?x1116 (* 2 ?x231)))
 (let ((?x1260 (* (- 1) (* x 1))))
 (let ((?x224 (* y y00)))
 (let ((?x191 (* y y x00)))
 (let ((?x1580 (* 2 ?x191)))
 (let ((?x180 (* y x00)))
 (let ((?x122 (* (- 1) x00)))
 (let ((?x115 (* (- 1) y00)))
 (let ((?x2708 (+ x y ?x115 ?x122 ?x180 ?x1580 ?x224 ?x1260 ?x1116 ?x1581 ?x1582 ?x2704 ?x1584 ?x2705 ?x1586 ?x2701 ?x1588 (* (- 1) (* x 1 1 1)) (* (- 1) (* x y 1 1)) (* (- 1) (* x 1 y 1)) (* (- 1) (* x y y 1)) (* (- 1) (* x 1 1 y)) (* (- 1) (* x y 1 y)) ?x398 (* (- 1) (* x 1 y y)) ?x979 ?x1596 ?x410 (* (- 4) (* x x)) (* (- 5) (* x y)) (* (- 2) (* x x y)) (* (- 6) (* x y y)) ?x624 (* (- 1) (* x (- 1) y y)) ?x625 ?x1598 ?x690 (* (- 1) (* x x 1 1)) ?x1599 (* (- 1) (* x (- 1) 1 1)) (* (- 1) (* x (- 1) y 1)) (* (- 1) (* x x y 1)) (* (- 1) (* x (- 1) 1 y)) (* (- 1) (* x x 1 y)) ?x1211 ?x1368 (* (- 1) (* x (- 1))) ?x2702 ?x1601 ?x2703 ?x1603)))
 (let ((?x145 (* (- 1) ?x1463)))
 (let ((?x1823 (* 2 ?x1448)))
 (let ((?x1600 (* 2 ?x1439)))
 (let ((?x1894 (* (- 2) ?x656)))
 (let ((?x421 (* x x)))
 (let ((?x1919 (* 3 ?x421)))
 (let ((?x1852 (* 2 ?x404)))
 (let ((?x143 (* (- 3) ?x291)))
 (let ((?x1673 (* 2 ?x258)))
 (let ((?x1867 (* 2 ?x254)))
 (let ((?x1866 (* (- 3) ?x245)))
 (let ((?x1848 (* (- 1) ?x235)))
 (let ((?x146 (* (- 2) ?x231)))
 (let ((?x736 (* (- 2) ?x191)))
 (let ((?x557 (* 2 x)))
 (let ((?x1869 (+ ?x557 y ?x115 ?x122 (* (- 1) (* y y 1 1)) (* (- 1) (* y 1 x 1)) (* (- 1) (* y 1 1 1)) ?x180 (* (- 1) (* y x 1 1)) ?x736 (* (- 1) (* y x x 1)) (* (- 1) (* y 1 1 x)) ?x224 ?x1260 ?x146 ?x1848 ?x1582 ?x1866 ?x1584 ?x1867 ?x1673 ?x143 ?x1588 (* (- 1) (* y (- 1) x 1)) ?x1852 ?x410 ?x1919 (* 3 (* x y)) (* 2 (* x x y)) (* 2 (* x y y)) ?x624 ?x625 ?x1598 ?x1894 (* (- 1) (* y y x 1)) ?x1599 ?x1211 (* (- 1) (* y (- 1) x x)) ?x1368 (* (- 1) (* y (- 1) 1 x)) (* (- 1) (* y (- 1) 1 1)) (* (- 1) (* y y 1 x)) (* (- 1) (* y x 1 x)) (* (- 1) (* y 1 x x)) ?x1600 ?x1823 ?x145 ?x1603)))
 (let (($x141 (= (+ x y ?x115 ?x122) 0)))
 (and $x141 (or (not (= ?x1869 0)) (not (= ?x2708 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x2526 (lambda ((x Int) (y Int) )(let ((?x1468 (* x x y y x00)))
 (let ((?x1603 (* (- 1) ?x1468)))
 (let ((?x1463 (* x y y x00)))
 (let ((?x2703 (* 3 ?x1463)))
 (let ((?x1448 (* x x y x00)))
 (let ((?x1601 (* (- 2) ?x1448)))
 (let ((?x1439 (* x y x00)))
 (let ((?x2702 (* 6 ?x1439)))
 (let ((?x1368 (* y y y x00)))
 (let ((?x1211 (* y y y y00)))
 (let ((?x1004 (* y y y y)))
 (let ((?x1599 (* (- 1) ?x1004)))
 (let ((?x656 (* x x x y)))
 (let ((?x690 (* 2 ?x656)))
 (let ((?x641 (* x x x)))
 (let ((?x1598 (* 2 ?x641)))
 (let ((?x625 (* x x x y y)))
 (let ((?x445 (* x x y y)))
 (let ((?x624 (* (- 1) ?x445)))
 (let ((?x430 (* x x y)))
 (let ((?x689 (* (- 4) ?x430)))
 (let ((?x421 (* x x)))
 (let ((?x1597 (* (- 5) ?x421)))
 (let ((?x410 (* x x y y y)))
 (let ((?x1596 (* (- 4) (* x y y y))))
 (let ((?x404 (* y y y)))
 (let ((?x979 (* (- 2) ?x404)))
 (let ((?x397 (* y y)))
 (let ((?x398 (* (- 1) ?x397)))
 (let ((?x293 (* x x x00)))
 (let ((?x1588 (* (- 2) ?x293)))
 (let ((?x291 (* x x00)))
 (let ((?x2701 (* 5 ?x291)))
 (let ((?x258 (* x x y y00)))
 (let ((?x1586 (* (- 2) ?x258)))
 (let ((?x254 (* x y y00)))
 (let ((?x2705 (* 6 ?x254)))
 (let ((?x249 (* x x y00)))
 (let ((?x1584 (* (- 2) ?x249)))
 (let ((?x245 (* x y00)))
 (let ((?x2704 (* 5 ?x245)))
 (let ((?x237 (* x x y y y00)))
 (let ((?x1582 (* (- 1) ?x237)))
 (let ((?x235 (* x y y y00)))
 (let ((?x1581 (* 3 ?x235)))
 (let ((?x231 (* y y y00)))
 (let ((?x1116 (* 2 ?x231)))
 (let ((?x224 (* y y00)))
 (let ((?x191 (* y y x00)))
 (let ((?x1580 (* 2 ?x191)))
 (let ((?x180 (* y x00)))
 (let ((?x122 (* (- 1) x00)))
 (let ((?x115 (* (- 1) y00)))
 (let ((?x1136 (+ x y ?x115 ?x122 ?x180 ?x1580 ?x224 ?x1116 ?x1581 ?x1582 ?x2704 ?x1584 ?x2705 ?x1586 ?x2701 ?x1588 ?x398 ?x979 ?x1596 ?x410 ?x1597 (* (- 6) (* x y)) ?x689 (* (- 8) (* x y y)) ?x624 ?x625 ?x1598 ?x690 ?x1599 ?x1211 ?x1368 ?x2702 ?x1601 ?x2703 ?x1603)))
 (let ((?x145 (* (- 1) ?x1463)))
 (let ((?x1823 (* 2 ?x1448)))
 (let ((?x1600 (* 2 ?x1439)))
 (let ((?x1894 (* (- 2) ?x656)))
 (let ((?x1919 (* 3 ?x421)))
 (let ((?x1852 (* 2 ?x404)))
 (let ((?x143 (* (- 3) ?x291)))
 (let ((?x1673 (* 2 ?x258)))
 (let ((?x1867 (* 2 ?x254)))
 (let ((?x1866 (* (- 3) ?x245)))
 (let ((?x1848 (* (- 1) ?x235)))
 (let ((?x146 (* (- 2) ?x231)))
 (let ((?x736 (* (- 2) ?x191)))
 (let ((?x621 (+ x y ?x115 ?x122 ?x180 ?x736 ?x224 ?x146 ?x1848 ?x1582 ?x1866 ?x1584 ?x1867 ?x1673 ?x143 ?x1588 ?x398 ?x1852 ?x410 ?x1919 (* 2 (* x y)) ?x624 ?x625 ?x1598 ?x1894 ?x1599 ?x1211 ?x1368 ?x1600 ?x1823 ?x145 ?x1603)))
 (let (($x141 (= (+ x y ?x115 ?x122) 0)))
 (let (($x2536 (and $x141 (or (not (= ?x621 0)) (not (= ?x1136 0))))))
 (let ((?x1260 (* (- 1) (* x 1))))
 (let ((?x2708 (+ x y ?x115 ?x122 ?x180 ?x1580 ?x224 ?x1260 ?x1116 ?x1581 ?x1582 ?x2704 ?x1584 ?x2705 ?x1586 ?x2701 ?x1588 (* (- 1) (* x 1 1 1)) (* (- 1) (* x y 1 1)) (* (- 1) (* x 1 y 1)) (* (- 1) (* x y y 1)) (* (- 1) (* x 1 1 y)) (* (- 1) (* x y 1 y)) ?x398 (* (- 1) (* x 1 y y)) ?x979 ?x1596 ?x410 (* (- 4) ?x421) (* (- 5) (* x y)) (* (- 2) ?x430) (* (- 6) (* x y y)) ?x624 (* (- 1) (* x (- 1) y y)) ?x625 ?x1598 ?x690 (* (- 1) (* x x 1 1)) ?x1599 (* (- 1) (* x (- 1) 1 1)) (* (- 1) (* x (- 1) y 1)) (* (- 1) (* x x y 1)) (* (- 1) (* x (- 1) 1 y)) (* (- 1) (* x x 1 y)) ?x1211 ?x1368 (* (- 1) (* x (- 1))) ?x2702 ?x1601 ?x2703 ?x1603)))
 (let ((?x557 (* 2 x)))
 (let ((?x1869 (+ ?x557 y ?x115 ?x122 (* (- 1) (* y y 1 1)) (* (- 1) (* y 1 x 1)) (* (- 1) (* y 1 1 1)) ?x180 (* (- 1) (* y x 1 1)) ?x736 (* (- 1) (* y x x 1)) (* (- 1) (* y 1 1 x)) ?x224 ?x1260 ?x146 ?x1848 ?x1582 ?x1866 ?x1584 ?x1867 ?x1673 ?x143 ?x1588 (* (- 1) (* y (- 1) x 1)) ?x1852 ?x410 ?x1919 (* 3 (* x y)) (* 2 ?x430) (* 2 (* x y y)) ?x624 ?x625 ?x1598 ?x1894 (* (- 1) (* y y x 1)) ?x1599 ?x1211 (* (- 1) (* y (- 1) x x)) ?x1368 (* (- 1) (* y (- 1) 1 x)) (* (- 1) (* y (- 1) 1 1)) (* (- 1) (* y y 1 x)) (* (- 1) (* y x 1 x)) (* (- 1) (* y 1 x x)) ?x1600 ?x1823 ?x145 ?x1603)))
 (let (($x722 (and $x141 (or (not (= ?x1869 0)) (not (= ?x2708 0))))))
 (rewrite (= $x722 $x2536))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x181 (exists ((x Int) (y Int) )(! (let ((?x1357 (+ 1 y)))
 (let ((?x1351 (+ (- 1) x)))
 (let ((?x1497 (* ?x1351 ?x1351 ?x1357)))
 (let ((?x1973 (* x00 ?x1357 ?x1357 ?x1357)))
 (let ((?x2272 (* x00 ?x1357 ?x1357)))
 (let ((?x2256 (* y00 ?x1357 ?x1357 ?x1357)))
 (let ((?x918 (* y00 ?x1357 ?x1357)))
 (let ((?x559 (* y00 ?x1351 ?x1357 ?x1357)))
 (let ((?x395 (* ?x1351 ?x1351 ?x1351)))
 (let ((?x1371 (* ?x1351 ?x1351 ?x1351 ?x1357 ?x1357)))
 (let ((?x418 (* ?x1351 ?x1351 ?x1357 ?x1357 ?x1357)))
 (let ((?x1363 (* x00 ?x1351 ?x1357 ?x1357)))
 (let ((?x517 (+ ?x1363 (* (- 1) (* y00 ?x1351 ?x1351 ?x1357 ?x1357)) (* (- 1) (* x00 ?x1351 ?x1351)) (* (- 1) (* y00 ?x1351 ?x1351)) ?x418 ?x1371 (* (- 1) (* ?x1351 ?x1351 ?x1357 ?x1357)) ?x395 (* (- 1) (* ?x1351 ?x1357 ?x1357)) (* (- 2) (* ?x1351 ?x1357 ?x1357 ?x1357)) (* (- 1) (* ?x1357 ?x1357 ?x1357 ?x1357)) ?x559 (* (- 1) (* ?x1357 ?x1357 ?x1357)) ?x918 ?x2256 ?x2272 ?x1973 (* (- 1) (* x00 ?x1351 ?x1351 ?x1357 ?x1357)) ?x1497)))
 (let ((?x715 (+ 1 x)))
 (let ((?x119 (+ (- 1) y)))
 (let ((?x1182 (* ?x119 ?x715 ?x715)))
 (let ((?x923 (* x00 ?x119 ?x119 ?x119)))
 (let ((?x1186 (* x00 ?x119 ?x119)))
 (let ((?x1606 (* y00 ?x119 ?x119 ?x119)))
 (let ((?x749 (* y00 ?x119 ?x119)))
 (let ((?x1979 (* y00 ?x119 ?x119 ?x715)))
 (let ((?x810 (* ?x715 ?x715 ?x715)))
 (let ((?x374 (* ?x119 ?x119 ?x715 ?x715 ?x715)))
 (let ((?x542 (* ?x119 ?x119 ?x119 ?x715 ?x715)))
 (let ((?x1367 (* x00 ?x119 ?x119 ?x715)))
 (let ((?x1809 (+ ?x1367 (* (- 1) (* y00 ?x119 ?x119 ?x715 ?x715)) (* (- 1) (* x00 ?x715 ?x715)) (* (- 1) (* y00 ?x715 ?x715)) ?x542 ?x374 (* (- 1) (* ?x119 ?x119 ?x715 ?x715)) ?x810 (* (- 1) (* ?x119 ?x119 ?x715)) (* (- 2) (* ?x119 ?x119 ?x119 ?x715)) (* (- 1) (* ?x119 ?x119 ?x119 ?x119)) ?x1979 (* (- 1) (* ?x119 ?x119 ?x119)) ?x749 ?x1606 ?x1186 ?x923 (* (- 1) (* x00 ?x119 ?x119 ?x715 ?x715)) ?x1182)))
 (let (($x1333 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x1333 (or (not (= ?x1809 0)) (not (= ?x517 0))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x742 (lambda ((x Int) (y Int) )(let ((?x1468 (* x x y y x00)))
 (let ((?x1603 (* (- 1) ?x1468)))
 (let ((?x1463 (* x y y x00)))
 (let ((?x2703 (* 3 ?x1463)))
 (let ((?x1448 (* x x y x00)))
 (let ((?x1601 (* (- 2) ?x1448)))
 (let ((?x1439 (* x y x00)))
 (let ((?x2702 (* 6 ?x1439)))
 (let ((?x1368 (* y y y x00)))
 (let ((?x1211 (* y y y y00)))
 (let ((?x1004 (* y y y y)))
 (let ((?x1599 (* (- 1) ?x1004)))
 (let ((?x656 (* x x x y)))
 (let ((?x690 (* 2 ?x656)))
 (let ((?x641 (* x x x)))
 (let ((?x1598 (* 2 ?x641)))
 (let ((?x625 (* x x x y y)))
 (let ((?x445 (* x x y y)))
 (let ((?x624 (* (- 1) ?x445)))
 (let ((?x410 (* x x y y y)))
 (let ((?x1596 (* (- 4) (* x y y y))))
 (let ((?x404 (* y y y)))
 (let ((?x979 (* (- 2) ?x404)))
 (let ((?x397 (* y y)))
 (let ((?x398 (* (- 1) ?x397)))
 (let ((?x293 (* x x x00)))
 (let ((?x1588 (* (- 2) ?x293)))
 (let ((?x291 (* x x00)))
 (let ((?x2701 (* 5 ?x291)))
 (let ((?x258 (* x x y y00)))
 (let ((?x1586 (* (- 2) ?x258)))
 (let ((?x254 (* x y y00)))
 (let ((?x2705 (* 6 ?x254)))
 (let ((?x249 (* x x y00)))
 (let ((?x1584 (* (- 2) ?x249)))
 (let ((?x245 (* x y00)))
 (let ((?x2704 (* 5 ?x245)))
 (let ((?x237 (* x x y y y00)))
 (let ((?x1582 (* (- 1) ?x237)))
 (let ((?x235 (* x y y y00)))
 (let ((?x1581 (* 3 ?x235)))
 (let ((?x231 (* y y y00)))
 (let ((?x1116 (* 2 ?x231)))
 (let ((?x1260 (* (- 1) (* x 1))))
 (let ((?x224 (* y y00)))
 (let ((?x191 (* y y x00)))
 (let ((?x1580 (* 2 ?x191)))
 (let ((?x180 (* y x00)))
 (let ((?x122 (* (- 1) x00)))
 (let ((?x115 (* (- 1) y00)))
 (let ((?x2708 (+ x y ?x115 ?x122 ?x180 ?x1580 ?x224 ?x1260 ?x1116 ?x1581 ?x1582 ?x2704 ?x1584 ?x2705 ?x1586 ?x2701 ?x1588 (* (- 1) (* x 1 1 1)) (* (- 1) (* x y 1 1)) (* (- 1) (* x 1 y 1)) (* (- 1) (* x y y 1)) (* (- 1) (* x 1 1 y)) (* (- 1) (* x y 1 y)) ?x398 (* (- 1) (* x 1 y y)) ?x979 ?x1596 ?x410 (* (- 4) (* x x)) (* (- 5) (* x y)) (* (- 2) (* x x y)) (* (- 6) (* x y y)) ?x624 (* (- 1) (* x (- 1) y y)) ?x625 ?x1598 ?x690 (* (- 1) (* x x 1 1)) ?x1599 (* (- 1) (* x (- 1) 1 1)) (* (- 1) (* x (- 1) y 1)) (* (- 1) (* x x y 1)) (* (- 1) (* x (- 1) 1 y)) (* (- 1) (* x x 1 y)) ?x1211 ?x1368 (* (- 1) (* x (- 1))) ?x2702 ?x1601 ?x2703 ?x1603)))
 (let ((?x145 (* (- 1) ?x1463)))
 (let ((?x1823 (* 2 ?x1448)))
 (let ((?x1600 (* 2 ?x1439)))
 (let ((?x1894 (* (- 2) ?x656)))
 (let ((?x421 (* x x)))
 (let ((?x1919 (* 3 ?x421)))
 (let ((?x1852 (* 2 ?x404)))
 (let ((?x143 (* (- 3) ?x291)))
 (let ((?x1673 (* 2 ?x258)))
 (let ((?x1867 (* 2 ?x254)))
 (let ((?x1866 (* (- 3) ?x245)))
 (let ((?x1848 (* (- 1) ?x235)))
 (let ((?x146 (* (- 2) ?x231)))
 (let ((?x736 (* (- 2) ?x191)))
 (let ((?x557 (* 2 x)))
 (let ((?x1869 (+ ?x557 y ?x115 ?x122 (* (- 1) (* y y 1 1)) (* (- 1) (* y 1 x 1)) (* (- 1) (* y 1 1 1)) ?x180 (* (- 1) (* y x 1 1)) ?x736 (* (- 1) (* y x x 1)) (* (- 1) (* y 1 1 x)) ?x224 ?x1260 ?x146 ?x1848 ?x1582 ?x1866 ?x1584 ?x1867 ?x1673 ?x143 ?x1588 (* (- 1) (* y (- 1) x 1)) ?x1852 ?x410 ?x1919 (* 3 (* x y)) (* 2 (* x x y)) (* 2 (* x y y)) ?x624 ?x625 ?x1598 ?x1894 (* (- 1) (* y y x 1)) ?x1599 ?x1211 (* (- 1) (* y (- 1) x x)) ?x1368 (* (- 1) (* y (- 1) 1 x)) (* (- 1) (* y (- 1) 1 1)) (* (- 1) (* y y 1 x)) (* (- 1) (* y x 1 x)) (* (- 1) (* y 1 x x)) ?x1600 ?x1823 ?x145 ?x1603)))
 (let (($x141 (= (+ x y ?x115 ?x122) 0)))
 (let (($x722 (and $x141 (or (not (= ?x1869 0)) (not (= ?x2708 0))))))
 (let ((?x1357 (+ 1 y)))
 (let ((?x1351 (+ (- 1) x)))
 (let ((?x1497 (* ?x1351 ?x1351 ?x1357)))
 (let ((?x1973 (* x00 ?x1357 ?x1357 ?x1357)))
 (let ((?x2272 (* x00 ?x1357 ?x1357)))
 (let ((?x2256 (* y00 ?x1357 ?x1357 ?x1357)))
 (let ((?x918 (* y00 ?x1357 ?x1357)))
 (let ((?x559 (* y00 ?x1351 ?x1357 ?x1357)))
 (let ((?x395 (* ?x1351 ?x1351 ?x1351)))
 (let ((?x1371 (* ?x1351 ?x1351 ?x1351 ?x1357 ?x1357)))
 (let ((?x418 (* ?x1351 ?x1351 ?x1357 ?x1357 ?x1357)))
 (let ((?x1363 (* x00 ?x1351 ?x1357 ?x1357)))
 (let ((?x517 (+ ?x1363 (* (- 1) (* y00 ?x1351 ?x1351 ?x1357 ?x1357)) (* (- 1) (* x00 ?x1351 ?x1351)) (* (- 1) (* y00 ?x1351 ?x1351)) ?x418 ?x1371 (* (- 1) (* ?x1351 ?x1351 ?x1357 ?x1357)) ?x395 (* (- 1) (* ?x1351 ?x1357 ?x1357)) (* (- 2) (* ?x1351 ?x1357 ?x1357 ?x1357)) (* (- 1) (* ?x1357 ?x1357 ?x1357 ?x1357)) ?x559 (* (- 1) (* ?x1357 ?x1357 ?x1357)) ?x918 ?x2256 ?x2272 ?x1973 (* (- 1) (* x00 ?x1351 ?x1351 ?x1357 ?x1357)) ?x1497)))
 (let ((?x715 (+ 1 x)))
 (let ((?x119 (+ (- 1) y)))
 (let ((?x1182 (* ?x119 ?x715 ?x715)))
 (let ((?x923 (* x00 ?x119 ?x119 ?x119)))
 (let ((?x1186 (* x00 ?x119 ?x119)))
 (let ((?x1606 (* y00 ?x119 ?x119 ?x119)))
 (let ((?x749 (* y00 ?x119 ?x119)))
 (let ((?x1979 (* y00 ?x119 ?x119 ?x715)))
 (let ((?x810 (* ?x715 ?x715 ?x715)))
 (let ((?x374 (* ?x119 ?x119 ?x715 ?x715 ?x715)))
 (let ((?x542 (* ?x119 ?x119 ?x119 ?x715 ?x715)))
 (let ((?x1367 (* x00 ?x119 ?x119 ?x715)))
 (let ((?x1809 (+ ?x1367 (* (- 1) (* y00 ?x119 ?x119 ?x715 ?x715)) (* (- 1) (* x00 ?x715 ?x715)) (* (- 1) (* y00 ?x715 ?x715)) ?x542 ?x374 (* (- 1) (* ?x119 ?x119 ?x715 ?x715)) ?x810 (* (- 1) (* ?x119 ?x119 ?x715)) (* (- 2) (* ?x119 ?x119 ?x119 ?x715)) (* (- 1) (* ?x119 ?x119 ?x119 ?x119)) ?x1979 (* (- 1) (* ?x119 ?x119 ?x119)) ?x749 ?x1606 ?x1186 ?x923 (* (- 1) (* x00 ?x119 ?x119 ?x715 ?x715)) ?x1182)))
 (let (($x1333 (= (+ x ?x115 ?x122 y) 0)))
 (let (($x1377 (and $x1333 (or (not (= ?x1809 0)) (not (= ?x517 0))))))
 (rewrite (= $x1377 $x722))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x523 (exists ((x Int) (y Int) )(! (let ((?x1357 (+ 1 y)))
 (let ((?x1351 (+ (- 1) x)))
 (let ((?x1984 (* x00 ?x1351 ?x1351 ?x1357 ?x1357)))
 (let ((?x350 (* ?x1357 ?x1357 ?x1357)))
 (let ((?x548 (* ?x1357 ?x1357 ?x1357 ?x1357)))
 (let ((?x475 (* ?x1351 ?x1357 ?x1357)))
 (let ((?x501 (* ?x1351 ?x1351 ?x1357 ?x1357)))
 (let ((?x518 (* y00 ?x1351 ?x1351)))
 (let ((?x1379 (* x00 ?x1351 ?x1351)))
 (let ((?x1337 (* y00 ?x1351 ?x1351 ?x1357 ?x1357)))
 (let ((?x1513 (+ (* (- 1) (* x00 ?x1351 ?x1357 ?x1357)) ?x1337 ?x1379 ?x518 (* (- 1) (* ?x1351 ?x1351 ?x1357 ?x1357 ?x1357)) (* (- 1) (* ?x1351 ?x1351 ?x1351 ?x1357 ?x1357)) ?x501 (* (- 1) (* ?x1351 ?x1351 ?x1351)) ?x475 (* 2 (* ?x1351 ?x1357 ?x1357 ?x1357)) ?x548 (* (- 1) (* y00 ?x1351 ?x1357 ?x1357)) ?x350 (* (- 1) (* y00 ?x1357 ?x1357)) (* (- 1) (* y00 ?x1357 ?x1357 ?x1357)) (* (- 1) (* x00 ?x1357 ?x1357)) (* (- 1) (* x00 ?x1357 ?x1357 ?x1357)) ?x1984 (* (- 1) (* ?x1351 ?x1351 ?x1357)))))
 (let ((?x715 (+ 1 x)))
 (let ((?x119 (+ (- 1) y)))
 (let ((?x1789 (* x00 ?x119 ?x119 ?x715 ?x715)))
 (let ((?x1496 (* ?x119 ?x119 ?x119)))
 (let ((?x2273 (* ?x119 ?x119 ?x119 ?x119)))
 (let ((?x2257 (* ?x119 ?x119 ?x715)))
 (let ((?x1466 (* ?x119 ?x119 ?x715 ?x715)))
 (let ((?x543 (* y00 ?x715 ?x715)))
 (let ((?x534 (* x00 ?x715 ?x715)))
 (let ((?x388 (* y00 ?x119 ?x119 ?x715 ?x715)))
 (let ((?x2003 (+ (* (- 1) (* x00 ?x119 ?x119 ?x715)) ?x388 ?x534 ?x543 (* (- 1) (* ?x119 ?x119 ?x119 ?x715 ?x715)) (* (- 1) (* ?x119 ?x119 ?x715 ?x715 ?x715)) ?x1466 (* (- 1) (* ?x715 ?x715 ?x715)) ?x2257 (* 2 (* ?x119 ?x119 ?x119 ?x715)) ?x2273 (* (- 1) (* y00 ?x119 ?x119 ?x715)) ?x1496 (* (- 1) (* y00 ?x119 ?x119)) (* (- 1) (* y00 ?x119 ?x119 ?x119)) (* (- 1) (* x00 ?x119 ?x119)) (* (- 1) (* x00 ?x119 ?x119 ?x119)) ?x1789 (* (- 1) (* ?x119 ?x715 ?x715)))))
 (let (($x1333 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x1333 (or (not (= ?x2003 0)) (not (= ?x1513 0))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1369 (lambda ((x Int) (y Int) )(let ((?x1357 (+ 1 y)))
 (let ((?x1351 (+ (- 1) x)))
 (let ((?x1497 (* ?x1351 ?x1351 ?x1357)))
 (let ((?x1973 (* x00 ?x1357 ?x1357 ?x1357)))
 (let ((?x2272 (* x00 ?x1357 ?x1357)))
 (let ((?x2256 (* y00 ?x1357 ?x1357 ?x1357)))
 (let ((?x918 (* y00 ?x1357 ?x1357)))
 (let ((?x559 (* y00 ?x1351 ?x1357 ?x1357)))
 (let ((?x395 (* ?x1351 ?x1351 ?x1351)))
 (let ((?x1371 (* ?x1351 ?x1351 ?x1351 ?x1357 ?x1357)))
 (let ((?x418 (* ?x1351 ?x1351 ?x1357 ?x1357 ?x1357)))
 (let ((?x1363 (* x00 ?x1351 ?x1357 ?x1357)))
 (let ((?x517 (+ ?x1363 (* (- 1) (* y00 ?x1351 ?x1351 ?x1357 ?x1357)) (* (- 1) (* x00 ?x1351 ?x1351)) (* (- 1) (* y00 ?x1351 ?x1351)) ?x418 ?x1371 (* (- 1) (* ?x1351 ?x1351 ?x1357 ?x1357)) ?x395 (* (- 1) (* ?x1351 ?x1357 ?x1357)) (* (- 2) (* ?x1351 ?x1357 ?x1357 ?x1357)) (* (- 1) (* ?x1357 ?x1357 ?x1357 ?x1357)) ?x559 (* (- 1) (* ?x1357 ?x1357 ?x1357)) ?x918 ?x2256 ?x2272 ?x1973 (* (- 1) (* x00 ?x1351 ?x1351 ?x1357 ?x1357)) ?x1497)))
 (let ((?x715 (+ 1 x)))
 (let ((?x119 (+ (- 1) y)))
 (let ((?x1182 (* ?x119 ?x715 ?x715)))
 (let ((?x923 (* x00 ?x119 ?x119 ?x119)))
 (let ((?x1186 (* x00 ?x119 ?x119)))
 (let ((?x1606 (* y00 ?x119 ?x119 ?x119)))
 (let ((?x749 (* y00 ?x119 ?x119)))
 (let ((?x1979 (* y00 ?x119 ?x119 ?x715)))
 (let ((?x810 (* ?x715 ?x715 ?x715)))
 (let ((?x374 (* ?x119 ?x119 ?x715 ?x715 ?x715)))
 (let ((?x542 (* ?x119 ?x119 ?x119 ?x715 ?x715)))
 (let ((?x1367 (* x00 ?x119 ?x119 ?x715)))
 (let ((?x1809 (+ ?x1367 (* (- 1) (* y00 ?x119 ?x119 ?x715 ?x715)) (* (- 1) (* x00 ?x715 ?x715)) (* (- 1) (* y00 ?x715 ?x715)) ?x542 ?x374 (* (- 1) (* ?x119 ?x119 ?x715 ?x715)) ?x810 (* (- 1) (* ?x119 ?x119 ?x715)) (* (- 2) (* ?x119 ?x119 ?x119 ?x715)) (* (- 1) (* ?x119 ?x119 ?x119 ?x119)) ?x1979 (* (- 1) (* ?x119 ?x119 ?x119)) ?x749 ?x1606 ?x1186 ?x923 (* (- 1) (* x00 ?x119 ?x119 ?x715 ?x715)) ?x1182)))
 (let (($x1333 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x1377 (and $x1333 (or (not (= ?x1809 0)) (not (= ?x517 0))))))
 (let ((?x1984 (* x00 ?x1351 ?x1351 ?x1357 ?x1357)))
 (let ((?x350 (* ?x1357 ?x1357 ?x1357)))
 (let ((?x548 (* ?x1357 ?x1357 ?x1357 ?x1357)))
 (let ((?x475 (* ?x1351 ?x1357 ?x1357)))
 (let ((?x501 (* ?x1351 ?x1351 ?x1357 ?x1357)))
 (let ((?x518 (* y00 ?x1351 ?x1351)))
 (let ((?x1379 (* x00 ?x1351 ?x1351)))
 (let ((?x1337 (* y00 ?x1351 ?x1351 ?x1357 ?x1357)))
 (let ((?x1513 (+ (* (- 1) ?x1363) ?x1337 ?x1379 ?x518 (* (- 1) ?x418) (* (- 1) ?x1371) ?x501 (* (- 1) ?x395) ?x475 (* 2 (* ?x1351 ?x1357 ?x1357 ?x1357)) ?x548 (* (- 1) ?x559) ?x350 (* (- 1) ?x918) (* (- 1) ?x2256) (* (- 1) ?x2272) (* (- 1) ?x1973) ?x1984 (* (- 1) ?x1497))))
 (let ((?x1789 (* x00 ?x119 ?x119 ?x715 ?x715)))
 (let ((?x1496 (* ?x119 ?x119 ?x119)))
 (let ((?x2273 (* ?x119 ?x119 ?x119 ?x119)))
 (let ((?x2257 (* ?x119 ?x119 ?x715)))
 (let ((?x1466 (* ?x119 ?x119 ?x715 ?x715)))
 (let ((?x543 (* y00 ?x715 ?x715)))
 (let ((?x534 (* x00 ?x715 ?x715)))
 (let ((?x388 (* y00 ?x119 ?x119 ?x715 ?x715)))
 (let ((?x2003 (+ (* (- 1) ?x1367) ?x388 ?x534 ?x543 (* (- 1) ?x542) (* (- 1) ?x374) ?x1466 (* (- 1) ?x810) ?x2257 (* 2 (* ?x119 ?x119 ?x119 ?x715)) ?x2273 (* (- 1) ?x1979) ?x1496 (* (- 1) ?x749) (* (- 1) ?x1606) (* (- 1) ?x1186) (* (- 1) ?x923) ?x1789 (* (- 1) ?x1182))))
 (let (($x532 (and $x1333 (or (not (= ?x2003 0)) (not (= ?x1513 0))))))
 (rewrite (= $x532 $x1377))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x112 (exists ((x Int) (y Int) )(! (let ((?x74 (- y 1)))
 (let ((?x73 (+ x 1)))
 (let ((?x79 (+ (* (- 1) ?x73 x00 ?x74 ?x74) (* ?x73 ?x73 ?x74 ?x74 y00) (* ?x73 ?x73 x00) (* ?x73 ?x73 y00))))
 (let ((?x83 (- (- ?x79 (* ?x73 ?x73 ?x74 ?x74 ?x74)) (* ?x73 ?x73 ?x73 ?x74 ?x74))))
 (let ((?x91 (+ (- (+ ?x83 (* ?x73 ?x73 ?x74 ?x74)) (* ?x73 ?x73 ?x73)) (* ?x73 ?x74 ?x74) (* 2 ?x73 ?x74 ?x74 ?x74) (* ?x74 ?x74 ?x74 ?x74))))
 (let ((?x100 (- (+ (- ?x91 (* ?x73 ?x74 ?x74 y00)) (* ?x74 ?x74 ?x74)) (* ?x74 ?x74 y00))))
 (let ((?x103 (- (- (- ?x100 (* ?x74 ?x74 ?x74 y00)) (* x00 ?x74 ?x74)) (* x00 ?x74 ?x74 ?x74))))
 (let (($x108 (= (- (+ ?x103 (* ?x73 ?x73 x00 ?x74 ?x74)) (* ?x73 ?x73 ?x74)) 0)))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x41 (+ (* (- 1) ?x35 x00 ?x36 ?x36) (* ?x35 ?x35 ?x36 ?x36 y00) (* ?x35 ?x35 x00) (* ?x35 ?x35 y00))))
 (let ((?x45 (- (- ?x41 (* ?x35 ?x35 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x36 ?x36))))
 (let ((?x54 (+ (- (+ ?x45 (* ?x35 ?x35 ?x36 ?x36)) (* ?x35 ?x35 ?x35)) (* ?x35 ?x36 ?x36) (* 2 ?x35 ?x36 ?x36 ?x36) (* ?x36 ?x36 ?x36 ?x36))))
 (let ((?x63 (- (+ (- ?x54 (* ?x35 ?x36 ?x36 y00)) (* ?x36 ?x36 ?x36)) (* ?x36 ?x36 y00))))
 (let ((?x66 (- (- (- ?x63 (* ?x36 ?x36 ?x36 y00)) (* x00 ?x36 ?x36)) (* x00 ?x36 ?x36 ?x36))))
 (let (($x71 (= (- (+ ?x66 (* ?x35 ?x35 x00 ?x36 ?x36)) (* ?x35 ?x35 ?x36)) 0)))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not $x71) (not $x108))))))))))))))))))) :qid k!27))
 ))
 (let ((?x474 (lambda ((x Int) (y Int) )(let ((?x1357 (+ 1 y)))
 (let ((?x1351 (+ (- 1) x)))
 (let ((?x1984 (* x00 ?x1351 ?x1351 ?x1357 ?x1357)))
 (let ((?x350 (* ?x1357 ?x1357 ?x1357)))
 (let ((?x548 (* ?x1357 ?x1357 ?x1357 ?x1357)))
 (let ((?x475 (* ?x1351 ?x1357 ?x1357)))
 (let ((?x501 (* ?x1351 ?x1351 ?x1357 ?x1357)))
 (let ((?x518 (* y00 ?x1351 ?x1351)))
 (let ((?x1379 (* x00 ?x1351 ?x1351)))
 (let ((?x1337 (* y00 ?x1351 ?x1351 ?x1357 ?x1357)))
 (let ((?x1513 (+ (* (- 1) (* x00 ?x1351 ?x1357 ?x1357)) ?x1337 ?x1379 ?x518 (* (- 1) (* ?x1351 ?x1351 ?x1357 ?x1357 ?x1357)) (* (- 1) (* ?x1351 ?x1351 ?x1351 ?x1357 ?x1357)) ?x501 (* (- 1) (* ?x1351 ?x1351 ?x1351)) ?x475 (* 2 (* ?x1351 ?x1357 ?x1357 ?x1357)) ?x548 (* (- 1) (* y00 ?x1351 ?x1357 ?x1357)) ?x350 (* (- 1) (* y00 ?x1357 ?x1357)) (* (- 1) (* y00 ?x1357 ?x1357 ?x1357)) (* (- 1) (* x00 ?x1357 ?x1357)) (* (- 1) (* x00 ?x1357 ?x1357 ?x1357)) ?x1984 (* (- 1) (* ?x1351 ?x1351 ?x1357)))))
 (let ((?x715 (+ 1 x)))
 (let ((?x119 (+ (- 1) y)))
 (let ((?x1789 (* x00 ?x119 ?x119 ?x715 ?x715)))
 (let ((?x1496 (* ?x119 ?x119 ?x119)))
 (let ((?x2273 (* ?x119 ?x119 ?x119 ?x119)))
 (let ((?x2257 (* ?x119 ?x119 ?x715)))
 (let ((?x1466 (* ?x119 ?x119 ?x715 ?x715)))
 (let ((?x543 (* y00 ?x715 ?x715)))
 (let ((?x534 (* x00 ?x715 ?x715)))
 (let ((?x388 (* y00 ?x119 ?x119 ?x715 ?x715)))
 (let ((?x2003 (+ (* (- 1) (* x00 ?x119 ?x119 ?x715)) ?x388 ?x534 ?x543 (* (- 1) (* ?x119 ?x119 ?x119 ?x715 ?x715)) (* (- 1) (* ?x119 ?x119 ?x715 ?x715 ?x715)) ?x1466 (* (- 1) (* ?x715 ?x715 ?x715)) ?x2257 (* 2 (* ?x119 ?x119 ?x119 ?x715)) ?x2273 (* (- 1) (* y00 ?x119 ?x119 ?x715)) ?x1496 (* (- 1) (* y00 ?x119 ?x119)) (* (- 1) (* y00 ?x119 ?x119 ?x119)) (* (- 1) (* x00 ?x119 ?x119)) (* (- 1) (* x00 ?x119 ?x119 ?x119)) ?x1789 (* (- 1) (* ?x119 ?x715 ?x715)))))
 (let (($x1333 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x532 (and $x1333 (or (not (= ?x2003 0)) (not (= ?x1513 0))))))
 (let ((?x74 (- y 1)))
 (let ((?x73 (+ x 1)))
 (let ((?x79 (+ (* (- 1) ?x73 x00 ?x74 ?x74) (* ?x73 ?x73 ?x74 ?x74 y00) (* ?x73 ?x73 x00) (* ?x73 ?x73 y00))))
 (let ((?x83 (- (- ?x79 (* ?x73 ?x73 ?x74 ?x74 ?x74)) (* ?x73 ?x73 ?x73 ?x74 ?x74))))
 (let ((?x91 (+ (- (+ ?x83 (* ?x73 ?x73 ?x74 ?x74)) (* ?x73 ?x73 ?x73)) (* ?x73 ?x74 ?x74) (* 2 ?x73 ?x74 ?x74 ?x74) (* ?x74 ?x74 ?x74 ?x74))))
 (let ((?x100 (- (+ (- ?x91 (* ?x73 ?x74 ?x74 y00)) (* ?x74 ?x74 ?x74)) (* ?x74 ?x74 y00))))
 (let ((?x103 (- (- (- ?x100 (* ?x74 ?x74 ?x74 y00)) (* x00 ?x74 ?x74)) (* x00 ?x74 ?x74 ?x74))))
 (let (($x108 (= (- (+ ?x103 (* ?x73 ?x73 x00 ?x74 ?x74)) (* ?x73 ?x73 ?x74)) 0)))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x41 (+ (* (- 1) ?x35 x00 ?x36 ?x36) (* ?x35 ?x35 ?x36 ?x36 y00) (* ?x35 ?x35 x00) (* ?x35 ?x35 y00))))
 (let ((?x45 (- (- ?x41 (* ?x35 ?x35 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x36 ?x36))))
 (let ((?x54 (+ (- (+ ?x45 (* ?x35 ?x35 ?x36 ?x36)) (* ?x35 ?x35 ?x35)) (* ?x35 ?x36 ?x36) (* 2 ?x35 ?x36 ?x36 ?x36) (* ?x36 ?x36 ?x36 ?x36))))
 (let ((?x63 (- (+ (- ?x54 (* ?x35 ?x36 ?x36 y00)) (* ?x36 ?x36 ?x36)) (* ?x36 ?x36 y00))))
 (let ((?x66 (- (- (- ?x63 (* ?x36 ?x36 ?x36 y00)) (* x00 ?x36 ?x36)) (* x00 ?x36 ?x36 ?x36))))
 (let (($x71 (= (- (+ ?x66 (* ?x35 ?x35 x00 ?x36 ?x36)) (* ?x35 ?x35 ?x36)) 0)))
 (let (($x111 (and (= (+ (- (- x y00) x00) y) 0) (or (not $x71) (not $x108)))))
 (rewrite (= $x111 $x532))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x113 (asserted $x112)))
 (let ((@x500 (mp (mp @x113 (quant-intro (proof-bind ?x474) (= $x112 $x523)) $x523) (rewrite (= $x523 $x523)) $x523)))
 (let ((@x2523 (mp (mp @x500 (quant-intro (proof-bind ?x1369) (= $x523 $x181)) $x181) (quant-intro (proof-bind ?x742) (= $x181 $x2716)) $x2716)))
 (let ((@x1304 (mp~ (mp @x2523 (quant-intro (proof-bind ?x2526) (= $x2716 $x2571)) $x2571) (sk (~ $x2571 $x1155)) $x1155)))
 (let ((@x1354 (mp @x1304 (rewrite (= $x1155 $x2099)) $x2099)))
 (let ((@x2584 (and-elim @x1354 $x2567)))
 (let ((@x2641 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2567) $x2622)) @x2584 $x2622)))
 (let (($x2623 (>= ?x2566 0)))
 (let ((@x2644 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2567) $x2623)) @x2584 $x2623)))
 (let (($x2625 (<= ?x2039 0)))
 (let ((@x2630 (lemma ((_ th-lemma arith) (hypothesis (not $x2625)) @x2644 @x2641 @x2644 @x2641 false) $x2625)))
 (let (($x2592 (>= ?x2039 0)))
 (let ((@x2062 (lemma ((_ th-lemma arith) (hypothesis (not $x2592)) @x2644 @x2641 @x2644 @x2641 false) $x2592)))
 (let (($x1338 (not (<= ?x2310 0))))
 (let (($x2595 (>= ?x2310 0)))
 (let ((@x2651 (lemma ((_ th-lemma arith) (hypothesis (not $x2595)) @x2644 @x2641 @x2644 @x2641 false) $x2595)))
 (let ((@x1359 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2040 (not $x2625) (not $x2592))) @x2630 @x2062 $x2040)))
 (let ((@x2616 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2075 $x1338 (not $x2595))) (unit-resolution (and-elim @x1354 $x2581) @x1359 $x2096) @x2651 $x1338)))
 ((_ th-lemma arith) @x2616 @x2062 @x2630 @x2644 @x2641 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        23
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-gcd-tests           6
 :arith-grobner             4
 :arith-max-min             544
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    11
 :arith-num-rows            3
 :arith-patches             6
 :arith-patches_succ        6
 :arith-pivots              3
 :arith-row-summations      3
 :arith-tableau-max-columns 50
 :arith-tableau-max-rows    3
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                3.96
 :memory                    3.37
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1445056
 :num-checks                1
 :propagations              14
 :rlimit-count              8497
 :time                      0.01
 :total-time                0.02)
