unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x168 (+ c!3 k!2)))
 (let ((?x334 (+ k!2 m!1)))
 (let ((?x603 (+ 6 m!1)))
 (let ((?x617 (+ 1 n!0)))
 (let ((?x659 (* ?x617 ?x617 ?x603 ?x334 ?x334 ?x334 ?x168 ?x168 ?x168)))
 (let ((?x513 (* 36 m!1)))
 (let ((?x590 (* 252 k!2)))
 (let ((?x578 (* m!1 m!1)))
 (let ((?x560 (* 12 ?x578)))
 (let ((?x661 (* (- 1) (* ?x603 ?x334 ?x334 ?x334 ?x168 ?x168 ?x168))))
 (let ((?x534 (* c!3 m!1 m!1 m!1)))
 (let ((?x514 (* c!3 n!0)))
 (let ((?x665 (* 216 ?x514)))
 (let ((?x496 (* k!2 m!1)))
 (let ((?x657 (* 120 ?x496)))
 (let ((?x510 (* 216 c!3)))
 (let ((?x466 (* 18 (* c!3 m!1 m!1))))
 (let ((?x314 (* m!1 m!1 m!1)))
 (let ((?x462 (* 19 (* k!2 m!1 m!1))))
 (let ((?x467 (* 108 (* c!3 m!1))))
 (let ((?x217 (* k!2 m!1 m!1 m!1)))
 (let ((?x554 (+ (* 216 (* n!0 k!2)) (* 18 (* n!0 k!2 m!1 m!1)) (* 108 (* n!0 k!2 m!1)) (* 18 (* c!3 n!0 m!1 m!1)) (* n!0 k!2 m!1 m!1 m!1) ?x217 ?x467 ?x462 ?x314 ?x466 (* 108 (* c!3 n!0 m!1)) ?x510 ?x657 ?x665 ?x534 ?x661 (* c!3 n!0 m!1 m!1 m!1) ?x560 ?x590 ?x513 ?x659)))
 (let (($x3481 (<= ?x554 0)))
 (let ((?x271 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x353 (<= ?x271 (- 6))))
 (let (($x398 (= ?x271 (- 6))))
 (let ((?x675 (* k!2 k!2)))
 (let ((?x332 (* (- 5) m!1)))
 (let ((?x321 (* (- 32) k!2)))
 (let ((?x674 (* 9 n!0)))
 (let ((?x278 (* (- 9) ?x514)))
 (let ((?x465 (* 2 ?x496)))
 (let ((?x673 (* (- 27) c!3)))
 (let ((?x539 (+ 13 (* (- 9) (* n!0 k!2)) ?x673 ?x465 ?x278 ?x674 ?x578 ?x321 ?x332 ?x675)))
 (let ((?x597 (* ?x554 ?x539)))
 (let (($x602 (= ?x597 0)))
 (let (($x449 (not $x602)))
 (let ((?x473 (* (- 1) k!2)))
 (let ((?x411 (+ (* 3 (* n!0 n!0)) (* 3 n!0) ?x473)))
 (let (($x410 (= ?x411 (- 1))))
 (let ((?x111 (* n!0 k!2)))
 (let ((?x501 (+ ?x111 (* (- 3) c!3) (* 2 n!0) ?x473)))
 (let (($x583 (= ?x501 (- 1))))
 (let ((?x511 (* (- 1) ?x675)))
 (let ((?x594 (* 5 k!2)))
 (let ((?x557 (* (- 9) n!0)))
 (let ((?x555 (* 9 ?x514)))
 (let ((?x330 (* 18 c!3)))
 (let ((?x104 (+ ?x330 ?x555 ?x557 ?x594 ?x511)))
 (let (($x114 (= ?x104 4)))
 (let (($x599 (and $x398 $x114 $x583 $x410 $x449)))
 (let ((?x672 (+ 13 ?x673 ?x321 ?x332 ?x674 ?x675 (* (- 9) (* k!2 n!0)) ?x278 ?x465 ?x578)))
 (let ((?x579 (+ ?x510 ?x590 ?x513 (* 216 (* k!2 n!0)) ?x665 ?x659 ?x661 ?x657 ?x560 (* 18 (* k!2 m!1 m!1 n!0)) (* 18 (* c!3 m!1 m!1 n!0)) (* 108 (* k!2 m!1 n!0)) (* 108 (* c!3 m!1 n!0)) ?x217 ?x534 ?x466 ?x467 (* k!2 m!1 m!1 m!1 n!0) (* c!3 m!1 m!1 m!1 n!0) ?x314 ?x462)))
 (let (($x589 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x194 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x330 ?x594 ?x557 ?x511 ?x555) 4) $x589 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= (* ?x579 ?x672) 0)))))
 (let (($x533 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x461 (* m m)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x427 (* (- 5) m)))
 (let ((?x482 (+ 13 (* (- 27) c) (* (- 32) k) ?x427 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) ?x461)))
 (let ((?x764 (* 19 (* k m m))))
 (let ((?x647 (* m m m)))
 (let ((?x580 (* c m m m n)))
 (let ((?x577 (* k m m m n)))
 (let ((?x566 (* c m)))
 (let ((?x664 (* 108 ?x566)))
 (let ((?x666 (* 18 (* c m m))))
 (let ((?x536 (* c m m m)))
 (let ((?x531 (* k m m m)))
 (let ((?x668 (* 108 (* c m n))))
 (let ((?x669 (* 108 (* k m n))))
 (let ((?x670 (* 18 (* c m m n))))
 (let ((?x671 (* 18 (* k m m n))))
 (let ((?x619 (* 12 ?x461)))
 (let ((?x460 (* k m)))
 (let ((?x766 (* 120 ?x460)))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x489 (+ 6 m)))
 (let ((?x290 (* (- 1) (* ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x342 (+ 1 n)))
 (let ((?x235 (* ?x342 ?x342 ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68)))
 (let ((?x147 (* c n)))
 (let ((?x530 (* 216 ?x147)))
 (let ((?x55 (* k n)))
 (let ((?x525 (* 216 ?x55)))
 (let ((?x637 (* 36 m)))
 (let ((?x768 (* 252 k)))
 (let ((?x572 (* 216 c)))
 (let ((?x559 (+ ?x572 ?x768 ?x637 ?x525 ?x530 ?x235 ?x290 ?x766 ?x619 ?x671 ?x670 ?x669 ?x668 ?x531 ?x536 ?x666 ?x664 ?x577 ?x580 ?x647 ?x764)))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 ?x147)) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 $x209 $x261 $x299 (not (= (* ?x559 ?x482) 0)))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x395 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x461 (* m m)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x427 (* (- 5) m)))
 (let ((?x482 (+ 13 (* (- 27) c) (* (- 32) k) ?x427 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) ?x461)))
 (let ((?x764 (* 19 (* k m m))))
 (let ((?x647 (* m m m)))
 (let ((?x580 (* c m m m n)))
 (let ((?x577 (* k m m m n)))
 (let ((?x666 (* 18 (* c m m))))
 (let ((?x536 (* c m m m)))
 (let ((?x531 (* k m m m)))
 (let ((?x668 (* 108 (* c m n))))
 (let ((?x669 (* 108 (* k m n))))
 (let ((?x670 (* 18 (* c m m n))))
 (let ((?x671 (* 18 (* k m m n))))
 (let ((?x619 (* 12 ?x461)))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x489 (+ 6 m)))
 (let ((?x290 (* (- 1) (* ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x342 (+ 1 n)))
 (let ((?x235 (* ?x342 ?x342 ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68)))
 (let ((?x147 (* c n)))
 (let ((?x530 (* 216 ?x147)))
 (let ((?x55 (* k n)))
 (let ((?x525 (* 216 ?x55)))
 (let ((?x637 (* 36 m)))
 (let ((?x768 (* 252 k)))
 (let ((?x572 (* 216 c)))
 (let ((?x201 (+ ?x572 ?x768 ?x637 ?x525 ?x530 ?x235 ?x290 (* 6 (* m 6 c)) (* 84 (* k m)) ?x619 ?x671 ?x670 ?x669 ?x668 ?x531 ?x536 ?x666 (* 72 (* c m)) ?x577 ?x580 ?x647 ?x764 (* 6 (* m 6 k)))))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 ?x147)) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 $x209 $x261 $x299 (not (= (* ?x201 ?x482) 0)))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x428 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x461 (* m m)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x427 (* (- 5) m)))
 (let ((?x482 (+ 13 (* (- 27) c) (* (- 32) k) ?x427 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) ?x461)))
 (let ((?x764 (* 19 (* k m m))))
 (let ((?x647 (* m m m)))
 (let ((?x580 (* c m m m n)))
 (let ((?x577 (* k m m m n)))
 (let ((?x566 (* c m)))
 (let ((?x664 (* 108 ?x566)))
 (let ((?x666 (* 18 (* c m m))))
 (let ((?x536 (* c m m m)))
 (let ((?x531 (* k m m m)))
 (let ((?x668 (* 108 (* c m n))))
 (let ((?x669 (* 108 (* k m n))))
 (let ((?x670 (* 18 (* c m m n))))
 (let ((?x671 (* 18 (* k m m n))))
 (let ((?x619 (* 12 ?x461)))
 (let ((?x460 (* k m)))
 (let ((?x766 (* 120 ?x460)))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x489 (+ 6 m)))
 (let ((?x290 (* (- 1) (* ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x342 (+ 1 n)))
 (let ((?x235 (* ?x342 ?x342 ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68)))
 (let ((?x147 (* c n)))
 (let ((?x530 (* 216 ?x147)))
 (let ((?x55 (* k n)))
 (let ((?x525 (* 216 ?x55)))
 (let ((?x637 (* 36 m)))
 (let ((?x768 (* 252 k)))
 (let ((?x572 (* 216 c)))
 (let ((?x559 (+ ?x572 ?x768 ?x637 ?x525 ?x530 ?x235 ?x290 ?x766 ?x619 ?x671 ?x670 ?x669 ?x668 ?x531 ?x536 ?x666 ?x664 ?x577 ?x580 ?x647 ?x764)))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 ?x147)) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x526 (and $x125 $x209 $x261 $x299 (not (= (* ?x559 ?x482) 0)))))
 (let ((?x201 (+ ?x572 ?x768 ?x637 ?x525 ?x530 ?x235 ?x290 (* 6 (* m 6 c)) (* 84 ?x460) ?x619 ?x671 ?x670 ?x669 ?x668 ?x531 ?x536 ?x666 (* 72 ?x566) ?x577 ?x580 ?x647 ?x764 (* 6 (* m 6 k)))))
 (let (($x180 (and $x125 $x209 $x261 $x299 (not (= (* ?x201 ?x482) 0)))))
 (rewrite (= $x180 $x526)))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x588 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x427 (* (- 5) m)))
 (let ((?x424 (* (- 18) c)))
 (let ((?x277 (+ 13 ?x424 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x427 ?x48 ?x78)))
 (let ((?x68 (+ c k)))
 (let ((?x489 (+ 6 m)))
 (let ((?x342 (+ 1 n)))
 (let ((?x235 (* ?x342 ?x342 ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68)))
 (let ((?x290 (* (- 1) (* ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x237 (* (+ ?x290 (* ?x489 ?x489 ?x72) (* ?x342 ?x489 ?x489 ?x489 ?x68) ?x235) ?x277)))
 (let (($x322 (not (= ?x237 0))))
 (let (($x118 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x389 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x211 ?x212) 4) $x389 $x118 $x322)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x393 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x461 (* m m)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x427 (* (- 5) m)))
 (let ((?x482 (+ 13 (* (- 27) c) (* (- 32) k) ?x427 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) ?x461)))
 (let ((?x764 (* 19 (* k m m))))
 (let ((?x647 (* m m m)))
 (let ((?x580 (* c m m m n)))
 (let ((?x577 (* k m m m n)))
 (let ((?x666 (* 18 (* c m m))))
 (let ((?x536 (* c m m m)))
 (let ((?x531 (* k m m m)))
 (let ((?x668 (* 108 (* c m n))))
 (let ((?x669 (* 108 (* k m n))))
 (let ((?x670 (* 18 (* c m m n))))
 (let ((?x671 (* 18 (* k m m n))))
 (let ((?x619 (* 12 ?x461)))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x489 (+ 6 m)))
 (let ((?x290 (* (- 1) (* ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x342 (+ 1 n)))
 (let ((?x235 (* ?x342 ?x342 ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68)))
 (let ((?x147 (* c n)))
 (let ((?x530 (* 216 ?x147)))
 (let ((?x55 (* k n)))
 (let ((?x525 (* 216 ?x55)))
 (let ((?x637 (* 36 m)))
 (let ((?x768 (* 252 k)))
 (let ((?x572 (* 216 c)))
 (let ((?x201 (+ ?x572 ?x768 ?x637 ?x525 ?x530 ?x235 ?x290 (* 6 (* m 6 c)) (* 84 (* k m)) ?x619 ?x671 ?x670 ?x669 ?x668 ?x531 ?x536 ?x666 (* 72 (* c m)) ?x577 ?x580 ?x647 ?x764 (* 6 (* m 6 k)))))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 ?x147)) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x180 (and $x125 $x209 $x261 $x299 (not (= (* ?x201 ?x482) 0)))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x424 (* (- 18) c)))
 (let ((?x277 (+ 13 ?x424 (* (- 23) k) (* (- 9) (* ?x342 ?x68)) ?x427 ?x48 ?x78)))
 (let ((?x237 (* (+ ?x290 (* ?x489 ?x489 ?x72) (* ?x342 ?x489 ?x489 ?x489 ?x68) ?x235) ?x277)))
 (let (($x322 (not (= ?x237 0))))
 (let (($x118 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x389 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x349 (and $x125 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x211 ?x212) 4) $x389 $x118 $x322)))
 (rewrite (= $x349 $x180)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x323 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x427 (* (- 5) m)))
 (let ((?x424 (* (- 18) c)))
 (let ((?x277 (+ 13 ?x424 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x427 ?x48 ?x78)))
 (let ((?x68 (+ c k)))
 (let ((?x489 (+ 6 m)))
 (let ((?x342 (+ 1 n)))
 (let ((?x235 (* ?x342 ?x342 ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68)))
 (let ((?x290 (* (- 1) (* ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x237 (* (+ ?x290 (* ?x489 ?x489 ?x72) (* ?x342 ?x489 ?x489 ?x489 ?x68) ?x235) ?x277)))
 (let (($x322 (not (= ?x237 0))))
 (let (($x118 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x500 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x544 (= (+ ?x424 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 $x544 $x500 $x118 $x322)))))))))))))))))) :qid k!34))
 ))
 (let ((?x638 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x427 (* (- 5) m)))
 (let ((?x424 (* (- 18) c)))
 (let ((?x277 (+ 13 ?x424 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x427 ?x48 ?x78)))
 (let ((?x68 (+ c k)))
 (let ((?x489 (+ 6 m)))
 (let ((?x342 (+ 1 n)))
 (let ((?x235 (* ?x342 ?x342 ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68)))
 (let ((?x290 (* (- 1) (* ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x237 (* (+ ?x290 (* ?x489 ?x489 ?x72) (* ?x342 ?x489 ?x489 ?x489 ?x68) ?x235) ?x277)))
 (let (($x322 (not (= ?x237 0))))
 (let (($x118 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x389 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x349 (and $x125 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x211 ?x212) 4) $x389 $x118 $x322)))
 (let (($x500 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x544 (= (+ ?x424 (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49) (- 4))))
 (let (($x333 (and $x125 $x544 $x500 $x118 $x322)))
 (rewrite (= $x333 $x349))))))))))))))))))))))))))))
 ))
 (let (($x92 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x81 (+ m 6)))
 (let ((?x72 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x86 (+ (* (- 1) ?x68 ?x68 ?x68 ?x72 ?x72 ?x72 ?x81) (* ?x72 ?x81 ?x81) (* ?x68 ?x81 ?x81 ?x81 ?x70) (* ?x68 ?x68 ?x68 ?x72 ?x72 ?x72 ?x81 ?x70 ?x70))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x76 (- (- (- (* 4 1) (* 18 ?x68)) (* 9 ?x68 ?x70)) (* 5 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* (+ ?x76 (* 9 ?x70) ?x78) ?x86) 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x329 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x427 (* (- 5) m)))
 (let ((?x424 (* (- 18) c)))
 (let ((?x277 (+ 13 ?x424 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x427 ?x48 ?x78)))
 (let ((?x68 (+ c k)))
 (let ((?x489 (+ 6 m)))
 (let ((?x342 (+ 1 n)))
 (let ((?x235 (* ?x342 ?x342 ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68)))
 (let ((?x290 (* (- 1) (* ?x489 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x237 (* (+ ?x290 (* ?x489 ?x489 ?x72) (* ?x342 ?x489 ?x489 ?x489 ?x68) ?x235) ?x277)))
 (let (($x322 (not (= ?x237 0))))
 (let (($x118 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x500 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x544 (= (+ ?x424 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x333 (and $x125 $x544 $x500 $x118 $x322)))
 (let ((?x70 (+ n 1)))
 (let ((?x81 (+ m 6)))
 (let ((?x86 (+ (* (- 1) ?x68 ?x68 ?x68 ?x72 ?x72 ?x72 ?x81) (* ?x72 ?x81 ?x81) (* ?x68 ?x81 ?x81 ?x81 ?x70) (* ?x68 ?x68 ?x68 ?x72 ?x72 ?x72 ?x81 ?x70 ?x70))))
 (let ((?x76 (- (- (- (* 4 1) (* 18 ?x68)) (* 9 ?x68 ?x70)) (* 5 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x91 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* (+ ?x76 (* 9 ?x70) ?x78) ?x86) 0))))))
 (rewrite (= $x91 $x333))))))))))))))))))))))))))))))))
 ))
 (let ((@x93 (asserted $x92)))
 (let ((@x645 (mp (mp @x93 (quant-intro (proof-bind ?x329) (= $x92 $x323)) $x323) (rewrite (= $x323 $x323)) $x323)))
 (let ((@x435 (mp (mp @x645 (quant-intro (proof-bind ?x638) (= $x323 $x588)) $x588) (quant-intro (proof-bind ?x393) (= $x588 $x395)) $x395)))
 (let ((@x284 (mp~ (mp @x435 (quant-intro (proof-bind ?x428) (= $x395 $x533)) $x533) (sk (~ $x533 $x194)) $x194)))
 (let ((@x472 (mp @x284 (rewrite (= $x194 $x599)) $x599)))
 (let ((@x546 (and-elim @x472 $x398)))
 (let ((@x651 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x398) $x353)) @x546 $x353)))
 (let (($x406 (>= ?x271 (- 6))))
 (let ((@x642 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x398) $x406)) @x546 $x406)))
 (let (($x474 (<= ?x501 (- 1))))
 (let ((@x581 (and-elim @x472 $x583)))
 (let ((@x109 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x583) $x474)) @x581 $x474)))
 (let (($x320 (>= ?x501 (- 1))))
 (let ((@x547 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x583) $x320)) @x581 $x320)))
 (let (($x505 (<= ?x411 (- 1))))
 (let ((@x498 (and-elim @x472 $x410)))
 (let ((@x610 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x410) $x505)) @x498 $x505)))
 (let (($x585 (>= ?x411 (- 1))))
 (let ((@x608 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x410) $x585)) @x498 $x585)))
 (let (($x189 (<= ?x104 4)))
 (let ((@x497 (and-elim @x472 $x114)))
 (let ((@x372 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x114) $x189)) @x497 $x189)))
 (let (($x99 (>= ?x104 4)))
 (let ((@x604 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x114) $x99)) @x497 $x99)))
 (let ((@x3507 (hypothesis (not $x3481))))
 (let (($x3515 (not (<= ?x597 0))))
 (let (($x528 (>= ?x597 0)))
 (let (($x379 (not $x528)))
 (let ((@x373 (hypothesis $x379)))
 (let ((@x3462 ((_ th-lemma arith) @x373 @x3507 @x642 @x651 @x604 @x372 @x604 @x372 @x642 @x651 @x608 @x610 @x604 @x372 @x547 @x109 @x604 @x372 @x604 @x372 @x547 @x109 false)))
 (let (($x1165 (>= ?x554 0)))
 (let ((@x1241 (hypothesis (not $x1165))))
 (let ((@x1224 ((_ th-lemma arith) @x373 @x1241 @x608 @x610 @x642 @x651 @x642 @x651 @x642 @x651 @x608 @x610 @x642 @x651 @x547 @x109 @x608 @x610 @x547 @x109 @x608 @x610 @x547 @x109 @x547 @x109 @x608 @x610 @x608 @x610 @x642 @x651 @x608 @x610 @x642 @x651 @x642 @x651 @x604 @x372 false)))
 (let ((@x3438 ((_ th-lemma arith farkas 1 1 1) @x373 (unit-resolution (lemma @x1224 (or $x1165 $x528)) @x373 $x1165) (unit-resolution (lemma @x3462 (or $x3481 $x528)) @x373 $x3481) false)))
 (let ((@x3489 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x602 $x3515 $x379)) (and-elim @x472 $x449) (or $x3515 $x379))))
 (let ((@x361 (unit-resolution @x3489 (lemma @x3438 $x528) $x3515)))
 (let ((@x3475 ((_ th-lemma arith) @x361 @x3507 @x642 @x651 @x642 @x651 @x642 @x651 @x642 @x651 @x604 @x372 @x547 @x109 @x608 @x610 @x642 @x651 @x547 @x109 @x642 @x651 false)))
 (let ((@x3522 ((_ th-lemma arith) @x361 @x1241 @x642 @x651 @x608 @x610 @x608 @x610 @x642 @x651 @x547 @x109 @x608 @x610 @x604 @x372 @x547 @x109 false)))
 ((_ th-lemma arith farkas 1 1 1) @x361 (lemma @x3522 $x1165) (lemma @x3475 $x3481) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 192
 :arith-assert-diseq        43
 :arith-assert-lower        2104
 :arith-assert-upper        2082
 :arith-bound-prop          22
 :arith-branch-var          81
 :arith-conflicts           98
 :arith-eq-adapter          29
 :arith-fixed-eqs           406
 :arith-gcd-tests           1562
 :arith-gomory-cuts         67
 :arith-grobner             136
 :arith-ineq-splits         81
 :arith-max-min             15100
 :arith-nonlinear-bounds    586
 :arith-nonlinear-horner    1908
 :arith-num-rows            32
 :arith-offset-eqs          2
 :arith-patches             178
 :arith-patches_succ        17
 :arith-pivots              2960
 :arith-pseudo-nonlinear    545
 :arith-row-summations      41449
 :arith-tableau-max-columns 98
 :arith-tableau-max-rows    32
 :conflicts                 107
 :decisions                 651
 :del-clause                266
 :final-checks              468
 :max-memory                5.46
 :memory                    3.52
 :minimized-lits            19
 :mk-bool-var               684
 :mk-clause                 604
 :num-allocs                6514525012.00
 :num-checks                1
 :propagations              978
 :restarts                  1
 :rlimit-count              6110415
 :time                      4.55
 :total-time                4.56)
