unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x2342 (* (- 3) s!1)))
 (let ((?x581 (* s00 s00)))
 (let ((?x1620 (* 4 ?x581)))
 (let ((?x512 (* r00 x00)))
 (let ((?x1389 (* 18 ?x512)))
 (let ((?x44 (* 3 s00)))
 (let ((?x953 (+ ?x44 (* 6 (* r00 r00 s!1)) (* (- 9) (* s00 r00)) ?x1389 ?x1620 (* (- 6) (* s00 r00 r00)) (* (- 18) (* r00 x!0)) (* (- 2) (* s!1 s!1)) (* (- 18) (* x!0 r!2)) (* 6 (* s00 r00 r!2)) (* (- 6) (* r00 s!1 r!2)) (* (- 2) (* s00 s!1)) ?x2342 (* 9 (* s!1 r!2)) (* 18 (* x00 r!2)) (* 9 (* r00 s!1)) (* (- 9) (* s00 r!2)))))
 (let (($x440 (<= ?x953 0)))
 (let (($x513 (= ?x953 0)))
 (let ((?x2339 (* s!1 x!0)))
 (let ((?x1280 (* 6 ?x2339)))
 (let ((?x1913 (* r!2 r!2)))
 (let ((?x1870 (* 108 ?x1913)))
 (let ((?x768 (* 36 r!2)))
 (let ((?x2086 (* 72 x!0)))
 (let ((?x771 (* (- 57) s!1)))
 (let ((?x1122 (* 72 (* r!2 r!2 r!2))))
 (let ((?x867 (* r00 r00 x00)))
 (let ((?x880 (* (- 36) ?x867)))
 (let ((?x795 (* s00 x00)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x707 (* s!1 s!1)))
 (let ((?x730 (* (- 1) ?x707)))
 (let ((?x658 (* s00 s00 r00)))
 (let ((?x686 (* (- 2) ?x658)))
 (let ((?x637 (* s00 r00 r00)))
 (let ((?x990 (* 36 ?x637)))
 (let ((?x2057 (* (- 19) ?x581)))
 (let ((?x2137 (* (- 90) ?x512)))
 (let ((?x416 (* s00 r00)))
 (let ((?x1813 (* 18 ?x416)))
 (let ((?x291 (* r00 r00)))
 (let ((?x2001 (* (- 108) ?x291)))
 (let ((?x2232 (* (- 72) x00)))
 (let ((?x419 (* (- 36) r00)))
 (let ((?x2277 (* 57 s00)))
 (let ((?x874 (+ ?x2277 ?x419 ?x2232 ?x2001 (* (- 72) (* r00 r00 s!1)) ?x1813 (* 4 (* r00 s!1 s!1)) ?x2137 ?x2057 (* 12 (* s00 r!2 r!2)) ?x990 ?x686 (* 90 (* r00 x!0)) ?x730 ?x796 (* 24 (* s!1 r!2 r!2)) ?x880 (* 90 (* x!0 r!2)) (* 36 (* r00 r00 x!0)) (* 2 (* s00 s!1 r!2)) (* (- 36) (* r00 x00 r!2)) ?x1122 (* (- 12) (* s00 r00 r!2)) (* (- 4) (* s00 s00 r!2)) (* 12 (* r00 s!1 r!2)) (* 20 (* s00 s!1)) ?x771 ?x2086 (* (- 6) (* x00 s!1)) (* (- 42) (* s!1 r!2)) (* (- 216) (* r00 r00 r!2)) (* (- 90) (* x00 r!2)) (* (- 2) (* s00 r00 s!1)) ?x768 (* (- 90) (* r00 s!1)) (* 36 (* r00 x!0 r!2)) (* (- 6) (* s00 x!0)) (* 2 (* s!1 s!1 r!2)) ?x1870 (* 144 (* r00 r!2 r!2)) (* 114 (* s00 r!2)) ?x1280)))
 (let ((?x1167 (* s!1 r!2)))
 (let ((?x1955 (* (- 1) x!0)))
 (let ((?x706 (* 6 r!2)))
 (let ((?x423 (+ 3 s!1 ?x706)))
 (let ((?x1961 (* (- 1) s!1)))
 (let ((?x685 (+ ?x1961 x!0)))
 (let ((?x518 (+ (* ?x685 ?x685 ?x685 ?x423 ?x423) (* (- 1) (* x!0 r!2)) s!1 ?x1955 ?x1167)))
 (let ((?x1756 (* ?x518 ?x874)))
 (let (($x852 (= ?x1756 0)))
 (let (($x1078 (not $x852)))
 (let ((?x1350 (* x00 x00)))
 (let ((?x924 (* 108 ?x1350)))
 (let ((?x1188 (* s00 s00 s00)))
 (let ((?x802 (* 16 ?x1188)))
 (let ((?x1221 (* (- 9) s!1)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x2037 (* (- 432) ?x902)))
 (let ((?x1865 (* (- 108) ?x795)))
 (let ((?x354 (* (- 36) ?x637)))
 (let ((?x1341 (* 51 ?x581)))
 (let ((?x622 (* 108 ?x512)))
 (let ((?x333 (* r00 r00 s!1)))
 (let ((?x351 (* 36 ?x333)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1999 (+ ?x137 ?x351 (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 54) ?x416) (* 216 (* s00 r00 x00)) ?x622 ?x1341 ?x354 (* (- 108) ?x658) (* (- 108) (* r00 x!0)) (* 15 ?x707) (* (- 216) (* x00 x!0)) (* 108 (* x!0 x!0)) (* (- 36) (* s00 s00 r00 r00)) ?x1865 ?x2037 (* 216 (* s00 r00 r00 r00)) (* (- 66) (* s00 s!1)) ?x1221 (* 108 (* x00 s!1)) ?x802 (* 108 (* s00 r00 s!1)) (* (- 216) (* r00 r00 r00 s!1)) ?x924 (* 54 (* r00 s!1)) (* 108 (* s00 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* (- 12) (* s00 s!1 s!1)) (* (- 108) ?x2339))))
 (let (($x2022 (= ?x1999 0)))
 (let ((?x1427 (* 36 ?x867)))
 (let ((?x722 (* (- 6) ?x795)))
 (let ((?x1428 (* 15 ?x581)))
 (let ((?x616 (* 54 ?x512)))
 (let ((?x1326 (+ ?x137 ?x351 (* (- 24) ?x416) (* (- 4) (* r00 s!1 s!1)) ?x616 ?x1428 ?x354 (* 2 ?x658) (* (- 54) (* r00 x!0)) (* (- 3) ?x707) ?x722 ?x1427 (* (- 54) (* x!0 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 2) (* s00 s!1 r!2)) (* 36 (* r00 x00 r!2)) (* 4 (* s00 s00 r!2)) (* (- 12) (* s00 s!1)) ?x1221 (* 6 (* x00 s!1)) (* 24 ?x1167) (* 54 (* x00 r!2)) (* 2 (* s00 r00 s!1)) (* 24 (* r00 s!1)) (* (- 36) (* r00 x!0 r!2)) (* 6 (* s00 x!0)) (* (- 2) (* s!1 s!1 r!2)) (* (- 24) (* s00 r!2)) (* (- 6) ?x2339))))
 (let (($x1323 (= ?x1326 0)))
 (let ((?x2343 (* 3 r!2)))
 (let ((?x2311 (* 6 x!0)))
 (let ((?x459 (* r00 r00 r00)))
 (let ((?x460 (* 12 ?x459)))
 (let ((?x494 (* (- 6) ?x416)))
 (let ((?x491 (* (- 6) x00)))
 (let ((?x490 (* (- 3) r00)))
 (let ((?x921 (+ ?x44 ?x490 ?x491 ?x494 ?x460 ?x2342 ?x2311 (* 2 ?x1167) (* (- 12) (* r00 r00 r!2)) ?x2343 (* 4 (* s00 r!2)))))
 (let (($x1087 (= ?x921 0)))
 (let ((?x1979 (* (- 3) ?x291)))
 (let ((?x1162 (+ s00 ?x1979 ?x1961 (* 3 ?x1913))))
 (let (($x1163 (= ?x1162 0)))
 (let (($x2176 (and $x1163 $x1087 $x513 $x1323 $x2022 $x1078)))
 (let ((?x753 (* 36 (* x!0 r00 r00))))
 (let ((?x2315 (* (- 36) (* r!2 r00 x00))))
 (let ((?x873 (* 2 (* r!2 s!1 s00))))
 (let ((?x963 (* (- 4) (* r!2 s00 s00))))
 (let ((?x2223 (* 2 (* r!2 s!1 s!1))))
 (let ((?x1048 (* s!1 s00 r00)))
 (let ((?x1064 (* (- 2) ?x1048)))
 (let ((?x1108 (* s!1 x00)))
 (let ((?x868 (* (- 6) ?x1108)))
 (let ((?x309 (* 4 (* s!1 s!1 r00))))
 (let ((?x442 (* x!0 s00)))
 (let ((?x1670 (* (- 6) ?x442)))
 (let ((?x2040 (* 36 (* r!2 x!0 r00))))
 (let ((?x995 (+ ?x768 ?x771 ?x2086 ?x2277 ?x419 ?x2232 ?x1870 ?x2001 (* (- 42) (* r!2 s!1)) (* (- 216) (* r!2 r00 r00)) (* 114 (* r!2 s00)) ?x1813 ?x2137 ?x730 (* 90 (* r!2 x!0)) (* 12 (* r!2 s!1 r00)) ?x2040 (* (- 72) (* s!1 r00 r00)) ?x2057 ?x1670 (* 90 (* x!0 r00)) ?x990 ?x309 (* (- 90) (* r!2 x00)) ?x686 (* 20 (* s!1 s00)) (* (- 90) (* s!1 r00)) ?x868 (* (- 12) (* r!2 s00 r00)) ?x1064 ?x796 ?x2223 ?x1280 ?x963 ?x880 ?x873 ?x2315 ?x1122 (* 12 (* r!2 r!2 s00)) ?x753 (* 144 (* r!2 r!2 r00)) (* 24 (* r!2 r!2 s!1)))))
 (let ((?x1339 (* r!2 s!1)))
 (let ((?x766 (+ s!1 ?x1955 ?x1339 (* ?x685 ?x685 ?x685 (+ 3 ?x706 s!1) (+ 3 ?x706 s!1)) (* (- 1) (* r!2 x!0)))))
 (let ((?x1380 (* (- 108) ?x1350)))
 (let ((?x1379 (* (- 16) ?x1188)))
 (let ((?x1076 (* s00 r00 r00 r00)))
 (let ((?x1375 (* (- 216) ?x1076)))
 (let ((?x903 (* 432 ?x902)))
 (let ((?x1133 (* 108 ?x795)))
 (let ((?x759 (* s00 s00 r00 r00)))
 (let ((?x760 (* 36 ?x759)))
 (let ((?x1030 (* 108 ?x658)))
 (let ((?x1369 (* (- 51) ?x581)))
 (let ((?x1667 (* s!1 r00 r00)))
 (let ((?x2039 (* (- 36) ?x1667)))
 (let ((?x1366 (* (- 108) ?x512)))
 (let ((?x505 (* s00 r00 x00)))
 (let ((?x1365 (* (- 216) ?x505)))
 (let ((?x514 (* 54 ?x416)))
 (let ((?x977 (* (- 9) s00)))
 (let ((?x618 (* 9 s!1)))
 (let ((?x1443 (+ ?x618 ?x977 ?x514 ?x1365 ?x1366 (* (- 15) ?x707) ?x2039 ?x1369 (* (- 108) ?x442) (* 108 (* x!0 r00)) ?x990 (* 216 (* s!1 r00 r00 r00)) ?x1030 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) ?x1108) ?x760 (* (- 108) ?x1048) ?x1133 (* 108 ?x2339) (* 4 (* s!1 s!1 s!1)) (* (- 108) (* x!0 x!0)) ?x903 (* 12 (* s!1 s!1 s00)) ?x1375 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1379 (* 216 (* x!0 x00)) ?x1380)))
 (let ((?x906 (* (- 15) ?x581)))
 (let ((?x541 (* (- 54) ?x512)))
 (let ((?x554 (* 24 ?x416)))
 (let ((?x1827 (+ ?x618 ?x977 (* (- 24) ?x1339) (* 24 (* r!2 s00)) ?x554 ?x541 (* 3 ?x707) (* 54 (* r!2 x!0)) ?x2040 ?x2039 ?x906 ?x1670 (* 54 (* x!0 r00)) ?x990 ?x309 (* (- 54) (* r!2 x00)) ?x686 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) ?x868 ?x1064 ?x796 ?x2223 ?x1280 ?x963 ?x880 ?x873 ?x2315 ?x753)))
 (let ((?x638 (* 6 ?x637)))
 (let ((?x594 (* (- 4) ?x581)))
 (let ((?x526 (* (- 18) ?x512)))
 (let ((?x531 (* 9 ?x416)))
 (let ((?x368 (* (- 3) s00)))
 (let ((?x1098 (+ (* 3 s!1) ?x368 (* (- 9) ?x1339) (* 9 (* r!2 s00)) ?x531 ?x526 (* 2 ?x707) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1667) ?x594 (* 18 (* x!0 r00)) ?x638 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x2448 (+ ?x2343 ?x2342 ?x2311 ?x44 ?x490 ?x491 (* 2 ?x1339) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x494 ?x460)))
 (let (($x1230 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x1913) (* 3 ?x291)) 0) (= ?x2448 0) (= ?x1098 0) (= ?x1827 0) (= ?x1443 0) (not (= (* ?x766 ?x995) 0)))))
 (let (($x1257 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1063 (* 36 (* x r00 r00))))
 (let ((?x944 (* (- 36) (* r r00 x00))))
 (let ((?x920 (* 2 (* r s s00))))
 (let ((?x867 (* r00 r00 x00)))
 (let ((?x880 (* (- 36) ?x867)))
 (let ((?x828 (* (- 4) (* r s00 s00))))
 (let ((?x803 (* s x)))
 (let ((?x804 (* 6 ?x803)))
 (let ((?x800 (* 2 (* r s s))))
 (let ((?x795 (* s00 x00)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x769 (* s s00 r00)))
 (let ((?x782 (* (- 2) ?x769)))
 (let ((?x716 (* r s00 r00)))
 (let ((?x1816 (* (- 12) ?x716)))
 (let ((?x714 (* s x00)))
 (let ((?x744 (* (- 6) ?x714)))
 (let ((?x678 (* s s00)))
 (let ((?x2098 (* 20 ?x678)))
 (let ((?x658 (* s00 s00 r00)))
 (let ((?x686 (* (- 2) ?x658)))
 (let ((?x649 (* r x00)))
 (let ((?x2233 (* (- 90) ?x649)))
 (let ((?x642 (* 4 (* s s r00))))
 (let ((?x637 (* s00 r00 r00)))
 (let ((?x990 (* 36 ?x637)))
 (let ((?x590 (* x s00)))
 (let ((?x617 (* (- 6) ?x590)))
 (let ((?x581 (* s00 s00)))
 (let ((?x2057 (* (- 19) ?x581)))
 (let ((?x551 (* 36 (* r x r00))))
 (let ((?x512 (* r00 x00)))
 (let ((?x2137 (* (- 90) ?x512)))
 (let ((?x416 (* s00 r00)))
 (let ((?x1813 (* 18 ?x416)))
 (let ((?x341 (* r r00 r00)))
 (let ((?x2010 (* (- 216) ?x341)))
 (let ((?x291 (* r00 r00)))
 (let ((?x2001 (* (- 108) ?x291)))
 (let ((?x2232 (* (- 72) x00)))
 (let ((?x419 (* (- 36) r00)))
 (let ((?x2277 (* 57 s00)))
 (let ((?x1924 (* 72 x)))
 (let ((?x424 (+ (* 36 r) (* (- 57) s) ?x1924 ?x2277 ?x419 ?x2232 (* 108 (* r r)) ?x2001 (* (- 42) (* r s)) ?x2010 (* 114 (* r s00)) ?x1813 ?x2137 (* (- 1) (* s s)) (* 90 (* r x)) (* 12 (* r s r00)) ?x551 (* (- 72) (* s r00 r00)) ?x2057 ?x617 (* 90 (* x r00)) ?x990 ?x642 ?x2233 ?x686 ?x2098 (* (- 90) (* s r00)) ?x744 ?x1816 ?x782 ?x796 ?x800 ?x804 ?x828 ?x880 ?x920 ?x944 (* 72 (* r r r)) (* 12 (* r r s00)) ?x1063 (* 144 (* r r r00)) (* 24 (* r r s)))))
 (let ((?x539 (* r x)))
 (let ((?x2482 (* (- 1) ?x539)))
 (let ((?x213 (* 6 r)))
 (let ((?x1390 (+ 3 ?x213 s)))
 (let ((?x270 (* (- 1) s)))
 (let ((?x1454 (+ ?x270 x)))
 (let ((?x335 (* r s)))
 (let ((?x2483 (* (- 1) x)))
 (let (($x1493 (= (* (+ s ?x2483 ?x335 (* ?x1454 ?x1454 ?x1454 ?x1390 ?x1390) ?x2482) ?x424) 0)))
 (let ((?x1350 (* x00 x00)))
 (let ((?x1380 (* (- 108) ?x1350)))
 (let ((?x1188 (* s00 s00 s00)))
 (let ((?x1379 (* (- 16) ?x1188)))
 (let ((?x1076 (* s00 r00 r00 r00)))
 (let ((?x1375 (* (- 216) ?x1076)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x903 (* 432 ?x902)))
 (let ((?x1133 (* 108 ?x795)))
 (let ((?x759 (* s00 s00 r00 r00)))
 (let ((?x760 (* 36 ?x759)))
 (let ((?x1030 (* 108 ?x658)))
 (let ((?x1369 (* (- 51) ?x581)))
 (let ((?x555 (* s r00 r00)))
 (let ((?x854 (* (- 36) ?x555)))
 (let ((?x1366 (* (- 108) ?x512)))
 (let ((?x505 (* s00 r00 x00)))
 (let ((?x1365 (* (- 216) ?x505)))
 (let ((?x514 (* 54 ?x416)))
 (let ((?x977 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1381 (+ ?x143 ?x977 ?x514 ?x1365 ?x1366 (* (- 15) (* s s)) ?x854 ?x1369 (* (- 108) ?x590) (* 108 (* x r00)) ?x990 (* 216 (* s r00 r00 r00)) ?x1030 (* 66 ?x678) (* (- 54) (* s r00)) (* (- 108) ?x714) ?x760 (* (- 108) ?x769) ?x1133 (* 108 ?x803) (* 4 (* s s s)) (* (- 108) (* x x)) ?x903 (* 12 (* s s s00)) ?x1375 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1379 (* 216 (* x x00)) ?x1380)))
 (let (($x1382 (= ?x1381 0)))
 (let ((?x690 (* s r00)))
 (let ((?x1049 (* (- 24) ?x690)))
 (let ((?x906 (* (- 15) ?x581)))
 (let ((?x564 (* 54 ?x539)))
 (let ((?x535 (* s s)))
 (let ((?x559 (* 3 ?x535)))
 (let ((?x541 (* (- 54) ?x512)))
 (let ((?x554 (* 24 ?x416)))
 (let ((?x389 (* r s00)))
 (let ((?x1026 (* 24 ?x389)))
 (let ((?x509 (* (- 24) ?x335)))
 (let ((?x1069 (+ ?x143 ?x977 ?x509 ?x1026 ?x554 ?x541 ?x559 ?x564 ?x551 ?x854 ?x906 ?x617 (* 54 (* x r00)) ?x990 ?x642 (* (- 54) ?x649) ?x686 (* 12 ?x678) ?x1049 ?x744 ?x782 ?x796 ?x800 ?x804 ?x828 ?x880 ?x920 ?x944 ?x1063)))
 (let (($x1074 (= ?x1069 0)))
 (let ((?x638 (* 6 ?x637)))
 (let ((?x594 (* (- 4) ?x581)))
 (let ((?x536 (* 2 ?x535)))
 (let ((?x526 (* (- 18) ?x512)))
 (let ((?x531 (* 9 ?x416)))
 (let ((?x368 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x735 (+ ?x47 ?x368 (* (- 9) ?x335) (* 9 ?x389) ?x531 ?x526 ?x536 (* 18 ?x539) (* 6 (* r s r00)) (* (- 6) ?x555) ?x594 (* 18 (* x r00)) ?x638 (* (- 18) ?x649) (* 2 ?x678) (* (- 9) ?x690) (* (- 6) ?x716))))
 (let (($x742 (= ?x735 0)))
 (let ((?x459 (* r00 r00 r00)))
 (let ((?x460 (* 12 ?x459)))
 (let ((?x494 (* (- 6) ?x416)))
 (let ((?x491 (* (- 6) x00)))
 (let ((?x490 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x489 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x495 (+ ?x43 ?x489 ?x56 ?x44 ?x490 ?x491 (* 2 ?x335) (* (- 12) ?x341) (* 4 ?x389) ?x494 ?x460)))
 (let (($x496 (= ?x495 0)))
 (let (($x324 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x291)) 0)))
 (and $x324 $x496 $x742 $x1074 $x1382 (not $x1493)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x699 (exists ((r Int) (s Int) (x Int) )(! (let ((?x143 (* 9 s)))
 (let ((?x1679 (* r00 r00 s00)))
 (let ((?x601 (* 36 ?x1679)))
 (let ((?x977 (* (- 9) s00)))
 (let ((?x581 (* s00 s00)))
 (let ((?x906 (* (- 15) ?x581)))
 (let ((?x867 (* r00 r00 x00)))
 (let ((?x880 (* (- 36) ?x867)))
 (let ((?x786 (* 6 (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x822 (+ 3 s ?x213)))
 (let ((?x1810 (+ 1 r)))
 (let ((?x795 (* s00 x00)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x1693 (* r00 s00 s00)))
 (let ((?x996 (* (- 2) ?x1693)))
 (let ((?x1002 (* r00 s00)))
 (let ((?x667 (* 24 ?x1002)))
 (let ((?x512 (* r00 x00)))
 (let ((?x541 (* (- 54) ?x512)))
 (let ((?x866 (+ 27 (* (- 24) (* ?x1810 ?x822)) ?x541 (* 36 (* r00 ?x1810 (+ x (* (- 1) s)))) ?x667 (* 3 (* ?x822 ?x822)) (* 54 (* ?x1810 (+ x (* (- 1) s)))) (* (- 6) (* s00 (+ x (* (- 1) s)))) (* 4 (* r00 ?x822 ?x822)) ?x996 (* (- 6) (* x00 ?x822)) (* 12 (* s00 ?x822)) (* (- 2) (* r00 s00 ?x822)) ?x796 (* 2 (* ?x1810 ?x822 ?x822)) ?x786 (* (- 4) (* s00 s00 ?x1810)) (* (- 36) (* r00 r00 ?x822)) ?x880 ?x906 (* 2 (* s00 ?x1810 ?x822)) (* (- 36) (* r00 x00 ?x1810)) (* 54 (* r00 (+ x (* (- 1) s)))) ?x977 ?x601 (* (- 54) (* x00 ?x1810)) ?x143 (* 54 r) (* 24 (* s00 ?x1810)) (* (- 24) (* r00 ?x822)) (* 36 (* r00 r00 (+ x (* (- 1) s)))))))
 (let ((?x270 (* (- 1) s)))
 (let ((?x2140 (+ x ?x270)))
 (let (($x1004 (= (* (+ (* ?x2140 ?x2140 ?x2140 ?x822 ?x822) (* (- 1) (* ?x1810 ?x2140))) ?x866) 0)))
 (let (($x980 (not $x1004)))
 (let ((?x1350 (* x00 x00)))
 (let ((?x924 (* 108 ?x1350)))
 (let ((?x952 (* (- 9) s)))
 (let ((?x697 (* (- 36) ?x1679)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1341 (* 51 ?x581)))
 (let ((?x671 (* r00 r00 s)))
 (let ((?x1907 (* 36 ?x671)))
 (let ((?x1188 (* s00 s00 s00)))
 (let ((?x802 (* 16 ?x1188)))
 (let ((?x1865 (* (- 108) ?x795)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x2037 (* (- 432) ?x902)))
 (let ((?x622 (* 108 ?x512)))
 (let ((?x955 (+ (* 216 (* r00 s00 x00)) ?x622 (* (- 54) ?x1002) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2037 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) ?x1693) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1865 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x802 (* (- 108) (* x s)) ?x1907 ?x1341 (* (- 108) (* r00 x)) ?x137 ?x697 ?x952 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x924)))
 (let (($x750 (= ?x955 0)))
 (let ((?x1428 (* 15 ?x581)))
 (let ((?x1427 (* 36 ?x867)))
 (let ((?x722 (* (- 6) ?x795)))
 (let ((?x616 (* 54 ?x512)))
 (let ((?x1908 (+ (* 24 (* s r)) ?x616 (* (- 36) (* r00 x r)) (* (- 24) ?x1002) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 ?x1693) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x722 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1907 ?x1427 ?x1428 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x697 (* 54 (* x00 r)) ?x952 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x489 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1620 (* 4 ?x581)))
 (let ((?x1389 (* 18 ?x512)))
 (let ((?x519 (+ (* 9 (* s r)) ?x1389 (* (- 9) ?x1002) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x671) ?x1620 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1679) (* 18 (* x00 r)) ?x489 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x459 (* r00 r00 r00)))
 (let ((?x460 (* 12 ?x459)))
 (let ((?x491 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x490 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x915 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x489 ?x490 (* 4 (* s00 r)) (* (- 6) ?x1002) ?x56 ?x491 ?x460)))
 (let (($x2014 (= (+ s00 ?x270 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2014 (= ?x915 0) (= ?x519 0) (= ?x1908 0) $x750 $x980)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1258 (lambda ((r Int) (s Int) (x Int) )(let ((?x1063 (* 36 (* x r00 r00))))
 (let ((?x944 (* (- 36) (* r r00 x00))))
 (let ((?x920 (* 2 (* r s s00))))
 (let ((?x867 (* r00 r00 x00)))
 (let ((?x880 (* (- 36) ?x867)))
 (let ((?x828 (* (- 4) (* r s00 s00))))
 (let ((?x803 (* s x)))
 (let ((?x804 (* 6 ?x803)))
 (let ((?x800 (* 2 (* r s s))))
 (let ((?x795 (* s00 x00)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x769 (* s s00 r00)))
 (let ((?x782 (* (- 2) ?x769)))
 (let ((?x716 (* r s00 r00)))
 (let ((?x1816 (* (- 12) ?x716)))
 (let ((?x714 (* s x00)))
 (let ((?x744 (* (- 6) ?x714)))
 (let ((?x678 (* s s00)))
 (let ((?x2098 (* 20 ?x678)))
 (let ((?x658 (* s00 s00 r00)))
 (let ((?x686 (* (- 2) ?x658)))
 (let ((?x649 (* r x00)))
 (let ((?x2233 (* (- 90) ?x649)))
 (let ((?x642 (* 4 (* s s r00))))
 (let ((?x637 (* s00 r00 r00)))
 (let ((?x990 (* 36 ?x637)))
 (let ((?x590 (* x s00)))
 (let ((?x617 (* (- 6) ?x590)))
 (let ((?x581 (* s00 s00)))
 (let ((?x2057 (* (- 19) ?x581)))
 (let ((?x551 (* 36 (* r x r00))))
 (let ((?x512 (* r00 x00)))
 (let ((?x2137 (* (- 90) ?x512)))
 (let ((?x416 (* s00 r00)))
 (let ((?x1813 (* 18 ?x416)))
 (let ((?x341 (* r r00 r00)))
 (let ((?x2010 (* (- 216) ?x341)))
 (let ((?x291 (* r00 r00)))
 (let ((?x2001 (* (- 108) ?x291)))
 (let ((?x2232 (* (- 72) x00)))
 (let ((?x419 (* (- 36) r00)))
 (let ((?x2277 (* 57 s00)))
 (let ((?x1924 (* 72 x)))
 (let ((?x424 (+ (* 36 r) (* (- 57) s) ?x1924 ?x2277 ?x419 ?x2232 (* 108 (* r r)) ?x2001 (* (- 42) (* r s)) ?x2010 (* 114 (* r s00)) ?x1813 ?x2137 (* (- 1) (* s s)) (* 90 (* r x)) (* 12 (* r s r00)) ?x551 (* (- 72) (* s r00 r00)) ?x2057 ?x617 (* 90 (* x r00)) ?x990 ?x642 ?x2233 ?x686 ?x2098 (* (- 90) (* s r00)) ?x744 ?x1816 ?x782 ?x796 ?x800 ?x804 ?x828 ?x880 ?x920 ?x944 (* 72 (* r r r)) (* 12 (* r r s00)) ?x1063 (* 144 (* r r r00)) (* 24 (* r r s)))))
 (let ((?x539 (* r x)))
 (let ((?x2482 (* (- 1) ?x539)))
 (let ((?x213 (* 6 r)))
 (let ((?x1390 (+ 3 ?x213 s)))
 (let ((?x270 (* (- 1) s)))
 (let ((?x1454 (+ ?x270 x)))
 (let ((?x335 (* r s)))
 (let ((?x2483 (* (- 1) x)))
 (let (($x1493 (= (* (+ s ?x2483 ?x335 (* ?x1454 ?x1454 ?x1454 ?x1390 ?x1390) ?x2482) ?x424) 0)))
 (let ((?x1350 (* x00 x00)))
 (let ((?x1380 (* (- 108) ?x1350)))
 (let ((?x1188 (* s00 s00 s00)))
 (let ((?x1379 (* (- 16) ?x1188)))
 (let ((?x1076 (* s00 r00 r00 r00)))
 (let ((?x1375 (* (- 216) ?x1076)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x903 (* 432 ?x902)))
 (let ((?x1133 (* 108 ?x795)))
 (let ((?x759 (* s00 s00 r00 r00)))
 (let ((?x760 (* 36 ?x759)))
 (let ((?x1030 (* 108 ?x658)))
 (let ((?x1369 (* (- 51) ?x581)))
 (let ((?x555 (* s r00 r00)))
 (let ((?x854 (* (- 36) ?x555)))
 (let ((?x1366 (* (- 108) ?x512)))
 (let ((?x505 (* s00 r00 x00)))
 (let ((?x1365 (* (- 216) ?x505)))
 (let ((?x514 (* 54 ?x416)))
 (let ((?x977 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1381 (+ ?x143 ?x977 ?x514 ?x1365 ?x1366 (* (- 15) (* s s)) ?x854 ?x1369 (* (- 108) ?x590) (* 108 (* x r00)) ?x990 (* 216 (* s r00 r00 r00)) ?x1030 (* 66 ?x678) (* (- 54) (* s r00)) (* (- 108) ?x714) ?x760 (* (- 108) ?x769) ?x1133 (* 108 ?x803) (* 4 (* s s s)) (* (- 108) (* x x)) ?x903 (* 12 (* s s s00)) ?x1375 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1379 (* 216 (* x x00)) ?x1380)))
 (let (($x1382 (= ?x1381 0)))
 (let ((?x690 (* s r00)))
 (let ((?x1049 (* (- 24) ?x690)))
 (let ((?x906 (* (- 15) ?x581)))
 (let ((?x564 (* 54 ?x539)))
 (let ((?x535 (* s s)))
 (let ((?x559 (* 3 ?x535)))
 (let ((?x541 (* (- 54) ?x512)))
 (let ((?x554 (* 24 ?x416)))
 (let ((?x389 (* r s00)))
 (let ((?x1026 (* 24 ?x389)))
 (let ((?x509 (* (- 24) ?x335)))
 (let ((?x1069 (+ ?x143 ?x977 ?x509 ?x1026 ?x554 ?x541 ?x559 ?x564 ?x551 ?x854 ?x906 ?x617 (* 54 (* x r00)) ?x990 ?x642 (* (- 54) ?x649) ?x686 (* 12 ?x678) ?x1049 ?x744 ?x782 ?x796 ?x800 ?x804 ?x828 ?x880 ?x920 ?x944 ?x1063)))
 (let (($x1074 (= ?x1069 0)))
 (let ((?x638 (* 6 ?x637)))
 (let ((?x594 (* (- 4) ?x581)))
 (let ((?x536 (* 2 ?x535)))
 (let ((?x526 (* (- 18) ?x512)))
 (let ((?x531 (* 9 ?x416)))
 (let ((?x368 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x735 (+ ?x47 ?x368 (* (- 9) ?x335) (* 9 ?x389) ?x531 ?x526 ?x536 (* 18 ?x539) (* 6 (* r s r00)) (* (- 6) ?x555) ?x594 (* 18 (* x r00)) ?x638 (* (- 18) ?x649) (* 2 ?x678) (* (- 9) ?x690) (* (- 6) ?x716))))
 (let (($x742 (= ?x735 0)))
 (let ((?x459 (* r00 r00 r00)))
 (let ((?x460 (* 12 ?x459)))
 (let ((?x494 (* (- 6) ?x416)))
 (let ((?x491 (* (- 6) x00)))
 (let ((?x490 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x489 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x495 (+ ?x43 ?x489 ?x56 ?x44 ?x490 ?x491 (* 2 ?x335) (* (- 12) ?x341) (* 4 ?x389) ?x494 ?x460)))
 (let (($x496 (= ?x495 0)))
 (let (($x324 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x291)) 0)))
 (let (($x1551 (and $x324 $x496 $x742 $x1074 $x1382 (not $x1493))))
 (let ((?x1679 (* r00 r00 s00)))
 (let ((?x601 (* 36 ?x1679)))
 (let ((?x713 (* 2 (* (+ 1 r) (+ 3 s ?x213) (+ 3 s ?x213)))))
 (let ((?x1693 (* r00 s00 s00)))
 (let ((?x996 (* (- 2) ?x1693)))
 (let ((?x1002 (* r00 s00)))
 (let ((?x667 (* 24 ?x1002)))
 (let ((?x866 (+ 27 (* (- 24) (* (+ 1 r) (+ 3 s ?x213))) ?x541 (* 36 (* r00 (+ 1 r) (+ x ?x270))) ?x667 (* 3 (* (+ 3 s ?x213) (+ 3 s ?x213))) (* 54 (* (+ 1 r) (+ x ?x270))) (* (- 6) (* s00 (+ x ?x270))) (* 4 (* r00 (+ 3 s ?x213) (+ 3 s ?x213))) ?x996 (* (- 6) (* x00 (+ 3 s ?x213))) (* 12 (* s00 (+ 3 s ?x213))) (* (- 2) (* r00 s00 (+ 3 s ?x213))) ?x796 ?x713 (* 6 (* (+ x ?x270) (+ 3 s ?x213))) (* (- 4) (* s00 s00 (+ 1 r))) (* (- 36) (* r00 r00 (+ 3 s ?x213))) ?x880 ?x906 (* 2 (* s00 (+ 1 r) (+ 3 s ?x213))) (* (- 36) (* r00 x00 (+ 1 r))) (* 54 (* r00 (+ x ?x270))) ?x977 ?x601 (* (- 54) (* x00 (+ 1 r))) ?x143 (* 54 r) (* 24 (* s00 (+ 1 r))) (* (- 24) (* r00 (+ 3 s ?x213))) (* 36 (* r00 r00 (+ x ?x270))))))
 (let ((?x822 (+ 3 s ?x213)))
 (let ((?x2140 (+ x ?x270)))
 (let ((?x970 (* (+ (* ?x2140 ?x2140 ?x2140 ?x822 ?x822) (* (- 1) (* (+ 1 r) ?x2140))) ?x866)))
 (let (($x980 (not (= ?x970 0))))
 (let ((?x924 (* 108 ?x1350)))
 (let ((?x952 (* (- 9) s)))
 (let ((?x697 (* (- 36) ?x1679)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1341 (* 51 ?x581)))
 (let ((?x671 (* r00 r00 s)))
 (let ((?x1907 (* 36 ?x671)))
 (let ((?x802 (* 16 ?x1188)))
 (let ((?x1865 (* (- 108) ?x795)))
 (let ((?x2037 (* (- 432) ?x902)))
 (let ((?x622 (* 108 ?x512)))
 (let ((?x955 (+ (* 216 (* r00 s00 x00)) ?x622 (* (- 54) ?x1002) (* 15 ?x535) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2037 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) ?x1693) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1865 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x802 (* (- 108) (* x s)) ?x1907 ?x1341 (* (- 108) (* r00 x)) ?x137 ?x697 ?x952 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x924)))
 (let (($x750 (= ?x955 0)))
 (let ((?x1428 (* 15 ?x581)))
 (let ((?x1427 (* 36 ?x867)))
 (let ((?x722 (* (- 6) ?x795)))
 (let ((?x616 (* 54 ?x512)))
 (let ((?x1908 (+ (* 24 (* s r)) ?x616 (* (- 36) (* r00 x r)) (* (- 24) ?x1002) (* (- 3) ?x535) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 ?x1693) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x722 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1907 ?x1427 ?x1428 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x697 (* 54 (* x00 r)) ?x952 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x1620 (* 4 ?x581)))
 (let ((?x1389 (* 18 ?x512)))
 (let ((?x519 (+ (* 9 (* s r)) ?x1389 (* (- 9) ?x1002) (* (- 2) ?x535) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x671) ?x1620 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1679) (* 18 (* x00 r)) ?x489 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x915 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x489 ?x490 (* 4 (* s00 r)) (* (- 6) ?x1002) ?x56 ?x491 ?x460)))
 (let (($x2014 (= (+ s00 ?x270 (* 3 (* r r)) (* (- 3) ?x291)) 0)))
 (let (($x2323 (and $x2014 (= ?x915 0) (= ?x519 0) (= ?x1908 0) $x750 $x980)))
 (rewrite (= $x2323 $x1551))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x976 (exists ((r Int) (s Int) (x Int) )(! (let ((?x143 (* 9 s)))
 (let ((?x1679 (* r00 r00 s00)))
 (let ((?x601 (* 36 ?x1679)))
 (let ((?x977 (* (- 9) s00)))
 (let ((?x581 (* s00 s00)))
 (let ((?x906 (* (- 15) ?x581)))
 (let ((?x867 (* r00 r00 x00)))
 (let ((?x880 (* (- 36) ?x867)))
 (let ((?x786 (* 6 (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x822 (+ 3 s ?x213)))
 (let ((?x1810 (+ 1 r)))
 (let ((?x795 (* s00 x00)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x1693 (* r00 s00 s00)))
 (let ((?x996 (* (- 2) ?x1693)))
 (let ((?x1002 (* r00 s00)))
 (let ((?x667 (* 24 ?x1002)))
 (let ((?x512 (* r00 x00)))
 (let ((?x541 (* (- 54) ?x512)))
 (let ((?x866 (+ 27 (* (- 24) (* ?x1810 ?x822)) ?x541 (* 36 (* r00 ?x1810 (+ x (* (- 1) s)))) ?x667 (* 3 (* ?x822 ?x822)) (* 54 (* ?x1810 (+ x (* (- 1) s)))) (* (- 6) (* s00 (+ x (* (- 1) s)))) (* 4 (* r00 ?x822 ?x822)) ?x996 (* (- 6) (* x00 ?x822)) (* 12 (* s00 ?x822)) (* (- 2) (* r00 s00 ?x822)) ?x796 (* 2 (* ?x1810 ?x822 ?x822)) ?x786 (* (- 4) (* s00 s00 ?x1810)) (* (- 36) (* r00 r00 ?x822)) ?x880 ?x906 (* 2 (* s00 ?x1810 ?x822)) (* (- 36) (* r00 x00 ?x1810)) (* 54 (* r00 (+ x (* (- 1) s)))) ?x977 ?x601 (* (- 54) (* x00 ?x1810)) ?x143 (* 54 r) (* 24 (* s00 ?x1810)) (* (- 24) (* r00 ?x822)) (* 36 (* r00 r00 (+ x (* (- 1) s)))))))
 (let ((?x270 (* (- 1) s)))
 (let ((?x2140 (+ x ?x270)))
 (let (($x1004 (= (* (+ (* ?x2140 ?x2140 ?x2140 ?x822 ?x822) (* (- 1) (* ?x1810 ?x2140))) ?x866) 0)))
 (let (($x980 (not $x1004)))
 (let ((?x1350 (* x00 x00)))
 (let ((?x924 (* 108 ?x1350)))
 (let ((?x952 (* (- 9) s)))
 (let ((?x697 (* (- 36) ?x1679)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1341 (* 51 ?x581)))
 (let ((?x671 (* r00 r00 s)))
 (let ((?x1907 (* 36 ?x671)))
 (let ((?x1188 (* s00 s00 s00)))
 (let ((?x802 (* 16 ?x1188)))
 (let ((?x1865 (* (- 108) ?x795)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x2037 (* (- 432) ?x902)))
 (let ((?x622 (* 108 ?x512)))
 (let ((?x955 (+ (* 216 (* r00 s00 x00)) ?x622 (* (- 54) ?x1002) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2037 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) ?x1693) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1865 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x802 (* (- 108) (* x s)) ?x1907 ?x1341 (* (- 108) (* r00 x)) ?x137 ?x697 ?x952 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x924)))
 (let (($x750 (= ?x955 0)))
 (let ((?x2359 (* r00 r00 x)))
 (let ((?x2360 (* 36 ?x2359)))
 (let ((?x1642 (* r00 s s)))
 (let ((?x1643 (* 4 ?x1642)))
 (let ((?x535 (* s s)))
 (let ((?x559 (* 3 ?x535)))
 (let ((?x1831 (+ (* (- 24) (* s r)) ?x541 (* 36 (* r00 x r)) ?x667 ?x559 (* 54 (* x r)) (* (- 6) (* s00 x)) ?x1643 ?x996 (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x796 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x671) ?x880 ?x906 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x977 ?x601 (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) ?x2360)))
 (let ((?x47 (* 3 s)))
 (let ((?x368 (* (- 3) s00)))
 (let ((?x594 (* (- 4) ?x581)))
 (let ((?x536 (* 2 ?x535)))
 (let ((?x526 (* (- 18) ?x512)))
 (let ((?x1513 (+ (* (- 9) (* s r)) ?x526 (* 9 ?x1002) ?x536 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x671) ?x594 (* 18 (* r00 x)) ?x368 (* 6 ?x1679) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1553 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x368 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1002) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2014 (= (+ s00 ?x270 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2014 (= ?x1553 0) (= ?x1513 0) (= ?x1831 0) $x750 $x980))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1869 (lambda ((r Int) (s Int) (x Int) )(let ((?x143 (* 9 s)))
 (let ((?x1679 (* r00 r00 s00)))
 (let ((?x601 (* 36 ?x1679)))
 (let ((?x977 (* (- 9) s00)))
 (let ((?x581 (* s00 s00)))
 (let ((?x906 (* (- 15) ?x581)))
 (let ((?x867 (* r00 r00 x00)))
 (let ((?x880 (* (- 36) ?x867)))
 (let ((?x786 (* 6 (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x822 (+ 3 s ?x213)))
 (let ((?x1810 (+ 1 r)))
 (let ((?x795 (* s00 x00)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x1693 (* r00 s00 s00)))
 (let ((?x996 (* (- 2) ?x1693)))
 (let ((?x1002 (* r00 s00)))
 (let ((?x667 (* 24 ?x1002)))
 (let ((?x512 (* r00 x00)))
 (let ((?x541 (* (- 54) ?x512)))
 (let ((?x866 (+ 27 (* (- 24) (* ?x1810 ?x822)) ?x541 (* 36 (* r00 ?x1810 (+ x (* (- 1) s)))) ?x667 (* 3 (* ?x822 ?x822)) (* 54 (* ?x1810 (+ x (* (- 1) s)))) (* (- 6) (* s00 (+ x (* (- 1) s)))) (* 4 (* r00 ?x822 ?x822)) ?x996 (* (- 6) (* x00 ?x822)) (* 12 (* s00 ?x822)) (* (- 2) (* r00 s00 ?x822)) ?x796 (* 2 (* ?x1810 ?x822 ?x822)) ?x786 (* (- 4) (* s00 s00 ?x1810)) (* (- 36) (* r00 r00 ?x822)) ?x880 ?x906 (* 2 (* s00 ?x1810 ?x822)) (* (- 36) (* r00 x00 ?x1810)) (* 54 (* r00 (+ x (* (- 1) s)))) ?x977 ?x601 (* (- 54) (* x00 ?x1810)) ?x143 (* 54 r) (* 24 (* s00 ?x1810)) (* (- 24) (* r00 ?x822)) (* 36 (* r00 r00 (+ x (* (- 1) s)))))))
 (let ((?x270 (* (- 1) s)))
 (let ((?x2140 (+ x ?x270)))
 (let (($x1004 (= (* (+ (* ?x2140 ?x2140 ?x2140 ?x822 ?x822) (* (- 1) (* ?x1810 ?x2140))) ?x866) 0)))
 (let (($x980 (not $x1004)))
 (let ((?x1350 (* x00 x00)))
 (let ((?x924 (* 108 ?x1350)))
 (let ((?x952 (* (- 9) s)))
 (let ((?x697 (* (- 36) ?x1679)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1341 (* 51 ?x581)))
 (let ((?x671 (* r00 r00 s)))
 (let ((?x1907 (* 36 ?x671)))
 (let ((?x1188 (* s00 s00 s00)))
 (let ((?x802 (* 16 ?x1188)))
 (let ((?x1865 (* (- 108) ?x795)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x2037 (* (- 432) ?x902)))
 (let ((?x622 (* 108 ?x512)))
 (let ((?x955 (+ (* 216 (* r00 s00 x00)) ?x622 (* (- 54) ?x1002) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2037 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) ?x1693) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1865 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x802 (* (- 108) (* x s)) ?x1907 ?x1341 (* (- 108) (* r00 x)) ?x137 ?x697 ?x952 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x924)))
 (let (($x750 (= ?x955 0)))
 (let ((?x1428 (* 15 ?x581)))
 (let ((?x1427 (* 36 ?x867)))
 (let ((?x722 (* (- 6) ?x795)))
 (let ((?x616 (* 54 ?x512)))
 (let ((?x1908 (+ (* 24 (* s r)) ?x616 (* (- 36) (* r00 x r)) (* (- 24) ?x1002) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 ?x1693) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x722 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1907 ?x1427 ?x1428 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x697 (* 54 (* x00 r)) ?x952 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x489 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1620 (* 4 ?x581)))
 (let ((?x1389 (* 18 ?x512)))
 (let ((?x519 (+ (* 9 (* s r)) ?x1389 (* (- 9) ?x1002) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x671) ?x1620 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1679) (* 18 (* x00 r)) ?x489 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x459 (* r00 r00 r00)))
 (let ((?x460 (* 12 ?x459)))
 (let ((?x491 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x490 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x915 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x489 ?x490 (* 4 (* s00 r)) (* (- 6) ?x1002) ?x56 ?x491 ?x460)))
 (let (($x2014 (= (+ s00 ?x270 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2323 (and $x2014 (= ?x915 0) (= ?x519 0) (= ?x1908 0) $x750 $x980)))
 (let ((?x2359 (* r00 r00 x)))
 (let ((?x2360 (* 36 ?x2359)))
 (let ((?x1642 (* r00 s s)))
 (let ((?x1643 (* 4 ?x1642)))
 (let ((?x535 (* s s)))
 (let ((?x559 (* 3 ?x535)))
 (let ((?x1831 (+ (* (- 24) (* s r)) ?x541 (* 36 (* r00 x r)) ?x667 ?x559 (* 54 (* x r)) (* (- 6) (* s00 x)) ?x1643 ?x996 (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x796 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x671) ?x880 ?x906 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x977 ?x601 (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) ?x2360)))
 (let ((?x47 (* 3 s)))
 (let ((?x368 (* (- 3) s00)))
 (let ((?x594 (* (- 4) ?x581)))
 (let ((?x536 (* 2 ?x535)))
 (let ((?x526 (* (- 18) ?x512)))
 (let ((?x1513 (+ (* (- 9) (* s r)) ?x526 (* 9 ?x1002) ?x536 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x671) ?x594 (* 18 (* r00 x)) ?x368 (* 6 ?x1679) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1553 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x368 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1002) (* (- 6) x) ?x59 (* (- 12) ?x459))))
 (let (($x1753 (and $x2014 (= ?x1553 0) (= ?x1513 0) (= ?x1831 0) $x750 $x980)))
 (rewrite (= $x1753 $x2323))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x267 (exists ((r Int) (s Int) (x Int) )(! (let ((?x217 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x126 (* 15 s00 s00)))
 (let ((?x124 (* 36 r00 r00 x00)))
 (let ((?x118 (* 6 s00 x00)))
 (let ((?x110 (* 2 r00 s00 s00)))
 (let ((?x102 (* 24 r00 s00)))
 (let ((?x221 (+ (- (* (- 24) (+ r 1) ?x214) (* 54 r00 x00)) (* 36 (+ r 1) r00 ?x217) ?x102 (* 3 ?x214 ?x214) (* 54 (+ r 1) ?x217))))
 (let ((?x227 (- (+ (- ?x221 (* 6 s00 ?x217)) (* 4 r00 ?x214 ?x214)) ?x110)))
 (let ((?x232 (- (+ (- ?x227 (* 6 ?x214 x00)) (* 12 ?x214 s00)) (* 2 r00 ?x214 s00))))
 (let ((?x235 (+ ?x232 ?x118 (* 2 (+ r 1) ?x214 ?x214) (* 6 ?x214 ?x217))))
 (let ((?x239 (- (- ?x235 (* 4 (+ r 1) s00 s00)) (* 36 r00 r00 ?x214))))
 (let ((?x245 (- (+ (- (- ?x239 ?x124) ?x126) (* 2 (+ r 1) ?x214 s00)) (* 36 (+ r 1) r00 x00))))
 (let ((?x251 (- (+ (- (+ ?x245 (* 54 r00 ?x217)) ?x137) ?x139) (* 54 (+ r 1) x00))))
 (let ((?x256 (- (+ ?x251 (* 9 ?x214) (* 24 (+ r 1) s00)) (* 24 r00 ?x214))))
 (let ((?x262 (* (+ ?x256 (* 36 r00 r00 ?x217)) (- (* ?x214 ?x214 ?x217 ?x217 ?x217) (* (+ r 1) ?x217)))))
 (let ((?x143 (* 9 s)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) ?x102 (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) ?x110)))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x127 (- (+ ?x117 ?x118 (* 2 r s s) (* 6 s x)) (* 4 r s00 s00))))
 (let ((?x134 (- (+ (- (- (- ?x127 ?x123) ?x124) ?x126) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x262 0)))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x659 (lambda ((r Int) (s Int) (x Int) )(let ((?x143 (* 9 s)))
 (let ((?x1679 (* r00 r00 s00)))
 (let ((?x601 (* 36 ?x1679)))
 (let ((?x977 (* (- 9) s00)))
 (let ((?x581 (* s00 s00)))
 (let ((?x906 (* (- 15) ?x581)))
 (let ((?x867 (* r00 r00 x00)))
 (let ((?x880 (* (- 36) ?x867)))
 (let ((?x786 (* 6 (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x822 (+ 3 s ?x213)))
 (let ((?x1810 (+ 1 r)))
 (let ((?x795 (* s00 x00)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x1693 (* r00 s00 s00)))
 (let ((?x996 (* (- 2) ?x1693)))
 (let ((?x1002 (* r00 s00)))
 (let ((?x667 (* 24 ?x1002)))
 (let ((?x512 (* r00 x00)))
 (let ((?x541 (* (- 54) ?x512)))
 (let ((?x866 (+ 27 (* (- 24) (* ?x1810 ?x822)) ?x541 (* 36 (* r00 ?x1810 (+ x (* (- 1) s)))) ?x667 (* 3 (* ?x822 ?x822)) (* 54 (* ?x1810 (+ x (* (- 1) s)))) (* (- 6) (* s00 (+ x (* (- 1) s)))) (* 4 (* r00 ?x822 ?x822)) ?x996 (* (- 6) (* x00 ?x822)) (* 12 (* s00 ?x822)) (* (- 2) (* r00 s00 ?x822)) ?x796 (* 2 (* ?x1810 ?x822 ?x822)) ?x786 (* (- 4) (* s00 s00 ?x1810)) (* (- 36) (* r00 r00 ?x822)) ?x880 ?x906 (* 2 (* s00 ?x1810 ?x822)) (* (- 36) (* r00 x00 ?x1810)) (* 54 (* r00 (+ x (* (- 1) s)))) ?x977 ?x601 (* (- 54) (* x00 ?x1810)) ?x143 (* 54 r) (* 24 (* s00 ?x1810)) (* (- 24) (* r00 ?x822)) (* 36 (* r00 r00 (+ x (* (- 1) s)))))))
 (let ((?x270 (* (- 1) s)))
 (let ((?x2140 (+ x ?x270)))
 (let (($x1004 (= (* (+ (* ?x2140 ?x2140 ?x2140 ?x822 ?x822) (* (- 1) (* ?x1810 ?x2140))) ?x866) 0)))
 (let (($x980 (not $x1004)))
 (let ((?x1350 (* x00 x00)))
 (let ((?x924 (* 108 ?x1350)))
 (let ((?x952 (* (- 9) s)))
 (let ((?x697 (* (- 36) ?x1679)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1341 (* 51 ?x581)))
 (let ((?x671 (* r00 r00 s)))
 (let ((?x1907 (* 36 ?x671)))
 (let ((?x1188 (* s00 s00 s00)))
 (let ((?x802 (* 16 ?x1188)))
 (let ((?x1865 (* (- 108) ?x795)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x2037 (* (- 432) ?x902)))
 (let ((?x622 (* 108 ?x512)))
 (let ((?x955 (+ (* 216 (* r00 s00 x00)) ?x622 (* (- 54) ?x1002) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2037 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) ?x1693) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1865 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x802 (* (- 108) (* x s)) ?x1907 ?x1341 (* (- 108) (* r00 x)) ?x137 ?x697 ?x952 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x924)))
 (let (($x750 (= ?x955 0)))
 (let ((?x2359 (* r00 r00 x)))
 (let ((?x2360 (* 36 ?x2359)))
 (let ((?x1642 (* r00 s s)))
 (let ((?x1643 (* 4 ?x1642)))
 (let ((?x535 (* s s)))
 (let ((?x559 (* 3 ?x535)))
 (let ((?x1831 (+ (* (- 24) (* s r)) ?x541 (* 36 (* r00 x r)) ?x667 ?x559 (* 54 (* x r)) (* (- 6) (* s00 x)) ?x1643 ?x996 (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x796 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x671) ?x880 ?x906 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x977 ?x601 (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) ?x2360)))
 (let ((?x47 (* 3 s)))
 (let ((?x368 (* (- 3) s00)))
 (let ((?x594 (* (- 4) ?x581)))
 (let ((?x536 (* 2 ?x535)))
 (let ((?x526 (* (- 18) ?x512)))
 (let ((?x1513 (+ (* (- 9) (* s r)) ?x526 (* 9 ?x1002) ?x536 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x671) ?x594 (* 18 (* r00 x)) ?x368 (* 6 ?x1679) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1553 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x368 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1002) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2014 (= (+ s00 ?x270 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1753 (and $x2014 (= ?x1553 0) (= ?x1513 0) (= ?x1831 0) $x750 $x980)))
 (let ((?x217 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x126 (* 15 s00 s00)))
 (let ((?x124 (* 36 r00 r00 x00)))
 (let ((?x118 (* 6 s00 x00)))
 (let ((?x110 (* 2 r00 s00 s00)))
 (let ((?x102 (* 24 r00 s00)))
 (let ((?x221 (+ (- (* (- 24) (+ r 1) ?x214) (* 54 r00 x00)) (* 36 (+ r 1) r00 ?x217) ?x102 (* 3 ?x214 ?x214) (* 54 (+ r 1) ?x217))))
 (let ((?x227 (- (+ (- ?x221 (* 6 s00 ?x217)) (* 4 r00 ?x214 ?x214)) ?x110)))
 (let ((?x232 (- (+ (- ?x227 (* 6 ?x214 x00)) (* 12 ?x214 s00)) (* 2 r00 ?x214 s00))))
 (let ((?x235 (+ ?x232 ?x118 (* 2 (+ r 1) ?x214 ?x214) (* 6 ?x214 ?x217))))
 (let ((?x239 (- (- ?x235 (* 4 (+ r 1) s00 s00)) (* 36 r00 r00 ?x214))))
 (let ((?x245 (- (+ (- (- ?x239 ?x124) ?x126) (* 2 (+ r 1) ?x214 s00)) (* 36 (+ r 1) r00 x00))))
 (let ((?x251 (- (+ (- (+ ?x245 (* 54 r00 ?x217)) ?x137) ?x139) (* 54 (+ r 1) x00))))
 (let ((?x256 (- (+ ?x251 (* 9 ?x214) (* 24 (+ r 1) s00)) (* 24 r00 ?x214))))
 (let ((?x262 (* (+ ?x256 (* 36 r00 r00 ?x217)) (- (* ?x214 ?x214 ?x217 ?x217 ?x217) (* (+ r 1) ?x217)))))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) ?x102 (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) ?x110)))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x127 (- (+ ?x117 ?x118 (* 2 r s s) (* 6 s x)) (* 4 r s00 s00))))
 (let ((?x134 (- (+ (- (- (- ?x127 ?x123) ?x124) ?x126) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x266 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x262 0))))))
 (rewrite (= $x266 $x1753)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x268 (asserted $x267)))
 (let ((@x1543 (mp (mp @x268 (quant-intro (proof-bind ?x659) (= $x267 $x976)) $x976) (rewrite (= $x976 $x976)) $x976)))
 (let ((@x299 (mp (mp @x1543 (quant-intro (proof-bind ?x1869) (= $x976 $x699)) $x699) (quant-intro (proof-bind ?x1258) (= $x699 $x1257)) $x1257)))
 (let ((@x738 (mp (mp~ @x299 (sk (~ $x1257 $x1230)) $x1230) (rewrite (= $x1230 $x2176)) $x2176)))
 (let ((@x1329 (and-elim @x738 $x513)))
 (let ((@x1270 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x513) $x440)) @x1329 $x440)))
 (let (($x396 (>= ?x953 0)))
 (let ((@x911 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x513) $x396)) @x1329 $x396)))
 (let (($x1272 (<= ?x1162 0)))
 (let ((@x2199 (and-elim @x738 $x1163)))
 (let ((@x986 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1163) $x1272)) @x2199 $x1272)))
 (let (($x1451 (>= ?x1162 0)))
 (let ((@x1169 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1163) $x1451)) @x2199 $x1451)))
 (let (($x1864 (<= ?x1326 0)))
 (let ((@x1333 (and-elim @x738 $x1323)))
 (let ((@x1892 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1323) $x1864)) @x1333 $x1864)))
 (let (($x1879 (>= ?x1326 0)))
 (let ((@x833 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1323) $x1879)) @x1333 $x1879)))
 (let (($x748 (<= ?x921 0)))
 (let ((@x1328 (and-elim @x738 $x1087)))
 (let ((@x1612 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1087) $x748)) @x1328 $x748)))
 (let (($x1050 (>= ?x921 0)))
 (let ((@x1905 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1087) $x1050)) @x1328 $x1050)))
 (let (($x359 (<= ?x1999 0)))
 (let ((@x1330 (and-elim @x738 $x2022)))
 (let ((@x1453 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2022) $x359)) @x1330 $x359)))
 (let (($x361 (>= ?x1999 0)))
 (let ((@x1418 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2022) $x361)) @x1330 $x361)))
 (let (($x801 (>= ?x874 0)))
 (let ((@x1247 ((_ th-lemma arith) (hypothesis (not $x801)) @x1169 @x986 @x833 @x1892 @x911 @x1270 @x911 @x1270 @x833 @x1892 @x911 @x1270 @x833 @x1892 @x1169 @x986 @x833 @x1892 @x911 @x1270 @x1169 @x986 @x1169 @x986 @x1905 @x1612 @x1905 @x1612 @x1169 @x986 false)))
 (let (($x1186 (not (<= ?x1756 0))))
 (let (($x791 (>= ?x1756 0)))
 (let (($x2236 (>= ?x518 0)))
 (let (($x562 (not $x2236)))
 (let (($x567 (not $x791)))
 (let ((@x1146 (hypothesis $x567)))
 (let (($x909 (<= ?x518 0)))
 (let ((@x1148 ((_ th-lemma arith) @x1146 (hypothesis (not $x909)) @x1169 @x986 @x833 @x1892 @x833 @x1892 @x911 @x1270 @x911 @x1270 @x911 @x1270 @x1169 @x986 @x833 @x1892 @x1169 @x986 @x1169 @x986 @x1905 @x1612 false)))
 (let ((@x556 ((_ th-lemma arith farkas 1 1 1) @x1146 (hypothesis $x2236) (unit-resolution (lemma @x1148 (or $x909 $x791)) @x1146 $x909) false)))
 (let ((@x1484 ((_ th-lemma arith) @x1146 (unit-resolution (lemma @x556 (or $x562 $x791)) @x1146 $x562) @x1169 @x986 @x833 @x1892 @x833 @x1892 @x911 @x1270 @x911 @x1270 @x911 @x1270 @x1169 @x986 @x833 @x1892 @x1169 @x986 @x1169 @x986 @x1905 @x1612 false)))
 (let ((@x600 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x852 $x1186 $x567)) (and-elim @x738 $x1078) (or $x1186 $x567))))
 (let ((@x471 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x600 (lemma @x1484 $x791) $x1186) (lemma @x1247 $x801) (hypothesis (<= ?x874 0)) false)))
 ((_ th-lemma arith) (lemma @x471 (not (<= ?x874 0))) @x1418 @x1453 @x911 @x1270 @x1418 @x1453 @x911 @x1270 @x1418 @x1453 @x911 @x1270 @x911 @x1270 @x1418 @x1453 @x1905 @x1612 @x1169 @x986 @x1418 @x1453 @x1905 @x1612 @x1418 @x1453 @x911 @x1270 @x1905 @x1612 @x833 @x1892 @x1169 @x986 @x911 @x1270 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        10
 :arith-assert-lower        91
 :arith-assert-upper        163
 :arith-branch-var          4
 :arith-conflicts           12
 :arith-eq-adapter          16
 :arith-fixed-eqs           12
 :arith-gcd-tests           41
 :arith-gomory-cuts         1
 :arith-grobner             12
 :arith-ineq-splits         4
 :arith-max-min             2177
 :arith-nonlinear-bounds    107
 :arith-nonlinear-horner    108
 :arith-num-rows            22
 :arith-patches             12
 :arith-patches_succ        4
 :arith-pivots              38
 :arith-pseudo-nonlinear    67
 :arith-row-summations      98
 :arith-tableau-max-columns 124
 :arith-tableau-max-rows    22
 :conflicts                 12
 :decisions                 136
 :del-clause                55
 :final-checks              33
 :max-memory                7.38
 :memory                    3.38
 :minimized-lits            1
 :mk-bool-var               142
 :mk-clause                 73
 :num-allocs                5636086868.00
 :num-checks                1
 :propagations              41
 :rlimit-count              3789866
 :time                      1.88
 :total-time                1.88)
