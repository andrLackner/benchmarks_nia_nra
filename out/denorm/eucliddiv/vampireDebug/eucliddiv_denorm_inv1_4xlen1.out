% Warning: check-sat is not the last entry. Skipping the rest!
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_2 on eucliddiv_denorm_inv1_4xlen1
% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for eucliddiv_denorm_inv1_4xlen1
% SZS output start Proof for eucliddiv_denorm_inv1_4xlen1
1. ? [X2 : $int,X1 : $int,X0 : $int] : (0 = $sum($product($uminus(1),y00),X2) & 0 = $sum($difference($difference(X1,r00),$product(q00,y00)),$product(X0,y00)) & ~0 = $product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($sum($product($uminus(1),y00),y00),$sum(X0,1)),$difference(X1,y00)),$difference(X1,y00)),$difference(X1,y00)),y00),$uminus(1)),$difference(X1,y00)),$sum(X0,1)),$sum(X0,1)),$sum(X0,1)),$difference(X1,y00)),$difference(X1,y00)),y00),y00),y00),$uminus(1)),$difference(X1,y00)),$difference(X1,y00)),$difference(X1,y00)),y00),y00)) [input]
2. ? [X2 : $int,X1 : $int,X0 : $int] : (0 = $sum($product($uminus(1),y00),X2) & 0 = $sum($sum($difference(X1,r00),$uminus($product(q00,y00))),$product(X0,y00)) & ~0 = $product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($sum($product($uminus(1),y00),y00),$sum(X0,1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),y00),$uminus(1)),$sum(X1,$uminus(y00))),$sum(X0,1)),$sum(X0,1)),$sum(X0,1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),y00),y00),y00),$uminus(1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),y00),y00)) [theory normalization 1]
3. $sum(X0,X1) = $sum(X1,X0) [theory axiom 144]
4. $sum(X0,$sum(X1,X2)) = $sum($sum(X0,X1),X2) [theory axiom 145]
6. $uminus($sum(X0,X1)) = $sum($uminus(X1),$uminus(X0)) [theory axiom 148]
14. $product(X0,X1) = $product(X1,X0) [theory axiom 144]
21. ? [X2 : $int,X1 : $int,X0 : $int] : (0 = $sum($product($uminus(1),y00),X2) & 0 = $sum($sum($sum(X1,$uminus(r00)),$uminus($product(q00,y00))),$product(X0,y00)) & ~0 = $product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($sum($product($uminus(1),y00),y00),$sum(X0,1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),y00),$uminus(1)),$sum(X1,$uminus(y00))),$sum(X0,1)),$sum(X0,1)),$sum(X0,1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),y00),y00),y00),$uminus(1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),y00),y00)) [theory normalization 2]
22. ? [X0 : $int,X1 : $int,X2 : $int] : (0 = $sum($product($uminus(1),y00),X0) & 0 = $sum($sum($sum(X1,$uminus(r00)),$uminus($product(q00,y00))),$product(X2,y00)) & ~0 = $product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($sum($product($uminus(1),y00),y00),$sum(X2,1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),y00),$uminus(1)),$sum(X1,$uminus(y00))),$sum(X2,1)),$sum(X2,1)),$sum(X2,1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),y00),y00),y00),$uminus(1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),y00),y00)) [rectify 21]
23. ? [X0 : $int,X1 : $int,X2 : $int] : (0 = $sum($product($uminus(1),y00),X0) & 0 = $sum($sum($sum(X1,$uminus(r00)),$uminus($product(q00,y00))),$product(X2,y00)) & 0 != $product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($sum($product($uminus(1),y00),y00),$sum(X2,1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),y00),$uminus(1)),$sum(X1,$uminus(y00))),$sum(X2,1)),$sum(X2,1)),$sum(X2,1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),y00),y00),y00),$uminus(1)),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),$sum(X1,$uminus(y00))),y00),y00)) [flattening 22]
24. 0 != $product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($sum($product($uminus(1),y00),y00),$sum(sK2,1)),$sum(sK1,$uminus(y00))),$sum(sK1,$uminus(y00))),$sum(sK1,$uminus(y00))),y00),$uminus(1)),$sum(sK1,$uminus(y00))),$sum(sK2,1)),$sum(sK2,1)),$sum(sK2,1)),$sum(sK1,$uminus(y00))),$sum(sK1,$uminus(y00))),y00),y00),y00),$uminus(1)),$sum(sK1,$uminus(y00))),$sum(sK1,$uminus(y00))),$sum(sK1,$uminus(y00))),y00),y00) [cnf transformation 23]
25. 0 = $sum($sum($sum(sK1,$uminus(r00)),$uminus($product(q00,y00))),$product(sK2,y00)) [cnf transformation 23]
26. 0 = $sum($product($uminus(1),y00),sK0) [cnf transformation 23]
28. 0 != $product($product($product($product($product($product($sum($product(-1,y00),y00),$product($sum(sK2,1),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product(y00,$product($sum(sK1,$uminus(y00)),$product($sum(sK2,1),$product($sum(sK2,1),$product($sum(sK2,1),$product($sum(sK1,$uminus(y00)),$product($sum(sK1,$uminus(y00)),$product(y00,$product(y00,y00)))))))))))))),$sum(sK1,$uminus(y00))),$sum(sK1,$uminus(y00))),$sum(sK1,$uminus(y00))),y00),y00) [evaluation 24]
29. 0 != $sum($product($product($product(y00,y00),sK2),sK1),$sum($uminus($product($product(y00,y00),sK2)),$sum($product($product(y00,y00),sK1),$sum($uminus($product(y00,y00)),$sum($uminus($product($product($product(y00,y00),sK2),sK1)),$sum($product($product(y00,y00),sK2),$sum($uminus($product($product(y00,y00),sK1)),$product(y00,y00)))))))) [polynomial multiplication 28]
30. 0 = $sum($product(-1,y00),sK0) [evaluation 26]
36. 1 <=> 0 = $sum($product(-1,y00),sK0) [avatar definition]
38. 0 = $sum($product(-1,y00),sK0) <- (1) [avatar component clause 36]
39. 1 [avatar split clause 30,36]
42. 0 = $sum(sK0,$product(-1,y00)) <- (1) [superposition 3,38]
45. 0 = $sum(sK0,$product(-1,y00)) <- (1) [superposition 3,38]
48. 0 = $sum(sK0,$product(-1,y00)) <- (1) [superposition 38,3]
51. 0 = $sum(sK0,$product(-1,y00)) <- (1) [superposition 38,3]
93. 2 <=> 0 = $sum(sK0,$product(-1,y00)) [avatar definition]
96. 2 | ~1 [avatar split clause 42,36,93]
97. 2 | ~1 [avatar split clause 45,36,93]
98. 2 | ~1 [avatar split clause 48,36,93]
99. 2 | ~1 [avatar split clause 51,36,93]
731. 0 = $sum($sum($sum(sK1,$uminus(r00)),$uminus($product(q00,y00))),$product(y00,sK2)) [forward demodulation 25,14]
732. 0 = $sum($sum(sK1,$sum($uminus(r00),$uminus($product(q00,y00)))),$product(y00,sK2)) [forward demodulation 731,4]
733. 0 = $sum($sum(sK1,$uminus($sum($product(q00,y00),r00))),$product(y00,sK2)) [forward demodulation 732,6]
734. 0 = $sum($sum(sK1,$uminus($sum(r00,$product(q00,y00)))),$product(y00,sK2)) [forward demodulation 733,3]
823. 3 <=> 0 = $sum($sum(sK1,$uminus($sum(r00,$product(q00,y00)))),$product(y00,sK2)) [avatar definition]
826. 3 [avatar split clause 734,823]
940. 0 != $sum($product($product($product(y00,y00),sK2),sK1),$sum($uminus($product($product(y00,y00),sK2)),$sum($product($product(y00,y00),sK1),$sum($uminus($product(y00,y00)),$sum($uminus($product($product($product(y00,y00),sK2),sK1)),$sum($product($product(y00,y00),sK2),$sum($product(y00,y00),$uminus($product($product(y00,y00),sK1))))))))) [forward demodulation 29,3]
941. 0 != $sum($product($product($product(y00,y00),sK2),sK1),$sum($uminus($product($product(y00,y00),sK2)),$sum($product(sK1,$product(y00,y00)),$sum($uminus($product(y00,y00)),$sum($uminus($product($product($product(y00,y00),sK2),sK1)),$sum($product($product(y00,y00),sK2),$sum($product(y00,y00),$uminus($product(sK1,$product(y00,y00)))))))))) [forward demodulation 940,14]
942. 0 != $sum($product($product(sK2,$product(y00,y00)),sK1),$sum($uminus($product(sK2,$product(y00,y00))),$sum($product(sK1,$product(y00,y00)),$sum($uminus($product(y00,y00)),$sum($uminus($product($product(sK2,$product(y00,y00)),sK1)),$sum($product(sK2,$product(y00,y00)),$sum($product(y00,y00),$uminus($product(sK1,$product(y00,y00)))))))))) [forward demodulation 941,14]
943. 0 != $sum($product(sK1,$product(sK2,$product(y00,y00))),$sum($uminus($product(sK2,$product(y00,y00))),$sum($product(sK1,$product(y00,y00)),$sum($uminus($product(y00,y00)),$sum($uminus($product(sK1,$product(sK2,$product(y00,y00)))),$sum($product(sK2,$product(y00,y00)),$sum($product(y00,y00),$uminus($product(sK1,$product(y00,y00)))))))))) [forward demodulation 942,14]
1003. 4 <=> 0 = $sum($product(sK1,$product(sK2,$product(y00,y00))),$sum($uminus($product(sK2,$product(y00,y00))),$sum($product(sK1,$product(y00,y00)),$sum($uminus($product(y00,y00)),$sum($uminus($product(sK1,$product(sK2,$product(y00,y00)))),$sum($product(sK2,$product(y00,y00)),$sum($product(y00,y00),$uminus($product(sK1,$product(y00,y00)))))))))) [avatar definition]
1006. ~4 [avatar split clause 943,1003]
1007. $false [avatar smt refutation 39,96,97,98,99,826,1006]
% SZS output end Proof for eucliddiv_denorm_inv1_4xlen1
% ------------------------------
% Version: Vampire 4.6.1 (commit 1be729b10 on 2022-01-13 14:39:16 +0100)
% Linked with Z3 4.8.15.0 dfe2b27f9aa6d72583014fa301bd79d223fb254f z3-4.8.4-5822-gdfe2b27f9
% Termination reason: Refutation

% Memory used [KB]: 8059
% Time elapsed: 0.244 s
% ------------------------------
----  Runtime statistics ----
clauses created: 991
clauses deleted: 363
ssat_ground_clauses_for_congruence: 7
ssat_new_components: 4
ssat_non_splittable_sat_clauses: 7
ssat_reused_components: 3
ssat_sat_clauses: 7
-----------------------------
% ------------------------------
% Success in time 0.282 s
