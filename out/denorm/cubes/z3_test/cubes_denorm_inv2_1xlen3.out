unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(proof
(let ((?x519 (* 6 (* c!3 c!3 c!3))))
 (let ((?x704 (* (- 108) n!0)))
 (let ((?x681 (* (- 1) (* m!1 m!1 n!0 n!0 n!0))))
 (let ((?x644 (* n!0 n!0)))
 (let ((?x144 (* (- 108) ?x644)))
 (let ((?x378 (* (- 36) (* n!0 n!0 n!0))))
 (let ((?x579 (* 6 (* k!2 k!2 k!2))))
 (let ((?x583 (+ c!3 k!2)))
 (let ((?x385 (+ m!1 k!2)))
 (let ((?x168 (+ 1 n!0)))
 (let ((?x640 (* (- 12) m!1)))
 (let ((?x376 (* (- 36) (* m!1 n!0))))
 (let ((?x409 (* (- 3) (* m!1 m!1 n!0 n!0))))
 (let ((?x410 (* (- 3) (* m!1 m!1 n!0))))
 (let ((?x543 (* (- 36) (* m!1 n!0 n!0))))
 (let ((?x606 (* (- 12) (* m!1 n!0 n!0 n!0))))
 (let ((?x166 (* m!1 m!1)))
 (let ((?x167 (* (- 1) ?x166)))
 (let ((?x615 (+ (- 36) ?x167 ?x606 ?x543 ?x410 (* m!1 c!3 c!3 c!3) ?x409 ?x376 ?x640 (* m!1 k!2 k!2 k!2) (* 3 (* m!1 c!3 k!2 k!2)) (* ?x168 ?x168 ?x385 ?x385 ?x385 ?x583) ?x579 (* 18 (* c!3 k!2 k!2)) (* 18 (* c!3 c!3 k!2)) ?x378 (* 3 (* m!1 c!3 c!3 k!2)) ?x144 ?x681 ?x704 ?x519)))
 (let (($x308 (<= ?x615 0)))
 (let ((?x405 (* (- 1) k!2)))
 (let ((?x649 (* k!2 n!0)))
 (let ((?x238 (+ ?x649 (* (- 3) c!3) ?x405 (* 2 n!0))))
 (let (($x655 (<= ?x238 (- 1))))
 (let (($x778 (= ?x238 (- 1))))
 (let ((?x761 (* k!2 k!2)))
 (let ((?x555 (* 9 n!0)))
 (let ((?x686 (* (- 32) k!2)))
 (let ((?x348 (* (- 27) c!3)))
 (let ((?x667 (* c!3 n!0)))
 (let ((?x687 (* (- 9) ?x667)))
 (let ((?x699 (* (- 9) ?x649)))
 (let ((?x439 (* (- 5) m!1)))
 (let ((?x518 (+ 13 ?x166 ?x439 (* 2 (* m!1 k!2)) ?x699 ?x687 ?x348 ?x686 ?x555 ?x761)))
 (let ((?x538 (* ?x615 ?x518)))
 (let (($x498 (= ?x538 0)))
 (let (($x539 (not $x498)))
 (let ((?x383 (+ (* 3 ?x644) ?x405 (* 3 n!0))))
 (let (($x374 (= ?x383 (- 1))))
 (let ((?x673 (* (- 1) ?x761)))
 (let ((?x674 (* (- 9) n!0)))
 (let ((?x675 (* 5 k!2)))
 (let ((?x769 (* 18 c!3)))
 (let ((?x162 (* 9 ?x667)))
 (let ((?x693 (+ ?x162 ?x769 ?x675 ?x674 ?x673)))
 (let (($x698 (= ?x693 4)))
 (let ((?x677 (+ m!1 (* (- 6) n!0))))
 (let (($x676 (= ?x677 6)))
 (let (($x517 (and $x676 $x698 $x778 $x374 $x539)))
 (let ((?x406 (+ 13 ?x348 ?x686 ?x439 ?x555 ?x761 ?x699 ?x687 (* 2 (* k!2 m!1)) ?x166)))
 (let ((?x520 (+ (- 36) ?x640 ?x704 (* 6 (* c!3 k!2 c!3)) (* 6 (* k!2 c!3 c!3)) ?x144 ?x167 (* ?x168 ?x168 (+ k!2 m!1) (+ k!2 m!1) (+ k!2 m!1) ?x583) ?x681 ?x606 ?x378 ?x376 ?x410 ?x543 ?x409 (* 6 (* k!2 c!3 k!2)) (* c!3 c!3 c!3 m!1) (* 3 (* c!3 c!3 k!2 m!1)) (* 3 (* c!3 k!2 k!2 m!1)) (* k!2 k!2 k!2 m!1) ?x519 (* 6 (* c!3 c!3 k!2)) (* 6 (* k!2 k!2 c!3)) (* 6 (* c!3 k!2 k!2)) ?x579)))
 (let (($x307 (and $x676 (= (+ ?x769 ?x675 ?x674 ?x673 ?x162) 4) (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x649)) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x644)) 1) (not (= (* ?x520 ?x406) 0)))))
 (let (($x798 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x460 (* m m)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x481 (+ 13 (* (- 27) c) (* (- 32) k) ?x426 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) ?x460)))
 (let ((?x802 (* 6 (* k k k))))
 (let ((?x758 (* 6 (* c c c))))
 (let ((?x751 (* k k k m)))
 (let ((?x819 (* 3 (* c k k m))))
 (let ((?x818 (* 3 (* c c k m))))
 (let ((?x744 (* c c c m)))
 (let ((?x707 (* (- 3) (* m m n n))))
 (let ((?x714 (* (- 36) (* m n n))))
 (let ((?x701 (* (- 3) (* m m n))))
 (let ((?x715 (* (- 36) (* m n))))
 (let ((?x661 (* (- 36) (* n n n))))
 (let ((?x664 (* (- 12) (* m n n n))))
 (let ((?x695 (* (- 1) (* m m n n n))))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x488 (* ?x341 ?x341 ?x72 ?x72 ?x72 ?x68)))
 (let ((?x696 (* (- 1) ?x460)))
 (let ((?x269 (* n n)))
 (let ((?x668 (* (- 108) ?x269)))
 (let ((?x671 (* (- 108) n)))
 (let ((?x713 (* (- 12) m)))
 (let ((?x319 (+ (- 36) ?x713 ?x671 (* 6 (* c k c)) (* 6 (* k c c)) ?x668 ?x696 ?x488 ?x695 ?x664 ?x661 ?x715 ?x701 ?x714 ?x707 (* 6 (* k c k)) ?x744 ?x818 ?x819 ?x751 ?x758 (* 6 (* c c k)) (* 6 (* k k c)) (* 6 (* c k k)) ?x802)))
 (let (($x298 (= (+ k (* (- 3) n) (* (- 3) ?x269)) 1)))
 (let (($x260 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x212 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) ?x49) (* 9 (* c n)))))
 (let (($x208 (= ?x212 4)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 $x208 $x260 $x298 (not (= (* ?x319 ?x481) 0)))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x398 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x323 (* (- 18) c)))
 (let ((?x330 (+ 13 ?x323 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x426 ?x48 ?x78)))
 (let ((?x465 (+ 6 m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x68 (+ c k)))
 (let ((?x488 (* ?x341 ?x341 ?x72 ?x72 ?x72 ?x68)))
 (let ((?x282 (+ ?x488 (* (- 1) (* ?x341 ?x341 ?x341 ?x465 ?x465)) (* ?x465 ?x68 ?x68 ?x68))))
 (let (($x393 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x621 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x595 (= (+ ?x323 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 $x595 $x621 $x393 (not (= (* ?x282 ?x330) 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x456 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x460 (* m m)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x481 (+ 13 (* (- 27) c) (* (- 32) k) ?x426 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) ?x460)))
 (let ((?x802 (* 6 (* k k k))))
 (let ((?x758 (* 6 (* c c c))))
 (let ((?x751 (* k k k m)))
 (let ((?x819 (* 3 (* c k k m))))
 (let ((?x818 (* 3 (* c c k m))))
 (let ((?x744 (* c c c m)))
 (let ((?x707 (* (- 3) (* m m n n))))
 (let ((?x714 (* (- 36) (* m n n))))
 (let ((?x701 (* (- 3) (* m m n))))
 (let ((?x715 (* (- 36) (* m n))))
 (let ((?x661 (* (- 36) (* n n n))))
 (let ((?x664 (* (- 12) (* m n n n))))
 (let ((?x695 (* (- 1) (* m m n n n))))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x488 (* ?x341 ?x341 ?x72 ?x72 ?x72 ?x68)))
 (let ((?x696 (* (- 1) ?x460)))
 (let ((?x269 (* n n)))
 (let ((?x668 (* (- 108) ?x269)))
 (let ((?x671 (* (- 108) n)))
 (let ((?x713 (* (- 12) m)))
 (let ((?x319 (+ (- 36) ?x713 ?x671 (* 6 (* c k c)) (* 6 (* k c c)) ?x668 ?x696 ?x488 ?x695 ?x664 ?x661 ?x715 ?x701 ?x714 ?x707 (* 6 (* k c k)) ?x744 ?x818 ?x819 ?x751 ?x758 (* 6 (* c c k)) (* 6 (* k k c)) (* 6 (* c k k)) ?x802)))
 (let (($x298 (= (+ k (* (- 3) n) (* (- 3) ?x269)) 1)))
 (let (($x260 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x212 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) ?x49) (* 9 (* c n)))))
 (let (($x208 (= ?x212 4)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x335 (and $x124 $x208 $x260 $x298 (not (= (* ?x319 ?x481) 0)))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x323 (* (- 18) c)))
 (let ((?x330 (+ 13 ?x323 (* (- 23) k) (* (- 9) (* ?x341 ?x68)) ?x426 ?x48 ?x78)))
 (let ((?x282 (+ ?x488 (* (- 1) (* ?x341 ?x341 ?x341 (+ 6 m) (+ 6 m))) (* (+ 6 m) ?x68 ?x68 ?x68))))
 (let (($x621 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x595 (= (+ ?x323 (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49) (- 4))))
 (let (($x780 (and $x124 $x595 $x621 (= (+ (* 3 ?x269) (* (- 1) k) (* 3 n)) (- 1)) (not (= (* ?x282 ?x330) 0)))))
 (rewrite (= $x780 $x335))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x91 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x81 (+ m 6)))
 (let ((?x72 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x85 (+ (- (* ?x68 ?x72 ?x72 ?x72 ?x70 ?x70) (* ?x81 ?x81 ?x70 ?x70 ?x70)) (* ?x68 ?x68 ?x68 ?x81))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x76 (- (- (- (* 4 1) (* 18 ?x68)) (* 9 ?x68 ?x70)) (* 5 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* (+ ?x76 (* 9 ?x70) ?x78) ?x85) 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x404 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x323 (* (- 18) c)))
 (let ((?x330 (+ 13 ?x323 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x426 ?x48 ?x78)))
 (let ((?x465 (+ 6 m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x68 (+ c k)))
 (let ((?x488 (* ?x341 ?x341 ?x72 ?x72 ?x72 ?x68)))
 (let ((?x282 (+ ?x488 (* (- 1) (* ?x341 ?x341 ?x341 ?x465 ?x465)) (* ?x465 ?x68 ?x68 ?x68))))
 (let (($x393 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x621 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x595 (= (+ ?x323 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x780 (and $x124 $x595 $x621 $x393 (not (= (* ?x282 ?x330) 0)))))
 (let ((?x70 (+ n 1)))
 (let ((?x81 (+ m 6)))
 (let ((?x85 (+ (- (* ?x68 ?x72 ?x72 ?x72 ?x70 ?x70) (* ?x81 ?x81 ?x70 ?x70 ?x70)) (* ?x68 ?x68 ?x68 ?x81))))
 (let ((?x76 (- (- (- (* 4 1) (* 18 ?x68)) (* 9 ?x68 ?x70)) (* 5 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x90 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* (+ ?x76 (* 9 ?x70) ?x78) ?x85) 0))))))
 (rewrite (= $x90 $x780))))))))))))))))))))))))))))))
 ))
 (let ((@x92 (asserted $x91)))
 (let ((@x502 (mp (mp @x92 (quant-intro (proof-bind ?x404) (= $x91 $x398)) $x398) (rewrite (= $x398 $x398)) $x398)))
 (let ((@x700 (mp~ (mp @x502 (quant-intro (proof-bind ?x456) (= $x398 $x798)) $x798) (sk (~ $x798 $x307)) $x307)))
 (let ((@x560 (mp @x700 (rewrite (= $x307 $x517)) $x517)))
 (let ((@x530 (and-elim @x560 $x778)))
 (let ((@x99 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x778) $x655)) @x530 $x655)))
 (let (($x617 (>= ?x238 (- 1))))
 (let ((@x571 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x778) $x617)) @x530 $x617)))
 (let (($x623 (<= ?x693 4)))
 (let ((@x347 (and-elim @x560 $x698)))
 (let ((@x551 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x698) $x623)) @x347 $x623)))
 (let (($x624 (>= ?x693 4)))
 (let ((@x135 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x698) $x624)) @x347 $x624)))
 (let (($x626 (<= ?x677 6)))
 (let ((@x503 (and-elim @x560 $x676)))
 (let ((@x764 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x676) $x626)) @x503 $x626)))
 (let (($x618 (>= ?x677 6)))
 (let ((@x557 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x676) $x618)) @x503 $x618)))
 (let (($x656 (<= ?x383 (- 1))))
 (let ((@x350 (and-elim @x560 $x374)))
 (let ((@x328 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x374) $x656)) @x350 $x656)))
 (let (($x652 (>= ?x383 (- 1))))
 (let ((@x147 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x374) $x652)) @x350 $x652)))
 (let ((@x442 (hypothesis (not $x308))))
 (let (($x2383 (not (<= ?x538 0))))
 (let (($x613 (>= ?x538 0)))
 (let (($x1790 (>= ?x615 0)))
 (let (($x1794 (not $x1790)))
 (let (($x552 (not $x613)))
 (let ((@x553 (hypothesis $x552)))
 (let ((@x353 ((_ th-lemma arith) @x553 @x442 @x147 @x328 @x571 @x99 @x557 @x764 @x147 @x328 @x135 @x551 @x147 @x328 @x557 @x764 false)))
 (let ((@x1793 ((_ th-lemma arith farkas 1 1 1) @x553 (hypothesis $x1790) (unit-resolution (lemma @x353 (or $x308 $x613)) @x553 $x308) false)))
 (let ((@x1438 ((_ th-lemma arith) @x553 (unit-resolution (lemma @x1793 (or $x1794 $x613)) @x553 $x1794) @x557 @x764 @x557 @x764 @x135 @x551 @x571 @x99 @x557 @x764 @x147 @x328 @x135 @x551 @x571 @x99 false)))
 (let ((@x2387 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x498 $x2383 $x552)) (and-elim @x560 $x539) (or $x2383 $x552))))
 (let ((@x2388 (unit-resolution @x2387 (lemma @x1438 $x613) $x2383)))
 (let ((@x2287 ((_ th-lemma arith) @x2388 @x442 @x557 @x764 @x557 @x764 @x571 @x99 @x557 @x764 @x557 @x764 @x147 @x328 @x557 @x764 @x135 @x551 @x571 @x99 false)))
 (let ((@x2338 ((_ th-lemma arith) @x2388 (hypothesis $x1794) @x557 @x764 @x557 @x764 @x557 @x764 @x147 @x328 @x557 @x764 @x571 @x99 @x557 @x764 @x557 @x764 @x135 @x551 @x571 @x99 false)))
 ((_ th-lemma arith farkas 1 1 1) @x2388 (lemma @x2338 $x1790) (lemma @x2287 $x308) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 232
 :arith-assert-diseq        25
 :arith-assert-lower        1817
 :arith-assert-upper        1648
 :arith-bound-prop          34
 :arith-branch-var          66
 :arith-conflicts           83
 :arith-eq-adapter          26
 :arith-fixed-eqs           350
 :arith-gcd-tests           892
 :arith-gomory-cuts         51
 :arith-grobner             118
 :arith-ineq-splits         66
 :arith-max-min             11913
 :arith-nonlinear-bounds    723
 :arith-nonlinear-horner    1418
 :arith-num-rows            27
 :arith-offset-eqs          8
 :arith-patches             139
 :arith-patches_succ        7
 :arith-pivots              2544
 :arith-pseudo-nonlinear    470
 :arith-row-summations      20771
 :arith-tableau-max-columns 83
 :arith-tableau-max-rows    27
 :conflicts                 106
 :decisions                 654
 :del-clause                351
 :final-checks              401
 :max-memory                20.30
 :memory                    19.37
 :minimized-lits            14
 :mk-bool-var               724
 :mk-clause                 633
 :num-allocs                104369352
 :num-checks                1
 :propagations              739
 :restarts                  1
 :rlimit-count              2535424
 :time                      1.17
 :total-time                1.19)
