unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x1038 (* (- 1) k!2)))
 (let ((?x884 (+ (* 3 n!0) (* 3 (* n!0 n!0)) ?x1038)))
 (let (($x1188 (<= ?x884 (- 1))))
 (let (($x1048 (= ?x884 (- 1))))
 (let ((?x2990 (+ c!3 k!2)))
 (let ((?x1171 (+ m!1 k!2)))
 (let ((?x4088 (+ 6 m!1)))
 (let ((?x3264 (+ 1 n!0)))
 (let ((?x3303 (* ?x3264 ?x3264 ?x3264 ?x4088 ?x4088 ?x4088 ?x1171 ?x1171 ?x1171 ?x1171 ?x1171 ?x2990 ?x2990 ?x2990)))
 (let ((?x3291 (* ?x3264 ?x3264 ?x3264 ?x3264 ?x4088 ?x4088 ?x4088 ?x1171 ?x1171 ?x1171 ?x2990 ?x2990 ?x2990)))
 (let ((?x3245 (* ?x3264 ?x3264 ?x3264 ?x4088 ?x4088 ?x4088 ?x1171 ?x1171 ?x1171 ?x1171 ?x2990 ?x2990 ?x2990)))
 (let ((?x3244 (* ?x3264 ?x3264 ?x3264 ?x4088 ?x4088 ?x4088 ?x1171 ?x1171 ?x1171 ?x2990 ?x2990 ?x2990 ?x2990)))
 (let ((?x1156 (* ?x3264 ?x3264 ?x3264 ?x3264 ?x4088 ?x4088 ?x4088 ?x1171 ?x1171 ?x1171 ?x2990 ?x2990 ?x2990 ?x2990)))
 (let ((?x990 (* 4 (* ?x3264 ?x3264 ?x3264 ?x4088 ?x4088 ?x4088 ?x1171 ?x1171 ?x1171 ?x2990 ?x2990 ?x2990))))
 (let ((?x4079 (+ (* 45 (* m!1 m!1 k!2 k!2)) (* 10 (* m!1 m!1 m!1 c!3 k!2)) (* 4 (* ?x4088 ?x4088 ?x4088 ?x1171 ?x2990 ?x2990 ?x2990)) (* 5 (* m!1 m!1 m!1 n!0 c!3)) (* 4 (* m!1 m!1 m!1 n!0 n!0)) (* 100 (* m!1 n!0 k!2 k!2)) (* 35 (* m!1 m!1 c!3 c!3)) (* (- 9) (* ?x3264 ?x4088 ?x4088 ?x4088 ?x1171 ?x2990 ?x2990 ?x2990 ?x2990)) (* 90 (* c!3 k!2 k!2)) ?x990 (* (- 5) (* ?x4088 ?x4088 ?x4088 ?x1171 ?x1171 ?x2990 ?x2990 ?x2990)) (* 54 (* n!0 c!3 c!3 k!2)) (* (- 54) (* m!1 n!0 n!0 c!3)) (* 54 (* m!1 n!0 c!3 c!3)) (* (- 84) (* n!0 k!2 k!2)) (* 23 (* m!1 k!2 k!2 k!2 k!2)) (* (- 5) (* ?x3264 ?x3264 ?x4088 ?x1171 ?x1171 ?x1171)) (* 24 (* m!1 m!1 n!0 n!0)) (* 107 (* m!1 c!3 k!2)) (* (- 132) (* m!1 n!0 c!3)) (* 146 (* m!1 n!0 c!3 k!2)) (* 14 (* m!1 n!0 k!2 k!2 k!2)) (* 18 (* m!1 m!1 c!3 c!3 c!3)) (* 9 (* m!1 n!0 c!3 c!3 k!2)) (* 59 (* m!1 c!3 c!3 k!2 k!2)) (* 81 (* m!1 k!2 k!2)) (* 25 (* m!1 m!1 k!2)) (* (- 1) (* m!1 m!1 n!0 n!0 k!2)) (* (- 9) ?x1156) (* (- 132) (* n!0 c!3 k!2)) (* (- 9) (* m!1 n!0 n!0 c!3 k!2)) (* (- 5) (* m!1 n!0 n!0 k!2 k!2)) (* 138 (* n!0 c!3 k!2 k!2)) (* 84 (* n!0 k!2 k!2 k!2)) (* 30 (* m!1 c!3 c!3)) (* (- 36) (* m!1 n!0 k!2)) (* 64 (* m!1 m!1 c!3 c!3 k!2)) (* 24 (* m!1 m!1 n!0 k!2)) (* (- 30) (* n!0 n!0 k!2 k!2)) (* 28 (* m!1 m!1 n!0 c!3 k!2)) (* 108 (* m!1 c!3 c!3 c!3)) (* 389 (* m!1 c!3 c!3 k!2)) (* (- 9) (* ?x3264 ?x3264 ?x3264 ?x4088 ?x1171 ?x1171 ?x2990)) (* 23 (* m!1 n!0 c!3 k!2 k!2)) (* 9 (* m!1 m!1 n!0 c!3 c!3)) (* 19 (* m!1 m!1 n!0 k!2 k!2)) (* 18 (* m!1 c!3 c!3 c!3 k!2)) (* 64 (* m!1 c!3 k!2 k!2 k!2)) (* 28 (* m!1 m!1 k!2 k!2 k!2)) (* 74 (* m!1 m!1 c!3 k!2 k!2)) (* 459 (* m!1 c!3 k!2 k!2)) (* 178 (* m!1 k!2 k!2 k!2)) (* 30 (* c!3 c!3 k!2)) (* 108 (* c!3 c!3 c!3 k!2)) (* (- 6) (* m!1 n!0 n!0 k!2)) (* 8 (* m!1 m!1 n!0 c!3)) (* (- 1) (* ?x3264 ?x4088 ?x1171 ?x1171 ?x1171 ?x2990)) (* (- 54) (* n!0 n!0 c!3 k!2)) (* (- 1) (* ?x4088 ?x1171 ?x1171 ?x1171 ?x2990 ?x2990)) (* 138 (* k!2 k!2 k!2 k!2)) (* 5 (* m!1 m!1 m!1 c!3 c!3)) (* ?x3264 ?x3264 ?x4088 ?x1171 ?x1171 ?x1171 ?x1171) (* (- 78) (* c!3 k!2)) (* 4 (* m!1 m!1 m!1)) (* (- 18) (* ?x3264 ?x3264 ?x4088 ?x1171 ?x1171 ?x2990)) (* 9 (* ?x3264 ?x4088 ?x4088 ?x4088 ?x1171 ?x2990 ?x2990 ?x2990)) (* 60 (* k!2 k!2 k!2)) (* 24 (* m!1 m!1)) (* (- 54) (* k!2 k!2)) (* 80 (* m!1 m!1 c!3 k!2)) (* (- 18) ?x3244) (* (- 5) ?x3245) (* (- 9) (* m!1 m!1 n!0 n!0 c!3)) (* 17 (* m!1 m!1 c!3)) (* ?x4088 ?x4088 ?x4088 ?x1171 ?x1171 ?x1171 ?x2990 ?x2990 ?x2990) (* (- 30) (* m!1 k!2)) (* 9 ?x3291) ?x3303 (* 9 (* ?x3264 ?x3264 ?x4088 ?x1171 ?x2990 ?x2990)) (* (- 18) (* ?x4088 ?x4088 ?x4088 ?x1171 ?x2990 ?x2990 ?x2990 ?x2990)) (* (- 78) (* m!1 c!3)) (* 9 (* ?x3264 ?x3264 ?x3264 ?x4088 ?x1171 ?x1171)) (* 9 (* ?x3264 ?x4088 ?x1171 ?x2990 ?x2990 ?x2990)) (* 48 (* m!1 m!1 n!0)) (* 8 (* m!1 m!1 m!1 n!0)) (* 384 (* c!3 k!2 k!2 k!2)) (* 354 (* c!3 c!3 k!2 k!2)) (* 5 (* m!1 m!1 m!1 k!2)) (* 5 (* m!1 m!1 m!1 n!0 k!2)) (* 5 (* m!1 m!1 m!1 k!2 k!2)) (* 5 (* m!1 m!1 m!1 c!3)))))
 (let (($x4231 (= ?x4079 0)))
 (let (($x3901 (not $x4231)))
 (let ((?x1046 (+ (* n!0 k!2) (* 2 n!0) (* (- 3) c!3) ?x1038)))
 (let (($x1254 (= ?x1046 (- 1))))
 (let ((?x3127 (* k!2 k!2)))
 (let ((?x874 (+ (* 9 n!0) (* (- 18) c!3) ?x3127 (* (- 9) (* n!0 c!3)) (* (- 5) k!2))))
 (let (($x1043 (= ?x874 (- 4))))
 (let ((?x647 (+ m!1 (* (- 6) n!0))))
 (let (($x3030 (= ?x647 6)))
 (let (($x1039 (and $x3030 $x1043 $x1254 $x1048 $x3901)))
 (let ((?x3178 (* 9 (* ?x3264 ?x3264 ?x3264 ?x4088 (+ k!2 m!1) (+ k!2 m!1) ?x2990))))
 (let ((?x3319 (* 5 (* ?x3264 ?x3264 ?x4088 (+ k!2 m!1) (+ k!2 m!1) (+ k!2 m!1)))))
 (let ((?x3318 (* 9 (* ?x3264 ?x4088 ?x4088 ?x4088 (+ k!2 m!1) ?x2990 ?x2990 ?x2990 ?x2990))))
 (let ((?x2984 (+ k!2 m!1)))
 (let ((?x938 (* ?x3264 ?x3264 ?x3264 ?x4088 ?x4088 ?x4088 ?x2984 ?x2984 ?x2984 ?x2984 ?x2984 ?x2990 ?x2990 ?x2990)))
 (let ((?x599 (* (- 4) (* ?x3264 ?x3264 ?x3264 ?x4088 ?x4088 ?x4088 ?x2984 ?x2984 ?x2984 ?x2990 ?x2990 ?x2990))))
 (let ((?x3403 (* ?x3264 ?x3264 ?x3264 ?x3264 ?x4088 ?x4088 ?x4088 ?x2984 ?x2984 ?x2984 ?x2990 ?x2990 ?x2990)))
 (let ((?x3080 (* ?x3264 ?x3264 ?x3264 ?x4088 ?x4088 ?x4088 ?x2984 ?x2984 ?x2984 ?x2990 ?x2990 ?x2990 ?x2990)))
 (let ((?x3395 (* ?x3264 ?x3264 ?x3264 ?x4088 ?x4088 ?x4088 ?x2984 ?x2984 ?x2984 ?x2984 ?x2990 ?x2990 ?x2990)))
 (let ((?x2986 (* ?x3264 ?x3264 ?x3264 ?x3264 ?x4088 ?x4088 ?x4088 ?x2984 ?x2984 ?x2984 ?x2990 ?x2990 ?x2990 ?x2990)))
 (let ((?x3154 (+ (* 54 ?x3127) (* (- 9) (* c!3 c!3 k!2 m!1 n!0)) (* (- 23) (* c!3 k!2 k!2 m!1 n!0)) (* (- 14) (* k!2 k!2 k!2 m!1 n!0)) (* (- 9) (* c!3 c!3 m!1 m!1 n!0)) (* (- 28) (* c!3 k!2 m!1 m!1 n!0)) (* (- 19) (* k!2 k!2 m!1 m!1 n!0)) (* (- 18) (* c!3 c!3 c!3 k!2 m!1)) (* (- 59) (* c!3 c!3 k!2 k!2 m!1)) (* (- 64) (* c!3 k!2 k!2 k!2 m!1)) (* (- 23) (* k!2 k!2 k!2 k!2 m!1)) (* (- 18) (* c!3 c!3 c!3 m!1 m!1)) (* (- 64) (* c!3 c!3 k!2 m!1 m!1)) (* (- 74) (* c!3 k!2 k!2 m!1 m!1)) (* (- 28) (* k!2 k!2 k!2 m!1 m!1)) (* (- 108) (* c!3 c!3 c!3 k!2)) (* (- 354) (* c!3 c!3 k!2 k!2)) (* (- 384) (* c!3 k!2 k!2 k!2)) (* (- 138) (* k!2 k!2 k!2 k!2)) (* (- 108) (* c!3 c!3 c!3 m!1)) (* (- 389) (* c!3 c!3 k!2 m!1)) (* (- 459) (* c!3 k!2 k!2 m!1)) (* (- 178) (* k!2 k!2 k!2 m!1)) (* 132 (* c!3 k!2 n!0)) (* 54 (* c!3 m!1 n!0 n!0)) (* 54 (* c!3 k!2 n!0 n!0)) (* 78 (* c!3 m!1)) (* 78 (* c!3 k!2)) (* (- 45) (* k!2 k!2 m!1 m!1)) (* (- 80) (* c!3 k!2 m!1 m!1)) (* (- 35) (* c!3 c!3 m!1 m!1)) (* (- 100) (* k!2 k!2 m!1 n!0)) (* (- 146) (* c!3 k!2 m!1 n!0)) (* (- 54) (* c!3 c!3 m!1 n!0)) (* (- 84) (* k!2 k!2 k!2 n!0)) (* (- 138) (* c!3 k!2 k!2 n!0)) (* (- 54) (* c!3 c!3 k!2 n!0)) (* (- 81) (* k!2 k!2 m!1)) (* (- 107) (* c!3 k!2 m!1)) (* 132 (* c!3 m!1 n!0)) (* (- 30) (* c!3 c!3 m!1)) (* (- 60) (* k!2 k!2 k!2)) (* (- 90) (* c!3 k!2 k!2)) (* 5 (* k!2 k!2 m!1 n!0 n!0)) (* 9 (* c!3 k!2 m!1 n!0 n!0)) (* (- 30) (* c!3 c!3 k!2)) (* 9 ?x2986) (* k!2 m!1 m!1 n!0 n!0) (* 9 (* c!3 m!1 m!1 n!0 n!0)) (* 5 ?x3395) (* 18 ?x3080) (* (- 9) ?x3403) (* (- 9) (* ?x3264 ?x3264 ?x3264 ?x4088 ?x2984 ?x2984)) (* (- 4) (* m!1 m!1 m!1 n!0 n!0)) (* 30 (* k!2 m!1)) (* 6 (* k!2 m!1 n!0 n!0)) (* 30 (* k!2 k!2 n!0 n!0)) (* (- 24) (* k!2 m!1 m!1 n!0)) (* 36 (* k!2 m!1 n!0)) (* 84 (* k!2 k!2 n!0)) (* (- 25) (* k!2 m!1 m!1)) (* (- 48) (* m!1 m!1 n!0)) (* (- 8) (* m!1 m!1 m!1 n!0)) (* (- 4) (* m!1 m!1 m!1)) (* 5 (* ?x4088 ?x4088 ?x4088 ?x2984 ?x2984 ?x2990 ?x2990 ?x2990)) (* (- 24) (* m!1 m!1)) (* (- 24) (* m!1 m!1 n!0 n!0)) ?x599 (* (- 5) (* c!3 m!1 m!1 m!1 n!0)) (* (- 5) (* k!2 m!1 m!1 m!1 n!0)) (* (- 17) (* c!3 m!1 m!1)) (* (- 5) (* c!3 m!1 m!1 m!1)) (* (- 5) (* k!2 m!1 m!1 m!1)) (* (- 8) (* c!3 m!1 m!1 n!0)) (* (- 9) (* ?x3264 ?x4088 ?x4088 ?x4088 ?x2984 ?x2990 ?x2990 ?x2990)) (* (- 1) (* ?x4088 ?x4088 ?x4088 ?x2984 ?x2984 ?x2984 ?x2990 ?x2990 ?x2990)) (* (- 1) (* ?x3264 ?x3264 ?x4088 ?x2984 ?x2984 ?x2984 ?x2984)) (* ?x4088 ?x2984 ?x2984 ?x2984 ?x2990 ?x2990) (* (- 1) ?x938) (* (- 9) (* ?x3264 ?x3264 ?x4088 ?x2984 ?x2990 ?x2990)) ?x3318 (* 18 (* ?x4088 ?x4088 ?x4088 ?x2984 ?x2990 ?x2990 ?x2990 ?x2990)) ?x3319 ?x3178 (* 18 (* ?x3264 ?x3264 ?x4088 ?x2984 ?x2984 ?x2990)) (* (- 4) (* ?x4088 ?x4088 ?x4088 ?x2984 ?x2990 ?x2990 ?x2990)) (* (- 9) (* ?x3264 ?x4088 ?x2984 ?x2990 ?x2990 ?x2990)) (* ?x3264 ?x4088 ?x2984 ?x2984 ?x2984 ?x2990) (* (- 5) (* k!2 k!2 m!1 m!1 m!1)) (* (- 10) (* c!3 k!2 m!1 m!1 m!1)) (* (- 5) (* c!3 c!3 m!1 m!1 m!1)))))
 (let (($x2979 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x1146 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x3127) (* 9 (* c!3 n!0)))))
 (let (($x1235 (and $x3030 (= ?x1146 4) $x2979 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x3154 0)))))
 (let (($x2432 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x341 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x3452 (* ?x344 ?x341 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x3428 (* ?x344 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1360 (* (- 9) ?x3428)))
 (let ((?x3394 (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3410 (* (- 4) ?x3394)))
 (let ((?x3368 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)))
 (let ((?x3369 (* 18 ?x3368)))
 (let ((?x3359 (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)))
 (let ((?x3360 (* 9 ?x3359)))
 (let ((?x3350 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70)))
 (let ((?x3351 (* 5 ?x3350)))
 (let ((?x3341 (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x3342 (* 18 ?x3341)))
 (let ((?x3332 (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x3333 (* 9 ?x3332)))
 (let ((?x3301 (* ?x344 ?x344 ?x341 ?x70 ?x69 ?x69)))
 (let ((?x3315 (* (- 9) ?x3301)))
 (let ((?x3277 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3287 (* (- 1) ?x3277)))
 (let ((?x3258 (* ?x341 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x3216 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x3223 (* (- 1) ?x3216)))
 (let ((?x2994 (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1293 (* (- 1) ?x2994)))
 (let ((?x2978 (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2982 (* (- 9) ?x2978)))
 (let ((?x2670 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3470 (* (- 4) ?x2670)))
 (let ((?x2609 (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3239 (* 5 ?x2609)))
 (let ((?x1698 (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70)))
 (let ((?x1705 (* (- 9) ?x1698)))
 (let ((?x1653 (* ?x344 ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2119 (* (- 9) ?x1653)))
 (let ((?x1574 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1576 (* 18 ?x1574)))
 (let ((?x1556 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1558 (* 5 ?x1556)))
 (let ((?x1539 (* k m m n n)))
 (let ((?x1521 (* ?x344 ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1538 (* 9 ?x1521)))
 (let ((?x2419 (+ (* 54 (* k k)) (* (- 9) (* c c k m n)) (* (- 23) (* c k k m n)) (* (- 14) (* k k k m n)) (* (- 9) (* c c m m n)) (* (- 28) (* c k m m n)) (* (- 19) (* k k m m n)) (* (- 18) (* c c c k m)) (* (- 59) (* c c k k m)) (* (- 64) (* c k k k m)) (* (- 23) (* k k k k m)) (* (- 18) (* c c c m m)) (* (- 64) (* c c k m m)) (* (- 74) (* c k k m m)) (* (- 28) (* k k k m m)) (* (- 108) (* c c c k)) (* (- 354) (* c c k k)) (* (- 384) (* c k k k)) (* (- 138) (* k k k k)) (* (- 108) (* c c c m)) (* (- 389) (* c c k m)) (* (- 459) (* c k k m)) (* (- 178) (* k k k m)) (* 132 (* c k n)) (* 54 (* c m n n)) (* 54 (* c k n n)) (* 78 (* c m)) (* 78 (* c k)) (* (- 45) (* k k m m)) (* (- 80) (* c k m m)) (* (- 35) (* c c m m)) (* (- 100) (* k k m n)) (* (- 146) (* c k m n)) (* (- 54) (* c c m n)) (* (- 84) (* k k k n)) (* (- 138) (* c k k n)) (* (- 54) (* c c k n)) (* (- 81) (* k k m)) (* (- 107) (* c k m)) (* 132 (* c m n)) (* (- 30) (* c c m)) (* (- 60) (* k k k)) (* (- 90) (* c k k)) (* 5 (* k k m n n)) (* 9 (* c k m n n)) (* (- 30) (* c c k)) ?x1538 ?x1539 (* 9 (* c m m n n)) ?x1558 ?x1576 ?x2119 ?x1705 (* (- 4) (* m m m n n)) (* 30 (* k m)) (* 6 (* k m n n)) (* 30 (* k k n n)) (* (- 24) (* k m m n)) (* 36 (* k m n)) (* 84 (* k k n)) (* (- 25) (* k m m)) (* (- 48) (* m m n)) (* (- 8) (* m m m n)) (* (- 4) (* m m m)) ?x3239 (* (- 24) (* m m)) (* (- 24) (* m m n n)) ?x3470 (* (- 5) (* c m m m n)) (* (- 5) (* k m m m n)) (* (- 17) (* c m m)) (* (- 5) (* c m m m)) (* (- 5) (* k m m m)) (* (- 8) (* c m m n)) ?x2982 ?x1293 ?x3223 ?x3258 ?x3287 ?x3315 ?x3333 ?x3342 ?x3351 ?x3360 ?x3369 ?x3410 ?x1360 ?x3452 (* (- 5) (* k k m m m)) (* (- 10) (* c k m m m)) (* (- 5) (* c c m m m)))))
 (let (($x331 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x293 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x244 (* (- 1) ?x49)))
 (let ((?x243 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x241 (= (+ ?x40 ?x44 ?x243 ?x244 (* 9 (* c n))) 4)))
 (let (($x157 (= (+ m (* (- 6) n)) 6)))
 (and $x157 $x241 $x293 $x331 (not (= ?x2419 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x2652 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x341 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x2670 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1653 (* ?x344 ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1574 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1556 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1521 (* ?x344 ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2994 (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3277 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3216 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x2350 (+ (* 9 (* ?x344 ?x341 ?x70 ?x69 ?x69)) (* 18 (* ?x341 ?x70 ?x69 ?x69 ?x69)) ?x3216 (* (- 5) (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 4) (* ?x341 ?x70 ?x69 ?x69)) (* (- 1) (* ?x341 ?x70 ?x70 ?x70 ?x69 ?x69)) ?x3277 (* 9 (* ?x344 ?x344 ?x341 ?x70 ?x69 ?x69)) (* (- 9) (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)) (* (- 18) (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)) (* (- 5) (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70)) (* (- 9) (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)) (* (- 18) (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)) (* (- 9) (* ?x344 ?x344 ?x341 ?x70 ?x69)) (* 4 (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)) (* 9 (* ?x344 ?x341 ?x70 ?x69 ?x69 ?x69)) (* (- 1) (* ?x344 ?x341 ?x70 ?x70 ?x70 ?x69)) (* 4 (* ?x344 ?x344 ?x341 ?x70 ?x70)) (* 5 (* ?x344 ?x341 ?x70 ?x70 ?x69)) (* 9 (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70)) (* 9 (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)) ?x2994 (* 5 (* ?x341 ?x70 ?x70 ?x69 ?x69)) (* (- 4) (* ?x344 ?x341 ?x70 ?x69)) (* (- 9) ?x1521) (* (- 5) ?x1556) (* (- 18) ?x1574) (* 9 ?x1653) (* 4 ?x2670))))
 (let (($x3170 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1464 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x244 (* (- 1) ?x49)))
 (let ((?x243 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x157 (= (+ m (* (- 6) n)) 6)))
 (and $x157 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x243 ?x244) 4) $x1464 $x3170 (not (= ?x2350 0)))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x2435 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x341 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x3452 (* ?x344 ?x341 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x3428 (* ?x344 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1360 (* (- 9) ?x3428)))
 (let ((?x3394 (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3410 (* (- 4) ?x3394)))
 (let ((?x3368 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)))
 (let ((?x3369 (* 18 ?x3368)))
 (let ((?x3359 (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)))
 (let ((?x3360 (* 9 ?x3359)))
 (let ((?x3350 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70)))
 (let ((?x3351 (* 5 ?x3350)))
 (let ((?x3341 (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x3342 (* 18 ?x3341)))
 (let ((?x3332 (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x3333 (* 9 ?x3332)))
 (let ((?x3301 (* ?x344 ?x344 ?x341 ?x70 ?x69 ?x69)))
 (let ((?x3315 (* (- 9) ?x3301)))
 (let ((?x3277 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3287 (* (- 1) ?x3277)))
 (let ((?x3258 (* ?x341 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x3216 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x3223 (* (- 1) ?x3216)))
 (let ((?x2994 (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1293 (* (- 1) ?x2994)))
 (let ((?x2978 (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2982 (* (- 9) ?x2978)))
 (let ((?x2670 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3470 (* (- 4) ?x2670)))
 (let ((?x2609 (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3239 (* 5 ?x2609)))
 (let ((?x1698 (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70)))
 (let ((?x1705 (* (- 9) ?x1698)))
 (let ((?x1653 (* ?x344 ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2119 (* (- 9) ?x1653)))
 (let ((?x1574 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1576 (* 18 ?x1574)))
 (let ((?x1556 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1558 (* 5 ?x1556)))
 (let ((?x1539 (* k m m n n)))
 (let ((?x1521 (* ?x344 ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1538 (* 9 ?x1521)))
 (let ((?x2419 (+ (* 54 (* k k)) (* (- 9) (* c c k m n)) (* (- 23) (* c k k m n)) (* (- 14) (* k k k m n)) (* (- 9) (* c c m m n)) (* (- 28) (* c k m m n)) (* (- 19) (* k k m m n)) (* (- 18) (* c c c k m)) (* (- 59) (* c c k k m)) (* (- 64) (* c k k k m)) (* (- 23) (* k k k k m)) (* (- 18) (* c c c m m)) (* (- 64) (* c c k m m)) (* (- 74) (* c k k m m)) (* (- 28) (* k k k m m)) (* (- 108) (* c c c k)) (* (- 354) (* c c k k)) (* (- 384) (* c k k k)) (* (- 138) (* k k k k)) (* (- 108) (* c c c m)) (* (- 389) (* c c k m)) (* (- 459) (* c k k m)) (* (- 178) (* k k k m)) (* 132 (* c k n)) (* 54 (* c m n n)) (* 54 (* c k n n)) (* 78 (* c m)) (* 78 (* c k)) (* (- 45) (* k k m m)) (* (- 80) (* c k m m)) (* (- 35) (* c c m m)) (* (- 100) (* k k m n)) (* (- 146) (* c k m n)) (* (- 54) (* c c m n)) (* (- 84) (* k k k n)) (* (- 138) (* c k k n)) (* (- 54) (* c c k n)) (* (- 81) (* k k m)) (* (- 107) (* c k m)) (* 132 (* c m n)) (* (- 30) (* c c m)) (* (- 60) (* k k k)) (* (- 90) (* c k k)) (* 5 (* k k m n n)) (* 9 (* c k m n n)) (* (- 30) (* c c k)) ?x1538 ?x1539 (* 9 (* c m m n n)) ?x1558 ?x1576 ?x2119 ?x1705 (* (- 4) (* m m m n n)) (* 30 (* k m)) (* 6 (* k m n n)) (* 30 (* k k n n)) (* (- 24) (* k m m n)) (* 36 (* k m n)) (* 84 (* k k n)) (* (- 25) (* k m m)) (* (- 48) (* m m n)) (* (- 8) (* m m m n)) (* (- 4) (* m m m)) ?x3239 (* (- 24) (* m m)) (* (- 24) (* m m n n)) ?x3470 (* (- 5) (* c m m m n)) (* (- 5) (* k m m m n)) (* (- 17) (* c m m)) (* (- 5) (* c m m m)) (* (- 5) (* k m m m)) (* (- 8) (* c m m n)) ?x2982 ?x1293 ?x3223 ?x3258 ?x3287 ?x3315 ?x3333 ?x3342 ?x3351 ?x3360 ?x3369 ?x3410 ?x1360 ?x3452 (* (- 5) (* k k m m m)) (* (- 10) (* c k m m m)) (* (- 5) (* c c m m m)))))
 (let (($x331 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x293 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x244 (* (- 1) ?x49)))
 (let ((?x243 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x241 (= (+ ?x40 ?x44 ?x243 ?x244 (* 9 (* c n))) 4)))
 (let (($x157 (= (+ m (* (- 6) n)) 6)))
 (let (($x3152 (and $x157 $x241 $x293 $x331 (not (= ?x2419 0)))))
 (let ((?x2350 (+ (* 9 (* ?x344 ?x341 ?x70 ?x69 ?x69)) (* 18 (* ?x341 ?x70 ?x69 ?x69 ?x69)) ?x3216 (* (- 5) ?x2609) (* (- 4) (* ?x341 ?x70 ?x69 ?x69)) (* (- 1) ?x3258) ?x3277 (* 9 ?x3301) (* (- 9) ?x3332) (* (- 18) ?x3341) (* (- 5) ?x3350) (* (- 9) ?x3359) (* (- 18) ?x3368) (* (- 9) (* ?x344 ?x344 ?x341 ?x70 ?x69)) (* 4 ?x3394) (* 9 ?x3428) (* (- 1) ?x3452) (* 4 (* ?x344 ?x344 ?x341 ?x70 ?x70)) (* 5 (* ?x344 ?x341 ?x70 ?x70 ?x69)) (* 9 ?x1698) (* 9 ?x2978) ?x2994 (* 5 (* ?x341 ?x70 ?x70 ?x69 ?x69)) (* (- 4) (* ?x344 ?x341 ?x70 ?x69)) (* (- 9) ?x1521) (* (- 5) ?x1556) (* (- 18) ?x1574) (* 9 ?x1653) (* 4 ?x2670))))
 (let (($x3170 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1464 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1613 (and $x157 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x243 ?x244) 4) $x1464 $x3170 (not (= ?x2350 0)))))
 (rewrite (= $x1613 $x3152)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x3176 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x341 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x2670 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3470 (* (- 4) ?x2670)))
 (let ((?x1653 (* ?x344 ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2119 (* (- 9) ?x1653)))
 (let ((?x1574 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1576 (* 18 ?x1574)))
 (let ((?x1556 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1558 (* 5 ?x1556)))
 (let ((?x1521 (* ?x344 ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1538 (* 9 ?x1521)))
 (let ((?x2994 (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1293 (* (- 1) ?x2994)))
 (let ((?x2978 (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2982 (* (- 9) ?x2978)))
 (let ((?x1698 (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70)))
 (let ((?x1705 (* (- 9) ?x1698)))
 (let ((?x3452 (* ?x344 ?x341 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x3428 (* ?x344 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1360 (* (- 9) ?x3428)))
 (let ((?x3394 (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3410 (* (- 4) ?x3394)))
 (let ((?x3368 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)))
 (let ((?x3369 (* 18 ?x3368)))
 (let ((?x3359 (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)))
 (let ((?x3360 (* 9 ?x3359)))
 (let ((?x3350 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70)))
 (let ((?x3351 (* 5 ?x3350)))
 (let ((?x3341 (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x3342 (* 18 ?x3341)))
 (let ((?x3332 (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x3333 (* 9 ?x3332)))
 (let ((?x3301 (* ?x344 ?x344 ?x341 ?x70 ?x69 ?x69)))
 (let ((?x3315 (* (- 9) ?x3301)))
 (let ((?x3277 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3287 (* (- 1) ?x3277)))
 (let ((?x3258 (* ?x341 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2609 (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3239 (* 5 ?x2609)))
 (let ((?x3216 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x3223 (* (- 1) ?x3216)))
 (let ((?x3476 (+ (* (- 9) (* ?x344 ?x341 ?x70 ?x69 ?x69)) (* (- 18) (* ?x341 ?x70 ?x69 ?x69 ?x69)) ?x3223 ?x3239 (* 4 (* ?x341 ?x70 ?x69 ?x69)) ?x3258 ?x3287 ?x3315 ?x3333 ?x3342 ?x3351 ?x3360 ?x3369 (* 9 (* ?x344 ?x344 ?x341 ?x70 ?x69)) ?x3410 ?x1360 ?x3452 (* (- 4) (* ?x344 ?x344 ?x341 ?x70 ?x70)) (* (- 5) (* ?x344 ?x341 ?x70 ?x70 ?x69)) ?x1705 ?x2982 ?x1293 (* (- 5) (* ?x341 ?x70 ?x70 ?x69 ?x69)) (* 4 (* ?x344 ?x341 ?x70 ?x69)) ?x1538 ?x1558 ?x1576 ?x2119 ?x3470)))
 (let (($x3170 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x3119 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x3066 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x157 (= (+ m (* (- 6) n)) 6)))
 (and $x157 (= ?x3066 (- 4)) $x3119 $x3170 (not (= ?x3476 0)))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x2662 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x341 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x2670 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1653 (* ?x344 ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1574 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1556 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1521 (* ?x344 ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2994 (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3277 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3216 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x2350 (+ (* 9 (* ?x344 ?x341 ?x70 ?x69 ?x69)) (* 18 (* ?x341 ?x70 ?x69 ?x69 ?x69)) ?x3216 (* (- 5) (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 4) (* ?x341 ?x70 ?x69 ?x69)) (* (- 1) (* ?x341 ?x70 ?x70 ?x70 ?x69 ?x69)) ?x3277 (* 9 (* ?x344 ?x344 ?x341 ?x70 ?x69 ?x69)) (* (- 9) (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)) (* (- 18) (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)) (* (- 5) (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70)) (* (- 9) (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)) (* (- 18) (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)) (* (- 9) (* ?x344 ?x344 ?x341 ?x70 ?x69)) (* 4 (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)) (* 9 (* ?x344 ?x341 ?x70 ?x69 ?x69 ?x69)) (* (- 1) (* ?x344 ?x341 ?x70 ?x70 ?x70 ?x69)) (* 4 (* ?x344 ?x344 ?x341 ?x70 ?x70)) (* 5 (* ?x344 ?x341 ?x70 ?x70 ?x69)) (* 9 (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70)) (* 9 (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)) ?x2994 (* 5 (* ?x341 ?x70 ?x70 ?x69 ?x69)) (* (- 4) (* ?x344 ?x341 ?x70 ?x69)) (* (- 9) ?x1521) (* (- 5) ?x1556) (* (- 18) ?x1574) (* 9 ?x1653) (* 4 ?x2670))))
 (let (($x3170 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1464 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x244 (* (- 1) ?x49)))
 (let ((?x243 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x157 (= (+ m (* (- 6) n)) 6)))
 (let (($x1613 (and $x157 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x243 ?x244) 4) $x1464 $x3170 (not (= ?x2350 0)))))
 (let ((?x3470 (* (- 4) ?x2670)))
 (let ((?x2119 (* (- 9) ?x1653)))
 (let ((?x1576 (* 18 ?x1574)))
 (let ((?x1558 (* 5 ?x1556)))
 (let ((?x1538 (* 9 ?x1521)))
 (let ((?x1293 (* (- 1) ?x2994)))
 (let ((?x2978 (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2982 (* (- 9) ?x2978)))
 (let ((?x1698 (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70)))
 (let ((?x1705 (* (- 9) ?x1698)))
 (let ((?x3452 (* ?x344 ?x341 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x3428 (* ?x344 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1360 (* (- 9) ?x3428)))
 (let ((?x3394 (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3410 (* (- 4) ?x3394)))
 (let ((?x3368 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)))
 (let ((?x3369 (* 18 ?x3368)))
 (let ((?x3359 (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)))
 (let ((?x3360 (* 9 ?x3359)))
 (let ((?x3350 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70)))
 (let ((?x3351 (* 5 ?x3350)))
 (let ((?x3341 (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x3342 (* 18 ?x3341)))
 (let ((?x3332 (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x3333 (* 9 ?x3332)))
 (let ((?x3301 (* ?x344 ?x344 ?x341 ?x70 ?x69 ?x69)))
 (let ((?x3315 (* (- 9) ?x3301)))
 (let ((?x3287 (* (- 1) ?x3277)))
 (let ((?x3258 (* ?x341 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2609 (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3239 (* 5 ?x2609)))
 (let ((?x3223 (* (- 1) ?x3216)))
 (let ((?x3476 (+ (* (- 9) (* ?x344 ?x341 ?x70 ?x69 ?x69)) (* (- 18) (* ?x341 ?x70 ?x69 ?x69 ?x69)) ?x3223 ?x3239 (* 4 (* ?x341 ?x70 ?x69 ?x69)) ?x3258 ?x3287 ?x3315 ?x3333 ?x3342 ?x3351 ?x3360 ?x3369 (* 9 (* ?x344 ?x344 ?x341 ?x70 ?x69)) ?x3410 ?x1360 ?x3452 (* (- 4) (* ?x344 ?x344 ?x341 ?x70 ?x70)) (* (- 5) (* ?x344 ?x341 ?x70 ?x70 ?x69)) ?x1705 ?x2982 ?x1293 (* (- 5) (* ?x341 ?x70 ?x70 ?x69 ?x69)) (* 4 (* ?x344 ?x341 ?x70 ?x69)) ?x1538 ?x1558 ?x1576 ?x2119 ?x3470)))
 (let (($x3119 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x3066 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x3189 (and $x157 (= ?x3066 (- 4)) $x3119 $x3170 (not (= ?x3476 0)))))
 (rewrite (= $x3189 $x1613))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x124 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x117 (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x116 (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x114 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x113 (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x112 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x76 (- (* (- 9) ?x69 ?x69 ?x70 ?x71 ?x72) (* 18 ?x69 ?x69 ?x69 ?x70 ?x71))))
 (let ((?x81 (+ (- ?x76 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x72 ?x72)) (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* 4 ?x69 ?x69 ?x70 ?x71) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x92 (+ (- (- ?x81 ?x82) (* 9 ?x69 ?x69 ?x70 ?x71 ?x72 ?x72)) (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x72) (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 5 ?x70 ?x70 ?x70 ?x71 ?x72 ?x72) (* 9 ?x69 ?x70 ?x70 ?x71 ?x72 ?x72 ?x72) (* 18 ?x69 ?x70 ?x70 ?x71 ?x72 ?x72) (* 9 ?x69 ?x70 ?x71 ?x72 ?x72))))
 (let ((?x96 (- (- ?x92 (* 4 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* 9 ?x69 ?x69 ?x69 ?x70 ?x71 ?x72))))
 (let ((?x105 (- (+ ?x96 (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x72)) (* 4 ?x70 ?x70 ?x71 ?x72 ?x72))))
 (let ((?x107 (- (- ?x105 (* 5 ?x69 ?x70 ?x70 ?x71 ?x72)) (* 9 ?x70 ?x70 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x109 (- (- ?x107 (* 9 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x72)) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x115 (+ (- ?x109 (* 5 ?x69 ?x69 ?x70 ?x70 ?x71)) (* 4 ?x69 ?x70 ?x71 ?x72) ?x112 ?x113 ?x114)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- (- ?x115 ?x116) ?x117) 0))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x3182 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x341 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x2670 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3470 (* (- 4) ?x2670)))
 (let ((?x1653 (* ?x344 ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2119 (* (- 9) ?x1653)))
 (let ((?x1574 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1576 (* 18 ?x1574)))
 (let ((?x1556 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1558 (* 5 ?x1556)))
 (let ((?x1521 (* ?x344 ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1538 (* 9 ?x1521)))
 (let ((?x2994 (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1293 (* (- 1) ?x2994)))
 (let ((?x2978 (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2982 (* (- 9) ?x2978)))
 (let ((?x1698 (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70)))
 (let ((?x1705 (* (- 9) ?x1698)))
 (let ((?x3452 (* ?x344 ?x341 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x3428 (* ?x344 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1360 (* (- 9) ?x3428)))
 (let ((?x3394 (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3410 (* (- 4) ?x3394)))
 (let ((?x3368 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)))
 (let ((?x3369 (* 18 ?x3368)))
 (let ((?x3359 (* ?x344 ?x344 ?x344 ?x341 ?x70 ?x70 ?x69)))
 (let ((?x3360 (* 9 ?x3359)))
 (let ((?x3350 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70)))
 (let ((?x3351 (* 5 ?x3350)))
 (let ((?x3341 (* ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x3342 (* 18 ?x3341)))
 (let ((?x3332 (* ?x344 ?x341 ?x341 ?x341 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x3333 (* 9 ?x3332)))
 (let ((?x3301 (* ?x344 ?x344 ?x341 ?x70 ?x69 ?x69)))
 (let ((?x3315 (* (- 9) ?x3301)))
 (let ((?x3277 (* ?x344 ?x344 ?x344 ?x341 ?x341 ?x341 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3287 (* (- 1) ?x3277)))
 (let ((?x3258 (* ?x341 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2609 (* ?x341 ?x341 ?x341 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x3239 (* 5 ?x2609)))
 (let ((?x3216 (* ?x344 ?x344 ?x341 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x3223 (* (- 1) ?x3216)))
 (let ((?x3476 (+ (* (- 9) (* ?x344 ?x341 ?x70 ?x69 ?x69)) (* (- 18) (* ?x341 ?x70 ?x69 ?x69 ?x69)) ?x3223 ?x3239 (* 4 (* ?x341 ?x70 ?x69 ?x69)) ?x3258 ?x3287 ?x3315 ?x3333 ?x3342 ?x3351 ?x3360 ?x3369 (* 9 (* ?x344 ?x344 ?x341 ?x70 ?x69)) ?x3410 ?x1360 ?x3452 (* (- 4) (* ?x344 ?x344 ?x341 ?x70 ?x70)) (* (- 5) (* ?x344 ?x341 ?x70 ?x70 ?x69)) ?x1705 ?x2982 ?x1293 (* (- 5) (* ?x341 ?x70 ?x70 ?x69 ?x69)) (* 4 (* ?x344 ?x341 ?x70 ?x69)) ?x1538 ?x1558 ?x1576 ?x2119 ?x3470)))
 (let (($x3170 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x3119 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x3066 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x157 (= (+ m (* (- 6) n)) 6)))
 (let (($x3189 (and $x157 (= ?x3066 (- 4)) $x3119 $x3170 (not (= ?x3476 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x117 (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x116 (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x114 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x113 (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x112 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x76 (- (* (- 9) ?x69 ?x69 ?x70 ?x71 ?x72) (* 18 ?x69 ?x69 ?x69 ?x70 ?x71))))
 (let ((?x81 (+ (- ?x76 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x72 ?x72)) (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* 4 ?x69 ?x69 ?x70 ?x71) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x92 (+ (- (- ?x81 ?x82) (* 9 ?x69 ?x69 ?x70 ?x71 ?x72 ?x72)) (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x72) (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 5 ?x70 ?x70 ?x70 ?x71 ?x72 ?x72) (* 9 ?x69 ?x70 ?x70 ?x71 ?x72 ?x72 ?x72) (* 18 ?x69 ?x70 ?x70 ?x71 ?x72 ?x72) (* 9 ?x69 ?x70 ?x71 ?x72 ?x72))))
 (let ((?x96 (- (- ?x92 (* 4 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)) (* 9 ?x69 ?x69 ?x69 ?x70 ?x71 ?x72))))
 (let ((?x105 (- (+ ?x96 (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x72)) (* 4 ?x70 ?x70 ?x71 ?x72 ?x72))))
 (let ((?x107 (- (- ?x105 (* 5 ?x69 ?x70 ?x70 ?x71 ?x72)) (* 9 ?x70 ?x70 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x109 (- (- ?x107 (* 9 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x72)) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x115 (+ (- ?x109 (* 5 ?x69 ?x69 ?x70 ?x70 ?x71)) (* 4 ?x69 ?x70 ?x71 ?x72) ?x112 ?x113 ?x114)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x123 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- (- ?x115 ?x116) ?x117) 0))))))
 (rewrite (= $x123 $x3189)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x125 (asserted $x124)))
 (let ((@x3456 (mp (mp @x125 (quant-intro (proof-bind ?x3182) (= $x124 $x3176)) $x3176) (rewrite (= $x3176 $x3176)) $x3176)))
 (let ((@x1691 (mp (mp @x3456 (quant-intro (proof-bind ?x2662) (= $x3176 $x2652)) $x2652) (quant-intro (proof-bind ?x2435) (= $x2652 $x2432)) $x2432)))
 (let ((@x3897 (mp (mp~ @x1691 (sk (~ $x2432 $x1235)) $x1235) (rewrite (= $x1235 $x1039)) $x1039)))
 (let ((@x1218 (and-elim @x3897 $x1048)))
 (let ((@x1370 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1048) $x1188)) @x1218 $x1188)))
 (let (($x1224 (>= ?x884 (- 1))))
 (let ((@x2948 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1048) $x1224)) @x1218 $x1224)))
 (let (($x150 (<= ?x647 6)))
 (let ((@x3889 (and-elim @x3897 $x3030)))
 (let ((@x1120 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3030) $x150)) @x3889 $x150)))
 (let (($x896 (>= ?x647 6)))
 (let ((@x4220 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3030) $x896)) @x3889 $x896)))
 (let (($x1255 (<= ?x874 (- 4))))
 (let ((@x1047 (and-elim @x3897 $x1043)))
 (let ((@x4219 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1043) $x1255)) @x1047 $x1255)))
 (let (($x3254 (>= ?x874 (- 4))))
 (let ((@x603 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1043) $x3254)) @x1047 $x3254)))
 (let (($x722 (<= ?x1046 (- 1))))
 (let ((@x842 (and-elim @x3897 $x1254)))
 (let ((@x3307 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1254) $x722)) @x842 $x722)))
 (let (($x1286 (>= ?x1046 (- 1))))
 (let ((@x1153 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1254) $x1286)) @x842 $x1286)))
 (let (($x1121 (not (<= ?x4079 0))))
 (let (($x1133 (>= ?x4079 0)))
 (let ((@x3455 ((_ th-lemma arith) (hypothesis (not $x1133)) @x2948 @x1370 @x4220 @x1120 @x2948 @x1370 @x1153 @x3307 @x2948 @x1370 @x1153 @x3307 @x2948 @x1370 @x1153 @x3307 @x603 @x4219 @x4220 @x1120 @x4220 @x1120 @x2948 @x1370 false)))
 (let ((@x1284 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4231 $x1121 (not $x1133))) (and-elim @x3897 $x3901) (or $x1121 (not $x1133)))))
 ((_ th-lemma arith) (unit-resolution @x1284 (lemma @x3455 $x1133) $x1121) @x2948 @x1370 @x4220 @x1120 @x2948 @x1370 @x1153 @x3307 @x2948 @x1370 @x1153 @x3307 @x2948 @x1370 @x1153 @x3307 @x603 @x4219 @x4220 @x1120 @x4220 @x1120 @x2948 @x1370 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        26
 :arith-assert-upper        94
 :arith-branch-var          2
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           13
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             711
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              12
 :arith-row-summations      18
 :arith-tableau-max-columns 160
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 86
 :del-clause                16
 :final-checks              8
 :max-memory                4.44
 :memory                    3.65
 :mk-bool-var               106
 :mk-clause                 16
 :num-allocs                3484554
 :num-checks                1
 :propagations              10
 :rlimit-count              41950
 :time                      0.03
 :total-time                0.04)
