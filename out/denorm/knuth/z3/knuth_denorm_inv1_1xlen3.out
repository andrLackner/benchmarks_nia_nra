unsat
((set-logic NIA)
(declare-fun q!3 () Int)
(declare-fun d!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x923 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* d!1 x!0)) (* (- 4) (* r00 d00)) (* 2 (* d!1 q!3)) (* (- 8) r!2) (* 4 (* d!1 r!2)) (* (- 1) (* d!1 d!1 q!3)))))
 (let (($x462 (>= ?x923 0)))
 (let (($x343 (= ?x923 0)))
 (let ((?x1697 (* d!1 d!1 q!3)))
 (let ((?x504 (* 8 r!2)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x381 (+ ?x164 ?x212 ?x196 ?x262 (* 4 (* d!1 x!0)) ?x300 (* (- 2) (* d!1 q!3)) ?x504 (* (- 4) (* d!1 r!2)) ?x1697)))
 (let ((?x1521 (* d!1 r!2)))
 (let ((?x452 (* 16 ?x1521)))
 (let ((?x208 (* 2 (* q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1192 (* 2 (* q!3 q!3 r!2))))
 (let ((?x1379 (* d!1 q!3 q!3 r!2)))
 (let ((?x1197 (* d!1 q!3 q!3 r!2 r!2)))
 (let ((?x1582 (* (- 1) (* x!0 q!3 q!3 r!2 r!2))))
 (let ((?x980 (* x!0 r!2 r!2)))
 (let ((?x1220 (* (- 16) ?x980)))
 (let ((?x1621 (* 32 r!2)))
 (let ((?x821 (* q!3 q!3 r!2 r!2)))
 (let ((?x677 (* 10 ?x821)))
 (let ((?x750 (* q!3 q!3 q!3 r!2 r!2)))
 (let ((?x721 (* q!3 r!2 r!2)))
 (let ((?x1494 (* 32 ?x721)))
 (let ((?x663 (* q!3 r!2 r!2 r!2)))
 (let ((?x924 (* 16 ?x663)))
 (let ((?x553 (* r!2 r!2 r!2)))
 (let ((?x627 (* 32 ?x553)))
 (let ((?x910 (* (- 2) q!3)))
 (let ((?x502 (* q!3 r!2)))
 (let ((?x958 (* 16 ?x502)))
 (let ((?x457 (* d!1 q!3 r!2 r!2)))
 (let ((?x162 (* 8 ?x457)))
 (let ((?x336 (* d!1 q!3)))
 (let ((?x639 (* (- 1) ?x336)))
 (let ((?x256 (* r!2 r!2)))
 (let ((?x1526 (* 32 ?x256)))
 (let ((?x1116 (* (- 4) d!1)))
 (let ((?x366 (+ (- 8) ?x1116 ?x1526 ?x639 ?x162 ?x958 ?x910 ?x627 (* 8 (* d!1 q!3 r!2)) (* (- 8) (* x!0 q!3 r!2 r!2)) ?x924 ?x1494 ?x750 ?x677 ?x1621 ?x1220 ?x1582 ?x1197 (* 16 (* d!1 r!2 r!2)) ?x1379 ?x1192 ?x208 ?x452)))
 (let ((?x1264 (* ?x366 ?x381)))
 (let (($x643 (= ?x1264 0)))
 (let (($x757 (not $x643)))
 (let ((?x368 (* 128 r!2)))
 (let ((?x1098 (* (- 20) ?x821)))
 (let ((?x793 (* 128 ?x721)))
 (let ((?x1183 (* (- 32) ?x663)))
 (let ((?x1663 (* 128 ?x553)))
 (let ((?x570 (* (- 32) ?x502)))
 (let ((?x917 (* (- 256) ?x256)))
 (let ((?x1228 (* 8 d!1)))
 (let ((?x665 (+ 16 ?x1228 ?x917 ?x639 (* 32 ?x457) ?x570 ?x910 ?x1663 (* (- 16) (* d!1 q!3 r!2)) (* 16 (* x!0 q!3 r!2 r!2)) ?x1183 ?x793 ?x750 ?x1098 ?x368 (* (- 64) ?x980) ?x1582 (* (- 2) ?x1197) (* (- 128) (* d!1 r!2 r!2)) ?x1379 ?x1192 ?x208 (* 64 ?x1521))))
 (let ((?x1363 (* ?x665 ?x381)))
 (let (($x978 (= ?x1363 0)))
 (let ((?x634 (* (- 10) ?x821)))
 (let ((?x1533 (* (- 16) ?x663)))
 (let ((?x419 (* (- 16) ?x502)))
 (let ((?x221 (* (- 32) ?x256)))
 (let ((?x749 (* 4 d!1)))
 (let ((?x371 (+ 8 ?x749 ?x221 ?x639 ?x162 ?x419 ?x910 ?x627 (* (- 8) (* d!1 q!3 r!2)) (* 8 (* x!0 q!3 r!2 r!2)) ?x1533 ?x1494 ?x750 ?x634 ?x1621 ?x1220 ?x1582 (* (- 1) ?x1197) (* (- 16) (* d!1 r!2 r!2)) ?x1379 ?x1192 ?x208 ?x452)))
 (let ((?x669 (* ?x371 ?x381)))
 (let (($x1198 (= ?x669 0)))
 (let ((?x338 (* (+ ?x639 ?x910 ?x750 ?x1582 ?x1379 ?x1192 ?x208) ?x381)))
 (let (($x1329 (= ?x338 0)))
 (let (($x190 (not $x1329)))
 (let (($x473 (or $x190 (not $x1198) (not $x978) $x757)))
 (let (($x369 (and $x343 $x473)))
 (let ((?x209 (+ ?x504 ?x164 ?x212 ?x196 ?x262 ?x300 (* 4 (* x!0 d!1)) (* (- 2) (* q!3 d!1)) (* q!3 d!1 d!1) (* (- 4) (* r!2 d!1)))))
 (let ((?x1141 (* q!3 q!3 r!2 d!1)))
 (let ((?x1583 (* r!2 d!1)))
 (let ((?x535 (* 16 ?x1583)))
 (let ((?x612 (* q!3 d!1)))
 (let ((?x554 (* (- 1) ?x612)))
 (let ((?x1022 (* q!3 r!2 r!2 d!1)))
 (let ((?x1496 (* 8 ?x1022)))
 (let ((?x1288 (* r!2 r!2 x!0)))
 (let ((?x1290 (* (- 16) ?x1288)))
 (let ((?x378 (* (- 1) (* q!3 q!3 r!2 r!2 x!0))))
 (let ((?x618 (+ 8 ?x910 ?x1621 (* 8 (* q!3 r!2 r!2 x!0)) ?x378 ?x419 ?x221 (* (- 16) (* r!2 r!2 d!1)) ?x1290 ?x1192 ?x1496 (* (- 1) (* q!3 q!3 r!2 r!2 d!1)) ?x208 ?x749 ?x1533 ?x554 ?x535 (* (- 8) (* q!3 r!2 d!1)) ?x1141 ?x1494 ?x634 ?x750 ?x627)))
 (let ((?x1074 (+ 16 ?x910 ?x368 (* 16 (* q!3 r!2 r!2 x!0)) ?x378 ?x570 ?x917 (* (- 128) (* r!2 r!2 d!1)) (* (- 64) ?x1288) ?x1192 (* 32 ?x1022) (* (- 2) (* q!3 q!3 r!2 r!2 d!1)) ?x208 ?x1228 ?x1183 ?x554 (* 64 ?x1583) (* (- 16) (* q!3 r!2 d!1)) ?x1141 ?x793 ?x1098 ?x750 ?x1663)))
 (let ((?x1497 (* q!3 q!3 r!2 r!2 d!1)))
 (let ((?x550 (+ (- 8) ?x910 ?x1621 (* (- 8) (* q!3 r!2 r!2 x!0)) ?x378 ?x958 ?x1526 (* 16 (* r!2 r!2 d!1)) ?x1290 ?x1192 ?x1496 ?x1497 ?x208 ?x1116 ?x924 ?x554 ?x535 (* 8 (* q!3 r!2 d!1)) ?x1141 ?x1494 ?x677 ?x750 ?x627)))
 (let (($x995 (or (not (= (* ?x550 ?x209) 0)) (not (= (* ?x1074 ?x209) 0)) (not (= (* (+ ?x910 ?x378 ?x1192 ?x208 ?x554 ?x1141 ?x750) ?x209) 0)) (not (= (* ?x618 ?x209) 0)))))
 (let (($x528 (and (= ?x209 0) $x995)))
 (let (($x586 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1569 (* r d)))
 (let ((?x1606 (* (- 4) ?x1569)))
 (let ((?x1566 (* q d d)))
 (let ((?x1555 (* q d)))
 (let ((?x1568 (* (- 2) ?x1555)))
 (let ((?x1739 (* 4 (* x d))))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x1773 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1739 ?x1568 ?x1566 ?x1606)))
 (let ((?x1776 (* r r r)))
 (let ((?x1777 (* 32 ?x1776)))
 (let ((?x1753 (* q q q r r)))
 (let ((?x1751 (* q q r r)))
 (let ((?x907 (* (- 10) ?x1751)))
 (let ((?x1749 (* q r r)))
 (let ((?x513 (* 32 ?x1749)))
 (let ((?x1733 (* q q r d)))
 (let ((?x1730 (* q r d)))
 (let ((?x897 (* (- 8) ?x1730)))
 (let ((?x1725 (* 16 ?x1569)))
 (let ((?x1723 (* (- 1) ?x1555)))
 (let ((?x1388 (* q r r r)))
 (let ((?x1416 (* (- 16) ?x1388)))
 (let ((?x898 (* 4 d)))
 (let ((?x720 (* 2 (* q q r r r))))
 (let ((?x845 (* q q r r d)))
 (let ((?x1030 (* (- 1) ?x845)))
 (let ((?x823 (* q r r d)))
 (let ((?x828 (* 8 ?x823)))
 (let ((?x753 (* q q r)))
 (let ((?x1729 (* 2 ?x753)))
 (let ((?x723 (* r r x)))
 (let ((?x814 (* (- 16) ?x723)))
 (let ((?x722 (* r r d)))
 (let ((?x1034 (* (- 16) ?x722)))
 (let ((?x377 (* r r)))
 (let ((?x906 (* (- 32) ?x377)))
 (let ((?x273 (* q r)))
 (let ((?x1397 (* (- 16) ?x273)))
 (let ((?x236 (* (- 1) (* q q r r x))))
 (let ((?x181 (* q r r x)))
 (let ((?x1429 (* 8 ?x181)))
 (let ((?x1527 (* 32 r)))
 (let ((?x1721 (* (- 2) q)))
 (let ((?x654 (+ 8 ?x1721 ?x1527 ?x1429 ?x236 ?x1397 ?x906 ?x1034 ?x814 ?x1729 ?x828 ?x1030 ?x720 ?x898 ?x1416 ?x1723 ?x1725 ?x897 ?x1733 ?x513 ?x907 ?x1753 ?x1777)))
 (let ((?x1415 (* 128 ?x1776)))
 (let ((?x1393 (* (- 20) ?x1751)))
 (let ((?x1396 (* (- 16) ?x1730)))
 (let ((?x1398 (* 64 ?x1569)))
 (let ((?x432 (* 8 d)))
 (let ((?x1427 (* (- 2) ?x845)))
 (let ((?x1428 (* (- 64) ?x723)))
 (let ((?x1417 (* (- 128) ?x722)))
 (let ((?x1395 (* (- 256) ?x377)))
 (let ((?x1402 (* 128 r)))
 (let ((?x1646 (+ 16 ?x1721 ?x1402 (* 16 ?x181) ?x236 (* (- 32) ?x273) ?x1395 ?x1417 ?x1428 ?x1729 (* 32 ?x823) ?x1427 ?x720 ?x432 (* (- 32) ?x1388) ?x1723 ?x1398 ?x1396 ?x1733 (* 128 ?x1749) ?x1393 ?x1753 ?x1415)))
 (let ((?x1752 (* 10 ?x1751)))
 (let ((?x1731 (* 8 ?x1730)))
 (let ((?x1722 (* (- 4) d)))
 (let ((?x815 (* 16 ?x722)))
 (let ((?x1734 (* 32 ?x377)))
 (let ((?x644 (* 16 ?x273)))
 (let ((?x512 (+ (- 8) ?x1721 ?x1527 (* (- 8) ?x181) ?x236 ?x644 ?x1734 ?x815 ?x814 ?x1729 ?x828 ?x845 ?x720 ?x1722 (* 16 ?x1388) ?x1723 ?x1725 ?x1731 ?x1733 ?x513 ?x1752 ?x1753 ?x1777)))
 (let (($x1581 (or (not (= (* ?x512 ?x1773) 0)) (not (= (* ?x1646 ?x1773) 0)) (not (= (* (+ ?x1721 ?x236 ?x1729 ?x720 ?x1723 ?x1733 ?x1753) ?x1773) 0)) (not (= (* ?x654 ?x1773) 0)))))
 (let (($x216 (= ?x1773 0)))
 (and $x216 $x1581)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1150 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1569 (* r d)))
 (let ((?x1606 (* (- 4) ?x1569)))
 (let ((?x1566 (* q d d)))
 (let ((?x1555 (* q d)))
 (let ((?x1568 (* (- 2) ?x1555)))
 (let ((?x1739 (* 4 (* x d))))
 (let ((?x432 (* 8 d)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x674 (+ ?x193 ?x164 ?x212 ?x196 (* (- 4) (* d 2)) ?x262 ?x300 ?x432 ?x1739 ?x1568 ?x1566 ?x1606)))
 (let ((?x1776 (* r r r)))
 (let ((?x1777 (* 32 ?x1776)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x1758 (* q ?x161 r r)))
 (let ((?x1036 (* (- 4) ?x1758)))
 (let ((?x130 (* 2 r)))
 (let ((?x1756 (* q ?x130 r r)))
 (let ((?x1037 (* (- 4) ?x1756)))
 (let ((?x1753 (* q q q r r)))
 (let ((?x1751 (* q q r r)))
 (let ((?x907 (* (- 10) ?x1751)))
 (let ((?x1749 (* q r r)))
 (let ((?x1750 (* 24 ?x1749)))
 (let ((?x1733 (* q q r d)))
 (let ((?x1730 (* q r d)))
 (let ((?x897 (* (- 8) ?x1730)))
 (let ((?x1725 (* 16 ?x1569)))
 (let ((?x1723 (* (- 1) ?x1555)))
 (let ((?x1388 (* q r r r)))
 (let ((?x1035 (* (- 8) ?x1388)))
 (let ((?x898 (* 4 d)))
 (let ((?x1115 (* (- 4) (* q (* (- 1) d) r r))))
 (let ((?x1058 (* (- 4) (* q (- 2) r r))))
 (let ((?x720 (* 2 (* q q r r r))))
 (let ((?x845 (* q q r r d)))
 (let ((?x1030 (* (- 1) ?x845)))
 (let ((?x823 (* q r r d)))
 (let ((?x1033 (* 4 ?x823)))
 (let ((?x753 (* q q r)))
 (let ((?x1729 (* 2 ?x753)))
 (let ((?x723 (* r r x)))
 (let ((?x814 (* (- 16) ?x723)))
 (let ((?x722 (* r r d)))
 (let ((?x1034 (* (- 16) ?x722)))
 (let ((?x377 (* r r)))
 (let ((?x906 (* (- 32) ?x377)))
 (let ((?x273 (* q r)))
 (let ((?x580 (* (- 8) ?x273)))
 (let ((?x236 (* (- 1) (* q q r r x))))
 (let ((?x181 (* q r r x)))
 (let ((?x1029 (* 4 ?x181)))
 (let ((?x1527 (* 32 r)))
 (let ((?x1721 (* (- 2) q)))
 (let ((?x1099 (+ 8 ?x1721 ?x1527 ?x1029 ?x236 ?x580 ?x906 ?x1034 ?x814 ?x1729 ?x1033 ?x1030 ?x720 ?x1058 ?x1115 (* (- 4) (* q 2 r)) ?x898 ?x1035 ?x1723 ?x1725 ?x897 ?x1733 ?x1750 ?x907 ?x1753 ?x1037 ?x1036 ?x1777)))
 (let ((?x1406 (* 16 d)))
 (let ((?x341 (+ ?x193 ?x164 ?x212 ?x196 (* (- 8) (* d 2)) ?x262 ?x300 ?x1406 ?x1739 ?x1568 ?x1566 ?x1606)))
 (let ((?x1415 (* 128 ?x1776)))
 (let ((?x1414 (* (- 8) ?x1758)))
 (let ((?x1392 (* (- 8) ?x1756)))
 (let ((?x1393 (* (- 20) ?x1751)))
 (let ((?x1394 (* 96 ?x1749)))
 (let ((?x1396 (* (- 16) ?x1730)))
 (let ((?x1398 (* 64 ?x1569)))
 (let ((?x1465 (* (- 8) (* q (* (- 2) d) r r))))
 (let ((?x1435 (* (- 8) (* q (- 4) r r))))
 (let ((?x1416 (* (- 16) ?x1388)))
 (let ((?x1427 (* (- 2) ?x845)))
 (let ((?x1426 (* 16 ?x823)))
 (let ((?x1428 (* (- 64) ?x723)))
 (let ((?x1417 (* (- 128) ?x722)))
 (let ((?x1395 (* (- 256) ?x377)))
 (let ((?x1397 (* (- 16) ?x273)))
 (let ((?x1429 (* 8 ?x181)))
 (let ((?x1402 (* 128 r)))
 (let ((?x358 (+ 16 ?x1721 ?x1402 ?x1429 ?x236 ?x1397 ?x1395 ?x1417 ?x1428 ?x1729 ?x1426 ?x1427 ?x720 (* (- 8) (* q 2 r)) ?x432 ?x1416 ?x1435 ?x1465 ?x1723 ?x1398 ?x1396 ?x1733 ?x1394 ?x1393 ?x1753 ?x1392 ?x1414 ?x1415)))
 (let ((?x1719 (* 2 (* d 4))))
 (let ((?x1609 (* (- 8) d)))
 (let ((?x1759 (* 4 ?x1758)))
 (let ((?x1757 (* 4 ?x1756)))
 (let ((?x1752 (* 10 ?x1751)))
 (let ((?x1736 (* 4 (* q 2 r r))))
 (let ((?x1731 (* 8 ?x1730)))
 (let ((?x1727 (* 2 (* q 4 r))))
 (let ((?x999 (* 8 ?x1388)))
 (let ((?x1722 (* (- 4) d)))
 (let ((?x828 (* 8 ?x823)))
 (let ((?x815 (* 16 ?x722)))
 (let ((?x1734 (* 32 ?x377)))
 (let ((?x1728 (* 8 ?x273)))
 (let ((?x230 (* (- 4) ?x181)))
 (let ((?x1125 (+ (- 8) ?x1721 ?x1527 ?x230 ?x236 ?x1728 ?x1734 ?x815 ?x814 ?x1729 ?x828 ?x845 ?x720 ?x1722 ?x999 ?x1723 ?x1725 ?x1727 ?x1731 ?x1733 ?x1736 ?x1750 ?x1752 ?x1753 ?x1757 ?x1759 ?x1777)))
 (let ((?x400 (* ?x1125 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1609 ?x1739 ?x1568 ?x1566 ?x1606 ?x1719))))
 (let ((?x1773 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1739 ?x1568 ?x1566 ?x1606)))
 (let ((?x1542 (* (+ ?x1721 ?x236 (* 2 (* r q q)) ?x720 ?x1723 ?x1733 ?x1753) ?x1773)))
 (let (($x330 (or (not (= ?x1542 0)) (not (= ?x400 0)) (not (= (* ?x358 ?x341) 0)) (not (= (* ?x1099 ?x674) 0)))))
 (let (($x216 (= ?x1773 0)))
 (and $x216 $x330))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x552 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1569 (* r d)))
 (let ((?x1606 (* (- 4) ?x1569)))
 (let ((?x1566 (* q d d)))
 (let ((?x1555 (* q d)))
 (let ((?x1568 (* (- 2) ?x1555)))
 (let ((?x1739 (* 4 (* x d))))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x1773 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1739 ?x1568 ?x1566 ?x1606)))
 (let ((?x1776 (* r r r)))
 (let ((?x1777 (* 32 ?x1776)))
 (let ((?x1753 (* q q q r r)))
 (let ((?x1751 (* q q r r)))
 (let ((?x907 (* (- 10) ?x1751)))
 (let ((?x1749 (* q r r)))
 (let ((?x513 (* 32 ?x1749)))
 (let ((?x1733 (* q q r d)))
 (let ((?x1730 (* q r d)))
 (let ((?x897 (* (- 8) ?x1730)))
 (let ((?x1725 (* 16 ?x1569)))
 (let ((?x1723 (* (- 1) ?x1555)))
 (let ((?x1388 (* q r r r)))
 (let ((?x1416 (* (- 16) ?x1388)))
 (let ((?x898 (* 4 d)))
 (let ((?x720 (* 2 (* q q r r r))))
 (let ((?x845 (* q q r r d)))
 (let ((?x1030 (* (- 1) ?x845)))
 (let ((?x823 (* q r r d)))
 (let ((?x828 (* 8 ?x823)))
 (let ((?x753 (* q q r)))
 (let ((?x1729 (* 2 ?x753)))
 (let ((?x723 (* r r x)))
 (let ((?x814 (* (- 16) ?x723)))
 (let ((?x722 (* r r d)))
 (let ((?x1034 (* (- 16) ?x722)))
 (let ((?x377 (* r r)))
 (let ((?x906 (* (- 32) ?x377)))
 (let ((?x273 (* q r)))
 (let ((?x1397 (* (- 16) ?x273)))
 (let ((?x236 (* (- 1) (* q q r r x))))
 (let ((?x181 (* q r r x)))
 (let ((?x1429 (* 8 ?x181)))
 (let ((?x1527 (* 32 r)))
 (let ((?x1721 (* (- 2) q)))
 (let ((?x654 (+ 8 ?x1721 ?x1527 ?x1429 ?x236 ?x1397 ?x906 ?x1034 ?x814 ?x1729 ?x828 ?x1030 ?x720 ?x898 ?x1416 ?x1723 ?x1725 ?x897 ?x1733 ?x513 ?x907 ?x1753 ?x1777)))
 (let ((?x1415 (* 128 ?x1776)))
 (let ((?x1393 (* (- 20) ?x1751)))
 (let ((?x1396 (* (- 16) ?x1730)))
 (let ((?x1398 (* 64 ?x1569)))
 (let ((?x432 (* 8 d)))
 (let ((?x1427 (* (- 2) ?x845)))
 (let ((?x1428 (* (- 64) ?x723)))
 (let ((?x1417 (* (- 128) ?x722)))
 (let ((?x1395 (* (- 256) ?x377)))
 (let ((?x1402 (* 128 r)))
 (let ((?x1646 (+ 16 ?x1721 ?x1402 (* 16 ?x181) ?x236 (* (- 32) ?x273) ?x1395 ?x1417 ?x1428 ?x1729 (* 32 ?x823) ?x1427 ?x720 ?x432 (* (- 32) ?x1388) ?x1723 ?x1398 ?x1396 ?x1733 (* 128 ?x1749) ?x1393 ?x1753 ?x1415)))
 (let ((?x1752 (* 10 ?x1751)))
 (let ((?x1731 (* 8 ?x1730)))
 (let ((?x1722 (* (- 4) d)))
 (let ((?x815 (* 16 ?x722)))
 (let ((?x1734 (* 32 ?x377)))
 (let ((?x644 (* 16 ?x273)))
 (let ((?x512 (+ (- 8) ?x1721 ?x1527 (* (- 8) ?x181) ?x236 ?x644 ?x1734 ?x815 ?x814 ?x1729 ?x828 ?x845 ?x720 ?x1722 (* 16 ?x1388) ?x1723 ?x1725 ?x1731 ?x1733 ?x513 ?x1752 ?x1753 ?x1777)))
 (let (($x1581 (or (not (= (* ?x512 ?x1773) 0)) (not (= (* ?x1646 ?x1773) 0)) (not (= (* (+ ?x1721 ?x236 ?x1729 ?x720 ?x1723 ?x1733 ?x1753) ?x1773) 0)) (not (= (* ?x654 ?x1773) 0)))))
 (let (($x216 (= ?x1773 0)))
 (let (($x571 (and $x216 $x1581)))
 (let ((?x674 (+ ?x193 ?x164 ?x212 ?x196 (* (- 4) (* d 2)) ?x262 ?x300 ?x432 ?x1739 ?x1568 ?x1566 ?x1606)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x1758 (* q ?x161 r r)))
 (let ((?x1036 (* (- 4) ?x1758)))
 (let ((?x130 (* 2 r)))
 (let ((?x1756 (* q ?x130 r r)))
 (let ((?x1037 (* (- 4) ?x1756)))
 (let ((?x1750 (* 24 ?x1749)))
 (let ((?x1035 (* (- 8) ?x1388)))
 (let ((?x1115 (* (- 4) (* q (* (- 1) d) r r))))
 (let ((?x1058 (* (- 4) (* q (- 2) r r))))
 (let ((?x1033 (* 4 ?x823)))
 (let ((?x580 (* (- 8) ?x273)))
 (let ((?x1029 (* 4 ?x181)))
 (let ((?x1099 (+ 8 ?x1721 ?x1527 ?x1029 ?x236 ?x580 ?x906 ?x1034 ?x814 ?x1729 ?x1033 ?x1030 ?x720 ?x1058 ?x1115 (* (- 4) (* q 2 r)) ?x898 ?x1035 ?x1723 ?x1725 ?x897 ?x1733 ?x1750 ?x907 ?x1753 ?x1037 ?x1036 ?x1777)))
 (let ((?x1406 (* 16 d)))
 (let ((?x341 (+ ?x193 ?x164 ?x212 ?x196 (* (- 8) (* d 2)) ?x262 ?x300 ?x1406 ?x1739 ?x1568 ?x1566 ?x1606)))
 (let ((?x1414 (* (- 8) ?x1758)))
 (let ((?x1392 (* (- 8) ?x1756)))
 (let ((?x1394 (* 96 ?x1749)))
 (let ((?x1465 (* (- 8) (* q (* (- 2) d) r r))))
 (let ((?x1435 (* (- 8) (* q (- 4) r r))))
 (let ((?x1426 (* 16 ?x823)))
 (let ((?x358 (+ 16 ?x1721 ?x1402 ?x1429 ?x236 ?x1397 ?x1395 ?x1417 ?x1428 ?x1729 ?x1426 ?x1427 ?x720 (* (- 8) (* q 2 r)) ?x432 ?x1416 ?x1435 ?x1465 ?x1723 ?x1398 ?x1396 ?x1733 ?x1394 ?x1393 ?x1753 ?x1392 ?x1414 ?x1415)))
 (let ((?x1719 (* 2 (* d 4))))
 (let ((?x1609 (* (- 8) d)))
 (let ((?x1759 (* 4 ?x1758)))
 (let ((?x1757 (* 4 ?x1756)))
 (let ((?x1736 (* 4 (* q 2 r r))))
 (let ((?x1727 (* 2 (* q 4 r))))
 (let ((?x999 (* 8 ?x1388)))
 (let ((?x1728 (* 8 ?x273)))
 (let ((?x230 (* (- 4) ?x181)))
 (let ((?x1125 (+ (- 8) ?x1721 ?x1527 ?x230 ?x236 ?x1728 ?x1734 ?x815 ?x814 ?x1729 ?x828 ?x845 ?x720 ?x1722 ?x999 ?x1723 ?x1725 ?x1727 ?x1731 ?x1733 ?x1736 ?x1750 ?x1752 ?x1753 ?x1757 ?x1759 ?x1777)))
 (let ((?x400 (* ?x1125 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1609 ?x1739 ?x1568 ?x1566 ?x1606 ?x1719))))
 (let ((?x1542 (* (+ ?x1721 ?x236 (* 2 (* r q q)) ?x720 ?x1723 ?x1733 ?x1753) ?x1773)))
 (let (($x330 (or (not (= ?x1542 0)) (not (= ?x400 0)) (not (= (* ?x358 ?x341) 0)) (not (= (* ?x1099 ?x674) 0)))))
 (let (($x1162 (and $x216 $x330)))
 (rewrite (= $x1162 $x571)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x675 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x590 (* 4 (* d00 r00))))
 (let ((?x1597 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1348 (* 4 (* (+ 2 d) r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x704 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1598 (+ ?x409 ?x704 ?x30 ?x164 ?x1348 ?x196 ?x212 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x262 ?x1597 ?x590)))
 (let ((?x1594 (+ (* (+ 2 d) r q q) (* (+ (* 2 r) (* (- 1) x) q) r r q q) (* (- 1) (* (+ 2 d) q)))))
 (let (($x1603 (not (= (* ?x1594 ?x1598) 0))))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x882 (+ 2 ?x130 ?x161 q d)))
 (let ((?x1071 (+ 2 d)))
 (let ((?x432 (* 8 d)))
 (let ((?x1355 (+ 16 ?x409 ?x704 ?x30 ?x432 ?x164 ?x1348 ?x196 ?x212 (* ?x1071 ?x1071 (+ 4 q)) (* (- 2) (* ?x1071 (+ 4 q))) ?x262 (* (- 4) (* ?x1071 ?x882)) ?x590)))
 (let ((?x1083 (+ (* ?x1071 (+ 4 q) (+ 4 q) r) (* (+ 4 q) (+ 4 q) ?x882 r r) (* (- 1) (* ?x1071 (+ 4 q))))))
 (let (($x1044 (not (= (* ?x1083 ?x1355) 0))))
 (let ((?x382 (+ (- 32) ?x409 ?x704 ?x30 (* (- 16) d) ?x164 ?x1348 ?x196 ?x212 (* (+ (- 8) q) ?x1071 ?x1071) (* (- 2) (* (+ (- 8) q) ?x1071)) ?x262 (* (- 4) (* ?x1071 (+ (- 4) ?x130 ?x161 q (* (- 2) d)))) ?x590)))
 (let ((?x1436 (* (- 2) d)))
 (let ((?x1001 (+ (- 4) ?x130 ?x161 q ?x1436)))
 (let ((?x1604 (+ (- 8) q)))
 (let ((?x968 (+ (* ?x1604 ?x1604 ?x1071 r) (* ?x1604 ?x1604 ?x1001 r r) (* (- 1) (* ?x1604 ?x1071)))))
 (let (($x1026 (not (= (* ?x968 ?x382) 0))))
 (let ((?x1609 (* (- 8) d)))
 (let ((?x990 (+ (- 16) ?x409 ?x704 ?x30 ?x1609 ?x164 ?x1348 ?x196 ?x212 (* (+ (- 4) q) ?x1071 ?x1071) (* (- 2) (* (+ (- 4) q) ?x1071)) ?x262 (* (- 4) (* ?x1071 (+ (- 2) ?x130 ?x161 q (* (- 1) d)))) ?x590)))
 (let ((?x1104 (* (- 1) d)))
 (let ((?x318 (+ (- 2) ?x130 ?x161 q ?x1104)))
 (let ((?x308 (+ (- 4) q)))
 (let ((?x727 (+ (* ?x308 ?x308 ?x1071 r) (* ?x308 ?x308 ?x318 r r) (* (- 1) (* ?x308 ?x1071)))))
 (let (($x497 (not (= (* ?x727 ?x990) 0))))
 (let ((?x1739 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x1065 (+ ?x193 ?x164 ?x1739 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x590)))
 (let (($x1066 (= ?x1065 0)))
 (and $x1066 (or $x497 $x1026 $x1044 $x1603))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x333 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1569 (* r d)))
 (let ((?x1606 (* (- 4) ?x1569)))
 (let ((?x1566 (* q d d)))
 (let ((?x1555 (* q d)))
 (let ((?x1568 (* (- 2) ?x1555)))
 (let ((?x1739 (* 4 (* x d))))
 (let ((?x432 (* 8 d)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x674 (+ ?x193 ?x164 ?x212 ?x196 (* (- 4) (* d 2)) ?x262 ?x300 ?x432 ?x1739 ?x1568 ?x1566 ?x1606)))
 (let ((?x1776 (* r r r)))
 (let ((?x1777 (* 32 ?x1776)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x1758 (* q ?x161 r r)))
 (let ((?x1036 (* (- 4) ?x1758)))
 (let ((?x130 (* 2 r)))
 (let ((?x1756 (* q ?x130 r r)))
 (let ((?x1037 (* (- 4) ?x1756)))
 (let ((?x1753 (* q q q r r)))
 (let ((?x1751 (* q q r r)))
 (let ((?x907 (* (- 10) ?x1751)))
 (let ((?x1749 (* q r r)))
 (let ((?x1750 (* 24 ?x1749)))
 (let ((?x1733 (* q q r d)))
 (let ((?x1730 (* q r d)))
 (let ((?x897 (* (- 8) ?x1730)))
 (let ((?x1725 (* 16 ?x1569)))
 (let ((?x1723 (* (- 1) ?x1555)))
 (let ((?x1388 (* q r r r)))
 (let ((?x1035 (* (- 8) ?x1388)))
 (let ((?x898 (* 4 d)))
 (let ((?x1115 (* (- 4) (* q (* (- 1) d) r r))))
 (let ((?x1058 (* (- 4) (* q (- 2) r r))))
 (let ((?x720 (* 2 (* q q r r r))))
 (let ((?x845 (* q q r r d)))
 (let ((?x1030 (* (- 1) ?x845)))
 (let ((?x823 (* q r r d)))
 (let ((?x1033 (* 4 ?x823)))
 (let ((?x753 (* q q r)))
 (let ((?x1729 (* 2 ?x753)))
 (let ((?x723 (* r r x)))
 (let ((?x814 (* (- 16) ?x723)))
 (let ((?x722 (* r r d)))
 (let ((?x1034 (* (- 16) ?x722)))
 (let ((?x377 (* r r)))
 (let ((?x906 (* (- 32) ?x377)))
 (let ((?x273 (* q r)))
 (let ((?x580 (* (- 8) ?x273)))
 (let ((?x236 (* (- 1) (* q q r r x))))
 (let ((?x181 (* q r r x)))
 (let ((?x1029 (* 4 ?x181)))
 (let ((?x1527 (* 32 r)))
 (let ((?x1721 (* (- 2) q)))
 (let ((?x1099 (+ 8 ?x1721 ?x1527 ?x1029 ?x236 ?x580 ?x906 ?x1034 ?x814 ?x1729 ?x1033 ?x1030 ?x720 ?x1058 ?x1115 (* (- 4) (* q 2 r)) ?x898 ?x1035 ?x1723 ?x1725 ?x897 ?x1733 ?x1750 ?x907 ?x1753 ?x1037 ?x1036 ?x1777)))
 (let ((?x1406 (* 16 d)))
 (let ((?x341 (+ ?x193 ?x164 ?x212 ?x196 (* (- 8) (* d 2)) ?x262 ?x300 ?x1406 ?x1739 ?x1568 ?x1566 ?x1606)))
 (let ((?x1415 (* 128 ?x1776)))
 (let ((?x1414 (* (- 8) ?x1758)))
 (let ((?x1392 (* (- 8) ?x1756)))
 (let ((?x1393 (* (- 20) ?x1751)))
 (let ((?x1394 (* 96 ?x1749)))
 (let ((?x1396 (* (- 16) ?x1730)))
 (let ((?x1398 (* 64 ?x1569)))
 (let ((?x1465 (* (- 8) (* q (* (- 2) d) r r))))
 (let ((?x1435 (* (- 8) (* q (- 4) r r))))
 (let ((?x1416 (* (- 16) ?x1388)))
 (let ((?x1427 (* (- 2) ?x845)))
 (let ((?x1426 (* 16 ?x823)))
 (let ((?x1428 (* (- 64) ?x723)))
 (let ((?x1417 (* (- 128) ?x722)))
 (let ((?x1395 (* (- 256) ?x377)))
 (let ((?x1397 (* (- 16) ?x273)))
 (let ((?x1429 (* 8 ?x181)))
 (let ((?x1402 (* 128 r)))
 (let ((?x358 (+ 16 ?x1721 ?x1402 ?x1429 ?x236 ?x1397 ?x1395 ?x1417 ?x1428 ?x1729 ?x1426 ?x1427 ?x720 (* (- 8) (* q 2 r)) ?x432 ?x1416 ?x1435 ?x1465 ?x1723 ?x1398 ?x1396 ?x1733 ?x1394 ?x1393 ?x1753 ?x1392 ?x1414 ?x1415)))
 (let ((?x1719 (* 2 (* d 4))))
 (let ((?x1609 (* (- 8) d)))
 (let ((?x1759 (* 4 ?x1758)))
 (let ((?x1757 (* 4 ?x1756)))
 (let ((?x1752 (* 10 ?x1751)))
 (let ((?x1736 (* 4 (* q 2 r r))))
 (let ((?x1731 (* 8 ?x1730)))
 (let ((?x1727 (* 2 (* q 4 r))))
 (let ((?x999 (* 8 ?x1388)))
 (let ((?x1722 (* (- 4) d)))
 (let ((?x828 (* 8 ?x823)))
 (let ((?x815 (* 16 ?x722)))
 (let ((?x1734 (* 32 ?x377)))
 (let ((?x1728 (* 8 ?x273)))
 (let ((?x230 (* (- 4) ?x181)))
 (let ((?x1125 (+ (- 8) ?x1721 ?x1527 ?x230 ?x236 ?x1728 ?x1734 ?x815 ?x814 ?x1729 ?x828 ?x845 ?x720 ?x1722 ?x999 ?x1723 ?x1725 ?x1727 ?x1731 ?x1733 ?x1736 ?x1750 ?x1752 ?x1753 ?x1757 ?x1759 ?x1777)))
 (let ((?x400 (* ?x1125 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1609 ?x1739 ?x1568 ?x1566 ?x1606 ?x1719))))
 (let ((?x1773 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1739 ?x1568 ?x1566 ?x1606)))
 (let ((?x1542 (* (+ ?x1721 ?x236 (* 2 (* r q q)) ?x720 ?x1723 ?x1733 ?x1753) ?x1773)))
 (let (($x330 (or (not (= ?x1542 0)) (not (= ?x400 0)) (not (= (* ?x358 ?x341) 0)) (not (= (* ?x1099 ?x674) 0)))))
 (let (($x216 (= ?x1773 0)))
 (let (($x1162 (and $x216 $x330)))
 (let ((?x590 (* 4 (* d00 r00))))
 (let ((?x1348 (* 4 (* (+ 2 d) r))))
 (let ((?x30 (* 8 q)))
 (let ((?x704 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1598 (+ ?x409 ?x704 ?x30 ?x164 ?x1348 ?x196 ?x212 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x262 (* (- 4) (* (+ 2 d) (+ ?x130 ?x161 q))) ?x590)))
 (let ((?x1594 (+ (* (+ 2 d) r q q) (* (+ ?x130 ?x161 q) r r q q) (* (- 1) (* (+ 2 d) q)))))
 (let (($x1603 (not (= (* ?x1594 ?x1598) 0))))
 (let ((?x1355 (+ 16 ?x409 ?x704 ?x30 ?x432 ?x164 ?x1348 ?x196 ?x212 (* (+ 2 d) (+ 2 d) (+ 4 q)) (* (- 2) (* (+ 2 d) (+ 4 q))) ?x262 (* (- 4) (* (+ 2 d) (+ 2 ?x130 ?x161 q d))) ?x590)))
 (let ((?x882 (+ 2 ?x130 ?x161 q d)))
 (let ((?x1072 (+ 4 q)))
 (let ((?x1083 (+ (* (+ 2 d) ?x1072 ?x1072 r) (* ?x1072 ?x1072 ?x882 r r) (* (- 1) (* (+ 2 d) ?x1072)))))
 (let (($x1044 (not (= (* ?x1083 ?x1355) 0))))
 (let ((?x912 (* (- 4) (* (+ 2 d) (+ (- 4) ?x130 ?x161 q (* (- 2) d))))))
 (let ((?x382 (+ (- 32) ?x409 ?x704 ?x30 (* (- 16) d) ?x164 ?x1348 ?x196 ?x212 (* (+ (- 8) q) (+ 2 d) (+ 2 d)) (* (- 2) (* (+ (- 8) q) (+ 2 d))) ?x262 ?x912 ?x590)))
 (let ((?x1436 (* (- 2) d)))
 (let ((?x1001 (+ (- 4) ?x130 ?x161 q ?x1436)))
 (let ((?x1604 (+ (- 8) q)))
 (let ((?x968 (+ (* ?x1604 ?x1604 (+ 2 d) r) (* ?x1604 ?x1604 ?x1001 r r) (* (- 1) (* ?x1604 (+ 2 d))))))
 (let (($x1026 (not (= (* ?x968 ?x382) 0))))
 (let ((?x496 (* (- 4) (* (+ 2 d) (+ (- 2) ?x130 ?x161 q (* (- 1) d))))))
 (let ((?x990 (+ (- 16) ?x409 ?x704 ?x30 ?x1609 ?x164 ?x1348 ?x196 ?x212 (* (+ (- 4) q) (+ 2 d) (+ 2 d)) (* (- 2) (* (+ (- 4) q) (+ 2 d))) ?x262 ?x496 ?x590)))
 (let ((?x1104 (* (- 1) d)))
 (let ((?x318 (+ (- 2) ?x130 ?x161 q ?x1104)))
 (let ((?x308 (+ (- 4) q)))
 (let ((?x727 (+ (* ?x308 ?x308 (+ 2 d) r) (* ?x308 ?x308 ?x318 r r) (* (- 1) (* ?x308 (+ 2 d))))))
 (let (($x497 (not (= (* ?x727 ?x990) 0))))
 (let ((?x1065 (+ ?x193 ?x164 ?x1739 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x590)))
 (let (($x1066 (= ?x1065 0)))
 (let (($x842 (and $x1066 (or $x497 $x1026 $x1044 $x1603))))
 (rewrite (= $x842 $x1162))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1478 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x590 (* 4 (* d00 r00))))
 (let ((?x1436 (* (- 2) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x1001 (+ (- 4) ?x130 ?x161 q ?x1436)))
 (let ((?x1071 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1348 (* 4 (* ?x1071 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x704 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x382 (+ (- 32) ?x409 ?x704 ?x30 (* (- 16) d) ?x164 ?x1348 ?x196 ?x212 (* (+ (- 8) q) ?x1071 ?x1071) (* (- 2) (* (+ (- 8) q) ?x1071)) ?x262 (* (- 4) (* ?x1071 ?x1001)) ?x590)))
 (let ((?x968 (+ (* (+ (- 8) q) (+ (- 8) q) ?x1071 r) (* (+ (- 8) q) (+ (- 8) q) ?x1001 r r) (* (- 1) (* (+ (- 8) q) ?x1071)))))
 (let (($x1026 (not (= (* ?x968 ?x382) 0))))
 (let ((?x1598 (+ ?x409 ?x704 ?x30 ?x164 ?x1348 ?x196 ?x212 (* ?x1071 ?x1071 q) (* (- 2) (* ?x1071 q)) ?x262 (* (- 4) (* ?x1071 (+ ?x130 ?x161 q))) ?x590)))
 (let ((?x1594 (+ (* ?x1071 r q q) (* (+ ?x130 ?x161 q) r r q q) (* (- 1) (* ?x1071 q)))))
 (let (($x1603 (not (= (* ?x1594 ?x1598) 0))))
 (let ((?x1609 (* (- 8) d)))
 (let ((?x990 (+ (- 16) ?x409 ?x704 ?x30 ?x1609 ?x164 ?x1348 ?x196 ?x212 (* (+ (- 4) q) ?x1071 ?x1071) (* (- 2) (* (+ (- 4) q) ?x1071)) ?x262 (* (- 4) (* ?x1071 (+ (- 2) ?x130 ?x161 q (* (- 1) d)))) ?x590)))
 (let ((?x1104 (* (- 1) d)))
 (let ((?x318 (+ (- 2) ?x130 ?x161 q ?x1104)))
 (let ((?x308 (+ (- 4) q)))
 (let ((?x727 (+ (* ?x308 ?x308 ?x1071 r) (* ?x308 ?x308 ?x318 r r) (* (- 1) (* ?x308 ?x1071)))))
 (let (($x497 (not (= (* ?x727 ?x990) 0))))
 (let ((?x432 (* 8 d)))
 (let ((?x1355 (+ 16 ?x409 ?x704 ?x30 ?x432 ?x164 ?x1348 ?x196 ?x212 (* ?x1071 ?x1071 (+ 4 q)) (* (- 2) (* ?x1071 (+ 4 q))) ?x262 (* (- 4) (* ?x1071 (+ 2 ?x130 ?x161 q d))) ?x590)))
 (let ((?x882 (+ 2 ?x130 ?x161 q d)))
 (let ((?x1072 (+ 4 q)))
 (let ((?x1083 (+ (* ?x1071 ?x1072 ?x1072 r) (* ?x1072 ?x1072 ?x882 r r) (* (- 1) (* ?x1071 ?x1072)))))
 (let (($x1044 (not (= (* ?x1083 ?x1355) 0))))
 (let ((?x1739 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x1065 (+ ?x193 ?x164 ?x1739 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x590)))
 (let (($x1066 (= ?x1065 0)))
 (and $x1066 (or $x1044 $x497 $x1603 $x1026)))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x827 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x590 (* 4 (* d00 r00))))
 (let ((?x1597 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1348 (* 4 (* (+ 2 d) r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x704 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1598 (+ ?x409 ?x704 ?x30 ?x164 ?x1348 ?x196 ?x212 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x262 ?x1597 ?x590)))
 (let ((?x1594 (+ (* (+ 2 d) r q q) (* (+ (* 2 r) (* (- 1) x) q) r r q q) (* (- 1) (* (+ 2 d) q)))))
 (let (($x1603 (not (= (* ?x1594 ?x1598) 0))))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x882 (+ 2 ?x130 ?x161 q d)))
 (let ((?x1071 (+ 2 d)))
 (let ((?x432 (* 8 d)))
 (let ((?x1355 (+ 16 ?x409 ?x704 ?x30 ?x432 ?x164 ?x1348 ?x196 ?x212 (* ?x1071 ?x1071 (+ 4 q)) (* (- 2) (* ?x1071 (+ 4 q))) ?x262 (* (- 4) (* ?x1071 ?x882)) ?x590)))
 (let ((?x1083 (+ (* ?x1071 (+ 4 q) (+ 4 q) r) (* (+ 4 q) (+ 4 q) ?x882 r r) (* (- 1) (* ?x1071 (+ 4 q))))))
 (let (($x1044 (not (= (* ?x1083 ?x1355) 0))))
 (let ((?x382 (+ (- 32) ?x409 ?x704 ?x30 (* (- 16) d) ?x164 ?x1348 ?x196 ?x212 (* (+ (- 8) q) ?x1071 ?x1071) (* (- 2) (* (+ (- 8) q) ?x1071)) ?x262 (* (- 4) (* ?x1071 (+ (- 4) ?x130 ?x161 q (* (- 2) d)))) ?x590)))
 (let ((?x1436 (* (- 2) d)))
 (let ((?x1001 (+ (- 4) ?x130 ?x161 q ?x1436)))
 (let ((?x1604 (+ (- 8) q)))
 (let ((?x968 (+ (* ?x1604 ?x1604 ?x1071 r) (* ?x1604 ?x1604 ?x1001 r r) (* (- 1) (* ?x1604 ?x1071)))))
 (let (($x1026 (not (= (* ?x968 ?x382) 0))))
 (let ((?x1609 (* (- 8) d)))
 (let ((?x990 (+ (- 16) ?x409 ?x704 ?x30 ?x1609 ?x164 ?x1348 ?x196 ?x212 (* (+ (- 4) q) ?x1071 ?x1071) (* (- 2) (* (+ (- 4) q) ?x1071)) ?x262 (* (- 4) (* ?x1071 (+ (- 2) ?x130 ?x161 q (* (- 1) d)))) ?x590)))
 (let ((?x1104 (* (- 1) d)))
 (let ((?x318 (+ (- 2) ?x130 ?x161 q ?x1104)))
 (let ((?x308 (+ (- 4) q)))
 (let ((?x727 (+ (* ?x308 ?x308 ?x1071 r) (* ?x308 ?x308 ?x318 r r) (* (- 1) (* ?x308 ?x1071)))))
 (let (($x497 (not (= (* ?x727 ?x990) 0))))
 (let ((?x1739 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x1065 (+ ?x193 ?x164 ?x1739 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x590)))
 (let (($x1066 (= ?x1065 0)))
 (let (($x842 (and $x1066 (or $x497 $x1026 $x1044 $x1603))))
 (let (($x1491 (and $x1066 (or $x1044 $x497 $x1603 $x1026))))
 (rewrite (= $x1491 $x842))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x157 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x132 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x138 (- q 8)))
 (let ((?x151 (- (+ (* (+ d 2) ?x138 ?x138 r) (* ?x138 ?x138 ?x132 r r)) (* (+ d 2) ?x138))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x62 (+ d 2)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x140 (+ (- (- (+ (- (* 8 ?x132) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x138))))
 (let ((?x146 (+ (- (+ (- ?x140 (* 2 ?x62 ?x138)) ?x49) (* 4 ?x62 ?x132)) ?x53)))
 (let ((?x107 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x113 (- q 4)))
 (let ((?x126 (- (+ (* ?x62 ?x113 ?x113 r) (* ?x113 ?x113 ?x107 r r)) (* ?x62 ?x113))))
 (let ((?x115 (+ (- (- (+ (- (* 8 ?x107) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x113))))
 (let ((?x121 (+ (- (+ (- ?x115 (* 2 ?x62 ?x113)) ?x49) (* 4 ?x62 ?x107)) ?x53)))
 (let ((?x100 (+ (* ?x62 q q r) (* q q (+ (- (* 2 r) x) q) r r))))
 (let ((?x87 (+ (- (* 8 (+ (- (* 2 r) x) q)) (* 8 r00)) ?x63)))
 (let ((?x93 (- (+ (- (- ?x87 ?x39) ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q))))
 (let ((?x97 (+ (- (+ ?x93 ?x49) (* 4 ?x62 (+ (- (* 2 r) x) q))) ?x53)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (- (+ (* ?x62 ?x67 ?x67 r) (* ?x67 ?x67 ?x59 r r)) (* ?x62 ?x67))))
 (let ((?x69 (+ (- (- (+ (- (* 8 ?x59) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x67))))
 (let ((?x75 (+ (- (+ (- ?x69 (* 2 ?x62 ?x67)) ?x49) (* 4 ?x62 ?x59)) ?x53)))
 (let (($x155 (or (not (= (* ?x75 ?x80) 0)) (not (= (* ?x97 (- ?x100 (* ?x62 q))) 0)) (not (= (* ?x121 ?x126) 0)) (not (= (* ?x146 ?x151) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x155)))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x363 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x590 (* 4 (* d00 r00))))
 (let ((?x1235 (* (- 2) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x244 (+ (- 4) ?x57 ?x161 q ?x1235)))
 (let ((?x661 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x668 (* 4 (* ?x661 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x1353 (* 8 q)))
 (let ((?x704 (* (- 8) x)))
 (let ((?x1384 (* 16 r)))
 (let ((?x540 (+ (- 32) ?x1384 ?x704 ?x1353 (* (- 16) d) ?x164 ?x668 ?x196 ?x212 (* (+ (- 8) q) ?x661 ?x661) (* (- 2) (* (+ (- 8) q) ?x661)) ?x262 (* (- 4) (* ?x661 ?x244)) ?x590)))
 (let ((?x921 (+ (* (+ (- 8) q) (+ (- 8) q) ?x661 r) (* (+ (- 8) q) (+ (- 8) q) ?x244 r r) (* (- 1) (* (+ (- 8) q) ?x661)))))
 (let ((?x245 (+ ?x1384 ?x704 ?x1353 ?x164 ?x668 ?x196 ?x212 (* ?x661 ?x661 q) (* (- 2) (* ?x661 q)) ?x262 (* (- 4) (* ?x661 (+ ?x57 ?x161 q))) ?x590)))
 (let ((?x1743 (+ (* ?x661 r q q) (* (+ ?x57 ?x161 q) r r q q) (* (- 1) (* ?x661 q)))))
 (let ((?x454 (* (- 8) d)))
 (let ((?x188 (+ (- 16) ?x1384 ?x704 ?x1353 ?x454 ?x164 ?x668 ?x196 ?x212 (* (+ (- 4) q) ?x661 ?x661) (* (- 2) (* (+ (- 4) q) ?x661)) ?x262 (* (- 4) (* ?x661 (+ (- 2) ?x57 ?x161 q (* (- 1) d)))) ?x590)))
 (let ((?x953 (* (- 1) d)))
 (let ((?x875 (+ (- 2) ?x57 ?x161 q ?x953)))
 (let ((?x390 (+ (- 4) q)))
 (let ((?x1559 (+ (* ?x390 ?x390 ?x661 r) (* ?x390 ?x390 ?x875 r r) (* (- 1) (* ?x390 ?x661)))))
 (let ((?x193 (* 8 d)))
 (let ((?x340 (+ 16 ?x1384 ?x704 ?x1353 ?x193 ?x164 ?x668 ?x196 ?x212 (* ?x661 ?x661 (+ 4 q)) (* (- 2) (* ?x661 (+ 4 q))) ?x262 (* (- 4) (* ?x661 (+ 2 ?x57 ?x161 q d))) ?x590)))
 (let ((?x836 (+ 2 ?x57 ?x161 q d)))
 (let ((?x189 (+ 4 q)))
 (let ((?x617 (+ (* ?x661 ?x189 ?x189 r) (* ?x189 ?x189 ?x836 r r) (* (- 1) (* ?x661 ?x189)))))
 (let (($x1059 (or (not (= (* ?x617 ?x340) 0)) (not (= (* ?x1559 ?x188) 0)) (not (= (* ?x1743 ?x245) 0)) (not (= (* ?x921 ?x540) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x479 (+ ?x30 ?x164 (* 4 (* x d)) ?x196 ?x212 ?x44 (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x590)))
 (and (= ?x479 0) $x1059))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1369 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x590 (* 4 (* d00 r00))))
 (let ((?x1235 (* (- 2) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x244 (+ (- 4) ?x57 ?x161 q ?x1235)))
 (let ((?x661 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x668 (* 4 (* ?x661 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x1353 (* 8 q)))
 (let ((?x704 (* (- 8) x)))
 (let ((?x1384 (* 16 r)))
 (let ((?x540 (+ (- 32) ?x1384 ?x704 ?x1353 (* (- 16) d) ?x164 ?x668 ?x196 ?x212 (* (+ (- 8) q) ?x661 ?x661) (* (- 2) (* (+ (- 8) q) ?x661)) ?x262 (* (- 4) (* ?x661 ?x244)) ?x590)))
 (let ((?x921 (+ (* (+ (- 8) q) (+ (- 8) q) ?x661 r) (* (+ (- 8) q) (+ (- 8) q) ?x244 r r) (* (- 1) (* (+ (- 8) q) ?x661)))))
 (let ((?x245 (+ ?x1384 ?x704 ?x1353 ?x164 ?x668 ?x196 ?x212 (* ?x661 ?x661 q) (* (- 2) (* ?x661 q)) ?x262 (* (- 4) (* ?x661 (+ ?x57 ?x161 q))) ?x590)))
 (let ((?x1743 (+ (* ?x661 r q q) (* (+ ?x57 ?x161 q) r r q q) (* (- 1) (* ?x661 q)))))
 (let ((?x454 (* (- 8) d)))
 (let ((?x188 (+ (- 16) ?x1384 ?x704 ?x1353 ?x454 ?x164 ?x668 ?x196 ?x212 (* (+ (- 4) q) ?x661 ?x661) (* (- 2) (* (+ (- 4) q) ?x661)) ?x262 (* (- 4) (* ?x661 (+ (- 2) ?x57 ?x161 q (* (- 1) d)))) ?x590)))
 (let ((?x953 (* (- 1) d)))
 (let ((?x875 (+ (- 2) ?x57 ?x161 q ?x953)))
 (let ((?x390 (+ (- 4) q)))
 (let ((?x1559 (+ (* ?x390 ?x390 ?x661 r) (* ?x390 ?x390 ?x875 r r) (* (- 1) (* ?x390 ?x661)))))
 (let ((?x193 (* 8 d)))
 (let ((?x340 (+ 16 ?x1384 ?x704 ?x1353 ?x193 ?x164 ?x668 ?x196 ?x212 (* ?x661 ?x661 (+ 4 q)) (* (- 2) (* ?x661 (+ 4 q))) ?x262 (* (- 4) (* ?x661 (+ 2 ?x57 ?x161 q d))) ?x590)))
 (let ((?x836 (+ 2 ?x57 ?x161 q d)))
 (let ((?x189 (+ 4 q)))
 (let ((?x617 (+ (* ?x661 ?x189 ?x189 r) (* ?x189 ?x189 ?x836 r r) (* (- 1) (* ?x661 ?x189)))))
 (let (($x1059 (or (not (= (* ?x617 ?x340) 0)) (not (= (* ?x1559 ?x188) 0)) (not (= (* ?x1743 ?x245) 0)) (not (= (* ?x921 ?x540) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x479 (+ ?x30 ?x164 (* 4 (* x d)) ?x196 ?x212 ?x44 (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x590)))
 (let (($x1067 (and (= ?x479 0) $x1059)))
 (let ((?x132 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x138 (- q 8)))
 (let ((?x151 (- (+ (* (+ d 2) ?x138 ?x138 r) (* ?x138 ?x138 ?x132 r r)) (* (+ d 2) ?x138))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x62 (+ d 2)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x140 (+ (- (- (+ (- (* 8 ?x132) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x138))))
 (let ((?x146 (+ (- (+ (- ?x140 (* 2 ?x62 ?x138)) ?x49) (* 4 ?x62 ?x132)) ?x53)))
 (let ((?x107 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x113 (- q 4)))
 (let ((?x126 (- (+ (* ?x62 ?x113 ?x113 r) (* ?x113 ?x113 ?x107 r r)) (* ?x62 ?x113))))
 (let ((?x115 (+ (- (- (+ (- (* 8 ?x107) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x113))))
 (let ((?x121 (+ (- (+ (- ?x115 (* 2 ?x62 ?x113)) ?x49) (* 4 ?x62 ?x107)) ?x53)))
 (let ((?x100 (+ (* ?x62 q q r) (* q q (+ (- ?x57 x) q) r r))))
 (let ((?x88 (- (+ (- (* 8 (+ (- ?x57 x) q)) (* 8 r00)) ?x63) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x103 (* (+ (- ?x94 (* 4 ?x62 (+ (- ?x57 x) q))) ?x53) (- ?x100 (* ?x62 q)))))
 (let ((?x58 (- ?x57 x)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (- (+ (* ?x62 ?x67 ?x67 r) (* ?x67 ?x67 ?x59 r r)) (* ?x62 ?x67))))
 (let ((?x69 (+ (- (- (+ (- (* 8 ?x59) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x67))))
 (let ((?x75 (+ (- (+ (- ?x69 (* 2 ?x62 ?x67)) ?x49) (* 4 ?x62 ?x59)) ?x53)))
 (let (($x155 (or (not (= (* ?x75 ?x80) 0)) (not (= ?x103 0)) (not (= (* ?x121 ?x126) 0)) (not (= (* ?x146 ?x151) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x156 (and (= ?x54 0) $x155)))
 (rewrite (= $x156 $x1067)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1493 (trans (quant-intro (proof-bind ?x1369) (= $x157 $x363)) (elim-unused (= $x363 $x1478)) (= $x157 $x1478))))
 (let ((@x27 (asserted $x157)))
 (let ((@x826 (mp (mp @x27 @x1493 $x1478) (quant-intro (proof-bind ?x827) (= $x1478 $x675)) $x675)))
 (let ((@x566 (mp (mp @x826 (rewrite (= $x675 $x675)) $x675) (quant-intro (proof-bind ?x333) (= $x675 $x1150)) $x1150)))
 (let ((@x874 (mp~ (mp @x566 (quant-intro (proof-bind ?x552) (= $x1150 $x586)) $x586) (sk (~ $x586 $x528)) $x528)))
 (let ((@x1136 (mp @x874 (rewrite (= $x528 $x369)) $x369)))
 (let ((@x483 (and-elim @x1136 $x343)))
 (let ((@x499 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x343) $x462)) @x483 $x462)))
 (let (($x975 (<= ?x923 0)))
 (let ((@x279 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x343) $x975)) @x483 $x975)))
 (let (($x1745 (not (<= ?x1264 0))))
 (let (($x1266 (<= ?x338 0)))
 (let (($x1265 (>= ?x338 0)))
 (let ((@x471 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1329 (not $x1266) (not $x1265))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1265)) @x279 @x499 false) $x1265) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1266)) @x279 @x499 false) $x1266) $x1329)))
 (let (($x1381 (>= ?x1363 0)))
 (let (($x673 (<= ?x1363 0)))
 (let ((@x1210 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x978 (not $x673) (not $x1381))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x673)) @x279 @x499 false) $x673) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1381)) @x279 @x499 false) $x1381) $x978)))
 (let (($x649 (>= ?x669 0)))
 (let (($x831 (<= ?x669 0)))
 (let ((@x356 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1198 (not $x831) (not $x649))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x831)) @x279 @x499 false) $x831) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x649)) @x279 @x499 false) $x649) $x1198)))
 (let ((@x198 (unit-resolution (unit-resolution (and-elim @x1136 $x473) @x356 @x1210 (or $x190 $x757)) @x471 $x757)))
 (let (($x556 (>= ?x1264 0)))
 (let ((@x840 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x643 $x1745 (not $x556))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x556)) @x279 @x499 false) $x556) @x198 $x1745)))
 ((_ th-lemma arith farkas 1 1 1) @x840 @x279 @x499 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        54
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             640
 :arith-nonlinear-bounds    16
 :arith-num-rows            6
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 62
 :arith-tableau-max-rows    6
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                3.80
 :memory                    3.27
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1269193
 :num-checks                1
 :propagations              36
 :rlimit-count              8710
 :time                      0.01
 :total-time                0.02)
