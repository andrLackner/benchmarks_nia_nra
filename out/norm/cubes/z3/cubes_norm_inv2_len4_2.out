unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x426 (* k!2 k!2)))
 (let ((?x1066 (+ (* 9 n!0) (* (- 5) k!2) ?x426 (* (- 18) c!3) (* (- 9) (* n!0 c!3)))))
 (let (($x905 (<= ?x1066 (- 4))))
 (let (($x653 (= ?x1066 (- 4))))
 (let ((?x883 (+ k!2 c!3)))
 (let ((?x915 (+ k!2 m!1)))
 (let ((?x898 (+ 6 m!1)))
 (let ((?x916 (+ 1 n!0)))
 (let ((?x1089 (* 9 (* ?x916 ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883))))
 (let ((?x1093 (* (- 9) (* ?x916 ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883 ?x883))))
 (let ((?x910 (* (- 18) (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883 ?x883))))
 (let ((?x532 (* (- 5) (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883))))
 (let ((?x338 (* (- 9) (* ?x916 ?x916 ?x916 ?x916 ?x898 ?x898 ?x915 ?x883 ?x883 ?x883 ?x883))))
 (let ((?x468 (+ (* 4 (* ?x916 ?x916 ?x916 ?x898 ?x898 ?x915 ?x883 ?x883 ?x883)) (* 5 (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915)) (* (- 9) (* ?x916 ?x916 ?x898 ?x898 ?x898 ?x915 ?x915)) ?x338 ?x532 (* ?x916 ?x916 ?x915 ?x915 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883) (* (- 18) (* ?x916 ?x916 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883 ?x883)) (* 9 (* ?x916 ?x916 ?x916 ?x916 ?x898 ?x898 ?x915 ?x883 ?x883 ?x883)) (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883) ?x910 (* 9 (* ?x916 ?x916 ?x916 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883)) ?x1093 (* (- 9) (* ?x916 ?x916 ?x916 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883 ?x883)) (* (- 5) (* ?x916 ?x916 ?x915 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883)) (* ?x916 ?x916 ?x916 ?x898 ?x898 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883) ?x1089 (* 18 (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x883)) (* (- 18) (* ?x916 ?x916 ?x916 ?x898 ?x898 ?x915 ?x883 ?x883 ?x883 ?x883)) (* (- 4) (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915)) (* 9 (* ?x916 ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x883)) (* (- 1) (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x915)) (* 4 (* ?x916 ?x916 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883)) (* 4 (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x883 ?x883 ?x883)) (* (- 5) (* ?x916 ?x916 ?x916 ?x898 ?x898 ?x915 ?x915 ?x883 ?x883 ?x883)))))
 (let (($x678 (= ?x468 0)))
 (let (($x610 (not $x678)))
 (let ((?x639 (* (- 1) k!2)))
 (let ((?x495 (+ (* 3 n!0) ?x639 (* 3 (* n!0 n!0)))))
 (let (($x352 (= ?x495 (- 1))))
 (let ((?x876 (+ (* 2 n!0) ?x639 (* (- 3) c!3) (* n!0 k!2))))
 (let (($x139 (= ?x876 (- 1))))
 (let ((?x998 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x1074 (= ?x998 (- 6))))
 (let (($x478 (and $x1074 $x653 $x139 $x352 $x610)))
 (let ((?x659 (+ c!3 k!2)))
 (let ((?x484 (* 18 (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659 ?x659))))
 (let ((?x188 (* 9 (* ?x916 ?x916 ?x916 ?x916 ?x898 ?x898 ?x915 ?x659 ?x659 ?x659 ?x659))))
 (let ((?x588 (* 9 (* ?x916 ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659 ?x659))))
 (let ((?x651 (* (- 1) (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659))))
 (let ((?x471 (* (- 1) (* ?x916 ?x916 ?x916 ?x898 ?x898 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659))))
 (let ((?x889 (* (- 9) (* ?x916 ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659))))
 (let ((?x1060 (* 5 (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659))))
 (let ((?x1103 (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x915)))
 (let ((?x949 (+ ?x1103 (* (- 9) (* ?x916 ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x659)) ?x1060 ?x889 (* (- 4) (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659)) (* (- 18) (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x659)) ?x471 ?x651 (* (- 9) (* ?x916 ?x916 ?x916 ?x916 ?x898 ?x898 ?x915 ?x659 ?x659 ?x659)) ?x588 (* (- 5) (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915 ?x915)) ?x188 (* (- 4) (* ?x916 ?x916 ?x916 ?x898 ?x898 ?x915 ?x659 ?x659 ?x659)) (* 5 (* ?x916 ?x916 ?x915 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659)) (* (- 1) (* ?x916 ?x916 ?x915 ?x915 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659)) (* 9 (* ?x916 ?x916 ?x916 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659 ?x659)) (* 9 (* ?x916 ?x916 ?x898 ?x898 ?x898 ?x915 ?x915)) (* (- 9) (* ?x916 ?x916 ?x916 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659)) (* 5 (* ?x916 ?x916 ?x916 ?x898 ?x898 ?x915 ?x915 ?x659 ?x659 ?x659)) ?x484 (* 4 (* ?x916 ?x898 ?x898 ?x898 ?x915 ?x915)) (* 18 (* ?x916 ?x916 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659 ?x659)) (* (- 4) (* ?x916 ?x916 ?x915 ?x915 ?x915 ?x659 ?x659 ?x659)) (* 18 (* ?x916 ?x916 ?x916 ?x898 ?x898 ?x915 ?x659 ?x659 ?x659 ?x659)))))
 (let (($x918 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x927 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x426) (* 9 (* c!3 n!0)))))
 (let (($x917 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x927 4) $x918 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x949 0)))))
 (let (($x982 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x1218 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x391 (* 18 ?x1218)))
 (let ((?x1085 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x786 (* (- 4) ?x1085)))
 (let ((?x1073 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x960 (* 18 ?x1073)))
 (let ((?x1042 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70)))
 (let ((?x407 (* 4 ?x1042)))
 (let ((?x1006 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x442 (* 18 ?x1006)))
 (let ((?x971 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x441 (* 5 ?x971)))
 (let ((?x967 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x414 (* (- 9) ?x967)))
 (let ((?x932 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70)))
 (let ((?x440 (* 9 ?x932)))
 (let ((?x888 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x439 (* 9 ?x888)))
 (let ((?x858 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x438 (* (- 1) ?x858)))
 (let ((?x856 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x561 (* 5 ?x856)))
 (let ((?x842 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x699 (* (- 4) ?x842)))
 (let ((?x752 (* ?x337 ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x265 (* 9 ?x752)))
 (let ((?x671 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x631 (* (- 5) ?x671)))
 (let ((?x581 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x412 (* 9 ?x581)))
 (let ((?x573 (* ?x337 ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x270 (* (- 9) ?x573)))
 (let ((?x565 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x613 (* (- 1) ?x565)))
 (let ((?x536 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x694 (* (- 1) ?x536)))
 (let ((?x459 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x494 (* (- 18) ?x459)))
 (let ((?x432 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x991 (* (- 4) ?x432)))
 (let ((?x429 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x691 (* (- 9) ?x429)))
 (let ((?x406 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x480 (* 5 ?x406)))
 (let ((?x251 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x1220 (* (- 9) ?x251)))
 (let ((?x195 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x655 (+ ?x195 ?x1220 ?x480 ?x691 ?x991 ?x494 ?x694 ?x613 ?x270 ?x412 ?x631 ?x265 ?x699 ?x561 ?x438 ?x439 ?x440 ?x414 ?x441 ?x442 ?x407 ?x960 ?x786 ?x391)))
 (let (($x324 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x286 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x237 (* (- 1) ?x49)))
 (let ((?x236 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x234 (= (+ ?x40 ?x44 ?x236 ?x237 (* 9 (* c n))) 4)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (and $x150 $x234 $x286 $x324 (not (= ?x655 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x731 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x195 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x1073 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x960 (* 18 ?x1073)))
 (let ((?x1042 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70)))
 (let ((?x407 (* 4 ?x1042)))
 (let ((?x1006 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x442 (* 18 ?x1006)))
 (let ((?x971 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x441 (* 5 ?x971)))
 (let ((?x932 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70)))
 (let ((?x440 (* 9 ?x932)))
 (let ((?x888 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x439 (* 9 ?x888)))
 (let ((?x858 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x438 (* (- 1) ?x858)))
 (let ((?x842 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x699 (* (- 4) ?x842)))
 (let ((?x565 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x613 (* (- 1) ?x565)))
 (let ((?x573 (* ?x337 ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x270 (* (- 9) ?x573)))
 (let ((?x432 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x991 (* (- 4) ?x432)))
 (let ((?x429 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x691 (* (- 9) ?x429)))
 (let ((?x752 (* ?x337 ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x265 (* 9 ?x752)))
 (let ((?x536 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x694 (* (- 1) ?x536)))
 (let ((?x251 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x1220 (* (- 9) ?x251)))
 (let ((?x1218 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x391 (* 18 ?x1218)))
 (let ((?x671 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x631 (* (- 5) ?x671)))
 (let ((?x856 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x561 (* 5 ?x856)))
 (let ((?x1085 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x786 (* (- 4) ?x1085)))
 (let ((?x967 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x414 (* (- 9) ?x967)))
 (let ((?x581 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x412 (* 9 ?x581)))
 (let ((?x459 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x494 (* (- 18) ?x459)))
 (let ((?x406 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x480 (* 5 ?x406)))
 (let ((?x570 (+ ?x480 ?x494 ?x412 ?x414 ?x786 ?x561 ?x631 ?x391 ?x1220 ?x694 ?x265 ?x691 ?x991 ?x270 ?x613 ?x699 ?x438 ?x439 ?x440 ?x441 ?x442 ?x407 ?x960 ?x195)))
 (let (($x134 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x456 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x237 (* (- 1) ?x49)))
 (let ((?x236 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (and $x150 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x236 ?x237) 4) $x456 $x134 (not (= ?x570 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x944 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x1218 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x391 (* 18 ?x1218)))
 (let ((?x1085 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x786 (* (- 4) ?x1085)))
 (let ((?x1073 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x960 (* 18 ?x1073)))
 (let ((?x1042 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70)))
 (let ((?x407 (* 4 ?x1042)))
 (let ((?x1006 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x442 (* 18 ?x1006)))
 (let ((?x971 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x441 (* 5 ?x971)))
 (let ((?x967 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x414 (* (- 9) ?x967)))
 (let ((?x932 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70)))
 (let ((?x440 (* 9 ?x932)))
 (let ((?x888 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x439 (* 9 ?x888)))
 (let ((?x858 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x438 (* (- 1) ?x858)))
 (let ((?x856 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x561 (* 5 ?x856)))
 (let ((?x842 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x699 (* (- 4) ?x842)))
 (let ((?x752 (* ?x337 ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x265 (* 9 ?x752)))
 (let ((?x671 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x631 (* (- 5) ?x671)))
 (let ((?x581 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x412 (* 9 ?x581)))
 (let ((?x573 (* ?x337 ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x270 (* (- 9) ?x573)))
 (let ((?x565 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x613 (* (- 1) ?x565)))
 (let ((?x536 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x694 (* (- 1) ?x536)))
 (let ((?x459 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x494 (* (- 18) ?x459)))
 (let ((?x432 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x991 (* (- 4) ?x432)))
 (let ((?x429 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x691 (* (- 9) ?x429)))
 (let ((?x406 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x480 (* 5 ?x406)))
 (let ((?x251 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x1220 (* (- 9) ?x251)))
 (let ((?x195 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x655 (+ ?x195 ?x1220 ?x480 ?x691 ?x991 ?x494 ?x694 ?x613 ?x270 ?x412 ?x631 ?x265 ?x699 ?x561 ?x438 ?x439 ?x440 ?x414 ?x441 ?x442 ?x407 ?x960 ?x786 ?x391)))
 (let (($x324 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x286 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x237 (* (- 1) ?x49)))
 (let ((?x236 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x234 (= (+ ?x40 ?x44 ?x236 ?x237 (* 9 (* c n))) 4)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (let (($x951 (and $x150 $x234 $x286 $x324 (not (= ?x655 0)))))
 (let ((?x570 (+ ?x480 ?x494 ?x412 ?x414 ?x786 ?x561 ?x631 ?x391 ?x1220 ?x694 ?x265 ?x691 ?x991 ?x270 ?x613 ?x699 ?x438 ?x439 ?x440 ?x441 ?x442 ?x407 ?x960 ?x195)))
 (let (($x134 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x456 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x844 (and $x150 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x236 ?x237) 4) $x456 $x134 (not (= ?x570 0)))))
 (rewrite (= $x844 $x951)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x838 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x195 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x1073 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1006 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x858 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x565 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x429 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x752 (* ?x337 ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x536 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x581 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x406 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x361 (+ (* (- 5) ?x406) (* 18 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x69)) (* (- 9) ?x581) (* 9 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 4 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 5) (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 5 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70)) (* (- 18) (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69 ?x69)) (* 9 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x69)) ?x536 (* (- 9) ?x752) (* 9 ?x429) (* 4 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 9 (* ?x337 ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69)) ?x565 (* 4 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69)) ?x858 (* (- 9) (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70)) (* (- 5) (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 18) ?x1006) (* (- 4) (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70)) (* (- 18) ?x1073) (* (- 1) ?x195))))
 (let (($x134 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x818 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x377 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (and $x150 (= ?x377 (- 4)) $x818 $x134 (not (= ?x361 0)))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x299 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x195 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x1073 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x960 (* 18 ?x1073)))
 (let ((?x1042 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70)))
 (let ((?x407 (* 4 ?x1042)))
 (let ((?x1006 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x442 (* 18 ?x1006)))
 (let ((?x971 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x441 (* 5 ?x971)))
 (let ((?x932 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70)))
 (let ((?x440 (* 9 ?x932)))
 (let ((?x888 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x439 (* 9 ?x888)))
 (let ((?x858 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x438 (* (- 1) ?x858)))
 (let ((?x842 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x699 (* (- 4) ?x842)))
 (let ((?x565 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x613 (* (- 1) ?x565)))
 (let ((?x573 (* ?x337 ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x270 (* (- 9) ?x573)))
 (let ((?x432 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x991 (* (- 4) ?x432)))
 (let ((?x429 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x691 (* (- 9) ?x429)))
 (let ((?x752 (* ?x337 ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x265 (* 9 ?x752)))
 (let ((?x536 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x694 (* (- 1) ?x536)))
 (let ((?x251 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x1220 (* (- 9) ?x251)))
 (let ((?x1218 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x391 (* 18 ?x1218)))
 (let ((?x671 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x631 (* (- 5) ?x671)))
 (let ((?x856 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x561 (* 5 ?x856)))
 (let ((?x1085 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x786 (* (- 4) ?x1085)))
 (let ((?x967 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x414 (* (- 9) ?x967)))
 (let ((?x581 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x412 (* 9 ?x581)))
 (let ((?x459 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x494 (* (- 18) ?x459)))
 (let ((?x406 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x480 (* 5 ?x406)))
 (let ((?x570 (+ ?x480 ?x494 ?x412 ?x414 ?x786 ?x561 ?x631 ?x391 ?x1220 ?x694 ?x265 ?x691 ?x991 ?x270 ?x613 ?x699 ?x438 ?x439 ?x440 ?x441 ?x442 ?x407 ?x960 ?x195)))
 (let (($x134 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x456 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x237 (* (- 1) ?x49)))
 (let ((?x236 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (let (($x844 (and $x150 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x236 ?x237) 4) $x456 $x134 (not (= ?x570 0)))))
 (let ((?x361 (+ (* (- 5) ?x406) (* 18 ?x459) (* (- 9) ?x581) (* 9 ?x967) (* 4 ?x1085) (* (- 5) ?x856) (* 5 ?x671) (* (- 18) ?x1218) (* 9 ?x251) ?x536 (* (- 9) ?x752) (* 9 ?x429) (* 4 ?x432) (* 9 ?x573) ?x565 (* 4 ?x842) ?x858 (* (- 9) ?x888) (* (- 9) ?x932) (* (- 5) ?x971) (* (- 18) ?x1006) (* (- 4) ?x1042) (* (- 18) ?x1073) (* (- 1) ?x195))))
 (let (($x818 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x377 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x138 (and $x150 (= ?x377 (- 4)) $x818 $x134 (not (= ?x361 0)))))
 (rewrite (= $x138 $x844)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x117 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x76 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x73 (* (- 5) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)))
 (let ((?x80 (+ (- (+ ?x73 (* 18 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)) ?x76) (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72) (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72))))
 (let ((?x84 (+ (- ?x80 (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x72 ?x72)) (* 5 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x86 (- ?x84 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x89 (+ ?x86 (* 9 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x91 (- ?x89 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x98 (+ ?x91 (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72) (* 9 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72) (* 4 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x72 ?x72))))
 (let ((?x106 (- ?x98 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x108 (- (- ?x106 (* 9 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)) (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x109 (- ?x108 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x111 (- (- ?x109 (* 4 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)) (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72))))
 (let (($x114 (not (= (- ?x111 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x114)))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x461 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x195 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x1073 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1006 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x858 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x565 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x429 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x752 (* ?x337 ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x536 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x581 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x406 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x361 (+ (* (- 5) ?x406) (* 18 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x69)) (* (- 9) ?x581) (* 9 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 4 (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 5) (* ?x337 ?x337 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 5 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70)) (* (- 18) (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69 ?x69)) (* 9 (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x69)) ?x536 (* (- 9) ?x752) (* 9 ?x429) (* 4 (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 9 (* ?x337 ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69)) ?x565 (* 4 (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x69 ?x69 ?x69)) ?x858 (* (- 9) (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x337 ?x337 ?x334 ?x334 ?x334 ?x70 ?x70)) (* (- 5) (* ?x337 ?x337 ?x337 ?x334 ?x334 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 18) ?x1006) (* (- 4) (* ?x337 ?x334 ?x334 ?x334 ?x70 ?x70)) (* (- 18) ?x1073) (* (- 1) ?x195))))
 (let (($x134 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x818 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x377 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (let (($x138 (and $x150 (= ?x377 (- 4)) $x818 $x134 (not (= ?x361 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x76 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x73 (* (- 5) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)))
 (let ((?x80 (+ (- (+ ?x73 (* 18 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)) ?x76) (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72) (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72))))
 (let ((?x84 (+ (- ?x80 (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x72 ?x72)) (* 5 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x86 (- ?x84 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x89 (+ ?x86 (* 9 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x91 (- ?x89 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x98 (+ ?x91 (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72) (* 9 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72) (* 4 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x72 ?x72))))
 (let ((?x106 (- ?x98 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x108 (- (- ?x106 (* 9 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)) (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x109 (- ?x108 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x111 (- (- ?x109 (* 4 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)) (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72))))
 (let (($x114 (not (= (- ?x111 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x116 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x114))))
 (rewrite (= $x116 $x138))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x118 (asserted $x117)))
 (let ((@x161 (mp (mp @x118 (quant-intro (proof-bind ?x461) (= $x117 $x838)) $x838) (rewrite (= $x838 $x838)) $x838)))
 (let ((@x309 (mp (mp @x161 (quant-intro (proof-bind ?x299) (= $x838 $x731)) $x731) (quant-intro (proof-bind ?x944) (= $x731 $x982)) $x982)))
 (let ((@x431 (mp (mp~ @x309 (sk (~ $x982 $x917)) $x917) (rewrite (= $x917 $x478)) $x478)))
 (let ((@x1022 (and-elim @x431 $x653)))
 (let ((@x648 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x653) $x905)) @x1022 $x905)))
 (let (($x479 (>= ?x1066 (- 4))))
 (let ((@x860 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x653) $x479)) @x1022 $x479)))
 (let (($x530 (<= ?x876 (- 1))))
 (let ((@x996 (and-elim @x431 $x139)))
 (let ((@x663 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x139) $x530)) @x996 $x530)))
 (let (($x444 (>= ?x876 (- 1))))
 (let ((@x428 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x139) $x444)) @x996 $x444)))
 (let (($x792 (<= ?x495 (- 1))))
 (let ((@x1032 (and-elim @x431 $x352)))
 (let ((@x839 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x352) $x792)) @x1032 $x792)))
 (let (($x490 (>= ?x495 (- 1))))
 (let ((@x1102 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x352) $x490)) @x1032 $x490)))
 (let (($x764 (<= ?x998 (- 6))))
 (let ((@x427 (and-elim @x431 $x1074)))
 (let ((@x558 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1074) $x764)) @x427 $x764)))
 (let (($x646 (>= ?x998 (- 6))))
 (let ((@x373 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1074) $x646)) @x427 $x646)))
 (let (($x676 (not (<= ?x468 0))))
 (let (($x546 (>= ?x468 0)))
 (let ((@x499 ((_ th-lemma arith) (hypothesis (not $x546)) @x1102 @x839 @x373 @x558 @x1102 @x839 @x1102 @x839 @x428 @x663 @x1102 @x839 @x428 @x663 @x373 @x558 @x1102 @x839 @x428 @x663 @x860 @x648 false)))
 (let ((@x1303 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x678 $x676 (not $x546))) (and-elim @x431 $x610) (or $x676 (not $x546)))))
 ((_ th-lemma arith) (unit-resolution @x1303 (lemma @x499 $x546) $x676) @x1102 @x839 @x373 @x558 @x1102 @x839 @x1102 @x839 @x428 @x663 @x1102 @x839 @x428 @x663 @x373 @x558 @x1102 @x839 @x428 @x663 @x860 @x648 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        12
 :arith-assert-upper        34
 :arith-branch-var          2
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           15
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             248
 :arith-nonlinear-bounds    4
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              12
 :arith-row-summations      14
 :arith-tableau-max-columns 56
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 27
 :del-clause                16
 :final-checks              8
 :max-memory                3.80
 :memory                    3.30
 :mk-bool-var               47
 :mk-clause                 16
 :num-allocs                1820159
 :num-checks                1
 :propagations              10
 :rlimit-count              15541
 :time                      0.02
 :total-time                0.03)
