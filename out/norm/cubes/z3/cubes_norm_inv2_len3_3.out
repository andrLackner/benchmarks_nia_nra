unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x1259 (* (- 1) k!2)))
 (let ((?x769 (+ (* 3 n!0) (* 3 (* n!0 n!0)) ?x1259)))
 (let (($x1683 (<= ?x769 (- 1))))
 (let (($x1291 (= ?x769 (- 1))))
 (let ((?x1738 (* 4 (* c!3 c!3 k!2))))
 (let ((?x1216 (+ c!3 k!2)))
 (let ((?x1403 (+ m!1 k!2)))
 (let ((?x1713 (* 8 (* c!3 k!2 k!2))))
 (let ((?x1704 (* 4 (* k!2 k!2 k!2))))
 (let ((?x1497 (+ 6 m!1)))
 (let ((?x1499 (+ 1 n!0)))
 (let ((?x1772 (+ (* 18 (* ?x1499 ?x1499 ?x1497 ?x1403 ?x1403 ?x1403 ?x1216 ?x1216 ?x1216)) (* 4 (* n!0 n!0 m!1 k!2 k!2)) (* 4 (* n!0 n!0 c!3 c!3 k!2)) (* 16 (* n!0 m!1 c!3 k!2)) (* 8 (* n!0 n!0 c!3 k!2 k!2)) (* (- 9) (* ?x1499 ?x1499 ?x1499 ?x1497 ?x1403 ?x1403 ?x1403 ?x1216 ?x1216)) (* (- 18) (* ?x1499 ?x1499 ?x1403 ?x1216 ?x1216 ?x1216)) (* 16 (* n!0 c!3 k!2 k!2)) (* 8 (* n!0 m!1 k!2 k!2)) (* 4 (* n!0 n!0 k!2 k!2 k!2)) (* 4 (* n!0 n!0 m!1 c!3 c!3)) (* (- 1) (* ?x1499 ?x1499 ?x1497 ?x1403 ?x1403 ?x1403 ?x1403 ?x1403 ?x1216 ?x1216)) (* 5 (* ?x1499 ?x1499 ?x1497 ?x1403 ?x1403 ?x1403 ?x1403 ?x1216 ?x1216)) (* 8 (* n!0 n!0 m!1 c!3 k!2)) (* ?x1499 ?x1499 ?x1403 ?x1403 ?x1403 ?x1216 ?x1216) (* 5 (* ?x1403 ?x1403 ?x1403 ?x1403 ?x1216 ?x1216 ?x1216)) (* (- 9) (* ?x1499 ?x1499 ?x1499 ?x1403 ?x1216 ?x1216 ?x1216)) (* 9 (* ?x1499 ?x1403 ?x1403 ?x1403 ?x1216 ?x1216 ?x1216 ?x1216)) (* (- 9) (* ?x1499 ?x1403 ?x1403 ?x1403 ?x1216 ?x1216 ?x1216)) (* (- 1) (* ?x1403 ?x1403 ?x1403 ?x1403 ?x1403 ?x1216 ?x1216 ?x1216)) (* (- 5) (* ?x1499 ?x1499 ?x1403 ?x1403 ?x1216 ?x1216)) (* 18 (* ?x1403 ?x1403 ?x1403 ?x1216 ?x1216 ?x1216 ?x1216)) (* 8 (* n!0 c!3 c!3 k!2)) (* 8 (* n!0 k!2 k!2 k!2)) (* (- 4) (* ?x1499 ?x1499 ?x1497 ?x1403 ?x1403 ?x1403 ?x1216 ?x1216)) (* 4 (* m!1 k!2 k!2)) (* 9 (* ?x1499 ?x1499 ?x1499 ?x1403 ?x1216 ?x1216)) (* 9 (* ?x1499 ?x1499 ?x1499 ?x1497 ?x1403 ?x1403 ?x1403 ?x1216 ?x1216 ?x1216)) ?x1704 ?x1713 (* 4 (* m!1 c!3 c!3)) (* 8 (* m!1 c!3 k!2)) (* (- 4) (* ?x1403 ?x1403 ?x1403 ?x1216 ?x1216 ?x1216)) ?x1738 (* 8 (* n!0 m!1 c!3 c!3)))))
 (let (($x1535 (= ?x1772 0)))
 (let (($x1404 (not $x1535)))
 (let ((?x1266 (+ (* n!0 k!2) (* 2 n!0) (* (- 3) c!3) ?x1259)))
 (let (($x1261 (= ?x1266 (- 1))))
 (let ((?x1852 (* k!2 k!2)))
 (let ((?x1173 (+ (* 9 n!0) (* (- 18) c!3) (* (- 5) k!2) (* (- 9) (* n!0 c!3)) ?x1852)))
 (let (($x1186 (= ?x1173 (- 4))))
 (let ((?x1292 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x1294 (= ?x1292 (- 6))))
 (let (($x1904 (and $x1294 $x1186 $x1261 $x1291 $x1404)))
 (let ((?x1541 (+ k!2 m!1)))
 (let ((?x1722 (+ (* 8 (* c!3 c!3 m!1 n!0)) (* 4 (* c!3 c!3 k!2 n!0 n!0)) (* 8 (* c!3 k!2 k!2 n!0 n!0)) (* 4 (* k!2 k!2 k!2 n!0 n!0)) (* 4 (* c!3 c!3 m!1 n!0 n!0)) (* 8 (* c!3 k!2 m!1 n!0 n!0)) (* 4 (* k!2 k!2 m!1 n!0 n!0)) (* (- 1) (* ?x1499 ?x1499 ?x1497 ?x1541 ?x1541 ?x1541 ?x1541 ?x1541 ?x1216 ?x1216)) ?x1738 (* 5 (* ?x1499 ?x1499 ?x1497 ?x1541 ?x1541 ?x1541 ?x1541 ?x1216 ?x1216)) (* 9 (* ?x1499 ?x1499 ?x1499 ?x1541 ?x1216 ?x1216)) (* 8 (* k!2 k!2 m!1 n!0)) (* (- 9) (* ?x1499 ?x1499 ?x1499 ?x1541 ?x1216 ?x1216 ?x1216)) (* ?x1499 ?x1499 ?x1541 ?x1541 ?x1541 ?x1216 ?x1216) (* (- 5) (* ?x1499 ?x1499 ?x1541 ?x1541 ?x1216 ?x1216)) (* 18 (* ?x1541 ?x1541 ?x1541 ?x1216 ?x1216 ?x1216 ?x1216)) (* (- 9) (* ?x1499 ?x1541 ?x1541 ?x1541 ?x1216 ?x1216 ?x1216)) (* 8 (* k!2 k!2 k!2 n!0)) (* 4 (* k!2 k!2 m!1)) (* (- 4) (* ?x1499 ?x1499 ?x1497 ?x1541 ?x1541 ?x1541 ?x1216 ?x1216)) (* 9 (* ?x1499 ?x1541 ?x1541 ?x1541 ?x1216 ?x1216 ?x1216 ?x1216)) (* 9 (* ?x1499 ?x1499 ?x1499 ?x1497 ?x1541 ?x1541 ?x1541 ?x1216 ?x1216 ?x1216)) (* (- 9) (* ?x1499 ?x1499 ?x1499 ?x1497 ?x1541 ?x1541 ?x1541 ?x1216 ?x1216)) (* 8 (* c!3 k!2 m!1)) (* 16 (* c!3 k!2 m!1 n!0)) (* 18 (* ?x1499 ?x1499 ?x1497 ?x1541 ?x1541 ?x1541 ?x1216 ?x1216 ?x1216)) (* 5 (* ?x1541 ?x1541 ?x1541 ?x1541 ?x1216 ?x1216 ?x1216)) (* (- 4) (* ?x1541 ?x1541 ?x1541 ?x1216 ?x1216 ?x1216)) (* 8 (* c!3 c!3 k!2 n!0)) (* 4 (* c!3 c!3 m!1)) (* (- 18) (* ?x1499 ?x1499 ?x1541 ?x1216 ?x1216 ?x1216)) (* 16 (* c!3 k!2 k!2 n!0)) ?x1704 (* (- 1) (* ?x1541 ?x1541 ?x1541 ?x1541 ?x1541 ?x1216 ?x1216 ?x1216)) ?x1713)))
 (let (($x770 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x1723 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x1852) (* 9 (* c!3 n!0)))))
 (let (($x1493 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x1723 4) $x770 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x1722 0)))))
 (let (($x2369 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x1729 (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1736 (* (- 1) ?x1729)))
 (let ((?x324 (+ 1 n)))
 (let ((?x1692 (* ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1710 (* (- 18) ?x1692)))
 (let ((?x1655 (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1671 (* (- 4) ?x1655)))
 (let ((?x1641 (* ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1644 (* 5 ?x1641)))
 (let ((?x909 (+ 6 m)))
 (let ((?x1635 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1637 (* 18 ?x1635)))
 (let ((?x1590 (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1614 (* (- 9) ?x1590)))
 (let ((?x1567 (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1570 (* 9 ?x1567)))
 (let ((?x1557 (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1558 (* 9 ?x1557)))
 (let ((?x1512 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1537 (* (- 4) ?x1512)))
 (let ((?x1473 (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1492 (* (- 9) ?x1473)))
 (let ((?x1457 (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* 18 ?x1457)))
 (let ((?x1399 (* ?x324 ?x324 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1412 (* (- 5) ?x1399)))
 (let ((?x1397 (* ?x324 ?x324 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1343 (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1346 (* (- 9) ?x1343)))
 (let ((?x1224 (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69)))
 (let ((?x1231 (* 9 ?x1224)))
 (let ((?x1221 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1152 (* 5 ?x1221)))
 (let ((?x1174 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1166 (* (- 1) ?x1174)))
 (let ((?x1139 (* 4 (* k k m n n))))
 (let ((?x997 (* 4 (* c c m n n))))
 (let ((?x995 (* 4 (* k k k n n))))
 (let ((?x989 (* 4 (* c c k n n))))
 (let ((?x1472 (+ (* 8 (* c c m n)) ?x989 (* 8 (* c k k n n)) ?x995 ?x997 (* 8 (* c k m n n)) ?x1139 ?x1166 (* 4 (* c c k)) ?x1152 ?x1231 (* 8 (* k k m n)) ?x1346 ?x1397 ?x1412 ?x1458 ?x1492 (* 8 (* k k k n)) (* 4 (* k k m)) ?x1537 ?x1558 ?x1570 ?x1614 (* 8 (* c k m)) (* 16 (* c k m n)) ?x1637 ?x1644 ?x1671 (* 8 (* c c k n)) (* 4 (* c c m)) ?x1710 (* 16 (* c k k n)) (* 4 (* k k k)) ?x1736 (* 8 (* c k k)))))
 (let (($x314 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x276 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x224 (= (+ ?x40 ?x44 ?x226 ?x227 (* 9 (* c n))) 4)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (and $x140 $x224 $x276 $x314 (not (= ?x1472 0)))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x2064 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x1729 (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x909 (+ 6 m)))
 (let ((?x324 (+ 1 n)))
 (let ((?x1635 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1174 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1546 (+ (* 9 (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)) (* (- 1) (* ?x324 ?x324 ?x70 ?x70 ?x70 ?x69 ?x69)) (* 5 (* ?x324 ?x324 ?x70 ?x70 ?x69 ?x69)) ?x1174 (* (- 5) (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 9) (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69)) (* (- 4) (* ?x324 ?x324 ?x70 ?x69 ?x69)) (* (- 18) (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)) (* 9 (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 4 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 9) (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 9 (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 18) ?x1635) (* (- 5) (* ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 4 (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 18 (* ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)) ?x1729)))
 (let (($x1331 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1184 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (and $x140 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x226 ?x227) 4) $x1184 $x1331 (not (= ?x1546 0))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1893 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x1729 (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1736 (* (- 1) ?x1729)))
 (let ((?x324 (+ 1 n)))
 (let ((?x1692 (* ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1710 (* (- 18) ?x1692)))
 (let ((?x1655 (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1671 (* (- 4) ?x1655)))
 (let ((?x1641 (* ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1644 (* 5 ?x1641)))
 (let ((?x909 (+ 6 m)))
 (let ((?x1635 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1637 (* 18 ?x1635)))
 (let ((?x1590 (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1614 (* (- 9) ?x1590)))
 (let ((?x1567 (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1570 (* 9 ?x1567)))
 (let ((?x1557 (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1558 (* 9 ?x1557)))
 (let ((?x1512 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1537 (* (- 4) ?x1512)))
 (let ((?x1473 (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1492 (* (- 9) ?x1473)))
 (let ((?x1457 (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* 18 ?x1457)))
 (let ((?x1399 (* ?x324 ?x324 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1412 (* (- 5) ?x1399)))
 (let ((?x1397 (* ?x324 ?x324 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1343 (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1346 (* (- 9) ?x1343)))
 (let ((?x1224 (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69)))
 (let ((?x1231 (* 9 ?x1224)))
 (let ((?x1221 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1152 (* 5 ?x1221)))
 (let ((?x1174 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1166 (* (- 1) ?x1174)))
 (let ((?x1139 (* 4 (* k k m n n))))
 (let ((?x997 (* 4 (* c c m n n))))
 (let ((?x995 (* 4 (* k k k n n))))
 (let ((?x989 (* 4 (* c c k n n))))
 (let ((?x1472 (+ (* 8 (* c c m n)) ?x989 (* 8 (* c k k n n)) ?x995 ?x997 (* 8 (* c k m n n)) ?x1139 ?x1166 (* 4 (* c c k)) ?x1152 ?x1231 (* 8 (* k k m n)) ?x1346 ?x1397 ?x1412 ?x1458 ?x1492 (* 8 (* k k k n)) (* 4 (* k k m)) ?x1537 ?x1558 ?x1570 ?x1614 (* 8 (* c k m)) (* 16 (* c k m n)) ?x1637 ?x1644 ?x1671 (* 8 (* c c k n)) (* 4 (* c c m)) ?x1710 (* 16 (* c k k n)) (* 4 (* k k k)) ?x1736 (* 8 (* c k k)))))
 (let (($x314 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x276 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x224 (= (+ ?x40 ?x44 ?x226 ?x227 (* 9 (* c n))) 4)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (let (($x1177 (and $x140 $x224 $x276 $x314 (not (= ?x1472 0)))))
 (let ((?x1546 (+ (* 9 ?x1343) (* (- 1) ?x1397) (* 5 ?x1399) ?x1174 (* (- 5) ?x1221) (* (- 9) ?x1224) (* (- 4) (* ?x324 ?x324 ?x70 ?x69 ?x69)) (* (- 18) ?x1457) (* 9 ?x1473) (* 4 ?x1512) (* (- 9) ?x1557) (* (- 9) ?x1567) (* 9 ?x1590) (* (- 18) ?x1635) (* (- 5) ?x1641) (* 4 ?x1655) (* 18 ?x1692) ?x1729)))
 (let (($x1331 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1184 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1650 (and $x140 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x226 ?x227) 4) $x1184 $x1331 (not (= ?x1546 0)))))
 (rewrite (= $x1650 $x1177)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1406 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x1729 (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1736 (* (- 1) ?x1729)))
 (let ((?x324 (+ 1 n)))
 (let ((?x1692 (* ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1710 (* (- 18) ?x1692)))
 (let ((?x1655 (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1671 (* (- 4) ?x1655)))
 (let ((?x1641 (* ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1644 (* 5 ?x1641)))
 (let ((?x909 (+ 6 m)))
 (let ((?x1635 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1637 (* 18 ?x1635)))
 (let ((?x1590 (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1614 (* (- 9) ?x1590)))
 (let ((?x1567 (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1570 (* 9 ?x1567)))
 (let ((?x1557 (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1558 (* 9 ?x1557)))
 (let ((?x1512 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1537 (* (- 4) ?x1512)))
 (let ((?x1473 (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1492 (* (- 9) ?x1473)))
 (let ((?x1457 (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* 18 ?x1457)))
 (let ((?x1224 (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69)))
 (let ((?x1231 (* 9 ?x1224)))
 (let ((?x1221 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1152 (* 5 ?x1221)))
 (let ((?x1174 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1166 (* (- 1) ?x1174)))
 (let ((?x1399 (* ?x324 ?x324 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1412 (* (- 5) ?x1399)))
 (let ((?x1397 (* ?x324 ?x324 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1343 (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1346 (* (- 9) ?x1343)))
 (let ((?x1742 (+ ?x1346 ?x1397 ?x1412 ?x1166 ?x1152 ?x1231 (* 4 (* ?x324 ?x324 ?x70 ?x69 ?x69)) ?x1458 ?x1492 ?x1537 ?x1558 ?x1570 ?x1614 ?x1637 ?x1644 ?x1671 ?x1710 ?x1736)))
 (let (($x1331 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1274 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1810 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (and $x140 (= ?x1810 (- 4)) $x1274 $x1331 (not (= ?x1742 0))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x177 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x1729 (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x909 (+ 6 m)))
 (let ((?x324 (+ 1 n)))
 (let ((?x1635 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1174 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1546 (+ (* 9 (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)) (* (- 1) (* ?x324 ?x324 ?x70 ?x70 ?x70 ?x69 ?x69)) (* 5 (* ?x324 ?x324 ?x70 ?x70 ?x69 ?x69)) ?x1174 (* (- 5) (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 9) (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69)) (* (- 4) (* ?x324 ?x324 ?x70 ?x69 ?x69)) (* (- 18) (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)) (* 9 (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 4 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 9) (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 9 (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 18) ?x1635) (* (- 5) (* ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 4 (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 18 (* ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)) ?x1729)))
 (let (($x1331 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1184 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (let (($x1650 (and $x140 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x226 ?x227) 4) $x1184 $x1331 (not (= ?x1546 0)))))
 (let ((?x1736 (* (- 1) ?x1729)))
 (let ((?x1692 (* ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1710 (* (- 18) ?x1692)))
 (let ((?x1655 (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1671 (* (- 4) ?x1655)))
 (let ((?x1641 (* ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1644 (* 5 ?x1641)))
 (let ((?x1637 (* 18 ?x1635)))
 (let ((?x1590 (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1614 (* (- 9) ?x1590)))
 (let ((?x1567 (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1570 (* 9 ?x1567)))
 (let ((?x1557 (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1558 (* 9 ?x1557)))
 (let ((?x1512 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1537 (* (- 4) ?x1512)))
 (let ((?x1473 (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1492 (* (- 9) ?x1473)))
 (let ((?x1457 (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* 18 ?x1457)))
 (let ((?x1224 (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69)))
 (let ((?x1231 (* 9 ?x1224)))
 (let ((?x1221 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1152 (* 5 ?x1221)))
 (let ((?x1166 (* (- 1) ?x1174)))
 (let ((?x1399 (* ?x324 ?x324 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1412 (* (- 5) ?x1399)))
 (let ((?x1397 (* ?x324 ?x324 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1343 (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1346 (* (- 9) ?x1343)))
 (let ((?x1742 (+ ?x1346 ?x1397 ?x1412 ?x1166 ?x1152 ?x1231 (* 4 (* ?x324 ?x324 ?x70 ?x69 ?x69)) ?x1458 ?x1492 ?x1537 ?x1558 ?x1570 ?x1614 ?x1637 ?x1644 ?x1671 ?x1710 ?x1736)))
 (let (($x1274 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1810 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1341 (and $x140 (= ?x1810 (- 4)) $x1274 $x1331 (not (= ?x1742 0)))))
 (rewrite (= $x1341 $x1650)))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x107 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x99 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x95 (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x71 (+ n 1)))
 (let ((?x76 (+ m 6)))
 (let ((?x83 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70)))
 (let ((?x74 (+ (* (- 9) ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x79 (- (- ?x74 (* 5 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x76 ?x71 ?x71))))
 (let ((?x84 (+ ?x79 (* 5 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x76 ?x71 ?x71) (* 9 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 4 ?x69 ?x69 ?x70 ?x71 ?x71) ?x83)))
 (let ((?x88 (- (- ?x84 (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71)) (* 4 ?x69 ?x69 ?x70 ?x70 ?x70 ?x76 ?x71 ?x71))))
 (let ((?x91 (+ ?x88 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71) (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x76 ?x71 ?x71 ?x71))))
 (let ((?x96 (+ (- ?x91 (* 9 ?x69 ?x69 ?x70 ?x70 ?x70 ?x76 ?x71 ?x71 ?x71)) (* 18 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x76 ?x71 ?x71) ?x95)))
 (let ((?x101 (- (- ?x96 (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70)) (* 18 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x101 ?x99) 0))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1392 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x1729 (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1736 (* (- 1) ?x1729)))
 (let ((?x324 (+ 1 n)))
 (let ((?x1692 (* ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1710 (* (- 18) ?x1692)))
 (let ((?x1655 (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1671 (* (- 4) ?x1655)))
 (let ((?x1641 (* ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1644 (* 5 ?x1641)))
 (let ((?x909 (+ 6 m)))
 (let ((?x1635 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1637 (* 18 ?x1635)))
 (let ((?x1590 (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1614 (* (- 9) ?x1590)))
 (let ((?x1567 (* ?x324 ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1570 (* 9 ?x1567)))
 (let ((?x1557 (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1558 (* 9 ?x1557)))
 (let ((?x1512 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1537 (* (- 4) ?x1512)))
 (let ((?x1473 (* ?x324 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1492 (* (- 9) ?x1473)))
 (let ((?x1457 (* ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* 18 ?x1457)))
 (let ((?x1224 (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69)))
 (let ((?x1231 (* 9 ?x1224)))
 (let ((?x1221 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1152 (* 5 ?x1221)))
 (let ((?x1174 (* ?x324 ?x324 ?x909 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1166 (* (- 1) ?x1174)))
 (let ((?x1399 (* ?x324 ?x324 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1412 (* (- 5) ?x1399)))
 (let ((?x1397 (* ?x324 ?x324 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1343 (* ?x324 ?x324 ?x324 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1346 (* (- 9) ?x1343)))
 (let ((?x1742 (+ ?x1346 ?x1397 ?x1412 ?x1166 ?x1152 ?x1231 (* 4 (* ?x324 ?x324 ?x70 ?x69 ?x69)) ?x1458 ?x1492 ?x1537 ?x1558 ?x1570 ?x1614 ?x1637 ?x1644 ?x1671 ?x1710 ?x1736)))
 (let (($x1331 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1274 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1810 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (let (($x1341 (and $x140 (= ?x1810 (- 4)) $x1274 $x1331 (not (= ?x1742 0)))))
 (let ((?x99 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x95 (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x71 (+ n 1)))
 (let ((?x76 (+ m 6)))
 (let ((?x83 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70)))
 (let ((?x74 (+ (* (- 9) ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x79 (- (- ?x74 (* 5 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x76 ?x71 ?x71))))
 (let ((?x84 (+ ?x79 (* 5 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x76 ?x71 ?x71) (* 9 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 4 ?x69 ?x69 ?x70 ?x71 ?x71) ?x83)))
 (let ((?x88 (- (- ?x84 (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71)) (* 4 ?x69 ?x69 ?x70 ?x70 ?x70 ?x76 ?x71 ?x71))))
 (let ((?x91 (+ ?x88 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71) (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x76 ?x71 ?x71 ?x71))))
 (let ((?x96 (+ (- ?x91 (* 9 ?x69 ?x69 ?x70 ?x70 ?x70 ?x76 ?x71 ?x71 ?x71)) (* 18 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x76 ?x71 ?x71) ?x95)))
 (let ((?x101 (- (- ?x96 (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70)) (* 18 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x106 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x101 ?x99) 0))))))
 (rewrite (= $x106 $x1341))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x108 (asserted $x107)))
 (let ((@x1416 (mp (mp @x108 (quant-intro (proof-bind ?x1392) (= $x107 $x1406)) $x1406) (rewrite (= $x1406 $x1406)) $x1406)))
 (let ((@x2460 (mp (mp @x1416 (quant-intro (proof-bind ?x177) (= $x1406 $x2064)) $x2064) (quant-intro (proof-bind ?x1893) (= $x2064 $x2369)) $x2369)))
 (let ((@x1410 (mp (mp~ @x2460 (sk (~ $x2369 $x1493)) $x1493) (rewrite (= $x1493 $x1904)) $x1904)))
 (let ((@x2447 (and-elim @x1410 $x1291)))
 (let ((@x1175 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1291) $x1683)) @x2447 $x1683)))
 (let (($x736 (>= ?x769 (- 1))))
 (let ((@x1505 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1291) $x736)) @x2447 $x736)))
 (let (($x1613 (<= ?x1173 (- 4))))
 (let ((@x1269 (and-elim @x1410 $x1186)))
 (let ((@x1709 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1186) $x1613)) @x1269 $x1613)))
 (let (($x686 (>= ?x1173 (- 4))))
 (let ((@x1509 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1186) $x686)) @x1269 $x686)))
 (let (($x1912 (<= ?x1292 (- 6))))
 (let ((@x1450 (and-elim @x1410 $x1294)))
 (let ((@x1696 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1294) $x1912)) @x1450 $x1912)))
 (let (($x1455 (>= ?x1292 (- 6))))
 (let ((@x1336 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1294) $x1455)) @x1450 $x1455)))
 (let (($x1320 (<= ?x1266 (- 1))))
 (let ((@x1276 (and-elim @x1410 $x1261)))
 (let ((@x1325 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1261) $x1320)) @x1276 $x1320)))
 (let (($x1318 (>= ?x1266 (- 1))))
 (let ((@x1508 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1261) $x1318)) @x1276 $x1318)))
 (let (($x876 (not (<= ?x1772 0))))
 (let (($x1466 (>= ?x1772 0)))
 (let ((@x883 ((_ th-lemma arith) (hypothesis (not $x1466)) @x1505 @x1175 @x1336 @x1696 @x1505 @x1175 @x1505 @x1175 @x1508 @x1325 @x1505 @x1175 @x1336 @x1696 @x1336 @x1696 @x1509 @x1709 @x1505 @x1175 false)))
 (let ((@x1562 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1535 $x876 (not $x1466))) (and-elim @x1410 $x1404) (or $x876 (not $x1466)))))
 ((_ th-lemma arith) (unit-resolution @x1562 (lemma @x883 $x1466) $x876) @x1505 @x1175 @x1336 @x1696 @x1505 @x1175 @x1505 @x1175 @x1508 @x1325 @x1505 @x1175 @x1336 @x1696 @x1336 @x1696 @x1509 @x1709 @x1505 @x1175 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        13
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             463
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 69
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                4.05
 :memory                    3.45
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1624061
 :num-checks                1
 :propagations              11
 :rlimit-count              11622
 :time                      0.01
 :total-time                0.02)
