unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x2350 (* (- 2) n!0)))
 (let ((?x2231 (* k!2 n!0)))
 (let ((?x2457 (* (- 1) ?x2231)))
 (let ((?x2313 (* 3 c!3)))
 (let ((?x2479 (+ ?x2313 k!2 ?x2457 ?x2350)))
 (let (($x736 (<= ?x2479 1)))
 (let (($x2391 (= ?x2479 1)))
 (let ((?x2600 (* (- 24) (* c!3 m!1))))
 (let ((?x503 (* 9 (* c!3 m!1 m!1 n!0))))
 (let ((?x509 (* (- 9) (* k!2 k!2 k!2 n!0 n!0))))
 (let ((?x2596 (* (- 18) (* c!3 k!2 k!2 n!0 n!0))))
 (let ((?x2591 (* (- 2124) (* c!3 k!2))))
 (let ((?x2365 (+ c!3 k!2)))
 (let ((?x2477 (+ k!2 m!1)))
 (let ((?x2258 (+ 6 m!1)))
 (let ((?x2250 (+ 1 n!0)))
 (let ((?x2514 (* 18 (* ?x2250 ?x2250 ?x2250 ?x2258 ?x2258 ?x2477 ?x2365))))
 (let ((?x2178 (* (- 130) (* c!3 c!3 m!1 n!0))))
 (let ((?x485 (* 40 (* k!2 k!2 k!2 m!1))))
 (let ((?x2526 (* (- 648) (* c!3 k!2 n!0))))
 (let ((?x2094 (* (- 1) (* ?x2250 ?x2477 ?x2477 ?x2477 ?x2365 ?x2365))))
 (let ((?x2563 (* 23 (* k!2 k!2 k!2 k!2 n!0))))
 (let ((?x2159 (* 64 (* c!3 k!2 k!2 k!2 n!0))))
 (let ((?x2562 (* 2 (* k!2 k!2 m!1 m!1 m!1))))
 (let ((?x2504 (* k!2 k!2)))
 (let ((?x651 (* (- 1152) ?x2504)))
 (let ((?x2370 (* (- 9) (* ?x2250 ?x2250 ?x2250 ?x2250 ?x2258 ?x2258 ?x2477))))
 (let ((?x2481 (* k!2 m!1 m!1 m!1 m!1)))
 (let ((?x834 (* 9 (* ?x2250 ?x2250 ?x2477 ?x2365 ?x2365 ?x2365))))
 (let ((?x2148 (* 18 (* c!3 c!3 c!3 m!1))))
 (let ((?x2461 (* 59 (* c!3 c!3 k!2 k!2 n!0))))
 (let ((?x2124 (* (- 44) (* c!3 k!2 k!2 n!0))))
 (let ((?x2403 (* (- 11) (* k!2 m!1 m!1))))
 (let ((?x2108 (* (- 13) (* c!3 c!3 k!2))))
 (let ((?x2107 (* 23 (* k!2 k!2 k!2))))
 (let ((?x2106 (* 18 (* ?x2250 ?x2250 ?x2258 ?x2477 ?x2477 ?x2365 ?x2365))))
 (let ((?x2316 (* 5 (* ?x2250 ?x2250 ?x2250 ?x2258 ?x2258 ?x2477 ?x2477))))
 (let ((?x2402 (* (- 11) (* c!3 m!1 m!1))))
 (let ((?x2519 (* 64 (* c!3 c!3 k!2 m!1))))
 (let ((?x2367 (* (- 1) (* ?x2250 ?x2250 ?x2250 ?x2258 ?x2258 ?x2477 ?x2477 ?x2477))))
 (let ((?x2322 (* (- 662) (* c!3 k!2 m!1))))
 (let ((?x2342 (* 28 (* k!2 k!2 k!2 m!1 n!0))))
 (let ((?x2122 (* (- 4) (* ?x2250 ?x2250 ?x2258 ?x2477 ?x2477 ?x2365))))
 (let ((?x2561 (* 74 (* c!3 k!2 k!2 m!1 n!0))))
 (let ((?x2490 (* 5 (* ?x2250 ?x2250 ?x2258 ?x2477 ?x2477 ?x2477 ?x2365))))
 (let ((?x1891 (* 59 (* c!3 c!3 k!2 k!2))))
 (let ((?x2254 (* 23 (* k!2 k!2 k!2 k!2))))
 (let ((?x2104 (* (- 9) (* ?x2250 ?x2250 ?x2250 ?x2258 ?x2477 ?x2477 ?x2365))))
 (let ((?x2073 (* 9 (* ?x2250 ?x2250 ?x2250 ?x2258 ?x2477 ?x2477 ?x2365 ?x2365))))
 (let ((?x2592 (* (- 25) (* c!3 k!2 m!1 m!1))))
 (let ((?x2304 (* (- 3) (* k!2 k!2 m!1 m!1))))
 (let ((?x2145 (* (- 22) (* c!3 c!3 k!2 n!0))))
 (let ((?x658 (* 18 (* c!3 c!3 c!3 k!2))))
 (let ((?x2269 (* 18 (* c!3 c!3 c!3 m!1 n!0))))
 (let ((?x2409 (* 7 (* c!3 m!1 m!1 m!1))))
 (let ((?x2383 (* 86 (* c!3 k!2 k!2 m!1))))
 (let ((?x2410 (* 64 (* c!3 k!2 k!2 k!2))))
 (let ((?x137 (* 324 ?x2231)))
 (let ((?x2242 (* 10 (* c!3 k!2 k!2))))
 (let ((?x2221 (* (- 22) (* c!3 c!3 m!1 m!1))))
 (let ((?x476 (* (- 324) (* c!3 c!3 n!0))))
 (let ((?x2111 (* c!3 n!0)))
 (let ((?x2234 (* 324 ?x2111)))
 (let ((?x607 (* 7 (* k!2 m!1 m!1 m!1))))
 (let ((?x2103 (* 108 (* c!3 m!1 n!0))))
 (let ((?x2241 (* (- 337) (* c!3 c!3 m!1))))
 (let ((?x2310 (* 108 (* k!2 m!1 n!0))))
 (let ((?x653 (* 468 k!2)))
 (let ((?x1750 (* 64 (* c!3 c!3 k!2 m!1 n!0))))
 (let ((?x2366 (* 9 (* ?x2250 ?x2250 ?x2250 ?x2250 ?x2258 ?x2258 ?x2477 ?x2365))))
 (let ((?x2478 (* (- 130) (* k!2 k!2 m!1 n!0))))
 (let ((?x2223 (* (- 22) (* k!2 k!2 k!2 n!0))))
 (let ((?x654 (* c!3 k!2 k!2 m!1 m!1)))
 (let ((?x2176 (* (- 260) (* c!3 k!2 m!1 n!0))))
 (let ((?x2445 (* 18 (* c!3 c!3 c!3 k!2 n!0))))
 (let ((?x2268 (* (- 324) (* k!2 k!2 n!0))))
 (let ((?x2412 (* (- 4) (* ?x2250 ?x2250 ?x2250 ?x2258 ?x2258 ?x2477))))
 (let ((?x2359 (* (- 325) (* k!2 k!2 m!1))))
 (let ((?x530 (* (- 9) (* c!3 c!3 k!2 n!0 n!0))))
 (let ((?x507 (* (- 9) (* k!2 k!2 m!1 n!0 n!0))))
 (let ((?x508 (* (- 9) (* c!3 c!3 m!1 n!0 n!0))))
 (let ((?x504 (* (- 18) (* c!3 k!2 m!1 n!0 n!0))))
 (let ((?x2430 (* (- 24) (* k!2 m!1))))
 (let ((?x2280 (* 9 (* k!2 m!1 m!1 n!0))))
 (let ((?x475 (* (- 972) (* c!3 c!3))))
 (let ((?x486 (* (- 1) (* ?x2250 ?x2250 ?x2258 ?x2477 ?x2477 ?x2477 ?x2477 ?x2365))))
 (let ((?x468 (* (- 4) (* c!3 c!3 m!1 m!1 n!0))))
 (let ((?x470 (* (- 4) (* k!2 k!2 m!1 m!1 n!0))))
 (let ((?x2297 (* (- 8) (* c!3 k!2 m!1 m!1 n!0))))
 (let ((?x2606 (* 468 c!3)))
 (let ((?x652 (* 2 (* c!3 k!2 m!1 m!1 m!1))))
 (let ((?x140 (* c!3 m!1 m!1 m!1 m!1)))
 (let ((?x136 (* k!2 k!2 k!2 m!1 m!1)))
 (let ((?x2354 (+ ?x136 ?x140 ?x652 ?x2606 ?x2297 ?x470 ?x468 ?x486 ?x475 ?x2280 ?x2430 ?x504 ?x508 ?x507 ?x530 ?x2359 ?x2412 ?x2268 ?x2445 ?x2176 ?x654 ?x2223 ?x2478 ?x2366 ?x1750 ?x653 ?x2310 ?x2241 ?x2103 ?x607 ?x2234 ?x476 ?x2221 ?x2242 ?x137 ?x2410 ?x2383 ?x2409 ?x2269 ?x658 ?x2145 ?x2304 ?x2592 ?x2073 ?x2104 ?x2254 ?x1891 ?x2490 ?x2561 ?x2122 ?x2342 ?x2322 ?x2367 ?x2519 ?x2402 ?x2316 ?x2106 ?x2107 ?x2108 ?x2403 ?x2124 ?x2461 ?x2148 ?x834 ?x2481 ?x2370 ?x651 ?x2562 ?x2159 ?x2563 ?x2094 ?x2526 ?x485 ?x2178 ?x2514 ?x2591 ?x2596 ?x509 ?x503 ?x2600)))
 (let (($x2169 (= ?x2354 0)))
 (let (($x2153 (not $x2169)))
 (let ((?x2162 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x2261 (= ?x2162 1)))
 (let ((?x139 (* (- 1) ?x2504)))
 (let ((?x2090 (* (- 9) n!0)))
 (let ((?x474 (* 9 ?x2111)))
 (let ((?x639 (* 5 k!2)))
 (let ((?x143 (* 18 c!3)))
 (let ((?x2256 (+ ?x143 ?x639 ?x474 ?x2090 ?x139)))
 (let (($x2382 (= ?x2256 4)))
 (let ((?x2112 (+ m!1 (* (- 6) n!0))))
 (let (($x953 (= ?x2112 6)))
 (let (($x2301 (and $x953 $x2382 $x2391 $x2261 $x2153)))
 (let ((?x2371 (+ ?x2606 ?x653 ?x651 ?x137 ?x2234 ?x654 ?x136 ?x652 ?x2562 ?x140 ?x2481 ?x2145 ?x2124 ?x2223 ?x2178 ?x2176 ?x2268 ?x2478 ?x658 ?x834 ?x2342 ?x2561 ?x2122 ?x2445 ?x2461 ?x2514 ?x2159 ?x2563 ?x2269 ?x1750 ?x2366 ?x1891 ?x2410 ?x2254 ?x2148 ?x2519 ?x2094 ?x2383 ?x2526 ?x485 ?x486 ?x475 ?x2591 ?x476 ?x468 ?x2297 ?x470 ?x2221 ?x2592 ?x2304 ?x530 ?x2596 ?x509 ?x508 ?x504 ?x507 ?x503 ?x2280 ?x2600 ?x2430 ?x2403 ?x2402 ?x2103 ?x2310 ?x2104 ?x2409 ?x607 ?x2316 ?x2106 ?x2073 ?x2241 ?x2412 ?x2107 ?x2108 ?x2242 ?x2359 ?x2322 ?x2367 ?x2490 ?x2370)))
 (let (($x2374 (and $x953 (= (+ ?x143 ?x639 ?x2090 ?x139 ?x474) 4) (= (+ ?x2313 k!2 ?x2350 ?x2457) 1) $x2261 (not (= ?x2371 0)))))
 (let (($x2443 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x409 (+ 1 n)))
 (let ((?x2577 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)))
 (let ((?x2284 (* (- 9) ?x2577)))
 (let ((?x69 (+ c k)))
 (let ((?x2553 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2068 (* 5 ?x2553)))
 (let ((?x2544 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x581 (* (- 1) ?x2544)))
 (let ((?x2270 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)))
 (let ((?x675 (* (- 4) ?x2270)))
 (let ((?x2156 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2247 (* 9 ?x2156)))
 (let ((?x2126 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2117 (* 18 ?x2126)))
 (let ((?x2114 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70)))
 (let ((?x2439 (* 5 ?x2114)))
 (let ((?x1758 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x2286 (* (- 9) ?x1758)))
 (let ((?x2883 (* 108 (* k m n))))
 (let ((?x2882 (* 108 (* c m n))))
 (let ((?x1548 (* 9 (* k m m n))))
 (let ((?x1546 (* 9 (* c m m n))))
 (let ((?x2874 (* (- 9) (* k k m n n))))
 (let ((?x2871 (* (- 9) (* c c m n n))))
 (let ((?x2870 (* (- 9) (* k k k n n))))
 (let ((?x2867 (* (- 9) (* c c k n n))))
 (let ((?x2821 (* (- 4) (* k k m m n))))
 (let ((?x2819 (* (- 4) (* c c m m n))))
 (let ((?x718 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2285 (* (- 1) ?x718)))
 (let ((?x683 (* ?x409 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2501 (* (- 1) ?x683)))
 (let ((?x628 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))
 (let ((?x2404 (* 9 ?x628)))
 (let ((?x596 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))
 (let ((?x2609 (* 18 ?x596)))
 (let ((?x556 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x2287 (* (- 4) ?x556)))
 (let ((?x496 (* ?x409 ?x409 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2102 (* 9 ?x496)))
 (let ((?x402 (* k m m m m)))
 (let ((?x400 (* c m m m m)))
 (let ((?x390 (* k k k m m)))
 (let ((?x388 (* c k k m m)))
 (let ((?x172 (* c n)))
 (let ((?x2769 (* 324 ?x172)))
 (let ((?x55 (* k n)))
 (let ((?x2764 (* 324 ?x55)))
 (let ((?x2762 (* 468 k)))
 (let ((?x2763 (* 468 c)))
 (let ((?x1639 (+ ?x2763 ?x2762 (* (- 1152) (* k k)) ?x2764 ?x2769 ?x388 ?x390 (* 2 (* c k m m m)) (* 2 (* k k m m m)) ?x400 ?x402 (* (- 22) (* c c k n)) (* (- 44) (* c k k n)) (* (- 22) (* k k k n)) (* (- 130) (* c c m n)) (* (- 260) (* c k m n)) (* (- 324) (* k k n)) (* (- 130) (* k k m n)) (* 18 (* c c c k)) ?x2102 (* 28 (* k k k m n)) (* 74 (* c k k m n)) ?x2287 (* 18 (* c c c k n)) (* 59 (* c c k k n)) ?x2609 (* 64 (* c k k k n)) (* 23 (* k k k k n)) (* 18 (* c c c m n)) (* 64 (* c c k m n)) ?x2404 (* 59 (* c c k k)) (* 64 (* c k k k)) (* 23 (* k k k k)) (* 18 (* c c c m)) (* 64 (* c c k m)) ?x2501 (* 86 (* c k k m)) (* (- 648) (* c k n)) (* 40 (* k k k m)) ?x2285 (* (- 972) (* c c)) (* (- 2124) (* c k)) (* (- 324) (* c c n)) ?x2819 (* (- 8) (* c k m m n)) ?x2821 (* (- 22) (* c c m m)) (* (- 25) (* c k m m)) (* (- 3) (* k k m m)) ?x2867 (* (- 18) (* c k k n n)) ?x2870 ?x2871 (* (- 18) (* c k m n n)) ?x2874 ?x1546 ?x1548 (* (- 24) (* c m)) (* (- 24) (* k m)) (* (- 11) (* k m m)) (* (- 11) (* c m m)) ?x2882 ?x2883 ?x2286 (* 7 (* c m m m)) (* 7 (* k m m m)) ?x2439 ?x2117 ?x2247 (* (- 337) (* c c m)) ?x675 (* 23 (* k k k)) (* (- 13) (* c c k)) (* 10 (* c k k)) (* (- 325) (* k k m)) (* (- 662) (* c k m)) ?x581 ?x2068 ?x2284)))
 (let (($x324 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x286 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x237 (* (- 1) ?x49)))
 (let ((?x236 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x234 (= (+ ?x40 ?x44 ?x236 ?x237 (* 9 ?x172)) 4)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (and $x150 $x234 $x286 $x324 (not (= ?x1639 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x2326 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x409 (+ 1 n)))
 (let ((?x628 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))
 (let ((?x2404 (* 9 ?x628)))
 (let ((?x496 (* ?x409 ?x409 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2102 (* 9 ?x496)))
 (let ((?x596 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))
 (let ((?x2609 (* 18 ?x596)))
 (let ((?x556 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x2287 (* (- 4) ?x556)))
 (let ((?x1758 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x2286 (* (- 9) ?x1758)))
 (let ((?x718 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2285 (* (- 1) ?x718)))
 (let ((?x2577 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)))
 (let ((?x2284 (* (- 9) ?x2577)))
 (let ((?x2270 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)))
 (let ((?x675 (* (- 4) ?x2270)))
 (let ((?x2553 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2068 (* 5 ?x2553)))
 (let ((?x2544 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x581 (* (- 1) ?x2544)))
 (let ((?x683 (* ?x409 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2501 (* (- 1) ?x683)))
 (let ((?x2156 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2247 (* 9 ?x2156)))
 (let ((?x2126 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2117 (* 18 ?x2126)))
 (let ((?x2114 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70)))
 (let ((?x2439 (* 5 ?x2114)))
 (let ((?x2109 (* ?x334 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x2405 (+ ?x2109 (* (- 4) (* ?x409 ?x70 ?x69 ?x69)) ?x2439 (* 18 (* ?x409 ?x70 ?x69 ?x69 ?x69)) ?x2117 (* 5 (* ?x409 ?x70 ?x70 ?x69 ?x69)) ?x2247 ?x2501 (* (- 9) (* ?x409 ?x334 ?x334 ?x69 ?x69)) ?x581 ?x2068 ?x675 (* (- 9) (* ?x409 ?x409 ?x70 ?x69 ?x69)) ?x2284 (* 4 (* ?x334 ?x334 ?x69)) ?x2285 (* 9 (* ?x409 ?x334 ?x334 ?x69)) ?x2286 ?x2287 (* (- 5) (* ?x334 ?x334 ?x70 ?x69)) (* (- 18) (* ?x334 ?x334 ?x69 ?x69)) ?x2609 ?x2102 ?x2404)))
 (let (($x2418 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2442 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x237 (* (- 1) ?x49)))
 (let ((?x236 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (and $x150 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x236 ?x237) 4) $x2442 $x2418 (not (= ?x2405 0))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x2121 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x409 (+ 1 n)))
 (let ((?x2577 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)))
 (let ((?x2284 (* (- 9) ?x2577)))
 (let ((?x69 (+ c k)))
 (let ((?x2553 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2068 (* 5 ?x2553)))
 (let ((?x2544 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x581 (* (- 1) ?x2544)))
 (let ((?x2270 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)))
 (let ((?x675 (* (- 4) ?x2270)))
 (let ((?x2156 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2247 (* 9 ?x2156)))
 (let ((?x2126 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2117 (* 18 ?x2126)))
 (let ((?x2114 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70)))
 (let ((?x2439 (* 5 ?x2114)))
 (let ((?x1758 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x2286 (* (- 9) ?x1758)))
 (let ((?x2883 (* 108 (* k m n))))
 (let ((?x2882 (* 108 (* c m n))))
 (let ((?x1548 (* 9 (* k m m n))))
 (let ((?x1546 (* 9 (* c m m n))))
 (let ((?x2874 (* (- 9) (* k k m n n))))
 (let ((?x2871 (* (- 9) (* c c m n n))))
 (let ((?x2870 (* (- 9) (* k k k n n))))
 (let ((?x2867 (* (- 9) (* c c k n n))))
 (let ((?x2821 (* (- 4) (* k k m m n))))
 (let ((?x2819 (* (- 4) (* c c m m n))))
 (let ((?x718 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2285 (* (- 1) ?x718)))
 (let ((?x683 (* ?x409 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2501 (* (- 1) ?x683)))
 (let ((?x628 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))
 (let ((?x2404 (* 9 ?x628)))
 (let ((?x596 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))
 (let ((?x2609 (* 18 ?x596)))
 (let ((?x556 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x2287 (* (- 4) ?x556)))
 (let ((?x496 (* ?x409 ?x409 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2102 (* 9 ?x496)))
 (let ((?x402 (* k m m m m)))
 (let ((?x400 (* c m m m m)))
 (let ((?x390 (* k k k m m)))
 (let ((?x388 (* c k k m m)))
 (let ((?x172 (* c n)))
 (let ((?x2769 (* 324 ?x172)))
 (let ((?x55 (* k n)))
 (let ((?x2764 (* 324 ?x55)))
 (let ((?x2762 (* 468 k)))
 (let ((?x2763 (* 468 c)))
 (let ((?x1639 (+ ?x2763 ?x2762 (* (- 1152) (* k k)) ?x2764 ?x2769 ?x388 ?x390 (* 2 (* c k m m m)) (* 2 (* k k m m m)) ?x400 ?x402 (* (- 22) (* c c k n)) (* (- 44) (* c k k n)) (* (- 22) (* k k k n)) (* (- 130) (* c c m n)) (* (- 260) (* c k m n)) (* (- 324) (* k k n)) (* (- 130) (* k k m n)) (* 18 (* c c c k)) ?x2102 (* 28 (* k k k m n)) (* 74 (* c k k m n)) ?x2287 (* 18 (* c c c k n)) (* 59 (* c c k k n)) ?x2609 (* 64 (* c k k k n)) (* 23 (* k k k k n)) (* 18 (* c c c m n)) (* 64 (* c c k m n)) ?x2404 (* 59 (* c c k k)) (* 64 (* c k k k)) (* 23 (* k k k k)) (* 18 (* c c c m)) (* 64 (* c c k m)) ?x2501 (* 86 (* c k k m)) (* (- 648) (* c k n)) (* 40 (* k k k m)) ?x2285 (* (- 972) (* c c)) (* (- 2124) (* c k)) (* (- 324) (* c c n)) ?x2819 (* (- 8) (* c k m m n)) ?x2821 (* (- 22) (* c c m m)) (* (- 25) (* c k m m)) (* (- 3) (* k k m m)) ?x2867 (* (- 18) (* c k k n n)) ?x2870 ?x2871 (* (- 18) (* c k m n n)) ?x2874 ?x1546 ?x1548 (* (- 24) (* c m)) (* (- 24) (* k m)) (* (- 11) (* k m m)) (* (- 11) (* c m m)) ?x2882 ?x2883 ?x2286 (* 7 (* c m m m)) (* 7 (* k m m m)) ?x2439 ?x2117 ?x2247 (* (- 337) (* c c m)) ?x675 (* 23 (* k k k)) (* (- 13) (* c c k)) (* 10 (* c k k)) (* (- 325) (* k k m)) (* (- 662) (* c k m)) ?x581 ?x2068 ?x2284)))
 (let (($x324 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x286 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x237 (* (- 1) ?x49)))
 (let ((?x236 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x234 (= (+ ?x40 ?x44 ?x236 ?x237 (* 9 ?x172)) 4)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (let (($x914 (and $x150 $x234 $x286 $x324 (not (= ?x1639 0)))))
 (let ((?x2109 (* ?x334 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x2405 (+ ?x2109 (* (- 4) (* ?x409 ?x70 ?x69 ?x69)) ?x2439 (* 18 (* ?x409 ?x70 ?x69 ?x69 ?x69)) ?x2117 (* 5 (* ?x409 ?x70 ?x70 ?x69 ?x69)) ?x2247 ?x2501 (* (- 9) (* ?x409 ?x334 ?x334 ?x69 ?x69)) ?x581 ?x2068 ?x675 (* (- 9) (* ?x409 ?x409 ?x70 ?x69 ?x69)) ?x2284 (* 4 (* ?x334 ?x334 ?x69)) ?x2285 (* 9 (* ?x409 ?x334 ?x334 ?x69)) ?x2286 ?x2287 (* (- 5) (* ?x334 ?x334 ?x70 ?x69)) (* (- 18) (* ?x334 ?x334 ?x69 ?x69)) ?x2609 ?x2102 ?x2404)))
 (let (($x2418 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2442 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x2407 (and $x150 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x236 ?x237) 4) $x2442 $x2418 (not (= ?x2405 0)))))
 (rewrite (= $x2407 $x914)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2246 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x409 (+ 1 n)))
 (let ((?x628 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))
 (let ((?x718 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2544 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x683 (* ?x409 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x650 (+ (* (- 1) (* ?x334 ?x334 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x70 ?x69 ?x69)) (* (- 5) (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70)) (* (- 18) (* ?x409 ?x70 ?x69 ?x69 ?x69)) (* (- 18) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)) (* (- 5) (* ?x409 ?x70 ?x70 ?x69 ?x69)) (* (- 9) (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)) ?x683 (* 9 (* ?x409 ?x334 ?x334 ?x69 ?x69)) ?x2544 (* (- 5) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)) (* 9 (* ?x409 ?x409 ?x70 ?x69 ?x69)) (* 9 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)) (* (- 4) (* ?x334 ?x334 ?x69)) ?x718 (* (- 9) (* ?x409 ?x334 ?x334 ?x69)) (* 9 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* 5 (* ?x334 ?x334 ?x70 ?x69)) (* 18 (* ?x334 ?x334 ?x69 ?x69)) (* (- 18) (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)) (* (- 9) (* ?x409 ?x409 ?x70 ?x69 ?x69 ?x69)) (* (- 9) ?x628))))
 (let (($x2418 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2395 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x2085 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (and $x150 (= ?x2085 (- 4)) $x2395 $x2418 (not (= ?x650 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x2078 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x409 (+ 1 n)))
 (let ((?x628 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))
 (let ((?x2404 (* 9 ?x628)))
 (let ((?x496 (* ?x409 ?x409 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2102 (* 9 ?x496)))
 (let ((?x596 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))
 (let ((?x2609 (* 18 ?x596)))
 (let ((?x556 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x2287 (* (- 4) ?x556)))
 (let ((?x1758 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x2286 (* (- 9) ?x1758)))
 (let ((?x718 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2285 (* (- 1) ?x718)))
 (let ((?x2577 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)))
 (let ((?x2284 (* (- 9) ?x2577)))
 (let ((?x2270 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)))
 (let ((?x675 (* (- 4) ?x2270)))
 (let ((?x2553 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2068 (* 5 ?x2553)))
 (let ((?x2544 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x581 (* (- 1) ?x2544)))
 (let ((?x683 (* ?x409 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2501 (* (- 1) ?x683)))
 (let ((?x2156 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2247 (* 9 ?x2156)))
 (let ((?x2126 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2117 (* 18 ?x2126)))
 (let ((?x2114 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70)))
 (let ((?x2439 (* 5 ?x2114)))
 (let ((?x2109 (* ?x334 ?x334 ?x70 ?x70 ?x69)))
 (let ((?x2405 (+ ?x2109 (* (- 4) (* ?x409 ?x70 ?x69 ?x69)) ?x2439 (* 18 (* ?x409 ?x70 ?x69 ?x69 ?x69)) ?x2117 (* 5 (* ?x409 ?x70 ?x70 ?x69 ?x69)) ?x2247 ?x2501 (* (- 9) (* ?x409 ?x334 ?x334 ?x69 ?x69)) ?x581 ?x2068 ?x675 (* (- 9) (* ?x409 ?x409 ?x70 ?x69 ?x69)) ?x2284 (* 4 (* ?x334 ?x334 ?x69)) ?x2285 (* 9 (* ?x409 ?x334 ?x334 ?x69)) ?x2286 ?x2287 (* (- 5) (* ?x334 ?x334 ?x70 ?x69)) (* (- 18) (* ?x334 ?x334 ?x69 ?x69)) ?x2609 ?x2102 ?x2404)))
 (let (($x2418 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2442 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x237 (* (- 1) ?x49)))
 (let ((?x236 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (let (($x2407 (and $x150 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x236 ?x237) 4) $x2442 $x2418 (not (= ?x2405 0)))))
 (let ((?x650 (+ (* (- 1) ?x2109) (* 4 (* ?x409 ?x70 ?x69 ?x69)) (* (- 5) ?x2114) (* (- 18) (* ?x409 ?x70 ?x69 ?x69 ?x69)) (* (- 18) ?x2126) (* (- 5) (* ?x409 ?x70 ?x70 ?x69 ?x69)) (* (- 9) ?x2156) ?x683 (* 9 (* ?x409 ?x334 ?x334 ?x69 ?x69)) ?x2544 (* (- 5) ?x2553) (* 4 ?x2270) (* 9 (* ?x409 ?x409 ?x70 ?x69 ?x69)) (* 9 ?x2577) (* (- 4) (* ?x334 ?x334 ?x69)) ?x718 (* (- 9) (* ?x409 ?x334 ?x334 ?x69)) (* 9 ?x1758) (* 4 ?x556) (* 5 (* ?x334 ?x334 ?x70 ?x69)) (* 18 (* ?x334 ?x334 ?x69 ?x69)) (* (- 18) ?x596) (* (- 9) ?x496) (* (- 9) ?x628))))
 (let (($x2395 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x2085 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x2420 (and $x150 (= ?x2085 (- 4)) $x2395 $x2418 (not (= ?x650 0)))))
 (rewrite (= $x2420 $x2407)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x117 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x73 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x75 (+ (* (- 1) ?x69 ?x70 ?x70 ?x71 ?x71) (* 4 ?x69 ?x69 ?x70 ?x73))))
 (let ((?x82 (- (- ?x75 (* 5 ?x70 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73)) (* 18 ?x69 ?x69 ?x69 ?x70 ?x73))))
 (let ((?x84 (- (- ?x82 (* 18 ?x69 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73)) (* 5 ?x69 ?x69 ?x70 ?x70 ?x73))))
 (let ((?x89 (+ (- ?x84 (* 9 ?x69 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73 ?x73)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x73) (* 9 ?x69 ?x69 ?x71 ?x71 ?x73) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73))))
 (let ((?x95 (+ (- ?x89 (* 5 ?x69 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73)) (* 4 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73) (* 9 ?x69 ?x69 ?x70 ?x73 ?x73) (* 9 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73))))
 (let ((?x99 (+ (- ?x95 (* 4 ?x69 ?x71 ?x71)) (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73))))
 (let ((?x106 (+ (- ?x99 (* 9 ?x69 ?x71 ?x71 ?x73)) (* 9 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73 ?x73) (* 4 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73) (* 5 ?x69 ?x70 ?x71 ?x71) (* 18 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x111 (- (- ?x106 (* 18 ?x69 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73)) (* 9 ?x69 ?x69 ?x69 ?x70 ?x73 ?x73))))
 (let (($x113 (= (- ?x111 (* 9 ?x69 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x113))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x2429 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x409 (+ 1 n)))
 (let ((?x628 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))
 (let ((?x718 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2544 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x683 (* ?x409 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x650 (+ (* (- 1) (* ?x334 ?x334 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x70 ?x69 ?x69)) (* (- 5) (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70)) (* (- 18) (* ?x409 ?x70 ?x69 ?x69 ?x69)) (* (- 18) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)) (* (- 5) (* ?x409 ?x70 ?x70 ?x69 ?x69)) (* (- 9) (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)) ?x683 (* 9 (* ?x409 ?x334 ?x334 ?x69 ?x69)) ?x2544 (* (- 5) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)) (* 9 (* ?x409 ?x409 ?x70 ?x69 ?x69)) (* 9 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)) (* (- 4) (* ?x334 ?x334 ?x69)) ?x718 (* (- 9) (* ?x409 ?x334 ?x334 ?x69)) (* 9 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* 5 (* ?x334 ?x334 ?x70 ?x69)) (* 18 (* ?x334 ?x334 ?x69 ?x69)) (* (- 18) (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)) (* (- 9) (* ?x409 ?x409 ?x70 ?x69 ?x69 ?x69)) (* (- 9) ?x628))))
 (let (($x2418 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2395 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x2085 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (let (($x2420 (and $x150 (= ?x2085 (- 4)) $x2395 $x2418 (not (= ?x650 0)))))
 (let ((?x73 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x75 (+ (* (- 1) ?x69 ?x70 ?x70 ?x71 ?x71) (* 4 ?x69 ?x69 ?x70 ?x73))))
 (let ((?x82 (- (- ?x75 (* 5 ?x70 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73)) (* 18 ?x69 ?x69 ?x69 ?x70 ?x73))))
 (let ((?x84 (- (- ?x82 (* 18 ?x69 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73)) (* 5 ?x69 ?x69 ?x70 ?x70 ?x73))))
 (let ((?x89 (+ (- ?x84 (* 9 ?x69 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73 ?x73)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x73) (* 9 ?x69 ?x69 ?x71 ?x71 ?x73) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73))))
 (let ((?x95 (+ (- ?x89 (* 5 ?x69 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73)) (* 4 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73) (* 9 ?x69 ?x69 ?x70 ?x73 ?x73) (* 9 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73))))
 (let ((?x99 (+ (- ?x95 (* 4 ?x69 ?x71 ?x71)) (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73))))
 (let ((?x106 (+ (- ?x99 (* 9 ?x69 ?x71 ?x71 ?x73)) (* 9 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73 ?x73) (* 4 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73) (* 5 ?x69 ?x70 ?x71 ?x71) (* 18 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x111 (- (- ?x106 (* 18 ?x69 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73)) (* 9 ?x69 ?x69 ?x69 ?x70 ?x73 ?x73))))
 (let (($x113 (= (- ?x111 (* 9 ?x69 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x116 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x113)))))
 (rewrite (= $x116 $x2420))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x118 (asserted $x117)))
 (let ((@x2243 (mp (mp @x118 (quant-intro (proof-bind ?x2429) (= $x117 $x2246)) $x2246) (rewrite (= $x2246 $x2246)) $x2246)))
 (let ((@x2336 (mp (mp @x2243 (quant-intro (proof-bind ?x2078) (= $x2246 $x2326)) $x2326) (quant-intro (proof-bind ?x2121) (= $x2326 $x2443)) $x2443)))
 (let ((@x2355 (mp (mp~ @x2336 (sk (~ $x2443 $x2374)) $x2374) (rewrite (= $x2374 $x2301)) $x2301)))
 (let ((@x2151 (and-elim @x2355 $x2391)))
 (let ((@x2011 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2391) $x736)) @x2151 $x736)))
 (let (($x738 (>= ?x2479 1)))
 (let ((@x707 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2391) $x738)) @x2151 $x738)))
 (let (($x2397 (<= ?x2256 4)))
 (let ((@x2384 (and-elim @x2355 $x2382)))
 (let ((@x1035 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2382) $x2397)) @x2384 $x2397)))
 (let (($x2128 (>= ?x2256 4)))
 (let ((@x379 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2382) $x2128)) @x2384 $x2128)))
 (let (($x606 (<= ?x2162 1)))
 (let ((@x2093 (and-elim @x2355 $x2261)))
 (let ((@x703 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2261) $x606)) @x2093 $x606)))
 (let (($x814 (>= ?x2162 1)))
 (let ((@x1982 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2261) $x814)) @x2093 $x814)))
 (let (($x731 (<= ?x2112 6)))
 (let ((@x2299 (and-elim @x2355 $x953)))
 (let ((@x438 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x953) $x731)) @x2299 $x731)))
 (let (($x785 (>= ?x2112 6)))
 (let ((@x760 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x953) $x785)) @x2299 $x785)))
 (let (($x1984 (not (<= ?x2354 0))))
 (let (($x2323 (>= ?x2354 0)))
 (let ((@x699 ((_ th-lemma arith) (hypothesis (not $x2323)) @x1982 @x703 @x1982 @x703 @x760 @x438 @x1982 @x703 @x707 @x2011 @x1982 @x703 @x379 @x1035 @x1982 @x703 @x760 @x438 @x760 @x438 @x1982 @x703 @x379 @x1035 @x707 @x2011 false)))
 (let ((@x436 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2169 $x1984 (not $x2323))) (and-elim @x2355 $x2153) (or $x1984 (not $x2323)))))
 ((_ th-lemma arith) (unit-resolution @x436 (lemma @x699 $x2323) $x1984) @x1982 @x703 @x1982 @x703 @x760 @x438 @x1982 @x703 @x707 @x2011 @x1982 @x703 @x379 @x1035 @x1982 @x703 @x760 @x438 @x760 @x438 @x1982 @x703 @x379 @x1035 @x707 @x2011 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        21
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             855
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 136
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                4.19
 :memory                    3.49
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1984313
 :num-checks                1
 :propagations              11
 :rlimit-count              20088
 :time                      0.02
 :total-time                0.03)
