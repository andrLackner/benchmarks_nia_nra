unsat
((set-logic NRA)
(declare-fun d!6 () Real)
(declare-fun b!7 () Real)
(declare-fun y!5 () Real)
(declare-fun a!8 () Real)
(proof
(let ((?x327 (* d00 b!7)))
 (let ((?x509 (+ ?x327 (* (- 1.0) (* b00 d!6)))))
 (let (($x204 (>= ?x509 0.0)))
 (let (($x299 (= 0.0 ?x509)))
 (let ((@x249 (symm (commutativity (= $x299 (= ?x509 0.0))) (= (= ?x509 0.0) $x299))))
 (let (($x213 (= ?x509 0.0)))
 (let ((?x181 (+ (* a00 d!6) (* (- 2.0) (* y00 b!7)) (* (- 1.0) (* a!8 d!6)) (* 2.0 (* b!7 y!5)))))
 (let ((?x89 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x297 (= (+ ?x30 ?x89 (* (- 1.0) (* d00 a!8)) (* 2.0 (* b00 y!5))) 0.0)))
 (let ((?x600 (* b!7 b!7 b!7 d!6)))
 (let ((?x162 (* (- (/ 1.0 16.0)) ?x600)))
 (let ((?x599 (* b!7 b!7 b!7 a!8 d!6 d!6 d!6 d!6)))
 (let ((?x371 (* (/ 1.0 128.0) ?x599)))
 (let ((?x597 (* b!7 b!7 b!7 a!8 y!5 d!6 d!6 d!6)))
 (let ((?x217 (* (/ 1.0 64.0) ?x597)))
 (let ((?x514 (* b!7 b!7 b!7 b!7 y!5 d!6 d!6 d!6)))
 (let ((?x326 (* (/ 1.0 64.0) ?x514)))
 (let ((?x507 (* b!7 b!7 b!7 b!7 y!5 d!6)))
 (let ((?x440 (* (- (/ 1.0 8.0)) ?x507)))
 (let ((?x437 (* b!7 b!7 b!7 b!7 d!6 d!6)))
 (let ((?x410 (* (- (/ 1.0 16.0)) ?x437)))
 (let ((?x431 (* b!7 b!7 a!8 a!8 y!5 d!6)))
 (let ((?x170 (* (- (/ 1.0 8.0)) ?x431)))
 (let ((?x390 (* b!7 b!7 b!7 b!7 b!7 d!6)))
 (let ((?x236 (* (/ 1.0 8.0) ?x390)))
 (let ((?x349 (* b!7 b!7 a!8 a!8 a!8 d!6)))
 (let ((?x414 (* (/ 1.0 8.0) ?x349)))
 (let ((?x313 (* b!7 b!7 b!7 a!8 d!6 d!6)))
 (let ((?x184 (* (- (/ 1.0 8.0)) ?x313)))
 (let ((?x256 (* b!7 b!7 a!8 a!8 d!6 d!6)))
 (let ((?x180 (* (- (/ 1.0 16.0)) ?x256)))
 (let ((?x247 (* b!7 b!7 b!7 a!8 a!8 d!6)))
 (let ((?x152 (* (/ 3.0 8.0) ?x247)))
 (let ((?x227 (* b!7 b!7 b!7 b!7 a!8 d!6)))
 (let ((?x263 (* (/ 3.0 8.0) ?x227)))
 (let ((?x211 (* b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6)))
 (let ((?x264 (* (/ 1.0 128.0) ?x211)))
 (let ((?x200 (* b!7 b!7 b!7 a!8 y!5 d!6)))
 (let ((?x246 (* (- (/ 1.0 4.0)) ?x200)))
 (let ((?x165 (* b!7 b!7 b!7 y!5)))
 (let ((?x527 (* (- (/ 1.0 8.0)) ?x165)))
 (let ((?x382 (+ ?x527 ?x246 ?x264 ?x263 ?x152 ?x180 ?x184 ?x414 ?x236 ?x170 ?x410 ?x440 ?x326 ?x217 ?x371 ?x162)))
 (let ((?x399 (* (+ (* (- (/ 1.0 2.0)) ?x327) (* (/ 1.0 2.0) (* b00 d!6))) ?x382)))
 (let (($x512 (= ?x399 0.0)))
 (let (($x369 (not $x512)))
 (let ((?x528 (* (/ 1.0 128.0) (* d00 b!7 b!7 b!7 b!7 a!8 y!5 d!6 d!6 d!6))))
 (let ((?x145 (* (- (/ 1.0 128.0)) (* b00 b!7 b!7 b!7 a!8 y!5 d!6 d!6 d!6 d!6))))
 (let ((?x598 (+ (* (/ 1.0 16.0) (* d00 b!7 b!7 b!7 a!8 a!8 a!8 d!6)) ?x145 (* (- (/ 1.0 16.0)) (* b00 b!7 b!7 a!8 a!8 a!8 d!6 d!6)) (* (- (/ 1.0 16.0)) (* d00 b!7 b!7 b!7 b!7 y!5)) (* (- (/ 1.0 16.0)) (* d00 b!7 b!7 b!7 a!8 a!8 y!5 d!6)) (* (/ 1.0 16.0) (* b00 b!7 b!7 a!8 a!8 y!5 d!6 d!6)) (* (/ 1.0 16.0) (* b00 b!7 b!7 b!7 y!5 d!6)) ?x528)))
 (let (($x317 (= ?x598 0.0)))
 (let (($x376 (not $x317)))
 (let (($x271 (or $x376 $x369)))
 (let (($x517 (and $x271 $x297 $x213 (= ?x181 0.0))))
 (let ((?x183 (+ (* d!6 a!8) (* (- 2.0) (* y!5 b!7)) (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00)))))
 (let (($x395 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x89 (* 2.0 (* y!5 b00))) 0.0)))
 (let ((?x157 (+ (* (/ 1.0 8.0) (* d!6 b!7 b!7 a!8 a!8 a!8)) (* (- (/ 1.0 8.0)) (* y!5 d!6 b!7 b!7 a!8 a!8)) (* (/ 1.0 8.0) (* d!6 b!7 b!7 b!7 b!7 b!7)) (* (/ 3.0 8.0) (* d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 3.0 8.0) (* d!6 b!7 b!7 b!7 a!8 a!8)) (* (- (/ 1.0 8.0)) (* y!5 b!7 b!7 b!7)) (* (/ 1.0 64.0) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (- (/ 1.0 8.0)) (* y!5 d!6 b!7 b!7 b!7 b!7)) (* (- (/ 1.0 4.0)) (* y!5 d!6 b!7 b!7 b!7 a!8)) (* (- (/ 1.0 16.0)) (* d!6 d!6 b!7 b!7 b!7 b!7)) (* (- (/ 1.0 8.0)) (* d!6 d!6 b!7 b!7 b!7 a!8)) (* (- (/ 1.0 16.0)) (* d!6 d!6 b!7 b!7 a!8 a!8)) (* (- (/ 1.0 16.0)) (* d!6 b!7 b!7 b!7)) (* (/ 1.0 64.0) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 1.0 128.0) (* d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 1.0 128.0) (* d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8)))))
 (let (($x413 (= (* (+ (* (- (/ 1.0 2.0)) (* b!7 d00)) (* (/ 1.0 2.0) (* d!6 b00))) ?x157) 0.0)))
 (let ((?x554 (* (- (/ 1.0 128.0)) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 b00))))
 (let ((?x362 (* (/ 1.0 128.0) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 d00))))
 (let ((?x557 (+ (* (/ 1.0 16.0) (* d!6 b!7 b!7 b!7 a!8 a!8 a!8 d00)) (* (- (/ 1.0 16.0)) (* d!6 d!6 b!7 b!7 a!8 a!8 a!8 b00)) (* (- (/ 1.0 16.0)) (* y!5 d!6 b!7 b!7 b!7 a!8 a!8 d00)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 b!7 b!7 a!8 a!8 b00)) (* (- (/ 1.0 16.0)) (* y!5 b!7 b!7 b!7 b!7 d00)) (* (/ 1.0 16.0) (* y!5 d!6 b!7 b!7 b!7 b00)) ?x362 ?x554)))
 (let (($x118 (and (or (not (= ?x557 0.0)) (not $x413)) $x395 (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) (= ?x183 0.0))))
 (let (($x579 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x131 (* (- 2.0) (* y b))))
 (let ((?x106 (* d a)))
 (let (($x166 (= (+ ?x106 ?x131 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x92 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x89 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x121 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x89 (* 2.0 (* y b00))) 0.0)))
 (let ((?x251 (* (/ 1.0 64.0) (* y d d d b b b a))))
 (let ((?x225 (* (- (/ 1.0 8.0)) (* y b b b))))
 (let ((?x195 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x130 (* (/ 1.0 8.0) (* d b b a a a))))
 (let ((?x642 (+ ?x130 ?x195 (* (/ 1.0 8.0) (* d b b b b b)) (* (/ 3.0 8.0) (* d b b b b a)) (* (/ 3.0 8.0) (* d b b b a a)) ?x225 ?x251 (* (- (/ 1.0 8.0)) (* y d b b b b)) (* (- (/ 1.0 4.0)) (* y d b b b a)) (* (- (/ 1.0 16.0)) (* d d b b b b)) (* (- (/ 1.0 8.0)) (* d d b b b a)) (* (- (/ 1.0 16.0)) (* d d b b a a)) (* (- (/ 1.0 16.0)) (* d b b b)) (* (/ 1.0 64.0) (* y d d d b b b b)) (* (/ 1.0 128.0) (* d d d d b b b b)) (* (/ 1.0 128.0) (* d d d d b b b a)))))
 (let (($x151 (= (* (+ (* (- (/ 1.0 2.0)) (* b d00)) (* (/ 1.0 2.0) (* d b00))) ?x642) 0.0)))
 (let ((?x323 (+ (* (/ 1.0 16.0) (* d b b b a a a d00)) (* (- (/ 1.0 16.0)) (* d d b b a a a b00)) (* (- (/ 1.0 16.0)) (* y d b b b a a d00)) (* (/ 1.0 16.0) (* y d d b b a a b00)) (* (- (/ 1.0 16.0)) (* y b b b b d00)) (* (/ 1.0 16.0) (* y d b b b b00)) (* (/ 1.0 128.0) (* y d d d b b b b a d00)) (* (- (/ 1.0 128.0)) (* y d d d d b b b a b00)))))
 (let (($x158 (or (not (= ?x323 0.0)) (not $x151))))
 (and $x158 $x121 $x92 $x166)))))))))))))))) :qid k!33))
 ))
 (let (($x611 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x131 (* (- 2.0) (* y b))))
 (let ((?x106 (* d a)))
 (let (($x186 (= (+ ?x106 ?x131 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x111 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x89 (* (- 2.0) (* b00 y00))))
 (let (($x536 (= (+ ?x89 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let ((?x207 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x66 (+ a b)))
 (let ((?x491 (+ (* (/ 1.0 8.0) (* ?x66 ?x66 ?x66 d b b)) (* (- (/ 1.0 8.0)) (* ?x66 ?x66 ?x207 d b b)) (* (- (/ 1.0 8.0)) (* ?x207 b b b)) (* (/ 1.0 64.0) (* ?x66 ?x207 d d d b b b)))))
 (let ((?x177 (+ (* (- (/ 1.0 2.0)) (* d00 b)) (* (/ 1.0 2.0) (* b00 d)))))
 (let ((?x251 (* (/ 1.0 64.0) (* y d d d b b b a))))
 (let ((?x225 (* (- (/ 1.0 8.0)) (* y b b b))))
 (let ((?x195 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x130 (* (/ 1.0 8.0) (* d b b a a a))))
 (let (($x175 (or (not (= (* ?x177 (+ ?x130 ?x195 ?x225 ?x251)) 0.0)) (not (= (* ?x177 ?x491) 0.0)))))
 (and $x175 $x536 $x111 $x186))))))))))))))))) :qid k!33))
 ))
 (let ((?x585 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x131 (* (- 2.0) (* y b))))
 (let ((?x106 (* d a)))
 (let (($x166 (= (+ ?x106 ?x131 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x92 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x89 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x121 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x89 (* 2.0 (* y b00))) 0.0)))
 (let ((?x251 (* (/ 1.0 64.0) (* y d d d b b b a))))
 (let ((?x225 (* (- (/ 1.0 8.0)) (* y b b b))))
 (let ((?x195 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x130 (* (/ 1.0 8.0) (* d b b a a a))))
 (let ((?x642 (+ ?x130 ?x195 (* (/ 1.0 8.0) (* d b b b b b)) (* (/ 3.0 8.0) (* d b b b b a)) (* (/ 3.0 8.0) (* d b b b a a)) ?x225 ?x251 (* (- (/ 1.0 8.0)) (* y d b b b b)) (* (- (/ 1.0 4.0)) (* y d b b b a)) (* (- (/ 1.0 16.0)) (* d d b b b b)) (* (- (/ 1.0 8.0)) (* d d b b b a)) (* (- (/ 1.0 16.0)) (* d d b b a a)) (* (- (/ 1.0 16.0)) (* d b b b)) (* (/ 1.0 64.0) (* y d d d b b b b)) (* (/ 1.0 128.0) (* d d d d b b b b)) (* (/ 1.0 128.0) (* d d d d b b b a)))))
 (let (($x151 (= (* (+ (* (- (/ 1.0 2.0)) (* b d00)) (* (/ 1.0 2.0) (* d b00))) ?x642) 0.0)))
 (let ((?x323 (+ (* (/ 1.0 16.0) (* d b b b a a a d00)) (* (- (/ 1.0 16.0)) (* d d b b a a a b00)) (* (- (/ 1.0 16.0)) (* y d b b b a a d00)) (* (/ 1.0 16.0) (* y d d b b a a b00)) (* (- (/ 1.0 16.0)) (* y b b b b d00)) (* (/ 1.0 16.0) (* y d b b b b00)) (* (/ 1.0 128.0) (* y d d d b b b b a d00)) (* (- (/ 1.0 128.0)) (* y d d d d b b b a b00)))))
 (let (($x158 (or (not (= ?x323 0.0)) (not $x151))))
 (let (($x587 (and $x158 $x121 $x92 $x166)))
 (let (($x186 (= (+ ?x106 ?x131 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x111 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let (($x536 (= (+ ?x89 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let ((?x207 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x66 (+ a b)))
 (let ((?x491 (+ (* (/ 1.0 8.0) (* ?x66 ?x66 ?x66 d b b)) (* (- (/ 1.0 8.0)) (* ?x66 ?x66 ?x207 d b b)) (* (- (/ 1.0 8.0)) (* ?x207 b b b)) (* (/ 1.0 64.0) (* ?x66 ?x207 d d d b b b)))))
 (let ((?x177 (+ (* (- (/ 1.0 2.0)) (* d00 b)) (* (/ 1.0 2.0) (* b00 d)))))
 (let (($x175 (or (not (= (* ?x177 (+ ?x130 ?x195 ?x225 ?x251)) 0.0)) (not (= (* ?x177 ?x491) 0.0)))))
 (let (($x607 (and $x175 $x536 $x111 $x186)))
 (rewrite (= $x607 $x587))))))))))))))))))))))))))))
 ))
 (let (($x182 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x207 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x66 (+ a b)))
 (let ((?x491 (+ (* (/ 1.0 8.0) (* ?x66 ?x66 ?x66 d b b)) (* (- (/ 1.0 8.0)) (* ?x66 ?x66 ?x207 d b b)) (* (- (/ 1.0 8.0)) (* ?x207 b b b)) (* (/ 1.0 64.0) (* ?x66 ?x207 d d d b b b)))))
 (let ((?x177 (+ (* (- (/ 1.0 2.0)) (* d00 b)) (* (/ 1.0 2.0) (* b00 d)))))
 (let ((?x251 (* (/ 1.0 64.0) (* y d d d b b b a))))
 (let ((?x225 (* (- (/ 1.0 8.0)) (* y b b b))))
 (let ((?x195 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x130 (* (/ 1.0 8.0) (* d b b a a a))))
 (let (($x175 (or (not (= (* ?x177 (+ ?x130 ?x195 ?x225 ?x251)) 0.0)) (not (= (* ?x177 ?x491) 0.0)))))
 (let ((?x131 (* (- 2.0) (* y b))))
 (let ((?x106 (* d a)))
 (let (($x186 (= (+ ?x106 ?x131 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x111 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x89 (* (- 2.0) (* b00 y00))))
 (let (($x536 (= (+ ?x89 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (and $x536 $x111 $x186 $x175))))))))))))))))) :qid k!33))
 ))
 (let (($x80 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x53 (/ d 2.0)))
 (let ((?x68 (+ y ?x53)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x66 (+ a b)))
 (let ((?x71 (- (* ?x66 ?x66 ?x66 ?x51 ?x51 ?x53) (* ?x66 ?x66 ?x51 ?x51 ?x53 ?x68))))
 (let ((?x74 (+ (- ?x71 (* ?x51 ?x51 ?x51 ?x68)) (* ?x66 ?x51 ?x51 ?x51 ?x53 ?x53 ?x53 ?x68))))
 (let ((?x55 (+ (* (- 1.0) ?x51 d00) (* b00 ?x53))))
 (let ((?x59 (- (* a a a ?x51 ?x51 ?x53) (* a a ?x51 ?x51 ?x53 y))))
 (let ((?x62 (+ (- ?x59 (* ?x51 ?x51 ?x51 y)) (* a ?x51 ?x51 ?x51 ?x53 ?x53 ?x53 y))))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let ((?x30 (* a00 d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= (* ?x55 ?x62) 0.0)) (not (= (* ?x55 ?x74) 0.0)))))))))))))))))) :qid k!33))
 ))
 (let ((?x508 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x207 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x66 (+ a b)))
 (let ((?x491 (+ (* (/ 1.0 8.0) (* ?x66 ?x66 ?x66 d b b)) (* (- (/ 1.0 8.0)) (* ?x66 ?x66 ?x207 d b b)) (* (- (/ 1.0 8.0)) (* ?x207 b b b)) (* (/ 1.0 64.0) (* ?x66 ?x207 d d d b b b)))))
 (let ((?x177 (+ (* (- (/ 1.0 2.0)) (* d00 b)) (* (/ 1.0 2.0) (* b00 d)))))
 (let ((?x251 (* (/ 1.0 64.0) (* y d d d b b b a))))
 (let ((?x225 (* (- (/ 1.0 8.0)) (* y b b b))))
 (let ((?x195 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x130 (* (/ 1.0 8.0) (* d b b a a a))))
 (let (($x175 (or (not (= (* ?x177 (+ ?x130 ?x195 ?x225 ?x251)) 0.0)) (not (= (* ?x177 ?x491) 0.0)))))
 (let ((?x131 (* (- 2.0) (* y b))))
 (let ((?x106 (* d a)))
 (let (($x186 (= (+ ?x106 ?x131 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x111 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x89 (* (- 2.0) (* b00 y00))))
 (let (($x536 (= (+ ?x89 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x477 (and $x536 $x111 $x186 $x175)))
 (let ((?x53 (/ d 2.0)))
 (let ((?x68 (+ y ?x53)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x71 (- (* ?x66 ?x66 ?x66 ?x51 ?x51 ?x53) (* ?x66 ?x66 ?x51 ?x51 ?x53 ?x68))))
 (let ((?x74 (+ (- ?x71 (* ?x51 ?x51 ?x51 ?x68)) (* ?x66 ?x51 ?x51 ?x51 ?x53 ?x53 ?x53 ?x68))))
 (let ((?x55 (+ (* (- 1.0) ?x51 d00) (* b00 ?x53))))
 (let ((?x59 (- (* a a a ?x51 ?x51 ?x53) (* a a ?x51 ?x51 ?x53 y))))
 (let ((?x62 (+ (- ?x59 (* ?x51 ?x51 ?x51 y)) (* a ?x51 ?x51 ?x51 ?x53 ?x53 ?x53 y))))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (let (($x79 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= (* ?x55 ?x62) 0.0)) (not (= (* ?x55 ?x74) 0.0))))))
 (rewrite (= $x79 $x477)))))))))))))))))))))))))))))))))
 ))
 (let ((@x81 (asserted $x80)))
 (let ((@x612 (mp (mp @x81 (quant-intro (proof-bind ?x508) (= $x80 $x182)) $x182) (rewrite (= $x182 $x611)) $x611)))
 (let ((@x150 (mp~ (mp @x612 (quant-intro (proof-bind ?x585) (= $x611 $x579)) $x579) (sk (~ $x579 $x118)) $x118)))
 (let ((@x596 (mp @x150 (rewrite (= $x118 $x517)) $x517)))
 (let ((@x405 (mp (and-elim @x596 $x213) @x249 $x299)))
 (let ((@x415 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x299) $x204)) @x405 $x204)))
 (let (($x511 (<= ?x509 0.0)))
 (let ((@x255 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x299) $x511)) @x405 $x511)))
 (let (($x357 (<= ?x598 0.0)))
 (let (($x692 (not $x357)))
 (let (($x123 (>= ?x598 0.0)))
 (let ((@x302 (unit-resolution ((_ th-lemma arith) (or $x123 (not $x511) (not $x204))) (hypothesis (not $x123)) @x255 @x415 false)))
 (let (($x403 (= 0.0 ?x598)))
 (let (($x701 (not $x403)))
 (let ((@x703 (monotonicity (symm (commutativity (= $x403 $x317)) (= $x317 $x403)) (= $x376 $x701))))
 (let ((?x270 (+ (* (/ 1.0 8.0) ?x431) (* (/ 1.0 16.0) ?x437) (* (/ 1.0 8.0) ?x507) (* (- (/ 1.0 64.0)) ?x514) (* (- (/ 1.0 64.0)) ?x597) (* (- (/ 1.0 128.0)) ?x599) (* (/ 1.0 16.0) ?x600) (* (/ 1.0 8.0) ?x165) (* (/ 1.0 4.0) ?x200) (* (- (/ 1.0 128.0)) ?x211) (* (- (/ 3.0 8.0)) ?x227) (* (- (/ 3.0 8.0)) ?x247) (* (/ 1.0 16.0) ?x256) (* (/ 1.0 8.0) ?x313) (* (- (/ 1.0 8.0)) ?x349) (* (- (/ 1.0 8.0)) ?x390))))
 (let (($x226 (>= ?x270 0.0)))
 (let (($x442 (not $x226)))
 (let ((?x367 (+ ?x170 ?x410 ?x440 ?x326 ?x217 ?x371 ?x162 ?x527 ?x246 ?x264 ?x263 ?x152 ?x180 ?x184 ?x414 ?x236)))
 (let (($x266 (<= ?x367 0.0)))
 (let (($x385 (not $x266)))
 (let (($x397 (= 0.0 ?x367)))
 (let (($x308 (not $x397)))
 (let ((@x218 (hypothesis $x369)))
 (let (($x384 (= ?x367 0.0)))
 (let (($x438 (not $x384)))
 (let ((@x392 (unit-resolution (unit-resolution ((_ th-lemma arith) (or $x438 $x512)) @x218 $x438) (symm (hypothesis $x397) $x384) false)))
 (let ((@x232 (lemma @x392 (or $x308 $x512))))
 (let (($x142 (>= ?x367 0.0)))
 (let (($x526 (<= ?x270 0.0)))
 (let (($x523 (<= ?x399 0.0)))
 (let (($x254 (not $x523)))
 (let (($x215 (>= ?x399 0.0)))
 (let ((@x318 (commutativity (= (= 0.0 ?x399) $x512))))
 (let (($x222 (= 0.0 ?x399)))
 (let (($x233 (not $x222)))
 (let (($x366 (not $x215)))
 (let ((@x380 (hypothesis $x366)))
 (let ((@x457 (mp (unit-resolution ((_ th-lemma arith triangle-eq) (or $x233 $x215)) @x380 $x233) (monotonicity @x318 (= $x233 $x369)) $x369)))
 (let ((?x224 (* (- (/ 1.0 2.0)) ?x327)))
 (let ((?x408 (* b00 d!6)))
 (let ((?x521 (* (/ 1.0 2.0) ?x408)))
 (let ((?x590 (+ ?x521 ?x224)))
 (let (($x533 (<= ?x590 0.0)))
 (let ((@x421 (lemma ((_ th-lemma arith) @x415 (hypothesis (not $x533)) false) $x533)))
 (let (($x425 (not $x526)))
 (let ((@x426 (hypothesis $x425)))
 (let ((@x427 (unit-resolution ((_ th-lemma arith) (or (not $x533) $x526 $x215)) @x380 @x426 @x421 false)))
 (let ((@x303 ((_ th-lemma arith) (or $x142 $x425))))
 (let ((@x321 (unit-resolution @x303 (unit-resolution (lemma @x427 (or $x526 $x215)) @x380 $x526) $x142)))
 (let (($x197 (>= ?x590 0.0)))
 (let ((@x439 (lemma ((_ th-lemma arith) (hypothesis (not $x197)) @x255 false) $x197)))
 (let ((@x386 (hypothesis $x385)))
 (let ((@x387 ((_ th-lemma arith) @x386 (unit-resolution ((_ th-lemma arith) (or (not $x197) $x226 $x215)) @x380 @x439 $x226) false)))
 (let ((@x636 ((_ th-lemma arith triangle-eq) (or $x397 $x385 (not $x142)))))
 (let ((@x328 (unit-resolution @x636 (unit-resolution (lemma @x387 (or $x266 $x215)) @x380 $x266) @x321 $x397)))
 (let ((@x583 (mp @x218 (monotonicity (symm @x318 (= $x512 $x222)) (= $x369 $x233)) $x233)))
 (let ((@x573 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x222 $x254 $x366)) @x583 (lemma (unit-resolution @x232 @x328 @x457 false) $x215) $x254)))
 (let ((@x243 (unit-resolution ((_ th-lemma arith) (or (not $x197) $x526 $x523)) (hypothesis $x254) @x439 @x426 false)))
 (let ((@x621 (unit-resolution @x303 (unit-resolution (lemma @x243 (or $x526 $x523)) @x573 $x526) $x142)))
 (let ((@x627 (unit-resolution (lemma ((_ th-lemma arith) (hypothesis $x226) @x386 false) (or $x442 $x266)) (unit-resolution @x636 @x621 (unit-resolution @x232 @x218 $x308) $x385) $x442)))
 (let ((@x628 (unit-resolution ((_ th-lemma arith) (or (not $x533) $x226 $x523)) @x573 @x421 @x627 false)))
 (let ((@x704 (mp (unit-resolution (and-elim @x596 $x271) (lemma @x628 $x512) $x376) @x703 $x701)))
 (let ((@x709 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x403 $x692 (not $x123))) @x704 (or $x692 (not $x123)))))
 (unit-resolution ((_ th-lemma arith) (or $x357 (not $x511) (not $x204))) (unit-resolution @x709 (lemma @x302 $x123) $x692) @x255 @x415 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       60
 :arith-eq-adapter                55
 :arith-bound-propagations-lp     6
 :arith-conflicts                 107
 :arith-diseq                     92
 :arith-fixed-eqs                 1
 :arith-grobner-calls             5
 :arith-grobner-conflicts         2
 :arith-horner-calls              5
 :arith-horner-cross-nested-forms 11
 :arith-lower                     130
 :arith-make-feasible             133
 :arith-max-columns               87
 :arith-max-rows                  39
 :arith-nla-explanations          125
 :arith-nla-lemmas                100
 :arith-offset-eqs                9
 :arith-upper                     90
 :conflicts                       18
 :decisions                       130
 :del-clause                      206
 :final-checks                    84
 :max-memory                      18.73
 :memory                          17.34
 :mk-bool-var                     320
 :mk-clause                       285
 :num-allocs                      2779316
 :num-checks                      1
 :propagations                    134
 :rlimit-count                    8344
 :time                            0.03
 :total-time                      0.04)
