unsat
((set-logic NIA)
(declare-fun q!2 () Int)
(declare-fun r!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x80 (* y00 q00)))
 (let ((?x339 (+ r00 ?x80 (* (- 1) r!1) (* (- 1) (* y00 q!2)))))
 (let (($x326 (<= ?x339 0)))
 (let (($x340 (= ?x339 0)))
 (let ((?x777 (+ (* 6 (* y00 r!1 r!1 q!2)) (* 3 (* y00 r!1 r!1 q!2 q!2)) (* (- 1) (* r!1 r!1 r!1)) (* 2 (* y00 y00 r00)) (* (- 2) (* y00 y00 r!1 q!2)) (* 3 (* y00 y00 r!1 q!2 q!2)) (* 4 (* y00 y00 r!1 q!2 q!2 q!2)) (* y00 y00 r!1 q!2 q!2 q!2 q!2) (* 2 (* y00 y00 y00 q00)) (* (- 2) (* y00 y00 r!1)) (* (- 1) (* y00 y00 y00 y00 y00 q00)) (* y00 y00 y00 r00 r!1) (* (- 2) (* y00 y00 y00 y00 r00 q!2)) (* y00 y00 y00 r00 r!1 q!2 q!2) (* (- 1) (* y00 y00 y00 y00 r00 q!2 q!2)) (* (- 2) (* y00 y00 y00 r!1 r!1 q!2)) (* y00 y00 y00 y00 r!1 q!2) (* 2 (* y00 y00 y00 y00 y00 q!2 q!2)) (* (- 1) (* y00 y00 y00 r!1 r!1 q!2 q!2)) (* y00 y00 y00 y00 r!1) (* (- 1) (* y00 y00 y00 y00 r00)) (* (- 1) (* y00 y00 y00 y00 r!1 q!2 q!2)) (* y00 y00 y00 y00 y00 q!2) (* y00 y00 y00 y00 q00 r!1) (* 2 (* y00 y00 y00 y00 q00 r!1 q!2)) (* y00 y00 y00 y00 q00 r!1 q!2 q!2) (* (- 2) (* y00 y00 y00 y00 y00 q00 q!2)) (* r00 r!1 r!1) (* r00 r!1 r!1 q!2 q!2) (* y00 q00 r!1 r!1) (* 2 (* r00 r!1 r!1 q!2)) (* (- 1) (* y00 y00 y00 y00 r!1 q!2 q!2 q!2)) (* y00 y00 y00 y00 y00 q!2 q!2 q!2) (* (- 2) (* r!1 r!1 r!1 q!2)) (* (- 1) (* r!1 r!1 r!1 q!2 q!2)) (* 2 (* y00 q00 r!1 r!1 q!2)) (* y00 q00 r!1 r!1 q!2 q!2) (* 5 (* y00 y00 y00 q00 q!2)) (* (- 5) (* y00 y00 q00 r!1 q!2 q!2)) (* (- 7) (* y00 y00 q00 r!1 q!2)) (* (- 1) (* y00 y00 q00 r!1 q!2 q!2 q!2)) (* 4 (* y00 y00 y00 q00 q!2 q!2)) (* (- 1) (* y00 y00 y00 r!1 r!1)) (* (- 1) (* y00 y00 y00 q!2 q!2 q!2 q!2)) (* (- 7) (* y00 r00 r!1 q!2)) (* (- 4) (* y00 y00 y00 q!2 q!2 q!2)) (* 2 (* y00 y00 y00 r00 r!1 q!2)) (* y00 y00 y00 q00 q!2 q!2 q!2) (* (- 3) (* y00 r00 r!1)) (* (- 5) (* y00 r00 r!1 q!2 q!2)) (* (- 1) (* y00 r00 r!1 q!2 q!2 q!2)) (* 5 (* y00 y00 r00 q!2)) (* 4 (* y00 y00 r00 q!2 q!2)) (* y00 y00 r00 q!2 q!2 q!2) (* (- 3) (* y00 y00 q00 r!1)) (* (- 5) (* y00 y00 y00 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 q00 q!2 q!2)) (* 3 (* y00 r!1 r!1)) (* (- 2) (* y00 y00 y00 q!2)))))
 (let (($x778 (= ?x777 0)))
 (let (($x783 (not $x778)))
 (let ((?x318 (+ y00 (* (- 1) y!0))))
 (let (($x320 (= ?x318 0)))
 (let (($x287 (and $x320 $x340 $x783)))
 (let ((?x254 (* r!1 r!1 r!1)))
 (let ((?x972 (* y00 y00 y00 y00 r00)))
 (let ((?x643 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x446 (* y00 y00 y00 q00)))
 (let ((?x1585 (* (- 2) ?x446)))
 (let ((?x324 (* y00 y00 r00)))
 (let ((?x1165 (* (- 2) ?x324)))
 (let ((?x306 (+ (* 2 (* r!1 y00 y00)) (* 2 (* q!2 r!1 y00 y00)) (* (- 3) (* q!2 q!2 r!1 y00 y00)) (* (- 4) (* q!2 q!2 q!2 r!1 y00 y00)) (* (- 1) (* q!2 q!2 q!2 q!2 r!1 y00 y00)) (* 2 (* q!2 y00 y00 y00)) (* 5 (* q!2 q!2 y00 y00 y00)) (* 4 (* q!2 q!2 q!2 y00 y00 y00)) (* q!2 q!2 q!2 q!2 y00 y00 y00) (* 3 (* r!1 y00 r00)) (* 7 (* q!2 r!1 y00 r00)) (* 5 (* q!2 q!2 r!1 y00 r00)) (* q!2 q!2 q!2 r!1 y00 r00) ?x1165 (* (- 5) (* q!2 y00 y00 r00)) (* (- 4) (* q!2 q!2 y00 y00 r00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 r00)) (* 3 (* r!1 y00 y00 q00)) (* 7 (* q!2 r!1 y00 y00 q00)) (* 5 (* q!2 q!2 r!1 y00 y00 q00)) (* q!2 q!2 q!2 r!1 y00 y00 q00) ?x1585 (* (- 5) (* q!2 y00 y00 y00 q00)) (* (- 4) (* q!2 q!2 y00 y00 y00 q00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 y00 q00)) (* r!1 r!1 y00 y00 y00) (* 2 (* q!2 r!1 r!1 y00 y00 y00)) (* q!2 q!2 r!1 r!1 y00 y00 y00) (* (- 1) (* r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 r!1 y00 y00 y00 y00)) (* q!2 q!2 r!1 y00 y00 y00 y00) (* (- 1) (* q!2 y00 y00 y00 y00 y00)) (* (- 2) (* q!2 q!2 y00 y00 y00 y00 y00)) (* (- 1) (* r!1 y00 y00 y00 y00 q00)) (* (- 2) (* q!2 r!1 y00 y00 y00 y00 q00)) (* (- 1) (* q!2 q!2 r!1 y00 y00 y00 y00 q00)) ?x643 (* 2 (* q!2 y00 y00 y00 y00 y00 q00)) (* q!2 q!2 y00 y00 y00 y00 y00 q00) (* (- 3) (* r!1 r!1 y00)) (* (- 6) (* q!2 r!1 r!1 y00)) (* (- 3) (* q!2 q!2 r!1 r!1 y00)) (* (- 1) (* r!1 y00 y00 y00 r00)) (* (- 2) (* q!2 r!1 y00 y00 y00 r00)) (* (- 1) (* q!2 q!2 r!1 y00 y00 y00 r00)) ?x972 (* 2 (* q!2 y00 y00 y00 y00 r00)) (* q!2 q!2 y00 y00 y00 y00 r00) (* (- 1) (* r!1 r!1 r00)) (* (- 2) (* q!2 r!1 r!1 r00)) (* (- 1) (* q!2 q!2 r!1 r!1 r00)) (* q!2 q!2 q!2 r!1 y00 y00 y00 y00) (* (- 1) (* q!2 q!2 q!2 y00 y00 y00 y00 y00)) ?x254 (* 2 (* q!2 r!1 r!1 r!1)) (* q!2 q!2 r!1 r!1 r!1) (* (- 1) (* r!1 r!1 y00 q00)) (* (- 2) (* q!2 r!1 r!1 y00 q00)) (* (- 1) (* q!2 q!2 r!1 r!1 y00 q00)))))
 (let (($x405 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x80)) 0) (not (= ?x306 0)))))
 (let (($x93 (exists ((q Int) (r Int) (y Int) )(! (let ((?x972 (* y00 y00 y00 y00 r00)))
 (let ((?x643 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x446 (* y00 y00 y00 q00)))
 (let ((?x1585 (* (- 2) ?x446)))
 (let ((?x324 (* y00 y00 r00)))
 (let ((?x1165 (* (- 2) ?x324)))
 (let ((?x1603 (+ (* 2 (* r y00 y00)) (* 2 (* q r y00 y00)) (* (- 3) (* q q r y00 y00)) (* (- 4) (* q q q r y00 y00)) (* (- 1) (* q q q q r y00 y00)) (* 2 (* q y00 y00 y00)) (* 5 (* q q y00 y00 y00)) (* 4 (* q q q y00 y00 y00)) (* q q q q y00 y00 y00) (* 3 (* r y00 r00)) (* 7 (* q r y00 r00)) (* 5 (* q q r y00 r00)) (* q q q r y00 r00) ?x1165 (* (- 5) (* q y00 y00 r00)) (* (- 4) (* q q y00 y00 r00)) (* (- 1) (* q q q y00 y00 r00)) (* 3 (* r y00 y00 q00)) (* 7 (* q r y00 y00 q00)) (* 5 (* q q r y00 y00 q00)) (* q q q r y00 y00 q00) ?x1585 (* (- 5) (* q y00 y00 y00 q00)) (* (- 4) (* q q y00 y00 y00 q00)) (* (- 1) (* q q q y00 y00 y00 q00)) (* r r y00 y00 y00) (* 2 (* q r r y00 y00 y00)) (* q q r r y00 y00 y00) (* (- 1) (* r y00 y00 y00 y00)) (* (- 1) (* q r y00 y00 y00 y00)) (* q q r y00 y00 y00 y00) (* (- 1) (* q y00 y00 y00 y00 y00)) (* (- 2) (* q q y00 y00 y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00 q00)) (* (- 2) (* q r y00 y00 y00 y00 q00)) (* (- 1) (* q q r y00 y00 y00 y00 q00)) ?x643 (* 2 (* q y00 y00 y00 y00 y00 q00)) (* q q y00 y00 y00 y00 y00 q00) (* (- 3) (* r r y00)) (* (- 6) (* q r r y00)) (* (- 3) (* q q r r y00)) (* (- 1) (* r y00 y00 y00 r00)) (* (- 2) (* q r y00 y00 y00 r00)) (* (- 1) (* q q r y00 y00 y00 r00)) ?x972 (* 2 (* q y00 y00 y00 y00 r00)) (* q q y00 y00 y00 y00 r00) (* (- 1) (* r r r00)) (* (- 2) (* q r r r00)) (* (- 1) (* q q r r r00)) (* q q q r y00 y00 y00 y00) (* (- 1) (* q q q y00 y00 y00 y00 y00)) (* r r r) (* 2 (* q r r r)) (* q q r r r) (* (- 1) (* r r y00 q00)) (* (- 2) (* q r r y00 q00)) (* (- 1) (* q q r r y00 q00)))))
 (let (($x110 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (and (= (+ y (* (- 1) y00)) 0) $x110 (not (= ?x1603 0))))))))))) :qid k!29))
 ))
 (let (($x251 (exists ((q Int) (r Int) (y Int) )(! (let ((?x78 (* (- 1) y00)))
 (let ((?x350 (+ r ?x78)))
 (let ((?x342 (+ 1 q)))
 (let ((?x829 (* q00 y00 ?x342 ?x342 ?x350 ?x350)))
 (let ((?x782 (* r00 ?x342 ?x342 ?x350 ?x350)))
 (let ((?x760 (* r00 y00 y00 y00 ?x342 ?x342 ?x350)))
 (let ((?x268 (* q00 y00 y00 y00 y00 ?x342 ?x342 ?x350)))
 (let ((?x1323 (* y00 y00 ?x342 ?x342 ?x342 ?x342 ?x350)))
 (let ((?x791 (+ ?x1323 (* (- 1) (* r00 y00 ?x342 ?x342 ?x342 ?x350)) (* (- 1) (* q00 y00 y00 ?x342 ?x342 ?x342 ?x350)) (* (- 1) (* y00 y00 y00 ?x342 ?x342 ?x350 ?x350)) ?x268 ?x760 ?x782 (* (- 1) (* y00 y00 y00 y00 ?x342 ?x342 ?x342 ?x350)) (* (- 1) (* ?x342 ?x342 ?x350 ?x350 ?x350)) ?x829)))
 (let (($x650 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x650 (not (= ?x791 0))))))))))))) :qid k!29))
 ))
 (let ((?x1737 (lambda ((q Int) (r Int) (y Int) )(let ((?x972 (* y00 y00 y00 y00 r00)))
 (let ((?x643 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x446 (* y00 y00 y00 q00)))
 (let ((?x1585 (* (- 2) ?x446)))
 (let ((?x324 (* y00 y00 r00)))
 (let ((?x1165 (* (- 2) ?x324)))
 (let ((?x1603 (+ (* 2 (* r y00 y00)) (* 2 (* q r y00 y00)) (* (- 3) (* q q r y00 y00)) (* (- 4) (* q q q r y00 y00)) (* (- 1) (* q q q q r y00 y00)) (* 2 (* q y00 y00 y00)) (* 5 (* q q y00 y00 y00)) (* 4 (* q q q y00 y00 y00)) (* q q q q y00 y00 y00) (* 3 (* r y00 r00)) (* 7 (* q r y00 r00)) (* 5 (* q q r y00 r00)) (* q q q r y00 r00) ?x1165 (* (- 5) (* q y00 y00 r00)) (* (- 4) (* q q y00 y00 r00)) (* (- 1) (* q q q y00 y00 r00)) (* 3 (* r y00 y00 q00)) (* 7 (* q r y00 y00 q00)) (* 5 (* q q r y00 y00 q00)) (* q q q r y00 y00 q00) ?x1585 (* (- 5) (* q y00 y00 y00 q00)) (* (- 4) (* q q y00 y00 y00 q00)) (* (- 1) (* q q q y00 y00 y00 q00)) (* r r y00 y00 y00) (* 2 (* q r r y00 y00 y00)) (* q q r r y00 y00 y00) (* (- 1) (* r y00 y00 y00 y00)) (* (- 1) (* q r y00 y00 y00 y00)) (* q q r y00 y00 y00 y00) (* (- 1) (* q y00 y00 y00 y00 y00)) (* (- 2) (* q q y00 y00 y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00 q00)) (* (- 2) (* q r y00 y00 y00 y00 q00)) (* (- 1) (* q q r y00 y00 y00 y00 q00)) ?x643 (* 2 (* q y00 y00 y00 y00 y00 q00)) (* q q y00 y00 y00 y00 y00 q00) (* (- 3) (* r r y00)) (* (- 6) (* q r r y00)) (* (- 3) (* q q r r y00)) (* (- 1) (* r y00 y00 y00 r00)) (* (- 2) (* q r y00 y00 y00 r00)) (* (- 1) (* q q r y00 y00 y00 r00)) ?x972 (* 2 (* q y00 y00 y00 y00 r00)) (* q q y00 y00 y00 y00 r00) (* (- 1) (* r r r00)) (* (- 2) (* q r r r00)) (* (- 1) (* q q r r r00)) (* q q q r y00 y00 y00 y00) (* (- 1) (* q q q y00 y00 y00 y00 y00)) (* r r r) (* 2 (* q r r r)) (* q q r r r) (* (- 1) (* r r y00 q00)) (* (- 2) (* q r r y00 q00)) (* (- 1) (* q q r r y00 q00)))))
 (let (($x110 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x103 (and (= (+ y (* (- 1) y00)) 0) $x110 (not (= ?x1603 0)))))
 (let ((?x78 (* (- 1) y00)))
 (let ((?x350 (+ r ?x78)))
 (let ((?x342 (+ 1 q)))
 (let ((?x829 (* q00 y00 ?x342 ?x342 ?x350 ?x350)))
 (let ((?x782 (* r00 ?x342 ?x342 ?x350 ?x350)))
 (let ((?x760 (* r00 y00 y00 y00 ?x342 ?x342 ?x350)))
 (let ((?x268 (* q00 y00 y00 y00 y00 ?x342 ?x342 ?x350)))
 (let ((?x1323 (* y00 y00 ?x342 ?x342 ?x342 ?x342 ?x350)))
 (let ((?x791 (+ ?x1323 (* (- 1) (* r00 y00 ?x342 ?x342 ?x342 ?x350)) (* (- 1) (* q00 y00 y00 ?x342 ?x342 ?x342 ?x350)) (* (- 1) (* y00 y00 y00 ?x342 ?x342 ?x350 ?x350)) ?x268 ?x760 ?x782 (* (- 1) (* y00 y00 y00 y00 ?x342 ?x342 ?x342 ?x350)) (* (- 1) (* ?x342 ?x342 ?x350 ?x350 ?x350)) ?x829)))
 (let (($x650 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1387 (and (= (+ y00 (* (- 1) y)) 0) $x650 (not (= ?x791 0)))))
 (rewrite (= $x1387 $x103)))))))))))))))))))))))
 ))
 (let (($x1024 (exists ((q Int) (r Int) (y Int) )(! (let ((?x78 (* (- 1) y00)))
 (let ((?x350 (+ r ?x78)))
 (let ((?x342 (+ 1 q)))
 (let ((?x829 (* q00 y00 ?x342 ?x342 ?x350 ?x350)))
 (let ((?x815 (* ?x342 ?x342 ?x350 ?x350 ?x350)))
 (let ((?x810 (* y00 y00 y00 y00 ?x342 ?x342 ?x342 ?x350)))
 (let ((?x267 (* y00 y00 y00 ?x342 ?x342 ?x350 ?x350)))
 (let ((?x274 (* q00 y00 y00 ?x342 ?x342 ?x342 ?x350)))
 (let ((?x248 (* r00 y00 ?x342 ?x342 ?x342 ?x350)))
 (let ((?x843 (+ (* (- 1) (* y00 y00 ?x342 ?x342 ?x342 ?x342 ?x350)) ?x248 ?x274 ?x267 (* (- 1) (* q00 y00 y00 y00 y00 ?x342 ?x342 ?x350)) (* (- 1) (* r00 y00 y00 y00 ?x342 ?x342 ?x350)) (* (- 1) (* r00 ?x342 ?x342 ?x350 ?x350)) ?x810 ?x815 (* (- 1) ?x829))))
 (let (($x650 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x78 y) 0) $x650 (not (= ?x843 0)))))))))))))) :qid k!29))
 ))
 (let ((?x997 (lambda ((q Int) (r Int) (y Int) )(let ((?x78 (* (- 1) y00)))
 (let ((?x350 (+ r ?x78)))
 (let ((?x342 (+ 1 q)))
 (let ((?x829 (* q00 y00 ?x342 ?x342 ?x350 ?x350)))
 (let ((?x782 (* r00 ?x342 ?x342 ?x350 ?x350)))
 (let ((?x760 (* r00 y00 y00 y00 ?x342 ?x342 ?x350)))
 (let ((?x268 (* q00 y00 y00 y00 y00 ?x342 ?x342 ?x350)))
 (let ((?x1323 (* y00 y00 ?x342 ?x342 ?x342 ?x342 ?x350)))
 (let ((?x791 (+ ?x1323 (* (- 1) (* r00 y00 ?x342 ?x342 ?x342 ?x350)) (* (- 1) (* q00 y00 y00 ?x342 ?x342 ?x342 ?x350)) (* (- 1) (* y00 y00 y00 ?x342 ?x342 ?x350 ?x350)) ?x268 ?x760 ?x782 (* (- 1) (* y00 y00 y00 y00 ?x342 ?x342 ?x342 ?x350)) (* (- 1) (* ?x342 ?x342 ?x350 ?x350 ?x350)) ?x829)))
 (let (($x650 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1387 (and (= (+ y00 (* (- 1) y)) 0) $x650 (not (= ?x791 0)))))
 (let ((?x815 (* ?x342 ?x342 ?x350 ?x350 ?x350)))
 (let ((?x810 (* y00 y00 y00 y00 ?x342 ?x342 ?x342 ?x350)))
 (let ((?x267 (* y00 y00 y00 ?x342 ?x342 ?x350 ?x350)))
 (let ((?x274 (* q00 y00 y00 ?x342 ?x342 ?x342 ?x350)))
 (let ((?x248 (* r00 y00 ?x342 ?x342 ?x342 ?x350)))
 (let ((?x843 (+ (* (- 1) ?x1323) ?x248 ?x274 ?x267 (* (- 1) ?x268) (* (- 1) ?x760) (* (- 1) ?x782) ?x810 ?x815 (* (- 1) ?x829))))
 (let (($x255 (and (= (+ ?x78 y) 0) $x650 (not (= ?x843 0)))))
 (rewrite (= $x255 $x1387)))))))))))))))))))))
 ))
 (let (($x73 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x55 (* ?x42 ?x42 ?x42 ?x43 ?x43 y00)))
 (let ((?x50 (+ (- (* 0 ?x42 ?x43) (* ?x42 ?x42 ?x42 ?x42 ?x43 y00 y00)) (* ?x42 ?x42 ?x42 ?x43 r00 y00) (* ?x42 ?x42 ?x42 q00 ?x43 y00 y00) (* ?x42 ?x42 ?x43 ?x43 y00 y00 y00))))
 (let ((?x54 (+ (- ?x50 (* ?x42 ?x42 q00 ?x43 y00 y00 y00 y00)) (* 0 ?x42 ?x42 y00))))
 (let ((?x59 (+ (- ?x54 ?x55) (* 0 ?x42 r00) (* 0 ?x42 q00 y00) ?x55)))
 (let ((?x63 (- (- ?x59 (* ?x42 ?x42 ?x43 r00 y00 y00 y00)) (* ?x42 ?x42 ?x43 ?x43 r00))))
 (let ((?x66 (+ ?x63 (* ?x42 ?x42 ?x42 ?x43 y00 y00 y00 y00) (* ?x42 ?x42 ?x43 ?x43 ?x43))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= (- ?x66 (* ?x42 ?x42 q00 ?x43 ?x43 y00)) 0)))))))))))) :qid k!29))
 ))
 (let ((?x270 (lambda ((q Int) (r Int) (y Int) )(let ((?x78 (* (- 1) y00)))
 (let ((?x350 (+ r ?x78)))
 (let ((?x342 (+ 1 q)))
 (let ((?x829 (* q00 y00 ?x342 ?x342 ?x350 ?x350)))
 (let ((?x815 (* ?x342 ?x342 ?x350 ?x350 ?x350)))
 (let ((?x810 (* y00 y00 y00 y00 ?x342 ?x342 ?x342 ?x350)))
 (let ((?x267 (* y00 y00 y00 ?x342 ?x342 ?x350 ?x350)))
 (let ((?x274 (* q00 y00 y00 ?x342 ?x342 ?x342 ?x350)))
 (let ((?x248 (* r00 y00 ?x342 ?x342 ?x342 ?x350)))
 (let ((?x843 (+ (* (- 1) (* y00 y00 ?x342 ?x342 ?x342 ?x342 ?x350)) ?x248 ?x274 ?x267 (* (- 1) (* q00 y00 y00 y00 y00 ?x342 ?x342 ?x350)) (* (- 1) (* r00 y00 y00 y00 ?x342 ?x342 ?x350)) (* (- 1) (* r00 ?x342 ?x342 ?x350 ?x350)) ?x810 ?x815 (* (- 1) ?x829))))
 (let (($x650 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x255 (and (= (+ ?x78 y) 0) $x650 (not (= ?x843 0)))))
 (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x55 (* ?x42 ?x42 ?x42 ?x43 ?x43 y00)))
 (let ((?x50 (+ (- (* 0 ?x42 ?x43) (* ?x42 ?x42 ?x42 ?x42 ?x43 y00 y00)) (* ?x42 ?x42 ?x42 ?x43 r00 y00) (* ?x42 ?x42 ?x42 q00 ?x43 y00 y00) (* ?x42 ?x42 ?x43 ?x43 y00 y00 y00))))
 (let ((?x54 (+ (- ?x50 (* ?x42 ?x42 q00 ?x43 y00 y00 y00 y00)) (* 0 ?x42 ?x42 y00))))
 (let ((?x59 (+ (- ?x54 ?x55) (* 0 ?x42 r00) (* 0 ?x42 q00 y00) ?x55)))
 (let ((?x63 (- (- ?x59 (* ?x42 ?x42 ?x43 r00 y00 y00 y00)) (* ?x42 ?x42 ?x43 ?x43 r00))))
 (let ((?x66 (+ ?x63 (* ?x42 ?x42 ?x42 ?x43 y00 y00 y00 y00) (* ?x42 ?x42 ?x43 ?x43 ?x43))))
 (let (($x72 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= (- ?x66 (* ?x42 ?x42 q00 ?x43 ?x43 y00)) 0))))))
 (rewrite (= $x72 $x255))))))))))))))))))))))))
 ))
 (let ((@x74 (asserted $x73)))
 (let ((@x821 (mp (mp @x74 (quant-intro (proof-bind ?x270) (= $x73 $x1024)) $x1024) (rewrite (= $x1024 $x1024)) $x1024)))
 (let ((@x202 (mp (mp @x821 (quant-intro (proof-bind ?x997) (= $x1024 $x251)) $x251) (quant-intro (proof-bind ?x1737) (= $x251 $x93)) $x93)))
 (let ((@x786 (mp (mp~ @x202 (sk (~ $x93 $x405)) $x405) (rewrite (= $x405 $x287)) $x287)))
 (let ((@x322 (and-elim @x786 $x340)))
 (let ((@x1088 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x340) $x326)) @x322 $x326)))
 (let (($x327 (>= ?x339 0)))
 (let ((@x1216 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x340) $x327)) @x322 $x327)))
 (let (($x479 (<= ?x318 0)))
 (let ((@x271 (and-elim @x786 $x320)))
 (let ((@x1098 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x320) $x479)) @x271 $x479)))
 (let (($x283 (>= ?x318 0)))
 (let ((@x261 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x320) $x283)) @x271 $x283)))
 (let (($x319 (not (<= ?x777 0))))
 (let (($x406 (>= ?x777 0)))
 (let ((@x794 (lemma ((_ th-lemma arith) (hypothesis (not $x406)) @x261 @x1098 @x1216 @x1088 false) $x406)))
 (let ((@x1398 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x778 $x319 (not $x406))) (and-elim @x786 $x783) (or $x319 (not $x406)))))
 ((_ th-lemma arith) (unit-resolution @x1398 @x794 $x319) @x261 @x1098 @x1216 @x1088 false))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        4
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-gcd-tests           2
 :arith-grobner             2
 :arith-max-min             264
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              3
 :arith-tableau-max-columns 82
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              2
 :max-memory                3.74
 :memory                    3.25
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1237608
 :num-checks                1
 :propagations              6
 :rlimit-count              6886
 :time                      0.01
 :total-time                0.02)
