unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x2836 (* (- 1) s!1)))
 (let ((?x318 (* r00 r00)))
 (let ((?x2170 (* (- 3) ?x318)))
 (let ((?x2733 (+ s00 ?x2170 (* 3 (* r!2 r!2)) ?x2836)))
 (let (($x3847 (<= ?x2733 0)))
 (let (($x379 (= ?x2733 0)))
 (let ((?x2739 (+ 3 (* 6 r!2) s!1)))
 (let ((?x1544 (+ x!0 ?x2836)))
 (let ((?x2827 (+ 1 r!2)))
 (let ((?x4044 (* (- 12) (* r00 r00 ?x2827 ?x2827 ?x2827 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739))))
 (let ((?x1354 (* 12 (* r00 r00 r00 ?x2827 ?x2827 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739))))
 (let ((?x4121 (+ (* 54 (* x00 x!0)) (* 12 (* r00 r00 ?x2827 ?x2827 ?x2827 ?x2827 ?x1544 ?x2739 ?x2739)) (* (- 54) (* s00 r00 s!1)) (* (- 36) (* x00 s!1 s!1)) (* 3 (* s00 s!1 s!1 s!1)) (* 12 (* r00 r00 r00 s!1 s!1 s!1)) (* 54 (* s00 r!2 s!1 s!1)) (* 6 (* x00 x!0 s!1 s!1)) (* (- 216) (* s00 r!2 r!2 x!0)) (* 2 (* ?x2827 ?x2827 ?x2827 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739 ?x2739)) (* (- 12) (* r00 r00 r00 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* 432 (* x00 r!2 r!2 x!0)) (* (- 270) (* x00 r!2 s!1)) (* (- 108) (* x00 r!2 s!1 s!1)) (* 135 (* r00 r!2 x!0)) (* (- 6) (* ?x2827 ?x2827 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739)) (* (- 216) (* r00 r!2 r!2 s!1)) (* 6 (* ?x2827 ?x2827 ?x2827 ?x1544 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* (- 216) (* x00 r!2 r!2 r!2 s!1)) (* 3 (* ?x2827 ?x1544 ?x2739 ?x2739 ?x2739)) (* 108 (* x00 r!2 x!0 s!1)) (* (- 4) (* s00 ?x2827 ?x2827 ?x2827 ?x2827 ?x1544 ?x2739 ?x2739)) (* 3 (* ?x2827 ?x2827 ?x2827 ?x1544 ?x2739 ?x2739 ?x2739)) (* (- 432) (* s00 r00 r!2 r!2 s!1)) (* (- 144) (* r00 r00 r00 r!2 r!2 x!0 s!1)) (* (- 135) (* s00 r!2 x!0)) (* (- 4) (* s00 ?x2827 ?x2827 ?x1544 ?x2739 ?x2739)) (* 216 (* x00 r!2 r!2 r!2 x!0)) (* (- 3) (* ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* 3 (* r00 ?x2827 ?x2827 ?x2827 ?x1544 ?x2739 ?x2739)) (* 18 (* r00 x!0 s!1)) (* 6 (* r00 s00 ?x2827 ?x2827 ?x2827 ?x1544 ?x2739 ?x2739)) (* 6 (* x00 r!2 x!0 s!1 s!1)) (* 432 (* r00 r00 r00 r!2 r!2 r!2 s!1)) (* 12 (* r00 r00 r00 r!2 s!1 s!1 s!1)) (* 4 (* s00 ?x2827 ?x2827 ?x2827 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* 3 (* ?x1544 ?x1544 ?x2739 ?x2739 ?x2739 ?x2739)) (* (- 3) (* r00 r!2 s!1 s!1 s!1)) (* 3 (* r00 x!0 s!1 s!1)) (* (- 54) (* r00 r!2 s!1 s!1)) (* 6 (* s00 r00 r!2 x!0 s!1 s!1)) (* (- 6) (* r00 s00 ?x2827 ?x2827 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* 3 (* r00 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* (- 3) (* s00 ?x2827 ?x2827 ?x2827 ?x1544 ?x2739 ?x2739)) (* 36 (* x00 x!0 s!1)) (* (- 432) (* r00 r00 r00 r!2 r!2 r!2 x!0)) (* (- 18) (* s00 x!0 s!1)) (* 270 (* x00 r!2 x!0)) (* (- 108) (* r00 r00 r00 x!0)) (* (- 108) (* s00 r!2 r!2 r!2 x!0)) (* 432 (* s00 r00 r!2 r!2 x!0)) (* (- 3) (* s00 x!0 s!1 s!1)) (* (- 72) (* r00 r00 r00 x!0 s!1)) (* 6 (* r00 s00 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* (- 36) (* s00 r00 s!1 s!1)) (* 27 (* s00 s!1)) (* 27 (* r00 x!0)) (* 3 (* ?x2827 ?x2827 ?x2827 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* 3 (* r00 r!2 x!0 s!1 s!1)) (* 36 (* s00 r!2 r!2 s!1 s!1)) (* (- 27) (* r00 s!1)) (* 216 (* s00 r!2 r!2 s!1)) (* 108 (* s00 r!2 r!2 r!2 s!1)) (* (- 2) (* ?x2827 ?x2827 ?x2827 ?x2827 ?x1544 ?x2739 ?x2739 ?x2739)) (* (- 2) (* ?x2827 ?x2827 ?x1544 ?x2739 ?x2739 ?x2739)) (* 72 (* x00 r!2 r!2 x!0 s!1)) (* 54 (* r00 r!2 x!0 s!1)) (* (- 3) (* r00 ?x2827 ?x2827 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* (- 18) (* r00 s!1 s!1)) ?x1354 (* (- 2) (* ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739 ?x2739)) (* 54 (* s00 r00 x!0)) (* 864 (* r00 r00 r00 r!2 r!2 s!1)) (* 540 (* r00 r00 r00 r!2 s!1)) (* 144 (* r00 r00 r00 r!2 r!2 s!1 s!1)) (* (- 864) (* r00 r00 r00 r!2 r!2 x!0)) (* (- 6) (* s00 r00 r!2 s!1 s!1 s!1)) (* 216 (* r00 r!2 r!2 x!0)) (* 12 (* r00 r00 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* (- 432) (* x00 r!2 r!2 s!1)) (* 270 (* s00 r00 r!2 x!0)) (* (- 36) (* r00 r!2 r!2 s!1 s!1)) (* (- 6) (* s00 r00 s!1 s!1 s!1)) (* (- 6) (* x00 r!2 s!1 s!1 s!1)) (* 6 (* x00 ?x2827 ?x2827 ?x2827 ?x1544 ?x2739 ?x2739)) (* (- 6) (* x00 s!1 s!1 s!1)) ?x4044 (* 216 (* r00 r00 r00 r!2 s!1 s!1)) (* (- 3) (* s00 r!2 x!0 s!1 s!1)) (* (- 216) (* r00 r00 r00 r!2 x!0 s!1)) (* (- 72) (* s00 r00 r!2 r!2 s!1 s!1)) (* 3 (* s00 r!2 s!1 s!1 s!1)) (* 3 (* s00 ?x2827 ?x2827 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* 108 (* r00 r00 r00 s!1)) (* (- 3) (* ?x2827 ?x2827 ?x2827 ?x2827 ?x1544 ?x2739 ?x2739)) (* 12 (* r00 r00 ?x2827 ?x2827 ?x1544 ?x2739 ?x2739)) (* 135 (* s00 r!2 s!1)) (* (- 540) (* r00 r00 r00 r!2 x!0)) (* (- 6) (* x00 ?x2827 ?x2827 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* 216 (* s00 r00 r!2 r!2 r!2 x!0)) (* 36 (* s00 r00 x!0 s!1)) (* 72 (* s00 r00 r!2 r!2 x!0 s!1)) (* 108 (* s00 r00 r!2 x!0 s!1)) (* (- 27) (* s00 x!0)) (* 36 (* r00 r!2 r!2 x!0 s!1)) (* (- 108) (* r00 r!2 r!2 r!2 s!1)) (* (- 12) (* r00 r00 r00 r!2 x!0 s!1 s!1)) (* (- 3) (* ?x2827 ?x2827 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739 ?x2739)) (* (- 12) (* r00 r00 r00 x!0 s!1 s!1)) (* (- 108) (* s00 r00 r!2 s!1 s!1)) (* (- 54) (* x00 s!1)) (* (- 270) (* s00 r00 r!2 s!1)) (* (- 3) (* ?x2827 ?x2827 ?x1544 ?x2739 ?x2739)) (* 6 (* x00 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* (- 12) (* r00 r00 r00 ?x2827 ?x2827 ?x2827 ?x1544 ?x2739 ?x2739)) (* (- 135) (* r00 r!2 s!1)) (* (- 6) (* ?x2827 ?x1544 ?x1544 ?x2739 ?x2739)) (* 108 (* r00 r!2 r!2 r!2 x!0)) (* (- 3) (* s00 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* 72 (* r00 r00 r00 s!1 s!1)) (* 6 (* s00 r00 x!0 s!1 s!1)) (* (- 54) (* s00 r!2 x!0 s!1)) (* (- 36) (* s00 r!2 r!2 x!0 s!1)) (* (- 6) (* ?x1544 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)) (* (- 72) (* x00 r!2 r!2 s!1 s!1)) (* 18 (* s00 s!1 s!1)) (* (- 216) (* s00 r00 r!2 r!2 r!2 s!1)) (* (- 3) (* r00 s!1 s!1 s!1)) (* (- 4) (* s00 ?x2827 ?x1544 ?x1544 ?x2739 ?x2739 ?x2739)))))
 (let (($x3963 (= ?x4121 0)))
 (let (($x3962 (not $x3963)))
 (let ((?x3195 (* (- 9) s!1)))
 (let ((?x2481 (* r00 r00 s!1)))
 (let ((?x3819 (* 36 ?x2481)))
 (let ((?x1363 (* x00 x00)))
 (let ((?x1130 (* 108 ?x1363)))
 (let ((?x1201 (* s00 s00 s00)))
 (let ((?x1626 (* 16 ?x1201)))
 (let ((?x899 (* r00 r00 r00 x00)))
 (let ((?x1315 (* (- 432) ?x899)))
 (let ((?x822 (* s00 x00)))
 (let ((?x1435 (* (- 108) ?x822)))
 (let ((?x664 (* s00 r00 r00)))
 (let ((?x3352 (* (- 36) ?x664)))
 (let ((?x608 (* s00 s00)))
 (let ((?x797 (* 51 ?x608)))
 (let ((?x539 (* r00 x00)))
 (let ((?x2216 (* 108 ?x539)))
 (let ((?x137 (* 9 s00)))
 (let ((?x632 (+ ?x137 (* (- 54) (* s00 r00)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* 216 (* s00 r00 x00)) ?x2216 (* 108 (* s00 r00 s!1)) ?x797 ?x3352 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x1435 ?x1315 (* 216 (* s00 r00 r00 r00)) ?x1626 ?x1130 (* (- 4) (* s!1 s!1 s!1)) (* 108 (* x!0 x!0)) (* 15 (* s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 66) (* s00 s!1)) ?x3819 (* (- 108) (* r00 x!0)) (* 54 (* r00 s!1)) (* (- 216) (* s00 r00 x!0)) ?x3195 (* (- 216) (* r00 r00 r00 s!1)) (* 108 (* s00 x!0)) (* 108 (* x00 s!1)) (* (- 108) (* x!0 s!1)) (* (- 12) (* s00 s!1 s!1)))))
 (let ((?x894 (* r00 r00 x00)))
 (let ((?x1355 (* 36 ?x894)))
 (let ((?x1717 (* (- 6) ?x822)))
 (let ((?x3305 (* 15 ?x608)))
 (let ((?x1471 (* 54 ?x539)))
 (let ((?x3256 (+ ?x137 (* (- 24) (* s00 r00)) ?x1471 (* 2 (* s00 r00 s!1)) ?x3305 ?x3352 (* 2 (* s00 s00 r00)) ?x1717 ?x1355 (* (- 36) (* r00 r!2 x!0)) (* (- 24) (* s00 r!2)) (* (- 2) (* r!2 s!1 s!1)) (* (- 36) (* r00 r00 x!0)) (* (- 3) (* s!1 s!1)) (* (- 12) (* s00 s!1)) (* 54 (* x00 r!2)) ?x3819 (* (- 54) (* r00 x!0)) (* 24 (* r00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* 36 (* r00 x00 r!2)) ?x3195 (* 4 (* s00 s00 r!2)) (* (- 54) (* r!2 x!0)) (* (- 2) (* s00 r!2 s!1)) (* 6 (* s00 x!0)) (* 6 (* x00 s!1)) (* (- 6) (* x!0 s!1)) (* 24 (* r!2 s!1)))))
 (let (($x459 (= ?x3256 0)))
 (let ((?x3449 (* (- 3) s!1)))
 (let ((?x3460 (* 4 ?x608)))
 (let ((?x3486 (* 18 ?x539)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2665 (+ ?x44 (* (- 9) (* s00 r00)) ?x3486 ?x3460 (* (- 6) ?x664) (* (- 9) (* s00 r!2)) (* (- 2) (* s!1 s!1)) (* (- 2) (* s00 s!1)) (* 18 (* x00 r!2)) (* 6 ?x2481) (* (- 18) (* r00 x!0)) (* 9 (* r00 s!1)) ?x3449 (* (- 18) (* r!2 x!0)) (* 6 (* s00 r00 r!2)) (* (- 6) (* r00 r!2 s!1)) (* 9 (* r!2 s!1)))))
 (let (($x885 (= ?x2665 0)))
 (let ((?x4354 (* r!2 s!1)))
 (let ((?x2630 (* 2 ?x4354)))
 (let ((?x3735 (* 6 x!0)))
 (let ((?x3451 (* 3 r!2)))
 (let ((?x486 (* r00 r00 r00)))
 (let ((?x487 (* 12 ?x486)))
 (let ((?x443 (* s00 r00)))
 (let ((?x521 (* (- 6) ?x443)))
 (let ((?x518 (* (- 6) x00)))
 (let ((?x517 (* (- 3) r00)))
 (let ((?x2490 (+ ?x44 ?x517 ?x518 ?x521 ?x487 ?x3451 ?x3735 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)) ?x3449 ?x2630)))
 (let (($x2479 (= ?x2490 0)))
 (let (($x3751 (and $x379 $x2479 $x885 $x459 (= ?x632 0) $x3962)))
 (let ((?x2683 (+ ?x2836 x!0)))
 (let ((?x3946 (* 12 (* r00 r00 ?x2827 ?x2827 ?x2827 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739))))
 (let ((?x2640 (* (- 12) (* r00 r00 r00 ?x2827 ?x2827 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739))))
 (let ((?x671 (+ (* 3 (* s00 ?x2827 ?x2827 ?x2827 ?x2683 ?x2739 ?x2739)) (* 12 (* s!1 s!1 x!0 r00 r00 r00)) (* 12 (* r!2 s!1 s!1 x!0 r00 r00 r00)) (* 135 (* r!2 s!1 r00)) (* (- 135) (* r!2 x!0 r00)) (* 27 (* x!0 s00)) (* (- 27) (* x!0 r00)) (* (- 108) (* s!1 r00 r00 r00)) (* 18 (* s!1 s!1 r00)) (* (- 27) (* s!1 s00)) (* 27 (* s!1 r00)) (* 6 (* x00 ?x2827 ?x2827 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* (- 108) (* r!2 r!2 r!2 s!1 s00)) (* 54 (* s!1 x00)) (* 54 (* s!1 s00 r00)) (* 36 (* r!2 r!2 s!1 x!0 s00)) (* (- 12) (* s!1 s!1 s!1 r00 r00 r00)) (* (- 135) (* r!2 s!1 s00)) (* (- 18) (* s!1 s!1 s00)) (* 108 (* x!0 r00 r00 r00)) (* (- 12) (* r!2 s!1 s!1 s!1 r00 r00 r00)) (* (- 54) (* x!0 s00 r00)) (* 108 (* r!2 r!2 r!2 x!0 s00)) (* 12 (* r00 r00 r00 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* (- 54) (* x!0 x00)) (* (- 108) (* r!2 s!1 x!0 x00)) (* (- 432) (* r!2 r!2 x!0 x00)) (* (- 216) (* r!2 r!2 r!2 x!0 x00)) (* (- 2) (* ?x2827 ?x2827 ?x2827 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739 ?x2739)) (* (- 36) (* s!1 x!0 x00)) (* (- 6) (* s!1 s!1 x!0 x00)) (* (- 6) (* r!2 s!1 s!1 x!0 x00)) (* 270 (* r!2 s!1 x00)) (* 36 (* s!1 s!1 x00)) (* (- 270) (* r!2 x!0 x00)) (* 3 (* s00 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* (- 72) (* r!2 r!2 s!1 x!0 x00)) (* 6 (* r!2 s!1 s!1 s!1 x00)) (* 6 (* s!1 s!1 s!1 x00)) (* 72 (* r!2 r!2 s!1 s!1 x00)) (* 108 (* r!2 s!1 s!1 x00)) (* 216 (* r!2 r!2 r!2 s!1 x00)) (* 432 (* r!2 r!2 s!1 x00)) (* 6 (* r!2 s!1 s!1 s!1 s00 r00)) (* (- 3) (* s!1 s!1 s!1 s00)) (* 6 (* s!1 s!1 s!1 s00 r00)) (* (- 6) (* r!2 s!1 s!1 x!0 s00 r00)) (* (- 3) (* r!2 s!1 s!1 s!1 s00)) (* (- 6) (* s!1 s!1 x!0 s00 r00)) (* (- 3) (* ?x2827 ?x2683 ?x2739 ?x2739 ?x2739)) (* 2 (* ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739 ?x2739)) (* 3 (* s!1 s!1 x!0 s00)) (* (- 108) (* r!2 s!1 x!0 s00 r00)) (* 3 (* r!2 s!1 s!1 x!0 s00)) (* (- 72) (* r!2 r!2 s!1 x!0 s00 r00)) (* (- 36) (* s!1 x!0 s00 r00)) (* (- 216) (* r!2 r!2 r!2 x!0 s00 r00)) (* (- 432) (* r!2 r!2 x!0 s00 r00)) (* (- 270) (* r!2 x!0 s00 r00)) (* 3 (* ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* 72 (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 12) (* r00 r00 ?x2827 ?x2827 ?x2683 ?x2739 ?x2739)) (* 108 (* r!2 s!1 s!1 s00 r00)) (* 2 (* ?x2827 ?x2827 ?x2827 ?x2827 ?x2683 ?x2739 ?x2739 ?x2739)) (* 36 (* s!1 s!1 s00 r00)) (* 4 (* s00 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* 216 (* r!2 r!2 r!2 s!1 s00 r00)) (* (- 54) (* r!2 s!1 s!1 s00)) (* 432 (* r!2 r!2 s!1 s00 r00)) (* 270 (* r!2 s!1 s00 r00)) (* 4 (* s00 ?x2827 ?x2827 ?x2683 ?x2739 ?x2739)) (* 4 (* s00 ?x2827 ?x2827 ?x2827 ?x2827 ?x2683 ?x2739 ?x2739)) (* (- 4) (* s00 ?x2827 ?x2827 ?x2827 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* (- 216) (* r!2 r!2 x!0 r00)) (* (- 3) (* ?x2683 ?x2683 ?x2739 ?x2739 ?x2739 ?x2739)) (* (- 3) (* r00 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* (- 12) (* r00 r00 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* 216 (* r!2 r!2 s!1 r00)) (* 54 (* r!2 s!1 s!1 r00)) (* (- 6) (* x00 ?x2827 ?x2827 ?x2827 ?x2683 ?x2739 ?x2739)) (* 6 (* ?x2827 ?x2683 ?x2683 ?x2739 ?x2739)) (* (- 3) (* s!1 s!1 x!0 r00)) (* (- 3) (* r!2 s!1 s!1 x!0 r00)) (* (- 3) (* ?x2827 ?x2827 ?x2827 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* (- 36) (* r!2 r!2 s!1 x!0 r00)) ?x2640 (* (- 54) (* r!2 s!1 x!0 r00)) (* (- 18) (* s!1 x!0 r00)) (* (- 6) (* r00 s00 ?x2827 ?x2827 ?x2827 ?x2683 ?x2739 ?x2739)) (* (- 3) (* s00 ?x2827 ?x2827 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* 36 (* r!2 r!2 s!1 s!1 r00)) (* 6 (* ?x2827 ?x2827 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739)) (* (- 3) (* r00 ?x2827 ?x2827 ?x2827 ?x2683 ?x2739 ?x2739)) (* 3 (* ?x2827 ?x2827 ?x2683 ?x2739 ?x2739)) (* (- 12) (* r00 r00 ?x2827 ?x2827 ?x2827 ?x2827 ?x2683 ?x2739 ?x2739)) (* 3 (* r!2 s!1 s!1 s!1 r00)) (* (- 6) (* x00 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* 3 (* s!1 s!1 s!1 r00)) (* 108 (* r!2 r!2 r!2 s!1 r00)) (* 3 (* ?x2827 ?x2827 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739 ?x2739)) (* (- 108) (* r!2 r!2 r!2 x!0 r00)) (* (- 216) (* r!2 r!2 s!1 s00)) (* 216 (* r!2 r!2 x!0 s00)) (* 135 (* r!2 x!0 s00)) (* 18 (* s!1 x!0 s00)) (* 144 (* r!2 r!2 s!1 x!0 r00 r00 r00)) (* (- 3) (* ?x2827 ?x2827 ?x2827 ?x2683 ?x2739 ?x2739 ?x2739)) (* 54 (* r!2 s!1 x!0 s00)) (* (- 36) (* r!2 r!2 s!1 s!1 s00)) (* 3 (* r00 ?x2827 ?x2827 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* (- 6) (* ?x2827 ?x2827 ?x2827 ?x2683 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* (- 432) (* r!2 r!2 r!2 s!1 r00 r00 r00)) (* 6 (* ?x2683 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* 6 (* r00 s00 ?x2827 ?x2827 ?x2827 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* 864 (* r!2 r!2 x!0 r00 r00 r00)) (* (- 6) (* r00 s00 ?x2683 ?x2683 ?x2739 ?x2739 ?x2739)) (* 540 (* r!2 x!0 r00 r00 r00)) (* 12 (* r00 r00 r00 ?x2827 ?x2827 ?x2827 ?x2683 ?x2739 ?x2739)) (* 2 (* ?x2827 ?x2827 ?x2683 ?x2739 ?x2739 ?x2739)) (* (- 864) (* r!2 r!2 s!1 r00 r00 r00)) (* (- 540) (* r!2 s!1 r00 r00 r00)) ?x3946 (* 3 (* ?x2827 ?x2827 ?x2827 ?x2827 ?x2683 ?x2739 ?x2739)) (* (- 72) (* s!1 s!1 r00 r00 r00)) (* (- 216) (* r!2 s!1 s!1 r00 r00 r00)) (* 72 (* s!1 x!0 r00 r00 r00)) (* 216 (* r!2 s!1 x!0 r00 r00 r00)) (* 432 (* r!2 r!2 r!2 x!0 r00 r00 r00)) (* (- 144) (* r!2 r!2 s!1 s!1 r00 r00 r00)))))
 (let ((?x1393 (* (- 108) ?x1363)))
 (let ((?x1392 (* (- 16) ?x1201)))
 (let ((?x1073 (* s00 r00 r00 r00)))
 (let ((?x1388 (* (- 216) ?x1073)))
 (let ((?x900 (* 432 ?x899)))
 (let ((?x1146 (* 108 ?x822)))
 (let ((?x748 (* s00 s00 r00 r00)))
 (let ((?x749 (* 36 ?x748)))
 (let ((?x685 (* s00 s00 r00)))
 (let ((?x1029 (* 108 ?x685)))
 (let ((?x1017 (* 36 ?x664)))
 (let ((?x1382 (* (- 51) ?x608)))
 (let ((?x4172 (* s!1 r00 r00)))
 (let ((?x3380 (* (- 36) ?x4172)))
 (let ((?x1379 (* (- 108) ?x539)))
 (let ((?x530 (* s00 r00 x00)))
 (let ((?x1378 (* (- 216) ?x530)))
 (let ((?x537 (* 54 ?x443)))
 (let ((?x1004 (* (- 9) s00)))
 (let ((?x2271 (* 9 s!1)))
 (let ((?x1561 (+ ?x2271 ?x1004 ?x537 ?x1378 ?x1379 (* (- 15) (* s!1 s!1)) ?x3380 ?x1382 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1017 ?x1029 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x749 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1146 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x900 (* 12 (* s!1 s!1 s00)) ?x1388 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1392 (* 216 (* x!0 x00)) ?x1393)))
 (let ((?x907 (* (- 36) ?x894)))
 (let ((?x823 (* 6 ?x822)))
 (let ((?x713 (* (- 2) ?x685)))
 (let ((?x933 (* (- 15) ?x608)))
 (let ((?x568 (* (- 54) ?x539)))
 (let ((?x581 (* 24 ?x443)))
 (let ((?x1152 (+ ?x2271 ?x1004 (* (- 24) ?x4354) (* 24 (* r!2 s00)) ?x581 ?x568 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x3380 ?x933 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1017 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x713 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x823 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x907 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x665 (* 6 ?x664)))
 (let ((?x621 (* (- 4) ?x608)))
 (let ((?x553 (* (- 18) ?x539)))
 (let ((?x558 (* 9 ?x443)))
 (let ((?x395 (* (- 3) s00)))
 (let ((?x1928 (+ (* 3 s!1) ?x395 (* (- 9) ?x4354) (* 9 (* r!2 s00)) ?x558 ?x553 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x4172) ?x621 (* 18 (* x!0 r00)) ?x665 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x4192 (+ ?x3451 ?x3449 ?x3735 ?x44 ?x517 ?x518 ?x2630 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x521 ?x487)))
 (let (($x3730 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x318)) 0)))
 (let (($x3864 (and $x3730 (= ?x4192 0) (= ?x1928 0) (= ?x1152 0) (= ?x1561 0) (not (= ?x671 0)))))
 (let (($x3933 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1400 (+ 3 ?x211 s)))
 (let ((?x297 (* (- 1) s)))
 (let ((?x1406 (+ ?x297 x)))
 (let ((?x1413 (+ 1 r)))
 (let ((?x3487 (* 12 (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400))))
 (let ((?x2881 (* (- 108) (* r r r x r00))))
 (let ((?x2845 (* 108 (* r r r s r00))))
 (let ((?x2835 (* 3 (* s s s r00))))
 (let ((?x2809 (* 3 (* r s s s r00))))
 (let ((?x2922 (* 36 (* r r s s r00))))
 (let ((?x2921 (* (- 18) (* s x r00))))
 (let ((?x2920 (* (- 54) (* r s x r00))))
 (let ((?x2723 (* (- 12) (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400))))
 (let ((?x2917 (* (- 36) (* r r s x r00))))
 (let ((?x2712 (* (- 3) (* r s s x r00))))
 (let ((?x2701 (* (- 3) (* s s x r00))))
 (let ((?x2916 (* 54 (* r s s r00))))
 (let ((?x2915 (* 216 (* r r s r00))))
 (let ((?x2911 (* (- 216) (* r r x r00))))
 (let ((?x2320 (* 270 (* r s s00 r00))))
 (let ((?x2319 (* 432 (* r r s s00 r00))))
 (let ((?x2242 (* 216 (* r r r s s00 r00))))
 (let ((?x2318 (* 36 (* s s s00 r00))))
 (let ((?x2317 (* 108 (* r s s s00 r00))))
 (let ((?x2316 (* 72 (* r r s s s00 r00))))
 (let ((?x2315 (* (- 270) (* r x s00 r00))))
 (let ((?x2314 (* (- 432) (* r r x s00 r00))))
 (let ((?x2114 (* (- 216) (* r r r x s00 r00))))
 (let ((?x2313 (* (- 36) (* s x s00 r00))))
 (let ((?x2312 (* (- 72) (* r r s x s00 r00))))
 (let ((?x2311 (* (- 108) (* r s x s00 r00))))
 (let ((?x1904 (* (- 6) (* s s x s00 r00))))
 (let ((?x1891 (* (- 6) (* r s s x s00 r00))))
 (let ((?x1887 (* 6 (* s s s s00 r00))))
 (let ((?x1876 (* 6 (* r s s s s00 r00))))
 (let ((?x1811 (* 432 (* r r s x00))))
 (let ((?x1774 (* 216 (* r r r s x00))))
 (let ((?x1810 (* 108 (* r s s x00))))
 (let ((?x1809 (* 72 (* r r s s x00))))
 (let ((?x1743 (* 6 (* s s s x00))))
 (let ((?x1739 (* 6 (* r s s s x00))))
 (let ((?x1804 (* (- 72) (* r r s x x00))))
 (let ((?x1801 (* (- 270) (* r x x00))))
 (let ((?x1807 (* 36 (* s s x00))))
 (let ((?x1806 (* 270 (* r s x00))))
 (let ((?x1727 (* (- 6) (* r s s x x00))))
 (let ((?x1724 (* (- 6) (* s s x x00))))
 (let ((?x1802 (* (- 36) (* s x x00))))
 (let ((?x1525 (* (- 216) (* r r r x x00))))
 (let ((?x1798 (* (- 432) (* r r x x00))))
 (let ((?x1799 (* (- 108) (* r s x x00))))
 (let ((?x1337 (* x x00)))
 (let ((?x1496 (* (- 54) ?x1337)))
 (let ((?x1171 (* x s00 r00)))
 (let ((?x2177 (* (- 54) ?x1171)))
 (let ((?x796 (* s s00 r00)))
 (let ((?x2305 (* 54 ?x796)))
 (let ((?x741 (* s x00)))
 (let ((?x1490 (* 54 ?x741)))
 (let ((?x717 (* s r00)))
 (let ((?x2646 (* 27 ?x717)))
 (let ((?x705 (* s s00)))
 (let ((?x3128 (* (- 27) ?x705)))
 (let ((?x668 (* s s r00)))
 (let ((?x2914 (* 18 ?x668)))
 (let ((?x634 (* x r00)))
 (let ((?x2799 (* (- 27) ?x634)))
 (let ((?x617 (* x s00)))
 (let ((?x3333 (* 27 ?x617)))
 (let ((?x575 (* r x r00)))
 (let ((?x2919 (* (- 135) ?x575)))
 (let ((?x570 (* r s r00)))
 (let ((?x2913 (* 135 ?x570)))
 (let ((?x2288 (+ (* 3 (* s00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* 12 (* s s x r00 r00 r00)) (* 12 (* r s s x r00 r00 r00)) ?x2913 ?x2919 ?x3333 ?x2799 (* (- 108) (* s r00 r00 r00)) ?x2914 ?x3128 ?x2646 (* 6 (* x00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* (- 108) (* r r r s s00)) ?x1490 ?x2305 (* 36 (* r r s x s00)) (* (- 12) (* s s s r00 r00 r00)) (* (- 135) (* r s s00)) (* (- 18) (* s s s00)) (* 108 (* x r00 r00 r00)) (* (- 12) (* r s s s r00 r00 r00)) ?x2177 (* 108 (* r r r x s00)) (* 12 (* r00 r00 r00 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x1496 ?x1799 ?x1798 ?x1525 (* (- 2) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400 ?x1400)) ?x1802 ?x1724 ?x1727 ?x1806 ?x1807 ?x1801 (* 3 (* s00 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x1804 ?x1739 ?x1743 ?x1809 ?x1810 ?x1774 ?x1811 ?x1876 (* (- 3) (* s s s s00)) ?x1887 ?x1891 (* (- 3) (* r s s s s00)) ?x1904 (* (- 3) (* ?x1413 ?x1406 ?x1400 ?x1400 ?x1400)) (* 2 (* ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400 ?x1400)) (* 3 (* s s x s00)) ?x2311 (* 3 (* r s s x s00)) ?x2312 ?x2313 ?x2114 ?x2314 ?x2315 (* 3 (* ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2316 (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) ?x2317 (* 2 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2318 (* 4 (* s00 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2242 (* (- 54) (* r s s s00)) ?x2319 ?x2320 (* 4 (* s00 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* 4 (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* (- 4) (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2911 (* (- 3) (* ?x1406 ?x1406 ?x1400 ?x1400 ?x1400 ?x1400)) (* (- 3) (* r00 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* (- 12) (* r00 r00 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2915 ?x2916 (* (- 6) (* x00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* 6 (* ?x1413 ?x1406 ?x1406 ?x1400 ?x1400)) ?x2701 ?x2712 (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2917 ?x2723 ?x2920 ?x2921 (* (- 6) (* r00 s00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* (- 3) (* s00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2922 (* 6 (* ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400)) (* (- 3) (* r00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* 3 (* ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) ?x2809 (* (- 6) (* x00 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2835 ?x2845 (* 3 (* ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400 ?x1400)) ?x2881 (* (- 216) (* r r s s00)) (* 216 (* r r x s00)) (* 135 (* r x s00)) (* 18 (* s x s00)) (* 144 (* r r s x r00 r00 r00)) (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400 ?x1400)) (* 54 (* r s x s00)) (* (- 36) (* r r s s s00)) (* 3 (* r00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* (- 6) (* ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* (- 432) (* r r r s r00 r00 r00)) (* 6 (* ?x1406 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* 864 (* r r x r00 r00 r00)) (* (- 6) (* r00 s00 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* 540 (* r x r00 r00 r00)) (* 12 (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* 2 (* ?x1413 ?x1413 ?x1406 ?x1400 ?x1400 ?x1400)) (* (- 864) (* r r s r00 r00 r00)) (* (- 540) (* r s r00 r00 r00)) ?x3487 (* 3 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* (- 72) (* s s r00 r00 r00)) (* (- 216) (* r s s r00 r00 r00)) (* 72 (* s x r00 r00 r00)) (* 216 (* r s x r00 r00 r00)) (* 432 (* r r r x r00 r00 r00)) (* (- 144) (* r r s s r00 r00 r00)))))
 (let ((?x1363 (* x00 x00)))
 (let ((?x1393 (* (- 108) ?x1363)))
 (let ((?x1201 (* s00 s00 s00)))
 (let ((?x1392 (* (- 16) ?x1201)))
 (let ((?x1073 (* s00 r00 r00 r00)))
 (let ((?x1388 (* (- 216) ?x1073)))
 (let ((?x899 (* r00 r00 r00 x00)))
 (let ((?x900 (* 432 ?x899)))
 (let ((?x822 (* s00 x00)))
 (let ((?x1146 (* 108 ?x822)))
 (let ((?x748 (* s00 s00 r00 r00)))
 (let ((?x749 (* 36 ?x748)))
 (let ((?x685 (* s00 s00 r00)))
 (let ((?x1029 (* 108 ?x685)))
 (let ((?x664 (* s00 r00 r00)))
 (let ((?x1017 (* 36 ?x664)))
 (let ((?x608 (* s00 s00)))
 (let ((?x1382 (* (- 51) ?x608)))
 (let ((?x582 (* s r00 r00)))
 (let ((?x881 (* (- 36) ?x582)))
 (let ((?x539 (* r00 x00)))
 (let ((?x1379 (* (- 108) ?x539)))
 (let ((?x530 (* s00 r00 x00)))
 (let ((?x1378 (* (- 216) ?x530)))
 (let ((?x443 (* s00 r00)))
 (let ((?x537 (* 54 ?x443)))
 (let ((?x1004 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1394 (+ ?x143 ?x1004 ?x537 ?x1378 ?x1379 (* (- 15) (* s s)) ?x881 ?x1382 (* (- 108) ?x617) (* 108 ?x634) (* 216 (* s r00 r00 r00)) ?x1017 ?x1029 (* 66 ?x705) (* (- 54) ?x717) (* (- 108) ?x741) ?x749 (* (- 108) ?x796) (* 4 (* s s s)) ?x1146 (* 108 (* s x)) (* (- 108) (* x x)) ?x900 (* 12 (* s s s00)) ?x1388 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1171) (* (- 36) (* s s r00 r00)) ?x1392 (* 216 ?x1337) ?x1393)))
 (let (($x1395 (= ?x1394 0)))
 (let ((?x894 (* r00 r00 x00)))
 (let ((?x907 (* (- 36) ?x894)))
 (let ((?x823 (* 6 ?x822)))
 (let ((?x713 (* (- 2) ?x685)))
 (let ((?x933 (* (- 15) ?x608)))
 (let ((?x562 (* s s)))
 (let ((?x586 (* 3 ?x562)))
 (let ((?x568 (* (- 54) ?x539)))
 (let ((?x581 (* 24 ?x443)))
 (let ((?x1096 (+ ?x143 ?x1004 (* (- 24) (* r s)) (* 24 (* r s00)) ?x581 ?x568 ?x586 (* 54 (* r x)) (* 36 ?x575) ?x881 ?x933 (* (- 6) ?x617) (* 54 ?x634) ?x1017 (* 4 ?x668) (* (- 54) (* r x00)) ?x713 (* 12 ?x705) (* (- 24) ?x717) (* (- 6) ?x741) (* (- 2) ?x796) ?x823 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x907 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1101 (= ?x1096 0)))
 (let ((?x665 (* 6 ?x664)))
 (let ((?x621 (* (- 4) ?x608)))
 (let ((?x563 (* 2 ?x562)))
 (let ((?x553 (* (- 18) ?x539)))
 (let ((?x558 (* 9 ?x443)))
 (let ((?x395 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x762 (+ ?x47 ?x395 (* (- 9) (* r s)) (* 9 (* r s00)) ?x558 ?x553 ?x563 (* 18 (* r x)) (* 6 ?x570) (* (- 6) ?x582) ?x621 (* 18 ?x634) ?x665 (* (- 18) (* r x00)) (* 2 ?x705) (* (- 9) ?x717) (* (- 6) (* r s00 r00)))))
 (let (($x769 (= ?x762 0)))
 (let ((?x486 (* r00 r00 r00)))
 (let ((?x487 (* 12 ?x486)))
 (let ((?x521 (* (- 6) ?x443)))
 (let ((?x518 (* (- 6) x00)))
 (let ((?x517 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x516 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x522 (+ ?x43 ?x516 ?x56 ?x44 ?x517 ?x518 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x521 ?x487)))
 (let (($x523 (= ?x522 0)))
 (let ((?x318 (* r00 r00)))
 (let ((?x319 (* 3 ?x318)))
 (let ((?x348 (* (- 1) s00)))
 (let (($x351 (= (+ s ?x348 (* (- 3) (* r r)) ?x319) 0)))
 (and $x351 $x523 $x769 $x1101 $x1395 (not (= ?x2288 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x3977 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x4466 (+ 3 s ?x211)))
 (let ((?x297 (* (- 1) s)))
 (let ((?x2724 (+ x ?x297)))
 (let ((?x1413 (+ 1 r)))
 (let ((?x3502 (* (- 12) (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466))))
 (let ((?x2500 (* 12 (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466))))
 (let ((?x2999 (+ (* 3 (* s00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 2) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 6) (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* 6 (* x00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* x00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 6 (* ?x2724 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) ?x2500 (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* r00 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 6) (* x00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 6 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466)) (* (- 3) (* s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 6) (* x00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) ?x3502 (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* 6 (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466)) (* (- 3) (* r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 3) (* r00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* s00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 4) (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)))))
 (let (($x4350 (not (= ?x2999 0))))
 (let ((?x1363 (* x00 x00)))
 (let ((?x1130 (* 108 ?x1363)))
 (let ((?x1270 (* (- 9) s)))
 (let ((?x1657 (* r00 r00 s00)))
 (let ((?x773 (* (- 36) ?x1657)))
 (let ((?x137 (* 9 s00)))
 (let ((?x608 (* s00 s00)))
 (let ((?x797 (* 51 ?x608)))
 (let ((?x1702 (* r00 r00 s)))
 (let ((?x4001 (* 36 ?x1702)))
 (let ((?x1201 (* s00 s00 s00)))
 (let ((?x1626 (* 16 ?x1201)))
 (let ((?x822 (* s00 x00)))
 (let ((?x1435 (* (- 108) ?x822)))
 (let ((?x899 (* r00 r00 r00 x00)))
 (let ((?x1315 (* (- 432) ?x899)))
 (let ((?x539 (* r00 x00)))
 (let ((?x2216 (* 108 ?x539)))
 (let ((?x4082 (+ (* 216 (* r00 s00 x00)) ?x2216 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1315 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1435 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1626 (* (- 108) (* x s)) ?x4001 ?x797 (* (- 108) (* r00 x)) ?x137 ?x773 ?x1270 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1130)))
 (let (($x3068 (= ?x4082 0)))
 (let ((?x3305 (* 15 ?x608)))
 (let ((?x894 (* r00 r00 x00)))
 (let ((?x1355 (* 36 ?x894)))
 (let ((?x1717 (* (- 6) ?x822)))
 (let ((?x1471 (* 54 ?x539)))
 (let ((?x3517 (+ (* 24 (* s r)) ?x1471 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1717 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4001 ?x1355 ?x3305 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x773 (* 54 (* x00 r)) ?x1270 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x516 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3460 (* 4 ?x608)))
 (let ((?x3486 (* 18 ?x539)))
 (let ((?x3776 (+ (* 9 (* s r)) ?x3486 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1702) ?x3460 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1657) (* 18 (* x00 r)) ?x516 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x486 (* r00 r00 r00)))
 (let ((?x487 (* 12 ?x486)))
 (let ((?x518 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x517 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3757 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x516 ?x517 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x518 ?x487)))
 (let (($x2298 (= (+ s00 ?x297 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2298 (= ?x3757 0) (= ?x3776 0) (= ?x3517 0) $x3068 $x4350))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3512 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1400 (+ 3 ?x211 s)))
 (let ((?x297 (* (- 1) s)))
 (let ((?x1406 (+ ?x297 x)))
 (let ((?x1413 (+ 1 r)))
 (let ((?x3487 (* 12 (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400))))
 (let ((?x2881 (* (- 108) (* r r r x r00))))
 (let ((?x2845 (* 108 (* r r r s r00))))
 (let ((?x2835 (* 3 (* s s s r00))))
 (let ((?x2809 (* 3 (* r s s s r00))))
 (let ((?x2922 (* 36 (* r r s s r00))))
 (let ((?x2921 (* (- 18) (* s x r00))))
 (let ((?x2920 (* (- 54) (* r s x r00))))
 (let ((?x2723 (* (- 12) (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400))))
 (let ((?x2917 (* (- 36) (* r r s x r00))))
 (let ((?x2712 (* (- 3) (* r s s x r00))))
 (let ((?x2701 (* (- 3) (* s s x r00))))
 (let ((?x2916 (* 54 (* r s s r00))))
 (let ((?x2915 (* 216 (* r r s r00))))
 (let ((?x2911 (* (- 216) (* r r x r00))))
 (let ((?x2320 (* 270 (* r s s00 r00))))
 (let ((?x2319 (* 432 (* r r s s00 r00))))
 (let ((?x2242 (* 216 (* r r r s s00 r00))))
 (let ((?x2318 (* 36 (* s s s00 r00))))
 (let ((?x2317 (* 108 (* r s s s00 r00))))
 (let ((?x2316 (* 72 (* r r s s s00 r00))))
 (let ((?x2315 (* (- 270) (* r x s00 r00))))
 (let ((?x2314 (* (- 432) (* r r x s00 r00))))
 (let ((?x2114 (* (- 216) (* r r r x s00 r00))))
 (let ((?x2313 (* (- 36) (* s x s00 r00))))
 (let ((?x2312 (* (- 72) (* r r s x s00 r00))))
 (let ((?x2311 (* (- 108) (* r s x s00 r00))))
 (let ((?x1904 (* (- 6) (* s s x s00 r00))))
 (let ((?x1891 (* (- 6) (* r s s x s00 r00))))
 (let ((?x1887 (* 6 (* s s s s00 r00))))
 (let ((?x1876 (* 6 (* r s s s s00 r00))))
 (let ((?x1811 (* 432 (* r r s x00))))
 (let ((?x1774 (* 216 (* r r r s x00))))
 (let ((?x1810 (* 108 (* r s s x00))))
 (let ((?x1809 (* 72 (* r r s s x00))))
 (let ((?x1743 (* 6 (* s s s x00))))
 (let ((?x1739 (* 6 (* r s s s x00))))
 (let ((?x1804 (* (- 72) (* r r s x x00))))
 (let ((?x1801 (* (- 270) (* r x x00))))
 (let ((?x1807 (* 36 (* s s x00))))
 (let ((?x1806 (* 270 (* r s x00))))
 (let ((?x1727 (* (- 6) (* r s s x x00))))
 (let ((?x1724 (* (- 6) (* s s x x00))))
 (let ((?x1802 (* (- 36) (* s x x00))))
 (let ((?x1525 (* (- 216) (* r r r x x00))))
 (let ((?x1798 (* (- 432) (* r r x x00))))
 (let ((?x1799 (* (- 108) (* r s x x00))))
 (let ((?x1337 (* x x00)))
 (let ((?x1496 (* (- 54) ?x1337)))
 (let ((?x1171 (* x s00 r00)))
 (let ((?x2177 (* (- 54) ?x1171)))
 (let ((?x796 (* s s00 r00)))
 (let ((?x2305 (* 54 ?x796)))
 (let ((?x741 (* s x00)))
 (let ((?x1490 (* 54 ?x741)))
 (let ((?x717 (* s r00)))
 (let ((?x2646 (* 27 ?x717)))
 (let ((?x705 (* s s00)))
 (let ((?x3128 (* (- 27) ?x705)))
 (let ((?x668 (* s s r00)))
 (let ((?x2914 (* 18 ?x668)))
 (let ((?x634 (* x r00)))
 (let ((?x2799 (* (- 27) ?x634)))
 (let ((?x617 (* x s00)))
 (let ((?x3333 (* 27 ?x617)))
 (let ((?x575 (* r x r00)))
 (let ((?x2919 (* (- 135) ?x575)))
 (let ((?x570 (* r s r00)))
 (let ((?x2913 (* 135 ?x570)))
 (let ((?x2288 (+ (* 3 (* s00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* 12 (* s s x r00 r00 r00)) (* 12 (* r s s x r00 r00 r00)) ?x2913 ?x2919 ?x3333 ?x2799 (* (- 108) (* s r00 r00 r00)) ?x2914 ?x3128 ?x2646 (* 6 (* x00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* (- 108) (* r r r s s00)) ?x1490 ?x2305 (* 36 (* r r s x s00)) (* (- 12) (* s s s r00 r00 r00)) (* (- 135) (* r s s00)) (* (- 18) (* s s s00)) (* 108 (* x r00 r00 r00)) (* (- 12) (* r s s s r00 r00 r00)) ?x2177 (* 108 (* r r r x s00)) (* 12 (* r00 r00 r00 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x1496 ?x1799 ?x1798 ?x1525 (* (- 2) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400 ?x1400)) ?x1802 ?x1724 ?x1727 ?x1806 ?x1807 ?x1801 (* 3 (* s00 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x1804 ?x1739 ?x1743 ?x1809 ?x1810 ?x1774 ?x1811 ?x1876 (* (- 3) (* s s s s00)) ?x1887 ?x1891 (* (- 3) (* r s s s s00)) ?x1904 (* (- 3) (* ?x1413 ?x1406 ?x1400 ?x1400 ?x1400)) (* 2 (* ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400 ?x1400)) (* 3 (* s s x s00)) ?x2311 (* 3 (* r s s x s00)) ?x2312 ?x2313 ?x2114 ?x2314 ?x2315 (* 3 (* ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2316 (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) ?x2317 (* 2 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2318 (* 4 (* s00 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2242 (* (- 54) (* r s s s00)) ?x2319 ?x2320 (* 4 (* s00 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* 4 (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* (- 4) (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2911 (* (- 3) (* ?x1406 ?x1406 ?x1400 ?x1400 ?x1400 ?x1400)) (* (- 3) (* r00 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* (- 12) (* r00 r00 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2915 ?x2916 (* (- 6) (* x00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* 6 (* ?x1413 ?x1406 ?x1406 ?x1400 ?x1400)) ?x2701 ?x2712 (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2917 ?x2723 ?x2920 ?x2921 (* (- 6) (* r00 s00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* (- 3) (* s00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2922 (* 6 (* ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400)) (* (- 3) (* r00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* 3 (* ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) ?x2809 (* (- 6) (* x00 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) ?x2835 ?x2845 (* 3 (* ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400 ?x1400)) ?x2881 (* (- 216) (* r r s s00)) (* 216 (* r r x s00)) (* 135 (* r x s00)) (* 18 (* s x s00)) (* 144 (* r r s x r00 r00 r00)) (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400 ?x1400)) (* 54 (* r s x s00)) (* (- 36) (* r r s s s00)) (* 3 (* r00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* (- 6) (* ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* (- 432) (* r r r s r00 r00 r00)) (* 6 (* ?x1406 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* 864 (* r r x r00 r00 r00)) (* (- 6) (* r00 s00 ?x1406 ?x1406 ?x1400 ?x1400 ?x1400)) (* 540 (* r x r00 r00 r00)) (* 12 (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* 2 (* ?x1413 ?x1413 ?x1406 ?x1400 ?x1400 ?x1400)) (* (- 864) (* r r s r00 r00 r00)) (* (- 540) (* r s r00 r00 r00)) ?x3487 (* 3 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x1406 ?x1400 ?x1400)) (* (- 72) (* s s r00 r00 r00)) (* (- 216) (* r s s r00 r00 r00)) (* 72 (* s x r00 r00 r00)) (* 216 (* r s x r00 r00 r00)) (* 432 (* r r r x r00 r00 r00)) (* (- 144) (* r r s s r00 r00 r00)))))
 (let ((?x1363 (* x00 x00)))
 (let ((?x1393 (* (- 108) ?x1363)))
 (let ((?x1201 (* s00 s00 s00)))
 (let ((?x1392 (* (- 16) ?x1201)))
 (let ((?x1073 (* s00 r00 r00 r00)))
 (let ((?x1388 (* (- 216) ?x1073)))
 (let ((?x899 (* r00 r00 r00 x00)))
 (let ((?x900 (* 432 ?x899)))
 (let ((?x822 (* s00 x00)))
 (let ((?x1146 (* 108 ?x822)))
 (let ((?x748 (* s00 s00 r00 r00)))
 (let ((?x749 (* 36 ?x748)))
 (let ((?x685 (* s00 s00 r00)))
 (let ((?x1029 (* 108 ?x685)))
 (let ((?x664 (* s00 r00 r00)))
 (let ((?x1017 (* 36 ?x664)))
 (let ((?x608 (* s00 s00)))
 (let ((?x1382 (* (- 51) ?x608)))
 (let ((?x582 (* s r00 r00)))
 (let ((?x881 (* (- 36) ?x582)))
 (let ((?x539 (* r00 x00)))
 (let ((?x1379 (* (- 108) ?x539)))
 (let ((?x530 (* s00 r00 x00)))
 (let ((?x1378 (* (- 216) ?x530)))
 (let ((?x443 (* s00 r00)))
 (let ((?x537 (* 54 ?x443)))
 (let ((?x1004 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1394 (+ ?x143 ?x1004 ?x537 ?x1378 ?x1379 (* (- 15) (* s s)) ?x881 ?x1382 (* (- 108) ?x617) (* 108 ?x634) (* 216 (* s r00 r00 r00)) ?x1017 ?x1029 (* 66 ?x705) (* (- 54) ?x717) (* (- 108) ?x741) ?x749 (* (- 108) ?x796) (* 4 (* s s s)) ?x1146 (* 108 (* s x)) (* (- 108) (* x x)) ?x900 (* 12 (* s s s00)) ?x1388 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1171) (* (- 36) (* s s r00 r00)) ?x1392 (* 216 ?x1337) ?x1393)))
 (let (($x1395 (= ?x1394 0)))
 (let ((?x894 (* r00 r00 x00)))
 (let ((?x907 (* (- 36) ?x894)))
 (let ((?x823 (* 6 ?x822)))
 (let ((?x713 (* (- 2) ?x685)))
 (let ((?x933 (* (- 15) ?x608)))
 (let ((?x562 (* s s)))
 (let ((?x586 (* 3 ?x562)))
 (let ((?x568 (* (- 54) ?x539)))
 (let ((?x581 (* 24 ?x443)))
 (let ((?x1096 (+ ?x143 ?x1004 (* (- 24) (* r s)) (* 24 (* r s00)) ?x581 ?x568 ?x586 (* 54 (* r x)) (* 36 ?x575) ?x881 ?x933 (* (- 6) ?x617) (* 54 ?x634) ?x1017 (* 4 ?x668) (* (- 54) (* r x00)) ?x713 (* 12 ?x705) (* (- 24) ?x717) (* (- 6) ?x741) (* (- 2) ?x796) ?x823 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x907 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1101 (= ?x1096 0)))
 (let ((?x665 (* 6 ?x664)))
 (let ((?x621 (* (- 4) ?x608)))
 (let ((?x563 (* 2 ?x562)))
 (let ((?x553 (* (- 18) ?x539)))
 (let ((?x558 (* 9 ?x443)))
 (let ((?x395 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x762 (+ ?x47 ?x395 (* (- 9) (* r s)) (* 9 (* r s00)) ?x558 ?x553 ?x563 (* 18 (* r x)) (* 6 ?x570) (* (- 6) ?x582) ?x621 (* 18 ?x634) ?x665 (* (- 18) (* r x00)) (* 2 ?x705) (* (- 9) ?x717) (* (- 6) (* r s00 r00)))))
 (let (($x769 (= ?x762 0)))
 (let ((?x486 (* r00 r00 r00)))
 (let ((?x487 (* 12 ?x486)))
 (let ((?x521 (* (- 6) ?x443)))
 (let ((?x518 (* (- 6) x00)))
 (let ((?x517 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x516 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x522 (+ ?x43 ?x516 ?x56 ?x44 ?x517 ?x518 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x521 ?x487)))
 (let (($x523 (= ?x522 0)))
 (let ((?x318 (* r00 r00)))
 (let ((?x319 (* 3 ?x318)))
 (let ((?x348 (* (- 1) s00)))
 (let (($x351 (= (+ s ?x348 (* (- 3) (* r r)) ?x319) 0)))
 (let (($x2295 (and $x351 $x523 $x769 $x1101 $x1395 (not (= ?x2288 0)))))
 (let ((?x4466 (+ 3 s ?x211)))
 (let ((?x2724 (+ x ?x297)))
 (let ((?x3502 (* (- 12) (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466))))
 (let ((?x2500 (* 12 (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466))))
 (let ((?x2999 (+ (* 3 (* s00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 2) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 6) (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* 6 (* x00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* x00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 6 (* ?x2724 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) ?x2500 (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* r00 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 6) (* x00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 6 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466)) (* (- 3) (* s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 6) (* x00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) ?x3502 (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* 6 (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466)) (* (- 3) (* r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 3) (* r00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* s00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 4) (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)))))
 (let (($x4350 (not (= ?x2999 0))))
 (let ((?x1130 (* 108 ?x1363)))
 (let ((?x1270 (* (- 9) s)))
 (let ((?x1657 (* r00 r00 s00)))
 (let ((?x773 (* (- 36) ?x1657)))
 (let ((?x137 (* 9 s00)))
 (let ((?x797 (* 51 ?x608)))
 (let ((?x1702 (* r00 r00 s)))
 (let ((?x4001 (* 36 ?x1702)))
 (let ((?x1626 (* 16 ?x1201)))
 (let ((?x1435 (* (- 108) ?x822)))
 (let ((?x1315 (* (- 432) ?x899)))
 (let ((?x2216 (* 108 ?x539)))
 (let ((?x4082 (+ (* 216 (* r00 s00 x00)) ?x2216 (* (- 54) (* r00 s00)) (* 15 ?x562) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1315 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1435 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1626 (* (- 108) (* x s)) ?x4001 ?x797 (* (- 108) (* r00 x)) ?x137 ?x773 ?x1270 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1130)))
 (let (($x3068 (= ?x4082 0)))
 (let ((?x3305 (* 15 ?x608)))
 (let ((?x1355 (* 36 ?x894)))
 (let ((?x1717 (* (- 6) ?x822)))
 (let ((?x1471 (* 54 ?x539)))
 (let ((?x3517 (+ (* 24 (* s r)) ?x1471 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x562) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1717 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4001 ?x1355 ?x3305 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x773 (* 54 (* x00 r)) ?x1270 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x3460 (* 4 ?x608)))
 (let ((?x3486 (* 18 ?x539)))
 (let ((?x3776 (+ (* 9 (* s r)) ?x3486 (* (- 9) (* r00 s00)) (* (- 2) ?x562) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1702) ?x3460 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1657) (* 18 (* x00 r)) ?x516 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x3757 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x516 ?x517 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x518 ?x487)))
 (let (($x2298 (= (+ s00 ?x297 (* 3 (* r r)) (* (- 3) ?x318)) 0)))
 (let (($x3981 (and $x2298 (= ?x3757 0) (= ?x3776 0) (= ?x3517 0) $x3068 $x4350)))
 (rewrite (= $x3981 $x2295)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2197 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x4466 (+ 3 s ?x211)))
 (let ((?x297 (* (- 1) s)))
 (let ((?x2724 (+ x ?x297)))
 (let ((?x1413 (+ 1 r)))
 (let ((?x3502 (* (- 12) (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466))))
 (let ((?x2500 (* 12 (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466))))
 (let ((?x2999 (+ (* 3 (* s00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 2) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 6) (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* 6 (* x00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* x00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 6 (* ?x2724 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) ?x2500 (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* r00 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 6) (* x00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 6 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466)) (* (- 3) (* s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 6) (* x00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) ?x3502 (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* 6 (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466)) (* (- 3) (* r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 3) (* r00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* s00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 4) (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)))))
 (let (($x4350 (not (= ?x2999 0))))
 (let ((?x1363 (* x00 x00)))
 (let ((?x1130 (* 108 ?x1363)))
 (let ((?x1270 (* (- 9) s)))
 (let ((?x1657 (* r00 r00 s00)))
 (let ((?x773 (* (- 36) ?x1657)))
 (let ((?x137 (* 9 s00)))
 (let ((?x608 (* s00 s00)))
 (let ((?x797 (* 51 ?x608)))
 (let ((?x1702 (* r00 r00 s)))
 (let ((?x4001 (* 36 ?x1702)))
 (let ((?x1201 (* s00 s00 s00)))
 (let ((?x1626 (* 16 ?x1201)))
 (let ((?x822 (* s00 x00)))
 (let ((?x1435 (* (- 108) ?x822)))
 (let ((?x899 (* r00 r00 r00 x00)))
 (let ((?x1315 (* (- 432) ?x899)))
 (let ((?x539 (* r00 x00)))
 (let ((?x2216 (* 108 ?x539)))
 (let ((?x4082 (+ (* 216 (* r00 s00 x00)) ?x2216 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1315 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1435 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1626 (* (- 108) (* x s)) ?x4001 ?x797 (* (- 108) (* r00 x)) ?x137 ?x773 ?x1270 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1130)))
 (let (($x3068 (= ?x4082 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1004 (* (- 9) s00)))
 (let ((?x933 (* (- 15) ?x608)))
 (let ((?x894 (* r00 r00 x00)))
 (let ((?x907 (* (- 36) ?x894)))
 (let ((?x823 (* 6 ?x822)))
 (let ((?x562 (* s s)))
 (let ((?x586 (* 3 ?x562)))
 (let ((?x568 (* (- 54) ?x539)))
 (let ((?x4128 (+ (* (- 24) (* s r)) ?x568 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x586 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x823 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1702) ?x907 ?x933 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1004 (* 36 ?x1657) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x395 (* (- 3) s00)))
 (let ((?x621 (* (- 4) ?x608)))
 (let ((?x563 (* 2 ?x562)))
 (let ((?x553 (* (- 18) ?x539)))
 (let ((?x1713 (+ (* (- 9) (* s r)) ?x553 (* 9 (* r00 s00)) ?x563 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1702) ?x621 (* 18 (* r00 x)) ?x395 (* 6 ?x1657) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x3224 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x395 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2298 (= (+ s00 ?x297 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2298 (= ?x3224 0) (= ?x1713 0) (= ?x4128 0) $x3068 $x4350)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3979 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x4466 (+ 3 s ?x211)))
 (let ((?x297 (* (- 1) s)))
 (let ((?x2724 (+ x ?x297)))
 (let ((?x1413 (+ 1 r)))
 (let ((?x3502 (* (- 12) (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466))))
 (let ((?x2500 (* 12 (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466))))
 (let ((?x2999 (+ (* 3 (* s00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 2) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 6) (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* 6 (* x00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* x00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 6 (* ?x2724 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) ?x2500 (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* r00 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 6) (* x00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 6 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466)) (* (- 3) (* s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 6) (* x00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) ?x3502 (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* 6 (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466)) (* (- 3) (* r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 3) (* r00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* s00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 4) (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)))))
 (let (($x4350 (not (= ?x2999 0))))
 (let ((?x1363 (* x00 x00)))
 (let ((?x1130 (* 108 ?x1363)))
 (let ((?x1270 (* (- 9) s)))
 (let ((?x1657 (* r00 r00 s00)))
 (let ((?x773 (* (- 36) ?x1657)))
 (let ((?x137 (* 9 s00)))
 (let ((?x608 (* s00 s00)))
 (let ((?x797 (* 51 ?x608)))
 (let ((?x1702 (* r00 r00 s)))
 (let ((?x4001 (* 36 ?x1702)))
 (let ((?x1201 (* s00 s00 s00)))
 (let ((?x1626 (* 16 ?x1201)))
 (let ((?x822 (* s00 x00)))
 (let ((?x1435 (* (- 108) ?x822)))
 (let ((?x899 (* r00 r00 r00 x00)))
 (let ((?x1315 (* (- 432) ?x899)))
 (let ((?x539 (* r00 x00)))
 (let ((?x2216 (* 108 ?x539)))
 (let ((?x4082 (+ (* 216 (* r00 s00 x00)) ?x2216 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1315 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1435 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1626 (* (- 108) (* x s)) ?x4001 ?x797 (* (- 108) (* r00 x)) ?x137 ?x773 ?x1270 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1130)))
 (let (($x3068 (= ?x4082 0)))
 (let ((?x3305 (* 15 ?x608)))
 (let ((?x894 (* r00 r00 x00)))
 (let ((?x1355 (* 36 ?x894)))
 (let ((?x1717 (* (- 6) ?x822)))
 (let ((?x1471 (* 54 ?x539)))
 (let ((?x3517 (+ (* 24 (* s r)) ?x1471 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1717 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4001 ?x1355 ?x3305 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x773 (* 54 (* x00 r)) ?x1270 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x516 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3460 (* 4 ?x608)))
 (let ((?x3486 (* 18 ?x539)))
 (let ((?x3776 (+ (* 9 (* s r)) ?x3486 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1702) ?x3460 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1657) (* 18 (* x00 r)) ?x516 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x486 (* r00 r00 r00)))
 (let ((?x487 (* 12 ?x486)))
 (let ((?x518 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x517 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3757 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x516 ?x517 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x518 ?x487)))
 (let (($x2298 (= (+ s00 ?x297 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3981 (and $x2298 (= ?x3757 0) (= ?x3776 0) (= ?x3517 0) $x3068 $x4350)))
 (let ((?x143 (* 9 s)))
 (let ((?x1004 (* (- 9) s00)))
 (let ((?x933 (* (- 15) ?x608)))
 (let ((?x907 (* (- 36) ?x894)))
 (let ((?x823 (* 6 ?x822)))
 (let ((?x562 (* s s)))
 (let ((?x586 (* 3 ?x562)))
 (let ((?x568 (* (- 54) ?x539)))
 (let ((?x4128 (+ (* (- 24) (* s r)) ?x568 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x586 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x823 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1702) ?x907 ?x933 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1004 (* 36 ?x1657) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x395 (* (- 3) s00)))
 (let ((?x621 (* (- 4) ?x608)))
 (let ((?x563 (* 2 ?x562)))
 (let ((?x553 (* (- 18) ?x539)))
 (let ((?x1713 (+ (* (- 9) (* s r)) ?x553 (* 9 (* r00 s00)) ?x563 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1702) ?x621 (* 18 (* r00 x)) ?x395 (* 6 ?x1657) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x3224 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x395 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x486))))
 (let (($x3168 (and $x2298 (= ?x3224 0) (= ?x1713 0) (= ?x4128 0) $x3068 $x4350)))
 (rewrite (= $x3168 $x3981)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x294 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x220 (- (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 2 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x222 (- (- ?x220 (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213))))
 (let ((?x226 (- (+ ?x222 (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 6 ?x216 ?x212 ?x212 ?x213 x00))))
 (let ((?x230 (- (+ ?x226 (* 6 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x234 (- (+ ?x230 (* 12 r00 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 6 ?x216 r00 ?x212 ?x212 s00 ?x213))))
 (let ((?x243 (+ ?x234 (* 12 ?x216 ?x216 ?x216 r00 r00 r00 ?x212 ?x212 ?x213) (* 2 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213) (* 12 ?x216 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 3 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213) (* 3 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213) (* 12 ?x216 r00 r00 r00 ?x212 ?x212 ?x213) (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x248 (- (- ?x243 (* 3 ?x216 ?x212 ?x212 ?x212 ?x213)) (* 3 ?x216 r00 ?x212 ?x212 ?x213))))
 (let ((?x251 (+ (- ?x248 (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 x00)) (* 6 ?x216 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x258 (- (- ?x251 (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x260 (- (- ?x258 (* 6 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 12 ?x216 ?x216 ?x216 r00 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x264 (+ (- ?x260 (* 3 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x270 (- (- ?x264 (* 3 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213)) (* 3 r00 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x272 (- (- ?x270 (* 12 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 ?x213))))
 (let ((?x276 (- (+ ?x272 (* 3 ?x216 ?x216 ?x212 ?x212 ?x213)) (* 12 ?x216 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x213))))
 (let ((?x281 (+ ?x276 (* 3 ?x216 ?x212 ?x212 s00 ?x213) (* 2 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213) (* 4 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 4 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213))))
 (let ((?x285 (- (- ?x281 (* 12 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x213)) (* 4 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x289 (+ ?x285 (* 3 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213) (* 4 ?x216 ?x216 ?x212 ?x212 s00 ?x213))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x289 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x507 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x4466 (+ 3 s ?x211)))
 (let ((?x297 (* (- 1) s)))
 (let ((?x2724 (+ x ?x297)))
 (let ((?x1413 (+ 1 r)))
 (let ((?x3502 (* (- 12) (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466))))
 (let ((?x2500 (* 12 (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466))))
 (let ((?x2999 (+ (* 3 (* s00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 2) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 6) (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* 6 (* x00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* x00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 6 (* ?x2724 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) ?x2500 (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 12 (* r00 r00 r00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* r00 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 6) (* x00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 6 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466)) (* (- 3) (* s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 3) (* ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* (- 6) (* x00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) ?x3502 (* (- 3) (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466 ?x4466)) (* 6 (* ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466)) (* (- 3) (* r00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 3) (* r00 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* (- 6) (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 3 (* s00 ?x1413 ?x2724 ?x4466 ?x4466)) (* 2 (* ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 12) (* r00 r00 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* (- 4) (* s00 ?x1413 ?x1413 ?x1413 ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* ?x1413 ?x2724 ?x2724 ?x4466 ?x4466 ?x4466)) (* 3 (* s00 ?x1413 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)) (* 4 (* s00 ?x1413 ?x1413 ?x2724 ?x4466 ?x4466)))))
 (let (($x4350 (not (= ?x2999 0))))
 (let ((?x1363 (* x00 x00)))
 (let ((?x1130 (* 108 ?x1363)))
 (let ((?x1270 (* (- 9) s)))
 (let ((?x1657 (* r00 r00 s00)))
 (let ((?x773 (* (- 36) ?x1657)))
 (let ((?x137 (* 9 s00)))
 (let ((?x608 (* s00 s00)))
 (let ((?x797 (* 51 ?x608)))
 (let ((?x1702 (* r00 r00 s)))
 (let ((?x4001 (* 36 ?x1702)))
 (let ((?x1201 (* s00 s00 s00)))
 (let ((?x1626 (* 16 ?x1201)))
 (let ((?x822 (* s00 x00)))
 (let ((?x1435 (* (- 108) ?x822)))
 (let ((?x899 (* r00 r00 r00 x00)))
 (let ((?x1315 (* (- 432) ?x899)))
 (let ((?x539 (* r00 x00)))
 (let ((?x2216 (* 108 ?x539)))
 (let ((?x4082 (+ (* 216 (* r00 s00 x00)) ?x2216 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1315 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1435 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1626 (* (- 108) (* x s)) ?x4001 ?x797 (* (- 108) (* r00 x)) ?x137 ?x773 ?x1270 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1130)))
 (let (($x3068 (= ?x4082 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1004 (* (- 9) s00)))
 (let ((?x933 (* (- 15) ?x608)))
 (let ((?x894 (* r00 r00 x00)))
 (let ((?x907 (* (- 36) ?x894)))
 (let ((?x823 (* 6 ?x822)))
 (let ((?x562 (* s s)))
 (let ((?x586 (* 3 ?x562)))
 (let ((?x568 (* (- 54) ?x539)))
 (let ((?x4128 (+ (* (- 24) (* s r)) ?x568 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x586 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x823 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1702) ?x907 ?x933 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1004 (* 36 ?x1657) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x395 (* (- 3) s00)))
 (let ((?x621 (* (- 4) ?x608)))
 (let ((?x563 (* 2 ?x562)))
 (let ((?x553 (* (- 18) ?x539)))
 (let ((?x1713 (+ (* (- 9) (* s r)) ?x553 (* 9 (* r00 s00)) ?x563 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1702) ?x621 (* 18 (* r00 x)) ?x395 (* 6 ?x1657) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x3224 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x395 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2298 (= (+ s00 ?x297 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3168 (and $x2298 (= ?x3224 0) (= ?x1713 0) (= ?x4128 0) $x3068 $x4350)))
 (let ((?x213 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x220 (- (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 2 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x222 (- (- ?x220 (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213))))
 (let ((?x226 (- (+ ?x222 (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 6 ?x216 ?x212 ?x212 ?x213 x00))))
 (let ((?x230 (- (+ ?x226 (* 6 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x234 (- (+ ?x230 (* 12 r00 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 6 ?x216 r00 ?x212 ?x212 s00 ?x213))))
 (let ((?x243 (+ ?x234 (* 12 ?x216 ?x216 ?x216 r00 r00 r00 ?x212 ?x212 ?x213) (* 2 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213) (* 12 ?x216 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 3 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213) (* 3 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213) (* 12 ?x216 r00 r00 r00 ?x212 ?x212 ?x213) (* 2 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x248 (- (- ?x243 (* 3 ?x216 ?x212 ?x212 ?x212 ?x213)) (* 3 ?x216 r00 ?x212 ?x212 ?x213))))
 (let ((?x251 (+ (- ?x248 (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 x00)) (* 6 ?x216 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x258 (- (- ?x251 (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x260 (- (- ?x258 (* 6 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 12 ?x216 ?x216 ?x216 r00 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x264 (+ (- ?x260 (* 3 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 6 ?x216 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x270 (- (- ?x264 (* 3 ?x216 ?x216 ?x216 r00 ?x212 ?x212 ?x213)) (* 3 r00 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x272 (- (- ?x270 (* 12 ?x216 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 6 ?x216 ?x216 ?x216 r00 ?x212 ?x212 s00 ?x213))))
 (let ((?x276 (- (+ ?x272 (* 3 ?x216 ?x216 ?x212 ?x212 ?x213)) (* 12 ?x216 ?x216 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x213))))
 (let ((?x281 (+ ?x276 (* 3 ?x216 ?x212 ?x212 s00 ?x213) (* 2 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 ?x213) (* 4 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 4 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213))))
 (let ((?x285 (- (- ?x281 (* 12 ?x216 ?x216 r00 r00 ?x212 ?x212 ?x213)) (* 4 ?x216 ?x216 ?x216 ?x216 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x289 (+ ?x285 (* 3 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213) (* 3 ?x216 ?x216 ?x216 ?x212 ?x212 s00 ?x213) (* 4 ?x216 ?x216 ?x212 ?x212 s00 ?x213))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x293 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x289 0))))))
 (rewrite (= $x293 $x3168)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x295 (asserted $x294)))
 (let ((@x3623 (mp (mp @x295 (quant-intro (proof-bind ?x507) (= $x294 $x2197)) $x2197) (rewrite (= $x2197 $x2197)) $x2197)))
 (let ((@x3506 (mp (mp @x3623 (quant-intro (proof-bind ?x3979) (= $x2197 $x3977)) $x3977) (quant-intro (proof-bind ?x3512) (= $x3977 $x3933)) $x3933)))
 (let ((@x4135 (mp (mp~ @x3506 (sk (~ $x3933 $x3864)) $x3864) (rewrite (= $x3864 $x3751)) $x3751)))
 (let ((@x3663 (and-elim @x4135 $x379)))
 (let ((@x589 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x379) $x3847)) @x3663 $x3847)))
 (let (($x2471 (>= ?x2733 0)))
 (let ((@x1562 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x379) $x2471)) @x3663 $x2471)))
 (let (($x2473 (<= ?x2490 0)))
 (let ((@x2359 (and-elim @x4135 $x2479)))
 (let ((@x3441 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2479) $x2473)) @x2359 $x2473)))
 (let (($x1711 (>= ?x2490 0)))
 (let ((@x3790 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2479) $x1711)) @x2359 $x1711)))
 (let (($x1720 (<= ?x2665 0)))
 (let ((@x4145 (and-elim @x4135 $x885)))
 (let ((@x3956 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x885) $x1720)) @x4145 $x1720)))
 (let (($x2611 (>= ?x2665 0)))
 (let ((@x4010 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x885) $x2611)) @x4145 $x2611)))
 (let (($x2475 (<= ?x3256 0)))
 (let ((@x4158 (and-elim @x4135 $x459)))
 (let ((@x728 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x459) $x2475)) @x4158 $x2475)))
 (let (($x3625 (>= ?x3256 0)))
 (let ((@x1637 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x459) $x3625)) @x4158 $x3625)))
 (let (($x3875 (not (<= ?x4121 0))))
 (let (($x3529 (>= ?x4121 0)))
 (let ((@x1665 ((_ th-lemma arith) (hypothesis (not $x3529)) @x1562 @x589 @x1637 @x728 @x4010 @x3956 @x1637 @x728 @x4010 @x3956 @x3790 @x3441 @x1562 @x589 false)))
 (let ((@x2612 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3963 $x3875 (not $x3529))) (and-elim @x4135 $x3962) (or $x3875 (not $x3529)))))
 ((_ th-lemma arith) (unit-resolution @x2612 (lemma @x1665 $x3529) $x3875) @x1562 @x589 @x1637 @x728 @x4010 @x3956 @x1637 @x728 @x4010 @x3956 @x3790 @x3441 @x1562 @x589 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        27
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1340
 :arith-nonlinear-bounds    20
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 223
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.71
 :memory                    3.64
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                4115843
 :num-checks                1
 :propagations              12
 :rlimit-count              53669
 :time                      0.06
 :total-time                0.09)
