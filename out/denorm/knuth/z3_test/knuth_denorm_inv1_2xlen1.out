unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun x!0 () Int)
(declare-fun q!3 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x340 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 1) (* q!3 d!1 d!1)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 2 (* q!3 d!1)) (* 4 (* r!2 d!1)) (* (- 4) (* x!0 d!1)) (* (- 8) r!2))))
 (let (($x444 (>= ?x340 0)))
 (let (($x978 (= ?x340 0)))
 (let ((?x141 (* 8 r!2)))
 (let ((?x589 (* x!0 d!1)))
 (let ((?x672 (* 4 ?x589)))
 (let ((?x488 (* r!2 d!1)))
 (let ((?x805 (* (- 4) ?x488)))
 (let ((?x292 (* q!3 d!1)))
 (let ((?x1082 (* (- 2) ?x292)))
 (let ((?x281 (* r00 d00)))
 (let ((?x282 (* 4 ?x281)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x219 (* q!3 d!1 d!1)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x1106 (+ ?x146 ?x194 ?x178 ?x219 ?x244 ?x282 ?x1082 ?x805 ?x672 ?x141)))
 (let ((?x547 (+ 2 d!1)))
 (let ((?x637 (+ (- 8) q!3)))
 (let ((?x776 (* ?x637 ?x547 ?x547 ?x547 ?x547 ?x547 ?x547 (+ (- 4) (* 2 r!2) (* (- 1) x!0) q!3 (* (- 2) d!1)) ?x1106 r!2)))
 (let (($x761 (= ?x776 0)))
 (let (($x602 (not $x761)))
 (let ((?x843 (+ 4 q!3)))
 (let ((?x366 (* ?x547 ?x547 ?x547 ?x547 ?x547 ?x547 ?x843 (+ 2 (* 2 r!2) (* (- 1) x!0) q!3 d!1) ?x1106 r!2)))
 (let (($x749 (= ?x366 0)))
 (let ((?x1021 (* ?x547 ?x547 ?x547 ?x547 ?x547 ?x547 (+ (* 2 r!2) (* (- 1) x!0) q!3) ?x1106 r!2 q!3)))
 (let (($x373 (= ?x1021 0)))
 (let ((?x597 (+ (- 4) q!3)))
 (let ((?x406 (* ?x597 ?x547 ?x547 ?x547 ?x547 ?x547 ?x547 (+ (- 2) (* 2 r!2) (* (- 1) x!0) q!3 (* (- 1) d!1)) ?x1106 r!2)))
 (let (($x664 (= ?x406 0)))
 (let (($x411 (not $x664)))
 (let (($x762 (or $x411 (not $x373) (not $x749) $x602)))
 (let (($x1001 (and $x978 $x762)))
 (let ((?x626 (+ ?x141 ?x146 ?x194 ?x178 ?x244 ?x282 ?x1082 ?x219 ?x805 (* 16 d!1) (* (- 8) (* d!1 2)) ?x672)))
 (let ((?x643 (* ?x637 ?x547 ?x547 ?x547 ?x547 ?x547 ?x547 (+ (- 4) q!3 (* 2 r!2) (* (- 1) x!0) (* (- 2) d!1)) ?x626 r!2)))
 (let ((?x855 (+ ?x141 ?x146 ?x194 ?x178 ?x244 ?x282 ?x1082 ?x219 (* 2 (* d!1 4)) ?x805 (* (- 8) d!1) ?x672)))
 (let ((?x723 (* ?x547 ?x547 ?x547 ?x547 ?x547 ?x547 ?x843 (+ 2 q!3 (* 2 r!2) (* (- 1) x!0) d!1) ?x855 r!2)))
 (let ((?x596 (+ ?x141 ?x146 ?x194 ?x178 ?x244 ?x282 ?x1082 ?x219 ?x805 ?x672)))
 (let ((?x852 (* ?x547 ?x547 ?x547 ?x547 ?x547 ?x547 (+ q!3 (* 2 r!2) (* (- 1) x!0)) ?x596 r!2 q!3)))
 (let ((?x1099 (+ ?x141 ?x146 ?x194 ?x178 ?x244 ?x282 ?x1082 ?x219 ?x805 (* 8 d!1) (* (- 4) (* d!1 2)) ?x672)))
 (let ((?x1060 (* ?x597 ?x547 ?x547 ?x547 ?x547 ?x547 ?x547 (+ (- 2) q!3 (* 2 r!2) (* (- 1) x!0) (* (- 1) d!1)) ?x1099 r!2)))
 (let (($x623 (or (not (= ?x1060 0)) (not (= ?x852 0)) (not (= ?x723 0)) (not (= ?x643 0)))))
 (let (($x622 (and (= ?x596 0) $x623)))
 (let (($x503 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x254 (* 4 (* x d))))
 (let ((?x906 (* 16 d)))
 (let ((?x798 (* r d)))
 (let ((?x797 (* (- 4) ?x798)))
 (let ((?x611 (* q d d)))
 (let ((?x799 (* (- 2) (* q d))))
 (let ((?x281 (* r00 d00)))
 (let ((?x282 (* 4 ?x281)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x175 (* 8 r)))
 (let ((?x221 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x797 ?x906 (* (- 8) (* d 2)) ?x254)))
 (let ((?x747 (+ 2 d)))
 (let ((?x914 (+ (- 8) q)))
 (let ((?x1049 (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 (+ (- 4) q (* 2 r) (* (- 1) x) (* (- 2) d)) ?x221 r)))
 (let ((?x778 (* (- 8) d)))
 (let ((?x768 (* 2 (* d 4))))
 (let ((?x746 (+ 4 q)))
 (let ((?x1010 (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 (+ 2 q (* 2 r) (* (- 1) x) d) (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x768 ?x797 ?x778 ?x254) r)))
 (let ((?x210 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x797 ?x254)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x828 (+ q ?x117 ?x143)))
 (let (($x238 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x828 ?x210 r q) 0))))
 (let ((?x833 (* 8 d)))
 (let ((?x350 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x797 ?x833 (* (- 4) (* d 2)) ?x254)))
 (let ((?x847 (+ (- 4) q)))
 (let ((?x382 (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 (+ (- 2) q ?x117 ?x143 (* (- 1) d)) ?x350 r)))
 (let (($x825 (or (not (= ?x382 0)) $x238 (not (= ?x1010 0)) (not (= ?x1049 0)))))
 (and (= ?x210 0) $x825))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x220 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x433 (* 4 (* d00 r00))))
 (let ((?x1050 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x730 (* 4 (* (+ 2 d) r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x988 (* (- 8) x)))
 (let ((?x391 (* 16 r)))
 (let ((?x1051 (+ ?x391 ?x988 ?x30 ?x146 ?x730 ?x178 ?x194 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x244 ?x1050 ?x433)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x439 (+ ?x117 ?x143 q)))
 (let ((?x747 (+ 2 d)))
 (let (($x1083 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x439 ?x1051 r q) 0))))
 (let ((?x972 (+ (- 32) ?x391 ?x988 ?x30 (* (- 16) d) ?x146 ?x730 ?x178 ?x194 (* (+ (- 8) q) ?x747 ?x747) (* (- 2) (* (+ (- 8) q) ?x747)) ?x244 (* (- 4) (* ?x747 (+ (- 4) ?x117 ?x143 q (* (- 2) d)))) ?x433)))
 (let ((?x915 (* (- 2) d)))
 (let ((?x273 (+ (- 4) ?x117 ?x143 q ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x943 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x273 ?x972 r) 0))))
 (let ((?x833 (* 8 d)))
 (let ((?x427 (+ 16 ?x391 ?x988 ?x30 ?x833 ?x146 ?x730 ?x178 ?x194 (* ?x747 ?x747 (+ 4 q)) (* (- 2) (* ?x747 (+ 4 q))) ?x244 (* (- 4) (* ?x747 (+ 2 ?x117 ?x143 q d))) ?x433)))
 (let ((?x1026 (+ 2 ?x117 ?x143 q d)))
 (let ((?x746 (+ 4 q)))
 (let (($x438 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x1026 ?x427 r) 0))))
 (let ((?x778 (* (- 8) d)))
 (let ((?x322 (+ (- 16) ?x391 ?x988 ?x30 ?x778 ?x146 ?x730 ?x178 ?x194 (* (+ (- 4) q) ?x747 ?x747) (* (- 2) (* (+ (- 4) q) ?x747)) ?x244 (* (- 4) (* ?x747 (+ (- 2) ?x117 ?x143 q (* (- 1) d)))) ?x433)))
 (let ((?x870 (* (- 1) d)))
 (let ((?x1084 (+ (- 2) ?x117 ?x143 q ?x870)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x326 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x1084 ?x322 r) 0))))
 (let ((?x254 (* 4 (* x d))))
 (let ((?x175 (* 8 r)))
 (let ((?x271 (+ ?x175 ?x146 ?x254 ?x178 ?x194 (* d d q) (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x433)))
 (let (($x272 (= ?x271 0)))
 (and $x272 (or $x326 $x438 $x943 $x1083))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x252 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x254 (* 4 (* x d))))
 (let ((?x906 (* 16 d)))
 (let ((?x798 (* r d)))
 (let ((?x797 (* (- 4) ?x798)))
 (let ((?x611 (* q d d)))
 (let ((?x799 (* (- 2) (* q d))))
 (let ((?x281 (* r00 d00)))
 (let ((?x282 (* 4 ?x281)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x175 (* 8 r)))
 (let ((?x221 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x797 ?x906 (* (- 8) (* d 2)) ?x254)))
 (let ((?x747 (+ 2 d)))
 (let ((?x914 (+ (- 8) q)))
 (let ((?x1049 (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 (+ (- 4) q (* 2 r) (* (- 1) x) (* (- 2) d)) ?x221 r)))
 (let ((?x778 (* (- 8) d)))
 (let ((?x768 (* 2 (* d 4))))
 (let ((?x746 (+ 4 q)))
 (let ((?x1010 (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 (+ 2 q (* 2 r) (* (- 1) x) d) (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x768 ?x797 ?x778 ?x254) r)))
 (let ((?x210 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x797 ?x254)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x828 (+ q ?x117 ?x143)))
 (let (($x238 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x828 ?x210 r q) 0))))
 (let ((?x833 (* 8 d)))
 (let ((?x350 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x797 ?x833 (* (- 4) (* d 2)) ?x254)))
 (let ((?x847 (+ (- 4) q)))
 (let ((?x382 (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 (+ (- 2) q ?x117 ?x143 (* (- 1) d)) ?x350 r)))
 (let (($x825 (or (not (= ?x382 0)) $x238 (not (= ?x1010 0)) (not (= ?x1049 0)))))
 (let (($x201 (and (= ?x210 0) $x825)))
 (let ((?x433 (* 4 (* d00 r00))))
 (let ((?x730 (* 4 (* ?x747 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x988 (* (- 8) x)))
 (let ((?x391 (* 16 r)))
 (let ((?x1051 (+ ?x391 ?x988 ?x30 ?x146 ?x730 ?x178 ?x194 (* ?x747 ?x747 q) (* (- 2) (* ?x747 q)) ?x244 (* (- 4) (* ?x747 (+ ?x117 ?x143 q))) ?x433)))
 (let ((?x439 (+ ?x117 ?x143 q)))
 (let (($x1083 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x439 ?x1051 r q) 0))))
 (let ((?x972 (+ (- 32) ?x391 ?x988 ?x30 (* (- 16) d) ?x146 ?x730 ?x178 ?x194 (* ?x914 ?x747 ?x747) (* (- 2) (* ?x914 ?x747)) ?x244 (* (- 4) (* ?x747 (+ (- 4) ?x117 ?x143 q (* (- 2) d)))) ?x433)))
 (let ((?x915 (* (- 2) d)))
 (let ((?x273 (+ (- 4) ?x117 ?x143 q ?x915)))
 (let (($x943 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x273 ?x972 r) 0))))
 (let ((?x427 (+ 16 ?x391 ?x988 ?x30 ?x833 ?x146 ?x730 ?x178 ?x194 (* ?x747 ?x747 ?x746) (* (- 2) (* ?x747 ?x746)) ?x244 (* (- 4) (* ?x747 (+ 2 ?x117 ?x143 q d))) ?x433)))
 (let ((?x1026 (+ 2 ?x117 ?x143 q d)))
 (let (($x438 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x1026 ?x427 r) 0))))
 (let ((?x322 (+ (- 16) ?x391 ?x988 ?x30 ?x778 ?x146 ?x730 ?x178 ?x194 (* ?x847 ?x747 ?x747) (* (- 2) (* ?x847 ?x747)) ?x244 (* (- 4) (* ?x747 (+ (- 2) ?x117 ?x143 q (* (- 1) d)))) ?x433)))
 (let ((?x870 (* (- 1) d)))
 (let ((?x1084 (+ (- 2) ?x117 ?x143 q ?x870)))
 (let (($x326 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x1084 ?x322 r) 0))))
 (let ((?x271 (+ ?x175 ?x146 ?x254 ?x178 ?x194 (* d d q) (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x433)))
 (let (($x272 (= ?x271 0)))
 (let (($x763 (and $x272 (or $x326 $x438 $x943 $x1083))))
 (rewrite (= $x763 $x201))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x142 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x433 (* 4 (* d00 r00))))
 (let ((?x870 (* (- 1) d)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x1084 (+ (- 2) ?x117 ?x143 q ?x870)))
 (let ((?x747 (+ 2 d)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x730 (* 4 (* ?x747 r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x778 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x988 (* (- 8) x)))
 (let ((?x391 (* 16 r)))
 (let ((?x322 (+ (- 16) ?x391 ?x988 ?x30 ?x778 ?x146 ?x730 ?x178 ?x194 (* (+ (- 4) q) ?x747 ?x747) (* (- 2) (* (+ (- 4) q) ?x747)) ?x244 (* (- 4) (* ?x747 ?x1084)) ?x433)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x326 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x1084 ?x322 r) 0))))
 (let ((?x1051 (+ ?x391 ?x988 ?x30 ?x146 ?x730 ?x178 ?x194 (* ?x747 ?x747 q) (* (- 2) (* ?x747 q)) ?x244 (* (- 4) (* ?x747 (+ ?x117 ?x143 q))) ?x433)))
 (let ((?x439 (+ ?x117 ?x143 q)))
 (let (($x1083 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x439 ?x1051 r q) 0))))
 (let ((?x833 (* 8 d)))
 (let ((?x427 (+ 16 ?x391 ?x988 ?x30 ?x833 ?x146 ?x730 ?x178 ?x194 (* ?x747 ?x747 (+ 4 q)) (* (- 2) (* ?x747 (+ 4 q))) ?x244 (* (- 4) (* ?x747 (+ 2 ?x117 ?x143 q d))) ?x433)))
 (let ((?x1026 (+ 2 ?x117 ?x143 q d)))
 (let ((?x746 (+ 4 q)))
 (let (($x438 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x1026 ?x427 r) 0))))
 (let ((?x972 (+ (- 32) ?x391 ?x988 ?x30 (* (- 16) d) ?x146 ?x730 ?x178 ?x194 (* (+ (- 8) q) ?x747 ?x747) (* (- 2) (* (+ (- 8) q) ?x747)) ?x244 (* (- 4) (* ?x747 (+ (- 4) ?x117 ?x143 q (* (- 2) d)))) ?x433)))
 (let ((?x915 (* (- 2) d)))
 (let ((?x273 (+ (- 4) ?x117 ?x143 q ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x943 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x273 ?x972 r) 0))))
 (let ((?x254 (* 4 (* x d))))
 (let ((?x175 (* 8 r)))
 (let ((?x271 (+ ?x175 ?x146 ?x254 ?x178 ?x194 (* d d q) (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x433)))
 (let (($x272 (= ?x271 0)))
 (and $x272 (or $x943 $x438 $x1083 $x326)))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x608 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x433 (* 4 (* d00 r00))))
 (let ((?x1050 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x730 (* 4 (* (+ 2 d) r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x988 (* (- 8) x)))
 (let ((?x391 (* 16 r)))
 (let ((?x1051 (+ ?x391 ?x988 ?x30 ?x146 ?x730 ?x178 ?x194 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x244 ?x1050 ?x433)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x439 (+ ?x117 ?x143 q)))
 (let ((?x747 (+ 2 d)))
 (let (($x1083 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x439 ?x1051 r q) 0))))
 (let ((?x972 (+ (- 32) ?x391 ?x988 ?x30 (* (- 16) d) ?x146 ?x730 ?x178 ?x194 (* (+ (- 8) q) ?x747 ?x747) (* (- 2) (* (+ (- 8) q) ?x747)) ?x244 (* (- 4) (* ?x747 (+ (- 4) ?x117 ?x143 q (* (- 2) d)))) ?x433)))
 (let ((?x915 (* (- 2) d)))
 (let ((?x273 (+ (- 4) ?x117 ?x143 q ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x943 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x273 ?x972 r) 0))))
 (let ((?x833 (* 8 d)))
 (let ((?x427 (+ 16 ?x391 ?x988 ?x30 ?x833 ?x146 ?x730 ?x178 ?x194 (* ?x747 ?x747 (+ 4 q)) (* (- 2) (* ?x747 (+ 4 q))) ?x244 (* (- 4) (* ?x747 (+ 2 ?x117 ?x143 q d))) ?x433)))
 (let ((?x1026 (+ 2 ?x117 ?x143 q d)))
 (let ((?x746 (+ 4 q)))
 (let (($x438 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x1026 ?x427 r) 0))))
 (let ((?x778 (* (- 8) d)))
 (let ((?x322 (+ (- 16) ?x391 ?x988 ?x30 ?x778 ?x146 ?x730 ?x178 ?x194 (* (+ (- 4) q) ?x747 ?x747) (* (- 2) (* (+ (- 4) q) ?x747)) ?x244 (* (- 4) (* ?x747 (+ (- 2) ?x117 ?x143 q (* (- 1) d)))) ?x433)))
 (let ((?x870 (* (- 1) d)))
 (let ((?x1084 (+ (- 2) ?x117 ?x143 q ?x870)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x326 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x1084 ?x322 r) 0))))
 (let ((?x254 (* 4 (* x d))))
 (let ((?x175 (* 8 r)))
 (let ((?x271 (+ ?x175 ?x146 ?x254 ?x178 ?x194 (* d d q) (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x433)))
 (let (($x272 (= ?x271 0)))
 (let (($x763 (and $x272 (or $x326 $x438 $x943 $x1083))))
 (let (($x302 (and $x272 (or $x943 $x438 $x1083 $x326))))
 (rewrite (= $x302 $x763))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x139 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x119 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x125 (- q 8)))
 (let ((?x77 (- 1)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x123 (- (+ (- (* 8 ?x119) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x130 (+ (- (+ (- ?x123 ?x41) (* ?x62 ?x62 ?x125)) (* 2 ?x62 ?x125)) ?x49)))
 (let ((?x134 (* (+ (- ?x130 (* 4 ?x62 ?x119)) ?x53) ?x77 ?x62 ?x62 ?x62 ?x125 ?x62 ?x62 ?x62 ?x119 r)))
 (let ((?x99 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x105 (- q 4)))
 (let ((?x103 (- (+ (- (* 8 ?x99) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x110 (+ (- (+ (- ?x103 ?x41) (* ?x62 ?x62 ?x105)) (* 2 ?x62 ?x105)) ?x49)))
 (let ((?x114 (* (+ (- ?x110 (* 4 ?x62 ?x99)) ?x53) ?x77 ?x62 ?x62 ?x62 ?x105 ?x62 ?x62 ?x62 ?x99 r)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x81 (+ ?x58 q)))
 (let ((?x85 (- (+ (- (* 8 ?x81) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x91 (+ (- (+ (- ?x85 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x95 (* (+ (- ?x91 (* 4 ?x62 ?x81)) ?x53) ?x77 ?x62 ?x62 ?x62 q ?x62 ?x62 ?x62 ?x81 r)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x78 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x77 ?x62 ?x62 ?x62 ?x67 ?x62 ?x62 ?x62 ?x59 r)))
 (let (($x137 (or (not (= ?x78 0)) (not (= ?x95 0)) (not (= ?x114 0)) (not (= ?x134 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x137)))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x627 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x433 (* 4 (* d00 r00))))
 (let ((?x212 (* (- 1) d)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1008 (+ (- 2) ?x57 ?x143 q ?x212)))
 (let ((?x249 (+ 2 d)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x564 (* 4 (* ?x249 r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x436 (* (- 8) d)))
 (let ((?x159 (* 8 q)))
 (let ((?x988 (* (- 8) x)))
 (let ((?x989 (* 16 r)))
 (let ((?x912 (+ (- 16) ?x989 ?x988 ?x159 ?x436 ?x146 ?x564 ?x178 ?x194 (* (+ (- 4) q) ?x249 ?x249) (* (- 2) (* (+ (- 4) q) ?x249)) ?x244 (* (- 4) (* ?x249 ?x1008)) ?x433)))
 (let ((?x820 (+ (- 4) q)))
 (let (($x1102 (not (= (* ?x820 ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x1008 ?x912 r) 0))))
 (let ((?x422 (+ ?x989 ?x988 ?x159 ?x146 ?x564 ?x178 ?x194 (* ?x249 ?x249 q) (* (- 2) (* ?x249 q)) ?x244 (* (- 4) (* ?x249 (+ ?x57 ?x143 q))) ?x433)))
 (let ((?x181 (+ ?x57 ?x143 q)))
 (let (($x666 (not (= (* ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x181 ?x422 r q) 0))))
 (let ((?x175 (* 8 d)))
 (let ((?x174 (+ 16 ?x989 ?x988 ?x159 ?x175 ?x146 ?x564 ?x178 ?x194 (* ?x249 ?x249 (+ 4 q)) (* (- 2) (* ?x249 (+ 4 q))) ?x244 (* (- 4) (* ?x249 (+ 2 ?x57 ?x143 q d))) ?x433)))
 (let ((?x349 (+ 2 ?x57 ?x143 q d)))
 (let ((?x333 (+ 4 q)))
 (let (($x636 (not (= (* ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x333 ?x349 ?x174 r) 0))))
 (let ((?x387 (+ (- 32) ?x989 ?x988 ?x159 (* (- 16) d) ?x146 ?x564 ?x178 ?x194 (* (+ (- 8) q) ?x249 ?x249) (* (- 2) (* (+ (- 8) q) ?x249)) ?x244 (* (- 4) (* ?x249 (+ (- 4) ?x57 ?x143 q (* (- 2) d)))) ?x433)))
 (let ((?x467 (* (- 2) d)))
 (let ((?x417 (+ (- 4) ?x57 ?x143 q ?x467)))
 (let ((?x1016 (+ (- 8) q)))
 (let (($x253 (not (= (* ?x1016 ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x417 ?x387 r) 0))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x742 (+ ?x30 ?x146 (* 4 (* x d)) ?x178 ?x194 ?x44 (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x433)))
 (and (= ?x742 0) (or $x253 $x636 $x666 $x1102))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x670 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x433 (* 4 (* d00 r00))))
 (let ((?x212 (* (- 1) d)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1008 (+ (- 2) ?x57 ?x143 q ?x212)))
 (let ((?x249 (+ 2 d)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x564 (* 4 (* ?x249 r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x436 (* (- 8) d)))
 (let ((?x159 (* 8 q)))
 (let ((?x988 (* (- 8) x)))
 (let ((?x989 (* 16 r)))
 (let ((?x912 (+ (- 16) ?x989 ?x988 ?x159 ?x436 ?x146 ?x564 ?x178 ?x194 (* (+ (- 4) q) ?x249 ?x249) (* (- 2) (* (+ (- 4) q) ?x249)) ?x244 (* (- 4) (* ?x249 ?x1008)) ?x433)))
 (let ((?x820 (+ (- 4) q)))
 (let (($x1102 (not (= (* ?x820 ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x1008 ?x912 r) 0))))
 (let ((?x422 (+ ?x989 ?x988 ?x159 ?x146 ?x564 ?x178 ?x194 (* ?x249 ?x249 q) (* (- 2) (* ?x249 q)) ?x244 (* (- 4) (* ?x249 (+ ?x57 ?x143 q))) ?x433)))
 (let ((?x181 (+ ?x57 ?x143 q)))
 (let (($x666 (not (= (* ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x181 ?x422 r q) 0))))
 (let ((?x175 (* 8 d)))
 (let ((?x174 (+ 16 ?x989 ?x988 ?x159 ?x175 ?x146 ?x564 ?x178 ?x194 (* ?x249 ?x249 (+ 4 q)) (* (- 2) (* ?x249 (+ 4 q))) ?x244 (* (- 4) (* ?x249 (+ 2 ?x57 ?x143 q d))) ?x433)))
 (let ((?x349 (+ 2 ?x57 ?x143 q d)))
 (let ((?x333 (+ 4 q)))
 (let (($x636 (not (= (* ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x333 ?x349 ?x174 r) 0))))
 (let ((?x387 (+ (- 32) ?x989 ?x988 ?x159 (* (- 16) d) ?x146 ?x564 ?x178 ?x194 (* (+ (- 8) q) ?x249 ?x249) (* (- 2) (* (+ (- 8) q) ?x249)) ?x244 (* (- 4) (* ?x249 (+ (- 4) ?x57 ?x143 q (* (- 2) d)))) ?x433)))
 (let ((?x467 (* (- 2) d)))
 (let ((?x417 (+ (- 4) ?x57 ?x143 q ?x467)))
 (let ((?x1016 (+ (- 8) q)))
 (let (($x253 (not (= (* ?x1016 ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x417 ?x387 r) 0))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x742 (+ ?x30 ?x146 (* 4 (* x d)) ?x178 ?x194 ?x44 (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x433)))
 (let (($x482 (and (= ?x742 0) (or $x253 $x636 $x666 $x1102))))
 (let ((?x119 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x125 (- q 8)))
 (let ((?x77 (- 1)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x123 (- (+ (- (* 8 ?x119) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x130 (+ (- (+ (- ?x123 ?x41) (* ?x62 ?x62 ?x125)) (* 2 ?x62 ?x125)) ?x49)))
 (let ((?x134 (* (+ (- ?x130 (* 4 ?x62 ?x119)) ?x53) ?x77 ?x62 ?x62 ?x62 ?x125 ?x62 ?x62 ?x62 ?x119 r)))
 (let ((?x99 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x105 (- q 4)))
 (let ((?x103 (- (+ (- (* 8 ?x99) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x110 (+ (- (+ (- ?x103 ?x41) (* ?x62 ?x62 ?x105)) (* 2 ?x62 ?x105)) ?x49)))
 (let ((?x114 (* (+ (- ?x110 (* 4 ?x62 ?x99)) ?x53) ?x77 ?x62 ?x62 ?x62 ?x105 ?x62 ?x62 ?x62 ?x99 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x81 (+ ?x58 q)))
 (let ((?x85 (- (+ (- (* 8 ?x81) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x91 (+ (- (+ (- ?x85 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x95 (* (+ (- ?x91 (* 4 ?x62 ?x81)) ?x53) ?x77 ?x62 ?x62 ?x62 q ?x62 ?x62 ?x62 ?x81 r)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x78 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x77 ?x62 ?x62 ?x62 ?x67 ?x62 ?x62 ?x62 ?x59 r)))
 (let (($x137 (or (not (= ?x78 0)) (not (= ?x95 0)) (not (= ?x114 0)) (not (= ?x134 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x138 (and (= ?x54 0) $x137)))
 (rewrite (= $x138 $x482))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1057 (trans (quant-intro (proof-bind ?x670) (= $x139 $x627)) (elim-unused (= $x627 $x142)) (= $x139 $x142))))
 (let ((@x27 (asserted $x139)))
 (let ((@x634 (mp (mp @x27 @x1057 $x142) (quant-intro (proof-bind ?x608) (= $x142 $x220)) $x220)))
 (let ((@x633 (mp (mp @x634 (rewrite (= $x220 $x220)) $x220) (quant-intro (proof-bind ?x252) (= $x220 $x503)) $x503)))
 (let ((@x368 (mp (mp~ @x633 (sk (~ $x503 $x622)) $x622) (rewrite (= $x622 $x1001)) $x1001)))
 (let ((@x478 (and-elim @x368 $x978)))
 (let ((@x227 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x978) $x444)) @x478 $x444)))
 (let (($x459 (<= ?x340 0)))
 (let ((@x628 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x978) $x459)) @x478 $x459)))
 (let (($x690 (not (<= ?x776 0))))
 (let (($x740 (<= ?x406 0)))
 (let (($x445 (>= ?x406 0)))
 (let ((@x546 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x664 (not $x740) (not $x445))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x445)) @x628 @x227 false) $x445) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x740)) @x628 @x227 false) $x740) $x664)))
 (let (($x635 (>= ?x366 0)))
 (let (($x188 (<= ?x366 0)))
 (let ((@x599 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x749 (not $x188) (not $x635))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x188)) @x628 @x227 false) $x188) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x635)) @x628 @x227 false) $x635) $x749)))
 (let (($x364 (>= ?x1021 0)))
 (let (($x290 (<= ?x1021 0)))
 (let ((@x397 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x373 (not $x290) (not $x364))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x290)) @x628 @x227 false) $x290) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x364)) @x628 @x227 false) $x364) $x373)))
 (let ((@x677 (unit-resolution (unit-resolution (and-elim @x368 $x762) @x397 @x599 (or $x411 $x602)) @x546 $x602)))
 (let (($x1098 (>= ?x776 0)))
 (let ((@x679 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x761 $x690 (not $x1098))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1098)) @x628 @x227 false) $x1098) @x677 $x690)))
 ((_ th-lemma arith farkas 1 1 1) @x679 @x628 @x227 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 12
 :arith-assert-diseq        7
 :arith-assert-lower        38
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          13
 :arith-fixed-eqs           12
 :arith-grobner             8
 :arith-max-min             432
 :arith-nonlinear-horner    56
 :arith-num-rows            10
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 37
 :arith-tableau-max-rows    10
 :conflicts                 8
 :decisions                 24
 :del-clause                39
 :final-checks              8
 :max-memory                19.64
 :memory                    19.15
 :mk-bool-var               39
 :mk-clause                 52
 :num-allocs                536595
 :num-checks                1
 :propagations              36
 :rlimit-count              6688
 :time                      0.01
 :total-time                0.02)
