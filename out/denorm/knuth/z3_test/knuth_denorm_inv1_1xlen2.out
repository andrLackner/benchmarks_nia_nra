unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun x!0 () Int)
(declare-fun q!3 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x821 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* 2 (* q!3 d!1)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 4 (* d!1 r!2)) (* (- 1) (* q!3 d!1 d!1)) (* (- 4) (* x!0 d!1)) (* (- 8) r!2))))
 (let (($x166 (>= ?x821 0)))
 (let (($x1715 (= ?x821 0)))
 (let ((?x1431 (* 8 r!2)))
 (let ((?x1427 (* x!0 d!1)))
 (let ((?x1428 (* 4 ?x1427)))
 (let ((?x948 (* q!3 d!1 d!1)))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x177 (* q!3 d!1)))
 (let ((?x761 (* (- 2) ?x177)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x285 (+ ?x158 ?x206 ?x190 ?x761 ?x256 ?x294 (* (- 4) (* d!1 r!2)) ?x948 ?x1428 ?x1431)))
 (let ((?x1390 (* 2 (* q!3 q!3 d!1 r!2 r!2))))
 (let ((?x211 (* (- 1) (* q!3 q!3 x!0 d!1 r!2))))
 (let ((?x1576 (* 2 (* q!3 q!3 q!3 r!2))))
 (let ((?x1922 (* (- 512) r!2)))
 (let ((?x1323 (* 4 (* q!3 q!3 r!2 r!2))))
 (let ((?x973 (* q!3 q!3 q!3 d!1 r!2)))
 (let ((?x1916 (* (- 2) (* q!3 q!3 x!0 r!2))))
 (let ((?x364 (* r!2 r!2)))
 (let ((?x218 (* 256 ?x364)))
 (let ((?x1789 (+ 2 d!1)))
 (let ((?x1359 (+ (- 8) q!3)))
 (let ((?x358 (* ?x1359 ?x1359 ?x1359 ?x1789 (+ (- 4) q!3 (* (- 1) x!0) (* (- 2) d!1) (* 2 r!2)) r!2)))
 (let ((?x1182 (+ (* (- 1) ?x358) ?x218 (* (- 32) (* q!3 d!1 r!2 r!2)) (* (- 40) (* q!3 q!3 r!2)) (* (- 512) (* d!1 r!2)) (* (- 2) (* q!3 q!3 d!1 d!1 r!2)) (* 192 (* q!3 d!1 r!2)) (* 128 (* d!1 r!2 r!2)) ?x1916 ?x973 (* (- 128) (* d!1 d!1 r!2)) (* 16 (* q!3 x!0 d!1 r!2)) (* 32 (* q!3 d!1 d!1 r!2)) (* (- 128) (* x!0 r!2)) (* (- 64) (* q!3 r!2 r!2)) ?x1323 (* 256 (* q!3 r!2)) (* 32 (* q!3 x!0 r!2)) (* (- 24) (* q!3 q!3 d!1 r!2)) ?x1922 ?x1576 ?x211 ?x1390 (* (- 64) (* x!0 d!1 r!2)))))
 (let ((?x1342 (* ?x1182 ?x285)))
 (let (($x1223 (= ?x1342 0)))
 (let (($x1714 (not $x1223)))
 (let ((?x1872 (* (- 4) (* q!3 q!3 q!3 r!2 r!2))))
 (let ((?x1930 (* (- 2) (* q!3 q!3 q!3 q!3 r!2))))
 (let ((?x977 (+ ?x1916 (* q!3 q!3 q!3 x!0 d!1 r!2) ?x973 ?x1930 (* (- 2) (* q!3 q!3 q!3 d!1 r!2 r!2)) ?x1323 (* (- 1) (* q!3 q!3 q!3 q!3 d!1 r!2)) ?x1576 ?x211 ?x1872 ?x1390 (* 2 (* q!3 q!3 q!3 x!0 r!2)))))
 (let ((?x494 (* ?x977 ?x285)))
 (let (($x1299 (= ?x494 0)))
 (let ((?x1288 (+ (- 4) q!3)))
 (let ((?x1921 (* ?x1288 ?x1288 ?x1288 ?x1789 (+ (- 2) q!3 (* (- 1) x!0) (* (- 1) d!1) (* 2 r!2)) r!2)))
 (let ((?x1913 (* x!0 d!1 r!2)))
 (let ((?x212 (* (- 16) ?x1913)))
 (let ((?x1232 (* (- 64) r!2)))
 (let ((?x1325 (* q!3 r!2)))
 (let ((?x589 (* 64 ?x1325)))
 (let ((?x1314 (* q!3 r!2 r!2)))
 (let ((?x1422 (* (- 32) ?x1314)))
 (let ((?x1082 (* x!0 r!2)))
 (let ((?x536 (* (- 32) ?x1082)))
 (let ((?x1065 (* q!3 d!1 d!1 r!2)))
 (let ((?x1749 (* 8 ?x1065)))
 (let ((?x847 (* d!1 r!2 r!2)))
 (let ((?x1102 (* 32 ?x847)))
 (let ((?x653 (* q!3 d!1 r!2)))
 (let ((?x505 (* 48 ?x653)))
 (let ((?x1140 (* 64 ?x364)))
 (let ((?x1307 (+ ?x1140 (* (- 16) (* q!3 d!1 r!2 r!2)) (* (- 20) (* q!3 q!3 r!2)) (* (- 64) (* d!1 r!2)) (* (- 1) (* q!3 q!3 d!1 d!1 r!2)) ?x505 ?x1102 ?x1916 ?x973 (* (- 16) (* d!1 d!1 r!2)) (* 8 (* q!3 x!0 d!1 r!2)) ?x1749 ?x536 ?x1422 ?x1323 ?x589 (* 16 (* q!3 x!0 r!2)) (* (- 12) (* q!3 q!3 d!1 r!2)) ?x1232 ?x1576 ?x211 ?x1390 ?x212 (* (- 1) ?x1921))))
 (let ((?x1477 (* ?x1307 ?x285)))
 (let (($x421 (= ?x1477 0)))
 (let ((?x387 (* 64 r!2)))
 (let ((?x1869 (+ 4 q!3)))
 (let ((?x1183 (* ?x1789 ?x1869 ?x1869 ?x1869 (+ 2 q!3 (* (- 1) x!0) d!1 (* 2 r!2)) r!2)))
 (let ((?x580 (* q!3 q!3 d!1 d!1 r!2)))
 (let ((?x896 (+ ?x1140 (* 16 (* q!3 d!1 r!2 r!2)) (* 20 (* q!3 q!3 r!2)) (* 64 (* d!1 r!2)) ?x580 ?x505 ?x1102 ?x1916 ?x973 (* 16 (* d!1 d!1 r!2)) (* (- 8) (* q!3 x!0 d!1 r!2)) ?x1749 ?x536 (* (- 1) ?x1183) (* 32 ?x1314) ?x1323 ?x589 (* (- 16) (* q!3 x!0 r!2)) (* 12 (* q!3 q!3 d!1 r!2)) ?x387 ?x1576 ?x211 ?x1390 ?x212)))
 (let ((?x252 (* ?x896 ?x285)))
 (let (($x759 (= ?x252 0)))
 (let (($x341 (not $x759)))
 (let (($x1478 (or $x341 (not $x421) (not $x1299) $x1714)))
 (let (($x1419 (and $x1715 $x1478)))
 (let ((?x1905 (* r!2 d!1)))
 (let ((?x1835 (* (- 4) ?x1905)))
 (let ((?x1906 (+ ?x1431 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1428 ?x761 ?x1835 ?x948)))
 (let ((?x778 (* (- 1) (* q!3 q!3 r!2 x!0 d!1))))
 (let ((?x960 (* q!3 q!3 q!3 r!2 d!1)))
 (let ((?x184 (* 2 (* q!3 q!3 r!2 r!2 d!1))))
 (let ((?x1425 (+ (* 2 (* (* 2 r!2) r!2 q!3 q!3)) (* q!3 q!3 q!3 r!2 x!0 d!1) ?x184 ?x960 (* 2 (* (* (- 1) x!0) r!2 q!3 q!3)) (* 2 (* q!3 r!2 q!3 q!3)) (* (- 1) (* q!3 q!3 q!3 q!3 r!2 d!1)) (* (- 2) (* q!3 q!3 q!3 r!2 r!2 d!1)) ?x1930 ?x1872 (* 2 (* q!3 q!3 q!3 r!2 x!0)) ?x778)))
 (let ((?x1283 (+ ?x1431 ?x158 ?x206 ?x190 ?x256 ?x294 (* (- 4) (* d!1 2)) ?x1428 (* 8 d!1) ?x761 ?x1835 ?x948)))
 (let ((?x1418 (* ?x1288 ?x1288 ?x1288 ?x1789 (+ (- 2) q!3 (* 2 r!2) (* (- 1) x!0) (* (- 1) d!1)) r!2)))
 (let ((?x1233 (* r!2 x!0 d!1)))
 (let ((?x732 (* (- 16) ?x1233)))
 (let ((?x535 (* (- 2) (* q!3 q!3 r!2 x!0))))
 (let ((?x1786 (* r!2 r!2 d!1)))
 (let ((?x392 (* 32 ?x1786)))
 (let ((?x374 (* 48 ?x1325)))
 (let ((?x183 (* r!2 x!0)))
 (let ((?x373 (* (- 32) ?x183)))
 (let ((?x1286 (+ ?x1232 ?x373 ?x374 ?x1140 (* (- 4) (* q!3 d!1 (* (- 1) d!1) r!2)) (* (- 4) (* q!3 d!1 (- 2) r!2)) (* (- 4) (* q!3 d!1 (* 2 r!2) r!2)) (* 4 (* q!3 r!2 x!0 d!1)) ?x1323 (* (- 16) (* r!2 d!1 d!1)) (* (- 16) ?x1314) (* (- 12) (* q!3 q!3 r!2)) (* (- 4) (* q!3 2 (- 2) r!2)) (* 8 (* q!3 r!2 x!0)) (* (- 8) (* q!3 r!2 r!2 d!1)) ?x184 ?x392 ?x960 (* (- 4) (* q!3 2 q!3 r!2)) (* (- 12) (* q!3 q!3 r!2 d!1)) (* 32 (* q!3 r!2 d!1)) ?x1576 (* 4 (* q!3 r!2 d!1 d!1)) (* (- 1) (* q!3 q!3 r!2 d!1 d!1)) (* (- 4) (* q!3 2 (* (- 1) d!1) r!2)) (* (- 4) (* q!3 2 (* 2 r!2) r!2)) ?x778 (* (- 4) (* q!3 2 (* (- 1) x!0) r!2)) (* (- 4) (* q!3 d!1 (* (- 1) x!0) r!2)) (* (- 64) ?x1905) ?x535 ?x732 (* (- 1) ?x1418))))
 (let ((?x1293 (+ ?x1431 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1428 (* (- 8) d!1) ?x761 ?x1835 ?x948 (* 2 (* d!1 4)))))
 (let ((?x1534 (* ?x1789 ?x1869 ?x1869 ?x1869 (+ 2 q!3 (* 2 r!2) (* (- 1) x!0) d!1) r!2)))
 (let ((?x1180 (* q!3 q!3 r!2 d!1 d!1)))
 (let ((?x1295 (+ ?x387 ?x373 ?x374 ?x1140 (* (- 8) (* q!3 r!2 x!0 d!1)) (* 16 (* r!2 d!1 d!1)) (* 16 ?x1314) (* 8 (* q!3 q!3 r!2)) (* (- 8) (* q!3 r!2 x!0)) (* 16 (* q!3 r!2 r!2 d!1)) ?x184 ?x392 ?x960 (* 10 (* q!3 q!3 r!2 d!1)) (* 40 (* q!3 r!2 d!1)) (* 2 (* q!3 q!3 (* (- 1) x!0) r!2)) (* 2 (* q!3 4 (* (- 1) x!0) r!2)) (* 2 (* q!3 q!3 d!1 r!2)) (* 2 (* q!3 4 d!1 r!2)) (* 2 (* q!3 q!3 (* 2 r!2) r!2)) (* 2 (* q!3 4 (* 2 r!2) r!2)) ?x1576 (* 2 (* q!3 4 q!3 r!2)) (* 2 (* q!3 q!3 2 r!2)) (* 2 (* q!3 4 2 r!2)) (* 8 (* q!3 r!2 d!1 d!1)) ?x1180 (* (- 1) ?x1534) ?x778 (* 64 ?x1905) ?x732)))
 (let ((?x369 (+ ?x1431 ?x158 ?x206 ?x190 ?x256 ?x294 (* (- 8) (* d!1 2)) ?x1428 (* 16 d!1) ?x761 ?x1835 ?x948)))
 (let ((?x1354 (* ?x1359 ?x1359 ?x1359 ?x1789 (+ (- 4) q!3 (* 2 r!2) (* (- 1) x!0) (* (- 2) d!1)) r!2)))
 (let ((?x686 (+ ?x1922 (* (- 128) ?x183) (* 192 ?x1325) ?x218 (* (- 8) (* q!3 d!1 (* (- 2) d!1) r!2)) (* (- 8) (* q!3 d!1 (* 2 r!2) r!2)) (* 8 (* q!3 r!2 x!0 d!1)) ?x1323 (* (- 128) (* r!2 d!1 d!1)) ?x1422 (* (- 24) (* q!3 q!3 r!2)) (* 16 (* q!3 r!2 x!0)) (* (- 16) (* q!3 r!2 r!2 d!1)) ?x184 (* 128 ?x1786) (* (- 1) ?x1354) ?x960 (* (- 8) (* q!3 2 q!3 r!2)) (* (- 24) (* q!3 q!3 r!2 d!1)) (* 128 (* q!3 r!2 d!1)) (* (- 8) (* q!3 2 (* (- 2) d!1) r!2)) ?x1576 (* 16 (* q!3 r!2 d!1 d!1)) (* (- 8) (* q!3 d!1 (- 4) r!2)) (* (- 8) (* q!3 2 (- 4) r!2)) (* (- 2) ?x1180) (* (- 8) (* q!3 2 (* 2 r!2) r!2)) ?x778 (* (- 8) (* q!3 2 (* (- 1) x!0) r!2)) (* (- 8) (* q!3 d!1 (* (- 1) x!0) r!2)) (* (- 512) ?x1905) ?x535 (* (- 64) ?x1233))))
 (let (($x1421 (or (not (= (* ?x686 ?x369) 0)) (not (= (* ?x1295 ?x1293) 0)) (not (= (* ?x1286 ?x1283) 0)) (not (= (* ?x1425 ?x1906) 0)))))
 (let (($x1423 (and (= ?x1906 0) $x1421)))
 (let (($x1203 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1890 (* q d d)))
 (let ((?x1826 (* r d)))
 (let ((?x1827 (* (- 4) ?x1826)))
 (let ((?x1825 (* (- 2) (* q d))))
 (let ((?x1861 (* 4 (* x d))))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x187 (* 8 r)))
 (let ((?x361 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1861 ?x1825 ?x1827 ?x1890)))
 (let ((?x1179 (* (- 1) (* q q r x d))))
 (let ((?x1573 (* 2 (* q q q r x))))
 (let ((?x1571 (* (- 4) (* q q q r r))))
 (let ((?x1554 (* (- 2) (* q q q q r))))
 (let ((?x1121 (* q q q r d)))
 (let ((?x953 (* 2 (* q q r r d))))
 (let ((?x338 (+ (* 2 (* (* 2 r) r q q)) (* q q q r x d) ?x953 ?x1121 (* 2 (* (* (- 1) x) r q q)) (* 2 (* q r q q)) (* (- 1) (* q q q q r d)) (* (- 2) (* q q q r r d)) ?x1554 ?x1571 ?x1573 ?x1179)))
 (let ((?x1580 (* 8 d)))
 (let ((?x1586 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 (* (- 4) (* d 2)) ?x1861 ?x1580 ?x1825 ?x1827 ?x1890)))
 (let ((?x480 (+ 2 d)))
 (let ((?x1612 (+ (- 4) q)))
 (let ((?x1934 (* ?x1612 ?x1612 ?x1612 ?x480 (+ (- 2) q (* 2 r) (* (- 1) x) (* (- 1) d)) r)))
 (let ((?x1918 (* r x d)))
 (let ((?x1853 (* (- 16) ?x1918)))
 (let ((?x1706 (* (- 2) (* q q r x))))
 (let ((?x1617 (* (- 64) ?x1826)))
 (let ((?x1527 (* q q r d d)))
 (let ((?x1629 (* (- 1) ?x1527)))
 (let ((?x1193 (* 2 (* q q q r))))
 (let ((?x1013 (* r r d)))
 (let ((?x1014 (* 32 ?x1013)))
 (let ((?x863 (* q r x)))
 (let ((?x1631 (* 8 ?x863)))
 (let ((?x620 (* q r r)))
 (let ((?x1317 (* (- 16) ?x620)))
 (let ((?x608 (* r d d)))
 (let ((?x1618 (* (- 16) ?x608)))
 (let ((?x307 (* 4 (* q q r r))))
 (let ((?x371 (* r r)))
 (let ((?x1015 (* 64 ?x371)))
 (let ((?x267 (* q r)))
 (let ((?x1195 (* 48 ?x267)))
 (let ((?x163 (* r x)))
 (let ((?x1526 (* (- 32) ?x163)))
 (let ((?x1611 (* (- 64) r)))
 (let ((?x1166 (+ ?x1611 ?x1526 ?x1195 ?x1015 (* (- 4) (* q d (* (- 1) d) r)) (* (- 4) (* q d (- 2) r)) (* (- 4) (* q d (* 2 r) r)) (* 4 (* q r x d)) ?x307 ?x1618 ?x1317 (* (- 12) (* q q r)) (* (- 4) (* q 2 (- 2) r)) ?x1631 (* (- 8) (* q r r d)) ?x953 ?x1014 ?x1121 (* (- 4) (* q 2 q r)) (* (- 12) (* q q r d)) (* 32 (* q r d)) ?x1193 (* 4 (* q r d d)) ?x1629 (* (- 4) (* q 2 (* (- 1) d) r)) (* (- 4) (* q 2 (* 2 r) r)) ?x1179 (* (- 4) (* q 2 (* (- 1) x) r)) (* (- 4) (* q d (* (- 1) x) r)) ?x1617 ?x1706 ?x1853 (* (- 1) ?x1934))))
 (let ((?x1961 (* 2 (* d 4))))
 (let ((?x1954 (* (- 8) d)))
 (let ((?x607 (* 64 ?x1826)))
 (let ((?x481 (+ 4 q)))
 (let ((?x1590 (* ?x480 ?x481 ?x481 ?x481 (+ 2 q (* 2 r) (* (- 1) x) d) r)))
 (let ((?x1227 (* q r d d)))
 (let ((?x1528 (* 8 ?x1227)))
 (let ((?x1226 (* 2 (* q 4 2 r))))
 (let ((?x1209 (* 2 (* q q 2 r))))
 (let ((?x1207 (* 2 (* q 4 q r))))
 (let ((?x1155 (* 2 (* q 4 (* 2 r) r))))
 (let ((?x1151 (* 2 (* q q (* 2 r) r))))
 (let ((?x1148 (* 2 (* q 4 d r))))
 (let ((?x1138 (* 2 (* q q d r))))
 (let ((?x1136 (* 2 (* q 4 (* (- 1) x) r))))
 (let ((?x1133 (* 2 (* q q (* (- 1) x) r))))
 (let ((?x1129 (* q r d)))
 (let ((?x1130 (* 40 ?x1129)))
 (let ((?x1127 (* q q r d)))
 (let ((?x1128 (* 10 ?x1127)))
 (let ((?x952 (* q r r d)))
 (let ((?x958 (* 16 ?x952)))
 (let ((?x1543 (* (- 8) ?x863)))
 (let ((?x664 (* q q r)))
 (let ((?x1194 (* 8 ?x664)))
 (let ((?x617 (* 16 ?x620)))
 (let ((?x951 (* 16 ?x608)))
 (let ((?x479 (* 64 r)))
 (let ((?x905 (+ ?x479 ?x1526 ?x1195 ?x1015 (* (- 8) (* q r x d)) ?x951 ?x617 ?x1194 ?x1543 ?x958 ?x953 ?x1014 ?x1121 ?x1128 ?x1130 ?x1133 ?x1136 ?x1138 ?x1148 ?x1151 ?x1155 ?x1193 ?x1207 ?x1209 ?x1226 ?x1528 ?x1527 (* (- 1) ?x1590) ?x1179 ?x607 ?x1853)))
 (let ((?x517 (* ?x905 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1861 ?x1954 ?x1825 ?x1827 ?x1890 ?x1961))))
 (let ((?x1965 (* 16 d)))
 (let ((?x1493 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 (* (- 8) (* d 2)) ?x1861 ?x1965 ?x1825 ?x1827 ?x1890)))
 (let ((?x1977 (* (- 512) ?x1826)))
 (let ((?x1966 (* (- 2) ?x1527)))
 (let ((?x1981 (+ (- 8) q)))
 (let ((?x1116 (* ?x1981 ?x1981 ?x1981 ?x480 (+ (- 4) q (* 2 r) (* (- 1) x) (* (- 2) d)) r)))
 (let ((?x1973 (* 128 ?x1013)))
 (let ((?x1619 (* (- 16) ?x952)))
 (let ((?x1990 (* 16 ?x863)))
 (let ((?x1975 (* (- 32) ?x620)))
 (let ((?x1976 (* (- 128) ?x608)))
 (let ((?x1972 (* 256 ?x371)))
 (let ((?x1968 (* 192 ?x267)))
 (let ((?x1987 (* (- 128) ?x163)))
 (let ((?x1982 (* (- 512) r)))
 (let ((?x1334 (+ ?x1982 ?x1987 ?x1968 ?x1972 (* (- 8) (* q d (* (- 2) d) r)) (* (- 8) (* q d (* 2 r) r)) (* 8 (* q r x d)) ?x307 ?x1976 ?x1975 (* (- 24) ?x664) ?x1990 ?x1619 ?x953 ?x1973 (* (- 1) ?x1116) ?x1121 (* (- 8) (* q 2 q r)) (* (- 24) ?x1127) (* 128 ?x1129) (* (- 8) (* q 2 (* (- 2) d) r)) ?x1193 (* 16 ?x1227) (* (- 8) (* q d (- 4) r)) (* (- 8) (* q 2 (- 4) r)) ?x1966 (* (- 8) (* q 2 (* 2 r) r)) ?x1179 (* (- 8) (* q 2 (* (- 1) x) r)) (* (- 8) (* q d (* (- 1) x) r)) ?x1977 ?x1706 (* (- 64) ?x1918))))
 (let (($x253 (or (not (= (* ?x1334 ?x1493) 0)) (not (= ?x517 0)) (not (= (* ?x1166 ?x1586) 0)) (not (= (* ?x338 ?x361) 0)))))
 (and (= ?x361 0) $x253)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x304 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x568 (* 4 (* d00 r00))))
 (let ((?x155 (* (- 1) x)))
 (let ((?x126 (* 2 r)))
 (let ((?x1854 (+ 2 ?x126 ?x155 q d)))
 (let ((?x480 (+ 2 d)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x1729 (* 4 (* ?x480 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x1580 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1118 (* (- 8) x)))
 (let ((?x403 (* 16 r)))
 (let ((?x1707 (+ 16 ?x403 ?x1118 ?x30 ?x1580 ?x158 ?x1729 ?x190 ?x206 (* ?x480 ?x480 (+ 4 q)) (* (- 2) (* ?x480 (+ 4 q))) ?x256 (* (- 4) (* ?x480 ?x1854)) ?x568)))
 (let ((?x583 (* (- 1) (* ?x480 (+ 4 q) (+ 4 q) (+ 4 q) ?x1854 r))))
 (let (($x1837 (= (* (+ ?x583 (* ?x480 (+ 4 q) (+ 4 q) ?x1854 r)) ?x1707) 0)))
 (let (($x1702 (not $x1837)))
 (let ((?x1634 (+ ?x403 ?x1118 ?x30 ?x158 ?x1729 ?x190 ?x206 (* ?x480 ?x480 q) (* (- 2) (* ?x480 q)) ?x256 (* (- 4) (* ?x480 (+ ?x126 ?x155 q))) ?x568)))
 (let ((?x1932 (+ (* (- 1) (* ?x480 (+ ?x126 ?x155 q) r q q q)) (* ?x480 (+ ?x126 ?x155 q) r q q))))
 (let (($x1625 (not (= (* ?x1932 ?x1634) 0))))
 (let ((?x972 (+ (- 32) ?x403 ?x1118 ?x30 (* (- 16) d) ?x158 ?x1729 ?x190 ?x206 (* (+ (- 8) q) ?x480 ?x480) (* (- 2) (* (+ (- 8) q) ?x480)) ?x256 (* (- 4) (* ?x480 (+ (- 4) ?x126 ?x155 q (* (- 2) d)))) ?x568)))
 (let ((?x1980 (* (- 2) d)))
 (let ((?x1626 (+ (- 4) ?x126 ?x155 q ?x1980)))
 (let ((?x1981 (+ (- 8) q)))
 (let ((?x1639 (+ (* (- 1) (* ?x1981 ?x1981 ?x1981 ?x480 ?x1626 r)) (* ?x1981 ?x1981 ?x480 ?x1626 r))))
 (let (($x984 (not (= (* ?x1639 ?x972) 0))))
 (let ((?x1954 (* (- 8) d)))
 (let ((?x1924 (+ (- 16) ?x403 ?x1118 ?x30 ?x1954 ?x158 ?x1729 ?x190 ?x206 (* (+ (- 4) q) ?x480 ?x480) (* (- 2) (* (+ (- 4) q) ?x480)) ?x256 (* (- 4) (* ?x480 (+ (- 2) ?x126 ?x155 q (* (- 1) d)))) ?x568)))
 (let ((?x1614 (* (- 1) d)))
 (let ((?x1703 (+ (- 2) ?x126 ?x155 q ?x1614)))
 (let ((?x1612 (+ (- 4) q)))
 (let ((?x1838 (+ (* (- 1) (* ?x1612 ?x1612 ?x1612 ?x480 ?x1703 r)) (* ?x1612 ?x1612 ?x480 ?x1703 r))))
 (let (($x299 (not (= (* ?x1838 ?x1924) 0))))
 (let ((?x1861 (* 4 (* x d))))
 (let ((?x187 (* 8 r)))
 (let ((?x1857 (+ ?x187 ?x158 ?x1861 ?x190 ?x206 (* d d q) (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x568)))
 (let (($x1740 (= ?x1857 0)))
 (and $x1740 (or $x299 $x984 $x1625 $x1702))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x238 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1890 (* q d d)))
 (let ((?x1826 (* r d)))
 (let ((?x1827 (* (- 4) ?x1826)))
 (let ((?x1825 (* (- 2) (* q d))))
 (let ((?x1861 (* 4 (* x d))))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x187 (* 8 r)))
 (let ((?x361 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1861 ?x1825 ?x1827 ?x1890)))
 (let ((?x1179 (* (- 1) (* q q r x d))))
 (let ((?x1573 (* 2 (* q q q r x))))
 (let ((?x1571 (* (- 4) (* q q q r r))))
 (let ((?x1554 (* (- 2) (* q q q q r))))
 (let ((?x1121 (* q q q r d)))
 (let ((?x953 (* 2 (* q q r r d))))
 (let ((?x338 (+ (* 2 (* (* 2 r) r q q)) (* q q q r x d) ?x953 ?x1121 (* 2 (* (* (- 1) x) r q q)) (* 2 (* q r q q)) (* (- 1) (* q q q q r d)) (* (- 2) (* q q q r r d)) ?x1554 ?x1571 ?x1573 ?x1179)))
 (let ((?x1580 (* 8 d)))
 (let ((?x1586 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 (* (- 4) (* d 2)) ?x1861 ?x1580 ?x1825 ?x1827 ?x1890)))
 (let ((?x480 (+ 2 d)))
 (let ((?x1612 (+ (- 4) q)))
 (let ((?x1934 (* ?x1612 ?x1612 ?x1612 ?x480 (+ (- 2) q (* 2 r) (* (- 1) x) (* (- 1) d)) r)))
 (let ((?x1918 (* r x d)))
 (let ((?x1853 (* (- 16) ?x1918)))
 (let ((?x1706 (* (- 2) (* q q r x))))
 (let ((?x1617 (* (- 64) ?x1826)))
 (let ((?x1527 (* q q r d d)))
 (let ((?x1629 (* (- 1) ?x1527)))
 (let ((?x1193 (* 2 (* q q q r))))
 (let ((?x1013 (* r r d)))
 (let ((?x1014 (* 32 ?x1013)))
 (let ((?x863 (* q r x)))
 (let ((?x1631 (* 8 ?x863)))
 (let ((?x620 (* q r r)))
 (let ((?x1317 (* (- 16) ?x620)))
 (let ((?x608 (* r d d)))
 (let ((?x1618 (* (- 16) ?x608)))
 (let ((?x307 (* 4 (* q q r r))))
 (let ((?x371 (* r r)))
 (let ((?x1015 (* 64 ?x371)))
 (let ((?x267 (* q r)))
 (let ((?x1195 (* 48 ?x267)))
 (let ((?x163 (* r x)))
 (let ((?x1526 (* (- 32) ?x163)))
 (let ((?x1611 (* (- 64) r)))
 (let ((?x1166 (+ ?x1611 ?x1526 ?x1195 ?x1015 (* (- 4) (* q d (* (- 1) d) r)) (* (- 4) (* q d (- 2) r)) (* (- 4) (* q d (* 2 r) r)) (* 4 (* q r x d)) ?x307 ?x1618 ?x1317 (* (- 12) (* q q r)) (* (- 4) (* q 2 (- 2) r)) ?x1631 (* (- 8) (* q r r d)) ?x953 ?x1014 ?x1121 (* (- 4) (* q 2 q r)) (* (- 12) (* q q r d)) (* 32 (* q r d)) ?x1193 (* 4 (* q r d d)) ?x1629 (* (- 4) (* q 2 (* (- 1) d) r)) (* (- 4) (* q 2 (* 2 r) r)) ?x1179 (* (- 4) (* q 2 (* (- 1) x) r)) (* (- 4) (* q d (* (- 1) x) r)) ?x1617 ?x1706 ?x1853 (* (- 1) ?x1934))))
 (let ((?x1961 (* 2 (* d 4))))
 (let ((?x1954 (* (- 8) d)))
 (let ((?x607 (* 64 ?x1826)))
 (let ((?x481 (+ 4 q)))
 (let ((?x1590 (* ?x480 ?x481 ?x481 ?x481 (+ 2 q (* 2 r) (* (- 1) x) d) r)))
 (let ((?x1227 (* q r d d)))
 (let ((?x1528 (* 8 ?x1227)))
 (let ((?x1226 (* 2 (* q 4 2 r))))
 (let ((?x1209 (* 2 (* q q 2 r))))
 (let ((?x1207 (* 2 (* q 4 q r))))
 (let ((?x1155 (* 2 (* q 4 (* 2 r) r))))
 (let ((?x1151 (* 2 (* q q (* 2 r) r))))
 (let ((?x1148 (* 2 (* q 4 d r))))
 (let ((?x1138 (* 2 (* q q d r))))
 (let ((?x1136 (* 2 (* q 4 (* (- 1) x) r))))
 (let ((?x1133 (* 2 (* q q (* (- 1) x) r))))
 (let ((?x1129 (* q r d)))
 (let ((?x1130 (* 40 ?x1129)))
 (let ((?x1127 (* q q r d)))
 (let ((?x1128 (* 10 ?x1127)))
 (let ((?x952 (* q r r d)))
 (let ((?x958 (* 16 ?x952)))
 (let ((?x1543 (* (- 8) ?x863)))
 (let ((?x664 (* q q r)))
 (let ((?x1194 (* 8 ?x664)))
 (let ((?x617 (* 16 ?x620)))
 (let ((?x951 (* 16 ?x608)))
 (let ((?x479 (* 64 r)))
 (let ((?x905 (+ ?x479 ?x1526 ?x1195 ?x1015 (* (- 8) (* q r x d)) ?x951 ?x617 ?x1194 ?x1543 ?x958 ?x953 ?x1014 ?x1121 ?x1128 ?x1130 ?x1133 ?x1136 ?x1138 ?x1148 ?x1151 ?x1155 ?x1193 ?x1207 ?x1209 ?x1226 ?x1528 ?x1527 (* (- 1) ?x1590) ?x1179 ?x607 ?x1853)))
 (let ((?x517 (* ?x905 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1861 ?x1954 ?x1825 ?x1827 ?x1890 ?x1961))))
 (let ((?x1965 (* 16 d)))
 (let ((?x1493 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 (* (- 8) (* d 2)) ?x1861 ?x1965 ?x1825 ?x1827 ?x1890)))
 (let ((?x1977 (* (- 512) ?x1826)))
 (let ((?x1966 (* (- 2) ?x1527)))
 (let ((?x1981 (+ (- 8) q)))
 (let ((?x1116 (* ?x1981 ?x1981 ?x1981 ?x480 (+ (- 4) q (* 2 r) (* (- 1) x) (* (- 2) d)) r)))
 (let ((?x1973 (* 128 ?x1013)))
 (let ((?x1619 (* (- 16) ?x952)))
 (let ((?x1990 (* 16 ?x863)))
 (let ((?x1975 (* (- 32) ?x620)))
 (let ((?x1976 (* (- 128) ?x608)))
 (let ((?x1972 (* 256 ?x371)))
 (let ((?x1968 (* 192 ?x267)))
 (let ((?x1987 (* (- 128) ?x163)))
 (let ((?x1982 (* (- 512) r)))
 (let ((?x1334 (+ ?x1982 ?x1987 ?x1968 ?x1972 (* (- 8) (* q d (* (- 2) d) r)) (* (- 8) (* q d (* 2 r) r)) (* 8 (* q r x d)) ?x307 ?x1976 ?x1975 (* (- 24) ?x664) ?x1990 ?x1619 ?x953 ?x1973 (* (- 1) ?x1116) ?x1121 (* (- 8) (* q 2 q r)) (* (- 24) ?x1127) (* 128 ?x1129) (* (- 8) (* q 2 (* (- 2) d) r)) ?x1193 (* 16 ?x1227) (* (- 8) (* q d (- 4) r)) (* (- 8) (* q 2 (- 4) r)) ?x1966 (* (- 8) (* q 2 (* 2 r) r)) ?x1179 (* (- 8) (* q 2 (* (- 1) x) r)) (* (- 8) (* q d (* (- 1) x) r)) ?x1977 ?x1706 (* (- 64) ?x1918))))
 (let (($x253 (or (not (= (* ?x1334 ?x1493) 0)) (not (= ?x517 0)) (not (= (* ?x1166 ?x1586) 0)) (not (= (* ?x338 ?x361) 0)))))
 (let (($x266 (and (= ?x361 0) $x253)))
 (let ((?x568 (* 4 (* d00 r00))))
 (let ((?x1845 (* (- 4) (* ?x480 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x1729 (* 4 (* ?x480 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x1118 (* (- 8) x)))
 (let ((?x403 (* 16 r)))
 (let ((?x1707 (+ 16 ?x403 ?x1118 ?x30 ?x1580 ?x158 ?x1729 ?x190 ?x206 (* ?x480 ?x480 ?x481) (* (- 2) (* ?x480 ?x481)) ?x256 ?x1845 ?x568)))
 (let ((?x155 (* (- 1) x)))
 (let ((?x126 (* 2 r)))
 (let ((?x1854 (+ 2 ?x126 ?x155 q d)))
 (let ((?x1739 (+ (* (- 1) (* ?x480 ?x481 ?x481 ?x481 ?x1854 r)) (* ?x480 ?x481 ?x481 ?x1854 r))))
 (let (($x1702 (not (= (* ?x1739 ?x1707) 0))))
 (let ((?x1634 (+ ?x403 ?x1118 ?x30 ?x158 ?x1729 ?x190 ?x206 (* ?x480 ?x480 q) (* (- 2) (* ?x480 q)) ?x256 (* (- 4) (* ?x480 (+ ?x126 ?x155 q))) ?x568)))
 (let ((?x1932 (+ (* (- 1) (* ?x480 (+ ?x126 ?x155 q) r q q q)) (* ?x480 (+ ?x126 ?x155 q) r q q))))
 (let (($x1625 (not (= (* ?x1932 ?x1634) 0))))
 (let ((?x972 (+ (- 32) ?x403 ?x1118 ?x30 (* (- 16) d) ?x158 ?x1729 ?x190 ?x206 (* ?x1981 ?x480 ?x480) (* (- 2) (* ?x1981 ?x480)) ?x256 (* (- 4) (* ?x480 (+ (- 4) ?x126 ?x155 q (* (- 2) d)))) ?x568)))
 (let ((?x1980 (* (- 2) d)))
 (let ((?x1626 (+ (- 4) ?x126 ?x155 q ?x1980)))
 (let ((?x1639 (+ (* (- 1) (* ?x1981 ?x1981 ?x1981 ?x480 ?x1626 r)) (* ?x1981 ?x1981 ?x480 ?x1626 r))))
 (let (($x984 (not (= (* ?x1639 ?x972) 0))))
 (let ((?x1924 (+ (- 16) ?x403 ?x1118 ?x30 ?x1954 ?x158 ?x1729 ?x190 ?x206 (* ?x1612 ?x480 ?x480) (* (- 2) (* ?x1612 ?x480)) ?x256 (* (- 4) (* ?x480 (+ (- 2) ?x126 ?x155 q (* (- 1) d)))) ?x568)))
 (let ((?x1614 (* (- 1) d)))
 (let ((?x1703 (+ (- 2) ?x126 ?x155 q ?x1614)))
 (let ((?x1838 (+ (* (- 1) (* ?x1612 ?x1612 ?x1612 ?x480 ?x1703 r)) (* ?x1612 ?x1612 ?x480 ?x1703 r))))
 (let (($x299 (not (= (* ?x1838 ?x1924) 0))))
 (let ((?x1857 (+ ?x187 ?x158 ?x1861 ?x190 ?x206 (* d d q) (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x568)))
 (let (($x1740 (= ?x1857 0)))
 (let (($x1750 (and $x1740 (or $x299 $x984 $x1625 $x1702))))
 (rewrite (= $x1750 $x266)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1900 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x568 (* 4 (* d00 r00))))
 (let ((?x1980 (* (- 2) d)))
 (let ((?x155 (* (- 1) x)))
 (let ((?x126 (* 2 r)))
 (let ((?x1626 (+ (- 4) ?x126 ?x155 q ?x1980)))
 (let ((?x480 (+ 2 d)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x1729 (* 4 (* ?x480 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x1118 (* (- 8) x)))
 (let ((?x403 (* 16 r)))
 (let ((?x972 (+ (- 32) ?x403 ?x1118 ?x30 (* (- 16) d) ?x158 ?x1729 ?x190 ?x206 (* (+ (- 8) q) ?x480 ?x480) (* (- 2) (* (+ (- 8) q) ?x480)) ?x256 (* (- 4) (* ?x480 ?x1626)) ?x568)))
 (let ((?x1637 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x480 ?x1626 r))))
 (let (($x982 (= (* (+ ?x1637 (* (+ (- 8) q) (+ (- 8) q) ?x480 ?x1626 r)) ?x972) 0)))
 (let (($x984 (not $x982)))
 (let ((?x1634 (+ ?x403 ?x1118 ?x30 ?x158 ?x1729 ?x190 ?x206 (* ?x480 ?x480 q) (* (- 2) (* ?x480 q)) ?x256 (* (- 4) (* ?x480 (+ ?x126 ?x155 q))) ?x568)))
 (let ((?x1932 (+ (* (- 1) (* ?x480 (+ ?x126 ?x155 q) r q q q)) (* ?x480 (+ ?x126 ?x155 q) r q q))))
 (let (($x1625 (not (= (* ?x1932 ?x1634) 0))))
 (let ((?x1954 (* (- 8) d)))
 (let ((?x1924 (+ (- 16) ?x403 ?x1118 ?x30 ?x1954 ?x158 ?x1729 ?x190 ?x206 (* (+ (- 4) q) ?x480 ?x480) (* (- 2) (* (+ (- 4) q) ?x480)) ?x256 (* (- 4) (* ?x480 (+ (- 2) ?x126 ?x155 q (* (- 1) d)))) ?x568)))
 (let ((?x1614 (* (- 1) d)))
 (let ((?x1703 (+ (- 2) ?x126 ?x155 q ?x1614)))
 (let ((?x1612 (+ (- 4) q)))
 (let ((?x1838 (+ (* (- 1) (* ?x1612 ?x1612 ?x1612 ?x480 ?x1703 r)) (* ?x1612 ?x1612 ?x480 ?x1703 r))))
 (let (($x299 (not (= (* ?x1838 ?x1924) 0))))
 (let ((?x1580 (* 8 d)))
 (let ((?x1707 (+ 16 ?x403 ?x1118 ?x30 ?x1580 ?x158 ?x1729 ?x190 ?x206 (* ?x480 ?x480 (+ 4 q)) (* (- 2) (* ?x480 (+ 4 q))) ?x256 (* (- 4) (* ?x480 (+ 2 ?x126 ?x155 q d))) ?x568)))
 (let ((?x1854 (+ 2 ?x126 ?x155 q d)))
 (let ((?x481 (+ 4 q)))
 (let ((?x1739 (+ (* (- 1) (* ?x480 ?x481 ?x481 ?x481 ?x1854 r)) (* ?x480 ?x481 ?x481 ?x1854 r))))
 (let (($x1702 (not (= (* ?x1739 ?x1707) 0))))
 (let ((?x1861 (* 4 (* x d))))
 (let ((?x187 (* 8 r)))
 (let ((?x1857 (+ ?x187 ?x158 ?x1861 ?x190 ?x206 (* d d q) (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x568)))
 (let (($x1740 (= ?x1857 0)))
 (and $x1740 (or $x1702 $x299 $x1625 $x984))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x597 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x568 (* 4 (* d00 r00))))
 (let ((?x155 (* (- 1) x)))
 (let ((?x126 (* 2 r)))
 (let ((?x1854 (+ 2 ?x126 ?x155 q d)))
 (let ((?x480 (+ 2 d)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x1729 (* 4 (* ?x480 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x1580 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1118 (* (- 8) x)))
 (let ((?x403 (* 16 r)))
 (let ((?x1707 (+ 16 ?x403 ?x1118 ?x30 ?x1580 ?x158 ?x1729 ?x190 ?x206 (* ?x480 ?x480 (+ 4 q)) (* (- 2) (* ?x480 (+ 4 q))) ?x256 (* (- 4) (* ?x480 ?x1854)) ?x568)))
 (let ((?x583 (* (- 1) (* ?x480 (+ 4 q) (+ 4 q) (+ 4 q) ?x1854 r))))
 (let (($x1837 (= (* (+ ?x583 (* ?x480 (+ 4 q) (+ 4 q) ?x1854 r)) ?x1707) 0)))
 (let (($x1702 (not $x1837)))
 (let ((?x1634 (+ ?x403 ?x1118 ?x30 ?x158 ?x1729 ?x190 ?x206 (* ?x480 ?x480 q) (* (- 2) (* ?x480 q)) ?x256 (* (- 4) (* ?x480 (+ ?x126 ?x155 q))) ?x568)))
 (let ((?x1932 (+ (* (- 1) (* ?x480 (+ ?x126 ?x155 q) r q q q)) (* ?x480 (+ ?x126 ?x155 q) r q q))))
 (let (($x1625 (not (= (* ?x1932 ?x1634) 0))))
 (let ((?x972 (+ (- 32) ?x403 ?x1118 ?x30 (* (- 16) d) ?x158 ?x1729 ?x190 ?x206 (* (+ (- 8) q) ?x480 ?x480) (* (- 2) (* (+ (- 8) q) ?x480)) ?x256 (* (- 4) (* ?x480 (+ (- 4) ?x126 ?x155 q (* (- 2) d)))) ?x568)))
 (let ((?x1980 (* (- 2) d)))
 (let ((?x1626 (+ (- 4) ?x126 ?x155 q ?x1980)))
 (let ((?x1981 (+ (- 8) q)))
 (let ((?x1639 (+ (* (- 1) (* ?x1981 ?x1981 ?x1981 ?x480 ?x1626 r)) (* ?x1981 ?x1981 ?x480 ?x1626 r))))
 (let (($x984 (not (= (* ?x1639 ?x972) 0))))
 (let ((?x1954 (* (- 8) d)))
 (let ((?x1924 (+ (- 16) ?x403 ?x1118 ?x30 ?x1954 ?x158 ?x1729 ?x190 ?x206 (* (+ (- 4) q) ?x480 ?x480) (* (- 2) (* (+ (- 4) q) ?x480)) ?x256 (* (- 4) (* ?x480 (+ (- 2) ?x126 ?x155 q (* (- 1) d)))) ?x568)))
 (let ((?x1614 (* (- 1) d)))
 (let ((?x1703 (+ (- 2) ?x126 ?x155 q ?x1614)))
 (let ((?x1612 (+ (- 4) q)))
 (let ((?x1838 (+ (* (- 1) (* ?x1612 ?x1612 ?x1612 ?x480 ?x1703 r)) (* ?x1612 ?x1612 ?x480 ?x1703 r))))
 (let (($x299 (not (= (* ?x1838 ?x1924) 0))))
 (let ((?x1861 (* 4 (* x d))))
 (let ((?x187 (* 8 r)))
 (let ((?x1857 (+ ?x187 ?x158 ?x1861 ?x190 ?x206 (* d d q) (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x568)))
 (let (($x1740 (= ?x1857 0)))
 (let (($x1750 (and $x1740 (or $x299 $x984 $x1625 $x1702))))
 (let (($x1899 (and $x1740 (or $x1702 $x299 $x1625 $x984))))
 (rewrite (= $x1899 $x1750))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x151 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x128 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x134 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x145 (+ (* (- 1) ?x62 ?x134 ?x134 ?x134 ?x128 r) (* ?x62 ?x134 ?x134 ?x128 r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x132 (- (+ (- (* 8 ?x128) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x139 (+ (- (+ (- ?x132 ?x41) (* ?x62 ?x62 ?x134)) (* 2 ?x62 ?x134)) ?x49)))
 (let ((?x105 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x111 (- q 4)))
 (let ((?x122 (+ (* (- 1) ?x62 ?x111 ?x111 ?x111 ?x105 r) (* ?x62 ?x111 ?x111 ?x105 r))))
 (let ((?x109 (- (+ (- (* 8 ?x105) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x116 (+ (- (+ (- ?x109 ?x41) (* ?x62 ?x62 ?x111)) (* 2 ?x62 ?x111)) ?x49)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x84 (+ ?x58 q)))
 (let ((?x77 (- 1)))
 (let ((?x100 (+ (* ?x77 ?x62 q q q ?x84 r) (* ?x62 q q ?x84 r))))
 (let ((?x88 (- (+ (- (* 8 ?x84) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (* ?x77 ?x62 ?x67 ?x67 ?x67 ?x59 r) (* ?x62 ?x67 ?x67 ?x59 r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x149 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x80) 0)) (not (= (* (+ (- ?x94 (* 4 ?x62 ?x84)) ?x53) ?x100) 0)) (not (= (* (+ (- ?x116 (* 4 ?x62 ?x105)) ?x53) ?x122) 0)) (not (= (* (+ (- ?x139 (* 4 ?x62 ?x128)) ?x53) ?x145) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x149)))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1076 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x568 (* 4 (* d00 r00))))
 (let ((?x1500 (* (- 2) d)))
 (let ((?x155 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1784 (+ (- 4) ?x57 ?x155 q ?x1500)))
 (let ((?x261 (+ 2 d)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x443 (* 4 (* ?x261 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x1287 (* 8 q)))
 (let ((?x1118 (* (- 8) x)))
 (let ((?x964 (* 16 r)))
 (let ((?x558 (+ (- 32) ?x964 ?x1118 ?x1287 (* (- 16) d) ?x158 ?x443 ?x190 ?x206 (* (+ (- 8) q) ?x261 ?x261) (* (- 2) (* (+ (- 8) q) ?x261)) ?x256 (* (- 4) (* ?x261 ?x1784)) ?x568)))
 (let ((?x1052 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x261 ?x1784 r))))
 (let (($x1032 (= (* (+ ?x1052 (* (+ (- 8) q) (+ (- 8) q) ?x261 ?x1784 r)) ?x558) 0)))
 (let ((?x1781 (+ ?x964 ?x1118 ?x1287 ?x158 ?x443 ?x190 ?x206 (* ?x261 ?x261 q) (* (- 2) (* ?x261 q)) ?x256 (* (- 4) (* ?x261 (+ ?x57 ?x155 q))) ?x568)))
 (let ((?x1764 (+ (* (- 1) (* ?x261 (+ ?x57 ?x155 q) r q q q)) (* ?x261 (+ ?x57 ?x155 q) r q q))))
 (let ((?x448 (* (- 8) d)))
 (let ((?x878 (+ (- 16) ?x964 ?x1118 ?x1287 ?x448 ?x158 ?x443 ?x190 ?x206 (* (+ (- 4) q) ?x261 ?x261) (* (- 2) (* (+ (- 4) q) ?x261)) ?x256 (* (- 4) (* ?x261 (+ (- 2) ?x57 ?x155 q (* (- 1) d)))) ?x568)))
 (let ((?x1044 (* (- 1) d)))
 (let ((?x1170 (+ (- 2) ?x57 ?x155 q ?x1044)))
 (let ((?x983 (+ (- 4) q)))
 (let ((?x203 (+ (* (- 1) (* ?x983 ?x983 ?x983 ?x261 ?x1170 r)) (* ?x983 ?x983 ?x261 ?x1170 r))))
 (let ((?x187 (* 8 d)))
 (let ((?x974 (+ 16 ?x964 ?x1118 ?x1287 ?x187 ?x158 ?x443 ?x190 ?x206 (* ?x261 ?x261 (+ 4 q)) (* (- 2) (* ?x261 (+ 4 q))) ?x256 (* (- 4) (* ?x261 (+ 2 ?x57 ?x155 q d))) ?x568)))
 (let ((?x894 (+ 2 ?x57 ?x155 q d)))
 (let ((?x345 (+ 4 q)))
 (let ((?x1186 (+ (* (- 1) (* ?x261 ?x345 ?x345 ?x345 ?x894 r)) (* ?x261 ?x345 ?x345 ?x894 r))))
 (let (($x1744 (or (not (= (* ?x1186 ?x974) 0)) (not (= (* ?x203 ?x878) 0)) (not (= (* ?x1764 ?x1781) 0)) (not $x1032))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x576 (+ ?x30 ?x158 (* 4 (* x d)) ?x190 ?x206 ?x44 (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x568)))
 (and (= ?x576 0) $x1744)))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1280 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x568 (* 4 (* d00 r00))))
 (let ((?x1500 (* (- 2) d)))
 (let ((?x155 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1784 (+ (- 4) ?x57 ?x155 q ?x1500)))
 (let ((?x261 (+ 2 d)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x443 (* 4 (* ?x261 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x1287 (* 8 q)))
 (let ((?x1118 (* (- 8) x)))
 (let ((?x964 (* 16 r)))
 (let ((?x558 (+ (- 32) ?x964 ?x1118 ?x1287 (* (- 16) d) ?x158 ?x443 ?x190 ?x206 (* (+ (- 8) q) ?x261 ?x261) (* (- 2) (* (+ (- 8) q) ?x261)) ?x256 (* (- 4) (* ?x261 ?x1784)) ?x568)))
 (let ((?x1052 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x261 ?x1784 r))))
 (let (($x1032 (= (* (+ ?x1052 (* (+ (- 8) q) (+ (- 8) q) ?x261 ?x1784 r)) ?x558) 0)))
 (let ((?x1781 (+ ?x964 ?x1118 ?x1287 ?x158 ?x443 ?x190 ?x206 (* ?x261 ?x261 q) (* (- 2) (* ?x261 q)) ?x256 (* (- 4) (* ?x261 (+ ?x57 ?x155 q))) ?x568)))
 (let ((?x1764 (+ (* (- 1) (* ?x261 (+ ?x57 ?x155 q) r q q q)) (* ?x261 (+ ?x57 ?x155 q) r q q))))
 (let ((?x448 (* (- 8) d)))
 (let ((?x878 (+ (- 16) ?x964 ?x1118 ?x1287 ?x448 ?x158 ?x443 ?x190 ?x206 (* (+ (- 4) q) ?x261 ?x261) (* (- 2) (* (+ (- 4) q) ?x261)) ?x256 (* (- 4) (* ?x261 (+ (- 2) ?x57 ?x155 q (* (- 1) d)))) ?x568)))
 (let ((?x1044 (* (- 1) d)))
 (let ((?x1170 (+ (- 2) ?x57 ?x155 q ?x1044)))
 (let ((?x983 (+ (- 4) q)))
 (let ((?x203 (+ (* (- 1) (* ?x983 ?x983 ?x983 ?x261 ?x1170 r)) (* ?x983 ?x983 ?x261 ?x1170 r))))
 (let ((?x187 (* 8 d)))
 (let ((?x974 (+ 16 ?x964 ?x1118 ?x1287 ?x187 ?x158 ?x443 ?x190 ?x206 (* ?x261 ?x261 (+ 4 q)) (* (- 2) (* ?x261 (+ 4 q))) ?x256 (* (- 4) (* ?x261 (+ 2 ?x57 ?x155 q d))) ?x568)))
 (let ((?x894 (+ 2 ?x57 ?x155 q d)))
 (let ((?x345 (+ 4 q)))
 (let ((?x1186 (+ (* (- 1) (* ?x261 ?x345 ?x345 ?x345 ?x894 r)) (* ?x261 ?x345 ?x345 ?x894 r))))
 (let (($x1744 (or (not (= (* ?x1186 ?x974) 0)) (not (= (* ?x203 ?x878) 0)) (not (= (* ?x1764 ?x1781) 0)) (not $x1032))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x576 (+ ?x30 ?x158 (* 4 (* x d)) ?x190 ?x206 ?x44 (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x568)))
 (let (($x1741 (and (= ?x576 0) $x1744)))
 (let ((?x128 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x134 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x145 (+ (* (- 1) ?x62 ?x134 ?x134 ?x134 ?x128 r) (* ?x62 ?x134 ?x134 ?x128 r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x132 (- (+ (- (* 8 ?x128) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x139 (+ (- (+ (- ?x132 ?x41) (* ?x62 ?x62 ?x134)) (* 2 ?x62 ?x134)) ?x49)))
 (let ((?x105 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x111 (- q 4)))
 (let ((?x122 (+ (* (- 1) ?x62 ?x111 ?x111 ?x111 ?x105 r) (* ?x62 ?x111 ?x111 ?x105 r))))
 (let ((?x109 (- (+ (- (* 8 ?x105) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x116 (+ (- (+ (- ?x109 ?x41) (* ?x62 ?x62 ?x111)) (* 2 ?x62 ?x111)) ?x49)))
 (let ((?x100 (+ (* (- 1) ?x62 q q q (+ (- ?x57 x) q) r) (* ?x62 q q (+ (- ?x57 x) q) r))))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x88 (- (+ (- (* 8 (+ (- ?x57 x) q)) (* 8 r00)) ?x63) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let (($x102 (= (* (+ (- ?x94 (* 4 ?x62 (+ (- ?x57 x) q))) ?x53) ?x100) 0)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (* (- 1) ?x62 ?x67 ?x67 ?x67 ?x59 r) (* ?x62 ?x67 ?x67 ?x59 r))))
 (let ((?x69 (+ (- (- (+ (- (* 8 ?x59) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x67))))
 (let ((?x75 (+ (- (+ (- ?x69 (* 2 ?x62 ?x67)) ?x49) (* 4 ?x62 ?x59)) ?x53)))
 (let (($x149 (or (not (= (* ?x75 ?x80) 0)) (not $x102) (not (= (* (+ (- ?x116 (* 4 ?x62 ?x105)) ?x53) ?x122) 0)) (not (= (* (+ (- ?x139 (* 4 ?x62 ?x128)) ?x53) ?x145) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x150 (and (= ?x54 0) $x149)))
 (rewrite (= $x150 $x1741))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x600 (trans (quant-intro (proof-bind ?x1280) (= $x151 $x1076)) (elim-unused (= $x1076 $x1900)) (= $x151 $x1900))))
 (let ((@x27 (asserted $x151)))
 (let ((@x565 (mp (mp @x27 @x600 $x1900) (quant-intro (proof-bind ?x597) (= $x1900 $x304)) $x304)))
 (let ((@x1588 (mp (mp @x565 (rewrite (= $x304 $x304)) $x304) (quant-intro (proof-bind ?x238) (= $x304 $x1203)) $x1203)))
 (let ((@x679 (mp (mp~ @x1588 (sk (~ $x1203 $x1423)) $x1423) (rewrite (= $x1423 $x1419)) $x1419)))
 (let ((@x540 (and-elim @x679 $x1715)))
 (let ((@x1486 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1715) $x166)) @x540 $x166)))
 (let (($x436 (<= ?x821 0)))
 (let ((@x1807 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1715) $x436)) @x540 $x436)))
 (let (($x1907 (not (<= ?x1342 0))))
 (let (($x978 (<= ?x252 0)))
 (let (($x569 (>= ?x252 0)))
 (let ((@x544 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x759 (not $x978) (not $x569))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x569)) @x1807 @x1486 false) $x569) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x978)) @x1807 @x1486 false) $x978) $x759)))
 (let (($x194 (>= ?x494 0)))
 (let (($x1485 (<= ?x494 0)))
 (let ((@x1783 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1299 (not $x1485) (not $x194))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1485)) @x1807 @x1486 false) $x1485) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x194)) @x1807 @x1486 false) $x194) $x1299)))
 (let (($x1796 (>= ?x1477 0)))
 (let (($x539 (<= ?x1477 0)))
 (let ((@x1914 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x421 (not $x539) (not $x1796))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x539)) @x1807 @x1486 false) $x539) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1796)) @x1807 @x1486 false) $x1796) $x421)))
 (let ((@x1912 (unit-resolution (unit-resolution (and-elim @x679 $x1478) @x1914 @x1783 (or $x341 $x1714)) @x544 $x1714)))
 (let (($x1066 (>= ?x1342 0)))
 (let ((@x1495 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1223 $x1907 (not $x1066))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1066)) @x1807 @x1486 false) $x1066) @x1912 $x1907)))
 ((_ th-lemma arith farkas 1 1 1) @x1495 @x1807 @x1486 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        54
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             960
 :arith-nonlinear-bounds    16
 :arith-num-rows            13
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 88
 :arith-tableau-max-rows    13
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                19.79
 :memory                    19.21
 :mk-bool-var               15
 :mk-clause                 20
 :num-allocs                595957
 :num-checks                1
 :propagations              36
 :rlimit-count              9518
 :time                      0.01
 :total-time                0.03)
