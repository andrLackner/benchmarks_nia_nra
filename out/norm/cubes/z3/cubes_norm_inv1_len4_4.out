unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x600 (* (- 2) n!0)))
 (let ((?x597 (* k!2 n!0)))
 (let ((?x328 (* (- 1) ?x597)))
 (let ((?x596 (* 3 c!3)))
 (let ((?x892 (+ k!2 ?x596 ?x328 ?x600)))
 (let (($x117 (<= ?x892 1)))
 (let (($x912 (= ?x892 1)))
 (let ((?x1201 (* k!2 m!1 m!1)))
 (let ((?x1200 (* k!2 m!1 m!1 n!0)))
 (let ((?x1155 (+ 6 m!1)))
 (let ((?x373 (+ 1 n!0)))
 (let ((?x1199 (* ?x373 ?x373 ?x1155 ?x1155 ?x1155 ?x1155)))
 (let ((?x339 (+ k!2 m!1)))
 (let ((?x1196 (* ?x373 ?x373 ?x373 ?x373 ?x339 ?x339 ?x339)))
 (let ((?x1121 (* c!3 m!1 m!1)))
 (let ((?x1120 (* c!3 m!1 m!1 n!0)))
 (let ((?x660 (+ (* 1512 (* n!0 n!0)) (* (- 36) k!2) (* 144 (* n!0 n!0 n!0)) (* (- 1) (* m!1 m!1 n!0 n!0 n!0)) (* 6 (* m!1 n!0 n!0 n!0 n!0)) (* 36 (* n!0 n!0 n!0 n!0)) (* (- 36) c!3) (* (- 72) ?x597) (* 107 (* m!1 m!1)) (* 105 (* m!1 m!1 n!0 n!0)) (* (- 6) (* c!3 m!1 n!0)) (* 6 (* m!1 m!1 m!1 n!0 n!0)) (* 666 (* m!1 n!0 n!0)) (* 6 (* ?x373 ?x373 ?x373 ?x339 ?x339 ?x339)) (* 18 (* m!1 n!0 n!0 n!0)) (* 12 (* m!1 m!1 m!1 n!0)) (* (- 72) (* c!3 n!0)) (* 648 m!1) ?x1120 ?x1121 (* 213 (* m!1 m!1 n!0)) (* (- 1) (* ?x373 ?x373 ?x373 ?x1155 ?x339 ?x339 ?x339)) (* 6 (* ?x373 ?x373 ?x373 ?x1155 ?x1155 ?x1155)) (* 2736 n!0) (* 6 ?x1196) (* (- 1) ?x1199) ?x1200 ?x1201 (* 1302 (* m!1 n!0)) (* 6 (* m!1 m!1 m!1)) (* (- 36) (* c!3 n!0 n!0)) (* (- 36) (* k!2 n!0 n!0)) (* (- 6) (* k!2 m!1 n!0 n!0)) (* (- 6) (* c!3 m!1 n!0 n!0)) (* (- 6) (* k!2 m!1 n!0)))))
 (let (($x669 (= ?x660 (- 1332))))
 (let (($x954 (not $x669)))
 (let ((?x923 (+ (* 3 (* n!0 n!0)) (* (- 1) k!2) (* 3 n!0))))
 (let (($x926 (= ?x923 (- 1))))
 (let ((?x405 (* (- 9) n!0)))
 (let ((?x1108 (* c!3 n!0)))
 (let ((?x1248 (* 9 ?x1108)))
 (let ((?x1239 (* (- 1) (* k!2 k!2))))
 (let ((?x406 (* 18 c!3)))
 (let ((?x499 (* 5 k!2)))
 (let ((?x552 (+ m!1 (* (- 6) n!0))))
 (let (($x591 (= ?x552 6)))
 (let (($x719 (and $x591 (= (+ ?x499 ?x406 ?x1239 ?x1248 ?x405) 4) $x912 $x926 $x954)))
 (let ((?x1153 (* ?x373 ?x373 ?x373 ?x1155 ?x339 ?x339 ?x339)))
 (let ((?x436 (* m!1 m!1 n!0 n!0 n!0)))
 (let ((?x876 (+ (* 36 c!3) (* 36 k!2) (* (- 648) m!1) (* (- 2736) n!0) (* 72 ?x597) (* (- 12) (* m!1 m!1 m!1 n!0)) (* 72 ?x1108) (* (- 1512) (* n!0 n!0)) (* (- 144) (* n!0 n!0 n!0)) (* (- 6) (* ?x373 ?x373 ?x373 ?x339 ?x339 ?x339)) (* (- 18) (* m!1 n!0 n!0 n!0)) ?x436 (* (- 107) (* m!1 m!1)) (* (- 1302) (* m!1 n!0)) (* (- 213) (* m!1 m!1 n!0)) (* (- 666) (* m!1 n!0 n!0)) (* (- 105) (* m!1 m!1 n!0 n!0)) (* (- 36) (* n!0 n!0 n!0 n!0)) (* (- 6) (* m!1 n!0 n!0 n!0 n!0)) (* (- 6) (* m!1 m!1 m!1 n!0 n!0)) (* 6 (* c!3 m!1 n!0)) (* 6 (* k!2 m!1 n!0)) (* (- 6) ?x1196) ?x1199 (* (- 1) ?x1120) (* (- 1) ?x1200) (* (- 1) ?x1121) (* (- 1) ?x1201) ?x1153 (* (- 6) (* ?x373 ?x373 ?x373 ?x1155 ?x1155 ?x1155)) (* (- 6) (* m!1 m!1 m!1)) (* 36 (* c!3 n!0 n!0)) (* 36 (* k!2 n!0 n!0)) (* 6 (* k!2 m!1 n!0 n!0)) (* 6 (* c!3 m!1 n!0 n!0)))))
 (let (($x881 (and $x591 (= (+ ?x406 ?x499 ?x405 ?x1239 ?x1248) 4) (= (+ ?x596 k!2 ?x600 ?x328) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x876 1332)))))
 (let (($x295 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1356 (* 6 (* c m n n))))
 (let ((?x1354 (* 6 (* k m n n))))
 (let ((?x1661 (* 36 (* k n n))))
 (let ((?x1660 (* 36 (* c n n))))
 (let ((?x314 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x1176 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x314)))
 (let ((?x940 (* (- 6) ?x1176)))
 (let ((?x69 (+ k m)))
 (let ((?x1169 (* ?x317 ?x317 ?x317 ?x314 ?x69 ?x69 ?x69)))
 (let ((?x1659 (* (- 1) (* k m m))))
 (let ((?x1658 (* (- 1) (* c m m))))
 (let ((?x1657 (* (- 1) (* k m m n))))
 (let ((?x1656 (* (- 1) (* c m m n))))
 (let ((?x924 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x314)))
 (let ((?x907 (* ?x317 ?x317 ?x317 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x344 (* (- 6) ?x907)))
 (let ((?x891 (* 6 (* k m n))))
 (let ((?x889 (* 6 (* c m n))))
 (let ((?x1655 (* (- 6) (* m m m n n))))
 (let ((?x1639 (* (- 6) (* m n n n n))))
 (let ((?x1638 (* (- 36) (* n n n n))))
 (let ((?x502 (* m m n n n)))
 (let ((?x407 (* ?x317 ?x317 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x388 (* (- 6) ?x407)))
 (let ((?x152 (* c n)))
 (let ((?x1565 (* 72 ?x152)))
 (let ((?x55 (* k n)))
 (let ((?x1562 (* 72 ?x55)))
 (let ((?x1011 (* 36 k)))
 (let ((?x1008 (* 36 c)))
 (let ((?x302 (+ ?x1008 ?x1011 (* (- 648) m) (* (- 2736) n) ?x1562 (* (- 12) (* m m m n)) ?x1565 (* (- 1512) (* n n)) (* (- 144) (* n n n)) ?x388 (* (- 18) (* m n n n)) ?x502 (* (- 107) (* m m)) (* (- 1302) (* m n)) (* (- 213) (* m m n)) (* (- 666) (* m n n)) (* (- 105) (* m m n n)) ?x1638 ?x1639 ?x1655 ?x889 ?x891 ?x344 ?x924 ?x1656 ?x1657 ?x1658 ?x1659 ?x1169 ?x940 (* (- 6) (* m m m)) ?x1660 ?x1661 ?x1354 ?x1356)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 ?x152)) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 $x214 $x266 $x304 (not (= ?x302 1332)))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x782 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x407 (* ?x317 ?x317 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x388 (* (- 6) ?x407)))
 (let ((?x314 (+ 6 m)))
 (let ((?x924 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x314)))
 (let ((?x907 (* ?x317 ?x317 ?x317 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x344 (* (- 6) ?x907)))
 (let ((?x1214 (* ?x317 ?x317 ?x317 ?x314 ?x314)))
 (let ((?x1176 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x314)))
 (let ((?x940 (* (- 6) ?x1176)))
 (let ((?x1169 (* ?x317 ?x317 ?x317 ?x314 ?x69 ?x69 ?x69)))
 (let ((?x777 (+ ?x1169 ?x940 (* (- 6) (* ?x317 ?x317 ?x317 ?x317 ?x314)) (* (- 6) (* ?x317 ?x317 ?x314 ?x314 ?x314)) (* 6 (* ?x317 ?x314 (+ c k))) (* (- 6) (* ?x317 ?x317 ?x317 ?x314)) (* (- 1) (* ?x317 ?x314 ?x314 (+ c k))) ?x1214 ?x344 ?x924 (* 6 (* ?x317 ?x317 ?x314 (+ c k))) ?x388)))
 (let (($x198 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x821 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x821 $x198 (not (= ?x777 0)))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x293 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1356 (* 6 (* c m n n))))
 (let ((?x1354 (* 6 (* k m n n))))
 (let ((?x1661 (* 36 (* k n n))))
 (let ((?x1660 (* 36 (* c n n))))
 (let ((?x314 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x1176 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x314)))
 (let ((?x940 (* (- 6) ?x1176)))
 (let ((?x69 (+ k m)))
 (let ((?x1169 (* ?x317 ?x317 ?x317 ?x314 ?x69 ?x69 ?x69)))
 (let ((?x1659 (* (- 1) (* k m m))))
 (let ((?x1658 (* (- 1) (* c m m))))
 (let ((?x1657 (* (- 1) (* k m m n))))
 (let ((?x1656 (* (- 1) (* c m m n))))
 (let ((?x924 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x314)))
 (let ((?x907 (* ?x317 ?x317 ?x317 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x344 (* (- 6) ?x907)))
 (let ((?x891 (* 6 (* k m n))))
 (let ((?x889 (* 6 (* c m n))))
 (let ((?x1655 (* (- 6) (* m m m n n))))
 (let ((?x1639 (* (- 6) (* m n n n n))))
 (let ((?x1638 (* (- 36) (* n n n n))))
 (let ((?x502 (* m m n n n)))
 (let ((?x407 (* ?x317 ?x317 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x388 (* (- 6) ?x407)))
 (let ((?x152 (* c n)))
 (let ((?x1565 (* 72 ?x152)))
 (let ((?x55 (* k n)))
 (let ((?x1562 (* 72 ?x55)))
 (let ((?x1011 (* 36 k)))
 (let ((?x1008 (* 36 c)))
 (let ((?x302 (+ ?x1008 ?x1011 (* (- 648) m) (* (- 2736) n) ?x1562 (* (- 12) (* m m m n)) ?x1565 (* (- 1512) (* n n)) (* (- 144) (* n n n)) ?x388 (* (- 18) (* m n n n)) ?x502 (* (- 107) (* m m)) (* (- 1302) (* m n)) (* (- 213) (* m m n)) (* (- 666) (* m n n)) (* (- 105) (* m m n n)) ?x1638 ?x1639 ?x1655 ?x889 ?x891 ?x344 ?x924 ?x1656 ?x1657 ?x1658 ?x1659 ?x1169 ?x940 (* (- 6) (* m m m)) ?x1660 ?x1661 ?x1354 ?x1356)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 ?x152)) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x343 (and $x130 $x214 $x266 $x304 (not (= ?x302 1332)))))
 (let ((?x1214 (* ?x317 ?x317 ?x317 ?x314 ?x314)))
 (let ((?x777 (+ ?x1169 ?x940 (* (- 6) (* ?x317 ?x317 ?x317 ?x317 ?x314)) (* (- 6) (* ?x317 ?x317 ?x314 ?x314 ?x314)) (* 6 (* ?x317 ?x314 (+ c k))) (* (- 6) (* ?x317 ?x317 ?x317 ?x314)) (* (- 1) (* ?x317 ?x314 ?x314 (+ c k))) ?x1214 ?x344 ?x924 (* 6 (* ?x317 ?x317 ?x314 (+ c k))) ?x388)))
 (let (($x198 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x821 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x778 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x821 $x198 (not (= ?x777 0)))))
 (rewrite (= $x778 $x343))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1195 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x407 (* ?x317 ?x317 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x314 (+ 6 m)))
 (let ((?x924 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x314)))
 (let ((?x77 (+ c k)))
 (let ((?x1157 (* ?x317 ?x314 ?x314 ?x77)))
 (let ((?x462 (+ (* (- 1) (* ?x317 ?x317 ?x317 ?x314 ?x69 ?x69 ?x69)) (* 6 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x314)) (* 6 (* ?x317 ?x317 ?x317 ?x317 ?x314)) (* 6 (* ?x317 ?x317 ?x314 ?x314 ?x314)) (* (- 6) (* ?x317 ?x314 ?x77)) (* 6 (* ?x317 ?x317 ?x317 ?x314)) ?x1157 (* (- 1) (* ?x317 ?x317 ?x317 ?x314 ?x314)) (* 6 (* ?x317 ?x317 ?x317 ?x317 ?x69 ?x69 ?x69)) (* (- 1) ?x924) (* (- 6) (* ?x317 ?x317 ?x314 ?x77)) (* 6 ?x407))))
 (let (($x198 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x469 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x786 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 (= ?x786 (- 4)) $x469 $x198 (not (= ?x462 0))))))))))))))))) :qid k!34))
 ))
 (let ((?x947 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x407 (* ?x317 ?x317 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x388 (* (- 6) ?x407)))
 (let ((?x314 (+ 6 m)))
 (let ((?x924 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x314)))
 (let ((?x907 (* ?x317 ?x317 ?x317 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x344 (* (- 6) ?x907)))
 (let ((?x1214 (* ?x317 ?x317 ?x317 ?x314 ?x314)))
 (let ((?x1176 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x314)))
 (let ((?x940 (* (- 6) ?x1176)))
 (let ((?x1169 (* ?x317 ?x317 ?x317 ?x314 ?x69 ?x69 ?x69)))
 (let ((?x777 (+ ?x1169 ?x940 (* (- 6) (* ?x317 ?x317 ?x317 ?x317 ?x314)) (* (- 6) (* ?x317 ?x317 ?x314 ?x314 ?x314)) (* 6 (* ?x317 ?x314 (+ c k))) (* (- 6) (* ?x317 ?x317 ?x317 ?x314)) (* (- 1) (* ?x317 ?x314 ?x314 (+ c k))) ?x1214 ?x344 ?x924 (* 6 (* ?x317 ?x317 ?x314 (+ c k))) ?x388)))
 (let (($x198 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x821 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x778 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x821 $x198 (not (= ?x777 0)))))
 (let ((?x77 (+ c k)))
 (let ((?x1157 (* ?x317 ?x314 ?x314 ?x77)))
 (let ((?x462 (+ (* (- 1) ?x1169) (* 6 ?x1176) (* 6 (* ?x317 ?x317 ?x317 ?x317 ?x314)) (* 6 (* ?x317 ?x317 ?x314 ?x314 ?x314)) (* (- 6) (* ?x317 ?x314 ?x77)) (* 6 (* ?x317 ?x317 ?x317 ?x314)) ?x1157 (* (- 1) ?x1214) (* 6 ?x907) (* (- 1) ?x924) (* (- 6) (* ?x317 ?x317 ?x314 ?x77)) (* 6 ?x407))))
 (let (($x469 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x786 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1181 (and $x130 (= ?x786 (- 4)) $x469 $x198 (not (= ?x462 0)))))
 (rewrite (= $x1181 $x778))))))))))))))))))))))))))))))))
 ))
 (let (($x97 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x69 (+ k m)))
 (let ((?x70 (+ m 6)))
 (let ((?x76 (+ (* (- 1) ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 6 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 6 ?x70 ?x71 ?x71 ?x71 ?x71) (* 6 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x82 (+ (- ?x76 (* 6 (+ c k) ?x70 ?x71)) (* 6 ?x70 ?x71 ?x71 ?x71) (* (+ c k) ?x70 ?x70 ?x71))))
 (let ((?x86 (+ (- ?x82 (* ?x70 ?x70 ?x71 ?x71 ?x71)) (* 6 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x90 (- (- ?x86 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)) (* 6 (+ c k) ?x70 ?x71 ?x71))))
 (let (($x95 (or (not (= (+ ?x90 (* 6 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x95)))))))))))))))) :qid k!34))
 ))
 (let ((?x1187 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x407 (* ?x317 ?x317 ?x317 ?x69 ?x69 ?x69)))
 (let ((?x314 (+ 6 m)))
 (let ((?x924 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x314)))
 (let ((?x77 (+ c k)))
 (let ((?x1157 (* ?x317 ?x314 ?x314 ?x77)))
 (let ((?x462 (+ (* (- 1) (* ?x317 ?x317 ?x317 ?x314 ?x69 ?x69 ?x69)) (* 6 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x314)) (* 6 (* ?x317 ?x317 ?x317 ?x317 ?x314)) (* 6 (* ?x317 ?x317 ?x314 ?x314 ?x314)) (* (- 6) (* ?x317 ?x314 ?x77)) (* 6 (* ?x317 ?x317 ?x317 ?x314)) ?x1157 (* (- 1) (* ?x317 ?x317 ?x317 ?x314 ?x314)) (* 6 (* ?x317 ?x317 ?x317 ?x317 ?x69 ?x69 ?x69)) (* (- 1) ?x924) (* (- 6) (* ?x317 ?x317 ?x314 ?x77)) (* 6 ?x407))))
 (let (($x198 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x469 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x786 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x1181 (and $x130 (= ?x786 (- 4)) $x469 $x198 (not (= ?x462 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x76 (+ (* (- 1) ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 6 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 6 ?x70 ?x71 ?x71 ?x71 ?x71) (* 6 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x82 (+ (- ?x76 (* 6 ?x77 ?x70 ?x71)) (* 6 ?x70 ?x71 ?x71 ?x71) (* ?x77 ?x70 ?x70 ?x71))))
 (let ((?x86 (+ (- ?x82 (* ?x70 ?x70 ?x71 ?x71 ?x71)) (* 6 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x90 (- (- ?x86 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)) (* 6 ?x77 ?x70 ?x71 ?x71))))
 (let (($x95 (or (not (= (+ ?x90 (* 6 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x96 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x95)))
 (rewrite (= $x96 $x1181)))))))))))))))))))))))))))))))
 ))
 (let ((@x98 (asserted $x97)))
 (let ((@x916 (mp (mp @x98 (quant-intro (proof-bind ?x1187) (= $x97 $x1195)) $x1195) (rewrite (= $x1195 $x1195)) $x1195)))
 (let ((@x1277 (mp (mp @x916 (quant-intro (proof-bind ?x947) (= $x1195 $x782)) $x782) (quant-intro (proof-bind ?x293) (= $x782 $x295)) $x295)))
 (let ((@x956 (mp (mp~ @x1277 (sk (~ $x295 $x881)) $x881) (rewrite (= $x881 $x719)) $x719)))
 (let ((@x911 (and-elim @x956 $x912)))
 (let ((@x766 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x912) $x117)) @x911 $x117)))
 (let (($x118 (>= ?x892 1)))
 (let ((@x910 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x912) $x118)) @x911 $x118)))
 (let (($x120 (<= ?x552 6)))
 (let ((@x955 (and-elim @x956 $x591)))
 (let ((@x958 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x591) $x120)) @x955 $x120)))
 (let (($x121 (>= ?x552 6)))
 (let ((@x1362 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x591) $x121)) @x955 $x121)))
 (let (($x109 (<= ?x923 (- 1))))
 (let ((@x914 (and-elim @x956 $x926)))
 (let ((@x868 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x926) $x109)) @x914 $x109)))
 (let (($x105 (>= ?x923 (- 1))))
 (let ((@x867 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x926) $x105)) @x914 $x105)))
 (let (($x122 (not (<= ?x660 (- 1332)))))
 (let (($x653 (>= ?x660 (- 1332))))
 (let ((@x794 ((_ th-lemma arith) (hypothesis (not $x653)) @x867 @x868 @x1362 @x958 @x910 @x766 @x867 @x868 @x1362 @x958 @x867 @x868 @x1362 @x958 @x910 @x766 false)))
 (let ((@x1366 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x669 $x122 (not $x653))) (and-elim @x956 $x954) (or $x122 (not $x653)))))
 ((_ th-lemma arith) (unit-resolution @x1366 (lemma @x794 $x653) $x122) @x867 @x868 @x1362 @x958 @x910 @x766 @x867 @x868 @x1362 @x958 @x867 @x868 @x1362 @x958 @x910 @x766 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        19
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             377
 :arith-nonlinear-bounds    15
 :arith-nonlinear-horner    16
 :arith-num-rows            8
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 68
 :arith-tableau-max-rows    8
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.80
 :memory                    3.31
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1342354
 :num-checks                1
 :propagations              11
 :rlimit-count              7767
 :time                      0.01
 :total-time                0.02)
