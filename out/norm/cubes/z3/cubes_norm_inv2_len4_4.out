unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x1013 (* (- 1) k!2)))
 (let ((?x776 (* n!0 k!2)))
 (let ((?x746 (+ (* 2 n!0) ?x776 ?x1013 (* (- 3) c!3))))
 (let (($x1180 (<= ?x746 (- 1))))
 (let (($x1025 (= ?x746 (- 1))))
 (let ((?x2226 (+ k!2 c!3)))
 (let ((?x2236 (+ m!1 k!2)))
 (let ((?x1148 (+ 1 n!0)))
 (let ((?x2306 (* 468 k!2)))
 (let ((?x312 (* 468 m!1)))
 (let ((?x2080 (* (- 160) (* k!2 k!2 k!2))))
 (let ((?x1802 (* k!2 k!2)))
 (let ((?x331 (* (- 763) ?x1802)))
 (let ((?x1782 (* (- 42) (* m!1 m!1 m!1))))
 (let ((?x1775 (* (- 37) (* m!1 m!1))))
 (let ((?x1337 (* (- 162) (* c!3 c!3 c!3))))
 (let ((?x1295 (* (- 6) (* m!1 m!1 m!1 m!1))))
 (let ((?x1209 (* 78 (* c!3 c!3))))
 (let ((?x1198 (* 5 (* k!2 k!2 k!2 k!2))))
 (let ((?x912 (+ (* 5 (* ?x1148 ?x1148 ?x1148 ?x2236 ?x2226 ?x2226 ?x2226)) (* 9 (* ?x1148 ?x1148 ?x1148 ?x1148 ?x2226 ?x2226 ?x2226 ?x2226)) (* 18 (* ?x1148 ?x1148 ?x1148 ?x2226 ?x2226 ?x2226 ?x2226)) (* (- 18) (* n!0 m!1 m!1 k!2 c!3)) (* 2 (* m!1 m!1 k!2 c!3 c!3)) (* 9 (* n!0 n!0 m!1 m!1 m!1)) (* ?x1148 (+ 6 m!1) (+ 6 m!1) ?x2236 ?x2236 ?x2236) (* 324 (* n!0 n!0 m!1)) (* 324 (* n!0 n!0 k!2)) (* (- 33) (* n!0 m!1 m!1 m!1)) (* 62 (* n!0 m!1 m!1)) (* 792 (* n!0 m!1)) (* (- 878) (* m!1 k!2)) (* (- 13) (* n!0 m!1 k!2 k!2 k!2)) (* 2 (* m!1 k!2 k!2 k!2 c!3)) (* m!1 k!2 k!2 k!2 k!2) (* 4 (* m!1 m!1 k!2 k!2 c!3)) (* (- 788) (* n!0 m!1 k!2)) (* 2 (* m!1 m!1 k!2 k!2 k!2)) (* 18 (* n!0 n!0 m!1 k!2 c!3)) (* (- 18) (* n!0 m!1 m!1 m!1 c!3)) (* (- 180) (* n!0 m!1 m!1 c!3)) (* (- 29) (* n!0 m!1 m!1 k!2 k!2)) (* 90 (* n!0 n!0 m!1 k!2)) (* 792 ?x776) (* (- 32) (* m!1 m!1 m!1 k!2)) (* (- 9) (* n!0 n!0 k!2 k!2)) (* (- 1) (* n!0 k!2 k!2 k!2 k!2)) (* (- 13) (* n!0 k!2 k!2 k!2)) (* 18 (* n!0 n!0 m!1 m!1 k!2)) (* 9 (* n!0 n!0 k!2 k!2 c!3)) ?x1198 (* (- 126) (* n!0 m!1 k!2 c!3)) ?x1209 (* (- 180) (* n!0 m!1 k!2 k!2)) ?x1295 (* (- 519) (* k!2 k!2 c!3)) ?x1337 (* (- 263) (* n!0 m!1 m!1 k!2)) (* (- 162) (* n!0 k!2 c!3 c!3)) (* 9 (* n!0 n!0 k!2 k!2 k!2)) (* m!1 m!1 m!1 c!3 c!3) (* 54 (* n!0 c!3 c!3)) ?x1775 ?x1782 (* (- 492) (* k!2 c!3)) ?x331 (* (- 196) (* m!1 k!2 c!3)) (* (- 6) (* n!0 m!1 m!1 m!1 m!1)) (* (- 9) (* ?x1148 ?x1148 (+ 6 m!1) (+ 6 m!1) ?x2236 ?x2226)) (* (- 4) (* ?x1148 ?x1148 ?x1148 ?x2226 ?x2226 ?x2226)) (* (- 516) (* k!2 c!3 c!3)) (* (- 9) (* ?x1148 ?x1148 ?x1148 ?x1148 ?x2226 ?x2226 ?x2226)) (* 12 (* k!2 k!2 k!2 c!3)) (* (- 18) (* m!1 m!1 m!1 c!3)) (* 9 (* n!0 m!1 c!3 c!3)) (* m!1 m!1 m!1 k!2 k!2) (* (- 54) (* n!0 c!3 c!3 c!3)) (* (- 540) (* n!0 k!2 c!3)) (* (- 74) (* m!1 k!2 c!3 c!3)) ?x2080 ?x312 ?x2306 (* (- 17) (* m!1 c!3 c!3)) (* 2 (* m!1 m!1 m!1 k!2 c!3)) (* 6 (* k!2 k!2 c!3 c!3)) (* (- 67) (* m!1 k!2 k!2 c!3)) (* (- 24) (* m!1 k!2 k!2 k!2)) (* m!1 m!1 c!3 c!3) (* (- 28) (* m!1 m!1 k!2 k!2)) (* (- 648) (* m!1 c!3)) (* (- 16) (* m!1 m!1 k!2 c!3)) (* (- 648) (* n!0 m!1 c!3)) (* (- 27) (* n!0 m!1 k!2 c!3 c!3)) (* (- 27) (* n!0 m!1 k!2 k!2 c!3)) (* (- 9) (* n!0 m!1 c!3 c!3 c!3)) (* m!1 k!2 k!2 c!3 c!3) (* (- 1) (* ?x1148 ?x1148 ?x1148 ?x2236 ?x2236 ?x2226 ?x2226 ?x2226)) (* (- 224) (* m!1 k!2 k!2)) (* (- 189) (* m!1 m!1 c!3)) (* 18 (* n!0 n!0 m!1 k!2 k!2)) (* 9 (* n!0 n!0 m!1 m!1 c!3)) (* 99 (* n!0 n!0 m!1 m!1)) (* (- 281) (* m!1 m!1 k!2)) (* (- 126) (* n!0 k!2 k!2 c!3)) (* (- 32) (* n!0 m!1 m!1 m!1 k!2)) (* (- 27) (* m!1 c!3 c!3 c!3)) (* (- 796) (* n!0 k!2 k!2)))))
 (let (($x309 (= ?x912 0)))
 (let (($x1550 (not $x309)))
 (let ((?x1591 (+ (* 3 n!0) (* 3 (* n!0 n!0)) ?x1013)))
 (let (($x1589 (= ?x1591 (- 1))))
 (let ((?x190 (+ (* 9 n!0) ?x1802 (* (- 5) k!2) (* (- 9) (* n!0 c!3)) (* (- 18) c!3))))
 (let (($x195 (= ?x190 (- 4))))
 (let ((?x1051 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x1060 (= ?x1051 (- 6))))
 (let (($x310 (and $x1060 $x195 $x1025 $x1589 $x1550)))
 (let ((?x1195 (+ c!3 k!2)))
 (let ((?x1217 (+ k!2 m!1)))
 (let ((?x643 (+ 6 m!1)))
 (let ((?x1304 (+ ?x2306 ?x312 ?x331 (* 792 (* k!2 n!0)) (* (- 13) (* k!2 k!2 k!2 n!0)) (* (- 126) (* c!3 k!2 k!2 n!0)) (* (- 281) (* k!2 m!1 m!1)) (* (- 189) (* c!3 m!1 m!1)) (* (- 224) (* k!2 k!2 m!1)) (* (- 196) (* c!3 k!2 m!1)) (* 18 (* k!2 m!1 m!1 n!0 n!0)) (* 9 (* c!3 m!1 m!1 n!0 n!0)) (* 18 (* k!2 k!2 m!1 n!0 n!0)) (* 18 (* c!3 k!2 m!1 n!0 n!0)) (* 9 (* k!2 k!2 k!2 n!0 n!0)) (* 9 (* c!3 k!2 k!2 n!0 n!0)) (* (- 126) (* c!3 k!2 m!1 n!0)) (* (- 180) (* k!2 k!2 m!1 n!0)) (* (- 180) (* c!3 m!1 m!1 n!0)) (* (- 263) (* k!2 m!1 m!1 n!0)) ?x2080 (* (- 519) (* c!3 k!2 k!2)) (* (- 516) (* c!3 c!3 k!2)) (* 9 (* c!3 c!3 m!1 n!0)) (* (- 162) (* c!3 c!3 k!2 n!0)) (* (- 796) (* k!2 k!2 n!0)) (* (- 540) (* c!3 k!2 n!0)) (* 54 (* c!3 c!3 n!0)) (* (- 54) (* c!3 c!3 c!3 n!0)) (* (- 17) (* c!3 c!3 m!1)) (* (- 492) (* c!3 k!2)) (* (- 9) (* ?x1148 ?x1148 ?x1148 ?x1148 ?x1195 ?x1195 ?x1195)) ?x1209 (* (- 1) (* ?x1148 ?x1148 ?x1148 ?x1217 ?x1217 ?x1195 ?x1195 ?x1195)) (* c!3 c!3 k!2 k!2 m!1) (* 2 (* c!3 k!2 k!2 k!2 m!1)) (* k!2 k!2 k!2 k!2 m!1) (* 2 (* c!3 c!3 k!2 m!1 m!1)) (* 4 (* c!3 k!2 k!2 m!1 m!1)) (* 2 (* k!2 k!2 k!2 m!1 m!1)) (* c!3 c!3 m!1 m!1 m!1) (* 2 (* c!3 k!2 m!1 m!1 m!1)) (* k!2 k!2 m!1 m!1 m!1) (* 6 (* c!3 c!3 k!2 k!2)) (* 12 (* c!3 k!2 k!2 k!2)) ?x1198 (* (- 74) (* c!3 c!3 k!2 m!1)) (* (- 67) (* c!3 k!2 k!2 m!1)) (* (- 24) (* k!2 k!2 k!2 m!1)) (* c!3 c!3 m!1 m!1) (* (- 16) (* c!3 k!2 m!1 m!1)) (* (- 28) (* k!2 k!2 m!1 m!1)) (* (- 648) (* c!3 m!1)) (* (- 648) (* c!3 m!1 n!0)) (* (- 18) (* c!3 m!1 m!1 m!1)) (* (- 9) (* c!3 c!3 c!3 m!1 n!0)) (* (- 27) (* c!3 c!3 k!2 m!1 n!0)) (* (- 27) (* c!3 k!2 k!2 m!1 n!0)) (* (- 13) (* k!2 k!2 k!2 m!1 n!0)) (* 9 (* m!1 m!1 m!1 n!0 n!0)) (* (- 878) (* k!2 m!1)) ?x1775 ?x1782 (* 792 (* m!1 n!0)) (* (- 788) (* k!2 m!1 n!0)) (* 62 (* m!1 m!1 n!0)) (* (- 33) (* m!1 m!1 m!1 n!0)) (* 324 (* k!2 n!0 n!0)) (* 324 (* m!1 n!0 n!0)) (* 90 (* k!2 m!1 n!0 n!0)) (* 99 (* m!1 m!1 n!0 n!0)) (* 5 (* ?x1148 ?x1148 ?x1148 ?x1217 ?x1195 ?x1195 ?x1195)) (* ?x1148 ?x643 ?x643 ?x1217 ?x1217 ?x1217) (* (- 18) (* c!3 k!2 m!1 m!1 n!0)) (* (- 29) (* k!2 k!2 m!1 m!1 n!0)) (* (- 18) (* c!3 m!1 m!1 m!1 n!0)) (* (- 32) (* k!2 m!1 m!1 m!1 n!0)) (* 9 (* ?x1148 ?x1148 ?x1148 ?x1148 ?x1195 ?x1195 ?x1195 ?x1195)) (* (- 9) (* k!2 k!2 n!0 n!0)) (* (- 6) (* m!1 m!1 m!1 m!1 n!0)) (* (- 4) (* ?x1148 ?x1148 ?x1148 ?x1195 ?x1195 ?x1195)) (* (- 27) (* c!3 c!3 c!3 m!1)) ?x1337 (* 18 (* ?x1148 ?x1148 ?x1148 ?x1195 ?x1195 ?x1195 ?x1195)) (* (- 9) (* ?x1148 ?x1148 ?x643 ?x643 ?x1217 ?x1195)) (* (- 1) (* k!2 k!2 k!2 k!2 n!0)) ?x1295 (* (- 32) (* k!2 m!1 m!1 m!1)))))
 (let (($x792 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x2718 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x1802) (* 9 (* c!3 n!0)))))
 (let (($x773 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x2718 4) $x792 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x1304 0)))))
 (let (($x2754 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x2790 (* k m m m)))
 (let ((?x1112 (* (- 32) ?x2790)))
 (let ((?x2747 (* m m m m)))
 (let ((?x1113 (* (- 6) ?x2747)))
 (let ((?x3163 (* (- 1) (* k k k k n))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x702 (+ 6 m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x2615 (* ?x335 ?x335 ?x702 ?x702 ?x70 ?x69)))
 (let ((?x1987 (* (- 9) ?x2615)))
 (let ((?x2341 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2020 (* 18 ?x2341)))
 (let ((?x815 (* (- 162) (* c c c))))
 (let ((?x2193 (* c c c m)))
 (let ((?x814 (* (- 27) ?x2193)))
 (let ((?x2150 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x2017 (* (- 4) ?x2150)))
 (let ((?x3020 (* (- 6) (* m m m m n))))
 (let ((?x3003 (* (- 9) (* k k n n))))
 (let ((?x1951 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2023 (* 9 ?x1951)))
 (let ((?x1642 (* k m m m n)))
 (let ((?x1033 (* (- 32) ?x1642)))
 (let ((?x2989 (* (- 18) (* c m m m n))))
 (let ((?x2988 (* (- 29) (* k k m m n))))
 (let ((?x2986 (* (- 18) (* c k m m n))))
 (let ((?x1631 (* ?x335 ?x702 ?x702 ?x70 ?x70 ?x70)))
 (let ((?x1357 (* ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2192 (* 5 ?x1357)))
 (let ((?x2957 (* 99 (* m m n n))))
 (let ((?x1351 (* k m n n)))
 (let ((?x1036 (* 90 ?x1351)))
 (let ((?x2954 (* 324 (* m n n))))
 (let ((?x2953 (* 324 (* k n n))))
 (let ((?x1325 (* m m m n)))
 (let ((?x1040 (* (- 33) ?x1325)))
 (let ((?x1317 (* m m n)))
 (let ((?x990 (* 62 ?x1317)))
 (let ((?x1313 (* k m n)))
 (let ((?x988 (* (- 788) ?x1313)))
 (let ((?x2947 (* 792 (* m n))))
 (let ((?x1302 (* m m m)))
 (let ((?x984 (* (- 42) ?x1302)))
 (let ((?x1294 (* m m)))
 (let ((?x982 (* (- 37) ?x1294)))
 (let ((?x1290 (* k m)))
 (let ((?x980 (* (- 878) ?x1290)))
 (let ((?x1232 (* 9 (* m m m n n))))
 (let ((?x2935 (* (- 13) (* k k k m n))))
 (let ((?x1107 (* c k k m n)))
 (let ((?x2595 (* (- 27) ?x1107)))
 (let ((?x1103 (* c c k m n)))
 (let ((?x2589 (* (- 27) ?x1103)))
 (let ((?x2928 (* (- 9) (* c c c m n))))
 (let ((?x1454 (* (- 18) (* c m m m))))
 (let ((?x1511 (* (- 648) (* c m n))))
 (let ((?x1507 (* (- 648) (* c m))))
 (let ((?x926 (* c c m m)))
 (let ((?x2894 (* 5 (* k k k k))))
 (let ((?x964 (* 12 (* c k k k))))
 (let ((?x855 (* 6 (* c c k k))))
 (let ((?x848 (* k k m m m)))
 (let ((?x974 (* 2 (* c k m m m))))
 (let ((?x845 (* c c m m m)))
 (let ((?x973 (* 2 (* k k k m m))))
 (let ((?x972 (* 4 (* c k k m m))))
 (let ((?x971 (* 2 (* c c k m m))))
 (let ((?x836 (* k k k k m)))
 (let ((?x970 (* 2 (* c k k k m))))
 (let ((?x833 (* c c k k m)))
 (let ((?x802 (* ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1041 (* (- 1) ?x802)))
 (let ((?x2893 (* 78 (* c c))))
 (let ((?x770 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x1969 (* (- 9) ?x770)))
 (let ((?x768 (* c k)))
 (let ((?x655 (* (- 492) ?x768)))
 (let ((?x760 (* c c m)))
 (let ((?x657 (* (- 17) ?x760)))
 (let ((?x2571 (* (- 54) (* c c c n))))
 (let ((?x2889 (* 54 (* c c n))))
 (let ((?x733 (* c k n)))
 (let ((?x662 (* (- 540) ?x733)))
 (let ((?x728 (* k k n)))
 (let ((?x664 (* (- 796) ?x728)))
 (let ((?x2547 (* (- 162) (* c c k n))))
 (let ((?x671 (* 9 (* c c m n))))
 (let ((?x651 (* (- 516) (* c c k))))
 (let ((?x592 (* c k k)))
 (let ((?x699 (* (- 519) ?x592)))
 (let ((?x587 (* k k k)))
 (let ((?x704 (* (- 160) ?x587)))
 (let ((?x516 (* k m m n)))
 (let ((?x706 (* (- 263) ?x516)))
 (let ((?x512 (* c m m n)))
 (let ((?x709 (* (- 180) ?x512)))
 (let ((?x508 (* k k m n)))
 (let ((?x629 (* (- 180) ?x508)))
 (let ((?x504 (* c k m n)))
 (let ((?x710 (* (- 126) ?x504)))
 (let ((?x451 (* 9 (* c k k n n))))
 (let ((?x449 (* 9 (* k k k n n))))
 (let ((?x2872 (* 18 (* c k m n n))))
 (let ((?x2871 (* 18 (* k k m n n))))
 (let ((?x439 (* 9 (* c m m n n))))
 (let ((?x2870 (* 18 (* k m m n n))))
 (let ((?x400 (* c k m)))
 (let ((?x628 (* (- 196) ?x400)))
 (let ((?x396 (* k k m)))
 (let ((?x625 (* (- 224) ?x396)))
 (let ((?x392 (* c m m)))
 (let ((?x129 (* (- 189) ?x392)))
 (let ((?x388 (* k m m)))
 (let ((?x146 (* (- 281) ?x388)))
 (let ((?x364 (* c k k n)))
 (let ((?x149 (* (- 126) ?x364)))
 (let ((?x359 (* k k k n)))
 (let ((?x154 (* (- 13) ?x359)))
 (let ((?x55 (* k n)))
 (let ((?x2856 (* 792 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x697 (* (- 763) ?x49)))
 (let ((?x2852 (* 468 m)))
 (let ((?x2851 (* 468 k)))
 (let ((?x308 (+ ?x2851 ?x2852 ?x697 ?x2856 ?x154 ?x149 ?x146 ?x129 ?x625 ?x628 ?x2870 ?x439 ?x2871 ?x2872 ?x449 ?x451 ?x710 ?x629 ?x709 ?x706 ?x704 ?x699 ?x651 ?x671 ?x2547 ?x664 ?x662 ?x2889 ?x2571 ?x657 ?x655 ?x1969 ?x2893 ?x1041 ?x833 ?x970 ?x836 ?x971 ?x972 ?x973 ?x845 ?x974 ?x848 ?x855 ?x964 ?x2894 (* (- 74) (* c c k m)) (* (- 67) (* c k k m)) (* (- 24) (* k k k m)) ?x926 (* (- 16) (* c k m m)) (* (- 28) (* k k m m)) ?x1507 ?x1511 ?x1454 ?x2928 ?x2589 ?x2595 ?x2935 ?x1232 ?x980 ?x982 ?x984 ?x2947 ?x988 ?x990 ?x1040 ?x2953 ?x2954 ?x1036 ?x2957 ?x2192 ?x1631 ?x2986 ?x2988 ?x2989 ?x1033 ?x2023 ?x3003 ?x3020 ?x2017 ?x814 ?x815 ?x2020 ?x1987 ?x3163 ?x1113 ?x1112)))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x235 (= (+ ?x40 ?x44 ?x237 ?x238 (* 9 (* c n))) 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 $x235 $x287 $x325 (not (= ?x308 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1315 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x2790 (* k m m m)))
 (let ((?x1112 (* (- 32) ?x2790)))
 (let ((?x2747 (* m m m m)))
 (let ((?x1113 (* (- 6) ?x2747)))
 (let ((?x3163 (* (- 1) (* k k k k n))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x702 (+ 6 m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x2615 (* ?x335 ?x335 ?x702 ?x702 ?x70 ?x69)))
 (let ((?x1987 (* (- 9) ?x2615)))
 (let ((?x2341 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2020 (* 18 ?x2341)))
 (let ((?x815 (* (- 162) (* c c c))))
 (let ((?x2193 (* c c c m)))
 (let ((?x814 (* (- 27) ?x2193)))
 (let ((?x2150 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x2017 (* (- 4) ?x2150)))
 (let ((?x3020 (* (- 6) (* m m m m n))))
 (let ((?x3003 (* (- 9) (* k k n n))))
 (let ((?x1951 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2023 (* 9 ?x1951)))
 (let ((?x1642 (* k m m m n)))
 (let ((?x1033 (* (- 32) ?x1642)))
 (let ((?x2989 (* (- 18) (* c m m m n))))
 (let ((?x2988 (* (- 29) (* k k m m n))))
 (let ((?x2986 (* (- 18) (* c k m m n))))
 (let ((?x1631 (* ?x335 ?x702 ?x702 ?x70 ?x70 ?x70)))
 (let ((?x1357 (* ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2192 (* 5 ?x1357)))
 (let ((?x2957 (* 99 (* m m n n))))
 (let ((?x1351 (* k m n n)))
 (let ((?x1036 (* 90 ?x1351)))
 (let ((?x2954 (* 324 (* m n n))))
 (let ((?x2953 (* 324 (* k n n))))
 (let ((?x1325 (* m m m n)))
 (let ((?x1040 (* (- 33) ?x1325)))
 (let ((?x1317 (* m m n)))
 (let ((?x990 (* 62 ?x1317)))
 (let ((?x1313 (* k m n)))
 (let ((?x988 (* (- 788) ?x1313)))
 (let ((?x2947 (* 792 (* m n))))
 (let ((?x1302 (* m m m)))
 (let ((?x984 (* (- 42) ?x1302)))
 (let ((?x1294 (* m m)))
 (let ((?x982 (* (- 37) ?x1294)))
 (let ((?x1290 (* k m)))
 (let ((?x980 (* (- 878) ?x1290)))
 (let ((?x1232 (* 9 (* m m m n n))))
 (let ((?x2935 (* (- 13) (* k k k m n))))
 (let ((?x1107 (* c k k m n)))
 (let ((?x2595 (* (- 27) ?x1107)))
 (let ((?x1103 (* c c k m n)))
 (let ((?x2589 (* (- 27) ?x1103)))
 (let ((?x2928 (* (- 9) (* c c c m n))))
 (let ((?x1454 (* (- 18) (* c m m m))))
 (let ((?x1511 (* (- 648) (* c m n))))
 (let ((?x1507 (* (- 648) (* c m))))
 (let ((?x2894 (* 5 (* k k k k))))
 (let ((?x848 (* k k m m m)))
 (let ((?x974 (* 2 (* c k m m m))))
 (let ((?x845 (* c c m m m)))
 (let ((?x973 (* 2 (* k k k m m))))
 (let ((?x972 (* 4 (* c k k m m))))
 (let ((?x971 (* 2 (* c c k m m))))
 (let ((?x836 (* k k k k m)))
 (let ((?x970 (* 2 (* c k k k m))))
 (let ((?x833 (* c c k k m)))
 (let ((?x802 (* ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1041 (* (- 1) ?x802)))
 (let ((?x2893 (* 78 (* c c))))
 (let ((?x770 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x1969 (* (- 9) ?x770)))
 (let ((?x768 (* c k)))
 (let ((?x655 (* (- 492) ?x768)))
 (let ((?x760 (* c c m)))
 (let ((?x657 (* (- 17) ?x760)))
 (let ((?x2571 (* (- 54) (* c c c n))))
 (let ((?x2889 (* 54 (* c c n))))
 (let ((?x733 (* c k n)))
 (let ((?x662 (* (- 540) ?x733)))
 (let ((?x728 (* k k n)))
 (let ((?x664 (* (- 796) ?x728)))
 (let ((?x2547 (* (- 162) (* c c k n))))
 (let ((?x671 (* 9 (* c c m n))))
 (let ((?x651 (* (- 516) (* c c k))))
 (let ((?x592 (* c k k)))
 (let ((?x699 (* (- 519) ?x592)))
 (let ((?x587 (* k k k)))
 (let ((?x704 (* (- 160) ?x587)))
 (let ((?x516 (* k m m n)))
 (let ((?x706 (* (- 263) ?x516)))
 (let ((?x512 (* c m m n)))
 (let ((?x709 (* (- 180) ?x512)))
 (let ((?x508 (* k k m n)))
 (let ((?x629 (* (- 180) ?x508)))
 (let ((?x504 (* c k m n)))
 (let ((?x710 (* (- 126) ?x504)))
 (let ((?x451 (* 9 (* c k k n n))))
 (let ((?x449 (* 9 (* k k k n n))))
 (let ((?x2872 (* 18 (* c k m n n))))
 (let ((?x2871 (* 18 (* k k m n n))))
 (let ((?x439 (* 9 (* c m m n n))))
 (let ((?x2870 (* 18 (* k m m n n))))
 (let ((?x400 (* c k m)))
 (let ((?x628 (* (- 196) ?x400)))
 (let ((?x396 (* k k m)))
 (let ((?x625 (* (- 224) ?x396)))
 (let ((?x392 (* c m m)))
 (let ((?x129 (* (- 189) ?x392)))
 (let ((?x388 (* k m m)))
 (let ((?x146 (* (- 281) ?x388)))
 (let ((?x364 (* c k k n)))
 (let ((?x149 (* (- 126) ?x364)))
 (let ((?x359 (* k k k n)))
 (let ((?x154 (* (- 13) ?x359)))
 (let ((?x55 (* k n)))
 (let ((?x2856 (* 792 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x697 (* (- 763) ?x49)))
 (let ((?x2852 (* 468 m)))
 (let ((?x2851 (* 468 k)))
 (let ((?x1114 (+ ?x2851 ?x2852 ?x697 ?x2856 (* 6 (* k m c k)) (* 6 (* m m c k)) (* 6 (* m k k k)) ?x154 ?x149 ?x146 ?x129 ?x625 ?x628 ?x2870 ?x439 ?x2871 ?x2872 ?x449 ?x451 ?x710 ?x629 ?x709 ?x706 ?x704 ?x699 ?x651 ?x671 ?x2547 ?x664 ?x662 ?x2889 ?x2571 ?x657 ?x655 ?x1969 ?x2893 ?x1041 ?x833 ?x970 ?x836 ?x971 ?x972 ?x973 ?x845 ?x974 ?x848 ?x2894 (* 6 (* k m k k)) (* (- 86) (* c c k m)) (* 6 (* m m k k)) (* (- 91) (* c k k m)) (* (- 36) (* k k k m)) (* (- 5) (* c c m m)) (* (- 28) (* c k m m)) (* (- 34) (* k k m m)) ?x1507 ?x1511 ?x1454 (* 6 (* k k c c)) (* 6 (* m k c c)) (* 6 (* k m c c)) ?x2928 (* 6 (* m m c c)) ?x2589 ?x2595 ?x2935 (* 6 (* k k k c)) (* 6 (* m k k c)) (* 6 (* k m k c)) ?x1232 ?x980 ?x982 ?x984 ?x2947 ?x988 ?x990 ?x1040 ?x2953 ?x2954 ?x1036 ?x2957 ?x2192 (* 6 (* m m k c)) (* 6 (* k k c k)) (* 6 (* m k c k)) ?x1631 ?x2986 ?x2988 ?x2989 ?x1033 ?x2023 ?x3003 ?x3020 ?x2017 ?x814 ?x815 ?x2020 ?x1987 ?x3163 ?x1113 ?x1112)))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x235 (= (+ ?x40 ?x44 ?x237 ?x238 (* 9 (* c n))) 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 $x235 $x287 $x325 (not (= ?x1114 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x2752 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x2790 (* k m m m)))
 (let ((?x1112 (* (- 32) ?x2790)))
 (let ((?x2747 (* m m m m)))
 (let ((?x1113 (* (- 6) ?x2747)))
 (let ((?x3163 (* (- 1) (* k k k k n))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x702 (+ 6 m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x2615 (* ?x335 ?x335 ?x702 ?x702 ?x70 ?x69)))
 (let ((?x1987 (* (- 9) ?x2615)))
 (let ((?x2341 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2020 (* 18 ?x2341)))
 (let ((?x815 (* (- 162) (* c c c))))
 (let ((?x2193 (* c c c m)))
 (let ((?x814 (* (- 27) ?x2193)))
 (let ((?x2150 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x2017 (* (- 4) ?x2150)))
 (let ((?x3020 (* (- 6) (* m m m m n))))
 (let ((?x3003 (* (- 9) (* k k n n))))
 (let ((?x1951 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2023 (* 9 ?x1951)))
 (let ((?x1642 (* k m m m n)))
 (let ((?x1033 (* (- 32) ?x1642)))
 (let ((?x2989 (* (- 18) (* c m m m n))))
 (let ((?x2988 (* (- 29) (* k k m m n))))
 (let ((?x2986 (* (- 18) (* c k m m n))))
 (let ((?x1631 (* ?x335 ?x702 ?x702 ?x70 ?x70 ?x70)))
 (let ((?x1357 (* ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2192 (* 5 ?x1357)))
 (let ((?x2957 (* 99 (* m m n n))))
 (let ((?x1351 (* k m n n)))
 (let ((?x1036 (* 90 ?x1351)))
 (let ((?x2954 (* 324 (* m n n))))
 (let ((?x2953 (* 324 (* k n n))))
 (let ((?x1325 (* m m m n)))
 (let ((?x1040 (* (- 33) ?x1325)))
 (let ((?x1317 (* m m n)))
 (let ((?x990 (* 62 ?x1317)))
 (let ((?x1313 (* k m n)))
 (let ((?x988 (* (- 788) ?x1313)))
 (let ((?x2947 (* 792 (* m n))))
 (let ((?x1302 (* m m m)))
 (let ((?x984 (* (- 42) ?x1302)))
 (let ((?x1294 (* m m)))
 (let ((?x982 (* (- 37) ?x1294)))
 (let ((?x1290 (* k m)))
 (let ((?x980 (* (- 878) ?x1290)))
 (let ((?x1232 (* 9 (* m m m n n))))
 (let ((?x2935 (* (- 13) (* k k k m n))))
 (let ((?x1107 (* c k k m n)))
 (let ((?x2595 (* (- 27) ?x1107)))
 (let ((?x1103 (* c c k m n)))
 (let ((?x2589 (* (- 27) ?x1103)))
 (let ((?x2928 (* (- 9) (* c c c m n))))
 (let ((?x1454 (* (- 18) (* c m m m))))
 (let ((?x1511 (* (- 648) (* c m n))))
 (let ((?x1507 (* (- 648) (* c m))))
 (let ((?x926 (* c c m m)))
 (let ((?x2894 (* 5 (* k k k k))))
 (let ((?x964 (* 12 (* c k k k))))
 (let ((?x855 (* 6 (* c c k k))))
 (let ((?x848 (* k k m m m)))
 (let ((?x974 (* 2 (* c k m m m))))
 (let ((?x845 (* c c m m m)))
 (let ((?x973 (* 2 (* k k k m m))))
 (let ((?x972 (* 4 (* c k k m m))))
 (let ((?x971 (* 2 (* c c k m m))))
 (let ((?x836 (* k k k k m)))
 (let ((?x970 (* 2 (* c k k k m))))
 (let ((?x833 (* c c k k m)))
 (let ((?x802 (* ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1041 (* (- 1) ?x802)))
 (let ((?x2893 (* 78 (* c c))))
 (let ((?x770 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x1969 (* (- 9) ?x770)))
 (let ((?x768 (* c k)))
 (let ((?x655 (* (- 492) ?x768)))
 (let ((?x760 (* c c m)))
 (let ((?x657 (* (- 17) ?x760)))
 (let ((?x2571 (* (- 54) (* c c c n))))
 (let ((?x2889 (* 54 (* c c n))))
 (let ((?x733 (* c k n)))
 (let ((?x662 (* (- 540) ?x733)))
 (let ((?x728 (* k k n)))
 (let ((?x664 (* (- 796) ?x728)))
 (let ((?x2547 (* (- 162) (* c c k n))))
 (let ((?x671 (* 9 (* c c m n))))
 (let ((?x651 (* (- 516) (* c c k))))
 (let ((?x592 (* c k k)))
 (let ((?x699 (* (- 519) ?x592)))
 (let ((?x587 (* k k k)))
 (let ((?x704 (* (- 160) ?x587)))
 (let ((?x516 (* k m m n)))
 (let ((?x706 (* (- 263) ?x516)))
 (let ((?x512 (* c m m n)))
 (let ((?x709 (* (- 180) ?x512)))
 (let ((?x508 (* k k m n)))
 (let ((?x629 (* (- 180) ?x508)))
 (let ((?x504 (* c k m n)))
 (let ((?x710 (* (- 126) ?x504)))
 (let ((?x451 (* 9 (* c k k n n))))
 (let ((?x449 (* 9 (* k k k n n))))
 (let ((?x2872 (* 18 (* c k m n n))))
 (let ((?x2871 (* 18 (* k k m n n))))
 (let ((?x439 (* 9 (* c m m n n))))
 (let ((?x2870 (* 18 (* k m m n n))))
 (let ((?x400 (* c k m)))
 (let ((?x628 (* (- 196) ?x400)))
 (let ((?x396 (* k k m)))
 (let ((?x625 (* (- 224) ?x396)))
 (let ((?x392 (* c m m)))
 (let ((?x129 (* (- 189) ?x392)))
 (let ((?x388 (* k m m)))
 (let ((?x146 (* (- 281) ?x388)))
 (let ((?x364 (* c k k n)))
 (let ((?x149 (* (- 126) ?x364)))
 (let ((?x359 (* k k k n)))
 (let ((?x154 (* (- 13) ?x359)))
 (let ((?x55 (* k n)))
 (let ((?x2856 (* 792 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x697 (* (- 763) ?x49)))
 (let ((?x2852 (* 468 m)))
 (let ((?x2851 (* 468 k)))
 (let ((?x308 (+ ?x2851 ?x2852 ?x697 ?x2856 ?x154 ?x149 ?x146 ?x129 ?x625 ?x628 ?x2870 ?x439 ?x2871 ?x2872 ?x449 ?x451 ?x710 ?x629 ?x709 ?x706 ?x704 ?x699 ?x651 ?x671 ?x2547 ?x664 ?x662 ?x2889 ?x2571 ?x657 ?x655 ?x1969 ?x2893 ?x1041 ?x833 ?x970 ?x836 ?x971 ?x972 ?x973 ?x845 ?x974 ?x848 ?x855 ?x964 ?x2894 (* (- 74) (* c c k m)) (* (- 67) (* c k k m)) (* (- 24) (* k k k m)) ?x926 (* (- 16) (* c k m m)) (* (- 28) (* k k m m)) ?x1507 ?x1511 ?x1454 ?x2928 ?x2589 ?x2595 ?x2935 ?x1232 ?x980 ?x982 ?x984 ?x2947 ?x988 ?x990 ?x1040 ?x2953 ?x2954 ?x1036 ?x2957 ?x2192 ?x1631 ?x2986 ?x2988 ?x2989 ?x1033 ?x2023 ?x3003 ?x3020 ?x2017 ?x814 ?x815 ?x2020 ?x1987 ?x3163 ?x1113 ?x1112)))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x235 (= (+ ?x40 ?x44 ?x237 ?x238 (* 9 (* c n))) 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x323 (and $x151 $x235 $x287 $x325 (not (= ?x308 0)))))
 (let ((?x1114 (+ ?x2851 ?x2852 ?x697 ?x2856 (* 6 (* k m c k)) (* 6 (* m m c k)) (* 6 (* m k k k)) ?x154 ?x149 ?x146 ?x129 ?x625 ?x628 ?x2870 ?x439 ?x2871 ?x2872 ?x449 ?x451 ?x710 ?x629 ?x709 ?x706 ?x704 ?x699 ?x651 ?x671 ?x2547 ?x664 ?x662 ?x2889 ?x2571 ?x657 ?x655 ?x1969 ?x2893 ?x1041 ?x833 ?x970 ?x836 ?x971 ?x972 ?x973 ?x845 ?x974 ?x848 ?x2894 (* 6 (* k m k k)) (* (- 86) (* c c k m)) (* 6 (* m m k k)) (* (- 91) (* c k k m)) (* (- 36) (* k k k m)) (* (- 5) ?x926) (* (- 28) (* c k m m)) (* (- 34) (* k k m m)) ?x1507 ?x1511 ?x1454 (* 6 (* k k c c)) (* 6 (* m k c c)) (* 6 (* k m c c)) ?x2928 (* 6 (* m m c c)) ?x2589 ?x2595 ?x2935 (* 6 (* k k k c)) (* 6 (* m k k c)) (* 6 (* k m k c)) ?x1232 ?x980 ?x982 ?x984 ?x2947 ?x988 ?x990 ?x1040 ?x2953 ?x2954 ?x1036 ?x2957 ?x2192 (* 6 (* m m k c)) (* 6 (* k k c k)) (* 6 (* m k c k)) ?x1631 ?x2986 ?x2988 ?x2989 ?x1033 ?x2023 ?x3003 ?x3020 ?x2017 ?x814 ?x815 ?x2020 ?x1987 ?x3163 ?x1113 ?x1112)))
 (let (($x1123 (and $x151 $x235 $x287 $x325 (not (= ?x1114 0)))))
 (rewrite (= $x1123 $x323))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x749 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x2403 (* ?x335 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x2341 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2020 (* 18 ?x2341)))
 (let ((?x1951 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2023 (* 9 ?x1951)))
 (let ((?x2150 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x2017 (* (- 4) ?x2150)))
 (let ((?x702 (+ 6 m)))
 (let ((?x2615 (* ?x335 ?x335 ?x702 ?x702 ?x70 ?x69)))
 (let ((?x1987 (* (- 9) ?x2615)))
 (let ((?x770 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x1969 (* (- 9) ?x770)))
 (let ((?x1631 (* ?x335 ?x702 ?x702 ?x70 ?x70 ?x70)))
 (let ((?x1076 (* ?x702 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x802 (* ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1041 (* (- 1) ?x802)))
 (let ((?x1357 (* ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2192 (* 5 ?x1357)))
 (let ((?x2029 (+ ?x2192 (* 9 (* ?x335 ?x335 ?x70 ?x70 ?x69)) ?x1041 (* 9 (* ?x335 ?x702 ?x69 ?x69)) ?x1076 (* (- 9) (* ?x335 ?x702 ?x69 ?x69 ?x69)) (* (- 5) (* ?x702 ?x70 ?x69 ?x69)) (* 9 (* ?x335 ?x335 ?x702 ?x702 ?x70)) (* 4 (* ?x335 ?x702 ?x702 ?x70)) ?x1631 (* (- 18) (* ?x335 ?x702 ?x702 ?x70 ?x69)) (* 18 (* ?x335 ?x70 ?x70 ?x69)) (* 4 (* ?x702 ?x69 ?x69)) (* (- 9) (* ?x335 ?x335 ?x70 ?x70)) (* (- 5) (* ?x335 ?x702 ?x702 ?x70 ?x70)) ?x1969 (* (- 18) (* ?x702 ?x69 ?x69 ?x69)) (* 5 (* ?x335 ?x70 ?x70 ?x70)) (* (- 4) (* ?x335 ?x70 ?x70)) ?x1987 ?x2017 ?x2023 ?x2020 (* (- 1) ?x2403))))
 (let (($x1341 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x600 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x237 ?x238) 4) $x600 $x1341 (not (= ?x2029 0))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1342 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x2790 (* k m m m)))
 (let ((?x1112 (* (- 32) ?x2790)))
 (let ((?x2747 (* m m m m)))
 (let ((?x1113 (* (- 6) ?x2747)))
 (let ((?x3163 (* (- 1) (* k k k k n))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x702 (+ 6 m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x2615 (* ?x335 ?x335 ?x702 ?x702 ?x70 ?x69)))
 (let ((?x1987 (* (- 9) ?x2615)))
 (let ((?x2341 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2020 (* 18 ?x2341)))
 (let ((?x815 (* (- 162) (* c c c))))
 (let ((?x2193 (* c c c m)))
 (let ((?x814 (* (- 27) ?x2193)))
 (let ((?x2150 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x2017 (* (- 4) ?x2150)))
 (let ((?x3020 (* (- 6) (* m m m m n))))
 (let ((?x3003 (* (- 9) (* k k n n))))
 (let ((?x1951 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2023 (* 9 ?x1951)))
 (let ((?x1642 (* k m m m n)))
 (let ((?x1033 (* (- 32) ?x1642)))
 (let ((?x2989 (* (- 18) (* c m m m n))))
 (let ((?x2988 (* (- 29) (* k k m m n))))
 (let ((?x2986 (* (- 18) (* c k m m n))))
 (let ((?x1631 (* ?x335 ?x702 ?x702 ?x70 ?x70 ?x70)))
 (let ((?x1357 (* ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2192 (* 5 ?x1357)))
 (let ((?x2957 (* 99 (* m m n n))))
 (let ((?x1351 (* k m n n)))
 (let ((?x1036 (* 90 ?x1351)))
 (let ((?x2954 (* 324 (* m n n))))
 (let ((?x2953 (* 324 (* k n n))))
 (let ((?x1325 (* m m m n)))
 (let ((?x1040 (* (- 33) ?x1325)))
 (let ((?x1317 (* m m n)))
 (let ((?x990 (* 62 ?x1317)))
 (let ((?x1313 (* k m n)))
 (let ((?x988 (* (- 788) ?x1313)))
 (let ((?x2947 (* 792 (* m n))))
 (let ((?x1302 (* m m m)))
 (let ((?x984 (* (- 42) ?x1302)))
 (let ((?x1294 (* m m)))
 (let ((?x982 (* (- 37) ?x1294)))
 (let ((?x1290 (* k m)))
 (let ((?x980 (* (- 878) ?x1290)))
 (let ((?x1232 (* 9 (* m m m n n))))
 (let ((?x2935 (* (- 13) (* k k k m n))))
 (let ((?x1107 (* c k k m n)))
 (let ((?x2595 (* (- 27) ?x1107)))
 (let ((?x1103 (* c c k m n)))
 (let ((?x2589 (* (- 27) ?x1103)))
 (let ((?x2928 (* (- 9) (* c c c m n))))
 (let ((?x1454 (* (- 18) (* c m m m))))
 (let ((?x1511 (* (- 648) (* c m n))))
 (let ((?x1507 (* (- 648) (* c m))))
 (let ((?x2894 (* 5 (* k k k k))))
 (let ((?x848 (* k k m m m)))
 (let ((?x974 (* 2 (* c k m m m))))
 (let ((?x845 (* c c m m m)))
 (let ((?x973 (* 2 (* k k k m m))))
 (let ((?x972 (* 4 (* c k k m m))))
 (let ((?x971 (* 2 (* c c k m m))))
 (let ((?x836 (* k k k k m)))
 (let ((?x970 (* 2 (* c k k k m))))
 (let ((?x833 (* c c k k m)))
 (let ((?x802 (* ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1041 (* (- 1) ?x802)))
 (let ((?x2893 (* 78 (* c c))))
 (let ((?x770 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x1969 (* (- 9) ?x770)))
 (let ((?x768 (* c k)))
 (let ((?x655 (* (- 492) ?x768)))
 (let ((?x760 (* c c m)))
 (let ((?x657 (* (- 17) ?x760)))
 (let ((?x2571 (* (- 54) (* c c c n))))
 (let ((?x2889 (* 54 (* c c n))))
 (let ((?x733 (* c k n)))
 (let ((?x662 (* (- 540) ?x733)))
 (let ((?x728 (* k k n)))
 (let ((?x664 (* (- 796) ?x728)))
 (let ((?x2547 (* (- 162) (* c c k n))))
 (let ((?x671 (* 9 (* c c m n))))
 (let ((?x651 (* (- 516) (* c c k))))
 (let ((?x592 (* c k k)))
 (let ((?x699 (* (- 519) ?x592)))
 (let ((?x587 (* k k k)))
 (let ((?x704 (* (- 160) ?x587)))
 (let ((?x516 (* k m m n)))
 (let ((?x706 (* (- 263) ?x516)))
 (let ((?x512 (* c m m n)))
 (let ((?x709 (* (- 180) ?x512)))
 (let ((?x508 (* k k m n)))
 (let ((?x629 (* (- 180) ?x508)))
 (let ((?x504 (* c k m n)))
 (let ((?x710 (* (- 126) ?x504)))
 (let ((?x451 (* 9 (* c k k n n))))
 (let ((?x449 (* 9 (* k k k n n))))
 (let ((?x2872 (* 18 (* c k m n n))))
 (let ((?x2871 (* 18 (* k k m n n))))
 (let ((?x439 (* 9 (* c m m n n))))
 (let ((?x2870 (* 18 (* k m m n n))))
 (let ((?x400 (* c k m)))
 (let ((?x628 (* (- 196) ?x400)))
 (let ((?x396 (* k k m)))
 (let ((?x625 (* (- 224) ?x396)))
 (let ((?x392 (* c m m)))
 (let ((?x129 (* (- 189) ?x392)))
 (let ((?x388 (* k m m)))
 (let ((?x146 (* (- 281) ?x388)))
 (let ((?x364 (* c k k n)))
 (let ((?x149 (* (- 126) ?x364)))
 (let ((?x359 (* k k k n)))
 (let ((?x154 (* (- 13) ?x359)))
 (let ((?x55 (* k n)))
 (let ((?x2856 (* 792 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x697 (* (- 763) ?x49)))
 (let ((?x2852 (* 468 m)))
 (let ((?x2851 (* 468 k)))
 (let ((?x1114 (+ ?x2851 ?x2852 ?x697 ?x2856 (* 6 (* k m c k)) (* 6 (* m m c k)) (* 6 (* m k k k)) ?x154 ?x149 ?x146 ?x129 ?x625 ?x628 ?x2870 ?x439 ?x2871 ?x2872 ?x449 ?x451 ?x710 ?x629 ?x709 ?x706 ?x704 ?x699 ?x651 ?x671 ?x2547 ?x664 ?x662 ?x2889 ?x2571 ?x657 ?x655 ?x1969 ?x2893 ?x1041 ?x833 ?x970 ?x836 ?x971 ?x972 ?x973 ?x845 ?x974 ?x848 ?x2894 (* 6 (* k m k k)) (* (- 86) (* c c k m)) (* 6 (* m m k k)) (* (- 91) (* c k k m)) (* (- 36) (* k k k m)) (* (- 5) (* c c m m)) (* (- 28) (* c k m m)) (* (- 34) (* k k m m)) ?x1507 ?x1511 ?x1454 (* 6 (* k k c c)) (* 6 (* m k c c)) (* 6 (* k m c c)) ?x2928 (* 6 (* m m c c)) ?x2589 ?x2595 ?x2935 (* 6 (* k k k c)) (* 6 (* m k k c)) (* 6 (* k m k c)) ?x1232 ?x980 ?x982 ?x984 ?x2947 ?x988 ?x990 ?x1040 ?x2953 ?x2954 ?x1036 ?x2957 ?x2192 (* 6 (* m m k c)) (* 6 (* k k c k)) (* 6 (* m k c k)) ?x1631 ?x2986 ?x2988 ?x2989 ?x1033 ?x2023 ?x3003 ?x3020 ?x2017 ?x814 ?x815 ?x2020 ?x1987 ?x3163 ?x1113 ?x1112)))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x235 (= (+ ?x40 ?x44 ?x237 ?x238 (* 9 (* c n))) 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x1123 (and $x151 $x235 $x287 $x325 (not (= ?x1114 0)))))
 (let ((?x1076 (* ?x702 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2029 (+ ?x2192 (* 9 (* ?x335 ?x335 ?x70 ?x70 ?x69)) ?x1041 (* 9 (* ?x335 ?x702 ?x69 ?x69)) ?x1076 (* (- 9) (* ?x335 ?x702 ?x69 ?x69 ?x69)) (* (- 5) (* ?x702 ?x70 ?x69 ?x69)) (* 9 (* ?x335 ?x335 ?x702 ?x702 ?x70)) (* 4 (* ?x335 ?x702 ?x702 ?x70)) ?x1631 (* (- 18) (* ?x335 ?x702 ?x702 ?x70 ?x69)) (* 18 (* ?x335 ?x70 ?x70 ?x69)) (* 4 (* ?x702 ?x69 ?x69)) (* (- 9) (* ?x335 ?x335 ?x70 ?x70)) (* (- 5) (* ?x335 ?x702 ?x702 ?x70 ?x70)) ?x1969 (* (- 18) (* ?x702 ?x69 ?x69 ?x69)) (* 5 (* ?x335 ?x70 ?x70 ?x70)) (* (- 4) (* ?x335 ?x70 ?x70)) ?x1987 ?x2017 ?x2023 ?x2020 (* (- 1) (* ?x335 ?x70 ?x70 ?x70 ?x70)))))
 (let (($x1341 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x600 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x738 (and $x151 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x237 ?x238) 4) $x600 $x1341 (not (= ?x2029 0)))))
 (rewrite (= $x738 $x1123))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1349 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x2403 (* ?x335 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x2341 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x802 (* ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2419 (+ (* (- 5) (* ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)) (* (- 9) (* ?x335 ?x335 ?x70 ?x70 ?x69)) ?x802 (* (- 9) (* ?x335 (+ 6 m) ?x69 ?x69)) (* (- 1) (* (+ 6 m) ?x70 ?x70 ?x69 ?x69)) (* 9 (* ?x335 (+ 6 m) ?x69 ?x69 ?x69)) (* 5 (* (+ 6 m) ?x70 ?x69 ?x69)) (* (- 9) (* ?x335 ?x335 (+ 6 m) (+ 6 m) ?x70)) (* (- 4) (* ?x335 (+ 6 m) (+ 6 m) ?x70)) (* (- 1) (* ?x335 (+ 6 m) (+ 6 m) ?x70 ?x70 ?x70)) (* 18 (* ?x335 (+ 6 m) (+ 6 m) ?x70 ?x69)) (* (- 18) (* ?x335 ?x70 ?x70 ?x69)) (* (- 4) (* (+ 6 m) ?x69 ?x69)) (* 9 (* ?x335 ?x335 ?x70 ?x70)) (* 5 (* ?x335 (+ 6 m) (+ 6 m) ?x70 ?x70)) (* 9 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)) (* 18 (* (+ 6 m) ?x69 ?x69 ?x69)) (* (- 5) (* ?x335 ?x70 ?x70 ?x70)) (* 4 (* ?x335 ?x70 ?x70)) (* 9 (* ?x335 ?x335 (+ 6 m) (+ 6 m) ?x70 ?x69)) (* 4 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)) (* (- 9) (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)) (* (- 18) ?x2341) ?x2403)))
 (let (($x1341 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1303 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1257 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 (= ?x1257 (- 4)) $x1303 $x1341 (not (= ?x2419 0)))))))))))))))) :qid k!34))
 ))
 (let ((?x750 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x2403 (* ?x335 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x2341 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2020 (* 18 ?x2341)))
 (let ((?x1951 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x2023 (* 9 ?x1951)))
 (let ((?x2150 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x2017 (* (- 4) ?x2150)))
 (let ((?x702 (+ 6 m)))
 (let ((?x2615 (* ?x335 ?x335 ?x702 ?x702 ?x70 ?x69)))
 (let ((?x1987 (* (- 9) ?x2615)))
 (let ((?x770 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x1969 (* (- 9) ?x770)))
 (let ((?x1631 (* ?x335 ?x702 ?x702 ?x70 ?x70 ?x70)))
 (let ((?x1076 (* ?x702 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x802 (* ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1041 (* (- 1) ?x802)))
 (let ((?x1357 (* ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2192 (* 5 ?x1357)))
 (let ((?x2029 (+ ?x2192 (* 9 (* ?x335 ?x335 ?x70 ?x70 ?x69)) ?x1041 (* 9 (* ?x335 ?x702 ?x69 ?x69)) ?x1076 (* (- 9) (* ?x335 ?x702 ?x69 ?x69 ?x69)) (* (- 5) (* ?x702 ?x70 ?x69 ?x69)) (* 9 (* ?x335 ?x335 ?x702 ?x702 ?x70)) (* 4 (* ?x335 ?x702 ?x702 ?x70)) ?x1631 (* (- 18) (* ?x335 ?x702 ?x702 ?x70 ?x69)) (* 18 (* ?x335 ?x70 ?x70 ?x69)) (* 4 (* ?x702 ?x69 ?x69)) (* (- 9) (* ?x335 ?x335 ?x70 ?x70)) (* (- 5) (* ?x335 ?x702 ?x702 ?x70 ?x70)) ?x1969 (* (- 18) (* ?x702 ?x69 ?x69 ?x69)) (* 5 (* ?x335 ?x70 ?x70 ?x70)) (* (- 4) (* ?x335 ?x70 ?x70)) ?x1987 ?x2017 ?x2023 ?x2020 (* (- 1) ?x2403))))
 (let (($x1341 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x600 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x738 (and $x151 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x237 ?x238) 4) $x600 $x1341 (not (= ?x2029 0)))))
 (let ((?x2419 (+ (* (- 5) ?x1357) (* (- 9) (* ?x335 ?x335 ?x70 ?x70 ?x69)) ?x802 (* (- 9) (* ?x335 ?x702 ?x69 ?x69)) (* (- 1) ?x1076) (* 9 (* ?x335 ?x702 ?x69 ?x69 ?x69)) (* 5 (* ?x702 ?x70 ?x69 ?x69)) (* (- 9) (* ?x335 ?x335 ?x702 ?x702 ?x70)) (* (- 4) (* ?x335 ?x702 ?x702 ?x70)) (* (- 1) ?x1631) (* 18 (* ?x335 ?x702 ?x702 ?x70 ?x69)) (* (- 18) (* ?x335 ?x70 ?x70 ?x69)) (* (- 4) (* ?x702 ?x69 ?x69)) (* 9 (* ?x335 ?x335 ?x70 ?x70)) (* 5 (* ?x335 ?x702 ?x702 ?x70 ?x70)) (* 9 ?x770) (* 18 (* ?x702 ?x69 ?x69 ?x69)) (* (- 5) (* ?x335 ?x70 ?x70 ?x70)) (* 4 (* ?x335 ?x70 ?x70)) (* 9 ?x2615) (* 4 ?x2150) (* (- 9) ?x1951) (* (- 18) ?x2341) ?x2403)))
 (let (($x1303 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1257 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1362 (and $x151 (= ?x1257 (- 4)) $x1303 $x1341 (not (= ?x2419 0)))))
 (rewrite (= $x1362 $x738)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x118 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x74 (- (* (- 5) ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 9 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x80 (- (+ ?x74 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71)) (* 9 ?x69 ?x69 (+ m 6) ?x71))))
 (let ((?x84 (+ (- ?x80 (* ?x69 ?x69 ?x70 ?x70 (+ m 6))) (* 9 ?x69 ?x69 ?x69 (+ m 6) ?x71) (* 5 ?x69 ?x69 ?x70 (+ m 6)))))
 (let ((?x89 (- (- ?x84 (* 9 ?x70 (+ m 6) (+ m 6) ?x71 ?x71)) (* 4 ?x70 (+ m 6) (+ m 6) ?x71))))
 (let ((?x92 (+ (- ?x89 (* ?x70 ?x70 ?x70 (+ m 6) (+ m 6) ?x71)) (* 18 ?x69 ?x70 (+ m 6) (+ m 6) ?x71))))
 (let ((?x96 (- (- ?x92 (* 18 ?x69 ?x70 ?x70 ?x71)) (* 4 ?x69 ?x69 (+ m 6)))))
 (let ((?x101 (+ ?x96 (* 9 ?x70 ?x70 ?x71 ?x71) (* 5 ?x70 ?x70 (+ m 6) (+ m 6) ?x71) (* 9 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71) (* 18 ?x69 ?x69 ?x69 (+ m 6)))))
 (let ((?x107 (+ (- ?x101 (* 5 ?x70 ?x70 ?x70 ?x71)) (* 4 ?x70 ?x70 ?x71) (* 9 ?x69 ?x70 (+ m 6) (+ m 6) ?x71 ?x71) (* 4 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71))))
 (let ((?x111 (- (- ?x107 (* 9 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)) (* 18 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (+ ?x111 (* ?x70 ?x70 ?x70 ?x70 ?x71)) 0))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1354 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x2403 (* ?x335 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x2341 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x802 (* ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2419 (+ (* (- 5) (* ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)) (* (- 9) (* ?x335 ?x335 ?x70 ?x70 ?x69)) ?x802 (* (- 9) (* ?x335 (+ 6 m) ?x69 ?x69)) (* (- 1) (* (+ 6 m) ?x70 ?x70 ?x69 ?x69)) (* 9 (* ?x335 (+ 6 m) ?x69 ?x69 ?x69)) (* 5 (* (+ 6 m) ?x70 ?x69 ?x69)) (* (- 9) (* ?x335 ?x335 (+ 6 m) (+ 6 m) ?x70)) (* (- 4) (* ?x335 (+ 6 m) (+ 6 m) ?x70)) (* (- 1) (* ?x335 (+ 6 m) (+ 6 m) ?x70 ?x70 ?x70)) (* 18 (* ?x335 (+ 6 m) (+ 6 m) ?x70 ?x69)) (* (- 18) (* ?x335 ?x70 ?x70 ?x69)) (* (- 4) (* (+ 6 m) ?x69 ?x69)) (* 9 (* ?x335 ?x335 ?x70 ?x70)) (* 5 (* ?x335 (+ 6 m) (+ 6 m) ?x70 ?x70)) (* 9 (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)) (* 18 (* (+ 6 m) ?x69 ?x69 ?x69)) (* (- 5) (* ?x335 ?x70 ?x70 ?x70)) (* 4 (* ?x335 ?x70 ?x70)) (* 9 (* ?x335 ?x335 (+ 6 m) (+ 6 m) ?x70 ?x69)) (* 4 (* ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)) (* (- 9) (* ?x335 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)) (* (- 18) ?x2341) ?x2403)))
 (let (($x1341 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1303 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1257 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x1362 (and $x151 (= ?x1257 (- 4)) $x1303 $x1341 (not (= ?x2419 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x74 (- (* (- 5) ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 9 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x80 (- (+ ?x74 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71)) (* 9 ?x69 ?x69 (+ m 6) ?x71))))
 (let ((?x84 (+ (- ?x80 (* ?x69 ?x69 ?x70 ?x70 (+ m 6))) (* 9 ?x69 ?x69 ?x69 (+ m 6) ?x71) (* 5 ?x69 ?x69 ?x70 (+ m 6)))))
 (let ((?x89 (- (- ?x84 (* 9 ?x70 (+ m 6) (+ m 6) ?x71 ?x71)) (* 4 ?x70 (+ m 6) (+ m 6) ?x71))))
 (let ((?x92 (+ (- ?x89 (* ?x70 ?x70 ?x70 (+ m 6) (+ m 6) ?x71)) (* 18 ?x69 ?x70 (+ m 6) (+ m 6) ?x71))))
 (let ((?x96 (- (- ?x92 (* 18 ?x69 ?x70 ?x70 ?x71)) (* 4 ?x69 ?x69 (+ m 6)))))
 (let ((?x101 (+ ?x96 (* 9 ?x70 ?x70 ?x71 ?x71) (* 5 ?x70 ?x70 (+ m 6) (+ m 6) ?x71) (* 9 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71) (* 18 ?x69 ?x69 ?x69 (+ m 6)))))
 (let ((?x107 (+ (- ?x101 (* 5 ?x70 ?x70 ?x70 ?x71)) (* 4 ?x70 ?x70 ?x71) (* 9 ?x69 ?x70 (+ m 6) (+ m 6) ?x71 ?x71) (* 4 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71))))
 (let ((?x111 (- (- ?x107 (* 9 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)) (* 18 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x117 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (+ ?x111 (* ?x70 ?x70 ?x70 ?x70 ?x71)) 0))))))
 (rewrite (= $x117 $x1362)))))))))))))))))))))))))))))))))
 ))
 (let ((@x119 (asserted $x118)))
 (let ((@x1279 (mp (mp @x119 (quant-intro (proof-bind ?x1354) (= $x118 $x1349)) $x1349) (rewrite (= $x1349 $x1349)) $x1349)))
 (let ((@x2786 (mp (mp @x1279 (quant-intro (proof-bind ?x750) (= $x1349 $x749)) $x749) (quant-intro (proof-bind ?x1342) (= $x749 $x1315)) $x1315)))
 (let ((@x275 (mp~ (mp @x2786 (quant-intro (proof-bind ?x2752) (= $x1315 $x2754)) $x2754) (sk (~ $x2754 $x773)) $x773)))
 (let ((@x1012 (mp @x275 (rewrite (= $x773 $x310)) $x310)))
 (let ((@x1221 (and-elim @x1012 $x1025)))
 (let ((@x613 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1025) $x1180)) @x1221 $x1180)))
 (let (($x1271 (>= ?x746 (- 1))))
 (let ((@x1537 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1025) $x1271)) @x1221 $x1271)))
 (let (($x2296 (<= ?x1051 (- 6))))
 (let ((@x2299 (and-elim @x1012 $x1060)))
 (let ((@x720 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1060) $x2296)) @x2299 $x2296)))
 (let (($x1923 (>= ?x1051 (- 6))))
 (let ((@x861 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1060) $x1923)) @x2299 $x1923)))
 (let (($x2389 (<= ?x190 (- 4))))
 (let ((@x1223 (and-elim @x1012 $x195)))
 (let ((@x581 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x195) $x2389)) @x1223 $x2389)))
 (let (($x1190 (>= ?x190 (- 4))))
 (let ((@x1284 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x195) $x1190)) @x1223 $x1190)))
 (let (($x1898 (<= ?x1591 (- 1))))
 (let ((@x1212 (and-elim @x1012 $x1589)))
 (let ((@x896 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1589) $x1898)) @x1212 $x1898)))
 (let (($x181 (>= ?x1591 (- 1))))
 (let ((@x923 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1589) $x181)) @x1212 $x181)))
 (let (($x872 (not (<= ?x912 0))))
 (let (($x2614 (>= ?x912 0)))
 (let ((@x925 ((_ th-lemma arith) (hypothesis (not $x2614)) @x923 @x896 @x861 @x720 @x923 @x896 @x1537 @x613 @x861 @x720 @x923 @x896 @x923 @x896 @x1537 @x613 @x1284 @x581 @x861 @x720 @x923 @x896 @x923 @x896 @x1537 @x613 @x1284 @x581 @x861 @x720 @x1537 @x613 false)))
 (let ((@x2131 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x309 $x872 (not $x2614))) (and-elim @x1012 $x1550) (or $x872 (not $x2614)))))
 ((_ th-lemma arith) (unit-resolution @x2131 (lemma @x925 $x2614) $x872) @x923 @x896 @x861 @x720 @x861 @x720 @x923 @x896 @x923 @x896 @x1537 @x613 @x923 @x896 @x1537 @x613 @x923 @x896 @x1537 @x613 @x1284 @x581 @x861 @x720 @x923 @x896 @x1284 @x581 @x861 @x720 @x1537 @x613 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        31
 :arith-assert-upper        11
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           7
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             742
 :arith-nonlinear-bounds    24
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             3
 :arith-patches_succ        1
 :arith-pivots              9
 :arith-row-summations      16
 :arith-tableau-max-columns 157
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                4.20
 :memory                    3.51
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                2048682
 :num-checks                1
 :propagations              10
 :rlimit-count              23316
 :time                      0.02
 :total-time                0.03)
