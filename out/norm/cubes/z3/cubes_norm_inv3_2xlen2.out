unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(proof
(let ((?x118 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x217 (<= ?x118 (- 6))))
 (let (($x687 (= ?x118 (- 6))))
 (let ((?x431 (+ k!2 c!3)))
 (let ((?x391 (+ k!2 m!1)))
 (let ((?x124 (+ 6 m!1)))
 (let ((?x247 (+ 1 n!0)))
 (let ((?x738 (* ?x247 ?x247 ?x247 ?x124 ?x124 ?x391 ?x391 ?x391 ?x391 ?x431 ?x431 ?x431 ?x431)))
 (let ((?x534 (* 3 (* ?x247 ?x124 ?x391 ?x391 ?x391 ?x431 ?x431 ?x431 ?x431 ?x431 ?x431))))
 (let ((?x122 (* (- 2) (* ?x247 ?x247 ?x124 ?x391 ?x391 ?x391 ?x431 ?x431 ?x431 ?x431 ?x431))))
 (let ((?x496 (* ?x247 ?x247 ?x247 ?x247 ?x124 ?x124 ?x391 ?x391 ?x391 ?x391 ?x431 ?x431 ?x431)))
 (let ((?x219 (* ?x247 ?x247 ?x247 ?x247 ?x124 ?x124 ?x391 ?x391 ?x391 ?x391 ?x391 ?x431 ?x431 ?x431)))
 (let ((?x209 (* ?x247 ?x247 ?x247 ?x124 ?x124 ?x391 ?x391 ?x391 ?x391 ?x391 ?x431 ?x431 ?x431)))
 (let ((?x228 (* (- 1) (* ?x247 ?x247 ?x124 ?x391 ?x391 ?x391 ?x391 ?x431 ?x431 ?x431 ?x431 ?x431))))
 (let ((?x616 (* (- 1) (* ?x247 ?x247 ?x247 ?x124 ?x124 ?x391 ?x391 ?x391 ?x391 ?x431 ?x431 ?x431))))
 (let ((?x511 (+ (* ?x247 ?x247 ?x247 ?x247 ?x124 ?x124 ?x124 ?x391 ?x391 ?x431 ?x431) (* ?x247 ?x247 ?x124 ?x124 ?x391 ?x431 ?x431 ?x431 ?x431) ?x616 (* (- 1) (* ?x247 ?x124 ?x391 ?x391 ?x391 ?x431 ?x431 ?x431 ?x431 ?x431)) (* ?x247 ?x124 ?x391 ?x391 ?x391 ?x391 ?x431 ?x431 ?x431 ?x431 ?x431) ?x228 ?x209 (* (- 1) ?x219) (* ?x247 ?x247 ?x247 ?x124 ?x124 ?x124 ?x391 ?x431 ?x431) (* (- 1) (* ?x247 ?x124 ?x124 ?x391 ?x431 ?x431 ?x431 ?x431)) (* (- 2) ?x496) ?x122 ?x534 (* ?x247 ?x124 ?x124 ?x431 ?x431 ?x431 ?x431) (* (- 3) (* ?x247 ?x124 ?x124 ?x431 ?x431 ?x431 ?x431 ?x431)) (* (- 3) (* ?x247 ?x247 ?x247 ?x124 ?x124 ?x124 ?x391 ?x431 ?x431 ?x431)) (* (- 1) (* ?x247 ?x247 ?x247 ?x124 ?x124 ?x124 ?x391 ?x391 ?x431 ?x431)) (* 2 (* ?x247 ?x247 ?x124 ?x124 ?x431 ?x431 ?x431 ?x431)) (* 3 ?x738) (* 2 (* ?x247 ?x247 ?x247 ?x247 ?x124 ?x124 ?x124 ?x391 ?x431 ?x431)))))
 (let (($x200 (= ?x511 0)))
 (let (($x267 (not $x200)))
 (let ((?x321 (* (- 3) n!0)))
 (let ((?x254 (* (- 3) (* n!0 n!0))))
 (let ((?x598 (+ k!2 ?x254 ?x321)))
 (let (($x392 (= ?x598 1)))
 (let ((?x164 (* k!2 n!0)))
 (let ((?x188 (+ ?x164 (* (- 1) k!2) (* 2 n!0) (* (- 3) c!3))))
 (let (($x658 (= ?x188 (- 1))))
 (let ((?x154 (* (- 1) (* k!2 k!2))))
 (let ((?x591 (* 18 c!3)))
 (let ((?x680 (* (- 9) n!0)))
 (let ((?x739 (* 5 k!2)))
 (let ((?x750 (+ (* 9 (* n!0 c!3)) ?x739 ?x680 ?x591 ?x154)))
 (let (($x185 (= ?x750 4)))
 (let (($x550 (and $x687 $x185 $x658 $x392 $x267)))
 (let ((?x253 (+ c!3 k!2)))
 (let ((?x446 (* (- 1) (* ?x247 ?x247 ?x247 ?x124 ?x124 ?x391 ?x391 ?x391 ?x391 ?x253 ?x253 ?x253))))
 (let ((?x449 (* (- 2) (* ?x247 ?x247 ?x124 ?x391 ?x391 ?x391 ?x253 ?x253 ?x253 ?x253 ?x253))))
 (let ((?x190 (* ?x247 ?x247 ?x247 ?x247 ?x124 ?x124 ?x391 ?x391 ?x391 ?x391 ?x253 ?x253 ?x253)))
 (let ((?x682 (* ?x247 ?x247 ?x247 ?x247 ?x124 ?x124 ?x391 ?x391 ?x391 ?x391 ?x391 ?x253 ?x253 ?x253)))
 (let ((?x764 (* ?x247 ?x247 ?x247 ?x124 ?x124 ?x391 ?x391 ?x391 ?x391 ?x391 ?x253 ?x253 ?x253)))
 (let ((?x403 (* 3 (* ?x247 ?x124 ?x391 ?x391 ?x391 ?x253 ?x253 ?x253 ?x253 ?x253 ?x253))))
 (let ((?x276 (* (- 1) (* ?x247 ?x247 ?x124 ?x391 ?x391 ?x391 ?x391 ?x253 ?x253 ?x253 ?x253 ?x253))))
 (let ((?x136 (* ?x247 ?x247 ?x247 ?x124 ?x124 ?x391 ?x391 ?x391 ?x391 ?x253 ?x253 ?x253 ?x253)))
 (let ((?x338 (+ (* ?x247 ?x124 ?x124 ?x253 ?x253 ?x253 ?x253) (* (- 1) (* ?x247 ?x247 ?x247 ?x124 ?x124 ?x124 ?x391 ?x391 ?x253 ?x253)) (* 3 ?x136) ?x276 (* ?x247 ?x247 ?x247 ?x247 ?x124 ?x124 ?x124 ?x391 ?x391 ?x253 ?x253) (* (- 1) (* ?x247 ?x124 ?x391 ?x391 ?x391 ?x253 ?x253 ?x253 ?x253 ?x253)) (* ?x247 ?x124 ?x391 ?x391 ?x391 ?x391 ?x253 ?x253 ?x253 ?x253 ?x253) (* ?x247 ?x247 ?x247 ?x124 ?x124 ?x124 ?x391 ?x253 ?x253) (* ?x247 ?x247 ?x124 ?x124 ?x391 ?x253 ?x253 ?x253 ?x253) ?x403 (* 2 (* ?x247 ?x247 ?x247 ?x247 ?x124 ?x124 ?x124 ?x391 ?x253 ?x253)) (* 2 (* ?x247 ?x247 ?x124 ?x124 ?x253 ?x253 ?x253 ?x253)) ?x764 (* (- 1) ?x682) (* (- 2) ?x190) (* (- 3) (* ?x247 ?x124 ?x124 ?x253 ?x253 ?x253 ?x253 ?x253)) ?x449 ?x446 (* (- 1) (* ?x247 ?x124 ?x124 ?x391 ?x253 ?x253 ?x253 ?x253)) (* (- 3) (* ?x247 ?x247 ?x247 ?x124 ?x124 ?x124 ?x391 ?x253 ?x253 ?x253)))))
 (let (($x756 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x591 ?x739 ?x680 ?x154 (* 9 (* c!3 n!0))) 4) (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x164)) 1) (= (+ k!2 ?x321 ?x254) 1) (not (= ?x338 0)))))
 (let (($x125 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x328 (+ 1 n)))
 (let ((?x450 (* (- 3) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x601 (* (- 1) (* ?x328 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x690 (* (- 1) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x644 (* (- 2) (* ?x328 ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x582 (* (- 3) (* ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x588 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x755 (* (- 2) ?x588)))
 (let ((?x566 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x536 (* (- 1) ?x566)))
 (let ((?x552 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x490 (* 2 (* ?x328 ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x482 (* 2 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68))))
 (let ((?x474 (* 3 (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x460 (* ?x328 ?x328 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x365 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68)))
 (let ((?x351 (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x437 (* (- 1) (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x287 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x123 (* (- 1) (* ?x328 ?x328 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x193 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x194 (* 3 ?x193)))
 (let ((?x171 (* (- 1) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x141 (* ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x261 (+ ?x141 ?x171 ?x194 ?x123 ?x287 ?x437 ?x351 ?x365 ?x460 ?x474 ?x482 ?x490 ?x552 ?x536 ?x755 ?x582 ?x644 ?x690 ?x601 ?x450)))
 (let (($x317 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x279 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x230 (* (- 1) ?x49)))
 (let ((?x229 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x227 (= (+ ?x40 ?x44 ?x229 ?x230 (* 9 (* c n))) 4)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (and $x143 $x227 $x279 $x317 (not (= ?x261 0)))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x334 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x328 (+ 1 n)))
 (let ((?x437 (* (- 1) (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x450 (* (- 3) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x365 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68)))
 (let ((?x460 (* ?x328 ?x328 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x351 (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x474 (* 3 (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x482 (* 2 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68))))
 (let ((?x490 (* 2 (* ?x328 ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x644 (* (- 2) (* ?x328 ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x601 (* (- 1) (* ?x328 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x588 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x755 (* (- 2) ?x588)))
 (let ((?x690 (* (- 1) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x566 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x536 (* (- 1) ?x566)))
 (let ((?x552 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x582 (* (- 3) (* ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x141 (* ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x123 (* (- 1) (* ?x328 ?x328 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x193 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x194 (* 3 ?x193)))
 (let ((?x171 (* (- 1) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x287 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x695 (+ ?x287 ?x171 ?x194 ?x123 ?x141 ?x582 ?x552 ?x536 ?x690 ?x755 ?x601 ?x644 ?x490 ?x482 ?x474 ?x351 ?x460 ?x365 ?x450 ?x437)))
 (let (($x285 (not (= ?x695 0))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x372 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x230 (* (- 1) ?x49)))
 (let ((?x229 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (and $x143 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x229 ?x230) 4) $x372 $x271 $x285)))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x121 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x328 (+ 1 n)))
 (let ((?x450 (* (- 3) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x601 (* (- 1) (* ?x328 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x690 (* (- 1) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x644 (* (- 2) (* ?x328 ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x582 (* (- 3) (* ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x588 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x755 (* (- 2) ?x588)))
 (let ((?x566 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x536 (* (- 1) ?x566)))
 (let ((?x552 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x490 (* 2 (* ?x328 ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x482 (* 2 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68))))
 (let ((?x474 (* 3 (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x460 (* ?x328 ?x328 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x365 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68)))
 (let ((?x351 (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x437 (* (- 1) (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x287 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x123 (* (- 1) (* ?x328 ?x328 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x193 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x194 (* 3 ?x193)))
 (let ((?x171 (* (- 1) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x141 (* ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x261 (+ ?x141 ?x171 ?x194 ?x123 ?x287 ?x437 ?x351 ?x365 ?x460 ?x474 ?x482 ?x490 ?x552 ?x536 ?x755 ?x582 ?x644 ?x690 ?x601 ?x450)))
 (let (($x317 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x279 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x230 (* (- 1) ?x49)))
 (let ((?x229 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x227 (= (+ ?x40 ?x44 ?x229 ?x230 (* 9 (* c n))) 4)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x666 (and $x143 $x227 $x279 $x317 (not (= ?x261 0)))))
 (let ((?x695 (+ ?x287 ?x171 ?x194 ?x123 ?x141 ?x582 ?x552 ?x536 ?x690 ?x755 ?x601 ?x644 ?x490 ?x482 ?x474 ?x351 ?x460 ?x365 ?x450 ?x437)))
 (let (($x285 (not (= ?x695 0))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x372 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x697 (and $x143 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x229 ?x230) 4) $x372 $x271 $x285)))
 (rewrite (= $x697 $x666))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x286 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x328 (+ 1 n)))
 (let ((?x437 (* (- 1) (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x450 (* (- 3) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x365 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68)))
 (let ((?x460 (* ?x328 ?x328 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x351 (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x474 (* 3 (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x482 (* 2 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68))))
 (let ((?x490 (* 2 (* ?x328 ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x644 (* (- 2) (* ?x328 ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x601 (* (- 1) (* ?x328 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x588 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x755 (* (- 2) ?x588)))
 (let ((?x690 (* (- 1) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x566 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x536 (* (- 1) ?x566)))
 (let ((?x552 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x582 (* (- 3) (* ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x141 (* ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x123 (* (- 1) (* ?x328 ?x328 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x193 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x194 (* 3 ?x193)))
 (let ((?x171 (* (- 1) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x287 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x695 (+ ?x287 ?x171 ?x194 ?x123 ?x141 ?x582 ?x552 ?x536 ?x690 ?x755 ?x601 ?x644 ?x490 ?x482 ?x474 ?x351 ?x460 ?x365 ?x450 ?x437)))
 (let (($x285 (not (= ?x695 0))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x310 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x735 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (and $x143 (= ?x735 (- 4)) $x310 $x271 $x285)))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x698 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x328 (+ 1 n)))
 (let ((?x437 (* (- 1) (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x450 (* (- 3) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x365 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68)))
 (let ((?x460 (* ?x328 ?x328 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x351 (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x474 (* 3 (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x482 (* 2 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68))))
 (let ((?x490 (* 2 (* ?x328 ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x644 (* (- 2) (* ?x328 ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x601 (* (- 1) (* ?x328 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x588 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x755 (* (- 2) ?x588)))
 (let ((?x690 (* (- 1) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x566 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x536 (* (- 1) ?x566)))
 (let ((?x552 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x582 (* (- 3) (* ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x141 (* ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x123 (* (- 1) (* ?x328 ?x328 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x193 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x194 (* 3 ?x193)))
 (let ((?x171 (* (- 1) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x287 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x695 (+ ?x287 ?x171 ?x194 ?x123 ?x141 ?x582 ?x552 ?x536 ?x690 ?x755 ?x601 ?x644 ?x490 ?x482 ?x474 ?x351 ?x460 ?x365 ?x450 ?x437)))
 (let (($x285 (not (= ?x695 0))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x372 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x230 (* (- 1) ?x49)))
 (let ((?x229 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x697 (and $x143 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x229 ?x230) 4) $x372 $x271 $x285)))
 (let (($x310 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x735 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x157 (and $x143 (= ?x735 (- 4)) $x310 $x271 $x285)))
 (rewrite (= $x157 $x697)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x110 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x87 (* 2 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x85 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x83 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x75 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x74 (- (* ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x78 (- (+ ?x74 ?x75) (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71))))
 (let ((?x82 (- (+ ?x78 (* ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x71)) (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x71))))
 (let ((?x91 (- (- (+ ?x82 ?x83) ?x85) (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x94 (- (- (- ?x91 ?x87) (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71)) (* 2 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71))))
 (let ((?x101 (+ ?x94 (* 2 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x71 ?x71) (* 2 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71) (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71) (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71) (* ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x104 (- ?x101 (* 3 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let (($x106 (= (- ?x104 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x106)))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x149 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x328 (+ 1 n)))
 (let ((?x437 (* (- 1) (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x450 (* (- 3) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x365 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68)))
 (let ((?x460 (* ?x328 ?x328 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x351 (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x474 (* 3 (* ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x482 (* 2 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x68 ?x68))))
 (let ((?x490 (* 2 (* ?x328 ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x644 (* (- 2) (* ?x328 ?x328 ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x601 (* (- 1) (* ?x328 ?x325 ?x325 ?x69 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x588 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x755 (* (- 2) ?x588)))
 (let ((?x690 (* (- 1) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x566 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x536 (* (- 1) ?x566)))
 (let ((?x552 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x582 (* (- 3) (* ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x141 (* ?x328 ?x325 ?x325 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x123 (* (- 1) (* ?x328 ?x328 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x193 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x194 (* 3 ?x193)))
 (let ((?x171 (* (- 1) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x69 ?x68 ?x68))))
 (let ((?x287 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x695 (+ ?x287 ?x171 ?x194 ?x123 ?x141 ?x582 ?x552 ?x536 ?x690 ?x755 ?x601 ?x644 ?x490 ?x482 ?x474 ?x351 ?x460 ?x365 ?x450 ?x437)))
 (let (($x285 (not (= ?x695 0))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x310 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x735 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x143 (= (+ m (* (- 6) n)) 6)))
 (let (($x157 (and $x143 (= ?x735 (- 4)) $x310 $x271 $x285)))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x87 (* 2 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x85 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x83 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x75 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x74 (- (* ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x78 (- (+ ?x74 ?x75) (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71))))
 (let ((?x82 (- (+ ?x78 (* ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x71)) (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x71))))
 (let ((?x91 (- (- (+ ?x82 ?x83) ?x85) (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x94 (- (- (- ?x91 ?x87) (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71)) (* 2 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71))))
 (let ((?x101 (+ ?x94 (* 2 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x71 ?x71) (* 2 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* 3 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71) (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71) (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71) (* ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x104 (- ?x101 (* 3 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let (($x106 (= (- ?x104 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x109 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x106)))))
 (rewrite (= $x109 $x157)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x111 (asserted $x110)))
 (let ((@x326 (mp (mp @x111 (quant-intro (proof-bind ?x149) (= $x110 $x286)) $x286) (rewrite (= $x286 $x286)) $x286)))
 (let ((@x202 (mp (mp @x326 (quant-intro (proof-bind ?x698) (= $x286 $x334)) $x334) (quant-intro (proof-bind ?x121) (= $x334 $x125)) $x125)))
 (let ((@x730 (mp (mp~ @x202 (sk (~ $x125 $x756)) $x756) (rewrite (= $x756 $x550)) $x550)))
 (let ((@x204 (and-elim @x730 $x687)))
 (let ((@x314 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x687) $x217)) @x204 $x217)))
 (let (($x301 (>= ?x118 (- 6))))
 (let ((@x306 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x687) $x301)) @x204 $x301)))
 (let (($x305 (<= ?x598 1)))
 (let ((@x153 (and-elim @x730 $x392)))
 (let ((@x746 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x392) $x305)) @x153 $x305)))
 (let (($x307 (>= ?x598 1)))
 (let ((@x291 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x392) $x307)) @x153 $x307)))
 (let (($x294 (<= ?x188 (- 1))))
 (let ((@x394 (and-elim @x730 $x658)))
 (let ((@x132 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x658) $x294)) @x394 $x294)))
 (let (($x630 (>= ?x188 (- 1))))
 (let ((@x546 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x658) $x630)) @x394 $x630)))
 (let (($x500 (<= ?x750 4)))
 (let ((@x184 (and-elim @x730 $x185)))
 (let ((@x759 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x185) $x500)) @x184 $x500)))
 (let (($x308 (>= ?x750 4)))
 (let ((@x612 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x185) $x308)) @x184 $x308)))
 (let (($x140 (not (<= ?x511 0))))
 (let (($x300 (>= ?x511 0)))
 (let ((@x628 ((_ th-lemma arith) (hypothesis (not $x300)) @x291 @x746 @x291 @x746 @x612 @x759 @x291 @x746 @x306 @x314 @x291 @x746 @x546 @x132 @x291 @x746 @x306 @x314 false)))
 (let ((@x191 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x200 $x140 (not $x300))) (and-elim @x730 $x267) (or $x140 (not $x300)))))
 ((_ th-lemma arith) (unit-resolution @x191 (lemma @x628 $x300) $x140) @x291 @x746 @x291 @x746 @x612 @x759 @x291 @x746 @x306 @x314 @x291 @x746 @x546 @x132 @x291 @x746 @x306 @x314 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        13
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             303
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 50
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.97
 :memory                    3.27
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                5069151
 :num-checks                1
 :propagations              11
 :rlimit-count              47045
 :time                      0.04
 :total-time                0.05)
