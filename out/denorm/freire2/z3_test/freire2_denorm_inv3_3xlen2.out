unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1892 (* 18 x!0)))
 (let ((?x400 (* (- 12) s!1)))
 (let ((?x776 (* 9 r!2)))
 (let ((?x1198 (* r!2 x!0)))
 (let ((?x1201 (* 18 ?x1198)))
 (let ((?x1067 (* r!2 s!1)))
 (let ((?x1752 (* (- 3) ?x1067)))
 (let ((?x1027 (* r!2 r!2)))
 (let ((?x394 (* 18 ?x1027)))
 (let ((?x1003 (* s!1 s!1)))
 (let ((?x1009 (* 2 ?x1003)))
 (let ((?x624 (* s00 r00 r00)))
 (let ((?x625 (* 6 ?x624)))
 (let ((?x568 (* s00 s00)))
 (let ((?x581 (* (- 4) ?x568)))
 (let ((?x499 (* r00 x00)))
 (let ((?x513 (* (- 18) ?x499)))
 (let ((?x403 (* s00 r00)))
 (let ((?x1868 (* 3 ?x403)))
 (let ((?x278 (* r00 r00)))
 (let ((?x1571 (* (- 18) ?x278)))
 (let ((?x1690 (* (- 18) x00)))
 (let ((?x1169 (* (- 9) r00)))
 (let ((?x1766 (* 12 s00)))
 (let ((?x1924 (+ ?x1766 ?x1169 ?x1690 ?x1571 ?x1868 (* (- 21) (* r00 s!1)) ?x513 ?x581 ?x625 (* (- 6) (* s00 r00 r!2)) ?x1009 (* 21 (* s00 r!2)) (* (- 6) (* r00 r00 s!1)) ?x394 ?x1752 (* 6 (* r00 r!2 s!1)) ?x1201 ?x776 (* (- 36) (* r00 r00 r!2)) ?x400 (* 18 (* r00 x!0)) (* 36 (* r00 r!2 r!2)) ?x1892 (* 2 (* s00 s!1)) (* (- 18) (* x00 r!2)))))
 (let (($x696 (<= ?x1924 0)))
 (let ((?x943 (* (- 1) s!1)))
 (let ((?x858 (* (- 3) ?x278)))
 (let ((?x2195 (+ s00 ?x858 (* 3 ?x1027) ?x943)))
 (let (($x1019 (<= ?x2195 0)))
 (let (($x2196 (= ?x2195 0)))
 (let ((?x2197 (* s!1 s!1 x!0)))
 (let ((?x1656 (* 3 ?x2197)))
 (let ((?x1691 (* x!0 x!0 x!0)))
 (let ((?x1568 (* s!1 x!0 x!0)))
 (let ((?x1536 (* (- 3) ?x1568)))
 (let ((?x770 (+ 3 (* 6 r!2) s!1)))
 (let ((?x2067 (+ ?x943 x!0)))
 (let ((?x768 (+ 1 r!2)))
 (let ((?x1535 (* (- 1) (* ?x768 ?x768 ?x2067 ?x2067 ?x2067 ?x770 ?x770 ?x770))))
 (let ((?x585 (* s!1 s!1 s!1)))
 (let ((?x707 (* (- 1) ?x585)))
 (let ((?x1680 (* (- 9) ?x2197)))
 (let ((?x701 (* 6 (* r!2 s!1 s!1 s!1))))
 (let ((?x2051 (* (- 18) (* r!2 s!1 s!1 x!0))))
 (let ((?x1674 (* (- 3) ?x1691)))
 (let ((?x2201 (* 9 ?x1568)))
 (let ((?x1566 (* 18 (* r!2 s!1 x!0 x!0))))
 (let ((?x1546 (* s!1 s!1 s!1 s!1)))
 (let ((?x2058 (* (- 6) (* r!2 x!0 x!0 x!0))))
 (let ((?x772 (* (- 3) (* s!1 s!1 s!1 x!0))))
 (let ((?x1409 (* 3 (* s!1 s!1 x!0 x!0))))
 (let ((?x950 (* (- 1) (* ?x768 ?x2067 ?x770 ?x770 ?x770))))
 (let ((?x705 (* 3 ?x585)))
 (let ((?x1545 (* (- 1) (* s!1 x!0 x!0 x!0))))
 (let ((?x826 (+ ?x1545 ?x705 ?x950 ?x1409 ?x772 ?x2058 ?x1546 ?x1566 ?x2201 ?x1674 ?x2051 ?x701 ?x1680)))
 (let ((?x754 (* (- 4) x!0)))
 (let ((?x1029 (* 4 s!1)))
 (let ((?x1485 (* s!1 x!0)))
 (let ((?x1818 (* (- 1) ?x1485)))
 (let ((?x2062 (* (- 10) ?x1198)))
 (let ((?x763 (* 10 ?x1067)))
 (let ((?x906 (* r!2 s!1 s!1)))
 (let ((?x661 (* 6 (* r!2 r!2 s!1))))
 (let ((?x756 (* (- 6) (* r!2 r!2 x!0))))
 (let ((?x2176 (* (- 1) (* r!2 s!1 x!0))))
 (let ((?x673 (* (+ ?x2176 ?x756 ?x661 ?x906 ?x1003 ?x763 ?x2062 ?x1818 ?x1029 ?x754) ?x826 (+ ?x707 ?x1535 ?x1536 ?x1691 ?x1656) ?x1924)))
 (let (($x632 (= ?x673 0)))
 (let (($x1168 (not $x632)))
 (let ((?x1815 (* (- 9) s!1)))
 (let ((?x1333 (* x00 x00)))
 (let ((?x1585 (* 108 ?x1333)))
 (let ((?x1171 (* s00 s00 s00)))
 (let ((?x830 (* 16 ?x1171)))
 (let ((?x1026 (* r00 r00 s!1)))
 (let ((?x712 (* 36 ?x1026)))
 (let ((?x869 (* r00 r00 r00 x00)))
 (let ((?x1960 (* (- 432) ?x869)))
 (let ((?x792 (* s00 x00)))
 (let ((?x1099 (* (- 108) ?x792)))
 (let ((?x601 (* (- 36) ?x624)))
 (let ((?x938 (* 51 ?x568)))
 (let ((?x1846 (* 108 ?x499)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1033 (+ ?x137 (* 432 (* r00 r00 r00 x!0)) (* (- 54) ?x403) (* 54 (* r00 s!1)) (* 216 (* s00 r00 x00)) ?x1846 ?x938 (* 108 (* x!0 x!0)) (* (- 4) ?x585) ?x601 (* 108 (* s00 r00 s!1)) (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x1099 ?x1960 (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 216) (* x00 x!0)) (* 15 ?x1003) ?x712 (* 216 (* s00 r00 r00 r00)) ?x830 ?x1585 (* (- 108) ?x1485) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) ?x1815 (* (- 108) (* r00 x!0)) (* 108 (* s00 x!0)) (* 108 (* x00 s!1)) (* (- 66) (* s00 s!1)))))
 (let ((?x2077 (+ ?x137 (* (- 24) ?x403) (* (- 4) (* r00 s!1 s!1)) (* 24 (* r00 s!1)) (* 54 ?x499) (* 15 ?x568) ?x601 (* 2 (* s00 r00 s!1)) (* 2 (* s00 s00 r00)) (* (- 6) ?x792) (* 36 (* r00 r00 x00)) (* (- 2) ?x906) (* (- 36) (* r00 r!2 x!0)) (* (- 3) ?x1003) (* (- 24) (* s00 r!2)) ?x712 (* 24 ?x1067) (* (- 2) (* s00 r!2 s!1)) (* 36 (* r00 x00 r!2)) (* (- 54) ?x1198) (* (- 6) ?x1485) (* (- 36) (* r00 r00 x!0)) ?x1815 (* (- 54) (* r00 x!0)) (* 4 (* s00 s00 r!2)) (* 6 (* s00 x!0)) (* 6 (* x00 s!1)) (* (- 12) (* s00 s!1)) (* 54 (* x00 r!2)))))
 (let ((?x890 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2194 (+ ?x44 (* (- 9) ?x403) (* 9 (* r00 s!1)) (* 18 ?x499) (* 4 ?x568) (* (- 6) ?x624) (* 6 (* s00 r00 r!2)) (* (- 2) ?x1003) (* (- 9) (* s00 r!2)) (* 6 ?x1026) (* 9 ?x1067) (* (- 6) (* r00 r!2 s!1)) (* (- 18) ?x1198) ?x890 (* (- 18) (* r00 x!0)) (* (- 2) (* s00 s!1)) (* 18 (* x00 r!2)))))
 (let (($x2191 (= ?x2194 0)))
 (let ((?x1065 (* 6 x!0)))
 (let ((?x1037 (* 3 r!2)))
 (let ((?x507 (* 2 ?x1067)))
 (let ((?x446 (* r00 r00 r00)))
 (let ((?x447 (* 12 ?x446)))
 (let ((?x481 (* (- 6) ?x403)))
 (let ((?x478 (* (- 6) x00)))
 (let ((?x477 (* (- 3) r00)))
 (let ((?x1111 (+ ?x44 ?x477 ?x478 ?x481 ?x447 (* 4 (* s00 r!2)) ?x507 ?x1037 (* (- 12) (* r00 r00 r!2)) ?x890 ?x1065)))
 (let (($x946 (= ?x1111 0)))
 (let (($x1874 (and $x2196 $x946 $x2191 (= ?x2077 0) (= ?x1033 0) $x1168)))
 (let ((?x1650 (* (- 6) (* r!2 s00 r00))))
 (let ((?x815 (* s!1 s00)))
 (let ((?x1649 (* 2 ?x815)))
 (let ((?x804 (* r!2 x00)))
 (let ((?x1645 (* (- 18) ?x804)))
 (let ((?x1013 (* x!0 r00)))
 (let ((?x1287 (* 18 ?x1013)))
 (let ((?x429 (* s!1 r00 r00)))
 (let ((?x431 (* (- 6) ?x429)))
 (let ((?x419 (* 6 (* r!2 s!1 r00))))
 (let ((?x1753 (+ ?x776 ?x400 ?x1892 ?x1766 ?x1169 ?x1690 ?x394 ?x1571 ?x1752 (* (- 36) (* r!2 r00 r00)) (* 21 (* r!2 s00)) ?x1868 ?x513 ?x1009 ?x1201 ?x419 ?x431 ?x581 ?x1287 ?x625 ?x1645 ?x1649 (* (- 21) (* s!1 r00)) ?x1650 (* 36 (* r!2 r!2 r00)))))
 (let ((?x1693 (+ ?x950 ?x701 ?x2058 ?x705 ?x2051 ?x772 ?x1546 ?x1566 ?x1545 ?x1409 ?x2201 ?x1680 ?x1674)))
 (let ((?x2048 (* (+ ?x1029 ?x754 ?x763 ?x1003 ?x2062 ?x906 ?x1818 ?x2176 ?x661 ?x756) ?x1693 (+ ?x707 ?x1535 ?x1536 ?x1656 ?x1691) ?x1753)))
 (let ((?x1363 (* (- 108) ?x1333)))
 (let ((?x1362 (* (- 16) ?x1171)))
 (let ((?x1043 (* s00 r00 r00 r00)))
 (let ((?x1358 (* (- 216) ?x1043)))
 (let ((?x870 (* 432 ?x869)))
 (let ((?x1116 (* 108 ?x792)))
 (let ((?x734 (* s00 s00 r00 r00)))
 (let ((?x735 (* 36 ?x734)))
 (let ((?x669 (* s00 s00 r00)))
 (let ((?x999 (* 108 ?x669)))
 (let ((?x987 (* 36 ?x624)))
 (let ((?x1352 (* (- 51) ?x568)))
 (let ((?x1050 (* (- 36) ?x429)))
 (let ((?x1349 (* (- 108) ?x499)))
 (let ((?x492 (* s00 r00 x00)))
 (let ((?x1348 (* (- 216) ?x492)))
 (let ((?x503 (* 54 ?x403)))
 (let ((?x974 (* (- 9) s00)))
 (let ((?x1379 (* 9 s!1)))
 (let ((?x1907 (+ ?x1379 ?x974 ?x503 ?x1348 ?x1349 (* (- 15) ?x1003) ?x1050 ?x1352 (* 108 ?x1013) (* (- 108) (* x!0 s00)) (* 216 (* s!1 r00 r00 r00)) ?x987 (* 66 ?x815) ?x999 (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x735 (* (- 108) (* s!1 s00 r00)) (* 4 ?x585) ?x1116 (* 108 ?x1485) (* (- 108) (* x!0 x!0)) ?x870 (* 12 (* s!1 s!1 s00)) ?x1358 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1362 (* 216 (* x!0 x00)) ?x1363)))
 (let ((?x864 (* r00 r00 x00)))
 (let ((?x877 (* (- 36) ?x864)))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x687 (* (- 2) ?x669)))
 (let ((?x903 (* (- 15) ?x568)))
 (let ((?x536 (* (- 54) ?x499)))
 (let ((?x551 (* 24 ?x403)))
 (let ((?x1045 (+ ?x1379 ?x974 (* (- 24) ?x1067) (* 24 (* r!2 s00)) ?x551 ?x536 (* 3 ?x1003) (* 54 ?x1198) ?x1050 (* 36 (* r!2 x!0 r00)) ?x903 (* 54 ?x1013) (* (- 6) (* x!0 s00)) ?x987 (* (- 54) ?x804) (* 4 (* s!1 s!1 r00)) (* 12 ?x815) ?x687 (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x793 (* 2 ?x906) (* 6 ?x1485) (* (- 4) (* r!2 s00 s00)) ?x877 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x518 (* 9 ?x403)))
 (let ((?x355 (* (- 3) s00)))
 (let ((?x823 (+ (* 3 s!1) ?x355 (* (- 9) ?x1067) (* 9 (* r!2 s00)) ?x518 ?x513 ?x1009 ?x1201 ?x419 ?x431 ?x581 ?x1287 ?x625 ?x1645 ?x1649 (* (- 9) (* s!1 r00)) ?x1650)))
 (let ((?x970 (+ ?x1037 ?x890 ?x1065 ?x44 ?x477 ?x478 ?x507 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x481 ?x447)))
 (let (($x2038 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x1027) (* 3 ?x278)) 0) (= ?x970 0) (= ?x823 0) (= ?x1045 0) (= ?x1907 0) (not (= ?x2048 0)))))
 (let (($x1258 (exists ((r Int) (s Int) (x Int) )(! (let ((?x716 (* (- 6) (* r s00 r00))))
 (let ((?x665 (* s s00)))
 (let ((?x666 (* 2 ?x665)))
 (let ((?x636 (* r x00)))
 (let ((?x649 (* (- 18) ?x636)))
 (let ((?x624 (* s00 r00 r00)))
 (let ((?x625 (* 6 ?x624)))
 (let ((?x594 (* x r00)))
 (let ((?x595 (* 18 ?x594)))
 (let ((?x568 (* s00 s00)))
 (let ((?x581 (* (- 4) ?x568)))
 (let ((?x542 (* s r00 r00)))
 (let ((?x555 (* (- 6) ?x542)))
 (let ((?x531 (* 6 (* r s r00))))
 (let ((?x526 (* r x)))
 (let ((?x527 (* 18 ?x526)))
 (let ((?x522 (* s s)))
 (let ((?x523 (* 2 ?x522)))
 (let ((?x499 (* r00 x00)))
 (let ((?x513 (* (- 18) ?x499)))
 (let ((?x403 (* s00 r00)))
 (let ((?x1868 (* 3 ?x403)))
 (let ((?x328 (* r r00 r00)))
 (let ((?x1580 (* (- 36) ?x328)))
 (let ((?x278 (* r00 r00)))
 (let ((?x1571 (* (- 18) ?x278)))
 (let ((?x1690 (* (- 18) x00)))
 (let ((?x1169 (* (- 9) r00)))
 (let ((?x1766 (* 12 s00)))
 (let ((?x1498 (* 18 x)))
 (let ((?x1176 (+ (* 9 r) (* (- 12) s) ?x1498 ?x1766 ?x1169 ?x1690 (* 18 (* r r)) ?x1571 (* (- 3) (* r s)) ?x1580 (* 21 (* r s00)) ?x1868 ?x513 ?x523 ?x527 ?x531 ?x555 ?x581 ?x595 ?x625 ?x649 ?x666 (* (- 21) (* s r00)) ?x716 (* 36 (* r r r00)))))
 (let ((?x2210 (* x x x)))
 (let ((?x2200 (* s s x)))
 (let ((?x2161 (* 3 ?x2200)))
 (let ((?x2182 (* s x x)))
 (let ((?x2162 (* (- 3) ?x2182)))
 (let ((?x213 (* 6 r)))
 (let ((?x1373 (+ 3 ?x213 s)))
 (let ((?x257 (* (- 1) s)))
 (let ((?x1476 (+ ?x257 x)))
 (let ((?x1370 (+ 1 r)))
 (let ((?x790 (* s s s)))
 (let ((?x2206 (* (- 1) ?x790)))
 (let ((?x2054 (+ ?x2206 (* (- 1) (* ?x1370 ?x1370 ?x1476 ?x1476 ?x1476 ?x1373 ?x1373 ?x1373)) ?x2162 ?x2161 ?x2210)))
 (let ((?x2047 (* (- 3) ?x2210)))
 (let ((?x2041 (* (- 9) ?x2200)))
 (let ((?x2042 (* 9 ?x2182)))
 (let ((?x2096 (* (- 1) (* s x x x))))
 (let ((?x2090 (* 3 ?x790)))
 (let ((?x652 (+ (* (- 1) (* ?x1370 ?x1476 ?x1373 ?x1373 ?x1373)) (* 6 (* r s s s)) (* (- 6) (* r x x x)) ?x2090 (* (- 18) (* r s s x)) (* (- 3) (* s s s x)) (* s s s s) (* 18 (* r s x x)) ?x2096 (* 3 (* s s x x)) ?x2042 ?x2041 ?x2047)))
 (let ((?x2019 (* (- 6) (* r r x))))
 (let ((?x2016 (* 6 (* r r s))))
 (let ((?x1995 (* (- 1) (* r s x))))
 (let ((?x800 (* s x)))
 (let ((?x1994 (* (- 1) ?x800)))
 (let ((?x796 (* r s s)))
 (let ((?x2009 (* (- 10) ?x526)))
 (let ((?x2012 (* (- 4) x)))
 (let ((?x2015 (* 4 s)))
 (let ((?x1810 (+ ?x2015 ?x2012 (* 10 (* r s)) ?x522 ?x2009 ?x796 ?x1994 ?x1995 ?x2016 ?x2019)))
 (let ((?x1333 (* x00 x00)))
 (let ((?x1363 (* (- 108) ?x1333)))
 (let ((?x1171 (* s00 s00 s00)))
 (let ((?x1362 (* (- 16) ?x1171)))
 (let ((?x1043 (* s00 r00 r00 r00)))
 (let ((?x1358 (* (- 216) ?x1043)))
 (let ((?x869 (* r00 r00 r00 x00)))
 (let ((?x870 (* 432 ?x869)))
 (let ((?x792 (* s00 x00)))
 (let ((?x1116 (* 108 ?x792)))
 (let ((?x734 (* s00 s00 r00 r00)))
 (let ((?x735 (* 36 ?x734)))
 (let ((?x669 (* s00 s00 r00)))
 (let ((?x999 (* 108 ?x669)))
 (let ((?x987 (* 36 ?x624)))
 (let ((?x1352 (* (- 51) ?x568)))
 (let ((?x851 (* (- 36) ?x542)))
 (let ((?x1349 (* (- 108) ?x499)))
 (let ((?x492 (* s00 r00 x00)))
 (let ((?x1348 (* (- 216) ?x492)))
 (let ((?x503 (* 54 ?x403)))
 (let ((?x974 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1364 (+ ?x143 ?x974 ?x503 ?x1348 ?x1349 (* (- 15) ?x522) ?x851 ?x1352 (* 108 ?x594) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x987 (* 66 ?x665) ?x999 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x735 (* (- 108) (* s s00 r00)) (* 4 ?x790) ?x1116 (* 108 ?x800) (* (- 108) (* x x)) ?x870 (* 12 (* s s s00)) ?x1358 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1362 (* 216 (* x x00)) ?x1363)))
 (let (($x1365 (= ?x1364 0)))
 (let ((?x864 (* r00 r00 x00)))
 (let ((?x877 (* (- 36) ?x864)))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x687 (* (- 2) ?x669)))
 (let ((?x903 (* (- 15) ?x568)))
 (let ((?x554 (* 3 ?x522)))
 (let ((?x536 (* (- 54) ?x499)))
 (let ((?x551 (* 24 ?x403)))
 (let ((?x1066 (+ ?x143 ?x974 (* (- 24) (* r s)) (* 24 (* r s00)) ?x551 ?x536 ?x554 (* 54 ?x526) ?x851 (* 36 (* r x r00)) ?x903 (* 54 ?x594) (* (- 6) (* x s00)) ?x987 (* (- 54) ?x636) (* 4 (* s s r00)) (* 12 ?x665) ?x687 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x793 (* 2 ?x796) (* 6 ?x800) (* (- 4) (* r s00 s00)) ?x877 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1071 (= ?x1066 0)))
 (let ((?x677 (* s r00)))
 (let ((?x690 (* (- 9) ?x677)))
 (let ((?x518 (* 9 ?x403)))
 (let ((?x376 (* r s00)))
 (let ((?x662 (* 9 ?x376)))
 (let ((?x322 (* r s)))
 (let ((?x494 (* (- 9) ?x322)))
 (let ((?x355 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x722 (+ ?x47 ?x355 ?x494 ?x662 ?x518 ?x513 ?x523 ?x527 ?x531 ?x555 ?x581 ?x595 ?x625 ?x649 ?x666 ?x690 ?x716)))
 (let (($x729 (= ?x722 0)))
 (let ((?x446 (* r00 r00 r00)))
 (let ((?x447 (* 12 ?x446)))
 (let ((?x481 (* (- 6) ?x403)))
 (let ((?x478 (* (- 6) x00)))
 (let ((?x477 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x482 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x477 ?x478 (* 2 ?x322) (* (- 12) ?x328) (* 4 ?x376) ?x481 ?x447)))
 (let (($x483 (= ?x482 0)))
 (let (($x311 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x278)) 0)))
 (and $x311 $x483 $x729 $x1071 $x1365 (not (= (* ?x1810 ?x652 ?x2054 ?x1176) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x871 (exists ((r Int) (s Int) (x Int) )(! (let ((?x47 (* 3 s)))
 (let ((?x784 (* r00 r00 s00)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x355 (* (- 3) s00)))
 (let ((?x568 (* s00 s00)))
 (let ((?x581 (* (- 4) ?x568)))
 (let ((?x1756 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x1698 (* r00 s00)))
 (let ((?x882 (* 9 ?x1698)))
 (let ((?x499 (* r00 x00)))
 (let ((?x513 (* (- 18) ?x499)))
 (let ((?x337 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x513 ?x882 ?x1756 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x581 (* 18 (* r00 (+ x (* (- 1) s)))) ?x355 ?x785 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x257 (* (- 1) s)))
 (let ((?x1465 (+ x ?x257)))
 (let ((?x213 (* 6 r)))
 (let ((?x842 (+ 3 s ?x213)))
 (let ((?x1370 (+ 1 r)))
 (let ((?x565 (+ (* (- 1) (* ?x1370 ?x1370 ?x1465 ?x1465 ?x1465 ?x842 ?x842 ?x842)) (* ?x1465 ?x1465 ?x1465))))
 (let ((?x622 (+ (* (- 1) (* ?x1465 ?x1465 ?x1465 ?x842)) (* (- 1) (* ?x1370 ?x1465 ?x842 ?x842 ?x842)))))
 (let ((?x633 (* (+ (* (- 1) (* ?x1370 ?x1465)) (* (- 1) (* ?x1370 ?x1465 ?x842))) ?x622 ?x565 ?x337)))
 (let ((?x1333 (* x00 x00)))
 (let ((?x1585 (* 108 ?x1333)))
 (let ((?x137 (* 9 s00)))
 (let ((?x938 (* 51 ?x568)))
 (let ((?x1171 (* s00 s00 s00)))
 (let ((?x830 (* 16 ?x1171)))
 (let ((?x792 (* s00 x00)))
 (let ((?x1099 (* (- 108) ?x792)))
 (let ((?x869 (* r00 r00 r00 x00)))
 (let ((?x1960 (* (- 432) ?x869)))
 (let ((?x1846 (* 108 ?x499)))
 (let ((?x1579 (+ (* 216 (* r00 s00 x00)) ?x1846 (* (- 54) ?x1698) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1960 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1099 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x830 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x938 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x784) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1585)))
 (let ((?x143 (* 9 s)))
 (let ((?x974 (* (- 9) s00)))
 (let ((?x903 (* (- 15) ?x568)))
 (let ((?x864 (* r00 r00 x00)))
 (let ((?x877 (* (- 36) ?x864)))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x522 (* s s)))
 (let ((?x554 (* 3 ?x522)))
 (let ((?x536 (* (- 54) ?x499)))
 (let ((?x1134 (+ (* (- 24) (* s r)) ?x536 (* 36 (* r00 x r)) (* 24 ?x1698) ?x554 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x793 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x877 ?x903 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x974 (* 36 ?x784) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1620 (* r00 x)))
 (let ((?x1621 (* 18 ?x1620)))
 (let ((?x523 (* 2 ?x522)))
 (let ((?x1751 (+ (* (- 9) (* s r)) ?x513 ?x882 ?x523 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x581 ?x1621 ?x355 ?x785 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x702 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x355 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1698) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1231 (= (+ s00 ?x257 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1231 (= ?x702 0) (= ?x1751 0) (= ?x1134 0) (= ?x1579 0) (not (= ?x633 0))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2215 (lambda ((r Int) (s Int) (x Int) )(let ((?x716 (* (- 6) (* r s00 r00))))
 (let ((?x665 (* s s00)))
 (let ((?x666 (* 2 ?x665)))
 (let ((?x636 (* r x00)))
 (let ((?x649 (* (- 18) ?x636)))
 (let ((?x624 (* s00 r00 r00)))
 (let ((?x625 (* 6 ?x624)))
 (let ((?x594 (* x r00)))
 (let ((?x595 (* 18 ?x594)))
 (let ((?x568 (* s00 s00)))
 (let ((?x581 (* (- 4) ?x568)))
 (let ((?x542 (* s r00 r00)))
 (let ((?x555 (* (- 6) ?x542)))
 (let ((?x531 (* 6 (* r s r00))))
 (let ((?x526 (* r x)))
 (let ((?x527 (* 18 ?x526)))
 (let ((?x522 (* s s)))
 (let ((?x523 (* 2 ?x522)))
 (let ((?x499 (* r00 x00)))
 (let ((?x513 (* (- 18) ?x499)))
 (let ((?x403 (* s00 r00)))
 (let ((?x1868 (* 3 ?x403)))
 (let ((?x328 (* r r00 r00)))
 (let ((?x1580 (* (- 36) ?x328)))
 (let ((?x278 (* r00 r00)))
 (let ((?x1571 (* (- 18) ?x278)))
 (let ((?x1690 (* (- 18) x00)))
 (let ((?x1169 (* (- 9) r00)))
 (let ((?x1766 (* 12 s00)))
 (let ((?x1498 (* 18 x)))
 (let ((?x1176 (+ (* 9 r) (* (- 12) s) ?x1498 ?x1766 ?x1169 ?x1690 (* 18 (* r r)) ?x1571 (* (- 3) (* r s)) ?x1580 (* 21 (* r s00)) ?x1868 ?x513 ?x523 ?x527 ?x531 ?x555 ?x581 ?x595 ?x625 ?x649 ?x666 (* (- 21) (* s r00)) ?x716 (* 36 (* r r r00)))))
 (let ((?x2210 (* x x x)))
 (let ((?x2200 (* s s x)))
 (let ((?x2161 (* 3 ?x2200)))
 (let ((?x2182 (* s x x)))
 (let ((?x2162 (* (- 3) ?x2182)))
 (let ((?x213 (* 6 r)))
 (let ((?x1373 (+ 3 ?x213 s)))
 (let ((?x257 (* (- 1) s)))
 (let ((?x1476 (+ ?x257 x)))
 (let ((?x1370 (+ 1 r)))
 (let ((?x790 (* s s s)))
 (let ((?x2206 (* (- 1) ?x790)))
 (let ((?x2054 (+ ?x2206 (* (- 1) (* ?x1370 ?x1370 ?x1476 ?x1476 ?x1476 ?x1373 ?x1373 ?x1373)) ?x2162 ?x2161 ?x2210)))
 (let ((?x2047 (* (- 3) ?x2210)))
 (let ((?x2041 (* (- 9) ?x2200)))
 (let ((?x2042 (* 9 ?x2182)))
 (let ((?x2096 (* (- 1) (* s x x x))))
 (let ((?x2090 (* 3 ?x790)))
 (let ((?x652 (+ (* (- 1) (* ?x1370 ?x1476 ?x1373 ?x1373 ?x1373)) (* 6 (* r s s s)) (* (- 6) (* r x x x)) ?x2090 (* (- 18) (* r s s x)) (* (- 3) (* s s s x)) (* s s s s) (* 18 (* r s x x)) ?x2096 (* 3 (* s s x x)) ?x2042 ?x2041 ?x2047)))
 (let ((?x2019 (* (- 6) (* r r x))))
 (let ((?x2016 (* 6 (* r r s))))
 (let ((?x1995 (* (- 1) (* r s x))))
 (let ((?x800 (* s x)))
 (let ((?x1994 (* (- 1) ?x800)))
 (let ((?x796 (* r s s)))
 (let ((?x2009 (* (- 10) ?x526)))
 (let ((?x2012 (* (- 4) x)))
 (let ((?x2015 (* 4 s)))
 (let ((?x1810 (+ ?x2015 ?x2012 (* 10 (* r s)) ?x522 ?x2009 ?x796 ?x1994 ?x1995 ?x2016 ?x2019)))
 (let ((?x1333 (* x00 x00)))
 (let ((?x1363 (* (- 108) ?x1333)))
 (let ((?x1171 (* s00 s00 s00)))
 (let ((?x1362 (* (- 16) ?x1171)))
 (let ((?x1043 (* s00 r00 r00 r00)))
 (let ((?x1358 (* (- 216) ?x1043)))
 (let ((?x869 (* r00 r00 r00 x00)))
 (let ((?x870 (* 432 ?x869)))
 (let ((?x792 (* s00 x00)))
 (let ((?x1116 (* 108 ?x792)))
 (let ((?x734 (* s00 s00 r00 r00)))
 (let ((?x735 (* 36 ?x734)))
 (let ((?x669 (* s00 s00 r00)))
 (let ((?x999 (* 108 ?x669)))
 (let ((?x987 (* 36 ?x624)))
 (let ((?x1352 (* (- 51) ?x568)))
 (let ((?x851 (* (- 36) ?x542)))
 (let ((?x1349 (* (- 108) ?x499)))
 (let ((?x492 (* s00 r00 x00)))
 (let ((?x1348 (* (- 216) ?x492)))
 (let ((?x503 (* 54 ?x403)))
 (let ((?x974 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1364 (+ ?x143 ?x974 ?x503 ?x1348 ?x1349 (* (- 15) ?x522) ?x851 ?x1352 (* 108 ?x594) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x987 (* 66 ?x665) ?x999 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x735 (* (- 108) (* s s00 r00)) (* 4 ?x790) ?x1116 (* 108 ?x800) (* (- 108) (* x x)) ?x870 (* 12 (* s s s00)) ?x1358 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1362 (* 216 (* x x00)) ?x1363)))
 (let (($x1365 (= ?x1364 0)))
 (let ((?x864 (* r00 r00 x00)))
 (let ((?x877 (* (- 36) ?x864)))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x687 (* (- 2) ?x669)))
 (let ((?x903 (* (- 15) ?x568)))
 (let ((?x554 (* 3 ?x522)))
 (let ((?x536 (* (- 54) ?x499)))
 (let ((?x551 (* 24 ?x403)))
 (let ((?x1066 (+ ?x143 ?x974 (* (- 24) (* r s)) (* 24 (* r s00)) ?x551 ?x536 ?x554 (* 54 ?x526) ?x851 (* 36 (* r x r00)) ?x903 (* 54 ?x594) (* (- 6) (* x s00)) ?x987 (* (- 54) ?x636) (* 4 (* s s r00)) (* 12 ?x665) ?x687 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x793 (* 2 ?x796) (* 6 ?x800) (* (- 4) (* r s00 s00)) ?x877 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1071 (= ?x1066 0)))
 (let ((?x677 (* s r00)))
 (let ((?x690 (* (- 9) ?x677)))
 (let ((?x518 (* 9 ?x403)))
 (let ((?x376 (* r s00)))
 (let ((?x662 (* 9 ?x376)))
 (let ((?x322 (* r s)))
 (let ((?x494 (* (- 9) ?x322)))
 (let ((?x355 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x722 (+ ?x47 ?x355 ?x494 ?x662 ?x518 ?x513 ?x523 ?x527 ?x531 ?x555 ?x581 ?x595 ?x625 ?x649 ?x666 ?x690 ?x716)))
 (let (($x729 (= ?x722 0)))
 (let ((?x446 (* r00 r00 r00)))
 (let ((?x447 (* 12 ?x446)))
 (let ((?x481 (* (- 6) ?x403)))
 (let ((?x478 (* (- 6) x00)))
 (let ((?x477 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x482 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x477 ?x478 (* 2 ?x322) (* (- 12) ?x328) (* 4 ?x376) ?x481 ?x447)))
 (let (($x483 (= ?x482 0)))
 (let (($x311 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x278)) 0)))
 (let (($x2123 (and $x311 $x483 $x729 $x1071 $x1365 (not (= (* ?x1810 ?x652 ?x2054 ?x1176) 0)))))
 (let ((?x784 (* r00 r00 s00)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x1698 (* r00 s00)))
 (let ((?x882 (* 9 ?x1698)))
 (let ((?x337 (+ 9 (* (- 9) (* ?x1370 (+ 3 s ?x213))) ?x513 ?x882 (* 2 (* (+ 3 s ?x213) (+ 3 s ?x213))) (* 18 (* ?x1370 (+ x ?x257))) (* 6 (* r00 ?x1370 (+ 3 s ?x213))) (* (- 6) (* r00 r00 (+ 3 s ?x213))) ?x581 (* 18 (* r00 (+ x ?x257))) ?x355 ?x785 (* (- 18) (* x00 ?x1370)) ?x47 (* 18 r) (* 9 (* s00 ?x1370)) (* 2 (* s00 (+ 3 s ?x213))) (* (- 9) (* r00 (+ 3 s ?x213))) (* (- 6) (* r00 s00 ?x1370)))))
 (let ((?x842 (+ 3 s ?x213)))
 (let ((?x1465 (+ x ?x257)))
 (let ((?x565 (+ (* (- 1) (* ?x1370 ?x1370 ?x1465 ?x1465 ?x1465 ?x842 ?x842 ?x842)) (* ?x1465 ?x1465 ?x1465))))
 (let ((?x622 (+ (* (- 1) (* ?x1465 ?x1465 ?x1465 ?x842)) (* (- 1) (* ?x1370 ?x1465 ?x842 ?x842 ?x842)))))
 (let ((?x633 (* (+ (* (- 1) (* ?x1370 ?x1465)) (* (- 1) (* ?x1370 ?x1465 ?x842))) ?x622 ?x565 ?x337)))
 (let ((?x1585 (* 108 ?x1333)))
 (let ((?x137 (* 9 s00)))
 (let ((?x938 (* 51 ?x568)))
 (let ((?x830 (* 16 ?x1171)))
 (let ((?x1099 (* (- 108) ?x792)))
 (let ((?x1960 (* (- 432) ?x869)))
 (let ((?x1846 (* 108 ?x499)))
 (let ((?x1579 (+ (* 216 (* r00 s00 x00)) ?x1846 (* (- 54) ?x1698) (* 15 ?x522) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) ?x790) (* 108 (* x x)) ?x1960 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1099 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x830 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x938 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x784) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1585)))
 (let ((?x1134 (+ (* (- 24) (* s r)) ?x536 (* 36 (* r00 x r)) (* 24 ?x1698) ?x554 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x793 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x877 ?x903 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x974 (* 36 ?x784) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1620 (* r00 x)))
 (let ((?x1621 (* 18 ?x1620)))
 (let ((?x1751 (+ (* (- 9) (* s r)) ?x513 ?x882 ?x523 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x581 ?x1621 ?x355 ?x785 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x702 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x355 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1698) (* (- 6) x) ?x59 (* (- 12) ?x446))))
 (let (($x453 (and (= (+ s00 ?x257 (* 3 (* r r)) (* (- 3) ?x278)) 0) (= ?x702 0) (= ?x1751 0) (= ?x1134 0) (= ?x1579 0) (not (= ?x633 0)))))
 (rewrite (= $x453 $x2123)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x254 (exists ((r Int) (s Int) (x Int) )(! (let ((?x218 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x245 (+ (* (- 1) ?x212 ?x212 ?x214 ?x214 ?x214 ?x218 ?x218 ?x218) (* ?x218 ?x218 ?x218))))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x249 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) (- (* (- 1) ?x212 ?x218) (* ?x212 ?x214 ?x218)) ?x245 (- (* (- 1) ?x214 ?x218 ?x218 ?x218) (* ?x212 ?x214 ?x214 ?x214 ?x218)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x249 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1701 (lambda ((r Int) (s Int) (x Int) )(let ((?x47 (* 3 s)))
 (let ((?x784 (* r00 r00 s00)))
 (let ((?x785 (* 6 ?x784)))
 (let ((?x355 (* (- 3) s00)))
 (let ((?x568 (* s00 s00)))
 (let ((?x581 (* (- 4) ?x568)))
 (let ((?x1756 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x1698 (* r00 s00)))
 (let ((?x882 (* 9 ?x1698)))
 (let ((?x499 (* r00 x00)))
 (let ((?x513 (* (- 18) ?x499)))
 (let ((?x337 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x513 ?x882 ?x1756 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x581 (* 18 (* r00 (+ x (* (- 1) s)))) ?x355 ?x785 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x257 (* (- 1) s)))
 (let ((?x1465 (+ x ?x257)))
 (let ((?x213 (* 6 r)))
 (let ((?x842 (+ 3 s ?x213)))
 (let ((?x1370 (+ 1 r)))
 (let ((?x565 (+ (* (- 1) (* ?x1370 ?x1370 ?x1465 ?x1465 ?x1465 ?x842 ?x842 ?x842)) (* ?x1465 ?x1465 ?x1465))))
 (let ((?x622 (+ (* (- 1) (* ?x1465 ?x1465 ?x1465 ?x842)) (* (- 1) (* ?x1370 ?x1465 ?x842 ?x842 ?x842)))))
 (let ((?x633 (* (+ (* (- 1) (* ?x1370 ?x1465)) (* (- 1) (* ?x1370 ?x1465 ?x842))) ?x622 ?x565 ?x337)))
 (let ((?x1333 (* x00 x00)))
 (let ((?x1585 (* 108 ?x1333)))
 (let ((?x137 (* 9 s00)))
 (let ((?x938 (* 51 ?x568)))
 (let ((?x1171 (* s00 s00 s00)))
 (let ((?x830 (* 16 ?x1171)))
 (let ((?x792 (* s00 x00)))
 (let ((?x1099 (* (- 108) ?x792)))
 (let ((?x869 (* r00 r00 r00 x00)))
 (let ((?x1960 (* (- 432) ?x869)))
 (let ((?x1846 (* 108 ?x499)))
 (let ((?x1579 (+ (* 216 (* r00 s00 x00)) ?x1846 (* (- 54) ?x1698) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1960 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1099 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x830 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x938 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x784) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1585)))
 (let ((?x143 (* 9 s)))
 (let ((?x974 (* (- 9) s00)))
 (let ((?x903 (* (- 15) ?x568)))
 (let ((?x864 (* r00 r00 x00)))
 (let ((?x877 (* (- 36) ?x864)))
 (let ((?x793 (* 6 ?x792)))
 (let ((?x522 (* s s)))
 (let ((?x554 (* 3 ?x522)))
 (let ((?x536 (* (- 54) ?x499)))
 (let ((?x1134 (+ (* (- 24) (* s r)) ?x536 (* 36 (* r00 x r)) (* 24 ?x1698) ?x554 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x793 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x877 ?x903 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x974 (* 36 ?x784) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1620 (* r00 x)))
 (let ((?x1621 (* 18 ?x1620)))
 (let ((?x523 (* 2 ?x522)))
 (let ((?x1751 (+ (* (- 9) (* s r)) ?x513 ?x882 ?x523 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x581 ?x1621 ?x355 ?x785 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x702 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x355 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1698) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1231 (= (+ s00 ?x257 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x453 (and $x1231 (= ?x702 0) (= ?x1751 0) (= ?x1134 0) (= ?x1579 0) (not (= ?x633 0)))))
 (let ((?x218 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x245 (+ (* (- 1) ?x212 ?x212 ?x214 ?x214 ?x214 ?x218 ?x218 ?x218) (* ?x218 ?x218 ?x218))))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x249 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) (- (* (- 1) ?x212 ?x218) (* ?x212 ?x214 ?x218)) ?x245 (- (* (- 1) ?x214 ?x218 ?x218 ?x218) (* ?x212 ?x214 ?x214 ?x214 ?x218)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x253 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x249 0))))))
 (rewrite (= $x253 $x453)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x255 (asserted $x254)))
 (let ((@x1807 (mp (mp @x255 (quant-intro (proof-bind ?x1701) (= $x254 $x871)) $x871) (rewrite (= $x871 $x871)) $x871)))
 (let ((@x2045 (mp~ (mp @x1807 (quant-intro (proof-bind ?x2215) (= $x871 $x1258)) $x1258) (sk (~ $x1258 $x2038)) $x2038)))
 (let ((@x2216 (mp @x2045 (rewrite (= $x2038 $x1874)) $x1874)))
 (let ((@x1856 (and-elim @x2216 $x2196)))
 (let ((@x799 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2196) $x1019)) @x1856 $x1019)))
 (let (($x2188 (>= ?x2195 0)))
 (let ((@x1389 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2196) $x2188)) @x1856 $x2188)))
 (let (($x2184 (<= ?x2194 0)))
 (let ((@x861 (and-elim @x2216 $x2191)))
 (let ((@x1845 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2191) $x2184)) @x861 $x2184)))
 (let (($x371 (>= ?x2194 0)))
 (let ((@x564 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2191) $x371)) @x861 $x371)))
 (let (($x639 (<= ?x1111 0)))
 (let ((@x845 (and-elim @x2216 $x946)))
 (let ((@x1787 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x946) $x639)) @x845 $x639)))
 (let (($x602 (>= ?x1111 0)))
 (let ((@x2014 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x946) $x602)) @x845 $x602)))
 (let ((@x3448 ((_ th-lemma arith) (hypothesis (not $x696)) @x1389 @x799 @x2014 @x1787 @x564 @x1845 @x1389 @x799 false)))
 (let ((@x3541 (lemma @x3448 $x696)))
 (let (($x1208 (>= ?x1924 0)))
 (let ((@x3505 ((_ th-lemma arith) (hypothesis (not $x1208)) @x1389 @x799 @x2014 @x1787 @x564 @x1845 @x1389 @x799 false)))
 (let ((@x3140 (lemma @x3505 $x1208)))
 (let (($x3479 (not (<= ?x673 0))))
 (let (($x1330 (>= ?x673 0)))
 (let (($x1827 (= ?x1924 0)))
 (let ((@x3493 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1827 (not $x696) (not $x1208))) @x3140 (or $x1827 (not $x696)))))
 (let ((@x506 (hypothesis $x1827)))
 (let ((@x1020 ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1330)) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1827) $x1208)) @x506 $x1208) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1827) $x696)) @x506 $x696) false)))
 (let ((@x3474 (unit-resolution (lemma @x1020 (or (not $x1827) $x1330)) (unit-resolution @x3493 @x3541 $x1827) $x1330)))
 (let ((@x3571 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x632 $x3479 (not $x1330))) (and-elim @x2216 $x1168) (or $x3479 (not $x1330)))))
 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x3571 @x3474 $x3479) @x3140 @x3541 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 328
 :arith-assert-diseq        46
 :arith-assert-lower        1965
 :arith-assert-upper        2375
 :arith-bound-prop          2
 :arith-branch-var          31
 :arith-conflicts           100
 :arith-eq-adapter          43
 :arith-fixed-eqs           877
 :arith-gcd-tests           543
 :arith-gomory-cuts         15
 :arith-grobner             3
 :arith-ineq-splits         31
 :arith-max-min             19027
 :arith-nonlinear-bounds    745
 :arith-nonlinear-horner    2431
 :arith-num-rows            46
 :arith-offset-eqs          41
 :arith-patches             94
 :arith-patches_succ        32
 :arith-pivots              2223
 :arith-pseudo-nonlinear    1308
 :arith-row-summations      11215
 :arith-tableau-max-columns 168
 :arith-tableau-max-rows    46
 :conflicts                 104
 :decisions                 857
 :del-clause                143
 :final-checks              292
 :max-memory                183.79
 :memory                    19.40
 :mk-bool-var               642
 :mk-clause                 438
 :num-allocs                7921258546044.00
 :num-checks                1
 :propagations              317
 :restarts                  1
 :rlimit-count              87735263
 :time                      71.68
 :total-time                71.69)
