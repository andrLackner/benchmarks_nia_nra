unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x748 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x695 (<= ?x748 (- 6))))
 (let (($x964 (= ?x748 (- 6))))
 (let ((?x246 (+ k!2 m!1)))
 (let ((?x193 (+ 1 n!0)))
 (let ((?x447 (* 2 (* ?x193 ?x193 ?x193 ?x193 ?x246 ?x246 ?x246))))
 (let ((?x200 (+ c!3 k!2)))
 (let ((?x273 (+ 6 m!1)))
 (let ((?x1104 (* ?x193 ?x193 ?x193 ?x273 ?x246 ?x246 ?x200)))
 (let ((?x1056 (* (- 1) (* ?x193 ?x193 ?x193 ?x273 ?x273 ?x273 ?x246 ?x200 ?x200 ?x200))))
 (let ((?x927 (* 3 (* c!3 m!1))))
 (let ((?x571 (* (- 1) (* ?x193 ?x273 ?x273 ?x200 ?x200 ?x200))))
 (let ((?x699 (* 3 (* ?x193 ?x273 ?x273 ?x200 ?x200 ?x200 ?x200))))
 (let ((?x889 (* 3 (* ?x193 ?x193 ?x193 ?x273 ?x246 ?x200 ?x200))))
 (let ((?x785 (* (- 3) m!1)))
 (let ((?x530 (* 18 k!2)))
 (let ((?x919 (* (- 1) (* ?x193 ?x193 ?x193 ?x246 ?x246 ?x246 ?x246))))
 (let ((?x746 (* (- 1) (* ?x193 ?x193 ?x193 ?x273 ?x246 ?x200))))
 (let ((?x693 (* (- 1) (* ?x193 ?x193 ?x193 ?x193 ?x273 ?x246 ?x246 ?x200))))
 (let ((?x1120 (* (- 2) (* ?x193 ?x193 ?x193 ?x193 ?x273 ?x246 ?x200))))
 (let ((?x596 (* 3 (* k!2 m!1))))
 (let ((?x132 (* (- 3) (* ?x193 ?x193 ?x193 ?x246 ?x246 ?x246 ?x200))))
 (let ((?x644 (* ?x193 ?x193 ?x193 ?x273 ?x273 ?x273 ?x200 ?x200 ?x200)))
 (let ((?x639 (* ?x193 ?x193 ?x193 ?x246 ?x246 ?x246)))
 (let ((?x584 (* 2 (* ?x193 ?x193 ?x193 ?x193 ?x273 ?x273 ?x273 ?x200 ?x200 ?x200))))
 (let ((?x589 (* ?x193 ?x273 ?x273 ?x246 ?x200 ?x200 ?x200)))
 (let ((?x505 (* 18 c!3)))
 (let ((?x812 (* (- 3) (* ?x193 ?x193 ?x193 ?x273 ?x273 ?x273 ?x200 ?x200 ?x200 ?x200))))
 (let ((?x475 (* (- 12) (* n!0 n!0 n!0))))
 (let ((?x588 (* (- 48) n!0)))
 (let ((?x928 (* (- 1) (* ?x193 ?x193 ?x273 ?x273 ?x246 ?x200 ?x200 ?x200))))
 (let ((?x344 (* ?x193 ?x193 ?x193 ?x193 ?x246 ?x246 ?x246 ?x246)))
 (let ((?x306 (* n!0 n!0)))
 (let ((?x978 (* (- 42) ?x306)))
 (let ((?x254 (* ?x193 ?x193 ?x193 ?x193 ?x273 ?x273 ?x273 ?x246 ?x200 ?x200 ?x200)))
 (let ((?x959 (* (- 2) (* ?x193 ?x193 ?x273 ?x273 ?x200 ?x200 ?x200))))
 (let ((?x686 (+ (* n!0 n!0 k!2 m!1) ?x959 ?x254 ?x978 ?x344 ?x928 (* (- 19) (* n!0 n!0 m!1)) ?x588 ?x475 ?x812 (* 3 (* n!0 n!0 c!3 m!1)) (* 36 (* n!0 c!3)) ?x505 ?x589 ?x584 ?x639 (* (- 1) (* n!0 m!1 m!1)) ?x644 ?x132 ?x596 ?x1120 ?x693 ?x746 (* (- 2) (* n!0 n!0 m!1 m!1)) (* (- 6) (* n!0 n!0 n!0 k!2)) ?x919 (* (- 1) (* n!0 n!0 n!0 k!2 m!1)) (* 5 (* n!0 k!2 m!1)) ?x530 (* (- 14) (* n!0 m!1)) ?x785 (* 30 (* n!0 k!2)) (* 6 (* n!0 n!0 k!2)) ?x889 ?x699 (* (- 1) (* n!0 n!0 n!0 m!1 m!1)) (* (- 8) (* n!0 n!0 n!0 m!1)) (* 18 (* n!0 n!0 c!3)) (* 6 (* n!0 c!3 m!1)) ?x571 ?x927 ?x1056 ?x1104 ?x447)))
 (let (($x212 (= ?x686 18)))
 (let (($x532 (not $x212)))
 (let ((?x127 (* (- 1) k!2)))
 (let ((?x680 (+ (* 3 ?x306) (* 3 n!0) ?x127)))
 (let (($x525 (= ?x680 (- 1))))
 (let ((?x895 (* n!0 k!2)))
 (let ((?x873 (+ (* 2 n!0) (* (- 3) c!3) ?x127 ?x895)))
 (let (($x1102 (= ?x873 (- 1))))
 (let ((?x456 (* k!2 k!2)))
 (let ((?x441 (+ ?x456 (* 9 n!0) (* (- 9) (* n!0 c!3)) (* (- 18) c!3) (* (- 5) k!2))))
 (let (($x477 (= ?x441 (- 4))))
 (let (($x434 (and $x964 $x477 $x1102 $x525 $x532)))
 (let ((?x143 (+ ?x505 ?x530 ?x785 ?x588 (* 30 (* k!2 n!0)) ?x699 (* 36 (* c!3 n!0)) ?x1104 ?x344 ?x1056 ?x978 ?x919 ?x889 ?x746 ?x254 ?x812 (* (- 8) (* m!1 n!0 n!0 n!0)) ?x475 ?x959 ?x132 (* (- 14) (* m!1 n!0)) (* (- 19) (* m!1 n!0 n!0)) ?x571 ?x928 ?x927 ?x596 ?x584 (* (- 6) (* k!2 n!0 n!0 n!0)) ?x639 (* 6 (* c!3 m!1 n!0)) ?x589 (* 18 (* c!3 n!0 n!0)) (* (- 2) (* m!1 m!1 n!0 n!0)) ?x1120 (* k!2 m!1 n!0 n!0) (* 6 (* k!2 n!0 n!0)) ?x693 (* (- 1) (* m!1 m!1 n!0)) (* 5 (* k!2 m!1 n!0)) (* (- 1) (* m!1 m!1 n!0 n!0 n!0)) (* (- 1) (* k!2 m!1 n!0 n!0 n!0)) ?x644 ?x447 (* 3 (* c!3 m!1 n!0 n!0)))))
 (let (($x749 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x576 (+ ?x505 (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x456) (* 9 (* c!3 n!0)))))
 (let (($x982 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x576 4) $x749 (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x306)) 1) (not (= ?x143 18)))))
 (let (($x1012 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x980 (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)))
 (let ((?x938 (* 2 ?x980)))
 (let ((?x69 (+ c k)))
 (let ((?x335 (+ 6 m)))
 (let ((?x953 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x921 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x972 (* (- 1) ?x921)))
 (let ((?x906 (* k m n n)))
 (let ((?x904 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)))
 (let ((?x745 (* (- 2) ?x904)))
 (let ((?x856 (* ?x337 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x735 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)))
 (let ((?x728 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x950 (* 2 ?x728)))
 (let ((?x712 (* ?x337 ?x337 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x998 (* (- 1) ?x712)))
 (let ((?x607 (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x1054 (* (- 1) ?x607)))
 (let ((?x543 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x544 (* (- 3) ?x543)))
 (let ((?x487 (* ?x337 ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x474 (* (- 2) ?x487)))
 (let ((?x427 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x375 (* (- 3) ?x427)))
 (let ((?x390 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x353 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)))
 (let ((?x1197 (* (- 1) ?x353)))
 (let ((?x311 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69 ?x69)))
 (let ((?x312 (* 3 ?x311)))
 (let ((?x310 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x321 (* (- 1) ?x310)))
 (let ((?x268 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x508 (* (- 1) ?x268)))
 (let ((?x252 (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x199 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x163 (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x164 (* 3 ?x163)))
 (let ((?x40 (* 18 c)))
 (let ((?x1005 (+ ?x40 (* 18 k) (* (- 3) m) (* (- 48) n) (* 30 (* k n)) ?x164 (* 36 (* c n)) ?x199 ?x252 ?x508 (* (- 42) (* n n)) ?x321 ?x312 ?x1197 ?x390 ?x375 (* (- 8) (* m n n n)) (* (- 12) (* n n n)) ?x474 ?x544 (* (- 14) (* m n)) (* (- 19) (* m n n)) ?x1054 ?x998 (* 3 (* c m)) (* 3 (* k m)) ?x950 (* (- 6) (* k n n n)) ?x735 (* 6 (* c m n)) ?x856 (* 18 (* c n n)) (* (- 2) (* m m n n)) ?x745 ?x906 (* 6 (* k n n)) ?x972 (* (- 1) (* m m n)) (* 5 (* k m n)) (* (- 1) (* m m n n n)) (* (- 1) (* k m n n n)) ?x953 ?x938 (* 3 (* c m n n)))))
 (let (($x327 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x289 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x240 (* (- 1) ?x49)))
 (let ((?x239 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let (($x237 (= (+ ?x40 ?x44 ?x239 ?x240 (* 9 (* c n))) 4)))
 (let (($x153 (= (+ m (* (- 6) n)) 6)))
 (and $x153 $x237 $x289 $x327 (not (= ?x1005 18)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x345 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x252 (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x310 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x335 (+ 6 m)))
 (let ((?x856 (* ?x337 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x712 (* ?x337 ?x337 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x607 (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x529 (* ?x337 ?x337 ?x337 ?x335 ?x70)))
 (let ((?x921 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x353 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)))
 (let ((?x268 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x390 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1100 (* ?x337 ?x337 ?x335)))
 (let ((?x1003 (+ (* 3 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69)) (* 2 (* ?x337 ?x337 ?x337 ?x335)) ?x1100 (* (- 3) (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)) (* (- 3) (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69 ?x69)) (* 2 (* ?x337 ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)) (* 3 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)) (* (- 1) ?x390) ?x268 ?x353 (* (- 1) (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)) (* (- 2) (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)) ?x921 (* 2 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)) (* (- 1) (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)) (* (- 1) (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)) (* (- 2) (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)) ?x529 ?x607 ?x712 (* (- 1) (* ?x337 ?x337 ?x335 ?x70)) (* (- 1) ?x856) (* (- 3) (* ?x337 ?x337 ?x335 ?x69)) ?x310 (* (- 1) ?x252))))
 (let (($x549 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x376 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x240 (* (- 1) ?x49)))
 (let ((?x239 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x153 (= (+ m (* (- 6) n)) 6)))
 (and $x153 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x239 ?x240) 4) $x376 $x549 (not (= ?x1003 0))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1014 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x980 (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)))
 (let ((?x938 (* 2 ?x980)))
 (let ((?x69 (+ c k)))
 (let ((?x335 (+ 6 m)))
 (let ((?x953 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x921 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x972 (* (- 1) ?x921)))
 (let ((?x906 (* k m n n)))
 (let ((?x904 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)))
 (let ((?x745 (* (- 2) ?x904)))
 (let ((?x856 (* ?x337 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x735 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)))
 (let ((?x728 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x950 (* 2 ?x728)))
 (let ((?x712 (* ?x337 ?x337 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x998 (* (- 1) ?x712)))
 (let ((?x607 (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x1054 (* (- 1) ?x607)))
 (let ((?x543 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x544 (* (- 3) ?x543)))
 (let ((?x487 (* ?x337 ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x474 (* (- 2) ?x487)))
 (let ((?x427 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x375 (* (- 3) ?x427)))
 (let ((?x390 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x353 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)))
 (let ((?x1197 (* (- 1) ?x353)))
 (let ((?x311 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69 ?x69)))
 (let ((?x312 (* 3 ?x311)))
 (let ((?x310 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x321 (* (- 1) ?x310)))
 (let ((?x268 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x508 (* (- 1) ?x268)))
 (let ((?x252 (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x199 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x163 (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x164 (* 3 ?x163)))
 (let ((?x40 (* 18 c)))
 (let ((?x1005 (+ ?x40 (* 18 k) (* (- 3) m) (* (- 48) n) (* 30 (* k n)) ?x164 (* 36 (* c n)) ?x199 ?x252 ?x508 (* (- 42) (* n n)) ?x321 ?x312 ?x1197 ?x390 ?x375 (* (- 8) (* m n n n)) (* (- 12) (* n n n)) ?x474 ?x544 (* (- 14) (* m n)) (* (- 19) (* m n n)) ?x1054 ?x998 (* 3 (* c m)) (* 3 (* k m)) ?x950 (* (- 6) (* k n n n)) ?x735 (* 6 (* c m n)) ?x856 (* 18 (* c n n)) (* (- 2) (* m m n n)) ?x745 ?x906 (* 6 (* k n n)) ?x972 (* (- 1) (* m m n)) (* 5 (* k m n)) (* (- 1) (* m m n n n)) (* (- 1) (* k m n n n)) ?x953 ?x938 (* 3 (* c m n n)))))
 (let (($x327 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x289 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x240 (* (- 1) ?x49)))
 (let ((?x239 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let (($x237 (= (+ ?x40 ?x44 ?x239 ?x240 (* 9 (* c n))) 4)))
 (let (($x153 (= (+ m (* (- 6) n)) 6)))
 (let (($x470 (and $x153 $x237 $x289 $x327 (not (= ?x1005 18)))))
 (let ((?x529 (* ?x337 ?x337 ?x337 ?x335 ?x70)))
 (let ((?x1100 (* ?x337 ?x337 ?x335)))
 (let ((?x1003 (+ (* 3 ?x543) (* 2 (* ?x337 ?x337 ?x337 ?x335)) ?x1100 (* (- 3) ?x163) (* (- 3) ?x311) (* 2 ?x487) (* 3 ?x427) (* (- 1) ?x390) ?x268 ?x353 (* (- 1) ?x199) (* (- 2) ?x980) ?x921 (* 2 ?x904) (* (- 1) ?x735) (* (- 1) ?x953) (* (- 2) ?x728) ?x529 ?x607 ?x712 (* (- 1) (* ?x337 ?x337 ?x335 ?x70)) (* (- 1) ?x856) (* (- 3) (* ?x337 ?x337 ?x335 ?x69)) ?x310 (* (- 1) ?x252))))
 (let (($x549 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x376 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1004 (and $x153 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x239 ?x240) 4) $x376 $x549 (not (= ?x1003 0)))))
 (rewrite (= $x1004 $x470)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x498 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x252 (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x310 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x321 (* (- 1) ?x310)))
 (let ((?x69 (+ c k)))
 (let ((?x335 (+ 6 m)))
 (let ((?x856 (* ?x337 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1009 (* ?x337 ?x337 ?x335 ?x70)))
 (let ((?x712 (* ?x337 ?x337 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x998 (* (- 1) ?x712)))
 (let ((?x607 (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x1054 (* (- 1) ?x607)))
 (let ((?x728 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x950 (* 2 ?x728)))
 (let ((?x953 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x735 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)))
 (let ((?x904 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)))
 (let ((?x745 (* (- 2) ?x904)))
 (let ((?x921 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x972 (* (- 1) ?x921)))
 (let ((?x980 (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)))
 (let ((?x938 (* 2 ?x980)))
 (let ((?x199 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x353 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)))
 (let ((?x1197 (* (- 1) ?x353)))
 (let ((?x268 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x508 (* (- 1) ?x268)))
 (let ((?x390 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x427 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x375 (* (- 3) ?x427)))
 (let ((?x487 (* ?x337 ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x474 (* (- 2) ?x487)))
 (let ((?x311 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69 ?x69)))
 (let ((?x312 (* 3 ?x311)))
 (let ((?x163 (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x164 (* 3 ?x163)))
 (let ((?x543 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x544 (* (- 3) ?x543)))
 (let ((?x264 (+ ?x544 (* (- 2) (* ?x337 ?x337 ?x337 ?x335)) (* (- 1) (* ?x337 ?x337 ?x335)) ?x164 ?x312 ?x474 ?x375 ?x390 ?x508 ?x1197 ?x199 ?x938 ?x972 ?x745 ?x735 ?x953 ?x950 (* (- 1) (* ?x337 ?x337 ?x337 ?x335 ?x70)) ?x1054 ?x998 ?x1009 ?x856 (* 3 (* ?x337 ?x337 ?x335 ?x69)) ?x321 ?x252)))
 (let (($x549 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x572 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x720 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x153 (= (+ m (* (- 6) n)) 6)))
 (and $x153 (= ?x720 (- 4)) $x572 $x549 (not (= ?x264 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x702 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x252 (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x310 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x335 (+ 6 m)))
 (let ((?x856 (* ?x337 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x712 (* ?x337 ?x337 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x607 (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x529 (* ?x337 ?x337 ?x337 ?x335 ?x70)))
 (let ((?x921 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x353 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)))
 (let ((?x268 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x390 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1100 (* ?x337 ?x337 ?x335)))
 (let ((?x1003 (+ (* 3 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69)) (* 2 (* ?x337 ?x337 ?x337 ?x335)) ?x1100 (* (- 3) (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)) (* (- 3) (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69 ?x69)) (* 2 (* ?x337 ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)) (* 3 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)) (* (- 1) ?x390) ?x268 ?x353 (* (- 1) (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)) (* (- 2) (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)) ?x921 (* 2 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)) (* (- 1) (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)) (* (- 1) (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)) (* (- 2) (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)) ?x529 ?x607 ?x712 (* (- 1) (* ?x337 ?x337 ?x335 ?x70)) (* (- 1) ?x856) (* (- 3) (* ?x337 ?x337 ?x335 ?x69)) ?x310 (* (- 1) ?x252))))
 (let (($x549 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x376 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x240 (* (- 1) ?x49)))
 (let ((?x239 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x153 (= (+ m (* (- 6) n)) 6)))
 (let (($x1004 (and $x153 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x239 ?x240) 4) $x376 $x549 (not (= ?x1003 0)))))
 (let ((?x321 (* (- 1) ?x310)))
 (let ((?x1009 (* ?x337 ?x337 ?x335 ?x70)))
 (let ((?x998 (* (- 1) ?x712)))
 (let ((?x1054 (* (- 1) ?x607)))
 (let ((?x728 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x950 (* 2 ?x728)))
 (let ((?x953 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x735 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)))
 (let ((?x904 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)))
 (let ((?x745 (* (- 2) ?x904)))
 (let ((?x972 (* (- 1) ?x921)))
 (let ((?x980 (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)))
 (let ((?x938 (* 2 ?x980)))
 (let ((?x199 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x1197 (* (- 1) ?x353)))
 (let ((?x508 (* (- 1) ?x268)))
 (let ((?x427 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x375 (* (- 3) ?x427)))
 (let ((?x487 (* ?x337 ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x474 (* (- 2) ?x487)))
 (let ((?x311 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69 ?x69)))
 (let ((?x312 (* 3 ?x311)))
 (let ((?x163 (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x164 (* 3 ?x163)))
 (let ((?x543 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x544 (* (- 3) ?x543)))
 (let ((?x264 (+ ?x544 (* (- 2) (* ?x337 ?x337 ?x337 ?x335)) (* (- 1) ?x1100) ?x164 ?x312 ?x474 ?x375 ?x390 ?x508 ?x1197 ?x199 ?x938 ?x972 ?x745 ?x735 ?x953 ?x950 (* (- 1) ?x529) ?x1054 ?x998 ?x1009 ?x856 (* 3 (* ?x337 ?x337 ?x335 ?x69)) ?x321 ?x252)))
 (let (($x572 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x720 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x538 (and $x153 (= ?x720 (- 4)) $x572 $x549 (not (= ?x264 0)))))
 (rewrite (= $x538 $x1004)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x120 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ k m)))
 (let ((?x73 (+ m 6)))
 (let ((?x69 (+ c k)))
 (let ((?x76 (- (* (- 3) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 2 ?x73 ?x71 ?x71 ?x71))))
 (let ((?x80 (+ (- ?x76 (* ?x73 ?x71 ?x71)) (* 3 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73 ?x71) (* 3 ?x69 ?x69 ?x70 ?x73 ?x71 ?x71 ?x71))))
 (let ((?x84 (- (- ?x80 (* 2 ?x69 ?x69 ?x69 ?x73 ?x73 ?x71 ?x71)) (* 3 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71))))
 (let ((?x86 (+ ?x84 (* ?x69 ?x69 ?x69 ?x70 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x90 (- (- ?x86 (* ?x69 ?x69 ?x69 ?x70 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71)) (* ?x69 ?x70 ?x73 ?x71 ?x71 ?x71))))
 (let ((?x93 (+ ?x90 (* ?x69 ?x70 ?x70 ?x73 ?x71 ?x71 ?x71) (* 2 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x97 (- (- ?x93 (* ?x69 ?x70 ?x70 ?x73 ?x71 ?x71 ?x71 ?x71)) (* 2 ?x69 ?x70 ?x73 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x101 (+ ?x97 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71) (* 2 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x106 (- (- ?x101 (* ?x70 ?x73 ?x71 ?x71 ?x71)) (* ?x69 ?x69 ?x69 ?x73 ?x73 ?x71))))
 (let ((?x111 (+ (- ?x106 (* ?x69 ?x69 ?x69 ?x70 ?x73 ?x73 ?x71 ?x71)) (* ?x70 ?x73 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x70 ?x73 ?x73 ?x71) (* 3 ?x69 ?x73 ?x71 ?x71))))
 (let ((?x115 (+ (- ?x111 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)) (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x115 0)))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x546 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x252 (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x310 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x321 (* (- 1) ?x310)))
 (let ((?x69 (+ c k)))
 (let ((?x335 (+ 6 m)))
 (let ((?x856 (* ?x337 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1009 (* ?x337 ?x337 ?x335 ?x70)))
 (let ((?x712 (* ?x337 ?x337 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x998 (* (- 1) ?x712)))
 (let ((?x607 (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x1054 (* (- 1) ?x607)))
 (let ((?x728 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x950 (* 2 ?x728)))
 (let ((?x953 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x735 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)))
 (let ((?x904 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)))
 (let ((?x745 (* (- 2) ?x904)))
 (let ((?x921 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x972 (* (- 1) ?x921)))
 (let ((?x980 (* ?x337 ?x337 ?x337 ?x337 ?x70 ?x70 ?x70)))
 (let ((?x938 (* 2 ?x980)))
 (let ((?x199 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x353 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69)))
 (let ((?x1197 (* (- 1) ?x353)))
 (let ((?x268 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x508 (* (- 1) ?x268)))
 (let ((?x390 (* ?x337 ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x427 (* ?x337 ?x337 ?x337 ?x335 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x375 (* (- 3) ?x427)))
 (let ((?x487 (* ?x337 ?x337 ?x335 ?x335 ?x69 ?x69 ?x69)))
 (let ((?x474 (* (- 2) ?x487)))
 (let ((?x311 (* ?x337 ?x337 ?x337 ?x335 ?x70 ?x69 ?x69)))
 (let ((?x312 (* 3 ?x311)))
 (let ((?x163 (* ?x337 ?x335 ?x335 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x164 (* 3 ?x163)))
 (let ((?x543 (* ?x337 ?x337 ?x337 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x544 (* (- 3) ?x543)))
 (let ((?x264 (+ ?x544 (* (- 2) (* ?x337 ?x337 ?x337 ?x335)) (* (- 1) (* ?x337 ?x337 ?x335)) ?x164 ?x312 ?x474 ?x375 ?x390 ?x508 ?x1197 ?x199 ?x938 ?x972 ?x745 ?x735 ?x953 ?x950 (* (- 1) (* ?x337 ?x337 ?x337 ?x335 ?x70)) ?x1054 ?x998 ?x1009 ?x856 (* 3 (* ?x337 ?x337 ?x335 ?x69)) ?x321 ?x252)))
 (let (($x549 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x572 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x720 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x153 (= (+ m (* (- 6) n)) 6)))
 (let (($x538 (and $x153 (= ?x720 (- 4)) $x572 $x549 (not (= ?x264 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x73 (+ m 6)))
 (let ((?x76 (- (* (- 3) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 2 ?x73 ?x71 ?x71 ?x71))))
 (let ((?x80 (+ (- ?x76 (* ?x73 ?x71 ?x71)) (* 3 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73 ?x71) (* 3 ?x69 ?x69 ?x70 ?x73 ?x71 ?x71 ?x71))))
 (let ((?x84 (- (- ?x80 (* 2 ?x69 ?x69 ?x69 ?x73 ?x73 ?x71 ?x71)) (* 3 ?x69 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71))))
 (let ((?x86 (+ ?x84 (* ?x69 ?x69 ?x69 ?x70 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x90 (- (- ?x86 (* ?x69 ?x69 ?x69 ?x70 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71)) (* ?x69 ?x70 ?x73 ?x71 ?x71 ?x71))))
 (let ((?x93 (+ ?x90 (* ?x69 ?x70 ?x70 ?x73 ?x71 ?x71 ?x71) (* 2 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x97 (- (- ?x93 (* ?x69 ?x70 ?x70 ?x73 ?x71 ?x71 ?x71 ?x71)) (* 2 ?x69 ?x70 ?x73 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x101 (+ ?x97 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71) (* 2 ?x69 ?x69 ?x69 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x106 (- (- ?x101 (* ?x70 ?x73 ?x71 ?x71 ?x71)) (* ?x69 ?x69 ?x69 ?x73 ?x73 ?x71))))
 (let ((?x111 (+ (- ?x106 (* ?x69 ?x69 ?x69 ?x70 ?x73 ?x73 ?x71 ?x71)) (* ?x70 ?x73 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x70 ?x73 ?x73 ?x71) (* 3 ?x69 ?x73 ?x71 ?x71))))
 (let ((?x115 (+ (- ?x111 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)) (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x119 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x115 0))))))
 (rewrite (= $x119 $x538)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x121 (asserted $x120)))
 (let ((@x1106 (mp (mp @x121 (quant-intro (proof-bind ?x546) (= $x120 $x498)) $x498) (rewrite (= $x498 $x498)) $x498)))
 (let ((@x403 (mp (mp @x1106 (quant-intro (proof-bind ?x702) (= $x498 $x345)) $x345) (quant-intro (proof-bind ?x1014) (= $x345 $x1012)) $x1012)))
 (let ((@x533 (mp (mp~ @x403 (sk (~ $x1012 $x982)) $x982) (rewrite (= $x982 $x434)) $x434)))
 (let ((@x217 (and-elim @x533 $x964)))
 (let ((@x1099 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x964) $x695)) @x217 $x695)))
 (let (($x437 (>= ?x748 (- 6))))
 (let ((@x659 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x964) $x437)) @x217 $x437)))
 (let (($x878 (<= ?x680 (- 1))))
 (let ((@x730 (and-elim @x533 $x525)))
 (let ((@x592 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x525) $x878)) @x730 $x878)))
 (let (($x207 (>= ?x680 (- 1))))
 (let ((@x512 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x525) $x207)) @x730 $x207)))
 (let (($x777 (<= ?x873 (- 1))))
 (let ((@x829 (and-elim @x533 $x1102)))
 (let ((@x1034 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1102) $x777)) @x829 $x777)))
 (let (($x1101 (>= ?x873 (- 1))))
 (let ((@x536 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1102) $x1101)) @x829 $x1101)))
 (let (($x1141 (<= ?x441 (- 4))))
 (let ((@x343 (and-elim @x533 $x477)))
 (let ((@x214 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x477) $x1141)) @x343 $x1141)))
 (let (($x259 (>= ?x441 (- 4))))
 (let ((@x141 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x477) $x259)) @x343 $x259)))
 (let (($x445 (not (<= ?x686 18))))
 (let (($x837 (>= ?x686 18)))
 (let ((@x1119 ((_ th-lemma arith) (hypothesis (not $x837)) @x141 @x214 @x141 @x214 @x512 @x592 @x141 @x214 @x512 @x592 @x141 @x214 @x659 @x1099 @x512 @x592 @x536 @x1034 @x512 @x592 @x141 @x214 @x141 @x214 @x512 @x592 @x141 @x214 @x659 @x1099 @x512 @x592 @x659 @x1099 @x512 @x592 @x536 @x1034 @x512 @x592 @x141 @x214 @x659 @x1099 @x141 @x214 @x512 @x592 false)))
 (let ((@x732 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x212 $x445 (not $x837))) (and-elim @x533 $x532) (or $x445 (not $x837)))))
 ((_ th-lemma arith) (unit-resolution @x732 (lemma @x1119 $x837) $x445) @x536 @x1034 @x512 @x592 @x536 @x1034 @x512 @x592 @x512 @x592 @x659 @x1099 @x536 @x1034 @x141 @x214 @x536 @x1034 @x512 @x592 @x512 @x592 @x536 @x1034 @x512 @x592 @x659 @x1099 @x536 @x1034 @x512 @x592 @x536 @x1034 @x536 @x1034 @x512 @x592 @x659 @x1099 @x536 @x1034 @x512 @x592 @x659 @x1099 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        26
 :arith-assert-upper        16
 :arith-branch-var          2
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           22
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             568
 :arith-nonlinear-bounds    14
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             5
 :arith-patches_succ        2
 :arith-pivots              9
 :arith-row-summations      42
 :arith-tableau-max-columns 77
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 9
 :del-clause                16
 :final-checks              9
 :max-memory                3.88
 :memory                    3.28
 :mk-bool-var               27
 :mk-clause                 16
 :num-allocs                1923160
 :num-checks                1
 :propagations              11
 :rlimit-count              20935
 :time                      0.02
 :total-time                0.03)
