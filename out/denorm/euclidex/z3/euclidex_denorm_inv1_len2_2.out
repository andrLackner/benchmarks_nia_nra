unsat
((set-logic NIA)
(declare-fun q!3 () Int)
(declare-fun r!1 () Int)
(declare-fun p!5 () Int)
(declare-fun s!0 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(proof
(let ((?x817 (* r!1 q!3)))
 (let ((?x41 (* q00 r00)))
 (let ((?x673 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x863 (+ ?x37 ?x673 (* (- 1) (* s!0 p!5)) ?x817)))
 (let (($x816 (>= ?x863 0)))
 (let (($x924 (= ?x863 0)))
 (let ((?x815 (* s!0 p!5)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x837 (+ ?x139 ?x41 ?x815 (* (- 1) ?x817))))
 (let ((?x583 (* (- 1) (* s!0 b!2 r!1 r!1 q!3 q!3 p!5 p!5))))
 (let ((?x651 (* (- 1) (* b!2 b!2 a!4 q!3 q!3 p!5))))
 (let ((?x233 (+ (* 2 (* s!0 s!0 b!2 r!1 q!3 q!3 p!5 p!5)) (* 2 (* s!0 s!0 b!2 r!1 q!3 q!3 q!3 q!3)) (* (- 1) (* s!0 b!2 r!1 r!1 q!3 q!3 q!3 q!3)) (* (- 1) (* s!0 s!0 s!0 b!2 q!3 q!3 q!3 q!3)) (* 2 (* s!0 s!0 s!0 b!2 q!3 q!3 q!3 p!5)) ?x651 ?x583 (* (- 1) (* b!2 b!2 b!2 q!3 q!3 q!3)) (* b!2 b!2 b!2 q!3 q!3 p!5) (* 2 (* s!0 b!2 r!1 r!1 q!3 q!3 q!3 p!5)) (* b!2 b!2 a!4 q!3 q!3 q!3) (* (- 1) (* s!0 s!0 s!0 b!2 q!3 q!3 p!5 p!5)) (* (- 4) (* s!0 s!0 b!2 r!1 q!3 q!3 q!3 p!5)))))
 (let ((?x220 (* ?x233 ?x837)))
 (let (($x528 (= ?x220 0)))
 (let ((?x514 (+ (* (- 2) (* b!2 r!1 r!1 r!1 q!3 p!5 p!5 p!5)) (* (- 2) (* s!0 r!1 r!1 a!4 q!3 p!5 p!5 p!5)) (* (- 1) (* s!0 b!2 r!1 r!1 p!5 p!5 p!5 p!5)) (* (- 1) (* a!4 a!4 a!4 q!3 q!3 p!5)) (* 2 (* r!1 r!1 r!1 a!4 q!3 p!5 p!5 p!5)) (* 2 (* b!2 a!4 a!4 q!3 q!3 p!5)) ?x651 ?x583 (* 2 (* b!2 a!4 a!4 p!5 p!5 p!5)) (* (- 1) (* r!1 r!1 r!1 a!4 q!3 q!3 p!5 p!5)) (* s!0 r!1 r!1 a!4 q!3 q!3 p!5 p!5) (* 2 (* b!2 b!2 a!4 q!3 p!5 p!5)) (* s!0 r!1 r!1 a!4 p!5 p!5 p!5 p!5) (* b!2 r!1 r!1 r!1 p!5 p!5 p!5 p!5) (* b!2 r!1 r!1 r!1 q!3 q!3 p!5 p!5) (* 2 (* s!0 b!2 r!1 r!1 q!3 p!5 p!5 p!5)) (* (- 1) (* a!4 a!4 a!4 p!5 p!5 p!5)) (* (- 1) (* b!2 b!2 a!4 p!5 p!5 p!5)) (* 2 (* a!4 a!4 a!4 q!3 p!5 p!5)) (* (- 4) (* b!2 a!4 a!4 q!3 p!5 p!5)) (* (- 1) (* r!1 r!1 r!1 a!4 p!5 p!5 p!5 p!5)))))
 (let ((?x191 (* ?x514 ?x837)))
 (let (($x580 (= ?x191 0)))
 (let (($x192 (not $x580)))
 (let (($x537 (or $x192 (not $x528))))
 (let ((?x637 (+ (* p00 b00 s!0) (* (- 1) (* p00 s00 b!2)) (* (- 1) (* r00 b00 q!3)) (* s00 a00 q!3) (* (- 1) (* q00 a00 s!0)) (* q00 r00 b!2))))
 (let ((?x1044 (+ (* q00 r00 a!4) (* s00 a00 p!5) (* (- 1) (* r00 b00 p!5)) (* (- 1) (* p00 s00 a!4)) (* p00 b00 r!1) (* (- 1) (* q00 a00 r!1)))))
 (let ((?x134 (* q00 a00)))
 (let ((?x871 (+ ?x134 (* (- 1) (* p00 b00)) (* (- 1) (* a!4 q!3)) (* b!2 p!5))))
 (let ((?x278 (* b!2 r!1)))
 (let ((?x130 (* s00 a00)))
 (let (($x936 (= (+ ?x130 (* (- 1) (* r00 b00)) ?x278 (* (- 1) (* s!0 a!4))) 0)))
 (let (($x272 (and $x924 $x936 (= ?x871 0) (= ?x1044 0) (= ?x637 0) $x537)))
 (let ((?x731 (+ (* p!5 s!0) ?x139 ?x41 (* (- 1) (* q!3 r!1)))))
 (let ((?x605 (* (- 1) (* p!5 a!4 q!3 q!3 b!2 b!2))))
 (let ((?x403 (* (- 1) (* p!5 p!5 q!3 q!3 b!2 r!1 r!1 s!0))))
 (let ((?x150 (+ (* 2 (* p!5 q!3 q!3 q!3 b!2 r!1 r!1 s!0)) ?x403 ?x605 (* p!5 q!3 q!3 b!2 b!2 b!2) (* a!4 q!3 q!3 q!3 b!2 b!2) (* (- 1) (* q!3 q!3 q!3 b!2 b!2 b!2)) (* (- 1) (* p!5 p!5 q!3 q!3 b!2 s!0 s!0 s!0)) (* (- 4) (* p!5 q!3 q!3 q!3 b!2 r!1 s!0 s!0)) (* 2 (* p!5 q!3 q!3 q!3 b!2 s!0 s!0 s!0)) (* 2 (* p!5 p!5 q!3 q!3 b!2 r!1 s!0 s!0)) (* (- 1) (* q!3 q!3 q!3 q!3 b!2 r!1 r!1 s!0)) (* 2 (* q!3 q!3 q!3 q!3 b!2 r!1 s!0 s!0)) (* (- 1) (* q!3 q!3 q!3 q!3 b!2 s!0 s!0 s!0)))))
 (let ((?x881 (+ (* (- 1) (* p!5 p!5 a!4 q!3 q!3 r!1 r!1 r!1)) (* p!5 p!5 a!4 q!3 q!3 r!1 r!1 s!0) (* p!5 p!5 q!3 q!3 b!2 r!1 r!1 r!1) ?x403 (* 2 (* p!5 p!5 p!5 q!3 b!2 r!1 r!1 s!0)) ?x605 (* (- 1) (* p!5 p!5 p!5 a!4 a!4 a!4)) (* 2 (* p!5 p!5 p!5 a!4 a!4 b!2)) (* (- 1) (* p!5 p!5 p!5 a!4 b!2 b!2)) (* 2 (* p!5 p!5 a!4 a!4 a!4 q!3)) (* (- 4) (* p!5 p!5 a!4 a!4 q!3 b!2)) (* 2 (* p!5 p!5 a!4 q!3 b!2 b!2)) (* (- 1) (* p!5 p!5 p!5 p!5 a!4 r!1 r!1 r!1)) (* p!5 p!5 p!5 p!5 a!4 r!1 r!1 s!0) (* p!5 p!5 p!5 p!5 b!2 r!1 r!1 r!1) (* (- 1) (* p!5 p!5 p!5 p!5 b!2 r!1 r!1 s!0)) (* (- 1) (* p!5 a!4 a!4 a!4 q!3 q!3)) (* 2 (* p!5 a!4 a!4 q!3 q!3 b!2)) (* 2 (* p!5 p!5 p!5 a!4 q!3 r!1 r!1 r!1)) (* (- 2) (* p!5 p!5 p!5 a!4 q!3 r!1 r!1 s!0)) (* (- 2) (* p!5 p!5 p!5 q!3 b!2 r!1 r!1 r!1)))))
 (let ((?x227 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x251 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let ((?x135 (* p00 b00)))
 (let ((?x178 (* (- 1) ?x134)))
 (let ((?x159 (* a!4 q!3)))
 (let (($x925 (= (+ (* a!4 s!0) (* (- 1) ?x278) (* (- 1) ?x130) (* r00 b00)) 0)))
 (let (($x860 (and (= ?x731 0) $x925 (= (+ ?x159 ?x178 ?x135 (* (- 1) (* p!5 b!2))) 0) (= ?x251 0) (= ?x227 0) (or (not (= (* ?x881 ?x731) 0)) (not (= (* ?x150 ?x731) 0))))))
 (let (($x574 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x123 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x153 (+ ?x33 ?x139 ?x41 ?x123)))
 (let ((?x425 (* (- 1) (* q q q b b b))))
 (let ((?x406 (* a q q q b b)))
 (let ((?x398 (* p q q b b b)))
 (let ((?x397 (* (- 1) (* p a q q b b))))
 (let ((?x142 (* (- 1) (* p p q q b r r s))))
 (let ((?x1052 (+ (* 2 (* p q q q b r r s)) ?x142 ?x397 ?x398 ?x406 ?x425 (* (- 1) (* p p q q b s s s)) (* (- 4) (* p q q q b r s s)) (* 2 (* p q q q b s s s)) (* 2 (* p p q q b r s s)) (* (- 1) (* q q q q b r r s)) (* 2 (* q q q q b r s s)) (* (- 1) (* q q q q b s s s)))))
 (let ((?x721 (* 2 (* p a a q q b))))
 (let ((?x702 (* (- 1) (* p a a a q q))))
 (let ((?x718 (* 2 (* p p a q b b))))
 (let ((?x715 (* (- 4) (* p p a a q b))))
 (let ((?x711 (* 2 (* p p a a a q))))
 (let ((?x698 (* (- 1) (* p p p a b b))))
 (let ((?x708 (* 2 (* p p p a a b))))
 (let ((?x696 (* (- 1) (* p p p a a a))))
 (let ((?x834 (+ (* (- 1) (* p p a q q r r r)) (* p p a q q r r s) (* p p q q b r r r) ?x142 (* 2 (* p p p q b r r s)) ?x397 ?x696 ?x708 ?x698 ?x711 ?x715 ?x718 (* (- 1) (* p p p p a r r r)) (* p p p p a r r s) (* p p p p b r r r) (* (- 1) (* p p p p b r r s)) ?x702 ?x721 (* 2 (* p p p a q r r r)) (* (- 2) (* p p p a q r r s)) (* (- 2) (* p p p q b r r r)))))
 (let ((?x72 (* b q00 r00)))
 (let ((?x310 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x315 (= ?x310 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x246 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x247 (= ?x246 0)))
 (let ((?x135 (* p00 b00)))
 (let ((?x134 (* q00 a00)))
 (let ((?x178 (* (- 1) ?x134)))
 (let (($x181 (= (+ (* a q) ?x178 ?x135 (* (- 1) (* p b))) 0)))
 (let ((?x148 (* r00 b00)))
 (let ((?x130 (* s00 a00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x49 (* a s)))
 (let (($x163 (= (+ ?x49 (* (- 1) (* b r)) ?x137 ?x148) 0)))
 (let (($x158 (= ?x153 0)))
 (and $x158 $x163 $x181 $x247 $x315 (or (not (= (* ?x834 ?x153) 0)) (not (= (* ?x1052 ?x153) 0))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x640 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x140 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x139 ?x41)))
 (let ((?x274 (* (- 1) q)))
 (let ((?x567 (+ p ?x274)))
 (let ((?x256 (* (- 1) s)))
 (let ((?x312 (+ r ?x256)))
 (let ((?x440 (+ (* (- 1) (* ?x312 ?x312 ?x567 ?x567 s b q q)) (* (- 1) (* (+ a (* (- 1) b)) ?x567 b b q q)))))
 (let ((?x427 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x139 ?x41)))
 (let ((?x340 (* (- 1) p)))
 (let ((?x459 (+ q ?x340)))
 (let ((?x468 (* (- 1) a)))
 (let ((?x430 (+ b ?x468)))
 (let ((?x516 (* (- 1) (* (+ s (* (- 1) r)) ?x430 ?x459 ?x459 r r p p))))
 (let (($x566 (= (* (+ ?x516 (* (- 1) (* ?x430 ?x430 ?x459 ?x459 a p))) ?x427) 0)))
 (let (($x199 (or (not $x566) (not (= (* ?x440 ?x140) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x300 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x389 (= ?x300 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x198 (* p00 s00 a)))
 (let ((?x434 (* b00 r00 p)))
 (let ((?x401 (+ ?x434 ?x198 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x322 (* q a)))
 (let (($x293 (= (+ ?x322 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x313 (* r b)))
 (let (($x587 (= (+ ?x313 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x426 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (and $x426 $x587 $x293 (= ?x401 0) $x389 $x199)))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x576 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x123 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x153 (+ ?x33 ?x139 ?x41 ?x123)))
 (let ((?x425 (* (- 1) (* q q q b b b))))
 (let ((?x406 (* a q q q b b)))
 (let ((?x398 (* p q q b b b)))
 (let ((?x397 (* (- 1) (* p a q q b b))))
 (let ((?x142 (* (- 1) (* p p q q b r r s))))
 (let ((?x1052 (+ (* 2 (* p q q q b r r s)) ?x142 ?x397 ?x398 ?x406 ?x425 (* (- 1) (* p p q q b s s s)) (* (- 4) (* p q q q b r s s)) (* 2 (* p q q q b s s s)) (* 2 (* p p q q b r s s)) (* (- 1) (* q q q q b r r s)) (* 2 (* q q q q b r s s)) (* (- 1) (* q q q q b s s s)))))
 (let ((?x721 (* 2 (* p a a q q b))))
 (let ((?x702 (* (- 1) (* p a a a q q))))
 (let ((?x718 (* 2 (* p p a q b b))))
 (let ((?x715 (* (- 4) (* p p a a q b))))
 (let ((?x711 (* 2 (* p p a a a q))))
 (let ((?x698 (* (- 1) (* p p p a b b))))
 (let ((?x708 (* 2 (* p p p a a b))))
 (let ((?x696 (* (- 1) (* p p p a a a))))
 (let ((?x834 (+ (* (- 1) (* p p a q q r r r)) (* p p a q q r r s) (* p p q q b r r r) ?x142 (* 2 (* p p p q b r r s)) ?x397 ?x696 ?x708 ?x698 ?x711 ?x715 ?x718 (* (- 1) (* p p p p a r r r)) (* p p p p a r r s) (* p p p p b r r r) (* (- 1) (* p p p p b r r s)) ?x702 ?x721 (* 2 (* p p p a q r r r)) (* (- 2) (* p p p a q r r s)) (* (- 2) (* p p p q b r r r)))))
 (let ((?x72 (* b q00 r00)))
 (let ((?x310 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x315 (= ?x310 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x246 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x247 (= ?x246 0)))
 (let ((?x135 (* p00 b00)))
 (let ((?x134 (* q00 a00)))
 (let ((?x178 (* (- 1) ?x134)))
 (let (($x181 (= (+ (* a q) ?x178 ?x135 (* (- 1) (* p b))) 0)))
 (let ((?x148 (* r00 b00)))
 (let ((?x130 (* s00 a00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x49 (* a s)))
 (let (($x163 (= (+ ?x49 (* (- 1) (* b r)) ?x137 ?x148) 0)))
 (let (($x158 (= ?x153 0)))
 (let (($x1072 (and $x158 $x163 $x181 $x247 $x315 (or (not (= (* ?x834 ?x153) 0)) (not (= (* ?x1052 ?x153) 0))))))
 (let ((?x140 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x139 ?x41)))
 (let ((?x274 (* (- 1) q)))
 (let ((?x567 (+ p ?x274)))
 (let ((?x256 (* (- 1) s)))
 (let ((?x312 (+ r ?x256)))
 (let ((?x440 (+ (* (- 1) (* ?x312 ?x312 ?x567 ?x567 s b q q)) (* (- 1) (* (+ a (* (- 1) b)) ?x567 b b q q)))))
 (let ((?x427 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x139 ?x41)))
 (let ((?x340 (* (- 1) p)))
 (let ((?x459 (+ q ?x340)))
 (let ((?x468 (* (- 1) a)))
 (let ((?x430 (+ b ?x468)))
 (let ((?x516 (* (- 1) (* (+ s (* (- 1) r)) ?x430 ?x459 ?x459 r r p p))))
 (let (($x566 (= (* (+ ?x516 (* (- 1) (* ?x430 ?x430 ?x459 ?x459 a p))) ?x427) 0)))
 (let (($x199 (or (not $x566) (not (= (* ?x440 ?x140) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x300 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x389 (= ?x300 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x198 (* p00 s00 a)))
 (let ((?x434 (* b00 r00 p)))
 (let ((?x401 (+ ?x434 ?x198 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x322 (* q a)))
 (let (($x293 (= (+ ?x322 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x313 (* r b)))
 (let (($x587 (= (+ ?x313 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x426 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x680 (and $x426 $x587 $x293 (= ?x401 0) $x389 $x199)))
 (rewrite (= $x680 $x1072))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x719 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x140 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x139 ?x41)))
 (let ((?x274 (* (- 1) q)))
 (let ((?x567 (+ p ?x274)))
 (let ((?x256 (* (- 1) s)))
 (let ((?x312 (+ r ?x256)))
 (let ((?x440 (+ (* (- 1) (* ?x312 ?x312 ?x567 ?x567 s b q q)) (* (- 1) (* (+ a (* (- 1) b)) ?x567 b b q q)))))
 (let ((?x427 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x139 ?x41)))
 (let ((?x340 (* (- 1) p)))
 (let ((?x459 (+ q ?x340)))
 (let ((?x468 (* (- 1) a)))
 (let ((?x430 (+ b ?x468)))
 (let ((?x516 (* (- 1) (* (+ s (* (- 1) r)) ?x430 ?x459 ?x459 r r p p))))
 (let (($x566 (= (* (+ ?x516 (* (- 1) (* ?x430 ?x430 ?x459 ?x459 a p))) ?x427) 0)))
 (let (($x199 (or (not $x566) (not (= (* ?x440 ?x140) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x300 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x389 (= ?x300 0)))
 (let ((?x548 (* a00 s00 p)))
 (let ((?x647 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x578 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x647 ?x548 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x254 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x703 (* s a)))
 (let (($x230 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x703 ?x51) 0)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x139 ?x41) 0) $x230 $x254 (= ?x578 0) $x389 $x199))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x642 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x140 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x139 ?x41)))
 (let ((?x274 (* (- 1) q)))
 (let ((?x567 (+ p ?x274)))
 (let ((?x256 (* (- 1) s)))
 (let ((?x312 (+ r ?x256)))
 (let ((?x440 (+ (* (- 1) (* ?x312 ?x312 ?x567 ?x567 s b q q)) (* (- 1) (* (+ a (* (- 1) b)) ?x567 b b q q)))))
 (let ((?x427 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x139 ?x41)))
 (let ((?x340 (* (- 1) p)))
 (let ((?x459 (+ q ?x340)))
 (let ((?x468 (* (- 1) a)))
 (let ((?x430 (+ b ?x468)))
 (let ((?x516 (* (- 1) (* (+ s (* (- 1) r)) ?x430 ?x459 ?x459 r r p p))))
 (let (($x566 (= (* (+ ?x516 (* (- 1) (* ?x430 ?x430 ?x459 ?x459 a p))) ?x427) 0)))
 (let (($x199 (or (not $x566) (not (= (* ?x440 ?x140) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x300 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x389 (= ?x300 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x198 (* p00 s00 a)))
 (let ((?x434 (* b00 r00 p)))
 (let ((?x401 (+ ?x434 ?x198 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x322 (* q a)))
 (let (($x293 (= (+ ?x322 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x313 (* r b)))
 (let (($x587 (= (+ ?x313 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x426 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x680 (and $x426 $x587 $x293 (= ?x401 0) $x389 $x199)))
 (let ((?x548 (* a00 s00 p)))
 (let ((?x647 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x416 (= (+ (* (- 1) ?x434) (* (- 1) ?x198) ?x65 ?x647 ?x548 (* (- 1) ?x69)) 0)))
 (let (($x254 (= (+ (* (- 1) ?x322) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x230 (= (+ (* (- 1) ?x313) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x713 (and (= (+ (* (- 1) (* r q)) (* s p) ?x139 ?x41) 0) $x230 $x254 $x416 $x389 $x199)))
 (rewrite (= $x713 $x680))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x114 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x98 (- q p)))
 (let ((?x105 (- b a)))
 (let ((?x108 (- (* (- 1) ?x105 p p ?x98 ?x98 r r (- s r)) (* a ?x105 ?x105 p ?x98 ?x98))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x104 (+ (- (+ (* (- 1) ?x98 r) (* p (- s r))) ?x37) ?x41)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x31 (- 1)))
 (let ((?x94 (- (* ?x31 b ?x86 ?x86 q q ?x84 ?x84 s) (* (- a b) b b ?x86 q q))))
 (let (($x96 (= (* (+ (- (+ (* ?x31 q ?x84) (* ?x86 s)) ?x37) ?x41) ?x94) 0)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not $x96) (not (= (* ?x104 ?x108) 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x705 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x140 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x139 ?x41)))
 (let ((?x274 (* (- 1) q)))
 (let ((?x567 (+ p ?x274)))
 (let ((?x256 (* (- 1) s)))
 (let ((?x312 (+ r ?x256)))
 (let ((?x440 (+ (* (- 1) (* ?x312 ?x312 ?x567 ?x567 s b q q)) (* (- 1) (* (+ a (* (- 1) b)) ?x567 b b q q)))))
 (let ((?x427 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x139 ?x41)))
 (let ((?x340 (* (- 1) p)))
 (let ((?x459 (+ q ?x340)))
 (let ((?x468 (* (- 1) a)))
 (let ((?x430 (+ b ?x468)))
 (let ((?x516 (* (- 1) (* (+ s (* (- 1) r)) ?x430 ?x459 ?x459 r r p p))))
 (let (($x566 (= (* (+ ?x516 (* (- 1) (* ?x430 ?x430 ?x459 ?x459 a p))) ?x427) 0)))
 (let (($x199 (or (not $x566) (not (= (* ?x440 ?x140) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x300 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x389 (= ?x300 0)))
 (let ((?x548 (* a00 s00 p)))
 (let ((?x647 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x578 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x647 ?x548 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x254 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x703 (* s a)))
 (let (($x230 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x703 ?x51) 0)))
 (let (($x713 (and (= (+ (* (- 1) (* r q)) (* s p) ?x139 ?x41) 0) $x230 $x254 (= ?x578 0) $x389 $x199)))
 (let ((?x98 (- q p)))
 (let ((?x105 (- b a)))
 (let ((?x108 (- (* (- 1) ?x105 p p ?x98 ?x98 r r (- s r)) (* a ?x105 ?x105 p ?x98 ?x98))))
 (let ((?x104 (+ (- (+ (* (- 1) ?x98 r) (* p (- s r))) ?x37) ?x41)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x31 (- 1)))
 (let ((?x94 (- (* ?x31 b ?x86 ?x86 q q ?x84 ?x84 s) (* (- a b) b b ?x86 q q))))
 (let (($x96 (= (* (+ (- (+ (* ?x31 q ?x84) (* ?x86 s)) ?x37) ?x41) ?x94) 0)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x113 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not $x96) (not (= (* ?x104 ?x108) 0))))))
 (rewrite (= $x113 $x713)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x115 (asserted $x114)))
 (let ((@x585 (mp (mp @x115 (quant-intro (proof-bind ?x705) (= $x114 $x719)) $x719) (rewrite (= $x719 $x719)) $x719)))
 (let ((@x1022 (mp (mp @x585 (quant-intro (proof-bind ?x642) (= $x719 $x640)) $x640) (quant-intro (proof-bind ?x576) (= $x640 $x574)) $x574)))
 (let ((@x238 (mp (mp~ @x1022 (sk (~ $x574 $x860)) $x860) (rewrite (= $x860 $x272)) $x272)))
 (let ((@x615 (and-elim @x238 $x924)))
 (let ((@x938 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x924) $x816)) @x615 $x816)))
 (let (($x861 (<= ?x863 0)))
 (let ((@x965 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x924) $x861)) @x615 $x861)))
 (let (($x1011 (not (<= ?x191 0))))
 (let (($x652 (>= ?x220 0)))
 (let (($x633 (<= ?x220 0)))
 (let ((@x886 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x528 (not $x633) (not $x652))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x633)) @x965 @x938 false) $x633) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x652)) @x965 @x938 false) $x652) $x528)))
 (let (($x628 (>= ?x191 0)))
 (let ((@x910 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x580 $x1011 (not $x628))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x628)) @x965 @x938 false) $x628) (unit-resolution (and-elim @x238 $x537) @x886 $x192) $x1011)))
 ((_ th-lemma arith farkas 1 1 1) @x910 @x965 @x938 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             576
 :arith-nonlinear-horner    30
 :arith-num-rows            8
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 82
 :arith-tableau-max-rows    8
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                58.81
 :memory                    3.22
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                107459760173.00
 :num-checks                1
 :propagations              19
 :rlimit-count              15563347
 :time                      5.89
 :total-time                5.88)
