unsat
((set-logic NIA)
(declare-fun q!2 () Int)
(declare-fun r!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x83 (* y00 q00)))
 (let ((?x2312 (+ r00 ?x83 (* (- 1) r!1) (* (- 1) (* y00 q!2)))))
 (let (($x2302 (<= ?x2312 0)))
 (let (($x2313 (= ?x2312 0)))
 (let ((?x2240 (* y00 y00 y00 y00 r00)))
 (let ((?x2143 (* y00 y00 y00 r00)))
 (let ((?x2004 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1862 (* y00 y00 y00 y00 y00 r00)))
 (let ((?x1630 (* y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x1332 (* (- 1) (* y00 y00 y00 y00 y00 y00 q!2 q!2 q!2 q!2))))
 (let ((?x1325 (* (- 1) (* y00 y00 y00 y00 r!1 r!1 q!2 q!2 q!2 q!2))))
 (let ((?x1328 (* 2 (* y00 y00 y00 y00 y00 r!1 q!2 q!2 q!2 q!2))))
 (let ((?x1216 (* (- 2) (* y00 y00 y00 y00 y00 q00 r!1 q!2 q!2 q!2))))
 (let ((?x1693 (* (- 1) (* r!1 r!1 r!1))))
 (let ((?x606 (* y00 y00 y00 y00 q00)))
 (let ((?x578 (* y00 y00 y00 q00)))
 (let ((?x117 (* y00 y00 r00)))
 (let ((?x95 (+ ?x117 (* 5 (* y00 y00 y00 y00 y00 r!1 q!2 q!2 q!2)) ?x578 ?x606 (* (- 1) (* y00 y00 y00 y00 r!1)) (* (- 3) (* y00 y00 y00 y00 y00 y00 q!2 q!2)) (* y00 q00 r!1 r!1) (* y00 r!1 r!1 r!1 r!1) (* (- 1) (* y00 r!1 r!1 q!2)) (* y00 y00 y00 y00 q00 r!1 r!1 q!2 q!2 q!2) (* 3 (* y00 y00 y00 r00 r!1 r!1 q!2 q!2)) (* (- 2) (* y00 y00 y00 y00 r00 r!1)) (* (- 2) (* y00 y00 y00 y00 r00 r!1 q!2 q!2 q!2)) (* (- 2) (* y00 y00 y00 r!1 q!2)) ?x1693 (* (- 6) (* y00 y00 y00 y00 y00 q00 r!1 q!2 q!2)) ?x1216 (* (- 6) (* y00 y00 y00 y00 y00 q00 r!1 q!2)) (* 3 (* y00 y00 y00 y00 y00 y00 q00 q!2)) (* 3 (* y00 y00 y00 y00 y00 y00 q00 q!2 q!2)) (* y00 y00 y00 y00 y00 y00 q00 q!2 q!2 q!2) (* 3 (* y00 y00 y00 r00 r!1 r!1 q!2)) (* y00 y00 y00 r00 r!1 r!1) (* y00 y00 y00 r00 r!1 r!1 q!2 q!2 q!2) (* 3 (* y00 y00 y00 y00 r!1 r!1 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 r!1)) (* 2 (* y00 y00 r!1 q!2)) (* (- 1) (* y00 y00 y00 q!2)) (* 3 (* y00 y00 y00 y00 r!1 q!2)) (* (- 1) (* y00 y00 y00 y00 q!2)) (* (- 2) (* y00 y00 y00 y00 q!2 q!2)) (* y00 y00 y00 y00 q00 r!1 r!1) (* 2 (* y00 y00 y00 y00 q00 q!2)) (* y00 y00 y00 y00 q00 q!2 q!2) (* (- 2) (* y00 y00 q00 r!1)) (* (- 3) (* y00 y00 r!1 r!1 r!1)) (* 3 (* y00 y00 y00 r!1 r!1)) ?x1328 ?x1325 ?x1332 (* 2 (* y00 r!1 r!1)) (* (- 1) (* y00 y00 r!1)) (* y00 y00 r!1 r!1 r!1 q!2) (* (- 3) (* y00 y00 y00 r!1 r!1 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 q!2)) (* (- 1) (* y00 y00 y00 y00 q!2 q!2 q!2)) (* 3 (* y00 y00 y00 y00 q00 r!1 r!1 q!2)) (* 3 (* y00 y00 y00 y00 q00 r!1 r!1 q!2 q!2)) (* (- 3) (* y00 y00 y00 y00 y00 y00 q!2 q!2 q!2)) (* 3 (* y00 y00 y00 y00 y00 r00 q!2)) (* 3 (* y00 y00 y00 y00 y00 r00 q!2 q!2)) ?x1630 (* 2 (* y00 y00 y00 r00 q!2)) (* (- 1) (* y00 r00 r!1 r!1 r!1)) (* y00 y00 y00 y00 y00 r00 q!2 q!2 q!2) ?x1862 (* (- 6) (* y00 y00 y00 y00 r00 r!1 q!2)) (* (- 6) (* y00 y00 y00 y00 r00 r!1 q!2 q!2)) (* (- 2) (* y00 y00 y00 y00 y00 q00 r!1)) ?x2004 (* 3 (* y00 y00 r00 r!1 r!1)) (* (- 3) (* y00 y00 y00 r00 r!1)) (* 3 (* y00 y00 y00 q00 r!1 r!1)) (* (- 1) (* y00 y00 q00 r!1 r!1 r!1)) (* (- 3) (* y00 y00 y00 y00 q00 r!1)) (* (- 1) (* y00 y00 y00 r!1)) (* (- 1) (* y00 y00 y00 r!1 q!2 q!2)) (* y00 y00 y00 r00 q!2 q!2) ?x2143 ?x2240 (* r00 r!1 r!1) (* (- 2) (* y00 r00 r!1)) (* (- 1) (* y00 y00 y00 r!1 r!1 r!1)) (* (- 3) (* y00 y00 y00 r!1 r!1 r!1 q!2)) (* (- 3) (* y00 y00 y00 r!1 r!1 r!1 q!2 q!2)) (* (- 1) (* y00 y00 y00 r!1 r!1 r!1 q!2 q!2 q!2)) (* 2 (* y00 y00 y00 y00 r!1 r!1)) (* 5 (* y00 y00 y00 y00 r!1 r!1 q!2)) (* (- 1) (* y00 y00 y00 y00 r!1 r!1 q!2 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 r!1 q!2)) (* 3 (* y00 y00 y00 y00 y00 r!1 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 y00 q!2)))))
 (let (($x1458 (= ?x95 0)))
 (let (($x1200 (not $x1458)))
 (let ((?x2289 (+ y00 (* (- 1) y!0))))
 (let (($x2290 (= ?x2289 0)))
 (let (($x1496 (and $x2290 $x2313 $x1200)))
 (let ((?x2054 (* (- 2) (* q!2 q!2 q!2 r!1 y00 y00 y00 y00 y00 q00))))
 (let ((?x1494 (* (- 1) (* q!2 q!2 q!2 q!2 y00 y00 y00 y00 y00 y00))))
 (let ((?x1694 (* 2 (* q!2 q!2 q!2 q!2 r!1 y00 y00 y00 y00 y00))))
 (let ((?x1691 (* (- 1) (* q!2 q!2 q!2 q!2 r!1 r!1 y00 y00 y00 y00))))
 (let ((?x2189 (+ (* r!1 r!1 r00) (* (- 2) (* r!1 y00 r00)) ?x117 (* (- 1) (* r!1 r!1 r!1 y00 y00 y00)) (* (- 3) (* q!2 r!1 r!1 r!1 y00 y00 y00)) (* (- 3) (* q!2 q!2 r!1 r!1 r!1 y00 y00 y00)) (* (- 1) (* q!2 q!2 q!2 r!1 r!1 r!1 y00 y00 y00)) (* 2 (* r!1 r!1 y00 y00 y00 y00)) (* 5 (* q!2 r!1 r!1 y00 y00 y00 y00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 q!2 r!1 r!1 y00 y00 y00 y00)) (* (- 1) (* r!1 y00 y00 y00 y00 y00)) (* (- 1) (* q!2 r!1 y00 y00 y00 y00 y00)) (* 3 (* q!2 q!2 r!1 y00 y00 y00 y00 y00)) (* 5 (* q!2 q!2 q!2 r!1 y00 y00 y00 y00 y00)) (* (- 1) (* q!2 y00 y00 y00 y00 y00 y00)) (* (- 3) (* q!2 q!2 y00 y00 y00 y00 y00 y00)) (* (- 3) (* q!2 q!2 q!2 y00 y00 y00 y00 y00 y00)) (* r!1 r!1 y00 q00) (* (- 2) (* r!1 y00 y00 q00)) ?x578 ?x606 (* 2 (* q!2 y00 y00 y00 y00 q00)) (* q!2 q!2 y00 y00 y00 y00 q00) (* r!1 r!1 r!1 r!1 y00) (* (- 3) (* r!1 r!1 r!1 y00 y00)) (* 3 (* r!1 r!1 y00 y00 y00)) (* (- 1) (* r!1 y00 y00 y00 y00)) ?x1691 ?x1694 ?x1494 ?x1693 (* 2 (* r!1 r!1 y00)) (* (- 1) (* r!1 y00 y00)) (* (- 1) (* q!2 r!1 r!1 y00)) (* 2 (* q!2 r!1 y00 y00)) (* (- 1) (* q!2 y00 y00 y00)) (* q!2 r!1 r!1 r!1 y00 y00) (* (- 3) (* q!2 r!1 r!1 y00 y00 y00)) (* 3 (* q!2 r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 y00 y00 y00 y00 y00)) (* (- 1) (* q!2 y00 y00 y00 y00)) (* (- 2) (* q!2 q!2 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 y00 y00)) (* r!1 r!1 y00 y00 y00 y00 q00) (* 3 (* q!2 r!1 r!1 y00 y00 y00 y00 q00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00 y00 q00)) (* q!2 q!2 q!2 r!1 r!1 y00 y00 y00 y00 q00) (* (- 2) (* r!1 y00 y00 y00 y00 y00 q00)) (* (- 6) (* q!2 r!1 y00 y00 y00 y00 y00 q00)) (* (- 6) (* q!2 q!2 r!1 y00 y00 y00 y00 y00 q00)) ?x2054 ?x1630 (* 3 (* q!2 y00 y00 y00 y00 y00 y00 q00)) (* 3 (* q!2 q!2 y00 y00 y00 y00 y00 y00 q00)) (* q!2 q!2 q!2 y00 y00 y00 y00 y00 y00 q00) (* r!1 r!1 y00 y00 y00 r00) (* 3 (* q!2 r!1 r!1 y00 y00 y00 r00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00 r00)) (* q!2 q!2 q!2 r!1 r!1 y00 y00 y00 r00) (* (- 2) (* r!1 y00 y00 y00 y00 r00)) (* (- 6) (* q!2 r!1 y00 y00 y00 y00 r00)) (* (- 6) (* q!2 q!2 r!1 y00 y00 y00 y00 r00)) (* (- 2) (* q!2 q!2 q!2 r!1 y00 y00 y00 y00 r00)) ?x1862 (* 3 (* q!2 y00 y00 y00 y00 y00 r00)) (* 3 (* q!2 q!2 y00 y00 y00 y00 y00 r00)) (* q!2 q!2 q!2 y00 y00 y00 y00 y00 r00) (* (- 1) (* r!1 r!1 r!1 y00 y00 q00)) (* 3 (* r!1 r!1 y00 y00 y00 q00)) (* (- 3) (* r!1 y00 y00 y00 y00 q00)) ?x2004 (* (- 1) (* r!1 y00 y00 y00)) (* (- 2) (* q!2 r!1 y00 y00 y00)) (* (- 1) (* q!2 q!2 r!1 y00 y00 y00)) ?x2143 (* 2 (* q!2 y00 y00 y00 r00)) (* q!2 q!2 y00 y00 y00 r00) (* (- 1) (* r!1 r!1 r!1 y00 r00)) (* 3 (* r!1 r!1 y00 y00 r00)) (* (- 3) (* r!1 y00 y00 y00 r00)) ?x2240)))
 (let (($x1186 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x83)) 0) (not (= ?x2189 0)))))
 (let (($x88 (exists ((q Int) (r Int) (y Int) )(! (let ((?x2240 (* y00 y00 y00 y00 r00)))
 (let ((?x2143 (* y00 y00 y00 r00)))
 (let ((?x2004 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1862 (* y00 y00 y00 y00 y00 r00)))
 (let ((?x1630 (* y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x1683 (* (- 2) (* q q q r y00 y00 y00 y00 y00 q00))))
 (let ((?x1050 (* (- 1) (* q q q q y00 y00 y00 y00 y00 y00))))
 (let ((?x1087 (* 2 (* q q q q r y00 y00 y00 y00 y00))))
 (let ((?x606 (* y00 y00 y00 y00 q00)))
 (let ((?x578 (* y00 y00 y00 q00)))
 (let ((?x117 (* y00 y00 r00)))
 (let ((?x2276 (+ (* r r r00) (* (- 2) (* r y00 r00)) ?x117 (* (- 1) (* r r r y00 y00 y00)) (* (- 3) (* q r r r y00 y00 y00)) (* (- 3) (* q q r r r y00 y00 y00)) (* (- 1) (* q q q r r r y00 y00 y00)) (* 2 (* r r y00 y00 y00 y00)) (* 5 (* q r r y00 y00 y00 y00)) (* 3 (* q q r r y00 y00 y00 y00)) (* (- 1) (* q q q r r y00 y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00 y00)) (* (- 1) (* q r y00 y00 y00 y00 y00)) (* 3 (* q q r y00 y00 y00 y00 y00)) (* 5 (* q q q r y00 y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00 y00 y00)) (* (- 3) (* q q y00 y00 y00 y00 y00 y00)) (* (- 3) (* q q q y00 y00 y00 y00 y00 y00)) (* r r y00 q00) (* (- 2) (* r y00 y00 q00)) ?x578 ?x606 (* 2 (* q y00 y00 y00 y00 q00)) (* q q y00 y00 y00 y00 q00) (* r r r r y00) (* (- 3) (* r r r y00 y00)) (* 3 (* r r y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00)) (* (- 1) (* q q q q r r y00 y00 y00 y00)) ?x1087 ?x1050 (* (- 1) (* r r r)) (* 2 (* r r y00)) (* (- 1) (* r y00 y00)) (* (- 1) (* q r r y00)) (* 2 (* q r y00 y00)) (* (- 1) (* q y00 y00 y00)) (* q r r r y00 y00) (* (- 3) (* q r r y00 y00 y00)) (* 3 (* q r y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00)) (* (- 2) (* q q y00 y00 y00 y00)) (* (- 1) (* q q q y00 y00 y00 y00)) (* r r y00 y00 y00 y00 q00) (* 3 (* q r r y00 y00 y00 y00 q00)) (* 3 (* q q r r y00 y00 y00 y00 q00)) (* q q q r r y00 y00 y00 y00 q00) (* (- 2) (* r y00 y00 y00 y00 y00 q00)) (* (- 6) (* q r y00 y00 y00 y00 y00 q00)) (* (- 6) (* q q r y00 y00 y00 y00 y00 q00)) ?x1683 ?x1630 (* 3 (* q y00 y00 y00 y00 y00 y00 q00)) (* 3 (* q q y00 y00 y00 y00 y00 y00 q00)) (* q q q y00 y00 y00 y00 y00 y00 q00) (* r r y00 y00 y00 r00) (* 3 (* q r r y00 y00 y00 r00)) (* 3 (* q q r r y00 y00 y00 r00)) (* q q q r r y00 y00 y00 r00) (* (- 2) (* r y00 y00 y00 y00 r00)) (* (- 6) (* q r y00 y00 y00 y00 r00)) (* (- 6) (* q q r y00 y00 y00 y00 r00)) (* (- 2) (* q q q r y00 y00 y00 y00 r00)) ?x1862 (* 3 (* q y00 y00 y00 y00 y00 r00)) (* 3 (* q q y00 y00 y00 y00 y00 r00)) (* q q q y00 y00 y00 y00 y00 r00) (* (- 1) (* r r r y00 y00 q00)) (* 3 (* r r y00 y00 y00 q00)) (* (- 3) (* r y00 y00 y00 y00 q00)) ?x2004 (* (- 1) (* r y00 y00 y00)) (* (- 2) (* q r y00 y00 y00)) (* (- 1) (* q q r y00 y00 y00)) ?x2143 (* 2 (* q y00 y00 y00 r00)) (* q q y00 y00 y00 r00) (* (- 1) (* r r r y00 r00)) (* 3 (* r r y00 y00 r00)) (* (- 3) (* r y00 y00 y00 r00)) ?x2240)))
 (let (($x113 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (and (= (+ y (* (- 1) y00)) 0) $x113 (not (= ?x2276 0)))))))))))))))) :qid k!29))
 ))
 (let (($x468 (exists ((q Int) (r Int) (y Int) )(! (let ((?x81 (* (- 1) y00)))
 (let ((?x1205 (+ r ?x81)))
 (let ((?x469 (+ 1 q)))
 (let ((?x379 (+ (* r00 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205 ?x1205)) (* q00 y00 ?x1205 ?x1205) (* q00 y00 y00 y00 y00 ?x469 ?x469) (* y00 ?x1205 ?x1205 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 y00 ?x469 ?x469 ?x469 ?x469 ?x1205 ?x1205)) (* (- 1) (* ?x1205 ?x1205 ?x1205)) (* (- 1) (* y00 ?x469 ?x1205 ?x1205)) (* y00 y00 ?x469 ?x1205 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 y00 ?x469 ?x469 ?x469)) (* q00 y00 y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205) (* r00 y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205) (* (- 1) (* q00 y00 y00 ?x1205 ?x1205 ?x1205)) (* (- 1) (* y00 y00 y00 ?x469 ?x469 ?x1205)) (* r00 y00 y00 y00 ?x469 ?x469) (* (- 1) (* r00 y00 ?x1205 ?x1205 ?x1205)))))
 (let (($x1214 (not (= ?x379 0))))
 (let (($x504 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x504 $x1214))))))) :qid k!29))
 ))
 (let ((?x1347 (lambda ((q Int) (r Int) (y Int) )(let ((?x2240 (* y00 y00 y00 y00 r00)))
 (let ((?x2143 (* y00 y00 y00 r00)))
 (let ((?x2004 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1862 (* y00 y00 y00 y00 y00 r00)))
 (let ((?x1630 (* y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x1683 (* (- 2) (* q q q r y00 y00 y00 y00 y00 q00))))
 (let ((?x1050 (* (- 1) (* q q q q y00 y00 y00 y00 y00 y00))))
 (let ((?x1087 (* 2 (* q q q q r y00 y00 y00 y00 y00))))
 (let ((?x606 (* y00 y00 y00 y00 q00)))
 (let ((?x578 (* y00 y00 y00 q00)))
 (let ((?x117 (* y00 y00 r00)))
 (let ((?x2276 (+ (* r r r00) (* (- 2) (* r y00 r00)) ?x117 (* (- 1) (* r r r y00 y00 y00)) (* (- 3) (* q r r r y00 y00 y00)) (* (- 3) (* q q r r r y00 y00 y00)) (* (- 1) (* q q q r r r y00 y00 y00)) (* 2 (* r r y00 y00 y00 y00)) (* 5 (* q r r y00 y00 y00 y00)) (* 3 (* q q r r y00 y00 y00 y00)) (* (- 1) (* q q q r r y00 y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00 y00)) (* (- 1) (* q r y00 y00 y00 y00 y00)) (* 3 (* q q r y00 y00 y00 y00 y00)) (* 5 (* q q q r y00 y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00 y00 y00)) (* (- 3) (* q q y00 y00 y00 y00 y00 y00)) (* (- 3) (* q q q y00 y00 y00 y00 y00 y00)) (* r r y00 q00) (* (- 2) (* r y00 y00 q00)) ?x578 ?x606 (* 2 (* q y00 y00 y00 y00 q00)) (* q q y00 y00 y00 y00 q00) (* r r r r y00) (* (- 3) (* r r r y00 y00)) (* 3 (* r r y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00)) (* (- 1) (* q q q q r r y00 y00 y00 y00)) ?x1087 ?x1050 (* (- 1) (* r r r)) (* 2 (* r r y00)) (* (- 1) (* r y00 y00)) (* (- 1) (* q r r y00)) (* 2 (* q r y00 y00)) (* (- 1) (* q y00 y00 y00)) (* q r r r y00 y00) (* (- 3) (* q r r y00 y00 y00)) (* 3 (* q r y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00)) (* (- 2) (* q q y00 y00 y00 y00)) (* (- 1) (* q q q y00 y00 y00 y00)) (* r r y00 y00 y00 y00 q00) (* 3 (* q r r y00 y00 y00 y00 q00)) (* 3 (* q q r r y00 y00 y00 y00 q00)) (* q q q r r y00 y00 y00 y00 q00) (* (- 2) (* r y00 y00 y00 y00 y00 q00)) (* (- 6) (* q r y00 y00 y00 y00 y00 q00)) (* (- 6) (* q q r y00 y00 y00 y00 y00 q00)) ?x1683 ?x1630 (* 3 (* q y00 y00 y00 y00 y00 y00 q00)) (* 3 (* q q y00 y00 y00 y00 y00 y00 q00)) (* q q q y00 y00 y00 y00 y00 y00 q00) (* r r y00 y00 y00 r00) (* 3 (* q r r y00 y00 y00 r00)) (* 3 (* q q r r y00 y00 y00 r00)) (* q q q r r y00 y00 y00 r00) (* (- 2) (* r y00 y00 y00 y00 r00)) (* (- 6) (* q r y00 y00 y00 y00 r00)) (* (- 6) (* q q r y00 y00 y00 y00 r00)) (* (- 2) (* q q q r y00 y00 y00 y00 r00)) ?x1862 (* 3 (* q y00 y00 y00 y00 y00 r00)) (* 3 (* q q y00 y00 y00 y00 y00 r00)) (* q q q y00 y00 y00 y00 y00 r00) (* (- 1) (* r r r y00 y00 q00)) (* 3 (* r r y00 y00 y00 q00)) (* (- 3) (* r y00 y00 y00 y00 q00)) ?x2004 (* (- 1) (* r y00 y00 y00)) (* (- 2) (* q r y00 y00 y00)) (* (- 1) (* q q r y00 y00 y00)) ?x2143 (* 2 (* q y00 y00 y00 r00)) (* q q y00 y00 y00 r00) (* (- 1) (* r r r y00 r00)) (* 3 (* r r y00 y00 r00)) (* (- 3) (* r y00 y00 y00 r00)) ?x2240)))
 (let (($x113 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x131 (and (= (+ y (* (- 1) y00)) 0) $x113 (not (= ?x2276 0)))))
 (let ((?x81 (* (- 1) y00)))
 (let ((?x1205 (+ r ?x81)))
 (let ((?x469 (+ 1 q)))
 (let ((?x379 (+ (* r00 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205 ?x1205)) (* q00 y00 ?x1205 ?x1205) (* q00 y00 y00 y00 y00 ?x469 ?x469) (* y00 ?x1205 ?x1205 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 y00 ?x469 ?x469 ?x469 ?x469 ?x1205 ?x1205)) (* (- 1) (* ?x1205 ?x1205 ?x1205)) (* (- 1) (* y00 ?x469 ?x1205 ?x1205)) (* y00 y00 ?x469 ?x1205 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 y00 ?x469 ?x469 ?x469)) (* q00 y00 y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205) (* r00 y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205) (* (- 1) (* q00 y00 y00 ?x1205 ?x1205 ?x1205)) (* (- 1) (* y00 y00 y00 ?x469 ?x469 ?x1205)) (* r00 y00 y00 y00 ?x469 ?x469) (* (- 1) (* r00 y00 ?x1205 ?x1205 ?x1205)))))
 (let (($x1214 (not (= ?x379 0))))
 (let (($x504 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x375 (and (= (+ y00 (* (- 1) y)) 0) $x504 $x1214)))
 (rewrite (= $x375 $x131))))))))))))))))))))))))
 ))
 (let (($x1137 (exists ((q Int) (r Int) (y Int) )(! (let ((?x81 (* (- 1) y00)))
 (let ((?x1205 (+ r ?x81)))
 (let ((?x469 (+ 1 q)))
 (let ((?x379 (+ (* r00 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205 ?x1205)) (* q00 y00 ?x1205 ?x1205) (* q00 y00 y00 y00 y00 ?x469 ?x469) (* y00 ?x1205 ?x1205 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 y00 ?x469 ?x469 ?x469 ?x469 ?x1205 ?x1205)) (* (- 1) (* ?x1205 ?x1205 ?x1205)) (* (- 1) (* y00 ?x469 ?x1205 ?x1205)) (* y00 y00 ?x469 ?x1205 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 y00 ?x469 ?x469 ?x469)) (* q00 y00 y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205) (* r00 y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205) (* (- 1) (* q00 y00 y00 ?x1205 ?x1205 ?x1205)) (* (- 1) (* y00 y00 y00 ?x469 ?x469 ?x1205)) (* r00 y00 y00 y00 ?x469 ?x469) (* (- 1) (* r00 y00 ?x1205 ?x1205 ?x1205)))))
 (let (($x1214 (not (= ?x379 0))))
 (let (($x504 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x81 y) 0) $x504 $x1214))))))) :qid k!29))
 ))
 (let ((?x500 (lambda ((q Int) (r Int) (y Int) )(let ((?x81 (* (- 1) y00)))
 (let ((?x1205 (+ r ?x81)))
 (let ((?x469 (+ 1 q)))
 (let ((?x379 (+ (* r00 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205 ?x1205)) (* q00 y00 ?x1205 ?x1205) (* q00 y00 y00 y00 y00 ?x469 ?x469) (* y00 ?x1205 ?x1205 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 y00 ?x469 ?x469 ?x469 ?x469 ?x1205 ?x1205)) (* (- 1) (* ?x1205 ?x1205 ?x1205)) (* (- 1) (* y00 ?x469 ?x1205 ?x1205)) (* y00 y00 ?x469 ?x1205 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 y00 ?x469 ?x469 ?x469)) (* q00 y00 y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205) (* r00 y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205) (* (- 1) (* q00 y00 y00 ?x1205 ?x1205 ?x1205)) (* (- 1) (* y00 y00 y00 ?x469 ?x469 ?x1205)) (* r00 y00 y00 y00 ?x469 ?x469) (* (- 1) (* r00 y00 ?x1205 ?x1205 ?x1205)))))
 (let (($x1214 (not (= ?x379 0))))
 (let (($x504 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x375 (and (= (+ y00 (* (- 1) y)) 0) $x504 $x1214)))
 (let (($x472 (and (= (+ ?x81 y) 0) $x504 $x1214)))
 (rewrite (= $x472 $x375)))))))))))
 ))
 (let (($x76 (exists ((q Int) (r Int) (y Int) )(! (let ((?x42 (- r y00)))
 (let ((?x44 (+ q 1)))
 (let ((?x46 (- (* ?x42 ?x42 r00) (* ?x44 ?x44 ?x44 ?x42 ?x42 ?x42 y00 y00 y00))))
 (let ((?x50 (+ ?x46 (* q00 ?x42 ?x42 y00) (* ?x44 ?x44 q00 y00 y00 y00 y00) (* ?x42 ?x42 ?x42 ?x42 y00))))
 (let ((?x55 (- (- ?x50 (* ?x44 ?x44 ?x44 ?x44 ?x42 ?x42 y00 y00 y00 y00)) (* ?x42 ?x42 ?x42))))
 (let ((?x58 (+ (- ?x55 (* ?x44 ?x42 ?x42 y00)) (* ?x44 ?x42 ?x42 ?x42 y00 y00))))
 (let ((?x63 (+ (- ?x58 (* ?x44 ?x44 ?x44 y00 y00 y00 y00)) (* ?x44 ?x44 ?x44 q00 ?x42 ?x42 y00 y00 y00 y00) (* ?x44 ?x44 ?x44 ?x42 ?x42 r00 y00 y00 y00))))
 (let ((?x67 (- (- ?x63 (* q00 ?x42 ?x42 ?x42 y00 y00)) (* ?x44 ?x44 ?x42 y00 y00 y00))))
 (let ((?x71 (- (+ ?x67 (* ?x44 ?x44 r00 y00 y00 y00)) (* ?x42 ?x42 ?x42 r00 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x71 0))))))))))))) :qid k!29))
 ))
 (let ((?x1110 (lambda ((q Int) (r Int) (y Int) )(let ((?x81 (* (- 1) y00)))
 (let ((?x1205 (+ r ?x81)))
 (let ((?x469 (+ 1 q)))
 (let ((?x379 (+ (* r00 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205 ?x1205)) (* q00 y00 ?x1205 ?x1205) (* q00 y00 y00 y00 y00 ?x469 ?x469) (* y00 ?x1205 ?x1205 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 y00 ?x469 ?x469 ?x469 ?x469 ?x1205 ?x1205)) (* (- 1) (* ?x1205 ?x1205 ?x1205)) (* (- 1) (* y00 ?x469 ?x1205 ?x1205)) (* y00 y00 ?x469 ?x1205 ?x1205 ?x1205) (* (- 1) (* y00 y00 y00 y00 ?x469 ?x469 ?x469)) (* q00 y00 y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205) (* r00 y00 y00 y00 ?x469 ?x469 ?x469 ?x1205 ?x1205) (* (- 1) (* q00 y00 y00 ?x1205 ?x1205 ?x1205)) (* (- 1) (* y00 y00 y00 ?x469 ?x469 ?x1205)) (* r00 y00 y00 y00 ?x469 ?x469) (* (- 1) (* r00 y00 ?x1205 ?x1205 ?x1205)))))
 (let (($x1214 (not (= ?x379 0))))
 (let (($x504 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x472 (and (= (+ ?x81 y) 0) $x504 $x1214)))
 (let ((?x42 (- r y00)))
 (let ((?x44 (+ q 1)))
 (let ((?x46 (- (* ?x42 ?x42 r00) (* ?x44 ?x44 ?x44 ?x42 ?x42 ?x42 y00 y00 y00))))
 (let ((?x50 (+ ?x46 (* q00 ?x42 ?x42 y00) (* ?x44 ?x44 q00 y00 y00 y00 y00) (* ?x42 ?x42 ?x42 ?x42 y00))))
 (let ((?x55 (- (- ?x50 (* ?x44 ?x44 ?x44 ?x44 ?x42 ?x42 y00 y00 y00 y00)) (* ?x42 ?x42 ?x42))))
 (let ((?x58 (+ (- ?x55 (* ?x44 ?x42 ?x42 y00)) (* ?x44 ?x42 ?x42 ?x42 y00 y00))))
 (let ((?x63 (+ (- ?x58 (* ?x44 ?x44 ?x44 y00 y00 y00 y00)) (* ?x44 ?x44 ?x44 q00 ?x42 ?x42 y00 y00 y00 y00) (* ?x44 ?x44 ?x44 ?x42 ?x42 r00 y00 y00 y00))))
 (let ((?x67 (- (- ?x63 (* q00 ?x42 ?x42 ?x42 y00 y00)) (* ?x44 ?x44 ?x42 y00 y00 y00))))
 (let ((?x71 (- (+ ?x67 (* ?x44 ?x44 r00 y00 y00 y00)) (* ?x42 ?x42 ?x42 r00 y00))))
 (let (($x75 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x71 0))))))
 (rewrite (= $x75 $x472))))))))))))))))))))
 ))
 (let ((@x77 (asserted $x76)))
 (let ((@x332 (mp (mp @x77 (quant-intro (proof-bind ?x1110) (= $x76 $x1137)) $x1137) (rewrite (= $x1137 $x1137)) $x1137)))
 (let ((@x362 (mp (mp @x332 (quant-intro (proof-bind ?x500) (= $x1137 $x468)) $x468) (quant-intro (proof-bind ?x1347) (= $x468 $x88)) $x88)))
 (let ((@x2318 (mp (mp~ @x362 (sk (~ $x88 $x1186)) $x1186) (rewrite (= $x1186 $x1496)) $x1496)))
 (let ((@x2297 (and-elim @x2318 $x2313)))
 (let ((@x1531 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2313) $x2302)) @x2297 $x2302)))
 (let (($x2303 (>= ?x2312 0)))
 (let ((@x1539 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2313) $x2303)) @x2297 $x2303)))
 (let (($x2299 (<= ?x2289 0)))
 (let ((@x1233 (and-elim @x2318 $x2290)))
 (let ((@x1574 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2290) $x2299)) @x1233 $x2299)))
 (let (($x2301 (>= ?x2289 0)))
 (let ((@x2059 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2290) $x2301)) @x1233 $x2301)))
 (let (($x1984 (not (<= ?x95 0))))
 (let (($x2305 (>= ?x95 0)))
 (let ((@x2270 (lemma ((_ th-lemma arith) (hypothesis (not $x2305)) @x2059 @x1574 @x1539 @x1531 false) $x2305)))
 (let ((@x1232 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1458 $x1984 (not $x2305))) (and-elim @x2318 $x1200) (or $x1984 (not $x2305)))))
 ((_ th-lemma arith) (unit-resolution @x1232 @x2270 $x1984) @x2059 @x1574 @x1539 @x1531 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        16
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-grobner             2
 :arith-max-min             700
 :arith-nonlinear-bounds    12
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-pivots              3
 :arith-tableau-max-columns 101
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                3.91
 :memory                    3.33
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1420896
 :num-checks                1
 :propagations              6
 :rlimit-count              10301
 :time                      0.01
 :total-time                0.02)
