unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x15660 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 8) r!2) (* 4 (* r!2 d!1)) (* (- 1) (* q!3 d!1 d!1)) (* (- 4) (* x!0 d!1)) (* 2 (* q!3 d!1)))))
 (let (($x3244 (<= ?x15660 0)))
 (let (($x15662 (= ?x15660 0)))
 (let ((?x15161 (* d00 x00 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1 d!1)))
 (let ((?x14770 (* x!0 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x14716 (* 24 (* d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1))))
 (let ((?x14526 (* d00 d00 q00 x!0 x!0 x!0 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x14457 (* d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x9600 (* 2 r!2)))
 (let ((?x12002 (* (- 1) x!0)))
 (let ((?x3203 (+ ?x12002 ?x9600 q!3)))
 (let ((?x11939 (+ 2 d!1)))
 (let ((?x14961 (* 96 (* d00 x00 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1))))
 (let ((?x14964 (* 4 (* d00 r00 ?x11939 ?x11939 ?x3203 ?x3203 ?x3203 r!2 q!3 q!3))))
 (let ((?x14424 (* 48 (* r00 d00 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1))))
 (let ((?x13339 (* x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3 d!1)))
 (let ((?x13172 (* d00 d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x14950 (* 8 (* r00 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1 d!1))))
 (let ((?x14422 (* (- 96) (* r00 d00 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1))))
 (let ((?x14954 (* (- 4) (* d00 d00 q00 r!2 q!3 q!3 q!3 q!3 q!3 d!1))))
 (let ((?x14425 (* 32 (* r00 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1 d!1))))
 (let ((?x12413 (* d00 x00 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1 d!1)))
 (let ((?x14428 (* 96 (* d00 x00 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1))))
 (let ((?x14946 (* (- 12) (* d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1))))
 (let ((?x11769 (* d00 d00 q00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x11740 (* d00 d00 q00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x11619 (* d00 d00 q00 x!0 x!0 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x11569 (* d00 d00 q00 x!0 r!2 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x14936 (* (- 24) (* d00 d00 q00 r!2 r!2 q!3 q!3 q!3 q!3 d!1))))
 (let ((?x14935 (* (- 4) (* ?x11939 ?x11939 ?x11939 ?x11939 ?x3203 ?x3203 r!2 r!2 r!2 r!2 q!3))))
 (let ((?x10790 (* x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x10693 (* r00 d00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x10650 (* d00 x00 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x14930 (* 24 (* d00 x00 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1))))
 (let ((?x10274 (* r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3 q!3 d!1)))
 (let ((?x10272 (* r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x14926 (* (- 352) (* x!0 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x10055 (* d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x10052 (* x!0 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1)))
 (let ((?x10047 (* x!0 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x10046 (* x!0 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1)))
 (let ((?x14628 (* (- 32) (* r00 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1 d!1))))
 (let ((?x10018 (* x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x14629 (* (- 96) (* d00 x00 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1))))
 (let ((?x14916 (* 4 (* ?x11939 ?x11939 ?x11939 ?x11939 ?x3203 ?x3203 ?x3203 r!2 r!2 r!2 q!3))))
 (let ((?x14915 (* 2 (* ?x11939 ?x11939 ?x11939 ?x11939 ?x3203 ?x3203 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x9996 (* d00 x00 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x14704 (* (- 24) (* d00 d00 q00 x!0 x!0 r!2 r!2 q!3 q!3 d!1))))
 (let ((?x9983 (* x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 d!1)))
 (let ((?x9968 (* d00 x00 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1 d!1)))
 (let ((?x9961 (* x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 d!1)))
 (let ((?x9953 (* d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x14620 (* 24 (* d00 d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 d!1))))
 (let ((?x9913 (* d00 d00 q00 x!0 r!2 r!2 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x14908 (* 48 (* d00 d00 q00 x!0 r!2 r!2 q!3 q!3 q!3 d!1))))
 (let ((?x14904 (* (- 36) (* d00 d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 d!1))))
 (let ((?x9894 (* d00 d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x9892 (* d00 d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x14905 (* (- 12) (* d00 d00 q00 x!0 x!0 r!2 q!3 q!3 q!3 d!1))))
 (let ((?x9875 (* d00 x00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x9865 (* d00 x00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x14901 (* (- 64) (* r00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x14898 (* 8 (* r00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x9853 (* d00 x00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x14611 (* (- 48) (* r00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x14615 (* 96 (* r00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3))))
 (let ((?x6314 (* (- 96) (* r00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3))))
 (let ((?x14897 (* (- 24) (* r00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3))))
 (let ((?x14896 (* 24 (* r00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x14610 (* (- 48) (* r00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x14895 (* 96 (* r00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x9818 (* d00 x00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x14890 (* (- 8) (* r00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x9804 (* d00 x00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x14889 (* 16 (* d00 d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 d!1))))
 (let ((?x9794 (* d00 d00 q00 x!0 x!0 r!2 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x9681 (* d00 d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1 d!1)))
 (let ((?x14887 (* 12 (* d00 d00 q00 x!0 r!2 q!3 q!3 q!3 q!3 d!1))))
 (let ((?x14881 (* (- 1) (* d00 d00 q00 r!2 q!3 q!3 q!3 q!3 d!1 d!1))))
 (let ((?x14880 (* 352 (* r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3))))
 (let ((?x9635 (* d00 x00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x9599 (* r00 d00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x9583 (* d00 x00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x9578 (* r00 d00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x9565 (* r00 d00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x14591 (* (- 48) (* d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1))))
 (let ((?x14858 (* (- 4) (* d00 x00 ?x11939 ?x11939 ?x3203 ?x3203 ?x3203 r!2 q!3 q!3))))
 (let ((?x9506 (* x!0 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 d!1)))
 (let ((?x9488 (* d00 d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x9442 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1 d!1)))
 (let ((?x9438 (* d00 d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x14574 (* (- 24) (* r00 d00 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1))))
 (let ((?x9199 (* x!0 x!0 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 d!1)))
 (let ((?x9198 (* x!0 x!0 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3 d!1)))
 (let ((?x9195 (* d00 d00 q00 r!2 r!2 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x14833 (* (- 2) (* d00 d00 q00 r!2 r!2 q!3 q!3 q!3 d!1 d!1))))
 (let ((?x14565 (* (- 48) (* d00 d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x14566 (* (- 16) (* r00 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1 d!1))))
 (let ((?x9143 (* x!0 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1)))
 (let ((?x9139 (* d00 x00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x9123 (* d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1 d!1)))
 (let ((?x14826 (* 12 (* d00 d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x9041 (* d00 d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1 d!1)))
 (let ((?x9028 (* d00 d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x9019 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x14825 (* 48 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x9012 (* d00 d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x9006 (* d00 d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x14824 (* (- 96) (* r00 d00 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1))))
 (let ((?x8990 (* d00 d00 q00 r!2 q!3 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x8888 (* d00 x00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x14561 (* (- 12) (* d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1))))
 (let ((?x14816 (* (- 48) (* d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1))))
 (let ((?x8684 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x8308 (* r00 d00 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x14808 (* 8 (* r00 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1 d!1))))
 (let ((?x7589 (* d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1 d!1)))
 (let ((?x14806 (* (- 4) (* ?x11939 ?x3203 ?x3203 ?x3203 ?x3203 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x7513 (* r00 d00 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x6996 (* d00 d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x14796 (* (- 32) (* x!0 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3))))
 (let ((?x14803 (* (- 1) (* x!0 r!2 q!3 q!3 q!3 q!3 d!1 d!1 d!1 d!1))))
 (let ((?x5862 (* ?x11939 ?x11939 ?x11939 ?x11939 ?x11939 ?x3203 ?x3203 r!2 r!2 r!2 q!3 q!3)))
 (let ((?x4494 (* d00 d00 q00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x4111 (* d00 x00 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x4026 (* r00 d00 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x3938 (* d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1 d!1)))
 (let ((?x3614 (* r00 d00 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1 d!1)))
 (let ((?x14779 (* 96 (* r00 d00 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1))))
 (let ((?x3601 (* r00 d00 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1 d!1)))
 (let ((?x14471 (* (- 24) (* r00 d00 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1))))
 (let ((?x3590 (* r00 d00 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1 d!1)))
 (let ((?x14771 (* 2 (* d00 q00 ?x11939 ?x11939 ?x3203 ?x3203 ?x3203 r!2 q!3 q!3))))
 (let ((?x3569 (* d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x3568 (* r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x3561 (* d00 d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x3558 (* d00 q00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x3546 (* d00 q00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x3540 (* x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x3538 (* r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 d!1)))
 (let ((?x3481 (* d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x3478 (* d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x3470 (* r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x3450 (* d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x14510 (* 240 (* x!0 x!0 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x14515 (* 32 (* r00 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1 d!1))))
 (let ((?x3409 (* d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x3316 (* r00 d00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x3276 (* r00 d00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x3275 (* d00 d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x12447 (* (- 32) (* x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x3262 (* r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3 d!1)))
 (let ((?x3261 (* r00 d00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x3230 (* r00 d00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x3199 (* r00 d00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x5030 (* 192 (* r!2 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x3142 (* x!0 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x3139 (* d00 q00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x3098 (* r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x3078 (* r00 d00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x3735 (* 240 (* r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x8477 (* (- 480) (* x!0 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3))))
 (let ((?x3030 (* d00 q00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x3028 (* r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1)))
 (let ((?x3027 (* r!2 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 d!1)))
 (let ((?x1610 (* 48 (* x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x10319 (* (- 72) (* x!0 x!0 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x9397 (* 72 (* r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x2991 (* d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x14398 (* (- 216) (* x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x10939 (* 8 (* r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3 q!3 q!3))))
 (let ((?x10936 (* 8 (* x!0 x!0 x!0 x!0 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x14985 (* 216 (* x!0 x!0 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3))))
 (let ((?x2815 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x5421 (* 24 (* d00 x00 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1))))
 (let ((?x7118 (* 2 (* r!2 r!2 q!3 q!3 q!3 q!3 d!1 d!1 d!1 d!1))))
 (let ((?x13504 (* 48 (* d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1))))
 (let ((?x2970 (* 4 (* d00 d00 q00 x!0 x!0 x!0 r!2 q!3 q!3 d!1))))
 (let ((?x1031 (* d00 x00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3)))
 (let ((?x703 (* d00 d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x6313 (* (- 48) (* d00 x00 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1))))
 (let ((?x14975 (+ (* 4 (* d00 d00 q00 x!0 r!2 q!3 q!3 q!3)) ?x6313 (* 64 (* r!2 r!2 r!2 q!3 q!3 q!3)) (* (- 6) ?x703) (* (- 48) ?x1031) (* (- 4) (* d00 d00 q00 r!2 q!3 q!3 q!3 q!3)) (* 64 (* r00 r!2 r!2 r!2 q!3 q!3 q!3)) (* (- 4) (* d00 d00 q00 r!2 q!3 q!3 q!3 q!3 d!1)) (* 96 (* r00 d00 x!0 r!2 r!2 r!2 q!3 q!3 d!1)) ?x2970 ?x13504 ?x7118 (* (- 32) (* d00 x00 r!2 r!2 q!3 q!3 q!3)) (* ?x11939 ?x11939 ?x11939 ?x11939 ?x3203 ?x3203 ?x3203 r!2 q!3 q!3 q!3) (* (- 4) (* r00 d00 x!0 r!2 q!3 q!3 q!3 d!1 d!1)) (* 48 (* r00 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1)) (* 16 (* d00 x00 x!0 r!2 q!3 q!3 q!3 d!1)) ?x5421 (* 2 (* r!2 q!3 q!3 q!3 q!3 q!3 d!1 d!1 d!1)) (* 32 (* r!2 r!2 q!3 q!3 q!3 q!3)) (* (- 16) (* r00 d00 x!0 r!2 q!3 q!3 q!3 d!1)) (* 8 (* r00 d00 r!2 r!2 q!3 q!3 q!3 d!1 d!1)) (* (- 8) ?x2815) ?x14985 ?x10936 ?x10939 ?x14398 (* (- 32) (* r00 d00 r!2 r!2 r!2 q!3 q!3 q!3)) (* 2 ?x2991) ?x9397 ?x10319 ?x1610 (* 32 (* d00 x00 r!2 r!2 r!2 q!3 q!3 q!3)) (* (- 64) (* r00 r!2 r!2 q!3 q!3 q!3)) (* (- 128) (* d00 x00 x!0 r!2 r!2 r!2 r!2 q!3)) (* (- 4) (* x!0 x!0 r!2 q!3 q!3 q!3 d!1 d!1 d!1)) (* (- 96) (* r00 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1)) (* 128 (* r00 d00 x!0 r!2 r!2 r!2 r!2 q!3)) (* 32 ?x3027) (* 64 ?x3028) (* 12 ?x3030) (* (- 64) (* d00 x00 x!0 r!2 r!2 r!2 q!3 q!3)) (* 32 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 q!3)) (* 64 (* r00 d00 x!0 r!2 r!2 r!2 q!3 q!3)) ?x8477 (* d00 d00 q00 x!0 r!2 q!3 q!3 q!3 d!1 d!1) ?x3735 (* (- 48) ?x3078) ?x3098 (* 4 (* d00 d00 q00 x!0 r!2 q!3 q!3 q!3 d!1)) (* (- 16) (* r!2 r!2 q!3 q!3 q!3 q!3 d!1 d!1)) (* 32 (* d00 x00 x!0 x!0 r!2 r!2 r!2 q!3)) (* 128 (* d00 x00 r!2 r!2 r!2 r!2 r!2 q!3)) (* 16 ?x3139) (* (- 12) ?x3142) ?x5030 (* 16 (* x!0 r!2 r!2 q!3 q!3 q!3 d!1)) (* 32 ?x3199) (* (- 40) (* d00 d00 q00 r!2 r!2 r!2 q!3 q!3 q!3)) (* (- 24) (* d00 d00 q00 x!0 x!0 r!2 r!2 q!3 q!3)) (* (- 32) (* d00 d00 q00 x!0 r!2 r!2 r!2 r!2 q!3)) (* 4 (* d00 d00 q00 x!0 x!0 x!0 r!2 q!3 q!3)) (* 24 ?x3230) (* 48 ?x3261) (* 16 ?x3262) ?x12447 (* (- 1) ?x3275) (* 24 ?x3276) (* 12 ?x3316) (* 8 (* d00 q00 r!2 q!3 q!3 q!3 q!3)) (* (- 24) ?x3409) (* (- 128) (* r00 d00 r!2 r!2 r!2 r!2 r!2 q!3)) ?x14515 (* 32 (* r00 x!0 r!2 q!3 q!3 q!3)) (* (- 32) (* r00 d00 x!0 x!0 r!2 r!2 r!2 q!3)) ?x14510 (* (- 384) (* r00 x!0 r!2 r!2 r!2 r!2 q!3 d!1)) (* 24 ?x3450) (* 40 (* x!0 r!2 r!2 q!3 q!3 q!3 d!1 d!1)) (* 192 (* r00 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1)) (* 12 ?x3470) (* 32 (* d00 d00 q00 x!0 r!2 r!2 r!2 q!3 q!3)) (* 12 ?x3478) (* (- 6) ?x3481) (* (- 12) (* d00 d00 q00 x!0 x!0 r!2 q!3 q!3 q!3)) (* (- 32) (* r00 r!2 q!3 q!3 q!3 q!3)) (* 16 (* d00 q00 r!2 r!2 q!3 q!3 q!3)) (* (- 8) (* d00 q00 x!0 r!2 q!3 q!3 q!3)) (* 8 (* d00 d00 q00 x!0 x!0 r!2 r!2 r!2 q!3)) (* 48 ?x3538) (* 3 ?x3540) (* (- 2) ?x3546) (* (- 8) (* r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1 d!1)) (* (- 24) ?x3558) (* (- 3) ?x3561) (* 8 ?x3568) (* 6 ?x3569) ?x14771 (* 32 (* r00 x!0 r!2 q!3 q!3 q!3 d!1)) (* 8 (* ?x11939 ?x11939 ?x3203 ?x3203 ?x3203 ?x3203 r!2 q!3 q!3)) (* (- 4) ?x3590) ?x14471 (* (- 48) (* r00 d00 x!0 x!0 r!2 r!2 r!2 q!3 d!1)) (* 16 ?x3601) ?x14779 (* 192 (* r00 d00 x!0 r!2 r!2 r!2 r!2 q!3 d!1)) (* (- 16) ?x3614) (* 96 (* d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 d!1)) (* 8 ?x3938) (* (- 192) (* r00 d00 r!2 r!2 r!2 r!2 r!2 q!3 d!1)) (* 8 ?x4026) (* (- 8) ?x4111) (* 48 (* r00 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1)) (* 4 (* d00 x00 x!0 r!2 q!3 q!3 q!3 d!1 d!1)) (* 96 (* r00 x!0 x!0 r!2 r!2 r!2 q!3 d!1)) (* 12 ?x4494) (* (- 192) (* r00 x!0 r!2 r!2 r!2 q!3 q!3 d!1)) (* (- 32) (* x!0 r!2 r!2 q!3 q!3 q!3)) (* r!2 q!3 q!3 q!3 q!3 q!3 d!1 d!1 d!1 d!1) (* (- 24) (* d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 d!1)) (* (- 1) ?x5862) ?x14803 (* (- 2) (* ?x11939 ?x11939 ?x11939 ?x3203 ?x3203 ?x3203 r!2 q!3 q!3 q!3)) ?x14796 (* (- 8) (* r00 ?x11939 ?x11939 ?x3203 ?x3203 ?x3203 r!2 q!3 q!3)) (* 16 (* r00 d00 r!2 q!3 q!3 q!3 q!3)) (* 12 ?x6996) (* (- 8) (* r!2 q!3 q!3 q!3 q!3 q!3 d!1)) (* (- 16) (* r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1)) (* (- 4) ?x7513) ?x14806 (* (- 2) ?x7589) (* 32 (* r00 d00 r!2 r!2 q!3 q!3 q!3 d!1)) ?x14808 (* (- 16) ?x8308) (* (- 48) (* r00 d00 r!2 r!2 r!2 q!3 q!3 q!3 d!1)) (* (- 12) ?x8684) (* 32 (* r!2 r!2 r!2 q!3 q!3 q!3 d!1)) ?x14816 ?x14561 (* (- 24) ?x8888) (* (- 4) (* d00 d00 q00 r!2 q!3 q!3 q!3 q!3 q!3)) (* (- 1) ?x8990) ?x14824 (* (- 2) ?x9006) ?x9012 (* (- 16) (* d00 q00 r!2 r!2 r!2 q!3 q!3 q!3)) ?x14825 (* 24 ?x9019) (* (- 24) ?x9028) (* (- 4) ?x9041) ?x14826 (* (- 2) (* d00 q00 x!0 r!2 q!3 q!3 q!3 d!1 d!1)) (* 256 (* r00 r!2 r!2 r!2 r!2 q!3 q!3)) (* 256 (* r00 r!2 r!2 r!2 r!2 r!2 q!3)) (* (- 8) ?x9123) (* (- 64) (* d00 q00 r!2 r!2 r!2 r!2 r!2 q!3)) (* (- 16) (* d00 q00 x!0 x!0 r!2 r!2 r!2 q!3)) (* (- 12) ?x9139) (* (- 8) (* d00 d00 q00 r!2 r!2 q!3 q!3 q!3 d!1)) (* (- 72) ?x9143) ?x14566 ?x14565 ?x14833 (* (- 4) (* ?x11939 ?x11939 ?x11939 ?x3203 ?x3203 ?x3203 ?x3203 r!2 q!3 q!3)) (* (- 6) ?x9195) (* (- 4) ?x9198) (* 24 ?x9199) (* 2 (* d00 q00 r!2 q!3 q!3 q!3 q!3 d!1 d!1)) (* 8 (* d00 q00 r!2 q!3 q!3 q!3 q!3 d!1)) (* 96 (* r00 r!2 r!2 r!2 q!3 q!3 q!3 d!1)) (* (- 96) (* d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 d!1)) ?x14574 (* 4 ?x9438) (* 4 ?x9442) (* 6 ?x9488) (* (- 32) (* r00 r!2 q!3 q!3 q!3 q!3 d!1)) (* 8 (* r00 x!0 r!2 q!3 q!3 q!3 d!1 d!1)) (* (- 8) (* r00 r!2 q!3 q!3 q!3 q!3 d!1 d!1)) (* (- 16) (* r00 r!2 r!2 q!3 q!3 q!3 d!1 d!1)) (* (- 64) (* r00 r!2 r!2 q!3 q!3 q!3 d!1)) (* (- 48) ?x9506) (* (- 8) (* d00 q00 x!0 r!2 q!3 q!3 q!3 d!1)) ?x14858 (* (- 16) (* r00 d00 x!0 r!2 q!3 q!3 q!3)) (* (- 16) (* d00 x00 r!2 q!3 q!3 q!3 q!3)) (* 4 (* ?x11939 ?x11939 ?x11939 ?x3203 ?x3203 ?x3203 r!2 r!2 q!3 q!3)) (* 16 (* d00 x00 x!0 r!2 q!3 q!3 q!3)) (* (- 128) (* r00 x!0 r!2 r!2 r!2 q!3 q!3)) (* (- 256) (* r00 x!0 r!2 r!2 r!2 r!2 q!3)) (* 64 (* r00 x!0 x!0 r!2 r!2 r!2 q!3)) (* 32 (* d00 q00 x!0 r!2 r!2 r!2 q!3 q!3)) ?x14591 (* (- 4) ?x9565) (* 12 (* d00 d00 q00 x!0 r!2 q!3 q!3 q!3 q!3)) (* 4 ?x9578) (* (- 24) (* d00 d00 q00 r!2 r!2 q!3 q!3 q!3 q!3)) (* (- 32) ?x9583) (* (- 12) ?x9599) (* (- 24) ?x9635) ?x14880 ?x14881 (* 48 (* d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 d!1)) ?x14887 (* 4 (* d00 q00 r!2 r!2 q!3 q!3 q!3 d!1 d!1)) (* 16 (* d00 q00 r!2 r!2 q!3 q!3 q!3 d!1)) ?x9681 (* (- 96) (* d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 d!1)) (* (- 3) ?x9794) ?x14889 (* 12 ?x9804) ?x14890 (* 4 ?x9818) ?x14895 ?x14610 ?x14896 ?x14897 ?x6314 ?x14615 ?x14611 (* 48 ?x9853) ?x14898 ?x14901 (* (- 192) (* r00 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1)) (* 48 ?x9865) (* (- 4) ?x9875) ?x14905 (* (- 6) ?x9892) (* 16 ?x9894) ?x14904 ?x14908 (* 12 ?x9913) ?x14620 (* (- 2) ?x9953) (* (- 36) ?x9961) (* (- 16) ?x9968) (* 6 ?x9983) ?x14704 (* 16 ?x9996) ?x14915 ?x14916 ?x14629 (* (- 12) ?x10018) (* 192 (* r00 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1)) ?x14628 (* 384 (* r00 r!2 r!2 r!2 r!2 r!2 q!3 d!1)) (* (- 2) ?x10046) (* (- 1) ?x10047) (* 24 ?x10052) (* 4 ?x10055) (* (- 192) (* d00 x00 x!0 r!2 r!2 r!2 r!2 q!3 d!1)) (* (- 16) (* x!0 x!0 r!2 q!3 q!3 q!3 d!1)) (* (- 16) (* x!0 x!0 r!2 q!3 q!3 q!3 d!1 d!1)) (* (- 64) (* d00 q00 r!2 r!2 r!2 r!2 q!3 q!3)) ?x14926 (* 6 ?x10272) (* 2 ?x10274) (* 64 (* d00 q00 x!0 r!2 r!2 r!2 r!2 q!3)) ?x14930 (* 4 ?x10650) (* (- 48) ?x10693) (* (- 3) ?x10790) (* (- 16) (* d00 x00 r!2 q!3 q!3 q!3 q!3 d!1)) ?x14935 ?x14936 (* 3 ?x11569) (* 48 (* d00 x00 r!2 r!2 r!2 q!3 q!3 q!3 d!1)) (* (- 6) ?x11619) (* 48 (* d00 x00 x!0 x!0 r!2 r!2 r!2 q!3 d!1)) (* (- 6) ?x11740) ?x11769 (* (- 32) (* d00 x00 r!2 r!2 q!3 q!3 q!3 d!1)) (* 48 (* d00 d00 q00 x!0 r!2 r!2 q!3 q!3 q!3)) (* (- 8) (* d00 x00 r!2 r!2 q!3 q!3 q!3 d!1 d!1)) (* 12 (* x!0 r!2 r!2 q!3 q!3 q!3 d!1 d!1 d!1)) (* 192 (* d00 x00 r!2 r!2 r!2 r!2 r!2 q!3 d!1)) (* 24 (* x!0 r!2 q!3 q!3 q!3 q!3 d!1)) ?x14946 ?x14428 (* 16 ?x12413) ?x14425 ?x14954 (* (- 4) (* r!2 q!3 q!3 q!3 q!3 q!3 d!1 d!1)) ?x14422 ?x14950 (* 3 ?x13172) (* 32 (* r00 d00 r!2 r!2 q!3 q!3 q!3)) (* (- 6) ?x13339) (* (- 4) (* d00 x00 r!2 q!3 q!3 q!3 q!3 d!1 d!1)) ?x14424 (* 2 (* x!0 r!2 q!3 q!3 q!3 q!3 d!1 d!1 d!1)) (* 20 (* x!0 r!2 q!3 q!3 q!3 q!3 d!1 d!1)) (* 16 (* r00 d00 r!2 q!3 q!3 q!3 q!3 d!1)) ?x14964 ?x14961 (* (- 192) (* r00 d00 r!2 r!2 r!2 r!2 q!3 q!3 d!1)) (* (- 128) (* r00 d00 r!2 r!2 r!2 r!2 q!3 q!3)) (* (- 8) (* ?x11939 ?x11939 ?x11939 ?x3203 ?x3203 ?x3203 r!2 r!2 r!2 q!3)) (* (- 8) ?x14457) ?x14526 (* 192 (* d00 x00 r!2 r!2 r!2 r!2 q!3 q!3 d!1)) (* 128 (* d00 x00 r!2 r!2 r!2 r!2 q!3 q!3)) ?x14716 (* 6 ?x14770) (* (- 24) (* d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 d!1)) (* 4 ?x15161) (* 384 (* r00 r!2 r!2 r!2 r!2 q!3 q!3 d!1)) (* (- 96) (* d00 x00 x!0 r!2 r!2 r!2 q!3 q!3 d!1)) (* (- 8) (* d00 d00 q00 r!2 r!2 q!3 q!3 q!3)) (* 4 (* r00 d00 r!2 q!3 q!3 q!3 q!3 d!1 d!1)))))
 (let (($x14971 (= ?x14975 0)))
 (let (($x6400 (not $x14971)))
 (let ((?x753 (* (- 1) d!1)))
 (let ((?x2950 (+ (- 2) ?x12002 ?x9600 q!3 ?x753)))
 (let ((?x5039 (+ (- 4) q!3)))
 (let ((?x3197 (* 4 (* ?x5039 ?x5039 ?x5039 ?x11939 ?x2950 ?x2950 ?x2950 r!2 r!2 r!2 r!2))))
 (let ((?x3220 (* 4 (* d00 r00 ?x5039 ?x5039 ?x5039 ?x2950 ?x2950 ?x2950 r!2 r!2 r!2))))
 (let ((?x3258 (* (- 4) (* d00 x00 ?x5039 ?x5039 ?x5039 ?x2950 ?x2950 ?x2950 r!2 r!2 r!2))))
 (let ((?x3201 (* 2 (* d00 q00 ?x5039 ?x5039 ?x5039 ?x2950 ?x2950 ?x2950 r!2 r!2 r!2))))
 (let ((?x3054 (* (- 4) (* ?x5039 ?x11939 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 r!2 r!2 r!2 r!2))))
 (let ((?x3357 (* (- 1) (* d00 d00 q00 ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 r!2))))
 (let ((?x10275 (* 4 (* ?x5039 ?x11939 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 r!2 r!2 r!2))))
 (let ((?x3048 (* (- 4) (* ?x5039 ?x5039 ?x5039 ?x11939 ?x2950 ?x2950 ?x2950 ?x2950 r!2 r!2 r!2))))
 (let ((?x3404 (* (- 2) (* d00 q00 ?x5039 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 r!2 r!2 r!2))))
 (let ((?x3410 (* (- 1) (* ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 r!2 r!2 r!2))))
 (let ((?x3100 (* d00 d00 q00 ?x5039 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 r!2 r!2 r!2)))
 (let ((?x3490 (* 4 (* d00 x00 ?x5039 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 r!2 r!2 r!2))))
 (let ((?x3074 (* d00 d00 q00 ?x5039 ?x5039 ?x5039 ?x2950 ?x2950 ?x2950 r!2 r!2 r!2)))
 (let ((?x3287 (* (- 2) (* ?x5039 ?x5039 ?x5039 ?x5039 ?x11939 ?x2950 ?x2950 ?x2950 r!2 r!2 r!2))))
 (let ((?x3491 (* (- 4) (* d00 r00 ?x5039 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 r!2 r!2 r!2))))
 (let ((?x3487 (* 2 (* ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 r!2 r!2 r!2))))
 (let ((?x3232 (+ ?x3487 (* (- 4) (* ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 ?x2950 r!2)) ?x3491 (* 2 (* d00 q00 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 r!2)) ?x3287 (* (- 1) (* d00 d00 q00 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 r!2)) (* (- 1) ?x3074) ?x3490 ?x3100 ?x3410 (* 4 (* ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x2950 r!2 r!2)) ?x3404 ?x3048 (* (- 8) (* r00 ?x5039 ?x5039 ?x5039 ?x2950 ?x2950 ?x2950 r!2 r!2 r!2)) (* ?x5039 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 r!2 r!2 r!2) (* ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 r!2) (* (- 4) (* d00 x00 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 r!2)) (* 2 (* d00 q00 ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 r!2)) ?x10275 (* 8 (* ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 ?x2950 r!2)) (* (- 2) (* ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 r!2)) (* 4 (* d00 r00 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 r!2)) (* 8 (* r00 ?x5039 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 r!2 r!2 r!2)) (* (- 4) (* ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 r!2)) (* (- 8) (* r00 ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 r!2)) ?x3357 ?x3054 (* (- 8) (* ?x5039 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 r!2 r!2 r!2)) ?x3201 (* (- 8) (* r00 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 r!2)) ?x3258 (* 8 (* ?x5039 ?x5039 ?x5039 ?x2950 ?x2950 ?x2950 ?x2950 r!2 r!2 r!2)) (* 8 (* ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 ?x2950 r!2)) ?x3220 ?x3197 (* (- 4) (* d00 x00 ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 r!2)) (* 4 (* ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 r!2 r!2)) (* 4 (* d00 r00 ?x5039 ?x5039 ?x11939 ?x11939 ?x2950 ?x2950 ?x2950 r!2)) (* (- 2) (* ?x5039 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x2950 r!2)) (* ?x5039 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x11939 ?x2950 r!2))))
 (let (($x10061 (= ?x3232 0)))
 (let ((?x1233 (* (- 2) d!1)))
 (let ((?x4332 (+ (- 4) ?x12002 ?x9600 q!3 ?x1233)))
 (let ((?x1670 (+ (- 8) q!3)))
 (let ((?x3350 (* (- 1) (* ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 r!2 r!2 r!2))))
 (let ((?x3347 (* (- 4) (* d00 r00 ?x1670 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 r!2 r!2 r!2))))
 (let ((?x3341 (* (- 4) (* d00 x00 ?x1670 ?x1670 ?x1670 ?x4332 ?x4332 ?x4332 r!2 r!2 r!2))))
 (let ((?x3354 (* 2 (* d00 q00 ?x1670 ?x1670 ?x1670 ?x4332 ?x4332 ?x4332 r!2 r!2 r!2))))
 (let ((?x3007 (* 4 (* ?x1670 ?x1670 ?x1670 ?x11939 ?x4332 ?x4332 ?x4332 r!2 r!2 r!2 r!2))))
 (let ((?x3367 (* (- 4) (* ?x1670 ?x1670 ?x1670 ?x11939 ?x4332 ?x4332 ?x4332 ?x4332 r!2 r!2 r!2))))
 (let ((?x3373 (* (- 1) (* d00 d00 q00 ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 r!2))))
 (let ((?x3375 (* (- 4) (* ?x1670 ?x11939 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 r!2 r!2 r!2 r!2))))
 (let ((?x3371 (* 2 (* ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 r!2 r!2 r!2))))
 (let ((?x3380 (* 4 (* ?x1670 ?x11939 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 r!2 r!2 r!2))))
 (let ((?x3376 (* 4 (* d00 r00 ?x1670 ?x1670 ?x1670 ?x4332 ?x4332 ?x4332 r!2 r!2 r!2))))
 (let ((?x3147 (* d00 d00 q00 ?x1670 ?x1670 ?x1670 ?x4332 ?x4332 ?x4332 r!2 r!2 r!2)))
 (let ((?x3385 (* (- 2) (* d00 q00 ?x1670 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 r!2 r!2 r!2))))
 (let ((?x3402 (* (- 2) (* ?x1670 ?x1670 ?x1670 ?x1670 ?x11939 ?x4332 ?x4332 ?x4332 r!2 r!2 r!2))))
 (let ((?x3389 (* 4 (* d00 x00 ?x1670 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 r!2 r!2 r!2))))
 (let ((?x2217 (* d00 d00 q00 ?x1670 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 r!2 r!2 r!2)))
 (let ((?x3343 (+ ?x2217 (* 8 (* ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 ?x4332 r!2)) (* 8 (* ?x1670 ?x1670 ?x1670 ?x4332 ?x4332 ?x4332 ?x4332 r!2 r!2 r!2)) (* 8 (* ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 ?x4332 r!2)) (* ?x1670 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x11939 ?x4332 r!2) ?x3389 (* (- 2) (* ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 r!2)) ?x3402 (* (- 8) (* ?x1670 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 r!2 r!2 r!2)) (* 4 (* d00 r00 ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 r!2)) (* (- 4) (* d00 x00 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 r!2)) (* (- 4) (* ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 r!2)) ?x3385 (* ?x1670 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 r!2 r!2 r!2) (* ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 r!2) (* (- 1) ?x3147) ?x3376 (* 2 (* d00 q00 ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 r!2)) (* (- 8) (* r00 ?x1670 ?x1670 ?x1670 ?x4332 ?x4332 ?x4332 r!2 r!2 r!2)) ?x3380 ?x3371 (* 4 (* ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x4332 r!2 r!2)) (* 2 (* d00 q00 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 r!2)) (* (- 8) (* r00 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 r!2)) ?x3375 ?x3373 (* (- 8) (* r00 ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 r!2)) ?x3367 (* (- 1) (* d00 d00 q00 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 r!2)) (* (- 4) (* d00 x00 ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 r!2)) ?x3007 ?x3354 (* 8 (* r00 ?x1670 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 r!2 r!2 r!2)) (* 4 (* d00 r00 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x4332 r!2)) (* 4 (* ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 r!2 r!2)) (* (- 4) (* ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x4332 ?x4332 ?x4332 ?x4332 r!2)) (* (- 2) (* ?x1670 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x4332 r!2)) ?x3341 ?x3347 ?x3350)))
 (let (($x3352 (= ?x3343 0)))
 (let ((?x8571 (+ 2 ?x12002 ?x9600 q!3 d!1)))
 (let ((?x9584 (+ 4 q!3)))
 (let ((?x3062 (* (- 4) (* ?x11939 ?x11939 ?x11939 ?x11939 ?x9584 ?x8571 ?x8571 r!2 r!2 r!2 r!2))))
 (let ((?x3057 (* 2 (* d00 q00 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2 r!2 r!2))))
 (let ((?x3466 (* d00 d00 q00 ?x11939 ?x11939 ?x11939 ?x9584 ?x8571 ?x8571 r!2 r!2 r!2)))
 (let ((?x15026 (* 2 (* ?x11939 ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x8571 ?x8571 r!2 r!2 r!2))))
 (let ((?x3295 (* 4 (* d00 r00 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2 r!2 r!2))))
 (let ((?x3289 (* (- 4) (* ?x11939 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 ?x8571 r!2 r!2 r!2))))
 (let ((?x3165 (* (- 2) (* ?x11939 ?x9584 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2 r!2 r!2))))
 (let ((?x3297 (* (- 1) (* ?x11939 ?x11939 ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x8571 ?x8571 r!2 r!2 r!2))))
 (let ((?x3122 (* d00 d00 q00 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2 r!2 r!2)))
 (let ((?x3303 (* 4 (* ?x11939 ?x11939 ?x11939 ?x11939 ?x9584 ?x8571 ?x8571 ?x8571 r!2 r!2 r!2))))
 (let ((?x2976 (* (- 2) (* d00 q00 ?x11939 ?x11939 ?x11939 ?x9584 ?x8571 ?x8571 r!2 r!2 r!2))))
 (let ((?x3310 (* (- 4) (* d00 r00 ?x11939 ?x11939 ?x11939 ?x9584 ?x8571 ?x8571 r!2 r!2 r!2))))
 (let ((?x2996 (* (- 1) (* d00 d00 q00 ?x11939 ?x11939 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2))))
 (let ((?x588 (* 4 (* ?x11939 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2 r!2 r!2 r!2))))
 (let ((?x3153 (* (- 4) (* d00 x00 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2 r!2 r!2))))
 (let ((?x3180 (* 4 (* d00 x00 ?x11939 ?x11939 ?x11939 ?x9584 ?x8571 ?x8571 r!2 r!2 r!2))))
 (let ((?x3060 (+ ?x3180 (* ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2 r!2 r!2) ?x3153 (* (- 2) (* ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x9584 ?x8571 r!2)) (* 2 (* d00 q00 ?x11939 ?x11939 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2)) (* ?x11939 ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2) ?x588 ?x2996 (* 8 (* r00 ?x11939 ?x11939 ?x11939 ?x9584 ?x8571 ?x8571 r!2 r!2 r!2)) ?x3310 ?x2976 (* (- 1) (* d00 d00 q00 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x8571 r!2)) (* (- 4) (* ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 r!2)) ?x3303 (* 2 (* d00 q00 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x8571 r!2)) (* (- 4) (* d00 x00 ?x11939 ?x11939 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2)) (* (- 1) ?x3122) ?x3297 (* (- 8) (* r00 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x8571 r!2)) ?x3165 ?x3289 (* 8 (* ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 r!2)) (* 4 (* d00 r00 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x8571 r!2)) (* (- 2) (* ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2)) ?x3295 (* 8 (* ?x11939 ?x11939 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 ?x8571 r!2)) (* (- 4) (* ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 ?x8571 r!2)) (* (- 4) (* d00 x00 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x8571 r!2)) (* 4 (* ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x8571 r!2 r!2)) (* 8 (* ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 ?x8571 r!2 r!2 r!2)) ?x15026 (* (- 8) (* r00 ?x9584 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2 r!2 r!2)) (* 4 (* d00 r00 ?x11939 ?x11939 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2)) ?x3466 (* ?x11939 ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x9584 ?x8571 r!2) (* 4 (* ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2 r!2)) (* (- 8) (* ?x11939 ?x11939 ?x11939 ?x9584 ?x8571 ?x8571 ?x8571 r!2 r!2 r!2)) (* (- 8) (* r00 ?x11939 ?x11939 ?x9584 ?x9584 ?x8571 ?x8571 ?x8571 r!2)) ?x3057 ?x3062)))
 (let (($x3323 (= ?x3060 0)))
 (let (($x3129 (not $x3323)))
 (let (($x3172 (or $x3129 (not $x3352) (not $x10061) $x6400)))
 (let (($x3299 (and $x15662 $x3172)))
 (let ((?x12248 (* 24 (* q!3 q!3 r!2 r!2 x!0 x!0 d00 d00 q00 d!1))))
 (let ((?x12245 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1)))
 (let ((?x14165 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 q00 d!1 d!1 d!1)))
 (let ((?x10087 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1 d!1)))
 (let ((?x10086 (* (- 96) (* q!3 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1))))
 (let ((?x8402 (* 48 (* q!3 q!3 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1))))
 (let ((?x1412 (* (- 96) (* q!3 q!3 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1))))
 (let ((?x3728 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 x00 d!1 d!1 d!1)))
 (let ((?x10792 (* (- 24) (* q!3 q!3 q!3 r!2 r!2 r!2 d00 x00 d!1 d!1))))
 (let ((?x9259 (* q!3 q!3 q!3 q!3 r!2 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x2393 (* q!3 q!3 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1 d!1)))
 (let ((?x15603 (* 12 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 q00 d!1 d!1))))
 (let ((?x4793 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1 d!1)))
 (let ((?x8818 (+ q!3 ?x9600 ?x12002)))
 (let ((?x11204 (* (- 2) (* ?x11939 ?x11939 ?x11939 ?x11939 ?x8818 ?x8818 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x9169 (* (- 4) (* ?x11939 ?x11939 ?x11939 ?x11939 ?x8818 ?x8818 ?x8818 r!2 r!2 r!2 q!3))))
 (let ((?x10162 (* 96 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1))))
 (let ((?x10127 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1 d!1)))
 (let ((?x10123 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1 d!1)))
 (let ((?x10121 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1)))
 (let ((?x10102 (* 32 (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d!1 d!1 d!1))))
 (let ((?x10028 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 d!1 d!1)))
 (let ((?x9998 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 d!1)))
 (let ((?x10065 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 d!1)))
 (let ((?x10681 (* q!3 q!3 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1 d!1)))
 (let ((?x11084 (* (- 24) (* q!3 q!3 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1))))
 (let ((?x11081 (* (- 4) (* d00 r00 ?x11939 ?x11939 ?x8818 ?x8818 ?x8818 r!2 q!3 q!3))))
 (let ((?x420 (* 4 (* ?x11939 ?x8818 ?x8818 ?x8818 ?x8818 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x4537 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 d!1 d!1)))
 (let ((?x15184 (* q!3 q!3 r!2 x!0 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x395 (* (- 4) (* q!3 q!3 r!2 x!0 x!0 x!0 d00 d00 q00 d!1))))
 (let ((?x11983 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1 d!1 d!1)))
 (let ((?x14580 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 x00)))
 (let ((?x14849 (* (- 24) (* q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00 d!1))))
 (let ((?x375 (* (- 16) (* q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00 d!1))))
 (let ((?x10305 (* q!3 q!3 q!3 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x2551 (* (- 48) (* q!3 q!3 q!3 r!2 r!2 x!0 d00 d00 q00 d!1))))
 (let ((?x2546 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x15619 (* 36 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00 d!1))))
 (let ((?x2654 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x5139 (* q!3 q!3 q!3 r!2 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x5135 (* 12 (* q!3 q!3 q!3 r!2 x!0 x!0 d00 d00 q00 d!1))))
 (let ((?x15175 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 x00)))
 (let ((?x15168 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 x00)))
 (let ((?x7013 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 x00)))
 (let ((?x6942 (* (- 8) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 r00))))
 (let ((?x4515 (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 r00))))
 (let ((?x15315 (* 64 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 r00))))
 (let ((?x8437 (* 24 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 r00))))
 (let ((?x8587 (* (- 96) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 r00))))
 (let ((?x11010 (* 96 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r00))))
 (let ((?x10949 (* (- 24) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 r00))))
 (let ((?x11001 (* 48 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r00))))
 (let ((?x15407 (* 8 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r00))))
 (let ((?x4354 (* (- 96) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 r00))))
 (let ((?x7989 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 x00)))
 (let ((?x4435 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 x00)))
 (let ((?x4436 (* (- 8) (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d!1 d!1 d!1))))
 (let ((?x13763 (* 48 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1))))
 (let ((?x12612 (* (- 1) (* ?x11939 ?x11939 ?x11939 ?x11939 ?x8818 ?x8818 ?x8818 r!2 q!3 q!3 q!3))))
 (let ((?x15569 (* 4 (* ?x11939 ?x11939 ?x11939 ?x11939 ?x8818 ?x8818 r!2 r!2 r!2 r!2 q!3))))
 (let ((?x15568 (* ?x11939 ?x11939 ?x11939 ?x11939 ?x11939 ?x8818 ?x8818 r!2 r!2 r!2 q!3 q!3)))
 (let ((?x8296 (* (- 32) (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d!1 d!1 d!1))))
 (let ((?x4853 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1 d!1)))
 (let ((?x3428 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1 d!1 d!1)))
 (let ((?x11747 (* 12 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1 d!1))))
 (let ((?x7296 (* (- 24) (* q!3 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1 d!1))))
 (let ((?x12643 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1 d!1)))
 (let ((?x6946 (* (- 48) (* q!3 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1))))
 (let ((?x1279 (* (- 216) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x894 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00)))
 (let ((?x13789 (* 32 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0))))
 (let ((?x1266 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1 d!1)))
 (let ((?x9229 (* (- 1) (* q!3 q!3 q!3 q!3 q!3 r!2 d!1 d!1 d!1 d!1))))
 (let ((?x942 (* 16 (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d!1 d!1 d!1))))
 (let ((?x945 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 r00 d00)))
 (let ((?x2558 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1 d!1)))
 (let ((?x3328 (* 48 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1))))
 (let ((?x2559 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 r00 d00)))
 (let ((?x655 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r00 d00)))
 (let ((?x2561 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 x00)))
 (let ((?x725 (* 352 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x14661 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 r00 d00)))
 (let ((?x13955 (* 24 (* q!3 q!3 q!3 q!3 r!2 r!2 d00 d00 q00 d!1))))
 (let ((?x10026 (* (- 8) (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d!1 d!1 d!1))))
 (let ((?x2248 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 d00 q00)))
 (let ((?x13956 (* q!3 q!3 r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x7678 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 d00 q00)))
 (let ((?x2253 (* 4 (* q!3 q!3 q!3 q!3 q!3 r!2 d00 d00 q00 d!1))))
 (let ((?x1056 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 d00 q00)))
 (let ((?x12289 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 d00 q00)))
 (let ((?x1846 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00)))
 (let ((?x14270 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00)))
 (let ((?x14643 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00)))
 (let ((?x1220 (* q!3 q!3 q!3 q!3 q!3 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x722 (* 2 (* q!3 q!3 q!3 r!2 r!2 d00 d00 q00 d!1 d!1))))
 (let ((?x13697 (* (- 352) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x1754 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 x00)))
 (let ((?x1169 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 d!1)))
 (let ((?x13706 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 x00)))
 (let ((?x13423 (* 4 (* d00 x00 ?x11939 ?x11939 ?x8818 ?x8818 ?x8818 r!2 q!3 q!3))))
 (let ((?x14444 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1 d!1)))
 (let ((?x13419 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x13721 (* (- 12) (* q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1))))
 (let ((?x13724 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1 d!1)))
 (let ((?x13727 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x13733 (* 48 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1))))
 (let ((?x13731 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1 d!1)))
 (let ((?x13735 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x13420 (* (- 48) (* q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1))))
 (let ((?x13742 (* q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1 d!1)))
 (let ((?x13740 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00 d!1 d!1 d!1)))
 (let ((?x13738 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1 d!1)))
 (let ((?x13747 (* q!3 q!3 q!3 q!3 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x13748 (* (- 12) (* q!3 q!3 q!3 q!3 r!2 x!0 d00 d00 q00 d!1))))
 (let ((?x13409 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 x!0 d!1)))
 (let ((?x13750 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 x!0 d!1)))
 (let ((?x13413 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 x!0 d!1)))
 (let ((?x13410 (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1 d!1 d!1)))
 (let ((?x14448 (* 24 (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1 d!1))))
 (let ((?x2761 (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1 d!1)))
 (let ((?x2762 (* (- 96) (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1))))
 (let ((?x5638 (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1 d!1)))
 (let ((?x5637 (* 96 (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1))))
 (let ((?x5634 (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1 d!1)))
 (let ((?x5631 (* (- 48) (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1))))
 (let ((?x5623 (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1 d!1)))
 (let ((?x5622 (* 96 (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1))))
 (let ((?x5611 (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d00 d!1 d!1 d!1)))
 (let ((?x5609 (* 24 (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d00 d!1 d!1))))
 (let ((?x5610 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 x00)))
 (let ((?x5540 (* (- 2) (* d00 q00 ?x11939 ?x11939 ?x8818 ?x8818 ?x8818 r!2 q!3 q!3))))
 (let ((?x5592 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x5589 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 q00)))
 (let ((?x5585 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00)))
 (let ((?x5584 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 q00)))
 (let ((?x5586 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 q00)))
 (let ((?x5576 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 q00)))
 (let ((?x5581 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1 d!1)))
 (let ((?x5578 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1)))
 (let ((?x5574 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 d!1)))
 (let ((?x5536 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 q00)))
 (let ((?x5570 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 q00)))
 (let ((?x5569 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 q00)))
 (let ((?x5567 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 q00)))
 (let ((?x5565 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 q00)))
 (let ((?x5544 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 q00)))
 (let ((?x5504 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 r!2 d!1)))
 (let ((?x5517 (* 216 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x13828 (* (- 48) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x15492 (* 480 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x15189 (* (- 32) (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d!1 d!1 d!1))))
 (let ((?x13257 (* (- 192) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x3797 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 r00 d00)))
 (let ((?x13051 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r00 d00)))
 (let ((?x5336 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x5328 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1)))
 (let ((?x2414 (* (- 8) (* q!3 q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x2377 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 r00 d00)))
 (let ((?x14545 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 r00 d00)))
 (let ((?x14797 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 d!1 d!1)))
 (let ((?x14759 (* (- 240) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x12168 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 r00 d00)))
 (let ((?x15617 (* (- 2) (* q!3 q!3 q!3 q!3 r!2 r!2 d!1 d!1 d!1 d!1))))
 (let ((?x15615 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x15611 (* (- 8) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 x!0))))
 (let ((?x12961 (* q!3 q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x5630 (* (- 240) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x10060 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00)))
 (let ((?x10083 (* 32 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0))))
 (let ((?x10073 (* q!3 q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1)))
 (let ((?x10067 (* (- 1) (* q!3 q!3 q!3 r!2 x!0 d00 d00 q00 d!1 d!1))))
 (let ((?x11271 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1)))
 (let ((?x4392 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r00 d00)))
 (let ((?x4407 (* (- 72) (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x4845 (* 72 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 x!0))))
 (let ((?x12250 (+ ?x4845 (* (- 192) (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d!1 d!1)) (* (- 16) (* q!3 q!3 q!3 r!2 r!2 x!0 d!1)) (* 32 (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d00)) ?x4407 (* (- 24) ?x4392) (* 384 (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d!1)) (* 6 ?x11271) ?x10067 (* (- 2) ?x10073) ?x10083 ?x10060 (* (- 40) (* q!3 q!3 q!3 r!2 r!2 x!0 d!1 d!1)) (* 4 (* q!3 q!3 q!3 r!2 x!0 x!0 d!1 d!1 d!1)) (* 96 (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d!1 d!1)) (* (- 4) (* q!3 q!3 q!3 r!2 x!0 d00 d00 q00 d!1)) (* 12 (* q!3 q!3 q!3 r!2 x!0 x!0 d00 d00 q00)) (* (- 32) (* q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00)) ?x5630 (* (- 1) ?x12961) ?x15611 (* (- 12) ?x15615) (* 24 (* q!3 q!3 r!2 r!2 x!0 x!0 d00 d00 q00)) (* (- 4) (* q!3 q!3 r!2 x!0 x!0 x!0 d00 d00 q00)) ?x15617 (* 48 ?x12168) ?x14759 (* 8 (* r00 ?x11939 ?x11939 ?x8818 ?x8818 ?x8818 r!2 q!3 q!3)) (* 12 ?x14797) (* (- 24) ?x14545) (* (- 12) ?x2377) ?x2414 (* (- 64) (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d00)) (* (- 16) ?x5328) (* (- 6) ?x5336) (* (- 48) ?x13051) (* 16 (* q!3 q!3 q!3 q!3 r!2 r!2 d!1 d!1)) (* (- 128) (* q!3 r!2 r!2 r!2 r!2 r!2 d00 x00)) (* 128 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 x00)) (* 40 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00)) (* (- 32) ?x3797) ?x13257 (* (- 32) (* q!3 q!3 q!3 r!2 r!2 r!2 d00 x00)) ?x15189 (* (- 32) (* q!3 r!2 r!2 r!2 x!0 x!0 d00 x00)) ?x15492 ?x13828 ?x5517 (* 32 (* q!3 q!3 q!3 q!3 r!2 r00)) (* 64 (* q!3 q!3 q!3 r!2 r!2 r00)) (* (- 32) (* q!3 q!3 q!3 r!2 x!0 r00)) (* 128 (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d00)) (* (- 128) (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d00)) (* 32 (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d00)) (* (- 32) ?x5504) (* (- 32) (* q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00)) (* 32 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00)) (* (- 8) (* q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00)) (* (- 8) (* q!3 q!3 q!3 q!3 r!2 d00 q00)) (* (- 16) (* q!3 q!3 q!3 r!2 r!2 d00 q00)) (* 8 (* q!3 q!3 q!3 r!2 x!0 d00 q00)) (* (- 16) ?x5544) (* (- 24) ?x5565) (* 24 ?x5567) (* 6 ?x5569) (* (- 12) ?x5570) (* (- 2) ?x5536) (* (- 64) ?x5574) (* (- 48) ?x5578) (* (- 3) ?x5581) (* 2 ?x5576) (* 8 (* q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1 d!1)) (* (- 12) ?x5586) (* 24 ?x5584) (* 3 ?x5585) (* (- 6) ?x5589) (* (- 8) ?x5592) (* 64 (* q!3 q!3 r!2 r!2 r!2 x!0 d00 x00)) ?x5540 (* (- 32) (* q!3 q!3 q!3 r!2 x!0 r00 d!1)) (* 16 (* q!3 q!3 q!3 r!2 r!2 r00 d!1 d!1)) (* 64 (* q!3 q!3 q!3 r!2 r!2 r00 d!1)) (* 8 (* q!3 q!3 q!3 q!3 r!2 r00 d!1 d!1)) (* 32 (* q!3 q!3 q!3 q!3 r!2 r00 d!1)) (* (- 8) (* q!3 q!3 q!3 r!2 x!0 r00 d!1 d!1)) (* 24 ?x5610) (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d00 d!1)) ?x5609 (* 4 ?x5611) (* 128 (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d00)) (* 192 (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d00 d!1)) ?x5622 (* 16 ?x5623) (* (- 96) (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d00 d!1)) ?x5631 (* (- 8) ?x5634) (* 192 (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1)) ?x5637 (* 16 ?x5638) (* (- 192) (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1)) ?x2762 (* (- 16) ?x2761) (* 48 (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1)) ?x14448 (* 4 ?x13410) (* (- 8) (* ?x11939 ?x11939 ?x8818 ?x8818 ?x8818 ?x8818 r!2 q!3 q!3)) (* 48 ?x13413) (* (- 24) ?x13750) (* 4 ?x13409) ?x13748 (* 6 ?x13747) (* 4 (* ?x11939 ?x11939 ?x11939 ?x8818 ?x8818 ?x8818 ?x8818 r!2 q!3 q!3)) (* (- 4) ?x13738) (* (- 1) ?x13740) (* 2 ?x13742) ?x13420 (* (- 24) ?x13735) (* (- 4) ?x13731) ?x13733 (* 24 ?x13727) (* 4 ?x13724) ?x13721 (* (- 6) ?x13419) (* (- 1) ?x14444) (* (- 8) (* q!3 q!3 q!3 q!3 r!2 d00 q00 d!1)) (* (- 2) (* q!3 q!3 q!3 q!3 r!2 d00 q00 d!1 d!1)) (* (- 16) (* q!3 q!3 q!3 r!2 r!2 d00 q00 d!1)) (* (- 4) (* q!3 q!3 q!3 r!2 r!2 d00 q00 d!1 d!1)) (* 8 (* q!3 q!3 q!3 r!2 x!0 d00 q00 d!1)) (* 2 (* q!3 q!3 q!3 r!2 x!0 d00 q00 d!1 d!1)) (* (- 4) (* ?x11939 ?x11939 ?x11939 ?x8818 ?x8818 ?x8818 r!2 r!2 q!3 q!3)) ?x13423 (* 4 (* q!3 q!3 q!3 q!3 r!2 d00 d00 q00 d!1)) (* 32 ?x13706) (* 8 (* q!3 q!3 q!3 r!2 r!2 d00 d00 q00 d!1)) (* 72 ?x1169) (* 24 ?x1754) ?x13697 (* q!3 q!3 q!3 q!3 r!2 d00 d00 q00 d!1 d!1) (* (- 48) (* q!3 q!3 r!2 r!2 r!2 x!0 d00 q00 d!1)) ?x722 ?x1220 (* 6 ?x14643) (* (- 48) (* q!3 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1)) (* (- 12) ?x14270) (* 12 ?x1846) (* 6 ?x12289) (* (- 12) ?x1056) (* (- 4) (* q!3 q!3 q!3 r!2 x!0 d00 d00 q00)) ?x2253 (* 8 ?x7678) (* 6 ?x13956) (* 8 (* q!3 q!3 q!3 r!2 r!2 d00 d00 q00)) (* (- 1) ?x2248) ?x10026 ?x13955 (* 48 ?x14661) (* (- 48) (* q!3 q!3 q!3 r!2 r!2 x!0 d00 d00 q00)) ?x725 (* 4 (* q!3 q!3 q!3 q!3 r!2 d00 d00 q00)) (* 12 ?x2561) (* 24 (* q!3 q!3 q!3 q!3 r!2 r!2 d00 d00 q00)) (* 4 (* q!3 q!3 q!3 q!3 q!3 r!2 d00 d00 q00)) (* (- 12) (* q!3 q!3 q!3 q!3 r!2 x!0 d00 d00 q00)) (* (- 4) ?x655) (* 4 ?x2559) (* 16 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 q00)) (* (- 32) (* q!3 q!3 r!2 r!2 r!2 x!0 d00 q00)) (* 64 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 q00)) ?x3328 (* 8 ?x2558) (* (- 64) (* q!3 r!2 r!2 r!2 x!0 x!0 r00)) (* (- 256) (* q!3 r!2 r!2 r!2 r!2 r!2 r00)) (* 12 ?x945) (* 256 (* q!3 r!2 r!2 r!2 r!2 x!0 r00)) ?x942 (* 128 (* q!3 q!3 r!2 r!2 r!2 x!0 r00)) (* (- 256) (* q!3 q!3 r!2 r!2 r!2 r!2 r00)) (* (- 16) (* q!3 q!3 q!3 r!2 x!0 d00 x00)) (* 16 (* q!3 q!3 q!3 q!3 r!2 d00 x00)) (* 16 (* q!3 q!3 q!3 r!2 x!0 r00 d00)) (* 8 (* q!3 q!3 q!3 q!3 q!3 r!2 d!1)) (* (- 16) (* q!3 q!3 q!3 q!3 r!2 r00 d00)) (* 4 (* q!3 q!3 q!3 q!3 q!3 r!2 d!1 d!1)) (* (- 2) (* q!3 q!3 q!3 q!3 q!3 r!2 d!1 d!1 d!1)) (* (- 32) (* q!3 q!3 q!3 q!3 r!2 r!2)) ?x9229 (* 3 ?x1266) ?x13789 (* (- 32) (* q!3 q!3 q!3 r!2 r!2 r00 d00)) (* 32 (* q!3 q!3 q!3 r!2 r!2 d00 x00)) (* (- 64) (* q!3 q!3 q!3 r!2 r!2 r!2 r00)) (* (- 3) ?x894) ?x1279 (* 32 (* q!3 q!3 q!3 r!2 r!2 x!0)) (* (- 64) (* q!3 q!3 q!3 r!2 r!2 r!2)) (* (- 32) (* q!3 q!3 q!3 r!2 r!2 r!2 d!1)) (* 16 (* q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1)) (* 16 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 q00)) (* (- 64) (* q!3 r!2 r!2 r!2 r!2 x!0 d00 q00)) (* 96 (* q!3 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1)) (* (- 96) (* q!3 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1)) (* 192 (* q!3 q!3 r!2 r!2 r!2 x!0 r00 d!1)) ?x6946 (* (- 8) ?x12643) ?x7296 (* 24 (* q!3 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1)) (* (- 96) (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d!1)) ?x11747 (* 2 ?x3428) (* 8 ?x4853) (* q!3 q!3 q!3 q!3 r!2 x!0 d!1 d!1 d!1 d!1) ?x8296 ?x15568 ?x15569 ?x12612 (* 2 (* ?x11939 ?x11939 ?x11939 ?x8818 ?x8818 ?x8818 r!2 q!3 q!3 q!3)) (* (- 24) (* q!3 q!3 q!3 q!3 r!2 x!0 d!1)) (* (- 20) (* q!3 q!3 q!3 q!3 r!2 x!0 d!1 d!1)) (* (- 2) (* q!3 q!3 q!3 q!3 r!2 x!0 d!1 d!1 d!1)) (* (- 16) (* q!3 q!3 q!3 q!3 r!2 r00 d00 d!1)) (* (- 4) (* q!3 q!3 q!3 q!3 r!2 r00 d00 d!1 d!1)) (* (- 32) (* q!3 q!3 q!3 r!2 r!2 r00 d00 d!1)) ?x13763 (* (- 8) (* q!3 q!3 q!3 r!2 r!2 r00 d00 d!1 d!1)) (* 16 (* q!3 q!3 q!3 r!2 x!0 r00 d00 d!1)) (* 4 (* q!3 q!3 q!3 r!2 x!0 r00 d00 d!1 d!1)) (* 16 (* q!3 q!3 q!3 q!3 r!2 d00 x00 d!1)) (* 4 (* q!3 q!3 q!3 q!3 r!2 d00 x00 d!1 d!1)) (* 32 (* q!3 q!3 q!3 r!2 r!2 d00 x00 d!1)) (* 8 (* q!3 q!3 q!3 r!2 r!2 d00 x00 d!1 d!1)) (* (- 16) (* q!3 q!3 q!3 r!2 x!0 d00 x00 d!1)) (* (- 4) (* q!3 q!3 q!3 r!2 x!0 d00 x00 d!1 d!1)) (* (- 96) (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d!1)) (* (- 48) (* q!3 q!3 q!3 r!2 r!2 r!2 r00 d!1 d!1)) ?x4436 (* (- 384) (* q!3 q!3 r!2 r!2 r!2 r!2 r00 d!1)) (* (- 12) ?x4435) (* (- 4) ?x7989) ?x4354 ?x15407 ?x11001 ?x10949 ?x11010 ?x8587 ?x8437 ?x15315 ?x4515 ?x6942 (* (- 48) ?x7013) (* 192 (* q!3 r!2 r!2 r!2 r!2 x!0 r00 d!1 d!1)) (* (- 48) ?x15168) (* 4 ?x15175) (* 96 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 q00 d!1)) ?x5135 (* 3 ?x5139) (* (- 16) ?x2654) ?x15619 (* 6 ?x2546) ?x2551 (* (- 12) ?x10305) ?x375 ?x14849 (* 48 ?x14580) (* 8 (* ?x11939 ?x11939 ?x11939 ?x8818 ?x8818 ?x8818 r!2 r!2 r!2 q!3)) (* (- 4) ?x11983) (* (- 12) (* q!3 q!3 q!3 r!2 r!2 x!0 d!1 d!1 d!1)) ?x395 (* (- 1) ?x15184) (* (- 6) ?x4537) ?x420 (* (- 48) (* q!3 r!2 r!2 r!2 x!0 x!0 r00 d!1 d!1)) ?x11081 ?x11084 (* (- 4) ?x10681) (* (- 24) ?x10065) (* 2 ?x9998) ?x10028 (* (- 384) (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d!1)) ?x10102 (* 36 ?x10121) (* (- 192) (* q!3 r!2 r!2 r!2 r!2 r!2 r00 d!1 d!1)) (* 12 ?x10123) (* 16 ?x10127) ?x10162 ?x9169 ?x11204 (* 24 (* q!3 q!3 q!3 r!2 r!2 r!2 d00 q00 d!1)) (* (- 128) (* q!3 q!3 r!2 r!2 r!2 r!2 d00 x00)) (* (- 192) (* q!3 q!3 r!2 r!2 r!2 r!2 d00 x00 d!1)) (* (- 16) ?x4793) ?x15603 (* 8 ?x2393) (* (- 3) ?x9259) (* (- 48) (* q!3 q!3 q!3 r!2 r!2 r!2 d00 x00 d!1)) ?x10792 (* (- 4) ?x3728) ?x1412 (* 96 (* q!3 q!3 r!2 r!2 r!2 x!0 d00 x00 d!1)) ?x8402 (* (- 192) (* q!3 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1)) ?x10086 (* (- 16) ?x10087) (* 192 (* q!3 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1)) (* 2 ?x14165) (* 64 (* q!3 q!3 r!2 r!2 r!2 r!2 d00 q00)) (* 16 (* q!3 q!3 q!3 r!2 x!0 x!0 d!1)) (* 16 (* q!3 q!3 q!3 r!2 x!0 x!0 d!1 d!1)) (* (- 6) ?x12245) ?x12248)))
 (let ((?x9179 (+ (- 2) q!3 ?x9600 ?x12002 ?x753)))
 (let ((?x11149 (* 2 (* d00 q00 ?x5039 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 r!2 r!2 r!2))))
 (let ((?x1142 (* d00 d00 q00 ?x5039 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 r!2 r!2 r!2)))
 (let ((?x8895 (* (- 4) (* ?x5039 ?x11939 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 r!2 r!2 r!2))))
 (let ((?x9469 (* (- 4) (* d00 r00 ?x5039 ?x5039 ?x5039 ?x9179 ?x9179 ?x9179 r!2 r!2 r!2))))
 (let ((?x15228 (* 4 (* d00 r00 ?x5039 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 r!2 r!2 r!2))))
 (let ((?x9541 (* (- 4) (* ?x5039 ?x5039 ?x5039 ?x11939 ?x9179 ?x9179 ?x9179 r!2 r!2 r!2 r!2))))
 (let ((?x6978 (* 4 (* d00 x00 ?x5039 ?x5039 ?x5039 ?x9179 ?x9179 ?x9179 r!2 r!2 r!2))))
 (let ((?x15230 (* (- 1) (* ?x5039 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 r!2 r!2 r!2))))
 (let ((?x1168 (* (- 2) (* ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 r!2 r!2 r!2))))
 (let ((?x9626 (* 2 (* ?x5039 ?x5039 ?x5039 ?x5039 ?x11939 ?x9179 ?x9179 ?x9179 r!2 r!2 r!2))))
 (let ((?x5211 (* 4 (* ?x5039 ?x11939 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 r!2 r!2 r!2 r!2))))
 (let ((?x12346 (* (- 1) (* ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 r!2))))
 (let ((?x6993 (* d00 d00 q00 ?x5039 ?x5039 ?x5039 ?x9179 ?x9179 ?x9179 r!2 r!2 r!2)))
 (let ((?x14874 (* 4 (* ?x5039 ?x5039 ?x5039 ?x11939 ?x9179 ?x9179 ?x9179 ?x9179 r!2 r!2 r!2))))
 (let ((?x10517 (* (- 4) (* d00 x00 ?x5039 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 r!2 r!2 r!2))))
 (let ((?x11960 (* (- 2) (* d00 q00 ?x5039 ?x5039 ?x5039 ?x9179 ?x9179 ?x9179 r!2 r!2 r!2))))
 (let ((?x4858 (+ (* d00 d00 q00 ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 r!2) (* ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 r!2 r!2 r!2) ?x11960 (* (- 1) (* ?x5039 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x11939 ?x9179 r!2)) ?x10517 ?x14874 (* (- 4) (* d00 r00 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 r!2)) (* 4 (* ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 ?x9179 r!2)) (* 8 (* r00 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 r!2)) (* (- 4) (* ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x9179 r!2 r!2)) ?x6993 ?x12346 ?x5211 (* 8 (* r00 ?x5039 ?x5039 ?x5039 ?x9179 ?x9179 ?x9179 r!2 r!2 r!2)) ?x9626 (* 8 (* ?x5039 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 r!2 r!2 r!2)) ?x1168 ?x15230 ?x6978 (* 4 (* d00 x00 ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 r!2)) (* 4 (* ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 r!2)) ?x9541 ?x15228 (* (- 8) (* ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 ?x9179 r!2)) (* 4 (* d00 x00 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 r!2)) (* (- 2) (* d00 q00 ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 r!2)) (* (- 8) (* r00 ?x5039 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 r!2 r!2 r!2)) (* 2 (* ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 r!2)) ?x9469 ?x8895 (* 8 (* r00 ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 r!2)) (* (- 4) (* d00 r00 ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 r!2)) (* (- 1) ?x1142) (* d00 d00 q00 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 r!2) (* (- 2) (* d00 q00 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 r!2)) (* (- 4) (* ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x9179 ?x9179 ?x9179 r!2 r!2)) (* (- 8) (* ?x5039 ?x5039 ?x5039 ?x9179 ?x9179 ?x9179 ?x9179 r!2 r!2 r!2)) (* 2 (* ?x5039 ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x11939 ?x9179 r!2)) ?x11149 (* (- 8) (* ?x5039 ?x5039 ?x5039 ?x11939 ?x11939 ?x9179 ?x9179 r!2)))))
 (let ((?x922 (+ 2 q!3 ?x9600 ?x12002 d!1)))
 (let ((?x14812 (* d00 d00 q00 ?x11939 ?x11939 ?x11939 ?x9584 ?x922 ?x922 r!2 r!2 r!2)))
 (let ((?x553 (* (- 2) (* ?x11939 ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x922 ?x922 r!2 r!2 r!2))))
 (let ((?x11999 (* (- 4) (* ?x11939 ?x9584 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2 r!2 r!2 r!2))))
 (let ((?x8901 (* 2 (* d00 q00 ?x11939 ?x11939 ?x11939 ?x9584 ?x922 ?x922 r!2 r!2 r!2))))
 (let ((?x8164 (* 4 (* ?x11939 ?x11939 ?x11939 ?x11939 ?x9584 ?x922 ?x922 r!2 r!2 r!2 r!2))))
 (let ((?x13096 (* (- 4) (* ?x11939 ?x11939 ?x11939 ?x11939 ?x9584 ?x922 ?x922 ?x922 r!2 r!2 r!2))))
 (let ((?x2285 (* 4 (* d00 x00 ?x9584 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2 r!2 r!2))))
 (let ((?x9173 (* (- 4) (* d00 x00 ?x11939 ?x11939 ?x11939 ?x9584 ?x922 ?x922 r!2 r!2 r!2))))
 (let ((?x5182 (* (- 4) (* d00 r00 ?x9584 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2 r!2 r!2))))
 (let ((?x572 (* (- 1) (* ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2 r!2 r!2))))
 (let ((?x528 (* d00 d00 q00 ?x9584 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2 r!2 r!2)))
 (let ((?x1167 (* (- 1) (* ?x11939 ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2))))
 (let ((?x11966 (* 4 (* ?x11939 ?x9584 ?x9584 ?x9584 ?x922 ?x922 ?x922 ?x922 r!2 r!2 r!2))))
 (let ((?x9489 (* (- 2) (* d00 q00 ?x9584 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2 r!2 r!2))))
 (let ((?x1308 (* 4 (* d00 r00 ?x11939 ?x11939 ?x11939 ?x9584 ?x922 ?x922 r!2 r!2 r!2))))
 (let ((?x9663 (* 2 (* ?x11939 ?x9584 ?x9584 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2 r!2 r!2))))
 (let ((?x12470 (+ ?x9663 ?x1308 (* 8 (* ?x11939 ?x11939 ?x11939 ?x9584 ?x922 ?x922 ?x922 r!2 r!2 r!2)) (* (- 8) (* ?x11939 ?x11939 ?x9584 ?x9584 ?x922 ?x922 ?x922 ?x922 r!2)) ?x9489 ?x11966 (* 8 (* r00 ?x11939 ?x11939 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2)) (* (- 4) (* ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2 r!2)) ?x1167 (* (- 2) (* d00 q00 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x922 r!2)) (* (- 1) (* ?x11939 ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x9584 ?x922 r!2)) ?x528 (* ?x11939 ?x11939 ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x922 ?x922 r!2 r!2 r!2) (* (- 4) (* ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x922 r!2 r!2)) ?x572 ?x5182 (* 4 (* ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x922 ?x922 ?x922 ?x922 r!2)) (* 4 (* d00 x00 ?x11939 ?x11939 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2)) (* 4 (* ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x922 ?x922 r!2)) (* 2 (* ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2)) (* 8 (* r00 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x922 r!2)) (* (- 2) (* d00 q00 ?x11939 ?x11939 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2)) (* (- 4) (* d00 r00 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x922 r!2)) (* 2 (* ?x11939 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x9584 ?x922 r!2)) ?x9173 (* (- 8) (* r00 ?x11939 ?x11939 ?x11939 ?x9584 ?x922 ?x922 r!2 r!2 r!2)) ?x2285 ?x13096 (* d00 d00 q00 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x922 r!2) (* 8 (* r00 ?x9584 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2 r!2 r!2)) (* (- 8) (* ?x9584 ?x9584 ?x9584 ?x922 ?x922 ?x922 ?x922 r!2 r!2 r!2)) (* d00 d00 q00 ?x11939 ?x11939 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2) ?x8164 (* 4 (* d00 x00 ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x922 r!2)) (* (- 4) (* d00 r00 ?x11939 ?x11939 ?x9584 ?x9584 ?x922 ?x922 ?x922 r!2)) (* (- 8) (* ?x11939 ?x11939 ?x9584 ?x9584 ?x9584 ?x922 ?x922 r!2)) ?x8901 ?x11999 ?x553 (* (- 1) ?x14812))))
 (let ((?x15034 (+ (- 4) q!3 ?x9600 ?x12002 ?x1233)))
 (let ((?x11961 (* 4 (* ?x1670 ?x1670 ?x1670 ?x11939 ?x15034 ?x15034 ?x15034 ?x15034 r!2 r!2 r!2))))
 (let ((?x9550 (* (- 2) (* d00 q00 ?x1670 ?x1670 ?x1670 ?x15034 ?x15034 ?x15034 r!2 r!2 r!2))))
 (let ((?x5341 (* (- 4) (* ?x1670 ?x1670 ?x1670 ?x11939 ?x15034 ?x15034 ?x15034 r!2 r!2 r!2 r!2))))
 (let ((?x9619 (* (- 4) (* ?x1670 ?x11939 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 r!2 r!2 r!2))))
 (let ((?x14814 (* (- 2) (* ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 r!2 r!2 r!2))))
 (let ((?x13391 (* 4 (* d00 x00 ?x1670 ?x1670 ?x1670 ?x15034 ?x15034 ?x15034 r!2 r!2 r!2))))
 (let ((?x750 (* (- 4) (* d00 r00 ?x1670 ?x1670 ?x1670 ?x15034 ?x15034 ?x15034 r!2 r!2 r!2))))
 (let ((?x788 (* 2 (* d00 q00 ?x1670 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 r!2 r!2 r!2))))
 (let ((?x8100 (* (- 1) (* ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 r!2))))
 (let ((?x5041 (* 4 (* ?x1670 ?x11939 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 r!2 r!2 r!2 r!2))))
 (let ((?x13252 (* 2 (* ?x1670 ?x1670 ?x1670 ?x1670 ?x11939 ?x15034 ?x15034 ?x15034 r!2 r!2 r!2))))
 (let ((?x954 (* (- 1) (* ?x1670 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 r!2 r!2 r!2))))
 (let ((?x10523 (* 4 (* d00 r00 ?x1670 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 r!2 r!2 r!2))))
 (let ((?x9655 (* (- 4) (* d00 x00 ?x1670 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 r!2 r!2 r!2))))
 (let ((?x8978 (* d00 d00 q00 ?x1670 ?x1670 ?x1670 ?x15034 ?x15034 ?x15034 r!2 r!2 r!2)))
 (let ((?x9151 (* d00 d00 q00 ?x1670 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 r!2 r!2 r!2)))
 (let ((?x10513 (+ (* 2 (* ?x1670 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x15034 r!2)) (* (- 1) ?x9151) (* (- 2) (* d00 q00 ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 r!2)) (* (- 1) (* ?x1670 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x11939 ?x15034 r!2)) ?x8978 (* (- 4) (* ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x15034 r!2 r!2)) ?x9655 (* 4 (* ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 r!2)) ?x10523 ?x954 ?x13252 (* d00 d00 q00 ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 r!2) (* (- 8) (* ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 ?x15034 r!2)) (* 2 (* ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 r!2)) (* (- 2) (* d00 q00 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 r!2)) ?x5041 ?x8100 (* 8 (* ?x1670 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 r!2 r!2 r!2)) (* 8 (* r00 ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 r!2)) ?x788 (* (- 8) (* ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 ?x15034 r!2)) (* 8 (* r00 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 r!2)) ?x750 ?x13391 ?x14814 ?x9619 ?x5341 ?x9550 (* d00 d00 q00 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 r!2) (* (- 4) (* d00 r00 ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 r!2)) ?x11961 (* 4 (* d00 x00 ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 r!2)) (* (- 4) (* d00 r00 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 r!2)) (* 4 (* ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 ?x15034 r!2)) (* (- 8) (* r00 ?x1670 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 r!2 r!2 r!2)) (* 8 (* r00 ?x1670 ?x1670 ?x1670 ?x15034 ?x15034 ?x15034 r!2 r!2 r!2)) (* 4 (* d00 x00 ?x1670 ?x1670 ?x1670 ?x11939 ?x11939 ?x15034 r!2)) (* ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 r!2 r!2 r!2) (* (- 8) (* ?x1670 ?x1670 ?x1670 ?x15034 ?x15034 ?x15034 ?x15034 r!2 r!2 r!2)) (* (- 4) (* ?x1670 ?x1670 ?x11939 ?x11939 ?x11939 ?x15034 ?x15034 ?x15034 r!2 r!2)))))
 (let (($x4466 (or (not (= ?x10513 0)) (not (= ?x12470 0)) (not (= ?x4858 0)) (not (= ?x12250 0)))))
 (let ((?x9604 (* q!3 d!1 d!1)))
 (let ((?x514 (* r00 d00)))
 (let ((?x515 (* 4 ?x514)))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x9551 (+ (* 8 r!2) ?x379 ?x427 ?x411 ?x477 ?x515 (* (- 4) (* r!2 d!1)) (* (- 2) (* q!3 d!1)) (* 4 (* x!0 d!1)) ?x9604)))
 (let (($x4523 (and (= ?x9551 0) $x4466)))
 (let (($x6551 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x8865 (* (- 6) (* q q q q q r r r x x d))))
 (let ((?x8040 (* 2 (* q q q r r r d00 q00 d d d))))
 (let ((?x12871 (* (- 16) (* q r r r r r d00 x00 d d d))))
 (let ((?x11571 (* (- 4) (* q q q r r r d00 x00 d d d))))
 (let ((?x13027 (* (- 3) (* q q q q r x d00 d00 q00 d d))))
 (let ((?x6699 (* 8 (* q q r r r x d00 x00 d d d))))
 (let ((?x6160 (* (- 16) (* q q r r r r d00 x00 d d d))))
 (let ((?x381 (* (- 1) x)))
 (let ((?x292 (* 2 r)))
 (let ((?x7071 (+ q ?x292 ?x381)))
 (let ((?x1753 (+ 2 d)))
 (let ((?x14871 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 r r r q q))))
 (let ((?x14466 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r r r q))))
 (let ((?x1250 (* 16 (* q r r r r x d00 x00 d d d))))
 (let ((?x8536 (* 12 (* q q q q q r r r r x d d))))
 (let ((?x6541 (* 36 (* q q q q q r r r r x d))))
 (let ((?x8855 (* 2 (* q q q q r r r x x x d))))
 (let ((?x8872 (* (- 24) (* q q q q r r r r x x d))))
 (let ((?x13895 (* (- 4) (* q q r r r x d00 q00 d d d))))
 (let ((?x13688 (* 4 (* ?x1753 ?x7071 ?x7071 ?x7071 ?x7071 r r r q q q))))
 (let ((?x8862 (* (- 6) (* q q q q r r r r x x d d))))
 (let ((?x12948 (* (- 1) (* q q r x x x d00 d00 q00 d d))))
 (let ((?x12883 (* (- 4) (* q r r r x x d00 x00 d d d))))
 (let ((?x14715 (* 48 (* q q q q r r r r r d00 x00))))
 (let ((?x13032 (* (- 12) (* q q q r r x d00 d00 q00 d d))))
 (let ((?x5431 (* 6 (* q q q r r r d00 d00 q00 d d))))
 (let ((?x6530 (* (- 16) (* q q r r r r d00 d00 q00 d d))))
 (let ((?x12735 (* 3 (* q q q r x x d00 d00 q00 d d))))
 (let ((?x8468 (* 4 (* q q q q q q r r r d00 x00))))
 (let ((?x12525 (* (- 48) (* q q q r r r r r x d00 x00))))
 (let ((?x12558 (* (- 48) (* q q q q r r r r x d00 x00))))
 (let ((?x12407 (* (- 4) (* q q q r r r x x x d00 x00))))
 (let ((?x12265 (* (- 12) (* q q q q q r r r x d00 x00))))
 (let ((?x9612 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q q))))
 (let ((?x8907 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 r r r r q))))
 (let ((?x13320 (* 8 (* q q r r r r d00 q00 d d d))))
 (let ((?x8364 (* 2 (* q r r r x x d00 q00 d d d))))
 (let ((?x8412 (* (- 8) (* q r r r r x d00 q00 d d d))))
 (let ((?x7777 (* q q q q q r r r x d00 d00 q00)))
 (let ((?x8453 (* 3 (* q q q q q q r r r x d d))))
 (let ((?x7554 (* q q q q q r r r x r00 d00)))
 (let ((?x8384 (* 8 (* q r r r r r d00 q00 d d d))))
 (let ((?x7383 (* q q q r r r x x x r00 d00)))
 (let ((?x7379 (* q q q q q q r r r r00 d00)))
 (let ((?x12173 (* 12 (* q q q q r r r x x d00 x00))))
 (let ((?x7169 (* q q q q r r r r x r00 d00)))
 (let ((?x7092 (* q q q r r r x x x d00 d00 q00)))
 (let ((?x12733 (* 6 (* q q r r x x d00 d00 q00 d d))))
 (let ((?x7034 (* q q q r r r r r r d00 d00 q00)))
 (let ((?x6985 (* q q q r r r r r x d00 d00 q00)))
 (let ((?x6984 (* q q q r r r r x x d00 d00 q00)))
 (let ((?x6973 (* q q q q r r r r r d00 d00 q00)))
 (let ((?x6969 (* q q q q r r r r x d00 d00 q00)))
 (let ((?x6931 (* q q q q q r r r r d00 d00 q00)))
 (let ((?x11735 (* 24 (* q q q r r r r x x d00 x00))))
 (let ((?x6540 (* 72 (* q q q q r r r r r x d))))
 (let ((?x2523 (* 32 (* q q q r r r r r r d00 x00))))
 (let ((?x5475 (* (- 1) (* q r r r x x d00 d00 q00 d d d))))
 (let ((?x5531 (* (- 6) (* q r r r x x d00 d00 q00 d d))))
 (let ((?x5527 (* 4 (* q r r r r x d00 d00 q00 d d d))))
 (let ((?x5521 (* 24 (* q r r r r x d00 d00 q00 d d))))
 (let ((?x5515 (* (- 4) (* q r r r r r d00 d00 q00 d d d))))
 (let ((?x5511 (* (- 24) (* q r r r r r d00 d00 q00 d d))))
 (let ((?x5506 (* 2 (* q q r r r x d00 d00 q00 d d d))))
 (let ((?x5464 (* (- 1) (* q q q r r r d00 d00 q00 d d d))))
 (let ((?x5501 (* (- 4) (* q q r r r r d00 d00 q00 d d d))))
 (let ((?x12726 (* 6 (* q q q q r r d00 d00 q00 d d))))
 (let ((?x4661 (* 4 (* q q q r r r r x x x d))))
 (let ((?x4656 (* (- 24) (* q q q r r r r r x x d))))
 (let ((?x4653 (* 48 (* q q q r r r r r r x d))))
 (let ((?x3653 (* 4 (* q r r r x x r00 d00 d d d))))
 (let ((?x3739 (* (- 16) (* q r r r r x r00 d00 d d d))))
 (let ((?x3726 (* 16 (* q r r r r r r00 d00 d d d))))
 (let ((?x3711 (* (- 8) (* q q r r r x r00 d00 d d d))))
 (let ((?x3704 (* 16 (* q q r r r r r00 d00 d d d))))
 (let ((?x3631 (* 4 (* q q q r r r r00 d00 d d d))))
 (let ((?x12533 (* 24 (* q q q q q r r r r d00 x00))))
 (let ((?x2390 (* q q q q r r r r r r d d)))
 (let ((?x2312 (* q q q q r r r x x d00 q00)))
 (let ((?x2304 (* q q q q r r r x x d00 d00 q00)))
 (let ((?x2301 (* q q q r r r r r x d00 q00)))
 (let ((?x2295 (* q q q r r r r x x d00 q00)))
 (let ((?x2283 (* 8 (* q q q r r r d d d))))
 (let ((?x2288 (* q q q r r r x x x d00 q00)))
 (let ((?x8462 (* (- 3) (* q q q q q r r r x x d d))))
 (let ((?x2133 (* q q q q q r r r r r d)))
 (let ((?x2125 (* q q q q r r r r r r d)))
 (let ((?x2124 (* q q q q q q r r r d00 q00)))
 (let ((?x2117 (* q q q q q r r r r d00 q00)))
 (let ((?x2116 (* q q q q q r r r x d00 q00)))
 (let ((?x2111 (* q q q q r r r r x d00 q00)))
 (let ((?x2109 (* q q q q r r r r r d00 q00)))
 (let ((?x2108 (* q q q r r r r r r d00 q00)))
 (let ((?x2000 (* q q q r r r r r r r d)))
 (let ((?x1737 (* q q q r r r r r r r00 d00)))
 (let ((?x1673 (* q q q q r r r r r r00 d00)))
 (let ((?x1669 (* q q q q q q r r r r d d)))
 (let ((?x1666 (* q q q q q q r r r r d)))
 (let ((?x1627 (* q q q q r r r x x r00 d00)))
 (let ((?x1618 (* q q q r r r r x x r00 d00)))
 (let ((?x4077 (* 12 (* q q q q r r r r r x d d))))
 (let ((?x1567 (* q q q r r r r r x r00 d00)))
 (let ((?x1427 (* q q q q q r r r r r d d)))
 (let ((?x1419 (* q q q q q q q r r r d d)))
 (let ((?x1143 (* q q q q q q r r r d00 d00 q00)))
 (let ((?x905 (* q q q q q q q r r r d)))
 (let ((?x8493 (* 6 (* q q q q q q r r r x d))))
 (let ((?x659 (* q q q q q r r r r r00 d00)))
 (let ((?x6548 (+ (* 72 (* q q q r r r r x x x)) (* (- 192) (* q q r r r r r00 d d)) (* (- 16) (* q q q r r x d)) (* 32 (* q q q r r r r00 d00)) (* (- 72) (* q q q q q q r r r r)) (* (- 24) ?x659) (* 384 (* q r r r r x r00 d)) ?x8493 (* (- 1) (* q q q r x d00 d00 q00 d d)) (* (- 2) ?x905) (* 32 (* q q q q q q r r r x)) ?x1143 (* (- 40) (* q q q r r x d d)) (* 4 (* q q q r x x d d d)) (* 96 (* q q r r r x r00 d d)) (* (- 4) (* q q q r x d00 d00 q00 d)) (* 12 (* q q q r x x d00 d00 q00)) (* (- 32) (* q q r r r x d00 d00 q00)) (* (- 240) (* q q q q q r r r r r)) (* (- 1) ?x1419) (* (- 8) (* q q q r r r x x x x)) (* (- 12) ?x1427) (* 24 (* q q r r x x d00 d00 q00)) (* (- 4) (* q q r x x x d00 d00 q00)) (* (- 2) (* q q q q r r d d d d)) (* 48 ?x1567) (* (- 240) (* q q q r r r r r x x)) (* 8 (* r00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) ?x4077 (* (- 24) ?x1618) (* (- 12) ?x1627) (* (- 8) (* q q q q q q q r r r)) (* (- 64) (* q q r r r x r00 d00)) (* (- 16) ?x1666) (* (- 6) ?x1669) (* (- 48) ?x1673) (* 16 (* q q q q r r d d)) (* (- 128) (* q r r r r r d00 x00)) (* 128 (* q r r r r x d00 x00)) (* 40 (* q q q r r r d00 d00 q00)) (* (- 32) ?x1737) (* (- 192) (* q q q r r r r r r r)) (* (- 32) (* q q q r r r d00 x00)) (* (- 32) (* q r r r r r r00 d d d)) (* (- 32) (* q r r r x x d00 x00)) (* 480 (* q q q q r r r r r x)) (* (- 48) (* q q q q q r r r x x)) (* 216 (* q q q q q r r r r x)) (* 32 (* q q q q r r00)) (* 64 (* q q q r r r00)) (* (- 32) (* q q q r x r00)) (* 128 (* q r r r r r r00 d00)) (* (- 128) (* q r r r r x r00 d00)) (* 32 (* q r r r x x r00 d00)) (* (- 32) ?x2000) (* (- 32) (* q r r r r r d00 d00 q00)) (* 32 (* q r r r r x d00 d00 q00)) (* (- 8) (* q r r r x x d00 d00 q00)) (* (- 8) (* q q q q r d00 q00)) (* (- 16) (* q q q r r d00 q00)) (* 8 (* q q q r x d00 q00)) (* (- 16) ?x2108) (* (- 24) ?x2109) (* 24 ?x2111) (* 6 ?x2116) (* (- 12) ?x2117) (* (- 2) ?x2124) (* (- 64) ?x2125) (* (- 48) ?x2133) ?x8462 (* 2 ?x2288) ?x2283 (* (- 12) ?x2295) (* 24 ?x2301) (* 3 ?x2304) (* (- 6) ?x2312) (* (- 8) ?x2390) (* 64 (* q q r r r x d00 x00)) (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* (- 32) (* q q q r x r00 d)) (* 16 (* q q q r r r00 d d)) (* 64 (* q q q r r r00 d)) (* 8 (* q q q q r r00 d d)) (* 32 (* q q q q r r00 d)) (* (- 8) (* q q q r x r00 d d)) ?x12533 (* 48 (* q q q r r r r00 d00 d)) (* 24 (* q q q r r r r00 d00 d d)) ?x3631 (* 128 (* q q r r r r r00 d00)) (* 192 (* q q r r r r r00 d00 d)) (* 96 (* q q r r r r r00 d00 d d)) ?x3704 (* (- 96) (* q q r r r x r00 d00 d)) (* (- 48) (* q q r r r x r00 d00 d d)) ?x3711 (* 192 (* q r r r r r r00 d00 d)) (* 96 (* q r r r r r r00 d00 d d)) ?x3726 (* (- 192) (* q r r r r x r00 d00 d)) (* (- 96) (* q r r r r x r00 d00 d d)) ?x3739 (* 48 (* q r r r x x r00 d00 d)) (* 24 (* q r r r x x r00 d00 d d)) ?x3653 (* (- 8) (* ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 ?x7071 r q q)) ?x4653 ?x4656 ?x4661 (* (- 12) (* q q q q r x d00 d00 q00 d)) ?x12726 (* 4 (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 ?x7071 r q q)) ?x5501 ?x5464 ?x5506 (* (- 48) (* q r r r r r d00 d00 q00 d)) ?x5511 ?x5515 (* 48 (* q r r r r x d00 d00 q00 d)) ?x5521 ?x5527 (* (- 12) (* q r r r x x d00 d00 q00 d)) ?x5531 ?x5475 (* (- 8) (* q q q q r d00 q00 d)) (* (- 2) (* q q q q r d00 q00 d d)) (* (- 16) (* q q q r r d00 q00 d)) (* (- 4) (* q q q r r d00 q00 d d)) (* 8 (* q q q r x d00 q00 d)) (* 2 (* q q q r x d00 q00 d d)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r r q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* 4 (* q q q q r d00 d00 q00 d)) ?x2523 (* 8 (* q q q r r d00 d00 q00 d)) ?x6540 ?x11735 (* (- 352) (* q q q q r r r r r r)) (* q q q q r d00 d00 q00 d d) (* (- 48) (* q q r r r x d00 q00 d)) (* 2 (* q q q r r d00 d00 q00 d d)) (* q q q q q r d00 d00 q00 d d) (* 6 ?x6931) (* (- 48) (* q r r r x x d00 x00 d)) (* (- 12) ?x6969) (* 12 ?x6973) (* 6 ?x6984) (* (- 12) ?x6985) (* (- 4) (* q q q r x d00 d00 q00)) (* 4 (* q q q q q r d00 d00 q00 d)) (* 8 ?x7034) ?x12733 (* 8 (* q q q r r d00 d00 q00)) (* (- 1) ?x7092) (* (- 8) (* q r r r x x r00 d d d)) (* 24 (* q q q q r r d00 d00 q00 d)) (* 48 ?x7169) (* (- 48) (* q q q r r x d00 d00 q00)) (* 352 (* q q q r r r r r r x)) (* 4 (* q q q q r d00 d00 q00)) ?x12173 (* 24 (* q q q q r r d00 d00 q00)) (* 4 (* q q q q q r d00 d00 q00)) (* (- 12) (* q q q q r x d00 d00 q00)) (* (- 4) ?x7379) (* 4 ?x7383) (* 16 (* q r r r x x d00 q00)) (* (- 32) (* q q r r r x d00 q00)) (* 64 (* q r r r r r d00 q00)) (* 48 (* q r r r r r d00 q00 d d)) ?x8384 (* (- 64) (* q r r r x x r00)) (* (- 256) (* q r r r r r r00)) (* 12 ?x7554) (* 256 (* q r r r r x r00)) (* 16 (* q q r r r x r00 d d d)) (* 128 (* q q r r r x r00)) (* (- 256) (* q q r r r r r00)) (* (- 16) (* q q q r x d00 x00)) (* 16 (* q q q q r d00 x00)) (* 16 (* q q q r x r00 d00)) (* 8 (* q q q q q r d)) (* (- 16) (* q q q q r r00 d00)) (* 4 (* q q q q q r d d)) (* (- 2) (* q q q q q r d d d)) (* (- 32) (* q q q q r r)) (* (- 1) (* q q q q q r d d d d)) ?x8453 (* 32 (* q q q q r r r x x x)) (* (- 32) (* q q q r r r00 d00)) (* 32 (* q q q r r d00 x00)) (* (- 64) (* q q q r r r r00)) (* (- 3) ?x7777) (* (- 216) (* q q q q r r r r x x)) (* 32 (* q q q r r x)) (* (- 64) (* q q q r r r)) (* (- 32) (* q q q r r r d)) (* 16 (* q q q r r r d d)) (* 16 (* q q q r r r d00 q00)) (* (- 64) (* q r r r r x d00 q00)) (* 96 (* q r r r r r d00 q00 d)) (* (- 96) (* q r r r r x d00 q00 d)) (* 192 (* q q r r r x r00 d)) (* (- 48) (* q r r r r x d00 q00 d d)) ?x8412 (* (- 24) (* q r r r x x d00 x00 d d)) (* 24 (* q r r r x x d00 q00 d)) (* (- 96) (* q r r r x x r00 d)) (* 12 (* q r r r x x d00 q00 d d)) ?x8364 ?x13320 (* q q q q r x d d d d) (* (- 32) (* q q r r r r r00 d d d)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 r r r q q) ?x8907 ?x9612 (* 2 (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q q)) (* (- 24) (* q q q q r x d)) (* (- 20) (* q q q q r x d d)) (* (- 2) (* q q q q r x d d d)) (* (- 16) (* q q q q r r00 d00 d)) (* (- 4) (* q q q q r r00 d00 d d)) (* (- 32) (* q q q r r r00 d00 d)) (* 48 (* q q r r r r d00 q00 d d)) (* (- 8) (* q q q r r r00 d00 d d)) (* 16 (* q q q r x r00 d00 d)) (* 4 (* q q q r x r00 d00 d d)) (* 16 (* q q q q r d00 x00 d)) (* 4 (* q q q q r d00 x00 d d)) (* 32 (* q q q r r d00 x00 d)) (* 8 (* q q q r r d00 x00 d d)) (* (- 16) (* q q q r x d00 x00 d)) (* (- 4) (* q q q r x d00 x00 d d)) (* (- 96) (* q q q r r r r00 d)) (* (- 48) (* q q q r r r r00 d d)) (* (- 8) (* q q q r r r r00 d d d)) (* (- 384) (* q q r r r r r00 d)) ?x12265 ?x12407 (* (- 96) (* q q q r r r r r x r00)) (* 8 (* q q q q q q r r r r00)) (* 48 (* q q q q q r r r r r00)) (* (- 24) (* q q q q q r r r x r00)) (* 96 (* q q q q r r r r r r00)) (* (- 96) (* q q q q r r r r x r00)) (* 24 (* q q q q r r r x x r00)) (* 64 (* q q q r r r r r r r00)) (* 48 (* q q q r r r r x x r00)) (* (- 8) (* q q q r r r x x x r00)) ?x12558 (* 192 (* q r r r r x r00 d d)) ?x12525 ?x8468 (* 96 (* q q r r r r d00 q00 d)) (* 12 (* q q q r x x d00 d00 q00 d)) ?x12735 ?x6530 (* 36 (* q q q r r r d00 d00 q00 d)) ?x5431 (* (- 48) (* q q q r r x d00 d00 q00 d)) ?x13032 (* (- 16) (* q q r r r r d00 d00 q00 d)) (* (- 24) (* q q r r r x d00 d00 q00 d)) ?x14715 (* 8 (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r r r q)) ?x12883 (* (- 12) (* q q q r r x d d d)) (* (- 4) (* q q r x x x d00 d00 q00 d)) ?x12948 ?x8862 ?x13688 (* (- 48) (* q r r r x x r00 d d)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* (- 24) (* q q r r r x d00 q00 d d)) ?x13895 ?x8872 ?x8855 (* q q q q r r r x x x d d) (* (- 384) (* q r r r r r r00 d)) (* 32 (* q r r r r x r00 d d d)) ?x6541 (* (- 192) (* q r r r r r r00 d d)) ?x8536 ?x1250 (* 96 (* q r r r r x d00 x00 d d)) ?x14466 ?x14871 (* 24 (* q q q r r r d00 q00 d)) (* (- 128) (* q q r r r r d00 x00)) (* (- 192) (* q q r r r r d00 x00 d)) ?x6160 (* 12 (* q q q r r r d00 q00 d d)) ?x6699 ?x13027 (* (- 48) (* q q q r r r d00 x00 d)) (* (- 24) (* q q q r r r d00 x00 d d)) ?x11571 (* (- 96) (* q q r r r r d00 x00 d d)) (* 96 (* q q r r r x d00 x00 d)) (* 48 (* q q r r r x d00 x00 d d)) (* (- 192) (* q r r r r r d00 x00 d)) (* (- 96) (* q r r r r r d00 x00 d d)) ?x12871 (* 192 (* q r r r r x d00 x00 d)) ?x8040 (* 64 (* q q r r r r d00 q00)) (* 16 (* q q q r x x d)) (* 16 (* q q q r x x d d)) ?x8865 (* 24 (* q q r r x x d00 d00 q00 d)))))
 (let ((?x636 (* (- 1) d)))
 (let ((?x4046 (+ (- 2) q ?x292 ?x381 ?x636)))
 (let ((?x876 (+ (- 4) q)))
 (let ((?x977 (* 2 (* d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r))))
 (let ((?x11653 (* (- 1) (* d00 d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r))))
 (let ((?x9319 (* (- 4) (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x5180 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x1217 (* 4 (* d00 r00 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r))))
 (let ((?x7918 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x4046 ?x4046 ?x4046 r r r r))))
 (let ((?x4044 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x5257 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x921 (* (- 2) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r))))
 (let ((?x6151 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x9236 (* 4 (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r r))))
 (let ((?x12018 (* (- 1) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r))))
 (let ((?x3642 (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x4046 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x1464 (* (- 4) (* d00 x00 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r))))
 (let ((?x642 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x10499 (+ (* d00 d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r) ?x642 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x4046 r)) ?x1464 ?x3642 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 r)) (* 4 (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 ?x4046 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 r)) (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 r r)) (* d00 d00 q00 ?x876 ?x876 ?x876 ?x4046 ?x4046 ?x4046 r r r) ?x12018 ?x9236 (* 8 (* r00 ?x876 ?x876 ?x876 ?x4046 ?x4046 ?x4046 r r r)) ?x6151 (* 8 (* ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r r r)) ?x921 ?x5257 ?x4044 (* 4 (* d00 x00 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r)) (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r)) ?x7918 ?x1217 (* (- 8) (* ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 ?x4046 r)) (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 r)) (* (- 2) (* d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r)) (* (- 8) (* r00 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r)) (* 2 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r)) ?x5180 ?x9319 (* 8 (* r00 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r)) ?x11653 (* d00 d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 r) (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 r)) (* (- 4) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r r)) (* (- 8) (* ?x876 ?x876 ?x876 ?x4046 ?x4046 ?x4046 ?x4046 r r r)) (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 r)) ?x977 (* (- 8) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 r)))))
 (let ((?x10453 (+ 2 q ?x292 ?x381 d)))
 (let ((?x529 (+ 4 q)))
 (let ((?x10429 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 r r r))))
 (let ((?x1432 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 r r r))))
 (let ((?x7916 (* (- 4) (* ?x1753 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r r))))
 (let ((?x10410 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 r r r))))
 (let ((?x11438 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 r r r r))))
 (let ((?x4170 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x11473 (* 4 (* d00 x00 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x10591 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 r r r))))
 (let ((?x557 (* (- 4) (* d00 r00 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x11470 (* (- 1) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x5166 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r))))
 (let ((?x10539 (* 4 (* ?x1753 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x11546 (* (- 2) (* d00 q00 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x6009 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 r r r))))
 (let ((?x7857 (* 2 (* ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x2817 (+ ?x7857 ?x6009 (* 8 (* ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 ?x10453 r r r)) (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 ?x10453 r)) ?x11546 ?x10539 (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r)) ?x5166 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 r)) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10453 r)) (* d00 d00 q00 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 r r r) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 r r)) ?x11470 ?x557 (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 ?x10453 r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r)) (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 ?x10453 r)) (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 r)) (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 r)) (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10453 r)) ?x10591 (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 r r r)) ?x11473 ?x4170 (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 r) (* 8 (* r00 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r)) (* (- 8) (* ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 ?x10453 r r r)) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r) ?x11438 (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 r)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r)) (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 ?x10453 r)) ?x10410 ?x7916 ?x1432 ?x10429)))
 (let ((?x1300 (* (- 2) d)))
 (let ((?x10456 (+ (- 4) q ?x292 ?x381 ?x1300)))
 (let ((?x7301 (+ (- 8) q)))
 (let ((?x5292 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x10456 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x1121 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x11094 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x10456 ?x10456 ?x10456 r r r r))))
 (let ((?x7327 (* (- 4) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x10415 (* (- 2) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r))))
 (let ((?x569 (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x835 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x12185 (* 2 (* d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r))))
 (let ((?x11462 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r))))
 (let ((?x11347 (* 4 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r r))))
 (let ((?x11847 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x2232 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x11373 (* 4 (* d00 r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r))))
 (let ((?x761 (* (- 4) (* d00 x00 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r))))
 (let ((?x1488 (* (- 1) (* d00 d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r))))
 (let ((?x11682 (+ (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 r)) ?x1488 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r)) (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x10456 r)) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x10456 ?x10456 ?x10456 r r r) (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 r r)) ?x761 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r)) ?x11373 ?x2232 ?x11847 (* d00 d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 r)) (* 2 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r)) (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 r)) ?x11347 ?x11462 (* 8 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r r r)) (* 8 (* r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r)) ?x12185 (* (- 8) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 ?x10456 r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 r)) ?x835 ?x569 ?x10415 ?x7327 ?x11094 ?x1121 (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 r) (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r)) ?x5292 (* 4 (* d00 x00 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r)) (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 r)) (* 4 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 ?x10456 r)) (* (- 8) (* r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x10456 ?x10456 ?x10456 r r r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 r)) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x10456 ?x10456 ?x10456 ?x10456 r r r)) (* (- 4) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r r)))))
 (let (($x11386 (or (not (= ?x11682 0)) (not (= ?x2817 0)) (not (= ?x10499 0)) (not (= ?x6548 0)))))
 (let ((?x7706 (* q d d)))
 (let ((?x11900 (* 4 (* x d))))
 (let ((?x587 (* (- 2) (* q d))))
 (let ((?x608 (* (- 4) (* r d))))
 (let ((?x514 (* r00 d00)))
 (let ((?x515 (* 4 ?x514)))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x1599 (* 8 r)))
 (and (= (+ ?x1599 ?x379 ?x427 ?x411 ?x477 ?x515 ?x608 ?x587 ?x11900 ?x7706) 0) $x11386))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x12581 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x381 (* (- 1) x)))
 (let ((?x292 (* 2 r)))
 (let ((?x8604 (+ ?x292 ?x381 q)))
 (let ((?x1753 (+ 2 d)))
 (let ((?x7297 (* (- 2) (* d00 q00 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x7971 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x13351 (* (- 4) (* ?x1753 ?x8604 ?x8604 ?x8604 r r r r q q q))))
 (let ((?x6234 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x8235 (* 2 (* ?x1753 ?x8604 ?x8604 ?x8604 r r r q q q q))))
 (let ((?x14907 (* (- 4) (* d00 r00 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x11137 (* 4 (* ?x1753 ?x8604 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x2524 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x13960 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q q))))
 (let ((?x13558 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r r q))))
 (let ((?x13270 (* (- 1) (* ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r r q q q q))))
 (let ((?x1338 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x12213 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q q))))
 (let ((?x12201 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r r q))))
 (let ((?x2861 (* 4 (* d00 x00 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x9485 (+ ?x2861 (* d00 d00 q00 ?x8604 ?x8604 ?x8604 r r r q q q) (* (- 8) (* ?x8604 ?x8604 ?x8604 ?x8604 r r r q q q)) ?x12201 ?x12213 (* 2 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q q)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q q) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 r q q q q)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x8604 r q q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x8604 r q q q)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q)) (* 8 (* r00 ?x8604 ?x8604 ?x8604 r r r q q q)) (* (- 8) (* ?x1753 ?x1753 ?x8604 ?x8604 r q q q)) ?x1338 (* d00 d00 q00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q) ?x13270 (* 2 (* ?x1753 ?x1753 ?x1753 ?x8604 r q q q q)) ?x13558 ?x13960 ?x2524 (* 8 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r r q)) (* d00 d00 q00 ?x1753 ?x1753 ?x8604 r q q q) (* 4 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r q q q)) ?x11137 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) ?x14907 ?x8235 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x8604 r q q q)) ?x6234 (* (- 8) (* ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 ?x8604 r q q)) ?x13351 (* 4 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 ?x8604 r q q)) ?x7971 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x8604 r q q q)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) ?x7297 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x8604 r r q q q)))))
 (let (($x11743 (not (= ?x9485 0))))
 (let ((?x11268 (+ 2 ?x292 ?x381 q d)))
 (let ((?x529 (+ 4 q)))
 (let ((?x11511 (* (- 2) (* d00 q00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11501 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11495 (* (- 4) (* ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r r))))
 (let ((?x11456 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11429 (* 2 (* ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11426 (* (- 4) (* d00 r00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11419 (* 4 (* ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11397 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11401 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11392 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11383 (* (- 1) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11368 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11331 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r))))
 (let ((?x11311 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r r))))
 (let ((?x11298 (* 4 (* d00 x00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11514 (+ ?x11298 (* d00 d00 q00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r) (* (- 8) (* ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r r r)) ?x11311 ?x11331 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 r r r) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 r)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r)) (* 8 (* r00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r)) (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 r)) ?x11368 (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r) ?x11383 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 r)) ?x11392 ?x11401 ?x11397 (* 8 (* ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 ?x11268 r r r)) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r) (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 r)) ?x11419 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) ?x11426 ?x11429 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) ?x11456 (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r)) ?x11495 (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r)) ?x11501 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) ?x11511 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r r)))))
 (let (($x11522 (not (= ?x11514 0))))
 (let ((?x1300 (* (- 2) d)))
 (let ((?x7351 (+ (- 4) ?x292 ?x381 q ?x1300)))
 (let ((?x7301 (+ (- 8) q)))
 (let ((?x10795 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x10690 (* (- 1) (* d00 d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x10651 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x7351 ?x7351 ?x7351 r r r r))))
 (let ((?x10629 (* 4 (* d00 r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x11284 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x11279 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x1347 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x7351 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x11712 (* (- 4) (* d00 x00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x11242 (* (- 2) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x14785 (* (- 4) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x6721 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x11459 (* 2 (* d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x5091 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r))))
 (let ((?x5090 (* 4 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r r))))
 (let ((?x7359 (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x10823 (+ ?x7359 (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 ?x7351 r r r)) ?x5090 ?x5091 (* 2 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r) (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 r)) (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) (* (- 8) (* r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r)) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 r)) ?x11459 (* d00 d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r) ?x6721 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 r)) ?x14785 ?x11242 ?x11712 (* 8 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r r)) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r) (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r)) ?x1347 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) (* 8 (* r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) ?x11279 ?x11284 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) ?x10629 (* (- 8) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 ?x7351 r)) ?x10651 (* 4 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 ?x7351 r)) ?x10690 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) (* (- 4) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) ?x10795 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 r r)))))
 (let (($x11287 (not (= ?x10823 0))))
 (let ((?x636 (* (- 1) d)))
 (let ((?x11749 (+ (- 2) ?x292 ?x381 q ?x636)))
 (let ((?x876 (+ (- 4) q)))
 (let ((?x10369 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x639 (* (- 1) (* d00 d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x10389 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x11749 ?x11749 ?x11749 r r r r))))
 (let ((?x1090 (* 4 (* d00 r00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x10407 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x1054 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10419 (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x11749 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x818 (* (- 4) (* d00 x00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x699 (* (- 2) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x10475 (* (- 4) (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10480 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10493 (* 2 (* d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x12540 (* (- 1) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r))))
 (let ((?x951 (* 4 (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r r))))
 (let ((?x1508 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10348 (+ ?x1508 (* d00 d00 q00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r) (* (- 8) (* ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 ?x11749 r r r)) ?x951 ?x12540 (* 2 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r) (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) (* (- 8) (* r00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r)) (* (- 8) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 r)) ?x10493 (* d00 d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r) ?x10480 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 r)) ?x10475 ?x699 ?x818 (* 8 (* ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r r)) (* d00 d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r) (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r)) ?x10419 (* (- 4) (* d00 r00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) (* 8 (* r00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) ?x1054 ?x10407 (* (- 2) (* d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) ?x1090 (* (- 8) (* ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 ?x11749 r)) ?x10389 (* 4 (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 ?x11749 r)) ?x639 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) (* (- 4) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r)) (* 4 (* d00 x00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) ?x10369 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 r r)))))
 (let (($x7350 (not (= ?x10348 0))))
 (let ((?x9075 (* 4 (* d00 r00))))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x11900 (* 4 (* x d))))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x1599 (* 8 r)))
 (let ((?x11915 (+ ?x1599 ?x379 ?x11900 ?x411 ?x427 (* d d q) (* (- 2) (* d q)) ?x477 (* (- 4) (* d r)) ?x9075)))
 (let (($x8592 (= ?x11915 0)))
 (and $x8592 (or $x7350 $x11287 $x11522 $x11743)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x6558 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x8865 (* (- 6) (* q q q q q r r r x x d))))
 (let ((?x8040 (* 2 (* q q q r r r d00 q00 d d d))))
 (let ((?x12871 (* (- 16) (* q r r r r r d00 x00 d d d))))
 (let ((?x11571 (* (- 4) (* q q q r r r d00 x00 d d d))))
 (let ((?x13027 (* (- 3) (* q q q q r x d00 d00 q00 d d))))
 (let ((?x6699 (* 8 (* q q r r r x d00 x00 d d d))))
 (let ((?x6160 (* (- 16) (* q q r r r r d00 x00 d d d))))
 (let ((?x381 (* (- 1) x)))
 (let ((?x292 (* 2 r)))
 (let ((?x7071 (+ q ?x292 ?x381)))
 (let ((?x1753 (+ 2 d)))
 (let ((?x14871 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 r r r q q))))
 (let ((?x14466 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r r r q))))
 (let ((?x1250 (* 16 (* q r r r r x d00 x00 d d d))))
 (let ((?x8536 (* 12 (* q q q q q r r r r x d d))))
 (let ((?x6541 (* 36 (* q q q q q r r r r x d))))
 (let ((?x8855 (* 2 (* q q q q r r r x x x d))))
 (let ((?x8872 (* (- 24) (* q q q q r r r r x x d))))
 (let ((?x13895 (* (- 4) (* q q r r r x d00 q00 d d d))))
 (let ((?x13688 (* 4 (* ?x1753 ?x7071 ?x7071 ?x7071 ?x7071 r r r q q q))))
 (let ((?x8862 (* (- 6) (* q q q q r r r r x x d d))))
 (let ((?x12948 (* (- 1) (* q q r x x x d00 d00 q00 d d))))
 (let ((?x12883 (* (- 4) (* q r r r x x d00 x00 d d d))))
 (let ((?x14715 (* 48 (* q q q q r r r r r d00 x00))))
 (let ((?x13032 (* (- 12) (* q q q r r x d00 d00 q00 d d))))
 (let ((?x5431 (* 6 (* q q q r r r d00 d00 q00 d d))))
 (let ((?x6530 (* (- 16) (* q q r r r r d00 d00 q00 d d))))
 (let ((?x12735 (* 3 (* q q q r x x d00 d00 q00 d d))))
 (let ((?x8468 (* 4 (* q q q q q q r r r d00 x00))))
 (let ((?x12525 (* (- 48) (* q q q r r r r r x d00 x00))))
 (let ((?x12558 (* (- 48) (* q q q q r r r r x d00 x00))))
 (let ((?x12407 (* (- 4) (* q q q r r r x x x d00 x00))))
 (let ((?x12265 (* (- 12) (* q q q q q r r r x d00 x00))))
 (let ((?x9612 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q q))))
 (let ((?x8907 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 r r r r q))))
 (let ((?x13320 (* 8 (* q q r r r r d00 q00 d d d))))
 (let ((?x8364 (* 2 (* q r r r x x d00 q00 d d d))))
 (let ((?x8412 (* (- 8) (* q r r r r x d00 q00 d d d))))
 (let ((?x7777 (* q q q q q r r r x d00 d00 q00)))
 (let ((?x8453 (* 3 (* q q q q q q r r r x d d))))
 (let ((?x7554 (* q q q q q r r r x r00 d00)))
 (let ((?x8384 (* 8 (* q r r r r r d00 q00 d d d))))
 (let ((?x7383 (* q q q r r r x x x r00 d00)))
 (let ((?x7379 (* q q q q q q r r r r00 d00)))
 (let ((?x12173 (* 12 (* q q q q r r r x x d00 x00))))
 (let ((?x7169 (* q q q q r r r r x r00 d00)))
 (let ((?x7092 (* q q q r r r x x x d00 d00 q00)))
 (let ((?x12733 (* 6 (* q q r r x x d00 d00 q00 d d))))
 (let ((?x7034 (* q q q r r r r r r d00 d00 q00)))
 (let ((?x6985 (* q q q r r r r r x d00 d00 q00)))
 (let ((?x6984 (* q q q r r r r x x d00 d00 q00)))
 (let ((?x6973 (* q q q q r r r r r d00 d00 q00)))
 (let ((?x6969 (* q q q q r r r r x d00 d00 q00)))
 (let ((?x6931 (* q q q q q r r r r d00 d00 q00)))
 (let ((?x11735 (* 24 (* q q q r r r r x x d00 x00))))
 (let ((?x6540 (* 72 (* q q q q r r r r r x d))))
 (let ((?x2523 (* 32 (* q q q r r r r r r d00 x00))))
 (let ((?x5475 (* (- 1) (* q r r r x x d00 d00 q00 d d d))))
 (let ((?x5531 (* (- 6) (* q r r r x x d00 d00 q00 d d))))
 (let ((?x5527 (* 4 (* q r r r r x d00 d00 q00 d d d))))
 (let ((?x5521 (* 24 (* q r r r r x d00 d00 q00 d d))))
 (let ((?x5515 (* (- 4) (* q r r r r r d00 d00 q00 d d d))))
 (let ((?x5511 (* (- 24) (* q r r r r r d00 d00 q00 d d))))
 (let ((?x5506 (* 2 (* q q r r r x d00 d00 q00 d d d))))
 (let ((?x5464 (* (- 1) (* q q q r r r d00 d00 q00 d d d))))
 (let ((?x5501 (* (- 4) (* q q r r r r d00 d00 q00 d d d))))
 (let ((?x12726 (* 6 (* q q q q r r d00 d00 q00 d d))))
 (let ((?x4661 (* 4 (* q q q r r r r x x x d))))
 (let ((?x4656 (* (- 24) (* q q q r r r r r x x d))))
 (let ((?x4653 (* 48 (* q q q r r r r r r x d))))
 (let ((?x3653 (* 4 (* q r r r x x r00 d00 d d d))))
 (let ((?x3739 (* (- 16) (* q r r r r x r00 d00 d d d))))
 (let ((?x3726 (* 16 (* q r r r r r r00 d00 d d d))))
 (let ((?x3711 (* (- 8) (* q q r r r x r00 d00 d d d))))
 (let ((?x3704 (* 16 (* q q r r r r r00 d00 d d d))))
 (let ((?x3631 (* 4 (* q q q r r r r00 d00 d d d))))
 (let ((?x12533 (* 24 (* q q q q q r r r r d00 x00))))
 (let ((?x2390 (* q q q q r r r r r r d d)))
 (let ((?x2312 (* q q q q r r r x x d00 q00)))
 (let ((?x2304 (* q q q q r r r x x d00 d00 q00)))
 (let ((?x2301 (* q q q r r r r r x d00 q00)))
 (let ((?x2295 (* q q q r r r r x x d00 q00)))
 (let ((?x2283 (* 8 (* q q q r r r d d d))))
 (let ((?x2288 (* q q q r r r x x x d00 q00)))
 (let ((?x8462 (* (- 3) (* q q q q q r r r x x d d))))
 (let ((?x2133 (* q q q q q r r r r r d)))
 (let ((?x2125 (* q q q q r r r r r r d)))
 (let ((?x2124 (* q q q q q q r r r d00 q00)))
 (let ((?x2117 (* q q q q q r r r r d00 q00)))
 (let ((?x2116 (* q q q q q r r r x d00 q00)))
 (let ((?x2111 (* q q q q r r r r x d00 q00)))
 (let ((?x2109 (* q q q q r r r r r d00 q00)))
 (let ((?x2108 (* q q q r r r r r r d00 q00)))
 (let ((?x2000 (* q q q r r r r r r r d)))
 (let ((?x1737 (* q q q r r r r r r r00 d00)))
 (let ((?x1673 (* q q q q r r r r r r00 d00)))
 (let ((?x1669 (* q q q q q q r r r r d d)))
 (let ((?x1666 (* q q q q q q r r r r d)))
 (let ((?x1627 (* q q q q r r r x x r00 d00)))
 (let ((?x1618 (* q q q r r r r x x r00 d00)))
 (let ((?x4077 (* 12 (* q q q q r r r r r x d d))))
 (let ((?x1567 (* q q q r r r r r x r00 d00)))
 (let ((?x1427 (* q q q q q r r r r r d d)))
 (let ((?x1419 (* q q q q q q q r r r d d)))
 (let ((?x1143 (* q q q q q q r r r d00 d00 q00)))
 (let ((?x905 (* q q q q q q q r r r d)))
 (let ((?x8493 (* 6 (* q q q q q q r r r x d))))
 (let ((?x659 (* q q q q q r r r r r00 d00)))
 (let ((?x6548 (+ (* 72 (* q q q r r r r x x x)) (* (- 192) (* q q r r r r r00 d d)) (* (- 16) (* q q q r r x d)) (* 32 (* q q q r r r r00 d00)) (* (- 72) (* q q q q q q r r r r)) (* (- 24) ?x659) (* 384 (* q r r r r x r00 d)) ?x8493 (* (- 1) (* q q q r x d00 d00 q00 d d)) (* (- 2) ?x905) (* 32 (* q q q q q q r r r x)) ?x1143 (* (- 40) (* q q q r r x d d)) (* 4 (* q q q r x x d d d)) (* 96 (* q q r r r x r00 d d)) (* (- 4) (* q q q r x d00 d00 q00 d)) (* 12 (* q q q r x x d00 d00 q00)) (* (- 32) (* q q r r r x d00 d00 q00)) (* (- 240) (* q q q q q r r r r r)) (* (- 1) ?x1419) (* (- 8) (* q q q r r r x x x x)) (* (- 12) ?x1427) (* 24 (* q q r r x x d00 d00 q00)) (* (- 4) (* q q r x x x d00 d00 q00)) (* (- 2) (* q q q q r r d d d d)) (* 48 ?x1567) (* (- 240) (* q q q r r r r r x x)) (* 8 (* r00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) ?x4077 (* (- 24) ?x1618) (* (- 12) ?x1627) (* (- 8) (* q q q q q q q r r r)) (* (- 64) (* q q r r r x r00 d00)) (* (- 16) ?x1666) (* (- 6) ?x1669) (* (- 48) ?x1673) (* 16 (* q q q q r r d d)) (* (- 128) (* q r r r r r d00 x00)) (* 128 (* q r r r r x d00 x00)) (* 40 (* q q q r r r d00 d00 q00)) (* (- 32) ?x1737) (* (- 192) (* q q q r r r r r r r)) (* (- 32) (* q q q r r r d00 x00)) (* (- 32) (* q r r r r r r00 d d d)) (* (- 32) (* q r r r x x d00 x00)) (* 480 (* q q q q r r r r r x)) (* (- 48) (* q q q q q r r r x x)) (* 216 (* q q q q q r r r r x)) (* 32 (* q q q q r r00)) (* 64 (* q q q r r r00)) (* (- 32) (* q q q r x r00)) (* 128 (* q r r r r r r00 d00)) (* (- 128) (* q r r r r x r00 d00)) (* 32 (* q r r r x x r00 d00)) (* (- 32) ?x2000) (* (- 32) (* q r r r r r d00 d00 q00)) (* 32 (* q r r r r x d00 d00 q00)) (* (- 8) (* q r r r x x d00 d00 q00)) (* (- 8) (* q q q q r d00 q00)) (* (- 16) (* q q q r r d00 q00)) (* 8 (* q q q r x d00 q00)) (* (- 16) ?x2108) (* (- 24) ?x2109) (* 24 ?x2111) (* 6 ?x2116) (* (- 12) ?x2117) (* (- 2) ?x2124) (* (- 64) ?x2125) (* (- 48) ?x2133) ?x8462 (* 2 ?x2288) ?x2283 (* (- 12) ?x2295) (* 24 ?x2301) (* 3 ?x2304) (* (- 6) ?x2312) (* (- 8) ?x2390) (* 64 (* q q r r r x d00 x00)) (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* (- 32) (* q q q r x r00 d)) (* 16 (* q q q r r r00 d d)) (* 64 (* q q q r r r00 d)) (* 8 (* q q q q r r00 d d)) (* 32 (* q q q q r r00 d)) (* (- 8) (* q q q r x r00 d d)) ?x12533 (* 48 (* q q q r r r r00 d00 d)) (* 24 (* q q q r r r r00 d00 d d)) ?x3631 (* 128 (* q q r r r r r00 d00)) (* 192 (* q q r r r r r00 d00 d)) (* 96 (* q q r r r r r00 d00 d d)) ?x3704 (* (- 96) (* q q r r r x r00 d00 d)) (* (- 48) (* q q r r r x r00 d00 d d)) ?x3711 (* 192 (* q r r r r r r00 d00 d)) (* 96 (* q r r r r r r00 d00 d d)) ?x3726 (* (- 192) (* q r r r r x r00 d00 d)) (* (- 96) (* q r r r r x r00 d00 d d)) ?x3739 (* 48 (* q r r r x x r00 d00 d)) (* 24 (* q r r r x x r00 d00 d d)) ?x3653 (* (- 8) (* ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 ?x7071 r q q)) ?x4653 ?x4656 ?x4661 (* (- 12) (* q q q q r x d00 d00 q00 d)) ?x12726 (* 4 (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 ?x7071 r q q)) ?x5501 ?x5464 ?x5506 (* (- 48) (* q r r r r r d00 d00 q00 d)) ?x5511 ?x5515 (* 48 (* q r r r r x d00 d00 q00 d)) ?x5521 ?x5527 (* (- 12) (* q r r r x x d00 d00 q00 d)) ?x5531 ?x5475 (* (- 8) (* q q q q r d00 q00 d)) (* (- 2) (* q q q q r d00 q00 d d)) (* (- 16) (* q q q r r d00 q00 d)) (* (- 4) (* q q q r r d00 q00 d d)) (* 8 (* q q q r x d00 q00 d)) (* 2 (* q q q r x d00 q00 d d)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r r q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* 4 (* q q q q r d00 d00 q00 d)) ?x2523 (* 8 (* q q q r r d00 d00 q00 d)) ?x6540 ?x11735 (* (- 352) (* q q q q r r r r r r)) (* q q q q r d00 d00 q00 d d) (* (- 48) (* q q r r r x d00 q00 d)) (* 2 (* q q q r r d00 d00 q00 d d)) (* q q q q q r d00 d00 q00 d d) (* 6 ?x6931) (* (- 48) (* q r r r x x d00 x00 d)) (* (- 12) ?x6969) (* 12 ?x6973) (* 6 ?x6984) (* (- 12) ?x6985) (* (- 4) (* q q q r x d00 d00 q00)) (* 4 (* q q q q q r d00 d00 q00 d)) (* 8 ?x7034) ?x12733 (* 8 (* q q q r r d00 d00 q00)) (* (- 1) ?x7092) (* (- 8) (* q r r r x x r00 d d d)) (* 24 (* q q q q r r d00 d00 q00 d)) (* 48 ?x7169) (* (- 48) (* q q q r r x d00 d00 q00)) (* 352 (* q q q r r r r r r x)) (* 4 (* q q q q r d00 d00 q00)) ?x12173 (* 24 (* q q q q r r d00 d00 q00)) (* 4 (* q q q q q r d00 d00 q00)) (* (- 12) (* q q q q r x d00 d00 q00)) (* (- 4) ?x7379) (* 4 ?x7383) (* 16 (* q r r r x x d00 q00)) (* (- 32) (* q q r r r x d00 q00)) (* 64 (* q r r r r r d00 q00)) (* 48 (* q r r r r r d00 q00 d d)) ?x8384 (* (- 64) (* q r r r x x r00)) (* (- 256) (* q r r r r r r00)) (* 12 ?x7554) (* 256 (* q r r r r x r00)) (* 16 (* q q r r r x r00 d d d)) (* 128 (* q q r r r x r00)) (* (- 256) (* q q r r r r r00)) (* (- 16) (* q q q r x d00 x00)) (* 16 (* q q q q r d00 x00)) (* 16 (* q q q r x r00 d00)) (* 8 (* q q q q q r d)) (* (- 16) (* q q q q r r00 d00)) (* 4 (* q q q q q r d d)) (* (- 2) (* q q q q q r d d d)) (* (- 32) (* q q q q r r)) (* (- 1) (* q q q q q r d d d d)) ?x8453 (* 32 (* q q q q r r r x x x)) (* (- 32) (* q q q r r r00 d00)) (* 32 (* q q q r r d00 x00)) (* (- 64) (* q q q r r r r00)) (* (- 3) ?x7777) (* (- 216) (* q q q q r r r r x x)) (* 32 (* q q q r r x)) (* (- 64) (* q q q r r r)) (* (- 32) (* q q q r r r d)) (* 16 (* q q q r r r d d)) (* 16 (* q q q r r r d00 q00)) (* (- 64) (* q r r r r x d00 q00)) (* 96 (* q r r r r r d00 q00 d)) (* (- 96) (* q r r r r x d00 q00 d)) (* 192 (* q q r r r x r00 d)) (* (- 48) (* q r r r r x d00 q00 d d)) ?x8412 (* (- 24) (* q r r r x x d00 x00 d d)) (* 24 (* q r r r x x d00 q00 d)) (* (- 96) (* q r r r x x r00 d)) (* 12 (* q r r r x x d00 q00 d d)) ?x8364 ?x13320 (* q q q q r x d d d d) (* (- 32) (* q q r r r r r00 d d d)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 r r r q q) ?x8907 ?x9612 (* 2 (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q q)) (* (- 24) (* q q q q r x d)) (* (- 20) (* q q q q r x d d)) (* (- 2) (* q q q q r x d d d)) (* (- 16) (* q q q q r r00 d00 d)) (* (- 4) (* q q q q r r00 d00 d d)) (* (- 32) (* q q q r r r00 d00 d)) (* 48 (* q q r r r r d00 q00 d d)) (* (- 8) (* q q q r r r00 d00 d d)) (* 16 (* q q q r x r00 d00 d)) (* 4 (* q q q r x r00 d00 d d)) (* 16 (* q q q q r d00 x00 d)) (* 4 (* q q q q r d00 x00 d d)) (* 32 (* q q q r r d00 x00 d)) (* 8 (* q q q r r d00 x00 d d)) (* (- 16) (* q q q r x d00 x00 d)) (* (- 4) (* q q q r x d00 x00 d d)) (* (- 96) (* q q q r r r r00 d)) (* (- 48) (* q q q r r r r00 d d)) (* (- 8) (* q q q r r r r00 d d d)) (* (- 384) (* q q r r r r r00 d)) ?x12265 ?x12407 (* (- 96) (* q q q r r r r r x r00)) (* 8 (* q q q q q q r r r r00)) (* 48 (* q q q q q r r r r r00)) (* (- 24) (* q q q q q r r r x r00)) (* 96 (* q q q q r r r r r r00)) (* (- 96) (* q q q q r r r r x r00)) (* 24 (* q q q q r r r x x r00)) (* 64 (* q q q r r r r r r r00)) (* 48 (* q q q r r r r x x r00)) (* (- 8) (* q q q r r r x x x r00)) ?x12558 (* 192 (* q r r r r x r00 d d)) ?x12525 ?x8468 (* 96 (* q q r r r r d00 q00 d)) (* 12 (* q q q r x x d00 d00 q00 d)) ?x12735 ?x6530 (* 36 (* q q q r r r d00 d00 q00 d)) ?x5431 (* (- 48) (* q q q r r x d00 d00 q00 d)) ?x13032 (* (- 16) (* q q r r r r d00 d00 q00 d)) (* (- 24) (* q q r r r x d00 d00 q00 d)) ?x14715 (* 8 (* ?x1753 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r r r q)) ?x12883 (* (- 12) (* q q q r r x d d d)) (* (- 4) (* q q r x x x d00 d00 q00 d)) ?x12948 ?x8862 ?x13688 (* (- 48) (* q r r r x x r00 d d)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x7071 ?x7071 ?x7071 r q q)) (* (- 24) (* q q r r r x d00 q00 d d)) ?x13895 ?x8872 ?x8855 (* q q q q r r r x x x d d) (* (- 384) (* q r r r r r r00 d)) (* 32 (* q r r r r x r00 d d d)) ?x6541 (* (- 192) (* q r r r r r r00 d d)) ?x8536 ?x1250 (* 96 (* q r r r r x d00 x00 d d)) ?x14466 ?x14871 (* 24 (* q q q r r r d00 q00 d)) (* (- 128) (* q q r r r r d00 x00)) (* (- 192) (* q q r r r r d00 x00 d)) ?x6160 (* 12 (* q q q r r r d00 q00 d d)) ?x6699 ?x13027 (* (- 48) (* q q q r r r d00 x00 d)) (* (- 24) (* q q q r r r d00 x00 d d)) ?x11571 (* (- 96) (* q q r r r r d00 x00 d d)) (* 96 (* q q r r r x d00 x00 d)) (* 48 (* q q r r r x d00 x00 d d)) (* (- 192) (* q r r r r r d00 x00 d)) (* (- 96) (* q r r r r r d00 x00 d d)) ?x12871 (* 192 (* q r r r r x d00 x00 d)) ?x8040 (* 64 (* q q r r r r d00 q00)) (* 16 (* q q q r x x d)) (* 16 (* q q q r x x d d)) ?x8865 (* 24 (* q q r r x x d00 d00 q00 d)))))
 (let ((?x636 (* (- 1) d)))
 (let ((?x4046 (+ (- 2) q ?x292 ?x381 ?x636)))
 (let ((?x876 (+ (- 4) q)))
 (let ((?x977 (* 2 (* d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r))))
 (let ((?x11653 (* (- 1) (* d00 d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r))))
 (let ((?x9319 (* (- 4) (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x5180 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x1217 (* 4 (* d00 r00 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r))))
 (let ((?x7918 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x4046 ?x4046 ?x4046 r r r r))))
 (let ((?x4044 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x5257 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x921 (* (- 2) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r))))
 (let ((?x6151 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x9236 (* 4 (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r r))))
 (let ((?x12018 (* (- 1) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r))))
 (let ((?x3642 (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x4046 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x1464 (* (- 4) (* d00 x00 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r))))
 (let ((?x642 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x4046 ?x4046 ?x4046 r r r))))
 (let ((?x10499 (+ (* d00 d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r) ?x642 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x4046 r)) ?x1464 ?x3642 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 r)) (* 4 (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 ?x4046 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 r)) (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 r r)) (* d00 d00 q00 ?x876 ?x876 ?x876 ?x4046 ?x4046 ?x4046 r r r) ?x12018 ?x9236 (* 8 (* r00 ?x876 ?x876 ?x876 ?x4046 ?x4046 ?x4046 r r r)) ?x6151 (* 8 (* ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r r r)) ?x921 ?x5257 ?x4044 (* 4 (* d00 x00 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r)) (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r)) ?x7918 ?x1217 (* (- 8) (* ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 ?x4046 r)) (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 r)) (* (- 2) (* d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r)) (* (- 8) (* r00 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 r r r)) (* 2 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r)) ?x5180 ?x9319 (* 8 (* r00 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r)) ?x11653 (* d00 d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 r) (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 r)) (* (- 4) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 ?x4046 ?x4046 r r)) (* (- 8) (* ?x876 ?x876 ?x876 ?x4046 ?x4046 ?x4046 ?x4046 r r r)) (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x4046 r)) ?x977 (* (- 8) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x4046 ?x4046 r)))))
 (let ((?x10453 (+ 2 q ?x292 ?x381 d)))
 (let ((?x529 (+ 4 q)))
 (let ((?x10429 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 r r r))))
 (let ((?x1432 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 r r r))))
 (let ((?x7916 (* (- 4) (* ?x1753 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r r))))
 (let ((?x10410 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 r r r))))
 (let ((?x11438 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 r r r r))))
 (let ((?x4170 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x11473 (* 4 (* d00 x00 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x10591 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 r r r))))
 (let ((?x557 (* (- 4) (* d00 r00 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x11470 (* (- 1) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x5166 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r))))
 (let ((?x10539 (* 4 (* ?x1753 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x11546 (* (- 2) (* d00 q00 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x6009 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 r r r))))
 (let ((?x7857 (* 2 (* ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r))))
 (let ((?x2817 (+ ?x7857 ?x6009 (* 8 (* ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 ?x10453 r r r)) (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 ?x10453 r)) ?x11546 ?x10539 (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r)) ?x5166 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 r)) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10453 r)) (* d00 d00 q00 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 r r r) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 r r)) ?x11470 ?x557 (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 ?x10453 r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r)) (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 ?x10453 r)) (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 r)) (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 r)) (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x10453 r)) ?x10591 (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x529 ?x10453 ?x10453 r r r)) ?x11473 ?x4170 (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 r) (* 8 (* r00 ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r r r)) (* (- 8) (* ?x529 ?x529 ?x529 ?x10453 ?x10453 ?x10453 ?x10453 r r r)) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r) ?x11438 (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 r)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x10453 ?x10453 ?x10453 r)) (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x10453 ?x10453 r)) ?x10410 ?x7916 ?x1432 ?x10429)))
 (let ((?x1300 (* (- 2) d)))
 (let ((?x10456 (+ (- 4) q ?x292 ?x381 ?x1300)))
 (let ((?x7301 (+ (- 8) q)))
 (let ((?x5292 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x10456 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x1121 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x11094 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x10456 ?x10456 ?x10456 r r r r))))
 (let ((?x7327 (* (- 4) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x10415 (* (- 2) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r))))
 (let ((?x569 (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x835 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x12185 (* 2 (* d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r))))
 (let ((?x11462 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r))))
 (let ((?x11347 (* 4 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r r))))
 (let ((?x11847 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x2232 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r r r))))
 (let ((?x11373 (* 4 (* d00 r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r))))
 (let ((?x761 (* (- 4) (* d00 x00 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r))))
 (let ((?x1488 (* (- 1) (* d00 d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r))))
 (let ((?x11682 (+ (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 r)) ?x1488 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r)) (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x10456 r)) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x10456 ?x10456 ?x10456 r r r) (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 r r)) ?x761 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r)) ?x11373 ?x2232 ?x11847 (* d00 d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 r)) (* 2 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r)) (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 r)) ?x11347 ?x11462 (* 8 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r r r)) (* 8 (* r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r)) ?x12185 (* (- 8) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 ?x10456 r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 r)) ?x835 ?x569 ?x10415 ?x7327 ?x11094 ?x1121 (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 r) (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r)) ?x5292 (* 4 (* d00 x00 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r)) (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 r)) (* 4 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 ?x10456 r)) (* (- 8) (* r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x10456 ?x10456 ?x10456 r r r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x10456 r)) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 r r r) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x10456 ?x10456 ?x10456 ?x10456 r r r)) (* (- 4) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x10456 ?x10456 ?x10456 r r)))))
 (let (($x11386 (or (not (= ?x11682 0)) (not (= ?x2817 0)) (not (= ?x10499 0)) (not (= ?x6548 0)))))
 (let ((?x7706 (* q d d)))
 (let ((?x11900 (* 4 (* x d))))
 (let ((?x587 (* (- 2) (* q d))))
 (let ((?x608 (* (- 4) (* r d))))
 (let ((?x514 (* r00 d00)))
 (let ((?x515 (* 4 ?x514)))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x1599 (* 8 r)))
 (let (($x11321 (and (= (+ ?x1599 ?x379 ?x427 ?x411 ?x477 ?x515 ?x608 ?x587 ?x11900 ?x7706) 0) $x11386)))
 (let ((?x9513 (* (- 4) (* ?x1753 ?x1753 ?x1753 (+ ?x292 ?x381 q) r r q q q))))
 (let ((?x8604 (+ ?x292 ?x381 q)))
 (let ((?x7297 (* (- 2) (* d00 q00 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x7971 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x13351 (* (- 4) (* ?x1753 ?x8604 ?x8604 ?x8604 r r r r q q q))))
 (let ((?x6234 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x8235 (* 2 (* ?x1753 ?x8604 ?x8604 ?x8604 r r r q q q q))))
 (let ((?x14907 (* (- 4) (* d00 r00 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x11137 (* 4 (* ?x1753 ?x8604 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x2524 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x13960 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q q))))
 (let ((?x13558 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r r q))))
 (let ((?x13270 (* (- 1) (* ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r r q q q q))))
 (let ((?x1338 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x12213 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q q))))
 (let ((?x12201 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r r q))))
 (let ((?x2861 (* 4 (* d00 x00 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x9485 (+ ?x2861 (* d00 d00 q00 ?x8604 ?x8604 ?x8604 r r r q q q) (* (- 8) (* ?x8604 ?x8604 ?x8604 ?x8604 r r r q q q)) ?x12201 ?x12213 (* 2 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q q)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q q) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 r q q q q)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x8604 r q q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x8604 r q q q)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q)) (* 8 (* r00 ?x8604 ?x8604 ?x8604 r r r q q q)) (* (- 8) (* ?x1753 ?x1753 ?x8604 ?x8604 r q q q)) ?x1338 (* d00 d00 q00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q) ?x13270 (* 2 (* ?x1753 ?x1753 ?x1753 ?x8604 r q q q q)) ?x13558 ?x13960 ?x2524 (* 8 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r r q)) (* d00 d00 q00 ?x1753 ?x1753 ?x8604 r q q q) (* 4 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r q q q)) ?x11137 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) ?x14907 ?x8235 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x8604 r q q q)) ?x6234 (* (- 8) (* ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 ?x8604 r q q)) ?x13351 (* 4 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 ?x8604 r q q)) ?x7971 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x8604 r q q q)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) ?x7297 ?x9513)))
 (let (($x11743 (not (= ?x9485 0))))
 (let ((?x11268 (+ 2 ?x292 ?x381 q d)))
 (let ((?x11511 (* (- 2) (* d00 q00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11501 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11495 (* (- 4) (* ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r r))))
 (let ((?x11456 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11429 (* 2 (* ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11426 (* (- 4) (* d00 r00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11419 (* 4 (* ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11397 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11401 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11392 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11383 (* (- 1) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11368 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11331 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r))))
 (let ((?x11311 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r r))))
 (let ((?x11298 (* 4 (* d00 x00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11514 (+ ?x11298 (* d00 d00 q00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r) (* (- 8) (* ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r r r)) ?x11311 ?x11331 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 r r r) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 r)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r)) (* 8 (* r00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r)) (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 r)) ?x11368 (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r) ?x11383 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 r)) ?x11392 ?x11401 ?x11397 (* 8 (* ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 ?x11268 r r r)) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r) (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 r)) ?x11419 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) ?x11426 ?x11429 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) ?x11456 (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r)) ?x11495 (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r)) ?x11501 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) ?x11511 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r r)))))
 (let (($x11522 (not (= ?x11514 0))))
 (let ((?x7351 (+ (- 4) ?x292 ?x381 q ?x1300)))
 (let ((?x10795 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x10690 (* (- 1) (* d00 d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x10651 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x7351 ?x7351 ?x7351 r r r r))))
 (let ((?x10629 (* 4 (* d00 r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x11284 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x11279 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x1347 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x7351 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x11712 (* (- 4) (* d00 x00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x11242 (* (- 2) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x14785 (* (- 4) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x6721 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x11459 (* 2 (* d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x5091 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r))))
 (let ((?x5090 (* 4 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r r))))
 (let ((?x7359 (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x10823 (+ ?x7359 (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 ?x7351 r r r)) ?x5090 ?x5091 (* 2 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r) (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 r)) (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) (* (- 8) (* r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r)) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 r)) ?x11459 (* d00 d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r) ?x6721 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 r)) ?x14785 ?x11242 ?x11712 (* 8 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r r)) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r) (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r)) ?x1347 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) (* 8 (* r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) ?x11279 ?x11284 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) ?x10629 (* (- 8) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 ?x7351 r)) ?x10651 (* 4 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 ?x7351 r)) ?x10690 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) (* (- 4) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) ?x10795 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 r r)))))
 (let (($x11287 (not (= ?x10823 0))))
 (let ((?x11749 (+ (- 2) ?x292 ?x381 q ?x636)))
 (let ((?x10369 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x639 (* (- 1) (* d00 d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x10389 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x11749 ?x11749 ?x11749 r r r r))))
 (let ((?x1090 (* 4 (* d00 r00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x10407 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x1054 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10419 (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x11749 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x818 (* (- 4) (* d00 x00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x699 (* (- 2) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x10475 (* (- 4) (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10480 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10493 (* 2 (* d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x12540 (* (- 1) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r))))
 (let ((?x951 (* 4 (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r r))))
 (let ((?x1508 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10348 (+ ?x1508 (* d00 d00 q00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r) (* (- 8) (* ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 ?x11749 r r r)) ?x951 ?x12540 (* 2 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r) (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) (* (- 8) (* r00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r)) (* (- 8) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 r)) ?x10493 (* d00 d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r) ?x10480 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 r)) ?x10475 ?x699 ?x818 (* 8 (* ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r r)) (* d00 d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r) (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r)) ?x10419 (* (- 4) (* d00 r00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) (* 8 (* r00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) ?x1054 ?x10407 (* (- 2) (* d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) ?x1090 (* (- 8) (* ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 ?x11749 r)) ?x10389 (* 4 (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 ?x11749 r)) ?x639 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) (* (- 4) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r)) (* 4 (* d00 x00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) ?x10369 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 r r)))))
 (let (($x7350 (not (= ?x10348 0))))
 (let ((?x9075 (* 4 (* d00 r00))))
 (let ((?x11915 (+ ?x1599 ?x379 ?x11900 ?x411 ?x427 (* d d q) (* (- 2) (* d q)) ?x477 (* (- 4) (* d r)) ?x9075)))
 (let (($x8592 (= ?x11915 0)))
 (let (($x11634 (and $x8592 (or $x7350 $x11287 $x11522 $x11743))))
 (rewrite (= $x11634 $x11321)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x11521 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x381 (* (- 1) x)))
 (let ((?x292 (* 2 r)))
 (let ((?x11268 (+ 2 ?x292 ?x381 q d)))
 (let ((?x529 (+ 4 q)))
 (let ((?x1753 (+ 2 d)))
 (let ((?x11511 (* (- 2) (* d00 q00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11501 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11495 (* (- 4) (* ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r r))))
 (let ((?x11456 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11429 (* 2 (* ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11426 (* (- 4) (* d00 r00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11419 (* 4 (* ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11397 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11401 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11392 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11383 (* (- 1) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11368 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11331 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r))))
 (let ((?x11311 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r r))))
 (let ((?x11298 (* 4 (* d00 x00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11514 (+ ?x11298 (* d00 d00 q00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r) (* (- 8) (* ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r r r)) ?x11311 ?x11331 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 r r r) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 r)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r)) (* 8 (* r00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r)) (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 r)) ?x11368 (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r) ?x11383 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 r)) ?x11392 ?x11401 ?x11397 (* 8 (* ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 ?x11268 r r r)) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r) (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 r)) ?x11419 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) ?x11426 ?x11429 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) ?x11456 (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r)) ?x11495 (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r)) ?x11501 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) ?x11511 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r r)))))
 (let (($x11522 (not (= ?x11514 0))))
 (let ((?x1300 (* (- 2) d)))
 (let ((?x7351 (+ (- 4) ?x292 ?x381 q ?x1300)))
 (let ((?x7301 (+ (- 8) q)))
 (let ((?x10795 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x10690 (* (- 1) (* d00 d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x10651 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x7351 ?x7351 ?x7351 r r r r))))
 (let ((?x10629 (* 4 (* d00 r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x11284 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x11279 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x1347 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x7351 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x11712 (* (- 4) (* d00 x00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x11242 (* (- 2) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x14785 (* (- 4) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x6721 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x11459 (* 2 (* d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x5091 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r))))
 (let ((?x5090 (* 4 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r r))))
 (let ((?x7359 (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x10823 (+ ?x7359 (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 ?x7351 r r r)) ?x5090 ?x5091 (* 2 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r) (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 r)) (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) (* (- 8) (* r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r)) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 r)) ?x11459 (* d00 d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r) ?x6721 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 r)) ?x14785 ?x11242 ?x11712 (* 8 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r r)) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r) (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r)) ?x1347 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) (* 8 (* r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) ?x11279 ?x11284 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) ?x10629 (* (- 8) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 ?x7351 r)) ?x10651 (* 4 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 ?x7351 r)) ?x10690 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) (* (- 4) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) ?x10795 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 r r)))))
 (let (($x11287 (not (= ?x10823 0))))
 (let ((?x636 (* (- 1) d)))
 (let ((?x11749 (+ (- 2) ?x292 ?x381 q ?x636)))
 (let ((?x876 (+ (- 4) q)))
 (let ((?x10369 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x639 (* (- 1) (* d00 d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x10389 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x11749 ?x11749 ?x11749 r r r r))))
 (let ((?x1090 (* 4 (* d00 r00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x10407 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x1054 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10419 (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x11749 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x818 (* (- 4) (* d00 x00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x699 (* (- 2) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x10475 (* (- 4) (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10480 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10493 (* 2 (* d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x12540 (* (- 1) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r))))
 (let ((?x951 (* 4 (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r r))))
 (let ((?x1508 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10348 (+ ?x1508 (* d00 d00 q00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r) (* (- 8) (* ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 ?x11749 r r r)) ?x951 ?x12540 (* 2 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r) (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) (* (- 8) (* r00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r)) (* (- 8) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 r)) ?x10493 (* d00 d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r) ?x10480 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 r)) ?x10475 ?x699 ?x818 (* 8 (* ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r r)) (* d00 d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r) (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r)) ?x10419 (* (- 4) (* d00 r00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) (* 8 (* r00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) ?x1054 ?x10407 (* (- 2) (* d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) ?x1090 (* (- 8) (* ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 ?x11749 r)) ?x10389 (* 4 (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 ?x11749 r)) ?x639 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) (* (- 4) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r)) (* 4 (* d00 x00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) ?x10369 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 r r)))))
 (let (($x7350 (not (= ?x10348 0))))
 (let ((?x9513 (* (- 4) (* ?x1753 ?x1753 ?x1753 (+ ?x292 ?x381 q) r r q q q))))
 (let ((?x8604 (+ ?x292 ?x381 q)))
 (let ((?x7297 (* (- 2) (* d00 q00 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x7971 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x13351 (* (- 4) (* ?x1753 ?x8604 ?x8604 ?x8604 r r r r q q q))))
 (let ((?x6234 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x8235 (* 2 (* ?x1753 ?x8604 ?x8604 ?x8604 r r r q q q q))))
 (let ((?x14907 (* (- 4) (* d00 r00 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x11137 (* 4 (* ?x1753 ?x8604 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x2524 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x13960 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q q))))
 (let ((?x13558 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r r q))))
 (let ((?x13270 (* (- 1) (* ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r r q q q q))))
 (let ((?x1338 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x12213 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q q))))
 (let ((?x12201 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r r q))))
 (let ((?x2861 (* 4 (* d00 x00 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x9485 (+ ?x2861 (* d00 d00 q00 ?x8604 ?x8604 ?x8604 r r r q q q) (* (- 8) (* ?x8604 ?x8604 ?x8604 ?x8604 r r r q q q)) ?x12201 ?x12213 (* 2 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q q)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q q) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 r q q q q)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x8604 r q q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x8604 r q q q)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q)) (* 8 (* r00 ?x8604 ?x8604 ?x8604 r r r q q q)) (* (- 8) (* ?x1753 ?x1753 ?x8604 ?x8604 r q q q)) ?x1338 (* d00 d00 q00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q) ?x13270 (* 2 (* ?x1753 ?x1753 ?x1753 ?x8604 r q q q q)) ?x13558 ?x13960 ?x2524 (* 8 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r r q)) (* d00 d00 q00 ?x1753 ?x1753 ?x8604 r q q q) (* 4 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r q q q)) ?x11137 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) ?x14907 ?x8235 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x8604 r q q q)) ?x6234 (* (- 8) (* ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 ?x8604 r q q)) ?x13351 (* 4 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 ?x8604 r q q)) ?x7971 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x8604 r q q q)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) ?x7297 ?x9513)))
 (let (($x11743 (not (= ?x9485 0))))
 (let ((?x9075 (* 4 (* d00 r00))))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x11900 (* 4 (* x d))))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x1599 (* 8 r)))
 (let ((?x11915 (+ ?x1599 ?x379 ?x11900 ?x411 ?x427 (* d d q) (* (- 2) (* d q)) ?x477 (* (- 4) (* d r)) ?x9075)))
 (let (($x8592 (= ?x11915 0)))
 (and $x8592 (or $x11743 $x7350 $x11287 $x11522))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x11621 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x381 (* (- 1) x)))
 (let ((?x292 (* 2 r)))
 (let ((?x8604 (+ ?x292 ?x381 q)))
 (let ((?x1753 (+ 2 d)))
 (let ((?x7297 (* (- 2) (* d00 q00 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x7971 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x13351 (* (- 4) (* ?x1753 ?x8604 ?x8604 ?x8604 r r r r q q q))))
 (let ((?x6234 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x8235 (* 2 (* ?x1753 ?x8604 ?x8604 ?x8604 r r r q q q q))))
 (let ((?x14907 (* (- 4) (* d00 r00 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x11137 (* 4 (* ?x1753 ?x8604 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x2524 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x13960 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q q))))
 (let ((?x13558 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r r q))))
 (let ((?x13270 (* (- 1) (* ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r r q q q q))))
 (let ((?x1338 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q))))
 (let ((?x12213 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q q))))
 (let ((?x12201 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r r q))))
 (let ((?x2861 (* 4 (* d00 x00 ?x8604 ?x8604 ?x8604 r r r q q q))))
 (let ((?x9485 (+ ?x2861 (* d00 d00 q00 ?x8604 ?x8604 ?x8604 r r r q q q) (* (- 8) (* ?x8604 ?x8604 ?x8604 ?x8604 r r r q q q)) ?x12201 ?x12213 (* 2 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q q)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q q) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x8604 r q q q q)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x8604 r q q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x8604 r q q q)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r r r q)) (* 8 (* r00 ?x8604 ?x8604 ?x8604 r r r q q q)) (* (- 8) (* ?x1753 ?x1753 ?x8604 ?x8604 r q q q)) ?x1338 (* d00 d00 q00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q) ?x13270 (* 2 (* ?x1753 ?x1753 ?x1753 ?x8604 r q q q q)) ?x13558 ?x13960 ?x2524 (* 8 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r r q)) (* d00 d00 q00 ?x1753 ?x1753 ?x8604 r q q q) (* 4 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 r q q q)) ?x11137 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) ?x14907 ?x8235 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) (* 8 (* r00 ?x1753 ?x1753 ?x8604 r q q q)) ?x6234 (* (- 8) (* ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 ?x8604 r q q)) ?x13351 (* 4 (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 ?x8604 r q q)) ?x7971 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x8604 r q q q)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r r q q)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x8604 ?x8604 ?x8604 r q q)) ?x7297 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x8604 r r q q q)))))
 (let (($x11743 (not (= ?x9485 0))))
 (let ((?x11268 (+ 2 ?x292 ?x381 q d)))
 (let ((?x529 (+ 4 q)))
 (let ((?x11511 (* (- 2) (* d00 q00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11501 (* (- 1) (* d00 d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11495 (* (- 4) (* ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r r))))
 (let ((?x11456 (* 4 (* d00 r00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11429 (* 2 (* ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11426 (* (- 4) (* d00 r00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11419 (* 4 (* ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11397 (* (- 4) (* d00 x00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11401 (* (- 2) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11392 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11383 (* (- 1) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11368 (* 2 (* d00 q00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r))))
 (let ((?x11331 (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r))))
 (let ((?x11311 (* 4 (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r r))))
 (let ((?x11298 (* 4 (* d00 x00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r))))
 (let ((?x11514 (+ ?x11298 (* d00 d00 q00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r) (* (- 8) (* ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r r r)) ?x11311 ?x11331 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 r r r) (* (- 1) (* ?x1753 ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 r)) (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) (* (- 8) (* r00 ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 r r r)) (* 8 (* r00 ?x529 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r r)) (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 r)) ?x11368 (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r) ?x11383 (* 2 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x529 ?x11268 r)) ?x11392 ?x11401 ?x11397 (* 8 (* ?x1753 ?x1753 ?x1753 ?x529 ?x11268 ?x11268 ?x11268 r r r)) (* d00 d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r) (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 ?x11268 r)) ?x11419 (* (- 4) (* d00 r00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) ?x11426 ?x11429 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) (* 8 (* r00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) ?x11456 (* (- 8) (* ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r)) ?x11495 (* 4 (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 ?x11268 r)) ?x11501 (* (- 2) (* d00 q00 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r)) (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r r)) (* 4 (* d00 x00 ?x1753 ?x1753 ?x529 ?x529 ?x11268 ?x11268 ?x11268 r)) ?x11511 (* (- 4) (* ?x1753 ?x1753 ?x1753 ?x529 ?x529 ?x529 ?x11268 r r)))))
 (let (($x11522 (not (= ?x11514 0))))
 (let ((?x1300 (* (- 2) d)))
 (let ((?x7351 (+ (- 4) ?x292 ?x381 q ?x1300)))
 (let ((?x7301 (+ (- 8) q)))
 (let ((?x10795 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x10690 (* (- 1) (* d00 d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x10651 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x7351 ?x7351 ?x7351 r r r r))))
 (let ((?x10629 (* 4 (* d00 r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x11284 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x11279 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x1347 (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x7351 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x11712 (* (- 4) (* d00 x00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x11242 (* (- 2) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x14785 (* (- 4) (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x6721 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x11459 (* 2 (* d00 q00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r))))
 (let ((?x5091 (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r))))
 (let ((?x5090 (* 4 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r r))))
 (let ((?x7359 (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r))))
 (let ((?x10823 (+ ?x7359 (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 ?x7351 r r r)) ?x5090 ?x5091 (* 2 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r) (* (- 1) (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x1753 ?x7351 r)) (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) (* (- 8) (* r00 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r r r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x7351 ?x7351 ?x7351 r r r)) (* (- 8) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 r)) ?x11459 (* d00 d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r) ?x6721 (* 2 (* ?x7301 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 r)) ?x14785 ?x11242 ?x11712 (* 8 (* ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r r)) (* d00 d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r) (* 4 (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 r)) ?x1347 (* (- 4) (* d00 r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) (* 8 (* r00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) ?x11279 ?x11284 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) (* 8 (* r00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) ?x10629 (* (- 8) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 ?x7351 r)) ?x10651 (* 4 (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 ?x7351 r)) ?x10690 (* (- 2) (* d00 q00 ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 r)) (* (- 4) (* ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r r)) (* 4 (* d00 x00 ?x7301 ?x7301 ?x1753 ?x1753 ?x7351 ?x7351 ?x7351 r)) ?x10795 (* (- 4) (* ?x7301 ?x7301 ?x7301 ?x1753 ?x1753 ?x1753 ?x7351 r r)))))
 (let (($x11287 (not (= ?x10823 0))))
 (let ((?x636 (* (- 1) d)))
 (let ((?x11749 (+ (- 2) ?x292 ?x381 q ?x636)))
 (let ((?x876 (+ (- 4) q)))
 (let ((?x10369 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x639 (* (- 1) (* d00 d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x10389 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x11749 ?x11749 ?x11749 r r r r))))
 (let ((?x1090 (* 4 (* d00 r00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x10407 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x1054 (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10419 (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x11749 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x818 (* (- 4) (* d00 x00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x699 (* (- 2) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x10475 (* (- 4) (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10480 (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10493 (* 2 (* d00 q00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r))))
 (let ((?x12540 (* (- 1) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r))))
 (let ((?x951 (* 4 (* ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r r))))
 (let ((?x1508 (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r))))
 (let ((?x10348 (+ ?x1508 (* d00 d00 q00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r) (* (- 8) (* ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 ?x11749 r r r)) ?x951 ?x12540 (* 2 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r) (* (- 1) (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x1753 ?x11749 r)) (* (- 4) (* d00 r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) (* 4 (* d00 x00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) (* (- 8) (* r00 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r r r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x11749 ?x11749 ?x11749 r r r)) (* (- 8) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 r)) ?x10493 (* d00 d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r) ?x10480 (* 2 (* ?x876 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 r)) ?x10475 ?x699 ?x818 (* 8 (* ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r r)) (* d00 d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r) (* 4 (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 r)) ?x10419 (* (- 4) (* d00 r00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) (* 8 (* r00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) ?x1054 ?x10407 (* (- 2) (* d00 q00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) (* 8 (* r00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) ?x1090 (* (- 8) (* ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 ?x11749 r)) ?x10389 (* 4 (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 ?x11749 r)) ?x639 (* (- 2) (* d00 q00 ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x11749 r)) (* (- 4) (* ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r r)) (* 4 (* d00 x00 ?x876 ?x876 ?x1753 ?x1753 ?x11749 ?x11749 ?x11749 r)) ?x10369 (* (- 4) (* ?x876 ?x876 ?x876 ?x1753 ?x1753 ?x1753 ?x11749 r r)))))
 (let (($x7350 (not (= ?x10348 0))))
 (let ((?x9075 (* 4 (* d00 r00))))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x11900 (* 4 (* x d))))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x1599 (* 8 r)))
 (let ((?x11915 (+ ?x1599 ?x379 ?x11900 ?x411 ?x427 (* d d q) (* (- 2) (* d q)) ?x477 (* (- 4) (* d r)) ?x9075)))
 (let (($x8592 (= ?x11915 0)))
 (let (($x11634 (and $x8592 (or $x7350 $x11287 $x11522 $x11743))))
 (let (($x11518 (and $x8592 (or $x11743 $x7350 $x11287 $x11522))))
 (rewrite (= $x11518 $x11634)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x372 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x294 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x291 (- q 8)))
 (let ((?x66 (+ d 2)))
 (let ((?x297 (+ (* 4 d00 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r x00) (* d00 d00 ?x291 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r r r))))
 (let ((?x299 (- ?x297 (* 8 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r r r))))
 (let ((?x301 (+ ?x299 (* 4 ?x66 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 r r r r))))
 (let ((?x303 (- ?x301 (* ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r))))
 (let ((?x306 (+ ?x303 (* 2 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 r r r))))
 (let ((?x310 (- (- ?x306 (* ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 r)) (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x291 ?x294 r00 r))))
 (let ((?x314 (- (+ ?x310 (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x291 ?x294 r x00)) (* 8 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 r00 r r r))))
 (let ((?x316 (+ ?x314 (* 8 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r r r))))
 (let ((?x321 (+ (- ?x316 (* 8 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 r)) (* 2 ?x66 ?x66 ?x66 d00 ?x291 q00 ?x294 ?x294 r r r) (* ?x66 ?x66 d00 d00 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r))))
 (let ((?x323 (- ?x321 (* ?x66 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r))))
 (let ((?x329 (- (+ ?x323 (* 2 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 r)) (* 4 ?x66 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 ?x294 r r r))))
 (let ((?x330 (- ?x329 (* 2 ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 r r r))))
 (let ((?x331 (- ?x330 (* 4 ?x66 ?x66 ?x66 d00 ?x291 ?x294 ?x294 r r r x00))))
 (let ((?x336 (+ ?x331 (* 8 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 ?x294 r r r) (* ?x66 ?x66 d00 d00 ?x291 ?x291 ?x291 q00 ?x294 r) (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 r) (* 4 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r r r))))
 (let ((?x338 (- ?x336 (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r))))
 (let ((?x342 (- (+ ?x338 (* 8 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r)) (* 4 d00 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r r r))))
 (let ((?x344 (+ ?x342 (* 2 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r))))
 (let ((?x346 (- ?x344 (* 2 ?x66 ?x66 d00 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r))))
 (let ((?x349 (+ ?x346 (* 8 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 r00 r) (* 4 ?x66 ?x66 ?x66 d00 ?x291 ?x294 ?x294 r00 r r r))))
 (let ((?x353 (- (- ?x349 (* 8 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r)) (* 4 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r r))))
 (let ((?x355 (+ ?x353 (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r))))
 (let ((?x359 (- ?x355 (* ?x66 ?x66 ?x66 d00 d00 ?x291 q00 ?x294 ?x294 r r r))))
 (let ((?x361 (- (- ?x359 (* 2 ?x66 ?x66 d00 ?x291 ?x291 ?x291 q00 ?x294 r)) (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 r r))))
 (let ((?x363 (+ ?x361 (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x294 ?x294 ?x294 r x00))))
 (let ((?x366 (- ?x363 (* 2 d00 ?x291 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r r r))))
 (let (($x368 (= (- ?x366 (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 r r)) 0)))
 (let ((?x215 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x213 (- q 4)))
 (let ((?x218 (+ (* 4 d00 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r x00) (* d00 d00 ?x213 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r r r))))
 (let ((?x220 (- ?x218 (* 8 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r r r))))
 (let ((?x222 (+ ?x220 (* 4 ?x66 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 r r r r))))
 (let ((?x224 (- ?x222 (* ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r))))
 (let ((?x227 (+ ?x224 (* 2 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 r r r))))
 (let ((?x231 (- (- ?x227 (* ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 r)) (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x213 ?x215 r00 r))))
 (let ((?x235 (- (+ ?x231 (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x213 ?x215 r x00)) (* 8 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 r00 r r r))))
 (let ((?x237 (+ ?x235 (* 8 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r r r))))
 (let ((?x242 (+ (- ?x237 (* 8 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 r)) (* 2 ?x66 ?x66 ?x66 d00 ?x213 q00 ?x215 ?x215 r r r) (* ?x66 ?x66 d00 d00 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r))))
 (let ((?x244 (- ?x242 (* ?x66 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r))))
 (let ((?x250 (- (+ ?x244 (* 2 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 r)) (* 4 ?x66 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 ?x215 r r r))))
 (let ((?x251 (- ?x250 (* 2 ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 r r r))))
 (let ((?x252 (- ?x251 (* 4 ?x66 ?x66 ?x66 d00 ?x213 ?x215 ?x215 r r r x00))))
 (let ((?x257 (+ ?x252 (* 8 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 ?x215 r r r) (* ?x66 ?x66 d00 d00 ?x213 ?x213 ?x213 q00 ?x215 r) (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 r) (* 4 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r r r))))
 (let ((?x259 (- ?x257 (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r))))
 (let ((?x263 (- (+ ?x259 (* 8 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r)) (* 4 d00 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r r r))))
 (let ((?x265 (+ ?x263 (* 2 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r))))
 (let ((?x267 (- ?x265 (* 2 ?x66 ?x66 d00 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r))))
 (let ((?x270 (+ ?x267 (* 8 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 r00 r) (* 4 ?x66 ?x66 ?x66 d00 ?x213 ?x215 ?x215 r00 r r r))))
 (let ((?x274 (- (- ?x270 (* 8 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r)) (* 4 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r r))))
 (let ((?x276 (+ ?x274 (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r))))
 (let ((?x280 (- ?x276 (* ?x66 ?x66 ?x66 d00 d00 ?x213 q00 ?x215 ?x215 r r r))))
 (let ((?x282 (- (- ?x280 (* 2 ?x66 ?x66 d00 ?x213 ?x213 ?x213 q00 ?x215 r)) (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 r r))))
 (let ((?x284 (+ ?x282 (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x215 ?x215 ?x215 r x00))))
 (let ((?x287 (- ?x284 (* 2 d00 ?x213 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r r r))))
 (let (($x289 (= (- ?x287 (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 r r)) 0)))
 (let ((?x58 (* 2 r)))
 (let ((?x59 (- ?x58 x)))
 (let ((?x137 (+ ?x59 q)))
 (let ((?x140 (+ (* 4 d00 q q q ?x137 ?x137 ?x137 r r r x00) (* d00 d00 q q q q00 ?x137 ?x137 ?x137 r r r))))
 (let ((?x142 (- ?x140 (* 8 q q q ?x137 ?x137 ?x137 ?x137 r r r))))
 (let ((?x144 (+ ?x142 (* 4 ?x66 ?x66 ?x66 ?x66 q ?x137 ?x137 r r r r))))
 (let ((?x146 (- ?x144 (* ?x66 ?x66 ?x66 ?x66 q q q ?x137 ?x137 ?x137 r))))
 (let ((?x149 (+ ?x146 (* 2 ?x66 ?x66 ?x66 q q q ?x137 ?x137 ?x137 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 q q ?x137 ?x137 r r r))))
 (let ((?x153 (- (- ?x149 (* ?x66 ?x66 ?x66 ?x66 q q q q ?x137 r)) (* 4 ?x66 ?x66 d00 q q q ?x137 r00 r))))
 (let ((?x157 (- (+ ?x153 (* 4 ?x66 ?x66 d00 q q q ?x137 r x00)) (* 8 ?x66 ?x66 ?x66 q ?x137 ?x137 r00 r r r))))
 (let ((?x159 (+ ?x157 (* 8 q q q ?x137 ?x137 ?x137 r00 r r r))))
 (let ((?x164 (+ (- ?x159 (* 8 ?x66 ?x66 q q q ?x137 ?x137 r)) (* 2 ?x66 ?x66 ?x66 d00 q q00 ?x137 ?x137 r r r) (* ?x66 ?x66 d00 d00 q q q00 ?x137 ?x137 ?x137 r))))
 (let ((?x166 (- ?x164 (* ?x66 ?x66 q q q q ?x137 ?x137 ?x137 r r r))))
 (let ((?x172 (- (+ ?x166 (* 2 ?x66 ?x66 ?x66 q q q q ?x137 r)) (* 4 ?x66 ?x66 ?x66 ?x66 q ?x137 ?x137 ?x137 r r r))))
 (let ((?x173 (- ?x172 (* 2 ?x66 ?x66 ?x66 ?x66 q q ?x137 ?x137 r r r))))
 (let ((?x174 (- ?x173 (* 4 ?x66 ?x66 ?x66 d00 q ?x137 ?x137 r r r x00))))
 (let ((?x179 (+ ?x174 (* 8 ?x66 ?x66 ?x66 q ?x137 ?x137 ?x137 r r r) (* ?x66 ?x66 d00 d00 q q q q00 ?x137 r) (* 4 ?x66 ?x66 ?x66 q q q ?x137 ?x137 r) (* 4 ?x66 q q q ?x137 ?x137 ?x137 ?x137 r r r))))
 (let ((?x181 (- ?x179 (* 4 ?x66 ?x66 d00 q q ?x137 ?x137 ?x137 r00 r))))
 (let ((?x185 (- (+ ?x181 (* 8 ?x66 ?x66 q q ?x137 ?x137 ?x137 r00 r)) (* 4 d00 q q q ?x137 ?x137 ?x137 r00 r r r))))
 (let ((?x187 (+ ?x185 (* 2 ?x66 q q q q ?x137 ?x137 ?x137 r r r))))
 (let ((?x189 (- ?x187 (* 2 ?x66 ?x66 d00 q q q00 ?x137 ?x137 ?x137 r))))
 (let ((?x192 (+ ?x189 (* 8 ?x66 ?x66 q q q ?x137 r00 r) (* 4 ?x66 ?x66 ?x66 d00 q ?x137 ?x137 r00 r r r))))
 (let ((?x196 (- (- ?x192 (* 8 ?x66 ?x66 q q ?x137 ?x137 ?x137 ?x137 r)) (* 4 ?x66 q q q ?x137 ?x137 ?x137 r r r r))))
 (let ((?x198 (+ ?x196 (* 4 ?x66 ?x66 ?x66 q q ?x137 ?x137 ?x137 ?x137 r))))
 (let ((?x202 (- ?x198 (* ?x66 ?x66 ?x66 d00 d00 q q00 ?x137 ?x137 r r r))))
 (let ((?x204 (- (- ?x202 (* 2 ?x66 ?x66 d00 q q q q00 ?x137 r)) (* 4 ?x66 ?x66 ?x66 q q ?x137 ?x137 ?x137 r r))))
 (let ((?x206 (+ ?x204 (* 4 ?x66 ?x66 d00 q q ?x137 ?x137 ?x137 r x00))))
 (let ((?x209 (- ?x206 (* 2 d00 q q q q00 ?x137 ?x137 ?x137 r r r))))
 (let (($x211 (= (- ?x209 (* 4 ?x66 ?x66 ?x66 q q q ?x137 r r)) 0)))
 (let ((?x60 (+ ?x59 q d 2)))
 (let ((?x57 (+ q 4)))
 (let ((?x63 (+ (* 4 d00 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r x00) (* d00 d00 ?x57 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r r r))))
 (let ((?x65 (- ?x63 (* 8 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r r r))))
 (let ((?x68 (+ ?x65 (* 4 ?x66 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 r r r r))))
 (let ((?x70 (- ?x68 (* ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r))))
 (let ((?x73 (+ ?x70 (* 2 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 r r r))))
 (let ((?x77 (- (- ?x73 (* ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 r)) (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x57 ?x60 r00 r))))
 (let ((?x81 (- (+ ?x77 (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x57 ?x60 r x00)) (* 8 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 r00 r r r))))
 (let ((?x83 (+ ?x81 (* 8 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r r r))))
 (let ((?x88 (+ (- ?x83 (* 8 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 r)) (* 2 ?x66 ?x66 ?x66 d00 ?x57 q00 ?x60 ?x60 r r r) (* ?x66 ?x66 d00 d00 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r))))
 (let ((?x90 (- ?x88 (* ?x66 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r))))
 (let ((?x96 (- (+ ?x90 (* 2 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 r)) (* 4 ?x66 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 ?x60 r r r))))
 (let ((?x97 (- ?x96 (* 2 ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 r r r))))
 (let ((?x98 (- ?x97 (* 4 ?x66 ?x66 ?x66 d00 ?x57 ?x60 ?x60 r r r x00))))
 (let ((?x103 (+ ?x98 (* 8 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 ?x60 r r r) (* ?x66 ?x66 d00 d00 ?x57 ?x57 ?x57 q00 ?x60 r) (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 r) (* 4 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r r r))))
 (let ((?x105 (- ?x103 (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r))))
 (let ((?x109 (- (+ ?x105 (* 8 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r)) (* 4 d00 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r r r))))
 (let ((?x111 (+ ?x109 (* 2 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r))))
 (let ((?x113 (- ?x111 (* 2 ?x66 ?x66 d00 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r))))
 (let ((?x116 (+ ?x113 (* 8 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 r00 r) (* 4 ?x66 ?x66 ?x66 d00 ?x57 ?x60 ?x60 r00 r r r))))
 (let ((?x120 (- (- ?x116 (* 8 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r)) (* 4 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r r))))
 (let ((?x122 (+ ?x120 (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r))))
 (let ((?x126 (- ?x122 (* ?x66 ?x66 ?x66 d00 d00 ?x57 q00 ?x60 ?x60 r r r))))
 (let ((?x128 (- (- ?x126 (* 2 ?x66 ?x66 d00 ?x57 ?x57 ?x57 q00 ?x60 r)) (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 r r))))
 (let ((?x130 (+ ?x128 (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x60 ?x60 ?x60 r x00))))
 (let ((?x133 (- ?x130 (* 2 d00 ?x57 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r r r))))
 (let (($x135 (= (- ?x133 (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 r r)) 0)))
 (let ((?x44 (* d d q)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) (* 4 d00 x00))))
 (let ((?x50 (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) (* 2 d00 q00))))
 (and (= (+ (- ?x50 (* 4 d r)) (* 4 d00 r00)) 0) (or (not $x135) (not $x211) (not $x289) (not $x368))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x822 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x381 (* (- 1) x)))
 (let ((?x58 (* 2 r)))
 (let ((?x8833 (+ 2 ?x58 ?x381 q d)))
 (let ((?x376 (+ 4 q)))
 (let ((?x582 (+ 2 d)))
 (let ((?x1592 (* (- 2) (* d00 q00 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x14909 (* (- 1) (* d00 d00 q00 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 r r r))))
 (let ((?x10201 (* (- 4) (* ?x582 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r r))))
 (let ((?x8151 (* 4 (* d00 r00 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 r r r))))
 (let ((?x15412 (* 2 (* ?x582 ?x376 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x13215 (* (- 4) (* d00 r00 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x12075 (* 4 (* ?x582 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x704 (* (- 4) (* d00 x00 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 r r r))))
 (let ((?x8639 (* (- 2) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 r r r))))
 (let ((?x8411 (* (- 4) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x6169 (* (- 1) (* ?x582 ?x582 ?x376 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x5698 (* 2 (* d00 q00 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 r r r))))
 (let ((?x9070 (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r))))
 (let ((?x1212 (* 4 (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 r r r r))))
 (let ((?x9931 (* 4 (* d00 x00 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x2158 (+ ?x9931 (* d00 d00 q00 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r) (* (- 8) (* ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 ?x8833 r r r)) ?x1212 ?x9070 (* 2 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r)) (* ?x582 ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 r r r) (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x376 ?x8833 r)) (* (- 4) (* d00 r00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 r)) (* 4 (* d00 x00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 r)) (* (- 8) (* r00 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 r r r)) (* 8 (* r00 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r)) (* (- 8) (* ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 ?x8833 r)) ?x5698 (* d00 d00 q00 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r) ?x6169 (* 2 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x376 ?x8833 r)) ?x8411 ?x8639 ?x704 (* 8 (* ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 ?x8833 r r r)) (* d00 d00 q00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 r) (* 4 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 ?x8833 r)) ?x12075 (* (- 4) (* d00 r00 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r)) (* 8 (* r00 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r)) ?x13215 ?x15412 (* (- 2) (* d00 q00 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r)) (* 8 (* r00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 r)) ?x8151 (* (- 8) (* ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 ?x8833 r)) ?x10201 (* 4 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 ?x8833 r)) ?x14909 (* (- 2) (* d00 q00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 r)) (* (- 4) (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r)) (* 4 (* d00 x00 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r)) ?x1592 (* (- 4) (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 r r)))))
 (let ((?x432 (* (- 2) d)))
 (let ((?x8250 (+ (- 4) ?x58 ?x381 q ?x432)))
 (let ((?x1071 (+ (- 8) q)))
 (let ((?x11857 (* (- 2) (* d00 q00 ?x1071 ?x1071 ?x1071 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x11726 (* (- 1) (* d00 d00 q00 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r))))
 (let ((?x11681 (* (- 4) (* ?x1071 ?x1071 ?x1071 ?x582 ?x8250 ?x8250 ?x8250 r r r r))))
 (let ((?x11613 (* 4 (* d00 r00 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r))))
 (let ((?x11550 (* 2 (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x11534 (* (- 4) (* d00 r00 ?x1071 ?x1071 ?x1071 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x11399 (* 4 (* ?x1071 ?x1071 ?x1071 ?x582 ?x8250 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x11315 (* (- 4) (* d00 x00 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r))))
 (let ((?x10728 (* (- 2) (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r))))
 (let ((?x10338 (* (- 4) (* ?x1071 ?x582 ?x582 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x10875 (* (- 1) (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x956 (* 2 (* d00 q00 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r))))
 (let ((?x3889 (* (- 1) (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r))))
 (let ((?x12576 (* 4 (* ?x1071 ?x582 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r r))))
 (let ((?x575 (* 4 (* d00 x00 ?x1071 ?x1071 ?x1071 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x11892 (+ ?x575 (* d00 d00 q00 ?x1071 ?x1071 ?x1071 ?x8250 ?x8250 ?x8250 r r r) (* (- 8) (* ?x1071 ?x1071 ?x1071 ?x8250 ?x8250 ?x8250 ?x8250 r r r)) ?x12576 ?x3889 (* 2 (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r)) (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r) (* (- 1) (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x8250 r)) (* (- 4) (* d00 r00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 r)) (* 4 (* d00 x00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 r)) (* (- 8) (* r00 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r)) (* 8 (* r00 ?x1071 ?x1071 ?x1071 ?x8250 ?x8250 ?x8250 r r r)) (* (- 8) (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 r)) ?x956 (* d00 d00 q00 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r) ?x10875 (* 2 (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x8250 r)) ?x10338 ?x10728 ?x11315 (* 8 (* ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r r r)) (* d00 d00 q00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 r) (* 4 (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 r)) ?x11399 (* (- 4) (* d00 r00 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r)) (* 8 (* r00 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r)) ?x11534 ?x11550 (* (- 2) (* d00 q00 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r)) (* 8 (* r00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 r)) ?x11613 (* (- 8) (* ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 ?x8250 r)) ?x11681 (* 4 (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 ?x8250 ?x8250 r)) ?x11726 (* (- 2) (* d00 q00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 r)) (* (- 4) (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r r)) (* 4 (* d00 x00 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r)) ?x11857 (* (- 4) (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x8250 r r)))))
 (let ((?x916 (* (- 1) d)))
 (let ((?x4014 (+ (- 2) ?x58 ?x381 q ?x916)))
 (let ((?x754 (+ (- 4) q)))
 (let ((?x11430 (* (- 2) (* d00 q00 ?x754 ?x754 ?x754 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x11312 (* (- 1) (* d00 d00 q00 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r))))
 (let ((?x10739 (* (- 4) (* ?x754 ?x754 ?x754 ?x582 ?x4014 ?x4014 ?x4014 r r r r))))
 (let ((?x10321 (* 4 (* d00 r00 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r))))
 (let ((?x10884 (* 2 (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x9832 (* (- 4) (* d00 r00 ?x754 ?x754 ?x754 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x10387 (* 4 (* ?x754 ?x754 ?x754 ?x582 ?x4014 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x842 (* (- 4) (* d00 x00 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r))))
 (let ((?x816 (* (- 2) (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r))))
 (let ((?x10503 (* (- 4) (* ?x754 ?x582 ?x582 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x4974 (* (- 1) (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x14846 (* 2 (* d00 q00 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r))))
 (let ((?x7328 (* (- 1) (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r))))
 (let ((?x6007 (* 4 (* ?x754 ?x582 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r r))))
 (let ((?x4652 (* 4 (* d00 x00 ?x754 ?x754 ?x754 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x11481 (+ ?x4652 (* d00 d00 q00 ?x754 ?x754 ?x754 ?x4014 ?x4014 ?x4014 r r r) (* (- 8) (* ?x754 ?x754 ?x754 ?x4014 ?x4014 ?x4014 ?x4014 r r r)) ?x6007 ?x7328 (* 2 (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r)) (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r) (* (- 1) (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x4014 r)) (* (- 4) (* d00 r00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 r)) (* 4 (* d00 x00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 r)) (* (- 8) (* r00 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r)) (* 8 (* r00 ?x754 ?x754 ?x754 ?x4014 ?x4014 ?x4014 r r r)) (* (- 8) (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 r)) ?x14846 (* d00 d00 q00 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r) ?x4974 (* 2 (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x4014 r)) ?x10503 ?x816 ?x842 (* 8 (* ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r r r)) (* d00 d00 q00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 r) (* 4 (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 r)) ?x10387 (* (- 4) (* d00 r00 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r)) (* 8 (* r00 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r)) ?x9832 ?x10884 (* (- 2) (* d00 q00 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r)) (* 8 (* r00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 r)) ?x10321 (* (- 8) (* ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 ?x4014 r)) ?x10739 (* 4 (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 ?x4014 ?x4014 r)) ?x11312 (* (- 2) (* d00 q00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 r)) (* (- 4) (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r r)) (* 4 (* d00 x00 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r)) ?x11430 (* (- 4) (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x4014 r r)))))
 (let ((?x953 (* (- 4) (* ?x582 ?x582 ?x582 (+ ?x58 ?x381 q) r r q q q))))
 (let ((?x10438 (+ ?x58 ?x381 q)))
 (let ((?x454 (* (- 2) (* d00 q00 ?x10438 ?x10438 ?x10438 r r r q q q))))
 (let ((?x717 (* (- 1) (* d00 d00 q00 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q))))
 (let ((?x10447 (* (- 4) (* ?x582 ?x10438 ?x10438 ?x10438 r r r r q q q))))
 (let ((?x10516 (* 4 (* d00 r00 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q))))
 (let ((?x13312 (* 2 (* ?x582 ?x10438 ?x10438 ?x10438 r r r q q q q))))
 (let ((?x4983 (* (- 4) (* d00 r00 ?x10438 ?x10438 ?x10438 r r r q q q))))
 (let ((?x7218 (* 4 (* ?x582 ?x10438 ?x10438 ?x10438 ?x10438 r r r q q q))))
 (let ((?x773 (* (- 4) (* d00 x00 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q))))
 (let ((?x8469 (* (- 2) (* ?x582 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q q))))
 (let ((?x14100 (* (- 4) (* ?x582 ?x582 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r r r q))))
 (let ((?x12693 (* (- 1) (* ?x582 ?x582 ?x10438 ?x10438 ?x10438 r r r q q q q))))
 (let ((?x12048 (* 2 (* d00 q00 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q))))
 (let ((?x4008 (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q q))))
 (let ((?x2958 (* 4 (* ?x582 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r r q))))
 (let ((?x517 (* 4 (* d00 x00 ?x10438 ?x10438 ?x10438 r r r q q q))))
 (let ((?x497 (+ ?x517 (* d00 d00 q00 ?x10438 ?x10438 ?x10438 r r r q q q) (* (- 8) (* ?x10438 ?x10438 ?x10438 ?x10438 r r r q q q)) ?x2958 ?x4008 (* 2 (* ?x582 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q q)) (* ?x582 ?x582 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q q) (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x10438 r q q q q)) (* (- 4) (* d00 r00 ?x582 ?x582 ?x10438 r q q q)) (* 4 (* d00 x00 ?x582 ?x582 ?x10438 r q q q)) (* (- 8) (* r00 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q)) (* 8 (* r00 ?x10438 ?x10438 ?x10438 r r r q q q)) (* (- 8) (* ?x582 ?x582 ?x10438 ?x10438 r q q q)) ?x12048 (* d00 d00 q00 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q) ?x12693 (* 2 (* ?x582 ?x582 ?x582 ?x10438 r q q q q)) ?x14100 ?x8469 ?x773 (* 8 (* ?x582 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r r r q)) (* d00 d00 q00 ?x582 ?x582 ?x10438 r q q q) (* 4 (* ?x582 ?x582 ?x582 ?x10438 ?x10438 r q q q)) ?x7218 (* (- 4) (* d00 r00 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q)) (* 8 (* r00 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q)) ?x4983 ?x13312 (* (- 2) (* d00 q00 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q)) (* 8 (* r00 ?x582 ?x582 ?x10438 r q q q)) ?x10516 (* (- 8) (* ?x582 ?x582 ?x10438 ?x10438 ?x10438 ?x10438 r q q)) ?x10447 (* 4 (* ?x582 ?x582 ?x582 ?x10438 ?x10438 ?x10438 ?x10438 r q q)) ?x717 (* (- 2) (* d00 q00 ?x582 ?x582 ?x10438 r q q q)) (* (- 4) (* ?x582 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r r q q)) (* 4 (* d00 x00 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q)) ?x454 ?x953)))
 (let (($x465 (or (not (= ?x497 0)) (not (= ?x11481 0)) (not (= ?x11892 0)) (not (= ?x2158 0)))))
 (let ((?x9075 (* 4 (* d00 r00))))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x44 (* d d q)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x30 (* 8 r)))
 (let ((?x9071 (+ ?x30 ?x379 (* 4 (* x d)) ?x411 ?x427 ?x44 (* (- 2) (* d q)) ?x477 (* (- 4) (* d r)) ?x9075)))
 (and (= ?x9071 0) $x465)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x10463 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x381 (* (- 1) x)))
 (let ((?x58 (* 2 r)))
 (let ((?x8833 (+ 2 ?x58 ?x381 q d)))
 (let ((?x376 (+ 4 q)))
 (let ((?x582 (+ 2 d)))
 (let ((?x1592 (* (- 2) (* d00 q00 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x14909 (* (- 1) (* d00 d00 q00 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 r r r))))
 (let ((?x10201 (* (- 4) (* ?x582 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r r))))
 (let ((?x8151 (* 4 (* d00 r00 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 r r r))))
 (let ((?x15412 (* 2 (* ?x582 ?x376 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x13215 (* (- 4) (* d00 r00 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x12075 (* 4 (* ?x582 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x704 (* (- 4) (* d00 x00 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 r r r))))
 (let ((?x8639 (* (- 2) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 r r r))))
 (let ((?x8411 (* (- 4) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x6169 (* (- 1) (* ?x582 ?x582 ?x376 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x5698 (* 2 (* d00 q00 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 r r r))))
 (let ((?x9070 (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r))))
 (let ((?x1212 (* 4 (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 r r r r))))
 (let ((?x9931 (* 4 (* d00 x00 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r))))
 (let ((?x2158 (+ ?x9931 (* d00 d00 q00 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r) (* (- 8) (* ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 ?x8833 r r r)) ?x1212 ?x9070 (* 2 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r)) (* ?x582 ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 r r r) (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x376 ?x8833 r)) (* (- 4) (* d00 r00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 r)) (* 4 (* d00 x00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 r)) (* (- 8) (* r00 ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 r r r)) (* 8 (* r00 ?x376 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r r)) (* (- 8) (* ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 ?x8833 r)) ?x5698 (* d00 d00 q00 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r) ?x6169 (* 2 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x376 ?x8833 r)) ?x8411 ?x8639 ?x704 (* 8 (* ?x582 ?x582 ?x582 ?x376 ?x8833 ?x8833 ?x8833 r r r)) (* d00 d00 q00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 r) (* 4 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 ?x8833 r)) ?x12075 (* (- 4) (* d00 r00 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r)) (* 8 (* r00 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r)) ?x13215 ?x15412 (* (- 2) (* d00 q00 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r)) (* 8 (* r00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 r)) ?x8151 (* (- 8) (* ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 ?x8833 r)) ?x10201 (* 4 (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 ?x8833 r)) ?x14909 (* (- 2) (* d00 q00 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 r)) (* (- 4) (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r r)) (* 4 (* d00 x00 ?x582 ?x582 ?x376 ?x376 ?x8833 ?x8833 ?x8833 r)) ?x1592 (* (- 4) (* ?x582 ?x582 ?x582 ?x376 ?x376 ?x376 ?x8833 r r)))))
 (let ((?x432 (* (- 2) d)))
 (let ((?x8250 (+ (- 4) ?x58 ?x381 q ?x432)))
 (let ((?x1071 (+ (- 8) q)))
 (let ((?x11857 (* (- 2) (* d00 q00 ?x1071 ?x1071 ?x1071 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x11726 (* (- 1) (* d00 d00 q00 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r))))
 (let ((?x11681 (* (- 4) (* ?x1071 ?x1071 ?x1071 ?x582 ?x8250 ?x8250 ?x8250 r r r r))))
 (let ((?x11613 (* 4 (* d00 r00 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r))))
 (let ((?x11550 (* 2 (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x11534 (* (- 4) (* d00 r00 ?x1071 ?x1071 ?x1071 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x11399 (* 4 (* ?x1071 ?x1071 ?x1071 ?x582 ?x8250 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x11315 (* (- 4) (* d00 x00 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r))))
 (let ((?x10728 (* (- 2) (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r))))
 (let ((?x10338 (* (- 4) (* ?x1071 ?x582 ?x582 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x10875 (* (- 1) (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x956 (* 2 (* d00 q00 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r))))
 (let ((?x3889 (* (- 1) (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r))))
 (let ((?x12576 (* 4 (* ?x1071 ?x582 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r r))))
 (let ((?x575 (* 4 (* d00 x00 ?x1071 ?x1071 ?x1071 ?x8250 ?x8250 ?x8250 r r r))))
 (let ((?x11892 (+ ?x575 (* d00 d00 q00 ?x1071 ?x1071 ?x1071 ?x8250 ?x8250 ?x8250 r r r) (* (- 8) (* ?x1071 ?x1071 ?x1071 ?x8250 ?x8250 ?x8250 ?x8250 r r r)) ?x12576 ?x3889 (* 2 (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r)) (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r) (* (- 1) (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x582 ?x8250 r)) (* (- 4) (* d00 r00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 r)) (* 4 (* d00 x00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 r)) (* (- 8) (* r00 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 r r r)) (* 8 (* r00 ?x1071 ?x1071 ?x1071 ?x8250 ?x8250 ?x8250 r r r)) (* (- 8) (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 r)) ?x956 (* d00 d00 q00 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r) ?x10875 (* 2 (* ?x1071 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x8250 r)) ?x10338 ?x10728 ?x11315 (* 8 (* ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r r r)) (* d00 d00 q00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 r) (* 4 (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 r)) ?x11399 (* (- 4) (* d00 r00 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r)) (* 8 (* r00 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r)) ?x11534 ?x11550 (* (- 2) (* d00 q00 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r)) (* 8 (* r00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 r)) ?x11613 (* (- 8) (* ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 ?x8250 r)) ?x11681 (* 4 (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 ?x8250 ?x8250 r)) ?x11726 (* (- 2) (* d00 q00 ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x8250 r)) (* (- 4) (* ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r r)) (* 4 (* d00 x00 ?x1071 ?x1071 ?x582 ?x582 ?x8250 ?x8250 ?x8250 r)) ?x11857 (* (- 4) (* ?x1071 ?x1071 ?x1071 ?x582 ?x582 ?x582 ?x8250 r r)))))
 (let ((?x916 (* (- 1) d)))
 (let ((?x4014 (+ (- 2) ?x58 ?x381 q ?x916)))
 (let ((?x754 (+ (- 4) q)))
 (let ((?x11430 (* (- 2) (* d00 q00 ?x754 ?x754 ?x754 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x11312 (* (- 1) (* d00 d00 q00 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r))))
 (let ((?x10739 (* (- 4) (* ?x754 ?x754 ?x754 ?x582 ?x4014 ?x4014 ?x4014 r r r r))))
 (let ((?x10321 (* 4 (* d00 r00 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r))))
 (let ((?x10884 (* 2 (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x9832 (* (- 4) (* d00 r00 ?x754 ?x754 ?x754 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x10387 (* 4 (* ?x754 ?x754 ?x754 ?x582 ?x4014 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x842 (* (- 4) (* d00 x00 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r))))
 (let ((?x816 (* (- 2) (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r))))
 (let ((?x10503 (* (- 4) (* ?x754 ?x582 ?x582 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x4974 (* (- 1) (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x14846 (* 2 (* d00 q00 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r))))
 (let ((?x7328 (* (- 1) (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r))))
 (let ((?x6007 (* 4 (* ?x754 ?x582 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r r))))
 (let ((?x4652 (* 4 (* d00 x00 ?x754 ?x754 ?x754 ?x4014 ?x4014 ?x4014 r r r))))
 (let ((?x11481 (+ ?x4652 (* d00 d00 q00 ?x754 ?x754 ?x754 ?x4014 ?x4014 ?x4014 r r r) (* (- 8) (* ?x754 ?x754 ?x754 ?x4014 ?x4014 ?x4014 ?x4014 r r r)) ?x6007 ?x7328 (* 2 (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r)) (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r) (* (- 1) (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x582 ?x4014 r)) (* (- 4) (* d00 r00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 r)) (* 4 (* d00 x00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 r)) (* (- 8) (* r00 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 r r r)) (* 8 (* r00 ?x754 ?x754 ?x754 ?x4014 ?x4014 ?x4014 r r r)) (* (- 8) (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 r)) ?x14846 (* d00 d00 q00 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r) ?x4974 (* 2 (* ?x754 ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x4014 r)) ?x10503 ?x816 ?x842 (* 8 (* ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r r r)) (* d00 d00 q00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 r) (* 4 (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 r)) ?x10387 (* (- 4) (* d00 r00 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r)) (* 8 (* r00 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r)) ?x9832 ?x10884 (* (- 2) (* d00 q00 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r)) (* 8 (* r00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 r)) ?x10321 (* (- 8) (* ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 ?x4014 r)) ?x10739 (* 4 (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 ?x4014 ?x4014 r)) ?x11312 (* (- 2) (* d00 q00 ?x754 ?x754 ?x754 ?x582 ?x582 ?x4014 r)) (* (- 4) (* ?x754 ?x754 ?x582 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r r)) (* 4 (* d00 x00 ?x754 ?x754 ?x582 ?x582 ?x4014 ?x4014 ?x4014 r)) ?x11430 (* (- 4) (* ?x754 ?x754 ?x754 ?x582 ?x582 ?x582 ?x4014 r r)))))
 (let ((?x953 (* (- 4) (* ?x582 ?x582 ?x582 (+ ?x58 ?x381 q) r r q q q))))
 (let ((?x10438 (+ ?x58 ?x381 q)))
 (let ((?x454 (* (- 2) (* d00 q00 ?x10438 ?x10438 ?x10438 r r r q q q))))
 (let ((?x717 (* (- 1) (* d00 d00 q00 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q))))
 (let ((?x10447 (* (- 4) (* ?x582 ?x10438 ?x10438 ?x10438 r r r r q q q))))
 (let ((?x10516 (* 4 (* d00 r00 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q))))
 (let ((?x13312 (* 2 (* ?x582 ?x10438 ?x10438 ?x10438 r r r q q q q))))
 (let ((?x4983 (* (- 4) (* d00 r00 ?x10438 ?x10438 ?x10438 r r r q q q))))
 (let ((?x7218 (* 4 (* ?x582 ?x10438 ?x10438 ?x10438 ?x10438 r r r q q q))))
 (let ((?x773 (* (- 4) (* d00 x00 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q))))
 (let ((?x8469 (* (- 2) (* ?x582 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q q))))
 (let ((?x14100 (* (- 4) (* ?x582 ?x582 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r r r q))))
 (let ((?x12693 (* (- 1) (* ?x582 ?x582 ?x10438 ?x10438 ?x10438 r r r q q q q))))
 (let ((?x12048 (* 2 (* d00 q00 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q))))
 (let ((?x4008 (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q q))))
 (let ((?x2958 (* 4 (* ?x582 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r r q))))
 (let ((?x517 (* 4 (* d00 x00 ?x10438 ?x10438 ?x10438 r r r q q q))))
 (let ((?x497 (+ ?x517 (* d00 d00 q00 ?x10438 ?x10438 ?x10438 r r r q q q) (* (- 8) (* ?x10438 ?x10438 ?x10438 ?x10438 r r r q q q)) ?x2958 ?x4008 (* 2 (* ?x582 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q q)) (* ?x582 ?x582 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q q) (* (- 1) (* ?x582 ?x582 ?x582 ?x582 ?x10438 r q q q q)) (* (- 4) (* d00 r00 ?x582 ?x582 ?x10438 r q q q)) (* 4 (* d00 x00 ?x582 ?x582 ?x10438 r q q q)) (* (- 8) (* r00 ?x582 ?x582 ?x582 ?x10438 ?x10438 r r r q)) (* 8 (* r00 ?x10438 ?x10438 ?x10438 r r r q q q)) (* (- 8) (* ?x582 ?x582 ?x10438 ?x10438 r q q q)) ?x12048 (* d00 d00 q00 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q) ?x12693 (* 2 (* ?x582 ?x582 ?x582 ?x10438 r q q q q)) ?x14100 ?x8469 ?x773 (* 8 (* ?x582 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r r r q)) (* d00 d00 q00 ?x582 ?x582 ?x10438 r q q q) (* 4 (* ?x582 ?x582 ?x582 ?x10438 ?x10438 r q q q)) ?x7218 (* (- 4) (* d00 r00 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q)) (* 8 (* r00 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q)) ?x4983 ?x13312 (* (- 2) (* d00 q00 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q)) (* 8 (* r00 ?x582 ?x582 ?x10438 r q q q)) ?x10516 (* (- 8) (* ?x582 ?x582 ?x10438 ?x10438 ?x10438 ?x10438 r q q)) ?x10447 (* 4 (* ?x582 ?x582 ?x582 ?x10438 ?x10438 ?x10438 ?x10438 r q q)) ?x717 (* (- 2) (* d00 q00 ?x582 ?x582 ?x10438 r q q q)) (* (- 4) (* ?x582 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r r q q)) (* 4 (* d00 x00 ?x582 ?x582 ?x10438 ?x10438 ?x10438 r q q)) ?x454 ?x953)))
 (let (($x465 (or (not (= ?x497 0)) (not (= ?x11481 0)) (not (= ?x11892 0)) (not (= ?x2158 0)))))
 (let ((?x9075 (* 4 (* d00 r00))))
 (let ((?x476 (* d00 q00)))
 (let ((?x477 (* 2 ?x476)))
 (let ((?x44 (* d d q)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x427 (* (- 1) ?x41)))
 (let ((?x397 (* d00 x00)))
 (let ((?x411 (* (- 4) ?x397)))
 (let ((?x379 (* (- 8) r00)))
 (let ((?x30 (* 8 r)))
 (let ((?x9071 (+ ?x30 ?x379 (* 4 (* x d)) ?x411 ?x427 ?x44 (* (- 2) (* d q)) ?x477 (* (- 4) (* d r)) ?x9075)))
 (let (($x8606 (and (= ?x9071 0) $x465)))
 (let ((?x294 (- (- (+ (- ?x58 x) q) (* 2 d)) 4)))
 (let ((?x291 (- q 8)))
 (let ((?x66 (+ d 2)))
 (let ((?x297 (+ (* 4 d00 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r x00) (* d00 d00 ?x291 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r r r))))
 (let ((?x299 (- ?x297 (* 8 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r r r))))
 (let ((?x301 (+ ?x299 (* 4 ?x66 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 r r r r))))
 (let ((?x303 (- ?x301 (* ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r))))
 (let ((?x306 (+ ?x303 (* 2 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 r r r))))
 (let ((?x310 (- (- ?x306 (* ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 r)) (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x291 ?x294 r00 r))))
 (let ((?x314 (- (+ ?x310 (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x291 ?x294 r x00)) (* 8 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 r00 r r r))))
 (let ((?x316 (+ ?x314 (* 8 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r r r))))
 (let ((?x321 (+ (- ?x316 (* 8 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 r)) (* 2 ?x66 ?x66 ?x66 d00 ?x291 q00 ?x294 ?x294 r r r) (* ?x66 ?x66 d00 d00 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r))))
 (let ((?x323 (- ?x321 (* ?x66 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r))))
 (let ((?x329 (- (+ ?x323 (* 2 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 r)) (* 4 ?x66 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 ?x294 r r r))))
 (let ((?x330 (- ?x329 (* 2 ?x66 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 r r r))))
 (let ((?x331 (- ?x330 (* 4 ?x66 ?x66 ?x66 d00 ?x291 ?x294 ?x294 r r r x00))))
 (let ((?x336 (+ ?x331 (* 8 ?x66 ?x66 ?x66 ?x291 ?x294 ?x294 ?x294 r r r) (* ?x66 ?x66 d00 d00 ?x291 ?x291 ?x291 q00 ?x294 r) (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 r) (* 4 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r r r))))
 (let ((?x338 (- ?x336 (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r))))
 (let ((?x342 (- (+ ?x338 (* 8 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r)) (* 4 d00 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r00 r r r))))
 (let ((?x344 (+ ?x342 (* 2 ?x66 ?x291 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r))))
 (let ((?x346 (- ?x344 (* 2 ?x66 ?x66 d00 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r))))
 (let ((?x349 (+ ?x346 (* 8 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 r00 r) (* 4 ?x66 ?x66 ?x66 d00 ?x291 ?x294 ?x294 r00 r r r))))
 (let ((?x353 (- (- ?x349 (* 8 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r)) (* 4 ?x66 ?x291 ?x291 ?x291 ?x294 ?x294 ?x294 r r r r))))
 (let ((?x355 (+ ?x353 (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 ?x294 r))))
 (let ((?x359 (- ?x355 (* ?x66 ?x66 ?x66 d00 d00 ?x291 q00 ?x294 ?x294 r r r))))
 (let ((?x361 (- (- ?x359 (* 2 ?x66 ?x66 d00 ?x291 ?x291 ?x291 q00 ?x294 r)) (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x294 ?x294 ?x294 r r))))
 (let ((?x363 (+ ?x361 (* 4 ?x66 ?x66 d00 ?x291 ?x291 ?x294 ?x294 ?x294 r x00))))
 (let ((?x366 (- ?x363 (* 2 d00 ?x291 ?x291 ?x291 q00 ?x294 ?x294 ?x294 r r r))))
 (let (($x368 (= (- ?x366 (* 4 ?x66 ?x66 ?x66 ?x291 ?x291 ?x291 ?x294 r r)) 0)))
 (let ((?x215 (- (- (+ (- ?x58 x) q) d) 2)))
 (let ((?x213 (- q 4)))
 (let ((?x218 (+ (* 4 d00 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r x00) (* d00 d00 ?x213 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r r r))))
 (let ((?x220 (- ?x218 (* 8 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r r r))))
 (let ((?x222 (+ ?x220 (* 4 ?x66 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 r r r r))))
 (let ((?x224 (- ?x222 (* ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r))))
 (let ((?x227 (+ ?x224 (* 2 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 r r r))))
 (let ((?x231 (- (- ?x227 (* ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 r)) (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x213 ?x215 r00 r))))
 (let ((?x235 (- (+ ?x231 (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x213 ?x215 r x00)) (* 8 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 r00 r r r))))
 (let ((?x237 (+ ?x235 (* 8 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r r r))))
 (let ((?x242 (+ (- ?x237 (* 8 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 r)) (* 2 ?x66 ?x66 ?x66 d00 ?x213 q00 ?x215 ?x215 r r r) (* ?x66 ?x66 d00 d00 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r))))
 (let ((?x244 (- ?x242 (* ?x66 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r))))
 (let ((?x250 (- (+ ?x244 (* 2 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 r)) (* 4 ?x66 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 ?x215 r r r))))
 (let ((?x251 (- ?x250 (* 2 ?x66 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 r r r))))
 (let ((?x252 (- ?x251 (* 4 ?x66 ?x66 ?x66 d00 ?x213 ?x215 ?x215 r r r x00))))
 (let ((?x257 (+ ?x252 (* 8 ?x66 ?x66 ?x66 ?x213 ?x215 ?x215 ?x215 r r r) (* ?x66 ?x66 d00 d00 ?x213 ?x213 ?x213 q00 ?x215 r) (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 r) (* 4 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r r r))))
 (let ((?x259 (- ?x257 (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r))))
 (let ((?x263 (- (+ ?x259 (* 8 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r)) (* 4 d00 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r00 r r r))))
 (let ((?x265 (+ ?x263 (* 2 ?x66 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r))))
 (let ((?x267 (- ?x265 (* 2 ?x66 ?x66 d00 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r))))
 (let ((?x270 (+ ?x267 (* 8 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 r00 r) (* 4 ?x66 ?x66 ?x66 d00 ?x213 ?x215 ?x215 r00 r r r))))
 (let ((?x274 (- (- ?x270 (* 8 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r)) (* 4 ?x66 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 r r r r))))
 (let ((?x276 (+ ?x274 (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 r))))
 (let ((?x280 (- ?x276 (* ?x66 ?x66 ?x66 d00 d00 ?x213 q00 ?x215 ?x215 r r r))))
 (let ((?x282 (- (- ?x280 (* 2 ?x66 ?x66 d00 ?x213 ?x213 ?x213 q00 ?x215 r)) (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x215 ?x215 ?x215 r r))))
 (let ((?x284 (+ ?x282 (* 4 ?x66 ?x66 d00 ?x213 ?x213 ?x215 ?x215 ?x215 r x00))))
 (let ((?x287 (- ?x284 (* 2 d00 ?x213 ?x213 ?x213 q00 ?x215 ?x215 ?x215 r r r))))
 (let (($x289 (= (- ?x287 (* 4 ?x66 ?x66 ?x66 ?x213 ?x213 ?x213 ?x215 r r)) 0)))
 (let ((?x59 (- ?x58 x)))
 (let ((?x137 (+ ?x59 q)))
 (let ((?x140 (+ (* 4 d00 q q q ?x137 ?x137 ?x137 r r r x00) (* d00 d00 q q q q00 ?x137 ?x137 ?x137 r r r))))
 (let ((?x142 (- ?x140 (* 8 q q q ?x137 ?x137 ?x137 ?x137 r r r))))
 (let ((?x144 (+ ?x142 (* 4 ?x66 ?x66 ?x66 ?x66 q ?x137 ?x137 r r r r))))
 (let ((?x146 (- ?x144 (* ?x66 ?x66 ?x66 ?x66 q q q ?x137 ?x137 ?x137 r))))
 (let ((?x149 (+ ?x146 (* 2 ?x66 ?x66 ?x66 q q q ?x137 ?x137 ?x137 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 q q ?x137 ?x137 r r r))))
 (let ((?x153 (- (- ?x149 (* ?x66 ?x66 ?x66 ?x66 q q q q ?x137 r)) (* 4 ?x66 ?x66 d00 q q q ?x137 r00 r))))
 (let ((?x157 (- (+ ?x153 (* 4 ?x66 ?x66 d00 q q q ?x137 r x00)) (* 8 ?x66 ?x66 ?x66 q ?x137 ?x137 r00 r r r))))
 (let ((?x159 (+ ?x157 (* 8 q q q ?x137 ?x137 ?x137 r00 r r r))))
 (let ((?x164 (+ (- ?x159 (* 8 ?x66 ?x66 q q q ?x137 ?x137 r)) (* 2 ?x66 ?x66 ?x66 d00 q q00 ?x137 ?x137 r r r) (* ?x66 ?x66 d00 d00 q q q00 ?x137 ?x137 ?x137 r))))
 (let ((?x166 (- ?x164 (* ?x66 ?x66 q q q q ?x137 ?x137 ?x137 r r r))))
 (let ((?x172 (- (+ ?x166 (* 2 ?x66 ?x66 ?x66 q q q q ?x137 r)) (* 4 ?x66 ?x66 ?x66 ?x66 q ?x137 ?x137 ?x137 r r r))))
 (let ((?x173 (- ?x172 (* 2 ?x66 ?x66 ?x66 ?x66 q q ?x137 ?x137 r r r))))
 (let ((?x174 (- ?x173 (* 4 ?x66 ?x66 ?x66 d00 q ?x137 ?x137 r r r x00))))
 (let ((?x179 (+ ?x174 (* 8 ?x66 ?x66 ?x66 q ?x137 ?x137 ?x137 r r r) (* ?x66 ?x66 d00 d00 q q q q00 ?x137 r) (* 4 ?x66 ?x66 ?x66 q q q ?x137 ?x137 r) (* 4 ?x66 q q q ?x137 ?x137 ?x137 ?x137 r r r))))
 (let ((?x181 (- ?x179 (* 4 ?x66 ?x66 d00 q q ?x137 ?x137 ?x137 r00 r))))
 (let ((?x185 (- (+ ?x181 (* 8 ?x66 ?x66 q q ?x137 ?x137 ?x137 r00 r)) (* 4 d00 q q q ?x137 ?x137 ?x137 r00 r r r))))
 (let ((?x187 (+ ?x185 (* 2 ?x66 q q q q ?x137 ?x137 ?x137 r r r))))
 (let ((?x189 (- ?x187 (* 2 ?x66 ?x66 d00 q q q00 ?x137 ?x137 ?x137 r))))
 (let ((?x192 (+ ?x189 (* 8 ?x66 ?x66 q q q ?x137 r00 r) (* 4 ?x66 ?x66 ?x66 d00 q ?x137 ?x137 r00 r r r))))
 (let ((?x196 (- (- ?x192 (* 8 ?x66 ?x66 q q ?x137 ?x137 ?x137 ?x137 r)) (* 4 ?x66 q q q ?x137 ?x137 ?x137 r r r r))))
 (let ((?x198 (+ ?x196 (* 4 ?x66 ?x66 ?x66 q q ?x137 ?x137 ?x137 ?x137 r))))
 (let ((?x202 (- ?x198 (* ?x66 ?x66 ?x66 d00 d00 q q00 ?x137 ?x137 r r r))))
 (let ((?x204 (- (- ?x202 (* 2 ?x66 ?x66 d00 q q q q00 ?x137 r)) (* 4 ?x66 ?x66 ?x66 q q ?x137 ?x137 ?x137 r r))))
 (let ((?x206 (+ ?x204 (* 4 ?x66 ?x66 d00 q q ?x137 ?x137 ?x137 r x00))))
 (let ((?x209 (- ?x206 (* 2 d00 q q q q00 ?x137 ?x137 ?x137 r r r))))
 (let (($x211 (= (- ?x209 (* 4 ?x66 ?x66 ?x66 q q q ?x137 r r)) 0)))
 (let ((?x60 (+ ?x59 q d 2)))
 (let ((?x57 (+ q 4)))
 (let ((?x63 (+ (* 4 d00 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r x00) (* d00 d00 ?x57 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r r r))))
 (let ((?x65 (- ?x63 (* 8 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r r r))))
 (let ((?x68 (+ ?x65 (* 4 ?x66 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 r r r r))))
 (let ((?x70 (- ?x68 (* ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r))))
 (let ((?x73 (+ ?x70 (* 2 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 r r r))))
 (let ((?x77 (- (- ?x73 (* ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 r)) (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x57 ?x60 r00 r))))
 (let ((?x81 (- (+ ?x77 (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x57 ?x60 r x00)) (* 8 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 r00 r r r))))
 (let ((?x83 (+ ?x81 (* 8 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r r r))))
 (let ((?x88 (+ (- ?x83 (* 8 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 r)) (* 2 ?x66 ?x66 ?x66 d00 ?x57 q00 ?x60 ?x60 r r r) (* ?x66 ?x66 d00 d00 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r))))
 (let ((?x90 (- ?x88 (* ?x66 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r))))
 (let ((?x96 (- (+ ?x90 (* 2 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 r)) (* 4 ?x66 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 ?x60 r r r))))
 (let ((?x97 (- ?x96 (* 2 ?x66 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 r r r))))
 (let ((?x98 (- ?x97 (* 4 ?x66 ?x66 ?x66 d00 ?x57 ?x60 ?x60 r r r x00))))
 (let ((?x103 (+ ?x98 (* 8 ?x66 ?x66 ?x66 ?x57 ?x60 ?x60 ?x60 r r r) (* ?x66 ?x66 d00 d00 ?x57 ?x57 ?x57 q00 ?x60 r) (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 r) (* 4 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r r r))))
 (let ((?x105 (- ?x103 (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r))))
 (let ((?x109 (- (+ ?x105 (* 8 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r)) (* 4 d00 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r00 r r r))))
 (let ((?x111 (+ ?x109 (* 2 ?x66 ?x57 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r))))
 (let ((?x113 (- ?x111 (* 2 ?x66 ?x66 d00 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r))))
 (let ((?x116 (+ ?x113 (* 8 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 r00 r) (* 4 ?x66 ?x66 ?x66 d00 ?x57 ?x60 ?x60 r00 r r r))))
 (let ((?x120 (- (- ?x116 (* 8 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r)) (* 4 ?x66 ?x57 ?x57 ?x57 ?x60 ?x60 ?x60 r r r r))))
 (let ((?x122 (+ ?x120 (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 ?x60 r))))
 (let ((?x126 (- ?x122 (* ?x66 ?x66 ?x66 d00 d00 ?x57 q00 ?x60 ?x60 r r r))))
 (let ((?x128 (- (- ?x126 (* 2 ?x66 ?x66 d00 ?x57 ?x57 ?x57 q00 ?x60 r)) (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x60 ?x60 ?x60 r r))))
 (let ((?x130 (+ ?x128 (* 4 ?x66 ?x66 d00 ?x57 ?x57 ?x60 ?x60 ?x60 r x00))))
 (let ((?x133 (- ?x130 (* 2 d00 ?x57 ?x57 ?x57 q00 ?x60 ?x60 ?x60 r r r))))
 (let (($x135 (= (- ?x133 (* 4 ?x66 ?x66 ?x66 ?x57 ?x57 ?x57 ?x60 r r)) 0)))
 (let ((?x42 (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) (* 4 d00 x00))))
 (let ((?x50 (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) (* 2 d00 q00))))
 (let (($x371 (and (= (+ (- ?x50 (* 4 d r)) (* 4 d00 r00)) 0) (or (not $x135) (not $x211) (not $x289) (not $x368)))))
 (rewrite (= $x371 $x8606)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x11530 (trans (quant-intro (proof-bind ?x10463) (= $x372 $x822)) (elim-unused (= $x822 $x11521)) (= $x372 $x11521))))
 (let ((@x27 (asserted $x372)))
 (let ((@x11654 (mp (mp @x27 @x11530 $x11521) (quant-intro (proof-bind ?x11621) (= $x11521 $x12581)) $x12581)))
 (let ((@x8983 (mp (mp @x11654 (rewrite (= $x12581 $x12581)) $x12581) (quant-intro (proof-bind ?x6558) (= $x12581 $x6551)) $x6551)))
 (let ((@x3339 (mp (mp~ @x8983 (sk (~ $x6551 $x4523)) $x4523) (rewrite (= $x4523 $x3299)) $x3299)))
 (let ((@x3337 (and-elim @x3339 $x15662)))
 (let ((@x12717 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x15662) $x3244)) @x3337 $x3244)))
 (let (($x3029 (>= ?x15660 0)))
 (let ((@x3170 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x15662) $x3029)) @x3337 $x3029)))
 (let (($x3356 (not (<= ?x14975 0))))
 (let (($x3529 (<= ?x3060 0)))
 (let (($x3259 (>= ?x3060 0)))
 (let ((@x9566 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3323 (not $x3529) (not $x3259))) (lemma ((_ th-lemma arith) (hypothesis (not $x3259)) @x3170 @x12717 false) $x3259) (lemma ((_ th-lemma arith) (hypothesis (not $x3529)) @x3170 @x12717 false) $x3529) $x3323)))
 (let (($x3359 (>= ?x3232 0)))
 (let (($x3527 (<= ?x3232 0)))
 (let ((@x15235 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x10061 (not $x3527) (not $x3359))) (lemma ((_ th-lemma arith) (hypothesis (not $x3527)) @x3170 @x12717 false) $x3527) (lemma ((_ th-lemma arith) (hypothesis (not $x3359)) @x3170 @x12717 false) $x3359) $x10061)))
 (let (($x3430 (>= ?x3343 0)))
 (let (($x3575 (<= ?x3343 0)))
 (let ((@x9486 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3352 (not $x3575) (not $x3430))) (lemma ((_ th-lemma arith) (hypothesis (not $x3575)) @x3170 @x12717 false) $x3575) (lemma ((_ th-lemma arith) (hypothesis (not $x3430)) @x3170 @x12717 false) $x3430) $x3352)))
 (let ((@x9238 (unit-resolution (unit-resolution (and-elim @x3339 $x3172) @x9486 @x15235 (or $x3129 $x6400)) @x9566 $x6400)))
 (let (($x3246 (>= ?x14975 0)))
 (let ((@x5693 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x14971 $x3356 (not $x3246))) (lemma ((_ th-lemma arith) (hypothesis (not $x3246)) @x3170 @x12717 false) $x3246) @x9238 $x3356)))
 ((_ th-lemma arith) @x5693 @x3170 @x12717 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        28
 :arith-assert-upper        11
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-gcd-tests           10
 :arith-grobner             8
 :arith-max-min             9062
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    74
 :arith-num-rows            13
 :arith-patches             10
 :arith-patches_succ        10
 :arith-pivots              5
 :arith-tableau-max-columns 505
 :arith-tableau-max-rows    13
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              10
 :max-memory                7.21
 :memory                    5.30
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                67609306
 :num-checks                1
 :propagations              36
 :rlimit-count              235544
 :time                      0.28
 :total-time                0.33)
