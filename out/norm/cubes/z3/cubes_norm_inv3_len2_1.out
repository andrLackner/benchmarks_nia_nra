unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x815 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x1016 (<= ?x815 (- 6))))
 (let (($x942 (= ?x815 (- 6))))
 (let ((?x803 (* 6 (* k!2 k!2 k!2))))
 (let ((?x850 (+ k!2 c!3)))
 (let ((?x633 (+ k!2 m!1)))
 (let ((?x192 (+ 6 m!1)))
 (let ((?x902 (+ 1 n!0)))
 (let ((?x808 (* k!2 k!2 m!1 m!1)))
 (let ((?x806 (* k!2 k!2 k!2 m!1)))
 (let ((?x673 (* 6 (* k!2 k!2 m!1))))
 (let ((?x570 (* 2 (* ?x902 ?x902 ?x902 ?x902 ?x192 ?x192 ?x633 ?x633 ?x633))))
 (let ((?x661 (* ?x902 ?x902 ?x902 ?x902 ?x192 ?x192 ?x633 ?x633 ?x633 ?x633)))
 (let ((?x637 (* (- 1) (* ?x902 ?x902 ?x902 ?x192 ?x192 ?x633 ?x633 ?x633 ?x633))))
 (let ((?x121 (* ?x902 ?x902 ?x902 ?x192 ?x192 ?x633 ?x633 ?x633)))
 (let ((?x932 (+ ?x121 (* k!2 m!1 c!3 c!3) (* 12 (* k!2 m!1 c!3)) ?x637 ?x661 ?x570 ?x673 ?x806 ?x808 (* 2 (* k!2 k!2 m!1 c!3)) (* n!0 k!2 k!2 m!1 m!1) (* 2 (* n!0 k!2 m!1 m!1 c!3)) (* n!0 m!1 m!1 c!3 c!3) (* n!0 k!2 k!2 k!2 m!1) (* 2 (* n!0 k!2 k!2 m!1 c!3)) (* n!0 k!2 m!1 c!3 c!3) (* 12 (* k!2 k!2 c!3)) (* 6 (* m!1 c!3 c!3)) (* 6 (* k!2 c!3 c!3)) (* ?x902 ?x902 ?x192 ?x633 ?x633 ?x850 ?x850) (* (- 3) (* ?x902 ?x192 ?x633 ?x850 ?x850 ?x850)) (* m!1 m!1 c!3 c!3) (* 6 (* n!0 m!1 c!3 c!3)) (* (- 3) (* ?x902 ?x902 ?x902 ?x192 ?x192 ?x633 ?x633 ?x633 ?x850)) (* 12 (* n!0 k!2 m!1 c!3)) (* 6 (* n!0 k!2 k!2 m!1)) (* 2 (* k!2 m!1 m!1 c!3)) (* 2 (* ?x902 ?x902 ?x192 ?x633 ?x850 ?x850)) (* (- 1) (* ?x902 ?x192 ?x633 ?x633 ?x850 ?x850)) (* 6 (* n!0 k!2 c!3 c!3)) (* 12 (* n!0 k!2 k!2 c!3)) (* 6 (* n!0 k!2 k!2 k!2)) ?x803)))
 (let (($x1043 (= ?x932 0)))
 (let (($x884 (not $x1043)))
 (let ((?x830 (* (- 1) k!2)))
 (let ((?x958 (+ (* 3 n!0) ?x830 (* 3 (* n!0 n!0)))))
 (let (($x956 (= ?x958 (- 1))))
 (let ((?x832 (+ (* 2 n!0) (* n!0 k!2) ?x830 (* (- 3) c!3))))
 (let (($x834 (= ?x832 (- 1))))
 (let ((?x602 (* k!2 k!2)))
 (let ((?x976 (+ (* 9 n!0) (* (- 5) k!2) ?x602 (* (- 18) c!3) (* (- 9) (* n!0 c!3)))))
 (let (($x578 (= ?x976 (- 4))))
 (let (($x1031 (and $x942 $x578 $x834 $x956 $x884)))
 (let ((?x754 (* (- 3) (* ?x902 ?x902 ?x902 ?x192 ?x192 ?x633 ?x633 ?x633 (+ c!3 k!2)))))
 (let ((?x623 (* (- 3) (* ?x902 ?x192 ?x633 (+ c!3 k!2) (+ c!3 k!2) (+ c!3 k!2)))))
 (let ((?x719 (+ (* c!3 c!3 k!2 m!1 n!0) (* 2 (* c!3 k!2 k!2 m!1 n!0)) (* k!2 k!2 k!2 m!1 n!0) (* c!3 c!3 m!1 m!1 n!0) (* 2 (* c!3 k!2 m!1 m!1 n!0)) (* k!2 k!2 m!1 m!1 n!0) ?x623 (* ?x902 ?x902 ?x192 ?x633 ?x633 (+ c!3 k!2) (+ c!3 k!2)) ?x637 ?x661 (* (- 1) (* ?x902 ?x192 ?x633 ?x633 (+ c!3 k!2) (+ c!3 k!2))) ?x570 ?x121 (* 6 (* k!2 k!2 m!1 n!0)) (* 12 (* c!3 k!2 m!1 n!0)) ?x754 (* 6 (* c!3 c!3 m!1 n!0)) (* 6 (* k!2 k!2 k!2 n!0)) (* 12 (* c!3 k!2 k!2 n!0)) (* 6 (* c!3 c!3 k!2 n!0)) (* 2 (* ?x902 ?x902 ?x192 ?x633 (+ c!3 k!2) (+ c!3 k!2))) ?x808 (* 2 (* c!3 k!2 m!1 m!1)) (* c!3 c!3 m!1 m!1) ?x806 (* 2 (* c!3 k!2 k!2 m!1)) (* c!3 c!3 k!2 m!1) ?x673 (* 12 (* c!3 k!2 m!1)) (* 6 (* c!3 c!3 m!1)) ?x803 (* 12 (* c!3 k!2 k!2)) (* 6 (* c!3 c!3 k!2)))))
 (let (($x813 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x805 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x602) (* 9 (* c!3 n!0)))))
 (let (($x717 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x805 4) $x813 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x719 0)))))
 (let (($x165 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1106 (* k k k)))
 (let ((?x564 (* 6 ?x1106)))
 (let ((?x1081 (* c c k m)))
 (let ((?x1070 (* c k k m)))
 (let ((?x563 (* 2 ?x1070)))
 (let ((?x1066 (* k k k m)))
 (let ((?x1061 (* c c m m)))
 (let ((?x1050 (* c k m m)))
 (let ((?x577 (* 2 ?x1050)))
 (let ((?x1046 (* k k m m)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x312 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x966 (* ?x315 ?x315 ?x312 ?x70 ?x69 ?x69)))
 (let ((?x918 (* 2 ?x966)))
 (let ((?x961 (* c c k n)))
 (let ((?x991 (* 6 ?x961)))
 (let ((?x950 (* c k k n)))
 (let ((?x556 (* 12 ?x950)))
 (let ((?x946 (* k k k n)))
 (let ((?x103 (* 6 ?x946)))
 (let ((?x941 (* c c m n)))
 (let ((?x735 (* 6 ?x941)))
 (let ((?x937 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1034 (* (- 3) ?x937)))
 (let ((?x930 (* c k m n)))
 (let ((?x565 (* 12 ?x930)))
 (let ((?x926 (* k k m n)))
 (let ((?x1111 (* 6 ?x926)))
 (let ((?x908 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)))
 (let ((?x869 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)))
 (let ((?x900 (* 2 ?x869)))
 (let ((?x848 (* ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x144 (* (- 1) ?x848)))
 (let ((?x755 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x750 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x856 (* (- 1) ?x750)))
 (let ((?x747 (* ?x315 ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x742 (* ?x315 ?x312 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x659 (* (- 3) ?x742)))
 (let ((?x383 (* k k m m n)))
 (let ((?x381 (* c k m m n)))
 (let ((?x572 (* 2 ?x381)))
 (let ((?x377 (* c c m m n)))
 (let ((?x375 (* k k k m n)))
 (let ((?x373 (* c k k m n)))
 (let ((?x558 (* 2 ?x373)))
 (let ((?x369 (* c c k m n)))
 (let ((?x989 (+ ?x369 ?x558 ?x375 ?x377 ?x572 ?x383 ?x659 ?x747 ?x856 ?x755 ?x144 ?x900 ?x908 ?x1111 ?x565 ?x1034 ?x735 ?x103 ?x556 ?x991 ?x918 ?x1046 ?x577 ?x1061 ?x1066 ?x563 ?x1081 (* 6 (* k k m)) (* 12 (* c k m)) (* 6 (* c c m)) ?x564 (* 12 (* c k k)) (* 6 (* c c k)))))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x264 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x212 (= (+ ?x40 ?x44 ?x214 ?x215 (* 9 (* c n))) 4)))
 (let (($x128 (= (+ m (* (- 6) n)) 6)))
 (and $x128 $x212 $x264 $x302 (not (= ?x989 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x384 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1106 (* k k k)))
 (let ((?x564 (* 6 ?x1106)))
 (let ((?x1081 (* c c k m)))
 (let ((?x1070 (* c k k m)))
 (let ((?x563 (* 2 ?x1070)))
 (let ((?x1066 (* k k k m)))
 (let ((?x1061 (* c c m m)))
 (let ((?x1050 (* c k m m)))
 (let ((?x577 (* 2 ?x1050)))
 (let ((?x1046 (* k k m m)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x312 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x966 (* ?x315 ?x315 ?x312 ?x70 ?x69 ?x69)))
 (let ((?x918 (* 2 ?x966)))
 (let ((?x961 (* c c k n)))
 (let ((?x991 (* 6 ?x961)))
 (let ((?x950 (* c k k n)))
 (let ((?x556 (* 12 ?x950)))
 (let ((?x946 (* k k k n)))
 (let ((?x103 (* 6 ?x946)))
 (let ((?x941 (* c c m n)))
 (let ((?x735 (* 6 ?x941)))
 (let ((?x937 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1034 (* (- 3) ?x937)))
 (let ((?x930 (* c k m n)))
 (let ((?x565 (* 12 ?x930)))
 (let ((?x926 (* k k m n)))
 (let ((?x1111 (* 6 ?x926)))
 (let ((?x908 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)))
 (let ((?x869 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)))
 (let ((?x900 (* 2 ?x869)))
 (let ((?x848 (* ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x144 (* (- 1) ?x848)))
 (let ((?x755 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x750 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x856 (* (- 1) ?x750)))
 (let ((?x747 (* ?x315 ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x742 (* ?x315 ?x312 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x659 (* (- 3) ?x742)))
 (let ((?x383 (* k k m m n)))
 (let ((?x381 (* c k m m n)))
 (let ((?x572 (* 2 ?x381)))
 (let ((?x377 (* c c m m n)))
 (let ((?x375 (* k k k m n)))
 (let ((?x373 (* c k k m n)))
 (let ((?x558 (* 2 ?x373)))
 (let ((?x369 (* c c k m n)))
 (let ((?x102 (+ ?x369 ?x558 ?x375 ?x377 ?x572 ?x383 (* 6 (* m k k)) (* 6 (* m c k)) ?x659 ?x747 ?x856 ?x755 (* 6 (* k k c)) (* 6 (* k c c)) ?x144 ?x900 (* 6 (* m k c)) (* 6 (* k c k)) ?x908 ?x1111 (* 6 (* m c c)) ?x565 ?x1034 ?x735 ?x103 ?x556 ?x991 ?x918 ?x1046 ?x577 ?x1061 ?x1066 ?x563 ?x1081 ?x564)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x264 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x212 (= (+ ?x40 ?x44 ?x214 ?x215 (* 9 (* c n))) 4)))
 (let (($x128 (= (+ m (* (- 6) n)) 6)))
 (and $x128 $x212 $x264 $x302 (not (= ?x102 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x191 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1106 (* k k k)))
 (let ((?x564 (* 6 ?x1106)))
 (let ((?x1081 (* c c k m)))
 (let ((?x1070 (* c k k m)))
 (let ((?x563 (* 2 ?x1070)))
 (let ((?x1066 (* k k k m)))
 (let ((?x1061 (* c c m m)))
 (let ((?x1050 (* c k m m)))
 (let ((?x577 (* 2 ?x1050)))
 (let ((?x1046 (* k k m m)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x312 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x966 (* ?x315 ?x315 ?x312 ?x70 ?x69 ?x69)))
 (let ((?x918 (* 2 ?x966)))
 (let ((?x961 (* c c k n)))
 (let ((?x991 (* 6 ?x961)))
 (let ((?x950 (* c k k n)))
 (let ((?x556 (* 12 ?x950)))
 (let ((?x946 (* k k k n)))
 (let ((?x103 (* 6 ?x946)))
 (let ((?x941 (* c c m n)))
 (let ((?x735 (* 6 ?x941)))
 (let ((?x937 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1034 (* (- 3) ?x937)))
 (let ((?x930 (* c k m n)))
 (let ((?x565 (* 12 ?x930)))
 (let ((?x926 (* k k m n)))
 (let ((?x1111 (* 6 ?x926)))
 (let ((?x908 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)))
 (let ((?x869 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)))
 (let ((?x900 (* 2 ?x869)))
 (let ((?x848 (* ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x144 (* (- 1) ?x848)))
 (let ((?x755 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x750 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x856 (* (- 1) ?x750)))
 (let ((?x747 (* ?x315 ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x742 (* ?x315 ?x312 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x659 (* (- 3) ?x742)))
 (let ((?x383 (* k k m m n)))
 (let ((?x381 (* c k m m n)))
 (let ((?x572 (* 2 ?x381)))
 (let ((?x377 (* c c m m n)))
 (let ((?x375 (* k k k m n)))
 (let ((?x373 (* c k k m n)))
 (let ((?x558 (* 2 ?x373)))
 (let ((?x369 (* c c k m n)))
 (let ((?x989 (+ ?x369 ?x558 ?x375 ?x377 ?x572 ?x383 ?x659 ?x747 ?x856 ?x755 ?x144 ?x900 ?x908 ?x1111 ?x565 ?x1034 ?x735 ?x103 ?x556 ?x991 ?x918 ?x1046 ?x577 ?x1061 ?x1066 ?x563 ?x1081 (* 6 (* k k m)) (* 12 (* c k m)) (* 6 (* c c m)) ?x564 (* 12 (* c k k)) (* 6 (* c c k)))))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x264 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x212 (= (+ ?x40 ?x44 ?x214 ?x215 (* 9 (* c n))) 4)))
 (let (($x128 (= (+ m (* (- 6) n)) 6)))
 (let (($x984 (and $x128 $x212 $x264 $x302 (not (= ?x989 0)))))
 (let ((?x102 (+ ?x369 ?x558 ?x375 ?x377 ?x572 ?x383 (* 6 (* m k k)) (* 6 (* m c k)) ?x659 ?x747 ?x856 ?x755 (* 6 (* k k c)) (* 6 (* k c c)) ?x144 ?x900 (* 6 (* m k c)) (* 6 (* k c k)) ?x908 ?x1111 (* 6 (* m c c)) ?x565 ?x1034 ?x735 ?x103 ?x556 ?x991 ?x918 ?x1046 ?x577 ?x1061 ?x1066 ?x563 ?x1081 ?x564)))
 (let (($x736 (and $x128 $x212 $x264 $x302 (not (= ?x102 0)))))
 (rewrite (= $x736 $x984)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x590 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x312 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x966 (* ?x315 ?x315 ?x312 ?x70 ?x69 ?x69)))
 (let ((?x918 (* 2 ?x966)))
 (let ((?x937 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1034 (* (- 3) ?x937)))
 (let ((?x908 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)))
 (let ((?x869 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)))
 (let ((?x900 (* 2 ?x869)))
 (let ((?x848 (* ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x144 (* (- 1) ?x848)))
 (let ((?x755 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x747 (* ?x315 ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x750 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x856 (* (- 1) ?x750)))
 (let ((?x742 (* ?x315 ?x312 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x659 (* (- 3) ?x742)))
 (let ((?x729 (* ?x315 ?x312 ?x70 ?x69 ?x69)))
 (let (($x537 (not (= (+ ?x729 ?x659 ?x856 ?x747 ?x755 ?x144 ?x900 ?x908 ?x1034 ?x918) 0))))
 (let (($x715 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x316 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x128 (= (+ m (* (- 6) n)) 6)))
 (and $x128 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x214 ?x215) 4) $x316 $x715 $x537)))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x113 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1106 (* k k k)))
 (let ((?x564 (* 6 ?x1106)))
 (let ((?x1081 (* c c k m)))
 (let ((?x1070 (* c k k m)))
 (let ((?x563 (* 2 ?x1070)))
 (let ((?x1066 (* k k k m)))
 (let ((?x1061 (* c c m m)))
 (let ((?x1050 (* c k m m)))
 (let ((?x577 (* 2 ?x1050)))
 (let ((?x1046 (* k k m m)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x312 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x966 (* ?x315 ?x315 ?x312 ?x70 ?x69 ?x69)))
 (let ((?x918 (* 2 ?x966)))
 (let ((?x961 (* c c k n)))
 (let ((?x991 (* 6 ?x961)))
 (let ((?x950 (* c k k n)))
 (let ((?x556 (* 12 ?x950)))
 (let ((?x946 (* k k k n)))
 (let ((?x103 (* 6 ?x946)))
 (let ((?x941 (* c c m n)))
 (let ((?x735 (* 6 ?x941)))
 (let ((?x937 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1034 (* (- 3) ?x937)))
 (let ((?x930 (* c k m n)))
 (let ((?x565 (* 12 ?x930)))
 (let ((?x926 (* k k m n)))
 (let ((?x1111 (* 6 ?x926)))
 (let ((?x908 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)))
 (let ((?x869 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)))
 (let ((?x900 (* 2 ?x869)))
 (let ((?x848 (* ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x144 (* (- 1) ?x848)))
 (let ((?x755 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x750 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x856 (* (- 1) ?x750)))
 (let ((?x747 (* ?x315 ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x742 (* ?x315 ?x312 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x659 (* (- 3) ?x742)))
 (let ((?x383 (* k k m m n)))
 (let ((?x381 (* c k m m n)))
 (let ((?x572 (* 2 ?x381)))
 (let ((?x377 (* c c m m n)))
 (let ((?x375 (* k k k m n)))
 (let ((?x373 (* c k k m n)))
 (let ((?x558 (* 2 ?x373)))
 (let ((?x369 (* c c k m n)))
 (let ((?x102 (+ ?x369 ?x558 ?x375 ?x377 ?x572 ?x383 (* 6 (* m k k)) (* 6 (* m c k)) ?x659 ?x747 ?x856 ?x755 (* 6 (* k k c)) (* 6 (* k c c)) ?x144 ?x900 (* 6 (* m k c)) (* 6 (* k c k)) ?x908 ?x1111 (* 6 (* m c c)) ?x565 ?x1034 ?x735 ?x103 ?x556 ?x991 ?x918 ?x1046 ?x577 ?x1061 ?x1066 ?x563 ?x1081 ?x564)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x264 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x212 (= (+ ?x40 ?x44 ?x214 ?x215 (* 9 (* c n))) 4)))
 (let (($x128 (= (+ m (* (- 6) n)) 6)))
 (let (($x736 (and $x128 $x212 $x264 $x302 (not (= ?x102 0)))))
 (let ((?x729 (* ?x315 ?x312 ?x70 ?x69 ?x69)))
 (let (($x537 (not (= (+ ?x729 ?x659 ?x856 ?x747 ?x755 ?x144 ?x900 ?x908 ?x1034 ?x918) 0))))
 (let (($x715 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x316 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x827 (and $x128 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x214 ?x215) 4) $x316 $x715 $x537)))
 (rewrite (= $x827 $x736))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x758 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x312 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x966 (* ?x315 ?x315 ?x312 ?x70 ?x69 ?x69)))
 (let ((?x848 (* ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x750 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x987 (+ (* (- 1) (* ?x315 ?x312 ?x70 ?x69 ?x69)) (* 3 (* ?x315 ?x312 ?x70 ?x69 ?x69 ?x69)) ?x750 (* (- 1) (* ?x315 ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)) ?x848 (* (- 2) (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)) (* (- 1) (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)) (* 3 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x69)) (* (- 2) ?x966))))
 (let (($x715 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x624 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x584 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x128 (= (+ m (* (- 6) n)) 6)))
 (and $x128 (= ?x584 (- 4)) $x624 $x715 (not (= ?x987 0))))))))))))))))) :qid k!34))
 ))
 (let ((?x603 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x312 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x966 (* ?x315 ?x315 ?x312 ?x70 ?x69 ?x69)))
 (let ((?x918 (* 2 ?x966)))
 (let ((?x937 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1034 (* (- 3) ?x937)))
 (let ((?x908 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)))
 (let ((?x869 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)))
 (let ((?x900 (* 2 ?x869)))
 (let ((?x848 (* ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x144 (* (- 1) ?x848)))
 (let ((?x755 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x747 (* ?x315 ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x750 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x856 (* (- 1) ?x750)))
 (let ((?x742 (* ?x315 ?x312 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x659 (* (- 3) ?x742)))
 (let ((?x729 (* ?x315 ?x312 ?x70 ?x69 ?x69)))
 (let (($x537 (not (= (+ ?x729 ?x659 ?x856 ?x747 ?x755 ?x144 ?x900 ?x908 ?x1034 ?x918) 0))))
 (let (($x715 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x316 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x128 (= (+ m (* (- 6) n)) 6)))
 (let (($x827 (and $x128 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x214 ?x215) 4) $x316 $x715 $x537)))
 (let ((?x987 (+ (* (- 1) ?x729) (* 3 ?x742) ?x750 (* (- 1) ?x747) (* (- 1) ?x755) ?x848 (* (- 2) ?x869) (* (- 1) ?x908) (* 3 ?x937) (* (- 2) ?x966))))
 (let (($x624 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x584 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x740 (and $x128 (= ?x584 (- 4)) $x624 $x715 (not (= ?x987 0)))))
 (rewrite (= $x740 $x827))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x95 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x76 (+ (* (- 1) ?x69 ?x69 ?x70 ?x71 ?x72) (* 3 ?x69 ?x69 ?x69 ?x70 ?x71 ?x72) (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x80 (- (- ?x76 (* ?x69 ?x69 ?x70 ?x70 ?x71 ?x72 ?x72)) (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x85 (- (+ ?x80 (* ?x69 ?x69 ?x70 ?x70 ?x71 ?x72)) (* 2 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x88 (+ (- ?x85 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)) (* 3 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let (($x93 (or (not (= (- ?x88 (* 2 ?x69 ?x69 ?x70 ?x71 ?x72 ?x72)) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x93))))))))))))))))) :qid k!34))
 ))
 (let ((?x745 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x312 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x966 (* ?x315 ?x315 ?x312 ?x70 ?x69 ?x69)))
 (let ((?x848 (* ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x750 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x987 (+ (* (- 1) (* ?x315 ?x312 ?x70 ?x69 ?x69)) (* 3 (* ?x315 ?x312 ?x70 ?x69 ?x69 ?x69)) ?x750 (* (- 1) (* ?x315 ?x315 ?x312 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x70)) ?x848 (* (- 2) (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)) (* (- 1) (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70)) (* 3 (* ?x315 ?x315 ?x315 ?x312 ?x312 ?x70 ?x70 ?x70 ?x69)) (* (- 2) ?x966))))
 (let (($x715 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x624 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x584 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x128 (= (+ m (* (- 6) n)) 6)))
 (let (($x740 (and $x128 (= ?x584 (- 4)) $x624 $x715 (not (= ?x987 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x76 (+ (* (- 1) ?x69 ?x69 ?x70 ?x71 ?x72) (* 3 ?x69 ?x69 ?x69 ?x70 ?x71 ?x72) (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x80 (- (- ?x76 (* ?x69 ?x69 ?x70 ?x70 ?x71 ?x72 ?x72)) (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x85 (- (+ ?x80 (* ?x69 ?x69 ?x70 ?x70 ?x71 ?x72)) (* 2 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x88 (+ (- ?x85 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)) (* 3 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let (($x93 (or (not (= (- ?x88 (* 2 ?x69 ?x69 ?x70 ?x71 ?x72 ?x72)) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x94 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x93)))
 (rewrite (= $x94 $x740)))))))))))))))))))))))))))))))
 ))
 (let ((@x96 (asserted $x95)))
 (let ((@x876 (mp (mp @x96 (quant-intro (proof-bind ?x745) (= $x95 $x758)) $x758) (rewrite (= $x758 $x758)) $x758)))
 (let ((@x800 (mp (mp @x876 (quant-intro (proof-bind ?x603) (= $x758 $x590)) $x590) (quant-intro (proof-bind ?x113) (= $x590 $x384)) $x384)))
 (let ((@x680 (mp~ (mp @x800 (quant-intro (proof-bind ?x191) (= $x384 $x165)) $x165) (sk (~ $x165 $x717)) $x717)))
 (let ((@x879 (mp @x680 (rewrite (= $x717 $x1031)) $x1031)))
 (let ((@x867 (and-elim @x879 $x942)))
 (let ((@x145 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x942) $x1016)) @x867 $x1016)))
 (let (($x724 (>= ?x815 (- 6))))
 (let ((@x889 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x942) $x724)) @x867 $x724)))
 (let (($x939 (<= ?x976 (- 4))))
 (let ((@x374 (and-elim @x879 $x578)))
 (let ((@x998 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x578) $x939)) @x374 $x939)))
 (let (($x929 (>= ?x976 (- 4))))
 (let ((@x1058 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x578) $x929)) @x374 $x929)))
 (let (($x936 (<= ?x832 (- 1))))
 (let ((@x190 (and-elim @x879 $x834)))
 (let ((@x1055 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x834) $x936)) @x190 $x936)))
 (let (($x914 (>= ?x832 (- 1))))
 (let ((@x569 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x834) $x914)) @x190 $x914)))
 (let (($x182 (<= ?x958 (- 1))))
 (let ((@x188 (and-elim @x879 $x956)))
 (let ((@x1024 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x956) $x182)) @x188 $x182)))
 (let (($x960 (>= ?x958 (- 1))))
 (let ((@x640 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x956) $x960)) @x188 $x960)))
 (let (($x837 (not (<= ?x932 0))))
 (let (($x921 (>= ?x932 0)))
 (let ((@x1095 ((_ th-lemma arith) (hypothesis (not $x921)) @x640 @x1024 @x889 @x145 @x640 @x1024 @x640 @x1024 @x569 @x1055 @x640 @x1024 @x569 @x1055 @x640 @x1024 @x569 @x1055 @x1058 @x998 @x889 @x145 @x889 @x145 false)))
 (let ((@x634 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1043 $x837 (not $x921))) (and-elim @x879 $x884) (or $x837 (not $x921)))))
 ((_ th-lemma arith) (unit-resolution @x634 (lemma @x1095 $x921) $x837) @x640 @x1024 @x889 @x145 @x640 @x1024 @x640 @x1024 @x569 @x1055 @x640 @x1024 @x569 @x1055 @x640 @x1024 @x569 @x1055 @x1058 @x998 @x889 @x145 @x889 @x145 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        17
 :arith-assert-upper        36
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           9
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             320
 :arith-nonlinear-bounds    10
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        2
 :arith-pivots              9
 :arith-row-summations      10
 :arith-tableau-max-columns 63
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 31
 :del-clause                16
 :final-checks              6
 :max-memory                3.77
 :memory                    3.19
 :mk-bool-var               51
 :mk-clause                 16
 :num-allocs                2067942
 :num-checks                1
 :propagations              10
 :rlimit-count              20800
 :time                      0.02
 :total-time                0.02)
