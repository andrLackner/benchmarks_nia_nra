unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x1641 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 8) r!2) (* (- 1) (* d!1 d!1 q!3)) (* (- 4) (* d!1 x!0)) (* 2 (* d!1 q!3)) (* 4 (* d!1 r!2)))))
 (let (($x1850 (>= ?x1641 0)))
 (let (($x2006 (= ?x1641 0)))
 (let ((?x1055 (* d!1 d!1 q!3)))
 (let ((?x497 (* 8 r!2)))
 (let ((?x305 (* r00 d00)))
 (let ((?x306 (* 4 ?x305)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x319 (+ ?x170 ?x218 ?x202 ?x268 ?x306 ?x497 ?x1055 (* 4 (* d!1 x!0)) (* (- 2) (* d!1 q!3)) (* (- 4) (* d!1 r!2)))))
 (let ((?x2133 (* d!1 d!1 d!1 r!2 r!2 q!3)))
 (let ((?x1246 (* (- 1) (* d!1 d!1 d!1 r!2 r!2 x!0))))
 (let ((?x1392 (* (- 1) x!0)))
 (let ((?x1376 (* 2 r!2)))
 (let ((?x296 (+ 2 d!1 ?x1376 ?x1392 q!3)))
 (let ((?x2111 (+ 4 q!3)))
 (let ((?x1738 (+ 2 d!1)))
 (let ((?x1464 (* d!1 d!1 d!1 d!1 r!2 r!2)))
 (let ((?x2131 (* 12 (* d!1 d!1 r!2 r!2 r!2))))
 (let ((?x1032 (* (- 1) (* r!2 r!2 q!3 q!3 q!3))))
 (let ((?x933 (* (- 8) (* r!2 r!2 x!0))))
 (let ((?x2071 (* (- 12) (* d!1 r!2 r!2 x!0))))
 (let ((?x396 (* 6 (* d!1 d!1 r!2 r!2 q!3))))
 (let ((?x787 (* r!2 r!2)))
 (let ((?x645 (* (- 48) ?x787)))
 (let ((?x571 (* r!2 r!2 q!3)))
 (let ((?x611 (* (- 40) ?x571)))
 (let ((?x1407 (* 2 (* d!1 d!1 d!1 r!2 r!2 r!2))))
 (let ((?x1401 (* (- 6) (* d!1 d!1 r!2 r!2 x!0))))
 (let ((?x376 (* 16 (* r!2 r!2 r!2))))
 (let ((?x579 (* 24 (* d!1 r!2 r!2 r!2))))
 (let ((?x577 (* 12 (* d!1 r!2 r!2 q!3))))
 (let ((?x2094 (+ (* 8 (* d!1 d!1 d!1 r!2 r!2)) ?x577 (* (- 1) (* ?x1738 ?x1738 ?x1738 ?x2111 ?x2111 ?x296 r!2)) ?x579 ?x376 ?x1401 ?x1407 ?x611 ?x645 ?x396 ?x2071 ?x933 ?x1032 ?x2131 (* (- 12) (* r!2 r!2 q!3 q!3)) ?x1464 (* ?x1738 ?x1738 ?x1738 ?x2111 ?x2111 ?x2111 ?x296 ?x296 ?x296) (* 24 (* d!1 d!1 r!2 r!2)) ?x1246 (* 32 (* d!1 r!2 r!2)) ?x2133)))
 (let ((?x1449 (* ?x2094 ?x319)))
 (let (($x2155 (= ?x1449 0)))
 (let (($x1758 (not $x2155)))
 (let ((?x551 (* (- 2) d!1)))
 (let ((?x1651 (+ (- 4) ?x551 ?x1376 ?x1392 q!3)))
 (let ((?x565 (+ (- 8) q!3)))
 (let ((?x1086 (* 480 ?x787)))
 (let ((?x395 (+ (* (- 16) (* d!1 d!1 d!1 r!2 r!2)) ?x577 ?x579 ?x376 ?x1401 ?x1407 (* (- 184) ?x571) ?x1086 ?x396 ?x2071 ?x933 ?x1032 ?x2131 (* 24 (* r!2 r!2 q!3 q!3)) (* ?x565 ?x565 ?x565 ?x1738 ?x1738 ?x1738 ?x1651 ?x1651 ?x1651) (* (- 2) ?x1464) (* (- 48) (* d!1 d!1 r!2 r!2)) (* (- 1) (* ?x565 ?x565 ?x1738 ?x1738 ?x1738 ?x1651 r!2)) ?x1246 (* (- 64) (* d!1 r!2 r!2)) ?x2133)))
 (let ((?x950 (* ?x395 ?x319)))
 (let (($x483 (= ?x950 0)))
 (let ((?x1031 (* (- 1) d!1)))
 (let ((?x411 (+ (- 2) ?x1031 ?x1376 ?x1392 q!3)))
 (let ((?x2045 (+ (- 4) q!3)))
 (let ((?x1397 (* 48 ?x787)))
 (let ((?x777 (+ (* (- 8) (* d!1 d!1 d!1 r!2 r!2)) ?x577 ?x579 ?x376 ?x1401 ?x1407 ?x611 ?x1397 ?x396 ?x2071 ?x933 ?x1032 ?x2131 (* 12 (* r!2 r!2 q!3 q!3)) (* (- 1) (* ?x2045 ?x2045 ?x1738 ?x1738 ?x1738 ?x411 r!2)) (* (- 1) ?x1464) (* ?x2045 ?x2045 ?x2045 ?x1738 ?x1738 ?x1738 ?x411 ?x411 ?x411) (* (- 24) (* d!1 d!1 r!2 r!2)) ?x1246 (* (- 32) (* d!1 r!2 r!2)) ?x2133)))
 (let ((?x1337 (* ?x777 ?x319)))
 (let (($x664 (= ?x1337 0)))
 (let ((?x2160 (+ ?x1376 ?x1392 q!3)))
 (let ((?x510 (+ (* (- 6) (* d!1 d!1 r!2 q!3 q!3 q!3)) (* (- 24) (* d!1 r!2 r!2 q!3 q!3)) ?x577 ?x579 ?x376 ?x1401 ?x1407 (* 8 ?x571) (* 8 (* r!2 x!0 q!3 q!3)) ?x396 (* 12 (* d!1 r!2 x!0 q!3 q!3)) ?x2071 ?x933 ?x1032 (* 6 (* d!1 d!1 r!2 x!0 q!3 q!3)) ?x2131 (* (- 16) (* r!2 r!2 q!3 q!3)) (* d!1 d!1 d!1 r!2 x!0 q!3 q!3) (* (- 12) (* d!1 d!1 r!2 r!2 q!3 q!3)) (* (- 12) (* d!1 r!2 q!3 q!3 q!3)) (* (- 1) (* d!1 d!1 d!1 r!2 q!3 q!3 q!3)) (* (- 2) (* d!1 d!1 d!1 r!2 r!2 q!3 q!3)) ?x1246 (* (- 8) (* r!2 q!3 q!3 q!3)) ?x2133 (* ?x1738 ?x1738 ?x1738 ?x2160 ?x2160 ?x2160 q!3 q!3 q!3))))
 (let ((?x1639 (* ?x510 ?x319)))
 (let (($x2105 (= ?x1639 0)))
 (let (($x392 (not $x2105)))
 (let (($x390 (or $x392 (not $x664) (not $x483) $x1758)))
 (let (($x682 (and $x2006 $x390)))
 (let ((?x1385 (* q!3 d!1 d!1)))
 (let ((?x597 (* (- 4) (* r!2 d!1))))
 (let ((?x954 (* (- 2) (* q!3 d!1))))
 (let ((?x496 (* 4 (* x!0 d!1))))
 (let ((?x1887 (+ ?x497 ?x170 ?x218 ?x202 ?x268 ?x306 ?x496 (* (- 8) (* d!1 2)) (* 16 d!1) ?x954 ?x597 ?x1385)))
 (let ((?x944 (* 8 (* r!2 r!2 r!2 d!1 d!1))))
 (let ((?x934 (* 2 (* r!2 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x1646 (* 16 (* r!2 r!2 r!2 d!1))))
 (let ((?x1886 (* (- 1) (* ?x565 ?x565 ?x1738 ?x1738 ?x1738 (+ (- 4) q!3 ?x1376 ?x1392 ?x551) r!2))))
 (let ((?x1682 (* 6 (* q!3 r!2 r!2 d!1 d!1))))
 (let ((?x1627 (* q!3 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x1625 (* (- 8) (* r!2 r!2 x!0 d!1))))
 (let ((?x975 (* 8 (* q!3 r!2 r!2 d!1))))
 (let ((?x1994 (* (- 1) (* q!3 q!3 q!3 r!2 r!2))))
 (let ((?x2050 (+ (- 4) q!3 ?x1376 ?x1392 ?x551)))
 (let ((?x403 (* 2 (* d!1 2 q!3 r!2 r!2))))
 (let ((?x1688 (* 2 (* d!1 2 ?x1376 r!2 r!2))))
 (let ((?x646 (* 2 (* d!1 d!1 ?x1376 r!2 r!2))))
 (let ((?x1373 (* 2 (* d!1 2 ?x1392 r!2 r!2))))
 (let ((?x1354 (* (- 1) (* r!2 r!2 x!0 d!1 d!1 d!1))))
 (let ((?x593 (* 2 (* d!1 d!1 ?x1392 r!2 r!2))))
 (let ((?x951 (* (- 4) (* r!2 r!2 x!0 d!1 d!1))))
 (let ((?x2098 (+ ?x951 (* (- 32) (* r!2 r!2 d!1 d!1)) ?x593 ?x1354 (* (- 48) (* r!2 r!2 d!1)) ?x1373 ?x646 ?x1086 ?x1688 ?x403 (* (- 184) (* q!3 r!2 r!2)) (* ?x565 ?x565 ?x565 ?x1738 ?x1738 ?x1738 ?x2050 ?x2050 ?x2050) ?x1994 (* 24 (* q!3 q!3 r!2 r!2)) ?x975 (* (- 12) (* r!2 r!2 d!1 d!1 d!1)) ?x1625 ?x1627 ?x1682 (* 2 (* d!1 2 ?x551 r!2 r!2)) (* 2 (* d!1 d!1 ?x551 r!2 r!2)) (* 2 (* d!1 d!1 (- 4) r!2 r!2)) (* 2 (* d!1 2 (- 4) r!2 r!2)) ?x1886 ?x376 ?x1646 (* (- 2) (* r!2 r!2 d!1 d!1 d!1 d!1)) ?x934 ?x944 ?x933)))
 (let ((?x670 (+ ?x497 ?x170 ?x218 ?x202 ?x268 ?x306 ?x496 ?x954 ?x597 ?x1385)))
 (let ((?x1070 (+ q!3 ?x1376 ?x1392)))
 (let ((?x1071 (+ ?x951 ?x593 ?x1354 ?x1373 ?x646 (* (- 1) (* q!3 q!3 q!3 r!2 d!1 d!1 d!1)) (* 12 (* q!3 q!3 r!2 x!0 d!1)) (* 6 (* q!3 q!3 r!2 x!0 d!1 d!1)) ?x1688 ?x403 (* 8 (* q!3 r!2 r!2)) (* 8 (* q!3 q!3 r!2 x!0)) ?x1994 (* (- 8) (* q!3 q!3 q!3 r!2)) (* (- 16) (* q!3 q!3 r!2 r!2)) ?x975 (* (- 12) (* q!3 q!3 q!3 r!2 d!1)) (* (- 6) (* q!3 q!3 q!3 r!2 d!1 d!1)) (* (- 24) (* q!3 q!3 r!2 r!2 d!1)) (* (- 12) (* q!3 q!3 r!2 r!2 d!1 d!1)) (* (- 2) (* q!3 q!3 r!2 r!2 d!1 d!1 d!1)) (* ?x1738 ?x1738 ?x1738 ?x1070 ?x1070 ?x1070 q!3 q!3 q!3) (* q!3 q!3 r!2 x!0 d!1 d!1 d!1) ?x1625 ?x1627 ?x1682 ?x376 ?x1646 ?x934 ?x944 ?x933)))
 (let ((?x1717 (+ ?x497 ?x170 ?x218 ?x202 ?x268 ?x306 ?x496 (* (- 4) (* d!1 2)) (* 8 d!1) ?x954 ?x597 ?x1385)))
 (let ((?x343 (+ (- 2) q!3 ?x1376 ?x1392 ?x1031)))
 (let ((?x1744 (* q!3 r!2 r!2)))
 (let ((?x919 (* (- 40) ?x1744)))
 (let ((?x2102 (+ ?x951 (* (- 16) (* r!2 r!2 d!1 d!1)) ?x593 ?x1354 (* (- 24) (* r!2 r!2 d!1)) ?x1373 ?x646 ?x1397 ?x1688 ?x403 ?x919 ?x1994 (* 12 (* q!3 q!3 r!2 r!2)) (* (- 1) (* ?x2045 ?x2045 ?x1738 ?x1738 ?x1738 ?x343 r!2)) (* ?x2045 ?x2045 ?x2045 ?x1738 ?x1738 ?x1738 ?x343 ?x343 ?x343) ?x975 (* (- 6) (* r!2 r!2 d!1 d!1 d!1)) (* 2 (* d!1 d!1 ?x1031 r!2 r!2)) (* 2 (* d!1 2 ?x1031 r!2 r!2)) (* 2 (* d!1 d!1 (- 2) r!2 r!2)) (* 2 (* d!1 2 (- 2) r!2 r!2)) ?x1625 ?x1627 ?x1682 ?x376 ?x1646 (* (- 1) (* r!2 r!2 d!1 d!1 d!1 d!1)) ?x934 ?x944 ?x933)))
 (let ((?x598 (+ ?x497 ?x170 ?x218 ?x202 ?x268 ?x306 ?x496 (* (- 8) d!1) ?x954 ?x597 ?x1385 (* 2 (* d!1 4)))))
 (let ((?x1643 (* r!2 r!2 d!1 d!1 d!1 d!1)))
 (let ((?x1876 (* (- 1) (* ?x1738 ?x1738 ?x1738 ?x2111 ?x2111 (+ 2 q!3 ?x1376 ?x1392 d!1) r!2))))
 (let ((?x1877 (+ 2 q!3 ?x1376 ?x1392 d!1)))
 (let ((?x676 (+ ?x951 (* 16 (* r!2 r!2 d!1 d!1)) ?x593 ?x1354 (* 24 (* r!2 r!2 d!1)) ?x1373 (* 2 (* d!1 2 d!1 r!2 r!2)) ?x646 ?x645 ?x1688 ?x403 ?x919 ?x1994 (* (- 12) (* q!3 q!3 r!2 r!2)) (* 2 (* d!1 2 2 r!2 r!2)) (* 2 (* d!1 d!1 2 r!2 r!2)) ?x975 (* 8 (* r!2 r!2 d!1 d!1 d!1)) (* ?x1738 ?x1738 ?x1738 ?x2111 ?x2111 ?x2111 ?x1877 ?x1877 ?x1877) ?x1876 ?x1625 ?x1627 ?x1682 ?x376 ?x1646 ?x1643 ?x934 ?x944 ?x933)))
 (let (($x1883 (or (not (= (* ?x676 ?x598) 0)) (not (= (* ?x2102 ?x1717) 0)) (not (= (* ?x1071 ?x670) 0)) (not (= (* ?x2098 ?x1887) 0)))))
 (let (($x2108 (and (= ?x670 0) $x1883)))
 (let (($x335 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2091 (* q d d)))
 (let ((?x2060 (* r d)))
 (let ((?x2061 (* (- 4) ?x2060)))
 (let ((?x2064 (* (- 2) (* q d))))
 (let ((?x1930 (* 16 d)))
 (let ((?x800 (* 4 (* x d))))
 (let ((?x305 (* r00 d00)))
 (let ((?x306 (* 4 ?x305)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x199 (* 8 r)))
 (let ((?x493 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x800 (* (- 8) (* d 2)) ?x1930 ?x2064 ?x2061 ?x2091)))
 (let ((?x2148 (* (- 8) (* r r x))))
 (let ((?x2125 (* 8 (* r r r d d))))
 (let ((?x2123 (* 2 (* r r r d d d))))
 (let ((?x2121 (* r r d d d d)))
 (let ((?x1920 (* (- 2) ?x2121)))
 (let ((?x2115 (* 16 (* r r r d))))
 (let ((?x2113 (* 16 (* r r r))))
 (let ((?x1919 (* (- 2) d)))
 (let ((?x167 (* (- 1) x)))
 (let ((?x135 (* 2 r)))
 (let ((?x1720 (+ (- 4) q ?x135 ?x167 ?x1919)))
 (let ((?x2167 (+ 2 d)))
 (let ((?x1921 (+ (- 8) q)))
 (let ((?x1931 (* 2 (* d 2 (- 4) r r))))
 (let ((?x1932 (* 2 (* d d (- 4) r r))))
 (let ((?x1913 (* 2 (* d d ?x1919 r r))))
 (let ((?x1925 (* 2 (* d 2 ?x1919 r r))))
 (let ((?x1074 (* 6 (* q r r d d))))
 (let ((?x1901 (* q r r d d d)))
 (let ((?x553 (* (- 8) (* r r x d))))
 (let ((?x1054 (* r r d d d)))
 (let ((?x1917 (* (- 12) ?x1054)))
 (let ((?x1051 (* 8 (* q r r d))))
 (let ((?x766 (* q q r r)))
 (let ((?x1910 (* 24 ?x766)))
 (let ((?x694 (* q q q r r)))
 (let ((?x2171 (* (- 1) ?x694)))
 (let ((?x513 (* q r r)))
 (let ((?x1907 (* (- 184) ?x513)))
 (let ((?x489 (* 2 (* d 2 q r r))))
 (let ((?x484 (* 2 (* d 2 ?x135 r r))))
 (let ((?x383 (* r r)))
 (let ((?x1911 (* 480 ?x383)))
 (let ((?x447 (* 2 (* d d ?x135 r r))))
 (let ((?x351 (* 2 (* d 2 ?x167 r r))))
 (let ((?x333 (* r r d)))
 (let ((?x1912 (* (- 48) ?x333)))
 (let ((?x641 (* (- 1) (* r r x d d d))))
 (let ((?x238 (* 2 (* d d ?x167 r r))))
 (let ((?x227 (* r r d d)))
 (let ((?x1916 (* (- 32) ?x227)))
 (let ((?x554 (* (- 4) (* r r x d d))))
 (let ((?x1060 (+ ?x554 ?x1916 ?x238 ?x641 ?x1912 ?x351 ?x447 ?x1911 ?x484 ?x489 ?x1907 (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x1720 ?x1720 ?x1720) ?x2171 ?x1910 ?x1051 ?x1917 ?x553 ?x1901 ?x1074 ?x1925 ?x1913 ?x1932 ?x1931 (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x1720 r)) ?x2113 ?x2115 ?x1920 ?x2123 ?x2125 ?x2148)))
 (let ((?x615 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x800 ?x2064 ?x2061 ?x2091)))
 (let ((?x1584 (+ q ?x135 ?x167)))
 (let ((?x1601 (* (- 16) ?x766)))
 (let ((?x703 (* q q q r)))
 (let ((?x1413 (* (- 8) ?x703)))
 (let ((?x627 (* q q r x)))
 (let ((?x1549 (* 8 ?x627)))
 (let ((?x1415 (* 8 ?x513)))
 (let ((?x509 (+ ?x554 ?x238 ?x641 ?x351 ?x447 (* (- 1) (* q q q r d d d)) (* 12 (* q q r x d)) (* 6 (* q q r x d d)) ?x484 ?x489 ?x1415 ?x1549 ?x2171 ?x1413 ?x1601 ?x1051 (* (- 12) (* q q q r d)) (* (- 6) (* q q q r d d)) (* (- 24) (* q q r r d)) (* (- 12) (* q q r r d d)) (* (- 2) (* q q r r d d d)) (* ?x2167 ?x2167 ?x2167 ?x1584 ?x1584 ?x1584 q q q) (* q q r x d d d) ?x553 ?x1901 ?x1074 ?x2113 ?x2115 ?x2123 ?x2125 ?x2148)))
 (let ((?x1593 (* 8 d)))
 (let ((?x808 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x800 (* (- 4) (* d 2)) ?x1593 ?x2064 ?x2061 ?x2091)))
 (let ((?x1820 (* (- 1) ?x2121)))
 (let ((?x1869 (* 2 (* d 2 (- 2) r r))))
 (let ((?x1866 (* 2 (* d d (- 2) r r))))
 (let ((?x1864 (* 2 (* d 2 (* (- 1) d) r r))))
 (let ((?x1862 (* 2 (* d d (* (- 1) d) r r))))
 (let ((?x1821 (* (- 6) ?x1054)))
 (let ((?x1805 (* (- 1) d)))
 (let ((?x186 (+ (- 2) q ?x135 ?x167 ?x1805)))
 (let ((?x1804 (+ (- 4) q)))
 (let ((?x1827 (* 12 ?x766)))
 (let ((?x532 (* (- 40) ?x513)))
 (let ((?x1826 (* 48 ?x383)))
 (let ((?x1823 (* (- 24) ?x333)))
 (let ((?x1822 (* (- 16) ?x227)))
 (let ((?x1110 (+ ?x554 ?x1822 ?x238 ?x641 ?x1823 ?x351 ?x447 ?x1826 ?x484 ?x489 ?x532 ?x2171 ?x1827 (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x186 r)) (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x186 ?x186 ?x186) ?x1051 ?x1821 ?x1862 ?x1864 ?x1866 ?x1869 ?x553 ?x1901 ?x1074 ?x2113 ?x2115 ?x1820 ?x2123 ?x2125 ?x2148)))
 (let ((?x2169 (* 2 (* d 4))))
 (let ((?x1982 (* (- 8) d)))
 (let ((?x448 (+ 2 q ?x135 ?x167 d)))
 (let ((?x2165 (+ 4 q)))
 (let ((?x217 (* 8 ?x1054)))
 (let ((?x987 (* 2 (* d d 2 r r))))
 (let ((?x953 (* 2 (* d 2 2 r r))))
 (let ((?x1430 (* (- 12) ?x766)))
 (let ((?x931 (* (- 48) ?x383)))
 (let ((?x362 (* 2 (* d 2 d r r))))
 (let ((?x342 (* 24 ?x333)))
 (let ((?x221 (* 16 ?x227)))
 (let ((?x1889 (+ ?x554 ?x221 ?x238 ?x641 ?x342 ?x351 ?x362 ?x447 ?x931 ?x484 ?x489 ?x532 ?x2171 ?x1430 ?x953 ?x987 ?x1051 ?x217 (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x448 ?x448 ?x448) (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x448 r)) ?x553 ?x1901 ?x1074 ?x2113 ?x2115 ?x2121 ?x2123 ?x2125 ?x2148)))
 (let ((?x399 (* ?x1889 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x800 ?x1982 ?x2064 ?x2061 ?x2091 ?x2169))))
 (let (($x996 (or (not (= ?x399 0)) (not (= (* ?x1110 ?x808) 0)) (not (= (* ?x509 ?x615) 0)) (not (= (* ?x1060 ?x493) 0)))))
 (and (= ?x615 0) $x996)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x517 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x581 (* 4 (* d00 r00))))
 (let ((?x1805 (* (- 1) d)))
 (let ((?x167 (* (- 1) x)))
 (let ((?x135 (* 2 r)))
 (let ((?x977 (+ (- 2) ?x135 ?x167 q ?x1805)))
 (let ((?x2167 (+ 2 d)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x974 (* 4 (* ?x2167 r))))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x1982 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1090 (* (- 8) x)))
 (let ((?x415 (* 16 r)))
 (let ((?x540 (+ (- 16) ?x415 ?x1090 ?x30 ?x1982 ?x170 ?x974 ?x202 ?x218 (* (+ (- 4) q) ?x2167 ?x2167) (* (- 2) (* (+ (- 4) q) ?x2167)) ?x268 (* (- 4) (* ?x2167 ?x977)) ?x581)))
 (let ((?x535 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) r r))))
 (let ((?x1804 (+ (- 4) q)))
 (let ((?x536 (+ (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x977 r)) (* ?x2167 ?x2167 ?x2167 ?x977 r r) (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x977 ?x977 ?x977) ?x535)))
 (let (($x2087 (not (= (* ?x536 ?x540) 0))))
 (let ((?x2025 (+ ?x415 ?x1090 ?x30 ?x170 ?x974 ?x202 ?x218 (* ?x2167 ?x2167 q) (* (- 2) (* ?x2167 q)) ?x268 (* (- 4) (* ?x2167 (+ ?x135 ?x167 q))) ?x581)))
 (let ((?x2083 (+ ?x135 ?x167 q)))
 (let ((?x2031 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2083 r q q)) (* ?x2167 ?x2167 ?x2167 ?x2083 r r) (* ?x2167 ?x2167 ?x2167 ?x2083 ?x2083 ?x2083 q q q) (* (- 1) (* r r q q q)))))
 (let (($x741 (not (= (* ?x2031 ?x2025) 0))))
 (let ((?x1593 (* 8 d)))
 (let ((?x708 (+ 16 ?x415 ?x1090 ?x30 ?x1593 ?x170 ?x974 ?x202 ?x218 (* ?x2167 ?x2167 (+ 4 q)) (* (- 2) (* ?x2167 (+ 4 q))) ?x268 (* (- 4) (* ?x2167 (+ 2 ?x135 ?x167 q d))) ?x581)))
 (let ((?x720 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) r r))))
 (let ((?x842 (+ 2 ?x135 ?x167 q d)))
 (let ((?x2165 (+ 4 q)))
 (let ((?x721 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x842 r)) (* ?x2167 ?x2167 ?x2167 ?x842 r r) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x842 ?x842 ?x842) ?x720)))
 (let (($x706 (not (= (* ?x721 ?x708) 0))))
 (let ((?x639 (+ (- 32) ?x415 ?x1090 ?x30 (* (- 16) d) ?x170 ?x974 ?x202 ?x218 (* (+ (- 8) q) ?x2167 ?x2167) (* (- 2) (* (+ (- 8) q) ?x2167)) ?x268 (* (- 4) (* ?x2167 (+ (- 4) ?x135 ?x167 q (* (- 2) d)))) ?x581)))
 (let ((?x1807 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) r r))))
 (let ((?x1919 (* (- 2) d)))
 (let ((?x729 (+ (- 4) ?x135 ?x167 q ?x1919)))
 (let ((?x1921 (+ (- 8) q)))
 (let ((?x1808 (+ (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x729 r)) (* ?x2167 ?x2167 ?x2167 ?x729 r r) (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x729 ?x729 ?x729) ?x1807)))
 (let (($x534 (not (= (* ?x1808 ?x639) 0))))
 (let ((?x800 (* 4 (* x d))))
 (let ((?x199 (* 8 r)))
 (let ((?x843 (+ ?x199 ?x170 ?x800 ?x202 ?x218 (* d d q) (* (- 2) (* d q)) ?x268 (* (- 4) (* d r)) ?x581)))
 (let (($x742 (= ?x843 0)))
 (and $x742 (or $x534 $x706 $x741 $x2087))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x924 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2091 (* q d d)))
 (let ((?x2060 (* r d)))
 (let ((?x2061 (* (- 4) ?x2060)))
 (let ((?x2064 (* (- 2) (* q d))))
 (let ((?x1930 (* 16 d)))
 (let ((?x800 (* 4 (* x d))))
 (let ((?x305 (* r00 d00)))
 (let ((?x306 (* 4 ?x305)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x199 (* 8 r)))
 (let ((?x493 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x800 (* (- 8) (* d 2)) ?x1930 ?x2064 ?x2061 ?x2091)))
 (let ((?x2148 (* (- 8) (* r r x))))
 (let ((?x2125 (* 8 (* r r r d d))))
 (let ((?x2123 (* 2 (* r r r d d d))))
 (let ((?x2121 (* r r d d d d)))
 (let ((?x1920 (* (- 2) ?x2121)))
 (let ((?x2115 (* 16 (* r r r d))))
 (let ((?x2113 (* 16 (* r r r))))
 (let ((?x1919 (* (- 2) d)))
 (let ((?x167 (* (- 1) x)))
 (let ((?x135 (* 2 r)))
 (let ((?x1720 (+ (- 4) q ?x135 ?x167 ?x1919)))
 (let ((?x2167 (+ 2 d)))
 (let ((?x1921 (+ (- 8) q)))
 (let ((?x1931 (* 2 (* d 2 (- 4) r r))))
 (let ((?x1932 (* 2 (* d d (- 4) r r))))
 (let ((?x1913 (* 2 (* d d ?x1919 r r))))
 (let ((?x1925 (* 2 (* d 2 ?x1919 r r))))
 (let ((?x1074 (* 6 (* q r r d d))))
 (let ((?x1901 (* q r r d d d)))
 (let ((?x553 (* (- 8) (* r r x d))))
 (let ((?x1054 (* r r d d d)))
 (let ((?x1917 (* (- 12) ?x1054)))
 (let ((?x1051 (* 8 (* q r r d))))
 (let ((?x766 (* q q r r)))
 (let ((?x1910 (* 24 ?x766)))
 (let ((?x694 (* q q q r r)))
 (let ((?x2171 (* (- 1) ?x694)))
 (let ((?x513 (* q r r)))
 (let ((?x1907 (* (- 184) ?x513)))
 (let ((?x489 (* 2 (* d 2 q r r))))
 (let ((?x484 (* 2 (* d 2 ?x135 r r))))
 (let ((?x383 (* r r)))
 (let ((?x1911 (* 480 ?x383)))
 (let ((?x447 (* 2 (* d d ?x135 r r))))
 (let ((?x351 (* 2 (* d 2 ?x167 r r))))
 (let ((?x333 (* r r d)))
 (let ((?x1912 (* (- 48) ?x333)))
 (let ((?x641 (* (- 1) (* r r x d d d))))
 (let ((?x238 (* 2 (* d d ?x167 r r))))
 (let ((?x227 (* r r d d)))
 (let ((?x1916 (* (- 32) ?x227)))
 (let ((?x554 (* (- 4) (* r r x d d))))
 (let ((?x1060 (+ ?x554 ?x1916 ?x238 ?x641 ?x1912 ?x351 ?x447 ?x1911 ?x484 ?x489 ?x1907 (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x1720 ?x1720 ?x1720) ?x2171 ?x1910 ?x1051 ?x1917 ?x553 ?x1901 ?x1074 ?x1925 ?x1913 ?x1932 ?x1931 (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x1720 r)) ?x2113 ?x2115 ?x1920 ?x2123 ?x2125 ?x2148)))
 (let ((?x615 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x800 ?x2064 ?x2061 ?x2091)))
 (let ((?x1584 (+ q ?x135 ?x167)))
 (let ((?x1601 (* (- 16) ?x766)))
 (let ((?x703 (* q q q r)))
 (let ((?x1413 (* (- 8) ?x703)))
 (let ((?x627 (* q q r x)))
 (let ((?x1549 (* 8 ?x627)))
 (let ((?x1415 (* 8 ?x513)))
 (let ((?x509 (+ ?x554 ?x238 ?x641 ?x351 ?x447 (* (- 1) (* q q q r d d d)) (* 12 (* q q r x d)) (* 6 (* q q r x d d)) ?x484 ?x489 ?x1415 ?x1549 ?x2171 ?x1413 ?x1601 ?x1051 (* (- 12) (* q q q r d)) (* (- 6) (* q q q r d d)) (* (- 24) (* q q r r d)) (* (- 12) (* q q r r d d)) (* (- 2) (* q q r r d d d)) (* ?x2167 ?x2167 ?x2167 ?x1584 ?x1584 ?x1584 q q q) (* q q r x d d d) ?x553 ?x1901 ?x1074 ?x2113 ?x2115 ?x2123 ?x2125 ?x2148)))
 (let ((?x1593 (* 8 d)))
 (let ((?x808 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x800 (* (- 4) (* d 2)) ?x1593 ?x2064 ?x2061 ?x2091)))
 (let ((?x1820 (* (- 1) ?x2121)))
 (let ((?x1869 (* 2 (* d 2 (- 2) r r))))
 (let ((?x1866 (* 2 (* d d (- 2) r r))))
 (let ((?x1864 (* 2 (* d 2 (* (- 1) d) r r))))
 (let ((?x1862 (* 2 (* d d (* (- 1) d) r r))))
 (let ((?x1821 (* (- 6) ?x1054)))
 (let ((?x1805 (* (- 1) d)))
 (let ((?x186 (+ (- 2) q ?x135 ?x167 ?x1805)))
 (let ((?x1804 (+ (- 4) q)))
 (let ((?x1827 (* 12 ?x766)))
 (let ((?x532 (* (- 40) ?x513)))
 (let ((?x1826 (* 48 ?x383)))
 (let ((?x1823 (* (- 24) ?x333)))
 (let ((?x1822 (* (- 16) ?x227)))
 (let ((?x1110 (+ ?x554 ?x1822 ?x238 ?x641 ?x1823 ?x351 ?x447 ?x1826 ?x484 ?x489 ?x532 ?x2171 ?x1827 (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x186 r)) (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x186 ?x186 ?x186) ?x1051 ?x1821 ?x1862 ?x1864 ?x1866 ?x1869 ?x553 ?x1901 ?x1074 ?x2113 ?x2115 ?x1820 ?x2123 ?x2125 ?x2148)))
 (let ((?x2169 (* 2 (* d 4))))
 (let ((?x1982 (* (- 8) d)))
 (let ((?x448 (+ 2 q ?x135 ?x167 d)))
 (let ((?x2165 (+ 4 q)))
 (let ((?x217 (* 8 ?x1054)))
 (let ((?x987 (* 2 (* d d 2 r r))))
 (let ((?x953 (* 2 (* d 2 2 r r))))
 (let ((?x1430 (* (- 12) ?x766)))
 (let ((?x931 (* (- 48) ?x383)))
 (let ((?x362 (* 2 (* d 2 d r r))))
 (let ((?x342 (* 24 ?x333)))
 (let ((?x221 (* 16 ?x227)))
 (let ((?x1889 (+ ?x554 ?x221 ?x238 ?x641 ?x342 ?x351 ?x362 ?x447 ?x931 ?x484 ?x489 ?x532 ?x2171 ?x1430 ?x953 ?x987 ?x1051 ?x217 (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x448 ?x448 ?x448) (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x448 r)) ?x553 ?x1901 ?x1074 ?x2113 ?x2115 ?x2121 ?x2123 ?x2125 ?x2148)))
 (let ((?x399 (* ?x1889 (+ ?x199 ?x170 ?x218 ?x202 ?x268 ?x306 ?x800 ?x1982 ?x2064 ?x2061 ?x2091 ?x2169))))
 (let (($x996 (or (not (= ?x399 0)) (not (= (* ?x1110 ?x808) 0)) (not (= (* ?x509 ?x615) 0)) (not (= (* ?x1060 ?x493) 0)))))
 (let (($x1002 (and (= ?x615 0) $x996)))
 (let ((?x581 (* 4 (* d00 r00))))
 (let ((?x974 (* 4 (* ?x2167 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x1090 (* (- 8) x)))
 (let ((?x415 (* 16 r)))
 (let ((?x540 (+ (- 16) ?x415 ?x1090 ?x30 ?x1982 ?x170 ?x974 ?x202 ?x218 (* ?x1804 ?x2167 ?x2167) (* (- 2) (* ?x1804 ?x2167)) ?x268 (* (- 4) (* ?x2167 (+ (- 2) ?x135 ?x167 q ?x1805))) ?x581)))
 (let ((?x977 (+ (- 2) ?x135 ?x167 q ?x1805)))
 (let ((?x536 (+ (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x977 r)) (* ?x2167 ?x2167 ?x2167 ?x977 r r) (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x977 ?x977 ?x977) (* (- 1) (* ?x1804 ?x1804 ?x1804 r r)))))
 (let (($x2087 (not (= (* ?x536 ?x540) 0))))
 (let ((?x2025 (+ ?x415 ?x1090 ?x30 ?x170 ?x974 ?x202 ?x218 (* ?x2167 ?x2167 q) (* (- 2) (* ?x2167 q)) ?x268 (* (- 4) (* ?x2167 (+ ?x135 ?x167 q))) ?x581)))
 (let ((?x2083 (+ ?x135 ?x167 q)))
 (let ((?x2031 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2083 r q q)) (* ?x2167 ?x2167 ?x2167 ?x2083 r r) (* ?x2167 ?x2167 ?x2167 ?x2083 ?x2083 ?x2083 q q q) (* (- 1) (* r r q q q)))))
 (let (($x741 (not (= (* ?x2031 ?x2025) 0))))
 (let ((?x708 (+ 16 ?x415 ?x1090 ?x30 ?x1593 ?x170 ?x974 ?x202 ?x218 (* ?x2167 ?x2167 ?x2165) (* (- 2) (* ?x2167 ?x2165)) ?x268 (* (- 4) (* ?x2167 (+ 2 ?x135 ?x167 q d))) ?x581)))
 (let ((?x842 (+ 2 ?x135 ?x167 q d)))
 (let ((?x721 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x842 r)) (* ?x2167 ?x2167 ?x2167 ?x842 r r) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x842 ?x842 ?x842) (* (- 1) (* ?x2165 ?x2165 ?x2165 r r)))))
 (let (($x706 (not (= (* ?x721 ?x708) 0))))
 (let ((?x639 (+ (- 32) ?x415 ?x1090 ?x30 (* (- 16) d) ?x170 ?x974 ?x202 ?x218 (* ?x1921 ?x2167 ?x2167) (* (- 2) (* ?x1921 ?x2167)) ?x268 (* (- 4) (* ?x2167 (+ (- 4) ?x135 ?x167 q ?x1919))) ?x581)))
 (let ((?x729 (+ (- 4) ?x135 ?x167 q ?x1919)))
 (let ((?x1808 (+ (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x729 r)) (* ?x2167 ?x2167 ?x2167 ?x729 r r) (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x729 ?x729 ?x729) (* (- 1) (* ?x1921 ?x1921 ?x1921 r r)))))
 (let (($x534 (not (= (* ?x1808 ?x639) 0))))
 (let ((?x843 (+ ?x199 ?x170 ?x800 ?x202 ?x218 (* d d q) (* (- 2) (* d q)) ?x268 (* (- 4) (* d r)) ?x581)))
 (let (($x742 (= ?x843 0)))
 (let (($x1328 (and $x742 (or $x534 $x706 $x741 $x2087))))
 (rewrite (= $x1328 $x1002)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x700 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x581 (* 4 (* d00 r00))))
 (let ((?x167 (* (- 1) x)))
 (let ((?x135 (* 2 r)))
 (let ((?x842 (+ 2 ?x135 ?x167 q d)))
 (let ((?x2167 (+ 2 d)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x974 (* 4 (* ?x2167 r))))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x1593 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1090 (* (- 8) x)))
 (let ((?x415 (* 16 r)))
 (let ((?x708 (+ 16 ?x415 ?x1090 ?x30 ?x1593 ?x170 ?x974 ?x202 ?x218 (* ?x2167 ?x2167 (+ 4 q)) (* (- 2) (* ?x2167 (+ 4 q))) ?x268 (* (- 4) (* ?x2167 ?x842)) ?x581)))
 (let ((?x720 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) r r))))
 (let ((?x2165 (+ 4 q)))
 (let ((?x721 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x842 r)) (* ?x2167 ?x2167 ?x2167 ?x842 r r) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x842 ?x842 ?x842) ?x720)))
 (let (($x706 (not (= (* ?x721 ?x708) 0))))
 (let ((?x2025 (+ ?x415 ?x1090 ?x30 ?x170 ?x974 ?x202 ?x218 (* ?x2167 ?x2167 q) (* (- 2) (* ?x2167 q)) ?x268 (* (- 4) (* ?x2167 (+ ?x135 ?x167 q))) ?x581)))
 (let ((?x2083 (+ ?x135 ?x167 q)))
 (let ((?x2031 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2083 r q q)) (* ?x2167 ?x2167 ?x2167 ?x2083 r r) (* ?x2167 ?x2167 ?x2167 ?x2083 ?x2083 ?x2083 q q q) (* (- 1) (* r r q q q)))))
 (let (($x741 (not (= (* ?x2031 ?x2025) 0))))
 (let ((?x1982 (* (- 8) d)))
 (let ((?x540 (+ (- 16) ?x415 ?x1090 ?x30 ?x1982 ?x170 ?x974 ?x202 ?x218 (* (+ (- 4) q) ?x2167 ?x2167) (* (- 2) (* (+ (- 4) q) ?x2167)) ?x268 (* (- 4) (* ?x2167 (+ (- 2) ?x135 ?x167 q (* (- 1) d)))) ?x581)))
 (let ((?x535 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) r r))))
 (let ((?x1805 (* (- 1) d)))
 (let ((?x977 (+ (- 2) ?x135 ?x167 q ?x1805)))
 (let ((?x1804 (+ (- 4) q)))
 (let ((?x536 (+ (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x977 r)) (* ?x2167 ?x2167 ?x2167 ?x977 r r) (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x977 ?x977 ?x977) ?x535)))
 (let (($x2087 (not (= (* ?x536 ?x540) 0))))
 (let ((?x639 (+ (- 32) ?x415 ?x1090 ?x30 (* (- 16) d) ?x170 ?x974 ?x202 ?x218 (* (+ (- 8) q) ?x2167 ?x2167) (* (- 2) (* (+ (- 8) q) ?x2167)) ?x268 (* (- 4) (* ?x2167 (+ (- 4) ?x135 ?x167 q (* (- 2) d)))) ?x581)))
 (let ((?x1807 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) r r))))
 (let ((?x1919 (* (- 2) d)))
 (let ((?x729 (+ (- 4) ?x135 ?x167 q ?x1919)))
 (let ((?x1921 (+ (- 8) q)))
 (let ((?x1808 (+ (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x729 r)) (* ?x2167 ?x2167 ?x2167 ?x729 r r) (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x729 ?x729 ?x729) ?x1807)))
 (let (($x534 (not (= (* ?x1808 ?x639) 0))))
 (let ((?x800 (* 4 (* x d))))
 (let ((?x199 (* 8 r)))
 (let ((?x843 (+ ?x199 ?x170 ?x800 ?x202 ?x218 (* d d q) (* (- 2) (* d q)) ?x268 (* (- 4) (* d r)) ?x581)))
 (let (($x742 (= ?x843 0)))
 (and $x742 (or $x534 $x2087 $x741 $x706))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x730 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x581 (* 4 (* d00 r00))))
 (let ((?x1805 (* (- 1) d)))
 (let ((?x167 (* (- 1) x)))
 (let ((?x135 (* 2 r)))
 (let ((?x977 (+ (- 2) ?x135 ?x167 q ?x1805)))
 (let ((?x2167 (+ 2 d)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x974 (* 4 (* ?x2167 r))))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x1982 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1090 (* (- 8) x)))
 (let ((?x415 (* 16 r)))
 (let ((?x540 (+ (- 16) ?x415 ?x1090 ?x30 ?x1982 ?x170 ?x974 ?x202 ?x218 (* (+ (- 4) q) ?x2167 ?x2167) (* (- 2) (* (+ (- 4) q) ?x2167)) ?x268 (* (- 4) (* ?x2167 ?x977)) ?x581)))
 (let ((?x535 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) r r))))
 (let ((?x1804 (+ (- 4) q)))
 (let ((?x536 (+ (* (- 1) (* ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x977 r)) (* ?x2167 ?x2167 ?x2167 ?x977 r r) (* ?x1804 ?x1804 ?x1804 ?x2167 ?x2167 ?x2167 ?x977 ?x977 ?x977) ?x535)))
 (let (($x2087 (not (= (* ?x536 ?x540) 0))))
 (let ((?x2025 (+ ?x415 ?x1090 ?x30 ?x170 ?x974 ?x202 ?x218 (* ?x2167 ?x2167 q) (* (- 2) (* ?x2167 q)) ?x268 (* (- 4) (* ?x2167 (+ ?x135 ?x167 q))) ?x581)))
 (let ((?x2083 (+ ?x135 ?x167 q)))
 (let ((?x2031 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2083 r q q)) (* ?x2167 ?x2167 ?x2167 ?x2083 r r) (* ?x2167 ?x2167 ?x2167 ?x2083 ?x2083 ?x2083 q q q) (* (- 1) (* r r q q q)))))
 (let (($x741 (not (= (* ?x2031 ?x2025) 0))))
 (let ((?x1593 (* 8 d)))
 (let ((?x708 (+ 16 ?x415 ?x1090 ?x30 ?x1593 ?x170 ?x974 ?x202 ?x218 (* ?x2167 ?x2167 (+ 4 q)) (* (- 2) (* ?x2167 (+ 4 q))) ?x268 (* (- 4) (* ?x2167 (+ 2 ?x135 ?x167 q d))) ?x581)))
 (let ((?x720 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) r r))))
 (let ((?x842 (+ 2 ?x135 ?x167 q d)))
 (let ((?x2165 (+ 4 q)))
 (let ((?x721 (+ (* (- 1) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x842 r)) (* ?x2167 ?x2167 ?x2167 ?x842 r r) (* ?x2167 ?x2167 ?x2167 ?x2165 ?x2165 ?x2165 ?x842 ?x842 ?x842) ?x720)))
 (let (($x706 (not (= (* ?x721 ?x708) 0))))
 (let ((?x639 (+ (- 32) ?x415 ?x1090 ?x30 (* (- 16) d) ?x170 ?x974 ?x202 ?x218 (* (+ (- 8) q) ?x2167 ?x2167) (* (- 2) (* (+ (- 8) q) ?x2167)) ?x268 (* (- 4) (* ?x2167 (+ (- 4) ?x135 ?x167 q (* (- 2) d)))) ?x581)))
 (let ((?x1807 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) r r))))
 (let ((?x1919 (* (- 2) d)))
 (let ((?x729 (+ (- 4) ?x135 ?x167 q ?x1919)))
 (let ((?x1921 (+ (- 8) q)))
 (let ((?x1808 (+ (* (- 1) (* ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x729 r)) (* ?x2167 ?x2167 ?x2167 ?x729 r r) (* ?x1921 ?x1921 ?x1921 ?x2167 ?x2167 ?x2167 ?x729 ?x729 ?x729) ?x1807)))
 (let (($x534 (not (= (* ?x1808 ?x639) 0))))
 (let ((?x800 (* 4 (* x d))))
 (let ((?x199 (* 8 r)))
 (let ((?x843 (+ ?x199 ?x170 ?x800 ?x202 ?x218 (* d d q) (* (- 2) (* d q)) ?x268 (* (- 4) (* d r)) ?x581)))
 (let (($x742 (= ?x843 0)))
 (let (($x1328 (and $x742 (or $x534 $x706 $x741 $x2087))))
 (let (($x699 (and $x742 (or $x534 $x2087 $x741 $x706))))
 (rewrite (= $x699 $x1328))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x163 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x137 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x143 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x155 (+ (* (- 1) ?x62 ?x62 ?x62 ?x143 ?x143 ?x137 r) (* ?x62 ?x62 ?x62 ?x137 r r) (* ?x62 ?x62 ?x62 ?x143 ?x143 ?x143 ?x137 ?x137 ?x137))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x141 (- (+ (- (* 8 ?x137) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x148 (+ (- (+ (- ?x141 ?x41) (* ?x62 ?x62 ?x143)) (* 2 ?x62 ?x143)) ?x49)))
 (let ((?x158 (* (+ (- ?x148 (* 4 ?x62 ?x137)) ?x53) (- ?x155 (* ?x143 ?x143 ?x143 r r)))))
 (let ((?x111 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x117 (- q 4)))
 (let ((?x129 (+ (* (- 1) ?x62 ?x62 ?x62 ?x117 ?x117 ?x111 r) (* ?x62 ?x62 ?x62 ?x111 r r) (* ?x62 ?x62 ?x62 ?x117 ?x117 ?x117 ?x111 ?x111 ?x111))))
 (let ((?x115 (- (+ (- (* 8 ?x111) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x122 (+ (- (+ (- ?x115 ?x41) (* ?x62 ?x62 ?x117)) (* 2 ?x62 ?x117)) ?x49)))
 (let ((?x132 (* (+ (- ?x122 (* 4 ?x62 ?x111)) ?x53) (- ?x129 (* ?x117 ?x117 ?x117 r r)))))
 (let ((?x105 (* q q q r r)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x87 (+ ?x58 q)))
 (let ((?x104 (+ (* (- 1) ?x62 ?x62 ?x62 q q ?x87 r) (* ?x62 ?x62 ?x62 ?x87 r r) (* ?x62 ?x62 ?x62 q q q ?x87 ?x87 ?x87))))
 (let ((?x91 (- (+ (- (* 8 ?x87) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x97 (+ (- (+ (- ?x91 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let (($x109 (not (= (* (+ (- ?x97 (* 4 ?x62 ?x87)) ?x53) (- ?x104 ?x105)) 0))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x81 (+ (* (- 1) ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 r) (* ?x62 ?x62 ?x62 ?x59 r r) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x84 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (- ?x81 (* ?x67 ?x67 ?x67 r r)))))
 (let (($x161 (or (not (= ?x84 0)) $x109 (not (= ?x132 0)) (not (= ?x158 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x161)))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1733 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x581 (* 4 (* d00 r00))))
 (let ((?x167 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1735 (+ 2 ?x57 ?x167 q d)))
 (let ((?x273 (+ 2 d)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x558 (* 4 (* ?x273 r))))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x199 (* 8 d)))
 (let ((?x1725 (* 8 q)))
 (let ((?x1090 (* (- 8) x)))
 (let ((?x1253 (* 16 r)))
 (let ((?x1393 (+ 16 ?x1253 ?x1090 ?x1725 ?x199 ?x170 ?x558 ?x202 ?x218 (* ?x273 ?x273 (+ 4 q)) (* (- 2) (* ?x273 (+ 4 q))) ?x268 (* (- 4) (* ?x273 ?x1735)) ?x581)))
 (let ((?x1410 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) r r))))
 (let ((?x357 (+ 4 q)))
 (let ((?x671 (+ (* (- 1) (* ?x273 ?x273 ?x273 ?x357 ?x357 ?x1735 r)) (* ?x273 ?x273 ?x273 ?x1735 r r) (* ?x273 ?x273 ?x273 ?x357 ?x357 ?x357 ?x1735 ?x1735 ?x1735) ?x1410)))
 (let ((?x1615 (+ ?x1253 ?x1090 ?x1725 ?x170 ?x558 ?x202 ?x218 (* ?x273 ?x273 q) (* (- 2) (* ?x273 q)) ?x268 (* (- 4) (* ?x273 (+ ?x57 ?x167 q))) ?x581)))
 (let ((?x1498 (+ ?x57 ?x167 q)))
 (let ((?x633 (+ (* (- 1) (* ?x273 ?x273 ?x273 ?x1498 r q q)) (* ?x273 ?x273 ?x273 ?x1498 r r) (* ?x273 ?x273 ?x273 ?x1498 ?x1498 ?x1498 q q q) (* (- 1) (* r r q q q)))))
 (let ((?x460 (* (- 8) d)))
 (let ((?x487 (+ (- 16) ?x1253 ?x1090 ?x1725 ?x460 ?x170 ?x558 ?x202 ?x218 (* (+ (- 4) q) ?x273 ?x273) (* (- 2) (* (+ (- 4) q) ?x273)) ?x268 (* (- 4) (* ?x273 (+ (- 2) ?x57 ?x167 q (* (- 1) d)))) ?x581)))
 (let ((?x1783 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) r r))))
 (let ((?x1178 (* (- 1) d)))
 (let ((?x1356 (+ (- 2) ?x57 ?x167 q ?x1178)))
 (let ((?x979 (+ (- 4) q)))
 (let ((?x438 (+ (* (- 1) (* ?x979 ?x979 ?x273 ?x273 ?x273 ?x1356 r)) (* ?x273 ?x273 ?x273 ?x1356 r r) (* ?x979 ?x979 ?x979 ?x273 ?x273 ?x273 ?x1356 ?x1356 ?x1356) ?x1783)))
 (let ((?x2021 (+ (- 32) ?x1253 ?x1090 ?x1725 (* (- 16) d) ?x170 ?x558 ?x202 ?x218 (* (+ (- 8) q) ?x273 ?x273) (* (- 2) (* (+ (- 8) q) ?x273)) ?x268 (* (- 4) (* ?x273 (+ (- 4) ?x57 ?x167 q (* (- 2) d)))) ?x581)))
 (let ((?x2004 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) r r))))
 (let ((?x1587 (* (- 2) d)))
 (let ((?x1618 (+ (- 4) ?x57 ?x167 q ?x1587)))
 (let ((?x1368 (+ (- 8) q)))
 (let ((?x2011 (+ (* (- 1) (* ?x1368 ?x1368 ?x273 ?x273 ?x273 ?x1618 r)) (* ?x273 ?x273 ?x273 ?x1618 r r) (* ?x1368 ?x1368 ?x1368 ?x273 ?x273 ?x273 ?x1618 ?x1618 ?x1618) ?x2004)))
 (let (($x846 (or (not (= (* ?x2011 ?x2021) 0)) (not (= (* ?x438 ?x487) 0)) (not (= (* ?x633 ?x1615) 0)) (not (= (* ?x671 ?x1393) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x590 (+ ?x30 ?x170 (* 4 (* x d)) ?x202 ?x218 ?x44 (* (- 2) (* d q)) ?x268 (* (- 4) (* d r)) ?x581)))
 (and (= ?x590 0) $x846)))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1724 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x581 (* 4 (* d00 r00))))
 (let ((?x167 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1735 (+ 2 ?x57 ?x167 q d)))
 (let ((?x273 (+ 2 d)))
 (let ((?x267 (* d00 q00)))
 (let ((?x268 (* 2 ?x267)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x218 (* (- 1) ?x41)))
 (let ((?x188 (* d00 x00)))
 (let ((?x202 (* (- 4) ?x188)))
 (let ((?x558 (* 4 (* ?x273 r))))
 (let ((?x170 (* (- 8) r00)))
 (let ((?x199 (* 8 d)))
 (let ((?x1725 (* 8 q)))
 (let ((?x1090 (* (- 8) x)))
 (let ((?x1253 (* 16 r)))
 (let ((?x1393 (+ 16 ?x1253 ?x1090 ?x1725 ?x199 ?x170 ?x558 ?x202 ?x218 (* ?x273 ?x273 (+ 4 q)) (* (- 2) (* ?x273 (+ 4 q))) ?x268 (* (- 4) (* ?x273 ?x1735)) ?x581)))
 (let ((?x1410 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) r r))))
 (let ((?x357 (+ 4 q)))
 (let ((?x671 (+ (* (- 1) (* ?x273 ?x273 ?x273 ?x357 ?x357 ?x1735 r)) (* ?x273 ?x273 ?x273 ?x1735 r r) (* ?x273 ?x273 ?x273 ?x357 ?x357 ?x357 ?x1735 ?x1735 ?x1735) ?x1410)))
 (let ((?x1615 (+ ?x1253 ?x1090 ?x1725 ?x170 ?x558 ?x202 ?x218 (* ?x273 ?x273 q) (* (- 2) (* ?x273 q)) ?x268 (* (- 4) (* ?x273 (+ ?x57 ?x167 q))) ?x581)))
 (let ((?x1498 (+ ?x57 ?x167 q)))
 (let ((?x633 (+ (* (- 1) (* ?x273 ?x273 ?x273 ?x1498 r q q)) (* ?x273 ?x273 ?x273 ?x1498 r r) (* ?x273 ?x273 ?x273 ?x1498 ?x1498 ?x1498 q q q) (* (- 1) (* r r q q q)))))
 (let ((?x460 (* (- 8) d)))
 (let ((?x487 (+ (- 16) ?x1253 ?x1090 ?x1725 ?x460 ?x170 ?x558 ?x202 ?x218 (* (+ (- 4) q) ?x273 ?x273) (* (- 2) (* (+ (- 4) q) ?x273)) ?x268 (* (- 4) (* ?x273 (+ (- 2) ?x57 ?x167 q (* (- 1) d)))) ?x581)))
 (let ((?x1783 (* (- 1) (* (+ (- 4) q) (+ (- 4) q) (+ (- 4) q) r r))))
 (let ((?x1178 (* (- 1) d)))
 (let ((?x1356 (+ (- 2) ?x57 ?x167 q ?x1178)))
 (let ((?x979 (+ (- 4) q)))
 (let ((?x438 (+ (* (- 1) (* ?x979 ?x979 ?x273 ?x273 ?x273 ?x1356 r)) (* ?x273 ?x273 ?x273 ?x1356 r r) (* ?x979 ?x979 ?x979 ?x273 ?x273 ?x273 ?x1356 ?x1356 ?x1356) ?x1783)))
 (let ((?x2021 (+ (- 32) ?x1253 ?x1090 ?x1725 (* (- 16) d) ?x170 ?x558 ?x202 ?x218 (* (+ (- 8) q) ?x273 ?x273) (* (- 2) (* (+ (- 8) q) ?x273)) ?x268 (* (- 4) (* ?x273 (+ (- 4) ?x57 ?x167 q (* (- 2) d)))) ?x581)))
 (let ((?x2004 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) r r))))
 (let ((?x1587 (* (- 2) d)))
 (let ((?x1618 (+ (- 4) ?x57 ?x167 q ?x1587)))
 (let ((?x1368 (+ (- 8) q)))
 (let ((?x2011 (+ (* (- 1) (* ?x1368 ?x1368 ?x273 ?x273 ?x273 ?x1618 r)) (* ?x273 ?x273 ?x273 ?x1618 r r) (* ?x1368 ?x1368 ?x1368 ?x273 ?x273 ?x273 ?x1618 ?x1618 ?x1618) ?x2004)))
 (let (($x846 (or (not (= (* ?x2011 ?x2021) 0)) (not (= (* ?x438 ?x487) 0)) (not (= (* ?x633 ?x1615) 0)) (not (= (* ?x671 ?x1393) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x590 (+ ?x30 ?x170 (* 4 (* x d)) ?x202 ?x218 ?x44 (* (- 2) (* d q)) ?x268 (* (- 4) (* d r)) ?x581)))
 (let (($x738 (and (= ?x590 0) $x846)))
 (let ((?x137 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x143 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x155 (+ (* (- 1) ?x62 ?x62 ?x62 ?x143 ?x143 ?x137 r) (* ?x62 ?x62 ?x62 ?x137 r r) (* ?x62 ?x62 ?x62 ?x143 ?x143 ?x143 ?x137 ?x137 ?x137))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x141 (- (+ (- (* 8 ?x137) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x148 (+ (- (+ (- ?x141 ?x41) (* ?x62 ?x62 ?x143)) (* 2 ?x62 ?x143)) ?x49)))
 (let ((?x158 (* (+ (- ?x148 (* 4 ?x62 ?x137)) ?x53) (- ?x155 (* ?x143 ?x143 ?x143 r r)))))
 (let ((?x111 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x117 (- q 4)))
 (let ((?x129 (+ (* (- 1) ?x62 ?x62 ?x62 ?x117 ?x117 ?x111 r) (* ?x62 ?x62 ?x62 ?x111 r r) (* ?x62 ?x62 ?x62 ?x117 ?x117 ?x117 ?x111 ?x111 ?x111))))
 (let ((?x115 (- (+ (- (* 8 ?x111) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x122 (+ (- (+ (- ?x115 ?x41) (* ?x62 ?x62 ?x117)) (* 2 ?x62 ?x117)) ?x49)))
 (let ((?x132 (* (+ (- ?x122 (* 4 ?x62 ?x111)) ?x53) (- ?x129 (* ?x117 ?x117 ?x117 r r)))))
 (let ((?x105 (* q q q r r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x87 (+ ?x58 q)))
 (let ((?x104 (+ (* (- 1) ?x62 ?x62 ?x62 q q ?x87 r) (* ?x62 ?x62 ?x62 ?x87 r r) (* ?x62 ?x62 ?x62 q q q ?x87 ?x87 ?x87))))
 (let ((?x91 (- (+ (- (* 8 ?x87) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x97 (+ (- (+ (- ?x91 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let (($x109 (not (= (* (+ (- ?x97 (* 4 ?x62 ?x87)) ?x53) (- ?x104 ?x105)) 0))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x81 (+ (* (- 1) ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 r) (* ?x62 ?x62 ?x62 ?x59 r r) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x84 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (- ?x81 (* ?x67 ?x67 ?x67 r r)))))
 (let (($x161 (or (not (= ?x84 0)) $x109 (not (= ?x132 0)) (not (= ?x158 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x162 (and (= ?x54 0) $x161)))
 (rewrite (= $x162 $x738))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x696 (trans (quant-intro (proof-bind ?x1724) (= $x163 $x1733)) (elim-unused (= $x1733 $x700)) (= $x163 $x700))))
 (let ((@x27 (asserted $x163)))
 (let ((@x629 (mp (mp @x27 @x696 $x700) (quant-intro (proof-bind ?x730) (= $x700 $x517)) $x517)))
 (let ((@x604 (mp (mp @x629 (rewrite (= $x517 $x517)) $x517) (quant-intro (proof-bind ?x924) (= $x517 $x335)) $x335)))
 (let ((@x1693 (mp (mp~ @x604 (sk (~ $x335 $x2108)) $x2108) (rewrite (= $x2108 $x682)) $x682)))
 (let ((@x1222 (and-elim @x1693 $x2006)))
 (let ((@x1310 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2006) $x1850)) @x1222 $x1850)))
 (let (($x890 (<= ?x1641 0)))
 (let ((@x1530 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2006) $x890)) @x1222 $x890)))
 (let (($x778 (not (<= ?x1449 0))))
 (let (($x1544 (<= ?x1639 0)))
 (let (($x886 (>= ?x1639 0)))
 (let ((@x1027 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2105 (not $x1544) (not $x886))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x886)) @x1530 @x1310 false) $x886) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1544)) @x1530 @x1310 false) $x1544) $x2105)))
 (let (($x557 (>= ?x950 0)))
 (let (($x1737 (<= ?x950 0)))
 (let ((@x1757 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x483 (not $x1737) (not $x557))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1737)) @x1530 @x1310 false) $x1737) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x557)) @x1530 @x1310 false) $x557) $x483)))
 (let (($x962 (>= ?x1337 0)))
 (let (($x1081 (<= ?x1337 0)))
 (let ((@x203 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x664 (not $x1081) (not $x962))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1081)) @x1530 @x1310 false) $x1081) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x962)) @x1530 @x1310 false) $x962) $x664)))
 (let ((@x330 (unit-resolution (unit-resolution (and-elim @x1693 $x390) @x203 @x1757 (or $x392 $x1758)) @x1027 $x1758)))
 (let (($x1079 (>= ?x1449 0)))
 (let ((@x1612 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2155 $x778 (not $x1079))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1079)) @x1530 @x1310 false) $x1079) @x330 $x778)))
 ((_ th-lemma arith farkas 1 1 1) @x1612 @x1530 @x1310 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        74
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1088
 :arith-nonlinear-bounds    36
 :arith-num-rows            14
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 94
 :arith-tableau-max-rows    14
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                19.85
 :memory                    19.27
 :mk-bool-var               15
 :mk-clause                 20
 :num-allocs                620472
 :num-checks                1
 :propagations              36
 :rlimit-count              10048
 :time                      0.01
 :total-time                0.03)
