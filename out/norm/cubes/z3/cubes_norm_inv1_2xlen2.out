unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x130 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x305 (<= ?x130 (- 6))))
 (let (($x101 (= ?x130 (- 6))))
 (let ((?x174 (+ c!3 k!2)))
 (let ((?x621 (+ k!2 m!1)))
 (let ((?x393 (+ 6 m!1)))
 (let ((?x559 (+ 1 n!0)))
 (let ((?x585 (* ?x559 ?x559 ?x393 ?x393 ?x393 ?x393 ?x621 ?x621 ?x621 ?x621 ?x621 ?x174 ?x174 ?x174)))
 (let ((?x234 (* (- 6) ?x585)))
 (let ((?x558 (* ?x393 ?x393 ?x393 ?x393 ?x393 ?x393 ?x621 ?x621 ?x621 ?x621 ?x174 ?x174)))
 (let ((?x515 (* ?x559 ?x559 ?x559 ?x393 ?x393 ?x393 ?x393 ?x621 ?x621 ?x621 ?x621 ?x621 ?x174 ?x174 ?x174)))
 (let ((?x446 (* (- 6) ?x515)))
 (let ((?x512 (* ?x559 ?x393 ?x393 ?x393 ?x393 ?x393 ?x393 ?x621 ?x621 ?x621 ?x621 ?x174 ?x174 ?x174)))
 (let ((?x253 (* (- 6) ?x512)))
 (let ((?x521 (* (- 6) (* ?x559 ?x559 ?x393 ?x393 ?x393 ?x621 ?x621 ?x621 ?x621 ?x621 ?x174 ?x174))))
 (let ((?x233 (* ?x559 ?x559 ?x393 ?x393 ?x393 ?x393 ?x393 ?x621 ?x621 ?x621 ?x621 ?x621 ?x174 ?x174 ?x174)))
 (let ((?x247 (* (- 6) (* ?x559 ?x393 ?x393 ?x393 ?x621 ?x621 ?x621 ?x621 ?x621 ?x174 ?x174))))
 (let ((?x239 (* (- 6) (* ?x393 ?x393 ?x393 ?x393 ?x393 ?x621 ?x621 ?x621 ?x621 ?x174 ?x174))))
 (let ((?x179 (* ?x559 ?x559 ?x393 ?x393 ?x393 ?x393 ?x393 ?x393 ?x621 ?x621 ?x621 ?x621 ?x174 ?x174 ?x174)))
 (let ((?x143 (* (- 6) ?x179)))
 (let ((?x248 (* (- 6) (* ?x559 ?x393 ?x393 ?x393 ?x393 ?x393 ?x621 ?x621 ?x621 ?x621 ?x174 ?x174))))
 (let ((?x164 (* ?x559 ?x393 ?x393 ?x393 ?x393 ?x393 ?x393 ?x393 ?x621 ?x621 ?x621 ?x621 ?x174 ?x174 ?x174)))
 (let ((?x154 (* ?x559 ?x393 ?x393 ?x393 ?x393 ?x621 ?x621 ?x621 ?x621 ?x621 ?x174 ?x174)))
 (let ((?x549 (+ ?x154 ?x164 ?x248 ?x143 ?x239 ?x247 ?x233 ?x521 ?x253 ?x446 ?x558 ?x234)))
 (let (($x778 (= ?x549 0)))
 (let (($x542 (not $x778)))
 (let (($x128 (= (+ (* 3 n!0) (* 3 (* n!0 n!0)) (* (- 1) k!2)) (- 1))))
 (let (($x254 (= (+ (* 3 c!3) (* (- 2) n!0) (* (- 1) (* n!0 k!2)) k!2) 1)))
 (let ((?x738 (* (- 1) (* k!2 k!2))))
 (let ((?x401 (* 5 k!2)))
 (let ((?x560 (* 9 (* c!3 n!0))))
 (let ((?x743 (* (- 9) n!0)))
 (let ((?x631 (* 18 c!3)))
 (let (($x796 (and $x101 (= (+ ?x631 ?x743 ?x560 ?x401 ?x738) 4) $x254 $x128 $x542)))
 (let (($x675 (= (+ ?x164 ?x154 ?x143 ?x248 ?x558 ?x239 ?x234 ?x247 ?x446 ?x521 ?x233 ?x253) 0)))
 (let (($x735 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x781 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x631 ?x401 ?x743 ?x738 ?x560) 4) $x735 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not $x675))))
 (let (($x395 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x318 (+ 1 n)))
 (let ((?x790 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x658 (* (- 6) ?x790)))
 (let ((?x669 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x615 (* (- 6) ?x580)))
 (let ((?x541 (* ?x318 ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x433 (* (- 6) ?x541)))
 (let ((?x452 (* ?x318 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x410 (* (- 6) ?x452)))
 (let ((?x449 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x516 (* (- 6) ?x449)))
 (let ((?x258 (* ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x274 (* (- 6) ?x258)))
 (let ((?x256 (* ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x243 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x244 (* (- 6) ?x243)))
 (let ((?x209 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x104 (* (- 6) ?x209)))
 (let ((?x167 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x158 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let (($x153 (= (+ ?x158 ?x167 ?x104 ?x244 ?x256 ?x274 ?x516 ?x410 ?x433 ?x615 ?x669 ?x658) 0)))
 (let (($x307 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x269 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x217 (= (+ ?x40 ?x44 ?x219 ?x220 (* 9 (* c n))) 4)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 $x217 $x269 $x307 (not $x153)))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x146 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x318 (+ 1 n)))
 (let ((?x669 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x449 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x541 (* ?x318 ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x790 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x452 (* ?x318 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x209 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x167 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x158 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x258 (* ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x256 (* ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x243 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x139 (+ (* 6 ?x243) (* (- 1) ?x256) (* 6 ?x258) (* (- 1) ?x158) (* (- 1) ?x167) (* 6 ?x209) (* 6 ?x452) (* 6 ?x580) (* 6 ?x790) (* 6 ?x541) (* 6 ?x449) (* (- 1) ?x669))))
 (let (($x313 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x250 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x219 ?x220) 4) $x250 $x313 (not (= ?x139 0)))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x121 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x318 (+ 1 n)))
 (let ((?x790 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x658 (* (- 6) ?x790)))
 (let ((?x669 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x615 (* (- 6) ?x580)))
 (let ((?x541 (* ?x318 ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x433 (* (- 6) ?x541)))
 (let ((?x452 (* ?x318 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x410 (* (- 6) ?x452)))
 (let ((?x449 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x516 (* (- 6) ?x449)))
 (let ((?x258 (* ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x274 (* (- 6) ?x258)))
 (let ((?x256 (* ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x243 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x244 (* (- 6) ?x243)))
 (let ((?x209 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x104 (* (- 6) ?x209)))
 (let ((?x167 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x158 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let (($x153 (= (+ ?x158 ?x167 ?x104 ?x244 ?x256 ?x274 ?x516 ?x410 ?x433 ?x615 ?x669 ?x658) 0)))
 (let (($x307 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x269 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x217 (= (+ ?x40 ?x44 ?x219 ?x220 (* 9 (* c n))) 4)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x679 (and $x133 $x217 $x269 $x307 (not $x153))))
 (let ((?x139 (+ (* 6 ?x243) (* (- 1) ?x256) (* 6 ?x258) (* (- 1) ?x158) (* (- 1) ?x167) (* 6 ?x209) (* 6 ?x452) (* 6 ?x580) (* 6 ?x790) (* 6 ?x541) (* 6 ?x449) (* (- 1) ?x669))))
 (let (($x313 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x250 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x141 (and $x133 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x219 ?x220) 4) $x250 $x313 (not (= ?x139 0)))))
 (rewrite (= $x141 $x679))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x264 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x318 (+ 1 n)))
 (let ((?x669 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x449 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x516 (* (- 6) ?x449)))
 (let ((?x541 (* ?x318 ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x433 (* (- 6) ?x541)))
 (let ((?x790 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x658 (* (- 6) ?x790)))
 (let ((?x580 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x615 (* (- 6) ?x580)))
 (let ((?x452 (* ?x318 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x410 (* (- 6) ?x452)))
 (let ((?x209 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x104 (* (- 6) ?x209)))
 (let ((?x167 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x158 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x258 (* ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x274 (* (- 6) ?x258)))
 (let ((?x256 (* ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x243 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x244 (* (- 6) ?x243)))
 (let (($x696 (= (+ ?x244 ?x256 ?x274 ?x158 ?x167 ?x104 ?x410 ?x615 ?x658 ?x433 ?x516 ?x669) 0)))
 (let (($x313 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x625 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x798 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 (= ?x798 (- 4)) $x625 $x313 (not $x696))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x280 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x318 (+ 1 n)))
 (let ((?x669 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x449 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x541 (* ?x318 ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x790 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x452 (* ?x318 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x209 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x167 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x158 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x258 (* ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x256 (* ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x243 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x139 (+ (* 6 ?x243) (* (- 1) ?x256) (* 6 ?x258) (* (- 1) ?x158) (* (- 1) ?x167) (* 6 ?x209) (* 6 ?x452) (* 6 ?x580) (* 6 ?x790) (* 6 ?x541) (* 6 ?x449) (* (- 1) ?x669))))
 (let (($x313 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x250 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x141 (and $x133 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x219 ?x220) 4) $x250 $x313 (not (= ?x139 0)))))
 (let ((?x516 (* (- 6) ?x449)))
 (let ((?x433 (* (- 6) ?x541)))
 (let ((?x658 (* (- 6) ?x790)))
 (let ((?x615 (* (- 6) ?x580)))
 (let ((?x410 (* (- 6) ?x452)))
 (let ((?x104 (* (- 6) ?x209)))
 (let ((?x274 (* (- 6) ?x258)))
 (let ((?x244 (* (- 6) ?x243)))
 (let (($x696 (= (+ ?x244 ?x256 ?x274 ?x158 ?x167 ?x104 ?x410 ?x615 ?x658 ?x433 ?x516 ?x669) 0)))
 (let (($x625 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x798 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x242 (and $x133 (= ?x798 (- 4)) $x625 $x313 (not $x696))))
 (rewrite (= $x242 $x141))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x98 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x92 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x85 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x84 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x83 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x82 (* 6 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x80 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x77 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x29 (- 6)))
 (let ((?x72 (* ?x29 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x74 (+ ?x72 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x76 (- ?x74 (* 6 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x79 (+ ?x76 ?x77 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x87 (- (- ?x79 ?x80) (* 6 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71))))
 (let (($x96 (or (not (= (+ (- (- (- (- ?x87 ?x82) ?x83) ?x84) ?x85) ?x92) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* ?x29 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x96)))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x252 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x318 (+ 1 n)))
 (let ((?x669 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x449 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x516 (* (- 6) ?x449)))
 (let ((?x541 (* ?x318 ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x433 (* (- 6) ?x541)))
 (let ((?x790 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x658 (* (- 6) ?x790)))
 (let ((?x580 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x615 (* (- 6) ?x580)))
 (let ((?x452 (* ?x318 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x410 (* (- 6) ?x452)))
 (let ((?x209 (* ?x318 ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x104 (* (- 6) ?x209)))
 (let ((?x167 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x158 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x258 (* ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x274 (* (- 6) ?x258)))
 (let ((?x256 (* ?x315 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x243 (* ?x318 ?x315 ?x315 ?x315 ?x315 ?x315 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x244 (* (- 6) ?x243)))
 (let (($x696 (= (+ ?x244 ?x256 ?x274 ?x158 ?x167 ?x104 ?x410 ?x615 ?x658 ?x433 ?x516 ?x669) 0)))
 (let (($x313 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x625 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x798 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x242 (and $x133 (= ?x798 (- 4)) $x625 $x313 (not $x696))))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x92 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x85 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x84 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x83 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x82 (* 6 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x80 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x77 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x29 (- 6)))
 (let ((?x72 (* ?x29 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x74 (+ ?x72 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x76 (- ?x74 (* 6 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x79 (+ ?x76 ?x77 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x87 (- (- ?x79 ?x80) (* 6 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71))))
 (let (($x96 (or (not (= (+ (- (- (- (- ?x87 ?x82) ?x83) ?x84) ?x85) ?x92) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x97 (and (= (- (+ (* ?x29 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x96)))
 (rewrite (= $x97 $x242)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x99 (asserted $x98)))
 (let ((@x575 (mp (mp @x99 (quant-intro (proof-bind ?x252) (= $x98 $x264)) $x264) (rewrite (= $x264 $x264)) $x264)))
 (let ((@x579 (mp (mp @x575 (quant-intro (proof-bind ?x280) (= $x264 $x146)) $x146) (quant-intro (proof-bind ?x121) (= $x146 $x395)) $x395)))
 (let ((@x780 (mp (mp~ @x579 (sk (~ $x395 $x781)) $x781) (rewrite (= $x781 $x796)) $x796)))
 (let ((@x550 (and-elim @x780 $x101)))
 (let ((@x617 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x101) $x305)) @x550 $x305)))
 (let (($x651 (>= ?x130 (- 6))))
 (let ((@x159 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x101) $x651)) @x550 $x651)))
 (let (($x497 (not (<= ?x549 0))))
 (let (($x188 (>= ?x549 0)))
 (let ((@x168 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x778 $x497 (not $x188))) (and-elim @x780 $x542) (or $x497 (not $x188)))))
 (let ((@x319 (unit-resolution @x168 (lemma ((_ th-lemma arith) (hypothesis (not $x188)) @x159 @x617 false) $x188) $x497)))
 ((_ th-lemma arith) @x319 @x159 @x617 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        13
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           1
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             223
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             1
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 40
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.73
 :memory                    3.21
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1292864
 :num-checks                1
 :propagations              11
 :rlimit-count              5303
 :time                      0.02
 :total-time                0.03)
