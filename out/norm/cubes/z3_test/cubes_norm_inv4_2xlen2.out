unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x113 (* (- 1) k!2)))
 (let ((?x152 (+ (* 3 n!0) ?x113 (* 3 (* n!0 n!0)))))
 (let (($x755 (<= ?x152 (- 1))))
 (let (($x163 (= ?x152 (- 1))))
 (let ((?x475 (+ k!2 c!3)))
 (let ((?x411 (+ m!1 k!2)))
 (let ((?x766 (+ 6 m!1)))
 (let ((?x785 (+ 1 n!0)))
 (let ((?x831 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x411 ?x411 ?x411 ?x411 ?x411 ?x475 ?x475 ?x475 ?x475)))
 (let ((?x826 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x411 ?x411 ?x411 ?x411 ?x475 ?x475)))
 (let ((?x754 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x411 ?x411 ?x411 ?x411 ?x411 ?x411 ?x475 ?x475 ?x475 ?x475)))
 (let ((?x737 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x411 ?x411 ?x411 ?x475 ?x475 ?x475)))
 (let ((?x298 (* (- 3) (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x411 ?x475))))
 (let ((?x553 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x411 ?x411 ?x411 ?x411 ?x411 ?x475 ?x475 ?x475 ?x475)))
 (let ((?x502 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x411 ?x411 ?x411 ?x475 ?x475 ?x475)))
 (let ((?x334 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x411 ?x411 ?x411 ?x475 ?x475)))
 (let ((?x182 (* (- 3) (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x411 ?x475))))
 (let ((?x295 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x411 ?x411 ?x411 ?x475 ?x475 ?x475)))
 (let ((?x257 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x411 ?x411 ?x411 ?x475 ?x475)))
 (let ((?x207 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x411 ?x411 ?x411 ?x411 ?x475 ?x475 ?x475)))
 (let ((?x162 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x411 ?x411 ?x411 ?x411 ?x411 ?x475 ?x475 ?x475 ?x475)))
 (let ((?x155 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x411 ?x411 ?x411 ?x475 ?x475)))
 (let ((?x749 (+ (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x411 ?x411 ?x475) (* (- 1) ?x155) (* (- 3) ?x162) ?x207 (* (- 3) ?x257) (* (- 1) ?x295) ?x182 (* (- 3) ?x334) (* (- 3) ?x502) (* (- 3) ?x553) ?x298 (* (- 1) (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x411 ?x475)) (* (- 3) ?x737) ?x754 ?x826 (* (- 1) ?x831))))
 (let (($x748 (= ?x749 0)))
 (let (($x743 (not $x748)))
 (let ((?x135 (+ (* 2 n!0) ?x113 (* (- 3) c!3) (* n!0 k!2))))
 (let (($x346 (= ?x135 (- 1))))
 (let ((?x487 (* (- 1) (* k!2 k!2))))
 (let ((?x431 (* 18 c!3)))
 (let ((?x180 (* 5 k!2)))
 (let ((?x483 (* (- 9) n!0)))
 (let ((?x193 (+ (* 9 (* n!0 c!3)) ?x483 ?x180 ?x431 ?x487)))
 (let (($x177 (= ?x193 4)))
 (let ((?x558 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x491 (= ?x558 (- 6))))
 (let (($x187 (and $x491 $x177 $x346 $x163 $x743)))
 (let ((?x239 (+ c!3 k!2)))
 (let ((?x226 (+ k!2 m!1)))
 (let ((?x215 (* 3 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x226 ?x239))))
 (let ((?x213 (* 3 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x226 ?x239))))
 (let ((?x212 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x226 ?x226 ?x226 ?x226 ?x226 ?x226 ?x239 ?x239 ?x239 ?x239)))
 (let ((?x141 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x226 ?x226 ?x226 ?x226 ?x239 ?x239)))
 (let ((?x138 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x226 ?x226 ?x226 ?x239 ?x239 ?x239)))
 (let ((?x276 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x226 ?x226 ?x226 ?x239 ?x239)))
 (let ((?x263 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x226 ?x226 ?x226 ?x226 ?x226 ?x239 ?x239 ?x239 ?x239)))
 (let ((?x264 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x226 ?x226 ?x226 ?x226 ?x226 ?x239 ?x239 ?x239 ?x239)))
 (let ((?x586 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x226 ?x226 ?x226 ?x226 ?x239 ?x239 ?x239)))
 (let ((?x545 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x226 ?x226 ?x226 ?x239 ?x239 ?x239)))
 (let ((?x273 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x226 ?x226 ?x226 ?x239 ?x239)))
 (let ((?x250 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x226 ?x226 ?x226 ?x239 ?x239)))
 (let ((?x240 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x226 ?x226 ?x226 ?x239 ?x239 ?x239)))
 (let ((?x242 (* (- 1) (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x226 ?x226 ?x239))))
 (let ((?x267 (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x226 ?x226 ?x226 ?x226 ?x226 ?x239 ?x239 ?x239 ?x239)))
 (let ((?x217 (+ (* 3 ?x267) ?x242 (* 3 ?x240) ?x250 (* 3 ?x273) ?x545 (* (- 1) ?x586) ?x264 (* 3 ?x263) (* ?x785 ?x785 ?x785 ?x785 ?x785 ?x766 ?x766 ?x766 ?x226 ?x239) (* 3 ?x276) (* 3 ?x138) (* (- 1) ?x141) (* (- 1) ?x212) ?x213 ?x215)))
 (let (($x279 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x432 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x431 ?x180 ?x483 ?x487 (* 9 (* c!3 n!0))) 4) $x279 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x217 0)))))
 (let (($x585 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x314 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x827 (* 3 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x68))))
 (let ((?x818 (* 3 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x68))))
 (let ((?x801 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x793 (* (- 1) ?x801)))
 (let ((?x782 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x774 (* (- 1) ?x782)))
 (let ((?x763 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x513 (* 3 ?x763)))
 (let ((?x758 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x759 (* 3 ?x758)))
 (let ((?x750 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x68)))
 (let ((?x745 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* 3 ?x745)))
 (let ((?x659 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x657 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x134 (* (- 1) ?x657)))
 (let ((?x592 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x500 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x507 (* 3 ?x500)))
 (let ((?x499 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x494 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x584 (* 3 ?x494)))
 (let ((?x436 (* (- 1) (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x68))))
 (let ((?x128 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x129 (* 3 ?x128)))
 (let ((?x591 (+ ?x129 ?x436 ?x584 ?x499 ?x507 ?x592 ?x134 ?x659 ?x742 ?x750 ?x759 ?x513 ?x774 ?x793 ?x818 ?x827)))
 (let (($x306 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x268 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x220 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x216 (= ?x220 4)))
 (let (($x132 (= (+ m (* (- 6) n)) 6)))
 (and $x132 $x216 $x268 $x306 (not (= ?x591 0)))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x554 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x314 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x745 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* 3 ?x745)))
 (let ((?x750 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x68)))
 (let ((?x758 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x759 (* 3 ?x758)))
 (let ((?x500 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x507 (* 3 ?x500)))
 (let ((?x499 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x782 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x774 (* (- 1) ?x782)))
 (let ((?x801 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x793 (* (- 1) ?x801)))
 (let ((?x818 (* 3 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x68))))
 (let ((?x827 (* 3 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x68))))
 (let ((?x763 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x513 (* 3 ?x763)))
 (let ((?x592 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x494 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x584 (* 3 ?x494)))
 (let ((?x436 (* (- 1) (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x68))))
 (let ((?x657 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x134 (* (- 1) ?x657)))
 (let ((?x659 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x128 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x129 (* 3 ?x128)))
 (let ((?x734 (+ ?x129 ?x659 ?x134 ?x436 ?x584 ?x592 ?x513 ?x827 ?x818 ?x793 ?x774 ?x499 ?x507 ?x759 ?x750 ?x742)))
 (let (($x112 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x158 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x304 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x132 (= (+ m (* (- 6) n)) 6)))
 (and $x132 (= ?x304 (- 4)) $x158 $x112 (not (= ?x734 0))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x497 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x314 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x827 (* 3 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x68))))
 (let ((?x818 (* 3 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x68))))
 (let ((?x801 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x793 (* (- 1) ?x801)))
 (let ((?x782 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x774 (* (- 1) ?x782)))
 (let ((?x763 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x513 (* 3 ?x763)))
 (let ((?x758 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x759 (* 3 ?x758)))
 (let ((?x750 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x68)))
 (let ((?x745 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* 3 ?x745)))
 (let ((?x659 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x657 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x134 (* (- 1) ?x657)))
 (let ((?x592 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x500 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x507 (* 3 ?x500)))
 (let ((?x499 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x494 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x584 (* 3 ?x494)))
 (let ((?x436 (* (- 1) (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x68))))
 (let ((?x128 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x129 (* 3 ?x128)))
 (let ((?x591 (+ ?x129 ?x436 ?x584 ?x499 ?x507 ?x592 ?x134 ?x659 ?x742 ?x750 ?x759 ?x513 ?x774 ?x793 ?x818 ?x827)))
 (let (($x306 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x268 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x220 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x216 (= ?x220 4)))
 (let (($x132 (= (+ m (* (- 6) n)) 6)))
 (let (($x583 (and $x132 $x216 $x268 $x306 (not (= ?x591 0)))))
 (let ((?x734 (+ ?x129 ?x659 ?x134 ?x436 ?x584 ?x592 ?x513 ?x827 ?x818 ?x793 ?x774 ?x499 ?x507 ?x759 ?x750 ?x742)))
 (let (($x112 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x158 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x304 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x127 (and $x132 (= ?x304 (- 4)) $x158 $x112 (not (= ?x734 0)))))
 (rewrite (= $x127 $x583))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x99 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x93 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x91 (* 3 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x90 (* 3 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x89 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x86 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x85 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x83 (* 3 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x81 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x80 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x79 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x75 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x73 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x72 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x78 (- (- (+ ?x72 ?x73) ?x75) (* ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x84 (+ ?x78 ?x79 ?x80 ?x81 (* 3 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71) ?x83)))
 (let ((?x94 (+ (- (- ?x84 ?x85) ?x86) ?x89 ?x90 ?x91 (* ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71) ?x93)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x94 0))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x666 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x314 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x745 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* 3 ?x745)))
 (let ((?x750 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x68)))
 (let ((?x758 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x759 (* 3 ?x758)))
 (let ((?x500 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x507 (* 3 ?x500)))
 (let ((?x499 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x782 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x774 (* (- 1) ?x782)))
 (let ((?x801 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x793 (* (- 1) ?x801)))
 (let ((?x818 (* 3 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x68))))
 (let ((?x827 (* 3 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x68))))
 (let ((?x763 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x513 (* 3 ?x763)))
 (let ((?x592 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x494 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x584 (* 3 ?x494)))
 (let ((?x436 (* (- 1) (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x314 ?x69 ?x69 ?x68))))
 (let ((?x657 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x134 (* (- 1) ?x657)))
 (let ((?x659 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x128 (* ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x317 ?x314 ?x314 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x129 (* 3 ?x128)))
 (let ((?x734 (+ ?x129 ?x659 ?x134 ?x436 ?x584 ?x592 ?x513 ?x827 ?x818 ?x793 ?x774 ?x499 ?x507 ?x759 ?x750 ?x742)))
 (let (($x112 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x158 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x304 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x132 (= (+ m (* (- 6) n)) 6)))
 (let (($x127 (and $x132 (= ?x304 (- 4)) $x158 $x112 (not (= ?x734 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x93 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x91 (* 3 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x90 (* 3 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x89 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x86 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x85 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x83 (* 3 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x81 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x80 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x79 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x75 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x73 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x72 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x78 (- (- (+ ?x72 ?x73) ?x75) (* ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x84 (+ ?x78 ?x79 ?x80 ?x81 (* 3 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71) ?x83)))
 (let ((?x94 (+ (- (- ?x84 ?x85) ?x86) ?x89 ?x90 ?x91 (* ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71) ?x93)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x98 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x94 0))))))
 (rewrite (= $x98 $x127))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x100 (asserted $x99)))
 (let ((@x765 (mp (mp @x100 (quant-intro (proof-bind ?x666) (= $x99 $x554)) $x554) (rewrite (= $x554 $x554)) $x554)))
 (let ((@x480 (mp~ (mp @x765 (quant-intro (proof-bind ?x497) (= $x554 $x585)) $x585) (sk (~ $x585 $x432)) $x432)))
 (let ((@x142 (mp @x480 (rewrite (= $x432 $x187)) $x187)))
 (let ((@x658 (and-elim @x142 $x163)))
 (let ((@x104 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x163) $x755)) @x658 $x755)))
 (let (($x752 (>= ?x152 (- 1))))
 (let ((@x337 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x163) $x752)) @x658 $x752)))
 (let (($x421 (<= ?x193 4)))
 (let ((@x106 (and-elim @x142 $x177)))
 (let ((@x293 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x177) $x421)) @x106 $x421)))
 (let (($x508 (>= ?x193 4)))
 (let ((@x422 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x177) $x508)) @x106 $x508)))
 (let (($x762 (<= ?x558 (- 6))))
 (let ((@x202 (and-elim @x142 $x491)))
 (let ((@x505 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x491) $x762)) @x202 $x762)))
 (let (($x149 (>= ?x558 (- 6))))
 (let ((@x719 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x491) $x149)) @x202 $x149)))
 (let (($x819 (<= ?x135 (- 1))))
 (let ((@x109 (and-elim @x142 $x346)))
 (let ((@x118 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x346) $x819)) @x109 $x819)))
 (let (($x820 (>= ?x135 (- 1))))
 (let ((@x179 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x346) $x820)) @x109 $x820)))
 (let (($x175 (not (<= ?x749 0))))
 (let (($x589 (>= ?x749 0)))
 (let ((@x549 ((_ th-lemma arith) (hypothesis (not $x589)) @x337 @x104 @x719 @x505 @x337 @x104 @x337 @x104 @x179 @x118 @x337 @x104 @x719 @x505 @x422 @x293 @x337 @x104 false)))
 (let ((@x744 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x748 $x175 (not $x589))) (and-elim @x142 $x743) (or $x175 (not $x589)))))
 ((_ th-lemma arith) (unit-resolution @x744 (lemma @x549 $x589) $x175) @x337 @x104 @x719 @x505 @x337 @x104 @x337 @x104 @x179 @x118 @x337 @x104 @x719 @x505 @x422 @x293 @x337 @x104 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        13
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             263
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 45
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                19.94
 :memory                    19.34
 :mk-bool-var               17
 :mk-clause                 16
 :num-allocs                1043610
 :num-checks                1
 :propagations              11
 :rlimit-count              21581
 :time                      0.02
 :total-time                0.04)
