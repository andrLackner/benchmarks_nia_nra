unsat
((set-logic NIA)
(declare-fun x!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x689 (+ y00 x00 (* (- 1) y!0) (* (- 1) x!1))))
 (let (($x1374 (<= ?x689 0)))
 (let (($x1684 (= ?x689 0)))
 (let ((?x2542 (* x!1 x!1 x!1)))
 (let ((?x3429 (* (- 3) ?x2542)))
 (let ((?x2535 (* y!0 y!0 y!0 y!0 x!1)))
 (let ((?x2482 (+ 1 x!1)))
 (let ((?x2574 (+ (- 1) y!0)))
 (let ((?x2491 (* ?x2574 ?x2574 ?x2482 ?x2482 ?x2482 ?x2482)))
 (let ((?x2446 (* y!0 y!0)))
 (let ((?x2371 (* x!1 x!1)))
 (let ((?x250 (* (- 4) ?x2371)))
 (let ((?x2353 (* x!1 x!1 x!1 x!1)))
 (let ((?x1199 (* (- 1) ?x2353)))
 (let ((?x3426 (* (- 3) (* y!0 x!1))))
 (let ((?x3425 (* 3 (* y!0 x!1 x!1))))
 (let ((?x2134 (* y!0 y!0 y!0 x!1 x!1)))
 (let ((?x1364 (* y!0 x!1 x!1 x!1 x!1)))
 (let ((?x1359 (* y!0 y!0 x!1 x!1 x!1)))
 (let ((?x1060 (* x00 y!0 y!0 x!1 x!1 x!1)))
 (let ((?x885 (* y00 y!0 y!0 x!1 x!1 x!1)))
 (let ((?x3417 (* (- 1) (* x00 y!0 y!0 y!0 x!1))))
 (let ((?x796 (* y00 y!0 y!0)))
 (let ((?x783 (* x00 y!0 y!0)))
 (let ((?x1768 (* (- 1) (* y00 y!0 y!0 y!0 x!1))))
 (let ((?x377 (* 3 x00)))
 (let ((?x387 (* 3 y00)))
 (let ((?x3430 (+ ?x387 ?x377 (* 6 (* y!0 y!0 x!1)) (* 6 (* y00 x!1 x!1)) ?x1768 (* (- 3) (* y00 y!0)) (* 6 (* y00 y!0 y!0 x!1)) ?x783 ?x796 (* (- 9) (* x00 y!0 x!1 x!1)) (* 6 (* x00 y!0 y!0 x!1)) (* 3 (* y00 y!0 y!0 x!1 x!1)) (* 3 (* x00 y!0 y!0 x!1 x!1)) ?x3417 (* (- 2) y!0) ?x885 (* 2 (* y00 x!1 x!1 x!1)) ?x1060 (* 7 (* y00 x!1)) (* (- 3) (* x00 y!0)) (* (- 12) (* x00 y!0 x!1)) (* 7 (* x00 x!1)) ?x1359 ?x1364 (* 2 (* y!0 x!1 x!1 x!1)) (* (- 9) (* y00 y!0 x!1 x!1)) (* 6 (* x00 x!1 x!1)) (* (- 2) x!1) (* (- 3) (* y00 y!0 x!1 x!1 x!1)) ?x2134 (* (- 3) (* y!0 y!0 y!0 x!1)) ?x3425 ?x3426 ?x1199 ?x250 (* (- 12) (* y00 y!0 x!1)) (* (- 1) (* ?x2574 ?x2574 ?x2574 ?x2482 ?x2482 ?x2482)) ?x2446 (* (- 1) ?x2491) ?x2535 ?x3429 (* 2 (* x00 x!1 x!1 x!1)) (* (- 3) (* x00 y!0 x!1 x!1 x!1)))))
 (let (($x1723 (= ?x3430 0)))
 (let (($x3436 (not $x1723)))
 (let ((?x2965 (* x00 y!0 x!1 x!1 x!1)))
 (let ((?x2359 (+ 1 y!0)))
 (let ((?x2551 (+ (- 1) x!1)))
 (let ((?x2547 (* ?x2551 ?x2551 ?x2551 ?x2359 ?x2359 ?x2359)))
 (let ((?x2335 (* 4 ?x2371)))
 (let ((?x2149 (* y!0 y!0 y!0 x!1)))
 (let ((?x2130 (* y00 y!0 x!1 x!1 x!1)))
 (let ((?x1283 (+ ?x387 ?x377 (* (- 1) (* ?x2551 ?x2551 ?x2551 ?x2551 ?x2359 ?x2359)) ?x1768 (* 5 (* y00 y!0)) (* 5 ?x783) (* 5 ?x796) (* (- 3) (* x00 y!0 x!1 x!1)) (* (- 3) (* y00 y!0 y!0 x!1 x!1)) (* (- 3) (* x00 y!0 y!0 x!1 x!1)) ?x3417 (* (- 4) y!0) (* 2 (* y00 y!0 y!0 y!0)) ?x885 ?x1060 (* (- 1) (* y00 x!1)) (* 5 (* x00 y!0)) (* (- 1) (* x00 x!1)) ?x1359 ?x1364 (* (- 2) (* y!0 x!1 x!1 x!1)) (* (- 3) (* y00 y!0 x!1 x!1)) (* (- 4) x!1) ?x2130 ?x2134 ?x2149 ?x3425 ?x3426 (* (- 6) (* y!0 y!0 y!0)) ?x2353 ?x2335 (* (- 7) ?x2446) ?x2535 (* (- 2) (* y!0 y!0 y!0 y!0)) ?x3429 (* (- 1) ?x2547) ?x2965 (* 2 (* x00 y!0 y!0 y!0)))))
 (let (($x1216 (= ?x1283 0)))
 (let (($x1194 (or (not $x1216) $x3436)))
 (let (($x873 (and $x1684 $x1194)))
 (let ((?x2426 (* (- 1) (* x!1 x!1 x!1 x!1 y!0))))
 (let ((?x286 (* ?x2551 ?x2551 ?x2551 ?x2551 ?x2359 ?x2359)))
 (let ((?x197 (* (- 1) (* x!1 y!0 y!0 y!0 y!0))))
 (let ((?x2424 (* (- 1) (* x!1 x!1 x!1 y!0 y!0 x00))))
 (let ((?x2429 (* 3 ?x2542)))
 (let ((?x764 (* (- 1) (* x!1 x!1 x!1 y!0 y!0))))
 (let ((?x2490 (* x!1 y!0 y!0 y!0 y00)))
 (let ((?x2362 (* (- 3) (* x!1 x!1 y!0))))
 (let ((?x2356 (* 3 (* x!1 y!0))))
 (let ((?x2372 (* (- 1) (* x!1 x!1 y!0 y!0 y!0))))
 (let ((?x1685 (* x!1 y00)))
 (let ((?x1395 (* (- 1) (* x!1 x!1 x!1 y!0 y!0 y00))))
 (let ((?x2561 (* x!1 y!0 y!0 y!0 x00)))
 (let ((?x1332 (* x!1 x00)))
 (let ((?x3553 (* (- 3) x00)))
 (let ((?x1751 (* (- 3) y00)))
 (let ((?x2567 (+ (* 4 x!1) (* 4 y!0) ?x1751 ?x3553 ?x1332 (* (- 5) (* y!0 x00)) (* 3 (* x!1 x!1 y!0 x00)) (* (- 5) (* y!0 y!0 x00)) (* 3 (* x!1 x!1 y!0 y!0 x00)) ?x2561 (* (- 5) (* y!0 y00)) (* (- 5) (* y!0 y!0 y00)) (* 3 (* x!1 x!1 y!0 y!0 y00)) ?x1395 ?x1685 (* 3 (* x!1 x!1 y!0 y00)) (* (- 1) (* x!1 x!1 x!1 y!0 y00)) (* 7 ?x2446) (* 6 (* y!0 y!0 y!0)) (* (- 1) (* x!1 y!0 y!0 y!0)) ?x2372 ?x250 ?x2356 ?x2362 (* (- 2) (* y!0 y!0 y!0 y00)) ?x2490 ?x2547 ?x764 ?x2429 (* 2 (* x!1 x!1 x!1 y!0)) (* 2 (* y!0 y!0 y!0 y!0)) ?x2424 ?x197 ?x286 (* (- 1) (* x!1 x!1 x!1 y!0 x00)) (* (- 2) (* y!0 y!0 y!0 x00)) ?x2426 ?x1199)))
 (let ((?x2430 (* ?x2574 ?x2574 ?x2574 ?x2482 ?x2482 ?x2482)))
 (let ((?x459 (+ (* 2 x!1) (* 2 y!0) ?x1751 ?x3553 (* (- 7) ?x1332) (* (- 6) (* x!1 x!1 x00)) (* 3 (* y!0 x00)) (* 12 (* x!1 y!0 x00)) (* 9 (* x!1 x!1 y!0 x00)) (* (- 1) (* y!0 y!0 x00)) (* (- 6) (* x!1 y!0 y!0 x00)) (* (- 3) (* x!1 x!1 y!0 y!0 x00)) ?x2561 (* 3 (* y!0 y00)) (* (- 1) (* y!0 y!0 y00)) (* (- 6) (* x!1 y!0 y!0 y00)) (* (- 3) (* x!1 x!1 y!0 y!0 y00)) ?x1395 (* (- 7) ?x1685) (* (- 6) (* x!1 x!1 y00)) (* (- 2) (* x!1 x!1 x!1 y00)) (* 12 (* x!1 y!0 y00)) (* 9 (* x!1 x!1 y!0 y00)) (* 3 (* x!1 x!1 x!1 y!0 y00)) (* (- 1) ?x2446) (* 3 (* x!1 y!0 y!0 y!0)) ?x2372 ?x2335 ?x2356 ?x2362 (* (- 6) (* x!1 y!0 y!0)) ?x2490 ?x764 ?x2429 (* (- 2) (* x!1 x!1 x!1 y!0)) ?x2491 ?x2430 ?x2424 ?x197 (* (- 2) (* x!1 x!1 x!1 x00)) (* 3 (* x!1 x!1 x!1 y!0 x00)) ?x2426 ?x2353)))
 (let (($x2562 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x459 0)) (not (= ?x2567 0))))))
 (let (($x1760 (exists ((x Int) (y Int) )(! (let ((?x1863 (* x x x x)))
 (let ((?x1923 (* (- 1) ?x1863)))
 (let ((?x1835 (* x x x x y)))
 (let ((?x1922 (* (- 1) ?x1835)))
 (let ((?x1686 (* y y y x00)))
 (let ((?x3564 (* (- 2) ?x1686)))
 (let ((?x1624 (* x x x y x00)))
 (let ((?x1361 (* (- 1) ?x1624)))
 (let ((?x140 (+ 1 y)))
 (let ((?x130 (+ (- 1) x)))
 (let ((?x1422 (* ?x130 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x1302 (* x y y y y)))
 (let ((?x1369 (* (- 1) ?x1302)))
 (let ((?x1286 (* x x x y y x00)))
 (let ((?x3563 (* (- 1) ?x1286)))
 (let ((?x1414 (* 2 (* y y y y))))
 (let ((?x1040 (* x x x y)))
 (let ((?x1072 (* 2 ?x1040)))
 (let ((?x1025 (* x x x)))
 (let ((?x1935 (* 3 ?x1025)))
 (let ((?x1009 (* x x x y y)))
 (let ((?x1105 (* (- 1) ?x1009)))
 (let ((?x950 (* ?x130 ?x130 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x916 (* x y y y y00)))
 (let ((?x1487 (* (- 2) (* y y y y00))))
 (let ((?x752 (* x x y)))
 (let ((?x866 (* (- 3) ?x752)))
 (let ((?x748 (* x y)))
 (let ((?x863 (* 3 ?x748)))
 (let ((?x743 (* x x)))
 (let ((?x1930 (* (- 4) ?x743)))
 (let ((?x732 (* x x y y y)))
 (let ((?x829 (* (- 1) ?x732)))
 (let ((?x730 (* x y y y)))
 (let ((?x731 (* (- 1) ?x730)))
 (let ((?x726 (* y y y)))
 (let ((?x1413 (* 6 ?x726)))
 (let ((?x528 (* x x x y y00)))
 (let ((?x1646 (* (- 1) ?x528)))
 (let ((?x520 (* x x y y00)))
 (let ((?x1645 (* 3 ?x520)))
 (let ((?x501 (* x y00)))
 (let ((?x493 (* x x x y y y00)))
 (let ((?x593 (* (- 1) ?x493)))
 (let ((?x491 (* x x y y y00)))
 (let ((?x629 (* 3 ?x491)))
 (let ((?x479 (* y y y00)))
 (let ((?x3558 (* (- 5) ?x479)))
 (let ((?x464 (* y y00)))
 (let ((?x3557 (* (- 5) ?x464)))
 (let ((?x407 (* x y y y x00)))
 (let ((?x322 (* x x y y x00)))
 (let ((?x1394 (* 3 ?x322)))
 (let ((?x303 (* y y x00)))
 (let ((?x3556 (* (- 5) ?x303)))
 (let ((?x280 (* x x y x00)))
 (let ((?x2717 (* 3 ?x280)))
 (let ((?x258 (* y x00)))
 (let ((?x3555 (* (- 5) ?x258)))
 (let ((?x246 (* x x00)))
 (let ((?x3553 (* (- 3) x00)))
 (let ((?x1751 (* (- 3) y00)))
 (let ((?x1958 (* 4 x)))
 (let ((?x276 (+ ?x1958 (* 4 y) ?x1751 ?x3553 ?x246 ?x3555 ?x2717 ?x3556 ?x1394 ?x407 ?x3557 ?x3558 ?x629 ?x593 ?x501 ?x1645 ?x1646 (* 7 (* y y)) ?x1413 ?x731 ?x829 ?x1930 ?x863 ?x866 ?x1487 ?x916 ?x950 ?x1105 ?x1935 ?x1072 ?x1414 ?x3563 ?x1369 ?x1422 ?x1361 ?x3564 ?x1922 ?x1923)))
 (let ((?x1980 (+ 1 x)))
 (let ((?x346 (+ (- 1) y)))
 (let ((?x1244 (* ?x346 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1094 (* ?x346 ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x1147 (* (- 2) ?x1040)))
 (let ((?x763 (* x y y)))
 (let ((?x1378 (* (- 6) ?x763)))
 (let ((?x1891 (* 4 ?x743)))
 (let ((?x1270 (* 3 ?x730)))
 (let ((?x2738 (* 3 ?x528)))
 (let ((?x2737 (* 9 ?x520)))
 (let ((?x517 (* x y y00)))
 (let ((?x2736 (* 12 ?x517)))
 (let ((?x512 (* x x x y00)))
 (let ((?x2734 (* (- 2) ?x512)))
 (let ((?x504 (* x x y00)))
 (let ((?x2733 (* (- 6) ?x504)))
 (let ((?x2732 (* (- 7) ?x501)))
 (let ((?x565 (* (- 3) ?x491)))
 (let ((?x487 (* x y y y00)))
 (let ((?x2250 (* (- 6) ?x487)))
 (let ((?x480 (* (- 1) ?x479)))
 (let ((?x1116 (* 2 y)))
 (let ((?x878 (* 2 x)))
 (let ((?x371 (+ ?x878 ?x1116 ?x1751 ?x3553 (* (- 7) ?x246) (* (- 6) (* x x x00)) (* 3 ?x258) (* 12 (* x y x00)) (* 9 ?x280) (* (- 1) ?x303) (* (- 6) (* x y y x00)) (* (- 3) ?x322) ?x407 (* 3 ?x464) ?x480 ?x2250 ?x565 ?x593 ?x2732 ?x2733 ?x2734 ?x2736 ?x2737 ?x2738 (* (- 1) (* y y)) ?x1270 ?x829 ?x1891 ?x863 ?x866 ?x1378 ?x916 ?x1105 ?x1935 ?x1147 ?x1094 ?x1244 ?x3563 ?x1369 (* (- 2) (* x x x x00)) (* 3 ?x1624) ?x1922 ?x1863)))
 (let (($x138 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x138 (or (not (= ?x371 0)) (not (= ?x276 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x1732 (exists ((x Int) (y Int) )(! (let ((?x2704 (* y y y 1)))
 (let ((?x2393 (* y 1 1 1)))
 (let ((?x1883 (* y y 1 1)))
 (let ((?x1863 (* x x x x)))
 (let ((?x1923 (* (- 1) ?x1863)))
 (let ((?x1835 (* x x x x y)))
 (let ((?x1922 (* (- 1) ?x1835)))
 (let ((?x1686 (* y y y x00)))
 (let ((?x3564 (* (- 2) ?x1686)))
 (let ((?x1624 (* x x x y x00)))
 (let ((?x1361 (* (- 1) ?x1624)))
 (let ((?x1529 (* x x x 1)))
 (let ((?x1522 (* x 1 1 1)))
 (let ((?x1504 (* x x 1 1)))
 (let ((?x140 (+ 1 y)))
 (let ((?x130 (+ (- 1) x)))
 (let ((?x1422 (* ?x130 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x1302 (* x y y y y)))
 (let ((?x1369 (* (- 1) ?x1302)))
 (let ((?x1286 (* x x x y y x00)))
 (let ((?x3563 (* (- 1) ?x1286)))
 (let ((?x1414 (* 2 (* y y y y))))
 (let ((?x1040 (* x x x y)))
 (let ((?x1072 (* 2 ?x1040)))
 (let ((?x1009 (* x x x y y)))
 (let ((?x1105 (* (- 1) ?x1009)))
 (let ((?x950 (* ?x130 ?x130 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x916 (* x y y y y00)))
 (let ((?x1487 (* (- 2) (* y y y y00))))
 (let ((?x752 (* x x y)))
 (let ((?x866 (* (- 3) ?x752)))
 (let ((?x748 (* x y)))
 (let ((?x732 (* x x y y y)))
 (let ((?x829 (* (- 1) ?x732)))
 (let ((?x730 (* x y y y)))
 (let ((?x731 (* (- 1) ?x730)))
 (let ((?x712 (* y 1 y)))
 (let ((?x698 (* y y 1)))
 (let ((?x691 (* y 1)))
 (let ((?x684 (* y 1 1)))
 (let ((?x528 (* x x x y y00)))
 (let ((?x1646 (* (- 1) ?x528)))
 (let ((?x520 (* x x y y00)))
 (let ((?x1645 (* 3 ?x520)))
 (let ((?x501 (* x y00)))
 (let ((?x493 (* x x x y y y00)))
 (let ((?x593 (* (- 1) ?x493)))
 (let ((?x491 (* x x y y y00)))
 (let ((?x629 (* 3 ?x491)))
 (let ((?x479 (* y y y00)))
 (let ((?x3558 (* (- 5) ?x479)))
 (let ((?x464 (* y y00)))
 (let ((?x3557 (* (- 5) ?x464)))
 (let ((?x407 (* x y y y x00)))
 (let ((?x322 (* x x y y x00)))
 (let ((?x1394 (* 3 ?x322)))
 (let ((?x303 (* y y x00)))
 (let ((?x3556 (* (- 5) ?x303)))
 (let ((?x280 (* x x y x00)))
 (let ((?x2717 (* 3 ?x280)))
 (let ((?x258 (* y x00)))
 (let ((?x3555 (* (- 5) ?x258)))
 (let ((?x246 (* x x00)))
 (let ((?x3553 (* (- 3) x00)))
 (let ((?x1751 (* (- 3) y00)))
 (let ((?x3565 (+ (* 3 x) y ?x1751 ?x3553 ?x246 ?x3555 ?x2717 ?x3556 ?x1394 ?x407 ?x3557 ?x3558 ?x629 ?x593 ?x501 ?x1645 ?x1646 ?x684 ?x691 ?x698 ?x712 (* 2 (* y y)) (* 3 (* y y y)) ?x731 ?x829 (* (- 3) (* x x)) ?x748 ?x866 (* (- 2) (* x y y)) ?x1487 ?x916 ?x950 (* x y y 1) ?x1105 (* 2 (* x x x)) ?x1072 ?x1414 (* x 1 1 y) ?x3563 ?x1369 ?x1422 ?x1504 (* x y 1 y) ?x1522 ?x1529 (* x 1 y y) ?x1361 ?x3564 ?x1922 ?x1923 ?x1883 (* x y 1 1) (* x 1 y 1) ?x2393 ?x2704 (* x (- 1) y y) (* x x 1 y) (* x (- 1) 1 y) (* x x y 1) (* x (- 1) y 1) (* x (- 1) 1 1) (* y 1 y 1) (* y 1 1 y) (* y y 1 y) (* y 1 y y) (* x (- 1) (- 1) 1) (* x x (- 1) 1) (* x (- 1) x 1) (* x (- 1) (- 1) y) (* x x (- 1) y) (* x (- 1) x y))))
 (let ((?x1980 (+ 1 x)))
 (let ((?x346 (+ (- 1) y)))
 (let ((?x1244 (* ?x346 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1299 (* (- 1) ?x1244)))
 (let ((?x1094 (* ?x346 ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x788 (* (- 1) ?x1094)))
 (let ((?x743 (* x x)))
 (let ((?x726 (* y y y)))
 (let ((?x1426 (* (- 3) ?x464)))
 (let ((?x377 (* 3 x00)))
 (let ((?x387 (* 3 y00)))
 (let ((?x797 (* (- 1) y)))
 (let ((?x365 (+ x ?x797 ?x387 ?x377 (* 7 ?x246) (* 6 (* x x x00)) (* (- 3) ?x258) (* (- 12) (* x y x00)) (* (- 9) ?x280) ?x303 (* 6 (* x y y x00)) ?x1394 (* (- 1) ?x407) ?x1426 ?x479 (* 6 (* x y y y00)) ?x629 ?x493 (* 7 ?x501) (* 6 (* x x y00)) (* 2 (* x x x y00)) (* (- 12) (* x y y00)) (* (- 9) ?x520) (* (- 3) ?x528) ?x726 (* (- 3) ?x730) ?x732 ?x743 (* (- 1) ?x748) (* 5 ?x752) (* 6 (* x y y)) (* (- 1) ?x916) ?x1009 ?x1072 (* (- 1) (* y x 1 x)) (* (- 1) (* y (- 1) x x)) ?x788 ?x1299 ?x1286 ?x1302 (* (- 1) ?x1504) (* (- 1) (* x 1 1 x)) (* (- 1) ?x1522) (* (- 1) (* x 1 x 1)) (* (- 1) ?x1529) (* (- 1) (* x x 1 x)) (* (- 1) (* x 1 x x)) (* 2 (* x x x x00)) (* (- 3) ?x1624) (* (- 1) (* y (- 1) x 1)) (* (- 1) (* y y x 1)) (* (- 1) (* y (- 1) 1 1)) ?x1835 ?x1923 (* (- 1) ?x1883) (* (- 1) (* x 1)) (* (- 1) (* y (- 1) 1 x)) (* (- 1) (* y y 1 x)) (* (- 1) (* y 1 x 1)) (* (- 1) ?x2393) (* (- 1) (* y (- 1) (- 1) 1)) (* (- 1) (* y (- 1) y 1)) (* (- 1) (* y y (- 1) 1)) (* (- 1) ?x2704) (* (- 1) (* y (- 1) (- 1) x)) (* (- 1) (* y y (- 1) x)) (* (- 1) (* y (- 1) y x)) (* (- 1) (* y 1 1 x)) (* (- 1) (* y 1 x x)) (* (- 1) (* x 1 x)) (* (- 1) (* y x x 1)) (* (- 1) (* x x 1)) (* (- 1) (* y x 1 1)) (* (- 1) (* x 1 1)))))
 (let (($x138 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x138 (or (not (= ?x365 0)) (not (= ?x3565 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1183 (lambda ((x Int) (y Int) )(let ((?x1863 (* x x x x)))
 (let ((?x1923 (* (- 1) ?x1863)))
 (let ((?x1835 (* x x x x y)))
 (let ((?x1922 (* (- 1) ?x1835)))
 (let ((?x1686 (* y y y x00)))
 (let ((?x3564 (* (- 2) ?x1686)))
 (let ((?x1624 (* x x x y x00)))
 (let ((?x1361 (* (- 1) ?x1624)))
 (let ((?x140 (+ 1 y)))
 (let ((?x130 (+ (- 1) x)))
 (let ((?x1422 (* ?x130 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x1302 (* x y y y y)))
 (let ((?x1369 (* (- 1) ?x1302)))
 (let ((?x1286 (* x x x y y x00)))
 (let ((?x3563 (* (- 1) ?x1286)))
 (let ((?x1414 (* 2 (* y y y y))))
 (let ((?x1040 (* x x x y)))
 (let ((?x1072 (* 2 ?x1040)))
 (let ((?x1025 (* x x x)))
 (let ((?x1935 (* 3 ?x1025)))
 (let ((?x1009 (* x x x y y)))
 (let ((?x1105 (* (- 1) ?x1009)))
 (let ((?x950 (* ?x130 ?x130 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x916 (* x y y y y00)))
 (let ((?x1487 (* (- 2) (* y y y y00))))
 (let ((?x752 (* x x y)))
 (let ((?x866 (* (- 3) ?x752)))
 (let ((?x748 (* x y)))
 (let ((?x863 (* 3 ?x748)))
 (let ((?x743 (* x x)))
 (let ((?x1930 (* (- 4) ?x743)))
 (let ((?x732 (* x x y y y)))
 (let ((?x829 (* (- 1) ?x732)))
 (let ((?x730 (* x y y y)))
 (let ((?x731 (* (- 1) ?x730)))
 (let ((?x726 (* y y y)))
 (let ((?x1413 (* 6 ?x726)))
 (let ((?x528 (* x x x y y00)))
 (let ((?x1646 (* (- 1) ?x528)))
 (let ((?x520 (* x x y y00)))
 (let ((?x1645 (* 3 ?x520)))
 (let ((?x501 (* x y00)))
 (let ((?x493 (* x x x y y y00)))
 (let ((?x593 (* (- 1) ?x493)))
 (let ((?x491 (* x x y y y00)))
 (let ((?x629 (* 3 ?x491)))
 (let ((?x479 (* y y y00)))
 (let ((?x3558 (* (- 5) ?x479)))
 (let ((?x464 (* y y00)))
 (let ((?x3557 (* (- 5) ?x464)))
 (let ((?x407 (* x y y y x00)))
 (let ((?x322 (* x x y y x00)))
 (let ((?x1394 (* 3 ?x322)))
 (let ((?x303 (* y y x00)))
 (let ((?x3556 (* (- 5) ?x303)))
 (let ((?x280 (* x x y x00)))
 (let ((?x2717 (* 3 ?x280)))
 (let ((?x258 (* y x00)))
 (let ((?x3555 (* (- 5) ?x258)))
 (let ((?x246 (* x x00)))
 (let ((?x3553 (* (- 3) x00)))
 (let ((?x1751 (* (- 3) y00)))
 (let ((?x1958 (* 4 x)))
 (let ((?x276 (+ ?x1958 (* 4 y) ?x1751 ?x3553 ?x246 ?x3555 ?x2717 ?x3556 ?x1394 ?x407 ?x3557 ?x3558 ?x629 ?x593 ?x501 ?x1645 ?x1646 (* 7 (* y y)) ?x1413 ?x731 ?x829 ?x1930 ?x863 ?x866 ?x1487 ?x916 ?x950 ?x1105 ?x1935 ?x1072 ?x1414 ?x3563 ?x1369 ?x1422 ?x1361 ?x3564 ?x1922 ?x1923)))
 (let ((?x1980 (+ 1 x)))
 (let ((?x346 (+ (- 1) y)))
 (let ((?x1244 (* ?x346 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1094 (* ?x346 ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x1147 (* (- 2) ?x1040)))
 (let ((?x763 (* x y y)))
 (let ((?x1378 (* (- 6) ?x763)))
 (let ((?x1891 (* 4 ?x743)))
 (let ((?x1270 (* 3 ?x730)))
 (let ((?x2738 (* 3 ?x528)))
 (let ((?x2737 (* 9 ?x520)))
 (let ((?x517 (* x y y00)))
 (let ((?x2736 (* 12 ?x517)))
 (let ((?x512 (* x x x y00)))
 (let ((?x2734 (* (- 2) ?x512)))
 (let ((?x504 (* x x y00)))
 (let ((?x2733 (* (- 6) ?x504)))
 (let ((?x2732 (* (- 7) ?x501)))
 (let ((?x565 (* (- 3) ?x491)))
 (let ((?x487 (* x y y y00)))
 (let ((?x2250 (* (- 6) ?x487)))
 (let ((?x480 (* (- 1) ?x479)))
 (let ((?x1116 (* 2 y)))
 (let ((?x878 (* 2 x)))
 (let ((?x371 (+ ?x878 ?x1116 ?x1751 ?x3553 (* (- 7) ?x246) (* (- 6) (* x x x00)) (* 3 ?x258) (* 12 (* x y x00)) (* 9 ?x280) (* (- 1) ?x303) (* (- 6) (* x y y x00)) (* (- 3) ?x322) ?x407 (* 3 ?x464) ?x480 ?x2250 ?x565 ?x593 ?x2732 ?x2733 ?x2734 ?x2736 ?x2737 ?x2738 (* (- 1) (* y y)) ?x1270 ?x829 ?x1891 ?x863 ?x866 ?x1378 ?x916 ?x1105 ?x1935 ?x1147 ?x1094 ?x1244 ?x3563 ?x1369 (* (- 2) (* x x x x00)) (* 3 ?x1624) ?x1922 ?x1863)))
 (let (($x138 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x2143 (and $x138 (or (not (= ?x371 0)) (not (= ?x276 0))))))
 (let ((?x2704 (* y y y 1)))
 (let ((?x2393 (* y 1 1 1)))
 (let ((?x1883 (* y y 1 1)))
 (let ((?x1529 (* x x x 1)))
 (let ((?x1522 (* x 1 1 1)))
 (let ((?x1504 (* x x 1 1)))
 (let ((?x712 (* y 1 y)))
 (let ((?x698 (* y y 1)))
 (let ((?x691 (* y 1)))
 (let ((?x684 (* y 1 1)))
 (let ((?x3565 (+ (* 3 x) y ?x1751 ?x3553 ?x246 ?x3555 ?x2717 ?x3556 ?x1394 ?x407 ?x3557 ?x3558 ?x629 ?x593 ?x501 ?x1645 ?x1646 ?x684 ?x691 ?x698 ?x712 (* 2 (* y y)) (* 3 ?x726) ?x731 ?x829 (* (- 3) ?x743) ?x748 ?x866 (* (- 2) ?x763) ?x1487 ?x916 ?x950 (* x y y 1) ?x1105 (* 2 ?x1025) ?x1072 ?x1414 (* x 1 1 y) ?x3563 ?x1369 ?x1422 ?x1504 (* x y 1 y) ?x1522 ?x1529 (* x 1 y y) ?x1361 ?x3564 ?x1922 ?x1923 ?x1883 (* x y 1 1) (* x 1 y 1) ?x2393 ?x2704 (* x (- 1) y y) (* x x 1 y) (* x (- 1) 1 y) (* x x y 1) (* x (- 1) y 1) (* x (- 1) 1 1) (* y 1 y 1) (* y 1 1 y) (* y y 1 y) (* y 1 y y) (* x (- 1) (- 1) 1) (* x x (- 1) 1) (* x (- 1) x 1) (* x (- 1) (- 1) y) (* x x (- 1) y) (* x (- 1) x y))))
 (let ((?x1299 (* (- 1) ?x1244)))
 (let ((?x788 (* (- 1) ?x1094)))
 (let ((?x1426 (* (- 3) ?x464)))
 (let ((?x377 (* 3 x00)))
 (let ((?x387 (* 3 y00)))
 (let ((?x797 (* (- 1) y)))
 (let ((?x365 (+ x ?x797 ?x387 ?x377 (* 7 ?x246) (* 6 (* x x x00)) (* (- 3) ?x258) (* (- 12) (* x y x00)) (* (- 9) ?x280) ?x303 (* 6 (* x y y x00)) ?x1394 (* (- 1) ?x407) ?x1426 ?x479 (* 6 ?x487) ?x629 ?x493 (* 7 ?x501) (* 6 ?x504) (* 2 ?x512) (* (- 12) ?x517) (* (- 9) ?x520) (* (- 3) ?x528) ?x726 (* (- 3) ?x730) ?x732 ?x743 (* (- 1) ?x748) (* 5 ?x752) (* 6 ?x763) (* (- 1) ?x916) ?x1009 ?x1072 (* (- 1) (* y x 1 x)) (* (- 1) (* y (- 1) x x)) ?x788 ?x1299 ?x1286 ?x1302 (* (- 1) ?x1504) (* (- 1) (* x 1 1 x)) (* (- 1) ?x1522) (* (- 1) (* x 1 x 1)) (* (- 1) ?x1529) (* (- 1) (* x x 1 x)) (* (- 1) (* x 1 x x)) (* 2 (* x x x x00)) (* (- 3) ?x1624) (* (- 1) (* y (- 1) x 1)) (* (- 1) (* y y x 1)) (* (- 1) (* y (- 1) 1 1)) ?x1835 ?x1923 (* (- 1) ?x1883) (* (- 1) (* x 1)) (* (- 1) (* y (- 1) 1 x)) (* (- 1) (* y y 1 x)) (* (- 1) (* y 1 x 1)) (* (- 1) ?x2393) (* (- 1) (* y (- 1) (- 1) 1)) (* (- 1) (* y (- 1) y 1)) (* (- 1) (* y y (- 1) 1)) (* (- 1) ?x2704) (* (- 1) (* y (- 1) (- 1) x)) (* (- 1) (* y y (- 1) x)) (* (- 1) (* y (- 1) y x)) (* (- 1) (* y 1 1 x)) (* (- 1) (* y 1 x x)) (* (- 1) (* x 1 x)) (* (- 1) (* y x x 1)) (* (- 1) (* x x 1)) (* (- 1) (* y x 1 1)) (* (- 1) (* x 1 1)))))
 (let (($x2459 (and $x138 (or (not (= ?x365 0)) (not (= ?x3565 0))))))
 (rewrite (= $x2459 $x2143)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1298 (exists ((x Int) (y Int) )(! (let ((?x140 (+ 1 y)))
 (let ((?x130 (+ (- 1) x)))
 (let ((?x1363 (* ?x130 ?x130 ?x130 ?x130 ?x140)))
 (let ((?x797 (* (- 1) y)))
 (let ((?x862 (* (- 1) x)))
 (let ((?x2154 (* x00 ?x140 ?x140 ?x140)))
 (let ((?x505 (* y00 ?x140 ?x140 ?x140)))
 (let ((?x876 (* ?x130 ?x140 ?x140 ?x140 ?x140)))
 (let ((?x827 (* ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x682 (* ?x130 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x1697 (* y00 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x1687 (* x00 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x1351 (+ ?x1687 (* (- 1) (* x00 ?x130 ?x140 ?x140 ?x140)) ?x1697 ?x682 (* (- 1) (* y00 ?x130 ?x140 ?x140 ?x140)) (* (- 1) (* ?x130 ?x130 ?x130 ?x140 ?x140 ?x140)) ?x827 (* (- 1) (* ?x130 ?x140 ?x140 ?x140)) (* (- 1) (* ?x140 ?x140 ?x140 ?x140)) ?x876 (* (- 1) (* ?x130 ?x130 ?x130 ?x130 ?x140 ?x140)) ?x505 (* (- 1) (* y00 ?x130 ?x130 ?x130 ?x140)) (* (- 1) (* x00 ?x130 ?x130 ?x130 ?x140)) ?x2154 ?x862 y00 x00 ?x797 ?x1363)))
 (let ((?x1980 (+ 1 x)))
 (let ((?x346 (+ (- 1) y)))
 (let ((?x1339 (* ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x1106 (* x00 ?x346 ?x346 ?x346)))
 (let ((?x1386 (* y00 ?x346 ?x346 ?x346)))
 (let ((?x1094 (* ?x346 ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x788 (* (- 1) ?x1094)))
 (let ((?x2914 (* ?x346 ?x346 ?x346 ?x346 ?x1980)))
 (let ((?x1459 (* ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1244 (* ?x346 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1299 (* (- 1) ?x1244)))
 (let ((?x801 (* ?x346 ?x346 ?x346 ?x1980 ?x1980)))
 (let ((?x823 (* y00 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x820 (* x00 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x2155 (+ ?x820 (* (- 1) (* x00 ?x346 ?x346 ?x346 ?x1980)) ?x823 ?x801 (* (- 1) (* y00 ?x346 ?x346 ?x346 ?x1980)) ?x1299 ?x1459 (* (- 1) (* ?x346 ?x346 ?x346 ?x1980)) (* (- 1) (* ?x346 ?x346 ?x346 ?x346)) ?x2914 ?x788 ?x1386 (* (- 1) (* y00 ?x346 ?x1980 ?x1980 ?x1980)) (* (- 1) (* x00 ?x346 ?x1980 ?x1980 ?x1980)) ?x1106 ?x862 y00 x00 ?x797 ?x1339)))
 (let (($x1679 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x1679 (or (not (= ?x2155 0)) (not (= ?x1351 0))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1877 (lambda ((x Int) (y Int) )(let ((?x2704 (* y y y 1)))
 (let ((?x2393 (* y 1 1 1)))
 (let ((?x1883 (* y y 1 1)))
 (let ((?x1863 (* x x x x)))
 (let ((?x1923 (* (- 1) ?x1863)))
 (let ((?x1835 (* x x x x y)))
 (let ((?x1922 (* (- 1) ?x1835)))
 (let ((?x1686 (* y y y x00)))
 (let ((?x3564 (* (- 2) ?x1686)))
 (let ((?x1624 (* x x x y x00)))
 (let ((?x1361 (* (- 1) ?x1624)))
 (let ((?x1529 (* x x x 1)))
 (let ((?x1522 (* x 1 1 1)))
 (let ((?x1504 (* x x 1 1)))
 (let ((?x140 (+ 1 y)))
 (let ((?x130 (+ (- 1) x)))
 (let ((?x1422 (* ?x130 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x1302 (* x y y y y)))
 (let ((?x1369 (* (- 1) ?x1302)))
 (let ((?x1286 (* x x x y y x00)))
 (let ((?x3563 (* (- 1) ?x1286)))
 (let ((?x1414 (* 2 (* y y y y))))
 (let ((?x1040 (* x x x y)))
 (let ((?x1072 (* 2 ?x1040)))
 (let ((?x1009 (* x x x y y)))
 (let ((?x1105 (* (- 1) ?x1009)))
 (let ((?x950 (* ?x130 ?x130 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x916 (* x y y y y00)))
 (let ((?x1487 (* (- 2) (* y y y y00))))
 (let ((?x752 (* x x y)))
 (let ((?x866 (* (- 3) ?x752)))
 (let ((?x748 (* x y)))
 (let ((?x732 (* x x y y y)))
 (let ((?x829 (* (- 1) ?x732)))
 (let ((?x730 (* x y y y)))
 (let ((?x731 (* (- 1) ?x730)))
 (let ((?x712 (* y 1 y)))
 (let ((?x698 (* y y 1)))
 (let ((?x691 (* y 1)))
 (let ((?x684 (* y 1 1)))
 (let ((?x528 (* x x x y y00)))
 (let ((?x1646 (* (- 1) ?x528)))
 (let ((?x520 (* x x y y00)))
 (let ((?x1645 (* 3 ?x520)))
 (let ((?x501 (* x y00)))
 (let ((?x493 (* x x x y y y00)))
 (let ((?x593 (* (- 1) ?x493)))
 (let ((?x491 (* x x y y y00)))
 (let ((?x629 (* 3 ?x491)))
 (let ((?x479 (* y y y00)))
 (let ((?x3558 (* (- 5) ?x479)))
 (let ((?x464 (* y y00)))
 (let ((?x3557 (* (- 5) ?x464)))
 (let ((?x407 (* x y y y x00)))
 (let ((?x322 (* x x y y x00)))
 (let ((?x1394 (* 3 ?x322)))
 (let ((?x303 (* y y x00)))
 (let ((?x3556 (* (- 5) ?x303)))
 (let ((?x280 (* x x y x00)))
 (let ((?x2717 (* 3 ?x280)))
 (let ((?x258 (* y x00)))
 (let ((?x3555 (* (- 5) ?x258)))
 (let ((?x246 (* x x00)))
 (let ((?x3553 (* (- 3) x00)))
 (let ((?x1751 (* (- 3) y00)))
 (let ((?x3565 (+ (* 3 x) y ?x1751 ?x3553 ?x246 ?x3555 ?x2717 ?x3556 ?x1394 ?x407 ?x3557 ?x3558 ?x629 ?x593 ?x501 ?x1645 ?x1646 ?x684 ?x691 ?x698 ?x712 (* 2 (* y y)) (* 3 (* y y y)) ?x731 ?x829 (* (- 3) (* x x)) ?x748 ?x866 (* (- 2) (* x y y)) ?x1487 ?x916 ?x950 (* x y y 1) ?x1105 (* 2 (* x x x)) ?x1072 ?x1414 (* x 1 1 y) ?x3563 ?x1369 ?x1422 ?x1504 (* x y 1 y) ?x1522 ?x1529 (* x 1 y y) ?x1361 ?x3564 ?x1922 ?x1923 ?x1883 (* x y 1 1) (* x 1 y 1) ?x2393 ?x2704 (* x (- 1) y y) (* x x 1 y) (* x (- 1) 1 y) (* x x y 1) (* x (- 1) y 1) (* x (- 1) 1 1) (* y 1 y 1) (* y 1 1 y) (* y y 1 y) (* y 1 y y) (* x (- 1) (- 1) 1) (* x x (- 1) 1) (* x (- 1) x 1) (* x (- 1) (- 1) y) (* x x (- 1) y) (* x (- 1) x y))))
 (let ((?x1980 (+ 1 x)))
 (let ((?x346 (+ (- 1) y)))
 (let ((?x1244 (* ?x346 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1299 (* (- 1) ?x1244)))
 (let ((?x1094 (* ?x346 ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x788 (* (- 1) ?x1094)))
 (let ((?x743 (* x x)))
 (let ((?x726 (* y y y)))
 (let ((?x1426 (* (- 3) ?x464)))
 (let ((?x377 (* 3 x00)))
 (let ((?x387 (* 3 y00)))
 (let ((?x797 (* (- 1) y)))
 (let ((?x365 (+ x ?x797 ?x387 ?x377 (* 7 ?x246) (* 6 (* x x x00)) (* (- 3) ?x258) (* (- 12) (* x y x00)) (* (- 9) ?x280) ?x303 (* 6 (* x y y x00)) ?x1394 (* (- 1) ?x407) ?x1426 ?x479 (* 6 (* x y y y00)) ?x629 ?x493 (* 7 ?x501) (* 6 (* x x y00)) (* 2 (* x x x y00)) (* (- 12) (* x y y00)) (* (- 9) ?x520) (* (- 3) ?x528) ?x726 (* (- 3) ?x730) ?x732 ?x743 (* (- 1) ?x748) (* 5 ?x752) (* 6 (* x y y)) (* (- 1) ?x916) ?x1009 ?x1072 (* (- 1) (* y x 1 x)) (* (- 1) (* y (- 1) x x)) ?x788 ?x1299 ?x1286 ?x1302 (* (- 1) ?x1504) (* (- 1) (* x 1 1 x)) (* (- 1) ?x1522) (* (- 1) (* x 1 x 1)) (* (- 1) ?x1529) (* (- 1) (* x x 1 x)) (* (- 1) (* x 1 x x)) (* 2 (* x x x x00)) (* (- 3) ?x1624) (* (- 1) (* y (- 1) x 1)) (* (- 1) (* y y x 1)) (* (- 1) (* y (- 1) 1 1)) ?x1835 ?x1923 (* (- 1) ?x1883) (* (- 1) (* x 1)) (* (- 1) (* y (- 1) 1 x)) (* (- 1) (* y y 1 x)) (* (- 1) (* y 1 x 1)) (* (- 1) ?x2393) (* (- 1) (* y (- 1) (- 1) 1)) (* (- 1) (* y (- 1) y 1)) (* (- 1) (* y y (- 1) 1)) (* (- 1) ?x2704) (* (- 1) (* y (- 1) (- 1) x)) (* (- 1) (* y y (- 1) x)) (* (- 1) (* y (- 1) y x)) (* (- 1) (* y 1 1 x)) (* (- 1) (* y 1 x x)) (* (- 1) (* x 1 x)) (* (- 1) (* y x x 1)) (* (- 1) (* x x 1)) (* (- 1) (* y x 1 1)) (* (- 1) (* x 1 1)))))
 (let (($x138 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x2459 (and $x138 (or (not (= ?x365 0)) (not (= ?x3565 0))))))
 (let ((?x1363 (* ?x130 ?x130 ?x130 ?x130 ?x140)))
 (let ((?x862 (* (- 1) x)))
 (let ((?x2154 (* x00 ?x140 ?x140 ?x140)))
 (let ((?x505 (* y00 ?x140 ?x140 ?x140)))
 (let ((?x876 (* ?x130 ?x140 ?x140 ?x140 ?x140)))
 (let ((?x827 (* ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x682 (* ?x130 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x1697 (* y00 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x1687 (* x00 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x1351 (+ ?x1687 (* (- 1) (* x00 ?x130 ?x140 ?x140 ?x140)) ?x1697 ?x682 (* (- 1) (* y00 ?x130 ?x140 ?x140 ?x140)) (* (- 1) ?x950) ?x827 (* (- 1) (* ?x130 ?x140 ?x140 ?x140)) (* (- 1) (* ?x140 ?x140 ?x140 ?x140)) ?x876 (* (- 1) ?x1422) ?x505 (* (- 1) (* y00 ?x130 ?x130 ?x130 ?x140)) (* (- 1) (* x00 ?x130 ?x130 ?x130 ?x140)) ?x2154 ?x862 y00 x00 ?x797 ?x1363)))
 (let ((?x1339 (* ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x1106 (* x00 ?x346 ?x346 ?x346)))
 (let ((?x1386 (* y00 ?x346 ?x346 ?x346)))
 (let ((?x2914 (* ?x346 ?x346 ?x346 ?x346 ?x1980)))
 (let ((?x1459 (* ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x801 (* ?x346 ?x346 ?x346 ?x1980 ?x1980)))
 (let ((?x823 (* y00 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x820 (* x00 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x2155 (+ ?x820 (* (- 1) (* x00 ?x346 ?x346 ?x346 ?x1980)) ?x823 ?x801 (* (- 1) (* y00 ?x346 ?x346 ?x346 ?x1980)) ?x1299 ?x1459 (* (- 1) (* ?x346 ?x346 ?x346 ?x1980)) (* (- 1) (* ?x346 ?x346 ?x346 ?x346)) ?x2914 ?x788 ?x1386 (* (- 1) (* y00 ?x346 ?x1980 ?x1980 ?x1980)) (* (- 1) (* x00 ?x346 ?x1980 ?x1980 ?x1980)) ?x1106 ?x862 y00 x00 ?x797 ?x1339)))
 (let (($x1679 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x1122 (and $x1679 (or (not (= ?x2155 0)) (not (= ?x1351 0))))))
 (rewrite (= $x1122 $x2459)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x838 (exists ((x Int) (y Int) )(! (let ((?x1980 (+ 1 x)))
 (let ((?x346 (+ (- 1) y)))
 (let ((?x1339 (* ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x119 (* (- 1) x00)))
 (let ((?x112 (* (- 1) y00)))
 (let ((?x282 (* x00 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1258 (* y00 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1094 (* ?x346 ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x1131 (* ?x346 ?x346 ?x346 ?x346)))
 (let ((?x2148 (* ?x346 ?x346 ?x346 ?x1980)))
 (let ((?x1244 (* ?x346 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x880 (* y00 ?x346 ?x346 ?x346 ?x1980)))
 (let ((?x703 (* x00 ?x346 ?x346 ?x346 ?x1980)))
 (let ((?x1462 (+ (* (- 1) (* x00 ?x346 ?x346 ?x1980 ?x1980 ?x1980)) ?x703 (* (- 1) (* y00 ?x346 ?x346 ?x1980 ?x1980 ?x1980)) (* (- 1) (* ?x346 ?x346 ?x346 ?x1980 ?x1980)) ?x880 ?x1244 (* (- 1) (* ?x346 ?x346 ?x1980 ?x1980 ?x1980)) ?x2148 ?x1131 (* (- 1) (* ?x346 ?x346 ?x346 ?x346 ?x1980)) ?x1094 (* (- 1) (* y00 ?x346 ?x346 ?x346)) ?x1258 ?x282 (* (- 1) (* x00 ?x346 ?x346 ?x346)) x ?x112 ?x119 y (* (- 1) ?x1339))))
 (let ((?x140 (+ 1 y)))
 (let ((?x130 (+ (- 1) x)))
 (let ((?x1363 (* ?x130 ?x130 ?x130 ?x130 ?x140)))
 (let ((?x2147 (* x00 ?x130 ?x130 ?x130 ?x140)))
 (let ((?x2129 (* y00 ?x130 ?x130 ?x130 ?x140)))
 (let ((?x1422 (* ?x130 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x870 (* ?x140 ?x140 ?x140 ?x140)))
 (let ((?x833 (* ?x130 ?x140 ?x140 ?x140)))
 (let ((?x950 (* ?x130 ?x130 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x710 (* y00 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x1696 (* x00 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x1390 (+ (* (- 1) (* x00 ?x130 ?x130 ?x130 ?x140 ?x140)) ?x1696 (* (- 1) (* y00 ?x130 ?x130 ?x130 ?x140 ?x140)) (* (- 1) (* ?x130 ?x130 ?x140 ?x140 ?x140)) ?x710 ?x950 (* (- 1) (* ?x130 ?x130 ?x130 ?x140 ?x140)) ?x833 ?x870 (* (- 1) (* ?x130 ?x140 ?x140 ?x140 ?x140)) ?x1422 (* (- 1) (* y00 ?x140 ?x140 ?x140)) ?x2129 ?x2147 (* (- 1) (* x00 ?x140 ?x140 ?x140)) x ?x112 ?x119 y (* (- 1) ?x1363))))
 (let (($x1679 (= (+ x ?x112 ?x119 y) 0)))
 (and $x1679 (or (not (= ?x1390 0)) (not (= ?x1462 0))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1461 (lambda ((x Int) (y Int) )(let ((?x140 (+ 1 y)))
 (let ((?x130 (+ (- 1) x)))
 (let ((?x1363 (* ?x130 ?x130 ?x130 ?x130 ?x140)))
 (let ((?x797 (* (- 1) y)))
 (let ((?x862 (* (- 1) x)))
 (let ((?x2154 (* x00 ?x140 ?x140 ?x140)))
 (let ((?x505 (* y00 ?x140 ?x140 ?x140)))
 (let ((?x876 (* ?x130 ?x140 ?x140 ?x140 ?x140)))
 (let ((?x827 (* ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x682 (* ?x130 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x1697 (* y00 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x1687 (* x00 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x1351 (+ ?x1687 (* (- 1) (* x00 ?x130 ?x140 ?x140 ?x140)) ?x1697 ?x682 (* (- 1) (* y00 ?x130 ?x140 ?x140 ?x140)) (* (- 1) (* ?x130 ?x130 ?x130 ?x140 ?x140 ?x140)) ?x827 (* (- 1) (* ?x130 ?x140 ?x140 ?x140)) (* (- 1) (* ?x140 ?x140 ?x140 ?x140)) ?x876 (* (- 1) (* ?x130 ?x130 ?x130 ?x130 ?x140 ?x140)) ?x505 (* (- 1) (* y00 ?x130 ?x130 ?x130 ?x140)) (* (- 1) (* x00 ?x130 ?x130 ?x130 ?x140)) ?x2154 ?x862 y00 x00 ?x797 ?x1363)))
 (let ((?x1980 (+ 1 x)))
 (let ((?x346 (+ (- 1) y)))
 (let ((?x1339 (* ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x1106 (* x00 ?x346 ?x346 ?x346)))
 (let ((?x1386 (* y00 ?x346 ?x346 ?x346)))
 (let ((?x1094 (* ?x346 ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x788 (* (- 1) ?x1094)))
 (let ((?x2914 (* ?x346 ?x346 ?x346 ?x346 ?x1980)))
 (let ((?x1459 (* ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1244 (* ?x346 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1299 (* (- 1) ?x1244)))
 (let ((?x801 (* ?x346 ?x346 ?x346 ?x1980 ?x1980)))
 (let ((?x823 (* y00 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x820 (* x00 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x2155 (+ ?x820 (* (- 1) (* x00 ?x346 ?x346 ?x346 ?x1980)) ?x823 ?x801 (* (- 1) (* y00 ?x346 ?x346 ?x346 ?x1980)) ?x1299 ?x1459 (* (- 1) (* ?x346 ?x346 ?x346 ?x1980)) (* (- 1) (* ?x346 ?x346 ?x346 ?x346)) ?x2914 ?x788 ?x1386 (* (- 1) (* y00 ?x346 ?x1980 ?x1980 ?x1980)) (* (- 1) (* x00 ?x346 ?x1980 ?x1980 ?x1980)) ?x1106 ?x862 y00 x00 ?x797 ?x1339)))
 (let (($x1679 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x1122 (and $x1679 (or (not (= ?x2155 0)) (not (= ?x1351 0))))))
 (let ((?x119 (* (- 1) x00)))
 (let ((?x112 (* (- 1) y00)))
 (let ((?x282 (* x00 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1258 (* y00 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1131 (* ?x346 ?x346 ?x346 ?x346)))
 (let ((?x2148 (* ?x346 ?x346 ?x346 ?x1980)))
 (let ((?x880 (* y00 ?x346 ?x346 ?x346 ?x1980)))
 (let ((?x703 (* x00 ?x346 ?x346 ?x346 ?x1980)))
 (let ((?x1462 (+ (* (- 1) ?x820) ?x703 (* (- 1) ?x823) (* (- 1) ?x801) ?x880 ?x1244 (* (- 1) ?x1459) ?x2148 ?x1131 (* (- 1) ?x2914) ?x1094 (* (- 1) ?x1386) ?x1258 ?x282 (* (- 1) ?x1106) x ?x112 ?x119 y (* (- 1) ?x1339))))
 (let ((?x2147 (* x00 ?x130 ?x130 ?x130 ?x140)))
 (let ((?x2129 (* y00 ?x130 ?x130 ?x130 ?x140)))
 (let ((?x1422 (* ?x130 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x870 (* ?x140 ?x140 ?x140 ?x140)))
 (let ((?x833 (* ?x130 ?x140 ?x140 ?x140)))
 (let ((?x950 (* ?x130 ?x130 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x710 (* y00 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x1696 (* x00 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x1390 (+ (* (- 1) ?x1687) ?x1696 (* (- 1) ?x1697) (* (- 1) ?x682) ?x710 ?x950 (* (- 1) ?x827) ?x833 ?x870 (* (- 1) ?x876) ?x1422 (* (- 1) ?x505) ?x2129 ?x2147 (* (- 1) ?x2154) x ?x112 ?x119 y (* (- 1) ?x1363))))
 (let (($x709 (and $x1679 (or (not (= ?x1390 0)) (not (= ?x1462 0))))))
 (rewrite (= $x709 $x1122))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x109 (exists ((x Int) (y Int) )(! (let ((?x72 (- y 1)))
 (let ((?x71 (+ x 1)))
 (let ((?x75 (+ (* (- 1) ?x71 ?x71 ?x71 x00 ?x72 ?x72) (* ?x71 x00 ?x72 ?x72 ?x72))))
 (let ((?x79 (- (- ?x75 (* ?x71 ?x71 ?x71 ?x72 ?x72 y00)) (* ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x82 (+ ?x79 (* ?x71 ?x72 ?x72 ?x72 y00) (* ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x87 (+ (- ?x82 (* ?x71 ?x71 ?x71 ?x72 ?x72)) (* ?x71 ?x72 ?x72 ?x72) (* ?x72 ?x72 ?x72 ?x72))))
 (let ((?x91 (+ (- ?x87 (* ?x71 ?x72 ?x72 ?x72 ?x72)) (* ?x71 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x96 (+ (- ?x91 (* ?x72 ?x72 ?x72 y00)) (* ?x71 ?x71 ?x71 ?x72 y00) (* ?x71 ?x71 ?x71 x00 ?x72))))
 (let ((?x101 (- (- (+ (- ?x96 (* x00 ?x72 ?x72 ?x72)) x 1) y00) x00)))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x39 (+ (* (- 1) ?x35 ?x35 ?x35 x00 ?x36 ?x36) (* ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x43 (- (- ?x39 (* ?x35 ?x35 ?x35 ?x36 ?x36 y00)) (* ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x46 (+ ?x43 (* ?x35 ?x36 ?x36 ?x36 y00) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x51 (+ (- ?x46 (* ?x35 ?x35 ?x35 ?x36 ?x36)) (* ?x35 ?x36 ?x36 ?x36) (* ?x36 ?x36 ?x36 ?x36))))
 (let ((?x55 (+ (- ?x51 (* ?x35 ?x36 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36))))
 (let ((?x60 (+ (- ?x55 (* ?x36 ?x36 ?x36 y00)) (* ?x35 ?x35 ?x35 ?x36 y00) (* ?x35 ?x35 ?x35 x00 ?x36))))
 (let ((?x66 (+ (- (- (+ (- ?x60 (* x00 ?x36 ?x36 ?x36)) ?x35) y00) x00) y 1)))
 (let (($x107 (or (not (= (- ?x66 (* ?x35 ?x35 ?x35 ?x35 ?x36)) 0)) (not (= (- (+ ?x101 ?x72) (* ?x71 ?x71 ?x71 ?x71 ?x72)) 0)))))
 (and (= (+ (- (- x y00) x00) y) 0) $x107)))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1694 (lambda ((x Int) (y Int) )(let ((?x1980 (+ 1 x)))
 (let ((?x346 (+ (- 1) y)))
 (let ((?x1339 (* ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x119 (* (- 1) x00)))
 (let ((?x112 (* (- 1) y00)))
 (let ((?x282 (* x00 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1258 (* y00 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x1094 (* ?x346 ?x346 ?x1980 ?x1980 ?x1980 ?x1980)))
 (let ((?x1131 (* ?x346 ?x346 ?x346 ?x346)))
 (let ((?x2148 (* ?x346 ?x346 ?x346 ?x1980)))
 (let ((?x1244 (* ?x346 ?x346 ?x346 ?x1980 ?x1980 ?x1980)))
 (let ((?x880 (* y00 ?x346 ?x346 ?x346 ?x1980)))
 (let ((?x703 (* x00 ?x346 ?x346 ?x346 ?x1980)))
 (let ((?x1462 (+ (* (- 1) (* x00 ?x346 ?x346 ?x1980 ?x1980 ?x1980)) ?x703 (* (- 1) (* y00 ?x346 ?x346 ?x1980 ?x1980 ?x1980)) (* (- 1) (* ?x346 ?x346 ?x346 ?x1980 ?x1980)) ?x880 ?x1244 (* (- 1) (* ?x346 ?x346 ?x1980 ?x1980 ?x1980)) ?x2148 ?x1131 (* (- 1) (* ?x346 ?x346 ?x346 ?x346 ?x1980)) ?x1094 (* (- 1) (* y00 ?x346 ?x346 ?x346)) ?x1258 ?x282 (* (- 1) (* x00 ?x346 ?x346 ?x346)) x ?x112 ?x119 y (* (- 1) ?x1339))))
 (let ((?x140 (+ 1 y)))
 (let ((?x130 (+ (- 1) x)))
 (let ((?x1363 (* ?x130 ?x130 ?x130 ?x130 ?x140)))
 (let ((?x2147 (* x00 ?x130 ?x130 ?x130 ?x140)))
 (let ((?x2129 (* y00 ?x130 ?x130 ?x130 ?x140)))
 (let ((?x1422 (* ?x130 ?x130 ?x130 ?x130 ?x140 ?x140)))
 (let ((?x870 (* ?x140 ?x140 ?x140 ?x140)))
 (let ((?x833 (* ?x130 ?x140 ?x140 ?x140)))
 (let ((?x950 (* ?x130 ?x130 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x710 (* y00 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x1696 (* x00 ?x130 ?x140 ?x140 ?x140)))
 (let ((?x1390 (+ (* (- 1) (* x00 ?x130 ?x130 ?x130 ?x140 ?x140)) ?x1696 (* (- 1) (* y00 ?x130 ?x130 ?x130 ?x140 ?x140)) (* (- 1) (* ?x130 ?x130 ?x140 ?x140 ?x140)) ?x710 ?x950 (* (- 1) (* ?x130 ?x130 ?x130 ?x140 ?x140)) ?x833 ?x870 (* (- 1) (* ?x130 ?x140 ?x140 ?x140 ?x140)) ?x1422 (* (- 1) (* y00 ?x140 ?x140 ?x140)) ?x2129 ?x2147 (* (- 1) (* x00 ?x140 ?x140 ?x140)) x ?x112 ?x119 y (* (- 1) ?x1363))))
 (let (($x1679 (= (+ x ?x112 ?x119 y) 0)))
 (let (($x709 (and $x1679 (or (not (= ?x1390 0)) (not (= ?x1462 0))))))
 (let ((?x72 (- y 1)))
 (let ((?x71 (+ x 1)))
 (let ((?x75 (+ (* (- 1) ?x71 ?x71 ?x71 x00 ?x72 ?x72) (* ?x71 x00 ?x72 ?x72 ?x72))))
 (let ((?x79 (- (- ?x75 (* ?x71 ?x71 ?x71 ?x72 ?x72 y00)) (* ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x82 (+ ?x79 (* ?x71 ?x72 ?x72 ?x72 y00) (* ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x87 (+ (- ?x82 (* ?x71 ?x71 ?x71 ?x72 ?x72)) (* ?x71 ?x72 ?x72 ?x72) (* ?x72 ?x72 ?x72 ?x72))))
 (let ((?x91 (+ (- ?x87 (* ?x71 ?x72 ?x72 ?x72 ?x72)) (* ?x71 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x96 (+ (- ?x91 (* ?x72 ?x72 ?x72 y00)) (* ?x71 ?x71 ?x71 ?x72 y00) (* ?x71 ?x71 ?x71 x00 ?x72))))
 (let ((?x101 (- (- (+ (- ?x96 (* x00 ?x72 ?x72 ?x72)) x 1) y00) x00)))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x39 (+ (* (- 1) ?x35 ?x35 ?x35 x00 ?x36 ?x36) (* ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x43 (- (- ?x39 (* ?x35 ?x35 ?x35 ?x36 ?x36 y00)) (* ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x46 (+ ?x43 (* ?x35 ?x36 ?x36 ?x36 y00) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x51 (+ (- ?x46 (* ?x35 ?x35 ?x35 ?x36 ?x36)) (* ?x35 ?x36 ?x36 ?x36) (* ?x36 ?x36 ?x36 ?x36))))
 (let ((?x55 (+ (- ?x51 (* ?x35 ?x36 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36))))
 (let ((?x60 (+ (- ?x55 (* ?x36 ?x36 ?x36 y00)) (* ?x35 ?x35 ?x35 ?x36 y00) (* ?x35 ?x35 ?x35 x00 ?x36))))
 (let ((?x66 (+ (- (- (+ (- ?x60 (* x00 ?x36 ?x36 ?x36)) ?x35) y00) x00) y 1)))
 (let (($x107 (or (not (= (- ?x66 (* ?x35 ?x35 ?x35 ?x35 ?x36)) 0)) (not (= (- (+ ?x101 ?x72) (* ?x71 ?x71 ?x71 ?x71 ?x72)) 0)))))
 (let (($x108 (and (= (+ (- (- x y00) x00) y) 0) $x107)))
 (rewrite (= $x108 $x709)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x110 (asserted $x109)))
 (let ((@x1111 (mp (mp @x110 (quant-intro (proof-bind ?x1694) (= $x109 $x838)) $x838) (rewrite (= $x838 $x838)) $x838)))
 (let ((@x2765 (mp (mp @x1111 (quant-intro (proof-bind ?x1461) (= $x838 $x1298)) $x1298) (quant-intro (proof-bind ?x1877) (= $x1298 $x1732)) $x1732)))
 (let ((@x2565 (mp~ (mp @x2765 (quant-intro (proof-bind ?x1183) (= $x1732 $x1760)) $x1760) (sk (~ $x1760 $x2562)) $x2562)))
 (let ((@x3437 (mp @x2565 (rewrite (= $x2562 $x873)) $x873)))
 (let ((@x3062 (and-elim @x3437 $x1684)))
 (let ((@x834 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1684) $x1374)) @x3062 $x1374)))
 (let (($x864 (>= ?x689 0)))
 (let ((@x915 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1684) $x864)) @x3062 $x864)))
 (let (($x852 (not (<= ?x3430 0))))
 (let (($x1379 (>= ?x3430 0)))
 (let ((@x1288 (lemma ((_ th-lemma arith) (hypothesis (not $x1379)) @x915 @x834 @x915 @x834 false) $x1379)))
 (let (($x260 (>= ?x1283 0)))
 (let ((@x409 (lemma ((_ th-lemma arith) (hypothesis (not $x260)) @x915 @x834 @x915 @x834 false) $x260)))
 (let (($x877 (<= ?x1283 0)))
 (let ((@x723 (lemma ((_ th-lemma arith) (hypothesis (not $x877)) @x915 @x834 @x915 @x834 false) $x877)))
 (let ((@x651 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1216 (not $x877) (not $x260))) @x723 @x409 $x1216)))
 (let ((@x728 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1723 $x852 (not $x1379))) (unit-resolution (and-elim @x3437 $x1194) @x651 $x3436) @x1288 $x852)))
 ((_ th-lemma arith) @x728 @x915 @x834 @x915 @x834 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        29
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-gcd-tests           12
 :arith-grobner             4
 :arith-max-min             826
 :arith-nonlinear-bounds    22
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-patches             8
 :arith-patches_succ        8
 :arith-pivots              3
 :arith-row-summations      2
 :arith-tableau-max-columns 72
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                4.08
 :memory                    3.51
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                2082172
 :num-checks                1
 :propagations              14
 :rlimit-count              18432
 :time                      0.02
 :total-time                0.03)
