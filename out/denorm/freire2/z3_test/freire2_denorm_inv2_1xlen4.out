unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1270 (* r!2 s!1)))
 (let ((?x1117 (* 2 ?x1270)))
 (let ((?x910 (* 6 x!0)))
 (let ((?x557 (* (- 3) s!1)))
 (let ((?x928 (* 3 r!2)))
 (let ((?x437 (* r00 r00 r00)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x394 (* s00 r00)))
 (let ((?x472 (* (- 6) ?x394)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x621 (+ ?x44 ?x468 ?x469 ?x472 ?x438 ?x928 (* (- 12) (* r00 r00 r!2)) ?x557 (* 4 (* s00 r!2)) ?x910 ?x1117)))
 (let (($x810 (>= ?x621 0)))
 (let (($x624 (= ?x621 0)))
 (let ((?x340 (* (- 2) ?x1270)))
 (let ((?x1221 (* (- 6) x!0)))
 (let ((?x348 (* 7 s!1)))
 (let ((?x605 (* (- 3) r!2)))
 (let ((?x536 (* r!2 r!2)))
 (let ((?x347 (* (- 12) ?x536)))
 (let ((?x451 (* (- 12) ?x437)))
 (let ((?x395 (* 6 ?x394)))
 (let ((?x267 (* r00 r00)))
 (let ((?x1396 (* 12 ?x267)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1534 (* (- 7) s00)))
 (let ((?x1252 (+ ?x1534 ?x48 ?x59 ?x1396 ?x395 ?x451 ?x347 ?x605 (* 12 (* r00 r00 r!2)) ?x348 (* (- 4) (* s00 r!2)) ?x1221 ?x340)))
 (let ((?x796 (* 3 ?x1270)))
 (let ((?x872 (* (- 1) (* r!2 r!2 r!2 x!0))))
 (let ((?x946 (* (- 1) x!0)))
 (let ((?x914 (* r!2 x!0)))
 (let ((?x865 (* (- 3) ?x914)))
 (let ((?x1573 (* 3 (* r!2 r!2 s!1))))
 (let ((?x1376 (+ 3 (* 6 r!2) s!1)))
 (let ((?x1364 (* (- 1) s!1)))
 (let ((?x862 (+ ?x1364 x!0)))
 (let ((?x863 (+ 1 r!2)))
 (let ((?x860 (* ?x863 ?x862 ?x862 ?x1376 ?x1376)))
 (let ((?x942 (* (- 1) (* ?x863 ?x863 ?x863 ?x862 ?x862 ?x1376 ?x1376 ?x1376))))
 (let ((?x852 (* r!2 r!2 r!2 s!1)))
 (let ((?x905 (* (- 3) (* r!2 r!2 x!0))))
 (let ((?x613 (* ?x863 ?x863 ?x862 ?x862 ?x1376 ?x1376 ?x1376)))
 (let ((?x1243 (* (+ ?x613 s!1 ?x905 ?x852 ?x942 ?x860 ?x1573 ?x865 ?x946 ?x872 ?x796) ?x1252)))
 (let (($x1113 (= ?x1243 0)))
 (let (($x1247 (not $x1113)))
 (let ((?x1314 (* x00 x00)))
 (let ((?x1061 (* 108 ?x1314)))
 (let ((?x1152 (* s00 s00 s00)))
 (let ((?x1213 (* 16 ?x1152)))
 (let ((?x850 (* r00 r00 r00 x00)))
 (let ((?x727 (* (- 432) ?x850)))
 (let ((?x1012 (* (- 9) s!1)))
 (let ((?x773 (* s00 x00)))
 (let ((?x555 (* (- 108) ?x773)))
 (let ((?x758 (* r00 r00 s!1)))
 (let ((?x525 (* 36 ?x758)))
 (let ((?x615 (* s00 r00 r00)))
 (let ((?x1820 (* (- 36) ?x615)))
 (let ((?x559 (* s00 s00)))
 (let ((?x931 (* 51 ?x559)))
 (let ((?x490 (* r00 x00)))
 (let ((?x941 (* 108 ?x490)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1538 (+ ?x137 (* (- 54) ?x394) (* 216 (* s00 r00 x00)) ?x941 (* (- 216) (* x00 x!0)) ?x931 (* 36 (* r00 r00 s!1 s!1)) ?x1820 (* 15 (* s!1 s!1)) (* (- 108) (* s00 s00 r00)) (* 108 (* s00 x!0)) (* (- 36) (* s00 s00 r00 r00)) (* (- 108) (* r00 x!0)) ?x525 ?x555 (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) ?x1012 ?x727 (* 108 (* s00 r00 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* 108 (* x00 s!1)) (* 216 (* s00 r00 r00 r00)) ?x1213 ?x1061 (* (- 4) (* s!1 s!1 s!1)) (* (- 108) (* s!1 x!0)) (* 108 (* x!0 x!0)) (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)))))
 (let ((?x1551 (+ ?x137 (* (- 36) (* r00 r00 x!0)) (* (- 24) ?x394) (* (- 2) (* r!2 s!1 s!1)) (* (- 36) (* r00 r!2 x!0)) (* 54 ?x490) (* 15 ?x559) ?x1820 (* (- 3) (* s!1 s!1)) (* 2 (* s00 s00 r00)) (* 6 (* s00 x!0)) (* 54 (* x00 r!2)) (* (- 54) (* r00 x!0)) (* 4 (* s00 s00 r!2)) ?x525 (* (- 6) ?x773) ?x1012 (* 36 (* r00 r00 x00)) (* 2 (* s00 r00 s!1)) (* (- 54) ?x914) (* (- 24) (* s00 r!2)) (* 6 (* x00 s!1)) (* 36 (* r00 x00 r!2)) (* (- 4) (* r00 s!1 s!1)) (* 24 ?x1270) (* (- 6) (* s!1 x!0)) (* (- 2) (* s00 r!2 s!1)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)))))
 (let ((?x906 (+ ?x44 (* (- 9) ?x394) (* 18 ?x490) (* 4 ?x559) (* (- 6) (* r00 r!2 s!1)) (* (- 6) ?x615) (* (- 2) (* s!1 s!1)) (* 18 (* x00 r!2)) (* (- 18) (* r00 x!0)) (* 6 ?x758) ?x557 (* (- 18) ?x914) (* (- 9) (* s00 r!2)) (* 9 ?x1270) (* (- 2) (* s00 s!1)) (* 6 (* s00 r00 r!2)) (* 9 (* r00 s!1)))))
 (let ((?x1039 (* (- 3) ?x267)))
 (let ((?x547 (+ s00 ?x1039 (* 3 ?x536) ?x1364)))
 (let (($x1170 (= ?x547 0)))
 (let (($x1119 (and $x1170 $x624 (= ?x906 0) (= ?x1551 0) (= ?x1538 0) $x1247)))
 (let ((?x426 (+ ?x605 ?x348 ?x1221 ?x1534 ?x48 ?x59 ?x347 ?x1396 ?x340 (* 12 (* r!2 r00 r00)) (* (- 4) (* r!2 s00)) ?x395 ?x451)))
 (let ((?x423 (* (+ s!1 ?x946 ?x796 ?x865 ?x860 ?x942 ?x852 ?x1573 ?x905 ?x872 ?x613) ?x426)))
 (let ((?x1344 (* (- 108) ?x1314)))
 (let ((?x1343 (* (- 16) ?x1152)))
 (let ((?x1024 (* s00 r00 r00 r00)))
 (let ((?x1339 (* (- 216) ?x1024)))
 (let ((?x851 (* 432 ?x850)))
 (let ((?x1097 (* 108 ?x773)))
 (let ((?x699 (* s00 s00 r00 r00)))
 (let ((?x700 (* 36 ?x699)))
 (let ((?x636 (* s00 s00 r00)))
 (let ((?x980 (* 108 ?x636)))
 (let ((?x968 (* 36 ?x615)))
 (let ((?x1333 (* (- 51) ?x559)))
 (let ((?x1139 (* s!1 r00 r00)))
 (let ((?x730 (* (- 36) ?x1139)))
 (let ((?x1330 (* (- 108) ?x490)))
 (let ((?x481 (* s00 r00 x00)))
 (let ((?x1329 (* (- 216) ?x481)))
 (let ((?x488 (* 54 ?x394)))
 (let ((?x955 (* (- 9) s00)))
 (let ((?x770 (* 9 s!1)))
 (let ((?x944 (+ ?x770 ?x955 ?x488 ?x1329 ?x1330 (* (- 15) (* s!1 s!1)) ?x730 ?x1333 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x968 ?x980 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x700 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1097 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x851 (* 12 (* s!1 s!1 s00)) ?x1339 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1343 (* 216 (* x!0 x00)) ?x1344)))
 (let ((?x845 (* r00 r00 x00)))
 (let ((?x858 (* (- 36) ?x845)))
 (let ((?x774 (* 6 ?x773)))
 (let ((?x664 (* (- 2) ?x636)))
 (let ((?x884 (* (- 15) ?x559)))
 (let ((?x519 (* (- 54) ?x490)))
 (let ((?x532 (* 24 ?x394)))
 (let ((?x1876 (+ ?x770 ?x955 (* (- 24) ?x1270) (* 24 (* r!2 s00)) ?x532 ?x519 (* 3 (* s!1 s!1)) (* 54 ?x914) (* 36 (* r!2 x!0 r00)) ?x730 ?x884 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x968 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x664 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x774 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x858 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x616 (* 6 ?x615)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x509 (* 9 ?x394)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x767 (+ (* 3 s!1) ?x346 (* (- 9) ?x1270) (* 9 (* r!2 s00)) ?x509 ?x504 (* 2 (* s!1 s!1)) (* 18 ?x914) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1139) ?x572 (* 18 (* x!0 r00)) ?x616 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x617 (+ ?x928 ?x557 ?x910 ?x44 ?x468 ?x469 ?x1117 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x472 ?x438)))
 (let (($x389 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x536) (* 3 ?x267)) 0) (= ?x617 0) (= ?x767 0) (= ?x1876 0) (= ?x944 0) (not (= ?x423 0)))))
 (let (($x1301 (exists ((r Int) (s Int) (x Int) )(! (let ((?x437 (* r00 r00 r00)))
 (let ((?x451 (* (- 12) ?x437)))
 (let ((?x394 (* s00 r00)))
 (let ((?x395 (* 6 ?x394)))
 (let ((?x367 (* r s00)))
 (let ((?x381 (* (- 4) ?x367)))
 (let ((?x317 (* r r00 r00)))
 (let ((?x318 (* 12 ?x317)))
 (let ((?x311 (* r s)))
 (let ((?x312 (* (- 2) ?x311)))
 (let ((?x267 (* r00 r00)))
 (let ((?x1396 (* 12 ?x267)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1534 (* (- 7) s00)))
 (let ((?x416 (* (- 6) x)))
 (let ((?x1596 (* 7 s)))
 (let ((?x1007 (* (- 3) r)))
 (let ((?x1115 (+ ?x1007 ?x1596 ?x416 ?x1534 ?x48 ?x59 (* (- 12) (* r r)) ?x1396 ?x312 ?x318 ?x381 ?x395 ?x451)))
 (let ((?x213 (* 6 r)))
 (let ((?x1354 (+ 3 ?x213 s)))
 (let ((?x246 (* (- 1) s)))
 (let ((?x1553 (+ ?x246 x)))
 (let ((?x1351 (+ 1 r)))
 (let ((?x1892 (* (- 1) (* r r r x))))
 (let ((?x1873 (* (- 3) (* r r x))))
 (let ((?x1878 (* 3 (* r r s))))
 (let ((?x1786 (* r r r s)))
 (let ((?x517 (* r x)))
 (let ((?x1881 (* (- 3) ?x517)))
 (let ((?x1886 (* 3 ?x311)))
 (let ((?x1898 (* (- 1) x)))
 (let ((?x1016 (+ s ?x1898 ?x1886 ?x1881 (* ?x1351 ?x1553 ?x1553 ?x1354 ?x1354) (* (- 1) (* ?x1351 ?x1351 ?x1351 ?x1553 ?x1553 ?x1354 ?x1354 ?x1354)) ?x1786 ?x1878 ?x1873 ?x1892 (* ?x1351 ?x1351 ?x1553 ?x1553 ?x1354 ?x1354 ?x1354))))
 (let ((?x1314 (* x00 x00)))
 (let ((?x1344 (* (- 108) ?x1314)))
 (let ((?x1152 (* s00 s00 s00)))
 (let ((?x1343 (* (- 16) ?x1152)))
 (let ((?x1024 (* s00 r00 r00 r00)))
 (let ((?x1339 (* (- 216) ?x1024)))
 (let ((?x850 (* r00 r00 r00 x00)))
 (let ((?x851 (* 432 ?x850)))
 (let ((?x773 (* s00 x00)))
 (let ((?x1097 (* 108 ?x773)))
 (let ((?x699 (* s00 s00 r00 r00)))
 (let ((?x700 (* 36 ?x699)))
 (let ((?x636 (* s00 s00 r00)))
 (let ((?x980 (* 108 ?x636)))
 (let ((?x615 (* s00 r00 r00)))
 (let ((?x968 (* 36 ?x615)))
 (let ((?x559 (* s00 s00)))
 (let ((?x1333 (* (- 51) ?x559)))
 (let ((?x533 (* s r00 r00)))
 (let ((?x832 (* (- 36) ?x533)))
 (let ((?x490 (* r00 x00)))
 (let ((?x1330 (* (- 108) ?x490)))
 (let ((?x481 (* s00 r00 x00)))
 (let ((?x1329 (* (- 216) ?x481)))
 (let ((?x488 (* 54 ?x394)))
 (let ((?x955 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1345 (+ ?x143 ?x955 ?x488 ?x1329 ?x1330 (* (- 15) (* s s)) ?x832 ?x1333 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x968 ?x980 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x700 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1097 (* 108 (* s x)) (* (- 108) (* x x)) ?x851 (* 12 (* s s s00)) ?x1339 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1343 (* 216 (* x x00)) ?x1344)))
 (let (($x1346 (= ?x1345 0)))
 (let ((?x845 (* r00 r00 x00)))
 (let ((?x858 (* (- 36) ?x845)))
 (let ((?x774 (* 6 ?x773)))
 (let ((?x664 (* (- 2) ?x636)))
 (let ((?x884 (* (- 15) ?x559)))
 (let ((?x513 (* s s)))
 (let ((?x537 (* 3 ?x513)))
 (let ((?x519 (* (- 54) ?x490)))
 (let ((?x532 (* 24 ?x394)))
 (let ((?x1047 (+ ?x143 ?x955 (* (- 24) ?x311) (* 24 ?x367) ?x532 ?x519 ?x537 (* 54 ?x517) (* 36 (* r x r00)) ?x832 ?x884 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x968 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x664 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x774 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x858 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1052 (= ?x1047 0)))
 (let ((?x616 (* 6 ?x615)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x509 (* 9 ?x394)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x713 (+ ?x47 ?x346 (* (- 9) ?x311) (* 9 ?x367) ?x509 ?x504 ?x514 (* 18 ?x517) (* 6 (* r s r00)) (* (- 6) ?x533) ?x572 (* 18 (* x r00)) ?x616 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x720 (= ?x713 0)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x472 (* (- 6) ?x394)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x473 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x468 ?x469 (* 2 ?x311) (* (- 12) ?x317) (* 4 ?x367) ?x472 ?x438)))
 (let (($x474 (= ?x473 0)))
 (let (($x300 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x267)) 0)))
 (and $x300 $x474 $x720 $x1052 $x1346 (not (= (* ?x1016 ?x1115) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1767 (exists ((r Int) (s Int) (x Int) )(! (let ((?x437 (* r00 r00 r00)))
 (let ((?x451 (* (- 12) ?x437)))
 (let ((?x59 (* 6 x00)))
 (let ((?x416 (* (- 6) x)))
 (let ((?x658 (* r00 s00)))
 (let ((?x667 (* 6 ?x658)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x632 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x346 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x667 ?x416 ?x59 ?x451)))
 (let ((?x213 (* 6 r)))
 (let ((?x965 (+ 3 s ?x213)))
 (let ((?x246 (* (- 1) s)))
 (let ((?x1499 (+ x ?x246)))
 (let ((?x1351 (+ 1 r)))
 (let ((?x1065 (+ (* (- 1) (* ?x1351 ?x1351 ?x1351 ?x1499 ?x1499 ?x965 ?x965 ?x965)) (* (- 1) (* ?x1351 ?x1351 ?x1351 ?x1499)) (* ?x1351 ?x1351 ?x1499 ?x1499 ?x965 ?x965 ?x965) (* ?x1351 ?x1499 ?x1499 ?x965 ?x965))))
 (let ((?x1314 (* x00 x00)))
 (let ((?x1061 (* 108 ?x1314)))
 (let ((?x137 (* 9 s00)))
 (let ((?x559 (* s00 s00)))
 (let ((?x931 (* 51 ?x559)))
 (let ((?x1152 (* s00 s00 s00)))
 (let ((?x1213 (* 16 ?x1152)))
 (let ((?x773 (* s00 x00)))
 (let ((?x555 (* (- 108) ?x773)))
 (let ((?x850 (* r00 r00 r00 x00)))
 (let ((?x727 (* (- 432) ?x850)))
 (let ((?x490 (* r00 x00)))
 (let ((?x941 (* 108 ?x490)))
 (let ((?x1069 (+ (* 216 (* r00 s00 x00)) ?x941 (* (- 54) ?x658) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x727 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x555 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1213 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x931 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1061)))
 (let ((?x955 (* (- 9) s00)))
 (let ((?x884 (* (- 15) ?x559)))
 (let ((?x845 (* r00 r00 x00)))
 (let ((?x858 (* (- 36) ?x845)))
 (let ((?x774 (* 6 ?x773)))
 (let ((?x513 (* s s)))
 (let ((?x537 (* 3 ?x513)))
 (let ((?x519 (* (- 54) ?x490)))
 (let ((?x649 (+ (* (- 24) (* s r)) ?x519 (* 36 (* r00 x r)) (* 24 ?x658) ?x537 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x774 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x858 ?x884 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x955 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x702 (+ (* (- 9) (* s r)) ?x504 (* 9 ?x658) ?x514 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x572 (* 18 (* r00 x)) ?x346 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x1007 (* (- 3) r)))
 (let ((?x689 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x1007 ?x346 ?x47 ?x48 (* (- 4) (* s00 r)) ?x667 ?x416 ?x59 ?x451)))
 (let (($x1195 (= (+ s00 ?x246 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1195 (= ?x689 0) (= ?x702 0) (= ?x649 0) (= ?x1069 0) (not (= (* ?x1065 ?x632) 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x937 (lambda ((r Int) (s Int) (x Int) )(let ((?x437 (* r00 r00 r00)))
 (let ((?x451 (* (- 12) ?x437)))
 (let ((?x394 (* s00 r00)))
 (let ((?x395 (* 6 ?x394)))
 (let ((?x367 (* r s00)))
 (let ((?x381 (* (- 4) ?x367)))
 (let ((?x317 (* r r00 r00)))
 (let ((?x318 (* 12 ?x317)))
 (let ((?x311 (* r s)))
 (let ((?x312 (* (- 2) ?x311)))
 (let ((?x267 (* r00 r00)))
 (let ((?x1396 (* 12 ?x267)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1534 (* (- 7) s00)))
 (let ((?x416 (* (- 6) x)))
 (let ((?x1596 (* 7 s)))
 (let ((?x1007 (* (- 3) r)))
 (let ((?x1115 (+ ?x1007 ?x1596 ?x416 ?x1534 ?x48 ?x59 (* (- 12) (* r r)) ?x1396 ?x312 ?x318 ?x381 ?x395 ?x451)))
 (let ((?x213 (* 6 r)))
 (let ((?x1354 (+ 3 ?x213 s)))
 (let ((?x246 (* (- 1) s)))
 (let ((?x1553 (+ ?x246 x)))
 (let ((?x1351 (+ 1 r)))
 (let ((?x1892 (* (- 1) (* r r r x))))
 (let ((?x1873 (* (- 3) (* r r x))))
 (let ((?x1878 (* 3 (* r r s))))
 (let ((?x1786 (* r r r s)))
 (let ((?x517 (* r x)))
 (let ((?x1881 (* (- 3) ?x517)))
 (let ((?x1886 (* 3 ?x311)))
 (let ((?x1898 (* (- 1) x)))
 (let ((?x1016 (+ s ?x1898 ?x1886 ?x1881 (* ?x1351 ?x1553 ?x1553 ?x1354 ?x1354) (* (- 1) (* ?x1351 ?x1351 ?x1351 ?x1553 ?x1553 ?x1354 ?x1354 ?x1354)) ?x1786 ?x1878 ?x1873 ?x1892 (* ?x1351 ?x1351 ?x1553 ?x1553 ?x1354 ?x1354 ?x1354))))
 (let ((?x1314 (* x00 x00)))
 (let ((?x1344 (* (- 108) ?x1314)))
 (let ((?x1152 (* s00 s00 s00)))
 (let ((?x1343 (* (- 16) ?x1152)))
 (let ((?x1024 (* s00 r00 r00 r00)))
 (let ((?x1339 (* (- 216) ?x1024)))
 (let ((?x850 (* r00 r00 r00 x00)))
 (let ((?x851 (* 432 ?x850)))
 (let ((?x773 (* s00 x00)))
 (let ((?x1097 (* 108 ?x773)))
 (let ((?x699 (* s00 s00 r00 r00)))
 (let ((?x700 (* 36 ?x699)))
 (let ((?x636 (* s00 s00 r00)))
 (let ((?x980 (* 108 ?x636)))
 (let ((?x615 (* s00 r00 r00)))
 (let ((?x968 (* 36 ?x615)))
 (let ((?x559 (* s00 s00)))
 (let ((?x1333 (* (- 51) ?x559)))
 (let ((?x533 (* s r00 r00)))
 (let ((?x832 (* (- 36) ?x533)))
 (let ((?x490 (* r00 x00)))
 (let ((?x1330 (* (- 108) ?x490)))
 (let ((?x481 (* s00 r00 x00)))
 (let ((?x1329 (* (- 216) ?x481)))
 (let ((?x488 (* 54 ?x394)))
 (let ((?x955 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1345 (+ ?x143 ?x955 ?x488 ?x1329 ?x1330 (* (- 15) (* s s)) ?x832 ?x1333 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x968 ?x980 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x700 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1097 (* 108 (* s x)) (* (- 108) (* x x)) ?x851 (* 12 (* s s s00)) ?x1339 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1343 (* 216 (* x x00)) ?x1344)))
 (let (($x1346 (= ?x1345 0)))
 (let ((?x845 (* r00 r00 x00)))
 (let ((?x858 (* (- 36) ?x845)))
 (let ((?x774 (* 6 ?x773)))
 (let ((?x664 (* (- 2) ?x636)))
 (let ((?x884 (* (- 15) ?x559)))
 (let ((?x513 (* s s)))
 (let ((?x537 (* 3 ?x513)))
 (let ((?x519 (* (- 54) ?x490)))
 (let ((?x532 (* 24 ?x394)))
 (let ((?x1047 (+ ?x143 ?x955 (* (- 24) ?x311) (* 24 ?x367) ?x532 ?x519 ?x537 (* 54 ?x517) (* 36 (* r x r00)) ?x832 ?x884 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x968 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x664 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x774 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x858 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1052 (= ?x1047 0)))
 (let ((?x616 (* 6 ?x615)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x509 (* 9 ?x394)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x713 (+ ?x47 ?x346 (* (- 9) ?x311) (* 9 ?x367) ?x509 ?x504 ?x514 (* 18 ?x517) (* 6 (* r s r00)) (* (- 6) ?x533) ?x572 (* 18 (* x r00)) ?x616 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x720 (= ?x713 0)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x472 (* (- 6) ?x394)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x473 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x468 ?x469 (* 2 ?x311) (* (- 12) ?x317) (* 4 ?x367) ?x472 ?x438)))
 (let (($x474 (= ?x473 0)))
 (let (($x300 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x267)) 0)))
 (let (($x1189 (and $x300 $x474 $x720 $x1052 $x1346 (not (= (* ?x1016 ?x1115) 0)))))
 (let ((?x658 (* r00 s00)))
 (let ((?x667 (* 6 ?x658)))
 (let ((?x632 (+ 6 (* (- 2) (* ?x1351 (+ 3 s ?x213))) (* 12 (* r00 r00 ?x1351)) (* 15 r) ?x346 ?x143 ?x48 (* (- 4) (* s00 ?x1351)) ?x667 ?x416 ?x59 ?x451)))
 (let ((?x965 (+ 3 s ?x213)))
 (let ((?x1499 (+ x ?x246)))
 (let ((?x1065 (+ (* (- 1) (* ?x1351 ?x1351 ?x1351 ?x1499 ?x1499 ?x965 ?x965 ?x965)) (* (- 1) (* ?x1351 ?x1351 ?x1351 ?x1499)) (* ?x1351 ?x1351 ?x1499 ?x1499 ?x965 ?x965 ?x965) (* ?x1351 ?x1499 ?x1499 ?x965 ?x965))))
 (let ((?x1061 (* 108 ?x1314)))
 (let ((?x137 (* 9 s00)))
 (let ((?x931 (* 51 ?x559)))
 (let ((?x1213 (* 16 ?x1152)))
 (let ((?x555 (* (- 108) ?x773)))
 (let ((?x727 (* (- 432) ?x850)))
 (let ((?x941 (* 108 ?x490)))
 (let ((?x1069 (+ (* 216 (* r00 s00 x00)) ?x941 (* (- 54) ?x658) (* 15 ?x513) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x727 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x555 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1213 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x931 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1061)))
 (let ((?x649 (+ (* (- 24) (* s r)) ?x519 (* 36 (* r00 x r)) (* 24 ?x658) ?x537 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x774 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x858 ?x884 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x955 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x702 (+ (* (- 9) (* s r)) ?x504 (* 9 ?x658) ?x514 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x572 (* 18 (* r00 x)) ?x346 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x689 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x1007 ?x346 ?x47 ?x48 (* (- 4) (* s00 r)) ?x667 ?x416 ?x59 ?x451)))
 (let (($x762 (and (= (+ s00 ?x246 (* 3 (* r r)) (* (- 3) ?x267)) 0) (= ?x689 0) (= ?x702 0) (= ?x649 0) (= ?x1069 0) (not (= (* ?x1065 ?x632) 0)))))
 (rewrite (= $x762 $x1189))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x243 (exists ((r Int) (s Int) (x Int) )(! (let ((?x226 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x234 (- (* (- 1) ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x226 ?x226) (* ?x212 ?x212 ?x212 ?x226))))
 (let ((?x237 (+ ?x234 (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x226 ?x226) (* ?x212 ?x214 ?x214 ?x226 ?x226))))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x59 (* 6 x00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x219 (- (+ (* (- 2) ?x212 ?x214) (* 12 ?x212 r00 r00)) (* 3 ?x212))))
 (let ((?x225 (+ (- (+ (- ?x219 ?x44) (* 3 ?x214) ?x48) (* 4 ?x212 s00)) ?x54)))
 (let (($x241 (or (not (= (* (- (+ (- ?x225 (* 6 ?x226)) ?x59) ?x61) ?x237) 0)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) $x241)))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x461 (lambda ((r Int) (s Int) (x Int) )(let ((?x437 (* r00 r00 r00)))
 (let ((?x451 (* (- 12) ?x437)))
 (let ((?x59 (* 6 x00)))
 (let ((?x416 (* (- 6) x)))
 (let ((?x658 (* r00 s00)))
 (let ((?x667 (* 6 ?x658)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x632 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x346 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x667 ?x416 ?x59 ?x451)))
 (let ((?x213 (* 6 r)))
 (let ((?x965 (+ 3 s ?x213)))
 (let ((?x246 (* (- 1) s)))
 (let ((?x1499 (+ x ?x246)))
 (let ((?x1351 (+ 1 r)))
 (let ((?x1065 (+ (* (- 1) (* ?x1351 ?x1351 ?x1351 ?x1499 ?x1499 ?x965 ?x965 ?x965)) (* (- 1) (* ?x1351 ?x1351 ?x1351 ?x1499)) (* ?x1351 ?x1351 ?x1499 ?x1499 ?x965 ?x965 ?x965) (* ?x1351 ?x1499 ?x1499 ?x965 ?x965))))
 (let ((?x1314 (* x00 x00)))
 (let ((?x1061 (* 108 ?x1314)))
 (let ((?x137 (* 9 s00)))
 (let ((?x559 (* s00 s00)))
 (let ((?x931 (* 51 ?x559)))
 (let ((?x1152 (* s00 s00 s00)))
 (let ((?x1213 (* 16 ?x1152)))
 (let ((?x773 (* s00 x00)))
 (let ((?x555 (* (- 108) ?x773)))
 (let ((?x850 (* r00 r00 r00 x00)))
 (let ((?x727 (* (- 432) ?x850)))
 (let ((?x490 (* r00 x00)))
 (let ((?x941 (* 108 ?x490)))
 (let ((?x1069 (+ (* 216 (* r00 s00 x00)) ?x941 (* (- 54) ?x658) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x727 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x555 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1213 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x931 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1061)))
 (let ((?x955 (* (- 9) s00)))
 (let ((?x884 (* (- 15) ?x559)))
 (let ((?x845 (* r00 r00 x00)))
 (let ((?x858 (* (- 36) ?x845)))
 (let ((?x774 (* 6 ?x773)))
 (let ((?x513 (* s s)))
 (let ((?x537 (* 3 ?x513)))
 (let ((?x519 (* (- 54) ?x490)))
 (let ((?x649 (+ (* (- 24) (* s r)) ?x519 (* 36 (* r00 x r)) (* 24 ?x658) ?x537 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x774 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x858 ?x884 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x955 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x702 (+ (* (- 9) (* s r)) ?x504 (* 9 ?x658) ?x514 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x572 (* 18 (* r00 x)) ?x346 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x1007 (* (- 3) r)))
 (let ((?x689 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x1007 ?x346 ?x47 ?x48 (* (- 4) (* s00 r)) ?x667 ?x416 ?x59 ?x451)))
 (let (($x1195 (= (+ s00 ?x246 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x762 (and $x1195 (= ?x689 0) (= ?x702 0) (= ?x649 0) (= ?x1069 0) (not (= (* ?x1065 ?x632) 0)))))
 (let ((?x226 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x234 (- (* (- 1) ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x226 ?x226) (* ?x212 ?x212 ?x212 ?x226))))
 (let ((?x237 (+ ?x234 (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x226 ?x226) (* ?x212 ?x214 ?x214 ?x226 ?x226))))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x219 (- (+ (* (- 2) ?x212 ?x214) (* 12 ?x212 r00 r00)) (* 3 ?x212))))
 (let ((?x225 (+ (- (+ (- ?x219 ?x44) (* 3 ?x214) ?x48) (* 4 ?x212 s00)) ?x54)))
 (let (($x241 (or (not (= (* (- (+ (- ?x225 (* 6 ?x226)) ?x59) ?x61) ?x237) 0)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x242 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) $x241)))
 (rewrite (= $x242 $x762)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x244 (asserted $x243)))
 (let ((@x611 (mp (mp @x244 (quant-intro (proof-bind ?x461) (= $x243 $x1767)) $x1767) (rewrite (= $x1767 $x1767)) $x1767)))
 (let ((@x742 (mp~ (mp @x611 (quant-intro (proof-bind ?x937) (= $x1767 $x1301)) $x1301) (sk (~ $x1301 $x389)) $x389)))
 (let ((@x355 (mp @x742 (rewrite (= $x389 $x1119)) $x1119)))
 (let ((@x686 (and-elim @x355 $x624)))
 (let ((@x1144 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x624) $x810)) @x686 $x810)))
 (let (($x815 (>= ?x547 0)))
 (let ((@x391 (and-elim @x355 $x1170)))
 (let ((@x875 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1170) $x815)) @x391 $x815)))
 (let (($x800 (<= ?x621 0)))
 (let ((@x915 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x624) $x800)) @x686 $x800)))
 (let (($x874 (<= ?x547 0)))
 (let ((@x633 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1170) $x874)) @x391 $x874)))
 (let (($x1143 (not (<= ?x1243 0))))
 (let (($x1308 (>= ?x1243 0)))
 (let ((@x1178 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x1308)) @x633 @x915 @x875 @x1144 false) $x1308)))
 (let ((@x1772 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1113 $x1143 (not $x1308))) (and-elim @x355 $x1247) (or $x1143 (not $x1308)))))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution @x1772 @x1178 $x1143) @x633 @x915 @x875 @x1144 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        27
 :arith-assert-upper        10
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-fixed-eqs           2
 :arith-max-min             262
 :arith-nonlinear-bounds    16
 :arith-num-rows            10
 :arith-pivots              5
 :arith-pseudo-nonlinear    2
 :arith-row-summations      9
 :arith-tableau-max-columns 105
 :arith-tableau-max-rows    10
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              2
 :max-memory                19.86
 :memory                    19.27
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                627159
 :num-checks                1
 :propagations              12
 :rlimit-count              7849
 :time                      0.01
 :total-time                0.02)
