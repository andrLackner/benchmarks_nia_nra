unsat
((set-logic NIA)
(declare-fun x!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x2128 (+ y00 x00 (* (- 1) y!0) (* (- 1) x!1))))
 (let (($x2134 (<= ?x2128 0)))
 (let (($x1992 (= ?x2128 0)))
 (let ((?x3255 (* y!0 y!0 y!0)))
 (let ((?x2225 (* (- 4) ?x3255)))
 (let ((?x2231 (* (- 4) x!1)))
 (let ((?x3090 (* x!1 x!1)))
 (let ((?x671 (* 9 ?x3090)))
 (let ((?x2695 (* y!0 y!0 y!0 y!0)))
 (let ((?x3074 (* (- 1) ?x2695)))
 (let ((?x2491 (* y!0 y!0)))
 (let ((?x3094 (* (- 7) ?x2491)))
 (let ((?x1763 (* x!1 x!1 x!1 x!1)))
 (let ((?x1246 (* 2 ?x1763)))
 (let ((?x2222 (* 2 (* y!0 x!1 x!1 x!1 x!1))))
 (let ((?x1984 (+ 1 y!0)))
 (let ((?x2191 (+ (- 1) x!1)))
 (let ((?x1318 (* ?x2191 ?x2191 ?x1984 ?x1984 ?x1984 ?x1984)))
 (let ((?x1311 (* y!0 y!0 y!0 y!0 x!1)))
 (let ((?x1282 (* y00 y!0 y!0 y!0 x!1 x!1)))
 (let ((?x1266 (* x00 y!0 y!0 y!0 x!1 x!1)))
 (let ((?x1916 (* (- 2) (* y00 y!0 x!1 x!1 x!1))))
 (let ((?x2102 (* (- 2) (* x00 y!0 x!1 x!1 x!1))))
 (let ((?x2103 (* 6 (* y!0 x!1 x!1))))
 (let ((?x980 (* y!0 y!0 x!1 x!1 x!1)))
 (let ((?x2101 (* 9 (* y!0 y!0 x!1))))
 (let ((?x2068 (* (- 4) y!0)))
 (let ((?x119 (* x!1 x!1 x!1)))
 (let ((?x973 (* (- 7) ?x119)))
 (let ((?x134 (+ (* 5 y00) (* 5 x00) ?x973 ?x2068 (* (- 1) (* ?x2191 ?x2191 ?x2191 ?x1984 ?x1984 ?x1984)) (* 2 (* y!0 x!1)) (* 2 (* x00 y!0 y!0 y!0)) (* 10 (* x00 y!0)) (* 11 (* y00 y!0 x!1 x!1)) (* 10 (* y00 y!0)) (* 7 (* x00 y!0 y!0)) (* (- 11) (* x00 y!0 y!0 x!1)) ?x2101 ?x980 (* (- 3) (* y!0 y!0 x!1 x!1)) (* (- 2) (* y00 x!1 x!1 x!1)) (* 2 (* y00 y!0 y!0 y!0)) ?x2103 (* 4 (* y!0 y!0 y!0 x!1)) ?x2102 ?x1916 (* 4 (* x00 y!0 y!0 x!1 x!1)) (* 8 (* x00 x!1 x!1)) ?x1266 ?x1282 (* (- 6) (* y!0 x!1 x!1 x!1)) ?x1311 (* (- 1) ?x1318) (* (- 11) (* x00 x!1)) (* (- 3) (* x00 y!0 y!0 y!0 x!1)) (* 11 (* x00 y!0 x!1 x!1)) (* (- 2) (* x00 x!1 x!1 x!1)) ?x2222 (* (- 11) (* y00 x!1)) (* (- 3) (* y00 y!0 y!0 y!0 x!1)) ?x1246 (* (- 19) (* x00 y!0 x!1)) (* 7 (* y00 y!0 y!0)) (* (- 11) (* y00 y!0 y!0 x!1)) (* 4 (* y00 y!0 y!0 x!1 x!1)) (* 8 (* y00 x!1 x!1)) (* (- 19) (* y00 y!0 x!1)) ?x3094 ?x3074 ?x671 ?x2231 ?x2225)))
 (let (($x496 (= ?x134 0)))
 (let ((?x3189 (+ 1 x!1)))
 (let ((?x3200 (+ (- 1) y!0)))
 (let ((?x3190 (* ?x3200 ?x3200 ?x3200 ?x3200 ?x3189 ?x3189)))
 (let ((?x2189 (* (- 9) ?x3090)))
 (let ((?x2170 (* 7 ?x2491)))
 (let ((?x1983 (* y00 y!0 y!0)))
 (let ((?x2173 (* (- 2) ?x1763)))
 (let ((?x1524 (* y00 y!0 y!0 y!0 x!1)))
 (let ((?x1335 (* x00 y!0 y!0 y!0 x!1)))
 (let ((?x811 (* x00 y!0 y!0)))
 (let ((?x1267 (* 3 x00)))
 (let ((?x861 (* 3 y00)))
 (let ((?x2165 (+ ?x861 ?x1267 ?x973 ?x2068 (* (- 2) (* y!0 x!1)) (* (- 4) (* x00 y!0)) (* (- 5) (* y00 y!0 x!1 x!1)) (* (- 4) (* y00 y!0)) ?x811 (* (- 1) (* x00 y!0 y!0 x!1)) ?x2101 ?x980 (* 3 (* y!0 y!0 x!1 x!1)) (* 2 (* y00 x!1 x!1 x!1)) ?x2103 (* (- 4) (* y!0 y!0 y!0 x!1)) ?x2102 ?x1916 (* (- 2) (* x00 y!0 y!0 x!1 x!1)) (* 6 (* x00 x!1 x!1)) ?x1266 ?x1282 (* 6 (* y!0 x!1 x!1 x!1)) ?x1311 (* 7 (* x00 x!1)) ?x1335 (* (- 5) (* x00 y!0 x!1 x!1)) (* 2 (* x00 x!1 x!1 x!1)) ?x2222 (* 7 (* y00 x!1)) ?x1524 (* (- 1) (* ?x3200 ?x3200 ?x3200 ?x3189 ?x3189 ?x3189)) ?x2173 (* (- 7) (* x00 y!0 x!1)) ?x1983 (* (- 1) (* y00 y!0 y!0 x!1)) (* (- 2) (* y00 y!0 y!0 x!1 x!1)) (* 6 (* y00 x!1 x!1)) (* (- 7) (* y00 y!0 x!1)) ?x2170 ?x2695 ?x2189 (* (- 1) ?x3190) ?x2231 ?x2225)))
 (let (($x2230 (= ?x2165 0)))
 (let (($x2233 (not $x2230)))
 (let (($x2177 (or $x2233 (not $x496))))
 (let (($x509 (and $x1992 $x2177)))
 (let ((?x3210 (* (- 2) (* x!1 x!1 x!1 x!1 y!0))))
 (let ((?x3216 (* (- 1) (* x!1 x!1 y!0 y!0 y!0 x00))))
 (let ((?x3211 (* 2 (* x!1 x!1 x!1 y!0 x00))))
 (let ((?x1009 (* 2 (* x!1 x!1 x!1 y!0 y00))))
 (let ((?x3075 (* (- 1) (* x!1 y!0 y!0 y!0 y!0))))
 (let ((?x3080 (* 4 ?x3255)))
 (let ((?x3223 (* (- 1) (* x!1 x!1 y!0 y!0 y!0 y00))))
 (let ((?x147 (* ?x2191 ?x2191 ?x2191 ?x1984 ?x1984 ?x1984)))
 (let ((?x2395 (* (- 6) (* x!1 x!1 y!0))))
 (let ((?x3195 (* 7 ?x119)))
 (let ((?x2517 (* (- 1) (* x!1 x!1 x!1 y!0 y!0))))
 (let ((?x320 (* (- 9) (* x!1 y!0 y!0))))
 (let ((?x1651 (* (- 5) x00)))
 (let ((?x1650 (* (- 5) y00)))
 (let ((?x2002 (* 4 y!0)))
 (let ((?x2207 (* 4 x!1)))
 (let ((?x2342 (+ ?x2207 ?x2002 ?x1650 ?x1651 (* (- 10) (* y!0 y00)) (* (- 7) (* y!0 y!0 y00)) (* 11 (* x!1 y!0 y!0 y00)) (* (- 4) (* x!1 x!1 y!0 y!0 y00)) (* 11 (* x!1 y00)) (* (- 8) (* x!1 x!1 y00)) (* 19 (* x!1 y!0 y00)) (* (- 11) (* x!1 x!1 y!0 y00)) (* 11 (* x!1 x00)) (* 19 (* x!1 y!0 x00)) (* 11 (* x!1 y!0 y!0 x00)) (* 3 (* x!1 y!0 y!0 y!0 x00)) (* (- 10) (* y!0 x00)) (* (- 7) (* y!0 y!0 x00)) (* (- 2) (* y!0 y!0 y!0 x00)) (* (- 2) (* y!0 y!0 y!0 y00)) (* 3 (* x!1 y!0 y!0 y!0 y00)) ?x1318 ?x2170 ?x320 ?x2517 (* 3 (* x!1 x!1 y!0 y!0)) ?x2189 (* (- 2) (* x!1 y!0)) ?x3195 ?x2395 ?x147 ?x3223 ?x3080 ?x2695 ?x3075 (* (- 4) (* x!1 y!0 y!0 y!0)) ?x1009 (* 2 (* x!1 x!1 x!1 y00)) (* (- 8) (* x!1 x!1 x00)) (* (- 11) (* x!1 x!1 y!0 x00)) (* 2 (* x!1 x!1 x!1 x00)) ?x3211 ?x2173 (* (- 4) (* x!1 x!1 y!0 y!0 x00)) ?x3216 ?x3210 (* 6 (* x!1 x!1 x!1 y!0)))))
 (let ((?x1587 (* ?x3200 ?x3200 ?x3200 ?x3189 ?x3189 ?x3189)))
 (let ((?x1316 (* x!1 y!0 y!0 x00)))
 (let ((?x3197 (* x!1 y!0 y!0 y00)))
 (let ((?x3279 (* (- 3) x00)))
 (let ((?x3278 (* (- 3) y00)))
 (let ((?x3215 (+ ?x2207 ?x2002 ?x3278 ?x3279 (* 4 (* y!0 y00)) (* (- 1) (* y!0 y!0 y00)) ?x3197 (* 2 (* x!1 x!1 y!0 y!0 y00)) (* (- 7) (* x!1 y00)) (* (- 6) (* x!1 x!1 y00)) (* 7 (* x!1 y!0 y00)) (* 5 (* x!1 x!1 y!0 y00)) (* (- 7) (* x!1 x00)) (* 7 (* x!1 y!0 x00)) ?x1316 (* (- 1) (* x!1 y!0 y!0 y!0 x00)) (* 4 (* y!0 x00)) (* (- 1) (* y!0 y!0 x00)) (* (- 1) (* x!1 y!0 y!0 y!0 y00)) ?x3094 ?x320 ?x2517 (* (- 3) (* x!1 x!1 y!0 y!0)) ?x671 (* 2 (* x!1 y!0)) ?x3195 ?x2395 ?x3223 ?x3080 ?x3074 ?x3075 (* 4 (* x!1 y!0 y!0 y!0)) ?x1009 ?x3190 ?x1587 (* (- 2) (* x!1 x!1 x!1 y00)) (* (- 6) (* x!1 x!1 x00)) (* 5 (* x!1 x!1 y!0 x00)) (* (- 2) (* x!1 x!1 x!1 x00)) ?x3211 ?x1246 (* 2 (* x!1 x!1 y!0 y!0 x00)) ?x3216 ?x3210 (* (- 6) (* x!1 x!1 x!1 y!0)))))
 (let (($x2174 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x3215 0)) (not (= ?x2342 0))))))
 (let (($x3250 (exists ((x Int) (y Int) )(! (let ((?x1785 (* x x x y)))
 (let ((?x2541 (* 6 ?x1785)))
 (let ((?x1564 (* x x x x y)))
 (let ((?x1704 (* (- 2) ?x1564)))
 (let ((?x1380 (* x x y y y x00)))
 (let ((?x1688 (* (- 1) ?x1380)))
 (let ((?x1345 (* x x y y x00)))
 (let ((?x1687 (* (- 4) ?x1345)))
 (let ((?x1319 (* x x x x)))
 (let ((?x2540 (* (- 2) ?x1319)))
 (let ((?x1238 (* x x x y x00)))
 (let ((?x1686 (* 2 ?x1238)))
 (let ((?x1211 (* x x x x00)))
 (let ((?x1685 (* 2 ?x1211)))
 (let ((?x1145 (* x x y x00)))
 (let ((?x1684 (* (- 11) ?x1145)))
 (let ((?x1118 (* x x x00)))
 (let ((?x1683 (* (- 8) ?x1118)))
 (let ((?x1010 (* x x x y00)))
 (let ((?x1682 (* 2 ?x1010)))
 (let ((?x923 (* x x x y y00)))
 (let ((?x924 (* 2 ?x923)))
 (let ((?x826 (* x y y y)))
 (let ((?x1681 (* (- 4) ?x826)))
 (let ((?x804 (* x y y y y)))
 (let ((?x1680 (* (- 1) ?x804)))
 (let ((?x802 (* y y y y)))
 (let ((?x799 (* y y y)))
 (let ((?x3245 (* 4 ?x799)))
 (let ((?x713 (* x x y y y y00)))
 (let ((?x1679 (* (- 1) ?x713)))
 (let ((?x118 (+ 1 y)))
 (let ((?x110 (+ (- 1) x)))
 (let ((?x607 (* ?x110 ?x110 ?x110 ?x118 ?x118 ?x118)))
 (let ((?x595 (* x x y)))
 (let ((?x3248 (* (- 6) ?x595)))
 (let ((?x588 (* x x x)))
 (let ((?x2484 (* 7 ?x588)))
 (let ((?x586 (* x y)))
 (let ((?x1593 (* (- 2) ?x586)))
 (let ((?x567 (* x x y y)))
 (let ((?x1676 (* 3 ?x567)))
 (let ((?x565 (* x x x y y)))
 (let ((?x1675 (* (- 1) ?x565)))
 (let ((?x560 (* x y y)))
 (let ((?x3203 (* (- 9) ?x560)))
 (let ((?x513 (* ?x110 ?x110 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x412 (* x y y y y00)))
 (let ((?x1672 (* 3 ?x412)))
 (let ((?x1671 (* (- 2) (* y y y y00))))
 (let ((?x1670 (* (- 2) (* y y y x00))))
 (let ((?x327 (* y y x00)))
 (let ((?x1669 (* (- 7) ?x327)))
 (let ((?x315 (* y x00)))
 (let ((?x1668 (* (- 10) ?x315)))
 (let ((?x270 (* x y y y x00)))
 (let ((?x1667 (* 3 ?x270)))
 (let ((?x253 (* x y y x00)))
 (let ((?x2537 (* 11 ?x253)))
 (let ((?x241 (* x y x00)))
 (let ((?x255 (* 19 ?x241)))
 (let ((?x235 (* x x00)))
 (let ((?x254 (* 11 ?x235)))
 (let ((?x175 (* x x y y00)))
 (let ((?x1663 (* (- 11) ?x175)))
 (let ((?x171 (* x y y00)))
 (let ((?x2536 (* 19 ?x171)))
 (let ((?x166 (* x x y00)))
 (let ((?x1659 (* (- 8) ?x166)))
 (let ((?x162 (* x y00)))
 (let ((?x2483 (* 11 ?x162)))
 (let ((?x154 (* x x y y y00)))
 (let ((?x1656 (* (- 4) ?x154)))
 (let ((?x152 (* x y y y00)))
 (let ((?x2534 (* 11 ?x152)))
 (let ((?x148 (* y y y00)))
 (let ((?x1654 (* (- 7) ?x148)))
 (let ((?x141 (* y y00)))
 (let ((?x1653 (* (- 10) ?x141)))
 (let ((?x1651 (* (- 5) x00)))
 (let ((?x1650 (* (- 5) y00)))
 (let ((?x3249 (* 4 y)))
 (let ((?x2111 (* 4 x)))
 (let ((?x3246 (+ ?x2111 ?x3249 ?x1650 ?x1651 ?x1653 ?x1654 ?x2534 ?x1656 ?x2483 ?x1659 ?x2536 ?x1663 ?x254 ?x255 ?x2537 ?x1667 ?x1668 ?x1669 ?x1670 ?x1671 ?x1672 ?x513 (* 7 (* y y)) ?x3203 ?x1675 ?x1676 (* (- 9) (* x x)) ?x1593 ?x2484 ?x3248 ?x607 ?x1679 ?x3245 ?x802 ?x1680 ?x1681 ?x924 ?x1682 ?x1683 ?x1684 ?x1685 ?x1686 ?x2540 ?x1687 ?x1688 ?x1704 ?x2541)))
 (let ((?x3297 (* (- 6) ?x1785)))
 (let ((?x3296 (* 2 ?x1345)))
 (let ((?x1369 (* 2 ?x1319)))
 (let ((?x1096 (* (- 2) ?x1211)))
 (let ((?x3295 (* 5 ?x1145)))
 (let ((?x3294 (* (- 6) ?x1118)))
 (let ((?x1839 (* (- 2) ?x1010)))
 (let ((?x124 (+ 1 x)))
 (let ((?x203 (+ (- 1) y)))
 (let ((?x979 (* ?x203 ?x203 ?x203 ?x124 ?x124 ?x124)))
 (let ((?x955 (* ?x203 ?x203 ?x203 ?x203 ?x124 ?x124)))
 (let ((?x2178 (* 4 ?x826)))
 (let ((?x1997 (* (- 1) ?x802)))
 (let ((?x576 (* x x)))
 (let ((?x3291 (* 9 ?x576)))
 (let ((?x1441 (* (- 3) ?x567)))
 (let ((?x2322 (* (- 1) ?x412)))
 (let ((?x986 (* (- 1) ?x327)))
 (let ((?x3288 (* 4 ?x315)))
 (let ((?x812 (* (- 1) ?x270)))
 (let ((?x3287 (* 7 ?x241)))
 (let ((?x3286 (* (- 7) ?x235)))
 (let ((?x3285 (* 5 ?x175)))
 (let ((?x3284 (* 7 ?x171)))
 (let ((?x3283 (* (- 6) ?x166)))
 (let ((?x3282 (* (- 7) ?x162)))
 (let ((?x3281 (* 2 ?x154)))
 (let ((?x2239 (* (- 1) ?x148)))
 (let ((?x3280 (* 4 ?x141)))
 (let ((?x3279 (* (- 3) x00)))
 (let ((?x3278 (* (- 3) y00)))
 (let ((?x1409 (+ ?x2111 ?x3249 ?x3278 ?x3279 ?x3280 ?x2239 ?x152 ?x3281 ?x3282 ?x3283 ?x3284 ?x3285 ?x3286 ?x3287 ?x253 ?x812 ?x3288 ?x986 ?x2322 (* (- 7) (* y y)) ?x3203 ?x1675 ?x1441 ?x3291 (* 2 ?x586) ?x2484 ?x3248 ?x1679 ?x3245 ?x1997 ?x1680 ?x2178 ?x924 ?x955 ?x979 ?x1839 ?x3294 ?x3295 ?x1096 ?x1686 ?x1369 ?x3296 ?x1688 ?x1704 ?x3297)))
 (let (($x120 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x120 (or (not (= ?x1409 0)) (not (= ?x3246 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x385 (exists ((x Int) (y Int) )(! (let ((?x1785 (* x x x y)))
 (let ((?x3297 (* (- 6) ?x1785)))
 (let ((?x1564 (* x x x x y)))
 (let ((?x1704 (* (- 2) ?x1564)))
 (let ((?x1380 (* x x y y y x00)))
 (let ((?x1688 (* (- 1) ?x1380)))
 (let ((?x1345 (* x x y y x00)))
 (let ((?x3296 (* 2 ?x1345)))
 (let ((?x1319 (* x x x x)))
 (let ((?x1369 (* 2 ?x1319)))
 (let ((?x1238 (* x x x y x00)))
 (let ((?x1686 (* 2 ?x1238)))
 (let ((?x1211 (* x x x x00)))
 (let ((?x1096 (* (- 2) ?x1211)))
 (let ((?x1145 (* x x y x00)))
 (let ((?x3295 (* 5 ?x1145)))
 (let ((?x1118 (* x x x00)))
 (let ((?x3294 (* (- 6) ?x1118)))
 (let ((?x1010 (* x x x y00)))
 (let ((?x1839 (* (- 2) ?x1010)))
 (let ((?x124 (+ 1 x)))
 (let ((?x203 (+ (- 1) y)))
 (let ((?x979 (* ?x203 ?x203 ?x203 ?x124 ?x124 ?x124)))
 (let ((?x955 (* ?x203 ?x203 ?x203 ?x203 ?x124 ?x124)))
 (let ((?x923 (* x x x y y00)))
 (let ((?x924 (* 2 ?x923)))
 (let ((?x826 (* x y y y)))
 (let ((?x2178 (* 4 ?x826)))
 (let ((?x804 (* x y y y y)))
 (let ((?x1680 (* (- 1) ?x804)))
 (let ((?x802 (* y y y y)))
 (let ((?x1997 (* (- 1) ?x802)))
 (let ((?x782 (* y y y 1)))
 (let ((?x766 (* y 1 1 1)))
 (let ((?x713 (* x x y y y y00)))
 (let ((?x1679 (* (- 1) ?x713)))
 (let ((?x588 (* x x x)))
 (let ((?x2484 (* 7 ?x588)))
 (let ((?x586 (* x y)))
 (let ((?x1593 (* (- 2) ?x586)))
 (let ((?x576 (* x x)))
 (let ((?x3291 (* 9 ?x576)))
 (let ((?x567 (* x x y y)))
 (let ((?x1441 (* (- 3) ?x567)))
 (let ((?x565 (* x x x y y)))
 (let ((?x1675 (* (- 1) ?x565)))
 (let ((?x412 (* x y y y y00)))
 (let ((?x2322 (* (- 1) ?x412)))
 (let ((?x327 (* y y x00)))
 (let ((?x986 (* (- 1) ?x327)))
 (let ((?x315 (* y x00)))
 (let ((?x3288 (* 4 ?x315)))
 (let ((?x270 (* x y y y x00)))
 (let ((?x812 (* (- 1) ?x270)))
 (let ((?x253 (* x y y x00)))
 (let ((?x241 (* x y x00)))
 (let ((?x3287 (* 7 ?x241)))
 (let ((?x235 (* x x00)))
 (let ((?x3286 (* (- 7) ?x235)))
 (let ((?x175 (* x x y y00)))
 (let ((?x3285 (* 5 ?x175)))
 (let ((?x171 (* x y y00)))
 (let ((?x3284 (* 7 ?x171)))
 (let ((?x166 (* x x y00)))
 (let ((?x3283 (* (- 6) ?x166)))
 (let ((?x162 (* x y00)))
 (let ((?x3282 (* (- 7) ?x162)))
 (let ((?x154 (* x x y y y00)))
 (let ((?x3281 (* 2 ?x154)))
 (let ((?x152 (* x y y y00)))
 (let ((?x148 (* y y y00)))
 (let ((?x2239 (* (- 1) ?x148)))
 (let ((?x141 (* y y00)))
 (let ((?x3280 (* 4 ?x141)))
 (let ((?x3279 (* (- 3) x00)))
 (let ((?x3278 (* (- 3) y00)))
 (let ((?x2111 (* 4 x)))
 (let ((?x3298 (+ ?x2111 (* 2 y) ?x3278 ?x3279 ?x3280 ?x2239 ?x152 ?x3281 ?x3282 ?x3283 ?x3284 ?x3285 ?x3286 ?x3287 ?x253 ?x812 ?x3288 ?x986 ?x2322 (* y x x 1) (* y 1 1 x) (* (- 5) (* y y)) (* y 1 x x) (* (- 7) (* x y y)) ?x1675 ?x1441 ?x3291 ?x1593 ?x2484 (* (- 9) (* x x y)) (* y x 1 1) (* y 1 x 1) (* y x 1 x) ?x1679 ?x766 ?x782 (* 3 (* y y y)) ?x1997 ?x1680 ?x2178 ?x924 ?x955 ?x979 ?x1839 ?x3294 ?x3295 ?x1096 ?x1686 (* y (- 1) (- 1) 1) ?x1369 ?x3296 ?x1688 ?x1704 (* y y (- 1) 1) (* y (- 1) y 1) (* y (- 1) (- 1) x) (* y y (- 1) x) (* y (- 1) y x) ?x3297)))
 (let ((?x2541 (* 6 ?x1785)))
 (let ((?x1687 (* (- 4) ?x1345)))
 (let ((?x2540 (* (- 2) ?x1319)))
 (let ((?x1685 (* 2 ?x1211)))
 (let ((?x1684 (* (- 11) ?x1145)))
 (let ((?x1683 (* (- 8) ?x1118)))
 (let ((?x1682 (* 2 ?x1010)))
 (let ((?x1681 (* (- 4) ?x826)))
 (let ((?x799 (* y y y)))
 (let ((?x796 (* y 1 y y)))
 (let ((?x792 (* y y 1 y)))
 (let ((?x789 (* y 1 y)))
 (let ((?x786 (* y 1 1 y)))
 (let ((?x779 (* y y 1)))
 (let ((?x776 (* y 1 y 1)))
 (let ((?x772 (* y y 1 1)))
 (let ((?x769 (* y 1 1)))
 (let ((?x118 (+ 1 y)))
 (let ((?x110 (+ (- 1) x)))
 (let ((?x607 (* ?x110 ?x110 ?x110 ?x118 ?x118 ?x118)))
 (let ((?x1676 (* 3 ?x567)))
 (let ((?x561 (* x (- 1) y y)))
 (let ((?x560 (* x y y)))
 (let ((?x1674 (* (- 8) ?x560)))
 (let ((?x553 (* y y)))
 (let ((?x1673 (* 2 ?x553)))
 (let ((?x550 (* x x 1 y)))
 (let ((?x544 (* x (- 1) 1 y)))
 (let ((?x534 (* x x y 1)))
 (let ((?x531 (* x (- 1) y 1)))
 (let ((?x521 (* x x 1 1)))
 (let ((?x520 (* y 1)))
 (let ((?x518 (* x (- 1) 1 1)))
 (let ((?x513 (* ?x110 ?x110 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x1672 (* 3 ?x412)))
 (let ((?x1671 (* (- 2) (* y y y y00))))
 (let ((?x1670 (* (- 2) (* y y y x00))))
 (let ((?x1669 (* (- 7) ?x327)))
 (let ((?x1668 (* (- 10) ?x315)))
 (let ((?x1667 (* 3 ?x270)))
 (let ((?x2537 (* 11 ?x253)))
 (let ((?x255 (* 19 ?x241)))
 (let ((?x254 (* 11 ?x235)))
 (let ((?x1663 (* (- 11) ?x175)))
 (let ((?x2536 (* 19 ?x171)))
 (let ((?x1659 (* (- 8) ?x166)))
 (let ((?x2483 (* 11 ?x162)))
 (let ((?x1656 (* (- 4) ?x154)))
 (let ((?x2534 (* 11 ?x152)))
 (let ((?x1654 (* (- 7) ?x148)))
 (let ((?x1653 (* (- 10) ?x141)))
 (let ((?x1651 (* (- 5) x00)))
 (let ((?x1650 (* (- 5) y00)))
 (let ((?x2542 (+ (* 5 x) y ?x1650 ?x1651 ?x1653 ?x1654 ?x2534 ?x1656 ?x2483 ?x1659 ?x2536 ?x1663 ?x254 ?x255 ?x2537 ?x1667 ?x1668 ?x1669 ?x1670 ?x1671 ?x1672 ?x513 ?x518 ?x520 ?x521 ?x531 ?x534 ?x544 ?x550 ?x1673 ?x1674 ?x561 ?x1675 ?x1676 (* (- 10) ?x576) ?x2484 (* (- 8) (* x x y)) ?x607 ?x1679 ?x766 ?x769 ?x772 ?x776 ?x779 ?x782 ?x786 ?x789 ?x792 ?x796 ?x799 ?x802 ?x1680 ?x1681 ?x924 ?x1682 ?x1683 ?x1684 ?x1685 ?x1686 ?x2540 ?x1687 ?x1688 ?x1704 ?x2541)))
 (let (($x120 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x120 (or (not (= ?x2542 0)) (not (= ?x3298 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x3095 (lambda ((x Int) (y Int) )(let ((?x1785 (* x x x y)))
 (let ((?x2541 (* 6 ?x1785)))
 (let ((?x1564 (* x x x x y)))
 (let ((?x1704 (* (- 2) ?x1564)))
 (let ((?x1380 (* x x y y y x00)))
 (let ((?x1688 (* (- 1) ?x1380)))
 (let ((?x1345 (* x x y y x00)))
 (let ((?x1687 (* (- 4) ?x1345)))
 (let ((?x1319 (* x x x x)))
 (let ((?x2540 (* (- 2) ?x1319)))
 (let ((?x1238 (* x x x y x00)))
 (let ((?x1686 (* 2 ?x1238)))
 (let ((?x1211 (* x x x x00)))
 (let ((?x1685 (* 2 ?x1211)))
 (let ((?x1145 (* x x y x00)))
 (let ((?x1684 (* (- 11) ?x1145)))
 (let ((?x1118 (* x x x00)))
 (let ((?x1683 (* (- 8) ?x1118)))
 (let ((?x1010 (* x x x y00)))
 (let ((?x1682 (* 2 ?x1010)))
 (let ((?x923 (* x x x y y00)))
 (let ((?x924 (* 2 ?x923)))
 (let ((?x826 (* x y y y)))
 (let ((?x1681 (* (- 4) ?x826)))
 (let ((?x804 (* x y y y y)))
 (let ((?x1680 (* (- 1) ?x804)))
 (let ((?x802 (* y y y y)))
 (let ((?x799 (* y y y)))
 (let ((?x3245 (* 4 ?x799)))
 (let ((?x713 (* x x y y y y00)))
 (let ((?x1679 (* (- 1) ?x713)))
 (let ((?x118 (+ 1 y)))
 (let ((?x110 (+ (- 1) x)))
 (let ((?x607 (* ?x110 ?x110 ?x110 ?x118 ?x118 ?x118)))
 (let ((?x595 (* x x y)))
 (let ((?x3248 (* (- 6) ?x595)))
 (let ((?x588 (* x x x)))
 (let ((?x2484 (* 7 ?x588)))
 (let ((?x586 (* x y)))
 (let ((?x1593 (* (- 2) ?x586)))
 (let ((?x567 (* x x y y)))
 (let ((?x1676 (* 3 ?x567)))
 (let ((?x565 (* x x x y y)))
 (let ((?x1675 (* (- 1) ?x565)))
 (let ((?x560 (* x y y)))
 (let ((?x3203 (* (- 9) ?x560)))
 (let ((?x513 (* ?x110 ?x110 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x412 (* x y y y y00)))
 (let ((?x1672 (* 3 ?x412)))
 (let ((?x1671 (* (- 2) (* y y y y00))))
 (let ((?x1670 (* (- 2) (* y y y x00))))
 (let ((?x327 (* y y x00)))
 (let ((?x1669 (* (- 7) ?x327)))
 (let ((?x315 (* y x00)))
 (let ((?x1668 (* (- 10) ?x315)))
 (let ((?x270 (* x y y y x00)))
 (let ((?x1667 (* 3 ?x270)))
 (let ((?x253 (* x y y x00)))
 (let ((?x2537 (* 11 ?x253)))
 (let ((?x241 (* x y x00)))
 (let ((?x255 (* 19 ?x241)))
 (let ((?x235 (* x x00)))
 (let ((?x254 (* 11 ?x235)))
 (let ((?x175 (* x x y y00)))
 (let ((?x1663 (* (- 11) ?x175)))
 (let ((?x171 (* x y y00)))
 (let ((?x2536 (* 19 ?x171)))
 (let ((?x166 (* x x y00)))
 (let ((?x1659 (* (- 8) ?x166)))
 (let ((?x162 (* x y00)))
 (let ((?x2483 (* 11 ?x162)))
 (let ((?x154 (* x x y y y00)))
 (let ((?x1656 (* (- 4) ?x154)))
 (let ((?x152 (* x y y y00)))
 (let ((?x2534 (* 11 ?x152)))
 (let ((?x148 (* y y y00)))
 (let ((?x1654 (* (- 7) ?x148)))
 (let ((?x141 (* y y00)))
 (let ((?x1653 (* (- 10) ?x141)))
 (let ((?x1651 (* (- 5) x00)))
 (let ((?x1650 (* (- 5) y00)))
 (let ((?x3249 (* 4 y)))
 (let ((?x2111 (* 4 x)))
 (let ((?x3246 (+ ?x2111 ?x3249 ?x1650 ?x1651 ?x1653 ?x1654 ?x2534 ?x1656 ?x2483 ?x1659 ?x2536 ?x1663 ?x254 ?x255 ?x2537 ?x1667 ?x1668 ?x1669 ?x1670 ?x1671 ?x1672 ?x513 (* 7 (* y y)) ?x3203 ?x1675 ?x1676 (* (- 9) (* x x)) ?x1593 ?x2484 ?x3248 ?x607 ?x1679 ?x3245 ?x802 ?x1680 ?x1681 ?x924 ?x1682 ?x1683 ?x1684 ?x1685 ?x1686 ?x2540 ?x1687 ?x1688 ?x1704 ?x2541)))
 (let ((?x3297 (* (- 6) ?x1785)))
 (let ((?x3296 (* 2 ?x1345)))
 (let ((?x1369 (* 2 ?x1319)))
 (let ((?x1096 (* (- 2) ?x1211)))
 (let ((?x3295 (* 5 ?x1145)))
 (let ((?x3294 (* (- 6) ?x1118)))
 (let ((?x1839 (* (- 2) ?x1010)))
 (let ((?x124 (+ 1 x)))
 (let ((?x203 (+ (- 1) y)))
 (let ((?x979 (* ?x203 ?x203 ?x203 ?x124 ?x124 ?x124)))
 (let ((?x955 (* ?x203 ?x203 ?x203 ?x203 ?x124 ?x124)))
 (let ((?x2178 (* 4 ?x826)))
 (let ((?x1997 (* (- 1) ?x802)))
 (let ((?x576 (* x x)))
 (let ((?x3291 (* 9 ?x576)))
 (let ((?x1441 (* (- 3) ?x567)))
 (let ((?x2322 (* (- 1) ?x412)))
 (let ((?x986 (* (- 1) ?x327)))
 (let ((?x3288 (* 4 ?x315)))
 (let ((?x812 (* (- 1) ?x270)))
 (let ((?x3287 (* 7 ?x241)))
 (let ((?x3286 (* (- 7) ?x235)))
 (let ((?x3285 (* 5 ?x175)))
 (let ((?x3284 (* 7 ?x171)))
 (let ((?x3283 (* (- 6) ?x166)))
 (let ((?x3282 (* (- 7) ?x162)))
 (let ((?x3281 (* 2 ?x154)))
 (let ((?x2239 (* (- 1) ?x148)))
 (let ((?x3280 (* 4 ?x141)))
 (let ((?x3279 (* (- 3) x00)))
 (let ((?x3278 (* (- 3) y00)))
 (let ((?x1409 (+ ?x2111 ?x3249 ?x3278 ?x3279 ?x3280 ?x2239 ?x152 ?x3281 ?x3282 ?x3283 ?x3284 ?x3285 ?x3286 ?x3287 ?x253 ?x812 ?x3288 ?x986 ?x2322 (* (- 7) (* y y)) ?x3203 ?x1675 ?x1441 ?x3291 (* 2 ?x586) ?x2484 ?x3248 ?x1679 ?x3245 ?x1997 ?x1680 ?x2178 ?x924 ?x955 ?x979 ?x1839 ?x3294 ?x3295 ?x1096 ?x1686 ?x1369 ?x3296 ?x1688 ?x1704 ?x3297)))
 (let (($x120 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x3212 (and $x120 (or (not (= ?x1409 0)) (not (= ?x3246 0))))))
 (let ((?x782 (* y y y 1)))
 (let ((?x766 (* y 1 1 1)))
 (let ((?x3298 (+ ?x2111 (* 2 y) ?x3278 ?x3279 ?x3280 ?x2239 ?x152 ?x3281 ?x3282 ?x3283 ?x3284 ?x3285 ?x3286 ?x3287 ?x253 ?x812 ?x3288 ?x986 ?x2322 (* y x x 1) (* y 1 1 x) (* (- 5) (* y y)) (* y 1 x x) (* (- 7) ?x560) ?x1675 ?x1441 ?x3291 ?x1593 ?x2484 (* (- 9) ?x595) (* y x 1 1) (* y 1 x 1) (* y x 1 x) ?x1679 ?x766 ?x782 (* 3 ?x799) ?x1997 ?x1680 ?x2178 ?x924 ?x955 ?x979 ?x1839 ?x3294 ?x3295 ?x1096 ?x1686 (* y (- 1) (- 1) 1) ?x1369 ?x3296 ?x1688 ?x1704 (* y y (- 1) 1) (* y (- 1) y 1) (* y (- 1) (- 1) x) (* y y (- 1) x) (* y (- 1) y x) ?x3297)))
 (let ((?x796 (* y 1 y y)))
 (let ((?x792 (* y y 1 y)))
 (let ((?x789 (* y 1 y)))
 (let ((?x786 (* y 1 1 y)))
 (let ((?x779 (* y y 1)))
 (let ((?x776 (* y 1 y 1)))
 (let ((?x772 (* y y 1 1)))
 (let ((?x769 (* y 1 1)))
 (let ((?x561 (* x (- 1) y y)))
 (let ((?x1674 (* (- 8) ?x560)))
 (let ((?x553 (* y y)))
 (let ((?x1673 (* 2 ?x553)))
 (let ((?x550 (* x x 1 y)))
 (let ((?x544 (* x (- 1) 1 y)))
 (let ((?x534 (* x x y 1)))
 (let ((?x531 (* x (- 1) y 1)))
 (let ((?x521 (* x x 1 1)))
 (let ((?x520 (* y 1)))
 (let ((?x518 (* x (- 1) 1 1)))
 (let ((?x2542 (+ (* 5 x) y ?x1650 ?x1651 ?x1653 ?x1654 ?x2534 ?x1656 ?x2483 ?x1659 ?x2536 ?x1663 ?x254 ?x255 ?x2537 ?x1667 ?x1668 ?x1669 ?x1670 ?x1671 ?x1672 ?x513 ?x518 ?x520 ?x521 ?x531 ?x534 ?x544 ?x550 ?x1673 ?x1674 ?x561 ?x1675 ?x1676 (* (- 10) ?x576) ?x2484 (* (- 8) ?x595) ?x607 ?x1679 ?x766 ?x769 ?x772 ?x776 ?x779 ?x782 ?x786 ?x789 ?x792 ?x796 ?x799 ?x802 ?x1680 ?x1681 ?x924 ?x1682 ?x1683 ?x1684 ?x1685 ?x1686 ?x2540 ?x1687 ?x1688 ?x1704 ?x2541)))
 (let (($x1751 (and $x120 (or (not (= ?x2542 0)) (not (= ?x3298 0))))))
 (rewrite (= $x1751 $x3212)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1134 (exists ((x Int) (y Int) )(! (let ((?x124 (+ 1 x)))
 (let ((?x203 (+ (- 1) y)))
 (let ((?x801 (+ (* y00 ?x203 ?x203 ?x124 ?x124) (* (- 1) (* x00 ?x203 ?x203 ?x203 ?x124)) (* (- 1) (* y00 ?x203 ?x203 ?x203 ?x124)) (* (- 1) (* ?x203 ?x203 ?x203 ?x203 ?x124 ?x124)) (* (- 1) (* ?x203 ?x203 ?x203 ?x124 ?x124 ?x124)) (* ?x203 ?x203 ?x124 ?x124 ?x124) (* y00 ?x203 ?x203 ?x203 ?x124 ?x124) (* ?x203 ?x203 ?x203 ?x203 ?x124) (* (- 2) (* y00 ?x203 ?x124 ?x124 ?x124)) (* (- 2) (* x00 ?x203 ?x124 ?x124 ?x124)) (* x00 ?x203 ?x203 ?x203 ?x124 ?x124) (* x00 ?x203 ?x203 ?x124 ?x124) (* 2 (* ?x203 ?x124 ?x124 ?x124 ?x124)))))
 (let ((?x118 (+ 1 y)))
 (let ((?x110 (+ (- 1) x)))
 (let ((?x551 (+ (* y00 ?x110 ?x110 ?x118 ?x118) (* (- 1) (* x00 ?x110 ?x118 ?x118 ?x118)) (* (- 1) (* y00 ?x110 ?x118 ?x118 ?x118)) (* (- 1) (* ?x110 ?x110 ?x118 ?x118 ?x118 ?x118)) (* (- 1) (* ?x110 ?x110 ?x110 ?x118 ?x118 ?x118)) (* ?x110 ?x110 ?x110 ?x118 ?x118) (* y00 ?x110 ?x110 ?x118 ?x118 ?x118) (* ?x110 ?x118 ?x118 ?x118 ?x118) (* (- 2) (* y00 ?x110 ?x110 ?x110 ?x118)) (* (- 2) (* x00 ?x110 ?x110 ?x110 ?x118)) (* x00 ?x110 ?x110 ?x118 ?x118 ?x118) (* x00 ?x110 ?x110 ?x118 ?x118) (* 2 (* ?x110 ?x110 ?x110 ?x110 ?x118)))))
 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x551 0)) (not (= ?x801 0)))))))))) :qid k!27))
 ))
 (let ((?x288 (lambda ((x Int) (y Int) )(let ((?x1785 (* x x x y)))
 (let ((?x3297 (* (- 6) ?x1785)))
 (let ((?x1564 (* x x x x y)))
 (let ((?x1704 (* (- 2) ?x1564)))
 (let ((?x1380 (* x x y y y x00)))
 (let ((?x1688 (* (- 1) ?x1380)))
 (let ((?x1345 (* x x y y x00)))
 (let ((?x3296 (* 2 ?x1345)))
 (let ((?x1319 (* x x x x)))
 (let ((?x1369 (* 2 ?x1319)))
 (let ((?x1238 (* x x x y x00)))
 (let ((?x1686 (* 2 ?x1238)))
 (let ((?x1211 (* x x x x00)))
 (let ((?x1096 (* (- 2) ?x1211)))
 (let ((?x1145 (* x x y x00)))
 (let ((?x3295 (* 5 ?x1145)))
 (let ((?x1118 (* x x x00)))
 (let ((?x3294 (* (- 6) ?x1118)))
 (let ((?x1010 (* x x x y00)))
 (let ((?x1839 (* (- 2) ?x1010)))
 (let ((?x124 (+ 1 x)))
 (let ((?x203 (+ (- 1) y)))
 (let ((?x979 (* ?x203 ?x203 ?x203 ?x124 ?x124 ?x124)))
 (let ((?x955 (* ?x203 ?x203 ?x203 ?x203 ?x124 ?x124)))
 (let ((?x923 (* x x x y y00)))
 (let ((?x924 (* 2 ?x923)))
 (let ((?x826 (* x y y y)))
 (let ((?x2178 (* 4 ?x826)))
 (let ((?x804 (* x y y y y)))
 (let ((?x1680 (* (- 1) ?x804)))
 (let ((?x802 (* y y y y)))
 (let ((?x1997 (* (- 1) ?x802)))
 (let ((?x782 (* y y y 1)))
 (let ((?x766 (* y 1 1 1)))
 (let ((?x713 (* x x y y y y00)))
 (let ((?x1679 (* (- 1) ?x713)))
 (let ((?x588 (* x x x)))
 (let ((?x2484 (* 7 ?x588)))
 (let ((?x586 (* x y)))
 (let ((?x1593 (* (- 2) ?x586)))
 (let ((?x576 (* x x)))
 (let ((?x3291 (* 9 ?x576)))
 (let ((?x567 (* x x y y)))
 (let ((?x1441 (* (- 3) ?x567)))
 (let ((?x565 (* x x x y y)))
 (let ((?x1675 (* (- 1) ?x565)))
 (let ((?x412 (* x y y y y00)))
 (let ((?x2322 (* (- 1) ?x412)))
 (let ((?x327 (* y y x00)))
 (let ((?x986 (* (- 1) ?x327)))
 (let ((?x315 (* y x00)))
 (let ((?x3288 (* 4 ?x315)))
 (let ((?x270 (* x y y y x00)))
 (let ((?x812 (* (- 1) ?x270)))
 (let ((?x253 (* x y y x00)))
 (let ((?x241 (* x y x00)))
 (let ((?x3287 (* 7 ?x241)))
 (let ((?x235 (* x x00)))
 (let ((?x3286 (* (- 7) ?x235)))
 (let ((?x175 (* x x y y00)))
 (let ((?x3285 (* 5 ?x175)))
 (let ((?x171 (* x y y00)))
 (let ((?x3284 (* 7 ?x171)))
 (let ((?x166 (* x x y00)))
 (let ((?x3283 (* (- 6) ?x166)))
 (let ((?x162 (* x y00)))
 (let ((?x3282 (* (- 7) ?x162)))
 (let ((?x154 (* x x y y y00)))
 (let ((?x3281 (* 2 ?x154)))
 (let ((?x152 (* x y y y00)))
 (let ((?x148 (* y y y00)))
 (let ((?x2239 (* (- 1) ?x148)))
 (let ((?x141 (* y y00)))
 (let ((?x3280 (* 4 ?x141)))
 (let ((?x3279 (* (- 3) x00)))
 (let ((?x3278 (* (- 3) y00)))
 (let ((?x2111 (* 4 x)))
 (let ((?x3298 (+ ?x2111 (* 2 y) ?x3278 ?x3279 ?x3280 ?x2239 ?x152 ?x3281 ?x3282 ?x3283 ?x3284 ?x3285 ?x3286 ?x3287 ?x253 ?x812 ?x3288 ?x986 ?x2322 (* y x x 1) (* y 1 1 x) (* (- 5) (* y y)) (* y 1 x x) (* (- 7) (* x y y)) ?x1675 ?x1441 ?x3291 ?x1593 ?x2484 (* (- 9) (* x x y)) (* y x 1 1) (* y 1 x 1) (* y x 1 x) ?x1679 ?x766 ?x782 (* 3 (* y y y)) ?x1997 ?x1680 ?x2178 ?x924 ?x955 ?x979 ?x1839 ?x3294 ?x3295 ?x1096 ?x1686 (* y (- 1) (- 1) 1) ?x1369 ?x3296 ?x1688 ?x1704 (* y y (- 1) 1) (* y (- 1) y 1) (* y (- 1) (- 1) x) (* y y (- 1) x) (* y (- 1) y x) ?x3297)))
 (let ((?x2541 (* 6 ?x1785)))
 (let ((?x1687 (* (- 4) ?x1345)))
 (let ((?x2540 (* (- 2) ?x1319)))
 (let ((?x1685 (* 2 ?x1211)))
 (let ((?x1684 (* (- 11) ?x1145)))
 (let ((?x1683 (* (- 8) ?x1118)))
 (let ((?x1682 (* 2 ?x1010)))
 (let ((?x1681 (* (- 4) ?x826)))
 (let ((?x799 (* y y y)))
 (let ((?x796 (* y 1 y y)))
 (let ((?x792 (* y y 1 y)))
 (let ((?x789 (* y 1 y)))
 (let ((?x786 (* y 1 1 y)))
 (let ((?x779 (* y y 1)))
 (let ((?x776 (* y 1 y 1)))
 (let ((?x772 (* y y 1 1)))
 (let ((?x769 (* y 1 1)))
 (let ((?x118 (+ 1 y)))
 (let ((?x110 (+ (- 1) x)))
 (let ((?x607 (* ?x110 ?x110 ?x110 ?x118 ?x118 ?x118)))
 (let ((?x1676 (* 3 ?x567)))
 (let ((?x561 (* x (- 1) y y)))
 (let ((?x560 (* x y y)))
 (let ((?x1674 (* (- 8) ?x560)))
 (let ((?x553 (* y y)))
 (let ((?x1673 (* 2 ?x553)))
 (let ((?x550 (* x x 1 y)))
 (let ((?x544 (* x (- 1) 1 y)))
 (let ((?x534 (* x x y 1)))
 (let ((?x531 (* x (- 1) y 1)))
 (let ((?x521 (* x x 1 1)))
 (let ((?x520 (* y 1)))
 (let ((?x518 (* x (- 1) 1 1)))
 (let ((?x513 (* ?x110 ?x110 ?x118 ?x118 ?x118 ?x118)))
 (let ((?x1672 (* 3 ?x412)))
 (let ((?x1671 (* (- 2) (* y y y y00))))
 (let ((?x1670 (* (- 2) (* y y y x00))))
 (let ((?x1669 (* (- 7) ?x327)))
 (let ((?x1668 (* (- 10) ?x315)))
 (let ((?x1667 (* 3 ?x270)))
 (let ((?x2537 (* 11 ?x253)))
 (let ((?x255 (* 19 ?x241)))
 (let ((?x254 (* 11 ?x235)))
 (let ((?x1663 (* (- 11) ?x175)))
 (let ((?x2536 (* 19 ?x171)))
 (let ((?x1659 (* (- 8) ?x166)))
 (let ((?x2483 (* 11 ?x162)))
 (let ((?x1656 (* (- 4) ?x154)))
 (let ((?x2534 (* 11 ?x152)))
 (let ((?x1654 (* (- 7) ?x148)))
 (let ((?x1653 (* (- 10) ?x141)))
 (let ((?x1651 (* (- 5) x00)))
 (let ((?x1650 (* (- 5) y00)))
 (let ((?x2542 (+ (* 5 x) y ?x1650 ?x1651 ?x1653 ?x1654 ?x2534 ?x1656 ?x2483 ?x1659 ?x2536 ?x1663 ?x254 ?x255 ?x2537 ?x1667 ?x1668 ?x1669 ?x1670 ?x1671 ?x1672 ?x513 ?x518 ?x520 ?x521 ?x531 ?x534 ?x544 ?x550 ?x1673 ?x1674 ?x561 ?x1675 ?x1676 (* (- 10) ?x576) ?x2484 (* (- 8) (* x x y)) ?x607 ?x1679 ?x766 ?x769 ?x772 ?x776 ?x779 ?x782 ?x786 ?x789 ?x792 ?x796 ?x799 ?x802 ?x1680 ?x1681 ?x924 ?x1682 ?x1683 ?x1684 ?x1685 ?x1686 ?x2540 ?x1687 ?x1688 ?x1704 ?x2541)))
 (let (($x120 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x1751 (and $x120 (or (not (= ?x2542 0)) (not (= ?x3298 0))))))
 (let ((?x801 (+ (* y00 ?x203 ?x203 ?x124 ?x124) (* (- 1) (* x00 ?x203 ?x203 ?x203 ?x124)) (* (- 1) (* y00 ?x203 ?x203 ?x203 ?x124)) (* (- 1) ?x955) (* (- 1) ?x979) (* ?x203 ?x203 ?x124 ?x124 ?x124) (* y00 ?x203 ?x203 ?x203 ?x124 ?x124) (* ?x203 ?x203 ?x203 ?x203 ?x124) (* (- 2) (* y00 ?x203 ?x124 ?x124 ?x124)) (* (- 2) (* x00 ?x203 ?x124 ?x124 ?x124)) (* x00 ?x203 ?x203 ?x203 ?x124 ?x124) (* x00 ?x203 ?x203 ?x124 ?x124) (* 2 (* ?x203 ?x124 ?x124 ?x124 ?x124)))))
 (let ((?x551 (+ (* y00 ?x110 ?x110 ?x118 ?x118) (* (- 1) (* x00 ?x110 ?x118 ?x118 ?x118)) (* (- 1) (* y00 ?x110 ?x118 ?x118 ?x118)) (* (- 1) ?x513) (* (- 1) ?x607) (* ?x110 ?x110 ?x110 ?x118 ?x118) (* y00 ?x110 ?x110 ?x118 ?x118 ?x118) (* ?x110 ?x118 ?x118 ?x118 ?x118) (* (- 2) (* y00 ?x110 ?x110 ?x110 ?x118)) (* (- 2) (* x00 ?x110 ?x110 ?x110 ?x118)) (* x00 ?x110 ?x110 ?x118 ?x118 ?x118) (* x00 ?x110 ?x110 ?x118 ?x118) (* 2 (* ?x110 ?x110 ?x110 ?x110 ?x118)))))
 (let (($x458 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x551 0)) (not (= ?x801 0))))))
 (rewrite (= $x458 $x1751))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x91 (exists ((x Int) (y Int) )(! (let ((?x63 (- y 1)))
 (let ((?x62 (+ x 1)))
 (let ((?x68 (+ (- (* ?x62 ?x62 ?x63 ?x63 y00) (* ?x62 x00 ?x63 ?x63 ?x63)) (* 0 ?x62 ?x62 ?x63 ?x63 ?x63))))
 (let ((?x73 (- (- ?x68 (* ?x62 ?x63 ?x63 ?x63 y00)) (* ?x62 ?x62 ?x63 ?x63 ?x63 ?x63))))
 (let ((?x78 (+ (- ?x73 (* ?x62 ?x62 ?x62 ?x63 ?x63 ?x63)) (* ?x62 ?x62 ?x62 ?x63 ?x63) (* ?x62 ?x62 ?x63 ?x63 ?x63 y00) (* ?x62 ?x63 ?x63 ?x63 ?x63))))
 (let ((?x82 (- (- ?x78 (* 2 ?x62 ?x62 ?x62 ?x63 y00)) (* 2 ?x62 ?x62 ?x62 x00 ?x63))))
 (let ((?x86 (+ ?x82 (* ?x62 ?x62 x00 ?x63 ?x63 ?x63) (* ?x62 ?x62 x00 ?x63 ?x63) (* 2 ?x62 ?x62 ?x62 ?x62 ?x63))))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x40 (+ (- (* ?x34 ?x34 ?x35 ?x35 y00) (* ?x34 x00 ?x35 ?x35 ?x35)) (* 0 ?x34 ?x34 ?x35 ?x35 ?x35))))
 (let ((?x45 (- (- ?x40 (* ?x34 ?x35 ?x35 ?x35 y00)) (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x50 (+ (- ?x45 (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35) (* ?x34 ?x34 ?x35 ?x35 ?x35 y00) (* ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x55 (- (- ?x50 (* 2 ?x34 ?x34 ?x34 ?x35 y00)) (* 2 ?x34 ?x34 ?x34 x00 ?x35))))
 (let ((?x59 (+ ?x55 (* ?x34 ?x34 x00 ?x35 ?x35 ?x35) (* ?x34 ?x34 x00 ?x35 ?x35) (* 2 ?x34 ?x34 ?x34 ?x34 ?x35))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x59 0)) (not (= ?x86 0)))))))))))))))))) :qid k!27))
 ))
 (let ((?x466 (lambda ((x Int) (y Int) )(let ((?x124 (+ 1 x)))
 (let ((?x203 (+ (- 1) y)))
 (let ((?x801 (+ (* y00 ?x203 ?x203 ?x124 ?x124) (* (- 1) (* x00 ?x203 ?x203 ?x203 ?x124)) (* (- 1) (* y00 ?x203 ?x203 ?x203 ?x124)) (* (- 1) (* ?x203 ?x203 ?x203 ?x203 ?x124 ?x124)) (* (- 1) (* ?x203 ?x203 ?x203 ?x124 ?x124 ?x124)) (* ?x203 ?x203 ?x124 ?x124 ?x124) (* y00 ?x203 ?x203 ?x203 ?x124 ?x124) (* ?x203 ?x203 ?x203 ?x203 ?x124) (* (- 2) (* y00 ?x203 ?x124 ?x124 ?x124)) (* (- 2) (* x00 ?x203 ?x124 ?x124 ?x124)) (* x00 ?x203 ?x203 ?x203 ?x124 ?x124) (* x00 ?x203 ?x203 ?x124 ?x124) (* 2 (* ?x203 ?x124 ?x124 ?x124 ?x124)))))
 (let ((?x118 (+ 1 y)))
 (let ((?x110 (+ (- 1) x)))
 (let ((?x551 (+ (* y00 ?x110 ?x110 ?x118 ?x118) (* (- 1) (* x00 ?x110 ?x118 ?x118 ?x118)) (* (- 1) (* y00 ?x110 ?x118 ?x118 ?x118)) (* (- 1) (* ?x110 ?x110 ?x118 ?x118 ?x118 ?x118)) (* (- 1) (* ?x110 ?x110 ?x110 ?x118 ?x118 ?x118)) (* ?x110 ?x110 ?x110 ?x118 ?x118) (* y00 ?x110 ?x110 ?x118 ?x118 ?x118) (* ?x110 ?x118 ?x118 ?x118 ?x118) (* (- 2) (* y00 ?x110 ?x110 ?x110 ?x118)) (* (- 2) (* x00 ?x110 ?x110 ?x110 ?x118)) (* x00 ?x110 ?x110 ?x118 ?x118 ?x118) (* x00 ?x110 ?x110 ?x118 ?x118) (* 2 (* ?x110 ?x110 ?x110 ?x110 ?x118)))))
 (let (($x458 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x551 0)) (not (= ?x801 0))))))
 (let ((?x63 (- y 1)))
 (let ((?x62 (+ x 1)))
 (let ((?x68 (+ (- (* ?x62 ?x62 ?x63 ?x63 y00) (* ?x62 x00 ?x63 ?x63 ?x63)) (* 0 ?x62 ?x62 ?x63 ?x63 ?x63))))
 (let ((?x73 (- (- ?x68 (* ?x62 ?x63 ?x63 ?x63 y00)) (* ?x62 ?x62 ?x63 ?x63 ?x63 ?x63))))
 (let ((?x78 (+ (- ?x73 (* ?x62 ?x62 ?x62 ?x63 ?x63 ?x63)) (* ?x62 ?x62 ?x62 ?x63 ?x63) (* ?x62 ?x62 ?x63 ?x63 ?x63 y00) (* ?x62 ?x63 ?x63 ?x63 ?x63))))
 (let ((?x82 (- (- ?x78 (* 2 ?x62 ?x62 ?x62 ?x63 y00)) (* 2 ?x62 ?x62 ?x62 x00 ?x63))))
 (let ((?x86 (+ ?x82 (* ?x62 ?x62 x00 ?x63 ?x63 ?x63) (* ?x62 ?x62 x00 ?x63 ?x63) (* 2 ?x62 ?x62 ?x62 ?x62 ?x63))))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x40 (+ (- (* ?x34 ?x34 ?x35 ?x35 y00) (* ?x34 x00 ?x35 ?x35 ?x35)) (* 0 ?x34 ?x34 ?x35 ?x35 ?x35))))
 (let ((?x45 (- (- ?x40 (* ?x34 ?x35 ?x35 ?x35 y00)) (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x50 (+ (- ?x45 (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x34 ?x34 ?x35 ?x35) (* ?x34 ?x34 ?x35 ?x35 ?x35 y00) (* ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x55 (- (- ?x50 (* 2 ?x34 ?x34 ?x34 ?x35 y00)) (* 2 ?x34 ?x34 ?x34 x00 ?x35))))
 (let ((?x59 (+ ?x55 (* ?x34 ?x34 x00 ?x35 ?x35 ?x35) (* ?x34 ?x34 x00 ?x35 ?x35) (* 2 ?x34 ?x34 ?x34 ?x34 ?x35))))
 (let (($x90 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x59 0)) (not (= ?x86 0))))))
 (rewrite (= $x90 $x458)))))))))))))))))))))))))
 ))
 (let ((@x92 (asserted $x91)))
 (let ((@x800 (mp (mp @x92 (quant-intro (proof-bind ?x466) (= $x91 $x1134)) $x1134) (rewrite (= $x1134 $x1134)) $x1134)))
 (let ((@x3086 (mp (mp @x800 (quant-intro (proof-bind ?x288) (= $x1134 $x385)) $x385) (quant-intro (proof-bind ?x3095) (= $x385 $x3250)) $x3250)))
 (let ((@x1742 (mp (mp~ @x3086 (sk (~ $x3250 $x2174)) $x2174) (rewrite (= $x2174 $x509)) $x509)))
 (let ((@x1951 (and-elim @x1742 $x1992)))
 (let ((@x309 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1992) $x2134)) @x1951 $x2134)))
 (let (($x419 (>= ?x2128 0)))
 (let ((@x1772 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1992) $x419)) @x1951 $x419)))
 (let (($x1265 (<= ?x134 0)))
 (let ((@x1000 ((_ th-lemma arith) (hypothesis (not $x1265)) @x1772 @x309 @x1772 @x309 @x1772 @x309 @x1772 @x309 @x1772 @x309 false)))
 (let ((@x1247 (lemma @x1000 $x1265)))
 (let (($x1274 (>= ?x134 0)))
 (let ((@x3220 (lemma ((_ th-lemma arith) (hypothesis (not $x1274)) @x1772 @x309 @x1772 @x309 false) $x1274)))
 (let (($x3218 (not (<= ?x2165 0))))
 (let ((@x536 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x496 (not $x1265) (not $x1274))) @x1247 @x3220 $x496)))
 (let (($x151 (>= ?x2165 0)))
 (let ((@x749 ((_ th-lemma arith) (hypothesis (not $x151)) @x1772 @x309 @x1772 @x309 @x1772 @x309 @x1772 @x309 @x3220 @x1247 @x1772 @x309 false)))
 (let ((@x2325 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2230 $x3218 (not $x151))) (lemma @x749 $x151) (unit-resolution (and-elim @x1742 $x2177) @x536 $x2233) $x3218)))
 ((_ th-lemma arith) @x2325 @x1772 @x309 @x1772 @x309 @x1772 @x309 @x1772 @x309 @x3220 @x1247 @x1772 @x309 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        4
 :arith-assert-lower        32
 :arith-assert-upper        8
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-grobner             4
 :arith-max-min             821
 :arith-nonlinear-bounds    27
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-pivots              4
 :arith-row-summations      6
 :arith-tableau-max-columns 78
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 5
 :del-clause                3
 :final-checks              8
 :max-memory                4.15
 :memory                    3.50
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                2210356
 :num-checks                1
 :propagations              13
 :rlimit-count              20764
 :time                      0.02
 :total-time                0.03)
