unsat
((set-logic NIA)
(declare-fun a!4 () Int)
(declare-fun s!0 () Int)
(declare-fun r!1 () Int)
(declare-fun b!2 () Int)
(declare-fun q!3 () Int)
(declare-fun p!5 () Int)
(proof
(let ((?x286 (* b!2 r!1)))
 (let ((?x122 (* s00 a00)))
 (let ((?x210 (+ ?x122 (* (- 1) (* r00 b00)) ?x286 (* (- 1) (* s!0 a!4)))))
 (let (($x336 (>= ?x210 0)))
 (let (($x321 (= ?x210 0)))
 (let ((?x325 (* s!0 a!4)))
 (let ((?x556 (* (- 1) ?x286)))
 (let ((?x140 (* r00 b00)))
 (let ((?x129 (* (- 1) ?x122)))
 (let ((?x316 (+ ?x129 ?x140 ?x556 ?x325)))
 (let ((?x113 (+ p!5 (* (- 1) q!3))))
 (let ((?x629 (+ a!4 (* (- 1) b!2))))
 (let ((?x537 (* (- 1) s!0)))
 (let ((?x675 (+ ?x537 r!1)))
 (let ((?x671 (* ?x675 ?x675 ?x629 ?x629 ?x629 ?x113 ?x113 ?x113 ?x113 ?x316 s!0 s!0 s!0 b!2 b!2 b!2 b!2 b!2 q!3 q!3 q!3 q!3 q!3)))
 (let (($x649 (= ?x671 0)))
 (let ((?x229 (+ (* (- 1) p!5) q!3)))
 (let ((?x190 (+ (* (- 1) a!4) b!2)))
 (let ((?x560 (* (- 1) r!1)))
 (let ((?x218 (+ s!0 ?x560)))
 (let ((?x657 (* ?x218 ?x218 ?x218 ?x190 ?x190 ?x190 ?x190 ?x190 ?x229 ?x229 ?x229 ?x229 ?x229 ?x316 r!1 r!1 a!4 a!4 a!4 p!5 p!5 p!5 p!5)))
 (let (($x605 (= ?x657 0)))
 (let (($x535 (not $x605)))
 (let (($x683 (or $x535 (not $x649))))
 (let ((?x599 (+ (* q00 r00 b!2) (* (- 1) (* p00 s00 b!2)) (* (- 1) (* r00 b00 q!3)) (* s00 a00 q!3) (* p00 b00 s!0) (* (- 1) (* q00 a00 s!0)))))
 (let ((?x653 (+ (* r00 b00 p!5) (* p00 s00 a!4) (* (- 1) (* q00 r00 a!4)) (* q00 a00 r!1) (* (- 1) (* s00 a00 p!5)) (* (- 1) (* p00 b00 r!1)))))
 (let ((?x548 (* p!5 b!2)))
 (let ((?x128 (* q00 a00)))
 (let (($x146 (= (+ ?x128 (* (- 1) (* p00 b00)) (* (- 1) (* a!4 q!3)) ?x548) 0)))
 (let ((?x158 (* q!3 r!1)))
 (let ((?x41 (* q00 r00)))
 (let ((?x277 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x684 (and (= (+ ?x37 ?x277 ?x158 (* (- 1) (* s!0 p!5))) 0) $x321 $x146 (= ?x653 0) (= ?x599 0) $x683)))
 (let ((?x246 (+ (* a!4 s!0) ?x556 ?x129 ?x140)))
 (let ((?x536 (+ r!1 ?x537)))
 (let ((?x143 (* ?x536 ?x536 ?x629 ?x629 ?x629 ?x113 ?x113 ?x113 ?x113 ?x246 s!0 s!0 s!0 b!2 b!2 b!2 b!2 b!2 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x558 (+ ?x560 s!0)))
 (let ((?x245 (* ?x558 ?x558 ?x558 ?x190 ?x190 ?x190 ?x190 ?x190 ?x229 ?x229 ?x229 ?x229 ?x229 ?x246 r!1 r!1 a!4 a!4 a!4 p!5 p!5 p!5 p!5)))
 (let ((?x127 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x230 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let (($x532 (= (+ (* a!4 q!3) (* (- 1) ?x128) (* p00 b00) (* (- 1) ?x548)) 0)))
 (let (($x547 (and (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) ?x158)) 0) (= ?x246 0) $x532 (= ?x230 0) (= ?x127 0) (or (not (= ?x245 0)) (not (= ?x143 0))))))
 (let (($x170 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x140 (* r00 b00)))
 (let ((?x122 (* s00 a00)))
 (let ((?x129 (* (- 1) ?x122)))
 (let ((?x117 (* (- 1) (* b r))))
 (let ((?x49 (* a s)))
 (let ((?x147 (+ ?x49 ?x117 ?x129 ?x140)))
 (let ((?x328 (+ p (* (- 1) q))))
 (let ((?x291 (+ a (* (- 1) b))))
 (let ((?x252 (* (- 1) s)))
 (let ((?x254 (+ r ?x252)))
 (let ((?x652 (* ?x254 ?x254 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x147 s s s b b b b b q q q q q)))
 (let ((?x528 (* (- 1) p)))
 (let ((?x524 (+ ?x528 q)))
 (let ((?x255 (* (- 1) a)))
 (let ((?x267 (+ ?x255 b)))
 (let ((?x338 (* (- 1) r)))
 (let ((?x568 (+ ?x338 s)))
 (let ((?x604 (* ?x568 ?x568 ?x568 ?x267 ?x267 ?x267 ?x267 ?x267 ?x524 ?x524 ?x524 ?x524 ?x524 ?x147 r r a a a p p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x306 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x311 (= ?x306 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x242 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x243 (= ?x242 0)))
 (let ((?x133 (* p00 b00)))
 (let ((?x128 (* q00 a00)))
 (let ((?x174 (* (- 1) ?x128)))
 (let (($x177 (= (+ (* a q) ?x174 ?x133 (* (- 1) (* p b))) 0)))
 (let (($x155 (= ?x147 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x131 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x150 (= (+ ?x33 ?x131 ?x41 (* (- 1) (* q r))) 0)))
 (and $x150 $x155 $x177 $x243 $x311 (or (not (= ?x604 0)) (not (= ?x652 0)))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x541 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x119 (* (- 1) ?x47)))
 (let ((?x312 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x119 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x328 (+ p (* (- 1) q))))
 (let ((?x291 (+ a (* (- 1) b))))
 (let ((?x252 (* (- 1) s)))
 (let ((?x254 (+ r ?x252)))
 (let ((?x213 (* ?x254 ?x254 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x312 s s s b b b b b q q q q q)))
 (let ((?x223 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x119 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x528 (* (- 1) p)))
 (let ((?x236 (+ q ?x528)))
 (let ((?x255 (* (- 1) a)))
 (let ((?x540 (+ b ?x255)))
 (let ((?x338 (* (- 1) r)))
 (let ((?x182 (+ s ?x338)))
 (let ((?x120 (* ?x182 ?x182 ?x182 ?x540 ?x540 ?x540 ?x540 ?x540 ?x236 ?x236 ?x236 ?x236 ?x236 ?x223 r r a a a p p p p)))
 (let (($x527 (or (not (= ?x120 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x206 (= ?x197 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x543 (* p00 s00 a)))
 (let ((?x124 (* b00 r00 p)))
 (let ((?x296 (+ ?x124 ?x543 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x302 (* q a)))
 (let (($x308 (= (+ ?x302 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x339 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x277 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x301 (* r q)))
 (and (= (+ ?x301 (* (- 1) (* s p)) ?x37 ?x277) 0) $x339 $x308 (= ?x296 0) $x206 $x527)))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x173 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x140 (* r00 b00)))
 (let ((?x122 (* s00 a00)))
 (let ((?x129 (* (- 1) ?x122)))
 (let ((?x117 (* (- 1) (* b r))))
 (let ((?x49 (* a s)))
 (let ((?x147 (+ ?x49 ?x117 ?x129 ?x140)))
 (let ((?x328 (+ p (* (- 1) q))))
 (let ((?x291 (+ a (* (- 1) b))))
 (let ((?x252 (* (- 1) s)))
 (let ((?x254 (+ r ?x252)))
 (let ((?x652 (* ?x254 ?x254 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x147 s s s b b b b b q q q q q)))
 (let ((?x528 (* (- 1) p)))
 (let ((?x524 (+ ?x528 q)))
 (let ((?x255 (* (- 1) a)))
 (let ((?x267 (+ ?x255 b)))
 (let ((?x338 (* (- 1) r)))
 (let ((?x568 (+ ?x338 s)))
 (let ((?x604 (* ?x568 ?x568 ?x568 ?x267 ?x267 ?x267 ?x267 ?x267 ?x524 ?x524 ?x524 ?x524 ?x524 ?x147 r r a a a p p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x306 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x311 (= ?x306 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x242 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x243 (= ?x242 0)))
 (let ((?x133 (* p00 b00)))
 (let ((?x128 (* q00 a00)))
 (let ((?x174 (* (- 1) ?x128)))
 (let (($x177 (= (+ (* a q) ?x174 ?x133 (* (- 1) (* p b))) 0)))
 (let (($x155 (= ?x147 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x131 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x150 (= (+ ?x33 ?x131 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x669 (and $x150 $x155 $x177 $x243 $x311 (or (not (= ?x604 0)) (not (= ?x652 0))))))
 (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x119 (* (- 1) ?x47)))
 (let ((?x213 (* ?x254 ?x254 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 (+ (* (- 1) (* ?x254 b)) ?x119 (* ?x291 s) ?x51) s s s b b b b b q q q q q)))
 (let ((?x223 (+ (* (- 1) (* (+ b ?x255) r)) ?x119 (* (+ s ?x338) a) ?x51)))
 (let ((?x236 (+ q ?x528)))
 (let ((?x540 (+ b ?x255)))
 (let ((?x182 (+ s ?x338)))
 (let ((?x120 (* ?x182 ?x182 ?x182 ?x540 ?x540 ?x540 ?x540 ?x540 ?x236 ?x236 ?x236 ?x236 ?x236 ?x223 r r a a a p p p p)))
 (let (($x527 (or (not (= ?x120 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x206 (= ?x197 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x543 (* p00 s00 a)))
 (let ((?x124 (* b00 r00 p)))
 (let ((?x296 (+ ?x124 ?x543 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x302 (* q a)))
 (let (($x308 (= (+ ?x302 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x339 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let (($x303 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x233 (and $x303 $x339 $x308 (= ?x296 0) $x206 $x527)))
 (rewrite (= $x233 $x669)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x235 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x119 (* (- 1) ?x47)))
 (let ((?x312 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x119 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x328 (+ p (* (- 1) q))))
 (let ((?x291 (+ a (* (- 1) b))))
 (let ((?x252 (* (- 1) s)))
 (let ((?x254 (+ r ?x252)))
 (let ((?x213 (* ?x254 ?x254 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x312 s s s b b b b b q q q q q)))
 (let ((?x223 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x119 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x528 (* (- 1) p)))
 (let ((?x236 (+ q ?x528)))
 (let ((?x255 (* (- 1) a)))
 (let ((?x540 (+ b ?x255)))
 (let ((?x338 (* (- 1) r)))
 (let ((?x182 (+ s ?x338)))
 (let ((?x120 (* ?x182 ?x182 ?x182 ?x540 ?x540 ?x540 ?x540 ?x540 ?x236 ?x236 ?x236 ?x236 ?x236 ?x223 r r a a a p p p p)))
 (let (($x527 (or (not (= ?x120 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x206 (= ?x197 0)))
 (let ((?x256 (* a00 s00 p)))
 (let ((?x280 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x271 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x280 ?x256 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x201 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x131 (* (- 1) ?x37)))
 (let ((?x214 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x214 ?x131 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x119 (* s a) ?x51) 0) $x201 (= ?x271 0) $x206 $x527))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x304 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x119 (* (- 1) ?x47)))
 (let ((?x312 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x119 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x328 (+ p (* (- 1) q))))
 (let ((?x291 (+ a (* (- 1) b))))
 (let ((?x252 (* (- 1) s)))
 (let ((?x254 (+ r ?x252)))
 (let ((?x213 (* ?x254 ?x254 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x312 s s s b b b b b q q q q q)))
 (let ((?x223 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x119 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x528 (* (- 1) p)))
 (let ((?x236 (+ q ?x528)))
 (let ((?x255 (* (- 1) a)))
 (let ((?x540 (+ b ?x255)))
 (let ((?x338 (* (- 1) r)))
 (let ((?x182 (+ s ?x338)))
 (let ((?x120 (* ?x182 ?x182 ?x182 ?x540 ?x540 ?x540 ?x540 ?x540 ?x236 ?x236 ?x236 ?x236 ?x236 ?x223 r r a a a p p p p)))
 (let (($x527 (or (not (= ?x120 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x206 (= ?x197 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x543 (* p00 s00 a)))
 (let ((?x124 (* b00 r00 p)))
 (let ((?x296 (+ ?x124 ?x543 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x302 (* q a)))
 (let (($x308 (= (+ ?x302 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x339 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x277 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x301 (* r q)))
 (let (($x233 (and (= (+ ?x301 (* (- 1) (* s p)) ?x37 ?x277) 0) $x339 $x308 (= ?x296 0) $x206 $x527)))
 (let ((?x256 (* a00 s00 p)))
 (let ((?x280 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x154 (= (+ (* (- 1) ?x124) (* (- 1) ?x543) ?x65 ?x280 ?x256 (* (- 1) ?x69)) 0)))
 (let (($x201 (= (+ (* (- 1) ?x302) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x333 (and (= (+ (* (- 1) ?x301) (* s p) (* (- 1) ?x37) ?x41) 0) (= (+ (* (- 1) (* r b)) ?x119 (* s a) ?x51) 0) $x201 $x154 $x206 $x527)))
 (rewrite (= $x333 $x233)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x106 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x100 (- q p)))
 (let ((?x94 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x97 (- s r)))
 (let ((?x51 (* b00 r00)))
 (let ((?x101 (* (+ (- (* ?x31 ?x94 r) (* a00 s00)) (* a ?x97) ?x51) ?x94 ?x94 p ?x100 ?x100 ?x97 ?x97 ?x97 ?x31 a a a ?x94 ?x94 ?x94 p p p ?x100 ?x100 ?x100 r r)))
 (let ((?x84 (- r s)))
 (let ((?x90 (- p q)))
 (let ((?x87 (- a b)))
 (let ((?x91 (* (+ (- (* ?x31 b ?x84) (* a00 s00)) (* ?x87 s) ?x51) b b ?x90 q q s s s ?x31 ?x87 ?x87 ?x87 b b b ?x90 ?x90 ?x90 q q q ?x84 ?x84)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x91 0)) (not (= ?x101 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x237 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x119 (* (- 1) ?x47)))
 (let ((?x312 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x119 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x328 (+ p (* (- 1) q))))
 (let ((?x291 (+ a (* (- 1) b))))
 (let ((?x252 (* (- 1) s)))
 (let ((?x254 (+ r ?x252)))
 (let ((?x213 (* ?x254 ?x254 ?x291 ?x291 ?x291 ?x328 ?x328 ?x328 ?x328 ?x312 s s s b b b b b q q q q q)))
 (let ((?x223 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x119 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x528 (* (- 1) p)))
 (let ((?x236 (+ q ?x528)))
 (let ((?x255 (* (- 1) a)))
 (let ((?x540 (+ b ?x255)))
 (let ((?x338 (* (- 1) r)))
 (let ((?x182 (+ s ?x338)))
 (let ((?x120 (* ?x182 ?x182 ?x182 ?x540 ?x540 ?x540 ?x540 ?x540 ?x236 ?x236 ?x236 ?x236 ?x236 ?x223 r r a a a p p p p)))
 (let (($x527 (or (not (= ?x120 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x206 (= ?x197 0)))
 (let ((?x256 (* a00 s00 p)))
 (let ((?x280 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x271 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x280 ?x256 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x201 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x131 (* (- 1) ?x37)))
 (let ((?x214 (* s p)))
 (let (($x333 (and (= (+ (* (- 1) (* r q)) ?x214 ?x131 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x119 (* s a) ?x51) 0) $x201 (= ?x271 0) $x206 $x527)))
 (let ((?x100 (- q p)))
 (let ((?x94 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x97 (- s r)))
 (let ((?x101 (* (+ (- (* ?x31 ?x94 r) ?x47) (* a ?x97) ?x51) ?x94 ?x94 p ?x100 ?x100 ?x97 ?x97 ?x97 ?x31 a a a ?x94 ?x94 ?x94 p p p ?x100 ?x100 ?x100 r r)))
 (let ((?x84 (- r s)))
 (let ((?x90 (- p q)))
 (let ((?x87 (- a b)))
 (let ((?x91 (* (+ (- (* ?x31 b ?x84) ?x47) (* ?x87 s) ?x51) b b ?x90 q q s s s ?x31 ?x87 ?x87 ?x87 b b b ?x90 ?x90 ?x90 q q q ?x84 ?x84)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x105 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) (= (+ (- (* ?x31 b r) ?x47) (* a s) ?x51) 0) (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x91 0)) (not (= ?x101 0))))))
 (rewrite (= $x105 $x333))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x107 (asserted $x106)))
 (let ((@x126 (mp (mp @x107 (quant-intro (proof-bind ?x237) (= $x106 $x235)) $x235) (rewrite (= $x235 $x235)) $x235)))
 (let ((@x335 (mp (mp @x126 (quant-intro (proof-bind ?x304) (= $x235 $x541)) $x541) (quant-intro (proof-bind ?x173) (= $x541 $x170)) $x170)))
 (let ((@x681 (mp (mp~ @x335 (sk (~ $x170 $x547)) $x547) (rewrite (= $x547 $x684)) $x684)))
 (let ((@x593 (and-elim @x681 $x321)))
 (let ((@x247 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x321) $x336)) @x593 $x336)))
 (let (($x326 (<= ?x210 0)))
 (let ((@x323 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x321) $x326)) @x593 $x326)))
 (let (($x596 (not (<= ?x657 0))))
 (let (($x542 (>= ?x671 0)))
 (let (($x674 (<= ?x671 0)))
 (let ((@x598 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x649 (not $x674) (not $x542))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x674)) @x323 @x247 false) $x674) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x542)) @x323 @x247 false) $x542) $x649)))
 (let (($x673 (>= ?x657 0)))
 (let ((@x590 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x605 $x596 (not $x673))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x673)) @x323 @x247 false) $x673) (unit-resolution (and-elim @x681 $x683) @x598 $x535) $x596)))
 ((_ th-lemma arith farkas 1 1 1) @x590 @x323 @x247 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             352
 :arith-nonlinear-horner    42
 :arith-num-rows            12
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 51
 :arith-tableau-max-rows    12
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                3.65
 :memory                    3.18
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                1376671
 :num-checks                1
 :propagations              19
 :rlimit-count              11797
 :time                      0.01
 :total-time                0.02)
