unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1008 (* r!2 s!1)))
 (let ((?x302 (* 2 ?x1008)))
 (let ((?x814 (* 6 x!0)))
 (let ((?x843 (* (- 3) s!1)))
 (let ((?x967 (* 3 r!2)))
 (let ((?x433 (* r00 r00 r00)))
 (let ((?x434 (* 12 ?x433)))
 (let ((?x390 (* s00 r00)))
 (let ((?x468 (* (- 6) ?x390)))
 (let ((?x465 (* (- 6) x00)))
 (let ((?x464 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1579 (+ ?x44 ?x464 ?x465 ?x468 ?x434 ?x967 ?x843 ?x814 ?x302 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)))))
 (let (($x448 (>= ?x1579 0)))
 (let (($x1019 (= ?x1579 0)))
 (let ((?x1373 (* (- 2) ?x1008)))
 (let ((?x1045 (* (- 6) x!0)))
 (let ((?x691 (* r!2 r!2)))
 (let ((?x1432 (* (- 12) ?x691)))
 (let ((?x1039 (* 7 s!1)))
 (let ((?x974 (* (- 3) r!2)))
 (let ((?x447 (* (- 12) ?x433)))
 (let ((?x391 (* 6 ?x390)))
 (let ((?x263 (* r00 r00)))
 (let ((?x1392 (* 12 ?x263)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1530 (* (- 7) s00)))
 (let ((?x823 (+ ?x1530 ?x48 ?x59 ?x1392 ?x391 ?x447 ?x974 ?x1039 ?x1432 ?x1045 ?x1373 (* 12 (* r00 r00 r!2)) (* (- 4) (* s00 r!2)))))
 (let ((?x1034 (+ 3 (* 6 r!2) s!1)))
 (let ((?x1046 (+ (- 1) (* (+ (* (- 1) s!1) x!0) ?x1034 ?x1034 ?x1034))))
 (let ((?x629 (* ?x1046 ?x823)))
 (let (($x1239 (= ?x629 0)))
 (let (($x772 (not $x1239)))
 (let ((?x1572 (* r00 r00 s!1)))
 (let ((?x454 (* 36 ?x1572)))
 (let ((?x1310 (* x00 x00)))
 (let ((?x1204 (* 108 ?x1310)))
 (let ((?x1148 (* s00 s00 s00)))
 (let ((?x715 (* 16 ?x1148)))
 (let ((?x846 (* r00 r00 r00 x00)))
 (let ((?x781 (* (- 432) ?x846)))
 (let ((?x769 (* s00 x00)))
 (let ((?x926 (* (- 108) ?x769)))
 (let ((?x788 (* (- 9) s!1)))
 (let ((?x611 (* s00 r00 r00)))
 (let ((?x352 (* (- 36) ?x611)))
 (let ((?x555 (* s00 s00)))
 (let ((?x872 (* 51 ?x555)))
 (let ((?x486 (* r00 x00)))
 (let ((?x937 (* 108 ?x486)))
 (let ((?x137 (* 9 s00)))
 (let ((?x419 (+ ?x137 (* (- 216) (* r00 r00 r00 s!1)) (* (- 54) ?x390) (* 216 (* s00 r00 x00)) ?x937 ?x872 ?x352 (* (- 108) (* s00 s00 r00)) ?x788 (* (- 36) (* s00 s00 r00 r00)) (* (- 12) (* s00 s!1 s!1)) ?x926 (* 108 (* x!0 x!0)) ?x781 (* 108 (* s00 r00 s!1)) (* 108 (* x00 s!1)) (* 216 (* s00 r00 r00 r00)) (* 108 (* s00 x!0)) (* (- 108) (* r00 x!0)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* 15 (* s!1 s!1)) (* (- 4) (* s!1 s!1 s!1)) ?x715 (* 54 (* r00 s!1)) (* (- 66) (* s00 s!1)) ?x1204 ?x454 (* (- 108) (* s!1 x!0)))))
 (let ((?x752 (+ ?x137 (* (- 2) (* s00 r!2 s!1)) (* 36 (* r00 x00 r!2)) (* (- 24) ?x390) (* 54 ?x486) (* 15 ?x555) ?x352 (* 2 (* s00 s00 r00)) ?x788 (* 4 (* s00 s00 r!2)) (* (- 6) ?x769) (* (- 2) (* r!2 s!1 s!1)) (* (- 36) (* r00 r00 x!0)) (* (- 36) (* r00 r!2 x!0)) (* 36 (* r00 r00 x00)) (* (- 54) (* r!2 x!0)) (* 2 (* s00 r00 s!1)) (* 6 (* x00 s!1)) (* 24 ?x1008) (* 6 (* s00 x!0)) (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* (- 3) (* s!1 s!1)) (* 24 (* r00 s!1)) (* (- 12) (* s00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* (- 24) (* s00 r!2)) ?x454 (* (- 6) (* s!1 x!0)))))
 (let ((?x327 (+ ?x44 (* (- 9) ?x390) (* 18 ?x486) (* 4 ?x555) (* (- 6) ?x611) ?x843 (* (- 18) (* r!2 x!0)) (* 9 ?x1008) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* (- 2) (* s!1 s!1)) (* 9 (* r00 s!1)) (* (- 2) (* s00 s!1)) (* 6 (* s00 r00 r!2)) (* (- 9) (* s00 r!2)) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x1572))))
 (let ((?x910 (* (- 1) s!1)))
 (let ((?x1035 (* (- 3) ?x263)))
 (let ((?x815 (+ s00 ?x1035 ?x910 (* 3 ?x691))))
 (let (($x1304 (= ?x815 0)))
 (let (($x1242 (and $x1304 $x1019 (= ?x327 0) (= ?x752 0) (= ?x419 0) $x772)))
 (let ((?x744 (+ ?x974 ?x1039 ?x1045 ?x1530 ?x48 ?x59 ?x1432 ?x1392 ?x1373 (* 12 (* r!2 r00 r00)) (* (- 4) (* r!2 s00)) ?x391 ?x447)))
 (let ((?x1340 (* (- 108) ?x1310)))
 (let ((?x1339 (* (- 16) ?x1148)))
 (let ((?x1020 (* s00 r00 r00 r00)))
 (let ((?x1335 (* (- 216) ?x1020)))
 (let ((?x847 (* 432 ?x846)))
 (let ((?x1093 (* 108 ?x769)))
 (let ((?x695 (* s00 s00 r00 r00)))
 (let ((?x696 (* 36 ?x695)))
 (let ((?x632 (* s00 s00 r00)))
 (let ((?x976 (* 108 ?x632)))
 (let ((?x964 (* 36 ?x611)))
 (let ((?x1329 (* (- 51) ?x555)))
 (let ((?x577 (* s!1 r00 r00)))
 (let ((?x1299 (* (- 36) ?x577)))
 (let ((?x1326 (* (- 108) ?x486)))
 (let ((?x477 (* s00 r00 x00)))
 (let ((?x1325 (* (- 216) ?x477)))
 (let ((?x484 (* 54 ?x390)))
 (let ((?x951 (* (- 9) s00)))
 (let ((?x669 (* 9 s!1)))
 (let ((?x962 (+ ?x669 ?x951 ?x484 ?x1325 ?x1326 (* (- 15) (* s!1 s!1)) ?x1299 ?x1329 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x964 ?x976 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x696 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1093 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x847 (* 12 (* s!1 s!1 s00)) ?x1335 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1339 (* 216 (* x!0 x00)) ?x1340)))
 (let ((?x841 (* r00 r00 x00)))
 (let ((?x854 (* (- 36) ?x841)))
 (let ((?x770 (* 6 ?x769)))
 (let ((?x660 (* (- 2) ?x632)))
 (let ((?x880 (* (- 15) ?x555)))
 (let ((?x515 (* (- 54) ?x486)))
 (let ((?x528 (* 24 ?x390)))
 (let ((?x628 (+ ?x669 ?x951 (* (- 24) ?x1008) (* 24 (* r!2 s00)) ?x528 ?x515 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x1299 ?x880 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x964 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x660 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x770 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x854 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x612 (* 6 ?x611)))
 (let ((?x568 (* (- 4) ?x555)))
 (let ((?x500 (* (- 18) ?x486)))
 (let ((?x505 (* 9 ?x390)))
 (let ((?x342 (* (- 3) s00)))
 (let ((?x343 (+ (* 3 s!1) ?x342 (* (- 9) ?x1008) (* 9 (* r!2 s00)) ?x505 ?x500 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x577) ?x568 (* 18 (* x!0 r00)) ?x612 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x968 (+ ?x967 ?x843 ?x814 ?x44 ?x464 ?x465 ?x302 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x468 ?x434)))
 (let (($x1522 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x691) (* 3 ?x263)) 0) (= ?x968 0) (= ?x343 0) (= ?x628 0) (= ?x962 0) (not (= (* ?x1046 ?x744) 0)))))
 (let (($x819 (exists ((r Int) (s Int) (x Int) )(! (let ((?x433 (* r00 r00 r00)))
 (let ((?x447 (* (- 12) ?x433)))
 (let ((?x390 (* s00 r00)))
 (let ((?x391 (* 6 ?x390)))
 (let ((?x363 (* r s00)))
 (let ((?x377 (* (- 4) ?x363)))
 (let ((?x313 (* r r00 r00)))
 (let ((?x314 (* 12 ?x313)))
 (let ((?x307 (* r s)))
 (let ((?x308 (* (- 2) ?x307)))
 (let ((?x263 (* r00 r00)))
 (let ((?x1392 (* 12 ?x263)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1530 (* (- 7) s00)))
 (let ((?x412 (* (- 6) x)))
 (let ((?x1592 (* 7 s)))
 (let ((?x1003 (* (- 3) r)))
 (let ((?x806 (+ ?x1003 ?x1592 ?x412 ?x1530 ?x48 ?x59 (* (- 12) (* r r)) ?x1392 ?x308 ?x314 ?x377 ?x391 ?x447)))
 (let ((?x213 (* 6 r)))
 (let ((?x1350 (+ 3 ?x213 s)))
 (let ((?x242 (* (- 1) s)))
 (let ((?x1549 (+ ?x242 x)))
 (let ((?x1310 (* x00 x00)))
 (let ((?x1340 (* (- 108) ?x1310)))
 (let ((?x1148 (* s00 s00 s00)))
 (let ((?x1339 (* (- 16) ?x1148)))
 (let ((?x1020 (* s00 r00 r00 r00)))
 (let ((?x1335 (* (- 216) ?x1020)))
 (let ((?x846 (* r00 r00 r00 x00)))
 (let ((?x847 (* 432 ?x846)))
 (let ((?x769 (* s00 x00)))
 (let ((?x1093 (* 108 ?x769)))
 (let ((?x695 (* s00 s00 r00 r00)))
 (let ((?x696 (* 36 ?x695)))
 (let ((?x632 (* s00 s00 r00)))
 (let ((?x976 (* 108 ?x632)))
 (let ((?x611 (* s00 r00 r00)))
 (let ((?x964 (* 36 ?x611)))
 (let ((?x555 (* s00 s00)))
 (let ((?x1329 (* (- 51) ?x555)))
 (let ((?x529 (* s r00 r00)))
 (let ((?x828 (* (- 36) ?x529)))
 (let ((?x486 (* r00 x00)))
 (let ((?x1326 (* (- 108) ?x486)))
 (let ((?x477 (* s00 r00 x00)))
 (let ((?x1325 (* (- 216) ?x477)))
 (let ((?x484 (* 54 ?x390)))
 (let ((?x951 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1341 (+ ?x143 ?x951 ?x484 ?x1325 ?x1326 (* (- 15) (* s s)) ?x828 ?x1329 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x964 ?x976 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x696 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1093 (* 108 (* s x)) (* (- 108) (* x x)) ?x847 (* 12 (* s s s00)) ?x1335 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1339 (* 216 (* x x00)) ?x1340)))
 (let (($x1342 (= ?x1341 0)))
 (let ((?x841 (* r00 r00 x00)))
 (let ((?x854 (* (- 36) ?x841)))
 (let ((?x770 (* 6 ?x769)))
 (let ((?x660 (* (- 2) ?x632)))
 (let ((?x880 (* (- 15) ?x555)))
 (let ((?x509 (* s s)))
 (let ((?x533 (* 3 ?x509)))
 (let ((?x515 (* (- 54) ?x486)))
 (let ((?x528 (* 24 ?x390)))
 (let ((?x1043 (+ ?x143 ?x951 (* (- 24) ?x307) (* 24 ?x363) ?x528 ?x515 ?x533 (* 54 (* r x)) (* 36 (* r x r00)) ?x828 ?x880 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x964 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x660 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x770 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x854 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1048 (= ?x1043 0)))
 (let ((?x612 (* 6 ?x611)))
 (let ((?x568 (* (- 4) ?x555)))
 (let ((?x510 (* 2 ?x509)))
 (let ((?x500 (* (- 18) ?x486)))
 (let ((?x505 (* 9 ?x390)))
 (let ((?x342 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x709 (+ ?x47 ?x342 (* (- 9) ?x307) (* 9 ?x363) ?x505 ?x500 ?x510 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x529) ?x568 (* 18 (* x r00)) ?x612 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x716 (= ?x709 0)))
 (let ((?x434 (* 12 ?x433)))
 (let ((?x468 (* (- 6) ?x390)))
 (let ((?x465 (* (- 6) x00)))
 (let ((?x464 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x469 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x464 ?x465 (* 2 ?x307) (* (- 12) ?x313) (* 4 ?x363) ?x468 ?x434)))
 (let (($x470 (= ?x469 0)))
 (let (($x296 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x263)) 0)))
 (and $x296 $x470 $x716 $x1048 $x1342 (not (= (* (+ (- 1) (* ?x1549 ?x1350 ?x1350 ?x1350)) ?x806) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x745 (exists ((r Int) (s Int) (x Int) )(! (let ((?x433 (* r00 r00 r00)))
 (let ((?x447 (* (- 12) ?x433)))
 (let ((?x59 (* 6 x00)))
 (let ((?x412 (* (- 6) x)))
 (let ((?x654 (* r00 s00)))
 (let ((?x663 (* 6 ?x654)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x342 (* (- 3) s00)))
 (let ((?x1038 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x342 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x663 ?x412 ?x59 ?x447)))
 (let ((?x213 (* 6 r)))
 (let ((?x482 (+ 3 s ?x213)))
 (let (($x1054 (= (* (+ (- 1) (* (+ x (* (- 1) s)) ?x482 ?x482 ?x482)) ?x1038) 0)))
 (let ((?x1310 (* x00 x00)))
 (let ((?x1204 (* 108 ?x1310)))
 (let ((?x137 (* 9 s00)))
 (let ((?x555 (* s00 s00)))
 (let ((?x872 (* 51 ?x555)))
 (let ((?x1148 (* s00 s00 s00)))
 (let ((?x715 (* 16 ?x1148)))
 (let ((?x769 (* s00 x00)))
 (let ((?x926 (* (- 108) ?x769)))
 (let ((?x846 (* r00 r00 r00 x00)))
 (let ((?x781 (* (- 432) ?x846)))
 (let ((?x486 (* r00 x00)))
 (let ((?x937 (* 108 ?x486)))
 (let ((?x1221 (+ (* 216 (* r00 s00 x00)) ?x937 (* (- 54) ?x654) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x781 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x926 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x715 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x872 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1204)))
 (let ((?x951 (* (- 9) s00)))
 (let ((?x880 (* (- 15) ?x555)))
 (let ((?x841 (* r00 r00 x00)))
 (let ((?x854 (* (- 36) ?x841)))
 (let ((?x770 (* 6 ?x769)))
 (let ((?x509 (* s s)))
 (let ((?x533 (* 3 ?x509)))
 (let ((?x515 (* (- 54) ?x486)))
 (let ((?x899 (+ (* (- 24) (* s r)) ?x515 (* 36 (* r00 x r)) (* 24 ?x654) ?x533 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x770 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x854 ?x880 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x951 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x568 (* (- 4) ?x555)))
 (let ((?x510 (* 2 ?x509)))
 (let ((?x500 (* (- 18) ?x486)))
 (let ((?x1138 (+ (* (- 9) (* s r)) ?x500 (* 9 ?x654) ?x510 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x568 (* 18 (* r00 x)) ?x342 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x1003 (* (- 3) r)))
 (let ((?x685 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x1003 ?x342 ?x47 ?x48 (* (- 4) (* s00 r)) ?x663 ?x412 ?x59 ?x447)))
 (let ((?x263 (* r00 r00)))
 (let ((?x1035 (* (- 3) ?x263)))
 (let ((?x242 (* (- 1) s)))
 (and (= (+ s00 ?x242 (* 3 (* r r)) ?x1035) 0) (= ?x685 0) (= ?x1138 0) (= ?x899 0) (= ?x1221 0) (not $x1054)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1461 (lambda ((r Int) (s Int) (x Int) )(let ((?x433 (* r00 r00 r00)))
 (let ((?x447 (* (- 12) ?x433)))
 (let ((?x390 (* s00 r00)))
 (let ((?x391 (* 6 ?x390)))
 (let ((?x363 (* r s00)))
 (let ((?x377 (* (- 4) ?x363)))
 (let ((?x313 (* r r00 r00)))
 (let ((?x314 (* 12 ?x313)))
 (let ((?x307 (* r s)))
 (let ((?x308 (* (- 2) ?x307)))
 (let ((?x263 (* r00 r00)))
 (let ((?x1392 (* 12 ?x263)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1530 (* (- 7) s00)))
 (let ((?x412 (* (- 6) x)))
 (let ((?x1592 (* 7 s)))
 (let ((?x1003 (* (- 3) r)))
 (let ((?x806 (+ ?x1003 ?x1592 ?x412 ?x1530 ?x48 ?x59 (* (- 12) (* r r)) ?x1392 ?x308 ?x314 ?x377 ?x391 ?x447)))
 (let ((?x213 (* 6 r)))
 (let ((?x1350 (+ 3 ?x213 s)))
 (let ((?x242 (* (- 1) s)))
 (let ((?x1549 (+ ?x242 x)))
 (let ((?x1310 (* x00 x00)))
 (let ((?x1340 (* (- 108) ?x1310)))
 (let ((?x1148 (* s00 s00 s00)))
 (let ((?x1339 (* (- 16) ?x1148)))
 (let ((?x1020 (* s00 r00 r00 r00)))
 (let ((?x1335 (* (- 216) ?x1020)))
 (let ((?x846 (* r00 r00 r00 x00)))
 (let ((?x847 (* 432 ?x846)))
 (let ((?x769 (* s00 x00)))
 (let ((?x1093 (* 108 ?x769)))
 (let ((?x695 (* s00 s00 r00 r00)))
 (let ((?x696 (* 36 ?x695)))
 (let ((?x632 (* s00 s00 r00)))
 (let ((?x976 (* 108 ?x632)))
 (let ((?x611 (* s00 r00 r00)))
 (let ((?x964 (* 36 ?x611)))
 (let ((?x555 (* s00 s00)))
 (let ((?x1329 (* (- 51) ?x555)))
 (let ((?x529 (* s r00 r00)))
 (let ((?x828 (* (- 36) ?x529)))
 (let ((?x486 (* r00 x00)))
 (let ((?x1326 (* (- 108) ?x486)))
 (let ((?x477 (* s00 r00 x00)))
 (let ((?x1325 (* (- 216) ?x477)))
 (let ((?x484 (* 54 ?x390)))
 (let ((?x951 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1341 (+ ?x143 ?x951 ?x484 ?x1325 ?x1326 (* (- 15) (* s s)) ?x828 ?x1329 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x964 ?x976 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x696 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1093 (* 108 (* s x)) (* (- 108) (* x x)) ?x847 (* 12 (* s s s00)) ?x1335 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1339 (* 216 (* x x00)) ?x1340)))
 (let (($x1342 (= ?x1341 0)))
 (let ((?x841 (* r00 r00 x00)))
 (let ((?x854 (* (- 36) ?x841)))
 (let ((?x770 (* 6 ?x769)))
 (let ((?x660 (* (- 2) ?x632)))
 (let ((?x880 (* (- 15) ?x555)))
 (let ((?x509 (* s s)))
 (let ((?x533 (* 3 ?x509)))
 (let ((?x515 (* (- 54) ?x486)))
 (let ((?x528 (* 24 ?x390)))
 (let ((?x1043 (+ ?x143 ?x951 (* (- 24) ?x307) (* 24 ?x363) ?x528 ?x515 ?x533 (* 54 (* r x)) (* 36 (* r x r00)) ?x828 ?x880 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x964 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x660 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x770 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x854 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1048 (= ?x1043 0)))
 (let ((?x612 (* 6 ?x611)))
 (let ((?x568 (* (- 4) ?x555)))
 (let ((?x510 (* 2 ?x509)))
 (let ((?x500 (* (- 18) ?x486)))
 (let ((?x505 (* 9 ?x390)))
 (let ((?x342 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x709 (+ ?x47 ?x342 (* (- 9) ?x307) (* 9 ?x363) ?x505 ?x500 ?x510 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x529) ?x568 (* 18 (* x r00)) ?x612 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x716 (= ?x709 0)))
 (let ((?x434 (* 12 ?x433)))
 (let ((?x468 (* (- 6) ?x390)))
 (let ((?x465 (* (- 6) x00)))
 (let ((?x464 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x469 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x464 ?x465 (* 2 ?x307) (* (- 12) ?x313) (* 4 ?x363) ?x468 ?x434)))
 (let (($x470 (= ?x469 0)))
 (let (($x296 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x263)) 0)))
 (let (($x614 (and $x296 $x470 $x716 $x1048 $x1342 (not (= (* (+ (- 1) (* ?x1549 ?x1350 ?x1350 ?x1350)) ?x806) 0)))))
 (let ((?x654 (* r00 s00)))
 (let ((?x663 (* 6 ?x654)))
 (let ((?x1038 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s ?x213))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x342 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x663 ?x412 ?x59 ?x447)))
 (let ((?x482 (+ 3 s ?x213)))
 (let (($x731 (not (= (* (+ (- 1) (* (+ x ?x242) ?x482 ?x482 ?x482)) ?x1038) 0))))
 (let ((?x1204 (* 108 ?x1310)))
 (let ((?x137 (* 9 s00)))
 (let ((?x872 (* 51 ?x555)))
 (let ((?x715 (* 16 ?x1148)))
 (let ((?x926 (* (- 108) ?x769)))
 (let ((?x781 (* (- 432) ?x846)))
 (let ((?x937 (* 108 ?x486)))
 (let ((?x1221 (+ (* 216 (* r00 s00 x00)) ?x937 (* (- 54) ?x654) (* 15 ?x509) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x781 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x926 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x715 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x872 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1204)))
 (let ((?x899 (+ (* (- 24) (* s r)) ?x515 (* 36 (* r00 x r)) (* 24 ?x654) ?x533 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x770 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x854 ?x880 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x951 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1138 (+ (* (- 9) (* s r)) ?x500 (* 9 ?x654) ?x510 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x568 (* 18 (* r00 x)) ?x342 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x685 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x1003 ?x342 ?x47 ?x48 (* (- 4) (* s00 r)) ?x663 ?x412 ?x59 ?x447)))
 (let (($x1024 (and (= (+ s00 ?x242 (* 3 (* r r)) (* (- 3) ?x263)) 0) (= ?x685 0) (= ?x1138 0) (= ?x899 0) (= ?x1221 0) $x731)))
 (rewrite (= $x1024 $x614)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x239 (exists ((r Int) (s Int) (x Int) )(! (let ((?x226 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x59 (* 6 x00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x217 (+ (* (- 2) (+ r 1) ?x214) (* 12 (+ r 1) r00 r00))))
 (let ((?x224 (- (+ (- (- ?x217 (* 3 (+ r 1))) ?x44) (* 3 ?x214) ?x48) (* 4 (+ r 1) s00))))
 (let ((?x234 (* (- (+ (- (+ ?x224 ?x54) (* 6 ?x226)) ?x59) ?x61) (+ (- 1) (* ?x214 ?x214 ?x214 ?x226)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x234 0)))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x414 (lambda ((r Int) (s Int) (x Int) )(let ((?x433 (* r00 r00 r00)))
 (let ((?x447 (* (- 12) ?x433)))
 (let ((?x59 (* 6 x00)))
 (let ((?x412 (* (- 6) x)))
 (let ((?x654 (* r00 s00)))
 (let ((?x663 (* 6 ?x654)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x342 (* (- 3) s00)))
 (let ((?x1038 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x342 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x663 ?x412 ?x59 ?x447)))
 (let ((?x213 (* 6 r)))
 (let ((?x482 (+ 3 s ?x213)))
 (let (($x1054 (= (* (+ (- 1) (* (+ x (* (- 1) s)) ?x482 ?x482 ?x482)) ?x1038) 0)))
 (let ((?x1310 (* x00 x00)))
 (let ((?x1204 (* 108 ?x1310)))
 (let ((?x137 (* 9 s00)))
 (let ((?x555 (* s00 s00)))
 (let ((?x872 (* 51 ?x555)))
 (let ((?x1148 (* s00 s00 s00)))
 (let ((?x715 (* 16 ?x1148)))
 (let ((?x769 (* s00 x00)))
 (let ((?x926 (* (- 108) ?x769)))
 (let ((?x846 (* r00 r00 r00 x00)))
 (let ((?x781 (* (- 432) ?x846)))
 (let ((?x486 (* r00 x00)))
 (let ((?x937 (* 108 ?x486)))
 (let ((?x1221 (+ (* 216 (* r00 s00 x00)) ?x937 (* (- 54) ?x654) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x781 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x926 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x715 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x872 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1204)))
 (let ((?x951 (* (- 9) s00)))
 (let ((?x880 (* (- 15) ?x555)))
 (let ((?x841 (* r00 r00 x00)))
 (let ((?x854 (* (- 36) ?x841)))
 (let ((?x770 (* 6 ?x769)))
 (let ((?x509 (* s s)))
 (let ((?x533 (* 3 ?x509)))
 (let ((?x515 (* (- 54) ?x486)))
 (let ((?x899 (+ (* (- 24) (* s r)) ?x515 (* 36 (* r00 x r)) (* 24 ?x654) ?x533 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x770 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x854 ?x880 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x951 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x568 (* (- 4) ?x555)))
 (let ((?x510 (* 2 ?x509)))
 (let ((?x500 (* (- 18) ?x486)))
 (let ((?x1138 (+ (* (- 9) (* s r)) ?x500 (* 9 ?x654) ?x510 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x568 (* 18 (* r00 x)) ?x342 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x1003 (* (- 3) r)))
 (let ((?x685 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x1003 ?x342 ?x47 ?x48 (* (- 4) (* s00 r)) ?x663 ?x412 ?x59 ?x447)))
 (let ((?x263 (* r00 r00)))
 (let ((?x1035 (* (- 3) ?x263)))
 (let ((?x242 (* (- 1) s)))
 (let (($x1024 (and (= (+ s00 ?x242 (* 3 (* r r)) ?x1035) 0) (= ?x685 0) (= ?x1138 0) (= ?x899 0) (= ?x1221 0) (not $x1054))))
 (let ((?x226 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x217 (+ (* (- 2) (+ r 1) ?x214) (* 12 (+ r 1) r00 r00))))
 (let ((?x224 (- (+ (- (- ?x217 (* 3 (+ r 1))) ?x44) (* 3 ?x214) ?x48) (* 4 (+ r 1) s00))))
 (let ((?x234 (* (- (+ (- (+ ?x224 ?x54) (* 6 ?x226)) ?x59) ?x61) (+ (- 1) (* ?x214 ?x214 ?x214 ?x226)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x238 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x234 0))))))
 (rewrite (= $x238 $x1024)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x240 (asserted $x239)))
 (let ((@x1409 (mp (mp @x240 (quant-intro (proof-bind ?x414) (= $x239 $x745)) $x745) (rewrite (= $x745 $x745)) $x745)))
 (let ((@x759 (mp~ (mp @x1409 (quant-intro (proof-bind ?x1461) (= $x745 $x819)) $x819) (sk (~ $x819 $x1522)) $x1522)))
 (let ((@x742 (mp @x759 (rewrite (= $x1522 $x1242)) $x1242)))
 (let ((@x1462 (and-elim @x742 $x1019)))
 (let ((@x1464 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1019) $x448)) @x1462 $x448)))
 (let (($x733 (>= ?x815 0)))
 (let ((@x1029 (and-elim @x742 $x1304)))
 (let ((@x723 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1304) $x733)) @x1029 $x733)))
 (let (($x381 (<= ?x1579 0)))
 (let ((@x1519 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1019) $x381)) @x1462 $x381)))
 (let (($x1062 (<= ?x815 0)))
 (let ((@x1044 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1304) $x1062)) @x1029 $x1062)))
 (let (($x1076 (not (<= ?x629 0))))
 (let (($x665 (>= ?x629 0)))
 (let ((@x613 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x665)) @x1044 @x1519 @x723 @x1464 false) $x665)))
 (let ((@x667 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1239 $x1076 (not $x665))) (and-elim @x742 $x772) (or $x1076 (not $x665)))))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution @x667 @x613 $x1076) @x1044 @x1519 @x723 @x1464 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        27
 :arith-assert-upper        10
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-fixed-eqs           2
 :arith-max-min             234
 :arith-nonlinear-bounds    16
 :arith-num-rows            9
 :arith-pivots              5
 :arith-pseudo-nonlinear    2
 :arith-row-summations      9
 :arith-tableau-max-columns 97
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              2
 :max-memory                19.85
 :memory                    19.26
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                621454
 :num-checks                1
 :propagations              12
 :rlimit-count              7333
 :time                      0.01
 :total-time                0.02)
