unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x792 (* (- 1) r!1)))
 (let ((?x748 (* r!1 r!1)))
 (let ((?x36 (* r00 r00)))
 (let ((?x220 (* (- 1) ?x36)))
 (let ((?x459 (* (- 2) x00)))
 (let ((?x961 (+ r00 ?x459 ?x220 (* 2 x!0) ?x748 ?x792)))
 (let (($x485 (<= ?x961 0)))
 (let (($x141 (= ?x961 0)))
 (let ((?x998 (+ x!0 ?x792)))
 (let ((?x691 (+ 1 r!1)))
 (let ((?x402 (* (- 1) (* r00 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998 ?x998 ?x998))))
 (let ((?x217 (* 2 (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998))))
 (let ((?x216 (* 2 (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998))))
 (let ((?x510 (* (- 1) (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998))))
 (let ((?x235 (* (- 1) (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998))))
 (let ((?x237 (* (- 2) (* ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998 ?x998 ?x998 ?x998))))
 (let ((?x588 (* (- 1) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998))))
 (let ((?x602 (* (- 2) (* x00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998))))
 (let ((?x583 (* (- 1) (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998))))
 (let ((?x368 (* (- 2) (* x00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998))))
 (let ((?x292 (* (- 1) (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998))))
 (let ((?x290 (* (- 1) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998 ?x998 ?x998))))
 (let ((?x286 (* 2 (* x00 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998 ?x998 ?x998))))
 (let ((?x287 (* (- 1) (* r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998))))
 (let ((?x285 (* 2 (* x00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998))))
 (let ((?x665 (* (- 2) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998 ?x998))))
 (let ((?x404 (+ (* r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998) (* 2 (* x00 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998 ?x998 ?x998)) (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998) ?x665 ?x285 ?x287 ?x286 ?x290 (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998) (* (- 2) (* x00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998)) (* (- 2) (* ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998 ?x998 ?x998 ?x998)) (* r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998) ?x292 ?x368 (* (- 1) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998)) (* (- 2) (* x00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998)) ?x583 ?x602 (* (- 2) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998 ?x998)) ?x588 (* (- 1) (* r00 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998 ?x998 ?x998)) (* r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998) (* ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998 ?x998 ?x998) ?x237 ?x235 ?x510 (* r00 r00 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998 ?x998 ?x998) ?x216 (* (- 1) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998)) (* 2 (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998)) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998) ?x217 (* 3 (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998)) (* 2 (* x00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998)) (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998) (* (- 1) (* r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998)) (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x998 ?x998 ?x998 ?x998 ?x998 ?x998) ?x402 (* r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x998))))
 (let (($x412 (= ?x404 0)))
 (let (($x805 (not $x412)))
 (let (($x733 (and $x141 $x805)))
 (let ((?x837 (+ ?x792 x!0)))
 (let ((?x486 (* (- 2) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837))))
 (let ((?x595 (* 2 (* x00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837))))
 (let ((?x203 (* (- 2) (* x00 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837 ?x837 ?x837))))
 (let ((?x278 (* (- 1) (* r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837))))
 (let ((?x545 (* (- 1) (* r00 r00 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837 ?x837 ?x837))))
 (let ((?x442 (* 2 (* x00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837))))
 (let ((?x223 (* (- 1) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837))))
 (let ((?x509 (* 2 (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837 ?x837))))
 (let ((?x415 (* (- 1) (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837))))
 (let ((?x697 (* 2 (* ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837 ?x837 ?x837 ?x837))))
 (let ((?x542 (* (- 1) (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837))))
 (let ((?x191 (* (- 2) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837))))
 (let ((?x662 (* (- 1) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837))))
 (let ((?x699 (* (- 1) (* r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837))))
 (let ((?x520 (* (- 2) (* x00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837))))
 (let ((?x840 (* (- 1) (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837 ?x837 ?x837))))
 (let ((?x341 (+ (* r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837) (* r00 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837 ?x837 ?x837) ?x840 (* (- 2) (* x00 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837 ?x837 ?x837)) ?x520 (* 2 (* x00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837)) (* (- 1) (* r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837)) ?x699 (* (- 3) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837)) (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837) (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837) ?x662 ?x191 (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837 ?x837 ?x837) (* (- 1) (* ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837 ?x837 ?x837)) (* (- 1) (* r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837)) ?x542 ?x697 (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837) ?x415 ?x509 ?x223 (* r00 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837 ?x837 ?x837) ?x442 ?x545 (* (- 2) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837)) (* 2 (* ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837 ?x837 ?x837 ?x837)) (* 2 (* x00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837)) (* 2 (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837 ?x837)) ?x278 (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837) (* (- 2) (* x00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837)) (* r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837 ?x837 ?x837 ?x837) ?x203 ?x595 (* r00 r00 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837) (* ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x691 ?x837) ?x486)))
 (let ((?x35 (* 2 x00)))
 (let ((?x179 (* (- 1) r00)))
 (let (($x152 (and (= (+ r!1 (* (- 2) x!0) ?x179 (* (- 1) ?x748) ?x35 ?x36) 0) (not (= ?x341 0)))))
 (let (($x893 (exists ((r Int) (x Int) )(! (let ((?x129 (* (- 1) r)))
 (let ((?x193 (+ ?x129 x)))
 (let ((?x187 (+ 1 r)))
 (let ((?x148 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x954 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193)))
 (let ((?x170 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193))))
 (let ((?x172 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x812 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193)))
 (let ((?x759 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193))))
 (let ((?x771 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x772 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193))))
 (let ((?x561 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193)))
 (let ((?x530 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193)))
 (let ((?x796 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x473 (* ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)))
 (let ((?x721 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x395 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)))
 (let ((?x385 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193)))
 (let ((?x814 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193))))
 (let ((?x356 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193)))
 (let ((?x225 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193))))
 (let ((?x259 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x664 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x171 (+ (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193) (* r00 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193) ?x664 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)) ?x259 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193)) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193)) ?x225 (* (- 3) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193)) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193) (* (- 1) ?x356) ?x814 ?x385 ?x395 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193)) ?x721 (* 2 ?x473) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193) ?x796 (* 2 ?x530) (* (- 1) ?x561) (* r00 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193) ?x772 ?x771 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193)) (* 2 (* ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193)) (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193)) ?x759 ?x812 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193) ?x172 ?x170 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193) ?x954 ?x148)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x179 (* (- 1) r00)))
 (let (($x182 (= (+ r (* (- 2) x) ?x179 (* (- 1) (* r r)) ?x35 ?x36) 0)))
 (and $x182 (not (= ?x171 0))))))))))))))))))))))))))))))) :qid k!26))
 ))
 (let (($x456 (exists ((r Int) (x Int) )(! (let ((?x129 (* (- 1) r)))
 (let ((?x525 (+ x ?x129)))
 (let ((?x187 (+ 1 r)))
 (let ((?x890 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525))))
 (let ((?x987 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x970 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525))))
 (let ((?x644 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525))))
 (let ((?x769 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x321 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x600 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x589 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x419 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525))))
 (let ((?x209 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525))))
 (let ((?x177 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525))))
 (let ((?x440 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x584 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x195 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x153 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x210 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525))))
 (let ((?x884 (+ (* r00 r00 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525) ?x210 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525) (* ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525) ?x153 ?x195 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525) ?x584 ?x440 (* 3 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525)) ?x177 ?x209 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525) ?x419 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525)) ?x589 ?x600 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525) (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525) ?x321 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525) (* (- 2) (* ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525) (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525)) ?x769 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525)) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525)) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525) ?x644 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525)) ?x970 ?x987 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525)) (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525)) ?x890)))
 (let ((?x36 (* r00 r00)))
 (let ((?x220 (* (- 1) ?x36)))
 (let ((?x459 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (and (= (+ ?x129 r00 ?x30 ?x32 ?x459 ?x220) 0) (not (= ?x884 0)))))))))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x895 (lambda ((r Int) (x Int) )(let ((?x129 (* (- 1) r)))
 (let ((?x193 (+ ?x129 x)))
 (let ((?x187 (+ 1 r)))
 (let ((?x148 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x954 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193)))
 (let ((?x170 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193))))
 (let ((?x172 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x812 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193)))
 (let ((?x759 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193))))
 (let ((?x771 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x772 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193))))
 (let ((?x561 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193)))
 (let ((?x530 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193)))
 (let ((?x796 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x473 (* ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)))
 (let ((?x721 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x395 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)))
 (let ((?x385 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193)))
 (let ((?x814 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193))))
 (let ((?x356 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193)))
 (let ((?x225 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193))))
 (let ((?x259 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x664 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x171 (+ (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193) (* r00 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193) ?x664 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)) ?x259 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193)) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193)) ?x225 (* (- 3) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193)) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193) (* (- 1) ?x356) ?x814 ?x385 ?x395 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193)) ?x721 (* 2 ?x473) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193) ?x796 (* 2 ?x530) (* (- 1) ?x561) (* r00 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193) ?x772 ?x771 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193)) (* 2 (* ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193)) (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193)) ?x759 ?x812 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193) ?x172 ?x170 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193) ?x954 ?x148)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x179 (* (- 1) r00)))
 (let (($x182 (= (+ r (* (- 2) x) ?x179 (* (- 1) (* r r)) ?x35 ?x36) 0)))
 (let (($x746 (and $x182 (not (= ?x171 0)))))
 (let ((?x525 (+ x ?x129)))
 (let ((?x890 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525))))
 (let ((?x987 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x970 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525))))
 (let ((?x644 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525))))
 (let ((?x769 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x321 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x600 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x589 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x419 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525))))
 (let ((?x209 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525))))
 (let ((?x177 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525))))
 (let ((?x440 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x584 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x195 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x153 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x210 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525))))
 (let ((?x884 (+ (* r00 r00 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525) ?x210 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525) (* ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525) ?x153 ?x195 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525) ?x584 ?x440 (* 3 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525)) ?x177 ?x209 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525) ?x419 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525)) ?x589 ?x600 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525) (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525) ?x321 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525) (* (- 2) (* ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525) (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525)) ?x769 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525)) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525)) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525) ?x644 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525)) ?x970 ?x987 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525)) (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525)) ?x890)))
 (let ((?x220 (* (- 1) ?x36)))
 (let ((?x459 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (let (($x214 (and (= (+ ?x129 r00 ?x30 ?x32 ?x459 ?x220) 0) (not (= ?x884 0)))))
 (rewrite (= $x214 $x746)))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x124 (exists ((r Int) (x Int) )(! (let ((?x42 (- x r)))
 (let ((?x41 (+ r 1)))
 (let ((?x45 (- (* ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 x00))))
 (let ((?x49 (+ ?x45 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x51 (- ?x49 (* 2 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x54 (+ ?x51 (* 2 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 x00) (* ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x57 (- ?x54 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x58 (- ?x57 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x61 (+ ?x58 (* 3 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x63 (- ?x61 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x66 (+ ?x63 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x68 (- ?x66 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42))))
 (let ((?x71 (+ ?x68 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42) (* 0 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x74 (- ?x71 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x75 (- ?x74 (* ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x77 (+ ?x75 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42))))
 (let ((?x79 (- ?x77 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 x00))))
 (let ((?x83 (- (+ ?x79 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x85 (+ ?x83 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42))))
 (let ((?x87 (- ?x85 (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x91 (- (+ ?x87 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x94 (+ ?x91 (* 0 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x98 (+ (- ?x94 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 x00))))
 (let ((?x102 (+ (- ?x98 (* ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x106 (- ?x102 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x108 (- (- ?x106 (* ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42))))
 (let ((?x110 (+ ?x108 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 x00))))
 (let ((?x112 (- ?x110 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 x00))))
 (let ((?x115 (+ ?x112 (* 0 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42) (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 x00))))
 (let ((?x119 (- (- ?x115 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 x00))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 (* r r) (* 2 x)) ?x35) ?x36)))
 (and (= ?x38 0) (or (not (= ?x119 0))))))))))))))))))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x690 (lambda ((r Int) (x Int) )(let ((?x129 (* (- 1) r)))
 (let ((?x525 (+ x ?x129)))
 (let ((?x187 (+ 1 r)))
 (let ((?x890 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525))))
 (let ((?x987 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x970 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525))))
 (let ((?x644 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525))))
 (let ((?x769 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x321 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x600 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x589 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x419 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525))))
 (let ((?x209 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525))))
 (let ((?x177 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525))))
 (let ((?x440 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x584 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x195 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x153 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525))))
 (let ((?x210 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525))))
 (let ((?x884 (+ (* r00 r00 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525) ?x210 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525) (* ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525) ?x153 ?x195 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525) ?x584 ?x440 (* 3 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525)) ?x177 ?x209 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525) ?x419 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525)) ?x589 ?x600 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525) (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525) ?x321 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525) (* (- 2) (* ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525) (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525)) ?x769 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525)) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525)) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525) ?x644 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525)) ?x970 ?x987 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x525 ?x525 ?x525 ?x525 ?x525 ?x525)) (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x525)) ?x890)))
 (let ((?x36 (* r00 r00)))
 (let ((?x220 (* (- 1) ?x36)))
 (let ((?x459 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (let (($x214 (and (= (+ ?x129 r00 ?x30 ?x32 ?x459 ?x220) 0) (not (= ?x884 0)))))
 (let ((?x42 (- x r)))
 (let ((?x41 (+ r 1)))
 (let ((?x45 (- (* ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 x00))))
 (let ((?x49 (+ ?x45 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x51 (- ?x49 (* 2 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x54 (+ ?x51 (* 2 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 x00) (* ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x57 (- ?x54 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x58 (- ?x57 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x61 (+ ?x58 (* 3 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x63 (- ?x61 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x66 (+ ?x63 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x68 (- ?x66 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42))))
 (let ((?x71 (+ ?x68 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42) (* 0 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x74 (- ?x71 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x75 (- ?x74 (* ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x77 (+ ?x75 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42))))
 (let ((?x79 (- ?x77 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 x00))))
 (let ((?x83 (- (+ ?x79 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x85 (+ ?x83 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42))))
 (let ((?x87 (- ?x85 (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x91 (- (+ ?x87 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x94 (+ ?x91 (* 0 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x98 (+ (- ?x94 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 x00))))
 (let ((?x102 (+ (- ?x98 (* ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x106 (- ?x102 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x108 (- (- ?x106 (* ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42))))
 (let ((?x110 (+ ?x108 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 x00))))
 (let ((?x112 (- ?x110 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 x00))))
 (let ((?x115 (+ ?x112 (* 0 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42) (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 x00))))
 (let ((?x119 (- (- ?x115 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 x00))))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 ?x30 ?x32) (* 2 x00)) ?x36)))
 (let (($x123 (and (= ?x38 0) (or (not (= ?x119 0))))))
 (rewrite (= $x123 $x214)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x125 (asserted $x124)))
 (let ((@x638 (mp (mp @x125 (quant-intro (proof-bind ?x690) (= $x124 $x456)) $x456) (rewrite (= $x456 $x456)) $x456)))
 (let ((@x348 (mp~ (mp @x638 (quant-intro (proof-bind ?x895) (= $x456 $x893)) $x893) (sk (~ $x893 $x152)) $x152)))
 (let ((@x827 (mp @x348 (rewrite (= $x152 $x733)) $x733)))
 (let ((@x604 (and-elim @x827 $x141)))
 (let ((@x403 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x141) $x485)) @x604 $x485)))
 (let (($x669 (>= ?x961 0)))
 (let ((@x159 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x141) $x669)) @x604 $x669)))
 (let (($x912 (not (>= ?x404 0))))
 (let (($x128 (<= ?x404 0)))
 (let ((@x236 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x412 (not $x128) $x912)) (and-elim @x827 $x805) (or (not $x128) $x912))))
 (let ((@x807 (unit-resolution @x236 (lemma ((_ th-lemma arith) (hypothesis (not $x128)) @x159 @x403 false) $x128) $x912)))
 ((_ th-lemma arith) @x807 @x159 @x403 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 1
 :arith-assert-diseq        1
 :arith-assert-lower        21
 :arith-assert-upper        3
 :arith-conflicts           2
 :arith-eq-adapter          2
 :arith-grobner             2
 :arith-max-min             350
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    8
 :arith-num-rows            4
 :arith-pivots              2
 :arith-tableau-max-columns 55
 :arith-tableau-max-rows    4
 :conflicts                 2
 :decisions                 1
 :del-clause                7
 :final-checks              4
 :max-memory                19.82
 :memory                    19.26
 :mk-bool-var               6
 :mk-clause                 7
 :num-allocs                896439
 :num-checks                1
 :propagations              4
 :rlimit-count              21455
 :time                      0.03
 :total-time                0.05)
