% Warning: check-sat is not the last entry. Skipping the rest!
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_2 on freire1_denorm_inv1_1xlen2
% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for freire1_denorm_inv1_1xlen2
% SZS output start Proof for freire1_denorm_inv1_1xlen2
1. ? [X1 : $int,X0 : $int] : (0 = $difference($difference($sum($sum($sum($product($uminus(1),X0),r00),$product(X0,X0)),$product(2,X1)),$product(2,x00)),$product(r00,r00)) & ~0 = $product($difference($difference($sum($sum($sum($product($uminus(1),$sum(X0,1)),r00),$product($sum(X0,1),$sum(X0,1))),$product(2,$difference(X1,X0))),$product(2,x00)),$product(r00,r00)),$sum($product($product($uminus(1),$sum(X0,1)),$difference(X1,X0)),$product($difference(X1,X0),$difference(X1,X0))))) [input]
2. ? [X1 : $int,X0 : $int] : (0 = $sum($difference($sum($sum($sum($product($uminus(1),X0),r00),$product(X0,X0)),$product(2,X1)),$product(2,x00)),$uminus($product(r00,r00))) & ~0 = $product($sum($difference($sum($sum($sum($product($uminus(1),$sum(X0,1)),r00),$product($sum(X0,1),$sum(X0,1))),$product(2,$difference(X1,X0))),$product(2,x00)),$uminus($product(r00,r00))),$sum($product($product($uminus(1),$sum(X0,1)),$sum(X1,$uminus(X0))),$product($sum(X1,$uminus(X0)),$sum(X1,$uminus(X0)))))) [theory normalization 1]
3. $sum(X0,X1) = $sum(X1,X0) [theory axiom 144]
4. $sum(X0,$sum(X1,X2)) = $sum($sum(X0,X1),X2) [theory axiom 145]
14. $product(X0,X1) = $product(X1,X0) [theory axiom 144]
18. $product(X0,$sum(X1,X2)) = $sum($product(X0,X1),$product(X0,X2)) [theory axiom 159]
21. ? [X1 : $int,X0 : $int] : (0 = $sum($sum($sum($sum($sum($product($uminus(1),X0),r00),$product(X0,X0)),$product(2,X1)),$uminus($product(2,x00))),$uminus($product(r00,r00))) & ~0 = $product($sum($sum($sum($sum($sum($product($uminus(1),$sum(X0,1)),r00),$product($sum(X0,1),$sum(X0,1))),$product(2,$difference(X1,X0))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$sum($product($product($uminus(1),$sum(X0,1)),$sum(X1,$uminus(X0))),$product($sum(X1,$uminus(X0)),$sum(X1,$uminus(X0)))))) [theory normalization 2]
22. ? [X0 : $int,X1 : $int] : (0 = $sum($sum($sum($sum($sum($product($uminus(1),X1),r00),$product(X1,X1)),$product(2,X0)),$uminus($product(2,x00))),$uminus($product(r00,r00))) & ~0 = $product($sum($sum($sum($sum($sum($product($uminus(1),$sum(X1,1)),r00),$product($sum(X1,1),$sum(X1,1))),$product(2,$difference(X0,X1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$sum($product($product($uminus(1),$sum(X1,1)),$sum(X0,$uminus(X1))),$product($sum(X0,$uminus(X1)),$sum(X0,$uminus(X1)))))) [rectify 21]
23. ? [X0 : $int,X1 : $int] : (0 = $sum($sum($sum($sum($sum($product($uminus(1),X1),r00),$product(X1,X1)),$product(2,X0)),$uminus($product(2,x00))),$uminus($product(r00,r00))) & 0 != $product($sum($sum($sum($sum($sum($product($uminus(1),$sum(X1,1)),r00),$product($sum(X1,1),$sum(X1,1))),$product(2,$difference(X0,X1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$sum($product($product($uminus(1),$sum(X1,1)),$sum(X0,$uminus(X1))),$product($sum(X0,$uminus(X1)),$sum(X0,$uminus(X1)))))) [flattening 22]
24. 0 != $product($sum($sum($sum($sum($sum($product($uminus(1),$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$sum($product($product($uminus(1),$sum(sK1,1)),$sum(sK0,$uminus(sK1))),$product($sum(sK0,$uminus(sK1)),$sum(sK0,$uminus(sK1))))) [cnf transformation 23]
25. 0 = $sum($sum($sum($sum($sum($product($uminus(1),sK1),r00),$product(sK1,sK1)),$product(2,sK0)),$uminus($product(2,x00))),$uminus($product(r00,r00))) [cnf transformation 23]
27. 0 != $product($sum($sum($sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$sum($product($product(-1,$sum(sK1,1)),$sum(sK0,$uminus(sK1))),$product($sum(sK0,$uminus(sK1)),$sum(sK0,$uminus(sK1))))) [evaluation 24]
28. 0 = $sum($sum($sum($sum($sum($product(-1,sK1),r00),$product(sK1,sK1)),$product(2,sK0)),$uminus($product(2,x00))),$uminus($product(r00,r00))) [evaluation 25]
718. 0 = $sum($sum($uminus($product(2,x00)),$sum($sum($sum($product(-1,sK1),r00),$product(sK1,sK1)),$product(2,sK0))),$uminus($product(r00,r00))) [forward demodulation 28,3]
719. 0 = $sum($sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($sum($product(-1,sK1),r00),$product(sK1,sK1)))),$uminus($product(r00,r00))) [forward demodulation 718,3]
720. 0 = $sum($sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($product(sK1,sK1),$sum($product(-1,sK1),r00)))),$uminus($product(r00,r00))) [forward demodulation 719,3]
721. 0 = $sum($sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($product(sK1,sK1),$sum(r00,$product(-1,sK1))))),$uminus($product(r00,r00))) [forward demodulation 720,3]
769. 1 <=> 0 = $sum($sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($product(sK1,sK1),$sum(r00,$product(-1,sK1))))),$uminus($product(r00,r00))) [avatar definition]
772. 1 [avatar split clause 721,769]
871. 0 != $product($sum($sum($sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$sum($product($sum(sK0,$uminus(sK1)),$sum(sK0,$uminus(sK1))),$product($product(-1,$sum(sK1,1)),$sum(sK0,$uminus(sK1))))) [forward demodulation 27,3]
872. 0 != $product($sum($sum($sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$sum($product($sum(sK0,$uminus(sK1)),$sum(sK0,$uminus(sK1))),$product($sum(sK0,$uminus(sK1)),$product(-1,$sum(sK1,1))))) [forward demodulation 871,14]
873. 0 != $product($sum($sum($sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$product($sum(sK0,$uminus(sK1)),$sum($sum(sK0,$uminus(sK1)),$product(-1,$sum(sK1,1))))) [forward demodulation 872,18]
874. 0 != $product($sum($sum($sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$product($sum(sK0,$uminus(sK1)),$sum(sK0,$sum($uminus(sK1),$product(-1,$sum(sK1,1)))))) [forward demodulation 873,4]
875. 0 != $product($sum($sum($sum($sum($sum($product(-1,$sum(1,sK1)),r00),$product($sum(1,sK1),$sum(1,sK1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$product($sum(sK0,$uminus(sK1)),$sum(sK0,$sum($uminus(sK1),$product(-1,$sum(1,sK1)))))) [forward demodulation 874,3]
876. 0 != $product($sum($uminus($product(r00,r00)),$sum($sum($sum($sum($product(-1,$sum(1,sK1)),r00),$product($sum(1,sK1),$sum(1,sK1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00)))),$product($sum(sK0,$uminus(sK1)),$sum(sK0,$sum($uminus(sK1),$product(-1,$sum(1,sK1)))))) [forward demodulation 875,3]
877. 0 != $product($sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($sum($sum($product(-1,$sum(1,sK1)),r00),$product($sum(1,sK1),$sum(1,sK1))),$product(2,$difference(sK0,sK1))))),$product($sum(sK0,$uminus(sK1)),$sum(sK0,$sum($uminus(sK1),$product(-1,$sum(1,sK1)))))) [forward demodulation 876,3]
878. 0 != $product($sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,$difference(sK0,sK1)),$sum($sum($product(-1,$sum(1,sK1)),r00),$product($sum(1,sK1),$sum(1,sK1)))))),$product($sum(sK0,$uminus(sK1)),$sum(sK0,$sum($uminus(sK1),$product(-1,$sum(1,sK1)))))) [forward demodulation 877,3]
879. 0 != $product($sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,$difference(sK0,sK1)),$sum($product($sum(1,sK1),$sum(1,sK1)),$sum($product(-1,$sum(1,sK1)),r00))))),$product($sum(sK0,$uminus(sK1)),$sum(sK0,$sum($uminus(sK1),$product(-1,$sum(1,sK1)))))) [forward demodulation 878,3]
880. 0 != $product($sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,$difference(sK0,sK1)),$sum($product($sum(1,sK1),$sum(1,sK1)),$sum(r00,$product(-1,$sum(1,sK1))))))),$product($sum(sK0,$uminus(sK1)),$sum(sK0,$sum($uminus(sK1),$product(-1,$sum(1,sK1)))))) [forward demodulation 879,3]
929. 2 <=> 0 = $product($sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,$difference(sK0,sK1)),$sum($product($sum(1,sK1),$sum(1,sK1)),$sum(r00,$product(-1,$sum(1,sK1))))))),$product($sum(sK0,$uminus(sK1)),$sum(sK0,$sum($uminus(sK1),$product(-1,$sum(1,sK1)))))) [avatar definition]
932. ~2 [avatar split clause 880,929]
933. $false [avatar smt refutation 772,932]
% SZS output end Proof for freire1_denorm_inv1_1xlen2
% ------------------------------
% Version: Vampire 4.6.1 (commit 1be729b10 on 2022-01-13 14:39:16 +0100)
% Linked with Z3 4.8.15.0 dfe2b27f9aa6d72583014fa301bd79d223fb254f z3-4.8.4-5822-gdfe2b27f9
% Termination reason: Refutation

% Memory used [KB]: 7931
% Time elapsed: 0.250 s
% ------------------------------
----  Runtime statistics ----
clauses created: 924
clauses deleted: 348
ssat_ground_clauses_for_congruence: 2
ssat_new_components: 2
ssat_non_splittable_sat_clauses: 2
ssat_sat_clauses: 2
-----------------------------
% ------------------------------
% Success in time 0.287 s
