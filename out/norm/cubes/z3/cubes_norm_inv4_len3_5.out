unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x189 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x778 (<= ?x189 (- 6))))
 (let (($x191 (= ?x189 (- 6))))
 (let ((?x918 (* k!2 k!2 k!2 k!2)))
 (let ((?x809 (+ k!2 c!3)))
 (let ((?x806 (+ m!1 k!2)))
 (let ((?x355 (+ 6 m!1)))
 (let ((?x696 (+ 1 n!0)))
 (let ((?x308 (* (- 3) (* ?x696 ?x696 ?x696 ?x696 ?x696 ?x355 ?x355 ?x806 ?x806 ?x806 ?x809 ?x809))))
 (let ((?x237 (* (- 3) (* ?x696 ?x696 ?x696 ?x696 ?x355 ?x355 ?x806 ?x806 ?x806 ?x809 ?x809))))
 (let ((?x244 (* (- 1) (* ?x696 ?x696 ?x696 ?x355 ?x355 ?x806 ?x806 ?x806 ?x806 ?x809 ?x809 ?x809))))
 (let ((?x405 (* ?x696 ?x696 ?x696 ?x696 ?x696 ?x355 ?x355 ?x806 ?x806 ?x806 ?x809 ?x809 ?x809)))
 (let ((?x328 (* m!1 m!1 m!1 m!1)))
 (let ((?x807 (* 3 (* ?x696 ?x696 ?x696 ?x696 ?x355 ?x355 ?x806 ?x806 ?x806 ?x809 ?x809 ?x809))))
 (let ((?x221 (+ (* 4 (* m!1 m!1 m!1 k!2)) (* 4 (* n!0 m!1 k!2 k!2 k!2)) (* ?x696 ?x696 ?x696 ?x355 ?x355 ?x806 ?x806 ?x806 ?x806 ?x809 ?x809) (* 4 (* n!0 m!1 m!1 m!1 k!2)) (* (- 12) (* m!1 k!2 k!2)) (* (- 3) (* n!0 n!0 m!1 m!1 m!1)) (* (- 9) (* n!0 n!0 m!1 m!1 k!2)) (* (- 9) (* n!0 n!0 m!1 k!2 k!2)) (* (- 7) (* n!0 k!2 k!2 k!2)) (* (- 21) (* n!0 m!1 k!2 k!2)) (* (- 3) (* n!0 n!0 k!2 k!2 k!2)) (* (- 3) (* ?x696 ?x696 ?x696 ?x806 ?x806 ?x806)) ?x807 (* (- 12) (* m!1 m!1 k!2)) ?x328 (* 3 ?x405) ?x244 (* ?x696 ?x696 ?x696 ?x355 ?x355 ?x806 ?x806 ?x806 ?x809 ?x809 ?x809) (* (- 4) (* m!1 m!1 m!1)) (* 6 (* n!0 m!1 m!1 k!2 k!2)) (* 4 (* m!1 k!2 k!2 k!2)) (* 6 (* m!1 m!1 k!2 k!2)) ?x237 (* n!0 k!2 k!2 k!2 k!2) (* (- 4) (* k!2 k!2 k!2)) (* n!0 m!1 m!1 m!1 m!1) (* (- 1) (* ?x696 ?x696 ?x696 ?x355 ?x355 ?x806 ?x806 ?x806 ?x809 ?x809)) ?x308 (* (- 7) (* n!0 m!1 m!1 m!1)) (* (- 21) (* n!0 m!1 m!1 k!2)) ?x918)))
 (let (($x225 (= ?x221 0)))
 (let (($x298 (not $x225)))
 (let ((?x852 (* (- 1) k!2)))
 (let ((?x790 (+ (* 3 n!0) ?x852 (* 3 (* n!0 n!0)))))
 (let (($x789 (= ?x790 (- 1))))
 (let ((?x851 (+ (* 2 n!0) ?x852 (* n!0 k!2) (* (- 3) c!3))))
 (let (($x848 (= ?x851 (- 1))))
 (let ((?x273 (* k!2 k!2)))
 (let ((?x419 (+ ?x273 (* 9 n!0) (* (- 5) k!2) (* (- 18) c!3) (* (- 9) (* n!0 c!3)))))
 (let (($x671 (= ?x419 (- 4))))
 (let (($x856 (and $x191 $x671 $x848 $x789 $x298)))
 (let ((?x683 (+ c!3 k!2)))
 (let ((?x350 (+ k!2 m!1)))
 (let ((?x287 (* ?x696 ?x696 ?x696 ?x696 ?x696 ?x355 ?x355 ?x350 ?x350 ?x350 ?x683 ?x683 ?x683)))
 (let ((?x116 (* (- 1) (* ?x696 ?x696 ?x696 ?x355 ?x355 ?x350 ?x350 ?x350 ?x683 ?x683 ?x683))))
 (let ((?x907 (* (- 1) (* ?x696 ?x696 ?x696 ?x355 ?x355 ?x350 ?x350 ?x350 ?x350 ?x683 ?x683))))
 (let ((?x867 (* (- 3) (* ?x696 ?x696 ?x696 ?x696 ?x355 ?x355 ?x350 ?x350 ?x350 ?x683 ?x683 ?x683))))
 (let ((?x352 (* 3 (* ?x696 ?x696 ?x696 ?x696 ?x355 ?x355 ?x350 ?x350 ?x350 ?x683 ?x683))))
 (let ((?x693 (* 3 (* ?x696 ?x696 ?x696 ?x696 ?x696 ?x355 ?x355 ?x350 ?x350 ?x350 ?x683 ?x683))))
 (let ((?x568 (+ ?x693 ?x352 (* 4 (* m!1 m!1 m!1)) (* 3 (* k!2 k!2 k!2 n!0 n!0)) (* 7 (* m!1 m!1 m!1 n!0)) (* 21 (* k!2 m!1 m!1 n!0)) (* 21 (* k!2 k!2 m!1 n!0)) (* 7 (* k!2 k!2 k!2 n!0)) (* 3 (* m!1 m!1 m!1 n!0 n!0)) (* 9 (* k!2 m!1 m!1 n!0 n!0)) (* 9 (* k!2 k!2 m!1 n!0 n!0)) (* 12 (* k!2 k!2 m!1)) (* 4 (* k!2 k!2 k!2)) (* 12 (* k!2 m!1 m!1)) (* 3 (* ?x696 ?x696 ?x696 ?x350 ?x350 ?x350)) ?x867 (* (- 1) (* k!2 k!2 k!2 k!2 n!0)) ?x907 (* (- 4) (* k!2 k!2 k!2 m!1 n!0)) (* (- 6) (* k!2 k!2 m!1 m!1 n!0)) (* (- 4) (* k!2 m!1 m!1 m!1 n!0)) (* ?x696 ?x696 ?x696 ?x355 ?x355 ?x350 ?x350 ?x350 ?x683 ?x683) (* (- 1) (* m!1 m!1 m!1 m!1 n!0)) (* (- 1) ?x918) (* (- 4) (* k!2 k!2 k!2 m!1)) (* (- 6) (* k!2 k!2 m!1 m!1)) ?x116 (* (- 4) (* k!2 m!1 m!1 m!1)) (* (- 3) ?x287) (* (- 1) ?x328) (* ?x696 ?x696 ?x696 ?x355 ?x355 ?x350 ?x350 ?x350 ?x350 ?x683 ?x683 ?x683))))
 (let (($x342 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x913 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x273) (* 9 (* c!3 n!0)))))
 (let (($x567 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x913 4) $x342 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x568 0)))))
 (let (($x178 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x311 (+ 6 m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x858 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x892 (* (- 1) (* m m m m))))
 (let ((?x813 (* ?x314 ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x828 (* (- 3) ?x813)))
 (let ((?x912 (* (- 4) (* k m m m))))
 (let ((?x776 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x688 (* (- 1) ?x776)))
 (let ((?x909 (* (- 6) (* k k m m))))
 (let ((?x906 (* (- 4) (* k k k m))))
 (let ((?x888 (* (- 1) (* k k k k))))
 (let ((?x887 (* (- 1) (* m m m m n))))
 (let ((?x710 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x903 (* (- 4) (* k m m m n))))
 (let ((?x900 (* (- 6) (* k k m m n))))
 (let ((?x897 (* (- 4) (* k k k m n))))
 (let ((?x702 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x845 (* (- 1) ?x702)))
 (let ((?x883 (* (- 1) (* k k k k n))))
 (let ((?x685 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x803 (* (- 3) ?x685)))
 (let ((?x579 (* ?x314 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x578 (* 3 ?x579)))
 (let ((?x528 (* 3 (* m m m n n))))
 (let ((?x604 (* 3 (* k k k n n))))
 (let ((?x227 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x228 (* 3 ?x227)))
 (let ((?x158 (* ?x314 ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x167 (* 3 ?x158)))
 (let ((?x159 (+ ?x167 ?x228 (* 4 (* m m m)) ?x604 (* 7 (* m m m n)) (* 21 (* k m m n)) (* 21 (* k k m n)) (* 7 (* k k k n)) ?x528 (* 9 (* k m m n n)) (* 9 (* k k m n n)) (* 12 (* k k m)) (* 4 (* k k k)) (* 12 (* k m m)) ?x578 ?x803 ?x883 ?x845 ?x897 ?x900 ?x903 ?x710 ?x887 ?x888 ?x906 ?x909 ?x688 ?x912 ?x828 ?x892 ?x858)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 (* c n))) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 $x211 $x263 $x301 (not (= ?x159 0))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x889 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x294 (* ?x314 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x311 (+ 6 m)))
 (let ((?x158 (* ?x314 ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x227 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x858 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x702 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x813 (* ?x314 ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x685 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x776 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x241 (+ ?x776 (* 3 ?x685) (* 3 ?x813) ?x702 (* (- 1) (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 1) ?x858) (* (- 1) (* ?x314 ?x70 ?x70 ?x70)) (* (- 3) ?x227) (* (- 3) ?x158) (* (- 3) (* ?x314 ?x314 ?x70 ?x70 ?x70)) (* (- 3) (* ?x314 ?x314 ?x314 ?x70 ?x70 ?x70)) ?x294)))
 (let (($x758 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x180 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x180 $x758 (not (= ?x241 0)))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x182 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x311 (+ 6 m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x858 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x892 (* (- 1) (* m m m m))))
 (let ((?x813 (* ?x314 ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x828 (* (- 3) ?x813)))
 (let ((?x912 (* (- 4) (* k m m m))))
 (let ((?x776 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x688 (* (- 1) ?x776)))
 (let ((?x909 (* (- 6) (* k k m m))))
 (let ((?x906 (* (- 4) (* k k k m))))
 (let ((?x888 (* (- 1) (* k k k k))))
 (let ((?x887 (* (- 1) (* m m m m n))))
 (let ((?x710 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x903 (* (- 4) (* k m m m n))))
 (let ((?x900 (* (- 6) (* k k m m n))))
 (let ((?x897 (* (- 4) (* k k k m n))))
 (let ((?x702 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x845 (* (- 1) ?x702)))
 (let ((?x883 (* (- 1) (* k k k k n))))
 (let ((?x685 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x803 (* (- 3) ?x685)))
 (let ((?x579 (* ?x314 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x578 (* 3 ?x579)))
 (let ((?x528 (* 3 (* m m m n n))))
 (let ((?x604 (* 3 (* k k k n n))))
 (let ((?x227 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x228 (* 3 ?x227)))
 (let ((?x158 (* ?x314 ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x167 (* 3 ?x158)))
 (let ((?x159 (+ ?x167 ?x228 (* 4 (* m m m)) ?x604 (* 7 (* m m m n)) (* 21 (* k m m n)) (* 21 (* k k m n)) (* 7 (* k k k n)) ?x528 (* 9 (* k m m n n)) (* 9 (* k k m n n)) (* 12 (* k k m)) (* 4 (* k k k)) (* 12 (* k m m)) ?x578 ?x803 ?x883 ?x845 ?x897 ?x900 ?x903 ?x710 ?x887 ?x888 ?x906 ?x909 ?x688 ?x912 ?x828 ?x892 ?x858)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 (* c n))) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x574 (and $x127 $x211 $x263 $x301 (not (= ?x159 0)))))
 (let ((?x294 (* ?x314 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x241 (+ ?x776 (* 3 ?x685) (* 3 ?x813) ?x702 (* (- 1) ?x710) (* (- 1) ?x858) (* (- 1) (* ?x314 ?x70 ?x70 ?x70)) (* (- 3) ?x227) (* (- 3) ?x158) (* (- 3) (* ?x314 ?x314 ?x70 ?x70 ?x70)) (* (- 3) ?x579) ?x294)))
 (let (($x758 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x180 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x885 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x180 $x758 (not (= ?x241 0)))))
 (rewrite (= $x885 $x574)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x764 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x294 (* ?x314 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x579 (* ?x314 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x578 (* 3 ?x579)))
 (let ((?x69 (+ c k)))
 (let ((?x311 (+ 6 m)))
 (let ((?x158 (* ?x314 ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x167 (* 3 ?x158)))
 (let ((?x227 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x228 (* 3 ?x227)))
 (let ((?x233 (* ?x314 ?x70 ?x70 ?x70)))
 (let ((?x858 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x710 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x702 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x845 (* (- 1) ?x702)))
 (let ((?x813 (* ?x314 ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x828 (* (- 3) ?x813)))
 (let ((?x685 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x803 (* (- 3) ?x685)))
 (let ((?x776 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x688 (* (- 1) ?x776)))
 (let ((?x226 (+ ?x688 ?x803 ?x828 ?x845 ?x710 ?x858 ?x233 ?x228 ?x167 (* 3 (* ?x314 ?x314 ?x70 ?x70 ?x70)) ?x578 (* (- 1) ?x294))))
 (let (($x758 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x596 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x325 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 (= ?x325 (- 4)) $x596 $x758 (not (= ?x226 0)))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x890 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x294 (* ?x314 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x311 (+ 6 m)))
 (let ((?x158 (* ?x314 ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x227 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x858 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x702 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x813 (* ?x314 ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x685 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x776 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x241 (+ ?x776 (* 3 ?x685) (* 3 ?x813) ?x702 (* (- 1) (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 1) ?x858) (* (- 1) (* ?x314 ?x70 ?x70 ?x70)) (* (- 3) ?x227) (* (- 3) ?x158) (* (- 3) (* ?x314 ?x314 ?x70 ?x70 ?x70)) (* (- 3) (* ?x314 ?x314 ?x314 ?x70 ?x70 ?x70)) ?x294)))
 (let (($x758 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x180 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x885 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x180 $x758 (not (= ?x241 0)))))
 (let ((?x579 (* ?x314 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x578 (* 3 ?x579)))
 (let ((?x167 (* 3 ?x158)))
 (let ((?x228 (* 3 ?x227)))
 (let ((?x233 (* ?x314 ?x70 ?x70 ?x70)))
 (let ((?x710 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x845 (* (- 1) ?x702)))
 (let ((?x828 (* (- 3) ?x813)))
 (let ((?x803 (* (- 3) ?x685)))
 (let ((?x688 (* (- 1) ?x776)))
 (let ((?x226 (+ ?x688 ?x803 ?x828 ?x845 ?x710 ?x858 ?x233 ?x228 ?x167 (* 3 (* ?x314 ?x314 ?x70 ?x70 ?x70)) ?x578 (* (- 1) ?x294))))
 (let (($x596 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x325 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x781 (and $x127 (= ?x325 (- 4)) $x596 $x758 (not (= ?x226 0)))))
 (rewrite (= $x781 $x885))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x94 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x70 (+ k m)))
 (let ((?x71 (+ m 6)))
 (let ((?x69 (+ c k)))
 (let ((?x84 (* 3 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x74 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 1) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x79 (- (- (- ?x73 ?x74) ?x75) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x87 (+ ?x79 (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72) (* ?x70 ?x70 ?x70 ?x72) (* 3 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72) ?x84 (* 3 ?x70 ?x70 ?x70 ?x72 ?x72) (* 3 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x87 (* ?x70 ?x70 ?x70 ?x70 ?x72)) 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x775 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x294 (* ?x314 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x579 (* ?x314 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x578 (* 3 ?x579)))
 (let ((?x69 (+ c k)))
 (let ((?x311 (+ 6 m)))
 (let ((?x158 (* ?x314 ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x167 (* 3 ?x158)))
 (let ((?x227 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x228 (* 3 ?x227)))
 (let ((?x233 (* ?x314 ?x70 ?x70 ?x70)))
 (let ((?x858 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x710 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x702 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x845 (* (- 1) ?x702)))
 (let ((?x813 (* ?x314 ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x828 (* (- 3) ?x813)))
 (let ((?x685 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x803 (* (- 3) ?x685)))
 (let ((?x776 (* ?x314 ?x314 ?x314 ?x311 ?x311 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x688 (* (- 1) ?x776)))
 (let ((?x226 (+ ?x688 ?x803 ?x828 ?x845 ?x710 ?x858 ?x233 ?x228 ?x167 (* 3 (* ?x314 ?x314 ?x70 ?x70 ?x70)) ?x578 (* (- 1) ?x294))))
 (let (($x758 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x596 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x325 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x781 (and $x127 (= ?x325 (- 4)) $x596 $x758 (not (= ?x226 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x84 (* 3 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x74 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 1) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x79 (- (- (- ?x73 ?x74) ?x75) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x87 (+ ?x79 (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72) (* ?x70 ?x70 ?x70 ?x72) (* 3 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72) ?x84 (* 3 ?x70 ?x70 ?x70 ?x72 ?x72) (* 3 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x93 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x87 (* ?x70 ?x70 ?x70 ?x70 ?x72)) 0))))))
 (rewrite (= $x93 $x781)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x95 (asserted $x94)))
 (let ((@x689 (mp (mp @x95 (quant-intro (proof-bind ?x775) (= $x94 $x764)) $x764) (rewrite (= $x764 $x764)) $x764)))
 (let ((@x827 (mp (mp @x689 (quant-intro (proof-bind ?x890) (= $x764 $x889)) $x889) (quant-intro (proof-bind ?x182) (= $x889 $x178)) $x178)))
 (let ((@x295 (mp (mp~ @x827 (sk (~ $x178 $x567)) $x567) (rewrite (= $x567 $x856)) $x856)))
 (let ((@x292 (and-elim @x295 $x191)))
 (let ((@x402 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x191) $x778)) @x292 $x778)))
 (let (($x914 (>= ?x189 (- 6))))
 (let ((@x814 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x191) $x914)) @x292 $x914)))
 (let (($x193 (<= ?x790 (- 1))))
 (let ((@x842 (and-elim @x295 $x789)))
 (let ((@x820 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x789) $x193)) @x842 $x193)))
 (let (($x700 (>= ?x790 (- 1))))
 (let ((@x417 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x789) $x700)) @x842 $x700)))
 (let (($x195 (<= ?x851 (- 1))))
 (let ((@x843 (and-elim @x295 $x848)))
 (let ((@x129 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x848) $x195)) @x843 $x195)))
 (let (($x566 (>= ?x851 (- 1))))
 (let ((@x248 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x848) $x566)) @x843 $x566)))
 (let (($x802 (<= ?x419 (- 4))))
 (let ((@x704 (and-elim @x295 $x671)))
 (let ((@x123 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x671) $x802)) @x704 $x802)))
 (let (($x109 (>= ?x419 (- 4))))
 (let ((@x862 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x671) $x109)) @x704 $x109)))
 (let (($x290 (not (<= ?x221 0))))
 (let (($x878 (>= ?x221 0)))
 (let ((@x815 ((_ th-lemma arith) (hypothesis (not $x878)) @x814 @x402 @x417 @x820 @x248 @x129 @x417 @x820 @x814 @x402 @x417 @x820 @x248 @x129 @x417 @x820 @x862 @x123 @x248 @x129 @x417 @x820 @x814 @x402 false)))
 (let ((@x326 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x225 $x290 (not $x878))) (and-elim @x295 $x298) (or $x290 (not $x878)))))
 ((_ th-lemma arith) (unit-resolution @x326 (lemma @x815 $x878) $x290) @x814 @x402 @x417 @x820 @x248 @x129 @x417 @x820 @x814 @x402 @x417 @x820 @x248 @x129 @x417 @x820 @x862 @x123 @x248 @x129 @x417 @x820 @x814 @x402 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        19
 :arith-assert-upper        19
 :arith-branch-var          2
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           13
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             496
 :arith-nonlinear-bounds    24
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             6
 :arith-patches_succ        2
 :arith-pivots              13
 :arith-row-summations      26
 :arith-tableau-max-columns 64
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 9
 :del-clause                16
 :final-checks              10
 :max-memory                3.71
 :memory                    3.21
 :mk-bool-var               29
 :mk-clause                 16
 :num-allocs                1771189
 :num-checks                1
 :propagations              12
 :rlimit-count              19853
 :time                      0.02
 :total-time                0.03)
