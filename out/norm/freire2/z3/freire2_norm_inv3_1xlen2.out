unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x2670 (* (- 1) s!1)))
 (let ((?x301 (* r00 r00)))
 (let ((?x2717 (* (- 3) ?x301)))
 (let ((?x4858 (+ s00 ?x2717 ?x2670 (* 3 (* r!2 r!2)))))
 (let (($x750 (<= ?x4858 0)))
 (let (($x4995 (= ?x4858 0)))
 (let ((?x2691 (+ 3 (* 6 r!2) s!1)))
 (let ((?x3832 (+ x!0 ?x2670)))
 (let ((?x2671 (+ 1 r!2)))
 (let ((?x2816 (+ (* 9 (* r00 ?x2671 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* 27 (* s00 x!0 s!1 s!1)) (* (- 18) (* ?x2671 ?x2671 ?x3832 ?x3832 ?x3832 ?x3832 ?x2691)) (* 2 (* ?x3832 ?x3832 ?x3832 ?x2691 ?x2691 ?x2691 ?x2691)) (* (- 486) (* s00 r00 r00 r!2 x!0 x!0 s!1)) (* 108 (* r00 x00 r!2 r!2 x!0 x!0 x!0)) (* (- 36) (* s00 r00 r00 s!1 s!1 s!1)) (* 3 (* s00 x!0 x!0 x!0 s!1)) (* 180 (* s00 r00 r00 r!2 r!2 x!0 x!0 x!0)) (* 18 (* s00 r00 r00 x!0 s!1 s!1 s!1 s!1)) (* 9 (* s00 r00 s!1 s!1 s!1 s!1)) (* 9 (* s00 r00 r!2 s!1 s!1 s!1 s!1)) (* (- 3) (* s00 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* (- 81) (* s00 r00 x!0 s!1 s!1)) (* (- 243) (* s00 r00 r!2 x!0 s!1 s!1)) (* (- 162) (* s00 r00 r!2 r!2 x!0 s!1 s!1)) (* (- 27) (* s00 r00 x!0 s!1 s!1 s!1)) (* (- 27) (* s00 r00 r!2 x!0 s!1 s!1 s!1)) (* (- 12) (* s00 s00 s!1 s!1 s!1)) (* 162 (* r00 x00 x!0 s!1 s!1)) (* 6 (* s00 r00 r00 x!0 x!0 x!0 s!1 s!1)) (* 162 (* s00 r00 r00 r!2 x!0 x!0 x!0)) (* (- 36) (* s00 s00 r!2 s!1 s!1 s!1)) (* (- 18) (* r00 ?x2671 ?x3832 ?x3832 ?x3832 ?x3832 ?x2691)) (* 27 (* s00 r00 s!1 s!1 s!1)) (* (- 108) (* s00 s00 r!2 x!0 x!0 s!1)) (* 12 (* s00 s00 x!0 s!1 s!1 s!1)) (* 162 (* r00 x00 r!2 x!0 x!0 x!0)) (* (- 81) (* s00 r!2 x!0 x!0 s!1)) (* 81 (* s00 r!2 x!0 s!1 s!1)) (* 162 (* s00 r00 r!2 r!2 x!0 x!0 s!1)) (* 243 (* s00 r00 r!2 x!0 x!0 s!1)) (* (- 4) (* s00 s00 s!1 s!1 s!1 s!1)) (* 324 (* r00 x00 r!2 r!2 x!0 s!1 s!1)) (* 4 (* s00 s00 r!2 x!0 x!0 x!0 s!1)) (* 27 (* s00 r00 r!2 x!0 x!0 s!1 s!1)) (* 108 (* s00 s00 r!2 x!0 s!1 s!1)) (* (- 90) (* s00 r00 r00 x!0 x!0 s!1 s!1)) (* 198 (* s00 r00 r00 r!2 x!0 s!1 s!1 s!1)) (* 9 (* r00 s00 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* (- 27) (* s00 r!2 s!1 s!1 s!1)) (* 7 (* s00 ?x2671 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* 3 (* ?x3832 ?x3832 ?x3832 ?x2691 ?x2691 ?x2691)) (* (- 54) (* r00 x00 r!2 x!0 x!0 s!1 s!1)) (* 9 (* s00 x!0 x!0 x!0)) (* 18 (* r00 x00 x!0 x!0 x!0 s!1)) (* 27 (* s00 r!2 x!0 x!0 x!0)) (* 2 (* s00 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691 ?x2691)) (* 90 (* s00 r00 r00 x!0 s!1 s!1 s!1)) (* 540 (* s00 r00 r00 r!2 r!2 x!0 s!1 s!1)) (* (- 540) (* s00 r00 r00 r!2 r!2 x!0 x!0 s!1)) (* 54 (* s00 r00 r!2 r!2 s!1 s!1 s!1)) (* 81 (* s00 r00 r!2 s!1 s!1 s!1)) (* (- 18) (* r00 x00 s!1 s!1 s!1 s!1)) (* 30 (* s00 r00 r00 x!0 x!0 x!0 s!1)) (* 12 (* s00 s00 r!2 x!0 s!1 s!1 s!1)) (* (- 3) (* s00 r!2 s!1 s!1 s!1 s!1)) (* (- 18) (* s00 r00 r00 x!0 x!0 s!1 s!1 s!1)) (* 4 (* s00 s00 x!0 x!0 x!0 s!1)) (* (- 24) (* s00 s00 r!2 r!2 s!1 s!1 s!1)) (* (- 72) (* s00 s00 r!2 r!2 x!0 x!0 s!1)) (* (- 4) (* s00 s00 r!2 s!1 s!1 s!1 s!1)) (* (- 12) (* s00 s00 r!2 x!0 x!0 s!1 s!1)) (* 72 (* s00 s00 r!2 r!2 x!0 s!1 s!1)) (* (- 9) (* s00 r!2 x!0 x!0 s!1 s!1)) (* 27 (* s00 r00 x!0 x!0 s!1 s!1)) (* (- 9) (* s00 ?x2671 ?x2671 ?x3832 ?x3832 ?x3832 ?x2691)) (* (- 18) (* s00 r!2 r!2 s!1 s!1 s!1)) (* 486 (* r00 x00 r!2 x!0 s!1 s!1)) (* (- 180) (* s00 r00 r00 r!2 r!2 s!1 s!1 s!1)) (* 81 (* s00 r00 x!0 x!0 s!1)) (* (- 12) (* s00 s00 x!0 x!0 s!1 s!1)) (* 66 (* s00 r00 r00 r!2 x!0 x!0 x!0 s!1)) (* (- 54) (* r00 x00 x!0 x!0 s!1 s!1)) (* (- 6) (* r00 r00 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691 ?x2691)) (* (- 324) (* r00 x00 r!2 r!2 x!0 x!0 s!1)) (* 18 (* s00 r!2 r!2 x!0 x!0 x!0)) (* (- 3) (* s00 s!1 s!1 s!1 s!1)) (* (- 6) (* s00 r00 r00 s!1 s!1 s!1 s!1 s!1)) (* 54 (* r00 x00 x!0 x!0 x!0)) (* (- 9) (* s00 s!1 s!1 s!1)) (* 54 (* s00 r!2 r!2 x!0 s!1 s!1)) (* (- 486) (* r00 x00 r!2 x!0 x!0 s!1)) (* 6 (* r00 r00 ?x2671 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* 18 (* r00 ?x3832 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* (- 162) (* r00 x00 x!0 x!0 s!1)) (* (- 54) (* s00 r!2 r!2 x!0 x!0 s!1)) (* 54 (* r00 x00 r!2 x!0 s!1 s!1 s!1)) (* 54 (* r00 x00 x!0 s!1 s!1 s!1)) (* 36 (* s00 s00 r!2 x!0 x!0 x!0)) (* (- 9) (* s00 r00 x!0 x!0 x!0 s!1)) (* (- 9) (* r00 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691 ?x2691)) (* (- 27) (* s00 r00 x!0 x!0 x!0)) (* (- 9) (* s00 r00 r!2 x!0 x!0 x!0 s!1)) (* (- 6) (* r00 ?x2671 ?x2671 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* 9 (* ?x2671 ?x2671 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* (- 54) (* s00 r00 r!2 r!2 x!0 x!0 x!0)) (* (- 6) (* r00 s00 ?x2671 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* 3 (* s00 r!2 x!0 x!0 x!0 s!1)) (* (- 54) (* r00 x00 s!1 s!1 s!1)) (* (- 198) (* s00 r00 r00 r!2 x!0 x!0 s!1 s!1)) (* (- 27) (* s00 x!0 x!0 s!1)) (* 18 (* ?x2671 ?x3832 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* 12 (* s00 s00 x!0 x!0 x!0)) (* 486 (* s00 r00 r00 r!2 x!0 s!1 s!1)) (* 18 (* x00 ?x2671 ?x2671 ?x3832 ?x3832 ?x3832 ?x2691)) (* (- 162) (* r00 x00 r!2 s!1 s!1 s!1)) (* 9 (* s00 r!2 x!0 s!1 s!1 s!1)) (* (- 3) (* ?x2671 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* 24 (* s00 s00 r!2 r!2 x!0 x!0 x!0)) (* (- 4) (* s00 s00 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* (- 108) (* r00 x00 r!2 r!2 s!1 s!1 s!1)) (* 36 (* s00 s00 x!0 s!1 s!1)) (* 36 (* s00 r00 r00 x!0 x!0 x!0)) (* (- 108) (* s00 r00 r00 x!0 x!0 s!1)) (* 18 (* r00 x00 r!2 x!0 x!0 x!0 s!1)) (* (- 18) (* r00 x00 r!2 s!1 s!1 s!1 s!1)) (* (- 66) (* s00 r00 r00 r!2 s!1 s!1 s!1 s!1)) (* (- 18) (* r00 x00 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* 9 (* s00 x!0 s!1 s!1 s!1)) (* (- 9) (* s00 x!0 x!0 s!1 s!1)) (* (- 30) (* s00 r00 r00 s!1 s!1 s!1 s!1)) (* 6 (* r00 s00 ?x2671 ?x2671 ?x3832 ?x3832 ?x3832 ?x2691)) (* (- 162) (* s00 r00 r00 r!2 s!1 s!1 s!1)) (* (- 81) (* s00 r00 r!2 x!0 x!0 x!0)) (* 108 (* s00 r00 r00 x!0 s!1 s!1)) (* (- 11) (* ?x2671 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691 ?x2691)) (* (- 18) (* x00 ?x2671 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691)) (* 6 (* r00 ?x2671 ?x3832 ?x3832 ?x3832 ?x2691 ?x2691 ?x2691)) (* (- 36) (* s00 s00 x!0 x!0 s!1)))))
 (let (($x2817 (= ?x2816 0)))
 (let (($x2825 (not $x2817)))
 (let ((?x576 (* (- 9) s!1)))
 (let ((?x4670 (* r00 r00 s!1)))
 (let ((?x727 (* 36 ?x4670)))
 (let ((?x1346 (* x00 x00)))
 (let ((?x4191 (* 108 ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1915 (* 16 ?x1184)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x1486 (* (- 432) ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1572 (* (- 108) ?x805)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x2044 (* (- 36) ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1944 (* 51 ?x591)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3717 (* 108 ?x522)))
 (let ((?x137 (* 9 s00)))
 (let ((?x944 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x3717 (* (- 216) (* r00 r00 r00 s!1)) ?x1944 ?x2044 (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* (- 216) (* x00 x!0)) (* 108 (* x00 s!1)) ?x1572 ?x1486 (* 216 (* s00 r00 r00 r00)) ?x1915 ?x4191 (* 108 (* x!0 x!0)) (* (- 4) (* s!1 s!1 s!1)) ?x727 (* (- 108) (* r00 x!0)) (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)) (* 108 (* s00 x!0)) (* 108 (* s00 r00 s!1)) (* (- 108) (* x!0 s!1)) (* 15 (* s!1 s!1)) ?x576)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x2834 (* 36 ?x877)))
 (let ((?x2831 (* (- 6) ?x805)))
 (let ((?x2842 (* 15 ?x591)))
 (let ((?x3476 (* 54 ?x522)))
 (let ((?x577 (+ ?x137 (* (- 54) (* r!2 x!0)) (* (- 24) (* s00 r00)) ?x3476 ?x2842 (* 4 (* s00 s00 r!2)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) ?x2044 (* 2 (* s00 s00 r00)) (* (- 2) (* s00 r!2 s!1)) (* 6 (* x00 s!1)) ?x2831 ?x2834 (* 24 (* r!2 s!1)) (* 54 (* x00 r!2)) ?x727 (* (- 24) (* s00 r!2)) (* (- 54) (* r00 x!0)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) (* (- 36) (* r00 r!2 x!0)) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* 2 (* s00 r00 s!1)) (* (- 6) (* x!0 s!1)) (* (- 3) (* s!1 s!1)) (* (- 2) (* r!2 s!1 s!1)) ?x576)))
 (let (($x1592 (= ?x577 0)))
 (let ((?x2518 (* (- 3) s!1)))
 (let ((?x1342 (* 4 ?x591)))
 (let ((?x1948 (* 18 ?x522)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4985 (+ ?x44 (* (- 18) (* r!2 x!0)) (* (- 9) (* s00 r00)) ?x1948 ?x1342 (* (- 6) ?x647) (* 9 (* r!2 s!1)) (* 18 (* x00 r!2)) (* 6 ?x4670) (* (- 6) (* r00 r!2 s!1)) (* (- 9) (* s00 r!2)) (* (- 18) (* r00 x!0)) (* (- 2) (* s00 s!1)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)) (* (- 2) (* s!1 s!1)) ?x2518)))
 (let (($x4987 (= ?x4985 0)))
 (let ((?x2515 (* 6 x!0)))
 (let ((?x1585 (* 3 r!2)))
 (let ((?x1560 (* r!2 s!1)))
 (let ((?x1832 (* 2 ?x1560)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x426 (* s00 r00)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x4887 (+ ?x44 ?x500 ?x501 ?x504 ?x470 ?x1832 ?x1585 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x2515 ?x2518)))
 (let (($x4898 (= ?x4887 0)))
 (let (($x3839 (and $x4995 $x4898 $x4987 $x1592 (= ?x944 0) $x2825)))
 (let ((?x2683 (+ ?x2670 x!0)))
 (let ((?x4994 (+ (* 6 (* s!1 s!1 s!1 s!1 s!1 s00 r00 r00)) (* (- 18) (* x00 ?x2671 ?x2671 ?x2683 ?x2683 ?x2683 ?x2691)) (* 18 (* r00 ?x2671 ?x2683 ?x2683 ?x2683 ?x2683 ?x2691)) (* (- 9) (* r00 ?x2671 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* 6 (* r00 s00 ?x2671 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* 4 (* s00 s00 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* 11 (* ?x2671 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691 ?x2691)) (* 540 (* r!2 r!2 s!1 x!0 x!0 s00 r00 r00)) (* 198 (* r!2 s!1 s!1 x!0 x!0 s00 r00 r00)) (* 90 (* s!1 s!1 x!0 x!0 s00 r00 r00)) (* 486 (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* (- 198) (* r!2 s!1 s!1 s!1 x!0 s00 r00 r00)) (* 108 (* s!1 x!0 x!0 s00 r00 r00)) (* (- 90) (* s!1 s!1 s!1 x!0 s00 r00 r00)) (* (- 66) (* r!2 s!1 x!0 x!0 x!0 s00 r00 r00)) (* (- 180) (* r!2 r!2 x!0 x!0 x!0 s00 r00 r00)) (* (- 30) (* s!1 x!0 x!0 x!0 s00 r00 r00)) (* (- 162) (* r!2 x!0 x!0 x!0 s00 r00 r00)) (* (- 36) (* x!0 x!0 x!0 s00 r00 r00)) (* 36 (* s!1 s!1 s!1 s00 r00 r00)) (* 162 (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* 30 (* s!1 s!1 s!1 s!1 s00 r00 r00)) (* 180 (* r!2 r!2 s!1 s!1 s!1 s00 r00 r00)) (* 66 (* r!2 s!1 s!1 s!1 s!1 s00 r00 r00)) (* (- 108) (* s!1 s!1 x!0 s00 r00 r00)) (* (- 486) (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 540) (* r!2 r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 6) (* r00 r00 ?x2671 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* (- 18) (* r00 ?x2683 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* (- 3) (* ?x2683 ?x2683 ?x2683 ?x2691 ?x2691 ?x2691)) (* 9 (* s!1 s!1 s!1 s00)) (* (- 27) (* s!1 s!1 x!0 s00)) (* 27 (* s!1 x!0 x!0 s00)) (* (- 9) (* x!0 x!0 x!0 s00)) (* (- 9) (* r00 s00 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* 18 (* x00 ?x2671 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* (- 2) (* s00 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691 ?x2691)) (* 27 (* r!2 s!1 s!1 s!1 s00)) (* (- 81) (* r!2 s!1 s!1 x!0 s00)) (* 81 (* r!2 s!1 x!0 x!0 s00)) (* (- 162) (* r!2 x!0 x!0 x!0 r00 x00)) (* (- 27) (* r!2 x!0 x!0 x!0 s00)) (* (- 18) (* s!1 x!0 x!0 x!0 r00 x00)) (* (- 54) (* x!0 x!0 x!0 r00 x00)) (* 18 (* r!2 r!2 s!1 s!1 s!1 s00)) (* 54 (* r!2 s!1 s!1 x!0 x!0 r00 x00)) (* 54 (* s!1 s!1 x!0 x!0 r00 x00)) (* 324 (* r!2 r!2 s!1 x!0 x!0 r00 x00)) (* 486 (* r!2 s!1 x!0 x!0 r00 x00)) (* (- 54) (* r!2 r!2 s!1 s!1 x!0 s00)) (* 162 (* s!1 x!0 x!0 r00 x00)) (* 54 (* r!2 r!2 s!1 x!0 x!0 s00)) (* (- 54) (* r!2 s!1 s!1 s!1 x!0 r00 x00)) (* (- 54) (* s!1 s!1 s!1 x!0 r00 x00)) (* (- 324) (* r!2 r!2 s!1 s!1 x!0 r00 x00)) (* (- 486) (* r!2 s!1 s!1 x!0 r00 x00)) (* (- 162) (* s!1 s!1 x!0 r00 x00)) (* (- 18) (* r!2 r!2 x!0 x!0 x!0 s00)) (* 3 (* s!1 s!1 s!1 s!1 s00)) (* 3 (* r!2 s!1 s!1 s!1 s!1 s00)) (* 54 (* s!1 s!1 s!1 r00 x00)) (* (- 9) (* s!1 s!1 s!1 x!0 s00)) (* 162 (* r!2 s!1 s!1 s!1 r00 x00)) (* (- 9) (* r!2 s!1 s!1 s!1 x!0 s00)) (* 18 (* s!1 s!1 s!1 s!1 r00 x00)) (* 18 (* r!2 s!1 s!1 s!1 s!1 r00 x00)) (* 9 (* s!1 s!1 x!0 x!0 s00)) (* 108 (* r!2 r!2 s!1 s!1 s!1 r00 x00)) (* 9 (* r!2 s!1 s!1 x!0 x!0 s00)) (* (- 3) (* s!1 x!0 x!0 x!0 s00)) (* (- 3) (* r!2 s!1 x!0 x!0 x!0 s00)) (* 3 (* ?x2671 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* 18 (* r00 x00 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* (- 108) (* r!2 r!2 x!0 x!0 x!0 r00 x00)) (* (- 18) (* r!2 s!1 x!0 x!0 x!0 r00 x00)) (* (- 18) (* ?x2671 ?x2683 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* (- 6) (* r00 ?x2671 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691 ?x2691)) (* 6 (* r00 r00 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691 ?x2691)) (* (- 2) (* ?x2683 ?x2683 ?x2683 ?x2691 ?x2691 ?x2691 ?x2691)) (* 9 (* r!2 s!1 x!0 x!0 x!0 s00 r00)) (* 9 (* s!1 x!0 x!0 x!0 s00 r00)) (* 54 (* r!2 r!2 x!0 x!0 x!0 s00 r00)) (* 81 (* r!2 x!0 x!0 x!0 s00 r00)) (* 3 (* s00 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* 6 (* r00 ?x2671 ?x2671 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* 27 (* x!0 x!0 x!0 s00 r00)) (* (- 27) (* r!2 s!1 s!1 x!0 x!0 s00 r00)) (* (- 162) (* r!2 r!2 s!1 x!0 x!0 s00 r00)) (* (- 6) (* r00 s00 ?x2671 ?x2671 ?x2683 ?x2683 ?x2683 ?x2691)) (* (- 27) (* s!1 s!1 x!0 x!0 s00 r00)) (* (- 7) (* s00 ?x2671 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* (- 243) (* r!2 s!1 x!0 x!0 s00 r00)) (* (- 81) (* s!1 x!0 x!0 s00 r00)) (* 9 (* r00 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691 ?x2691)) (* 18 (* ?x2671 ?x2671 ?x2683 ?x2683 ?x2683 ?x2683 ?x2691)) (* (- 27) (* s!1 s!1 s!1 s00 r00)) (* (- 81) (* r!2 s!1 s!1 s!1 s00 r00)) (* (- 54) (* r!2 r!2 s!1 s!1 s!1 s00 r00)) (* (- 9) (* s!1 s!1 s!1 s!1 s00 r00)) (* (- 9) (* r!2 s!1 s!1 s!1 s!1 s00 r00)) (* 81 (* s!1 s!1 x!0 s00 r00)) (* 243 (* r!2 s!1 s!1 x!0 s00 r00)) (* 162 (* r!2 r!2 s!1 s!1 x!0 s00 r00)) (* 27 (* s!1 s!1 s!1 x!0 s00 r00)) (* 27 (* r!2 s!1 s!1 s!1 x!0 s00 r00)) (* 12 (* s!1 s!1 s!1 s00 s00)) (* (- 6) (* s!1 s!1 x!0 x!0 x!0 s00 r00 r00)) (* (- 36) (* s!1 s!1 x!0 s00 s00)) (* 36 (* s!1 x!0 x!0 s00 s00)) (* (- 12) (* x!0 x!0 x!0 s00 s00)) (* 36 (* r!2 s!1 s!1 s!1 s00 s00)) (* 4 (* s!1 s!1 s!1 s!1 s00 s00)) (* (- 108) (* r!2 s!1 s!1 x!0 s00 s00)) (* (- 12) (* s!1 s!1 s!1 x!0 s00 s00)) (* 108 (* r!2 s!1 x!0 x!0 s00 s00)) (* 12 (* s!1 s!1 x!0 x!0 s00 s00)) (* (- 18) (* s!1 s!1 s!1 s!1 x!0 s00 r00 r00)) (* (- 9) (* ?x2671 ?x2671 ?x2683 ?x2683 ?x2683 ?x2691 ?x2691)) (* (- 36) (* r!2 x!0 x!0 x!0 s00 s00)) (* (- 4) (* s!1 x!0 x!0 x!0 s00 s00)) (* 18 (* s!1 s!1 s!1 x!0 x!0 s00 r00 r00)) (* 9 (* s00 ?x2671 ?x2671 ?x2683 ?x2683 ?x2683 ?x2691)) (* (- 12) (* r!2 s!1 s!1 s!1 x!0 s00 s00)) (* (- 72) (* r!2 r!2 s!1 s!1 x!0 s00 s00)) (* 12 (* r!2 s!1 s!1 x!0 x!0 s00 s00)) (* 72 (* r!2 r!2 s!1 x!0 x!0 s00 s00)) (* 4 (* r!2 s!1 s!1 s!1 s!1 s00 s00)) (* 24 (* r!2 r!2 s!1 s!1 s!1 s00 s00)) (* (- 24) (* r!2 r!2 x!0 x!0 x!0 s00 s00)) (* (- 4) (* r!2 s!1 x!0 x!0 x!0 s00 s00)))))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x822 (* s!1 r00 r00)))
 (let ((?x595 (* (- 36) ?x822)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x3646 (* 9 s!1)))
 (let ((?x2660 (+ ?x3646 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s!1 s!1)) ?x595 ?x1365 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x732 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1129 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x883 (* 12 (* s!1 s!1 s00)) ?x1371 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1375 (* 216 (* x!0 x00)) ?x1376)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x693 (+ ?x3646 ?x987 (* (- 24) ?x1560) (* 24 (* r!2 s00)) ?x564 ?x551 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x595 ?x916 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1000 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x696 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x806 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x890 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x4838 (+ (* 3 s!1) ?x378 (* (- 9) ?x1560) (* 9 (* r!2 s00)) ?x541 ?x536 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x822) ?x604 (* 18 (* x!0 r00)) ?x648 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1462 (+ ?x1585 ?x2518 ?x2515 ?x44 ?x500 ?x501 ?x1832 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x504 ?x470)))
 (let (($x489 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x301)) 0)))
 (let (($x4842 (and $x489 (= ?x1462 0) (= ?x4838 0) (= ?x693 0) (= ?x2660 0) (not (= ?x4994 0)))))
 (let (($x2759 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1383 (+ 3 ?x211 s)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x1389 (+ ?x280 x)))
 (let ((?x1396 (+ 1 r)))
 (let ((?x461 (+ (* 6 (* s s s s s s00 r00 r00)) (* (- 18) (* x00 ?x1396 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383)) (* 18 (* r00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1389 ?x1383)) (* (- 9) (* r00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 4 (* s00 s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 11 (* ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 540 (* r r s x x s00 r00 r00)) (* 198 (* r s s x x s00 r00 r00)) (* 90 (* s s x x s00 r00 r00)) (* 486 (* r s x x s00 r00 r00)) (* (- 198) (* r s s s x s00 r00 r00)) (* 108 (* s x x s00 r00 r00)) (* (- 90) (* s s s x s00 r00 r00)) (* (- 66) (* r s x x x s00 r00 r00)) (* (- 180) (* r r x x x s00 r00 r00)) (* (- 30) (* s x x x s00 r00 r00)) (* (- 162) (* r x x x s00 r00 r00)) (* (- 36) (* x x x s00 r00 r00)) (* 36 (* s s s s00 r00 r00)) (* 162 (* r s s s s00 r00 r00)) (* 30 (* s s s s s00 r00 r00)) (* 180 (* r r s s s s00 r00 r00)) (* 66 (* r s s s s s00 r00 r00)) (* (- 108) (* s s x s00 r00 r00)) (* (- 486) (* r s s x s00 r00 r00)) (* (- 540) (* r r s s x s00 r00 r00)) (* (- 6) (* r00 r00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 18) (* r00 ?x1389 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 3) (* ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 9 (* s s s s00)) (* (- 27) (* s s x s00)) (* 27 (* s x x s00)) (* (- 9) (* x x x s00)) (* (- 9) (* r00 s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 18 (* x00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 2) (* s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 27 (* r s s s s00)) (* (- 81) (* r s s x s00)) (* 81 (* r s x x s00)) (* (- 162) (* r x x x r00 x00)) (* (- 27) (* r x x x s00)) (* (- 18) (* s x x x r00 x00)) (* (- 54) (* x x x r00 x00)) (* 18 (* r r s s s s00)) (* 54 (* r s s x x r00 x00)) (* 54 (* s s x x r00 x00)) (* 324 (* r r s x x r00 x00)) (* 486 (* r s x x r00 x00)) (* (- 54) (* r r s s x s00)) (* 162 (* s x x r00 x00)) (* 54 (* r r s x x s00)) (* (- 54) (* r s s s x r00 x00)) (* (- 54) (* s s s x r00 x00)) (* (- 324) (* r r s s x r00 x00)) (* (- 486) (* r s s x r00 x00)) (* (- 162) (* s s x r00 x00)) (* (- 18) (* r r x x x s00)) (* 3 (* s s s s s00)) (* 3 (* r s s s s s00)) (* 54 (* s s s r00 x00)) (* (- 9) (* s s s x s00)) (* 162 (* r s s s r00 x00)) (* (- 9) (* r s s s x s00)) (* 18 (* s s s s r00 x00)) (* 18 (* r s s s s r00 x00)) (* 9 (* s s x x s00)) (* 108 (* r r s s s r00 x00)) (* 9 (* r s s x x s00)) (* (- 3) (* s x x x s00)) (* (- 3) (* r s x x x s00)) (* 3 (* ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 18 (* r00 x00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 108) (* r r x x x r00 x00)) (* (- 18) (* r s x x x r00 x00)) (* (- 18) (* ?x1396 ?x1389 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 6) (* r00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 r00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 2) (* ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383 ?x1383)) (* 9 (* r s x x x s00 r00)) (* 9 (* s x x x s00 r00)) (* 54 (* r r x x x s00 r00)) (* 81 (* r x x x s00 r00)) (* 3 (* s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 6 (* r00 ?x1396 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 27 (* x x x s00 r00)) (* (- 27) (* r s s x x s00 r00)) (* (- 162) (* r r s x x s00 r00)) (* (- 6) (* r00 s00 ?x1396 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383)) (* (- 27) (* s s x x s00 r00)) (* (- 7) (* s00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 243) (* r s x x s00 r00)) (* (- 81) (* s x x s00 r00)) (* 9 (* r00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 18 (* ?x1396 ?x1396 ?x1389 ?x1389 ?x1389 ?x1389 ?x1383)) (* (- 27) (* s s s s00 r00)) (* (- 81) (* r s s s s00 r00)) (* (- 54) (* r r s s s s00 r00)) (* (- 9) (* s s s s s00 r00)) (* (- 9) (* r s s s s s00 r00)) (* 81 (* s s x s00 r00)) (* 243 (* r s s x s00 r00)) (* 162 (* r r s s x s00 r00)) (* 27 (* s s s x s00 r00)) (* 27 (* r s s s x s00 r00)) (* 12 (* s s s s00 s00)) (* (- 6) (* s s x x x s00 r00 r00)) (* (- 36) (* s s x s00 s00)) (* 36 (* s x x s00 s00)) (* (- 12) (* x x x s00 s00)) (* 36 (* r s s s s00 s00)) (* 4 (* s s s s s00 s00)) (* (- 108) (* r s s x s00 s00)) (* (- 12) (* s s s x s00 s00)) (* 108 (* r s x x s00 s00)) (* 12 (* s s x x s00 s00)) (* (- 18) (* s s s s x s00 r00 r00)) (* (- 9) (* ?x1396 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 36) (* r x x x s00 s00)) (* (- 4) (* s x x x s00 s00)) (* 18 (* s s s x x s00 r00 r00)) (* 9 (* s00 ?x1396 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383)) (* (- 12) (* r s s s x s00 s00)) (* (- 72) (* r r s s x s00 s00)) (* 12 (* r s s x x s00 s00)) (* 72 (* r r s x x s00 s00)) (* 4 (* r s s s s s00 s00)) (* 24 (* r r s s s s00 s00)) (* (- 24) (* r r x x x s00 s00)) (* (- 4) (* r s x x x s00 s00)))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x565 (* s r00 r00)))
 (let ((?x864 (* (- 36) ?x565)))
 (let ((?x522 (* r00 x00)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x426 (* s00 r00)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1377 (+ ?x143 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s s)) ?x864 ?x1365 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x732 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1129 (* 108 (* s x)) (* (- 108) (* x x)) ?x883 (* 12 (* s s s00)) ?x1371 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1375 (* 216 (* x x00)) ?x1376)))
 (let (($x1378 (= ?x1377 0)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1079 (+ ?x143 ?x987 (* (- 24) (* r s)) (* 24 (* r s00)) ?x564 ?x551 ?x569 (* 54 (* r x)) (* 36 (* r x r00)) ?x864 ?x916 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1000 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x696 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x806 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x890 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1084 (= ?x1079 0)))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x745 (+ ?x47 ?x378 (* (- 9) (* r s)) (* 9 (* r s00)) ?x541 ?x536 ?x546 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x565) ?x604 (* 18 (* x r00)) ?x648 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x752 (= ?x745 0)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x499 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x505 (+ ?x43 ?x499 ?x56 ?x44 ?x500 ?x501 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x504 ?x470)))
 (let (($x506 (= ?x505 0)))
 (let ((?x301 (* r00 r00)))
 (let ((?x302 (* 3 ?x301)))
 (let ((?x331 (* (- 1) s00)))
 (let (($x334 (= (+ s ?x331 (* (- 3) (* r r)) ?x302) 0)))
 (and $x334 $x506 $x752 $x1084 $x1378 (not (= ?x461 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1781 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x3413 (+ 3 s ?x211)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x2871 (+ x ?x280)))
 (let ((?x1396 (+ 1 r)))
 (let ((?x2903 (+ (* 2 (* s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 18) (* x00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* 18 (* r00 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 3 (* ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 9 (* ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 6 (* r00 r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 9 (* r00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 3 (* s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 3) (* ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 18) (* r00 x00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 18 (* ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 6 (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 6) (* r00 r00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 9) (* r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 9) (* s00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* 4 (* s00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 3) (* s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 7 (* s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 18) (* ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413)) (* 2 (* ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413 ?x3413)) (* 6 (* r00 s00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 9) (* r00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 6 (* r00 r00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 18 (* r00 x00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 18) (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413)) (* 9 (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 4) (* s00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 11) (* ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 18 (* x00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)))))
 (let (($x3420 (not (= ?x2903 0))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x4191 (* 108 ?x1346)))
 (let ((?x1996 (* (- 9) s)))
 (let ((?x2387 (* r00 r00 s00)))
 (let ((?x1980 (* (- 36) ?x2387)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1944 (* 51 ?x591)))
 (let ((?x3396 (* r00 r00 s)))
 (let ((?x1643 (* 36 ?x3396)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1915 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1572 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x1486 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3717 (* 108 ?x522)))
 (let ((?x2924 (+ (* 216 (* r00 s00 x00)) ?x3717 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1486 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1572 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1915 (* (- 108) (* x s)) ?x1643 ?x1944 (* (- 108) (* r00 x)) ?x137 ?x1980 ?x1996 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4191)))
 (let (($x4937 (= ?x2924 0)))
 (let ((?x2842 (* 15 ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x2834 (* 36 ?x877)))
 (let ((?x2831 (* (- 6) ?x805)))
 (let ((?x3476 (* 54 ?x522)))
 (let ((?x1603 (+ (* 24 (* s r)) ?x3476 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2831 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1643 ?x2834 ?x2842 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1980 (* 54 (* x00 r)) ?x1996 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x499 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1342 (* 4 ?x591)))
 (let ((?x1948 (* 18 ?x522)))
 (let ((?x2764 (+ (* 9 (* s r)) ?x1948 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3396) ?x1342 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2387) (* 18 (* x00 r)) ?x499 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1336 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x499 ?x500 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x501 ?x470)))
 (let (($x851 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x851 (= ?x1336 0) (= ?x2764 0) (= ?x1603 0) $x4937 $x3420))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2760 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1383 (+ 3 ?x211 s)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x1389 (+ ?x280 x)))
 (let ((?x1396 (+ 1 r)))
 (let ((?x461 (+ (* 6 (* s s s s s s00 r00 r00)) (* (- 18) (* x00 ?x1396 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383)) (* 18 (* r00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1389 ?x1383)) (* (- 9) (* r00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 4 (* s00 s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 11 (* ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 540 (* r r s x x s00 r00 r00)) (* 198 (* r s s x x s00 r00 r00)) (* 90 (* s s x x s00 r00 r00)) (* 486 (* r s x x s00 r00 r00)) (* (- 198) (* r s s s x s00 r00 r00)) (* 108 (* s x x s00 r00 r00)) (* (- 90) (* s s s x s00 r00 r00)) (* (- 66) (* r s x x x s00 r00 r00)) (* (- 180) (* r r x x x s00 r00 r00)) (* (- 30) (* s x x x s00 r00 r00)) (* (- 162) (* r x x x s00 r00 r00)) (* (- 36) (* x x x s00 r00 r00)) (* 36 (* s s s s00 r00 r00)) (* 162 (* r s s s s00 r00 r00)) (* 30 (* s s s s s00 r00 r00)) (* 180 (* r r s s s s00 r00 r00)) (* 66 (* r s s s s s00 r00 r00)) (* (- 108) (* s s x s00 r00 r00)) (* (- 486) (* r s s x s00 r00 r00)) (* (- 540) (* r r s s x s00 r00 r00)) (* (- 6) (* r00 r00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 18) (* r00 ?x1389 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 3) (* ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 9 (* s s s s00)) (* (- 27) (* s s x s00)) (* 27 (* s x x s00)) (* (- 9) (* x x x s00)) (* (- 9) (* r00 s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 18 (* x00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 2) (* s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 27 (* r s s s s00)) (* (- 81) (* r s s x s00)) (* 81 (* r s x x s00)) (* (- 162) (* r x x x r00 x00)) (* (- 27) (* r x x x s00)) (* (- 18) (* s x x x r00 x00)) (* (- 54) (* x x x r00 x00)) (* 18 (* r r s s s s00)) (* 54 (* r s s x x r00 x00)) (* 54 (* s s x x r00 x00)) (* 324 (* r r s x x r00 x00)) (* 486 (* r s x x r00 x00)) (* (- 54) (* r r s s x s00)) (* 162 (* s x x r00 x00)) (* 54 (* r r s x x s00)) (* (- 54) (* r s s s x r00 x00)) (* (- 54) (* s s s x r00 x00)) (* (- 324) (* r r s s x r00 x00)) (* (- 486) (* r s s x r00 x00)) (* (- 162) (* s s x r00 x00)) (* (- 18) (* r r x x x s00)) (* 3 (* s s s s s00)) (* 3 (* r s s s s s00)) (* 54 (* s s s r00 x00)) (* (- 9) (* s s s x s00)) (* 162 (* r s s s r00 x00)) (* (- 9) (* r s s s x s00)) (* 18 (* s s s s r00 x00)) (* 18 (* r s s s s r00 x00)) (* 9 (* s s x x s00)) (* 108 (* r r s s s r00 x00)) (* 9 (* r s s x x s00)) (* (- 3) (* s x x x s00)) (* (- 3) (* r s x x x s00)) (* 3 (* ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 18 (* r00 x00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 108) (* r r x x x r00 x00)) (* (- 18) (* r s x x x r00 x00)) (* (- 18) (* ?x1396 ?x1389 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 6) (* r00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 r00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 2) (* ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383 ?x1383)) (* 9 (* r s x x x s00 r00)) (* 9 (* s x x x s00 r00)) (* 54 (* r r x x x s00 r00)) (* 81 (* r x x x s00 r00)) (* 3 (* s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 6 (* r00 ?x1396 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 27 (* x x x s00 r00)) (* (- 27) (* r s s x x s00 r00)) (* (- 162) (* r r s x x s00 r00)) (* (- 6) (* r00 s00 ?x1396 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383)) (* (- 27) (* s s x x s00 r00)) (* (- 7) (* s00 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 243) (* r s x x s00 r00)) (* (- 81) (* s x x s00 r00)) (* 9 (* r00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 18 (* ?x1396 ?x1396 ?x1389 ?x1389 ?x1389 ?x1389 ?x1383)) (* (- 27) (* s s s s00 r00)) (* (- 81) (* r s s s s00 r00)) (* (- 54) (* r r s s s s00 r00)) (* (- 9) (* s s s s s00 r00)) (* (- 9) (* r s s s s s00 r00)) (* 81 (* s s x s00 r00)) (* 243 (* r s s x s00 r00)) (* 162 (* r r s s x s00 r00)) (* 27 (* s s s x s00 r00)) (* 27 (* r s s s x s00 r00)) (* 12 (* s s s s00 s00)) (* (- 6) (* s s x x x s00 r00 r00)) (* (- 36) (* s s x s00 s00)) (* 36 (* s x x s00 s00)) (* (- 12) (* x x x s00 s00)) (* 36 (* r s s s s00 s00)) (* 4 (* s s s s s00 s00)) (* (- 108) (* r s s x s00 s00)) (* (- 12) (* s s s x s00 s00)) (* 108 (* r s x x s00 s00)) (* 12 (* s s x x s00 s00)) (* (- 18) (* s s s s x s00 r00 r00)) (* (- 9) (* ?x1396 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 36) (* r x x x s00 s00)) (* (- 4) (* s x x x s00 s00)) (* 18 (* s s s x x s00 r00 r00)) (* 9 (* s00 ?x1396 ?x1396 ?x1389 ?x1389 ?x1389 ?x1383)) (* (- 12) (* r s s s x s00 s00)) (* (- 72) (* r r s s x s00 s00)) (* 12 (* r s s x x s00 s00)) (* 72 (* r r s x x s00 s00)) (* 4 (* r s s s s s00 s00)) (* 24 (* r r s s s s00 s00)) (* (- 24) (* r r x x x s00 s00)) (* (- 4) (* r s x x x s00 s00)))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x565 (* s r00 r00)))
 (let ((?x864 (* (- 36) ?x565)))
 (let ((?x522 (* r00 x00)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x426 (* s00 r00)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1377 (+ ?x143 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s s)) ?x864 ?x1365 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x732 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1129 (* 108 (* s x)) (* (- 108) (* x x)) ?x883 (* 12 (* s s s00)) ?x1371 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1375 (* 216 (* x x00)) ?x1376)))
 (let (($x1378 (= ?x1377 0)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1079 (+ ?x143 ?x987 (* (- 24) (* r s)) (* 24 (* r s00)) ?x564 ?x551 ?x569 (* 54 (* r x)) (* 36 (* r x r00)) ?x864 ?x916 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1000 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x696 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x806 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x890 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1084 (= ?x1079 0)))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x745 (+ ?x47 ?x378 (* (- 9) (* r s)) (* 9 (* r s00)) ?x541 ?x536 ?x546 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x565) ?x604 (* 18 (* x r00)) ?x648 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x752 (= ?x745 0)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x499 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x505 (+ ?x43 ?x499 ?x56 ?x44 ?x500 ?x501 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x504 ?x470)))
 (let (($x506 (= ?x505 0)))
 (let ((?x301 (* r00 r00)))
 (let ((?x302 (* 3 ?x301)))
 (let ((?x331 (* (- 1) s00)))
 (let (($x334 (= (+ s ?x331 (* (- 3) (* r r)) ?x302) 0)))
 (let (($x2455 (and $x334 $x506 $x752 $x1084 $x1378 (not (= ?x461 0)))))
 (let ((?x3413 (+ 3 s ?x211)))
 (let ((?x2871 (+ x ?x280)))
 (let ((?x2903 (+ (* 2 (* s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 18) (* x00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* 18 (* r00 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 3 (* ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 9 (* ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 6 (* r00 r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 9 (* r00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 3 (* s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 3) (* ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 18) (* r00 x00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 18 (* ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 6 (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 6) (* r00 r00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 9) (* r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 9) (* s00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* 4 (* s00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 3) (* s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 7 (* s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 18) (* ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413)) (* 2 (* ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413 ?x3413)) (* 6 (* r00 s00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 9) (* r00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 6 (* r00 r00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 18 (* r00 x00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 18) (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413)) (* 9 (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 4) (* s00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 11) (* ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 18 (* x00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)))))
 (let (($x3420 (not (= ?x2903 0))))
 (let ((?x4191 (* 108 ?x1346)))
 (let ((?x1996 (* (- 9) s)))
 (let ((?x2387 (* r00 r00 s00)))
 (let ((?x1980 (* (- 36) ?x2387)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1944 (* 51 ?x591)))
 (let ((?x3396 (* r00 r00 s)))
 (let ((?x1643 (* 36 ?x3396)))
 (let ((?x1915 (* 16 ?x1184)))
 (let ((?x1572 (* (- 108) ?x805)))
 (let ((?x1486 (* (- 432) ?x882)))
 (let ((?x3717 (* 108 ?x522)))
 (let ((?x2924 (+ (* 216 (* r00 s00 x00)) ?x3717 (* (- 54) (* r00 s00)) (* 15 ?x545) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1486 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1572 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1915 (* (- 108) (* x s)) ?x1643 ?x1944 (* (- 108) (* r00 x)) ?x137 ?x1980 ?x1996 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4191)))
 (let (($x4937 (= ?x2924 0)))
 (let ((?x2842 (* 15 ?x591)))
 (let ((?x2834 (* 36 ?x877)))
 (let ((?x2831 (* (- 6) ?x805)))
 (let ((?x3476 (* 54 ?x522)))
 (let ((?x1603 (+ (* 24 (* s r)) ?x3476 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x545) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2831 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1643 ?x2834 ?x2842 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1980 (* 54 (* x00 r)) ?x1996 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x1342 (* 4 ?x591)))
 (let ((?x1948 (* 18 ?x522)))
 (let ((?x2764 (+ (* 9 (* s r)) ?x1948 (* (- 9) (* r00 s00)) (* (- 2) ?x545) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3396) ?x1342 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2387) (* 18 (* x00 r)) ?x499 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x1336 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x499 ?x500 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x501 ?x470)))
 (let (($x851 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) ?x301)) 0)))
 (let (($x1794 (and $x851 (= ?x1336 0) (= ?x2764 0) (= ?x1603 0) $x4937 $x3420)))
 (rewrite (= $x1794 $x2455))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x3440 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x3413 (+ 3 s ?x211)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x2871 (+ x ?x280)))
 (let ((?x1396 (+ 1 r)))
 (let ((?x2903 (+ (* 2 (* s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 18) (* x00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* 18 (* r00 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 3 (* ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 9 (* ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 6 (* r00 r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 9 (* r00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 3 (* s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 3) (* ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 18) (* r00 x00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 18 (* ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 6 (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 6) (* r00 r00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 9) (* r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 9) (* s00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* 4 (* s00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 3) (* s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 7 (* s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 18) (* ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413)) (* 2 (* ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413 ?x3413)) (* 6 (* r00 s00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 9) (* r00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 6 (* r00 r00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 18 (* r00 x00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 18) (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413)) (* 9 (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 4) (* s00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 11) (* ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 18 (* x00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)))))
 (let (($x3420 (not (= ?x2903 0))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x4191 (* 108 ?x1346)))
 (let ((?x1996 (* (- 9) s)))
 (let ((?x2387 (* r00 r00 s00)))
 (let ((?x1980 (* (- 36) ?x2387)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1944 (* 51 ?x591)))
 (let ((?x3396 (* r00 r00 s)))
 (let ((?x1643 (* 36 ?x3396)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1915 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1572 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x1486 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3717 (* 108 ?x522)))
 (let ((?x2924 (+ (* 216 (* r00 s00 x00)) ?x3717 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1486 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1572 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1915 (* (- 108) (* x s)) ?x1643 ?x1944 (* (- 108) (* r00 x)) ?x137 ?x1980 ?x1996 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4191)))
 (let (($x4937 (= ?x2924 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x1841 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3396) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 ?x2387) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x2757 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3396) ?x604 (* 18 (* r00 x)) ?x378 (* 6 ?x2387) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2186 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x851 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x851 (= ?x2186 0) (= ?x2757 0) (= ?x1841 0) $x4937 $x3420)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1788 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x3413 (+ 3 s ?x211)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x2871 (+ x ?x280)))
 (let ((?x1396 (+ 1 r)))
 (let ((?x2903 (+ (* 2 (* s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 18) (* x00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* 18 (* r00 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 3 (* ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 9 (* ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 6 (* r00 r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 9 (* r00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 3 (* s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 3) (* ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 18) (* r00 x00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 18 (* ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 6 (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 6) (* r00 r00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 9) (* r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 9) (* s00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* 4 (* s00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 3) (* s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 7 (* s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 18) (* ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413)) (* 2 (* ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413 ?x3413)) (* 6 (* r00 s00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 9) (* r00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 6 (* r00 r00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 18 (* r00 x00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 18) (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413)) (* 9 (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 4) (* s00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 11) (* ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 18 (* x00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)))))
 (let (($x3420 (not (= ?x2903 0))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x4191 (* 108 ?x1346)))
 (let ((?x1996 (* (- 9) s)))
 (let ((?x2387 (* r00 r00 s00)))
 (let ((?x1980 (* (- 36) ?x2387)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1944 (* 51 ?x591)))
 (let ((?x3396 (* r00 r00 s)))
 (let ((?x1643 (* 36 ?x3396)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1915 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1572 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x1486 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3717 (* 108 ?x522)))
 (let ((?x2924 (+ (* 216 (* r00 s00 x00)) ?x3717 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1486 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1572 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1915 (* (- 108) (* x s)) ?x1643 ?x1944 (* (- 108) (* r00 x)) ?x137 ?x1980 ?x1996 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4191)))
 (let (($x4937 (= ?x2924 0)))
 (let ((?x2842 (* 15 ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x2834 (* 36 ?x877)))
 (let ((?x2831 (* (- 6) ?x805)))
 (let ((?x3476 (* 54 ?x522)))
 (let ((?x1603 (+ (* 24 (* s r)) ?x3476 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2831 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1643 ?x2834 ?x2842 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1980 (* 54 (* x00 r)) ?x1996 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x499 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1342 (* 4 ?x591)))
 (let ((?x1948 (* 18 ?x522)))
 (let ((?x2764 (+ (* 9 (* s r)) ?x1948 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3396) ?x1342 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2387) (* 18 (* x00 r)) ?x499 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1336 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x499 ?x500 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x501 ?x470)))
 (let (($x851 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1794 (and $x851 (= ?x1336 0) (= ?x2764 0) (= ?x1603 0) $x4937 $x3420)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x1841 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3396) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 ?x2387) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x2757 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3396) ?x604 (* 18 (* r00 x)) ?x378 (* 6 ?x2387) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2186 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x469))))
 (let (($x2353 (and $x851 (= ?x2186 0) (= ?x2757 0) (= ?x1841 0) $x4937 $x3420)))
 (rewrite (= $x2353 $x1794)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x277 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x219 (- (* 2 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x227 (+ (- ?x219 (* 6 ?x216 r00 r00 ?x212 s00 ?x213 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 r00 r00 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x216 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x231 (- (- ?x227 (* 3 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x234 (+ ?x231 (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x239 (- (- ?x234 (* 6 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x242 (+ (- ?x239 (* 9 ?x216 ?x216 ?x212 s00 ?x213 ?x213 ?x213)) (* 4 ?x216 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x246 (- (- ?x242 (* 3 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x251 (- (+ ?x246 (* 7 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x254 (+ ?x251 (* 2 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 r00 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x259 (+ (- ?x254 (* 9 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 18 ?x216 r00 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x263 (+ (- ?x259 (* 18 ?x216 r00 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x269 (- (- ?x263 (* 6 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 4 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x272 (+ (- ?x269 (* 11 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x272 0))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3373 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x3413 (+ 3 s ?x211)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x2871 (+ x ?x280)))
 (let ((?x1396 (+ 1 r)))
 (let ((?x2903 (+ (* 2 (* s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 18) (* x00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* 18 (* r00 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 3 (* ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 9 (* ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 6 (* r00 r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 9 (* r00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 3 (* s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 3) (* ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 18) (* r00 x00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 18 (* ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 6 (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 6) (* r00 r00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* (- 9) (* r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 9) (* s00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* 4 (* s00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 3) (* s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 7 (* s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 18) (* ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413)) (* 2 (* ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413 ?x3413)) (* 6 (* r00 s00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 9) (* r00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 6 (* r00 r00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* 18 (* r00 x00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)) (* (- 18) (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x2871 ?x3413)) (* 9 (* r00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 6) (* r00 s00 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 4) (* s00 s00 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413)) (* (- 11) (* ?x1396 ?x2871 ?x2871 ?x2871 ?x3413 ?x3413 ?x3413)) (* 18 (* x00 ?x1396 ?x1396 ?x2871 ?x2871 ?x2871 ?x3413)))))
 (let (($x3420 (not (= ?x2903 0))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x4191 (* 108 ?x1346)))
 (let ((?x1996 (* (- 9) s)))
 (let ((?x2387 (* r00 r00 s00)))
 (let ((?x1980 (* (- 36) ?x2387)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1944 (* 51 ?x591)))
 (let ((?x3396 (* r00 r00 s)))
 (let ((?x1643 (* 36 ?x3396)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1915 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1572 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x1486 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3717 (* 108 ?x522)))
 (let ((?x2924 (+ (* 216 (* r00 s00 x00)) ?x3717 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1486 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1572 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1915 (* (- 108) (* x s)) ?x1643 ?x1944 (* (- 108) (* r00 x)) ?x137 ?x1980 ?x1996 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4191)))
 (let (($x4937 (= ?x2924 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x1841 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3396) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 ?x2387) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x2757 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3396) ?x604 (* 18 (* r00 x)) ?x378 (* 6 ?x2387) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2186 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x851 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2353 (and $x851 (= ?x2186 0) (= ?x2757 0) (= ?x1841 0) $x4937 $x3420)))
 (let ((?x213 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x219 (- (* 2 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x227 (+ (- ?x219 (* 6 ?x216 r00 r00 ?x212 s00 ?x213 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 r00 r00 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x216 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x231 (- (- ?x227 (* 3 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x234 (+ ?x231 (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x239 (- (- ?x234 (* 6 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x242 (+ (- ?x239 (* 9 ?x216 ?x216 ?x212 s00 ?x213 ?x213 ?x213)) (* 4 ?x216 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x246 (- (- ?x242 (* 3 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x251 (- (+ ?x246 (* 7 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x254 (+ ?x251 (* 2 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 r00 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x259 (+ (- ?x254 (* 9 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 18 ?x216 r00 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x263 (+ (- ?x259 (* 18 ?x216 r00 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x269 (- (- ?x263 (* 6 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 4 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x272 (+ (- ?x269 (* 11 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x276 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x272 0))))))
 (rewrite (= $x276 $x2353)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x278 (asserted $x277)))
 (let ((@x1943 (mp (mp @x278 (quant-intro (proof-bind ?x3373) (= $x277 $x3440)) $x3440) (rewrite (= $x3440 $x3440)) $x3440)))
 (let ((@x5554 (mp (mp @x1943 (quant-intro (proof-bind ?x1788) (= $x3440 $x1781)) $x1781) (quant-intro (proof-bind ?x2760) (= $x1781 $x2759)) $x2759)))
 (let ((@x2836 (mp (mp~ @x5554 (sk (~ $x2759 $x4842)) $x4842) (rewrite (= $x4842 $x3839)) $x3839)))
 (let ((@x2827 (and-elim @x2836 $x4995)))
 (let ((@x2529 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4995) $x750)) @x2827 $x750)))
 (let (($x538 (>= ?x4858 0)))
 (let ((@x5440 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4995) $x538)) @x2827 $x538)))
 (let (($x596 (<= ?x4887 0)))
 (let ((@x1414 (and-elim @x2836 $x4898)))
 (let ((@x4648 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4898) $x596)) @x1414 $x596)))
 (let (($x547 (>= ?x4887 0)))
 (let ((@x3145 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4898) $x547)) @x1414 $x547)))
 (let (($x5004 (<= ?x577 0)))
 (let ((@x515 (and-elim @x2836 $x1592)))
 (let ((@x961 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1592) $x5004)) @x515 $x5004)))
 (let (($x4992 (>= ?x577 0)))
 (let ((@x1403 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1592) $x4992)) @x515 $x4992)))
 (let (($x959 (<= ?x4985 0)))
 (let ((@x1260 (and-elim @x2836 $x4987)))
 (let ((@x3144 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4987) $x959)) @x1260 $x959)))
 (let (($x531 (>= ?x4985 0)))
 (let ((@x3198 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4987) $x531)) @x1260 $x531)))
 (let (($x3201 (not (<= ?x2816 0))))
 (let (($x629 (>= ?x2816 0)))
 (let ((@x1020 ((_ th-lemma arith) (hypothesis (not $x629)) @x5440 @x2529 @x1403 @x961 @x3198 @x3144 @x3198 @x3144 @x1403 @x961 @x3145 @x4648 @x5440 @x2529 false)))
 (let ((@x5016 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2817 $x3201 (not $x629))) (and-elim @x2836 $x2825) (or $x3201 (not $x629)))))
 ((_ th-lemma arith) (unit-resolution @x5016 (lemma @x1020 $x629) $x3201) @x5440 @x2529 @x1403 @x961 @x3198 @x3144 @x3198 @x3144 @x1403 @x961 @x3145 @x4648 @x5440 @x2529 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        27
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1468
 :arith-nonlinear-bounds    20
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      8
 :arith-tableau-max-columns 252
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.89
 :memory                    3.89
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                3686006
 :num-checks                1
 :propagations              12
 :rlimit-count              50768
 :time                      0.06
 :total-time                0.08)
