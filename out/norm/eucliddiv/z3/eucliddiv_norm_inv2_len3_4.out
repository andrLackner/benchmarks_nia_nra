unsat
((set-logic NIA)
(declare-fun q!2 () Int)
(declare-fun r!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x77 (* y00 q00)))
 (let ((?x117 (+ r00 ?x77 (* (- 1) r!1) (* (- 1) (* y00 q!2)))))
 (let (($x1051 (<= ?x117 0)))
 (let (($x1271 (= ?x117 0)))
 (let ((?x972 (+ (* y00 y00 y00 y00 y00 q!2 q!2) (* y00 y00 y00 r!1 q!2) (* y00 y00 y00 y00 q!2 q!2 q!2) (* y00 y00 y00 y00 y00 q!2) (* y00 y00 q!2) (* 3 (* y00 y00 q!2 q!2)) (* 3 (* y00 y00 q!2 q!2 q!2)) (* y00 y00 q!2 q!2 q!2 q!2) (* y00 y00 y00 q00 r!1) (* 2 (* y00 y00 y00 q00 r!1 q!2)) (* (- 1) (* y00 y00 q00)) (* y00 y00 y00 q00 r!1 q!2 q!2) (* (- 2) (* y00 y00 y00 y00 q00 q!2)) (* (- 1) (* y00 y00 y00 y00 q00 q!2 q!2)) (* (- 1) (* y00 r00)) (* 3 (* y00 r!1 q!2)) (* 3 (* y00 r!1 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 q00)) (* (- 1) (* y00 y00 q00 q!2 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 r00)) (* (- 1) (* y00 y00 y00 r00)) (* (- 3) (* y00 r00 q!2)) (* (- 3) (* y00 r00 q!2 q!2)) (* (- 1) (* y00 r00 q!2 q!2 q!2)) (* y00 r00 r!1 r!1 r!1 q!2) (* (- 3) (* y00 y00 r00 r!1 r!1 q!2)) (* (- 3) (* y00 y00 y00 q00 r!1 r!1 q!2)) (* 3 (* y00 y00 y00 y00 q00 r!1)) (* 3 (* y00 y00 y00 y00 q00 r!1 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 q00 q!2)) (* y00 r00 r!1 r!1 r!1) (* (- 3) (* y00 y00 r00 r!1 r!1)) (* (- 1) (* y00 r!1 r!1 r!1 r!1)) (* (- 1) (* y00 r!1 r!1 r!1 r!1 q!2)) (* y00 y00 q00 r!1 r!1 r!1) (* y00 r!1) (* y00 y00 y00 r!1) (* (- 1) (* y00 y00 y00 y00 q00)) (* 3 (* y00 y00 y00 r00 r!1)) (* y00 y00 r00 r!1 q!2 q!2) (* y00 y00 y00 y00 r!1) (* (- 2) (* y00 y00 y00 y00 r!1 q!2)) (* 3 (* y00 y00 y00 r00 r!1 q!2)) (* (- 1) (* y00 y00 y00 y00 r00 q!2)) (* y00 y00 q00 r!1 r!1 r!1 q!2) (* (- 3) (* y00 y00 y00 q00 r!1 r!1)) (* y00 y00 r00 r!1) (* 2 (* y00 y00 r00 r!1 q!2)) (* (- 2) (* y00 y00 y00 r00 q!2)) (* (- 1) (* y00 y00 y00 r00 q!2 q!2)) (* 3 (* y00 y00 r!1 r!1 r!1)) (* 2 (* y00 y00 r!1 r!1 r!1 q!2)) (* (- 1) (* y00 y00 r!1 r!1 r!1 q!2 q!2)) (* (- 3) (* y00 y00 y00 r!1 r!1)) (* 3 (* y00 y00 y00 r!1 r!1 q!2 q!2)) (* (- 1) (* y00 y00 r!1 r!1)) (* (- 3) (* y00 y00 y00 y00 r!1 q!2 q!2)) (* (- 2) (* y00 y00 r!1 r!1 q!2)) (* (- 1) (* y00 y00 r!1 r!1 q!2 q!2)) (* (- 1) (* y00 y00 y00 r!1 q!2 q!2)) (* (- 3) (* y00 y00 q00 q!2 q!2)) (* (- 3) (* y00 y00 q00 q!2)) (* 2 (* y00 y00 y00 y00 q!2 q!2)) (* (- 1) (* y00 y00 y00 r!1 q!2 q!2 q!2)) (* y00 y00 y00 y00 q!2) (* y00 r!1 q!2 q!2 q!2))))
 (let (($x974 (= ?x972 0)))
 (let (($x845 (not $x974)))
 (let ((?x727 (+ y00 (* (- 1) y!0))))
 (let (($x728 (= ?x727 0)))
 (let (($x1494 (and $x728 $x1271 $x845)))
 (let ((?x1158 (* y00 y00 y00 y00 q00)))
 (let ((?x767 (* y00 y00 y00 r00)))
 (let ((?x708 (* y00 y00 y00 y00 r00)))
 (let ((?x554 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x351 (* y00 r00)))
 (let ((?x262 (* y00 y00 q00)))
 (let ((?x1244 (+ (* r!1 r!1 y00 y00) (* 2 (* q!2 r!1 r!1 y00 y00)) (* q!2 q!2 r!1 r!1 y00 y00) (* (- 1) (* r!1 y00 y00 y00)) (* (- 1) (* q!2 r!1 y00 y00 y00)) (* q!2 q!2 r!1 y00 y00 y00) (* q!2 q!2 q!2 r!1 y00 y00 y00) (* (- 1) (* q!2 y00 y00 y00 y00)) (* (- 2) (* q!2 q!2 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 y00 y00)) ?x262 (* 3 (* q!2 y00 y00 q00)) (* 3 (* q!2 q!2 y00 y00 q00)) (* q!2 q!2 q!2 y00 y00 q00) ?x351 (* 3 (* q!2 y00 r00)) (* 3 (* q!2 q!2 y00 r00)) (* q!2 q!2 q!2 y00 r00) (* (- 1) (* r!1 r!1 r!1 y00 y00 q00)) (* (- 1) (* q!2 r!1 r!1 r!1 y00 y00 q00)) (* 3 (* r!1 r!1 y00 y00 y00 q00)) (* 3 (* q!2 r!1 r!1 y00 y00 y00 q00)) (* (- 3) (* r!1 y00 y00 y00 y00 q00)) (* (- 3) (* q!2 r!1 y00 y00 y00 y00 q00)) ?x554 (* q!2 y00 y00 y00 y00 y00 q00) (* (- 1) (* r!1 r!1 r!1 y00 r00)) (* (- 1) (* q!2 r!1 r!1 r!1 y00 r00)) (* 3 (* r!1 r!1 y00 y00 r00)) (* 3 (* q!2 r!1 r!1 y00 y00 r00)) (* (- 3) (* r!1 y00 y00 y00 r00)) (* (- 3) (* q!2 r!1 y00 y00 y00 r00)) ?x708 (* q!2 y00 y00 y00 y00 r00) (* (- 1) (* r!1 y00 y00 r00)) (* (- 2) (* q!2 r!1 y00 y00 r00)) (* (- 1) (* q!2 q!2 r!1 y00 y00 r00)) ?x767 (* 2 (* q!2 y00 y00 y00 r00)) (* q!2 q!2 y00 y00 y00 r00) (* (- 3) (* r!1 r!1 r!1 y00 y00)) (* (- 2) (* q!2 r!1 r!1 r!1 y00 y00)) (* q!2 q!2 r!1 r!1 r!1 y00 y00) (* 3 (* r!1 r!1 y00 y00 y00)) (* (- 3) (* q!2 q!2 r!1 r!1 y00 y00 y00)) (* (- 1) (* r!1 y00 y00 y00 y00)) (* 2 (* q!2 r!1 y00 y00 y00 y00)) (* 3 (* q!2 q!2 r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 y00 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 y00 y00 y00 y00 y00)) (* (- 1) (* q!2 y00 y00)) (* (- 3) (* q!2 q!2 y00 y00)) (* (- 3) (* q!2 q!2 q!2 y00 y00)) (* (- 1) (* q!2 q!2 q!2 q!2 y00 y00)) (* (- 1) (* r!1 y00 y00 y00 q00)) (* (- 2) (* q!2 r!1 y00 y00 y00 q00)) (* (- 1) (* q!2 q!2 r!1 y00 y00 y00 q00)) ?x1158 (* 2 (* q!2 y00 y00 y00 y00 q00)) (* q!2 q!2 y00 y00 y00 y00 q00) (* (- 1) (* r!1 y00)) (* (- 3) (* q!2 r!1 y00)) (* (- 3) (* q!2 q!2 r!1 y00)) (* (- 1) (* q!2 q!2 q!2 r!1 y00)) (* r!1 r!1 r!1 r!1 y00) (* q!2 r!1 r!1 r!1 r!1 y00))))
 (let (($x1245 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x77)) 0) (not (= ?x1244 0)))))
 (let (($x1214 (exists ((q Int) (r Int) (y Int) )(! (let ((?x1280 (* q r r r r y00)))
 (let ((?x1279 (* r r r r y00)))
 (let ((?x1576 (* (- 1) (* q q q r y00))))
 (let ((?x1575 (* (- 3) (* q q r y00))))
 (let ((?x1574 (* (- 3) (* q r y00))))
 (let ((?x1573 (* (- 1) (* r y00))))
 (let ((?x1182 (* q q y00 y00 y00 y00 q00)))
 (let ((?x1572 (* 2 (* q y00 y00 y00 y00 q00))))
 (let ((?x1158 (* y00 y00 y00 y00 q00)))
 (let ((?x1571 (* (- 1) (* q q r y00 y00 y00 q00))))
 (let ((?x1570 (* (- 2) (* q r y00 y00 y00 q00))))
 (let ((?x1569 (* (- 1) (* r y00 y00 y00 q00))))
 (let ((?x1568 (* (- 1) (* q q q q y00 y00))))
 (let ((?x1567 (* (- 3) (* q q q y00 y00))))
 (let ((?x1258 (* (- 3) (* q q y00 y00))))
 (let ((?x1235 (* (- 1) (* q y00 y00))))
 (let ((?x995 (* (- 1) (* q q y00 y00 y00 y00 y00))))
 (let ((?x989 (* (- 1) (* q y00 y00 y00 y00 y00))))
 (let ((?x1009 (* 3 (* q q r y00 y00 y00 y00))))
 (let ((?x1566 (* 2 (* q r y00 y00 y00 y00))))
 (let ((?x1407 (* (- 1) (* r y00 y00 y00 y00))))
 (let ((?x1005 (* (- 3) (* q q r r y00 y00 y00))))
 (let ((?x1045 (* 3 (* r r y00 y00 y00))))
 (let ((?x823 (* q q r r r y00 y00)))
 (let ((?x1042 (* (- 2) (* q r r r y00 y00))))
 (let ((?x1565 (* (- 3) (* r r r y00 y00))))
 (let ((?x789 (* q q y00 y00 y00 r00)))
 (let ((?x1564 (* 2 (* q y00 y00 y00 r00))))
 (let ((?x767 (* y00 y00 y00 r00)))
 (let ((?x1563 (* (- 1) (* q q r y00 y00 r00))))
 (let ((?x1562 (* (- 2) (* q r y00 y00 r00))))
 (let ((?x1561 (* (- 1) (* r y00 y00 r00))))
 (let ((?x718 (* q y00 y00 y00 y00 r00)))
 (let ((?x708 (* y00 y00 y00 y00 r00)))
 (let ((?x1560 (* (- 3) (* q r y00 y00 y00 r00))))
 (let ((?x1559 (* (- 3) (* r y00 y00 y00 r00))))
 (let ((?x1558 (* 3 (* q r r y00 y00 r00))))
 (let ((?x1557 (* 3 (* r r y00 y00 r00))))
 (let ((?x1556 (* (- 1) (* q r r r y00 r00))))
 (let ((?x1555 (* (- 1) (* r r r y00 r00))))
 (let ((?x564 (* q y00 y00 y00 y00 y00 q00)))
 (let ((?x554 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1554 (* (- 3) (* q r y00 y00 y00 y00 q00))))
 (let ((?x1553 (* (- 3) (* r y00 y00 y00 y00 q00))))
 (let ((?x1552 (* 3 (* q r r y00 y00 y00 q00))))
 (let ((?x1551 (* 3 (* r r y00 y00 y00 q00))))
 (let ((?x1550 (* (- 1) (* q r r r y00 y00 q00))))
 (let ((?x1549 (* (- 1) (* r r r y00 y00 q00))))
 (let ((?x376 (* q q q y00 r00)))
 (let ((?x383 (* 3 (* q q y00 r00))))
 (let ((?x382 (* 3 (* q y00 r00))))
 (let ((?x351 (* y00 r00)))
 (let ((?x287 (* q q q y00 y00 q00)))
 (let ((?x294 (* 3 (* q q y00 y00 q00))))
 (let ((?x293 (* 3 (* q y00 y00 q00))))
 (let ((?x262 (* y00 y00 q00)))
 (let ((?x188 (* (- 1) (* q q q y00 y00 y00 y00))))
 (let ((?x145 (* q q q r y00 y00 y00)))
 (let ((?x144 (* q q r y00 y00 y00)))
 (let ((?x100 (* q q r r y00 y00)))
 (let ((?x91 (* r r y00 y00)))
 (let ((?x1986 (+ ?x91 (* 2 (* q r r y00 y00)) ?x100 (* (- 1) (* r y00 y00 y00)) (* (- 1) (* q r y00 y00 y00)) ?x144 ?x145 (* (- 1) (* q y00 y00 y00 y00)) (* (- 2) (* q q y00 y00 y00 y00)) ?x188 ?x262 ?x293 ?x294 ?x287 ?x351 ?x382 ?x383 ?x376 ?x1549 ?x1550 ?x1551 ?x1552 ?x1553 ?x1554 ?x554 ?x564 ?x1555 ?x1556 ?x1557 ?x1558 ?x1559 ?x1560 ?x708 ?x718 ?x1561 ?x1562 ?x1563 ?x767 ?x1564 ?x789 ?x1565 ?x1042 ?x823 ?x1045 ?x1005 ?x1407 ?x1566 ?x1009 ?x989 ?x995 ?x1235 ?x1258 ?x1567 ?x1568 ?x1569 ?x1570 ?x1571 ?x1158 ?x1572 ?x1182 ?x1573 ?x1574 ?x1575 ?x1576 ?x1279 ?x1280)))
 (let (($x106 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x83 (= (+ y (* (- 1) y00)) 0)))
 (and $x83 $x106 (not (= ?x1986 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x1255 (exists ((q Int) (r Int) (y Int) )(! (let ((?x72 (* (- 1) y00)))
 (let ((?x878 (+ r ?x72)))
 (let ((?x520 (+ 1 q)))
 (let ((?x868 (* y00 ?x520 ?x878 ?x878 ?x878 ?x878)))
 (let ((?x1001 (* y00 y00 ?x520 ?x520 ?x878 ?x878 ?x878)))
 (let ((?x867 (* r00 y00 ?x520 ?x520 ?x520)))
 (let ((?x314 (* q00 y00 y00 ?x520 ?x520 ?x520)))
 (let ((?x113 (* y00 y00 y00 ?x520 ?x520 ?x520 ?x878)))
 (let ((?x962 (* y00 y00 ?x520 ?x520 ?x878 ?x878)))
 (let ((?x877 (+ ?x962 ?x113 ?x314 ?x867 (* (- 1) (* q00 y00 y00 ?x520 ?x878 ?x878 ?x878)) (* (- 1) (* r00 y00 ?x520 ?x878 ?x878 ?x878)) (* (- 1) (* r00 y00 y00 ?x520 ?x520 ?x878)) ?x1001 (* (- 1) (* y00 y00 ?x520 ?x520 ?x520 ?x520)) (* (- 1) (* q00 y00 y00 y00 ?x520 ?x520 ?x878)) (* (- 1) (* y00 ?x520 ?x520 ?x520 ?x878)) ?x868)))
 (let (($x108 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x108 (not (= ?x877 0)))))))))))))) :qid k!29))
 ))
 (let ((?x1246 (lambda ((q Int) (r Int) (y Int) )(let ((?x1280 (* q r r r r y00)))
 (let ((?x1279 (* r r r r y00)))
 (let ((?x1576 (* (- 1) (* q q q r y00))))
 (let ((?x1575 (* (- 3) (* q q r y00))))
 (let ((?x1574 (* (- 3) (* q r y00))))
 (let ((?x1573 (* (- 1) (* r y00))))
 (let ((?x1182 (* q q y00 y00 y00 y00 q00)))
 (let ((?x1572 (* 2 (* q y00 y00 y00 y00 q00))))
 (let ((?x1158 (* y00 y00 y00 y00 q00)))
 (let ((?x1571 (* (- 1) (* q q r y00 y00 y00 q00))))
 (let ((?x1570 (* (- 2) (* q r y00 y00 y00 q00))))
 (let ((?x1569 (* (- 1) (* r y00 y00 y00 q00))))
 (let ((?x1568 (* (- 1) (* q q q q y00 y00))))
 (let ((?x1567 (* (- 3) (* q q q y00 y00))))
 (let ((?x1258 (* (- 3) (* q q y00 y00))))
 (let ((?x1235 (* (- 1) (* q y00 y00))))
 (let ((?x995 (* (- 1) (* q q y00 y00 y00 y00 y00))))
 (let ((?x989 (* (- 1) (* q y00 y00 y00 y00 y00))))
 (let ((?x1009 (* 3 (* q q r y00 y00 y00 y00))))
 (let ((?x1566 (* 2 (* q r y00 y00 y00 y00))))
 (let ((?x1407 (* (- 1) (* r y00 y00 y00 y00))))
 (let ((?x1005 (* (- 3) (* q q r r y00 y00 y00))))
 (let ((?x1045 (* 3 (* r r y00 y00 y00))))
 (let ((?x823 (* q q r r r y00 y00)))
 (let ((?x1042 (* (- 2) (* q r r r y00 y00))))
 (let ((?x1565 (* (- 3) (* r r r y00 y00))))
 (let ((?x789 (* q q y00 y00 y00 r00)))
 (let ((?x1564 (* 2 (* q y00 y00 y00 r00))))
 (let ((?x767 (* y00 y00 y00 r00)))
 (let ((?x1563 (* (- 1) (* q q r y00 y00 r00))))
 (let ((?x1562 (* (- 2) (* q r y00 y00 r00))))
 (let ((?x1561 (* (- 1) (* r y00 y00 r00))))
 (let ((?x718 (* q y00 y00 y00 y00 r00)))
 (let ((?x708 (* y00 y00 y00 y00 r00)))
 (let ((?x1560 (* (- 3) (* q r y00 y00 y00 r00))))
 (let ((?x1559 (* (- 3) (* r y00 y00 y00 r00))))
 (let ((?x1558 (* 3 (* q r r y00 y00 r00))))
 (let ((?x1557 (* 3 (* r r y00 y00 r00))))
 (let ((?x1556 (* (- 1) (* q r r r y00 r00))))
 (let ((?x1555 (* (- 1) (* r r r y00 r00))))
 (let ((?x564 (* q y00 y00 y00 y00 y00 q00)))
 (let ((?x554 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1554 (* (- 3) (* q r y00 y00 y00 y00 q00))))
 (let ((?x1553 (* (- 3) (* r y00 y00 y00 y00 q00))))
 (let ((?x1552 (* 3 (* q r r y00 y00 y00 q00))))
 (let ((?x1551 (* 3 (* r r y00 y00 y00 q00))))
 (let ((?x1550 (* (- 1) (* q r r r y00 y00 q00))))
 (let ((?x1549 (* (- 1) (* r r r y00 y00 q00))))
 (let ((?x376 (* q q q y00 r00)))
 (let ((?x383 (* 3 (* q q y00 r00))))
 (let ((?x382 (* 3 (* q y00 r00))))
 (let ((?x351 (* y00 r00)))
 (let ((?x287 (* q q q y00 y00 q00)))
 (let ((?x294 (* 3 (* q q y00 y00 q00))))
 (let ((?x293 (* 3 (* q y00 y00 q00))))
 (let ((?x262 (* y00 y00 q00)))
 (let ((?x188 (* (- 1) (* q q q y00 y00 y00 y00))))
 (let ((?x145 (* q q q r y00 y00 y00)))
 (let ((?x144 (* q q r y00 y00 y00)))
 (let ((?x100 (* q q r r y00 y00)))
 (let ((?x91 (* r r y00 y00)))
 (let ((?x1986 (+ ?x91 (* 2 (* q r r y00 y00)) ?x100 (* (- 1) (* r y00 y00 y00)) (* (- 1) (* q r y00 y00 y00)) ?x144 ?x145 (* (- 1) (* q y00 y00 y00 y00)) (* (- 2) (* q q y00 y00 y00 y00)) ?x188 ?x262 ?x293 ?x294 ?x287 ?x351 ?x382 ?x383 ?x376 ?x1549 ?x1550 ?x1551 ?x1552 ?x1553 ?x1554 ?x554 ?x564 ?x1555 ?x1556 ?x1557 ?x1558 ?x1559 ?x1560 ?x708 ?x718 ?x1561 ?x1562 ?x1563 ?x767 ?x1564 ?x789 ?x1565 ?x1042 ?x823 ?x1045 ?x1005 ?x1407 ?x1566 ?x1009 ?x989 ?x995 ?x1235 ?x1258 ?x1567 ?x1568 ?x1569 ?x1570 ?x1571 ?x1158 ?x1572 ?x1182 ?x1573 ?x1574 ?x1575 ?x1576 ?x1279 ?x1280)))
 (let (($x106 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x83 (= (+ y (* (- 1) y00)) 0)))
 (let (($x1992 (and $x83 $x106 (not (= ?x1986 0)))))
 (let ((?x72 (* (- 1) y00)))
 (let ((?x878 (+ r ?x72)))
 (let ((?x520 (+ 1 q)))
 (let ((?x868 (* y00 ?x520 ?x878 ?x878 ?x878 ?x878)))
 (let ((?x1001 (* y00 y00 ?x520 ?x520 ?x878 ?x878 ?x878)))
 (let ((?x867 (* r00 y00 ?x520 ?x520 ?x520)))
 (let ((?x314 (* q00 y00 y00 ?x520 ?x520 ?x520)))
 (let ((?x113 (* y00 y00 y00 ?x520 ?x520 ?x520 ?x878)))
 (let ((?x962 (* y00 y00 ?x520 ?x520 ?x878 ?x878)))
 (let ((?x877 (+ ?x962 ?x113 ?x314 ?x867 (* (- 1) (* q00 y00 y00 ?x520 ?x878 ?x878 ?x878)) (* (- 1) (* r00 y00 ?x520 ?x878 ?x878 ?x878)) (* (- 1) (* r00 y00 y00 ?x520 ?x520 ?x878)) ?x1001 (* (- 1) (* y00 y00 ?x520 ?x520 ?x520 ?x520)) (* (- 1) (* q00 y00 y00 y00 ?x520 ?x520 ?x878)) (* (- 1) (* y00 ?x520 ?x520 ?x520 ?x878)) ?x868)))
 (let (($x108 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1544 (and (= (+ y00 (* (- 1) y)) 0) $x108 (not (= ?x877 0)))))
 (rewrite (= $x1544 $x1992))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x557 (exists ((q Int) (r Int) (y Int) )(! (let ((?x72 (* (- 1) y00)))
 (let ((?x878 (+ r ?x72)))
 (let ((?x520 (+ 1 q)))
 (let ((?x868 (* y00 ?x520 ?x878 ?x878 ?x878 ?x878)))
 (let ((?x1453 (* y00 ?x520 ?x520 ?x520 ?x878)))
 (let ((?x1147 (* q00 y00 y00 y00 ?x520 ?x520 ?x878)))
 (let ((?x502 (* y00 y00 ?x520 ?x520 ?x520 ?x520)))
 (let ((?x1524 (* r00 y00 y00 ?x520 ?x520 ?x878)))
 (let ((?x1517 (* r00 y00 ?x520 ?x878 ?x878 ?x878)))
 (let ((?x1495 (* q00 y00 y00 ?x520 ?x878 ?x878 ?x878)))
 (let ((?x888 (+ (* (- 1) (* y00 y00 ?x520 ?x520 ?x878 ?x878)) (* (- 1) (* y00 y00 y00 ?x520 ?x520 ?x520 ?x878)) (* (- 1) (* q00 y00 y00 ?x520 ?x520 ?x520)) (* (- 1) (* r00 y00 ?x520 ?x520 ?x520)) ?x1495 ?x1517 ?x1524 (* (- 1) (* y00 y00 ?x520 ?x520 ?x878 ?x878 ?x878)) ?x502 ?x1147 ?x1453 (* (- 1) ?x868))))
 (let (($x108 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x72 y) 0) $x108 (not (= ?x888 0))))))))))))))) :qid k!29))
 ))
 (let ((?x880 (lambda ((q Int) (r Int) (y Int) )(let ((?x72 (* (- 1) y00)))
 (let ((?x878 (+ r ?x72)))
 (let ((?x520 (+ 1 q)))
 (let ((?x868 (* y00 ?x520 ?x878 ?x878 ?x878 ?x878)))
 (let ((?x1001 (* y00 y00 ?x520 ?x520 ?x878 ?x878 ?x878)))
 (let ((?x867 (* r00 y00 ?x520 ?x520 ?x520)))
 (let ((?x314 (* q00 y00 y00 ?x520 ?x520 ?x520)))
 (let ((?x113 (* y00 y00 y00 ?x520 ?x520 ?x520 ?x878)))
 (let ((?x962 (* y00 y00 ?x520 ?x520 ?x878 ?x878)))
 (let ((?x877 (+ ?x962 ?x113 ?x314 ?x867 (* (- 1) (* q00 y00 y00 ?x520 ?x878 ?x878 ?x878)) (* (- 1) (* r00 y00 ?x520 ?x878 ?x878 ?x878)) (* (- 1) (* r00 y00 y00 ?x520 ?x520 ?x878)) ?x1001 (* (- 1) (* y00 y00 ?x520 ?x520 ?x520 ?x520)) (* (- 1) (* q00 y00 y00 y00 ?x520 ?x520 ?x878)) (* (- 1) (* y00 ?x520 ?x520 ?x520 ?x878)) ?x868)))
 (let (($x108 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1544 (and (= (+ y00 (* (- 1) y)) 0) $x108 (not (= ?x877 0)))))
 (let ((?x1453 (* y00 ?x520 ?x520 ?x520 ?x878)))
 (let ((?x1147 (* q00 y00 y00 y00 ?x520 ?x520 ?x878)))
 (let ((?x502 (* y00 y00 ?x520 ?x520 ?x520 ?x520)))
 (let ((?x1524 (* r00 y00 y00 ?x520 ?x520 ?x878)))
 (let ((?x1517 (* r00 y00 ?x520 ?x878 ?x878 ?x878)))
 (let ((?x1495 (* q00 y00 y00 ?x520 ?x878 ?x878 ?x878)))
 (let ((?x888 (+ (* (- 1) ?x962) (* (- 1) ?x113) (* (- 1) ?x314) (* (- 1) ?x867) ?x1495 ?x1517 ?x1524 (* (- 1) ?x1001) ?x502 ?x1147 ?x1453 (* (- 1) ?x868))))
 (let (($x102 (and (= (+ ?x72 y) 0) $x108 (not (= ?x888 0)))))
 (rewrite (= $x102 $x1544)))))))))))))))))))))))
 ))
 (let (($x67 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x48 (- (* (- 1) ?x42 ?x42 ?x43 ?x43 y00 y00) (* ?x42 ?x42 ?x42 ?x43 y00 y00 y00))))
 (let ((?x50 (- (- ?x48 (* ?x42 ?x42 ?x42 q00 y00 y00)) (* ?x42 ?x42 ?x42 r00 y00))))
 (let ((?x54 (+ ?x50 (* ?x42 q00 ?x43 ?x43 ?x43 y00 y00) (* ?x42 ?x43 ?x43 ?x43 r00 y00) (* ?x42 ?x42 ?x43 r00 y00 y00))))
 (let ((?x60 (+ (- ?x54 (* ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00)) (* ?x42 ?x42 ?x42 ?x42 y00 y00) (* ?x42 ?x42 q00 ?x43 y00 y00 y00) (* ?x42 ?x42 ?x42 ?x43 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= (- ?x60 (* ?x42 ?x43 ?x43 ?x43 ?x43 y00)) 0)))))))))) :qid k!29))
 ))
 (let ((?x652 (lambda ((q Int) (r Int) (y Int) )(let ((?x72 (* (- 1) y00)))
 (let ((?x878 (+ r ?x72)))
 (let ((?x520 (+ 1 q)))
 (let ((?x868 (* y00 ?x520 ?x878 ?x878 ?x878 ?x878)))
 (let ((?x1453 (* y00 ?x520 ?x520 ?x520 ?x878)))
 (let ((?x1147 (* q00 y00 y00 y00 ?x520 ?x520 ?x878)))
 (let ((?x502 (* y00 y00 ?x520 ?x520 ?x520 ?x520)))
 (let ((?x1524 (* r00 y00 y00 ?x520 ?x520 ?x878)))
 (let ((?x1517 (* r00 y00 ?x520 ?x878 ?x878 ?x878)))
 (let ((?x1495 (* q00 y00 y00 ?x520 ?x878 ?x878 ?x878)))
 (let ((?x888 (+ (* (- 1) (* y00 y00 ?x520 ?x520 ?x878 ?x878)) (* (- 1) (* y00 y00 y00 ?x520 ?x520 ?x520 ?x878)) (* (- 1) (* q00 y00 y00 ?x520 ?x520 ?x520)) (* (- 1) (* r00 y00 ?x520 ?x520 ?x520)) ?x1495 ?x1517 ?x1524 (* (- 1) (* y00 y00 ?x520 ?x520 ?x878 ?x878 ?x878)) ?x502 ?x1147 ?x1453 (* (- 1) ?x868))))
 (let (($x108 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x102 (and (= (+ ?x72 y) 0) $x108 (not (= ?x888 0)))))
 (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x48 (- (* (- 1) ?x42 ?x42 ?x43 ?x43 y00 y00) (* ?x42 ?x42 ?x42 ?x43 y00 y00 y00))))
 (let ((?x50 (- (- ?x48 (* ?x42 ?x42 ?x42 q00 y00 y00)) (* ?x42 ?x42 ?x42 r00 y00))))
 (let ((?x54 (+ ?x50 (* ?x42 q00 ?x43 ?x43 ?x43 y00 y00) (* ?x42 ?x43 ?x43 ?x43 r00 y00) (* ?x42 ?x42 ?x43 r00 y00 y00))))
 (let ((?x60 (+ (- ?x54 (* ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00)) (* ?x42 ?x42 ?x42 ?x42 y00 y00) (* ?x42 ?x42 q00 ?x43 y00 y00 y00) (* ?x42 ?x42 ?x42 ?x43 y00))))
 (let (($x66 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= (- ?x60 (* ?x42 ?x43 ?x43 ?x43 ?x43 y00)) 0))))))
 (rewrite (= $x66 $x102)))))))))))))))))))))))
 ))
 (let ((@x68 (asserted $x67)))
 (let ((@x721 (mp (mp @x68 (quant-intro (proof-bind ?x652) (= $x67 $x557)) $x557) (rewrite (= $x557 $x557)) $x557)))
 (let ((@x164 (mp (mp @x721 (quant-intro (proof-bind ?x880) (= $x557 $x1255)) $x1255) (quant-intro (proof-bind ?x1246) (= $x1255 $x1214)) $x1214)))
 (let ((@x978 (mp (mp~ @x164 (sk (~ $x1214 $x1245)) $x1245) (rewrite (= $x1245 $x1494)) $x1494)))
 (let ((@x792 (and-elim @x978 $x1271)))
 (let ((@x863 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1271) $x1051)) @x792 $x1051)))
 (let (($x1054 (>= ?x117 0)))
 (let ((@x1468 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1271) $x1054)) @x792 $x1054)))
 (let (($x1029 (<= ?x727 0)))
 (let ((@x846 (and-elim @x978 $x728)))
 (let ((@x821 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x728) $x1029)) @x846 $x1029)))
 (let (($x1048 (>= ?x727 0)))
 (let ((@x157 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x728) $x1048)) @x846 $x1048)))
 (let (($x1441 (not (<= ?x972 0))))
 (let (($x115 (>= ?x972 0)))
 (let ((@x905 (lemma ((_ th-lemma arith) (hypothesis (not $x115)) @x157 @x821 @x1468 @x863 false) $x115)))
 (let ((@x1497 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x974 $x1441 (not $x115))) (and-elim @x978 $x845) (or $x1441 (not $x115)))))
 ((_ th-lemma arith) (unit-resolution @x1497 @x905 $x1441) @x157 @x821 @x1468 @x863 false)))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        14
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             574
 :arith-nonlinear-bounds    10
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              3
 :arith-tableau-max-columns 83
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                3.86
 :memory                    3.30
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1336076
 :num-checks                1
 :propagations              6
 :rlimit-count              8007
 :time                      0.01
 :total-time                0.02)
