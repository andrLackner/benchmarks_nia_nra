unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1531 (* 3 r!2)))
 (let ((?x438 (* 6 x!0)))
 (let ((?x496 (* (- 3) s!1)))
 (let ((?x436 (* r00 r00 r00)))
 (let ((?x437 (* 12 ?x436)))
 (let ((?x393 (* s00 r00)))
 (let ((?x471 (* (- 6) ?x393)))
 (let ((?x468 (* (- 6) x00)))
 (let ((?x467 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x718 (+ ?x44 ?x467 ?x468 ?x471 ?x437 ?x496 ?x438 (* 2 (* s!1 r!2)) (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)) ?x1531)))
 (let (($x1591 (>= ?x718 0)))
 (let (($x1449 (= ?x718 0)))
 (let ((?x1600 (* r!2 r!2)))
 (let ((?x757 (* (- 12) ?x1600)))
 (let ((?x871 (* (- 3) r!2)))
 (let ((?x717 (* (- 6) x!0)))
 (let ((?x867 (* 7 s!1)))
 (let ((?x450 (* (- 12) ?x436)))
 (let ((?x394 (* 6 ?x393)))
 (let ((?x266 (* r00 r00)))
 (let ((?x1395 (* 12 ?x266)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1533 (* (- 7) s00)))
 (let ((?x485 (+ ?x1533 ?x48 ?x59 ?x1395 ?x394 ?x450 ?x867 ?x717 (* (- 2) (* s!1 r!2)) (* (- 4) (* s00 r!2)) (* 12 (* r00 r00 r!2)) ?x871 ?x757)))
 (let ((?x555 (* 6 r!2)))
 (let ((?x684 (+ 3 s!1 ?x555)))
 (let ((?x554 (* (- 1) s!1)))
 (let ((?x546 (+ ?x554 x!0)))
 (let ((?x915 (* (- 1) (* (+ 1 r!2) (+ 1 r!2) (+ 1 r!2) ?x546 ?x684 ?x684))))
 (let ((?x1514 (+ 1 r!2)))
 (let ((?x1521 (+ (* ?x1514 ?x1514 ?x1514 ?x546 ?x684 ?x684 ?x684) ?x915 (* (- 1) (* ?x546 ?x546 ?x546 ?x684 ?x684)))))
 (let ((?x939 (* ?x1521 ?x485)))
 (let (($x1221 (= ?x939 0)))
 (let (($x919 (not $x1221)))
 (let ((?x1313 (* x00 x00)))
 (let ((?x1202 (* 108 ?x1313)))
 (let ((?x1151 (* s00 s00 s00)))
 (let ((?x704 (* 16 ?x1151)))
 (let ((?x849 (* r00 r00 r00 x00)))
 (let ((?x810 (* (- 432) ?x849)))
 (let ((?x774 (* r00 r00 s!1)))
 (let ((?x980 (* 36 ?x774)))
 (let ((?x772 (* s00 x00)))
 (let ((?x835 (* (- 108) ?x772)))
 (let ((?x614 (* s00 r00 r00)))
 (let ((?x788 (* (- 36) ?x614)))
 (let ((?x840 (* (- 9) s!1)))
 (let ((?x558 (* s00 s00)))
 (let ((?x872 (* 51 ?x558)))
 (let ((?x489 (* r00 x00)))
 (let ((?x346 (* 108 ?x489)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1133 (+ ?x137 (* (- 66) (* s00 s!1)) (* (- 54) ?x393) (* 216 (* s00 r00 x00)) ?x346 (* (- 108) (* s!1 x!0)) ?x872 (* 108 (* s00 r00 s!1)) (* 108 (* x00 s!1)) ?x840 ?x788 (* (- 108) (* s00 s00 r00)) (* 15 (* s!1 s!1)) (* (- 36) (* s00 s00 r00 r00)) (* (- 4) (* s!1 s!1 s!1)) ?x835 ?x980 ?x810 (* (- 216) (* r00 r00 r00 s!1)) (* 108 (* s00 x!0)) (* 216 (* s00 r00 r00 r00)) (* (- 216) (* x00 x!0)) ?x704 (* 54 (* r00 s!1)) (* (- 108) (* r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) ?x1202 (* 108 (* x!0 x!0)) (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)))))
 (let ((?x844 (* r00 r00 x00)))
 (let ((?x1033 (* 36 ?x844)))
 (let ((?x1083 (* (- 6) ?x772)))
 (let ((?x1076 (* 15 ?x558)))
 (let ((?x1041 (* 54 ?x489)))
 (let ((?x651 (+ ?x137 (* (- 12) (* s00 s!1)) (* (- 24) ?x393) ?x1041 (* (- 6) (* s!1 x!0)) (* (- 4) (* r00 s!1 s!1)) ?x1076 (* 2 (* s00 r00 s!1)) (* 6 (* x00 s!1)) ?x840 ?x788 (* 2 (* s00 s00 r00)) (* (- 3) (* s!1 s!1)) (* (- 2) (* s00 s!1 r!2)) (* 24 (* s!1 r!2)) (* (- 54) (* x!0 r!2)) ?x1083 ?x980 ?x1033 (* 36 (* r00 x00 r!2)) (* 54 (* x00 r!2)) (* 6 (* s00 x!0)) (* (- 24) (* s00 r!2)) (* (- 36) (* r00 r00 x!0)) (* 24 (* r00 s!1)) (* (- 54) (* r00 x!0)) (* (- 36) (* r00 x!0 r!2)) (* (- 2) (* s!1 s!1 r!2)) (* 4 (* s00 s00 r!2)))))
 (let ((?x1029 (* 4 ?x558)))
 (let ((?x1169 (* 18 ?x489)))
 (let ((?x741 (+ ?x44 (* (- 2) (* s00 s!1)) (* (- 9) ?x393) ?x1169 ?x1029 ?x496 (* (- 6) ?x614) (* (- 2) (* s!1 s!1)) (* 9 (* s!1 r!2)) (* (- 18) (* x!0 r!2)) (* 6 ?x774) (* 18 (* x00 r!2)) (* (- 9) (* s00 r!2)) (* 9 (* r00 s!1)) (* (- 18) (* r00 x!0)) (* 6 (* s00 r00 r!2)) (* (- 6) (* r00 s!1 r!2)))))
 (let ((?x960 (* (- 3) ?x266)))
 (let ((?x564 (+ s00 ?x960 ?x554 (* 3 ?x1600))))
 (let (($x1022 (= ?x564 0)))
 (let (($x1220 (and $x1022 $x1449 (= ?x741 0) (= ?x651 0) (= ?x1133 0) $x919)))
 (let ((?x1142 (+ ?x871 ?x867 ?x717 ?x1533 ?x48 ?x59 ?x757 ?x1395 (* (- 2) (* r!2 s!1)) (* 12 (* r!2 r00 r00)) (* (- 4) (* r!2 s00)) ?x394 ?x450)))
 (let ((?x880 (+ 3 ?x555 s!1)))
 (let ((?x737 (+ (* (- 1) (* ?x1514 ?x1514 ?x1514 ?x546 ?x880 ?x880)) (* (- 1) (* ?x546 ?x546 ?x546 ?x880 ?x880)) (* ?x1514 ?x1514 ?x1514 ?x546 ?x880 ?x880 ?x880))))
 (let ((?x1343 (* (- 108) ?x1313)))
 (let ((?x1342 (* (- 16) ?x1151)))
 (let ((?x1023 (* s00 r00 r00 r00)))
 (let ((?x1338 (* (- 216) ?x1023)))
 (let ((?x850 (* 432 ?x849)))
 (let ((?x1096 (* 108 ?x772)))
 (let ((?x698 (* s00 s00 r00 r00)))
 (let ((?x699 (* 36 ?x698)))
 (let ((?x635 (* s00 s00 r00)))
 (let ((?x979 (* 108 ?x635)))
 (let ((?x967 (* 36 ?x614)))
 (let ((?x1332 (* (- 51) ?x558)))
 (let ((?x648 (* s!1 r00 r00)))
 (let ((?x977 (* (- 36) ?x648)))
 (let ((?x1329 (* (- 108) ?x489)))
 (let ((?x480 (* s00 r00 x00)))
 (let ((?x1328 (* (- 216) ?x480)))
 (let ((?x487 (* 54 ?x393)))
 (let ((?x954 (* (- 9) s00)))
 (let ((?x624 (* 9 s!1)))
 (let ((?x553 (+ ?x624 ?x954 ?x487 ?x1328 ?x1329 (* (- 15) (* s!1 s!1)) ?x977 ?x1332 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x967 ?x979 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x699 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1096 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x850 (* 12 (* s!1 s!1 s00)) ?x1338 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1342 (* 216 (* x!0 x00)) ?x1343)))
 (let ((?x857 (* (- 36) ?x844)))
 (let ((?x773 (* 6 ?x772)))
 (let ((?x663 (* (- 2) ?x635)))
 (let ((?x883 (* (- 15) ?x558)))
 (let ((?x518 (* (- 54) ?x489)))
 (let ((?x531 (* 24 ?x393)))
 (let ((?x1178 (+ ?x624 ?x954 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x531 ?x518 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x977 ?x883 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x967 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x663 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x773 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x857 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x615 (* 6 ?x614)))
 (let ((?x571 (* (- 4) ?x558)))
 (let ((?x503 (* (- 18) ?x489)))
 (let ((?x508 (* 9 ?x393)))
 (let ((?x345 (* (- 3) s00)))
 (let ((?x389 (+ (* 3 s!1) ?x345 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x508 ?x503 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x648) ?x571 (* 18 (* x!0 r00)) ?x615 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1248 (+ ?x1531 ?x496 ?x438 ?x44 ?x467 ?x468 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x471 ?x437)))
 (let (($x527 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x1600) (* 3 ?x266)) 0) (= ?x1248 0) (= ?x389 0) (= ?x1178 0) (= ?x553 0) (not (= (* ?x737 ?x1142) 0)))))
 (let (($x596 (exists ((r Int) (s Int) (x Int) )(! (let ((?x436 (* r00 r00 r00)))
 (let ((?x450 (* (- 12) ?x436)))
 (let ((?x393 (* s00 r00)))
 (let ((?x394 (* 6 ?x393)))
 (let ((?x366 (* r s00)))
 (let ((?x380 (* (- 4) ?x366)))
 (let ((?x316 (* r r00 r00)))
 (let ((?x317 (* 12 ?x316)))
 (let ((?x310 (* r s)))
 (let ((?x311 (* (- 2) ?x310)))
 (let ((?x266 (* r00 r00)))
 (let ((?x1395 (* 12 ?x266)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1533 (* (- 7) s00)))
 (let ((?x415 (* (- 6) x)))
 (let ((?x1595 (* 7 s)))
 (let ((?x957 (* (- 3) r)))
 (let ((?x813 (+ ?x957 ?x1595 ?x415 ?x1533 ?x48 ?x59 (* (- 12) (* r r)) ?x1395 ?x311 ?x317 ?x380 ?x394 ?x450)))
 (let ((?x213 (* 6 r)))
 (let ((?x1353 (+ 3 ?x213 s)))
 (let ((?x245 (* (- 1) s)))
 (let ((?x1552 (+ ?x245 x)))
 (let ((?x1350 (+ 1 r)))
 (let ((?x290 (+ (* (- 1) (* ?x1350 ?x1350 ?x1350 ?x1552 ?x1353 ?x1353)) (* (- 1) (* ?x1552 ?x1552 ?x1552 ?x1353 ?x1353)) (* ?x1350 ?x1350 ?x1350 ?x1552 ?x1353 ?x1353 ?x1353))))
 (let ((?x1313 (* x00 x00)))
 (let ((?x1343 (* (- 108) ?x1313)))
 (let ((?x1151 (* s00 s00 s00)))
 (let ((?x1342 (* (- 16) ?x1151)))
 (let ((?x1023 (* s00 r00 r00 r00)))
 (let ((?x1338 (* (- 216) ?x1023)))
 (let ((?x849 (* r00 r00 r00 x00)))
 (let ((?x850 (* 432 ?x849)))
 (let ((?x772 (* s00 x00)))
 (let ((?x1096 (* 108 ?x772)))
 (let ((?x698 (* s00 s00 r00 r00)))
 (let ((?x699 (* 36 ?x698)))
 (let ((?x635 (* s00 s00 r00)))
 (let ((?x979 (* 108 ?x635)))
 (let ((?x614 (* s00 r00 r00)))
 (let ((?x967 (* 36 ?x614)))
 (let ((?x558 (* s00 s00)))
 (let ((?x1332 (* (- 51) ?x558)))
 (let ((?x532 (* s r00 r00)))
 (let ((?x831 (* (- 36) ?x532)))
 (let ((?x489 (* r00 x00)))
 (let ((?x1329 (* (- 108) ?x489)))
 (let ((?x480 (* s00 r00 x00)))
 (let ((?x1328 (* (- 216) ?x480)))
 (let ((?x487 (* 54 ?x393)))
 (let ((?x954 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1344 (+ ?x143 ?x954 ?x487 ?x1328 ?x1329 (* (- 15) (* s s)) ?x831 ?x1332 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x967 ?x979 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x699 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1096 (* 108 (* s x)) (* (- 108) (* x x)) ?x850 (* 12 (* s s s00)) ?x1338 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1342 (* 216 (* x x00)) ?x1343)))
 (let (($x1345 (= ?x1344 0)))
 (let ((?x844 (* r00 r00 x00)))
 (let ((?x857 (* (- 36) ?x844)))
 (let ((?x773 (* 6 ?x772)))
 (let ((?x663 (* (- 2) ?x635)))
 (let ((?x883 (* (- 15) ?x558)))
 (let ((?x512 (* s s)))
 (let ((?x536 (* 3 ?x512)))
 (let ((?x518 (* (- 54) ?x489)))
 (let ((?x531 (* 24 ?x393)))
 (let ((?x1046 (+ ?x143 ?x954 (* (- 24) ?x310) (* 24 ?x366) ?x531 ?x518 ?x536 (* 54 (* r x)) (* 36 (* r x r00)) ?x831 ?x883 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x967 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x663 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x773 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x857 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1051 (= ?x1046 0)))
 (let ((?x615 (* 6 ?x614)))
 (let ((?x571 (* (- 4) ?x558)))
 (let ((?x513 (* 2 ?x512)))
 (let ((?x503 (* (- 18) ?x489)))
 (let ((?x508 (* 9 ?x393)))
 (let ((?x345 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x712 (+ ?x47 ?x345 (* (- 9) ?x310) (* 9 ?x366) ?x508 ?x503 ?x513 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x532) ?x571 (* 18 (* x r00)) ?x615 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x719 (= ?x712 0)))
 (let ((?x437 (* 12 ?x436)))
 (let ((?x471 (* (- 6) ?x393)))
 (let ((?x468 (* (- 6) x00)))
 (let ((?x467 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x466 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x472 (+ ?x43 ?x466 ?x56 ?x44 ?x467 ?x468 (* 2 ?x310) (* (- 12) ?x316) (* 4 ?x366) ?x471 ?x437)))
 (let (($x473 (= ?x472 0)))
 (let (($x299 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x266)) 0)))
 (and $x299 $x473 $x719 $x1051 $x1345 (not (= (* ?x290 ?x813) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x707 (exists ((r Int) (s Int) (x Int) )(! (let ((?x436 (* r00 r00 r00)))
 (let ((?x450 (* (- 12) ?x436)))
 (let ((?x59 (* 6 x00)))
 (let ((?x415 (* (- 6) x)))
 (let ((?x1308 (* r00 s00)))
 (let ((?x1309 (* 6 ?x1308)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x345 (* (- 3) s00)))
 (let ((?x1019 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x345 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x1309 ?x415 ?x59 ?x450)))
 (let ((?x213 (* 6 r)))
 (let ((?x609 (+ 3 s ?x213)))
 (let ((?x245 (* (- 1) s)))
 (let ((?x274 (+ x ?x245)))
 (let ((?x1350 (+ 1 r)))
 (let ((?x1150 (+ (* (- 1) (* ?x274 ?x274 ?x274 ?x609 ?x609)) (* ?x1350 ?x1350 ?x1350 ?x274 ?x609 ?x609 ?x609) (* (- 1) (* ?x1350 ?x1350 ?x1350 ?x274 ?x609 ?x609)))))
 (let (($x862 (not (= (* ?x1150 ?x1019) 0))))
 (let ((?x1313 (* x00 x00)))
 (let ((?x1202 (* 108 ?x1313)))
 (let ((?x1104 (* (- 9) s)))
 (let ((?x860 (* r00 r00 s00)))
 (let ((?x1063 (* (- 36) ?x860)))
 (let ((?x137 (* 9 s00)))
 (let ((?x558 (* s00 s00)))
 (let ((?x872 (* 51 ?x558)))
 (let ((?x497 (* r00 r00 s)))
 (let ((?x1139 (* 36 ?x497)))
 (let ((?x1151 (* s00 s00 s00)))
 (let ((?x704 (* 16 ?x1151)))
 (let ((?x772 (* s00 x00)))
 (let ((?x835 (* (- 108) ?x772)))
 (let ((?x849 (* r00 r00 r00 x00)))
 (let ((?x810 (* (- 432) ?x849)))
 (let ((?x489 (* r00 x00)))
 (let ((?x346 (* 108 ?x489)))
 (let ((?x1210 (+ (* 216 (* r00 s00 x00)) ?x346 (* (- 54) ?x1308) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x810 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x835 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x704 (* (- 108) (* x s)) ?x1139 ?x872 (* (- 108) (* r00 x)) ?x137 ?x1063 ?x1104 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1202)))
 (let (($x1226 (= ?x1210 0)))
 (let ((?x1076 (* 15 ?x558)))
 (let ((?x844 (* r00 r00 x00)))
 (let ((?x1033 (* 36 ?x844)))
 (let ((?x1083 (* (- 6) ?x772)))
 (let ((?x1041 (* 54 ?x489)))
 (let ((?x715 (+ (* 24 (* s r)) ?x1041 (* (- 36) (* r00 x r)) (* (- 24) ?x1308) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1083 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1139 ?x1033 ?x1076 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1063 (* 54 (* x00 r)) ?x1104 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x466 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1029 (* 4 ?x558)))
 (let ((?x1169 (* 18 ?x489)))
 (let ((?x1570 (+ (* 9 (* s r)) ?x1169 (* (- 9) ?x1308) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x497) ?x1029 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x860) (* 18 (* x00 r)) ?x466 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x437 (* 12 ?x436)))
 (let ((?x468 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x467 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x453 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x466 ?x467 (* 4 (* s00 r)) (* (- 6) ?x1308) ?x56 ?x468 ?x437)))
 (let (($x638 (= (+ s00 ?x245 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x638 (= ?x453 0) (= ?x1570 0) (= ?x715 0) $x1226 $x862)))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x612 (lambda ((r Int) (s Int) (x Int) )(let ((?x436 (* r00 r00 r00)))
 (let ((?x450 (* (- 12) ?x436)))
 (let ((?x393 (* s00 r00)))
 (let ((?x394 (* 6 ?x393)))
 (let ((?x366 (* r s00)))
 (let ((?x380 (* (- 4) ?x366)))
 (let ((?x316 (* r r00 r00)))
 (let ((?x317 (* 12 ?x316)))
 (let ((?x310 (* r s)))
 (let ((?x311 (* (- 2) ?x310)))
 (let ((?x266 (* r00 r00)))
 (let ((?x1395 (* 12 ?x266)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1533 (* (- 7) s00)))
 (let ((?x415 (* (- 6) x)))
 (let ((?x1595 (* 7 s)))
 (let ((?x957 (* (- 3) r)))
 (let ((?x813 (+ ?x957 ?x1595 ?x415 ?x1533 ?x48 ?x59 (* (- 12) (* r r)) ?x1395 ?x311 ?x317 ?x380 ?x394 ?x450)))
 (let ((?x213 (* 6 r)))
 (let ((?x1353 (+ 3 ?x213 s)))
 (let ((?x245 (* (- 1) s)))
 (let ((?x1552 (+ ?x245 x)))
 (let ((?x1350 (+ 1 r)))
 (let ((?x290 (+ (* (- 1) (* ?x1350 ?x1350 ?x1350 ?x1552 ?x1353 ?x1353)) (* (- 1) (* ?x1552 ?x1552 ?x1552 ?x1353 ?x1353)) (* ?x1350 ?x1350 ?x1350 ?x1552 ?x1353 ?x1353 ?x1353))))
 (let ((?x1313 (* x00 x00)))
 (let ((?x1343 (* (- 108) ?x1313)))
 (let ((?x1151 (* s00 s00 s00)))
 (let ((?x1342 (* (- 16) ?x1151)))
 (let ((?x1023 (* s00 r00 r00 r00)))
 (let ((?x1338 (* (- 216) ?x1023)))
 (let ((?x849 (* r00 r00 r00 x00)))
 (let ((?x850 (* 432 ?x849)))
 (let ((?x772 (* s00 x00)))
 (let ((?x1096 (* 108 ?x772)))
 (let ((?x698 (* s00 s00 r00 r00)))
 (let ((?x699 (* 36 ?x698)))
 (let ((?x635 (* s00 s00 r00)))
 (let ((?x979 (* 108 ?x635)))
 (let ((?x614 (* s00 r00 r00)))
 (let ((?x967 (* 36 ?x614)))
 (let ((?x558 (* s00 s00)))
 (let ((?x1332 (* (- 51) ?x558)))
 (let ((?x532 (* s r00 r00)))
 (let ((?x831 (* (- 36) ?x532)))
 (let ((?x489 (* r00 x00)))
 (let ((?x1329 (* (- 108) ?x489)))
 (let ((?x480 (* s00 r00 x00)))
 (let ((?x1328 (* (- 216) ?x480)))
 (let ((?x487 (* 54 ?x393)))
 (let ((?x954 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1344 (+ ?x143 ?x954 ?x487 ?x1328 ?x1329 (* (- 15) (* s s)) ?x831 ?x1332 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x967 ?x979 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x699 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1096 (* 108 (* s x)) (* (- 108) (* x x)) ?x850 (* 12 (* s s s00)) ?x1338 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1342 (* 216 (* x x00)) ?x1343)))
 (let (($x1345 (= ?x1344 0)))
 (let ((?x844 (* r00 r00 x00)))
 (let ((?x857 (* (- 36) ?x844)))
 (let ((?x773 (* 6 ?x772)))
 (let ((?x663 (* (- 2) ?x635)))
 (let ((?x883 (* (- 15) ?x558)))
 (let ((?x512 (* s s)))
 (let ((?x536 (* 3 ?x512)))
 (let ((?x518 (* (- 54) ?x489)))
 (let ((?x531 (* 24 ?x393)))
 (let ((?x1046 (+ ?x143 ?x954 (* (- 24) ?x310) (* 24 ?x366) ?x531 ?x518 ?x536 (* 54 (* r x)) (* 36 (* r x r00)) ?x831 ?x883 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x967 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x663 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x773 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x857 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1051 (= ?x1046 0)))
 (let ((?x615 (* 6 ?x614)))
 (let ((?x571 (* (- 4) ?x558)))
 (let ((?x513 (* 2 ?x512)))
 (let ((?x503 (* (- 18) ?x489)))
 (let ((?x508 (* 9 ?x393)))
 (let ((?x345 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x712 (+ ?x47 ?x345 (* (- 9) ?x310) (* 9 ?x366) ?x508 ?x503 ?x513 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x532) ?x571 (* 18 (* x r00)) ?x615 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x719 (= ?x712 0)))
 (let ((?x437 (* 12 ?x436)))
 (let ((?x471 (* (- 6) ?x393)))
 (let ((?x468 (* (- 6) x00)))
 (let ((?x467 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x466 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x472 (+ ?x43 ?x466 ?x56 ?x44 ?x467 ?x468 (* 2 ?x310) (* (- 12) ?x316) (* 4 ?x366) ?x471 ?x437)))
 (let (($x473 (= ?x472 0)))
 (let (($x299 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x266)) 0)))
 (let (($x782 (and $x299 $x473 $x719 $x1051 $x1345 (not (= (* ?x290 ?x813) 0)))))
 (let ((?x1308 (* r00 s00)))
 (let ((?x1309 (* 6 ?x1308)))
 (let ((?x1019 (+ 6 (* (- 2) (* ?x1350 (+ 3 s ?x213))) (* 12 (* r00 r00 ?x1350)) (* 15 r) ?x345 ?x143 ?x48 (* (- 4) (* s00 ?x1350)) ?x1309 ?x415 ?x59 ?x450)))
 (let ((?x609 (+ 3 s ?x213)))
 (let ((?x274 (+ x ?x245)))
 (let ((?x1150 (+ (* (- 1) (* ?x274 ?x274 ?x274 ?x609 ?x609)) (* ?x1350 ?x1350 ?x1350 ?x274 ?x609 ?x609 ?x609) (* (- 1) (* ?x1350 ?x1350 ?x1350 ?x274 ?x609 ?x609)))))
 (let (($x862 (not (= (* ?x1150 ?x1019) 0))))
 (let ((?x1202 (* 108 ?x1313)))
 (let ((?x1104 (* (- 9) s)))
 (let ((?x860 (* r00 r00 s00)))
 (let ((?x1063 (* (- 36) ?x860)))
 (let ((?x137 (* 9 s00)))
 (let ((?x872 (* 51 ?x558)))
 (let ((?x497 (* r00 r00 s)))
 (let ((?x1139 (* 36 ?x497)))
 (let ((?x704 (* 16 ?x1151)))
 (let ((?x835 (* (- 108) ?x772)))
 (let ((?x810 (* (- 432) ?x849)))
 (let ((?x346 (* 108 ?x489)))
 (let ((?x1210 (+ (* 216 (* r00 s00 x00)) ?x346 (* (- 54) ?x1308) (* 15 ?x512) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x810 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x835 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x704 (* (- 108) (* x s)) ?x1139 ?x872 (* (- 108) (* r00 x)) ?x137 ?x1063 ?x1104 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1202)))
 (let (($x1226 (= ?x1210 0)))
 (let ((?x1076 (* 15 ?x558)))
 (let ((?x1033 (* 36 ?x844)))
 (let ((?x1083 (* (- 6) ?x772)))
 (let ((?x1041 (* 54 ?x489)))
 (let ((?x715 (+ (* 24 (* s r)) ?x1041 (* (- 36) (* r00 x r)) (* (- 24) ?x1308) (* (- 3) ?x512) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1083 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1139 ?x1033 ?x1076 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1063 (* 54 (* x00 r)) ?x1104 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x1029 (* 4 ?x558)))
 (let ((?x1169 (* 18 ?x489)))
 (let ((?x1570 (+ (* 9 (* s r)) ?x1169 (* (- 9) ?x1308) (* (- 2) ?x512) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x497) ?x1029 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x860) (* 18 (* x00 r)) ?x466 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x453 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x466 ?x467 (* 4 (* s00 r)) (* (- 6) ?x1308) ?x56 ?x468 ?x437)))
 (let (($x638 (= (+ s00 ?x245 (* 3 (* r r)) (* (- 3) ?x266)) 0)))
 (let (($x1235 (and $x638 (= ?x453 0) (= ?x1570 0) (= ?x715 0) $x1226 $x862)))
 (rewrite (= $x1235 $x782)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x864 (exists ((r Int) (s Int) (x Int) )(! (let ((?x436 (* r00 r00 r00)))
 (let ((?x450 (* (- 12) ?x436)))
 (let ((?x59 (* 6 x00)))
 (let ((?x415 (* (- 6) x)))
 (let ((?x1308 (* r00 s00)))
 (let ((?x1309 (* 6 ?x1308)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x345 (* (- 3) s00)))
 (let ((?x1019 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x345 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x1309 ?x415 ?x59 ?x450)))
 (let ((?x213 (* 6 r)))
 (let ((?x609 (+ 3 s ?x213)))
 (let ((?x245 (* (- 1) s)))
 (let ((?x274 (+ x ?x245)))
 (let ((?x1350 (+ 1 r)))
 (let ((?x1150 (+ (* (- 1) (* ?x274 ?x274 ?x274 ?x609 ?x609)) (* ?x1350 ?x1350 ?x1350 ?x274 ?x609 ?x609 ?x609) (* (- 1) (* ?x1350 ?x1350 ?x1350 ?x274 ?x609 ?x609)))))
 (let (($x862 (not (= (* ?x1150 ?x1019) 0))))
 (let ((?x1313 (* x00 x00)))
 (let ((?x1202 (* 108 ?x1313)))
 (let ((?x1104 (* (- 9) s)))
 (let ((?x860 (* r00 r00 s00)))
 (let ((?x1063 (* (- 36) ?x860)))
 (let ((?x137 (* 9 s00)))
 (let ((?x558 (* s00 s00)))
 (let ((?x872 (* 51 ?x558)))
 (let ((?x497 (* r00 r00 s)))
 (let ((?x1139 (* 36 ?x497)))
 (let ((?x1151 (* s00 s00 s00)))
 (let ((?x704 (* 16 ?x1151)))
 (let ((?x772 (* s00 x00)))
 (let ((?x835 (* (- 108) ?x772)))
 (let ((?x849 (* r00 r00 r00 x00)))
 (let ((?x810 (* (- 432) ?x849)))
 (let ((?x489 (* r00 x00)))
 (let ((?x346 (* 108 ?x489)))
 (let ((?x1210 (+ (* 216 (* r00 s00 x00)) ?x346 (* (- 54) ?x1308) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x810 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x835 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x704 (* (- 108) (* x s)) ?x1139 ?x872 (* (- 108) (* r00 x)) ?x137 ?x1063 ?x1104 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1202)))
 (let (($x1226 (= ?x1210 0)))
 (let ((?x954 (* (- 9) s00)))
 (let ((?x883 (* (- 15) ?x558)))
 (let ((?x844 (* r00 r00 x00)))
 (let ((?x857 (* (- 36) ?x844)))
 (let ((?x773 (* 6 ?x772)))
 (let ((?x512 (* s s)))
 (let ((?x536 (* 3 ?x512)))
 (let ((?x518 (* (- 54) ?x489)))
 (let ((?x876 (+ (* (- 24) (* s r)) ?x518 (* 36 (* r00 x r)) (* 24 ?x1308) ?x536 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x773 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x497) ?x857 ?x883 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x954 (* 36 ?x860) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x571 (* (- 4) ?x558)))
 (let ((?x513 (* 2 ?x512)))
 (let ((?x503 (* (- 18) ?x489)))
 (let ((?x756 (+ (* (- 9) (* s r)) ?x503 (* 9 ?x1308) ?x513 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x497) ?x571 (* 18 (* r00 x)) ?x345 (* 6 ?x860) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x957 (* (- 3) r)))
 (let ((?x797 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x957 ?x345 ?x47 ?x48 (* (- 4) (* s00 r)) ?x1309 ?x415 ?x59 ?x450)))
 (let (($x638 (= (+ s00 ?x245 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x638 (= ?x797 0) (= ?x756 0) (= ?x876 0) $x1226 $x862))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x716 (lambda ((r Int) (s Int) (x Int) )(let ((?x436 (* r00 r00 r00)))
 (let ((?x450 (* (- 12) ?x436)))
 (let ((?x59 (* 6 x00)))
 (let ((?x415 (* (- 6) x)))
 (let ((?x1308 (* r00 s00)))
 (let ((?x1309 (* 6 ?x1308)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x345 (* (- 3) s00)))
 (let ((?x1019 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x345 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x1309 ?x415 ?x59 ?x450)))
 (let ((?x213 (* 6 r)))
 (let ((?x609 (+ 3 s ?x213)))
 (let ((?x245 (* (- 1) s)))
 (let ((?x274 (+ x ?x245)))
 (let ((?x1350 (+ 1 r)))
 (let ((?x1150 (+ (* (- 1) (* ?x274 ?x274 ?x274 ?x609 ?x609)) (* ?x1350 ?x1350 ?x1350 ?x274 ?x609 ?x609 ?x609) (* (- 1) (* ?x1350 ?x1350 ?x1350 ?x274 ?x609 ?x609)))))
 (let (($x862 (not (= (* ?x1150 ?x1019) 0))))
 (let ((?x1313 (* x00 x00)))
 (let ((?x1202 (* 108 ?x1313)))
 (let ((?x1104 (* (- 9) s)))
 (let ((?x860 (* r00 r00 s00)))
 (let ((?x1063 (* (- 36) ?x860)))
 (let ((?x137 (* 9 s00)))
 (let ((?x558 (* s00 s00)))
 (let ((?x872 (* 51 ?x558)))
 (let ((?x497 (* r00 r00 s)))
 (let ((?x1139 (* 36 ?x497)))
 (let ((?x1151 (* s00 s00 s00)))
 (let ((?x704 (* 16 ?x1151)))
 (let ((?x772 (* s00 x00)))
 (let ((?x835 (* (- 108) ?x772)))
 (let ((?x849 (* r00 r00 r00 x00)))
 (let ((?x810 (* (- 432) ?x849)))
 (let ((?x489 (* r00 x00)))
 (let ((?x346 (* 108 ?x489)))
 (let ((?x1210 (+ (* 216 (* r00 s00 x00)) ?x346 (* (- 54) ?x1308) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x810 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x835 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x704 (* (- 108) (* x s)) ?x1139 ?x872 (* (- 108) (* r00 x)) ?x137 ?x1063 ?x1104 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1202)))
 (let (($x1226 (= ?x1210 0)))
 (let ((?x1076 (* 15 ?x558)))
 (let ((?x844 (* r00 r00 x00)))
 (let ((?x1033 (* 36 ?x844)))
 (let ((?x1083 (* (- 6) ?x772)))
 (let ((?x1041 (* 54 ?x489)))
 (let ((?x715 (+ (* 24 (* s r)) ?x1041 (* (- 36) (* r00 x r)) (* (- 24) ?x1308) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1083 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1139 ?x1033 ?x1076 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1063 (* 54 (* x00 r)) ?x1104 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x466 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1029 (* 4 ?x558)))
 (let ((?x1169 (* 18 ?x489)))
 (let ((?x1570 (+ (* 9 (* s r)) ?x1169 (* (- 9) ?x1308) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x497) ?x1029 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x860) (* 18 (* x00 r)) ?x466 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x437 (* 12 ?x436)))
 (let ((?x468 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x467 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x453 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x466 ?x467 (* 4 (* s00 r)) (* (- 6) ?x1308) ?x56 ?x468 ?x437)))
 (let (($x638 (= (+ s00 ?x245 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1235 (and $x638 (= ?x453 0) (= ?x1570 0) (= ?x715 0) $x1226 $x862)))
 (let ((?x954 (* (- 9) s00)))
 (let ((?x883 (* (- 15) ?x558)))
 (let ((?x857 (* (- 36) ?x844)))
 (let ((?x773 (* 6 ?x772)))
 (let ((?x512 (* s s)))
 (let ((?x536 (* 3 ?x512)))
 (let ((?x518 (* (- 54) ?x489)))
 (let ((?x876 (+ (* (- 24) (* s r)) ?x518 (* 36 (* r00 x r)) (* 24 ?x1308) ?x536 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x773 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x497) ?x857 ?x883 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x954 (* 36 ?x860) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x571 (* (- 4) ?x558)))
 (let ((?x513 (* 2 ?x512)))
 (let ((?x503 (* (- 18) ?x489)))
 (let ((?x756 (+ (* (- 9) (* s r)) ?x503 (* 9 ?x1308) ?x513 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x497) ?x571 (* 18 (* r00 x)) ?x345 (* 6 ?x860) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x957 (* (- 3) r)))
 (let ((?x797 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x957 ?x345 ?x47 ?x48 (* (- 4) (* s00 r)) ?x1309 ?x415 ?x59 ?x450)))
 (let (($x641 (and $x638 (= ?x797 0) (= ?x756 0) (= ?x876 0) $x1226 $x862)))
 (rewrite (= $x641 $x1235)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x242 (exists ((r Int) (s Int) (x Int) )(! (let ((?x226 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x234 (+ (* (- 1) ?x214 ?x214 ?x226 ?x226 ?x226) (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x226))))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x59 (* 6 x00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x219 (- (+ (* (- 2) ?x212 ?x214) (* 12 ?x212 r00 r00)) (* 3 ?x212))))
 (let ((?x225 (+ (- (+ (- ?x219 ?x44) (* 3 ?x214) ?x48) (* 4 ?x212 s00)) ?x54)))
 (let ((?x237 (* (- (+ (- ?x225 (* 6 ?x226)) ?x59) ?x61) (- ?x234 (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x226)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x237 0)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x572 (lambda ((r Int) (s Int) (x Int) )(let ((?x436 (* r00 r00 r00)))
 (let ((?x450 (* (- 12) ?x436)))
 (let ((?x59 (* 6 x00)))
 (let ((?x415 (* (- 6) x)))
 (let ((?x1308 (* r00 s00)))
 (let ((?x1309 (* 6 ?x1308)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x345 (* (- 3) s00)))
 (let ((?x1019 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x345 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x1309 ?x415 ?x59 ?x450)))
 (let ((?x213 (* 6 r)))
 (let ((?x609 (+ 3 s ?x213)))
 (let ((?x245 (* (- 1) s)))
 (let ((?x274 (+ x ?x245)))
 (let ((?x1350 (+ 1 r)))
 (let ((?x1150 (+ (* (- 1) (* ?x274 ?x274 ?x274 ?x609 ?x609)) (* ?x1350 ?x1350 ?x1350 ?x274 ?x609 ?x609 ?x609) (* (- 1) (* ?x1350 ?x1350 ?x1350 ?x274 ?x609 ?x609)))))
 (let (($x862 (not (= (* ?x1150 ?x1019) 0))))
 (let ((?x1313 (* x00 x00)))
 (let ((?x1202 (* 108 ?x1313)))
 (let ((?x1104 (* (- 9) s)))
 (let ((?x860 (* r00 r00 s00)))
 (let ((?x1063 (* (- 36) ?x860)))
 (let ((?x137 (* 9 s00)))
 (let ((?x558 (* s00 s00)))
 (let ((?x872 (* 51 ?x558)))
 (let ((?x497 (* r00 r00 s)))
 (let ((?x1139 (* 36 ?x497)))
 (let ((?x1151 (* s00 s00 s00)))
 (let ((?x704 (* 16 ?x1151)))
 (let ((?x772 (* s00 x00)))
 (let ((?x835 (* (- 108) ?x772)))
 (let ((?x849 (* r00 r00 r00 x00)))
 (let ((?x810 (* (- 432) ?x849)))
 (let ((?x489 (* r00 x00)))
 (let ((?x346 (* 108 ?x489)))
 (let ((?x1210 (+ (* 216 (* r00 s00 x00)) ?x346 (* (- 54) ?x1308) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x810 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x835 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x704 (* (- 108) (* x s)) ?x1139 ?x872 (* (- 108) (* r00 x)) ?x137 ?x1063 ?x1104 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1202)))
 (let (($x1226 (= ?x1210 0)))
 (let ((?x954 (* (- 9) s00)))
 (let ((?x883 (* (- 15) ?x558)))
 (let ((?x844 (* r00 r00 x00)))
 (let ((?x857 (* (- 36) ?x844)))
 (let ((?x773 (* 6 ?x772)))
 (let ((?x512 (* s s)))
 (let ((?x536 (* 3 ?x512)))
 (let ((?x518 (* (- 54) ?x489)))
 (let ((?x876 (+ (* (- 24) (* s r)) ?x518 (* 36 (* r00 x r)) (* 24 ?x1308) ?x536 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x773 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x497) ?x857 ?x883 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x954 (* 36 ?x860) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x571 (* (- 4) ?x558)))
 (let ((?x513 (* 2 ?x512)))
 (let ((?x503 (* (- 18) ?x489)))
 (let ((?x756 (+ (* (- 9) (* s r)) ?x503 (* 9 ?x1308) ?x513 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x497) ?x571 (* 18 (* r00 x)) ?x345 (* 6 ?x860) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x957 (* (- 3) r)))
 (let ((?x797 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x957 ?x345 ?x47 ?x48 (* (- 4) (* s00 r)) ?x1309 ?x415 ?x59 ?x450)))
 (let (($x638 (= (+ s00 ?x245 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x641 (and $x638 (= ?x797 0) (= ?x756 0) (= ?x876 0) $x1226 $x862)))
 (let ((?x226 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x234 (+ (* (- 1) ?x214 ?x214 ?x226 ?x226 ?x226) (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x226))))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x219 (- (+ (* (- 2) ?x212 ?x214) (* 12 ?x212 r00 r00)) (* 3 ?x212))))
 (let ((?x225 (+ (- (+ (- ?x219 ?x44) (* 3 ?x214) ?x48) (* 4 ?x212 s00)) ?x54)))
 (let ((?x237 (* (- (+ (- ?x225 (* 6 ?x226)) ?x59) ?x61) (- ?x234 (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x226)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x241 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x237 0))))))
 (rewrite (= $x241 $x641)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x243 (asserted $x242)))
 (let ((@x748 (mp (mp @x243 (quant-intro (proof-bind ?x572) (= $x242 $x864)) $x864) (rewrite (= $x864 $x864)) $x864)))
 (let ((@x1168 (mp (mp @x748 (quant-intro (proof-bind ?x716) (= $x864 $x707)) $x707) (quant-intro (proof-bind ?x612) (= $x707 $x596)) $x596)))
 (let ((@x1623 (mp (mp~ @x1168 (sk (~ $x596 $x527)) $x527) (rewrite (= $x527 $x1220)) $x1220)))
 (let ((@x431 (and-elim @x1623 $x1449)))
 (let ((@x955 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1449) $x1591)) @x431 $x1591)))
 (let (($x645 (>= ?x564 0)))
 (let ((@x1263 (and-elim @x1623 $x1022)))
 (let ((@x823 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1022) $x645)) @x1263 $x645)))
 (let (($x566 (<= ?x718 0)))
 (let ((@x836 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1449) $x566)) @x431 $x566)))
 (let (($x981 (<= ?x564 0)))
 (let ((@x1482 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1022) $x981)) @x1263 $x981)))
 (let (($x689 (not (<= ?x939 0))))
 (let (($x1587 (>= ?x939 0)))
 (let ((@x686 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x1587)) @x1482 @x836 @x823 @x955 false) $x1587)))
 (let ((@x1013 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1221 $x689 (not $x1587))) (and-elim @x1623 $x919) (or $x689 (not $x1587)))))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution @x1013 @x686 $x689) @x1482 @x836 @x823 @x955 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        27
 :arith-assert-upper        10
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-fixed-eqs           2
 :arith-max-min             246
 :arith-nonlinear-bounds    16
 :arith-num-rows            10
 :arith-pivots              5
 :arith-pseudo-nonlinear    2
 :arith-row-summations      11
 :arith-tableau-max-columns 101
 :arith-tableau-max-rows    10
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              2
 :max-memory                3.94
 :memory                    3.33
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                1337196
 :num-checks                1
 :propagations              12
 :rlimit-count              8892
 :time                      0.01
 :total-time                0.02)
