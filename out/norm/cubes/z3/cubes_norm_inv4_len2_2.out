unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x1251 (* (- 1) k!2)))
 (let ((?x135 (+ (* 2 n!0) (* (- 3) c!3) (* n!0 k!2) ?x1251)))
 (let (($x819 (<= ?x135 (- 1))))
 (let (($x136 (= ?x135 (- 1))))
 (let ((?x860 (* (- 6) (* c!3 k!2 k!2))))
 (let ((?x434 (* (- 1) (* c!3 k!2 k!2 m!1))))
 (let ((?x919 (* c!3 m!1 m!1)))
 (let ((?x186 (* (- 2) (* k!2 k!2 m!1 m!1))))
 (let ((?x501 (* (- 5) (* c!3 k!2 m!1))))
 (let ((?x1013 (* (- 1) (* k!2 m!1 m!1 m!1))))
 (let ((?x556 (* m!1 m!1 m!1)))
 (let ((?x552 (+ k!2 m!1)))
 (let ((?x495 (+ 1 n!0)))
 (let ((?x553 (* (- 3) (* ?x495 ?x495 ?x495 ?x495 ?x552 ?x552))))
 (let ((?x365 (* 42 (* c!3 m!1))))
 (let ((?x542 (* (- 4) (* m!1 m!1))))
 (let ((?x446 (* 34 (* k!2 m!1))))
 (let ((?x541 (* (- 5) (* k!2 k!2 k!2))))
 (let ((?x933 (* (- 2) (* k!2 k!2 m!1))))
 (let ((?x435 (* 4 (* k!2 m!1 m!1))))
 (let ((?x516 (* 42 (* c!3 k!2))))
 (let ((?x921 (* (- 1) (* k!2 k!2 k!2 m!1))))
 (let ((?x193 (* (- 2) (* c!3 k!2 m!1 m!1))))
 (let ((?x845 (* (- 1) (* c!3 m!1 m!1 m!1))))
 (let ((?x99 (* k!2 k!2)))
 (let ((?x897 (* 38 ?x99)))
 (let ((?x1207 (+ ?x897 ?x845 ?x193 ?x921 (* n!0 n!0 m!1 m!1 m!1) ?x516 ?x435 ?x933 ?x541 ?x446 ?x542 ?x365 ?x553 ?x556 ?x1013 (* 9 (* n!0 c!3 k!2 m!1)) (* 8 (* n!0 n!0 k!2 k!2)) (* 32 (* n!0 k!2 m!1)) (* (- 2) (* n!0 n!0 k!2 m!1)) (* (- 3) (* n!0 n!0 n!0 m!1 m!1)) (* (- 6) (* n!0 n!0 n!0 k!2 m!1)) (* (- 3) (* n!0 n!0 n!0 k!2 k!2)) (* 2 (* n!0 m!1 m!1 m!1)) (* 2 (* n!0 k!2 k!2 k!2)) ?x501 ?x186 ?x919 ?x434 ?x860 (* 54 (* n!0 c!3 m!1)) (* 15 (* n!0 k!2 k!2 m!1)) (* 9 (* n!0 c!3 m!1 m!1)) (* 15 (* n!0 k!2 m!1 m!1)) (* 54 (* n!0 c!3 k!2)) (* 43 (* n!0 k!2 k!2)) (* (- 10) (* n!0 n!0 m!1 m!1)) (* (- 11) (* n!0 m!1 m!1)) (* 3 (* n!0 n!0 c!3 k!2 m!1)) (* 6 (* n!0 n!0 k!2 k!2 m!1)) (* 3 (* n!0 n!0 c!3 m!1 m!1)) (* 6 (* n!0 n!0 k!2 m!1 m!1)) (* 18 (* n!0 n!0 c!3 k!2)) (* 18 (* n!0 n!0 c!3 m!1)) (* n!0 n!0 k!2 k!2 k!2))))
 (let (($x1196 (= ?x1207 0)))
 (let (($x709 (not $x1196)))
 (let ((?x687 (+ (* 3 n!0) ?x1251 (* 3 (* n!0 n!0)))))
 (let (($x700 (= ?x687 (- 1))))
 (let ((?x251 (+ ?x99 (* 9 n!0) (* (- 18) c!3) (* (- 9) (* n!0 c!3)) (* (- 5) k!2))))
 (let (($x257 (= ?x251 (- 4))))
 (let ((?x291 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x759 (= ?x291 (- 6))))
 (let (($x1140 (and $x759 $x257 $x136 $x700 $x709)))
 (let ((?x142 (+ ?x897 ?x501 ?x933 ?x919 ?x435 ?x434 ?x921 ?x193 ?x186 ?x845 ?x1013 ?x860 ?x541 (* 9 (* c!3 k!2 m!1 n!0)) (* 15 (* k!2 k!2 m!1 n!0)) (* 9 (* c!3 m!1 m!1 n!0)) (* 15 (* k!2 m!1 m!1 n!0)) ?x516 ?x365 ?x446 (* 54 (* c!3 k!2 n!0)) (* 43 (* k!2 k!2 n!0)) (* 54 (* c!3 m!1 n!0)) (* 32 (* k!2 m!1 n!0)) (* 8 (* k!2 k!2 n!0 n!0)) (* (- 2) (* k!2 m!1 n!0 n!0)) (* (- 10) (* m!1 m!1 n!0 n!0)) ?x542 (* (- 11) (* m!1 m!1 n!0)) (* 3 (* c!3 k!2 m!1 n!0 n!0)) (* 6 (* k!2 k!2 m!1 n!0 n!0)) (* 3 (* c!3 m!1 m!1 n!0 n!0)) (* 6 (* k!2 m!1 m!1 n!0 n!0)) (* 18 (* c!3 k!2 n!0 n!0)) (* 18 (* c!3 m!1 n!0 n!0)) ?x553 (* k!2 k!2 k!2 n!0 n!0) (* m!1 m!1 m!1 n!0 n!0) ?x556 (* 2 (* k!2 k!2 k!2 n!0)) (* 2 (* m!1 m!1 m!1 n!0)) (* (- 3) (* k!2 k!2 n!0 n!0 n!0)) (* (- 6) (* k!2 m!1 n!0 n!0 n!0)) (* (- 3) (* m!1 m!1 n!0 n!0 n!0)))))
 (let (($x652 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x723 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x99) (* 9 (* c!3 n!0)))))
 (let (($x179 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x723 4) $x652 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x142 0)))))
 (let (($x1019 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1478 (* (- 3) (* m m n n n))))
 (let ((?x1322 (* k m n n n)))
 (let ((?x254 (* (- 6) ?x1322)))
 (let ((?x1475 (* (- 3) (* k k n n n))))
 (let ((?x1203 (* 2 (* m m m n))))
 (let ((?x1200 (* 2 (* k k k n))))
 (let ((?x1122 (* m m m)))
 (let ((?x1083 (* m m m n n)))
 (let ((?x1078 (* k k k n n)))
 (let ((?x70 (+ k m)))
 (let ((?x895 (+ 1 n)))
 (let ((?x1039 (* ?x895 ?x895 ?x895 ?x895 ?x70 ?x70)))
 (let ((?x575 (* (- 3) ?x1039)))
 (let ((?x1382 (* 18 (* c m n n))))
 (let ((?x1381 (* 18 (* c k n n))))
 (let ((?x1380 (* 6 (* k m m n n))))
 (let ((?x737 (* 3 (* c m m n n))))
 (let ((?x1379 (* 6 (* k k m n n))))
 (let ((?x733 (* 3 (* c k m n n))))
 (let ((?x628 (* m m n)))
 (let ((?x267 (* (- 11) ?x628)))
 (let ((?x614 (* m m)))
 (let ((?x259 (* (- 4) ?x614)))
 (let ((?x597 (* m m n n)))
 (let ((?x229 (* (- 10) ?x597)))
 (let ((?x596 (* k m n n)))
 (let ((?x795 (* (- 2) ?x596)))
 (let ((?x594 (* k k n n)))
 (let ((?x233 (* 8 ?x594)))
 (let ((?x538 (* k m n)))
 (let ((?x232 (* 32 ?x538)))
 (let ((?x1369 (* 54 (* c m n))))
 (let ((?x530 (* k k n)))
 (let ((?x235 (* 43 ?x530)))
 (let ((?x1366 (* 54 (* c k n))))
 (let ((?x510 (* k m)))
 (let ((?x1364 (* 34 ?x510)))
 (let ((?x1359 (* 15 (* k m m n))))
 (let ((?x1358 (* 9 (* c m m n))))
 (let ((?x1357 (* 15 (* k k m n))))
 (let ((?x1355 (* 9 (* c k m n))))
 (let ((?x1354 (* (- 5) (* k k k))))
 (let ((?x1353 (* (- 6) (* c k k))))
 (let ((?x1352 (* (- 1) (* k m m m))))
 (let ((?x1351 (* (- 1) (* c m m m))))
 (let ((?x1350 (* (- 2) (* k k m m))))
 (let ((?x1349 (* (- 2) (* c k m m))))
 (let ((?x1348 (* (- 1) (* k k k m))))
 (let ((?x1347 (* (- 1) (* c k k m))))
 (let ((?x1346 (* 4 (* k m m))))
 (let ((?x327 (* c m m)))
 (let ((?x1345 (* (- 2) (* k k m))))
 (let ((?x1344 (* (- 5) (* c k m))))
 (let ((?x49 (* k k)))
 (let ((?x243 (* 38 ?x49)))
 (let ((?x112 (+ ?x243 ?x1344 ?x1345 ?x327 ?x1346 ?x1347 ?x1348 ?x1349 ?x1350 ?x1351 ?x1352 ?x1353 ?x1354 ?x1355 ?x1357 ?x1358 ?x1359 (* 42 (* c k)) (* 42 (* c m)) ?x1364 ?x1366 ?x235 ?x1369 ?x232 ?x233 ?x795 ?x229 ?x259 ?x267 ?x733 ?x1379 ?x737 ?x1380 ?x1381 ?x1382 ?x575 ?x1078 ?x1083 ?x1122 ?x1200 ?x1203 ?x1475 ?x254 ?x1478)))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 (* c n))) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 $x209 $x261 $x299 (not (= ?x112 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x498 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1478 (* (- 3) (* m m n n n))))
 (let ((?x1322 (* k m n n n)))
 (let ((?x254 (* (- 6) ?x1322)))
 (let ((?x1475 (* (- 3) (* k k n n n))))
 (let ((?x1203 (* 2 (* m m m n))))
 (let ((?x1200 (* 2 (* k k k n))))
 (let ((?x1122 (* m m m)))
 (let ((?x1083 (* m m m n n)))
 (let ((?x1078 (* k k k n n)))
 (let ((?x70 (+ k m)))
 (let ((?x895 (+ 1 n)))
 (let ((?x1039 (* ?x895 ?x895 ?x895 ?x895 ?x70 ?x70)))
 (let ((?x575 (* (- 3) ?x1039)))
 (let ((?x1382 (* 18 (* c m n n))))
 (let ((?x1381 (* 18 (* c k n n))))
 (let ((?x1380 (* 6 (* k m m n n))))
 (let ((?x737 (* 3 (* c m m n n))))
 (let ((?x1379 (* 6 (* k k m n n))))
 (let ((?x733 (* 3 (* c k m n n))))
 (let ((?x628 (* m m n)))
 (let ((?x267 (* (- 11) ?x628)))
 (let ((?x614 (* m m)))
 (let ((?x259 (* (- 4) ?x614)))
 (let ((?x597 (* m m n n)))
 (let ((?x229 (* (- 10) ?x597)))
 (let ((?x596 (* k m n n)))
 (let ((?x795 (* (- 2) ?x596)))
 (let ((?x594 (* k k n n)))
 (let ((?x233 (* 8 ?x594)))
 (let ((?x538 (* k m n)))
 (let ((?x232 (* 32 ?x538)))
 (let ((?x1369 (* 54 (* c m n))))
 (let ((?x530 (* k k n)))
 (let ((?x235 (* 43 ?x530)))
 (let ((?x1366 (* 54 (* c k n))))
 (let ((?x506 (* c m)))
 (let ((?x1362 (* 36 ?x506)))
 (let ((?x499 (* c k)))
 (let ((?x1361 (* 36 ?x499)))
 (let ((?x1359 (* 15 (* k m m n))))
 (let ((?x1358 (* 9 (* c m m n))))
 (let ((?x1357 (* 15 (* k k m n))))
 (let ((?x1355 (* 9 (* c k m n))))
 (let ((?x1354 (* (- 5) (* k k k))))
 (let ((?x1353 (* (- 6) (* c k k))))
 (let ((?x1352 (* (- 1) (* k m m m))))
 (let ((?x1351 (* (- 1) (* c m m m))))
 (let ((?x1350 (* (- 2) (* k k m m))))
 (let ((?x1349 (* (- 2) (* c k m m))))
 (let ((?x1348 (* (- 1) (* k k k m))))
 (let ((?x1347 (* (- 1) (* c k k m))))
 (let ((?x1346 (* 4 (* k m m))))
 (let ((?x327 (* c m m)))
 (let ((?x1345 (* (- 2) (* k k m))))
 (let ((?x1344 (* (- 5) (* c k m))))
 (let ((?x49 (* k k)))
 (let ((?x243 (* 38 ?x49)))
 (let ((?x268 (+ ?x243 ?x1344 ?x1345 ?x327 ?x1346 ?x1347 ?x1348 ?x1349 ?x1350 ?x1351 ?x1352 ?x1353 ?x1354 ?x1355 ?x1357 ?x1358 ?x1359 ?x1361 ?x1362 (* 28 (* k m)) ?x1366 ?x235 ?x1369 ?x232 ?x233 ?x795 ?x229 ?x259 ?x267 ?x733 ?x1379 ?x737 ?x1380 ?x1381 ?x1382 (* 6 (* m c)) (* 6 (* m k)) ?x575 ?x1078 ?x1083 ?x1122 ?x1200 ?x1203 (* 6 (* k c)) ?x1475 ?x254 ?x1478)))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 (* c n))) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 $x209 $x261 $x299 (not (= ?x268 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1021 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1478 (* (- 3) (* m m n n n))))
 (let ((?x1322 (* k m n n n)))
 (let ((?x254 (* (- 6) ?x1322)))
 (let ((?x1475 (* (- 3) (* k k n n n))))
 (let ((?x1203 (* 2 (* m m m n))))
 (let ((?x1200 (* 2 (* k k k n))))
 (let ((?x1122 (* m m m)))
 (let ((?x1083 (* m m m n n)))
 (let ((?x1078 (* k k k n n)))
 (let ((?x70 (+ k m)))
 (let ((?x895 (+ 1 n)))
 (let ((?x1039 (* ?x895 ?x895 ?x895 ?x895 ?x70 ?x70)))
 (let ((?x575 (* (- 3) ?x1039)))
 (let ((?x1382 (* 18 (* c m n n))))
 (let ((?x1381 (* 18 (* c k n n))))
 (let ((?x1380 (* 6 (* k m m n n))))
 (let ((?x737 (* 3 (* c m m n n))))
 (let ((?x1379 (* 6 (* k k m n n))))
 (let ((?x733 (* 3 (* c k m n n))))
 (let ((?x628 (* m m n)))
 (let ((?x267 (* (- 11) ?x628)))
 (let ((?x614 (* m m)))
 (let ((?x259 (* (- 4) ?x614)))
 (let ((?x597 (* m m n n)))
 (let ((?x229 (* (- 10) ?x597)))
 (let ((?x596 (* k m n n)))
 (let ((?x795 (* (- 2) ?x596)))
 (let ((?x594 (* k k n n)))
 (let ((?x233 (* 8 ?x594)))
 (let ((?x538 (* k m n)))
 (let ((?x232 (* 32 ?x538)))
 (let ((?x1369 (* 54 (* c m n))))
 (let ((?x530 (* k k n)))
 (let ((?x235 (* 43 ?x530)))
 (let ((?x1366 (* 54 (* c k n))))
 (let ((?x510 (* k m)))
 (let ((?x1364 (* 34 ?x510)))
 (let ((?x1359 (* 15 (* k m m n))))
 (let ((?x1358 (* 9 (* c m m n))))
 (let ((?x1357 (* 15 (* k k m n))))
 (let ((?x1355 (* 9 (* c k m n))))
 (let ((?x1354 (* (- 5) (* k k k))))
 (let ((?x1353 (* (- 6) (* c k k))))
 (let ((?x1352 (* (- 1) (* k m m m))))
 (let ((?x1351 (* (- 1) (* c m m m))))
 (let ((?x1350 (* (- 2) (* k k m m))))
 (let ((?x1349 (* (- 2) (* c k m m))))
 (let ((?x1348 (* (- 1) (* k k k m))))
 (let ((?x1347 (* (- 1) (* c k k m))))
 (let ((?x1346 (* 4 (* k m m))))
 (let ((?x327 (* c m m)))
 (let ((?x1345 (* (- 2) (* k k m))))
 (let ((?x1344 (* (- 5) (* c k m))))
 (let ((?x49 (* k k)))
 (let ((?x243 (* 38 ?x49)))
 (let ((?x112 (+ ?x243 ?x1344 ?x1345 ?x327 ?x1346 ?x1347 ?x1348 ?x1349 ?x1350 ?x1351 ?x1352 ?x1353 ?x1354 ?x1355 ?x1357 ?x1358 ?x1359 (* 42 (* c k)) (* 42 (* c m)) ?x1364 ?x1366 ?x235 ?x1369 ?x232 ?x233 ?x795 ?x229 ?x259 ?x267 ?x733 ?x1379 ?x737 ?x1380 ?x1381 ?x1382 ?x575 ?x1078 ?x1083 ?x1122 ?x1200 ?x1203 ?x1475 ?x254 ?x1478)))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 (* c n))) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x110 (and $x125 $x209 $x261 $x299 (not (= ?x112 0)))))
 (let ((?x506 (* c m)))
 (let ((?x1362 (* 36 ?x506)))
 (let ((?x499 (* c k)))
 (let ((?x1361 (* 36 ?x499)))
 (let ((?x268 (+ ?x243 ?x1344 ?x1345 ?x327 ?x1346 ?x1347 ?x1348 ?x1349 ?x1350 ?x1351 ?x1352 ?x1353 ?x1354 ?x1355 ?x1357 ?x1358 ?x1359 ?x1361 ?x1362 (* 28 ?x510) ?x1366 ?x235 ?x1369 ?x232 ?x233 ?x795 ?x229 ?x259 ?x267 ?x733 ?x1379 ?x737 ?x1380 ?x1381 ?x1382 (* 6 (* m c)) (* 6 (* m k)) ?x575 ?x1078 ?x1083 ?x1122 ?x1200 ?x1203 (* 6 (* k c)) ?x1475 ?x254 ?x1478)))
 (let (($x134 (and $x125 $x209 $x261 $x299 (not (= ?x268 0)))))
 (rewrite (= $x134 $x110))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x529 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x895 (+ 1 n)))
 (let ((?x374 (* ?x895 ?x895 ?x895 ?x70 ?x70)))
 (let ((?x1252 (* ?x895 ?x895 ?x70 ?x70 ?x70)))
 (let ((?x1039 (* ?x895 ?x895 ?x895 ?x895 ?x70 ?x70)))
 (let ((?x575 (* (- 3) ?x1039)))
 (let ((?x69 (+ c k)))
 (let ((?x886 (+ 6 m)))
 (let ((?x890 (* ?x886 ?x70 ?x69)))
 (let ((?x923 (+ ?x890 (* (- 1) (* ?x886 ?x70 ?x70 ?x69)) (* 3 (* ?x895 ?x886 ?x70 ?x69)) (* (- 1) (* ?x895 ?x895 ?x70 ?x70)) (* 3 (* ?x895 ?x895 ?x886 ?x70 ?x69)) ?x575 ?x1252 (* (- 3) ?x374))))
 (let (($x1244 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x525 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x211 ?x212) 4) $x525 $x1244 (not (= ?x923 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x570 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1478 (* (- 3) (* m m n n n))))
 (let ((?x1322 (* k m n n n)))
 (let ((?x254 (* (- 6) ?x1322)))
 (let ((?x1475 (* (- 3) (* k k n n n))))
 (let ((?x1203 (* 2 (* m m m n))))
 (let ((?x1200 (* 2 (* k k k n))))
 (let ((?x1122 (* m m m)))
 (let ((?x1083 (* m m m n n)))
 (let ((?x1078 (* k k k n n)))
 (let ((?x70 (+ k m)))
 (let ((?x895 (+ 1 n)))
 (let ((?x1039 (* ?x895 ?x895 ?x895 ?x895 ?x70 ?x70)))
 (let ((?x575 (* (- 3) ?x1039)))
 (let ((?x1382 (* 18 (* c m n n))))
 (let ((?x1381 (* 18 (* c k n n))))
 (let ((?x1380 (* 6 (* k m m n n))))
 (let ((?x737 (* 3 (* c m m n n))))
 (let ((?x1379 (* 6 (* k k m n n))))
 (let ((?x733 (* 3 (* c k m n n))))
 (let ((?x628 (* m m n)))
 (let ((?x267 (* (- 11) ?x628)))
 (let ((?x614 (* m m)))
 (let ((?x259 (* (- 4) ?x614)))
 (let ((?x597 (* m m n n)))
 (let ((?x229 (* (- 10) ?x597)))
 (let ((?x596 (* k m n n)))
 (let ((?x795 (* (- 2) ?x596)))
 (let ((?x594 (* k k n n)))
 (let ((?x233 (* 8 ?x594)))
 (let ((?x538 (* k m n)))
 (let ((?x232 (* 32 ?x538)))
 (let ((?x1369 (* 54 (* c m n))))
 (let ((?x530 (* k k n)))
 (let ((?x235 (* 43 ?x530)))
 (let ((?x1366 (* 54 (* c k n))))
 (let ((?x506 (* c m)))
 (let ((?x1362 (* 36 ?x506)))
 (let ((?x499 (* c k)))
 (let ((?x1361 (* 36 ?x499)))
 (let ((?x1359 (* 15 (* k m m n))))
 (let ((?x1358 (* 9 (* c m m n))))
 (let ((?x1357 (* 15 (* k k m n))))
 (let ((?x1355 (* 9 (* c k m n))))
 (let ((?x1354 (* (- 5) (* k k k))))
 (let ((?x1353 (* (- 6) (* c k k))))
 (let ((?x1352 (* (- 1) (* k m m m))))
 (let ((?x1351 (* (- 1) (* c m m m))))
 (let ((?x1350 (* (- 2) (* k k m m))))
 (let ((?x1349 (* (- 2) (* c k m m))))
 (let ((?x1348 (* (- 1) (* k k k m))))
 (let ((?x1347 (* (- 1) (* c k k m))))
 (let ((?x1346 (* 4 (* k m m))))
 (let ((?x327 (* c m m)))
 (let ((?x1345 (* (- 2) (* k k m))))
 (let ((?x1344 (* (- 5) (* c k m))))
 (let ((?x49 (* k k)))
 (let ((?x243 (* 38 ?x49)))
 (let ((?x268 (+ ?x243 ?x1344 ?x1345 ?x327 ?x1346 ?x1347 ?x1348 ?x1349 ?x1350 ?x1351 ?x1352 ?x1353 ?x1354 ?x1355 ?x1357 ?x1358 ?x1359 ?x1361 ?x1362 (* 28 (* k m)) ?x1366 ?x235 ?x1369 ?x232 ?x233 ?x795 ?x229 ?x259 ?x267 ?x733 ?x1379 ?x737 ?x1380 ?x1381 ?x1382 (* 6 (* m c)) (* 6 (* m k)) ?x575 ?x1078 ?x1083 ?x1122 ?x1200 ?x1203 (* 6 (* k c)) ?x1475 ?x254 ?x1478)))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 (* c n))) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x134 (and $x125 $x209 $x261 $x299 (not (= ?x268 0)))))
 (let ((?x1252 (* ?x895 ?x895 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x886 (+ 6 m)))
 (let ((?x890 (* ?x886 ?x70 ?x69)))
 (let ((?x923 (+ ?x890 (* (- 1) (* ?x886 ?x70 ?x70 ?x69)) (* 3 (* ?x895 ?x886 ?x70 ?x69)) (* (- 1) (* ?x895 ?x895 ?x70 ?x70)) (* 3 (* ?x895 ?x895 ?x886 ?x70 ?x69)) ?x575 ?x1252 (* (- 3) (* ?x895 ?x895 ?x895 ?x70 ?x70)))))
 (let (($x1244 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x525 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x451 (and $x125 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x211 ?x212) 4) $x525 $x1244 (not (= ?x923 0)))))
 (rewrite (= $x451 $x134))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x663 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x895 (+ 1 n)))
 (let ((?x374 (* ?x895 ?x895 ?x895 ?x70 ?x70)))
 (let ((?x945 (* ?x895 ?x895 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x886 (+ 6 m)))
 (let ((?x898 (* ?x886 ?x70 ?x70 ?x69)))
 (let ((?x380 (+ (* (- 1) (* ?x886 ?x70 ?x69)) ?x898 (* (- 3) (* ?x895 ?x886 ?x70 ?x69)) ?x945 (* (- 3) (* ?x895 ?x895 ?x886 ?x70 ?x69)) (* 3 (* ?x895 ?x895 ?x895 ?x895 ?x70 ?x70)) (* (- 1) (* ?x895 ?x895 ?x70 ?x70 ?x70)) (* 3 ?x374))))
 (let (($x1244 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x841 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x554 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 (= ?x554 (- 4)) $x841 $x1244 (not (= ?x380 0))))))))))))))))) :qid k!34))
 ))
 (let ((?x453 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x895 (+ 1 n)))
 (let ((?x374 (* ?x895 ?x895 ?x895 ?x70 ?x70)))
 (let ((?x1252 (* ?x895 ?x895 ?x70 ?x70 ?x70)))
 (let ((?x1039 (* ?x895 ?x895 ?x895 ?x895 ?x70 ?x70)))
 (let ((?x575 (* (- 3) ?x1039)))
 (let ((?x69 (+ c k)))
 (let ((?x886 (+ 6 m)))
 (let ((?x890 (* ?x886 ?x70 ?x69)))
 (let ((?x923 (+ ?x890 (* (- 1) (* ?x886 ?x70 ?x70 ?x69)) (* 3 (* ?x895 ?x886 ?x70 ?x69)) (* (- 1) (* ?x895 ?x895 ?x70 ?x70)) (* 3 (* ?x895 ?x895 ?x886 ?x70 ?x69)) ?x575 ?x1252 (* (- 3) ?x374))))
 (let (($x1244 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x525 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x451 (and $x125 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x211 ?x212) 4) $x525 $x1244 (not (= ?x923 0)))))
 (let ((?x945 (* ?x895 ?x895 ?x70 ?x70)))
 (let ((?x898 (* ?x886 ?x70 ?x70 ?x69)))
 (let ((?x380 (+ (* (- 1) ?x890) ?x898 (* (- 3) (* ?x895 ?x886 ?x70 ?x69)) ?x945 (* (- 3) (* ?x895 ?x895 ?x886 ?x70 ?x69)) (* 3 ?x1039) (* (- 1) ?x1252) (* 3 ?x374))))
 (let (($x841 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x554 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x889 (and $x125 (= ?x554 (- 4)) $x841 $x1244 (not (= ?x380 0)))))
 (rewrite (= $x889 $x451)))))))))))))))))))))))))))))
 ))
 (let (($x92 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x75 (+ n 1)))
 (let ((?x70 (+ k m)))
 (let ((?x74 (+ (* (- 1) (+ c k) ?x70 (+ m 6)) (* (+ c k) ?x70 ?x70 (+ m 6)))))
 (let ((?x79 (+ (- ?x74 (* 3 (+ c k) ?x70 (+ m 6) ?x75)) (* ?x70 ?x70 ?x75 ?x75))))
 (let ((?x83 (+ (- ?x79 (* 3 (+ c k) ?x70 (+ m 6) ?x75 ?x75)) (* 3 ?x70 ?x70 ?x75 ?x75 ?x75 ?x75))))
 (let ((?x87 (+ (- ?x83 (* ?x70 ?x70 ?x70 ?x75 ?x75)) (* 3 ?x70 ?x70 ?x75 ?x75 ?x75))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x87 0))))))))))))))))) :qid k!34))
 ))
 (let ((?x900 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x895 (+ 1 n)))
 (let ((?x374 (* ?x895 ?x895 ?x895 ?x70 ?x70)))
 (let ((?x945 (* ?x895 ?x895 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x886 (+ 6 m)))
 (let ((?x898 (* ?x886 ?x70 ?x70 ?x69)))
 (let ((?x380 (+ (* (- 1) (* ?x886 ?x70 ?x69)) ?x898 (* (- 3) (* ?x895 ?x886 ?x70 ?x69)) ?x945 (* (- 3) (* ?x895 ?x895 ?x886 ?x70 ?x69)) (* 3 (* ?x895 ?x895 ?x895 ?x895 ?x70 ?x70)) (* (- 1) (* ?x895 ?x895 ?x70 ?x70 ?x70)) (* 3 ?x374))))
 (let (($x1244 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x841 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x554 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x889 (and $x125 (= ?x554 (- 4)) $x841 $x1244 (not (= ?x380 0)))))
 (let ((?x75 (+ n 1)))
 (let ((?x74 (+ (* (- 1) ?x69 ?x70 (+ m 6)) (* ?x69 ?x70 ?x70 (+ m 6)))))
 (let ((?x79 (+ (- ?x74 (* 3 ?x69 ?x70 (+ m 6) ?x75)) (* ?x70 ?x70 ?x75 ?x75))))
 (let ((?x83 (+ (- ?x79 (* 3 ?x69 ?x70 (+ m 6) ?x75 ?x75)) (* 3 ?x70 ?x70 ?x75 ?x75 ?x75 ?x75))))
 (let ((?x87 (+ (- ?x83 (* ?x70 ?x70 ?x70 ?x75 ?x75)) (* 3 ?x70 ?x70 ?x75 ?x75 ?x75))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x91 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x87 0))))))
 (rewrite (= $x91 $x889)))))))))))))))))))))))))))))
 ))
 (let ((@x93 (asserted $x92)))
 (let ((@x366 (mp (mp @x93 (quant-intro (proof-bind ?x900) (= $x92 $x663)) $x663) (rewrite (= $x663 $x663)) $x663)))
 (let ((@x961 (mp (mp @x366 (quant-intro (proof-bind ?x453) (= $x663 $x529)) $x529) (quant-intro (proof-bind ?x570) (= $x529 $x498)) $x498)))
 (let ((@x481 (mp~ (mp @x961 (quant-intro (proof-bind ?x1021) (= $x498 $x1019)) $x1019) (sk (~ $x1019 $x179)) $x179)))
 (let ((@x1071 (mp @x481 (rewrite (= $x179 $x1140)) $x1140)))
 (let ((@x1001 (and-elim @x1071 $x136)))
 (let ((@x1236 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x136) $x819)) @x1001 $x819)))
 (let (($x818 (>= ?x135 (- 1))))
 (let ((@x973 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x136) $x818)) @x1001 $x818)))
 (let (($x505 (<= ?x687 (- 1))))
 (let ((@x1147 (and-elim @x1071 $x700)))
 (let ((@x277 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x700) $x505)) @x1147 $x505)))
 (let (($x504 (>= ?x687 (- 1))))
 (let ((@x1127 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x700) $x504)) @x1147 $x504)))
 (let (($x825 (<= ?x251 (- 4))))
 (let ((@x1065 (and-elim @x1071 $x257)))
 (let ((@x313 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x257) $x825)) @x1065 $x825)))
 (let (($x824 (>= ?x251 (- 4))))
 (let ((@x1168 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x257) $x824)) @x1065 $x824)))
 (let (($x333 (<= ?x291 (- 6))))
 (let ((@x1072 (and-elim @x1071 $x759)))
 (let ((@x1170 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x759) $x333)) @x1072 $x333)))
 (let (($x292 (>= ?x291 (- 6))))
 (let ((@x392 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x759) $x292)) @x1072 $x292)))
 (let (($x1052 (not (<= ?x1207 0))))
 (let (($x706 (>= ?x1207 0)))
 (let ((@x282 ((_ th-lemma arith) (hypothesis (not $x706)) @x1127 @x277 @x392 @x1170 @x1168 @x313 @x1127 @x277 @x1127 @x277 @x973 @x1236 @x1168 @x313 @x1168 @x313 @x1127 @x277 @x392 @x1170 @x1127 @x277 false)))
 (let ((@x833 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1196 $x1052 (not $x706))) (and-elim @x1071 $x709) (or $x1052 (not $x706)))))
 ((_ th-lemma arith) (unit-resolution @x833 (lemma @x282 $x706) $x1052) @x1127 @x277 @x392 @x1170 @x1127 @x277 @x973 @x1236 @x1127 @x277 @x973 @x1236 @x1168 @x313 @x1168 @x313 @x1127 @x277 @x973 @x1236 @x392 @x1170 @x1127 @x277 @x1168 @x313 @x1127 @x277 @x973 @x1236 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        23
 :arith-assert-upper        8
 :arith-branch-var          2
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           8
 :arith-gomory-cuts         2
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             409
 :arith-nonlinear-bounds    14
 :arith-nonlinear-horner    16
 :arith-num-rows            8
 :arith-patches             4
 :arith-pivots              14
 :arith-row-summations      27
 :arith-tableau-max-columns 86
 :arith-tableau-max-rows    8
 :conflicts                 2
 :decisions                 3
 :del-clause                16
 :final-checks              8
 :max-memory                3.87
 :memory                    3.28
 :mk-bool-var               25
 :mk-clause                 16
 :num-allocs                1422581
 :num-checks                1
 :propagations              10
 :rlimit-count              11917
 :time                      0.01
 :total-time                0.02)
