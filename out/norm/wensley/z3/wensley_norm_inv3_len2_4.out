unsat
((set-logic NIA)
(declare-fun b!2 () Int)
(declare-fun a!3 () Int)
(declare-fun d!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x1293 (to_real b!2)))
 (let ((?x1288 (to_real a!3)))
 (let ((?x1287 (to_real d!1)))
 (let ((?x506 (to_real y!0)))
 (let ((?x1580 (* (- (/ 1.0 8.0)) (* ?x506 ?x506 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x1293))))
 (let ((?x1144 (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1293)))
 (let ((?x717 (* (- (/ 1.0 32.0)) ?x1144)))
 (let ((?x64 (to_real a00)))
 (let ((?x453 (* (- (/ 1.0 16.0)) (* ?x64 ?x506 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288))))
 (let ((?x67 (to_real y00)))
 (let ((?x721 (* (/ 1.0 8.0) (* ?x67 ?x506 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x1293))))
 (let ((?x702 (* (/ 1.0 16.0) (* ?x506 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x1288))))
 (let ((?x573 (* (- (/ 1.0 16.0)) (* ?x67 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293))))
 (let ((?x976 (* (/ 1.0 32.0) (* ?x64 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293))))
 (let ((?x975 (* (/ 1.0 16.0) (* ?x506 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293))))
 (let ((?x1582 (+ ?x975 ?x976 ?x573 ?x702 ?x721 ?x453 ?x717 ?x1580)))
 (let (($x1901 (>= ?x1582 0.0)))
 (let (($x473 (not $x1901)))
 (let (($x389 (<= ?x1582 0.0)))
 (let ((?x1476 (* a!3 d!1)))
 (let ((?x405 (+ (* 2 (* y00 b!2)) (* (- 1) (* a00 d!1)) ?x1476 (* (- 2) (* y!0 b!2)))))
 (let (($x275 (>= ?x405 0)))
 (let (($x286 (= 0 ?x405)))
 (let ((@x744 (symm (commutativity (= $x286 (= ?x405 0))) (= (= ?x405 0) $x286))))
 (let (($x404 (= ?x405 0)))
 (let ((?x846 (* (- (/ 3.0 64.0)) (* ?x64 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288))))
 (let ((?x619 (* (- (/ 1.0 128.0)) (* ?x64 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293))))
 (let ((?x848 (* (- (/ 9.0 64.0)) (* ?x64 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1293))))
 (let ((?x849 (* (- (/ 3.0 128.0)) (* ?x64 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1293))))
 (let ((?x852 (* (- (/ 3.0 128.0)) (* ?x64 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293))))
 (let ((?x137 (* (/ 1.0 2.0) ?x1287)))
 (let ((?x1053 (+ ?x506 ?x137)))
 (let ((?x135 (+ ?x1288 ?x1293)))
 (let ((?x850 (* (- (/ 1.0 8.0)) (* ?x1287 ?x1287 ?x1287 ?x1293 ?x135 ?x135 ?x135 ?x1053 ?x1053 ?x1053 ?x1053))))
 (let ((?x469 (* (/ 9.0 32.0) (* ?x67 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293 ?x1293))))
 (let ((?x853 (* (- (/ 3.0 64.0)) (* ?x64 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293))))
 (let ((?x855 (* (- (/ 9.0 64.0)) (* ?x64 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293))))
 (let ((?x858 (* (- (/ 9.0 32.0)) (* ?x64 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1293))))
 (let ((?x856 (* (- (/ 3.0 32.0)) (* ?x64 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288))))
 (let ((?x857 (* (- (/ 9.0 32.0)) (* ?x64 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293))))
 (let ((?x593 (* (- (/ 3.0 32.0)) (* ?x64 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293))))
 (let ((?x862 (* (- (/ 3.0 16.0)) (* ?x64 ?x506 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1293))))
 (let ((?x859 (* (/ 3.0 16.0) (* ?x67 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293 ?x1293))))
 (let ((?x470 (* (- (/ 1.0 16.0)) (* ?x64 ?x506 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293))))
 (let ((?x861 (* (- (/ 3.0 16.0)) (* ?x64 ?x506 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293))))
 (let ((?x865 (* (/ 1.0 8.0) (* ?x67 ?x506 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293 ?x1293))))
 (let ((?x870 (* (/ 3.0 64.0) (* ?x67 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1293 ?x1293))))
 (let ((?x863 (* (/ 3.0 32.0) (* ?x67 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293 ?x1293))))
 (let ((?x864 (* (/ 1.0 64.0) (* ?x67 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293 ?x1293))))
 (let ((?x438 (* (/ 3.0 16.0) (* ?x67 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x1293))))
 (let ((?x868 (* (/ 3.0 32.0) (* ?x67 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x1293))))
 (let ((?x866 (* (/ 3.0 64.0) (* ?x67 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293 ?x1293))))
 (let ((?x867 (* (/ 3.0 8.0) (* ?x67 ?x506 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1293 ?x1293))))
 (let ((?x471 (* (/ 3.0 8.0) (* ?x67 ?x506 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293 ?x1293))))
 (let ((?x876 (* (/ 9.0 16.0) (* ?x67 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293 ?x1293))))
 (let ((?x869 (* (/ 1.0 64.0) (* ?x67 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x1293))))
 (let ((?x501 (* (/ 9.0 16.0) (* ?x67 ?x506 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1293 ?x1293))))
 (let ((?x878 (* (/ 9.0 32.0) (* ?x67 ?x506 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1293 ?x1293))))
 (let ((?x874 (* (- (/ 1.0 128.0)) (* ?x64 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288))))
 (let ((?x472 (* (/ 1.0 16.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x135 ?x135 ?x135 ?x135 ?x1053 ?x1053 ?x1053))))
 (let ((?x841 (+ ?x472 ?x975 ?x976 (* (- (/ 1.0 16.0)) (* ?x67 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293)) ?x573 (* (/ 1.0 32.0) (* ?x64 ?x1287 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293)) ?x721 ?x453 ?x874 ?x878 ?x501 ?x869 ?x876 ?x471 ?x867 ?x866 ?x868 ?x438 ?x864 ?x863 ?x870 ?x865 ?x861 ?x470 ?x859 ?x862 ?x593 ?x857 ?x856 ?x858 ?x855 ?x853 ?x469 ?x850 ?x852 ?x849 ?x848 ?x717 (* (- (/ 1.0 32.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293)) ?x619 ?x846 (* (/ 1.0 16.0) (* ?x506 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293)))))
 (let (($x840 (= ?x841 0.0)))
 (let (($x1360 (= ?x1582 0.0)))
 (let (($x476 (not $x1360)))
 (let (($x1333 (or $x476 (not $x840))))
 (let ((?x111 (* b00 y00)))
 (let ((?x112 (* (- 2) ?x111)))
 (let ((?x35 (* a00 d00)))
 (let (($x268 (= (+ ?x35 ?x112 (* (- 1) (* d00 a!3)) (* 2 (* b00 y!0))) 0)))
 (let (($x836 (and $x268 (= (+ (* d00 b!2) (* (- 1) (* b00 d!1))) 0) $x404 $x1333)))
 (let ((?x136 (+ ?x137 ?x506)))
 (let ((?x1621 (* (/ 1.0 8.0) (* ?x1287 ?x1287 ?x1287 ?x1293 ?x135 ?x135 ?x135 ?x136 ?x136 ?x136 ?x136))))
 (let ((?x1324 (* (- (/ 1.0 8.0)) (* ?x1287 ?x1287 ?x1287 ?x506 ?x506 ?x506 ?x1293 ?x1293 ?x1293 ?x1293 ?x67))))
 (let ((?x1345 (* (- (/ 3.0 8.0)) (* ?x1287 ?x1287 ?x1287 ?x1288 ?x506 ?x506 ?x506 ?x1293 ?x1293 ?x1293 ?x67))))
 (let ((?x545 (* (- (/ 3.0 8.0)) (* ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x506 ?x506 ?x506 ?x1293 ?x1293 ?x67))))
 (let ((?x776 (* (- (/ 3.0 16.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x506 ?x506 ?x1293 ?x1293 ?x1293 ?x1293 ?x67))))
 (let ((?x765 (* (- (/ 9.0 16.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x506 ?x506 ?x1293 ?x1293 ?x1293 ?x67))))
 (let ((?x956 (* (- (/ 9.0 16.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x506 ?x506 ?x1293 ?x1293 ?x67))))
 (let ((?x481 (* (- (/ 3.0 16.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x506 ?x506 ?x1293 ?x67))))
 (let ((?x1104 (* (- (/ 3.0 32.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x506 ?x1293 ?x1293 ?x1293 ?x1293 ?x67))))
 (let ((?x483 (* (- (/ 9.0 32.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x506 ?x1293 ?x1293 ?x1293 ?x67))))
 (let ((?x962 (* (- (/ 9.0 32.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x506 ?x1293 ?x1293 ?x67))))
 (let ((?x448 (* (- (/ 3.0 32.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x506 ?x1293 ?x67))))
 (let ((?x443 (* (- (/ 1.0 64.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293 ?x1293 ?x67))))
 (let ((?x624 (* (- (/ 3.0 64.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293 ?x1293 ?x67))))
 (let ((?x415 (* (- (/ 3.0 64.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1293 ?x1293 ?x67))))
 (let ((?x1910 (* (- (/ 1.0 64.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x1293 ?x67))))
 (let ((?x1898 (* (/ 1.0 16.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x506 ?x506 ?x506 ?x1293 ?x1293 ?x1293 ?x64))))
 (let ((?x261 (* (/ 3.0 16.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x506 ?x506 ?x506 ?x1293 ?x1293 ?x64))))
 (let ((?x225 (* (/ 3.0 16.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x506 ?x506 ?x506 ?x1293 ?x64))))
 (let ((?x254 (* (/ 3.0 32.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x506 ?x506 ?x1293 ?x1293 ?x1293 ?x64))))
 (let ((?x368 (* (/ 9.0 32.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x506 ?x506 ?x1293 ?x1293 ?x64))))
 (let ((?x281 (* (/ 9.0 32.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x506 ?x506 ?x1293 ?x64))))
 (let ((?x159 (* (/ 3.0 32.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x506 ?x506 ?x64))))
 (let ((?x157 (* (/ 3.0 64.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x506 ?x1293 ?x1293 ?x1293 ?x64))))
 (let ((?x150 (* (/ 9.0 64.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x506 ?x1293 ?x1293 ?x64))))
 (let ((?x148 (* (/ 9.0 64.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x506 ?x1293 ?x64))))
 (let ((?x142 (* (- (/ 1.0 16.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x135 ?x135 ?x135 ?x135 ?x136 ?x136 ?x136))))
 (let ((?x127 (* (/ 3.0 64.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x506 ?x64))))
 (let ((?x131 (* (/ 1.0 128.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293 ?x64))))
 (let ((?x319 (* (/ 3.0 128.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293 ?x64))))
 (let ((?x283 (* (/ 3.0 128.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1293 ?x64))))
 (let ((?x274 (* (/ 1.0 128.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x64))))
 (let ((?x1806 (* (/ 1.0 32.0) ?x1144)))
 (let ((?x1131 (* (- (/ 1.0 16.0)) (* ?x1287 ?x1287 ?x1287 ?x1288 ?x506 ?x1293 ?x1293))))
 (let ((?x1136 (* (- (/ 1.0 8.0)) (* ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x506 ?x506 ?x506 ?x1293 ?x67))))
 (let ((?x1272 (* (/ 1.0 16.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x506 ?x506 ?x506 ?x64))))
 (let ((?x282 (* (- (/ 1.0 32.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x64))))
 (let ((?x658 (* (/ 1.0 16.0) (* ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293 ?x67))))
 (let ((?x433 (+ ?x658 ?x282 ?x1272 ?x1136 ?x1131 ?x1806 (* (/ 1.0 16.0) (* ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x1293 ?x67)) (* (- (/ 1.0 32.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1293 ?x1293 ?x64)) ?x274 ?x283 ?x319 ?x131 ?x127 ?x142 ?x148 ?x150 ?x157 ?x159 ?x281 ?x368 ?x254 ?x225 ?x261 ?x1898 ?x1910 ?x415 ?x624 ?x443 ?x448 ?x962 ?x483 ?x1104 ?x481 ?x956 ?x765 ?x776 ?x545 ?x1345 ?x1324 (* (/ 1.0 32.0) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1293 ?x1293)) (* (- (/ 1.0 16.0)) (* ?x1287 ?x1287 ?x1287 ?x506 ?x1293 ?x1293 ?x1293)) ?x1621)))
 (let ((?x1807 (* (/ 1.0 8.0) (* ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x506 ?x506 ?x506 ?x506 ?x1293))))
 (let ((?x429 (* (- (/ 1.0 16.0)) (* ?x1287 ?x1287 ?x1287 ?x1287 ?x1288 ?x1288 ?x1288 ?x1288 ?x506 ?x506 ?x506))))
 (let (($x622 (or (not (= (+ ?x658 ?x429 ?x282 ?x1272 ?x1136 ?x1131 ?x1806 ?x1807) 0.0)) (not (= ?x433 0.0)))))
 (let ((?x1278 (+ ?x1476 (* (- 2) (* b!2 y!0)) (* 2 (* b!2 y00)) (* (- 1) (* d!1 a00)))))
 (let (($x912 (= (+ ?x35 (* (- 1) (* a!3 d00)) ?x112 (* 2 (* y!0 b00))) 0)))
 (let (($x1709 (and $x912 (= (+ (* b!2 d00) (* (- 1) (* d!1 b00))) 0) (= ?x1278 0) $x622)))
 (let (($x549 (exists ((a Int) (b Int) (d Int) (y Int) )(! (let ((?x60 (to_real y)))
 (let ((?x56 (to_real d)))
 (let ((?x146 (* (/ 1.0 2.0) ?x56)))
 (let ((?x201 (+ ?x146 ?x60)))
 (let ((?x62 (to_real b)))
 (let ((?x59 (to_real a)))
 (let ((?x209 (+ ?x59 ?x62)))
 (let ((?x230 (* (/ 1.0 8.0) (* ?x56 ?x56 ?x56 ?x62 ?x209 ?x209 ?x209 ?x201 ?x201 ?x201 ?x201))))
 (let ((?x1951 (* (- (/ 1.0 16.0)) (* ?x56 ?x56 ?x56 ?x60 ?x62 ?x62 ?x62))))
 (let ((?x1823 (* (/ 1.0 32.0) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x62 ?x62))))
 (let ((?x67 (to_real y00)))
 (let ((?x1950 (* (- (/ 1.0 8.0)) (* ?x56 ?x56 ?x56 ?x60 ?x60 ?x60 ?x62 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1949 (* (- (/ 3.0 8.0)) (* ?x56 ?x56 ?x56 ?x59 ?x60 ?x60 ?x60 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1948 (* (- (/ 3.0 8.0)) (* ?x56 ?x56 ?x56 ?x59 ?x59 ?x60 ?x60 ?x60 ?x62 ?x62 ?x67))))
 (let ((?x1946 (* (- (/ 3.0 16.0)) (* ?x56 ?x56 ?x56 ?x56 ?x60 ?x60 ?x62 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1945 (* (- (/ 9.0 16.0)) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x60 ?x60 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1944 (* (- (/ 9.0 16.0)) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x60 ?x60 ?x62 ?x62 ?x67))))
 (let ((?x1942 (* (- (/ 3.0 16.0)) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x60 ?x62 ?x67))))
 (let ((?x1941 (* (- (/ 3.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x60 ?x62 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1940 (* (- (/ 9.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x60 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1939 (* (- (/ 9.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x60 ?x62 ?x62 ?x67))))
 (let ((?x1938 (* (- (/ 3.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x62 ?x67))))
 (let ((?x1937 (* (- (/ 1.0 64.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x62 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1936 (* (- (/ 3.0 64.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1935 (* (- (/ 3.0 64.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x62 ?x62 ?x67))))
 (let ((?x1934 (* (- (/ 1.0 64.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x62 ?x67))))
 (let ((?x64 (to_real a00)))
 (let ((?x1030 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x60 ?x60 ?x60 ?x62 ?x62 ?x62 ?x64))))
 (let ((?x1082 (* (/ 3.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x60 ?x60 ?x60 ?x62 ?x62 ?x64))))
 (let ((?x1079 (* (/ 3.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x60 ?x60 ?x60 ?x62 ?x64))))
 (let ((?x1075 (* (/ 3.0 32.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x60 ?x60 ?x62 ?x62 ?x62 ?x64))))
 (let ((?x1072 (* (/ 9.0 32.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x60 ?x60 ?x62 ?x62 ?x64))))
 (let ((?x1069 (* (/ 9.0 32.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x60 ?x60 ?x62 ?x64))))
 (let ((?x1065 (* (/ 3.0 32.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x60 ?x64))))
 (let ((?x1061 (* (/ 3.0 64.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x60 ?x62 ?x62 ?x62 ?x64))))
 (let ((?x1058 (* (/ 9.0 64.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x60 ?x62 ?x62 ?x64))))
 (let ((?x1055 (* (/ 9.0 64.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x60 ?x62 ?x64))))
 (let ((?x231 (* (- (/ 1.0 16.0)) (* ?x56 ?x56 ?x56 ?x56 ?x209 ?x209 ?x209 ?x209 ?x201 ?x201 ?x201))))
 (let ((?x1051 (* (/ 3.0 64.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x64))))
 (let ((?x1047 (* (/ 1.0 128.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x62 ?x62 ?x62 ?x64))))
 (let ((?x1044 (* (/ 3.0 128.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x62 ?x62 ?x64))))
 (let ((?x1041 (* (/ 3.0 128.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x62 ?x64))))
 (let ((?x1037 (* (/ 1.0 128.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x64))))
 (let ((?x1932 (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x62 ?x62 ?x64))))
 (let ((?x313 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x320 (* (/ 1.0 32.0) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x62))))
 (let ((?x393 (* (- (/ 1.0 16.0)) (* ?x56 ?x56 ?x56 ?x59 ?x60 ?x62 ?x62))))
 (let ((?x392 (* (- (/ 1.0 8.0)) (* ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x60 ?x60 ?x62 ?x67))))
 (let ((?x244 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x60 ?x60 ?x64))))
 (let ((?x391 (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x62 ?x64))))
 (let ((?x165 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x59 ?x62 ?x62 ?x67))))
 (let ((?x217 (+ ?x165 ?x391 ?x244 ?x392 ?x393 ?x320 ?x313 ?x1932 ?x1037 ?x1041 ?x1044 ?x1047 ?x1051 ?x231 ?x1055 ?x1058 ?x1061 ?x1065 ?x1069 ?x1072 ?x1075 ?x1079 ?x1082 ?x1030 ?x1934 ?x1935 ?x1936 ?x1937 ?x1938 ?x1939 ?x1940 ?x1941 ?x1942 ?x1944 ?x1945 ?x1946 ?x1948 ?x1949 ?x1950 ?x1823 ?x1951 ?x230)))
 (let ((?x358 (* (/ 1.0 8.0) (* ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x60 ?x60 ?x60 ?x62))))
 (let ((?x390 (* (- (/ 1.0 16.0)) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x59 ?x60 ?x60 ?x60))))
 (let (($x400 (not (= (+ ?x165 ?x390 ?x391 ?x244 ?x392 ?x393 ?x320 ?x358) 0.0))))
 (let ((?x48 (* a d)))
 (let ((?x179 (+ ?x48 (* (- 2) (* b y)) (* 2 (* b y00)) (* (- 1) (* d a00)))))
 (let (($x184 (= ?x179 0)))
 (let (($x109 (= (+ (* b d00) (* (- 1) (* d b00))) 0)))
 (let ((?x111 (* b00 y00)))
 (let ((?x112 (* (- 2) ?x111)))
 (let ((?x35 (* a00 d00)))
 (let (($x144 (= (+ ?x35 (* (- 1) (* a d00)) ?x112 (* 2 (* y b00))) 0)))
 (and $x144 $x109 $x184 (or $x400 (not (= ?x217 0.0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x608 (exists ((a Int) (b Int) (d Int) (y Int) )(! (let ((?x56 (to_real d)))
 (let ((?x146 (* (/ 1.0 2.0) ?x56)))
 (let ((?x60 (to_real y)))
 (let ((?x550 (+ ?x60 ?x146)))
 (let ((?x62 (to_real b)))
 (let ((?x59 (to_real a)))
 (let ((?x209 (+ ?x59 ?x62)))
 (let ((?x816 (* (- (/ 1.0 8.0)) (* ?x56 ?x56 ?x56 ?x62 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550 ?x550))))
 (let ((?x67 (to_real y00)))
 (let ((?x735 (* (/ 1.0 8.0) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x64 (to_real a00)))
 (let ((?x694 (* (- (/ 1.0 16.0)) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x585 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x209 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x465 (+ ?x585 (* (/ 1.0 32.0) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x62 ?x209)) (* (- (/ 1.0 16.0)) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x62 ?x209)) ?x694 ?x735 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x62 ?x62 ?x209 ?x550)) (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x62 ?x209 ?x209)) ?x816)))
 (let ((?x711 (* (- (/ 1.0 8.0)) (* ?x60 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59 ?x59))))
 (let ((?x636 (* (/ 1.0 8.0) (* ?x67 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59 ?x59))))
 (let ((?x609 (* (- (/ 1.0 16.0)) (* ?x64 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59))))
 (let ((?x533 (* (/ 1.0 16.0) (* ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x59))))
 (let ((?x722 (+ ?x533 (* (/ 1.0 32.0) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x62 ?x59)) (* (- (/ 1.0 16.0)) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x62 ?x59)) ?x609 ?x636 (* (/ 1.0 16.0) (* ?x60 ?x56 ?x56 ?x56 ?x62 ?x62 ?x59)) (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59)) ?x711)))
 (let (($x827 (or (not (= ?x722 0.0)) (not (= ?x465 0.0)))))
 (let ((?x540 (+ (* d a) (* (- 2) (* y b)) (* 2 (* y00 b)) (* (- 1) (* a00 d)))))
 (let (($x543 (= ?x540 0)))
 (let ((?x1569 (* d00 a)))
 (let ((?x567 (+ (* 2 (* b00 y00)) (* (- 1) (* a00 d00)) (* (- 2) (* b00 y)) ?x1569)))
 (and (= ?x567 0) (= (+ (* d00 b) (* (- 1) (* b00 d))) 0) $x543 $x827))))))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x575 (lambda ((a Int) (b Int) (d Int) (y Int) )(let ((?x60 (to_real y)))
 (let ((?x56 (to_real d)))
 (let ((?x146 (* (/ 1.0 2.0) ?x56)))
 (let ((?x201 (+ ?x146 ?x60)))
 (let ((?x62 (to_real b)))
 (let ((?x59 (to_real a)))
 (let ((?x209 (+ ?x59 ?x62)))
 (let ((?x230 (* (/ 1.0 8.0) (* ?x56 ?x56 ?x56 ?x62 ?x209 ?x209 ?x209 ?x201 ?x201 ?x201 ?x201))))
 (let ((?x1951 (* (- (/ 1.0 16.0)) (* ?x56 ?x56 ?x56 ?x60 ?x62 ?x62 ?x62))))
 (let ((?x1823 (* (/ 1.0 32.0) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x62 ?x62))))
 (let ((?x67 (to_real y00)))
 (let ((?x1950 (* (- (/ 1.0 8.0)) (* ?x56 ?x56 ?x56 ?x60 ?x60 ?x60 ?x62 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1949 (* (- (/ 3.0 8.0)) (* ?x56 ?x56 ?x56 ?x59 ?x60 ?x60 ?x60 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1948 (* (- (/ 3.0 8.0)) (* ?x56 ?x56 ?x56 ?x59 ?x59 ?x60 ?x60 ?x60 ?x62 ?x62 ?x67))))
 (let ((?x1946 (* (- (/ 3.0 16.0)) (* ?x56 ?x56 ?x56 ?x56 ?x60 ?x60 ?x62 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1945 (* (- (/ 9.0 16.0)) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x60 ?x60 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1944 (* (- (/ 9.0 16.0)) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x60 ?x60 ?x62 ?x62 ?x67))))
 (let ((?x1942 (* (- (/ 3.0 16.0)) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x60 ?x62 ?x67))))
 (let ((?x1941 (* (- (/ 3.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x60 ?x62 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1940 (* (- (/ 9.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x60 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1939 (* (- (/ 9.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x60 ?x62 ?x62 ?x67))))
 (let ((?x1938 (* (- (/ 3.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x62 ?x67))))
 (let ((?x1937 (* (- (/ 1.0 64.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x62 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1936 (* (- (/ 3.0 64.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x1935 (* (- (/ 3.0 64.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x62 ?x62 ?x67))))
 (let ((?x1934 (* (- (/ 1.0 64.0)) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x62 ?x67))))
 (let ((?x64 (to_real a00)))
 (let ((?x1030 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x60 ?x60 ?x60 ?x62 ?x62 ?x62 ?x64))))
 (let ((?x1082 (* (/ 3.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x60 ?x60 ?x60 ?x62 ?x62 ?x64))))
 (let ((?x1079 (* (/ 3.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x60 ?x60 ?x60 ?x62 ?x64))))
 (let ((?x1075 (* (/ 3.0 32.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x60 ?x60 ?x62 ?x62 ?x62 ?x64))))
 (let ((?x1072 (* (/ 9.0 32.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x60 ?x60 ?x62 ?x62 ?x64))))
 (let ((?x1069 (* (/ 9.0 32.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x60 ?x60 ?x62 ?x64))))
 (let ((?x1065 (* (/ 3.0 32.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x60 ?x64))))
 (let ((?x1061 (* (/ 3.0 64.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x60 ?x62 ?x62 ?x62 ?x64))))
 (let ((?x1058 (* (/ 9.0 64.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x60 ?x62 ?x62 ?x64))))
 (let ((?x1055 (* (/ 9.0 64.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x60 ?x62 ?x64))))
 (let ((?x231 (* (- (/ 1.0 16.0)) (* ?x56 ?x56 ?x56 ?x56 ?x209 ?x209 ?x209 ?x209 ?x201 ?x201 ?x201))))
 (let ((?x1051 (* (/ 3.0 64.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x64))))
 (let ((?x1047 (* (/ 1.0 128.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x62 ?x62 ?x62 ?x64))))
 (let ((?x1044 (* (/ 3.0 128.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x62 ?x62 ?x64))))
 (let ((?x1041 (* (/ 3.0 128.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x62 ?x64))))
 (let ((?x1037 (* (/ 1.0 128.0) (* ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x64))))
 (let ((?x1932 (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x62 ?x62 ?x64))))
 (let ((?x313 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x62 ?x62 ?x62 ?x67))))
 (let ((?x320 (* (/ 1.0 32.0) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x62))))
 (let ((?x393 (* (- (/ 1.0 16.0)) (* ?x56 ?x56 ?x56 ?x59 ?x60 ?x62 ?x62))))
 (let ((?x392 (* (- (/ 1.0 8.0)) (* ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x60 ?x60 ?x62 ?x67))))
 (let ((?x244 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x60 ?x60 ?x64))))
 (let ((?x391 (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x62 ?x64))))
 (let ((?x165 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x59 ?x62 ?x62 ?x67))))
 (let ((?x217 (+ ?x165 ?x391 ?x244 ?x392 ?x393 ?x320 ?x313 ?x1932 ?x1037 ?x1041 ?x1044 ?x1047 ?x1051 ?x231 ?x1055 ?x1058 ?x1061 ?x1065 ?x1069 ?x1072 ?x1075 ?x1079 ?x1082 ?x1030 ?x1934 ?x1935 ?x1936 ?x1937 ?x1938 ?x1939 ?x1940 ?x1941 ?x1942 ?x1944 ?x1945 ?x1946 ?x1948 ?x1949 ?x1950 ?x1823 ?x1951 ?x230)))
 (let ((?x358 (* (/ 1.0 8.0) (* ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x60 ?x60 ?x60 ?x60 ?x62))))
 (let ((?x390 (* (- (/ 1.0 16.0)) (* ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x59 ?x60 ?x60 ?x60))))
 (let (($x400 (not (= (+ ?x165 ?x390 ?x391 ?x244 ?x392 ?x393 ?x320 ?x358) 0.0))))
 (let ((?x48 (* a d)))
 (let ((?x179 (+ ?x48 (* (- 2) (* b y)) (* 2 (* b y00)) (* (- 1) (* d a00)))))
 (let (($x184 (= ?x179 0)))
 (let (($x109 (= (+ (* b d00) (* (- 1) (* d b00))) 0)))
 (let ((?x111 (* b00 y00)))
 (let ((?x112 (* (- 2) ?x111)))
 (let ((?x35 (* a00 d00)))
 (let (($x144 (= (+ ?x35 (* (- 1) (* a d00)) ?x112 (* 2 (* y b00))) 0)))
 (let (($x115 (and $x144 $x109 $x184 (or $x400 (not (= ?x217 0.0))))))
 (let ((?x550 (+ ?x60 ?x146)))
 (let ((?x816 (* (- (/ 1.0 8.0)) (* ?x56 ?x56 ?x56 ?x62 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550 ?x550))))
 (let ((?x735 (* (/ 1.0 8.0) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x694 (* (- (/ 1.0 16.0)) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x585 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x209 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x465 (+ ?x585 (* (/ 1.0 32.0) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x62 ?x209)) (* (- (/ 1.0 16.0)) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x62 ?x209)) ?x694 ?x735 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x62 ?x62 ?x209 ?x550)) (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x62 ?x209 ?x209)) ?x816)))
 (let ((?x711 (* (- (/ 1.0 8.0)) (* ?x60 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59 ?x59))))
 (let ((?x636 (* (/ 1.0 8.0) (* ?x67 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59 ?x59))))
 (let ((?x609 (* (- (/ 1.0 16.0)) (* ?x64 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59))))
 (let ((?x533 (* (/ 1.0 16.0) (* ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x59))))
 (let ((?x722 (+ ?x533 (* (/ 1.0 32.0) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x62 ?x59)) (* (- (/ 1.0 16.0)) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x62 ?x59)) ?x609 ?x636 (* (/ 1.0 16.0) (* ?x60 ?x56 ?x56 ?x56 ?x62 ?x62 ?x59)) (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59)) ?x711)))
 (let (($x827 (or (not (= ?x722 0.0)) (not (= ?x465 0.0)))))
 (let ((?x540 (+ (* d a) (* (- 2) (* y b)) (* 2 (* y00 b)) (* (- 1) (* a00 d)))))
 (let (($x543 (= ?x540 0)))
 (let ((?x1569 (* d00 a)))
 (let (($x539 (= (+ (* 2 ?x111) (* (- 1) ?x35) (* (- 2) (* b00 y)) ?x1569) 0)))
 (let (($x600 (and $x539 (= (+ (* d00 b) (* (- 1) (* b00 d))) 0) $x543 $x827)))
 (rewrite (= $x600 $x115))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x829 (exists ((a Int) (b Int) (d Int) (y Int) )(! (let ((?x56 (to_real d)))
 (let ((?x146 (* (/ 1.0 2.0) ?x56)))
 (let ((?x60 (to_real y)))
 (let ((?x550 (+ ?x60 ?x146)))
 (let ((?x62 (to_real b)))
 (let ((?x59 (to_real a)))
 (let ((?x209 (+ ?x59 ?x62)))
 (let ((?x816 (* (- (/ 1.0 8.0)) (* ?x56 ?x56 ?x56 ?x62 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550 ?x550))))
 (let ((?x67 (to_real y00)))
 (let ((?x735 (* (/ 1.0 8.0) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x64 (to_real a00)))
 (let ((?x694 (* (- (/ 1.0 16.0)) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x585 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x209 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x465 (+ ?x585 (* (/ 1.0 32.0) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x62 ?x209)) (* (- (/ 1.0 16.0)) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x62 ?x209)) ?x694 ?x735 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x62 ?x62 ?x209 ?x550)) (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x62 ?x209 ?x209)) ?x816)))
 (let ((?x711 (* (- (/ 1.0 8.0)) (* ?x60 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59 ?x59))))
 (let ((?x636 (* (/ 1.0 8.0) (* ?x67 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59 ?x59))))
 (let ((?x609 (* (- (/ 1.0 16.0)) (* ?x64 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59))))
 (let ((?x533 (* (/ 1.0 16.0) (* ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x59))))
 (let ((?x722 (+ ?x533 (* (/ 1.0 32.0) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x62 ?x59)) (* (- (/ 1.0 16.0)) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x62 ?x59)) ?x609 ?x636 (* (/ 1.0 16.0) (* ?x60 ?x56 ?x56 ?x56 ?x62 ?x62 ?x59)) (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59)) ?x711)))
 (let (($x827 (or (not (= ?x722 0.0)) (not (= ?x465 0.0)))))
 (let ((?x540 (+ (* d a) (* (- 2) (* y b)) (* 2 (* y00 b)) (* (- 1) (* a00 d)))))
 (let (($x543 (= ?x540 0)))
 (let ((?x35 (* a00 d00)))
 (let ((?x111 (* b00 y00)))
 (let ((?x112 (* (- 2) ?x111)))
 (let (($x499 (= (+ ?x112 ?x35 (* 2 (* b00 y)) (* (- 1) (* d00 a))) 0)))
 (and $x499 (= (+ (* (- 1) (* d00 b)) (* b00 d)) 0) $x543 $x827))))))))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x699 (lambda ((a Int) (b Int) (d Int) (y Int) )(let ((?x56 (to_real d)))
 (let ((?x146 (* (/ 1.0 2.0) ?x56)))
 (let ((?x60 (to_real y)))
 (let ((?x550 (+ ?x60 ?x146)))
 (let ((?x62 (to_real b)))
 (let ((?x59 (to_real a)))
 (let ((?x209 (+ ?x59 ?x62)))
 (let ((?x816 (* (- (/ 1.0 8.0)) (* ?x56 ?x56 ?x56 ?x62 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550 ?x550))))
 (let ((?x67 (to_real y00)))
 (let ((?x735 (* (/ 1.0 8.0) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x64 (to_real a00)))
 (let ((?x694 (* (- (/ 1.0 16.0)) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x585 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x209 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x465 (+ ?x585 (* (/ 1.0 32.0) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x62 ?x209)) (* (- (/ 1.0 16.0)) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x62 ?x209)) ?x694 ?x735 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x62 ?x62 ?x209 ?x550)) (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x62 ?x209 ?x209)) ?x816)))
 (let ((?x711 (* (- (/ 1.0 8.0)) (* ?x60 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59 ?x59))))
 (let ((?x636 (* (/ 1.0 8.0) (* ?x67 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59 ?x59))))
 (let ((?x609 (* (- (/ 1.0 16.0)) (* ?x64 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59))))
 (let ((?x533 (* (/ 1.0 16.0) (* ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x59))))
 (let ((?x722 (+ ?x533 (* (/ 1.0 32.0) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x62 ?x59)) (* (- (/ 1.0 16.0)) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x62 ?x59)) ?x609 ?x636 (* (/ 1.0 16.0) (* ?x60 ?x56 ?x56 ?x56 ?x62 ?x62 ?x59)) (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59)) ?x711)))
 (let (($x827 (or (not (= ?x722 0.0)) (not (= ?x465 0.0)))))
 (let ((?x540 (+ (* d a) (* (- 2) (* y b)) (* 2 (* y00 b)) (* (- 1) (* a00 d)))))
 (let (($x543 (= ?x540 0)))
 (let ((?x1569 (* d00 a)))
 (let ((?x567 (+ (* 2 (* b00 y00)) (* (- 1) (* a00 d00)) (* (- 2) (* b00 y)) ?x1569)))
 (let (($x600 (and (= ?x567 0) (= (+ (* d00 b) (* (- 1) (* b00 d))) 0) $x543 $x827)))
 (let ((?x35 (* a00 d00)))
 (let ((?x111 (* b00 y00)))
 (let ((?x112 (* (- 2) ?x111)))
 (let (($x623 (and (= (+ ?x112 ?x35 (* 2 (* b00 y)) (* (- 1) ?x1569)) 0) (= (+ (* (- 1) (* d00 b)) (* b00 d)) 0) $x543 $x827)))
 (rewrite (= $x623 $x600))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((a Int) (b Int) (d Int) (y Int) )(! (let ((?x79 (to_real 0)))
 (let ((?x57 (to_real 2)))
 (let ((?x56 (to_real d)))
 (let ((?x58 (/ ?x56 ?x57)))
 (let ((?x60 (to_real y)))
 (let ((?x83 (+ ?x60 ?x58)))
 (let ((?x62 (to_real b)))
 (let ((?x63 (/ ?x62 ?x57)))
 (let ((?x84 (to_real (+ a b))))
 (let ((?x67 (to_real y00)))
 (let ((?x64 (to_real a00)))
 (let ((?x87 (+ (* ?x84 ?x84 ?x84 ?x84 ?x58 ?x58 ?x58 ?x58 ?x83 ?x83 ?x83) (* ?x84 ?x64 ?x63 ?x58 ?x58 ?x58 ?x58))))
 (let ((?x91 (- (- ?x87 (* ?x57 ?x84 ?x63 ?x63 ?x58 ?x58 ?x58 ?x67)) (* ?x84 ?x84 ?x84 ?x64 ?x58 ?x58 ?x58 ?x58 ?x83 ?x83 ?x83))))
 (let ((?x94 (+ ?x91 (* ?x57 ?x84 ?x84 ?x84 ?x63 ?x58 ?x58 ?x58 ?x83 ?x83 ?x83 ?x67) (* ?x57 ?x84 ?x63 ?x63 ?x58 ?x58 ?x58 ?x83))))
 (let ((?x98 (- (- ?x94 (* ?x84 ?x84 ?x63 ?x58 ?x58 ?x58 ?x58)) (* ?x57 ?x84 ?x84 ?x84 ?x63 ?x58 ?x58 ?x58 ?x83 ?x83 ?x83 ?x83))))
 (let ((?x59 (to_real a)))
 (let ((?x66 (+ (* ?x59 ?x59 ?x59 ?x59 ?x58 ?x58 ?x58 ?x58 ?x60 ?x60 ?x60) (* ?x59 ?x64 ?x63 ?x58 ?x58 ?x58 ?x58))))
 (let ((?x71 (- (- ?x66 (* ?x57 ?x59 ?x63 ?x63 ?x58 ?x58 ?x58 ?x67)) (* ?x59 ?x59 ?x59 ?x64 ?x58 ?x58 ?x58 ?x58 ?x60 ?x60 ?x60))))
 (let ((?x74 (+ ?x71 (* ?x57 ?x59 ?x59 ?x59 ?x63 ?x58 ?x58 ?x58 ?x60 ?x60 ?x60 ?x67) (* ?x57 ?x59 ?x63 ?x63 ?x58 ?x58 ?x58 ?x60))))
 (let ((?x78 (- (- ?x74 (* ?x59 ?x59 ?x63 ?x58 ?x58 ?x58 ?x58)) (* ?x57 ?x59 ?x59 ?x59 ?x63 ?x58 ?x58 ?x58 ?x60 ?x60 ?x60 ?x60))))
 (let ((?x53 (* a00 d)))
 (let ((?x54 (- (+ (- (* a d) (* 2 b y)) (* 2 b y00)) ?x53)))
 (let ((?x38 (* a d00)))
 (let ((?x39 (- (+ (* (- 2) b00 y00) (* a00 d00) (* 2 b00 y)) ?x38)))
 (and (= ?x39 0) (= (+ (* (- 1) b d00) (* b00 d)) 0) (= ?x54 0) (or (not (= ?x78 ?x79)) (not (= ?x98 ?x79)))))))))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x591 (lambda ((a Int) (b Int) (d Int) (y Int) )(let ((?x56 (to_real d)))
 (let ((?x146 (* (/ 1.0 2.0) ?x56)))
 (let ((?x60 (to_real y)))
 (let ((?x550 (+ ?x60 ?x146)))
 (let ((?x62 (to_real b)))
 (let ((?x59 (to_real a)))
 (let ((?x209 (+ ?x59 ?x62)))
 (let ((?x816 (* (- (/ 1.0 8.0)) (* ?x56 ?x56 ?x56 ?x62 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550 ?x550))))
 (let ((?x67 (to_real y00)))
 (let ((?x735 (* (/ 1.0 8.0) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x64 (to_real a00)))
 (let ((?x694 (* (- (/ 1.0 16.0)) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x585 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x56 ?x209 ?x209 ?x209 ?x209 ?x550 ?x550 ?x550))))
 (let ((?x465 (+ ?x585 (* (/ 1.0 32.0) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x62 ?x209)) (* (- (/ 1.0 16.0)) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x62 ?x209)) ?x694 ?x735 (* (/ 1.0 16.0) (* ?x56 ?x56 ?x56 ?x62 ?x62 ?x209 ?x550)) (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x62 ?x209 ?x209)) ?x816)))
 (let ((?x711 (* (- (/ 1.0 8.0)) (* ?x60 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59 ?x59))))
 (let ((?x636 (* (/ 1.0 8.0) (* ?x67 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59 ?x59))))
 (let ((?x609 (* (- (/ 1.0 16.0)) (* ?x64 ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59))))
 (let ((?x533 (* (/ 1.0 16.0) (* ?x60 ?x60 ?x60 ?x56 ?x56 ?x56 ?x56 ?x59 ?x59 ?x59 ?x59))))
 (let ((?x722 (+ ?x533 (* (/ 1.0 32.0) (* ?x64 ?x56 ?x56 ?x56 ?x56 ?x62 ?x59)) (* (- (/ 1.0 16.0)) (* ?x67 ?x56 ?x56 ?x56 ?x62 ?x62 ?x59)) ?x609 ?x636 (* (/ 1.0 16.0) (* ?x60 ?x56 ?x56 ?x56 ?x62 ?x62 ?x59)) (* (- (/ 1.0 32.0)) (* ?x56 ?x56 ?x56 ?x56 ?x62 ?x59 ?x59)) ?x711)))
 (let (($x827 (or (not (= ?x722 0.0)) (not (= ?x465 0.0)))))
 (let ((?x540 (+ (* d a) (* (- 2) (* y b)) (* 2 (* y00 b)) (* (- 1) (* a00 d)))))
 (let (($x543 (= ?x540 0)))
 (let ((?x35 (* a00 d00)))
 (let ((?x111 (* b00 y00)))
 (let ((?x112 (* (- 2) ?x111)))
 (let (($x499 (= (+ ?x112 ?x35 (* 2 (* b00 y)) (* (- 1) (* d00 a))) 0)))
 (let (($x623 (and $x499 (= (+ (* (- 1) (* d00 b)) (* b00 d)) 0) $x543 $x827)))
 (let ((?x79 (to_real 0)))
 (let ((?x57 (to_real 2)))
 (let ((?x58 (/ ?x56 ?x57)))
 (let ((?x83 (+ ?x60 ?x58)))
 (let ((?x63 (/ ?x62 ?x57)))
 (let ((?x84 (to_real (+ a b))))
 (let ((?x87 (+ (* ?x84 ?x84 ?x84 ?x84 ?x58 ?x58 ?x58 ?x58 ?x83 ?x83 ?x83) (* ?x84 ?x64 ?x63 ?x58 ?x58 ?x58 ?x58))))
 (let ((?x91 (- (- ?x87 (* ?x57 ?x84 ?x63 ?x63 ?x58 ?x58 ?x58 ?x67)) (* ?x84 ?x84 ?x84 ?x64 ?x58 ?x58 ?x58 ?x58 ?x83 ?x83 ?x83))))
 (let ((?x94 (+ ?x91 (* ?x57 ?x84 ?x84 ?x84 ?x63 ?x58 ?x58 ?x58 ?x83 ?x83 ?x83 ?x67) (* ?x57 ?x84 ?x63 ?x63 ?x58 ?x58 ?x58 ?x83))))
 (let ((?x98 (- (- ?x94 (* ?x84 ?x84 ?x63 ?x58 ?x58 ?x58 ?x58)) (* ?x57 ?x84 ?x84 ?x84 ?x63 ?x58 ?x58 ?x58 ?x83 ?x83 ?x83 ?x83))))
 (let ((?x66 (+ (* ?x59 ?x59 ?x59 ?x59 ?x58 ?x58 ?x58 ?x58 ?x60 ?x60 ?x60) (* ?x59 ?x64 ?x63 ?x58 ?x58 ?x58 ?x58))))
 (let ((?x71 (- (- ?x66 (* ?x57 ?x59 ?x63 ?x63 ?x58 ?x58 ?x58 ?x67)) (* ?x59 ?x59 ?x59 ?x64 ?x58 ?x58 ?x58 ?x58 ?x60 ?x60 ?x60))))
 (let ((?x74 (+ ?x71 (* ?x57 ?x59 ?x59 ?x59 ?x63 ?x58 ?x58 ?x58 ?x60 ?x60 ?x60 ?x67) (* ?x57 ?x59 ?x63 ?x63 ?x58 ?x58 ?x58 ?x60))))
 (let ((?x78 (- (- ?x74 (* ?x59 ?x59 ?x63 ?x58 ?x58 ?x58 ?x58)) (* ?x57 ?x59 ?x59 ?x59 ?x63 ?x58 ?x58 ?x58 ?x60 ?x60 ?x60 ?x60))))
 (let ((?x53 (* a00 d)))
 (let ((?x54 (- (+ (- (* a d) (* 2 b y)) (* 2 b y00)) ?x53)))
 (let ((?x38 (* a d00)))
 (let (($x41 (= (- (+ (* (- 2) b00 y00) ?x35 (* 2 b00 y)) ?x38) 0)))
 (let (($x102 (and $x41 (= (+ (* (- 1) b d00) (* b00 d)) 0) (= ?x54 0) (or (not (= ?x78 ?x79)) (not (= ?x98 ?x79))))))
 (rewrite (= $x102 $x623)))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x604 (mp (mp @x104 (quant-intro (proof-bind ?x591) (= $x103 $x829)) $x829) (rewrite (= $x829 $x829)) $x829)))
 (let ((@x1620 (mp (mp @x604 (quant-intro (proof-bind ?x699) (= $x829 $x608)) $x608) (quant-intro (proof-bind ?x575) (= $x608 $x549)) $x549)))
 (let ((@x843 (mp (mp~ @x1620 (sk (~ $x549 $x1709)) $x1709) (rewrite (= $x1709 $x836)) $x836)))
 (let ((@x782 (mp (and-elim @x843 $x404) @x744 $x286)))
 (let ((@x733 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x286) $x275)) @x782 $x275)))
 (let (($x160 (<= ?x405 0)))
 (let ((@x740 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x286) $x160)) @x782 $x160)))
 (let ((@x566 (unit-resolution ((_ th-lemma arith) (or $x389 (not $x275) (not $x160))) @x740 @x733 (hypothesis (not $x389)) false)))
 (let (($x263 (= 0.0 ?x1582)))
 (let (($x902 (not $x263)))
 (let ((@x904 (monotonicity (symm (commutativity (= $x263 $x1360)) (= $x1360 $x263)) (= $x476 $x902))))
 (let (($x423 (= 0.0 ?x841)))
 (let (($x266 (<= ?x841 0.0)))
 (let ((@x786 (unit-resolution ((_ th-lemma arith) (or $x266 (not $x275) (not $x160))) @x740 @x733 (hypothesis (not $x266)) false)))
 (let (($x396 (>= ?x841 0.0)))
 (let ((@x788 (unit-resolution ((_ th-lemma arith) (or $x396 (not $x275) (not $x160))) @x740 @x733 (hypothesis (not $x396)) false)))
 (let ((@x793 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x423 (not $x266) (not $x396))) (lemma @x788 $x396) (or $x423 (not $x266)))))
 (let ((@x460 (mp (unit-resolution @x793 (lemma @x786 $x266) $x423) (commutativity (= $x423 $x840)) $x840)))
 (let ((@x574 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x263 (not $x389) $x473)) (mp (unit-resolution (and-elim @x843 $x1333) @x460 $x476) @x904 $x902) (or (not $x389) $x473))))
 (unit-resolution ((_ th-lemma arith) (or $x1901 (not $x275) (not $x160))) @x740 @x733 (unit-resolution @x574 (lemma @x566 $x389) $x473) false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       24
 :arith-eq-adapter                38
 :arith-bound-propagations-cheap  48
 :arith-bound-propagations-lp     7
 :arith-conflicts                 115
 :arith-diseq                     31
 :arith-gcd-calls                 9
 :arith-grobner-calls             5
 :arith-grobner-conflicts         4
 :arith-horner-calls              5
 :arith-horner-cross-nested-forms 10
 :arith-lower                     76
 :arith-make-feasible             79
 :arith-max-columns               87
 :arith-max-rows                  15
 :arith-nla-explanations          93
 :arith-nla-lemmas                114
 :arith-patches                   9
 :arith-patches-success           9
 :arith-propagations              48
 :arith-upper                     82
 :conflicts                       13
 :decisions                       148
 :del-clause                      110
 :final-checks                    35
 :max-memory                      7.69
 :memory                          3.33
 :mk-bool-var                     265
 :mk-clause                       182
 :num-allocs                      252167169
 :num-checks                      1
 :propagations                    93
 :rlimit-count                    10062
 :time                            0.19
 :total-time                      0.20)
