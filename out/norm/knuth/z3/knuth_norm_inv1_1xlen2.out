unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x6095 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 2 (* q!3 d!1)) (* (- 8) r!2) (* (- 4) (* x!0 d!1)) (* 4 (* r!2 d!1)) (* (- 1) (* q!3 d!1 d!1)))))
 (let (($x5198 (<= ?x6095 0)))
 (let (($x1634 (= ?x6095 0)))
 (let ((?x10077 (* d00 d00 q00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 d!1)))
 (let ((?x7749 (* 2 (* d00 d00 q00 x!0 r!2 r!2 q!3 d!1 d!1 d!1))))
 (let ((?x10067 (* d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x8792 (* 48 (* d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 d!1))))
 (let ((?x10007 (* (- 8) (* d00 q00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x9882 (* 192 (* d00 x00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 d!1))))
 (let ((?x2863 (* (- 96) (* d00 x00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 d!1))))
 (let ((?x9877 (* d00 x00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x386 (* (- 24) (* d00 d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x7229 (* 48 (* d00 d00 q00 x!0 r!2 r!2 r!2 r!2 r!2 q!3))))
 (let ((?x6063 (* (- 12) (* d00 d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x9723 (* (- 1) (* d00 d00 q00 x!0 x!0 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x1118 (* 2 r!2)))
 (let ((?x8306 (* (- 1) x!0)))
 (let ((?x2294 (+ ?x8306 ?x1118 q!3)))
 (let ((?x8345 (+ 2 d!1)))
 (let ((?x9210 (* ?x8345 ?x8345 ?x8345 ?x8345 ?x2294 ?x2294 ?x2294 r!2 r!2 r!2 q!3 q!3)))
 (let ((?x9191 (* 96 (* r00 d00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 d!1))))
 (let ((?x9201 (* r00 d00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x9196 (* 16 (* r00 d00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1))))
 (let ((?x9182 (* 48 (* r00 d00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 d!1))))
 (let ((?x9192 (* r00 d00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x3347 (* 128 (* r00 d00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x9181 (* r00 d00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x9164 (* r00 d00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x9153 (* r00 d00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x8274 (* (- 192) (* r00 d00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x9021 (* d00 q00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x8958 (* d00 q00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x4088 (* (- 4) (* d00 d00 q00 r!2 r!2 r!2 q!3 d!1 d!1 d!1))))
 (let ((?x8909 (* (- 48) (* d00 x00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 d!1))))
 (let ((?x8821 (* d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x8779 (* d00 d00 q00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 d!1)))
 (let ((?x2659 (* 48 (* d00 x00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 d!1))))
 (let ((?x7199 (* 96 (* r00 d00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x8056 (* d00 d00 q00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x5389 (* 16 (* d00 x00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x8040 (* d00 q00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x8030 (* d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x7912 (* d00 x00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x7857 (* r00 d00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x7850 (* r00 d00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x7859 (* 192 (* r00 d00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 d!1))))
 (let ((?x8084 (* 4 (* ?x8345 ?x8345 ?x8345 ?x2294 ?x2294 ?x2294 r!2 r!2 r!2 r!2 q!3))))
 (let ((?x7754 (* d00 d00 q00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x7716 (* d00 x00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x7637 (* d00 d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x2888 (* 24 (* d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 d!1))))
 (let ((?x9015 (* 64 (* d00 q00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x7543 (* d00 x00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x7533 (* d00 d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 d!1)))
 (let ((?x7524 (* d00 d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x7389 (* d00 d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1)))
 (let ((?x7387 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x7355 (* d00 d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 d!1)))
 (let ((?x8910 (* (- 2) (* ?x8345 ?x8345 ?x8345 ?x2294 ?x2294 ?x2294 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x3515 (* 12 (* d00 d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 q!3))))
 (let ((?x6816 (* d00 x00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x992 (* (- 16) (* r00 d00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x6692 (* d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x6685 (* 48 (* d00 q00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x6670 (* d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x6456 (* r00 d00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x6398 (* d00 d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x2285 (* 4 (* d00 d00 q00 x!0 r!2 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x8206 (* 4 (* d00 d00 q00 x!0 x!0 x!0 r!2 r!2 r!2 q!3))))
 (let ((?x7240 (* (- 24) (* d00 d00 q00 x!0 x!0 r!2 r!2 r!2 r!2 q!3))))
 (let ((?x8908 (* (- 128) (* d00 x00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x6147 (* d00 d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 d!1)))
 (let ((?x6054 (* d00 x00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x2685 (* (- 16) (* d00 x00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1))))
 (let ((?x5845 (* d00 x00 r!2 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x9610 (* (- 96) (* d00 x00 x!0 x!0 r!2 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x5411 (* d00 d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x5406 (* d00 d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 d!1)))
 (let ((?x5325 (* r00 d00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x5221 (* r00 d00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x6836 (* (- 4) (* d00 d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 q!3))))
 (let ((?x3914 (* (- 48) (* r00 d00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 d!1))))
 (let ((?x4929 (* d00 d00 q00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x3884 (* (- 48) (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x9875 (* (- 4) (* ?x8345 ?x8345 ?x8345 ?x2294 ?x2294 ?x2294 ?x2294 r!2 r!2 r!2 q!3))))
 (let ((?x2410 (* (- 192) (* d00 x00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 d!1))))
 (let ((?x3913 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x4076 (* 192 (* d00 x00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x1884 (* (- 192) (* r00 d00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 d!1))))
 (let ((?x3509 (* d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x3484 (* d00 d00 q00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 d!1)))
 (let ((?x8659 (* (- 96) (* d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 q!3 d!1))))
 (let ((?x2972 (* d00 x00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1 d!1)))
 (let ((?x2854 (* d00 x00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x2483 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 d!1)))
 (let ((?x6100 (* 96 (* d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 d!1))))
 (let ((?x6065 (* (- 4) (* d00 d00 q00 r!2 r!2 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x2064 (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 q!3 d!1)))
 (let ((?x2063 (* d00 q00 r!2 r!2 r!2 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x10064 (* (- 96) (* d00 q00 x!0 r!2 r!2 r!2 r!2 r!2 q!3 d!1))))
 (let ((?x4995 (* (- 32) (* d00 d00 q00 r!2 r!2 r!2 r!2 r!2 r!2 q!3))))
 (let ((?x1721 (* d00 d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 q!3 d!1 d!1)))
 (let ((?x1713 (* d00 x00 x!0 x!0 x!0 r!2 r!2 r!2 q!3 d!1 d!1)))
 (let ((?x2694 (* 48 (* d00 d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x4056 (* 8 (* d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 q!3 d!1))))
 (let ((?x379 (* (- 24) (* d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 q!3 d!1))))
 (let ((?x383 (* (- 8) (* r00 ?x8345 ?x8345 ?x2294 ?x2294 ?x2294 r!2 r!2 r!2 q!3))))
 (let ((?x681 (* (- 1) (* d00 d00 q00 r!2 r!2 q!3 q!3 d!1 d!1 d!1))))
 (let ((?x6146 (+ (* 12 (* d00 d00 q00 x!0 r!2 r!2 q!3 d!1 d!1)) (* 8 (* d00 q00 r!2 r!2 r!2 r!2 d!1 d!1 d!1)) (* (- 32) (* r00 r!2 r!2 r!2 q!3 d!1 d!1 d!1)) ?x681 (* (- 48) (* r00 r!2 r!2 q!3 q!3 d!1 d!1)) ?x383 (* 192 (* r00 x!0 r!2 r!2 r!2 d!1 d!1)) (* 16 (* d00 d00 q00 x!0 r!2 r!2 q!3)) (* (- 64) (* r00 x!0 x!0 r!2 r!2)) (* (- 384) (* r00 r!2 r!2 r!2 r!2 d!1)) ?x379 (* 48 (* d00 x00 x!0 r!2 r!2 q!3 d!1 d!1)) (* (- 32) (* d00 d00 q00 r!2 r!2 r!2 r!2)) (* 48 (* d00 d00 q00 x!0 r!2 r!2 r!2 d!1)) (* (- 6) (* d00 d00 q00 r!2 r!2 q!3 q!3 d!1 d!1)) (* 48 (* d00 q00 r!2 r!2 r!2 r!2 q!3 q!3 q!3)) ?x4056 ?x2694 (* 384 (* r00 x!0 r!2 r!2 r!2 d!1)) (* 192 (* d00 x00 x!0 r!2 r!2 r!2 d!1)) (* (- 48) (* d00 q00 x!0 r!2 r!2 r!2 d!1 d!1)) (* 4 ?x1713) (* (- 4) (* d00 x00 r!2 r!2 q!3 q!3 d!1 d!1 d!1)) (* (- 3) ?x1721) ?x4995 ?x10064 (* 16 ?x2063) (* (- 48) ?x2064) ?x6065 ?x6100 (* (- 8) (* r00 r!2 r!2 q!3 q!3 d!1 d!1 d!1)) (* 2 (* d00 q00 r!2 r!2 q!3 q!3 d!1 d!1 d!1)) (* 24 (* d00 q00 r!2 r!2 q!3 q!3 d!1)) (* (- 24) (* d00 q00 x!0 r!2 r!2 q!3 d!1 d!1)) (* 96 (* d00 q00 r!2 r!2 r!2 q!3 d!1)) (* (- 32) ?x2483) (* 16 (* r00 d00 r!2 r!2 r!2 q!3 d!1 d!1 d!1)) (* 96 (* d00 x00 x!0 r!2 r!2 q!3 d!1)) (* (- 48) ?x2854) (* 32 (* r00 x!0 r!2 r!2 r!2 d!1 d!1 d!1)) (* 48 (* r00 d00 x!0 x!0 r!2 r!2 d!1)) (* (- 6) (* d00 d00 q00 x!0 x!0 r!2 r!2 d!1 d!1)) (* (- 4) ?x2972) (* (- 96) (* r00 r!2 r!2 q!3 q!3 d!1)) (* 48 (* d00 q00 r!2 r!2 r!2 q!3 d!1 d!1)) ?x8659 (* (- 12) (* d00 d00 q00 x!0 x!0 r!2 r!2 d!1)) (* 8 (* d00 q00 r!2 r!2 r!2 q!3 q!3 q!3 q!3)) (* 4 ?x3484) (* 2 ?x3509) (* (- 8) (* d00 q00 x!0 x!0 x!0 r!2 r!2 r!2 q!3)) (* 96 (* d00 q00 r!2 r!2 r!2 r!2 r!2 q!3 q!3)) (* 64 (* d00 q00 r!2 r!2 r!2 r!2 r!2 r!2 q!3)) ?x1884 ?x4076 (* (- 8) ?x3913) ?x2410 (* 96 (* r00 d00 r!2 r!2 r!2 r!2 d!1 d!1)) (* (- 96) (* d00 q00 x!0 r!2 r!2 r!2 d!1)) ?x9875 (* 128 (* r00 x!0 r!2 r!2 q!3)) ?x3884 (* (- 64) (* r00 r!2 r!2 q!3 q!3)) (* (- 48) (* d00 d00 q00 r!2 r!2 r!2 q!3 d!1)) (* 192 (* r00 d00 r!2 r!2 r!2 r!2 d!1)) ?x4929 (* 2 (* d00 q00 x!0 x!0 r!2 r!2 d!1 d!1 d!1)) ?x3914 (* 16 (* r00 d00 r!2 r!2 r!2 q!3 q!3 q!3 q!3)) ?x6836 (* (- 48) (* d00 d00 q00 r!2 r!2 r!2 r!2 d!1)) (* (- 12) ?x5221) (* 8 (* ?x8345 ?x8345 ?x8345 ?x2294 ?x2294 ?x2294 r!2 r!2)) (* 4 ?x5325) (* 12 ?x5406) (* 3 ?x5411) (* 4 (* r00 d00 r!2 r!2 q!3 q!3 d!1 d!1 d!1)) (* (- 32) (* d00 d00 q00 r!2 r!2 r!2 q!3)) ?x9610 (* 48 (* d00 q00 x!0 x!0 r!2 r!2 r!2 r!2 q!3)) (* (- 24) ?x5845) ?x2685 (* (- 32) (* r00 r!2 r!2 r!2 r!2 d!1 d!1 d!1)) (* (- 24) ?x6054) (* 48 (* d00 q00 r!2 r!2 r!2 r!2 d!1 d!1)) (* 48 ?x6147) ?x8908 (* 8 (* d00 x00 x!0 r!2 r!2 q!3 d!1 d!1 d!1)) ?x7240 ?x8206 ?x2285 (* (- 6) ?x6398) (* (- 4) ?x6456) (* 48 (* r00 d00 r!2 r!2 q!3 q!3 d!1)) (* (- 8) (* d00 d00 q00 x!0 x!0 r!2 r!2)) (* (- 24) ?x6670) ?x6685 (* 24 ?x6692) (* 12 (* d00 q00 r!2 r!2 q!3 q!3 d!1 d!1)) (* (- 48) (* r00 d00 x!0 r!2 r!2 q!3 d!1 d!1)) ?x992 (* (- 24) (* d00 x00 x!0 x!0 r!2 r!2 d!1 d!1)) (* 48 ?x6816) (* 32 (* d00 d00 q00 x!0 r!2 r!2 r!2)) ?x3515 ?x8910 (* ?x8345 ?x8345 ?x8345 ?x8345 ?x8345 ?x2294 ?x2294 r!2 r!2 q!3) (* 96 (* r00 d00 r!2 r!2 r!2 q!3 d!1 d!1)) (* 96 (* r00 d00 r!2 r!2 r!2 r!2 q!3 q!3 q!3)) (* (- 96) (* d00 q00 x!0 r!2 r!2 r!2 r!2 r!2 q!3)) (* 64 (* d00 q00 r!2 r!2 r!2 q!3)) (* 16 (* d00 q00 r!2 r!2 q!3 q!3)) (* 32 (* r00 d00 x!0 x!0 r!2 r!2)) (* (- 128) (* r00 d00 x!0 r!2 r!2 r!2)) (* 128 (* r00 d00 r!2 r!2 r!2 r!2)) (* 32 (* r00 d00 r!2 r!2 q!3 q!3)) (* (- 24) ?x7355) (* 128 (* d00 x00 x!0 r!2 r!2 r!2)) (* 4 (* ?x8345 ?x8345 ?x8345 ?x8345 ?x2294 ?x2294 r!2 r!2 r!2)) (* 128 (* r00 d00 r!2 r!2 r!2 q!3)) (* (- 12) ?x7387) (* (- 4) ?x7389) (* 16 (* d00 x00 x!0 x!0 x!0 r!2 r!2 r!2 q!3)) (* (- 8) (* r00 d00 x!0 r!2 r!2 q!3 d!1 d!1 d!1)) (* (- 96) (* d00 x00 x!0 x!0 r!2 r!2 r!2 r!2 q!3)) (* 192 (* d00 x00 x!0 r!2 r!2 r!2 r!2 r!2 q!3)) (* 96 (* r00 d00 x!0 x!0 r!2 r!2 r!2 r!2 q!3)) (* (- 32) (* d00 x00 x!0 x!0 r!2 r!2)) (* (- 128) (* d00 x00 r!2 r!2 r!2 r!2 r!2 r!2 q!3)) (* (- 48) (* d00 x00 x!0 x!0 r!2 r!2 r!2 q!3 q!3)) (* (- 32) (* d00 x00 r!2 r!2 q!3 q!3)) (* 192 (* d00 x00 x!0 r!2 r!2 r!2 r!2 q!3 q!3)) (* 192 (* r00 d00 r!2 r!2 r!2 r!2 r!2 q!3 q!3)) (* (- 192) (* r00 d00 x!0 r!2 r!2 r!2 r!2 q!3 q!3)) (* 16 (* d00 q00 x!0 x!0 r!2 r!2)) (* (- 12) (* d00 d00 q00 r!2 r!2 q!3 q!3 d!1)) (* 12 ?x7524) (* (- 12) ?x7533) (* 48 ?x7543) (* (- 16) (* d00 x00 r!2 r!2 r!2 q!3 q!3 q!3 q!3)) ?x9015 (* 24 (* d00 d00 q00 x!0 r!2 r!2 r!2 d!1 d!1)) ?x2888 (* (- 1) ?x7637) (* (- 12) ?x7716) (* (- 64) (* r00 d00 x!0 r!2 r!2 q!3)) (* 64 (* d00 x00 x!0 r!2 r!2 q!3)) (* (- 128) (* d00 x00 r!2 r!2 r!2 r!2)) (* (- 128) (* d00 x00 r!2 r!2 r!2 q!3)) (* 12 ?x7754) (* (- 16) (* r00 d00 x!0 x!0 x!0 r!2 r!2 r!2 q!3)) (* (- 96) (* d00 q00 x!0 r!2 r!2 r!2 r!2 q!3 q!3)) (* (- 192) (* r00 d00 x!0 r!2 r!2 r!2 r!2 r!2 q!3)) (* 128 (* r00 d00 r!2 r!2 r!2 r!2 r!2 r!2 q!3)) (* 64 (* d00 q00 r!2 r!2 r!2 r!2)) (* (- 64) (* d00 q00 x!0 r!2 r!2 r!2)) (* (- 32) (* d00 q00 x!0 r!2 r!2 q!3)) (* (- 192) (* d00 x00 r!2 r!2 r!2 r!2 r!2 q!3 q!3)) (* 48 (* d00 x00 x!0 r!2 r!2 r!2 q!3 q!3 q!3)) (* (- 96) (* d00 x00 r!2 r!2 r!2 r!2 q!3 q!3 q!3)) (* (- 384) (* r00 r!2 r!2 r!2 q!3 d!1)) ?x8084 ?x7859 (* 48 ?x7850) (* 24 ?x7857) (* (- 2) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x2294 ?x2294 r!2 r!2 q!3)) (* (- 32) ?x7912) (* (- 256) (* r00 r!2 r!2 r!2 r!2)) (* (- 6) ?x8030) (* (- 2) ?x8040) ?x5389 (* (- 6) ?x8056) (* (- 96) (* d00 x00 r!2 r!2 r!2 r!2 d!1 d!1)) (* (- 4) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x2294 ?x2294 ?x2294 r!2 r!2)) (* (- 96) (* d00 x00 r!2 r!2 r!2 q!3 d!1 d!1)) (* 24 (* d00 q00 x!0 x!0 r!2 r!2 d!1)) (* (- 48) (* r00 x!0 x!0 r!2 r!2 d!1 d!1)) (* 24 (* d00 q00 x!0 x!0 r!2 r!2 r!2 q!3 q!3)) ?x7199 (* (- 96) (* r00 x!0 x!0 r!2 r!2 d!1)) (* 12 (* d00 q00 x!0 x!0 r!2 r!2 d!1 d!1)) (* (- 8) (* r00 x!0 x!0 r!2 r!2 d!1 d!1 d!1)) (* (- 16) (* d00 x00 r!2 r!2 r!2 r!2 d!1 d!1 d!1)) (* 96 (* d00 x00 x!0 r!2 r!2 r!2 d!1 d!1)) ?x2659 (* (- 96) (* r00 d00 x!0 r!2 r!2 q!3 d!1)) (* 192 (* r00 d00 r!2 r!2 r!2 q!3 d!1)) (* (- 4) (* d00 q00 x!0 r!2 r!2 q!3 d!1 d!1 d!1)) (* (- 48) (* d00 x00 r!2 r!2 q!3 q!3 d!1)) (* (- 24) (* d00 x00 r!2 r!2 q!3 q!3 d!1 d!1)) (* 48 ?x8779) (* 6 ?x8821) (* 16 (* r00 d00 r!2 r!2 r!2 r!2 d!1 d!1 d!1)) ?x8909 ?x4088 (* (- 96) (* r00 d00 x!0 r!2 r!2 r!2 d!1 d!1)) (* 12 ?x8958) (* (- 24) ?x9021) (* (- 8) (* d00 d00 q00 r!2 r!2 q!3 q!3)) ?x8274 (* (- 24) (* d00 q00 x!0 r!2 r!2 r!2 q!3 q!3 q!3)) (* 48 (* r00 d00 x!0 x!0 r!2 r!2 r!2 q!3 q!3)) (* 96 (* r00 x!0 r!2 r!2 q!3 d!1 d!1)) (* (- 48) (* d00 q00 x!0 r!2 r!2 q!3 d!1)) (* (- 16) (* r00 d00 x!0 r!2 r!2 r!2 d!1 d!1 d!1)) (* 24 ?x9153) (* (- 48) ?x9164) (* 32 ?x9181) ?x3347 (* 12 ?x9192) ?x9182 ?x9196 (* (- 48) ?x9201) ?x9191 (* 16 (* r00 x!0 r!2 r!2 q!3 d!1 d!1 d!1)) (* 256 (* r00 x!0 r!2 r!2 r!2)) ?x9210 (* 8 (* ?x8345 ?x8345 ?x2294 ?x2294 ?x2294 ?x2294 r!2 r!2 r!2 q!3)) (* (- 48) (* r00 d00 x!0 r!2 r!2 r!2 q!3 q!3 q!3)) ?x9723 (* (- 192) (* r00 d00 x!0 r!2 r!2 r!2 d!1)) (* (- 8) (* d00 q00 x!0 r!2 r!2 r!2 d!1 d!1 d!1)) (* (- 192) (* d00 x00 r!2 r!2 r!2 q!3 d!1)) (* 192 (* r00 x!0 r!2 r!2 q!3 d!1)) ?x6063 (* 24 (* r00 d00 r!2 r!2 q!3 q!3 d!1 d!1)) ?x7229 (* 8 (* d00 q00 r!2 r!2 r!2 q!3 d!1 d!1 d!1)) ?x386 (* (- 256) (* r00 r!2 r!2 r!2 q!3)) (* 12 ?x9877) ?x2863 (* 4 (* r00 d00 x!0 x!0 r!2 r!2 d!1 d!1 d!1)) ?x9882 (* 16 (* d00 x00 x!0 r!2 r!2 r!2 d!1 d!1 d!1)) ?x10007 (* (- 4) (* d00 x00 x!0 x!0 r!2 r!2 d!1 d!1 d!1)) ?x8792 (* (- 24) (* d00 d00 q00 r!2 r!2 r!2 r!2 d!1 d!1)) (* (- 192) (* r00 r!2 r!2 r!2 q!3 d!1 d!1)) (* 24 (* r00 d00 x!0 x!0 r!2 r!2 d!1 d!1)) (* 24 (* d00 d00 q00 x!0 r!2 r!2 q!3 d!1)) (* 96 (* d00 q00 r!2 r!2 r!2 r!2 d!1)) (* 12 ?x10067) ?x7749 (* (- 24) ?x10077) (* (- 192) (* r00 r!2 r!2 r!2 r!2 d!1 d!1)) (* (- 48) (* d00 x00 x!0 x!0 r!2 r!2 d!1)) (* (- 16) (* d00 x00 r!2 r!2 r!2 q!3 d!1 d!1 d!1)) (* (- 24) (* d00 d00 q00 r!2 r!2 r!2 q!3 d!1 d!1)) (* (- 192) (* d00 x00 r!2 r!2 r!2 r!2 d!1)))))
 (let (($x5543 (= ?x6146 0)))
 (let (($x9422 (not $x5543)))
 (let ((?x3916 (+ 2 ?x8306 ?x1118 q!3 d!1)))
 (let ((?x2016 (+ 4 q!3)))
 (let ((?x5919 (* 4 (* d00 x00 ?x8345 ?x8345 ?x2016 ?x3916 ?x3916 ?x3916 r!2 r!2 r!2))))
 (let ((?x9202 (* 2 (* ?x8345 ?x8345 ?x8345 ?x2016 ?x2016 ?x3916 ?x3916 ?x3916 r!2 r!2 r!2))))
 (let ((?x647 (* (- 2) (* d00 q00 ?x8345 ?x8345 ?x2016 ?x3916 ?x3916 ?x3916 r!2 r!2 r!2))))
 (let ((?x10071 (* (- 4) (* d00 r00 ?x8345 ?x8345 ?x2016 ?x3916 ?x3916 ?x3916 r!2 r!2 r!2))))
 (let ((?x10076 (* 4 (* ?x8345 ?x8345 ?x8345 ?x2016 ?x3916 ?x3916 ?x3916 ?x3916 r!2 r!2 r!2))))
 (let ((?x724 (* (- 4) (* ?x8345 ?x8345 ?x8345 ?x2016 ?x3916 ?x3916 ?x3916 r!2 r!2 r!2 r!2))))
 (let ((?x4550 (* (- 1) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x2016 ?x2016 ?x3916 ?x3916 ?x3916 r!2 r!2 r!2))))
 (let ((?x1880 (* d00 d00 q00 ?x8345 ?x8345 ?x2016 ?x3916 ?x3916 ?x3916 r!2 r!2 r!2)))
 (let ((?x1977 (+ (* 8 (* r00 ?x8345 ?x8345 ?x8345 ?x3916 ?x3916 r!2 r!2)) ?x1880 ?x4550 (* 4 (* d00 x00 ?x8345 ?x8345 ?x8345 ?x3916 ?x3916 r!2 r!2)) (* 4 (* ?x8345 ?x8345 ?x8345 ?x8345 ?x3916 ?x3916 ?x3916 r!2 r!2)) (* (- 1) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x8345 ?x2016 ?x3916 ?x3916 r!2 r!2)) (* 2 (* ?x8345 ?x8345 ?x8345 ?x8345 ?x2016 ?x3916 ?x3916 r!2 r!2)) (* (- 4) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x3916 ?x3916 r!2 r!2 r!2)) ?x724 ?x10076 (* (- 4) (* d00 r00 ?x8345 ?x8345 ?x8345 ?x3916 ?x3916 r!2 r!2)) ?x10071 (* (- 8) (* ?x8345 ?x8345 ?x8345 ?x3916 ?x3916 ?x3916 r!2 r!2)) (* 8 (* r00 ?x8345 ?x8345 ?x2016 ?x3916 ?x3916 ?x3916 r!2 r!2 r!2)) ?x647 (* (- 8) (* ?x8345 ?x8345 ?x2016 ?x3916 ?x3916 ?x3916 ?x3916 r!2 r!2 r!2)) (* d00 d00 q00 ?x8345 ?x8345 ?x8345 ?x3916 ?x3916 r!2 r!2) ?x9202 ?x5919 (* (- 2) (* d00 q00 ?x8345 ?x8345 ?x8345 ?x3916 ?x3916 r!2 r!2)))))
 (let (($x9184 (= ?x1977 0)))
 (let ((?x8369 (* (- 2) d!1)))
 (let ((?x8176 (+ (- 4) ?x8306 ?x1118 q!3 ?x8369)))
 (let ((?x8783 (+ (- 8) q!3)))
 (let ((?x8903 (* 4 (* ?x8783 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 ?x8176 ?x8176 r!2 r!2 r!2))))
 (let ((?x9214 (* d00 d00 q00 ?x8783 ?x8345 ?x8345 ?x8176 ?x8176 ?x8176 r!2 r!2 r!2)))
 (let ((?x7714 (* (- 4) (* ?x8783 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 ?x8176 r!2 r!2 r!2 r!2))))
 (let ((?x4003 (* (- 1) (* ?x8783 ?x8783 ?x8345 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 ?x8176 r!2 r!2 r!2))))
 (let ((?x5199 (* (- 4) (* d00 r00 ?x8783 ?x8345 ?x8345 ?x8176 ?x8176 ?x8176 r!2 r!2 r!2))))
 (let ((?x3866 (* 2 (* ?x8783 ?x8783 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 ?x8176 r!2 r!2 r!2))))
 (let ((?x671 (* (- 2) (* d00 q00 ?x8783 ?x8345 ?x8345 ?x8176 ?x8176 ?x8176 r!2 r!2 r!2))))
 (let ((?x372 (* 4 (* d00 x00 ?x8783 ?x8345 ?x8345 ?x8176 ?x8176 ?x8176 r!2 r!2 r!2))))
 (let ((?x3485 (+ (* d00 d00 q00 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 r!2 r!2) (* 4 (* ?x8345 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 ?x8176 r!2 r!2)) ?x372 ?x671 (* 8 (* r00 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 r!2 r!2)) ?x3866 (* (- 2) (* d00 q00 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 r!2 r!2)) (* 2 (* ?x8783 ?x8345 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 r!2 r!2)) (* 4 (* d00 x00 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 r!2 r!2)) (* 8 (* r00 ?x8783 ?x8345 ?x8345 ?x8176 ?x8176 ?x8176 r!2 r!2 r!2)) ?x5199 (* (- 8) (* ?x8783 ?x8345 ?x8345 ?x8176 ?x8176 ?x8176 ?x8176 r!2 r!2 r!2)) ?x4003 (* (- 8) (* ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 ?x8176 r!2 r!2)) (* (- 4) (* d00 r00 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 r!2 r!2)) ?x7714 (* (- 4) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 r!2 r!2 r!2)) (* (- 1) (* ?x8783 ?x8345 ?x8345 ?x8345 ?x8345 ?x8345 ?x8176 ?x8176 r!2 r!2)) ?x9214 ?x8903)))
 (let (($x5329 (= ?x3485 0)))
 (let ((?x2406 (* (- 1) d!1)))
 (let ((?x8029 (+ (- 2) ?x8306 ?x1118 q!3 ?x2406)))
 (let ((?x2422 (+ (- 4) q!3)))
 (let ((?x7188 (* 2 (* d00 q00 ?x2422 ?x8345 ?x8345 ?x8029 ?x8029 ?x8029 r!2 r!2 r!2))))
 (let ((?x2893 (* 4 (* d00 r00 ?x2422 ?x8345 ?x8345 ?x8029 ?x8029 ?x8029 r!2 r!2 r!2))))
 (let ((?x2852 (* (- 4) (* d00 x00 ?x2422 ?x8345 ?x8345 ?x8029 ?x8029 ?x8029 r!2 r!2 r!2))))
 (let ((?x4030 (* (- 4) (* ?x2422 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 ?x8029 ?x8029 r!2 r!2 r!2))))
 (let ((?x9878 (* 4 (* ?x2422 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 ?x8029 r!2 r!2 r!2 r!2))))
 (let ((?x4024 (* (- 1) (* d00 d00 q00 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 r!2 r!2))))
 (let ((?x7093 (* (- 2) (* ?x2422 ?x2422 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 ?x8029 r!2 r!2 r!2))))
 (let ((?x4987 (* d00 d00 q00 ?x2422 ?x8345 ?x8345 ?x8029 ?x8029 ?x8029 r!2 r!2 r!2)))
 (let ((?x7675 (+ (* 8 (* ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 ?x8029 r!2 r!2)) (* 4 (* ?x8345 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 r!2 r!2 r!2)) (* (- 1) ?x4987) ?x7093 (* (- 4) (* d00 x00 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 r!2 r!2)) (* (- 8) (* r00 ?x2422 ?x8345 ?x8345 ?x8029 ?x8029 ?x8029 r!2 r!2 r!2)) (* ?x2422 ?x8345 ?x8345 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 r!2 r!2) ?x4024 (* 4 (* d00 r00 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 r!2 r!2)) (* ?x2422 ?x2422 ?x8345 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 ?x8029 r!2 r!2 r!2) ?x9878 (* 8 (* ?x2422 ?x8345 ?x8345 ?x8029 ?x8029 ?x8029 ?x8029 r!2 r!2 r!2)) (* (- 2) (* ?x2422 ?x8345 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 r!2 r!2)) ?x4030 (* 2 (* d00 q00 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 r!2 r!2)) ?x2852 (* (- 4) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 ?x8029 r!2 r!2)) ?x2893 (* (- 8) (* r00 ?x8345 ?x8345 ?x8345 ?x8029 ?x8029 r!2 r!2)) ?x7188)))
 (let (($x8073 (= ?x7675 0)))
 (let (($x3904 (not $x8073)))
 (let (($x2756 (or $x3904 (not $x5329) (not $x9184) $x9422)))
 (let (($x8131 (and $x1634 $x2756)))
 (let ((?x6641 (+ 2 q!3 ?x1118 ?x8306 d!1)))
 (let ((?x9912 (* (- 4) (* d00 x00 ?x8345 ?x8345 ?x2016 ?x6641 ?x6641 ?x6641 r!2 r!2 r!2))))
 (let ((?x9749 (* (- 1) (* d00 d00 q00 ?x8345 ?x8345 ?x8345 ?x6641 ?x6641 r!2 r!2))))
 (let ((?x6145 (* 4 (* d00 r00 ?x8345 ?x8345 ?x2016 ?x6641 ?x6641 ?x6641 r!2 r!2 r!2))))
 (let ((?x6351 (* 2 (* d00 q00 ?x8345 ?x8345 ?x2016 ?x6641 ?x6641 ?x6641 r!2 r!2 r!2))))
 (let ((?x6372 (* d00 d00 q00 ?x8345 ?x8345 ?x2016 ?x6641 ?x6641 ?x6641 r!2 r!2 r!2)))
 (let ((?x6606 (* (- 4) (* ?x8345 ?x8345 ?x8345 ?x2016 ?x6641 ?x6641 ?x6641 ?x6641 r!2 r!2 r!2))))
 (let ((?x6418 (* (- 2) (* ?x8345 ?x8345 ?x8345 ?x2016 ?x2016 ?x6641 ?x6641 ?x6641 r!2 r!2 r!2))))
 (let ((?x2366 (* 4 (* ?x8345 ?x8345 ?x8345 ?x2016 ?x6641 ?x6641 ?x6641 r!2 r!2 r!2 r!2))))
 (let ((?x1479 (+ (* ?x8345 ?x8345 ?x8345 ?x8345 ?x2016 ?x2016 ?x6641 ?x6641 ?x6641 r!2 r!2 r!2) (* (- 4) (* d00 x00 ?x8345 ?x8345 ?x8345 ?x6641 ?x6641 r!2 r!2)) (* 8 (* ?x8345 ?x8345 ?x2016 ?x6641 ?x6641 ?x6641 ?x6641 r!2 r!2 r!2)) ?x2366 (* 8 (* ?x8345 ?x8345 ?x8345 ?x6641 ?x6641 ?x6641 r!2 r!2)) ?x6418 (* 4 (* ?x8345 ?x8345 ?x8345 ?x8345 ?x6641 ?x6641 r!2 r!2 r!2)) (* (- 2) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x2016 ?x6641 ?x6641 r!2 r!2)) (* 4 (* d00 r00 ?x8345 ?x8345 ?x8345 ?x6641 ?x6641 r!2 r!2)) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x8345 ?x2016 ?x6641 ?x6641 r!2 r!2) (* (- 8) (* r00 ?x8345 ?x8345 ?x8345 ?x6641 ?x6641 r!2 r!2)) (* (- 8) (* r00 ?x8345 ?x8345 ?x2016 ?x6641 ?x6641 ?x6641 r!2 r!2 r!2)) ?x6606 (* (- 1) ?x6372) ?x6351 (* (- 4) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x6641 ?x6641 ?x6641 r!2 r!2)) ?x6145 ?x9749 (* 2 (* d00 q00 ?x8345 ?x8345 ?x8345 ?x6641 ?x6641 r!2 r!2)) ?x9912)))
 (let ((?x2423 (+ (- 2) q!3 ?x1118 ?x8306 ?x2406)))
 (let ((?x2394 (* (- 4) (* d00 x00 ?x2422 ?x8345 ?x8345 ?x2423 ?x2423 ?x2423 r!2 r!2 r!2))))
 (let ((?x2402 (* d00 d00 q00 ?x2422 ?x8345 ?x8345 ?x2423 ?x2423 ?x2423 r!2 r!2 r!2)))
 (let ((?x2450 (* (- 4) (* ?x2422 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 ?x2423 ?x2423 r!2 r!2 r!2))))
 (let ((?x2436 (* (- 1) (* d00 d00 q00 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 r!2 r!2))))
 (let ((?x2434 (* 4 (* ?x2422 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 ?x2423 r!2 r!2 r!2 r!2))))
 (let ((?x2392 (* (- 2) (* ?x2422 ?x2422 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 ?x2423 r!2 r!2 r!2))))
 (let ((?x2396 (* 2 (* d00 q00 ?x2422 ?x8345 ?x8345 ?x2423 ?x2423 ?x2423 r!2 r!2 r!2))))
 (let ((?x2397 (* 4 (* d00 r00 ?x2422 ?x8345 ?x8345 ?x2423 ?x2423 ?x2423 r!2 r!2 r!2))))
 (let ((?x6639 (+ (* ?x2422 ?x2422 ?x8345 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 ?x2423 r!2 r!2 r!2) (* (- 4) (* d00 x00 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 r!2 r!2)) ?x2397 ?x2396 (* 8 (* ?x2422 ?x8345 ?x8345 ?x2423 ?x2423 ?x2423 ?x2423 r!2 r!2 r!2)) ?x2392 (* ?x2422 ?x8345 ?x8345 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 r!2 r!2) (* 4 (* ?x8345 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 r!2 r!2 r!2)) ?x2434 (* (- 8) (* r00 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 r!2 r!2)) (* 8 (* ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 ?x2423 r!2 r!2)) (* (- 2) (* ?x2422 ?x8345 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 r!2 r!2)) (* 2 (* d00 q00 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 r!2 r!2)) (* (- 8) (* r00 ?x2422 ?x8345 ?x8345 ?x2423 ?x2423 ?x2423 r!2 r!2 r!2)) ?x2436 ?x2450 (* (- 1) ?x2402) (* 4 (* d00 r00 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 r!2 r!2)) (* (- 4) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x2423 ?x2423 ?x2423 r!2 r!2)) ?x2394)))
 (let ((?x8396 (+ (- 4) q!3 ?x1118 ?x8306 ?x8369)))
 (let ((?x3633 (* d00 d00 q00 ?x8783 ?x8345 ?x8345 ?x8396 ?x8396 ?x8396 r!2 r!2 r!2)))
 (let ((?x3900 (* (- 4) (* ?x8783 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 ?x8396 ?x8396 r!2 r!2 r!2))))
 (let ((?x5314 (* 2 (* d00 q00 ?x8783 ?x8345 ?x8345 ?x8396 ?x8396 ?x8396 r!2 r!2 r!2))))
 (let ((?x5307 (* 4 (* d00 r00 ?x8783 ?x8345 ?x8345 ?x8396 ?x8396 ?x8396 r!2 r!2 r!2))))
 (let ((?x8864 (* (- 1) (* d00 d00 q00 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 r!2 r!2))))
 (let ((?x8413 (* (- 2) (* ?x8783 ?x8783 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 ?x8396 r!2 r!2 r!2))))
 (let ((?x8791 (* (- 4) (* d00 x00 ?x8783 ?x8345 ?x8345 ?x8396 ?x8396 ?x8396 r!2 r!2 r!2))))
 (let ((?x8788 (* 4 (* ?x8783 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 ?x8396 r!2 r!2 r!2 r!2))))
 (let ((?x2403 (+ (* 8 (* ?x8783 ?x8345 ?x8345 ?x8396 ?x8396 ?x8396 ?x8396 r!2 r!2 r!2)) (* 8 (* ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 ?x8396 r!2 r!2)) ?x8788 (* (- 2) (* ?x8783 ?x8345 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 r!2 r!2)) ?x8791 (* 2 (* d00 q00 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 r!2 r!2)) (* (- 4) (* d00 x00 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 r!2 r!2)) ?x8413 (* ?x8783 ?x8783 ?x8345 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 ?x8396 r!2 r!2 r!2) (* (- 8) (* r00 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 r!2 r!2)) (* ?x8783 ?x8345 ?x8345 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 r!2 r!2) (* (- 8) (* r00 ?x8783 ?x8345 ?x8345 ?x8396 ?x8396 ?x8396 r!2 r!2 r!2)) (* (- 4) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 ?x8396 r!2 r!2)) ?x8864 ?x5307 (* 4 (* d00 r00 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 r!2 r!2)) ?x5314 ?x3900 (* (- 1) ?x3633) (* 4 (* ?x8345 ?x8345 ?x8345 ?x8345 ?x8396 ?x8396 r!2 r!2 r!2)))))
 (let ((?x1618 (+ q!3 ?x1118 ?x8306)))
 (let ((?x4163 (* 4 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 d00 q00))))
 (let ((?x9562 (* (- 24) (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 d00 q00))))
 (let ((?x8515 (* 48 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 d00 q00))))
 (let ((?x2487 (* (- 32) (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 d00 q00))))
 (let ((?x7772 (* (- 24) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00))))
 (let ((?x5851 (* (- 24) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 q00 d!1))))
 (let ((?x5811 (* (- 48) (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00))))
 (let ((?x5594 (* 48 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00))))
 (let ((?x6216 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x897 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1)))
 (let ((?x5013 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x9479 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1)))
 (let ((?x1025 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x7157 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x1034 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00 d!1)))
 (let ((?x1027 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x6092 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x1045 (* 4 (* ?x8345 ?x8345 ?x8345 ?x1618 ?x1618 ?x1618 r!2 r!2 r!2 r!2 q!3))))
 (let ((?x6388 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00 d!1)))
 (let ((?x8499 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1)))
 (let ((?x9535 (* 2 (* q!3 r!2 r!2 x!0 d00 d00 q00 d!1 d!1 d!1))))
 (let ((?x3828 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1)))
 (let ((?x7759 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1)))
 (let ((?x2459 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00 d!1)))
 (let ((?x331 (* (- 4) (* ?x8345 ?x8345 ?x8345 ?x1618 ?x1618 ?x1618 ?x1618 r!2 r!2 r!2 q!3))))
 (let ((?x4244 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1 d!1)))
 (let ((?x4243 (* 96 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1))))
 (let ((?x3447 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1)))
 (let ((?x3496 (* (- 192) (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1))))
 (let ((?x5288 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1)))
 (let ((?x3805 (* 128 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1))))
 (let ((?x4170 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1 d!1)))
 (let ((?x4559 (* 48 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1))))
 (let ((?x8836 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1)))
 (let ((?x2276 (* 96 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r00 d00 d!1))))
 (let ((?x7797 (* 16 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r00 d00 d!1))))
 (let ((?x8896 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r00 d00 d!1 d!1)))
 (let ((?x703 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 d00 q00 d!1)))
 (let ((?x6578 (* 192 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1))))
 (let ((?x6551 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1)))
 (let ((?x6546 (* (- 48) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 r00 d00 d!1))))
 (let ((?x5512 (* (- 192) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1))))
 (let ((?x6171 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1)))
 (let ((?x8100 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1)))
 (let ((?x8099 (* 192 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1))))
 (let ((?x8092 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x666 (* ?x8345 ?x8345 ?x8345 ?x8345 ?x1618 ?x1618 ?x1618 r!2 r!2 r!2 q!3 q!3)))
 (let ((?x4261 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 r00 d00 d!1 d!1)))
 (let ((?x9005 (* (- 16) (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 r00 d00 d!1))))
 (let ((?x1308 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1)))
 (let ((?x8449 (* (- 2) (* ?x8345 ?x8345 ?x8345 ?x1618 ?x1618 ?x1618 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x8317 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1)))
 (let ((?x1097 (* (- 128) (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1))))
 (let ((?x8307 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1 d!1)))
 (let ((?x1997 (* (- 48) (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1))))
 (let ((?x5632 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x1417 (* (- 192) (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1))))
 (let ((?x7537 (* (- 1) (* q!3 q!3 r!2 r!2 d00 d00 q00 d!1 d!1 d!1))))
 (let ((?x8992 (* (- 16) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 x00 d!1))))
 (let ((?x3823 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1)))
 (let ((?x3892 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1)))
 (let ((?x1088 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1)))
 (let ((?x9711 (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 x00 d!1))))
 (let ((?x7499 (* (- 96) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 x00 d!1))))
 (let ((?x9287 (* 192 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1))))
 (let ((?x8311 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1)))
 (let ((?x9552 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x5732 (* (- 8) (* r00 ?x8345 ?x8345 ?x1618 ?x1618 ?x1618 r!2 r!2 r!2 q!3))))
 (let ((?x9253 (* 4 (* r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1 d!1))))
 (let ((?x9258 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1)))
 (let ((?x3460 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1)))
 (let ((?x4890 (* (- 96) (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1))))
 (let ((?x6075 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1)))
 (let ((?x8607 (* 64 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1))))
 (let ((?x6186 (* 24 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1))))
 (let ((?x3941 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1 d!1)))
 (let ((?x9221 (* 48 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1))))
 (let ((?x9227 (* (- 4) (* q!3 r!2 r!2 r!2 d00 d00 q00 d!1 d!1 d!1))))
 (let ((?x4901 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1 d!1)))
 (let ((?x9251 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1)))
 (let ((?x9081 (* (- 96) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1))))
 (let ((?x9291 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1)))
 (let ((?x4898 (* 96 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1))))
 (let ((?x4841 (* (- 4) (* r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1 d!1))))
 (let ((?x6237 (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 q00 d!1))))
 (let ((?x4552 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 x00 d!1 d!1)))
 (let ((?x4836 (* (- 8) (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 q00 d!1))))
 (let ((?x4183 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 q00 d!1 d!1)))
 (let ((?x9310 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 x00 d!1 d!1)))
 (let ((?x9275 (* 16 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 x00 d!1))))
 (let ((?x8328 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x1741 (* (- 96) (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1))))
 (let ((?x8329 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1 d!1)))
 (let ((?x5075 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 q00 d!1 d!1)))
 (let ((?x5353 (* (- 12) (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00))))
 (let ((?x9085 (* 8 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 q00 d!1))))
 (let ((?x7868 (* 12 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00))))
 (let ((?x5350 (* (- 4) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00))))
 (let ((?x1307 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1)))
 (let ((?x9248 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1)))
 (let ((?x8334 (* (- 1) (* r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1 d!1))))
 (let ((?x8755 (+ (* 96 (* q!3 r!2 r!2 x!0 r00 d!1 d!1)) (* (- 192) (* r!2 r!2 r!2 x!0 r00 d00 d!1)) ?x8334 (* 8 (* r!2 r!2 r!2 r!2 d00 q00 d!1 d!1 d!1)) (* 384 (* r!2 r!2 r!2 x!0 r00 d!1)) (* 48 ?x9248) (* (- 6) ?x1307) (* (- 48) (* r!2 r!2 r!2 x!0 d00 q00 d!1 d!1)) (* (- 96) (* r!2 r!2 r!2 x!0 d00 q00 d!1)) (* 24 (* r!2 r!2 x!0 x!0 d00 q00 d!1)) (* (- 8) (* r!2 r!2 r!2 x!0 d00 q00 d!1 d!1 d!1)) (* 48 (* r!2 r!2 r!2 r!2 d00 q00 d!1 d!1)) (* 12 (* r!2 r!2 x!0 x!0 d00 q00 d!1 d!1)) (* 2 (* r!2 r!2 x!0 x!0 d00 q00 d!1 d!1 d!1)) ?x5350 (* (- 96) (* r!2 r!2 r!2 x!0 r00 d00 d!1 d!1)) ?x7868 ?x9085 ?x5353 (* 2 ?x5075) (* (- 24) ?x8329) ?x1741 (* 192 (* q!3 r!2 r!2 x!0 r00 d!1)) (* (- 8) ?x8328) ?x9275 (* 4 ?x9310) (* (- 2) ?x4183) (* (- 48) (* r!2 r!2 r!2 r!2 d00 d00 q00 d!1)) ?x4836 (* (- 4) (* r!2 r!2 x!0 x!0 d00 x00 d!1 d!1 d!1)) (* (- 4) ?x4552) ?x6237 (* (- 192) (* q!3 r!2 r!2 r!2 r00 d!1 d!1)) (* (- 24) (* r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)) (* 192 (* r!2 r!2 r!2 r!2 r00 d00 d!1)) ?x4841 ?x4898 (* 24 ?x9291) ?x9081 (* (- 24) ?x9251) (* 6 ?x4901) ?x9227 ?x9221 (* 12 ?x3941) (* 96 (* r!2 r!2 r!2 r!2 r00 d00 d!1 d!1)) (* 16 (* r!2 r!2 r!2 r!2 r00 d00 d!1 d!1 d!1)) ?x6186 (* (- 96) (* q!3 q!3 r!2 r!2 r00 d!1)) (* 24 (* r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)) ?x8607 (* 16 ?x6075) ?x4890 (* (- 24) ?x3460) (* 96 (* r!2 r!2 r!2 r!2 d00 q00 d!1)) (* 12 ?x9258) (* 24 (* q!3 r!2 r!2 x!0 d00 d00 q00 d!1)) (* (- 24) (* q!3 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)) (* (- 12) (* r!2 r!2 x!0 x!0 d00 d00 q00 d!1)) ?x9253 (* (- 12) (* q!3 q!3 r!2 r!2 d00 d00 q00 d!1)) (* 48 (* r!2 r!2 r!2 x!0 d00 d00 q00 d!1)) (* (- 6) (* q!3 q!3 r!2 r!2 d00 d00 q00 d!1 d!1)) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x8345 ?x1618 ?x1618 r!2 r!2 q!3) ?x5732 (* 12 (* q!3 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)) (* 48 (* q!3 r!2 r!2 x!0 d00 x00 d!1 d!1)) (* 8 (* q!3 r!2 r!2 x!0 d00 x00 d!1 d!1 d!1)) (* (- 192) (* r!2 r!2 r!2 r!2 d00 x00 d!1)) (* 16 (* r!2 r!2 r!2 x!0 d00 x00 d!1 d!1 d!1)) (* (- 48) (* r!2 r!2 x!0 x!0 d00 x00 d!1)) (* (- 16) (* q!3 r!2 r!2 r!2 d00 x00 d!1 d!1 d!1)) (* 96 (* q!3 r!2 r!2 x!0 d00 x00 d!1)) (* (- 48) (* q!3 q!3 r!2 r!2 r00 d!1 d!1)) (* (- 6) ?x9552) (* (- 96) (* r!2 r!2 r!2 r!2 d00 x00 d!1 d!1)) (* (- 16) (* r!2 r!2 r!2 r!2 d00 x00 d!1 d!1 d!1)) (* 192 (* r!2 r!2 r!2 x!0 d00 x00 d!1)) (* 96 (* r!2 r!2 r!2 x!0 d00 x00 d!1 d!1)) (* (- 24) (* r!2 r!2 x!0 x!0 d00 x00 d!1 d!1)) (* 32 (* r!2 r!2 r!2 x!0 d00 d00 q00)) (* 48 ?x8311) ?x9287 ?x7499 ?x9711 (* 12 ?x1088) (* (- 48) ?x3892) (* (- 24) ?x3823) ?x8992 ?x7537 (* (- 32) (* q!3 r!2 r!2 r!2 r00 d!1 d!1 d!1)) (* (- 48) (* q!3 r!2 r!2 r!2 d00 d00 q00 d!1)) (* (- 384) (* r!2 r!2 r!2 r!2 r00 d!1)) ?x1417 (* 12 ?x5632) ?x1997 (* (- 12) ?x8307) ?x1097 (* (- 32) ?x8317) ?x8449 (* 96 (* q!3 r!2 r!2 r!2 r00 d00 d!1 d!1)) (* (- 8) (* q!3 q!3 r!2 r!2 d00 d00 q00)) (* 24 (* q!3 q!3 r!2 r!2 r00 d00 d!1 d!1)) (* 4 (* q!3 q!3 r!2 r!2 r00 d00 d!1 d!1 d!1)) (* 192 (* q!3 r!2 r!2 r!2 r00 d00 d!1)) (* (- 96) (* q!3 r!2 r!2 x!0 r00 d00 d!1)) (* 16 (* q!3 r!2 r!2 r!2 r00 d00 d!1 d!1 d!1)) (* 48 (* q!3 q!3 r!2 r!2 r00 d00 d!1)) (* (- 32) ?x1308) (* (- 48) (* q!3 r!2 r!2 x!0 r00 d00 d!1 d!1)) (* (- 8) (* q!3 r!2 r!2 x!0 r00 d00 d!1 d!1 d!1)) ?x9005 (* (- 4) ?x4261) (* 48 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 r00 d00)) (* (- 48) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 r00 d00)) (* 8 (* ?x8345 ?x8345 ?x1618 ?x1618 ?x1618 ?x1618 r!2 r!2 r!2 q!3)) ?x666 (* 16 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r00 d00)) (* (- 48) (* q!3 q!3 r!2 r!2 d00 x00 d!1)) (* (- 24) (* q!3 q!3 r!2 r!2 d00 x00 d!1 d!1)) (* (- 4) (* q!3 q!3 r!2 r!2 d00 x00 d!1 d!1 d!1)) (* (- 192) (* q!3 r!2 r!2 r!2 d00 x00 d!1)) (* (- 96) (* q!3 r!2 r!2 r!2 d00 x00 d!1 d!1)) (* (- 384) (* q!3 r!2 r!2 r!2 r00 d!1)) ?x8092 ?x8099 (* 48 ?x8100) (* 24 ?x6171) ?x5512 ?x6546 (* (- 12) ?x6551) ?x6578 (* 16 (* q!3 r!2 r!2 x!0 r00 d!1 d!1 d!1)) (* 4 ?x703) (* 4 ?x8896) ?x7797 ?x2276 (* (- 48) ?x8836) ?x4559 (* 12 ?x4170) ?x3805 (* 8 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 q00)) (* 32 ?x5288) (* (- 24) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 q00)) ?x3496 (* (- 48) ?x3447) (* 24 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 q00)) ?x4243 (* 24 ?x4244) (* (- 16) (* r!2 r!2 r!2 x!0 r00 d00 d!1 d!1 d!1)) (* (- 48) (* r!2 r!2 x!0 x!0 r00 d!1 d!1)) ?x331 (* 4 (* r!2 r!2 x!0 x!0 r00 d00 d!1 d!1 d!1)) (* (- 24) ?x2459) (* (- 2) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x1618 ?x1618 r!2 r!2 q!3)) (* (- 48) ?x7759) (* 96 (* q!3 r!2 r!2 r!2 d00 q00 d!1)) (* (- 24) (* q!3 r!2 r!2 x!0 d00 q00 d!1 d!1)) (* 32 (* r!2 r!2 r!2 x!0 r00 d!1 d!1 d!1)) (* 48 ?x3828) (* 48 (* r!2 r!2 x!0 x!0 r00 d00 d!1)) (* 24 (* r!2 r!2 x!0 x!0 r00 d00 d!1 d!1)) (* (- 8) (* q!3 q!3 r!2 r!2 r00 d!1 d!1 d!1)) ?x9535 (* (- 24) ?x8499) (* (- 32) (* r!2 r!2 r!2 r!2 r00 d!1 d!1 d!1)) (* (- 192) (* r!2 r!2 r!2 r!2 r00 d!1 d!1)) (* 24 (* q!3 q!3 r!2 r!2 d00 q00 d!1)) (* 12 (* q!3 q!3 r!2 r!2 d00 q00 d!1 d!1)) (* 2 (* q!3 q!3 r!2 r!2 d00 q00 d!1 d!1 d!1)) (* 48 (* q!3 r!2 r!2 r!2 d00 q00 d!1 d!1)) (* 8 (* q!3 r!2 r!2 r!2 d00 q00 d!1 d!1 d!1)) (* (- 48) (* q!3 r!2 r!2 x!0 d00 q00 d!1)) (* (- 4) (* q!3 r!2 r!2 x!0 d00 q00 d!1 d!1 d!1)) (* (- 4) ?x6388) (* (- 96) (* r!2 r!2 x!0 x!0 r00 d!1)) (* (- 8) (* r!2 r!2 x!0 x!0 r00 d!1 d!1 d!1)) ?x1045 (* (- 4) (* ?x8345 ?x8345 ?x8345 ?x8345 ?x1618 ?x1618 ?x1618 r!2 r!2)) (* (- 1) ?x6092) (* (- 6) ?x1027) (* 12 ?x1034) (* 3 ?x7157) (* (- 12) ?x1025) (* 48 ?x9479) (* 12 ?x5013) (* (- 12) ?x897) (* (- 6) (* r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1)) (* (- 3) ?x6216) (* (- 32) (* q!3 r!2 r!2 r!2 d00 d00 q00)) (* (- 32) (* r!2 r!2 r!2 r!2 d00 d00 q00)) ?x5594 ?x5811 (* 128 (* q!3 r!2 r!2 x!0 r00)) (* (- 256) (* r!2 r!2 r!2 r!2 r00)) (* 192 (* r!2 r!2 r!2 x!0 r00 d!1 d!1)) ?x5851 ?x7772 (* 16 (* q!3 r!2 r!2 x!0 d00 d00 q00)) (* (- 8) (* r!2 r!2 x!0 x!0 d00 d00 q00)) (* (- 64) (* r!2 r!2 x!0 x!0 r00)) (* 256 (* r!2 r!2 r!2 x!0 r00)) (* (- 64) (* q!3 q!3 r!2 r!2 r00)) (* (- 256) (* q!3 r!2 r!2 r!2 r00)) ?x2487 ?x8515 ?x9562 ?x4163 (* 8 (* ?x8345 ?x8345 ?x8345 ?x1618 ?x1618 ?x1618 r!2 r!2)) (* 96 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r00 d00)) (* 192 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 r00 d00)) (* (- 192) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 r00 d00)) (* 128 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 r00 d00)) (* (- 192) (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 r00 d00)) (* 96 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 r00 d00)) (* (- 16) (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 r00 d00)) (* (- 32) (* q!3 q!3 r!2 r!2 d00 x00)) (* (- 128) (* q!3 r!2 r!2 r!2 d00 x00)) (* 64 (* q!3 r!2 r!2 x!0 d00 x00)) (* (- 128) (* r!2 r!2 r!2 r!2 d00 x00)) (* 128 (* r!2 r!2 r!2 x!0 d00 x00)) (* (- 32) (* r!2 r!2 x!0 x!0 d00 x00)) (* 4 (* ?x8345 ?x8345 ?x8345 ?x8345 ?x1618 ?x1618 r!2 r!2 r!2)) (* (- 16) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 x00)) (* (- 96) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 x00)) (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 x00)) (* (- 192) (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 x00)) (* 192 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 x00)) (* (- 48) (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 x00)) (* (- 128) (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 x00)) (* 192 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 x00)) (* (- 96) (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 x00)) (* 16 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 x00)) (* (- 64) (* q!3 r!2 r!2 x!0 r00 d00)) (* 128 (* q!3 r!2 r!2 r!2 r00 d00)) (* 32 (* q!3 q!3 r!2 r!2 r00 d00)) (* 128 (* r!2 r!2 r!2 r!2 r00 d00)) (* (- 128) (* r!2 r!2 r!2 x!0 r00 d00)) (* 32 (* r!2 r!2 x!0 x!0 r00 d00)) (* 16 (* q!3 q!3 r!2 r!2 d00 q00)) (* 64 (* q!3 r!2 r!2 r!2 d00 q00)) (* (- 32) (* q!3 r!2 r!2 x!0 d00 q00)) (* 64 (* r!2 r!2 r!2 r!2 d00 q00)) (* (- 64) (* r!2 r!2 r!2 x!0 d00 q00)) (* 16 (* r!2 r!2 x!0 x!0 d00 q00)) (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 q00)) (* 96 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 q00)) (* (- 96) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 q00)) (* 64 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 q00)) (* (- 96) (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 q00)) (* 48 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 q00)) (* (- 8) (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 q00)))))
 (let (($x3928 (or (not (= ?x8755 0)) (not (= ?x2403 0)) (not (= ?x6639 0)) (not (= ?x1479 0)))))
 (let ((?x9713 (* q!3 d!1 d!1)))
 (let ((?x362 (* r00 d00)))
 (let ((?x363 (* 4 ?x362)))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x1625 (+ (* 8 r!2) ?x227 ?x275 ?x259 ?x325 ?x363 (* 4 (* x!0 d!1)) (* (- 4) (* r!2 d!1)) ?x9713 (* (- 2) (* q!3 d!1)))))
 (let (($x2313 (and (= ?x1625 0) $x3928)))
 (let (($x3858 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x237 (* (- 1) x)))
 (let ((?x178 (* 2 r)))
 (let ((?x4781 (+ 2 q ?x178 ?x237 d)))
 (let ((?x9801 (+ 4 q)))
 (let ((?x10100 (+ 2 d)))
 (let ((?x7984 (* (- 4) (* d00 x00 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 r r r))))
 (let ((?x5843 (* 4 (* d00 r00 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 r r r))))
 (let ((?x7114 (* 2 (* d00 q00 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 r r r))))
 (let ((?x4747 (* (- 1) (* d00 d00 q00 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 r r r))))
 (let ((?x4769 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 ?x4781 r r r))))
 (let ((?x4731 (* (- 2) (* ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4781 ?x4781 ?x4781 r r r))))
 (let ((?x3743 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 r r r r))))
 (let ((?x4250 (+ (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4781 ?x4781 ?x4781 r r r) (* (- 4) (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 r r)) (* 8 (* ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 ?x4781 r r r)) ?x3743 (* 8 (* ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 ?x4781 r r)) ?x4731 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 r r r)) (* (- 2) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 r r)) (* 4 (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 r r)) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 r r) (* (- 8) (* r00 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 r r)) (* (- 8) (* r00 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 r r r)) ?x4769 ?x4747 ?x7114 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 ?x4781 r r)) ?x5843 (* (- 1) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 r r)) (* 2 (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 r r)) ?x7984)))
 (let ((?x10872 (* (- 1) d)))
 (let ((?x4789 (+ (- 2) q ?x178 ?x237 ?x10872)))
 (let ((?x10871 (+ (- 4) q)))
 (let ((?x3646 (* (- 4) (* d00 x00 ?x10871 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r))))
 (let ((?x3612 (* (- 1) (* d00 d00 q00 ?x10871 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r))))
 (let ((?x3470 (* (- 4) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 ?x4789 r r r))))
 (let ((?x4280 (* 4 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r r))))
 (let ((?x1196 (* (- 2) (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r))))
 (let ((?x4242 (* 2 (* d00 q00 ?x10871 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r))))
 (let ((?x3955 (* 4 (* d00 r00 ?x10871 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r))))
 (let ((?x4282 (+ (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r) (* (- 4) (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r)) ?x3955 ?x4242 (* 8 (* ?x10871 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 ?x4789 r r r)) ?x1196 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r) (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r r)) ?x4280 (* (- 8) (* r00 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r)) (* 8 (* ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r)) (* (- 2) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r)) (* 2 (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r)) (* (- 8) (* r00 ?x10871 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r)) (* (- 1) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r)) ?x3470 ?x3612 (* 4 (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r)) ?x3646)))
 (let ((?x10908 (* (- 2) d)))
 (let ((?x6736 (+ (- 4) q ?x178 ?x237 ?x10908)))
 (let ((?x10907 (+ (- 8) q)))
 (let ((?x3246 (* (- 1) (* d00 d00 q00 ?x10907 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r))))
 (let ((?x4487 (* (- 4) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 ?x6736 r r r))))
 (let ((?x4485 (* 2 (* d00 q00 ?x10907 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r))))
 (let ((?x3244 (* 4 (* d00 r00 ?x10907 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r))))
 (let ((?x8856 (* (- 2) (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r))))
 (let ((?x5945 (* (- 4) (* d00 x00 ?x10907 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r))))
 (let ((?x4673 (* 4 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r r))))
 (let ((?x3268 (+ (* 8 (* ?x10907 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 ?x6736 r r r)) (* 8 (* ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r)) ?x4673 (* (- 2) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r)) ?x5945 (* 2 (* d00 q00 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r)) (* (- 4) (* d00 x00 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r)) ?x8856 (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r) (* (- 8) (* r00 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r)) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r) (* (- 8) (* r00 ?x10907 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r)) (* (- 1) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r)) ?x3244 (* 4 (* d00 r00 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r)) ?x4485 ?x4487 ?x3246 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r r)))))
 (let ((?x9963 (+ q ?x178 ?x237)))
 (let ((?x10664 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 r r r)))
 (let ((?x3141 (* (- 3) (* q q r r r x x d00 d00 q00 d d))))
 (let ((?x3137 (* (- 12) (* q q r r r x x d00 d00 q00 d))))
 (let ((?x3136 (* 12 (* q q r r r r x d00 d00 q00 d d))))
 (let ((?x3134 (* 48 (* q q r r r r x d00 d00 q00 d))))
 (let ((?x2569 (* (- 12) (* q q r r r r r d00 d00 q00 d d))))
 (let ((?x3132 (* 3 (* q q q r r r x d00 d00 q00 d d))))
 (let ((?x3131 (* 12 (* q q q r r r x d00 d00 q00 d))))
 (let ((?x3130 (* (- 6) (* q q q r r r r d00 d00 q00 d d))))
 (let ((?x3129 (* (- 1) (* q q q q r r r d00 d00 q00 d d))))
 (let ((?x3124 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r r q))))
 (let ((?x3121 (* (- 4) (* q q q q r r r d00 d00 q00 d))))
 (let ((?x3107 (* (- 24) (* q r r r r x x d00 d00 q00 d))))
 (let ((?x3104 (* 48 (* q r r r r r x d00 d00 q00 d))))
 (let ((?x3099 (* (- 48) (* q q r r r r r d00 d00 q00 d))))
 (let ((?x3097 (* (- 24) (* q q q r r r r d00 d00 q00 d))))
 (let ((?x2551 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 ?x9963 r r r q))))
 (let ((?x3090 (* 24 (* q r r r r x x r00 d00 d d))))
 (let ((?x2546 (* (- 48) (* q r r r r r x r00 d00 d d))))
 (let ((?x3078 (* 32 (* q r r r r r r r00 d00 d d))))
 (let ((?x3071 (* 12 (* q q r r r x x r00 d00 d d))))
 (let ((?x3075 (* (- 48) (* q q r r r r x r00 d00 d d))))
 (let ((?x3067 (* 4 (* q q q q r r r r00 d00 d d))))
 (let ((?x3066 (* 4 (* q r r r x x x d00 d00 q00 d))))
 (let ((?x2547 (* (- 12) (* q q q r r r x r00 d00 d d))))
 (let ((?x3060 (* 24 (* q q q r r r r r00 d00 d d))))
 (let ((?x3058 (* 48 (* q q r r r r r r00 d00 d d))))
 (let ((?x3041 (* (- 4) (* q r r r x x x r00 d00 d d))))
 (let ((?x2532 (* (- 32) (* q r r r r r r d00 d00 q00 d))))
 (let ((?x3023 (* (- 2) (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r q q))))
 (let ((?x3022 (* (- 32) (* q r r r r r r d00 x00 d d))))
 (let ((?x2533 (* (- 12) (* q q r r r x x d00 x00 d d))))
 (let ((?x3015 (* 12 (* q r r r r r x d00 d00 q00 d d))))
 (let ((?x3007 (* (- 24) (* q q q r r r r d00 x00 d d))))
 (let ((?x3006 (* (- 48) (* q q r r r r r d00 x00 d d))))
 (let ((?x3005 (* 12 (* q q q r r r x d00 x00 d d))))
 (let ((?x3003 (* 48 (* q q r r r r x d00 x00 d d))))
 (let ((?x2992 (* (- 6) (* q r r r r x x d00 d00 q00 d d))))
 (let ((?x2967 (* 12 (* q q q r r r r d00 q00 d d))))
 (let ((?x2969 (* (- 24) (* q r r r r r x d00 q00 d d))))
 (let ((?x2965 (* 16 (* q r r r r r r d00 q00 d d))))
 (let ((?x2488 (* 12 (* q r r r r x x d00 q00 d d))))
 (let ((?x2870 (* 6 (* q q r r r x x d00 q00 d d))))
 (let ((?x2485 (* (- 24) (* q q r r r r x d00 q00 d d))))
 (let ((?x2873 (* 24 (* q q r r r r r d00 q00 d d))))
 (let ((?x2499 (* (- 4) (* q q q q r r r d00 x00 d d))))
 (let ((?x2897 (* (- 2) (* q r r r x x x d00 q00 d d))))
 (let ((?x2490 (* 4 (* q r r r x x x d00 x00 d d))))
 (let ((?x2899 (* (- 8) (* q r r r r r r d00 d00 q00 d d))))
 (let ((?x2909 (* (- 24) (* q r r r r x x d00 x00 d d))))
 (let ((?x2906 (* 2 (* q q q q r r r d00 q00 d d))))
 (let ((?x2927 (* (- 6) (* q q q r r r x d00 q00 d d))))
 (let ((?x2926 (* 48 (* q r r r r r x d00 x00 d d))))
 (let ((?x2592 (+ (* 96 (* q r r x r00 d d)) (* (- 192) (* r r r x r00 d00 d)) (* (- 1) (* r r x x d00 d00 q00 d d d)) (* 8 (* r r r r d00 q00 d d d)) (* 384 (* r r r x r00 d)) ?x2926 ?x2927 (* (- 48) (* r r r x d00 q00 d d)) (* (- 96) (* r r r x d00 q00 d)) (* 24 (* r r x x d00 q00 d)) (* (- 8) (* r r r x d00 q00 d d d)) (* 48 (* r r r r d00 q00 d d)) (* 12 (* r r x x d00 q00 d d)) (* 2 (* r r x x d00 q00 d d d)) (* (- 4) (* q q q q r r r d00 d00 q00)) (* (- 96) (* r r r x r00 d00 d d)) (* 12 (* q q q r r r x d00 d00 q00)) (* 8 (* q q q q r r r d00 q00 d)) (* (- 12) (* q q r r r x x d00 d00 q00)) ?x2906 ?x2909 (* (- 96) (* q r r r r x x d00 x00 d)) (* 192 (* q r r x r00 d)) ?x2899 (* 16 (* q r r r x x x d00 x00 d)) ?x2490 ?x2897 (* (- 48) (* r r r r d00 d00 q00 d)) (* (- 8) (* q r r r x x x d00 q00 d)) (* (- 4) (* r r x x d00 x00 d d d)) ?x2499 (* 48 (* q q q r r r r d00 q00 d)) (* (- 192) (* q r r r r00 d d)) (* (- 24) (* r r r r d00 d00 q00 d d)) (* 192 (* r r r r r00 d00 d)) (* (- 4) (* r r r r d00 d00 q00 d d d)) (* 96 (* q q r r r r r d00 q00 d)) ?x2873 (* (- 96) (* q q r r r r x d00 q00 d)) ?x2485 ?x2870 (* (- 4) (* q r r r d00 d00 q00 d d d)) (* 48 (* q r r r r x x d00 q00 d)) ?x2488 (* 96 (* r r r r r00 d00 d d)) (* 16 (* r r r r r00 d00 d d d)) (* 24 (* q q r r r x x d00 q00 d)) (* (- 96) (* q q r r r00 d)) (* 24 (* r r r x d00 d00 q00 d d)) (* 64 (* q r r r r r r d00 q00 d)) ?x2965 (* (- 96) (* q r r r r r x d00 q00 d)) ?x2969 (* 96 (* r r r r d00 q00 d)) ?x2967 (* 24 (* q r r x d00 d00 q00 d)) (* (- 24) (* q r r r d00 d00 q00 d d)) (* (- 12) (* r r x x d00 d00 q00 d)) (* 4 (* r r r x d00 d00 q00 d d d)) (* (- 12) (* q q r r d00 d00 q00 d)) (* 48 (* r r r x d00 d00 q00 d)) (* (- 6) (* q q r r d00 d00 q00 d d)) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 r r q) (* (- 8) (* r00 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r q)) (* 12 (* q r r x d00 d00 q00 d d)) (* 48 (* q r r x d00 x00 d d)) (* 8 (* q r r x d00 x00 d d d)) (* (- 192) (* r r r r d00 x00 d)) (* 16 (* r r r x d00 x00 d d d)) (* (- 48) (* r r x x d00 x00 d)) (* (- 16) (* q r r r d00 x00 d d d)) (* 96 (* q r r x d00 x00 d)) (* (- 48) (* q q r r r00 d d)) ?x2992 (* (- 96) (* r r r r d00 x00 d d)) (* (- 16) (* r r r r d00 x00 d d d)) (* 192 (* r r r x d00 x00 d)) (* 96 (* r r r x d00 x00 d d)) (* (- 24) (* r r x x d00 x00 d d)) (* 32 (* r r r x d00 d00 q00)) ?x3003 (* 192 (* q q r r r r x d00 x00 d)) (* (- 96) (* q q q r r r r d00 x00 d)) (* 48 (* q q q r r r x d00 x00 d)) ?x3005 ?x3006 ?x3007 (* (- 16) (* q q q q r r r d00 x00 d)) (* (- 1) (* q q r r d00 d00 q00 d d d)) (* (- 32) (* q r r r r00 d d d)) (* (- 48) (* q r r r d00 d00 q00 d)) (* (- 384) (* r r r r r00 d)) (* (- 192) (* q q r r r r r d00 x00 d)) ?x3015 (* (- 48) (* q q r r r x x d00 x00 d)) ?x2533 (* (- 128) (* q r r r r r r d00 x00 d)) ?x3022 ?x3023 (* 96 (* q r r r r00 d00 d d)) (* (- 8) (* q q r r d00 d00 q00)) (* 24 (* q q r r r00 d00 d d)) (* 4 (* q q r r r00 d00 d d d)) (* 192 (* q r r r r00 d00 d)) (* (- 96) (* q r r x r00 d00 d)) (* 16 (* q r r r r00 d00 d d d)) (* 48 (* q q r r r00 d00 d)) ?x2532 (* (- 48) (* q r r x r00 d00 d d)) (* (- 8) (* q r r x r00 d00 d d d)) (* (- 16) (* q r r r x x x r00 d00 d)) ?x3041 (* 48 (* q q r r r x x r00 d00)) (* (- 48) (* q q q r r r x r00 d00)) (* 8 (* ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 ?x9963 r r r q)) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r q q) (* 16 (* q q q q r r r r00 d00)) (* (- 48) (* q q r r d00 x00 d)) (* (- 24) (* q q r r d00 x00 d d)) (* (- 4) (* q q r r d00 x00 d d d)) (* (- 192) (* q r r r d00 x00 d)) (* (- 96) (* q r r r d00 x00 d d)) (* (- 384) (* q r r r r00 d)) (* q r r r x x x d00 d00 q00 d d) (* 192 (* q q r r r r r r00 d00 d)) ?x3058 ?x3060 (* (- 192) (* q q r r r r x r00 d00 d)) (* (- 48) (* q q q r r r x r00 d00 d)) ?x2547 (* 192 (* q r r r r r x d00 x00 d)) (* 16 (* q r r x r00 d d d)) ?x3066 ?x3067 (* 16 (* q q q q r r r r00 d00 d)) (* 96 (* q q q r r r r r00 d00 d)) ?x3075 (* 48 (* q q r r r x x r00 d00 d)) ?x3071 (* 128 (* q r r r r r r r00 d00 d)) (* 8 (* q q q q r r r d00 q00)) ?x3078 (* (- 24) (* q q q r r r x d00 q00)) (* (- 192) (* q r r r r r x r00 d00 d)) ?x2546 (* 24 (* q q r r r x x d00 q00)) (* 96 (* q r r r r x x r00 d00 d)) ?x3090 (* (- 16) (* r r r x r00 d00 d d d)) (* (- 48) (* r r x x r00 d d)) ?x2551 (* 4 (* r r x x r00 d00 d d d)) ?x3097 (* (- 2) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 r r q)) ?x3099 (* 96 (* q r r r d00 q00 d)) (* (- 24) (* q r r x d00 q00 d d)) (* 32 (* r r r x r00 d d d)) ?x3104 (* 48 (* r r x x r00 d00 d)) (* 24 (* r r x x r00 d00 d d)) (* (- 8) (* q q r r r00 d d d)) (* 2 (* q r r x d00 d00 q00 d d d)) ?x3107 (* (- 32) (* r r r r r00 d d d)) (* (- 192) (* r r r r r00 d d)) (* 24 (* q q r r d00 q00 d)) (* 12 (* q q r r d00 q00 d d)) (* 2 (* q q r r d00 q00 d d d)) (* 48 (* q r r r d00 q00 d d)) (* 8 (* q r r r d00 q00 d d d)) (* (- 48) (* q r r x d00 q00 d)) (* (- 4) (* q r r x d00 q00 d d d)) ?x3121 (* (- 96) (* r r x x r00 d)) (* (- 8) (* r r x x r00 d d d)) ?x3124 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r)) ?x3129 ?x3130 ?x3131 ?x3132 ?x2569 ?x3134 ?x3136 ?x3137 (* (- 6) (* r r x x d00 d00 q00 d d)) ?x3141 (* (- 32) (* q r r r d00 d00 q00)) (* (- 32) (* r r r r d00 d00 q00)) (* 48 (* q q r r r r x d00 d00 q00)) (* (- 48) (* q q r r r r r d00 d00 q00)) (* 128 (* q r r x r00)) (* (- 256) (* r r r r r00)) (* 192 (* r r r x r00 d d)) (* (- 24) (* q q q r r r x d00 q00 d)) (* (- 24) (* q q q r r r r d00 d00 q00)) (* 16 (* q r r x d00 d00 q00)) (* (- 8) (* r r x x d00 d00 q00)) (* (- 64) (* r r x x r00)) (* 256 (* r r r x r00)) (* (- 64) (* q q r r r00)) (* (- 256) (* q r r r r00)) (* (- 32) (* q r r r r r r d00 d00 q00)) (* 48 (* q r r r r r x d00 d00 q00)) (* (- 24) (* q r r r r x x d00 d00 q00)) (* 4 (* q r r r x x x d00 d00 q00)) (* 8 (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r)) (* 96 (* q q q r r r r r00 d00)) (* 192 (* q q r r r r r r00 d00)) (* (- 192) (* q q r r r r x r00 d00)) (* 128 (* q r r r r r r r00 d00)) (* (- 192) (* q r r r r r x r00 d00)) (* 96 (* q r r r r x x r00 d00)) (* (- 16) (* q r r r x x x r00 d00)) (* (- 32) (* q q r r d00 x00)) (* (- 128) (* q r r r d00 x00)) (* 64 (* q r r x d00 x00)) (* (- 128) (* r r r r d00 x00)) (* 128 (* r r r x d00 x00)) (* (- 32) (* r r x x d00 x00)) (* 4 ?x10664) (* (- 16) (* q q q q r r r d00 x00)) (* (- 96) (* q q q r r r r d00 x00)) (* 48 (* q q q r r r x d00 x00)) (* (- 192) (* q q r r r r r d00 x00)) (* 192 (* q q r r r r x d00 x00)) (* (- 48) (* q q r r r x x d00 x00)) (* (- 128) (* q r r r r r r d00 x00)) (* 192 (* q r r r r r x d00 x00)) (* (- 96) (* q r r r r x x d00 x00)) (* 16 (* q r r r x x x d00 x00)) (* (- 64) (* q r r x r00 d00)) (* 128 (* q r r r r00 d00)) (* 32 (* q q r r r00 d00)) (* 128 (* r r r r r00 d00)) (* (- 128) (* r r r x r00 d00)) (* 32 (* r r x x r00 d00)) (* 16 (* q q r r d00 q00)) (* 64 (* q r r r d00 q00)) (* (- 32) (* q r r x d00 q00)) (* 64 (* r r r r d00 q00)) (* (- 64) (* r r r x d00 q00)) (* 16 (* r r x x d00 q00)) (* 48 (* q q q r r r r d00 q00)) (* 96 (* q q r r r r r d00 q00)) (* (- 96) (* q q r r r r x d00 q00)) (* 64 (* q r r r r r r d00 q00)) (* (- 96) (* q r r r r r x d00 q00)) (* 48 (* q r r r r x x d00 q00)) (* (- 8) (* q r r r x x x d00 q00)))))
 (let (($x5873 (or (not (= ?x2592 0)) (not (= ?x3268 0)) (not (= ?x4282 0)) (not (= ?x4250 0)))))
 (let ((?x5475 (* (- 2) (* q d))))
 (let ((?x10111 (* q d d)))
 (let ((?x375 (* (- 4) (* r d))))
 (let ((?x4423 (* 4 (* x d))))
 (let ((?x362 (* r00 d00)))
 (let ((?x363 (* 4 ?x362)))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x10114 (* 8 r)))
 (and (= (+ ?x10114 ?x227 ?x275 ?x259 ?x325 ?x363 ?x4423 ?x375 ?x10111 ?x5475) 0) $x5873)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x3679 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x10908 (* (- 2) d)))
 (let ((?x237 (* (- 1) x)))
 (let ((?x178 (* 2 r)))
 (let ((?x4816 (+ (- 4) ?x178 ?x237 q ?x10908)))
 (let ((?x10100 (+ 2 d)))
 (let ((?x10907 (+ (- 8) q)))
 (let ((?x4657 (* (- 2) (* d00 q00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4927 (* 2 (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x3535 (* 4 (* d00 x00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4888 (* (- 4) (* d00 r00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4877 (* 4 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4867 (* (- 4) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r r))))
 (let ((?x4857 (* (- 1) (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x6997 (+ (* 8 (* r00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r)) (* (- 1) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r) ?x4857 (* (- 8) (* ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 ?x4816 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) ?x4867 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r)) (* 2 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) ?x4877 (* d00 d00 q00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r)) ?x4888 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r r)) ?x3535 ?x4927 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) ?x4657)))
 (let (($x7064 (not (= ?x6997 0))))
 (let ((?x940 (+ ?x178 ?x237 q)))
 (let ((?x7210 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x4792 (* 2 (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q q))))
 (let ((?x6079 (* 4 (* d00 x00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x3942 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x8823 (* 4 (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x1685 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r r q))))
 (let ((?x4827 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q q))))
 (let ((?x5296 (+ (* 8 (* r00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r q)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r) ?x4827 (* (- 8) (* ?x10100 ?x10100 ?x940 ?x940 ?x940 ?x940 r r r q)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) ?x1685 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r q)) ?x8823 (* d00 d00 q00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r)) ?x3942 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r r)) ?x6079 ?x4792 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) ?x7210)))
 (let (($x5303 (not (= ?x5296 0))))
 (let ((?x10872 (* (- 1) d)))
 (let ((?x4658 (+ (- 2) ?x178 ?x237 q ?x10872)))
 (let ((?x10871 (+ (- 4) q)))
 (let ((?x4805 (* (- 2) (* d00 q00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4798 (* 2 (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4795 (* 4 (* d00 x00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4773 (* (- 4) (* d00 r00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4767 (* 4 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4699 (* (- 4) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r r))))
 (let ((?x4687 (* (- 1) (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4807 (+ (* 8 (* r00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r)) (* (- 1) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r) ?x4687 (* (- 8) (* ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 ?x4658 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) ?x4699 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r)) (* 2 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) ?x4767 (* d00 d00 q00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r)) ?x4773 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r r)) ?x4795 ?x4798 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) ?x4805)))
 (let (($x4815 (not (= ?x4807 0))))
 (let ((?x4466 (+ 2 ?x178 ?x237 q d)))
 (let ((?x9801 (+ 4 q)))
 (let ((?x4646 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4634 (* 2 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4630 (* 4 (* d00 x00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4607 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4584 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4568 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r r))))
 (let ((?x4510 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4647 (+ (* 8 (* r00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r) ?x4510 (* (- 8) (* ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 ?x4466 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) ?x4568 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 ?x4466 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 r r)) ?x4584 (* d00 d00 q00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 ?x4466 r r)) ?x4607 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r r)) ?x4630 ?x4634 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) ?x4646)))
 (let (($x4655 (not (= ?x4647 0))))
 (let ((?x3531 (* 4 (* d00 r00))))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x4423 (* 4 (* x d))))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x10114 (* 8 r)))
 (let ((?x4435 (+ ?x10114 ?x227 ?x4423 ?x259 ?x275 (* d d q) (* (- 2) (* d q)) ?x325 (* (- 4) (* d r)) ?x3531)))
 (let (($x4440 (= ?x4435 0)))
 (and $x4440 (or $x4655 $x4815 $x5303 $x7064)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x5875 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x237 (* (- 1) x)))
 (let ((?x178 (* 2 r)))
 (let ((?x4781 (+ 2 q ?x178 ?x237 d)))
 (let ((?x9801 (+ 4 q)))
 (let ((?x10100 (+ 2 d)))
 (let ((?x7984 (* (- 4) (* d00 x00 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 r r r))))
 (let ((?x5843 (* 4 (* d00 r00 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 r r r))))
 (let ((?x7114 (* 2 (* d00 q00 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 r r r))))
 (let ((?x4747 (* (- 1) (* d00 d00 q00 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 r r r))))
 (let ((?x4769 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 ?x4781 r r r))))
 (let ((?x4731 (* (- 2) (* ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4781 ?x4781 ?x4781 r r r))))
 (let ((?x3743 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 r r r r))))
 (let ((?x4250 (+ (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4781 ?x4781 ?x4781 r r r) (* (- 4) (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 r r)) (* 8 (* ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 ?x4781 r r r)) ?x3743 (* 8 (* ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 ?x4781 r r)) ?x4731 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 r r r)) (* (- 2) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 r r)) (* 4 (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 r r)) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 r r) (* (- 8) (* r00 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 r r)) (* (- 8) (* r00 ?x10100 ?x10100 ?x9801 ?x4781 ?x4781 ?x4781 r r r)) ?x4769 ?x4747 ?x7114 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 ?x4781 r r)) ?x5843 (* (- 1) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 r r)) (* 2 (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4781 ?x4781 r r)) ?x7984)))
 (let ((?x10872 (* (- 1) d)))
 (let ((?x4789 (+ (- 2) q ?x178 ?x237 ?x10872)))
 (let ((?x10871 (+ (- 4) q)))
 (let ((?x3646 (* (- 4) (* d00 x00 ?x10871 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r))))
 (let ((?x3612 (* (- 1) (* d00 d00 q00 ?x10871 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r))))
 (let ((?x3470 (* (- 4) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 ?x4789 r r r))))
 (let ((?x4280 (* 4 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r r))))
 (let ((?x1196 (* (- 2) (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r))))
 (let ((?x4242 (* 2 (* d00 q00 ?x10871 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r))))
 (let ((?x3955 (* 4 (* d00 r00 ?x10871 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r))))
 (let ((?x4282 (+ (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r) (* (- 4) (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r)) ?x3955 ?x4242 (* 8 (* ?x10871 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 ?x4789 r r r)) ?x1196 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r) (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r r)) ?x4280 (* (- 8) (* r00 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r)) (* 8 (* ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r)) (* (- 2) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r)) (* 2 (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r)) (* (- 8) (* r00 ?x10871 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r r)) (* (- 1) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r)) ?x3470 ?x3612 (* 4 (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4789 ?x4789 ?x4789 r r)) ?x3646)))
 (let ((?x10908 (* (- 2) d)))
 (let ((?x6736 (+ (- 4) q ?x178 ?x237 ?x10908)))
 (let ((?x10907 (+ (- 8) q)))
 (let ((?x3246 (* (- 1) (* d00 d00 q00 ?x10907 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r))))
 (let ((?x4487 (* (- 4) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 ?x6736 r r r))))
 (let ((?x4485 (* 2 (* d00 q00 ?x10907 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r))))
 (let ((?x3244 (* 4 (* d00 r00 ?x10907 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r))))
 (let ((?x8856 (* (- 2) (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r))))
 (let ((?x5945 (* (- 4) (* d00 x00 ?x10907 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r))))
 (let ((?x4673 (* 4 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r r))))
 (let ((?x3268 (+ (* 8 (* ?x10907 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 ?x6736 r r r)) (* 8 (* ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r)) ?x4673 (* (- 2) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r)) ?x5945 (* 2 (* d00 q00 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r)) (* (- 4) (* d00 x00 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r)) ?x8856 (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r) (* (- 8) (* r00 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r)) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r) (* (- 8) (* r00 ?x10907 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 ?x6736 r r)) (* (- 1) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r)) ?x3244 (* 4 (* d00 r00 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r)) ?x4485 ?x4487 ?x3246 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x6736 ?x6736 r r r)))))
 (let ((?x9963 (+ q ?x178 ?x237)))
 (let ((?x10664 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 r r r)))
 (let ((?x3141 (* (- 3) (* q q r r r x x d00 d00 q00 d d))))
 (let ((?x3137 (* (- 12) (* q q r r r x x d00 d00 q00 d))))
 (let ((?x3136 (* 12 (* q q r r r r x d00 d00 q00 d d))))
 (let ((?x3134 (* 48 (* q q r r r r x d00 d00 q00 d))))
 (let ((?x2569 (* (- 12) (* q q r r r r r d00 d00 q00 d d))))
 (let ((?x3132 (* 3 (* q q q r r r x d00 d00 q00 d d))))
 (let ((?x3131 (* 12 (* q q q r r r x d00 d00 q00 d))))
 (let ((?x3130 (* (- 6) (* q q q r r r r d00 d00 q00 d d))))
 (let ((?x3129 (* (- 1) (* q q q q r r r d00 d00 q00 d d))))
 (let ((?x3124 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r r q))))
 (let ((?x3121 (* (- 4) (* q q q q r r r d00 d00 q00 d))))
 (let ((?x3107 (* (- 24) (* q r r r r x x d00 d00 q00 d))))
 (let ((?x3104 (* 48 (* q r r r r r x d00 d00 q00 d))))
 (let ((?x3099 (* (- 48) (* q q r r r r r d00 d00 q00 d))))
 (let ((?x3097 (* (- 24) (* q q q r r r r d00 d00 q00 d))))
 (let ((?x2551 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 ?x9963 r r r q))))
 (let ((?x3090 (* 24 (* q r r r r x x r00 d00 d d))))
 (let ((?x2546 (* (- 48) (* q r r r r r x r00 d00 d d))))
 (let ((?x3078 (* 32 (* q r r r r r r r00 d00 d d))))
 (let ((?x3071 (* 12 (* q q r r r x x r00 d00 d d))))
 (let ((?x3075 (* (- 48) (* q q r r r r x r00 d00 d d))))
 (let ((?x3067 (* 4 (* q q q q r r r r00 d00 d d))))
 (let ((?x3066 (* 4 (* q r r r x x x d00 d00 q00 d))))
 (let ((?x2547 (* (- 12) (* q q q r r r x r00 d00 d d))))
 (let ((?x3060 (* 24 (* q q q r r r r r00 d00 d d))))
 (let ((?x3058 (* 48 (* q q r r r r r r00 d00 d d))))
 (let ((?x3041 (* (- 4) (* q r r r x x x r00 d00 d d))))
 (let ((?x2532 (* (- 32) (* q r r r r r r d00 d00 q00 d))))
 (let ((?x3023 (* (- 2) (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r q q))))
 (let ((?x3022 (* (- 32) (* q r r r r r r d00 x00 d d))))
 (let ((?x2533 (* (- 12) (* q q r r r x x d00 x00 d d))))
 (let ((?x3015 (* 12 (* q r r r r r x d00 d00 q00 d d))))
 (let ((?x3007 (* (- 24) (* q q q r r r r d00 x00 d d))))
 (let ((?x3006 (* (- 48) (* q q r r r r r d00 x00 d d))))
 (let ((?x3005 (* 12 (* q q q r r r x d00 x00 d d))))
 (let ((?x3003 (* 48 (* q q r r r r x d00 x00 d d))))
 (let ((?x2992 (* (- 6) (* q r r r r x x d00 d00 q00 d d))))
 (let ((?x2967 (* 12 (* q q q r r r r d00 q00 d d))))
 (let ((?x2969 (* (- 24) (* q r r r r r x d00 q00 d d))))
 (let ((?x2965 (* 16 (* q r r r r r r d00 q00 d d))))
 (let ((?x2488 (* 12 (* q r r r r x x d00 q00 d d))))
 (let ((?x2870 (* 6 (* q q r r r x x d00 q00 d d))))
 (let ((?x2485 (* (- 24) (* q q r r r r x d00 q00 d d))))
 (let ((?x2873 (* 24 (* q q r r r r r d00 q00 d d))))
 (let ((?x2499 (* (- 4) (* q q q q r r r d00 x00 d d))))
 (let ((?x2897 (* (- 2) (* q r r r x x x d00 q00 d d))))
 (let ((?x2490 (* 4 (* q r r r x x x d00 x00 d d))))
 (let ((?x2899 (* (- 8) (* q r r r r r r d00 d00 q00 d d))))
 (let ((?x2909 (* (- 24) (* q r r r r x x d00 x00 d d))))
 (let ((?x2906 (* 2 (* q q q q r r r d00 q00 d d))))
 (let ((?x2927 (* (- 6) (* q q q r r r x d00 q00 d d))))
 (let ((?x2926 (* 48 (* q r r r r r x d00 x00 d d))))
 (let ((?x2592 (+ (* 96 (* q r r x r00 d d)) (* (- 192) (* r r r x r00 d00 d)) (* (- 1) (* r r x x d00 d00 q00 d d d)) (* 8 (* r r r r d00 q00 d d d)) (* 384 (* r r r x r00 d)) ?x2926 ?x2927 (* (- 48) (* r r r x d00 q00 d d)) (* (- 96) (* r r r x d00 q00 d)) (* 24 (* r r x x d00 q00 d)) (* (- 8) (* r r r x d00 q00 d d d)) (* 48 (* r r r r d00 q00 d d)) (* 12 (* r r x x d00 q00 d d)) (* 2 (* r r x x d00 q00 d d d)) (* (- 4) (* q q q q r r r d00 d00 q00)) (* (- 96) (* r r r x r00 d00 d d)) (* 12 (* q q q r r r x d00 d00 q00)) (* 8 (* q q q q r r r d00 q00 d)) (* (- 12) (* q q r r r x x d00 d00 q00)) ?x2906 ?x2909 (* (- 96) (* q r r r r x x d00 x00 d)) (* 192 (* q r r x r00 d)) ?x2899 (* 16 (* q r r r x x x d00 x00 d)) ?x2490 ?x2897 (* (- 48) (* r r r r d00 d00 q00 d)) (* (- 8) (* q r r r x x x d00 q00 d)) (* (- 4) (* r r x x d00 x00 d d d)) ?x2499 (* 48 (* q q q r r r r d00 q00 d)) (* (- 192) (* q r r r r00 d d)) (* (- 24) (* r r r r d00 d00 q00 d d)) (* 192 (* r r r r r00 d00 d)) (* (- 4) (* r r r r d00 d00 q00 d d d)) (* 96 (* q q r r r r r d00 q00 d)) ?x2873 (* (- 96) (* q q r r r r x d00 q00 d)) ?x2485 ?x2870 (* (- 4) (* q r r r d00 d00 q00 d d d)) (* 48 (* q r r r r x x d00 q00 d)) ?x2488 (* 96 (* r r r r r00 d00 d d)) (* 16 (* r r r r r00 d00 d d d)) (* 24 (* q q r r r x x d00 q00 d)) (* (- 96) (* q q r r r00 d)) (* 24 (* r r r x d00 d00 q00 d d)) (* 64 (* q r r r r r r d00 q00 d)) ?x2965 (* (- 96) (* q r r r r r x d00 q00 d)) ?x2969 (* 96 (* r r r r d00 q00 d)) ?x2967 (* 24 (* q r r x d00 d00 q00 d)) (* (- 24) (* q r r r d00 d00 q00 d d)) (* (- 12) (* r r x x d00 d00 q00 d)) (* 4 (* r r r x d00 d00 q00 d d d)) (* (- 12) (* q q r r d00 d00 q00 d)) (* 48 (* r r r x d00 d00 q00 d)) (* (- 6) (* q q r r d00 d00 q00 d d)) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 r r q) (* (- 8) (* r00 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r q)) (* 12 (* q r r x d00 d00 q00 d d)) (* 48 (* q r r x d00 x00 d d)) (* 8 (* q r r x d00 x00 d d d)) (* (- 192) (* r r r r d00 x00 d)) (* 16 (* r r r x d00 x00 d d d)) (* (- 48) (* r r x x d00 x00 d)) (* (- 16) (* q r r r d00 x00 d d d)) (* 96 (* q r r x d00 x00 d)) (* (- 48) (* q q r r r00 d d)) ?x2992 (* (- 96) (* r r r r d00 x00 d d)) (* (- 16) (* r r r r d00 x00 d d d)) (* 192 (* r r r x d00 x00 d)) (* 96 (* r r r x d00 x00 d d)) (* (- 24) (* r r x x d00 x00 d d)) (* 32 (* r r r x d00 d00 q00)) ?x3003 (* 192 (* q q r r r r x d00 x00 d)) (* (- 96) (* q q q r r r r d00 x00 d)) (* 48 (* q q q r r r x d00 x00 d)) ?x3005 ?x3006 ?x3007 (* (- 16) (* q q q q r r r d00 x00 d)) (* (- 1) (* q q r r d00 d00 q00 d d d)) (* (- 32) (* q r r r r00 d d d)) (* (- 48) (* q r r r d00 d00 q00 d)) (* (- 384) (* r r r r r00 d)) (* (- 192) (* q q r r r r r d00 x00 d)) ?x3015 (* (- 48) (* q q r r r x x d00 x00 d)) ?x2533 (* (- 128) (* q r r r r r r d00 x00 d)) ?x3022 ?x3023 (* 96 (* q r r r r00 d00 d d)) (* (- 8) (* q q r r d00 d00 q00)) (* 24 (* q q r r r00 d00 d d)) (* 4 (* q q r r r00 d00 d d d)) (* 192 (* q r r r r00 d00 d)) (* (- 96) (* q r r x r00 d00 d)) (* 16 (* q r r r r00 d00 d d d)) (* 48 (* q q r r r00 d00 d)) ?x2532 (* (- 48) (* q r r x r00 d00 d d)) (* (- 8) (* q r r x r00 d00 d d d)) (* (- 16) (* q r r r x x x r00 d00 d)) ?x3041 (* 48 (* q q r r r x x r00 d00)) (* (- 48) (* q q q r r r x r00 d00)) (* 8 (* ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 ?x9963 r r r q)) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r q q) (* 16 (* q q q q r r r r00 d00)) (* (- 48) (* q q r r d00 x00 d)) (* (- 24) (* q q r r d00 x00 d d)) (* (- 4) (* q q r r d00 x00 d d d)) (* (- 192) (* q r r r d00 x00 d)) (* (- 96) (* q r r r d00 x00 d d)) (* (- 384) (* q r r r r00 d)) (* q r r r x x x d00 d00 q00 d d) (* 192 (* q q r r r r r r00 d00 d)) ?x3058 ?x3060 (* (- 192) (* q q r r r r x r00 d00 d)) (* (- 48) (* q q q r r r x r00 d00 d)) ?x2547 (* 192 (* q r r r r r x d00 x00 d)) (* 16 (* q r r x r00 d d d)) ?x3066 ?x3067 (* 16 (* q q q q r r r r00 d00 d)) (* 96 (* q q q r r r r r00 d00 d)) ?x3075 (* 48 (* q q r r r x x r00 d00 d)) ?x3071 (* 128 (* q r r r r r r r00 d00 d)) (* 8 (* q q q q r r r d00 q00)) ?x3078 (* (- 24) (* q q q r r r x d00 q00)) (* (- 192) (* q r r r r r x r00 d00 d)) ?x2546 (* 24 (* q q r r r x x d00 q00)) (* 96 (* q r r r r x x r00 d00 d)) ?x3090 (* (- 16) (* r r r x r00 d00 d d d)) (* (- 48) (* r r x x r00 d d)) ?x2551 (* 4 (* r r x x r00 d00 d d d)) ?x3097 (* (- 2) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 r r q)) ?x3099 (* 96 (* q r r r d00 q00 d)) (* (- 24) (* q r r x d00 q00 d d)) (* 32 (* r r r x r00 d d d)) ?x3104 (* 48 (* r r x x r00 d00 d)) (* 24 (* r r x x r00 d00 d d)) (* (- 8) (* q q r r r00 d d d)) (* 2 (* q r r x d00 d00 q00 d d d)) ?x3107 (* (- 32) (* r r r r r00 d d d)) (* (- 192) (* r r r r r00 d d)) (* 24 (* q q r r d00 q00 d)) (* 12 (* q q r r d00 q00 d d)) (* 2 (* q q r r d00 q00 d d d)) (* 48 (* q r r r d00 q00 d d)) (* 8 (* q r r r d00 q00 d d d)) (* (- 48) (* q r r x d00 q00 d)) (* (- 4) (* q r r x d00 q00 d d d)) ?x3121 (* (- 96) (* r r x x r00 d)) (* (- 8) (* r r x x r00 d d d)) ?x3124 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r)) ?x3129 ?x3130 ?x3131 ?x3132 ?x2569 ?x3134 ?x3136 ?x3137 (* (- 6) (* r r x x d00 d00 q00 d d)) ?x3141 (* (- 32) (* q r r r d00 d00 q00)) (* (- 32) (* r r r r d00 d00 q00)) (* 48 (* q q r r r r x d00 d00 q00)) (* (- 48) (* q q r r r r r d00 d00 q00)) (* 128 (* q r r x r00)) (* (- 256) (* r r r r r00)) (* 192 (* r r r x r00 d d)) (* (- 24) (* q q q r r r x d00 q00 d)) (* (- 24) (* q q q r r r r d00 d00 q00)) (* 16 (* q r r x d00 d00 q00)) (* (- 8) (* r r x x d00 d00 q00)) (* (- 64) (* r r x x r00)) (* 256 (* r r r x r00)) (* (- 64) (* q q r r r00)) (* (- 256) (* q r r r r00)) (* (- 32) (* q r r r r r r d00 d00 q00)) (* 48 (* q r r r r r x d00 d00 q00)) (* (- 24) (* q r r r r x x d00 d00 q00)) (* 4 (* q r r r x x x d00 d00 q00)) (* 8 (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r)) (* 96 (* q q q r r r r r00 d00)) (* 192 (* q q r r r r r r00 d00)) (* (- 192) (* q q r r r r x r00 d00)) (* 128 (* q r r r r r r r00 d00)) (* (- 192) (* q r r r r r x r00 d00)) (* 96 (* q r r r r x x r00 d00)) (* (- 16) (* q r r r x x x r00 d00)) (* (- 32) (* q q r r d00 x00)) (* (- 128) (* q r r r d00 x00)) (* 64 (* q r r x d00 x00)) (* (- 128) (* r r r r d00 x00)) (* 128 (* r r r x d00 x00)) (* (- 32) (* r r x x d00 x00)) (* 4 ?x10664) (* (- 16) (* q q q q r r r d00 x00)) (* (- 96) (* q q q r r r r d00 x00)) (* 48 (* q q q r r r x d00 x00)) (* (- 192) (* q q r r r r r d00 x00)) (* 192 (* q q r r r r x d00 x00)) (* (- 48) (* q q r r r x x d00 x00)) (* (- 128) (* q r r r r r r d00 x00)) (* 192 (* q r r r r r x d00 x00)) (* (- 96) (* q r r r r x x d00 x00)) (* 16 (* q r r r x x x d00 x00)) (* (- 64) (* q r r x r00 d00)) (* 128 (* q r r r r00 d00)) (* 32 (* q q r r r00 d00)) (* 128 (* r r r r r00 d00)) (* (- 128) (* r r r x r00 d00)) (* 32 (* r r x x r00 d00)) (* 16 (* q q r r d00 q00)) (* 64 (* q r r r d00 q00)) (* (- 32) (* q r r x d00 q00)) (* 64 (* r r r r d00 q00)) (* (- 64) (* r r r x d00 q00)) (* 16 (* r r x x d00 q00)) (* 48 (* q q q r r r r d00 q00)) (* 96 (* q q r r r r r d00 q00)) (* (- 96) (* q q r r r r x d00 q00)) (* 64 (* q r r r r r r d00 q00)) (* (- 96) (* q r r r r r x d00 q00)) (* 48 (* q r r r r x x d00 q00)) (* (- 8) (* q r r r x x x d00 q00)))))
 (let (($x5873 (or (not (= ?x2592 0)) (not (= ?x3268 0)) (not (= ?x4282 0)) (not (= ?x4250 0)))))
 (let ((?x5475 (* (- 2) (* q d))))
 (let ((?x10111 (* q d d)))
 (let ((?x375 (* (- 4) (* r d))))
 (let ((?x4423 (* 4 (* x d))))
 (let ((?x362 (* r00 d00)))
 (let ((?x363 (* 4 ?x362)))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x10114 (* 8 r)))
 (let (($x1394 (and (= (+ ?x10114 ?x227 ?x275 ?x259 ?x325 ?x363 ?x4423 ?x375 ?x10111 ?x5475) 0) $x5873)))
 (let ((?x4816 (+ (- 4) ?x178 ?x237 q ?x10908)))
 (let ((?x4657 (* (- 2) (* d00 q00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4927 (* 2 (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x3535 (* 4 (* d00 x00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4888 (* (- 4) (* d00 r00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4877 (* 4 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4867 (* (- 4) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r r))))
 (let ((?x4857 (* (- 1) (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x6997 (+ (* 8 (* r00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r)) (* (- 1) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r) ?x4857 (* (- 8) (* ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 ?x4816 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) ?x4867 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r)) (* 2 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) ?x4877 (* d00 d00 q00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r)) ?x4888 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r r)) ?x3535 ?x4927 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) ?x4657)))
 (let (($x7064 (not (= ?x6997 0))))
 (let ((?x940 (+ ?x178 ?x237 q)))
 (let ((?x7210 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x4792 (* 2 (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q q))))
 (let ((?x6079 (* 4 (* d00 x00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x3942 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x8823 (* 4 (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x1685 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r r q))))
 (let ((?x4827 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q q))))
 (let ((?x5296 (+ (* 8 (* r00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r q)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r) ?x4827 (* (- 8) (* ?x10100 ?x10100 ?x940 ?x940 ?x940 ?x940 r r r q)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) ?x1685 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r q)) ?x8823 (* d00 d00 q00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r)) ?x3942 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r r)) ?x6079 ?x4792 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) ?x7210)))
 (let (($x5303 (not (= ?x5296 0))))
 (let ((?x4658 (+ (- 2) ?x178 ?x237 q ?x10872)))
 (let ((?x4805 (* (- 2) (* d00 q00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4798 (* 2 (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4795 (* 4 (* d00 x00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4773 (* (- 4) (* d00 r00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4767 (* 4 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4699 (* (- 4) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r r))))
 (let ((?x4687 (* (- 1) (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4807 (+ (* 8 (* r00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r)) (* (- 1) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r) ?x4687 (* (- 8) (* ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 ?x4658 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) ?x4699 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r)) (* 2 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) ?x4767 (* d00 d00 q00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r)) ?x4773 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r r)) ?x4795 ?x4798 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) ?x4805)))
 (let (($x4815 (not (= ?x4807 0))))
 (let ((?x4466 (+ 2 ?x178 ?x237 q d)))
 (let ((?x4646 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4634 (* 2 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4630 (* 4 (* d00 x00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4607 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4584 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4568 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r r))))
 (let ((?x4510 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4647 (+ (* 8 (* r00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r) ?x4510 (* (- 8) (* ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 ?x4466 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) ?x4568 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 ?x4466 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 r r)) ?x4584 (* d00 d00 q00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 ?x4466 r r)) ?x4607 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r r)) ?x4630 ?x4634 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) ?x4646)))
 (let (($x4655 (not (= ?x4647 0))))
 (let ((?x3531 (* 4 (* d00 r00))))
 (let ((?x4435 (+ ?x10114 ?x227 ?x4423 ?x259 ?x275 (* d d q) (* (- 2) (* d q)) ?x325 (* (- 4) (* d r)) ?x3531)))
 (let (($x4440 (= ?x4435 0)))
 (let (($x3684 (and $x4440 (or $x4655 $x4815 $x5303 $x7064))))
 (rewrite (= $x3684 $x1394)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x5867 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x237 (* (- 1) x)))
 (let ((?x178 (* 2 r)))
 (let ((?x940 (+ ?x178 ?x237 q)))
 (let ((?x10100 (+ 2 d)))
 (let ((?x7210 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x4792 (* 2 (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q q))))
 (let ((?x6079 (* 4 (* d00 x00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x3942 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x8823 (* 4 (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x1685 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r r q))))
 (let ((?x4827 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q q))))
 (let ((?x5296 (+ (* 8 (* r00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r q)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r) ?x4827 (* (- 8) (* ?x10100 ?x10100 ?x940 ?x940 ?x940 ?x940 r r r q)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) ?x1685 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r q)) ?x8823 (* d00 d00 q00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r)) ?x3942 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r r)) ?x6079 ?x4792 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) ?x7210)))
 (let (($x5303 (not (= ?x5296 0))))
 (let ((?x10908 (* (- 2) d)))
 (let ((?x4816 (+ (- 4) ?x178 ?x237 q ?x10908)))
 (let ((?x10907 (+ (- 8) q)))
 (let ((?x4657 (* (- 2) (* d00 q00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4927 (* 2 (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x3535 (* 4 (* d00 x00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4888 (* (- 4) (* d00 r00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4877 (* 4 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4867 (* (- 4) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r r))))
 (let ((?x4857 (* (- 1) (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x6997 (+ (* 8 (* r00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r)) (* (- 1) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r) ?x4857 (* (- 8) (* ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 ?x4816 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) ?x4867 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r)) (* 2 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) ?x4877 (* d00 d00 q00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r)) ?x4888 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r r)) ?x3535 ?x4927 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) ?x4657)))
 (let (($x7064 (not (= ?x6997 0))))
 (let ((?x10872 (* (- 1) d)))
 (let ((?x4658 (+ (- 2) ?x178 ?x237 q ?x10872)))
 (let ((?x10871 (+ (- 4) q)))
 (let ((?x4805 (* (- 2) (* d00 q00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4798 (* 2 (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4795 (* 4 (* d00 x00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4773 (* (- 4) (* d00 r00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4767 (* 4 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4699 (* (- 4) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r r))))
 (let ((?x4687 (* (- 1) (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4807 (+ (* 8 (* r00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r)) (* (- 1) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r) ?x4687 (* (- 8) (* ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 ?x4658 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) ?x4699 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r)) (* 2 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) ?x4767 (* d00 d00 q00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r)) ?x4773 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r r)) ?x4795 ?x4798 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) ?x4805)))
 (let (($x4815 (not (= ?x4807 0))))
 (let ((?x4466 (+ 2 ?x178 ?x237 q d)))
 (let ((?x9801 (+ 4 q)))
 (let ((?x4646 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4634 (* 2 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4630 (* 4 (* d00 x00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4607 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4584 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4568 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r r))))
 (let ((?x4510 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4647 (+ (* 8 (* r00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r) ?x4510 (* (- 8) (* ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 ?x4466 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) ?x4568 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 ?x4466 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 r r)) ?x4584 (* d00 d00 q00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 ?x4466 r r)) ?x4607 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r r)) ?x4630 ?x4634 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) ?x4646)))
 (let (($x4655 (not (= ?x4647 0))))
 (let ((?x3531 (* 4 (* d00 r00))))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x4423 (* 4 (* x d))))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x10114 (* 8 r)))
 (let ((?x4435 (+ ?x10114 ?x227 ?x4423 ?x259 ?x275 (* d d q) (* (- 2) (* d q)) ?x325 (* (- 4) (* d r)) ?x3531)))
 (let (($x4440 (= ?x4435 0)))
 (and $x4440 (or $x4655 $x4815 $x7064 $x5303)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x3683 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x10908 (* (- 2) d)))
 (let ((?x237 (* (- 1) x)))
 (let ((?x178 (* 2 r)))
 (let ((?x4816 (+ (- 4) ?x178 ?x237 q ?x10908)))
 (let ((?x10100 (+ 2 d)))
 (let ((?x10907 (+ (- 8) q)))
 (let ((?x4657 (* (- 2) (* d00 q00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4927 (* 2 (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x3535 (* 4 (* d00 x00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4888 (* (- 4) (* d00 r00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4877 (* 4 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x4867 (* (- 4) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r r))))
 (let ((?x4857 (* (- 1) (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r))))
 (let ((?x6997 (+ (* 8 (* r00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r)) (* (- 1) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r) ?x4857 (* (- 8) (* ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 ?x4816 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) ?x4867 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r)) (* 2 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) ?x4877 (* d00 d00 q00 ?x10907 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 ?x4816 r r)) ?x4888 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r r)) ?x3535 ?x4927 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4816 ?x4816 r r)) ?x4657)))
 (let (($x7064 (not (= ?x6997 0))))
 (let ((?x940 (+ ?x178 ?x237 q)))
 (let ((?x7210 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x4792 (* 2 (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q q))))
 (let ((?x6079 (* 4 (* d00 x00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x3942 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x8823 (* 4 (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 ?x940 r r r q))))
 (let ((?x1685 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r r q))))
 (let ((?x4827 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q q))))
 (let ((?x5296 (+ (* 8 (* r00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r q)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r) ?x4827 (* (- 8) (* ?x10100 ?x10100 ?x940 ?x940 ?x940 ?x940 r r r q)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) ?x1685 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r q)) ?x8823 (* d00 d00 q00 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r r q) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x940 ?x940 ?x940 r r)) ?x3942 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r r)) ?x6079 ?x4792 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x940 ?x940 r r)) ?x7210)))
 (let (($x5303 (not (= ?x5296 0))))
 (let ((?x10872 (* (- 1) d)))
 (let ((?x4658 (+ (- 2) ?x178 ?x237 q ?x10872)))
 (let ((?x10871 (+ (- 4) q)))
 (let ((?x4805 (* (- 2) (* d00 q00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4798 (* 2 (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4795 (* 4 (* d00 x00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4773 (* (- 4) (* d00 r00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4767 (* 4 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4699 (* (- 4) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r r))))
 (let ((?x4687 (* (- 1) (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r))))
 (let ((?x4807 (+ (* 8 (* r00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r)) (* (- 1) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r) ?x4687 (* (- 8) (* ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 ?x4658 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) ?x4699 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r)) (* 2 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) ?x4767 (* d00 d00 q00 ?x10871 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 ?x4658 r r)) ?x4773 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r r)) ?x4795 ?x4798 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4658 ?x4658 r r)) ?x4805)))
 (let (($x4815 (not (= ?x4807 0))))
 (let ((?x4466 (+ 2 ?x178 ?x237 q d)))
 (let ((?x9801 (+ 4 q)))
 (let ((?x4646 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4634 (* 2 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4630 (* 4 (* d00 x00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4607 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4584 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4568 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r r))))
 (let ((?x4510 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4466 ?x4466 ?x4466 r r r))))
 (let ((?x4647 (+ (* 8 (* r00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r) ?x4510 (* (- 8) (* ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 ?x4466 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) ?x4568 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 ?x4466 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 r r)) ?x4584 (* d00 d00 q00 ?x10100 ?x10100 ?x9801 ?x4466 ?x4466 ?x4466 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 ?x4466 r r)) ?x4607 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r r)) ?x4630 ?x4634 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4466 ?x4466 r r)) ?x4646)))
 (let (($x4655 (not (= ?x4647 0))))
 (let ((?x3531 (* 4 (* d00 r00))))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x4423 (* 4 (* x d))))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x10114 (* 8 r)))
 (let ((?x4435 (+ ?x10114 ?x227 ?x4423 ?x259 ?x275 (* d d q) (* (- 2) (* d q)) ?x325 (* (- 4) (* d r)) ?x3531)))
 (let (($x4440 (= ?x4435 0)))
 (let (($x3684 (and $x4440 (or $x4655 $x4815 $x5303 $x7064))))
 (let (($x5865 (and $x4440 (or $x4655 $x4815 $x7064 $x5303))))
 (rewrite (= $x5865 $x3684)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x220 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x180 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x177 (- q 8)))
 (let ((?x57 (+ d 2)))
 (let ((?x183 (- (* 8 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 r r))))
 (let ((?x188 (- (+ ?x183 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x180 ?x180 r r)) (* ?x57 ?x57 ?x57 ?x57 ?x177 ?x177 ?x180 ?x180 ?x180 r r r))))
 (let ((?x189 (- ?x188 (* 8 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 ?x180 r r r))))
 (let ((?x193 (- (+ ?x189 (* 8 ?x57 ?x57 ?x57 ?x180 ?x180 r00 r r)) (* 4 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 r r r r))))
 (let ((?x198 (+ ?x193 (* 4 ?x57 ?x57 ?x57 ?x57 ?x180 ?x180 ?x180 r r) (* 2 ?x57 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 r r) (* 4 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 ?x180 r r r) (* ?x57 ?x57 d00 d00 ?x177 q00 ?x180 ?x180 ?x180 r r r))))
 (let ((?x202 (- (- ?x198 (* 8 ?x57 ?x57 ?x57 ?x180 ?x180 ?x180 r r)) (* 4 ?x57 ?x57 d00 ?x177 ?x180 ?x180 ?x180 r00 r r r))))
 (let ((?x206 (- (+ ?x202 (* 4 ?x57 ?x57 ?x57 d00 ?x180 ?x180 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x180 ?x180 r r r))))
 (let ((?x209 (+ ?x206 (* 4 ?x57 ?x57 d00 ?x177 ?x180 ?x180 ?x180 r r r x00) (* 2 ?x57 ?x57 ?x57 ?x177 ?x177 ?x180 ?x180 ?x180 r r r))))
 (let ((?x214 (- (- ?x209 (* 4 ?x57 ?x57 ?x57 d00 ?x180 ?x180 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x180 ?x180 r r))))
 (let ((?x215 (- ?x214 (* 2 ?x57 ?x57 d00 ?x177 q00 ?x180 ?x180 ?x180 r r r))))
 (let ((?x139 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x137 (- q 4)))
 (let ((?x142 (- (* 8 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 r r))))
 (let ((?x147 (- (+ ?x142 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x139 ?x139 r r)) (* ?x57 ?x57 ?x57 ?x57 ?x137 ?x137 ?x139 ?x139 ?x139 r r r))))
 (let ((?x148 (- ?x147 (* 8 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 ?x139 r r r))))
 (let ((?x152 (- (+ ?x148 (* 8 ?x57 ?x57 ?x57 ?x139 ?x139 r00 r r)) (* 4 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 r r r r))))
 (let ((?x157 (+ ?x152 (* 4 ?x57 ?x57 ?x57 ?x57 ?x139 ?x139 ?x139 r r) (* 2 ?x57 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 r r) (* 4 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 ?x139 r r r) (* ?x57 ?x57 d00 d00 ?x137 q00 ?x139 ?x139 ?x139 r r r))))
 (let ((?x161 (- (- ?x157 (* 8 ?x57 ?x57 ?x57 ?x139 ?x139 ?x139 r r)) (* 4 ?x57 ?x57 d00 ?x137 ?x139 ?x139 ?x139 r00 r r r))))
 (let ((?x165 (- (+ ?x161 (* 4 ?x57 ?x57 ?x57 d00 ?x139 ?x139 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x139 ?x139 r r r))))
 (let ((?x168 (+ ?x165 (* 4 ?x57 ?x57 d00 ?x137 ?x139 ?x139 ?x139 r r r x00) (* 2 ?x57 ?x57 ?x57 ?x137 ?x137 ?x139 ?x139 ?x139 r r r))))
 (let ((?x173 (- (- ?x168 (* 4 ?x57 ?x57 ?x57 d00 ?x139 ?x139 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x139 ?x139 r r))))
 (let ((?x174 (- ?x173 (* 2 ?x57 ?x57 d00 ?x137 q00 ?x139 ?x139 ?x139 r r r))))
 (let ((?x59 (* 2 r)))
 (let ((?x60 (- ?x59 x)))
 (let ((?x99 (+ ?x60 q)))
 (let ((?x102 (- (* 8 ?x57 ?x57 q ?x99 ?x99 ?x99 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 q ?x99 ?x99 r r))))
 (let ((?x107 (- (+ ?x102 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x99 ?x99 r r)) (* ?x57 ?x57 ?x57 ?x57 q q ?x99 ?x99 ?x99 r r r))))
 (let ((?x108 (- ?x107 (* 8 ?x57 ?x57 q ?x99 ?x99 ?x99 ?x99 r r r))))
 (let ((?x112 (- (+ ?x108 (* 8 ?x57 ?x57 ?x57 ?x99 ?x99 r00 r r)) (* 4 ?x57 ?x57 ?x57 q ?x99 ?x99 ?x99 r r r r))))
 (let ((?x117 (+ ?x112 (* 4 ?x57 ?x57 ?x57 ?x57 ?x99 ?x99 ?x99 r r) (* 2 ?x57 ?x57 ?x57 ?x57 q ?x99 ?x99 r r) (* 4 ?x57 ?x57 ?x57 q ?x99 ?x99 ?x99 ?x99 r r r) (* ?x57 ?x57 d00 d00 q q00 ?x99 ?x99 ?x99 r r r))))
 (let ((?x121 (- (- ?x117 (* 8 ?x57 ?x57 ?x57 ?x99 ?x99 ?x99 r r)) (* 4 ?x57 ?x57 d00 q ?x99 ?x99 ?x99 r00 r r r))))
 (let ((?x125 (- (+ ?x121 (* 4 ?x57 ?x57 ?x57 d00 ?x99 ?x99 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x99 ?x99 r r r))))
 (let ((?x128 (+ ?x125 (* 4 ?x57 ?x57 d00 q ?x99 ?x99 ?x99 r r r x00) (* 2 ?x57 ?x57 ?x57 q q ?x99 ?x99 ?x99 r r r))))
 (let ((?x133 (- (- ?x128 (* 4 ?x57 ?x57 ?x57 d00 ?x99 ?x99 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x99 ?x99 r r))))
 (let ((?x134 (- ?x133 (* 2 ?x57 ?x57 d00 q q00 ?x99 ?x99 ?x99 r r r))))
 (let ((?x61 (+ ?x60 q d 2)))
 (let ((?x58 (+ q 4)))
 (let ((?x64 (- (* 8 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 r r))))
 (let ((?x69 (- (+ ?x64 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x61 ?x61 r r)) (* ?x57 ?x57 ?x57 ?x57 ?x58 ?x58 ?x61 ?x61 ?x61 r r r))))
 (let ((?x70 (- ?x69 (* 8 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 ?x61 r r r))))
 (let ((?x74 (- (+ ?x70 (* 8 ?x57 ?x57 ?x57 ?x61 ?x61 r00 r r)) (* 4 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 r r r r))))
 (let ((?x79 (+ ?x74 (* 4 ?x57 ?x57 ?x57 ?x57 ?x61 ?x61 ?x61 r r) (* 2 ?x57 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 r r) (* 4 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 ?x61 r r r) (* ?x57 ?x57 d00 d00 ?x58 q00 ?x61 ?x61 ?x61 r r r))))
 (let ((?x83 (- (- ?x79 (* 8 ?x57 ?x57 ?x57 ?x61 ?x61 ?x61 r r)) (* 4 ?x57 ?x57 d00 ?x58 ?x61 ?x61 ?x61 r00 r r r))))
 (let ((?x87 (- (+ ?x83 (* 4 ?x57 ?x57 ?x57 d00 ?x61 ?x61 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x61 ?x61 r r r))))
 (let ((?x90 (+ ?x87 (* 4 ?x57 ?x57 d00 ?x58 ?x61 ?x61 ?x61 r r r x00) (* 2 ?x57 ?x57 ?x57 ?x58 ?x58 ?x61 ?x61 ?x61 r r r))))
 (let ((?x95 (- (- ?x90 (* 4 ?x57 ?x57 ?x57 d00 ?x61 ?x61 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x61 ?x61 r r))))
 (let ((?x96 (- ?x95 (* 2 ?x57 ?x57 d00 ?x58 q00 ?x61 ?x61 ?x61 r r r))))
 (let (($x218 (or (not (= ?x96 0)) (not (= ?x134 0)) (not (= ?x174 0)) (not (= ?x215 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) (* 4 d00 x00))))
 (let ((?x50 (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) (* 2 d00 q00))))
 (and (= (+ (- ?x50 (* 4 d r)) (* 4 d00 r00)) 0) $x218)))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x2596 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x237 (* (- 1) x)))
 (let ((?x59 (* 2 r)))
 (let ((?x2605 (+ ?x59 ?x237 q)))
 (let ((?x224 (+ 2 d)))
 (let ((?x4738 (* (- 2) (* d00 q00 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q))))
 (let ((?x4633 (* 2 (* ?x224 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q q))))
 (let ((?x4625 (* 4 (* d00 x00 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q))))
 (let ((?x4535 (* (- 4) (* d00 r00 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q))))
 (let ((?x4397 (* 4 (* ?x224 ?x224 ?x224 ?x2605 ?x2605 ?x2605 ?x2605 r r r q))))
 (let ((?x4339 (* (- 4) (* ?x224 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r r q))))
 (let ((?x3660 (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q q))))
 (let ((?x4740 (+ (* 8 (* r00 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q)) (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r q)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r) ?x3660 (* (- 8) (* ?x224 ?x224 ?x2605 ?x2605 ?x2605 ?x2605 r r r q)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r)) ?x4339 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r)) (* 2 (* ?x224 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r q)) ?x4397 (* d00 d00 q00 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q) (* (- 8) (* ?x224 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r)) ?x4535 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r r)) ?x4625 ?x4633 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r)) ?x4738)))
 (let ((?x9745 (* (- 2) d)))
 (let ((?x4388 (+ (- 4) ?x59 ?x237 q ?x9745)))
 (let ((?x6647 (+ (- 8) q)))
 (let ((?x4067 (* (- 2) (* d00 q00 ?x6647 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r))))
 (let ((?x6644 (* 2 (* ?x6647 ?x6647 ?x224 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r))))
 (let ((?x9618 (* 4 (* d00 x00 ?x6647 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r))))
 (let ((?x3949 (* (- 4) (* d00 r00 ?x6647 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r))))
 (let ((?x4884 (* 4 (* ?x6647 ?x224 ?x224 ?x224 ?x4388 ?x4388 ?x4388 ?x4388 r r r))))
 (let ((?x4818 (* (- 4) (* ?x6647 ?x224 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r r))))
 (let ((?x4641 (* (- 1) (* ?x6647 ?x6647 ?x224 ?x224 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r))))
 (let ((?x6300 (+ (* 8 (* r00 ?x6647 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r)) (* (- 1) (* ?x6647 ?x224 ?x224 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r) ?x4641 (* (- 8) (* ?x6647 ?x224 ?x224 ?x4388 ?x4388 ?x4388 ?x4388 r r r)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r)) ?x4818 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r)) (* 2 (* ?x6647 ?x224 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r)) ?x4884 (* d00 d00 q00 ?x6647 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r) (* (- 8) (* ?x224 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r)) ?x3949 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r r)) ?x9618 ?x6644 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r)) ?x4067)))
 (let ((?x1478 (* (- 1) d)))
 (let ((?x3656 (+ (- 2) ?x59 ?x237 q ?x1478)))
 (let ((?x1491 (+ (- 4) q)))
 (let ((?x9363 (* (- 2) (* d00 q00 ?x1491 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r))))
 (let ((?x4859 (* 2 (* ?x1491 ?x1491 ?x224 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r))))
 (let ((?x4849 (* 4 (* d00 x00 ?x1491 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r))))
 (let ((?x4777 (* (- 4) (* d00 r00 ?x1491 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r))))
 (let ((?x4651 (* 4 (* ?x1491 ?x224 ?x224 ?x224 ?x3656 ?x3656 ?x3656 ?x3656 r r r))))
 (let ((?x4590 (* (- 4) (* ?x1491 ?x224 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r r))))
 (let ((?x4380 (* (- 1) (* ?x1491 ?x1491 ?x224 ?x224 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r))))
 (let ((?x6764 (+ (* 8 (* r00 ?x1491 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r)) (* (- 1) (* ?x1491 ?x224 ?x224 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r) ?x4380 (* (- 8) (* ?x1491 ?x224 ?x224 ?x3656 ?x3656 ?x3656 ?x3656 r r r)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r)) ?x4590 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r)) (* 2 (* ?x1491 ?x224 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r)) ?x4651 (* d00 d00 q00 ?x1491 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r) (* (- 8) (* ?x224 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r)) ?x4777 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r r)) ?x4849 ?x4859 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r)) ?x9363)))
 (let ((?x4177 (+ 2 ?x59 ?x237 q d)))
 (let ((?x229 (+ 4 q)))
 (let ((?x4547 (* (- 2) (* d00 q00 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 r r r))))
 (let ((?x4439 (* 2 (* ?x224 ?x224 ?x224 ?x229 ?x229 ?x4177 ?x4177 ?x4177 r r r))))
 (let ((?x4431 (* 4 (* d00 x00 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 r r r))))
 (let ((?x4355 (* (- 4) (* d00 r00 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 r r r))))
 (let ((?x4286 (* 4 (* ?x224 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 ?x4177 r r r))))
 (let ((?x3753 (* (- 4) (* ?x224 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 r r r r))))
 (let ((?x3458 (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x229 ?x229 ?x4177 ?x4177 ?x4177 r r r))))
 (let ((?x4554 (+ (* 8 (* r00 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 r r r)) (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x224 ?x229 ?x4177 ?x4177 r r)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x4177 ?x4177 r r) ?x3458 (* (- 8) (* ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 ?x4177 r r r)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x4177 ?x4177 r r)) ?x3753 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x4177 ?x4177 ?x4177 r r)) (* 2 (* ?x224 ?x224 ?x224 ?x224 ?x229 ?x4177 ?x4177 r r)) ?x4286 (* d00 d00 q00 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 r r r) (* (- 8) (* ?x224 ?x224 ?x224 ?x4177 ?x4177 ?x4177 r r)) ?x4355 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x4177 ?x4177 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x4177 ?x4177 r r r)) ?x4431 ?x4439 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x4177 ?x4177 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x4177 ?x4177 r r)) ?x4547)))
 (let (($x4086 (or (not (= ?x4554 0)) (not (= ?x6764 0)) (not (= ?x6300 0)) (not (= ?x4740 0)))))
 (let ((?x3531 (* 4 (* d00 r00))))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x44 (* d d q)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x30 (* 8 r)))
 (let ((?x3563 (+ ?x30 ?x227 (* 4 (* x d)) ?x259 ?x275 ?x44 (* (- 2) (* d q)) ?x325 (* (- 4) (* d r)) ?x3531)))
 (and (= ?x3563 0) $x4086))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x2602 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x237 (* (- 1) x)))
 (let ((?x59 (* 2 r)))
 (let ((?x2605 (+ ?x59 ?x237 q)))
 (let ((?x224 (+ 2 d)))
 (let ((?x4738 (* (- 2) (* d00 q00 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q))))
 (let ((?x4633 (* 2 (* ?x224 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q q))))
 (let ((?x4625 (* 4 (* d00 x00 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q))))
 (let ((?x4535 (* (- 4) (* d00 r00 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q))))
 (let ((?x4397 (* 4 (* ?x224 ?x224 ?x224 ?x2605 ?x2605 ?x2605 ?x2605 r r r q))))
 (let ((?x4339 (* (- 4) (* ?x224 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r r q))))
 (let ((?x3660 (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q q))))
 (let ((?x4740 (+ (* 8 (* r00 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q)) (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r q)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r) ?x3660 (* (- 8) (* ?x224 ?x224 ?x2605 ?x2605 ?x2605 ?x2605 r r r q)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r)) ?x4339 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r)) (* 2 (* ?x224 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r q)) ?x4397 (* d00 d00 q00 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r r q) (* (- 8) (* ?x224 ?x224 ?x224 ?x2605 ?x2605 ?x2605 r r)) ?x4535 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r r)) ?x4625 ?x4633 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x2605 ?x2605 r r)) ?x4738)))
 (let ((?x9745 (* (- 2) d)))
 (let ((?x4388 (+ (- 4) ?x59 ?x237 q ?x9745)))
 (let ((?x6647 (+ (- 8) q)))
 (let ((?x4067 (* (- 2) (* d00 q00 ?x6647 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r))))
 (let ((?x6644 (* 2 (* ?x6647 ?x6647 ?x224 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r))))
 (let ((?x9618 (* 4 (* d00 x00 ?x6647 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r))))
 (let ((?x3949 (* (- 4) (* d00 r00 ?x6647 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r))))
 (let ((?x4884 (* 4 (* ?x6647 ?x224 ?x224 ?x224 ?x4388 ?x4388 ?x4388 ?x4388 r r r))))
 (let ((?x4818 (* (- 4) (* ?x6647 ?x224 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r r))))
 (let ((?x4641 (* (- 1) (* ?x6647 ?x6647 ?x224 ?x224 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r))))
 (let ((?x6300 (+ (* 8 (* r00 ?x6647 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r)) (* (- 1) (* ?x6647 ?x224 ?x224 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r) ?x4641 (* (- 8) (* ?x6647 ?x224 ?x224 ?x4388 ?x4388 ?x4388 ?x4388 r r r)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r)) ?x4818 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r)) (* 2 (* ?x6647 ?x224 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r)) ?x4884 (* d00 d00 q00 ?x6647 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r r) (* (- 8) (* ?x224 ?x224 ?x224 ?x4388 ?x4388 ?x4388 r r)) ?x3949 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r r)) ?x9618 ?x6644 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x4388 ?x4388 r r)) ?x4067)))
 (let ((?x1478 (* (- 1) d)))
 (let ((?x3656 (+ (- 2) ?x59 ?x237 q ?x1478)))
 (let ((?x1491 (+ (- 4) q)))
 (let ((?x9363 (* (- 2) (* d00 q00 ?x1491 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r))))
 (let ((?x4859 (* 2 (* ?x1491 ?x1491 ?x224 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r))))
 (let ((?x4849 (* 4 (* d00 x00 ?x1491 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r))))
 (let ((?x4777 (* (- 4) (* d00 r00 ?x1491 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r))))
 (let ((?x4651 (* 4 (* ?x1491 ?x224 ?x224 ?x224 ?x3656 ?x3656 ?x3656 ?x3656 r r r))))
 (let ((?x4590 (* (- 4) (* ?x1491 ?x224 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r r))))
 (let ((?x4380 (* (- 1) (* ?x1491 ?x1491 ?x224 ?x224 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r))))
 (let ((?x6764 (+ (* 8 (* r00 ?x1491 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r)) (* (- 1) (* ?x1491 ?x224 ?x224 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r) ?x4380 (* (- 8) (* ?x1491 ?x224 ?x224 ?x3656 ?x3656 ?x3656 ?x3656 r r r)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r)) ?x4590 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r)) (* 2 (* ?x1491 ?x224 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r)) ?x4651 (* d00 d00 q00 ?x1491 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r r) (* (- 8) (* ?x224 ?x224 ?x224 ?x3656 ?x3656 ?x3656 r r)) ?x4777 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r r)) ?x4849 ?x4859 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x3656 ?x3656 r r)) ?x9363)))
 (let ((?x4177 (+ 2 ?x59 ?x237 q d)))
 (let ((?x229 (+ 4 q)))
 (let ((?x4547 (* (- 2) (* d00 q00 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 r r r))))
 (let ((?x4439 (* 2 (* ?x224 ?x224 ?x224 ?x229 ?x229 ?x4177 ?x4177 ?x4177 r r r))))
 (let ((?x4431 (* 4 (* d00 x00 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 r r r))))
 (let ((?x4355 (* (- 4) (* d00 r00 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 r r r))))
 (let ((?x4286 (* 4 (* ?x224 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 ?x4177 r r r))))
 (let ((?x3753 (* (- 4) (* ?x224 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 r r r r))))
 (let ((?x3458 (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x229 ?x229 ?x4177 ?x4177 ?x4177 r r r))))
 (let ((?x4554 (+ (* 8 (* r00 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 r r r)) (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x224 ?x229 ?x4177 ?x4177 r r)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x4177 ?x4177 r r) ?x3458 (* (- 8) (* ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 ?x4177 r r r)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x4177 ?x4177 r r)) ?x3753 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x4177 ?x4177 ?x4177 r r)) (* 2 (* ?x224 ?x224 ?x224 ?x224 ?x229 ?x4177 ?x4177 r r)) ?x4286 (* d00 d00 q00 ?x224 ?x224 ?x229 ?x4177 ?x4177 ?x4177 r r r) (* (- 8) (* ?x224 ?x224 ?x224 ?x4177 ?x4177 ?x4177 r r)) ?x4355 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x4177 ?x4177 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x4177 ?x4177 r r r)) ?x4431 ?x4439 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x4177 ?x4177 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x4177 ?x4177 r r)) ?x4547)))
 (let (($x4086 (or (not (= ?x4554 0)) (not (= ?x6764 0)) (not (= ?x6300 0)) (not (= ?x4740 0)))))
 (let ((?x3531 (* 4 (* d00 r00))))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x44 (* d d q)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x30 (* 8 r)))
 (let ((?x3563 (+ ?x30 ?x227 (* 4 (* x d)) ?x259 ?x275 ?x44 (* (- 2) (* d q)) ?x325 (* (- 4) (* d r)) ?x3531)))
 (let (($x4467 (and (= ?x3563 0) $x4086)))
 (let ((?x180 (- (- (+ (- ?x59 x) q) (* 2 d)) 4)))
 (let ((?x177 (- q 8)))
 (let ((?x57 (+ d 2)))
 (let ((?x183 (- (* 8 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 r r))))
 (let ((?x188 (- (+ ?x183 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x180 ?x180 r r)) (* ?x57 ?x57 ?x57 ?x57 ?x177 ?x177 ?x180 ?x180 ?x180 r r r))))
 (let ((?x189 (- ?x188 (* 8 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 ?x180 r r r))))
 (let ((?x193 (- (+ ?x189 (* 8 ?x57 ?x57 ?x57 ?x180 ?x180 r00 r r)) (* 4 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 r r r r))))
 (let ((?x198 (+ ?x193 (* 4 ?x57 ?x57 ?x57 ?x57 ?x180 ?x180 ?x180 r r) (* 2 ?x57 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 r r) (* 4 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 ?x180 r r r) (* ?x57 ?x57 d00 d00 ?x177 q00 ?x180 ?x180 ?x180 r r r))))
 (let ((?x202 (- (- ?x198 (* 8 ?x57 ?x57 ?x57 ?x180 ?x180 ?x180 r r)) (* 4 ?x57 ?x57 d00 ?x177 ?x180 ?x180 ?x180 r00 r r r))))
 (let ((?x206 (- (+ ?x202 (* 4 ?x57 ?x57 ?x57 d00 ?x180 ?x180 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x180 ?x180 r r r))))
 (let ((?x209 (+ ?x206 (* 4 ?x57 ?x57 d00 ?x177 ?x180 ?x180 ?x180 r r r x00) (* 2 ?x57 ?x57 ?x57 ?x177 ?x177 ?x180 ?x180 ?x180 r r r))))
 (let ((?x214 (- (- ?x209 (* 4 ?x57 ?x57 ?x57 d00 ?x180 ?x180 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x180 ?x180 r r))))
 (let ((?x215 (- ?x214 (* 2 ?x57 ?x57 d00 ?x177 q00 ?x180 ?x180 ?x180 r r r))))
 (let ((?x139 (- (- (+ (- ?x59 x) q) d) 2)))
 (let ((?x137 (- q 4)))
 (let ((?x142 (- (* 8 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 r r))))
 (let ((?x147 (- (+ ?x142 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x139 ?x139 r r)) (* ?x57 ?x57 ?x57 ?x57 ?x137 ?x137 ?x139 ?x139 ?x139 r r r))))
 (let ((?x148 (- ?x147 (* 8 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 ?x139 r r r))))
 (let ((?x152 (- (+ ?x148 (* 8 ?x57 ?x57 ?x57 ?x139 ?x139 r00 r r)) (* 4 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 r r r r))))
 (let ((?x157 (+ ?x152 (* 4 ?x57 ?x57 ?x57 ?x57 ?x139 ?x139 ?x139 r r) (* 2 ?x57 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 r r) (* 4 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 ?x139 r r r) (* ?x57 ?x57 d00 d00 ?x137 q00 ?x139 ?x139 ?x139 r r r))))
 (let ((?x161 (- (- ?x157 (* 8 ?x57 ?x57 ?x57 ?x139 ?x139 ?x139 r r)) (* 4 ?x57 ?x57 d00 ?x137 ?x139 ?x139 ?x139 r00 r r r))))
 (let ((?x165 (- (+ ?x161 (* 4 ?x57 ?x57 ?x57 d00 ?x139 ?x139 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x139 ?x139 r r r))))
 (let ((?x168 (+ ?x165 (* 4 ?x57 ?x57 d00 ?x137 ?x139 ?x139 ?x139 r r r x00) (* 2 ?x57 ?x57 ?x57 ?x137 ?x137 ?x139 ?x139 ?x139 r r r))))
 (let ((?x173 (- (- ?x168 (* 4 ?x57 ?x57 ?x57 d00 ?x139 ?x139 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x139 ?x139 r r))))
 (let ((?x174 (- ?x173 (* 2 ?x57 ?x57 d00 ?x137 q00 ?x139 ?x139 ?x139 r r r))))
 (let ((?x60 (- ?x59 x)))
 (let ((?x99 (+ ?x60 q)))
 (let ((?x102 (- (* 8 ?x57 ?x57 q ?x99 ?x99 ?x99 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 q ?x99 ?x99 r r))))
 (let ((?x107 (- (+ ?x102 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x99 ?x99 r r)) (* ?x57 ?x57 ?x57 ?x57 q q ?x99 ?x99 ?x99 r r r))))
 (let ((?x108 (- ?x107 (* 8 ?x57 ?x57 q ?x99 ?x99 ?x99 ?x99 r r r))))
 (let ((?x112 (- (+ ?x108 (* 8 ?x57 ?x57 ?x57 ?x99 ?x99 r00 r r)) (* 4 ?x57 ?x57 ?x57 q ?x99 ?x99 ?x99 r r r r))))
 (let ((?x117 (+ ?x112 (* 4 ?x57 ?x57 ?x57 ?x57 ?x99 ?x99 ?x99 r r) (* 2 ?x57 ?x57 ?x57 ?x57 q ?x99 ?x99 r r) (* 4 ?x57 ?x57 ?x57 q ?x99 ?x99 ?x99 ?x99 r r r) (* ?x57 ?x57 d00 d00 q q00 ?x99 ?x99 ?x99 r r r))))
 (let ((?x121 (- (- ?x117 (* 8 ?x57 ?x57 ?x57 ?x99 ?x99 ?x99 r r)) (* 4 ?x57 ?x57 d00 q ?x99 ?x99 ?x99 r00 r r r))))
 (let ((?x125 (- (+ ?x121 (* 4 ?x57 ?x57 ?x57 d00 ?x99 ?x99 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x99 ?x99 r r r))))
 (let ((?x128 (+ ?x125 (* 4 ?x57 ?x57 d00 q ?x99 ?x99 ?x99 r r r x00) (* 2 ?x57 ?x57 ?x57 q q ?x99 ?x99 ?x99 r r r))))
 (let ((?x133 (- (- ?x128 (* 4 ?x57 ?x57 ?x57 d00 ?x99 ?x99 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x99 ?x99 r r))))
 (let ((?x134 (- ?x133 (* 2 ?x57 ?x57 d00 q q00 ?x99 ?x99 ?x99 r r r))))
 (let ((?x61 (+ ?x60 q d 2)))
 (let ((?x58 (+ q 4)))
 (let ((?x64 (- (* 8 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 r r))))
 (let ((?x69 (- (+ ?x64 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x61 ?x61 r r)) (* ?x57 ?x57 ?x57 ?x57 ?x58 ?x58 ?x61 ?x61 ?x61 r r r))))
 (let ((?x70 (- ?x69 (* 8 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 ?x61 r r r))))
 (let ((?x74 (- (+ ?x70 (* 8 ?x57 ?x57 ?x57 ?x61 ?x61 r00 r r)) (* 4 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 r r r r))))
 (let ((?x79 (+ ?x74 (* 4 ?x57 ?x57 ?x57 ?x57 ?x61 ?x61 ?x61 r r) (* 2 ?x57 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 r r) (* 4 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 ?x61 r r r) (* ?x57 ?x57 d00 d00 ?x58 q00 ?x61 ?x61 ?x61 r r r))))
 (let ((?x83 (- (- ?x79 (* 8 ?x57 ?x57 ?x57 ?x61 ?x61 ?x61 r r)) (* 4 ?x57 ?x57 d00 ?x58 ?x61 ?x61 ?x61 r00 r r r))))
 (let ((?x87 (- (+ ?x83 (* 4 ?x57 ?x57 ?x57 d00 ?x61 ?x61 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x61 ?x61 r r r))))
 (let ((?x90 (+ ?x87 (* 4 ?x57 ?x57 d00 ?x58 ?x61 ?x61 ?x61 r r r x00) (* 2 ?x57 ?x57 ?x57 ?x58 ?x58 ?x61 ?x61 ?x61 r r r))))
 (let ((?x95 (- (- ?x90 (* 4 ?x57 ?x57 ?x57 d00 ?x61 ?x61 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x61 ?x61 r r))))
 (let ((?x96 (- ?x95 (* 2 ?x57 ?x57 d00 ?x58 q00 ?x61 ?x61 ?x61 r r r))))
 (let (($x218 (or (not (= ?x96 0)) (not (= ?x134 0)) (not (= ?x174 0)) (not (= ?x215 0)))))
 (let ((?x42 (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) (* 4 d00 x00))))
 (let ((?x50 (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) (* 2 d00 q00))))
 (let (($x219 (and (= (+ (- ?x50 (* 4 d r)) (* 4 d00 r00)) 0) $x218)))
 (rewrite (= $x219 $x4467)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x7129 (trans (quant-intro (proof-bind ?x2602) (= $x220 $x2596)) (elim-unused (= $x2596 $x5867)) (= $x220 $x5867))))
 (let ((@x27 (asserted $x220)))
 (let ((@x3672 (mp (mp @x27 @x7129 $x5867) (quant-intro (proof-bind ?x3683) (= $x5867 $x3679)) $x3679)))
 (let ((@x1612 (mp (mp @x3672 (rewrite (= $x3679 $x3679)) $x3679) (quant-intro (proof-bind ?x5875) (= $x3679 $x3858)) $x3858)))
 (let ((@x1537 (mp (mp~ @x1612 (sk (~ $x3858 $x2313)) $x2313) (rewrite (= $x2313 $x8131)) $x8131)))
 (let ((@x9721 (and-elim @x1537 $x1634)))
 (let ((@x2086 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1634) $x5198)) @x9721 $x5198)))
 (let (($x6445 (>= ?x6095 0)))
 (let ((@x8787 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1634) $x6445)) @x9721 $x6445)))
 (let (($x6889 (not (<= ?x6146 0))))
 (let (($x8708 (<= ?x7675 0)))
 (let (($x1288 (>= ?x7675 0)))
 (let ((@x6207 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x8073 (not $x8708) (not $x1288))) (lemma ((_ th-lemma arith) (hypothesis (not $x1288)) @x8787 @x2086 false) $x1288) (lemma ((_ th-lemma arith) (hypothesis (not $x8708)) @x8787 @x2086 false) $x8708) $x8073)))
 (let (($x4223 (>= ?x1977 0)))
 (let (($x9604 (<= ?x1977 0)))
 (let ((@x9789 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x9184 (not $x9604) (not $x4223))) (lemma ((_ th-lemma arith) (hypothesis (not $x9604)) @x8787 @x2086 false) $x9604) (lemma ((_ th-lemma arith) (hypothesis (not $x4223)) @x8787 @x2086 false) $x4223) $x9184)))
 (let (($x1709 (>= ?x3485 0)))
 (let (($x3142 (<= ?x3485 0)))
 (let ((@x8221 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x5329 (not $x3142) (not $x1709))) (lemma ((_ th-lemma arith) (hypothesis (not $x3142)) @x8787 @x2086 false) $x3142) (lemma ((_ th-lemma arith) (hypothesis (not $x1709)) @x8787 @x2086 false) $x1709) $x5329)))
 (let ((@x2273 (unit-resolution (unit-resolution (and-elim @x1537 $x2756) @x8221 @x9789 (or $x3904 $x9422)) @x6207 $x9422)))
 (let (($x7899 (>= ?x6146 0)))
 (let ((@x7970 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x5543 $x6889 (not $x7899))) (lemma ((_ th-lemma arith) (hypothesis (not $x7899)) @x8787 @x2086 false) $x7899) @x2273 $x6889)))
 ((_ th-lemma arith) @x7970 @x8787 @x2086 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        10
 :arith-assert-upper        11
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-gcd-tests           6
 :arith-grobner             8
 :arith-max-min             5360
 :arith-nonlinear-horner    74
 :arith-num-rows            13
 :arith-patches             6
 :arith-patches_succ        6
 :arith-pivots              5
 :arith-tableau-max-columns 374
 :arith-tableau-max-rows    13
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                6.18
 :memory                    4.39
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                26992854
 :num-checks                1
 :propagations              36
 :rlimit-count              136641
 :time                      0.16
 :total-time                0.19)
