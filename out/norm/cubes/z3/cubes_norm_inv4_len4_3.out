unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x1006 (* (- 2) n!0)))
 (let ((?x997 (* 3 c!3)))
 (let ((?x790 (* k!2 n!0)))
 (let ((?x995 (* (- 1) ?x790)))
 (let ((?x762 (+ k!2 ?x995 ?x997 ?x1006)))
 (let (($x920 (<= ?x762 1)))
 (let (($x924 (= ?x762 1)))
 (let ((?x156 (* 18 (* m!1 n!0 n!0 n!0))))
 (let ((?x1311 (+ m!1 k!2)))
 (let ((?x926 (+ 6 m!1)))
 (let ((?x669 (+ 1 n!0)))
 (let ((?x286 (* (- 2) (* m!1 m!1 m!1 n!0))))
 (let ((?x159 (* (- 6) (* k!2 k!2 n!0 n!0))))
 (let ((?x905 (* (- 2) (* m!1 m!1))))
 (let ((?x574 (* 18 (* k!2 n!0 n!0 n!0))))
 (let ((?x833 (* 60 (* m!1 n!0 n!0))))
 (let ((?x831 (* 60 (* k!2 n!0 n!0))))
 (let ((?x1018 (* (- 1) (* k!2 k!2 k!2 k!2))))
 (let ((?x558 (* 66 ?x790)))
 (let ((?x985 (* 4 (* m!1 m!1 n!0 n!0))))
 (let ((?x629 (* 24 k!2)))
 (let ((?x482 (* (- 1) (* m!1 m!1 m!1))))
 (let ((?x633 (* (- 1) (* m!1 m!1 n!0))))
 (let ((?x659 (* k!2 k!2)))
 (let ((?x638 (* (- 6) ?x659)))
 (let ((?x1321 (* (- 12) (* k!2 k!2 n!0))))
 (let ((?x470 (* (- 1) (* k!2 k!2 k!2 k!2 n!0))))
 (let ((?x929 (* 24 m!1)))
 (let ((?x168 (* (- 1) (* m!1 m!1 m!1 n!0 n!0))))
 (let ((?x829 (* 66 (* m!1 n!0))))
 (let ((?x179 (* 3 (* m!1 m!1 n!0 n!0 n!0))))
 (let ((?x842 (+ ?x179 (* (- 3) (* m!1 m!1 k!2 k!2 n!0)) (* (- 1) (* m!1 m!1 m!1 k!2 n!0)) (* (- 1) (* m!1 k!2 k!2 n!0 n!0)) ?x829 (* (- 1) (* m!1 m!1 m!1 c!3 n!0)) (* (- 1) (* m!1 m!1 m!1 c!3)) (* (- 3) (* ?x669 ?x669 ?x669 ?x669 ?x926 ?x926 ?x926 ?x1311)) (* (- 1) (* k!2 k!2 k!2 c!3 n!0)) (* (- 3) (* m!1 m!1 k!2 c!3 n!0)) (* (- 1) (* ?x669 ?x669 ?x669 ?x926 ?x926 ?x1311 ?x1311 ?x1311 ?x1311)) (* (- 3) (* m!1 m!1 k!2 c!3)) (* 3 (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x926 ?x926 ?x1311 ?x1311 ?x1311)) (* (- 1) (* m!1 m!1 m!1 k!2)) (* (- 2) (* m!1 k!2 k!2 n!0)) ?x168 (* ?x669 ?x669 ?x926 ?x926 ?x926 ?x1311 ?x1311) (* 3 (* ?x669 ?x669 ?x669 ?x669 ?x926 ?x926 ?x1311 ?x1311 ?x1311)) (* (- 3) (* m!1 m!1 k!2 k!2)) ?x929 (* ?x669 ?x669 ?x669 ?x926 ?x926 ?x1311 ?x1311 ?x1311) ?x470 (* (- 2) (* m!1 k!2 n!0 n!0)) ?x1321 (* (- 3) (* m!1 k!2 k!2 c!3 n!0)) (* (- 3) (* ?x669 ?x669 ?x669 ?x926 ?x926 ?x926 ?x1311)) (* (- 3) (* m!1 k!2 k!2 k!2)) ?x638 ?x633 ?x482 ?x629 (* (- 3) (* m!1 k!2 k!2 k!2 n!0)) (* (- 8) (* m!1 k!2)) ?x985 ?x558 ?x1018 (* (- 1) (* m!1 k!2 k!2)) ?x831 ?x833 (* ?x669 ?x1311 ?x1311 ?x1311 ?x1311 (+ k!2 c!3)) ?x574 (* (- 3) (* ?x669 ?x669 ?x669 ?x1311 ?x1311 ?x1311 (+ k!2 c!3))) (* (- 3) (* m!1 k!2 k!2 c!3)) (* (- 13) (* m!1 k!2 n!0)) ?x905 (* (- 2) (* m!1 m!1 k!2)) ?x159 (* 3 (* m!1 k!2 n!0 n!0 n!0)) (* (- 3) (* ?x669 ?x669 ?x1311 ?x1311 ?x1311 (+ k!2 c!3))) (* (- 1) (* ?x669 ?x669 ?x926 ?x926 ?x926 ?x1311)) (* (- 2) (* m!1 m!1 k!2 n!0 n!0)) ?x286 (* 3 (* ?x669 ?x669 ?x669 ?x669 ?x926 ?x1311)) (* (- 4) (* m!1 m!1 k!2 n!0)) ?x156 (* (- 1) (* k!2 k!2 k!2 c!3)))))
 (let (($x843 (= ?x842 0)))
 (let (($x525 (not $x843)))
 (let ((?x1306 (+ (* 3 (* n!0 n!0)) (* (- 1) k!2) (* 3 n!0))))
 (let (($x1272 (= ?x1306 (- 1))))
 (let ((?x472 (* (- 9) n!0)))
 (let ((?x1017 (* 18 c!3)))
 (let ((?x550 (* 5 k!2)))
 (let ((?x549 (* (- 1) ?x659)))
 (let ((?x139 (* 9 (* c!3 n!0))))
 (let ((?x805 (+ ?x139 ?x549 ?x550 ?x1017 ?x472)))
 (let (($x773 (= ?x805 4)))
 (let ((?x111 (+ m!1 (* (- 6) n!0))))
 (let (($x477 (= ?x111 6)))
 (let (($x824 (and $x477 $x773 $x924 $x1272 $x525)))
 (let ((?x1019 (+ k!2 m!1)))
 (let ((?x803 (+ ?x629 ?x929 ?x638 ?x558 (* ?x669 ?x669 ?x669 ?x926 ?x926 ?x1019 ?x1019 ?x1019) ?x574 (* ?x669 ?x669 ?x926 ?x926 ?x926 ?x1019 ?x1019) (* ?x669 ?x1019 ?x1019 ?x1019 ?x1019 (+ c!3 k!2)) (* 3 (* ?x669 ?x669 ?x669 ?x669 ?x926 ?x1019)) ?x156 ?x159 (* (- 3) (* ?x669 ?x669 ?x669 ?x1019 ?x1019 ?x1019 (+ c!3 k!2))) ?x286 (* (- 3) (* ?x669 ?x669 ?x1019 ?x1019 ?x1019 (+ c!3 k!2))) (* (- 4) (* k!2 m!1 m!1 n!0)) (* (- 2) (* k!2 k!2 m!1 n!0)) ?x633 (* (- 13) (* k!2 m!1 n!0)) ?x1321 ?x482 (* (- 2) (* k!2 m!1 m!1)) (* (- 1) (* k!2 k!2 m!1)) (* (- 1) (* k!2 k!2 m!1 n!0 n!0)) ?x168 (* (- 2) (* k!2 m!1 m!1 n!0 n!0)) (* (- 8) (* k!2 m!1)) ?x905 (* (- 2) (* k!2 m!1 n!0 n!0)) ?x985 (* 3 (* ?x669 ?x669 ?x669 ?x669 ?x926 ?x926 ?x1019 ?x1019 ?x1019)) (* (- 3) (* k!2 k!2 m!1 m!1)) (* (- 3) (* c!3 k!2 m!1 m!1)) ?x470 (* (- 1) (* c!3 k!2 k!2 k!2 n!0)) (* (- 3) (* ?x669 ?x669 ?x669 ?x669 ?x926 ?x926 ?x926 ?x1019)) (* (- 1) (* c!3 m!1 m!1 m!1)) (* (- 1) (* k!2 m!1 m!1 m!1)) (* 3 (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x926 ?x926 ?x1019 ?x1019 ?x1019)) (* (- 1) (* ?x669 ?x669 ?x669 ?x926 ?x926 ?x1019 ?x1019 ?x1019 ?x1019)) (* (- 3) (* c!3 k!2 k!2 m!1 n!0)) (* (- 3) (* k!2 k!2 k!2 m!1 n!0)) (* (- 3) (* c!3 k!2 m!1 m!1 n!0)) (* (- 1) (* c!3 m!1 m!1 m!1 n!0)) (* (- 3) (* k!2 k!2 m!1 m!1 n!0)) (* (- 1) (* k!2 m!1 m!1 m!1 n!0)) (* (- 1) (* c!3 k!2 k!2 k!2)) ?x1018 (* (- 1) (* ?x669 ?x669 ?x926 ?x926 ?x926 ?x1019)) (* (- 3) (* c!3 k!2 k!2 m!1)) (* (- 3) (* k!2 k!2 k!2 m!1)) (* (- 3) (* ?x669 ?x669 ?x669 ?x926 ?x926 ?x926 ?x1019)) (* 3 (* k!2 m!1 n!0 n!0 n!0)) ?x179 ?x829 ?x831 ?x833)))
 (let (($x832 (and $x477 (= (+ ?x1017 ?x550 ?x472 ?x549 ?x139) 4) (= (+ ?x997 k!2 ?x1006 ?x995) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x803 0)))))
 (let (($x637 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1312 (* m n n)))
 (let ((?x899 (* 60 ?x1312)))
 (let ((?x1308 (* k n n)))
 (let ((?x740 (* 60 ?x1308)))
 (let ((?x1292 (* m n)))
 (let ((?x695 (* 66 ?x1292)))
 (let ((?x1246 (* 3 (* m m n n n))))
 (let ((?x1244 (* 3 (* k m n n n))))
 (let ((?x70 (+ k m)))
 (let ((?x551 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x1016 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x758 (* (- 3) ?x1016)))
 (let ((?x1039 (* (- 3) (* k k k m))))
 (let ((?x1036 (* (- 3) (* c k k m))))
 (let ((?x992 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x999 (* (- 1) ?x992)))
 (let ((?x885 (* (- 1) (* k k k k))))
 (let ((?x882 (* (- 1) (* c k k k))))
 (let ((?x887 (* (- 1) (* k m m m n))))
 (let ((?x1033 (* (- 3) (* k k m m n))))
 (let ((?x889 (* (- 1) (* c m m m n))))
 (let ((?x867 (* (- 3) (* c k m m n))))
 (let ((?x866 (* (- 3) (* k k k m n))))
 (let ((?x873 (* (- 3) (* c k k m n))))
 (let ((?x946 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x250 (* (- 1) ?x946)))
 (let ((?x923 (* ?x320 ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x969 (* 3 ?x923)))
 (let ((?x893 (* (- 1) (* k m m m))))
 (let ((?x890 (* (- 1) (* c m m m))))
 (let ((?x827 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x836 (* (- 3) ?x827)))
 (let ((?x895 (* (- 1) (* c k k k n))))
 (let ((?x892 (* (- 1) (* k k k k n))))
 (let ((?x872 (* (- 3) (* c k m m))))
 (let ((?x879 (* (- 3) (* k k m m))))
 (let ((?x657 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x658 (* 3 ?x657)))
 (let ((?x635 (* m m n n)))
 (let ((?x742 (* 4 ?x635)))
 (let ((?x627 (* k m n n)))
 (let ((?x747 (* (- 2) ?x627)))
 (let ((?x609 (* m m)))
 (let ((?x810 (* (- 2) ?x609)))
 (let ((?x723 (* (- 2) (* k m m n n))))
 (let ((?x684 (* (- 1) (* m m m n n))))
 (let ((?x683 (* (- 1) (* k k m n n))))
 (let ((?x682 (* (- 1) (* k k m))))
 (let ((?x720 (* (- 2) (* k m m))))
 (let ((?x680 (* (- 1) (* m m m))))
 (let ((?x717 (* (- 12) (* k k n))))
 (let ((?x515 (* k m n)))
 (let ((?x811 (* (- 13) ?x515)))
 (let ((?x507 (* m m n)))
 (let ((?x965 (* (- 1) ?x507)))
 (let ((?x706 (* (- 2) (* k k m n))))
 (let ((?x703 (* (- 4) (* k m m n))))
 (let ((?x69 (+ c k)))
 (let ((?x489 (* ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x486 (* (- 3) ?x489)))
 (let ((?x699 (* (- 2) (* m m m n))))
 (let ((?x480 (* ?x320 ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x579 (* (- 3) ?x480)))
 (let ((?x696 (* (- 6) (* k k n n))))
 (let ((?x966 (* 18 (* m n n n))))
 (let ((?x256 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x70)))
 (let ((?x257 (* 3 ?x256)))
 (let ((?x239 (* ?x320 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x178 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70 ?x70)))
 (let ((?x963 (* 18 (* k n n n))))
 (let ((?x146 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x55 (* k n)))
 (let ((?x962 (* 66 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x693 (* (- 6) ?x49)))
 (let ((?x960 (* 24 m)))
 (let ((?x957 (* 24 k)))
 (let ((?x642 (+ ?x957 ?x960 ?x693 ?x962 ?x146 ?x963 ?x178 ?x239 ?x257 ?x966 ?x696 ?x579 ?x699 ?x486 ?x703 ?x706 ?x965 ?x811 ?x717 ?x680 ?x720 ?x682 ?x683 ?x684 ?x723 (* (- 8) (* k m)) ?x810 ?x747 ?x742 ?x658 ?x879 ?x872 ?x892 ?x895 ?x836 ?x890 ?x893 ?x969 ?x250 ?x873 ?x866 ?x867 ?x889 ?x1033 ?x887 ?x882 ?x885 ?x999 ?x1036 ?x1039 ?x758 ?x1244 ?x1246 ?x695 ?x740 ?x899)))
 (let (($x310 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x272 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x223 (* (- 1) ?x49)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x220 (= (+ ?x40 ?x44 ?x222 ?x223 (* 9 (* c n))) 4)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (and $x136 $x220 $x272 $x310 (not (= ?x642 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x908 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1312 (* m n n)))
 (let ((?x899 (* 60 ?x1312)))
 (let ((?x1308 (* k n n)))
 (let ((?x740 (* 60 ?x1308)))
 (let ((?x1292 (* m n)))
 (let ((?x695 (* 66 ?x1292)))
 (let ((?x1246 (* 3 (* m m n n n))))
 (let ((?x1244 (* 3 (* k m n n n))))
 (let ((?x70 (+ k m)))
 (let ((?x551 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x1016 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x758 (* (- 3) ?x1016)))
 (let ((?x1039 (* (- 3) (* k k k m))))
 (let ((?x1036 (* (- 3) (* c k k m))))
 (let ((?x992 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x999 (* (- 1) ?x992)))
 (let ((?x885 (* (- 1) (* k k k k))))
 (let ((?x882 (* (- 1) (* c k k k))))
 (let ((?x887 (* (- 1) (* k m m m n))))
 (let ((?x1033 (* (- 3) (* k k m m n))))
 (let ((?x889 (* (- 1) (* c m m m n))))
 (let ((?x867 (* (- 3) (* c k m m n))))
 (let ((?x866 (* (- 3) (* k k k m n))))
 (let ((?x873 (* (- 3) (* c k k m n))))
 (let ((?x946 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x250 (* (- 1) ?x946)))
 (let ((?x923 (* ?x320 ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x969 (* 3 ?x923)))
 (let ((?x893 (* (- 1) (* k m m m))))
 (let ((?x890 (* (- 1) (* c m m m))))
 (let ((?x827 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x836 (* (- 3) ?x827)))
 (let ((?x895 (* (- 1) (* c k k k n))))
 (let ((?x892 (* (- 1) (* k k k k n))))
 (let ((?x872 (* (- 3) (* c k m m))))
 (let ((?x879 (* (- 3) (* k k m m))))
 (let ((?x657 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x658 (* 3 ?x657)))
 (let ((?x635 (* m m n n)))
 (let ((?x742 (* 4 ?x635)))
 (let ((?x627 (* k m n n)))
 (let ((?x747 (* (- 2) ?x627)))
 (let ((?x609 (* m m)))
 (let ((?x810 (* (- 2) ?x609)))
 (let ((?x723 (* (- 2) (* k m m n n))))
 (let ((?x684 (* (- 1) (* m m m n n))))
 (let ((?x683 (* (- 1) (* k k m n n))))
 (let ((?x682 (* (- 1) (* k k m))))
 (let ((?x720 (* (- 2) (* k m m))))
 (let ((?x680 (* (- 1) (* m m m))))
 (let ((?x717 (* (- 12) (* k k n))))
 (let ((?x515 (* k m n)))
 (let ((?x811 (* (- 13) ?x515)))
 (let ((?x507 (* m m n)))
 (let ((?x965 (* (- 1) ?x507)))
 (let ((?x706 (* (- 2) (* k k m n))))
 (let ((?x703 (* (- 4) (* k m m n))))
 (let ((?x69 (+ c k)))
 (let ((?x489 (* ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x486 (* (- 3) ?x489)))
 (let ((?x699 (* (- 2) (* m m m n))))
 (let ((?x480 (* ?x320 ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x579 (* (- 3) ?x480)))
 (let ((?x696 (* (- 6) (* k k n n))))
 (let ((?x966 (* 18 (* m n n n))))
 (let ((?x256 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x70)))
 (let ((?x257 (* 3 ?x256)))
 (let ((?x239 (* ?x320 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x178 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70 ?x70)))
 (let ((?x963 (* 18 (* k n n n))))
 (let ((?x146 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x55 (* k n)))
 (let ((?x962 (* 66 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x693 (* (- 6) ?x49)))
 (let ((?x960 (* 24 m)))
 (let ((?x957 (* 24 k)))
 (let ((?x694 (+ ?x957 ?x960 ?x693 ?x962 ?x146 ?x963 ?x178 ?x239 ?x257 ?x966 ?x696 ?x579 ?x699 ?x486 ?x703 ?x706 ?x965 ?x811 ?x717 ?x680 ?x720 ?x682 ?x683 ?x684 ?x723 (* (- 2) (* k m)) ?x810 ?x747 ?x742 ?x658 ?x879 ?x872 ?x892 ?x895 (* (- 6) (* m k)) ?x836 ?x890 ?x893 ?x969 ?x250 ?x873 ?x866 ?x867 ?x889 ?x1033 ?x887 ?x882 ?x885 ?x999 ?x1036 ?x1039 ?x758 ?x1244 ?x1246 ?x695 ?x740 ?x899)))
 (let (($x310 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x272 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x223 (* (- 1) ?x49)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x220 (= (+ ?x40 ?x44 ?x222 ?x223 (* 9 (* c n))) 4)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (and $x136 $x220 $x272 $x310 (not (= ?x694 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x801 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1312 (* m n n)))
 (let ((?x899 (* 60 ?x1312)))
 (let ((?x1308 (* k n n)))
 (let ((?x740 (* 60 ?x1308)))
 (let ((?x1292 (* m n)))
 (let ((?x695 (* 66 ?x1292)))
 (let ((?x1246 (* 3 (* m m n n n))))
 (let ((?x1244 (* 3 (* k m n n n))))
 (let ((?x70 (+ k m)))
 (let ((?x551 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x1016 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x758 (* (- 3) ?x1016)))
 (let ((?x1039 (* (- 3) (* k k k m))))
 (let ((?x1036 (* (- 3) (* c k k m))))
 (let ((?x992 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x999 (* (- 1) ?x992)))
 (let ((?x885 (* (- 1) (* k k k k))))
 (let ((?x882 (* (- 1) (* c k k k))))
 (let ((?x887 (* (- 1) (* k m m m n))))
 (let ((?x1033 (* (- 3) (* k k m m n))))
 (let ((?x889 (* (- 1) (* c m m m n))))
 (let ((?x867 (* (- 3) (* c k m m n))))
 (let ((?x866 (* (- 3) (* k k k m n))))
 (let ((?x873 (* (- 3) (* c k k m n))))
 (let ((?x946 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x250 (* (- 1) ?x946)))
 (let ((?x923 (* ?x320 ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x969 (* 3 ?x923)))
 (let ((?x893 (* (- 1) (* k m m m))))
 (let ((?x890 (* (- 1) (* c m m m))))
 (let ((?x827 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x836 (* (- 3) ?x827)))
 (let ((?x895 (* (- 1) (* c k k k n))))
 (let ((?x892 (* (- 1) (* k k k k n))))
 (let ((?x872 (* (- 3) (* c k m m))))
 (let ((?x879 (* (- 3) (* k k m m))))
 (let ((?x657 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x658 (* 3 ?x657)))
 (let ((?x635 (* m m n n)))
 (let ((?x742 (* 4 ?x635)))
 (let ((?x627 (* k m n n)))
 (let ((?x747 (* (- 2) ?x627)))
 (let ((?x609 (* m m)))
 (let ((?x810 (* (- 2) ?x609)))
 (let ((?x723 (* (- 2) (* k m m n n))))
 (let ((?x684 (* (- 1) (* m m m n n))))
 (let ((?x683 (* (- 1) (* k k m n n))))
 (let ((?x682 (* (- 1) (* k k m))))
 (let ((?x720 (* (- 2) (* k m m))))
 (let ((?x680 (* (- 1) (* m m m))))
 (let ((?x717 (* (- 12) (* k k n))))
 (let ((?x515 (* k m n)))
 (let ((?x811 (* (- 13) ?x515)))
 (let ((?x507 (* m m n)))
 (let ((?x965 (* (- 1) ?x507)))
 (let ((?x706 (* (- 2) (* k k m n))))
 (let ((?x703 (* (- 4) (* k m m n))))
 (let ((?x69 (+ c k)))
 (let ((?x489 (* ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x486 (* (- 3) ?x489)))
 (let ((?x699 (* (- 2) (* m m m n))))
 (let ((?x480 (* ?x320 ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x579 (* (- 3) ?x480)))
 (let ((?x696 (* (- 6) (* k k n n))))
 (let ((?x966 (* 18 (* m n n n))))
 (let ((?x256 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x70)))
 (let ((?x257 (* 3 ?x256)))
 (let ((?x239 (* ?x320 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x178 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70 ?x70)))
 (let ((?x963 (* 18 (* k n n n))))
 (let ((?x146 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x55 (* k n)))
 (let ((?x962 (* 66 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x693 (* (- 6) ?x49)))
 (let ((?x960 (* 24 m)))
 (let ((?x957 (* 24 k)))
 (let ((?x642 (+ ?x957 ?x960 ?x693 ?x962 ?x146 ?x963 ?x178 ?x239 ?x257 ?x966 ?x696 ?x579 ?x699 ?x486 ?x703 ?x706 ?x965 ?x811 ?x717 ?x680 ?x720 ?x682 ?x683 ?x684 ?x723 (* (- 8) (* k m)) ?x810 ?x747 ?x742 ?x658 ?x879 ?x872 ?x892 ?x895 ?x836 ?x890 ?x893 ?x969 ?x250 ?x873 ?x866 ?x867 ?x889 ?x1033 ?x887 ?x882 ?x885 ?x999 ?x1036 ?x1039 ?x758 ?x1244 ?x1246 ?x695 ?x740 ?x899)))
 (let (($x310 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x272 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x223 (* (- 1) ?x49)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x220 (= (+ ?x40 ?x44 ?x222 ?x223 (* 9 (* c n))) 4)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (let (($x555 (and $x136 $x220 $x272 $x310 (not (= ?x642 0)))))
 (let ((?x694 (+ ?x957 ?x960 ?x693 ?x962 ?x146 ?x963 ?x178 ?x239 ?x257 ?x966 ?x696 ?x579 ?x699 ?x486 ?x703 ?x706 ?x965 ?x811 ?x717 ?x680 ?x720 ?x682 ?x683 ?x684 ?x723 (* (- 2) (* k m)) ?x810 ?x747 ?x742 ?x658 ?x879 ?x872 ?x892 ?x895 (* (- 6) (* m k)) ?x836 ?x890 ?x893 ?x969 ?x250 ?x873 ?x866 ?x867 ?x889 ?x1033 ?x887 ?x882 ?x885 ?x999 ?x1036 ?x1039 ?x758 ?x1244 ?x1246 ?x695 ?x740 ?x899)))
 (let (($x267 (and $x136 $x220 $x272 $x310 (not (= ?x694 0)))))
 (rewrite (= $x267 $x555)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x761 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x551 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x178 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x541 (* ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x946 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x992 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x624 (* ?x320 ?x320 ?x551 ?x70 ?x70)))
 (let ((?x589 (+ (* 3 (* ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)) (* 3 (* ?x320 ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)) ?x624 (* (- 3) (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)) (* (- 1) (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)) ?x992 (* 3 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)) (* 3 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)) (* (- 3) (* ?x320 ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)) ?x946 ?x541 (* (- 3) (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x70)) (* (- 1) (* ?x320 ?x70 ?x70 ?x70 ?x70 ?x69)) (* (- 3) (* ?x320 ?x320 ?x320 ?x551 ?x70)) (* (- 1) (* ?x320 ?x320 ?x551 ?x70)) (* (- 1) ?x178))))
 (let (($x569 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x729 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x223 (* (- 1) ?x49)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (and $x136 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x222 ?x223) 4) $x729 $x569 (not (= ?x589 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x912 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1312 (* m n n)))
 (let ((?x899 (* 60 ?x1312)))
 (let ((?x1308 (* k n n)))
 (let ((?x740 (* 60 ?x1308)))
 (let ((?x1292 (* m n)))
 (let ((?x695 (* 66 ?x1292)))
 (let ((?x1246 (* 3 (* m m n n n))))
 (let ((?x1244 (* 3 (* k m n n n))))
 (let ((?x70 (+ k m)))
 (let ((?x551 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x1016 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x758 (* (- 3) ?x1016)))
 (let ((?x1039 (* (- 3) (* k k k m))))
 (let ((?x1036 (* (- 3) (* c k k m))))
 (let ((?x992 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x999 (* (- 1) ?x992)))
 (let ((?x885 (* (- 1) (* k k k k))))
 (let ((?x882 (* (- 1) (* c k k k))))
 (let ((?x887 (* (- 1) (* k m m m n))))
 (let ((?x1033 (* (- 3) (* k k m m n))))
 (let ((?x889 (* (- 1) (* c m m m n))))
 (let ((?x867 (* (- 3) (* c k m m n))))
 (let ((?x866 (* (- 3) (* k k k m n))))
 (let ((?x873 (* (- 3) (* c k k m n))))
 (let ((?x946 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x250 (* (- 1) ?x946)))
 (let ((?x923 (* ?x320 ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x969 (* 3 ?x923)))
 (let ((?x893 (* (- 1) (* k m m m))))
 (let ((?x890 (* (- 1) (* c m m m))))
 (let ((?x827 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x836 (* (- 3) ?x827)))
 (let ((?x895 (* (- 1) (* c k k k n))))
 (let ((?x892 (* (- 1) (* k k k k n))))
 (let ((?x872 (* (- 3) (* c k m m))))
 (let ((?x879 (* (- 3) (* k k m m))))
 (let ((?x657 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x658 (* 3 ?x657)))
 (let ((?x635 (* m m n n)))
 (let ((?x742 (* 4 ?x635)))
 (let ((?x627 (* k m n n)))
 (let ((?x747 (* (- 2) ?x627)))
 (let ((?x609 (* m m)))
 (let ((?x810 (* (- 2) ?x609)))
 (let ((?x723 (* (- 2) (* k m m n n))))
 (let ((?x684 (* (- 1) (* m m m n n))))
 (let ((?x683 (* (- 1) (* k k m n n))))
 (let ((?x682 (* (- 1) (* k k m))))
 (let ((?x720 (* (- 2) (* k m m))))
 (let ((?x680 (* (- 1) (* m m m))))
 (let ((?x717 (* (- 12) (* k k n))))
 (let ((?x515 (* k m n)))
 (let ((?x811 (* (- 13) ?x515)))
 (let ((?x507 (* m m n)))
 (let ((?x965 (* (- 1) ?x507)))
 (let ((?x706 (* (- 2) (* k k m n))))
 (let ((?x703 (* (- 4) (* k m m n))))
 (let ((?x69 (+ c k)))
 (let ((?x489 (* ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x486 (* (- 3) ?x489)))
 (let ((?x699 (* (- 2) (* m m m n))))
 (let ((?x480 (* ?x320 ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x579 (* (- 3) ?x480)))
 (let ((?x696 (* (- 6) (* k k n n))))
 (let ((?x966 (* 18 (* m n n n))))
 (let ((?x256 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x70)))
 (let ((?x257 (* 3 ?x256)))
 (let ((?x239 (* ?x320 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x178 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70 ?x70)))
 (let ((?x963 (* 18 (* k n n n))))
 (let ((?x146 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x55 (* k n)))
 (let ((?x962 (* 66 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x693 (* (- 6) ?x49)))
 (let ((?x960 (* 24 m)))
 (let ((?x957 (* 24 k)))
 (let ((?x694 (+ ?x957 ?x960 ?x693 ?x962 ?x146 ?x963 ?x178 ?x239 ?x257 ?x966 ?x696 ?x579 ?x699 ?x486 ?x703 ?x706 ?x965 ?x811 ?x717 ?x680 ?x720 ?x682 ?x683 ?x684 ?x723 (* (- 2) (* k m)) ?x810 ?x747 ?x742 ?x658 ?x879 ?x872 ?x892 ?x895 (* (- 6) (* m k)) ?x836 ?x890 ?x893 ?x969 ?x250 ?x873 ?x866 ?x867 ?x889 ?x1033 ?x887 ?x882 ?x885 ?x999 ?x1036 ?x1039 ?x758 ?x1244 ?x1246 ?x695 ?x740 ?x899)))
 (let (($x310 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x272 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x223 (* (- 1) ?x49)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x220 (= (+ ?x40 ?x44 ?x222 ?x223 (* 9 (* c n))) 4)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (let (($x267 (and $x136 $x220 $x272 $x310 (not (= ?x694 0)))))
 (let ((?x541 (* ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x624 (* ?x320 ?x320 ?x551 ?x70 ?x70)))
 (let ((?x589 (+ (* 3 ?x489) (* 3 ?x480) ?x624 (* (- 3) ?x657) (* (- 1) ?x146) ?x992 (* 3 ?x1016) (* 3 ?x827) (* (- 3) ?x923) ?x946 ?x541 (* (- 3) ?x256) (* (- 1) ?x239) (* (- 3) (* ?x320 ?x320 ?x320 ?x551 ?x70)) (* (- 1) (* ?x320 ?x320 ?x551 ?x70)) (* (- 1) ?x178))))
 (let (($x569 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x729 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x563 (and $x136 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x222 ?x223) 4) $x729 $x569 (not (= ?x589 0)))))
 (rewrite (= $x563 $x267)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x492 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x551 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x178 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70 ?x70)))
 (let ((?x856 (* ?x320 ?x320 ?x551 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x239 (* ?x320 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x256 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x70)))
 (let ((?x257 (* 3 ?x256)))
 (let ((?x946 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x250 (* (- 1) ?x946)))
 (let ((?x923 (* ?x320 ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x969 (* 3 ?x923)))
 (let ((?x827 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x836 (* (- 3) ?x827)))
 (let ((?x1016 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x758 (* (- 3) ?x1016)))
 (let ((?x992 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x999 (* (- 1) ?x992)))
 (let ((?x146 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x657 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x658 (* 3 ?x657)))
 (let ((?x480 (* ?x320 ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x579 (* (- 3) ?x480)))
 (let ((?x489 (* ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x486 (* (- 3) ?x489)))
 (let ((?x1261 (+ ?x486 ?x579 (* (- 1) (* ?x320 ?x320 ?x551 ?x70 ?x70)) ?x658 ?x146 ?x999 ?x758 ?x836 ?x969 ?x250 (* (- 1) (* ?x320 ?x70 ?x70 ?x70 ?x69)) ?x257 ?x239 (* 3 (* ?x320 ?x320 ?x320 ?x551 ?x70)) ?x856 ?x178)))
 (let (($x569 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x606 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x322 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (and $x136 (= ?x322 (- 4)) $x606 $x569 (not (= ?x1261 0)))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x756 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x551 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x178 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x541 (* ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x946 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x992 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x624 (* ?x320 ?x320 ?x551 ?x70 ?x70)))
 (let ((?x589 (+ (* 3 (* ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)) (* 3 (* ?x320 ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)) ?x624 (* (- 3) (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)) (* (- 1) (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)) ?x992 (* 3 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)) (* 3 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)) (* (- 3) (* ?x320 ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)) ?x946 ?x541 (* (- 3) (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x70)) (* (- 1) (* ?x320 ?x70 ?x70 ?x70 ?x70 ?x69)) (* (- 3) (* ?x320 ?x320 ?x320 ?x551 ?x70)) (* (- 1) (* ?x320 ?x320 ?x551 ?x70)) (* (- 1) ?x178))))
 (let (($x569 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x729 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x223 (* (- 1) ?x49)))
 (let ((?x222 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (let (($x563 (and $x136 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x222 ?x223) 4) $x729 $x569 (not (= ?x589 0)))))
 (let ((?x856 (* ?x320 ?x320 ?x551 ?x70)))
 (let ((?x239 (* ?x320 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x256 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x70)))
 (let ((?x257 (* 3 ?x256)))
 (let ((?x250 (* (- 1) ?x946)))
 (let ((?x923 (* ?x320 ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x969 (* 3 ?x923)))
 (let ((?x827 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x836 (* (- 3) ?x827)))
 (let ((?x1016 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x758 (* (- 3) ?x1016)))
 (let ((?x999 (* (- 1) ?x992)))
 (let ((?x146 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x657 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x658 (* 3 ?x657)))
 (let ((?x480 (* ?x320 ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x579 (* (- 3) ?x480)))
 (let ((?x489 (* ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x486 (* (- 3) ?x489)))
 (let ((?x1261 (+ ?x486 ?x579 (* (- 1) ?x624) ?x658 ?x146 ?x999 ?x758 ?x836 ?x969 ?x250 (* (- 1) ?x541) ?x257 ?x239 (* 3 (* ?x320 ?x320 ?x320 ?x551 ?x70)) ?x856 ?x178)))
 (let (($x606 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x322 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x572 (and $x136 (= ?x322 (- 4)) $x606 $x569 (not (= ?x1261 0)))))
 (rewrite (= $x572 $x563))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x74 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x76 (- (* (- 3) (+ c k) ?x70 ?x70 ?x70 ?x71 ?x71) (* 3 (+ c k) ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x80 (+ (- ?x76 (* ?x70 ?x70 ?x74 ?x71 ?x71)) (* 3 ?x70 ?x70 ?x70 ?x74 ?x74 ?x71 ?x71 ?x71 ?x71) (* ?x70 ?x70 ?x70 ?x74 ?x74 ?x71 ?x71 ?x71))))
 (let ((?x85 (- (- ?x80 (* ?x70 ?x74 ?x74 ?x74 ?x71 ?x71)) (* 3 ?x70 ?x74 ?x74 ?x74 ?x71 ?x71 ?x71))))
 (let ((?x88 (+ (- ?x85 (* 3 ?x70 ?x74 ?x74 ?x74 ?x71 ?x71 ?x71 ?x71)) (* 3 ?x70 ?x70 ?x70 ?x74 ?x74 ?x71 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x92 (- (- ?x88 (* ?x70 ?x70 ?x70 ?x70 ?x74 ?x74 ?x71 ?x71 ?x71)) (* (+ c k) ?x70 ?x70 ?x70 ?x71))))
 (let ((?x98 (+ ?x92 (* 3 ?x70 ?x74 ?x71 ?x71 ?x71 ?x71) (* (+ c k) ?x70 ?x70 ?x70 ?x70 ?x71) (* 3 ?x70 ?x74 ?x71 ?x71 ?x71) (* ?x70 ?x74 ?x71 ?x71) (* ?x70 ?x70 ?x74 ?x74 ?x74 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x98 0)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x491 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x551 (+ 6 m)))
 (let ((?x320 (+ 1 n)))
 (let ((?x178 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70 ?x70)))
 (let ((?x856 (* ?x320 ?x320 ?x551 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x239 (* ?x320 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x256 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x70)))
 (let ((?x257 (* 3 ?x256)))
 (let ((?x946 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x250 (* (- 1) ?x946)))
 (let ((?x923 (* ?x320 ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x969 (* 3 ?x923)))
 (let ((?x827 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x836 (* (- 3) ?x827)))
 (let ((?x1016 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x758 (* (- 3) ?x1016)))
 (let ((?x992 (* ?x320 ?x320 ?x551 ?x551 ?x551 ?x70)))
 (let ((?x999 (* (- 1) ?x992)))
 (let ((?x146 (* ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x657 (* ?x320 ?x320 ?x320 ?x320 ?x551 ?x551 ?x70 ?x70 ?x70)))
 (let ((?x658 (* 3 ?x657)))
 (let ((?x480 (* ?x320 ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x579 (* (- 3) ?x480)))
 (let ((?x489 (* ?x320 ?x320 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x486 (* (- 3) ?x489)))
 (let ((?x1261 (+ ?x486 ?x579 (* (- 1) (* ?x320 ?x320 ?x551 ?x70 ?x70)) ?x658 ?x146 ?x999 ?x758 ?x836 ?x969 ?x250 (* (- 1) (* ?x320 ?x70 ?x70 ?x70 ?x69)) ?x257 ?x239 (* 3 (* ?x320 ?x320 ?x320 ?x551 ?x70)) ?x856 ?x178)))
 (let (($x569 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x606 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x322 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x136 (= (+ m (* (- 6) n)) 6)))
 (let (($x572 (and $x136 (= ?x322 (- 4)) $x606 $x569 (not (= ?x1261 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x74 (+ m 6)))
 (let ((?x76 (- (* (- 3) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* 3 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x80 (+ (- ?x76 (* ?x70 ?x70 ?x74 ?x71 ?x71)) (* 3 ?x70 ?x70 ?x70 ?x74 ?x74 ?x71 ?x71 ?x71 ?x71) (* ?x70 ?x70 ?x70 ?x74 ?x74 ?x71 ?x71 ?x71))))
 (let ((?x85 (- (- ?x80 (* ?x70 ?x74 ?x74 ?x74 ?x71 ?x71)) (* 3 ?x70 ?x74 ?x74 ?x74 ?x71 ?x71 ?x71))))
 (let ((?x88 (+ (- ?x85 (* 3 ?x70 ?x74 ?x74 ?x74 ?x71 ?x71 ?x71 ?x71)) (* 3 ?x70 ?x70 ?x70 ?x74 ?x74 ?x71 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x92 (- (- ?x88 (* ?x70 ?x70 ?x70 ?x70 ?x74 ?x74 ?x71 ?x71 ?x71)) (* ?x69 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x98 (+ ?x92 (* 3 ?x70 ?x74 ?x71 ?x71 ?x71 ?x71) (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x71) (* 3 ?x70 ?x74 ?x71 ?x71 ?x71) (* ?x70 ?x74 ?x71 ?x71) (* ?x70 ?x70 ?x74 ?x74 ?x74 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x102 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x98 0))))))
 (rewrite (= $x102 $x572)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x197 (mp (mp @x104 (quant-intro (proof-bind ?x491) (= $x103 $x492)) $x492) (rewrite (= $x492 $x492)) $x492)))
 (let ((@x754 (mp (mp @x197 (quant-intro (proof-bind ?x756) (= $x492 $x761)) $x761) (quant-intro (proof-bind ?x912) (= $x761 $x908)) $x908)))
 (let ((@x768 (mp~ (mp @x754 (quant-intro (proof-bind ?x801) (= $x908 $x637)) $x637) (sk (~ $x637 $x832)) $x832)))
 (let ((@x973 (mp @x768 (rewrite (= $x832 $x824)) $x824)))
 (let ((@x925 (and-elim @x973 $x924)))
 (let ((@x325 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x924) $x920)) @x925 $x920)))
 (let (($x727 (>= ?x762 1)))
 (let ((@x840 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x924) $x727)) @x925 $x727)))
 (let (($x725 (<= ?x111 6)))
 (let ((@x1045 (and-elim @x973 $x477)))
 (let ((@x673 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x477) $x725)) @x1045 $x725)))
 (let (($x809 (>= ?x111 6)))
 (let ((@x738 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x477) $x809)) @x1045 $x809)))
 (let (($x884 (<= ?x805 4)))
 (let ((@x844 (and-elim @x973 $x773)))
 (let ((@x613 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x773) $x884)) @x844 $x884)))
 (let (($x728 (>= ?x805 4)))
 (let ((@x521 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x773) $x728)) @x844 $x728)))
 (let (($x262 (<= ?x1306 (- 1))))
 (let ((@x951 (and-elim @x973 $x1272)))
 (let ((@x938 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1272) $x262)) @x951 $x262)))
 (let (($x1268 (>= ?x1306 (- 1))))
 (let ((@x474 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1272) $x1268)) @x951 $x1268)))
 (let (($x1317 (not (<= ?x842 0))))
 (let (($x681 (>= ?x842 0)))
 (let ((@x888 ((_ th-lemma arith) (hypothesis (not $x681)) @x474 @x938 @x474 @x938 @x840 @x325 @x738 @x673 @x474 @x938 @x474 @x938 @x840 @x325 @x474 @x938 @x840 @x325 @x521 @x613 @x738 @x673 @x738 @x673 @x474 @x938 @x521 @x613 @x738 @x673 @x840 @x325 false)))
 (let ((@x845 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x843 $x1317 (not $x681))) (and-elim @x973 $x525) (or $x1317 (not $x681)))))
 ((_ th-lemma arith) (unit-resolution @x845 (lemma @x888 $x681) $x1317) @x474 @x938 @x474 @x938 @x840 @x325 @x738 @x673 @x474 @x938 @x474 @x938 @x840 @x325 @x474 @x938 @x840 @x325 @x521 @x613 @x738 @x673 @x738 @x673 @x474 @x938 @x521 @x613 @x738 @x673 @x840 @x325 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        21
 :arith-assert-upper        11
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           7
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             496
 :arith-nonlinear-bounds    14
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             3
 :arith-patches_succ        1
 :arith-pivots              9
 :arith-row-summations      16
 :arith-tableau-max-columns 88
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.89
 :memory                    3.30
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1738164
 :num-checks                1
 :propagations              10
 :rlimit-count              18111
 :time                      0.02
 :total-time                0.03)
