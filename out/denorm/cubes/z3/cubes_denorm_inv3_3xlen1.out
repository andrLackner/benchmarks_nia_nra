unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x369 (* (- 3) n!0)))
 (let ((?x371 (* n!0 n!0)))
 (let ((?x362 (* (- 3) ?x371)))
 (let ((?x99 (+ k!2 ?x362 ?x369)))
 (let (($x321 (<= ?x99 1)))
 (let (($x240 (= ?x99 1)))
 (let ((?x300 (* 2 n!0)))
 (let ((?x353 (* (- 3) c!3)))
 (let ((?x313 (* m!1 n!0)))
 (let ((?x160 (* (- 3) k!2)))
 (let ((?x201 (* k!2 n!0)))
 (let ((?x232 (+ 3 ?x201 ?x160 ?x313 ?x353 ?x300)))
 (let ((?x90 (+ k!2 c!3)))
 (let ((?x159 (+ k!2 m!1)))
 (let ((?x387 (+ 6 m!1)))
 (let ((?x386 (+ 1 n!0)))
 (let ((?x398 (* ?x386 ?x386 ?x386 ?x386 ?x387 ?x387 ?x387 ?x387 ?x387 ?x387 ?x159 ?x159 ?x159 ?x159 ?x159 ?x159 ?x90 ?x232)))
 (let (($x224 (= ?x398 0)))
 (let (($x178 (not $x224)))
 (let ((?x119 (+ ?x201 (* (- 1) k!2) ?x353 ?x300)))
 (let (($x120 (= ?x119 (- 1))))
 (let ((?x392 (* (- 9) n!0)))
 (let ((?x151 (* 18 c!3)))
 (let ((?x171 (* (- 1) (* k!2 k!2))))
 (let ((?x191 (* 5 k!2)))
 (let ((?x244 (* c!3 n!0)))
 (let ((?x199 (* 9 ?x244)))
 (let ((?x355 (+ ?x199 ?x191 ?x171 ?x151 ?x392)))
 (let (($x348 (= ?x355 4)))
 (let ((?x613 (* (- 6) n!0)))
 (let ((?x397 (+ m!1 ?x613)))
 (let (($x619 (= ?x397 6)))
 (let (($x400 (and $x619 $x348 $x120 $x240 $x178)))
 (let ((?x322 (* ?x386 ?x386 ?x386 ?x386 ?x387 ?x387 ?x387 ?x387 ?x387 ?x387 ?x159 ?x159 ?x159 ?x159 ?x159 ?x159 (+ c!3 k!2) (+ 3 ?x353 ?x160 ?x300 ?x201 ?x313))))
 (let (($x193 (and $x619 (= (+ ?x151 ?x191 ?x392 ?x171 ?x199) 4) (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x201)) 1) (= (+ k!2 ?x369 ?x362) 1) (not (= ?x322 0)))))
 (let (($x190 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x215 (* (- 3) c)))
 (let ((?x403 (+ 3 ?x215 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x170 (* ?x335 ?x335 ?x335 ?x335 ?x410 ?x410 ?x410 ?x410 ?x410 ?x410 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x68 ?x403)))
 (let (($x292 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x254 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x202 (= (+ ?x40 ?x44 ?x204 ?x205 (* 9 (* c n))) 4)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (and $x118 $x202 $x254 $x292 (not (= ?x170 0))))))))))))))))))))) :qid k!34))
 ))
 (let (($x407 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x215 (* (- 3) c)))
 (let ((?x419 (+ 3 ?x215 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x614 (* ?x335 ?x335 ?x335 ?x335 ?x410 ?x410 ?x410 ?x410 ?x410 ?x410 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x68 ?x419)))
 (let (($x153 (not (= ?x614 0))))
 (let (($x144 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x187 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (and $x118 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x204 ?x205) 4) $x187 $x144 $x153)))))))))))))))))) :qid k!34))
 ))
 (let ((?x198 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x215 (* (- 3) c)))
 (let ((?x403 (+ 3 ?x215 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x170 (* ?x335 ?x335 ?x335 ?x335 ?x410 ?x410 ?x410 ?x410 ?x410 ?x410 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x68 ?x403)))
 (let (($x292 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x254 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x202 (= (+ ?x40 ?x44 ?x204 ?x205 (* 9 (* c n))) 4)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (let (($x364 (and $x118 $x202 $x254 $x292 (not (= ?x170 0)))))
 (let ((?x614 (* ?x335 ?x335 ?x335 ?x335 ?x410 ?x410 ?x410 ?x410 ?x410 ?x410 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x68 (+ 3 ?x215 (* (- 4) k) (* ?x335 ?x71) (* (- 1) m) ?x59))))
 (let (($x153 (not (= ?x614 0))))
 (let (($x144 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x187 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x141 (and $x118 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x204 ?x205) 4) $x187 $x144 $x153)))
 (rewrite (= $x141 $x364)))))))))))))))))))))))))))
 ))
 (let (($x166 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x215 (* (- 3) c)))
 (let ((?x419 (+ 3 ?x215 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x614 (* ?x335 ?x335 ?x335 ?x335 ?x410 ?x410 ?x410 ?x410 ?x410 ?x410 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x68 ?x419)))
 (let (($x153 (not (= ?x614 0))))
 (let (($x144 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x330 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (and $x118 (= ?x330 (- 4)) (= (+ ?x215 (* n k) (* (- 1) k) ?x59) (- 1)) $x144 $x153))))))))))))))) :qid k!34))
 ))
 (let ((?x413 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x215 (* (- 3) c)))
 (let ((?x419 (+ 3 ?x215 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x614 (* ?x335 ?x335 ?x335 ?x335 ?x410 ?x410 ?x410 ?x410 ?x410 ?x410 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x68 ?x419)))
 (let (($x153 (not (= ?x614 0))))
 (let (($x144 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x187 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (let (($x141 (and $x118 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x204 ?x205) 4) $x187 $x144 $x153)))
 (let ((?x48 (* 9 n)))
 (let ((?x330 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x189 (and $x118 (= ?x330 (- 4)) (= (+ ?x215 (* n k) (* (- 1) k) ?x59) (- 1)) $x144 $x153)))
 (rewrite (= $x189 $x141))))))))))))))))))))))))
 ))
 (let (($x85 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x79 (+ m 6)))
 (let ((?x71 (+ k m)))
 (let ((?x78 (- 1)))
 (let ((?x68 (+ c k)))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 ?x72)) ?x71) (* 2 ?x72))))
 (let ((?x80 (* ?x77 ?x78 ?x71 ?x71 ?x71 ?x79 ?x79 ?x79 ?x68 ?x72 ?x72 ?x78 ?x71 ?x71 ?x71 ?x79 ?x79 ?x79 ?x72 ?x72)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x80 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x168 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x215 (* (- 3) c)))
 (let ((?x419 (+ 3 ?x215 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x335 (+ 1 n)))
 (let ((?x614 (* ?x335 ?x335 ?x335 ?x335 ?x410 ?x410 ?x410 ?x410 ?x410 ?x410 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x68 ?x419)))
 (let (($x153 (not (= ?x614 0))))
 (let (($x144 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x330 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (let (($x189 (and $x118 (= ?x330 (- 4)) (= (+ ?x215 (* n k) (* (- 1) k) ?x59) (- 1)) $x144 $x153)))
 (let ((?x72 (+ n 1)))
 (let ((?x79 (+ m 6)))
 (let ((?x78 (- 1)))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 ?x72)) ?x71) (* 2 ?x72))))
 (let ((?x80 (* ?x77 ?x78 ?x71 ?x71 ?x71 ?x79 ?x79 ?x79 ?x68 ?x72 ?x72 ?x78 ?x71 ?x71 ?x71 ?x79 ?x79 ?x79 ?x72 ?x72)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x84 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x80 0))))))
 (rewrite (= $x84 $x189))))))))))))))))))))))))))))
 ))
 (let ((@x86 (asserted $x85)))
 (let ((@x396 (mp (mp @x86 (quant-intro (proof-bind ?x168) (= $x85 $x166)) $x166) (rewrite (= $x166 $x166)) $x166)))
 (let ((@x389 (mp (mp @x396 (quant-intro (proof-bind ?x413) (= $x166 $x407)) $x407) (quant-intro (proof-bind ?x198) (= $x407 $x190)) $x190)))
 (let ((@x597 (mp (mp~ @x389 (sk (~ $x190 $x193)) $x193) (rewrite (= $x193 $x400)) $x400)))
 (let ((@x350 (and-elim @x597 $x240)))
 (let ((@x591 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x240) $x321)) @x350 $x321)))
 (let (($x308 (>= ?x99 1)))
 (let ((@x418 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x240) $x308)) @x350 $x308)))
 (let (($x326 (<= ?x119 (- 1))))
 (let ((@x233 (and-elim @x597 $x120)))
 (let ((@x595 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x120) $x326)) @x233 $x326)))
 (let (($x324 (>= ?x119 (- 1))))
 (let ((@x607 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x120) $x324)) @x233 $x324)))
 (let (($x128 (<= ?x397 6)))
 (let ((@x179 (and-elim @x597 $x619)))
 (let ((@x622 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x619) $x128)) @x179 $x128)))
 (let (($x332 (>= ?x397 6)))
 (let ((@x618 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x619) $x332)) @x179 $x332)))
 (let (($x634 (>= ?x232 0)))
 (let ((@x2039 ((_ th-lemma arith) (hypothesis (not $x634)) @x618 @x622 @x607 @x595 @x418 @x591 false)))
 (let (($x1847 (not (<= ?x398 0))))
 (let (($x301 (>= ?x398 0)))
 (let (($x1532 (<= n!0 2)))
 (let (($x1591 (not $x1532)))
 (let (($x317 (not $x301)))
 (let ((@x218 (hypothesis $x317)))
 (let ((@x1586 (hypothesis $x1532)))
 (let (($x1445 (<= ?x387 18)))
 (let (($x1516 (not $x1445)))
 (let (($x740 (<= n!0 0)))
 (let (($x1273 (not $x740)))
 (let (($x367 (<= ?x386 0)))
 (let (($x541 (not $x367)))
 (let (($x373 (>= ?x386 0)))
 (let (($x290 (>= ?x386 (- 1))))
 (let (($x177 (>= ?x386 (- 2))))
 (let (($x776 (>= m!1 (- 30))))
 (let (($x874 (not $x776)))
 (let (($x483 (>= ?x90 (- 39))))
 (let (($x487 (>= n!0 (- 4))))
 (let (($x445 (not $x487)))
 (let (($x590 (not $x177)))
 (let ((@x281 (hypothesis $x590)))
 (let ((@x447 (hypothesis $x487)))
 (let ((@x446 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1) @x218 @x607 @x591 @x447 @x281 @x622 @x595 @x418 @x281 @x447 @x618 false)))
 (let ((@x1360 (unit-resolution (lemma @x446 (or $x445 $x301 $x177)) @x281 @x218 $x445)))
 (let ((@x438 (hypothesis $x445)))
 (let (($x439 (<= ?x159 10)))
 (let (($x433 (not $x439)))
 (let ((@x437 (hypothesis $x439)))
 (let (($x440 (>= n!0 (- 5))))
 (let (($x434 (not $x440)))
 (let ((@x431 (lemma ((_ th-lemma arith farkas 1/3 3 1/3 1/3 1) @x418 (hypothesis $x440) @x437 @x618 @x438 false) (or $x434 $x433 $x487))))
 (let ((@x537 (unit-resolution @x431 @x437 @x438 $x434)))
 (let ((@x428 (unit-resolution (lemma ((_ th-lemma arith) @x537 @x418 @x537 @x437 @x618 false) (or $x433 $x487)) @x438 $x433)))
 (let ((@x452 ((_ th-lemma arith) @x218 (hypothesis (not $x483)) @x428 @x438 @x622 @x438 @x607 @x595 @x618 @x622 @x618 @x622 @x618 @x622 @x418 @x591 @x418 @x591 @x618 @x622 false)))
 (let ((@x1359 (unit-resolution (lemma @x452 (or $x483 $x301 $x487)) @x1360 @x218 $x483)))
 (let (($x741 (>= ?x386 (- 4))))
 (let (($x753 (not $x741)))
 (let ((@x430 (hypothesis $x741)))
 (let ((@x751 (hypothesis $x483)))
 (let ((@x755 (lemma ((_ th-lemma arith farkas 1 3 7 3 9 1 1) @x607 @x751 @x430 @x418 @x438 @x430 @x438 false) (or $x753 (not $x483) $x487))))
 (let ((@x1366 (unit-resolution ((_ th-lemma arith assign-bounds -1) (or $x434 $x741)) (unit-resolution @x755 @x1359 @x1360 $x753) $x434)))
 (let ((@x868 (hypothesis $x434)))
 (let ((@x870 (hypothesis $x776)))
 (let ((@x879 (lemma ((_ th-lemma arith farkas 1/3 4/3 4 5/9 5/9 1/3 1/3 1/3 1) @x607 @x418 @x868 @x870 @x622 @x870 @x622 @x868 @x751 false) (or $x874 $x440 (not $x483)))))
 (let ((@x1367 (unit-resolution @x879 @x1366 @x1359 $x874)))
 (let (($x139 (>= (+ ?x371 (* 3 n!0)) 1)))
 (let ((@x485 (hypothesis (not $x139))))
 (let ((@x869 (unit-resolution (lemma ((_ th-lemma arith) @x485 @x281 @x485 @x281 @x485 false) (or $x139 $x177)) @x281 $x139)))
 (let ((@x1370 (lemma ((_ th-lemma arith) @x869 @x418 @x281 @x1359 @x1367 @x618 @x607 @x1367 @x618 false) (or $x177 $x301))))
 (let ((@x594 (hypothesis $x177)))
 (let (($x615 (not $x290)))
 (let ((@x405 (hypothesis $x615)))
 (let ((@x589 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 1) @x218 @x622 @x405 @x607 @x591 @x594 @x622 @x405 @x618 @x594 @x595 @x418 false)))
 (let ((@x936 (unit-resolution (lemma @x589 (or $x590 $x301 $x290)) (unit-resolution @x1370 @x218 $x177) @x218 $x290)))
 (let ((@x616 ((_ th-lemma arith farkas 1 1 1 1 1) @x218 @x618 (hypothesis $x290) @x622 (hypothesis (not $x373)) false)))
 (let ((@x932 ((_ th-lemma arith farkas 1 1 1) @x218 (unit-resolution (lemma @x616 (or $x615 $x301 $x373)) @x936 @x218 $x373) (hypothesis $x367) false)))
 (let ((@x1281 (unit-resolution (lemma @x932 (or $x541 $x301)) @x218 $x541)))
 (let (($x856 (>= ?x371 1)))
 (let (($x1175 (<= ?x159 7)))
 (let (($x758 (not $x1175)))
 (let (($x316 (>= ?x371 0)))
 (let ((@x164 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x316)) false) $x316)))
 (let ((@x1373 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) @x218 @x618 @x1281 @x607 (hypothesis $x1175) @x1281 @x595 @x418 @x164 @x418 @x164 @x1281 @x618 @x1281 @x618 @x1281 false)))
 (let (($x1382 (not $x856)))
 (let ((@x1383 (hypothesis $x1382)))
 (let ((@x1386 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) @x1383 @x591 @x1383 (hypothesis $x758) @x622 false) (or $x856 $x1175))))
 (let ((@x1411 (unit-resolution @x1386 (unit-resolution (lemma @x1373 (or $x758 $x301)) @x218 $x758) $x856)))
 (let ((@x1400 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis $x856) (hypothesis $x541) (hypothesis $x740) false) (or $x1273 $x1382 $x367))))
 (let ((@x1377 (unit-resolution @x1400 @x1411 @x1281 $x1273)))
 (let (($x1478 (>= (+ k!2 m!1 ?x613) 16)))
 (let (($x1447 (>= ?x159 22)))
 (let (($x1453 (not $x1447)))
 (let ((@x1454 (hypothesis $x1453)))
 (let (($x1449 (<= ?x159 19)))
 (let (($x1456 (not $x1449)))
 (let (($x1407 (>= ?x244 1)))
 (let (($x327 (>= ?x355 4)))
 (let ((@x602 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x348) $x327)) (and-elim @x597 $x348) $x327)))
 (let ((@x1441 ((_ th-lemma arith) @x218 @x418 @x1411 @x1377 @x602 (hypothesis (not $x1407)) @x618 @x418 @x1411 @x1377 @x1377 @x618 @x1377 @x418 @x591 @x607 @x595 @x618 @x622 false)))
 (let ((@x1455 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) @x218 @x618 @x1377 @x607 @x591 @x418 @x1454 (hypothesis $x1449) @x1377 @x418 @x1411 (unit-resolution (lemma @x1441 (or $x1407 $x301)) @x218 $x1407) @x418 @x1411 @x1377 @x618 @x1377 @x618 @x1377 false)))
 (let ((@x1459 ((_ th-lemma arith gcd-test -4/9 -4/9 -5/9 -5/9 4/9 4/9 4/3 -4/9 -4 -4/9 4/9) (unit-resolution (lemma @x1455 (or $x1456 $x301 $x1447)) @x1454 @x218 $x1456) @x1454 @x618 @x622 @x418 @x591 @x1411 @x418 @x1377 @x618 @x1454 false)))
 (let ((@x1401 (hypothesis $x1273)))
 (let (($x1501 (>= ?x371 2)))
 (let ((@x1502 (hypothesis $x1447)))
 (let ((@x1376 (hypothesis $x856)))
 (let (($x1485 (not $x1478)))
 (let ((@x1504 (hypothesis $x1485)))
 (let ((@x1507 ((_ th-lemma arith farkas 1 3 1 3 -3 -9 -3 1) @x591 (hypothesis (not $x1501)) @x622 @x1504 @x418 @x1376 @x618 @x1502 false)))
 (let ((@x1510 (unit-resolution (lemma @x1507 (or $x1501 $x1478 $x1382 $x1453)) @x1504 @x1376 @x1502 $x1501)))
 (let ((@x1513 (lemma ((_ th-lemma arith farkas -1/3 1/3 1 1/3 1) @x1504 @x418 @x1510 @x618 @x1401 false) (or $x1478 $x740 $x1382 $x1453))))
 (let ((@x1588 (unit-resolution @x1513 @x1377 @x1411 (unit-resolution (lemma @x1459 (or $x1447 $x301)) @x218 $x1447) $x1478)))
 (let ((@x1514 (hypothesis $x1445)))
 (let ((@x1518 (lemma ((_ th-lemma arith farkas 1/3 -1/3 -1/6 -1/6 1 1 1) (hypothesis $x1478) @x591 @x622 @x1514 @x1401 @x1514 @x618 false) (or $x1516 $x1485 $x740))))
 (let ((@x1589 (unit-resolution @x1518 @x1588 @x1377 $x1516)))
 (let ((@x1590 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 1) @x218 @x607 @x591 @x1589 @x622 @x1586 @x618 @x595 @x418 @x1589 @x622 @x1586 false)))
 (let ((@x1390 (unit-resolution (lemma @x1590 (or $x1591 $x301)) @x218 $x1591)))
 (let (($x1387 (>= ?x201 0)))
 (let ((@x1403 (hypothesis (not $x1387))))
 (let ((@x1404 ((_ th-lemma arith farkas 1/9 1/9 1/3 2/3 -2/3 1 1 1 1 1 1) @x602 @x418 @x1376 @x607 @x1403 @x418 @x1376 @x607 @x1403 @x1401 @x1401 false)))
 (let ((@x1577 ((_ th-lemma arith) @x218 @x595 @x1390 (unit-resolution (lemma @x1404 (or $x1387 $x1382 $x740)) @x1411 @x1377 $x1387) @x418 @x1411 @x618 @x1390 @x418 @x1411 @x1390 @x618 @x1390 @x618 @x622 @x418 @x591 @x607 @x595 @x618 @x622 false)))
 (let ((@x1851 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x224 $x1847 $x317)) (and-elim @x597 $x178) (or $x1847 $x317))))
 (let ((@x2044 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x1851 (lemma @x1577 $x301) $x1847) (lemma @x2039 $x634) (hypothesis (<= ?x232 0)) false)))
 ((_ th-lemma arith) (lemma @x2044 (not (<= ?x232 0))) @x618 @x622 @x607 @x595 @x418 @x591 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 72
 :arith-assert-diseq        35
 :arith-assert-lower        1024
 :arith-assert-upper        917
 :arith-bound-prop          115
 :arith-branch-var          51
 :arith-conflicts           105
 :arith-eq-adapter          16
 :arith-fixed-eqs           142
 :arith-gcd-tests           716
 :arith-gomory-cuts         31
 :arith-grobner             122
 :arith-ineq-splits         51
 :arith-max-min             5985
 :arith-nonlinear-bounds    108
 :arith-nonlinear-horner    1515
 :arith-num-rows            19
 :arith-offset-eqs          5
 :arith-patches             132
 :arith-patches_succ        31
 :arith-pivots              3498
 :arith-pseudo-nonlinear    194
 :arith-row-summations      32865
 :arith-tableau-max-columns 46
 :arith-tableau-max-rows    19
 :conflicts                 112
 :decisions                 362
 :del-clause                260
 :final-checks              386
 :max-memory                4.15
 :memory                    3.37
 :minimized-lits            18
 :mk-bool-var               549
 :mk-clause                 631
 :num-allocs                5757417
 :num-checks                1
 :propagations              831
 :restarts                  1
 :rlimit-count              1129661
 :time                      0.14
 :total-time                0.15)
