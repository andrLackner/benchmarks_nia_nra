unsat
((set-logic NIA)
(declare-fun x!0 () Int)
(declare-fun r!1 () Int)
(proof
(let ((?x610 (* r!1 r!1)))
 (let ((?x1315 (* (- 1) r!1)))
 (let ((?x36 (* r00 r00)))
 (let ((?x126 (* (- 1) ?x36)))
 (let ((?x110 (* (- 2) x00)))
 (let ((?x2180 (+ r00 ?x110 ?x126 ?x1315 ?x610 (* 2 x!0))))
 (let (($x1139 (<= ?x2180 0)))
 (let (($x2174 (= ?x2180 0)))
 (let ((?x1651 (* (- 5) (* r!1 r!1 r!1 r!1 x!0))))
 (let ((?x1792 (* 12 (* r!1 r!1 r!1))))
 (let ((?x346 (* 3 (* r!1 r!1 r!1 r!1 r!1))))
 (let ((?x1334 (+ ?x1315 x!0)))
 (let ((?x1311 (+ 1 r!1)))
 (let ((?x1359 (* ?x1311 ?x1311 ?x1311 ?x1311 ?x1311 ?x1334)))
 (let ((?x1340 (* 2 (* ?x1311 ?x1311 ?x1311 ?x1334 ?x1334 ?x1334 ?x1334))))
 (let ((?x1338 (* ?x1311 ?x1311 ?x1311 ?x1311 ?x1311 ?x1334 ?x1334 ?x1334)))
 (let ((?x1336 (* (- 1) (* ?x1311 ?x1311 ?x1311 ?x1311 ?x1334 ?x1334 ?x1334))))
 (let ((?x1309 (* 6 (* r!1 r!1 x!0 x!0))))
 (let ((?x1300 (* (- 17) (* r!1 r!1 r!1 x!0))))
 (let ((?x1314 (* 2 (* r!1 r!1 r!1 x!0 x!0))))
 (let ((?x1815 (* (- 16) (* r!1 r!1 x!0))))
 (let ((?x1802 (* 11 (* r!1 r!1 r!1 r!1))))
 (let ((?x1337 (* 4 (* r!1 x!0 x!0))))
 (let ((?x354 (* 6 ?x610)))
 (let ((?x157 (* (- 5) (* r!1 x!0))))
 (let ((?x1450 (+ r00 ?x110 ?x126 ?x157 (* 3 (* r00 r!1 r!1 r!1 r!1 r!1 x!0)) (* 3 (* r00 r!1 r!1 x!0 x!0 x!0)) (* (- 3) (* r00 r!1 r!1 r!1 r!1 x!0 x!0)) (* 10 (* r00 r!1 r!1 r!1 x!0)) (* 9 (* r00 r!1 r!1 r!1 r!1 x!0)) (* (- 9) (* r00 r!1 r!1 x!0 x!0)) (* r00 r!1 r!1 r!1 x!0 x!0 x!0) (* (- 9) (* r00 r!1 r!1 r!1 x!0 x!0)) (* 18 (* x00 r!1 r!1 x!0 x!0)) (* (- 3) (* r00 r00 r!1 x!0 x!0 x!0)) (* 6 (* x00 r!1 r!1 r!1 r!1 x!0 x!0)) (* 6 (* x00 r!1 x!0 x!0)) (* r00 x!0 x!0 x!0) (* (- 4) (* x00 r!1 x!0)) (* 18 (* x00 r!1 r!1 r!1 x!0 x!0)) ?x354 (* (- 2) (* r00 r00 r!1 x!0)) (* (- 12) (* x00 r!1 r!1 x!0)) (* 4 (* r00 r00 r!1 r!1 r!1 r!1)) (* 3 (* r00 r!1 x!0 x!0 x!0)) (* 9 (* r00 r00 r!1 r!1 r!1 x!0 x!0)) (* 3 (* r00 r00 r!1 r!1 r!1 r!1 x!0 x!0)) (* (- 10) (* r00 r00 r!1 r!1 r!1 x!0)) (* (- 6) (* r00 r00 r!1 r!1 x!0)) (* 4 (* r00 r00 r!1 r!1 r!1)) (* 2 (* r00 r00 r!1 r!1)) (* 4 (* x00 r!1 r!1)) (* (- 3) (* r00 r00 r!1 r!1 r!1 r!1 r!1 x!0)) (* (- 9) (* r00 r00 r!1 r!1 r!1 r!1 x!0)) (* (- 18) (* x00 r!1 r!1 r!1 r!1 x!0)) (* (- 20) (* x00 r!1 r!1 r!1 x!0)) (* (- 3) (* r00 r00 r!1 r!1 x!0 x!0 x!0)) (* 9 (* r00 r00 r!1 r!1 x!0 x!0)) (* (- 6) (* x00 r!1 r!1 r!1 r!1 r!1 x!0)) (* 6 (* r00 r!1 r!1 x!0)) ?x1337 ?x1802 x!0 ?x1815 ?x1314 ?x1300 ?x1309 ?x1336 ?x1338 ?x1340 ?x1359 (* (- 2) (* x00 x!0 x!0 x!0)) ?x346 (* (- 4) (* r00 r!1 r!1 r!1)) (* 2 (* r00 r!1 x!0)) ?x1792 ?x1651 (* (- 2) (* r00 r!1 r!1)) (* (- 3) (* r00 r!1 x!0 x!0)) (* (- 1) (* r00 r00 r!1 r!1 r!1 x!0 x!0 x!0)) (* (- 6) (* x00 r!1 x!0 x!0 x!0)) (* (- 6) (* x00 r!1 r!1 x!0 x!0 x!0)) (* (- 4) (* r00 r!1 r!1 r!1 r!1)) (* r00 r00 r!1 r!1 r!1 r!1 r!1 r!1) (* (- 1) (* r00 r00 x!0 x!0 x!0)) (* (- 2) (* x00 r!1 r!1 r!1 x!0 x!0 x!0)) (* (- 1) (* r00 r!1 r!1 r!1 r!1 r!1 r!1)) (* 2 (* x00 r!1 r!1 r!1 r!1 r!1 r!1)) (* 3 (* r00 r00 r!1 r!1 r!1 r!1 r!1)) (* 8 (* x00 r!1 r!1 r!1)) (* 3 (* r00 r00 r!1 x!0 x!0)) (* 6 (* x00 r!1 r!1 r!1 r!1 r!1)) (* 8 (* x00 r!1 r!1 r!1 r!1)) (* (- 3) (* r00 r!1 r!1 r!1 r!1 r!1)))))
 (let (($x1434 (= ?x1450 0)))
 (let (($x566 (not $x1434)))
 (let (($x577 (and $x2174 $x566)))
 (let ((?x1394 (+ x!0 r00 ?x354 ?x110 ?x126 (* (- 2) (* x!0 x!0 x!0 x00)) (* (- 6) (* r!1 x!0 x!0 x!0 x00)) (* (- 6) (* r!1 r!1 x!0 x!0 x!0 x00)) (* (- 2) (* r!1 r!1 r!1 x!0 x!0 x!0 x00)) (* (- 2) (* r!1 r!1 r00)) (* 2 (* r!1 x!0 r00)) ?x157 ?x1815 ?x1300 ?x1792 ?x1802 ?x1651 ?x346 (* (- 4) (* r!1 r!1 r!1 r00)) (* (- 4) (* r!1 r!1 r!1 r!1 r00)) (* (- 3) (* r!1 r!1 r!1 r!1 r!1 r00)) (* (- 1) (* r!1 r!1 r!1 r!1 r!1 r!1 r00)) (* 6 (* r!1 r!1 x!0 r00)) (* 10 (* r!1 r!1 r!1 x!0 r00)) (* 9 (* r!1 r!1 r!1 r!1 x!0 r00)) (* 3 (* r!1 r!1 r!1 r!1 r!1 x!0 r00)) (* (- 3) (* r!1 x!0 x!0 r00)) (* (- 9) (* r!1 r!1 x!0 x!0 r00)) (* (- 9) (* r!1 r!1 r!1 x!0 x!0 r00)) (* (- 3) (* r!1 r!1 r!1 r!1 x!0 x!0 r00)) (* x!0 x!0 x!0 r00) (* 3 (* r!1 x!0 x!0 x!0 r00)) (* 3 (* r!1 r!1 x!0 x!0 x!0 r00)) (* r!1 r!1 r!1 x!0 x!0 x!0 r00) (* (- 4) (* r!1 x!0 x00)) ?x1314 ?x1309 ?x1336 ?x1337 ?x1338 ?x1340 (* 4 (* r!1 r!1 x00)) (* 2 (* r!1 r!1 r00 r00)) (* (- 2) (* r!1 x!0 r00 r00)) (* 4 (* r!1 r!1 r!1 r00 r00)) (* 4 (* r!1 r!1 r!1 r!1 r00 r00)) (* (- 6) (* r!1 r!1 x!0 r00 r00)) (* (- 10) (* r!1 r!1 r!1 x!0 r00 r00)) (* (- 12) (* r!1 r!1 x!0 x00)) (* (- 20) (* r!1 r!1 r!1 x!0 x00)) ?x1359 (* 6 (* r!1 r!1 r!1 r!1 r!1 x00)) (* 8 (* r!1 r!1 r!1 x00)) (* 3 (* r!1 r!1 r!1 r!1 r!1 r00 r00)) (* 2 (* r!1 r!1 r!1 r!1 r!1 r!1 x00)) (* r!1 r!1 r!1 r!1 r!1 r!1 r00 r00) (* (- 18) (* r!1 r!1 r!1 r!1 x!0 x00)) (* (- 9) (* r!1 r!1 r!1 r!1 x!0 r00 r00)) (* (- 3) (* r!1 r!1 r!1 r!1 r!1 x!0 r00 r00)) (* (- 6) (* r!1 r!1 r!1 r!1 r!1 x!0 x00)) (* 3 (* r!1 x!0 x!0 r00 r00)) (* 9 (* r!1 r!1 x!0 x!0 r00 r00)) (* 9 (* r!1 r!1 r!1 x!0 x!0 r00 r00)) (* 6 (* r!1 x!0 x!0 x00)) (* 18 (* r!1 r!1 x!0 x!0 x00)) (* 3 (* r!1 r!1 r!1 r!1 x!0 x!0 r00 r00)) (* 18 (* r!1 r!1 r!1 x!0 x!0 x00)) (* 6 (* r!1 r!1 r!1 r!1 x!0 x!0 x00)) (* 8 (* r!1 r!1 r!1 r!1 x00)) (* (- 1) (* x!0 x!0 x!0 r00 r00)) (* (- 3) (* r!1 x!0 x!0 x!0 r00 r00)) (* (- 3) (* r!1 r!1 x!0 x!0 x!0 r00 r00)) (* (- 1) (* r!1 r!1 r!1 x!0 x!0 x!0 r00 r00)))))
 (let ((?x35 (* 2 x00)))
 (let ((?x141 (* (- 1) r00)))
 (let (($x1397 (and (= (+ r!1 (* (- 2) x!0) ?x141 (* (- 1) ?x610) ?x35 ?x36) 0) (not (= ?x1394 0)))))
 (let (($x1492 (exists ((r Int) (x Int) )(! (let ((?x2587 (* (- 1) (* r r r x x x r00 r00))))
 (let ((?x2586 (* (- 3) (* r r x x x r00 r00))))
 (let ((?x2585 (* (- 3) (* r x x x r00 r00))))
 (let ((?x2584 (* (- 1) (* x x x r00 r00))))
 (let ((?x2583 (* 3 (* r r r r x x r00 r00))))
 (let ((?x2582 (* 9 (* r r r x x r00 r00))))
 (let ((?x2581 (* 9 (* r r x x r00 r00))))
 (let ((?x2580 (* 3 (* r x x r00 r00))))
 (let ((?x2579 (* (- 3) (* r r r r r x r00 r00))))
 (let ((?x2578 (* (- 9) (* r r r r x r00 r00))))
 (let ((?x2106 (* r r r r r r r00 r00)))
 (let ((?x2577 (* 3 (* r r r r r r00 r00))))
 (let ((?x91 (* (- 1) r)))
 (let ((?x155 (+ ?x91 x)))
 (let ((?x149 (+ 1 r)))
 (let ((?x1820 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x155)))
 (let ((?x2564 (* (- 10) (* r r r x r00 r00))))
 (let ((?x2563 (* (- 6) (* r r x r00 r00))))
 (let ((?x2562 (* 4 (* r r r r r00 r00))))
 (let ((?x2561 (* 4 (* r r r r00 r00))))
 (let ((?x2560 (* (- 2) (* r x r00 r00))))
 (let ((?x2559 (* 2 (* r r r00 r00))))
 (let ((?x2554 (* 2 (* ?x149 ?x149 ?x149 ?x155 ?x155 ?x155 ?x155))))
 (let ((?x1227 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x155 ?x155 ?x155)))
 (let ((?x2547 (* 4 (* r x x))))
 (let ((?x2546 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x155 ?x155 ?x155))))
 (let ((?x2545 (* 6 (* r r x x))))
 (let ((?x1183 (* 2 (* r r r x x))))
 (let ((?x1055 (* r r r x x x r00)))
 (let ((?x1072 (* 3 (* r r x x x r00))))
 (let ((?x1071 (* 3 (* r x x x r00))))
 (let ((?x1029 (* x x x r00)))
 (let ((?x1070 (* (- 3) (* r r r r x x r00))))
 (let ((?x1069 (* (- 9) (* r r r x x r00))))
 (let ((?x1068 (* (- 9) (* r r x x r00))))
 (let ((?x1067 (* (- 3) (* r x x r00))))
 (let ((?x1066 (* 3 (* r r r r r x r00))))
 (let ((?x1065 (* 9 (* r r r r x r00))))
 (let ((?x2544 (* 10 (* r r r x r00))))
 (let ((?x2543 (* 6 (* r r x r00))))
 (let ((?x739 (* (- 1) (* r r r r r r r00))))
 (let ((?x1062 (* (- 3) (* r r r r r r00))))
 (let ((?x2542 (* (- 4) (* r r r r r00))))
 (let ((?x2541 (* (- 4) (* r r r r00))))
 (let ((?x2540 (* 3 (* r r r r r))))
 (let ((?x2539 (* (- 5) (* r r r r x))))
 (let ((?x2538 (* 11 (* r r r r))))
 (let ((?x2534 (* (- 17) (* r r r x))))
 (let ((?x2529 (* 2 (* r x r00))))
 (let ((?x2528 (* (- 2) (* r r r00))))
 (let ((?x2527 (* (- 2) (* r r r x x x x00))))
 (let ((?x2520 (* (- 2) (* x x x x00))))
 (let ((?x36 (* r00 r00)))
 (let ((?x126 (* (- 1) ?x36)))
 (let ((?x110 (* (- 2) x00)))
 (let ((?x2972 (+ x r00 (* 6 (* r r)) ?x110 ?x126 ?x2520 (* (- 6) (* r x x x x00)) (* (- 6) (* r r x x x x00)) ?x2527 ?x2528 ?x2529 (* (- 5) (* r x)) (* (- 16) (* r r x)) ?x2534 (* 12 (* r r r)) ?x2538 ?x2539 ?x2540 ?x2541 ?x2542 ?x1062 ?x739 ?x2543 ?x2544 ?x1065 ?x1066 ?x1067 ?x1068 ?x1069 ?x1070 ?x1029 ?x1071 ?x1072 ?x1055 (* (- 4) (* r x x00)) ?x1183 ?x2545 ?x2546 ?x2547 ?x1227 ?x2554 (* 4 (* r r x00)) ?x2559 ?x2560 ?x2561 ?x2562 ?x2563 ?x2564 (* (- 12) (* r r x x00)) (* (- 20) (* r r r x x00)) ?x1820 (* 6 (* r r r r r x00)) (* 8 (* r r r x00)) ?x2577 (* 2 (* r r r r r r x00)) ?x2106 (* (- 18) (* r r r r x x00)) ?x2578 ?x2579 (* (- 6) (* r r r r r x x00)) ?x2580 ?x2581 ?x2582 (* 6 (* r x x x00)) (* 18 (* r r x x x00)) ?x2583 (* 18 (* r r r x x x00)) (* 6 (* r r r r x x x00)) (* 8 (* r r r r x00)) ?x2584 ?x2585 ?x2586 ?x2587)))
 (let ((?x35 (* 2 x00)))
 (let ((?x30 (* r r)))
 (let ((?x142 (* (- 1) ?x30)))
 (let ((?x141 (* (- 1) r00)))
 (let ((?x140 (* (- 2) x)))
 (let (($x144 (= (+ r ?x140 ?x141 ?x142 ?x35 ?x36) 0)))
 (and $x144 (not (= ?x2972 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!26))
 ))
 (let (($x2293 (exists ((r Int) (x Int) )(! (let ((?x91 (* (- 1) r)))
 (let ((?x1489 (+ x ?x91)))
 (let ((?x149 (+ 1 r)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x140 (* (- 2) x)))
 (let ((?x141 (* (- 1) r00)))
 (let ((?x2388 (+ (* 2 (* x00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* r00 ?x149 ?x1489) (* ?x149 ?x149 ?x149 ?x1489) (* ?x149 ?x149 ?x149 ?x149 ?x1489) (* (- 1) (* ?x149 ?x149 ?x1489)) (* (- 1) (* ?x149 ?x149)) (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* (- 2) (* ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489 ?x1489)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* ?x149 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489) (* (- 2) (* ?x149 ?x149 ?x149 ?x1489 ?x1489)) (* (- 2) (* x00 ?x149 ?x1489)) (* (- 1) (* r00 r00 ?x149 ?x1489)) (* 2 (* ?x149 ?x1489 ?x1489)) (* r00 r00 ?x149 ?x149 ?x149 ?x1489) (* 3 r) ?x141 (* 2 (* x00 ?x149 ?x149 ?x149 ?x1489)) ?x140 ?x35 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1489)) ?x36 (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1489)) (* r00 r00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489))))
 (let (($x2393 (not (= ?x2388 (- 1)))))
 (and (= (+ r ?x141 (* (- 1) (* r r)) ?x140 ?x35 ?x36) 0) $x2393)))))))))) :qid k!26))
 ))
 (let ((?x1496 (lambda ((r Int) (x Int) )(let ((?x2587 (* (- 1) (* r r r x x x r00 r00))))
 (let ((?x2586 (* (- 3) (* r r x x x r00 r00))))
 (let ((?x2585 (* (- 3) (* r x x x r00 r00))))
 (let ((?x2584 (* (- 1) (* x x x r00 r00))))
 (let ((?x2583 (* 3 (* r r r r x x r00 r00))))
 (let ((?x2582 (* 9 (* r r r x x r00 r00))))
 (let ((?x2581 (* 9 (* r r x x r00 r00))))
 (let ((?x2580 (* 3 (* r x x r00 r00))))
 (let ((?x2579 (* (- 3) (* r r r r r x r00 r00))))
 (let ((?x2578 (* (- 9) (* r r r r x r00 r00))))
 (let ((?x2106 (* r r r r r r r00 r00)))
 (let ((?x2577 (* 3 (* r r r r r r00 r00))))
 (let ((?x91 (* (- 1) r)))
 (let ((?x155 (+ ?x91 x)))
 (let ((?x149 (+ 1 r)))
 (let ((?x1820 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x155)))
 (let ((?x2564 (* (- 10) (* r r r x r00 r00))))
 (let ((?x2563 (* (- 6) (* r r x r00 r00))))
 (let ((?x2562 (* 4 (* r r r r r00 r00))))
 (let ((?x2561 (* 4 (* r r r r00 r00))))
 (let ((?x2560 (* (- 2) (* r x r00 r00))))
 (let ((?x2559 (* 2 (* r r r00 r00))))
 (let ((?x2554 (* 2 (* ?x149 ?x149 ?x149 ?x155 ?x155 ?x155 ?x155))))
 (let ((?x1227 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x155 ?x155 ?x155)))
 (let ((?x2547 (* 4 (* r x x))))
 (let ((?x2546 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x155 ?x155 ?x155))))
 (let ((?x2545 (* 6 (* r r x x))))
 (let ((?x1183 (* 2 (* r r r x x))))
 (let ((?x1055 (* r r r x x x r00)))
 (let ((?x1072 (* 3 (* r r x x x r00))))
 (let ((?x1071 (* 3 (* r x x x r00))))
 (let ((?x1029 (* x x x r00)))
 (let ((?x1070 (* (- 3) (* r r r r x x r00))))
 (let ((?x1069 (* (- 9) (* r r r x x r00))))
 (let ((?x1068 (* (- 9) (* r r x x r00))))
 (let ((?x1067 (* (- 3) (* r x x r00))))
 (let ((?x1066 (* 3 (* r r r r r x r00))))
 (let ((?x1065 (* 9 (* r r r r x r00))))
 (let ((?x2544 (* 10 (* r r r x r00))))
 (let ((?x2543 (* 6 (* r r x r00))))
 (let ((?x739 (* (- 1) (* r r r r r r r00))))
 (let ((?x1062 (* (- 3) (* r r r r r r00))))
 (let ((?x2542 (* (- 4) (* r r r r r00))))
 (let ((?x2541 (* (- 4) (* r r r r00))))
 (let ((?x2540 (* 3 (* r r r r r))))
 (let ((?x2539 (* (- 5) (* r r r r x))))
 (let ((?x2538 (* 11 (* r r r r))))
 (let ((?x2534 (* (- 17) (* r r r x))))
 (let ((?x2529 (* 2 (* r x r00))))
 (let ((?x2528 (* (- 2) (* r r r00))))
 (let ((?x2527 (* (- 2) (* r r r x x x x00))))
 (let ((?x2520 (* (- 2) (* x x x x00))))
 (let ((?x36 (* r00 r00)))
 (let ((?x126 (* (- 1) ?x36)))
 (let ((?x110 (* (- 2) x00)))
 (let ((?x2972 (+ x r00 (* 6 (* r r)) ?x110 ?x126 ?x2520 (* (- 6) (* r x x x x00)) (* (- 6) (* r r x x x x00)) ?x2527 ?x2528 ?x2529 (* (- 5) (* r x)) (* (- 16) (* r r x)) ?x2534 (* 12 (* r r r)) ?x2538 ?x2539 ?x2540 ?x2541 ?x2542 ?x1062 ?x739 ?x2543 ?x2544 ?x1065 ?x1066 ?x1067 ?x1068 ?x1069 ?x1070 ?x1029 ?x1071 ?x1072 ?x1055 (* (- 4) (* r x x00)) ?x1183 ?x2545 ?x2546 ?x2547 ?x1227 ?x2554 (* 4 (* r r x00)) ?x2559 ?x2560 ?x2561 ?x2562 ?x2563 ?x2564 (* (- 12) (* r r x x00)) (* (- 20) (* r r r x x00)) ?x1820 (* 6 (* r r r r r x00)) (* 8 (* r r r x00)) ?x2577 (* 2 (* r r r r r r x00)) ?x2106 (* (- 18) (* r r r r x x00)) ?x2578 ?x2579 (* (- 6) (* r r r r r x x00)) ?x2580 ?x2581 ?x2582 (* 6 (* r x x x00)) (* 18 (* r r x x x00)) ?x2583 (* 18 (* r r r x x x00)) (* 6 (* r r r r x x x00)) (* 8 (* r r r r x00)) ?x2584 ?x2585 ?x2586 ?x2587)))
 (let ((?x35 (* 2 x00)))
 (let ((?x30 (* r r)))
 (let ((?x142 (* (- 1) ?x30)))
 (let ((?x141 (* (- 1) r00)))
 (let ((?x140 (* (- 2) x)))
 (let (($x144 (= (+ r ?x140 ?x141 ?x142 ?x35 ?x36) 0)))
 (let (($x1495 (and $x144 (not (= ?x2972 0)))))
 (let ((?x1489 (+ x ?x91)))
 (let ((?x2388 (+ (* 2 (* x00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* r00 ?x149 ?x1489) (* ?x149 ?x149 ?x149 ?x1489) (* ?x149 ?x149 ?x149 ?x149 ?x1489) (* (- 1) (* ?x149 ?x149 ?x1489)) (* (- 1) (* ?x149 ?x149)) (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* (- 2) (* ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489 ?x1489)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* ?x149 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489) (* (- 2) (* ?x149 ?x149 ?x149 ?x1489 ?x1489)) (* (- 2) (* x00 ?x149 ?x1489)) (* (- 1) (* r00 r00 ?x149 ?x1489)) (* 2 (* ?x149 ?x1489 ?x1489)) (* r00 r00 ?x149 ?x149 ?x149 ?x1489) (* 3 r) ?x141 (* 2 (* x00 ?x149 ?x149 ?x149 ?x1489)) ?x140 ?x35 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1489)) ?x36 (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1489)) (* r00 r00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489))))
 (let (($x2393 (not (= ?x2388 (- 1)))))
 (let (($x2289 (and (= (+ r ?x141 ?x142 ?x140 ?x35 ?x36) 0) $x2393)))
 (rewrite (= $x2289 $x1495))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2396 (exists ((r Int) (x Int) )(! (let ((?x91 (* (- 1) r)))
 (let ((?x1489 (+ x ?x91)))
 (let ((?x149 (+ 1 r)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x140 (* (- 2) x)))
 (let ((?x141 (* (- 1) r00)))
 (let ((?x2388 (+ (* 2 (* x00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* r00 ?x149 ?x1489) (* ?x149 ?x149 ?x149 ?x1489) (* ?x149 ?x149 ?x149 ?x149 ?x1489) (* (- 1) (* ?x149 ?x149 ?x1489)) (* (- 1) (* ?x149 ?x149)) (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* (- 2) (* ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489 ?x1489)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* ?x149 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489) (* (- 2) (* ?x149 ?x149 ?x149 ?x1489 ?x1489)) (* (- 2) (* x00 ?x149 ?x1489)) (* (- 1) (* r00 r00 ?x149 ?x1489)) (* 2 (* ?x149 ?x1489 ?x1489)) (* r00 r00 ?x149 ?x149 ?x149 ?x1489) (* 3 r) ?x141 (* 2 (* x00 ?x149 ?x149 ?x149 ?x1489)) ?x140 ?x35 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1489)) ?x36 (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1489)) (* r00 r00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489))))
 (let (($x2393 (not (= ?x2388 (- 1)))))
 (let ((?x126 (* (- 1) ?x36)))
 (let ((?x110 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (and (= (+ ?x91 r00 ?x30 ?x32 ?x110 ?x126) 0) $x2393)))))))))))))) :qid k!26))
 ))
 (let ((?x2296 (lambda ((r Int) (x Int) )(let ((?x91 (* (- 1) r)))
 (let ((?x1489 (+ x ?x91)))
 (let ((?x149 (+ 1 r)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x140 (* (- 2) x)))
 (let ((?x141 (* (- 1) r00)))
 (let ((?x2388 (+ (* 2 (* x00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* r00 ?x149 ?x1489) (* ?x149 ?x149 ?x149 ?x1489) (* ?x149 ?x149 ?x149 ?x149 ?x1489) (* (- 1) (* ?x149 ?x149 ?x1489)) (* (- 1) (* ?x149 ?x149)) (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* (- 2) (* ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489 ?x1489)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* ?x149 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489) (* (- 2) (* ?x149 ?x149 ?x149 ?x1489 ?x1489)) (* (- 2) (* x00 ?x149 ?x1489)) (* (- 1) (* r00 r00 ?x149 ?x1489)) (* 2 (* ?x149 ?x1489 ?x1489)) (* r00 r00 ?x149 ?x149 ?x149 ?x1489) (* 3 r) ?x141 (* 2 (* x00 ?x149 ?x149 ?x149 ?x1489)) ?x140 ?x35 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1489)) ?x36 (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1489)) (* r00 r00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489))))
 (let (($x2393 (not (= ?x2388 (- 1)))))
 (let (($x2289 (and (= (+ r ?x141 (* (- 1) (* r r)) ?x140 ?x35 ?x36) 0) $x2393)))
 (let ((?x126 (* (- 1) ?x36)))
 (let ((?x110 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (let (($x2066 (and (= (+ ?x91 r00 ?x30 ?x32 ?x110 ?x126) 0) $x2393)))
 (rewrite (= $x2066 $x2289))))))))))))))))))
 ))
 (let (($x86 (exists ((r Int) (x Int) )(! (let ((?x42 (- x r)))
 (let ((?x41 (+ r 1)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x47 (+ (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 x00) (* ?x41 r00 ?x42) (* ?x41 ?x41 ?x41 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x42))))
 (let ((?x55 (- (- (- ?x47 (* ?x41 ?x41 ?x42)) (* ?x41 ?x41)) (* ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42))))
 (let ((?x57 (- (- ?x55 (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x63 (- (+ ?x57 (* ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x42 ?x42))))
 (let ((?x68 (+ (- (- ?x63 (* 2 ?x41 ?x42 x00)) (* ?x41 r00 r00 ?x42)) (* 2 ?x41 ?x42 ?x42) (* ?x41 ?x41 ?x41 r00 r00 ?x42) r 1)))
 (let ((?x73 (- (+ (- ?x68 r00) (* 2 ?x41 ?x41 ?x41 ?x42 x00)) (* 2 ?x42))))
 (let ((?x79 (- (+ (- (+ ?x73 ?x35) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x42)) ?x36) (* ?x41 ?x41 ?x41 r00 ?x42))))
 (let (($x83 (not (= (+ ?x79 (* ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42)) 0))))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 (* r r) (* 2 x)) ?x35) ?x36)))
 (and (= ?x38 0) (or $x83))))))))))))))) :qid k!26))
 ))
 (let ((?x2394 (lambda ((r Int) (x Int) )(let ((?x91 (* (- 1) r)))
 (let ((?x1489 (+ x ?x91)))
 (let ((?x149 (+ 1 r)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x140 (* (- 2) x)))
 (let ((?x141 (* (- 1) r00)))
 (let ((?x2388 (+ (* 2 (* x00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* r00 ?x149 ?x1489) (* ?x149 ?x149 ?x149 ?x1489) (* ?x149 ?x149 ?x149 ?x149 ?x1489) (* (- 1) (* ?x149 ?x149 ?x1489)) (* (- 1) (* ?x149 ?x149)) (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* (- 2) (* ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489 ?x1489)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489)) (* ?x149 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489) (* (- 2) (* ?x149 ?x149 ?x149 ?x1489 ?x1489)) (* (- 2) (* x00 ?x149 ?x1489)) (* (- 1) (* r00 r00 ?x149 ?x1489)) (* 2 (* ?x149 ?x1489 ?x1489)) (* r00 r00 ?x149 ?x149 ?x149 ?x1489) (* 3 r) ?x141 (* 2 (* x00 ?x149 ?x149 ?x149 ?x1489)) ?x140 ?x35 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x1489)) ?x36 (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x1489)) (* r00 r00 ?x149 ?x149 ?x149 ?x1489 ?x1489 ?x1489))))
 (let (($x2393 (not (= ?x2388 (- 1)))))
 (let ((?x126 (* (- 1) ?x36)))
 (let ((?x110 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (let (($x2066 (and (= (+ ?x91 r00 ?x30 ?x32 ?x110 ?x126) 0) $x2393)))
 (let ((?x42 (- x r)))
 (let ((?x41 (+ r 1)))
 (let ((?x47 (+ (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 x00) (* ?x41 r00 ?x42) (* ?x41 ?x41 ?x41 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x42))))
 (let ((?x55 (- (- (- ?x47 (* ?x41 ?x41 ?x42)) (* ?x41 ?x41)) (* ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42))))
 (let ((?x57 (- (- ?x55 (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x63 (- (+ ?x57 (* ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x42 ?x42))))
 (let ((?x68 (+ (- (- ?x63 (* 2 ?x41 ?x42 x00)) (* ?x41 r00 r00 ?x42)) (* 2 ?x41 ?x42 ?x42) (* ?x41 ?x41 ?x41 r00 r00 ?x42) r 1)))
 (let ((?x73 (- (+ (- ?x68 r00) (* 2 ?x41 ?x41 ?x41 ?x42 x00)) (* 2 ?x42))))
 (let ((?x79 (- (+ (- (+ ?x73 ?x35) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x42)) ?x36) (* ?x41 ?x41 ?x41 r00 ?x42))))
 (let (($x83 (not (= (+ ?x79 (* ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42)) 0))))
 (let (($x85 (and (= (- (- (+ (* (- 1) r) r00 ?x30 ?x32) ?x35) ?x36) 0) (or $x83))))
 (rewrite (= $x85 $x2066))))))))))))))))))))))))))))
 ))
 (let ((@x87 (asserted $x86)))
 (let ((@x2109 (mp (mp @x87 (quant-intro (proof-bind ?x2394) (= $x86 $x2396)) $x2396) (rewrite (= $x2396 $x2396)) $x2396)))
 (let ((@x1448 (mp (mp @x2109 (quant-intro (proof-bind ?x2296) (= $x2396 $x2293)) $x2293) (quant-intro (proof-bind ?x1496) (= $x2293 $x1492)) $x1492)))
 (let ((@x2656 (mp (mp~ @x1448 (sk (~ $x1492 $x1397)) $x1397) (rewrite (= $x1397 $x577)) $x577)))
 (let ((@x1835 (and-elim @x2656 $x2174)))
 (let ((@x708 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2174) $x1139)) @x1835 $x1139)))
 (let (($x343 (>= ?x2180 0)))
 (let ((@x603 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2174) $x343)) @x1835 $x343)))
 (let (($x2445 (not (>= ?x1450 0))))
 (let (($x1527 (<= ?x1450 0)))
 (let ((@x661 (lemma ((_ th-lemma arith) (hypothesis (not $x1527)) @x603 @x708 @x603 @x708 false) $x1527)))
 (let ((@x709 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1434 (not $x1527) $x2445)) (and-elim @x2656 $x566) (or (not $x1527) $x2445))))
 ((_ th-lemma arith) (unit-resolution @x709 @x661 $x2445) @x603 @x708 @x603 @x708 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 1
 :arith-assert-diseq        1
 :arith-assert-lower        21
 :arith-assert-upper        3
 :arith-conflicts           2
 :arith-eq-adapter          2
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             591
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    8
 :arith-num-rows            4
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              3
 :arith-row-summations      1
 :arith-tableau-max-columns 103
 :arith-tableau-max-rows    4
 :conflicts                 2
 :decisions                 1
 :del-clause                7
 :final-checks              4
 :max-memory                3.99
 :memory                    3.41
 :mk-bool-var               12
 :mk-clause                 7
 :num-allocs                1596419
 :num-checks                1
 :propagations              4
 :rlimit-count              12018
 :time                      0.01
 :total-time                0.02)
