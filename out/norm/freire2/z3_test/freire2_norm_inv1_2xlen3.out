unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1715 (* (- 1) s!1)))
 (let ((?x304 (* r00 r00)))
 (let ((?x993 (* (- 3) ?x304)))
 (let ((?x1403 (+ s00 ?x993 ?x1715 (* 3 (* r!2 r!2)))))
 (let (($x761 (<= ?x1403 0)))
 (let (($x300 (= ?x1403 0)))
 (let ((?x1711 (* 6 r!2)))
 (let ((?x1703 (+ 3 s!1 ?x1711)))
 (let ((?x1720 (+ ?x1715 x!0)))
 (let ((?x1878 (+ 1 r!2)))
 (let ((?x1777 (* (- 3) (* r00 r00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703))))
 (let ((?x1962 (* (- 1) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703))))
 (let ((?x1613 (* r00 r00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703)))
 (let ((?x397 (* (- 1) (* s00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720))))
 (let ((?x633 (* (- 1) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703 ?x1703))))
 (let ((?x1277 (* (- 3) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703 ?x1703 ?x1703))))
 (let ((?x580 (* (- 1) (* s00 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703))))
 (let ((?x1169 (* 3 (* r00 r00 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703))))
 (let ((?x1002 (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720)))
 (let ((?x1016 (* (- 3) ?x1002)))
 (let ((?x903 (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703)))
 (let ((?x887 (* r00 r00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720)))
 (let ((?x388 (* 3 ?x887)))
 (let ((?x762 (* (- 1) (* s00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703))))
 (let ((?x900 (* (- 3) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703))))
 (let ((?x973 (* (- 3) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703))))
 (let ((?x364 (* 3 (* r00 r00 ?x1878 ?x1878 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703 ?x1703 ?x1703))))
 (let ((?x877 (* 3 (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703))))
 (let ((?x676 (* 3 (* r00 r00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703))))
 (let ((?x948 (+ ?x676 (* (- 1) (* ?x1720 ?x1720 ?x1703 ?x1703 ?x1703 ?x1703 ?x1703)) ?x877 (* (- 3) (* r00 r00 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703 ?x1703)) (* (- 1) (* s00 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703)) ?x364 ?x973 (* ?x1878 ?x1878 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703 ?x1703 ?x1703 ?x1703) (* ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703 ?x1703) ?x900 ?x762 ?x388 (* 3 ?x903) (* (- 3) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703)) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703) (* s00 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703) (* s00 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703 ?x1703) (* 3 (* r00 r00 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703)) ?x1016 ?x1169 (* (- 1) (* ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703)) (* 3 (* ?x1878 ?x1878 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703 ?x1703)) ?x580 (* (- 1) (* s00 ?x1878 ?x1878 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703 ?x1703 ?x1703)) (* (- 3) (* r00 r00 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703)) (* 3 (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703)) ?x1277 ?x633 (* s00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703) (* ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1703 ?x1703 ?x1703) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703) ?x397 (* (- 3) ?x1613) ?x1962 (* s00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x1703) ?x1777)))
 (let (($x879 (= ?x948 0)))
 (let (($x1391 (not $x879)))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1192 (* 108 ?x1349)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x530 (* 16 ?x1187)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x697 (* (- 432) ?x885)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1739 (* (- 108) ?x808)))
 (let ((?x650 (* s00 r00 r00)))
 (let ((?x421 (* (- 36) ?x650)))
 (let ((?x419 (* (- 9) s!1)))
 (let ((?x594 (* s00 s00)))
 (let ((?x776 (* 51 ?x594)))
 (let ((?x525 (* r00 x00)))
 (let ((?x1674 (* 108 ?x525)))
 (let ((?x325 (* r00 r00 s!1)))
 (let ((?x1339 (* 36 ?x325)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1678 (+ ?x137 (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) ?x1339 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x1674 ?x776 ?x419 ?x421 (* (- 108) (* s00 s00 r00)) (* (- 108) (* r00 x!0)) (* (- 66) (* s00 s!1)) (* (- 36) (* s00 s00 r00 r00)) (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* r00 r00 r00 s!1)) ?x1739 (* (- 108) (* s!1 x!0)) (* 108 (* x00 s!1)) (* 108 (* s00 r00 s!1)) ?x697 (* 216 (* s00 r00 r00 r00)) (* 15 (* s!1 s!1)) ?x530 (* 108 (* s00 x!0)) ?x1192 (* (- 4) (* s!1 s!1 s!1)) (* 54 (* r00 s!1)) (* (- 216) (* x00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* 108 (* x!0 x!0)))))
 (let ((?x588 (+ ?x137 ?x1339 (* (- 24) (* s00 r00)) (* (- 24) (* s00 r!2)) (* (- 4) (* r00 s!1 s!1)) (* 54 ?x525) (* (- 2) (* s00 s!1 r!2)) (* 15 ?x594) ?x419 ?x421 (* 2 (* s00 s00 r00)) (* (- 54) (* r00 x!0)) (* (- 12) (* s00 s!1)) (* 54 (* x00 r!2)) (* (- 6) ?x808) (* (- 6) (* s!1 x!0)) (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)) (* (- 36) (* r00 x!0 r!2)) (* 36 (* r00 r00 x00)) (* 4 (* s00 s00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 3) (* s!1 s!1)) (* 24 (* s!1 r!2)) (* 6 (* s00 x!0)) (* 36 (* r00 x00 r!2)) (* (- 2) (* s!1 s!1 r!2)) (* (- 54) (* x!0 r!2)) (* 24 (* r00 s!1)))))
 (let ((?x1083 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x848 (+ ?x44 (* 6 ?x325) (* 6 (* s00 r00 r!2)) (* (- 9) (* s00 r00)) (* (- 9) (* s00 r!2)) (* 18 ?x525) (* 4 ?x594) ?x1083 (* (- 6) ?x650) (* (- 18) (* r00 x!0)) (* (- 2) (* s00 s!1)) (* (- 6) (* r00 s!1 r!2)) (* 18 (* x00 r!2)) (* (- 2) (* s!1 s!1)) (* 9 (* s!1 r!2)) (* (- 18) (* x!0 r!2)) (* 9 (* r00 s!1)))))
 (let ((?x1093 (* 3 r!2)))
 (let ((?x740 (* 6 x!0)))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x429 (* s00 r00)))
 (let ((?x507 (* (- 6) ?x429)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x2077 (+ ?x44 ?x503 ?x504 ?x507 (* 4 (* s00 r!2)) ?x473 ?x1083 (* (- 12) (* r00 r00 r!2)) ?x740 (* 2 (* s!1 r!2)) ?x1093)))
 (let (($x862 (and $x300 (= ?x2077 0) (= ?x848 0) (= ?x588 0) (= ?x1678 0) $x1391)))
 (let ((?x906 (+ 3 ?x1711 s!1)))
 (let ((?x517 (* (- 3) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x906 ?x906))))
 (let ((?x463 (* 3 (* r00 r00 ?x1878 ?x1878 ?x1720 ?x1720 ?x906 ?x906 ?x906 ?x906 ?x906))))
 (let ((?x602 (* 3 (* r00 r00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x906 ?x906))))
 (let ((?x456 (* (- 3) (* r00 r00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x906 ?x906 ?x906))))
 (let ((?x644 (* (- 1) (* s00 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x906 ?x906 ?x906))))
 (let ((?x351 (* (- 1) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x906 ?x906))))
 (let ((?x1018 (* (- 1) (* s00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x906 ?x906))))
 (let ((?x956 (* 3 (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x906 ?x906 ?x906))))
 (let ((?x1272 (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x906)))
 (let ((?x656 (* (- 3) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x906 ?x906 ?x906 ?x906 ?x906))))
 (let ((?x547 (* 3 (* r00 r00 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x906 ?x906 ?x906))))
 (let ((?x362 (* (- 1) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x906 ?x906 ?x906 ?x906))))
 (let ((?x1164 (* r00 r00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x906)))
 (let ((?x1810 (* (- 3) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x906 ?x906 ?x906))))
 (let ((?x386 (+ (* ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x906 ?x906 ?x906) ?x1810 (* s00 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x906) (* (- 3) ?x1164) ?x362 ?x397 (* (- 1) (* ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x906 ?x906)) ?x547 (* (- 1) (* s00 ?x1878 ?x1878 ?x1720 ?x1720 ?x906 ?x906 ?x906 ?x906 ?x906)) ?x656 (* 3 (* ?x1878 ?x1878 ?x1720 ?x1720 ?x906 ?x906 ?x906 ?x906)) (* 3 (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x906)) (* 3 ?x1272) ?x1016 ?x956 ?x1018 (* ?x1878 ?x1878 ?x1720 ?x1720 ?x906 ?x906 ?x906 ?x906 ?x906 ?x906) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x906) (* (- 3) (* r00 r00 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x906)) ?x351 ?x644 ?x456 ?x602 ?x463 (* s00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x1720 ?x906) (* (- 1) (* s00 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x906 ?x906)) (* (- 3) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x906 ?x906)) (* ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x906 ?x906 ?x906 ?x906) (* s00 ?x1720 ?x1720 ?x906 ?x906 ?x906 ?x906) (* ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x1720 ?x906 ?x906 ?x906) ?x517 (* s00 ?x1878 ?x1878 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x906 ?x906 ?x906) (* (- 1) (* ?x1720 ?x1720 ?x906 ?x906 ?x906 ?x906 ?x906)) (* 3 (* r00 r00 ?x1878 ?x1878 ?x1720 ?x1720 ?x1720 ?x906 ?x906)) (* (- 3) (* r00 r00 ?x1720 ?x1720 ?x906 ?x906 ?x906 ?x906)) ?x388)))
 (let ((?x1379 (* (- 108) ?x1349)))
 (let ((?x1378 (* (- 16) ?x1187)))
 (let ((?x1059 (* s00 r00 r00 r00)))
 (let ((?x1374 (* (- 216) ?x1059)))
 (let ((?x886 (* 432 ?x885)))
 (let ((?x1132 (* 108 ?x808)))
 (let ((?x734 (* s00 s00 r00 r00)))
 (let ((?x735 (* 36 ?x734)))
 (let ((?x671 (* s00 s00 r00)))
 (let ((?x1015 (* 108 ?x671)))
 (let ((?x1003 (* 36 ?x650)))
 (let ((?x1368 (* (- 51) ?x594)))
 (let ((?x1562 (* s!1 r00 r00)))
 (let ((?x592 (* (- 36) ?x1562)))
 (let ((?x1365 (* (- 108) ?x525)))
 (let ((?x516 (* s00 r00 x00)))
 (let ((?x1364 (* (- 216) ?x516)))
 (let ((?x523 (* 54 ?x429)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x667 (* 9 s!1)))
 (let ((?x1881 (+ ?x667 ?x990 ?x523 ?x1364 ?x1365 (* (- 15) (* s!1 s!1)) ?x592 ?x1368 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1003 ?x1015 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x735 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1132 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x886 (* 12 (* s!1 s!1 s00)) ?x1374 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1378 (* 216 (* x!0 x00)) ?x1379)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x699 (* (- 2) ?x671)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x567 (* 24 ?x429)))
 (let ((?x815 (+ ?x667 ?x990 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x567 ?x554 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x592 ?x919 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1003 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x699 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x809 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x893 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x651 (* 6 ?x650)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x544 (* 9 ?x429)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x1096 (+ (* 3 s!1) ?x381 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x544 ?x539 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1562) ?x607 (* 18 (* x!0 r00)) ?x651 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1287 (+ ?x1093 ?x1083 ?x740 ?x44 ?x503 ?x504 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x507 ?x473)))
 (let (($x652 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x304)) 0)))
 (let (($x657 (and $x652 (= ?x1287 0) (= ?x1096 0) (= ?x815 0) (= ?x1881 0) (not (= ?x386 0)))))
 (let (($x344 (exists ((r Int) (s Int) (x Int) )(! (let ((?x283 (* (- 1) s)))
 (let ((?x1395 (+ ?x283 x)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x2006 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395)))
 (let ((?x213 (* 6 r)))
 (let ((?x1389 (+ 3 ?x213 s)))
 (let ((?x705 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x707 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389))))
 (let ((?x616 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x457 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x458 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x785 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x674 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x1060 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x720 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395)))
 (let ((?x672 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)))
 (let ((?x913 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389))))
 (let ((?x923 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x1109 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395))))
 (let ((?x1212 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389))))
 (let ((?x328 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)))
 (let ((?x2007 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x320 (+ (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389) ?x2007 (* s00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389) (* (- 3) ?x328) ?x1212 ?x1109 (* (- 1) (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) ?x923 (* (- 1) (* s00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389)) ?x913 (* 3 (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389)) (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)) (* 3 ?x672) (* (- 3) ?x720) ?x1060 ?x674 (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389) (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)) ?x785 ?x458 ?x457 ?x616 ?x707 (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389) (* (- 1) (* s00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) (* ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389) (* s00 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389) ?x705 (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389) (* (- 1) (* ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389)) (* 3 (* r00 r00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) (* (- 3) (* r00 r00 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389)) (* 3 ?x2006))))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1379 (* (- 108) ?x1349)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x1378 (* (- 16) ?x1187)))
 (let ((?x1059 (* s00 r00 r00 r00)))
 (let ((?x1374 (* (- 216) ?x1059)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x886 (* 432 ?x885)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1132 (* 108 ?x808)))
 (let ((?x734 (* s00 s00 r00 r00)))
 (let ((?x735 (* 36 ?x734)))
 (let ((?x671 (* s00 s00 r00)))
 (let ((?x1015 (* 108 ?x671)))
 (let ((?x650 (* s00 r00 r00)))
 (let ((?x1003 (* 36 ?x650)))
 (let ((?x594 (* s00 s00)))
 (let ((?x1368 (* (- 51) ?x594)))
 (let ((?x568 (* s r00 r00)))
 (let ((?x867 (* (- 36) ?x568)))
 (let ((?x525 (* r00 x00)))
 (let ((?x1365 (* (- 108) ?x525)))
 (let ((?x516 (* s00 r00 x00)))
 (let ((?x1364 (* (- 216) ?x516)))
 (let ((?x429 (* s00 r00)))
 (let ((?x523 (* 54 ?x429)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1380 (+ ?x143 ?x990 ?x523 ?x1364 ?x1365 (* (- 15) (* s s)) ?x867 ?x1368 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1003 ?x1015 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x735 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1132 (* 108 (* s x)) (* (- 108) (* x x)) ?x886 (* 12 (* s s s00)) ?x1374 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1378 (* 216 (* x x00)) ?x1379)))
 (let (($x1381 (= ?x1380 0)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x699 (* (- 2) ?x671)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x567 (* 24 ?x429)))
 (let ((?x1082 (+ ?x143 ?x990 (* (- 24) (* r s)) (* 24 (* r s00)) ?x567 ?x554 ?x572 (* 54 (* r x)) (* 36 (* r x r00)) ?x867 ?x919 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1003 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x699 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x809 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x893 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1087 (= ?x1082 0)))
 (let ((?x651 (* 6 ?x650)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x544 (* 9 ?x429)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x748 (+ ?x47 ?x381 (* (- 9) (* r s)) (* 9 (* r s00)) ?x544 ?x539 ?x549 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x568) ?x607 (* 18 (* x r00)) ?x651 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x755 (= ?x748 0)))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x507 (* (- 6) ?x429)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x508 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x503 ?x504 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x507 ?x473)))
 (let (($x509 (= ?x508 0)))
 (let ((?x304 (* r00 r00)))
 (let ((?x305 (* 3 ?x304)))
 (let ((?x334 (* (- 1) s00)))
 (let (($x337 (= (+ s ?x334 (* (- 3) (* r r)) ?x305) 0)))
 (and $x337 $x509 $x755 $x1087 $x1381 (not (= ?x320 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x642 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1570 (+ 3 s ?x213)))
 (let ((?x283 (* (- 1) s)))
 (let ((?x915 (+ x ?x283)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x1440 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1742 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1886 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1824 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570))))
 (let ((?x1571 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570)))
 (let ((?x313 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x915)))
 (let ((?x290 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570))))
 (let ((?x359 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570))))
 (let ((?x1347 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570))))
 (let ((?x1316 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1267 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570))))
 (let ((?x1140 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570)))
 (let ((?x1125 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x818 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570))))
 (let ((?x958 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x915)))
 (let ((?x935 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570))))
 (let ((?x2004 (+ (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570)) (* s00 ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570) (* ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570)) (* (- 1) (* ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570)) ?x935 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570)) (* (- 3) (* ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570)) (* (- 3) ?x958) ?x818 (* ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x915) ?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570)) ?x1125 (* 3 ?x1140) (* (- 1) (* s00 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570)) ?x1267 ?x1316 ?x1347 ?x359 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570) (* s00 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570) (* (- 1) (* ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570)) ?x290 (* 3 ?x313) (* (- 1) (* s00 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570)) (* (- 3) ?x1571) ?x1824 (* s00 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570) (* 3 (* r00 r00 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570)) ?x1886 ?x1742 ?x1440)))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1192 (* 108 ?x1349)))
 (let ((?x137 (* 9 s00)))
 (let ((?x594 (* s00 s00)))
 (let ((?x776 (* 51 ?x594)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x530 (* 16 ?x1187)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1739 (* (- 108) ?x808)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x697 (* (- 432) ?x885)))
 (let ((?x525 (* r00 x00)))
 (let ((?x1674 (* 108 ?x525)))
 (let ((?x1200 (+ (* 216 (* r00 s00 x00)) ?x1674 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x697 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1739 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x530 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x776 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1192)))
 (let ((?x143 (* 9 s)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x590 (+ (* (- 24) (* s r)) ?x554 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x572 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x809 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x893 ?x919 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x990 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x750 (+ (* (- 9) (* s r)) ?x539 (* 9 (* r00 s00)) ?x549 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x607 (* 18 (* r00 x)) ?x381 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x712 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x381 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1224 (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1224 (= ?x712 0) (= ?x750 0) (= ?x590 0) (= ?x1200 0) (not (= ?x2004 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x284 (lambda ((r Int) (s Int) (x Int) )(let ((?x283 (* (- 1) s)))
 (let ((?x1395 (+ ?x283 x)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x2006 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395)))
 (let ((?x213 (* 6 r)))
 (let ((?x1389 (+ 3 ?x213 s)))
 (let ((?x705 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x707 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389))))
 (let ((?x616 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x457 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x458 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x785 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x674 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389))))
 (let ((?x1060 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x720 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395)))
 (let ((?x672 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)))
 (let ((?x913 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389))))
 (let ((?x923 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x1109 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395))))
 (let ((?x1212 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389))))
 (let ((?x328 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)))
 (let ((?x2007 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389))))
 (let ((?x320 (+ (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389) ?x2007 (* s00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389) (* (- 3) ?x328) ?x1212 ?x1109 (* (- 1) (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) ?x923 (* (- 1) (* s00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389)) ?x913 (* 3 (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389)) (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)) (* 3 ?x672) (* (- 3) ?x720) ?x1060 ?x674 (* ?x1386 ?x1386 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389) (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389)) ?x785 ?x458 ?x457 ?x616 ?x707 (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389) (* (- 1) (* s00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) (* ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389) (* s00 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389) ?x705 (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389) (* (- 1) (* ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389 ?x1389)) (* 3 (* r00 r00 ?x1386 ?x1386 ?x1395 ?x1395 ?x1395 ?x1389 ?x1389)) (* (- 3) (* r00 r00 ?x1395 ?x1395 ?x1389 ?x1389 ?x1389 ?x1389)) (* 3 ?x2006))))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1379 (* (- 108) ?x1349)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x1378 (* (- 16) ?x1187)))
 (let ((?x1059 (* s00 r00 r00 r00)))
 (let ((?x1374 (* (- 216) ?x1059)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x886 (* 432 ?x885)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1132 (* 108 ?x808)))
 (let ((?x734 (* s00 s00 r00 r00)))
 (let ((?x735 (* 36 ?x734)))
 (let ((?x671 (* s00 s00 r00)))
 (let ((?x1015 (* 108 ?x671)))
 (let ((?x650 (* s00 r00 r00)))
 (let ((?x1003 (* 36 ?x650)))
 (let ((?x594 (* s00 s00)))
 (let ((?x1368 (* (- 51) ?x594)))
 (let ((?x568 (* s r00 r00)))
 (let ((?x867 (* (- 36) ?x568)))
 (let ((?x525 (* r00 x00)))
 (let ((?x1365 (* (- 108) ?x525)))
 (let ((?x516 (* s00 r00 x00)))
 (let ((?x1364 (* (- 216) ?x516)))
 (let ((?x429 (* s00 r00)))
 (let ((?x523 (* 54 ?x429)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1380 (+ ?x143 ?x990 ?x523 ?x1364 ?x1365 (* (- 15) (* s s)) ?x867 ?x1368 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1003 ?x1015 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x735 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1132 (* 108 (* s x)) (* (- 108) (* x x)) ?x886 (* 12 (* s s s00)) ?x1374 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1378 (* 216 (* x x00)) ?x1379)))
 (let (($x1381 (= ?x1380 0)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x699 (* (- 2) ?x671)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x567 (* 24 ?x429)))
 (let ((?x1082 (+ ?x143 ?x990 (* (- 24) (* r s)) (* 24 (* r s00)) ?x567 ?x554 ?x572 (* 54 (* r x)) (* 36 (* r x r00)) ?x867 ?x919 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1003 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x699 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x809 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x893 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1087 (= ?x1082 0)))
 (let ((?x651 (* 6 ?x650)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x544 (* 9 ?x429)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x748 (+ ?x47 ?x381 (* (- 9) (* r s)) (* 9 (* r s00)) ?x544 ?x539 ?x549 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x568) ?x607 (* 18 (* x r00)) ?x651 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x755 (= ?x748 0)))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x507 (* (- 6) ?x429)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x508 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x503 ?x504 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x507 ?x473)))
 (let (($x509 (= ?x508 0)))
 (let ((?x304 (* r00 r00)))
 (let ((?x305 (* 3 ?x304)))
 (let ((?x334 (* (- 1) s00)))
 (let (($x337 (= (+ s ?x334 (* (- 3) (* r r)) ?x305) 0)))
 (let (($x495 (and $x337 $x509 $x755 $x1087 $x1381 (not (= ?x320 0)))))
 (let ((?x1570 (+ 3 s ?x213)))
 (let ((?x915 (+ x ?x283)))
 (let ((?x1440 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1742 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1886 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1824 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570))))
 (let ((?x1571 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570)))
 (let ((?x313 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x915)))
 (let ((?x290 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570))))
 (let ((?x359 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570))))
 (let ((?x1347 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570))))
 (let ((?x1316 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1267 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570))))
 (let ((?x1140 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570)))
 (let ((?x1125 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x818 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570))))
 (let ((?x958 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x915)))
 (let ((?x935 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570))))
 (let ((?x2004 (+ (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570)) (* s00 ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570) (* ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570)) (* (- 1) (* ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570)) ?x935 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570)) (* (- 3) (* ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570)) (* (- 3) ?x958) ?x818 (* ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x915) ?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570)) ?x1125 (* 3 ?x1140) (* (- 1) (* s00 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570)) ?x1267 ?x1316 ?x1347 ?x359 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570) (* s00 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570) (* (- 1) (* ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570)) ?x290 (* 3 ?x313) (* (- 1) (* s00 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570)) (* (- 3) ?x1571) ?x1824 (* s00 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570) (* 3 (* r00 r00 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570)) ?x1886 ?x1742 ?x1440)))
 (let ((?x1192 (* 108 ?x1349)))
 (let ((?x137 (* 9 s00)))
 (let ((?x776 (* 51 ?x594)))
 (let ((?x530 (* 16 ?x1187)))
 (let ((?x1739 (* (- 108) ?x808)))
 (let ((?x697 (* (- 432) ?x885)))
 (let ((?x1674 (* 108 ?x525)))
 (let ((?x1200 (+ (* 216 (* r00 s00 x00)) ?x1674 (* (- 54) (* r00 s00)) (* 15 ?x548) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x697 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1739 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x530 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x776 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1192)))
 (let ((?x590 (+ (* (- 24) (* s r)) ?x554 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x572 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x809 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x893 ?x919 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x990 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x750 (+ (* (- 9) (* s r)) ?x539 (* 9 (* r00 s00)) ?x549 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x607 (* 18 (* r00 x)) ?x381 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x712 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x381 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x472))))
 (let (($x1782 (and (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) ?x304)) 0) (= ?x712 0) (= ?x750 0) (= ?x590 0) (= ?x1200 0) (not (= ?x2004 0)))))
 (rewrite (= $x1782 $x495)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x280 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x272 (* 3 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x270 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x262 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x259 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x256 (* 3 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x239 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x238 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x236 (* 3 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x233 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x226 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x220 (+ (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x228 (- (- ?x220 (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215)) (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x229 (- ?x228 (* ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x231 (- (- ?x229 (* 3 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x240 (+ (- ?x231 ?x226) ?x233 (* ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x212 ?x212 s00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215) ?x236 (* 3 ?x212 ?x212 r00 r00 ?x214 ?x215 ?x215 ?x215 ?x215) ?x238 ?x239)))
 (let ((?x245 (- (- ?x240 (* ?x212 ?x212 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x246 (- ?x245 (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x248 (+ ?x246 (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x250 (- ?x248 (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x254 (+ ?x250 (* ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x260 (+ (- (- ?x254 (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) ?x256) ?x259)))
 (let ((?x266 (- (- (- ?x260 (* ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) ?x262) (* 3 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x269 (+ ?x266 (* ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 3 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x274 (- (- ?x269 ?x270) (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- ?x274 ?x272) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1593 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1570 (+ 3 s ?x213)))
 (let ((?x283 (* (- 1) s)))
 (let ((?x915 (+ x ?x283)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x1440 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1742 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1886 (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1824 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570))))
 (let ((?x1571 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570)))
 (let ((?x313 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x915)))
 (let ((?x290 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570))))
 (let ((?x359 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570))))
 (let ((?x1347 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570))))
 (let ((?x1316 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1267 (* (- 1) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570))))
 (let ((?x1140 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570)))
 (let ((?x1125 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570))))
 (let ((?x818 (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570))))
 (let ((?x958 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x915)))
 (let ((?x935 (* (- 1) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570))))
 (let ((?x2004 (+ (* 3 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570)) (* s00 ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570) (* ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570)) (* (- 1) (* ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570 ?x1570)) ?x935 (* (- 3) (* r00 r00 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570)) (* (- 3) (* ?x1386 ?x1386 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570)) (* (- 3) ?x958) ?x818 (* ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x915) ?x1007 (* 3 (* r00 r00 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570)) ?x1125 (* 3 ?x1140) (* (- 1) (* s00 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570)) ?x1267 ?x1316 ?x1347 ?x359 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570) (* s00 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570) (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x915 ?x1570 ?x1570) (* (- 1) (* ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570 ?x1570)) ?x290 (* 3 ?x313) (* (- 1) (* s00 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570)) (* (- 3) ?x1571) ?x1824 (* s00 ?x1386 ?x1386 ?x915 ?x915 ?x915 ?x1570 ?x1570) (* 3 (* r00 r00 ?x915 ?x915 ?x1570 ?x1570 ?x1570 ?x1570)) ?x1886 ?x1742 ?x1440)))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1192 (* 108 ?x1349)))
 (let ((?x137 (* 9 s00)))
 (let ((?x594 (* s00 s00)))
 (let ((?x776 (* 51 ?x594)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x530 (* 16 ?x1187)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1739 (* (- 108) ?x808)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x697 (* (- 432) ?x885)))
 (let ((?x525 (* r00 x00)))
 (let ((?x1674 (* 108 ?x525)))
 (let ((?x1200 (+ (* 216 (* r00 s00 x00)) ?x1674 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x697 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1739 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x530 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x776 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1192)))
 (let ((?x143 (* 9 s)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x590 (+ (* (- 24) (* s r)) ?x554 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x572 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x809 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x893 ?x919 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x990 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x750 (+ (* (- 9) (* s r)) ?x539 (* 9 (* r00 s00)) ?x549 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x607 (* 18 (* r00 x)) ?x381 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x712 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x381 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1224 (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1782 (and $x1224 (= ?x712 0) (= ?x750 0) (= ?x590 0) (= ?x1200 0) (not (= ?x2004 0)))))
 (let ((?x215 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x272 (* 3 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x270 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x262 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x259 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x256 (* 3 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x239 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x238 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x236 (* 3 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x233 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x226 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x220 (+ (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x228 (- (- ?x220 (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215)) (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x229 (- ?x228 (* ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x231 (- (- ?x229 (* 3 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x240 (+ (- ?x231 ?x226) ?x233 (* ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x212 ?x212 s00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215) ?x236 (* 3 ?x212 ?x212 r00 r00 ?x214 ?x215 ?x215 ?x215 ?x215) ?x238 ?x239)))
 (let ((?x245 (- (- ?x240 (* ?x212 ?x212 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x246 (- ?x245 (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x248 (+ ?x246 (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x250 (- ?x248 (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x254 (+ ?x250 (* ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x260 (+ (- (- ?x254 (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) ?x256) ?x259)))
 (let ((?x266 (- (- (- ?x260 (* ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) ?x262) (* 3 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x269 (+ ?x266 (* ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 3 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x274 (- (- ?x269 ?x270) (* ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x279 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- ?x274 ?x272) 0))))))
 (rewrite (= $x279 $x1782))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x281 (asserted $x280)))
 (let ((@x347 (mp (mp @x281 (quant-intro (proof-bind ?x1593) (= $x280 $x642)) $x642) (rewrite (= $x642 $x642)) $x642)))
 (let ((@x610 (mp~ (mp @x347 (quant-intro (proof-bind ?x284) (= $x642 $x344)) $x344) (sk (~ $x344 $x657)) $x657)))
 (let ((@x358 (mp @x610 (rewrite (= $x657 $x862)) $x862)))
 (let ((@x1139 (and-elim @x358 $x300)))
 (let ((@x796 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x300) $x761)) @x1139 $x761)))
 (let (($x696 (>= ?x1403 0)))
 (let ((@x770 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x300) $x696)) @x1139 $x696)))
 (let (($x1211 (not (<= ?x948 0))))
 (let (($x1606 (>= ?x948 0)))
 (let ((@x1242 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x879 $x1211 (not $x1606))) (and-elim @x358 $x1391) (or $x1211 (not $x1606)))))
 (let ((@x1594 (unit-resolution @x1242 (lemma ((_ th-lemma arith) (hypothesis (not $x1606)) @x770 @x796 false) $x1606) $x1211)))
 ((_ th-lemma arith) @x1594 @x770 @x796 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        35
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             708
 :arith-nonlinear-bounds    28
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      8
 :arith-tableau-max-columns 131
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                19.99
 :memory                    19.38
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                817492
 :num-checks                1
 :propagations              12
 :rlimit-count              27689
 :time                      0.03
 :total-time                0.05)
