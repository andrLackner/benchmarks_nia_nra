unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x759 (+ c!3 k!2)))
 (let ((?x573 (+ k!2 m!1)))
 (let ((?x729 (+ 1 n!0)))
 (let ((?x761 (* ?x729 ?x729 ?x729 ?x573 ?x573 ?x573 ?x759 ?x759)))
 (let ((?x516 (* 215 m!1)))
 (let ((?x688 (* k!2 n!0)))
 (let ((?x554 (* (- 3) ?x688)))
 (let ((?x646 (* (- 72) (* c!3 k!2))))
 (let ((?x233 (* (- 1) (* k!2 k!2 m!1 m!1))))
 (let ((?x663 (* m!1 m!1 m!1 m!1)))
 (let ((?x360 (* (- 1) (* c!3 c!3 m!1 m!1))))
 (let ((?x614 (* (- 2) (* c!3 k!2 m!1 m!1))))
 (let ((?x145 (* (- 24) (* c!3 k!2 m!1))))
 (let ((?x645 (* (- 12) (* c!3 c!3 m!1))))
 (let ((?x422 (* (- 1) (* k!2 n!0 n!0 n!0))))
 (let ((?x535 (* k!2 k!2)))
 (let ((?x551 (* (- 36) ?x535)))
 (let ((?x613 (* (- 3) (* k!2 n!0 n!0))))
 (let ((?x449 (* k!2 m!1 m!1 m!1)))
 (let ((?x538 (* 215 k!2)))
 (let ((?x343 (* (- 12) (* k!2 k!2 m!1))))
 (let ((?x290 (* ?x729 (+ 6 m!1) ?x573 ?x759 ?x759 ?x759)))
 (let ((?x660 (* 108 (* m!1 m!1))))
 (let ((?x247 (* 18 (* k!2 m!1 m!1))))
 (let ((?x605 (* 18 (* m!1 m!1 m!1))))
 (let ((?x227 (* 108 (* k!2 m!1))))
 (let ((?x344 (* (- 36) (* c!3 c!3))))
 (let ((?x647 (+ ?x344 ?x227 ?x605 ?x247 ?x660 ?x290 ?x343 (* (- 3) (* n!0 m!1)) ?x538 ?x449 ?x613 ?x551 ?x422 ?x645 ?x145 ?x614 ?x360 ?x663 ?x233 ?x646 ?x554 (* (- 3) (* n!0 n!0 m!1)) (* (- 1) (* n!0 n!0 n!0 m!1)) ?x516 ?x761)))
 (let (($x1114 (<= ?x647 0)))
 (let ((?x518 (* (- 3) n!0)))
 (let ((?x515 (* (- 3) (* n!0 n!0))))
 (let ((?x576 (+ k!2 ?x515 ?x518)))
 (let (($x575 (<= ?x576 1)))
 (let (($x320 (= ?x576 1)))
 (let ((?x728 (* 2 n!0)))
 (let ((?x225 (* (- 3) k!2)))
 (let ((?x416 (* n!0 m!1)))
 (let ((?x697 (* (- 3) c!3)))
 (let ((?x334 (* ?x647 (+ 3 ?x697 ?x416 ?x225 ?x728 ?x688))))
 (let (($x648 (= ?x334 0)))
 (let (($x333 (not $x648)))
 (let ((?x388 (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x688))))
 (let (($x285 (= ?x388 1)))
 (let ((?x110 (* (- 9) n!0)))
 (let ((?x104 (* (- 1) ?x535)))
 (let ((?x425 (* 9 (* c!3 n!0))))
 (let ((?x754 (* 5 k!2)))
 (let ((?x742 (* 18 c!3)))
 (let ((?x731 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x756 (= ?x731 (- 6))))
 (let (($x314 (and $x756 (= (+ ?x742 ?x754 ?x425 ?x104 ?x110) 4) $x285 $x320 $x333)))
 (let ((?x381 (+ ?x538 ?x516 ?x551 ?x554 (* (- 3) (* m!1 n!0)) ?x290 ?x227 ?x761 ?x660 ?x247 ?x605 ?x663 ?x449 ?x422 (* (- 1) (* m!1 n!0 n!0 n!0)) ?x613 (* (- 3) (* m!1 n!0 n!0)) ?x360 ?x614 ?x233 ?x344 ?x646 ?x645 ?x145 ?x343)))
 (let (($x701 (not (= (* ?x381 (+ 3 ?x697 ?x225 ?x728 ?x688 (* m!1 n!0))) 0))))
 (let (($x348 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x742 ?x754 ?x110 ?x104 ?x425) 4) $x285 (= (+ k!2 ?x518 ?x515) 1) $x701)))
 (let (($x601 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x350 (* m n)))
 (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x222 (* (- 3) c)))
 (let ((?x410 (+ 3 ?x222 (* (- 3) k) ?x59 ?x55 ?x350)))
 (let ((?x755 (* (- 12) (* k k m))))
 (let ((?x752 (* (- 24) (* c k m))))
 (let ((?x748 (* (- 12) (* c c m))))
 (let ((?x744 (* (- 72) (* c k))))
 (let ((?x740 (* (- 36) (* c c))))
 (let ((?x724 (* (- 1) (* k k m m))))
 (let ((?x737 (* (- 2) (* c k m m))))
 (let ((?x722 (* (- 1) (* c c m m))))
 (let ((?x606 (* (- 3) (* m n n))))
 (let ((?x603 (* (- 3) (* k n n))))
 (let ((?x591 (* (- 1) (* m n n n))))
 (let ((?x590 (* (- 1) (* k n n n))))
 (let ((?x487 (* k m m m)))
 (let ((?x486 (* m m m m)))
 (let ((?x469 (* 18 (* m m m))))
 (let ((?x468 (* 18 (* k m m))))
 (let ((?x434 (* m m)))
 (let ((?x467 (* 108 ?x434)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x342 (+ 1 n)))
 (let ((?x433 (* ?x342 ?x342 ?x342 ?x71 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x429 (* k m)))
 (let ((?x466 (* 108 ?x429)))
 (let ((?x415 (+ 6 m)))
 (let ((?x424 (* ?x342 ?x415 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x600 (* (- 3) ?x350)))
 (let ((?x597 (* (- 3) ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x734 (* (- 36) ?x49)))
 (let ((?x599 (* 215 m)))
 (let ((?x598 (* 215 k)))
 (let ((?x289 (+ ?x598 ?x599 ?x734 ?x597 ?x600 ?x424 ?x466 ?x433 ?x467 ?x468 ?x469 ?x486 ?x487 ?x590 ?x591 ?x603 ?x606 ?x722 ?x737 ?x724 ?x740 ?x744 ?x748 ?x752 ?x755)))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 (* c n))) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 $x209 $x261 $x299 (not (= (* ?x289 ?x410) 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x749 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x350 (* m n)))
 (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x222 (* (- 3) c)))
 (let ((?x410 (+ 3 ?x222 (* (- 3) k) ?x59 ?x55 ?x350)))
 (let ((?x755 (* (- 12) (* k k m))))
 (let ((?x752 (* (- 24) (* c k m))))
 (let ((?x748 (* (- 12) (* c c m))))
 (let ((?x744 (* (- 72) (* c k))))
 (let ((?x740 (* (- 36) (* c c))))
 (let ((?x724 (* (- 1) (* k k m m))))
 (let ((?x737 (* (- 2) (* c k m m))))
 (let ((?x722 (* (- 1) (* c c m m))))
 (let ((?x606 (* (- 3) (* m n n))))
 (let ((?x603 (* (- 3) (* k n n))))
 (let ((?x591 (* (- 1) (* m n n n))))
 (let ((?x590 (* (- 1) (* k n n n))))
 (let ((?x487 (* k m m m)))
 (let ((?x486 (* m m m m)))
 (let ((?x469 (* 18 (* m m m))))
 (let ((?x468 (* 18 (* k m m))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x342 (+ 1 n)))
 (let ((?x433 (* ?x342 ?x342 ?x342 ?x71 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x415 (+ 6 m)))
 (let ((?x424 (* ?x342 ?x415 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x600 (* (- 3) ?x350)))
 (let ((?x597 (* (- 3) ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x734 (* (- 36) ?x49)))
 (let ((?x599 (* 215 m)))
 (let ((?x598 (* 215 k)))
 (let ((?x297 (+ ?x598 ?x599 ?x734 ?x597 ?x600 ?x424 (* 72 (* k m)) ?x433 (* 72 (* m m)) ?x468 ?x469 ?x486 ?x487 ?x590 ?x591 ?x603 (* 6 (* m 6 m)) ?x606 (* 6 (* m 6 k)) ?x722 ?x737 ?x724 ?x740 ?x744 ?x748 ?x752 ?x755)))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 (* c n))) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 $x209 $x261 $x299 (not (= (* ?x297 ?x410) 0))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x629 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x350 (* m n)))
 (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x222 (* (- 3) c)))
 (let ((?x410 (+ 3 ?x222 (* (- 3) k) ?x59 ?x55 ?x350)))
 (let ((?x755 (* (- 12) (* k k m))))
 (let ((?x752 (* (- 24) (* c k m))))
 (let ((?x748 (* (- 12) (* c c m))))
 (let ((?x744 (* (- 72) (* c k))))
 (let ((?x740 (* (- 36) (* c c))))
 (let ((?x724 (* (- 1) (* k k m m))))
 (let ((?x737 (* (- 2) (* c k m m))))
 (let ((?x722 (* (- 1) (* c c m m))))
 (let ((?x606 (* (- 3) (* m n n))))
 (let ((?x603 (* (- 3) (* k n n))))
 (let ((?x591 (* (- 1) (* m n n n))))
 (let ((?x590 (* (- 1) (* k n n n))))
 (let ((?x487 (* k m m m)))
 (let ((?x486 (* m m m m)))
 (let ((?x469 (* 18 (* m m m))))
 (let ((?x468 (* 18 (* k m m))))
 (let ((?x434 (* m m)))
 (let ((?x467 (* 108 ?x434)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x342 (+ 1 n)))
 (let ((?x433 (* ?x342 ?x342 ?x342 ?x71 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x429 (* k m)))
 (let ((?x466 (* 108 ?x429)))
 (let ((?x415 (+ 6 m)))
 (let ((?x424 (* ?x342 ?x415 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x600 (* (- 3) ?x350)))
 (let ((?x597 (* (- 3) ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x734 (* (- 36) ?x49)))
 (let ((?x599 (* 215 m)))
 (let ((?x598 (* 215 k)))
 (let ((?x289 (+ ?x598 ?x599 ?x734 ?x597 ?x600 ?x424 ?x466 ?x433 ?x467 ?x468 ?x469 ?x486 ?x487 ?x590 ?x591 ?x603 ?x606 ?x722 ?x737 ?x724 ?x740 ?x744 ?x748 ?x752 ?x755)))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 (* c n))) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x690 (and $x125 $x209 $x261 $x299 (not (= (* ?x289 ?x410) 0)))))
 (let ((?x297 (+ ?x598 ?x599 ?x734 ?x597 ?x600 ?x424 (* 72 ?x429) ?x433 (* 72 ?x434) ?x468 ?x469 ?x486 ?x487 ?x590 ?x591 ?x603 (* 6 (* m 6 m)) ?x606 (* 6 (* m 6 k)) ?x722 ?x737 ?x724 ?x740 ?x744 ?x748 ?x752 ?x755)))
 (let (($x288 (and $x125 $x209 $x261 $x299 (not (= (* ?x297 ?x410) 0)))))
 (rewrite (= $x288 $x690))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x164 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x222 (* (- 3) c)))
 (let ((?x170 (+ 3 ?x222 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x459 (* (- 1) (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let ((?x437 (* (- 1) (* (+ 1 n) (+ 1 n) (+ 1 n) (+ k m)))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x342 (+ 1 n)))
 (let ((?x433 (* ?x342 ?x342 ?x342 ?x71 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x415 (+ 6 m)))
 (let ((?x424 (* ?x342 ?x415 ?x71 ?x68 ?x68 ?x68)))
 (let (($x423 (not (= (* (+ ?x424 ?x433 (* ?x415 ?x415 ?x415 ?x71) ?x437 ?x459) ?x170) 0))))
 (let (($x596 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x193 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x211 ?x212) 4) $x193 $x596 $x423))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x136 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x350 (* m n)))
 (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x222 (* (- 3) c)))
 (let ((?x410 (+ 3 ?x222 (* (- 3) k) ?x59 ?x55 ?x350)))
 (let ((?x755 (* (- 12) (* k k m))))
 (let ((?x752 (* (- 24) (* c k m))))
 (let ((?x748 (* (- 12) (* c c m))))
 (let ((?x744 (* (- 72) (* c k))))
 (let ((?x740 (* (- 36) (* c c))))
 (let ((?x724 (* (- 1) (* k k m m))))
 (let ((?x737 (* (- 2) (* c k m m))))
 (let ((?x722 (* (- 1) (* c c m m))))
 (let ((?x606 (* (- 3) (* m n n))))
 (let ((?x603 (* (- 3) (* k n n))))
 (let ((?x591 (* (- 1) (* m n n n))))
 (let ((?x590 (* (- 1) (* k n n n))))
 (let ((?x487 (* k m m m)))
 (let ((?x486 (* m m m m)))
 (let ((?x469 (* 18 (* m m m))))
 (let ((?x468 (* 18 (* k m m))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x342 (+ 1 n)))
 (let ((?x433 (* ?x342 ?x342 ?x342 ?x71 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x415 (+ 6 m)))
 (let ((?x424 (* ?x342 ?x415 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x600 (* (- 3) ?x350)))
 (let ((?x597 (* (- 3) ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x734 (* (- 36) ?x49)))
 (let ((?x599 (* 215 m)))
 (let ((?x598 (* 215 k)))
 (let ((?x297 (+ ?x598 ?x599 ?x734 ?x597 ?x600 ?x424 (* 72 (* k m)) ?x433 (* 72 (* m m)) ?x468 ?x469 ?x486 ?x487 ?x590 ?x591 ?x603 (* 6 (* m 6 m)) ?x606 (* 6 (* m 6 k)) ?x722 ?x737 ?x724 ?x740 ?x744 ?x748 ?x752 ?x755)))
 (let (($x299 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x261 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x209 (= (+ ?x40 ?x44 ?x211 ?x212 (* 9 (* c n))) 4)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x288 (and $x125 $x209 $x261 $x299 (not (= (* ?x297 ?x410) 0)))))
 (let ((?x463 (+ ?x424 ?x433 (* ?x415 ?x415 ?x415 ?x71) (* (- 1) (* ?x342 ?x342 ?x342 ?x71)) (* (- 1) (* ?x415 ?x415 ?x68 ?x68)))))
 (let ((?x502 (* ?x463 (+ 3 ?x222 (* (- 4) k) (* ?x342 ?x71) (* (- 1) m) ?x59))))
 (let (($x423 (not (= ?x502 0))))
 (let (($x596 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x193 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x572 (and $x125 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x211 ?x212) 4) $x193 $x596 $x423)))
 (rewrite (= $x572 $x288))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x426 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x222 (* (- 3) c)))
 (let ((?x170 (+ 3 ?x222 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x459 (* (- 1) (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let ((?x437 (* (- 1) (* (+ 1 n) (+ 1 n) (+ 1 n) (+ k m)))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x342 (+ 1 n)))
 (let ((?x433 (* ?x342 ?x342 ?x342 ?x71 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x415 (+ 6 m)))
 (let ((?x424 (* ?x342 ?x415 ?x71 ?x68 ?x68 ?x68)))
 (let (($x423 (not (= (* (+ ?x424 ?x433 (* ?x415 ?x415 ?x415 ?x71) ?x437 ?x459) ?x170) 0))))
 (let (($x596 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x566 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (and $x125 (= ?x566 (- 4)) (= (+ ?x222 (* n k) (* (- 1) k) ?x59) (- 1)) $x596 $x423)))))))))))))))))) :qid k!34))
 ))
 (let ((?x156 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x222 (* (- 3) c)))
 (let ((?x170 (+ 3 ?x222 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x459 (* (- 1) (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let ((?x437 (* (- 1) (* (+ 1 n) (+ 1 n) (+ 1 n) (+ k m)))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x342 (+ 1 n)))
 (let ((?x433 (* ?x342 ?x342 ?x342 ?x71 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x415 (+ 6 m)))
 (let ((?x424 (* ?x342 ?x415 ?x71 ?x68 ?x68 ?x68)))
 (let (($x423 (not (= (* (+ ?x424 ?x433 (* ?x415 ?x415 ?x415 ?x71) ?x437 ?x459) ?x170) 0))))
 (let (($x596 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x193 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x212 (* (- 1) ?x49)))
 (let ((?x211 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x572 (and $x125 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x211 ?x212) 4) $x193 $x596 $x423)))
 (let ((?x48 (* 9 n)))
 (let ((?x566 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x616 (and $x125 (= ?x566 (- 4)) (= (+ ?x222 (* n k) (* (- 1) k) ?x59) (- 1)) $x596 $x423)))
 (rewrite (= $x616 $x572)))))))))))))))))))))))))))
 ))
 (let (($x92 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x82 (+ (* ?x68 ?x68 ?x68 ?x71 (+ m 6) ?x72) (* ?x68 ?x68 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72) (* ?x71 (+ m 6) (+ m 6) (+ m 6)))))
 (let ((?x86 (- (- ?x82 (* ?x71 ?x72 ?x72 ?x72)) (* ?x68 ?x68 (+ m 6) (+ m 6)))))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 ?x72)) ?x71) (* 2 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* ?x77 ?x86) 0))))))))))))))))) :qid k!34))
 ))
 (let ((?x583 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x222 (* (- 3) c)))
 (let ((?x170 (+ 3 ?x222 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x459 (* (- 1) (* (+ 6 m) (+ 6 m) (+ c k) (+ c k)))))
 (let ((?x437 (* (- 1) (* (+ 1 n) (+ 1 n) (+ 1 n) (+ k m)))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x342 (+ 1 n)))
 (let ((?x433 (* ?x342 ?x342 ?x342 ?x71 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x415 (+ 6 m)))
 (let ((?x424 (* ?x342 ?x415 ?x71 ?x68 ?x68 ?x68)))
 (let (($x423 (not (= (* (+ ?x424 ?x433 (* ?x415 ?x415 ?x415 ?x71) ?x437 ?x459) ?x170) 0))))
 (let (($x596 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x566 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x125 (= (+ m (* (- 6) n)) 6)))
 (let (($x616 (and $x125 (= ?x566 (- 4)) (= (+ ?x222 (* n k) (* (- 1) k) ?x59) (- 1)) $x596 $x423)))
 (let ((?x72 (+ n 1)))
 (let ((?x82 (+ (* ?x68 ?x68 ?x68 ?x71 (+ m 6) ?x72) (* ?x68 ?x68 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72) (* ?x71 (+ m 6) (+ m 6) (+ m 6)))))
 (let ((?x86 (- (- ?x82 (* ?x71 ?x72 ?x72 ?x72)) (* ?x68 ?x68 (+ m 6) (+ m 6)))))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 ?x72)) ?x71) (* 2 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x91 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* ?x77 ?x86) 0))))))
 (rewrite (= $x91 $x616))))))))))))))))))))))))))))))
 ))
 (let ((@x93 (asserted $x92)))
 (let ((@x696 (mp (mp @x93 (quant-intro (proof-bind ?x583) (= $x92 $x426)) $x426) (rewrite (= $x426 $x426)) $x426)))
 (let ((@x631 (mp (mp @x696 (quant-intro (proof-bind ?x156) (= $x426 $x164)) $x164) (quant-intro (proof-bind ?x136) (= $x164 $x749)) $x749)))
 (let ((@x351 (mp~ (mp @x631 (quant-intro (proof-bind ?x629) (= $x749 $x601)) $x601) (sk (~ $x601 $x348)) $x348)))
 (let ((@x390 (mp @x351 (rewrite (= $x348 $x314)) $x314)))
 (let ((@x307 (and-elim @x390 $x320)))
 (let ((@x625 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x320) $x575)) @x307 $x575)))
 (let (($x607 (>= ?x576 1)))
 (let ((@x553 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x320) $x607)) @x307 $x607)))
 (let (($x704 (<= ?x731 (- 6))))
 (let ((@x655 (and-elim @x390 $x756)))
 (let ((@x452 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x756) $x704)) @x655 $x704)))
 (let (($x723 (>= ?x731 (- 6))))
 (let ((@x253 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x756) $x723)) @x655 $x723)))
 (let (($x322 (<= ?x388 1)))
 (let ((@x332 (and-elim @x390 $x285)))
 (let ((@x666 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x285) $x322)) @x332 $x322)))
 (let (($x574 (>= ?x388 1)))
 (let ((@x111 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x285) $x574)) @x332 $x574)))
 (let ((@x1534 (hypothesis (not $x1114))))
 (let (($x1494 (not (<= ?x334 0))))
 (let (($x470 (>= ?x334 0)))
 (let (($x439 (not $x470)))
 (let ((@x461 (hypothesis $x439)))
 (let ((@x1650 (lemma ((_ th-lemma arith) @x461 @x1534 @x111 @x666 @x253 @x452 @x253 @x452 @x553 @x625 false) (or $x1114 $x470))))
 (let (($x1130 (>= ?x647 0)))
 (let ((@x1520 (hypothesis (not $x1130))))
 (let ((@x1332 (lemma ((_ th-lemma arith) @x461 @x1520 @x111 @x666 @x253 @x452 @x253 @x452 @x553 @x625 false) (or $x1130 $x470))))
 (let ((@x1653 ((_ th-lemma arith farkas 1 1 1) @x461 (unit-resolution @x1332 @x461 $x1130) (unit-resolution @x1650 @x461 $x1114) false)))
 (let ((@x1666 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x648 $x1494 $x439)) (and-elim @x390 $x333) (or $x1494 $x439))))
 (let ((@x1158 (unit-resolution @x1666 (lemma @x1653 $x470) $x1494)))
 (let ((@x1199 (lemma ((_ th-lemma arith) @x1158 @x1534 @x111 @x666 @x253 @x452 @x253 @x452 @x553 @x625 false) $x1114)))
 (let ((@x1203 (lemma ((_ th-lemma arith) @x1158 @x1520 @x111 @x666 @x253 @x452 @x253 @x452 @x553 @x625 false) $x1130)))
 ((_ th-lemma arith farkas 1 1 1) @x1158 @x1203 @x1199 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 191
 :arith-assert-diseq        31
 :arith-assert-lower        1641
 :arith-assert-upper        825
 :arith-bound-prop          10
 :arith-branch-var          27
 :arith-conflicts           103
 :arith-eq-adapter          22
 :arith-fixed-eqs           243
 :arith-gcd-tests           420
 :arith-gomory-cuts         18
 :arith-grobner             132
 :arith-ineq-splits         27
 :arith-max-min             11350
 :arith-nonlinear-bounds    472
 :arith-nonlinear-horner    1453
 :arith-num-rows            19
 :arith-offset-eqs          15
 :arith-patches             99
 :arith-patches_succ        45
 :arith-pivots              2000
 :arith-pseudo-nonlinear    259
 :arith-row-summations      13705
 :arith-tableau-max-columns 74
 :arith-tableau-max-rows    19
 :conflicts                 107
 :decisions                 356
 :del-clause                204
 :final-checks              275
 :max-memory                5.65
 :memory                    3.29
 :minimized-lits            11
 :mk-bool-var               515
 :mk-clause                 485
 :num-allocs                877242618
 :num-checks                1
 :propagations              581
 :restarts                  1
 :rlimit-count              3849079
 :time                      3.37
 :total-time                3.37)
