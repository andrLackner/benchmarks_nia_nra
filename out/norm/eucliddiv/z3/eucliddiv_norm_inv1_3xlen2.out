unsat
((set-logic NIA)
(proof
(let (($x67 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x49 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00)))
 (let ((?x55 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x59 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00)))
 (let ((?x45 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x52 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00)))
 (let ((?x46 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x56 (* ?x42 ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x50 (* ?x42 ?x43 ?x43 ?x43 ?x43 y00)))
 (let ((?x28 (- 1)))
 (let ((?x44 (* ?x28 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00)))
 (let ((?x47 (- ?x44 ?x45)))
 (let ((?x48 (- ?x47 ?x46)))
 (let ((?x51 (+ ?x48 ?x49 ?x50)))
 (let ((?x53 (- ?x51 ?x52)))
 (let ((?x54 (- ?x53 ?x50)))
 (let ((?x57 (+ ?x54 ?x55 ?x56)))
 (let ((?x58 (- ?x57 ?x56)))
 (let ((?x60 (+ ?x58 ?x46 ?x52 ?x45 ?x59)))
 (let ((?x61 (- ?x60 ?x55)))
 (let ((?x62 (- ?x61 ?x49)))
 (let (($x63 (= ?x62 0)))
 (let (($x64 (not $x63)))
 (let (($x65 (or $x64)))
 (let (($x41 (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0)))
 (let (($x33 (= (+ (* ?x28 y00) y) 0)))
 (and $x33 $x41 $x65)))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x314 (exists ((q Int) (r Int) (y Int) )(! false :qid k!29))
 ))
 (let ((?x317 (lambda ((q Int) (r Int) (y Int) )(let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x49 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00)))
 (let ((?x55 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x59 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00)))
 (let ((?x45 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x52 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00)))
 (let ((?x46 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x56 (* ?x42 ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x50 (* ?x42 ?x43 ?x43 ?x43 ?x43 y00)))
 (let ((?x28 (- 1)))
 (let ((?x44 (* ?x28 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00)))
 (let ((?x47 (- ?x44 ?x45)))
 (let ((?x48 (- ?x47 ?x46)))
 (let ((?x51 (+ ?x48 ?x49 ?x50)))
 (let ((?x53 (- ?x51 ?x52)))
 (let ((?x54 (- ?x53 ?x50)))
 (let ((?x57 (+ ?x54 ?x55 ?x56)))
 (let ((?x58 (- ?x57 ?x56)))
 (let ((?x60 (+ ?x58 ?x46 ?x52 ?x45 ?x59)))
 (let ((?x61 (- ?x60 ?x55)))
 (let ((?x62 (- ?x61 ?x49)))
 (let (($x63 (= ?x62 0)))
 (let (($x64 (not $x63)))
 (let (($x65 (or $x64)))
 (let (($x41 (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0)))
 (let (($x33 (= (+ (* ?x28 y00) y) 0)))
 (let (($x66 (and $x33 $x41 $x65)))
 (let (($x379 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x171 (= (+ (* (- 1) y00) y) 0)))
 (let (($x149 (and $x171 $x379 false)))
 (let ((?x72 (* (- 1) y00)))
 (let ((?x80 (+ r ?x72)))
 (let ((?x74 (+ 1 q)))
 (let ((?x192 (* y00 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x116 (+ ?x192 (* (- 1) ?x192))))
 (let ((@x237 (rewrite (= ?x43 ?x80))))
 (let ((@x290 (rewrite (= ?x42 ?x74))))
 (let ((@x280 (monotonicity @x290 @x290 @x237 @x237 @x237 @x237 @x237 (= ?x49 (* ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 y00)))))
 (let ((@x313 (trans @x280 (rewrite (= (* ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 y00) ?x192)) (= ?x49 ?x192))))
 (let ((?x189 (* y00 y00 ?x74 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x220 (+ ?x192 ?x189)))
 (let ((?x234 (+ ?x220 (* (- 1) ?x189))))
 (let ((?x93 (* ?x74 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00)))
 (let ((@x95 (monotonicity @x290 @x290 @x290 @x290 @x237 @x237 @x237 @x237 @x237 @x237 @x237 (= ?x55 ?x93))))
 (let ((@x331 (trans @x95 (rewrite (= ?x93 ?x189)) (= ?x55 ?x189))))
 (let ((?x143 (* y00 y00 y00 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x352 (* y00 y00 y00 y00 ?x74 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x451 (* y00 y00 y00 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x258 (* y00 y00 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x512 (* (- 1) ?x451)))
 (let ((?x610 (* (- 1) ?x258)))
 (let ((?x578 (* (- 1) ?x352)))
 (let ((?x240 (* (- 1) ?x143)))
 (let ((?x456 (+ ?x240 ?x578 ?x610 ?x192 ?x512 ?x189)))
 (let ((?x147 (+ ?x456 ?x258 ?x451 ?x352 ?x143)))
 (let ((@x447 (rewrite (= (* ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00 y00) ?x143))))
 (let ((@x465 (monotonicity @x290 @x290 @x237 @x237 @x237 @x237 @x237 (= ?x59 (* ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00 y00)))))
 (let ((?x367 (* ?x74 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00 y00 y00)))
 (let ((@x365 (monotonicity @x290 @x290 @x290 @x290 @x237 @x237 @x237 @x237 @x237 @x237 @x237 (= ?x45 ?x367))))
 (let ((@x497 (trans @x365 (rewrite (= ?x367 ?x352)) (= ?x45 ?x352))))
 (let ((?x470 (* ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00 y00)))
 (let ((@x457 (monotonicity @x290 @x290 @x290 @x237 @x237 @x237 @x237 @x237 @x237 (= ?x52 ?x470))))
 (let ((@x520 (trans @x457 (rewrite (= ?x470 ?x451)) (= ?x52 ?x451))))
 (let ((?x153 (* ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00)))
 (let ((@x272 (monotonicity @x290 @x290 @x290 @x237 @x237 @x237 @x237 @x237 @x237 (= ?x46 ?x153))))
 (let ((@x507 (trans @x272 (rewrite (= ?x153 ?x258)) (= ?x46 ?x258))))
 (let ((?x202 (* y00 y00 y00 y00 ?x74 ?x74 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x163 (+ ?x240 ?x578 ?x610 ?x192 ?x512 ?x189 ?x202)))
 (let ((?x473 (+ ?x163 (* (- 1) ?x202))))
 (let ((?x285 (* ?x74 ?x74 ?x74 ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00 y00 y00)))
 (let ((@x207 (monotonicity @x290 @x290 @x290 @x290 @x290 @x237 @x237 @x237 @x237 @x237 @x237 @x237 @x237 (= ?x56 ?x285))))
 (let ((@x340 (trans @x207 (rewrite (= ?x285 ?x202)) (= ?x56 ?x202))))
 (let ((?x348 (+ ?x240 ?x578 ?x610 ?x192 ?x512)))
 (let ((?x454 (* y00 ?x74 ?x80 ?x80 ?x80 ?x80)))
 (let ((?x199 (+ ?x240 ?x578 ?x610 ?x192 ?x454 ?x512)))
 (let ((?x319 (+ ?x199 (* (- 1) ?x454))))
 (let ((@x471 (monotonicity @x290 @x237 @x237 @x237 @x237 (= ?x50 (* ?x74 ?x80 ?x80 ?x80 ?x80 y00)))))
 (let ((@x482 (trans @x471 (rewrite (= (* ?x74 ?x80 ?x80 ?x80 ?x80 y00) ?x454)) (= ?x50 ?x454))))
 (let ((?x478 (+ ?x240 ?x578 ?x610 ?x192 ?x454)))
 (let ((?x75 (+ ?x478 ?x512)))
 (let ((?x519 (- ?x478 ?x451)))
 (let ((?x230 (* (- 1) ?x74 ?x74 ?x80 ?x80 ?x80 ?x80 ?x80 y00 y00 y00)))
 (let ((@x142 (monotonicity (rewrite (= ?x28 (- 1))) @x290 @x290 @x237 @x237 @x237 @x237 @x237 (= ?x44 ?x230))))
 (let ((@x446 (monotonicity (trans @x142 (rewrite (= ?x230 ?x240)) (= ?x44 ?x240)) @x497 (= ?x47 (- ?x240 ?x352)))))
 (let ((@x283 (trans @x446 (rewrite (= (- ?x240 ?x352) (+ ?x240 ?x578))) (= ?x47 (+ ?x240 ?x578)))))
 (let ((@x82 (trans (monotonicity @x283 @x507 (= ?x48 (- (+ ?x240 ?x578) ?x258))) (rewrite (= (- (+ ?x240 ?x578) ?x258) (+ (+ ?x240 ?x578) ?x610))) (= ?x48 (+ (+ ?x240 ?x578) ?x610)))))
 (let ((@x320 (trans @x82 (rewrite (= (+ (+ ?x240 ?x578) ?x610) (+ ?x240 ?x578 ?x610))) (= ?x48 (+ ?x240 ?x578 ?x610)))))
 (let ((@x479 (monotonicity @x320 @x313 @x482 (= ?x51 (+ (+ ?x240 ?x578 ?x610) ?x192 ?x454)))))
 (let ((@x474 (trans @x479 (rewrite (= (+ (+ ?x240 ?x578 ?x610) ?x192 ?x454) ?x478)) (= ?x51 ?x478))))
 (let ((@x196 (trans (monotonicity @x474 @x520 (= ?x53 ?x519)) (rewrite (= ?x519 ?x75)) (= ?x53 ?x75))))
 (let ((@x395 (monotonicity (trans @x196 (rewrite (= ?x75 ?x199)) (= ?x53 ?x199)) @x482 (= ?x54 (- ?x199 ?x454)))))
 (let ((@x88 (trans (trans @x395 (rewrite (= (- ?x199 ?x454) ?x319)) (= ?x54 ?x319)) (rewrite (= ?x319 ?x348)) (= ?x54 ?x348))))
 (let ((@x269 (trans (monotonicity @x88 @x331 @x340 (= ?x57 (+ ?x348 ?x189 ?x202))) (rewrite (= (+ ?x348 ?x189 ?x202) ?x163)) (= ?x57 ?x163))))
 (let ((@x489 (trans (monotonicity @x269 @x340 (= ?x58 (- ?x163 ?x202))) (rewrite (= (- ?x163 ?x202) ?x473)) (= ?x58 ?x473))))
 (let ((@x156 (monotonicity (trans @x489 (rewrite (= ?x473 ?x456)) (= ?x58 ?x456)) @x507 @x520 @x497 (trans @x465 @x447 (= ?x59 ?x143)) (= ?x60 ?x147))))
 (let ((@x247 (monotonicity (trans @x156 (rewrite (= ?x147 ?x220)) (= ?x60 ?x220)) @x331 (= ?x61 (- ?x220 ?x189)))))
 (let ((@x111 (trans (trans @x247 (rewrite (= (- ?x220 ?x189) ?x234)) (= ?x61 ?x234)) (rewrite (= ?x234 ?x192)) (= ?x61 ?x192))))
 (let ((@x120 (trans (monotonicity @x111 @x313 (= ?x62 (- ?x192 ?x192))) (rewrite (= (- ?x192 ?x192) ?x116)) (= ?x62 ?x116))))
 (let ((@x126 (monotonicity (trans @x120 (rewrite (= ?x116 0)) $x63) (= $x63 (= 0 0)))))
 (let ((@x133 (monotonicity (trans @x126 (rewrite (= (= 0 0) true)) (= $x63 true)) (= $x64 (not true)))))
 (let ((@x140 (monotonicity (trans @x133 (rewrite (= (not true) false)) (= $x64 false)) (= $x65 (or false)))))
 (let ((@x152 (monotonicity (rewrite (= $x33 $x171)) (rewrite (= $x41 $x379)) (trans @x140 (rewrite (= (or false) false)) (= $x65 false)) (= $x66 $x149))))
 (trans @x152 (rewrite (= $x149 false)) (= $x66 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x303 (trans (quant-intro (proof-bind ?x317) (= $x67 $x314)) (elim-unused (= $x314 false)) (= $x67 false))))
 (let ((@x68 (asserted $x67)))
 (mp @x68 @x303 false))))))))

(:max-memory   3.45
 :memory       3.14
 :mk-bool-var  5
 :num-allocs   938662
 :rlimit-count 445
 :time         0.01
 :total-time   0.01)
