unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x2406 (* r!2 r!2)))
 (let ((?x1610 (* (- 756) ?x2406)))
 (let ((?x2390 (* s!1 s!1 s!1)))
 (let ((?x879 (* (- 4) ?x2390)))
 (let ((?x445 (* (- 162) r!2)))
 (let ((?x2310 (* (- 216) (* x00 x!0))))
 (let ((?x2309 (* 432 (* r00 r00 r00 x!0))))
 (let ((?x1339 (* x00 x00)))
 (let ((?x1340 (* 108 ?x1339)))
 (let ((?x1271 (* s00 x!0)))
 (let ((?x407 (* 108 ?x1271)))
 (let ((?x1177 (* s00 s00 s00)))
 (let ((?x1178 (* 16 ?x1177)))
 (let ((?x1914 (* (- 216) (* s00 r00 x!0))))
 (let ((?x893 (* (- 12) (* s00 s!1 s!1))))
 (let ((?x1049 (* s00 r00 r00 r00)))
 (let ((?x1050 (* 216 ?x1049)))
 (let ((?x976 (* (- 864) (* r!2 r!2 r!2))))
 (let ((?x906 (* s!1 s!1)))
 (let ((?x1186 (* 195 ?x906)))
 (let ((?x875 (* r00 r00 r00 x00)))
 (let ((?x905 (* (- 432) ?x875)))
 (let ((?x447 (* 297 s!1)))
 (let ((?x798 (* s00 x00)))
 (let ((?x1134 (* (- 108) ?x798)))
 (let ((?x1241 (* 36 (* r00 r00 s!1 s!1))))
 (let ((?x724 (* s00 s00 r00 r00)))
 (let ((?x768 (* (- 36) ?x724)))
 (let ((?x690 (* x!0 x!0)))
 (let ((?x881 (* 108 ?x690)))
 (let ((?x661 (* s00 s00 r00)))
 (let ((?x1032 (* (- 108) ?x661)))
 (let ((?x640 (* s00 r00 r00)))
 (let ((?x1267 (* (- 36) ?x640)))
 (let ((?x584 (* s00 s00)))
 (let ((?x1214 (* 51 ?x584)))
 (let ((?x2314 (* (- 324) x!0)))
 (let ((?x515 (* r00 x00)))
 (let ((?x511 (* 108 ?x515)))
 (let ((?x506 (* s00 r00 x00)))
 (let ((?x507 (* 216 ?x506)))
 (let ((?x462 (* r00 r00 r00)))
 (let ((?x1461 (* (- 648) ?x462)))
 (let ((?x419 (* s00 r00)))
 (let ((?x1248 (* 270 ?x419)))
 (let ((?x366 (* r00 x!0)))
 (let ((?x451 (* (- 108) ?x366)))
 (let ((?x294 (* r00 r00)))
 (let ((?x1278 (* 432 ?x294)))
 (let ((?x2008 (* 324 x00)))
 (let ((?x1150 (* 162 r00)))
 (let ((?x2421 (* (- 297) s00)))
 (let ((?x2502 (+ ?x2421 ?x1150 ?x2008 ?x1278 ?x451 ?x1248 ?x1461 ?x507 ?x511 ?x2314 ?x1214 (* 432 (* r00 r00 s!1 r!2)) ?x1267 (* 162 (* r00 s!1)) ?x1032 ?x881 (* (- 1296) (* r00 r00 r00 r!2)) (* (- 324) (* x!0 s!1)) ?x768 (* (- 432) (* s00 r!2 r!2)) (* (- 432) (* s!1 r!2 r!2)) ?x1241 ?x1134 (* 324 (* s00 r00 s!1)) ?x447 (* 1512 (* r00 r00 r!2)) (* 648 (* x00 r!2)) (* (- 246) (* s00 s!1)) ?x905 ?x1186 ?x976 (* 648 (* s00 r00 r!2)) ?x1050 ?x893 ?x1914 (* (- 828) (* s00 r!2)) (* (- 648) (* x!0 r!2)) ?x1178 ?x407 ?x1340 (* 1296 (* r00 r00 r!2 r!2)) ?x2309 ?x2310 (* 324 (* x00 s!1)) (* (- 144) (* s00 s!1 r!2)) (* 324 (* r00 r!2)) (* (- 72) (* s!1 s!1 r!2)) (* 396 (* s!1 r!2)) ?x445 (* (- 648) (* r00 r00 r00 s!1)) (* 252 (* r00 r00 s!1)) ?x879 ?x1610)))
 (let (($x864 (<= ?x2502 0)))
 (let ((?x1758 (* (- 3) s!1)))
 (let ((?x1333 (* 4 ?x584)))
 (let ((?x1289 (* 18 ?x515)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1284 (+ ?x44 (* (- 18) ?x366) (* (- 9) ?x419) ?x1289 ?x1333 (* (- 6) ?x640) (* 9 (* r00 s!1)) ?x1758 (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* (- 2) ?x906) (* 6 (* s00 r00 r!2)) (* (- 9) (* s00 r!2)) (* (- 18) (* x!0 r!2)) (* 9 (* s!1 r!2)) (* 6 (* r00 r00 s!1)) (* (- 6) (* r00 s!1 r!2)))))
 (let (($x2546 (<= ?x1284 0)))
 (let (($x1292 (= ?x1284 0)))
 (let ((?x736 (* (- 6) r!2)))
 (let ((?x1272 (* 6 r!2)))
 (let ((?x1857 (+ 3 s!1 ?x1272)))
 (let ((?x1262 (+ 1 r!2)))
 (let ((?x740 (* (- 1) s!1)))
 (let ((?x771 (+ x!0 ?x740)))
 (let ((?x657 (+ (- 3) (* (- 1) (* ?x1262 ?x1262 ?x771 ?x771 ?x771 ?x1857 ?x1857 ?x1857)) ?x740 (* ?x1262 ?x1262 ?x1262 ?x1857 ?x1857) (* ?x1262 ?x1262 ?x1262 ?x1857 ?x1857 ?x1857) ?x736)))
 (let ((?x318 (* ?x657 ?x2502)))
 (let (($x811 (= ?x318 0)))
 (let (($x317 (not $x811)))
 (let ((?x2284 (* r00 r00 s!1)))
 (let ((?x1542 (* 36 ?x2284)))
 (let ((?x832 (* (- 9) s!1)))
 (let ((?x545 (* (- 54) ?x419)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2308 (+ ?x137 ?x451 ?x545 ?x507 ?x511 ?x1214 ?x1267 (* 54 (* r00 s!1)) ?x1032 ?x881 (* (- 108) (* x!0 s!1)) ?x768 ?x1241 ?x1134 (* 108 (* s00 r00 s!1)) ?x832 (* (- 66) (* s00 s!1)) ?x905 (* 15 ?x906) ?x1050 ?x893 ?x1914 ?x1178 ?x407 ?x1340 ?x2309 ?x2310 (* 108 (* x00 s!1)) (* (- 216) (* r00 r00 r00 s!1)) ?x1542 ?x879)))
 (let (($x2233 (= ?x2308 0)))
 (let ((?x870 (* r00 r00 x00)))
 (let ((?x2566 (* 36 ?x870)))
 (let ((?x2515 (* (- 6) ?x798)))
 (let ((?x2567 (* 15 ?x584)))
 (let ((?x2442 (* 54 ?x515)))
 (let ((?x1698 (+ ?x137 (* (- 54) ?x366) (* (- 24) ?x419) (* (- 36) (* r00 r00 x!0)) ?x2442 ?x2567 ?x1267 (* 24 (* r00 s!1)) (* 2 ?x661) (* (- 6) (* x!0 s!1)) ?x2515 (* 2 (* s00 r00 s!1)) ?x832 (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) ?x2566 (* (- 3) ?x906) (* 36 (* r00 x00 r!2)) (* (- 24) (* s00 r!2)) (* (- 54) (* x!0 r!2)) (* 6 ?x1271) (* (- 36) (* r00 x!0 r!2)) (* (- 4) (* r00 s!1 s!1)) (* 4 (* s00 s00 r!2)) (* 6 (* x00 s!1)) (* (- 2) (* s00 s!1 r!2)) (* (- 2) (* s!1 s!1 r!2)) (* 24 (* s!1 r!2)) ?x1542)))
 (let (($x2051 (= ?x1698 0)))
 (let ((?x828 (* 3 r!2)))
 (let ((?x2186 (* 6 x!0)))
 (let ((?x463 (* 12 ?x462)))
 (let ((?x497 (* (- 6) ?x419)))
 (let ((?x494 (* (- 6) x00)))
 (let ((?x493 (* (- 3) r00)))
 (let ((?x1197 (+ ?x44 ?x493 ?x494 ?x497 ?x463 ?x2186 ?x1758 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) (* 2 (* s!1 r!2)) ?x828)))
 (let (($x624 (= ?x1197 0)))
 (let ((?x1616 (* (- 3) ?x294)))
 (let ((?x357 (+ s00 ?x1616 ?x740 (* 3 ?x2406))))
 (let (($x525 (= ?x357 0)))
 (let (($x805 (and $x525 $x624 $x1292 $x2051 $x2233 $x317)))
 (let ((?x1501 (+ ?x445 ?x447 ?x2314 ?x2421 ?x1150 ?x2008 ?x1610 ?x1278 (* 396 (* r!2 s!1)) (* 1512 (* r!2 r00 r00)) (* 1296 (* r!2 r!2 r00 r00)) (* (- 828) (* r!2 s00)) ?x1248 ?x1461 ?x507 ?x511 ?x1186 (* (- 648) (* r!2 x!0)) (* 252 (* s!1 r00 r00)) ?x1214 (* 108 (* x!0 s00)) (* (- 108) (* x!0 r00)) (* (- 648) (* s!1 r00 r00 r00)) ?x1267 (* 648 (* r!2 x00)) ?x1032 (* (- 246) (* s!1 s00)) (* 162 (* s!1 r00)) (* 324 (* s!1 x00)) (* 648 (* r!2 s00 r00)) ?x768 (* 324 (* s!1 s00 r00)) ?x879 ?x1134 (* (- 72) (* r!2 s!1 s!1)) (* (- 324) (* s!1 x!0)) ?x881 ?x905 (* (- 144) (* r!2 s!1 s00)) (* (- 12) (* s!1 s!1 s00)) ?x1050 (* 432 (* x!0 r00 r00 r00)) (* 324 (* r!2 r00)) (* (- 216) (* x!0 s00 r00)) (* 36 (* s!1 s!1 r00 r00)) ?x1178 (* (- 216) (* x!0 x00)) ?x1340 (* (- 1296) (* r!2 r00 r00 r00)) ?x976 (* (- 432) (* r!2 r!2 s!1)) (* 432 (* r!2 s!1 r00 r00)) (* (- 432) (* r!2 r!2 s00)))))
 (let ((?x1964 (+ 3 ?x1272 s!1)))
 (let ((?x742 (+ ?x740 x!0)))
 (let ((?x444 (+ (- 3) ?x736 ?x740 (* (- 1) (* ?x1262 ?x1262 ?x742 ?x742 ?x742 ?x1964 ?x1964 ?x1964)) (* ?x1262 ?x1262 ?x1262 ?x1964 ?x1964 ?x1964) (* ?x1262 ?x1262 ?x1262 ?x1964 ?x1964))))
 (let ((?x1369 (* (- 108) ?x1339)))
 (let ((?x1368 (* (- 16) ?x1177)))
 (let ((?x1364 (* (- 216) ?x1049)))
 (let ((?x876 (* 432 ?x875)))
 (let ((?x1122 (* 108 ?x798)))
 (let ((?x725 (* 36 ?x724)))
 (let ((?x1005 (* 108 ?x661)))
 (let ((?x993 (* 36 ?x640)))
 (let ((?x1358 (* (- 51) ?x584)))
 (let ((?x1871 (* s!1 r00 r00)))
 (let ((?x937 (* (- 36) ?x1871)))
 (let ((?x1355 (* (- 108) ?x515)))
 (let ((?x1354 (* (- 216) ?x506)))
 (let ((?x513 (* 54 ?x419)))
 (let ((?x980 (* (- 9) s00)))
 (let ((?x2028 (* 9 s!1)))
 (let ((?x734 (+ ?x2028 ?x980 ?x513 ?x1354 ?x1355 (* (- 15) ?x906) ?x937 ?x1358 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x993 ?x1005 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x725 (* (- 108) (* s!1 s00 r00)) (* 4 ?x2390) ?x1122 (* 108 (* s!1 x!0)) (* (- 108) ?x690) ?x876 (* 12 (* s!1 s!1 s00)) ?x1364 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1368 (* 216 (* x!0 x00)) ?x1369)))
 (let ((?x883 (* (- 36) ?x870)))
 (let ((?x799 (* 6 ?x798)))
 (let ((?x689 (* (- 2) ?x661)))
 (let ((?x909 (* (- 15) ?x584)))
 (let ((?x544 (* (- 54) ?x515)))
 (let ((?x557 (* 24 ?x419)))
 (let ((?x2465 (+ ?x2028 ?x980 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x557 ?x544 (* 3 ?x906) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x937 ?x909 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x993 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x689 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x799 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x883 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x641 (* 6 ?x640)))
 (let ((?x597 (* (- 4) ?x584)))
 (let ((?x529 (* (- 18) ?x515)))
 (let ((?x534 (* 9 ?x419)))
 (let ((?x371 (* (- 3) s00)))
 (let ((?x2327 (+ (* 3 s!1) ?x371 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x534 ?x529 (* 2 ?x906) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1871) ?x597 (* 18 (* x!0 r00)) ?x641 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1647 (+ ?x828 ?x1758 ?x2186 ?x44 ?x493 ?x494 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x497 ?x463)))
 (let (($x1833 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x2406) (* 3 ?x294)) 0) (= ?x1647 0) (= ?x2327 0) (= ?x2465 0) (= ?x734 0) (not (= (* ?x444 ?x1501) 0)))))
 (let (($x945 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1920 (* (- 432) (* r r s00))))
 (let ((?x1763 (* (- 432) (* r r s))))
 (let ((?x1709 (* (- 864) (* r r r))))
 (let ((?x1472 (* (- 1296) (* r r00 r00 r00))))
 (let ((?x1339 (* x00 x00)))
 (let ((?x1340 (* 108 ?x1339)))
 (let ((?x1313 (* x x00)))
 (let ((?x1326 (* (- 216) ?x1313)))
 (let ((?x1177 (* s00 s00 s00)))
 (let ((?x1178 (* 16 ?x1177)))
 (let ((?x1147 (* x s00 r00)))
 (let ((?x1160 (* (- 216) ?x1147)))
 (let ((?x1049 (* s00 r00 r00 r00)))
 (let ((?x1050 (* 216 ?x1049)))
 (let ((?x933 (* s s s00)))
 (let ((?x962 (* (- 12) ?x933)))
 (let ((?x922 (* r s s00)))
 (let ((?x1939 (* (- 144) ?x922)))
 (let ((?x875 (* r00 r00 r00 x00)))
 (let ((?x905 (* (- 432) ?x875)))
 (let ((?x847 (* x x)))
 (let ((?x848 (* 108 ?x847)))
 (let ((?x802 (* r s s)))
 (let ((?x1764 (* (- 72) ?x802)))
 (let ((?x798 (* s00 x00)))
 (let ((?x1134 (* (- 108) ?x798)))
 (let ((?x796 (* s s s)))
 (let ((?x816 (* (- 4) ?x796)))
 (let ((?x724 (* s00 s00 r00 r00)))
 (let ((?x768 (* (- 36) ?x724)))
 (let ((?x717 (* s x00)))
 (let ((?x2564 (* 324 ?x717)))
 (let ((?x661 (* s00 s00 r00)))
 (let ((?x1032 (* (- 108) ?x661)))
 (let ((?x640 (* s00 r00 r00)))
 (let ((?x1267 (* (- 36) ?x640)))
 (let ((?x610 (* x r00)))
 (let ((?x1237 (* (- 108) ?x610)))
 (let ((?x584 (* s00 s00)))
 (let ((?x1214 (* 51 ?x584)))
 (let ((?x542 (* r x)))
 (let ((?x2303 (* (- 648) ?x542)))
 (let ((?x515 (* r00 x00)))
 (let ((?x511 (* 108 ?x515)))
 (let ((?x506 (* s00 r00 x00)))
 (let ((?x507 (* 216 ?x506)))
 (let ((?x462 (* r00 r00 r00)))
 (let ((?x1461 (* (- 648) ?x462)))
 (let ((?x419 (* s00 r00)))
 (let ((?x1248 (* 270 ?x419)))
 (let ((?x392 (* r s00)))
 (let ((?x2103 (* (- 828) ?x392)))
 (let ((?x294 (* r00 r00)))
 (let ((?x1278 (* 432 ?x294)))
 (let ((?x2008 (* 324 x00)))
 (let ((?x1150 (* 162 r00)))
 (let ((?x2421 (* (- 297) s00)))
 (let ((?x2293 (* (- 324) x)))
 (let ((?x1285 (+ (* (- 162) r) (* 297 s) ?x2293 ?x2421 ?x1150 ?x2008 (* (- 756) (* r r)) ?x1278 (* 396 (* r s)) (* 1512 (* r r00 r00)) (* 1296 (* r r r00 r00)) ?x2103 ?x1248 ?x1461 ?x507 ?x511 (* 195 (* s s)) ?x2303 (* 252 (* s r00 r00)) ?x1214 (* 108 (* x s00)) ?x1237 (* (- 648) (* s r00 r00 r00)) ?x1267 (* 648 (* r x00)) ?x1032 (* (- 246) (* s s00)) (* 162 (* s r00)) ?x2564 (* 648 (* r s00 r00)) ?x768 (* 324 (* s s00 r00)) ?x816 ?x1134 ?x1764 (* (- 324) (* s x)) ?x848 ?x905 ?x1939 ?x962 ?x1050 (* 432 (* x r00 r00 r00)) (* 324 (* r r00)) ?x1160 (* 36 (* s s r00 r00)) ?x1178 ?x1326 ?x1340 ?x1472 ?x1709 ?x1763 (* 432 (* r s r00 r00)) ?x1920)))
 (let ((?x211 (* 6 r)))
 (let ((?x1376 (+ 3 ?x211 s)))
 (let ((?x2592 (+ 1 r)))
 (let ((?x2681 (* ?x2592 ?x2592 ?x2592 ?x1376 ?x1376)))
 (let ((?x2679 (* ?x2592 ?x2592 ?x2592 ?x1376 ?x1376 ?x1376)))
 (let ((?x273 (* (- 1) s)))
 (let ((?x1792 (+ ?x273 x)))
 (let ((?x2594 (* (- 6) r)))
 (let ((?x1581 (+ (- 3) ?x2594 ?x273 (* (- 1) (* ?x2592 ?x2592 ?x1792 ?x1792 ?x1792 ?x1376 ?x1376 ?x1376)) ?x2679 ?x2681)))
 (let ((?x1369 (* (- 108) ?x1339)))
 (let ((?x1368 (* (- 16) ?x1177)))
 (let ((?x1364 (* (- 216) ?x1049)))
 (let ((?x876 (* 432 ?x875)))
 (let ((?x1122 (* 108 ?x798)))
 (let ((?x725 (* 36 ?x724)))
 (let ((?x1005 (* 108 ?x661)))
 (let ((?x993 (* 36 ?x640)))
 (let ((?x1358 (* (- 51) ?x584)))
 (let ((?x558 (* s r00 r00)))
 (let ((?x857 (* (- 36) ?x558)))
 (let ((?x1355 (* (- 108) ?x515)))
 (let ((?x1354 (* (- 216) ?x506)))
 (let ((?x513 (* 54 ?x419)))
 (let ((?x980 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1370 (+ ?x143 ?x980 ?x513 ?x1354 ?x1355 (* (- 15) (* s s)) ?x857 ?x1358 (* (- 108) (* x s00)) (* 108 ?x610) (* 216 (* s r00 r00 r00)) ?x993 ?x1005 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x717) ?x725 (* (- 108) (* s s00 r00)) (* 4 ?x796) ?x1122 (* 108 (* s x)) (* (- 108) ?x847) ?x876 (* 12 ?x933) ?x1364 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1147) (* (- 36) (* s s r00 r00)) ?x1368 (* 216 ?x1313) ?x1369)))
 (let (($x1371 (= ?x1370 0)))
 (let ((?x870 (* r00 r00 x00)))
 (let ((?x883 (* (- 36) ?x870)))
 (let ((?x799 (* 6 ?x798)))
 (let ((?x689 (* (- 2) ?x661)))
 (let ((?x909 (* (- 15) ?x584)))
 (let ((?x538 (* s s)))
 (let ((?x562 (* 3 ?x538)))
 (let ((?x544 (* (- 54) ?x515)))
 (let ((?x557 (* 24 ?x419)))
 (let ((?x1072 (+ ?x143 ?x980 (* (- 24) (* r s)) (* 24 ?x392) ?x557 ?x544 ?x562 (* 54 ?x542) (* 36 (* r x r00)) ?x857 ?x909 (* (- 6) (* x s00)) (* 54 ?x610) ?x993 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x689 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x717) (* (- 2) (* s s00 r00)) ?x799 (* 2 ?x802) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x883 (* 2 ?x922) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1077 (= ?x1072 0)))
 (let ((?x641 (* 6 ?x640)))
 (let ((?x597 (* (- 4) ?x584)))
 (let ((?x539 (* 2 ?x538)))
 (let ((?x529 (* (- 18) ?x515)))
 (let ((?x534 (* 9 ?x419)))
 (let ((?x371 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x738 (+ ?x47 ?x371 (* (- 9) (* r s)) (* 9 ?x392) ?x534 ?x529 ?x539 (* 18 ?x542) (* 6 (* r s r00)) (* (- 6) ?x558) ?x597 (* 18 ?x610) ?x641 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x745 (= ?x738 0)))
 (let ((?x463 (* 12 ?x462)))
 (let ((?x497 (* (- 6) ?x419)))
 (let ((?x494 (* (- 6) x00)))
 (let ((?x493 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x492 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x498 (+ ?x43 ?x492 ?x56 ?x44 ?x493 ?x494 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 ?x392) ?x497 ?x463)))
 (let (($x499 (= ?x498 0)))
 (let (($x327 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x294)) 0)))
 (and $x327 $x499 $x745 $x1077 $x1371 (not (= (* ?x1581 ?x1285) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1493 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1339 (* x00 x00)))
 (let ((?x1340 (* 108 ?x1339)))
 (let ((?x775 (* (- 9) s)))
 (let ((?x672 (* r00 r00 s00)))
 (let ((?x995 (* (- 36) ?x672)))
 (let ((?x137 (* 9 s00)))
 (let ((?x584 (* s00 s00)))
 (let ((?x1214 (* 51 ?x584)))
 (let ((?x565 (* (- 108) (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x1177 (* s00 s00 s00)))
 (let ((?x1178 (* 16 ?x1177)))
 (let ((?x211 (* 6 r)))
 (let ((?x1570 (+ 3 s ?x211)))
 (let ((?x798 (* s00 x00)))
 (let ((?x1134 (* (- 108) ?x798)))
 (let ((?x2395 (* 216 (* r00 r00 r00 s00))))
 (let ((?x845 (* r00 s00 s00)))
 (let ((?x2558 (* (- 108) ?x845)))
 (let ((?x875 (* r00 r00 r00 x00)))
 (let ((?x905 (* (- 432) ?x875)))
 (let ((?x1875 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x1720 (* r00 s00)))
 (let ((?x1701 (* (- 54) ?x1720)))
 (let ((?x515 (* r00 x00)))
 (let ((?x511 (* 108 ?x515)))
 (let ((?x1670 (* 216 (* r00 s00 x00))))
 (let ((?x449 (+ (- 27) ?x1670 ?x511 ?x1701 (* 15 (* ?x1570 ?x1570)) (* (- 216) (* r00 r00 r00 ?x1570)) ?x1875 (* (- 4) (* ?x1570 ?x1570 ?x1570)) (* 108 (* (+ x (* (- 1) s)) (+ x (* (- 1) s)))) ?x905 (* (- 12) (* s00 ?x1570 ?x1570)) (* 108 (* s00 (+ x (* (- 1) s)))) ?x2558 ?x2395 (* 108 (* x00 ?x1570)) (* 432 (* r00 r00 r00 (+ x (* (- 1) s)))) (* (- 66) (* s00 ?x1570)) (* 108 (* r00 s00 ?x1570)) ?x1134 (* (- 216) (* r00 s00 (+ x (* (- 1) s)))) (* 36 (* r00 r00 ?x1570 ?x1570)) ?x1178 ?x565 (* 36 (* r00 r00 ?x1570)) ?x1214 (* (- 108) (* r00 (+ x (* (- 1) s)))) ?x137 ?x995 ?x775 (* (- 54) r) (* 54 (* r00 ?x1570)) (* (- 216) (* x00 (+ x (* (- 1) s)))) ?x1340)))
 (let ((?x273 (* (- 1) s)))
 (let ((?x604 (+ x ?x273)))
 (let ((?x2592 (+ 1 r)))
 (let ((?x2594 (* (- 6) r)))
 (let ((?x1063 (+ (- 3) ?x273 ?x2594 (* (- 1) (* ?x2592 ?x2592 ?x604 ?x604 ?x604 ?x1570 ?x1570 ?x1570)) (* ?x2592 ?x2592 ?x2592 ?x1570 ?x1570) (* ?x2592 ?x2592 ?x2592 ?x1570 ?x1570 ?x1570))))
 (let (($x1767 (not (= (* ?x1063 ?x449) 0))))
 (let ((?x2379 (* r00 s)))
 (let ((?x2501 (* 54 ?x2379)))
 (let ((?x2338 (* r00 r00 s)))
 (let ((?x2339 (* 36 ?x2338)))
 (let ((?x2224 (* 36 (* r00 r00 s s))))
 (let ((?x2027 (* 432 (* r00 r00 r00 x))))
 (let ((?x1962 (* s00 x)))
 (let ((?x1963 (* 108 ?x1962)))
 (let ((?x847 (* x x)))
 (let ((?x848 (* 108 ?x847)))
 (let ((?x796 (* s s s)))
 (let ((?x816 (* (- 4) ?x796)))
 (let ((?x739 (+ ?x1670 ?x511 ?x1701 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x1875 ?x816 ?x848 ?x905 (* (- 12) (* s00 s s)) ?x1963 ?x2558 ?x2395 (* 108 (* x00 s)) ?x2027 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1134 (* (- 216) (* r00 s00 x)) ?x2224 ?x1178 (* (- 108) (* x s)) ?x2339 ?x1214 (* (- 108) (* r00 x)) ?x137 ?x995 ?x775 ?x2501 (* (- 216) (* x00 x)) ?x1340)))
 (let (($x1270 (= ?x739 0)))
 (let ((?x2567 (* 15 ?x584)))
 (let ((?x870 (* r00 r00 x00)))
 (let ((?x2566 (* 36 ?x870)))
 (let ((?x2515 (* (- 6) ?x798)))
 (let ((?x2442 (* 54 ?x515)))
 (let ((?x1459 (+ (* 24 (* s r)) ?x2442 (* (- 36) (* r00 x r)) (* (- 24) ?x1720) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 ?x1962) (* (- 4) (* r00 s s)) (* 2 ?x845) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2515 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2339 ?x2566 ?x2567 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x995 (* 54 (* x00 r)) ?x775 (* (- 24) (* s00 r)) (* 24 ?x2379) (* (- 36) (* r00 r00 x)))))
 (let ((?x492 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1333 (* 4 ?x584)))
 (let ((?x1289 (* 18 ?x515)))
 (let ((?x1025 (+ (* 9 (* s r)) ?x1289 (* (- 9) ?x1720) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2338) ?x1333 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x672) (* 18 (* x00 r)) ?x492 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 ?x2379) (* 6 (* r00 s00 r)))))
 (let ((?x462 (* r00 r00 r00)))
 (let ((?x463 (* 12 ?x462)))
 (let ((?x494 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x493 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1332 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x492 ?x493 (* 4 (* s00 r)) (* (- 6) ?x1720) ?x56 ?x494 ?x463)))
 (let (($x820 (= (+ s00 ?x273 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x820 (= ?x1332 0) (= ?x1025 0) (= ?x1459 0) $x1270 $x1767))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x965 (lambda ((r Int) (s Int) (x Int) )(let ((?x1920 (* (- 432) (* r r s00))))
 (let ((?x1763 (* (- 432) (* r r s))))
 (let ((?x1709 (* (- 864) (* r r r))))
 (let ((?x1472 (* (- 1296) (* r r00 r00 r00))))
 (let ((?x1339 (* x00 x00)))
 (let ((?x1340 (* 108 ?x1339)))
 (let ((?x1313 (* x x00)))
 (let ((?x1326 (* (- 216) ?x1313)))
 (let ((?x1177 (* s00 s00 s00)))
 (let ((?x1178 (* 16 ?x1177)))
 (let ((?x1147 (* x s00 r00)))
 (let ((?x1160 (* (- 216) ?x1147)))
 (let ((?x1049 (* s00 r00 r00 r00)))
 (let ((?x1050 (* 216 ?x1049)))
 (let ((?x933 (* s s s00)))
 (let ((?x962 (* (- 12) ?x933)))
 (let ((?x922 (* r s s00)))
 (let ((?x1939 (* (- 144) ?x922)))
 (let ((?x875 (* r00 r00 r00 x00)))
 (let ((?x905 (* (- 432) ?x875)))
 (let ((?x847 (* x x)))
 (let ((?x848 (* 108 ?x847)))
 (let ((?x802 (* r s s)))
 (let ((?x1764 (* (- 72) ?x802)))
 (let ((?x798 (* s00 x00)))
 (let ((?x1134 (* (- 108) ?x798)))
 (let ((?x796 (* s s s)))
 (let ((?x816 (* (- 4) ?x796)))
 (let ((?x724 (* s00 s00 r00 r00)))
 (let ((?x768 (* (- 36) ?x724)))
 (let ((?x717 (* s x00)))
 (let ((?x2564 (* 324 ?x717)))
 (let ((?x661 (* s00 s00 r00)))
 (let ((?x1032 (* (- 108) ?x661)))
 (let ((?x640 (* s00 r00 r00)))
 (let ((?x1267 (* (- 36) ?x640)))
 (let ((?x610 (* x r00)))
 (let ((?x1237 (* (- 108) ?x610)))
 (let ((?x584 (* s00 s00)))
 (let ((?x1214 (* 51 ?x584)))
 (let ((?x542 (* r x)))
 (let ((?x2303 (* (- 648) ?x542)))
 (let ((?x515 (* r00 x00)))
 (let ((?x511 (* 108 ?x515)))
 (let ((?x506 (* s00 r00 x00)))
 (let ((?x507 (* 216 ?x506)))
 (let ((?x462 (* r00 r00 r00)))
 (let ((?x1461 (* (- 648) ?x462)))
 (let ((?x419 (* s00 r00)))
 (let ((?x1248 (* 270 ?x419)))
 (let ((?x392 (* r s00)))
 (let ((?x2103 (* (- 828) ?x392)))
 (let ((?x294 (* r00 r00)))
 (let ((?x1278 (* 432 ?x294)))
 (let ((?x2008 (* 324 x00)))
 (let ((?x1150 (* 162 r00)))
 (let ((?x2421 (* (- 297) s00)))
 (let ((?x2293 (* (- 324) x)))
 (let ((?x1285 (+ (* (- 162) r) (* 297 s) ?x2293 ?x2421 ?x1150 ?x2008 (* (- 756) (* r r)) ?x1278 (* 396 (* r s)) (* 1512 (* r r00 r00)) (* 1296 (* r r r00 r00)) ?x2103 ?x1248 ?x1461 ?x507 ?x511 (* 195 (* s s)) ?x2303 (* 252 (* s r00 r00)) ?x1214 (* 108 (* x s00)) ?x1237 (* (- 648) (* s r00 r00 r00)) ?x1267 (* 648 (* r x00)) ?x1032 (* (- 246) (* s s00)) (* 162 (* s r00)) ?x2564 (* 648 (* r s00 r00)) ?x768 (* 324 (* s s00 r00)) ?x816 ?x1134 ?x1764 (* (- 324) (* s x)) ?x848 ?x905 ?x1939 ?x962 ?x1050 (* 432 (* x r00 r00 r00)) (* 324 (* r r00)) ?x1160 (* 36 (* s s r00 r00)) ?x1178 ?x1326 ?x1340 ?x1472 ?x1709 ?x1763 (* 432 (* r s r00 r00)) ?x1920)))
 (let ((?x211 (* 6 r)))
 (let ((?x1376 (+ 3 ?x211 s)))
 (let ((?x2592 (+ 1 r)))
 (let ((?x2681 (* ?x2592 ?x2592 ?x2592 ?x1376 ?x1376)))
 (let ((?x2679 (* ?x2592 ?x2592 ?x2592 ?x1376 ?x1376 ?x1376)))
 (let ((?x273 (* (- 1) s)))
 (let ((?x1792 (+ ?x273 x)))
 (let ((?x2594 (* (- 6) r)))
 (let ((?x1581 (+ (- 3) ?x2594 ?x273 (* (- 1) (* ?x2592 ?x2592 ?x1792 ?x1792 ?x1792 ?x1376 ?x1376 ?x1376)) ?x2679 ?x2681)))
 (let ((?x1369 (* (- 108) ?x1339)))
 (let ((?x1368 (* (- 16) ?x1177)))
 (let ((?x1364 (* (- 216) ?x1049)))
 (let ((?x876 (* 432 ?x875)))
 (let ((?x1122 (* 108 ?x798)))
 (let ((?x725 (* 36 ?x724)))
 (let ((?x1005 (* 108 ?x661)))
 (let ((?x993 (* 36 ?x640)))
 (let ((?x1358 (* (- 51) ?x584)))
 (let ((?x558 (* s r00 r00)))
 (let ((?x857 (* (- 36) ?x558)))
 (let ((?x1355 (* (- 108) ?x515)))
 (let ((?x1354 (* (- 216) ?x506)))
 (let ((?x513 (* 54 ?x419)))
 (let ((?x980 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1370 (+ ?x143 ?x980 ?x513 ?x1354 ?x1355 (* (- 15) (* s s)) ?x857 ?x1358 (* (- 108) (* x s00)) (* 108 ?x610) (* 216 (* s r00 r00 r00)) ?x993 ?x1005 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x717) ?x725 (* (- 108) (* s s00 r00)) (* 4 ?x796) ?x1122 (* 108 (* s x)) (* (- 108) ?x847) ?x876 (* 12 ?x933) ?x1364 (* (- 432) (* x r00 r00 r00)) (* 216 ?x1147) (* (- 36) (* s s r00 r00)) ?x1368 (* 216 ?x1313) ?x1369)))
 (let (($x1371 (= ?x1370 0)))
 (let ((?x870 (* r00 r00 x00)))
 (let ((?x883 (* (- 36) ?x870)))
 (let ((?x799 (* 6 ?x798)))
 (let ((?x689 (* (- 2) ?x661)))
 (let ((?x909 (* (- 15) ?x584)))
 (let ((?x538 (* s s)))
 (let ((?x562 (* 3 ?x538)))
 (let ((?x544 (* (- 54) ?x515)))
 (let ((?x557 (* 24 ?x419)))
 (let ((?x1072 (+ ?x143 ?x980 (* (- 24) (* r s)) (* 24 ?x392) ?x557 ?x544 ?x562 (* 54 ?x542) (* 36 (* r x r00)) ?x857 ?x909 (* (- 6) (* x s00)) (* 54 ?x610) ?x993 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x689 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x717) (* (- 2) (* s s00 r00)) ?x799 (* 2 ?x802) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x883 (* 2 ?x922) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1077 (= ?x1072 0)))
 (let ((?x641 (* 6 ?x640)))
 (let ((?x597 (* (- 4) ?x584)))
 (let ((?x539 (* 2 ?x538)))
 (let ((?x529 (* (- 18) ?x515)))
 (let ((?x534 (* 9 ?x419)))
 (let ((?x371 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x738 (+ ?x47 ?x371 (* (- 9) (* r s)) (* 9 ?x392) ?x534 ?x529 ?x539 (* 18 ?x542) (* 6 (* r s r00)) (* (- 6) ?x558) ?x597 (* 18 ?x610) ?x641 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x745 (= ?x738 0)))
 (let ((?x463 (* 12 ?x462)))
 (let ((?x497 (* (- 6) ?x419)))
 (let ((?x494 (* (- 6) x00)))
 (let ((?x493 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x492 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x498 (+ ?x43 ?x492 ?x56 ?x44 ?x493 ?x494 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 ?x392) ?x497 ?x463)))
 (let (($x499 (= ?x498 0)))
 (let (($x327 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x294)) 0)))
 (let (($x1986 (and $x327 $x499 $x745 $x1077 $x1371 (not (= (* ?x1581 ?x1285) 0)))))
 (let ((?x775 (* (- 9) s)))
 (let ((?x672 (* r00 r00 s00)))
 (let ((?x995 (* (- 36) ?x672)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2395 (* 216 (* r00 r00 r00 s00))))
 (let ((?x845 (* r00 s00 s00)))
 (let ((?x2558 (* (- 108) ?x845)))
 (let ((?x2399 (* (- 4) (* (+ 3 s ?x211) (+ 3 s ?x211) (+ 3 s ?x211)))))
 (let ((?x1875 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x1720 (* r00 s00)))
 (let ((?x1701 (* (- 54) ?x1720)))
 (let ((?x1670 (* 216 (* r00 s00 x00))))
 (let ((?x449 (+ (- 27) ?x1670 ?x511 ?x1701 (* 15 (* (+ 3 s ?x211) (+ 3 s ?x211))) (* (- 216) (* r00 r00 r00 (+ 3 s ?x211))) ?x1875 ?x2399 (* 108 (* (+ x ?x273) (+ x ?x273))) ?x905 (* (- 12) (* s00 (+ 3 s ?x211) (+ 3 s ?x211))) (* 108 (* s00 (+ x ?x273))) ?x2558 ?x2395 (* 108 (* x00 (+ 3 s ?x211))) (* 432 (* r00 r00 r00 (+ x ?x273))) (* (- 66) (* s00 (+ 3 s ?x211))) (* 108 (* r00 s00 (+ 3 s ?x211))) ?x1134 (* (- 216) (* r00 s00 (+ x ?x273))) (* 36 (* r00 r00 (+ 3 s ?x211) (+ 3 s ?x211))) ?x1178 (* (- 108) (* (+ x ?x273) (+ 3 s ?x211))) (* 36 (* r00 r00 (+ 3 s ?x211))) ?x1214 (* (- 108) (* r00 (+ x ?x273))) ?x137 ?x995 ?x775 (* (- 54) r) (* 54 (* r00 (+ 3 s ?x211))) (* (- 216) (* x00 (+ x ?x273))) ?x1340)))
 (let ((?x1570 (+ 3 s ?x211)))
 (let ((?x604 (+ x ?x273)))
 (let ((?x1063 (+ (- 3) ?x273 ?x2594 (* (- 1) (* ?x2592 ?x2592 ?x604 ?x604 ?x604 ?x1570 ?x1570 ?x1570)) (* ?x2592 ?x2592 ?x2592 ?x1570 ?x1570) (* ?x2592 ?x2592 ?x2592 ?x1570 ?x1570 ?x1570))))
 (let (($x1767 (not (= (* ?x1063 ?x449) 0))))
 (let ((?x2379 (* r00 s)))
 (let ((?x2501 (* 54 ?x2379)))
 (let ((?x2338 (* r00 r00 s)))
 (let ((?x2339 (* 36 ?x2338)))
 (let ((?x2224 (* 36 (* r00 r00 s s))))
 (let ((?x2027 (* 432 (* r00 r00 r00 x))))
 (let ((?x1962 (* s00 x)))
 (let ((?x1963 (* 108 ?x1962)))
 (let ((?x739 (+ ?x1670 ?x511 ?x1701 (* 15 ?x538) (* (- 216) (* r00 r00 r00 s)) ?x1875 ?x816 ?x848 ?x905 (* (- 12) (* s00 s s)) ?x1963 ?x2558 ?x2395 (* 108 (* x00 s)) ?x2027 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1134 (* (- 216) (* r00 s00 x)) ?x2224 ?x1178 (* (- 108) (* x s)) ?x2339 ?x1214 (* (- 108) (* r00 x)) ?x137 ?x995 ?x775 ?x2501 (* (- 216) (* x00 x)) ?x1340)))
 (let (($x1270 (= ?x739 0)))
 (let ((?x2567 (* 15 ?x584)))
 (let ((?x2566 (* 36 ?x870)))
 (let ((?x2515 (* (- 6) ?x798)))
 (let ((?x2442 (* 54 ?x515)))
 (let ((?x1459 (+ (* 24 (* s r)) ?x2442 (* (- 36) (* r00 x r)) (* (- 24) ?x1720) (* (- 3) ?x538) (* (- 54) (* x r)) (* 6 ?x1962) (* (- 4) (* r00 s s)) (* 2 ?x845) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2515 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2339 ?x2566 ?x2567 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x995 (* 54 (* x00 r)) ?x775 (* (- 24) (* s00 r)) (* 24 ?x2379) (* (- 36) (* r00 r00 x)))))
 (let ((?x1333 (* 4 ?x584)))
 (let ((?x1289 (* 18 ?x515)))
 (let ((?x1025 (+ (* 9 (* s r)) ?x1289 (* (- 9) ?x1720) (* (- 2) ?x538) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2338) ?x1333 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x672) (* 18 (* x00 r)) ?x492 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 ?x2379) (* 6 (* r00 s00 r)))))
 (let ((?x1332 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x492 ?x493 (* 4 (* s00 r)) (* (- 6) ?x1720) ?x56 ?x494 ?x463)))
 (let (($x820 (= (+ s00 ?x273 (* 3 (* r r)) (* (- 3) ?x294)) 0)))
 (let (($x1476 (and $x820 (= ?x1332 0) (= ?x1025 0) (= ?x1459 0) $x1270 $x1767)))
 (rewrite (= $x1476 $x1986)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x365 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1339 (* x00 x00)))
 (let ((?x1340 (* 108 ?x1339)))
 (let ((?x775 (* (- 9) s)))
 (let ((?x672 (* r00 r00 s00)))
 (let ((?x995 (* (- 36) ?x672)))
 (let ((?x137 (* 9 s00)))
 (let ((?x584 (* s00 s00)))
 (let ((?x1214 (* 51 ?x584)))
 (let ((?x565 (* (- 108) (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x1177 (* s00 s00 s00)))
 (let ((?x1178 (* 16 ?x1177)))
 (let ((?x211 (* 6 r)))
 (let ((?x1570 (+ 3 s ?x211)))
 (let ((?x798 (* s00 x00)))
 (let ((?x1134 (* (- 108) ?x798)))
 (let ((?x2395 (* 216 (* r00 r00 r00 s00))))
 (let ((?x845 (* r00 s00 s00)))
 (let ((?x2558 (* (- 108) ?x845)))
 (let ((?x875 (* r00 r00 r00 x00)))
 (let ((?x905 (* (- 432) ?x875)))
 (let ((?x1875 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x1720 (* r00 s00)))
 (let ((?x1701 (* (- 54) ?x1720)))
 (let ((?x515 (* r00 x00)))
 (let ((?x511 (* 108 ?x515)))
 (let ((?x1670 (* 216 (* r00 s00 x00))))
 (let ((?x449 (+ (- 27) ?x1670 ?x511 ?x1701 (* 15 (* ?x1570 ?x1570)) (* (- 216) (* r00 r00 r00 ?x1570)) ?x1875 (* (- 4) (* ?x1570 ?x1570 ?x1570)) (* 108 (* (+ x (* (- 1) s)) (+ x (* (- 1) s)))) ?x905 (* (- 12) (* s00 ?x1570 ?x1570)) (* 108 (* s00 (+ x (* (- 1) s)))) ?x2558 ?x2395 (* 108 (* x00 ?x1570)) (* 432 (* r00 r00 r00 (+ x (* (- 1) s)))) (* (- 66) (* s00 ?x1570)) (* 108 (* r00 s00 ?x1570)) ?x1134 (* (- 216) (* r00 s00 (+ x (* (- 1) s)))) (* 36 (* r00 r00 ?x1570 ?x1570)) ?x1178 ?x565 (* 36 (* r00 r00 ?x1570)) ?x1214 (* (- 108) (* r00 (+ x (* (- 1) s)))) ?x137 ?x995 ?x775 (* (- 54) r) (* 54 (* r00 ?x1570)) (* (- 216) (* x00 (+ x (* (- 1) s)))) ?x1340)))
 (let ((?x273 (* (- 1) s)))
 (let ((?x604 (+ x ?x273)))
 (let ((?x2592 (+ 1 r)))
 (let ((?x2594 (* (- 6) r)))
 (let ((?x1063 (+ (- 3) ?x273 ?x2594 (* (- 1) (* ?x2592 ?x2592 ?x604 ?x604 ?x604 ?x1570 ?x1570 ?x1570)) (* ?x2592 ?x2592 ?x2592 ?x1570 ?x1570) (* ?x2592 ?x2592 ?x2592 ?x1570 ?x1570 ?x1570))))
 (let (($x1767 (not (= (* ?x1063 ?x449) 0))))
 (let ((?x2379 (* r00 s)))
 (let ((?x2501 (* 54 ?x2379)))
 (let ((?x2338 (* r00 r00 s)))
 (let ((?x2339 (* 36 ?x2338)))
 (let ((?x2224 (* 36 (* r00 r00 s s))))
 (let ((?x2027 (* 432 (* r00 r00 r00 x))))
 (let ((?x1962 (* s00 x)))
 (let ((?x1963 (* 108 ?x1962)))
 (let ((?x847 (* x x)))
 (let ((?x848 (* 108 ?x847)))
 (let ((?x796 (* s s s)))
 (let ((?x816 (* (- 4) ?x796)))
 (let ((?x739 (+ ?x1670 ?x511 ?x1701 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x1875 ?x816 ?x848 ?x905 (* (- 12) (* s00 s s)) ?x1963 ?x2558 ?x2395 (* 108 (* x00 s)) ?x2027 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1134 (* (- 216) (* r00 s00 x)) ?x2224 ?x1178 (* (- 108) (* x s)) ?x2339 ?x1214 (* (- 108) (* r00 x)) ?x137 ?x995 ?x775 ?x2501 (* (- 216) (* x00 x)) ?x1340)))
 (let (($x1270 (= ?x739 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x980 (* (- 9) s00)))
 (let ((?x909 (* (- 15) ?x584)))
 (let ((?x870 (* r00 r00 x00)))
 (let ((?x883 (* (- 36) ?x870)))
 (let ((?x799 (* 6 ?x798)))
 (let ((?x538 (* s s)))
 (let ((?x562 (* 3 ?x538)))
 (let ((?x544 (* (- 54) ?x515)))
 (let ((?x607 (+ (* (- 24) (* s r)) ?x544 (* 36 (* r00 x r)) (* 24 ?x1720) ?x562 (* 54 (* x r)) (* (- 6) ?x1962) (* 4 (* r00 s s)) (* (- 2) ?x845) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x799 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2338) ?x883 ?x909 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x980 (* 36 ?x672) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2379) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x371 (* (- 3) s00)))
 (let ((?x597 (* (- 4) ?x584)))
 (let ((?x539 (* 2 ?x538)))
 (let ((?x529 (* (- 18) ?x515)))
 (let ((?x1330 (+ (* (- 9) (* s r)) ?x529 (* 9 ?x1720) ?x539 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2338) ?x597 (* 18 (* r00 x)) ?x371 (* 6 ?x672) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2379) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1755 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x371 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1720) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x820 (= (+ s00 ?x273 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x820 (= ?x1755 0) (= ?x1330 0) (= ?x607 0) $x1270 $x1767)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1426 (lambda ((r Int) (s Int) (x Int) )(let ((?x1339 (* x00 x00)))
 (let ((?x1340 (* 108 ?x1339)))
 (let ((?x775 (* (- 9) s)))
 (let ((?x672 (* r00 r00 s00)))
 (let ((?x995 (* (- 36) ?x672)))
 (let ((?x137 (* 9 s00)))
 (let ((?x584 (* s00 s00)))
 (let ((?x1214 (* 51 ?x584)))
 (let ((?x565 (* (- 108) (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x1177 (* s00 s00 s00)))
 (let ((?x1178 (* 16 ?x1177)))
 (let ((?x211 (* 6 r)))
 (let ((?x1570 (+ 3 s ?x211)))
 (let ((?x798 (* s00 x00)))
 (let ((?x1134 (* (- 108) ?x798)))
 (let ((?x2395 (* 216 (* r00 r00 r00 s00))))
 (let ((?x845 (* r00 s00 s00)))
 (let ((?x2558 (* (- 108) ?x845)))
 (let ((?x875 (* r00 r00 r00 x00)))
 (let ((?x905 (* (- 432) ?x875)))
 (let ((?x1875 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x1720 (* r00 s00)))
 (let ((?x1701 (* (- 54) ?x1720)))
 (let ((?x515 (* r00 x00)))
 (let ((?x511 (* 108 ?x515)))
 (let ((?x1670 (* 216 (* r00 s00 x00))))
 (let ((?x449 (+ (- 27) ?x1670 ?x511 ?x1701 (* 15 (* ?x1570 ?x1570)) (* (- 216) (* r00 r00 r00 ?x1570)) ?x1875 (* (- 4) (* ?x1570 ?x1570 ?x1570)) (* 108 (* (+ x (* (- 1) s)) (+ x (* (- 1) s)))) ?x905 (* (- 12) (* s00 ?x1570 ?x1570)) (* 108 (* s00 (+ x (* (- 1) s)))) ?x2558 ?x2395 (* 108 (* x00 ?x1570)) (* 432 (* r00 r00 r00 (+ x (* (- 1) s)))) (* (- 66) (* s00 ?x1570)) (* 108 (* r00 s00 ?x1570)) ?x1134 (* (- 216) (* r00 s00 (+ x (* (- 1) s)))) (* 36 (* r00 r00 ?x1570 ?x1570)) ?x1178 ?x565 (* 36 (* r00 r00 ?x1570)) ?x1214 (* (- 108) (* r00 (+ x (* (- 1) s)))) ?x137 ?x995 ?x775 (* (- 54) r) (* 54 (* r00 ?x1570)) (* (- 216) (* x00 (+ x (* (- 1) s)))) ?x1340)))
 (let ((?x273 (* (- 1) s)))
 (let ((?x604 (+ x ?x273)))
 (let ((?x2592 (+ 1 r)))
 (let ((?x2594 (* (- 6) r)))
 (let ((?x1063 (+ (- 3) ?x273 ?x2594 (* (- 1) (* ?x2592 ?x2592 ?x604 ?x604 ?x604 ?x1570 ?x1570 ?x1570)) (* ?x2592 ?x2592 ?x2592 ?x1570 ?x1570) (* ?x2592 ?x2592 ?x2592 ?x1570 ?x1570 ?x1570))))
 (let (($x1767 (not (= (* ?x1063 ?x449) 0))))
 (let ((?x2379 (* r00 s)))
 (let ((?x2501 (* 54 ?x2379)))
 (let ((?x2338 (* r00 r00 s)))
 (let ((?x2339 (* 36 ?x2338)))
 (let ((?x2224 (* 36 (* r00 r00 s s))))
 (let ((?x2027 (* 432 (* r00 r00 r00 x))))
 (let ((?x1962 (* s00 x)))
 (let ((?x1963 (* 108 ?x1962)))
 (let ((?x847 (* x x)))
 (let ((?x848 (* 108 ?x847)))
 (let ((?x796 (* s s s)))
 (let ((?x816 (* (- 4) ?x796)))
 (let ((?x739 (+ ?x1670 ?x511 ?x1701 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x1875 ?x816 ?x848 ?x905 (* (- 12) (* s00 s s)) ?x1963 ?x2558 ?x2395 (* 108 (* x00 s)) ?x2027 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1134 (* (- 216) (* r00 s00 x)) ?x2224 ?x1178 (* (- 108) (* x s)) ?x2339 ?x1214 (* (- 108) (* r00 x)) ?x137 ?x995 ?x775 ?x2501 (* (- 216) (* x00 x)) ?x1340)))
 (let (($x1270 (= ?x739 0)))
 (let ((?x2567 (* 15 ?x584)))
 (let ((?x870 (* r00 r00 x00)))
 (let ((?x2566 (* 36 ?x870)))
 (let ((?x2515 (* (- 6) ?x798)))
 (let ((?x2442 (* 54 ?x515)))
 (let ((?x1459 (+ (* 24 (* s r)) ?x2442 (* (- 36) (* r00 x r)) (* (- 24) ?x1720) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 ?x1962) (* (- 4) (* r00 s s)) (* 2 ?x845) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2515 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2339 ?x2566 ?x2567 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x995 (* 54 (* x00 r)) ?x775 (* (- 24) (* s00 r)) (* 24 ?x2379) (* (- 36) (* r00 r00 x)))))
 (let ((?x492 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1333 (* 4 ?x584)))
 (let ((?x1289 (* 18 ?x515)))
 (let ((?x1025 (+ (* 9 (* s r)) ?x1289 (* (- 9) ?x1720) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2338) ?x1333 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x672) (* 18 (* x00 r)) ?x492 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 ?x2379) (* 6 (* r00 s00 r)))))
 (let ((?x462 (* r00 r00 r00)))
 (let ((?x463 (* 12 ?x462)))
 (let ((?x494 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x493 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1332 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x492 ?x493 (* 4 (* s00 r)) (* (- 6) ?x1720) ?x56 ?x494 ?x463)))
 (let (($x820 (= (+ s00 ?x273 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1476 (and $x820 (= ?x1332 0) (= ?x1025 0) (= ?x1459 0) $x1270 $x1767)))
 (let ((?x143 (* 9 s)))
 (let ((?x980 (* (- 9) s00)))
 (let ((?x909 (* (- 15) ?x584)))
 (let ((?x883 (* (- 36) ?x870)))
 (let ((?x799 (* 6 ?x798)))
 (let ((?x538 (* s s)))
 (let ((?x562 (* 3 ?x538)))
 (let ((?x544 (* (- 54) ?x515)))
 (let ((?x607 (+ (* (- 24) (* s r)) ?x544 (* 36 (* r00 x r)) (* 24 ?x1720) ?x562 (* 54 (* x r)) (* (- 6) ?x1962) (* 4 (* r00 s s)) (* (- 2) ?x845) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x799 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2338) ?x883 ?x909 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x980 (* 36 ?x672) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2379) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x371 (* (- 3) s00)))
 (let ((?x597 (* (- 4) ?x584)))
 (let ((?x539 (* 2 ?x538)))
 (let ((?x529 (* (- 18) ?x515)))
 (let ((?x1330 (+ (* (- 9) (* s r)) ?x529 (* 9 ?x1720) ?x539 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2338) ?x597 (* 18 (* r00 x)) ?x371 (* 6 ?x672) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2379) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1755 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x371 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1720) (* (- 6) x) ?x59 (* (- 12) ?x462))))
 (let (($x674 (and $x820 (= ?x1755 0) (= ?x1330 0) (= ?x607 0) $x1270 $x1767)))
 (rewrite (= $x674 $x1476)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x270 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x259 (+ r 1)))
 (let ((?x220 (- x s)))
 (let ((?x264 (+ (- (* (- 1) ?x212) (* ?x259 ?x259 ?x212 ?x212 ?x212 ?x220 ?x220 ?x220)) (* ?x259 ?x259 ?x259 ?x212 ?x212) (* ?x259 ?x259 ?x259 ?x212 ?x212 ?x212))))
 (let ((?x208 (* 108 x00 x00)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x197 (* 51 s00 s00)))
 (let ((?x192 (* 16 s00 s00 s00)))
 (let ((?x186 (* 108 s00 x00)))
 (let ((?x177 (* 216 r00 r00 r00 s00)))
 (let ((?x175 (* 108 r00 s00 s00)))
 (let ((?x169 (* 432 r00 r00 r00 x00)))
 (let ((?x161 (* 36 r00 r00 s00 s00)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x218 (- (- (+ ?x157 (* 15 ?x212 ?x212)) (* 216 r00 r00 r00 ?x212)) ?x161)))
 (let ((?x225 (- (- (+ (- ?x218 (* 4 ?x212 ?x212 ?x212)) (* 108 ?x220 ?x220)) ?x169) (* 12 ?x212 ?x212 s00))))
 (let ((?x231 (+ (- (+ ?x225 (* 108 s00 ?x220)) ?x175) ?x177 (* 108 ?x212 x00) (* 432 r00 r00 r00 ?x220))))
 (let ((?x237 (- (+ (- ?x231 (* 66 ?x212 s00)) (* 108 r00 ?x212 s00)) ?x186)))
 (let ((?x240 (+ (- ?x237 (* 216 r00 s00 ?x220)) (* 36 r00 r00 ?x212 ?x212) ?x192)))
 (let ((?x246 (- (+ (- ?x240 (* 108 ?x212 ?x220)) (* 36 r00 r00 ?x212) ?x197) (* 108 r00 ?x220))))
 (let ((?x254 (- (+ (- (- (+ ?x246 ?x137) ?x139) (* 9 ?x212)) (* 54 r00 ?x212)) (* 216 ?x220 x00))))
 (let ((?x143 (* 9 s)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) ?x161)))
 (let ((?x172 (- (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) ?x169) (* 12 s s s00))))
 (let ((?x180 (+ (- (+ ?x172 (* 108 s00 x)) ?x175) ?x177 (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) ?x186)))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) ?x192)))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 ?x197) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 ?x208) 0) (or (not (= (* (+ ?x254 ?x208) ?x264) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x984 (lambda ((r Int) (s Int) (x Int) )(let ((?x1339 (* x00 x00)))
 (let ((?x1340 (* 108 ?x1339)))
 (let ((?x775 (* (- 9) s)))
 (let ((?x672 (* r00 r00 s00)))
 (let ((?x995 (* (- 36) ?x672)))
 (let ((?x137 (* 9 s00)))
 (let ((?x584 (* s00 s00)))
 (let ((?x1214 (* 51 ?x584)))
 (let ((?x565 (* (- 108) (* (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x1177 (* s00 s00 s00)))
 (let ((?x1178 (* 16 ?x1177)))
 (let ((?x211 (* 6 r)))
 (let ((?x1570 (+ 3 s ?x211)))
 (let ((?x798 (* s00 x00)))
 (let ((?x1134 (* (- 108) ?x798)))
 (let ((?x2395 (* 216 (* r00 r00 r00 s00))))
 (let ((?x845 (* r00 s00 s00)))
 (let ((?x2558 (* (- 108) ?x845)))
 (let ((?x875 (* r00 r00 r00 x00)))
 (let ((?x905 (* (- 432) ?x875)))
 (let ((?x1875 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x1720 (* r00 s00)))
 (let ((?x1701 (* (- 54) ?x1720)))
 (let ((?x515 (* r00 x00)))
 (let ((?x511 (* 108 ?x515)))
 (let ((?x1670 (* 216 (* r00 s00 x00))))
 (let ((?x449 (+ (- 27) ?x1670 ?x511 ?x1701 (* 15 (* ?x1570 ?x1570)) (* (- 216) (* r00 r00 r00 ?x1570)) ?x1875 (* (- 4) (* ?x1570 ?x1570 ?x1570)) (* 108 (* (+ x (* (- 1) s)) (+ x (* (- 1) s)))) ?x905 (* (- 12) (* s00 ?x1570 ?x1570)) (* 108 (* s00 (+ x (* (- 1) s)))) ?x2558 ?x2395 (* 108 (* x00 ?x1570)) (* 432 (* r00 r00 r00 (+ x (* (- 1) s)))) (* (- 66) (* s00 ?x1570)) (* 108 (* r00 s00 ?x1570)) ?x1134 (* (- 216) (* r00 s00 (+ x (* (- 1) s)))) (* 36 (* r00 r00 ?x1570 ?x1570)) ?x1178 ?x565 (* 36 (* r00 r00 ?x1570)) ?x1214 (* (- 108) (* r00 (+ x (* (- 1) s)))) ?x137 ?x995 ?x775 (* (- 54) r) (* 54 (* r00 ?x1570)) (* (- 216) (* x00 (+ x (* (- 1) s)))) ?x1340)))
 (let ((?x273 (* (- 1) s)))
 (let ((?x604 (+ x ?x273)))
 (let ((?x2592 (+ 1 r)))
 (let ((?x2594 (* (- 6) r)))
 (let ((?x1063 (+ (- 3) ?x273 ?x2594 (* (- 1) (* ?x2592 ?x2592 ?x604 ?x604 ?x604 ?x1570 ?x1570 ?x1570)) (* ?x2592 ?x2592 ?x2592 ?x1570 ?x1570) (* ?x2592 ?x2592 ?x2592 ?x1570 ?x1570 ?x1570))))
 (let (($x1767 (not (= (* ?x1063 ?x449) 0))))
 (let ((?x2379 (* r00 s)))
 (let ((?x2501 (* 54 ?x2379)))
 (let ((?x2338 (* r00 r00 s)))
 (let ((?x2339 (* 36 ?x2338)))
 (let ((?x2224 (* 36 (* r00 r00 s s))))
 (let ((?x2027 (* 432 (* r00 r00 r00 x))))
 (let ((?x1962 (* s00 x)))
 (let ((?x1963 (* 108 ?x1962)))
 (let ((?x847 (* x x)))
 (let ((?x848 (* 108 ?x847)))
 (let ((?x796 (* s s s)))
 (let ((?x816 (* (- 4) ?x796)))
 (let ((?x739 (+ ?x1670 ?x511 ?x1701 (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) ?x1875 ?x816 ?x848 ?x905 (* (- 12) (* s00 s s)) ?x1963 ?x2558 ?x2395 (* 108 (* x00 s)) ?x2027 (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1134 (* (- 216) (* r00 s00 x)) ?x2224 ?x1178 (* (- 108) (* x s)) ?x2339 ?x1214 (* (- 108) (* r00 x)) ?x137 ?x995 ?x775 ?x2501 (* (- 216) (* x00 x)) ?x1340)))
 (let (($x1270 (= ?x739 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x980 (* (- 9) s00)))
 (let ((?x909 (* (- 15) ?x584)))
 (let ((?x870 (* r00 r00 x00)))
 (let ((?x883 (* (- 36) ?x870)))
 (let ((?x799 (* 6 ?x798)))
 (let ((?x538 (* s s)))
 (let ((?x562 (* 3 ?x538)))
 (let ((?x544 (* (- 54) ?x515)))
 (let ((?x607 (+ (* (- 24) (* s r)) ?x544 (* 36 (* r00 x r)) (* 24 ?x1720) ?x562 (* 54 (* x r)) (* (- 6) ?x1962) (* 4 (* r00 s s)) (* (- 2) ?x845) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x799 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2338) ?x883 ?x909 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x980 (* 36 ?x672) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2379) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x371 (* (- 3) s00)))
 (let ((?x597 (* (- 4) ?x584)))
 (let ((?x539 (* 2 ?x538)))
 (let ((?x529 (* (- 18) ?x515)))
 (let ((?x1330 (+ (* (- 9) (* s r)) ?x529 (* 9 ?x1720) ?x539 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2338) ?x597 (* 18 (* r00 x)) ?x371 (* 6 ?x672) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2379) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1755 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x371 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1720) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x820 (= (+ s00 ?x273 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x674 (and $x820 (= ?x1755 0) (= ?x1330 0) (= ?x607 0) $x1270 $x1767)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x259 (+ r 1)))
 (let ((?x220 (- x s)))
 (let ((?x264 (+ (- (* (- 1) ?x212) (* ?x259 ?x259 ?x212 ?x212 ?x212 ?x220 ?x220 ?x220)) (* ?x259 ?x259 ?x259 ?x212 ?x212) (* ?x259 ?x259 ?x259 ?x212 ?x212 ?x212))))
 (let ((?x208 (* 108 x00 x00)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x197 (* 51 s00 s00)))
 (let ((?x192 (* 16 s00 s00 s00)))
 (let ((?x186 (* 108 s00 x00)))
 (let ((?x177 (* 216 r00 r00 r00 s00)))
 (let ((?x175 (* 108 r00 s00 s00)))
 (let ((?x169 (* 432 r00 r00 r00 x00)))
 (let ((?x161 (* 36 r00 r00 s00 s00)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x218 (- (- (+ ?x157 (* 15 ?x212 ?x212)) (* 216 r00 r00 r00 ?x212)) ?x161)))
 (let ((?x225 (- (- (+ (- ?x218 (* 4 ?x212 ?x212 ?x212)) (* 108 ?x220 ?x220)) ?x169) (* 12 ?x212 ?x212 s00))))
 (let ((?x231 (+ (- (+ ?x225 (* 108 s00 ?x220)) ?x175) ?x177 (* 108 ?x212 x00) (* 432 r00 r00 r00 ?x220))))
 (let ((?x237 (- (+ (- ?x231 (* 66 ?x212 s00)) (* 108 r00 ?x212 s00)) ?x186)))
 (let ((?x240 (+ (- ?x237 (* 216 r00 s00 ?x220)) (* 36 r00 r00 ?x212 ?x212) ?x192)))
 (let ((?x246 (- (+ (- ?x240 (* 108 ?x212 ?x220)) (* 36 r00 r00 ?x212) ?x197) (* 108 r00 ?x220))))
 (let ((?x254 (- (+ (- (- (+ ?x246 ?x137) ?x139) (* 9 ?x212)) (* 54 r00 ?x212)) (* 216 ?x220 x00))))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) ?x161)))
 (let ((?x172 (- (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) ?x169) (* 12 s s s00))))
 (let ((?x180 (+ (- (+ ?x172 (* 108 s00 x)) ?x175) ?x177 (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) ?x186)))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) ?x192)))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 ?x197) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x269 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 ?x208) 0) (or (not (= (* (+ ?x254 ?x208) ?x264) 0))))))
 (rewrite (= $x269 $x674)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x271 (asserted $x270)))
 (let ((@x2257 (mp (mp @x271 (quant-intro (proof-bind ?x984) (= $x270 $x365)) $x365) (rewrite (= $x365 $x365)) $x365)))
 (let ((@x1056 (mp (mp @x2257 (quant-intro (proof-bind ?x1426) (= $x365 $x1493)) $x1493) (quant-intro (proof-bind ?x965) (= $x1493 $x945)) $x945)))
 (let ((@x2242 (mp (mp~ @x1056 (sk (~ $x945 $x1833)) $x1833) (rewrite (= $x1833 $x805)) $x805)))
 (let ((@x1748 (and-elim @x2242 $x1292)))
 (let ((@x1415 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1292) $x2546)) @x1748 $x2546)))
 (let (($x1114 (>= ?x1284 0)))
 (let ((@x2198 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1292) $x1114)) @x1748 $x1114)))
 (let (($x1118 (<= ?x357 0)))
 (let ((@x2414 (and-elim @x2242 $x525)))
 (let ((@x622 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x525) $x1118)) @x2414 $x1118)))
 (let (($x1989 (>= ?x357 0)))
 (let ((@x2403 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x525) $x1989)) @x2414 $x1989)))
 (let (($x1791 (<= ?x1197 0)))
 (let ((@x1754 (and-elim @x2242 $x624)))
 (let ((@x635 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x624) $x1791)) @x1754 $x1791)))
 (let (($x1206 (>= ?x1197 0)))
 (let ((@x450 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x624) $x1206)) @x1754 $x1206)))
 (let (($x1112 (<= ?x1698 0)))
 (let ((@x1656 (and-elim @x2242 $x2051)))
 (let ((@x1095 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2051) $x1112)) @x1656 $x1112)))
 (let (($x1917 (>= ?x1698 0)))
 (let ((@x2358 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2051) $x1917)) @x1656 $x1917)))
 (let (($x1110 (<= ?x2308 0)))
 (let ((@x1569 (and-elim @x2242 $x2233)))
 (let ((@x1565 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2233) $x1110)) @x1569 $x1110)))
 (let (($x1093 (>= ?x2308 0)))
 (let ((@x2686 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2233) $x1093)) @x1569 $x1093)))
 (let ((@x994 ((_ th-lemma arith) (hypothesis (not $x864)) @x2403 @x622 @x2358 @x1095 @x2358 @x1095 @x2686 @x1565 @x2403 @x622 @x2198 @x1415 @x2198 @x1415 @x2686 @x1565 @x2686 @x1565 @x450 @x635 @x2403 @x622 @x2358 @x1095 @x450 @x635 @x2198 @x1415 @x2358 @x1095 @x2403 @x622 @x450 @x635 @x2403 @x622 @x2198 @x1415 false)))
 (let ((@x1621 (lemma @x994 $x864)))
 (let (($x1417 (>= ?x2502 0)))
 (let ((@x535 ((_ th-lemma arith) (hypothesis (not $x1417)) @x2403 @x622 @x2358 @x1095 @x2358 @x1095 @x2686 @x1565 @x2403 @x622 @x2198 @x1415 @x2198 @x1415 @x2686 @x1565 @x2686 @x1565 @x450 @x635 @x2403 @x622 @x2358 @x1095 @x450 @x635 @x2198 @x1415 @x2358 @x1095 @x2403 @x622 @x450 @x635 @x2403 @x622 @x2198 @x1415 false)))
 (let ((@x1527 (lemma @x535 $x1417)))
 (let (($x1412 (not (<= ?x318 0))))
 (let (($x1088 (>= ?x318 0)))
 (let (($x981 (= ?x2502 0)))
 (let ((@x1082 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x981 (not $x864) (not $x1417))) @x1527 (or $x981 (not $x864)))))
 (let ((@x1419 (hypothesis $x981)))
 (let ((@x1377 ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1088)) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x981) $x1417)) @x1419 $x1417) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x981) $x864)) @x1419 $x864) false)))
 (let ((@x1382 (unit-resolution (lemma @x1377 (or (not $x981) $x1088)) (unit-resolution @x1082 @x1621 $x981) $x1088)))
 (let ((@x2101 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x811 $x1412 (not $x1088))) (and-elim @x2242 $x317) (or $x1412 (not $x1088)))))
 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x2101 @x1382 $x1412) @x1527 @x1621 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 62
 :arith-assert-diseq        5
 :arith-assert-lower        268
 :arith-assert-upper        431
 :arith-branch-var          6
 :arith-conflicts           15
 :arith-eq-adapter          11
 :arith-fixed-eqs           123
 :arith-gcd-tests           32
 :arith-gomory-cuts         1
 :arith-grobner             10
 :arith-ineq-splits         6
 :arith-max-min             2488
 :arith-nonlinear-bounds    191
 :arith-nonlinear-horner    203
 :arith-num-rows            40
 :arith-offset-eqs          6
 :arith-patches             12
 :arith-pivots              222
 :arith-pseudo-nonlinear    92
 :arith-row-summations      2098
 :arith-tableau-max-columns 168
 :arith-tableau-max-rows    40
 :conflicts                 15
 :decisions                 200
 :del-clause                37
 :final-checks              37
 :max-memory                9.36
 :memory                    3.38
 :minimized-lits            1
 :mk-bool-var               140
 :mk-clause                 56
 :num-allocs                6262369890.00
 :num-checks                1
 :propagations              37
 :rlimit-count              4362339
 :time                      2.35
 :total-time                2.36)
