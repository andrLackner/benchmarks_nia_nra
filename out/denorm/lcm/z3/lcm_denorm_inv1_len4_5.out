unsat
((set-logic NIA)
(declare-fun u!5 () Int)
(declare-fun x!3 () Int)
(declare-fun k!10 () Int)
(declare-fun v!4 () Int)
(declare-fun y!2 () Int)
(declare-fun k!00 () Int)
(proof
(let ((?x931 (+ k!00 (* (- 1) (* y!2 v!4)) k!10 (* (- 1) (* x!3 u!5)))))
 (let (($x967 (>= ?x931 0)))
 (let (($x933 (= ?x931 0)))
 (let ((?x968 (* y!2 y!2 x!3 v!4 v!4 v!4 u!5 u!5)))
 (let ((?x945 (* y!2 y!2 x!3 x!3 x!3 v!4 v!4 v!4)))
 (let ((?x955 (* (- 1) (* y!2 y!2 x!3 x!3 u!5))))
 (let ((?x960 (* (- 1) (* y!2 y!2 v!4 v!4 v!4 u!5 u!5 u!5))))
 (let ((?x199 (+ (* (- 1) (* y!2 y!2 y!2 y!2 y!2 v!4 v!4 v!4)) (* (- 1) (* y!2 y!2 y!2 y!2 y!2 u!5 u!5 u!5)) (* (- 3) (* y!2 y!2 y!2 y!2 y!2 v!4 v!4 u!5)) ?x960 ?x955 ?x945 (* (- 1) (* y!2 y!2 u!5 u!5 u!5 u!5 u!5 u!5)) ?x968 (* (- 3) (* y!2 y!2 v!4 u!5 u!5 u!5 u!5 u!5)) (* (- 3) (* y!2 y!2 v!4 v!4 u!5 u!5 u!5 u!5)) (* y!2 y!2 x!3 x!3 x!3 u!5 u!5 u!5) (* (- 3) (* y!2 y!2 y!2 x!3 x!3 u!5 u!5 u!5)) (* 3 (* y!2 y!2 x!3 x!3 x!3 v!4 u!5 u!5)) (* 3 (* y!2 y!2 x!3 x!3 x!3 v!4 v!4 u!5)) (* (- 9) (* y!2 y!2 y!2 x!3 x!3 v!4 u!5 u!5)) (* (- 9) (* y!2 y!2 y!2 x!3 x!3 v!4 v!4 u!5)) (* (- 3) (* y!2 y!2 y!2 x!3 x!3 v!4 v!4 v!4)) (* 3 (* y!2 y!2 y!2 y!2 x!3 u!5 u!5 u!5)) (* 9 (* y!2 y!2 y!2 y!2 x!3 v!4 u!5 u!5)) (* (- 3) (* y!2 y!2 y!2 y!2 y!2 v!4 u!5 u!5)) (* 2 (* y!2 y!2 y!2 x!3 u!5)) (* (- 1) (* y!2 y!2 y!2 y!2 u!5)) (* 3 (* y!2 y!2 y!2 y!2 x!3 v!4 v!4 v!4)) (* 9 (* y!2 y!2 y!2 y!2 x!3 v!4 v!4 u!5)) (* (- 3) (* y!2 y!2 y!2 v!4 v!4 u!5 u!5 u!5)) (* 3 (* y!2 y!2 x!3 v!4 u!5 u!5 u!5 u!5)) (* 3 (* y!2 y!2 x!3 v!4 v!4 u!5 u!5 u!5)) (* (- 1) (* y!2 y!2 y!2 u!5 u!5 u!5 u!5 u!5)) (* (- 3) (* y!2 y!2 y!2 v!4 u!5 u!5 u!5 u!5)) (* (- 1) (* y!2 y!2 y!2 v!4 v!4 v!4 u!5 u!5)) (* y!2 y!2 x!3 u!5 u!5 u!5 u!5 u!5))))
 (let ((?x1577 (* x!3 u!5)))
 (let ((?x1197 (* (- 1) k!10)))
 (let ((?x397 (* y!2 v!4)))
 (let ((?x159 (* (- 1) k!00)))
 (let ((?x918 (+ ?x159 ?x397 ?x1197 ?x1577)))
 (let ((?x128 (* ?x918 ?x199)))
 (let (($x978 (= ?x128 0)))
 (let (($x129 (not $x978)))
 (let ((?x428 (+ (* 6 (* y!2 x!3 v!4 v!4 v!4 v!4 u!5 u!5)) (* (- 3) (* y!2 y!2 v!4 v!4 v!4 v!4 u!5 u!5)) (* (- 1) (* x!3 x!3 x!3 x!3 v!4)) (* 2 (* y!2 x!3 x!3 x!3 v!4)) (* (- 1) (* y!2 y!2 x!3 x!3 v!4)) ?x960 ?x955 ?x945 (* (- 1) (* x!3 x!3 x!3 x!3 u!5)) ?x968 (* (- 3) (* y!2 y!2 v!4 v!4 v!4 v!4 v!4 u!5)) (* (- 1) (* y!2 y!2 v!4 v!4 v!4 v!4 v!4 v!4)) (* (- 1) (* x!3 x!3 v!4 v!4 v!4 u!5 u!5 u!5)) (* (- 3) (* x!3 x!3 v!4 v!4 v!4 v!4 u!5 u!5)) (* (- 3) (* x!3 x!3 v!4 v!4 v!4 v!4 v!4 u!5)) (* (- 1) (* x!3 x!3 v!4 v!4 v!4 v!4 v!4 v!4)) (* 2 (* y!2 x!3 v!4 v!4 v!4 u!5 u!5 u!5)) (* 6 (* y!2 x!3 v!4 v!4 v!4 v!4 v!4 u!5)) (* 2 (* y!2 x!3 x!3 x!3 u!5)) (* 2 (* y!2 x!3 v!4 v!4 v!4 v!4 v!4 v!4)) (* x!3 x!3 x!3 x!3 x!3 v!4 v!4 v!4) (* (- 2) (* y!2 x!3 x!3 x!3 x!3 v!4 v!4 v!4)) (* 2 (* y!2 y!2 x!3 v!4 v!4 v!4 v!4 u!5)) (* y!2 y!2 x!3 v!4 v!4 v!4 v!4 v!4) (* (- 2) (* y!2 x!3 x!3 v!4 v!4 v!4 u!5 u!5)) (* x!3 x!3 x!3 v!4 v!4 v!4 u!5 u!5) (* 2 (* x!3 x!3 x!3 v!4 v!4 v!4 v!4 u!5)) (* x!3 x!3 x!3 v!4 v!4 v!4 v!4 v!4) (* (- 4) (* y!2 x!3 x!3 v!4 v!4 v!4 v!4 u!5)) (* (- 2) (* y!2 x!3 x!3 v!4 v!4 v!4 v!4 v!4)))))
 (let ((?x493 (* ?x918 ?x428)))
 (let (($x944 (= ?x493 0)))
 (let (($x985 (or (not $x944) $x129)))
 (let (($x1167 (and $x933 $x985)))
 (let ((?x1627 (* u!5 u!5 v!4 v!4 v!4 x!3 y!2 y!2)))
 (let ((?x1622 (* v!4 v!4 v!4 x!3 x!3 x!3 y!2 y!2)))
 (let ((?x1620 (* (- 1) (* u!5 u!5 u!5 v!4 v!4 v!4 y!2 y!2))))
 (let ((?x1463 (* (- 1) (* u!5 x!3 x!3 y!2 y!2))))
 (let ((?x956 (+ ?x1463 (* (- 1) (* u!5 u!5 u!5 u!5 u!5 u!5 y!2 y!2)) (* (- 3) (* u!5 u!5 u!5 u!5 u!5 v!4 y!2 y!2)) (* (- 3) (* u!5 u!5 u!5 u!5 v!4 v!4 y!2 y!2)) ?x1620 (* u!5 u!5 u!5 x!3 x!3 x!3 y!2 y!2) (* 3 (* u!5 u!5 v!4 x!3 x!3 x!3 y!2 y!2)) (* 3 (* u!5 v!4 v!4 x!3 x!3 x!3 y!2 y!2)) ?x1622 (* (- 3) (* u!5 u!5 u!5 x!3 x!3 y!2 y!2 y!2)) (* (- 9) (* u!5 u!5 v!4 x!3 x!3 y!2 y!2 y!2)) (* (- 9) (* u!5 v!4 v!4 x!3 x!3 y!2 y!2 y!2)) (* (- 3) (* v!4 v!4 v!4 x!3 x!3 y!2 y!2 y!2)) (* 3 (* u!5 u!5 u!5 x!3 y!2 y!2 y!2 y!2)) (* 9 (* u!5 u!5 v!4 x!3 y!2 y!2 y!2 y!2)) (* 9 (* u!5 v!4 v!4 x!3 y!2 y!2 y!2 y!2)) (* 3 (* v!4 v!4 v!4 x!3 y!2 y!2 y!2 y!2)) (* 2 (* u!5 x!3 y!2 y!2 y!2)) (* (- 1) (* u!5 y!2 y!2 y!2 y!2)) (* (- 1) (* u!5 u!5 u!5 y!2 y!2 y!2 y!2 y!2)) (* (- 3) (* u!5 u!5 v!4 y!2 y!2 y!2 y!2 y!2)) (* (- 3) (* u!5 v!4 v!4 y!2 y!2 y!2 y!2 y!2)) (* (- 1) (* v!4 v!4 v!4 y!2 y!2 y!2 y!2 y!2)) (* u!5 u!5 u!5 u!5 u!5 x!3 y!2 y!2) (* 3 (* u!5 u!5 u!5 u!5 v!4 x!3 y!2 y!2)) (* 3 (* u!5 u!5 u!5 v!4 v!4 x!3 y!2 y!2)) ?x1627 (* (- 1) (* u!5 u!5 u!5 u!5 u!5 y!2 y!2 y!2)) (* (- 3) (* u!5 u!5 u!5 u!5 v!4 y!2 y!2 y!2)) (* (- 3) (* u!5 u!5 u!5 v!4 v!4 y!2 y!2 y!2)) (* (- 1) (* u!5 u!5 v!4 v!4 v!4 y!2 y!2 y!2)))))
 (let ((?x450 (+ (* u!5 x!3) (* v!4 y!2) ?x159 ?x1197)))
 (let ((?x353 (+ (* (- 1) (* v!4 x!3 x!3 y!2 y!2)) ?x1463 ?x1620 ?x1622 ?x1627 (* (- 1) (* u!5 x!3 x!3 x!3 x!3)) (* (- 3) (* u!5 u!5 v!4 v!4 v!4 v!4 y!2 y!2)) (* (- 3) (* u!5 v!4 v!4 v!4 v!4 v!4 y!2 y!2)) (* (- 1) (* v!4 v!4 v!4 v!4 v!4 v!4 y!2 y!2)) (* (- 1) (* u!5 u!5 u!5 v!4 v!4 v!4 x!3 x!3)) (* (- 3) (* u!5 u!5 v!4 v!4 v!4 v!4 x!3 x!3)) (* (- 3) (* u!5 v!4 v!4 v!4 v!4 v!4 x!3 x!3)) (* (- 1) (* v!4 v!4 v!4 v!4 v!4 v!4 x!3 x!3)) (* 2 (* u!5 u!5 u!5 v!4 v!4 v!4 x!3 y!2)) (* 6 (* u!5 u!5 v!4 v!4 v!4 v!4 x!3 y!2)) (* 6 (* u!5 v!4 v!4 v!4 v!4 v!4 x!3 y!2)) (* (- 1) (* v!4 x!3 x!3 x!3 x!3)) (* 2 (* u!5 x!3 x!3 x!3 y!2)) (* 2 (* v!4 x!3 x!3 x!3 y!2)) (* 2 (* v!4 v!4 v!4 v!4 v!4 v!4 x!3 y!2)) (* v!4 v!4 v!4 x!3 x!3 x!3 x!3 x!3) (* (- 2) (* v!4 v!4 v!4 x!3 x!3 x!3 x!3 y!2)) (* 2 (* u!5 v!4 v!4 v!4 v!4 x!3 y!2 y!2)) (* v!4 v!4 v!4 v!4 v!4 x!3 y!2 y!2) (* u!5 u!5 v!4 v!4 v!4 x!3 x!3 x!3) (* 2 (* u!5 v!4 v!4 v!4 v!4 x!3 x!3 x!3)) (* v!4 v!4 v!4 v!4 v!4 x!3 x!3 x!3) (* (- 2) (* u!5 u!5 v!4 v!4 v!4 x!3 x!3 y!2)) (* (- 4) (* u!5 v!4 v!4 v!4 v!4 x!3 x!3 y!2)) (* (- 2) (* v!4 v!4 v!4 v!4 v!4 x!3 x!3 y!2)))))
 (let (($x1160 (and (= ?x450 0) (or (not (= (* ?x450 ?x353) 0)) (not (= (* ?x450 ?x956) 0))))))
 (let (($x597 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x792 (* (- 1) (* u u v v v y y y))))
 (let ((?x801 (* (- 3) (* u u u v v y y y))))
 (let ((?x800 (* (- 3) (* u u u u v y y y))))
 (let ((?x748 (* (- 1) (* u u u u u y y y))))
 (let ((?x725 (* u u v v v x y y)))
 (let ((?x799 (* 3 (* u u u v v x y y))))
 (let ((?x798 (* 3 (* u u u u v x y y))))
 (let ((?x718 (* u u u u u x y y)))
 (let ((?x688 (* (- 1) (* v v v y y y y y))))
 (let ((?x707 (* (- 3) (* u v v y y y y y))))
 (let ((?x706 (* (- 3) (* u u v y y y y y))))
 (let ((?x644 (* (- 1) (* u u u y y y y y))))
 (let ((?x705 (* 3 (* v v v x y y y y))))
 (let ((?x704 (* 9 (* u v v x y y y y))))
 (let ((?x703 (* 9 (* u u v x y y y y))))
 (let ((?x701 (* 3 (* u u u x y y y y))))
 (let ((?x700 (* (- 3) (* v v v x x y y y))))
 (let ((?x699 (* (- 9) (* u v v x x y y y))))
 (let ((?x698 (* (- 9) (* u u v x x y y y))))
 (let ((?x696 (* (- 3) (* u u u x x y y y))))
 (let ((?x245 (* v v v x x x y y)))
 (let ((?x695 (* 3 (* u v v x x x y y))))
 (let ((?x694 (* 3 (* u u v x x x y y))))
 (let ((?x238 (* u u u x x x y y)))
 (let ((?x213 (* (- 1) (* u u u v v v y y))))
 (let ((?x221 (* (- 3) (* u u u u v v y y))))
 (let ((?x218 (* (- 3) (* u u u u u v y y))))
 (let ((?x210 (* (- 1) (* u u u u u u y y))))
 (let ((?x152 (* (- 1) (* u x x y y))))
 (let ((?x1642 (+ ?x152 ?x210 ?x218 ?x221 ?x213 ?x238 ?x694 ?x695 ?x245 ?x696 ?x698 ?x699 ?x700 ?x701 ?x703 ?x704 ?x705 (* 2 (* u x y y y)) (* (- 1) (* u y y y y)) ?x644 ?x706 ?x707 ?x688 ?x718 ?x798 ?x799 ?x725 ?x748 ?x800 ?x801 ?x792)))
 (let ((?x1197 (* (- 1) k!10)))
 (let ((?x159 (* (- 1) k!00)))
 (let ((?x34 (* v y)))
 (let ((?x33 (* u x)))
 (let ((?x877 (+ ?x33 ?x34 ?x159 ?x1197)))
 (let ((?x1220 (* (- 2) (* v v v v v x x y))))
 (let ((?x1219 (* (- 4) (* u v v v v x x y))))
 (let ((?x1217 (* (- 2) (* u u v v v x x y))))
 (let ((?x1156 (* v v v v v x x x)))
 (let ((?x1216 (* 2 (* u v v v v x x x))))
 (let ((?x1143 (* u u v v v x x x)))
 (let ((?x1137 (* v v v v v x y y)))
 (let ((?x1221 (* 2 (* u v v v v x y y))))
 (let ((?x1112 (* (- 2) (* v v v x x x x y))))
 (let ((?x1094 (* v v v x x x x x)))
 (let ((?x1081 (* 2 (* v v v v v v x y))))
 (let ((?x1078 (* 6 (* u v v v v v x y))))
 (let ((?x1075 (* 6 (* u u v v v v x y))))
 (let ((?x1071 (* 2 (* u u u v v v x y))))
 (let ((?x1050 (* (- 1) (* v v v v v v x x))))
 (let ((?x1067 (* (- 3) (* u v v v v v x x))))
 (let ((?x1064 (* (- 3) (* u u v v v v x x))))
 (let ((?x1047 (* (- 1) (* u u u v v v x x))))
 (let ((?x1046 (* (- 1) (* v v v v v v y y))))
 (let ((?x1061 (* (- 3) (* u v v v v v y y))))
 (let ((?x1058 (* (- 3) (* u u v v v v y y))))
 (let ((?x133 (* (- 1) (* v x x y y))))
 (let ((?x511 (+ ?x133 ?x152 ?x213 ?x245 ?x725 (* (- 1) (* u x x x x)) ?x1058 ?x1061 ?x1046 ?x1047 ?x1064 ?x1067 ?x1050 ?x1071 ?x1075 ?x1078 (* (- 1) (* v x x x x)) (* 2 (* u x x x y)) (* 2 (* v x x x y)) ?x1081 ?x1094 ?x1112 ?x1221 ?x1137 ?x1143 ?x1216 ?x1156 ?x1217 ?x1219 ?x1220)))
 (and (= ?x877 0) (or (not (= (* ?x877 ?x511) 0)) (not (= (* ?x877 ?x1642) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x192 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x88 (* (- 1) y)))
 (let ((?x519 (+ x ?x88)))
 (let ((?x44 (+ v u)))
 (let ((?x459 (+ (* (- 1) (* ?x519 ?x519 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 y y u u u)) (* ?x44 ?x44 ?x44 ?x519 ?x519 ?x519 y y) (* ?x44 ?x44 ?x44 ?x519 y y u u))))
 (let ((?x1197 (* (- 1) k!10)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x394 (* ?x519 u)))
 (let ((?x159 (* (- 1) k!00)))
 (let ((?x163 (* (- 1) x)))
 (let ((?x636 (+ y ?x163)))
 (let ((?x57 (+ u v)))
 (let ((?x879 (+ (* (- 1) (* ?x57 ?x636 ?x636 x x)) (* (- 1) (* ?x57 ?x57 ?x57 ?x636 ?x636 v v v)) (* ?x636 ?x636 x x x v v v) (* ?x57 ?x57 ?x636 ?x636 x v v v))))
 (let (($x913 (or (not (= (* (+ ?x159 (* ?x57 x) (* ?x636 v) ?x1197) ?x879) 0)) (not (= (* (+ ?x159 ?x394 ?x45 ?x1197) ?x459) 0)))))
 (let ((?x572 (+ k!00 (* (- 1) (* x u)) (* (- 1) (* y v)) k!10)))
 (and (= ?x572 0) $x913))))))))))))))) :qid k!29))
 ))
 (let ((?x576 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x792 (* (- 1) (* u u v v v y y y))))
 (let ((?x801 (* (- 3) (* u u u v v y y y))))
 (let ((?x800 (* (- 3) (* u u u u v y y y))))
 (let ((?x748 (* (- 1) (* u u u u u y y y))))
 (let ((?x725 (* u u v v v x y y)))
 (let ((?x799 (* 3 (* u u u v v x y y))))
 (let ((?x798 (* 3 (* u u u u v x y y))))
 (let ((?x718 (* u u u u u x y y)))
 (let ((?x688 (* (- 1) (* v v v y y y y y))))
 (let ((?x707 (* (- 3) (* u v v y y y y y))))
 (let ((?x706 (* (- 3) (* u u v y y y y y))))
 (let ((?x644 (* (- 1) (* u u u y y y y y))))
 (let ((?x705 (* 3 (* v v v x y y y y))))
 (let ((?x704 (* 9 (* u v v x y y y y))))
 (let ((?x703 (* 9 (* u u v x y y y y))))
 (let ((?x701 (* 3 (* u u u x y y y y))))
 (let ((?x700 (* (- 3) (* v v v x x y y y))))
 (let ((?x699 (* (- 9) (* u v v x x y y y))))
 (let ((?x698 (* (- 9) (* u u v x x y y y))))
 (let ((?x696 (* (- 3) (* u u u x x y y y))))
 (let ((?x245 (* v v v x x x y y)))
 (let ((?x695 (* 3 (* u v v x x x y y))))
 (let ((?x694 (* 3 (* u u v x x x y y))))
 (let ((?x238 (* u u u x x x y y)))
 (let ((?x213 (* (- 1) (* u u u v v v y y))))
 (let ((?x221 (* (- 3) (* u u u u v v y y))))
 (let ((?x218 (* (- 3) (* u u u u u v y y))))
 (let ((?x210 (* (- 1) (* u u u u u u y y))))
 (let ((?x152 (* (- 1) (* u x x y y))))
 (let ((?x1642 (+ ?x152 ?x210 ?x218 ?x221 ?x213 ?x238 ?x694 ?x695 ?x245 ?x696 ?x698 ?x699 ?x700 ?x701 ?x703 ?x704 ?x705 (* 2 (* u x y y y)) (* (- 1) (* u y y y y)) ?x644 ?x706 ?x707 ?x688 ?x718 ?x798 ?x799 ?x725 ?x748 ?x800 ?x801 ?x792)))
 (let ((?x1197 (* (- 1) k!10)))
 (let ((?x159 (* (- 1) k!00)))
 (let ((?x34 (* v y)))
 (let ((?x33 (* u x)))
 (let ((?x877 (+ ?x33 ?x34 ?x159 ?x1197)))
 (let ((?x1220 (* (- 2) (* v v v v v x x y))))
 (let ((?x1219 (* (- 4) (* u v v v v x x y))))
 (let ((?x1217 (* (- 2) (* u u v v v x x y))))
 (let ((?x1156 (* v v v v v x x x)))
 (let ((?x1216 (* 2 (* u v v v v x x x))))
 (let ((?x1143 (* u u v v v x x x)))
 (let ((?x1137 (* v v v v v x y y)))
 (let ((?x1221 (* 2 (* u v v v v x y y))))
 (let ((?x1112 (* (- 2) (* v v v x x x x y))))
 (let ((?x1094 (* v v v x x x x x)))
 (let ((?x1081 (* 2 (* v v v v v v x y))))
 (let ((?x1078 (* 6 (* u v v v v v x y))))
 (let ((?x1075 (* 6 (* u u v v v v x y))))
 (let ((?x1071 (* 2 (* u u u v v v x y))))
 (let ((?x1050 (* (- 1) (* v v v v v v x x))))
 (let ((?x1067 (* (- 3) (* u v v v v v x x))))
 (let ((?x1064 (* (- 3) (* u u v v v v x x))))
 (let ((?x1047 (* (- 1) (* u u u v v v x x))))
 (let ((?x1046 (* (- 1) (* v v v v v v y y))))
 (let ((?x1061 (* (- 3) (* u v v v v v y y))))
 (let ((?x1058 (* (- 3) (* u u v v v v y y))))
 (let ((?x133 (* (- 1) (* v x x y y))))
 (let ((?x511 (+ ?x133 ?x152 ?x213 ?x245 ?x725 (* (- 1) (* u x x x x)) ?x1058 ?x1061 ?x1046 ?x1047 ?x1064 ?x1067 ?x1050 ?x1071 ?x1075 ?x1078 (* (- 1) (* v x x x x)) (* 2 (* u x x x y)) (* 2 (* v x x x y)) ?x1081 ?x1094 ?x1112 ?x1221 ?x1137 ?x1143 ?x1216 ?x1156 ?x1217 ?x1219 ?x1220)))
 (let (($x1670 (and (= ?x877 0) (or (not (= (* ?x877 ?x511) 0)) (not (= (* ?x877 ?x1642) 0))))))
 (let ((?x88 (* (- 1) y)))
 (let ((?x519 (+ x ?x88)))
 (let ((?x44 (+ v u)))
 (let ((?x459 (+ (* (- 1) (* ?x519 ?x519 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 y y u u u)) (* ?x44 ?x44 ?x44 ?x519 ?x519 ?x519 y y) (* ?x44 ?x44 ?x44 ?x519 y y u u))))
 (let ((?x163 (* (- 1) x)))
 (let ((?x636 (+ y ?x163)))
 (let ((?x57 (+ u v)))
 (let ((?x879 (+ (* (- 1) (* ?x57 ?x636 ?x636 x x)) (* (- 1) (* ?x57 ?x57 ?x57 ?x636 ?x636 v v v)) (* ?x636 ?x636 x x x v v v) (* ?x57 ?x57 ?x636 ?x636 x v v v))))
 (let (($x913 (or (not (= (* (+ ?x159 (* ?x57 x) (* ?x636 v) ?x1197) ?x879) 0)) (not (= (* (+ ?x159 (* ?x519 u) (* ?x44 y) ?x1197) ?x459) 0)))))
 (let ((?x572 (+ k!00 (* (- 1) (* x u)) (* (- 1) (* y v)) k!10)))
 (let (($x203 (and (= ?x572 0) $x913)))
 (rewrite (= $x203 $x1670)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x206 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x88 (* (- 1) y)))
 (let ((?x519 (+ x ?x88)))
 (let ((?x44 (+ v u)))
 (let ((?x459 (+ (* (- 1) (* ?x519 ?x519 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 y y u u u)) (* ?x44 ?x44 ?x44 ?x519 ?x519 ?x519 y y) (* ?x44 ?x44 ?x44 ?x519 y y u u))))
 (let ((?x1197 (* (- 1) k!10)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x394 (* ?x519 u)))
 (let ((?x159 (* (- 1) k!00)))
 (let ((?x163 (* (- 1) x)))
 (let ((?x636 (+ y ?x163)))
 (let ((?x57 (+ u v)))
 (let ((?x879 (+ (* (- 1) (* ?x57 ?x636 ?x636 x x)) (* (- 1) (* ?x57 ?x57 ?x57 ?x636 ?x636 v v v)) (* ?x636 ?x636 x x x v v v) (* ?x57 ?x57 ?x636 ?x636 x v v v))))
 (let (($x913 (or (not (= (* (+ ?x159 (* ?x57 x) (* ?x636 v) ?x1197) ?x879) 0)) (not (= (* (+ ?x159 ?x394 ?x45 ?x1197) ?x459) 0)))))
 (and (= (+ ?x159 (* x u) (* y v) ?x1197) 0) $x913)))))))))))))) :qid k!29))
 ))
 (let ((?x183 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x88 (* (- 1) y)))
 (let ((?x519 (+ x ?x88)))
 (let ((?x44 (+ v u)))
 (let ((?x459 (+ (* (- 1) (* ?x519 ?x519 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 y y u u u)) (* ?x44 ?x44 ?x44 ?x519 ?x519 ?x519 y y) (* ?x44 ?x44 ?x44 ?x519 y y u u))))
 (let ((?x1197 (* (- 1) k!10)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x394 (* ?x519 u)))
 (let ((?x159 (* (- 1) k!00)))
 (let ((?x163 (* (- 1) x)))
 (let ((?x636 (+ y ?x163)))
 (let ((?x57 (+ u v)))
 (let ((?x879 (+ (* (- 1) (* ?x57 ?x636 ?x636 x x)) (* (- 1) (* ?x57 ?x57 ?x57 ?x636 ?x636 v v v)) (* ?x636 ?x636 x x x v v v) (* ?x57 ?x57 ?x636 ?x636 x v v v))))
 (let (($x913 (or (not (= (* (+ ?x159 (* ?x57 x) (* ?x636 v) ?x1197) ?x879) 0)) (not (= (* (+ ?x159 ?x394 ?x45 ?x1197) ?x459) 0)))))
 (let ((?x572 (+ k!00 (* (- 1) (* x u)) (* (- 1) (* y v)) k!10)))
 (let (($x203 (and (= ?x572 0) $x913)))
 (let (($x304 (and (= (+ ?x159 (* x u) (* y v) ?x1197) 0) $x913)))
 (rewrite (= $x304 $x203)))))))))))))))))))
 ))
 (let (($x856 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x88 (* (- 1) y)))
 (let ((?x519 (+ x ?x88)))
 (let ((?x44 (+ v u)))
 (let ((?x459 (+ (* (- 1) (* ?x519 ?x519 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 y y u u u)) (* ?x44 ?x44 ?x44 ?x519 ?x519 ?x519 y y) (* ?x44 ?x44 ?x44 ?x519 y y u u))))
 (let ((?x38 (* v00 y00)))
 (let ((?x99 (* (- 1) ?x38)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x394 (* ?x519 u)))
 (let ((?x83 (* (- 1) (* u00 x00))))
 (let ((?x163 (* (- 1) x)))
 (let ((?x636 (+ y ?x163)))
 (let ((?x57 (+ u v)))
 (let ((?x879 (+ (* (- 1) (* ?x57 ?x636 ?x636 x x)) (* (- 1) (* ?x57 ?x57 ?x57 ?x636 ?x636 v v v)) (* ?x636 ?x636 x x x v v v) (* ?x57 ?x57 ?x636 ?x636 x v v v))))
 (let (($x464 (or (not (= (* (+ ?x83 (* ?x57 x) (* ?x636 v) ?x99) ?x879) 0)) (not (= (* (+ ?x83 ?x394 ?x45 ?x99) ?x459) 0)))))
 (and (= (+ ?x83 (* x u) (* y v) ?x99) 0) $x464))))))))))))))) :qid k!29))
 ))
 (let ((?x401 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x88 (* (- 1) y)))
 (let ((?x519 (+ x ?x88)))
 (let ((?x44 (+ v u)))
 (let ((?x459 (+ (* (- 1) (* ?x519 ?x519 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 y y u u u)) (* ?x44 ?x44 ?x44 ?x519 ?x519 ?x519 y y) (* ?x44 ?x44 ?x44 ?x519 y y u u))))
 (let ((?x1197 (* (- 1) k!10)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x394 (* ?x519 u)))
 (let ((?x159 (* (- 1) k!00)))
 (let ((?x163 (* (- 1) x)))
 (let ((?x636 (+ y ?x163)))
 (let ((?x57 (+ u v)))
 (let ((?x879 (+ (* (- 1) (* ?x57 ?x636 ?x636 x x)) (* (- 1) (* ?x57 ?x57 ?x57 ?x636 ?x636 v v v)) (* ?x636 ?x636 x x x v v v) (* ?x57 ?x57 ?x636 ?x636 x v v v))))
 (let (($x913 (or (not (= (* (+ ?x159 (* ?x57 x) (* ?x636 v) ?x1197) ?x879) 0)) (not (= (* (+ ?x159 ?x394 ?x45 ?x1197) ?x459) 0)))))
 (let (($x304 (and (= (+ ?x159 (* x u) (* y v) ?x1197) 0) $x913)))
 (let ((?x886 (* (+ (* (- 1) (* u00 x00)) ?x394 ?x45 (* (- 1) (* v00 y00))) ?x459)))
 (let ((?x38 (* v00 y00)))
 (let ((?x99 (* (- 1) ?x38)))
 (let ((?x182 (* ?x636 v)))
 (let ((?x58 (* ?x57 x)))
 (let ((?x83 (* (- 1) (* u00 x00))))
 (let (($x464 (or (not (= (* (+ ?x83 ?x58 ?x182 ?x99) ?x879) 0)) (not (= ?x886 0)))))
 (let (($x930 (and (= (+ ?x83 (* x u) (* y v) ?x99) 0) $x464)))
 (rewrite (= $x930 $x304)))))))))))))))))))))))))
 ))
 (let (($x74 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x59 (- y x)))
 (let ((?x57 (+ u v)))
 (let ((?x65 (- (* (- 1) ?x57 x x ?x59 ?x59) (* ?x57 ?x57 ?x57 v v v ?x59 ?x59))))
 (let ((?x68 (+ ?x65 (* v v v x x x ?x59 ?x59) (* ?x57 ?x57 v v v x ?x59 ?x59))))
 (let ((?x38 (* v00 y00)))
 (let ((?x69 (* (- (+ (* (- 1) u00 x00) (* ?x57 x) (* v ?x59)) ?x38) ?x68)))
 (let ((?x42 (- x y)))
 (let ((?x44 (+ v u)))
 (let ((?x50 (- (* (- 1) u ?x42 ?x42 y y) (* u u u ?x44 ?x44 ?x44 y y))))
 (let ((?x53 (+ ?x50 (* ?x44 ?x44 ?x44 ?x42 ?x42 ?x42 y y) (* u u ?x44 ?x44 ?x44 ?x42 y y))))
 (let ((?x54 (* (- (+ (* (- 1) u00 x00) (* u ?x42) (* ?x44 y)) ?x38) ?x53)))
 (let (($x41 (= (- (+ (* (- 1) u00 x00) (* u x) (* v y)) ?x38) 0)))
 (and $x41 (or (not (= ?x54 0)) (not (= ?x69 0)))))))))))))))) :qid k!29))
 ))
 (let ((?x915 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x88 (* (- 1) y)))
 (let ((?x519 (+ x ?x88)))
 (let ((?x44 (+ v u)))
 (let ((?x459 (+ (* (- 1) (* ?x519 ?x519 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 y y u u u)) (* ?x44 ?x44 ?x44 ?x519 ?x519 ?x519 y y) (* ?x44 ?x44 ?x44 ?x519 y y u u))))
 (let ((?x38 (* v00 y00)))
 (let ((?x99 (* (- 1) ?x38)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x394 (* ?x519 u)))
 (let ((?x83 (* (- 1) (* u00 x00))))
 (let ((?x163 (* (- 1) x)))
 (let ((?x636 (+ y ?x163)))
 (let ((?x57 (+ u v)))
 (let ((?x879 (+ (* (- 1) (* ?x57 ?x636 ?x636 x x)) (* (- 1) (* ?x57 ?x57 ?x57 ?x636 ?x636 v v v)) (* ?x636 ?x636 x x x v v v) (* ?x57 ?x57 ?x636 ?x636 x v v v))))
 (let (($x464 (or (not (= (* (+ ?x83 (* ?x57 x) (* ?x636 v) ?x99) ?x879) 0)) (not (= (* (+ ?x83 ?x394 ?x45 ?x99) ?x459) 0)))))
 (let (($x930 (and (= (+ ?x83 (* x u) (* y v) ?x99) 0) $x464)))
 (let ((?x65 (- (* (- 1) ?x57 x x (- y x) (- y x)) (* ?x57 ?x57 ?x57 v v v (- y x) (- y x)))))
 (let ((?x68 (+ ?x65 (* v v v x x x (- y x) (- y x)) (* ?x57 ?x57 v v v x (- y x) (- y x)))))
 (let ((?x62 (- (+ (* (- 1) u00 x00) (* ?x57 x) (* v (- y x))) ?x38)))
 (let ((?x42 (- x y)))
 (let ((?x50 (- (* (- 1) u ?x42 ?x42 y y) (* u u u ?x44 ?x44 ?x44 y y))))
 (let ((?x53 (+ ?x50 (* ?x44 ?x44 ?x44 ?x42 ?x42 ?x42 y y) (* u u ?x44 ?x44 ?x44 ?x42 y y))))
 (let (($x55 (= (* (- (+ (* (- 1) u00 x00) (* u ?x42) ?x45) ?x38) ?x53) 0)))
 (let (($x41 (= (- (+ (* (- 1) u00 x00) (* u x) (* v y)) ?x38) 0)))
 (let (($x73 (and $x41 (or (not $x55) (not (= (* ?x62 ?x68) 0))))))
 (rewrite (= $x73 $x930)))))))))))))))))))))))))))
 ))
 (let ((@x75 (asserted $x74)))
 (let ((@x715 (mp (mp @x75 (quant-intro (proof-bind ?x915) (= $x74 $x856)) $x856) (rewrite (= $x856 $x856)) $x856)))
 (let ((@x819 (mp (mp @x715 (quant-intro (proof-bind ?x401) (= $x856 $x206)) $x206) (quant-intro (proof-bind ?x183) (= $x206 $x192)) $x192)))
 (let ((@x1598 (mp~ (mp @x819 (quant-intro (proof-bind ?x576) (= $x192 $x597)) $x597) (sk (~ $x597 $x1160)) $x1160)))
 (let ((@x991 (mp @x1598 (rewrite (= $x1160 $x1167)) $x1167)))
 (let ((@x997 (and-elim @x991 $x933)))
 (let ((@x256 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x933) $x967)) @x997 $x967)))
 (let (($x954 (<= ?x931 0)))
 (let ((@x917 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x933) $x954)) @x997 $x954)))
 (let (($x987 (not (<= ?x128 0))))
 (let (($x825 (>= ?x128 0)))
 (let (($x963 (>= ?x493 0)))
 (let (($x962 (<= ?x493 0)))
 (let ((@x850 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x944 (not $x962) (not $x963))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x962)) @x917 @x256 false) $x962) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x963)) @x917 @x256 false) $x963) $x944)))
 (let ((@x1021 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x978 $x987 (not $x825))) (unit-resolution (and-elim @x991 $x985) @x850 $x129) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x825)) @x917 @x256 false) $x825) $x987)))
 ((_ th-lemma arith farkas 1 1 1) @x1021 @x917 @x256 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        37
 :arith-assert-upper        14
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-fixed-eqs           5
 :arith-max-min             536
 :arith-nonlinear-bounds    20
 :arith-num-rows            4
 :arith-pivots              1
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 80
 :arith-tableau-max-rows    4
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :eliminated-applications   2
 :final-checks              4
 :max-memory                3.77
 :memory                    3.26
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1146894
 :num-checks                1
 :propagations              14
 :rlimit-count              6874
 :time                      0.01
 :total-time                0.02)
