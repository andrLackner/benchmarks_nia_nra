unsat
((set-logic NIA)
(declare-fun b!2 () Int)
(declare-fun r!1 () Int)
(declare-fun a!4 () Int)
(declare-fun s!0 () Int)
(declare-fun q!3 () Int)
(declare-fun p!5 () Int)
(proof
(let ((?x282 (* r!1 b!2)))
 (let ((?x130 (* s00 a00)))
 (let ((?x537 (+ ?x130 (* (- 1) (* r00 b00)) (* (- 1) (* s!0 a!4)) ?x282)))
 (let (($x198 (>= ?x537 0)))
 (let (($x602 (= ?x537 0)))
 (let ((?x278 (* s!0 a!4)))
 (let ((?x148 (* r00 b00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x703 (+ ?x137 ?x148 ?x278 (* (- 1) ?x282))))
 (let ((?x781 (* r!1 q!3 a!4 a!4 a!4)))
 (let ((?x390 (* r!1 r!1 r!1 b!2 b!2 p!5)))
 (let ((?x204 (* (- 1) (* r!1 r!1 r!1 p!5 p!5 p!5 q!3 a!4 a!4 a!4))))
 (let ((?x119 (* (- 1) (* r!1 r!1 r!1 b!2 p!5 p!5 p!5 p!5 a!4 a!4))))
 (let ((?x595 (+ ?x119 (* (- 1) (* r!1 p!5 a!4 a!4 a!4)) ?x204 (* r!1 r!1 r!1 b!2 p!5 p!5 p!5 q!3 a!4 a!4) (* r!1 r!1 r!1 p!5 a!4 a!4) ?x390 (* (- 2) (* r!1 r!1 r!1 b!2 p!5 a!4)) (* r!1 r!1 r!1 p!5 p!5 p!5 p!5 a!4 a!4 a!4) ?x781)))
 (let ((?x684 (* ?x595 ?x703)))
 (let (($x401 (= ?x684 0)))
 (let ((?x407 (+ p!5 (* (- 1) q!3))))
 (let ((?x489 (* (- 1) b!2)))
 (let ((?x226 (+ ?x489 a!4)))
 (let ((?x488 (+ r!1 (* (- 1) s!0))))
 (let ((?x439 (+ (* 3 (* r!1 b!2 b!2 p!5 s!0 s!0)) (* 3 (* b!2 s!0 q!3 a!4 a!4)) (* ?x488 ?x488 ?x488 ?x226 ?x226 ?x407 ?x407 ?x407 b!2 q!3) (* (- 3) (* b!2 b!2 s!0 q!3 a!4)) (* (- 1) (* r!1 b!2 b!2 b!2 q!3)) (* 3 (* r!1 b!2 b!2 q!3 a!4)) (* (- 3) (* r!1 b!2 q!3 a!4 a!4)) (* (- 1) (* r!1 r!1 r!1 b!2 b!2 q!3)) (* (- 3) (* r!1 r!1 b!2 b!2 p!5 s!0)) (* (- 1) (* b!2 b!2 p!5 s!0 s!0 s!0)) ?x390 (* (- 1) (* s!0 q!3 a!4 a!4 a!4)) (* (- 3) (* r!1 b!2 b!2 s!0 s!0 q!3)) (* b!2 b!2 s!0 s!0 s!0 q!3) (* b!2 b!2 b!2 s!0 q!3) ?x781 (* 3 (* r!1 r!1 b!2 b!2 s!0 q!3)))))
 (let ((?x304 (* ?x439 ?x703)))
 (let (($x156 (= ?x304 0)))
 (let (($x303 (not $x156)))
 (let (($x289 (or $x303 (not $x401))))
 (let ((?x486 (+ (* r00 b00 q!3) (* q00 a00 s!0) (* (- 1) (* p00 b00 s!0)) (* p00 s00 b!2) (* (- 1) (* s00 a00 q!3)) (* (- 1) (* q00 r00 b!2)))))
 (let ((?x435 (+ (* p00 s00 a!4) (* (- 1) (* q00 r00 a!4)) (* r00 b00 p!5) (* (- 1) (* p00 b00 r!1)) (* (- 1) (* s00 a00 p!5)) (* q00 a00 r!1))))
 (let ((?x136 (* q00 a00)))
 (let ((?x827 (+ ?x136 (* (- 1) (* p00 b00)) (* b!2 p!5) (* (- 1) (* q!3 a!4)))))
 (let ((?x37 (* p00 s00)))
 (let ((?x315 (+ ?x37 (* (- 1) (* q00 r00)) (* r!1 q!3) (* (- 1) (* p!5 s!0)))))
 (let (($x181 (and (= ?x315 0) $x602 (= ?x827 0) (= ?x435 0) (= ?x486 0) $x289)))
 (let ((?x423 (+ (* a!4 s!0) (* (- 1) (* b!2 r!1)) ?x137 ?x148)))
 (let ((?x325 (* (- 1) (* p!5 p!5 p!5 a!4 a!4 a!4 q!3 r!1 r!1 r!1))))
 (let ((?x301 (* (- 1) (* p!5 p!5 p!5 p!5 a!4 a!4 b!2 r!1 r!1 r!1))))
 (let ((?x472 (* a!4 a!4 a!4 q!3 r!1)))
 (let ((?x460 (* p!5 b!2 b!2 r!1 r!1 r!1)))
 (let ((?x300 (+ ?x460 ?x472 (* (- 1) (* p!5 a!4 a!4 a!4 r!1)) (* (- 2) (* p!5 a!4 b!2 r!1 r!1 r!1)) (* p!5 a!4 a!4 r!1 r!1 r!1) (* p!5 p!5 p!5 p!5 a!4 a!4 a!4 r!1 r!1 r!1) ?x301 ?x325 (* p!5 p!5 p!5 a!4 a!4 q!3 b!2 r!1 r!1 r!1))))
 (let ((?x358 (+ a!4 ?x489)))
 (let ((?x499 (+ ?x460 (* (- 1) (* q!3 b!2 b!2 r!1 r!1 r!1)) (* (- 3) (* p!5 b!2 b!2 r!1 r!1 s!0)) (* 3 (* q!3 b!2 b!2 r!1 r!1 s!0)) (* 3 (* p!5 b!2 b!2 r!1 s!0 s!0)) (* (- 3) (* q!3 b!2 b!2 r!1 s!0 s!0)) (* (- 1) (* p!5 b!2 b!2 s!0 s!0 s!0)) (* q!3 b!2 b!2 s!0 s!0 s!0) ?x472 (* (- 3) (* a!4 a!4 q!3 b!2 r!1)) (* 3 (* a!4 q!3 b!2 b!2 r!1)) (* (- 1) (* q!3 b!2 b!2 b!2 r!1)) (* (- 1) (* a!4 a!4 a!4 q!3 s!0)) (* 3 (* a!4 a!4 q!3 b!2 s!0)) (* (- 3) (* a!4 q!3 b!2 b!2 s!0)) (* ?x488 ?x488 ?x488 ?x358 ?x358 ?x407 ?x407 ?x407 b!2 q!3) (* q!3 b!2 b!2 b!2 s!0))))
 (let ((?x458 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x445 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let ((?x141 (* p00 b00)))
 (let ((?x182 (* (- 1) ?x136)))
 (let ((?x41 (* q00 r00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x419 (* p!5 s!0)))
 (let (($x147 (and (= (+ ?x419 ?x139 ?x41 (* (- 1) (* q!3 r!1))) 0) (= ?x423 0) (= (+ (* a!4 q!3) ?x182 ?x141 (* (- 1) (* p!5 b!2))) 0) (= ?x445 0) (= ?x458 0) (or (not (= (* ?x499 ?x423) 0)) (not (= (* ?x300 ?x423) 0))))))
 (let (($x197 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x148 (* r00 b00)))
 (let ((?x130 (* s00 a00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x125 (* (- 1) (* b r))))
 (let ((?x49 (* a s)))
 (let ((?x155 (+ ?x49 ?x125 ?x137 ?x148)))
 (let ((?x509 (* a a a q r)))
 (let ((?x363 (* p b b r r r)))
 (let ((?x807 (+ ?x363 ?x509 (* (- 1) (* p a a a r)) (* (- 2) (* p a b r r r)) (* p a a r r r) (* p p p p a a a r r r) (* (- 1) (* p p p p a a b r r r)) (* (- 1) (* p p p a a a q r r r)) (* p p p a a q b r r r))))
 (let ((?x637 (* q b b b s)))
 (let ((?x336 (+ p (* (- 1) q))))
 (let ((?x299 (+ a (* (- 1) b))))
 (let ((?x260 (* (- 1) s)))
 (let ((?x262 (+ r ?x260)))
 (let ((?x620 (* ?x262 ?x262 ?x262 ?x299 ?x299 ?x336 ?x336 ?x336 b q)))
 (let ((?x648 (* (- 3) (* a q b b s))))
 (let ((?x647 (* 3 (* a a q b s))))
 (let ((?x583 (* (- 1) (* a a a q s))))
 (let ((?x579 (* (- 1) (* q b b b r))))
 (let ((?x646 (* 3 (* a q b b r))))
 (let ((?x645 (* (- 3) (* a a q b r))))
 (let ((?x485 (* q b b s s s)))
 (let ((?x479 (* (- 1) (* p b b s s s))))
 (let ((?x498 (* (- 3) (* q b b r s s))))
 (let ((?x497 (* 3 (* p b b r s s))))
 (let ((?x496 (* 3 (* q b b r r s))))
 (let ((?x494 (* (- 3) (* p b b r r s))))
 (let ((?x373 (* (- 1) (* q b b r r r))))
 (let ((?x189 (+ ?x363 ?x373 ?x494 ?x496 ?x497 ?x498 ?x479 ?x485 ?x509 ?x645 ?x646 ?x579 ?x583 ?x647 ?x648 ?x620 ?x637)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x314 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x319 (= ?x314 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x250 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x251 (= ?x250 0)))
 (let ((?x141 (* p00 b00)))
 (let ((?x136 (* q00 a00)))
 (let ((?x182 (* (- 1) ?x136)))
 (let (($x185 (= (+ (* a q) ?x182 ?x141 (* (- 1) (* p b))) 0)))
 (let (($x163 (= ?x155 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x158 (= (+ ?x33 ?x139 ?x41 (* (- 1) (* q r))) 0)))
 (and $x158 $x163 $x185 $x251 $x319 (or (not (= (* ?x189 ?x155) 0)) (not (= (* ?x807 ?x155) 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x652 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x134 (* (- 1) ?x47)))
 (let ((?x597 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x134 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x641 (+ q (* (- 1) p))))
 (let ((?x340 (* (- 1) a)))
 (let ((?x613 (+ b ?x340)))
 (let ((?x667 (+ (* ?x613 ?x613 r r r p) (* ?x641 r a a a) (* ?x613 ?x641 r r r a a p p p))))
 (let ((?x586 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x134 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x336 (+ p (* (- 1) q))))
 (let ((?x299 (+ a (* (- 1) b))))
 (let ((?x260 (* (- 1) s)))
 (let ((?x262 (+ r ?x260)))
 (let ((?x620 (* ?x262 ?x262 ?x262 ?x299 ?x299 ?x336 ?x336 ?x336 b q)))
 (let ((?x625 (+ (* ?x262 ?x262 ?x262 ?x336 b b) (* ?x262 ?x299 ?x299 ?x299 q) ?x620)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x599 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x560 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x531 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x139 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x134 (* s a) ?x51) 0) $x531 (= ?x560 0) (= ?x599 0) (or (not (= (* ?x625 ?x586) 0)) (not (= (* ?x667 ?x597) 0))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x170 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x148 (* r00 b00)))
 (let ((?x130 (* s00 a00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x125 (* (- 1) (* b r))))
 (let ((?x49 (* a s)))
 (let ((?x155 (+ ?x49 ?x125 ?x137 ?x148)))
 (let ((?x509 (* a a a q r)))
 (let ((?x363 (* p b b r r r)))
 (let ((?x807 (+ ?x363 ?x509 (* (- 1) (* p a a a r)) (* (- 2) (* p a b r r r)) (* p a a r r r) (* p p p p a a a r r r) (* (- 1) (* p p p p a a b r r r)) (* (- 1) (* p p p a a a q r r r)) (* p p p a a q b r r r))))
 (let ((?x637 (* q b b b s)))
 (let ((?x336 (+ p (* (- 1) q))))
 (let ((?x299 (+ a (* (- 1) b))))
 (let ((?x260 (* (- 1) s)))
 (let ((?x262 (+ r ?x260)))
 (let ((?x620 (* ?x262 ?x262 ?x262 ?x299 ?x299 ?x336 ?x336 ?x336 b q)))
 (let ((?x648 (* (- 3) (* a q b b s))))
 (let ((?x647 (* 3 (* a a q b s))))
 (let ((?x583 (* (- 1) (* a a a q s))))
 (let ((?x579 (* (- 1) (* q b b b r))))
 (let ((?x646 (* 3 (* a q b b r))))
 (let ((?x645 (* (- 3) (* a a q b r))))
 (let ((?x485 (* q b b s s s)))
 (let ((?x479 (* (- 1) (* p b b s s s))))
 (let ((?x498 (* (- 3) (* q b b r s s))))
 (let ((?x497 (* 3 (* p b b r s s))))
 (let ((?x496 (* 3 (* q b b r r s))))
 (let ((?x494 (* (- 3) (* p b b r r s))))
 (let ((?x373 (* (- 1) (* q b b r r r))))
 (let ((?x189 (+ ?x363 ?x373 ?x494 ?x496 ?x497 ?x498 ?x479 ?x485 ?x509 ?x645 ?x646 ?x579 ?x583 ?x647 ?x648 ?x620 ?x637)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x314 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x319 (= ?x314 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x250 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x251 (= ?x250 0)))
 (let ((?x141 (* p00 b00)))
 (let ((?x136 (* q00 a00)))
 (let ((?x182 (* (- 1) ?x136)))
 (let (($x185 (= (+ (* a q) ?x182 ?x141 (* (- 1) (* p b))) 0)))
 (let (($x163 (= ?x155 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x158 (= (+ ?x33 ?x139 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x271 (and $x158 $x163 $x185 $x251 $x319 (or (not (= (* ?x189 ?x155) 0)) (not (= (* ?x807 ?x155) 0))))))
 (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x134 (* (- 1) ?x47)))
 (let ((?x597 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x134 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x641 (+ q (* (- 1) p))))
 (let ((?x340 (* (- 1) a)))
 (let ((?x613 (+ b ?x340)))
 (let ((?x667 (+ (* ?x613 ?x613 r r r p) (* ?x641 r a a a) (* ?x613 ?x641 r r r a a p p p))))
 (let ((?x625 (+ (* ?x262 ?x262 ?x262 ?x336 b b) (* ?x262 ?x299 ?x299 ?x299 q) ?x620)))
 (let (($x610 (= (* ?x625 (+ (* (- 1) (* ?x262 b)) ?x134 (* ?x299 s) ?x51)) 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x599 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x560 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x531 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let (($x512 (and (= (+ (* (- 1) (* r q)) (* s p) ?x139 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x134 (* s a) ?x51) 0) $x531 (= ?x560 0) (= ?x599 0) (or (not $x610) (not (= (* ?x667 ?x597) 0))))))
 (rewrite (= $x512 $x271)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x114 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x105 (- q p)))
 (let ((?x98 (- b a)))
 (let ((?x108 (+ (* ?x98 ?x98 p r r r) (* a a a ?x105 r) (* a a ?x98 p p p ?x105 r r r))))
 (let ((?x51 (* b00 r00)))
 (let ((?x103 (+ (- (* (- 1) ?x98 r) (* a00 s00)) (* a (- s r)) ?x51)))
 (let ((?x84 (- r s)))
 (let ((?x90 (- p q)))
 (let ((?x87 (- a b)))
 (let ((?x94 (+ (* b b ?x90 ?x84 ?x84 ?x84) (* ?x87 ?x87 ?x87 q ?x84) (* ?x87 ?x87 b ?x90 ?x90 ?x90 q ?x84 ?x84 ?x84))))
 (let ((?x95 (* (+ (- (* (- 1) b ?x84) (* a00 s00)) (* ?x87 s) ?x51) ?x94)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x95 0)) (not (= (* ?x103 ?x108) 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x557 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x134 (* (- 1) ?x47)))
 (let ((?x597 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x134 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x641 (+ q (* (- 1) p))))
 (let ((?x340 (* (- 1) a)))
 (let ((?x613 (+ b ?x340)))
 (let ((?x667 (+ (* ?x613 ?x613 r r r p) (* ?x641 r a a a) (* ?x613 ?x641 r r r a a p p p))))
 (let ((?x586 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x134 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x336 (+ p (* (- 1) q))))
 (let ((?x299 (+ a (* (- 1) b))))
 (let ((?x260 (* (- 1) s)))
 (let ((?x262 (+ r ?x260)))
 (let ((?x620 (* ?x262 ?x262 ?x262 ?x299 ?x299 ?x336 ?x336 ?x336 b q)))
 (let ((?x625 (+ (* ?x262 ?x262 ?x262 ?x336 b b) (* ?x262 ?x299 ?x299 ?x299 q) ?x620)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x599 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x560 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x531 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let (($x512 (and (= (+ (* (- 1) (* r q)) (* s p) ?x139 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x134 (* s a) ?x51) 0) $x531 (= ?x560 0) (= ?x599 0) (or (not (= (* ?x625 ?x586) 0)) (not (= (* ?x667 ?x597) 0))))))
 (let ((?x105 (- q p)))
 (let ((?x98 (- b a)))
 (let ((?x108 (+ (* ?x98 ?x98 p r r r) (* a a a ?x105 r) (* a a ?x98 p p p ?x105 r r r))))
 (let ((?x109 (* (+ (- (* (- 1) ?x98 r) ?x47) (* a (- s r)) ?x51) ?x108)))
 (let ((?x84 (- r s)))
 (let ((?x90 (- p q)))
 (let ((?x87 (- a b)))
 (let ((?x94 (+ (* b b ?x90 ?x84 ?x84 ?x84) (* ?x87 ?x87 ?x87 q ?x84) (* ?x87 ?x87 b ?x90 ?x90 ?x90 q ?x84 ?x84 ?x84))))
 (let (($x96 (= (* (+ (- (* (- 1) b ?x84) ?x47) (* ?x87 s) ?x51) ?x94) 0)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x113 (and $x44 (= (+ (- (* (- 1) b r) ?x47) (* a s) ?x51) 0) $x61 (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not $x96) (not (= ?x109 0))))))
 (rewrite (= $x113 $x512)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x115 (asserted $x114)))
 (let ((@x618 (mp (mp @x115 (quant-intro (proof-bind ?x557) (= $x114 $x652)) $x652) (rewrite (= $x652 $x652)) $x652)))
 (let ((@x194 (mp~ (mp @x618 (quant-intro (proof-bind ?x170) (= $x652 $x197)) $x197) (sk (~ $x197 $x147)) $x147)))
 (let ((@x715 (mp @x194 (rewrite (= $x147 $x181)) $x181)))
 (let ((@x716 (and-elim @x715 $x602)))
 (let ((@x507 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x602) $x198)) @x716 $x198)))
 (let (($x171 (<= ?x537 0)))
 (let ((@x757 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x602) $x171)) @x716 $x171)))
 (let (($x733 (not (<= ?x304 0))))
 (let (($x208 (>= ?x684 0)))
 (let (($x209 (<= ?x684 0)))
 (let ((@x704 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x401 (not $x209) (not $x208))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x209)) @x757 @x507 false) $x209) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x208)) @x757 @x507 false) $x208) $x401)))
 (let (($x309 (>= ?x304 0)))
 (let ((@x518 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x156 $x733 (not $x309))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x309)) @x757 @x507 false) $x309) (unit-resolution (and-elim @x715 $x289) @x704 $x303) $x733)))
 ((_ th-lemma arith farkas 1 1 1) @x518 @x757 @x507 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             536
 :arith-nonlinear-horner    36
 :arith-num-rows            11
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 77
 :arith-tableau-max-rows    11
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                169.02
 :memory                    19.17
 :mk-bool-var               33
 :mk-clause                 40
 :num-allocs                3595852361405.00
 :num-checks                1
 :propagations              19
 :rlimit-count              48760465
 :time                      32.32
 :total-time                32.33)
