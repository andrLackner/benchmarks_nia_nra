unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x705 (* (- 1) k!2)))
 (let ((?x187 (* n!0 k!2)))
 (let ((?x1158 (+ ?x187 (* 2 n!0) ?x705 (* (- 3) c!3))))
 (let (($x785 (<= ?x1158 (- 1))))
 (let (($x1037 (= ?x1158 (- 1))))
 (let ((?x1254 (+ 1 n!0)))
 (let ((?x350 (* k!2 k!2 k!2)))
 (let ((?x726 (+ (* 4 (* n!0 m!1 k!2 k!2)) (* (- 23) ?x187) (* m!1 m!1 c!3) (* 2 (* n!0 n!0 m!1 k!2 c!3)) ?x350 (* (- 28) (* n!0 n!0 c!3)) (* (- 28) (* n!0 n!0 k!2)) (* n!0 n!0 k!2 k!2 c!3) (* n!0 n!0 k!2 k!2 k!2) (* 4 (* n!0 m!1 k!2 c!3)) (* 2 (* n!0 n!0 m!1 k!2 k!2)) (* k!2 k!2 c!3) (* (- 3) (* k!2 c!3)) (* 2 (* n!0 m!1 m!1 k!2)) (* (- 3) (* m!1 k!2)) (* (- 9) (* n!0 k!2 c!3)) (* (- 9) (* n!0 n!0 k!2 c!3)) (* (- 3) (* n!0 n!0 n!0 k!2 k!2)) (* (- 3) (* n!0 n!0 n!0 m!1 c!3)) (* (- 15) (* n!0 n!0 n!0 k!2)) (* (- 3) (* m!1 c!3)) (* (- 3) (* n!0 n!0 n!0 k!2 c!3)) (* (- 3) (* ?x1254 ?x1254 ?x1254 ?x1254 (+ m!1 k!2) (+ k!2 c!3))) (* (- 3) (* n!0 n!0 n!0 n!0 k!2)) (* 2 (* n!0 m!1 m!1 c!3)) (* (- 9) (* n!0 k!2 k!2)) (* (- 9) (* n!0 m!1 k!2)) (* (- 9) (* n!0 n!0 k!2 k!2)) (* (- 9) (* n!0 n!0 m!1 k!2)) (* (- 3) (* n!0 n!0 n!0 m!1 k!2)) (* (- 15) (* n!0 n!0 n!0 c!3)) (* (- 3) (* n!0 n!0 n!0 n!0 c!3)) (* m!1 m!1 k!2) (* 2 (* m!1 k!2 c!3)) (* (- 7) k!2) (* (- 9) (* n!0 n!0 m!1 c!3)) (* (- 23) (* n!0 c!3)) (* 2 (* m!1 k!2 k!2)) (* (- 7) c!3) (* (- 3) (* k!2 k!2)) (* 2 (* n!0 k!2 k!2 k!2)) (* n!0 n!0 m!1 m!1 c!3) (* (- 9) (* n!0 m!1 c!3)) (* 2 (* n!0 k!2 k!2 c!3)) (* n!0 n!0 m!1 m!1 k!2))))
 (let (($x727 (= ?x726 0)))
 (let (($x730 (not $x727)))
 (let ((?x404 (+ (* 3 (* n!0 n!0)) (* 3 n!0) ?x705)))
 (let (($x344 (= ?x404 (- 1))))
 (let ((?x1199 (* k!2 k!2)))
 (let ((?x1113 (+ (* 9 n!0) (* (- 5) k!2) (* (- 9) (* n!0 c!3)) (* (- 18) c!3) ?x1199)))
 (let (($x1149 (= ?x1113 (- 4))))
 (let ((?x1047 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x1048 (= ?x1047 (- 6))))
 (let (($x410 (and $x1048 $x1149 $x1037 $x344 $x730)))
 (let ((?x1163 (+ (* 7 c!3) (* 7 k!2) (* 3 ?x1199) (* 23 (* k!2 n!0)) (* 23 (* c!3 n!0)) (* 28 (* c!3 n!0 n!0)) (* 28 (* k!2 n!0 n!0)) (* (- 1) (* c!3 k!2 k!2 n!0 n!0)) (* (- 1) (* k!2 k!2 k!2 n!0 n!0)) (* (- 2) (* c!3 k!2 m!1 n!0 n!0)) (* (- 2) (* k!2 k!2 m!1 n!0 n!0)) (* (- 1) (* c!3 m!1 m!1 n!0 n!0)) (* (- 1) (* k!2 m!1 m!1 n!0 n!0)) (* (- 1) (* c!3 k!2 k!2)) (* (- 1) ?x350) (* (- 2) (* c!3 k!2 m!1)) (* (- 2) (* k!2 k!2 m!1)) (* (- 1) (* c!3 m!1 m!1)) (* (- 1) (* k!2 m!1 m!1)) (* (- 2) (* c!3 k!2 k!2 n!0)) (* (- 2) (* k!2 k!2 k!2 n!0)) (* (- 4) (* c!3 k!2 m!1 n!0)) (* (- 4) (* k!2 k!2 m!1 n!0)) (* (- 2) (* c!3 m!1 m!1 n!0)) (* (- 2) (* k!2 m!1 m!1 n!0)) (* 3 (* c!3 k!2)) (* 3 (* c!3 m!1)) (* 3 (* k!2 m!1)) (* 9 (* c!3 k!2 n!0)) (* 9 (* k!2 k!2 n!0)) (* 9 (* c!3 m!1 n!0)) (* 9 (* k!2 m!1 n!0)) (* 9 (* c!3 k!2 n!0 n!0)) (* 9 (* k!2 k!2 n!0 n!0)) (* 9 (* c!3 m!1 n!0 n!0)) (* 9 (* k!2 m!1 n!0 n!0)) (* 3 (* c!3 k!2 n!0 n!0 n!0)) (* 3 (* k!2 k!2 n!0 n!0 n!0)) (* 3 (* c!3 m!1 n!0 n!0 n!0)) (* 3 (* k!2 m!1 n!0 n!0 n!0)) (* 15 (* c!3 n!0 n!0 n!0)) (* 15 (* k!2 n!0 n!0 n!0)) (* 3 (* ?x1254 ?x1254 ?x1254 ?x1254 (+ k!2 m!1) (+ c!3 k!2))) (* 3 (* c!3 n!0 n!0 n!0 n!0)) (* 3 (* k!2 n!0 n!0 n!0 n!0)))))
 (let (($x1218 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x1143 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x1199) (* 9 (* c!3 n!0)))))
 (let (($x436 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x1143 4) $x1218 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x1163 0)))))
 (let (($x462 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1338 (* 3 (* k n n n n))))
 (let ((?x1336 (* 3 (* c n n n n))))
 (let ((?x69 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x1054 (+ 1 n)))
 (let ((?x1060 (* ?x1054 ?x1054 ?x1054 ?x1054 ?x72 ?x69)))
 (let ((?x393 (* 3 ?x1060)))
 (let ((?x1538 (* 15 (* k n n n))))
 (let ((?x1537 (* 15 (* c n n n))))
 (let ((?x1519 (* (- 2) (* k m m n))))
 (let ((?x1518 (* (- 2) (* c m m n))))
 (let ((?x1517 (* (- 4) (* k k m n))))
 (let ((?x1516 (* (- 4) (* c k m n))))
 (let ((?x1514 (* (- 2) (* k k k n))))
 (let ((?x1513 (* (- 2) (* c k k n))))
 (let ((?x1512 (* (- 1) (* k m m))))
 (let ((?x1511 (* (- 1) (* c m m))))
 (let ((?x1510 (* (- 2) (* k k m))))
 (let ((?x1509 (* (- 2) (* c k m))))
 (let ((?x1508 (* (- 1) (* k k k))))
 (let ((?x1507 (* (- 1) (* c k k))))
 (let ((?x1506 (* (- 1) (* k m m n n))))
 (let ((?x1505 (* (- 1) (* c m m n n))))
 (let ((?x1504 (* (- 2) (* k k m n n))))
 (let ((?x1503 (* (- 2) (* c k m n n))))
 (let ((?x1502 (* (- 1) (* k k k n n))))
 (let ((?x1501 (* (- 1) (* c k k n n))))
 (let ((?x1500 (* 28 (* k n n))))
 (let ((?x1499 (* 28 (* c n n))))
 (let ((?x833 (+ (* 7 c) (* 7 k) (* 3 (* k k)) (* 23 (* k n)) (* 23 (* c n)) ?x1499 ?x1500 ?x1501 ?x1502 ?x1503 ?x1504 ?x1505 ?x1506 ?x1507 ?x1508 ?x1509 ?x1510 ?x1511 ?x1512 ?x1513 ?x1514 ?x1516 ?x1517 ?x1518 ?x1519 (* 3 (* c k)) (* 3 (* c m)) (* 3 (* k m)) (* 9 (* c k n)) (* 9 (* k k n)) (* 9 (* c m n)) (* 9 (* k m n)) (* 9 (* c k n n)) (* 9 (* k k n n)) (* 9 (* c m n n)) (* 9 (* k m n n)) (* 3 (* c k n n n)) (* 3 (* k k n n n)) (* 3 (* c m n n n)) (* 3 (* k m n n n)) ?x1537 ?x1538 ?x393 ?x1336 ?x1338)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x258 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x206 (= (+ ?x40 ?x44 ?x208 ?x209 (* 9 (* c n))) 4)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 $x206 $x258 $x296 (not (= ?x833 0)))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1196 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x1054 (+ 1 n)))
 (let ((?x186 (* ?x1054 ?x1054 ?x1054 ?x1054 ?x69)))
 (let ((?x72 (+ k m)))
 (let ((?x1060 (* ?x1054 ?x1054 ?x1054 ?x1054 ?x72 ?x69)))
 (let ((?x393 (* 3 ?x1060)))
 (let ((?x1127 (* ?x1054 ?x1054 ?x69)))
 (let ((?x1214 (+ ?x1127 (* (- 1) (* ?x1054 ?x1054 ?x72 ?x72 ?x69)) ?x393 (* 3 (* ?x1054 ?x1054 ?x1054 ?x69)) (* 3 (* ?x1054 ?x1054 ?x1054 ?x72 ?x69)) (* 3 ?x186))))
 (let (($x1172 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x383 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x383 $x1172 (not (= ?x1214 0))))))))))))))))))) :qid k!34))
 ))
 (let ((?x375 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1338 (* 3 (* k n n n n))))
 (let ((?x1336 (* 3 (* c n n n n))))
 (let ((?x69 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x1054 (+ 1 n)))
 (let ((?x1060 (* ?x1054 ?x1054 ?x1054 ?x1054 ?x72 ?x69)))
 (let ((?x393 (* 3 ?x1060)))
 (let ((?x1538 (* 15 (* k n n n))))
 (let ((?x1537 (* 15 (* c n n n))))
 (let ((?x1519 (* (- 2) (* k m m n))))
 (let ((?x1518 (* (- 2) (* c m m n))))
 (let ((?x1517 (* (- 4) (* k k m n))))
 (let ((?x1516 (* (- 4) (* c k m n))))
 (let ((?x1514 (* (- 2) (* k k k n))))
 (let ((?x1513 (* (- 2) (* c k k n))))
 (let ((?x1512 (* (- 1) (* k m m))))
 (let ((?x1511 (* (- 1) (* c m m))))
 (let ((?x1510 (* (- 2) (* k k m))))
 (let ((?x1509 (* (- 2) (* c k m))))
 (let ((?x1508 (* (- 1) (* k k k))))
 (let ((?x1507 (* (- 1) (* c k k))))
 (let ((?x1506 (* (- 1) (* k m m n n))))
 (let ((?x1505 (* (- 1) (* c m m n n))))
 (let ((?x1504 (* (- 2) (* k k m n n))))
 (let ((?x1503 (* (- 2) (* c k m n n))))
 (let ((?x1502 (* (- 1) (* k k k n n))))
 (let ((?x1501 (* (- 1) (* c k k n n))))
 (let ((?x1500 (* 28 (* k n n))))
 (let ((?x1499 (* 28 (* c n n))))
 (let ((?x833 (+ (* 7 c) (* 7 k) (* 3 (* k k)) (* 23 (* k n)) (* 23 (* c n)) ?x1499 ?x1500 ?x1501 ?x1502 ?x1503 ?x1504 ?x1505 ?x1506 ?x1507 ?x1508 ?x1509 ?x1510 ?x1511 ?x1512 ?x1513 ?x1514 ?x1516 ?x1517 ?x1518 ?x1519 (* 3 (* c k)) (* 3 (* c m)) (* 3 (* k m)) (* 9 (* c k n)) (* 9 (* k k n)) (* 9 (* c m n)) (* 9 (* k m n)) (* 9 (* c k n n)) (* 9 (* k k n n)) (* 9 (* c m n n)) (* 9 (* k m n n)) (* 3 (* c k n n n)) (* 3 (* k k n n n)) (* 3 (* c m n n n)) (* 3 (* k m n n n)) ?x1537 ?x1538 ?x393 ?x1336 ?x1338)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x258 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x206 (= (+ ?x40 ?x44 ?x208 ?x209 (* 9 (* c n))) 4)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x842 (and $x122 $x206 $x258 $x296 (not (= ?x833 0)))))
 (let ((?x1127 (* ?x1054 ?x1054 ?x69)))
 (let ((?x1214 (+ ?x1127 (* (- 1) (* ?x1054 ?x1054 ?x72 ?x72 ?x69)) ?x393 (* 3 (* ?x1054 ?x1054 ?x1054 ?x69)) (* 3 (* ?x1054 ?x1054 ?x1054 ?x72 ?x69)) (* 3 (* ?x1054 ?x1054 ?x1054 ?x1054 ?x69)))))
 (let (($x1172 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x383 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1166 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x383 $x1172 (not (= ?x1214 0)))))
 (rewrite (= $x1166 $x842))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1130 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x1054 (+ 1 n)))
 (let ((?x186 (* ?x1054 ?x1054 ?x1054 ?x1054 ?x69)))
 (let ((?x72 (+ k m)))
 (let ((?x1059 (* ?x1054 ?x1054 ?x72 ?x72 ?x69)))
 (let ((?x323 (+ (* (- 1) (* ?x1054 ?x1054 ?x69)) ?x1059 (* (- 3) (* ?x1054 ?x1054 ?x1054 ?x1054 ?x72 ?x69)) (* (- 3) (* ?x1054 ?x1054 ?x1054 ?x69)) (* (- 3) (* ?x1054 ?x1054 ?x1054 ?x72 ?x69)) (* (- 3) ?x186))))
 (let (($x1172 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1160 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x466 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 (= ?x466 (- 4)) $x1160 $x1172 (not (= ?x323 0))))))))))))))) :qid k!34))
 ))
 (let ((?x1075 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x1054 (+ 1 n)))
 (let ((?x186 (* ?x1054 ?x1054 ?x1054 ?x1054 ?x69)))
 (let ((?x72 (+ k m)))
 (let ((?x1060 (* ?x1054 ?x1054 ?x1054 ?x1054 ?x72 ?x69)))
 (let ((?x393 (* 3 ?x1060)))
 (let ((?x1127 (* ?x1054 ?x1054 ?x69)))
 (let ((?x1214 (+ ?x1127 (* (- 1) (* ?x1054 ?x1054 ?x72 ?x72 ?x69)) ?x393 (* 3 (* ?x1054 ?x1054 ?x1054 ?x69)) (* 3 (* ?x1054 ?x1054 ?x1054 ?x72 ?x69)) (* 3 ?x186))))
 (let (($x1172 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x383 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x1166 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x383 $x1172 (not (= ?x1214 0)))))
 (let ((?x1059 (* ?x1054 ?x1054 ?x72 ?x72 ?x69)))
 (let ((?x323 (+ (* (- 1) ?x1127) ?x1059 (* (- 3) ?x1060) (* (- 3) (* ?x1054 ?x1054 ?x1054 ?x69)) (* (- 3) (* ?x1054 ?x1054 ?x1054 ?x72 ?x69)) (* (- 3) ?x186))))
 (let (($x1160 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x466 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1053 (and $x122 (= ?x466 (- 4)) $x1160 $x1172 (not (= ?x323 0)))))
 (rewrite (= $x1053 $x1166))))))))))))))))))))))))))
 ))
 (let (($x89 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x69 (+ c k)))
 (let ((?x74 (+ (* (- 1) ?x69 ?x70 ?x70) (* ?x69 (+ k m) (+ k m) ?x70 ?x70))))
 (let ((?x79 (- (- ?x74 (* 3 ?x69 (+ k m) ?x70 ?x70 ?x70 ?x70)) (* 3 ?x69 ?x70 ?x70 ?x70))))
 (let ((?x82 (+ (- ?x79 (* 3 ?x69 (+ k m) ?x70 ?x70 ?x70)) (* 0 ?x69 (+ k m) ?x70 ?x70))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x82 (* 3 ?x69 ?x70 ?x70 ?x70 ?x70)) 0)))))))))))))))) :qid k!34))
 ))
 (let ((?x1179 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x1054 (+ 1 n)))
 (let ((?x186 (* ?x1054 ?x1054 ?x1054 ?x1054 ?x69)))
 (let ((?x72 (+ k m)))
 (let ((?x1059 (* ?x1054 ?x1054 ?x72 ?x72 ?x69)))
 (let ((?x323 (+ (* (- 1) (* ?x1054 ?x1054 ?x69)) ?x1059 (* (- 3) (* ?x1054 ?x1054 ?x1054 ?x1054 ?x72 ?x69)) (* (- 3) (* ?x1054 ?x1054 ?x1054 ?x69)) (* (- 3) (* ?x1054 ?x1054 ?x1054 ?x72 ?x69)) (* (- 3) ?x186))))
 (let (($x1172 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1160 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x466 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x1053 (and $x122 (= ?x466 (- 4)) $x1160 $x1172 (not (= ?x323 0)))))
 (let ((?x70 (+ n 1)))
 (let ((?x78 (- (+ (* (- 1) ?x69 ?x70 ?x70) (* ?x69 ?x72 ?x72 ?x70 ?x70)) (* 3 ?x69 ?x72 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x80 (- (- ?x78 (* 3 ?x69 ?x70 ?x70 ?x70)) (* 3 ?x69 ?x72 ?x70 ?x70 ?x70))))
 (let ((?x84 (- (+ ?x80 (* 0 ?x69 ?x72 ?x70 ?x70)) (* 3 ?x69 ?x70 ?x70 ?x70 ?x70))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x88 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x84 0))))))
 (rewrite (= $x88 $x1053))))))))))))))))))))))))))
 ))
 (let ((@x90 (asserted $x89)))
 (let ((@x385 (mp (mp @x90 (quant-intro (proof-bind ?x1179) (= $x89 $x1130)) $x1130) (rewrite (= $x1130 $x1130)) $x1130)))
 (let ((@x451 (mp (mp @x385 (quant-intro (proof-bind ?x1075) (= $x1130 $x1196)) $x1196) (quant-intro (proof-bind ?x375) (= $x1196 $x462)) $x462)))
 (let ((@x1230 (mp (mp~ @x451 (sk (~ $x462 $x436)) $x436) (rewrite (= $x436 $x410)) $x410)))
 (let ((@x1039 (and-elim @x1230 $x1037)))
 (let ((@x777 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1037) $x785)) @x1039 $x785)))
 (let (($x139 (>= ?x1158 (- 1))))
 (let ((@x548 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1037) $x139)) @x1039 $x139)))
 (let (($x1175 (<= ?x1113 (- 4))))
 (let ((@x709 (and-elim @x1230 $x1149)))
 (let ((@x459 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1149) $x1175)) @x709 $x1175)))
 (let (($x1150 (>= ?x1113 (- 4))))
 (let ((@x457 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1149) $x1150)) @x709 $x1150)))
 (let (($x138 (<= ?x404 (- 1))))
 (let ((@x1020 (and-elim @x1230 $x344)))
 (let ((@x406 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x344) $x138)) @x1020 $x138)))
 (let (($x165 (>= ?x404 (- 1))))
 (let ((@x1040 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x344) $x165)) @x1020 $x165)))
 (let (($x1114 (<= ?x1047 (- 6))))
 (let ((@x508 (and-elim @x1230 $x1048)))
 (let ((@x1115 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1048) $x1114)) @x508 $x1114)))
 (let (($x1091 (>= ?x1047 (- 6))))
 (let ((@x176 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1048) $x1091)) @x508 $x1091)))
 (let (($x395 (not (<= ?x726 0))))
 (let (($x476 (>= ?x726 0)))
 (let ((@x356 ((_ th-lemma arith) (hypothesis (not $x476)) @x176 @x1115 @x1040 @x406 @x1040 @x406 @x457 @x459 @x1040 @x406 @x548 @x777 @x457 @x459 @x1040 @x406 @x457 @x459 @x457 @x459 @x1040 @x406 @x1040 @x406 @x176 @x1115 @x1040 @x406 @x457 @x459 @x548 @x777 false)))
 (let ((@x802 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x727 $x395 (not $x476))) (and-elim @x1230 $x730) (or $x395 (not $x476)))))
 ((_ th-lemma arith) (unit-resolution @x802 (lemma @x356 $x476) $x395) @x176 @x1115 @x1040 @x406 @x457 @x459 @x1040 @x406 @x1040 @x406 @x457 @x459 @x1040 @x406 @x548 @x777 @x457 @x459 @x1040 @x406 @x176 @x1115 @x1040 @x406 @x457 @x459 @x548 @x777 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        14
 :arith-assert-upper        7
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           7
 :arith-gomory-cuts         1
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             401
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    17
 :arith-num-rows            9
 :arith-patches             2
 :arith-pivots              10
 :arith-row-summations      22
 :arith-tableau-max-columns 76
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 2
 :del-clause                16
 :final-checks              6
 :max-memory                3.75
 :memory                    3.26
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1394422
 :num-checks                1
 :propagations              10
 :rlimit-count              11969
 :time                      0.01
 :total-time                0.02)
