unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x2286 (* z!1 z!1)))
 (let ((?x353 (* z00 z00)))
 (let ((?x1832 (* (- 1) ?x353)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x5496 (+ ?x49 ?x43 ?x1832 ?x2286 (* (- 12) y!2) (* (- 6) z!1))))
 (let (($x3584 (<= ?x5496 0)))
 (let (($x5501 (= ?x5496 0)))
 (let ((?x3378 (+ x!3 y!2)))
 (let ((?x6031 (+ 6 z!1)))
 (let ((?x3371 (+ 1 n!0)))
 (let ((?x6160 (* (- 6) (* z00 ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x6031 ?x3378))))
 (let ((?x5051 (* 6 (* ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x6031 (+ y!2 z!1) ?x3378 ?x3378 ?x3378))))
 (let ((?x5973 (+ y!2 z!1)))
 (let ((?x6036 (* (- 12) (* y00 ?x3371 ?x3371 ?x6031 ?x6031 ?x6031 ?x5973 ?x5973 ?x3378 ?x3378))))
 (let ((?x2817 (* (- 6) (* ?x3371 ?x3371 ?x6031 ?x6031 ?x6031 ?x5973 ?x5973 ?x5973 ?x3378 ?x3378))))
 (let ((?x6025 (* z00 z00 z00 ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x3378 ?x3378 ?x3378)))
 (let ((?x6014 (* (- 72) (* y00 ?x3371 ?x3371 ?x6031 ?x6031 ?x5973 ?x5973 ?x3378 ?x3378))))
 (let ((?x6010 (* (- 18) (* y00 z00 ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x3378 ?x3378 ?x3378))))
 (let ((?x2592 (* 72 (* ?x3371 ?x3371 ?x6031 ?x6031 ?x5973 ?x5973 ?x5973 ?x3378 ?x3378))))
 (let ((?x6027 (* 72 (* ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x5973 ?x3378))))
 (let ((?x5946 (* (- 6) (* ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x6031 ?x5973 ?x3378))))
 (let ((?x5508 (* 6 (* z00 ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x6031 ?x3378 ?x3378 ?x3378))))
 (let ((?x5366 (* (- 72) (* z!1 z!1 z!1 z!1))))
 (let ((?x5358 (* (- 324) (* y!2 z!1 z!1 z!1))))
 (let ((?x5101 (* (- 6) (* z00 ?x3371 ?x3371 ?x6031 ?x6031 ?x6031 ?x5973 ?x5973 ?x3378 ?x3378))))
 (let ((?x5337 (* 72 (* y00 ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x3378 ?x3378 ?x3378))))
 (let ((?x5354 (* (- 432) (* y!2 y!2 z!1 z!1))))
 (let ((?x5261 (* (- 108) (* x!3 y!2 y!2 z!1))))
 (let ((?x5255 (* (- 216) (* x!3 y!2 z!1 z!1))))
 (let ((?x5050 (* (- 108) (* x!3 z!1 z!1 z!1))))
 (let ((?x5195 (* (- 648) (* x!3 y!2 y!2))))
 (let ((?x5193 (* (- 1296) (* x!3 y!2 z!1))))
 (let ((?x5368 (* (- 432) (* z!1 z!1 z!1))))
 (let ((?x6281 (* (- 108) (* ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x3378 ?x3378 ?x3378 ?x3378))))
 (let ((?x5191 (* (- 648) (* x!3 z!1 z!1))))
 (let ((?x4386 (* 6 (* z00 z00 ?x3371 ?x3371 ?x6031 ?x6031 ?x5973 ?x5973 ?x3378 ?x3378))))
 (let ((?x6371 (* (- 108) (* x00 ?x3371 ?x3371 ?x6031 ?x6031 ?x5973 ?x5973 ?x3378 ?x3378))))
 (let ((?x3613 (* y!2 y!2 y!2)))
 (let ((?x3386 (* (- 1080) ?x3613)))
 (let ((?x3379 (* z00 z00 ?x3371 ?x3371 ?x6031 ?x6031 ?x6031 ?x5973 ?x5973 ?x3378 ?x3378)))
 (let ((?x993 (* 6 (* ?x3371 ?x6031 ?x6031 ?x5973 ?x5973 ?x5973))))
 (let ((?x2809 (* y!2 y!2 z!1)))
 (let ((?x5983 (* (- 2592) ?x2809)))
 (let ((?x2211 (* 18 (* y00 z00 ?x3371 ?x3371 ?x6031 ?x6031 ?x5973 ?x5973 ?x3378 ?x3378))))
 (let ((?x2374 (* (- 12) (* y00 ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x6031 ?x3378))))
 (let ((?x2370 (* 12 (* y00 ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x6031 ?x3378 ?x3378 ?x3378))))
 (let ((?x2336 (* (- 6) (* z00 z00 ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x3378 ?x3378 ?x3378))))
 (let ((?x2331 (* (- 1944) (* y!2 z!1 z!1))))
 (let ((?x2320 (* (- 180) (* y!2 y!2 y!2 z!1))))
 (let ((?x1285 (* (- 72) (* ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x5973 ?x3378 ?x3378 ?x3378))))
 (let ((?x2303 (* (- 1) (* z00 z00 z00 ?x3371 ?x3371 ?x6031 ?x6031 ?x5973 ?x5973 ?x3378 ?x3378))))
 (let ((?x4559 (* 108 (* x00 ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x3378 ?x3378 ?x3378))))
 (let ((?x2189 (* 108 (* ?x3371 ?x3371 ?x6031 ?x6031 ?x5973 ?x5973 ?x3378 ?x3378 ?x3378))))
 (let ((?x1300 (* z00 z00 ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x6031 ?x3378)))
 (let ((?x1294 (* (- 1) (* z00 z00 ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x6031 ?x3378 ?x3378 ?x3378))))
 (let ((?x526 (* 108 (* ?x3371 ?x3371 ?x3371 ?x6031 ?x6031 ?x3378 ?x3378))))
 (let ((?x4234 (+ (* 108 (* x00 n!0 z!1 z!1 z!1)) ?x526 ?x1294 (* (- 2592) (* y00 y!2)) (* 216 (* z00 z00 x!3 n!0 z!1)) (* (- 216) (* x!3 n!0 y!2 z!1 z!1)) (* 1944 (* z00 y00 n!0 y!2)) (* 648 (* x00 n!0 z!1 z!1)) (* 648 (* x00 n!0 y!2 y!2)) (* 648 (* x00 y!2 y!2)) (* (- 18) (* z00 y00 y!2 y!2 z!1)) (* 6 (* z00 n!0 y!2 y!2 z!1 z!1)) (* 216 (* z00 z00 y!2)) (* (- 2) (* z00 z00 n!0 y!2 z!1 z!1 z!1)) (* (- 2) (* z00 z00 y!2 z!1 z!1 z!1)) (* 648 (* x00 z!1 z!1)) (* 108 (* x00 n!0 y!2 y!2 z!1)) (* 108 (* x00 y!2 y!2 z!1)) (* (- 108) (* x!3 n!0 z!1 z!1 z!1)) (* 216 (* z00 n!0 y!2 y!2)) (* (- 7776) (* y00 n!0 n!0 y!2)) (* 24 (* y00 y!2 z!1 z!1 z!1)) (* (- 2592) (* x00 n!0 y!2 z!1)) (* (- 3888) (* x00 n!0 n!0 y!2 z!1)) (* (- 1296) (* x00 n!0 n!0 n!0 y!2 z!1)) (* (- 18) (* z00 y00 n!0 y!2 y!2 z!1)) (* 216 (* z00 n!0 z!1 z!1)) (* 216 (* y00 n!0 z!1 z!1 z!1)) (* 12 (* z00 n!0 y!2 z!1 z!1 z!1)) (* 6 (* z00 n!0 z!1 z!1 z!1 z!1)) (* 144 (* z00 n!0 y!2 z!1 z!1)) (* (- 324) (* x00 x!3 n!0 z!1 z!1)) (* (- 324) (* x00 x!3 n!0 n!0 z!1 z!1)) ?x1300 (* 6 (* z00 z00 z00 z!1 z!1)) (* 648 (* z00 y00 n!0 n!0 y!2 z!1)) (* (- 108) (* z00 y00 n!0 y!2 y!2)) (* (- 36) (* z00 z00 z00 n!0 n!0 y!2 z!1)) ?x2189 (* (- 1) (* z00 z00 z00 n!0 n!0 n!0 y!2 z!1 z!1)) (* (- 11664) (* x00 n!0 n!0 y!2)) (* 648 (* z00 y00 n!0 n!0 n!0 y!2)) ?x4559 (* 72 (* z00 z00 n!0 n!0 n!0 y!2 z!1)) (* (- 3888) (* x00 x!3 n!0 n!0 n!0)) (* (- 12) (* z00 z00 z00 n!0 n!0 n!0 y!2 z!1)) (* (- 3) (* z00 z00 z00 x!3 n!0 z!1 z!1)) (* (- 24) (* z00 z00 z00 n!0 y!2 z!1)) (* (- 2592) (* y00 x!3 n!0 z!1)) (* 1944 (* z00 y00 n!0 n!0 y!2)) (* 432 (* z00 n!0 y!2 z!1)) (* (- 12) (* z00 z00 z00 x!3 z!1)) (* (- 36) (* z00 z00 z00 x!3 n!0 z!1)) (* (- 1296) (* x00 x!3 z!1)) (* (- 3888) (* x00 n!0 n!0 n!0 y!2)) (* 216 (* y00 n!0 y!2 z!1 z!1)) (* (- 72) (* y00 x!3 n!0 n!0 n!0 z!1 z!1)) (* 18 (* z00 y00 x!3 n!0 n!0 n!0 z!1 z!1)) (* 216 (* z00 z00 x!3 n!0 n!0 n!0)) (* 72 (* z00 z00 x!3 n!0 n!0 n!0 z!1)) ?x2303 ?x1285 ?x2320 ?x2331 ?x2336 ?x2370 ?x2374 ?x2211 (* (- 180) (* n!0 y!2 y!2 y!2 z!1)) (* (- 432) (* n!0 y!2 y!2 z!1 z!1)) (* 12 (* y00 n!0 y!2 y!2 z!1 z!1)) (* 216 (* y00 n!0 y!2 y!2 z!1)) (* 864 (* y00 n!0 y!2 y!2)) (* (- 1944) (* n!0 y!2 z!1 z!1)) (* (- 1080) (* n!0 y!2 y!2 y!2)) (* (- 2592) (* n!0 y!2 y!2 z!1)) (* 216 (* z00 y00 n!0 n!0 n!0 y!2 z!1)) (* 144 (* z00 y!2 z!1 z!1)) (* (- 7776) (* y00 x!3 n!0)) (* (- 11664) (* x00 x!3 n!0)) (* (- 11664) (* x00 x!3 n!0 n!0)) (* (- 7776) (* y00 x!3 n!0 n!0)) (* (- 432) (* n!0 z!1 z!1 z!1)) (* (- 324) (* n!0 y!2 z!1 z!1 z!1)) (* 216 (* y00 y!2 y!2 z!1)) (* 72 (* z00 z00 x!3 z!1)) (* 72 (* z00 n!0 y!2 y!2 z!1)) (* 18 (* z00 y00 n!0 n!0 n!0 y!2 z!1 z!1)) (* 12 (* y00 y!2 y!2 z!1 z!1)) (* (- 72) (* y00 n!0 n!0 n!0 y!2 z!1 z!1)) (* 18 (* z00 y00 n!0 y!2 z!1 z!1)) (* 648 (* z00 y00 x!3 n!0 z!1)) (* (- 216) (* y00 n!0 n!0 y!2 z!1 z!1)) (* (- 2592) (* y00 n!0 n!0 y!2 z!1)) (* (- 864) (* y00 n!0 y!2 z!1)) (* (- 216) (* y00 x!3 n!0 z!1 z!1)) (* (- 72) (* y00 x!3 z!1 z!1)) (* (- 108) (* z00 y00 y!2 y!2)) ?x5983 (* 864 (* y00 n!0 z!1 z!1)) (* 108 (* x00 z!1 z!1 z!1)) (* (- 3888) (* x00 x!3 n!0 z!1)) ?x993 (* 864 (* y00 y!2 z!1)) (* 6 (* z00 z00 n!0 n!0 n!0 y!2 z!1 z!1)) (* 216 (* z00 y00 x!3 n!0 n!0 n!0 z!1)) (* 72 (* z00 y!2 y!2 z!1)) (* 72 (* z00 z!1 z!1 z!1)) (* (- 18) (* z00 z00 y!2 y!2 z!1)) (* (- 72) (* z00 z00 z!1 z!1)) (* 432 (* z00 y!2 z!1)) (* z00 z00 z00 y!2 y!2 z!1) (* (- 72) (* z00 z00 y!2 y!2)) (* (- 36) (* z00 z00 z00 x!3)) ?x3379 (* 648 (* z00 z00 x!3 n!0 n!0)) (* 216 (* z00 z00 x!3 n!0 n!0 z!1)) (* 18 (* z00 z00 x!3 n!0 n!0 z!1 z!1)) (* 216 (* z00 z00 x!3)) (* 648 (* z00 y00 y!2)) (* 216 (* z00 y!2 y!2)) (* (- 3888) (* x00 y!2)) (* (- 2592) (* y00 x!3)) (* 648 (* z00 z00 n!0 y!2)) (* (- 36) (* z00 z00 z00 y!2)) ?x3386 (* (- 648) (* x!3 n!0 y!2 y!2)) (* (- 1) (* z00 z00 z!1 z!1 z!1 z!1)) (* 216 (* z00 y00 x!3 z!1)) (* 360 (* y00 y!2 z!1 z!1)) (* 216 (* y00 z!1 z!1 z!1)) (* (- 864) (* y00 x!3 z!1)) (* 18 (* z00 y00 x!3 z!1 z!1)) (* (- 72) (* z00 z00 y!2 z!1)) (* (- 72) (* z00 z00 n!0 y!2 y!2)) (* (- 3) (* z00 z00 z00 x!3 n!0 n!0 z!1 z!1)) (* (- 108) (* z00 z00 z00 n!0 y!2)) (* 12 (* y00 n!0 z!1 z!1 z!1 z!1)) (* (- 30) (* z00 z00 y!2 z!1 z!1)) (* (- 864) (* y00 n!0 n!0 n!0 y!2 z!1)) (* (- 72) (* z00 z00 n!0 z!1 z!1)) (* (- 3888) (* x00 x!3 n!0 n!0 z!1)) (* (- 12) (* z00 z00 z00 x!3 n!0 n!0 n!0 z!1)) (* (- 18) (* z00 y00 n!0 z!1 z!1 z!1)) (* (- 1) (* z00 z00 n!0 y!2 y!2 z!1 z!1)) (* (- 18) (* z00 z00 z!1 z!1 z!1)) (* (- 1) (* z00 z00 n!0 z!1 z!1 z!1 z!1)) (* (- 216) (* y00 x!3 n!0 n!0 z!1 z!1)) (* z00 z00 z00 z!1 z!1 z!1) (* (- 36) (* z00 z00 z00 n!0 n!0 n!0 y!2)) (* (- 1) (* z00 z00 y!2 y!2 z!1 z!1)) (* (- 18) (* z00 y00 y!2 z!1 z!1)) (* 54 (* z00 y00 n!0 n!0 y!2 z!1 z!1)) (* (- 7776) (* y00 n!0 y!2)) (* (- 2592) (* y00 n!0 n!0 n!0 y!2)) (* (- 36) (* z00 z00 z00 x!3 n!0 n!0 z!1)) (* (- 36) (* z00 z00 z00 x!3 n!0 n!0 n!0)) (* 6 (* z00 z00 x!3 z!1 z!1)) (* z00 z00 z00 y!2 z!1 z!1) (* (- 1) (* z00 z00 z00 x!3 n!0 n!0 n!0 z!1 z!1)) (* (- 18) (* z00 z00 n!0 y!2 z!1 z!1)) (* (- 1) (* z00 z00 z00 x!3 z!1 z!1)) (* (- 108) (* z00 z00 z00 x!3 n!0 n!0)) (* 216 (* z00 z00 n!0 n!0 y!2 z!1)) (* 6 (* z00 z00 z00 n!0 y!2 y!2)) (* 72 (* z00 z00 n!0 y!2 z!1)) (* (- 108) (* z00 z00 z00 n!0 n!0 y!2)) (* (- 864) (* y00 x!3 n!0 n!0 n!0 z!1)) (* (- 2592) (* y00 x!3 n!0 n!0 z!1)) (* (- 18) (* z00 z00 n!0 y!2 y!2 z!1)) (* (- 18) (* z00 y00 z!1 z!1 z!1)) (* (- 108) (* z00 z00 z00 x!3 n!0)) ?x6371 (* (- 3) (* z00 z00 z00 n!0 n!0 y!2 z!1 z!1)) (* (- 1) (* z00 z00 z00 n!0 y!2 z!1 z!1)) (* 648 (* z00 y00 x!3 n!0 n!0 n!0)) (* (- 18) (* z00 z00 n!0 z!1 z!1 z!1)) ?x4386 (* (- 2592) (* y00 x!3 n!0 n!0 n!0)) (* 1944 (* z00 y00 x!3 n!0)) (* 12 (* y00 z!1 z!1 z!1 z!1)) (* 6 (* z00 z00 z00 y!2 y!2)) (* 6 (* z00 z!1 z!1 z!1 z!1)) (* (- 108) (* x!3 n!0 y!2 y!2 z!1)) (* (- 1296) (* x!3 n!0 y!2 z!1)) (* 18 (* z00 z00 n!0 n!0 y!2 z!1 z!1)) (* (- 108) (* x00 n!0 n!0 n!0 y!2 z!1 z!1)) (* 6 (* z00 z00 x!3 n!0 n!0 n!0 z!1 z!1)) (* (- 324) (* x00 n!0 n!0 y!2 z!1 z!1)) (* (- 648) (* x!3 n!0 z!1 z!1)) (* (- 108) (* x00 x!3 n!0 n!0 n!0 z!1 z!1)) (* 6 (* z00 y!2 y!2 z!1 z!1)) (* 108 (* x00 y!2 z!1 z!1)) (* (- 108) (* z00 y00 z!1 z!1)) (* 216 (* z00 z00 n!0 n!0 n!0 y!2)) (* 24 (* y00 n!0 y!2 z!1 z!1 z!1)) ?x5191 (* 648 (* z00 z00 n!0 n!0 y!2)) (* (- 108) (* x00 n!0 y!2 z!1 z!1)) (* 72 (* z00 n!0 z!1 z!1 z!1)) (* (- 108) (* x00 x!3 z!1 z!1)) (* 18 (* z00 z00 x!3 n!0 z!1 z!1)) (* 12 (* z00 y!2 z!1 z!1 z!1)) (* 432 (* z00 y00 n!0 y!2 z!1)) (* (- 1296) (* x00 x!3 n!0 n!0 n!0 z!1)) (* (- 108) (* z00 y00 n!0 z!1 z!1)) (* 1944 (* z00 y00 x!3 n!0 n!0)) (* 648 (* z00 y00 x!3 n!0 n!0 z!1)) (* 864 (* y00 z!1 z!1)) (* (- 11664) (* x00 n!0 y!2)) (* 54 (* z00 y00 x!3 n!0 n!0 z!1 z!1)) (* 54 (* z00 y00 x!3 n!0 z!1 z!1)) ?x6281 ?x5368 (* (- 72) (* n!0 z!1 z!1 z!1 z!1)) (* 648 (* z00 z00 x!3 n!0)) (* 648 (* z00 y00 x!3)) (* (- 3888) (* x00 x!3)) (* z00 z00 z00 n!0 z!1 z!1 z!1) (* z00 z00 z00 n!0 y!2 y!2 z!1) (* 6 (* z00 z00 z00 n!0 z!1 z!1)) ?x5193 ?x5195 ?x5050 (* 864 (* y00 y!2 y!2)) ?x5255 ?x5261 ?x5354 ?x5337 ?x5101 ?x5358 ?x5366 ?x5508 ?x5946 ?x6027 ?x2592 ?x6010 ?x6014 ?x6025 ?x2817 ?x6036 (* 216 (* z00 z!1 z!1)) ?x5051 ?x6160)))
 (let (($x4273 (= ?x4234 0)))
 (let (($x3361 (not $x4273)))
 (let ((?x5969 (* x!3 y!2)))
 (let ((?x6034 (* 108 ?x5969)))
 (let ((?x5326 (* y!2 y!2)))
 (let ((?x4691 (* 24 ?x5326)))
 (let ((?x5975 (* (- 4) ?x3613)))
 (let ((?x3362 (* z00 z00 y!2 y!2)))
 (let ((?x3391 (* 108 (* x!3 x!3))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x1176 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1172 (* z00 z00 z00 y00)))
 (let ((?x1082 (* (- 36) (* z00 y00 x00))))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x881 (* z00 z00 x00)))
 (let ((?x1132 (* (- 18) ?x881)))
 (let ((?x753 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x695 (* z00 z00 y00)))
 (let ((?x1233 (* (- 10) ?x695)))
 (let ((?x670 (* z00 y00 y00)))
 (let ((?x705 (* (- 12) ?x670)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x531 (* z00 x00)))
 (let ((?x449 (* 36 ?x531)))
 (let ((?x494 (* z00 y00)))
 (let ((?x859 (* 24 ?x494)))
 (let ((?x441 (* y00 x00)))
 (let ((?x432 (* 216 ?x441)))
 (let ((?x556 (+ ?x432 ?x859 ?x449 (* (- 120) (* y00 y!2)) ?x1032 ?x705 ?x1233 ?x753 ?x1132 (* 10 (* z00 z00 y!2)) ?x967 ?x1082 ?x1172 ?x1176 ?x1279 ?x3391 (* (- 36) (* z00 x!3)) ?x3362 (* (- 2) (* z00 z00 z00 x!3)) (* 18 (* z00 z00 x!3)) (* 18 (* z00 y00 y!2)) (* (- 6) (* z00 y!2 y!2)) (* (- 108) (* x00 y!2)) (* (- 216) (* y00 x!3)) (* (- 1) (* z00 z00 z00 y!2)) (* (- 24) (* z00 y!2)) ?x5975 (* 36 (* z00 y00 x!3)) (* (- 216) (* x00 x!3)) (* (- 12) (* y00 y!2 y!2)) ?x4691 ?x6034)))
 (let (($x560 (= ?x556 0)))
 (let ((?x611 (* (- 72) y!2)))
 (let ((?x4936 (* x!3 z!1)))
 (let ((?x3491 (* 18 ?x4936)))
 (let ((?x3744 (* y!2 z!1)))
 (let ((?x3170 (* 12 ?x3744)))
 (let ((?x3316 (* (- 108) x!3)))
 (let ((?x3511 (* z00 y00 y!2)))
 (let ((?x3005 (* y00 z!1)))
 (let ((?x445 (* (- 12) ?x3005)))
 (let ((?x4355 (* 36 ?x561)))
 (let ((?x610 (* 6 ?x494)))
 (let ((?x3480 (* (- 18) (* x00 z!1))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x3353 (+ ?x67 ?x74 (* 18 ?x441) ?x3480 ?x610 (* (- 36) (* y00 y!2)) ?x4355 ?x670 (* (- 3) ?x695) (* (- 3) ?x881) (* 3 (* z00 z00 y!2)) (* (- 1) ?x2809) ?x445 (* (- 1) (* y00 y!2 z!1)) (* 2 (* y00 y00 z!1)) (* 3 (* z00 z00 x!3)) (* (- 3) (* z00 x00 z!1)) ?x3511 (* (- 2) (* z00 y!2 y!2)) (* (- 18) (* x00 y!2)) (* (- 18) (* y00 x!3)) (* 3 (* z00 x!3 z!1)) (* (- 6) (* z00 y!2)) ?x3316 ?x3170 ?x3491 (* 18 ?x5969) ?x611)))
 (let (($x3183 (= ?x3353 0)))
 (let ((?x915 (* z00 z00 y!2)))
 (let ((?x4239 (* 24 ?x561)))
 (let ((?x769 (* (- 6) ?x494)))
 (let ((?x3486 (+ ?x67 ?x74 ?x3480 ?x769 (* (- 18) ?x531) (* (- 12) (* y00 y!2)) ?x4239 (* (- 1) ?x695) ?x915 (* z00 y00 z!1) (* 18 (* z00 x!3)) ?x445 (* (- 1) (* z00 y!2 z!1)) (* 6 (* z00 y!2)) ?x3316 ?x3170 ?x3491 (* (- 12) ?x5326) ?x611)))
 (let (($x3581 (= ?x3486 0)))
 (let ((?x1417 (* (- 6) ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x612 (+ ?x67 ?x55 ?x74 ?x1417 (* (- 18) ?x494) (* 6 (* z00 z!1)) (* 12 ?x3005) ?x3316 (* 6 ?x3744) (* (- 1) (* z00 z00 z!1)) ?x611)))
 (let (($x910 (= ?x612 0)))
 (let ((?x3965 (* (- 6) n00)))
 (let ((?x3280 (+ z00 ?x3965 (* 6 n!0) (* (- 1) z!1))))
 (let (($x3281 (= ?x3280 0)))
 (let (($x4452 (and $x3281 $x5501 $x910 $x3581 $x3183 $x560 $x3361)))
 (let ((?x3257 (+ (* 432 (* y!2 z!1 z00)) (* 216 (* y!2 z00 z00)) ?x5983 (* (- 72) (* y!2 y!2 z00 z00)) (* (- 36) (* y!2 z00 z00 z00)) (* 648 (* x!3 n!0 n!0 z00 z00)) (* 6 (* y!2 z!1 z!1 n!0 n!0 n!0 z00 z00)) (* 648 (* y!2 n!0 z00 z00)) (* (- 36) (* x!3 z00 z00 z00)) (* 648 (* x!3 n!0 z00 z00)) (* 216 (* x!3 z!1 n!0 z00 z00)) (* (- 2592) (* y!2 y00)) (* 216 (* x!3 z00 z00)) ?x2592 (* 648 (* y!2 z00 y00)) (* 216 (* y!2 n!0 n!0 n!0 z00 z00)) ?x3379 (* 6 (* x!3 z!1 z!1 n!0 n!0 n!0 z00 z00)) ?x3386 (* 864 (* z!1 z!1 y00)) (* 216 (* y!2 y!2 z00)) ?x2817 (* 72 (* x!3 z!1 n!0 n!0 n!0 z00 z00)) (* (- 3888) (* y!2 x00)) (* (- 2592) (* x!3 y00)) (* 216 (* x!3 z!1 n!0 n!0 z00 z00)) (* 864 (* y!2 z!1 y00)) (* 648 (* y!2 n!0 n!0 z00 z00)) (* 864 (* y!2 y!2 y00)) (* 1944 (* x!3 n!0 n!0 z00 y00)) (* 24 (* y!2 z!1 z!1 z!1 n!0 y00)) (* 648 (* x!3 z!1 n!0 n!0 z00 y00)) (* (- 3888) (* x!3 x00)) ?x6027 ?x5946 (* 18 (* x!3 z!1 z!1 n!0 n!0 z00 z00)) (* 648 (* x!3 z00 y00)) (* 18 (* y!2 z!1 z!1 n!0 n!0 z00 z00)) (* 216 (* x!3 z!1 n!0 n!0 n!0 z00 y00)) (* 216 (* y!2 y!2 n!0 z00)) (* 72 (* y!2 y!2 z!1 z00)) ?x5508 ?x6025 (* 6 (* y!2 y!2 z!1 z!1 z00)) (* 12 (* y!2 z!1 z!1 z!1 z00)) (* 6 (* z!1 z!1 z!1 z!1 z00)) ?x6010 ?x6014 (* 72 (* z!1 z!1 z!1 z00)) (* 6 (* z!1 z!1 z!1 z!1 n!0 z00)) (* 144 (* y!2 z!1 z!1 n!0 z00)) (* 12 (* y!2 z!1 z!1 z!1 n!0 z00)) ?x6036 (* 72 (* z!1 z!1 z!1 n!0 z00)) (* (- 108) (* y!2 z!1 z!1 n!0 n!0 n!0 x00)) (* 18 (* x!3 z!1 z!1 n!0 z00 z00)) (* (- 324) (* y!2 z!1 z!1 n!0 n!0 x00)) (* (- 108) (* y!2 z!1 z!1 n!0 x00)) (* 108 (* y!2 z!1 z!1 x00)) (* (- 108) (* x!3 z!1 z!1 n!0 n!0 n!0 x00)) (* (- 324) (* x!3 z!1 z!1 n!0 n!0 x00)) (* (- 324) (* x!3 z!1 z!1 n!0 x00)) (* (- 108) (* x!3 z!1 z!1 x00)) ?x2303 (* (- 1296) (* y!2 z!1 n!0 n!0 n!0 x00)) (* (- 3888) (* y!2 z!1 n!0 n!0 x00)) (* (- 2592) (* y!2 z!1 n!0 x00)) (* 54 (* x!3 z!1 z!1 n!0 z00 y00)) (* 54 (* x!3 z!1 z!1 n!0 n!0 z00 y00)) (* 72 (* y!2 y!2 z!1 n!0 z00)) ?x5101 (* (- 1296) (* x!3 z!1 n!0 n!0 n!0 x00)) (* (- 11664) (* x!3 n!0 x00)) (* (- 11664) (* x!3 n!0 n!0 x00)) (* 6 (* y!2 y!2 z!1 z!1 n!0 z00)) (* (- 3888) (* x!3 n!0 n!0 n!0 x00)) (* (- 11664) (* y!2 n!0 x00)) ?x5337 (* (- 11664) (* y!2 n!0 n!0 x00)) (* (- 3888) (* y!2 n!0 n!0 n!0 x00)) (* (- 1296) (* x!3 z!1 x00)) (* (- 3888) (* x!3 z!1 n!0 x00)) (* 1944 (* y!2 n!0 z00 y00)) (* (- 3888) (* x!3 z!1 n!0 n!0 x00)) (* 216 (* z!1 z!1 z00)) ?x2211 (* 216 (* z!1 z!1 n!0 z00)) ?x2374 ?x2370 (* (- 108) (* y!2 y!2 z00 y00)) (* 864 (* z!1 z!1 n!0 y00)) (* (- 108) (* y!2 y!2 n!0 z00 y00)) (* 432 (* y!2 z!1 n!0 z00 y00)) (* (- 108) (* z!1 z!1 z00 y00)) (* (- 108) (* z!1 z!1 n!0 z00 y00)) (* (- 18) (* y!2 y!2 z!1 z00 y00)) (* (- 18) (* y!2 y!2 z!1 n!0 z00 y00)) (* (- 18) (* y!2 z!1 z!1 z00 y00)) (* 18 (* y!2 z!1 z!1 n!0 z00 y00)) (* (- 18) (* z!1 z!1 z!1 z00 y00)) (* (- 18) (* z!1 z!1 z!1 n!0 z00 y00)) ?x2336 (* (- 1080) (* y!2 y!2 y!2 n!0)) (* (- 2592) (* y!2 y!2 z!1 n!0)) ?x2331 (* (- 1944) (* y!2 z!1 z!1 n!0)) ?x2320 (* 12 (* y!2 y!2 z!1 z!1 y00)) ?x5354 ?x5358 ?x5366 ?x5368 (* (- 432) (* z!1 z!1 z!1 n!0)) (* (- 180) (* y!2 y!2 y!2 z!1 n!0)) (* (- 432) (* y!2 y!2 z!1 z!1 n!0)) (* 12 (* y!2 y!2 z!1 z!1 n!0 y00)) (* 216 (* y!2 y!2 z!1 n!0 y00)) (* 216 (* y!2 y!2 z!1 y00)) (* (- 324) (* y!2 z!1 z!1 z!1 n!0)) (* 864 (* y!2 y!2 n!0 y00)) (* (- 72) (* z!1 z!1 z!1 z!1 n!0)) (* 24 (* y!2 z!1 z!1 z!1 y00)) (* 648 (* y!2 y!2 x00)) (* 648 (* y!2 y!2 n!0 x00)) ?x5261 (* 108 (* y!2 y!2 z!1 x00)) ?x5255 ?x5050 (* 108 (* y!2 y!2 z!1 n!0 x00)) (* 648 (* z!1 z!1 x00)) (* 648 (* z!1 z!1 n!0 x00)) (* 108 (* z!1 z!1 z!1 x00)) (* 108 (* z!1 z!1 z!1 n!0 x00)) ?x5195 (* (- 648) (* x!3 y!2 y!2 n!0)) ?x5193 (* (- 1296) (* x!3 y!2 z!1 n!0)) ?x5191 (* (- 648) (* x!3 z!1 z!1 n!0)) (* (- 108) (* x!3 y!2 y!2 z!1 n!0)) (* (- 216) (* x!3 y!2 z!1 z!1 n!0)) ?x1285 (* (- 108) (* x!3 z!1 z!1 z!1 n!0)) (* 648 (* x!3 n!0 n!0 n!0 z00 y00)) (* (- 18) (* z!1 z!1 z!1 z00 z00)) (* (- 18) (* z!1 z!1 z!1 n!0 z00 z00)) (* (- 1) (* y!2 y!2 z!1 z!1 n!0 z00 z00)) (* (- 2) (* y!2 z!1 z!1 z!1 n!0 z00 z00)) (* (- 1) (* z!1 z!1 z!1 z!1 n!0 z00 z00)) ?x2189 (* (- 72) (* y!2 y!2 n!0 z00 z00)) (* (- 72) (* y!2 z!1 z00 z00)) (* 72 (* y!2 z!1 n!0 z00 z00)) (* (- 72) (* z!1 z!1 z00 z00)) (* (- 72) (* z!1 z!1 n!0 z00 z00)) (* (- 18) (* y!2 y!2 z!1 z00 z00)) (* (- 18) (* y!2 y!2 z!1 n!0 z00 z00)) (* (- 30) (* y!2 z!1 z!1 z00 z00)) (* (- 18) (* y!2 z!1 z!1 n!0 z00 z00)) (* (- 1) (* z!1 z!1 z!1 z!1 z00 z00)) (* (- 2) (* y!2 z!1 z!1 z!1 z00 z00)) (* (- 1) (* y!2 y!2 z!1 z!1 z00 z00)) ?x526 (* 216 (* x!3 z!1 z00 y00)) ?x1294 ?x1300 (* 432 (* y!2 z!1 n!0 z00)) (* (- 864) (* y!2 z!1 n!0 y00)) (* (- 2592) (* y!2 z!1 n!0 n!0 y00)) ?x4386 (* (- 864) (* y!2 z!1 n!0 n!0 n!0 y00)) (* (- 864) (* x!3 z!1 y00)) (* (- 2592) (* x!3 z!1 n!0 y00)) (* (- 2592) (* x!3 z!1 n!0 n!0 y00)) (* (- 864) (* x!3 z!1 n!0 n!0 n!0 y00)) (* 18 (* y!2 z!1 z!1 n!0 n!0 n!0 z00 y00)) (* (- 72) (* x!3 z!1 z!1 y00)) (* (- 216) (* x!3 z!1 z!1 n!0 y00)) (* (- 216) (* x!3 z!1 z!1 n!0 n!0 y00)) ?x993 (* 18 (* x!3 z!1 z!1 z00 y00)) (* 18 (* x!3 z!1 z!1 n!0 n!0 n!0 z00 y00)) (* (- 72) (* x!3 z!1 z!1 n!0 n!0 n!0 y00)) (* 648 (* y!2 n!0 n!0 n!0 z00 y00)) (* 360 (* y!2 z!1 z!1 y00)) (* 216 (* y!2 z!1 z!1 n!0 y00)) (* 648 (* x!3 z!1 n!0 z00 y00)) (* (- 216) (* y!2 z!1 z!1 n!0 n!0 y00)) (* (- 72) (* y!2 z!1 z!1 n!0 n!0 n!0 y00)) ?x5051 ?x6160 (* (- 2592) (* y!2 n!0 n!0 n!0 y00)) ?x4559 (* (- 7776) (* y!2 n!0 n!0 y00)) (* 216 (* y!2 z!1 n!0 n!0 n!0 z00 y00)) (* 1944 (* y!2 n!0 n!0 z00 y00)) (* (- 7776) (* y!2 n!0 y00)) (* 54 (* y!2 z!1 z!1 n!0 n!0 z00 y00)) ?x6371 (* (- 2592) (* x!3 n!0 n!0 n!0 y00)) (* (- 7776) (* x!3 n!0 n!0 y00)) (* (- 7776) (* x!3 n!0 y00)) (* 144 (* y!2 z!1 z!1 z00)) ?x6281 (* 1944 (* x!3 n!0 z00 y00)) (* 6 (* x!3 z!1 z!1 z00 z00)) (* (- 36) (* x!3 n!0 n!0 n!0 z00 z00 z00)) (* (- 108) (* y!2 n!0 z00 z00 z00)) (* (- 108) (* y!2 n!0 n!0 z00 z00 z00)) (* (- 36) (* y!2 n!0 n!0 n!0 z00 z00 z00)) (* (- 12) (* x!3 z!1 z00 z00 z00)) (* (- 36) (* x!3 z!1 n!0 z00 z00 z00)) (* (- 36) (* x!3 z!1 n!0 n!0 z00 z00 z00)) (* (- 108) (* x!3 n!0 n!0 z00 z00 z00)) (* (- 1) (* x!3 z!1 z!1 z00 z00 z00)) (* y!2 z!1 z!1 z00 z00 z00) (* (- 108) (* x!3 n!0 z00 z00 z00)) (* (- 12) (* x!3 z!1 n!0 n!0 n!0 z00 z00 z00)) (* 12 (* z!1 z!1 z!1 z!1 n!0 y00)) (* (- 24) (* y!2 z!1 n!0 z00 z00 z00)) (* (- 36) (* y!2 z!1 n!0 n!0 z00 z00 z00)) (* (- 12) (* y!2 z!1 n!0 n!0 n!0 z00 z00 z00)) (* (- 3) (* x!3 z!1 z!1 n!0 z00 z00 z00)) (* (- 3) (* x!3 z!1 z!1 n!0 n!0 z00 z00 z00)) (* (- 1) (* x!3 z!1 z!1 n!0 n!0 n!0 z00 z00 z00)) (* (- 1) (* y!2 z!1 z!1 n!0 z00 z00 z00)) (* (- 3) (* y!2 z!1 z!1 n!0 n!0 z00 z00 z00)) (* (- 1) (* y!2 z!1 z!1 n!0 n!0 n!0 z00 z00 z00)) (* 216 (* x!3 n!0 n!0 n!0 z00 z00)) (* 72 (* y!2 z!1 n!0 n!0 n!0 z00 z00)) (* 72 (* x!3 z!1 z00 z00)) (* 216 (* z!1 z!1 z!1 n!0 y00)) (* 12 (* z!1 z!1 z!1 z!1 y00)) (* 6 (* z!1 z!1 z00 z00 z00)) (* 648 (* y!2 z!1 n!0 n!0 z00 y00)) (* 216 (* y!2 z!1 n!0 n!0 z00 z00)) (* 6 (* y!2 y!2 n!0 z00 z00 z00)) (* 6 (* y!2 y!2 z00 z00 z00)) (* 216 (* z!1 z!1 z!1 y00)) (* z!1 z!1 z!1 z00 z00 z00) (* y!2 y!2 z!1 z00 z00 z00) (* 6 (* z!1 z!1 n!0 z00 z00 z00)) (* y!2 y!2 z!1 n!0 z00 z00 z00) (* z!1 z!1 z!1 n!0 z00 z00 z00))))
 (let ((?x2318 (* y!2 y!2 z00 z00)))
 (let ((?x530 (+ (* 10 (* y!2 z00 z00)) ?x2318 (* (- 1) (* y!2 z00 z00 z00)) ?x432 (* (- 2) (* x!3 z00 z00 z00)) ?x6034 ?x859 ?x449 ?x4691 ?x1032 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x705 ?x1233 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x753 ?x3391 ?x5975 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1132 (* (- 216) (* x!3 y00)) ?x967 (* (- 12) (* y!2 y!2 y00)) ?x1082 (* (- 216) (* x!3 x00)) ?x1172 ?x1176 (* 36 (* x!3 z00 y00)) ?x1279)))
 (let ((?x2386 (* y!2 z!1 y00)))
 (let ((?x882 (* 3 ?x881)))
 (let ((?x944 (* 3 ?x695)))
 (let ((?x677 (* (- 1) ?x670)))
 (let ((?x817 (* 18 (* z!1 x00))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x4618 (* z!1 y00)))
 (let ((?x6178 (* 12 ?x4618)))
 (let ((?x4727 (* (- 18) ?x4936)))
 (let ((?x442 (* (- 18) ?x441)))
 (let ((?x3383 (* (- 12) ?x3744)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x1809 (* 72 y!2)))
 (let ((?x2020 (* 108 x!3)))
 (let ((?x2324 (+ ?x2020 ?x1809 ?x516 ?x573 (* (- 3) (* y!2 z00 z00)) ?x2809 ?x3383 ?x442 (* (- 18) ?x5969) ?x4727 ?x6178 ?x769 ?x864 ?x817 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x677 ?x944 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x882 (* 18 (* x!3 y00)) ?x2386 (* (- 2) (* z!1 y00 y00)))))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x532 (* 18 ?x531)))
 (let ((?x5992 (* y!2 z!1 z00)))
 (let ((?x6005 (+ ?x2020 ?x1809 ?x516 ?x573 ?x5992 (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x3383 ?x4727 ?x6178 ?x610 ?x532 (* 12 ?x5326) ?x590 ?x817 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x695 (* (- 18) (* x!3 z00)))))
 (let ((?x495 (* 18 ?x494)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x5995 (+ ?x2020 ?x1809 ?x516 ?x446 ?x573 (* z!1 z00 z00) ?x457 (* (- 6) ?x3744) (* (- 12) ?x4618) ?x495 (* (- 6) (* z!1 z00)))))
 (let ((?x424 (* (- 12) y00)))
 (let ((?x423 (* (- 6) z00)))
 (let (($x1638 (= (+ (* 12 y!2) (* 6 z!1) ?x423 ?x424 (* (- 1) ?x2286) ?x353) 0)))
 (let (($x3263 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x1638 (= ?x5995 0) (= ?x6005 0) (= ?x2324 0) (= ?x530 0) (not (= ?x3257 0)))))
 (let (($x6617 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x5563 (* z z z n z00 z00 z00)))
 (let ((?x5555 (* y y z n z00 z00 z00)))
 (let ((?x5487 (* y y z z00 z00 z00)))
 (let ((?x5483 (* z z z z00 z00 z00)))
 (let ((?x4732 (* y z z z00 z00 z00)))
 (let ((?x216 (+ x y)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x4402 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x4432 (* (- 108) ?x4402)))
 (let ((?x219 (+ y z)))
 (let ((?x4310 (* x00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x4346 (* (- 108) ?x4310)))
 (let ((?x4267 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x3828 (* 108 ?x4267)))
 (let ((?x4249 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x4230 (* (- 6) ?x4249)))
 (let ((?x4222 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x3899 (* 6 ?x4222)))
 (let ((?x5837 (* 216 (* y z z n y00))))
 (let ((?x4132 (* ?x462 ?x448 ?x448 ?x219 ?x219 ?x219)))
 (let ((?x3764 (* 6 ?x4132)))
 (let ((?x3981 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x3164 (* 6 ?x3981)))
 (let ((?x3905 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x3865 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x4041 (* (- 1) ?x3865)))
 (let ((?x3629 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216)))
 (let ((?x3632 (* 108 ?x3629)))
 (let ((?x3411 (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x1388 (* 108 ?x3411)))
 (let ((?x3267 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x5179 (* (- 72) ?x3267)))
 (let ((?x2377 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* (- 6) ?x2377)))
 (let ((?x2112 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x2113 (* 12 ?x2112)))
 (let ((?x2091 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x2100 (* (- 12) ?x2091)))
 (let ((?x2059 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x2060 (* 18 ?x2059)))
 (let ((?x1964 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1615 (* 72 ?x1964)))
 (let ((?x1887 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1911 (* (- 6) ?x1887)))
 (let ((?x1834 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1841 (* (- 1) ?x1834)))
 (let ((?x5699 (* 108 (* y z z x00))))
 (let ((?x1688 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x2033 (* (- 12) ?x1688)))
 (let ((?x1639 (* y00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1650 (* (- 72) ?x1639)))
 (let ((?x1612 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1384 (* (- 18) ?x1612)))
 (let ((?x1514 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1480 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1482 (* 6 ?x1480)))
 (let ((?x1230 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216)))
 (let ((?x1302 (* (- 6) ?x1230)))
 (let ((?x1177 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216)))
 (let ((?x1179 (* 72 ?x1177)))
 (let ((?x941 (* y z y00)))
 (let ((?x5396 (* 864 ?x941)))
 (let ((?x860 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x965 (* (- 6) ?x860)))
 (let ((?x760 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x681 (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x683 (* 72 ?x681)))
 (let ((?x6610 (+ (* 432 (* y z z00)) (* 216 (* y z00 z00)) (* (- 2592) (* y y z)) (* (- 72) (* y y z00 z00)) (* (- 36) (* y z00 z00 z00)) (* 648 (* x n n z00 z00)) (* 6 (* y z z n n n z00 z00)) (* 648 (* y n z00 z00)) (* (- 36) (* x z00 z00 z00)) (* 648 (* x n z00 z00)) (* 216 (* x z n z00 z00)) (* (- 2592) (* y y00)) (* 216 (* x z00 z00)) ?x683 (* 648 (* y z00 y00)) (* 216 (* y n n n z00 z00)) ?x760 (* 6 (* x z z n n n z00 z00)) (* (- 1080) (* y y y)) (* 864 (* z z y00)) (* 216 (* y y z00)) ?x965 (* 72 (* x z n n n z00 z00)) (* (- 3888) (* y x00)) (* (- 2592) (* x y00)) (* 216 (* x z n n z00 z00)) ?x5396 (* 648 (* y n n z00 z00)) (* 864 (* y y y00)) (* 1944 (* x n n z00 y00)) (* 24 (* y z z z n y00)) (* 648 (* x z n n z00 y00)) (* (- 3888) (* x x00)) ?x1179 ?x1302 (* 18 (* x z z n n z00 z00)) (* 648 (* x z00 y00)) (* 18 (* y z z n n z00 z00)) (* 216 (* x z n n n z00 y00)) (* 216 (* y y n z00)) (* 72 (* y y z z00)) ?x1482 ?x1514 (* 6 (* y y z z z00)) (* 12 (* y z z z z00)) (* 6 (* z z z z z00)) ?x1384 ?x1650 (* 72 (* z z z z00)) (* 6 (* z z z z n z00)) (* 144 (* y z z n z00)) (* 12 (* y z z z n z00)) ?x2033 (* 72 (* z z z n z00)) (* (- 108) (* y z z n n n x00)) (* 18 (* x z z n z00 z00)) (* (- 324) (* y z z n n x00)) (* (- 108) (* y z z n x00)) ?x5699 (* (- 108) (* x z z n n n x00)) (* (- 324) (* x z z n n x00)) (* (- 324) (* x z z n x00)) (* (- 108) (* x z z x00)) ?x1841 (* (- 1296) (* y z n n n x00)) (* (- 3888) (* y z n n x00)) (* (- 2592) (* y z n x00)) (* 54 (* x z z n z00 y00)) (* 54 (* x z z n n z00 y00)) (* 72 (* y y z n z00)) ?x1911 (* (- 1296) (* x z n n n x00)) (* (- 11664) (* x n x00)) (* (- 11664) (* x n n x00)) (* 6 (* y y z z n z00)) (* (- 3888) (* x n n n x00)) (* (- 11664) (* y n x00)) ?x1615 (* (- 11664) (* y n n x00)) (* (- 3888) (* y n n n x00)) (* (- 1296) (* x z x00)) (* (- 3888) (* x z n x00)) (* 1944 (* y n z00 y00)) (* (- 3888) (* x z n n x00)) (* 216 (* z z z00)) ?x2060 (* 216 (* z z n z00)) ?x2100 ?x2113 (* (- 108) (* y y z00 y00)) (* 864 (* z z n y00)) (* (- 108) (* y y n z00 y00)) (* 432 (* y z n z00 y00)) (* (- 108) (* z z z00 y00)) (* (- 108) (* z z n z00 y00)) (* (- 18) (* y y z z00 y00)) (* (- 18) (* y y z n z00 y00)) (* (- 18) (* y z z z00 y00)) (* 18 (* y z z n z00 y00)) (* (- 18) (* z z z z00 y00)) (* (- 18) (* z z z n z00 y00)) ?x2437 (* (- 1080) (* y y y n)) (* (- 2592) (* y y z n)) (* (- 1944) (* y z z)) (* (- 1944) (* y z z n)) (* (- 180) (* y y y z)) (* 12 (* y y z z y00)) (* (- 432) (* y y z z)) (* (- 324) (* y z z z)) (* (- 72) (* z z z z)) (* (- 432) (* z z z)) (* (- 432) (* z z z n)) (* (- 180) (* y y y z n)) (* (- 432) (* y y z z n)) (* 12 (* y y z z n y00)) (* 216 (* y y z n y00)) (* 216 (* y y z y00)) (* (- 324) (* y z z z n)) (* 864 (* y y n y00)) (* (- 72) (* z z z z n)) (* 24 (* y z z z y00)) (* 648 (* y y x00)) (* 648 (* y y n x00)) (* (- 108) (* x y y z)) (* 108 (* y y z x00)) (* (- 216) (* x y z z)) (* (- 108) (* x z z z)) (* 108 (* y y z n x00)) (* 648 (* z z x00)) (* 648 (* z z n x00)) (* 108 (* z z z x00)) (* 108 (* z z z n x00)) (* (- 648) (* x y y)) (* (- 648) (* x y y n)) (* (- 1296) (* x y z)) (* (- 1296) (* x y z n)) (* (- 648) (* x z z)) (* (- 648) (* x z z n)) (* (- 108) (* x y y z n)) (* (- 216) (* x y z z n)) ?x5179 (* (- 108) (* x z z z n)) (* 648 (* x n n n z00 y00)) (* (- 18) (* z z z z00 z00)) (* (- 18) (* z z z n z00 z00)) (* (- 1) (* y y z z n z00 z00)) (* (- 2) (* y z z z n z00 z00)) (* (- 1) (* z z z z n z00 z00)) ?x1388 (* (- 72) (* y y n z00 z00)) (* (- 72) (* y z z00 z00)) (* 72 (* y z n z00 z00)) (* (- 72) (* z z z00 z00)) (* (- 72) (* z z n z00 z00)) (* (- 18) (* y y z z00 z00)) (* (- 18) (* y y z n z00 z00)) (* (- 30) (* y z z z00 z00)) (* (- 18) (* y z z n z00 z00)) (* (- 1) (* z z z z z00 z00)) (* (- 2) (* y z z z z00 z00)) (* (- 1) (* y y z z z00 z00)) ?x3632 (* 216 (* x z z00 y00)) ?x4041 ?x3905 (* 432 (* y z n z00)) (* (- 864) (* y z n y00)) (* (- 2592) (* y z n n y00)) ?x3164 (* (- 864) (* y z n n n y00)) (* (- 864) (* x z y00)) (* (- 2592) (* x z n y00)) (* (- 2592) (* x z n n y00)) (* (- 864) (* x z n n n y00)) (* 18 (* y z z n n n z00 y00)) (* (- 72) (* x z z y00)) (* (- 216) (* x z z n y00)) (* (- 216) (* x z z n n y00)) ?x3764 (* 18 (* x z z z00 y00)) (* 18 (* x z z n n n z00 y00)) (* (- 72) (* x z z n n n y00)) (* 648 (* y n n n z00 y00)) (* 360 (* y z z y00)) ?x5837 (* 648 (* x z n z00 y00)) (* (- 216) (* y z z n n y00)) (* (- 72) (* y z z n n n y00)) ?x3899 ?x4230 (* (- 2592) (* y n n n y00)) ?x3828 (* (- 7776) (* y n n y00)) (* 216 (* y z n n n z00 y00)) (* 1944 (* y n n z00 y00)) (* (- 7776) (* y n y00)) (* 54 (* y z z n n z00 y00)) ?x4346 (* (- 2592) (* x n n n y00)) (* (- 7776) (* x n n y00)) (* (- 7776) (* x n y00)) (* 144 (* y z z z00)) ?x4432 (* 1944 (* x n z00 y00)) (* 6 (* x z z z00 z00)) (* (- 36) (* x n n n z00 z00 z00)) (* (- 108) (* y n z00 z00 z00)) (* (- 108) (* y n n z00 z00 z00)) (* (- 36) (* y n n n z00 z00 z00)) (* (- 12) (* x z z00 z00 z00)) (* (- 36) (* x z n z00 z00 z00)) (* (- 36) (* x z n n z00 z00 z00)) (* (- 108) (* x n n z00 z00 z00)) (* (- 1) (* x z z z00 z00 z00)) ?x4732 (* (- 108) (* x n z00 z00 z00)) (* (- 12) (* x z n n n z00 z00 z00)) (* 12 (* z z z z n y00)) (* (- 24) (* y z n z00 z00 z00)) (* (- 36) (* y z n n z00 z00 z00)) (* (- 12) (* y z n n n z00 z00 z00)) (* (- 3) (* x z z n z00 z00 z00)) (* (- 3) (* x z z n n z00 z00 z00)) (* (- 1) (* x z z n n n z00 z00 z00)) (* (- 1) (* y z z n z00 z00 z00)) (* (- 3) (* y z z n n z00 z00 z00)) (* (- 1) (* y z z n n n z00 z00 z00)) (* 216 (* x n n n z00 z00)) (* 72 (* y z n n n z00 z00)) (* 72 (* x z z00 z00)) (* 216 (* z z z n y00)) (* 12 (* z z z z y00)) (* 6 (* z z z00 z00 z00)) (* 648 (* y z n n z00 y00)) (* 216 (* y z n n z00 z00)) (* 6 (* y y n z00 z00 z00)) (* 6 (* y y z00 z00 z00)) (* 216 (* z z z y00)) ?x5483 ?x5487 (* 6 (* z z n z00 z00 z00)) ?x5555 ?x5563)))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x1176 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1172 (* z00 z00 z00 y00)))
 (let ((?x1082 (* (- 36) (* z00 y00 x00))))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x881 (* z00 z00 x00)))
 (let ((?x1132 (* (- 18) ?x881)))
 (let ((?x798 (* y y y)))
 (let ((?x837 (* (- 4) ?x798)))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x753 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x695 (* z00 z00 y00)))
 (let ((?x1233 (* (- 10) ?x695)))
 (let ((?x670 (* z00 y00 y00)))
 (let ((?x705 (* (- 12) ?x670)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x531 (* z00 x00)))
 (let ((?x449 (* 36 ?x531)))
 (let ((?x494 (* z00 y00)))
 (let ((?x859 (* 24 ?x494)))
 (let ((?x441 (* y00 x00)))
 (let ((?x432 (* 216 ?x441)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1299 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x432 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x859 ?x449 ?x780 ?x1032 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x705 ?x1233 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x753 ?x785 ?x837 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1132 (* (- 216) (* x y00)) ?x967 (* (- 12) (* y y y00)) ?x1082 (* (- 216) (* x x00)) ?x1172 ?x1176 (* 36 (* x z00 y00)) ?x1279)))
 (let (($x1304 (= ?x1299 0)))
 (let ((?x882 (* 3 ?x881)))
 (let ((?x944 (* 3 ?x695)))
 (let ((?x677 (* (- 1) ?x670)))
 (let ((?x607 (* 18 (* z x00))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x769 (* (- 6) ?x494)))
 (let ((?x468 (* z y00)))
 (let ((?x469 (* 12 ?x468)))
 (let ((?x502 (* (- 18) (* x z))))
 (let ((?x442 (* (- 18) ?x441)))
 (let ((?x437 (* y z)))
 (let ((?x461 (* (- 12) ?x437)))
 (let ((?x135 (* y y z)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1000 (+ ?x64 ?x71 ?x516 ?x573 (* (- 3) (* y z00 z00)) ?x135 ?x461 ?x442 (* (- 18) (* x y)) ?x502 ?x469 ?x769 ?x864 ?x607 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x677 ?x944 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x882 (* 18 (* x y00)) ?x941 (* (- 2) (* z y00 y00)))))
 (let (($x1007 (= ?x1000 0)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x532 (* 18 ?x531)))
 (let ((?x610 (* 6 ?x494)))
 (let ((?x103 (* y z z00)))
 (let ((?x749 (+ ?x64 ?x71 ?x516 ?x573 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x461 ?x502 ?x469 ?x610 ?x532 ?x538 ?x590 ?x607 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x695 (* (- 18) (* x z00)))))
 (let (($x754 (= ?x749 0)))
 (let ((?x495 (* 18 ?x494)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x589 (+ ?x64 ?x71 ?x516 ?x446 ?x573 ?x76 ?x457 (* (- 6) ?x437) (* (- 12) ?x468) ?x495 (* (- 6) (* z z00)))))
 (let (($x594 (= ?x589 0)))
 (let ((?x50 (* z z)))
 (let ((?x425 (* (- 1) ?x50)))
 (let ((?x424 (* (- 12) y00)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x427 (= (+ ?x45 ?x46 ?x423 ?x424 ?x425 ?x353) 0)))
 (let (($x345 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x345 $x427 $x594 $x754 $x1007 $x1304 (not (= ?x6610 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x1442 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x219 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x4466 (* z00 z00 z00 ?x462 ?x448 ?x219 ?x219)))
 (let ((?x216 (+ x y)))
 (let ((?x4402 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1514 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1073 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)))
 (let ((?x760 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x2070 (* z00 z00 ?x462 ?x448 ?x448 ?x219 ?x219)))
 (let ((?x1834 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x3865 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1796 (+ ?x3865 (* (- 6) (* ?x462 ?x448 ?x448 ?x219 ?x219 ?x219)) (* (- 18) (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* (- 6) (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)) (* (- 1) (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)) (* (- 6) (* z00 ?x462 ?x448 ?x448 ?x219 ?x219)) (* 6 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)) (* (- 6) (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)) (* (- 108) (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)) (* 108 (* x00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)) (* 108 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* 18 (* y00 z00 ?x462 ?x448 ?x219 ?x219)) ?x1834 (* (- 12) (* y00 ?x462 ?x448 ?x448 ?x219 ?x219)) (* 6 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)) (* 18 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)) (* (- 72) (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)) (* 72 (* ?x462 ?x448 ?x219 ?x219 ?x219)) (* 108 (* ?x462 ?x448 ?x219 ?x219 ?x216)) (* 12 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)) (* 72 (* y00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)) (* (- 18) (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)) ?x2070 (* (- 108) (* x00 ?x462 ?x448 ?x219 ?x219)) (* 12 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)) (* (- 12) (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)) (* 72 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* (- 6) (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* (- 108) (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216 ?x216)) (* (- 72) (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)) (* (- 1) ?x760) (* 6 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)) ?x1073 (* (- 72) (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216)) (* 6 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216)) (* (- 6) (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)) (* (- 72) (* y00 ?x462 ?x448 ?x219 ?x219)) (* (- 1) ?x1514) (* 6 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x462 ?x448 ?x219 ?x219)) (* 72 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)) (* (- 108) (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216)) (* 108 ?x4402) (* (- 1) ?x4466))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x798 (* y y y)))
 (let ((?x837 (* (- 4) ?x798)))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x1948 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1385 (= ?x1948 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x1571 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1423 (* (- 108) x)))
 (let ((?x3759 (* x00 z)))
 (let ((?x4238 (* (- 18) ?x3759)))
 (let ((?x4355 (* 36 ?x561)))
 (let ((?x3875 (* z y)))
 (let ((?x4232 (* 12 ?x3875)))
 (let ((?x3768 (* z00 y)))
 (let ((?x3847 (* (- 6) ?x3768)))
 (let ((?x4036 (* y00 z00)))
 (let ((?x4116 (* 6 ?x4036)))
 (let ((?x4017 (* y00 z)))
 (let ((?x4032 (* (- 12) ?x4017)))
 (let ((?x4196 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x3729 (* z x)))
 (let ((?x1635 (* 18 ?x3729)))
 (let ((?x4100 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x1635 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x4196 ?x4032 ?x4116 (* (- 36) (* y00 y)) ?x3847 ?x4232 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x4355 ?x4238 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1423 ?x67 (* (- 18) (* y00 x)) ?x1571 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x3900 (* z00 z00 y)))
 (let ((?x3769 (* 6 ?x3768)))
 (let ((?x3833 (* (- 6) ?x4036)))
 (let ((?x4239 (* 24 ?x561)))
 (let ((?x2919 (* y00 z00 z)))
 (let ((?x3743 (+ ?x2919 ?x4232 ?x1635 (* (- 18) (* x00 z00)) (* (- 12) ?x535) ?x4239 ?x4238 ?x4032 ?x3833 (* (- 12) (* y00 y)) ?x1423 ?x67 ?x3769 ?x1571 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x3900)))
 (let ((?x4019 (* 12 ?x4017)))
 (let ((?x353 (* z00 z00)))
 (let ((?x1417 (* (- 6) ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1761 (+ (* 6 ?x3875) ?x55 ?x1417 ?x4019 (* (- 18) ?x4036) ?x1423 ?x67 (* 6 (* z00 z)) ?x1571 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x425 (* (- 1) ?x50)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x424 (* (- 12) y00)))
 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x353 ?x424 ?x45 ?x46 ?x423 ?x425) 0) (= ?x1761 0) (= ?x3743 0) (= ?x4100 0) $x1385 (not (= ?x1796 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x6619 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x5563 (* z z z n z00 z00 z00)))
 (let ((?x5555 (* y y z n z00 z00 z00)))
 (let ((?x5487 (* y y z z00 z00 z00)))
 (let ((?x5483 (* z z z z00 z00 z00)))
 (let ((?x4732 (* y z z z00 z00 z00)))
 (let ((?x216 (+ x y)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x4402 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x4432 (* (- 108) ?x4402)))
 (let ((?x219 (+ y z)))
 (let ((?x4310 (* x00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x4346 (* (- 108) ?x4310)))
 (let ((?x4267 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x3828 (* 108 ?x4267)))
 (let ((?x4249 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x4230 (* (- 6) ?x4249)))
 (let ((?x4222 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x3899 (* 6 ?x4222)))
 (let ((?x5837 (* 216 (* y z z n y00))))
 (let ((?x4132 (* ?x462 ?x448 ?x448 ?x219 ?x219 ?x219)))
 (let ((?x3764 (* 6 ?x4132)))
 (let ((?x3981 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x3164 (* 6 ?x3981)))
 (let ((?x3905 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x3865 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x4041 (* (- 1) ?x3865)))
 (let ((?x3629 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216)))
 (let ((?x3632 (* 108 ?x3629)))
 (let ((?x3411 (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x1388 (* 108 ?x3411)))
 (let ((?x3267 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x5179 (* (- 72) ?x3267)))
 (let ((?x2377 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* (- 6) ?x2377)))
 (let ((?x2112 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x2113 (* 12 ?x2112)))
 (let ((?x2091 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x2100 (* (- 12) ?x2091)))
 (let ((?x2059 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x2060 (* 18 ?x2059)))
 (let ((?x1964 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1615 (* 72 ?x1964)))
 (let ((?x1887 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1911 (* (- 6) ?x1887)))
 (let ((?x1834 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1841 (* (- 1) ?x1834)))
 (let ((?x5699 (* 108 (* y z z x00))))
 (let ((?x1688 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x2033 (* (- 12) ?x1688)))
 (let ((?x1639 (* y00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1650 (* (- 72) ?x1639)))
 (let ((?x1612 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1384 (* (- 18) ?x1612)))
 (let ((?x1514 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1480 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1482 (* 6 ?x1480)))
 (let ((?x1230 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216)))
 (let ((?x1302 (* (- 6) ?x1230)))
 (let ((?x1177 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216)))
 (let ((?x1179 (* 72 ?x1177)))
 (let ((?x941 (* y z y00)))
 (let ((?x5396 (* 864 ?x941)))
 (let ((?x860 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x965 (* (- 6) ?x860)))
 (let ((?x760 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x681 (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x683 (* 72 ?x681)))
 (let ((?x6610 (+ (* 432 (* y z z00)) (* 216 (* y z00 z00)) (* (- 2592) (* y y z)) (* (- 72) (* y y z00 z00)) (* (- 36) (* y z00 z00 z00)) (* 648 (* x n n z00 z00)) (* 6 (* y z z n n n z00 z00)) (* 648 (* y n z00 z00)) (* (- 36) (* x z00 z00 z00)) (* 648 (* x n z00 z00)) (* 216 (* x z n z00 z00)) (* (- 2592) (* y y00)) (* 216 (* x z00 z00)) ?x683 (* 648 (* y z00 y00)) (* 216 (* y n n n z00 z00)) ?x760 (* 6 (* x z z n n n z00 z00)) (* (- 1080) (* y y y)) (* 864 (* z z y00)) (* 216 (* y y z00)) ?x965 (* 72 (* x z n n n z00 z00)) (* (- 3888) (* y x00)) (* (- 2592) (* x y00)) (* 216 (* x z n n z00 z00)) ?x5396 (* 648 (* y n n z00 z00)) (* 864 (* y y y00)) (* 1944 (* x n n z00 y00)) (* 24 (* y z z z n y00)) (* 648 (* x z n n z00 y00)) (* (- 3888) (* x x00)) ?x1179 ?x1302 (* 18 (* x z z n n z00 z00)) (* 648 (* x z00 y00)) (* 18 (* y z z n n z00 z00)) (* 216 (* x z n n n z00 y00)) (* 216 (* y y n z00)) (* 72 (* y y z z00)) ?x1482 ?x1514 (* 6 (* y y z z z00)) (* 12 (* y z z z z00)) (* 6 (* z z z z z00)) ?x1384 ?x1650 (* 72 (* z z z z00)) (* 6 (* z z z z n z00)) (* 144 (* y z z n z00)) (* 12 (* y z z z n z00)) ?x2033 (* 72 (* z z z n z00)) (* (- 108) (* y z z n n n x00)) (* 18 (* x z z n z00 z00)) (* (- 324) (* y z z n n x00)) (* (- 108) (* y z z n x00)) ?x5699 (* (- 108) (* x z z n n n x00)) (* (- 324) (* x z z n n x00)) (* (- 324) (* x z z n x00)) (* (- 108) (* x z z x00)) ?x1841 (* (- 1296) (* y z n n n x00)) (* (- 3888) (* y z n n x00)) (* (- 2592) (* y z n x00)) (* 54 (* x z z n z00 y00)) (* 54 (* x z z n n z00 y00)) (* 72 (* y y z n z00)) ?x1911 (* (- 1296) (* x z n n n x00)) (* (- 11664) (* x n x00)) (* (- 11664) (* x n n x00)) (* 6 (* y y z z n z00)) (* (- 3888) (* x n n n x00)) (* (- 11664) (* y n x00)) ?x1615 (* (- 11664) (* y n n x00)) (* (- 3888) (* y n n n x00)) (* (- 1296) (* x z x00)) (* (- 3888) (* x z n x00)) (* 1944 (* y n z00 y00)) (* (- 3888) (* x z n n x00)) (* 216 (* z z z00)) ?x2060 (* 216 (* z z n z00)) ?x2100 ?x2113 (* (- 108) (* y y z00 y00)) (* 864 (* z z n y00)) (* (- 108) (* y y n z00 y00)) (* 432 (* y z n z00 y00)) (* (- 108) (* z z z00 y00)) (* (- 108) (* z z n z00 y00)) (* (- 18) (* y y z z00 y00)) (* (- 18) (* y y z n z00 y00)) (* (- 18) (* y z z z00 y00)) (* 18 (* y z z n z00 y00)) (* (- 18) (* z z z z00 y00)) (* (- 18) (* z z z n z00 y00)) ?x2437 (* (- 1080) (* y y y n)) (* (- 2592) (* y y z n)) (* (- 1944) (* y z z)) (* (- 1944) (* y z z n)) (* (- 180) (* y y y z)) (* 12 (* y y z z y00)) (* (- 432) (* y y z z)) (* (- 324) (* y z z z)) (* (- 72) (* z z z z)) (* (- 432) (* z z z)) (* (- 432) (* z z z n)) (* (- 180) (* y y y z n)) (* (- 432) (* y y z z n)) (* 12 (* y y z z n y00)) (* 216 (* y y z n y00)) (* 216 (* y y z y00)) (* (- 324) (* y z z z n)) (* 864 (* y y n y00)) (* (- 72) (* z z z z n)) (* 24 (* y z z z y00)) (* 648 (* y y x00)) (* 648 (* y y n x00)) (* (- 108) (* x y y z)) (* 108 (* y y z x00)) (* (- 216) (* x y z z)) (* (- 108) (* x z z z)) (* 108 (* y y z n x00)) (* 648 (* z z x00)) (* 648 (* z z n x00)) (* 108 (* z z z x00)) (* 108 (* z z z n x00)) (* (- 648) (* x y y)) (* (- 648) (* x y y n)) (* (- 1296) (* x y z)) (* (- 1296) (* x y z n)) (* (- 648) (* x z z)) (* (- 648) (* x z z n)) (* (- 108) (* x y y z n)) (* (- 216) (* x y z z n)) ?x5179 (* (- 108) (* x z z z n)) (* 648 (* x n n n z00 y00)) (* (- 18) (* z z z z00 z00)) (* (- 18) (* z z z n z00 z00)) (* (- 1) (* y y z z n z00 z00)) (* (- 2) (* y z z z n z00 z00)) (* (- 1) (* z z z z n z00 z00)) ?x1388 (* (- 72) (* y y n z00 z00)) (* (- 72) (* y z z00 z00)) (* 72 (* y z n z00 z00)) (* (- 72) (* z z z00 z00)) (* (- 72) (* z z n z00 z00)) (* (- 18) (* y y z z00 z00)) (* (- 18) (* y y z n z00 z00)) (* (- 30) (* y z z z00 z00)) (* (- 18) (* y z z n z00 z00)) (* (- 1) (* z z z z z00 z00)) (* (- 2) (* y z z z z00 z00)) (* (- 1) (* y y z z z00 z00)) ?x3632 (* 216 (* x z z00 y00)) ?x4041 ?x3905 (* 432 (* y z n z00)) (* (- 864) (* y z n y00)) (* (- 2592) (* y z n n y00)) ?x3164 (* (- 864) (* y z n n n y00)) (* (- 864) (* x z y00)) (* (- 2592) (* x z n y00)) (* (- 2592) (* x z n n y00)) (* (- 864) (* x z n n n y00)) (* 18 (* y z z n n n z00 y00)) (* (- 72) (* x z z y00)) (* (- 216) (* x z z n y00)) (* (- 216) (* x z z n n y00)) ?x3764 (* 18 (* x z z z00 y00)) (* 18 (* x z z n n n z00 y00)) (* (- 72) (* x z z n n n y00)) (* 648 (* y n n n z00 y00)) (* 360 (* y z z y00)) ?x5837 (* 648 (* x z n z00 y00)) (* (- 216) (* y z z n n y00)) (* (- 72) (* y z z n n n y00)) ?x3899 ?x4230 (* (- 2592) (* y n n n y00)) ?x3828 (* (- 7776) (* y n n y00)) (* 216 (* y z n n n z00 y00)) (* 1944 (* y n n z00 y00)) (* (- 7776) (* y n y00)) (* 54 (* y z z n n z00 y00)) ?x4346 (* (- 2592) (* x n n n y00)) (* (- 7776) (* x n n y00)) (* (- 7776) (* x n y00)) (* 144 (* y z z z00)) ?x4432 (* 1944 (* x n z00 y00)) (* 6 (* x z z z00 z00)) (* (- 36) (* x n n n z00 z00 z00)) (* (- 108) (* y n z00 z00 z00)) (* (- 108) (* y n n z00 z00 z00)) (* (- 36) (* y n n n z00 z00 z00)) (* (- 12) (* x z z00 z00 z00)) (* (- 36) (* x z n z00 z00 z00)) (* (- 36) (* x z n n z00 z00 z00)) (* (- 108) (* x n n z00 z00 z00)) (* (- 1) (* x z z z00 z00 z00)) ?x4732 (* (- 108) (* x n z00 z00 z00)) (* (- 12) (* x z n n n z00 z00 z00)) (* 12 (* z z z z n y00)) (* (- 24) (* y z n z00 z00 z00)) (* (- 36) (* y z n n z00 z00 z00)) (* (- 12) (* y z n n n z00 z00 z00)) (* (- 3) (* x z z n z00 z00 z00)) (* (- 3) (* x z z n n z00 z00 z00)) (* (- 1) (* x z z n n n z00 z00 z00)) (* (- 1) (* y z z n z00 z00 z00)) (* (- 3) (* y z z n n z00 z00 z00)) (* (- 1) (* y z z n n n z00 z00 z00)) (* 216 (* x n n n z00 z00)) (* 72 (* y z n n n z00 z00)) (* 72 (* x z z00 z00)) (* 216 (* z z z n y00)) (* 12 (* z z z z y00)) (* 6 (* z z z00 z00 z00)) (* 648 (* y z n n z00 y00)) (* 216 (* y z n n z00 z00)) (* 6 (* y y n z00 z00 z00)) (* 6 (* y y z00 z00 z00)) (* 216 (* z z z y00)) ?x5483 ?x5487 (* 6 (* z z n z00 z00 z00)) ?x5555 ?x5563)))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x1176 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1172 (* z00 z00 z00 y00)))
 (let ((?x1082 (* (- 36) (* z00 y00 x00))))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x881 (* z00 z00 x00)))
 (let ((?x1132 (* (- 18) ?x881)))
 (let ((?x798 (* y y y)))
 (let ((?x837 (* (- 4) ?x798)))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x753 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x695 (* z00 z00 y00)))
 (let ((?x1233 (* (- 10) ?x695)))
 (let ((?x670 (* z00 y00 y00)))
 (let ((?x705 (* (- 12) ?x670)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x531 (* z00 x00)))
 (let ((?x449 (* 36 ?x531)))
 (let ((?x494 (* z00 y00)))
 (let ((?x859 (* 24 ?x494)))
 (let ((?x441 (* y00 x00)))
 (let ((?x432 (* 216 ?x441)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1299 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x432 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x859 ?x449 ?x780 ?x1032 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x705 ?x1233 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x753 ?x785 ?x837 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1132 (* (- 216) (* x y00)) ?x967 (* (- 12) (* y y y00)) ?x1082 (* (- 216) (* x x00)) ?x1172 ?x1176 (* 36 (* x z00 y00)) ?x1279)))
 (let (($x1304 (= ?x1299 0)))
 (let ((?x882 (* 3 ?x881)))
 (let ((?x944 (* 3 ?x695)))
 (let ((?x677 (* (- 1) ?x670)))
 (let ((?x607 (* 18 (* z x00))))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x769 (* (- 6) ?x494)))
 (let ((?x468 (* z y00)))
 (let ((?x469 (* 12 ?x468)))
 (let ((?x502 (* (- 18) (* x z))))
 (let ((?x442 (* (- 18) ?x441)))
 (let ((?x437 (* y z)))
 (let ((?x461 (* (- 12) ?x437)))
 (let ((?x135 (* y y z)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1000 (+ ?x64 ?x71 ?x516 ?x573 (* (- 3) (* y z00 z00)) ?x135 ?x461 ?x442 (* (- 18) (* x y)) ?x502 ?x469 ?x769 ?x864 ?x607 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x677 ?x944 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x882 (* 18 (* x y00)) ?x941 (* (- 2) (* z y00 y00)))))
 (let (($x1007 (= ?x1000 0)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x532 (* 18 ?x531)))
 (let ((?x610 (* 6 ?x494)))
 (let ((?x103 (* y z z00)))
 (let ((?x749 (+ ?x64 ?x71 ?x516 ?x573 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x461 ?x502 ?x469 ?x610 ?x532 ?x538 ?x590 ?x607 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x695 (* (- 18) (* x z00)))))
 (let (($x754 (= ?x749 0)))
 (let ((?x495 (* 18 ?x494)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x589 (+ ?x64 ?x71 ?x516 ?x446 ?x573 ?x76 ?x457 (* (- 6) ?x437) (* (- 12) ?x468) ?x495 (* (- 6) (* z z00)))))
 (let (($x594 (= ?x589 0)))
 (let ((?x50 (* z z)))
 (let ((?x425 (* (- 1) ?x50)))
 (let ((?x424 (* (- 12) y00)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x427 (= (+ ?x45 ?x46 ?x423 ?x424 ?x425 ?x353) 0)))
 (let (($x345 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x4333 (and $x345 $x427 $x594 $x754 $x1007 $x1304 (not (= ?x6610 0)))))
 (let ((?x1073 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)))
 (let ((?x2070 (* z00 z00 ?x462 ?x448 ?x448 ?x219 ?x219)))
 (let ((?x1796 (+ ?x3865 (* (- 6) ?x4132) (* (- 18) (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* (- 6) ?x4222) (* (- 1) ?x3905) (* (- 6) (* z00 ?x462 ?x448 ?x448 ?x219 ?x219)) (* 6 ?x4249) (* (- 6) ?x3981) (* (- 108) ?x4267) (* 108 ?x4310) (* 108 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* 18 (* y00 z00 ?x462 ?x448 ?x219 ?x219)) ?x1834 (* (- 12) (* y00 ?x462 ?x448 ?x448 ?x219 ?x219)) (* 6 ?x1887) (* 18 ?x1612) (* (- 72) ?x1964) (* 72 (* ?x462 ?x448 ?x219 ?x219 ?x219)) (* 108 (* ?x462 ?x448 ?x219 ?x219 ?x216)) (* 12 ?x1688) (* 72 ?x1639) (* (- 18) ?x2059) ?x2070 (* (- 108) (* x00 ?x462 ?x448 ?x219 ?x219)) (* 12 ?x2091) (* (- 12) ?x2112) (* 72 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* (- 6) (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* (- 108) ?x3411) (* (- 72) ?x681) (* (- 1) ?x760) (* 6 ?x860) ?x1073 (* (- 72) ?x1177) (* 6 ?x1230) (* (- 6) ?x1480) (* (- 72) (* y00 ?x462 ?x448 ?x219 ?x219)) (* (- 1) ?x1514) (* 6 ?x2377) (* 6 (* z00 z00 ?x462 ?x448 ?x219 ?x219)) (* 72 ?x3267) (* (- 108) ?x3629) (* 108 ?x4402) (* (- 1) (* z00 z00 z00 ?x462 ?x448 ?x219 ?x219)))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1948 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1385 (= ?x1948 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x1571 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1423 (* (- 108) x)))
 (let ((?x3759 (* x00 z)))
 (let ((?x4238 (* (- 18) ?x3759)))
 (let ((?x4355 (* 36 ?x561)))
 (let ((?x3875 (* z y)))
 (let ((?x4232 (* 12 ?x3875)))
 (let ((?x3768 (* z00 y)))
 (let ((?x3847 (* (- 6) ?x3768)))
 (let ((?x4036 (* y00 z00)))
 (let ((?x4116 (* 6 ?x4036)))
 (let ((?x4017 (* y00 z)))
 (let ((?x4032 (* (- 12) ?x4017)))
 (let ((?x4196 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x3729 (* z x)))
 (let ((?x1635 (* 18 ?x3729)))
 (let ((?x4100 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x1635 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x4196 ?x4032 ?x4116 (* (- 36) (* y00 y)) ?x3847 ?x4232 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x4355 ?x4238 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1423 ?x67 (* (- 18) (* y00 x)) ?x1571 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x3900 (* z00 z00 y)))
 (let ((?x3769 (* 6 ?x3768)))
 (let ((?x3833 (* (- 6) ?x4036)))
 (let ((?x4239 (* 24 ?x561)))
 (let ((?x2919 (* y00 z00 z)))
 (let ((?x3743 (+ ?x2919 ?x4232 ?x1635 (* (- 18) (* x00 z00)) (* (- 12) ?x535) ?x4239 ?x4238 ?x4032 ?x3833 (* (- 12) (* y00 y)) ?x1423 ?x67 ?x3769 ?x1571 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x3900)))
 (let ((?x4019 (* 12 ?x4017)))
 (let ((?x1417 (* (- 6) ?x353)))
 (let ((?x1761 (+ (* 6 ?x3875) ?x55 ?x1417 ?x4019 (* (- 18) ?x4036) ?x1423 ?x67 (* 6 (* z00 z)) ?x1571 ?x74 (* (- 1) (* z00 z00 z)))))
 (let (($x1813 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x353 ?x424 ?x45 ?x46 ?x423 ?x425) 0) (= ?x1761 0) (= ?x3743 0) (= ?x4100 0) $x1385 (not (= ?x1796 0)))))
 (rewrite (= $x1813 $x4333)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x4262 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x219 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x4466 (* z00 z00 z00 ?x462 ?x448 ?x219 ?x219)))
 (let ((?x216 (+ x y)))
 (let ((?x4402 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x4432 (* (- 108) ?x4402)))
 (let ((?x3629 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216)))
 (let ((?x3632 (* 108 ?x3629)))
 (let ((?x3267 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x5179 (* (- 72) ?x3267)))
 (let ((?x2377 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* (- 6) ?x2377)))
 (let ((?x1514 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1480 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1482 (* 6 ?x1480)))
 (let ((?x1230 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216)))
 (let ((?x1302 (* (- 6) ?x1230)))
 (let ((?x1177 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216)))
 (let ((?x1179 (* 72 ?x1177)))
 (let ((?x860 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x965 (* (- 6) ?x860)))
 (let ((?x760 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x681 (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x683 (* 72 ?x681)))
 (let ((?x3411 (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x1388 (* 108 ?x3411)))
 (let ((?x2112 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x2113 (* 12 ?x2112)))
 (let ((?x2091 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x2100 (* (- 12) ?x2091)))
 (let ((?x2059 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x2060 (* 18 ?x2059)))
 (let ((?x1639 (* y00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1650 (* (- 72) ?x1639)))
 (let ((?x1688 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x2033 (* (- 12) ?x1688)))
 (let ((?x1964 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1615 (* 72 ?x1964)))
 (let ((?x1612 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1384 (* (- 18) ?x1612)))
 (let ((?x1887 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1911 (* (- 6) ?x1887)))
 (let ((?x1834 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1841 (* (- 1) ?x1834)))
 (let ((?x4310 (* x00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x4346 (* (- 108) ?x4310)))
 (let ((?x4267 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x3828 (* 108 ?x4267)))
 (let ((?x3981 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x3164 (* 6 ?x3981)))
 (let ((?x4249 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x4230 (* (- 6) ?x4249)))
 (let ((?x3905 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x4222 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x3899 (* 6 ?x4222)))
 (let ((?x4132 (* ?x462 ?x448 ?x448 ?x219 ?x219 ?x219)))
 (let ((?x3764 (* 6 ?x4132)))
 (let ((?x3865 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x4041 (* (- 1) ?x3865)))
 (let ((?x4482 (+ ?x4041 ?x3764 (* 18 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) ?x3899 ?x3905 (* 6 (* z00 ?x462 ?x448 ?x448 ?x219 ?x219)) ?x4230 ?x3164 ?x3828 ?x4346 (* (- 108) (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* (- 18) (* y00 z00 ?x462 ?x448 ?x219 ?x219)) ?x1841 (* 12 (* y00 ?x462 ?x448 ?x448 ?x219 ?x219)) ?x1911 ?x1384 ?x1615 (* (- 72) (* ?x462 ?x448 ?x219 ?x219 ?x219)) (* (- 108) (* ?x462 ?x448 ?x219 ?x219 ?x216)) ?x2033 ?x1650 ?x2060 (* (- 1) (* z00 z00 ?x462 ?x448 ?x448 ?x219 ?x219)) (* 108 (* x00 ?x462 ?x448 ?x219 ?x219)) ?x2100 ?x2113 (* (- 72) (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* 6 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) ?x1388 ?x683 ?x760 ?x965 (* (- 1) (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) ?x1179 ?x1302 ?x1482 (* 72 (* y00 ?x462 ?x448 ?x219 ?x219)) ?x1514 ?x2437 (* (- 6) (* z00 z00 ?x462 ?x448 ?x219 ?x219)) ?x5179 ?x3632 ?x4432 ?x4466)))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x798 (* y y y)))
 (let ((?x837 (* (- 4) ?x798)))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x1948 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1385 (= ?x1948 0)))
 (let ((?x4353 (* y00 z y)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x3931 (* z y y)))
 (let ((?x3759 (* x00 z)))
 (let ((?x3853 (* 18 ?x3759)))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x3875 (* z y)))
 (let ((?x4016 (* (- 12) ?x3875)))
 (let ((?x3768 (* z00 y)))
 (let ((?x3769 (* 6 ?x3768)))
 (let ((?x4036 (* y00 z00)))
 (let ((?x3833 (* (- 6) ?x4036)))
 (let ((?x4017 (* y00 z)))
 (let ((?x4019 (* 12 ?x4017)))
 (let ((?x3729 (* z x)))
 (let ((?x4042 (* (- 18) ?x3729)))
 (let ((?x1577 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x4042 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x4019 ?x3833 (* 36 (* y00 y)) ?x3769 ?x4016 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x864 ?x3853 ?x3931 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x516 (* 18 (* y00 x)) ?x71 ?x573 ?x4353 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x4212 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x3847 (* (- 6) ?x3768)))
 (let ((?x4116 (* 6 ?x4036)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x4226 (+ (* (- 1) (* y00 z00 z)) ?x4016 ?x4042 (* 18 (* x00 z00)) ?x538 ?x590 ?x3853 ?x4019 ?x4116 (* 12 (* y00 y)) ?x64 ?x516 ?x3847 ?x71 ?x573 ?x99 (* (- 18) (* z00 x)) ?x4212 (* (- 1) (* z00 z00 y)))))
 (let ((?x4094 (* z00 z00 z)))
 (let ((?x4032 (* (- 12) ?x4017)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x3756 (+ (* (- 6) ?x3875) ?x446 ?x457 ?x4032 (* 18 ?x4036) ?x64 ?x516 (* (- 6) (* z00 z)) ?x71 ?x573 ?x4094)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1832 (* (- 1) ?x353)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1832 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x3756 0) (= ?x4226 0) (= ?x1577 0) $x1385 (not (= ?x4482 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1818 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x219 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x4466 (* z00 z00 z00 ?x462 ?x448 ?x219 ?x219)))
 (let ((?x216 (+ x y)))
 (let ((?x4402 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1514 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1073 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)))
 (let ((?x760 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x2070 (* z00 z00 ?x462 ?x448 ?x448 ?x219 ?x219)))
 (let ((?x1834 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x3865 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1796 (+ ?x3865 (* (- 6) (* ?x462 ?x448 ?x448 ?x219 ?x219 ?x219)) (* (- 18) (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* (- 6) (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)) (* (- 1) (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)) (* (- 6) (* z00 ?x462 ?x448 ?x448 ?x219 ?x219)) (* 6 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)) (* (- 6) (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)) (* (- 108) (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)) (* 108 (* x00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)) (* 108 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* 18 (* y00 z00 ?x462 ?x448 ?x219 ?x219)) ?x1834 (* (- 12) (* y00 ?x462 ?x448 ?x448 ?x219 ?x219)) (* 6 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)) (* 18 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)) (* (- 72) (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)) (* 72 (* ?x462 ?x448 ?x219 ?x219 ?x219)) (* 108 (* ?x462 ?x448 ?x219 ?x219 ?x216)) (* 12 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)) (* 72 (* y00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)) (* (- 18) (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)) ?x2070 (* (- 108) (* x00 ?x462 ?x448 ?x219 ?x219)) (* 12 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)) (* (- 12) (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)) (* 72 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* (- 6) (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* (- 108) (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216 ?x216)) (* (- 72) (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)) (* (- 1) ?x760) (* 6 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)) ?x1073 (* (- 72) (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216)) (* 6 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216)) (* (- 6) (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)) (* (- 72) (* y00 ?x462 ?x448 ?x219 ?x219)) (* (- 1) ?x1514) (* 6 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x462 ?x448 ?x219 ?x219)) (* 72 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)) (* (- 108) (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216)) (* 108 ?x4402) (* (- 1) ?x4466))))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x798 (* y y y)))
 (let ((?x837 (* (- 4) ?x798)))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x1948 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1385 (= ?x1948 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x1571 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1423 (* (- 108) x)))
 (let ((?x3759 (* x00 z)))
 (let ((?x4238 (* (- 18) ?x3759)))
 (let ((?x4355 (* 36 ?x561)))
 (let ((?x3875 (* z y)))
 (let ((?x4232 (* 12 ?x3875)))
 (let ((?x3768 (* z00 y)))
 (let ((?x3847 (* (- 6) ?x3768)))
 (let ((?x4036 (* y00 z00)))
 (let ((?x4116 (* 6 ?x4036)))
 (let ((?x4017 (* y00 z)))
 (let ((?x4032 (* (- 12) ?x4017)))
 (let ((?x4196 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x3729 (* z x)))
 (let ((?x1635 (* 18 ?x3729)))
 (let ((?x4100 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x1635 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x4196 ?x4032 ?x4116 (* (- 36) (* y00 y)) ?x3847 ?x4232 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x4355 ?x4238 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1423 ?x67 (* (- 18) (* y00 x)) ?x1571 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x3900 (* z00 z00 y)))
 (let ((?x3769 (* 6 ?x3768)))
 (let ((?x3833 (* (- 6) ?x4036)))
 (let ((?x4239 (* 24 ?x561)))
 (let ((?x2919 (* y00 z00 z)))
 (let ((?x3743 (+ ?x2919 ?x4232 ?x1635 (* (- 18) (* x00 z00)) (* (- 12) ?x535) ?x4239 ?x4238 ?x4032 ?x3833 (* (- 12) (* y00 y)) ?x1423 ?x67 ?x3769 ?x1571 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x3900)))
 (let ((?x4019 (* 12 ?x4017)))
 (let ((?x353 (* z00 z00)))
 (let ((?x1417 (* (- 6) ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1761 (+ (* 6 ?x3875) ?x55 ?x1417 ?x4019 (* (- 18) ?x4036) ?x1423 ?x67 (* 6 (* z00 z)) ?x1571 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x425 (* (- 1) ?x50)))
 (let ((?x423 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x424 (* (- 12) y00)))
 (let (($x1813 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x353 ?x424 ?x45 ?x46 ?x423 ?x425) 0) (= ?x1761 0) (= ?x3743 0) (= ?x4100 0) $x1385 (not (= ?x1796 0)))))
 (let ((?x4432 (* (- 108) ?x4402)))
 (let ((?x3629 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216)))
 (let ((?x3632 (* 108 ?x3629)))
 (let ((?x3267 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x5179 (* (- 72) ?x3267)))
 (let ((?x2377 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* (- 6) ?x2377)))
 (let ((?x1480 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1482 (* 6 ?x1480)))
 (let ((?x1230 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216)))
 (let ((?x1302 (* (- 6) ?x1230)))
 (let ((?x1177 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216)))
 (let ((?x1179 (* 72 ?x1177)))
 (let ((?x860 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x965 (* (- 6) ?x860)))
 (let ((?x681 (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x683 (* 72 ?x681)))
 (let ((?x3411 (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x1388 (* 108 ?x3411)))
 (let ((?x2112 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x2113 (* 12 ?x2112)))
 (let ((?x2091 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x2100 (* (- 12) ?x2091)))
 (let ((?x2059 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x2060 (* 18 ?x2059)))
 (let ((?x1639 (* y00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1650 (* (- 72) ?x1639)))
 (let ((?x1688 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x2033 (* (- 12) ?x1688)))
 (let ((?x1964 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1615 (* 72 ?x1964)))
 (let ((?x1612 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1384 (* (- 18) ?x1612)))
 (let ((?x1887 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1911 (* (- 6) ?x1887)))
 (let ((?x1841 (* (- 1) ?x1834)))
 (let ((?x4310 (* x00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x4346 (* (- 108) ?x4310)))
 (let ((?x4267 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x3828 (* 108 ?x4267)))
 (let ((?x3981 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x3164 (* 6 ?x3981)))
 (let ((?x4249 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x4230 (* (- 6) ?x4249)))
 (let ((?x3905 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x4222 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x3899 (* 6 ?x4222)))
 (let ((?x4132 (* ?x462 ?x448 ?x448 ?x219 ?x219 ?x219)))
 (let ((?x3764 (* 6 ?x4132)))
 (let ((?x4041 (* (- 1) ?x3865)))
 (let ((?x4482 (+ ?x4041 ?x3764 (* 18 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) ?x3899 ?x3905 (* 6 (* z00 ?x462 ?x448 ?x448 ?x219 ?x219)) ?x4230 ?x3164 ?x3828 ?x4346 (* (- 108) (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* (- 18) (* y00 z00 ?x462 ?x448 ?x219 ?x219)) ?x1841 (* 12 (* y00 ?x462 ?x448 ?x448 ?x219 ?x219)) ?x1911 ?x1384 ?x1615 (* (- 72) (* ?x462 ?x448 ?x219 ?x219 ?x219)) (* (- 108) (* ?x462 ?x448 ?x219 ?x219 ?x216)) ?x2033 ?x1650 ?x2060 (* (- 1) ?x2070) (* 108 (* x00 ?x462 ?x448 ?x219 ?x219)) ?x2100 ?x2113 (* (- 72) (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* 6 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) ?x1388 ?x683 ?x760 ?x965 (* (- 1) ?x1073) ?x1179 ?x1302 ?x1482 (* 72 (* y00 ?x462 ?x448 ?x219 ?x219)) ?x1514 ?x2437 (* (- 6) (* z00 z00 ?x462 ?x448 ?x219 ?x219)) ?x5179 ?x3632 ?x4432 ?x4466)))
 (let ((?x4353 (* y00 z y)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x3931 (* z y y)))
 (let ((?x3853 (* 18 ?x3759)))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x4016 (* (- 12) ?x3875)))
 (let ((?x4042 (* (- 18) ?x3729)))
 (let ((?x1577 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x4042 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) ?x4196) ?x4019 ?x3833 (* 36 (* y00 y)) ?x3769 ?x4016 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x864 ?x3853 ?x3931 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x516 (* 18 (* y00 x)) ?x71 ?x573 ?x4353 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) ?x3900))))
 (let ((?x4212 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x4226 (+ (* (- 1) ?x2919) ?x4016 ?x4042 (* 18 (* x00 z00)) ?x538 ?x590 ?x3853 ?x4019 ?x4116 (* 12 (* y00 y)) ?x64 ?x516 ?x3847 ?x71 ?x573 ?x99 (* (- 18) (* z00 x)) ?x4212 (* (- 1) ?x3900))))
 (let ((?x4094 (* z00 z00 z)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x3756 (+ (* (- 6) ?x3875) ?x446 ?x457 ?x4032 (* 18 ?x4036) ?x64 ?x516 (* (- 6) (* z00 z)) ?x71 ?x573 ?x4094)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1832 (* (- 1) ?x353)))
 (let (($x3908 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1832 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x3756 0) (= ?x4226 0) (= ?x1577 0) $x1385 (not (= ?x4482 0)))))
 (rewrite (= $x3908 $x1813)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x300 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x217 (+ z 6)))
 (let ((?x219 (+ y z)))
 (let ((?x215 (+ n 1)))
 (let ((?x216 (+ x y)))
 (let ((?x29 (- 1)))
 (let ((?x225 (+ (* ?x29 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00 z00) (* 6 ?x215 ?x219 ?x219 ?x219 ?x217 ?x217) (* 18 ?x215 ?x215 ?x215 ?x216 y00 ?x217 ?x217 z00) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x219 ?x217 ?x217 ?x217) (* ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 z00 z00) (* 6 ?x215 ?x219 ?x219 ?x217 ?x217 z00))))
 (let ((?x230 (+ (- ?x225 (* 6 ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 z00)) (* 6 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 ?x217 ?x217 z00 z00) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217))))
 (let ((?x236 (- (- ?x230 (* 108 ?x215 ?x215 ?x216 ?x216 x00 ?x219 ?x219 ?x217 ?x217)) (* 108 ?x215 ?x215 ?x215 ?x216 x00 ?x217 ?x217))))
 (let ((?x238 (- (- ?x236 (* 18 ?x215 ?x219 ?x219 y00 ?x217 z00)) (* ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 ?x217 ?x217 z00 z00 z00))))
 (let ((?x243 (- (+ ?x238 (* 12 ?x215 ?x219 ?x219 y00 ?x217 ?x217)) (* 6 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 ?x217 ?x217 ?x217 z00))))
 (let ((?x244 (- ?x243 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x217 ?x217 z00))))
 (let ((?x251 (- (+ ?x244 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x217 ?x217)) (* 72 ?x215 ?x219 ?x219 ?x219 ?x217))))
 (let ((?x253 (- (- ?x251 (* 108 ?x215 ?x216 ?x219 ?x219 ?x217)) (* 12 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 y00 ?x217 ?x217 ?x217))))
 (let ((?x256 (+ (- ?x253 (* 72 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 y00 ?x217 ?x217)) (* 18 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 y00 ?x217 ?x217 z00))))
 (let ((?x260 (+ (- ?x256 (* ?x215 ?x219 ?x219 ?x217 ?x217 z00 z00)) (* 108 ?x215 x00 ?x219 ?x219 ?x217))))
 (let ((?x264 (+ (- ?x260 (* 12 ?x215 ?x215 ?x215 ?x216 y00 ?x217 ?x217 ?x217)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x217 ?x217 ?x217))))
 (let ((?x271 (+ (- ?x264 (* 72 ?x215 ?x215 ?x215 ?x216 y00 ?x217 ?x217)) (* 6 ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 z00 z00) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x219 ?x219 ?x217 ?x217) (* 72 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 ?x219 ?x217 ?x217) (* ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x274 (- ?x271 (* 6 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 ?x219 ?x217 ?x217 ?x217))))
 (let ((?x277 (+ (- ?x274 (* ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 z00 z00 z00)) (* 72 ?x215 ?x215 ?x215 ?x216 ?x219 ?x217 ?x217))))
 (let ((?x283 (+ (- ?x277 (* 6 ?x215 ?x215 ?x215 ?x216 ?x219 ?x217 ?x217 ?x217)) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00) (* 72 ?x215 ?x219 ?x219 y00 ?x217) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 z00 z00 z00))))
 (let ((?x287 (- ?x283 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 z00 z00))))
 (let ((?x289 (- (- ?x287 (* 6 ?x215 ?x219 ?x219 ?x217 z00 z00)) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x219 ?x217 ?x217))))
 (let ((?x293 (- (+ ?x289 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217)) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let (($x298 (or (not (= (+ ?x293 (* ?x215 ?x219 ?x219 ?x217 z00 z00 z00)) 0)))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* ?x29 z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) $x298))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x4246 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x219 (+ y z)))
 (let ((?x448 (+ 6 z)))
 (let ((?x462 (+ 1 n)))
 (let ((?x4466 (* z00 z00 z00 ?x462 ?x448 ?x219 ?x219)))
 (let ((?x216 (+ x y)))
 (let ((?x4402 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x4432 (* (- 108) ?x4402)))
 (let ((?x3629 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216)))
 (let ((?x3632 (* 108 ?x3629)))
 (let ((?x3267 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x5179 (* (- 72) ?x3267)))
 (let ((?x2377 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* (- 6) ?x2377)))
 (let ((?x1514 (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1480 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1482 (* 6 ?x1480)))
 (let ((?x1230 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216)))
 (let ((?x1302 (* (- 6) ?x1230)))
 (let ((?x1177 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x219 ?x216)))
 (let ((?x1179 (* 72 ?x1177)))
 (let ((?x860 (* ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x965 (* (- 6) ?x860)))
 (let ((?x760 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x681 (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x683 (* 72 ?x681)))
 (let ((?x3411 (* ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x1388 (* 108 ?x3411)))
 (let ((?x2112 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x2113 (* 12 ?x2112)))
 (let ((?x2091 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x2100 (* (- 12) ?x2091)))
 (let ((?x2059 (* y00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x2060 (* 18 ?x2059)))
 (let ((?x1639 (* y00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1650 (* (- 72) ?x1639)))
 (let ((?x1688 (* y00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x2033 (* (- 12) ?x1688)))
 (let ((?x1964 (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1615 (* 72 ?x1964)))
 (let ((?x1612 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x1384 (* (- 18) ?x1612)))
 (let ((?x1887 (* z00 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1911 (* (- 6) ?x1887)))
 (let ((?x1834 (* z00 z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x1841 (* (- 1) ?x1834)))
 (let ((?x4310 (* x00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x4346 (* (- 108) ?x4310)))
 (let ((?x4267 (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x3828 (* 108 ?x4267)))
 (let ((?x3981 (* z00 z00 ?x462 ?x462 ?x448 ?x448 ?x219 ?x219 ?x216 ?x216)))
 (let ((?x3164 (* 6 ?x3981)))
 (let ((?x4249 (* z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x4230 (* (- 6) ?x4249)))
 (let ((?x3905 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216)))
 (let ((?x4222 (* ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x219 ?x216 ?x216 ?x216)))
 (let ((?x3899 (* 6 ?x4222)))
 (let ((?x4132 (* ?x462 ?x448 ?x448 ?x219 ?x219 ?x219)))
 (let ((?x3764 (* 6 ?x4132)))
 (let ((?x3865 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x448 ?x216 ?x216 ?x216)))
 (let ((?x4041 (* (- 1) ?x3865)))
 (let ((?x4482 (+ ?x4041 ?x3764 (* 18 (* y00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) ?x3899 ?x3905 (* 6 (* z00 ?x462 ?x448 ?x448 ?x219 ?x219)) ?x4230 ?x3164 ?x3828 ?x4346 (* (- 108) (* x00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* (- 18) (* y00 z00 ?x462 ?x448 ?x219 ?x219)) ?x1841 (* 12 (* y00 ?x462 ?x448 ?x448 ?x219 ?x219)) ?x1911 ?x1384 ?x1615 (* (- 72) (* ?x462 ?x448 ?x219 ?x219 ?x219)) (* (- 108) (* ?x462 ?x448 ?x219 ?x219 ?x216)) ?x2033 ?x1650 ?x2060 (* (- 1) (* z00 z00 ?x462 ?x448 ?x448 ?x219 ?x219)) (* 108 (* x00 ?x462 ?x448 ?x219 ?x219)) ?x2100 ?x2113 (* (- 72) (* y00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) (* 6 (* z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) ?x1388 ?x683 ?x760 ?x965 (* (- 1) (* z00 z00 z00 ?x462 ?x462 ?x462 ?x448 ?x448 ?x216)) ?x1179 ?x1302 ?x1482 (* 72 (* y00 ?x462 ?x448 ?x219 ?x219)) ?x1514 ?x2437 (* (- 6) (* z00 z00 ?x462 ?x448 ?x219 ?x219)) ?x5179 ?x3632 ?x4432 ?x4466)))
 (let ((?x1279 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x561 (* y00 y00)))
 (let ((?x1032 (* 96 ?x561)))
 (let ((?x967 (* 16 (* y00 y00 y00))))
 (let ((?x798 (* y y y)))
 (let ((?x837 (* (- 4) ?x798)))
 (let ((?x785 (* 108 (* x x))))
 (let ((?x535 (* y y)))
 (let ((?x780 (* 24 ?x535)))
 (let ((?x1948 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x780 ?x785 ?x837 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x967 (* (- 6) (* z00 y y)) ?x1032 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1279 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1385 (= ?x1948 0)))
 (let ((?x4353 (* y00 z y)))
 (let ((?x573 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x516 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x3931 (* z y y)))
 (let ((?x3759 (* x00 z)))
 (let ((?x3853 (* 18 ?x3759)))
 (let ((?x864 (* (- 36) ?x561)))
 (let ((?x3875 (* z y)))
 (let ((?x4016 (* (- 12) ?x3875)))
 (let ((?x3768 (* z00 y)))
 (let ((?x3769 (* 6 ?x3768)))
 (let ((?x4036 (* y00 z00)))
 (let ((?x3833 (* (- 6) ?x4036)))
 (let ((?x4017 (* y00 z)))
 (let ((?x4019 (* 12 ?x4017)))
 (let ((?x3729 (* z x)))
 (let ((?x4042 (* (- 18) ?x3729)))
 (let ((?x1577 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x4042 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x4019 ?x3833 (* 36 (* y00 y)) ?x3769 ?x4016 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x864 ?x3853 ?x3931 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x516 (* 18 (* y00 x)) ?x71 ?x573 ?x4353 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x4212 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x3847 (* (- 6) ?x3768)))
 (let ((?x4116 (* 6 ?x4036)))
 (let ((?x590 (* (- 24) ?x561)))
 (let ((?x538 (* 12 ?x535)))
 (let ((?x4226 (+ (* (- 1) (* y00 z00 z)) ?x4016 ?x4042 (* 18 (* x00 z00)) ?x538 ?x590 ?x3853 ?x4019 ?x4116 (* 12 (* y00 y)) ?x64 ?x516 ?x3847 ?x71 ?x573 ?x99 (* (- 18) (* z00 x)) ?x4212 (* (- 1) (* z00 z00 y)))))
 (let ((?x4094 (* z00 z00 z)))
 (let ((?x4032 (* (- 12) ?x4017)))
 (let ((?x353 (* z00 z00)))
 (let ((?x457 (* 6 ?x353)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x446 (* (- 1) ?x55)))
 (let ((?x3756 (+ (* (- 6) ?x3875) ?x446 ?x457 ?x4032 (* 18 ?x4036) ?x64 ?x516 (* (- 6) (* z00 z)) ?x71 ?x573 ?x4094)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1832 (* (- 1) ?x353)))
 (let (($x3908 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1832 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x3756 0) (= ?x4226 0) (= ?x1577 0) $x1385 (not (= ?x4482 0)))))
 (let ((?x217 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x29 (- 1)))
 (let ((?x225 (+ (* ?x29 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00 z00) (* 6 ?x215 ?x219 ?x219 ?x219 ?x217 ?x217) (* 18 ?x215 ?x215 ?x215 ?x216 y00 ?x217 ?x217 z00) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x219 ?x217 ?x217 ?x217) (* ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 z00 z00) (* 6 ?x215 ?x219 ?x219 ?x217 ?x217 z00))))
 (let ((?x230 (+ (- ?x225 (* 6 ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 z00)) (* 6 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 ?x217 ?x217 z00 z00) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217))))
 (let ((?x236 (- (- ?x230 (* 108 ?x215 ?x215 ?x216 ?x216 x00 ?x219 ?x219 ?x217 ?x217)) (* 108 ?x215 ?x215 ?x215 ?x216 x00 ?x217 ?x217))))
 (let ((?x238 (- (- ?x236 (* 18 ?x215 ?x219 ?x219 y00 ?x217 z00)) (* ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 ?x217 ?x217 z00 z00 z00))))
 (let ((?x243 (- (+ ?x238 (* 12 ?x215 ?x219 ?x219 y00 ?x217 ?x217)) (* 6 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 ?x217 ?x217 ?x217 z00))))
 (let ((?x244 (- ?x243 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x217 ?x217 z00))))
 (let ((?x251 (- (+ ?x244 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x217 ?x217)) (* 72 ?x215 ?x219 ?x219 ?x219 ?x217))))
 (let ((?x253 (- (- ?x251 (* 108 ?x215 ?x216 ?x219 ?x219 ?x217)) (* 12 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 y00 ?x217 ?x217 ?x217))))
 (let ((?x256 (+ (- ?x253 (* 72 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 y00 ?x217 ?x217)) (* 18 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 y00 ?x217 ?x217 z00))))
 (let ((?x260 (+ (- ?x256 (* ?x215 ?x219 ?x219 ?x217 ?x217 z00 z00)) (* 108 ?x215 x00 ?x219 ?x219 ?x217))))
 (let ((?x264 (+ (- ?x260 (* 12 ?x215 ?x215 ?x215 ?x216 y00 ?x217 ?x217 ?x217)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x217 ?x217 ?x217))))
 (let ((?x271 (+ (- ?x264 (* 72 ?x215 ?x215 ?x215 ?x216 y00 ?x217 ?x217)) (* 6 ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 z00 z00) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x219 ?x219 ?x217 ?x217) (* 72 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 ?x219 ?x217 ?x217) (* ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x274 (- ?x271 (* 6 ?x215 ?x215 ?x216 ?x216 ?x219 ?x219 ?x219 ?x217 ?x217 ?x217))))
 (let ((?x277 (+ (- ?x274 (* ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 z00 z00 z00)) (* 72 ?x215 ?x215 ?x215 ?x216 ?x219 ?x217 ?x217))))
 (let ((?x283 (+ (- ?x277 (* 6 ?x215 ?x215 ?x215 ?x216 ?x219 ?x217 ?x217 ?x217)) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00) (* 72 ?x215 ?x219 ?x219 y00 ?x217) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 z00 z00 z00))))
 (let ((?x287 (- ?x283 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 z00 z00))))
 (let ((?x289 (- (- ?x287 (* 6 ?x215 ?x219 ?x219 ?x217 z00 z00)) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x219 ?x217 ?x217))))
 (let ((?x293 (- (+ ?x289 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217)) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let (($x298 (or (not (= (+ ?x293 (* ?x215 ?x219 ?x219 ?x217 z00 z00 z00)) 0)))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* ?x29 z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x299 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) $x298)))
 (rewrite (= $x299 $x3908))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x301 (asserted $x300)))
 (let ((@x4214 (mp (mp @x301 (quant-intro (proof-bind ?x4246) (= $x300 $x4262)) $x4262) (rewrite (= $x4262 $x4262)) $x4262)))
 (let ((@x4560 (mp (mp @x4214 (quant-intro (proof-bind ?x1818) (= $x4262 $x1442)) $x1442) (quant-intro (proof-bind ?x6619) (= $x1442 $x6617)) $x6617)))
 (let ((@x3368 (mp (mp~ @x4560 (sk (~ $x6617 $x3263)) $x3263) (rewrite (= $x3263 $x4452)) $x4452)))
 (let ((@x563 (and-elim @x3368 $x5501)))
 (let ((@x2765 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5501) $x3584)) @x563 $x3584)))
 (let (($x3297 (>= ?x5496 0)))
 (let ((@x3194 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5501) $x3297)) @x563 $x3297)))
 (let (($x3579 (<= ?x3486 0)))
 (let ((@x3494 (and-elim @x3368 $x3581)))
 (let ((@x3512 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3581) $x3579)) @x3494 $x3579)))
 (let (($x354 (>= ?x3486 0)))
 (let ((@x2701 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3581) $x354)) @x3494 $x354)))
 (let (($x3457 (<= ?x3280 0)))
 (let ((@x3369 (and-elim @x3368 $x3281)))
 (let ((@x3763 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3281) $x3457)) @x3369 $x3457)))
 (let (($x3585 (>= ?x3280 0)))
 (let ((@x3239 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3281) $x3585)) @x3369 $x3585)))
 (let (($x377 (<= ?x556 0)))
 (let ((@x3496 (and-elim @x3368 $x560)))
 (let ((@x4576 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x560) $x377)) @x3496 $x377)))
 (let (($x3370 (>= ?x556 0)))
 (let ((@x4004 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x560) $x3370)) @x3496 $x3370)))
 (let (($x3449 (<= ?x612 0)))
 (let ((@x615 (and-elim @x3368 $x910)))
 (let ((@x3871 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x910) $x3449)) @x615 $x3449)))
 (let (($x916 (>= ?x612 0)))
 (let ((@x3575 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x910) $x916)) @x615 $x916)))
 (let (($x3587 (<= ?x3353 0)))
 (let ((@x3167 (and-elim @x3368 $x3183)))
 (let ((@x3175 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3183) $x3587)) @x3167 $x3587)))
 (let (($x3501 (>= ?x3353 0)))
 (let ((@x3405 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3183) $x3501)) @x3167 $x3501)))
 (let (($x2517 (not (<= ?x4234 0))))
 (let (($x3196 (>= ?x4234 0)))
 (let ((@x4200 ((_ th-lemma arith) (hypothesis (not $x3196)) @x3239 @x3763 @x3405 @x3175 @x3194 @x2765 @x3239 @x3763 @x4004 @x4576 @x2701 @x3512 @x4004 @x4576 @x3405 @x3175 @x2701 @x3512 @x4004 @x4576 @x3405 @x3175 @x3405 @x3175 @x3575 @x3871 @x2701 @x3512 @x4004 @x4576 @x3239 @x3763 @x2701 @x3512 @x3194 @x2765 false)))
 (let ((@x996 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4273 $x2517 (not $x3196))) (and-elim @x3368 $x3361) (or $x2517 (not $x3196)))))
 ((_ th-lemma arith) (unit-resolution @x996 (lemma @x4200 $x3196) $x2517) @x3239 @x3763 @x3405 @x3175 @x3194 @x2765 @x3239 @x3763 @x4004 @x4576 @x2701 @x3512 @x4004 @x4576 @x3405 @x3175 @x2701 @x3512 @x4004 @x4576 @x3405 @x3175 @x3405 @x3175 @x3575 @x3871 @x2701 @x3512 @x4004 @x4576 @x3239 @x3763 @x2701 @x3512 @x3194 @x2765 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        36
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2260
 :arith-nonlinear-bounds    28
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      10
 :arith-tableau-max-columns 343
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                6.00
 :memory                    3.95
 :mk-bool-var               27
 :mk-clause                 22
 :num-allocs                71452571
 :num-checks                1
 :propagations              14
 :rlimit-count              270214
 :time                      0.18
 :total-time                0.20)
