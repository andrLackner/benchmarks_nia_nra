unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x904 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x510 (<= ?x904 (- 6))))
 (let (($x905 (= ?x904 (- 6))))
 (let ((?x109 (* 108 m!1)))
 (let ((?x822 (+ 6 m!1)))
 (let ((?x313 (+ 1 n!0)))
 (let ((?x347 (* 3 (* ?x313 ?x313 ?x313 ?x822 ?x822 ?x822))))
 (let ((?x316 (* (- 1) (* ?x313 ?x313 ?x822 ?x822 ?x822 (+ k!2 m!1)))))
 (let ((?x488 (* 18 (* m!1 m!1))))
 (let ((?x540 (* m!1 m!1 m!1)))
 (let ((?x98 (* 432 n!0)))
 (let ((?x374 (+ c!3 k!2)))
 (let ((?x850 (+ k!2 m!1)))
 (let ((?x445 (* ?x313 ?x313 ?x822 ?x822 ?x850 ?x850 ?x850 ?x850 ?x374 ?x374 ?x374)))
 (let ((?x388 (* n!0 n!0)))
 (let ((?x377 (* 216 ?x388)))
 (let ((?x572 (* 3 (* ?x313 ?x313 ?x313 ?x313 ?x822 ?x822 ?x822))))
 (let ((?x191 (* (- 3) (* ?x313 ?x313 ?x313 ?x822 ?x822 ?x850 ?x850 ?x850 ?x374 ?x374 ?x374))))
 (let ((?x182 (* (- 3) (* ?x313 ?x313 ?x313 ?x313 ?x822 ?x822 ?x850 ?x850 ?x850 ?x374 ?x374 ?x374))))
 (let ((?x843 (* (- 1) (* ?x313 ?x313 ?x822 ?x822 ?x850 ?x850 ?x850 ?x374 ?x374 ?x374))))
 (let ((?x953 (+ (* 108 (* n!0 n!0 m!1)) ?x843 ?x182 ?x191 ?x572 ?x377 ?x445 (* 18 (* n!0 n!0 m!1 m!1)) ?x98 ?x540 ?x488 (* 36 (* n!0 m!1 m!1)) (* 216 (* n!0 m!1)) ?x316 ?x347 ?x109 (* 2 (* n!0 m!1 m!1 m!1)) (* n!0 n!0 m!1 m!1 m!1))))
 (let (($x697 (= ?x953 (- 216))))
 (let (($x461 (not $x697)))
 (let ((?x356 (* (- 1) k!2)))
 (let ((?x495 (+ (* 3 ?x388) (* 3 n!0) ?x356)))
 (let (($x827 (= ?x495 (- 1))))
 (let ((?x839 (+ (* n!0 k!2) (* 2 n!0) (* (- 3) c!3) ?x356)))
 (let (($x833 (= ?x839 (- 1))))
 (let ((?x543 (* k!2 k!2)))
 (let ((?x326 (+ (* 9 n!0) ?x543 (* (- 9) (* n!0 c!3)) (* (- 18) c!3) (* (- 5) k!2))))
 (let (($x325 (= ?x326 (- 4))))
 (let (($x951 (and $x905 $x325 $x833 $x827 $x461)))
 (let ((?x413 (+ ?x109 ?x98 ?x377 ?x843 ?x182 ?x191 ?x572 ?x316 ?x488 (* 216 (* m!1 n!0)) (* 36 (* m!1 m!1 n!0)) ?x347 (* 108 (* m!1 n!0 n!0)) (* 18 (* m!1 m!1 n!0 n!0)) ?x445 (* 2 (* m!1 m!1 m!1 n!0)) ?x540 (* m!1 m!1 m!1 n!0 n!0))))
 (let (($x311 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x753 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x543) (* 9 (* c!3 n!0)))))
 (let (($x426 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x753 4) $x311 (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x388)) 1) (not (= ?x413 (- 216))))))
 (let (($x192 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x732 (* m m m n n)))
 (let ((?x708 (* m m m)))
 (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x305 (+ 6 m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x542 (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x355 (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x343 (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x595 (+ (* 108 m) (* 432 n) (* 216 (* n n)) (* (- 1) (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 3) ?x343) (* (- 3) ?x355) (* 3 (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 1) (* ?x308 ?x308 ?x305 ?x305 ?x305 ?x69)) (* 18 (* m m)) (* 216 (* m n)) (* 36 (* m m n)) (* 3 (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* 108 (* m n n)) (* 18 (* m m n n)) ?x542 (* 2 (* m m m n)) ?x708 ?x732)))
 (let (($x297 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x259 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x210 (* (- 1) ?x49)))
 (let ((?x209 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x207 (= (+ ?x40 ?x44 ?x209 ?x210 (* 9 (* c n))) 4)))
 (let (($x123 (= (+ m (* (- 6) n)) 6)))
 (and $x123 $x207 $x259 $x297 (not (= ?x595 (- 216))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x937 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x305 (+ 6 m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x454 (* ?x308 ?x308 ?x305 ?x305 ?x305 ?x69)))
 (let ((?x68 (+ c k)))
 (let ((?x542 (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x335 (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x343 (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x355 (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x582 (+ (* 3 ?x355) (* 3 ?x343) ?x335 (* (- 3) (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 1) (* ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 3) (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 1) ?x542) ?x454)))
 (let (($x512 (not (= ?x582 0))))
 (let (($x362 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x894 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x210 (* (- 1) ?x49)))
 (let ((?x209 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x123 (= (+ m (* (- 6) n)) 6)))
 (and $x123 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x209 ?x210) 4) $x894 $x362 $x512)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x577 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x732 (* m m m n n)))
 (let ((?x708 (* m m m)))
 (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x305 (+ 6 m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x542 (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x355 (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x343 (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x595 (+ (* 108 m) (* 432 n) (* 216 (* n n)) (* (- 1) (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 3) ?x343) (* (- 3) ?x355) (* 3 (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 1) (* ?x308 ?x308 ?x305 ?x305 ?x305 ?x69)) (* 18 (* m m)) (* 216 (* m n)) (* 36 (* m m n)) (* 3 (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* 108 (* m n n)) (* 18 (* m m n n)) ?x542 (* 2 (* m m m n)) ?x708 ?x732)))
 (let (($x297 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x259 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x210 (* (- 1) ?x49)))
 (let ((?x209 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x207 (= (+ ?x40 ?x44 ?x209 ?x210 (* 9 (* c n))) 4)))
 (let (($x123 (= (+ m (* (- 6) n)) 6)))
 (let (($x360 (and $x123 $x207 $x259 $x297 (not (= ?x595 (- 216))))))
 (let ((?x454 (* ?x308 ?x308 ?x305 ?x305 ?x305 ?x69)))
 (let ((?x335 (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x582 (+ (* 3 ?x355) (* 3 ?x343) ?x335 (* (- 3) (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 1) (* ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 3) (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 1) ?x542) ?x454)))
 (let (($x512 (not (= ?x582 0))))
 (let (($x362 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x894 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x166 (and $x123 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x209 ?x210) 4) $x894 $x362 $x512)))
 (rewrite (= $x166 $x360))))))))))))))))))))))))))))))
 ))
 (let (($x327 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x305 (+ 6 m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x454 (* ?x308 ?x308 ?x305 ?x305 ?x305 ?x69)))
 (let ((?x68 (+ c k)))
 (let ((?x542 (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x335 (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x343 (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x355 (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x582 (+ (* 3 ?x355) (* 3 ?x343) ?x335 (* (- 3) (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 1) (* ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 3) (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 1) ?x542) ?x454)))
 (let (($x512 (not (= ?x582 0))))
 (let (($x362 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x116 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x858 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x123 (= (+ m (* (- 6) n)) 6)))
 (and $x123 (= ?x858 (- 4)) $x116 $x362 $x512)))))))))))))))))) :qid k!34))
 ))
 (let ((?x938 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x305 (+ 6 m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x454 (* ?x308 ?x308 ?x305 ?x305 ?x305 ?x69)))
 (let ((?x68 (+ c k)))
 (let ((?x542 (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x335 (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x343 (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x355 (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x582 (+ (* 3 ?x355) (* 3 ?x343) ?x335 (* (- 3) (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 1) (* ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 3) (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 1) ?x542) ?x454)))
 (let (($x512 (not (= ?x582 0))))
 (let (($x362 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x894 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x210 (* (- 1) ?x49)))
 (let ((?x209 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x123 (= (+ m (* (- 6) n)) 6)))
 (let (($x166 (and $x123 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x209 ?x210) 4) $x894 $x362 $x512)))
 (let (($x116 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x858 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x511 (and $x123 (= ?x858 (- 4)) $x116 $x362 $x512)))
 (rewrite (= $x511 $x166)))))))))))))))))))))))))))
 ))
 (let (($x90 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x73 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x75 (+ (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) ?x73 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x81 (- (- ?x75 (* 3 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)) (* ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x83 (- (- ?x81 (* 3 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)) (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (+ ?x83 (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)) 0))))))))))))))))))) :qid k!34))
 ))
 (let ((?x332 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x305 (+ 6 m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x454 (* ?x308 ?x308 ?x305 ?x305 ?x305 ?x69)))
 (let ((?x68 (+ c k)))
 (let ((?x542 (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x335 (* ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x343 (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x355 (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x582 (+ (* 3 ?x355) (* 3 ?x343) ?x335 (* (- 3) (* ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 1) (* ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 3) (* ?x308 ?x308 ?x308 ?x308 ?x305 ?x305 ?x305)) (* (- 1) ?x542) ?x454)))
 (let (($x512 (not (= ?x582 0))))
 (let (($x362 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x116 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x858 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x123 (= (+ m (* (- 6) n)) 6)))
 (let (($x511 (and $x123 (= ?x858 (- 4)) $x116 $x362 $x512)))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x73 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x75 (+ (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) ?x73 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x81 (- (- ?x75 (* 3 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)) (* ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x83 (- (- ?x81 (* 3 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)) (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x89 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (+ ?x83 (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)) 0))))))
 (rewrite (= $x89 $x511)))))))))))))))))))))))))))))))))
 ))
 (let ((@x91 (asserted $x90)))
 (let ((@x934 (mp (mp @x91 (quant-intro (proof-bind ?x332) (= $x90 $x327)) $x327) (rewrite (= $x327 $x327)) $x327)))
 (let ((@x821 (mp (mp @x934 (quant-intro (proof-bind ?x938) (= $x327 $x937)) $x937) (quant-intro (proof-bind ?x577) (= $x937 $x192)) $x192)))
 (let ((@x446 (mp (mp~ @x821 (sk (~ $x192 $x426)) $x426) (rewrite (= $x426 $x951)) $x951)))
 (let ((@x440 (and-elim @x446 $x905)))
 (let ((@x570 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x905) $x510)) @x440 $x510)))
 (let (($x177 (>= ?x904 (- 6))))
 (let ((@x371 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x905) $x177)) @x440 $x177)))
 (let (($x903 (<= ?x495 (- 1))))
 (let ((@x873 (and-elim @x446 $x827)))
 (let ((@x361 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x827) $x903)) @x873 $x903)))
 (let (($x906 (>= ?x495 (- 1))))
 (let ((@x930 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x827) $x906)) @x873 $x906)))
 (let (($x919 (<= ?x839 (- 1))))
 (let ((@x872 (and-elim @x446 $x833)))
 (let ((@x497 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x833) $x919)) @x872 $x919)))
 (let (($x909 (>= ?x839 (- 1))))
 (let ((@x423 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x833) $x909)) @x872 $x909)))
 (let (($x509 (<= ?x326 (- 4))))
 (let ((@x541 (and-elim @x446 $x325)))
 (let ((@x845 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x325) $x509)) @x541 $x509)))
 (let (($x322 (>= ?x326 (- 4))))
 (let ((@x885 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x325) $x322)) @x541 $x322)))
 (let (($x517 (not (<= ?x953 (- 216)))))
 (let (($x979 (>= ?x953 (- 216))))
 (let ((@x420 ((_ th-lemma arith) (hypothesis (not $x979)) @x930 @x361 @x371 @x570 @x930 @x361 @x423 @x497 @x930 @x361 @x423 @x497 @x885 @x845 @x930 @x361 @x423 @x497 @x371 @x570 @x371 @x570 @x930 @x361 @x371 @x570 false)))
 (let ((@x1269 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x697 $x517 (not $x979))) (and-elim @x446 $x461) (or $x517 (not $x979)))))
 ((_ th-lemma arith) (unit-resolution @x1269 (lemma @x420 $x979) $x517) @x930 @x361 @x371 @x570 @x930 @x361 @x423 @x497 @x930 @x361 @x423 @x497 @x885 @x845 @x930 @x361 @x423 @x497 @x371 @x570 @x371 @x570 @x930 @x361 @x371 @x570 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        15
 :arith-assert-upper        23
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           11
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             194
 :arith-nonlinear-bounds    8
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        2
 :arith-pivots              10
 :arith-row-summations      13
 :arith-tableau-max-columns 49
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 15
 :del-clause                16
 :final-checks              6
 :max-memory                3.80
 :memory                    3.30
 :mk-bool-var               35
 :mk-clause                 16
 :num-allocs                1747250
 :num-checks                1
 :propagations              10
 :rlimit-count              14304
 :time                      0.01
 :total-time                0.02)
