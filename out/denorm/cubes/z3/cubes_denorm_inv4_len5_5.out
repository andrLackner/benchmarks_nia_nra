unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x401 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x621 (>= ?x401 1)))
 (let (($x463 (= ?x401 1)))
 (let ((?x134 (+ k!2 m!1)))
 (let ((?x251 (+ 6 m!1)))
 (let ((?x411 (+ 1 n!0)))
 (let ((?x565 (* (- 1) (* ?x411 ?x411 ?x411 ?x251 ?x251 ?x251 ?x134 ?x134 ?x134))))
 (let ((?x135 (* 24 (* m!1 m!1))))
 (let ((?x287 (* 108 m!1)))
 (let ((?x294 (* k!2 k!2 m!1)))
 (let ((?x290 (* 2 (* k!2 m!1 m!1))))
 (let ((?x628 (* 12 (* k!2 k!2 n!0))))
 (let ((?x130 (* 2 (* m!1 m!1 m!1))))
 (let ((?x155 (* k!2 k!2)))
 (let ((?x248 (* 6 ?x155)))
 (let ((?x419 (* 12 (* k!2 m!1))))
 (let ((?x150 (* n!0 n!0)))
 (let ((?x332 (* 216 ?x150)))
 (let ((?x300 (* 6 (* k!2 k!2 n!0 n!0))))
 (let ((?x437 (* 432 n!0)))
 (let ((?x292 (+ k!2 c!3)))
 (let ((?x315 (+ 216 (* ?x411 ?x251 ?x251 ?x251 ?x134 ?x292 ?x292 ?x292) ?x437 ?x300 ?x332 ?x419 ?x248 (* 24 (* k!2 n!0 m!1)) (* 216 (* n!0 m!1)) ?x130 (* ?x411 ?x411 ?x251 ?x251 ?x251 ?x292) ?x628 ?x290 ?x294 (* k!2 k!2 n!0 n!0 m!1) (* 2 (* n!0 n!0 m!1 m!1 m!1)) (* 2 (* k!2 k!2 n!0 m!1)) ?x287 ?x135 (* 24 (* n!0 n!0 m!1 m!1)) (* 108 (* n!0 n!0 m!1)) (* 48 (* n!0 m!1 m!1)) (* 12 (* k!2 n!0 n!0 m!1)) ?x565 (* 2 (* k!2 n!0 n!0 m!1 m!1)) (* 4 (* k!2 n!0 m!1 m!1)) (* 4 (* n!0 m!1 m!1 m!1)))))
 (let ((?x459 (* (- 1) m!1)))
 (let ((?x154 (* 3 ?x150)))
 (let ((?x404 (* 9 n!0)))
 (let ((?x249 (* (- 1) k!2)))
 (let ((?x647 (* (+ 7 ?x249 ?x404 ?x154 ?x459) ?x315)))
 (let (($x324 (= ?x647 0)))
 (let (($x490 (not $x324)))
 (let (($x440 (= (+ k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0)) (* 3 c!3)) 1)))
 (let ((?x238 (* 18 c!3)))
 (let ((?x166 (* (- 1) ?x155)))
 (let ((?x232 (* (- 9) n!0)))
 (let ((?x149 (* 5 k!2)))
 (let ((?x231 (+ (* 6 n!0) ?x459)))
 (let (($x230 (= ?x231 (- 6))))
 (let (($x609 (and $x230 (= (+ ?x149 ?x232 ?x166 (* 9 (* n!0 c!3)) ?x238) 4) $x440 $x463 $x490)))
 (let ((?x198 (+ c!3 k!2)))
 (let ((?x143 (+ 216 ?x287 ?x437 ?x248 ?x332 (* ?x411 ?x411 ?x251 ?x251 ?x251 ?x198) (* k!2 k!2 m!1 n!0 n!0) (* 2 (* k!2 m!1 m!1 n!0 n!0)) (* 2 (* m!1 m!1 m!1 n!0 n!0)) ?x419 ?x135 ?x294 ?x290 ?x130 ?x628 (* 24 (* k!2 m!1 n!0)) (* 48 (* m!1 m!1 n!0)) (* 2 (* k!2 k!2 m!1 n!0)) (* 4 (* k!2 m!1 m!1 n!0)) (* 4 (* m!1 m!1 m!1 n!0)) (* ?x411 ?x251 ?x251 ?x251 ?x134 ?x198 ?x198 ?x198) ?x300 ?x565 (* 12 (* k!2 m!1 n!0 n!0)) (* 24 (* m!1 m!1 n!0 n!0)) (* 216 (* m!1 n!0)) (* 108 (* m!1 n!0 n!0)))))
 (let (($x164 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x433 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x238 ?x149 ?x232 ?x166 (* 9 (* c!3 n!0))) 4) $x164 $x463 (not (= (* (+ 7 ?x249 ?x459 ?x404 ?x154) ?x143) 0)))))
 (let (($x502 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x605 (* m n n)))
 (let ((?x172 (* 108 ?x605)))
 (let ((?x582 (* m n)))
 (let ((?x170 (* 216 ?x582)))
 (let ((?x739 (* 24 (* m m n n))))
 (let ((?x558 (* 12 (* k m n n))))
 (let ((?x71 (+ k m)))
 (let ((?x389 (+ 6 m)))
 (let ((?x304 (+ 1 n)))
 (let ((?x519 (* (- 1) (* ?x304 ?x304 ?x304 ?x389 ?x389 ?x389 ?x71 ?x71 ?x71))))
 (let ((?x524 (* 6 (* k k n n))))
 (let ((?x77 (+ c k)))
 (let ((?x510 (* ?x304 ?x389 ?x389 ?x389 ?x71 ?x77 ?x77 ?x77)))
 (let ((?x740 (* 4 (* m m m n))))
 (let ((?x556 (* 4 (* k m m n))))
 (let ((?x555 (* 2 (* k k m n))))
 (let ((?x483 (* m m n)))
 (let ((?x379 (* 48 ?x483)))
 (let ((?x553 (* 24 (* k m n))))
 (let ((?x551 (* 12 (* k k n))))
 (let ((?x742 (* 2 (* m m m))))
 (let ((?x550 (* 2 (* k m m))))
 (let ((?x451 (* k k m)))
 (let ((?x447 (* m m)))
 (let ((?x382 (* 24 ?x447)))
 (let ((?x439 (* k m)))
 (let ((?x549 (* 12 ?x439)))
 (let ((?x744 (* 2 (* m m m n n))))
 (let ((?x559 (* 2 (* k m m n n))))
 (let ((?x423 (* k k m n n)))
 (let ((?x420 (* ?x304 ?x304 ?x389 ?x389 ?x389 ?x77)))
 (let ((?x267 (* n n)))
 (let ((?x654 (* 216 ?x267)))
 (let ((?x49 (* k k)))
 (let ((?x432 (* 6 ?x49)))
 (let ((?x671 (* 432 n)))
 (let ((?x240 (+ 216 (* 108 m) ?x671 ?x432 ?x654 ?x420 ?x423 ?x559 ?x744 ?x549 ?x382 ?x451 ?x550 ?x742 ?x551 ?x553 ?x379 ?x555 ?x556 ?x740 ?x510 ?x524 ?x519 ?x558 ?x739 ?x170 ?x172)))
 (let ((?x268 (* 3 ?x267)))
 (let ((?x48 (* 9 n)))
 (let ((?x352 (* (- 1) m)))
 (let ((?x236 (* (- 1) k)))
 (let ((?x614 (+ 7 ?x236 ?x352 ?x48 ?x268)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) ?x267)) 1)))
 (let (($x258 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x206 (= (+ ?x40 ?x44 ?x208 ?x209 (* 9 (* c n))) 4)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 $x206 $x258 $x296 (not (= (* ?x614 ?x240) 0))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x446 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x605 (* m n n)))
 (let ((?x172 (* 108 ?x605)))
 (let ((?x582 (* m n)))
 (let ((?x170 (* 216 ?x582)))
 (let ((?x739 (* 24 (* m m n n))))
 (let ((?x558 (* 12 (* k m n n))))
 (let ((?x71 (+ k m)))
 (let ((?x389 (+ 6 m)))
 (let ((?x304 (+ 1 n)))
 (let ((?x519 (* (- 1) (* ?x304 ?x304 ?x304 ?x389 ?x389 ?x389 ?x71 ?x71 ?x71))))
 (let ((?x524 (* 6 (* k k n n))))
 (let ((?x77 (+ c k)))
 (let ((?x510 (* ?x304 ?x389 ?x389 ?x389 ?x71 ?x77 ?x77 ?x77)))
 (let ((?x740 (* 4 (* m m m n))))
 (let ((?x556 (* 4 (* k m m n))))
 (let ((?x555 (* 2 (* k k m n))))
 (let ((?x483 (* m m n)))
 (let ((?x379 (* 48 ?x483)))
 (let ((?x553 (* 24 (* k m n))))
 (let ((?x551 (* 12 (* k k n))))
 (let ((?x742 (* 2 (* m m m))))
 (let ((?x550 (* 2 (* k m m))))
 (let ((?x451 (* k k m)))
 (let ((?x447 (* m m)))
 (let ((?x382 (* 24 ?x447)))
 (let ((?x744 (* 2 (* m m m n n))))
 (let ((?x559 (* 2 (* k m m n n))))
 (let ((?x423 (* k k m n n)))
 (let ((?x420 (* ?x304 ?x304 ?x389 ?x389 ?x389 ?x77)))
 (let ((?x267 (* n n)))
 (let ((?x654 (* 216 ?x267)))
 (let ((?x49 (* k k)))
 (let ((?x432 (* 6 ?x49)))
 (let ((?x671 (* 432 n)))
 (let ((?x668 (* 72 m)))
 (let ((?x376 (+ 216 ?x668 ?x671 ?x432 (* 6 (* m 6)) ?x654 ?x420 ?x423 ?x559 ?x744 (* 6 (* k m)) ?x382 ?x451 ?x550 ?x742 ?x551 ?x553 ?x379 ?x555 ?x556 ?x740 ?x510 ?x524 ?x519 (* 6 (* m k)) ?x558 ?x739 ?x170 ?x172)))
 (let ((?x268 (* 3 ?x267)))
 (let ((?x48 (* 9 n)))
 (let ((?x352 (* (- 1) m)))
 (let ((?x236 (* (- 1) k)))
 (let ((?x614 (+ 7 ?x236 ?x352 ?x48 ?x268)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) ?x267)) 1)))
 (let (($x258 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x206 (= (+ ?x40 ?x44 ?x208 ?x209 (* 9 (* c n))) 4)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 $x206 $x258 $x296 (not (= (* ?x614 ?x376) 0)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x362 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x605 (* m n n)))
 (let ((?x172 (* 108 ?x605)))
 (let ((?x582 (* m n)))
 (let ((?x170 (* 216 ?x582)))
 (let ((?x739 (* 24 (* m m n n))))
 (let ((?x558 (* 12 (* k m n n))))
 (let ((?x71 (+ k m)))
 (let ((?x389 (+ 6 m)))
 (let ((?x304 (+ 1 n)))
 (let ((?x519 (* (- 1) (* ?x304 ?x304 ?x304 ?x389 ?x389 ?x389 ?x71 ?x71 ?x71))))
 (let ((?x524 (* 6 (* k k n n))))
 (let ((?x77 (+ c k)))
 (let ((?x510 (* ?x304 ?x389 ?x389 ?x389 ?x71 ?x77 ?x77 ?x77)))
 (let ((?x740 (* 4 (* m m m n))))
 (let ((?x556 (* 4 (* k m m n))))
 (let ((?x555 (* 2 (* k k m n))))
 (let ((?x483 (* m m n)))
 (let ((?x379 (* 48 ?x483)))
 (let ((?x553 (* 24 (* k m n))))
 (let ((?x551 (* 12 (* k k n))))
 (let ((?x742 (* 2 (* m m m))))
 (let ((?x550 (* 2 (* k m m))))
 (let ((?x451 (* k k m)))
 (let ((?x447 (* m m)))
 (let ((?x382 (* 24 ?x447)))
 (let ((?x439 (* k m)))
 (let ((?x549 (* 12 ?x439)))
 (let ((?x744 (* 2 (* m m m n n))))
 (let ((?x559 (* 2 (* k m m n n))))
 (let ((?x423 (* k k m n n)))
 (let ((?x420 (* ?x304 ?x304 ?x389 ?x389 ?x389 ?x77)))
 (let ((?x267 (* n n)))
 (let ((?x654 (* 216 ?x267)))
 (let ((?x49 (* k k)))
 (let ((?x432 (* 6 ?x49)))
 (let ((?x671 (* 432 n)))
 (let ((?x240 (+ 216 (* 108 m) ?x671 ?x432 ?x654 ?x420 ?x423 ?x559 ?x744 ?x549 ?x382 ?x451 ?x550 ?x742 ?x551 ?x553 ?x379 ?x555 ?x556 ?x740 ?x510 ?x524 ?x519 ?x558 ?x739 ?x170 ?x172)))
 (let ((?x268 (* 3 ?x267)))
 (let ((?x48 (* 9 n)))
 (let ((?x352 (* (- 1) m)))
 (let ((?x236 (* (- 1) k)))
 (let ((?x614 (+ 7 ?x236 ?x352 ?x48 ?x268)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) ?x267)) 1)))
 (let (($x258 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x206 (= (+ ?x40 ?x44 ?x208 ?x209 (* 9 (* c n))) 4)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x664 (and $x122 $x206 $x258 $x296 (not (= (* ?x614 ?x240) 0)))))
 (let ((?x668 (* 72 m)))
 (let ((?x376 (+ 216 ?x668 ?x671 ?x432 (* 6 (* m 6)) ?x654 ?x420 ?x423 ?x559 ?x744 (* 6 ?x439) ?x382 ?x451 ?x550 ?x742 ?x551 ?x553 ?x379 ?x555 ?x556 ?x740 ?x510 ?x524 ?x519 (* 6 (* m k)) ?x558 ?x739 ?x170 ?x172)))
 (let (($x353 (and $x122 $x206 $x258 $x296 (not (= (* ?x614 ?x376) 0)))))
 (rewrite (= $x353 $x664)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x480 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ k m)))
 (let ((?x389 (+ 6 m)))
 (let ((?x304 (+ 1 n)))
 (let ((?x519 (* (- 1) (* ?x304 ?x304 ?x304 ?x389 ?x389 ?x389 ?x71 ?x71 ?x71))))
 (let ((?x77 (+ c k)))
 (let ((?x420 (* ?x304 ?x304 ?x389 ?x389 ?x389 ?x77)))
 (let ((?x510 (* ?x304 ?x389 ?x389 ?x389 ?x71 ?x77 ?x77 ?x77)))
 (let ((?x513 (+ (* ?x304 ?x304 ?x389 ?x71 ?x71) ?x510 (* ?x304 ?x304 ?x389 ?x389 ?x389) ?x420 ?x519)))
 (let ((?x65 (* 3 n)))
 (let ((?x352 (* (- 1) m)))
 (let ((?x236 (* (- 1) k)))
 (let (($x537 (= (* (+ 4 (* 3 (* ?x304 ?x304)) ?x236 ?x352 ?x65) ?x513) 0)))
 (let (($x505 (not $x537)))
 (let (($x169 (= (+ (* 3 (* n n)) ?x236 ?x65) (- 1))))
 (let (($x576 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x576 $x169 $x505)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x452 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x605 (* m n n)))
 (let ((?x172 (* 108 ?x605)))
 (let ((?x582 (* m n)))
 (let ((?x170 (* 216 ?x582)))
 (let ((?x739 (* 24 (* m m n n))))
 (let ((?x558 (* 12 (* k m n n))))
 (let ((?x71 (+ k m)))
 (let ((?x389 (+ 6 m)))
 (let ((?x304 (+ 1 n)))
 (let ((?x519 (* (- 1) (* ?x304 ?x304 ?x304 ?x389 ?x389 ?x389 ?x71 ?x71 ?x71))))
 (let ((?x524 (* 6 (* k k n n))))
 (let ((?x77 (+ c k)))
 (let ((?x510 (* ?x304 ?x389 ?x389 ?x389 ?x71 ?x77 ?x77 ?x77)))
 (let ((?x740 (* 4 (* m m m n))))
 (let ((?x556 (* 4 (* k m m n))))
 (let ((?x555 (* 2 (* k k m n))))
 (let ((?x483 (* m m n)))
 (let ((?x379 (* 48 ?x483)))
 (let ((?x553 (* 24 (* k m n))))
 (let ((?x551 (* 12 (* k k n))))
 (let ((?x742 (* 2 (* m m m))))
 (let ((?x550 (* 2 (* k m m))))
 (let ((?x451 (* k k m)))
 (let ((?x447 (* m m)))
 (let ((?x382 (* 24 ?x447)))
 (let ((?x744 (* 2 (* m m m n n))))
 (let ((?x559 (* 2 (* k m m n n))))
 (let ((?x423 (* k k m n n)))
 (let ((?x420 (* ?x304 ?x304 ?x389 ?x389 ?x389 ?x77)))
 (let ((?x267 (* n n)))
 (let ((?x654 (* 216 ?x267)))
 (let ((?x49 (* k k)))
 (let ((?x432 (* 6 ?x49)))
 (let ((?x671 (* 432 n)))
 (let ((?x668 (* 72 m)))
 (let ((?x376 (+ 216 ?x668 ?x671 ?x432 (* 6 (* m 6)) ?x654 ?x420 ?x423 ?x559 ?x744 (* 6 (* k m)) ?x382 ?x451 ?x550 ?x742 ?x551 ?x553 ?x379 ?x555 ?x556 ?x740 ?x510 ?x524 ?x519 (* 6 (* m k)) ?x558 ?x739 ?x170 ?x172)))
 (let ((?x268 (* 3 ?x267)))
 (let ((?x48 (* 9 n)))
 (let ((?x352 (* (- 1) m)))
 (let ((?x236 (* (- 1) k)))
 (let ((?x614 (+ 7 ?x236 ?x352 ?x48 ?x268)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) ?x267)) 1)))
 (let (($x258 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x206 (= (+ ?x40 ?x44 ?x208 ?x209 (* 9 (* c n))) 4)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x353 (and $x122 $x206 $x258 $x296 (not (= (* ?x614 ?x376) 0)))))
 (let ((?x513 (+ (* ?x304 ?x304 ?x389 ?x71 ?x71) ?x510 (* ?x304 ?x304 ?x389 ?x389 ?x389) ?x420 ?x519)))
 (let ((?x504 (* (+ 4 (* 3 (* ?x304 ?x304)) ?x236 ?x352 (* 3 n)) ?x513)))
 (let (($x505 (not (= ?x504 0))))
 (let (($x169 (= (+ ?x268 ?x236 (* 3 n)) (- 1))))
 (let (($x576 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x535 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x576 $x169 $x505)))
 (rewrite (= $x535 $x353)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x507 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ k m)))
 (let ((?x389 (+ 6 m)))
 (let ((?x304 (+ 1 n)))
 (let ((?x519 (* (- 1) (* ?x304 ?x304 ?x304 ?x389 ?x389 ?x389 ?x71 ?x71 ?x71))))
 (let ((?x77 (+ c k)))
 (let ((?x420 (* ?x304 ?x304 ?x389 ?x389 ?x389 ?x77)))
 (let ((?x510 (* ?x304 ?x389 ?x389 ?x389 ?x71 ?x77 ?x77 ?x77)))
 (let ((?x513 (+ (* ?x304 ?x304 ?x389 ?x71 ?x71) ?x510 (* ?x304 ?x304 ?x389 ?x389 ?x389) ?x420 ?x519)))
 (let ((?x65 (* 3 n)))
 (let ((?x352 (* (- 1) m)))
 (let ((?x236 (* (- 1) k)))
 (let (($x537 (= (* (+ 4 (* 3 (* ?x304 ?x304)) ?x236 ?x352 ?x65) ?x513) 0)))
 (let (($x505 (not $x537)))
 (let (($x169 (= (+ (* 3 (* n n)) ?x236 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x603 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 (= ?x603 (- 4)) (= (+ (* (- 3) c) (* n k) ?x236 (* 2 n)) (- 1)) $x169 $x505))))))))))))))))))) :qid k!34))
 ))
 (let ((?x482 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x71 (+ k m)))
 (let ((?x389 (+ 6 m)))
 (let ((?x304 (+ 1 n)))
 (let ((?x519 (* (- 1) (* ?x304 ?x304 ?x304 ?x389 ?x389 ?x389 ?x71 ?x71 ?x71))))
 (let ((?x77 (+ c k)))
 (let ((?x420 (* ?x304 ?x304 ?x389 ?x389 ?x389 ?x77)))
 (let ((?x510 (* ?x304 ?x389 ?x389 ?x389 ?x71 ?x77 ?x77 ?x77)))
 (let ((?x513 (+ (* ?x304 ?x304 ?x389 ?x71 ?x71) ?x510 (* ?x304 ?x304 ?x389 ?x389 ?x389) ?x420 ?x519)))
 (let ((?x65 (* 3 n)))
 (let ((?x352 (* (- 1) m)))
 (let ((?x236 (* (- 1) k)))
 (let (($x537 (= (* (+ 4 (* 3 (* ?x304 ?x304)) ?x236 ?x352 ?x65) ?x513) 0)))
 (let (($x505 (not $x537)))
 (let (($x169 (= (+ (* 3 (* n n)) ?x236 ?x65) (- 1))))
 (let (($x576 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x535 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x576 $x169 $x505)))
 (let ((?x48 (* 9 n)))
 (let ((?x603 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x517 (and $x122 (= ?x603 (- 4)) (= (+ (* (- 3) c) (* n k) ?x236 (* 2 n)) (- 1)) $x169 $x505)))
 (rewrite (= $x517 $x535))))))))))))))))))))))))))))
 ))
 (let (($x89 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ n 1)))
 (let ((?x75 (+ m 6)))
 (let ((?x71 (+ k m)))
 (let ((?x77 (+ c k)))
 (let ((?x81 (+ (* ?x71 ?x71 ?x75 ?x68 ?x68) (* ?x77 ?x77 ?x77 ?x71 ?x75 ?x75 ?x75 ?x68) (* ?x75 ?x75 ?x75 ?x68 ?x68) (* ?x77 ?x75 ?x75 ?x75 ?x68 ?x68))))
 (let ((?x84 (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) (- ?x81 (* ?x71 ?x71 ?x71 ?x75 ?x75 ?x75 ?x68 ?x68 ?x68)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x84 0))))))))))))))))) :qid k!34))
 ))
 (let ((?x528 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x71 (+ k m)))
 (let ((?x389 (+ 6 m)))
 (let ((?x304 (+ 1 n)))
 (let ((?x519 (* (- 1) (* ?x304 ?x304 ?x304 ?x389 ?x389 ?x389 ?x71 ?x71 ?x71))))
 (let ((?x77 (+ c k)))
 (let ((?x420 (* ?x304 ?x304 ?x389 ?x389 ?x389 ?x77)))
 (let ((?x510 (* ?x304 ?x389 ?x389 ?x389 ?x71 ?x77 ?x77 ?x77)))
 (let ((?x513 (+ (* ?x304 ?x304 ?x389 ?x71 ?x71) ?x510 (* ?x304 ?x304 ?x389 ?x389 ?x389) ?x420 ?x519)))
 (let ((?x65 (* 3 n)))
 (let ((?x352 (* (- 1) m)))
 (let ((?x236 (* (- 1) k)))
 (let (($x537 (= (* (+ 4 (* 3 (* ?x304 ?x304)) ?x236 ?x352 ?x65) ?x513) 0)))
 (let (($x505 (not $x537)))
 (let (($x169 (= (+ (* 3 (* n n)) ?x236 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x603 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x517 (and $x122 (= ?x603 (- 4)) (= (+ (* (- 3) c) (* n k) ?x236 (* 2 n)) (- 1)) $x169 $x505)))
 (let ((?x68 (+ n 1)))
 (let ((?x75 (+ m 6)))
 (let ((?x81 (+ (* ?x71 ?x71 ?x75 ?x68 ?x68) (* ?x77 ?x77 ?x77 ?x71 ?x75 ?x75 ?x75 ?x68) (* ?x75 ?x75 ?x75 ?x68 ?x68) (* ?x77 ?x75 ?x75 ?x75 ?x68 ?x68))))
 (let ((?x84 (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) (- ?x81 (* ?x71 ?x71 ?x71 ?x75 ?x75 ?x75 ?x68 ?x68 ?x68)))))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x88 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 (= (+ (- (+ 1 (* 3 n n)) k) ?x65) 0) (or (not (= ?x84 0))))))
 (rewrite (= $x88 $x517)))))))))))))))))))))))))))))))
 ))
 (let ((@x90 (asserted $x89)))
 (let ((@x470 (mp (mp @x90 (quant-intro (proof-bind ?x528) (= $x89 $x507)) $x507) (rewrite (= $x507 $x507)) $x507)))
 (let ((@x575 (mp (mp @x470 (quant-intro (proof-bind ?x482) (= $x507 $x480)) $x480) (quant-intro (proof-bind ?x452) (= $x480 $x446)) $x446)))
 (let ((@x265 (mp~ (mp @x575 (quant-intro (proof-bind ?x362) (= $x446 $x502)) $x502) (sk (~ $x502 $x433)) $x433)))
 (let ((@x557 (mp @x265 (rewrite (= $x433 $x609)) $x609)))
 (let ((@x295 (and-elim @x557 $x463)))
 (let ((@x674 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x463) $x621)) @x295 $x621)))
 (let (($x645 (<= ?x231 (- 6))))
 (let ((@x377 (and-elim @x557 $x230)))
 (let ((@x635 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x230) $x645)) @x377 $x645)))
 (let (($x216 (<= ?x401 1)))
 (let ((@x219 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x463) $x216)) @x295 $x216)))
 (let (($x106 (>= ?x231 (- 6))))
 (let ((@x580 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x230) $x106)) @x377 $x106)))
 (let (($x545 (not (<= ?x647 0))))
 (let (($x257 (>= ?x647 0)))
 (let ((@x179 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x257)) @x580 @x219 @x635 @x674 false) $x257)))
 (let ((@x561 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x324 $x545 (not $x257))) (and-elim @x557 $x490) (or $x545 (not $x257)))))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution @x561 @x179 $x545) @x580 @x219 @x635 @x674 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        27
 :arith-assert-upper        26
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-fixed-eqs           1
 :arith-gcd-tests           3
 :arith-ineq-splits         1
 :arith-max-min             143
 :arith-nonlinear-bounds    27
 :arith-num-rows            10
 :arith-patches             2
 :arith-pivots              5
 :arith-pseudo-nonlinear    2
 :arith-row-summations      7
 :arith-tableau-max-columns 60
 :arith-tableau-max-rows    10
 :conflicts                 2
 :decisions                 4
 :del-clause                16
 :final-checks              4
 :max-memory                3.66
 :memory                    3.18
 :mk-bool-var               24
 :mk-clause                 16
 :num-allocs                1151832
 :num-checks                1
 :propagations              10
 :rlimit-count              4471
 :time                      0.01
 :total-time                0.01)
