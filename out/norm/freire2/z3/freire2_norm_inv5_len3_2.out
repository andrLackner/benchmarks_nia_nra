unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x6216 (* 3 r!2)))
 (let ((?x3507 (* 6 x!0)))
 (let ((?x575 (* r00 r00 r00)))
 (let ((?x576 (* 12 ?x575)))
 (let ((?x532 (* s00 r00)))
 (let ((?x610 (* (- 6) ?x532)))
 (let ((?x2383 (* (- 3) s!1)))
 (let ((?x607 (* (- 6) x00)))
 (let ((?x606 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x7379 (+ ?x44 ?x606 ?x607 ?x2383 ?x610 ?x576 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)) ?x3507 (* 2 (* s!1 r!2)) ?x6216)))
 (let (($x7585 (<= ?x7379 0)))
 (let (($x1228 (= ?x7379 0)))
 (let ((?x4580 (* 6 r!2)))
 (let ((?x7656 (+ 3 s!1 ?x4580)))
 (let ((?x4857 (* (- 1) s!1)))
 (let ((?x4856 (+ ?x4857 x!0)))
 (let ((?x4853 (+ 1 r!2)))
 (let ((?x7406 (* 324 (* r!2 r!2 r!2 r!2))))
 (let ((?x5750 (* 36 (* r00 r00 s00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656))))
 (let ((?x5038 (* x!0 x!0)))
 (let ((?x2343 (* (- 324) ?x5038)))
 (let ((?x4878 (* s!1 s!1 s!1)))
 (let ((?x1790 (* (- 108) ?x4878)))
 (let ((?x4946 (* 486 r!2)))
 (let ((?x1034 (* (- 108) (* s!1 x!0 x!0))))
 (let ((?x2926 (* (- 216) (* r00 r00 r00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656))))
 (let ((?x2829 (* s!1 s!1)))
 (let ((?x4906 (* (- 315) ?x2829)))
 (let ((?x7690 (* 216 (* r00 r00 r00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656))))
 (let ((?x1452 (* x00 x00)))
 (let ((?x5287 (* (- 324) ?x1452)))
 (let ((?x1192 (* 216 (* s!1 s!1 x!0))))
 (let ((?x1290 (* s00 s00 s00)))
 (let ((?x2928 (* (- 48) ?x1290)))
 (let ((?x4738 (* (- 36) (* r00 r00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656 ?x7656))))
 (let ((?x1218 (* s!1 x!0)))
 (let ((?x2331 (* 648 ?x1218)))
 (let ((?x1162 (* s00 r00 r00 r00)))
 (let ((?x2190 (* (- 648) ?x1162)))
 (let ((?x988 (* r00 r00 r00 x00)))
 (let ((?x5071 (* 1296 ?x988)))
 (let ((?x911 (* s00 x00)))
 (let ((?x4791 (* 324 ?x911)))
 (let ((?x837 (* s00 s00 r00 r00)))
 (let ((?x1491 (* 108 ?x837)))
 (let ((?x774 (* s00 s00 r00)))
 (let ((?x3275 (* 324 ?x774)))
 (let ((?x753 (* s00 r00 r00)))
 (let ((?x5725 (* 108 ?x753)))
 (let ((?x697 (* s00 s00)))
 (let ((?x3051 (* (- 153) ?x697)))
 (let ((?x628 (* r00 x00)))
 (let ((?x3314 (* (- 324) ?x628)))
 (let ((?x619 (* s00 r00 x00)))
 (let ((?x1557 (* (- 648) ?x619)))
 (let ((?x2473 (* 1944 ?x575)))
 (let ((?x7843 (* (- 810) ?x532)))
 (let ((?x3215 (* (- 432) (* r00 r00 r00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656))))
 (let ((?x5903 (* 972 (* r!2 r!2 r!2))))
 (let ((?x4940 (* 54 s!1)))
 (let ((?x493 (* r!2 r!2)))
 (let ((?x4816 (* 1053 ?x493)))
 (let ((?x7683 (* 432 (* r00 r00 r00 x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656))))
 (let ((?x407 (* r00 r00)))
 (let ((?x3713 (* (- 324) ?x407)))
 (let ((?x5907 (* (- 972) x00)))
 (let ((?x6303 (* (- 486) r00)))
 (let ((?x2721 (* 567 s00)))
 (let ((?x7250 (+ ?x2721 ?x6303 ?x5907 (* (- 216) (* s!1 s!1 s!1 r!2)) (* (- 108) (* s!1 s!1 s!1 r!2 r!2)) (* (- 648) (* s!1 s!1 r!2 r!2 r!2)) (* 108 (* r00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) ?x3713 (* 66 (* s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656)) (* 2592 (* s00 r00 x!0 r!2)) (* 432 (* r00 r00 r00 x00 s!1)) (* 216 (* s00 r00 r00 r!2 r!2 r!2)) ?x7683 (* 108 (* r00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656 ?x7656)) (* (- 108) (* r00 x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* (- 1611) (* s!1 s!1 r!2 r!2)) (* (- 1620) (* x!0 x!0 r!2 r!2)) ?x4816 ?x4940 ?x5903 (* (- 36) (* r00 r00 ?x4853 ?x4853 ?x7656 ?x7656 ?x7656)) (* 2592 (* s!1 x!0 r!2)) (* 216 (* r00 r00 r00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* 72 (* s00 s00 r00 r00 s!1 r!2)) (* (- 36) (* r00 r00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) ?x3215 ?x7843 (* 3240 (* s!1 x!0 r!2 r!2)) (* 1296 (* s!1 x!0 r!2 r!2 r!2)) (* (- 108) (* s!1 x!0 x!0 r!2 r!2)) (* 108 (* ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656)) (* 23328 (* r00 r00 r00 r!2 r!2 r!2)) (* (- 216) (* s!1 x!0 x!0 r!2)) ?x2473 (* (- 108) (* x00 x00 s!1)) (* (- 432) (* r00 r00 r00 s!1 x!0 r!2 r!2)) (* 864 (* r00 r00 r00 x00 s!1 r!2)) (* (- 2592) (* r00 r00 r00 x!0 r!2 r!2 r!2)) ?x1557 ?x3314 (* 108 (* s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x7656 ?x7656)) (* (- 216) (* r00 r00 s!1)) (* (- 1296) (* r00 r00 r!2 r!2 r!2 r!2)) ?x3051 (* (- 3888) (* x00 r!2 r!2 r!2 r!2)) (* 348 (* s00 s!1 s!1 r!2)) (* (- 51) (* s00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* (- 306) (* s00 s00 r!2 r!2 r!2)) ?x5725 ?x3275 (* (- 1296) (* x00 s!1)) ?x1491 (* (- 648) (* r00 x00 r!2 r!2 r!2)) (* (- 108) (* r00 x00 s!1)) (* 36 (* r00 r00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656)) (* (- 12636) (* x00 r!2 r!2)) (* 3456 (* s00 r!2)) ?x4791 (* (- 108) (* r00 s00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* 108 (* ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* 1296 (* s00 x00 r!2)) ?x5071 (* (- 108) (* x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656)) (* 270 (* s!1 r!2 r!2)) (* 216 (* x00 s!1 x!0 r!2 r!2)) (* 36 (* s00 s00 r00 r00 s!1 r!2 r!2)) ?x2190 ?x2331 (* (- 2592) (* r00 s!1 r!2)) ?x4738 ?x2928 ?x1192 (* 54 (* r00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656 ?x7656)) (* 108 (* s00 x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* (- 108) (* x00 x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* 432 (* s!1 s!1 x!0 r!2)) (* (- 1296) (* x!0 x!0 r!2)) ?x5287 (* (- 9) (* ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656 ?x7656)) (* 1620 (* s00 x00 r!2 r!2)) (* 108 (* s00 x00 s!1)) (* (- 612) (* s00 s00 r!2)) (* (- 1296) (* r00 x00 r!2)) (* (- 648) (* x!0 x!0 r!2 r!2 r!2)) (* 11664 (* r00 r00 r00 r!2)) (* 2862 (* s00 s!1 r!2)) (* 6480 (* r00 r00 r00 x00 r!2 r!2)) (* 216 (* s00 s00 r00 s!1 r!2)) (* 15 (* ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656)) (* (- 216) (* s00 r00 x00 s!1 r!2 r!2)) (* 216 (* s00 x00 s!1 r!2)) (* 108 (* s00 x00 s!1 r!2 r!2)) (* (- 324) (* x00 s!1 s!1 r!2 r!2)) (* (- 324) (* x00 s!1 s!1)) (* (- 324) (* s00 r00 s!1 s!1)) (* (- 16) (* s00 s00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* 5184 (* r00 r00 r00 s!1 r!2 r!2 r!2)) (* 648 (* r00 r00 r00 s!1 s!1)) (* 12960 (* r00 r00 r00 s!1 r!2 r!2)) (* 648 (* r00 r00 r00 s!1 s!1 r!2 r!2)) (* (- 5184) (* r00 r00 r00 x!0 r!2)) (* 216 (* x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* (- 216) (* r00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x7656 ?x7656)) (* 36 (* s00 r00 r00 s!1 r!2 r!2)) (* (- 54) (* r00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656)) (* (- 216) (* r00 r00 r00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656 ?x7656)) (* (- 432) (* s00 r00 r00 r00 s!1 r!2)) (* (- 11664) (* x00 r!2 r!2 r!2)) (* (- 4) (* ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656 ?x7656)) (* (- 5184) (* x00 s!1 r!2)) (* (- 6480) (* r00 r00 r00 x!0 r!2 r!2)) (* (- 432) (* r00 r00 r00 s!1 x!0)) (* (- 864) (* r00 r00 r00 s!1 x!0 r!2)) (* 10368 (* r00 r00 r00 s!1 r!2)) (* 1296 (* r00 r00 r00 s!1 s!1 r!2)) (* 2376 (* s00 r!2 r!2 r!2 r!2)) (* (- 1944) (* r00 r00 r!2)) (* (- 3240) (* s00 r00 r00 r00 r!2 r!2)) (* (- 2592) (* s00 r00 x00 r!2)) (* (- 5832) (* x00 r!2)) (* 7776 (* r00 r00 r00 r!2 r!2 r!2 r!2)) (* 648 (* s00 x00 r!2 r!2 r!2)) (* 648 (* r00 x!0 r!2 r!2 r!2)) ?x7690 (* 1296 (* r00 x!0 r!2)) (* 711 (* s00 s!1)) (* (- 16) (* s00 s00 s00 s!1 r!2 r!2)) (* 12 (* s00 ?x4853 ?x4853 ?x7656 ?x7656 ?x7656)) (* (- 5184) (* s00 r00 r!2)) (* (- 648) (* r00 s!1)) (* (- 162) (* r00 s!1 s!1)) (* (- 51) (* s00 s00 s!1)) (* (- 324) (* s00 x!0)) (* 36 (* s00 r00 r00 s!1)) (* (- 102) (* s00 s00 s!1 r!2)) (* (- 51) (* s00 s00 s!1 r!2 r!2)) ?x4906 (* 432 (* r00 r00 r00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x7656 ?x7656)) (* 51 (* s00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* (- 216) (* x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x7656 ?x7656)) (* (- 96) (* s00 s00 s00 r!2 r!2 r!2)) (* 432 (* x00 s!1 x!0 r!2)) (* (- 765) (* s00 s00 r!2 r!2)) (* (- 1296) (* x00 x00 r!2)) (* (- 2592) (* s00 r00 r00 r00 r!2)) (* (- 3888) (* r00 r00 r!2 r!2 r!2)) (* (- 1296) (* s00 r00 x00 r!2 r!2 r!2)) (* 108 (* r00 s!1 x!0)) (* 108 (* r00 s!1 x!0 r!2 r!2)) (* (- 2592) (* x00 s!1 r!2 r!2 r!2)) (* (- 36) (* r00 r00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656)) (* (- 240) (* s00 s00 s00 r!2 r!2)) (* (- 108) (* ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* (- 12) (* s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656)) (* (- 1296) (* s00 r00 r00 r00 r!2 r!2 r!2)) (* (- 432) (* s00 r00 x00 s!1 r!2)) (* (- 216) (* s00 r00 r00 r00 s!1)) (* (- 108) (* r00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656)) (* (- 36) (* r00 r00 s00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* (- 15) (* ?x4853 ?x4853 ?x7656 ?x7656 ?x7656)) (* (- 72) (* r00 r00 s!1 s!1 r!2)) (* 216 (* s!1 s!1 x!0 r!2 r!2)) (* 7074 (* s00 r!2 r!2 r!2)) (* (- 9) (* s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* (- 1296) (* s00 x!0 r!2)) (* 1440 (* s00 s!1 r!2 r!2 r!2)) (* (- 2916) (* r00 r!2)) (* 4 (* ?x4853 ?x4853 ?x7656 ?x7656 ?x7656 ?x7656)) (* (- 162) (* r00 s!1 s!1 r!2 r!2)) (* (- 1296) (* r00 s!1 r!2 r!2 r!2)) (* (- 108) (* s00 s!1 x!0 r!2 r!2)) (* (- 324) (* r00 s!1 s!1 r!2)) (* (- 1944) (* r00 r!2 r!2 r!2 r!2)) ?x2926 (* (- 216) (* s00 s!1 x!0 r!2)) (* (- 108) (* s00 s!1 x!0)) (* (- 648) (* s00 x!0 r!2 r!2 r!2)) (* 25272 (* r00 r00 r00 r!2 r!2)) (* (- 1620) (* s00 x!0 r!2 r!2)) (* (- 324) (* s00 r00 s!1 s!1 r!2 r!2)) (* (- 15) (* ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656 ?x7656)) (* 36 (* r00 r00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656 ?x7656)) (* 432 (* s00 r00 s!1 x!0 r!2)) (* 216 (* s00 r00 s!1 x!0 r!2 r!2)) (* 216 (* s00 r00 s!1 x!0)) (* 1296 (* s00 r00 x!0 r!2 r!2 r!2)) (* 36 (* r00 r00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* 108 (* x00 x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* (- 108) (* r00 x00 s!1 r!2 r!2)) (* 12 (* s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656 ?x7656)) (* 72 (* s00 r00 r00 s!1 r!2)) (* (- 36) (* r00 r00 s!1 s!1 r!2 r!2)) (* (- 432) (* r00 r00 s!1 r!2 r!2 r!2)) (* (- 6480) (* x00 s!1 r!2 r!2)) (* (- 4212) (* r00 r00 r!2 r!2)) (* 216 (* s!1 r!2)) (* 9 (* ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656)) ?x1034 (* (- 11826) (* s00 r00 r!2 r!2)) ?x4946 (* 540 (* s00 r00 r00 r!2 r!2)) (* 54 (* r00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* 108 (* s00 s00 r00 s!1 r!2 r!2)) (* 108 (* s00 s00 r00 s!1)) (* (- 108) (* s00 x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* (- 216) (* s00 r00 r00 r00 s!1 r!2 r!2)) (* (- 192) (* s00 s00 s00 r!2)) ?x1790 (* 540 (* s00 s00 r00 r00 r!2 r!2)) (* (- 1278) (* s!1 s!1 r!2)) ?x2343 (* (- 1620) (* r00 x00 r!2 r!2)) (* 3591 (* s00 s!1 r!2 r!2)) (* 108 (* r00 s00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* (- 1080) (* r00 r00 s!1 r!2 r!2)) (* 1296 (* x00 x!0 r!2 r!2 r!2)) (* (- 864) (* r00 r00 s!1 r!2)) (* (- 66) (* s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656 ?x7656)) ?x5750 (* (- 216) (* s00 r00 x00 s!1)) (* 216 (* x00 s!1 x!0)) (* 108 (* x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656 ?x7656)) (* (- 648) (* x00 x00 r!2 r!2 r!2)) (* (- 108) (* x00 x00 s!1 r!2 r!2)) (* (- 54) (* r00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* 4 (* ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656 ?x7656 ?x7656)) (* 1620 (* r00 x!0 r!2 r!2)) (* (- 108) (* ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* (- 3240) (* r00 s!1 r!2 r!2)) (* 432 (* s00 s00 r00 r00 r!2)) (* 9 (* s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* (- 648) (* x00 s!1 s!1 r!2)) (* (- 3888) (* s00 r00 r!2 r!2 r!2 r!2)) (* (- 6318) (* r00 r!2 r!2)) (* 108 (* ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656 ?x7656)) (* (- 108) (* s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* 3240 (* s00 r00 x!0 r!2 r!2)) (* (- 5832) (* r00 r!2 r!2 r!2)) (* (- 216) (* r00 x00 s!1 r!2)) (* (- 432) (* r00 r00 r00 x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* (- 6426) (* s00 r00 s!1 r!2 r!2)) (* 1296 (* s00 s00 r00 r!2)) (* (- 1242) (* s00 r00 s!1)) (* (- 32) (* s00 s00 s00 s!1 r!2)) (* 174 (* s00 s!1 s!1 r!2 r!2)) (* (- 2592) (* s00 r00 s!1 r!2 r!2 r!2)) (* (- 5076) (* s00 r00 s!1 r!2)) (* 3240 (* x00 x!0 r!2 r!2)) (* (- 16) (* s00 s00 s00 s!1)) (* (- 11340) (* s00 r00 r!2 r!2 r!2)) (* (- 1620) (* x00 x00 r!2 r!2)) (* 216 (* r00 s00 x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* (- 648) (* s00 r00 s!1 s!1 r!2)) ?x7406 (* 2592 (* r00 r00 r00 s!1)) (* 7587 (* s00 r!2 r!2)) (* (- 216) (* r00 s00 x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* 174 (* s00 s!1 s!1)) (* (- 1296) (* r00 r00 r00 x!0)) (* 648 (* s00 r00 x!0)) (* (- 36) (* r00 r00 s!1 s!1)) (* 648 (* x00 x!0)) (* 1620 (* s00 s00 r00 r!2 r!2)) (* 432 (* s00 r00 r00 r!2)) (* 432 (* r00 r00 r00 x00 s!1 r!2 r!2)) (* 108 (* r00 x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* (- 216) (* x00 x00 s!1 r!2)) (* 216 (* r00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x7656 ?x7656 ?x7656)) (* 36 (* s00 s00 r00 r00 s!1)) (* 5184 (* r00 r00 r00 x00 r!2)) (* (- 108) (* r00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x7656 ?x7656)) (* 2592 (* x00 x!0 r!2)) (* 2592 (* r00 r00 r00 x00 r!2 r!2 r!2)) (* 216 (* r00 s!1 x!0 r!2)) (* (- 3240) (* s00 r00 x00 r!2 r!2)) (* 16 (* s00 s00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x7656 ?x7656)) (* 648 (* s00 s00 r00 r!2 r!2 r!2)) (* 216 (* s00 s00 r00 r00 r!2 r!2 r!2)) (* 108 (* s!1 r!2 r!2 r!2)) (* 324 (* r00 x!0)))))
 (let (($x7301 (= ?x7250 (- 81))))
 (let (($x7642 (not $x7301)))
 (let ((?x1669 (* 108 ?x1452)))
 (let ((?x5027 (* 16 ?x1290)))
 (let ((?x2183 (* (- 432) ?x988)))
 (let ((?x4603 (* (- 108) ?x911)))
 (let ((?x7444 (* (- 36) ?x753)))
 (let ((?x6726 (* 51 ?x697)))
 (let ((?x636 (* r00 r00 s!1)))
 (let ((?x6708 (* 36 ?x636)))
 (let ((?x1817 (* 108 ?x628)))
 (let ((?x5663 (* (- 9) s!1)))
 (let ((?x137 (* 9 s00)))
 (let ((?x7632 (+ ?x137 ?x5663 (* (- 54) ?x532) (* 216 ?x619) ?x1817 ?x6708 ?x6726 ?x7444 (* (- 108) ?x774) (* 108 (* x00 s!1)) (* (- 36) ?x837) ?x4603 ?x2183 (* 216 ?x1162) (* (- 108) ?x1218) ?x5027 ?x1669 (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)) (* 108 (* s00 x!0)) (* 15 ?x2829) (* (- 4) ?x4878) (* 108 ?x5038) (* 108 (* s00 r00 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* (- 108) (* r00 x!0)))))
 (let (($x7634 (= ?x7632 0)))
 (let ((?x983 (* r00 r00 x00)))
 (let ((?x2184 (* 36 ?x983)))
 (let ((?x3686 (* (- 6) ?x911)))
 (let ((?x1836 (* 15 ?x697)))
 (let ((?x6411 (* 54 ?x628)))
 (let ((?x4905 (+ ?x137 ?x5663 (* (- 24) ?x532) ?x6411 ?x6708 ?x1836 ?x7444 (* 2 ?x774) (* 6 (* x00 s!1)) (* (- 24) (* s00 r!2)) ?x3686 ?x2184 (* (- 6) ?x1218) (* 4 (* s00 s00 r!2)) (* 36 (* r00 x00 r!2)) (* (- 2) (* s00 s!1 r!2)) (* 54 (* x00 r!2)) (* (- 36) (* r00 x!0 r!2)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* 6 (* s00 x!0)) (* (- 3) ?x2829) (* (- 36) (* r00 r00 x!0)) (* 24 (* s!1 r!2)) (* (- 2) (* s!1 s!1 r!2)) (* 2 (* s00 r00 s!1)) (* (- 54) (* x!0 r!2)) (* (- 54) (* r00 x!0)))))
 (let (($x4582 (= ?x4905 0)))
 (let ((?x1273 (* 4 ?x697)))
 (let ((?x1247 (* 18 ?x628)))
 (let ((?x2254 (+ ?x44 ?x2383 (* (- 9) ?x532) ?x1247 (* 6 ?x636) ?x1273 (* (- 6) ?x753) (* (- 9) (* s00 r!2)) (* (- 6) (* r00 s!1 r!2)) (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* 6 (* s00 r00 r!2)) (* 9 (* r00 s!1)) (* (- 2) ?x2829) (* 9 (* s!1 r!2)) (* (- 18) (* x!0 r!2)) (* (- 18) (* r00 x!0)))))
 (let (($x2150 (= ?x2254 0)))
 (let ((?x2912 (* (- 3) ?x407)))
 (let ((?x3106 (+ s00 ?x2912 (* 3 ?x493) ?x4857)))
 (let (($x7652 (= ?x3106 0)))
 (let (($x6554 (and $x7652 $x1228 $x2150 $x4582 $x7634 $x7642)))
 (let ((?x4862 (+ 3 ?x4580 s!1)))
 (let ((?x1605 (* (- 216) (* r00 r00 r00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862))))
 (let ((?x2125 (* 216 (* r00 r00 r00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862))))
 (let ((?x5016 (* (- 36) (* r00 r00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862 ?x4862))))
 (let ((?x2799 (* 36 (* r00 r00 s00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862))))
 (let ((?x2652 (* 432 (* r00 r00 r00 x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862))))
 (let ((?x6645 (* (- 432) (* r00 r00 r00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862))))
 (let ((?x5212 (* (- 36) (* s!1 s!1 r00 r00))))
 (let ((?x7360 (+ ?x4946 ?x4940 ?x2721 ?x6303 ?x5907 ?x4816 ?x3713 (* 1620 (* r!2 r!2 s00 s00 r00)) (* 216 (* r!2 s!1)) (* (- 1944) (* r!2 r00 r00)) (* 432 (* r!2 s00 r00 r00)) (* 3456 (* r!2 s00)) ?x7843 (* 432 (* r!2 r!2 s!1 r00 r00 r00 x00)) (* 108 (* r00 x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) ?x2473 ?x1557 ?x3314 ?x4906 (* (- 2592) (* r!2 s!1 r00)) (* 1296 (* r!2 x!0 r00)) (* (- 216) (* s!1 r00 r00)) ?x3051 (* (- 324) (* x!0 s00)) (* 324 (* x!0 r00)) (* 2592 (* s!1 r00 r00 r00)) (* 648 (* r!2 r!2 r!2 s00 s00 r00)) ?x5725 (* (- 162) (* s!1 s!1 r00)) (* 16 (* s00 s00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) (* (- 5832) (* r!2 x00)) ?x3275 (* 711 (* s!1 s00)) (* (- 648) (* s!1 r00)) (* 432 (* r!2 s00 s00 r00 r00)) (* (- 1296) (* s!1 x00)) (* (- 5184) (* r!2 s00 r00)) ?x1491 (* 432 (* s!1 r00 r00 r00 x00)) (* (- 1242) (* s!1 s00 r00)) (* 108 (* r!2 r!2 r!2 s!1)) ?x1790 ?x4791 (* (- 1278) (* r!2 s!1 s!1)) ?x2331 (* (- 612) (* r!2 s00 s00)) (* 216 (* r!2 r!2 r!2 s00 s00 r00 r00)) ?x2343 ?x5071 (* 2862 (* r!2 s!1 s00)) (* (- 216) (* r00 s00 x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* 174 (* s!1 s!1 s00)) (* (- 1296) (* r!2 r00 x00)) (* 540 (* r!2 r!2 s00 s00 r00 r00)) (* 108 (* r!2 r!2 s!1 s00 s00 r00)) (* 108 (* s!1 s00 s00 r00)) (* 216 (* r!2 s!1 s00 s00 r00)) (* (- 108) (* s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) ?x2190 (* (- 1296) (* x!0 r00 r00 r00)) (* 6480 (* r!2 r!2 r00 r00 r00 x00)) (* 1296 (* r!2 s00 s00 r00)) (* 648 (* x!0 s00 r00)) (* 54 (* r00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* 216 (* r00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) ?x5212 ?x2928 (* 108 (* s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x4862 ?x4862)) (* (- 108) (* x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862)) (* 108 (* x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862 ?x4862)) (* 1620 (* r!2 r!2 x!0 r00)) (* 648 (* x!0 x00)) (* (- 16) (* s00 s00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* (- 216) (* x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x4862 ?x4862)) ?x5287 (* (- 12) (* s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862)) (* 216 (* r!2 s!1 x!0 r00)) (* (- 216) (* r!2 r!2 s!1 s00 r00 x00)) (* (- 2592) (* r!2 s00 r00 x00)) (* (- 3240) (* r!2 r!2 s00 r00 x00)) ?x5903 (* 7587 (* r!2 r!2 s00)) (* 7074 (* r!2 r!2 r!2 s00)) (* 648 (* r!2 r!2 r!2 x!0 r00)) (* 648 (* r!2 r!2 r!2 s00 x00)) (* 3591 (* r!2 r!2 s!1 s00)) (* 36 (* r00 r00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* 216 (* s!1 x!0 x00)) (* 432 (* r!2 s!1 x!0 x00)) (* 216 (* r!2 r!2 s!1 x!0 x00)) (* 270 (* r!2 r!2 s!1)) (* (- 216) (* s!1 s00 r00 x00)) (* (- 432) (* r!2 s!1 s00 r00 x00)) (* 108 (* s!1 x!0 r00)) (* 108 (* r!2 r!2 s!1 x!0 r00)) (* (- 1296) (* r!2 r!2 r!2 s00 r00 x00)) ?x7406 (* (- 1296) (* r!2 r!2 r!2 s00 r00 r00 r00)) (* (- 3240) (* r!2 r!2 s00 r00 r00 r00)) (* (- 2592) (* r!2 s00 r00 r00 r00)) (* (- 216) (* s!1 s00 r00 r00 r00)) (* (- 9) (* s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* 2592 (* r!2 r!2 r!2 r00 r00 r00 x00)) (* (- 432) (* r!2 s!1 s00 r00 r00 r00)) (* (- 216) (* r00 r00 r00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862 ?x4862)) (* (- 54) (* r00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862)) (* (- 216) (* r!2 r!2 s!1 s00 r00 r00 r00)) (* 1296 (* r!2 s00 x00)) (* 108 (* ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) (* (- 108) (* r00 s00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) (* 2592 (* r!2 x!0 x00)) (* (- 306) (* r!2 r!2 r!2 s00 s00)) (* (- 51) (* s00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* 348 (* r!2 s!1 s!1 s00)) (* 174 (* r!2 r!2 s!1 s!1 s00)) (* (- 108) (* ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* (- 16) (* s!1 s00 s00 s00)) (* (- 32) (* r!2 s!1 s00 s00 s00)) (* (- 16) (* r!2 r!2 s!1 s00 s00 s00)) (* (- 192) (* r!2 s00 s00 s00)) (* (- 240) (* r!2 r!2 s00 s00 s00)) (* (- 96) (* r!2 r!2 r!2 s00 s00 s00)) (* 36 (* s!1 s00 r00 r00)) (* (- 51) (* s!1 s00 s00)) (* (- 102) (* r!2 s!1 s00 s00)) (* (- 51) (* r!2 r!2 s!1 s00 s00)) (* (- 765) (* r!2 r!2 s00 s00)) (* 36 (* r!2 r!2 s!1 s00 s00 r00 r00)) (* 12 (* s00 ?x4853 ?x4853 ?x4862 ?x4862 ?x4862)) (* (- 216) (* r!2 s!1 r00 x00)) (* (- 108) (* r!2 r!2 s!1 r00 x00)) (* 108 (* x00 x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) (* 12 (* s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862 ?x4862)) (* (- 1620) (* r!2 r!2 r00 x00)) (* (- 648) (* r!2 r!2 r!2 r00 x00)) (* (- 108) (* s!1 r00 x00)) (* (- 108) (* s00 x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) (* (- 72) (* r!2 s!1 s!1 r00 r00)) (* 1296 (* r!2 r!2 r!2 x!0 x00)) (* (- 864) (* r!2 s!1 r00 r00)) (* (- 1080) (* r!2 r!2 s!1 r00 r00)) (* (- 432) (* r!2 r!2 r!2 s!1 r00 r00)) (* (- 36) (* r!2 r!2 s!1 s!1 r00 r00)) (* 72 (* r!2 s!1 s00 r00 r00)) (* (- 108) (* r00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862)) (* (- 1296) (* r!2 r!2 r!2 r!2 r00 r00)) (* (- 3888) (* r!2 r!2 r!2 r00 r00)) (* 108 (* s00 x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* (- 4) (* ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862 ?x4862)) (* (- 4212) (* r!2 r!2 r00 r00)) (* 108 (* ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862)) (* 9 (* ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862)) (* 108 (* r00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862 ?x4862)) (* 54 (* r00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862 ?x4862)) (* (- 1611) (* r!2 r!2 s!1 s!1)) (* (- 15) (* ?x4853 ?x4853 ?x4862 ?x4862 ?x4862)) (* 15 (* ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862)) (* 5184 (* r!2 r00 r00 r00 x00)) (* (- 1296) (* r!2 x!0 x!0)) (* (- 1620) (* r!2 r!2 x!0 x!0)) (* (- 648) (* r!2 r!2 r!2 x!0 x!0)) (* 11664 (* r!2 r00 r00 r00)) (* (- 108) (* r00 x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* 216 (* r!2 r!2 s!1 s!1 x!0)) (* 432 (* r!2 s!1 s!1 x!0)) (* (- 108) (* x00 x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* (- 108) (* r!2 r!2 s!1 x!0 x!0)) (* (- 216) (* r!2 s!1 x!0 x!0)) (* 108 (* ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862)) ?x1034 (* 23328 (* r!2 r!2 r!2 r00 r00 r00)) (* 25272 (* r!2 r!2 r00 r00 r00)) ?x1192 (* 1296 (* r!2 r!2 r!2 s!1 x!0)) (* 3240 (* r!2 r!2 s!1 x!0)) (* 2592 (* r!2 s!1 x!0)) (* 216 (* r00 r00 r00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) (* (- 36) (* r00 r00 ?x4853 ?x4853 ?x4862 ?x4862 ?x4862)) (* (- 9) (* ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862 ?x4862)) ?x6645 (* (- 36) (* r00 r00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) (* 216 (* x00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* (- 216) (* r!2 s!1 s!1 s!1)) (* (- 108) (* r!2 r!2 s!1 s!1 s!1)) (* (- 648) (* r!2 r!2 r!2 s!1 s!1)) (* 216 (* r!2 s!1 s00 x00)) (* 108 (* r!2 r!2 s!1 s00 x00)) ?x2652 (* 216 (* r!2 r!2 r!2 s00 r00 r00)) (* 108 (* s!1 s00 x00)) (* 1620 (* r!2 r!2 s00 x00)) (* 10368 (* r!2 s!1 r00 r00 r00)) (* 12960 (* r!2 r!2 s!1 r00 r00 r00)) (* 1296 (* r!2 s!1 s!1 r00 r00 r00)) (* 648 (* s!1 s!1 r00 r00 r00)) (* 5184 (* r!2 r!2 r!2 s!1 r00 r00 r00)) (* 648 (* r!2 r!2 s!1 s!1 r00 r00 r00)) (* (- 5184) (* r!2 x!0 r00 r00 r00)) (* 66 (* s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862)) (* 108 (* r00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* (- 6480) (* r!2 r!2 x!0 r00 r00 r00)) (* (- 864) (* r!2 s!1 x!0 r00 r00 r00)) (* (- 432) (* s!1 x!0 r00 r00 r00)) (* (- 2592) (* r!2 r!2 r!2 x!0 r00 r00 r00)) (* (- 432) (* r!2 r!2 s!1 x!0 r00 r00 r00)) (* 864 (* r!2 s!1 r00 r00 r00 x00)) (* (- 108) (* s!1 x00 x00)) (* (- 108) (* r!2 r!2 s!1 x00 x00)) (* (- 216) (* r!2 s!1 x00 x00)) (* 36 (* s!1 s00 s00 r00 r00)) (* 36 (* r00 r00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862)) (* (- 1296) (* r!2 x00 x00)) (* 216 (* r00 s00 x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) (* (- 1620) (* r!2 r!2 x00 x00)) (* (- 11826) (* r!2 r!2 s00 r00)) (* (- 36) (* r00 r00 s00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) (* 72 (* r!2 s!1 s00 s00 r00 r00)) ?x2799 ?x5016 (* (- 648) (* r!2 r!2 r!2 x00 x00)) (* 4 (* ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862 ?x4862 ?x4862)) (* (- 54) (* r00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) (* (- 432) (* r00 r00 r00 x00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) (* (- 11340) (* r!2 r!2 r!2 s00 r00)) (* (- 108) (* ?x4853 ?x4856 ?x4856 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* (- 5076) (* r!2 s!1 s00 r00)) (* 3240 (* r!2 r!2 x!0 x00)) (* (- 6426) (* r!2 r!2 s!1 s00 r00)) (* (- 324) (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 648) (* r!2 s!1 s!1 s00 r00)) (* (- 324) (* s!1 s!1 s00 r00)) (* (- 2592) (* r!2 r!2 r!2 s!1 s00 r00)) (* 2376 (* r!2 r!2 r!2 r!2 s00)) (* (- 3888) (* r!2 r!2 r!2 r!2 s00 r00)) (* (- 6480) (* r!2 r!2 s!1 x00)) (* (- 5184) (* r!2 s!1 x00)) (* (- 11664) (* r!2 r!2 r!2 x00)) (* (- 12636) (* r!2 r!2 x00)) (* (- 216) (* r00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x4862 ?x4862)) (* 36 (* r!2 r!2 s!1 s00 r00 r00)) (* (- 324) (* s!1 s!1 x00)) (* (- 648) (* r!2 s!1 s!1 x00)) (* (- 324) (* r!2 r!2 s!1 s!1 x00)) (* (- 66) (* s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862 ?x4862)) (* 108 (* r00 s00 s00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862)) (* (- 3888) (* r!2 r!2 r!2 r!2 x00)) (* (- 2592) (* r!2 r!2 r!2 s!1 x00)) (* 51 (* s00 s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)) ?x2125 (* (- 108) (* r00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x4862 ?x4862)) (* (- 2916) (* r!2 r00)) (* (- 6318) (* r!2 r!2 r00)) (* (- 5832) (* r!2 r!2 r!2 r00)) (* (- 3240) (* r!2 r!2 s!1 r00)) (* 432 (* r00 r00 r00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4856 ?x4862 ?x4862)) (* 7776 (* r!2 r!2 r!2 r!2 r00 r00 r00)) (* (- 1944) (* r!2 r!2 r!2 r!2 r00)) (* (- 1296) (* r!2 r!2 r!2 s!1 r00)) (* (- 324) (* r!2 s!1 s!1 r00)) (* (- 162) (* r!2 r!2 s!1 s!1 r00)) (* 4 (* ?x4853 ?x4853 ?x4862 ?x4862 ?x4862 ?x4862)) (* (- 36) (* r00 r00 ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862)) (* 540 (* r!2 r!2 s00 r00 r00)) (* 1440 (* r!2 r!2 r!2 s!1 s00)) (* (- 1296) (* r!2 x!0 s00)) (* (- 1620) (* r!2 r!2 x!0 s00)) (* (- 648) (* r!2 r!2 r!2 x!0 s00)) (* (- 108) (* s!1 x!0 s00)) (* (- 216) (* r!2 s!1 x!0 s00)) ?x1605 (* (- 108) (* r!2 r!2 s!1 x!0 s00)) (* 2592 (* r!2 x!0 s00 r00)) (* 3240 (* r!2 r!2 x!0 s00 r00)) (* 1296 (* r!2 r!2 r!2 x!0 s00 r00)) (* 216 (* s!1 x!0 s00 r00)) (* 432 (* r!2 s!1 x!0 s00 r00)) (* 216 (* r!2 r!2 s!1 x!0 s00 r00)) (* 36 (* r00 r00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862 ?x4862)) (* (- 15) (* ?x4853 ?x4856 ?x4856 ?x4856 ?x4862 ?x4862 ?x4862 ?x4862 ?x4862)) (* 9 (* s00 ?x4853 ?x4853 ?x4853 ?x4856 ?x4862 ?x4862)))))
 (let ((?x1482 (* (- 108) ?x1452)))
 (let ((?x1481 (* (- 16) ?x1290)))
 (let ((?x1477 (* (- 216) ?x1162)))
 (let ((?x989 (* 432 ?x988)))
 (let ((?x1235 (* 108 ?x911)))
 (let ((?x838 (* 36 ?x837)))
 (let ((?x1118 (* 108 ?x774)))
 (let ((?x1106 (* 36 ?x753)))
 (let ((?x1471 (* (- 51) ?x697)))
 (let ((?x4753 (* s!1 r00 r00)))
 (let ((?x4984 (* (- 36) ?x4753)))
 (let ((?x1468 (* (- 108) ?x628)))
 (let ((?x1467 (* (- 216) ?x619)))
 (let ((?x626 (* 54 ?x532)))
 (let ((?x1093 (* (- 9) s00)))
 (let ((?x3035 (* 9 s!1)))
 (let ((?x3919 (+ ?x3035 ?x1093 ?x626 ?x1467 ?x1468 (* (- 15) ?x2829) ?x4984 ?x1471 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1106 ?x1118 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x838 (* (- 108) (* s!1 s00 r00)) (* 4 ?x4878) ?x1235 (* 108 ?x1218) (* (- 108) ?x5038) ?x989 (* 12 (* s!1 s!1 s00)) ?x1477 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) ?x5212 ?x1481 (* 216 (* x!0 x00)) ?x1482)))
 (let ((?x996 (* (- 36) ?x983)))
 (let ((?x912 (* 6 ?x911)))
 (let ((?x802 (* (- 2) ?x774)))
 (let ((?x1022 (* (- 15) ?x697)))
 (let ((?x657 (* (- 54) ?x628)))
 (let ((?x670 (* 24 ?x532)))
 (let ((?x5037 (+ ?x3035 ?x1093 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x670 ?x657 (* 3 ?x2829) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x4984 ?x1022 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1106 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x802 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x912 (* 2 (* r!2 s!1 s!1)) (* 6 ?x1218) (* (- 4) (* r!2 s00 s00)) ?x996 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x754 (* 6 ?x753)))
 (let ((?x710 (* (- 4) ?x697)))
 (let ((?x642 (* (- 18) ?x628)))
 (let ((?x647 (* 9 ?x532)))
 (let ((?x484 (* (- 3) s00)))
 (let ((?x4051 (+ (* 3 s!1) ?x484 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x647 ?x642 (* 2 ?x2829) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x4753) ?x710 (* 18 (* x!0 r00)) ?x754 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x3268 (+ ?x6216 ?x2383 ?x3507 ?x44 ?x606 ?x607 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x610 ?x576)))
 (let (($x6083 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x493) (* 3 ?x407)) 0) (= ?x3268 0) (= ?x4051 0) (= ?x5037 0) (= ?x3919 0) (not (= ?x7360 (- 81))))))
 (let (($x6786 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1492 (+ 3 ?x213 s)))
 (let ((?x386 (* (- 1) s)))
 (let ((?x1498 (+ ?x386 x)))
 (let ((?x1489 (+ 1 r)))
 (let ((?x6877 (* (- 108) (* r r s x s00))))
 (let ((?x6863 (* (- 216) (* r00 r00 r00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492))))
 (let ((?x6891 (* (- 216) (* r s x s00))))
 (let ((?x6851 (* (- 108) (* s x s00))))
 (let ((?x6842 (* (- 648) (* r r r x s00))))
 (let ((?x6890 (* (- 1620) (* r r x s00))))
 (let ((?x6889 (* (- 1296) (* r x s00))))
 (let ((?x6426 (* (- 1944) (* r r r r r00))))
 (let ((?x6548 (* (- 5832) (* r r r r00))))
 (let ((?x6547 (* (- 6318) (* r r r00))))
 (let ((?x6545 (* (- 2916) (* r r00))))
 (let ((?x4229 (* 216 (* r00 r00 r00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492))))
 (let ((?x6086 (* (- 3888) (* r r r r x00))))
 (let ((?x6150 (* (- 12636) (* r r x00))))
 (let ((?x6151 (* (- 11664) (* r r r x00))))
 (let ((?x5811 (* (- 3888) (* r r r r s00 r00))))
 (let ((?x5420 (* (- 648) (* r r r x00 x00))))
 (let ((?x5408 (* (- 36) (* r00 r00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492 ?x1492))))
 (let ((?x5387 (* 36 (* r00 r00 s00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492))))
 (let ((?x5401 (* (- 1620) (* r r x00 x00))))
 (let ((?x5406 (* (- 1296) (* r x00 x00))))
 (let ((?x5404 (* (- 216) (* r s x00 x00))))
 (let ((?x5413 (* (- 108) (* r r s x00 x00))))
 (let ((?x5113 (* (- 108) (* s x00 x00))))
 (let ((?x5047 (* (- 432) (* r r s x r00 r00 r00))))
 (let ((?x5034 (* (- 2592) (* r r r x r00 r00 r00))))
 (let ((?x5022 (* (- 432) (* s x r00 r00 r00))))
 (let ((?x5065 (* (- 864) (* r s x r00 r00 r00))))
 (let ((?x5064 (* (- 6480) (* r r x r00 r00 r00))))
 (let ((?x5062 (* (- 5184) (* r x r00 r00 r00))))
 (let ((?x4540 (* 108 (* s s00 x00))))
 (let ((?x4958 (* 432 (* r00 r00 r00 x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492))))
 (let ((?x4539 (* 108 (* r r s s00 x00))))
 (let ((?x4452 (* (- 648) (* r r r s s))))
 (let ((?x4443 (* (- 108) (* r r s s s))))
 (let ((?x4486 (* (- 216) (* r s s s))))
 (let ((?x875 (* (- 432) (* r00 r00 r00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492))))
 (let ((?x4485 (* 2592 (* r s x))))
 (let ((?x4483 (* 3240 (* r r s x))))
 (let ((?x4481 (* 1296 (* r r r s x))))
 (let ((?x4479 (* 216 (* s s x))))
 (let ((?x4131 (* (- 108) (* s x x))))
 (let ((?x4474 (* (- 216) (* r s x x))))
 (let ((?x3975 (* (- 108) (* r r s x x))))
 (let ((?x4478 (* 432 (* r s s x))))
 (let ((?x4477 (* 216 (* r r s s x))))
 (let ((?x4126 (* (- 648) (* r r r x x))))
 (let ((?x4475 (* (- 1620) (* r r x x))))
 (let ((?x4476 (* (- 1296) (* r x x))))
 (let ((?x3988 (* (- 15) (* ?x1489 ?x1489 ?x1492 ?x1492 ?x1492))))
 (let ((?x4504 (* (- 1611) (* r r s s))))
 (let ((?x3730 (* (- 4212) (* r r r00 r00))))
 (let ((?x3728 (* (- 3888) (* r r r r00 r00))))
 (let ((?x3615 (* (- 1296) (* r r r r r00 r00))))
 (let ((?x3578 (* (- 36) (* r r s s r00 r00))))
 (let ((?x3720 (* (- 432) (* r r r s r00 r00))))
 (let ((?x3722 (* (- 1080) (* r r s r00 r00))))
 (let ((?x3724 (* (- 864) (* r s r00 r00))))
 (let ((?x3726 (* (- 72) (* r s s r00 r00))))
 (let ((?x3345 (* (- 108) (* s r00 x00))))
 (let ((?x3334 (* (- 648) (* r r r r00 x00))))
 (let ((?x3134 (* (- 1620) (* r r r00 x00))))
 (let ((?x3196 (* (- 108) (* r r s r00 x00))))
 (let ((?x3139 (* (- 216) (* r s r00 x00))))
 (let ((?x2483 (* (- 765) (* r r s00 s00))))
 (let ((?x2478 (* (- 51) (* r r s s00 s00))))
 (let ((?x2488 (* (- 102) (* r s s00 s00))))
 (let ((?x2749 (* (- 51) (* s s00 s00))))
 (let ((?x2949 (* (- 96) (* r r r s00 s00 s00))))
 (let ((?x2845 (* (- 240) (* r r s00 s00 s00))))
 (let ((?x2847 (* (- 192) (* r s00 s00 s00))))
 (let ((?x2962 (* (- 16) (* r r s s00 s00 s00))))
 (let ((?x2843 (* (- 32) (* r s s00 s00 s00))))
 (let ((?x2954 (* (- 16) (* s s00 s00 s00))))
 (let ((?x6912 (* 174 (* r r s s s00))))
 (let ((?x2740 (* (- 306) (* r r r s00 s00))))
 (let ((?x2333 (* (- 216) (* r r s s00 r00 r00 r00))))
 (let ((?x2182 (* (- 432) (* r s s00 r00 r00 r00))))
 (let ((?x2133 (* (- 216) (* s s00 r00 r00 r00))))
 (let ((?x2180 (* (- 2592) (* r s00 r00 r00 r00))))
 (let ((?x2188 (* (- 3240) (* r r s00 r00 r00 r00))))
 (let ((?x2037 (* (- 1296) (* r r r s00 r00 r00 r00))))
 (let ((?x2002 (* (- 1296) (* r r r s00 r00 x00))))
 (let ((?x2012 (* (- 432) (* r s s00 r00 x00))))
 (let ((?x1837 (* (- 216) (* s s00 r00 x00))))
 (let ((?x1791 (* 216 (* r r s x x00))))
 (let ((?x1783 (* 216 (* s x x00))))
 (let ((?x2016 (* (- 3240) (* r r s00 r00 x00))))
 (let ((?x2014 (* (- 2592) (* r s00 r00 x00))))
 (let ((?x1540 (* (- 216) (* r r s s00 r00 x00))))
 (let ((?x1452 (* x00 x00)))
 (let ((?x5287 (* (- 324) ?x1452)))
 (let ((?x1426 (* x x00)))
 (let ((?x1798 (* 648 ?x1426)))
 (let ((?x1290 (* s00 s00 s00)))
 (let ((?x2928 (* (- 48) ?x1290)))
 (let ((?x1479 (* (- 36) (* s s r00 r00))))
 (let ((?x1182 (* x r00 r00 r00)))
 (let ((?x4945 (* (- 1296) ?x1182)))
 (let ((?x1162 (* s00 r00 r00 r00)))
 (let ((?x2190 (* (- 648) ?x1162)))
 (let ((?x1047 (* r r00 x00)))
 (let ((?x3136 (* (- 1296) ?x1047)))
 (let ((?x1046 (* s s s00)))
 (let ((?x6907 (* 174 ?x1046)))
 (let ((?x988 (* r00 r00 r00 x00)))
 (let ((?x5071 (* 1296 ?x988)))
 (let ((?x960 (* x x)))
 (let ((?x3979 (* (- 324) ?x960)))
 (let ((?x931 (* r s00 s00)))
 (let ((?x2485 (* (- 612) ?x931)))
 (let ((?x919 (* s x)))
 (let ((?x3972 (* 648 ?x919)))
 (let ((?x911 (* s00 x00)))
 (let ((?x4791 (* 324 ?x911)))
 (let ((?x909 (* s s s)))
 (let ((?x4448 (* (- 108) ?x909)))
 (let ((?x837 (* s00 s00 r00 r00)))
 (let ((?x1491 (* 108 ?x837)))
 (let ((?x830 (* s x00)))
 (let ((?x6166 (* (- 1296) ?x830)))
 (let ((?x774 (* s00 s00 r00)))
 (let ((?x3275 (* 324 ?x774)))
 (let ((?x765 (* r x00)))
 (let ((?x6149 (* (- 5832) ?x765)))
 (let ((?x753 (* s00 r00 r00)))
 (let ((?x5725 (* 108 ?x753)))
 (let ((?x706 (* x s00)))
 (let ((?x6694 (* (- 324) ?x706)))
 (let ((?x697 (* s00 s00)))
 (let ((?x3051 (* (- 153) ?x697)))
 (let ((?x671 (* s r00 r00)))
 (let ((?x3719 (* (- 216) ?x671)))
 (let ((?x651 (* s s)))
 (let ((?x4500 (* (- 315) ?x651)))
 (let ((?x628 (* r00 x00)))
 (let ((?x3314 (* (- 324) ?x628)))
 (let ((?x619 (* s00 r00 x00)))
 (let ((?x1557 (* (- 648) ?x619)))
 (let ((?x575 (* r00 r00 r00)))
 (let ((?x2473 (* 1944 ?x575)))
 (let ((?x532 (* s00 r00)))
 (let ((?x7843 (* (- 810) ?x532)))
 (let ((?x457 (* r r00 r00)))
 (let ((?x3732 (* (- 1944) ?x457)))
 (let ((?x407 (* r00 r00)))
 (let ((?x3713 (* (- 324) ?x407)))
 (let ((?x5907 (* (- 972) x00)))
 (let ((?x6303 (* (- 486) r00)))
 (let ((?x2721 (* 567 s00)))
 (let ((?x7805 (+ (* 486 r) (* 54 s) ?x2721 ?x6303 ?x5907 (* 1053 (* r r)) ?x3713 (* 1620 (* r r s00 s00 r00)) (* 216 (* r s)) ?x3732 (* 432 (* r s00 r00 r00)) (* 3456 (* r s00)) ?x7843 (* 432 (* r r s r00 r00 r00 x00)) (* 108 (* r00 x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) ?x2473 ?x1557 ?x3314 ?x4500 (* (- 2592) (* r s r00)) (* 1296 (* r x r00)) ?x3719 ?x3051 ?x6694 (* 324 (* x r00)) (* 2592 (* s r00 r00 r00)) (* 648 (* r r r s00 s00 r00)) ?x5725 (* (- 162) (* s s r00)) (* 16 (* s00 s00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) ?x6149 ?x3275 (* 711 (* s s00)) (* (- 648) (* s r00)) (* 432 (* r s00 s00 r00 r00)) ?x6166 (* (- 5184) (* r s00 r00)) ?x1491 (* 432 (* s r00 r00 r00 x00)) (* (- 1242) (* s s00 r00)) (* 108 (* r r r s)) ?x4448 ?x4791 (* (- 1278) (* r s s)) ?x3972 ?x2485 (* 216 (* r r r s00 s00 r00 r00)) ?x3979 ?x5071 (* 2862 (* r s s00)) (* (- 216) (* r00 s00 x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x6907 ?x3136 (* 540 (* r r s00 s00 r00 r00)) (* 108 (* r r s s00 s00 r00)) (* 108 (* s s00 s00 r00)) (* 216 (* r s s00 s00 r00)) (* (- 108) (* s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x2190 ?x4945 (* 6480 (* r r r00 r00 r00 x00)) (* 1296 (* r s00 s00 r00)) (* 648 (* x s00 r00)) (* 54 (* r00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) (* 216 (* r00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x1479 ?x2928 (* 108 (* s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1492 ?x1492)) (* (- 108) (* x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 108 (* x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) (* 1620 (* r r x r00)) ?x1798 (* (- 16) (* s00 s00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) (* (- 216) (* x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1492 ?x1492)) ?x5287 (* (- 12) (* s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 216 (* r s x r00)) ?x1540 ?x2014 ?x2016 (* 972 (* r r r)) (* 7587 (* r r s00)) (* 7074 (* r r r s00)) (* 648 (* r r r x r00)) (* 648 (* r r r s00 x00)) (* 3591 (* r r s s00)) (* 36 (* r00 r00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x1783 (* 432 (* r s x x00)) ?x1791 (* 270 (* r r s)) ?x1837 ?x2012 (* 108 (* s x r00)) (* 108 (* r r s x r00)) ?x2002 (* 324 (* r r r r)) ?x2037 ?x2188 ?x2180 ?x2133 (* (- 9) (* s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) (* 2592 (* r r r r00 r00 r00 x00)) ?x2182 (* (- 216) (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) (* (- 54) (* r00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) ?x2333 (* 1296 (* r s00 x00)) (* 108 (* ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* (- 108) (* r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* 2592 (* r x x00)) ?x2740 (* (- 51) (* s00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) (* 348 (* r s s s00)) ?x6912 (* (- 108) (* ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x2954 ?x2843 ?x2962 ?x2847 ?x2845 ?x2949 (* 36 (* s s00 r00 r00)) ?x2749 ?x2488 ?x2478 ?x2483 (* 36 (* r r s s00 s00 r00 r00)) (* 12 (* s00 ?x1489 ?x1489 ?x1492 ?x1492 ?x1492)) ?x3139 ?x3196 (* 108 (* x00 x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* 12 (* s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492 ?x1492)) ?x3134 ?x3334 ?x3345 (* (- 108) (* s00 x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) ?x3726 (* 1296 (* r r r x x00)) ?x3724 ?x3722 ?x3720 ?x3578 (* 72 (* r s s00 r00 r00)) (* (- 108) (* r00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) ?x3615 ?x3728 (* 108 (* s00 x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) (* (- 4) (* ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492 ?x1492)) ?x3730 (* 108 (* ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 9 (* ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 108 (* r00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) (* 54 (* r00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) ?x4504 ?x3988 (* 15 (* ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 5184 (* r r00 r00 r00 x00)) ?x4476 ?x4475 ?x4126 (* 11664 (* r r00 r00 r00)) (* (- 108) (* r00 x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x4477 ?x4478 (* (- 108) (* x00 x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x3975 ?x4474 (* 108 (* ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492)) ?x4131 (* 23328 (* r r r r00 r00 r00)) (* 25272 (* r r r00 r00 r00)) ?x4479 ?x4481 ?x4483 ?x4485 (* 216 (* r00 r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* (- 36) (* r00 r00 ?x1489 ?x1489 ?x1492 ?x1492 ?x1492)) (* (- 9) (* ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) ?x875 (* (- 36) (* r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* 216 (* x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x4486 ?x4443 ?x4452 (* 216 (* r s s00 x00)) ?x4539 ?x4958 (* 216 (* r r r s00 r00 r00)) ?x4540 (* 1620 (* r r s00 x00)) (* 10368 (* r s r00 r00 r00)) (* 12960 (* r r s r00 r00 r00)) (* 1296 (* r s s r00 r00 r00)) (* 648 (* s s r00 r00 r00)) (* 5184 (* r r r s r00 r00 r00)) (* 648 (* r r s s r00 r00 r00)) ?x5062 (* 66 (* s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 108 (* r00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x5064 ?x5065 ?x5022 ?x5034 ?x5047 (* 864 (* r s r00 r00 r00 x00)) ?x5113 ?x5413 ?x5404 (* 36 (* s s00 s00 r00 r00)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) ?x5406 (* 216 (* r00 s00 x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) ?x5401 (* (- 11826) (* r r s00 r00)) (* (- 36) (* r00 r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* 72 (* r s s00 s00 r00 r00)) ?x5387 ?x5408 ?x5420 (* 4 (* ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492 ?x1492 ?x1492)) (* (- 54) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* (- 432) (* r00 r00 r00 x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* (- 11340) (* r r r s00 r00)) (* (- 108) (* ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) (* (- 5076) (* r s s00 r00)) (* 3240 (* r r x x00)) (* (- 6426) (* r r s s00 r00)) (* (- 324) (* r r s s s00 r00)) (* (- 648) (* r s s s00 r00)) (* (- 324) (* s s s00 r00)) (* (- 2592) (* r r r s s00 r00)) (* 2376 (* r r r r s00)) ?x5811 (* (- 6480) (* r r s x00)) (* (- 5184) (* r s x00)) ?x6151 ?x6150 (* (- 216) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1492 ?x1492)) (* 36 (* r r s s00 r00 r00)) (* (- 324) (* s s x00)) (* (- 648) (* r s s x00)) (* (- 324) (* r r s s x00)) (* (- 66) (* s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) (* 108 (* r00 s00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x6086 (* (- 2592) (* r r r s x00)) (* 51 (* s00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) ?x4229 (* (- 108) (* r00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1492 ?x1492)) ?x6545 ?x6547 ?x6548 (* (- 3240) (* r r s r00)) (* 432 (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1492 ?x1492)) (* 7776 (* r r r r r00 r00 r00)) ?x6426 (* (- 1296) (* r r r s r00)) (* (- 324) (* r s s r00)) (* (- 162) (* r r s s r00)) (* 4 (* ?x1489 ?x1489 ?x1492 ?x1492 ?x1492 ?x1492)) (* (- 36) (* r00 r00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 540 (* r r s00 r00 r00)) (* 1440 (* r r r s s00)) ?x6889 ?x6890 ?x6842 ?x6851 ?x6891 ?x6863 ?x6877 (* 2592 (* r x s00 r00)) (* 3240 (* r r x s00 r00)) (* 1296 (* r r r x s00 r00)) (* 216 (* s x s00 r00)) (* 432 (* r s x s00 r00)) (* 216 (* r r s x s00 r00)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) (* (- 15) (* ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492 ?x1492)) (* 9 (* s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)))))
 (let ((?x1482 (* (- 108) ?x1452)))
 (let ((?x1481 (* (- 16) ?x1290)))
 (let ((?x1477 (* (- 216) ?x1162)))
 (let ((?x989 (* 432 ?x988)))
 (let ((?x1235 (* 108 ?x911)))
 (let ((?x838 (* 36 ?x837)))
 (let ((?x1118 (* 108 ?x774)))
 (let ((?x1106 (* 36 ?x753)))
 (let ((?x1471 (* (- 51) ?x697)))
 (let ((?x970 (* (- 36) ?x671)))
 (let ((?x1468 (* (- 108) ?x628)))
 (let ((?x1467 (* (- 216) ?x619)))
 (let ((?x626 (* 54 ?x532)))
 (let ((?x1093 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1483 (+ ?x143 ?x1093 ?x626 ?x1467 ?x1468 (* (- 15) ?x651) ?x970 ?x1471 (* (- 108) ?x706) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1106 ?x1118 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x830) ?x838 (* (- 108) (* s s00 r00)) (* 4 ?x909) ?x1235 (* 108 ?x919) (* (- 108) ?x960) ?x989 (* 12 ?x1046) ?x1477 (* (- 432) ?x1182) (* 216 (* x s00 r00)) ?x1479 ?x1481 (* 216 ?x1426) ?x1482)))
 (let (($x1484 (= ?x1483 0)))
 (let ((?x983 (* r00 r00 x00)))
 (let ((?x996 (* (- 36) ?x983)))
 (let ((?x912 (* 6 ?x911)))
 (let ((?x802 (* (- 2) ?x774)))
 (let ((?x1022 (* (- 15) ?x697)))
 (let ((?x675 (* 3 ?x651)))
 (let ((?x657 (* (- 54) ?x628)))
 (let ((?x670 (* 24 ?x532)))
 (let ((?x1185 (+ ?x143 ?x1093 (* (- 24) (* r s)) (* 24 (* r s00)) ?x670 ?x657 ?x675 (* 54 (* r x)) (* 36 (* r x r00)) ?x970 ?x1022 (* (- 6) ?x706) (* 54 (* x r00)) ?x1106 (* 4 (* s s r00)) (* (- 54) ?x765) ?x802 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x830) (* (- 2) (* s s00 r00)) ?x912 (* 2 (* r s s)) (* 6 ?x919) (* (- 4) ?x931) ?x996 (* 2 (* r s s00)) (* (- 36) ?x1047) (* 36 (* x r00 r00)))))
 (let (($x1190 (= ?x1185 0)))
 (let ((?x754 (* 6 ?x753)))
 (let ((?x710 (* (- 4) ?x697)))
 (let ((?x652 (* 2 ?x651)))
 (let ((?x642 (* (- 18) ?x628)))
 (let ((?x647 (* 9 ?x532)))
 (let ((?x484 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x851 (+ ?x47 ?x484 (* (- 9) (* r s)) (* 9 (* r s00)) ?x647 ?x642 ?x652 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x671) ?x710 (* 18 (* x r00)) ?x754 (* (- 18) ?x765) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x858 (= ?x851 0)))
 (let ((?x576 (* 12 ?x575)))
 (let ((?x610 (* (- 6) ?x532)))
 (let ((?x607 (* (- 6) x00)))
 (let ((?x606 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x605 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x611 (+ ?x43 ?x605 ?x56 ?x44 ?x606 ?x607 (* 2 (* r s)) (* (- 12) ?x457) (* 4 (* r s00)) ?x610 ?x576)))
 (let (($x612 (= ?x611 0)))
 (let (($x440 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x407)) 0)))
 (and $x440 $x612 $x858 $x1190 $x1484 (not (= ?x7805 (- 81))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x812 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1508 (+ 3 s ?x213)))
 (let ((?x386 (* (- 1) s)))
 (let ((?x2944 (+ x ?x386)))
 (let ((?x1489 (+ 1 r)))
 (let ((?x6803 (* 36 (* r00 r00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6787 (* (- 36) (* r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508))))
 (let ((?x5478 (* (- 432) (* r00 r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6458 (* (- 216) (* r00 r00 r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6234 (* 216 (* r00 r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508))))
 (let ((?x4284 (* 432 (* r00 r00 r00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x4359 (+ (* 36 (* r00 r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 432 (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 9) (* s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* x00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 108 (* s00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 4) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 36 (* r00 r00 s00 ?x1489 ?x1489 ?x1508)) (* (- 216) (* r00 s00 x00 ?x1489 ?x1489 ?x1508)) (* (- 216) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 66) (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 66 (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 12) (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 54 (* r00 s00 ?x1489 ?x1489 ?x1508)) ?x4284 (* (- 216) (* r00 r00 r00 s00 ?x1489 ?x1489 ?x1508)) (* 108 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 9 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 51 (* s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 15 (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) ?x6234 (* 108 (* ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* 216 (* r00 r00 r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 432) (* r00 r00 r00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 54) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 66 (* s00 ?x1489 ?x1489 ?x1508 ?x1508)) ?x6458 (* (- 16) (* s00 s00 s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* s00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 51) (* s00 s00 ?x1489 ?x1489 ?x1508)) (* 108 (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 54 (* r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* 16 (* s00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 216 (* r00 r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 9) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) ?x5478 (* (- 108) (* r00 x00 ?x1489 ?x1489 ?x1508)) (* (- 36) (* r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 216 (* x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* 9 (* ?x1489 ?x1489 ?x1508 ?x1508)) (* 108 (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 108) (* x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 51) (* s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 4 (* ?x1489 ?x1489 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 15) (* ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* (- 216) (* r00 s00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 432 (* r00 r00 r00 x00 ?x1489 ?x1489 ?x1508)) (* 108 (* r00 s00 s00 ?x1489 ?x1489 ?x1508)) (* 12 (* s00 ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* 12 (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* ?x1489 ?x1489 ?x2944 ?x2944 ?x1508)) (* 54 (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* r00 s00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 4 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) ?x6787 ?x6803 (* (- 36) (* r00 r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* x00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 36 (* r00 r00 s00 s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* s00 x00 ?x1489 ?x1489 ?x1508)) (* (- 9) (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 432) (* r00 r00 r00 ?x1489 ?x1489 ?x2944 ?x1508)) (* (- 16) (* s00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 216) (* x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* 108 (* r00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 ?x1489 ?x1489 ?x2944 ?x1508)) (* (- 216) (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 54) (* r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* x00 x00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 s00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 108) (* x00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 108) (* x00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 54) (* r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 108) (* s00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 216 (* r00 s00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 15) (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* 9 (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)))))
 (let (($x1145 (not (= ?x4359 0))))
 (let ((?x1452 (* x00 x00)))
 (let ((?x1669 (* 108 ?x1452)))
 (let ((?x1679 (* (- 9) s)))
 (let ((?x6056 (* r00 r00 s00)))
 (let ((?x5601 (* (- 36) ?x6056)))
 (let ((?x137 (* 9 s00)))
 (let ((?x697 (* s00 s00)))
 (let ((?x6726 (* 51 ?x697)))
 (let ((?x2723 (* r00 r00 s)))
 (let ((?x2048 (* 36 ?x2723)))
 (let ((?x1290 (* s00 s00 s00)))
 (let ((?x5027 (* 16 ?x1290)))
 (let ((?x911 (* s00 x00)))
 (let ((?x4603 (* (- 108) ?x911)))
 (let ((?x988 (* r00 r00 r00 x00)))
 (let ((?x2183 (* (- 432) ?x988)))
 (let ((?x628 (* r00 x00)))
 (let ((?x1817 (* 108 ?x628)))
 (let ((?x1621 (+ (* 216 (* r00 s00 x00)) ?x1817 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2183 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4603 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5027 (* (- 108) (* x s)) ?x2048 ?x6726 (* (- 108) (* r00 x)) ?x137 ?x5601 ?x1679 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1669)))
 (let (($x4187 (= ?x1621 0)))
 (let ((?x1836 (* 15 ?x697)))
 (let ((?x983 (* r00 r00 x00)))
 (let ((?x2184 (* 36 ?x983)))
 (let ((?x3686 (* (- 6) ?x911)))
 (let ((?x6411 (* 54 ?x628)))
 (let ((?x2476 (+ (* 24 (* s r)) ?x6411 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3686 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2048 ?x2184 ?x1836 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x5601 (* 54 (* x00 r)) ?x1679 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x605 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1273 (* 4 ?x697)))
 (let ((?x1247 (* 18 ?x628)))
 (let ((?x6409 (+ (* 9 (* s r)) ?x1247 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2723) ?x1273 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x6056) (* 18 (* x00 r)) ?x605 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x575 (* r00 r00 r00)))
 (let ((?x576 (* 12 ?x575)))
 (let ((?x607 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x606 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x6398 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x605 ?x606 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x607 ?x576)))
 (let (($x2936 (= (+ s00 ?x386 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2936 (= ?x6398 0) (= ?x6409 0) (= ?x2476 0) $x4187 $x1145))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1659 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1492 (+ 3 ?x213 s)))
 (let ((?x386 (* (- 1) s)))
 (let ((?x1498 (+ ?x386 x)))
 (let ((?x1489 (+ 1 r)))
 (let ((?x6877 (* (- 108) (* r r s x s00))))
 (let ((?x6863 (* (- 216) (* r00 r00 r00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492))))
 (let ((?x6891 (* (- 216) (* r s x s00))))
 (let ((?x6851 (* (- 108) (* s x s00))))
 (let ((?x6842 (* (- 648) (* r r r x s00))))
 (let ((?x6890 (* (- 1620) (* r r x s00))))
 (let ((?x6889 (* (- 1296) (* r x s00))))
 (let ((?x6426 (* (- 1944) (* r r r r r00))))
 (let ((?x6548 (* (- 5832) (* r r r r00))))
 (let ((?x6547 (* (- 6318) (* r r r00))))
 (let ((?x6545 (* (- 2916) (* r r00))))
 (let ((?x4229 (* 216 (* r00 r00 r00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492))))
 (let ((?x6086 (* (- 3888) (* r r r r x00))))
 (let ((?x6150 (* (- 12636) (* r r x00))))
 (let ((?x6151 (* (- 11664) (* r r r x00))))
 (let ((?x5811 (* (- 3888) (* r r r r s00 r00))))
 (let ((?x5420 (* (- 648) (* r r r x00 x00))))
 (let ((?x5408 (* (- 36) (* r00 r00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492 ?x1492))))
 (let ((?x5387 (* 36 (* r00 r00 s00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492))))
 (let ((?x5401 (* (- 1620) (* r r x00 x00))))
 (let ((?x5406 (* (- 1296) (* r x00 x00))))
 (let ((?x5404 (* (- 216) (* r s x00 x00))))
 (let ((?x5413 (* (- 108) (* r r s x00 x00))))
 (let ((?x5113 (* (- 108) (* s x00 x00))))
 (let ((?x5047 (* (- 432) (* r r s x r00 r00 r00))))
 (let ((?x5034 (* (- 2592) (* r r r x r00 r00 r00))))
 (let ((?x5022 (* (- 432) (* s x r00 r00 r00))))
 (let ((?x5065 (* (- 864) (* r s x r00 r00 r00))))
 (let ((?x5064 (* (- 6480) (* r r x r00 r00 r00))))
 (let ((?x5062 (* (- 5184) (* r x r00 r00 r00))))
 (let ((?x4540 (* 108 (* s s00 x00))))
 (let ((?x4958 (* 432 (* r00 r00 r00 x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492))))
 (let ((?x4539 (* 108 (* r r s s00 x00))))
 (let ((?x4452 (* (- 648) (* r r r s s))))
 (let ((?x4443 (* (- 108) (* r r s s s))))
 (let ((?x4486 (* (- 216) (* r s s s))))
 (let ((?x875 (* (- 432) (* r00 r00 r00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492))))
 (let ((?x4485 (* 2592 (* r s x))))
 (let ((?x4483 (* 3240 (* r r s x))))
 (let ((?x4481 (* 1296 (* r r r s x))))
 (let ((?x4479 (* 216 (* s s x))))
 (let ((?x4131 (* (- 108) (* s x x))))
 (let ((?x4474 (* (- 216) (* r s x x))))
 (let ((?x3975 (* (- 108) (* r r s x x))))
 (let ((?x4478 (* 432 (* r s s x))))
 (let ((?x4477 (* 216 (* r r s s x))))
 (let ((?x4126 (* (- 648) (* r r r x x))))
 (let ((?x4475 (* (- 1620) (* r r x x))))
 (let ((?x4476 (* (- 1296) (* r x x))))
 (let ((?x3988 (* (- 15) (* ?x1489 ?x1489 ?x1492 ?x1492 ?x1492))))
 (let ((?x4504 (* (- 1611) (* r r s s))))
 (let ((?x3730 (* (- 4212) (* r r r00 r00))))
 (let ((?x3728 (* (- 3888) (* r r r r00 r00))))
 (let ((?x3615 (* (- 1296) (* r r r r r00 r00))))
 (let ((?x3578 (* (- 36) (* r r s s r00 r00))))
 (let ((?x3720 (* (- 432) (* r r r s r00 r00))))
 (let ((?x3722 (* (- 1080) (* r r s r00 r00))))
 (let ((?x3724 (* (- 864) (* r s r00 r00))))
 (let ((?x3726 (* (- 72) (* r s s r00 r00))))
 (let ((?x3345 (* (- 108) (* s r00 x00))))
 (let ((?x3334 (* (- 648) (* r r r r00 x00))))
 (let ((?x3134 (* (- 1620) (* r r r00 x00))))
 (let ((?x3196 (* (- 108) (* r r s r00 x00))))
 (let ((?x3139 (* (- 216) (* r s r00 x00))))
 (let ((?x2483 (* (- 765) (* r r s00 s00))))
 (let ((?x2478 (* (- 51) (* r r s s00 s00))))
 (let ((?x2488 (* (- 102) (* r s s00 s00))))
 (let ((?x2749 (* (- 51) (* s s00 s00))))
 (let ((?x2949 (* (- 96) (* r r r s00 s00 s00))))
 (let ((?x2845 (* (- 240) (* r r s00 s00 s00))))
 (let ((?x2847 (* (- 192) (* r s00 s00 s00))))
 (let ((?x2962 (* (- 16) (* r r s s00 s00 s00))))
 (let ((?x2843 (* (- 32) (* r s s00 s00 s00))))
 (let ((?x2954 (* (- 16) (* s s00 s00 s00))))
 (let ((?x6912 (* 174 (* r r s s s00))))
 (let ((?x2740 (* (- 306) (* r r r s00 s00))))
 (let ((?x2333 (* (- 216) (* r r s s00 r00 r00 r00))))
 (let ((?x2182 (* (- 432) (* r s s00 r00 r00 r00))))
 (let ((?x2133 (* (- 216) (* s s00 r00 r00 r00))))
 (let ((?x2180 (* (- 2592) (* r s00 r00 r00 r00))))
 (let ((?x2188 (* (- 3240) (* r r s00 r00 r00 r00))))
 (let ((?x2037 (* (- 1296) (* r r r s00 r00 r00 r00))))
 (let ((?x2002 (* (- 1296) (* r r r s00 r00 x00))))
 (let ((?x2012 (* (- 432) (* r s s00 r00 x00))))
 (let ((?x1837 (* (- 216) (* s s00 r00 x00))))
 (let ((?x1791 (* 216 (* r r s x x00))))
 (let ((?x1783 (* 216 (* s x x00))))
 (let ((?x2016 (* (- 3240) (* r r s00 r00 x00))))
 (let ((?x2014 (* (- 2592) (* r s00 r00 x00))))
 (let ((?x1540 (* (- 216) (* r r s s00 r00 x00))))
 (let ((?x1452 (* x00 x00)))
 (let ((?x5287 (* (- 324) ?x1452)))
 (let ((?x1426 (* x x00)))
 (let ((?x1798 (* 648 ?x1426)))
 (let ((?x1290 (* s00 s00 s00)))
 (let ((?x2928 (* (- 48) ?x1290)))
 (let ((?x1479 (* (- 36) (* s s r00 r00))))
 (let ((?x1182 (* x r00 r00 r00)))
 (let ((?x4945 (* (- 1296) ?x1182)))
 (let ((?x1162 (* s00 r00 r00 r00)))
 (let ((?x2190 (* (- 648) ?x1162)))
 (let ((?x1047 (* r r00 x00)))
 (let ((?x3136 (* (- 1296) ?x1047)))
 (let ((?x1046 (* s s s00)))
 (let ((?x6907 (* 174 ?x1046)))
 (let ((?x988 (* r00 r00 r00 x00)))
 (let ((?x5071 (* 1296 ?x988)))
 (let ((?x960 (* x x)))
 (let ((?x3979 (* (- 324) ?x960)))
 (let ((?x931 (* r s00 s00)))
 (let ((?x2485 (* (- 612) ?x931)))
 (let ((?x919 (* s x)))
 (let ((?x3972 (* 648 ?x919)))
 (let ((?x911 (* s00 x00)))
 (let ((?x4791 (* 324 ?x911)))
 (let ((?x909 (* s s s)))
 (let ((?x4448 (* (- 108) ?x909)))
 (let ((?x837 (* s00 s00 r00 r00)))
 (let ((?x1491 (* 108 ?x837)))
 (let ((?x830 (* s x00)))
 (let ((?x6166 (* (- 1296) ?x830)))
 (let ((?x774 (* s00 s00 r00)))
 (let ((?x3275 (* 324 ?x774)))
 (let ((?x765 (* r x00)))
 (let ((?x6149 (* (- 5832) ?x765)))
 (let ((?x753 (* s00 r00 r00)))
 (let ((?x5725 (* 108 ?x753)))
 (let ((?x706 (* x s00)))
 (let ((?x6694 (* (- 324) ?x706)))
 (let ((?x697 (* s00 s00)))
 (let ((?x3051 (* (- 153) ?x697)))
 (let ((?x671 (* s r00 r00)))
 (let ((?x3719 (* (- 216) ?x671)))
 (let ((?x651 (* s s)))
 (let ((?x4500 (* (- 315) ?x651)))
 (let ((?x628 (* r00 x00)))
 (let ((?x3314 (* (- 324) ?x628)))
 (let ((?x619 (* s00 r00 x00)))
 (let ((?x1557 (* (- 648) ?x619)))
 (let ((?x575 (* r00 r00 r00)))
 (let ((?x2473 (* 1944 ?x575)))
 (let ((?x532 (* s00 r00)))
 (let ((?x7843 (* (- 810) ?x532)))
 (let ((?x457 (* r r00 r00)))
 (let ((?x3732 (* (- 1944) ?x457)))
 (let ((?x407 (* r00 r00)))
 (let ((?x3713 (* (- 324) ?x407)))
 (let ((?x5907 (* (- 972) x00)))
 (let ((?x6303 (* (- 486) r00)))
 (let ((?x2721 (* 567 s00)))
 (let ((?x7805 (+ (* 486 r) (* 54 s) ?x2721 ?x6303 ?x5907 (* 1053 (* r r)) ?x3713 (* 1620 (* r r s00 s00 r00)) (* 216 (* r s)) ?x3732 (* 432 (* r s00 r00 r00)) (* 3456 (* r s00)) ?x7843 (* 432 (* r r s r00 r00 r00 x00)) (* 108 (* r00 x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) ?x2473 ?x1557 ?x3314 ?x4500 (* (- 2592) (* r s r00)) (* 1296 (* r x r00)) ?x3719 ?x3051 ?x6694 (* 324 (* x r00)) (* 2592 (* s r00 r00 r00)) (* 648 (* r r r s00 s00 r00)) ?x5725 (* (- 162) (* s s r00)) (* 16 (* s00 s00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) ?x6149 ?x3275 (* 711 (* s s00)) (* (- 648) (* s r00)) (* 432 (* r s00 s00 r00 r00)) ?x6166 (* (- 5184) (* r s00 r00)) ?x1491 (* 432 (* s r00 r00 r00 x00)) (* (- 1242) (* s s00 r00)) (* 108 (* r r r s)) ?x4448 ?x4791 (* (- 1278) (* r s s)) ?x3972 ?x2485 (* 216 (* r r r s00 s00 r00 r00)) ?x3979 ?x5071 (* 2862 (* r s s00)) (* (- 216) (* r00 s00 x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x6907 ?x3136 (* 540 (* r r s00 s00 r00 r00)) (* 108 (* r r s s00 s00 r00)) (* 108 (* s s00 s00 r00)) (* 216 (* r s s00 s00 r00)) (* (- 108) (* s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x2190 ?x4945 (* 6480 (* r r r00 r00 r00 x00)) (* 1296 (* r s00 s00 r00)) (* 648 (* x s00 r00)) (* 54 (* r00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) (* 216 (* r00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x1479 ?x2928 (* 108 (* s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1492 ?x1492)) (* (- 108) (* x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 108 (* x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) (* 1620 (* r r x r00)) ?x1798 (* (- 16) (* s00 s00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) (* (- 216) (* x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1492 ?x1492)) ?x5287 (* (- 12) (* s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 216 (* r s x r00)) ?x1540 ?x2014 ?x2016 (* 972 (* r r r)) (* 7587 (* r r s00)) (* 7074 (* r r r s00)) (* 648 (* r r r x r00)) (* 648 (* r r r s00 x00)) (* 3591 (* r r s s00)) (* 36 (* r00 r00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x1783 (* 432 (* r s x x00)) ?x1791 (* 270 (* r r s)) ?x1837 ?x2012 (* 108 (* s x r00)) (* 108 (* r r s x r00)) ?x2002 (* 324 (* r r r r)) ?x2037 ?x2188 ?x2180 ?x2133 (* (- 9) (* s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) (* 2592 (* r r r r00 r00 r00 x00)) ?x2182 (* (- 216) (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) (* (- 54) (* r00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) ?x2333 (* 1296 (* r s00 x00)) (* 108 (* ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* (- 108) (* r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* 2592 (* r x x00)) ?x2740 (* (- 51) (* s00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) (* 348 (* r s s s00)) ?x6912 (* (- 108) (* ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x2954 ?x2843 ?x2962 ?x2847 ?x2845 ?x2949 (* 36 (* s s00 r00 r00)) ?x2749 ?x2488 ?x2478 ?x2483 (* 36 (* r r s s00 s00 r00 r00)) (* 12 (* s00 ?x1489 ?x1489 ?x1492 ?x1492 ?x1492)) ?x3139 ?x3196 (* 108 (* x00 x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* 12 (* s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492 ?x1492)) ?x3134 ?x3334 ?x3345 (* (- 108) (* s00 x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) ?x3726 (* 1296 (* r r r x x00)) ?x3724 ?x3722 ?x3720 ?x3578 (* 72 (* r s s00 r00 r00)) (* (- 108) (* r00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) ?x3615 ?x3728 (* 108 (* s00 x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) (* (- 4) (* ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492 ?x1492)) ?x3730 (* 108 (* ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 9 (* ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 108 (* r00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) (* 54 (* r00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) ?x4504 ?x3988 (* 15 (* ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 5184 (* r r00 r00 r00 x00)) ?x4476 ?x4475 ?x4126 (* 11664 (* r r00 r00 r00)) (* (- 108) (* r00 x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x4477 ?x4478 (* (- 108) (* x00 x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x3975 ?x4474 (* 108 (* ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492)) ?x4131 (* 23328 (* r r r r00 r00 r00)) (* 25272 (* r r r00 r00 r00)) ?x4479 ?x4481 ?x4483 ?x4485 (* 216 (* r00 r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* (- 36) (* r00 r00 ?x1489 ?x1489 ?x1492 ?x1492 ?x1492)) (* (- 9) (* ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) ?x875 (* (- 36) (* r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* 216 (* x00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x4486 ?x4443 ?x4452 (* 216 (* r s s00 x00)) ?x4539 ?x4958 (* 216 (* r r r s00 r00 r00)) ?x4540 (* 1620 (* r r s00 x00)) (* 10368 (* r s r00 r00 r00)) (* 12960 (* r r s r00 r00 r00)) (* 1296 (* r s s r00 r00 r00)) (* 648 (* s s r00 r00 r00)) (* 5184 (* r r r s r00 r00 r00)) (* 648 (* r r s s r00 r00 r00)) ?x5062 (* 66 (* s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 108 (* r00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x5064 ?x5065 ?x5022 ?x5034 ?x5047 (* 864 (* r s r00 r00 r00 x00)) ?x5113 ?x5413 ?x5404 (* 36 (* s s00 s00 r00 r00)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) ?x5406 (* 216 (* r00 s00 x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) ?x5401 (* (- 11826) (* r r s00 r00)) (* (- 36) (* r00 r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* 72 (* r s s00 s00 r00 r00)) ?x5387 ?x5408 ?x5420 (* 4 (* ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492 ?x1492 ?x1492)) (* (- 54) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* (- 432) (* r00 r00 r00 x00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) (* (- 11340) (* r r r s00 r00)) (* (- 108) (* ?x1489 ?x1498 ?x1498 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) (* (- 5076) (* r s s00 r00)) (* 3240 (* r r x x00)) (* (- 6426) (* r r s s00 r00)) (* (- 324) (* r r s s s00 r00)) (* (- 648) (* r s s s00 r00)) (* (- 324) (* s s s00 r00)) (* (- 2592) (* r r r s s00 r00)) (* 2376 (* r r r r s00)) ?x5811 (* (- 6480) (* r r s x00)) (* (- 5184) (* r s x00)) ?x6151 ?x6150 (* (- 216) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1492 ?x1492)) (* 36 (* r r s s00 r00 r00)) (* (- 324) (* s s x00)) (* (- 648) (* r s s x00)) (* (- 324) (* r r s s x00)) (* (- 66) (* s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) (* 108 (* r00 s00 s00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492)) ?x6086 (* (- 2592) (* r r r s x00)) (* 51 (* s00 s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)) ?x4229 (* (- 108) (* r00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1492 ?x1492)) ?x6545 ?x6547 ?x6548 (* (- 3240) (* r r s r00)) (* 432 (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1498 ?x1492 ?x1492)) (* 7776 (* r r r r r00 r00 r00)) ?x6426 (* (- 1296) (* r r r s r00)) (* (- 324) (* r s s r00)) (* (- 162) (* r r s s r00)) (* 4 (* ?x1489 ?x1489 ?x1492 ?x1492 ?x1492 ?x1492)) (* (- 36) (* r00 r00 ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492)) (* 540 (* r r s00 r00 r00)) (* 1440 (* r r r s s00)) ?x6889 ?x6890 ?x6842 ?x6851 ?x6891 ?x6863 ?x6877 (* 2592 (* r x s00 r00)) (* 3240 (* r r x s00 r00)) (* 1296 (* r r r x s00 r00)) (* 216 (* s x s00 r00)) (* 432 (* r s x s00 r00)) (* 216 (* r r s x s00 r00)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492 ?x1492)) (* (- 15) (* ?x1489 ?x1498 ?x1498 ?x1498 ?x1492 ?x1492 ?x1492 ?x1492 ?x1492)) (* 9 (* s00 ?x1489 ?x1489 ?x1489 ?x1498 ?x1492 ?x1492)))))
 (let ((?x1482 (* (- 108) ?x1452)))
 (let ((?x1481 (* (- 16) ?x1290)))
 (let ((?x1477 (* (- 216) ?x1162)))
 (let ((?x989 (* 432 ?x988)))
 (let ((?x1235 (* 108 ?x911)))
 (let ((?x838 (* 36 ?x837)))
 (let ((?x1118 (* 108 ?x774)))
 (let ((?x1106 (* 36 ?x753)))
 (let ((?x1471 (* (- 51) ?x697)))
 (let ((?x970 (* (- 36) ?x671)))
 (let ((?x1468 (* (- 108) ?x628)))
 (let ((?x1467 (* (- 216) ?x619)))
 (let ((?x626 (* 54 ?x532)))
 (let ((?x1093 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1483 (+ ?x143 ?x1093 ?x626 ?x1467 ?x1468 (* (- 15) ?x651) ?x970 ?x1471 (* (- 108) ?x706) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1106 ?x1118 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x830) ?x838 (* (- 108) (* s s00 r00)) (* 4 ?x909) ?x1235 (* 108 ?x919) (* (- 108) ?x960) ?x989 (* 12 ?x1046) ?x1477 (* (- 432) ?x1182) (* 216 (* x s00 r00)) ?x1479 ?x1481 (* 216 ?x1426) ?x1482)))
 (let (($x1484 (= ?x1483 0)))
 (let ((?x983 (* r00 r00 x00)))
 (let ((?x996 (* (- 36) ?x983)))
 (let ((?x912 (* 6 ?x911)))
 (let ((?x802 (* (- 2) ?x774)))
 (let ((?x1022 (* (- 15) ?x697)))
 (let ((?x675 (* 3 ?x651)))
 (let ((?x657 (* (- 54) ?x628)))
 (let ((?x670 (* 24 ?x532)))
 (let ((?x1185 (+ ?x143 ?x1093 (* (- 24) (* r s)) (* 24 (* r s00)) ?x670 ?x657 ?x675 (* 54 (* r x)) (* 36 (* r x r00)) ?x970 ?x1022 (* (- 6) ?x706) (* 54 (* x r00)) ?x1106 (* 4 (* s s r00)) (* (- 54) ?x765) ?x802 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x830) (* (- 2) (* s s00 r00)) ?x912 (* 2 (* r s s)) (* 6 ?x919) (* (- 4) ?x931) ?x996 (* 2 (* r s s00)) (* (- 36) ?x1047) (* 36 (* x r00 r00)))))
 (let (($x1190 (= ?x1185 0)))
 (let ((?x754 (* 6 ?x753)))
 (let ((?x710 (* (- 4) ?x697)))
 (let ((?x652 (* 2 ?x651)))
 (let ((?x642 (* (- 18) ?x628)))
 (let ((?x647 (* 9 ?x532)))
 (let ((?x484 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x851 (+ ?x47 ?x484 (* (- 9) (* r s)) (* 9 (* r s00)) ?x647 ?x642 ?x652 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x671) ?x710 (* 18 (* x r00)) ?x754 (* (- 18) ?x765) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x858 (= ?x851 0)))
 (let ((?x576 (* 12 ?x575)))
 (let ((?x610 (* (- 6) ?x532)))
 (let ((?x607 (* (- 6) x00)))
 (let ((?x606 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x605 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x611 (+ ?x43 ?x605 ?x56 ?x44 ?x606 ?x607 (* 2 (* r s)) (* (- 12) ?x457) (* 4 (* r s00)) ?x610 ?x576)))
 (let (($x612 (= ?x611 0)))
 (let (($x440 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x407)) 0)))
 (let (($x6381 (and $x440 $x612 $x858 $x1190 $x1484 (not (= ?x7805 (- 81))))))
 (let ((?x1508 (+ 3 s ?x213)))
 (let ((?x2944 (+ x ?x386)))
 (let ((?x6803 (* 36 (* r00 r00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6787 (* (- 36) (* r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508))))
 (let ((?x5478 (* (- 432) (* r00 r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6458 (* (- 216) (* r00 r00 r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6234 (* 216 (* r00 r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508))))
 (let ((?x4284 (* 432 (* r00 r00 r00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x4359 (+ (* 36 (* r00 r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 432 (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 9) (* s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* x00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 108 (* s00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 4) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 36 (* r00 r00 s00 ?x1489 ?x1489 ?x1508)) (* (- 216) (* r00 s00 x00 ?x1489 ?x1489 ?x1508)) (* (- 216) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 66) (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 66 (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 12) (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 54 (* r00 s00 ?x1489 ?x1489 ?x1508)) ?x4284 (* (- 216) (* r00 r00 r00 s00 ?x1489 ?x1489 ?x1508)) (* 108 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 9 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 51 (* s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 15 (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) ?x6234 (* 108 (* ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* 216 (* r00 r00 r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 432) (* r00 r00 r00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 54) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 66 (* s00 ?x1489 ?x1489 ?x1508 ?x1508)) ?x6458 (* (- 16) (* s00 s00 s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* s00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 51) (* s00 s00 ?x1489 ?x1489 ?x1508)) (* 108 (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 54 (* r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* 16 (* s00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 216 (* r00 r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 9) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) ?x5478 (* (- 108) (* r00 x00 ?x1489 ?x1489 ?x1508)) (* (- 36) (* r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 216 (* x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* 9 (* ?x1489 ?x1489 ?x1508 ?x1508)) (* 108 (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 108) (* x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 51) (* s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 4 (* ?x1489 ?x1489 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 15) (* ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* (- 216) (* r00 s00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 432 (* r00 r00 r00 x00 ?x1489 ?x1489 ?x1508)) (* 108 (* r00 s00 s00 ?x1489 ?x1489 ?x1508)) (* 12 (* s00 ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* 12 (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* ?x1489 ?x1489 ?x2944 ?x2944 ?x1508)) (* 54 (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* r00 s00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 4 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) ?x6787 ?x6803 (* (- 36) (* r00 r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* x00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 36 (* r00 r00 s00 s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* s00 x00 ?x1489 ?x1489 ?x1508)) (* (- 9) (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 432) (* r00 r00 r00 ?x1489 ?x1489 ?x2944 ?x1508)) (* (- 16) (* s00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 216) (* x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* 108 (* r00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 ?x1489 ?x1489 ?x2944 ?x1508)) (* (- 216) (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 54) (* r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* x00 x00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 s00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 108) (* x00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 108) (* x00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 54) (* r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 108) (* s00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 216 (* r00 s00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 15) (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* 9 (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)))))
 (let (($x1145 (not (= ?x4359 0))))
 (let ((?x1669 (* 108 ?x1452)))
 (let ((?x1679 (* (- 9) s)))
 (let ((?x6056 (* r00 r00 s00)))
 (let ((?x5601 (* (- 36) ?x6056)))
 (let ((?x137 (* 9 s00)))
 (let ((?x6726 (* 51 ?x697)))
 (let ((?x2723 (* r00 r00 s)))
 (let ((?x2048 (* 36 ?x2723)))
 (let ((?x5027 (* 16 ?x1290)))
 (let ((?x4603 (* (- 108) ?x911)))
 (let ((?x2183 (* (- 432) ?x988)))
 (let ((?x1817 (* 108 ?x628)))
 (let ((?x1621 (+ (* 216 (* r00 s00 x00)) ?x1817 (* (- 54) (* r00 s00)) (* 15 ?x651) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) ?x909) (* 108 ?x960) ?x2183 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4603 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5027 (* (- 108) (* x s)) ?x2048 ?x6726 (* (- 108) (* r00 x)) ?x137 ?x5601 ?x1679 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1669)))
 (let (($x4187 (= ?x1621 0)))
 (let ((?x1836 (* 15 ?x697)))
 (let ((?x2184 (* 36 ?x983)))
 (let ((?x3686 (* (- 6) ?x911)))
 (let ((?x6411 (* 54 ?x628)))
 (let ((?x2476 (+ (* 24 (* s r)) ?x6411 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x651) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3686 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2048 ?x2184 ?x1836 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x5601 (* 54 (* x00 r)) ?x1679 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x1273 (* 4 ?x697)))
 (let ((?x1247 (* 18 ?x628)))
 (let ((?x6409 (+ (* 9 (* s r)) ?x1247 (* (- 9) (* r00 s00)) (* (- 2) ?x651) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2723) ?x1273 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x6056) (* 18 (* x00 r)) ?x605 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x6398 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x605 ?x606 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x607 ?x576)))
 (let (($x2936 (= (+ s00 ?x386 (* 3 (* r r)) (* (- 3) ?x407)) 0)))
 (let (($x816 (and $x2936 (= ?x6398 0) (= ?x6409 0) (= ?x2476 0) $x4187 $x1145)))
 (rewrite (= $x816 $x6381))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2377 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1508 (+ 3 s ?x213)))
 (let ((?x386 (* (- 1) s)))
 (let ((?x2944 (+ x ?x386)))
 (let ((?x1489 (+ 1 r)))
 (let ((?x6803 (* 36 (* r00 r00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6787 (* (- 36) (* r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508))))
 (let ((?x5478 (* (- 432) (* r00 r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6458 (* (- 216) (* r00 r00 r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6234 (* 216 (* r00 r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508))))
 (let ((?x4284 (* 432 (* r00 r00 r00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x4359 (+ (* 36 (* r00 r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 432 (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 9) (* s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* x00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 108 (* s00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 4) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 36 (* r00 r00 s00 ?x1489 ?x1489 ?x1508)) (* (- 216) (* r00 s00 x00 ?x1489 ?x1489 ?x1508)) (* (- 216) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 66) (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 66 (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 12) (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 54 (* r00 s00 ?x1489 ?x1489 ?x1508)) ?x4284 (* (- 216) (* r00 r00 r00 s00 ?x1489 ?x1489 ?x1508)) (* 108 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 9 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 51 (* s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 15 (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) ?x6234 (* 108 (* ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* 216 (* r00 r00 r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 432) (* r00 r00 r00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 54) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 66 (* s00 ?x1489 ?x1489 ?x1508 ?x1508)) ?x6458 (* (- 16) (* s00 s00 s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* s00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 51) (* s00 s00 ?x1489 ?x1489 ?x1508)) (* 108 (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 54 (* r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* 16 (* s00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 216 (* r00 r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 9) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) ?x5478 (* (- 108) (* r00 x00 ?x1489 ?x1489 ?x1508)) (* (- 36) (* r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 216 (* x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* 9 (* ?x1489 ?x1489 ?x1508 ?x1508)) (* 108 (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 108) (* x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 51) (* s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 4 (* ?x1489 ?x1489 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 15) (* ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* (- 216) (* r00 s00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 432 (* r00 r00 r00 x00 ?x1489 ?x1489 ?x1508)) (* 108 (* r00 s00 s00 ?x1489 ?x1489 ?x1508)) (* 12 (* s00 ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* 12 (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* ?x1489 ?x1489 ?x2944 ?x2944 ?x1508)) (* 54 (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* r00 s00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 4 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) ?x6787 ?x6803 (* (- 36) (* r00 r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* x00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 36 (* r00 r00 s00 s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* s00 x00 ?x1489 ?x1489 ?x1508)) (* (- 9) (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 432) (* r00 r00 r00 ?x1489 ?x1489 ?x2944 ?x1508)) (* (- 16) (* s00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 216) (* x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* 108 (* r00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 ?x1489 ?x1489 ?x2944 ?x1508)) (* (- 216) (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 54) (* r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* x00 x00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 s00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 108) (* x00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 108) (* x00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 54) (* r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 108) (* s00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 216 (* r00 s00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 15) (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* 9 (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)))))
 (let (($x1145 (not (= ?x4359 0))))
 (let ((?x1452 (* x00 x00)))
 (let ((?x1669 (* 108 ?x1452)))
 (let ((?x1679 (* (- 9) s)))
 (let ((?x6056 (* r00 r00 s00)))
 (let ((?x5601 (* (- 36) ?x6056)))
 (let ((?x137 (* 9 s00)))
 (let ((?x697 (* s00 s00)))
 (let ((?x6726 (* 51 ?x697)))
 (let ((?x2723 (* r00 r00 s)))
 (let ((?x2048 (* 36 ?x2723)))
 (let ((?x1290 (* s00 s00 s00)))
 (let ((?x5027 (* 16 ?x1290)))
 (let ((?x911 (* s00 x00)))
 (let ((?x4603 (* (- 108) ?x911)))
 (let ((?x988 (* r00 r00 r00 x00)))
 (let ((?x2183 (* (- 432) ?x988)))
 (let ((?x628 (* r00 x00)))
 (let ((?x1817 (* 108 ?x628)))
 (let ((?x1621 (+ (* 216 (* r00 s00 x00)) ?x1817 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2183 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4603 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5027 (* (- 108) (* x s)) ?x2048 ?x6726 (* (- 108) (* r00 x)) ?x137 ?x5601 ?x1679 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1669)))
 (let (($x4187 (= ?x1621 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1093 (* (- 9) s00)))
 (let ((?x1022 (* (- 15) ?x697)))
 (let ((?x983 (* r00 r00 x00)))
 (let ((?x996 (* (- 36) ?x983)))
 (let ((?x912 (* 6 ?x911)))
 (let ((?x651 (* s s)))
 (let ((?x675 (* 3 ?x651)))
 (let ((?x657 (* (- 54) ?x628)))
 (let ((?x4589 (+ (* (- 24) (* s r)) ?x657 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x675 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x912 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2723) ?x996 ?x1022 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1093 (* 36 ?x6056) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x484 (* (- 3) s00)))
 (let ((?x710 (* (- 4) ?x697)))
 (let ((?x652 (* 2 ?x651)))
 (let ((?x642 (* (- 18) ?x628)))
 (let ((?x1018 (+ (* (- 9) (* s r)) ?x642 (* 9 (* r00 s00)) ?x652 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2723) ?x710 (* 18 (* r00 x)) ?x484 (* 6 ?x6056) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x4722 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x484 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2936 (= (+ s00 ?x386 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2936 (= ?x4722 0) (= ?x1018 0) (= ?x4589 0) $x4187 $x1145)))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x815 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1508 (+ 3 s ?x213)))
 (let ((?x386 (* (- 1) s)))
 (let ((?x2944 (+ x ?x386)))
 (let ((?x1489 (+ 1 r)))
 (let ((?x6803 (* 36 (* r00 r00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6787 (* (- 36) (* r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508))))
 (let ((?x5478 (* (- 432) (* r00 r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6458 (* (- 216) (* r00 r00 r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6234 (* 216 (* r00 r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508))))
 (let ((?x4284 (* 432 (* r00 r00 r00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x4359 (+ (* 36 (* r00 r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 432 (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 9) (* s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* x00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 108 (* s00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 4) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 36 (* r00 r00 s00 ?x1489 ?x1489 ?x1508)) (* (- 216) (* r00 s00 x00 ?x1489 ?x1489 ?x1508)) (* (- 216) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 66) (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 66 (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 12) (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 54 (* r00 s00 ?x1489 ?x1489 ?x1508)) ?x4284 (* (- 216) (* r00 r00 r00 s00 ?x1489 ?x1489 ?x1508)) (* 108 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 9 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 51 (* s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 15 (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) ?x6234 (* 108 (* ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* 216 (* r00 r00 r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 432) (* r00 r00 r00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 54) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 66 (* s00 ?x1489 ?x1489 ?x1508 ?x1508)) ?x6458 (* (- 16) (* s00 s00 s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* s00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 51) (* s00 s00 ?x1489 ?x1489 ?x1508)) (* 108 (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 54 (* r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* 16 (* s00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 216 (* r00 r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 9) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) ?x5478 (* (- 108) (* r00 x00 ?x1489 ?x1489 ?x1508)) (* (- 36) (* r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 216 (* x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* 9 (* ?x1489 ?x1489 ?x1508 ?x1508)) (* 108 (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 108) (* x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 51) (* s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 4 (* ?x1489 ?x1489 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 15) (* ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* (- 216) (* r00 s00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 432 (* r00 r00 r00 x00 ?x1489 ?x1489 ?x1508)) (* 108 (* r00 s00 s00 ?x1489 ?x1489 ?x1508)) (* 12 (* s00 ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* 12 (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* ?x1489 ?x1489 ?x2944 ?x2944 ?x1508)) (* 54 (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* r00 s00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 4 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) ?x6787 ?x6803 (* (- 36) (* r00 r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* x00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 36 (* r00 r00 s00 s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* s00 x00 ?x1489 ?x1489 ?x1508)) (* (- 9) (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 432) (* r00 r00 r00 ?x1489 ?x1489 ?x2944 ?x1508)) (* (- 16) (* s00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 216) (* x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* 108 (* r00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 ?x1489 ?x1489 ?x2944 ?x1508)) (* (- 216) (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 54) (* r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* x00 x00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 s00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 108) (* x00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 108) (* x00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 54) (* r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 108) (* s00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 216 (* r00 s00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 15) (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* 9 (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)))))
 (let (($x1145 (not (= ?x4359 0))))
 (let ((?x1452 (* x00 x00)))
 (let ((?x1669 (* 108 ?x1452)))
 (let ((?x1679 (* (- 9) s)))
 (let ((?x6056 (* r00 r00 s00)))
 (let ((?x5601 (* (- 36) ?x6056)))
 (let ((?x137 (* 9 s00)))
 (let ((?x697 (* s00 s00)))
 (let ((?x6726 (* 51 ?x697)))
 (let ((?x2723 (* r00 r00 s)))
 (let ((?x2048 (* 36 ?x2723)))
 (let ((?x1290 (* s00 s00 s00)))
 (let ((?x5027 (* 16 ?x1290)))
 (let ((?x911 (* s00 x00)))
 (let ((?x4603 (* (- 108) ?x911)))
 (let ((?x988 (* r00 r00 r00 x00)))
 (let ((?x2183 (* (- 432) ?x988)))
 (let ((?x628 (* r00 x00)))
 (let ((?x1817 (* 108 ?x628)))
 (let ((?x1621 (+ (* 216 (* r00 s00 x00)) ?x1817 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2183 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4603 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5027 (* (- 108) (* x s)) ?x2048 ?x6726 (* (- 108) (* r00 x)) ?x137 ?x5601 ?x1679 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1669)))
 (let (($x4187 (= ?x1621 0)))
 (let ((?x1836 (* 15 ?x697)))
 (let ((?x983 (* r00 r00 x00)))
 (let ((?x2184 (* 36 ?x983)))
 (let ((?x3686 (* (- 6) ?x911)))
 (let ((?x6411 (* 54 ?x628)))
 (let ((?x2476 (+ (* 24 (* s r)) ?x6411 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3686 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2048 ?x2184 ?x1836 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x5601 (* 54 (* x00 r)) ?x1679 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x605 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1273 (* 4 ?x697)))
 (let ((?x1247 (* 18 ?x628)))
 (let ((?x6409 (+ (* 9 (* s r)) ?x1247 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2723) ?x1273 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x6056) (* 18 (* x00 r)) ?x605 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x575 (* r00 r00 r00)))
 (let ((?x576 (* 12 ?x575)))
 (let ((?x607 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x606 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x6398 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x605 ?x606 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x607 ?x576)))
 (let (($x2936 (= (+ s00 ?x386 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x816 (and $x2936 (= ?x6398 0) (= ?x6409 0) (= ?x2476 0) $x4187 $x1145)))
 (let ((?x143 (* 9 s)))
 (let ((?x1093 (* (- 9) s00)))
 (let ((?x1022 (* (- 15) ?x697)))
 (let ((?x996 (* (- 36) ?x983)))
 (let ((?x912 (* 6 ?x911)))
 (let ((?x651 (* s s)))
 (let ((?x675 (* 3 ?x651)))
 (let ((?x657 (* (- 54) ?x628)))
 (let ((?x4589 (+ (* (- 24) (* s r)) ?x657 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x675 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x912 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2723) ?x996 ?x1022 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1093 (* 36 ?x6056) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x484 (* (- 3) s00)))
 (let ((?x710 (* (- 4) ?x697)))
 (let ((?x652 (* 2 ?x651)))
 (let ((?x642 (* (- 18) ?x628)))
 (let ((?x1018 (+ (* (- 9) (* s r)) ?x642 (* 9 (* r00 s00)) ?x652 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2723) ?x710 (* 18 (* r00 x)) ?x484 (* 6 ?x6056) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x4722 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x484 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x575))))
 (let (($x957 (and $x2936 (= ?x4722 0) (= ?x1018 0) (= ?x4589 0) $x4187 $x1145)))
 (rewrite (= $x957 $x816)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x383 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x329 (* 36 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215)))
 (let ((?x271 (* 216 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)))
 (let ((?x245 (* 432 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00)))
 (let ((?x219 (+ (* 36 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 108 ?x212 r00 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215) (* 432 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x223 (- (- ?x219 (* 9 ?x212 ?x212 ?x214 s00)) (* 108 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x226 (+ ?x223 (* 216 ?x212 ?x212 ?x214 ?x215 x00) (* 108 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 x00))))
 (let ((?x230 (- (- ?x226 (* 4 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 108 ?x212 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x236 (- (+ ?x230 (* 36 ?x212 ?x212 r00 r00 ?x214 s00)) (* 216 ?x212 ?x212 r00 ?x214 s00 x00))))
 (let ((?x238 (- (- ?x236 (* 216 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215)) (* 66 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x242 (- (+ ?x238 (* 66 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)) (* 12 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x246 (+ ?x242 (* 108 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215) (* 54 ?x212 ?x212 r00 ?x214 s00) ?x245)))
 (let ((?x252 (+ (- ?x246 (* 216 ?x212 ?x212 r00 r00 r00 ?x214 s00)) (* 108 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215) (* 9 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 51 ?x212 ?x212 ?x212 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x258 (+ (- ?x252 (* 108 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00)) (* 15 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215) (* 216 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 108 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x262 (+ (- ?x258 (* 108 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215)) (* 216 ?x212 ?x212 r00 r00 r00 ?x214 ?x214))))
 (let ((?x266 (- ?x262 (* 432 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x215 x00))))
 (let ((?x268 (- (- ?x266 (* 54 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215)) (* 108 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x276 (- (- (+ ?x268 (* 66 ?x212 ?x212 ?x214 ?x214 s00)) ?x271) (* 16 ?x212 ?x212 ?x214 s00 s00 s00))))
 (let ((?x278 (- (- ?x276 (* 108 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 x00)) (* 51 ?x212 ?x212 ?x214 s00 s00))))
 (let ((?x281 (+ ?x278 (* 108 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215) (* 54 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x286 (+ (- ?x281 (* 36 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214)) (* 16 ?x212 ?x212 ?x212 ?x214 ?x214 s00 s00 s00 ?x215) (* 216 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 s00 ?x215))))
 (let ((?x292 (- (- ?x286 (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215)) (* 432 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x294 (- (- ?x292 (* 108 ?x212 ?x212 r00 ?x214 x00)) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 s00 ?x215))))
 (let ((?x298 (- (+ ?x294 (* 216 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00)) (* 36 ?x212 ?x212 r00 r00 ?x214 ?x214))))
 (let ((?x301 (+ ?x298 (* 9 ?x212 ?x212 ?x214 ?x214) (* 108 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x305 (- (- ?x301 (* 108 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00)) (* 51 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215))))
 (let ((?x311 (- (+ ?x305 (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214)) (* 36 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x313 (- (- ?x311 (* 15 ?x212 ?x212 ?x214 ?x214 ?x214)) (* 216 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 x00))))
 (let ((?x318 (+ ?x313 (* 432 ?x212 ?x212 r00 r00 r00 ?x214 x00) (* 108 ?x212 ?x212 r00 ?x214 s00 s00) (* 12 ?x212 ?x212 ?x214 ?x214 ?x214 s00) (* 12 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x326 (+ (- ?x318 (* 108 ?x212 ?x212 ?x214 ?x215 ?x215)) (* 54 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 216 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215) (* 216 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 x00) (* 4 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x328 (- ?x326 (* 36 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x332 (- (+ ?x328 ?x329) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x335 (+ ?x332 (* 108 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 x00 x00) (* 36 ?x212 ?x212 r00 r00 ?x214 s00 s00))))
 (let ((?x339 (+ (- ?x335 (* 108 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* 108 ?x212 ?x212 ?x214 s00 x00))))
 (let ((?x345 (- (- ?x339 (* 9 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)) (* 432 ?x212 ?x212 r00 r00 r00 ?x214 ?x215))))
 (let ((?x346 (- ?x345 (* 16 ?x212 ?x214 ?x214 ?x214 s00 s00 s00 ?x215 ?x215 ?x215))))
 (let ((?x351 (+ (- ?x346 (* 216 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 x00)) (* 108 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 x00) (* 108 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 x00) (* 108 ?x212 ?x212 r00 ?x214 ?x215))))
 (let ((?x356 (- ?x351 (* 216 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x358 (- (- ?x356 (* 54 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 108 ?x212 ?x212 ?x214 x00 x00))))
 (let ((?x361 (+ (- ?x358 (* 108 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 s00 ?x215)) (* 108 ?x212 ?x212 ?x214 ?x214 ?x215))))
 (let ((?x368 (- (- ?x361 (* 108 ?x212 ?x212 r00 ?x214 ?x214 s00)) (* 108 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00 x00))))
 (let ((?x370 (- (- ?x368 (* 108 ?x212 ?x212 ?x214 ?x214 x00)) (* 54 ?x212 ?x212 r00 ?x214 ?x214))))
 (let ((?x374 (+ (- ?x370 (* 108 ?x212 ?x212 ?x214 s00 ?x215)) (* 216 ?x212 ?x212 r00 ?x214 s00 ?x215) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x378 (+ (- ?x374 (* 15 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x378 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5981 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1508 (+ 3 s ?x213)))
 (let ((?x386 (* (- 1) s)))
 (let ((?x2944 (+ x ?x386)))
 (let ((?x1489 (+ 1 r)))
 (let ((?x6803 (* 36 (* r00 r00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6787 (* (- 36) (* r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508))))
 (let ((?x5478 (* (- 432) (* r00 r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6458 (* (- 216) (* r00 r00 r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x6234 (* 216 (* r00 r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508))))
 (let ((?x4284 (* 432 (* r00 r00 r00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508))))
 (let ((?x4359 (+ (* 36 (* r00 r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 432 (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 9) (* s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* x00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 108 (* s00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 4) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 36 (* r00 r00 s00 ?x1489 ?x1489 ?x1508)) (* (- 216) (* r00 s00 x00 ?x1489 ?x1489 ?x1508)) (* (- 216) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 66) (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 66 (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 12) (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 54 (* r00 s00 ?x1489 ?x1489 ?x1508)) ?x4284 (* (- 216) (* r00 r00 r00 s00 ?x1489 ?x1489 ?x1508)) (* 108 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 9 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* 51 (* s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 15 (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) ?x6234 (* 108 (* ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* 216 (* r00 r00 r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 432) (* r00 r00 r00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 54) (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 66 (* s00 ?x1489 ?x1489 ?x1508 ?x1508)) ?x6458 (* (- 16) (* s00 s00 s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* s00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 51) (* s00 s00 ?x1489 ?x1489 ?x1508)) (* 108 (* r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 54 (* r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* 16 (* s00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 216 (* r00 r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 9) (* ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) ?x5478 (* (- 108) (* r00 x00 ?x1489 ?x1489 ?x1508)) (* (- 36) (* r00 r00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 216 (* x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* 9 (* ?x1489 ?x1489 ?x1508 ?x1508)) (* 108 (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* (- 108) (* x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 51) (* s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 4 (* ?x1489 ?x1489 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 36) (* r00 r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 15) (* ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* (- 216) (* r00 s00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 432 (* r00 r00 r00 x00 ?x1489 ?x1489 ?x1508)) (* 108 (* r00 s00 s00 ?x1489 ?x1489 ?x1508)) (* 12 (* s00 ?x1489 ?x1489 ?x1508 ?x1508 ?x1508)) (* 12 (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* ?x1489 ?x1489 ?x2944 ?x2944 ?x1508)) (* 54 (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* r00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 216 (* r00 s00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 4 (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) ?x6787 ?x6803 (* (- 36) (* r00 r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* x00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 36 (* r00 r00 s00 s00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* s00 x00 ?x1489 ?x1489 ?x1508)) (* (- 9) (* s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 432) (* r00 r00 r00 ?x1489 ?x1489 ?x2944 ?x1508)) (* (- 16) (* s00 s00 s00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 216) (* x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x2944 ?x1508 ?x1508)) (* 108 (* r00 x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* x00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* 108 (* r00 ?x1489 ?x1489 ?x2944 ?x1508)) (* (- 216) (* r00 r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 54) (* r00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508)) (* (- 108) (* x00 x00 ?x1489 ?x1489 ?x1508)) (* (- 108) (* r00 s00 s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* 108 (* ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)) (* (- 108) (* r00 s00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 108) (* x00 x00 ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 108) (* x00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 54) (* r00 ?x1489 ?x1489 ?x1508 ?x1508)) (* (- 108) (* s00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 216 (* r00 s00 ?x1489 ?x1489 ?x2944 ?x1508)) (* 36 (* r00 r00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508 ?x1508)) (* (- 15) (* ?x1489 ?x2944 ?x2944 ?x2944 ?x1508 ?x1508 ?x1508 ?x1508 ?x1508)) (* 9 (* s00 ?x1489 ?x1489 ?x1489 ?x2944 ?x1508 ?x1508)))))
 (let (($x1145 (not (= ?x4359 0))))
 (let ((?x1452 (* x00 x00)))
 (let ((?x1669 (* 108 ?x1452)))
 (let ((?x1679 (* (- 9) s)))
 (let ((?x6056 (* r00 r00 s00)))
 (let ((?x5601 (* (- 36) ?x6056)))
 (let ((?x137 (* 9 s00)))
 (let ((?x697 (* s00 s00)))
 (let ((?x6726 (* 51 ?x697)))
 (let ((?x2723 (* r00 r00 s)))
 (let ((?x2048 (* 36 ?x2723)))
 (let ((?x1290 (* s00 s00 s00)))
 (let ((?x5027 (* 16 ?x1290)))
 (let ((?x911 (* s00 x00)))
 (let ((?x4603 (* (- 108) ?x911)))
 (let ((?x988 (* r00 r00 r00 x00)))
 (let ((?x2183 (* (- 432) ?x988)))
 (let ((?x628 (* r00 x00)))
 (let ((?x1817 (* 108 ?x628)))
 (let ((?x1621 (+ (* 216 (* r00 s00 x00)) ?x1817 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2183 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4603 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5027 (* (- 108) (* x s)) ?x2048 ?x6726 (* (- 108) (* r00 x)) ?x137 ?x5601 ?x1679 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1669)))
 (let (($x4187 (= ?x1621 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1093 (* (- 9) s00)))
 (let ((?x1022 (* (- 15) ?x697)))
 (let ((?x983 (* r00 r00 x00)))
 (let ((?x996 (* (- 36) ?x983)))
 (let ((?x912 (* 6 ?x911)))
 (let ((?x651 (* s s)))
 (let ((?x675 (* 3 ?x651)))
 (let ((?x657 (* (- 54) ?x628)))
 (let ((?x4589 (+ (* (- 24) (* s r)) ?x657 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x675 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x912 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2723) ?x996 ?x1022 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1093 (* 36 ?x6056) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x484 (* (- 3) s00)))
 (let ((?x710 (* (- 4) ?x697)))
 (let ((?x652 (* 2 ?x651)))
 (let ((?x642 (* (- 18) ?x628)))
 (let ((?x1018 (+ (* (- 9) (* s r)) ?x642 (* 9 (* r00 s00)) ?x652 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2723) ?x710 (* 18 (* r00 x)) ?x484 (* 6 ?x6056) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x4722 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x484 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2936 (= (+ s00 ?x386 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x957 (and $x2936 (= ?x4722 0) (= ?x1018 0) (= ?x4589 0) $x4187 $x1145)))
 (let ((?x215 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x329 (* 36 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215)))
 (let ((?x271 (* 216 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)))
 (let ((?x245 (* 432 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00)))
 (let ((?x219 (+ (* 36 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 108 ?x212 r00 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215) (* 432 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x223 (- (- ?x219 (* 9 ?x212 ?x212 ?x214 s00)) (* 108 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x226 (+ ?x223 (* 216 ?x212 ?x212 ?x214 ?x215 x00) (* 108 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 x00))))
 (let ((?x230 (- (- ?x226 (* 4 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 108 ?x212 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x236 (- (+ ?x230 (* 36 ?x212 ?x212 r00 r00 ?x214 s00)) (* 216 ?x212 ?x212 r00 ?x214 s00 x00))))
 (let ((?x238 (- (- ?x236 (* 216 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215)) (* 66 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x242 (- (+ ?x238 (* 66 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)) (* 12 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x246 (+ ?x242 (* 108 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215) (* 54 ?x212 ?x212 r00 ?x214 s00) ?x245)))
 (let ((?x252 (+ (- ?x246 (* 216 ?x212 ?x212 r00 r00 r00 ?x214 s00)) (* 108 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215) (* 9 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 51 ?x212 ?x212 ?x212 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x258 (+ (- ?x252 (* 108 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00)) (* 15 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215) (* 216 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 108 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x262 (+ (- ?x258 (* 108 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215)) (* 216 ?x212 ?x212 r00 r00 r00 ?x214 ?x214))))
 (let ((?x266 (- ?x262 (* 432 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x215 x00))))
 (let ((?x268 (- (- ?x266 (* 54 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215)) (* 108 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x276 (- (- (+ ?x268 (* 66 ?x212 ?x212 ?x214 ?x214 s00)) ?x271) (* 16 ?x212 ?x212 ?x214 s00 s00 s00))))
 (let ((?x278 (- (- ?x276 (* 108 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 x00)) (* 51 ?x212 ?x212 ?x214 s00 s00))))
 (let ((?x281 (+ ?x278 (* 108 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215) (* 54 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x286 (+ (- ?x281 (* 36 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214)) (* 16 ?x212 ?x212 ?x212 ?x214 ?x214 s00 s00 s00 ?x215) (* 216 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 s00 ?x215))))
 (let ((?x292 (- (- ?x286 (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215)) (* 432 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x294 (- (- ?x292 (* 108 ?x212 ?x212 r00 ?x214 x00)) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 s00 ?x215))))
 (let ((?x298 (- (+ ?x294 (* 216 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00)) (* 36 ?x212 ?x212 r00 r00 ?x214 ?x214))))
 (let ((?x301 (+ ?x298 (* 9 ?x212 ?x212 ?x214 ?x214) (* 108 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x305 (- (- ?x301 (* 108 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00)) (* 51 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215))))
 (let ((?x311 (- (+ ?x305 (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214)) (* 36 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x313 (- (- ?x311 (* 15 ?x212 ?x212 ?x214 ?x214 ?x214)) (* 216 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 x00))))
 (let ((?x318 (+ ?x313 (* 432 ?x212 ?x212 r00 r00 r00 ?x214 x00) (* 108 ?x212 ?x212 r00 ?x214 s00 s00) (* 12 ?x212 ?x212 ?x214 ?x214 ?x214 s00) (* 12 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x326 (+ (- ?x318 (* 108 ?x212 ?x212 ?x214 ?x215 ?x215)) (* 54 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 216 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215) (* 216 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 x00) (* 4 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x328 (- ?x326 (* 36 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x332 (- (+ ?x328 ?x329) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x335 (+ ?x332 (* 108 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 x00 x00) (* 36 ?x212 ?x212 r00 r00 ?x214 s00 s00))))
 (let ((?x339 (+ (- ?x335 (* 108 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* 108 ?x212 ?x212 ?x214 s00 x00))))
 (let ((?x345 (- (- ?x339 (* 9 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)) (* 432 ?x212 ?x212 r00 r00 r00 ?x214 ?x215))))
 (let ((?x346 (- ?x345 (* 16 ?x212 ?x214 ?x214 ?x214 s00 s00 s00 ?x215 ?x215 ?x215))))
 (let ((?x351 (+ (- ?x346 (* 216 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 x00)) (* 108 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 x00) (* 108 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 x00) (* 108 ?x212 ?x212 r00 ?x214 ?x215))))
 (let ((?x356 (- ?x351 (* 216 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x358 (- (- ?x356 (* 54 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 108 ?x212 ?x212 ?x214 x00 x00))))
 (let ((?x361 (+ (- ?x358 (* 108 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 s00 ?x215)) (* 108 ?x212 ?x212 ?x214 ?x214 ?x215))))
 (let ((?x368 (- (- ?x361 (* 108 ?x212 ?x212 r00 ?x214 ?x214 s00)) (* 108 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00 x00))))
 (let ((?x370 (- (- ?x368 (* 108 ?x212 ?x212 ?x214 ?x214 x00)) (* 54 ?x212 ?x212 r00 ?x214 ?x214))))
 (let ((?x374 (+ (- ?x370 (* 108 ?x212 ?x212 ?x214 s00 ?x215)) (* 216 ?x212 ?x212 r00 ?x214 s00 ?x215) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x378 (+ (- ?x374 (* 15 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x382 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x378 0))))))
 (rewrite (= $x382 $x957)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x384 (asserted $x383)))
 (let ((@x6022 (mp (mp @x384 (quant-intro (proof-bind ?x5981) (= $x383 $x2377)) $x2377) (rewrite (= $x2377 $x2377)) $x2377)))
 (let ((@x4612 (mp (mp @x6022 (quant-intro (proof-bind ?x815) (= $x2377 $x812)) $x812) (quant-intro (proof-bind ?x1659) (= $x812 $x6786)) $x6786)))
 (let ((@x7533 (mp (mp~ @x4612 (sk (~ $x6786 $x6083)) $x6083) (rewrite (= $x6083 $x6554)) $x6554)))
 (let ((@x817 (and-elim @x7533 $x1228)))
 (let ((@x5106 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1228) $x7585)) @x817 $x7585)))
 (let (($x7540 (>= ?x7379 0)))
 (let ((@x7524 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1228) $x7540)) @x817 $x7540)))
 (let (($x7582 (<= ?x3106 0)))
 (let ((@x7645 (and-elim @x7533 $x7652)))
 (let ((@x2736 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7652) $x7582)) @x7645 $x7582)))
 (let (($x7580 (>= ?x3106 0)))
 (let ((@x3425 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7652) $x7580)) @x7645 $x7580)))
 (let (($x2327 (<= ?x7632 0)))
 (let ((@x5361 (and-elim @x7533 $x7634)))
 (let ((@x2830 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7634) $x2327)) @x5361 $x2327)))
 (let (($x7581 (>= ?x7632 0)))
 (let ((@x2397 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7634) $x7581)) @x5361 $x7581)))
 (let (($x7583 (<= ?x2254 0)))
 (let ((@x5894 (and-elim @x7533 $x2150)))
 (let ((@x1610 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2150) $x7583)) @x5894 $x7583)))
 (let (($x7589 (>= ?x2254 0)))
 (let ((@x846 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2150) $x7589)) @x5894 $x7589)))
 (let (($x392 (<= ?x4905 0)))
 (let ((@x7456 (and-elim @x7533 $x4582)))
 (let ((@x7592 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4582) $x392)) @x7456 $x392)))
 (let (($x7541 (>= ?x4905 0)))
 (let ((@x7735 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4582) $x7541)) @x7456 $x7541)))
 (let (($x4821 (not (<= ?x7250 (- 81)))))
 (let (($x7660 (>= ?x7250 (- 81))))
 (let ((@x1112 ((_ th-lemma arith) (hypothesis (not $x7660)) @x3425 @x2736 @x7735 @x7592 @x846 @x1610 @x7735 @x7592 @x846 @x1610 @x7524 @x5106 @x3425 @x2736 @x2397 @x2830 @x3425 @x2736 @x7524 @x5106 false)))
 (let ((@x522 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x7301 $x4821 (not $x7660))) (and-elim @x7533 $x7642) (or $x4821 (not $x7660)))))
 ((_ th-lemma arith) (unit-resolution @x522 (lemma @x1112 $x7660) $x4821) @x3425 @x2736 @x7735 @x7592 @x846 @x1610 @x7735 @x7592 @x846 @x1610 @x7524 @x5106 @x3425 @x2736 @x2397 @x2830 @x3425 @x2736 @x7524 @x5106 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        43
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2260
 :arith-nonlinear-bounds    36
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      13
 :arith-tableau-max-columns 404
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                5.34
 :memory                    4.05
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                6163593
 :num-checks                1
 :propagations              12
 :rlimit-count              74510
 :time                      0.07
 :total-time                0.10)
