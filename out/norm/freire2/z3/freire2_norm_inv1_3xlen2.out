unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1874 (* (- 1) s!1)))
 (let ((?x301 (* r00 r00)))
 (let ((?x995 (* (- 3) ?x301)))
 (let ((?x980 (+ s00 ?x995 (* 3 (* r!2 r!2)) ?x1874)))
 (let (($x1050 (<= ?x980 0)))
 (let (($x1704 (= ?x980 0)))
 (let ((?x480 (* 6 r!2)))
 (let ((?x979 (+ 3 s!1 ?x480)))
 (let ((?x1077 (+ ?x1874 x!0)))
 (let ((?x2190 (+ 1 r!2)))
 (let ((?x1387 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1318 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1316 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1308 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1295 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1292 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1281 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1265 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1243 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1192 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1144 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1132 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1122 (* s00 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1117 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1057 (* r00 r00 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1049 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1048 (* ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1015 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1008 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x984 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x942 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x839 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x802 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x717 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x695 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x516 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x490 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x396 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x379 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x377 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x347 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x309 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x979 ?x979 ?x979 ?x979)))
 (let ((?x1326 (+ ?x309 (* 3 ?x347) (* (- 1) ?x377) (* (- 3) ?x379) (* 3 ?x396) (* 3 ?x490) (* 3 ?x516) (* (- 3) ?x695) (* 3 ?x717) ?x802 ?x839 ?x942 (* (- 1) ?x984) (* (- 1) ?x1008) (* (- 3) ?x1015) ?x1048 (* 3 ?x1049) (* 3 ?x1057) (* (- 3) ?x1117) (* (- 1) ?x1122) ?x1132 (* 3 ?x1144) ?x1192 (* (- 3) ?x1243) (* (- 1) ?x1265) (* (- 3) ?x1281) (* (- 3) ?x1292) (* (- 3) ?x1295) ?x1308 (* (- 1) ?x1316) (* (- 1) ?x1318) (* (- 1) ?x1387))))
 (let (($x2048 (= ?x1326 0)))
 (let (($x308 (not $x2048)))
 (let ((?x1926 (* r00 r00 s!1)))
 (let ((?x1752 (* 36 ?x1926)))
 (let ((?x1816 (* (- 9) s!1)))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1223 (* 108 ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x650 (* 16 ?x1184)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x1173 (* (- 432) ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x321 (* (- 108) ?x805)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1298 (* (- 36) ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x862 (* 51 ?x591)))
 (let ((?x522 (* r00 x00)))
 (let ((?x372 (* 108 ?x522)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1461 (+ ?x137 (* 36 (* r00 r00 s!1 s!1)) (* (- 54) (* s00 r00)) (* 15 (* s!1 s!1)) (* (- 66) (* s00 s!1)) (* (- 108) (* s!1 x!0)) (* 216 (* s00 r00 x00)) ?x372 (* 432 (* r00 r00 r00 x!0)) ?x862 (* 108 (* x00 s!1)) ?x1298 (* (- 108) (* s00 s00 r00)) (* 108 (* s00 x!0)) (* (- 36) (* s00 s00 r00 r00)) ?x321 (* 54 (* r00 s!1)) (* (- 216) (* x00 x!0)) ?x1173 (* 216 (* s00 r00 r00 r00)) ?x650 (* 108 (* x!0 x!0)) (* (- 108) (* r00 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 12) (* s00 s!1 s!1)) ?x1223 (* 108 (* s00 r00 s!1)) ?x1816 ?x1752)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x1409 (* 36 ?x877)))
 (let ((?x1932 (* (- 6) ?x805)))
 (let ((?x1404 (* 15 ?x591)))
 (let ((?x572 (* 54 ?x522)))
 (let ((?x850 (+ ?x137 (* (- 4) (* r00 s!1 s!1)) (* (- 24) (* s00 r00)) (* (- 3) (* s!1 s!1)) (* (- 12) (* s00 s!1)) (* (- 6) (* s!1 x!0)) ?x572 ?x1404 (* 6 (* x00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* 4 (* s00 s00 r!2)) ?x1298 (* 2 (* s00 s00 r00)) (* 6 (* s00 x!0)) (* 54 (* x00 r!2)) ?x1932 (* 24 (* r00 s!1)) ?x1409 (* (- 54) (* r!2 x!0)) (* 24 (* s!1 r!2)) (* (- 2) (* s00 s!1 r!2)) (* (- 54) (* r00 x!0)) (* 2 (* s00 r00 s!1)) ?x1816 (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 36) (* r00 r!2 x!0)) ?x1752 (* (- 24) (* s00 r!2)))))
 (let ((?x797 (* (- 3) s!1)))
 (let ((?x346 (* 4 ?x591)))
 (let ((?x693 (* 18 ?x522)))
 (let ((?x44 (* 3 s00)))
 (let ((?x518 (+ ?x44 (* (- 9) (* s00 r00)) (* (- 2) (* s!1 s!1)) (* (- 2) (* s00 s!1)) ?x693 ?x346 (* (- 6) ?x647) (* 18 (* x00 r!2)) (* 9 (* r00 s!1)) (* (- 18) (* r!2 x!0)) (* 9 (* s!1 r!2)) (* (- 18) (* r00 x!0)) (* 6 (* s00 r00 r!2)) ?x797 (* (- 6) (* r00 s!1 r!2)) (* 6 ?x1926) (* (- 9) (* s00 r!2)))))
 (let ((?x1323 (* 6 x!0)))
 (let ((?x454 (* 3 r!2)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x426 (* s00 r00)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x1231 (+ ?x44 ?x500 ?x501 ?x504 ?x470 (* (- 12) (* r00 r00 r!2)) (* 2 (* s!1 r!2)) ?x797 ?x454 ?x1323 (* 4 (* s00 r!2)))))
 (let (($x1347 (and $x1704 (= ?x1231 0) (= ?x518 0) (= ?x850 0) (= ?x1461 0) $x308)))
 (let ((?x635 (+ 3 ?x480 s!1)))
 (let ((?x845 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1468 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1349 (* s00 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1311 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1697 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1508 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1299 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x676 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x391 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x934 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x2143 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x582 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x833 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x350 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x593 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1245 (* r00 r00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1254 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1251 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1250 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x782 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x784 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x781 (* ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x778 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1391 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1544 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x735 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1174 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1029 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1337 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1109 (* s00 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1975 (* ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x1661 (* r00 r00 ?x2190 ?x2190 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x1077 ?x635 ?x635 ?x635 ?x635 ?x635)))
 (let ((?x595 (+ (* 3 ?x1661) (* (- 3) ?x1975) ?x1109 ?x1337 (* (- 1) ?x1029) ?x1174 (* 3 ?x735) (* (- 3) ?x1544) (* (- 1) ?x1391) (* (- 3) ?x778) ?x781 ?x784 (* 3 ?x782) ?x1250 (* (- 1) ?x1251) (* (- 1) ?x1254) (* 3 ?x1245) (* 3 ?x593) (* (- 3) ?x350) (* 3 ?x833) (* 3 ?x582) (* (- 1) ?x2143) (* (- 3) ?x934) (* (- 3) ?x391) (* (- 1) ?x676) ?x1299 (* (- 3) ?x1508) ?x1697 (* (- 3) ?x1311) (* (- 1) ?x1349) (* 3 ?x1468) (* (- 1) ?x845))))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x329 (* s!1 r00 r00)))
 (let ((?x1814 (* (- 36) ?x329)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x1235 (* 9 s!1)))
 (let ((?x1248 (+ ?x1235 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s!1 s!1)) ?x1814 ?x1365 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x732 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1129 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x883 (* 12 (* s!1 s!1 s00)) ?x1371 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1375 (* 216 (* x!0 x00)) ?x1376)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1334 (+ ?x1235 ?x987 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x564 ?x551 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x1814 ?x916 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1000 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x696 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x806 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x890 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x1170 (+ (* 3 s!1) ?x378 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x541 ?x536 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x329) ?x604 (* 18 (* x!0 r00)) ?x648 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x727 (+ ?x454 ?x797 ?x1323 ?x44 ?x500 ?x501 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x504 ?x470)))
 (let (($x1701 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x301)) 0)))
 (let (($x1851 (and $x1701 (= ?x727 0) (= ?x1170 0) (= ?x1334 0) (= ?x1248 0) (not (= ?x595 0)))))
 (let (($x1545 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1388 (+ 3 ?x214 s)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x1394 (+ ?x280 x)))
 (let ((?x1385 (+ 1 r)))
 (let ((?x2058 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x2047 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1918 (* s00 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1498 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1395 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1348 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1339 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1331 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1297 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1210 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1137 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1107 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1071 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1065 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1024 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x928 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x914 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x887 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x855 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x820 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x819 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x786 (* ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x772 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x736 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x673 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x654 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x642 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x624 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x573 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x481 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x436 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x374 (* r00 r00 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x324 (+ (* 3 ?x374) (* (- 3) ?x436) ?x481 ?x573 (* (- 1) ?x624) ?x642 (* 3 ?x654) (* (- 3) ?x673) (* (- 1) ?x736) (* (- 3) ?x772) ?x786 ?x819 (* 3 ?x820) ?x855 (* (- 1) ?x887) (* (- 1) ?x914) (* 3 ?x928) (* 3 ?x1024) (* (- 3) ?x1065) (* 3 ?x1071) (* 3 ?x1107) (* (- 1) ?x1137) (* (- 3) ?x1210) (* (- 3) ?x1297) (* (- 1) ?x1331) ?x1339 (* (- 3) ?x1348) ?x1395 (* (- 3) ?x1498) (* (- 1) ?x1918) (* 3 ?x2047) (* (- 1) ?x2058))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x565 (* s r00 r00)))
 (let ((?x864 (* (- 36) ?x565)))
 (let ((?x522 (* r00 x00)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x426 (* s00 r00)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1377 (+ ?x143 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s s)) ?x864 ?x1365 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x732 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1129 (* 108 (* s x)) (* (- 108) (* x x)) ?x883 (* 12 (* s s s00)) ?x1371 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1375 (* 216 (* x x00)) ?x1376)))
 (let (($x1378 (= ?x1377 0)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1079 (+ ?x143 ?x987 (* (- 24) (* r s)) (* 24 (* r s00)) ?x564 ?x551 ?x569 (* 54 (* r x)) (* 36 (* r x r00)) ?x864 ?x916 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1000 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x696 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x806 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x890 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1084 (= ?x1079 0)))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x745 (+ ?x47 ?x378 (* (- 9) (* r s)) (* 9 (* r s00)) ?x541 ?x536 ?x546 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x565) ?x604 (* 18 (* x r00)) ?x648 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x752 (= ?x745 0)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x499 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x505 (+ ?x43 ?x499 ?x56 ?x44 ?x500 ?x501 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x504 ?x470)))
 (let (($x506 (= ?x505 0)))
 (let ((?x301 (* r00 r00)))
 (let ((?x302 (* 3 ?x301)))
 (let ((?x331 (* (- 1) s00)))
 (let (($x334 (= (+ s ?x331 (* (- 3) (* r r)) ?x302) 0)))
 (and $x334 $x506 $x752 $x1084 $x1378 (not (= ?x324 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x524 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x989 (+ 3 s ?x214)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x853 (+ x ?x280)))
 (let ((?x1385 (+ 1 r)))
 (let ((?x2068 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1914 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1452 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1475 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1446 (* s00 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1684 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1517 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x288 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x446 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x424 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x401 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x343 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1358 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1310 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1266 (* r00 r00 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1257 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1157 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1078 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1019 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x947 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x662 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x874 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1150 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1135 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x451 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x342 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1673 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1203 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x896 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1979 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x611 (* ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1030 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1214 (+ ?x1030 (* (- 1) ?x611) (* (- 3) ?x1979) ?x896 ?x1203 (* 3 ?x1673) (* (- 3) ?x342) ?x451 (* (- 1) ?x1135) (* (- 3) ?x1150) (* (- 1) ?x874) (* 3 ?x662) (* (- 3) ?x947) (* (- 3) ?x1019) (* (- 1) ?x1078) (* 3 ?x1157) (* (- 1) ?x1257) (* (- 3) ?x1266) (* 3 ?x1310) (* (- 1) ?x1358) ?x343 (* (- 3) ?x401) (* (- 3) ?x424) (* 3 ?x446) (* 3 ?x288) (* 3 ?x1517) (* 3 ?x1684) ?x1446 (* (- 1) ?x1475) ?x1452 ?x1914 (* (- 1) ?x2068))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1223 (* 108 ?x1346)))
 (let ((?x1123 (* (- 9) s)))
 (let ((?x703 (* r00 r00 s00)))
 (let ((?x1081 (* (- 36) ?x703)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x862 (* 51 ?x591)))
 (let ((?x486 (* r00 r00 s)))
 (let ((?x1847 (* 36 ?x486)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x650 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x321 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x1173 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x372 (* 108 ?x522)))
 (let ((?x1230 (+ (* 216 (* r00 s00 x00)) ?x372 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1173 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x321 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x650 (* (- 108) (* x s)) ?x1847 ?x862 (* (- 108) (* r00 x)) ?x137 ?x1081 ?x1123 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1223)))
 (let (($x1236 (= ?x1230 0)))
 (let ((?x1404 (* 15 ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x1409 (* 36 ?x877)))
 (let ((?x1932 (* (- 6) ?x805)))
 (let ((?x572 (* 54 ?x522)))
 (let ((?x1047 (+ (* 24 (* s r)) ?x572 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1932 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1847 ?x1409 ?x1404 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1081 (* 54 (* x00 r)) ?x1123 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x499 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x346 (* 4 ?x591)))
 (let ((?x693 (* 18 ?x522)))
 (let ((?x847 (+ (* 9 (* s r)) ?x693 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x486) ?x346 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x703) (* 18 (* x00 r)) ?x499 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1829 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x499 ?x500 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x501 ?x470)))
 (let (($x823 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x823 (= ?x1829 0) (= ?x847 0) (= ?x1047 0) $x1236 (not (= ?x1214 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2045 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1388 (+ 3 ?x214 s)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x1394 (+ ?x280 x)))
 (let ((?x1385 (+ 1 r)))
 (let ((?x2058 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x2047 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1918 (* s00 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1498 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1395 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1348 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1339 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1331 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1297 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1210 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1137 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1107 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1071 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1065 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x1024 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x928 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x914 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x887 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x855 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x820 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x819 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x786 (* ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x772 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x736 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x673 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x654 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x642 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x624 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x573 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x481 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x436 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x374 (* r00 r00 ?x1385 ?x1385 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1394 ?x1388 ?x1388 ?x1388 ?x1388 ?x1388)))
 (let ((?x324 (+ (* 3 ?x374) (* (- 3) ?x436) ?x481 ?x573 (* (- 1) ?x624) ?x642 (* 3 ?x654) (* (- 3) ?x673) (* (- 1) ?x736) (* (- 3) ?x772) ?x786 ?x819 (* 3 ?x820) ?x855 (* (- 1) ?x887) (* (- 1) ?x914) (* 3 ?x928) (* 3 ?x1024) (* (- 3) ?x1065) (* 3 ?x1071) (* 3 ?x1107) (* (- 1) ?x1137) (* (- 3) ?x1210) (* (- 3) ?x1297) (* (- 1) ?x1331) ?x1339 (* (- 3) ?x1348) ?x1395 (* (- 3) ?x1498) (* (- 1) ?x1918) (* 3 ?x2047) (* (- 1) ?x2058))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x565 (* s r00 r00)))
 (let ((?x864 (* (- 36) ?x565)))
 (let ((?x522 (* r00 x00)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x426 (* s00 r00)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1377 (+ ?x143 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s s)) ?x864 ?x1365 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x732 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1129 (* 108 (* s x)) (* (- 108) (* x x)) ?x883 (* 12 (* s s s00)) ?x1371 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1375 (* 216 (* x x00)) ?x1376)))
 (let (($x1378 (= ?x1377 0)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1079 (+ ?x143 ?x987 (* (- 24) (* r s)) (* 24 (* r s00)) ?x564 ?x551 ?x569 (* 54 (* r x)) (* 36 (* r x r00)) ?x864 ?x916 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1000 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x696 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x806 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x890 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1084 (= ?x1079 0)))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x745 (+ ?x47 ?x378 (* (- 9) (* r s)) (* 9 (* r s00)) ?x541 ?x536 ?x546 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x565) ?x604 (* 18 (* x r00)) ?x648 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x752 (= ?x745 0)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x499 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x505 (+ ?x43 ?x499 ?x56 ?x44 ?x500 ?x501 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x504 ?x470)))
 (let (($x506 (= ?x505 0)))
 (let ((?x301 (* r00 r00)))
 (let ((?x302 (* 3 ?x301)))
 (let ((?x331 (* (- 1) s00)))
 (let (($x334 (= (+ s ?x331 (* (- 3) (* r r)) ?x302) 0)))
 (let (($x1086 (and $x334 $x506 $x752 $x1084 $x1378 (not (= ?x324 0)))))
 (let ((?x989 (+ 3 s ?x214)))
 (let ((?x853 (+ x ?x280)))
 (let ((?x2068 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1914 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1452 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1475 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1446 (* s00 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1684 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1517 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x288 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x446 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x424 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x401 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x343 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1358 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1310 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1266 (* r00 r00 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1257 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1157 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1078 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1019 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x947 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x662 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x874 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1150 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1135 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x451 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x342 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1673 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1203 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x896 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1979 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x611 (* ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1030 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1214 (+ ?x1030 (* (- 1) ?x611) (* (- 3) ?x1979) ?x896 ?x1203 (* 3 ?x1673) (* (- 3) ?x342) ?x451 (* (- 1) ?x1135) (* (- 3) ?x1150) (* (- 1) ?x874) (* 3 ?x662) (* (- 3) ?x947) (* (- 3) ?x1019) (* (- 1) ?x1078) (* 3 ?x1157) (* (- 1) ?x1257) (* (- 3) ?x1266) (* 3 ?x1310) (* (- 1) ?x1358) ?x343 (* (- 3) ?x401) (* (- 3) ?x424) (* 3 ?x446) (* 3 ?x288) (* 3 ?x1517) (* 3 ?x1684) ?x1446 (* (- 1) ?x1475) ?x1452 ?x1914 (* (- 1) ?x2068))))
 (let ((?x1223 (* 108 ?x1346)))
 (let ((?x1123 (* (- 9) s)))
 (let ((?x703 (* r00 r00 s00)))
 (let ((?x1081 (* (- 36) ?x703)))
 (let ((?x137 (* 9 s00)))
 (let ((?x862 (* 51 ?x591)))
 (let ((?x486 (* r00 r00 s)))
 (let ((?x1847 (* 36 ?x486)))
 (let ((?x650 (* 16 ?x1184)))
 (let ((?x321 (* (- 108) ?x805)))
 (let ((?x1173 (* (- 432) ?x882)))
 (let ((?x372 (* 108 ?x522)))
 (let ((?x1230 (+ (* 216 (* r00 s00 x00)) ?x372 (* (- 54) (* r00 s00)) (* 15 ?x545) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1173 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x321 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x650 (* (- 108) (* x s)) ?x1847 ?x862 (* (- 108) (* r00 x)) ?x137 ?x1081 ?x1123 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1223)))
 (let (($x1236 (= ?x1230 0)))
 (let ((?x1404 (* 15 ?x591)))
 (let ((?x1409 (* 36 ?x877)))
 (let ((?x1932 (* (- 6) ?x805)))
 (let ((?x572 (* 54 ?x522)))
 (let ((?x1047 (+ (* 24 (* s r)) ?x572 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x545) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1932 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1847 ?x1409 ?x1404 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1081 (* 54 (* x00 r)) ?x1123 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x346 (* 4 ?x591)))
 (let ((?x693 (* 18 ?x522)))
 (let ((?x847 (+ (* 9 (* s r)) ?x693 (* (- 9) (* r00 s00)) (* (- 2) ?x545) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x486) ?x346 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x703) (* 18 (* x00 r)) ?x499 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x1829 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x499 ?x500 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x501 ?x470)))
 (let (($x823 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) ?x301)) 0)))
 (let (($x788 (and $x823 (= ?x1829 0) (= ?x847 0) (= ?x1047 0) $x1236 (not (= ?x1214 0)))))
 (rewrite (= $x788 $x1086)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1209 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x989 (+ 3 s ?x214)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x853 (+ x ?x280)))
 (let ((?x1385 (+ 1 r)))
 (let ((?x2068 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1914 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1452 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1475 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1446 (* s00 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1684 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1517 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x288 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x446 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x424 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x401 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x343 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1358 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1310 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1266 (* r00 r00 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1257 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1157 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1078 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1019 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x947 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x662 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x874 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1150 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1135 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x451 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x342 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1673 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1203 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x896 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1979 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x611 (* ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1030 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x2117 (+ (* (- 1) ?x1030) ?x611 (* 3 ?x1979) (* (- 1) ?x896) (* (- 1) ?x1203) (* (- 3) ?x1673) (* 3 ?x342) (* (- 1) ?x451) ?x1135 (* 3 ?x1150) ?x874 (* (- 3) ?x662) (* 3 ?x947) (* 3 ?x1019) ?x1078 (* (- 3) ?x1157) ?x1257 (* 3 ?x1266) (* (- 3) ?x1310) ?x1358 (* (- 1) ?x343) (* 3 ?x401) (* 3 ?x424) (* (- 3) ?x446) (* (- 3) ?x288) (* (- 3) ?x1517) (* (- 3) ?x1684) (* (- 1) ?x1446) ?x1475 (* (- 1) ?x1452) (* (- 1) ?x1914) ?x2068)))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1223 (* 108 ?x1346)))
 (let ((?x1123 (* (- 9) s)))
 (let ((?x703 (* r00 r00 s00)))
 (let ((?x1081 (* (- 36) ?x703)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x862 (* 51 ?x591)))
 (let ((?x486 (* r00 r00 s)))
 (let ((?x1847 (* 36 ?x486)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x650 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x321 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x1173 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x372 (* 108 ?x522)))
 (let ((?x1230 (+ (* 216 (* r00 s00 x00)) ?x372 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1173 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x321 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x650 (* (- 108) (* x s)) ?x1847 ?x862 (* (- 108) (* r00 x)) ?x137 ?x1081 ?x1123 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1223)))
 (let (($x1236 (= ?x1230 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x281 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x486) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 ?x703) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x694 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x486) ?x604 (* 18 (* r00 x)) ?x378 (* 6 ?x703) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1018 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x823 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x823 (= ?x1018 0) (= ?x694 0) (= ?x281 0) $x1236 (not (= ?x2117 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x733 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x989 (+ 3 s ?x214)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x853 (+ x ?x280)))
 (let ((?x1385 (+ 1 r)))
 (let ((?x2068 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1914 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1452 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1475 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1446 (* s00 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1684 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1517 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x288 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x446 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x424 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x401 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x343 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1358 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1310 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1266 (* r00 r00 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1257 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1157 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1078 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1019 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x947 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x662 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x874 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1150 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1135 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x451 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x342 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1673 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1203 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x896 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1979 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x611 (* ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1030 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1214 (+ ?x1030 (* (- 1) ?x611) (* (- 3) ?x1979) ?x896 ?x1203 (* 3 ?x1673) (* (- 3) ?x342) ?x451 (* (- 1) ?x1135) (* (- 3) ?x1150) (* (- 1) ?x874) (* 3 ?x662) (* (- 3) ?x947) (* (- 3) ?x1019) (* (- 1) ?x1078) (* 3 ?x1157) (* (- 1) ?x1257) (* (- 3) ?x1266) (* 3 ?x1310) (* (- 1) ?x1358) ?x343 (* (- 3) ?x401) (* (- 3) ?x424) (* 3 ?x446) (* 3 ?x288) (* 3 ?x1517) (* 3 ?x1684) ?x1446 (* (- 1) ?x1475) ?x1452 ?x1914 (* (- 1) ?x2068))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1223 (* 108 ?x1346)))
 (let ((?x1123 (* (- 9) s)))
 (let ((?x703 (* r00 r00 s00)))
 (let ((?x1081 (* (- 36) ?x703)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x862 (* 51 ?x591)))
 (let ((?x486 (* r00 r00 s)))
 (let ((?x1847 (* 36 ?x486)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x650 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x321 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x1173 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x372 (* 108 ?x522)))
 (let ((?x1230 (+ (* 216 (* r00 s00 x00)) ?x372 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1173 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x321 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x650 (* (- 108) (* x s)) ?x1847 ?x862 (* (- 108) (* r00 x)) ?x137 ?x1081 ?x1123 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1223)))
 (let (($x1236 (= ?x1230 0)))
 (let ((?x1404 (* 15 ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x1409 (* 36 ?x877)))
 (let ((?x1932 (* (- 6) ?x805)))
 (let ((?x572 (* 54 ?x522)))
 (let ((?x1047 (+ (* 24 (* s r)) ?x572 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1932 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1847 ?x1409 ?x1404 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1081 (* 54 (* x00 r)) ?x1123 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x499 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x346 (* 4 ?x591)))
 (let ((?x693 (* 18 ?x522)))
 (let ((?x847 (+ (* 9 (* s r)) ?x693 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x486) ?x346 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x703) (* 18 (* x00 r)) ?x499 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1829 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x499 ?x500 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x501 ?x470)))
 (let (($x823 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x788 (and $x823 (= ?x1829 0) (= ?x847 0) (= ?x1047 0) $x1236 (not (= ?x1214 0)))))
 (let ((?x2117 (+ (* (- 1) ?x1030) ?x611 (* 3 ?x1979) (* (- 1) ?x896) (* (- 1) ?x1203) (* (- 3) ?x1673) (* 3 ?x342) (* (- 1) ?x451) ?x1135 (* 3 ?x1150) ?x874 (* (- 3) ?x662) (* 3 ?x947) (* 3 ?x1019) ?x1078 (* (- 3) ?x1157) ?x1257 (* 3 ?x1266) (* (- 3) ?x1310) ?x1358 (* (- 1) ?x343) (* 3 ?x401) (* 3 ?x424) (* (- 3) ?x446) (* (- 3) ?x288) (* (- 3) ?x1517) (* (- 3) ?x1684) (* (- 1) ?x1446) ?x1475 (* (- 1) ?x1452) (* (- 1) ?x1914) ?x2068)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x281 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x486) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 ?x703) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x694 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x486) ?x604 (* 18 (* r00 x)) ?x378 (* 6 ?x703) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1018 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x469))))
 (let (($x1457 (and $x823 (= ?x1018 0) (= ?x694 0) (= ?x281 0) $x1236 (not (= ?x2117 0)))))
 (rewrite (= $x1457 $x788)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x277 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (- x s)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x271 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x268 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x267 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x265 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x259 (* ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x258 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x257 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x256 (* 3 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x255 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x253 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x252 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x250 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x248 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x246 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x244 (* 3 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x243 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x241 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x239 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)))
 (let ((?x238 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x237 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x235 (* 3 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x233 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x232 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x231 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x229 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x227 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x223 (* 3 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x222 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x221 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x219 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x218 (* ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x217 (* (- 1) ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)))
 (let ((?x234 (+ (- (+ (- (- (- (+ ?x217 ?x218 ?x219) ?x221) ?x222) ?x223) ?x227) ?x229) ?x231 ?x232 ?x233)))
 (let ((?x249 (+ (- (+ (- (+ (- ?x234 ?x235) ?x237 ?x238 ?x239) ?x241) ?x243 ?x244) ?x246) ?x248)))
 (let ((?x264 (- (- (- (- (- (+ (- ?x249 ?x250) ?x252 ?x253) ?x255) ?x256) ?x257) ?x258) ?x259)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (+ (- (- (+ ?x264 ?x265) ?x267) ?x268) ?x271) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2187 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x989 (+ 3 s ?x214)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x853 (+ x ?x280)))
 (let ((?x1385 (+ 1 r)))
 (let ((?x2068 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1914 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1452 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1475 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1446 (* s00 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1684 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1517 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x288 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x446 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x424 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x401 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x343 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1358 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1310 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1266 (* r00 r00 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1257 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1157 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1078 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1019 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x947 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x662 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x874 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1150 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1135 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x451 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x342 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1673 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1203 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x896 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1979 (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x611 (* ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x1030 (* s00 ?x1385 ?x1385 ?x1385 ?x1385 ?x1385 ?x853 ?x853 ?x853 ?x989 ?x989 ?x989 ?x989 ?x989)))
 (let ((?x2117 (+ (* (- 1) ?x1030) ?x611 (* 3 ?x1979) (* (- 1) ?x896) (* (- 1) ?x1203) (* (- 3) ?x1673) (* 3 ?x342) (* (- 1) ?x451) ?x1135 (* 3 ?x1150) ?x874 (* (- 3) ?x662) (* 3 ?x947) (* 3 ?x1019) ?x1078 (* (- 3) ?x1157) ?x1257 (* 3 ?x1266) (* (- 3) ?x1310) ?x1358 (* (- 1) ?x343) (* 3 ?x401) (* 3 ?x424) (* (- 3) ?x446) (* (- 3) ?x288) (* (- 3) ?x1517) (* (- 3) ?x1684) (* (- 1) ?x1446) ?x1475 (* (- 1) ?x1452) (* (- 1) ?x1914) ?x2068)))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1223 (* 108 ?x1346)))
 (let ((?x1123 (* (- 9) s)))
 (let ((?x703 (* r00 r00 s00)))
 (let ((?x1081 (* (- 36) ?x703)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x862 (* 51 ?x591)))
 (let ((?x486 (* r00 r00 s)))
 (let ((?x1847 (* 36 ?x486)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x650 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x321 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x1173 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x372 (* 108 ?x522)))
 (let ((?x1230 (+ (* 216 (* r00 s00 x00)) ?x372 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1173 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x321 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x650 (* (- 108) (* x s)) ?x1847 ?x862 (* (- 108) (* r00 x)) ?x137 ?x1081 ?x1123 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1223)))
 (let (($x1236 (= ?x1230 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x281 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x486) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 ?x703) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x694 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x486) ?x604 (* 18 (* r00 x)) ?x378 (* 6 ?x703) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1018 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x823 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1457 (and $x823 (= ?x1018 0) (= ?x694 0) (= ?x281 0) $x1236 (not (= ?x2117 0)))))
 (let ((?x216 (- x s)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x271 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x268 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x267 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x265 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x259 (* ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x258 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x257 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x256 (* 3 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x255 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x253 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x252 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x250 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x248 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x246 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x244 (* 3 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x243 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x241 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x239 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)))
 (let ((?x238 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x237 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x235 (* 3 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x233 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x232 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x231 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x229 (* ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x227 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x223 (* 3 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x222 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x221 (* ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216)))
 (let ((?x219 (* 3 ?x213 ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x218 (* ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x217 (* (- 1) ?x213 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x215 s00 ?x216 ?x216 ?x216)))
 (let ((?x234 (+ (- (+ (- (- (- (+ ?x217 ?x218 ?x219) ?x221) ?x222) ?x223) ?x227) ?x229) ?x231 ?x232 ?x233)))
 (let ((?x249 (+ (- (+ (- (+ (- ?x234 ?x235) ?x237 ?x238 ?x239) ?x241) ?x243 ?x244) ?x246) ?x248)))
 (let ((?x264 (- (- (- (- (- (+ (- ?x249 ?x250) ?x252 ?x253) ?x255) ?x256) ?x257) ?x258) ?x259)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x276 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (+ (- (- (+ ?x264 ?x265) ?x267) ?x268) ?x271) 0))))))
 (rewrite (= $x276 $x1457))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x278 (asserted $x277)))
 (let ((@x420 (mp (mp @x278 (quant-intro (proof-bind ?x2187) (= $x277 $x1209)) $x1209) (rewrite (= $x1209 $x1209)) $x1209)))
 (let ((@x327 (mp (mp @x420 (quant-intro (proof-bind ?x733) (= $x1209 $x524)) $x524) (quant-intro (proof-bind ?x2045) (= $x524 $x1545)) $x1545)))
 (let ((@x1148 (mp (mp~ @x327 (sk (~ $x1545 $x1851)) $x1851) (rewrite (= $x1851 $x1347)) $x1347)))
 (let ((@x1190 (and-elim @x1148 $x1704)))
 (let ((@x532 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1704) $x1050)) @x1190 $x1050)))
 (let (($x1687 (>= ?x980 0)))
 (let ((@x344 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1704) $x1687)) @x1190 $x1687)))
 (let (($x976 (not (<= ?x1326 0))))
 (let (($x796 (>= ?x1326 0)))
 (let ((@x1279 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2048 $x976 (not $x796))) (and-elim @x1148 $x308) (or $x976 (not $x796)))))
 (let ((@x609 (unit-resolution @x1279 (lemma ((_ th-lemma arith) (hypothesis (not $x796)) @x344 @x532 false) $x796) $x976)))
 ((_ th-lemma arith) @x609 @x344 @x532 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        35
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             676
 :arith-nonlinear-bounds    28
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      7
 :arith-tableau-max-columns 127
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                6.00
 :memory                    3.61
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                69746645
 :num-checks                1
 :propagations              12
 :rlimit-count              112980
 :time                      0.14
 :total-time                0.16)
