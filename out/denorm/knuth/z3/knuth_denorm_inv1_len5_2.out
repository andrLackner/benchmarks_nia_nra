unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x1287 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 4) (* d!1 x!0)) (* 2 (* d!1 q!3)) (* (- 1) (* d!1 d!1 q!3)) (* 4 (* d!1 r!2)) (* (- 8) r!2))))
 (let (($x1069 (>= ?x1287 0)))
 (let (($x861 (= ?x1287 0)))
 (let ((?x810 (* 8 r!2)))
 (let ((?x991 (* d!1 d!1 q!3)))
 (let ((?x315 (* r00 d00)))
 (let ((?x316 (* 4 ?x315)))
 (let ((?x277 (* d00 q00)))
 (let ((?x278 (* 2 ?x277)))
 (let ((?x198 (* d00 x00)))
 (let ((?x212 (* (- 4) ?x198)))
 (let ((?x228 (* (- 1) ?x41)))
 (let ((?x180 (* (- 8) r00)))
 (let ((?x1048 (+ ?x180 ?x228 ?x212 ?x278 ?x316 (* 4 (* d!1 x!0)) (* (- 2) (* d!1 q!3)) ?x991 (* (- 4) (* d!1 r!2)) ?x810)))
 (let ((?x2752 (* d!1 q!3 r!2 r!2)))
 (let ((?x998 (* 2 (* q!3 r!2 r!2))))
 (let ((?x970 (* (- 24) (* q!3 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x713 (* 2 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2))))
 (let ((?x389 (* 8 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x448 (* 13 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2))))
 (let ((?x1015 (* (- 10) (* q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x956 (* (- 16) (* r!2 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x1042 (* (- 12) (* q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x1347 (* 30 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x953 (* (- 2) (* q!3 q!3 q!3 q!3 q!3 r!2))))
 (let ((?x1353 (* (- 8) (* q!3 q!3 q!3 q!3 r!2 r!2))))
 (let ((?x1679 (* 28 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x2655 (+ (* (- 36) (* q!3 q!3 q!3 x!0 r!2 r!2 r!2)) (* (- 3) (* d!1 q!3 q!3 q!3 q!3 q!3 x!0 r!2)) (* (- 1) (* q!3 q!3 x!0 x!0 x!0 r!2 r!2)) (* (- 3) (* d!1 q!3 x!0 x!0 r!2 r!2 r!2)) (* 4 (* q!3 q!3 q!3 q!3 x!0 r!2)) (* (- 12) (* d!1 q!3 q!3 q!3 q!3 x!0 r!2 r!2)) (* 6 (* d!1 q!3 q!3 q!3 x!0 x!0 r!2 r!2)) (* 2 (* d!1 q!3 q!3 q!3 q!3 x!0 r!2)) (* (- 1) (* d!1 q!3 q!3 q!3 x!0 x!0 x!0 r!2)) (* (- 8) (* d!1 r!2 r!2 r!2 r!2 r!2 r!2)) ?x1679 (* 8 (* q!3 q!3 q!3 x!0 r!2 r!2)) (* (- 4) (* d!1 q!3 q!3 q!3 q!3 r!2 r!2)) ?x1353 (* (- 12) (* q!3 q!3 x!0 r!2 r!2 r!2 r!2)) (* 6 (* q!3 q!3 x!0 x!0 r!2 r!2 r!2)) (* d!1 q!3 q!3 q!3 q!3 q!3 q!3 r!2) (* 12 (* d!1 q!3 q!3 q!3 q!3 r!2 r!2 r!2)) (* (- 6) (* d!1 q!3 q!3 r!2 r!2 r!2 r!2)) ?x953 ?x1347 ?x1042 ?x956 ?x1015 ?x448 (* (- 27) (* q!3 q!3 q!3 q!3 x!0 r!2 r!2)) (* 3 (* d!1 q!3 q!3 x!0 r!2 r!2 r!2)) (* (- 1) (* d!1 q!3 q!3 q!3 q!3 q!3 r!2)) ?x389 (* 6 (* d!1 q!3 q!3 q!3 q!3 q!3 r!2 r!2)) (* (- 6) (* q!3 x!0 x!0 r!2 r!2 r!2)) (* (- 12) (* x!0 x!0 r!2 r!2 r!2 r!2)) (* (- 5) (* d!1 q!3 q!3 q!3 r!2 r!2 r!2)) (* 4 (* d!1 q!3 q!3 q!3 x!0 r!2 r!2)) (* (- 12) (* d!1 q!3 q!3 q!3 x!0 r!2 r!2 r!2)) (* 24 (* q!3 x!0 r!2 r!2 r!2 r!2)) ?x713 (* (- 1) (* d!1 q!3 q!3 q!3 x!0 x!0 r!2)) (* (- 6) (* d!1 x!0 x!0 r!2 r!2 r!2 r!2)) (* 3 (* d!1 q!3 q!3 q!3 q!3 x!0 x!0 r!2)) (* 12 (* d!1 q!3 x!0 r!2 r!2 r!2 r!2)) (* (- 2) (* q!3 q!3 q!3 x!0 x!0 x!0 r!2)) (* 6 (* q!3 q!3 q!3 q!3 x!0 x!0 r!2)) (* 12 (* d!1 x!0 r!2 r!2 r!2 r!2 r!2)) (* (- 6) (* q!3 q!3 q!3 q!3 q!3 x!0 r!2)) ?x970 (* 6 (* q!3 q!3 x!0 r!2 r!2 r!2)) (* (- 12) (* d!1 q!3 r!2 r!2 r!2 r!2 r!2)) (* 15 (* q!3 q!3 q!3 x!0 x!0 r!2 r!2)) (* 8 (* d!1 q!3 q!3 q!3 r!2 r!2 r!2 r!2)) (* d!1 x!0 x!0 x!0 r!2 r!2 r!2) (* (- 2) (* q!3 q!3 q!3 x!0 x!0 r!2)) ?x998 (* 24 (* x!0 r!2 r!2 r!2 r!2 r!2)) ?x2752 (* 2 (* x!0 x!0 x!0 r!2 r!2 r!2)))))
 (let ((?x284 (* ?x2655 ?x1048)))
 (let (($x2504 (= ?x284 0)))
 (let (($x2658 (not $x2504)))
 (let ((?x1064 (* 2 r!2)))
 (let ((?x1360 (* (- 1) x!0)))
 (let ((?x363 (+ 2 d!1 q!3 ?x1360 ?x1064)))
 (let ((?x962 (+ 2 d!1)))
 (let ((?x2070 (* r!2 r!2)))
 (let ((?x923 (* 8 ?x2070)))
 (let ((?x714 (+ 4 q!3)))
 (let ((?x242 (+ (* (- 1) (* ?x962 ?x714 ?x714 ?x714 ?x363 ?x363 r!2)) (* 4 (* d!1 r!2 r!2)) (* ?x962 ?x714 ?x714 ?x714 ?x363 ?x363 ?x363 r!2) (* ?x714 ?x714 ?x363 ?x363 ?x363 r!2 r!2) ?x923 ?x998 ?x2752 (* (- 1) (* ?x962 ?x363 ?x363 ?x363 r!2 r!2 r!2)))))
 (let ((?x337 (* ?x242 ?x1048)))
 (let (($x1018 (= ?x337 0)))
 (let ((?x2406 (* (- 16) ?x2070)))
 (let ((?x304 (* (- 2) d!1)))
 (let ((?x262 (+ (- 4) ?x304 q!3 ?x1360 ?x1064)))
 (let ((?x1056 (+ (- 8) q!3)))
 (let ((?x2006 (+ (* (- 8) (* d!1 r!2 r!2)) (* ?x1056 ?x1056 ?x1056 ?x962 ?x262 ?x262 ?x262 r!2) (* (- 1) (* ?x1056 ?x1056 ?x1056 ?x962 ?x262 ?x262 r!2)) (* ?x1056 ?x1056 ?x262 ?x262 ?x262 r!2 r!2) (* (- 1) (* ?x962 ?x262 ?x262 ?x262 r!2 r!2 r!2)) ?x2406 ?x998 ?x2752)))
 (let ((?x1065 (* ?x2006 ?x1048)))
 (let (($x1630 (= ?x1065 0)))
 (let ((?x1351 (* (- 8) ?x2070)))
 (let ((?x2059 (* (- 1) d!1)))
 (let ((?x1998 (+ (- 2) ?x2059 q!3 ?x1360 ?x1064)))
 (let ((?x932 (+ (- 4) q!3)))
 (let ((?x1085 (+ (* ?x932 ?x932 ?x932 ?x962 ?x1998 ?x1998 ?x1998 r!2) (* (- 4) (* d!1 r!2 r!2)) (* (- 1) (* ?x962 ?x1998 ?x1998 ?x1998 r!2 r!2 r!2)) (* ?x932 ?x932 ?x1998 ?x1998 ?x1998 r!2 r!2) (* (- 1) (* ?x932 ?x932 ?x932 ?x962 ?x1998 ?x1998 r!2)) ?x1351 ?x998 ?x2752)))
 (let ((?x2124 (* ?x1085 ?x1048)))
 (let (($x665 (= ?x2124 0)))
 (let (($x1092 (not $x665)))
 (let (($x1086 (or $x1092 (not $x1630) (not $x1018) $x2658)))
 (let (($x1787 (and $x861 $x1086)))
 (let ((?x965 (+ ?x810 ?x180 ?x228 ?x212 (* 4 (* x!0 d!1)) ?x278 ?x316 (* (- 4) (* r!2 d!1)) (* q!3 d!1 d!1) (* (- 2) (* q!3 d!1)))))
 (let ((?x960 (* q!3 r!2 r!2 d!1)))
 (let ((?x980 (+ (* 4 (* q!3 q!3 q!3 r!2 r!2 x!0 d!1)) (* 3 (* q!3 q!3 q!3 q!3 r!2 x!0 x!0 d!1)) (* (- 12) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1)) (* 6 (* q!3 q!3 q!3 r!2 r!2 x!0 x!0 d!1)) (* (- 1) (* q!3 q!3 q!3 r!2 x!0 x!0 x!0 d!1)) (* 12 (* q!3 r!2 r!2 r!2 r!2 x!0 d!1)) (* (- 12) (* q!3 q!3 q!3 q!3 r!2 r!2 x!0 d!1)) (* (- 3) (* q!3 r!2 r!2 r!2 x!0 x!0 d!1)) ?x713 (* (- 6) (* q!3 q!3 q!3 q!3 q!3 r!2 x!0)) (* 6 (* q!3 q!3 q!3 q!3 r!2 x!0 x!0)) (* (- 2) (* q!3 q!3 q!3 r!2 x!0 x!0 x!0)) (* 12 (* r!2 r!2 r!2 r!2 r!2 x!0 d!1)) (* (- 6) (* r!2 r!2 r!2 r!2 x!0 x!0 d!1)) (* 3 (* q!3 q!3 r!2 r!2 r!2 x!0 d!1)) (* (- 1) (* q!3 q!3 q!3 r!2 x!0 x!0 d!1)) (* r!2 r!2 r!2 x!0 x!0 x!0 d!1) (* (- 36) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0)) (* 15 (* q!3 q!3 q!3 r!2 r!2 x!0 x!0)) (* 2 (* q!3 q!3 q!3 q!3 r!2 x!0 d!1)) (* (- 3) (* q!3 q!3 q!3 q!3 q!3 r!2 x!0 d!1)) (* 12 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1)) (* 6 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 d!1)) (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 d!1) (* 8 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1)) ?x448 ?x1347 (* (- 27) (* q!3 q!3 q!3 q!3 r!2 r!2 x!0)) ?x1679 ?x389 (* (- 12) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0)) (* 6 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0)) (* (- 1) (* q!3 q!3 r!2 r!2 x!0 x!0 x!0)) ?x953 (* (- 1) (* q!3 q!3 q!3 q!3 q!3 r!2 d!1)) (* (- 4) (* q!3 q!3 q!3 q!3 r!2 r!2 d!1)) (* (- 5) (* q!3 q!3 q!3 r!2 r!2 r!2 d!1)) ?x1353 (* 4 (* q!3 q!3 q!3 q!3 r!2 x!0)) ?x1015 (* 8 (* q!3 q!3 q!3 r!2 r!2 x!0)) ?x998 ?x960 ?x1042 (* (- 8) (* r!2 r!2 r!2 r!2 r!2 r!2 d!1)) (* (- 12) (* q!3 r!2 r!2 r!2 r!2 r!2 d!1)) (* (- 6) (* q!3 q!3 r!2 r!2 r!2 r!2 d!1)) (* 6 (* q!3 q!3 r!2 r!2 r!2 x!0)) (* (- 2) (* q!3 q!3 q!3 r!2 x!0 x!0)) ?x970 (* 24 (* q!3 r!2 r!2 r!2 r!2 x!0)) (* (- 6) (* q!3 r!2 r!2 r!2 x!0 x!0)) ?x956 (* (- 12) (* r!2 r!2 r!2 r!2 x!0 x!0)) (* 24 (* r!2 r!2 r!2 r!2 r!2 x!0)) (* 2 (* r!2 r!2 r!2 x!0 x!0 x!0)))))
 (let ((?x1889 (+ 2 q!3 ?x1064 ?x1360 d!1)))
 (let ((?x922 (+ ?x923 (* ?x962 ?x714 ?x714 ?x714 ?x1889 ?x1889 ?x1889 r!2) (* ?x714 ?x714 ?x1889 ?x1889 ?x1889 r!2 r!2) (* (- 1) (* ?x962 ?x1889 ?x1889 ?x1889 r!2 r!2 r!2)) (* (- 1) (* ?x962 ?x714 ?x714 ?x714 ?x1889 ?x1889 r!2)) ?x998 (* 4 (* r!2 r!2 d!1)) ?x960)))
 (let ((?x999 (+ (- 2) q!3 ?x1064 ?x1360 ?x2059)))
 (let ((?x695 (+ (* ?x932 ?x932 ?x932 ?x962 ?x999 ?x999 ?x999 r!2) ?x1351 (* (- 1) (* ?x932 ?x932 ?x932 ?x962 ?x999 ?x999 r!2)) (* ?x932 ?x932 ?x999 ?x999 ?x999 r!2 r!2) (* (- 1) (* ?x962 ?x999 ?x999 ?x999 r!2 r!2 r!2)) ?x998 (* (- 4) (* r!2 r!2 d!1)) ?x960)))
 (let ((?x673 (+ (- 4) q!3 ?x1064 ?x1360 ?x304)))
 (let ((?x1290 (+ ?x2406 (* ?x1056 ?x1056 ?x1056 ?x962 ?x673 ?x673 ?x673 r!2) (* (- 1) (* ?x1056 ?x1056 ?x1056 ?x962 ?x673 ?x673 r!2)) (* (- 1) (* ?x962 ?x673 ?x673 ?x673 r!2 r!2 r!2)) (* ?x1056 ?x1056 ?x673 ?x673 ?x673 r!2 r!2) ?x998 (* (- 8) (* r!2 r!2 d!1)) ?x960)))
 (let (($x976 (or (not (= (* ?x1290 ?x965) 0)) (not (= (* ?x695 ?x965) 0)) (not (= (* ?x922 ?x965) 0)) (not (= (* ?x980 ?x965) 0)))))
 (let (($x989 (and (= ?x965 0) $x976)))
 (let (($x1133 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2704 (* (- 2) (* q d))))
 (let ((?x2703 (* q d d)))
 (let ((?x2702 (* r d)))
 (let ((?x2701 (* (- 4) ?x2702)))
 (let ((?x315 (* r00 d00)))
 (let ((?x316 (* 4 ?x315)))
 (let ((?x277 (* d00 q00)))
 (let ((?x278 (* 2 ?x277)))
 (let ((?x247 (* 4 (* x d))))
 (let ((?x198 (* d00 x00)))
 (let ((?x212 (* (- 4) ?x198)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x228 (* (- 1) ?x41)))
 (let ((?x180 (* (- 8) r00)))
 (let ((?x209 (* 8 r)))
 (let ((?x899 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 ?x2701 ?x2703 ?x2704)))
 (let ((?x2822 (* 2 (* r r r x x x))))
 (let ((?x2821 (* 24 (* r r r r r x))))
 (let ((?x2819 (* (- 12) (* r r r r x x))))
 (let ((?x2816 (* (- 16) (* r r r r r r))))
 (let ((?x2817 (* (- 6) (* q r r r x x))))
 (let ((?x2810 (* 24 (* q r r r r x))))
 (let ((?x2811 (* (- 24) (* q r r r r r))))
 (let ((?x2804 (* (- 2) (* q q q r x x))))
 (let ((?x2814 (* 6 (* q q r r r x))))
 (let ((?x2805 (* (- 6) (* q q r r r r d))))
 (let ((?x2796 (* (- 12) (* q r r r r r d))))
 (let ((?x2797 (* (- 8) (* r r r r r r d))))
 (let ((?x2803 (* (- 12) (* q q r r r r))))
 (let ((?x2749 (* q r r d)))
 (let ((?x2750 (* 2 (* q r r))))
 (let ((?x2789 (* 8 (* q q q r r x))))
 (let ((?x2678 (* (- 10) (* q q q r r r))))
 (let ((?x2676 (* 4 (* q q q q r x))))
 (let ((?x2673 (* (- 8) (* q q q q r r))))
 (let ((?x2635 (* (- 5) (* q q q r r r d))))
 (let ((?x2629 (* (- 4) (* q q q q r r d))))
 (let ((?x2627 (* (- 1) (* q q q q q r d))))
 (let ((?x2613 (* (- 2) (* q q q q q r))))
 (let ((?x2611 (* (- 1) (* q q r r x x x))))
 (let ((?x2602 (* 6 (* q q r r r x x))))
 (let ((?x2600 (* (- 12) (* q q r r r r x))))
 (let ((?x2598 (* 8 (* q q r r r r r))))
 (let ((?x2566 (* 8 (* q q q r r r r d))))
 (let ((?x2551 (* q q q q q q r d)))
 (let ((?x2546 (* 6 (* q q q q q r r d))))
 (let ((?x2539 (* 12 (* q q q q r r r d))))
 (let ((?x1320 (* (- 3) (* q q q q q r x d))))
 (let ((?x1797 (* 2 (* q q q q r x d))))
 (let ((?x2105 (* r r r x x x d)))
 (let ((?x2764 (* (- 1) (* q q q r x x d))))
 (let ((?x410 (* 3 (* q q r r r x d))))
 (let ((?x384 (* (- 6) (* r r r r x x d))))
 (let ((?x392 (* 12 (* r r r r r x d))))
 (let ((?x1836 (* q q q q q q r)))
 (let ((?x2779 (* 2 ?x1836)))
 (let ((?x697 (* (- 3) (* q r r r x x d))))
 (let ((?x1150 (* (- 12) (* q q q q r r x d))))
 (let ((?x689 (* 12 (* q r r r r x d))))
 (let ((?x1316 (* (- 1) (* q q q r x x x d))))
 (let ((?x1325 (* 6 (* q q q r r x x d))))
 (let ((?x1324 (* (- 12) (* q q q r r r x d))))
 (let ((?x1322 (* 3 (* q q q q r x x d))))
 (let ((?x1473 (* 4 (* q q q r r x d))))
 (let ((?x1786 (+ ?x1473 ?x1322 ?x1324 ?x1325 ?x1316 ?x689 ?x1150 ?x697 ?x2779 (* (- 6) (* q q q q q r x)) (* 6 (* q q q q r x x)) (* (- 2) (* q q q r x x x)) ?x392 ?x384 ?x410 ?x2764 ?x2105 (* (- 36) (* q q q r r r x)) (* 15 (* q q q r r x x)) ?x1797 ?x1320 ?x2539 ?x2546 ?x2551 ?x2566 (* 13 (* q q q q q r r)) (* 30 (* q q q q r r r)) (* (- 27) (* q q q q r r x)) (* 28 (* q q q r r r r)) ?x2598 ?x2600 ?x2602 ?x2611 ?x2613 ?x2627 ?x2629 ?x2635 ?x2673 ?x2676 ?x2678 ?x2789 ?x2750 ?x2749 ?x2803 ?x2797 ?x2796 ?x2805 ?x2814 ?x2804 ?x2811 ?x2810 ?x2817 ?x2816 ?x2819 ?x2821 ?x2822)))
 (let ((?x2743 (* r r d)))
 (let ((?x2744 (* 4 ?x2743)))
 (let ((?x177 (* (- 1) x)))
 (let ((?x142 (* 2 r)))
 (let ((?x1778 (+ 2 q ?x142 ?x177 d)))
 (let ((?x2735 (+ 4 q)))
 (let ((?x2732 (+ 2 d)))
 (let ((?x393 (* r r)))
 (let ((?x2648 (* 8 ?x393)))
 (let ((?x1751 (+ ?x2648 (* ?x2732 ?x2735 ?x2735 ?x2735 ?x1778 ?x1778 ?x1778 r) (* ?x2735 ?x2735 ?x1778 ?x1778 ?x1778 r r) (* (- 1) (* ?x2732 ?x1778 ?x1778 ?x1778 r r r)) (* (- 1) (* ?x2732 ?x2735 ?x2735 ?x2735 ?x1778 ?x1778 r)) ?x2750 ?x2744 ?x2749)))
 (let ((?x2834 (* (- 4) ?x2743)))
 (let ((?x2843 (* (- 1) d)))
 (let ((?x1637 (+ (- 2) q ?x142 ?x177 ?x2843)))
 (let ((?x2325 (* (- 1) (* ?x2732 ?x1637 ?x1637 ?x1637 r r r))))
 (let ((?x2835 (+ (- 4) q)))
 (let ((?x910 (* ?x2835 ?x2835 ?x1637 ?x1637 ?x1637 r r)))
 (let ((?x1832 (* (- 1) (* ?x2835 ?x2835 ?x2835 ?x2732 ?x1637 ?x1637 r))))
 (let ((?x2430 (* (- 8) ?x393)))
 (let ((?x338 (* ?x2835 ?x2835 ?x2835 ?x2732 ?x1637 ?x1637 ?x1637 r)))
 (let (($x290 (not (= (* (+ ?x338 ?x2430 ?x1832 ?x910 ?x2325 ?x2750 ?x2834 ?x2749) ?x899) 0))))
 (let ((?x2716 (* (- 8) ?x2743)))
 (let ((?x2700 (* (- 2) d)))
 (let ((?x2365 (+ (- 4) q ?x142 ?x177 ?x2700)))
 (let ((?x2723 (+ (- 8) q)))
 (let ((?x1597 (* ?x2723 ?x2723 ?x2365 ?x2365 ?x2365 r r)))
 (let ((?x255 (* (- 1) (* ?x2732 ?x2365 ?x2365 ?x2365 r r r))))
 (let ((?x622 (* (- 1) (* ?x2723 ?x2723 ?x2723 ?x2732 ?x2365 ?x2365 r))))
 (let ((?x753 (* ?x2723 ?x2723 ?x2723 ?x2732 ?x2365 ?x2365 ?x2365 r)))
 (let ((?x2719 (* (- 16) ?x393)))
 (let (($x202 (not (= (* (+ ?x2719 ?x753 ?x622 ?x255 ?x1597 ?x2750 ?x2716 ?x2749) ?x899) 0))))
 (let (($x938 (or $x202 $x290 (not (= (* ?x1751 ?x899) 0)) (not (= (* ?x1786 ?x899) 0)))))
 (let (($x649 (= ?x899 0)))
 (and $x649 $x938)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1927 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2704 (* (- 2) (* q d))))
 (let ((?x2703 (* q d d)))
 (let ((?x2702 (* r d)))
 (let ((?x2701 (* (- 4) ?x2702)))
 (let ((?x2827 (* 8 d)))
 (let ((?x315 (* r00 d00)))
 (let ((?x316 (* 4 ?x315)))
 (let ((?x277 (* d00 q00)))
 (let ((?x278 (* 2 ?x277)))
 (let ((?x247 (* 4 (* x d))))
 (let ((?x198 (* d00 x00)))
 (let ((?x212 (* (- 4) ?x198)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x228 (* (- 1) ?x41)))
 (let ((?x180 (* (- 8) r00)))
 (let ((?x209 (* 8 r)))
 (let ((?x2589 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 (* (- 4) (* d 2)) ?x2827 ?x2701 ?x2703 ?x2704)))
 (let ((?x2749 (* q r r d)))
 (let ((?x2750 (* 2 (* q r r))))
 (let ((?x2843 (* (- 1) d)))
 (let ((?x177 (* (- 1) x)))
 (let ((?x142 (* 2 r)))
 (let ((?x1637 (+ (- 2) q ?x142 ?x177 ?x2843)))
 (let ((?x2732 (+ 2 d)))
 (let ((?x2325 (* (- 1) (* ?x2732 ?x1637 ?x1637 ?x1637 r r r))))
 (let ((?x2835 (+ (- 4) q)))
 (let ((?x910 (* ?x2835 ?x2835 ?x1637 ?x1637 ?x1637 r r)))
 (let ((?x1832 (* (- 1) (* ?x2835 ?x2835 ?x2835 ?x2732 ?x1637 ?x1637 r))))
 (let ((?x393 (* r r)))
 (let ((?x2430 (* (- 8) ?x393)))
 (let ((?x338 (* ?x2835 ?x2835 ?x2835 ?x2732 ?x1637 ?x1637 ?x1637 r)))
 (let ((?x2309 (+ ?x338 ?x2430 ?x1832 ?x910 ?x2325 (* (- 4) (* d r r)) ?x2750 ?x2749)))
 (let ((?x2721 (* 16 d)))
 (let ((?x675 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 (* (- 8) (* d 2)) ?x2721 ?x2701 ?x2703 ?x2704)))
 (let ((?x2700 (* (- 2) d)))
 (let ((?x2365 (+ (- 4) q ?x142 ?x177 ?x2700)))
 (let ((?x2723 (+ (- 8) q)))
 (let ((?x1597 (* ?x2723 ?x2723 ?x2365 ?x2365 ?x2365 r r)))
 (let ((?x255 (* (- 1) (* ?x2732 ?x2365 ?x2365 ?x2365 r r r))))
 (let ((?x622 (* (- 1) (* ?x2723 ?x2723 ?x2723 ?x2732 ?x2365 ?x2365 r))))
 (let ((?x753 (* ?x2723 ?x2723 ?x2723 ?x2732 ?x2365 ?x2365 ?x2365 r)))
 (let ((?x2719 (* (- 16) ?x393)))
 (let ((?x2481 (+ ?x2719 ?x753 ?x622 ?x255 ?x1597 (* (- 8) (* d r r)) ?x2750 ?x2749)))
 (let ((?x899 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 ?x2701 ?x2703 ?x2704)))
 (let ((?x2822 (* 2 (* r r r x x x))))
 (let ((?x2821 (* 24 (* r r r r r x))))
 (let ((?x2819 (* (- 12) (* r r r r x x))))
 (let ((?x2816 (* (- 16) (* r r r r r r))))
 (let ((?x2817 (* (- 6) (* q r r r x x))))
 (let ((?x2810 (* 24 (* q r r r r x))))
 (let ((?x2811 (* (- 24) (* q r r r r r))))
 (let ((?x2804 (* (- 2) (* q q q r x x))))
 (let ((?x2814 (* 6 (* q q r r r x))))
 (let ((?x2805 (* (- 6) (* q q r r r r d))))
 (let ((?x2796 (* (- 12) (* q r r r r r d))))
 (let ((?x2797 (* (- 8) (* r r r r r r d))))
 (let ((?x2803 (* (- 12) (* q q r r r r))))
 (let ((?x2789 (* 8 (* q q q r r x))))
 (let ((?x2678 (* (- 10) (* q q q r r r))))
 (let ((?x2676 (* 4 (* q q q q r x))))
 (let ((?x2673 (* (- 8) (* q q q q r r))))
 (let ((?x2635 (* (- 5) (* q q q r r r d))))
 (let ((?x2629 (* (- 4) (* q q q q r r d))))
 (let ((?x2627 (* (- 1) (* q q q q q r d))))
 (let ((?x2613 (* (- 2) (* q q q q q r))))
 (let ((?x2611 (* (- 1) (* q q r r x x x))))
 (let ((?x2602 (* 6 (* q q r r r x x))))
 (let ((?x2600 (* (- 12) (* q q r r r r x))))
 (let ((?x2598 (* 8 (* q q r r r r r))))
 (let ((?x2585 (* q q q r r r r)))
 (let ((?x2435 (* 12 ?x2585)))
 (let ((?x2584 (* q q q q r r x)))
 (let ((?x2581 (* (- 3) ?x2584)))
 (let ((?x2582 (* q q q q r r r)))
 (let ((?x2594 (* 6 ?x2582)))
 (let ((?x2576 (* q q q q q r r)))
 (let ((?x2566 (* 8 (* q q q r r r r d))))
 (let ((?x2551 (* q q q q q q r d)))
 (let ((?x2546 (* 6 (* q q q q q r r d))))
 (let ((?x2539 (* 12 (* q q q q r r r d))))
 (let ((?x1320 (* (- 3) (* q q q q q r x d))))
 (let ((?x1797 (* 2 (* q q q q r x d))))
 (let ((?x2438 (* q q q r r x x)))
 (let ((?x2439 (* 3 ?x2438)))
 (let ((?x2436 (* q q q r r r x)))
 (let ((?x2437 (* (- 12) ?x2436)))
 (let ((?x2105 (* r r r x x x d)))
 (let ((?x2764 (* (- 1) (* q q q r x x d))))
 (let ((?x410 (* 3 (* q q r r r x d))))
 (let ((?x384 (* (- 6) (* r r r r x x d))))
 (let ((?x392 (* 12 (* r r r r r x d))))
 (let ((?x697 (* (- 3) (* q r r r x x d))))
 (let ((?x1150 (* (- 12) (* q q q q r r x d))))
 (let ((?x689 (* 12 (* q r r r r x d))))
 (let ((?x1316 (* (- 1) (* q q q r x x x d))))
 (let ((?x1325 (* 6 (* q q q r r x x d))))
 (let ((?x1324 (* (- 12) (* q q q r r r x d))))
 (let ((?x1322 (* 3 (* q q q q r x x d))))
 (let ((?x1473 (* 4 (* q q q r r x d))))
 (let ((?x1657 (+ (* 2 (* ?x142 q ?x177 r q q q)) (* 2 (* q ?x142 ?x177 r q q q)) (* 2 (* ?x177 q ?x177 r q q q)) (* 2 (* q ?x177 ?x142 r q q q)) (* 2 (* q q ?x142 r q q q)) ?x1473 (* 2 (* ?x177 ?x142 q r q q q)) (* 2 (* q ?x142 ?x142 r q q q)) (* 2 (* ?x142 ?x142 q r q q q)) (* 2 (* q ?x177 q r q q q)) (* 2 (* ?x177 ?x142 ?x142 r q q q)) (* 2 (* ?x142 ?x177 ?x177 r q q q)) (* 2 (* ?x142 q ?x142 r q q q)) (* 2 (* ?x177 q ?x142 r q q q)) ?x1322 (* 2 (* q ?x177 ?x177 r q q q)) (* 2 (* ?x142 ?x177 ?x142 r q q q)) (* 2 (* ?x177 ?x177 q r q q q)) (* 2 (* ?x142 q q r q q q)) (* 2 (* q q q r q q q)) ?x1324 ?x1325 (* 2 (* ?x142 ?x142 ?x142 r q q q)) ?x1316 ?x689 (* 2 (* ?x177 ?x142 ?x177 r q q q)) (* 2 (* ?x177 q q r q q q)) (* 2 (* q ?x142 q r q q q)) (* 2 (* ?x142 ?x142 ?x177 r q q q)) ?x1150 ?x697 (* 2 (* r r q)) (* 2 (* q q ?x177 r q q q)) (* 2 (* ?x142 ?x177 q r q q q)) ?x392 ?x384 ?x410 ?x2764 ?x2105 (* 2 (* ?x177 ?x177 ?x177 r q q q)) (* 2 (* ?x177 ?x177 ?x142 r q q q)) ?x2437 ?x2439 ?x1797 ?x1320 ?x2539 ?x2546 ?x2551 ?x2566 ?x2576 ?x2594 ?x2581 ?x2435 ?x2598 ?x2600 ?x2602 ?x2611 ?x2613 ?x2627 ?x2629 ?x2635 ?x2673 ?x2676 ?x2678 ?x2789 ?x2749 ?x2803 ?x2797 ?x2796 ?x2805 ?x2814 ?x2804 ?x2811 ?x2810 ?x2817 ?x2816 ?x2819 ?x2821 ?x2822)))
 (let ((?x2729 (* 2 (* d 4))))
 (let ((?x2708 (* (- 8) d)))
 (let ((?x2743 (* r r d)))
 (let ((?x2744 (* 4 ?x2743)))
 (let ((?x1778 (+ 2 q ?x142 ?x177 d)))
 (let ((?x2735 (+ 4 q)))
 (let ((?x2648 (* 8 ?x393)))
 (let ((?x1751 (+ ?x2648 (* ?x2732 ?x2735 ?x2735 ?x2735 ?x1778 ?x1778 ?x1778 r) (* ?x2735 ?x2735 ?x1778 ?x1778 ?x1778 r r) (* (- 1) (* ?x2732 ?x1778 ?x1778 ?x1778 r r r)) (* (- 1) (* ?x2732 ?x2735 ?x2735 ?x2735 ?x1778 ?x1778 r)) ?x2750 ?x2744 ?x2749)))
 (let ((?x1848 (* ?x1751 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 ?x2708 ?x2701 ?x2703 ?x2704 ?x2729))))
 (let (($x1910 (or (not (= ?x1848 0)) (not (= (* ?x1657 ?x899) 0)) (not (= (* ?x2481 ?x675) 0)) (not (= (* ?x2309 ?x2589) 0)))))
 (let (($x649 (= ?x899 0)))
 (and $x649 $x1910)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x946 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2704 (* (- 2) (* q d))))
 (let ((?x2703 (* q d d)))
 (let ((?x2702 (* r d)))
 (let ((?x2701 (* (- 4) ?x2702)))
 (let ((?x315 (* r00 d00)))
 (let ((?x316 (* 4 ?x315)))
 (let ((?x277 (* d00 q00)))
 (let ((?x278 (* 2 ?x277)))
 (let ((?x247 (* 4 (* x d))))
 (let ((?x198 (* d00 x00)))
 (let ((?x212 (* (- 4) ?x198)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x228 (* (- 1) ?x41)))
 (let ((?x180 (* (- 8) r00)))
 (let ((?x209 (* 8 r)))
 (let ((?x899 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 ?x2701 ?x2703 ?x2704)))
 (let ((?x2822 (* 2 (* r r r x x x))))
 (let ((?x2821 (* 24 (* r r r r r x))))
 (let ((?x2819 (* (- 12) (* r r r r x x))))
 (let ((?x2816 (* (- 16) (* r r r r r r))))
 (let ((?x2817 (* (- 6) (* q r r r x x))))
 (let ((?x2810 (* 24 (* q r r r r x))))
 (let ((?x2811 (* (- 24) (* q r r r r r))))
 (let ((?x2804 (* (- 2) (* q q q r x x))))
 (let ((?x2814 (* 6 (* q q r r r x))))
 (let ((?x2805 (* (- 6) (* q q r r r r d))))
 (let ((?x2796 (* (- 12) (* q r r r r r d))))
 (let ((?x2797 (* (- 8) (* r r r r r r d))))
 (let ((?x2803 (* (- 12) (* q q r r r r))))
 (let ((?x2749 (* q r r d)))
 (let ((?x2750 (* 2 (* q r r))))
 (let ((?x2789 (* 8 (* q q q r r x))))
 (let ((?x2678 (* (- 10) (* q q q r r r))))
 (let ((?x2676 (* 4 (* q q q q r x))))
 (let ((?x2673 (* (- 8) (* q q q q r r))))
 (let ((?x2635 (* (- 5) (* q q q r r r d))))
 (let ((?x2629 (* (- 4) (* q q q q r r d))))
 (let ((?x2627 (* (- 1) (* q q q q q r d))))
 (let ((?x2613 (* (- 2) (* q q q q q r))))
 (let ((?x2611 (* (- 1) (* q q r r x x x))))
 (let ((?x2602 (* 6 (* q q r r r x x))))
 (let ((?x2600 (* (- 12) (* q q r r r r x))))
 (let ((?x2598 (* 8 (* q q r r r r r))))
 (let ((?x2566 (* 8 (* q q q r r r r d))))
 (let ((?x2551 (* q q q q q q r d)))
 (let ((?x2546 (* 6 (* q q q q q r r d))))
 (let ((?x2539 (* 12 (* q q q q r r r d))))
 (let ((?x1320 (* (- 3) (* q q q q q r x d))))
 (let ((?x1797 (* 2 (* q q q q r x d))))
 (let ((?x2105 (* r r r x x x d)))
 (let ((?x2764 (* (- 1) (* q q q r x x d))))
 (let ((?x410 (* 3 (* q q r r r x d))))
 (let ((?x384 (* (- 6) (* r r r r x x d))))
 (let ((?x392 (* 12 (* r r r r r x d))))
 (let ((?x1836 (* q q q q q q r)))
 (let ((?x2779 (* 2 ?x1836)))
 (let ((?x697 (* (- 3) (* q r r r x x d))))
 (let ((?x1150 (* (- 12) (* q q q q r r x d))))
 (let ((?x689 (* 12 (* q r r r r x d))))
 (let ((?x1316 (* (- 1) (* q q q r x x x d))))
 (let ((?x1325 (* 6 (* q q q r r x x d))))
 (let ((?x1324 (* (- 12) (* q q q r r r x d))))
 (let ((?x1322 (* 3 (* q q q q r x x d))))
 (let ((?x1473 (* 4 (* q q q r r x d))))
 (let ((?x1786 (+ ?x1473 ?x1322 ?x1324 ?x1325 ?x1316 ?x689 ?x1150 ?x697 ?x2779 (* (- 6) (* q q q q q r x)) (* 6 (* q q q q r x x)) (* (- 2) (* q q q r x x x)) ?x392 ?x384 ?x410 ?x2764 ?x2105 (* (- 36) (* q q q r r r x)) (* 15 (* q q q r r x x)) ?x1797 ?x1320 ?x2539 ?x2546 ?x2551 ?x2566 (* 13 (* q q q q q r r)) (* 30 (* q q q q r r r)) (* (- 27) (* q q q q r r x)) (* 28 (* q q q r r r r)) ?x2598 ?x2600 ?x2602 ?x2611 ?x2613 ?x2627 ?x2629 ?x2635 ?x2673 ?x2676 ?x2678 ?x2789 ?x2750 ?x2749 ?x2803 ?x2797 ?x2796 ?x2805 ?x2814 ?x2804 ?x2811 ?x2810 ?x2817 ?x2816 ?x2819 ?x2821 ?x2822)))
 (let ((?x2743 (* r r d)))
 (let ((?x2744 (* 4 ?x2743)))
 (let ((?x177 (* (- 1) x)))
 (let ((?x142 (* 2 r)))
 (let ((?x1778 (+ 2 q ?x142 ?x177 d)))
 (let ((?x2735 (+ 4 q)))
 (let ((?x2732 (+ 2 d)))
 (let ((?x393 (* r r)))
 (let ((?x2648 (* 8 ?x393)))
 (let ((?x1751 (+ ?x2648 (* ?x2732 ?x2735 ?x2735 ?x2735 ?x1778 ?x1778 ?x1778 r) (* ?x2735 ?x2735 ?x1778 ?x1778 ?x1778 r r) (* (- 1) (* ?x2732 ?x1778 ?x1778 ?x1778 r r r)) (* (- 1) (* ?x2732 ?x2735 ?x2735 ?x2735 ?x1778 ?x1778 r)) ?x2750 ?x2744 ?x2749)))
 (let ((?x2834 (* (- 4) ?x2743)))
 (let ((?x2843 (* (- 1) d)))
 (let ((?x1637 (+ (- 2) q ?x142 ?x177 ?x2843)))
 (let ((?x2325 (* (- 1) (* ?x2732 ?x1637 ?x1637 ?x1637 r r r))))
 (let ((?x2835 (+ (- 4) q)))
 (let ((?x910 (* ?x2835 ?x2835 ?x1637 ?x1637 ?x1637 r r)))
 (let ((?x1832 (* (- 1) (* ?x2835 ?x2835 ?x2835 ?x2732 ?x1637 ?x1637 r))))
 (let ((?x2430 (* (- 8) ?x393)))
 (let ((?x338 (* ?x2835 ?x2835 ?x2835 ?x2732 ?x1637 ?x1637 ?x1637 r)))
 (let (($x290 (not (= (* (+ ?x338 ?x2430 ?x1832 ?x910 ?x2325 ?x2750 ?x2834 ?x2749) ?x899) 0))))
 (let ((?x2716 (* (- 8) ?x2743)))
 (let ((?x2700 (* (- 2) d)))
 (let ((?x2365 (+ (- 4) q ?x142 ?x177 ?x2700)))
 (let ((?x2723 (+ (- 8) q)))
 (let ((?x1597 (* ?x2723 ?x2723 ?x2365 ?x2365 ?x2365 r r)))
 (let ((?x255 (* (- 1) (* ?x2732 ?x2365 ?x2365 ?x2365 r r r))))
 (let ((?x622 (* (- 1) (* ?x2723 ?x2723 ?x2723 ?x2732 ?x2365 ?x2365 r))))
 (let ((?x753 (* ?x2723 ?x2723 ?x2723 ?x2732 ?x2365 ?x2365 ?x2365 r)))
 (let ((?x2719 (* (- 16) ?x393)))
 (let (($x202 (not (= (* (+ ?x2719 ?x753 ?x622 ?x255 ?x1597 ?x2750 ?x2716 ?x2749) ?x899) 0))))
 (let (($x938 (or $x202 $x290 (not (= (* ?x1751 ?x899) 0)) (not (= (* ?x1786 ?x899) 0)))))
 (let (($x649 (= ?x899 0)))
 (let (($x936 (and $x649 $x938)))
 (let ((?x2827 (* 8 d)))
 (let ((?x2589 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 (* (- 4) (* d 2)) ?x2827 ?x2701 ?x2703 ?x2704)))
 (let ((?x2309 (+ ?x338 ?x2430 ?x1832 ?x910 ?x2325 (* (- 4) (* d r r)) ?x2750 ?x2749)))
 (let ((?x2721 (* 16 d)))
 (let ((?x675 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 (* (- 8) (* d 2)) ?x2721 ?x2701 ?x2703 ?x2704)))
 (let ((?x2481 (+ ?x2719 ?x753 ?x622 ?x255 ?x1597 (* (- 8) (* d r r)) ?x2750 ?x2749)))
 (let ((?x2585 (* q q q r r r r)))
 (let ((?x2435 (* 12 ?x2585)))
 (let ((?x2584 (* q q q q r r x)))
 (let ((?x2581 (* (- 3) ?x2584)))
 (let ((?x2582 (* q q q q r r r)))
 (let ((?x2594 (* 6 ?x2582)))
 (let ((?x2576 (* q q q q q r r)))
 (let ((?x2438 (* q q q r r x x)))
 (let ((?x2439 (* 3 ?x2438)))
 (let ((?x2436 (* q q q r r r x)))
 (let ((?x2437 (* (- 12) ?x2436)))
 (let ((?x1657 (+ (* 2 (* ?x142 q ?x177 r q q q)) (* 2 (* q ?x142 ?x177 r q q q)) (* 2 (* ?x177 q ?x177 r q q q)) (* 2 (* q ?x177 ?x142 r q q q)) (* 2 (* q q ?x142 r q q q)) ?x1473 (* 2 (* ?x177 ?x142 q r q q q)) (* 2 (* q ?x142 ?x142 r q q q)) (* 2 (* ?x142 ?x142 q r q q q)) (* 2 (* q ?x177 q r q q q)) (* 2 (* ?x177 ?x142 ?x142 r q q q)) (* 2 (* ?x142 ?x177 ?x177 r q q q)) (* 2 (* ?x142 q ?x142 r q q q)) (* 2 (* ?x177 q ?x142 r q q q)) ?x1322 (* 2 (* q ?x177 ?x177 r q q q)) (* 2 (* ?x142 ?x177 ?x142 r q q q)) (* 2 (* ?x177 ?x177 q r q q q)) (* 2 (* ?x142 q q r q q q)) (* 2 (* q q q r q q q)) ?x1324 ?x1325 (* 2 (* ?x142 ?x142 ?x142 r q q q)) ?x1316 ?x689 (* 2 (* ?x177 ?x142 ?x177 r q q q)) (* 2 (* ?x177 q q r q q q)) (* 2 (* q ?x142 q r q q q)) (* 2 (* ?x142 ?x142 ?x177 r q q q)) ?x1150 ?x697 (* 2 (* r r q)) (* 2 (* q q ?x177 r q q q)) (* 2 (* ?x142 ?x177 q r q q q)) ?x392 ?x384 ?x410 ?x2764 ?x2105 (* 2 (* ?x177 ?x177 ?x177 r q q q)) (* 2 (* ?x177 ?x177 ?x142 r q q q)) ?x2437 ?x2439 ?x1797 ?x1320 ?x2539 ?x2546 ?x2551 ?x2566 ?x2576 ?x2594 ?x2581 ?x2435 ?x2598 ?x2600 ?x2602 ?x2611 ?x2613 ?x2627 ?x2629 ?x2635 ?x2673 ?x2676 ?x2678 ?x2789 ?x2749 ?x2803 ?x2797 ?x2796 ?x2805 ?x2814 ?x2804 ?x2811 ?x2810 ?x2817 ?x2816 ?x2819 ?x2821 ?x2822)))
 (let ((?x2729 (* 2 (* d 4))))
 (let ((?x2708 (* (- 8) d)))
 (let ((?x1848 (* ?x1751 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 ?x2708 ?x2701 ?x2703 ?x2704 ?x2729))))
 (let (($x1910 (or (not (= ?x1848 0)) (not (= (* ?x1657 ?x899) 0)) (not (= (* ?x2481 ?x675) 0)) (not (= (* ?x2309 ?x2589) 0)))))
 (let (($x755 (and $x649 $x1910)))
 (rewrite (= $x755 $x936))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x651 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1342 (* 4 (* d00 r00))))
 (let ((?x177 (* (- 1) x)))
 (let ((?x142 (* 2 r)))
 (let ((?x2346 (+ 2 ?x142 ?x177 q d)))
 (let ((?x2732 (+ 2 d)))
 (let ((?x277 (* d00 q00)))
 (let ((?x278 (* 2 ?x277)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x228 (* (- 1) ?x41)))
 (let ((?x198 (* d00 x00)))
 (let ((?x212 (* (- 4) ?x198)))
 (let ((?x1553 (* 4 (* ?x2732 r))))
 (let ((?x180 (* (- 8) r00)))
 (let ((?x2827 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x385 (* (- 8) x)))
 (let ((?x425 (* 16 r)))
 (let ((?x1561 (+ 16 ?x425 ?x385 ?x30 ?x2827 ?x180 ?x1553 ?x212 ?x228 (* ?x2732 ?x2732 (+ 4 q)) (* (- 2) (* ?x2732 (+ 4 q))) ?x278 (* (- 4) (* ?x2732 ?x2346)) ?x1342)))
 (let ((?x2735 (+ 4 q)))
 (let ((?x1548 (+ (* ?x2732 ?x2735 ?x2735 ?x2735 ?x2346 ?x2346 ?x2346 r) (* ?x2735 ?x2735 ?x2346 ?x2346 ?x2346 r r) (* (- 1) (* ?x2732 ?x2735 ?x2735 ?x2735 ?x2346 ?x2346 r)) (* (- 1) (* ?x2732 ?x2346 ?x2346 ?x2346 r r r)) (* ?x2732 ?x2735 r r))))
 (let (($x1568 (not (= (* ?x1548 ?x1561) 0))))
 (let ((?x1627 (+ ?x425 ?x385 ?x30 ?x180 ?x1553 ?x212 ?x228 (* ?x2732 ?x2732 q) (* (- 2) (* ?x2732 q)) ?x278 (* (- 4) (* ?x2732 (+ ?x142 ?x177 q))) ?x1342)))
 (let ((?x1570 (+ ?x142 ?x177 q)))
 (let ((?x1626 (+ (* ?x2732 ?x1570 ?x1570 ?x1570 r q q q) (* ?x1570 ?x1570 ?x1570 r r q q) (* (- 1) (* ?x2732 ?x1570 ?x1570 r q q q)) (* (- 1) (* ?x2732 ?x1570 ?x1570 ?x1570 r r r)) (* ?x2732 r r q))))
 (let (($x892 (not (= (* ?x1626 ?x1627) 0))))
 (let ((?x2708 (* (- 8) d)))
 (let ((?x2624 (+ (- 16) ?x425 ?x385 ?x30 ?x2708 ?x180 ?x1553 ?x212 ?x228 (* (+ (- 4) q) ?x2732 ?x2732) (* (- 2) (* (+ (- 4) q) ?x2732)) ?x278 (* (- 4) (* ?x2732 (+ (- 2) ?x142 ?x177 q (* (- 1) d)))) ?x1342)))
 (let ((?x2843 (* (- 1) d)))
 (let ((?x2456 (+ (- 2) ?x142 ?x177 q ?x2843)))
 (let ((?x2835 (+ (- 4) q)))
 (let ((?x2605 (+ (* ?x2835 ?x2835 ?x2835 ?x2732 ?x2456 ?x2456 ?x2456 r) (* ?x2835 ?x2835 ?x2456 ?x2456 ?x2456 r r) (* (- 1) (* ?x2835 ?x2835 ?x2835 ?x2732 ?x2456 ?x2456 r)) (* (- 1) (* ?x2732 ?x2456 ?x2456 ?x2456 r r r)) (* ?x2835 ?x2732 r r))))
 (let (($x705 (not (= (* ?x2605 ?x2624) 0))))
 (let ((?x763 (+ (- 32) ?x425 ?x385 ?x30 (* (- 16) d) ?x180 ?x1553 ?x212 ?x228 (* (+ (- 8) q) ?x2732 ?x2732) (* (- 2) (* (+ (- 8) q) ?x2732)) ?x278 (* (- 4) (* ?x2732 (+ (- 4) ?x142 ?x177 q (* (- 2) d)))) ?x1342)))
 (let ((?x2700 (* (- 2) d)))
 (let ((?x1972 (+ (- 4) ?x142 ?x177 q ?x2700)))
 (let ((?x2723 (+ (- 8) q)))
 (let ((?x626 (+ (* ?x2723 ?x2723 ?x2723 ?x2732 ?x1972 ?x1972 ?x1972 r) (* ?x2723 ?x2723 ?x1972 ?x1972 ?x1972 r r) (* (- 1) (* ?x2723 ?x2723 ?x2723 ?x2732 ?x1972 ?x1972 r)) (* (- 1) (* ?x2732 ?x1972 ?x1972 ?x1972 r r r)) (* ?x2723 ?x2732 r r))))
 (let (($x556 (not (= (* ?x626 ?x763) 0))))
 (let ((?x247 (* 4 (* x d))))
 (let ((?x209 (* 8 r)))
 (let ((?x1396 (+ ?x209 ?x180 ?x247 ?x212 ?x228 (* d d q) (* (- 2) (* d q)) ?x278 (* (- 4) (* d r)) ?x1342)))
 (let (($x1398 (= ?x1396 0)))
 (and $x1398 (or $x556 $x705 $x892 $x1568)))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1933 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2704 (* (- 2) (* q d))))
 (let ((?x2703 (* q d d)))
 (let ((?x2702 (* r d)))
 (let ((?x2701 (* (- 4) ?x2702)))
 (let ((?x2827 (* 8 d)))
 (let ((?x315 (* r00 d00)))
 (let ((?x316 (* 4 ?x315)))
 (let ((?x277 (* d00 q00)))
 (let ((?x278 (* 2 ?x277)))
 (let ((?x247 (* 4 (* x d))))
 (let ((?x198 (* d00 x00)))
 (let ((?x212 (* (- 4) ?x198)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x228 (* (- 1) ?x41)))
 (let ((?x180 (* (- 8) r00)))
 (let ((?x209 (* 8 r)))
 (let ((?x2589 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 (* (- 4) (* d 2)) ?x2827 ?x2701 ?x2703 ?x2704)))
 (let ((?x2749 (* q r r d)))
 (let ((?x2750 (* 2 (* q r r))))
 (let ((?x2843 (* (- 1) d)))
 (let ((?x177 (* (- 1) x)))
 (let ((?x142 (* 2 r)))
 (let ((?x1637 (+ (- 2) q ?x142 ?x177 ?x2843)))
 (let ((?x2732 (+ 2 d)))
 (let ((?x2325 (* (- 1) (* ?x2732 ?x1637 ?x1637 ?x1637 r r r))))
 (let ((?x2835 (+ (- 4) q)))
 (let ((?x910 (* ?x2835 ?x2835 ?x1637 ?x1637 ?x1637 r r)))
 (let ((?x1832 (* (- 1) (* ?x2835 ?x2835 ?x2835 ?x2732 ?x1637 ?x1637 r))))
 (let ((?x393 (* r r)))
 (let ((?x2430 (* (- 8) ?x393)))
 (let ((?x338 (* ?x2835 ?x2835 ?x2835 ?x2732 ?x1637 ?x1637 ?x1637 r)))
 (let ((?x2309 (+ ?x338 ?x2430 ?x1832 ?x910 ?x2325 (* (- 4) (* d r r)) ?x2750 ?x2749)))
 (let ((?x2721 (* 16 d)))
 (let ((?x675 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 (* (- 8) (* d 2)) ?x2721 ?x2701 ?x2703 ?x2704)))
 (let ((?x2700 (* (- 2) d)))
 (let ((?x2365 (+ (- 4) q ?x142 ?x177 ?x2700)))
 (let ((?x2723 (+ (- 8) q)))
 (let ((?x1597 (* ?x2723 ?x2723 ?x2365 ?x2365 ?x2365 r r)))
 (let ((?x255 (* (- 1) (* ?x2732 ?x2365 ?x2365 ?x2365 r r r))))
 (let ((?x622 (* (- 1) (* ?x2723 ?x2723 ?x2723 ?x2732 ?x2365 ?x2365 r))))
 (let ((?x753 (* ?x2723 ?x2723 ?x2723 ?x2732 ?x2365 ?x2365 ?x2365 r)))
 (let ((?x2719 (* (- 16) ?x393)))
 (let ((?x2481 (+ ?x2719 ?x753 ?x622 ?x255 ?x1597 (* (- 8) (* d r r)) ?x2750 ?x2749)))
 (let ((?x899 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 ?x2701 ?x2703 ?x2704)))
 (let ((?x2822 (* 2 (* r r r x x x))))
 (let ((?x2821 (* 24 (* r r r r r x))))
 (let ((?x2819 (* (- 12) (* r r r r x x))))
 (let ((?x2816 (* (- 16) (* r r r r r r))))
 (let ((?x2817 (* (- 6) (* q r r r x x))))
 (let ((?x2810 (* 24 (* q r r r r x))))
 (let ((?x2811 (* (- 24) (* q r r r r r))))
 (let ((?x2804 (* (- 2) (* q q q r x x))))
 (let ((?x2814 (* 6 (* q q r r r x))))
 (let ((?x2805 (* (- 6) (* q q r r r r d))))
 (let ((?x2796 (* (- 12) (* q r r r r r d))))
 (let ((?x2797 (* (- 8) (* r r r r r r d))))
 (let ((?x2803 (* (- 12) (* q q r r r r))))
 (let ((?x2789 (* 8 (* q q q r r x))))
 (let ((?x2678 (* (- 10) (* q q q r r r))))
 (let ((?x2676 (* 4 (* q q q q r x))))
 (let ((?x2673 (* (- 8) (* q q q q r r))))
 (let ((?x2635 (* (- 5) (* q q q r r r d))))
 (let ((?x2629 (* (- 4) (* q q q q r r d))))
 (let ((?x2627 (* (- 1) (* q q q q q r d))))
 (let ((?x2613 (* (- 2) (* q q q q q r))))
 (let ((?x2611 (* (- 1) (* q q r r x x x))))
 (let ((?x2602 (* 6 (* q q r r r x x))))
 (let ((?x2600 (* (- 12) (* q q r r r r x))))
 (let ((?x2598 (* 8 (* q q r r r r r))))
 (let ((?x2585 (* q q q r r r r)))
 (let ((?x2435 (* 12 ?x2585)))
 (let ((?x2584 (* q q q q r r x)))
 (let ((?x2581 (* (- 3) ?x2584)))
 (let ((?x2582 (* q q q q r r r)))
 (let ((?x2594 (* 6 ?x2582)))
 (let ((?x2576 (* q q q q q r r)))
 (let ((?x2566 (* 8 (* q q q r r r r d))))
 (let ((?x2551 (* q q q q q q r d)))
 (let ((?x2546 (* 6 (* q q q q q r r d))))
 (let ((?x2539 (* 12 (* q q q q r r r d))))
 (let ((?x1320 (* (- 3) (* q q q q q r x d))))
 (let ((?x1797 (* 2 (* q q q q r x d))))
 (let ((?x2438 (* q q q r r x x)))
 (let ((?x2439 (* 3 ?x2438)))
 (let ((?x2436 (* q q q r r r x)))
 (let ((?x2437 (* (- 12) ?x2436)))
 (let ((?x2105 (* r r r x x x d)))
 (let ((?x2764 (* (- 1) (* q q q r x x d))))
 (let ((?x410 (* 3 (* q q r r r x d))))
 (let ((?x384 (* (- 6) (* r r r r x x d))))
 (let ((?x392 (* 12 (* r r r r r x d))))
 (let ((?x697 (* (- 3) (* q r r r x x d))))
 (let ((?x1150 (* (- 12) (* q q q q r r x d))))
 (let ((?x689 (* 12 (* q r r r r x d))))
 (let ((?x1316 (* (- 1) (* q q q r x x x d))))
 (let ((?x1325 (* 6 (* q q q r r x x d))))
 (let ((?x1324 (* (- 12) (* q q q r r r x d))))
 (let ((?x1322 (* 3 (* q q q q r x x d))))
 (let ((?x1473 (* 4 (* q q q r r x d))))
 (let ((?x1657 (+ (* 2 (* ?x142 q ?x177 r q q q)) (* 2 (* q ?x142 ?x177 r q q q)) (* 2 (* ?x177 q ?x177 r q q q)) (* 2 (* q ?x177 ?x142 r q q q)) (* 2 (* q q ?x142 r q q q)) ?x1473 (* 2 (* ?x177 ?x142 q r q q q)) (* 2 (* q ?x142 ?x142 r q q q)) (* 2 (* ?x142 ?x142 q r q q q)) (* 2 (* q ?x177 q r q q q)) (* 2 (* ?x177 ?x142 ?x142 r q q q)) (* 2 (* ?x142 ?x177 ?x177 r q q q)) (* 2 (* ?x142 q ?x142 r q q q)) (* 2 (* ?x177 q ?x142 r q q q)) ?x1322 (* 2 (* q ?x177 ?x177 r q q q)) (* 2 (* ?x142 ?x177 ?x142 r q q q)) (* 2 (* ?x177 ?x177 q r q q q)) (* 2 (* ?x142 q q r q q q)) (* 2 (* q q q r q q q)) ?x1324 ?x1325 (* 2 (* ?x142 ?x142 ?x142 r q q q)) ?x1316 ?x689 (* 2 (* ?x177 ?x142 ?x177 r q q q)) (* 2 (* ?x177 q q r q q q)) (* 2 (* q ?x142 q r q q q)) (* 2 (* ?x142 ?x142 ?x177 r q q q)) ?x1150 ?x697 (* 2 (* r r q)) (* 2 (* q q ?x177 r q q q)) (* 2 (* ?x142 ?x177 q r q q q)) ?x392 ?x384 ?x410 ?x2764 ?x2105 (* 2 (* ?x177 ?x177 ?x177 r q q q)) (* 2 (* ?x177 ?x177 ?x142 r q q q)) ?x2437 ?x2439 ?x1797 ?x1320 ?x2539 ?x2546 ?x2551 ?x2566 ?x2576 ?x2594 ?x2581 ?x2435 ?x2598 ?x2600 ?x2602 ?x2611 ?x2613 ?x2627 ?x2629 ?x2635 ?x2673 ?x2676 ?x2678 ?x2789 ?x2749 ?x2803 ?x2797 ?x2796 ?x2805 ?x2814 ?x2804 ?x2811 ?x2810 ?x2817 ?x2816 ?x2819 ?x2821 ?x2822)))
 (let ((?x2729 (* 2 (* d 4))))
 (let ((?x2708 (* (- 8) d)))
 (let ((?x2743 (* r r d)))
 (let ((?x2744 (* 4 ?x2743)))
 (let ((?x1778 (+ 2 q ?x142 ?x177 d)))
 (let ((?x2735 (+ 4 q)))
 (let ((?x2648 (* 8 ?x393)))
 (let ((?x1751 (+ ?x2648 (* ?x2732 ?x2735 ?x2735 ?x2735 ?x1778 ?x1778 ?x1778 r) (* ?x2735 ?x2735 ?x1778 ?x1778 ?x1778 r r) (* (- 1) (* ?x2732 ?x1778 ?x1778 ?x1778 r r r)) (* (- 1) (* ?x2732 ?x2735 ?x2735 ?x2735 ?x1778 ?x1778 r)) ?x2750 ?x2744 ?x2749)))
 (let ((?x1848 (* ?x1751 (+ ?x209 ?x180 ?x228 ?x212 ?x247 ?x278 ?x316 ?x2708 ?x2701 ?x2703 ?x2704 ?x2729))))
 (let (($x1910 (or (not (= ?x1848 0)) (not (= (* ?x1657 ?x899) 0)) (not (= (* ?x2481 ?x675) 0)) (not (= (* ?x2309 ?x2589) 0)))))
 (let (($x649 (= ?x899 0)))
 (let (($x755 (and $x649 $x1910)))
 (let ((?x1342 (* 4 (* d00 r00))))
 (let ((?x1553 (* 4 (* ?x2732 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x385 (* (- 8) x)))
 (let ((?x425 (* 16 r)))
 (let ((?x1561 (+ 16 ?x425 ?x385 ?x30 ?x2827 ?x180 ?x1553 ?x212 ?x228 (* ?x2732 ?x2732 ?x2735) (* (- 2) (* ?x2732 ?x2735)) ?x278 (* (- 4) (* ?x2732 (+ 2 ?x142 ?x177 q d))) ?x1342)))
 (let ((?x2346 (+ 2 ?x142 ?x177 q d)))
 (let ((?x1548 (+ (* ?x2732 ?x2735 ?x2735 ?x2735 ?x2346 ?x2346 ?x2346 r) (* ?x2735 ?x2735 ?x2346 ?x2346 ?x2346 r r) (* (- 1) (* ?x2732 ?x2735 ?x2735 ?x2735 ?x2346 ?x2346 r)) (* (- 1) (* ?x2732 ?x2346 ?x2346 ?x2346 r r r)) (* ?x2732 ?x2735 r r))))
 (let (($x1568 (not (= (* ?x1548 ?x1561) 0))))
 (let ((?x1627 (+ ?x425 ?x385 ?x30 ?x180 ?x1553 ?x212 ?x228 (* ?x2732 ?x2732 q) (* (- 2) (* ?x2732 q)) ?x278 (* (- 4) (* ?x2732 (+ ?x142 ?x177 q))) ?x1342)))
 (let ((?x1570 (+ ?x142 ?x177 q)))
 (let ((?x1626 (+ (* ?x2732 ?x1570 ?x1570 ?x1570 r q q q) (* ?x1570 ?x1570 ?x1570 r r q q) (* (- 1) (* ?x2732 ?x1570 ?x1570 r q q q)) (* (- 1) (* ?x2732 ?x1570 ?x1570 ?x1570 r r r)) (* ?x2732 r r q))))
 (let (($x892 (not (= (* ?x1626 ?x1627) 0))))
 (let ((?x2624 (+ (- 16) ?x425 ?x385 ?x30 ?x2708 ?x180 ?x1553 ?x212 ?x228 (* ?x2835 ?x2732 ?x2732) (* (- 2) (* ?x2835 ?x2732)) ?x278 (* (- 4) (* ?x2732 (+ (- 2) ?x142 ?x177 q ?x2843))) ?x1342)))
 (let ((?x2456 (+ (- 2) ?x142 ?x177 q ?x2843)))
 (let ((?x2605 (+ (* ?x2835 ?x2835 ?x2835 ?x2732 ?x2456 ?x2456 ?x2456 r) (* ?x2835 ?x2835 ?x2456 ?x2456 ?x2456 r r) (* (- 1) (* ?x2835 ?x2835 ?x2835 ?x2732 ?x2456 ?x2456 r)) (* (- 1) (* ?x2732 ?x2456 ?x2456 ?x2456 r r r)) (* ?x2835 ?x2732 r r))))
 (let (($x705 (not (= (* ?x2605 ?x2624) 0))))
 (let ((?x763 (+ (- 32) ?x425 ?x385 ?x30 (* (- 16) d) ?x180 ?x1553 ?x212 ?x228 (* ?x2723 ?x2732 ?x2732) (* (- 2) (* ?x2723 ?x2732)) ?x278 (* (- 4) (* ?x2732 (+ (- 4) ?x142 ?x177 q ?x2700))) ?x1342)))
 (let ((?x1972 (+ (- 4) ?x142 ?x177 q ?x2700)))
 (let ((?x626 (+ (* ?x2723 ?x2723 ?x2723 ?x2732 ?x1972 ?x1972 ?x1972 r) (* ?x2723 ?x2723 ?x1972 ?x1972 ?x1972 r r) (* (- 1) (* ?x2723 ?x2723 ?x2723 ?x2732 ?x1972 ?x1972 r)) (* (- 1) (* ?x2732 ?x1972 ?x1972 ?x1972 r r r)) (* ?x2723 ?x2732 r r))))
 (let (($x556 (not (= (* ?x626 ?x763) 0))))
 (let ((?x1396 (+ ?x209 ?x180 ?x247 ?x212 ?x228 (* d d q) (* (- 2) (* d q)) ?x278 (* (- 4) (* d r)) ?x1342)))
 (let (($x1398 (= ?x1396 0)))
 (let (($x355 (and $x1398 (or $x556 $x705 $x892 $x1568))))
 (rewrite (= $x355 $x755)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x774 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1342 (* 4 (* d00 r00))))
 (let ((?x2700 (* (- 2) d)))
 (let ((?x177 (* (- 1) x)))
 (let ((?x142 (* 2 r)))
 (let ((?x1972 (+ (- 4) ?x142 ?x177 q ?x2700)))
 (let ((?x2732 (+ 2 d)))
 (let ((?x277 (* d00 q00)))
 (let ((?x278 (* 2 ?x277)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x228 (* (- 1) ?x41)))
 (let ((?x198 (* d00 x00)))
 (let ((?x212 (* (- 4) ?x198)))
 (let ((?x1553 (* 4 (* ?x2732 r))))
 (let ((?x180 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x385 (* (- 8) x)))
 (let ((?x425 (* 16 r)))
 (let ((?x763 (+ (- 32) ?x425 ?x385 ?x30 (* (- 16) d) ?x180 ?x1553 ?x212 ?x228 (* (+ (- 8) q) ?x2732 ?x2732) (* (- 2) (* (+ (- 8) q) ?x2732)) ?x278 (* (- 4) (* ?x2732 ?x1972)) ?x1342)))
 (let ((?x2723 (+ (- 8) q)))
 (let ((?x626 (+ (* ?x2723 ?x2723 ?x2723 ?x2732 ?x1972 ?x1972 ?x1972 r) (* ?x2723 ?x2723 ?x1972 ?x1972 ?x1972 r r) (* (- 1) (* ?x2723 ?x2723 ?x2723 ?x2732 ?x1972 ?x1972 r)) (* (- 1) (* ?x2732 ?x1972 ?x1972 ?x1972 r r r)) (* ?x2723 ?x2732 r r))))
 (let (($x556 (not (= (* ?x626 ?x763) 0))))
 (let ((?x2708 (* (- 8) d)))
 (let ((?x2624 (+ (- 16) ?x425 ?x385 ?x30 ?x2708 ?x180 ?x1553 ?x212 ?x228 (* (+ (- 4) q) ?x2732 ?x2732) (* (- 2) (* (+ (- 4) q) ?x2732)) ?x278 (* (- 4) (* ?x2732 (+ (- 2) ?x142 ?x177 q (* (- 1) d)))) ?x1342)))
 (let ((?x2843 (* (- 1) d)))
 (let ((?x2456 (+ (- 2) ?x142 ?x177 q ?x2843)))
 (let ((?x2835 (+ (- 4) q)))
 (let ((?x2605 (+ (* ?x2835 ?x2835 ?x2835 ?x2732 ?x2456 ?x2456 ?x2456 r) (* ?x2835 ?x2835 ?x2456 ?x2456 ?x2456 r r) (* (- 1) (* ?x2835 ?x2835 ?x2835 ?x2732 ?x2456 ?x2456 r)) (* (- 1) (* ?x2732 ?x2456 ?x2456 ?x2456 r r r)) (* ?x2835 ?x2732 r r))))
 (let (($x705 (not (= (* ?x2605 ?x2624) 0))))
 (let ((?x1627 (+ ?x425 ?x385 ?x30 ?x180 ?x1553 ?x212 ?x228 (* ?x2732 ?x2732 q) (* (- 2) (* ?x2732 q)) ?x278 (* (- 4) (* ?x2732 (+ ?x142 ?x177 q))) ?x1342)))
 (let ((?x1570 (+ ?x142 ?x177 q)))
 (let ((?x1626 (+ (* ?x2732 ?x1570 ?x1570 ?x1570 r q q q) (* ?x1570 ?x1570 ?x1570 r r q q) (* (- 1) (* ?x2732 ?x1570 ?x1570 r q q q)) (* (- 1) (* ?x2732 ?x1570 ?x1570 ?x1570 r r r)) (* ?x2732 r r q))))
 (let (($x892 (not (= (* ?x1626 ?x1627) 0))))
 (let ((?x2827 (* 8 d)))
 (let ((?x1561 (+ 16 ?x425 ?x385 ?x30 ?x2827 ?x180 ?x1553 ?x212 ?x228 (* ?x2732 ?x2732 (+ 4 q)) (* (- 2) (* ?x2732 (+ 4 q))) ?x278 (* (- 4) (* ?x2732 (+ 2 ?x142 ?x177 q d))) ?x1342)))
 (let ((?x2346 (+ 2 ?x142 ?x177 q d)))
 (let ((?x2735 (+ 4 q)))
 (let ((?x1548 (+ (* ?x2732 ?x2735 ?x2735 ?x2735 ?x2346 ?x2346 ?x2346 r) (* ?x2735 ?x2735 ?x2346 ?x2346 ?x2346 r r) (* (- 1) (* ?x2732 ?x2735 ?x2735 ?x2735 ?x2346 ?x2346 r)) (* (- 1) (* ?x2732 ?x2346 ?x2346 ?x2346 r r r)) (* ?x2732 ?x2735 r r))))
 (let (($x1568 (not (= (* ?x1548 ?x1561) 0))))
 (let ((?x247 (* 4 (* x d))))
 (let ((?x209 (* 8 r)))
 (let ((?x1396 (+ ?x209 ?x180 ?x247 ?x212 ?x228 (* d d q) (* (- 2) (* d q)) ?x278 (* (- 4) (* d r)) ?x1342)))
 (let (($x1398 (= ?x1396 0)))
 (and $x1398 (or $x1568 $x892 $x705 $x556)))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x471 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1342 (* 4 (* d00 r00))))
 (let ((?x177 (* (- 1) x)))
 (let ((?x142 (* 2 r)))
 (let ((?x2346 (+ 2 ?x142 ?x177 q d)))
 (let ((?x2732 (+ 2 d)))
 (let ((?x277 (* d00 q00)))
 (let ((?x278 (* 2 ?x277)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x228 (* (- 1) ?x41)))
 (let ((?x198 (* d00 x00)))
 (let ((?x212 (* (- 4) ?x198)))
 (let ((?x1553 (* 4 (* ?x2732 r))))
 (let ((?x180 (* (- 8) r00)))
 (let ((?x2827 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x385 (* (- 8) x)))
 (let ((?x425 (* 16 r)))
 (let ((?x1561 (+ 16 ?x425 ?x385 ?x30 ?x2827 ?x180 ?x1553 ?x212 ?x228 (* ?x2732 ?x2732 (+ 4 q)) (* (- 2) (* ?x2732 (+ 4 q))) ?x278 (* (- 4) (* ?x2732 ?x2346)) ?x1342)))
 (let ((?x2735 (+ 4 q)))
 (let ((?x1548 (+ (* ?x2732 ?x2735 ?x2735 ?x2735 ?x2346 ?x2346 ?x2346 r) (* ?x2735 ?x2735 ?x2346 ?x2346 ?x2346 r r) (* (- 1) (* ?x2732 ?x2735 ?x2735 ?x2735 ?x2346 ?x2346 r)) (* (- 1) (* ?x2732 ?x2346 ?x2346 ?x2346 r r r)) (* ?x2732 ?x2735 r r))))
 (let (($x1568 (not (= (* ?x1548 ?x1561) 0))))
 (let ((?x1627 (+ ?x425 ?x385 ?x30 ?x180 ?x1553 ?x212 ?x228 (* ?x2732 ?x2732 q) (* (- 2) (* ?x2732 q)) ?x278 (* (- 4) (* ?x2732 (+ ?x142 ?x177 q))) ?x1342)))
 (let ((?x1570 (+ ?x142 ?x177 q)))
 (let ((?x1626 (+ (* ?x2732 ?x1570 ?x1570 ?x1570 r q q q) (* ?x1570 ?x1570 ?x1570 r r q q) (* (- 1) (* ?x2732 ?x1570 ?x1570 r q q q)) (* (- 1) (* ?x2732 ?x1570 ?x1570 ?x1570 r r r)) (* ?x2732 r r q))))
 (let (($x892 (not (= (* ?x1626 ?x1627) 0))))
 (let ((?x2708 (* (- 8) d)))
 (let ((?x2624 (+ (- 16) ?x425 ?x385 ?x30 ?x2708 ?x180 ?x1553 ?x212 ?x228 (* (+ (- 4) q) ?x2732 ?x2732) (* (- 2) (* (+ (- 4) q) ?x2732)) ?x278 (* (- 4) (* ?x2732 (+ (- 2) ?x142 ?x177 q (* (- 1) d)))) ?x1342)))
 (let ((?x2843 (* (- 1) d)))
 (let ((?x2456 (+ (- 2) ?x142 ?x177 q ?x2843)))
 (let ((?x2835 (+ (- 4) q)))
 (let ((?x2605 (+ (* ?x2835 ?x2835 ?x2835 ?x2732 ?x2456 ?x2456 ?x2456 r) (* ?x2835 ?x2835 ?x2456 ?x2456 ?x2456 r r) (* (- 1) (* ?x2835 ?x2835 ?x2835 ?x2732 ?x2456 ?x2456 r)) (* (- 1) (* ?x2732 ?x2456 ?x2456 ?x2456 r r r)) (* ?x2835 ?x2732 r r))))
 (let (($x705 (not (= (* ?x2605 ?x2624) 0))))
 (let ((?x763 (+ (- 32) ?x425 ?x385 ?x30 (* (- 16) d) ?x180 ?x1553 ?x212 ?x228 (* (+ (- 8) q) ?x2732 ?x2732) (* (- 2) (* (+ (- 8) q) ?x2732)) ?x278 (* (- 4) (* ?x2732 (+ (- 4) ?x142 ?x177 q (* (- 2) d)))) ?x1342)))
 (let ((?x2700 (* (- 2) d)))
 (let ((?x1972 (+ (- 4) ?x142 ?x177 q ?x2700)))
 (let ((?x2723 (+ (- 8) q)))
 (let ((?x626 (+ (* ?x2723 ?x2723 ?x2723 ?x2732 ?x1972 ?x1972 ?x1972 r) (* ?x2723 ?x2723 ?x1972 ?x1972 ?x1972 r r) (* (- 1) (* ?x2723 ?x2723 ?x2723 ?x2732 ?x1972 ?x1972 r)) (* (- 1) (* ?x2732 ?x1972 ?x1972 ?x1972 r r r)) (* ?x2723 ?x2732 r r))))
 (let (($x556 (not (= (* ?x626 ?x763) 0))))
 (let ((?x247 (* 4 (* x d))))
 (let ((?x209 (* 8 r)))
 (let ((?x1396 (+ ?x209 ?x180 ?x247 ?x212 ?x228 (* d d q) (* (- 2) (* d q)) ?x278 (* (- 4) (* d r)) ?x1342)))
 (let (($x1398 (= ?x1396 0)))
 (let (($x355 (and $x1398 (or $x556 $x705 $x892 $x1568))))
 (let (($x765 (and $x1398 (or $x1568 $x892 $x705 $x556))))
 (rewrite (= $x765 $x355)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x173 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x144 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x150 (- q 8)))
 (let ((?x161 (+ (* ?x62 ?x150 ?x150 ?x150 ?x144 ?x144 ?x144 r) (* ?x150 ?x150 ?x144 ?x144 ?x144 r r))))
 (let ((?x165 (- (- ?x161 (* ?x62 ?x150 ?x150 ?x150 ?x144 ?x144 r)) (* ?x62 ?x144 ?x144 ?x144 r r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x148 (- (+ (- (* 8 ?x144) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x155 (+ (- (+ (- ?x148 ?x41) (* ?x62 ?x62 ?x150)) (* 2 ?x62 ?x150)) ?x49)))
 (let ((?x168 (* (+ (- ?x155 (* 4 ?x62 ?x144)) ?x53) (+ ?x165 (* ?x62 ?x150 r r)))))
 (let ((?x115 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x121 (- q 4)))
 (let ((?x132 (+ (* ?x62 ?x121 ?x121 ?x121 ?x115 ?x115 ?x115 r) (* ?x121 ?x121 ?x115 ?x115 ?x115 r r))))
 (let ((?x136 (- (- ?x132 (* ?x62 ?x121 ?x121 ?x121 ?x115 ?x115 r)) (* ?x62 ?x115 ?x115 ?x115 r r r))))
 (let ((?x119 (- (+ (- (* 8 ?x115) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x126 (+ (- (+ (- ?x119 ?x41) (* ?x62 ?x62 ?x121)) (* 2 ?x62 ?x121)) ?x49)))
 (let ((?x139 (* (+ (- ?x126 (* 4 ?x62 ?x115)) ?x53) (+ ?x136 (* ?x62 ?x121 r r)))))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x88 (+ ?x58 q)))
 (let ((?x104 (+ (* ?x62 q q q ?x88 ?x88 ?x88 r) (* q q ?x88 ?x88 ?x88 r r))))
 (let ((?x108 (- (- ?x104 (* ?x62 q q q ?x88 ?x88 r)) (* ?x62 ?x88 ?x88 ?x88 r r r))))
 (let ((?x92 (- (+ (- (* 8 ?x88) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x98 (+ (- (+ (- ?x92 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x111 (* (+ (- ?x98 (* 4 ?x62 ?x88)) ?x53) (+ ?x108 (* ?x62 q r r)))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x78 (+ (* ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59 r) (* ?x67 ?x67 ?x59 ?x59 ?x59 r r))))
 (let ((?x82 (- (- ?x78 (* ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 r)) (* ?x62 ?x59 ?x59 ?x59 r r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x85 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (+ ?x82 (* ?x62 ?x67 r r)))))
 (let (($x171 (or (not (= ?x85 0)) (not (= ?x111 0)) (not (= ?x139 0)) (not (= ?x168 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x171))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x353 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x1342 (* 4 (* d00 r00))))
 (let ((?x2588 (* (- 2) d)))
 (let ((?x177 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x2200 (+ (- 4) ?x57 ?x177 q ?x2588)))
 (let ((?x283 (+ 2 d)))
 (let ((?x277 (* d00 q00)))
 (let ((?x278 (* 2 ?x277)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x228 (* (- 1) ?x41)))
 (let ((?x198 (* d00 x00)))
 (let ((?x212 (* (- 4) ?x198)))
 (let ((?x466 (* 4 (* ?x283 r))))
 (let ((?x180 (* (- 8) r00)))
 (let ((?x2537 (* 8 q)))
 (let ((?x385 (* (- 8) x)))
 (let ((?x370 (* 16 r)))
 (let ((?x783 (+ (- 32) ?x370 ?x385 ?x2537 (* (- 16) d) ?x180 ?x466 ?x212 ?x228 (* (+ (- 8) q) ?x283 ?x283) (* (- 2) (* (+ (- 8) q) ?x283)) ?x278 (* (- 4) (* ?x283 ?x2200)) ?x1342)))
 (let ((?x2351 (+ (- 8) q)))
 (let ((?x1209 (+ (* ?x2351 ?x2351 ?x2351 ?x283 ?x2200 ?x2200 ?x2200 r) (* ?x2351 ?x2351 ?x2200 ?x2200 ?x2200 r r) (* (- 1) (* ?x2351 ?x2351 ?x2351 ?x283 ?x2200 ?x2200 r)) (* (- 1) (* ?x283 ?x2200 ?x2200 ?x2200 r r r)) (* ?x2351 ?x283 r r))))
 (let ((?x470 (* (- 8) d)))
 (let ((?x1599 (+ (- 16) ?x370 ?x385 ?x2537 ?x470 ?x180 ?x466 ?x212 ?x228 (* (+ (- 4) q) ?x283 ?x283) (* (- 2) (* (+ (- 4) q) ?x283)) ?x278 (* (- 4) (* ?x283 (+ (- 2) ?x57 ?x177 q (* (- 1) d)))) ?x1342)))
 (let ((?x877 (* (- 1) d)))
 (let ((?x1517 (+ (- 2) ?x57 ?x177 q ?x877)))
 (let ((?x366 (+ (- 4) q)))
 (let ((?x2618 (+ (* ?x366 ?x366 ?x366 ?x283 ?x1517 ?x1517 ?x1517 r) (* ?x366 ?x366 ?x1517 ?x1517 ?x1517 r r) (* (- 1) (* ?x366 ?x366 ?x366 ?x283 ?x1517 ?x1517 r)) (* (- 1) (* ?x283 ?x1517 ?x1517 ?x1517 r r r)) (* ?x366 ?x283 r r))))
 (let ((?x2202 (+ ?x370 ?x385 ?x2537 ?x180 ?x466 ?x212 ?x228 (* ?x283 ?x283 q) (* (- 2) (* ?x283 q)) ?x278 (* (- 4) (* ?x283 (+ ?x57 ?x177 q))) ?x1342)))
 (let ((?x2133 (+ ?x57 ?x177 q)))
 (let ((?x1411 (+ (* ?x283 ?x2133 ?x2133 ?x2133 r q q q) (* ?x2133 ?x2133 ?x2133 r r q q) (* (- 1) (* ?x283 ?x2133 ?x2133 r q q q)) (* (- 1) (* ?x283 ?x2133 ?x2133 ?x2133 r r r)) (* ?x283 r r q))))
 (let ((?x209 (* 8 d)))
 (let ((?x1079 (+ 16 ?x370 ?x385 ?x2537 ?x209 ?x180 ?x466 ?x212 ?x228 (* ?x283 ?x283 (+ 4 q)) (* (- 2) (* ?x283 (+ 4 q))) ?x278 (* (- 4) (* ?x283 (+ 2 ?x57 ?x177 q d))) ?x1342)))
 (let ((?x2169 (+ 2 ?x57 ?x177 q d)))
 (let ((?x367 (+ 4 q)))
 (let ((?x2336 (+ (* ?x283 ?x367 ?x367 ?x367 ?x2169 ?x2169 ?x2169 r) (* ?x367 ?x367 ?x2169 ?x2169 ?x2169 r r) (* (- 1) (* ?x283 ?x367 ?x367 ?x367 ?x2169 ?x2169 r)) (* (- 1) (* ?x283 ?x2169 ?x2169 ?x2169 r r r)) (* ?x283 ?x367 r r))))
 (let (($x1220 (or (not (= (* ?x2336 ?x1079) 0)) (not (= (* ?x1411 ?x2202) 0)) (not (= (* ?x2618 ?x1599) 0)) (not (= (* ?x1209 ?x783) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x365 (+ ?x30 ?x180 (* 4 (* x d)) ?x212 ?x228 ?x44 (* (- 2) (* d q)) ?x278 (* (- 4) (* d r)) ?x1342)))
 (and (= ?x365 0) $x1220))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x233 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x1342 (* 4 (* d00 r00))))
 (let ((?x2588 (* (- 2) d)))
 (let ((?x177 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x2200 (+ (- 4) ?x57 ?x177 q ?x2588)))
 (let ((?x283 (+ 2 d)))
 (let ((?x277 (* d00 q00)))
 (let ((?x278 (* 2 ?x277)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x228 (* (- 1) ?x41)))
 (let ((?x198 (* d00 x00)))
 (let ((?x212 (* (- 4) ?x198)))
 (let ((?x466 (* 4 (* ?x283 r))))
 (let ((?x180 (* (- 8) r00)))
 (let ((?x2537 (* 8 q)))
 (let ((?x385 (* (- 8) x)))
 (let ((?x370 (* 16 r)))
 (let ((?x783 (+ (- 32) ?x370 ?x385 ?x2537 (* (- 16) d) ?x180 ?x466 ?x212 ?x228 (* (+ (- 8) q) ?x283 ?x283) (* (- 2) (* (+ (- 8) q) ?x283)) ?x278 (* (- 4) (* ?x283 ?x2200)) ?x1342)))
 (let ((?x2351 (+ (- 8) q)))
 (let ((?x1209 (+ (* ?x2351 ?x2351 ?x2351 ?x283 ?x2200 ?x2200 ?x2200 r) (* ?x2351 ?x2351 ?x2200 ?x2200 ?x2200 r r) (* (- 1) (* ?x2351 ?x2351 ?x2351 ?x283 ?x2200 ?x2200 r)) (* (- 1) (* ?x283 ?x2200 ?x2200 ?x2200 r r r)) (* ?x2351 ?x283 r r))))
 (let ((?x470 (* (- 8) d)))
 (let ((?x1599 (+ (- 16) ?x370 ?x385 ?x2537 ?x470 ?x180 ?x466 ?x212 ?x228 (* (+ (- 4) q) ?x283 ?x283) (* (- 2) (* (+ (- 4) q) ?x283)) ?x278 (* (- 4) (* ?x283 (+ (- 2) ?x57 ?x177 q (* (- 1) d)))) ?x1342)))
 (let ((?x877 (* (- 1) d)))
 (let ((?x1517 (+ (- 2) ?x57 ?x177 q ?x877)))
 (let ((?x366 (+ (- 4) q)))
 (let ((?x2618 (+ (* ?x366 ?x366 ?x366 ?x283 ?x1517 ?x1517 ?x1517 r) (* ?x366 ?x366 ?x1517 ?x1517 ?x1517 r r) (* (- 1) (* ?x366 ?x366 ?x366 ?x283 ?x1517 ?x1517 r)) (* (- 1) (* ?x283 ?x1517 ?x1517 ?x1517 r r r)) (* ?x366 ?x283 r r))))
 (let ((?x2202 (+ ?x370 ?x385 ?x2537 ?x180 ?x466 ?x212 ?x228 (* ?x283 ?x283 q) (* (- 2) (* ?x283 q)) ?x278 (* (- 4) (* ?x283 (+ ?x57 ?x177 q))) ?x1342)))
 (let ((?x2133 (+ ?x57 ?x177 q)))
 (let ((?x1411 (+ (* ?x283 ?x2133 ?x2133 ?x2133 r q q q) (* ?x2133 ?x2133 ?x2133 r r q q) (* (- 1) (* ?x283 ?x2133 ?x2133 r q q q)) (* (- 1) (* ?x283 ?x2133 ?x2133 ?x2133 r r r)) (* ?x283 r r q))))
 (let ((?x209 (* 8 d)))
 (let ((?x1079 (+ 16 ?x370 ?x385 ?x2537 ?x209 ?x180 ?x466 ?x212 ?x228 (* ?x283 ?x283 (+ 4 q)) (* (- 2) (* ?x283 (+ 4 q))) ?x278 (* (- 4) (* ?x283 (+ 2 ?x57 ?x177 q d))) ?x1342)))
 (let ((?x2169 (+ 2 ?x57 ?x177 q d)))
 (let ((?x367 (+ 4 q)))
 (let ((?x2336 (+ (* ?x283 ?x367 ?x367 ?x367 ?x2169 ?x2169 ?x2169 r) (* ?x367 ?x367 ?x2169 ?x2169 ?x2169 r r) (* (- 1) (* ?x283 ?x367 ?x367 ?x367 ?x2169 ?x2169 r)) (* (- 1) (* ?x283 ?x2169 ?x2169 ?x2169 r r r)) (* ?x283 ?x367 r r))))
 (let (($x1220 (or (not (= (* ?x2336 ?x1079) 0)) (not (= (* ?x1411 ?x2202) 0)) (not (= (* ?x2618 ?x1599) 0)) (not (= (* ?x1209 ?x783) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x365 (+ ?x30 ?x180 (* 4 (* x d)) ?x212 ?x228 ?x44 (* (- 2) (* d q)) ?x278 (* (- 4) (* d r)) ?x1342)))
 (let (($x1408 (and (= ?x365 0) $x1220)))
 (let ((?x144 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x150 (- q 8)))
 (let ((?x161 (+ (* ?x62 ?x150 ?x150 ?x150 ?x144 ?x144 ?x144 r) (* ?x150 ?x150 ?x144 ?x144 ?x144 r r))))
 (let ((?x165 (- (- ?x161 (* ?x62 ?x150 ?x150 ?x150 ?x144 ?x144 r)) (* ?x62 ?x144 ?x144 ?x144 r r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x148 (- (+ (- (* 8 ?x144) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x155 (+ (- (+ (- ?x148 ?x41) (* ?x62 ?x62 ?x150)) (* 2 ?x62 ?x150)) ?x49)))
 (let ((?x168 (* (+ (- ?x155 (* 4 ?x62 ?x144)) ?x53) (+ ?x165 (* ?x62 ?x150 r r)))))
 (let ((?x115 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x121 (- q 4)))
 (let ((?x132 (+ (* ?x62 ?x121 ?x121 ?x121 ?x115 ?x115 ?x115 r) (* ?x121 ?x121 ?x115 ?x115 ?x115 r r))))
 (let ((?x136 (- (- ?x132 (* ?x62 ?x121 ?x121 ?x121 ?x115 ?x115 r)) (* ?x62 ?x115 ?x115 ?x115 r r r))))
 (let ((?x119 (- (+ (- (* 8 ?x115) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x126 (+ (- (+ (- ?x119 ?x41) (* ?x62 ?x62 ?x121)) (* 2 ?x62 ?x121)) ?x49)))
 (let ((?x139 (* (+ (- ?x126 (* 4 ?x62 ?x115)) ?x53) (+ ?x136 (* ?x62 ?x121 r r)))))
 (let ((?x58 (- ?x57 x)))
 (let ((?x88 (+ ?x58 q)))
 (let ((?x104 (+ (* ?x62 q q q ?x88 ?x88 ?x88 r) (* q q ?x88 ?x88 ?x88 r r))))
 (let ((?x108 (- (- ?x104 (* ?x62 q q q ?x88 ?x88 r)) (* ?x62 ?x88 ?x88 ?x88 r r r))))
 (let ((?x92 (- (+ (- (* 8 ?x88) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x98 (+ (- (+ (- ?x92 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x111 (* (+ (- ?x98 (* 4 ?x62 ?x88)) ?x53) (+ ?x108 (* ?x62 q r r)))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x78 (+ (* ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59 r) (* ?x67 ?x67 ?x59 ?x59 ?x59 r r))))
 (let ((?x82 (- (- ?x78 (* ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 r)) (* ?x62 ?x59 ?x59 ?x59 r r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x85 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (+ ?x82 (* ?x62 ?x67 r r)))))
 (let (($x171 (or (not (= ?x85 0)) (not (= ?x111 0)) (not (= ?x139 0)) (not (= ?x168 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x172 (and (= ?x54 0) $x171)))
 (rewrite (= $x172 $x1408))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x568 (trans (quant-intro (proof-bind ?x233) (= $x173 $x353)) (elim-unused (= $x353 $x774)) (= $x173 $x774))))
 (let ((@x27 (asserted $x173)))
 (let ((@x784 (mp (mp @x27 @x568 $x774) (quant-intro (proof-bind ?x471) (= $x774 $x651)) $x651)))
 (let ((@x1308 (mp (mp @x784 (rewrite (= $x651 $x651)) $x651) (quant-intro (proof-bind ?x1933) (= $x651 $x1927)) $x1927)))
 (let ((@x992 (mp~ (mp @x1308 (quant-intro (proof-bind ?x946) (= $x1927 $x1133)) $x1133) (sk (~ $x1133 $x989)) $x989)))
 (let ((@x2341 (mp @x992 (rewrite (= $x989 $x1787)) $x1787)))
 (let ((@x1230 (and-elim @x2341 $x861)))
 (let ((@x479 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x861) $x1069)) @x1230 $x1069)))
 (let (($x911 (<= ?x1287 0)))
 (let ((@x244 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x861) $x911)) @x1230 $x911)))
 (let (($x1629 (not (<= ?x284 0))))
 (let (($x710 (<= ?x2124 0)))
 (let (($x722 (>= ?x2124 0)))
 (let ((@x905 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x665 (not $x710) (not $x722))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x722)) @x244 @x479 false) $x722) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x710)) @x244 @x479 false) $x710) $x665)))
 (let (($x843 (>= ?x337 0)))
 (let (($x1076 (<= ?x337 0)))
 (let ((@x849 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1018 (not $x1076) (not $x843))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1076)) @x244 @x479 false) $x1076) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x843)) @x244 @x479 false) $x843) $x1018)))
 (let (($x224 (>= ?x1065 0)))
 (let (($x2646 (<= ?x1065 0)))
 (let ((@x205 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1630 (not $x2646) (not $x224))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2646)) @x244 @x479 false) $x2646) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x224)) @x244 @x479 false) $x224) $x1630)))
 (let ((@x1531 (unit-resolution (unit-resolution (and-elim @x2341 $x1086) @x205 @x849 (or $x1092 $x2658)) @x905 $x2658)))
 (let (($x1745 (>= ?x284 0)))
 (let ((@x1013 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2504 $x1629 (not $x1745))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1745)) @x244 @x479 false) $x1745) @x1531 $x1629)))
 ((_ th-lemma arith farkas 1 1 1) @x1013 @x244 @x479 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        54
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1600
 :arith-nonlinear-bounds    16
 :arith-num-rows            13
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 127
 :arith-tableau-max-rows    13
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                4.04
 :memory                    3.43
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1816967
 :num-checks                1
 :propagations              36
 :rlimit-count              15376
 :time                      0.02
 :total-time                0.03)
