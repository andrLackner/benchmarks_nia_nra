unsat
((set-logic NIA)
(proof
(let (($x598 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x49 (* 6 z00)))
 (let ((?x304 (* (- 12) y)))
 (let ((?x43 (* 12 y00)))
 (let ((?x280 (* z00 z00)))
 (let ((?x281 (* (- 1) ?x280)))
 (let ((?x825 (+ ?x281 ?x43 ?x304 (* (- 18) z) ?x49 (* (+ 6 z) (+ 6 z)))))
 (let (($x973 (not (= ?x825 36))))
 (let ((?x1206 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x488 (* y00 y00)))
 (let ((?x959 (* 96 ?x488)))
 (let ((?x894 (* 16 (* y00 y00 y00))))
 (let ((?x764 (* (- 4) (* y y y))))
 (let ((?x712 (* 108 (* x x))))
 (let ((?x462 (* y y)))
 (let ((?x707 (* 24 ?x462)))
 (let ((?x1435 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x707 ?x712 ?x764 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x894 (* (- 6) (* z00 y y)) ?x959 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1206 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1440 (= ?x1435 0)))
 (let ((?x500 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x443 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1042 (* 18 (* x00 z))))
 (let ((?x791 (* (- 36) ?x488)))
 (let ((?x424 (* z y)))
 (let ((?x1017 (* (- 12) ?x424)))
 (let ((?x572 (* y00 z)))
 (let ((?x573 (* 12 ?x572)))
 (let ((?x715 (* (- 18) (* z x))))
 (let ((?x1070 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x715 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x573 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x1017 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x791 ?x1042 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x443 (* 18 (* y00 x)) ?x71 ?x500 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let (($x1081 (= ?x1070 0)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x517 (* (- 24) ?x488)))
 (let ((?x465 (* 12 ?x462)))
 (let ((?x523 (+ (* (- 1) (* y00 z00 z)) ?x1017 ?x715 (* 18 (* x00 z00)) ?x465 ?x517 ?x1042 ?x573 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x443 (* (- 6) (* z00 y)) ?x71 ?x500 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let (($x529 (= ?x523 0)))
 (let ((?x384 (* 6 ?x280)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x373 (* (- 1) ?x55)))
 (let ((?x702 (+ (* (- 6) ?x424) ?x373 ?x384 (* (- 12) ?x572) (* 18 (* y00 z00)) ?x64 ?x443 (* (- 6) (* z00 z)) ?x71 ?x500 (* z00 z00 z))))
 (let (($x1022 (= ?x702 0)))
 (let ((?x50 (* z z)))
 (let ((?x326 (* (- 6) z)))
 (let ((?x1109 (+ ?x281 ?x43 ?x304 ?x326 ?x49 ?x50)))
 (let (($x381 (= ?x1109 0)))
 (let ((?x253 (* (- 6) n00)))
 (let ((?x33 (* 6 n)))
 (let ((?x232 (* (- 1) z)))
 (let ((?x765 (+ ?x232 z00 ?x33 ?x253)))
 (let (($x772 (= ?x765 0)))
 (and $x772 $x381 $x1022 $x529 $x1081 $x1440 $x973))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!37))
 ))
 (let (($x688 (exists ((x Int) (y Int) (z Int) (n Int) )(! false :qid k!37))
 ))
 (let ((@x717 (elim-unused (= $x688 false))))
 (let ((?x951 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x49 (* 6 z00)))
 (let ((?x304 (* (- 12) y)))
 (let ((?x43 (* 12 y00)))
 (let ((?x280 (* z00 z00)))
 (let ((?x281 (* (- 1) ?x280)))
 (let ((?x825 (+ ?x281 ?x43 ?x304 (* (- 18) z) ?x49 (* (+ 6 z) (+ 6 z)))))
 (let (($x973 (not (= ?x825 36))))
 (let ((?x1206 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x488 (* y00 y00)))
 (let ((?x959 (* 96 ?x488)))
 (let ((?x894 (* 16 (* y00 y00 y00))))
 (let ((?x764 (* (- 4) (* y y y))))
 (let ((?x712 (* 108 (* x x))))
 (let ((?x462 (* y y)))
 (let ((?x707 (* 24 ?x462)))
 (let ((?x1435 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x707 ?x712 ?x764 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x894 (* (- 6) (* z00 y y)) ?x959 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1206 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1440 (= ?x1435 0)))
 (let ((?x500 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x443 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1042 (* 18 (* x00 z))))
 (let ((?x791 (* (- 36) ?x488)))
 (let ((?x424 (* z y)))
 (let ((?x1017 (* (- 12) ?x424)))
 (let ((?x572 (* y00 z)))
 (let ((?x573 (* 12 ?x572)))
 (let ((?x715 (* (- 18) (* z x))))
 (let ((?x1070 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x715 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x573 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x1017 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x791 ?x1042 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x443 (* 18 (* y00 x)) ?x71 ?x500 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let (($x1081 (= ?x1070 0)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x517 (* (- 24) ?x488)))
 (let ((?x465 (* 12 ?x462)))
 (let ((?x523 (+ (* (- 1) (* y00 z00 z)) ?x1017 ?x715 (* 18 (* x00 z00)) ?x465 ?x517 ?x1042 ?x573 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x443 (* (- 6) (* z00 y)) ?x71 ?x500 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let (($x529 (= ?x523 0)))
 (let ((?x384 (* 6 ?x280)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x373 (* (- 1) ?x55)))
 (let ((?x702 (+ (* (- 6) ?x424) ?x373 ?x384 (* (- 12) ?x572) (* 18 (* y00 z00)) ?x64 ?x443 (* (- 6) (* z00 z)) ?x71 ?x500 (* z00 z00 z))))
 (let (($x1022 (= ?x702 0)))
 (let ((?x50 (* z z)))
 (let ((?x326 (* (- 6) z)))
 (let ((?x1109 (+ ?x281 ?x43 ?x304 ?x326 ?x49 ?x50)))
 (let (($x381 (= ?x1109 0)))
 (let ((?x253 (* (- 6) n00)))
 (let ((?x33 (* 6 n)))
 (let ((?x232 (* (- 1) z)))
 (let ((?x765 (+ ?x232 z00 ?x33 ?x253)))
 (let (($x772 (= ?x765 0)))
 (let (($x783 (and $x772 $x381 $x1022 $x529 $x1081 $x1440 $x973)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x354 (= (+ ?x45 ?x46 (* (- 6) z00) (* (- 12) y00) (* (- 1) ?x50) ?x280) 0)))
 (let (($x942 (not $x354)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1226 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) (* 216 (* y00 x00)) (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) (* 24 (* z00 y00)) (* 36 (* z00 x00)) ?x707 ?x959 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) (* (- 12) (* z00 y00 y00)) (* (- 10) (* z00 z00 y00)) (* (- 36) (* x z00)) (* 18 (* y z00 y00)) (* (- 1) (* z00 z00 y00 y00)) ?x712 ?x764 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) (* (- 18) (* z00 z00 x00)) (* (- 216) (* x y00)) ?x894 (* (- 12) (* y y y00)) (* (- 36) (* z00 y00 x00)) (* (- 216) (* x x00)) (* z00 z00 z00 y00) (* 2 (* z00 z00 z00 x00)) (* 36 (* x z00 y00)) ?x1206)))
 (let (($x1231 (= ?x1226 0)))
 (let ((?x534 (* 18 (* z x00))))
 (let ((?x395 (* z y00)))
 (let ((?x396 (* 12 ?x395)))
 (let ((?x429 (* (- 18) (* x z))))
 (let ((?x364 (* y z)))
 (let ((?x388 (* (- 12) ?x364)))
 (let ((?x135 (* y y z)))
 (let ((?x927 (+ ?x64 ?x71 ?x443 ?x500 (* (- 3) (* y z00 z00)) ?x135 ?x388 (* (- 18) (* y00 x00)) (* (- 18) (* x y)) ?x429 ?x396 (* (- 6) (* z00 y00)) ?x791 ?x534 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) (* (- 1) (* z00 y00 y00)) (* 3 (* z00 z00 y00)) (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) (* 3 (* z00 z00 x00)) (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x934 (= ?x927 0)))
 (let ((?x622 (* z00 z00 y00)))
 (let ((?x103 (* y z z00)))
 (let ((?x676 (+ ?x64 ?x71 ?x443 ?x500 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x388 ?x429 ?x396 (* 6 (* z00 y00)) (* 18 (* z00 x00)) ?x465 ?x517 ?x534 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x622 (* (- 18) (* x z00)))))
 (let (($x681 (= ?x676 0)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x516 (+ ?x64 ?x71 ?x443 ?x373 ?x500 ?x76 ?x384 (* (- 6) ?x364) (* (- 12) ?x395) (* 18 (* z00 y00)) (* (- 6) (* z z00)))))
 (let (($x521 (= ?x516 0)))
 (let (($x272 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x546 (and $x272 $x354 $x521 $x681 $x934 $x1231 $x942)))
 (let ((@x674 (rewrite (= $x546 false))))
 (let ((@x356 (rewrite (= (= (+ ?x304 ?x326 ?x49 ?x43 ?x50 ?x281) 0) $x354))))
 (let ((@x1290 (monotonicity (rewrite (= ?x1109 (+ ?x304 ?x326 ?x49 ?x43 ?x50 ?x281))) (= $x381 (= (+ ?x304 ?x326 ?x49 ?x43 ?x50 ?x281) 0)))))
 (let ((@x274 (rewrite (= (= (+ ?x232 ?x33 z00 ?x253) 0) $x272))))
 (let ((@x494 (monotonicity (rewrite (= ?x765 (+ ?x232 ?x33 z00 ?x253))) (= $x772 (= (+ ?x232 ?x33 z00 ?x253) 0)))))
 (let ((@x1340 (monotonicity (trans @x494 @x274 (= $x772 $x272)) (trans @x1290 @x356 (= $x381 $x354)) (rewrite (= $x1022 $x521)) (rewrite (= $x529 $x681)) (rewrite (= $x1081 $x934)) (rewrite (= $x1440 $x1231)) (rewrite (= $x973 $x942)) (= $x783 $x546))))
 (trans @x1340 @x674 (= $x783 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x419 (trans (quant-intro (proof-bind ?x951) (= $x598 $x688)) @x717 (= $x598 false))))
 (let (($x227 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x29 (- 1)))
 (let ((?x40 (* ?x29 z00 z00)))
 (let ((?x44 (+ ?x40 ?x43)))
 (let ((?x222 (+ (- (- ?x44 (* 12 (+ y z))) (* 6 (+ z 6))) ?x49 (* (+ z 6) (+ z 6)))))
 (let (($x224 (not (= ?x222 0))))
 (let (($x225 (or $x224)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let (($x214 (= (- ?x211 ?x212) 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let (($x107 (= (- (+ ?x102 ?x103) ?x105) 0)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let (($x78 (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0)))
 (let ((?x50 (* z z)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x47 (- ?x44 ?x45)))
 (let ((?x48 (- ?x47 ?x46)))
 (let ((?x51 (+ ?x48 ?x49 ?x50)))
 (let (($x52 (= ?x51 0)))
 (let ((?x36 (* 6 n00)))
 (let ((?x33 (* 6 n)))
 (let ((?x30 (* ?x29 z)))
 (let ((?x34 (+ ?x30 z00 ?x33)))
 (let ((?x37 (- ?x34 ?x36)))
 (let (($x39 (= ?x37 0)))
 (and $x39 $x52 $x78 $x107 $x150 $x214 $x225)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!37))
 ))
 (let ((?x527 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x49 (* 6 z00)))
 (let ((?x304 (* (- 12) y)))
 (let ((?x43 (* 12 y00)))
 (let ((?x280 (* z00 z00)))
 (let ((?x281 (* (- 1) ?x280)))
 (let ((?x825 (+ ?x281 ?x43 ?x304 (* (- 18) z) ?x49 (* (+ 6 z) (+ 6 z)))))
 (let (($x973 (not (= ?x825 36))))
 (let ((?x1206 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x488 (* y00 y00)))
 (let ((?x959 (* 96 ?x488)))
 (let ((?x894 (* 16 (* y00 y00 y00))))
 (let ((?x764 (* (- 4) (* y y y))))
 (let ((?x712 (* 108 (* x x))))
 (let ((?x462 (* y y)))
 (let ((?x707 (* 24 ?x462)))
 (let ((?x1435 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x707 ?x712 ?x764 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x894 (* (- 6) (* z00 y y)) ?x959 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1206 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1440 (= ?x1435 0)))
 (let ((?x500 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x443 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1042 (* 18 (* x00 z))))
 (let ((?x791 (* (- 36) ?x488)))
 (let ((?x424 (* z y)))
 (let ((?x1017 (* (- 12) ?x424)))
 (let ((?x572 (* y00 z)))
 (let ((?x573 (* 12 ?x572)))
 (let ((?x715 (* (- 18) (* z x))))
 (let ((?x1070 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x715 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x573 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x1017 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x791 ?x1042 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x443 (* 18 (* y00 x)) ?x71 ?x500 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let (($x1081 (= ?x1070 0)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x517 (* (- 24) ?x488)))
 (let ((?x465 (* 12 ?x462)))
 (let ((?x523 (+ (* (- 1) (* y00 z00 z)) ?x1017 ?x715 (* 18 (* x00 z00)) ?x465 ?x517 ?x1042 ?x573 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x443 (* (- 6) (* z00 y)) ?x71 ?x500 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let (($x529 (= ?x523 0)))
 (let ((?x384 (* 6 ?x280)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x373 (* (- 1) ?x55)))
 (let ((?x702 (+ (* (- 6) ?x424) ?x373 ?x384 (* (- 12) ?x572) (* 18 (* y00 z00)) ?x64 ?x443 (* (- 6) (* z00 z)) ?x71 ?x500 (* z00 z00 z))))
 (let (($x1022 (= ?x702 0)))
 (let ((?x50 (* z z)))
 (let ((?x326 (* (- 6) z)))
 (let ((?x1109 (+ ?x281 ?x43 ?x304 ?x326 ?x49 ?x50)))
 (let (($x381 (= ?x1109 0)))
 (let ((?x253 (* (- 6) n00)))
 (let ((?x33 (* 6 n)))
 (let ((?x232 (* (- 1) z)))
 (let ((?x765 (+ ?x232 z00 ?x33 ?x253)))
 (let (($x772 (= ?x765 0)))
 (let (($x783 (and $x772 $x381 $x1022 $x529 $x1081 $x1440 $x973)))
 (let ((?x220 (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 (+ y z))) (* 6 (+ z 6)))))
 (let (($x224 (not (= (+ ?x220 ?x49 (* (+ z 6) (+ z 6))) 0))))
 (let (($x225 (or $x224)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let (($x214 (= (- ?x211 ?x212) 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let (($x107 (= (- (+ ?x102 ?x103) ?x105) 0)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let (($x78 (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x29 (- 1)))
 (let ((?x40 (* ?x29 z00 z00)))
 (let ((?x44 (+ ?x40 ?x43)))
 (let ((?x47 (- ?x44 ?x45)))
 (let ((?x48 (- ?x47 ?x46)))
 (let ((?x51 (+ ?x48 ?x49 ?x50)))
 (let (($x52 (= ?x51 0)))
 (let ((?x36 (* 6 n00)))
 (let ((?x30 (* ?x29 z)))
 (let ((?x34 (+ ?x30 z00 ?x33)))
 (let ((?x37 (- ?x34 ?x36)))
 (let (($x39 (= ?x37 0)))
 (let (($x226 (and $x39 $x52 $x78 $x107 $x150 $x214 $x225)))
 (rewrite (= $x226 $x783))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x228 (asserted $x227)))
 (let ((@x511 (mp (mp @x228 (quant-intro (proof-bind ?x527) (= $x227 $x598)) $x598) (rewrite (= $x598 $x598)) $x598)))
 (mp @x511 @x419 false))))))))))))

(:max-memory   19.55
 :memory       19.27
 :num-allocs   406052
 :num-checks   1
 :rlimit-count 3015
 :time         0.01
 :total-time   0.02)
