unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1615 (* r!2 s!1)))
 (let ((?x1003 (* 2 ?x1615)))
 (let ((?x838 (* (- 3) s!1)))
 (let ((?x811 (* 6 x!0)))
 (let ((?x961 (* 3 r!2)))
 (let ((?x431 (* r00 r00 r00)))
 (let ((?x432 (* 12 ?x431)))
 (let ((?x388 (* s00 r00)))
 (let ((?x466 (* (- 6) ?x388)))
 (let ((?x463 (* (- 6) x00)))
 (let ((?x462 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1069 (+ ?x44 ?x462 ?x463 ?x466 ?x432 ?x961 ?x811 (* (- 12) (* r00 r00 r!2)) ?x838 (* 4 (* s00 r!2)) ?x1003)))
 (let (($x1305 (>= ?x1069 0)))
 (let (($x1577 (= ?x1069 0)))
 (let ((?x1032 (* (- 2) ?x1615)))
 (let ((?x1522 (* 7 s!1)))
 (let ((?x887 (* r!2 r!2)))
 (let ((?x970 (* (- 12) ?x887)))
 (let ((?x1042 (* (- 6) x!0)))
 (let ((?x1017 (* (- 3) r!2)))
 (let ((?x445 (* (- 12) ?x431)))
 (let ((?x389 (* 6 ?x388)))
 (let ((?x261 (* r00 r00)))
 (let ((?x1390 (* 12 ?x261)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1528 (* (- 7) s00)))
 (let ((?x529 (+ ?x1528 ?x48 ?x59 ?x1390 ?x389 ?x445 ?x1017 ?x1042 ?x970 (* 12 (* r00 r00 r!2)) ?x1522 (* (- 4) (* s00 r!2)) ?x1032)))
 (let ((?x1180 (+ 3 (* 6 r!2) s!1)))
 (let ((?x971 (* (- 1) s!1)))
 (let ((?x1109 (+ x!0 ?x971)))
 (let ((?x946 (+ 1 r!2)))
 (let ((?x564 (* ?x946 ?x946 ?x946 ?x946 ?x946 ?x946 ?x1109 ?x1109 ?x1180 ?x1180 ?x1180 ?x1180 ?x1180 ?x529)))
 (let (($x711 (= ?x564 0)))
 (let (($x732 (not $x711)))
 (let ((?x932 (* (- 9) s!1)))
 (let ((?x1308 (* x00 x00)))
 (let ((?x1199 (* 108 ?x1308)))
 (let ((?x1146 (* s00 s00 s00)))
 (let ((?x712 (* 16 ?x1146)))
 (let ((?x884 (* r00 r00 s!1)))
 (let ((?x1581 (* 36 ?x884)))
 (let ((?x844 (* r00 r00 r00 x00)))
 (let ((?x786 (* (- 432) ?x844)))
 (let ((?x767 (* s00 x00)))
 (let ((?x923 (* (- 108) ?x767)))
 (let ((?x609 (* s00 r00 r00)))
 (let ((?x349 (* (- 36) ?x609)))
 (let ((?x553 (* s00 s00)))
 (let ((?x869 (* 51 ?x553)))
 (let ((?x484 (* r00 x00)))
 (let ((?x935 (* 108 ?x484)))
 (let ((?x137 (* 9 s00)))
 (let ((?x419 (+ ?x137 (* (- 216) (* r00 r00 r00 s!1)) (* (- 54) ?x388) (* 108 (* s00 r00 s!1)) (* 216 (* s00 r00 x00)) ?x935 ?x869 ?x349 (* (- 108) (* s00 s00 r00)) (* (- 108) (* x!0 s!1)) (* (- 108) (* r00 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* (- 36) (* s00 s00 r00 r00)) (* 108 (* s00 x!0)) (* 108 (* x00 s!1)) ?x923 (* 108 (* x!0 x!0)) ?x786 (* (- 216) (* x00 x!0)) ?x1581 (* 216 (* s00 r00 r00 r00)) (* (- 66) (* s00 s!1)) (* 15 (* s!1 s!1)) ?x712 (* 54 (* r00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) (* 432 (* r00 r00 r00 x!0)) ?x1199 ?x932)))
 (let ((?x799 (+ ?x137 (* (- 24) ?x388) (* 2 (* s00 r00 s!1)) (* 54 ?x484) (* (- 4) (* r00 s!1 s!1)) (* 4 (* s00 s00 r!2)) (* 15 ?x553) (* 36 (* r00 x00 r!2)) ?x349 (* 2 (* s00 s00 r00)) (* (- 6) (* x!0 s!1)) (* 54 (* x00 r!2)) (* (- 54) (* r00 x!0)) (* 6 (* s00 x!0)) (* 6 (* x00 s!1)) (* (- 2) (* s00 r!2 s!1)) (* (- 6) ?x767) (* 36 (* r00 r00 x00)) (* (- 54) (* r!2 x!0)) ?x1581 (* (- 36) (* r00 r!2 x!0)) (* (- 2) (* r!2 s!1 s!1)) (* (- 12) (* s00 s!1)) (* (- 3) (* s!1 s!1)) (* 24 (* r00 s!1)) (* (- 36) (* r00 r00 x!0)) ?x932 (* (- 24) (* s00 r!2)) (* 24 ?x1615))))
 (let ((?x644 (+ ?x44 (* (- 6) (* r00 r!2 s!1)) (* (- 9) ?x388) (* 18 ?x484) (* 4 ?x553) (* (- 6) ?x609) (* 18 (* x00 r!2)) (* (- 18) (* r00 x!0)) (* (- 18) (* r!2 x!0)) (* 6 ?x884) (* (- 2) (* s00 s!1)) (* (- 2) (* s!1 s!1)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)) ?x838 (* (- 9) (* s00 r!2)) (* 9 ?x1615))))
 (let ((?x1033 (* (- 3) ?x261)))
 (let ((?x1523 (+ s00 ?x1033 (* 3 ?x887) ?x971)))
 (let (($x1526 (= ?x1523 0)))
 (let (($x277 (and $x1526 $x1577 (= ?x644 0) (= ?x799 0) (= ?x419 0) $x732)))
 (let ((?x1371 (+ ?x1017 ?x1522 ?x1042 ?x1528 ?x48 ?x59 ?x970 ?x1390 ?x1032 (* 12 (* r!2 r00 r00)) (* (- 4) (* r!2 s00)) ?x389 ?x445)))
 (let ((?x906 (+ ?x971 x!0)))
 (let ((?x1036 (* ?x946 ?x946 ?x946 ?x946 ?x946 ?x946 ?x906 ?x906 ?x1180 ?x1180 ?x1180 ?x1180 ?x1180 ?x1371)))
 (let ((?x1338 (* (- 108) ?x1308)))
 (let ((?x1337 (* (- 16) ?x1146)))
 (let ((?x1018 (* s00 r00 r00 r00)))
 (let ((?x1333 (* (- 216) ?x1018)))
 (let ((?x845 (* 432 ?x844)))
 (let ((?x1091 (* 108 ?x767)))
 (let ((?x693 (* s00 s00 r00 r00)))
 (let ((?x694 (* 36 ?x693)))
 (let ((?x630 (* s00 s00 r00)))
 (let ((?x974 (* 108 ?x630)))
 (let ((?x962 (* 36 ?x609)))
 (let ((?x1327 (* (- 51) ?x553)))
 (let ((?x1295 (* s!1 r00 r00)))
 (let ((?x546 (* (- 36) ?x1295)))
 (let ((?x1324 (* (- 108) ?x484)))
 (let ((?x475 (* s00 r00 x00)))
 (let ((?x1323 (* (- 216) ?x475)))
 (let ((?x482 (* 54 ?x388)))
 (let ((?x949 (* (- 9) s00)))
 (let ((?x1545 (* 9 s!1)))
 (let ((?x996 (+ ?x1545 ?x949 ?x482 ?x1323 ?x1324 (* (- 15) (* s!1 s!1)) ?x546 ?x1327 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x962 ?x974 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x694 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1091 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x845 (* 12 (* s!1 s!1 s00)) ?x1333 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1337 (* 216 (* x!0 x00)) ?x1338)))
 (let ((?x839 (* r00 r00 x00)))
 (let ((?x852 (* (- 36) ?x839)))
 (let ((?x768 (* 6 ?x767)))
 (let ((?x658 (* (- 2) ?x630)))
 (let ((?x878 (* (- 15) ?x553)))
 (let ((?x513 (* (- 54) ?x484)))
 (let ((?x526 (* 24 ?x388)))
 (let ((?x581 (+ ?x1545 ?x949 (* (- 24) ?x1615) (* 24 (* r!2 s00)) ?x526 ?x513 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x546 ?x878 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x962 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x658 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x768 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x852 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x610 (* 6 ?x609)))
 (let ((?x566 (* (- 4) ?x553)))
 (let ((?x498 (* (- 18) ?x484)))
 (let ((?x503 (* 9 ?x388)))
 (let ((?x340 (* (- 3) s00)))
 (let ((?x1009 (+ (* 3 s!1) ?x340 (* (- 9) ?x1615) (* 9 (* r!2 s00)) ?x503 ?x498 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1295) ?x566 (* 18 (* x!0 r00)) ?x610 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x965 (+ ?x961 ?x838 ?x811 ?x44 ?x462 ?x463 ?x1003 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x466 ?x432)))
 (let (($x1303 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x887) (* 3 ?x261)) 0) (= ?x965 0) (= ?x1009 0) (= ?x581 0) (= ?x996 0) (not (= ?x1036 0)))))
 (let (($x1555 (exists ((r Int) (s Int) (x Int) )(! (let ((?x431 (* r00 r00 r00)))
 (let ((?x445 (* (- 12) ?x431)))
 (let ((?x388 (* s00 r00)))
 (let ((?x389 (* 6 ?x388)))
 (let ((?x361 (* r s00)))
 (let ((?x375 (* (- 4) ?x361)))
 (let ((?x311 (* r r00 r00)))
 (let ((?x312 (* 12 ?x311)))
 (let ((?x305 (* r s)))
 (let ((?x306 (* (- 2) ?x305)))
 (let ((?x261 (* r00 r00)))
 (let ((?x1390 (* 12 ?x261)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1528 (* (- 7) s00)))
 (let ((?x410 (* (- 6) x)))
 (let ((?x1590 (* 7 s)))
 (let ((?x1001 (* (- 3) r)))
 (let ((?x802 (+ ?x1001 ?x1590 ?x410 ?x1528 ?x48 ?x59 (* (- 12) (* r r)) ?x1390 ?x306 ?x312 ?x375 ?x389 ?x445)))
 (let ((?x213 (* 6 r)))
 (let ((?x1348 (+ 3 ?x213 s)))
 (let ((?x240 (* (- 1) s)))
 (let ((?x1547 (+ ?x240 x)))
 (let ((?x1345 (+ 1 r)))
 (let ((?x577 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1547 ?x1547 ?x1348 ?x1348 ?x1348 ?x1348 ?x1348 ?x802)))
 (let ((?x1308 (* x00 x00)))
 (let ((?x1338 (* (- 108) ?x1308)))
 (let ((?x1146 (* s00 s00 s00)))
 (let ((?x1337 (* (- 16) ?x1146)))
 (let ((?x1018 (* s00 r00 r00 r00)))
 (let ((?x1333 (* (- 216) ?x1018)))
 (let ((?x844 (* r00 r00 r00 x00)))
 (let ((?x845 (* 432 ?x844)))
 (let ((?x767 (* s00 x00)))
 (let ((?x1091 (* 108 ?x767)))
 (let ((?x693 (* s00 s00 r00 r00)))
 (let ((?x694 (* 36 ?x693)))
 (let ((?x630 (* s00 s00 r00)))
 (let ((?x974 (* 108 ?x630)))
 (let ((?x609 (* s00 r00 r00)))
 (let ((?x962 (* 36 ?x609)))
 (let ((?x553 (* s00 s00)))
 (let ((?x1327 (* (- 51) ?x553)))
 (let ((?x527 (* s r00 r00)))
 (let ((?x826 (* (- 36) ?x527)))
 (let ((?x484 (* r00 x00)))
 (let ((?x1324 (* (- 108) ?x484)))
 (let ((?x475 (* s00 r00 x00)))
 (let ((?x1323 (* (- 216) ?x475)))
 (let ((?x482 (* 54 ?x388)))
 (let ((?x949 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1339 (+ ?x143 ?x949 ?x482 ?x1323 ?x1324 (* (- 15) (* s s)) ?x826 ?x1327 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x962 ?x974 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x694 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1091 (* 108 (* s x)) (* (- 108) (* x x)) ?x845 (* 12 (* s s s00)) ?x1333 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1337 (* 216 (* x x00)) ?x1338)))
 (let (($x1340 (= ?x1339 0)))
 (let ((?x839 (* r00 r00 x00)))
 (let ((?x852 (* (- 36) ?x839)))
 (let ((?x768 (* 6 ?x767)))
 (let ((?x658 (* (- 2) ?x630)))
 (let ((?x878 (* (- 15) ?x553)))
 (let ((?x507 (* s s)))
 (let ((?x531 (* 3 ?x507)))
 (let ((?x513 (* (- 54) ?x484)))
 (let ((?x526 (* 24 ?x388)))
 (let ((?x1041 (+ ?x143 ?x949 (* (- 24) ?x305) (* 24 ?x361) ?x526 ?x513 ?x531 (* 54 (* r x)) (* 36 (* r x r00)) ?x826 ?x878 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x962 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x658 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x768 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x852 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1046 (= ?x1041 0)))
 (let ((?x610 (* 6 ?x609)))
 (let ((?x566 (* (- 4) ?x553)))
 (let ((?x508 (* 2 ?x507)))
 (let ((?x498 (* (- 18) ?x484)))
 (let ((?x503 (* 9 ?x388)))
 (let ((?x340 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x707 (+ ?x47 ?x340 (* (- 9) ?x305) (* 9 ?x361) ?x503 ?x498 ?x508 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x527) ?x566 (* 18 (* x r00)) ?x610 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x714 (= ?x707 0)))
 (let ((?x432 (* 12 ?x431)))
 (let ((?x466 (* (- 6) ?x388)))
 (let ((?x463 (* (- 6) x00)))
 (let ((?x462 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x467 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x462 ?x463 (* 2 ?x305) (* (- 12) ?x311) (* 4 ?x361) ?x466 ?x432)))
 (let (($x468 (= ?x467 0)))
 (let (($x294 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x261)) 0)))
 (and $x294 $x468 $x714 $x1046 $x1340 (not (= ?x577 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x738 (exists ((r Int) (s Int) (x Int) )(! (let ((?x431 (* r00 r00 r00)))
 (let ((?x445 (* (- 12) ?x431)))
 (let ((?x59 (* 6 x00)))
 (let ((?x410 (* (- 6) x)))
 (let ((?x652 (* r00 s00)))
 (let ((?x661 (* 6 ?x652)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x340 (* (- 3) s00)))
 (let ((?x1020 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x340 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x661 ?x410 ?x59 ?x445)))
 (let ((?x213 (* 6 r)))
 (let ((?x959 (+ 3 s ?x213)))
 (let ((?x240 (* (- 1) s)))
 (let ((?x1266 (+ x ?x240)))
 (let ((?x1345 (+ 1 r)))
 (let ((?x1089 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1266 ?x1266 ?x959 ?x959 ?x959 ?x959 ?x959 ?x1020)))
 (let ((?x1308 (* x00 x00)))
 (let ((?x1199 (* 108 ?x1308)))
 (let ((?x137 (* 9 s00)))
 (let ((?x553 (* s00 s00)))
 (let ((?x869 (* 51 ?x553)))
 (let ((?x1146 (* s00 s00 s00)))
 (let ((?x712 (* 16 ?x1146)))
 (let ((?x767 (* s00 x00)))
 (let ((?x923 (* (- 108) ?x767)))
 (let ((?x844 (* r00 r00 r00 x00)))
 (let ((?x786 (* (- 432) ?x844)))
 (let ((?x484 (* r00 x00)))
 (let ((?x935 (* 108 ?x484)))
 (let ((?x1218 (+ (* 216 (* r00 s00 x00)) ?x935 (* (- 54) ?x652) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x786 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x923 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x712 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x869 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1199)))
 (let ((?x949 (* (- 9) s00)))
 (let ((?x878 (* (- 15) ?x553)))
 (let ((?x839 (* r00 r00 x00)))
 (let ((?x852 (* (- 36) ?x839)))
 (let ((?x768 (* 6 ?x767)))
 (let ((?x507 (* s s)))
 (let ((?x531 (* 3 ?x507)))
 (let ((?x513 (* (- 54) ?x484)))
 (let ((?x895 (+ (* (- 24) (* s r)) ?x513 (* 36 (* r00 x r)) (* 24 ?x652) ?x531 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x768 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x852 ?x878 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x949 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x566 (* (- 4) ?x553)))
 (let ((?x508 (* 2 ?x507)))
 (let ((?x498 (* (- 18) ?x484)))
 (let ((?x1134 (+ (* (- 9) (* s r)) ?x498 (* 9 ?x652) ?x508 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x566 (* 18 (* r00 x)) ?x340 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x1001 (* (- 3) r)))
 (let ((?x683 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x1001 ?x340 ?x47 ?x48 (* (- 4) (* s00 r)) ?x661 ?x410 ?x59 ?x445)))
 (let (($x1189 (= (+ s00 ?x240 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1189 (= ?x683 0) (= ?x1134 0) (= ?x895 0) (= ?x1218 0) (not (= ?x1089 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1548 (lambda ((r Int) (s Int) (x Int) )(let ((?x431 (* r00 r00 r00)))
 (let ((?x445 (* (- 12) ?x431)))
 (let ((?x388 (* s00 r00)))
 (let ((?x389 (* 6 ?x388)))
 (let ((?x361 (* r s00)))
 (let ((?x375 (* (- 4) ?x361)))
 (let ((?x311 (* r r00 r00)))
 (let ((?x312 (* 12 ?x311)))
 (let ((?x305 (* r s)))
 (let ((?x306 (* (- 2) ?x305)))
 (let ((?x261 (* r00 r00)))
 (let ((?x1390 (* 12 ?x261)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1528 (* (- 7) s00)))
 (let ((?x410 (* (- 6) x)))
 (let ((?x1590 (* 7 s)))
 (let ((?x1001 (* (- 3) r)))
 (let ((?x802 (+ ?x1001 ?x1590 ?x410 ?x1528 ?x48 ?x59 (* (- 12) (* r r)) ?x1390 ?x306 ?x312 ?x375 ?x389 ?x445)))
 (let ((?x213 (* 6 r)))
 (let ((?x1348 (+ 3 ?x213 s)))
 (let ((?x240 (* (- 1) s)))
 (let ((?x1547 (+ ?x240 x)))
 (let ((?x1345 (+ 1 r)))
 (let ((?x577 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1547 ?x1547 ?x1348 ?x1348 ?x1348 ?x1348 ?x1348 ?x802)))
 (let ((?x1308 (* x00 x00)))
 (let ((?x1338 (* (- 108) ?x1308)))
 (let ((?x1146 (* s00 s00 s00)))
 (let ((?x1337 (* (- 16) ?x1146)))
 (let ((?x1018 (* s00 r00 r00 r00)))
 (let ((?x1333 (* (- 216) ?x1018)))
 (let ((?x844 (* r00 r00 r00 x00)))
 (let ((?x845 (* 432 ?x844)))
 (let ((?x767 (* s00 x00)))
 (let ((?x1091 (* 108 ?x767)))
 (let ((?x693 (* s00 s00 r00 r00)))
 (let ((?x694 (* 36 ?x693)))
 (let ((?x630 (* s00 s00 r00)))
 (let ((?x974 (* 108 ?x630)))
 (let ((?x609 (* s00 r00 r00)))
 (let ((?x962 (* 36 ?x609)))
 (let ((?x553 (* s00 s00)))
 (let ((?x1327 (* (- 51) ?x553)))
 (let ((?x527 (* s r00 r00)))
 (let ((?x826 (* (- 36) ?x527)))
 (let ((?x484 (* r00 x00)))
 (let ((?x1324 (* (- 108) ?x484)))
 (let ((?x475 (* s00 r00 x00)))
 (let ((?x1323 (* (- 216) ?x475)))
 (let ((?x482 (* 54 ?x388)))
 (let ((?x949 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1339 (+ ?x143 ?x949 ?x482 ?x1323 ?x1324 (* (- 15) (* s s)) ?x826 ?x1327 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x962 ?x974 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x694 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1091 (* 108 (* s x)) (* (- 108) (* x x)) ?x845 (* 12 (* s s s00)) ?x1333 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1337 (* 216 (* x x00)) ?x1338)))
 (let (($x1340 (= ?x1339 0)))
 (let ((?x839 (* r00 r00 x00)))
 (let ((?x852 (* (- 36) ?x839)))
 (let ((?x768 (* 6 ?x767)))
 (let ((?x658 (* (- 2) ?x630)))
 (let ((?x878 (* (- 15) ?x553)))
 (let ((?x507 (* s s)))
 (let ((?x531 (* 3 ?x507)))
 (let ((?x513 (* (- 54) ?x484)))
 (let ((?x526 (* 24 ?x388)))
 (let ((?x1041 (+ ?x143 ?x949 (* (- 24) ?x305) (* 24 ?x361) ?x526 ?x513 ?x531 (* 54 (* r x)) (* 36 (* r x r00)) ?x826 ?x878 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x962 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x658 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x768 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x852 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1046 (= ?x1041 0)))
 (let ((?x610 (* 6 ?x609)))
 (let ((?x566 (* (- 4) ?x553)))
 (let ((?x508 (* 2 ?x507)))
 (let ((?x498 (* (- 18) ?x484)))
 (let ((?x503 (* 9 ?x388)))
 (let ((?x340 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x707 (+ ?x47 ?x340 (* (- 9) ?x305) (* 9 ?x361) ?x503 ?x498 ?x508 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x527) ?x566 (* 18 (* x r00)) ?x610 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x714 (= ?x707 0)))
 (let ((?x432 (* 12 ?x431)))
 (let ((?x466 (* (- 6) ?x388)))
 (let ((?x463 (* (- 6) x00)))
 (let ((?x462 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x467 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x462 ?x463 (* 2 ?x305) (* (- 12) ?x311) (* 4 ?x361) ?x466 ?x432)))
 (let (($x468 (= ?x467 0)))
 (let (($x294 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x261)) 0)))
 (let (($x1268 (and $x294 $x468 $x714 $x1046 $x1340 (not (= ?x577 0)))))
 (let ((?x652 (* r00 s00)))
 (let ((?x661 (* 6 ?x652)))
 (let ((?x1020 (+ 6 (* (- 2) (* ?x1345 (+ 3 s ?x213))) (* 12 (* r00 r00 ?x1345)) (* 15 r) ?x340 ?x143 ?x48 (* (- 4) (* s00 ?x1345)) ?x661 ?x410 ?x59 ?x445)))
 (let ((?x959 (+ 3 s ?x213)))
 (let ((?x1266 (+ x ?x240)))
 (let ((?x1089 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1266 ?x1266 ?x959 ?x959 ?x959 ?x959 ?x959 ?x1020)))
 (let ((?x1199 (* 108 ?x1308)))
 (let ((?x137 (* 9 s00)))
 (let ((?x869 (* 51 ?x553)))
 (let ((?x712 (* 16 ?x1146)))
 (let ((?x923 (* (- 108) ?x767)))
 (let ((?x786 (* (- 432) ?x844)))
 (let ((?x935 (* 108 ?x484)))
 (let ((?x1218 (+ (* 216 (* r00 s00 x00)) ?x935 (* (- 54) ?x652) (* 15 ?x507) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x786 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x923 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x712 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x869 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1199)))
 (let ((?x895 (+ (* (- 24) (* s r)) ?x513 (* 36 (* r00 x r)) (* 24 ?x652) ?x531 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x768 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x852 ?x878 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x949 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1134 (+ (* (- 9) (* s r)) ?x498 (* 9 ?x652) ?x508 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x566 (* 18 (* r00 x)) ?x340 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x683 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x1001 ?x340 ?x47 ?x48 (* (- 4) (* s00 r)) ?x661 ?x410 ?x59 ?x445)))
 (let (($x756 (and (= (+ s00 ?x240 (* 3 (* r r)) (* (- 3) ?x261)) 0) (= ?x683 0) (= ?x1134 0) (= ?x895 0) (= ?x1218 0) (not (= ?x1089 0)))))
 (rewrite (= $x756 $x1268))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x237 (exists ((r Int) (s Int) (x Int) )(! (let ((?x226 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x231 (- 1)))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x59 (* 6 x00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x219 (- (+ (* (- 2) ?x212 ?x214) (* 12 ?x212 r00 r00)) (* 3 ?x212))))
 (let ((?x225 (+ (- (+ (- ?x219 ?x44) (* 3 ?x214) ?x48) (* 4 ?x212 s00)) ?x54)))
 (let ((?x232 (* (- (+ (- ?x225 (* 6 ?x226)) ?x59) ?x61) ?x212 ?x212 ?x212 ?x214 ?x231 ?x214 ?x231 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x226 ?x226)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x232 0)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x455 (lambda ((r Int) (s Int) (x Int) )(let ((?x431 (* r00 r00 r00)))
 (let ((?x445 (* (- 12) ?x431)))
 (let ((?x59 (* 6 x00)))
 (let ((?x410 (* (- 6) x)))
 (let ((?x652 (* r00 s00)))
 (let ((?x661 (* 6 ?x652)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x340 (* (- 3) s00)))
 (let ((?x1020 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x340 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x661 ?x410 ?x59 ?x445)))
 (let ((?x213 (* 6 r)))
 (let ((?x959 (+ 3 s ?x213)))
 (let ((?x240 (* (- 1) s)))
 (let ((?x1266 (+ x ?x240)))
 (let ((?x1345 (+ 1 r)))
 (let ((?x1089 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1266 ?x1266 ?x959 ?x959 ?x959 ?x959 ?x959 ?x1020)))
 (let ((?x1308 (* x00 x00)))
 (let ((?x1199 (* 108 ?x1308)))
 (let ((?x137 (* 9 s00)))
 (let ((?x553 (* s00 s00)))
 (let ((?x869 (* 51 ?x553)))
 (let ((?x1146 (* s00 s00 s00)))
 (let ((?x712 (* 16 ?x1146)))
 (let ((?x767 (* s00 x00)))
 (let ((?x923 (* (- 108) ?x767)))
 (let ((?x844 (* r00 r00 r00 x00)))
 (let ((?x786 (* (- 432) ?x844)))
 (let ((?x484 (* r00 x00)))
 (let ((?x935 (* 108 ?x484)))
 (let ((?x1218 (+ (* 216 (* r00 s00 x00)) ?x935 (* (- 54) ?x652) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x786 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x923 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x712 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x869 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1199)))
 (let ((?x949 (* (- 9) s00)))
 (let ((?x878 (* (- 15) ?x553)))
 (let ((?x839 (* r00 r00 x00)))
 (let ((?x852 (* (- 36) ?x839)))
 (let ((?x768 (* 6 ?x767)))
 (let ((?x507 (* s s)))
 (let ((?x531 (* 3 ?x507)))
 (let ((?x513 (* (- 54) ?x484)))
 (let ((?x895 (+ (* (- 24) (* s r)) ?x513 (* 36 (* r00 x r)) (* 24 ?x652) ?x531 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x768 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x852 ?x878 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x949 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x566 (* (- 4) ?x553)))
 (let ((?x508 (* 2 ?x507)))
 (let ((?x498 (* (- 18) ?x484)))
 (let ((?x1134 (+ (* (- 9) (* s r)) ?x498 (* 9 ?x652) ?x508 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x566 (* 18 (* r00 x)) ?x340 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x1001 (* (- 3) r)))
 (let ((?x683 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x1001 ?x340 ?x47 ?x48 (* (- 4) (* s00 r)) ?x661 ?x410 ?x59 ?x445)))
 (let (($x1189 (= (+ s00 ?x240 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x756 (and $x1189 (= ?x683 0) (= ?x1134 0) (= ?x895 0) (= ?x1218 0) (not (= ?x1089 0)))))
 (let ((?x226 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x231 (- 1)))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x219 (- (+ (* (- 2) ?x212 ?x214) (* 12 ?x212 r00 r00)) (* 3 ?x212))))
 (let ((?x225 (+ (- (+ (- ?x219 ?x44) (* 3 ?x214) ?x48) (* 4 ?x212 s00)) ?x54)))
 (let ((?x232 (* (- (+ (- ?x225 (* 6 ?x226)) ?x59) ?x61) ?x212 ?x212 ?x212 ?x214 ?x231 ?x214 ?x231 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x226 ?x226)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x236 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x232 0))))))
 (rewrite (= $x236 $x756))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x238 (asserted $x237)))
 (let ((@x898 (mp (mp @x238 (quant-intro (proof-bind ?x455) (= $x237 $x738)) $x738) (rewrite (= $x738 $x738)) $x738)))
 (let ((@x1520 (mp~ (mp @x898 (quant-intro (proof-bind ?x1548) (= $x738 $x1555)) $x1555) (sk (~ $x1555 $x1303)) $x1303)))
 (let ((@x829 (mp @x1520 (rewrite (= $x1303 $x277)) $x277)))
 (let ((@x653 (and-elim @x829 $x1577)))
 (let ((@x837 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1577) $x1305)) @x653 $x1305)))
 (let (($x1561 (>= ?x1523 0)))
 (let ((@x938 (and-elim @x829 $x1526)))
 (let ((@x1271 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1526) $x1561)) @x938 $x1561)))
 (let (($x620 (<= ?x1069 0)))
 (let ((@x745 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1577) $x620)) @x653 $x620)))
 (let (($x648 (<= ?x1523 0)))
 (let ((@x604 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1526) $x648)) @x938 $x648)))
 (let (($x1459 (not (<= ?x564 0))))
 (let (($x987 (>= ?x564 0)))
 (let ((@x486 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x987)) @x604 @x745 @x1271 @x837 false) $x987)))
 (let ((@x679 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x711 $x1459 (not $x987))) (and-elim @x829 $x732) (or $x1459 (not $x987)))))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution @x679 @x486 $x1459) @x604 @x745 @x1271 @x837 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        27
 :arith-assert-upper        10
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-fixed-eqs           2
 :arith-max-min             230
 :arith-nonlinear-bounds    16
 :arith-num-rows            9
 :arith-pivots              5
 :arith-pseudo-nonlinear    2
 :arith-row-summations      9
 :arith-tableau-max-columns 97
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              2
 :max-memory                19.87
 :memory                    19.26
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                621880
 :num-checks                1
 :propagations              12
 :rlimit-count              7428
 :time                      0.01
 :total-time                0.02)
