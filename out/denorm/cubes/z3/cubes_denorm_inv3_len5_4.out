unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x657 (* (- 1) (* k!2 k!2 m!1))))
 (let ((?x705 (* (- 6) (* c!3 c!3))))
 (let ((?x722 (* (- 3) (* k!2 k!2 k!2 m!1))))
 (let ((?x656 (* (- 1) (* k!2 m!1 m!1 m!1))))
 (let ((?x525 (* (- 3) (* k!2 k!2 m!1 m!1))))
 (let ((?x284 (+ k!2 c!3)))
 (let ((?x443 (+ k!2 m!1)))
 (let ((?x100 (+ 6 m!1)))
 (let ((?x557 (+ 1 n!0)))
 (let ((?x430 (* k!2 k!2)))
 (let ((?x325 (* (- 6) ?x430)))
 (let ((?x695 (* (- 1) (* k!2 k!2 k!2 k!2))))
 (let ((?x350 (+ (* (- 3) (* k!2 m!1 m!1 c!3)) (* (- 3) (* k!2 k!2 m!1 c!3)) (* (- 1) (* n!0 n!0 k!2 k!2 m!1)) (* (- 12) (* n!0 k!2 k!2)) (* (- 1) (* n!0 n!0 m!1 c!3 c!3)) (* (- 12) (* k!2 c!3)) (* (- 1) (* m!1 m!1 m!1 c!3)) (* (- 12) (* n!0 c!3 c!3)) (* ?x100 ?x443 ?x443 ?x443 ?x284 ?x284 ?x284) (* (- 24) (* n!0 k!2 c!3)) (* (- 2) (* n!0 m!1 c!3 c!3)) (* (- 1) (* m!1 c!3 c!3)) (* (- 2) (* k!2 m!1 c!3)) (* (- 2) (* n!0 n!0 k!2 m!1 c!3)) (* (- 6) (* n!0 n!0 c!3 c!3)) ?x695 ?x325 (* (- 2) (* n!0 k!2 k!2 m!1)) (* (- 1) (* ?x557 ?x557 ?x557 ?x100 ?x443 ?x443 ?x284 ?x284 ?x284)) (* ?x557 ?x100 ?x443 ?x284 ?x284 ?x284) ?x525 ?x656 ?x722 ?x705 (* (- 1) (* k!2 k!2 k!2 c!3)) (* (- 4) (* n!0 k!2 m!1 c!3)) ?x657 (* (- 12) (* n!0 n!0 k!2 c!3)) (* (- 6) (* n!0 n!0 k!2 k!2)))))
 (let (($x878 (<= ?x350 0)))
 (let ((?x597 (* (- 3) c!3)))
 (let ((?x543 (* (- 3) k!2)))
 (let ((?x450 (* n!0 k!2)))
 (let ((?x180 (* 2 n!0)))
 (let ((?x689 (+ 3 ?x180 ?x450 (* n!0 m!1) ?x543 ?x597)))
 (let (($x565 (<= ?x689 0)))
 (let ((?x653 (* (- 1) k!2)))
 (let ((?x388 (+ (* 3 n!0) (* 3 (* n!0 n!0)) ?x653)))
 (let (($x667 (<= ?x388 (- 1))))
 (let (($x383 (= ?x388 (- 1))))
 (let ((?x324 (* ?x350 ?x689)))
 (let (($x352 (= ?x324 0)))
 (let (($x554 (not $x352)))
 (let ((?x661 (+ ?x180 ?x450 ?x653 ?x597)))
 (let (($x592 (= ?x661 (- 1))))
 (let ((?x452 (+ (* 9 n!0) ?x430 (* (- 5) k!2) (* (- 18) c!3) (* (- 9) (* n!0 c!3)))))
 (let ((?x110 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x111 (= ?x110 (- 6))))
 (let (($x688 (and $x111 (= ?x452 (- 4)) $x592 $x383 $x554)))
 (let ((?x326 (+ c!3 k!2)))
 (let ((?x423 (+ ?x325 (* (- 1) (* ?x557 ?x557 ?x557 ?x100 ?x443 ?x443 ?x326 ?x326 ?x326)) (* ?x557 ?x100 ?x443 ?x326 ?x326 ?x326) (* (- 1) (* c!3 k!2 k!2 k!2)) ?x656 (* (- 1) (* c!3 m!1 m!1 m!1)) ?x525 (* (- 3) (* c!3 k!2 m!1 m!1)) ?x722 (* (- 3) (* c!3 k!2 k!2 m!1)) ?x695 ?x705 (* (- 1) (* k!2 k!2 m!1 n!0 n!0)) (* (- 2) (* c!3 k!2 m!1 n!0 n!0)) (* (- 1) (* c!3 c!3 m!1 n!0 n!0)) (* (- 12) (* c!3 k!2)) (* (- 1) (* c!3 c!3 m!1)) (* (- 2) (* c!3 k!2 m!1)) ?x657 (* (- 12) (* c!3 c!3 n!0)) (* ?x100 ?x443 ?x443 ?x443 ?x326 ?x326 ?x326) (* (- 24) (* c!3 k!2 n!0)) (* (- 12) (* k!2 k!2 n!0)) (* (- 2) (* c!3 c!3 m!1 n!0)) (* (- 4) (* c!3 k!2 m!1 n!0)) (* (- 2) (* k!2 k!2 m!1 n!0)) (* (- 6) (* c!3 c!3 n!0 n!0)) (* (- 12) (* c!3 k!2 n!0 n!0)) (* (- 6) (* k!2 k!2 n!0 n!0)))))
 (let (($x547 (= (* ?x423 (+ 3 ?x597 ?x543 ?x180 (* k!2 n!0) (* m!1 n!0))) 0)))
 (let (($x188 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x651 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x430) (* 9 (* c!3 n!0)))))
 (let (($x143 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x651 4) $x188 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not $x547))))
 (let (($x506 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x411 (+ 3 ?x223 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x785 (* (- 6) (* k k n n))))
 (let ((?x782 (* (- 12) (* c k n n))))
 (let ((?x779 (* (- 6) (* c c n n))))
 (let ((?x776 (* (- 2) (* k k m n))))
 (let ((?x773 (* (- 4) (* c k m n))))
 (let ((?x769 (* (- 2) (* c c m n))))
 (let ((?x766 (* (- 12) (* k k n))))
 (let ((?x763 (* (- 24) (* c k n))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x416 (+ 6 m)))
 (let ((?x603 (* ?x416 ?x71 ?x71 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x759 (* (- 12) (* c c n))))
 (let ((?x730 (* (- 1) (* k k m))))
 (let ((?x756 (* (- 2) (* c k m))))
 (let ((?x728 (* (- 1) (* c c m))))
 (let ((?x753 (* (- 12) (* c k))))
 (let ((?x726 (* (- 1) (* c c m n n))))
 (let ((?x749 (* (- 2) (* c k m n n))))
 (let ((?x724 (* (- 1) (* k k m n n))))
 (let ((?x746 (* (- 6) (* c c))))
 (let ((?x533 (* (- 1) (* k k k k))))
 (let ((?x520 (* (- 3) (* c k k m))))
 (let ((?x523 (* (- 3) (* k k k m))))
 (let ((?x526 (* (- 3) (* c k m m))))
 (let ((?x529 (* (- 3) (* k k m m))))
 (let ((?x538 (* (- 1) (* c m m m))))
 (let ((?x539 (* (- 1) (* k m m m))))
 (let ((?x540 (* (- 1) (* c k k k))))
 (let ((?x343 (+ 1 n)))
 (let ((?x382 (* ?x343 ?x416 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x248 (* (- 1) (* ?x343 ?x343 ?x343 ?x416 ?x71 ?x71 ?x68 ?x68 ?x68))))
 (let ((?x49 (* k k)))
 (let ((?x743 (* (- 6) ?x49)))
 (let ((?x252 (+ ?x743 ?x248 ?x382 ?x540 ?x539 ?x538 ?x529 ?x526 ?x523 ?x520 ?x533 ?x746 ?x724 ?x749 ?x726 ?x753 ?x728 ?x756 ?x730 ?x759 ?x603 ?x763 ?x766 ?x769 ?x773 ?x776 ?x779 ?x782 ?x785)))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 (* c n))) 4)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 $x210 $x262 $x300 (not (= (* ?x252 ?x411) 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x784 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x397 (+ 3 ?x223 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x416 (+ 6 m)))
 (let ((?x343 (+ 1 n)))
 (let ((?x248 (* (- 1) (* ?x343 ?x343 ?x343 ?x416 (+ k m) (+ k m) ?x68 ?x68 ?x68))))
 (let ((?x71 (+ k m)))
 (let ((?x603 (* ?x416 ?x71 ?x71 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x382 (* ?x343 ?x416 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x283 (+ ?x382 (* (- 1) (* ?x71 ?x71 ?x71 ?x68)) ?x603 ?x248 (* (- 1) (* ?x343 ?x343 ?x416 ?x68 ?x68)))))
 (let (($x664 (not (= (* ?x283 ?x397) 0))))
 (let (($x501 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x194 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x194 $x501 $x664))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x648 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x411 (+ 3 ?x223 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x785 (* (- 6) (* k k n n))))
 (let ((?x782 (* (- 12) (* c k n n))))
 (let ((?x779 (* (- 6) (* c c n n))))
 (let ((?x776 (* (- 2) (* k k m n))))
 (let ((?x773 (* (- 4) (* c k m n))))
 (let ((?x769 (* (- 2) (* c c m n))))
 (let ((?x766 (* (- 12) (* k k n))))
 (let ((?x763 (* (- 24) (* c k n))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x416 (+ 6 m)))
 (let ((?x603 (* ?x416 ?x71 ?x71 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x759 (* (- 12) (* c c n))))
 (let ((?x730 (* (- 1) (* k k m))))
 (let ((?x756 (* (- 2) (* c k m))))
 (let ((?x728 (* (- 1) (* c c m))))
 (let ((?x753 (* (- 12) (* c k))))
 (let ((?x726 (* (- 1) (* c c m n n))))
 (let ((?x749 (* (- 2) (* c k m n n))))
 (let ((?x724 (* (- 1) (* k k m n n))))
 (let ((?x746 (* (- 6) (* c c))))
 (let ((?x533 (* (- 1) (* k k k k))))
 (let ((?x520 (* (- 3) (* c k k m))))
 (let ((?x523 (* (- 3) (* k k k m))))
 (let ((?x526 (* (- 3) (* c k m m))))
 (let ((?x529 (* (- 3) (* k k m m))))
 (let ((?x538 (* (- 1) (* c m m m))))
 (let ((?x539 (* (- 1) (* k m m m))))
 (let ((?x540 (* (- 1) (* c k k k))))
 (let ((?x343 (+ 1 n)))
 (let ((?x382 (* ?x343 ?x416 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x248 (* (- 1) (* ?x343 ?x343 ?x343 ?x416 ?x71 ?x71 ?x68 ?x68 ?x68))))
 (let ((?x49 (* k k)))
 (let ((?x743 (* (- 6) ?x49)))
 (let ((?x252 (+ ?x743 ?x248 ?x382 ?x540 ?x539 ?x538 ?x529 ?x526 ?x523 ?x520 ?x533 ?x746 ?x724 ?x749 ?x726 ?x753 ?x728 ?x756 ?x730 ?x759 ?x603 ?x763 ?x766 ?x769 ?x773 ?x776 ?x779 ?x782 ?x785)))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 (* c n))) 4)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x267 (and $x126 $x210 $x262 $x300 (not (= (* ?x252 ?x411) 0)))))
 (let ((?x283 (+ ?x382 (* (- 1) (* ?x71 ?x71 ?x71 ?x68)) ?x603 ?x248 (* (- 1) (* ?x343 ?x343 ?x416 ?x68 ?x68)))))
 (let ((?x294 (* ?x283 (+ 3 ?x223 (* (- 4) k) (* ?x343 ?x71) (* (- 1) m) ?x59))))
 (let (($x664 (not (= ?x294 0))))
 (let (($x501 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x194 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x596 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x194 $x501 $x664)))
 (rewrite (= $x596 $x267)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x499 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x397 (+ 3 ?x223 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x416 (+ 6 m)))
 (let ((?x343 (+ 1 n)))
 (let ((?x248 (* (- 1) (* ?x343 ?x343 ?x343 ?x416 (+ k m) (+ k m) ?x68 ?x68 ?x68))))
 (let ((?x71 (+ k m)))
 (let ((?x603 (* ?x416 ?x71 ?x71 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x382 (* ?x343 ?x416 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x283 (+ ?x382 (* (- 1) (* ?x71 ?x71 ?x71 ?x68)) ?x603 ?x248 (* (- 1) (* ?x343 ?x343 ?x416 ?x68 ?x68)))))
 (let (($x664 (not (= (* ?x283 ?x397) 0))))
 (let (($x501 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x605 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 (= ?x605 (- 4)) (= (+ ?x223 (* n k) (* (- 1) k) ?x59) (- 1)) $x501 $x664)))))))))))))))))) :qid k!34))
 ))
 (let ((?x780 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x397 (+ 3 ?x223 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x416 (+ 6 m)))
 (let ((?x343 (+ 1 n)))
 (let ((?x248 (* (- 1) (* ?x343 ?x343 ?x343 ?x416 (+ k m) (+ k m) ?x68 ?x68 ?x68))))
 (let ((?x71 (+ k m)))
 (let ((?x603 (* ?x416 ?x71 ?x71 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x382 (* ?x343 ?x416 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x283 (+ ?x382 (* (- 1) (* ?x71 ?x71 ?x71 ?x68)) ?x603 ?x248 (* (- 1) (* ?x343 ?x343 ?x416 ?x68 ?x68)))))
 (let (($x664 (not (= (* ?x283 ?x397) 0))))
 (let (($x501 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x194 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x596 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x194 $x501 $x664)))
 (let ((?x48 (* 9 n)))
 (let ((?x605 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x496 (and $x126 (= ?x605 (- 4)) (= (+ ?x223 (* n k) (* (- 1) k) ?x59) (- 1)) $x501 $x664)))
 (rewrite (= $x496 $x596)))))))))))))))))))))))))))
 ))
 (let (($x93 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x78 (+ m 6)))
 (let ((?x68 (+ c k)))
 (let ((?x81 (- (* ?x68 ?x68 ?x68 (+ k m) ?x78 ?x72) (* ?x68 (+ k m) (+ k m) (+ k m)))))
 (let ((?x83 (+ ?x81 (* ?x68 ?x68 ?x68 (+ k m) (+ k m) (+ k m) ?x78))))
 (let ((?x86 (- ?x83 (* ?x68 ?x68 ?x68 (+ k m) (+ k m) ?x78 ?x72 ?x72 ?x72))))
 (let ((?x71 (+ k m)))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 ?x72)) ?x71) (* 2 ?x72))))
 (let (($x91 (or (not (= (* ?x77 (- ?x86 (* ?x68 ?x68 ?x78 ?x72 ?x72))) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x91))))))))))))))))) :qid k!34))
 ))
 (let ((?x666 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x397 (+ 3 ?x223 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x416 (+ 6 m)))
 (let ((?x343 (+ 1 n)))
 (let ((?x248 (* (- 1) (* ?x343 ?x343 ?x343 ?x416 (+ k m) (+ k m) ?x68 ?x68 ?x68))))
 (let ((?x71 (+ k m)))
 (let ((?x603 (* ?x416 ?x71 ?x71 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x382 (* ?x343 ?x416 ?x71 ?x68 ?x68 ?x68)))
 (let ((?x283 (+ ?x382 (* (- 1) (* ?x71 ?x71 ?x71 ?x68)) ?x603 ?x248 (* (- 1) (* ?x343 ?x343 ?x416 ?x68 ?x68)))))
 (let (($x664 (not (= (* ?x283 ?x397) 0))))
 (let (($x501 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x605 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x496 (and $x126 (= ?x605 (- 4)) (= (+ ?x223 (* n k) (* (- 1) k) ?x59) (- 1)) $x501 $x664)))
 (let ((?x72 (+ n 1)))
 (let ((?x78 (+ m 6)))
 (let ((?x83 (+ (- (* ?x68 ?x68 ?x68 ?x71 ?x78 ?x72) (* ?x68 ?x71 ?x71 ?x71)) (* ?x68 ?x68 ?x68 ?x71 ?x71 ?x71 ?x78))))
 (let ((?x87 (- (- ?x83 (* ?x68 ?x68 ?x68 ?x71 ?x71 ?x78 ?x72 ?x72 ?x72)) (* ?x68 ?x68 ?x78 ?x72 ?x72))))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 ?x72)) ?x71) (* 2 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x92 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* ?x77 ?x87) 0))))))
 (rewrite (= $x92 $x496)))))))))))))))))))))))))))))))
 ))
 (let ((@x94 (asserted $x93)))
 (let ((@x716 (mp (mp @x94 (quant-intro (proof-bind ?x666) (= $x93 $x499)) $x499) (rewrite (= $x499 $x499)) $x499)))
 (let ((@x645 (mp (mp @x716 (quant-intro (proof-bind ?x780) (= $x499 $x784)) $x784) (quant-intro (proof-bind ?x648) (= $x784 $x506)) $x506)))
 (let ((@x270 (mp (mp~ @x645 (sk (~ $x506 $x143)) $x143) (rewrite (= $x143 $x688)) $x688)))
 (let ((@x406 (and-elim @x270 $x383)))
 (let ((@x560 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x383) $x667)) @x406 $x667)))
 (let (($x700 (>= ?x388 (- 1))))
 (let ((@x137 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x383) $x700)) @x406 $x700)))
 (let (($x429 (<= ?x110 (- 6))))
 (let ((@x690 (and-elim @x270 $x111)))
 (let ((@x259 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x111) $x429)) @x690 $x429)))
 (let (($x133 (>= ?x110 (- 6))))
 (let ((@x370 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x111) $x133)) @x690 $x133)))
 (let (($x676 (<= ?x661 (- 1))))
 (let ((@x375 (and-elim @x270 $x592)))
 (let ((@x731 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x592) $x676)) @x375 $x676)))
 (let (($x733 (>= ?x661 (- 1))))
 (let ((@x229 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x592) $x733)) @x375 $x733)))
 (let ((@x1009 ((_ th-lemma arith) (hypothesis (not $x565)) @x229 @x731 @x137 @x560 @x370 @x259 @x137 @x560 @x370 @x259 @x137 @x560 false)))
 (let ((@x1036 (lemma @x1009 $x565)))
 (let (($x342 (not $x878)))
 (let ((@x359 (hypothesis $x342)))
 (let (($x2668 (not (<= ?x324 0))))
 (let (($x434 (>= ?x324 0)))
 (let (($x880 (>= ?x350 0)))
 (let (($x414 (not $x880)))
 (let (($x551 (not $x434)))
 (let ((@x335 (hypothesis $x551)))
 (let ((@x910 (lemma ((_ th-lemma arith) @x335 @x359 @x229 @x731 @x370 @x259 @x137 @x560 false) (or $x878 $x434))))
 (let ((@x866 (lemma ((_ th-lemma arith farkas 1 1 1) @x335 (hypothesis $x880) (hypothesis $x878) false) (or $x414 $x434 $x342))))
 (let ((@x1796 ((_ th-lemma arith farkas 1 1 1) @x335 (unit-resolution @x866 (unit-resolution @x910 @x335 $x878) @x335 $x414) @x1036 false)))
 (let ((@x2672 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x352 $x2668 $x551)) (and-elim @x270 $x554) (or $x2668 $x551))))
 (let ((@x2673 (unit-resolution @x2672 (lemma @x1796 $x434) $x2668)))
 (let ((@x2347 ((_ th-lemma arith) @x2673 (hypothesis $x414) @x229 @x731 @x370 @x259 @x370 @x259 @x137 @x560 false)))
 ((_ th-lemma arith farkas 1 1 1) @x2673 (lemma @x2347 $x880) (lemma ((_ th-lemma arith farkas 1 1 1) @x2673 @x359 @x1036 false) $x878) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 297
 :arith-assert-diseq        51
 :arith-assert-lower        2822
 :arith-assert-upper        2021
 :arith-bound-prop          12
 :arith-branch-var          84
 :arith-conflicts           105
 :arith-eq-adapter          23
 :arith-fixed-eqs           388
 :arith-gcd-tests           1154
 :arith-gomory-cuts         49
 :arith-grobner             134
 :arith-ineq-splits         84
 :arith-max-min             19375
 :arith-nonlinear-bounds    1504
 :arith-nonlinear-horner    1674
 :arith-num-rows            27
 :arith-offset-eqs          34
 :arith-patches             182
 :arith-patches_succ        15
 :arith-pivots              2972
 :arith-pseudo-nonlinear    397
 :arith-row-summations      21682
 :arith-tableau-max-columns 86
 :arith-tableau-max-rows    27
 :conflicts                 112
 :decisions                 751
 :del-clause                202
 :final-checks              466
 :max-memory                4.77
 :memory                    3.46
 :minimized-lits            18
 :mk-bool-var               552
 :mk-clause                 425
 :num-allocs                2407056947
 :num-checks                1
 :propagations              1368
 :restarts                  1
 :rlimit-count              5228673
 :time                      4.24
 :total-time                4.25)
