unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x172 (* (- 1) (* k!2 n!0))))
 (let ((?x586 (* (- 2) n!0)))
 (let ((?x520 (* 3 c!3)))
 (let ((?x341 (+ k!2 ?x520 ?x586 ?x172)))
 (let (($x651 (<= ?x341 1)))
 (let (($x682 (= ?x341 1)))
 (let ((?x120 (* (- 3) (* c!3 c!3 m!1 m!1))))
 (let ((?x593 (* 8 (* c!3 m!1 m!1 n!0))))
 (let ((?x877 (* 6 (* k!2 k!2 k!2 n!0))))
 (let ((?x871 (* k!2 k!2 k!2 m!1 n!0)))
 (let ((?x867 (* k!2 m!1 m!1 m!1 n!0)))
 (let ((?x755 (* (- 15) (* k!2 k!2 m!1))))
 (let ((?x862 (* (- 18) (* k!2 k!2 k!2))))
 (let ((?x650 (* 3 (* k!2 m!1 m!1))))
 (let ((?x882 (* (- 18) (* c!3 c!3 m!1))))
 (let ((?x861 (* 18 (* c!3 m!1))))
 (let ((?x832 (* 18 (* k!2 m!1))))
 (let ((?x735 (* 12 (* k!2 m!1 n!0))))
 (let ((?x764 (* (- 3) (* k!2 k!2 k!2 m!1))))
 (let ((?x872 (* 2 (* k!2 k!2 m!1 m!1 n!0))))
 (let ((?x754 (* c!3 m!1 m!1 m!1 n!0)))
 (let ((?x868 (* 3 (* c!3 m!1 m!1))))
 (let ((?x733 (* 12 (* k!2 k!2 n!0))))
 (let ((?x498 (* 14 (* k!2 k!2 m!1 n!0))))
 (let ((?x494 (* 8 (* k!2 m!1 m!1 n!0))))
 (let ((?x550 (* (- 3) (* k!2 k!2 m!1 m!1))))
 (let ((?x560 (* 12 (* c!3 m!1 n!0))))
 (let ((?x331 (+ k!2 c!3)))
 (let ((?x843 (+ k!2 m!1)))
 (let ((?x884 (+ 6 m!1)))
 (let ((?x881 (+ 1 n!0)))
 (let ((?x117 (* k!2 k!2)))
 (let ((?x885 (* 18 ?x117)))
 (let ((?x177 (+ ?x885 (* 18 (* k!2 c!3)) (* (- 33) (* k!2 c!3 m!1)) (* 2 (* k!2 c!3 m!1 m!1 n!0)) (* 6 (* k!2 k!2 c!3 n!0)) (* 12 (* k!2 c!3 n!0)) (* (- 36) (* k!2 k!2 c!3)) (* (- 1) (* ?x881 ?x881 ?x881 ?x884 ?x331 ?x331)) (* (- 6) (* k!2 c!3 m!1 m!1)) (* (- 2) (* ?x881 ?x881 ?x881 ?x881 ?x884 ?x331 ?x331)) (* (- 18) (* k!2 c!3 c!3)) (* 3 (* ?x881 ?x881 ?x881 ?x884 ?x331 ?x331 ?x331)) (* ?x881 ?x881 ?x881 ?x884 ?x843 ?x331 ?x331) (* (- 1) (* ?x881 ?x881 ?x881 ?x881 ?x884 ?x843 ?x331 ?x331)) (* (- 6) (* k!2 k!2 c!3 m!1)) ?x560 ?x550 (* (- 3) (* k!2 c!3 c!3 m!1)) ?x494 ?x498 ?x733 ?x868 (* k!2 k!2 c!3 m!1 n!0) ?x754 ?x872 ?x764 (* 14 (* k!2 c!3 m!1 n!0)) ?x735 ?x832 ?x861 ?x882 ?x650 ?x862 ?x755 ?x867 ?x871 ?x877 ?x593 ?x120)))
 (let (($x713 (= ?x177 0)))
 (let (($x347 (not $x713)))
 (let ((?x608 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x607 (= ?x608 1)))
 (let ((?x727 (+ ?x117 (* (- 5) k!2) (* (- 18) c!3) (* (- 9) (* c!3 n!0)) (* 9 n!0))))
 (let ((?x842 (+ m!1 (* (- 6) n!0))))
 (let (($x276 (= ?x842 6)))
 (let (($x716 (and $x276 (= ?x727 (- 4)) $x682 $x607 $x347)))
 (let ((?x567 (* (- 2) (* ?x881 ?x881 ?x881 ?x881 ?x884 (+ c!3 k!2) (+ c!3 k!2)))))
 (let ((?x811 (* (- 1) (* ?x881 ?x881 ?x881 ?x881 ?x884 ?x843 (+ c!3 k!2) (+ c!3 k!2)))))
 (let ((?x879 (+ c!3 k!2)))
 (let ((?x736 (+ ?x885 (* (- 18) (* c!3 c!3 k!2)) (* 3 (* ?x881 ?x881 ?x881 ?x884 ?x879 ?x879 ?x879)) (* ?x881 ?x881 ?x881 ?x884 ?x843 ?x879 ?x879) ?x882 ?x877 (* c!3 k!2 k!2 m!1 n!0) ?x871 (* 2 (* c!3 k!2 m!1 m!1 n!0)) ?x872 ?x754 ?x867 (* (- 33) (* c!3 k!2 m!1)) ?x755 ?x868 ?x650 (* 18 (* c!3 k!2)) ?x861 ?x832 ?x811 (* (- 6) (* c!3 k!2 k!2 m!1)) ?x764 (* (- 6) (* c!3 k!2 m!1 m!1)) ?x550 (* (- 36) (* c!3 k!2 k!2)) ?x862 (* 6 (* c!3 k!2 k!2 n!0)) (* (- 1) (* ?x881 ?x881 ?x881 ?x884 ?x879 ?x879)) ?x567 (* (- 3) (* c!3 c!3 k!2 m!1)) ?x120 (* 14 (* c!3 k!2 m!1 n!0)) ?x498 ?x593 ?x494 (* 12 (* c!3 k!2 n!0)) ?x733 ?x560 ?x735)))
 (let ((?x461 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x117) (* 9 (* c!3 n!0)))))
 (let (($x738 (and $x276 (= ?x461 4) (= (+ ?x520 k!2 ?x586 ?x172) 1) $x607 (not (= ?x736 0)))))
 (let (($x197 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x803 (* 12 (* k m n))))
 (let ((?x798 (* 12 (* c m n))))
 (let ((?x801 (* 12 (* k k n))))
 (let ((?x796 (* 12 (* c k n))))
 (let ((?x635 (* k m m n)))
 (let ((?x940 (* 8 ?x635)))
 (let ((?x633 (* c m m n)))
 (let ((?x941 (* 8 ?x633)))
 (let ((?x631 (* k k m n)))
 (let ((?x943 (* 14 ?x631)))
 (let ((?x629 (* c k m n)))
 (let ((?x944 (* 14 ?x629)))
 (let ((?x794 (* (- 3) (* c c m m))))
 (let ((?x792 (* (- 3) (* c c k m))))
 (let ((?x69 (+ c k)))
 (let ((?x311 (+ 6 m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x530 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x665 (* (- 2) ?x530)))
 (let ((?x523 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x666 (* (- 1) ?x523)))
 (let ((?x518 (* 6 (* c k k n))))
 (let ((?x497 (* k k k)))
 (let ((?x105 (* (- 18) ?x497)))
 (let ((?x485 (* k k m m)))
 (let ((?x256 (* (- 3) ?x485)))
 (let ((?x484 (* c k m m)))
 (let ((?x99 (* (- 6) ?x484)))
 (let ((?x481 (* k k k m)))
 (let ((?x254 (* (- 3) ?x481)))
 (let ((?x480 (* c k k m)))
 (let ((?x109 (* (- 6) ?x480)))
 (let ((?x70 (+ k m)))
 (let ((?x441 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x826 (* (- 1) ?x441)))
 (let ((?x416 (* k m)))
 (let ((?x774 (* 18 ?x416)))
 (let ((?x412 (* c m)))
 (let ((?x777 (* 18 ?x412)))
 (let ((?x405 (* c k)))
 (let ((?x772 (* 18 ?x405)))
 (let ((?x382 (* k m m m n)))
 (let ((?x380 (* c m m m n)))
 (let ((?x378 (* k k m m n)))
 (let ((?x715 (* 2 ?x378)))
 (let ((?x376 (* c k m m n)))
 (let ((?x712 (* 2 ?x376)))
 (let ((?x370 (* k k k m n)))
 (let ((?x368 (* c k k m n)))
 (let ((?x373 (* 6 (* k k k n))))
 (let ((?x178 (* (- 18) (* c c m))))
 (let ((?x168 (* ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x147 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69 ?x69)))
 (let ((?x667 (* 3 ?x147)))
 (let ((?x153 (* (- 18) (* c c k))))
 (let ((?x49 (* k k)))
 (let ((?x766 (* 18 ?x49)))
 (let ((?x610 (+ ?x766 ?x153 ?x667 ?x168 ?x178 ?x373 ?x368 ?x370 ?x712 ?x715 ?x380 ?x382 (* (- 33) (* c k m)) (* (- 15) (* k k m)) (* 3 (* c m m)) (* 3 (* k m m)) ?x772 ?x777 ?x774 ?x826 ?x109 ?x254 ?x99 ?x256 (* (- 36) (* c k k)) ?x105 ?x518 ?x666 ?x665 ?x792 ?x794 ?x944 ?x943 ?x941 ?x940 ?x796 ?x801 ?x798 ?x803)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 (* c n))) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 $x211 $x263 $x301 (not (= ?x610 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x395 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x803 (* 12 (* k m n))))
 (let ((?x798 (* 12 (* c m n))))
 (let ((?x801 (* 12 (* k k n))))
 (let ((?x796 (* 12 (* c k n))))
 (let ((?x635 (* k m m n)))
 (let ((?x940 (* 8 ?x635)))
 (let ((?x633 (* c m m n)))
 (let ((?x941 (* 8 ?x633)))
 (let ((?x631 (* k k m n)))
 (let ((?x943 (* 14 ?x631)))
 (let ((?x629 (* c k m n)))
 (let ((?x944 (* 14 ?x629)))
 (let ((?x794 (* (- 3) (* c c m m))))
 (let ((?x792 (* (- 3) (* c c k m))))
 (let ((?x69 (+ c k)))
 (let ((?x311 (+ 6 m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x530 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x665 (* (- 2) ?x530)))
 (let ((?x523 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x666 (* (- 1) ?x523)))
 (let ((?x518 (* 6 (* c k k n))))
 (let ((?x497 (* k k k)))
 (let ((?x105 (* (- 18) ?x497)))
 (let ((?x485 (* k k m m)))
 (let ((?x256 (* (- 3) ?x485)))
 (let ((?x484 (* c k m m)))
 (let ((?x99 (* (- 6) ?x484)))
 (let ((?x481 (* k k k m)))
 (let ((?x254 (* (- 3) ?x481)))
 (let ((?x480 (* c k k m)))
 (let ((?x109 (* (- 6) ?x480)))
 (let ((?x70 (+ k m)))
 (let ((?x441 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x826 (* (- 1) ?x441)))
 (let ((?x399 (* k m m)))
 (let ((?x775 (* (- 3) ?x399)))
 (let ((?x398 (* c m m)))
 (let ((?x770 (* (- 3) ?x398)))
 (let ((?x382 (* k m m m n)))
 (let ((?x380 (* c m m m n)))
 (let ((?x378 (* k k m m n)))
 (let ((?x715 (* 2 ?x378)))
 (let ((?x376 (* c k m m n)))
 (let ((?x712 (* 2 ?x376)))
 (let ((?x370 (* k k k m n)))
 (let ((?x368 (* c k k m n)))
 (let ((?x373 (* 6 (* k k k n))))
 (let ((?x178 (* (- 18) (* c c m))))
 (let ((?x168 (* ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x147 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69 ?x69)))
 (let ((?x667 (* 3 ?x147)))
 (let ((?x153 (* (- 18) (* c c k))))
 (let ((?x49 (* k k)))
 (let ((?x766 (* 18 ?x49)))
 (let ((?x933 (+ ?x766 ?x153 ?x667 ?x168 ?x178 (* 6 (* k c)) (* 6 (* m k c)) ?x373 ?x368 ?x370 ?x712 ?x715 ?x380 ?x382 (* (- 45) (* c k m)) (* (- 27) (* k k m)) ?x770 ?x775 (* 12 (* c k)) (* 6 (* m k)) (* 12 (* c m)) (* 12 (* k m)) ?x826 (* 6 (* m m c)) ?x109 ?x254 ?x99 ?x256 (* (- 42) (* c k k)) ?x105 ?x518 ?x666 ?x665 ?x792 ?x794 (* 6 (* k k c)) (* 6 (* m m k)) ?x944 ?x943 ?x941 ?x940 (* 6 (* m k k)) ?x796 ?x801 (* 6 (* k m k)) ?x798 ?x803 (* 6 (* m c)) (* 6 (* k m c)))))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 (* c n))) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 $x211 $x263 $x301 (not (= ?x933 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x700 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x803 (* 12 (* k m n))))
 (let ((?x798 (* 12 (* c m n))))
 (let ((?x801 (* 12 (* k k n))))
 (let ((?x796 (* 12 (* c k n))))
 (let ((?x635 (* k m m n)))
 (let ((?x940 (* 8 ?x635)))
 (let ((?x633 (* c m m n)))
 (let ((?x941 (* 8 ?x633)))
 (let ((?x631 (* k k m n)))
 (let ((?x943 (* 14 ?x631)))
 (let ((?x629 (* c k m n)))
 (let ((?x944 (* 14 ?x629)))
 (let ((?x794 (* (- 3) (* c c m m))))
 (let ((?x792 (* (- 3) (* c c k m))))
 (let ((?x69 (+ c k)))
 (let ((?x311 (+ 6 m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x530 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x665 (* (- 2) ?x530)))
 (let ((?x523 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x666 (* (- 1) ?x523)))
 (let ((?x518 (* 6 (* c k k n))))
 (let ((?x497 (* k k k)))
 (let ((?x105 (* (- 18) ?x497)))
 (let ((?x485 (* k k m m)))
 (let ((?x256 (* (- 3) ?x485)))
 (let ((?x484 (* c k m m)))
 (let ((?x99 (* (- 6) ?x484)))
 (let ((?x481 (* k k k m)))
 (let ((?x254 (* (- 3) ?x481)))
 (let ((?x480 (* c k k m)))
 (let ((?x109 (* (- 6) ?x480)))
 (let ((?x70 (+ k m)))
 (let ((?x441 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x826 (* (- 1) ?x441)))
 (let ((?x416 (* k m)))
 (let ((?x774 (* 18 ?x416)))
 (let ((?x412 (* c m)))
 (let ((?x777 (* 18 ?x412)))
 (let ((?x405 (* c k)))
 (let ((?x772 (* 18 ?x405)))
 (let ((?x382 (* k m m m n)))
 (let ((?x380 (* c m m m n)))
 (let ((?x378 (* k k m m n)))
 (let ((?x715 (* 2 ?x378)))
 (let ((?x376 (* c k m m n)))
 (let ((?x712 (* 2 ?x376)))
 (let ((?x370 (* k k k m n)))
 (let ((?x368 (* c k k m n)))
 (let ((?x373 (* 6 (* k k k n))))
 (let ((?x178 (* (- 18) (* c c m))))
 (let ((?x168 (* ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x147 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69 ?x69)))
 (let ((?x667 (* 3 ?x147)))
 (let ((?x153 (* (- 18) (* c c k))))
 (let ((?x49 (* k k)))
 (let ((?x766 (* 18 ?x49)))
 (let ((?x610 (+ ?x766 ?x153 ?x667 ?x168 ?x178 ?x373 ?x368 ?x370 ?x712 ?x715 ?x380 ?x382 (* (- 33) (* c k m)) (* (- 15) (* k k m)) (* 3 (* c m m)) (* 3 (* k m m)) ?x772 ?x777 ?x774 ?x826 ?x109 ?x254 ?x99 ?x256 (* (- 36) (* c k k)) ?x105 ?x518 ?x666 ?x665 ?x792 ?x794 ?x944 ?x943 ?x941 ?x940 ?x796 ?x801 ?x798 ?x803)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 (* c n))) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x890 (and $x127 $x211 $x263 $x301 (not (= ?x610 0)))))
 (let ((?x399 (* k m m)))
 (let ((?x775 (* (- 3) ?x399)))
 (let ((?x398 (* c m m)))
 (let ((?x770 (* (- 3) ?x398)))
 (let ((?x933 (+ ?x766 ?x153 ?x667 ?x168 ?x178 (* 6 (* k c)) (* 6 (* m k c)) ?x373 ?x368 ?x370 ?x712 ?x715 ?x380 ?x382 (* (- 45) (* c k m)) (* (- 27) (* k k m)) ?x770 ?x775 (* 12 ?x405) (* 6 (* m k)) (* 12 ?x412) (* 12 ?x416) ?x826 (* 6 (* m m c)) ?x109 ?x254 ?x99 ?x256 (* (- 42) (* c k k)) ?x105 ?x518 ?x666 ?x665 ?x792 ?x794 (* 6 (* k k c)) (* 6 (* m m k)) ?x944 ?x943 ?x941 ?x940 (* 6 (* m k k)) ?x796 ?x801 (* 6 (* k m k)) ?x798 ?x803 (* 6 (* m c)) (* 6 (* k m c)))))
 (let (($x903 (and $x127 $x211 $x263 $x301 (not (= ?x933 0)))))
 (rewrite (= $x903 $x890))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x732 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x311 (+ 6 m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x168 (* ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x441 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x826 (* (- 1) ?x441)))
 (let ((?x147 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69 ?x69)))
 (let ((?x667 (* 3 ?x147)))
 (let ((?x530 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x665 (* (- 2) ?x530)))
 (let ((?x523 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x666 (* (- 1) ?x523)))
 (let ((?x581 (* ?x311 ?x70 ?x69)))
 (let ((?x118 (* ?x314 ?x311 ?x70 ?x70 ?x69)))
 (let ((?x460 (+ ?x118 ?x581 (* (- 1) (* ?x311 ?x70 ?x70 ?x69)) (* (- 3) (* ?x311 ?x70 ?x69 ?x69)) (* 2 (* ?x314 ?x311 ?x70 ?x69)) ?x666 ?x665 ?x667 ?x826 ?x168)))
 (let (($x745 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x673 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x673 $x745 (not (= ?x460 0))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x501 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x803 (* 12 (* k m n))))
 (let ((?x798 (* 12 (* c m n))))
 (let ((?x801 (* 12 (* k k n))))
 (let ((?x796 (* 12 (* c k n))))
 (let ((?x635 (* k m m n)))
 (let ((?x940 (* 8 ?x635)))
 (let ((?x633 (* c m m n)))
 (let ((?x941 (* 8 ?x633)))
 (let ((?x631 (* k k m n)))
 (let ((?x943 (* 14 ?x631)))
 (let ((?x629 (* c k m n)))
 (let ((?x944 (* 14 ?x629)))
 (let ((?x794 (* (- 3) (* c c m m))))
 (let ((?x792 (* (- 3) (* c c k m))))
 (let ((?x69 (+ c k)))
 (let ((?x311 (+ 6 m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x530 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x665 (* (- 2) ?x530)))
 (let ((?x523 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x666 (* (- 1) ?x523)))
 (let ((?x518 (* 6 (* c k k n))))
 (let ((?x497 (* k k k)))
 (let ((?x105 (* (- 18) ?x497)))
 (let ((?x485 (* k k m m)))
 (let ((?x256 (* (- 3) ?x485)))
 (let ((?x484 (* c k m m)))
 (let ((?x99 (* (- 6) ?x484)))
 (let ((?x481 (* k k k m)))
 (let ((?x254 (* (- 3) ?x481)))
 (let ((?x480 (* c k k m)))
 (let ((?x109 (* (- 6) ?x480)))
 (let ((?x70 (+ k m)))
 (let ((?x441 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x826 (* (- 1) ?x441)))
 (let ((?x399 (* k m m)))
 (let ((?x775 (* (- 3) ?x399)))
 (let ((?x398 (* c m m)))
 (let ((?x770 (* (- 3) ?x398)))
 (let ((?x382 (* k m m m n)))
 (let ((?x380 (* c m m m n)))
 (let ((?x378 (* k k m m n)))
 (let ((?x715 (* 2 ?x378)))
 (let ((?x376 (* c k m m n)))
 (let ((?x712 (* 2 ?x376)))
 (let ((?x370 (* k k k m n)))
 (let ((?x368 (* c k k m n)))
 (let ((?x373 (* 6 (* k k k n))))
 (let ((?x178 (* (- 18) (* c c m))))
 (let ((?x168 (* ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x147 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69 ?x69)))
 (let ((?x667 (* 3 ?x147)))
 (let ((?x153 (* (- 18) (* c c k))))
 (let ((?x49 (* k k)))
 (let ((?x766 (* 18 ?x49)))
 (let ((?x933 (+ ?x766 ?x153 ?x667 ?x168 ?x178 (* 6 (* k c)) (* 6 (* m k c)) ?x373 ?x368 ?x370 ?x712 ?x715 ?x380 ?x382 (* (- 45) (* c k m)) (* (- 27) (* k k m)) ?x770 ?x775 (* 12 (* c k)) (* 6 (* m k)) (* 12 (* c m)) (* 12 (* k m)) ?x826 (* 6 (* m m c)) ?x109 ?x254 ?x99 ?x256 (* (- 42) (* c k k)) ?x105 ?x518 ?x666 ?x665 ?x792 ?x794 (* 6 (* k k c)) (* 6 (* m m k)) ?x944 ?x943 ?x941 ?x940 (* 6 (* m k k)) ?x796 ?x801 (* 6 (* k m k)) ?x798 ?x803 (* 6 (* m c)) (* 6 (* k m c)))))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 (* c n))) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x903 (and $x127 $x211 $x263 $x301 (not (= ?x933 0)))))
 (let ((?x581 (* ?x311 ?x70 ?x69)))
 (let ((?x118 (* ?x314 ?x311 ?x70 ?x70 ?x69)))
 (let ((?x460 (+ ?x118 ?x581 (* (- 1) (* ?x311 ?x70 ?x70 ?x69)) (* (- 3) (* ?x311 ?x70 ?x69 ?x69)) (* 2 (* ?x314 ?x311 ?x70 ?x69)) ?x666 ?x665 ?x667 ?x826 ?x168)))
 (let (($x745 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x673 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x725 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x673 $x745 (not (= ?x460 0)))))
 (rewrite (= $x725 $x903))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x112 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x311 (+ 6 m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x168 (* ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x441 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x523 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x760 (* ?x311 ?x70 ?x70 ?x69)))
 (let ((?x454 (+ (* (- 1) (* ?x314 ?x311 ?x70 ?x70 ?x69)) (* (- 1) (* ?x311 ?x70 ?x69)) ?x760 (* 3 (* ?x311 ?x70 ?x69 ?x69)) (* (- 2) (* ?x314 ?x311 ?x70 ?x69)) ?x523 (* 2 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)) (* (- 3) (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69 ?x69)) ?x441 (* (- 1) ?x168))))
 (let (($x745 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x456 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x718 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 (= ?x718 (- 4)) $x456 $x745 (not (= ?x454 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x538 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x311 (+ 6 m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x168 (* ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x441 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x826 (* (- 1) ?x441)))
 (let ((?x147 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69 ?x69)))
 (let ((?x667 (* 3 ?x147)))
 (let ((?x530 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x665 (* (- 2) ?x530)))
 (let ((?x523 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x666 (* (- 1) ?x523)))
 (let ((?x581 (* ?x311 ?x70 ?x69)))
 (let ((?x118 (* ?x314 ?x311 ?x70 ?x70 ?x69)))
 (let ((?x460 (+ ?x118 ?x581 (* (- 1) (* ?x311 ?x70 ?x70 ?x69)) (* (- 3) (* ?x311 ?x70 ?x69 ?x69)) (* 2 (* ?x314 ?x311 ?x70 ?x69)) ?x666 ?x665 ?x667 ?x826 ?x168)))
 (let (($x745 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x673 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x725 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x673 $x745 (not (= ?x460 0)))))
 (let ((?x760 (* ?x311 ?x70 ?x70 ?x69)))
 (let ((?x454 (+ (* (- 1) ?x118) (* (- 1) ?x581) ?x760 (* 3 (* ?x311 ?x70 ?x69 ?x69)) (* (- 2) (* ?x314 ?x311 ?x70 ?x69)) ?x523 (* 2 ?x530) (* (- 3) ?x147) ?x441 (* (- 1) ?x168))))
 (let (($x456 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x718 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x573 (and $x127 (= ?x718 (- 4)) $x456 $x745 (not (= ?x454 0)))))
 (rewrite (= $x573 $x725))))))))))))))))))))))))))))))))))
 ))
 (let (($x94 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x78 (+ (- (* (- 1) ?x69 ?x70 ?x70 ?x71 ?x72) (* ?x69 ?x70 ?x71)) (* ?x69 ?x70 ?x70 ?x71) (* 3 ?x69 ?x69 ?x70 ?x71))))
 (let ((?x83 (+ (- ?x78 (* 2 ?x69 ?x70 ?x71 ?x72)) (* ?x69 ?x69 ?x71 ?x72 ?x72 ?x72) (* 2 ?x69 ?x69 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x87 (+ (- ?x83 (* 3 ?x69 ?x69 ?x69 ?x71 ?x72 ?x72 ?x72)) (* ?x69 ?x69 ?x70 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let (($x92 (or (not (= (- ?x87 (* ?x69 ?x69 ?x70 ?x71 ?x72 ?x72 ?x72)) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x92)))))))))))))))) :qid k!34))
 ))
 (let ((?x116 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x311 (+ 6 m)))
 (let ((?x314 (+ 1 n)))
 (let ((?x168 (* ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x441 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x70 ?x69 ?x69)))
 (let ((?x523 (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)))
 (let ((?x760 (* ?x311 ?x70 ?x70 ?x69)))
 (let ((?x454 (+ (* (- 1) (* ?x314 ?x311 ?x70 ?x70 ?x69)) (* (- 1) (* ?x311 ?x70 ?x69)) ?x760 (* 3 (* ?x311 ?x70 ?x69 ?x69)) (* (- 2) (* ?x314 ?x311 ?x70 ?x69)) ?x523 (* 2 (* ?x314 ?x314 ?x314 ?x314 ?x311 ?x69 ?x69)) (* (- 3) (* ?x314 ?x314 ?x314 ?x311 ?x69 ?x69 ?x69)) ?x441 (* (- 1) ?x168))))
 (let (($x745 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x456 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x718 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x573 (and $x127 (= ?x718 (- 4)) $x456 $x745 (not (= ?x454 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x78 (+ (- (* (- 1) ?x69 ?x70 ?x70 ?x71 ?x72) (* ?x69 ?x70 ?x71)) (* ?x69 ?x70 ?x70 ?x71) (* 3 ?x69 ?x69 ?x70 ?x71))))
 (let ((?x83 (+ (- ?x78 (* 2 ?x69 ?x70 ?x71 ?x72)) (* ?x69 ?x69 ?x71 ?x72 ?x72 ?x72) (* 2 ?x69 ?x69 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x87 (+ (- ?x83 (* 3 ?x69 ?x69 ?x69 ?x71 ?x72 ?x72 ?x72)) (* ?x69 ?x69 ?x70 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let (($x92 (or (not (= (- ?x87 (* ?x69 ?x69 ?x70 ?x71 ?x72 ?x72 ?x72)) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x93 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x92)))
 (rewrite (= $x93 $x573)))))))))))))))))))))))))))))))
 ))
 (let ((@x95 (asserted $x94)))
 (let ((@x333 (mp (mp @x95 (quant-intro (proof-bind ?x116) (= $x94 $x112)) $x112) (rewrite (= $x112 $x112)) $x112)))
 (let ((@x164 (mp (mp @x333 (quant-intro (proof-bind ?x538) (= $x112 $x732)) $x732) (quant-intro (proof-bind ?x501) (= $x732 $x395)) $x395)))
 (let ((@x743 (mp~ (mp @x164 (quant-intro (proof-bind ?x700) (= $x395 $x197)) $x197) (sk (~ $x197 $x738)) $x738)))
 (let ((@x353 (mp @x743 (rewrite (= $x738 $x716)) $x716)))
 (let ((@x690 (and-elim @x353 $x682)))
 (let ((@x285 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x682) $x651)) @x690 $x651)))
 (let (($x662 (>= ?x341 1)))
 (let ((@x681 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x682) $x662)) @x690 $x662)))
 (let (($x663 (<= ?x608 1)))
 (let ((@x747 (and-elim @x353 $x607)))
 (let ((@x816 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x607) $x663)) @x747 $x663)))
 (let (($x678 (>= ?x608 1)))
 (let ((@x289 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x607) $x678)) @x747 $x678)))
 (let (($x655 (<= ?x842 6)))
 (let ((@x721 (and-elim @x353 $x276)))
 (let ((@x313 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x276) $x655)) @x721 $x655)))
 (let (($x660 (>= ?x842 6)))
 (let ((@x408 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x276) $x660)) @x721 $x660)))
 (let (($x230 (not (<= ?x177 0))))
 (let (($x684 (>= ?x177 0)))
 (let ((@x235 ((_ th-lemma arith) (hypothesis (not $x684)) @x289 @x816 @x408 @x313 @x408 @x313 @x289 @x816 @x289 @x816 @x681 @x285 @x408 @x313 @x289 @x816 @x681 @x285 false)))
 (let ((@x327 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x713 $x230 (not $x684))) (and-elim @x353 $x347) (or $x230 (not $x684)))))
 ((_ th-lemma arith) (unit-resolution @x327 (lemma @x235 $x684) $x230) @x289 @x816 @x408 @x313 @x408 @x313 @x289 @x816 @x289 @x816 @x681 @x285 @x408 @x313 @x289 @x816 @x681 @x285 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        17
 :arith-assert-upper        27
 :arith-branch-var          3
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           16
 :arith-grobner             2
 :arith-ineq-splits         3
 :arith-max-min             577
 :arith-nonlinear-bounds    24
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             6
 :arith-pivots              10
 :arith-row-summations      14
 :arith-tableau-max-columns 75
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 11
 :del-clause                16
 :final-checks              12
 :max-memory                3.75
 :memory                    3.21
 :mk-bool-var               31
 :mk-clause                 16
 :num-allocs                1471626
 :num-checks                1
 :propagations              12
 :rlimit-count              13168
 :time                      0.01
 :total-time                0.02)
