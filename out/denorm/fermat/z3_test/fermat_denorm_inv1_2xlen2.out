unsat
((set-logic NIA)
(declare-fun u!1 () Int)
(declare-fun r!2 () Int)
(declare-fun v!0 () Int)
(proof
(let ((?x1767 (* u!1 u!1)))
 (let ((?x48 (* v00 v00)))
 (let ((?x33 (* 2 u00)))
 (let ((?x30 (* 4 r00)))
 (let ((?x361 (+ ?x30 ?x33 (* (- 2) v00) (* (- 1) (* u00 u00)) ?x48 (* (- 2) u!1) (* (- 1) (* v!0 v!0)) (* 2 v!0) (* (- 4) r!2) ?x1767)))
 (let (($x706 (>= ?x361 0)))
 (let (($x828 (= ?x361 0)))
 (let ((?x1768 (* (- 1) ?x1767)))
 (let ((?x1766 (* 4 r!2)))
 (let ((?x1756 (* (- 2) v!0)))
 (let ((?x1725 (* v!0 v!0)))
 (let ((?x1744 (* 2 u!1)))
 (let ((?x200 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x41 (* 2 v00)))
 (let ((?x124 (* (- 2) u00)))
 (let ((?x108 (* (- 4) r00)))
 (let ((?x1093 (+ ?x108 ?x124 ?x41 ?x46 ?x200 ?x1744 ?x1725 ?x1756 ?x1766 ?x1768)))
 (let ((?x1634 (* u!1 u!1 u!1 v!0 v!0 v!0)))
 (let ((?x498 (* (- 1) ?x1634)))
 (let ((?x1492 (* (- 8) (* u!1 u!1 u!1 v!0 v!0))))
 (let ((?x1489 (* (- 2) (* u!1 u!1 v!0 v!0 v!0))))
 (let ((?x1147 (* (- 6) (* u!1 u!1 u!1 u!1 u!1 v!0 v!0))))
 (let ((?x831 (* (- 1) (* u!1 u!1 u!1 u!1 u!1 u!1 v!0 v!0))))
 (let ((?x254 (* (- 1) (* u!1 u!1 u!1 v!0 v!0 r!2 r!2 r!2))))
 (let ((?x786 (* (- 1) (* u!1 v!0 v!0 v!0 r!2 r!2))))
 (let ((?x1174 (* (- 12) (* u!1 u!1 u!1 u!1 v!0 v!0))))
 (let ((?x135 (+ ?x1174 ?x786 (* (- 36) (* u!1 u!1 u!1 v!0 v!0 r!2)) (* (- 24) (* u!1 v!0 v!0 r!2 r!2)) (* (- 4) (* u!1 v!0 v!0 v!0 r!2)) ?x254 (* (- 12) (* u!1 v!0 v!0 r!2 r!2 r!2)) (* (- 18) (* u!1 u!1 u!1 v!0 v!0 r!2 r!2)) (* (- 24) (* u!1 u!1 v!0 v!0 r!2)) (* (- 3) (* u!1 u!1 u!1 u!1 v!0 v!0 r!2 r!2)) (* (- 3) (* u!1 u!1 u!1 u!1 u!1 v!0 v!0 r!2)) (* (- 2) (* u!1 u!1 v!0 v!0 v!0 r!2)) (* (- 6) (* u!1 u!1 v!0 v!0 r!2 r!2 r!2)) (* (- 36) (* u!1 u!1 v!0 v!0 r!2 r!2)) (* (- 18) (* u!1 u!1 u!1 u!1 v!0 v!0 r!2)) (* (- 2) (* v!0 v!0 v!0 r!2 r!2)) (* (- 8) (* v!0 v!0 r!2 r!2 r!2)) ?x831 ?x1147 ?x1489 ?x1492 ?x498)))
 (let ((?x355 (* ?x135 (+ (* (- 1) (* u!1 r!2)) (* (- 3) u!1) (* (- 3) r!2) ?x1768) ?x1093)))
 (let (($x388 (= ?x355 0)))
 (let (($x352 (not $x388)))
 (let ((?x1789 (* (- 12) (* u!1 v!0 v!0 v!0))))
 (let ((?x1783 (* (- 8) (* u!1 v!0 v!0))))
 (let ((?x1271 (* 4 ?x1634)))
 (let ((?x1121 (* 4 (* u!1 u!1 u!1 v!0 v!0 v!0 v!0))))
 (let ((?x1392 (* (- 6) (* u!1 v!0 v!0 v!0 v!0))))
 (let ((?x1108 (* (- 1) (* u!1 v!0 v!0 v!0 v!0 v!0))))
 (let ((?x1100 (* u!1 u!1 u!1 v!0 v!0 v!0 v!0 v!0)))
 (let ((?x804 (+ (* (- 4) (* u!1 u!1 u!1 r!2 r!2 r!2)) ?x786 (* 16 (* u!1 v!0 r!2)) (* (- 4) (* u!1 u!1 u!1 v!0 r!2 r!2 r!2)) (* (- 12) (* u!1 v!0 r!2 r!2)) (* (- 12) (* u!1 u!1 u!1 v!0 v!0 r!2)) (* (- 6) (* u!1 v!0 v!0 r!2 r!2)) (* 12 (* u!1 v!0 v!0 v!0 r!2)) (* 2 (* u!1 v!0 v!0 v!0 v!0 r!2)) (* (- 8) (* u!1 r!2 r!2)) ?x254 (* 12 (* u!1 u!1 u!1 v!0 v!0 r!2 r!2)) (* 24 (* u!1 v!0 v!0 r!2)) (* 3 (* u!1 u!1 u!1 v!0 v!0 v!0 r!2 r!2)) (* 12 (* u!1 u!1 u!1 v!0 r!2 r!2)) (* (- 12) (* u!1 u!1 u!1 v!0 v!0 v!0 r!2)) (* (- 3) (* u!1 u!1 u!1 v!0 v!0 v!0 v!0 r!2)) ?x1100 ?x1108 ?x1392 ?x1121 ?x1271 ?x1783 ?x1789)))
 (let ((?x329 (* ?x804 (+ (* (- 1) (* u!1 r!2)) (* u!1 v!0) v!0 (* (- 1) r!2)) ?x1093)))
 (let (($x460 (= ?x329 0)))
 (let (($x387 (or (not $x460) $x352)))
 (let (($x336 (and $x828 $x387)))
 (let ((?x1757 (+ ?x1766 ?x1744 ?x1756 ?x108 ?x124 ?x41 ?x1768 ?x1725 ?x46 ?x200)))
 (let ((?x1774 (* (- 1) (* r!2 r!2 u!1 v!0 v!0 v!0))))
 (let ((?x1759 (* (- 1) (* r!2 r!2 r!2 u!1 u!1 u!1 v!0 v!0))))
 (let ((?x214 (+ ?x1759 ?x1774 (* (- 36) (* r!2 u!1 u!1 u!1 v!0 v!0)) (* (- 24) (* r!2 r!2 u!1 v!0 v!0)) (* (- 4) (* r!2 u!1 v!0 v!0 v!0)) (* (- 18) (* r!2 r!2 u!1 u!1 u!1 v!0 v!0)) (* (- 3) (* r!2 r!2 u!1 u!1 u!1 u!1 v!0 v!0)) (* (- 3) (* r!2 u!1 u!1 u!1 u!1 u!1 v!0 v!0)) ?x831 (* (- 2) (* r!2 u!1 u!1 v!0 v!0 v!0)) ?x498 (* (- 2) (* r!2 r!2 v!0 v!0 v!0)) ?x1489 (* (- 8) (* r!2 r!2 r!2 v!0 v!0)) (* (- 24) (* r!2 u!1 u!1 v!0 v!0)) ?x1492 ?x1174 ?x1147 (* (- 12) (* r!2 r!2 r!2 u!1 v!0 v!0)) (* (- 6) (* r!2 r!2 r!2 u!1 u!1 v!0 v!0)) (* (- 36) (* r!2 r!2 u!1 u!1 v!0 v!0)) (* (- 18) (* r!2 u!1 u!1 u!1 u!1 v!0 v!0)))))
 (let ((?x311 (* ?x214 (+ (* (- 3) r!2) (* (- 3) u!1) ?x1768 (* (- 1) (* r!2 u!1))) ?x1757)))
 (let ((?x520 (+ (* (- 3) (* r!2 u!1 u!1 u!1 v!0 v!0 v!0 v!0)) (* (- 12) (* r!2 u!1 u!1 u!1 v!0 v!0 v!0)) (* (- 4) (* r!2 r!2 r!2 u!1 u!1 u!1)) ?x1759 ?x1774 (* (- 8) (* r!2 r!2 u!1)) (* 16 (* r!2 u!1 v!0)) (* (- 4) (* r!2 r!2 r!2 u!1 u!1 u!1 v!0)) ?x1783 (* (- 12) (* r!2 r!2 u!1 v!0)) (* 24 (* r!2 u!1 v!0 v!0)) ?x1789 (* (- 12) (* r!2 u!1 u!1 u!1 v!0 v!0)) (* (- 6) (* r!2 r!2 u!1 v!0 v!0)) (* 12 (* r!2 u!1 v!0 v!0 v!0)) ?x1392 ?x1121 (* 2 (* r!2 u!1 v!0 v!0 v!0 v!0)) ?x1100 ?x1108 (* 12 (* r!2 r!2 u!1 u!1 u!1 v!0 v!0)) (* 3 (* r!2 r!2 u!1 u!1 u!1 v!0 v!0 v!0)) ?x1271 (* 12 (* r!2 r!2 u!1 u!1 u!1 v!0)))))
 (let ((?x147 (* ?x520 (+ (* (- 1) r!2) v!0 (* (- 1) (* r!2 u!1)) (* u!1 v!0)) ?x1757)))
 (let (($x1665 (and (= ?x1757 0) (or (not (= ?x147 0)) (not (= ?x311 0))))))
 (let (($x1290 (exists ((r Int) (u Int) (v Int) )(! (let ((?x48 (* v00 v00)))
 (let ((?x200 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x43 (* u u)))
 (let ((?x178 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x124 (* (- 2) u00)))
 (let ((?x108 (* (- 4) r00)))
 (let ((?x154 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x28 (* 4 r)))
 (let ((?x206 (+ ?x28 ?x36 ?x154 ?x108 ?x124 ?x41 ?x178 ?x45 ?x46 ?x200)))
 (let ((?x369 (* (- 1) (* r u))))
 (let ((?x825 (+ (* (- 3) r) (* (- 3) u) ?x178 ?x369)))
 (let ((?x1045 (* (- 2) (* u u v v v))))
 (let ((?x1042 (* (- 2) (* r r v v v))))
 (let ((?x980 (* u u u v v v)))
 (let ((?x1030 (* (- 1) ?x980)))
 (let ((?x1039 (* (- 2) (* r u u v v v))))
 (let ((?x960 (* (- 1) (* u u u u u u v v))))
 (let ((?x589 (* r u v v v)))
 (let ((?x1036 (* (- 4) ?x589)))
 (let ((?x707 (* (- 1) (* r r u v v v))))
 (let ((?x441 (* (- 1) (* r r r u u u v v))))
 (let ((?x1795 (+ ?x441 ?x707 (* (- 36) (* r u u u v v)) (* (- 24) (* r r u v v)) ?x1036 (* (- 18) (* r r u u u v v)) (* (- 3) (* r r u u u u v v)) (* (- 3) (* r u u u u u v v)) ?x960 ?x1039 ?x1030 ?x1042 ?x1045 (* (- 8) (* r r r v v)) (* (- 24) (* r u u v v)) (* (- 8) (* u u u v v)) (* (- 12) (* u u u u v v)) (* (- 6) (* u u u u u v v)) (* (- 12) (* r r r u v v)) (* (- 6) (* r r r u u v v)) (* (- 36) (* r r u u v v)) (* (- 18) (* r u u u u v v)))))
 (let ((?x331 (* (- 1) r)))
 (let ((?x382 (+ ?x331 v ?x369 (* u v))))
 (let ((?x718 (* (- 1) (* u v v v v v))))
 (let ((?x751 (* 2 (* r u v v v v))))
 (let ((?x748 (* (- 6) (* u v v v v))))
 (let ((?x745 (* 12 ?x589)))
 (let ((?x581 (* r r u v v)))
 (let ((?x742 (* (- 6) ?x581)))
 (let ((?x739 (* (- 12) (* u v v v))))
 (let ((?x736 (* 24 (* r u v v))))
 (let ((?x732 (* (- 12) (* r r u v))))
 (let ((?x729 (* (- 8) (* u v v))))
 (let ((?x726 (* 16 (* r u v))))
 (let ((?x722 (* (- 8) (* r r u))))
 (let ((?x1194 (+ (* (- 3) (* r u u u v v v v)) (* (- 12) (* r u u u v v v)) (* (- 4) (* r r r u u u)) ?x441 ?x707 ?x722 ?x726 (* (- 4) (* r r r u u u v)) ?x729 ?x732 ?x736 ?x739 (* (- 12) (* r u u u v v)) ?x742 ?x745 ?x748 (* 4 (* u u u v v v v)) ?x751 (* u u u v v v v v) ?x718 (* 12 (* r r u u u v v)) (* 3 (* r r u u u v v v)) (* 4 ?x980) (* 12 (* r r u u u v)))))
 (let (($x1844 (or (not (= (* ?x1194 ?x382 ?x206) 0)) (not (= (* ?x1795 ?x825 ?x206) 0)))))
 (let (($x211 (= ?x206 0)))
 (and $x211 $x1844)))))))))))))))))))))))))))))))))))))))))))) :qid k!28))
 ))
 (let (($x313 (exists ((r Int) (u Int) (v Int) )(! (let ((?x48 (* v00 v00)))
 (let ((?x200 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x41 (* 2 v00)))
 (let ((?x154 (* (- 2) v)))
 (let ((?x124 (* (- 2) u00)))
 (let ((?x108 (* (- 4) r00)))
 (let ((?x28 (* 4 r)))
 (let ((?x642 (+ 4 ?x28 (* 6 u) ?x108 ?x124 ?x154 ?x41 (* (- 1) (* (+ 2 u) (+ 2 u))) ?x45 ?x46 ?x200)))
 (let ((?x331 (* (- 1) r)))
 (let ((?x989 (* (- 1) (* (+ 2 u) (+ r u) (+ r u) v v v))))
 (let ((?x76 (+ r u)))
 (let ((?x508 (+ 2 u)))
 (let ((?x994 (* (+ (* (- 1) (* ?x508 ?x508 ?x508 ?x76 ?x76 ?x76 v v)) ?x989) (+ ?x331 (* (- 1) u) (* (- 1) (* ?x508 ?x76))) ?x642)))
 (let ((?x43 (* u u)))
 (let ((?x178 (* (- 1) ?x43)))
 (let ((?x36 (* 2 u)))
 (let ((?x577 (+ (- 4) ?x28 (* (- 6) v) ?x108 ?x124 ?x36 ?x41 ?x178 (* (+ 2 v) (+ 2 v)) ?x46 ?x200)))
 (let ((?x105 (* (- 1) v)))
 (let ((?x244 (+ r ?x105)))
 (let ((?x185 (+ 2 v)))
 (let ((?x638 (+ (* (- 1) (* ?x185 ?x185 ?x244 ?x244 ?x244 u u u)) (* (- 1) (* ?x185 ?x185 ?x185 ?x244 ?x244 u)))))
 (let (($x293 (not (= (* ?x638 (+ ?x331 v (* (- 1) (* ?x244 u))) ?x577) 0))))
 (and (= (+ ?x28 ?x108 ?x124 ?x36 ?x154 ?x41 ?x178 ?x45 ?x46 ?x200) 0) (or $x293 (not (= ?x994 0)))))))))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x1250 (lambda ((r Int) (u Int) (v Int) )(let ((?x48 (* v00 v00)))
 (let ((?x200 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x43 (* u u)))
 (let ((?x178 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x124 (* (- 2) u00)))
 (let ((?x108 (* (- 4) r00)))
 (let ((?x154 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x28 (* 4 r)))
 (let ((?x206 (+ ?x28 ?x36 ?x154 ?x108 ?x124 ?x41 ?x178 ?x45 ?x46 ?x200)))
 (let ((?x369 (* (- 1) (* r u))))
 (let ((?x825 (+ (* (- 3) r) (* (- 3) u) ?x178 ?x369)))
 (let ((?x1045 (* (- 2) (* u u v v v))))
 (let ((?x1042 (* (- 2) (* r r v v v))))
 (let ((?x980 (* u u u v v v)))
 (let ((?x1030 (* (- 1) ?x980)))
 (let ((?x1039 (* (- 2) (* r u u v v v))))
 (let ((?x960 (* (- 1) (* u u u u u u v v))))
 (let ((?x589 (* r u v v v)))
 (let ((?x1036 (* (- 4) ?x589)))
 (let ((?x707 (* (- 1) (* r r u v v v))))
 (let ((?x441 (* (- 1) (* r r r u u u v v))))
 (let ((?x1795 (+ ?x441 ?x707 (* (- 36) (* r u u u v v)) (* (- 24) (* r r u v v)) ?x1036 (* (- 18) (* r r u u u v v)) (* (- 3) (* r r u u u u v v)) (* (- 3) (* r u u u u u v v)) ?x960 ?x1039 ?x1030 ?x1042 ?x1045 (* (- 8) (* r r r v v)) (* (- 24) (* r u u v v)) (* (- 8) (* u u u v v)) (* (- 12) (* u u u u v v)) (* (- 6) (* u u u u u v v)) (* (- 12) (* r r r u v v)) (* (- 6) (* r r r u u v v)) (* (- 36) (* r r u u v v)) (* (- 18) (* r u u u u v v)))))
 (let ((?x331 (* (- 1) r)))
 (let ((?x382 (+ ?x331 v ?x369 (* u v))))
 (let ((?x718 (* (- 1) (* u v v v v v))))
 (let ((?x751 (* 2 (* r u v v v v))))
 (let ((?x748 (* (- 6) (* u v v v v))))
 (let ((?x745 (* 12 ?x589)))
 (let ((?x581 (* r r u v v)))
 (let ((?x742 (* (- 6) ?x581)))
 (let ((?x739 (* (- 12) (* u v v v))))
 (let ((?x736 (* 24 (* r u v v))))
 (let ((?x732 (* (- 12) (* r r u v))))
 (let ((?x729 (* (- 8) (* u v v))))
 (let ((?x726 (* 16 (* r u v))))
 (let ((?x722 (* (- 8) (* r r u))))
 (let ((?x1194 (+ (* (- 3) (* r u u u v v v v)) (* (- 12) (* r u u u v v v)) (* (- 4) (* r r r u u u)) ?x441 ?x707 ?x722 ?x726 (* (- 4) (* r r r u u u v)) ?x729 ?x732 ?x736 ?x739 (* (- 12) (* r u u u v v)) ?x742 ?x745 ?x748 (* 4 (* u u u v v v v)) ?x751 (* u u u v v v v v) ?x718 (* 12 (* r r u u u v v)) (* 3 (* r r u u u v v v)) (* 4 ?x980) (* 12 (* r r u u u v)))))
 (let (($x1844 (or (not (= (* ?x1194 ?x382 ?x206) 0)) (not (= (* ?x1795 ?x825 ?x206) 0)))))
 (let (($x211 (= ?x206 0)))
 (let (($x1865 (and $x211 $x1844)))
 (let ((?x642 (+ 4 ?x28 (* 6 u) ?x108 ?x124 ?x154 ?x41 (* (- 1) (* (+ 2 u) (+ 2 u))) ?x45 ?x46 ?x200)))
 (let ((?x989 (* (- 1) (* (+ 2 u) (+ r u) (+ r u) v v v))))
 (let ((?x76 (+ r u)))
 (let ((?x508 (+ 2 u)))
 (let ((?x994 (* (+ (* (- 1) (* ?x508 ?x508 ?x508 ?x76 ?x76 ?x76 v v)) ?x989) (+ ?x331 (* (- 1) u) (* (- 1) (* ?x508 ?x76))) ?x642)))
 (let ((?x577 (+ (- 4) ?x28 (* (- 6) v) ?x108 ?x124 ?x36 ?x41 ?x178 (* (+ 2 v) (+ 2 v)) ?x46 ?x200)))
 (let ((?x105 (* (- 1) v)))
 (let ((?x244 (+ r ?x105)))
 (let ((?x185 (+ 2 v)))
 (let ((?x638 (+ (* (- 1) (* ?x185 ?x185 ?x244 ?x244 ?x244 u u u)) (* (- 1) (* ?x185 ?x185 ?x185 ?x244 ?x244 u)))))
 (let (($x293 (not (= (* ?x638 (+ ?x331 v (* (- 1) (* ?x244 u))) ?x577) 0))))
 (let (($x698 (and (= (+ ?x28 ?x108 ?x124 ?x36 ?x154 ?x41 ?x178 ?x45 ?x46 ?x200) 0) (or $x293 (not (= ?x994 0))))))
 (rewrite (= $x698 $x1865)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x100 (exists ((r Int) (u Int) (v Int) )(! (let ((?x80 (+ u 2)))
 (let ((?x76 (+ r u)))
 (let ((?x66 (- 1)))
 (let ((?x94 (- (* ?x66 ?x76 ?x76 ?x76 ?x80 ?x80 ?x80 v v) (* ?x76 ?x76 ?x80 v v v))))
 (let ((?x48 (* v00 v00)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x41 (* 2 v00)))
 (let ((?x38 (* 2 v)))
 (let ((?x82 (+ (- (- (* 4 ?x76) (* 4 r00)) (* 2 u00)) (* 2 ?x80))))
 (let ((?x95 (* (- (+ (- (+ (- ?x82 ?x38) ?x41) (* ?x80 ?x80)) ?x45 ?x46) ?x48) (- (* ?x66 ?x76) (* ?x76 ?x80)) ?x94)))
 (let ((?x57 (+ v 2)))
 (let ((?x52 (- r v)))
 (let ((?x72 (- (* ?x66 ?x52 ?x52 ?x52 u u u ?x57 ?x57) (* ?x52 ?x52 u ?x57 ?x57 ?x57))))
 (let ((?x43 (* u u)))
 (let ((?x36 (* 2 u)))
 (let ((?x59 (- (+ (- (- (* 4 ?x52) (* 4 r00)) (* 2 u00)) ?x36) (* 2 ?x57))))
 (let ((?x73 (* (- (+ (- (+ ?x59 ?x41) ?x43) (* ?x57 ?x57) ?x46) ?x48) (- (* ?x66 ?x52) (* ?x52 u)) ?x72)))
 (let ((?x39 (- (+ (- (- (* 4 r) (* 4 r00)) (* 2 u00)) ?x36) ?x38)))
 (and (= (- (+ (- (+ ?x39 ?x41) ?x43) ?x45 ?x46) ?x48) 0) (or (not (= ?x73 0)) (not (= ?x95 0))))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x284 (lambda ((r Int) (u Int) (v Int) )(let ((?x48 (* v00 v00)))
 (let ((?x200 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x41 (* 2 v00)))
 (let ((?x154 (* (- 2) v)))
 (let ((?x124 (* (- 2) u00)))
 (let ((?x108 (* (- 4) r00)))
 (let ((?x28 (* 4 r)))
 (let ((?x642 (+ 4 ?x28 (* 6 u) ?x108 ?x124 ?x154 ?x41 (* (- 1) (* (+ 2 u) (+ 2 u))) ?x45 ?x46 ?x200)))
 (let ((?x331 (* (- 1) r)))
 (let ((?x989 (* (- 1) (* (+ 2 u) (+ r u) (+ r u) v v v))))
 (let ((?x76 (+ r u)))
 (let ((?x508 (+ 2 u)))
 (let ((?x994 (* (+ (* (- 1) (* ?x508 ?x508 ?x508 ?x76 ?x76 ?x76 v v)) ?x989) (+ ?x331 (* (- 1) u) (* (- 1) (* ?x508 ?x76))) ?x642)))
 (let ((?x43 (* u u)))
 (let ((?x178 (* (- 1) ?x43)))
 (let ((?x36 (* 2 u)))
 (let ((?x577 (+ (- 4) ?x28 (* (- 6) v) ?x108 ?x124 ?x36 ?x41 ?x178 (* (+ 2 v) (+ 2 v)) ?x46 ?x200)))
 (let ((?x105 (* (- 1) v)))
 (let ((?x244 (+ r ?x105)))
 (let ((?x185 (+ 2 v)))
 (let ((?x638 (+ (* (- 1) (* ?x185 ?x185 ?x244 ?x244 ?x244 u u u)) (* (- 1) (* ?x185 ?x185 ?x185 ?x244 ?x244 u)))))
 (let (($x293 (not (= (* ?x638 (+ ?x331 v (* (- 1) (* ?x244 u))) ?x577) 0))))
 (let (($x698 (and (= (+ ?x28 ?x108 ?x124 ?x36 ?x154 ?x41 ?x178 ?x45 ?x46 ?x200) 0) (or $x293 (not (= ?x994 0))))))
 (let ((?x80 (+ u 2)))
 (let ((?x66 (- 1)))
 (let ((?x94 (- (* ?x66 ?x76 ?x76 ?x76 ?x80 ?x80 ?x80 v v) (* ?x76 ?x76 ?x80 v v v))))
 (let ((?x38 (* 2 v)))
 (let ((?x82 (+ (- (- (* 4 ?x76) (* 4 r00)) (* 2 u00)) (* 2 ?x80))))
 (let ((?x95 (* (- (+ (- (+ (- ?x82 ?x38) ?x41) (* ?x80 ?x80)) ?x45 ?x46) ?x48) (- (* ?x66 ?x76) (* ?x76 ?x80)) ?x94)))
 (let ((?x57 (+ v 2)))
 (let ((?x52 (- r v)))
 (let ((?x72 (- (* ?x66 ?x52 ?x52 ?x52 u u u ?x57 ?x57) (* ?x52 ?x52 u ?x57 ?x57 ?x57))))
 (let ((?x59 (- (+ (- (- (* 4 ?x52) (* 4 r00)) (* 2 u00)) ?x36) (* 2 ?x57))))
 (let ((?x73 (* (- (+ (- (+ ?x59 ?x41) ?x43) (* ?x57 ?x57) ?x46) ?x48) (- (* ?x66 ?x52) (* ?x52 u)) ?x72)))
 (let ((?x42 (+ (- (+ (- (- ?x28 (* 4 r00)) (* 2 u00)) ?x36) ?x38) ?x41)))
 (let (($x99 (and (= (- (+ (- ?x42 ?x43) ?x45 ?x46) ?x48) 0) (or (not (= ?x73 0)) (not (= ?x95 0))))))
 (rewrite (= $x99 $x698)))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x101 (asserted $x100)))
 (let ((@x966 (mp (mp @x101 (quant-intro (proof-bind ?x284) (= $x100 $x313)) $x313) (rewrite (= $x313 $x313)) $x313)))
 (let ((@x1670 (mp~ (mp @x966 (quant-intro (proof-bind ?x1250) (= $x313 $x1290)) $x1290) (sk (~ $x1290 $x1665)) $x1665)))
 (let ((@x153 (mp @x1670 (rewrite (= $x1665 $x336)) $x336)))
 (let ((@x334 (and-elim @x153 $x828)))
 (let ((@x1025 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x828) $x706)) @x334 $x706)))
 (let (($x497 (<= ?x361 0)))
 (let ((@x759 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x828) $x497)) @x334 $x497)))
 (let (($x122 (not (<= ?x355 0))))
 (let (($x766 (>= ?x355 0)))
 (let (($x1090 (>= ?x329 0)))
 (let (($x1094 (<= ?x329 0)))
 (let ((@x342 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x460 (not $x1094) (not $x1090))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1094)) @x759 @x1025 false) $x1094) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1090)) @x759 @x1025 false) $x1090) $x460)))
 (let ((@x351 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x388 $x122 (not $x766))) (unit-resolution (and-elim @x153 $x387) @x342 $x352) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x766)) @x759 @x1025 false) $x766) $x122)))
 ((_ th-lemma arith farkas 1 1 1) @x351 @x759 @x1025 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        49
 :arith-assert-upper        14
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-fixed-eqs           5
 :arith-max-min             448
 :arith-nonlinear-bounds    32
 :arith-num-rows            6
 :arith-pivots              1
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 75
 :arith-tableau-max-rows    6
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              4
 :max-memory                19.81
 :memory                    19.28
 :mk-bool-var               9
 :mk-clause                 12
 :num-allocs                562930
 :num-checks                1
 :propagations              14
 :rlimit-count              6123
 :time                      0.01
 :total-time                0.02)
