unsat
((set-logic NIA)
(declare-fun q!3 () Int)
(declare-fun r!1 () Int)
(declare-fun p!5 () Int)
(declare-fun s!0 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(proof
(let ((?x550 (* r!1 q!3)))
 (let ((?x41 (* q00 r00)))
 (let ((?x319 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x633 (+ ?x37 ?x319 (* (- 1) (* s!0 p!5)) ?x550)))
 (let (($x366 (>= ?x633 0)))
 (let (($x632 (= ?x633 0)))
 (let ((?x227 (* s!0 p!5)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x536 (+ ?x133 ?x41 ?x227 (* (- 1) ?x550))))
 (let ((?x243 (+ p!5 (* (- 1) q!3))))
 (let ((?x558 (+ a!4 (* (- 1) b!2))))
 (let ((?x150 (* (- 1) s!0)))
 (let ((?x741 (+ ?x150 r!1)))
 (let ((?x737 (* ?x741 ?x741 ?x558 ?x558 ?x558 ?x558 ?x558 ?x558 ?x558 ?x243 ?x243 ?x243 ?x536 s!0 s!0 s!0 b!2 b!2 b!2 b!2 q!3 q!3 q!3)))
 (let (($x735 (= ?x737 0)))
 (let ((?x563 (+ (* (- 1) p!5) q!3)))
 (let ((?x339 (+ (* (- 1) a!4) b!2)))
 (let ((?x329 (* (- 1) r!1)))
 (let ((?x364 (+ s!0 ?x329)))
 (let ((?x367 (* ?x364 ?x364 ?x364 ?x339 ?x339 ?x339 ?x339 ?x563 ?x563 ?x563 ?x536 r!1 r!1 a!4 a!4 a!4 a!4 a!4 a!4 a!4 p!5 p!5 p!5)))
 (let (($x369 (= ?x367 0)))
 (let (($x368 (not $x369)))
 (let (($x749 (or $x368 (not $x735))))
 (let ((?x358 (+ (* q00 a00 s!0) (* (- 1) (* s00 a00 q!3)) (* r00 b00 q!3) (* (- 1) (* p00 b00 s!0)) (* p00 s00 b!2) (* (- 1) (* q00 r00 b!2)))))
 (let ((?x605 (+ (* q00 r00 a!4) (* (- 1) (* p00 s00 a!4)) (* (- 1) (* r00 b00 p!5)) (* (- 1) (* q00 a00 r!1)) (* s00 a00 p!5) (* p00 b00 r!1))))
 (let ((?x226 (* p!5 b!2)))
 (let ((?x128 (* q00 a00)))
 (let (($x659 (= (+ ?x128 (* (- 1) (* p00 b00)) (* (- 1) (* a!4 q!3)) ?x226) 0)))
 (let ((?x124 (* s00 a00)))
 (let ((?x322 (+ ?x124 (* (- 1) (* r00 b00)) (* r!1 b!2) (* (- 1) (* s!0 a!4)))))
 (let (($x750 (and $x632 (= ?x322 0) $x659 (= ?x605 0) (= ?x358 0) $x749)))
 (let ((?x528 (+ (* p!5 s!0) ?x133 ?x41 (* (- 1) (* q!3 r!1)))))
 (let ((?x176 (+ r!1 ?x150)))
 (let ((?x245 (* ?x176 ?x176 ?x558 ?x558 ?x558 ?x558 ?x558 ?x558 ?x558 ?x243 ?x243 ?x243 ?x528 s!0 s!0 s!0 b!2 b!2 b!2 b!2 q!3 q!3 q!3)))
 (let ((?x337 (+ ?x329 s!0)))
 (let ((?x562 (* ?x337 ?x337 ?x337 ?x339 ?x339 ?x339 ?x339 ?x563 ?x563 ?x563 ?x528 r!1 r!1 a!4 a!4 a!4 a!4 a!4 a!4 a!4 p!5 p!5 p!5)))
 (let ((?x178 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x165 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let (($x555 (= (+ (* a!4 q!3) (* (- 1) ?x128) (* p00 b00) (* (- 1) ?x226)) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let (($x196 (and (= ?x528 0) (= (+ (* a!4 s!0) (* (- 1) (* b!2 r!1)) ?x131 ?x142) 0) $x555 (= ?x165 0) (= ?x178 0) (or (not (= ?x562 0)) (not (= ?x245 0))))))
 (let (($x171 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x117 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x147 (+ ?x33 ?x133 ?x41 ?x117)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x652 (* ?x252 ?x252 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x147 s s s b b b b q q q)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x265 (+ ?x253 q)))
 (let ((?x533 (* (- 1) a)))
 (let ((?x529 (+ ?x533 b)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x318 (+ ?x313 s)))
 (let ((?x618 (* ?x318 ?x318 ?x318 ?x529 ?x529 ?x529 ?x529 ?x265 ?x265 ?x265 ?x147 r r a a a a a a a p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x304 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x309 (= ?x304 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x240 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x241 (= ?x240 0)))
 (let ((?x129 (* p00 b00)))
 (let ((?x128 (* q00 a00)))
 (let ((?x172 (* (- 1) ?x128)))
 (let (($x175 (= (+ (* a q) ?x172 ?x129 (* (- 1) (* p b))) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let (($x152 (= ?x147 0)))
 (and $x152 $x157 $x175 $x241 $x309 (or (not (= ?x618 0)) (not (= ?x652 0)))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x296 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x213 (* ?x252 ?x252 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x310 s s s b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x111 (+ q ?x253)))
 (let ((?x533 (* (- 1) a)))
 (let ((?x232 (+ b ?x533)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x111 ?x111 ?x111 ?x221 r r a a a a a a a p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x197 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x302 (* p00 s00 a)))
 (let ((?x280 (* b00 r00 p)))
 (let ((?x316 (+ ?x280 ?x302 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x570 (* q a)))
 (let (($x571 (= (+ ?x570 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x576 (* r b)))
 (let (($x299 (= (+ ?x576 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x231 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (and $x231 $x299 $x571 (= ?x316 0) $x207 $x182))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x177 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x117 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x147 (+ ?x33 ?x133 ?x41 ?x117)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x652 (* ?x252 ?x252 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x147 s s s b b b b q q q)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x265 (+ ?x253 q)))
 (let ((?x533 (* (- 1) a)))
 (let ((?x529 (+ ?x533 b)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x318 (+ ?x313 s)))
 (let ((?x618 (* ?x318 ?x318 ?x318 ?x529 ?x529 ?x529 ?x529 ?x265 ?x265 ?x265 ?x147 r r a a a a a a a p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x304 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x309 (= ?x304 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x240 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x241 (= ?x240 0)))
 (let ((?x129 (* p00 b00)))
 (let ((?x128 (* q00 a00)))
 (let ((?x172 (* (- 1) ?x128)))
 (let (($x175 (= (+ (* a q) ?x172 ?x129 (* (- 1) (* p b))) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let (($x152 (= ?x147 0)))
 (let (($x669 (and $x152 $x157 $x175 $x241 $x309 (or (not (= ?x618 0)) (not (= ?x652 0))))))
 (let ((?x213 (* ?x252 ?x252 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 (+ (* (- 1) (* ?x252 q)) (* ?x269 s) ?x133 ?x41) s s s b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q ?x253) r)) (* (+ s ?x313) p) ?x133 ?x41)))
 (let ((?x111 (+ q ?x253)))
 (let ((?x232 (+ b ?x533)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x111 ?x111 ?x111 ?x221 r r a a a a a a a p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x197 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x302 (* p00 s00 a)))
 (let ((?x280 (* b00 r00 p)))
 (let ((?x316 (+ ?x280 ?x302 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x570 (* q a)))
 (let (($x571 (= (+ ?x570 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x576 (* r b)))
 (let (($x299 (= (+ ?x576 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x231 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x262 (and $x231 $x299 $x571 (= ?x316 0) $x207 $x182)))
 (rewrite (= $x262 $x669))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x234 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x213 (* ?x252 ?x252 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x310 s s s b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x111 (+ q ?x253)))
 (let ((?x533 (* (- 1) a)))
 (let ((?x232 (+ b ?x533)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x111 ?x111 ?x111 ?x221 r r a a a a a a a p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x197 0)))
 (let ((?x254 (* a00 s00 p)))
 (let ((?x314 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x146 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x314 ?x254 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x121 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x273 (* s a)))
 (let (($x251 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x273 ?x51) 0)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) $x251 $x121 (= ?x146 0) $x207 $x182)))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x323 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x213 (* ?x252 ?x252 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x310 s s s b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x111 (+ q ?x253)))
 (let ((?x533 (* (- 1) a)))
 (let ((?x232 (+ b ?x533)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x111 ?x111 ?x111 ?x221 r r a a a a a a a p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x197 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x302 (* p00 s00 a)))
 (let ((?x280 (* b00 r00 p)))
 (let ((?x316 (+ ?x280 ?x302 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x570 (* q a)))
 (let (($x571 (= (+ ?x570 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x576 (* r b)))
 (let (($x299 (= (+ ?x576 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x231 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x262 (and $x231 $x299 $x571 (= ?x316 0) $x207 $x182)))
 (let ((?x254 (* a00 s00 p)))
 (let ((?x314 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x274 (= (+ (* (- 1) ?x280) (* (- 1) ?x302) ?x65 ?x314 ?x254 (* (- 1) ?x69)) 0)))
 (let (($x121 (= (+ (* (- 1) ?x570) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x251 (= (+ (* (- 1) ?x576) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x261 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) $x251 $x121 $x274 $x207 $x182)))
 (rewrite (= $x261 $x262)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x102 (- b a)))
 (let ((?x97 (- s r)))
 (let ((?x95 (- q p)))
 (let ((?x31 (- 1)))
 (let ((?x41 (* q00 r00)))
 (let ((?x103 (* (+ (- (+ (* ?x31 ?x95 r) (* p ?x97)) (* p00 s00)) ?x41) ?x31 a a p p p r ?x31 a a a ?x102 ?x102 ?x95 ?x97 ?x31 a ?x95 ?x95 r ?x97 ?x97 a ?x102 ?x102)))
 (let ((?x91 (- a b)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x92 (* (+ (- (+ (* ?x31 q ?x84) (* ?x86 s)) (* p00 s00)) ?x41) ?x31 ?x91 ?x91 ?x86 ?x86 ?x86 ?x84 ?x31 ?x91 ?x91 ?x91 b b q s ?x31 ?x91 q q ?x84 s s ?x91 b b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x236 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x213 (* ?x252 ?x252 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x310 s s s b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x111 (+ q ?x253)))
 (let ((?x533 (* (- 1) a)))
 (let ((?x232 (+ b ?x533)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x111 ?x111 ?x111 ?x221 r r a a a a a a a p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x197 0)))
 (let ((?x254 (* a00 s00 p)))
 (let ((?x314 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x146 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x314 ?x254 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x121 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x273 (* s a)))
 (let (($x251 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x273 ?x51) 0)))
 (let (($x261 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) $x251 $x121 (= ?x146 0) $x207 $x182)))
 (let ((?x102 (- b a)))
 (let ((?x97 (- s r)))
 (let ((?x95 (- q p)))
 (let ((?x31 (- 1)))
 (let ((?x103 (* (+ (- (+ (* ?x31 ?x95 r) (* p ?x97)) ?x37) ?x41) ?x31 a a p p p r ?x31 a a a ?x102 ?x102 ?x95 ?x97 ?x31 a ?x95 ?x95 r ?x97 ?x97 a ?x102 ?x102)))
 (let ((?x91 (- a b)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x92 (* (+ (- (+ (* ?x31 q ?x84) (* ?x86 s)) ?x37) ?x41) ?x31 ?x91 ?x91 ?x86 ?x86 ?x86 ?x84 ?x31 ?x91 ?x91 ?x91 b b q s ?x31 ?x91 q q ?x84 s s ?x91 b b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x107 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0))))))
 (rewrite (= $x107 $x261))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x132 (mp (mp @x109 (quant-intro (proof-bind ?x236) (= $x108 $x234)) $x234) (rewrite (= $x234 $x234)) $x234)))
 (let ((@x275 (mp (mp @x132 (quant-intro (proof-bind ?x323) (= $x234 $x296)) $x296) (quant-intro (proof-bind ?x177) (= $x296 $x171)) $x171)))
 (let ((@x747 (mp (mp~ @x275 (sk (~ $x171 $x196)) $x196) (rewrite (= $x196 $x750)) $x750)))
 (let ((@x745 (and-elim @x747 $x632)))
 (let ((@x362 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x632) $x366)) @x745 $x366)))
 (let (($x365 (<= ?x633 0)))
 (let ((@x537 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x632) $x365)) @x745 $x365)))
 (let (($x660 (not (<= ?x367 0))))
 (let (($x739 (>= ?x737 0)))
 (let (($x517 (<= ?x737 0)))
 (let ((@x662 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x735 (not $x517) (not $x739))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x517)) @x537 @x362 false) $x517) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x739)) @x537 @x362 false) $x739) $x735)))
 (let (($x535 (>= ?x367 0)))
 (let ((@x613 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x369 $x660 (not $x535))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x535)) @x537 @x362 false) $x535) (unit-resolution (and-elim @x747 $x749) @x662 $x368) $x660)))
 ((_ th-lemma arith farkas 1 1 1) @x613 @x537 @x362 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             352
 :arith-nonlinear-horner    42
 :arith-num-rows            12
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 51
 :arith-tableau-max-rows    12
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                3.66
 :memory                    3.19
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                1245149
 :num-checks                1
 :propagations              19
 :rlimit-count              8743
 :time                      0.01
 :total-time                0.02)
