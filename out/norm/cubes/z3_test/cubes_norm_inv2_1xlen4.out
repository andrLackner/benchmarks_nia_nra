unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x792 (* k!2 n!0)))
 (let ((?x359 (+ ?x792 (* (- 1) k!2) (* 2 n!0) (* (- 3) c!3))))
 (let (($x484 (<= ?x359 (- 1))))
 (let (($x2478 (= ?x359 (- 1))))
 (let ((?x2171 (* 23 (* k!2 k!2 k!2 k!2 n!0))))
 (let ((?x627 (* (- 324) (* k!2 k!2 n!0))))
 (let ((?x1080 (+ k!2 c!3)))
 (let ((?x1584 (+ m!1 k!2)))
 (let ((?x726 (+ 6 m!1)))
 (let ((?x721 (+ 1 n!0)))
 (let ((?x1232 (* (- 9) (* k!2 k!2 k!2 n!0 n!0))))
 (let ((?x1176 (* k!2 k!2)))
 (let ((?x1650 (* (- 1152) ?x1176)))
 (let ((?x782 (* 468 c!3)))
 (let ((?x2003 (* (- 22) (* k!2 k!2 k!2 n!0))))
 (let ((?x1855 (* 468 k!2)))
 (let ((?x1780 (* 23 (* k!2 k!2 k!2 k!2))))
 (let ((?x890 (* (- 972) (* c!3 c!3))))
 (let ((?x1649 (* 324 ?x792)))
 (let ((?x143 (* 23 (* k!2 k!2 k!2))))
 (let ((?x1931 (+ (* 324 (* n!0 c!3)) ?x143 (* 2 (* m!1 m!1 m!1 k!2 k!2)) (* (- 8) (* m!1 m!1 k!2 n!0 c!3)) (* (- 4) (* m!1 m!1 k!2 k!2 n!0)) (* 9 (* ?x721 ?x721 ?x721 ?x721 ?x726 ?x726 ?x1584 ?x1080)) (* (- 3) (* m!1 m!1 k!2 k!2)) (* 9 (* m!1 m!1 k!2 n!0)) (* (- 25) (* m!1 m!1 k!2 c!3)) (* 7 (* m!1 m!1 m!1 k!2)) (* (- 662) (* m!1 k!2 c!3)) (* 9 (* m!1 m!1 n!0 c!3)) (* (- 9) (* m!1 k!2 k!2 n!0 n!0)) (* (- 18) (* m!1 k!2 n!0 n!0 c!3)) (* 9 (* ?x721 ?x721 ?x1584 ?x1080 ?x1080 ?x1080)) (* 5 (* ?x721 ?x721 ?x726 ?x1584 ?x1584 ?x1584 ?x1080)) (* (- 24) (* m!1 k!2)) (* (- 11) (* m!1 m!1 k!2)) (* (- 1) (* ?x721 ?x1584 ?x1584 ?x1584 ?x1080 ?x1080)) (* 5 (* ?x721 ?x721 ?x721 ?x726 ?x726 ?x1584 ?x1584)) (* (- 9) (* k!2 n!0 n!0 c!3 c!3)) (* (- 4) (* m!1 m!1 n!0 c!3 c!3)) (* (- 325) (* m!1 k!2 k!2)) (* 18 (* ?x721 ?x721 ?x726 ?x1584 ?x1584 ?x1080 ?x1080)) (* 108 (* m!1 k!2 n!0)) (* 108 (* m!1 n!0 c!3)) (* (- 22) (* m!1 m!1 c!3 c!3)) (* 10 (* k!2 k!2 c!3)) (* (- 9) (* m!1 n!0 n!0 c!3 c!3)) (* (- 18) (* k!2 k!2 n!0 n!0 c!3)) ?x1649 (* (- 4) (* ?x721 ?x721 ?x721 ?x726 ?x726 ?x1584)) (* (- 1) (* ?x721 ?x721 ?x726 ?x1584 ?x1584 ?x1584 ?x1584 ?x1080)) (* (- 4) (* ?x721 ?x721 ?x726 ?x1584 ?x1584 ?x1080)) (* 64 (* m!1 k!2 c!3 c!3)) (* 86 (* m!1 k!2 k!2 c!3)) (* 40 (* m!1 k!2 k!2 k!2)) ?x890 ?x1780 ?x1855 (* (- 9) (* ?x721 ?x721 ?x721 ?x721 ?x726 ?x726 ?x1584)) ?x2003 (* 18 (* ?x721 ?x721 ?x721 ?x726 ?x726 ?x1584 ?x1080)) (* m!1 m!1 m!1 m!1 k!2) (* 9 (* ?x721 ?x721 ?x721 ?x726 ?x1584 ?x1584 ?x1080 ?x1080)) ?x782 (* (- 11) (* m!1 m!1 c!3)) ?x1650 (* (- 24) (* m!1 c!3)) ?x1232 (* 28 (* m!1 k!2 k!2 k!2 n!0)) (* (- 22) (* k!2 n!0 c!3 c!3)) (* (- 130) (* m!1 n!0 c!3 c!3)) (* 64 (* k!2 k!2 k!2 c!3)) (* m!1 m!1 m!1 m!1 c!3) (* 64 (* k!2 k!2 k!2 n!0 c!3)) (* 64 (* m!1 k!2 n!0 c!3 c!3)) (* 59 (* k!2 k!2 c!3 c!3)) (* (- 1) (* ?x721 ?x721 ?x721 ?x726 ?x726 ?x1584 ?x1584 ?x1584)) (* 18 (* k!2 n!0 c!3 c!3 c!3)) (* (- 2124) (* k!2 c!3)) (* 18 (* k!2 c!3 c!3 c!3)) (* (- 130) (* m!1 k!2 k!2 n!0)) (* (- 9) (* ?x721 ?x721 ?x721 ?x726 ?x1584 ?x1584 ?x1080)) ?x627 (* (- 44) (* k!2 k!2 n!0 c!3)) ?x2171 (* (- 260) (* m!1 k!2 n!0 c!3)) (* 74 (* m!1 k!2 k!2 n!0 c!3)) (* 18 (* m!1 n!0 c!3 c!3 c!3)) (* 7 (* m!1 m!1 m!1 c!3)) (* (- 324) (* n!0 c!3 c!3)) (* m!1 m!1 k!2 k!2 c!3) (* (- 337) (* m!1 c!3 c!3)) (* m!1 m!1 k!2 k!2 k!2) (* 18 (* m!1 c!3 c!3 c!3)) (* (- 13) (* k!2 c!3 c!3)) (* (- 648) (* k!2 n!0 c!3)) (* 2 (* m!1 m!1 m!1 k!2 c!3)) (* 59 (* k!2 k!2 n!0 c!3 c!3)))))
 (let (($x514 (= ?x1931 0)))
 (let (($x2108 (not $x514)))
 (let ((?x1278 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x1277 (= ?x1278 1)))
 (let ((?x1056 (* (- 1) ?x1176)))
 (let ((?x1141 (* 18 c!3)))
 (let ((?x1055 (* (- 9) n!0)))
 (let ((?x1175 (* 5 k!2)))
 (let ((?x381 (+ (* 9 (* n!0 c!3)) ?x1175 ?x1055 ?x1141 ?x1056)))
 (let (($x124 (= ?x381 4)))
 (let ((?x1117 (+ m!1 (* (- 6) n!0))))
 (let (($x1157 (= ?x1117 6)))
 (let (($x482 (and $x1157 $x124 $x2478 $x1277 $x2108)))
 (let ((?x764 (+ c!3 k!2)))
 (let ((?x761 (+ k!2 m!1)))
 (let ((?x2476 (+ ?x782 ?x1855 ?x1650 ?x1649 (* 324 (* c!3 n!0)) (* c!3 k!2 k!2 m!1 m!1) (* k!2 k!2 k!2 m!1 m!1) (* (- 337) (* c!3 c!3 m!1)) (* 2 (* c!3 k!2 m!1 m!1 m!1)) (* 2 (* k!2 k!2 m!1 m!1 m!1)) (* c!3 m!1 m!1 m!1 m!1) (* k!2 m!1 m!1 m!1 m!1) (* (- 13) (* c!3 c!3 k!2)) (* (- 22) (* c!3 c!3 k!2 n!0)) (* (- 44) (* c!3 k!2 k!2 n!0)) ?x2003 (* (- 130) (* c!3 c!3 m!1 n!0)) (* (- 260) (* c!3 k!2 m!1 n!0)) (* (- 130) (* k!2 k!2 m!1 n!0)) (* 18 (* c!3 c!3 c!3 k!2)) (* (- 2124) (* c!3 k!2)) ?x890 (* (- 648) (* c!3 k!2 n!0)) (* 28 (* k!2 k!2 k!2 m!1 n!0)) (* 74 (* c!3 k!2 k!2 m!1 n!0)) (* 18 (* c!3 c!3 c!3 k!2 n!0)) (* 59 (* c!3 c!3 k!2 k!2 n!0)) (* 64 (* c!3 k!2 k!2 k!2 n!0)) ?x2171 (* 18 (* c!3 c!3 c!3 m!1 n!0)) (* 64 (* c!3 c!3 k!2 m!1 n!0)) (* 59 (* c!3 c!3 k!2 k!2)) (* (- 324) (* c!3 c!3 n!0)) (* 64 (* c!3 k!2 k!2 k!2)) ?x1780 (* 18 (* c!3 c!3 c!3 m!1)) (* 64 (* c!3 c!3 k!2 m!1)) (* 86 (* c!3 k!2 k!2 m!1)) (* 40 (* k!2 k!2 k!2 m!1)) ?x627 (* 18 (* ?x721 ?x721 ?x721 ?x726 ?x726 ?x761 ?x764)) (* (- 9) (* ?x721 ?x721 ?x721 ?x721 ?x726 ?x726 ?x761)) (* (- 1) (* ?x721 ?x761 ?x761 ?x761 ?x764 ?x764)) (* (- 1) (* ?x721 ?x721 ?x721 ?x726 ?x726 ?x761 ?x761 ?x761)) (* 5 (* ?x721 ?x721 ?x726 ?x761 ?x761 ?x761 ?x764)) (* (- 4) (* c!3 c!3 m!1 m!1 n!0)) (* (- 8) (* c!3 k!2 m!1 m!1 n!0)) (* (- 4) (* k!2 k!2 m!1 m!1 n!0)) (* (- 22) (* c!3 c!3 m!1 m!1)) (* (- 25) (* c!3 k!2 m!1 m!1)) (* (- 3) (* k!2 k!2 m!1 m!1)) (* 9 (* ?x721 ?x721 ?x721 ?x721 ?x726 ?x726 ?x761 ?x764)) (* 9 (* ?x721 ?x721 ?x761 ?x764 ?x764 ?x764)) (* 10 (* c!3 k!2 k!2)) (* 5 (* ?x721 ?x721 ?x721 ?x726 ?x726 ?x761 ?x761)) (* (- 9) (* c!3 c!3 k!2 n!0 n!0)) (* (- 18) (* c!3 k!2 k!2 n!0 n!0)) ?x1232 (* (- 9) (* c!3 c!3 m!1 n!0 n!0)) (* (- 18) (* c!3 k!2 m!1 n!0 n!0)) (* (- 9) (* k!2 k!2 m!1 n!0 n!0)) (* 9 (* c!3 m!1 m!1 n!0)) (* 9 (* k!2 m!1 m!1 n!0)) (* (- 24) (* c!3 m!1)) (* (- 24) (* k!2 m!1)) (* (- 11) (* k!2 m!1 m!1)) (* (- 11) (* c!3 m!1 m!1)) (* 108 (* c!3 m!1 n!0)) (* 108 (* k!2 m!1 n!0)) (* 18 (* ?x721 ?x721 ?x726 ?x761 ?x761 ?x764 ?x764)) (* (- 325) (* k!2 k!2 m!1)) (* 7 (* c!3 m!1 m!1 m!1)) (* 7 (* k!2 m!1 m!1 m!1)) (* 9 (* ?x721 ?x721 ?x721 ?x726 ?x761 ?x761 ?x764 ?x764)) (* (- 4) (* ?x721 ?x721 ?x726 ?x761 ?x761 ?x764)) (* (- 9) (* ?x721 ?x721 ?x721 ?x726 ?x761 ?x761 ?x764)) (* (- 662) (* c!3 k!2 m!1)) ?x143 (* (- 1) (* ?x721 ?x721 ?x726 ?x761 ?x761 ?x761 ?x761 ?x764)) (* (- 4) (* ?x721 ?x721 ?x721 ?x726 ?x726 ?x761)))))
 (let (($x1370 (and $x1157 (= (+ ?x1141 ?x1175 ?x1055 ?x1056 (* 9 (* c!3 n!0))) 4) (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x792)) 1) $x1277 (not (= ?x2476 0)))))
 (let (($x2249 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x409 (+ 1 n)))
 (let ((?x2405 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x2007 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2883 (* 108 (* k m n))))
 (let ((?x2882 (* 108 (* c m n))))
 (let ((?x1548 (* 9 (* k m m n))))
 (let ((?x1546 (* 9 (* c m m n))))
 (let ((?x2874 (* (- 9) (* k k m n n))))
 (let ((?x2871 (* (- 9) (* c c m n n))))
 (let ((?x2870 (* (- 9) (* k k k n n))))
 (let ((?x2867 (* (- 9) (* c c k n n))))
 (let ((?x2821 (* (- 4) (* k k m m n))))
 (let ((?x2819 (* (- 4) (* c c m m n))))
 (let ((?x402 (* k m m m m)))
 (let ((?x400 (* c m m m m)))
 (let ((?x390 (* k k k m m)))
 (let ((?x388 (* c k k m m)))
 (let ((?x172 (* c n)))
 (let ((?x2769 (* 324 ?x172)))
 (let ((?x55 (* k n)))
 (let ((?x2764 (* 324 ?x55)))
 (let ((?x2762 (* 468 k)))
 (let ((?x2763 (* 468 c)))
 (let ((?x2443 (+ ?x2763 ?x2762 (* (- 1152) (* k k)) ?x2764 ?x2769 ?x388 ?x390 (* (- 337) (* c c m)) (* 2 (* c k m m m)) (* 2 (* k k m m m)) ?x400 ?x402 (* (- 13) (* c c k)) (* (- 22) (* c c k n)) (* (- 44) (* c k k n)) (* (- 22) (* k k k n)) (* (- 130) (* c c m n)) (* (- 260) (* c k m n)) (* (- 130) (* k k m n)) (* 18 (* c c c k)) (* (- 2124) (* c k)) (* (- 972) (* c c)) (* (- 648) (* c k n)) (* 28 (* k k k m n)) (* 74 (* c k k m n)) (* 18 (* c c c k n)) (* 59 (* c c k k n)) (* 64 (* c k k k n)) (* 23 (* k k k k n)) (* 18 (* c c c m n)) (* 64 (* c c k m n)) (* 59 (* c c k k)) (* (- 324) (* c c n)) (* 64 (* c k k k)) (* 23 (* k k k k)) (* 18 (* c c c m)) (* 64 (* c c k m)) (* 86 (* c k k m)) (* 40 (* k k k m)) (* (- 324) (* k k n)) (* 18 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)) (* (- 9) (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)) (* (- 1) (* ?x409 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70 ?x70)) (* 5 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x69)) ?x2819 (* (- 8) (* c k m m n)) ?x2821 (* (- 22) (* c c m m)) (* (- 25) (* c k m m)) (* (- 3) (* k k m m)) (* 9 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)) (* 9 (* ?x409 ?x409 ?x70 ?x69 ?x69 ?x69)) (* 10 (* c k k)) (* 5 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70)) ?x2867 (* (- 18) (* c k k n n)) ?x2870 ?x2871 (* (- 18) (* c k m n n)) ?x2874 ?x1546 ?x1548 (* (- 24) (* c m)) (* (- 24) (* k m)) (* (- 11) (* k m m)) (* (- 11) (* c m m)) ?x2882 ?x2883 (* 18 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)) (* (- 325) (* k k m)) (* 7 (* c m m m)) (* 7 (* k m m m)) (* 9 ?x2007) (* (- 4) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* (- 9) (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* (- 662) (* c k m)) (* 23 (* k k k)) (* (- 1) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69)) (* (- 4) ?x2405))))
 (let (($x324 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x286 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x238 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 ?x172))))
 (let (($x234 (= ?x238 4)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (and $x150 $x234 $x286 $x324 (not (= ?x2443 0))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1487 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x409 (+ 1 n)))
 (let ((?x1076 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))
 (let ((?x2185 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x938 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x926 (* ?x409 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2450 (+ (* (- 1) (* ?x334 ?x334 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x70 ?x69 ?x69)) (* (- 5) (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70)) (* (- 18) (* ?x409 ?x70 ?x69 ?x69 ?x69)) (* (- 18) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)) (* (- 5) (* ?x409 ?x70 ?x70 ?x69 ?x69)) (* (- 9) (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)) ?x926 (* 9 (* ?x409 ?x334 ?x334 ?x69 ?x69)) ?x938 (* (- 5) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)) (* 9 (* ?x409 ?x409 ?x70 ?x69 ?x69)) (* 9 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)) (* (- 4) (* ?x334 ?x334 ?x69)) ?x2185 (* (- 9) (* ?x409 ?x334 ?x334 ?x69)) (* 9 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* 5 (* ?x334 ?x334 ?x70 ?x69)) (* 18 (* ?x334 ?x334 ?x69 ?x69)) (* (- 18) (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)) (* (- 9) (* ?x409 ?x409 ?x70 ?x69 ?x69 ?x69)) (* (- 9) ?x1076))))
 (let (($x1301 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2632 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x422 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (and $x150 (= ?x422 (- 4)) $x2632 $x1301 (not (= ?x2450 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x2454 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x409 (+ 1 n)))
 (let ((?x2405 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x2007 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2883 (* 108 (* k m n))))
 (let ((?x2882 (* 108 (* c m n))))
 (let ((?x1548 (* 9 (* k m m n))))
 (let ((?x1546 (* 9 (* c m m n))))
 (let ((?x2874 (* (- 9) (* k k m n n))))
 (let ((?x2871 (* (- 9) (* c c m n n))))
 (let ((?x2870 (* (- 9) (* k k k n n))))
 (let ((?x2867 (* (- 9) (* c c k n n))))
 (let ((?x2821 (* (- 4) (* k k m m n))))
 (let ((?x2819 (* (- 4) (* c c m m n))))
 (let ((?x402 (* k m m m m)))
 (let ((?x400 (* c m m m m)))
 (let ((?x390 (* k k k m m)))
 (let ((?x388 (* c k k m m)))
 (let ((?x172 (* c n)))
 (let ((?x2769 (* 324 ?x172)))
 (let ((?x55 (* k n)))
 (let ((?x2764 (* 324 ?x55)))
 (let ((?x2762 (* 468 k)))
 (let ((?x2763 (* 468 c)))
 (let ((?x2443 (+ ?x2763 ?x2762 (* (- 1152) (* k k)) ?x2764 ?x2769 ?x388 ?x390 (* (- 337) (* c c m)) (* 2 (* c k m m m)) (* 2 (* k k m m m)) ?x400 ?x402 (* (- 13) (* c c k)) (* (- 22) (* c c k n)) (* (- 44) (* c k k n)) (* (- 22) (* k k k n)) (* (- 130) (* c c m n)) (* (- 260) (* c k m n)) (* (- 130) (* k k m n)) (* 18 (* c c c k)) (* (- 2124) (* c k)) (* (- 972) (* c c)) (* (- 648) (* c k n)) (* 28 (* k k k m n)) (* 74 (* c k k m n)) (* 18 (* c c c k n)) (* 59 (* c c k k n)) (* 64 (* c k k k n)) (* 23 (* k k k k n)) (* 18 (* c c c m n)) (* 64 (* c c k m n)) (* 59 (* c c k k)) (* (- 324) (* c c n)) (* 64 (* c k k k)) (* 23 (* k k k k)) (* 18 (* c c c m)) (* 64 (* c c k m)) (* 86 (* c k k m)) (* 40 (* k k k m)) (* (- 324) (* k k n)) (* 18 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)) (* (- 9) (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)) (* (- 1) (* ?x409 ?x70 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70 ?x70)) (* 5 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x69)) ?x2819 (* (- 8) (* c k m m n)) ?x2821 (* (- 22) (* c c m m)) (* (- 25) (* c k m m)) (* (- 3) (* k k m m)) (* 9 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)) (* 9 (* ?x409 ?x409 ?x70 ?x69 ?x69 ?x69)) (* 10 (* c k k)) (* 5 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70)) ?x2867 (* (- 18) (* c k k n n)) ?x2870 ?x2871 (* (- 18) (* c k m n n)) ?x2874 ?x1546 ?x1548 (* (- 24) (* c m)) (* (- 24) (* k m)) (* (- 11) (* k m m)) (* (- 11) (* c m m)) ?x2882 ?x2883 (* 18 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)) (* (- 325) (* k k m)) (* 7 (* c m m m)) (* 7 (* k m m m)) (* 9 ?x2007) (* (- 4) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* (- 9) (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* (- 662) (* c k m)) (* 23 (* k k k)) (* (- 1) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69)) (* (- 4) ?x2405))))
 (let (($x324 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x286 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x238 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 ?x172))))
 (let (($x234 (= ?x238 4)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (let (($x1448 (and $x150 $x234 $x286 $x324 (not (= ?x2443 0)))))
 (let ((?x2185 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x938 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x926 (* ?x409 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2450 (+ (* (- 1) (* ?x334 ?x334 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x70 ?x69 ?x69)) (* (- 5) (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70)) (* (- 18) (* ?x409 ?x70 ?x69 ?x69 ?x69)) (* (- 18) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)) (* (- 5) (* ?x409 ?x70 ?x70 ?x69 ?x69)) (* (- 9) ?x2007) ?x926 (* 9 (* ?x409 ?x334 ?x334 ?x69 ?x69)) ?x938 (* (- 5) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x69)) (* 4 ?x2405) (* 9 (* ?x409 ?x409 ?x70 ?x69 ?x69)) (* 9 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)) (* (- 4) (* ?x334 ?x334 ?x69)) ?x2185 (* (- 9) (* ?x409 ?x334 ?x334 ?x69)) (* 9 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* 5 (* ?x334 ?x334 ?x70 ?x69)) (* 18 (* ?x334 ?x334 ?x69 ?x69)) (* (- 18) (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)) (* (- 9) (* ?x409 ?x409 ?x70 ?x69 ?x69 ?x69)) (* (- 9) (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))))
 (let (($x1301 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2632 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x422 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1313 (and $x150 (= ?x422 (- 4)) $x2632 $x1301 (not (= ?x2450 0)))))
 (rewrite (= $x1313 $x1448))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x117 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x73 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x75 (+ (* (- 1) ?x69 ?x70 ?x70 ?x71 ?x71) (* 4 ?x69 ?x69 ?x70 ?x73))))
 (let ((?x82 (- (- ?x75 (* 5 ?x70 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73)) (* 18 ?x69 ?x69 ?x69 ?x70 ?x73))))
 (let ((?x84 (- (- ?x82 (* 18 ?x69 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73)) (* 5 ?x69 ?x69 ?x70 ?x70 ?x73))))
 (let ((?x89 (+ (- ?x84 (* 9 ?x69 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73 ?x73)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x73) (* 9 ?x69 ?x69 ?x71 ?x71 ?x73) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73))))
 (let ((?x95 (+ (- ?x89 (* 5 ?x69 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73)) (* 4 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73) (* 9 ?x69 ?x69 ?x70 ?x73 ?x73) (* 9 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73))))
 (let ((?x99 (+ (- ?x95 (* 4 ?x69 ?x71 ?x71)) (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73))))
 (let ((?x106 (+ (- ?x99 (* 9 ?x69 ?x71 ?x71 ?x73)) (* 9 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73 ?x73) (* 4 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73) (* 5 ?x69 ?x70 ?x71 ?x71) (* 18 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x111 (- (- ?x106 (* 18 ?x69 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73)) (* 9 ?x69 ?x69 ?x69 ?x70 ?x73 ?x73))))
 (let (($x113 (= (- ?x111 (* 9 ?x69 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x113))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1465 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x334 (+ 6 m)))
 (let ((?x409 (+ 1 n)))
 (let ((?x1076 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)))
 (let ((?x2185 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x938 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70 ?x70)))
 (let ((?x926 (* ?x409 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2450 (+ (* (- 1) (* ?x334 ?x334 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x70 ?x69 ?x69)) (* (- 5) (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x70)) (* (- 18) (* ?x409 ?x70 ?x69 ?x69 ?x69)) (* (- 18) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)) (* (- 5) (* ?x409 ?x70 ?x70 ?x69 ?x69)) (* (- 9) (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69 ?x69)) ?x926 (* 9 (* ?x409 ?x334 ?x334 ?x69 ?x69)) ?x938 (* (- 5) (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)) (* 9 (* ?x409 ?x409 ?x70 ?x69 ?x69)) (* 9 (* ?x409 ?x409 ?x409 ?x409 ?x334 ?x334 ?x70)) (* (- 4) (* ?x334 ?x334 ?x69)) ?x2185 (* (- 9) (* ?x409 ?x334 ?x334 ?x69)) (* 9 (* ?x409 ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* 4 (* ?x409 ?x409 ?x334 ?x70 ?x70 ?x69)) (* 5 (* ?x334 ?x334 ?x70 ?x69)) (* 18 (* ?x334 ?x334 ?x69 ?x69)) (* (- 18) (* ?x409 ?x409 ?x409 ?x334 ?x334 ?x70 ?x69)) (* (- 9) (* ?x409 ?x409 ?x70 ?x69 ?x69 ?x69)) (* (- 9) ?x1076))))
 (let (($x1301 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2632 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x422 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x150 (= (+ m (* (- 6) n)) 6)))
 (let (($x1313 (and $x150 (= ?x422 (- 4)) $x2632 $x1301 (not (= ?x2450 0)))))
 (let ((?x73 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x75 (+ (* (- 1) ?x69 ?x70 ?x70 ?x71 ?x71) (* 4 ?x69 ?x69 ?x70 ?x73))))
 (let ((?x82 (- (- ?x75 (* 5 ?x70 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73)) (* 18 ?x69 ?x69 ?x69 ?x70 ?x73))))
 (let ((?x84 (- (- ?x82 (* 18 ?x69 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73)) (* 5 ?x69 ?x69 ?x70 ?x70 ?x73))))
 (let ((?x89 (+ (- ?x84 (* 9 ?x69 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73 ?x73)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x73) (* 9 ?x69 ?x69 ?x71 ?x71 ?x73) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73))))
 (let ((?x95 (+ (- ?x89 (* 5 ?x69 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73)) (* 4 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73) (* 9 ?x69 ?x69 ?x70 ?x73 ?x73) (* 9 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73))))
 (let ((?x99 (+ (- ?x95 (* 4 ?x69 ?x71 ?x71)) (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x73 ?x73))))
 (let ((?x106 (+ (- ?x99 (* 9 ?x69 ?x71 ?x71 ?x73)) (* 9 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73 ?x73) (* 4 ?x69 ?x70 ?x70 ?x71 ?x73 ?x73) (* 5 ?x69 ?x70 ?x71 ?x71) (* 18 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x111 (- (- ?x106 (* 18 ?x69 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73)) (* 9 ?x69 ?x69 ?x69 ?x70 ?x73 ?x73))))
 (let (($x113 (= (- ?x111 (* 9 ?x69 ?x70 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x116 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x113)))))
 (rewrite (= $x116 $x1313))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x118 (asserted $x117)))
 (let ((@x1193 (mp (mp @x118 (quant-intro (proof-bind ?x1465) (= $x117 $x1487)) $x1487) (rewrite (= $x1487 $x1487)) $x1487)))
 (let ((@x2475 (mp~ (mp @x1193 (quant-intro (proof-bind ?x2454) (= $x1487 $x2249)) $x2249) (sk (~ $x2249 $x1370)) $x1370)))
 (let ((@x160 (mp @x2475 (rewrite (= $x1370 $x482)) $x482)))
 (let ((@x173 (and-elim @x160 $x2478)))
 (let ((@x925 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2478) $x484)) @x173 $x484)))
 (let (($x673 (>= ?x359 (- 1))))
 (let ((@x1929 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2478) $x673)) @x173 $x673)))
 (let (($x1428 (<= ?x381 4)))
 (let ((@x125 (and-elim @x160 $x124)))
 (let ((@x1933 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x124) $x1428)) @x125 $x1428)))
 (let (($x1434 (>= ?x381 4)))
 (let ((@x728 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x124) $x1434)) @x125 $x1434)))
 (let (($x1118 (<= ?x1278 1)))
 (let ((@x136 (and-elim @x160 $x1277)))
 (let ((@x2157 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1277) $x1118)) @x136 $x1118)))
 (let (($x596 (>= ?x1278 1)))
 (let ((@x1041 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1277) $x596)) @x136 $x596)))
 (let (($x387 (<= ?x1117 6)))
 (let ((@x2374 (and-elim @x160 $x1157)))
 (let ((@x676 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1157) $x387)) @x2374 $x387)))
 (let (($x1678 (>= ?x1117 6)))
 (let ((@x800 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1157) $x1678)) @x2374 $x1678)))
 (let (($x723 (not (<= ?x1931 0))))
 (let (($x1687 (>= ?x1931 0)))
 (let ((@x634 ((_ th-lemma arith) (hypothesis (not $x1687)) @x1041 @x2157 @x1041 @x2157 @x1929 @x925 @x800 @x676 @x1041 @x2157 @x1041 @x2157 @x1929 @x925 @x728 @x1933 @x1929 @x925 @x1041 @x2157 @x800 @x676 @x800 @x676 @x1041 @x2157 @x728 @x1933 @x1929 @x925 false)))
 (let ((@x1147 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x514 $x723 (not $x1687))) (and-elim @x160 $x2108) (or $x723 (not $x1687)))))
 ((_ th-lemma arith) (unit-resolution @x1147 (lemma @x634 $x1687) $x723) @x1041 @x2157 @x1041 @x2157 @x1929 @x925 @x800 @x676 @x1041 @x2157 @x1041 @x2157 @x1929 @x925 @x728 @x1933 @x1929 @x925 @x1041 @x2157 @x800 @x676 @x800 @x676 @x1041 @x2157 @x728 @x1933 @x1929 @x925 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        28
 :arith-assert-upper        191
 :arith-branch-var          3
 :arith-conflicts           5
 :arith-eq-adapter          5
 :arith-gcd-tests           6
 :arith-grobner             2
 :arith-ineq-splits         3
 :arith-max-min             970
 :arith-nonlinear-bounds    50
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             5
 :arith-pivots              10
 :arith-row-summations      15
 :arith-tableau-max-columns 134
 :arith-tableau-max-rows    9
 :conflicts                 5
 :decisions                 177
 :del-clause                16
 :final-checks              12
 :max-memory                20.02
 :memory                    19.32
 :mk-bool-var               168
 :mk-clause                 17
 :num-allocs                908569
 :num-checks                1
 :propagations              14
 :rlimit-count              26298
 :time                      0.02
 :total-time                0.04)
