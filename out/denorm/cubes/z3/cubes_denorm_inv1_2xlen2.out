unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(proof
(let ((?x615 (* (- 6) n!0)))
 (let ((?x398 (+ m!1 ?x615)))
 (let (($x344 (<= ?x398 6)))
 (let (($x89 (= ?x398 6)))
 (let ((?x281 (+ (- 6) m!1 ?x615)))
 (let ((?x370 (+ k!2 c!3)))
 (let ((?x468 (+ m!1 k!2)))
 (let ((?x288 (+ 6 m!1)))
 (let ((?x505 (+ 1 n!0)))
 (let ((?x598 (+ (* (- 1) (* ?x505 ?x288 ?x288 ?x288 ?x468 ?x468 ?x468)) (* ?x505 ?x288 ?x468 ?x468 ?x370 ?x370))))
 (let ((?x708 (* k!2 k!2 k!2 n!0 n!0)))
 (let ((?x278 (* 216 (* c!3 c!3))))
 (let ((?x93 (* 2 (* k!2 k!2 k!2 n!0))))
 (let ((?x441 (* k!2 k!2)))
 (let ((?x577 (* 216 ?x441)))
 (let ((?x277 (* k!2 k!2 k!2)))
 (let ((?x181 (* c!3 c!3 c!3)))
 (let ((?x489 (* 2 (* c!3 c!3 c!3 n!0))))
 (let ((?x112 (* c!3 c!3 c!3 n!0 n!0)))
 (let ((?x198 (+ ?x112 ?x489 (* 3 (* k!2 k!2 c!3 n!0 n!0)) (* 3 (* k!2 c!3 c!3)) (* 3 (* k!2 k!2 c!3)) ?x181 (* 432 (* k!2 c!3)) (* 36 (* m!1 m!1 k!2 c!3)) (* 18 (* m!1 m!1 c!3 c!3)) (* 18 (* m!1 m!1 k!2 k!2)) (* 6 (* k!2 c!3 c!3 n!0)) ?x277 (* 3 (* k!2 c!3 c!3 n!0 n!0)) (* 6 (* k!2 k!2 c!3 n!0)) (* 2 (* m!1 m!1 m!1 k!2 c!3)) (* 108 (* m!1 c!3 c!3)) (* 216 (* m!1 k!2 c!3)) (* 108 (* m!1 k!2 k!2)) ?x577 ?x93 (* m!1 m!1 m!1 k!2 k!2) (* m!1 m!1 m!1 c!3 c!3) ?x278 ?x708)))
 (let ((?x586 (* ?x198 ?x598 ?x281)))
 (let (($x444 (= ?x586 0)))
 (let (($x350 (not $x444)))
 (let (($x94 (= (+ k!2 (* (- 1) (* k!2 n!0)) (* 3 c!3) (* (- 2) n!0)) 1)))
 (let ((?x572 (* (- 9) n!0)))
 (let ((?x337 (* 18 c!3)))
 (let ((?x618 (* (- 1) ?x441)))
 (let ((?x509 (* 5 k!2)))
 (let ((?x190 (* 9 (* c!3 n!0))))
 (let (($x648 (and $x89 (= (+ ?x190 ?x509 ?x618 ?x337 ?x572) 4) $x94 (= (+ k!2 (* (- 3) (* n!0 n!0)) (* (- 3) n!0)) 1) $x350)))
 (let ((?x90 (+ k!2 m!1)))
 (let ((?x352 (+ (* ?x505 ?x288 ?x90 ?x90 (+ c!3 k!2) (+ c!3 k!2)) (* (- 1) (* ?x505 ?x288 ?x288 ?x288 ?x90 ?x90 ?x90)))))
 (let ((?x502 (+ ?x577 (* 432 (* c!3 k!2)) ?x278 (* k!2 k!2 m!1 m!1 m!1) (* 2 (* c!3 k!2 m!1 m!1 m!1)) (* c!3 c!3 m!1 m!1 m!1) (* 108 (* c!3 c!3 m!1)) (* 216 (* c!3 k!2 m!1)) (* 108 (* k!2 k!2 m!1)) (* 18 (* c!3 c!3 m!1 m!1)) (* 36 (* c!3 k!2 m!1 m!1)) (* 18 (* k!2 k!2 m!1 m!1)) ?x112 (* 3 (* c!3 c!3 k!2 n!0 n!0)) (* 3 (* c!3 k!2 k!2 n!0 n!0)) ?x708 ?x181 (* 3 (* c!3 c!3 k!2)) (* 3 (* c!3 k!2 k!2)) ?x277 ?x489 (* 6 (* c!3 c!3 k!2 n!0)) (* 6 (* c!3 k!2 k!2 n!0)) ?x93)))
 (let (($x512 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x276 (and $x89 (= (+ ?x337 ?x509 ?x572 ?x618 ?x190) 4) $x512 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= (* ?x502 ?x352 ?x281) 0)))))
 (let (($x397 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let ((?x73 (+ k m)))
 (let ((?x361 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x393 (+ (* ?x317 ?x361 ?x73 ?x73 (+ c k) (+ c k)) (* (- 1) (* ?x317 ?x361 ?x361 ?x361 ?x73 ?x73 ?x73)))))
 (let ((?x702 (* 2 (* k k k n))))
 (let ((?x701 (* 6 (* c k k n))))
 (let ((?x700 (* 6 (* c c k n))))
 (let ((?x699 (* 2 (* c c c n))))
 (let ((?x619 (* k k k)))
 (let ((?x698 (* 3 (* c k k))))
 (let ((?x697 (* 3 (* c c k))))
 (let ((?x582 (* c c c)))
 (let ((?x576 (* k k k n n)))
 (let ((?x704 (* 3 (* c k k n n))))
 (let ((?x703 (* 3 (* c c k n n))))
 (let ((?x569 (* c c c n n)))
 (let ((?x533 (* 18 (* k k m m))))
 (let ((?x532 (* 36 (* c k m m))))
 (let ((?x531 (* 18 (* c c m m))))
 (let ((?x392 (* c c m m m)))
 (let ((?x534 (* 2 (* c k m m m))))
 (let ((?x389 (* k k m m m)))
 (let ((?x381 (* 216 (* c c))))
 (let ((?x526 (* 432 (* c k))))
 (let ((?x49 (* k k)))
 (let ((?x428 (* 216 ?x49)))
 (let ((?x715 (+ ?x428 ?x526 ?x381 ?x389 ?x534 ?x392 (* 108 (* c c m)) (* 216 (* c k m)) (* 108 (* k k m)) ?x531 ?x532 ?x533 ?x569 ?x703 ?x704 ?x576 ?x582 ?x697 ?x698 ?x619 ?x699 ?x700 ?x701 ?x702)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x264 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x212 (= (+ ?x40 ?x44 ?x214 ?x215 (* 9 (* c n))) 4)))
 (let (($x128 (= (+ m ?x111) 6)))
 (and $x128 $x212 $x264 $x302 (not (= (* ?x715 ?x393 ?x117) 0)))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x485 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let ((?x73 (+ k m)))
 (let ((?x361 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x393 (+ (* ?x317 ?x361 ?x73 ?x73 (+ c k) (+ c k)) (* (- 1) (* ?x317 ?x361 ?x361 ?x361 ?x73 ?x73 ?x73)))))
 (let ((?x702 (* 2 (* k k k n))))
 (let ((?x701 (* 6 (* c k k n))))
 (let ((?x700 (* 6 (* c c k n))))
 (let ((?x699 (* 2 (* c c c n))))
 (let ((?x619 (* k k k)))
 (let ((?x698 (* 3 (* c k k))))
 (let ((?x697 (* 3 (* c c k))))
 (let ((?x582 (* c c c)))
 (let ((?x576 (* k k k n n)))
 (let ((?x704 (* 3 (* c k k n n))))
 (let ((?x703 (* 3 (* c c k n n))))
 (let ((?x569 (* c c c n n)))
 (let ((?x533 (* 18 (* k k m m))))
 (let ((?x532 (* 36 (* c k m m))))
 (let ((?x531 (* 18 (* c c m m))))
 (let ((?x392 (* c c m m m)))
 (let ((?x534 (* 2 (* c k m m m))))
 (let ((?x389 (* k k m m m)))
 (let ((?x381 (* 216 (* c c))))
 (let ((?x526 (* 432 (* c k))))
 (let ((?x49 (* k k)))
 (let ((?x428 (* 216 ?x49)))
 (let ((?x292 (+ ?x428 ?x526 ?x381 ?x389 ?x534 ?x392 (* 6 (* m 6 k c)) (* 72 (* c c m)) (* 144 (* c k m)) (* 72 (* k k m)) ?x531 ?x532 ?x533 (* 6 (* m 6 c c)) (* 6 (* m 6 c k)) ?x569 ?x703 ?x704 ?x576 ?x582 ?x697 ?x698 ?x619 (* 6 (* m 6 k k)) ?x699 ?x700 ?x701 ?x702)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x264 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x212 (= (+ ?x40 ?x44 ?x214 ?x215 (* 9 (* c n))) 4)))
 (let (($x128 (= (+ m ?x111) 6)))
 (and $x128 $x212 $x264 $x302 (not (= (* ?x292 ?x393 ?x117) 0)))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x492 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let ((?x73 (+ k m)))
 (let ((?x361 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x393 (+ (* ?x317 ?x361 ?x73 ?x73 (+ c k) (+ c k)) (* (- 1) (* ?x317 ?x361 ?x361 ?x361 ?x73 ?x73 ?x73)))))
 (let ((?x702 (* 2 (* k k k n))))
 (let ((?x701 (* 6 (* c k k n))))
 (let ((?x700 (* 6 (* c c k n))))
 (let ((?x699 (* 2 (* c c c n))))
 (let ((?x619 (* k k k)))
 (let ((?x698 (* 3 (* c k k))))
 (let ((?x697 (* 3 (* c c k))))
 (let ((?x582 (* c c c)))
 (let ((?x576 (* k k k n n)))
 (let ((?x704 (* 3 (* c k k n n))))
 (let ((?x703 (* 3 (* c c k n n))))
 (let ((?x569 (* c c c n n)))
 (let ((?x533 (* 18 (* k k m m))))
 (let ((?x532 (* 36 (* c k m m))))
 (let ((?x531 (* 18 (* c c m m))))
 (let ((?x392 (* c c m m m)))
 (let ((?x534 (* 2 (* c k m m m))))
 (let ((?x389 (* k k m m m)))
 (let ((?x381 (* 216 (* c c))))
 (let ((?x526 (* 432 (* c k))))
 (let ((?x49 (* k k)))
 (let ((?x428 (* 216 ?x49)))
 (let ((?x715 (+ ?x428 ?x526 ?x381 ?x389 ?x534 ?x392 (* 108 (* c c m)) (* 216 (* c k m)) (* 108 (* k k m)) ?x531 ?x532 ?x533 ?x569 ?x703 ?x704 ?x576 ?x582 ?x697 ?x698 ?x619 ?x699 ?x700 ?x701 ?x702)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x264 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x212 (= (+ ?x40 ?x44 ?x214 ?x215 (* 9 (* c n))) 4)))
 (let (($x128 (= (+ m ?x111) 6)))
 (let (($x629 (and $x128 $x212 $x264 $x302 (not (= (* ?x715 ?x393 ?x117) 0)))))
 (let ((?x292 (+ ?x428 ?x526 ?x381 ?x389 ?x534 ?x392 (* 6 (* m 6 k c)) (* 72 (* c c m)) (* 144 (* c k m)) (* 72 (* k k m)) ?x531 ?x532 ?x533 (* 6 (* m 6 c c)) (* 6 (* m 6 c k)) ?x569 ?x703 ?x704 ?x576 ?x582 ?x697 ?x698 ?x619 (* 6 (* m 6 k k)) ?x699 ?x700 ?x701 ?x702)))
 (let (($x410 (and $x128 $x212 $x264 $x302 (not (= (* ?x292 ?x393 ?x117) 0)))))
 (rewrite (= $x410 $x629)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x640 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let ((?x73 (+ k m)))
 (let ((?x361 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x393 (+ (* ?x317 ?x361 ?x73 ?x73 (+ c k) (+ c k)) (* (- 1) (* ?x317 ?x361 ?x361 ?x361 ?x73 ?x73 ?x73)))))
 (let ((?x119 (+ (* ?x361 ?x361 ?x361 (+ c k) (+ c k)) (* ?x317 ?x317 (+ c k) (+ c k) (+ c k)))))
 (let (($x411 (not (= (* ?x119 ?x393 ?x117) 0))))
 (let (($x458 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x500 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x128 (= (+ m ?x111) 6)))
 (and $x128 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x214 ?x215) 4) $x500 $x458 $x411))))))))))))))))) :qid k!34))
 ))
 (let ((?x494 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let ((?x73 (+ k m)))
 (let ((?x361 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x393 (+ (* ?x317 ?x361 ?x73 ?x73 (+ c k) (+ c k)) (* (- 1) (* ?x317 ?x361 ?x361 ?x361 ?x73 ?x73 ?x73)))))
 (let ((?x702 (* 2 (* k k k n))))
 (let ((?x701 (* 6 (* c k k n))))
 (let ((?x700 (* 6 (* c c k n))))
 (let ((?x699 (* 2 (* c c c n))))
 (let ((?x619 (* k k k)))
 (let ((?x698 (* 3 (* c k k))))
 (let ((?x697 (* 3 (* c c k))))
 (let ((?x582 (* c c c)))
 (let ((?x576 (* k k k n n)))
 (let ((?x704 (* 3 (* c k k n n))))
 (let ((?x703 (* 3 (* c c k n n))))
 (let ((?x569 (* c c c n n)))
 (let ((?x533 (* 18 (* k k m m))))
 (let ((?x532 (* 36 (* c k m m))))
 (let ((?x531 (* 18 (* c c m m))))
 (let ((?x392 (* c c m m m)))
 (let ((?x534 (* 2 (* c k m m m))))
 (let ((?x389 (* k k m m m)))
 (let ((?x381 (* 216 (* c c))))
 (let ((?x526 (* 432 (* c k))))
 (let ((?x49 (* k k)))
 (let ((?x428 (* 216 ?x49)))
 (let ((?x292 (+ ?x428 ?x526 ?x381 ?x389 ?x534 ?x392 (* 6 (* m 6 k c)) (* 72 (* c c m)) (* 144 (* c k m)) (* 72 (* k k m)) ?x531 ?x532 ?x533 (* 6 (* m 6 c c)) (* 6 (* m 6 c k)) ?x569 ?x703 ?x704 ?x576 ?x582 ?x697 ?x698 ?x619 (* 6 (* m 6 k k)) ?x699 ?x700 ?x701 ?x702)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x264 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x212 (= (+ ?x40 ?x44 ?x214 ?x215 (* 9 (* c n))) 4)))
 (let (($x128 (= (+ m ?x111) 6)))
 (let (($x410 (and $x128 $x212 $x264 $x302 (not (= (* ?x292 ?x393 ?x117) 0)))))
 (let ((?x119 (+ (* ?x361 ?x361 ?x361 (+ c k) (+ c k)) (* ?x317 ?x317 (+ c k) (+ c k) (+ c k)))))
 (let (($x411 (not (= (* ?x119 ?x393 ?x117) 0))))
 (let (($x458 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x500 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x403 (and $x128 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x214 ?x215) 4) $x500 $x458 $x411)))
 (rewrite (= $x403 $x410))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x462 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let ((?x73 (+ k m)))
 (let ((?x361 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x393 (+ (* ?x317 ?x361 ?x73 ?x73 (+ c k) (+ c k)) (* (- 1) (* ?x317 ?x361 ?x361 ?x361 ?x73 ?x73 ?x73)))))
 (let ((?x119 (+ (* ?x361 ?x361 ?x361 (+ c k) (+ c k)) (* ?x317 ?x317 (+ c k) (+ c k) (+ c k)))))
 (let (($x411 (not (= (* ?x119 ?x393 ?x117) 0))))
 (let (($x458 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x419 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x675 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x128 (= (+ m ?x111) 6)))
 (and $x128 (= ?x675 (- 4)) $x419 $x458 $x411))))))))))))))) :qid k!34))
 ))
 (let ((?x641 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let ((?x73 (+ k m)))
 (let ((?x361 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x393 (+ (* ?x317 ?x361 ?x73 ?x73 (+ c k) (+ c k)) (* (- 1) (* ?x317 ?x361 ?x361 ?x361 ?x73 ?x73 ?x73)))))
 (let ((?x119 (+ (* ?x361 ?x361 ?x361 (+ c k) (+ c k)) (* ?x317 ?x317 (+ c k) (+ c k) (+ c k)))))
 (let (($x411 (not (= (* ?x119 ?x393 ?x117) 0))))
 (let (($x458 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x500 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x128 (= (+ m ?x111) 6)))
 (let (($x403 (and $x128 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x214 ?x215) 4) $x500 $x458 $x411)))
 (let (($x419 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x675 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x469 (and $x128 (= ?x675 (- 4)) $x419 $x458 $x411)))
 (rewrite (= $x469 $x403))))))))))))))))))))))))
 ))
 (let (($x86 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ n 1)))
 (let ((?x72 (+ c k)))
 (let ((?x80 (+ (* ?x72 ?x72 (+ m 6) (+ m 6) (+ m 6)) (* ?x72 ?x72 ?x72 ?x69 ?x69))))
 (let ((?x74 (+ m 6)))
 (let ((?x73 (+ k m)))
 (let ((?x77 (- (* ?x72 ?x72 ?x73 ?x73 ?x74 ?x69) (* ?x73 ?x73 ?x73 ?x74 ?x74 ?x74 ?x69))))
 (let ((?x81 (* (- (+ (* (- 6) 1) m 6) (* 6 ?x69)) ?x77 ?x80)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x81 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x464 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let ((?x73 (+ k m)))
 (let ((?x361 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x393 (+ (* ?x317 ?x361 ?x73 ?x73 (+ c k) (+ c k)) (* (- 1) (* ?x317 ?x361 ?x361 ?x361 ?x73 ?x73 ?x73)))))
 (let ((?x119 (+ (* ?x361 ?x361 ?x361 (+ c k) (+ c k)) (* ?x317 ?x317 (+ c k) (+ c k) (+ c k)))))
 (let (($x411 (not (= (* ?x119 ?x393 ?x117) 0))))
 (let (($x458 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x419 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x675 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x128 (= (+ m ?x111) 6)))
 (let (($x469 (and $x128 (= ?x675 (- 4)) $x419 $x458 $x411)))
 (let ((?x69 (+ n 1)))
 (let ((?x72 (+ c k)))
 (let ((?x80 (+ (* ?x72 ?x72 (+ m 6) (+ m 6) (+ m 6)) (* ?x72 ?x72 ?x72 ?x69 ?x69))))
 (let ((?x74 (+ m 6)))
 (let ((?x77 (- (* ?x72 ?x72 ?x73 ?x73 ?x74 ?x69) (* ?x73 ?x73 ?x73 ?x74 ?x74 ?x74 ?x69))))
 (let ((?x81 (* (- (+ (* (- 6) 1) m 6) (* 6 ?x69)) ?x77 ?x80)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x85 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x81 0))))))
 (rewrite (= $x85 $x469))))))))))))))))))))))))))))))
 ))
 (let ((@x87 (asserted $x86)))
 (let ((@x490 (mp (mp @x87 (quant-intro (proof-bind ?x464) (= $x86 $x462)) $x462) (rewrite (= $x462 $x462)) $x462)))
 (let ((@x642 (mp (mp @x490 (quant-intro (proof-bind ?x641) (= $x462 $x640)) $x640) (quant-intro (proof-bind ?x494) (= $x640 $x485)) $x485)))
 (let ((@x279 (mp~ (mp @x642 (quant-intro (proof-bind ?x492) (= $x485 $x397)) $x397) (sk (~ $x397 $x276)) $x276)))
 (let ((@x413 (mp @x279 (rewrite (= $x276 $x648)) $x648)))
 (let ((@x650 (and-elim @x413 $x89)))
 (let ((@x667 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x89) $x344)) @x650 $x344)))
 (let (($x678 (>= ?x398 6)))
 (let ((@x172 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x89) $x678)) @x650 $x678)))
 (let (($x446 (not (<= ?x586 0))))
 (let (($x665 (>= ?x586 0)))
 (let ((@x583 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x444 $x446 (not $x665))) (and-elim @x413 $x350) (or $x446 (not $x665)))))
 (let ((@x171 (unit-resolution @x583 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x665)) @x172 @x667 false) $x665) $x446)))
 ((_ th-lemma arith farkas 1 1 1) @x171 @x172 @x667 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        23
 :arith-assert-upper        24
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-fixed-eqs           1
 :arith-gcd-tests           3
 :arith-ineq-splits         1
 :arith-max-min             159
 :arith-nonlinear-bounds    21
 :arith-num-rows            11
 :arith-patches             2
 :arith-pivots              5
 :arith-pseudo-nonlinear    2
 :arith-row-summations      4
 :arith-tableau-max-columns 61
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 4
 :del-clause                16
 :final-checks              4
 :max-memory                3.62
 :memory                    3.14
 :mk-bool-var               24
 :mk-clause                 16
 :num-allocs                1119425
 :num-checks                1
 :propagations              10
 :rlimit-count              4224
 :time                      0.01
 :total-time                0.02)
