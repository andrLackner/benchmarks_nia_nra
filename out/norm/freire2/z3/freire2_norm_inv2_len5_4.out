unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1173 (* (- 1) s!1)))
 (let ((?x336 (* r00 r00)))
 (let ((?x4137 (* (- 3) ?x336)))
 (let ((?x3023 (+ s00 ?x4137 (* 3 (* r!2 r!2)) ?x1173)))
 (let (($x4091 (<= ?x3023 0)))
 (let (($x506 (= ?x3023 0)))
 (let ((?x3972 (* 6 r!2)))
 (let ((?x1175 (+ 3 ?x3972 s!1)))
 (let ((?x1174 (+ ?x1173 x!0)))
 (let ((?x4359 (* (- 6) (* x00 ?x1174 ?x1174 ?x1174 ?x1175 ?x1175))))
 (let ((?x983 (* 6 (* r!2 r!2 x!0 x!0))))
 (let ((?x2311 (* 3 (* s00 ?x1174 ?x1174 ?x1174 ?x1175 ?x1175))))
 (let ((?x1172 (+ 1 r!2)))
 (let ((?x4362 (* (- 2) (* ?x1172 ?x1172 ?x1172 ?x1172 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175 ?x1175))))
 (let ((?x4215 (* (- 3) (* ?x1174 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175))))
 (let ((?x4252 (* (- 6) (* ?x1172 ?x1172 ?x1172 ?x1174 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175))))
 (let ((?x4029 (* (- 3) (* r00 ?x1174 ?x1174 ?x1174 ?x1175 ?x1175))))
 (let ((?x3928 (* (- 4) (* s00 ?x1172 ?x1172 ?x1172 ?x1172 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175))))
 (let ((?x3545 (* (- 3) (* ?x1172 ?x1172 ?x1172 ?x1172 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175))))
 (let ((?x4288 (* (- 9) (* r!2 r!2 s!1 x!0))))
 (let ((?x3566 (* 6 (* r!2 r!2 s!1))))
 (let ((?x1718 (* (- 2) (* r!2 r!2 r!2 s!1 s!1))))
 (let ((?x2989 (* r!2 x!0)))
 (let ((?x1599 (* 39 ?x2989)))
 (let ((?x4922 (* (- 27) (* r!2 r!2 r!2 s!1))))
 (let ((?x1023 (* 6 (* ?x1174 ?x1174 ?x1174 ?x1174 ?x1175 ?x1175))))
 (let ((?x1642 (* 12 (* r00 r00 ?x1172 ?x1172 ?x1172 ?x1172 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175))))
 (let ((?x3755 (* 12 x!0)))
 (let ((?x2244 (* (- 24) (* r!2 s!1 x!0))))
 (let ((?x2668 (* 3 (* ?x1172 ?x1172 ?x1172 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175 ?x1175))))
 (let ((?x1822 (* r!2 s!1)))
 (let ((?x4136 (* (- 38) ?x1822)))
 (let ((?x3606 (* (- 14) s!1)))
 (let ((?x1760 (* 6 (* r00 s00 ?x1172 ?x1172 ?x1172 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175))))
 (let ((?x1614 (* r!2 r!2)))
 (let ((?x3769 (* 42 ?x1614)))
 (let ((?x4591 (* 12 (* r!2 x!0 x!0))))
 (let ((?x1716 (* (- 12) (* r!2 r!2 r!2 r!2 s!1))))
 (let ((?x373 (* 2 (* ?x1172 ?x1174 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175))))
 (let ((?x1736 (* 2 (* r!2 r!2 r!2 s!1 x!0))))
 (let ((?x1157 (* x!0 x!0)))
 (let ((?x1514 (* 6 ?x1157)))
 (let ((?x1093 (* r!2 s!1 s!1)))
 (let ((?x1516 (* 14 ?x1093)))
 (let ((?x1072 (* s!1 x!0)))
 (let ((?x1517 (* (- 7) ?x1072)))
 (let ((?x1066 (* 6 (* x00 ?x1172 ?x1172 ?x1172 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175))))
 (let ((?x1060 (* 3 (* ?x1172 ?x1174 ?x1174 ?x1174 ?x1175 ?x1175))))
 (let ((?x526 (* 3 (* r00 ?x1172 ?x1172 ?x1172 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175))))
 (let ((?x4672 (* 72 (* r!2 r!2 r!2))))
 (let ((?x2968 (* 12 (* r!2 r!2 r!2 r!2 x!0))))
 (let ((?x871 (* (- 12) (* r00 r00 ?x1172 ?x1174 ?x1174 ?x1174 ?x1175 ?x1175))))
 (let ((?x504 (* r00 r00 r00)))
 (let ((?x1661 (* 24 ?x504)))
 (let ((?x461 (* s00 r00)))
 (let ((?x1662 (* (- 12) ?x461)))
 (let ((?x365 (* 4 (* s00 ?x1172 ?x1174 ?x1174 ?x1174 ?x1175 ?x1175))))
 (let ((?x348 (* (- 3) (* s00 ?x1172 ?x1172 ?x1172 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175))))
 (let ((?x2299 (* (- 6) (* r00 s00 ?x1174 ?x1174 ?x1174 ?x1175 ?x1175))))
 (let ((?x347 (* (- 12) (* r00 r00 r00 ?x1172 ?x1172 ?x1172 ?x1174 ?x1174 ?x1175 ?x1175 ?x1175))))
 (let ((?x335 (* 3 (* r!2 r!2 s!1 s!1))))
 (let ((?x1819 (* (- 24) ?x336)))
 (let ((?x333 (* 18 (* r!2 r!2 x!0))))
 (let ((?x330 (* 27 (* r!2 r!2 r!2 x!0))))
 (let ((?x1817 (* (- 12) x00)))
 (let ((?x1818 (* (- 6) r00)))
 (let ((?x1815 (* 14 s00)))
 (let ((?x1118 (+ ?x1815 ?x1818 ?x1817 ?x330 ?x333 ?x1819 ?x335 ?x347 ?x2299 ?x348 ?x365 (* (- 72) (* r00 r00 r!2 r!2)) (* 24 (* s00 r!2 r!2)) (* 12 (* r00 r00 r00 s!1 s!1 x!0 x!0 x!0)) (* (- 432) (* r00 r00 r00 r!2 r!2 s!1 s!1 s!1)) (* 6 (* s00 r00 r!2 r!2 s!1)) (* 72 (* r00 r00 r00 s!1 x!0 x!0 x!0)) (* 12 (* s00 r00 r!2 s!1)) (* 36 (* r00 r00 r!2 r!2 s!1)) (* 24 (* r00 r00 r!2 s!1)) (* (- 1296) (* r00 r00 r00 r!2 s!1 x!0 x!0)) ?x1662 (* 18 (* s00 r!2 x!0)) ?x1661 (* 15 (* s00 r!2 r!2 x!0)) (* (- 108) (* r00 r00 r00 s!1 s!1 s!1)) (* 432 (* r00 r00 r00 r!2 x!0 x!0 x!0)) (* 24 (* r00 r00 r00 r!2 x!0)) (* (- 4) (* s00 r!2 r!2 r!2 s!1)) (* (- 24) (* r00 r00 r00 r!2 s!1)) (* (- 36) (* r00 r00 r!2 r!2 x!0)) (* (- 36) (* r00 r00 r!2 x!0)) (* (- 18) (* r00 r!2)) (* (- 14) (* s00 r!2 s!1)) (* (- 324) (* r00 r00 r00 s!1 x!0 x!0)) (* 4 (* s00 r!2 r!2 r!2 x!0)) (* (- 6) (* s00 r00 r!2 r!2 x!0)) (* 1296 (* r00 r00 r00 r!2 r!2 s!1 s!1 x!0)) ?x871 (* (- 144) (* r00 r00 r00 r!2 s!1 s!1 s!1 s!1)) (* 432 (* r00 r00 r00 r!2 r!2 x!0 x!0 x!0)) (* 7 (* s00 x!0)) (* (- 1296) (* r00 r00 r00 r!2 r!2 s!1 x!0 x!0)) ?x2968 ?x4672 ?x526 ?x1060 ?x1066 ?x1517 ?x1516 (* (- 6) (* x00 x!0)) ?x1514 (* (- 6) (* r00 r!2 x!0)) (* (- 36) (* r00 r00 r00 s!1 s!1 s!1 x!0 x!0)) (* 36 (* r00 r00 r00 s!1 s!1 s!1 s!1 x!0)) (* (- 12) (* r00 r00 r00 s!1 s!1 s!1 s!1 s!1)) (* (- 72) (* r00 r00 r00 s!1 s!1 s!1 s!1)) (* (- 3) (* r00 r!2 r!2 x!0)) (* (- 36) (* s00 r00 r!2)) ?x1736 ?x3972 ?x373 ?x1716 ?x4591 ?x3769 (* (- 216) (* r00 r00 r00 s!1 s!1 x!0 x!0)) (* (- 15) (* s00 r!2 r!2 s!1)) (* (- 12) (* r00 r00 r!2 r!2 r!2 x!0)) ?x1760 ?x3606 (* 108 (* r00 r00 r00 x!0 x!0 x!0)) (* (- 12) (* x00 r!2 x!0)) (* (- 6) (* x00 r!2 r!2 x!0)) ?x4136 ?x2668 (* (- 432) (* r00 r00 r00 r!2 s!1 s!1 x!0 x!0)) ?x2244 (* 432 (* r00 r00 r00 r!2 s!1 s!1 s!1 x!0)) (* 144 (* r00 r00 r00 r!2 s!1 x!0 x!0 x!0)) (* 1296 (* r00 r00 r00 r!2 s!1 s!1 x!0)) ?x3755 (* 216 (* r00 r00 r00 s!1 s!1 s!1 x!0)) (* (- 12) (* r00 r00 x!0)) (* 50 (* s00 r!2)) (* 3 (* r00 r!2 r!2 s!1)) (* 12 (* r00 r00 r00 r!2 r!2 x!0)) ?x1642 ?x1023 (* (- 36) (* x00 r!2)) (* (- 12) (* r00 r00 r00 r!2 r!2 s!1)) ?x4922 ?x1599 (* (- 96) (* r00 r00 r!2)) (* (- 432) (* r00 r00 r00 r!2 s!1 s!1 s!1)) ?x1718 (* 12 (* x00 r!2 s!1)) (* 6 (* x00 r!2 r!2 s!1)) (* 12 (* r00 r00 r00 x!0)) ?x3566 ?x4288 ?x3545 (* (- 3) (* r00 x!0)) ?x3928 ?x4029 (* (- 6) (* s00 r00 x!0)) (* 6 (* r00 r!2 s!1)) (* 72 (* r00 r00 r00 r!2)) (* 12 (* r00 r00 r!2 r!2 r!2 s!1)) ?x4252 (* (- 12) (* s00 r00 r!2 x!0)) ?x4215 ?x4362 ?x2311 ?x983 ?x4359 (* 324 (* r00 r00 r00 s!1 s!1 x!0)))))
 (let (($x1133 (= ?x1118 0)))
 (let (($x2918 (not $x1133)))
 (let ((?x4135 (* r00 r00 s!1)))
 (let ((?x3068 (* 36 ?x4135)))
 (let ((?x3085 (* (- 9) s!1)))
 (let ((?x1381 (* x00 x00)))
 (let ((?x3982 (* 108 ?x1381)))
 (let ((?x1219 (* s00 s00 s00)))
 (let ((?x3763 (* 16 ?x1219)))
 (let ((?x917 (* r00 r00 r00 x00)))
 (let ((?x1243 (* (- 432) ?x917)))
 (let ((?x840 (* s00 x00)))
 (let ((?x4092 (* (- 108) ?x840)))
 (let ((?x682 (* s00 r00 r00)))
 (let ((?x2608 (* (- 36) ?x682)))
 (let ((?x626 (* s00 s00)))
 (let ((?x1770 (* 51 ?x626)))
 (let ((?x557 (* r00 x00)))
 (let ((?x3406 (* 108 ?x557)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2905 (+ ?x137 (* (- 54) ?x461) (* 216 (* s00 r00 x00)) ?x3406 (* 36 (* r00 r00 s!1 s!1)) ?x1770 (* 108 (* s00 r00 s!1)) ?x2608 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x4092 ?x1243 (* 108 (* s00 x!0)) (* 108 (* x00 s!1)) (* (- 108) ?x1072) (* 216 (* s00 r00 r00 r00)) (* (- 216) (* x00 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* 108 ?x1157) ?x3763 (* (- 66) (* s00 s!1)) ?x3982 (* 54 (* r00 s!1)) ?x3085 (* (- 216) (* r00 r00 r00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 108) (* r00 x!0)) (* 15 (* s!1 s!1)) (* (- 216) (* s00 r00 x!0)) ?x3068)))
 (let (($x2909 (= ?x2905 0)))
 (let ((?x912 (* r00 r00 x00)))
 (let ((?x2799 (* 36 ?x912)))
 (let ((?x3057 (* (- 6) ?x840)))
 (let ((?x2631 (* 15 ?x626)))
 (let ((?x4277 (* 54 ?x557)))
 (let ((?x2108 (+ ?x137 (* (- 4) (* r00 s!1 s!1)) (* (- 24) ?x461) ?x4277 ?x2631 (* 2 (* s00 r00 s!1)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 r!2 s!1)) ?x2608 (* 2 (* s00 s00 r00)) ?x3057 ?x2799 (* 6 (* s00 x!0)) (* 6 (* x00 s!1)) (* (- 6) ?x1072) (* (- 2) ?x1093) (* (- 36) (* r00 r!2 x!0)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) ?x3085 (* 24 ?x1822) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 24) (* s00 r!2)) (* 54 (* x00 r!2)) (* (- 54) ?x2989) (* (- 54) (* r00 x!0)) (* (- 3) (* s!1 s!1)) ?x3068)))
 (let ((?x1826 (* (- 3) s!1)))
 (let ((?x2903 (* 4 ?x626)))
 (let ((?x2887 (* 18 ?x557)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1170 (+ ?x44 (* (- 9) ?x461) ?x2887 ?x2903 (* (- 6) ?x682) (* (- 2) (* s00 s!1)) (* 6 (* s00 r00 r!2)) (* 9 (* r00 s!1)) ?x1826 (* 9 ?x1822) (* (- 9) (* s00 r!2)) (* 18 (* x00 r!2)) (* (- 18) ?x2989) (* (- 18) (* r00 x!0)) (* (- 2) (* s!1 s!1)) (* 6 ?x4135) (* (- 6) (* r00 r!2 s!1)))))
 (let (($x1177 (= ?x1170 0)))
 (let ((?x1825 (* 6 x!0)))
 (let ((?x1169 (* 2 ?x1822)))
 (let ((?x2898 (* 3 r!2)))
 (let ((?x505 (* 12 ?x504)))
 (let ((?x539 (* (- 6) ?x461)))
 (let ((?x536 (* (- 6) x00)))
 (let ((?x535 (* (- 3) r00)))
 (let ((?x4000 (+ ?x44 ?x535 ?x536 ?x539 ?x505 ?x2898 ?x1826 ?x1169 ?x1825 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)))))
 (let (($x4004 (= ?x4000 0)))
 (let (($x2593 (and $x506 $x4004 $x1177 (= ?x2108 0) $x2909 $x2918)))
 (let ((?x1566 (* 6 (* r!2 s!1 r00))))
 (let ((?x1982 (+ ?x3972 ?x3606 ?x3755 ?x1815 ?x1818 ?x1817 ?x3769 ?x1819 (* (- 12) (* r!2 r!2 s!1 r00 r00 r00)) ?x4136 (* (- 96) (* r!2 r00 r00)) (* 50 (* r!2 s00)) ?x1662 ?x2668 ?x1023 ?x1661 ?x4672 ?x3928 ?x1716 ?x1718 ?x1599 ?x1566 (* (- 6) (* r!2 x!0 r00)) (* 7 (* x!0 s00)) (* (- 3) (* x!0 r00)) (* 12 (* r!2 r!2 x!0 r00 r00 r00)) (* (- 36) (* r!2 x00)) (* (- 432) (* r!2 s!1 s!1 s!1 r00 r00 r00)) (* 1296 (* r!2 s!1 s!1 x!0 r00 r00 r00)) (* 216 (* s!1 s!1 s!1 x!0 r00 r00 r00)) (* (- 36) (* r!2 s00 r00)) ?x1516 ?x1517 ?x1514 (* (- 14) (* r!2 s!1 s00)) ?x373 (* (- 12) (* x!0 r00 r00)) (* 12 (* x!0 r00 r00 r00)) ?x365 (* (- 24) (* r!2 s!1 r00 r00 r00)) (* (- 6) (* x!0 s00 r00)) ?x348 (* 1296 (* r!2 r!2 s!1 s!1 x!0 r00 r00 r00)) ?x347 ?x2299 (* (- 6) (* x!0 x00)) (* (- 324) (* s!1 x!0 x!0 r00 r00 r00)) ?x335 ?x333 ?x330 (* 324 (* s!1 s!1 x!0 r00 r00 r00)) ?x4591 ?x983 ?x2968 ?x4922 ?x3566 ?x4288 ?x2244 (* 72 (* r!2 r00 r00 r00)) ?x1642 ?x526 (* 432 (* r!2 x!0 x!0 x!0 r00 r00 r00)) (* (- 108) (* s!1 s!1 s!1 r00 r00 r00)) (* 15 (* r!2 r!2 x!0 s00)) (* 3 (* r!2 r!2 s!1 r00)) ?x1760 (* (- 3) (* r!2 r!2 x!0 r00)) (* (- 1296) (* r!2 s!1 x!0 x!0 r00 r00 r00)) (* 24 (* r!2 s!1 r00 r00)) (* 36 (* r!2 r!2 s!1 r00 r00)) ?x4359 (* 12 (* r!2 r!2 r!2 s!1 r00 r00)) (* (- 36) (* r!2 x!0 r00 r00)) (* (- 36) (* r!2 r!2 x!0 r00 r00)) ?x4362 (* (- 12) (* r!2 r!2 r!2 x!0 r00 r00)) (* (- 15) (* r!2 r!2 s!1 s00)) (* (- 216) (* s!1 s!1 x!0 x!0 r00 r00 r00)) ?x2311 (* (- 4) (* r!2 r!2 r!2 s!1 s00)) (* 72 (* s!1 x!0 x!0 x!0 r00 r00 r00)) (* 12 (* r!2 s!1 s00 r00)) (* 6 (* r!2 r!2 s!1 s00 r00)) (* (- 432) (* r!2 r!2 s!1 s!1 s!1 r00 r00 r00)) ?x1060 (* 4 (* r!2 r!2 r!2 x!0 s00)) (* (- 6) (* r!2 r!2 x!0 s00 r00)) (* (- 12) (* r!2 x!0 s00 r00)) ?x1066 (* (- 1296) (* r!2 r!2 s!1 x!0 x!0 r00 r00 r00)) (* 432 (* r!2 r!2 x!0 x!0 x!0 r00 r00 r00)) (* (- 144) (* r!2 s!1 s!1 s!1 s!1 r00 r00 r00)) (* 432 (* r!2 s!1 s!1 s!1 x!0 r00 r00 r00)) (* (- 432) (* r!2 s!1 s!1 x!0 x!0 r00 r00 r00)) (* 144 (* r!2 s!1 x!0 x!0 x!0 r00 r00 r00)) (* 24 (* r!2 x!0 r00 r00 r00)) ?x871 (* (- 72) (* s!1 s!1 s!1 s!1 r00 r00 r00)) (* (- 12) (* s!1 s!1 s!1 s!1 s!1 r00 r00 r00)) (* 36 (* s!1 s!1 s!1 s!1 x!0 r00 r00 r00)) (* (- 36) (* s!1 s!1 s!1 x!0 x!0 r00 r00 r00)) ?x3545 (* 12 (* s!1 s!1 x!0 x!0 x!0 r00 r00 r00)) (* 24 (* r!2 r!2 s00)) ?x1736 (* (- 72) (* r!2 r!2 r00 r00)) (* 108 (* x!0 x!0 x!0 r00 r00 r00)) (* (- 12) (* r!2 x!0 x00)) (* (- 6) (* r!2 r!2 x!0 x00)) ?x4252 ?x4215 (* 18 (* r!2 x!0 s00)) (* 6 (* r!2 r!2 s!1 x00)) (* 12 (* r!2 s!1 x00)) ?x4029 (* (- 18) (* r!2 r00)))))
 (let ((?x1411 (* (- 108) ?x1381)))
 (let ((?x1410 (* (- 16) ?x1219)))
 (let ((?x1091 (* s00 r00 r00 r00)))
 (let ((?x1406 (* (- 216) ?x1091)))
 (let ((?x918 (* 432 ?x917)))
 (let ((?x1164 (* 108 ?x840)))
 (let ((?x766 (* s00 s00 r00 r00)))
 (let ((?x767 (* 36 ?x766)))
 (let ((?x703 (* s00 s00 r00)))
 (let ((?x1047 (* 108 ?x703)))
 (let ((?x1035 (* 36 ?x682)))
 (let ((?x1400 (* (- 51) ?x626)))
 (let ((?x1513 (* s!1 r00 r00)))
 (let ((?x1054 (* (- 36) ?x1513)))
 (let ((?x1397 (* (- 108) ?x557)))
 (let ((?x548 (* s00 r00 x00)))
 (let ((?x1396 (* (- 216) ?x548)))
 (let ((?x555 (* 54 ?x461)))
 (let ((?x1022 (* (- 9) s00)))
 (let ((?x3283 (* 9 s!1)))
 (let ((?x1137 (+ ?x3283 ?x1022 ?x555 ?x1396 ?x1397 (* (- 15) (* s!1 s!1)) ?x1054 ?x1400 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1035 ?x1047 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x767 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1164 (* 108 ?x1072) (* (- 108) ?x1157) ?x918 (* 12 (* s!1 s!1 s00)) ?x1406 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1410 (* 216 (* x!0 x00)) ?x1411)))
 (let ((?x925 (* (- 36) ?x912)))
 (let ((?x841 (* 6 ?x840)))
 (let ((?x731 (* (- 2) ?x703)))
 (let ((?x951 (* (- 15) ?x626)))
 (let ((?x586 (* (- 54) ?x557)))
 (let ((?x599 (* 24 ?x461)))
 (let ((?x1033 (+ ?x3283 ?x1022 (* (- 24) ?x1822) (* 24 (* r!2 s00)) ?x599 ?x586 (* 3 (* s!1 s!1)) (* 54 ?x2989) (* 36 (* r!2 x!0 r00)) ?x1054 ?x951 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1035 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x731 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x841 (* 2 ?x1093) (* 6 ?x1072) (* (- 4) (* r!2 s00 s00)) ?x925 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x683 (* 6 ?x682)))
 (let ((?x639 (* (- 4) ?x626)))
 (let ((?x571 (* (- 18) ?x557)))
 (let ((?x576 (* 9 ?x461)))
 (let ((?x413 (* (- 3) s00)))
 (let ((?x3278 (+ (* 3 s!1) ?x413 (* (- 9) ?x1822) (* 9 (* r!2 s00)) ?x576 ?x571 (* 2 (* s!1 s!1)) (* 18 ?x2989) ?x1566 (* (- 6) ?x1513) ?x639 (* 18 (* x!0 r00)) ?x683 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1163 (+ ?x2898 ?x1826 ?x1825 ?x44 ?x535 ?x536 ?x1169 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x539 ?x505)))
 (let (($x2800 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x1614) (* 3 ?x336)) 0) (= ?x1163 0) (= ?x3278 0) (= ?x1033 0) (= ?x1137 0) (not (= ?x1982 0)))))
 (let (($x2215 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1423 (+ 3 ?x214 s)))
 (let ((?x315 (* (- 1) s)))
 (let ((?x1429 (+ ?x315 x)))
 (let ((?x1420 (+ 1 r)))
 (let ((?x479 (* 12 (* r00 r00 ?x1420 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423))))
 (let ((?x1497 (* (- 12) (* r00 r00 r00 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423))))
 (let ((?x588 (* r s r00)))
 (let ((?x589 (* 6 ?x588)))
 (let ((?x504 (* r00 r00 r00)))
 (let ((?x1661 (* 24 ?x504)))
 (let ((?x461 (* s00 r00)))
 (let ((?x1662 (* (- 12) ?x461)))
 (let ((?x336 (* r00 r00)))
 (let ((?x1819 (* (- 24) ?x336)))
 (let ((?x1817 (* (- 12) x00)))
 (let ((?x1818 (* (- 6) r00)))
 (let ((?x1815 (* 14 s00)))
 (let ((?x2207 (+ ?x214 (* (- 14) s) (* 12 x) ?x1815 ?x1818 ?x1817 (* 42 (* r r)) ?x1819 (* (- 12) (* r r s r00 r00 r00)) (* (- 38) (* r s)) (* (- 96) (* r r00 r00)) (* 50 (* r s00)) ?x1662 (* 3 (* ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423 ?x1423)) (* 6 (* ?x1429 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) ?x1661 (* 72 (* r r r)) (* (- 4) (* s00 ?x1420 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* (- 12) (* r r r r s)) (* (- 2) (* r r r s s)) (* 39 (* r x)) ?x589 (* (- 6) (* r x r00)) (* 7 (* x s00)) (* (- 3) (* x r00)) (* 12 (* r r x r00 r00 r00)) (* (- 36) (* r x00)) (* (- 432) (* r s s s r00 r00 r00)) (* 1296 (* r s s x r00 r00 r00)) (* 216 (* s s s x r00 r00 r00)) (* (- 36) (* r s00 r00)) (* 14 (* r s s)) (* (- 7) (* s x)) (* 6 (* x x)) (* (- 14) (* r s s00)) (* 2 (* ?x1420 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* (- 12) (* x r00 r00)) (* 12 (* x r00 r00 r00)) (* 4 (* s00 ?x1420 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* (- 24) (* r s r00 r00 r00)) (* (- 6) (* x s00 r00)) (* (- 3) (* s00 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* 1296 (* r r s s x r00 r00 r00)) ?x1497 (* (- 6) (* r00 s00 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* (- 6) (* x x00)) (* (- 324) (* s x x r00 r00 r00)) (* 3 (* r r s s)) (* 18 (* r r x)) (* 27 (* r r r x)) (* 324 (* s s x r00 r00 r00)) (* 12 (* r x x)) (* 6 (* r r x x)) (* 12 (* r r r r x)) (* (- 27) (* r r r s)) (* 6 (* r r s)) (* (- 9) (* r r s x)) (* (- 24) (* r s x)) (* 72 (* r r00 r00 r00)) ?x479 (* 3 (* r00 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* 432 (* r x x x r00 r00 r00)) (* (- 108) (* s s s r00 r00 r00)) (* 15 (* r r x s00)) (* 3 (* r r s r00)) (* 6 (* r00 s00 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* (- 3) (* r r x r00)) (* (- 1296) (* r s x x r00 r00 r00)) (* 24 (* r s r00 r00)) (* 36 (* r r s r00 r00)) (* (- 6) (* x00 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* 12 (* r r r s r00 r00)) (* (- 36) (* r x r00 r00)) (* (- 36) (* r r x r00 r00)) (* (- 2) (* ?x1420 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423 ?x1423)) (* (- 12) (* r r r x r00 r00)) (* (- 15) (* r r s s00)) (* (- 216) (* s s x x r00 r00 r00)) (* 3 (* s00 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* (- 4) (* r r r s s00)) (* 72 (* s x x x r00 r00 r00)) (* 12 (* r s s00 r00)) (* 6 (* r r s s00 r00)) (* (- 432) (* r r s s s r00 r00 r00)) (* 3 (* ?x1420 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* 4 (* r r r x s00)) (* (- 6) (* r r x s00 r00)) (* (- 12) (* r x s00 r00)) (* 6 (* x00 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* (- 1296) (* r r s x x r00 r00 r00)) (* 432 (* r r x x x r00 r00 r00)) (* (- 144) (* r s s s s r00 r00 r00)) (* 432 (* r s s s x r00 r00 r00)) (* (- 432) (* r s s x x r00 r00 r00)) (* 144 (* r s x x x r00 r00 r00)) (* 24 (* r x r00 r00 r00)) (* (- 12) (* r00 r00 ?x1420 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* (- 72) (* s s s s r00 r00 r00)) (* (- 12) (* s s s s s r00 r00 r00)) (* 36 (* s s s s x r00 r00 r00)) (* (- 36) (* s s s x x r00 r00 r00)) (* (- 3) (* ?x1420 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* 12 (* s s x x x r00 r00 r00)) (* 24 (* r r s00)) (* 2 (* r r r s x)) (* (- 72) (* r r r00 r00)) (* 108 (* x x x r00 r00 r00)) (* (- 12) (* r x x00)) (* (- 6) (* r r x x00)) (* (- 6) (* ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* (- 3) (* ?x1429 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* 18 (* r x s00)) (* 6 (* r r s x00)) (* 12 (* r s x00)) (* (- 3) (* r00 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* (- 18) (* r r00)))))
 (let ((?x1381 (* x00 x00)))
 (let ((?x1411 (* (- 108) ?x1381)))
 (let ((?x1219 (* s00 s00 s00)))
 (let ((?x1410 (* (- 16) ?x1219)))
 (let ((?x1091 (* s00 r00 r00 r00)))
 (let ((?x1406 (* (- 216) ?x1091)))
 (let ((?x917 (* r00 r00 r00 x00)))
 (let ((?x918 (* 432 ?x917)))
 (let ((?x840 (* s00 x00)))
 (let ((?x1164 (* 108 ?x840)))
 (let ((?x766 (* s00 s00 r00 r00)))
 (let ((?x767 (* 36 ?x766)))
 (let ((?x703 (* s00 s00 r00)))
 (let ((?x1047 (* 108 ?x703)))
 (let ((?x682 (* s00 r00 r00)))
 (let ((?x1035 (* 36 ?x682)))
 (let ((?x626 (* s00 s00)))
 (let ((?x1400 (* (- 51) ?x626)))
 (let ((?x600 (* s r00 r00)))
 (let ((?x899 (* (- 36) ?x600)))
 (let ((?x557 (* r00 x00)))
 (let ((?x1397 (* (- 108) ?x557)))
 (let ((?x548 (* s00 r00 x00)))
 (let ((?x1396 (* (- 216) ?x548)))
 (let ((?x555 (* 54 ?x461)))
 (let ((?x1022 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1412 (+ ?x143 ?x1022 ?x555 ?x1396 ?x1397 (* (- 15) (* s s)) ?x899 ?x1400 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1035 ?x1047 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x767 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1164 (* 108 (* s x)) (* (- 108) (* x x)) ?x918 (* 12 (* s s s00)) ?x1406 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1410 (* 216 (* x x00)) ?x1411)))
 (let (($x1413 (= ?x1412 0)))
 (let ((?x912 (* r00 r00 x00)))
 (let ((?x925 (* (- 36) ?x912)))
 (let ((?x841 (* 6 ?x840)))
 (let ((?x731 (* (- 2) ?x703)))
 (let ((?x951 (* (- 15) ?x626)))
 (let ((?x580 (* s s)))
 (let ((?x604 (* 3 ?x580)))
 (let ((?x586 (* (- 54) ?x557)))
 (let ((?x599 (* 24 ?x461)))
 (let ((?x1114 (+ ?x143 ?x1022 (* (- 24) (* r s)) (* 24 (* r s00)) ?x599 ?x586 ?x604 (* 54 (* r x)) (* 36 (* r x r00)) ?x899 ?x951 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1035 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x731 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x841 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x925 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1119 (= ?x1114 0)))
 (let ((?x683 (* 6 ?x682)))
 (let ((?x639 (* (- 4) ?x626)))
 (let ((?x581 (* 2 ?x580)))
 (let ((?x571 (* (- 18) ?x557)))
 (let ((?x576 (* 9 ?x461)))
 (let ((?x413 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x780 (+ ?x47 ?x413 (* (- 9) (* r s)) (* 9 (* r s00)) ?x576 ?x571 ?x581 (* 18 (* r x)) ?x589 (* (- 6) ?x600) ?x639 (* 18 (* x r00)) ?x683 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x787 (= ?x780 0)))
 (let ((?x505 (* 12 ?x504)))
 (let ((?x539 (* (- 6) ?x461)))
 (let ((?x434 (* r s00)))
 (let ((?x435 (* 4 ?x434)))
 (let ((?x536 (* (- 6) x00)))
 (let ((?x535 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x534 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x540 (+ ?x43 ?x534 ?x56 ?x44 ?x535 ?x536 (* 2 (* r s)) (* (- 12) (* r r00 r00)) ?x435 ?x539 ?x505)))
 (let (($x541 (= ?x540 0)))
 (let (($x369 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x336)) 0)))
 (and $x369 $x541 $x787 $x1119 $x1413 (not (= ?x2207 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x3680 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x4265 (+ 3 s ?x214)))
 (let ((?x315 (* (- 1) s)))
 (let ((?x2760 (+ x ?x315)))
 (let ((?x1420 (+ 1 r)))
 (let ((?x3657 (* s00 ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x536 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x535 (* (- 3) r00)))
 (let ((?x1595 (* (- 9) s)))
 (let ((?x3385 (* r00 r00 r00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x504 (* r00 r00 r00)))
 (let ((?x505 (* 12 ?x504)))
 (let ((?x3146 (* r00 r00 ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x1523 (* r00 s00)))
 (let ((?x3888 (* (- 6) ?x1523)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3676 (+ (* 6 (* ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 6) (* x00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 3 (* r00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 12) (* r00 r00 r00 ?x4265)) (* (- 6) (* ?x1420 ?x1420 ?x2760 ?x2760)) (* 12 (* r00 r00 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 6 (* x00 ?x4265)) (* (- 3) (* r00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 3 (* ?x1420 ?x1420 ?x2760 ?x4265)) (* 6 (* r00 s00 ?x4265)) (* (- 2) (* ?x1420 ?x4265 ?x4265)) (* 3 (* ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 12) (* r00 r00 r00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 4) (* s00 ?x1420 ?x4265)) (* 3 (* r00 ?x1420 ?x1420 ?x2760)) (* 12 (* r00 r00 ?x1420 ?x1420 ?x1420 ?x2760)) (* (- 12) (* r00 r00 ?x1420)) ?x44 (* 4 (* s00 ?x1420)) (* (- 12) (* r00 r00 r00 ?x1420 ?x1420 ?x2760)) (* 6 (* x00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 2) (* ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 1) (* ?x1420 ?x4265)) (* 2 (* ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265 ?x4265)) ?x3888 (* 3 (* ?x4265 ?x4265)) (* 3 (* ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 3) (* s00 ?x1420 ?x1420 ?x2760)) (* 6 (* r00 s00 ?x1420 ?x1420 ?x2760)) (* (- 3) (* ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 6 (* r00 s00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 12) ?x3146) (* (- 6) (* r00 s00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 12 (* r00 r00 ?x1420 ?x4265)) (* (- 3) (* s00 ?x4265)) ?x505 (* (- 3) (* s00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 4) (* s00 ?x1420 ?x1420 ?x1420 ?x2760)) (* (- 2) (* ?x1420 ?x1420 ?x1420 ?x2760 ?x4265)) (* (- 4) (* s00 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 3 (* s00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 6 (* x00 ?x1420 ?x1420 ?x2760)) (* 12 ?x3385) (* (- 3) (* ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265 ?x4265)) (* (- 3) (* ?x1420 ?x1420 ?x1420 ?x2760)) (* (- 6) (* ?x2760 ?x4265)) (* (- 6) (* ?x2760 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 15) r) ?x1595 ?x535 (* 3 (* r00 ?x4265)) ?x56 ?x536 (* 4 ?x3657))))
 (let ((?x1381 (* x00 x00)))
 (let ((?x3982 (* 108 ?x1381)))
 (let ((?x2155 (* r00 r00 s00)))
 (let ((?x1722 (* (- 36) ?x2155)))
 (let ((?x137 (* 9 s00)))
 (let ((?x626 (* s00 s00)))
 (let ((?x1770 (* 51 ?x626)))
 (let ((?x1568 (* r00 r00 s)))
 (let ((?x4300 (* 36 ?x1568)))
 (let ((?x1219 (* s00 s00 s00)))
 (let ((?x3763 (* 16 ?x1219)))
 (let ((?x840 (* s00 x00)))
 (let ((?x4092 (* (- 108) ?x840)))
 (let ((?x917 (* r00 r00 r00 x00)))
 (let ((?x1243 (* (- 432) ?x917)))
 (let ((?x557 (* r00 x00)))
 (let ((?x3406 (* 108 ?x557)))
 (let ((?x4006 (+ (* 216 (* r00 s00 x00)) ?x3406 (* (- 54) ?x1523) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1243 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4092 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3763 (* (- 108) (* x s)) ?x4300 ?x1770 (* (- 108) (* r00 x)) ?x137 ?x1722 ?x1595 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3982)))
 (let (($x3957 (= ?x4006 0)))
 (let ((?x2631 (* 15 ?x626)))
 (let ((?x912 (* r00 r00 x00)))
 (let ((?x2799 (* 36 ?x912)))
 (let ((?x3057 (* (- 6) ?x840)))
 (let ((?x4277 (* 54 ?x557)))
 (let ((?x2872 (+ (* 24 (* s r)) ?x4277 (* (- 36) (* r00 x r)) (* (- 24) ?x1523) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3057 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4300 ?x2799 ?x2631 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1722 (* 54 (* x00 r)) ?x1595 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x534 (* (- 3) s)))
 (let ((?x2903 (* 4 ?x626)))
 (let ((?x580 (* s s)))
 (let ((?x4834 (* (- 2) ?x580)))
 (let ((?x2887 (* 18 ?x557)))
 (let ((?x4131 (+ (* 9 (* s r)) ?x2887 (* (- 9) ?x1523) ?x4834 (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1568) ?x2903 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2155) (* 18 (* x00 r)) ?x534 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x43 (* 3 r)))
 (let ((?x4207 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x534 ?x535 (* 4 (* s00 r)) ?x3888 ?x56 ?x536 ?x505)))
 (let (($x4411 (= (+ s00 ?x315 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x4411 (= ?x4207 0) (= ?x4131 0) (= ?x2872 0) $x3957 (not (= ?x3676 6))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2217 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1423 (+ 3 ?x214 s)))
 (let ((?x315 (* (- 1) s)))
 (let ((?x1429 (+ ?x315 x)))
 (let ((?x1420 (+ 1 r)))
 (let ((?x479 (* 12 (* r00 r00 ?x1420 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423))))
 (let ((?x1497 (* (- 12) (* r00 r00 r00 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423))))
 (let ((?x588 (* r s r00)))
 (let ((?x589 (* 6 ?x588)))
 (let ((?x504 (* r00 r00 r00)))
 (let ((?x1661 (* 24 ?x504)))
 (let ((?x461 (* s00 r00)))
 (let ((?x1662 (* (- 12) ?x461)))
 (let ((?x336 (* r00 r00)))
 (let ((?x1819 (* (- 24) ?x336)))
 (let ((?x1817 (* (- 12) x00)))
 (let ((?x1818 (* (- 6) r00)))
 (let ((?x1815 (* 14 s00)))
 (let ((?x2207 (+ ?x214 (* (- 14) s) (* 12 x) ?x1815 ?x1818 ?x1817 (* 42 (* r r)) ?x1819 (* (- 12) (* r r s r00 r00 r00)) (* (- 38) (* r s)) (* (- 96) (* r r00 r00)) (* 50 (* r s00)) ?x1662 (* 3 (* ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423 ?x1423)) (* 6 (* ?x1429 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) ?x1661 (* 72 (* r r r)) (* (- 4) (* s00 ?x1420 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* (- 12) (* r r r r s)) (* (- 2) (* r r r s s)) (* 39 (* r x)) ?x589 (* (- 6) (* r x r00)) (* 7 (* x s00)) (* (- 3) (* x r00)) (* 12 (* r r x r00 r00 r00)) (* (- 36) (* r x00)) (* (- 432) (* r s s s r00 r00 r00)) (* 1296 (* r s s x r00 r00 r00)) (* 216 (* s s s x r00 r00 r00)) (* (- 36) (* r s00 r00)) (* 14 (* r s s)) (* (- 7) (* s x)) (* 6 (* x x)) (* (- 14) (* r s s00)) (* 2 (* ?x1420 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* (- 12) (* x r00 r00)) (* 12 (* x r00 r00 r00)) (* 4 (* s00 ?x1420 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* (- 24) (* r s r00 r00 r00)) (* (- 6) (* x s00 r00)) (* (- 3) (* s00 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* 1296 (* r r s s x r00 r00 r00)) ?x1497 (* (- 6) (* r00 s00 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* (- 6) (* x x00)) (* (- 324) (* s x x r00 r00 r00)) (* 3 (* r r s s)) (* 18 (* r r x)) (* 27 (* r r r x)) (* 324 (* s s x r00 r00 r00)) (* 12 (* r x x)) (* 6 (* r r x x)) (* 12 (* r r r r x)) (* (- 27) (* r r r s)) (* 6 (* r r s)) (* (- 9) (* r r s x)) (* (- 24) (* r s x)) (* 72 (* r r00 r00 r00)) ?x479 (* 3 (* r00 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* 432 (* r x x x r00 r00 r00)) (* (- 108) (* s s s r00 r00 r00)) (* 15 (* r r x s00)) (* 3 (* r r s r00)) (* 6 (* r00 s00 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* (- 3) (* r r x r00)) (* (- 1296) (* r s x x r00 r00 r00)) (* 24 (* r s r00 r00)) (* 36 (* r r s r00 r00)) (* (- 6) (* x00 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* 12 (* r r r s r00 r00)) (* (- 36) (* r x r00 r00)) (* (- 36) (* r r x r00 r00)) (* (- 2) (* ?x1420 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423 ?x1423)) (* (- 12) (* r r r x r00 r00)) (* (- 15) (* r r s s00)) (* (- 216) (* s s x x r00 r00 r00)) (* 3 (* s00 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* (- 4) (* r r r s s00)) (* 72 (* s x x x r00 r00 r00)) (* 12 (* r s s00 r00)) (* 6 (* r r s s00 r00)) (* (- 432) (* r r s s s r00 r00 r00)) (* 3 (* ?x1420 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* 4 (* r r r x s00)) (* (- 6) (* r r x s00 r00)) (* (- 12) (* r x s00 r00)) (* 6 (* x00 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* (- 1296) (* r r s x x r00 r00 r00)) (* 432 (* r r x x x r00 r00 r00)) (* (- 144) (* r s s s s r00 r00 r00)) (* 432 (* r s s s x r00 r00 r00)) (* (- 432) (* r s s x x r00 r00 r00)) (* 144 (* r s x x x r00 r00 r00)) (* 24 (* r x r00 r00 r00)) (* (- 12) (* r00 r00 ?x1420 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* (- 72) (* s s s s r00 r00 r00)) (* (- 12) (* s s s s s r00 r00 r00)) (* 36 (* s s s s x r00 r00 r00)) (* (- 36) (* s s s x x r00 r00 r00)) (* (- 3) (* ?x1420 ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* 12 (* s s x x x r00 r00 r00)) (* 24 (* r r s00)) (* 2 (* r r r s x)) (* (- 72) (* r r r00 r00)) (* 108 (* x x x r00 r00 r00)) (* (- 12) (* r x x00)) (* (- 6) (* r r x x00)) (* (- 6) (* ?x1420 ?x1420 ?x1420 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* (- 3) (* ?x1429 ?x1429 ?x1429 ?x1423 ?x1423 ?x1423)) (* 18 (* r x s00)) (* 6 (* r r s x00)) (* 12 (* r s x00)) (* (- 3) (* r00 ?x1429 ?x1429 ?x1429 ?x1423 ?x1423)) (* (- 18) (* r r00)))))
 (let ((?x1381 (* x00 x00)))
 (let ((?x1411 (* (- 108) ?x1381)))
 (let ((?x1219 (* s00 s00 s00)))
 (let ((?x1410 (* (- 16) ?x1219)))
 (let ((?x1091 (* s00 r00 r00 r00)))
 (let ((?x1406 (* (- 216) ?x1091)))
 (let ((?x917 (* r00 r00 r00 x00)))
 (let ((?x918 (* 432 ?x917)))
 (let ((?x840 (* s00 x00)))
 (let ((?x1164 (* 108 ?x840)))
 (let ((?x766 (* s00 s00 r00 r00)))
 (let ((?x767 (* 36 ?x766)))
 (let ((?x703 (* s00 s00 r00)))
 (let ((?x1047 (* 108 ?x703)))
 (let ((?x682 (* s00 r00 r00)))
 (let ((?x1035 (* 36 ?x682)))
 (let ((?x626 (* s00 s00)))
 (let ((?x1400 (* (- 51) ?x626)))
 (let ((?x600 (* s r00 r00)))
 (let ((?x899 (* (- 36) ?x600)))
 (let ((?x557 (* r00 x00)))
 (let ((?x1397 (* (- 108) ?x557)))
 (let ((?x548 (* s00 r00 x00)))
 (let ((?x1396 (* (- 216) ?x548)))
 (let ((?x555 (* 54 ?x461)))
 (let ((?x1022 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1412 (+ ?x143 ?x1022 ?x555 ?x1396 ?x1397 (* (- 15) (* s s)) ?x899 ?x1400 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1035 ?x1047 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x767 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1164 (* 108 (* s x)) (* (- 108) (* x x)) ?x918 (* 12 (* s s s00)) ?x1406 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1410 (* 216 (* x x00)) ?x1411)))
 (let (($x1413 (= ?x1412 0)))
 (let ((?x912 (* r00 r00 x00)))
 (let ((?x925 (* (- 36) ?x912)))
 (let ((?x841 (* 6 ?x840)))
 (let ((?x731 (* (- 2) ?x703)))
 (let ((?x951 (* (- 15) ?x626)))
 (let ((?x580 (* s s)))
 (let ((?x604 (* 3 ?x580)))
 (let ((?x586 (* (- 54) ?x557)))
 (let ((?x599 (* 24 ?x461)))
 (let ((?x1114 (+ ?x143 ?x1022 (* (- 24) (* r s)) (* 24 (* r s00)) ?x599 ?x586 ?x604 (* 54 (* r x)) (* 36 (* r x r00)) ?x899 ?x951 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1035 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x731 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x841 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x925 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1119 (= ?x1114 0)))
 (let ((?x683 (* 6 ?x682)))
 (let ((?x639 (* (- 4) ?x626)))
 (let ((?x581 (* 2 ?x580)))
 (let ((?x571 (* (- 18) ?x557)))
 (let ((?x576 (* 9 ?x461)))
 (let ((?x413 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x780 (+ ?x47 ?x413 (* (- 9) (* r s)) (* 9 (* r s00)) ?x576 ?x571 ?x581 (* 18 (* r x)) ?x589 (* (- 6) ?x600) ?x639 (* 18 (* x r00)) ?x683 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x787 (= ?x780 0)))
 (let ((?x505 (* 12 ?x504)))
 (let ((?x539 (* (- 6) ?x461)))
 (let ((?x434 (* r s00)))
 (let ((?x435 (* 4 ?x434)))
 (let ((?x536 (* (- 6) x00)))
 (let ((?x535 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x534 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x540 (+ ?x43 ?x534 ?x56 ?x44 ?x535 ?x536 (* 2 (* r s)) (* (- 12) (* r r00 r00)) ?x435 ?x539 ?x505)))
 (let (($x541 (= ?x540 0)))
 (let (($x369 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x336)) 0)))
 (let (($x4176 (and $x369 $x541 $x787 $x1119 $x1413 (not (= ?x2207 0)))))
 (let ((?x4265 (+ 3 s ?x214)))
 (let ((?x2760 (+ x ?x315)))
 (let ((?x3657 (* s00 ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x1595 (* (- 9) s)))
 (let ((?x3385 (* r00 r00 r00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x3146 (* r00 r00 ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x1523 (* r00 s00)))
 (let ((?x3888 (* (- 6) ?x1523)))
 (let ((?x3676 (+ (* 6 (* ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 6) (* x00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 3 (* r00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 12) (* r00 r00 r00 ?x4265)) (* (- 6) (* ?x1420 ?x1420 ?x2760 ?x2760)) (* 12 (* r00 r00 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 6 (* x00 ?x4265)) (* (- 3) (* r00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 3 (* ?x1420 ?x1420 ?x2760 ?x4265)) (* 6 (* r00 s00 ?x4265)) (* (- 2) (* ?x1420 ?x4265 ?x4265)) (* 3 (* ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 12) (* r00 r00 r00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 4) (* s00 ?x1420 ?x4265)) (* 3 (* r00 ?x1420 ?x1420 ?x2760)) (* 12 (* r00 r00 ?x1420 ?x1420 ?x1420 ?x2760)) (* (- 12) (* r00 r00 ?x1420)) ?x44 (* 4 (* s00 ?x1420)) (* (- 12) (* r00 r00 r00 ?x1420 ?x1420 ?x2760)) (* 6 (* x00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 2) (* ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 1) (* ?x1420 ?x4265)) (* 2 (* ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265 ?x4265)) ?x3888 (* 3 (* ?x4265 ?x4265)) (* 3 (* ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 3) (* s00 ?x1420 ?x1420 ?x2760)) (* 6 (* r00 s00 ?x1420 ?x1420 ?x2760)) (* (- 3) (* ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 6 (* r00 s00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 12) ?x3146) (* (- 6) (* r00 s00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 12 (* r00 r00 ?x1420 ?x4265)) (* (- 3) (* s00 ?x4265)) ?x505 (* (- 3) (* s00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 4) (* s00 ?x1420 ?x1420 ?x1420 ?x2760)) (* (- 2) (* ?x1420 ?x1420 ?x1420 ?x2760 ?x4265)) (* (- 4) (* s00 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 3 (* s00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 6 (* x00 ?x1420 ?x1420 ?x2760)) (* 12 ?x3385) (* (- 3) (* ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265 ?x4265)) (* (- 3) (* ?x1420 ?x1420 ?x1420 ?x2760)) (* (- 6) (* ?x2760 ?x4265)) (* (- 6) (* ?x2760 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 15) r) ?x1595 ?x535 (* 3 (* r00 ?x4265)) ?x56 ?x536 (* 4 ?x3657))))
 (let ((?x3982 (* 108 ?x1381)))
 (let ((?x2155 (* r00 r00 s00)))
 (let ((?x1722 (* (- 36) ?x2155)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1770 (* 51 ?x626)))
 (let ((?x1568 (* r00 r00 s)))
 (let ((?x4300 (* 36 ?x1568)))
 (let ((?x3763 (* 16 ?x1219)))
 (let ((?x4092 (* (- 108) ?x840)))
 (let ((?x1243 (* (- 432) ?x917)))
 (let ((?x3406 (* 108 ?x557)))
 (let ((?x4006 (+ (* 216 (* r00 s00 x00)) ?x3406 (* (- 54) ?x1523) (* 15 ?x580) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1243 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4092 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3763 (* (- 108) (* x s)) ?x4300 ?x1770 (* (- 108) (* r00 x)) ?x137 ?x1722 ?x1595 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3982)))
 (let (($x3957 (= ?x4006 0)))
 (let ((?x2631 (* 15 ?x626)))
 (let ((?x2799 (* 36 ?x912)))
 (let ((?x3057 (* (- 6) ?x840)))
 (let ((?x4277 (* 54 ?x557)))
 (let ((?x2872 (+ (* 24 (* s r)) ?x4277 (* (- 36) (* r00 x r)) (* (- 24) ?x1523) (* (- 3) ?x580) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3057 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4300 ?x2799 ?x2631 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1722 (* 54 (* x00 r)) ?x1595 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x2903 (* 4 ?x626)))
 (let ((?x4834 (* (- 2) ?x580)))
 (let ((?x2887 (* 18 ?x557)))
 (let ((?x4131 (+ (* 9 (* s r)) ?x2887 (* (- 9) ?x1523) ?x4834 (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1568) ?x2903 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2155) (* 18 (* x00 r)) ?x534 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x4207 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x534 ?x535 (* 4 (* s00 r)) ?x3888 ?x56 ?x536 ?x505)))
 (let (($x4411 (= (+ s00 ?x315 (* 3 (* r r)) (* (- 3) ?x336)) 0)))
 (let (($x3651 (and $x4411 (= ?x4207 0) (= ?x4131 0) (= ?x2872 0) $x3957 (not (= ?x3676 6)))))
 (rewrite (= $x3651 $x4176)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x3705 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x4265 (+ 3 s ?x214)))
 (let ((?x315 (* (- 1) s)))
 (let ((?x2760 (+ x ?x315)))
 (let ((?x1420 (+ 1 r)))
 (let ((?x3657 (* s00 ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x59 (* 6 x00)))
 (let ((?x1702 (* (- 6) x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x3385 (* r00 r00 r00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x504 (* r00 r00 r00)))
 (let ((?x1923 (* (- 12) ?x504)))
 (let ((?x3146 (* r00 r00 ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x1523 (* r00 s00)))
 (let ((?x1525 (* 6 ?x1523)))
 (let ((?x3482 (* ?x1420 ?x4265)))
 (let ((?x413 (* (- 3) s00)))
 (let ((?x3698 (+ (* (- 6) (* ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 6 (* x00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 3) (* r00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 12 (* r00 r00 r00 ?x4265)) (* 6 (* ?x1420 ?x1420 ?x2760 ?x2760)) (* (- 12) (* r00 r00 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 6) (* x00 ?x4265)) (* 3 (* r00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 3) (* ?x1420 ?x1420 ?x2760 ?x4265)) (* (- 6) (* r00 s00 ?x4265)) (* 2 (* ?x1420 ?x4265 ?x4265)) (* (- 3) (* ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 12 (* r00 r00 r00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 4 (* s00 ?x1420 ?x4265)) (* (- 3) (* r00 ?x1420 ?x1420 ?x2760)) (* (- 12) (* r00 r00 ?x1420 ?x1420 ?x1420 ?x2760)) (* 12 (* r00 r00 ?x1420)) ?x413 (* (- 4) (* s00 ?x1420)) (* 12 (* r00 r00 r00 ?x1420 ?x1420 ?x2760)) (* (- 6) (* x00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 2 (* ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) ?x3482 (* (- 2) (* ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265 ?x4265)) ?x1525 (* (- 3) (* ?x4265 ?x4265)) (* (- 3) (* ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 3 (* s00 ?x1420 ?x1420 ?x2760)) (* (- 6) (* r00 s00 ?x1420 ?x1420 ?x2760)) (* 3 (* ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 6) (* r00 s00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 12 ?x3146) (* 6 (* r00 s00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 12) (* r00 r00 ?x1420 ?x4265)) (* 3 (* s00 ?x4265)) ?x1923 (* 3 (* s00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 4 (* s00 ?x1420 ?x1420 ?x1420 ?x2760)) (* 2 (* ?x1420 ?x1420 ?x1420 ?x2760 ?x4265)) (* 4 (* s00 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 3) (* s00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 6) (* x00 ?x1420 ?x1420 ?x2760)) (* (- 12) ?x3385) (* 3 (* ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265 ?x4265)) (* 3 (* ?x1420 ?x1420 ?x1420 ?x2760)) (* 6 (* ?x2760 ?x4265)) (* 6 (* ?x2760 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 15 r) ?x143 ?x48 (* (- 3) (* r00 ?x4265)) ?x1702 ?x59 (* (- 4) ?x3657))))
 (let ((?x1381 (* x00 x00)))
 (let ((?x3982 (* 108 ?x1381)))
 (let ((?x1595 (* (- 9) s)))
 (let ((?x2155 (* r00 r00 s00)))
 (let ((?x1722 (* (- 36) ?x2155)))
 (let ((?x137 (* 9 s00)))
 (let ((?x626 (* s00 s00)))
 (let ((?x1770 (* 51 ?x626)))
 (let ((?x1568 (* r00 r00 s)))
 (let ((?x4300 (* 36 ?x1568)))
 (let ((?x1219 (* s00 s00 s00)))
 (let ((?x3763 (* 16 ?x1219)))
 (let ((?x840 (* s00 x00)))
 (let ((?x4092 (* (- 108) ?x840)))
 (let ((?x917 (* r00 r00 r00 x00)))
 (let ((?x1243 (* (- 432) ?x917)))
 (let ((?x557 (* r00 x00)))
 (let ((?x3406 (* 108 ?x557)))
 (let ((?x4006 (+ (* 216 (* r00 s00 x00)) ?x3406 (* (- 54) ?x1523) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1243 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4092 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3763 (* (- 108) (* x s)) ?x4300 ?x1770 (* (- 108) (* r00 x)) ?x137 ?x1722 ?x1595 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3982)))
 (let (($x3957 (= ?x4006 0)))
 (let ((?x1022 (* (- 9) s00)))
 (let ((?x951 (* (- 15) ?x626)))
 (let ((?x912 (* r00 r00 x00)))
 (let ((?x925 (* (- 36) ?x912)))
 (let ((?x841 (* 6 ?x840)))
 (let ((?x580 (* s s)))
 (let ((?x604 (* 3 ?x580)))
 (let ((?x586 (* (- 54) ?x557)))
 (let ((?x4582 (+ (* (- 24) (* s r)) ?x586 (* 36 (* r00 x r)) (* 24 ?x1523) ?x604 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x841 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1568) ?x925 ?x951 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1022 (* 36 ?x2155) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x639 (* (- 4) ?x626)))
 (let ((?x581 (* 2 ?x580)))
 (let ((?x571 (* (- 18) ?x557)))
 (let ((?x4444 (+ (* (- 9) (* s r)) ?x571 (* 9 ?x1523) ?x581 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1568) ?x639 (* 18 (* r00 x)) ?x413 (* 6 ?x2155) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x2004 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x413 ?x47 ?x48 (* (- 4) (* s00 r)) ?x1525 ?x1702 ?x59 ?x1923)))
 (let (($x4411 (= (+ s00 ?x315 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x4411 (= ?x2004 0) (= ?x4444 0) (= ?x4582 0) $x3957 (not (= ?x3698 (- 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3685 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x4265 (+ 3 s ?x214)))
 (let ((?x315 (* (- 1) s)))
 (let ((?x2760 (+ x ?x315)))
 (let ((?x1420 (+ 1 r)))
 (let ((?x3657 (* s00 ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x536 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x535 (* (- 3) r00)))
 (let ((?x1595 (* (- 9) s)))
 (let ((?x3385 (* r00 r00 r00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x504 (* r00 r00 r00)))
 (let ((?x505 (* 12 ?x504)))
 (let ((?x3146 (* r00 r00 ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x1523 (* r00 s00)))
 (let ((?x3888 (* (- 6) ?x1523)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3676 (+ (* 6 (* ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 6) (* x00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 3 (* r00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 12) (* r00 r00 r00 ?x4265)) (* (- 6) (* ?x1420 ?x1420 ?x2760 ?x2760)) (* 12 (* r00 r00 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 6 (* x00 ?x4265)) (* (- 3) (* r00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 3 (* ?x1420 ?x1420 ?x2760 ?x4265)) (* 6 (* r00 s00 ?x4265)) (* (- 2) (* ?x1420 ?x4265 ?x4265)) (* 3 (* ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 12) (* r00 r00 r00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 4) (* s00 ?x1420 ?x4265)) (* 3 (* r00 ?x1420 ?x1420 ?x2760)) (* 12 (* r00 r00 ?x1420 ?x1420 ?x1420 ?x2760)) (* (- 12) (* r00 r00 ?x1420)) ?x44 (* 4 (* s00 ?x1420)) (* (- 12) (* r00 r00 r00 ?x1420 ?x1420 ?x2760)) (* 6 (* x00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 2) (* ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 1) (* ?x1420 ?x4265)) (* 2 (* ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265 ?x4265)) ?x3888 (* 3 (* ?x4265 ?x4265)) (* 3 (* ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 3) (* s00 ?x1420 ?x1420 ?x2760)) (* 6 (* r00 s00 ?x1420 ?x1420 ?x2760)) (* (- 3) (* ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 6 (* r00 s00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 12) ?x3146) (* (- 6) (* r00 s00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 12 (* r00 r00 ?x1420 ?x4265)) (* (- 3) (* s00 ?x4265)) ?x505 (* (- 3) (* s00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 4) (* s00 ?x1420 ?x1420 ?x1420 ?x2760)) (* (- 2) (* ?x1420 ?x1420 ?x1420 ?x2760 ?x4265)) (* (- 4) (* s00 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 3 (* s00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 6 (* x00 ?x1420 ?x1420 ?x2760)) (* 12 ?x3385) (* (- 3) (* ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265 ?x4265)) (* (- 3) (* ?x1420 ?x1420 ?x1420 ?x2760)) (* (- 6) (* ?x2760 ?x4265)) (* (- 6) (* ?x2760 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 15) r) ?x1595 ?x535 (* 3 (* r00 ?x4265)) ?x56 ?x536 (* 4 ?x3657))))
 (let ((?x1381 (* x00 x00)))
 (let ((?x3982 (* 108 ?x1381)))
 (let ((?x2155 (* r00 r00 s00)))
 (let ((?x1722 (* (- 36) ?x2155)))
 (let ((?x137 (* 9 s00)))
 (let ((?x626 (* s00 s00)))
 (let ((?x1770 (* 51 ?x626)))
 (let ((?x1568 (* r00 r00 s)))
 (let ((?x4300 (* 36 ?x1568)))
 (let ((?x1219 (* s00 s00 s00)))
 (let ((?x3763 (* 16 ?x1219)))
 (let ((?x840 (* s00 x00)))
 (let ((?x4092 (* (- 108) ?x840)))
 (let ((?x917 (* r00 r00 r00 x00)))
 (let ((?x1243 (* (- 432) ?x917)))
 (let ((?x557 (* r00 x00)))
 (let ((?x3406 (* 108 ?x557)))
 (let ((?x4006 (+ (* 216 (* r00 s00 x00)) ?x3406 (* (- 54) ?x1523) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1243 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4092 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3763 (* (- 108) (* x s)) ?x4300 ?x1770 (* (- 108) (* r00 x)) ?x137 ?x1722 ?x1595 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3982)))
 (let (($x3957 (= ?x4006 0)))
 (let ((?x2631 (* 15 ?x626)))
 (let ((?x912 (* r00 r00 x00)))
 (let ((?x2799 (* 36 ?x912)))
 (let ((?x3057 (* (- 6) ?x840)))
 (let ((?x4277 (* 54 ?x557)))
 (let ((?x2872 (+ (* 24 (* s r)) ?x4277 (* (- 36) (* r00 x r)) (* (- 24) ?x1523) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3057 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4300 ?x2799 ?x2631 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1722 (* 54 (* x00 r)) ?x1595 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x534 (* (- 3) s)))
 (let ((?x2903 (* 4 ?x626)))
 (let ((?x580 (* s s)))
 (let ((?x4834 (* (- 2) ?x580)))
 (let ((?x2887 (* 18 ?x557)))
 (let ((?x4131 (+ (* 9 (* s r)) ?x2887 (* (- 9) ?x1523) ?x4834 (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1568) ?x2903 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2155) (* 18 (* x00 r)) ?x534 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x43 (* 3 r)))
 (let ((?x4207 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x534 ?x535 (* 4 (* s00 r)) ?x3888 ?x56 ?x536 ?x505)))
 (let (($x4411 (= (+ s00 ?x315 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3651 (and $x4411 (= ?x4207 0) (= ?x4131 0) (= ?x2872 0) $x3957 (not (= ?x3676 6)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x1702 (* (- 6) x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1923 (* (- 12) ?x504)))
 (let ((?x1525 (* 6 ?x1523)))
 (let ((?x3482 (* ?x1420 ?x4265)))
 (let ((?x413 (* (- 3) s00)))
 (let ((?x3698 (+ (* (- 6) (* ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 6 (* x00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 3) (* r00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 12 (* r00 r00 r00 ?x4265)) (* 6 (* ?x1420 ?x1420 ?x2760 ?x2760)) (* (- 12) (* r00 r00 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 6) (* x00 ?x4265)) (* 3 (* r00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 3) (* ?x1420 ?x1420 ?x2760 ?x4265)) (* (- 6) (* r00 s00 ?x4265)) (* 2 (* ?x1420 ?x4265 ?x4265)) (* (- 3) (* ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 12 (* r00 r00 r00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 4 (* s00 ?x1420 ?x4265)) (* (- 3) (* r00 ?x1420 ?x1420 ?x2760)) (* (- 12) (* r00 r00 ?x1420 ?x1420 ?x1420 ?x2760)) (* 12 (* r00 r00 ?x1420)) ?x413 (* (- 4) (* s00 ?x1420)) (* 12 (* r00 r00 r00 ?x1420 ?x1420 ?x2760)) (* (- 6) (* x00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 2 (* ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) ?x3482 (* (- 2) (* ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265 ?x4265)) ?x1525 (* (- 3) (* ?x4265 ?x4265)) (* (- 3) (* ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 3 (* s00 ?x1420 ?x1420 ?x2760)) (* (- 6) (* r00 s00 ?x1420 ?x1420 ?x2760)) (* 3 (* ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 6) (* r00 s00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 12 ?x3146) (* 6 (* r00 s00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 12) (* r00 r00 ?x1420 ?x4265)) (* 3 (* s00 ?x4265)) ?x1923 (* 3 (* s00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 4 (* s00 ?x1420 ?x1420 ?x1420 ?x2760)) (* 2 (* ?x1420 ?x1420 ?x1420 ?x2760 ?x4265)) (* 4 (* s00 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 3) (* s00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 6) (* x00 ?x1420 ?x1420 ?x2760)) (* (- 12) ?x3385) (* 3 (* ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265 ?x4265)) (* 3 (* ?x1420 ?x1420 ?x1420 ?x2760)) (* 6 (* ?x2760 ?x4265)) (* 6 (* ?x2760 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 15 r) ?x143 ?x48 (* (- 3) (* r00 ?x4265)) ?x1702 ?x59 (* (- 4) ?x3657))))
 (let ((?x1022 (* (- 9) s00)))
 (let ((?x951 (* (- 15) ?x626)))
 (let ((?x925 (* (- 36) ?x912)))
 (let ((?x841 (* 6 ?x840)))
 (let ((?x604 (* 3 ?x580)))
 (let ((?x586 (* (- 54) ?x557)))
 (let ((?x4582 (+ (* (- 24) (* s r)) ?x586 (* 36 (* r00 x r)) (* 24 ?x1523) ?x604 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x841 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1568) ?x925 ?x951 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1022 (* 36 ?x2155) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x639 (* (- 4) ?x626)))
 (let ((?x581 (* 2 ?x580)))
 (let ((?x571 (* (- 18) ?x557)))
 (let ((?x4444 (+ (* (- 9) (* s r)) ?x571 (* 9 ?x1523) ?x581 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1568) ?x639 (* 18 (* r00 x)) ?x413 (* 6 ?x2155) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x2004 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x413 ?x47 ?x48 (* (- 4) (* s00 r)) ?x1525 ?x1702 ?x59 ?x1923)))
 (let (($x4423 (and $x4411 (= ?x2004 0) (= ?x4444 0) (= ?x4582 0) $x3957 (not (= ?x3698 (- 6))))))
 (rewrite (= $x4423 $x3651)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x312 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (- x s)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x219 (+ (* (- 6) ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x224 (+ (- ?x219 (* 3 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 12 r00 r00 r00 ?x215) (* 6 ?x213 ?x213 ?x216 ?x216))))
 (let ((?x228 (- (- ?x224 (* 12 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 6 ?x215 x00))))
 (let ((?x233 (- (+ ?x228 (* 3 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216)) (* 3 ?x213 ?x213 ?x215 ?x216))))
 (let ((?x238 (- (+ (- ?x233 (* 6 r00 ?x215 s00)) (* 2 ?x213 ?x215 ?x215)) (* 3 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x241 (+ ?x238 (* 12 r00 r00 r00 ?x215 ?x215 ?x216 ?x216 ?x216) (* 4 ?x213 ?x215 s00))))
 (let ((?x245 (- (- ?x241 (* 3 ?x213 ?x213 r00 ?x216)) (* 12 ?x213 ?x213 ?x213 r00 r00 ?x216))))
 (let ((?x250 (- (- (+ ?x245 (* 12 ?x213 r00 r00)) ?x44) (* 4 ?x213 s00))))
 (let ((?x254 (- (+ ?x250 (* 12 ?x213 ?x213 r00 r00 r00 ?x216)) (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x257 (+ ?x254 (* 2 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* ?x213 ?x215))))
 (let ((?x259 (- ?x257 (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x264 (- (- (+ ?x259 ?x54) (* 3 ?x215 ?x215)) (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x268 (- (+ ?x264 (* 3 ?x213 ?x213 s00 ?x216)) (* 6 ?x213 ?x213 r00 s00 ?x216))))
 (let ((?x272 (- (+ ?x268 (* 3 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 6 r00 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x275 (+ ?x272 (* 12 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216) (* 6 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x280 (- (+ (- ?x275 (* 12 ?x213 r00 r00 ?x215)) (* 3 ?x215 s00)) ?x61)))
 (let ((?x285 (+ ?x280 (* 3 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 4 ?x213 ?x213 ?x213 s00 ?x216) (* 2 ?x213 ?x213 ?x213 ?x215 ?x216) (* 4 ?x213 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x290 (- (- ?x285 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216)) (* 6 ?x213 ?x213 ?x216 x00))))
 (let ((?x291 (- ?x290 (* 12 ?x213 ?x213 ?x213 r00 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x296 (+ ?x291 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216) (* 3 ?x213 ?x213 ?x213 ?x216) (* 6 ?x215 ?x216) (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x303 (- (+ (- ?x296 (* 3 ?x213)) (* 3 ?x215) ?x48) (* 3 r00 ?x215))))
 (let ((?x307 (- (+ (- ?x303 (* 6 ?x216)) ?x59) (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x307 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3711 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x4265 (+ 3 s ?x214)))
 (let ((?x315 (* (- 1) s)))
 (let ((?x2760 (+ x ?x315)))
 (let ((?x1420 (+ 1 r)))
 (let ((?x3657 (* s00 ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x59 (* 6 x00)))
 (let ((?x1702 (* (- 6) x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x3385 (* r00 r00 r00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x504 (* r00 r00 r00)))
 (let ((?x1923 (* (- 12) ?x504)))
 (let ((?x3146 (* r00 r00 ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)))
 (let ((?x1523 (* r00 s00)))
 (let ((?x1525 (* 6 ?x1523)))
 (let ((?x3482 (* ?x1420 ?x4265)))
 (let ((?x413 (* (- 3) s00)))
 (let ((?x3698 (+ (* (- 6) (* ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 6 (* x00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 3) (* r00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 12 (* r00 r00 r00 ?x4265)) (* 6 (* ?x1420 ?x1420 ?x2760 ?x2760)) (* (- 12) (* r00 r00 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 6) (* x00 ?x4265)) (* 3 (* r00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 3) (* ?x1420 ?x1420 ?x2760 ?x4265)) (* (- 6) (* r00 s00 ?x4265)) (* 2 (* ?x1420 ?x4265 ?x4265)) (* (- 3) (* ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 12 (* r00 r00 r00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 4 (* s00 ?x1420 ?x4265)) (* (- 3) (* r00 ?x1420 ?x1420 ?x2760)) (* (- 12) (* r00 r00 ?x1420 ?x1420 ?x1420 ?x2760)) (* 12 (* r00 r00 ?x1420)) ?x413 (* (- 4) (* s00 ?x1420)) (* 12 (* r00 r00 r00 ?x1420 ?x1420 ?x2760)) (* (- 6) (* x00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 2 (* ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) ?x3482 (* (- 2) (* ?x1420 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265 ?x4265)) ?x1525 (* (- 3) (* ?x4265 ?x4265)) (* (- 3) (* ?x2760 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* 3 (* s00 ?x1420 ?x1420 ?x2760)) (* (- 6) (* r00 s00 ?x1420 ?x1420 ?x2760)) (* 3 (* ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 6) (* r00 s00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 12 ?x3146) (* 6 (* r00 s00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 12) (* r00 r00 ?x1420 ?x4265)) (* 3 (* s00 ?x4265)) ?x1923 (* 3 (* s00 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 4 (* s00 ?x1420 ?x1420 ?x1420 ?x2760)) (* 2 (* ?x1420 ?x1420 ?x1420 ?x2760 ?x4265)) (* 4 (* s00 ?x1420 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* (- 3) (* s00 ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265)) (* (- 6) (* x00 ?x1420 ?x1420 ?x2760)) (* (- 12) ?x3385) (* 3 (* ?x1420 ?x1420 ?x1420 ?x2760 ?x2760 ?x4265 ?x4265 ?x4265 ?x4265)) (* 3 (* ?x1420 ?x1420 ?x1420 ?x2760)) (* 6 (* ?x2760 ?x4265)) (* 6 (* ?x2760 ?x2760 ?x2760 ?x2760 ?x4265 ?x4265)) (* 15 r) ?x143 ?x48 (* (- 3) (* r00 ?x4265)) ?x1702 ?x59 (* (- 4) ?x3657))))
 (let ((?x1381 (* x00 x00)))
 (let ((?x3982 (* 108 ?x1381)))
 (let ((?x1595 (* (- 9) s)))
 (let ((?x2155 (* r00 r00 s00)))
 (let ((?x1722 (* (- 36) ?x2155)))
 (let ((?x137 (* 9 s00)))
 (let ((?x626 (* s00 s00)))
 (let ((?x1770 (* 51 ?x626)))
 (let ((?x1568 (* r00 r00 s)))
 (let ((?x4300 (* 36 ?x1568)))
 (let ((?x1219 (* s00 s00 s00)))
 (let ((?x3763 (* 16 ?x1219)))
 (let ((?x840 (* s00 x00)))
 (let ((?x4092 (* (- 108) ?x840)))
 (let ((?x917 (* r00 r00 r00 x00)))
 (let ((?x1243 (* (- 432) ?x917)))
 (let ((?x557 (* r00 x00)))
 (let ((?x3406 (* 108 ?x557)))
 (let ((?x4006 (+ (* 216 (* r00 s00 x00)) ?x3406 (* (- 54) ?x1523) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1243 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4092 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3763 (* (- 108) (* x s)) ?x4300 ?x1770 (* (- 108) (* r00 x)) ?x137 ?x1722 ?x1595 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3982)))
 (let (($x3957 (= ?x4006 0)))
 (let ((?x1022 (* (- 9) s00)))
 (let ((?x951 (* (- 15) ?x626)))
 (let ((?x912 (* r00 r00 x00)))
 (let ((?x925 (* (- 36) ?x912)))
 (let ((?x841 (* 6 ?x840)))
 (let ((?x580 (* s s)))
 (let ((?x604 (* 3 ?x580)))
 (let ((?x586 (* (- 54) ?x557)))
 (let ((?x4582 (+ (* (- 24) (* s r)) ?x586 (* 36 (* r00 x r)) (* 24 ?x1523) ?x604 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x841 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1568) ?x925 ?x951 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1022 (* 36 ?x2155) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x639 (* (- 4) ?x626)))
 (let ((?x581 (* 2 ?x580)))
 (let ((?x571 (* (- 18) ?x557)))
 (let ((?x4444 (+ (* (- 9) (* s r)) ?x571 (* 9 ?x1523) ?x581 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1568) ?x639 (* 18 (* r00 x)) ?x413 (* 6 ?x2155) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x2004 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x413 ?x47 ?x48 (* (- 4) (* s00 r)) ?x1525 ?x1702 ?x59 ?x1923)))
 (let (($x4411 (= (+ s00 ?x315 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x4423 (and $x4411 (= ?x2004 0) (= ?x4444 0) (= ?x4582 0) $x3957 (not (= ?x3698 (- 6))))))
 (let ((?x216 (- x s)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x219 (+ (* (- 6) ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x224 (+ (- ?x219 (* 3 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 12 r00 r00 r00 ?x215) (* 6 ?x213 ?x213 ?x216 ?x216))))
 (let ((?x228 (- (- ?x224 (* 12 ?x213 r00 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 6 ?x215 x00))))
 (let ((?x233 (- (+ ?x228 (* 3 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216 ?x216)) (* 3 ?x213 ?x213 ?x215 ?x216))))
 (let ((?x238 (- (+ (- ?x233 (* 6 r00 ?x215 s00)) (* 2 ?x213 ?x215 ?x215)) (* 3 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x241 (+ ?x238 (* 12 r00 r00 r00 ?x215 ?x215 ?x216 ?x216 ?x216) (* 4 ?x213 ?x215 s00))))
 (let ((?x245 (- (- ?x241 (* 3 ?x213 ?x213 r00 ?x216)) (* 12 ?x213 ?x213 ?x213 r00 r00 ?x216))))
 (let ((?x250 (- (- (+ ?x245 (* 12 ?x213 r00 r00)) ?x44) (* 4 ?x213 s00))))
 (let ((?x254 (- (+ ?x250 (* 12 ?x213 ?x213 r00 r00 r00 ?x216)) (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x257 (+ ?x254 (* 2 ?x213 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216) (* ?x213 ?x215))))
 (let ((?x259 (- ?x257 (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x264 (- (- (+ ?x259 ?x54) (* 3 ?x215 ?x215)) (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x268 (- (+ ?x264 (* 3 ?x213 ?x213 s00 ?x216)) (* 6 ?x213 ?x213 r00 s00 ?x216))))
 (let ((?x272 (- (+ ?x268 (* 3 ?x213 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 6 r00 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x275 (+ ?x272 (* 12 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216) (* 6 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x280 (- (+ (- ?x275 (* 12 ?x213 r00 r00 ?x215)) (* 3 ?x215 s00)) ?x61)))
 (let ((?x285 (+ ?x280 (* 3 ?x215 ?x215 s00 ?x216 ?x216 ?x216) (* 4 ?x213 ?x213 ?x213 s00 ?x216) (* 2 ?x213 ?x213 ?x213 ?x215 ?x216) (* 4 ?x213 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x290 (- (- ?x285 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216)) (* 6 ?x213 ?x213 ?x216 x00))))
 (let ((?x291 (- ?x290 (* 12 ?x213 ?x213 ?x213 r00 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x296 (+ ?x291 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216) (* 3 ?x213 ?x213 ?x213 ?x216) (* 6 ?x215 ?x216) (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x303 (- (+ (- ?x296 (* 3 ?x213)) (* 3 ?x215) ?x48) (* 3 r00 ?x215))))
 (let ((?x307 (- (+ (- ?x303 (* 6 ?x216)) ?x59) (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x311 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x307 0))))))
 (rewrite (= $x311 $x4423))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x313 (asserted $x312)))
 (let ((@x1649 (mp (mp @x313 (quant-intro (proof-bind ?x3711) (= $x312 $x3705)) $x3705) (rewrite (= $x3705 $x3705)) $x3705)))
 (let ((@x2346 (mp (mp @x1649 (quant-intro (proof-bind ?x3685) (= $x3705 $x3680)) $x3680) (quant-intro (proof-bind ?x2217) (= $x3680 $x2215)) $x2215)))
 (let ((@x2917 (mp (mp~ @x2346 (sk (~ $x2215 $x2800)) $x2800) (rewrite (= $x2800 $x2593)) $x2593)))
 (let ((@x2921 (and-elim @x2917 $x506)))
 (let ((@x2867 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x506) $x4091)) @x2921 $x4091)))
 (let (($x3317 (>= ?x3023 0)))
 (let ((@x651 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x506) $x3317)) @x2921 $x3317)))
 (let (($x903 (<= ?x2905 0)))
 (let ((@x1544 (and-elim @x2917 $x2909)))
 (let ((@x451 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2909) $x903)) @x1544 $x903)))
 (let (($x902 (>= ?x2905 0)))
 (let ((@x1385 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2909) $x902)) @x1544 $x902)))
 (let (($x3994 (<= ?x1170 0)))
 (let ((@x3306 (and-elim @x2917 $x1177)))
 (let ((@x4094 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1177) $x3994)) @x3306 $x3994)))
 (let (($x904 (>= ?x1170 0)))
 (let ((@x3701 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1177) $x904)) @x3306 $x904)))
 (let (($x907 (<= ?x4000 0)))
 (let ((@x1783 (and-elim @x2917 $x4004)))
 (let ((@x3394 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4004) $x907)) @x1783 $x907)))
 (let (($x906 (>= ?x4000 0)))
 (let ((@x1772 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4004) $x906)) @x1783 $x906)))
 (let (($x4144 (not (<= ?x1118 0))))
 (let (($x909 (>= ?x1118 0)))
 (let ((@x4009 ((_ th-lemma arith) (hypothesis (not $x909)) @x651 @x2867 @x3701 @x4094 @x651 @x2867 @x3701 @x4094 @x1772 @x3394 @x651 @x2867 @x651 @x2867 @x1772 @x3394 @x3701 @x4094 @x1385 @x451 @x651 @x2867 false)))
 (let ((@x607 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1133 $x4144 (not $x909))) (and-elim @x2917 $x2918) (or $x4144 (not $x909)))))
 ((_ th-lemma arith) (unit-resolution @x607 (lemma @x4009 $x909) $x4144) @x651 @x2867 @x3701 @x4094 @x651 @x2867 @x3701 @x4094 @x1772 @x3394 @x651 @x2867 @x651 @x2867 @x1772 @x3394 @x3701 @x4094 @x1385 @x451 @x651 @x2867 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        33
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1126
 :arith-nonlinear-bounds    26
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 203
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.86
 :memory                    3.69
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                10164610
 :num-checks                1
 :propagations              12
 :rlimit-count              95586
 :time                      0.07
 :total-time                0.08)
