unsat
((set-logic NIA)
(declare-fun b!2 () Int)
(declare-fun s!0 () Int)
(declare-fun q!3 () Int)
(declare-fun p!5 () Int)
(declare-fun a!4 () Int)
(declare-fun r!1 () Int)
(proof
(let ((?x428 (* p00 s00 b!2)))
 (let ((?x178 (* r00 b00 q!3)))
 (let ((?x145 (* q00 a00 s!0)))
 (let ((?x197 (+ ?x145 (* (- 1) (* s00 a00 q!3)) ?x178 (* (- 1) (* p00 b00 s!0)) ?x428 (* (- 1) (* q00 r00 b!2)))))
 (let (($x284 (>= ?x197 0)))
 (let (($x196 (= ?x197 0)))
 (let ((?x456 (* q00 r00 b!2)))
 (let ((?x161 (* (- 1) ?x428)))
 (let ((?x416 (* p00 b00 s!0)))
 (let ((?x415 (* r00 b00 p!5)))
 (let ((?x307 (* p00 s00 a!4)))
 (let ((?x258 (* q00 a00 r!1)))
 (let ((?x163 (* (- 1) ?x178)))
 (let ((?x165 (* s00 a00 q!3)))
 (let ((?x116 (* (- 1) ?x145)))
 (let ((?x662 (+ ?x116 ?x165 ?x163 (* (- 1) (* p00 b00 r!1)) ?x258 ?x307 (* (- 1) (* s00 a00 p!5)) (* (- 1) (* q00 r00 a!4)) ?x415 ?x416 ?x161 ?x456)))
 (let ((?x320 (+ (* (- 1) a!4) b!2)))
 (let ((?x484 (* (- 1) r!1)))
 (let ((?x127 (+ s!0 ?x484)))
 (let ((?x657 (* ?x127 ?x127 ?x127 ?x320 ?x662 r!1 a!4 a!4 a!4 p!5 p!5 p!5)))
 (let (($x665 (= ?x657 0)))
 (let ((?x220 (* (- 1) q!3)))
 (let ((?x124 (+ ?x220 p!5)))
 (let ((?x206 (+ a!4 (* (- 1) b!2))))
 (let ((?x445 (* (+ (* (- 1) s!0) r!1) ?x206 ?x206 ?x206 ?x124 ?x124 ?x124 (+ ?x116 ?x165 ?x163 ?x416 ?x161 ?x456) s!0 s!0 s!0 b!2)))
 (let (($x146 (= ?x445 0)))
 (let (($x417 (not $x146)))
 (let (($x664 (or $x417 (not $x665))))
 (let ((?x411 (* q00 r00 a!4)))
 (let ((?x364 (* s00 a00 p!5)))
 (let ((?x256 (* p00 b00 r!1)))
 (let ((?x370 (+ ?x256 (* (- 1) ?x258) (* (- 1) ?x307) ?x364 ?x411 (* (- 1) ?x415))))
 (let (($x363 (= ?x370 0)))
 (let ((?x129 (* q00 a00)))
 (let ((?x329 (+ ?x129 (* (- 1) (* p00 b00)) (* (- 1) (* a!4 q!3)) (* b!2 p!5))))
 (let ((?x548 (* b!2 r!1)))
 (let ((?x125 (* s00 a00)))
 (let (($x222 (= (+ ?x125 (* (- 1) (* r00 b00)) (* (- 1) (* a!4 s!0)) ?x548) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x504 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x533 (and (= (+ ?x37 ?x504 (* r!1 q!3) (* (- 1) (* s!0 p!5))) 0) $x222 (= ?x329 0) $x363 $x196 $x664)))
 (let ((?x369 (* (- 1) (* s!0 q00 a00))))
 (let ((?x385 (* q!3 s00 a00)))
 (let ((?x384 (* (- 1) (* q!3 r00 b00))))
 (let ((?x383 (* s!0 p00 b00)))
 (let ((?x123 (* r!1 q00 a00)))
 (let ((?x128 (* (- 1) (* p!5 s00 a00))))
 (let ((?x168 (* (- 1) (* r!1 p00 b00))))
 (let ((?x156 (* p!5 r00 b00)))
 (let ((?x281 (* (- 1) (* b!2 p00 s00))))
 (let ((?x126 (* b!2 q00 r00)))
 (let ((?x448 (* (- 1) (* a!4 q00 r00))))
 (let ((?x441 (* a!4 p00 s00)))
 (let ((?x486 (+ ?x484 s!0)))
 (let ((?x488 (* ?x486 ?x486 ?x486 ?x320 (+ ?x441 ?x448 ?x126 ?x281 ?x156 ?x168 ?x128 ?x123 ?x383 ?x384 ?x385 ?x369) r!1 a!4 a!4 a!4 p!5 p!5 p!5)))
 (let ((?x367 (+ ?x126 ?x281 ?x383 ?x384 ?x385 ?x369)))
 (let ((?x382 (+ p!5 ?x220)))
 (let ((?x455 (* (+ r!1 (* (- 1) s!0)) ?x206 ?x206 ?x206 ?x382 ?x382 ?x382 ?x367 s!0 s!0 s!0 b!2)))
 (let ((?x130 (* p00 b00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let ((?x301 (* a!4 q!3)))
 (let (($x543 (= (+ (* a!4 s!0) (* (- 1) ?x548) (* (- 1) ?x125) (* r00 b00)) 0)))
 (let (($x275 (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) (* q!3 r!1))) 0)))
 (let (($x246 (and $x275 $x543 (= (+ ?x301 ?x173 ?x130 (* (- 1) (* p!5 b!2))) 0) (= (+ ?x441 ?x448 ?x156 ?x168 ?x128 ?x123) 0) (= ?x367 0) (or (not (= ?x455 0)) (not (= ?x488 0))))))
 (let (($x142 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x299 (* (- 1) (* s q00 a00))))
 (let ((?x282 (* q s00 a00)))
 (let ((?x257 (* (- 1) (* q r00 b00))))
 (let ((?x247 (* s p00 b00)))
 (let ((?x218 (* r q00 a00)))
 (let ((?x240 (* (- 1) (* p s00 a00))))
 (let ((?x239 (* (- 1) (* r p00 b00))))
 (let ((?x184 (* p r00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x271 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x238 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x547 (+ ?x63 ?x238 ?x72 ?x271 ?x184 ?x239 ?x240 ?x218 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x324 (* (- 1) a)))
 (let ((?x444 (+ ?x324 b)))
 (let ((?x426 (* (- 1) r)))
 (let ((?x421 (+ ?x426 s)))
 (let (($x391 (= (* ?x421 ?x421 ?x421 ?x444 ?x547 r a a a p p p) 0)))
 (let ((?x305 (+ ?x72 ?x271 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let (($x481 (= (* ?x322 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x305 s s s b) 0)))
 (let (($x310 (= ?x305 0)))
 (let (($x242 (= (+ ?x63 ?x238 ?x184 ?x239 ?x240 ?x218) 0)))
 (let ((?x130 (* p00 b00)))
 (let ((?x129 (* q00 a00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let (($x176 (= (+ (* a q) ?x173 ?x130 (* (- 1) (* p b))) 0)))
 (let ((?x143 (* r00 b00)))
 (let ((?x125 (* s00 a00)))
 (let ((?x132 (* (- 1) ?x125)))
 (let ((?x49 (* a s)))
 (let (($x158 (= (+ ?x49 (* (- 1) (* b r)) ?x132 ?x143) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x153 (= (+ ?x33 ?x134 ?x41 (* (- 1) (* q r))) 0)))
 (and $x153 $x158 $x176 $x242 $x310 (or (not $x481) (not $x391)))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x347 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x190 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x324 (* (- 1) a)))
 (let ((?x133 (+ b ?x324)))
 (let ((?x426 (* (- 1) r)))
 (let ((?x376 (+ s ?x426)))
 (let (($x215 (= (* ?x376 ?x376 ?x376 ?x133 ?x190 r a a a p p p) 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x487 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let (($x551 (= (* ?x322 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x487 s s s b) 0)))
 (let (($x216 (or (not $x551) (not $x215))))
 (let (($x529 (= ?x487 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x288 (* p00 s00 a)))
 (let ((?x262 (* b00 r00 p)))
 (let ((?x351 (+ ?x262 ?x288 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x249 (* q a)))
 (let (($x295 (= (+ ?x249 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x526 (* r b)))
 (let (($x267 (= (+ ?x526 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x504 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x250 (* r q)))
 (and (= (+ ?x250 (* (- 1) (* s p)) ?x37 ?x504) 0) $x267 $x295 (= ?x351 0) $x529 $x216))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x194 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x299 (* (- 1) (* s q00 a00))))
 (let ((?x282 (* q s00 a00)))
 (let ((?x257 (* (- 1) (* q r00 b00))))
 (let ((?x247 (* s p00 b00)))
 (let ((?x218 (* r q00 a00)))
 (let ((?x240 (* (- 1) (* p s00 a00))))
 (let ((?x239 (* (- 1) (* r p00 b00))))
 (let ((?x184 (* p r00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x271 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x238 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x547 (+ ?x63 ?x238 ?x72 ?x271 ?x184 ?x239 ?x240 ?x218 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x324 (* (- 1) a)))
 (let ((?x444 (+ ?x324 b)))
 (let ((?x426 (* (- 1) r)))
 (let ((?x421 (+ ?x426 s)))
 (let (($x391 (= (* ?x421 ?x421 ?x421 ?x444 ?x547 r a a a p p p) 0)))
 (let ((?x305 (+ ?x72 ?x271 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let (($x481 (= (* ?x322 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x305 s s s b) 0)))
 (let (($x310 (= ?x305 0)))
 (let (($x242 (= (+ ?x63 ?x238 ?x184 ?x239 ?x240 ?x218) 0)))
 (let ((?x130 (* p00 b00)))
 (let ((?x129 (* q00 a00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let (($x176 (= (+ (* a q) ?x173 ?x130 (* (- 1) (* p b))) 0)))
 (let ((?x143 (* r00 b00)))
 (let ((?x125 (* s00 a00)))
 (let ((?x132 (* (- 1) ?x125)))
 (let ((?x49 (* a s)))
 (let (($x158 (= (+ ?x49 (* (- 1) (* b r)) ?x132 ?x143) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x153 (= (+ ?x33 ?x134 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x410 (and $x153 $x158 $x176 $x242 $x310 (or (not $x481) (not $x391)))))
 (let ((?x190 (+ (* q00 r00 (+ b ?x324)) (* b00 p00 (+ s ?x426)) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b ?x324))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s ?x426))))))
 (let ((?x133 (+ b ?x324)))
 (let ((?x376 (+ s ?x426)))
 (let (($x215 (= (* ?x376 ?x376 ?x376 ?x133 ?x190 r a a a p p p) 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x487 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x551 (= (* ?x322 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x487 s s s b) 0)))
 (let (($x216 (or (not $x551) (not $x215))))
 (let (($x529 (= ?x487 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x288 (* p00 s00 a)))
 (let ((?x262 (* b00 r00 p)))
 (let ((?x351 (+ ?x262 ?x288 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x249 (* q a)))
 (let (($x295 (= (+ ?x249 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x526 (* r b)))
 (let (($x267 (= (+ ?x526 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x346 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x339 (and $x346 $x267 $x295 (= ?x351 0) $x529 $x216)))
 (rewrite (= $x339 $x410))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x221 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x190 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x324 (* (- 1) a)))
 (let ((?x133 (+ b ?x324)))
 (let ((?x426 (* (- 1) r)))
 (let ((?x376 (+ s ?x426)))
 (let (($x215 (= (* ?x376 ?x376 ?x376 ?x133 ?x190 r a a a p p p) 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x487 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let (($x551 (= (* ?x322 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x487 s s s b) 0)))
 (let (($x216 (or (not $x551) (not $x215))))
 (let (($x529 (= ?x487 0)))
 (let ((?x353 (* a00 s00 p)))
 (let ((?x185 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x399 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x185 ?x353 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x303 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x279 (* s a)))
 (let (($x292 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x279 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x255 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x255 ?x134 ?x41) 0) $x292 $x303 (= ?x399 0) $x529 $x216))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x343 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x190 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x324 (* (- 1) a)))
 (let ((?x133 (+ b ?x324)))
 (let ((?x426 (* (- 1) r)))
 (let ((?x376 (+ s ?x426)))
 (let (($x215 (= (* ?x376 ?x376 ?x376 ?x133 ?x190 r a a a p p p) 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x487 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let (($x551 (= (* ?x322 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x487 s s s b) 0)))
 (let (($x216 (or (not $x551) (not $x215))))
 (let (($x529 (= ?x487 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x288 (* p00 s00 a)))
 (let ((?x262 (* b00 r00 p)))
 (let ((?x351 (+ ?x262 ?x288 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x249 (* q a)))
 (let (($x295 (= (+ ?x249 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x526 (* r b)))
 (let (($x267 (= (+ ?x526 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x504 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x250 (* r q)))
 (let (($x339 (and (= (+ ?x250 (* (- 1) (* s p)) ?x37 ?x504) 0) $x267 $x295 (= ?x351 0) $x529 $x216)))
 (let ((?x353 (* a00 s00 p)))
 (let ((?x185 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x472 (= (+ (* (- 1) ?x262) (* (- 1) ?x288) ?x65 ?x185 ?x353 (* (- 1) ?x69)) 0)))
 (let (($x303 (= (+ (* (- 1) ?x249) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x292 (= (+ (* (- 1) ?x526) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x315 (and (= (+ (* (- 1) ?x250) (* s p) (* (- 1) ?x37) ?x41) 0) $x292 $x303 $x472 $x529 $x216)))
 (rewrite (= $x315 $x339)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x109 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x92 (- s r)))
 (let ((?x90 (- b a)))
 (let ((?x98 (- (+ (* ?x90 q00 r00) (* b00 p00 ?x92)) (* b00 (- q p) r00))))
 (let ((?x103 (- (+ (- ?x98 (* ?x90 p00 s00)) (* a00 (- q p) s00)) (* a00 q00 ?x92))))
 (let (($x105 (= (* ?x103 a a a ?x90 p p p r ?x92 ?x92 ?x92) 0)))
 (let ((?x85 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x82 (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81)))
 (let ((?x87 (* ?x82 ?x84 ?x84 ?x84 b ?x85 ?x85 ?x85 (- r s) s s s)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) ?x49 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= ?x82 0) (or (not (= ?x87 0)) (not $x105)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x493 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x190 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x324 (* (- 1) a)))
 (let ((?x133 (+ b ?x324)))
 (let ((?x426 (* (- 1) r)))
 (let ((?x376 (+ s ?x426)))
 (let (($x215 (= (* ?x376 ?x376 ?x376 ?x133 ?x190 r a a a p p p) 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x487 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let (($x551 (= (* ?x322 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x487 s s s b) 0)))
 (let (($x216 (or (not $x551) (not $x215))))
 (let (($x529 (= ?x487 0)))
 (let ((?x353 (* a00 s00 p)))
 (let ((?x185 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x399 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x185 ?x353 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x303 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x279 (* s a)))
 (let (($x292 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x279 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x255 (* s p)))
 (let (($x315 (and (= (+ (* (- 1) (* r q)) ?x255 ?x134 ?x41) 0) $x292 $x303 (= ?x399 0) $x529 $x216)))
 (let ((?x92 (- s r)))
 (let ((?x90 (- b a)))
 (let ((?x98 (- (+ (* ?x90 q00 r00) (* b00 p00 ?x92)) (* b00 (- q p) r00))))
 (let ((?x103 (- (+ (- ?x98 (* ?x90 p00 s00)) (* a00 (- q p) s00)) (* a00 q00 ?x92))))
 (let (($x105 (= (* ?x103 a a a ?x90 p p p r ?x92 ?x92 ?x92) 0)))
 (let ((?x85 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x82 (- ?x80 ?x81)))
 (let ((?x87 (* ?x82 ?x84 ?x84 ?x84 b ?x85 ?x85 ?x85 (- r s) s s s)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x108 (and $x44 $x53 $x61 (= (- ?x68 ?x69) 0) (= ?x82 0) (or (not (= ?x87 0)) (not $x105)))))
 (rewrite (= $x108 $x315)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x110 (asserted $x109)))
 (let ((@x465 (mp (mp @x110 (quant-intro (proof-bind ?x493) (= $x109 $x221)) $x221) (rewrite (= $x221 $x221)) $x221)))
 (let ((@x366 (mp (mp @x465 (quant-intro (proof-bind ?x343) (= $x221 $x347)) $x347) (quant-intro (proof-bind ?x194) (= $x347 $x142)) $x142)))
 (let ((@x668 (mp (mp~ @x366 (sk (~ $x142 $x246)) $x246) (rewrite (= $x246 $x533)) $x533)))
 (let ((@x663 (and-elim @x668 $x196)))
 (let ((@x217 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x196) $x284)) @x663 $x284)))
 (let (($x268 (<= ?x197 0)))
 (let ((@x289 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x196) $x268)) @x663 $x268)))
 (let (($x172 (not (<= ?x445 0))))
 (let (($x151 (>= ?x657 0)))
 (let (($x435 (>= ?x370 0)))
 (let ((@x661 (and-elim @x668 $x363)))
 (let ((@x113 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x363) $x435)) @x661 $x435)))
 (let (($x436 (<= ?x370 0)))
 (let ((@x475 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x363) $x436)) @x661 $x436)))
 (let ((@x413 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x151)) @x475 @x289 @x113 @x217 false) $x151)))
 (let (($x157 (<= ?x657 0)))
 (let ((@x330 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x157)) @x475 @x289 @x113 @x217 false) $x157)))
 (let ((@x390 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x665 (not $x157) (not $x151))) @x330 @x413 $x665)))
 (let (($x180 (>= ?x445 0)))
 (let ((@x423 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x146 $x172 (not $x180))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x180)) @x289 @x217 false) $x180) (unit-resolution (and-elim @x668 $x664) @x390 $x417) $x172)))
 ((_ th-lemma arith farkas 1 1 1) @x423 @x289 @x217 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 14
 :arith-assert-diseq        3
 :arith-assert-lower        23
 :arith-assert-upper        22
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           10
 :arith-grobner             4
 :arith-max-min             352
 :arith-nonlinear-horner    40
 :arith-num-rows            12
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      3
 :arith-tableau-max-columns 51
 :arith-tableau-max-rows    12
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                3.63
 :memory                    3.14
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                1224211
 :num-checks                1
 :propagations              19
 :rlimit-count              8717
 :time                      0.04
 :total-time                0.02)
