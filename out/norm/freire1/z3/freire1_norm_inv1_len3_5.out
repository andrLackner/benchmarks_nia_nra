unsat
((set-logic NIA)
(declare-fun x!0 () Int)
(declare-fun r!1 () Int)
(proof
(let ((?x904 (* 2 x!0)))
 (let ((?x303 (* r!1 r!1)))
 (let ((?x1076 (* (- 1) r!1)))
 (let ((?x36 (* r00 r00)))
 (let ((?x1321 (* (- 1) ?x36)))
 (let ((?x337 (* (- 2) x00)))
 (let ((?x909 (+ r00 ?x337 ?x1321 ?x1076 ?x303 ?x904)))
 (let (($x1179 (<= ?x909 0)))
 (let (($x116 (= ?x909 0)))
 (let ((?x1078 (+ ?x1076 x!0)))
 (let ((?x1019 (+ 1 r!1)))
 (let ((?x1079 (* ?x1019 ?x1019 ?x1019 ?x1078 ?x1078 ?x1078)))
 (let ((?x305 (* (- 1) ?x303)))
 (let ((?x937 (+ r00 ?x337 ?x1321 ?x1076 ?x305 (* r00 r!1 r!1) (* 12 (* x00 r!1 x!0 x!0)) ?x904 (* r00 r00 r!1 r!1 r!1 r!1) (* (- 6) (* r00 r00 r!1 r!1 x!0)) (* (- 3) (* r00 r00 r!1 r!1 r!1 x!0)) (* 6 (* r00 r00 r!1 x!0 x!0)) (* (- 2) (* r00 r!1 r!1 r!1)) (* (- 1) (* r00 r!1 r!1 r!1 r!1)) (* 3 (* r00 r00 r!1 r!1 x!0 x!0)) (* (- 2) (* r00 r00 x!0 x!0 x!0)) (* (- 1) (* r00 r00 r!1 x!0 x!0 x!0)) (* r00 r!1 x!0 x!0 x!0) (* (- 4) (* x00 x!0 x!0 x!0)) (* 2 (* r00 r!1)) (* 2 (* r00 r00 r!1 r!1 r!1)) (* (- 17) (* r!1 x!0 x!0 x!0)) (* 6 (* r00 r!1 r!1 x!0)) (* (- 8) (* r!1 r!1 r!1 r!1 x!0)) (* 12 (* r!1 r!1 r!1 x!0 x!0)) (* 2 (* r!1 r!1 r!1)) (* (- 1) (* r!1 r!1 x!0)) (* 2 (* r!1 r!1 r!1 r!1 r!1)) (* 4 (* r!1 x!0)) ?x1079 (* 2 (* r!1 x!0 x!0 x!0 x!0)) (* 6 (* r!1 r!1 r!1 r!1)) (* 4 (* x!0 x!0 x!0 x!0)) (* (- 1) (* x!0 x!0 x!0)) (* (- 19) (* r!1 r!1 r!1 x!0)) (* 3 (* r!1 x!0 x!0)) (* 27 (* r!1 r!1 x!0 x!0)) (* (- 8) (* r!1 r!1 x!0 x!0 x!0)) (* 3 (* r00 r!1 r!1 r!1 x!0)) (* (- 6) (* r00 r!1 x!0 x!0)) (* (- 3) (* r00 r!1 r!1 x!0 x!0)) (* 2 (* r00 x!0 x!0 x!0)) (* (- 1) (* r00 r00 r!1 r!1)) (* (- 2) (* x00 r!1 r!1)) (* (- 2) (* r00 r00 r!1)) (* (- 4) (* x00 r!1)) (* 6 (* x00 r!1 r!1 x!0 x!0)) (* (- 6) (* x00 r!1 r!1 r!1 x!0)) (* 2 (* x00 r!1 r!1 r!1 r!1)) (* (- 12) (* x00 r!1 r!1 x!0)) (* 4 (* x00 r!1 r!1 r!1)) (* (- 2) (* x00 r!1 x!0 x!0 x!0)))))
 (let (($x938 (= ?x937 0)))
 (let (($x947 (not $x938)))
 (let (($x1234 (and $x116 $x947)))
 (let ((?x1099 (* x!0 x!0 x!0)))
 (let ((?x1073 (* r!1 r!1 x!0)))
 (let ((?x35 (* 2 x00)))
 (let ((?x131 (* (- 1) r00)))
 (let ((?x302 (* (- 2) x!0)))
 (let ((?x1113 (+ r!1 ?x302 ?x131 ?x303 ?x35 ?x36 (* 8 (* r!1 r!1 r!1 r!1 x!0)) (* 4 (* x!0 x!0 x!0 x00)) (* (- 2) (* r!1 r00)) (* (- 1) (* r!1 r!1 r00)) (* (- 2) (* r!1 r!1 r!1 r00 r00)) (* (- 1) (* r!1 r!1 r!1 r!1 r00 r00)) (* (- 12) (* r!1 r!1 r!1 x!0 x!0)) (* 6 (* r!1 r!1 x!0 r00 r00)) (* 3 (* r!1 r!1 r!1 x!0 r00 r00)) (* (- 6) (* r!1 x!0 x!0 r00 r00)) (* (- 3) (* r!1 r!1 x!0 x!0 r00 r00)) (* 2 (* x!0 x!0 x!0 r00 r00)) (* r!1 x!0 x!0 x!0 r00 r00) (* (- 2) (* r!1 r!1 r!1)) (* 2 (* r!1 r!1 r!1 r00)) (* r!1 r!1 r!1 r!1 r00) (* (- 6) (* r!1 r!1 x!0 r00)) (* (- 3) (* r!1 r!1 r!1 x!0 r00)) (* 6 (* r!1 x!0 x!0 r00)) (* 3 (* r!1 r!1 x!0 x!0 r00)) (* (- 2) (* x!0 x!0 x!0 r00)) (* (- 1) (* r!1 x!0 x!0 x!0 r00)) (* (- 2) (* r!1 r!1 r!1 r!1 r!1)) (* (- 4) (* r!1 x!0)) ?x1073 (* (- 1) ?x1079) (* (- 6) (* r!1 r!1 r!1 r!1)) (* (- 4) (* x!0 x!0 x!0 x!0)) (* (- 2) (* r!1 x!0 x!0 x!0 x!0)) (* 2 (* r!1 x!0 x!0 x!0 x00)) (* (- 4) (* r!1 r!1 r!1 x00)) (* 12 (* r!1 r!1 x!0 x00)) (* (- 12) (* r!1 x!0 x!0 x00)) (* (- 2) (* r!1 r!1 r!1 r!1 x00)) (* 6 (* r!1 r!1 r!1 x!0 x00)) (* (- 6) (* r!1 r!1 x!0 x!0 x00)) ?x1099 (* 17 (* r!1 x!0 x!0 x!0)) (* 19 (* r!1 r!1 r!1 x!0)) (* (- 3) (* r!1 x!0 x!0)) (* (- 27) (* r!1 r!1 x!0 x!0)) (* 4 (* r!1 x00)) (* 2 (* r!1 r!1 x00)) (* 2 (* r!1 r00 r00)) (* r!1 r!1 r00 r00) (* 8 (* r!1 r!1 x!0 x!0 x!0)))))
 (let (($x1119 (and (= (+ r!1 ?x302 ?x131 ?x305 ?x35 ?x36) 0) (not (= ?x1113 0)))))
 (let (($x1192 (exists ((r Int) (x Int) )(! (let ((?x1358 (* r r r00 r00)))
 (let ((?x1369 (* 2 (* r r00 r00))))
 (let ((?x1298 (* 2 (* r r x00))))
 (let ((?x1470 (* 4 (* r x00))))
 (let ((?x1116 (* (- 3) (* r x x))))
 (let ((?x1026 (* x x x)))
 (let ((?x1469 (* (- 6) (* r r x x x00))))
 (let ((?x1468 (* 6 (* r r r x x00))))
 (let ((?x1467 (* (- 2) (* r r r r x00))))
 (let ((?x850 (* 2 (* r x x x x00))))
 (let ((?x1463 (* (- 2) (* r x x x x))))
 (let ((?x1462 (* (- 4) (* x x x x))))
 (let ((?x81 (* (- 1) r)))
 (let ((?x144 (+ ?x81 x)))
 (let ((?x173 (+ 1 r)))
 (let ((?x1430 (* (- 1) (* ?x173 ?x173 ?x173 ?x144 ?x144 ?x144))))
 (let ((?x661 (* r r x)))
 (let ((?x1424 (* (- 1) (* r x x x r00))))
 (let ((?x1423 (* (- 2) (* x x x r00))))
 (let ((?x1422 (* 3 (* r r x x r00))))
 (let ((?x1421 (* 6 (* r x x r00))))
 (let ((?x1420 (* (- 3) (* r r r x r00))))
 (let ((?x1419 (* (- 6) (* r r x r00))))
 (let ((?x522 (* r r r r r00)))
 (let ((?x1418 (* 2 (* r r r r00))))
 (let ((?x354 (* r x x x r00 r00)))
 (let ((?x1416 (* 2 (* x x x r00 r00))))
 (let ((?x365 (* (- 3) (* r r x x r00 r00))))
 (let ((?x1415 (* (- 6) (* r x x r00 r00))))
 (let ((?x362 (* 3 (* r r r x r00 r00))))
 (let ((?x1414 (* 6 (* r r x r00 r00))))
 (let ((?x252 (* (- 1) (* r r r r r00 r00))))
 (let ((?x1413 (* (- 2) (* r r r r00 r00))))
 (let ((?x1412 (* (- 1) (* r r r00))))
 (let ((?x1411 (* (- 2) (* r r00))))
 (let ((?x1410 (* 4 (* x x x x00))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x30 (* r r)))
 (let ((?x131 (* (- 1) r00)))
 (let ((?x130 (* (- 2) x)))
 (let ((?x1725 (+ r ?x130 ?x131 ?x30 ?x35 ?x36 (* 8 (* r r r r x)) ?x1410 ?x1411 ?x1412 ?x1413 ?x252 (* (- 12) (* r r r x x)) ?x1414 ?x362 ?x1415 ?x365 ?x1416 ?x354 (* (- 2) (* r r r)) ?x1418 ?x522 ?x1419 ?x1420 ?x1421 ?x1422 ?x1423 ?x1424 (* (- 2) (* r r r r r)) (* (- 4) (* r x)) ?x661 ?x1430 (* (- 6) (* r r r r)) ?x1462 ?x1463 ?x850 (* (- 4) (* r r r x00)) (* 12 (* r r x x00)) (* (- 12) (* r x x x00)) ?x1467 ?x1468 ?x1469 ?x1026 (* 17 (* r x x x)) (* 19 (* r r r x)) ?x1116 (* (- 27) (* r r x x)) ?x1470 ?x1298 ?x1369 ?x1358 (* 8 (* r r x x x)))))
 (let (($x134 (= (+ r ?x130 ?x131 (* (- 1) ?x30) ?x35 ?x36) 0)))
 (and $x134 (not (= ?x1725 0)))))))))))))))))))))))))))))))))))))))))))))) :qid k!26))
 ))
 (let (($x288 (exists ((r Int) (x Int) )(! (let ((?x173 (+ 1 r)))
 (let ((?x518 (* r00 r00 ?x173 ?x173)))
 (let ((?x81 (* (- 1) r)))
 (let ((?x273 (+ x ?x81)))
 (let ((?x290 (* r00 ?x273 ?x273 ?x273)))
 (let ((?x588 (* r00 r00 ?x273 ?x273 ?x273)))
 (let ((?x214 (* ?x173 ?x273 ?x273 ?x273)))
 (let ((?x155 (* ?x173 ?x173 ?x173)))
 (let ((?x1331 (* r00 r00 ?x173 ?x273 ?x273 ?x273)))
 (let ((?x1306 (+ (* 2 (* x00 ?x273 ?x273 ?x273)) (* (- 1) (* r00 ?x173 ?x173)) ?x1331 ?x155 (* (- 1) (* r00 ?x173 ?x273 ?x273 ?x273)) (* (- 2) (* ?x173 ?x173 ?x273)) (* (- 1) (* ?x173 ?x173 ?x173 ?x273 ?x273 ?x273)) (* (- 1) (* ?x173 ?x173 ?x173 ?x173)) (* (- 2) (* ?x173 ?x273 ?x273 ?x273 ?x273)) (* 2 (* x00 ?x173 ?x273 ?x273 ?x273)) ?x214 (* (- 2) (* ?x273 ?x273 ?x273 ?x273)) ?x588 (* (- 1) ?x290) (* 2 (* x00 ?x173 ?x173)) ?x518)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x130 (* (- 2) x)))
 (let ((?x30 (* r r)))
 (let ((?x132 (* (- 1) ?x30)))
 (let ((?x131 (* (- 1) r00)))
 (and (= (+ r ?x131 ?x132 ?x130 ?x35 ?x36) 0) (not (= ?x1306 0))))))))))))))))))) :qid k!26))
 ))
 (let ((?x789 (lambda ((r Int) (x Int) )(let ((?x1358 (* r r r00 r00)))
 (let ((?x1369 (* 2 (* r r00 r00))))
 (let ((?x1298 (* 2 (* r r x00))))
 (let ((?x1470 (* 4 (* r x00))))
 (let ((?x1116 (* (- 3) (* r x x))))
 (let ((?x1026 (* x x x)))
 (let ((?x1469 (* (- 6) (* r r x x x00))))
 (let ((?x1468 (* 6 (* r r r x x00))))
 (let ((?x1467 (* (- 2) (* r r r r x00))))
 (let ((?x850 (* 2 (* r x x x x00))))
 (let ((?x1463 (* (- 2) (* r x x x x))))
 (let ((?x1462 (* (- 4) (* x x x x))))
 (let ((?x81 (* (- 1) r)))
 (let ((?x144 (+ ?x81 x)))
 (let ((?x173 (+ 1 r)))
 (let ((?x1430 (* (- 1) (* ?x173 ?x173 ?x173 ?x144 ?x144 ?x144))))
 (let ((?x661 (* r r x)))
 (let ((?x1424 (* (- 1) (* r x x x r00))))
 (let ((?x1423 (* (- 2) (* x x x r00))))
 (let ((?x1422 (* 3 (* r r x x r00))))
 (let ((?x1421 (* 6 (* r x x r00))))
 (let ((?x1420 (* (- 3) (* r r r x r00))))
 (let ((?x1419 (* (- 6) (* r r x r00))))
 (let ((?x522 (* r r r r r00)))
 (let ((?x1418 (* 2 (* r r r r00))))
 (let ((?x354 (* r x x x r00 r00)))
 (let ((?x1416 (* 2 (* x x x r00 r00))))
 (let ((?x365 (* (- 3) (* r r x x r00 r00))))
 (let ((?x1415 (* (- 6) (* r x x r00 r00))))
 (let ((?x362 (* 3 (* r r r x r00 r00))))
 (let ((?x1414 (* 6 (* r r x r00 r00))))
 (let ((?x252 (* (- 1) (* r r r r r00 r00))))
 (let ((?x1413 (* (- 2) (* r r r r00 r00))))
 (let ((?x1412 (* (- 1) (* r r r00))))
 (let ((?x1411 (* (- 2) (* r r00))))
 (let ((?x1410 (* 4 (* x x x x00))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x30 (* r r)))
 (let ((?x131 (* (- 1) r00)))
 (let ((?x130 (* (- 2) x)))
 (let ((?x1725 (+ r ?x130 ?x131 ?x30 ?x35 ?x36 (* 8 (* r r r r x)) ?x1410 ?x1411 ?x1412 ?x1413 ?x252 (* (- 12) (* r r r x x)) ?x1414 ?x362 ?x1415 ?x365 ?x1416 ?x354 (* (- 2) (* r r r)) ?x1418 ?x522 ?x1419 ?x1420 ?x1421 ?x1422 ?x1423 ?x1424 (* (- 2) (* r r r r r)) (* (- 4) (* r x)) ?x661 ?x1430 (* (- 6) (* r r r r)) ?x1462 ?x1463 ?x850 (* (- 4) (* r r r x00)) (* 12 (* r r x x00)) (* (- 12) (* r x x x00)) ?x1467 ?x1468 ?x1469 ?x1026 (* 17 (* r x x x)) (* 19 (* r r r x)) ?x1116 (* (- 27) (* r r x x)) ?x1470 ?x1298 ?x1369 ?x1358 (* 8 (* r r x x x)))))
 (let (($x134 (= (+ r ?x130 ?x131 (* (- 1) ?x30) ?x35 ?x36) 0)))
 (let (($x1731 (and $x134 (not (= ?x1725 0)))))
 (let ((?x518 (* r00 r00 ?x173 ?x173)))
 (let ((?x273 (+ x ?x81)))
 (let ((?x588 (* r00 r00 ?x273 ?x273 ?x273)))
 (let ((?x214 (* ?x173 ?x273 ?x273 ?x273)))
 (let ((?x155 (* ?x173 ?x173 ?x173)))
 (let ((?x1331 (* r00 r00 ?x173 ?x273 ?x273 ?x273)))
 (let ((?x1306 (+ (* 2 (* x00 ?x273 ?x273 ?x273)) (* (- 1) (* r00 ?x173 ?x173)) ?x1331 ?x155 (* (- 1) (* r00 ?x173 ?x273 ?x273 ?x273)) (* (- 2) (* ?x173 ?x173 ?x273)) (* (- 1) (* ?x173 ?x173 ?x173 ?x273 ?x273 ?x273)) (* (- 1) (* ?x173 ?x173 ?x173 ?x173)) (* (- 2) (* ?x173 ?x273 ?x273 ?x273 ?x273)) (* 2 (* x00 ?x173 ?x273 ?x273 ?x273)) ?x214 (* (- 2) (* ?x273 ?x273 ?x273 ?x273)) ?x588 (* (- 1) (* r00 ?x273 ?x273 ?x273)) (* 2 (* x00 ?x173 ?x173)) ?x518)))
 (let (($x260 (and (= (+ r ?x131 (* (- 1) ?x30) ?x130 ?x35 ?x36) 0) (not (= ?x1306 0)))))
 (rewrite (= $x260 $x1731)))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1339 (exists ((r Int) (x Int) )(! (let ((?x81 (* (- 1) r)))
 (let ((?x273 (+ x ?x81)))
 (let ((?x290 (* r00 ?x273 ?x273 ?x273)))
 (let ((?x173 (+ 1 r)))
 (let ((?x1150 (* ?x173 ?x173 ?x173 ?x173)))
 (let ((?x695 (* ?x173 ?x173 ?x173 ?x273 ?x273 ?x273)))
 (let ((?x1281 (* r00 ?x173 ?x273 ?x273 ?x273)))
 (let ((?x1328 (* r00 ?x173 ?x173)))
 (let ((?x529 (+ (* (- 2) (* x00 ?x273 ?x273 ?x273)) ?x1328 (* (- 1) (* r00 r00 ?x173 ?x273 ?x273 ?x273)) (* (- 1) (* ?x173 ?x173 ?x173)) ?x1281 (* 2 (* ?x173 ?x173 ?x273)) ?x695 ?x1150 (* 2 (* ?x173 ?x273 ?x273 ?x273 ?x273)) (* (- 2) (* x00 ?x173 ?x273 ?x273 ?x273)) (* (- 1) (* ?x173 ?x273 ?x273 ?x273)) (* 2 (* ?x273 ?x273 ?x273 ?x273)) (* (- 1) (* r00 r00 ?x273 ?x273 ?x273)) ?x290 (* (- 2) (* x00 ?x173 ?x173)) (* (- 1) (* r00 r00 ?x173 ?x173)))))
 (let ((?x36 (* r00 r00)))
 (let ((?x1321 (* (- 1) ?x36)))
 (let ((?x337 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (and (= (+ ?x81 r00 ?x30 ?x32 ?x337 ?x1321) 0) (not (= ?x529 0))))))))))))))))) :qid k!26))
 ))
 (let ((?x245 (lambda ((r Int) (x Int) )(let ((?x173 (+ 1 r)))
 (let ((?x518 (* r00 r00 ?x173 ?x173)))
 (let ((?x81 (* (- 1) r)))
 (let ((?x273 (+ x ?x81)))
 (let ((?x290 (* r00 ?x273 ?x273 ?x273)))
 (let ((?x588 (* r00 r00 ?x273 ?x273 ?x273)))
 (let ((?x214 (* ?x173 ?x273 ?x273 ?x273)))
 (let ((?x155 (* ?x173 ?x173 ?x173)))
 (let ((?x1331 (* r00 r00 ?x173 ?x273 ?x273 ?x273)))
 (let ((?x1306 (+ (* 2 (* x00 ?x273 ?x273 ?x273)) (* (- 1) (* r00 ?x173 ?x173)) ?x1331 ?x155 (* (- 1) (* r00 ?x173 ?x273 ?x273 ?x273)) (* (- 2) (* ?x173 ?x173 ?x273)) (* (- 1) (* ?x173 ?x173 ?x173 ?x273 ?x273 ?x273)) (* (- 1) (* ?x173 ?x173 ?x173 ?x173)) (* (- 2) (* ?x173 ?x273 ?x273 ?x273 ?x273)) (* 2 (* x00 ?x173 ?x273 ?x273 ?x273)) ?x214 (* (- 2) (* ?x273 ?x273 ?x273 ?x273)) ?x588 (* (- 1) ?x290) (* 2 (* x00 ?x173 ?x173)) ?x518)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x130 (* (- 2) x)))
 (let ((?x30 (* r r)))
 (let ((?x132 (* (- 1) ?x30)))
 (let ((?x131 (* (- 1) r00)))
 (let (($x260 (and (= (+ r ?x131 ?x132 ?x130 ?x35 ?x36) 0) (not (= ?x1306 0)))))
 (let ((?x1150 (* ?x173 ?x173 ?x173 ?x173)))
 (let ((?x695 (* ?x173 ?x173 ?x173 ?x273 ?x273 ?x273)))
 (let ((?x1281 (* r00 ?x173 ?x273 ?x273 ?x273)))
 (let ((?x1328 (* r00 ?x173 ?x173)))
 (let ((?x529 (+ (* (- 2) (* x00 ?x273 ?x273 ?x273)) ?x1328 (* (- 1) ?x1331) (* (- 1) ?x155) ?x1281 (* 2 (* ?x173 ?x173 ?x273)) ?x695 ?x1150 (* 2 (* ?x173 ?x273 ?x273 ?x273 ?x273)) (* (- 2) (* x00 ?x173 ?x273 ?x273 ?x273)) (* (- 1) ?x214) (* 2 (* ?x273 ?x273 ?x273 ?x273)) (* (- 1) ?x588) ?x290 (* (- 2) (* x00 ?x173 ?x173)) (* (- 1) ?x518))))
 (let (($x1329 (= (+ ?x81 r00 ?x30 (* 2 x) (* (- 2) x00) (* (- 1) ?x36)) 0)))
 (let (($x272 (and $x1329 (not (= ?x529 0)))))
 (rewrite (= $x272 $x260)))))))))))))))))))))))))))
 ))
 (let (($x76 (exists ((r Int) (x Int) )(! (let ((?x42 (- x r)))
 (let ((?x44 (+ r 1)))
 (let ((?x49 (- (+ (* (- 2) ?x42 ?x42 ?x42 x00) (* ?x44 ?x44 r00)) (* ?x44 r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x57 (+ (- ?x49 (* ?x44 ?x44 ?x44)) (* ?x44 r00 ?x42 ?x42 ?x42) (* 2 ?x44 ?x44 ?x42) (* ?x44 ?x44 ?x44 ?x42 ?x42 ?x42) (* ?x44 ?x44 ?x44 ?x44) (* 2 ?x44 ?x42 ?x42 ?x42 ?x42) (* 0 ?x44 ?x44 ?x42 ?x42 ?x42))))
 (let ((?x61 (- (- ?x57 (* 2 ?x44 ?x42 ?x42 ?x42 x00)) (* ?x44 ?x42 ?x42 ?x42))))
 (let ((?x65 (- (+ ?x61 (* 2 ?x42 ?x42 ?x42 ?x42)) (* r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x71 (- (- (+ ?x65 (* r00 ?x42 ?x42 ?x42)) (* 2 ?x44 ?x44 x00)) (* ?x44 ?x44 r00 r00))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 (* r r) (* 2 x)) ?x35) ?x36)))
 (and (= ?x38 0) (or (not (= ?x71 0)))))))))))))) :qid k!26))
 ))
 (let ((?x102 (lambda ((r Int) (x Int) )(let ((?x81 (* (- 1) r)))
 (let ((?x273 (+ x ?x81)))
 (let ((?x290 (* r00 ?x273 ?x273 ?x273)))
 (let ((?x173 (+ 1 r)))
 (let ((?x1150 (* ?x173 ?x173 ?x173 ?x173)))
 (let ((?x695 (* ?x173 ?x173 ?x173 ?x273 ?x273 ?x273)))
 (let ((?x1281 (* r00 ?x173 ?x273 ?x273 ?x273)))
 (let ((?x1328 (* r00 ?x173 ?x173)))
 (let ((?x529 (+ (* (- 2) (* x00 ?x273 ?x273 ?x273)) ?x1328 (* (- 1) (* r00 r00 ?x173 ?x273 ?x273 ?x273)) (* (- 1) (* ?x173 ?x173 ?x173)) ?x1281 (* 2 (* ?x173 ?x173 ?x273)) ?x695 ?x1150 (* 2 (* ?x173 ?x273 ?x273 ?x273 ?x273)) (* (- 2) (* x00 ?x173 ?x273 ?x273 ?x273)) (* (- 1) (* ?x173 ?x273 ?x273 ?x273)) (* 2 (* ?x273 ?x273 ?x273 ?x273)) (* (- 1) (* r00 r00 ?x273 ?x273 ?x273)) ?x290 (* (- 2) (* x00 ?x173 ?x173)) (* (- 1) (* r00 r00 ?x173 ?x173)))))
 (let ((?x36 (* r00 r00)))
 (let ((?x1321 (* (- 1) ?x36)))
 (let ((?x337 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (let (($x272 (and (= (+ ?x81 r00 ?x30 ?x32 ?x337 ?x1321) 0) (not (= ?x529 0)))))
 (let ((?x42 (- x r)))
 (let ((?x44 (+ r 1)))
 (let ((?x49 (- (+ (* (- 2) ?x42 ?x42 ?x42 x00) (* ?x44 ?x44 r00)) (* ?x44 r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x57 (+ (- ?x49 (* ?x44 ?x44 ?x44)) (* ?x44 r00 ?x42 ?x42 ?x42) (* 2 ?x44 ?x44 ?x42) (* ?x44 ?x44 ?x44 ?x42 ?x42 ?x42) (* ?x44 ?x44 ?x44 ?x44) (* 2 ?x44 ?x42 ?x42 ?x42 ?x42) (* 0 ?x44 ?x44 ?x42 ?x42 ?x42))))
 (let ((?x61 (- (- ?x57 (* 2 ?x44 ?x42 ?x42 ?x42 x00)) (* ?x44 ?x42 ?x42 ?x42))))
 (let ((?x65 (- (+ ?x61 (* 2 ?x42 ?x42 ?x42 ?x42)) (* r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x71 (- (- (+ ?x65 (* r00 ?x42 ?x42 ?x42)) (* 2 ?x44 ?x44 x00)) (* ?x44 ?x44 r00 r00))))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 ?x30 ?x32) (* 2 x00)) ?x36)))
 (let (($x75 (and (= ?x38 0) (or (not (= ?x71 0))))))
 (rewrite (= $x75 $x272)))))))))))))))))))))))))))
 ))
 (let ((@x77 (asserted $x76)))
 (let ((@x1341 (mp (mp @x77 (quant-intro (proof-bind ?x102) (= $x76 $x1339)) $x1339) (rewrite (= $x1339 $x1339)) $x1339)))
 (let ((@x1307 (mp (mp @x1341 (quant-intro (proof-bind ?x245) (= $x1339 $x288)) $x288) (quant-intro (proof-bind ?x789) (= $x288 $x1192)) $x1192)))
 (let ((@x949 (mp (mp~ @x1307 (sk (~ $x1192 $x1119)) $x1119) (rewrite (= $x1119 $x1234)) $x1234)))
 (let ((@x945 (and-elim @x949 $x116)))
 (let ((@x885 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x116) $x1179)) @x945 $x1179)))
 (let (($x1178 (>= ?x909 0)))
 (let ((@x864 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x116) $x1178)) @x945 $x1178)))
 (let (($x829 (not (>= ?x937 0))))
 (let (($x1173 (<= ?x937 0)))
 (let ((@x1029 (lemma ((_ th-lemma arith) (hypothesis (not $x1173)) @x864 @x885 @x864 @x885 false) $x1173)))
 (let ((@x870 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x938 (not $x1173) $x829)) (and-elim @x949 $x947) (or (not $x1173) $x829))))
 ((_ th-lemma arith) (unit-resolution @x870 @x1029 $x829) @x864 @x885 @x864 @x885 false))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 1
 :arith-assert-diseq        1
 :arith-assert-lower        19
 :arith-assert-upper        3
 :arith-conflicts           2
 :arith-eq-adapter          2
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             416
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    8
 :arith-num-rows            4
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              2
 :arith-row-summations      1
 :arith-tableau-max-columns 73
 :arith-tableau-max-rows    4
 :conflicts                 2
 :decisions                 1
 :del-clause                7
 :final-checks              4
 :max-memory                3.85
 :memory                    3.27
 :mk-bool-var               12
 :mk-clause                 7
 :num-allocs                1379306
 :num-checks                1
 :propagations              4
 :rlimit-count              8484
 :time                      0.01
 :total-time                0.02)
