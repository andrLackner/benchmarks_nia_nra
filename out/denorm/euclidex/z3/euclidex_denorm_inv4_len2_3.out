unsat
((set-logic NIA)
(declare-fun p!5 () Int)
(declare-fun r!1 () Int)
(declare-fun a!4 () Int)
(declare-fun q!3 () Int)
(declare-fun s!0 () Int)
(declare-fun b!2 () Int)
(proof
(let ((?x400 (* q00 a00 r!1)))
 (let ((?x167 (* r00 b00 p!5)))
 (let ((?x141 (* p00 s00 a!4)))
 (let ((?x520 (+ ?x141 (* (- 1) (* q00 r00 a!4)) ?x167 (* (- 1) (* p00 b00 r!1)) ?x400 (* (- 1) (* s00 a00 p!5)))))
 (let (($x756 (>= ?x520 0)))
 (let (($x906 (= ?x520 0)))
 (let ((?x904 (* r00 b00 q!3)))
 (let ((?x749 (* q00 a00 s!0)))
 (let ((?x530 (* s00 a00 p!5)))
 (let ((?x772 (* (- 1) ?x400)))
 (let ((?x381 (* p00 b00 r!1)))
 (let ((?x199 (* p00 s00 b!2)))
 (let ((?x862 (* (- 1) ?x167)))
 (let ((?x160 (* q00 r00 a!4)))
 (let ((?x953 (* (- 1) ?x141)))
 (let ((?x796 (+ ?x953 ?x160 (* (- 1) (* q00 r00 b!2)) ?x862 ?x199 (* (- 1) (* s00 a00 q!3)) ?x381 ?x772 (* (- 1) (* p00 b00 s!0)) ?x530 ?x749 ?x904)))
 (let ((?x349 (* (- 1) (* s!0 b!2 r!1 r!1 a!4 a!4))))
 (let ((?x644 (* (- 1) (* s!0 r!1 a!4 p!5 p!5))))
 (let ((?x776 (+ (* (- 1) (* s!0 s!0 s!0 b!2 b!2 b!2)) (* (- 2) (* s!0 s!0 q!3 a!4 p!5)) (* 2 (* s!0 b!2 b!2 r!1 r!1 a!4)) ?x644 (* (- 2) (* s!0 b!2 r!1 q!3 p!5)) (* s!0 b!2 r!1 p!5 p!5) (* 2 (* s!0 s!0 b!2 b!2 b!2 r!1)) (* 2 (* s!0 s!0 s!0 b!2 b!2 a!4)) (* s!0 s!0 a!4 p!5 p!5) (* (- 1) (* s!0 r!1 q!3 q!3 a!4)) (* (- 1) (* s!0 s!0 s!0 b!2 a!4 a!4)) (* s!0 b!2 r!1 q!3 q!3) (* (- 1) (* s!0 s!0 b!2 p!5 p!5)) (* 2 (* s!0 r!1 q!3 a!4 p!5)) (* 2 (* s!0 s!0 b!2 q!3 p!5)) (* s!0 s!0 q!3 q!3 a!4) ?x349 (* (- 1) (* s!0 s!0 b!2 q!3 q!3)) (* (- 1) (* s!0 b!2 b!2 b!2 r!1 r!1)) (* 2 (* s!0 s!0 b!2 r!1 a!4 a!4)) (* (- 4) (* s!0 s!0 b!2 b!2 r!1 a!4)))))
 (let ((?x799 (* ?x776 ?x796)))
 (let (($x783 (= ?x799 0)))
 (let ((?x903 (+ (* s!0 r!1 r!1 a!4 a!4 a!4) (* (- 1) (* r!1 r!1 r!1 a!4 a!4 a!4)) ?x644 (* r!1 r!1 a!4 p!5 p!5) (* b!2 r!1 r!1 r!1 a!4 a!4) ?x349)))
 (let ((?x703 (* ?x903 (+ ?x953 ?x160 ?x862 ?x381 ?x772 ?x530))))
 (let (($x780 (= ?x703 0)))
 (let (($x368 (not $x780)))
 (let (($x785 (or $x368 (not $x783))))
 (let ((?x519 (* p00 b00 s!0)))
 (let ((?x322 (* s00 a00 q!3)))
 (let ((?x166 (* q00 r00 b!2)))
 (let ((?x293 (+ ?x166 (* (- 1) ?x199) ?x322 ?x519 (* (- 1) ?x749) (* (- 1) ?x904))))
 (let (($x742 (= ?x293 0)))
 (let ((?x132 (* q00 a00)))
 (let ((?x117 (+ ?x132 (* (- 1) (* p00 b00)) (* (- 1) (* q!3 a!4)) (* b!2 p!5))))
 (let ((?x797 (* b!2 r!1)))
 (let ((?x128 (* s00 a00)))
 (let (($x628 (= (+ ?x128 (* (- 1) (* r00 b00)) (* (- 1) (* s!0 a!4)) ?x797) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x545 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x616 (and (= (+ ?x37 ?x545 (* r!1 q!3) (* (- 1) (* s!0 p!5))) 0) $x628 (= ?x117 0) $x906 $x742 $x785)))
 (let ((?x863 (* s!0 q00 a00)))
 (let ((?x734 (* q!3 r00 b00)))
 (let ((?x441 (* r!1 q00 a00)))
 (let ((?x390 (* (- 1) ?x441)))
 (let ((?x434 (* p!5 s00 a00)))
 (let ((?x249 (* r!1 p00 b00)))
 (let ((?x247 (* p!5 r00 b00)))
 (let ((?x266 (* (- 1) ?x247)))
 (let ((?x921 (* b!2 p00 s00)))
 (let ((?x316 (* a!4 q00 r00)))
 (let ((?x283 (* a!4 p00 s00)))
 (let ((?x880 (* (- 1) ?x283)))
 (let ((?x533 (+ ?x880 ?x316 (* (- 1) (* b!2 q00 r00)) ?x921 ?x266 ?x249 ?x434 ?x390 (* (- 1) (* s!0 p00 b00)) ?x734 (* (- 1) (* q!3 s00 a00)) ?x863)))
 (let ((?x877 (* (- 1) (* p!5 p!5 a!4 r!1 s!0))))
 (let ((?x869 (* (- 1) (* a!4 a!4 b!2 r!1 r!1 s!0))))
 (let ((?x497 (+ (* (- 1) (* b!2 b!2 b!2 s!0 s!0 s!0)) ?x869 (* 2 (* b!2 b!2 b!2 r!1 s!0 s!0)) ?x877 (* p!5 p!5 b!2 r!1 s!0) (* (- 1) (* a!4 a!4 b!2 s!0 s!0 s!0)) (* 2 (* p!5 a!4 q!3 r!1 s!0)) (* (- 2) (* p!5 q!3 b!2 r!1 s!0)) (* (- 4) (* a!4 b!2 b!2 r!1 s!0 s!0)) (* (- 1) (* a!4 q!3 q!3 r!1 s!0)) (* 2 (* a!4 b!2 b!2 r!1 r!1 s!0)) (* q!3 q!3 b!2 r!1 s!0) (* 2 (* a!4 b!2 b!2 s!0 s!0 s!0)) (* p!5 p!5 a!4 s!0 s!0) (* (- 1) (* p!5 p!5 b!2 s!0 s!0)) (* (- 2) (* p!5 a!4 q!3 s!0 s!0)) (* 2 (* p!5 q!3 b!2 s!0 s!0)) (* a!4 q!3 q!3 s!0 s!0) (* (- 1) (* q!3 q!3 b!2 s!0 s!0)) (* (- 1) (* b!2 b!2 b!2 r!1 r!1 s!0)) (* 2 (* a!4 a!4 b!2 r!1 s!0 s!0)))))
 (let ((?x878 (+ (* p!5 p!5 a!4 r!1 r!1) (* (- 1) (* a!4 a!4 a!4 r!1 r!1 r!1)) (* a!4 a!4 a!4 r!1 r!1 s!0) (* a!4 a!4 b!2 r!1 r!1 r!1) ?x869 ?x877)))
 (let (($x526 (or (not (= (* ?x878 (+ ?x880 ?x316 ?x266 ?x249 ?x434 ?x390)) 0)) (not (= (* ?x497 ?x533) 0)))))
 (let ((?x738 (* q!3 s00 a00)))
 (let ((?x928 (* s!0 p00 b00)))
 (let ((?x279 (* b!2 q00 r00)))
 (let (($x421 (= (+ ?x279 (* (- 1) ?x921) ?x928 (* (- 1) ?x734) ?x738 (* (- 1) ?x863)) 0)))
 (let (($x582 (= (+ ?x283 (* (- 1) ?x316) ?x247 (* (- 1) ?x249) (* (- 1) ?x434) ?x441) 0)))
 (let ((?x133 (* p00 b00)))
 (let ((?x176 (* (- 1) ?x132)))
 (let (($x805 (= (+ (* a!4 s!0) (* (- 1) ?x797) (* (- 1) ?x128) (* r00 b00)) 0)))
 (let (($x539 (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) (* q!3 r!1))) 0)))
 (let (($x559 (and $x539 $x805 (= (+ (* a!4 q!3) ?x176 ?x133 (* (- 1) (* p!5 b!2))) 0) $x582 $x421 $x526)))
 (let (($x606 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x296 (* s q00 a00)))
 (let ((?x285 (* q s00 a00)))
 (let ((?x389 (* (- 1) ?x285)))
 (let ((?x251 (* q r00 b00)))
 (let ((?x250 (* s p00 b00)))
 (let ((?x354 (* (- 1) ?x250)))
 (let ((?x221 (* r q00 a00)))
 (let ((?x227 (* (- 1) ?x221)))
 (let ((?x210 (* p s00 a00)))
 (let ((?x207 (* r p00 b00)))
 (let ((?x187 (* p r00 b00)))
 (let ((?x188 (* (- 1) ?x187)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x369 (* (- 1) ?x72)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x196 (* (- 1) ?x63)))
 (let ((?x666 (* (- 1) (* q q b s s))))
 (let ((?x617 (* a q q s s)))
 (let ((?x685 (* 2 (* p q b s s))))
 (let ((?x682 (* (- 2) (* p a q s s))))
 (let ((?x662 (* (- 1) (* p p b s s))))
 (let ((?x571 (* p p a s s)))
 (let ((?x561 (* q q b r s)))
 (let ((?x659 (* (- 1) (* a q q r s))))
 (let ((?x675 (* (- 2) (* p q b r s))))
 (let ((?x672 (* 2 (* p a q r s))))
 (let ((?x517 (* p p b r s)))
 (let ((?x655 (* (- 1) (* p p a r s))))
 (let ((?x454 (* (- 1) (* a a b r r s))))
 (let ((?x853 (+ (* (- 1) (* b b b s s s)) ?x454 (* 2 (* b b b r s s)) ?x655 ?x517 (* (- 1) (* a a b s s s)) ?x672 ?x675 (* (- 4) (* a b b r s s)) ?x659 (* 2 (* a b b r r s)) ?x561 (* 2 (* a b b s s s)) ?x571 ?x662 ?x682 ?x685 ?x617 ?x666 (* (- 1) (* b b b r r s)) (* 2 (* a a b r s s)))))
 (let ((?x978 (* ?x853 (+ ?x196 ?x66 ?x369 ?x76 ?x188 ?x207 ?x210 ?x227 ?x354 ?x251 ?x389 ?x296))))
 (let ((?x233 (+ ?x196 ?x66 ?x188 ?x207 ?x210 ?x227)))
 (let ((?x342 (* p p a r r)))
 (let ((?x373 (+ ?x342 (* (- 1) (* a a a r r r)) (* a a a r r s) (* a a b r r r) ?x454 ?x655)))
 (let (($x313 (= (+ ?x72 (* (- 1) ?x76) ?x250 (* (- 1) ?x251) ?x285 (* (- 1) ?x296)) 0)))
 (let (($x245 (= (+ ?x63 (* (- 1) ?x66) ?x187 (* (- 1) ?x207) (* (- 1) ?x210) ?x221) 0)))
 (let ((?x133 (* p00 b00)))
 (let ((?x132 (* q00 a00)))
 (let ((?x176 (* (- 1) ?x132)))
 (let (($x179 (= (+ (* a q) ?x176 ?x133 (* (- 1) (* p b))) 0)))
 (let ((?x146 (* r00 b00)))
 (let ((?x128 (* s00 a00)))
 (let ((?x135 (* (- 1) ?x128)))
 (let ((?x49 (* a s)))
 (let (($x161 (= (+ ?x49 (* (- 1) (* b r)) ?x135 ?x146) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x137 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x156 (= (+ ?x33 ?x137 ?x41 (* (- 1) (* q r))) 0)))
 (and $x156 $x161 $x179 $x245 $x313 (or (not (= (* ?x373 ?x233) 0)) (not (= ?x978 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x528 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x331 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x254 (* (- 1) q)))
 (let ((?x634 (+ p ?x254)))
 (let ((?x276 (* (- 1) b)))
 (let ((?x690 (+ a ?x276)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x391 (+ r ?x336)))
 (let ((?x486 (+ (* (- 1) (* ?x391 ?x391 ?x690 ?x690 s b)) (* (- 1) (* ?x391 ?x690 ?x634 ?x634 s)))))
 (let ((?x208 (* a00 s00 p)))
 (let ((?x204 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x236 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x204 ?x208 (* (- 1) (* a00 q00 r)))))
 (let ((?x511 (* (- 1) r)))
 (let ((?x663 (+ s ?x511)))
 (let ((?x280 (+ (* (- 1) (* ?x663 (+ b (* (- 1) a)) r r a a)) (* (- 1) (* ?x663 r a p p)))))
 (let (($x681 (or (not (= (* ?x280 ?x236) 0)) (not (= (* ?x486 ?x331) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x575 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x145 (= ?x575 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x115 (* p00 s00 a)))
 (let ((?x234 (* b00 r00 p)))
 (let (($x228 (= (+ ?x234 ?x115 (* (- 1) ?x65) (* (- 1) ?x204) (* (- 1) ?x208) ?x69) 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x415 (* q a)))
 (let (($x585 (= (+ ?x415 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x351 (* r b)))
 (let (($x352 (= (+ ?x351 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x545 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x303 (* r q)))
 (and (= (+ ?x303 (* (- 1) (* s p)) ?x37 ?x545) 0) $x352 $x585 $x228 $x145 $x681)))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x611 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x296 (* s q00 a00)))
 (let ((?x285 (* q s00 a00)))
 (let ((?x389 (* (- 1) ?x285)))
 (let ((?x251 (* q r00 b00)))
 (let ((?x250 (* s p00 b00)))
 (let ((?x354 (* (- 1) ?x250)))
 (let ((?x221 (* r q00 a00)))
 (let ((?x227 (* (- 1) ?x221)))
 (let ((?x210 (* p s00 a00)))
 (let ((?x207 (* r p00 b00)))
 (let ((?x187 (* p r00 b00)))
 (let ((?x188 (* (- 1) ?x187)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x369 (* (- 1) ?x72)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x196 (* (- 1) ?x63)))
 (let ((?x666 (* (- 1) (* q q b s s))))
 (let ((?x617 (* a q q s s)))
 (let ((?x685 (* 2 (* p q b s s))))
 (let ((?x682 (* (- 2) (* p a q s s))))
 (let ((?x662 (* (- 1) (* p p b s s))))
 (let ((?x571 (* p p a s s)))
 (let ((?x561 (* q q b r s)))
 (let ((?x659 (* (- 1) (* a q q r s))))
 (let ((?x675 (* (- 2) (* p q b r s))))
 (let ((?x672 (* 2 (* p a q r s))))
 (let ((?x517 (* p p b r s)))
 (let ((?x655 (* (- 1) (* p p a r s))))
 (let ((?x454 (* (- 1) (* a a b r r s))))
 (let ((?x853 (+ (* (- 1) (* b b b s s s)) ?x454 (* 2 (* b b b r s s)) ?x655 ?x517 (* (- 1) (* a a b s s s)) ?x672 ?x675 (* (- 4) (* a b b r s s)) ?x659 (* 2 (* a b b r r s)) ?x561 (* 2 (* a b b s s s)) ?x571 ?x662 ?x682 ?x685 ?x617 ?x666 (* (- 1) (* b b b r r s)) (* 2 (* a a b r s s)))))
 (let ((?x978 (* ?x853 (+ ?x196 ?x66 ?x369 ?x76 ?x188 ?x207 ?x210 ?x227 ?x354 ?x251 ?x389 ?x296))))
 (let ((?x233 (+ ?x196 ?x66 ?x188 ?x207 ?x210 ?x227)))
 (let ((?x342 (* p p a r r)))
 (let ((?x373 (+ ?x342 (* (- 1) (* a a a r r r)) (* a a a r r s) (* a a b r r r) ?x454 ?x655)))
 (let (($x313 (= (+ ?x72 (* (- 1) ?x76) ?x250 (* (- 1) ?x251) ?x285 (* (- 1) ?x296)) 0)))
 (let (($x245 (= (+ ?x63 (* (- 1) ?x66) ?x187 (* (- 1) ?x207) (* (- 1) ?x210) ?x221) 0)))
 (let ((?x133 (* p00 b00)))
 (let ((?x132 (* q00 a00)))
 (let ((?x176 (* (- 1) ?x132)))
 (let (($x179 (= (+ (* a q) ?x176 ?x133 (* (- 1) (* p b))) 0)))
 (let ((?x146 (* r00 b00)))
 (let ((?x128 (* s00 a00)))
 (let ((?x135 (* (- 1) ?x128)))
 (let ((?x49 (* a s)))
 (let (($x161 (= (+ ?x49 (* (- 1) (* b r)) ?x135 ?x146) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x137 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x156 (= (+ ?x33 ?x137 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x1001 (and $x156 $x161 $x179 $x245 $x313 (or (not (= (* ?x373 ?x233) 0)) (not (= ?x978 0))))))
 (let ((?x331 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x254 (* (- 1) q)))
 (let ((?x634 (+ p ?x254)))
 (let ((?x276 (* (- 1) b)))
 (let ((?x690 (+ a ?x276)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x391 (+ r ?x336)))
 (let ((?x486 (+ (* (- 1) (* ?x391 ?x391 ?x690 ?x690 s b)) (* (- 1) (* ?x391 ?x690 ?x634 ?x634 s)))))
 (let ((?x208 (* a00 s00 p)))
 (let ((?x204 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x236 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x204 ?x208 (* (- 1) (* a00 q00 r)))))
 (let ((?x511 (* (- 1) r)))
 (let ((?x663 (+ s ?x511)))
 (let ((?x280 (+ (* (- 1) (* ?x663 (+ b (* (- 1) a)) r r a a)) (* (- 1) (* ?x663 r a p p)))))
 (let (($x681 (or (not (= (* ?x280 ?x236) 0)) (not (= (* ?x486 ?x331) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x575 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x145 (= ?x575 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x115 (* p00 s00 a)))
 (let ((?x234 (* b00 r00 p)))
 (let (($x228 (= (+ ?x234 ?x115 (* (- 1) ?x65) (* (- 1) ?x204) (* (- 1) ?x208) ?x69) 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x415 (* q a)))
 (let (($x585 (= (+ ?x415 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x351 (* r b)))
 (let (($x352 (= (+ ?x351 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x601 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x485 (and $x601 $x352 $x585 $x228 $x145 $x681)))
 (rewrite (= $x485 $x1001)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x639 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x331 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x254 (* (- 1) q)))
 (let ((?x634 (+ p ?x254)))
 (let ((?x276 (* (- 1) b)))
 (let ((?x690 (+ a ?x276)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x391 (+ r ?x336)))
 (let ((?x486 (+ (* (- 1) (* ?x391 ?x391 ?x690 ?x690 s b)) (* (- 1) (* ?x391 ?x690 ?x634 ?x634 s)))))
 (let ((?x208 (* a00 s00 p)))
 (let ((?x204 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x236 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x204 ?x208 (* (- 1) (* a00 q00 r)))))
 (let ((?x511 (* (- 1) r)))
 (let ((?x663 (+ s ?x511)))
 (let ((?x280 (+ (* (- 1) (* ?x663 (+ b (* (- 1) a)) r r a a)) (* (- 1) (* ?x663 r a p p)))))
 (let (($x681 (or (not (= (* ?x280 ?x236) 0)) (not (= (* ?x486 ?x331) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x575 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x145 (= ?x575 0)))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x198 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x516 (* s a)))
 (let (($x186 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x516 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x137 (* (- 1) ?x37)))
 (let ((?x550 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x550 ?x137 ?x41) 0) $x186 $x198 (= ?x236 0) $x145 $x681)))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x205 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x331 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x254 (* (- 1) q)))
 (let ((?x634 (+ p ?x254)))
 (let ((?x276 (* (- 1) b)))
 (let ((?x690 (+ a ?x276)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x391 (+ r ?x336)))
 (let ((?x486 (+ (* (- 1) (* ?x391 ?x391 ?x690 ?x690 s b)) (* (- 1) (* ?x391 ?x690 ?x634 ?x634 s)))))
 (let ((?x208 (* a00 s00 p)))
 (let ((?x204 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x236 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x204 ?x208 (* (- 1) (* a00 q00 r)))))
 (let ((?x511 (* (- 1) r)))
 (let ((?x663 (+ s ?x511)))
 (let ((?x280 (+ (* (- 1) (* ?x663 (+ b (* (- 1) a)) r r a a)) (* (- 1) (* ?x663 r a p p)))))
 (let (($x681 (or (not (= (* ?x280 ?x236) 0)) (not (= (* ?x486 ?x331) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x575 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x145 (= ?x575 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x115 (* p00 s00 a)))
 (let ((?x234 (* b00 r00 p)))
 (let (($x228 (= (+ ?x234 ?x115 (* (- 1) ?x65) (* (- 1) ?x204) (* (- 1) ?x208) ?x69) 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x415 (* q a)))
 (let (($x585 (= (+ ?x415 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x351 (* r b)))
 (let (($x352 (= (+ ?x351 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x545 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x303 (* r q)))
 (let (($x485 (and (= (+ ?x303 (* (- 1) (* s p)) ?x37 ?x545) 0) $x352 $x585 $x228 $x145 $x681)))
 (let (($x198 (= (+ (* (- 1) ?x415) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x186 (= (+ (* (- 1) ?x351) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x286 (and (= (+ (* (- 1) ?x303) (* s p) (* (- 1) ?x37) ?x41) 0) $x186 $x198 (= ?x236 0) $x145 $x681)))
 (rewrite (= $x286 $x485))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x112 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x106 (- (* (- 1) a a (- b a) r r (- s r)) (* a p p r (- s r)))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x70 (- ?x68 ?x69)))
 (let ((?x89 (- r s)))
 (let ((?x86 (- a b)))
 (let ((?x31 (- 1)))
 (let ((?x98 (- (* ?x31 ?x86 ?x86 b ?x89 ?x89 s) (* ?x86 (- p q) (- p q) ?x89 s))))
 (let ((?x93 (+ (- (* ?x31 b00 (- p q) r00) (* ?x86 p00 s00)) (* b00 p00 ?x89) (* ?x86 q00 r00) (* a00 (- p q) s00))))
 (let (($x110 (or (not (= (* (- ?x93 (* a00 q00 ?x89)) ?x98) 0)) (not (= (* ?x70 ?x106) 0)))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let ((?x41 (* q00 r00)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= ?x70 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) $x110)))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x661 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x331 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x254 (* (- 1) q)))
 (let ((?x634 (+ p ?x254)))
 (let ((?x276 (* (- 1) b)))
 (let ((?x690 (+ a ?x276)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x391 (+ r ?x336)))
 (let ((?x486 (+ (* (- 1) (* ?x391 ?x391 ?x690 ?x690 s b)) (* (- 1) (* ?x391 ?x690 ?x634 ?x634 s)))))
 (let ((?x208 (* a00 s00 p)))
 (let ((?x204 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x236 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x204 ?x208 (* (- 1) (* a00 q00 r)))))
 (let ((?x511 (* (- 1) r)))
 (let ((?x663 (+ s ?x511)))
 (let ((?x280 (+ (* (- 1) (* ?x663 (+ b (* (- 1) a)) r r a a)) (* (- 1) (* ?x663 r a p p)))))
 (let (($x681 (or (not (= (* ?x280 ?x236) 0)) (not (= (* ?x486 ?x331) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x575 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x145 (= ?x575 0)))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x198 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x516 (* s a)))
 (let (($x186 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x516 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x137 (* (- 1) ?x37)))
 (let ((?x550 (* s p)))
 (let (($x286 (and (= (+ (* (- 1) (* r q)) ?x550 ?x137 ?x41) 0) $x186 $x198 (= ?x236 0) $x145 $x681)))
 (let ((?x106 (- (* (- 1) a a (- b a) r r (- s r)) (* a p p r (- s r)))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x70 (- ?x68 ?x69)))
 (let ((?x89 (- r s)))
 (let ((?x86 (- a b)))
 (let ((?x31 (- 1)))
 (let ((?x98 (- (* ?x31 ?x86 ?x86 b ?x89 ?x89 s) (* ?x86 (- p q) (- p q) ?x89 s))))
 (let ((?x93 (+ (- (* ?x31 b00 (- p q) r00) (* ?x86 p00 s00)) (* b00 p00 ?x89) (* ?x86 q00 r00) (* a00 (- p q) s00))))
 (let (($x110 (or (not (= (* (- ?x93 (* a00 q00 ?x89)) ?x98) 0)) (not (= (* ?x70 ?x106) 0)))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x111 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= ?x70 0) (= (- ?x80 ?x81) 0) $x110)))
 (rewrite (= $x111 $x286)))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x113 (asserted $x112)))
 (let ((@x129 (mp (mp @x113 (quant-intro (proof-bind ?x661) (= $x112 $x639)) $x639) (rewrite (= $x639 $x639)) $x639)))
 (let ((@x282 (mp (mp @x129 (quant-intro (proof-bind ?x205) (= $x639 $x528)) $x528) (quant-intro (proof-bind ?x611) (= $x528 $x606)) $x606)))
 (let ((@x787 (mp (mp~ @x282 (sk (~ $x606 $x559)) $x559) (rewrite (= $x559 $x616)) $x616)))
 (let ((@x916 (and-elim @x787 $x906)))
 (let ((@x755 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x906) $x756)) @x916 $x756)))
 (let (($x751 (<= ?x520 0)))
 (let ((@x766 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x906) $x751)) @x916 $x751)))
 (let (($x821 (not (<= ?x703 0))))
 (let (($x256 (>= ?x799 0)))
 (let (($x402 (>= ?x293 0)))
 (let ((@x919 (and-elim @x787 $x742)))
 (let ((@x736 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x742) $x402)) @x919 $x402)))
 (let (($x401 (<= ?x293 0)))
 (let ((@x754 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x742) $x401)) @x919 $x401)))
 (let ((@x775 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x256)) @x766 @x754 @x755 @x736 false) $x256)))
 (let (($x168 (<= ?x799 0)))
 (let ((@x777 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x168)) @x766 @x754 @x755 @x736 false) $x168)))
 (let ((@x823 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x783 (not $x168) (not $x256))) @x777 @x775 $x783)))
 (let (($x600 (>= ?x703 0)))
 (let ((@x818 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x780 $x821 (not $x600))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x600)) @x766 @x755 false) $x600) (unit-resolution (and-elim @x787 $x785) @x823 $x368) $x821)))
 ((_ th-lemma arith farkas 1 1 1) @x818 @x766 @x755 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 14
 :arith-assert-diseq        3
 :arith-assert-lower        23
 :arith-assert-upper        22
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           10
 :arith-grobner             4
 :arith-max-min             528
 :arith-nonlinear-horner    32
 :arith-num-rows            9
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      3
 :arith-tableau-max-columns 76
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                51.27
 :memory                    3.18
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                89482332466.00
 :num-checks                1
 :propagations              19
 :rlimit-count              13951395
 :time                      5.55
 :total-time                5.55)
