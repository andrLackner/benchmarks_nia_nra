unsat
((set-logic NIA)
(declare-fun v!0 () Int)
(declare-fun u!1 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x1451 (* u!1 u!1)))
 (let ((?x48 (* v00 v00)))
 (let ((?x33 (* 2 u00)))
 (let ((?x30 (* 4 r00)))
 (let ((?x1607 (+ ?x30 ?x33 (* (- 2) v00) (* (- 1) (* u00 u00)) ?x48 (* 2 v!0) (* (- 4) r!2) (* (- 2) u!1) ?x1451 (* (- 1) (* v!0 v!0)))))
 (let (($x1597 (>= ?x1607 0)))
 (let (($x1603 (= ?x1607 0)))
 (let ((?x1512 (* v!0 v!0)))
 (let ((?x1511 (* (- 1) ?x1451)))
 (let ((?x1449 (* 2 u!1)))
 (let ((?x1018 (* 4 r!2)))
 (let ((?x1450 (* (- 2) v!0)))
 (let ((?x200 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x41 (* 2 v00)))
 (let ((?x124 (* (- 2) u00)))
 (let ((?x108 (* (- 4) r00)))
 (let ((?x1593 (+ ?x108 ?x124 ?x41 ?x46 ?x200 ?x1450 ?x1018 ?x1449 ?x1511 ?x1512)))
 (let ((?x1626 (* (- 1) (* v!0 v!0 v!0 r!2 r!2 u!1))))
 (let ((?x1620 (* (- 1) (* v!0 v!0 r!2 r!2 r!2 u!1 u!1 u!1))))
 (let ((?x1574 (* (- 4) (* r!2 r!2 r!2 u!1 u!1 u!1))))
 (let ((?x1557 (* (- 8) (* r!2 r!2 u!1))))
 (let ((?x194 (+ (* (- 3) (* v!0 v!0 v!0 v!0 r!2 u!1 u!1 u!1)) (* v!0 v!0 v!0 v!0 v!0 u!1 u!1 u!1) (* 4 (* v!0 v!0 v!0 v!0 u!1 u!1 u!1)) (* 3 (* v!0 v!0 v!0 r!2 r!2 u!1 u!1 u!1)) ?x1557 ?x1574 (* 4 (* v!0 v!0 v!0 u!1 u!1 u!1)) (* 12 (* v!0 v!0 r!2 r!2 u!1 u!1 u!1)) ?x1620 (* (- 4) (* v!0 r!2 r!2 r!2 u!1 u!1 u!1)) (* 16 (* v!0 r!2 u!1)) ?x1626 (* (- 6) (* v!0 v!0 r!2 r!2 u!1)) (* (- 8) (* v!0 v!0 u!1)) (* (- 12) (* v!0 r!2 r!2 u!1)) (* 12 (* v!0 v!0 v!0 r!2 u!1)) (* (- 12) (* v!0 v!0 r!2 u!1 u!1 u!1)) (* 24 (* v!0 v!0 r!2 u!1)) (* (- 12) (* v!0 v!0 v!0 u!1)) (* (- 6) (* v!0 v!0 v!0 v!0 u!1)) (* 2 (* v!0 v!0 v!0 v!0 r!2 u!1)) (* (- 1) (* v!0 v!0 v!0 v!0 v!0 u!1)) (* (- 12) (* v!0 v!0 v!0 r!2 u!1 u!1 u!1)) (* 12 (* v!0 r!2 r!2 u!1 u!1 u!1)))))
 (let ((?x1261 (* ?x194 (+ (* v!0 u!1) v!0 (* (- 1) r!2) (* (- 1) (* r!2 u!1))) ?x1593)))
 (let (($x974 (= ?x1261 0)))
 (let (($x1155 (not $x974)))
 (let ((?x1550 (* (- 1) (* r!2 u!1))))
 (let ((?x1551 (+ (* (- 3) r!2) (* (- 3) u!1) ?x1511 ?x1550)))
 (let ((?x1680 (+ (* (- 2) (* v!0 v!0 v!0 r!2 u!1 u!1)) (* (- 1) (* v!0 v!0 v!0 u!1 u!1 u!1)) (* (- 24) (* v!0 v!0 r!2 u!1 u!1)) (* (- 12) (* v!0 v!0 u!1 u!1 u!1 u!1)) (* (- 18) (* v!0 v!0 r!2 u!1 u!1 u!1 u!1)) (* (- 12) (* v!0 v!0 r!2 r!2 r!2 u!1)) (* (- 18) (* v!0 v!0 r!2 r!2 u!1 u!1 u!1)) (* (- 6) (* v!0 v!0 u!1 u!1 u!1 u!1 u!1)) (* (- 8) (* v!0 v!0 r!2 r!2 r!2)) ?x1620 (* (- 6) (* v!0 v!0 r!2 r!2 r!2 u!1 u!1)) ?x1626 (* (- 24) (* v!0 v!0 r!2 r!2 u!1)) (* (- 4) (* v!0 v!0 v!0 r!2 u!1)) (* (- 36) (* v!0 v!0 r!2 u!1 u!1 u!1)) (* (- 36) (* v!0 v!0 r!2 r!2 u!1 u!1)) (* (- 8) (* v!0 v!0 u!1 u!1 u!1)) (* (- 3) (* v!0 v!0 r!2 r!2 u!1 u!1 u!1 u!1)) (* (- 3) (* v!0 v!0 r!2 u!1 u!1 u!1 u!1 u!1)) (* (- 1) (* v!0 v!0 u!1 u!1 u!1 u!1 u!1 u!1)) (* (- 2) (* v!0 v!0 v!0 u!1 u!1)) (* (- 2) (* v!0 v!0 v!0 r!2 r!2)))))
 (let ((?x744 (* ?x1680 ?x1551 ?x1593)))
 (let (($x1489 (= ?x744 0)))
 (let (($x1764 (or (not $x1489) $x1155)))
 (let (($x1721 (and $x1603 $x1764)))
 (let ((?x1513 (+ ?x1018 ?x1449 ?x1450 ?x108 ?x124 ?x41 ?x1511 ?x1512 ?x46 ?x200)))
 (let ((?x1461 (* (- 1) (* r!2 r!2 u!1 v!0 v!0 v!0))))
 (let ((?x1521 (* (- 1) (* r!2 r!2 r!2 u!1 u!1 u!1 v!0 v!0))))
 (let ((?x1481 (+ (* 12 (* r!2 r!2 u!1 u!1 u!1 v!0 v!0)) (* (- 4) (* r!2 r!2 r!2 u!1 u!1 u!1 v!0)) ?x1521 ?x1461 ?x1557 (* 16 (* r!2 u!1 v!0)) (* (- 8) (* u!1 v!0 v!0)) (* (- 12) (* r!2 r!2 u!1 v!0)) (* 24 (* r!2 u!1 v!0 v!0)) (* (- 12) (* u!1 v!0 v!0 v!0)) (* (- 6) (* r!2 r!2 u!1 v!0 v!0)) (* 12 (* r!2 u!1 v!0 v!0 v!0)) (* (- 6) (* u!1 v!0 v!0 v!0 v!0)) (* (- 12) (* r!2 u!1 u!1 u!1 v!0 v!0)) (* 2 (* r!2 u!1 v!0 v!0 v!0 v!0)) (* (- 1) (* u!1 v!0 v!0 v!0 v!0 v!0)) (* 4 (* u!1 u!1 u!1 v!0 v!0 v!0)) ?x1574 (* 3 (* r!2 r!2 u!1 u!1 u!1 v!0 v!0 v!0)) (* 12 (* r!2 r!2 u!1 u!1 u!1 v!0)) (* (- 12) (* r!2 u!1 u!1 u!1 v!0 v!0 v!0)) (* (- 3) (* r!2 u!1 u!1 u!1 v!0 v!0 v!0 v!0)) (* 4 (* u!1 u!1 u!1 v!0 v!0 v!0 v!0)) (* u!1 u!1 u!1 v!0 v!0 v!0 v!0 v!0))))
 (let (($x1589 (= (* ?x1481 (+ (* (- 1) r!2) v!0 ?x1550 (* u!1 v!0)) ?x1513) 0)))
 (let ((?x1544 (+ (* (- 18) (* r!2 r!2 u!1 u!1 u!1 v!0 v!0)) (* (- 6) (* u!1 u!1 u!1 u!1 u!1 v!0 v!0)) (* (- 8) (* r!2 r!2 r!2 v!0 v!0)) ?x1521 (* (- 6) (* r!2 r!2 r!2 u!1 u!1 v!0 v!0)) ?x1461 (* (- 24) (* r!2 u!1 u!1 v!0 v!0)) (* (- 24) (* r!2 r!2 u!1 v!0 v!0)) (* (- 4) (* r!2 u!1 v!0 v!0 v!0)) (* (- 12) (* u!1 u!1 u!1 u!1 v!0 v!0)) (* (- 36) (* r!2 u!1 u!1 u!1 v!0 v!0)) (* (- 18) (* r!2 u!1 u!1 u!1 u!1 v!0 v!0)) (* (- 12) (* r!2 r!2 r!2 u!1 v!0 v!0)) (* (- 36) (* r!2 r!2 u!1 u!1 v!0 v!0)) (* (- 8) (* u!1 u!1 u!1 v!0 v!0)) (* (- 3) (* r!2 r!2 u!1 u!1 u!1 u!1 v!0 v!0)) (* (- 3) (* r!2 u!1 u!1 u!1 u!1 u!1 v!0 v!0)) (* (- 1) (* u!1 u!1 u!1 u!1 u!1 u!1 v!0 v!0)) (* (- 2) (* r!2 u!1 u!1 v!0 v!0 v!0)) (* (- 1) (* u!1 u!1 u!1 v!0 v!0 v!0)) (* (- 2) (* r!2 r!2 v!0 v!0 v!0)) (* (- 2) (* u!1 u!1 v!0 v!0 v!0)))))
 (let (($x1588 (and (= ?x1513 0) (or (not (= (* ?x1544 ?x1551 ?x1513) 0)) (not $x1589)))))
 (let (($x1864 (exists ((r Int) (u Int) (v Int) )(! (let ((?x48 (* v00 v00)))
 (let ((?x200 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x43 (* u u)))
 (let ((?x178 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x124 (* (- 2) u00)))
 (let ((?x108 (* (- 4) r00)))
 (let ((?x154 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x28 (* 4 r)))
 (let ((?x206 (+ ?x28 ?x36 ?x154 ?x108 ?x124 ?x41 ?x178 ?x45 ?x46 ?x200)))
 (let ((?x369 (* (- 1) (* r u))))
 (let ((?x331 (* (- 1) r)))
 (let ((?x382 (+ ?x331 v ?x369 (* u v))))
 (let ((?x718 (* (- 1) (* u v v v v v))))
 (let ((?x751 (* 2 (* r u v v v v))))
 (let ((?x748 (* (- 6) (* u v v v v))))
 (let ((?x589 (* r u v v v)))
 (let ((?x745 (* 12 ?x589)))
 (let ((?x581 (* r r u v v)))
 (let ((?x742 (* (- 6) ?x581)))
 (let ((?x739 (* (- 12) (* u v v v))))
 (let ((?x736 (* 24 (* r u v v))))
 (let ((?x732 (* (- 12) (* r r u v))))
 (let ((?x729 (* (- 8) (* u v v))))
 (let ((?x726 (* 16 (* r u v))))
 (let ((?x722 (* (- 8) (* r r u))))
 (let ((?x707 (* (- 1) (* r r u v v v))))
 (let ((?x441 (* (- 1) (* r r r u u u v v))))
 (let ((?x1812 (+ (* 12 (* r r u u u v v)) (* (- 4) (* r r r u u u v)) ?x441 ?x707 ?x722 ?x726 ?x729 ?x732 ?x736 ?x739 ?x742 ?x745 ?x748 (* (- 12) (* r u u u v v)) ?x751 ?x718 (* 4 (* u u u v v v)) (* (- 4) (* r r r u u u)) (* 3 (* r r u u u v v v)) (* 12 (* r r u u u v)) (* (- 12) (* r u u u v v v)) (* (- 3) (* r u u u v v v v)) (* 4 (* u u u v v v v)) (* u u u v v v v v))))
 (let ((?x825 (+ (* (- 3) r) (* (- 3) u) ?x178 ?x369)))
 (let ((?x1045 (* (- 2) (* u u v v v))))
 (let ((?x1042 (* (- 2) (* r r v v v))))
 (let ((?x980 (* u u u v v v)))
 (let ((?x1030 (* (- 1) ?x980)))
 (let ((?x1039 (* (- 2) (* r u u v v v))))
 (let ((?x960 (* (- 1) (* u u u u u u v v))))
 (let ((?x1036 (* (- 4) ?x589)))
 (let ((?x234 (+ (* (- 18) (* r r u u u v v)) (* (- 6) (* u u u u u v v)) (* (- 8) (* r r r v v)) ?x441 (* (- 6) (* r r r u u v v)) ?x707 (* (- 24) (* r u u v v)) (* (- 24) ?x581) ?x1036 (* (- 12) (* u u u u v v)) (* (- 36) (* r u u u v v)) (* (- 18) (* r u u u u v v)) (* (- 12) (* r r r u v v)) (* (- 36) (* r r u u v v)) (* (- 8) (* u u u v v)) (* (- 3) (* r r u u u u v v)) (* (- 3) (* r u u u u u v v)) ?x960 ?x1039 ?x1030 ?x1042 ?x1045)))
 (let (($x1851 (or (not (= (* ?x234 ?x825 ?x206) 0)) (not (= (* ?x1812 ?x382 ?x206) 0)))))
 (let (($x211 (= ?x206 0)))
 (and $x211 $x1851)))))))))))))))))))))))))))))))))))))))))))) :qid k!28))
 ))
 (let (($x333 (exists ((r Int) (u Int) (v Int) )(! (let ((?x48 (* v00 v00)))
 (let ((?x200 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x43 (* u u)))
 (let ((?x178 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x36 (* 2 u)))
 (let ((?x124 (* (- 2) u00)))
 (let ((?x108 (* (- 4) r00)))
 (let ((?x28 (* 4 r)))
 (let ((?x565 (+ (- 4) ?x28 (* (- 6) v) ?x108 ?x124 ?x36 ?x41 ?x178 (* (+ 2 v) (+ 2 v)) ?x46 ?x200)))
 (let ((?x105 (* (- 1) v)))
 (let ((?x602 (+ r ?x105)))
 (let ((?x143 (+ 2 v)))
 (let ((?x620 (+ (* (- 1) (* ?x143 ?x143 ?x602 ?x602 ?x602 u u u)) (* (- 1) (* ?x143 ?x143 ?x143 ?x602 ?x602 u)))))
 (let (($x630 (= (* ?x620 (+ (* (- 1) r) v (* (- 1) (* ?x602 u))) ?x565) 0)))
 (let ((?x45 (* v v)))
 (let ((?x154 (* (- 2) v)))
 (let ((?x624 (+ 4 ?x28 (* 6 u) ?x108 ?x124 ?x154 ?x41 (* (- 1) (* (+ 2 u) (+ 2 u))) ?x45 ?x46 ?x200)))
 (let ((?x331 (* (- 1) r)))
 (let ((?x677 (* (- 1) (* (+ 2 u) (+ r u) (+ r u) v v v))))
 (let ((?x76 (+ r u)))
 (let ((?x125 (+ 2 u)))
 (let ((?x129 (* (+ (* (- 1) (* ?x125 ?x125 ?x125 ?x76 ?x76 ?x76 v v)) ?x677) (+ ?x331 (* (- 1) u) (* (- 1) (* ?x125 ?x76))) ?x624)))
 (and (= (+ ?x28 ?x108 ?x124 ?x36 ?x154 ?x41 ?x178 ?x45 ?x46 ?x200) 0) (or (not (= ?x129 0)) (not $x630))))))))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x1866 (lambda ((r Int) (u Int) (v Int) )(let ((?x48 (* v00 v00)))
 (let ((?x200 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x43 (* u u)))
 (let ((?x178 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x124 (* (- 2) u00)))
 (let ((?x108 (* (- 4) r00)))
 (let ((?x154 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x28 (* 4 r)))
 (let ((?x206 (+ ?x28 ?x36 ?x154 ?x108 ?x124 ?x41 ?x178 ?x45 ?x46 ?x200)))
 (let ((?x369 (* (- 1) (* r u))))
 (let ((?x331 (* (- 1) r)))
 (let ((?x382 (+ ?x331 v ?x369 (* u v))))
 (let ((?x718 (* (- 1) (* u v v v v v))))
 (let ((?x751 (* 2 (* r u v v v v))))
 (let ((?x748 (* (- 6) (* u v v v v))))
 (let ((?x589 (* r u v v v)))
 (let ((?x745 (* 12 ?x589)))
 (let ((?x581 (* r r u v v)))
 (let ((?x742 (* (- 6) ?x581)))
 (let ((?x739 (* (- 12) (* u v v v))))
 (let ((?x736 (* 24 (* r u v v))))
 (let ((?x732 (* (- 12) (* r r u v))))
 (let ((?x729 (* (- 8) (* u v v))))
 (let ((?x726 (* 16 (* r u v))))
 (let ((?x722 (* (- 8) (* r r u))))
 (let ((?x707 (* (- 1) (* r r u v v v))))
 (let ((?x441 (* (- 1) (* r r r u u u v v))))
 (let ((?x1812 (+ (* 12 (* r r u u u v v)) (* (- 4) (* r r r u u u v)) ?x441 ?x707 ?x722 ?x726 ?x729 ?x732 ?x736 ?x739 ?x742 ?x745 ?x748 (* (- 12) (* r u u u v v)) ?x751 ?x718 (* 4 (* u u u v v v)) (* (- 4) (* r r r u u u)) (* 3 (* r r u u u v v v)) (* 12 (* r r u u u v)) (* (- 12) (* r u u u v v v)) (* (- 3) (* r u u u v v v v)) (* 4 (* u u u v v v v)) (* u u u v v v v v))))
 (let ((?x825 (+ (* (- 3) r) (* (- 3) u) ?x178 ?x369)))
 (let ((?x1045 (* (- 2) (* u u v v v))))
 (let ((?x1042 (* (- 2) (* r r v v v))))
 (let ((?x980 (* u u u v v v)))
 (let ((?x1030 (* (- 1) ?x980)))
 (let ((?x1039 (* (- 2) (* r u u v v v))))
 (let ((?x960 (* (- 1) (* u u u u u u v v))))
 (let ((?x1036 (* (- 4) ?x589)))
 (let ((?x234 (+ (* (- 18) (* r r u u u v v)) (* (- 6) (* u u u u u v v)) (* (- 8) (* r r r v v)) ?x441 (* (- 6) (* r r r u u v v)) ?x707 (* (- 24) (* r u u v v)) (* (- 24) ?x581) ?x1036 (* (- 12) (* u u u u v v)) (* (- 36) (* r u u u v v)) (* (- 18) (* r u u u u v v)) (* (- 12) (* r r r u v v)) (* (- 36) (* r r u u v v)) (* (- 8) (* u u u v v)) (* (- 3) (* r r u u u u v v)) (* (- 3) (* r u u u u u v v)) ?x960 ?x1039 ?x1030 ?x1042 ?x1045)))
 (let (($x1851 (or (not (= (* ?x234 ?x825 ?x206) 0)) (not (= (* ?x1812 ?x382 ?x206) 0)))))
 (let (($x211 (= ?x206 0)))
 (let (($x1905 (and $x211 $x1851)))
 (let ((?x565 (+ (- 4) ?x28 (* (- 6) v) ?x108 ?x124 ?x36 ?x41 ?x178 (* (+ 2 v) (+ 2 v)) ?x46 ?x200)))
 (let ((?x105 (* (- 1) v)))
 (let ((?x602 (+ r ?x105)))
 (let ((?x143 (+ 2 v)))
 (let ((?x620 (+ (* (- 1) (* ?x143 ?x143 ?x602 ?x602 ?x602 u u u)) (* (- 1) (* ?x143 ?x143 ?x143 ?x602 ?x602 u)))))
 (let (($x611 (not (= (* ?x620 (+ ?x331 v (* (- 1) (* ?x602 u))) ?x565) 0))))
 (let ((?x624 (+ 4 ?x28 (* 6 u) ?x108 ?x124 ?x154 ?x41 (* (- 1) (* (+ 2 u) (+ 2 u))) ?x45 ?x46 ?x200)))
 (let ((?x677 (* (- 1) (* (+ 2 u) (+ r u) (+ r u) v v v))))
 (let ((?x76 (+ r u)))
 (let ((?x125 (+ 2 u)))
 (let ((?x129 (* (+ (* (- 1) (* ?x125 ?x125 ?x125 ?x76 ?x76 ?x76 v v)) ?x677) (+ ?x331 (* (- 1) u) (* (- 1) (* ?x125 ?x76))) ?x624)))
 (let (($x253 (and (= (+ ?x28 ?x108 ?x124 ?x36 ?x154 ?x41 ?x178 ?x45 ?x46 ?x200) 0) (or (not (= ?x129 0)) $x611))))
 (rewrite (= $x253 $x1905)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x100 (exists ((r Int) (u Int) (v Int) )(! (let ((?x80 (+ u 2)))
 (let ((?x76 (+ r u)))
 (let ((?x66 (- 1)))
 (let ((?x94 (- (* ?x66 ?x76 ?x76 ?x76 ?x80 ?x80 ?x80 v v) (* ?x76 ?x76 ?x80 v v v))))
 (let ((?x48 (* v00 v00)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x41 (* 2 v00)))
 (let ((?x38 (* 2 v)))
 (let ((?x82 (+ (- (- (* 4 ?x76) (* 4 r00)) (* 2 u00)) (* 2 ?x80))))
 (let ((?x95 (* (- (+ (- (+ (- ?x82 ?x38) ?x41) (* ?x80 ?x80)) ?x45 ?x46) ?x48) (- (* ?x66 ?x76) (* ?x76 ?x80)) ?x94)))
 (let ((?x57 (+ v 2)))
 (let ((?x52 (- r v)))
 (let ((?x72 (- (* ?x66 ?x52 ?x52 ?x52 u u u ?x57 ?x57) (* ?x52 ?x52 u ?x57 ?x57 ?x57))))
 (let ((?x43 (* u u)))
 (let ((?x36 (* 2 u)))
 (let ((?x59 (- (+ (- (- (* 4 ?x52) (* 4 r00)) (* 2 u00)) ?x36) (* 2 ?x57))))
 (let ((?x73 (* (- (+ (- (+ ?x59 ?x41) ?x43) (* ?x57 ?x57) ?x46) ?x48) (- (* ?x66 ?x52) (* ?x52 u)) ?x72)))
 (let ((?x39 (- (+ (- (- (* 4 r) (* 4 r00)) (* 2 u00)) ?x36) ?x38)))
 (and (= (- (+ (- (+ ?x39 ?x41) ?x43) ?x45 ?x46) ?x48) 0) (or (not (= ?x73 0)) (not (= ?x95 0))))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x523 (lambda ((r Int) (u Int) (v Int) )(let ((?x48 (* v00 v00)))
 (let ((?x200 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x43 (* u u)))
 (let ((?x178 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x36 (* 2 u)))
 (let ((?x124 (* (- 2) u00)))
 (let ((?x108 (* (- 4) r00)))
 (let ((?x28 (* 4 r)))
 (let ((?x565 (+ (- 4) ?x28 (* (- 6) v) ?x108 ?x124 ?x36 ?x41 ?x178 (* (+ 2 v) (+ 2 v)) ?x46 ?x200)))
 (let ((?x105 (* (- 1) v)))
 (let ((?x602 (+ r ?x105)))
 (let ((?x143 (+ 2 v)))
 (let ((?x620 (+ (* (- 1) (* ?x143 ?x143 ?x602 ?x602 ?x602 u u u)) (* (- 1) (* ?x143 ?x143 ?x143 ?x602 ?x602 u)))))
 (let (($x630 (= (* ?x620 (+ (* (- 1) r) v (* (- 1) (* ?x602 u))) ?x565) 0)))
 (let ((?x45 (* v v)))
 (let ((?x154 (* (- 2) v)))
 (let ((?x624 (+ 4 ?x28 (* 6 u) ?x108 ?x124 ?x154 ?x41 (* (- 1) (* (+ 2 u) (+ 2 u))) ?x45 ?x46 ?x200)))
 (let ((?x331 (* (- 1) r)))
 (let ((?x677 (* (- 1) (* (+ 2 u) (+ r u) (+ r u) v v v))))
 (let ((?x76 (+ r u)))
 (let ((?x125 (+ 2 u)))
 (let ((?x129 (* (+ (* (- 1) (* ?x125 ?x125 ?x125 ?x76 ?x76 ?x76 v v)) ?x677) (+ ?x331 (* (- 1) u) (* (- 1) (* ?x125 ?x76))) ?x624)))
 (let (($x253 (and (= (+ ?x28 ?x108 ?x124 ?x36 ?x154 ?x41 ?x178 ?x45 ?x46 ?x200) 0) (or (not (= ?x129 0)) (not $x630)))))
 (let ((?x80 (+ u 2)))
 (let ((?x66 (- 1)))
 (let ((?x94 (- (* ?x66 ?x76 ?x76 ?x76 ?x80 ?x80 ?x80 v v) (* ?x76 ?x76 ?x80 v v v))))
 (let ((?x38 (* 2 v)))
 (let ((?x82 (+ (- (- (* 4 ?x76) (* 4 r00)) (* 2 u00)) (* 2 ?x80))))
 (let ((?x95 (* (- (+ (- (+ (- ?x82 ?x38) ?x41) (* ?x80 ?x80)) ?x45 ?x46) ?x48) (- (* ?x66 ?x76) (* ?x76 ?x80)) ?x94)))
 (let ((?x57 (+ v 2)))
 (let ((?x52 (- r v)))
 (let ((?x72 (- (* ?x66 ?x52 ?x52 ?x52 u u u ?x57 ?x57) (* ?x52 ?x52 u ?x57 ?x57 ?x57))))
 (let ((?x59 (- (+ (- (- (* 4 ?x52) (* 4 r00)) (* 2 u00)) ?x36) (* 2 ?x57))))
 (let ((?x73 (* (- (+ (- (+ ?x59 ?x41) ?x43) (* ?x57 ?x57) ?x46) ?x48) (- (* ?x66 ?x52) (* ?x52 u)) ?x72)))
 (let ((?x42 (+ (- (+ (- (- ?x28 (* 4 r00)) (* 2 u00)) ?x36) ?x38) ?x41)))
 (let (($x99 (and (= (- (+ (- ?x42 ?x43) ?x45 ?x46) ?x48) 0) (or (not (= ?x73 0)) (not (= ?x95 0))))))
 (rewrite (= $x99 $x253)))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x101 (asserted $x100)))
 (let ((@x562 (mp (mp @x101 (quant-intro (proof-bind ?x523) (= $x100 $x333)) $x333) (rewrite (= $x333 $x333)) $x333)))
 (let ((@x1592 (mp~ (mp @x562 (quant-intro (proof-bind ?x1866) (= $x333 $x1864)) $x1864) (sk (~ $x1864 $x1588)) $x1588)))
 (let ((@x1260 (mp @x1592 (rewrite (= $x1588 $x1721)) $x1721)))
 (let ((@x1252 (and-elim @x1260 $x1603)))
 (let ((@x1648 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1603) $x1597)) @x1252 $x1597)))
 (let (($x1594 (<= ?x1607 0)))
 (let ((@x1630 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1603) $x1594)) @x1252 $x1594)))
 (let (($x1617 (not (<= ?x1261 0))))
 (let (($x1632 (>= ?x1261 0)))
 (let (($x1495 (>= ?x744 0)))
 (let (($x1493 (<= ?x744 0)))
 (let ((@x1650 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1489 (not $x1493) (not $x1495))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1493)) @x1630 @x1648 false) $x1493) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1495)) @x1630 @x1648 false) $x1495) $x1489)))
 (let ((@x1504 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x974 $x1617 (not $x1632))) (unit-resolution (and-elim @x1260 $x1764) @x1650 $x1155) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1632)) @x1630 @x1648 false) $x1632) $x1617)))
 ((_ th-lemma arith farkas 1 1 1) @x1504 @x1630 @x1648 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        45
 :arith-assert-upper        14
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-fixed-eqs           5
 :arith-max-min             448
 :arith-nonlinear-bounds    28
 :arith-num-rows            6
 :arith-pivots              1
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 75
 :arith-tableau-max-rows    6
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              4
 :max-memory                3.86
 :memory                    3.29
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1223507
 :num-checks                1
 :propagations              14
 :rlimit-count              6748
 :time                      0.01
 :total-time                0.02)
