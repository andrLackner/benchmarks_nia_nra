unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x706 (* (- 1) k!2)))
 (let ((?x723 (+ (* 3 (* n!0 n!0)) ?x706 (* 3 n!0))))
 (let (($x394 (<= ?x723 (- 1))))
 (let (($x719 (= ?x723 (- 1))))
 (let ((?x446 (* 144 (* k!2 m!1 m!1 m!1))))
 (let ((?x466 (* 12 (* k!2 m!1 m!1 m!1 m!1))))
 (let ((?x468 (* 4 (* k!2 k!2 k!2 m!1 m!1))))
 (let ((?x970 (+ k!2 c!3)))
 (let ((?x535 (+ k!2 m!1)))
 (let ((?x438 (+ 6 m!1)))
 (let ((?x849 (+ 1 n!0)))
 (let ((?x593 (* 48 (* m!1 m!1 m!1 m!1))))
 (let ((?x753 (* ?x438 ?x438 ?x535 ?x535 ?x535 ?x535 ?x535)))
 (let ((?x475 (* 12 (* k!2 k!2 m!1 m!1 m!1))))
 (let ((?x315 (* 48 (* k!2 k!2 k!2 m!1))))
 (let ((?x898 (* 4 (* m!1 m!1 m!1 m!1 m!1))))
 (let ((?x638 (* 432 (* k!2 k!2 m!1))))
 (let ((?x660 (* 144 (* m!1 m!1 m!1))))
 (let ((?x747 (* 144 (* k!2 k!2 k!2))))
 (let ((?x1449 (* 144 (* k!2 k!2 m!1 m!1))))
 (let ((?x793 (* 9 (* ?x849 ?x438 ?x438 ?x535 ?x535 ?x535))))
 (let ((?x824 (* (- 5) (* ?x438 ?x438 ?x535 ?x535 ?x535 ?x535))))
 (let ((?x482 (* 432 (* k!2 m!1 m!1))))
 (let ((?x464 (+ ?x482 ?x824 ?x793 ?x1449 ?x747 ?x660 ?x638 (* (- 18) (* ?x849 ?x849 ?x438 ?x535 ?x535 ?x970 ?x970 ?x970 ?x970)) ?x898 (* ?x849 ?x849 ?x438 ?x535 ?x535 ?x535 ?x535 ?x970 ?x970 ?x970) ?x315 ?x475 ?x753 (* (- 9) (* ?x849 ?x438 ?x438 ?x535 ?x535 ?x535 ?x970)) (* 4 (* ?x849 ?x849 ?x438 ?x535 ?x535 ?x970 ?x970 ?x970)) (* 9 (* ?x849 ?x849 ?x849 ?x438 ?x535 ?x535 ?x970 ?x970 ?x970)) (* (- 18) (* ?x438 ?x438 ?x535 ?x535 ?x535 ?x970)) ?x593 (* (- 5) (* ?x849 ?x849 ?x438 ?x535 ?x535 ?x535 ?x970 ?x970 ?x970)) (* (- 9) (* ?x849 ?x849 ?x849 ?x438 ?x535 ?x535 ?x970 ?x970 ?x970 ?x970)) ?x468 ?x466 ?x446)))
 (let (($x776 (= ?x464 0)))
 (let (($x583 (not $x776)))
 (let ((?x698 (* k!2 n!0)))
 (let ((?x1463 (+ ?x698 ?x706 (* 2 n!0) (* (- 3) c!3))))
 (let (($x740 (= ?x1463 (- 1))))
 (let ((?x1458 (* 18 c!3)))
 (let ((?x594 (* (- 9) n!0)))
 (let ((?x512 (* 5 k!2)))
 (let ((?x851 (* (- 1) (* k!2 k!2))))
 (let ((?x350 (+ (* 9 (* n!0 c!3)) ?x851 ?x512 ?x594 ?x1458)))
 (let (($x711 (= ?x350 4)))
 (let ((?x662 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x743 (= ?x662 (- 6))))
 (let (($x580 (and $x743 $x711 $x740 $x719 $x583)))
 (let ((?x892 (+ c!3 k!2)))
 (let ((?x745 (+ ?x793 (* (- 18) (* ?x438 ?x438 ?x535 ?x535 ?x535 ?x892)) ?x1449 ?x446 ?x593 (* 9 (* ?x849 ?x849 ?x849 ?x438 ?x535 ?x535 ?x892 ?x892 ?x892)) (* 4 (* ?x849 ?x849 ?x438 ?x535 ?x535 ?x892 ?x892 ?x892)) ?x315 ?x466 ?x898 (* (- 18) (* ?x849 ?x849 ?x438 ?x535 ?x535 ?x892 ?x892 ?x892 ?x892)) (* (- 9) (* ?x849 ?x438 ?x438 ?x535 ?x535 ?x535 ?x892)) ?x753 ?x475 ?x468 (* (- 9) (* ?x849 ?x849 ?x849 ?x438 ?x535 ?x535 ?x892 ?x892 ?x892 ?x892)) ?x660 ?x482 ?x638 (* (- 5) (* ?x849 ?x849 ?x438 ?x535 ?x535 ?x535 ?x892 ?x892 ?x892)) ?x747 (* ?x849 ?x849 ?x438 ?x535 ?x535 ?x535 ?x535 ?x892 ?x892 ?x892) ?x824)))
 (let (($x483 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x1458 ?x512 ?x594 ?x851 (* 9 (* c!3 n!0))) 4) (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x698)) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x745 0)))))
 (let (($x820 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x313 (+ 6 m)))
 (let ((?x1274 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x68 (+ c k)))
 (let ((?x452 (+ 1 n)))
 (let ((?x858 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x678 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x586 (+ (* 9 (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69)) (* (- 18) (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) (* 144 (* k k m m)) (* 144 (* k m m m)) (* 48 (* m m m m)) (* 9 (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 4 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 48 (* k k k m)) (* 12 (* k m m m m)) (* 4 (* m m m m m)) (* (- 18) (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 9) (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) ?x678 (* 12 (* k k m m m)) (* 4 (* k k k m m)) (* (- 9) (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 144 (* m m m)) (* 432 (* k m m)) (* 432 (* k k m)) (* (- 5) (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 144 (* k k k)) ?x858 (* (- 5) ?x1274))))
 (let (($x305 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x267 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x218 (* (- 1) ?x49)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x215 (= (+ ?x40 ?x44 ?x217 ?x218 (* 9 (* c n))) 4)))
 (let (($x131 (= (+ m (* (- 6) n)) 6)))
 (and $x131 $x215 $x267 $x305 (not (= ?x586 0)))))))))))))))))))) :qid k!34))
 ))
 (let (($x514 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x313 (+ 6 m)))
 (let ((?x452 (+ 1 n)))
 (let ((?x454 (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69)))
 (let ((?x68 (+ c k)))
 (let ((?x858 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x896 (+ (* 18 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) (* 18 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 9 (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x313 ?x313 ?x69 ?x69 ?x69)) (* 5 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x858) (* 5 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x69)) (* (- 9) ?x454))))
 (let (($x614 (not (= ?x896 0))))
 (let (($x472 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x174 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x218 (* (- 1) ?x49)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x131 (= (+ m (* (- 6) n)) 6)))
 (and $x131 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x217 ?x218) 4) $x174 $x472 $x614))))))))))))))))) :qid k!34))
 ))
 (let ((?x823 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x313 (+ 6 m)))
 (let ((?x1274 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x68 (+ c k)))
 (let ((?x452 (+ 1 n)))
 (let ((?x858 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x678 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x586 (+ (* 9 (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69)) (* (- 18) (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) (* 144 (* k k m m)) (* 144 (* k m m m)) (* 48 (* m m m m)) (* 9 (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 4 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 48 (* k k k m)) (* 12 (* k m m m m)) (* 4 (* m m m m m)) (* (- 18) (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 9) (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) ?x678 (* 12 (* k k m m m)) (* 4 (* k k k m m)) (* (- 9) (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 144 (* m m m)) (* 432 (* k m m)) (* 432 (* k k m)) (* (- 5) (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 144 (* k k k)) ?x858 (* (- 5) ?x1274))))
 (let (($x305 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x267 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x218 (* (- 1) ?x49)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x215 (= (+ ?x40 ?x44 ?x217 ?x218 (* 9 (* c n))) 4)))
 (let (($x131 (= (+ m (* (- 6) n)) 6)))
 (let (($x848 (and $x131 $x215 $x267 $x305 (not (= ?x586 0)))))
 (let ((?x896 (+ (* 18 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) (* 18 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 9 (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) (* (- 1) ?x678) (* (- 9) (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x313 ?x313 ?x69 ?x69 ?x69)) (* 5 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x858) (* 5 ?x1274) (* (- 9) (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69)))))
 (let (($x614 (not (= ?x896 0))))
 (let (($x472 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x174 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x702 (and $x131 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x217 ?x218) 4) $x174 $x472 $x614)))
 (rewrite (= $x702 $x848))))))))))))))))))))))))))
 ))
 (let (($x615 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x313 (+ 6 m)))
 (let ((?x452 (+ 1 n)))
 (let ((?x454 (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69)))
 (let ((?x68 (+ c k)))
 (let ((?x858 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x896 (+ (* 18 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) (* 18 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 9 (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x313 ?x313 ?x69 ?x69 ?x69)) (* 5 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x858) (* 5 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x69)) (* (- 9) ?x454))))
 (let (($x614 (not (= ?x896 0))))
 (let (($x472 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x737 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x976 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x131 (= (+ m (* (- 6) n)) 6)))
 (and $x131 (= ?x976 (- 4)) $x737 $x472 $x614))))))))))))))) :qid k!34))
 ))
 (let ((?x799 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x313 (+ 6 m)))
 (let ((?x452 (+ 1 n)))
 (let ((?x454 (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69)))
 (let ((?x68 (+ c k)))
 (let ((?x858 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x896 (+ (* 18 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) (* 18 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 9 (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x313 ?x313 ?x69 ?x69 ?x69)) (* 5 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x858) (* 5 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x69)) (* (- 9) ?x454))))
 (let (($x614 (not (= ?x896 0))))
 (let (($x472 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x174 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x218 (* (- 1) ?x49)))
 (let ((?x217 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x131 (= (+ m (* (- 6) n)) 6)))
 (let (($x702 (and $x131 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x217 ?x218) 4) $x174 $x472 $x614)))
 (let (($x737 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x976 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x461 (and $x131 (= ?x976 (- 4)) $x737 $x472 $x614)))
 (rewrite (= $x461 $x702))))))))))))))))))))))))
 ))
 (let (($x98 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x75 (+ (* 18 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70) (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x72 ?x72) (* 9 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x72))))
 (let ((?x80 (- (- ?x75 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70)) (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x83 (+ (- ?x80 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x72 ?x72)) (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x87 (+ (- ?x83 (* 4 ?x69 ?x69 ?x69 ?x70 ?x70)) (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x72 ?x72))))
 (let ((?x91 (+ (- ?x87 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x72 ?x72)) (* 5 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70))))
 (let (($x96 (or (not (= (- ?x91 (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x72)) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x96)))))))))))))))))) :qid k!34))
 ))
 (let ((?x674 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x313 (+ 6 m)))
 (let ((?x452 (+ 1 n)))
 (let ((?x454 (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69)))
 (let ((?x68 (+ c k)))
 (let ((?x858 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x896 (+ (* 18 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) (* 18 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 9 (* ?x452 ?x313 ?x313 ?x69 ?x69 ?x69 ?x68)) (* (- 1) (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x69 ?x69)) (* (- 9) (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x452 ?x452 ?x452 ?x313 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x313 ?x313 ?x69 ?x69 ?x69)) (* 5 (* ?x452 ?x452 ?x313 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x858) (* 5 (* ?x313 ?x313 ?x69 ?x69 ?x69 ?x69)) (* (- 9) ?x454))))
 (let (($x614 (not (= ?x896 0))))
 (let (($x472 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x737 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x976 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x131 (= (+ m (* (- 6) n)) 6)))
 (let (($x461 (and $x131 (= ?x976 (- 4)) $x737 $x472 $x614)))
 (let ((?x72 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x75 (+ (* 18 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70) (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x72 ?x72) (* 9 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x72))))
 (let ((?x80 (- (- ?x75 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70)) (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x83 (+ (- ?x80 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x72 ?x72)) (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x87 (+ (- ?x83 (* 4 ?x69 ?x69 ?x69 ?x70 ?x70)) (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x72 ?x72))))
 (let ((?x91 (+ (- ?x87 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x72 ?x72)) (* 5 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70))))
 (let (($x96 (or (not (= (- ?x91 (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x72)) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x97 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x96)))
 (rewrite (= $x97 $x461))))))))))))))))))))))))))))))))
 ))
 (let ((@x99 (asserted $x98)))
 (let ((@x467 (mp (mp @x99 (quant-intro (proof-bind ?x674) (= $x98 $x615)) $x615) (rewrite (= $x615 $x615)) $x615)))
 (let ((@x578 (mp (mp @x467 (quant-intro (proof-bind ?x799) (= $x615 $x514)) $x514) (quant-intro (proof-bind ?x823) (= $x514 $x820)) $x820)))
 (let ((@x784 (mp (mp~ @x578 (sk (~ $x820 $x483)) $x483) (rewrite (= $x483 $x580)) $x580)))
 (let ((@x713 (and-elim @x784 $x719)))
 (let ((@x463 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x719) $x394)) @x713 $x394)))
 (let (($x386 (>= ?x723 (- 1))))
 (let ((@x736 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x719) $x386)) @x713 $x386)))
 (let (($x846 (<= ?x662 (- 6))))
 (let ((@x534 (and-elim @x784 $x743)))
 (let ((@x390 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x743) $x846)) @x534 $x846)))
 (let (($x504 (>= ?x662 (- 6))))
 (let ((@x1074 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x743) $x504)) @x534 $x504)))
 (let (($x526 (<= ?x350 4)))
 (let ((@x509 (and-elim @x784 $x711)))
 (let ((@x508 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x711) $x526)) @x509 $x526)))
 (let (($x661 (>= ?x350 4)))
 (let ((@x201 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x711) $x661)) @x509 $x661)))
 (let (($x200 (<= ?x1463 (- 1))))
 (let ((@x117 (and-elim @x784 $x740)))
 (let ((@x199 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x740) $x200)) @x117 $x200)))
 (let (($x119 (>= ?x1463 (- 1))))
 (let ((@x610 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x740) $x119)) @x117 $x119)))
 (let (($x1440 (not (<= ?x464 0))))
 (let (($x382 (>= ?x464 0)))
 (let ((@x587 ((_ th-lemma arith) (hypothesis (not $x382)) @x1074 @x390 @x736 @x463 @x736 @x463 @x610 @x199 @x736 @x463 @x201 @x508 @x736 @x463 @x1074 @x390 @x1074 @x390 @x736 @x463 false)))
 (let ((@x422 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x776 $x1440 (not $x382))) (and-elim @x784 $x583) (or $x1440 (not $x382)))))
 ((_ th-lemma arith) (unit-resolution @x422 (lemma @x587 $x382) $x1440) @x1074 @x390 @x736 @x463 @x736 @x463 @x610 @x199 @x736 @x463 @x201 @x508 @x736 @x463 @x1074 @x390 @x1074 @x390 @x736 @x463 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        17
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             339
 :arith-nonlinear-bounds    12
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 58
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.87
 :memory                    3.28
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1999756
 :num-checks                1
 :propagations              11
 :rlimit-count              16640
 :time                      0.01
 :total-time                0.02)
