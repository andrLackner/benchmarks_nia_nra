unsat
((set-logic NIA)
(declare-fun y!2 () Int)
(declare-fun z!1 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x4408 (* z!1 y!2)))
 (let ((?x4290 (* 12 ?x4408)))
 (let ((?x1693 (* (- 108) x!3)))
 (let ((?x3230 (* (- 72) y!2)))
 (let ((?x2770 (* y00 z!1)))
 (let ((?x4486 (* (- 12) ?x2770)))
 (let ((?x4684 (* 18 (* z!1 x!3))))
 (let ((?x2045 (* (- 18) (* x00 z!1))))
 (let ((?x1006 (* z00 z00 y!2)))
 (let ((?x610 (* z00 y00)))
 (let ((?x885 (* (- 6) ?x610)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x862 (+ ?x67 ?x74 ?x885 (* (- 18) (* z00 x00)) (* (- 12) (* y!2 y!2)) (* 24 (* y00 y00)) (* 18 (* z00 x!3)) (* (- 1) (* z00 z00 y00)) ?x1006 (* (- 12) (* y00 y!2)) (* z00 y00 z!1) ?x2045 ?x4684 (* (- 1) (* z00 z!1 y!2)) ?x4486 (* 6 (* z00 y!2)) ?x3230 ?x1693 ?x4290)))
 (let (($x3074 (<= ?x862 0)))
 (let (($x4686 (= ?x862 0)))
 (let ((?x2142 (+ y!2 x!3)))
 (let ((?x928 (+ 6 z!1)))
 (let ((?x1760 (+ 1 n!0)))
 (let ((?x503 (+ z!1 y!2)))
 (let ((?x1463 (* (- 3) (* z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x3072 (* (- 3) (* x00 z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x3950 (* 6 (* z00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x3632 (* (- 3) (* z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x2142 ?x2142 ?x2142 ?x2142))))
 (let ((?x1682 (* 18 (* x00 ?x1760 ?x928 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x2120 (* (- 36) (* y00 y00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x990 (* (- 18) (* ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142 ?x2142 ?x2142))))
 (let ((?x1563 (* (- 1) (* y00 y00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x2142 ?x2142 ?x2142))))
 (let ((?x3824 (* (- 18) (* x00 y00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x784 (* 18 (* y00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142 ?x2142))))
 (let ((?x2031 (* (- 1) (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x2684 (* (- 12) (* ?x1760 ?x928 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x999 (* 3 (* z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x1193 (* (- 18) (* ?x1760 ?x928 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142 ?x2142))))
 (let ((?x2112 (* 2 (* z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x3658 (* (- 1) (* y00 y00 z00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x3510 (* 3 (* z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x4488 (* (- 3) (* x00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x1906 (* 12 (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x1351 (* (- 18) (* x00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x1496 (* (- 3) (* y00 z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x2833 (* y!2 y!2 y!2)))
 (let ((?x1770 (* (- 72) ?x2833)))
 (let ((?x2806 (* (- 3) (* z00 z00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x2813 (* 18 (* x00 y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x3652 (* 3 (* x00 z00 z00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x2106 (* 2 (* y00 y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x2439 (* (- 6) (* y00 z00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x3516 (* (- 2) (* z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x2947 (* (- 12) (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x3580 (* (- 6) (* z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x3651 (* 18 (* x00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x1535 (* 3 (* x00 z00 ?x1760 ?x928 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x1562 (* 3 (* y00 z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x2142 ?x2142 ?x2142))))
 (let ((?x3261 (* (- 3) (* z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x2142 ?x2142 ?x2142 ?x2142))))
 (let ((?x2816 (* 3 (* y00 z00 z00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x1722 (* (- 3) (* z00 z00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142 ?x2142))))
 (let ((?x625 (* 18 (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x1161 (* (- 2) (* y00 y00 ?x1760 ?x928 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x1314 (* (- 18) (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x709 (* 6 (* y00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x2136 (* 2 (* z00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x915 (* (- 2) (* y00 y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x2142 ?x2142 ?x2142))))
 (let ((?x1658 (* (- 1) (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x3708 (* 36 (* y00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x3162 (* 19 (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x3699 (* (- 1) (* y00 z00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x1182 (* (- 3) (* z00 ?x1760 ?x928 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142 ?x2142))))
 (let ((?x2571 (* 3 (* x00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x2142 ?x2142 ?x2142))))
 (let ((?x2410 (* (- 1) (* y00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x1578 (* (- 36) (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x3870 (* 3 (* x00 z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x2142 ?x2142 ?x2142))))
 (let ((?x934 (* 12 (* y00 ?x1760 ?x928 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142))))
 (let ((?x2809 (* 3 (* z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x642 (* (- 18) (* x00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x3924 (* 36 (* y00 y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142))))
 (let ((?x3240 (+ ?x3924 (* 216 (* x00 z!1 y!2)) ?x642 ?x2809 (* (- 18) (* x00 y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x2142 ?x2142 ?x2142)) (* (- 36) (* y00 y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x2142 ?x2142 ?x2142)) ?x934 (* (- 18) (* z00 z00 x!3 x!3)) (* (- 108) (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142)) ?x3870 (* 72 (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x2142 ?x2142 ?x2142)) (* (- 18) (* z00 z00 z!1 y!2)) (* 108 (* x00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142)) ?x1578 ?x2410 ?x2571 (* (- 1) (* z00 y00 z!1 z!1 x!3)) (* (- 108) (* y00 x00 x!3)) (* 12 (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x2142 ?x2142 ?x2142)) (* 2 (* z00 z!1 z!1 z!1 y!2)) (* 60 (* y00 z!1 z!1 x!3)) (* (- 42) (* z00 z!1 y!2 x!3)) ?x1182 (* 108 (* y00 x!3 x!3)) ?x3699 (* 66 (* y00 z!1 y!2 y!2)) (* (- 36) (* z00 y00 y!2)) (* 108 (* z00 x00 y!2)) (* 60 (* y00 z!1 z!1 y!2)) (* (- 18) (* y00 x00 z!1 x!3)) (* 12 (* z00 y!2 y!2 y!2)) ?x3162 (* (- 6) (* z00 y00 y00 y!2)) (* 2 (* z00 z!1 z!1 z!1 x!3)) (* 72 (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142)) (* 18 (* x00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x2142 ?x2142 ?x2142)) (* 2 (* z00 z!1 y!2 y!2 y!2)) (* (- 18) (* y00 x00 z!1 y!2)) (* (- 2) (* y00 y00 z!1 z!1 x!3)) ?x3708 (* (- 3) (* z00 z!1 z!1 x!3 x!3)) (* (- 2) (* z00 z!1 z!1 y!2 x!3)) ?x1658 (* 72 (* ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142 ?x2142)) (* 18 (* x00 z!1 y!2 x!3)) (* (- 1) (* z00 y00 z!1 z!1 y!2)) (* (- 36) (* z!1 z!1 y!2)) (* (- 24) (* z!1 y!2 y!2 x!3)) (* (- 72) (* z00 y!2 y!2)) (* (- 1) (* z00 y00 y00 z!1 y!2)) (* 18 (* x00 z!1 y!2 y!2)) ?x915 ?x2136 (* 18 (* x00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x2142 ?x2142 ?x2142)) ?x709 ?x1314 ?x1161 ?x625 (* (- 60) (* y00 y00 z!1 y!2)) ?x1722 ?x2816 ?x3261 ?x1562 (* z00 z!1 z!1 y!2 y!2) (* (- 12) (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x2142 ?x2142 ?x2142)) (* (- 18) (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x2142 ?x2142 ?x2142 ?x2142)) (* y00 ?x1760 ?x928 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142 ?x2142) (* (- 108) (* y!2 x!3 x!3)) (* (- 72) (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x2142 ?x2142 ?x2142)) ?x1535 (* (- 18) (* z!1 y!2 x!3 x!3)) (* (- 2) (* y00 y00 z!1 z!1 y!2)) (* 36 (* z00 x00 z!1 x!3)) ?x3651 (* (- 36) (* z00 z!1 x!3 x!3)) ?x3580 (* (- 1) (* z00 y00 y00 z!1 x!3)) (* (- 108) (* x00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x2142 ?x2142 ?x2142)) (* (- 432) (* z!1 y!2 x!3)) (* (- 6) (* y00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x2142 ?x2142 ?x2142)) (* 84 (* y00 z!1 y!2 x!3)) (* (- 36) (* z00 y00 x!3)) ?x2947 (* y00 y00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142) ?x3516 (* (- 36) (* z!1 z!1 x!3 x!3)) (* 3 (* z00 z00 x00 z!1 x!3)) (* 12 (* z00 y!2 y!2 x!3)) (* (- 216) (* z!1 x!3 x!3)) ?x2439 ?x2106 (* (- 3) (* z00 z00 z!1 z!1 y!2)) (* (- 3) (* z00 z00 z!1 z!1 x!3)) (* 18 (* y00 z!1 x!3 x!3)) (* y00 z!1 z!1 y!2 y!2) (* 36 (* z00 x00 z!1 y!2)) (* (- 9) (* z00 z00 z!1 y!2 x!3)) (* 324 (* y00 z!1 y!2)) (* 108 (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x2142 ?x2142 ?x2142 ?x2142)) (* y00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142) (* y00 z!1 z!1 z!1 y!2) (* 36 (* z00 z!1 y!2)) (* 108 (* z00 x00 x!3)) (* (- 12) (* z00 y00 z!1 x!3)) (* (- 60) (* y00 y00 z!1 x!3)) (* 216 (* x00 z!1 x!3)) (* (- 216) (* z!1 y!2 y!2)) (* (- 6) (* z00 z00 z!1 y!2 y!2)) (* 3 (* z00 x00 z!1 z!1 x!3)) ?x3652 (* 108 (* x00 y!2 x!3)) ?x2813 ?x2806 (* 468 (* y00 y!2 x!3)) ?x1770 (* 18 (* z00 z!1 z!1 y!2)) (* 324 (* y00 z!1 x!3)) (* (- 24) (* z!1 z!1 y!2 y!2)) (* 18 (* z00 z00 y00 x!3)) ?x1496 (* (- 288) (* y00 y00 x!3)) (* 360 (* y00 y!2 y!2)) (* (- 1) (* z00 y00 z!1 y!2 y!2)) (* (- 18) (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x2142 ?x2142 ?x2142 ?x2142)) (* 36 (* x00 z!1 z!1 y!2)) ?x1351 (* (- 3) (* z00 z00 z!1 x!3 x!3)) (* (- 72) (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x503 ?x503 ?x2142 ?x2142)) (* 3 (* z00 z00 x00 z!1 y!2)) (* (- 180) (* z00 y!2 x!3)) ?x1906 (* 2 (* z00 z!1 y!2 y!2 x!3)) (* (- 108) (* y00 x00 y!2)) (* (- 6) (* z00 z!1 y!2 y!2)) ?x4488 (* 108 (* ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142 ?x2142)) (* 36 (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x2142 ?x2142 ?x2142)) (* (- 6) (* z00 y00 y!2 x!3)) ?x3510 (* 2 (* z!1 z!1 z!1 y!2 y!2)) (* 3 (* z00 z00 y00 z!1 x!3)) ?x3658 (* 108 (* x00 y!2 y!2)) (* z!1 z!1 y!2 y!2 x!3) (* 18 (* z00 z00 y00 y!2)) (* (- 6) (* z00 y00 y!2 y!2)) (* (- 1) (* z00 y00 z!1 y!2 x!3)) ?x2112 (* 18 (* z00 z00 x00 x!3)) (* 18 (* z00 z!1 z!1 x!3)) (* (- 288) (* y00 y00 y!2)) ?x1193 (* 2 (* z!1 z!1 z!1 y!2 x!3)) (* (- 180) (* y!2 y!2 x!3)) (* (- 12) (* z00 y00 z!1 y!2)) (* (- 108) (* x00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142)) (* 3 (* z00 z00 y00 z!1 y!2)) (* ?x1760 ?x928 ?x928 ?x928 ?x928 ?x503 ?x503 ?x503 ?x503 ?x2142 ?x2142 ?x2142) ?x999 ?x2684 (* z!1 z!1 z!1 z!1 x!3) (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x2142 ?x2142 ?x2142) (* (- 108) (* z00 x!3 x!3)) (* z!1 z!1 y!2 y!2 y!2) (* (- 18) (* z00 z00 z!1 x!3)) (* (- 54) (* z00 z00 y!2 x!3)) (* (- 72) (* y00 ?x1760 ?x928 ?x928 ?x928 ?x503 ?x503 ?x2142 ?x2142 ?x2142)) ?x2031 ?x784 ?x3824 (* (- 6) (* z00 y00 y00 x!3)) ?x1563 (* (- 6) (* z!1 y!2 y!2 y!2)) ?x990 ?x2120 (* 18 (* z00 z00 x00 y!2)) ?x1682 ?x3632 (* 36 (* z00 z!1 x!3)) (* 6 (* z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x503 ?x2142 ?x2142 ?x2142)) (* 36 (* x00 z!1 z!1 x!3)) (* z!1 z!1 z!1 z!1 y!2) ?x3950 (* (- 36) (* z!1 z!1 x!3)) ?x3072 (* (- 36) (* z00 z00 y!2 y!2)) (* y00 z!1 z!1 y!2 x!3) ?x1463 (* (- 60) (* z!1 z!1 y!2 x!3)) (* 3 (* z00 x00 z!1 z!1 y!2)) (* 18 (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x2142 ?x2142 ?x2142 ?x2142)) (* y00 z!1 z!1 z!1 x!3))))
 (let (($x3048 (= ?x3240 0)))
 (let (($x2017 (not $x3048)))
 (let ((?x4587 (* z00 z00 y!2 y!2)))
 (let ((?x3802 (* (- 4) ?x2833)))
 (let ((?x3803 (* 108 (* x!3 x!3))))
 (let ((?x1395 (* 108 (* x00 x00))))
 (let ((?x1292 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1288 (* z00 z00 z00 y00)))
 (let ((?x1198 (* (- 36) (* z00 y00 x00))))
 (let ((?x1083 (* 16 (* y00 y00 y00))))
 (let ((?x997 (* z00 z00 x00)))
 (let ((?x1248 (* (- 18) ?x997)))
 (let ((?x869 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x811 (* z00 z00 y00)))
 (let ((?x1349 (* (- 10) ?x811)))
 (let ((?x786 (* z00 y00 y00)))
 (let ((?x821 (* (- 12) ?x786)))
 (let ((?x677 (* y00 y00)))
 (let ((?x1148 (* 96 ?x677)))
 (let ((?x649 (* y!2 y!2)))
 (let ((?x1908 (* 24 ?x649)))
 (let ((?x647 (* z00 x00)))
 (let ((?x565 (* 36 ?x647)))
 (let ((?x975 (* 24 ?x610)))
 (let ((?x557 (* y00 x00)))
 (let ((?x548 (* 216 ?x557)))
 (let ((?x1178 (+ ?x548 ?x975 ?x565 ?x1908 ?x1148 (* (- 36) (* z00 x!3)) ?x821 ?x1349 ?x869 (* 18 (* z00 y00 y!2)) ?x1248 (* 10 ?x1006) ?x1083 (* (- 120) (* y00 y!2)) ?x1198 (* (- 6) (* z00 y!2 y!2)) ?x1288 ?x1292 ?x1395 (* 18 (* z00 z00 x!3)) (* (- 2) (* z00 z00 z00 x!3)) (* (- 1) (* z00 z00 z00 y!2)) (* 36 (* z00 y00 x!3)) (* (- 216) (* x00 x!3)) (* (- 216) (* y00 x!3)) ?x3803 (* (- 108) (* x00 y!2)) ?x3802 (* (- 12) (* y00 y!2 y!2)) (* (- 24) (* z00 y!2)) (* 108 (* y!2 x!3)) ?x4587)))
 (let (($x1158 (= ?x1178 0)))
 (let ((?x879 (* z00 y00 y!2)))
 (let ((?x726 (* 6 ?x610)))
 (let ((?x1001 (+ ?x67 ?x74 (* 18 ?x557) ?x726 (* 36 ?x677) ?x786 (* (- 3) ?x811) ?x879 (* (- 3) ?x997) (* 3 ?x1006) (* (- 36) (* y00 y!2)) (* (- 3) (* z00 x00 z!1)) (* (- 2) (* z00 y!2 y!2)) (* 2 (* y00 y00 z!1)) (* 3 (* z00 z00 x!3)) ?x2045 (* (- 1) (* y00 z!1 y!2)) (* (- 18) (* y00 x!3)) ?x4684 (* (- 1) (* z!1 y!2 y!2)) (* (- 18) (* x00 y!2)) ?x4486 (* (- 6) (* z00 y!2)) (* 18 (* y!2 x!3)) ?x3230 ?x1693 ?x4290 (* 3 (* z00 z!1 x!3)))))
 (let (($x996 (= ?x1001 0)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1664 (+ ?x67 ?x55 ?x74 (* (- 6) (* z00 z00)) (* (- 18) ?x610) (* 12 ?x2770) (* 6 (* z00 z!1)) (* (- 1) (* z00 z00 z!1)) ?x3230 ?x1693 (* 6 ?x4408))))
 (let (($x1166 (= ?x1664 0)))
 (let ((?x750 (* z!1 z!1)))
 (let ((?x469 (* z00 z00)))
 (let ((?x499 (* (- 1) ?x469)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x4159 (+ ?x49 ?x43 ?x499 ?x750 (* (- 6) z!1) (* (- 12) y!2))))
 (let (($x4157 (= ?x4159 0)))
 (let ((?x559 (* (- 6) n00)))
 (let ((?x621 (+ z00 ?x559 (* 6 n!0) (* (- 1) z!1))))
 (let (($x2150 (= ?x621 0)))
 (let (($x2582 (and $x2150 $x4157 $x1166 $x4686 $x996 $x1158 $x2017)))
 (let ((?x922 (+ x!3 y!2)))
 (let ((?x3493 (+ y!2 z!1)))
 (let ((?x3156 (* (- 3) (* z00 ?x1760 ?x928 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922 ?x922))))
 (let ((?x4398 (* (- 3) (* z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x2786 (* 3 (* y00 z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x922 ?x922 ?x922))))
 (let ((?x2781 (* 3 (* z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x2764 (* 18 (* x00 ?x1760 ?x928 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x1053 (* 3 (* x00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x922 ?x922 ?x922))))
 (let ((?x1049 (* 6 (* y00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x952 (* (- 18) (* ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922 ?x922 ?x922))))
 (let ((?x1047 (* 18 (* y00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922 ?x922))))
 (let ((?x4193 (* (- 3) (* z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x922 ?x922 ?x922 ?x922))))
 (let ((?x1227 (* 36 (* y00 y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x703 (* (- 1) (* y00 y00 z00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x1124 (* 6 (* z00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x849 (* (- 36) (* y00 y00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x4224 (* 3 (* z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x3993 (* (- 2) (* y00 y00 ?x1760 ?x928 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x4232 (* 2 (* z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x1375 (* (- 1) (* y00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x816 (* (- 1) (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x1509 (* (- 2) (* z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x1074 (* (- 12) (* ?x1760 ?x928 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x4472 (* 18 (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x4062 (* (- 6) (* z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x2743 (* (- 18) (* x00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x2757 (* (- 18) (* x00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x2611 (* 3 (* x00 z00 ?x1760 ?x928 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x2172 (* (- 3) (* x00 z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x2287 (* (- 1) (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x2317 (* 3 (* x00 z00 z00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x2282 (* 12 (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x2280 (* (- 6) (* y00 z00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x2553 (* 2 (* y00 y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x3346 (* (- 36) (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x4794 (* 18 (* x00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x3353 (* 3 (* z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x1776 (* (- 3) (* z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x922 ?x922 ?x922 ?x922))))
 (let ((?x1370 (* 12 (* y00 ?x1760 ?x928 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x992 (* (- 1) (* y00 z00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x972 (* (- 3) (* x00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x516 (* (- 18) (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x2730 (* 18 (* x00 y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x515 (* 3 (* y00 z00 z00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x1900 (* (- 3) (* z00 z00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922 ?x922))))
 (let ((?x1338 (* (- 12) (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x4017 (* 19 (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x3837 (* (- 3) (* z00 z00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x2175 (* (- 18) (* ?x1760 ?x928 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922 ?x922))))
 (let ((?x3345 (* (- 3) (* y00 z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922))))
 (let ((?x3289 (* (- 1) (* y00 y00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x922 ?x922 ?x922))))
 (let ((?x2049 (* (- 18) (* x00 y00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x3871 (* 3 (* x00 z00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x922 ?x922 ?x922))))
 (let ((?x4487 (* 36 (* y00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x3030 (* (- 2) (* y00 y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x922 ?x922 ?x922))))
 (let ((?x762 (* 2 (* z00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x3493 ?x922 ?x922 ?x922))))
 (let ((?x3849 (+ (* 36 (* y!2 z!1 z00)) (* (- 216) (* y!2 y!2 z!1)) (* (- 36) (* y!2 y!2 z00 z00)) ?x762 ?x3030 (* 18 (* x!3 z00 z00 x00)) (* ?x1760 ?x928 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x3493 ?x922 ?x922 ?x922) ?x4487 (* (- 72) (* y00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922)) (* (- 108) (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922)) (* 108 (* ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922 ?x922)) (* 6 (* z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x922 ?x922 ?x922)) ?x3871 (* 3 (* y!2 z!1 z!1 z00 x00)) ?x2049 ?x3289 (* 18 (* x!3 y!2 z!1 x00)) (* (- 36) (* y!2 z00 y00)) (* (- 36) (* x!3 x!3 z!1 z!1)) (* (- 60) (* x!3 y!2 z!1 z!1)) (* (- 24) (* y!2 y!2 z!1 z!1)) (* (- 18) (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x922 ?x922 ?x922 ?x922)) ?x3345 ?x1770 (* 36 (* x!3 z!1 z00)) ?x2175 (* (- 72) (* y!2 y!2 z00)) (* 3 (* x!3 z!1 z00 z00 x00)) (* 12 (* x!3 y!2 y!2 z00)) ?x3837 (* (- 216) (* x!3 x!3 z!1)) (* 324 (* y!2 z!1 y00)) (* 3 (* x!3 z!1 z!1 z00 x00)) (* (- 432) (* x!3 y!2 z!1)) ?x4017 ?x1338 (* 36 (* y!2 z!1 z!1 x00)) (* 360 (* y!2 y!2 y00)) (* y00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922) (* 12 (* y!2 y!2 y!2 z00)) ?x1900 ?x515 ?x2730 ?x516 (* 18 (* x00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x922 ?x922 ?x922)) (* 72 (* ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922 ?x922)) (* 324 (* x!3 z!1 y00)) (* (- 36) (* x!3 z00 y00)) (* 72 (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x922 ?x922 ?x922)) ?x972 (* (- 288) (* y!2 y00 y00)) ?x992 ?x1370 (* (- 18) (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x922 ?x922 ?x922 ?x922)) ?x1776 ?x3353 (* (- 288) (* x!3 y00 y00)) ?x4794 ?x3346 (* (- 12) (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x922 ?x922 ?x922)) (* 18 (* x00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x922 ?x922 ?x922)) (* (- 60) (* y!2 z!1 y00 y00)) (* (- 60) (* x!3 z!1 y00 y00)) (* (- 9) (* x!3 y!2 z!1 z00 z00)) (* (- 6) (* y!2 y!2 z!1 z00 z00)) (* (- 3) (* x!3 z!1 z!1 z00 z00)) (* (- 3) (* y!2 z!1 z!1 z00 z00)) ?x2553 ?x2280 (* 108 (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x922 ?x922 ?x922 ?x922)) ?x2282 ?x2317 ?x2287 (* 18 (* y!2 z00 z00 x00)) (* 36 (* x!3 z!1 z!1 x00)) ?x2172 (* (- 36) (* x!3 z!1 z!1)) (* (- 36) (* y!2 z!1 z!1)) ?x2611 (* 108 (* x00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922)) (* (- 18) (* y!2 z!1 z00 z00)) (* (- 18) (* x!3 z!1 z00 z00)) (* (- 54) (* x!3 y!2 z00 z00)) ?x2757 ?x2743 (* (- 6) (* x!3 z00 y00 y00)) (* (- 108) (* x00 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922 ?x922)) (* (- 108) (* x!3 y00 x00)) ?x4062 (* (- 1) (* x!3 z!1 z00 y00 y00)) (* (- 1) (* y!2 z!1 z00 y00 y00)) (* 36 (* x!3 z!1 z00 x00)) ?x4472 (* 108 (* x!3 y!2 x00)) (* (- 3) (* x!3 x!3 z!1 z00 z00)) (* y00 ?x1760 ?x928 ?x928 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922 ?x922) (* (- 72) (* ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x3493 ?x922 ?x922)) (* (- 6) (* y!2 z00 y00 y00)) (* 60 (* y!2 z!1 z!1 y00)) (* (- 18) (* x!3 x!3 z00 z00)) ?x1074 ?x1509 (* (- 108) (* y!2 y00 x00)) (* 60 (* x!3 z!1 z!1 y00)) (* 66 (* y!2 y!2 z!1 y00)) (* 84 (* x!3 y!2 z!1 y00)) ?x816 (* 468 (* x!3 y!2 y00)) (* 108 (* x!3 x!3 y00)) ?x1375 (* (- 18) (* x!3 z!1 y00 x00)) (* (- 18) (* y!2 z!1 y00 x00)) (* x!3 y!2 z!1 z!1 y00) (* y!2 y!2 z!1 z!1 y00) (* 18 (* x!3 x!3 z!1 y00)) (* x!3 z!1 z!1 z!1 y00) (* y!2 z!1 z!1 z!1 y00) (* 12 (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x922 ?x922 ?x922)) (* (- 42) (* x!3 y!2 z!1 z00)) (* (- 6) (* y!2 y!2 z!1 z00)) (* 18 (* x!3 z!1 z!1 z00)) (* 18 (* y!2 z!1 z!1 z00)) ?x4232 ?x3993 ?x4224 (* (- 36) (* x!3 x!3 z!1 z00)) (* y!2 y!2 z!1 z!1 z00) (* (- 2) (* x!3 y!2 z!1 z!1 z00)) (* (- 3) (* x!3 x!3 z!1 z!1 z00)) (* (- 2) (* x!3 z!1 z!1 y00 y00)) (* (- 2) (* y!2 z!1 z!1 y00 y00)) ?x849 (* (- 6) (* y00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x922 ?x922 ?x922)) (* (- 180) (* x!3 y!2 z00)) (* (- 108) (* x!3 x!3 z00)) (* y00 y00 z00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922) ?x1124 (* 3 (* x!3 z!1 z00 z00 y00)) (* x!3 y!2 y!2 z!1 z!1) (* 18 (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x922 ?x922 ?x922 ?x922)) (* 2 (* x!3 y!2 z!1 z!1 z!1)) (* y!2 y!2 y!2 z!1 z!1) (* x!3 z!1 z!1 z!1 z!1) (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x928 ?x3493 ?x922 ?x922 ?x922) ?x703 (* 3 (* y!2 z!1 z00 z00 y00)) (* 36 (* y!2 z!1 z00 x00)) (* (- 6) (* y!2 y!2 y!2 z!1)) (* (- 24) (* x!3 y!2 y!2 z!1)) ?x1227 (* (- 12) (* y!2 z!1 z00 y00)) ?x4193 (* (- 72) (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x922 ?x922 ?x922)) (* (- 12) (* x!3 z!1 z00 y00)) (* 2 (* y!2 y!2 z!1 z!1 z!1)) (* y!2 z!1 z!1 z!1 z!1) (* (- 180) (* x!3 y!2 y!2)) ?x1047 ?x952 (* 3 (* y!2 z!1 z00 z00 x00)) ?x1049 ?x1053 (* 216 (* x!3 z!1 x00)) ?x2764 (* 216 (* y!2 z!1 x00)) ?x2781 (* 18 (* y!2 z00 z00 y00)) (* (- 36) (* y00 y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x922 ?x922 ?x922)) (* 18 (* x!3 z00 z00 y00)) (* 108 (* y!2 z00 x00)) ?x2786 (* 2 (* y!2 y!2 y!2 z!1 z00)) (* 2 (* x!3 y!2 y!2 z!1 z00)) (* 108 (* y!2 y!2 x00)) (* 108 (* x!3 z00 x00)) (* 18 (* y!2 y!2 z!1 x00)) (* (- 1) (* x!3 z!1 z!1 z00 y00)) (* (- 1) (* y!2 z!1 z!1 z00 y00)) (* (- 1) (* y!2 y!2 z!1 z00 y00)) (* (- 1) (* x!3 y!2 z!1 z00 y00)) (* (- 6) (* y!2 y!2 z00 y00)) (* (- 6) (* x!3 y!2 z00 y00)) (* 72 (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x3493 ?x922 ?x922)) (* 2 (* x!3 z!1 z!1 z!1 z00)) (* 2 (* y!2 z!1 z!1 z!1 z00)) (* (- 108) (* x!3 x!3 y!2)) ?x4398 (* 36 (* y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x3493 ?x922 ?x922 ?x922)) ?x3156 (* (- 18) (* x!3 x!3 y!2 z!1)) (* (- 18) (* x00 y00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x922 ?x922 ?x922)) (* (- 108) (* x00 ?x1760 ?x1760 ?x1760 ?x928 ?x928 ?x922 ?x922 ?x922)))))
 (let ((?x1232 (* y!2 y!2 z00 z00)))
 (let ((?x4562 (+ (* 10 (* y!2 z00 z00)) ?x1232 (* (- 1) (* y!2 z00 z00 z00)) ?x548 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x975 ?x565 ?x1908 ?x1148 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x821 ?x1349 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x869 ?x3803 ?x3802 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1248 (* (- 216) (* x!3 y00)) ?x1083 (* (- 12) (* y!2 y!2 y00)) ?x1198 (* (- 216) (* x!3 x00)) ?x1288 ?x1292 (* 36 (* x!3 z00 y00)) ?x1395)))
 (let ((?x3422 (* y!2 z!1 y00)))
 (let ((?x998 (* 3 ?x997)))
 (let ((?x1060 (* 3 ?x811)))
 (let ((?x793 (* (- 1) ?x786)))
 (let ((?x3139 (* 18 (* z!1 x00))))
 (let ((?x980 (* (- 36) ?x677)))
 (let ((?x4544 (* z!1 y00)))
 (let ((?x737 (* 12 ?x4544)))
 (let ((?x3153 (* (- 18) (* x!3 z!1))))
 (let ((?x558 (* (- 18) ?x557)))
 (let ((?x4414 (* y!2 z!1)))
 (let ((?x735 (* (- 12) ?x4414)))
 (let ((?x2749 (* y!2 y!2 z!1)))
 (let ((?x689 (* (- 108) x00)))
 (let ((?x632 (* (- 72) y00)))
 (let ((?x4102 (* 72 y!2)))
 (let ((?x1966 (* 108 x!3)))
 (let ((?x3649 (+ ?x1966 ?x4102 ?x632 ?x689 (* (- 3) (* y!2 z00 z00)) ?x2749 ?x735 ?x558 (* (- 18) (* x!3 y!2)) ?x3153 ?x737 ?x885 ?x980 ?x3139 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x793 ?x1060 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x998 (* 18 (* x!3 y00)) ?x3422 (* (- 2) (* z!1 y00 y00)))))
 (let ((?x706 (* (- 24) ?x677)))
 (let ((?x648 (* 18 ?x647)))
 (let ((?x2161 (* y!2 z!1 z00)))
 (let ((?x4809 (+ ?x1966 ?x4102 ?x632 ?x689 ?x2161 (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x735 ?x3153 ?x737 ?x726 ?x648 (* 12 ?x649) ?x706 ?x3139 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x811 (* (- 18) (* x!3 z00)))))
 (let ((?x611 (* 18 ?x610)))
 (let ((?x573 (* 6 ?x469)))
 (let ((?x562 (* (- 1) ?x55)))
 (let ((?x1402 (+ ?x1966 ?x4102 ?x632 ?x562 ?x689 (* z!1 z00 z00) ?x573 (* (- 6) ?x4414) (* (- 12) ?x4544) ?x611 (* (- 6) (* z!1 z00)))))
 (let ((?x540 (* (- 12) y00)))
 (let ((?x539 (* (- 6) z00)))
 (let (($x823 (= (+ (* 12 y!2) (* 6 z!1) ?x539 ?x540 (* (- 1) ?x750) ?x469) 0)))
 (let (($x2891 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x823 (= ?x1402 0) (= ?x4809 0) (= ?x3649 0) (= ?x4562 0) (not (= ?x3849 0)))))
 (let (($x4108 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x564 (+ 6 z)))
 (let ((?x578 (+ 1 n)))
 (let ((?x655 (* (- 108) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3778 (* (- 18) (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x217 (+ y z)))
 (let ((?x2218 (* (- 3) (* z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x4485 (* 36 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x4416 (* (- 3) (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x4265 (* 72 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3977 (* 3 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3960 (* (- 36) (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3925 (* 3 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3906 (* 18 (* x00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3900 (* 3 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3868 (* 6 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3814 (* (- 18) (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3659 (* 18 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3729 (* y z z z z)))
 (let ((?x3609 (* (- 72) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3629 (* (- 3) (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3626 (* 36 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x777 (* (- 1) (* y00 y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3529 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3484 (* x z z z z)))
 (let ((?x3483 (* y y y z z)))
 (let ((?x3468 (* 18 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3454 (* x y y z z)))
 (let ((?x3662 (* 6 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3421 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4372 (* (- 6) (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3009 (* (- 36) (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3097 (* y y z z z00)))
 (let ((?x3158 (* 3 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3213 (* (- 2) (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1564 (* 2 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2842 (* 12 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x2832 (* y z z z y00)))
 (let ((?x2829 (* x z z z y00)))
 (let ((?x2826 (* y y z z y00)))
 (let ((?x2823 (* x y z z y00)))
 (let ((?x2617 (* (- 1) (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2636 (* (- 1) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2963 (* (- 2) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2454 (* (- 12) (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x427 (* (- 72) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2383 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2353 (* 18 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1751 (* (- 6) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2245 (* (- 108) (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x4337 (* (- 18) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2140 (* (- 18) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2098 (* 108 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2089 (* 3 (* x00 z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1954 (* (- 3) (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1862 (* (- 1) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2146 (* 3 (* x00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1830 (* 12 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1794 (* 108 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1045 (* (- 6) (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2072 (* 2 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1938 (* 18 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x1177 (* (- 12) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1566 (* (- 36) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1606 (* 18 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1661 (* 3 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x4328 (* (- 3) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1489 (* (- 18) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1525 (* 12 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1886 (* (- 1) (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1410 (* (- 3) (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1403 (* 72 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3211 (* 72 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1323 (* 18 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x839 (* (- 18) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2546 (* 18 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1269 (* 3 (* y00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x957 (* (- 3) (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1200 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4007 (* (- 12) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1105 (* 19 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3663 (* (- 3) (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1042 (* (- 18) (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1448 (* (- 3) (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1211 (* (- 18) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3269 (* (- 1) (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x2222 (* (- 18) (* x00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x721 (* 3 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x686 (* 6 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1072 (* 108 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1362 (* (- 108) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x881 (* (- 72) (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x657 (* 36 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x528 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x488 (* (- 2) (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x437 (* 2 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x482 (+ (* 36 (* y z z00)) (* (- 216) (* y y z)) (* (- 36) (* y y z00 z00)) ?x437 ?x488 (* 18 (* x z00 z00 x00)) ?x528 ?x657 ?x881 ?x1362 ?x1072 ?x686 ?x721 (* 3 (* y z z z00 x00)) ?x2222 ?x3269 (* 18 (* x y z x00)) (* (- 36) (* y z00 y00)) (* (- 36) (* x x z z)) (* (- 60) (* x y z z)) (* (- 24) (* y y z z)) ?x1211 ?x1448 (* (- 72) (* y y y)) (* 36 (* x z z00)) ?x1042 (* (- 72) (* y y z00)) (* 3 (* x z z00 z00 x00)) (* 12 (* x y y z00)) ?x3663 (* (- 216) (* x x z)) (* 324 (* y z y00)) (* 3 (* x z z z00 x00)) (* (- 432) (* x y z)) ?x1105 ?x4007 (* 36 (* y z z x00)) (* 360 (* y y y00)) ?x1200 (* 12 (* y y y z00)) ?x957 ?x1269 ?x2546 ?x839 ?x1323 ?x3211 (* 324 (* x z y00)) (* (- 36) (* x z00 y00)) ?x1403 ?x1410 (* (- 288) (* y y00 y00)) ?x1886 ?x1525 ?x1489 ?x4328 ?x1661 (* (- 288) (* x y00 y00)) ?x1606 ?x1566 ?x1177 ?x1938 (* (- 60) (* y z y00 y00)) (* (- 60) (* x z y00 y00)) (* (- 9) (* x y z z00 z00)) (* (- 6) (* y y z z00 z00)) (* (- 3) (* x z z z00 z00)) (* (- 3) (* y z z z00 z00)) ?x2072 ?x1045 ?x1794 ?x1830 ?x2146 ?x1862 (* 18 (* y z00 z00 x00)) (* 36 (* x z z x00)) ?x1954 (* (- 36) (* x z z)) (* (- 36) (* y z z)) ?x2089 ?x2098 (* (- 18) (* y z z00 z00)) (* (- 18) (* x z z00 z00)) (* (- 54) (* x y z00 z00)) ?x2140 ?x4337 (* (- 6) (* x z00 y00 y00)) ?x2245 (* (- 108) (* x y00 x00)) ?x1751 (* (- 1) (* x z z00 y00 y00)) (* (- 1) (* y z z00 y00 y00)) (* 36 (* x z z00 x00)) ?x2353 (* 108 (* x y x00)) (* (- 3) (* x x z z00 z00)) ?x2383 ?x427 (* (- 6) (* y z00 y00 y00)) (* 60 (* y z z y00)) (* (- 18) (* x x z00 z00)) ?x2454 ?x2963 (* (- 108) (* y y00 x00)) (* 60 (* x z z y00)) (* 66 (* y y z y00)) (* 84 (* x y z y00)) ?x2636 (* 468 (* x y y00)) (* 108 (* x x y00)) ?x2617 (* (- 18) (* x z y00 x00)) (* (- 18) (* y z y00 x00)) ?x2823 ?x2826 (* 18 (* x x z y00)) ?x2829 ?x2832 ?x2842 (* (- 42) (* x y z z00)) (* (- 6) (* y y z z00)) (* 18 (* x z z z00)) (* 18 (* y z z z00)) ?x1564 ?x3213 ?x3158 (* (- 36) (* x x z z00)) ?x3097 (* (- 2) (* x y z z z00)) (* (- 3) (* x x z z z00)) (* (- 2) (* x z z y00 y00)) (* (- 2) (* y z z y00 y00)) ?x3009 ?x4372 (* (- 180) (* x y z00)) (* (- 108) (* x x z00)) ?x3421 ?x3662 (* 3 (* x z z00 z00 y00)) ?x3454 ?x3468 (* 2 (* x y z z z)) ?x3483 ?x3484 ?x3529 ?x777 (* 3 (* y z z00 z00 y00)) (* 36 (* y z z00 x00)) (* (- 6) (* y y y z)) (* (- 24) (* x y y z)) ?x3626 (* (- 12) (* y z z00 y00)) ?x3629 ?x3609 (* (- 12) (* x z z00 y00)) (* 2 (* y y z z z)) ?x3729 (* (- 180) (* x y y)) ?x3659 ?x3814 (* 3 (* y z z00 z00 x00)) ?x3868 ?x3900 (* 216 (* x z x00)) ?x3906 (* 216 (* y z x00)) ?x3925 (* 18 (* y z00 z00 y00)) ?x3960 (* 18 (* x z00 z00 y00)) (* 108 (* y z00 x00)) ?x3977 (* 2 (* y y y z z00)) (* 2 (* x y y z z00)) (* 108 (* y y x00)) (* 108 (* x z00 x00)) (* 18 (* y y z x00)) (* (- 1) (* x z z z00 y00)) (* (- 1) (* y z z z00 y00)) (* (- 1) (* y y z z00 y00)) (* (- 1) (* x y z z00 y00)) (* (- 6) (* y y z00 y00)) (* (- 6) (* x y z00 y00)) ?x4265 (* 2 (* x z z z z00)) (* 2 (* y z z z z00)) (* (- 108) (* x x y)) ?x4416 ?x4485 ?x2218 (* (- 18) (* x x y z)) ?x3778 ?x655)))
 (let ((?x1395 (* 108 (* x00 x00))))
 (let ((?x1387 (* x z00 y00)))
 (let ((?x1388 (* 36 ?x1387)))
 (let ((?x1292 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1288 (* z00 z00 z00 y00)))
 (let ((?x1198 (* (- 36) (* z00 y00 x00))))
 (let ((?x1083 (* 16 (* y00 y00 y00))))
 (let ((?x997 (* z00 z00 x00)))
 (let ((?x1248 (* (- 18) ?x997)))
 (let ((?x914 (* y y y)))
 (let ((?x953 (* (- 4) ?x914)))
 (let ((?x900 (* x x)))
 (let ((?x901 (* 108 ?x900)))
 (let ((?x869 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x811 (* z00 z00 y00)))
 (let ((?x1349 (* (- 10) ?x811)))
 (let ((?x786 (* z00 y00 y00)))
 (let ((?x821 (* (- 12) ?x786)))
 (let ((?x677 (* y00 y00)))
 (let ((?x1148 (* 96 ?x677)))
 (let ((?x651 (* y y)))
 (let ((?x896 (* 24 ?x651)))
 (let ((?x647 (* z00 x00)))
 (let ((?x565 (* 36 ?x647)))
 (let ((?x610 (* z00 y00)))
 (let ((?x975 (* 24 ?x610)))
 (let ((?x557 (* y00 x00)))
 (let ((?x548 (* 216 ?x557)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1415 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x548 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x975 ?x565 ?x896 ?x1148 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x821 ?x1349 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x869 ?x901 ?x953 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1248 (* (- 216) (* x y00)) ?x1083 (* (- 12) (* y y y00)) ?x1198 (* (- 216) (* x x00)) ?x1288 ?x1292 ?x1388 ?x1395)))
 (let (($x1420 (= ?x1415 0)))
 (let ((?x1057 (* y z y00)))
 (let ((?x998 (* 3 ?x997)))
 (let ((?x1060 (* 3 ?x811)))
 (let ((?x793 (* (- 1) ?x786)))
 (let ((?x723 (* 18 (* z x00))))
 (let ((?x980 (* (- 36) ?x677)))
 (let ((?x885 (* (- 6) ?x610)))
 (let ((?x584 (* z y00)))
 (let ((?x585 (* 12 ?x584)))
 (let ((?x583 (* x z)))
 (let ((?x618 (* (- 18) ?x583)))
 (let ((?x558 (* (- 18) ?x557)))
 (let ((?x553 (* y z)))
 (let ((?x577 (* (- 12) ?x553)))
 (let ((?x135 (* y y z)))
 (let ((?x689 (* (- 108) x00)))
 (let ((?x632 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1116 (+ ?x64 ?x71 ?x632 ?x689 (* (- 3) (* y z00 z00)) ?x135 ?x577 ?x558 (* (- 18) (* x y)) ?x618 ?x585 ?x885 ?x980 ?x723 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x793 ?x1060 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x998 (* 18 (* x y00)) ?x1057 (* (- 2) (* z y00 y00)))))
 (let (($x1123 (= ?x1116 0)))
 (let ((?x706 (* (- 24) ?x677)))
 (let ((?x654 (* 12 ?x651)))
 (let ((?x648 (* 18 ?x647)))
 (let ((?x726 (* 6 ?x610)))
 (let ((?x103 (* y z z00)))
 (let ((?x865 (+ ?x64 ?x71 ?x632 ?x689 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x577 ?x618 ?x585 ?x726 ?x648 ?x654 ?x706 ?x723 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x811 (* (- 18) (* x z00)))))
 (let (($x870 (= ?x865 0)))
 (let ((?x611 (* 18 ?x610)))
 (let ((?x469 (* z00 z00)))
 (let ((?x573 (* 6 ?x469)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x562 (* (- 1) ?x55)))
 (let ((?x705 (+ ?x64 ?x71 ?x632 ?x562 ?x689 ?x76 ?x573 (* (- 6) ?x553) (* (- 12) ?x584) ?x611 (* (- 6) (* z z00)))))
 (let (($x710 (= ?x705 0)))
 (let ((?x540 (* (- 12) y00)))
 (let ((?x539 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x543 (= (+ ?x45 ?x46 ?x539 ?x540 (* (- 1) (* z z)) ?x469) 0)))
 (let (($x461 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x461 $x543 $x710 $x870 $x1123 $x1420 (not (= ?x482 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x3041 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x564 (+ 6 z)))
 (let ((?x578 (+ 1 n)))
 (let ((?x1862 (* (- 1) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1566 (* (- 36) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1794 (* 108 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1489 (* (- 18) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1403 (* 72 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1448 (* (- 3) (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x437 (* 2 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x528 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x488 (* (- 2) (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3977 (* 3 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3960 (* (- 36) (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3662 (* 6 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3421 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1177 (* (- 12) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x839 (* (- 18) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x686 (* 6 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1751 (* (- 6) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x4265 (* 72 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1525 (* 12 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x881 (* (- 72) (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x4007 (* (- 12) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3778 (* (- 18) (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x4328 (* (- 3) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1105 (* 19 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1362 (* (- 108) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2222 (* (- 18) (* x00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1410 (* (- 3) (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x777 (* (- 1) (* y00 y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3468 (* 18 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3925 (* 3 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3900 (* 3 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x427 (* (- 72) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3009 (* (- 36) (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3213 (* (- 2) (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1200 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1830 (* 12 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2245 (* (- 108) (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2617 (* (- 1) (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2218 (* (- 3) (* z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2353 (* 18 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3906 (* 18 (* x00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1661 (* 3 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3663 (* (- 3) (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1564 (* 2 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2072 (* 2 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3868 (* 6 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3626 (* 36 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x4372 (* (- 6) (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x1042 (* (- 18) (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1072 (* 108 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2146 (* 3 (* x00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1211 (* (- 18) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1938 (* 18 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x2546 (* 18 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1269 (* 3 (* y00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x655 (* (- 108) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x4337 (* (- 18) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2454 (* (- 12) (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2383 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3211 (* 72 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x721 (* 3 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x657 (* 36 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x4416 (* (- 3) (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3659 (* 18 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x957 (* (- 3) (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1045 (* (- 6) (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3814 (* (- 18) (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3629 (* (- 3) (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1323 (* 18 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2140 (* (- 18) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2098 (* 108 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2089 (* 3 (* x00 z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2842 (* 12 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x2636 (* (- 1) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1606 (* 18 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2963 (* (- 2) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3609 (* (- 72) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x4485 (* 36 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3529 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1954 (* (- 3) (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3269 (* (- 1) (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3158 (* 3 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1886 (* (- 1) (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1821 (+ ?x1886 ?x3158 (* (- 18) (* ?x564 ?x564 ?x216 ?x216)) ?x3269 (* (- 72) (* y00 ?x564 ?x216)) ?x1954 ?x3529 ?x4485 (* 12 (* y00 ?x564 ?x564 ?x216)) ?x3609 ?x2963 ?x1606 ?x2636 (* (- 36) (* y00 y00 ?x564 ?x216)) ?x2842 (* 18 (* y00 ?x564 ?x216 ?x216)) ?x2089 ?x2098 ?x2140 ?x1323 ?x3629 ?x3814 (* 3 (* x00 z00 z00 ?x564 ?x216)) ?x1045 (* (- 12) (* ?x564 ?x564 ?x217 ?x216)) (* 36 (* y00 ?x564 ?x217 ?x216)) ?x957 ?x3659 (* (- 3) (* z00 z00 ?x564 ?x217 ?x216)) ?x4416 ?x657 ?x721 ?x3211 ?x2383 ?x2454 ?x4337 ?x655 ?x1269 ?x2546 ?x1938 ?x1211 ?x2146 (* 18 (* x00 ?x564 ?x217 ?x216)) ?x1072 ?x1042 (* (- 3) (* z00 z00 ?x564 ?x216 ?x216)) ?x4372 ?x3626 ?x3868 ?x2072 (* (- 18) (* x00 y00 ?x564 ?x216)) (* (- 1) (* y00 y00 z00 ?x564 ?x216)) (* y00 ?x564 ?x564 ?x217 ?x216) (* 6 (* z00 ?x564 ?x217 ?x216)) ?x1564 ?x3663 ?x1661 ?x3906 ?x2353 ?x2218 ?x2617 ?x2245 ?x1830 ?x1200 (* (- 2) (* y00 y00 ?x564 ?x564 ?x216)) ?x3213 ?x3009 ?x427 ?x3900 ?x3925 ?x3468 ?x777 (* (- 3) (* z00 ?x564 ?x564 ?x216 ?x216)) ?x1410 ?x2222 (* 72 (* ?x564 ?x217 ?x216)) ?x1362 ?x1105 ?x4328 ?x3778 ?x4007 (* (- 6) (* y00 z00 ?x564 ?x216)) ?x881 ?x1525 ?x4265 (* (- 108) (* x00 ?x564 ?x216)) (* ?x564 ?x564 ?x217 ?x217 ?x216) ?x1751 ?x686 ?x839 (* (- 1) (* y00 z00 ?x564 ?x217 ?x216)) ?x1177 ?x3421 (* 2 (* z00 ?x564 ?x217 ?x217 ?x216)) (* 108 (* ?x564 ?x216 ?x216)) ?x3662 (* 18 (* x00 ?x564 ?x564 ?x216)) ?x3960 ?x3977 (* (- 18) (* ?x564 ?x217 ?x216 ?x216)) ?x488 ?x528 (* 3 (* y00 z00 z00 ?x564 ?x216)) (* 3 (* x00 z00 ?x564 ?x564 ?x216)) ?x437 ?x1448 ?x1403 ?x1489 ?x1794 ?x1566 ?x1862)))
 (let ((?x1395 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x677 (* y00 y00)))
 (let ((?x1148 (* 96 ?x677)))
 (let ((?x1083 (* 16 (* y00 y00 y00))))
 (let ((?x914 (* y y y)))
 (let ((?x953 (* (- 4) ?x914)))
 (let ((?x900 (* x x)))
 (let ((?x901 (* 108 ?x900)))
 (let ((?x651 (* y y)))
 (let ((?x896 (* 24 ?x651)))
 (let ((?x2470 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x896 ?x901 ?x953 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1083 (* (- 6) (* z00 y y)) ?x1148 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1395 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x689 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x632 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x795 (* 18 (* x00 z))))
 (let ((?x980 (* (- 36) ?x677)))
 (let ((?x523 (* z y)))
 (let ((?x1330 (* (- 12) ?x523)))
 (let ((?x1266 (* y00 z)))
 (let ((?x3112 (* 12 ?x1266)))
 (let ((?x1888 (* (- 18) (* z x))))
 (let ((?x1916 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1888 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x3112 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x1330 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x980 ?x795 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x632 (* 18 (* y00 x)) ?x71 ?x689 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x706 (* (- 24) ?x677)))
 (let ((?x654 (* 12 ?x651)))
 (let ((?x3363 (+ (* (- 1) (* y00 z00 z)) ?x1330 ?x1888 (* 18 (* x00 z00)) ?x654 ?x706 ?x795 ?x3112 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x632 (* (- 6) (* z00 y)) ?x71 ?x689 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x469 (* z00 z00)))
 (let ((?x573 (* 6 ?x469)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x562 (* (- 1) ?x55)))
 (let ((?x643 (+ (* (- 6) ?x523) ?x562 ?x573 (* (- 12) ?x1266) (* 18 (* y00 z00)) ?x64 ?x632 (* (- 6) (* z00 z)) ?x71 ?x689 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x499 (* (- 1) ?x469)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x499 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x643 0) (= ?x3363 0) (= ?x1916 0) (= ?x2470 0) (not (= ?x1821 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1843 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x564 (+ 6 z)))
 (let ((?x578 (+ 1 n)))
 (let ((?x655 (* (- 108) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3778 (* (- 18) (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x217 (+ y z)))
 (let ((?x2218 (* (- 3) (* z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x4485 (* 36 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x4416 (* (- 3) (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x4265 (* 72 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3977 (* 3 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3960 (* (- 36) (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3925 (* 3 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3906 (* 18 (* x00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3900 (* 3 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3868 (* 6 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3814 (* (- 18) (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3659 (* 18 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3729 (* y z z z z)))
 (let ((?x3609 (* (- 72) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3629 (* (- 3) (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3626 (* 36 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x777 (* (- 1) (* y00 y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3529 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3484 (* x z z z z)))
 (let ((?x3483 (* y y y z z)))
 (let ((?x3468 (* 18 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3454 (* x y y z z)))
 (let ((?x3662 (* 6 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3421 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4372 (* (- 6) (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3009 (* (- 36) (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3097 (* y y z z z00)))
 (let ((?x3158 (* 3 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3213 (* (- 2) (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1564 (* 2 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2842 (* 12 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x2832 (* y z z z y00)))
 (let ((?x2829 (* x z z z y00)))
 (let ((?x2826 (* y y z z y00)))
 (let ((?x2823 (* x y z z y00)))
 (let ((?x2617 (* (- 1) (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2636 (* (- 1) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2963 (* (- 2) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2454 (* (- 12) (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x427 (* (- 72) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2383 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2353 (* 18 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1751 (* (- 6) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2245 (* (- 108) (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x4337 (* (- 18) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2140 (* (- 18) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2098 (* 108 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2089 (* 3 (* x00 z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1954 (* (- 3) (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1862 (* (- 1) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2146 (* 3 (* x00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1830 (* 12 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1794 (* 108 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1045 (* (- 6) (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2072 (* 2 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1938 (* 18 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x1177 (* (- 12) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1566 (* (- 36) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1606 (* 18 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1661 (* 3 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x4328 (* (- 3) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1489 (* (- 18) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1525 (* 12 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1886 (* (- 1) (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1410 (* (- 3) (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1403 (* 72 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3211 (* 72 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1323 (* 18 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x839 (* (- 18) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2546 (* 18 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1269 (* 3 (* y00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x957 (* (- 3) (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1200 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4007 (* (- 12) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1105 (* 19 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3663 (* (- 3) (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1042 (* (- 18) (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1448 (* (- 3) (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1211 (* (- 18) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3269 (* (- 1) (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x2222 (* (- 18) (* x00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x721 (* 3 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x686 (* 6 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1072 (* 108 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1362 (* (- 108) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x881 (* (- 72) (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x657 (* 36 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x528 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x488 (* (- 2) (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x437 (* 2 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x482 (+ (* 36 (* y z z00)) (* (- 216) (* y y z)) (* (- 36) (* y y z00 z00)) ?x437 ?x488 (* 18 (* x z00 z00 x00)) ?x528 ?x657 ?x881 ?x1362 ?x1072 ?x686 ?x721 (* 3 (* y z z z00 x00)) ?x2222 ?x3269 (* 18 (* x y z x00)) (* (- 36) (* y z00 y00)) (* (- 36) (* x x z z)) (* (- 60) (* x y z z)) (* (- 24) (* y y z z)) ?x1211 ?x1448 (* (- 72) (* y y y)) (* 36 (* x z z00)) ?x1042 (* (- 72) (* y y z00)) (* 3 (* x z z00 z00 x00)) (* 12 (* x y y z00)) ?x3663 (* (- 216) (* x x z)) (* 324 (* y z y00)) (* 3 (* x z z z00 x00)) (* (- 432) (* x y z)) ?x1105 ?x4007 (* 36 (* y z z x00)) (* 360 (* y y y00)) ?x1200 (* 12 (* y y y z00)) ?x957 ?x1269 ?x2546 ?x839 ?x1323 ?x3211 (* 324 (* x z y00)) (* (- 36) (* x z00 y00)) ?x1403 ?x1410 (* (- 288) (* y y00 y00)) ?x1886 ?x1525 ?x1489 ?x4328 ?x1661 (* (- 288) (* x y00 y00)) ?x1606 ?x1566 ?x1177 ?x1938 (* (- 60) (* y z y00 y00)) (* (- 60) (* x z y00 y00)) (* (- 9) (* x y z z00 z00)) (* (- 6) (* y y z z00 z00)) (* (- 3) (* x z z z00 z00)) (* (- 3) (* y z z z00 z00)) ?x2072 ?x1045 ?x1794 ?x1830 ?x2146 ?x1862 (* 18 (* y z00 z00 x00)) (* 36 (* x z z x00)) ?x1954 (* (- 36) (* x z z)) (* (- 36) (* y z z)) ?x2089 ?x2098 (* (- 18) (* y z z00 z00)) (* (- 18) (* x z z00 z00)) (* (- 54) (* x y z00 z00)) ?x2140 ?x4337 (* (- 6) (* x z00 y00 y00)) ?x2245 (* (- 108) (* x y00 x00)) ?x1751 (* (- 1) (* x z z00 y00 y00)) (* (- 1) (* y z z00 y00 y00)) (* 36 (* x z z00 x00)) ?x2353 (* 108 (* x y x00)) (* (- 3) (* x x z z00 z00)) ?x2383 ?x427 (* (- 6) (* y z00 y00 y00)) (* 60 (* y z z y00)) (* (- 18) (* x x z00 z00)) ?x2454 ?x2963 (* (- 108) (* y y00 x00)) (* 60 (* x z z y00)) (* 66 (* y y z y00)) (* 84 (* x y z y00)) ?x2636 (* 468 (* x y y00)) (* 108 (* x x y00)) ?x2617 (* (- 18) (* x z y00 x00)) (* (- 18) (* y z y00 x00)) ?x2823 ?x2826 (* 18 (* x x z y00)) ?x2829 ?x2832 ?x2842 (* (- 42) (* x y z z00)) (* (- 6) (* y y z z00)) (* 18 (* x z z z00)) (* 18 (* y z z z00)) ?x1564 ?x3213 ?x3158 (* (- 36) (* x x z z00)) ?x3097 (* (- 2) (* x y z z z00)) (* (- 3) (* x x z z z00)) (* (- 2) (* x z z y00 y00)) (* (- 2) (* y z z y00 y00)) ?x3009 ?x4372 (* (- 180) (* x y z00)) (* (- 108) (* x x z00)) ?x3421 ?x3662 (* 3 (* x z z00 z00 y00)) ?x3454 ?x3468 (* 2 (* x y z z z)) ?x3483 ?x3484 ?x3529 ?x777 (* 3 (* y z z00 z00 y00)) (* 36 (* y z z00 x00)) (* (- 6) (* y y y z)) (* (- 24) (* x y y z)) ?x3626 (* (- 12) (* y z z00 y00)) ?x3629 ?x3609 (* (- 12) (* x z z00 y00)) (* 2 (* y y z z z)) ?x3729 (* (- 180) (* x y y)) ?x3659 ?x3814 (* 3 (* y z z00 z00 x00)) ?x3868 ?x3900 (* 216 (* x z x00)) ?x3906 (* 216 (* y z x00)) ?x3925 (* 18 (* y z00 z00 y00)) ?x3960 (* 18 (* x z00 z00 y00)) (* 108 (* y z00 x00)) ?x3977 (* 2 (* y y y z z00)) (* 2 (* x y y z z00)) (* 108 (* y y x00)) (* 108 (* x z00 x00)) (* 18 (* y y z x00)) (* (- 1) (* x z z z00 y00)) (* (- 1) (* y z z z00 y00)) (* (- 1) (* y y z z00 y00)) (* (- 1) (* x y z z00 y00)) (* (- 6) (* y y z00 y00)) (* (- 6) (* x y z00 y00)) ?x4265 (* 2 (* x z z z z00)) (* 2 (* y z z z z00)) (* (- 108) (* x x y)) ?x4416 ?x4485 ?x2218 (* (- 18) (* x x y z)) ?x3778 ?x655)))
 (let ((?x1395 (* 108 (* x00 x00))))
 (let ((?x1387 (* x z00 y00)))
 (let ((?x1388 (* 36 ?x1387)))
 (let ((?x1292 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1288 (* z00 z00 z00 y00)))
 (let ((?x1198 (* (- 36) (* z00 y00 x00))))
 (let ((?x1083 (* 16 (* y00 y00 y00))))
 (let ((?x997 (* z00 z00 x00)))
 (let ((?x1248 (* (- 18) ?x997)))
 (let ((?x914 (* y y y)))
 (let ((?x953 (* (- 4) ?x914)))
 (let ((?x900 (* x x)))
 (let ((?x901 (* 108 ?x900)))
 (let ((?x869 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x811 (* z00 z00 y00)))
 (let ((?x1349 (* (- 10) ?x811)))
 (let ((?x786 (* z00 y00 y00)))
 (let ((?x821 (* (- 12) ?x786)))
 (let ((?x677 (* y00 y00)))
 (let ((?x1148 (* 96 ?x677)))
 (let ((?x651 (* y y)))
 (let ((?x896 (* 24 ?x651)))
 (let ((?x647 (* z00 x00)))
 (let ((?x565 (* 36 ?x647)))
 (let ((?x610 (* z00 y00)))
 (let ((?x975 (* 24 ?x610)))
 (let ((?x557 (* y00 x00)))
 (let ((?x548 (* 216 ?x557)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1415 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x548 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x975 ?x565 ?x896 ?x1148 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x821 ?x1349 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x869 ?x901 ?x953 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1248 (* (- 216) (* x y00)) ?x1083 (* (- 12) (* y y y00)) ?x1198 (* (- 216) (* x x00)) ?x1288 ?x1292 ?x1388 ?x1395)))
 (let (($x1420 (= ?x1415 0)))
 (let ((?x1057 (* y z y00)))
 (let ((?x998 (* 3 ?x997)))
 (let ((?x1060 (* 3 ?x811)))
 (let ((?x793 (* (- 1) ?x786)))
 (let ((?x723 (* 18 (* z x00))))
 (let ((?x980 (* (- 36) ?x677)))
 (let ((?x885 (* (- 6) ?x610)))
 (let ((?x584 (* z y00)))
 (let ((?x585 (* 12 ?x584)))
 (let ((?x583 (* x z)))
 (let ((?x618 (* (- 18) ?x583)))
 (let ((?x558 (* (- 18) ?x557)))
 (let ((?x553 (* y z)))
 (let ((?x577 (* (- 12) ?x553)))
 (let ((?x135 (* y y z)))
 (let ((?x689 (* (- 108) x00)))
 (let ((?x632 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1116 (+ ?x64 ?x71 ?x632 ?x689 (* (- 3) (* y z00 z00)) ?x135 ?x577 ?x558 (* (- 18) (* x y)) ?x618 ?x585 ?x885 ?x980 ?x723 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x793 ?x1060 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x998 (* 18 (* x y00)) ?x1057 (* (- 2) (* z y00 y00)))))
 (let (($x1123 (= ?x1116 0)))
 (let ((?x706 (* (- 24) ?x677)))
 (let ((?x654 (* 12 ?x651)))
 (let ((?x648 (* 18 ?x647)))
 (let ((?x726 (* 6 ?x610)))
 (let ((?x103 (* y z z00)))
 (let ((?x865 (+ ?x64 ?x71 ?x632 ?x689 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x577 ?x618 ?x585 ?x726 ?x648 ?x654 ?x706 ?x723 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x811 (* (- 18) (* x z00)))))
 (let (($x870 (= ?x865 0)))
 (let ((?x611 (* 18 ?x610)))
 (let ((?x469 (* z00 z00)))
 (let ((?x573 (* 6 ?x469)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x562 (* (- 1) ?x55)))
 (let ((?x705 (+ ?x64 ?x71 ?x632 ?x562 ?x689 ?x76 ?x573 (* (- 6) ?x553) (* (- 12) ?x584) ?x611 (* (- 6) (* z z00)))))
 (let (($x710 (= ?x705 0)))
 (let ((?x540 (* (- 12) y00)))
 (let ((?x539 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x543 (= (+ ?x45 ?x46 ?x539 ?x540 (* (- 1) (* z z)) ?x469) 0)))
 (let (($x461 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x473 (and $x461 $x543 $x710 $x870 $x1123 $x1420 (not (= ?x482 0)))))
 (let ((?x1821 (+ ?x1886 ?x3158 (* (- 18) (* ?x564 ?x564 ?x216 ?x216)) ?x3269 (* (- 72) (* y00 ?x564 ?x216)) ?x1954 ?x3529 ?x4485 (* 12 (* y00 ?x564 ?x564 ?x216)) ?x3609 ?x2963 ?x1606 ?x2636 (* (- 36) (* y00 y00 ?x564 ?x216)) ?x2842 (* 18 (* y00 ?x564 ?x216 ?x216)) ?x2089 ?x2098 ?x2140 ?x1323 ?x3629 ?x3814 (* 3 (* x00 z00 z00 ?x564 ?x216)) ?x1045 (* (- 12) (* ?x564 ?x564 ?x217 ?x216)) (* 36 (* y00 ?x564 ?x217 ?x216)) ?x957 ?x3659 (* (- 3) (* z00 z00 ?x564 ?x217 ?x216)) ?x4416 ?x657 ?x721 ?x3211 ?x2383 ?x2454 ?x4337 ?x655 ?x1269 ?x2546 ?x1938 ?x1211 ?x2146 (* 18 (* x00 ?x564 ?x217 ?x216)) ?x1072 ?x1042 (* (- 3) (* z00 z00 ?x564 ?x216 ?x216)) ?x4372 ?x3626 ?x3868 ?x2072 (* (- 18) (* x00 y00 ?x564 ?x216)) (* (- 1) (* y00 y00 z00 ?x564 ?x216)) (* y00 ?x564 ?x564 ?x217 ?x216) (* 6 (* z00 ?x564 ?x217 ?x216)) ?x1564 ?x3663 ?x1661 ?x3906 ?x2353 ?x2218 ?x2617 ?x2245 ?x1830 ?x1200 (* (- 2) (* y00 y00 ?x564 ?x564 ?x216)) ?x3213 ?x3009 ?x427 ?x3900 ?x3925 ?x3468 ?x777 (* (- 3) (* z00 ?x564 ?x564 ?x216 ?x216)) ?x1410 ?x2222 (* 72 (* ?x564 ?x217 ?x216)) ?x1362 ?x1105 ?x4328 ?x3778 ?x4007 (* (- 6) (* y00 z00 ?x564 ?x216)) ?x881 ?x1525 ?x4265 (* (- 108) (* x00 ?x564 ?x216)) (* ?x564 ?x564 ?x217 ?x217 ?x216) ?x1751 ?x686 ?x839 (* (- 1) (* y00 z00 ?x564 ?x217 ?x216)) ?x1177 ?x3421 (* 2 (* z00 ?x564 ?x217 ?x217 ?x216)) (* 108 (* ?x564 ?x216 ?x216)) ?x3662 (* 18 (* x00 ?x564 ?x564 ?x216)) ?x3960 ?x3977 (* (- 18) (* ?x564 ?x217 ?x216 ?x216)) ?x488 ?x528 (* 3 (* y00 z00 z00 ?x564 ?x216)) (* 3 (* x00 z00 ?x564 ?x564 ?x216)) ?x437 ?x1448 ?x1403 ?x1489 ?x1794 ?x1566 ?x1862)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x2470 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x896 ?x901 ?x953 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1083 (* (- 6) (* z00 y y)) ?x1148 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1395 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x795 (* 18 (* x00 z))))
 (let ((?x523 (* z y)))
 (let ((?x1330 (* (- 12) ?x523)))
 (let ((?x1266 (* y00 z)))
 (let ((?x3112 (* 12 ?x1266)))
 (let ((?x1888 (* (- 18) (* z x))))
 (let ((?x1916 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1888 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x3112 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x1330 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x980 ?x795 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x632 (* 18 (* y00 x)) ?x71 ?x689 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x3363 (+ (* (- 1) (* y00 z00 z)) ?x1330 ?x1888 (* 18 (* x00 z00)) ?x654 ?x706 ?x795 ?x3112 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x632 (* (- 6) (* z00 y)) ?x71 ?x689 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x643 (+ (* (- 6) ?x523) ?x562 ?x573 (* (- 12) ?x1266) (* 18 (* y00 z00)) ?x64 ?x632 (* (- 6) (* z00 z)) ?x71 ?x689 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x499 (* (- 1) ?x469)))
 (let (($x510 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x499 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x643 0) (= ?x3363 0) (= ?x1916 0) (= ?x2470 0) (not (= ?x1821 0)))))
 (rewrite (= $x510 $x473))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x416 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x218 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x400 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 z00 z00)))
 (let ((?x398 (* 2 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x341 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x336 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x328 (* 2 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x318 (* 3 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x314 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x312 (* 3 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x302 (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218)))
 (let ((?x290 (* 3 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x284 (* 3 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x265 (* 3 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x246 (* 3 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x235 (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00)))
 (let ((?x225 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x220 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x29 (- 1)))
 (let ((?x219 (* ?x29 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x227 (- (- (+ ?x219 ?x220) (* 18 ?x216 ?x216 ?x218 ?x218)) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 y00 ?x218 ?x218 z00))))
 (let ((?x233 (+ (- (- ?x227 (* 72 ?x216 y00 ?x218)) ?x225) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218) (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218) (* 12 ?x216 y00 ?x218 ?x218))))
 (let ((?x237 (- (- ?x233 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218)) ?x235)))
 (let ((?x239 (+ ?x237 (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x242 (- ?x239 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x248 (+ (- ?x242 (* 36 ?x216 y00 y00 ?x218)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218) (* 18 ?x216 ?x216 y00 ?x218) ?x246 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x250 (- ?x248 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x252 (+ ?x250 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218))))
 (let ((?x255 (- ?x252 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00))))
 (let ((?x256 (- ?x255 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x261 (- (+ ?x256 (* 3 ?x216 x00 ?x218 z00 z00)) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x264 (+ (- ?x261 (* 12 ?x216 ?x217 ?x218 ?x218)) (* 36 ?x216 ?x217 y00 ?x218))))
 (let ((?x268 (+ (- ?x264 ?x265) (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x272 (- (- ?x268 (* 3 ?x216 ?x217 ?x218 z00 z00)) (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x277 (+ ?x272 (* 36 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218) (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218 z00 z00) (* 72 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x281 (- ?x277 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x282 (- ?x281 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x287 (+ (- ?x282 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218)) ?x284 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x218 ?x218) (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218))))
 (let ((?x289 (- ?x287 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218))))
 (let ((?x293 (+ ?x289 ?x290 (* 18 ?x216 x00 ?x217 ?x218) (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x297 (- ?x293 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x299 (- (- ?x297 (* 3 ?x216 ?x216 ?x218 z00 z00)) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00))))
 (let ((?x303 (+ ?x299 (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 z00) ?x302)))
 (let ((?x307 (- (- ?x303 (* 18 ?x216 x00 y00 ?x218)) (* ?x216 y00 y00 ?x218 z00))))
 (let ((?x311 (+ ?x307 (* ?x216 ?x217 y00 ?x218 ?x218) (* 6 ?x216 ?x217 ?x218 z00) (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x317 (+ (- ?x311 ?x312) ?x314 (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x322 (- (- ?x317 ?x318) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x323 (- ?x322 (* 108 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x326 (+ ?x323 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x333 (- (- (- ?x326 (* 2 ?x216 y00 y00 ?x218 ?x218)) ?x328) (* 36 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x334 (- ?x333 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x338 (+ ?x334 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218 z00) ?x336 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218))))
 (let ((?x343 (- ?x338 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x346 (- (- (- ?x343 (* 3 ?x216 ?x216 ?x218 ?x218 z00)) ?x341) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x350 (- (+ ?x346 (* 72 ?x216 ?x217 ?x218)) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x353 (+ ?x350 (* 19 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x359 (- ?x353 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00))))
 (let ((?x360 (- ?x359 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 y00 ?x218 ?x218))))
 (let ((?x361 (- ?x360 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x363 (- (- ?x361 (* 6 ?x216 y00 ?x218 z00)) (* 72 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x366 (+ ?x363 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x370 (+ (- ?x366 (* 108 ?x216 x00 ?x218)) (* ?x216 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x372 (- ?x370 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x374 (+ ?x372 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 z00))))
 (let ((?x378 (- ?x374 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x380 (- (- ?x378 (* ?x216 ?x217 y00 ?x218 z00)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x386 (+ ?x380 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 z00) (* 2 ?x216 ?x217 ?x217 ?x218 z00) (* 108 ?x216 ?x216 ?x218) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 18 ?x216 x00 ?x218 ?x218))))
 (let ((?x388 (- ?x386 (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 y00 ?x218 ?x218))))
 (let ((?x390 (+ ?x388 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00 z00))))
 (let ((?x394 (- (- ?x390 (* 18 ?x216 ?x216 ?x217 ?x218)) (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x399 (+ ?x394 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) (* 3 ?x216 y00 ?x218 z00 z00) (* 3 ?x216 x00 ?x218 ?x218 z00) ?x398)))
 (let ((?x403 (+ (- ?x399 ?x400) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218))))
 (let ((?x405 (- ?x403 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218))))
 (let ((?x410 (- (+ ?x405 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218)) (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x411 (- ?x410 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* ?x29 z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x411 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x3010 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x564 (+ 6 z)))
 (let ((?x578 (+ 1 n)))
 (let ((?x1862 (* (- 1) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1566 (* (- 36) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1794 (* 108 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1489 (* (- 18) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1403 (* 72 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1448 (* (- 3) (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x437 (* 2 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x528 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x488 (* (- 2) (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3977 (* 3 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3960 (* (- 36) (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3662 (* 6 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3421 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1177 (* (- 12) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x839 (* (- 18) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x686 (* 6 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1751 (* (- 6) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x4265 (* 72 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1525 (* 12 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x881 (* (- 72) (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x4007 (* (- 12) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3778 (* (- 18) (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x4328 (* (- 3) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1105 (* 19 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1362 (* (- 108) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2222 (* (- 18) (* x00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1410 (* (- 3) (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x777 (* (- 1) (* y00 y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3468 (* 18 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3925 (* 3 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3900 (* 3 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x427 (* (- 72) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3009 (* (- 36) (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3213 (* (- 2) (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1200 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1830 (* 12 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2245 (* (- 108) (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2617 (* (- 1) (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2218 (* (- 3) (* z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2353 (* 18 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3906 (* 18 (* x00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1661 (* 3 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3663 (* (- 3) (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1564 (* 2 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2072 (* 2 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3868 (* 6 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3626 (* 36 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x4372 (* (- 6) (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x1042 (* (- 18) (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1072 (* 108 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2146 (* 3 (* x00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1211 (* (- 18) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1938 (* 18 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x2546 (* 18 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1269 (* 3 (* y00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x655 (* (- 108) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x4337 (* (- 18) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2454 (* (- 12) (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2383 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3211 (* 72 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x721 (* 3 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x657 (* 36 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x4416 (* (- 3) (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3659 (* 18 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x957 (* (- 3) (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1045 (* (- 6) (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3814 (* (- 18) (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x3629 (* (- 3) (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1323 (* 18 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2140 (* (- 18) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2098 (* 108 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2089 (* 3 (* x00 z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2842 (* 12 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x2636 (* (- 1) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1606 (* 18 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2963 (* (- 2) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3609 (* (- 72) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x4485 (* 36 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x3529 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1954 (* (- 3) (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x3269 (* (- 1) (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216))))
 (let ((?x3158 (* 3 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1886 (* (- 1) (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1821 (+ ?x1886 ?x3158 (* (- 18) (* ?x564 ?x564 ?x216 ?x216)) ?x3269 (* (- 72) (* y00 ?x564 ?x216)) ?x1954 ?x3529 ?x4485 (* 12 (* y00 ?x564 ?x564 ?x216)) ?x3609 ?x2963 ?x1606 ?x2636 (* (- 36) (* y00 y00 ?x564 ?x216)) ?x2842 (* 18 (* y00 ?x564 ?x216 ?x216)) ?x2089 ?x2098 ?x2140 ?x1323 ?x3629 ?x3814 (* 3 (* x00 z00 z00 ?x564 ?x216)) ?x1045 (* (- 12) (* ?x564 ?x564 ?x217 ?x216)) (* 36 (* y00 ?x564 ?x217 ?x216)) ?x957 ?x3659 (* (- 3) (* z00 z00 ?x564 ?x217 ?x216)) ?x4416 ?x657 ?x721 ?x3211 ?x2383 ?x2454 ?x4337 ?x655 ?x1269 ?x2546 ?x1938 ?x1211 ?x2146 (* 18 (* x00 ?x564 ?x217 ?x216)) ?x1072 ?x1042 (* (- 3) (* z00 z00 ?x564 ?x216 ?x216)) ?x4372 ?x3626 ?x3868 ?x2072 (* (- 18) (* x00 y00 ?x564 ?x216)) (* (- 1) (* y00 y00 z00 ?x564 ?x216)) (* y00 ?x564 ?x564 ?x217 ?x216) (* 6 (* z00 ?x564 ?x217 ?x216)) ?x1564 ?x3663 ?x1661 ?x3906 ?x2353 ?x2218 ?x2617 ?x2245 ?x1830 ?x1200 (* (- 2) (* y00 y00 ?x564 ?x564 ?x216)) ?x3213 ?x3009 ?x427 ?x3900 ?x3925 ?x3468 ?x777 (* (- 3) (* z00 ?x564 ?x564 ?x216 ?x216)) ?x1410 ?x2222 (* 72 (* ?x564 ?x217 ?x216)) ?x1362 ?x1105 ?x4328 ?x3778 ?x4007 (* (- 6) (* y00 z00 ?x564 ?x216)) ?x881 ?x1525 ?x4265 (* (- 108) (* x00 ?x564 ?x216)) (* ?x564 ?x564 ?x217 ?x217 ?x216) ?x1751 ?x686 ?x839 (* (- 1) (* y00 z00 ?x564 ?x217 ?x216)) ?x1177 ?x3421 (* 2 (* z00 ?x564 ?x217 ?x217 ?x216)) (* 108 (* ?x564 ?x216 ?x216)) ?x3662 (* 18 (* x00 ?x564 ?x564 ?x216)) ?x3960 ?x3977 (* (- 18) (* ?x564 ?x217 ?x216 ?x216)) ?x488 ?x528 (* 3 (* y00 z00 z00 ?x564 ?x216)) (* 3 (* x00 z00 ?x564 ?x564 ?x216)) ?x437 ?x1448 ?x1403 ?x1489 ?x1794 ?x1566 ?x1862)))
 (let ((?x1395 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x677 (* y00 y00)))
 (let ((?x1148 (* 96 ?x677)))
 (let ((?x1083 (* 16 (* y00 y00 y00))))
 (let ((?x914 (* y y y)))
 (let ((?x953 (* (- 4) ?x914)))
 (let ((?x900 (* x x)))
 (let ((?x901 (* 108 ?x900)))
 (let ((?x651 (* y y)))
 (let ((?x896 (* 24 ?x651)))
 (let ((?x2470 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x896 ?x901 ?x953 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1083 (* (- 6) (* z00 y y)) ?x1148 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1395 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x689 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x632 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x795 (* 18 (* x00 z))))
 (let ((?x980 (* (- 36) ?x677)))
 (let ((?x523 (* z y)))
 (let ((?x1330 (* (- 12) ?x523)))
 (let ((?x1266 (* y00 z)))
 (let ((?x3112 (* 12 ?x1266)))
 (let ((?x1888 (* (- 18) (* z x))))
 (let ((?x1916 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1888 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x3112 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x1330 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x980 ?x795 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x632 (* 18 (* y00 x)) ?x71 ?x689 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x706 (* (- 24) ?x677)))
 (let ((?x654 (* 12 ?x651)))
 (let ((?x3363 (+ (* (- 1) (* y00 z00 z)) ?x1330 ?x1888 (* 18 (* x00 z00)) ?x654 ?x706 ?x795 ?x3112 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x632 (* (- 6) (* z00 y)) ?x71 ?x689 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x469 (* z00 z00)))
 (let ((?x573 (* 6 ?x469)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x562 (* (- 1) ?x55)))
 (let ((?x643 (+ (* (- 6) ?x523) ?x562 ?x573 (* (- 12) ?x1266) (* 18 (* y00 z00)) ?x64 ?x632 (* (- 6) (* z00 z)) ?x71 ?x689 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x499 (* (- 1) ?x469)))
 (let (($x510 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x499 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x643 0) (= ?x3363 0) (= ?x1916 0) (= ?x2470 0) (not (= ?x1821 0)))))
 (let ((?x218 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x400 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 z00 z00)))
 (let ((?x398 (* 2 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x341 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x336 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x328 (* 2 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x318 (* 3 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x314 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x312 (* 3 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x302 (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218)))
 (let ((?x290 (* 3 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x284 (* 3 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x265 (* 3 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x246 (* 3 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x235 (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00)))
 (let ((?x225 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x220 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x29 (- 1)))
 (let ((?x219 (* ?x29 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x227 (- (- (+ ?x219 ?x220) (* 18 ?x216 ?x216 ?x218 ?x218)) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 y00 ?x218 ?x218 z00))))
 (let ((?x233 (+ (- (- ?x227 (* 72 ?x216 y00 ?x218)) ?x225) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218) (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218) (* 12 ?x216 y00 ?x218 ?x218))))
 (let ((?x237 (- (- ?x233 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218)) ?x235)))
 (let ((?x239 (+ ?x237 (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x242 (- ?x239 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x248 (+ (- ?x242 (* 36 ?x216 y00 y00 ?x218)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218) (* 18 ?x216 ?x216 y00 ?x218) ?x246 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x250 (- ?x248 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x252 (+ ?x250 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218))))
 (let ((?x255 (- ?x252 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00))))
 (let ((?x256 (- ?x255 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x261 (- (+ ?x256 (* 3 ?x216 x00 ?x218 z00 z00)) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x264 (+ (- ?x261 (* 12 ?x216 ?x217 ?x218 ?x218)) (* 36 ?x216 ?x217 y00 ?x218))))
 (let ((?x268 (+ (- ?x264 ?x265) (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x272 (- (- ?x268 (* 3 ?x216 ?x217 ?x218 z00 z00)) (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x277 (+ ?x272 (* 36 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218) (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218 z00 z00) (* 72 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x281 (- ?x277 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x282 (- ?x281 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x287 (+ (- ?x282 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218)) ?x284 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x218 ?x218) (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218))))
 (let ((?x289 (- ?x287 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218))))
 (let ((?x293 (+ ?x289 ?x290 (* 18 ?x216 x00 ?x217 ?x218) (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x297 (- ?x293 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x299 (- (- ?x297 (* 3 ?x216 ?x216 ?x218 z00 z00)) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00))))
 (let ((?x303 (+ ?x299 (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 z00) ?x302)))
 (let ((?x307 (- (- ?x303 (* 18 ?x216 x00 y00 ?x218)) (* ?x216 y00 y00 ?x218 z00))))
 (let ((?x311 (+ ?x307 (* ?x216 ?x217 y00 ?x218 ?x218) (* 6 ?x216 ?x217 ?x218 z00) (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x317 (+ (- ?x311 ?x312) ?x314 (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x322 (- (- ?x317 ?x318) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x323 (- ?x322 (* 108 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x326 (+ ?x323 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x333 (- (- (- ?x326 (* 2 ?x216 y00 y00 ?x218 ?x218)) ?x328) (* 36 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x334 (- ?x333 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x338 (+ ?x334 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218 z00) ?x336 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218))))
 (let ((?x343 (- ?x338 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x346 (- (- (- ?x343 (* 3 ?x216 ?x216 ?x218 ?x218 z00)) ?x341) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x350 (- (+ ?x346 (* 72 ?x216 ?x217 ?x218)) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x353 (+ ?x350 (* 19 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x359 (- ?x353 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00))))
 (let ((?x360 (- ?x359 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 y00 ?x218 ?x218))))
 (let ((?x361 (- ?x360 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x363 (- (- ?x361 (* 6 ?x216 y00 ?x218 z00)) (* 72 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x366 (+ ?x363 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x370 (+ (- ?x366 (* 108 ?x216 x00 ?x218)) (* ?x216 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x372 (- ?x370 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x374 (+ ?x372 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 z00))))
 (let ((?x378 (- ?x374 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x380 (- (- ?x378 (* ?x216 ?x217 y00 ?x218 z00)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x386 (+ ?x380 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 z00) (* 2 ?x216 ?x217 ?x217 ?x218 z00) (* 108 ?x216 ?x216 ?x218) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 18 ?x216 x00 ?x218 ?x218))))
 (let ((?x388 (- ?x386 (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 y00 ?x218 ?x218))))
 (let ((?x390 (+ ?x388 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00 z00))))
 (let ((?x394 (- (- ?x390 (* 18 ?x216 ?x216 ?x217 ?x218)) (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x399 (+ ?x394 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) (* 3 ?x216 y00 ?x218 z00 z00) (* 3 ?x216 x00 ?x218 ?x218 z00) ?x398)))
 (let ((?x403 (+ (- ?x399 ?x400) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218))))
 (let ((?x405 (- ?x403 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218))))
 (let ((?x410 (- (+ ?x405 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218)) (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x411 (- ?x410 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* ?x29 z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x415 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x411 0))))))
 (rewrite (= $x415 $x510)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x417 (asserted $x416)))
 (let ((@x2360 (mp (mp @x417 (quant-intro (proof-bind ?x3010) (= $x416 $x3041)) $x3041) (rewrite (= $x3041 $x3041)) $x3041)))
 (let ((@x3462 (mp~ (mp @x2360 (quant-intro (proof-bind ?x1843) (= $x3041 $x4108)) $x4108) (sk (~ $x4108 $x2891)) $x2891)))
 (let ((@x1279 (mp @x3462 (rewrite (= $x2891 $x2582)) $x2582)))
 (let ((@x2037 (and-elim @x1279 $x4686)))
 (let ((@x2834 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4686) $x3074)) @x2037 $x3074)))
 (let (($x2221 (>= ?x862 0)))
 (let ((@x1018 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4686) $x2221)) @x2037 $x2221)))
 (let (($x2968 (<= ?x1664 0)))
 (let ((@x1600 (and-elim @x1279 $x1166)))
 (let ((@x3455 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1166) $x2968)) @x1600 $x2968)))
 (let (($x1589 (>= ?x1664 0)))
 (let ((@x1190 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1166) $x1589)) @x1600 $x1589)))
 (let (($x1081 (<= ?x4159 0)))
 (let ((@x1203 (and-elim @x1279 $x4157)))
 (let ((@x946 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4157) $x1081)) @x1203 $x1081)))
 (let (($x444 (>= ?x4159 0)))
 (let ((@x1516 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4157) $x444)) @x1203 $x444)))
 (let (($x1196 (<= ?x1178 0)))
 (let ((@x2481 (and-elim @x1279 $x1158)))
 (let ((@x1837 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1158) $x1196)) @x2481 $x1196)))
 (let (($x3335 (>= ?x1178 0)))
 (let ((@x664 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1158) $x3335)) @x2481 $x3335)))
 (let (($x1181 (<= ?x621 0)))
 (let ((@x1280 (and-elim @x1279 $x2150)))
 (let ((@x2270 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2150) $x1181)) @x1280 $x1181)))
 (let (($x4280 (>= ?x621 0)))
 (let ((@x3566 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2150) $x4280)) @x1280 $x4280)))
 (let (($x1591 (<= ?x1001 0)))
 (let ((@x2592 (and-elim @x1279 $x996)))
 (let ((@x2983 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x996) $x1591)) @x2592 $x1591)))
 (let (($x766 (>= ?x1001 0)))
 (let ((@x1925 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x996) $x766)) @x2592 $x766)))
 (let (($x2908 (not (<= ?x3240 0))))
 (let (($x2895 (>= ?x3240 0)))
 (let ((@x4029 ((_ th-lemma arith) (hypothesis (not $x2895)) @x3566 @x2270 @x1925 @x2983 @x1516 @x946 @x3566 @x2270 @x1018 @x2834 @x664 @x1837 @x664 @x1837 @x1925 @x2983 @x1925 @x2983 @x3566 @x2270 @x664 @x1837 @x1018 @x2834 @x1516 @x946 @x1190 @x3455 @x1018 @x2834 false)))
 (let ((@x2554 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3048 $x2908 (not $x2895))) (and-elim @x1279 $x2017) (or $x2908 (not $x2895)))))
 ((_ th-lemma arith) (unit-resolution @x2554 (lemma @x4029 $x2895) $x2908) @x3566 @x2270 @x1925 @x2983 @x1516 @x946 @x3566 @x2270 @x1018 @x2834 @x664 @x1837 @x664 @x1837 @x1925 @x2983 @x1925 @x2983 @x3566 @x2270 @x664 @x1837 @x1018 @x2834 @x1516 @x946 @x1190 @x3455 @x1018 @x2834 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        30
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1898
 :arith-nonlinear-bounds    22
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      10
 :arith-tableau-max-columns 292
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                23.29
 :memory                    19.61
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                437761568
 :num-checks                1
 :propagations              14
 :rlimit-count              480592
 :time                      0.32
 :total-time                0.35)
