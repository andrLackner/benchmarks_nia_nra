unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x341 (* (- 108) x!3)))
 (let ((?x793 (* (- 72) y!2)))
 (let ((?x74 (* 108 x00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x954 (+ ?x67 ?x55 ?x74 (* (- 6) (* z00 z00)) ?x793 (* (- 1) (* z00 z00 z!1)) ?x341 (* (- 18) (* z00 y00)) (* 6 (* z00 z!1)) (* 6 (* z!1 y!2)) (* 12 (* y00 z!1)))))
 (let (($x838 (>= ?x954 0)))
 (let (($x888 (= ?x954 0)))
 (let ((?x1192 (* y00 z!1)))
 (let ((?x1120 (* (- 12) ?x1192)))
 (let ((?x1102 (* z!1 z!1)))
 (let ((?x604 (* (- 6) ?x1102)))
 (let ((?x433 (* z00 y00)))
 (let ((?x434 (* 18 ?x433)))
 (let ((?x863 (* 108 x!3)))
 (let ((?x355 (* z00 z00 z!1)))
 (let ((?x1140 (* 144 y!2)))
 (let ((?x665 (* 36 z!1)))
 (let ((?x292 (* z00 z00)))
 (let ((?x1171 (* 12 ?x292)))
 (let ((?x512 (* (- 108) x00)))
 (let ((?x385 (* (- 1) ?x55)))
 (let ((?x962 (* (- 144) y00)))
 (let ((?x1043 (* (- 36) z00)))
 (let ((?x884 (+ ?x1043 ?x962 ?x385 ?x512 ?x1171 ?x665 ?x1140 ?x355 ?x863 ?x434 (* (- 6) (* z00 z!1)) ?x604 (* (- 6) (* z!1 y!2)) ?x1120)))
 (let ((?x524 (+ y!2 x!3)))
 (let ((?x924 (+ z!1 y!2)))
 (let ((?x251 (+ 1 n!0)))
 (let ((?x951 (* ?x251 ?x924 ?x924 ?x524 ?x524 ?x884)))
 (let (($x883 (= ?x951 0)))
 (let (($x952 (not $x883)))
 (let ((?x690 (* z00 z00 y00 y00)))
 (let ((?x675 (+ (* 12 (* y00 y!2 y!2)) (* (- 216) (* y00 x00)) (* 120 (* y00 y!2)) (* (- 24) ?x433) (* (- 108) (* y!2 x!3)) (* 6 (* z00 y!2 y!2)) (* (- 36) (* z00 y00 x!3)) (* (- 36) (* z00 x00)) (* (- 96) (* y00 y00)) (* 4 (* y!2 y!2 y!2)) (* 12 (* z00 y00 y00)) (* 10 (* z00 z00 y00)) ?x690 (* (- 10) (* z00 z00 y!2)) (* 36 (* z00 x!3)) (* (- 108) (* x!3 x!3)) (* 24 (* z00 y!2)) (* 18 (* z00 z00 x00)) (* (- 1) (* z00 z00 y!2 y!2)) (* 216 (* y00 x!3)) (* (- 16) (* y00 y00 y00)) (* z00 z00 z00 y!2) (* 2 (* z00 z00 z00 x!3)) (* 36 (* z00 y00 x00)) (* (- 18) (* z00 z00 x!3)) (* 108 (* x00 y!2)) (* (- 18) (* z00 y00 y!2)) (* 216 (* x00 x!3)) (* (- 1) (* z00 z00 z00 y00)) (* (- 2) (* z00 z00 z00 x00)) (* (- 108) (* x00 x00)) (* (- 24) (* y!2 y!2)))))
 (let ((?x1185 (* z!1 y!2)))
 (let ((?x521 (* 12 ?x1185)))
 (let ((?x1059 (* z00 y00 y!2)))
 (let ((?x622 (* z00 y00 y00)))
 (let ((?x562 (* 6 ?x433)))
 (let ((?x313 (* 18 (* z!1 x!3))))
 (let ((?x312 (* (- 18) (* x00 z!1))))
 (let ((?x543 (+ ?x67 ?x74 ?x793 ?x341 (* 18 (* y00 x00)) (* (- 36) (* y00 y!2)) ?x312 ?x313 ?x562 (* 18 (* y!2 x!3)) (* (- 2) (* z00 y!2 y!2)) (* 36 (* y00 y00)) (* 2 (* y00 y00 z!1)) ?x622 (* (- 3) (* z00 z00 y00)) (* 3 (* z00 z00 y!2)) (* (- 3) (* z00 x00 z!1)) (* (- 1) (* z!1 y!2 y!2)) (* (- 6) (* z00 y!2)) (* (- 3) (* z00 z00 x00)) (* (- 18) (* y00 x!3)) (* (- 1) (* y00 z!1 y!2)) (* 3 (* z00 z00 x!3)) (* (- 18) (* x00 y!2)) ?x1059 (* 3 (* z00 z!1 x!3)) ?x521 ?x1120)))
 (let ((?x702 (* z00 z00 y!2)))
 (let ((?x721 (* (- 6) ?x433)))
 (let ((?x510 (+ ?x67 ?x74 ?x793 ?x341 (* (- 12) (* y00 y!2)) ?x312 ?x313 (* z00 y00 z!1) ?x721 (* (- 18) (* z00 x00)) (* 24 (* y00 y00)) (* (- 1) (* z00 z00 y00)) ?x702 (* 18 (* z00 x!3)) (* 6 (* z00 y!2)) (* (- 1) (* z00 z!1 y!2)) ?x521 ?x1120 (* (- 12) (* y!2 y!2)))))
 (let ((?x1004 (* (- 1) ?x292)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x786 (+ ?x49 ?x43 ?x1004 (* (- 6) z!1) (* (- 12) y!2) ?x1102)))
 (let (($x1112 (= ?x786 0)))
 (let (($x938 (and (= (+ z00 (* (- 6) n00) (* (- 1) z!1) (* 6 n!0)) 0) $x1112 $x888 (= ?x510 0) (= ?x543 0) (= ?x675 0) $x952)))
 (let ((?x848 (* (- 6) (* z!1 z00))))
 (let ((?x830 (* z!1 y00)))
 (let ((?x1128 (* (- 12) ?x830)))
 (let ((?x872 (* y!2 z!1)))
 (let ((?x833 (* (- 6) ?x872)))
 (let ((?x870 (* z!1 z00 z00)))
 (let ((?x246 (+ ?x863 ?x1140 ?x665 ?x1043 ?x962 ?x604 ?x385 ?x512 ?x870 ?x1171 ?x833 ?x1128 ?x434 ?x848)))
 (let ((?x666 (+ x!3 y!2)))
 (let ((?x906 (+ y!2 z!1)))
 (let ((?x1228 (* x00 x00)))
 (let ((?x1229 (* 108 ?x1228)))
 (let ((?x1125 (* z00 z00 z00 x00)))
 (let ((?x1126 (* 2 ?x1125)))
 (let ((?x1122 (* z00 z00 z00 y00)))
 (let ((?x1019 (* z00 y00 x00)))
 (let ((?x1032 (* (- 36) ?x1019)))
 (let ((?x916 (* y00 y00 y00)))
 (let ((?x917 (* 16 ?x916)))
 (let ((?x831 (* z00 z00 x00)))
 (let ((?x1082 (* (- 18) ?x831)))
 (let ((?x705 (* (- 1) ?x690)))
 (let ((?x647 (* z00 z00 y00)))
 (let ((?x1183 (* (- 10) ?x647)))
 (let ((?x657 (* (- 12) ?x622)))
 (let ((?x527 (* y00 y00)))
 (let ((?x982 (* 96 ?x527)))
 (let ((?x496 (* z00 x00)))
 (let ((?x390 (* 36 ?x496)))
 (let ((?x809 (* 24 ?x433)))
 (let ((?x382 (* y00 x00)))
 (let ((?x373 (* 216 ?x382)))
 (let ((?x358 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x373 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x809 ?x390 (* 24 (* y!2 y!2)) ?x982 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x657 ?x1183 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x705 (* 108 (* x!3 x!3)) (* (- 4) (* y!2 y!2 y!2)) (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1082 (* (- 216) (* x!3 y00)) ?x917 (* (- 12) (* y!2 y!2 y00)) ?x1032 (* (- 216) (* x!3 x00)) ?x1122 ?x1126 (* 36 (* x!3 z00 y00)) ?x1229)))
 (let ((?x832 (* 3 ?x831)))
 (let ((?x894 (* 3 ?x647)))
 (let ((?x629 (* (- 1) ?x622)))
 (let ((?x381 (* 18 (* z!1 x00))))
 (let ((?x814 (* (- 36) ?x527)))
 (let ((?x1164 (* (- 18) (* x!3 z!1))))
 (let ((?x1160 (* 12 ?x830)))
 (let ((?x383 (* (- 18) ?x382)))
 (let ((?x799 (* (- 12) ?x872)))
 (let ((?x455 (* (- 72) y00)))
 (let ((?x1193 (* 72 y!2)))
 (let ((?x818 (+ ?x863 ?x1193 ?x455 ?x512 (* (- 3) (* y!2 z00 z00)) (* y!2 y!2 z!1) ?x799 ?x383 (* (- 18) (* x!3 y!2)) ?x1160 ?x721 ?x1164 ?x814 ?x381 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x629 ?x894 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x832 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x545 (* (- 24) ?x527)))
 (let ((?x498 (* 18 ?x496)))
 (let ((?x351 (+ ?x863 ?x1193 ?x455 ?x512 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) ?x799 (* (- 1) (* z!1 z00 y00)) ?x1160 ?x562 ?x1164 ?x498 (* 12 (* y!2 y!2)) ?x545 ?x381 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x647 (* (- 18) (* x!3 z00)))))
 (let ((?x396 (* 6 ?x292)))
 (let (($x820 (= (+ ?x863 ?x1193 ?x455 ?x385 ?x512 ?x870 ?x396 ?x833 ?x1128 ?x434 ?x848) 0)))
 (let ((?x363 (* (- 12) y00)))
 (let ((?x362 (* (- 6) z00)))
 (let (($x978 (= (+ (* 12 y!2) (* 6 z!1) ?x362 ?x363 (* (- 1) ?x1102) ?x292) 0)))
 (let (($x796 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x978 $x820 (= ?x351 0) (= ?x818 0) (= ?x358 0) (not (= (* ?x251 ?x906 ?x906 ?x666 ?x666 ?x246) 0)))))
 (let (($x294 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x481 (* (- 6) (* z z00))))
 (let ((?x433 (* z00 y00)))
 (let ((?x434 (* 18 ?x433)))
 (let ((?x407 (* z y00)))
 (let ((?x420 (* (- 12) ?x407)))
 (let ((?x376 (* y z)))
 (let ((?x377 (* (- 6) ?x376)))
 (let ((?x292 (* z00 z00)))
 (let ((?x1171 (* 12 ?x292)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x512 (* (- 108) x00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x385 (* (- 1) ?x55)))
 (let ((?x50 (* z z)))
 (let ((?x499 (* (- 6) ?x50)))
 (let ((?x962 (* (- 144) y00)))
 (let ((?x1043 (* (- 36) z00)))
 (let ((?x64 (* 108 x)))
 (let ((?x577 (+ ?x64 (* 144 y) (* 36 z) ?x1043 ?x962 ?x499 ?x385 ?x512 ?x76 ?x1171 ?x377 ?x420 ?x434 ?x481)))
 (let ((?x222 (+ x y)))
 (let ((?x215 (+ y z)))
 (let ((?x1179 (+ 1 n)))
 (let ((?x1228 (* x00 x00)))
 (let ((?x1229 (* 108 ?x1228)))
 (let ((?x1125 (* z00 z00 z00 x00)))
 (let ((?x1126 (* 2 ?x1125)))
 (let ((?x1122 (* z00 z00 z00 y00)))
 (let ((?x1019 (* z00 y00 x00)))
 (let ((?x1032 (* (- 36) ?x1019)))
 (let ((?x916 (* y00 y00 y00)))
 (let ((?x917 (* 16 ?x916)))
 (let ((?x831 (* z00 z00 x00)))
 (let ((?x1082 (* (- 18) ?x831)))
 (let ((?x787 (* (- 4) (* y y y))))
 (let ((?x737 (* 108 (* x x))))
 (let ((?x690 (* z00 z00 y00 y00)))
 (let ((?x705 (* (- 1) ?x690)))
 (let ((?x647 (* z00 z00 y00)))
 (let ((?x1183 (* (- 10) ?x647)))
 (let ((?x622 (* z00 y00 y00)))
 (let ((?x657 (* (- 12) ?x622)))
 (let ((?x527 (* y00 y00)))
 (let ((?x982 (* 96 ?x527)))
 (let ((?x501 (* y y)))
 (let ((?x732 (* 24 ?x501)))
 (let ((?x496 (* z00 x00)))
 (let ((?x390 (* 36 ?x496)))
 (let ((?x809 (* 24 ?x433)))
 (let ((?x382 (* y00 x00)))
 (let ((?x373 (* 216 ?x382)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1249 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x373 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x809 ?x390 ?x732 ?x982 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x657 ?x1183 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x705 ?x737 ?x787 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1082 (* (- 216) (* x y00)) ?x917 (* (- 12) (* y y y00)) ?x1032 (* (- 216) (* x x00)) ?x1122 ?x1126 (* 36 (* x z00 y00)) ?x1229)))
 (let (($x1254 (= ?x1249 0)))
 (let ((?x832 (* 3 ?x831)))
 (let ((?x894 (* 3 ?x647)))
 (let ((?x629 (* (- 1) ?x622)))
 (let ((?x559 (* 18 (* z x00))))
 (let ((?x814 (* (- 36) ?x527)))
 (let ((?x470 (* (- 18) (* x z))))
 (let ((?x721 (* (- 6) ?x433)))
 (let ((?x408 (* 12 ?x407)))
 (let ((?x383 (* (- 18) ?x382)))
 (let ((?x405 (* (- 12) ?x376)))
 (let ((?x135 (* y y z)))
 (let ((?x455 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x950 (+ ?x64 ?x71 ?x455 ?x512 (* (- 3) (* y z00 z00)) ?x135 ?x405 ?x383 (* (- 18) (* x y)) ?x408 ?x721 ?x470 ?x814 ?x559 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x629 ?x894 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x832 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x957 (= ?x950 0)))
 (let ((?x545 (* (- 24) ?x527)))
 (let ((?x502 (* 12 ?x501)))
 (let ((?x498 (* 18 ?x496)))
 (let ((?x562 (* 6 ?x433)))
 (let ((?x103 (* y z z00)))
 (let ((?x701 (+ ?x64 ?x71 ?x455 ?x512 ?x103 (* (- 1) (* y z00 z00)) ?x405 (* (- 1) (* z z00 y00)) ?x408 ?x562 ?x470 ?x498 ?x502 ?x545 ?x559 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x647 (* (- 18) (* x z00)))))
 (let (($x706 (= ?x701 0)))
 (let ((?x396 (* 6 ?x292)))
 (let (($x533 (= (+ ?x64 ?x71 ?x455 ?x385 ?x512 ?x76 ?x396 ?x377 ?x420 ?x434 ?x481) 0)))
 (let ((?x363 (* (- 12) y00)))
 (let ((?x362 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x366 (= (+ ?x45 ?x46 ?x362 ?x363 (* (- 1) ?x50) ?x292) 0)))
 (let (($x284 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x284 $x366 $x533 $x706 $x957 $x1254 (not (= (* ?x1179 ?x215 ?x215 ?x222 ?x222 ?x577) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x339 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x512 (* (- 108) x00)))
 (let ((?x1074 (* 72 z)))
 (let ((?x455 (* (- 72) y00)))
 (let ((?x1097 (* 180 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x840 (* y00 z00)))
 (let ((?x841 (* 18 ?x840)))
 (let ((?x292 (* z00 z00)))
 (let ((?x396 (* 6 ?x292)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x385 (* (- 1) ?x55)))
 (let ((?x698 (+ (* (- 6) (* (+ 6 z) (+ y z))) ?x385 ?x396 (* (- 12) (* y00 (+ 6 z))) ?x841 ?x64 ?x1097 ?x455 (* (- 6) (* z00 (+ 6 z))) ?x1074 ?x512 (* z00 z00 (+ 6 z)))))
 (let ((?x222 (+ x y)))
 (let ((?x215 (+ y z)))
 (let ((?x1179 (+ 1 n)))
 (let ((?x1228 (* x00 x00)))
 (let ((?x1229 (* 108 ?x1228)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x527 (* y00 y00)))
 (let ((?x982 (* 96 ?x527)))
 (let ((?x916 (* y00 y00 y00)))
 (let ((?x917 (* 16 ?x916)))
 (let ((?x787 (* (- 4) (* y y y))))
 (let ((?x737 (* 108 (* x x))))
 (let ((?x501 (* y y)))
 (let ((?x732 (* 24 ?x501)))
 (let ((?x1309 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x732 ?x737 ?x787 (* 18 (* y00 z00 y)) (* 24 ?x840) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x917 (* (- 6) (* z00 y y)) ?x982 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1229 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x71 (* 72 y)))
 (let ((?x482 (* 18 (* x00 z))))
 (let ((?x814 (* (- 36) ?x527)))
 (let ((?x322 (* z y)))
 (let ((?x561 (* (- 12) ?x322)))
 (let ((?x979 (* y00 z)))
 (let ((?x877 (* 12 ?x979)))
 (let ((?x404 (* (- 18) (* z x))))
 (let ((?x948 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x404 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x877 (* (- 6) ?x840) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x561 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x814 ?x482 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x455 (* 18 (* y00 x)) ?x71 ?x512 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x545 (* (- 24) ?x527)))
 (let ((?x502 (* 12 ?x501)))
 (let ((?x593 (+ (* (- 1) (* y00 z00 z)) ?x561 ?x404 (* 18 (* x00 z00)) ?x502 ?x545 ?x482 ?x877 (* 6 ?x840) (* 12 (* y00 y)) ?x64 ?x455 (* (- 6) (* z00 y)) ?x71 ?x512 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x542 (+ (* (- 6) ?x322) ?x385 ?x396 (* (- 12) ?x979) ?x841 ?x64 ?x455 (* (- 6) (* z00 z)) ?x71 ?x512 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1004 (* (- 1) ?x292)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1004 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x542 0) (= ?x593 0) (= ?x948 0) (= ?x1309 0) (not (= (* ?x1179 ?x215 ?x215 ?x222 ?x222 ?x698) 0)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x406 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x481 (* (- 6) (* z z00))))
 (let ((?x433 (* z00 y00)))
 (let ((?x434 (* 18 ?x433)))
 (let ((?x407 (* z y00)))
 (let ((?x420 (* (- 12) ?x407)))
 (let ((?x376 (* y z)))
 (let ((?x377 (* (- 6) ?x376)))
 (let ((?x292 (* z00 z00)))
 (let ((?x1171 (* 12 ?x292)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x512 (* (- 108) x00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x385 (* (- 1) ?x55)))
 (let ((?x50 (* z z)))
 (let ((?x499 (* (- 6) ?x50)))
 (let ((?x962 (* (- 144) y00)))
 (let ((?x1043 (* (- 36) z00)))
 (let ((?x64 (* 108 x)))
 (let ((?x577 (+ ?x64 (* 144 y) (* 36 z) ?x1043 ?x962 ?x499 ?x385 ?x512 ?x76 ?x1171 ?x377 ?x420 ?x434 ?x481)))
 (let ((?x222 (+ x y)))
 (let ((?x215 (+ y z)))
 (let ((?x1179 (+ 1 n)))
 (let ((?x1228 (* x00 x00)))
 (let ((?x1229 (* 108 ?x1228)))
 (let ((?x1125 (* z00 z00 z00 x00)))
 (let ((?x1126 (* 2 ?x1125)))
 (let ((?x1122 (* z00 z00 z00 y00)))
 (let ((?x1019 (* z00 y00 x00)))
 (let ((?x1032 (* (- 36) ?x1019)))
 (let ((?x916 (* y00 y00 y00)))
 (let ((?x917 (* 16 ?x916)))
 (let ((?x831 (* z00 z00 x00)))
 (let ((?x1082 (* (- 18) ?x831)))
 (let ((?x787 (* (- 4) (* y y y))))
 (let ((?x737 (* 108 (* x x))))
 (let ((?x690 (* z00 z00 y00 y00)))
 (let ((?x705 (* (- 1) ?x690)))
 (let ((?x647 (* z00 z00 y00)))
 (let ((?x1183 (* (- 10) ?x647)))
 (let ((?x622 (* z00 y00 y00)))
 (let ((?x657 (* (- 12) ?x622)))
 (let ((?x527 (* y00 y00)))
 (let ((?x982 (* 96 ?x527)))
 (let ((?x501 (* y y)))
 (let ((?x732 (* 24 ?x501)))
 (let ((?x496 (* z00 x00)))
 (let ((?x390 (* 36 ?x496)))
 (let ((?x809 (* 24 ?x433)))
 (let ((?x382 (* y00 x00)))
 (let ((?x373 (* 216 ?x382)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1249 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x373 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x809 ?x390 ?x732 ?x982 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x657 ?x1183 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x705 ?x737 ?x787 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1082 (* (- 216) (* x y00)) ?x917 (* (- 12) (* y y y00)) ?x1032 (* (- 216) (* x x00)) ?x1122 ?x1126 (* 36 (* x z00 y00)) ?x1229)))
 (let (($x1254 (= ?x1249 0)))
 (let ((?x832 (* 3 ?x831)))
 (let ((?x894 (* 3 ?x647)))
 (let ((?x629 (* (- 1) ?x622)))
 (let ((?x559 (* 18 (* z x00))))
 (let ((?x814 (* (- 36) ?x527)))
 (let ((?x470 (* (- 18) (* x z))))
 (let ((?x721 (* (- 6) ?x433)))
 (let ((?x408 (* 12 ?x407)))
 (let ((?x383 (* (- 18) ?x382)))
 (let ((?x405 (* (- 12) ?x376)))
 (let ((?x135 (* y y z)))
 (let ((?x455 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x950 (+ ?x64 ?x71 ?x455 ?x512 (* (- 3) (* y z00 z00)) ?x135 ?x405 ?x383 (* (- 18) (* x y)) ?x408 ?x721 ?x470 ?x814 ?x559 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x629 ?x894 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x832 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x957 (= ?x950 0)))
 (let ((?x545 (* (- 24) ?x527)))
 (let ((?x502 (* 12 ?x501)))
 (let ((?x498 (* 18 ?x496)))
 (let ((?x562 (* 6 ?x433)))
 (let ((?x103 (* y z z00)))
 (let ((?x701 (+ ?x64 ?x71 ?x455 ?x512 ?x103 (* (- 1) (* y z00 z00)) ?x405 (* (- 1) (* z z00 y00)) ?x408 ?x562 ?x470 ?x498 ?x502 ?x545 ?x559 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x647 (* (- 18) (* x z00)))))
 (let (($x706 (= ?x701 0)))
 (let ((?x396 (* 6 ?x292)))
 (let (($x533 (= (+ ?x64 ?x71 ?x455 ?x385 ?x512 ?x76 ?x396 ?x377 ?x420 ?x434 ?x481) 0)))
 (let ((?x363 (* (- 12) y00)))
 (let ((?x362 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x366 (= (+ ?x45 ?x46 ?x362 ?x363 (* (- 1) ?x50) ?x292) 0)))
 (let (($x284 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x964 (and $x284 $x366 $x533 $x706 $x957 $x1254 (not (= (* ?x1179 ?x215 ?x215 ?x222 ?x222 ?x577) 0)))))
 (let ((?x1074 (* 72 z)))
 (let ((?x1097 (* 180 y)))
 (let ((?x840 (* y00 z00)))
 (let ((?x841 (* 18 ?x840)))
 (let ((?x698 (+ (* (- 6) (* (+ 6 z) ?x215)) ?x385 ?x396 (* (- 12) (* y00 (+ 6 z))) ?x841 ?x64 ?x1097 ?x455 (* (- 6) (* z00 (+ 6 z))) ?x1074 ?x512 (* z00 z00 (+ 6 z)))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1309 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x732 ?x737 ?x787 (* 18 (* y00 z00 y)) (* 24 ?x840) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x917 (* (- 6) (* z00 y y)) ?x982 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1229 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x482 (* 18 (* x00 z))))
 (let ((?x322 (* z y)))
 (let ((?x561 (* (- 12) ?x322)))
 (let ((?x979 (* y00 z)))
 (let ((?x877 (* 12 ?x979)))
 (let ((?x404 (* (- 18) (* z x))))
 (let ((?x948 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x404 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x877 (* (- 6) ?x840) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x561 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x814 ?x482 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x455 (* 18 (* y00 x)) ?x71 ?x512 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x593 (+ (* (- 1) (* y00 z00 z)) ?x561 ?x404 (* 18 (* x00 z00)) ?x502 ?x545 ?x482 ?x877 (* 6 ?x840) (* 12 (* y00 y)) ?x64 ?x455 (* (- 6) (* z00 y)) ?x71 ?x512 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x542 (+ (* (- 6) ?x322) ?x385 ?x396 (* (- 12) ?x979) ?x841 ?x64 ?x455 (* (- 6) (* z00 z)) ?x71 ?x512 (* z00 z00 z))))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1004 (* (- 1) ?x292)))
 (let (($x648 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1004 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x542 0) (= ?x593 0) (= ?x948 0) (= ?x1309 0) (not (= (* ?x1179 ?x215 ?x215 ?x222 ?x222 ?x698) 0)))))
 (rewrite (= $x648 $x964))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x239 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x215 (+ y z)))
 (let ((?x222 (+ x y)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x62 (* 18 y00 z00)))
 (let ((?x57 (* 6 z00 z00)))
 (let ((?x219 (+ (- (* (- 6) ?x215 (+ z 6)) (* z00 z00 z00)) ?x57)))
 (let ((?x226 (- (+ (- ?x219 (* 12 y00 (+ z 6))) ?x62 (* 108 ?x222)) ?x67)))
 (let ((?x230 (- (+ (- ?x226 (* 6 (+ z 6) z00)) (* 72 ?x215)) ?x74)))
 (let ((?x234 (* (+ ?x230 (* (+ z 6) z00 z00)) (+ n 1) ?x222 ?x222 ?x215 ?x215)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) (* z00 z00 z00)) ?x57) ?x59)))
 (let ((?x75 (- (+ (- (- (+ ?x60 ?x62 ?x64) ?x67) (* 6 z z00)) ?x71) ?x74)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ ?x75 ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x234 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x445 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x512 (* (- 108) x00)))
 (let ((?x1074 (* 72 z)))
 (let ((?x455 (* (- 72) y00)))
 (let ((?x1097 (* 180 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x840 (* y00 z00)))
 (let ((?x841 (* 18 ?x840)))
 (let ((?x292 (* z00 z00)))
 (let ((?x396 (* 6 ?x292)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x385 (* (- 1) ?x55)))
 (let ((?x698 (+ (* (- 6) (* (+ 6 z) (+ y z))) ?x385 ?x396 (* (- 12) (* y00 (+ 6 z))) ?x841 ?x64 ?x1097 ?x455 (* (- 6) (* z00 (+ 6 z))) ?x1074 ?x512 (* z00 z00 (+ 6 z)))))
 (let ((?x222 (+ x y)))
 (let ((?x215 (+ y z)))
 (let ((?x1179 (+ 1 n)))
 (let ((?x1228 (* x00 x00)))
 (let ((?x1229 (* 108 ?x1228)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x527 (* y00 y00)))
 (let ((?x982 (* 96 ?x527)))
 (let ((?x916 (* y00 y00 y00)))
 (let ((?x917 (* 16 ?x916)))
 (let ((?x787 (* (- 4) (* y y y))))
 (let ((?x737 (* 108 (* x x))))
 (let ((?x501 (* y y)))
 (let ((?x732 (* 24 ?x501)))
 (let ((?x1309 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x732 ?x737 ?x787 (* 18 (* y00 z00 y)) (* 24 ?x840) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x917 (* (- 6) (* z00 y y)) ?x982 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1229 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x71 (* 72 y)))
 (let ((?x482 (* 18 (* x00 z))))
 (let ((?x814 (* (- 36) ?x527)))
 (let ((?x322 (* z y)))
 (let ((?x561 (* (- 12) ?x322)))
 (let ((?x979 (* y00 z)))
 (let ((?x877 (* 12 ?x979)))
 (let ((?x404 (* (- 18) (* z x))))
 (let ((?x948 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x404 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x877 (* (- 6) ?x840) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x561 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x814 ?x482 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x455 (* 18 (* y00 x)) ?x71 ?x512 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x545 (* (- 24) ?x527)))
 (let ((?x502 (* 12 ?x501)))
 (let ((?x593 (+ (* (- 1) (* y00 z00 z)) ?x561 ?x404 (* 18 (* x00 z00)) ?x502 ?x545 ?x482 ?x877 (* 6 ?x840) (* 12 (* y00 y)) ?x64 ?x455 (* (- 6) (* z00 y)) ?x71 ?x512 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x542 (+ (* (- 6) ?x322) ?x385 ?x396 (* (- 12) ?x979) ?x841 ?x64 ?x455 (* (- 6) (* z00 z)) ?x71 ?x512 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1004 (* (- 1) ?x292)))
 (let (($x648 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1004 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x542 0) (= ?x593 0) (= ?x948 0) (= ?x1309 0) (not (= (* ?x1179 ?x215 ?x215 ?x222 ?x222 ?x698) 0)))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x62 (* 18 y00 z00)))
 (let ((?x57 (* 6 z00 z00)))
 (let ((?x221 (- (+ (- (* (- 6) ?x215 (+ z 6)) ?x55) ?x57) (* 12 y00 (+ z 6)))))
 (let ((?x227 (- (- (+ ?x221 ?x62 (* 108 ?x222)) ?x67) (* 6 (+ z 6) z00))))
 (let ((?x232 (+ (- (+ ?x227 (* 72 ?x215)) ?x74) (* (+ z 6) z00 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x69 (- (+ (- (+ (- (* (- 6) y z) ?x55) ?x57) ?x59) ?x62 ?x64) ?x67)))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x238 (and $x39 (= ?x51 0) (= (+ (- (+ (- ?x69 (* 6 z z00)) ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= (* ?x232 (+ n 1) ?x222 ?x222 ?x215 ?x215) 0))))))
 (rewrite (= $x238 $x648))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x240 (asserted $x239)))
 (let ((@x649 (mp (mp @x240 (quant-intro (proof-bind ?x445) (= $x239 $x339)) $x339) (rewrite (= $x339 $x339)) $x339)))
 (let ((@x981 (mp~ (mp @x649 (quant-intro (proof-bind ?x406) (= $x339 $x294)) $x294) (sk (~ $x294 $x796)) $x796)))
 (let ((@x557 (mp @x981 (rewrite (= $x796 $x938)) $x938)))
 (let ((@x955 (and-elim @x557 $x888)))
 (let ((@x310 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x888) $x838)) @x955 $x838)))
 (let (($x1266 (>= ?x786 0)))
 (let ((@x646 (and-elim @x557 $x1112)))
 (let ((@x430 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1112) $x1266)) @x646 $x1266)))
 (let (($x1274 (<= ?x954 0)))
 (let ((@x602 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x888) $x1274)) @x955 $x1274)))
 (let (($x1267 (<= ?x786 0)))
 (let ((@x1028 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1112) $x1267)) @x646 $x1267)))
 (let (($x249 (not (<= ?x951 0))))
 (let (($x575 (>= ?x951 0)))
 (let ((@x844 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x575)) @x1028 @x602 @x430 @x310 false) $x575)))
 (let ((@x370 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x883 $x249 (not $x575))) (and-elim @x557 $x952) (or $x249 (not $x575)))))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution @x370 @x844 $x249) @x1028 @x602 @x430 @x310 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        28
 :arith-assert-upper        11
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-fixed-eqs           2
 :arith-max-min             234
 :arith-nonlinear-bounds    16
 :arith-num-rows            10
 :arith-pivots              6
 :arith-pseudo-nonlinear    2
 :arith-row-summations      10
 :arith-tableau-max-columns 97
 :arith-tableau-max-rows    10
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              2
 :max-memory                19.83
 :memory                    19.23
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                592490
 :num-checks                1
 :propagations              14
 :rlimit-count              7849
 :time                      0.01
 :total-time                0.02)
