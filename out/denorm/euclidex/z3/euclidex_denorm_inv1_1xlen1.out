unsat
((set-logic NIA)
(declare-fun q!3 () Int)
(declare-fun r!1 () Int)
(declare-fun p!5 () Int)
(declare-fun s!0 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(proof
(let ((?x227 (* r!1 q!3)))
 (let ((?x41 (* q00 r00)))
 (let ((?x317 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x541 (+ ?x37 ?x317 (* (- 1) (* s!0 p!5)) ?x227)))
 (let (($x263 (>= ?x541 0)))
 (let (($x540 (= ?x541 0)))
 (let ((?x223 (* s!0 p!5)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x115 (+ ?x133 ?x41 ?x223 (* (- 1) ?x227))))
 (let ((?x178 (+ p!5 (* (- 1) q!3))))
 (let ((?x315 (+ a!4 (* (- 1) b!2))))
 (let ((?x590 (* ?x315 ?x315 ?x315 ?x178 ?x178 ?x178 ?x115 s!0 s!0 s!0 b!2 b!2 b!2 q!3)))
 (let (($x589 (= ?x590 0)))
 (let ((?x476 (+ (* (- 1) p!5) q!3)))
 (let ((?x337 (+ (* (- 1) a!4) b!2)))
 (let ((?x326 (+ (* (- 1) r!1) s!0)))
 (let ((?x451 (* ?x326 ?x326 ?x326 ?x337 ?x337 ?x337 ?x476 ?x115 a!4 a!4 a!4 p!5 p!5 p!5)))
 (let (($x563 (= ?x451 0)))
 (let (($x530 (not $x563)))
 (let (($x595 (or $x530 (not $x589))))
 (let ((?x511 (+ (* p00 b00 s!0) (* q00 r00 b!2) (* (- 1) (* q00 a00 s!0)) (* (- 1) (* p00 s00 b!2)) (* (- 1) (* r00 b00 q!3)) (* s00 a00 q!3))))
 (let ((?x572 (+ (* r00 b00 p!5) (* (- 1) (* q00 r00 a!4)) (* p00 s00 a!4) (* (- 1) (* p00 b00 r!1)) (* q00 a00 r!1) (* (- 1) (* s00 a00 p!5)))))
 (let ((?x228 (* p!5 b!2)))
 (let ((?x128 (* q00 a00)))
 (let (($x305 (= (+ ?x128 (* (- 1) (* p00 b00)) (* (- 1) (* a!4 q!3)) ?x228) 0)))
 (let ((?x124 (* s00 a00)))
 (let ((?x230 (+ ?x124 (* (- 1) (* s!0 a!4)) (* (- 1) (* r00 b00)) (* r!1 b!2))))
 (let (($x573 (and $x540 (= ?x230 0) $x305 (= ?x572 0) (= ?x511 0) $x595)))
 (let ((?x212 (+ (* p!5 s!0) ?x133 ?x41 (* (- 1) (* q!3 r!1)))))
 (let ((?x469 (* ?x315 ?x315 ?x315 ?x178 ?x178 ?x178 ?x212 s!0 s!0 s!0 b!2 b!2 b!2 q!3)))
 (let ((?x474 (* ?x326 ?x326 ?x326 ?x337 ?x337 ?x337 ?x476 ?x212 a!4 a!4 a!4 p!5 p!5 p!5)))
 (let ((?x322 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x130 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let (($x163 (= (+ (* a!4 q!3) (* (- 1) ?x128) (* p00 b00) (* (- 1) ?x228)) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let (($x113 (and (= ?x212 0) (= (+ (* a!4 s!0) (* (- 1) (* b!2 r!1)) ?x131 ?x142) 0) $x163 (= ?x130 0) (= ?x322 0) (or (not (= ?x474 0)) (not (= ?x469 0))))))
 (let (($x177 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x117 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x147 (+ ?x33 ?x133 ?x41 ?x117)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x562 (* ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x147 s s s b b b q)))
 (let ((?x248 (* (- 1) p)))
 (let ((?x255 (+ ?x248 q)))
 (let ((?x445 (* (- 1) a)))
 (let ((?x441 (+ ?x445 b)))
 (let ((?x308 (* (- 1) r)))
 (let ((?x316 (+ ?x308 s)))
 (let ((?x524 (* ?x316 ?x316 ?x316 ?x441 ?x441 ?x441 ?x255 ?x147 a a a p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x304 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x309 (= ?x304 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x240 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x241 (= ?x240 0)))
 (let ((?x129 (* p00 b00)))
 (let ((?x128 (* q00 a00)))
 (let ((?x172 (* (- 1) ?x128)))
 (let (($x175 (= (+ (* a q) ?x172 ?x129 (* (- 1) (* p b))) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let (($x152 (= ?x147 0)))
 (and $x152 $x157 $x175 $x241 $x309 (or (not (= ?x524 0)) (not (= ?x562 0)))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x195 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x213 (* ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x310 s s s b b b q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x248 (* (- 1) p)))
 (let ((?x112 (+ q ?x248)))
 (let ((?x445 (* (- 1) a)))
 (let ((?x232 (+ b ?x445)))
 (let ((?x308 (* (- 1) r)))
 (let ((?x290 (+ s ?x308)))
 (let ((?x122 (* ?x290 ?x290 ?x290 ?x232 ?x232 ?x232 ?x112 ?x221 a a a p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x201 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x208 (= ?x201 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x341 (* p00 s00 a)))
 (let ((?x280 (* b00 r00 p)))
 (let ((?x138 (+ ?x280 ?x341 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x482 (* q a)))
 (let (($x293 (= (+ ?x482 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x344 (* r b)))
 (let (($x432 (= (+ ?x344 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x220 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (and $x220 $x432 $x293 (= ?x138 0) $x208 $x182))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x179 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x117 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x147 (+ ?x33 ?x133 ?x41 ?x117)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x562 (* ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x147 s s s b b b q)))
 (let ((?x248 (* (- 1) p)))
 (let ((?x255 (+ ?x248 q)))
 (let ((?x445 (* (- 1) a)))
 (let ((?x441 (+ ?x445 b)))
 (let ((?x308 (* (- 1) r)))
 (let ((?x316 (+ ?x308 s)))
 (let ((?x524 (* ?x316 ?x316 ?x316 ?x441 ?x441 ?x441 ?x255 ?x147 a a a p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x304 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x309 (= ?x304 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x240 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x241 (= ?x240 0)))
 (let ((?x129 (* p00 b00)))
 (let ((?x128 (* q00 a00)))
 (let ((?x172 (* (- 1) ?x128)))
 (let (($x175 (= (+ (* a q) ?x172 ?x129 (* (- 1) (* p b))) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let (($x152 (= ?x147 0)))
 (let (($x579 (and $x152 $x157 $x175 $x241 $x309 (or (not (= ?x524 0)) (not (= ?x562 0))))))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* ?x269 s) ?x133 ?x41)))
 (let ((?x213 (* ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x310 s s s b b b q)))
 (let ((?x221 (+ (* (- 1) (* (+ q ?x248) r)) (* (+ s ?x308) p) ?x133 ?x41)))
 (let ((?x112 (+ q ?x248)))
 (let ((?x232 (+ b ?x445)))
 (let ((?x290 (+ s ?x308)))
 (let ((?x122 (* ?x290 ?x290 ?x290 ?x232 ?x232 ?x232 ?x112 ?x221 a a a p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x201 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x208 (= ?x201 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x341 (* p00 s00 a)))
 (let ((?x280 (* b00 r00 p)))
 (let ((?x138 (+ ?x280 ?x341 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x482 (* q a)))
 (let (($x293 (= (+ ?x482 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x344 (* r b)))
 (let (($x432 (= (+ ?x344 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x220 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x216 (and $x220 $x432 $x293 (= ?x138 0) $x208 $x182)))
 (rewrite (= $x216 $x579)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x234 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x213 (* ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x310 s s s b b b q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x248 (* (- 1) p)))
 (let ((?x112 (+ q ?x248)))
 (let ((?x445 (* (- 1) a)))
 (let ((?x232 (+ b ?x445)))
 (let ((?x308 (* (- 1) r)))
 (let ((?x290 (+ s ?x308)))
 (let ((?x122 (* ?x290 ?x290 ?x290 ?x232 ?x232 ?x232 ?x112 ?x221 a a a p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x201 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x208 (= ?x201 0)))
 (let ((?x251 (* a00 s00 p)))
 (let ((?x311 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x146 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x311 ?x251 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x121 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x273 (* s a)))
 (let (($x302 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x273 ?x51) 0)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) $x302 $x121 (= ?x146 0) $x208 $x182)))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x196 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x213 (* ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x310 s s s b b b q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x248 (* (- 1) p)))
 (let ((?x112 (+ q ?x248)))
 (let ((?x445 (* (- 1) a)))
 (let ((?x232 (+ b ?x445)))
 (let ((?x308 (* (- 1) r)))
 (let ((?x290 (+ s ?x308)))
 (let ((?x122 (* ?x290 ?x290 ?x290 ?x232 ?x232 ?x232 ?x112 ?x221 a a a p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x201 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x208 (= ?x201 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x341 (* p00 s00 a)))
 (let ((?x280 (* b00 r00 p)))
 (let ((?x138 (+ ?x280 ?x341 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x482 (* q a)))
 (let (($x293 (= (+ ?x482 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x344 (* r b)))
 (let (($x432 (= (+ ?x344 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x220 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x216 (and $x220 $x432 $x293 (= ?x138 0) $x208 $x182)))
 (let ((?x251 (* a00 s00 p)))
 (let ((?x311 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x254 (= (+ (* (- 1) ?x280) (* (- 1) ?x341) ?x65 ?x311 ?x251 (* (- 1) ?x69)) 0)))
 (let (($x121 (= (+ (* (- 1) ?x482) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x302 (= (+ (* (- 1) ?x344) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x267 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) $x302 $x121 $x254 $x208 $x182)))
 (rewrite (= $x267 $x216)))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x97 (- s r)))
 (let ((?x95 (- q p)))
 (let ((?x102 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x41 (* q00 r00)))
 (let ((?x103 (* (+ (- (+ (* ?x31 ?x95 r) (* p ?x97)) (* p00 s00)) ?x41) ?x31 a a a ?x102 ?x102 ?x102 p p p ?x95 ?x97 ?x97 ?x97)))
 (let ((?x86 (- p q)))
 (let ((?x91 (- a b)))
 (let ((?x90 (+ (- (+ (* ?x31 q (- r s)) (* ?x86 s)) (* p00 s00)) ?x41)))
 (let ((?x92 (* ?x90 ?x31 ?x91 ?x91 ?x91 b b b ?x86 ?x86 ?x86 q s s s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x236 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x213 (* ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x310 s s s b b b q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x248 (* (- 1) p)))
 (let ((?x112 (+ q ?x248)))
 (let ((?x445 (* (- 1) a)))
 (let ((?x232 (+ b ?x445)))
 (let ((?x308 (* (- 1) r)))
 (let ((?x290 (+ s ?x308)))
 (let ((?x122 (* ?x290 ?x290 ?x290 ?x232 ?x232 ?x232 ?x112 ?x221 a a a p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x201 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x208 (= ?x201 0)))
 (let ((?x251 (* a00 s00 p)))
 (let ((?x311 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x146 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x311 ?x251 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x121 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x273 (* s a)))
 (let (($x302 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x273 ?x51) 0)))
 (let (($x267 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) $x302 $x121 (= ?x146 0) $x208 $x182)))
 (let ((?x97 (- s r)))
 (let ((?x95 (- q p)))
 (let ((?x102 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x103 (* (+ (- (+ (* ?x31 ?x95 r) (* p ?x97)) ?x37) ?x41) ?x31 a a a ?x102 ?x102 ?x102 p p p ?x95 ?x97 ?x97 ?x97)))
 (let ((?x86 (- p q)))
 (let ((?x91 (- a b)))
 (let ((?x92 (* (+ (- (+ (* ?x31 q (- r s)) (* ?x86 s)) ?x37) ?x41) ?x31 ?x91 ?x91 ?x91 b b b ?x86 ?x86 ?x86 q s s s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x107 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0))))))
 (rewrite (= $x107 $x267)))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x132 (mp (mp @x109 (quant-intro (proof-bind ?x236) (= $x108 $x234)) $x234) (rewrite (= $x234 $x234)) $x234)))
 (let ((@x135 (mp (mp @x132 (quant-intro (proof-bind ?x196) (= $x234 $x195)) $x195) (quant-intro (proof-bind ?x179) (= $x195 $x177)) $x177)))
 (let ((@x591 (mp (mp~ @x135 (sk (~ $x177 $x113)) $x113) (rewrite (= $x113 $x573)) $x573)))
 (let ((@x587 (and-elim @x591 $x540)))
 (let ((@x185 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x540) $x263)) @x587 $x263)))
 (let (($x126 (<= ?x541 0)))
 (let ((@x205 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x540) $x126)) @x587 $x126)))
 (let (($x517 (not (<= ?x451 0))))
 (let (($x505 (>= ?x590 0)))
 (let (($x578 (<= ?x590 0)))
 (let ((@x512 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x589 (not $x578) (not $x505))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x578)) @x205 @x185 false) $x578) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x505)) @x205 @x185 false) $x505) $x589)))
 (let (($x529 (>= ?x451 0)))
 (let ((@x509 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x563 $x517 (not $x529))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x529)) @x205 @x185 false) $x529) (unit-resolution (and-elim @x591 $x595) @x512 $x530) $x517)))
 ((_ th-lemma arith farkas 1 1 1) @x509 @x205 @x185 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             344
 :arith-nonlinear-horner    38
 :arith-num-rows            11
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 50
 :arith-tableau-max-rows    11
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                3.61
 :memory                    3.11
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                1252230
 :num-checks                1
 :propagations              19
 :rlimit-count              8479
 :time                      0.01
 :total-time                0.02)
