unsat
((set-logic NIA)
(declare-fun y!2 () Int)
(declare-fun v!4 () Int)
(declare-fun x!3 () Int)
(declare-fun u!5 () Int)
(declare-fun k!10 () Int)
(declare-fun k!00 () Int)
(proof
(let ((?x1385 (+ k!00 k!10 (* (- 1) (* u!5 x!3)) (* (- 1) (* v!4 y!2)))))
 (let (($x1480 (>= ?x1385 0)))
 (let (($x1464 (= ?x1385 0)))
 (let ((?x1141 (* v!4 y!2)))
 (let ((?x1140 (* u!5 x!3)))
 (let ((?x527 (* (- 1) k!10)))
 (let ((?x505 (* (- 1) k!00)))
 (let ((?x1457 (+ ?x505 ?x527 ?x1140 ?x1141)))
 (let ((?x1651 (* (- 1) (* v!4 v!4 v!4 x!3 x!3 x!3))))
 (let ((?x1542 (* (- 1) (* v!4 v!4 v!4 u!5 u!5 y!2 y!2 y!2))))
 (let ((?x1541 (* (- 1) (* u!5 u!5 u!5 y!2 y!2 x!3))))
 (let ((?x1395 (* v!4 v!4 v!4 v!4 v!4 x!3 x!3 x!3)))
 (let ((?x1247 (* (- 1) (* v!4 v!4 v!4 v!4 v!4 y!2 y!2 y!2))))
 (let ((?x266 (* (- 1) (* u!5 u!5 u!5 x!3 x!3 x!3))))
 (let ((?x1610 (+ ?x266 ?x1247 ?x1395 ?x1541 (* (- 3) (* v!4 v!4 u!5 x!3 x!3 x!3)) (* (- 2) (* v!4 v!4 v!4 v!4 u!5 y!2 y!2 y!2)) (* (- 3) (* v!4 u!5 u!5 y!2 y!2 x!3)) (* (- 3) (* v!4 v!4 u!5 y!2 y!2 x!3)) ?x1542 (* (- 1) (* v!4 v!4 v!4 y!2 y!2 x!3)) (* (- 6) (* v!4 v!4 v!4 v!4 u!5 y!2 x!3 x!3)) (* (- 3) (* v!4 v!4 v!4 u!5 u!5 y!2 x!3 x!3)) (* 2 (* v!4 v!4 v!4 v!4 u!5 x!3 x!3 x!3)) (* v!4 v!4 v!4 u!5 u!5 x!3 x!3 x!3) (* 2 (* v!4 v!4 v!4 y!2 x!3 x!3)) (* 6 (* v!4 u!5 u!5 y!2 x!3 x!3)) (* 6 (* v!4 v!4 u!5 y!2 x!3 x!3)) (* 2 (* u!5 u!5 u!5 y!2 x!3 x!3)) (* (- 3) (* v!4 u!5 u!5 x!3 x!3 x!3)) (* (- 3) (* v!4 v!4 v!4 v!4 v!4 y!2 x!3 x!3)) (* 6 (* v!4 v!4 v!4 v!4 u!5 y!2 y!2 x!3)) (* 3 (* v!4 v!4 v!4 u!5 u!5 y!2 y!2 x!3)) (* 3 (* v!4 v!4 v!4 v!4 v!4 y!2 y!2 x!3)) ?x1651)))
 (let ((?x1502 (* v!4 v!4 v!4 u!5 x!3)))
 (let ((?x1471 (* v!4 u!5 y!2 y!2 y!2 x!3 x!3 x!3)))
 (let ((?x1309 (* v!4 v!4 v!4 v!4 x!3)))
 (let ((?x731 (* (- 1) (* v!4 v!4 x!3 x!3 x!3 x!3 x!3 x!3))))
 (let ((?x1522 (+ ?x731 ?x1309 (* 3 (* v!4 u!5 y!2 x!3 x!3 x!3 x!3 x!3)) ?x1471 (* 3 (* v!4 v!4 y!2 x!3 x!3 x!3 x!3 x!3)) (* (- 3) (* v!4 u!5 y!2 y!2 x!3 x!3 x!3 x!3)) (* (- 3) (* v!4 v!4 y!2 y!2 x!3 x!3 x!3 x!3)) ?x1502 (* v!4 v!4 y!2 y!2 y!2 x!3 x!3 x!3) (* (- 1) (* v!4 u!5 x!3 x!3 x!3 x!3 x!3 x!3)))))
 (let ((?x1468 (* y!2 y!2 x!3 x!3)))
 (let ((?x1425 (* (+ ?x1468 (* (- 1) (* y!2 x!3 x!3 x!3))) ?x1522 ?x1610 ?x1457)))
 (let (($x1479 (= ?x1425 0)))
 (let (($x1614 (not $x1479)))
 (let ((?x1301 (* (- 1) (* u!5 u!5 u!5 u!5 u!5 y!2 y!2 y!2))))
 (let ((?x982 (* u!5 u!5 u!5 y!2 y!2 y!2)))
 (let ((?x1548 (+ ?x982 ?x1301 ?x1541 (* (- 3) (* v!4 u!5 u!5 u!5 u!5 y!2 y!2 y!2)) (* (- 3) (* v!4 v!4 u!5 u!5 u!5 y!2 y!2 y!2)) ?x1542)))
 (let ((?x959 (* u!5 u!5 u!5 u!5 x!3)))
 (let ((?x967 (* (- 1) (* u!5 u!5 u!5 u!5 y!2))))
 (let ((?x936 (* (- 1) (* u!5 u!5 y!2 y!2 y!2 y!2 y!2 y!2))))
 (let ((?x1407 (+ ?x936 ?x967 ?x959 (* (- 1) (* v!4 u!5 y!2 y!2 y!2 y!2 y!2 y!2)) (* u!5 u!5 y!2 y!2 y!2 x!3 x!3 x!3) (* (- 3) (* u!5 u!5 y!2 y!2 y!2 y!2 x!3 x!3)) ?x1471 (* (- 3) (* v!4 u!5 y!2 y!2 y!2 y!2 x!3 x!3)) (* 3 (* u!5 u!5 y!2 y!2 y!2 y!2 y!2 x!3)) (* 3 (* v!4 u!5 y!2 y!2 y!2 y!2 y!2 x!3)) (* 3 (* v!4 u!5 u!5 u!5 x!3)) (* 3 (* v!4 v!4 u!5 u!5 x!3)) ?x1502 (* (- 3) (* v!4 u!5 u!5 u!5 y!2)) (* (- 3) (* v!4 v!4 u!5 u!5 y!2)) (* (- 1) (* v!4 v!4 v!4 u!5 y!2)))))
 (let ((?x1476 (* y!2 x!3 x!3 x!3)))
 (let ((?x1549 (* (+ (* (- 2) ?x1468) (* y!2 y!2 y!2 x!3) ?x1476) ?x1407 ?x1548 ?x1457)))
 (let (($x1530 (= ?x1549 0)))
 (let (($x1586 (or (not $x1530) $x1614)))
 (let (($x1575 (and $x1464 $x1586)))
 (let ((?x1143 (+ ?x1140 ?x1141 ?x505 ?x527)))
 (let ((?x1284 (* (- 1) (* u!5 u!5 u!5 x!3 y!2 y!2))))
 (let ((?x1219 (* (- 1) (* u!5 u!5 v!4 v!4 v!4 y!2 y!2 y!2))))
 (let ((?x1450 (+ ?x1219 ?x1284 ?x1247 (* (- 2) (* u!5 v!4 v!4 v!4 v!4 y!2 y!2 y!2)) (* (- 3) (* u!5 u!5 v!4 x!3 y!2 y!2)) (* (- 3) (* u!5 v!4 v!4 x!3 y!2 y!2)) (* (- 1) (* v!4 v!4 v!4 x!3 y!2 y!2)) ?x266 (* (- 3) (* u!5 u!5 v!4 x!3 x!3 x!3)) (* (- 3) (* u!5 v!4 v!4 x!3 x!3 x!3)) ?x1651 (* 2 (* u!5 u!5 u!5 x!3 x!3 y!2)) (* 6 (* u!5 u!5 v!4 x!3 x!3 y!2)) (* 6 (* u!5 v!4 v!4 x!3 x!3 y!2)) (* 2 (* v!4 v!4 v!4 x!3 x!3 y!2)) (* u!5 u!5 v!4 v!4 v!4 x!3 x!3 x!3) (* 2 (* u!5 v!4 v!4 v!4 v!4 x!3 x!3 x!3)) ?x1395 (* (- 3) (* u!5 u!5 v!4 v!4 v!4 x!3 x!3 y!2)) (* (- 6) (* u!5 v!4 v!4 v!4 v!4 x!3 x!3 y!2)) (* (- 3) (* v!4 v!4 v!4 v!4 v!4 x!3 x!3 y!2)) (* 3 (* u!5 u!5 v!4 v!4 v!4 x!3 y!2 y!2)) (* 6 (* u!5 v!4 v!4 v!4 v!4 x!3 y!2 y!2)) (* 3 (* v!4 v!4 v!4 v!4 v!4 x!3 y!2 y!2)))))
 (let ((?x964 (* u!5 v!4 v!4 v!4 x!3)))
 (let ((?x1669 (* u!5 v!4 x!3 x!3 x!3 y!2 y!2 y!2)))
 (let ((?x1314 (+ ?x1669 ?x964 (* v!4 v!4 x!3 x!3 x!3 y!2 y!2 y!2) (* (- 1) (* u!5 v!4 x!3 x!3 x!3 x!3 x!3 x!3)) ?x731 (* 3 (* u!5 v!4 x!3 x!3 x!3 x!3 x!3 y!2)) (* 3 (* v!4 v!4 x!3 x!3 x!3 x!3 x!3 y!2)) (* (- 3) (* u!5 v!4 x!3 x!3 x!3 x!3 y!2 y!2)) (* (- 3) (* v!4 v!4 x!3 x!3 x!3 x!3 y!2 y!2)) ?x1309)))
 (let ((?x1652 (* x!3 x!3 y!2 y!2)))
 (let (($x1452 (= (* (+ ?x1652 (* (- 1) (* x!3 x!3 x!3 y!2))) ?x1314 ?x1450 ?x1143) 0)))
 (let ((?x411 (+ ?x1301 (* (- 3) (* u!5 u!5 u!5 u!5 v!4 y!2 y!2 y!2)) (* (- 3) (* u!5 u!5 u!5 v!4 v!4 y!2 y!2 y!2)) ?x1219 ?x1284 ?x982)))
 (let ((?x257 (+ (* u!5 u!5 x!3 x!3 x!3 y!2 y!2 y!2) ?x1669 (* (- 3) (* u!5 u!5 x!3 x!3 y!2 y!2 y!2 y!2)) (* (- 3) (* u!5 v!4 x!3 x!3 y!2 y!2 y!2 y!2)) (* 3 (* u!5 u!5 x!3 y!2 y!2 y!2 y!2 y!2)) (* 3 (* u!5 v!4 x!3 y!2 y!2 y!2 y!2 y!2)) ?x936 (* (- 1) (* u!5 v!4 y!2 y!2 y!2 y!2 y!2 y!2)) ?x959 (* 3 (* u!5 u!5 u!5 v!4 x!3)) (* 3 (* u!5 u!5 v!4 v!4 x!3)) ?x964 ?x967 (* (- 3) (* u!5 u!5 u!5 v!4 y!2)) (* (- 3) (* u!5 u!5 v!4 v!4 y!2)) (* (- 1) (* u!5 v!4 v!4 v!4 y!2)))))
 (let ((?x1676 (* x!3 x!3 x!3 y!2)))
 (let ((?x412 (* (+ (* (- 2) ?x1652) (* x!3 y!2 y!2 y!2) ?x1676) ?x257 ?x411 ?x1143)))
 (let (($x1454 (and (= ?x1143 0) (or (not (= ?x412 0)) (not $x1452)))))
 (let (($x950 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x527 (* (- 1) k!10)))
 (let ((?x505 (* (- 1) k!00)))
 (let ((?x34 (* v y)))
 (let ((?x33 (* u x)))
 (let ((?x806 (+ ?x33 ?x34 ?x505 ?x527)))
 (let ((?x836 (* 2 (* v v v x x y))))
 (let ((?x833 (* 6 (* u v v x x y))))
 (let ((?x830 (* 6 (* u u v x x y))))
 (let ((?x826 (* 2 (* u u u x x y))))
 (let ((?x805 (* (- 1) (* v v v x x x))))
 (let ((?x822 (* (- 3) (* u v v x x x))))
 (let ((?x819 (* (- 3) (* u u v x x x))))
 (let ((?x802 (* (- 1) (* u u u x x x))))
 (let ((?x801 (* (- 1) (* v v v x y y))))
 (let ((?x816 (* (- 3) (* u v v x y y))))
 (let ((?x813 (* (- 3) (* u u v x y y))))
 (let ((?x585 (* (- 1) (* v v v v v y y y))))
 (let ((?x204 (* (- 1) (* u u u x y y))))
 (let ((?x172 (* (- 1) (* u u v v v y y y))))
 (let ((?x1659 (+ ?x172 ?x204 ?x585 (* (- 2) (* u v v v v y y y)) ?x813 ?x816 ?x801 ?x802 ?x819 ?x822 ?x805 ?x826 ?x830 ?x833 ?x836 (* u u v v v x x x) (* 2 (* u v v v v x x x)) (* v v v v v x x x) (* (- 3) (* u u v v v x x y)) (* (- 6) (* u v v v v x x y)) (* (- 3) (* v v v v v x x y)) (* 3 (* u u v v v x y y)) (* 6 (* u v v v v x y y)) (* 3 (* v v v v v x y y)))))
 (let ((?x458 (* u v v v x)))
 (let ((?x332 (* u v x x x y y y)))
 (let ((?x1030 (+ ?x332 ?x458 (* v v x x x y y y) (* (- 1) (* u v x x x x x x)) (* (- 1) (* v v x x x x x x)) (* 3 (* u v x x x x x y)) (* 3 (* v v x x x x x y)) (* (- 3) (* u v x x x x y y)) (* (- 3) (* v v x x x x y y)) (* v v v v x))))
 (let ((?x227 (* x x y y)))
 (let ((?x899 (+ ?x227 (* (- 1) (* x x x y)))))
 (let ((?x188 (* u u u y y y)))
 (let ((?x158 (* (- 1) (* u u u u u y y y))))
 (let ((?x555 (+ ?x158 (* (- 3) (* u u u u v y y y)) (* (- 3) (* u u u v v y y y)) ?x172 ?x204 ?x188)))
 (let ((?x545 (+ (* u u x x x y y y) ?x332 (* (- 3) (* u u x x y y y y)) (* (- 3) (* u v x x y y y y)) (* 3 (* u u x y y y y y)) (* 3 (* u v x y y y y y)) (* (- 1) (* u u y y y y y y)) (* (- 1) (* u v y y y y y y)) (* u u u u x) (* 3 (* u u u v x)) (* 3 (* u u v v x)) ?x458 (* (- 1) (* u u u u y)) (* (- 3) (* u u u v y)) (* (- 3) (* u u v v y)) (* (- 1) (* u v v v y)))))
 (let ((?x260 (* x x x y)))
 (let ((?x323 (+ (* (- 2) ?x227) (* x y y y) ?x260)))
 (let (($x1688 (or (not (= (* ?x323 ?x545 ?x555 ?x806) 0)) (not (= (* ?x899 ?x1030 ?x1659 ?x806) 0)))))
 (and (= ?x806 0) $x1688))))))))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x461 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x527 (* (- 1) k!10)))
 (let ((?x351 (* (- 1) x)))
 (let ((?x463 (+ y ?x351)))
 (let ((?x454 (* ?x463 v)))
 (let ((?x60 (+ u v)))
 (let ((?x61 (* ?x60 x)))
 (let ((?x505 (* (- 1) k!00)))
 (let ((?x464 (+ (* (- 1) (* ?x60 ?x60 ?x463 ?x463 ?x463 v v v)) (* (- 1) (* ?x60 ?x60 ?x60 ?x463 ?x463 x)))))
 (let ((?x273 (+ (* ?x60 ?x463 ?x463 ?x463 x x x v) (* ?x60 x v v v))))
 (let ((?x776 (+ (* ?x463 ?x463 x x) (* ?x463 x x x))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x106 (+ x (* (- 1) y))))
 (let ((?x849 (* ?x106 u)))
 (let ((?x504 (+ (* (- 1) (* ?x44 ?x44 ?x44 y y y u u)) (* (- 1) (* ?x106 y y u u u)))))
 (let ((?x529 (+ (* ?x44 ?x106 ?x106 ?x106 y y y u) (* ?x44 ?x44 ?x44 ?x106 u))))
 (let ((?x514 (+ (* ?x106 ?x106 y y) (* ?x106 ?x106 ?x106 y))))
 (let (($x519 (or (not (= (* ?x514 ?x529 ?x504 (+ ?x505 ?x849 ?x45 ?x527)) 0)) (not (= (* ?x776 ?x273 ?x464 (+ ?x505 ?x61 ?x454 ?x527)) 0)))))
 (and (= (+ ?x505 (* x u) (* y v) ?x527) 0) $x519))))))))))))))))))) :qid k!29))
 ))
 (let ((?x598 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x527 (* (- 1) k!10)))
 (let ((?x505 (* (- 1) k!00)))
 (let ((?x34 (* v y)))
 (let ((?x33 (* u x)))
 (let ((?x806 (+ ?x33 ?x34 ?x505 ?x527)))
 (let ((?x836 (* 2 (* v v v x x y))))
 (let ((?x833 (* 6 (* u v v x x y))))
 (let ((?x830 (* 6 (* u u v x x y))))
 (let ((?x826 (* 2 (* u u u x x y))))
 (let ((?x805 (* (- 1) (* v v v x x x))))
 (let ((?x822 (* (- 3) (* u v v x x x))))
 (let ((?x819 (* (- 3) (* u u v x x x))))
 (let ((?x802 (* (- 1) (* u u u x x x))))
 (let ((?x801 (* (- 1) (* v v v x y y))))
 (let ((?x816 (* (- 3) (* u v v x y y))))
 (let ((?x813 (* (- 3) (* u u v x y y))))
 (let ((?x585 (* (- 1) (* v v v v v y y y))))
 (let ((?x204 (* (- 1) (* u u u x y y))))
 (let ((?x172 (* (- 1) (* u u v v v y y y))))
 (let ((?x1659 (+ ?x172 ?x204 ?x585 (* (- 2) (* u v v v v y y y)) ?x813 ?x816 ?x801 ?x802 ?x819 ?x822 ?x805 ?x826 ?x830 ?x833 ?x836 (* u u v v v x x x) (* 2 (* u v v v v x x x)) (* v v v v v x x x) (* (- 3) (* u u v v v x x y)) (* (- 6) (* u v v v v x x y)) (* (- 3) (* v v v v v x x y)) (* 3 (* u u v v v x y y)) (* 6 (* u v v v v x y y)) (* 3 (* v v v v v x y y)))))
 (let ((?x458 (* u v v v x)))
 (let ((?x332 (* u v x x x y y y)))
 (let ((?x1030 (+ ?x332 ?x458 (* v v x x x y y y) (* (- 1) (* u v x x x x x x)) (* (- 1) (* v v x x x x x x)) (* 3 (* u v x x x x x y)) (* 3 (* v v x x x x x y)) (* (- 3) (* u v x x x x y y)) (* (- 3) (* v v x x x x y y)) (* v v v v x))))
 (let ((?x227 (* x x y y)))
 (let ((?x899 (+ ?x227 (* (- 1) (* x x x y)))))
 (let ((?x188 (* u u u y y y)))
 (let ((?x158 (* (- 1) (* u u u u u y y y))))
 (let ((?x555 (+ ?x158 (* (- 3) (* u u u u v y y y)) (* (- 3) (* u u u v v y y y)) ?x172 ?x204 ?x188)))
 (let ((?x545 (+ (* u u x x x y y y) ?x332 (* (- 3) (* u u x x y y y y)) (* (- 3) (* u v x x y y y y)) (* 3 (* u u x y y y y y)) (* 3 (* u v x y y y y y)) (* (- 1) (* u u y y y y y y)) (* (- 1) (* u v y y y y y y)) (* u u u u x) (* 3 (* u u u v x)) (* 3 (* u u v v x)) ?x458 (* (- 1) (* u u u u y)) (* (- 3) (* u u u v y)) (* (- 3) (* u u v v y)) (* (- 1) (* u v v v y)))))
 (let ((?x260 (* x x x y)))
 (let ((?x323 (+ (* (- 2) ?x227) (* x y y y) ?x260)))
 (let (($x1688 (or (not (= (* ?x323 ?x545 ?x555 ?x806) 0)) (not (= (* ?x899 ?x1030 ?x1659 ?x806) 0)))))
 (let (($x1736 (and (= ?x806 0) $x1688)))
 (let ((?x351 (* (- 1) x)))
 (let ((?x463 (+ y ?x351)))
 (let ((?x454 (* ?x463 v)))
 (let ((?x60 (+ u v)))
 (let ((?x61 (* ?x60 x)))
 (let ((?x464 (+ (* (- 1) (* ?x60 ?x60 ?x463 ?x463 ?x463 v v v)) (* (- 1) (* ?x60 ?x60 ?x60 ?x463 ?x463 x)))))
 (let ((?x273 (+ (* ?x60 ?x463 ?x463 ?x463 x x x v) (* ?x60 x v v v))))
 (let ((?x776 (+ (* ?x463 ?x463 x x) (* ?x463 x x x))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x106 (+ x (* (- 1) y))))
 (let ((?x849 (* ?x106 u)))
 (let ((?x504 (+ (* (- 1) (* ?x44 ?x44 ?x44 y y y u u)) (* (- 1) (* ?x106 y y u u u)))))
 (let ((?x529 (+ (* ?x44 ?x106 ?x106 ?x106 y y y u) (* ?x44 ?x44 ?x44 ?x106 u))))
 (let ((?x514 (+ (* ?x106 ?x106 y y) (* ?x106 ?x106 ?x106 y))))
 (let (($x519 (or (not (= (* ?x514 ?x529 ?x504 (+ ?x505 ?x849 ?x45 ?x527)) 0)) (not (= (* ?x776 ?x273 ?x464 (+ ?x505 ?x61 ?x454 ?x527)) 0)))))
 (let (($x490 (and (= (+ ?x505 (* x u) (* y v) ?x527) 0) $x519)))
 (rewrite (= $x490 $x1736)))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x479 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x38 (* v00 y00)))
 (let ((?x105 (* (- 1) ?x38)))
 (let ((?x351 (* (- 1) x)))
 (let ((?x463 (+ y ?x351)))
 (let ((?x454 (* ?x463 v)))
 (let ((?x60 (+ u v)))
 (let ((?x61 (* ?x60 x)))
 (let ((?x89 (* (- 1) (* u00 x00))))
 (let ((?x464 (+ (* (- 1) (* ?x60 ?x60 ?x463 ?x463 ?x463 v v v)) (* (- 1) (* ?x60 ?x60 ?x60 ?x463 ?x463 x)))))
 (let ((?x273 (+ (* ?x60 ?x463 ?x463 ?x463 x x x v) (* ?x60 x v v v))))
 (let ((?x776 (+ (* ?x463 ?x463 x x) (* ?x463 x x x))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x106 (+ x (* (- 1) y))))
 (let ((?x849 (* ?x106 u)))
 (let ((?x504 (+ (* (- 1) (* ?x44 ?x44 ?x44 y y y u u)) (* (- 1) (* ?x106 y y u u u)))))
 (let ((?x529 (+ (* ?x44 ?x106 ?x106 ?x106 y y y u) (* ?x44 ?x44 ?x44 ?x106 u))))
 (let ((?x514 (+ (* ?x106 ?x106 y y) (* ?x106 ?x106 ?x106 y))))
 (let (($x284 (or (not (= (* ?x514 ?x529 ?x504 (+ ?x89 ?x849 ?x45 ?x105)) 0)) (not (= (* ?x776 ?x273 ?x464 (+ ?x89 ?x61 ?x454 ?x105)) 0)))))
 (and (= (+ ?x89 (* x u) (* y v) ?x105) 0) $x284)))))))))))))))))))) :qid k!29))
 ))
 (let ((?x686 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x527 (* (- 1) k!10)))
 (let ((?x351 (* (- 1) x)))
 (let ((?x463 (+ y ?x351)))
 (let ((?x454 (* ?x463 v)))
 (let ((?x60 (+ u v)))
 (let ((?x61 (* ?x60 x)))
 (let ((?x505 (* (- 1) k!00)))
 (let ((?x464 (+ (* (- 1) (* ?x60 ?x60 ?x463 ?x463 ?x463 v v v)) (* (- 1) (* ?x60 ?x60 ?x60 ?x463 ?x463 x)))))
 (let ((?x273 (+ (* ?x60 ?x463 ?x463 ?x463 x x x v) (* ?x60 x v v v))))
 (let ((?x776 (+ (* ?x463 ?x463 x x) (* ?x463 x x x))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x106 (+ x (* (- 1) y))))
 (let ((?x849 (* ?x106 u)))
 (let ((?x504 (+ (* (- 1) (* ?x44 ?x44 ?x44 y y y u u)) (* (- 1) (* ?x106 y y u u u)))))
 (let ((?x529 (+ (* ?x44 ?x106 ?x106 ?x106 y y y u) (* ?x44 ?x44 ?x44 ?x106 u))))
 (let ((?x514 (+ (* ?x106 ?x106 y y) (* ?x106 ?x106 ?x106 y))))
 (let (($x519 (or (not (= (* ?x514 ?x529 ?x504 (+ ?x505 ?x849 ?x45 ?x527)) 0)) (not (= (* ?x776 ?x273 ?x464 (+ ?x505 ?x61 ?x454 ?x527)) 0)))))
 (let (($x490 (and (= (+ ?x505 (* x u) (* y v) ?x527) 0) $x519)))
 (let ((?x799 (* ?x776 ?x273 ?x464 (+ (* (- 1) (* u00 x00)) ?x61 ?x454 (* (- 1) (* v00 y00))))))
 (let ((?x526 (* ?x514 ?x529 ?x504 (+ (* (- 1) (* u00 x00)) ?x849 ?x45 (* (- 1) (* v00 y00))))))
 (let ((?x38 (* v00 y00)))
 (let ((?x105 (* (- 1) ?x38)))
 (let ((?x87 (* y v)))
 (let ((?x84 (* x u)))
 (let ((?x89 (* (- 1) (* u00 x00))))
 (let (($x484 (and (= (+ ?x89 ?x84 ?x87 ?x105) 0) (or (not (= ?x526 0)) (not (= ?x799 0))))))
 (rewrite (= $x484 $x490))))))))))))))))))))))))))))))
 ))
 (let (($x80 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x62 (- y x)))
 (let ((?x60 (+ u v)))
 (let ((?x74 (+ (* ?x60 v x x x ?x62 ?x62 ?x62) (* ?x60 v v v x))))
 (let ((?x68 (- (* (- 1) ?x60 ?x60 v v v ?x62 ?x62 ?x62) (* ?x60 ?x60 ?x60 x ?x62 ?x62))))
 (let ((?x38 (* v00 y00)))
 (let ((?x75 (* (- (+ (* (- 1) u00 x00) (* ?x60 x) (* v ?x62)) ?x38) ?x68 (+ (* x x ?x62 ?x62) (* x x x ?x62)) ?x74)))
 (let ((?x42 (- x y)))
 (let ((?x44 (+ v u)))
 (let ((?x56 (+ (* u ?x44 ?x42 ?x42 ?x42 y y y) (* u ?x44 ?x44 ?x44 ?x42))))
 (let ((?x50 (- (* (- 1) u u ?x44 ?x44 ?x44 y y y) (* u u u ?x42 y y))))
 (let ((?x57 (* (- (+ (* (- 1) u00 x00) (* u ?x42) (* ?x44 y)) ?x38) ?x50 (+ (* ?x42 ?x42 y y) (* ?x42 ?x42 ?x42 y)) ?x56)))
 (let (($x41 (= (- (+ (* (- 1) u00 x00) (* u x) (* v y)) ?x38) 0)))
 (and $x41 (or (not (= ?x57 0)) (not (= ?x75 0)))))))))))))))) :qid k!29))
 ))
 (let ((?x302 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x38 (* v00 y00)))
 (let ((?x105 (* (- 1) ?x38)))
 (let ((?x351 (* (- 1) x)))
 (let ((?x463 (+ y ?x351)))
 (let ((?x454 (* ?x463 v)))
 (let ((?x60 (+ u v)))
 (let ((?x61 (* ?x60 x)))
 (let ((?x89 (* (- 1) (* u00 x00))))
 (let ((?x464 (+ (* (- 1) (* ?x60 ?x60 ?x463 ?x463 ?x463 v v v)) (* (- 1) (* ?x60 ?x60 ?x60 ?x463 ?x463 x)))))
 (let ((?x273 (+ (* ?x60 ?x463 ?x463 ?x463 x x x v) (* ?x60 x v v v))))
 (let ((?x776 (+ (* ?x463 ?x463 x x) (* ?x463 x x x))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x106 (+ x (* (- 1) y))))
 (let ((?x849 (* ?x106 u)))
 (let ((?x504 (+ (* (- 1) (* ?x44 ?x44 ?x44 y y y u u)) (* (- 1) (* ?x106 y y u u u)))))
 (let ((?x529 (+ (* ?x44 ?x106 ?x106 ?x106 y y y u) (* ?x44 ?x44 ?x44 ?x106 u))))
 (let ((?x514 (+ (* ?x106 ?x106 y y) (* ?x106 ?x106 ?x106 y))))
 (let (($x284 (or (not (= (* ?x514 ?x529 ?x504 (+ ?x89 ?x849 ?x45 ?x105)) 0)) (not (= (* ?x776 ?x273 ?x464 (+ ?x89 ?x61 ?x454 ?x105)) 0)))))
 (let (($x484 (and (= (+ ?x89 (* x u) (* y v) ?x105) 0) $x284)))
 (let ((?x62 (- y x)))
 (let ((?x74 (+ (* ?x60 v x x x ?x62 ?x62 ?x62) (* ?x60 v v v x))))
 (let ((?x68 (- (* (- 1) ?x60 ?x60 v v v ?x62 ?x62 ?x62) (* ?x60 ?x60 ?x60 x ?x62 ?x62))))
 (let ((?x75 (* (- (+ (* (- 1) u00 x00) ?x61 (* v ?x62)) ?x38) ?x68 (+ (* x x ?x62 ?x62) (* x x x ?x62)) ?x74)))
 (let ((?x42 (- x y)))
 (let ((?x56 (+ (* u ?x44 ?x42 ?x42 ?x42 y y y) (* u ?x44 ?x44 ?x44 ?x42))))
 (let ((?x50 (- (* (- 1) u u ?x44 ?x44 ?x44 y y y) (* u u u ?x42 y y))))
 (let ((?x57 (* (- (+ (* (- 1) u00 x00) (* u ?x42) ?x45) ?x38) ?x50 (+ (* ?x42 ?x42 y y) (* ?x42 ?x42 ?x42 y)) ?x56)))
 (let (($x41 (= (- (+ (* (- 1) u00 x00) (* u x) (* v y)) ?x38) 0)))
 (let (($x79 (and $x41 (or (not (= ?x57 0)) (not (= ?x75 0))))))
 (rewrite (= $x79 $x484)))))))))))))))))))))))))))))))))
 ))
 (let ((@x81 (asserted $x80)))
 (let ((@x97 (mp (mp @x81 (quant-intro (proof-bind ?x302) (= $x80 $x479)) $x479) (rewrite (= $x479 $x479)) $x479)))
 (let ((@x1239 (mp (mp @x97 (quant-intro (proof-bind ?x686) (= $x479 $x461)) $x461) (quant-intro (proof-bind ?x598) (= $x461 $x950)) $x950)))
 (let ((@x1587 (mp (mp~ @x1239 (sk (~ $x950 $x1454)) $x1454) (rewrite (= $x1454 $x1575)) $x1575)))
 (let ((@x1537 (and-elim @x1587 $x1464)))
 (let ((@x1472 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1464) $x1480)) @x1537 $x1480)))
 (let (($x1484 (<= ?x1385 0)))
 (let ((@x1581 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1464) $x1484)) @x1537 $x1484)))
 (let (($x1570 (not (<= ?x1425 0))))
 (let (($x1410 (>= ?x1425 0)))
 (let (($x1478 (>= ?x1549 0)))
 (let (($x1477 (<= ?x1549 0)))
 (let ((@x1561 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1530 (not $x1477) (not $x1478))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1477)) @x1581 @x1472 false) $x1477) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1478)) @x1581 @x1472 false) $x1478) $x1530)))
 (let ((@x1412 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1479 $x1570 (not $x1410))) (unit-resolution (and-elim @x1587 $x1586) @x1561 $x1614) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1410)) @x1581 @x1472 false) $x1410) $x1570)))
 ((_ th-lemma arith farkas 1 1 1) @x1412 @x1581 @x1472 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        35
 :arith-assert-upper        14
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-fixed-eqs           5
 :arith-max-min             552
 :arith-nonlinear-bounds    18
 :arith-num-rows            8
 :arith-pivots              1
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 80
 :arith-tableau-max-rows    8
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :eliminated-applications   2
 :final-checks              4
 :max-memory                19.72
 :memory                    19.25
 :mk-bool-var               9
 :mk-clause                 12
 :num-allocs                501302
 :num-checks                1
 :propagations              14
 :rlimit-count              6127
 :time                      0.01
 :total-time                0.02)
