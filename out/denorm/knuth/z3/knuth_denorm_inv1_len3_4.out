unsat
((set-logic NIA)
(declare-fun q!3 () Int)
(declare-fun d!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x1694 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 1) (* d!1 d!1 q!3)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 4) (* d!1 x!0)) (* (- 8) r!2) (* 4 (* d!1 r!2)) (* 2 (* d!1 q!3)))))
 (let (($x2210 (>= ?x1694 0)))
 (let (($x1693 (= ?x1694 0)))
 (let ((?x2186 (* 8 r!2)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x186 (* d!1 d!1 q!3)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x1867 (+ ?x164 ?x212 ?x196 ?x186 ?x262 ?x300 (* 4 (* d!1 x!0)) ?x2186 (* (- 4) (* d!1 r!2)) (* (- 2) (* d!1 q!3)))))
 (let ((?x960 (* 8 (* d!1 r!2 r!2 r!2 q!3))))
 (let ((?x1990 (* r!2 r!2 q!3 q!3)))
 (let ((?x961 (* 4 ?x1990)))
 (let ((?x1736 (* (- 1) (* d!1 d!1 r!2 r!2 q!3 x!0))))
 (let ((?x1604 (* r!2 r!2)))
 (let ((?x574 (* 32 ?x1604)))
 (let ((?x1389 (* 4 (* d!1 r!2 r!2 q!3 q!3))))
 (let ((?x1574 (* r!2 r!2 r!2 q!3)))
 (let ((?x205 (* 8 ?x1574)))
 (let ((?x1721 (* (- 4) (* d!1 r!2 r!2 q!3 x!0))))
 (let ((?x1439 (* r!2 r!2 x!0)))
 (let ((?x1878 (* 16 ?x1439)))
 (let ((?x1292 (* r!2 r!2 r!2)))
 (let ((?x1888 (* (- 32) ?x1292)))
 (let ((?x908 (* d!1 r!2 r!2)))
 (let ((?x168 (* 48 ?x908)))
 (let ((?x741 (* d!1 d!1 r!2 r!2 q!3 q!3)))
 (let ((?x709 (* d!1 d!1 r!2 r!2)))
 (let ((?x1249 (* 24 ?x709)))
 (let ((?x2008 (* 2 (* d!1 d!1 r!2 r!2 r!2 q!3))))
 (let ((?x593 (* r!2 r!2 q!3 x!0)))
 (let ((?x631 (* (- 4) ?x593)))
 (let ((?x1924 (* (- 1) x!0)))
 (let ((?x1517 (* 2 r!2)))
 (let ((?x2269 (* (- 1) d!1)))
 (let ((?x1738 (+ (- 2) ?x2269 ?x1517 q!3 ?x1924)))
 (let ((?x204 (* d!1 d!1 d!1 r!2 r!2)))
 (let ((?x1722 (* 4 ?x204)))
 (let ((?x180 (+ ?x1722 (* (- 1) (* (+ (- 4) q!3) (+ (- 4) q!3) ?x1738 ?x1738 ?x1738)) (* 4 (* d!1 d!1 r!2 r!2 x!0)) (* (- 32) (* d!1 r!2 r!2 r!2)) (* ?x1738 ?x1738 ?x1738 r!2) ?x631 ?x2008 ?x1249 (* (- 8) (* d!1 d!1 r!2 r!2 r!2)) ?x741 ?x168 (* (- 28) (* d!1 r!2 r!2 q!3)) (* (- 10) (* d!1 d!1 r!2 r!2 q!3)) (* (- 1) (* d!1 d!1 d!1 r!2 r!2 q!3)) (* 16 (* d!1 r!2 r!2 x!0)) ?x1888 ?x1878 ?x1721 (* (- 24) (* r!2 r!2 q!3)) ?x205 ?x1389 ?x574 ?x1736 ?x961 ?x960)))
 (let ((?x179 (* ?x180 ?x1867)))
 (let (($x1125 (= ?x179 0)))
 (let (($x2154 (not $x1125)))
 (let ((?x1789 (* (- 2) d!1)))
 (let ((?x2285 (+ (- 4) ?x1789 ?x1517 q!3 ?x1924)))
 (let ((?x1706 (* 128 ?x1604)))
 (let ((?x1463 (* 32 ?x1439)))
 (let ((?x1450 (* (- 64) ?x1292)))
 (let ((?x274 (+ (* 16 ?x204) (* 8 (* d!1 d!1 r!2 r!2 x!0)) (* (- 64) (* d!1 r!2 r!2 r!2)) ?x631 ?x2008 (* (- 1) (* (+ (- 8) q!3) (+ (- 8) q!3) ?x2285 ?x2285 ?x2285)) (* 96 ?x709) (* (- 16) (* d!1 d!1 r!2 r!2 r!2)) ?x741 (* 192 ?x908) (* (- 56) (* d!1 r!2 r!2 q!3)) (* (- 20) (* d!1 d!1 r!2 r!2 q!3)) (* (- 2) (* d!1 d!1 d!1 r!2 r!2 q!3)) (* 32 (* d!1 r!2 r!2 x!0)) ?x1450 ?x1463 ?x1721 (* (- 48) (* r!2 r!2 q!3)) ?x205 ?x1389 ?x1706 ?x1736 ?x961 (* ?x2285 ?x2285 ?x2285 r!2) ?x960)))
 (let ((?x456 (* ?x274 ?x1867)))
 (let (($x1388 (= ?x456 0)))
 (let ((?x2104 (* q!3 q!3 x!0 x!0 x!0)))
 (let ((?x455 (* (- 3) (* q!3 q!3 q!3 x!0 x!0))))
 (let ((?x1723 (* 6 (* r!2 r!2 x!0 x!0))))
 (let ((?x1458 (* (- 1) (* r!2 x!0 x!0 x!0))))
 (let ((?x1344 (* (- 1) (* q!3 q!3 q!3 q!3 q!3))))
 (let ((?x1845 (* (- 12) (* r!2 r!2 r!2 x!0))))
 (let ((?x1189 (* 8 (* r!2 r!2 r!2 r!2))))
 (let ((?x1323 (* 3 (* q!3 q!3 q!3 q!3 x!0))))
 (let ((?x813 (+ (* (- 3) (* r!2 q!3 q!3 x!0)) (* 3 (* r!2 q!3 x!0 x!0)) ?x1323 (* 12 (* r!2 q!3 q!3 q!3 x!0)) (* (- 6) (* r!2 q!3 q!3 q!3 q!3)) (* (- 16) ?x593) ?x2008 ?x1189 ?x741 ?x1845 ?x1721 ?x1344 ?x1458 (* (- 12) (* r!2 r!2 q!3 q!3 q!3)) (* r!2 q!3 q!3 q!3) (* 20 ?x1574) ?x1389 ?x1723 (* (- 6) (* r!2 q!3 q!3 x!0 x!0)) ?x1736 ?x455 (* 10 ?x1990) (* (- 8) (* r!2 r!2 r!2 q!3 q!3)) ?x2104 (* 12 (* r!2 r!2 q!3 q!3 x!0)) ?x960)))
 (let ((?x849 (* ?x813 ?x1867)))
 (let (($x1525 (= ?x849 0)))
 (let ((?x716 (+ 2 d!1 ?x1517 q!3 ?x1924)))
 (let ((?x522 (+ 4 q!3)))
 (let ((?x1941 (* (- 16) ?x1439)))
 (let ((?x1471 (* 32 ?x1292)))
 (let ((?x1181 (* d!1 d!1 d!1 r!2 r!2 q!3)))
 (let ((?x332 (+ ?x1722 (* (- 4) (* d!1 d!1 r!2 r!2 x!0)) (* ?x716 ?x716 ?x716 r!2) (* 32 (* d!1 r!2 r!2 r!2)) ?x631 ?x2008 ?x1249 (* 8 (* d!1 d!1 r!2 r!2 r!2)) ?x741 ?x168 (* 28 (* d!1 r!2 r!2 q!3)) (* 10 (* d!1 d!1 r!2 r!2 q!3)) ?x1181 (* (- 16) (* d!1 r!2 r!2 x!0)) ?x1471 ?x1941 ?x1721 (* 24 (* r!2 r!2 q!3)) ?x205 ?x1389 ?x574 ?x1736 ?x961 (* (- 1) (* ?x522 ?x522 ?x716 ?x716 ?x716)) ?x960)))
 (let ((?x542 (* ?x332 ?x1867)))
 (let (($x587 (= ?x542 0)))
 (let (($x555 (not $x587)))
 (let (($x183 (or $x555 (not $x1525) (not $x1388) $x2154)))
 (let (($x945 (and $x1693 $x183)))
 (let ((?x1204 (+ ?x2186 ?x164 ?x212 ?x196 ?x262 ?x300 (* 4 (* x!0 d!1)) (* (- 2) (* q!3 d!1)) (* (- 4) (* r!2 d!1)) (* q!3 d!1 d!1))))
 (let ((?x905 (+ (- 2) q!3 ?x1517 ?x1924 ?x2269)))
 (let ((?x1570 (+ (- 4) q!3)))
 (let ((?x1465 (* q!3 r!2 r!2 x!0)))
 (let ((?x1692 (* (- 4) ?x1465)))
 (let ((?x1404 (* r!2 r!2 d!1 d!1 d!1)))
 (let ((?x1475 (* 4 ?x1404)))
 (let ((?x1275 (* 2 (* q!3 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x843 (* 8 (* q!3 r!2 r!2 r!2 d!1))))
 (let ((?x1875 (* q!3 r!2 r!2 r!2)))
 (let ((?x1988 (* 8 ?x1875)))
 (let ((?x2337 (* 4 (* q!3 q!3 r!2 r!2 d!1))))
 (let ((?x1206 (* q!3 q!3 r!2 r!2 d!1 d!1)))
 (let ((?x2359 (* (- 4) (* q!3 r!2 r!2 x!0 d!1))))
 (let ((?x2146 (* (- 1) (* q!3 r!2 r!2 x!0 d!1 d!1))))
 (let ((?x1477 (* r!2 r!2 d!1 d!1)))
 (let ((?x1469 (* 24 ?x1477)))
 (let ((?x959 (* r!2 r!2 d!1)))
 (let ((?x2064 (* 48 ?x959)))
 (let ((?x637 (* q!3 q!3 r!2 r!2)))
 (let ((?x1190 (* 4 ?x637)))
 (let ((?x2372 (+ (* (- 24) (* q!3 r!2 r!2)) ?x574 (* 16 (* r!2 r!2 x!0 d!1)) ?x1190 ?x2064 ?x1469 (* ?x905 ?x905 ?x905 r!2) ?x2146 ?x2359 (* (- 8) (* r!2 r!2 r!2 d!1 d!1)) (* (- 32) (* r!2 r!2 r!2 d!1)) ?x1888 ?x1206 ?x2337 (* (- 10) (* q!3 r!2 r!2 d!1 d!1)) (* (- 28) (* q!3 r!2 r!2 d!1)) ?x1988 ?x843 ?x1275 ?x1475 (* (- 1) (* q!3 r!2 r!2 d!1 d!1 d!1)) ?x1878 (* 4 (* r!2 r!2 x!0 d!1 d!1)) ?x1692 (* (- 1) (* ?x1570 ?x1570 ?x905 ?x905 ?x905)))))
 (let ((?x726 (* q!3 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x1676 (+ 2 q!3 ?x1517 ?x1924 d!1)))
 (let ((?x1255 (+ (* 24 (* q!3 r!2 r!2)) ?x574 (* (- 16) (* r!2 r!2 x!0 d!1)) (* ?x1676 ?x1676 ?x1676 r!2) ?x1190 (* (- 1) (* ?x522 ?x522 ?x1676 ?x1676 ?x1676)) ?x2064 ?x1469 ?x2146 ?x2359 (* 8 (* r!2 r!2 r!2 d!1 d!1)) (* 32 (* r!2 r!2 r!2 d!1)) ?x1471 ?x1206 ?x2337 (* 10 (* q!3 r!2 r!2 d!1 d!1)) (* 28 (* q!3 r!2 r!2 d!1)) ?x1988 ?x843 ?x1275 ?x1475 ?x726 ?x1941 (* (- 4) (* r!2 r!2 x!0 d!1 d!1)) ?x1692)))
 (let ((?x1872 (+ (- 4) q!3 ?x1517 ?x1924 ?x1789)))
 (let ((?x1790 (+ (- 8) q!3)))
 (let ((?x1682 (+ (* (- 48) (* q!3 r!2 r!2)) ?x1706 (* 32 (* r!2 r!2 x!0 d!1)) ?x1190 (* ?x1872 ?x1872 ?x1872 r!2) (* 192 ?x959) (* 96 ?x1477) ?x2146 ?x2359 (* (- 1) (* ?x1790 ?x1790 ?x1872 ?x1872 ?x1872)) (* (- 16) (* r!2 r!2 r!2 d!1 d!1)) (* (- 64) (* r!2 r!2 r!2 d!1)) ?x1450 ?x1206 ?x2337 (* (- 20) (* q!3 r!2 r!2 d!1 d!1)) (* (- 56) (* q!3 r!2 r!2 d!1)) ?x1988 ?x843 ?x1275 (* 16 ?x1404) (* (- 2) ?x726) ?x1463 (* 8 (* r!2 r!2 x!0 d!1 d!1)) ?x1692)))
 (let ((?x159 (+ (* 10 ?x637) (* q!3 q!3 q!3 r!2) (* (- 12) (* q!3 q!3 q!3 r!2 r!2)) (* (- 8) (* q!3 q!3 r!2 r!2 r!2)) (* (- 3) (* q!3 q!3 r!2 x!0)) (* 12 (* q!3 q!3 r!2 r!2 x!0)) ?x2146 ?x2359 ?x1206 ?x2337 (* 20 ?x1875) ?x843 ?x1275 (* (- 16) ?x1465) (* 3 (* q!3 r!2 x!0 x!0)) ?x1189 ?x1845 ?x1723 ?x1458 ?x1344 (* (- 6) (* q!3 q!3 q!3 q!3 r!2)) ?x1323 (* 12 (* q!3 q!3 q!3 r!2 x!0)) ?x455 (* (- 6) (* q!3 q!3 r!2 x!0 x!0)) ?x2104)))
 (let (($x1432 (or (not (= (* ?x159 ?x1204) 0)) (not (= (* ?x1682 ?x1204) 0)) (not (= (* ?x1255 ?x1204) 0)) (not (= (* ?x2372 ?x1204) 0)))))
 (let (($x670 (and (= ?x1204 0) $x1432)))
 (let (($x567 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2262 (* q d d)))
 (let ((?x2261 (* r d)))
 (let ((?x2260 (* (- 4) ?x2261)))
 (let ((?x2263 (* (- 2) (* q d))))
 (let ((?x1493 (* 4 (* x d))))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x240 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1493 ?x2263 ?x2260 ?x2262)))
 (let ((?x2163 (* (- 1) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x2205 (+ (- 2) q ?x130 ?x161 ?x2163)))
 (let ((?x2417 (+ (- 4) q)))
 (let ((?x904 (* (- 1) (* ?x2417 ?x2417 ?x2205 ?x2205 ?x2205))))
 (let ((?x2001 (* q r r x)))
 (let ((?x2000 (* (- 4) ?x2001)))
 (let ((?x1674 (* r r x)))
 (let ((?x2159 (* 16 ?x1674)))
 (let ((?x1673 (* q r r d d d)))
 (let ((?x2158 (* (- 1) ?x1673)))
 (let ((?x1668 (* r r d d d)))
 (let ((?x1669 (* 4 ?x1668)))
 (let ((?x1666 (* 2 (* q r r r d d))))
 (let ((?x1662 (* q r r r d)))
 (let ((?x484 (* 8 ?x1662)))
 (let ((?x1633 (* q r r r)))
 (let ((?x1634 (* 8 ?x1633)))
 (let ((?x1607 (* 4 (* q q r r d))))
 (let ((?x1606 (* q q r r d d)))
 (let ((?x1605 (* r r r)))
 (let ((?x2155 (* (- 32) ?x1605)))
 (let ((?x1602 (* r r r d)))
 (let ((?x2431 (* (- 32) ?x1602)))
 (let ((?x1599 (* r r r d d)))
 (let ((?x2157 (* (- 8) ?x1599)))
 (let ((?x1456 (* q r r x d)))
 (let ((?x485 (* (- 4) ?x1456)))
 (let ((?x665 (* (- 1) (* q r r x d d))))
 (let ((?x1219 (* ?x2205 ?x2205 ?x2205 r)))
 (let ((?x1012 (* r r d d)))
 (let ((?x2361 (* 24 ?x1012)))
 (let ((?x1010 (* r r d)))
 (let ((?x268 (* 48 ?x1010)))
 (let ((?x733 (* q q r r)))
 (let ((?x412 (* 4 ?x733)))
 (let ((?x378 (* r r x d)))
 (let ((?x1305 (* 16 ?x378)))
 (let ((?x377 (* r r)))
 (let ((?x2393 (* 32 ?x377)))
 (let ((?x371 (* q r r)))
 (let ((?x2120 (* (- 24) ?x371)))
 (let ((?x539 (+ ?x2120 ?x2393 ?x1305 ?x412 ?x268 ?x2361 ?x1219 ?x665 ?x485 ?x2157 ?x2431 ?x2155 ?x1606 ?x1607 (* (- 10) (* q r r d d)) (* (- 28) (* q r r d)) ?x1634 ?x484 ?x1666 ?x1669 ?x2158 ?x2159 (* 4 (* r r x d d)) ?x2000 ?x904)))
 (let ((?x1727 (* r r x d d)))
 (let ((?x1730 (* (- 4) ?x1727)))
 (let ((?x1744 (* (- 16) ?x1674)))
 (let ((?x1612 (* q r r d d)))
 (let ((?x1611 (* 10 ?x1612)))
 (let ((?x1603 (* 32 ?x1605)))
 (let ((?x1632 (* 8 ?x1599)))
 (let ((?x732 (+ 2 q ?x130 ?x161 d)))
 (let ((?x2387 (+ 4 q)))
 (let ((?x934 (* (- 1) (* ?x2387 ?x2387 ?x732 ?x732 ?x732))))
 (let ((?x676 (* ?x732 ?x732 ?x732 r)))
 (let ((?x401 (* 24 ?x371)))
 (let ((?x2192 (+ ?x401 ?x2393 (* (- 16) ?x378) ?x676 ?x412 ?x934 ?x268 ?x2361 ?x665 ?x485 ?x1632 (* 32 ?x1602) ?x1603 ?x1606 ?x1607 ?x1611 (* 28 (* q r r d)) ?x1634 ?x484 ?x1666 ?x1669 ?x1673 ?x1744 ?x1730 ?x2000)))
 (let ((?x2435 (* 32 ?x1674)))
 (let ((?x2434 (* (- 2) ?x1673)))
 (let ((?x2433 (* 16 ?x1668)))
 (let ((?x2430 (* (- 64) ?x1605)))
 (let ((?x2432 (* (- 16) ?x1599)))
 (let ((?x2438 (* (- 2) d)))
 (let ((?x1492 (+ (- 4) q ?x130 ?x161 ?x2438)))
 (let ((?x2441 (+ (- 8) q)))
 (let ((?x1625 (* (- 1) (* ?x2441 ?x2441 ?x1492 ?x1492 ?x1492))))
 (let ((?x828 (* ?x1492 ?x1492 ?x1492 r)))
 (let ((?x2424 (* 128 ?x377)))
 (let ((?x2425 (* (- 48) ?x371)))
 (let ((?x2037 (+ ?x2425 ?x2424 (* 32 ?x378) ?x412 ?x828 (* 192 ?x1010) (* 96 ?x1012) ?x665 ?x485 ?x1625 ?x2432 (* (- 64) ?x1602) ?x2430 ?x1606 ?x1607 (* (- 20) ?x1612) (* (- 56) (* q r r d)) ?x1634 ?x484 ?x1666 ?x2433 ?x2434 ?x2435 (* 8 ?x1727) ?x2000)))
 (let ((?x2097 (* q q x x x)))
 (let ((?x2096 (* (- 6) (* q q r x x))))
 (let ((?x2085 (* (- 3) (* q q q x x))))
 (let ((?x2083 (* 12 (* q q q r x))))
 (let ((?x2079 (* 3 (* q q q q x))))
 (let ((?x2077 (* (- 6) (* q q q q r))))
 (let ((?x2048 (* (- 1) (* q q q q q))))
 (let ((?x2046 (* (- 1) (* r x x x))))
 (let ((?x2042 (* 6 (* r r x x))))
 (let ((?x2040 (* (- 12) (* r r r x))))
 (let ((?x2038 (* 8 (* r r r r))))
 (let ((?x2028 (* 3 (* q r x x))))
 (let ((?x2024 (* (- 16) ?x2001)))
 (let ((?x2023 (* 20 ?x1633)))
 (let ((?x907 (* q q r r x)))
 (let ((?x2087 (* 12 ?x907)))
 (let ((?x897 (* q q r x)))
 (let ((?x2026 (* (- 3) ?x897)))
 (let ((?x859 (* q q r r r)))
 (let ((?x2086 (* (- 8) ?x859)))
 (let ((?x817 (* q q q r r)))
 (let ((?x2080 (* (- 12) ?x817)))
 (let ((?x807 (* q q q r)))
 (let ((?x2022 (* 10 ?x733)))
 (let ((?x1082 (+ ?x2022 ?x807 ?x2080 ?x2086 ?x2026 ?x2087 ?x665 ?x485 ?x1606 ?x1607 ?x2023 ?x484 ?x1666 ?x2024 ?x2028 ?x2038 ?x2040 ?x2042 ?x2046 ?x2048 ?x2077 ?x2079 ?x2083 ?x2085 ?x2096 ?x2097)))
 (let (($x1577 (or (not (= (* ?x1082 ?x240) 0)) (not (= (* ?x2037 ?x240) 0)) (not (= (* ?x2192 ?x240) 0)) (not (= (* ?x539 ?x240) 0)))))
 (let (($x1474 (= ?x240 0)))
 (and $x1474 $x1577)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1167 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2262 (* q d d)))
 (let ((?x2261 (* r d)))
 (let ((?x2260 (* (- 4) ?x2261)))
 (let ((?x2263 (* (- 2) (* q d))))
 (let ((?x2184 (* 2 (* d 4))))
 (let ((?x2256 (* (- 8) d)))
 (let ((?x1493 (* 4 (* x d))))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x265 (* 2 (* d 4 d r r))))
 (let ((?x2392 (* 2 (* d 4 2 r r))))
 (let ((?x2001 (* q r r x)))
 (let ((?x2000 (* (- 4) ?x2001)))
 (let ((?x1727 (* r r x d d)))
 (let ((?x1730 (* (- 4) ?x1727)))
 (let ((?x1674 (* r r x)))
 (let ((?x1744 (* (- 16) ?x1674)))
 (let ((?x1673 (* q r r d d d)))
 (let ((?x1668 (* r r d d d)))
 (let ((?x1669 (* 4 ?x1668)))
 (let ((?x1666 (* 2 (* q r r r d d))))
 (let ((?x1662 (* q r r r d)))
 (let ((?x1663 (* 4 ?x1662)))
 (let ((?x1633 (* q r r r)))
 (let ((?x1634 (* 8 ?x1633)))
 (let ((?x1615 (* q r r d)))
 (let ((?x1613 (* 16 ?x1615)))
 (let ((?x1612 (* q r r d d)))
 (let ((?x1611 (* 10 ?x1612)))
 (let ((?x1607 (* 4 (* q q r r d))))
 (let ((?x1606 (* q q r r d d)))
 (let ((?x1605 (* r r r)))
 (let ((?x1603 (* 32 ?x1605)))
 (let ((?x1602 (* r r r d)))
 (let ((?x1600 (* 16 ?x1602)))
 (let ((?x1599 (* r r r d d)))
 (let ((?x1632 (* 8 ?x1599)))
 (let ((?x1456 (* q r r x d)))
 (let ((?x1480 (* (- 2) ?x1456)))
 (let ((?x665 (* (- 1) (* q r r x d d))))
 (let ((?x1012 (* r r d d)))
 (let ((?x1013 (* 16 ?x1012)))
 (let ((?x1010 (* r r d)))
 (let ((?x1011 (* 32 ?x1010)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x732 (+ 2 q ?x130 ?x161 d)))
 (let ((?x2387 (+ 4 q)))
 (let ((?x934 (* (- 1) (* ?x2387 ?x2387 ?x732 ?x732 ?x732))))
 (let ((?x733 (* q q r r)))
 (let ((?x412 (* 4 ?x733)))
 (let ((?x676 (* ?x732 ?x732 ?x732 r)))
 (let ((?x482 (* 2 (* d q ?x130 r r))))
 (let ((?x477 (* 2 (* d 4 ?x130 r r))))
 (let ((?x377 (* r r)))
 (let ((?x2393 (* 32 ?x377)))
 (let ((?x371 (* q r r)))
 (let ((?x401 (* 24 ?x371)))
 (let ((?x369 (* 2 (* d 4 q r r))))
 (let ((?x355 (* 2 (* d q 2 r r))))
 (let ((?x350 (* 2 (* d q ?x161 r r))))
 (let ((?x322 (* 2 (* d 4 ?x161 r r))))
 (let ((?x532 (+ ?x322 ?x350 ?x355 ?x369 ?x401 ?x2393 (* (- 8) (* r r x d)) ?x477 ?x482 ?x676 ?x412 ?x934 ?x1011 ?x1013 ?x665 ?x1480 ?x1632 ?x1600 ?x1603 ?x1606 ?x1607 ?x1611 ?x1613 ?x1634 ?x1663 ?x1666 ?x1669 ?x1673 ?x1744 ?x1730 ?x2000 ?x2392 ?x265)))
 (let ((?x2308 (* ?x532 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1493 ?x2256 ?x2184 ?x2263 ?x2260 ?x2262))))
 (let ((?x2420 (* 16 d)))
 (let ((?x935 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 8) (* d 2)) ?x1493 ?x2420 ?x2263 ?x2260 ?x2262)))
 (let ((?x2435 (* 32 ?x1674)))
 (let ((?x2434 (* (- 2) ?x1673)))
 (let ((?x484 (* 8 ?x1662)))
 (let ((?x2430 (* (- 64) ?x1605)))
 (let ((?x2431 (* (- 32) ?x1602)))
 (let ((?x2438 (* (- 2) d)))
 (let ((?x1492 (+ (- 4) q ?x130 ?x161 ?x2438)))
 (let ((?x2441 (+ (- 8) q)))
 (let ((?x1625 (* (- 1) (* ?x2441 ?x2441 ?x1492 ?x1492 ?x1492))))
 (let ((?x485 (* (- 4) ?x1456)))
 (let ((?x2426 (* 128 ?x1010)))
 (let ((?x828 (* ?x1492 ?x1492 ?x1492 r)))
 (let ((?x378 (* r r x d)))
 (let ((?x1305 (* 16 ?x378)))
 (let ((?x2424 (* 128 ?x377)))
 (let ((?x2425 (* (- 48) ?x371)))
 (let ((?x1503 (+ (* (- 8) (* d 2 ?x130 r r)) (* (- 8) (* d d q r r)) (* (- 8) (* d 2 ?x161 r r)) ?x2425 ?x2424 ?x1305 (* (- 8) (* d d ?x130 r r)) ?x412 (* (- 8) (* d d (- 4) r r)) ?x828 (* (- 8) (* d d ?x161 r r)) (* (- 8) (* d 2 q r r)) (* (- 8) (* d d ?x2438 r r)) ?x2426 (* 32 ?x1012) (* (- 8) (* d 2 (- 4) r r)) (* (- 8) (* d 2 ?x2438 r r)) ?x665 ?x485 ?x1625 ?x2431 ?x2430 ?x1606 ?x1607 (* (- 12) ?x1612) (* (- 40) ?x1615) ?x1634 ?x484 ?x1666 ?x2434 ?x2435 ?x2000)))
 (let ((?x240 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1493 ?x2263 ?x2260 ?x2262)))
 (let ((?x2097 (* q q x x x)))
 (let ((?x2096 (* (- 6) (* q q r x x))))
 (let ((?x2085 (* (- 3) (* q q q x x))))
 (let ((?x2083 (* 12 (* q q q r x))))
 (let ((?x2079 (* 3 (* q q q q x))))
 (let ((?x2077 (* (- 6) (* q q q q r))))
 (let ((?x2048 (* (- 1) (* q q q q q))))
 (let ((?x2046 (* (- 1) (* r x x x))))
 (let ((?x2042 (* 6 (* r r x x))))
 (let ((?x2040 (* (- 12) (* r r r x))))
 (let ((?x2038 (* 8 (* r r r r))))
 (let ((?x2028 (* 3 (* q r x x))))
 (let ((?x2024 (* (- 16) ?x2001)))
 (let ((?x2023 (* 20 ?x1633)))
 (let ((?x907 (* q q r r x)))
 (let ((?x2087 (* 12 ?x907)))
 (let ((?x897 (* q q r x)))
 (let ((?x2026 (* (- 3) ?x897)))
 (let ((?x859 (* q q r r r)))
 (let ((?x2086 (* (- 8) ?x859)))
 (let ((?x817 (* q q q r r)))
 (let ((?x2080 (* (- 12) ?x817)))
 (let ((?x807 (* q q q r)))
 (let ((?x2022 (* 10 ?x733)))
 (let ((?x626 (+ (* 2 (* d ?x130 r r q)) ?x2022 (* 2 (* d ?x161 r r q)) ?x807 ?x2080 ?x2086 ?x2026 ?x2087 ?x665 ?x1480 ?x1606 ?x1607 ?x2023 ?x1663 ?x1666 ?x2024 ?x2028 ?x2038 ?x2040 ?x2042 ?x2046 ?x2048 ?x2077 ?x2079 ?x2083 ?x2085 ?x2096 ?x2097)))
 (let ((?x2114 (* 8 d)))
 (let ((?x269 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 4) (* d 2)) ?x1493 ?x2114 ?x2263 ?x2260 ?x2262)))
 (let ((?x2163 (* (- 1) d)))
 (let ((?x2205 (+ (- 2) q ?x130 ?x161 ?x2163)))
 (let ((?x2417 (+ (- 4) q)))
 (let ((?x904 (* (- 1) (* ?x2417 ?x2417 ?x2205 ?x2205 ?x2205))))
 (let ((?x2159 (* 16 ?x1674)))
 (let ((?x2158 (* (- 1) ?x1673)))
 (let ((?x2155 (* (- 32) ?x1605)))
 (let ((?x2156 (* (- 16) ?x1602)))
 (let ((?x1219 (* ?x2205 ?x2205 ?x2205 r)))
 (let ((?x2120 (* (- 24) ?x371)))
 (let ((?x1156 (+ (* (- 4) (* d 2 ?x130 r r)) (* (- 4) (* d d q r r)) (* (- 4) (* d 2 ?x161 r r)) ?x2120 ?x2393 (* 8 ?x378) (* (- 4) (* d d ?x130 r r)) (* (- 4) (* d d ?x2163 r r)) ?x412 (* (- 4) (* d d ?x161 r r)) (* (- 4) (* d 2 q r r)) ?x1011 (* 8 ?x1012) ?x1219 ?x665 ?x485 ?x2156 ?x2155 ?x1606 ?x1607 (* (- 6) ?x1612) (* (- 20) ?x1615) ?x1634 ?x484 ?x1666 ?x2158 ?x2159 ?x2000 (* (- 4) (* d 2 (- 2) r r)) ?x904 (* (- 4) (* d d (- 2) r r)) (* (- 4) (* d 2 ?x2163 r r)))))
 (let (($x1195 (or (not (= (* ?x1156 ?x269) 0)) (not (= (* ?x626 ?x240) 0)) (not (= (* ?x1503 ?x935) 0)) (not (= ?x2308 0)))))
 (let (($x1474 (= ?x240 0)))
 (and $x1474 $x1195))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1835 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2262 (* q d d)))
 (let ((?x2261 (* r d)))
 (let ((?x2260 (* (- 4) ?x2261)))
 (let ((?x2263 (* (- 2) (* q d))))
 (let ((?x1493 (* 4 (* x d))))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x240 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1493 ?x2263 ?x2260 ?x2262)))
 (let ((?x2163 (* (- 1) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x2205 (+ (- 2) q ?x130 ?x161 ?x2163)))
 (let ((?x2417 (+ (- 4) q)))
 (let ((?x904 (* (- 1) (* ?x2417 ?x2417 ?x2205 ?x2205 ?x2205))))
 (let ((?x2001 (* q r r x)))
 (let ((?x2000 (* (- 4) ?x2001)))
 (let ((?x1674 (* r r x)))
 (let ((?x2159 (* 16 ?x1674)))
 (let ((?x1673 (* q r r d d d)))
 (let ((?x2158 (* (- 1) ?x1673)))
 (let ((?x1668 (* r r d d d)))
 (let ((?x1669 (* 4 ?x1668)))
 (let ((?x1666 (* 2 (* q r r r d d))))
 (let ((?x1662 (* q r r r d)))
 (let ((?x484 (* 8 ?x1662)))
 (let ((?x1633 (* q r r r)))
 (let ((?x1634 (* 8 ?x1633)))
 (let ((?x1607 (* 4 (* q q r r d))))
 (let ((?x1606 (* q q r r d d)))
 (let ((?x1605 (* r r r)))
 (let ((?x2155 (* (- 32) ?x1605)))
 (let ((?x1602 (* r r r d)))
 (let ((?x2431 (* (- 32) ?x1602)))
 (let ((?x1599 (* r r r d d)))
 (let ((?x2157 (* (- 8) ?x1599)))
 (let ((?x1456 (* q r r x d)))
 (let ((?x485 (* (- 4) ?x1456)))
 (let ((?x665 (* (- 1) (* q r r x d d))))
 (let ((?x1219 (* ?x2205 ?x2205 ?x2205 r)))
 (let ((?x1012 (* r r d d)))
 (let ((?x2361 (* 24 ?x1012)))
 (let ((?x1010 (* r r d)))
 (let ((?x268 (* 48 ?x1010)))
 (let ((?x733 (* q q r r)))
 (let ((?x412 (* 4 ?x733)))
 (let ((?x378 (* r r x d)))
 (let ((?x1305 (* 16 ?x378)))
 (let ((?x377 (* r r)))
 (let ((?x2393 (* 32 ?x377)))
 (let ((?x371 (* q r r)))
 (let ((?x2120 (* (- 24) ?x371)))
 (let ((?x539 (+ ?x2120 ?x2393 ?x1305 ?x412 ?x268 ?x2361 ?x1219 ?x665 ?x485 ?x2157 ?x2431 ?x2155 ?x1606 ?x1607 (* (- 10) (* q r r d d)) (* (- 28) (* q r r d)) ?x1634 ?x484 ?x1666 ?x1669 ?x2158 ?x2159 (* 4 (* r r x d d)) ?x2000 ?x904)))
 (let ((?x1727 (* r r x d d)))
 (let ((?x1730 (* (- 4) ?x1727)))
 (let ((?x1744 (* (- 16) ?x1674)))
 (let ((?x1612 (* q r r d d)))
 (let ((?x1611 (* 10 ?x1612)))
 (let ((?x1603 (* 32 ?x1605)))
 (let ((?x1632 (* 8 ?x1599)))
 (let ((?x732 (+ 2 q ?x130 ?x161 d)))
 (let ((?x2387 (+ 4 q)))
 (let ((?x934 (* (- 1) (* ?x2387 ?x2387 ?x732 ?x732 ?x732))))
 (let ((?x676 (* ?x732 ?x732 ?x732 r)))
 (let ((?x401 (* 24 ?x371)))
 (let ((?x2192 (+ ?x401 ?x2393 (* (- 16) ?x378) ?x676 ?x412 ?x934 ?x268 ?x2361 ?x665 ?x485 ?x1632 (* 32 ?x1602) ?x1603 ?x1606 ?x1607 ?x1611 (* 28 (* q r r d)) ?x1634 ?x484 ?x1666 ?x1669 ?x1673 ?x1744 ?x1730 ?x2000)))
 (let ((?x2435 (* 32 ?x1674)))
 (let ((?x2434 (* (- 2) ?x1673)))
 (let ((?x2433 (* 16 ?x1668)))
 (let ((?x2430 (* (- 64) ?x1605)))
 (let ((?x2432 (* (- 16) ?x1599)))
 (let ((?x2438 (* (- 2) d)))
 (let ((?x1492 (+ (- 4) q ?x130 ?x161 ?x2438)))
 (let ((?x2441 (+ (- 8) q)))
 (let ((?x1625 (* (- 1) (* ?x2441 ?x2441 ?x1492 ?x1492 ?x1492))))
 (let ((?x828 (* ?x1492 ?x1492 ?x1492 r)))
 (let ((?x2424 (* 128 ?x377)))
 (let ((?x2425 (* (- 48) ?x371)))
 (let ((?x2037 (+ ?x2425 ?x2424 (* 32 ?x378) ?x412 ?x828 (* 192 ?x1010) (* 96 ?x1012) ?x665 ?x485 ?x1625 ?x2432 (* (- 64) ?x1602) ?x2430 ?x1606 ?x1607 (* (- 20) ?x1612) (* (- 56) (* q r r d)) ?x1634 ?x484 ?x1666 ?x2433 ?x2434 ?x2435 (* 8 ?x1727) ?x2000)))
 (let ((?x2097 (* q q x x x)))
 (let ((?x2096 (* (- 6) (* q q r x x))))
 (let ((?x2085 (* (- 3) (* q q q x x))))
 (let ((?x2083 (* 12 (* q q q r x))))
 (let ((?x2079 (* 3 (* q q q q x))))
 (let ((?x2077 (* (- 6) (* q q q q r))))
 (let ((?x2048 (* (- 1) (* q q q q q))))
 (let ((?x2046 (* (- 1) (* r x x x))))
 (let ((?x2042 (* 6 (* r r x x))))
 (let ((?x2040 (* (- 12) (* r r r x))))
 (let ((?x2038 (* 8 (* r r r r))))
 (let ((?x2028 (* 3 (* q r x x))))
 (let ((?x2024 (* (- 16) ?x2001)))
 (let ((?x2023 (* 20 ?x1633)))
 (let ((?x907 (* q q r r x)))
 (let ((?x2087 (* 12 ?x907)))
 (let ((?x897 (* q q r x)))
 (let ((?x2026 (* (- 3) ?x897)))
 (let ((?x859 (* q q r r r)))
 (let ((?x2086 (* (- 8) ?x859)))
 (let ((?x817 (* q q q r r)))
 (let ((?x2080 (* (- 12) ?x817)))
 (let ((?x807 (* q q q r)))
 (let ((?x2022 (* 10 ?x733)))
 (let ((?x1082 (+ ?x2022 ?x807 ?x2080 ?x2086 ?x2026 ?x2087 ?x665 ?x485 ?x1606 ?x1607 ?x2023 ?x484 ?x1666 ?x2024 ?x2028 ?x2038 ?x2040 ?x2042 ?x2046 ?x2048 ?x2077 ?x2079 ?x2083 ?x2085 ?x2096 ?x2097)))
 (let (($x1577 (or (not (= (* ?x1082 ?x240) 0)) (not (= (* ?x2037 ?x240) 0)) (not (= (* ?x2192 ?x240) 0)) (not (= (* ?x539 ?x240) 0)))))
 (let (($x1474 (= ?x240 0)))
 (let (($x1369 (and $x1474 $x1577)))
 (let ((?x2184 (* 2 (* d 4))))
 (let ((?x2256 (* (- 8) d)))
 (let ((?x265 (* 2 (* d 4 d r r))))
 (let ((?x2392 (* 2 (* d 4 2 r r))))
 (let ((?x1663 (* 4 ?x1662)))
 (let ((?x1615 (* q r r d)))
 (let ((?x1613 (* 16 ?x1615)))
 (let ((?x1600 (* 16 ?x1602)))
 (let ((?x1480 (* (- 2) ?x1456)))
 (let ((?x1013 (* 16 ?x1012)))
 (let ((?x1011 (* 32 ?x1010)))
 (let ((?x482 (* 2 (* d q ?x130 r r))))
 (let ((?x477 (* 2 (* d 4 ?x130 r r))))
 (let ((?x369 (* 2 (* d 4 q r r))))
 (let ((?x355 (* 2 (* d q 2 r r))))
 (let ((?x350 (* 2 (* d q ?x161 r r))))
 (let ((?x322 (* 2 (* d 4 ?x161 r r))))
 (let ((?x532 (+ ?x322 ?x350 ?x355 ?x369 ?x401 ?x2393 (* (- 8) ?x378) ?x477 ?x482 ?x676 ?x412 ?x934 ?x1011 ?x1013 ?x665 ?x1480 ?x1632 ?x1600 ?x1603 ?x1606 ?x1607 ?x1611 ?x1613 ?x1634 ?x1663 ?x1666 ?x1669 ?x1673 ?x1744 ?x1730 ?x2000 ?x2392 ?x265)))
 (let ((?x2308 (* ?x532 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1493 ?x2256 ?x2184 ?x2263 ?x2260 ?x2262))))
 (let ((?x2420 (* 16 d)))
 (let ((?x935 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 8) (* d 2)) ?x1493 ?x2420 ?x2263 ?x2260 ?x2262)))
 (let ((?x2426 (* 128 ?x1010)))
 (let ((?x1503 (+ (* (- 8) (* d 2 ?x130 r r)) (* (- 8) (* d d q r r)) (* (- 8) (* d 2 ?x161 r r)) ?x2425 ?x2424 ?x1305 (* (- 8) (* d d ?x130 r r)) ?x412 (* (- 8) (* d d (- 4) r r)) ?x828 (* (- 8) (* d d ?x161 r r)) (* (- 8) (* d 2 q r r)) (* (- 8) (* d d ?x2438 r r)) ?x2426 (* 32 ?x1012) (* (- 8) (* d 2 (- 4) r r)) (* (- 8) (* d 2 ?x2438 r r)) ?x665 ?x485 ?x1625 ?x2431 ?x2430 ?x1606 ?x1607 (* (- 12) ?x1612) (* (- 40) ?x1615) ?x1634 ?x484 ?x1666 ?x2434 ?x2435 ?x2000)))
 (let ((?x626 (+ (* 2 (* d ?x130 r r q)) ?x2022 (* 2 (* d ?x161 r r q)) ?x807 ?x2080 ?x2086 ?x2026 ?x2087 ?x665 ?x1480 ?x1606 ?x1607 ?x2023 ?x1663 ?x1666 ?x2024 ?x2028 ?x2038 ?x2040 ?x2042 ?x2046 ?x2048 ?x2077 ?x2079 ?x2083 ?x2085 ?x2096 ?x2097)))
 (let ((?x2114 (* 8 d)))
 (let ((?x269 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 4) (* d 2)) ?x1493 ?x2114 ?x2263 ?x2260 ?x2262)))
 (let ((?x2156 (* (- 16) ?x1602)))
 (let ((?x1156 (+ (* (- 4) (* d 2 ?x130 r r)) (* (- 4) (* d d q r r)) (* (- 4) (* d 2 ?x161 r r)) ?x2120 ?x2393 (* 8 ?x378) (* (- 4) (* d d ?x130 r r)) (* (- 4) (* d d ?x2163 r r)) ?x412 (* (- 4) (* d d ?x161 r r)) (* (- 4) (* d 2 q r r)) ?x1011 (* 8 ?x1012) ?x1219 ?x665 ?x485 ?x2156 ?x2155 ?x1606 ?x1607 (* (- 6) ?x1612) (* (- 20) ?x1615) ?x1634 ?x484 ?x1666 ?x2158 ?x2159 ?x2000 (* (- 4) (* d 2 (- 2) r r)) ?x904 (* (- 4) (* d d (- 2) r r)) (* (- 4) (* d 2 ?x2163 r r)))))
 (let (($x1195 (or (not (= (* ?x1156 ?x269) 0)) (not (= (* ?x626 ?x240) 0)) (not (= (* ?x1503 ?x935) 0)) (not (= ?x2308 0)))))
 (let (($x1211 (and $x1474 $x1195)))
 (rewrite (= $x1211 $x1369)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x880 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x512 (* 4 (* d00 r00))))
 (let ((?x2163 (* (- 1) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x837 (+ (- 2) ?x130 ?x161 q ?x2163)))
 (let ((?x667 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1583 (* 4 (* ?x667 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x2256 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x823 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1645 (+ (- 16) ?x409 ?x823 ?x30 ?x2256 ?x164 ?x1583 ?x196 ?x212 (* (+ (- 4) q) ?x667 ?x667) (* (- 2) (* (+ (- 4) q) ?x667)) ?x262 (* (- 4) (* ?x667 ?x837)) ?x512)))
 (let ((?x1636 (+ (* ?x837 ?x837 ?x837 r) (* (- 1) (* (+ (- 4) q) (+ (- 4) q) ?x837 ?x837 ?x837)) (* (+ (- 4) q) ?x667 ?x667 ?x837 r r))))
 (let (($x1649 (not (= (* ?x1636 ?x1645) 0))))
 (let ((?x2114 (* 8 d)))
 (let ((?x562 (+ 16 ?x409 ?x823 ?x30 ?x2114 ?x164 ?x1583 ?x196 ?x212 (* ?x667 ?x667 (+ 4 q)) (* (- 2) (* ?x667 (+ 4 q))) ?x262 (* (- 4) (* ?x667 (+ 2 ?x130 ?x161 q d))) ?x512)))
 (let ((?x511 (+ 2 ?x130 ?x161 q d)))
 (let ((?x2387 (+ 4 q)))
 (let ((?x967 (+ (* ?x511 ?x511 ?x511 r) (* (- 1) (* ?x2387 ?x2387 ?x511 ?x511 ?x511)) (* ?x667 ?x667 ?x2387 ?x511 r r))))
 (let (($x566 (not (= (* ?x967 ?x562) 0))))
 (let ((?x1860 (+ ?x409 ?x823 ?x30 ?x164 ?x1583 ?x196 ?x212 (* ?x667 ?x667 q) (* (- 2) (* ?x667 q)) ?x262 (* (- 4) (* ?x667 (+ ?x130 ?x161 q))) ?x512)))
 (let ((?x1710 (+ ?x130 ?x161 q)))
 (let ((?x1798 (+ (* ?x1710 ?x1710 ?x1710 r) (* (- 1) (* ?x1710 ?x1710 ?x1710 q q)) (* ?x667 ?x667 ?x1710 r r q))))
 (let (($x363 (not (= (* ?x1798 ?x1860) 0))))
 (let ((?x627 (+ (- 32) ?x409 ?x823 ?x30 (* (- 16) d) ?x164 ?x1583 ?x196 ?x212 (* (+ (- 8) q) ?x667 ?x667) (* (- 2) (* (+ (- 8) q) ?x667)) ?x262 (* (- 4) (* ?x667 (+ (- 4) ?x130 ?x161 q (* (- 2) d)))) ?x512)))
 (let ((?x2438 (* (- 2) d)))
 (let ((?x1650 (+ (- 4) ?x130 ?x161 q ?x2438)))
 (let ((?x2441 (+ (- 8) q)))
 (let ((?x1630 (+ (* ?x1650 ?x1650 ?x1650 r) (* (- 1) (* ?x2441 ?x2441 ?x1650 ?x1650 ?x1650)) (* ?x2441 ?x667 ?x667 ?x1650 r r))))
 (let (($x344 (not (= (* ?x1630 ?x627) 0))))
 (let ((?x1493 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x1700 (+ ?x193 ?x164 ?x1493 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x512)))
 (let (($x1701 (= ?x1700 0)))
 (and $x1701 (or $x344 $x363 $x566 $x1649))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1188 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2262 (* q d d)))
 (let ((?x2261 (* r d)))
 (let ((?x2260 (* (- 4) ?x2261)))
 (let ((?x2263 (* (- 2) (* q d))))
 (let ((?x2184 (* 2 (* d 4))))
 (let ((?x2256 (* (- 8) d)))
 (let ((?x1493 (* 4 (* x d))))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x265 (* 2 (* d 4 d r r))))
 (let ((?x2392 (* 2 (* d 4 2 r r))))
 (let ((?x2001 (* q r r x)))
 (let ((?x2000 (* (- 4) ?x2001)))
 (let ((?x1727 (* r r x d d)))
 (let ((?x1730 (* (- 4) ?x1727)))
 (let ((?x1674 (* r r x)))
 (let ((?x1744 (* (- 16) ?x1674)))
 (let ((?x1673 (* q r r d d d)))
 (let ((?x1668 (* r r d d d)))
 (let ((?x1669 (* 4 ?x1668)))
 (let ((?x1666 (* 2 (* q r r r d d))))
 (let ((?x1662 (* q r r r d)))
 (let ((?x1663 (* 4 ?x1662)))
 (let ((?x1633 (* q r r r)))
 (let ((?x1634 (* 8 ?x1633)))
 (let ((?x1615 (* q r r d)))
 (let ((?x1613 (* 16 ?x1615)))
 (let ((?x1612 (* q r r d d)))
 (let ((?x1611 (* 10 ?x1612)))
 (let ((?x1607 (* 4 (* q q r r d))))
 (let ((?x1606 (* q q r r d d)))
 (let ((?x1605 (* r r r)))
 (let ((?x1603 (* 32 ?x1605)))
 (let ((?x1602 (* r r r d)))
 (let ((?x1600 (* 16 ?x1602)))
 (let ((?x1599 (* r r r d d)))
 (let ((?x1632 (* 8 ?x1599)))
 (let ((?x1456 (* q r r x d)))
 (let ((?x1480 (* (- 2) ?x1456)))
 (let ((?x665 (* (- 1) (* q r r x d d))))
 (let ((?x1012 (* r r d d)))
 (let ((?x1013 (* 16 ?x1012)))
 (let ((?x1010 (* r r d)))
 (let ((?x1011 (* 32 ?x1010)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x732 (+ 2 q ?x130 ?x161 d)))
 (let ((?x2387 (+ 4 q)))
 (let ((?x934 (* (- 1) (* ?x2387 ?x2387 ?x732 ?x732 ?x732))))
 (let ((?x733 (* q q r r)))
 (let ((?x412 (* 4 ?x733)))
 (let ((?x676 (* ?x732 ?x732 ?x732 r)))
 (let ((?x482 (* 2 (* d q ?x130 r r))))
 (let ((?x477 (* 2 (* d 4 ?x130 r r))))
 (let ((?x377 (* r r)))
 (let ((?x2393 (* 32 ?x377)))
 (let ((?x371 (* q r r)))
 (let ((?x401 (* 24 ?x371)))
 (let ((?x369 (* 2 (* d 4 q r r))))
 (let ((?x355 (* 2 (* d q 2 r r))))
 (let ((?x350 (* 2 (* d q ?x161 r r))))
 (let ((?x322 (* 2 (* d 4 ?x161 r r))))
 (let ((?x532 (+ ?x322 ?x350 ?x355 ?x369 ?x401 ?x2393 (* (- 8) (* r r x d)) ?x477 ?x482 ?x676 ?x412 ?x934 ?x1011 ?x1013 ?x665 ?x1480 ?x1632 ?x1600 ?x1603 ?x1606 ?x1607 ?x1611 ?x1613 ?x1634 ?x1663 ?x1666 ?x1669 ?x1673 ?x1744 ?x1730 ?x2000 ?x2392 ?x265)))
 (let ((?x2308 (* ?x532 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1493 ?x2256 ?x2184 ?x2263 ?x2260 ?x2262))))
 (let ((?x2420 (* 16 d)))
 (let ((?x935 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 8) (* d 2)) ?x1493 ?x2420 ?x2263 ?x2260 ?x2262)))
 (let ((?x2435 (* 32 ?x1674)))
 (let ((?x2434 (* (- 2) ?x1673)))
 (let ((?x484 (* 8 ?x1662)))
 (let ((?x2430 (* (- 64) ?x1605)))
 (let ((?x2431 (* (- 32) ?x1602)))
 (let ((?x2438 (* (- 2) d)))
 (let ((?x1492 (+ (- 4) q ?x130 ?x161 ?x2438)))
 (let ((?x2441 (+ (- 8) q)))
 (let ((?x1625 (* (- 1) (* ?x2441 ?x2441 ?x1492 ?x1492 ?x1492))))
 (let ((?x485 (* (- 4) ?x1456)))
 (let ((?x2426 (* 128 ?x1010)))
 (let ((?x828 (* ?x1492 ?x1492 ?x1492 r)))
 (let ((?x378 (* r r x d)))
 (let ((?x1305 (* 16 ?x378)))
 (let ((?x2424 (* 128 ?x377)))
 (let ((?x2425 (* (- 48) ?x371)))
 (let ((?x1503 (+ (* (- 8) (* d 2 ?x130 r r)) (* (- 8) (* d d q r r)) (* (- 8) (* d 2 ?x161 r r)) ?x2425 ?x2424 ?x1305 (* (- 8) (* d d ?x130 r r)) ?x412 (* (- 8) (* d d (- 4) r r)) ?x828 (* (- 8) (* d d ?x161 r r)) (* (- 8) (* d 2 q r r)) (* (- 8) (* d d ?x2438 r r)) ?x2426 (* 32 ?x1012) (* (- 8) (* d 2 (- 4) r r)) (* (- 8) (* d 2 ?x2438 r r)) ?x665 ?x485 ?x1625 ?x2431 ?x2430 ?x1606 ?x1607 (* (- 12) ?x1612) (* (- 40) ?x1615) ?x1634 ?x484 ?x1666 ?x2434 ?x2435 ?x2000)))
 (let ((?x240 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1493 ?x2263 ?x2260 ?x2262)))
 (let ((?x2097 (* q q x x x)))
 (let ((?x2096 (* (- 6) (* q q r x x))))
 (let ((?x2085 (* (- 3) (* q q q x x))))
 (let ((?x2083 (* 12 (* q q q r x))))
 (let ((?x2079 (* 3 (* q q q q x))))
 (let ((?x2077 (* (- 6) (* q q q q r))))
 (let ((?x2048 (* (- 1) (* q q q q q))))
 (let ((?x2046 (* (- 1) (* r x x x))))
 (let ((?x2042 (* 6 (* r r x x))))
 (let ((?x2040 (* (- 12) (* r r r x))))
 (let ((?x2038 (* 8 (* r r r r))))
 (let ((?x2028 (* 3 (* q r x x))))
 (let ((?x2024 (* (- 16) ?x2001)))
 (let ((?x2023 (* 20 ?x1633)))
 (let ((?x907 (* q q r r x)))
 (let ((?x2087 (* 12 ?x907)))
 (let ((?x897 (* q q r x)))
 (let ((?x2026 (* (- 3) ?x897)))
 (let ((?x859 (* q q r r r)))
 (let ((?x2086 (* (- 8) ?x859)))
 (let ((?x817 (* q q q r r)))
 (let ((?x2080 (* (- 12) ?x817)))
 (let ((?x807 (* q q q r)))
 (let ((?x2022 (* 10 ?x733)))
 (let ((?x626 (+ (* 2 (* d ?x130 r r q)) ?x2022 (* 2 (* d ?x161 r r q)) ?x807 ?x2080 ?x2086 ?x2026 ?x2087 ?x665 ?x1480 ?x1606 ?x1607 ?x2023 ?x1663 ?x1666 ?x2024 ?x2028 ?x2038 ?x2040 ?x2042 ?x2046 ?x2048 ?x2077 ?x2079 ?x2083 ?x2085 ?x2096 ?x2097)))
 (let ((?x2114 (* 8 d)))
 (let ((?x269 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 4) (* d 2)) ?x1493 ?x2114 ?x2263 ?x2260 ?x2262)))
 (let ((?x2163 (* (- 1) d)))
 (let ((?x2205 (+ (- 2) q ?x130 ?x161 ?x2163)))
 (let ((?x2417 (+ (- 4) q)))
 (let ((?x904 (* (- 1) (* ?x2417 ?x2417 ?x2205 ?x2205 ?x2205))))
 (let ((?x2159 (* 16 ?x1674)))
 (let ((?x2158 (* (- 1) ?x1673)))
 (let ((?x2155 (* (- 32) ?x1605)))
 (let ((?x2156 (* (- 16) ?x1602)))
 (let ((?x1219 (* ?x2205 ?x2205 ?x2205 r)))
 (let ((?x2120 (* (- 24) ?x371)))
 (let ((?x1156 (+ (* (- 4) (* d 2 ?x130 r r)) (* (- 4) (* d d q r r)) (* (- 4) (* d 2 ?x161 r r)) ?x2120 ?x2393 (* 8 ?x378) (* (- 4) (* d d ?x130 r r)) (* (- 4) (* d d ?x2163 r r)) ?x412 (* (- 4) (* d d ?x161 r r)) (* (- 4) (* d 2 q r r)) ?x1011 (* 8 ?x1012) ?x1219 ?x665 ?x485 ?x2156 ?x2155 ?x1606 ?x1607 (* (- 6) ?x1612) (* (- 20) ?x1615) ?x1634 ?x484 ?x1666 ?x2158 ?x2159 ?x2000 (* (- 4) (* d 2 (- 2) r r)) ?x904 (* (- 4) (* d d (- 2) r r)) (* (- 4) (* d 2 ?x2163 r r)))))
 (let (($x1195 (or (not (= (* ?x1156 ?x269) 0)) (not (= (* ?x626 ?x240) 0)) (not (= (* ?x1503 ?x935) 0)) (not (= ?x2308 0)))))
 (let (($x1474 (= ?x240 0)))
 (let (($x1211 (and $x1474 $x1195)))
 (let ((?x512 (* 4 (* d00 r00))))
 (let ((?x1583 (* 4 (* (+ 2 d) r))))
 (let ((?x30 (* 8 q)))
 (let ((?x823 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1645 (+ (- 16) ?x409 ?x823 ?x30 ?x2256 ?x164 ?x1583 ?x196 ?x212 (* ?x2417 (+ 2 d) (+ 2 d)) (* (- 2) (* ?x2417 (+ 2 d))) ?x262 (* (- 4) (* (+ 2 d) (+ (- 2) ?x130 ?x161 q ?x2163))) ?x512)))
 (let ((?x837 (+ (- 2) ?x130 ?x161 q ?x2163)))
 (let ((?x667 (+ 2 d)))
 (let ((?x1636 (+ (* ?x837 ?x837 ?x837 r) (* (- 1) (* ?x2417 ?x2417 ?x837 ?x837 ?x837)) (* ?x2417 ?x667 ?x667 ?x837 r r))))
 (let (($x1649 (not (= (* ?x1636 ?x1645) 0))))
 (let ((?x562 (+ 16 ?x409 ?x823 ?x30 ?x2114 ?x164 ?x1583 ?x196 ?x212 (* ?x667 ?x667 ?x2387) (* (- 2) (* ?x667 ?x2387)) ?x262 (* (- 4) (* ?x667 (+ 2 ?x130 ?x161 q d))) ?x512)))
 (let ((?x511 (+ 2 ?x130 ?x161 q d)))
 (let ((?x967 (+ (* ?x511 ?x511 ?x511 r) (* (- 1) (* ?x2387 ?x2387 ?x511 ?x511 ?x511)) (* ?x667 ?x667 ?x2387 ?x511 r r))))
 (let (($x566 (not (= (* ?x967 ?x562) 0))))
 (let ((?x1860 (+ ?x409 ?x823 ?x30 ?x164 ?x1583 ?x196 ?x212 (* ?x667 ?x667 q) (* (- 2) (* ?x667 q)) ?x262 (* (- 4) (* ?x667 (+ ?x130 ?x161 q))) ?x512)))
 (let ((?x1710 (+ ?x130 ?x161 q)))
 (let ((?x1798 (+ (* ?x1710 ?x1710 ?x1710 r) (* (- 1) (* ?x1710 ?x1710 ?x1710 q q)) (* ?x667 ?x667 ?x1710 r r q))))
 (let (($x363 (not (= (* ?x1798 ?x1860) 0))))
 (let ((?x627 (+ (- 32) ?x409 ?x823 ?x30 (* (- 16) d) ?x164 ?x1583 ?x196 ?x212 (* ?x2441 ?x667 ?x667) (* (- 2) (* ?x2441 ?x667)) ?x262 (* (- 4) (* ?x667 (+ (- 4) ?x130 ?x161 q ?x2438))) ?x512)))
 (let ((?x1650 (+ (- 4) ?x130 ?x161 q ?x2438)))
 (let ((?x1630 (+ (* ?x1650 ?x1650 ?x1650 r) (* (- 1) (* ?x2441 ?x2441 ?x1650 ?x1650 ?x1650)) (* ?x2441 ?x667 ?x667 ?x1650 r r))))
 (let (($x344 (not (= (* ?x1630 ?x627) 0))))
 (let ((?x1700 (+ ?x193 ?x164 ?x1493 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x512)))
 (let (($x1701 (= ?x1700 0)))
 (let (($x304 (and $x1701 (or $x344 $x363 $x566 $x1649))))
 (rewrite (= $x304 $x1211)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x612 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x512 (* 4 (* d00 r00))))
 (let ((?x2438 (* (- 2) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x1650 (+ (- 4) ?x130 ?x161 q ?x2438)))
 (let ((?x667 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1583 (* 4 (* ?x667 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x823 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x627 (+ (- 32) ?x409 ?x823 ?x30 (* (- 16) d) ?x164 ?x1583 ?x196 ?x212 (* (+ (- 8) q) ?x667 ?x667) (* (- 2) (* (+ (- 8) q) ?x667)) ?x262 (* (- 4) (* ?x667 ?x1650)) ?x512)))
 (let ((?x1630 (+ (* ?x1650 ?x1650 ?x1650 r) (* (- 1) (* (+ (- 8) q) (+ (- 8) q) ?x1650 ?x1650 ?x1650)) (* (+ (- 8) q) ?x667 ?x667 ?x1650 r r))))
 (let (($x344 (not (= (* ?x1630 ?x627) 0))))
 (let ((?x2256 (* (- 8) d)))
 (let ((?x1645 (+ (- 16) ?x409 ?x823 ?x30 ?x2256 ?x164 ?x1583 ?x196 ?x212 (* (+ (- 4) q) ?x667 ?x667) (* (- 2) (* (+ (- 4) q) ?x667)) ?x262 (* (- 4) (* ?x667 (+ (- 2) ?x130 ?x161 q (* (- 1) d)))) ?x512)))
 (let ((?x2163 (* (- 1) d)))
 (let ((?x837 (+ (- 2) ?x130 ?x161 q ?x2163)))
 (let ((?x2417 (+ (- 4) q)))
 (let ((?x1636 (+ (* ?x837 ?x837 ?x837 r) (* (- 1) (* ?x2417 ?x2417 ?x837 ?x837 ?x837)) (* ?x2417 ?x667 ?x667 ?x837 r r))))
 (let (($x1649 (not (= (* ?x1636 ?x1645) 0))))
 (let ((?x2114 (* 8 d)))
 (let ((?x562 (+ 16 ?x409 ?x823 ?x30 ?x2114 ?x164 ?x1583 ?x196 ?x212 (* ?x667 ?x667 (+ 4 q)) (* (- 2) (* ?x667 (+ 4 q))) ?x262 (* (- 4) (* ?x667 (+ 2 ?x130 ?x161 q d))) ?x512)))
 (let ((?x511 (+ 2 ?x130 ?x161 q d)))
 (let ((?x2387 (+ 4 q)))
 (let ((?x967 (+ (* ?x511 ?x511 ?x511 r) (* (- 1) (* ?x2387 ?x2387 ?x511 ?x511 ?x511)) (* ?x667 ?x667 ?x2387 ?x511 r r))))
 (let (($x566 (not (= (* ?x967 ?x562) 0))))
 (let ((?x1860 (+ ?x409 ?x823 ?x30 ?x164 ?x1583 ?x196 ?x212 (* ?x667 ?x667 q) (* (- 2) (* ?x667 q)) ?x262 (* (- 4) (* ?x667 (+ ?x130 ?x161 q))) ?x512)))
 (let ((?x1710 (+ ?x130 ?x161 q)))
 (let ((?x1798 (+ (* ?x1710 ?x1710 ?x1710 r) (* (- 1) (* ?x1710 ?x1710 ?x1710 q q)) (* ?x667 ?x667 ?x1710 r r q))))
 (let (($x363 (not (= (* ?x1798 ?x1860) 0))))
 (let ((?x1493 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x1700 (+ ?x193 ?x164 ?x1493 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x512)))
 (let (($x1701 (= ?x1700 0)))
 (and $x1701 (or $x363 $x566 $x1649 $x344))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x923 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x512 (* 4 (* d00 r00))))
 (let ((?x2163 (* (- 1) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x837 (+ (- 2) ?x130 ?x161 q ?x2163)))
 (let ((?x667 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1583 (* 4 (* ?x667 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x2256 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x823 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1645 (+ (- 16) ?x409 ?x823 ?x30 ?x2256 ?x164 ?x1583 ?x196 ?x212 (* (+ (- 4) q) ?x667 ?x667) (* (- 2) (* (+ (- 4) q) ?x667)) ?x262 (* (- 4) (* ?x667 ?x837)) ?x512)))
 (let ((?x1636 (+ (* ?x837 ?x837 ?x837 r) (* (- 1) (* (+ (- 4) q) (+ (- 4) q) ?x837 ?x837 ?x837)) (* (+ (- 4) q) ?x667 ?x667 ?x837 r r))))
 (let (($x1649 (not (= (* ?x1636 ?x1645) 0))))
 (let ((?x2114 (* 8 d)))
 (let ((?x562 (+ 16 ?x409 ?x823 ?x30 ?x2114 ?x164 ?x1583 ?x196 ?x212 (* ?x667 ?x667 (+ 4 q)) (* (- 2) (* ?x667 (+ 4 q))) ?x262 (* (- 4) (* ?x667 (+ 2 ?x130 ?x161 q d))) ?x512)))
 (let ((?x511 (+ 2 ?x130 ?x161 q d)))
 (let ((?x2387 (+ 4 q)))
 (let ((?x967 (+ (* ?x511 ?x511 ?x511 r) (* (- 1) (* ?x2387 ?x2387 ?x511 ?x511 ?x511)) (* ?x667 ?x667 ?x2387 ?x511 r r))))
 (let (($x566 (not (= (* ?x967 ?x562) 0))))
 (let ((?x1860 (+ ?x409 ?x823 ?x30 ?x164 ?x1583 ?x196 ?x212 (* ?x667 ?x667 q) (* (- 2) (* ?x667 q)) ?x262 (* (- 4) (* ?x667 (+ ?x130 ?x161 q))) ?x512)))
 (let ((?x1710 (+ ?x130 ?x161 q)))
 (let ((?x1798 (+ (* ?x1710 ?x1710 ?x1710 r) (* (- 1) (* ?x1710 ?x1710 ?x1710 q q)) (* ?x667 ?x667 ?x1710 r r q))))
 (let (($x363 (not (= (* ?x1798 ?x1860) 0))))
 (let ((?x627 (+ (- 32) ?x409 ?x823 ?x30 (* (- 16) d) ?x164 ?x1583 ?x196 ?x212 (* (+ (- 8) q) ?x667 ?x667) (* (- 2) (* (+ (- 8) q) ?x667)) ?x262 (* (- 4) (* ?x667 (+ (- 4) ?x130 ?x161 q (* (- 2) d)))) ?x512)))
 (let ((?x2438 (* (- 2) d)))
 (let ((?x1650 (+ (- 4) ?x130 ?x161 q ?x2438)))
 (let ((?x2441 (+ (- 8) q)))
 (let ((?x1630 (+ (* ?x1650 ?x1650 ?x1650 r) (* (- 1) (* ?x2441 ?x2441 ?x1650 ?x1650 ?x1650)) (* ?x2441 ?x667 ?x667 ?x1650 r r))))
 (let (($x344 (not (= (* ?x1630 ?x627) 0))))
 (let ((?x1493 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x1700 (+ ?x193 ?x164 ?x1493 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x512)))
 (let (($x1701 (= ?x1700 0)))
 (let (($x304 (and $x1701 (or $x344 $x363 $x566 $x1649))))
 (let (($x349 (and $x1701 (or $x363 $x566 $x1649 $x344))))
 (rewrite (= $x349 $x304))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x157 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x132 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x138 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x151 (+ (- (* ?x132 ?x132 ?x132 r) (* ?x138 ?x138 ?x132 ?x132 ?x132)) (* ?x62 ?x62 ?x138 ?x132 r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x136 (- (+ (- (* 8 ?x132) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x143 (+ (- (+ (- ?x136 ?x41) (* ?x62 ?x62 ?x138)) (* 2 ?x62 ?x138)) ?x49)))
 (let ((?x107 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x113 (- q 4)))
 (let ((?x126 (+ (- (* ?x107 ?x107 ?x107 r) (* ?x113 ?x113 ?x107 ?x107 ?x107)) (* ?x62 ?x62 ?x113 ?x107 r r))))
 (let ((?x111 (- (+ (- (* 8 ?x107) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x118 (+ (- (+ (- ?x111 ?x41) (* ?x62 ?x62 ?x113)) (* 2 ?x62 ?x113)) ?x49)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x84 (+ ?x58 q)))
 (let ((?x102 (+ (- (* ?x84 ?x84 ?x84 r) (* q q ?x84 ?x84 ?x84)) (* ?x62 ?x62 q ?x84 r r))))
 (let ((?x88 (- (+ (- (* 8 ?x84) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (- (* ?x59 ?x59 ?x59 r) (* ?x67 ?x67 ?x59 ?x59 ?x59)) (* ?x62 ?x62 ?x67 ?x59 r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x155 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x80) 0)) (not (= (* (+ (- ?x94 (* 4 ?x62 ?x84)) ?x53) ?x102) 0)) (not (= (* (+ (- ?x118 (* 4 ?x62 ?x107)) ?x53) ?x126) 0)) (not (= (* (+ (- ?x143 (* 4 ?x62 ?x132)) ?x53) ?x151) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x155))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x921 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x512 (* 4 (* d00 r00))))
 (let ((?x1760 (* (- 2) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1478 (+ (- 4) ?x57 ?x161 q ?x1760)))
 (let ((?x1563 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x500 (* 4 (* ?x1563 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x535 (* 8 q)))
 (let ((?x823 (* (- 8) x)))
 (let ((?x812 (* 16 r)))
 (let ((?x865 (+ (- 32) ?x812 ?x823 ?x535 (* (- 16) d) ?x164 ?x500 ?x196 ?x212 (* (+ (- 8) q) ?x1563 ?x1563) (* (- 2) (* (+ (- 8) q) ?x1563)) ?x262 (* (- 4) (* ?x1563 ?x1478)) ?x512)))
 (let ((?x1617 (+ (* ?x1478 ?x1478 ?x1478 r) (* (- 1) (* (+ (- 8) q) (+ (- 8) q) ?x1478 ?x1478 ?x1478)) (* (+ (- 8) q) ?x1563 ?x1563 ?x1478 r r))))
 (let ((?x454 (* (- 8) d)))
 (let ((?x259 (+ (- 16) ?x812 ?x823 ?x535 ?x454 ?x164 ?x500 ?x196 ?x212 (* (+ (- 4) q) ?x1563 ?x1563) (* (- 2) (* (+ (- 4) q) ?x1563)) ?x262 (* (- 4) (* ?x1563 (+ (- 2) ?x57 ?x161 q (* (- 1) d)))) ?x512)))
 (let ((?x1084 (* (- 1) d)))
 (let ((?x1334 (+ (- 2) ?x57 ?x161 q ?x1084)))
 (let ((?x979 (+ (- 4) q)))
 (let ((?x1110 (+ (* ?x1334 ?x1334 ?x1334 r) (* (- 1) (* ?x979 ?x979 ?x1334 ?x1334 ?x1334)) (* ?x979 ?x1563 ?x1563 ?x1334 r r))))
 (let ((?x193 (* 8 d)))
 (let ((?x1402 (+ 16 ?x812 ?x823 ?x535 ?x193 ?x164 ?x500 ?x196 ?x212 (* ?x1563 ?x1563 (+ 4 q)) (* (- 2) (* ?x1563 (+ 4 q))) ?x262 (* (- 4) (* ?x1563 (+ 2 ?x57 ?x161 q d))) ?x512)))
 (let ((?x656 (+ 2 ?x57 ?x161 q d)))
 (let ((?x351 (+ 4 q)))
 (let ((?x1425 (+ (* ?x656 ?x656 ?x656 r) (* (- 1) (* ?x351 ?x351 ?x656 ?x656 ?x656)) (* ?x1563 ?x1563 ?x351 ?x656 r r))))
 (let ((?x1479 (+ ?x812 ?x823 ?x535 ?x164 ?x500 ?x196 ?x212 (* ?x1563 ?x1563 q) (* (- 2) (* ?x1563 q)) ?x262 (* (- 4) (* ?x1563 (+ ?x57 ?x161 q))) ?x512)))
 (let ((?x1490 (+ ?x57 ?x161 q)))
 (let ((?x1139 (+ (* ?x1490 ?x1490 ?x1490 r) (* (- 1) (* ?x1490 ?x1490 ?x1490 q q)) (* ?x1563 ?x1563 ?x1490 r r q))))
 (let (($x1687 (or (not (= (* ?x1139 ?x1479) 0)) (not (= (* ?x1425 ?x1402) 0)) (not (= (* ?x1110 ?x259) 0)) (not (= (* ?x1617 ?x865) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x892 (+ ?x30 ?x164 (* 4 (* x d)) ?x196 ?x212 ?x44 (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x512)))
 (and (= ?x892 0) $x1687)))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1771 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x512 (* 4 (* d00 r00))))
 (let ((?x1760 (* (- 2) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1478 (+ (- 4) ?x57 ?x161 q ?x1760)))
 (let ((?x1563 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x500 (* 4 (* ?x1563 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x535 (* 8 q)))
 (let ((?x823 (* (- 8) x)))
 (let ((?x812 (* 16 r)))
 (let ((?x865 (+ (- 32) ?x812 ?x823 ?x535 (* (- 16) d) ?x164 ?x500 ?x196 ?x212 (* (+ (- 8) q) ?x1563 ?x1563) (* (- 2) (* (+ (- 8) q) ?x1563)) ?x262 (* (- 4) (* ?x1563 ?x1478)) ?x512)))
 (let ((?x1617 (+ (* ?x1478 ?x1478 ?x1478 r) (* (- 1) (* (+ (- 8) q) (+ (- 8) q) ?x1478 ?x1478 ?x1478)) (* (+ (- 8) q) ?x1563 ?x1563 ?x1478 r r))))
 (let ((?x454 (* (- 8) d)))
 (let ((?x259 (+ (- 16) ?x812 ?x823 ?x535 ?x454 ?x164 ?x500 ?x196 ?x212 (* (+ (- 4) q) ?x1563 ?x1563) (* (- 2) (* (+ (- 4) q) ?x1563)) ?x262 (* (- 4) (* ?x1563 (+ (- 2) ?x57 ?x161 q (* (- 1) d)))) ?x512)))
 (let ((?x1084 (* (- 1) d)))
 (let ((?x1334 (+ (- 2) ?x57 ?x161 q ?x1084)))
 (let ((?x979 (+ (- 4) q)))
 (let ((?x1110 (+ (* ?x1334 ?x1334 ?x1334 r) (* (- 1) (* ?x979 ?x979 ?x1334 ?x1334 ?x1334)) (* ?x979 ?x1563 ?x1563 ?x1334 r r))))
 (let ((?x193 (* 8 d)))
 (let ((?x1402 (+ 16 ?x812 ?x823 ?x535 ?x193 ?x164 ?x500 ?x196 ?x212 (* ?x1563 ?x1563 (+ 4 q)) (* (- 2) (* ?x1563 (+ 4 q))) ?x262 (* (- 4) (* ?x1563 (+ 2 ?x57 ?x161 q d))) ?x512)))
 (let ((?x656 (+ 2 ?x57 ?x161 q d)))
 (let ((?x351 (+ 4 q)))
 (let ((?x1425 (+ (* ?x656 ?x656 ?x656 r) (* (- 1) (* ?x351 ?x351 ?x656 ?x656 ?x656)) (* ?x1563 ?x1563 ?x351 ?x656 r r))))
 (let ((?x1479 (+ ?x812 ?x823 ?x535 ?x164 ?x500 ?x196 ?x212 (* ?x1563 ?x1563 q) (* (- 2) (* ?x1563 q)) ?x262 (* (- 4) (* ?x1563 (+ ?x57 ?x161 q))) ?x512)))
 (let ((?x1490 (+ ?x57 ?x161 q)))
 (let ((?x1139 (+ (* ?x1490 ?x1490 ?x1490 r) (* (- 1) (* ?x1490 ?x1490 ?x1490 q q)) (* ?x1563 ?x1563 ?x1490 r r q))))
 (let (($x1687 (or (not (= (* ?x1139 ?x1479) 0)) (not (= (* ?x1425 ?x1402) 0)) (not (= (* ?x1110 ?x259) 0)) (not (= (* ?x1617 ?x865) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x892 (+ ?x30 ?x164 (* 4 (* x d)) ?x196 ?x212 ?x44 (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x512)))
 (let (($x1702 (and (= ?x892 0) $x1687)))
 (let ((?x132 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x138 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x151 (+ (- (* ?x132 ?x132 ?x132 r) (* ?x138 ?x138 ?x132 ?x132 ?x132)) (* ?x62 ?x62 ?x138 ?x132 r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x136 (- (+ (- (* 8 ?x132) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x143 (+ (- (+ (- ?x136 ?x41) (* ?x62 ?x62 ?x138)) (* 2 ?x62 ?x138)) ?x49)))
 (let ((?x107 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x113 (- q 4)))
 (let ((?x126 (+ (- (* ?x107 ?x107 ?x107 r) (* ?x113 ?x113 ?x107 ?x107 ?x107)) (* ?x62 ?x62 ?x113 ?x107 r r))))
 (let ((?x111 (- (+ (- (* 8 ?x107) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x118 (+ (- (+ (- ?x111 ?x41) (* ?x62 ?x62 ?x113)) (* 2 ?x62 ?x113)) ?x49)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x84 (+ ?x58 q)))
 (let ((?x102 (+ (- (* ?x84 ?x84 ?x84 r) (* q q ?x84 ?x84 ?x84)) (* ?x62 ?x62 q ?x84 r r))))
 (let ((?x88 (- (+ (- (* 8 ?x84) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (- (* ?x59 ?x59 ?x59 r) (* ?x67 ?x67 ?x59 ?x59 ?x59)) (* ?x62 ?x62 ?x67 ?x59 r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x155 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x80) 0)) (not (= (* (+ (- ?x94 (* 4 ?x62 ?x84)) ?x53) ?x102) 0)) (not (= (* (+ (- ?x118 (* 4 ?x62 ?x107)) ?x53) ?x126) 0)) (not (= (* (+ (- ?x143 (* 4 ?x62 ?x132)) ?x53) ?x151) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x156 (and (= ?x54 0) $x155)))
 (rewrite (= $x156 $x1702)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1946 (trans (quant-intro (proof-bind ?x1771) (= $x157 $x921)) (elim-unused (= $x921 $x612)) (= $x157 $x612))))
 (let ((@x27 (asserted $x157)))
 (let ((@x1459 (mp (mp @x27 @x1946 $x612) (quant-intro (proof-bind ?x923) (= $x612 $x880)) $x880)))
 (let ((@x793 (mp (mp @x1459 (rewrite (= $x880 $x880)) $x880) (quant-intro (proof-bind ?x1188) (= $x880 $x1167)) $x1167)))
 (let ((@x2233 (mp~ (mp @x793 (quant-intro (proof-bind ?x1835) (= $x1167 $x567)) $x567) (sk (~ $x567 $x670)) $x670)))
 (let ((@x649 (mp @x2233 (rewrite (= $x670 $x945)) $x945)))
 (let ((@x1698 (and-elim @x649 $x1693)))
 (let ((@x1048 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1693) $x2210)) @x1698 $x2210)))
 (let (($x1865 (<= ?x1694 0)))
 (let ((@x202 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1693) $x1865)) @x1698 $x1865)))
 (let (($x2135 (not (<= ?x179 0))))
 (let (($x1041 (<= ?x542 0)))
 (let (($x622 (>= ?x542 0)))
 (let ((@x1992 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x587 (not $x1041) (not $x622))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x622)) @x202 @x1048 false) $x622) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1041)) @x202 @x1048 false) $x1041) $x587)))
 (let (($x944 (>= ?x456 0)))
 (let (($x1683 (<= ?x456 0)))
 (let ((@x505 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1388 (not $x1683) (not $x944))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1683)) @x202 @x1048 false) $x1683) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x944)) @x202 @x1048 false) $x944) $x1388)))
 (let (($x825 (>= ?x849 0)))
 (let (($x228 (<= ?x849 0)))
 (let ((@x380 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1525 (not $x228) (not $x825))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x228)) @x202 @x1048 false) $x228) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x825)) @x202 @x1048 false) $x825) $x1525)))
 (let ((@x295 (unit-resolution (unit-resolution (and-elim @x649 $x183) @x380 @x505 (or $x555 $x2154)) @x1992 $x2154)))
 (let (($x2204 (>= ?x179 0)))
 (let ((@x1681 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1125 $x2135 (not $x2204))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2204)) @x202 @x1048 false) $x2204) @x295 $x2135)))
 ((_ th-lemma arith farkas 1 1 1) @x1681 @x202 @x1048 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        82
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1200
 :arith-nonlinear-bounds    44
 :arith-num-rows            12
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 110
 :arith-tableau-max-rows    12
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                4.02
 :memory                    3.36
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1485852
 :num-checks                1
 :propagations              36
 :rlimit-count              13102
 :time                      0.01
 :total-time                0.02)
