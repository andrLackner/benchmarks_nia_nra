unsat
((set-logic NIA)
(declare-fun b!2 () Int)
(declare-fun p!5 () Int)
(declare-fun a!4 () Int)
(declare-fun q!3 () Int)
(declare-fun s!0 () Int)
(declare-fun r!1 () Int)
(proof
(let ((?x480 (* p!5 b!2)))
 (let ((?x476 (* (- 1) ?x480)))
 (let ((?x448 (* q!3 a!4)))
 (let ((?x128 (* q00 a00)))
 (let ((?x174 (* (- 1) ?x128)))
 (let ((?x113 (* p00 b00)))
 (let ((?x211 (+ ?x113 ?x174 ?x448 ?x476)))
 (let (($x582 (>= ?x211 0)))
 (let (($x333 (= ?x211 0)))
 (let ((?x127 (* (- 1) ?x113)))
 (let ((?x579 (+ ?x127 ?x128 (* (- 1) ?x448) ?x480)))
 (let ((?x305 (* (- 1) q!3)))
 (let ((?x625 (+ ?x305 p!5)))
 (let ((?x181 (+ a!4 (* (- 1) b!2))))
 (let ((?x622 (* (+ (* (- 1) s!0) r!1) ?x181 ?x181 ?x625 ?x625 ?x625 ?x579 s!0 s!0 s!0 b!2 b!2 b!2 q!3)))
 (let (($x627 (= ?x622 0)))
 (let ((?x164 (+ (* (- 1) a!4) b!2)))
 (let ((?x477 (* (- 1) r!1)))
 (let ((?x379 (+ s!0 ?x477)))
 (let ((?x570 (* ?x379 ?x379 ?x379 ?x164 ?x164 ?x164 (+ q!3 (* (- 1) p!5)) ?x579 r!1 a!4 a!4 p!5 p!5 p!5)))
 (let (($x592 (= ?x570 0)))
 (let (($x569 (not $x592)))
 (let (($x566 (or $x569 (not $x627))))
 (let ((?x573 (+ (* q00 r00 b!2) (* (- 1) (* q00 a00 s!0)) (* s00 a00 q!3) (* (- 1) (* r00 b00 q!3)) (* p00 b00 s!0) (* (- 1) (* p00 s00 b!2)))))
 (let ((?x388 (+ (* s00 a00 p!5) (* (- 1) (* q00 a00 r!1)) (* q00 r00 a!4) (* (- 1) (* p00 s00 a!4)) (* p00 b00 r!1) (* (- 1) (* r00 b00 p!5)))))
 (let ((?x171 (* b!2 r!1)))
 (let ((?x124 (* s00 a00)))
 (let (($x269 (= (+ ?x124 (* (- 1) (* r00 b00)) (* (- 1) (* s!0 a!4)) ?x171) 0)))
 (let ((?x425 (* q!3 r!1)))
 (let ((?x41 (* q00 r00)))
 (let ((?x135 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x637 (and (= (+ ?x37 ?x135 (* (- 1) (* s!0 p!5)) ?x425) 0) $x269 $x333 (= ?x388 0) (= ?x573 0) $x566)))
 (let ((?x167 (+ ?x127 (* (- 1) (* a!4 q!3)) ?x128 ?x480)))
 (let ((?x310 (+ p!5 ?x305)))
 (let ((?x209 (* (+ r!1 (* (- 1) s!0)) ?x181 ?x181 ?x310 ?x310 ?x310 ?x167 s!0 s!0 s!0 b!2 b!2 b!2 q!3)))
 (let ((?x335 (+ ?x477 s!0)))
 (let ((?x155 (* ?x335 ?x335 ?x335 ?x164 ?x164 ?x164 (+ (* (- 1) p!5) q!3) ?x167 r!1 a!4 a!4 p!5 p!5 p!5)))
 (let ((?x485 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x244 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let (($x190 (= (+ (* a!4 s!0) (* (- 1) ?x171) (* (- 1) ?x124) (* r00 b00)) 0)))
 (let (($x289 (and (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) ?x425)) 0) $x190 (= (+ ?x113 (* a!4 q!3) ?x174 ?x476) 0) (= ?x244 0) (= ?x485 0) (or (not (= ?x155 0)) (not (= ?x209 0))))))
 (let (($x158 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x159 (* p b)))
 (let ((?x128 (* q00 a00)))
 (let ((?x120 (* a q)))
 (let ((?x121 (* (- 1) ?x120)))
 (let ((?x113 (* p00 b00)))
 (let ((?x127 (* (- 1) ?x113)))
 (let ((?x474 (+ ?x127 ?x121 ?x128 ?x159)))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x457 (* ?x340 ?x254 ?x254 ?x302 ?x302 ?x302 ?x474 s s s b b b q)))
 (let ((?x255 (* (- 1) p)))
 (let ((?x267 (+ ?x255 q)))
 (let ((?x349 (* (- 1) a)))
 (let ((?x491 (+ ?x349 b)))
 (let ((?x451 (* (- 1) r)))
 (let ((?x447 (+ ?x451 s)))
 (let ((?x381 (* ?x447 ?x447 ?x447 ?x491 ?x491 ?x491 ?x267 ?x474 r a a p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x306 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x311 (= ?x306 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x242 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x243 (= ?x242 0)))
 (let (($x177 (= (+ ?x113 ?x120 (* (- 1) ?x128) (* (- 1) ?x159)) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x152 (= (+ ?x33 ?x133 ?x41 (* (- 1) (* q r))) 0)))
 (and $x152 $x157 $x177 $x243 $x311 (or (not (= ?x381 0)) (not (= ?x457 0)))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x217 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x57 (* b00 p00)))
 (let ((?x279 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x220 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x279 (* (+ b (* (- 1) a)) p))))
 (let ((?x255 (* (- 1) p)))
 (let ((?x462 (+ q ?x255)))
 (let ((?x349 (* (- 1) a)))
 (let ((?x196 (+ b ?x349)))
 (let ((?x451 (* (- 1) r)))
 (let ((?x228 (+ s ?x451)))
 (let ((?x145 (* ?x228 ?x228 ?x228 ?x196 ?x196 ?x196 ?x462 ?x220 r a a p p p)))
 (let ((?x191 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x279 (* (+ p (* (- 1) q)) b))))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x224 (* ?x340 ?x254 ?x254 ?x302 ?x302 ?x302 ?x191 s s s b b b q)))
 (let (($x315 (or (not (= ?x224 0)) (not (= ?x145 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x203 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x210 (= ?x203 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x265 (* p00 s00 a)))
 (let ((?x114 (* b00 r00 p)))
 (let ((?x151 (+ ?x114 ?x265 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x156 (= (+ (* q a) (* (- 1) ?x55) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x201 (* r b)))
 (let (($x296 (= (+ ?x201 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x135 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x129 (* r q)))
 (and (= (+ ?x129 (* (- 1) (* s p)) ?x37 ?x135) 0) $x296 $x156 (= ?x151 0) $x210 $x315)))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x153 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x159 (* p b)))
 (let ((?x128 (* q00 a00)))
 (let ((?x120 (* a q)))
 (let ((?x121 (* (- 1) ?x120)))
 (let ((?x113 (* p00 b00)))
 (let ((?x127 (* (- 1) ?x113)))
 (let ((?x474 (+ ?x127 ?x121 ?x128 ?x159)))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x457 (* ?x340 ?x254 ?x254 ?x302 ?x302 ?x302 ?x474 s s s b b b q)))
 (let ((?x255 (* (- 1) p)))
 (let ((?x267 (+ ?x255 q)))
 (let ((?x349 (* (- 1) a)))
 (let ((?x491 (+ ?x349 b)))
 (let ((?x451 (* (- 1) r)))
 (let ((?x447 (+ ?x451 s)))
 (let ((?x381 (* ?x447 ?x447 ?x447 ?x491 ?x491 ?x491 ?x267 ?x474 r a a p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x306 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x311 (= ?x306 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x242 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x243 (= ?x242 0)))
 (let (($x177 (= (+ ?x113 ?x120 (* (- 1) ?x128) (* (- 1) ?x159)) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x152 (= (+ ?x33 ?x133 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x422 (and $x152 $x157 $x177 $x243 $x311 (or (not (= ?x381 0)) (not (= ?x457 0))))))
 (let ((?x57 (* b00 p00)))
 (let ((?x279 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x220 (+ (* (- 1) (* (+ q ?x255) a)) ?x55 ?x279 (* (+ b ?x349) p))))
 (let ((?x462 (+ q ?x255)))
 (let ((?x196 (+ b ?x349)))
 (let ((?x228 (+ s ?x451)))
 (let ((?x145 (* ?x228 ?x228 ?x228 ?x196 ?x196 ?x196 ?x462 ?x220 r a a p p p)))
 (let ((?x224 (* ?x340 ?x254 ?x254 ?x302 ?x302 ?x302 (+ (* (- 1) (* ?x254 q)) ?x55 ?x279 (* ?x302 b)) s s s b b b q)))
 (let (($x315 (or (not (= ?x224 0)) (not (= ?x145 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x203 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x210 (= ?x203 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x265 (* p00 s00 a)))
 (let ((?x114 (* b00 r00 p)))
 (let ((?x151 (+ ?x114 ?x265 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x156 (= (+ (* q a) (* (- 1) ?x55) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x201 (* r b)))
 (let (($x296 (= (+ ?x201 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x467 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x229 (and $x467 $x296 $x156 (= ?x151 0) $x210 $x315)))
 (rewrite (= $x229 $x422)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x138 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x57 (* b00 p00)))
 (let ((?x279 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x220 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x279 (* (+ b (* (- 1) a)) p))))
 (let ((?x255 (* (- 1) p)))
 (let ((?x462 (+ q ?x255)))
 (let ((?x349 (* (- 1) a)))
 (let ((?x196 (+ b ?x349)))
 (let ((?x451 (* (- 1) r)))
 (let ((?x228 (+ s ?x451)))
 (let ((?x145 (* ?x228 ?x228 ?x228 ?x196 ?x196 ?x196 ?x462 ?x220 r a a p p p)))
 (let ((?x191 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x279 (* (+ p (* (- 1) q)) b))))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x224 (* ?x340 ?x254 ?x254 ?x302 ?x302 ?x302 ?x191 s s s b b b q)))
 (let (($x315 (or (not (= ?x224 0)) (not (= ?x145 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x203 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x210 (= ?x203 0)))
 (let ((?x471 (* a00 s00 p)))
 (let ((?x487 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x257 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x487 ?x471 (* (- 1) (* a00 q00 r)))))
 (let ((?x51 (* b00 r00)))
 (let ((?x342 (* s a)))
 (let (($x162 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x342 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x280 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x280 ?x133 ?x41) 0) $x162 (= (+ (* (- 1) (* q a)) ?x55 ?x279 (* b p)) 0) (= ?x257 0) $x210 $x315))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x218 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x57 (* b00 p00)))
 (let ((?x279 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x220 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x279 (* (+ b (* (- 1) a)) p))))
 (let ((?x255 (* (- 1) p)))
 (let ((?x462 (+ q ?x255)))
 (let ((?x349 (* (- 1) a)))
 (let ((?x196 (+ b ?x349)))
 (let ((?x451 (* (- 1) r)))
 (let ((?x228 (+ s ?x451)))
 (let ((?x145 (* ?x228 ?x228 ?x228 ?x196 ?x196 ?x196 ?x462 ?x220 r a a p p p)))
 (let ((?x191 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x279 (* (+ p (* (- 1) q)) b))))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x224 (* ?x340 ?x254 ?x254 ?x302 ?x302 ?x302 ?x191 s s s b b b q)))
 (let (($x315 (or (not (= ?x224 0)) (not (= ?x145 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x203 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x210 (= ?x203 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x265 (* p00 s00 a)))
 (let ((?x114 (* b00 r00 p)))
 (let ((?x151 (+ ?x114 ?x265 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x156 (= (+ (* q a) (* (- 1) ?x55) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x201 (* r b)))
 (let (($x296 (= (+ ?x201 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x135 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x129 (* r q)))
 (let (($x229 (and (= (+ ?x129 (* (- 1) (* s p)) ?x37 ?x135) 0) $x296 $x156 (= ?x151 0) $x210 $x315)))
 (let ((?x471 (* a00 s00 p)))
 (let ((?x487 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x291 (= (+ (* (- 1) ?x114) (* (- 1) ?x265) ?x65 ?x487 ?x471 (* (- 1) ?x69)) 0)))
 (let (($x162 (= (+ (* (- 1) ?x201) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x112 (and (= (+ (* (- 1) ?x129) (* s p) (* (- 1) ?x37) ?x41) 0) $x162 (= (+ (* (- 1) (* q a)) ?x55 ?x279 (* b p)) 0) $x291 $x210 $x315)))
 (rewrite (= $x112 $x229)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x102 (- s r)))
 (let ((?x95 (- q p)))
 (let ((?x99 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x101 (+ (- (+ (* ?x31 a ?x95) (* a00 q00)) (* b00 p00)) (* ?x99 p))))
 (let ((?x103 (* ?x101 ?x31 a a ?x99 ?x99 ?x99 p p p ?x95 r ?x102 ?x102 ?x102)))
 (let ((?x88 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x90 (+ (- (+ (* ?x31 ?x84 q) (* a00 q00)) (* b00 p00)) (* b ?x88))))
 (let ((?x92 (* ?x90 ?x31 ?x84 ?x84 b b b ?x88 ?x88 ?x88 q (- r s) s s s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let ((?x41 (* q00 r00)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x123 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x57 (* b00 p00)))
 (let ((?x279 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x220 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x279 (* (+ b (* (- 1) a)) p))))
 (let ((?x255 (* (- 1) p)))
 (let ((?x462 (+ q ?x255)))
 (let ((?x349 (* (- 1) a)))
 (let ((?x196 (+ b ?x349)))
 (let ((?x451 (* (- 1) r)))
 (let ((?x228 (+ s ?x451)))
 (let ((?x145 (* ?x228 ?x228 ?x228 ?x196 ?x196 ?x196 ?x462 ?x220 r a a p p p)))
 (let ((?x191 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x279 (* (+ p (* (- 1) q)) b))))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x224 (* ?x340 ?x254 ?x254 ?x302 ?x302 ?x302 ?x191 s s s b b b q)))
 (let (($x315 (or (not (= ?x224 0)) (not (= ?x145 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x203 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x210 (= ?x203 0)))
 (let ((?x471 (* a00 s00 p)))
 (let ((?x487 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x257 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x487 ?x471 (* (- 1) (* a00 q00 r)))))
 (let ((?x51 (* b00 r00)))
 (let ((?x342 (* s a)))
 (let (($x162 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x342 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x280 (* s p)))
 (let (($x112 (and (= (+ (* (- 1) (* r q)) ?x280 ?x133 ?x41) 0) $x162 (= (+ (* (- 1) (* q a)) ?x55 ?x279 (* b p)) 0) (= ?x257 0) $x210 $x315)))
 (let ((?x102 (- s r)))
 (let ((?x95 (- q p)))
 (let ((?x99 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x103 (* (+ (- (+ (* ?x31 a ?x95) ?x55) ?x57) (* ?x99 p)) ?x31 a a ?x99 ?x99 ?x99 p p p ?x95 r ?x102 ?x102 ?x102)))
 (let ((?x88 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x92 (* (+ (- (+ (* ?x31 ?x84 q) ?x55) ?x57) (* b ?x88)) ?x31 ?x84 ?x84 b b b ?x88 ?x88 ?x88 q (- r s) s s s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x107 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) ?x57) (* b p)) 0) (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0))))))
 (rewrite (= $x107 $x112))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x137 (mp (mp @x109 (quant-intro (proof-bind ?x123) (= $x108 $x138)) $x138) (rewrite (= $x138 $x138)) $x138)))
 (let ((@x428 (mp (mp @x137 (quant-intro (proof-bind ?x218) (= $x138 $x217)) $x217) (quant-intro (proof-bind ?x153) (= $x217 $x158)) $x158)))
 (let ((@x636 (mp (mp~ @x428 (sk (~ $x158 $x289)) $x289) (rewrite (= $x289 $x637)) $x637)))
 (let ((@x565 (and-elim @x636 $x333)))
 (let ((@x383 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x333) $x582)) @x565 $x582)))
 (let (($x581 (<= ?x211 0)))
 (let ((@x215 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x333) $x581)) @x565 $x581)))
 (let (($x400 (not (<= ?x570 0))))
 (let (($x595 (>= ?x622 0)))
 (let (($x571 (<= ?x622 0)))
 (let ((@x194 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x627 (not $x571) (not $x595))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x571)) @x215 @x383 false) $x571) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x595)) @x215 @x383 false) $x595) $x627)))
 (let (($x572 (>= ?x570 0)))
 (let ((@x398 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x592 $x400 (not $x572))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x572)) @x215 @x383 false) $x572) (unit-resolution (and-elim @x636 $x566) @x194 $x569) $x400)))
 ((_ th-lemma arith farkas 1 1 1) @x398 @x215 @x383 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             352
 :arith-nonlinear-horner    42
 :arith-num-rows            12
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 51
 :arith-tableau-max-rows    12
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                3.62
 :memory                    3.13
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                1404030
 :num-checks                1
 :propagations              19
 :rlimit-count              12139
 :time                      0.01
 :total-time                0.02)
