unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun r!2 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x2358 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 1) (* q!3 d!1 d!1)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 4) (* x!0 d!1)) (* (- 8) r!2) (* 2 (* q!3 d!1)) (* 4 (* r!2 d!1)))))
 (let (($x1930 (>= ?x2358 0)))
 (let (($x1913 (= ?x2358 0)))
 (let ((?x2354 (* r!2 d!1)))
 (let ((?x1688 (* (- 4) ?x2354)))
 (let ((?x1767 (* q!3 d!1)))
 (let ((?x2888 (* (- 2) ?x1767)))
 (let ((?x1833 (* 8 r!2)))
 (let ((?x1029 (* x!0 d!1)))
 (let ((?x1730 (* 4 ?x1029)))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x254 (* q!3 d!1 d!1)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x855 (+ ?x182 ?x230 ?x214 ?x254 ?x280 ?x318 ?x1730 ?x1833 ?x2888 ?x1688)))
 (let ((?x1723 (* (- 1) x!0)))
 (let ((?x1209 (* 2 r!2)))
 (let ((?x1874 (+ (- 2) q!3 ?x1209 ?x1723 (* (- 1) d!1))))
 (let ((?x1837 (+ 2 d!1)))
 (let ((?x233 (+ (- 4) q!3)))
 (let ((?x1034 (* (- 1) (* ?x233 ?x233 ?x1837 ?x1874 ?x1874 ?x1874))))
 (let ((?x1722 (* q!3 q!3)))
 (let ((?x2198 (* (- 1) ?x1722)))
 (let ((?x1764 (* (- 1) (* ?x233 ?x233 ?x1837 ?x1837 ?x1874 ?x1874 r!2))))
 (let ((?x396 (* (- 1) (* ?x233 ?x1837 ?x1837 ?x1837 ?x1874))))
 (let ((?x381 (* ?x233 ?x233 ?x233 ?x1837 ?x1837 ?x1837 ?x1874)))
 (let ((?x1750 (* 8 q!3)))
 (let ((?x1811 (* (+ (- 16) ?x1750 ?x381 ?x396 ?x1764 ?x2198 ?x1034) ?x855)))
 (let (($x1408 (= ?x1811 0)))
 (let (($x1226 (not $x1408)))
 (let ((?x413 (+ (- 4) q!3 ?x1209 ?x1723 (* (- 2) d!1))))
 (let ((?x2174 (+ (- 8) q!3)))
 (let ((?x1027 (* (- 1) (* ?x2174 ?x1837 ?x1837 ?x1837 ?x413))))
 (let ((?x248 (* (- 1) (* ?x2174 ?x2174 ?x1837 ?x413 ?x413 ?x413))))
 (let ((?x1620 (* (- 1) (* ?x2174 ?x2174 ?x1837 ?x1837 ?x413 ?x413 r!2))))
 (let ((?x428 (* ?x2174 ?x2174 ?x2174 ?x1837 ?x1837 ?x1837 ?x413)))
 (let ((?x1870 (* 16 q!3)))
 (let ((?x512 (* (+ (- 64) ?x1870 ?x428 ?x2198 ?x1620 ?x248 ?x1027) ?x855)))
 (let (($x461 (= ?x512 0)))
 (let ((?x1694 (* (- 1) (* ?x1837 ?x1837 ?x1837 (+ 4 q!3) (+ 2 q!3 ?x1209 ?x1723 d!1)))))
 (let ((?x2333 (+ 2 q!3 ?x1209 ?x1723 d!1)))
 (let ((?x1766 (+ 4 q!3)))
 (let ((?x1717 (* (- 1) (* ?x1837 ?x1837 ?x1766 ?x1766 ?x2333 ?x2333 r!2))))
 (let ((?x1203 (* ?x1837 ?x1837 ?x1837 ?x1766 ?x1766 ?x1766 ?x2333)))
 (let ((?x1905 (* (- 1) (* ?x1837 ?x1766 ?x1766 ?x2333 ?x2333 ?x2333))))
 (let ((?x1899 (* (- 8) q!3)))
 (let ((?x1918 (* (+ (- 16) ?x1899 ?x1905 ?x1203 ?x2198 ?x1717 ?x1694) ?x855)))
 (let (($x647 (= ?x1918 0)))
 (let ((?x2424 (* (- 1) (* q!3 q!3 q!3 q!3 r!2 d!1 d!1))))
 (let ((?x2415 (* q!3 x!0 d!1 d!1 d!1)))
 (let ((?x1785 (* (- 24) (* q!3 q!3 r!2 r!2 r!2 d!1))))
 (let ((?x2526 (* (- 24) (* q!3 r!2 d!1))))
 (let ((?x1443 (* (- 32) (* q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1768 (* (- 1) (* q!3 q!3 q!3 q!3 q!3 d!1))))
 (let ((?x1140 (* 4 (* q!3 q!3 r!2 r!2 x!0 d!1 d!1))))
 (let ((?x1341 (* (- 6) (* q!3 q!3 q!3 x!0 d!1 d!1))))
 (let ((?x2889 (* (- 1) (* q!3 q!3 q!3 x!0 d!1 d!1 d!1))))
 (let ((?x1792 (* (- 3) (* q!3 q!3 q!3 x!0 x!0 d!1))))
 (let ((?x1557 (* (- 2) (* q!3 q!3 q!3 q!3 q!3))))
 (let ((?x1629 (* 3 (* q!3 q!3 q!3 q!3 x!0 d!1))))
 (let ((?x1142 (* (- 16) (* q!3 q!3 q!3 q!3 r!2))))
 (let ((?x1513 (* 28 (* q!3 q!3 r!2 r!2 x!0 d!1))))
 (let ((?x1278 (* (- 1) (* q!3 q!3 d!1 d!1 d!1))))
 (let ((?x1309 (* (- 28) (* q!3 q!3 q!3 r!2 r!2 d!1))))
 (let ((?x2364 (* (- 8) (* q!3 q!3 q!3 x!0))))
 (let ((?x283 (* 2 (* q!3 q!3 q!3 r!2 x!0 d!1 d!1))))
 (let ((?x1903 (* 2 (* q!3 q!3 q!3 r!2 d!1 d!1 d!1))))
 (let ((?x1888 (* q!3 q!3 q!3 q!3 d!1 d!1 d!1)))
 (let ((?x1849 (* 16 (* q!3 q!3 q!3 r!2))))
 (let ((?x1879 (* 24 (* q!3 q!3 q!3 r!2 d!1))))
 (let ((?x1656 (* 12 (* q!3 q!3 q!3 r!2 d!1 d!1))))
 (let ((?x1883 (* 6 (* q!3 q!3 q!3 q!3 d!1 d!1))))
 (let ((?x1877 (* 12 (* q!3 q!3 q!3 q!3 d!1))))
 (let ((?x2395 (* 6 (* q!3 q!3 q!3 q!3 x!0))))
 (let ((?x360 (* (- 12) (* q!3 r!2 d!1 d!1))))
 (let ((?x480 (* 12 (* q!3 x!0 d!1))))
 (let ((?x1782 (* 6 (* q!3 x!0 d!1 d!1))))
 (let ((?x1032 (* (- 9) ?x1722)))
 (let ((?x2200 (* 20 (* q!3 q!3 q!3 r!2 x!0 d!1))))
 (let ((?x2179 (* (- 40) (* q!3 q!3 q!3 r!2 r!2))))
 (let ((?x1686 (* (- 6) (* q!3 q!3 q!3 x!0 x!0))))
 (let ((?x1875 (* 8 (* q!3 q!3 q!3 q!3))))
 (let ((?x2175 (* (- 4) (* q!3 q!3 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x1958 (* (- 16) (* q!3 r!2))))
 (let ((?x1761 (* (- 10) (* q!3 q!3 r!2 x!0 x!0 d!1))))
 (let ((?x1631 (* (- 12) (* q!3 q!3 q!3 x!0 d!1))))
 (let ((?x1867 (* (- 16) (* q!3 q!3 r!2 x!0 x!0))))
 (let ((?x2207 (* (- 1) (* q!3 q!3 r!2 x!0 x!0 d!1 d!1))))
 (let ((?x2110 (* (- 12) (* q!3 q!3 d!1))))
 (let ((?x245 (* 40 (* q!3 q!3 r!2 r!2 x!0))))
 (let ((?x1307 (* (- 4) (* q!3 q!3 q!3 r!2 r!2 d!1 d!1))))
 (let ((?x421 (* (- 10) (* q!3 q!3 q!3 q!3 r!2 d!1))))
 (let ((?x672 (* q!3 q!3 x!0 x!0 x!0 d!1)))
 (let ((?x454 (* 32 (* q!3 q!3 q!3 r!2 x!0))))
 (let ((?x234 (* 8 (* q!3 x!0))))
 (let ((?x1873 (* (- 6) (* q!3 q!3 d!1 d!1))))
 (let ((?x1234 (* (- 2) (* q!3 r!2 d!1 d!1 d!1))))
 (let ((?x1127 (* 2 (* q!3 q!3 x!0 x!0 x!0))))
 (let ((?x1248 (+ ?x1127 ?x1234 ?x1873 ?x234 ?x454 ?x672 ?x421 ?x1307 ?x245 ?x2110 ?x2207 ?x1867 ?x1631 ?x1761 ?x1958 ?x2175 ?x1875 ?x1686 ?x2179 ?x2200 ?x1032 ?x1782 ?x480 ?x360 ?x2395 ?x1877 ?x1883 ?x1656 ?x1879 ?x1849 ?x1888 ?x1903 ?x283 ?x2364 ?x1309 ?x1278 ?x1513 ?x1142 ?x1629 ?x1557 ?x1792 ?x2889 ?x1341 ?x1140 ?x1768 ?x1443 ?x2526 ?x1785 ?x2415 ?x2424)))
 (let ((?x1155 (* ?x1248 ?x855)))
 (let (($x1860 (= ?x1155 0)))
 (let (($x184 (not $x1860)))
 (let (($x1957 (or $x184 (not $x647) (not $x461) $x1226)))
 (let (($x469 (and $x1913 $x1957)))
 (let ((?x2519 (+ ?x1833 ?x182 ?x230 ?x214 ?x280 ?x318 ?x1730 ?x2888 ?x1688 ?x254)))
 (let ((?x1912 (+ ?x1513 ?x672 ?x1792 ?x1958 ?x283 ?x2207 ?x2200 ?x1142 ?x1631 ?x1341 ?x2889 ?x1629 ?x1768 ?x1761 ?x1557 ?x480 ?x1782 ?x2415 ?x2395 ?x2179 ?x454 ?x1686 ?x2175 ?x1873 ?x2110 ?x360 ?x1140 ?x234 ?x1234 ?x2526 ?x1278 ?x245 ?x421 ?x1867 ?x1127 ?x1309 ?x1443 ?x2424 ?x1307 ?x1785 ?x1875 ?x1877 ?x1883 ?x1879 ?x1656 ?x1849 ?x1888 ?x1903 ?x2364 ?x1032)))
 (let (($x2038 (or (not (= (* (+ (- 16) ?x1899 ?x1717 ?x1694 ?x1905 ?x2198 ?x1203) ?x2519) 0)) (not (= (* (+ (- 64) ?x1870 ?x428 ?x1027 ?x1620 ?x248 ?x2198) ?x2519) 0)) (not (= (* (+ (- 16) ?x1750 ?x1764 ?x396 ?x1034 ?x381 ?x2198) ?x2519) 0)) (not (= (* ?x1912 ?x2519) 0)))))
 (let (($x1915 (and (= ?x2519 0) $x2038)))
 (let (($x1701 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2760 (* q d d)))
 (let ((?x2755 (* r d)))
 (let ((?x2756 (* (- 4) ?x2755)))
 (let ((?x2754 (* (- 2) (* q d))))
 (let ((?x2505 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x406 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2505 ?x2754 ?x2756 ?x2760)))
 (let ((?x2780 (* q q)))
 (let ((?x2611 (* (- 9) ?x2780)))
 (let ((?x2709 (* (- 8) (* q q q x))))
 (let ((?x2705 (* 2 (* q q q r d d d))))
 (let ((?x2704 (* q q q q d d d)))
 (let ((?x2697 (* 16 (* q q q r))))
 (let ((?x2696 (* 6 (* q q q q d d))))
 (let ((?x2548 (* 8 (* q q q q))))
 (let ((?x2508 (* q q r r r d)))
 (let ((?x2590 (* (- 24) ?x2508)))
 (let ((?x2514 (* (- 4) (* q q q r r d d))))
 (let ((?x2448 (* (- 1) (* q q q q r d d))))
 (let ((?x2429 (* (- 32) (* q q r r r))))
 (let ((?x2445 (* q q q r r d)))
 (let ((?x203 (* (- 28) ?x2445)))
 (let ((?x2441 (* 2 (* q q x x x))))
 (let ((?x2439 (* (- 16) (* q q r x x))))
 (let ((?x2440 (* q q q q r d)))
 (let ((?x320 (* (- 10) ?x2440)))
 (let ((?x2437 (* 40 (* q q r r x))))
 (let ((?x2403 (* (- 1) (* q q d d d))))
 (let ((?x2388 (* (- 24) (* q r d))))
 (let ((?x2382 (* (- 2) (* q r d d d))))
 (let ((?x2385 (* 8 (* q x))))
 (let ((?x219 (* 4 (* q q r r x d d))))
 (let ((?x2389 (* (- 12) (* q r d d))))
 (let ((?x2342 (* (- 12) (* q q d))))
 (let ((?x2344 (* (- 6) (* q q d d))))
 (let ((?x2305 (* (- 4) (* q q r r r d d))))
 (let ((?x2296 (* (- 6) (* q q q x x))))
 (let ((?x2246 (* 32 (* q q q r x))))
 (let ((?x2232 (* (- 40) (* q q q r r))))
 (let ((?x2214 (* 6 (* q q q q x))))
 (let ((?x2152 (* q x d d d)))
 (let ((?x227 (* 6 (* q x d d))))
 (let ((?x453 (* 12 (* q x d))))
 (let ((?x1975 (* (- 2) (* q q q q q))))
 (let ((?x319 (* (- 10) (* q q r x x d))))
 (let ((?x1268 (* (- 1) (* q q q q q d))))
 (let ((?x779 (* 3 (* q q q q x d))))
 (let ((?x918 (* (- 1) (* q q q x d d d))))
 (let ((?x768 (* (- 16) (* q q q q r))))
 (let ((?x1130 (* 20 (* q q q r x d))))
 (let ((?x2294 (* (- 1) (* q q r x x d d))))
 (let ((?x2243 (* 2 (* q q q r x d d))))
 (let ((?x291 (* q r)))
 (let ((?x2405 (* (- 16) ?x291)))
 (let ((?x1305 (* (- 3) (* q q q x x d))))
 (let ((?x246 (* q q x x x d)))
 (let ((?x1128 (* 28 (* q q r r x d))))
 (let ((?x1396 (+ ?x1128 ?x246 ?x1305 ?x2405 ?x2243 ?x2294 ?x1130 ?x768 (* (- 12) (* q q q x d)) (* (- 6) (* q q q x d d)) ?x918 ?x779 ?x1268 ?x319 ?x1975 ?x453 ?x227 ?x2152 ?x2214 ?x2232 ?x2246 ?x2296 ?x2305 ?x2344 ?x2342 ?x2389 ?x219 ?x2385 ?x2382 ?x2388 ?x2403 ?x2437 ?x320 ?x2439 ?x2441 ?x203 ?x2429 ?x2448 ?x2514 ?x2590 ?x2548 (* 12 (* q q q q d)) ?x2696 (* 24 (* q q q r d)) (* 12 (* q q q r d d)) ?x2697 ?x2704 ?x2705 ?x2709 ?x2611)))
 (let ((?x2775 (* (- 1) ?x2780)))
 (let ((?x2565 (* (- 1) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x1447 (+ (- 2) q ?x144 ?x179 ?x2565)))
 (let ((?x2687 (+ 2 d)))
 (let ((?x2560 (+ (- 4) q)))
 (let ((?x30 (* 8 q)))
 (let ((?x468 (+ (- 16) ?x30 (* (- 1) (* ?x2560 ?x2560 ?x2687 ?x2687 ?x1447 ?x1447 r)) (* (- 1) (* ?x2560 ?x2687 ?x2687 ?x2687 ?x1447)) (* (- 1) (* ?x2560 ?x2560 ?x2687 ?x1447 ?x1447 ?x1447)) (* ?x2560 ?x2560 ?x2560 ?x2687 ?x2687 ?x2687 ?x1447) ?x2775)))
 (let ((?x2573 (* (- 2) d)))
 (let ((?x583 (+ (- 4) q ?x144 ?x179 ?x2573)))
 (let ((?x2577 (+ (- 8) q)))
 (let ((?x235 (* 16 q)))
 (let ((?x1472 (+ (- 64) ?x235 (* ?x2577 ?x2577 ?x2577 ?x2687 ?x2687 ?x2687 ?x583) (* (- 1) (* ?x2577 ?x2687 ?x2687 ?x2687 ?x583)) (* (- 1) (* ?x2577 ?x2577 ?x2687 ?x2687 ?x583 ?x583 r)) (* (- 1) (* ?x2577 ?x2577 ?x2687 ?x583 ?x583 ?x583)) ?x2775)))
 (let ((?x2662 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2771 (+ 4 q)))
 (let ((?x2779 (* (- 8) q)))
 (let ((?x2904 (+ (- 16) ?x2779 (* (- 1) (* ?x2687 ?x2687 ?x2771 ?x2771 ?x2662 ?x2662 r)) (* (- 1) (* ?x2687 ?x2687 ?x2687 ?x2771 ?x2662)) (* (- 1) (* ?x2687 ?x2771 ?x2771 ?x2662 ?x2662 ?x2662)) ?x2775 (* ?x2687 ?x2687 ?x2687 ?x2771 ?x2771 ?x2771 ?x2662))))
 (let (($x1025 (or (not (= (* ?x2904 ?x406) 0)) (not (= (* ?x1472 ?x406) 0)) (not (= (* ?x468 ?x406) 0)) (not (= (* ?x1396 ?x406) 0)))))
 (let (($x2501 (= ?x406 0)))
 (and $x2501 $x1025)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1488 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2760 (* q d d)))
 (let ((?x2755 (* r d)))
 (let ((?x2756 (* (- 4) ?x2755)))
 (let ((?x2729 (* 2 (* d 4))))
 (let ((?x2754 (* (- 2) (* q d))))
 (let ((?x2738 (* (- 8) d)))
 (let ((?x2505 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x2662 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2771 (+ 4 q)))
 (let ((?x2687 (+ 2 d)))
 (let ((?x2780 (* q q)))
 (let ((?x2775 (* (- 1) ?x2780)))
 (let ((?x2779 (* (- 8) q)))
 (let ((?x2904 (+ (- 16) ?x2779 (* (- 1) (* ?x2687 ?x2687 ?x2771 ?x2771 ?x2662 ?x2662 r)) (* (- 1) (* ?x2687 ?x2687 ?x2687 ?x2771 ?x2662)) (* (- 1) (* ?x2687 ?x2771 ?x2771 ?x2662 ?x2662 ?x2662)) ?x2775 (* ?x2687 ?x2687 ?x2687 ?x2771 ?x2771 ?x2771 ?x2662))))
 (let ((?x2851 (* ?x2904 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2505 ?x2738 ?x2754 ?x2729 ?x2756 ?x2760))))
 (let ((?x406 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2505 ?x2754 ?x2756 ?x2760)))
 (let ((?x2611 (* (- 9) ?x2780)))
 (let ((?x2709 (* (- 8) (* q q q x))))
 (let ((?x2705 (* 2 (* q q q r d d d))))
 (let ((?x2704 (* q q q q d d d)))
 (let ((?x2697 (* 16 (* q q q r))))
 (let ((?x2701 (* q q q r d d)))
 (let ((?x2706 (* 8 ?x2701)))
 (let ((?x2700 (* q q q r d)))
 (let ((?x2695 (* 16 ?x2700)))
 (let ((?x2696 (* 6 (* q q q q d d))))
 (let ((?x2698 (* q q q q d)))
 (let ((?x2693 (* 8 ?x2698)))
 (let ((?x2551 (* 2 (* d 2 q q q q))))
 (let ((?x2548 (* 8 (* q q q q))))
 (let ((?x2508 (* q q r r r d)))
 (let ((?x2590 (* (- 24) ?x2508)))
 (let ((?x2514 (* (- 4) (* q q q r r d d))))
 (let ((?x2448 (* (- 1) (* q q q q r d d))))
 (let ((?x2429 (* (- 32) (* q q r r r))))
 (let ((?x2445 (* q q q r r d)))
 (let ((?x203 (* (- 28) ?x2445)))
 (let ((?x2441 (* 2 (* q q x x x))))
 (let ((?x2439 (* (- 16) (* q q r x x))))
 (let ((?x2440 (* q q q q r d)))
 (let ((?x320 (* (- 10) ?x2440)))
 (let ((?x2437 (* 40 (* q q r r x))))
 (let ((?x2403 (* (- 1) (* q q d d d))))
 (let ((?x2388 (* (- 24) (* q r d))))
 (let ((?x2382 (* (- 2) (* q r d d d))))
 (let ((?x2385 (* 8 (* q x))))
 (let ((?x219 (* 4 (* q q r r x d d))))
 (let ((?x2389 (* (- 12) (* q r d d))))
 (let ((?x2342 (* (- 12) (* q q d))))
 (let ((?x2344 (* (- 6) (* q q d d))))
 (let ((?x2305 (* (- 4) (* q q r r r d d))))
 (let ((?x2296 (* (- 6) (* q q q x x))))
 (let ((?x2246 (* 32 (* q q q r x))))
 (let ((?x2232 (* (- 40) (* q q q r r))))
 (let ((?x2214 (* 6 (* q q q q x))))
 (let ((?x2152 (* q x d d d)))
 (let ((?x227 (* 6 (* q x d d))))
 (let ((?x453 (* 12 (* q x d))))
 (let ((?x1975 (* (- 2) (* q q q q q))))
 (let ((?x319 (* (- 10) (* q q r x x d))))
 (let ((?x1268 (* (- 1) (* q q q q q d))))
 (let ((?x779 (* 3 (* q q q q x d))))
 (let ((?x918 (* (- 1) (* q q q x d d d))))
 (let ((?x768 (* (- 16) (* q q q q r))))
 (let ((?x1130 (* 20 (* q q q r x d))))
 (let ((?x2294 (* (- 1) (* q q r x x d d))))
 (let ((?x2243 (* 2 (* q q q r x d d))))
 (let ((?x291 (* q r)))
 (let ((?x2405 (* (- 16) ?x291)))
 (let ((?x1305 (* (- 3) (* q q q x x d))))
 (let ((?x246 (* q q x x x d)))
 (let ((?x1128 (* 28 (* q q r r x d))))
 (let ((?x2593 (+ ?x1128 ?x246 ?x1305 ?x2405 ?x2243 ?x2294 ?x1130 ?x768 (* (- 8) (* q q q x d)) (* 2 (* d 2 ?x144 q q q)) (* 2 (* d d ?x144 q q q)) (* 2 (* d 2 ?x179 q q q)) (* 2 (* d d ?x179 q q q)) (* (- 4) (* q q q x d d)) ?x918 ?x779 ?x1268 ?x319 ?x1975 ?x453 ?x227 ?x2152 ?x2214 ?x2232 ?x2246 ?x2296 ?x2305 ?x2344 ?x2342 ?x2389 ?x219 ?x2385 ?x2382 ?x2388 ?x2403 ?x2437 ?x320 ?x2439 ?x2441 ?x203 ?x2429 ?x2448 ?x2514 ?x2590 ?x2548 ?x2551 ?x2693 ?x2696 ?x2695 ?x2706 ?x2697 ?x2704 ?x2705 ?x2709 ?x2611)))
 (let ((?x2762 (* 8 d)))
 (let ((?x1895 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x2505 ?x2762 ?x2754 ?x2756 ?x2760)))
 (let ((?x2565 (* (- 1) d)))
 (let ((?x1447 (+ (- 2) q ?x144 ?x179 ?x2565)))
 (let ((?x2560 (+ (- 4) q)))
 (let ((?x30 (* 8 q)))
 (let ((?x468 (+ (- 16) ?x30 (* (- 1) (* ?x2560 ?x2560 ?x2687 ?x2687 ?x1447 ?x1447 r)) (* (- 1) (* ?x2560 ?x2687 ?x2687 ?x2687 ?x1447)) (* (- 1) (* ?x2560 ?x2560 ?x2687 ?x1447 ?x1447 ?x1447)) (* ?x2560 ?x2560 ?x2560 ?x2687 ?x2687 ?x2687 ?x1447) ?x2775)))
 (let ((?x2567 (* 16 d)))
 (let ((?x242 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x2505 ?x2567 ?x2754 ?x2756 ?x2760)))
 (let ((?x2573 (* (- 2) d)))
 (let ((?x583 (+ (- 4) q ?x144 ?x179 ?x2573)))
 (let ((?x2577 (+ (- 8) q)))
 (let ((?x235 (* 16 q)))
 (let ((?x1472 (+ (- 64) ?x235 (* ?x2577 ?x2577 ?x2577 ?x2687 ?x2687 ?x2687 ?x583) (* (- 1) (* ?x2577 ?x2687 ?x2687 ?x2687 ?x583)) (* (- 1) (* ?x2577 ?x2577 ?x2687 ?x2687 ?x583 ?x583 r)) (* (- 1) (* ?x2577 ?x2577 ?x2687 ?x583 ?x583 ?x583)) ?x2775)))
 (let (($x397 (or (not (= (* ?x1472 ?x242) 0)) (not (= (* ?x468 ?x1895) 0)) (not (= (* ?x2593 ?x406) 0)) (not (= ?x2851 0)))))
 (let (($x2501 (= ?x406 0)))
 (and $x2501 $x397)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x340 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2760 (* q d d)))
 (let ((?x2755 (* r d)))
 (let ((?x2756 (* (- 4) ?x2755)))
 (let ((?x2754 (* (- 2) (* q d))))
 (let ((?x2505 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x406 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2505 ?x2754 ?x2756 ?x2760)))
 (let ((?x2780 (* q q)))
 (let ((?x2611 (* (- 9) ?x2780)))
 (let ((?x2709 (* (- 8) (* q q q x))))
 (let ((?x2705 (* 2 (* q q q r d d d))))
 (let ((?x2704 (* q q q q d d d)))
 (let ((?x2697 (* 16 (* q q q r))))
 (let ((?x2696 (* 6 (* q q q q d d))))
 (let ((?x2548 (* 8 (* q q q q))))
 (let ((?x2508 (* q q r r r d)))
 (let ((?x2590 (* (- 24) ?x2508)))
 (let ((?x2514 (* (- 4) (* q q q r r d d))))
 (let ((?x2448 (* (- 1) (* q q q q r d d))))
 (let ((?x2429 (* (- 32) (* q q r r r))))
 (let ((?x2445 (* q q q r r d)))
 (let ((?x203 (* (- 28) ?x2445)))
 (let ((?x2441 (* 2 (* q q x x x))))
 (let ((?x2439 (* (- 16) (* q q r x x))))
 (let ((?x2440 (* q q q q r d)))
 (let ((?x320 (* (- 10) ?x2440)))
 (let ((?x2437 (* 40 (* q q r r x))))
 (let ((?x2403 (* (- 1) (* q q d d d))))
 (let ((?x2388 (* (- 24) (* q r d))))
 (let ((?x2382 (* (- 2) (* q r d d d))))
 (let ((?x2385 (* 8 (* q x))))
 (let ((?x219 (* 4 (* q q r r x d d))))
 (let ((?x2389 (* (- 12) (* q r d d))))
 (let ((?x2342 (* (- 12) (* q q d))))
 (let ((?x2344 (* (- 6) (* q q d d))))
 (let ((?x2305 (* (- 4) (* q q r r r d d))))
 (let ((?x2296 (* (- 6) (* q q q x x))))
 (let ((?x2246 (* 32 (* q q q r x))))
 (let ((?x2232 (* (- 40) (* q q q r r))))
 (let ((?x2214 (* 6 (* q q q q x))))
 (let ((?x2152 (* q x d d d)))
 (let ((?x227 (* 6 (* q x d d))))
 (let ((?x453 (* 12 (* q x d))))
 (let ((?x1975 (* (- 2) (* q q q q q))))
 (let ((?x319 (* (- 10) (* q q r x x d))))
 (let ((?x1268 (* (- 1) (* q q q q q d))))
 (let ((?x779 (* 3 (* q q q q x d))))
 (let ((?x918 (* (- 1) (* q q q x d d d))))
 (let ((?x768 (* (- 16) (* q q q q r))))
 (let ((?x1130 (* 20 (* q q q r x d))))
 (let ((?x2294 (* (- 1) (* q q r x x d d))))
 (let ((?x2243 (* 2 (* q q q r x d d))))
 (let ((?x291 (* q r)))
 (let ((?x2405 (* (- 16) ?x291)))
 (let ((?x1305 (* (- 3) (* q q q x x d))))
 (let ((?x246 (* q q x x x d)))
 (let ((?x1128 (* 28 (* q q r r x d))))
 (let ((?x1396 (+ ?x1128 ?x246 ?x1305 ?x2405 ?x2243 ?x2294 ?x1130 ?x768 (* (- 12) (* q q q x d)) (* (- 6) (* q q q x d d)) ?x918 ?x779 ?x1268 ?x319 ?x1975 ?x453 ?x227 ?x2152 ?x2214 ?x2232 ?x2246 ?x2296 ?x2305 ?x2344 ?x2342 ?x2389 ?x219 ?x2385 ?x2382 ?x2388 ?x2403 ?x2437 ?x320 ?x2439 ?x2441 ?x203 ?x2429 ?x2448 ?x2514 ?x2590 ?x2548 (* 12 (* q q q q d)) ?x2696 (* 24 (* q q q r d)) (* 12 (* q q q r d d)) ?x2697 ?x2704 ?x2705 ?x2709 ?x2611)))
 (let ((?x2775 (* (- 1) ?x2780)))
 (let ((?x2565 (* (- 1) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x1447 (+ (- 2) q ?x144 ?x179 ?x2565)))
 (let ((?x2687 (+ 2 d)))
 (let ((?x2560 (+ (- 4) q)))
 (let ((?x30 (* 8 q)))
 (let ((?x468 (+ (- 16) ?x30 (* (- 1) (* ?x2560 ?x2560 ?x2687 ?x2687 ?x1447 ?x1447 r)) (* (- 1) (* ?x2560 ?x2687 ?x2687 ?x2687 ?x1447)) (* (- 1) (* ?x2560 ?x2560 ?x2687 ?x1447 ?x1447 ?x1447)) (* ?x2560 ?x2560 ?x2560 ?x2687 ?x2687 ?x2687 ?x1447) ?x2775)))
 (let ((?x2573 (* (- 2) d)))
 (let ((?x583 (+ (- 4) q ?x144 ?x179 ?x2573)))
 (let ((?x2577 (+ (- 8) q)))
 (let ((?x235 (* 16 q)))
 (let ((?x1472 (+ (- 64) ?x235 (* ?x2577 ?x2577 ?x2577 ?x2687 ?x2687 ?x2687 ?x583) (* (- 1) (* ?x2577 ?x2687 ?x2687 ?x2687 ?x583)) (* (- 1) (* ?x2577 ?x2577 ?x2687 ?x2687 ?x583 ?x583 r)) (* (- 1) (* ?x2577 ?x2577 ?x2687 ?x583 ?x583 ?x583)) ?x2775)))
 (let ((?x2662 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2771 (+ 4 q)))
 (let ((?x2779 (* (- 8) q)))
 (let ((?x2904 (+ (- 16) ?x2779 (* (- 1) (* ?x2687 ?x2687 ?x2771 ?x2771 ?x2662 ?x2662 r)) (* (- 1) (* ?x2687 ?x2687 ?x2687 ?x2771 ?x2662)) (* (- 1) (* ?x2687 ?x2771 ?x2771 ?x2662 ?x2662 ?x2662)) ?x2775 (* ?x2687 ?x2687 ?x2687 ?x2771 ?x2771 ?x2771 ?x2662))))
 (let (($x1025 (or (not (= (* ?x2904 ?x406) 0)) (not (= (* ?x1472 ?x406) 0)) (not (= (* ?x468 ?x406) 0)) (not (= (* ?x1396 ?x406) 0)))))
 (let (($x2501 (= ?x406 0)))
 (let (($x1687 (and $x2501 $x1025)))
 (let ((?x2729 (* 2 (* d 4))))
 (let ((?x2738 (* (- 8) d)))
 (let ((?x2851 (* ?x2904 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2505 ?x2738 ?x2754 ?x2729 ?x2756 ?x2760))))
 (let ((?x2701 (* q q q r d d)))
 (let ((?x2706 (* 8 ?x2701)))
 (let ((?x2700 (* q q q r d)))
 (let ((?x2695 (* 16 ?x2700)))
 (let ((?x2698 (* q q q q d)))
 (let ((?x2693 (* 8 ?x2698)))
 (let ((?x2551 (* 2 (* d 2 q q q q))))
 (let ((?x2593 (+ ?x1128 ?x246 ?x1305 ?x2405 ?x2243 ?x2294 ?x1130 ?x768 (* (- 8) (* q q q x d)) (* 2 (* d 2 ?x144 q q q)) (* 2 (* d d ?x144 q q q)) (* 2 (* d 2 ?x179 q q q)) (* 2 (* d d ?x179 q q q)) (* (- 4) (* q q q x d d)) ?x918 ?x779 ?x1268 ?x319 ?x1975 ?x453 ?x227 ?x2152 ?x2214 ?x2232 ?x2246 ?x2296 ?x2305 ?x2344 ?x2342 ?x2389 ?x219 ?x2385 ?x2382 ?x2388 ?x2403 ?x2437 ?x320 ?x2439 ?x2441 ?x203 ?x2429 ?x2448 ?x2514 ?x2590 ?x2548 ?x2551 ?x2693 ?x2696 ?x2695 ?x2706 ?x2697 ?x2704 ?x2705 ?x2709 ?x2611)))
 (let ((?x2762 (* 8 d)))
 (let ((?x1895 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x2505 ?x2762 ?x2754 ?x2756 ?x2760)))
 (let ((?x2567 (* 16 d)))
 (let ((?x242 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x2505 ?x2567 ?x2754 ?x2756 ?x2760)))
 (let (($x397 (or (not (= (* ?x1472 ?x242) 0)) (not (= (* ?x468 ?x1895) 0)) (not (= (* ?x2593 ?x406) 0)) (not (= ?x2851 0)))))
 (let (($x1476 (and $x2501 $x397)))
 (rewrite (= $x1476 $x1687))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1599 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1676 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x1293 (+ 2 ?x144 ?x179 q d)))
 (let ((?x2687 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x2033 (* 4 (* ?x2687 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x2762 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x2351 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x1589 (+ 16 ?x427 ?x2351 ?x30 ?x2762 ?x182 ?x2033 ?x214 ?x230 (* ?x2687 ?x2687 (+ 4 q)) (* (- 2) (* ?x2687 (+ 4 q))) ?x280 (* (- 4) (* ?x2687 ?x1293)) ?x1676)))
 (let ((?x2771 (+ 4 q)))
 (let ((?x1570 (+ (* (- 1) (* ?x2687 ?x2771 ?x2771 ?x1293 ?x1293 ?x1293)) (* (- 1) (* ?x2771 ?x2771)) (* (- 1) (* ?x2687 ?x2687 ?x2771 ?x2771 ?x1293 ?x1293 r)) (* (- 1) (* ?x2687 ?x2687 ?x2687 ?x2771 ?x1293)) (* ?x2687 ?x2687 ?x2687 ?x2771 ?x2771 ?x2771 ?x1293))))
 (let ((?x1524 (+ ?x427 ?x2351 ?x30 ?x182 ?x2033 ?x214 ?x230 (* ?x2687 ?x2687 q) (* (- 2) (* ?x2687 q)) ?x280 (* (- 4) (* ?x2687 (+ ?x144 ?x179 q))) ?x1676)))
 (let ((?x1501 (* (- 1) (* ?x2687 ?x2687 (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) r q q))))
 (let ((?x2780 (* q q)))
 (let ((?x2775 (* (- 1) ?x2780)))
 (let ((?x1493 (+ ?x144 ?x179 q)))
 (let ((?x1507 (+ (* (- 1) (* ?x2687 ?x1493 ?x1493 ?x1493 q q)) ?x2775 ?x1501 (* (- 1) (* ?x2687 ?x2687 ?x2687 ?x1493 q)) (* ?x2687 ?x2687 ?x2687 ?x1493 q q q))))
 (let ((?x2738 (* (- 8) d)))
 (let ((?x1489 (+ (- 16) ?x427 ?x2351 ?x30 ?x2738 ?x182 ?x2033 ?x214 ?x230 (* (+ (- 4) q) ?x2687 ?x2687) (* (- 2) (* (+ (- 4) q) ?x2687)) ?x280 (* (- 4) (* ?x2687 (+ (- 2) ?x144 ?x179 q (* (- 1) d)))) ?x1676)))
 (let ((?x2565 (* (- 1) d)))
 (let ((?x587 (+ (- 2) ?x144 ?x179 q ?x2565)))
 (let ((?x2560 (+ (- 4) q)))
 (let ((?x1446 (+ (* (- 1) (* ?x2560 ?x2560 ?x2687 ?x587 ?x587 ?x587)) (* (- 1) (* ?x2560 ?x2560)) (* (- 1) (* ?x2560 ?x2560 ?x2687 ?x2687 ?x587 ?x587 r)) (* (- 1) (* ?x2560 ?x2687 ?x2687 ?x2687 ?x587)) (* ?x2560 ?x2560 ?x2560 ?x2687 ?x2687 ?x2687 ?x587))))
 (let ((?x580 (+ (- 32) ?x427 ?x2351 ?x30 (* (- 16) d) ?x182 ?x2033 ?x214 ?x230 (* (+ (- 8) q) ?x2687 ?x2687) (* (- 2) (* (+ (- 8) q) ?x2687)) ?x280 (* (- 4) (* ?x2687 (+ (- 4) ?x144 ?x179 q (* (- 2) d)))) ?x1676)))
 (let ((?x2573 (* (- 2) d)))
 (let ((?x961 (+ (- 4) ?x144 ?x179 q ?x2573)))
 (let ((?x2577 (+ (- 8) q)))
 (let ((?x1018 (+ (* (- 1) (* ?x2577 ?x2577 ?x2687 ?x961 ?x961 ?x961)) (* (- 1) (* ?x2577 ?x2577)) (* (- 1) (* ?x2577 ?x2577 ?x2687 ?x2687 ?x961 ?x961 r)) (* (- 1) (* ?x2577 ?x2687 ?x2687 ?x2687 ?x961)) (* ?x2577 ?x2577 ?x2577 ?x2687 ?x2687 ?x2687 ?x961))))
 (let (($x1594 (or (not (= (* ?x1018 ?x580) 0)) (not (= (* ?x1446 ?x1489) 0)) (not (= (* ?x1507 ?x1524) 0)) (not (= (* ?x1570 ?x1589) 0)))))
 (let ((?x2505 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x1359 (+ ?x211 ?x182 ?x2505 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1676)))
 (and (= ?x1359 0) $x1594)))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1511 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2760 (* q d d)))
 (let ((?x2755 (* r d)))
 (let ((?x2756 (* (- 4) ?x2755)))
 (let ((?x2729 (* 2 (* d 4))))
 (let ((?x2754 (* (- 2) (* q d))))
 (let ((?x2738 (* (- 8) d)))
 (let ((?x2505 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x2662 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2771 (+ 4 q)))
 (let ((?x2687 (+ 2 d)))
 (let ((?x2780 (* q q)))
 (let ((?x2775 (* (- 1) ?x2780)))
 (let ((?x2779 (* (- 8) q)))
 (let ((?x2904 (+ (- 16) ?x2779 (* (- 1) (* ?x2687 ?x2687 ?x2771 ?x2771 ?x2662 ?x2662 r)) (* (- 1) (* ?x2687 ?x2687 ?x2687 ?x2771 ?x2662)) (* (- 1) (* ?x2687 ?x2771 ?x2771 ?x2662 ?x2662 ?x2662)) ?x2775 (* ?x2687 ?x2687 ?x2687 ?x2771 ?x2771 ?x2771 ?x2662))))
 (let ((?x2851 (* ?x2904 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2505 ?x2738 ?x2754 ?x2729 ?x2756 ?x2760))))
 (let ((?x406 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2505 ?x2754 ?x2756 ?x2760)))
 (let ((?x2611 (* (- 9) ?x2780)))
 (let ((?x2709 (* (- 8) (* q q q x))))
 (let ((?x2705 (* 2 (* q q q r d d d))))
 (let ((?x2704 (* q q q q d d d)))
 (let ((?x2697 (* 16 (* q q q r))))
 (let ((?x2701 (* q q q r d d)))
 (let ((?x2706 (* 8 ?x2701)))
 (let ((?x2700 (* q q q r d)))
 (let ((?x2695 (* 16 ?x2700)))
 (let ((?x2696 (* 6 (* q q q q d d))))
 (let ((?x2698 (* q q q q d)))
 (let ((?x2693 (* 8 ?x2698)))
 (let ((?x2551 (* 2 (* d 2 q q q q))))
 (let ((?x2548 (* 8 (* q q q q))))
 (let ((?x2508 (* q q r r r d)))
 (let ((?x2590 (* (- 24) ?x2508)))
 (let ((?x2514 (* (- 4) (* q q q r r d d))))
 (let ((?x2448 (* (- 1) (* q q q q r d d))))
 (let ((?x2429 (* (- 32) (* q q r r r))))
 (let ((?x2445 (* q q q r r d)))
 (let ((?x203 (* (- 28) ?x2445)))
 (let ((?x2441 (* 2 (* q q x x x))))
 (let ((?x2439 (* (- 16) (* q q r x x))))
 (let ((?x2440 (* q q q q r d)))
 (let ((?x320 (* (- 10) ?x2440)))
 (let ((?x2437 (* 40 (* q q r r x))))
 (let ((?x2403 (* (- 1) (* q q d d d))))
 (let ((?x2388 (* (- 24) (* q r d))))
 (let ((?x2382 (* (- 2) (* q r d d d))))
 (let ((?x2385 (* 8 (* q x))))
 (let ((?x219 (* 4 (* q q r r x d d))))
 (let ((?x2389 (* (- 12) (* q r d d))))
 (let ((?x2342 (* (- 12) (* q q d))))
 (let ((?x2344 (* (- 6) (* q q d d))))
 (let ((?x2305 (* (- 4) (* q q r r r d d))))
 (let ((?x2296 (* (- 6) (* q q q x x))))
 (let ((?x2246 (* 32 (* q q q r x))))
 (let ((?x2232 (* (- 40) (* q q q r r))))
 (let ((?x2214 (* 6 (* q q q q x))))
 (let ((?x2152 (* q x d d d)))
 (let ((?x227 (* 6 (* q x d d))))
 (let ((?x453 (* 12 (* q x d))))
 (let ((?x1975 (* (- 2) (* q q q q q))))
 (let ((?x319 (* (- 10) (* q q r x x d))))
 (let ((?x1268 (* (- 1) (* q q q q q d))))
 (let ((?x779 (* 3 (* q q q q x d))))
 (let ((?x918 (* (- 1) (* q q q x d d d))))
 (let ((?x768 (* (- 16) (* q q q q r))))
 (let ((?x1130 (* 20 (* q q q r x d))))
 (let ((?x2294 (* (- 1) (* q q r x x d d))))
 (let ((?x2243 (* 2 (* q q q r x d d))))
 (let ((?x291 (* q r)))
 (let ((?x2405 (* (- 16) ?x291)))
 (let ((?x1305 (* (- 3) (* q q q x x d))))
 (let ((?x246 (* q q x x x d)))
 (let ((?x1128 (* 28 (* q q r r x d))))
 (let ((?x2593 (+ ?x1128 ?x246 ?x1305 ?x2405 ?x2243 ?x2294 ?x1130 ?x768 (* (- 8) (* q q q x d)) (* 2 (* d 2 ?x144 q q q)) (* 2 (* d d ?x144 q q q)) (* 2 (* d 2 ?x179 q q q)) (* 2 (* d d ?x179 q q q)) (* (- 4) (* q q q x d d)) ?x918 ?x779 ?x1268 ?x319 ?x1975 ?x453 ?x227 ?x2152 ?x2214 ?x2232 ?x2246 ?x2296 ?x2305 ?x2344 ?x2342 ?x2389 ?x219 ?x2385 ?x2382 ?x2388 ?x2403 ?x2437 ?x320 ?x2439 ?x2441 ?x203 ?x2429 ?x2448 ?x2514 ?x2590 ?x2548 ?x2551 ?x2693 ?x2696 ?x2695 ?x2706 ?x2697 ?x2704 ?x2705 ?x2709 ?x2611)))
 (let ((?x2762 (* 8 d)))
 (let ((?x1895 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x2505 ?x2762 ?x2754 ?x2756 ?x2760)))
 (let ((?x2565 (* (- 1) d)))
 (let ((?x1447 (+ (- 2) q ?x144 ?x179 ?x2565)))
 (let ((?x2560 (+ (- 4) q)))
 (let ((?x30 (* 8 q)))
 (let ((?x468 (+ (- 16) ?x30 (* (- 1) (* ?x2560 ?x2560 ?x2687 ?x2687 ?x1447 ?x1447 r)) (* (- 1) (* ?x2560 ?x2687 ?x2687 ?x2687 ?x1447)) (* (- 1) (* ?x2560 ?x2560 ?x2687 ?x1447 ?x1447 ?x1447)) (* ?x2560 ?x2560 ?x2560 ?x2687 ?x2687 ?x2687 ?x1447) ?x2775)))
 (let ((?x2567 (* 16 d)))
 (let ((?x242 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x2505 ?x2567 ?x2754 ?x2756 ?x2760)))
 (let ((?x2573 (* (- 2) d)))
 (let ((?x583 (+ (- 4) q ?x144 ?x179 ?x2573)))
 (let ((?x2577 (+ (- 8) q)))
 (let ((?x235 (* 16 q)))
 (let ((?x1472 (+ (- 64) ?x235 (* ?x2577 ?x2577 ?x2577 ?x2687 ?x2687 ?x2687 ?x583) (* (- 1) (* ?x2577 ?x2687 ?x2687 ?x2687 ?x583)) (* (- 1) (* ?x2577 ?x2577 ?x2687 ?x2687 ?x583 ?x583 r)) (* (- 1) (* ?x2577 ?x2577 ?x2687 ?x583 ?x583 ?x583)) ?x2775)))
 (let (($x397 (or (not (= (* ?x1472 ?x242) 0)) (not (= (* ?x468 ?x1895) 0)) (not (= (* ?x2593 ?x406) 0)) (not (= ?x2851 0)))))
 (let (($x2501 (= ?x406 0)))
 (let (($x1476 (and $x2501 $x397)))
 (let ((?x1676 (* 4 (* d00 r00))))
 (let ((?x2033 (* 4 (* ?x2687 r))))
 (let ((?x2351 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x1589 (+ 16 ?x427 ?x2351 ?x30 ?x2762 ?x182 ?x2033 ?x214 ?x230 (* ?x2687 ?x2687 ?x2771) (* (- 2) (* ?x2687 ?x2771)) ?x280 (* (- 4) (* ?x2687 (+ 2 ?x144 ?x179 q d))) ?x1676)))
 (let ((?x1293 (+ 2 ?x144 ?x179 q d)))
 (let ((?x1570 (+ (* (- 1) (* ?x2687 ?x2771 ?x2771 ?x1293 ?x1293 ?x1293)) (* (- 1) (* ?x2771 ?x2771)) (* (- 1) (* ?x2687 ?x2687 ?x2771 ?x2771 ?x1293 ?x1293 r)) (* (- 1) (* ?x2687 ?x2687 ?x2687 ?x2771 ?x1293)) (* ?x2687 ?x2687 ?x2687 ?x2771 ?x2771 ?x2771 ?x1293))))
 (let ((?x1524 (+ ?x427 ?x2351 ?x30 ?x182 ?x2033 ?x214 ?x230 (* ?x2687 ?x2687 q) (* (- 2) (* ?x2687 q)) ?x280 (* (- 4) (* ?x2687 (+ ?x144 ?x179 q))) ?x1676)))
 (let ((?x1501 (* (- 1) (* ?x2687 ?x2687 (+ ?x144 ?x179 q) (+ ?x144 ?x179 q) r q q))))
 (let ((?x1493 (+ ?x144 ?x179 q)))
 (let ((?x1507 (+ (* (- 1) (* ?x2687 ?x1493 ?x1493 ?x1493 q q)) ?x2775 ?x1501 (* (- 1) (* ?x2687 ?x2687 ?x2687 ?x1493 q)) (* ?x2687 ?x2687 ?x2687 ?x1493 q q q))))
 (let ((?x1489 (+ (- 16) ?x427 ?x2351 ?x30 ?x2738 ?x182 ?x2033 ?x214 ?x230 (* ?x2560 ?x2687 ?x2687) (* (- 2) (* ?x2560 ?x2687)) ?x280 (* (- 4) (* ?x2687 (+ (- 2) ?x144 ?x179 q ?x2565))) ?x1676)))
 (let ((?x587 (+ (- 2) ?x144 ?x179 q ?x2565)))
 (let ((?x1446 (+ (* (- 1) (* ?x2560 ?x2560 ?x2687 ?x587 ?x587 ?x587)) (* (- 1) (* ?x2560 ?x2560)) (* (- 1) (* ?x2560 ?x2560 ?x2687 ?x2687 ?x587 ?x587 r)) (* (- 1) (* ?x2560 ?x2687 ?x2687 ?x2687 ?x587)) (* ?x2560 ?x2560 ?x2560 ?x2687 ?x2687 ?x2687 ?x587))))
 (let ((?x580 (+ (- 32) ?x427 ?x2351 ?x30 (* (- 16) d) ?x182 ?x2033 ?x214 ?x230 (* ?x2577 ?x2687 ?x2687) (* (- 2) (* ?x2577 ?x2687)) ?x280 (* (- 4) (* ?x2687 (+ (- 4) ?x144 ?x179 q ?x2573))) ?x1676)))
 (let ((?x961 (+ (- 4) ?x144 ?x179 q ?x2573)))
 (let ((?x1018 (+ (* (- 1) (* ?x2577 ?x2577 ?x2687 ?x961 ?x961 ?x961)) (* (- 1) (* ?x2577 ?x2577)) (* (- 1) (* ?x2577 ?x2577 ?x2687 ?x2687 ?x961 ?x961 r)) (* (- 1) (* ?x2577 ?x2687 ?x2687 ?x2687 ?x961)) (* ?x2577 ?x2577 ?x2577 ?x2687 ?x2687 ?x2687 ?x961))))
 (let (($x1594 (or (not (= (* ?x1018 ?x580) 0)) (not (= (* ?x1446 ?x1489) 0)) (not (= (* ?x1507 ?x1524) 0)) (not (= (* ?x1570 ?x1589) 0)))))
 (let ((?x1359 (+ ?x211 ?x182 ?x2505 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1676)))
 (let (($x1598 (and (= ?x1359 0) $x1594)))
 (rewrite (= $x1598 $x1476)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x175 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x146 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x166 (- (- (* (- 1) ?x62 ?x152 ?x152 ?x146 ?x146 ?x146) (* ?x152 ?x152)) (* ?x62 ?x62 ?x152 ?x152 ?x146 ?x146 r))))
 (let ((?x169 (+ (- ?x166 (* ?x62 ?x62 ?x62 ?x152 ?x146)) (* ?x62 ?x62 ?x62 ?x152 ?x152 ?x152 ?x146))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x150 (- (+ (- (* 8 ?x146) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x157 (+ (- (+ (- ?x150 ?x41) (* ?x62 ?x62 ?x152)) (* 2 ?x62 ?x152)) ?x49)))
 (let ((?x117 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x137 (- (- (* (- 1) ?x62 ?x123 ?x123 ?x117 ?x117 ?x117) (* ?x123 ?x123)) (* ?x62 ?x62 ?x123 ?x123 ?x117 ?x117 r))))
 (let ((?x140 (+ (- ?x137 (* ?x62 ?x62 ?x62 ?x123 ?x117)) (* ?x62 ?x62 ?x62 ?x123 ?x123 ?x123 ?x117))))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x109 (- (- (* (- 1) ?x62 q q ?x90 ?x90 ?x90) (* q q)) (* ?x62 ?x62 q q ?x90 ?x90 r))))
 (let ((?x112 (+ (- ?x109 (* ?x62 ?x62 ?x62 q ?x90)) (* ?x62 ?x62 ?x62 q q q ?x90))))
 (let ((?x94 (- (+ (- (* 8 ?x90) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x100 (+ (- (+ (- ?x94 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x83 (- (- (* (- 1) ?x62 ?x67 ?x67 ?x59 ?x59 ?x59) (* ?x67 ?x67)) (* ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 r))))
 (let ((?x86 (+ (- ?x83 (* ?x62 ?x62 ?x62 ?x67 ?x59)) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x67 ?x59))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x173 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x86) 0)) (not (= (* (+ (- ?x100 (* 4 ?x62 ?x90)) ?x53) ?x112) 0)) (not (= (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) ?x140) 0)) (not (= (* (+ (- ?x157 (* 4 ?x62 ?x146)) ?x53) ?x169) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x173))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x2528 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x1676 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x2536 (+ 2 ?x57 ?x179 q d)))
 (let ((?x285 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1728 (* 4 (* ?x285 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 d)))
 (let ((?x209 (* 8 q)))
 (let ((?x2351 (* (- 8) x)))
 (let ((?x235 (* 16 r)))
 (let ((?x271 (+ 16 ?x235 ?x2351 ?x209 ?x211 ?x182 ?x1728 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 ?x2536)) ?x1676)))
 (let ((?x369 (+ 4 q)))
 (let ((?x1269 (+ (* (- 1) (* ?x285 ?x369 ?x369 ?x2536 ?x2536 ?x2536)) (* (- 1) (* ?x369 ?x369)) (* (- 1) (* ?x285 ?x285 ?x369 ?x369 ?x2536 ?x2536 r)) (* (- 1) (* ?x285 ?x285 ?x285 ?x369 ?x2536)) (* ?x285 ?x285 ?x285 ?x369 ?x369 ?x369 ?x2536))))
 (let ((?x2355 (+ ?x235 ?x2351 ?x209 ?x182 ?x1728 ?x214 ?x230 (* ?x285 ?x285 q) (* (- 2) (* ?x285 q)) ?x280 (* (- 4) (* ?x285 (+ ?x57 ?x179 q))) ?x1676)))
 (let ((?x2423 (* (- 1) (* ?x285 ?x285 (+ ?x57 ?x179 q) (+ ?x57 ?x179 q) r q q))))
 (let ((?x105 (* q q)))
 (let ((?x875 (* (- 1) ?x105)))
 (let ((?x321 (+ ?x57 ?x179 q)))
 (let ((?x821 (+ (* (- 1) (* ?x285 ?x321 ?x321 ?x321 q q)) ?x875 ?x2423 (* (- 1) (* ?x285 ?x285 ?x285 ?x321 q)) (* ?x285 ?x285 ?x285 ?x321 q q q))))
 (let ((?x472 (* (- 8) d)))
 (let ((?x1161 (+ (- 16) ?x235 ?x2351 ?x209 ?x472 ?x182 ?x1728 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 2) ?x57 ?x179 q (* (- 1) d)))) ?x1676)))
 (let ((?x936 (* (- 1) d)))
 (let ((?x1798 (+ (- 2) ?x57 ?x179 q ?x936)))
 (let ((?x362 (+ (- 4) q)))
 (let ((?x1533 (+ (* (- 1) (* ?x362 ?x362 ?x285 ?x1798 ?x1798 ?x1798)) (* (- 1) (* ?x362 ?x362)) (* (- 1) (* ?x362 ?x362 ?x285 ?x285 ?x1798 ?x1798 r)) (* (- 1) (* ?x362 ?x285 ?x285 ?x285 ?x1798)) (* ?x362 ?x362 ?x362 ?x285 ?x285 ?x285 ?x1798))))
 (let ((?x1626 (+ (- 32) ?x235 ?x2351 ?x209 (* (- 16) d) ?x182 ?x1728 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 4) ?x57 ?x179 q (* (- 2) d)))) ?x1676)))
 (let ((?x2482 (* (- 2) d)))
 (let ((?x2348 (+ (- 4) ?x57 ?x179 q ?x2482)))
 (let ((?x2182 (+ (- 8) q)))
 (let ((?x1848 (+ (* (- 1) (* ?x2182 ?x2182 ?x285 ?x2348 ?x2348 ?x2348)) (* (- 1) (* ?x2182 ?x2182)) (* (- 1) (* ?x2182 ?x2182 ?x285 ?x285 ?x2348 ?x2348 r)) (* (- 1) (* ?x2182 ?x285 ?x285 ?x285 ?x2348)) (* ?x2182 ?x2182 ?x2182 ?x285 ?x285 ?x285 ?x2348))))
 (let (($x1405 (or (not (= (* ?x1848 ?x1626) 0)) (not (= (* ?x1533 ?x1161) 0)) (not (= (* ?x821 ?x2355) 0)) (not (= (* ?x1269 ?x271) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1759 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1676)))
 (and (= ?x1759 0) $x1405)))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x297 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x1676 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x2536 (+ 2 ?x57 ?x179 q d)))
 (let ((?x285 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1728 (* 4 (* ?x285 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 d)))
 (let ((?x209 (* 8 q)))
 (let ((?x2351 (* (- 8) x)))
 (let ((?x235 (* 16 r)))
 (let ((?x271 (+ 16 ?x235 ?x2351 ?x209 ?x211 ?x182 ?x1728 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 ?x2536)) ?x1676)))
 (let ((?x369 (+ 4 q)))
 (let ((?x1269 (+ (* (- 1) (* ?x285 ?x369 ?x369 ?x2536 ?x2536 ?x2536)) (* (- 1) (* ?x369 ?x369)) (* (- 1) (* ?x285 ?x285 ?x369 ?x369 ?x2536 ?x2536 r)) (* (- 1) (* ?x285 ?x285 ?x285 ?x369 ?x2536)) (* ?x285 ?x285 ?x285 ?x369 ?x369 ?x369 ?x2536))))
 (let ((?x2355 (+ ?x235 ?x2351 ?x209 ?x182 ?x1728 ?x214 ?x230 (* ?x285 ?x285 q) (* (- 2) (* ?x285 q)) ?x280 (* (- 4) (* ?x285 (+ ?x57 ?x179 q))) ?x1676)))
 (let ((?x2423 (* (- 1) (* ?x285 ?x285 (+ ?x57 ?x179 q) (+ ?x57 ?x179 q) r q q))))
 (let ((?x105 (* q q)))
 (let ((?x875 (* (- 1) ?x105)))
 (let ((?x321 (+ ?x57 ?x179 q)))
 (let ((?x821 (+ (* (- 1) (* ?x285 ?x321 ?x321 ?x321 q q)) ?x875 ?x2423 (* (- 1) (* ?x285 ?x285 ?x285 ?x321 q)) (* ?x285 ?x285 ?x285 ?x321 q q q))))
 (let ((?x472 (* (- 8) d)))
 (let ((?x1161 (+ (- 16) ?x235 ?x2351 ?x209 ?x472 ?x182 ?x1728 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 2) ?x57 ?x179 q (* (- 1) d)))) ?x1676)))
 (let ((?x936 (* (- 1) d)))
 (let ((?x1798 (+ (- 2) ?x57 ?x179 q ?x936)))
 (let ((?x362 (+ (- 4) q)))
 (let ((?x1533 (+ (* (- 1) (* ?x362 ?x362 ?x285 ?x1798 ?x1798 ?x1798)) (* (- 1) (* ?x362 ?x362)) (* (- 1) (* ?x362 ?x362 ?x285 ?x285 ?x1798 ?x1798 r)) (* (- 1) (* ?x362 ?x285 ?x285 ?x285 ?x1798)) (* ?x362 ?x362 ?x362 ?x285 ?x285 ?x285 ?x1798))))
 (let ((?x1626 (+ (- 32) ?x235 ?x2351 ?x209 (* (- 16) d) ?x182 ?x1728 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 4) ?x57 ?x179 q (* (- 2) d)))) ?x1676)))
 (let ((?x2482 (* (- 2) d)))
 (let ((?x2348 (+ (- 4) ?x57 ?x179 q ?x2482)))
 (let ((?x2182 (+ (- 8) q)))
 (let ((?x1848 (+ (* (- 1) (* ?x2182 ?x2182 ?x285 ?x2348 ?x2348 ?x2348)) (* (- 1) (* ?x2182 ?x2182)) (* (- 1) (* ?x2182 ?x2182 ?x285 ?x285 ?x2348 ?x2348 r)) (* (- 1) (* ?x2182 ?x285 ?x285 ?x285 ?x2348)) (* ?x2182 ?x2182 ?x2182 ?x285 ?x285 ?x285 ?x2348))))
 (let (($x1405 (or (not (= (* ?x1848 ?x1626) 0)) (not (= (* ?x1533 ?x1161) 0)) (not (= (* ?x821 ?x2355) 0)) (not (= (* ?x1269 ?x271) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1759 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1676)))
 (let (($x1412 (and (= ?x1759 0) $x1405)))
 (let ((?x146 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x166 (- (- (* (- 1) ?x62 ?x152 ?x152 ?x146 ?x146 ?x146) (* ?x152 ?x152)) (* ?x62 ?x62 ?x152 ?x152 ?x146 ?x146 r))))
 (let ((?x169 (+ (- ?x166 (* ?x62 ?x62 ?x62 ?x152 ?x146)) (* ?x62 ?x62 ?x62 ?x152 ?x152 ?x152 ?x146))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x150 (- (+ (- (* 8 ?x146) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x157 (+ (- (+ (- ?x150 ?x41) (* ?x62 ?x62 ?x152)) (* 2 ?x62 ?x152)) ?x49)))
 (let ((?x117 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x137 (- (- (* (- 1) ?x62 ?x123 ?x123 ?x117 ?x117 ?x117) (* ?x123 ?x123)) (* ?x62 ?x62 ?x123 ?x123 ?x117 ?x117 r))))
 (let ((?x140 (+ (- ?x137 (* ?x62 ?x62 ?x62 ?x123 ?x117)) (* ?x62 ?x62 ?x62 ?x123 ?x123 ?x123 ?x117))))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x109 (- (- (* (- 1) ?x62 q q ?x90 ?x90 ?x90) ?x105) (* ?x62 ?x62 q q ?x90 ?x90 r))))
 (let ((?x112 (+ (- ?x109 (* ?x62 ?x62 ?x62 q ?x90)) (* ?x62 ?x62 ?x62 q q q ?x90))))
 (let ((?x94 (- (+ (- (* 8 ?x90) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x100 (+ (- (+ (- ?x94 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x83 (- (- (* (- 1) ?x62 ?x67 ?x67 ?x59 ?x59 ?x59) (* ?x67 ?x67)) (* ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 r))))
 (let ((?x86 (+ (- ?x83 (* ?x62 ?x62 ?x62 ?x67 ?x59)) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x67 ?x59))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x173 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x86) 0)) (not (= (* (+ (- ?x100 (* 4 ?x62 ?x90)) ?x53) ?x112) 0)) (not (= (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) ?x140) 0)) (not (= (* (+ (- ?x157 (* 4 ?x62 ?x146)) ?x53) ?x169) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x174 (and (= ?x54 0) $x173)))
 (rewrite (= $x174 $x1412)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1617 (trans (quant-intro (proof-bind ?x297) (= $x175 $x2528)) (elim-unused (= $x2528 $x1599)) (= $x175 $x1599))))
 (let ((@x27 (asserted $x175)))
 (let ((@x2317 (mp (mp (mp @x27 @x1617 $x1599) (rewrite (= $x1599 $x1599)) $x1599) (quant-intro (proof-bind ?x1511) (= $x1599 $x1488)) $x1488)))
 (let ((@x2204 (mp~ (mp @x2317 (quant-intro (proof-bind ?x340) (= $x1488 $x1701)) $x1701) (sk (~ $x1701 $x1915)) $x1915)))
 (let ((@x504 (mp @x2204 (rewrite (= $x1915 $x469)) $x469)))
 (let ((@x1294 (and-elim @x504 $x1913)))
 (let ((@x2123 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1913) $x1930)) @x1294 $x1930)))
 (let (($x422 (<= ?x2358 0)))
 (let ((@x1956 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1913) $x422)) @x1294 $x422)))
 (let (($x1917 (not (<= ?x1811 0))))
 (let (($x1692 (<= ?x1155 0)))
 (let (($x842 (>= ?x1155 0)))
 (let ((@x1796 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1860 (not $x1692) (not $x842))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x842)) @x1956 @x2123 false) $x842) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1692)) @x1956 @x2123 false) $x1692) $x1860)))
 (let (($x1947 (>= ?x512 0)))
 (let (($x1451 (<= ?x512 0)))
 (let ((@x1760 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x461 (not $x1451) (not $x1947))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1451)) @x1956 @x2123 false) $x1451) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1947)) @x1956 @x2123 false) $x1947) $x461)))
 (let (($x2188 (>= ?x1918 0)))
 (let (($x1398 (<= ?x1918 0)))
 (let ((@x1955 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x647 (not $x1398) (not $x2188))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1398)) @x1956 @x2123 false) $x1398) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2188)) @x1956 @x2123 false) $x2188) $x647)))
 (let ((@x1943 (unit-resolution (unit-resolution (and-elim @x504 $x1957) @x1955 @x1760 (or $x184 $x1226)) @x1796 $x1226)))
 (let (($x1938 (>= ?x1811 0)))
 (let ((@x1942 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1408 $x1917 (not $x1938))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1938)) @x1956 @x2123 false) $x1938) @x1943 $x1917)))
 ((_ th-lemma arith farkas 1 1 1) @x1942 @x1956 @x2123 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        58
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1472
 :arith-nonlinear-bounds    20
 :arith-num-rows            13
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 122
 :arith-tableau-max-rows    13
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                4.17
 :memory                    3.46
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1862126
 :num-checks                1
 :propagations              36
 :rlimit-count              14232
 :time                      0.01
 :total-time                0.02)
