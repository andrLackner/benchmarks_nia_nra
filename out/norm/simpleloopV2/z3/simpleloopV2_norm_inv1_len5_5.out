unsat
((set-logic NIA)
(declare-fun x!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x2179 (+ y00 x00 (* (- 1) y!0) (* (- 1) x!1))))
 (let (($x2238 (<= ?x2179 0)))
 (let (($x1454 (= ?x2179 0)))
 (let ((?x2895 (* y!0 y!0)))
 (let ((?x2256 (* (- 3) ?x2895)))
 (let ((?x2685 (* x00 y!0 y!0 y!0 x!1)))
 (let ((?x2126 (* 3 (* x00 y!0 y!0 x!1 x!1 x!1))))
 (let ((?x1353 (+ 1 y!0)))
 (let ((?x2123 (+ (- 1) x!1)))
 (let ((?x2262 (* ?x2123 ?x2123 ?x2123 ?x1353 ?x1353 ?x1353)))
 (let ((?x2175 (* y00 y!0 y!0 y!0 x!1)))
 (let ((?x1644 (* 3 (* y00 y!0 y!0 x!1 x!1 x!1))))
 (let ((?x2081 (* y!0 x!1 x!1)))
 (let ((?x1985 (* y00 x!1 x!1 x!1)))
 (let ((?x1978 (* y00 y!0 y!0 y!0 x!1 x!1 x!1)))
 (let ((?x1854 (* x00 x!1 x!1 x!1)))
 (let ((?x1506 (* y00 y!0 y!0)))
 (let ((?x1115 (* x00 y!0 y!0 y!0 x!1 x!1 x!1)))
 (let ((?x298 (* x00 y!0 y!0)))
 (let ((?x2132 (+ (* 3 y00) (* 3 x00) (* (- 2) (* x00 y!0 y!0 y!0 x!1 x!1)) ?x298 (* 3 (* x00 y!0)) (* 3 (* x00 y!0 x!1 x!1 x!1)) (* (- 1) (* ?x2123 ?x2123 ?x2123 ?x1353 ?x1353 ?x1353 ?x1353)) (* 2 (* x!1 x!1)) (* (- 6) (* x00 y!0 x!1 x!1)) ?x1115 (* (- 1) (* y!0 y!0 y!0)) (* (- 3) y!0) (* (- 3) x!1) (* (- 1) (* ?x2123 ?x2123 ?x1353 ?x1353 ?x1353 ?x1353)) (* (- 1) (* ?x2123 ?x2123 ?x2123 ?x2123 ?x1353 ?x1353 ?x1353)) (* (- 1) (* x00 x!1)) ?x1506 (* (- 6) (* x00 y!0 y!0 x!1 x!1)) (* 2 (* x00 y!0 x!1)) ?x1854 ?x1978 ?x1985 (* 3 (* x00 y!0 y!0 x!1)) (* 3 (* y00 y!0 x!1 x!1 x!1)) ?x2081 ?x1644 (* (- 2) (* y00 y!0 y!0 y!0 x!1 x!1)) ?x2175 (* (- 1) ?x2262) (* (- 2) (* x00 x!1 x!1)) (* (- 6) (* y00 y!0 y!0 x!1 x!1)) (* 3 (* y00 y!0 y!0 x!1)) (* (- 6) (* y00 y!0 x!1 x!1)) (* (- 2) (* y00 x!1 x!1)) (* (- 1) (* y00 x!1)) (* 3 (* y00 y!0)) (* 2 (* y00 y!0 x!1)) (* (- 1) (* y!0 x!1)) ?x2126 ?x2685 ?x2256)))
 (let (($x2130 (= ?x2132 0)))
 (let (($x2133 (not $x2130)))
 (let ((?x1238 (+ 1 x!1)))
 (let ((?x2892 (+ (- 1) y!0)))
 (let ((?x2897 (* ?x2892 ?x2892 ?x2892 ?x1238 ?x1238 ?x1238)))
 (let ((?x2896 (* ?x2892 ?x2892 ?x2892 ?x2892 ?x1238 ?x1238 ?x1238)))
 (let ((?x2249 (* ?x2892 ?x2892 ?x2892 ?x1238 ?x1238 ?x1238 ?x1238)))
 (let ((?x1272 (* ?x2892 ?x2892 ?x2892 ?x2892 ?x1238 ?x1238)))
 (let ((?x1183 (* y!0 y!0 y!0)))
 (let ((?x1686 (+ y00 x00 (* (- 4) (* x00 y!0 y!0 y!0 x!1 x!1)) (* 5 ?x298) (* (- 3) (* x00 y!0)) (* (- 3) (* x00 y!0 x!1 x!1 x!1)) (* (- 2) (* x00 y!0 y!0 y!0)) (* (- 12) (* x00 y!0 x!1 x!1)) (* (- 1) ?x1115) ?x1183 y!0 x!1 ?x1272 (* 5 (* x00 x!1)) (* 5 ?x1506) (* 12 (* x00 y!0 y!0 x!1 x!1)) (* (- 14) (* x00 y!0 x!1)) ?x1854 (* (- 1) ?x1978) ?x1985 (* 15 (* x00 y!0 y!0 x!1)) (* (- 3) (* y00 y!0 x!1 x!1 x!1)) (* (- 1) ?x2081) ?x1644 (* (- 4) (* y00 y!0 y!0 y!0 x!1 x!1)) (* (- 5) ?x2175) ?x2249 (* 4 (* x00 x!1 x!1)) (* 12 (* y00 y!0 y!0 x!1 x!1)) (* 15 (* y00 y!0 y!0 x!1)) (* (- 12) (* y00 y!0 x!1 x!1)) (* 4 (* y00 x!1 x!1)) (* 5 (* y00 x!1)) (* (- 3) (* y00 y!0)) (* (- 14) (* y00 y!0 x!1)) (* (- 3) (* y!0 x!1)) ?x2126 (* (- 2) (* y00 y!0 y!0 y!0)) (* (- 5) ?x2685) ?x2256 ?x2896 ?x2897)))
 (let (($x2137 (= ?x1686 0)))
 (let (($x1964 (or (not $x2137) $x2133)))
 (let (($x676 (and $x1454 $x1964)))
 (let ((?x1185 (* (- 1) (* x!1 x!1 y!0))))
 (let ((?x475 (* (- 3) (* x!1 x!1 x!1 y!0 y00))))
 (let ((?x1179 (* x!1 x!1 x!1 y00)))
 (let ((?x1040 (* (- 1) (* x!1 x!1 x!1 y!0 y!0 y!0 y00))))
 (let ((?x2340 (* (- 3) (* y!0 y00))))
 (let ((?x266 (* (- 1) (* x!1 x!1 x!1 y!0 y!0 y!0 x00))))
 (let ((?x2121 (* (- 3) (* x!1 x!1 x!1 y!0 x00))))
 (let ((?x1212 (* (- 3) (* y!0 x00))))
 (let ((?x2580 (* x!1 x!1 x!1 x00)))
 (let ((?x1275 (+ x!1 y!0 y00 x00 (* (- 3) (* x!1 y!0)) (* 5 (* x!1 x00)) (* 4 (* x!1 x!1 x00)) ?x2580 ?x1212 (* (- 14) (* x!1 y!0 x00)) (* (- 12) (* x!1 x!1 y!0 x00)) ?x2121 (* 5 (* y!0 y!0 x00)) (* 15 (* x!1 y!0 y!0 x00)) (* 12 (* x!1 x!1 y!0 y!0 x00)) (* 3 (* x!1 x!1 x!1 y!0 y!0 x00)) (* (- 2) (* y!0 y!0 y!0 x00)) (* (- 5) (* x!1 y!0 y!0 y!0 x00)) (* (- 4) (* x!1 x!1 y!0 y!0 y!0 x00)) ?x266 (* 5 (* x!1 y00)) (* (- 14) (* x!1 y!0 y00)) ?x2340 ?x2897 ?x2249 (* 5 (* y!0 y!0 y00)) (* (- 2) (* y!0 y!0 y!0 y00)) (* (- 5) (* x!1 y!0 y!0 y!0 y00)) (* (- 4) (* x!1 x!1 y!0 y!0 y!0 y00)) (* 4 (* x!1 x!1 y00)) (* (- 12) (* x!1 x!1 y!0 y00)) (* 15 (* x!1 y!0 y!0 y00)) (* 12 (* x!1 x!1 y!0 y!0 y00)) ?x2896 ?x2256 ?x1183 ?x1272 ?x1040 ?x1179 ?x475 (* 3 (* x!1 x!1 x!1 y!0 y!0 y00)) ?x1185)))
 (let ((?x1243 (* ?x2123 ?x2123 ?x2123 ?x2123 ?x1353 ?x1353 ?x1353)))
 (let ((?x1250 (* x!1 y00)))
 (let ((?x872 (* ?x2123 ?x2123 ?x2123 ?x1353 ?x1353 ?x1353 ?x1353)))
 (let ((?x1242 (* ?x2123 ?x2123 ?x1353 ?x1353 ?x1353 ?x1353)))
 (let ((?x1345 (* x!1 x00)))
 (let ((?x1277 (* x!1 y!0)))
 (let ((?x1925 (* (- 3) x00)))
 (let ((?x1211 (* (- 3) y00)))
 (let ((?x1061 (+ (* 3 x!1) (* 3 y!0) ?x1211 ?x1925 ?x1277 ?x1345 (* 2 (* x!1 x!1 x00)) (* (- 1) ?x2580) ?x1212 (* (- 2) (* x!1 y!0 x00)) (* 6 (* x!1 x!1 y!0 x00)) ?x2121 (* (- 1) (* y!0 y!0 x00)) (* (- 3) (* x!1 y!0 y!0 x00)) (* 6 (* x!1 x!1 y!0 y!0 x00)) (* (- 3) (* x!1 x!1 x!1 y!0 y!0 x00)) (* (- 1) (* x!1 y!0 y!0 y!0 x00)) (* 2 (* x!1 x!1 y!0 y!0 y!0 x00)) ?x266 ?x1242 ?x872 (* (- 2) (* x!1 x!1)) ?x1250 ?x2262 ?x1243 (* (- 2) (* x!1 y!0 y00)) ?x2340 (* (- 1) (* y!0 y!0 y00)) (* (- 1) (* x!1 y!0 y!0 y!0 y00)) (* 2 (* x!1 x!1 y!0 y!0 y!0 y00)) (* 2 (* x!1 x!1 y00)) (* 6 (* x!1 x!1 y!0 y00)) (* (- 3) (* x!1 y!0 y!0 y00)) (* 6 (* x!1 x!1 y!0 y!0 y00)) (* 3 ?x2895) ?x1183 ?x1040 (* (- 1) ?x1179) ?x475 (* (- 3) (* x!1 x!1 x!1 y!0 y!0 y00)) ?x1185)))
 (let (($x1574 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x1061 0)) (not (= ?x1275 0))))))
 (let (($x118 (exists ((x Int) (y Int) )(! (let ((?x1827 (* (- 1) (* x x y))))
 (let ((?x1392 (* x x x y y y00)))
 (let ((?x1442 (* 3 ?x1392)))
 (let ((?x1552 (* (- 3) (* x x x y y00))))
 (let ((?x1358 (* x x x y00)))
 (let ((?x1486 (* (- 1) (* x x x y y y y00))))
 (let ((?x1861 (+ 1 x)))
 (let ((?x172 (+ (- 1) y)))
 (let ((?x1311 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1126 (* y y y)))
 (let ((?x1125 (* y y)))
 (let ((?x2316 (* (- 3) ?x1125)))
 (let ((?x1036 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x979 (* x x y y y00)))
 (let ((?x2627 (* 12 ?x979)))
 (let ((?x975 (* x y y y00)))
 (let ((?x2625 (* 15 ?x975)))
 (let ((?x964 (* x x y y00)))
 (let ((?x2623 (* (- 12) ?x964)))
 (let ((?x956 (* x x y00)))
 (let ((?x2621 (* 4 ?x956)))
 (let ((?x945 (* x x y y y y00)))
 (let ((?x2620 (* (- 4) ?x945)))
 (let ((?x943 (* x y y y y00)))
 (let ((?x2619 (* (- 5) ?x943)))
 (let ((?x2618 (* (- 2) (* y y y y00))))
 (let ((?x932 (* y y y00)))
 (let ((?x2617 (* 5 ?x932)))
 (let ((?x922 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861 ?x1861)))
 (let ((?x920 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1055 (* (- 3) (* y y00))))
 (let ((?x888 (* x y y00)))
 (let ((?x2615 (* (- 14) ?x888)))
 (let ((?x847 (* x y00)))
 (let ((?x2665 (* 5 ?x847)))
 (let ((?x600 (* (- 1) (* x x x y y y x00))))
 (let ((?x516 (* x x y y y x00)))
 (let ((?x2722 (* (- 4) ?x516)))
 (let ((?x509 (* x y y y x00)))
 (let ((?x2721 (* (- 5) ?x509)))
 (let ((?x2720 (* (- 2) (* y y y x00))))
 (let ((?x422 (* x x x y y x00)))
 (let ((?x551 (* 3 ?x422)))
 (let ((?x405 (* x x y y x00)))
 (let ((?x2719 (* 12 ?x405)))
 (let ((?x396 (* x y y x00)))
 (let ((?x2718 (* 15 ?x396)))
 (let ((?x387 (* y y x00)))
 (let ((?x2717 (* 5 ?x387)))
 (let ((?x693 (* (- 3) (* x x x y x00))))
 (let ((?x337 (* x x y x00)))
 (let ((?x2715 (* (- 12) ?x337)))
 (let ((?x328 (* x y x00)))
 (let ((?x2706 (* (- 14) ?x328)))
 (let ((?x541 (* (- 3) (* y x00))))
 (let ((?x312 (* x x x x00)))
 (let ((?x304 (* x x x00)))
 (let ((?x2705 (* 4 ?x304)))
 (let ((?x301 (* x x00)))
 (let ((?x2708 (* 5 ?x301)))
 (let ((?x150 (* x y)))
 (let ((?x2783 (* (- 3) ?x150)))
 (let ((?x2253 (+ x y y00 x00 ?x2783 ?x2708 ?x2705 ?x312 ?x541 ?x2706 ?x2715 ?x693 ?x2717 ?x2718 ?x2719 ?x551 ?x2720 ?x2721 ?x2722 ?x600 ?x2665 ?x2615 ?x1055 ?x920 ?x922 ?x2617 ?x2618 ?x2619 ?x2620 ?x2621 ?x2623 ?x2625 ?x2627 ?x1036 ?x2316 ?x1126 ?x1311 ?x1486 ?x1358 ?x1552 ?x1442 ?x1827)))
 (let ((?x1555 (* (- 3) ?x1392)))
 (let ((?x1487 (* (- 1) ?x1358)))
 (let ((?x1148 (* 3 ?x1125)))
 (let ((?x1549 (* 6 ?x979)))
 (let ((?x1011 (* (- 3) ?x975)))
 (let ((?x1543 (* 6 ?x964)))
 (let ((?x1540 (* 2 ?x956)))
 (let ((?x1579 (* 2 ?x945)))
 (let ((?x944 (* (- 1) ?x943)))
 (let ((?x933 (* (- 1) ?x932)))
 (let ((?x1578 (* (- 2) ?x888)))
 (let ((?x138 (+ 1 y)))
 (let ((?x128 (+ (- 1) x)))
 (let ((?x882 (* ?x128 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x855 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1852 (* (- 2) (* x x))))
 (let ((?x747 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x745 (* ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x1778 (* 2 ?x516)))
 (let ((?x673 (* (- 1) ?x509)))
 (let ((?x705 (* (- 3) ?x422)))
 (let ((?x702 (* 6 ?x405)))
 (let ((?x1714 (* (- 3) ?x396)))
 (let ((?x390 (* (- 1) ?x387)))
 (let ((?x690 (* 6 ?x337)))
 (let ((?x1777 (* (- 2) ?x328)))
 (let ((?x588 (* (- 1) ?x312)))
 (let ((?x681 (* 2 ?x304)))
 (let ((?x1925 (* (- 3) x00)))
 (let ((?x1211 (* (- 3) y00)))
 (let ((?x1147 (* 3 y)))
 (let ((?x2512 (+ (* 3 x) ?x1147 ?x1211 ?x1925 ?x150 ?x301 ?x681 ?x588 ?x541 ?x1777 ?x690 ?x693 ?x390 ?x1714 ?x702 ?x705 ?x673 ?x1778 ?x600 ?x745 ?x747 ?x1852 ?x847 ?x855 ?x882 ?x1578 ?x1055 ?x933 ?x944 ?x1579 ?x1540 ?x1543 ?x1011 ?x1549 ?x1148 ?x1126 ?x1486 ?x1487 ?x1552 ?x1555 ?x1827)))
 (let (($x136 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x136 (or (not (= ?x2512 0)) (not (= ?x2253 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x2347 (exists ((x Int) (y Int) )(! (let ((?x1827 (* (- 1) (* x x y))))
 (let ((?x1392 (* x x x y y y00)))
 (let ((?x1442 (* 3 ?x1392)))
 (let ((?x1552 (* (- 3) (* x x x y y00))))
 (let ((?x1358 (* x x x y00)))
 (let ((?x1486 (* (- 1) (* x x x y y y y00))))
 (let ((?x1861 (+ 1 x)))
 (let ((?x172 (+ (- 1) y)))
 (let ((?x1311 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1126 (* y y y)))
 (let ((?x1125 (* y y)))
 (let ((?x2316 (* (- 3) ?x1125)))
 (let ((?x1036 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x979 (* x x y y y00)))
 (let ((?x2627 (* 12 ?x979)))
 (let ((?x975 (* x y y y00)))
 (let ((?x2625 (* 15 ?x975)))
 (let ((?x964 (* x x y y00)))
 (let ((?x2623 (* (- 12) ?x964)))
 (let ((?x956 (* x x y00)))
 (let ((?x2621 (* 4 ?x956)))
 (let ((?x945 (* x x y y y y00)))
 (let ((?x2620 (* (- 4) ?x945)))
 (let ((?x943 (* x y y y y00)))
 (let ((?x2619 (* (- 5) ?x943)))
 (let ((?x2618 (* (- 2) (* y y y y00))))
 (let ((?x932 (* y y y00)))
 (let ((?x2617 (* 5 ?x932)))
 (let ((?x922 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861 ?x1861)))
 (let ((?x920 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1055 (* (- 3) (* y y00))))
 (let ((?x888 (* x y y00)))
 (let ((?x2615 (* (- 14) ?x888)))
 (let ((?x847 (* x y00)))
 (let ((?x2665 (* 5 ?x847)))
 (let ((?x600 (* (- 1) (* x x x y y y x00))))
 (let ((?x516 (* x x y y y x00)))
 (let ((?x2722 (* (- 4) ?x516)))
 (let ((?x509 (* x y y y x00)))
 (let ((?x2721 (* (- 5) ?x509)))
 (let ((?x2720 (* (- 2) (* y y y x00))))
 (let ((?x422 (* x x x y y x00)))
 (let ((?x551 (* 3 ?x422)))
 (let ((?x405 (* x x y y x00)))
 (let ((?x2719 (* 12 ?x405)))
 (let ((?x396 (* x y y x00)))
 (let ((?x2718 (* 15 ?x396)))
 (let ((?x387 (* y y x00)))
 (let ((?x2717 (* 5 ?x387)))
 (let ((?x693 (* (- 3) (* x x x y x00))))
 (let ((?x337 (* x x y x00)))
 (let ((?x2715 (* (- 12) ?x337)))
 (let ((?x328 (* x y x00)))
 (let ((?x2706 (* (- 14) ?x328)))
 (let ((?x541 (* (- 3) (* y x00))))
 (let ((?x312 (* x x x x00)))
 (let ((?x304 (* x x x00)))
 (let ((?x2705 (* 4 ?x304)))
 (let ((?x301 (* x x00)))
 (let ((?x2708 (* 5 ?x301)))
 (let ((?x150 (* x y)))
 (let ((?x2783 (* (- 3) ?x150)))
 (let ((?x146 (* x 1)))
 (let ((?x3157 (+ y y00 x00 ?x146 ?x2783 ?x2708 ?x2705 ?x312 ?x541 ?x2706 ?x2715 ?x693 ?x2717 ?x2718 ?x2719 ?x551 ?x2720 ?x2721 ?x2722 ?x600 ?x2665 ?x2615 ?x1055 ?x920 ?x922 ?x2617 ?x2618 ?x2619 ?x2620 ?x2621 ?x2623 ?x2625 ?x2627 ?x1036 ?x2316 ?x1126 ?x1311 ?x1486 ?x1358 ?x1552 ?x1442 ?x1827)))
 (let ((?x1555 (* (- 3) ?x1392)))
 (let ((?x1487 (* (- 1) ?x1358)))
 (let ((?x1148 (* 3 ?x1125)))
 (let ((?x1549 (* 6 ?x979)))
 (let ((?x1011 (* (- 3) ?x975)))
 (let ((?x1543 (* 6 ?x964)))
 (let ((?x1540 (* 2 ?x956)))
 (let ((?x1579 (* 2 ?x945)))
 (let ((?x944 (* (- 1) ?x943)))
 (let ((?x933 (* (- 1) ?x932)))
 (let ((?x1578 (* (- 2) ?x888)))
 (let ((?x138 (+ 1 y)))
 (let ((?x128 (+ (- 1) x)))
 (let ((?x882 (* ?x128 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x855 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1852 (* (- 2) (* x x))))
 (let ((?x747 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x745 (* ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x1778 (* 2 ?x516)))
 (let ((?x673 (* (- 1) ?x509)))
 (let ((?x705 (* (- 3) ?x422)))
 (let ((?x702 (* 6 ?x405)))
 (let ((?x1714 (* (- 3) ?x396)))
 (let ((?x390 (* (- 1) ?x387)))
 (let ((?x690 (* 6 ?x337)))
 (let ((?x1777 (* (- 2) ?x328)))
 (let ((?x588 (* (- 1) ?x312)))
 (let ((?x681 (* 2 ?x304)))
 (let ((?x1925 (* (- 3) x00)))
 (let ((?x1211 (* (- 3) y00)))
 (let ((?x1147 (* 3 y)))
 (let ((?x1926 (+ (* 2 x) ?x1147 ?x1211 ?x1925 ?x146 ?x150 ?x301 ?x681 ?x588 ?x541 ?x1777 ?x690 ?x693 ?x390 ?x1714 ?x702 ?x705 ?x673 ?x1778 ?x600 ?x745 ?x747 ?x1852 ?x847 ?x855 ?x882 ?x1578 ?x1055 ?x933 ?x944 ?x1579 ?x1540 ?x1543 ?x1011 ?x1549 ?x1148 ?x1126 ?x1486 ?x1487 ?x1552 ?x1555 ?x1827)))
 (let (($x136 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x136 (or (not (= ?x1926 0)) (not (= ?x3157 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1502 (lambda ((x Int) (y Int) )(let ((?x1827 (* (- 1) (* x x y))))
 (let ((?x1392 (* x x x y y y00)))
 (let ((?x1442 (* 3 ?x1392)))
 (let ((?x1552 (* (- 3) (* x x x y y00))))
 (let ((?x1358 (* x x x y00)))
 (let ((?x1486 (* (- 1) (* x x x y y y y00))))
 (let ((?x1861 (+ 1 x)))
 (let ((?x172 (+ (- 1) y)))
 (let ((?x1311 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1126 (* y y y)))
 (let ((?x1125 (* y y)))
 (let ((?x2316 (* (- 3) ?x1125)))
 (let ((?x1036 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x979 (* x x y y y00)))
 (let ((?x2627 (* 12 ?x979)))
 (let ((?x975 (* x y y y00)))
 (let ((?x2625 (* 15 ?x975)))
 (let ((?x964 (* x x y y00)))
 (let ((?x2623 (* (- 12) ?x964)))
 (let ((?x956 (* x x y00)))
 (let ((?x2621 (* 4 ?x956)))
 (let ((?x945 (* x x y y y y00)))
 (let ((?x2620 (* (- 4) ?x945)))
 (let ((?x943 (* x y y y y00)))
 (let ((?x2619 (* (- 5) ?x943)))
 (let ((?x2618 (* (- 2) (* y y y y00))))
 (let ((?x932 (* y y y00)))
 (let ((?x2617 (* 5 ?x932)))
 (let ((?x922 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861 ?x1861)))
 (let ((?x920 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1055 (* (- 3) (* y y00))))
 (let ((?x888 (* x y y00)))
 (let ((?x2615 (* (- 14) ?x888)))
 (let ((?x847 (* x y00)))
 (let ((?x2665 (* 5 ?x847)))
 (let ((?x600 (* (- 1) (* x x x y y y x00))))
 (let ((?x516 (* x x y y y x00)))
 (let ((?x2722 (* (- 4) ?x516)))
 (let ((?x509 (* x y y y x00)))
 (let ((?x2721 (* (- 5) ?x509)))
 (let ((?x2720 (* (- 2) (* y y y x00))))
 (let ((?x422 (* x x x y y x00)))
 (let ((?x551 (* 3 ?x422)))
 (let ((?x405 (* x x y y x00)))
 (let ((?x2719 (* 12 ?x405)))
 (let ((?x396 (* x y y x00)))
 (let ((?x2718 (* 15 ?x396)))
 (let ((?x387 (* y y x00)))
 (let ((?x2717 (* 5 ?x387)))
 (let ((?x693 (* (- 3) (* x x x y x00))))
 (let ((?x337 (* x x y x00)))
 (let ((?x2715 (* (- 12) ?x337)))
 (let ((?x328 (* x y x00)))
 (let ((?x2706 (* (- 14) ?x328)))
 (let ((?x541 (* (- 3) (* y x00))))
 (let ((?x312 (* x x x x00)))
 (let ((?x304 (* x x x00)))
 (let ((?x2705 (* 4 ?x304)))
 (let ((?x301 (* x x00)))
 (let ((?x2708 (* 5 ?x301)))
 (let ((?x150 (* x y)))
 (let ((?x2783 (* (- 3) ?x150)))
 (let ((?x2253 (+ x y y00 x00 ?x2783 ?x2708 ?x2705 ?x312 ?x541 ?x2706 ?x2715 ?x693 ?x2717 ?x2718 ?x2719 ?x551 ?x2720 ?x2721 ?x2722 ?x600 ?x2665 ?x2615 ?x1055 ?x920 ?x922 ?x2617 ?x2618 ?x2619 ?x2620 ?x2621 ?x2623 ?x2625 ?x2627 ?x1036 ?x2316 ?x1126 ?x1311 ?x1486 ?x1358 ?x1552 ?x1442 ?x1827)))
 (let ((?x1555 (* (- 3) ?x1392)))
 (let ((?x1487 (* (- 1) ?x1358)))
 (let ((?x1148 (* 3 ?x1125)))
 (let ((?x1549 (* 6 ?x979)))
 (let ((?x1011 (* (- 3) ?x975)))
 (let ((?x1543 (* 6 ?x964)))
 (let ((?x1540 (* 2 ?x956)))
 (let ((?x1579 (* 2 ?x945)))
 (let ((?x944 (* (- 1) ?x943)))
 (let ((?x933 (* (- 1) ?x932)))
 (let ((?x1578 (* (- 2) ?x888)))
 (let ((?x138 (+ 1 y)))
 (let ((?x128 (+ (- 1) x)))
 (let ((?x882 (* ?x128 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x855 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1852 (* (- 2) (* x x))))
 (let ((?x747 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x745 (* ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x1778 (* 2 ?x516)))
 (let ((?x673 (* (- 1) ?x509)))
 (let ((?x705 (* (- 3) ?x422)))
 (let ((?x702 (* 6 ?x405)))
 (let ((?x1714 (* (- 3) ?x396)))
 (let ((?x390 (* (- 1) ?x387)))
 (let ((?x690 (* 6 ?x337)))
 (let ((?x1777 (* (- 2) ?x328)))
 (let ((?x588 (* (- 1) ?x312)))
 (let ((?x681 (* 2 ?x304)))
 (let ((?x1925 (* (- 3) x00)))
 (let ((?x1211 (* (- 3) y00)))
 (let ((?x1147 (* 3 y)))
 (let ((?x2512 (+ (* 3 x) ?x1147 ?x1211 ?x1925 ?x150 ?x301 ?x681 ?x588 ?x541 ?x1777 ?x690 ?x693 ?x390 ?x1714 ?x702 ?x705 ?x673 ?x1778 ?x600 ?x745 ?x747 ?x1852 ?x847 ?x855 ?x882 ?x1578 ?x1055 ?x933 ?x944 ?x1579 ?x1540 ?x1543 ?x1011 ?x1549 ?x1148 ?x1126 ?x1486 ?x1487 ?x1552 ?x1555 ?x1827)))
 (let (($x136 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x2248 (and $x136 (or (not (= ?x2512 0)) (not (= ?x2253 0))))))
 (let ((?x146 (* x 1)))
 (let ((?x3157 (+ y y00 x00 ?x146 ?x2783 ?x2708 ?x2705 ?x312 ?x541 ?x2706 ?x2715 ?x693 ?x2717 ?x2718 ?x2719 ?x551 ?x2720 ?x2721 ?x2722 ?x600 ?x2665 ?x2615 ?x1055 ?x920 ?x922 ?x2617 ?x2618 ?x2619 ?x2620 ?x2621 ?x2623 ?x2625 ?x2627 ?x1036 ?x2316 ?x1126 ?x1311 ?x1486 ?x1358 ?x1552 ?x1442 ?x1827)))
 (let ((?x1926 (+ (* 2 x) ?x1147 ?x1211 ?x1925 ?x146 ?x150 ?x301 ?x681 ?x588 ?x541 ?x1777 ?x690 ?x693 ?x390 ?x1714 ?x702 ?x705 ?x673 ?x1778 ?x600 ?x745 ?x747 ?x1852 ?x847 ?x855 ?x882 ?x1578 ?x1055 ?x933 ?x944 ?x1579 ?x1540 ?x1543 ?x1011 ?x1549 ?x1148 ?x1126 ?x1486 ?x1487 ?x1552 ?x1555 ?x1827)))
 (let (($x3164 (and $x136 (or (not (= ?x1926 0)) (not (= ?x3157 0))))))
 (rewrite (= $x3164 $x2248))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1080 (exists ((x Int) (y Int) )(! (let ((?x1861 (+ 1 x)))
 (let ((?x172 (+ (- 1) y)))
 (let ((?x1757 (* ?x172 ?x1861 ?x1861)))
 (let ((?x464 (* x00 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1726 (* y00 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1637 (* x00 ?x172 ?x172)))
 (let ((?x1123 (* y00 ?x172 ?x172)))
 (let ((?x912 (* y00 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1331 (* ?x1861 ?x1861)))
 (let ((?x1377 (* x00 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x908 (* ?x172 ?x1861)))
 (let ((?x205 (+ ?x908 ?x1377 (* (- 1) (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861)) (* (- 1) (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)) (* (- 1) (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)) (* (- 1) (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861 ?x1861)) (* (- 1) (* y00 ?x172 ?x1861)) (* (- 1) (* x00 ?x172 ?x1861)) ?x1331 ?x912 (* (- 1) (* ?x172 ?x172 ?x172)) ?x1123 ?x1637 ?x1726 (* (- 1) (* x00 ?x1861)) (* (- 1) (* y00 ?x1861)) ?x464 ?x1757)))
 (let ((?x138 (+ 1 y)))
 (let ((?x128 (+ (- 1) x)))
 (let ((?x1638 (* ?x128 ?x128 ?x138)))
 (let ((?x1554 (* x00 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1312 (* y00 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1430 (* x00 ?x138 ?x138)))
 (let ((?x1073 (* y00 ?x138 ?x138)))
 (let ((?x1324 (* y00 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x918 (* ?x128 ?x128)))
 (let ((?x1034 (* x00 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1297 (* ?x128 ?x138)))
 (let ((?x1052 (+ ?x1297 ?x1034 (* (- 1) (* ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)) (* (- 1) (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)) (* (- 1) (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)) (* (- 1) (* ?x128 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)) (* (- 1) (* y00 ?x128 ?x138)) (* (- 1) (* x00 ?x128 ?x138)) ?x918 ?x1324 (* (- 1) (* ?x138 ?x138 ?x138)) ?x1073 ?x1430 ?x1312 (* (- 1) (* x00 ?x128)) (* (- 1) (* y00 ?x128)) ?x1554 ?x1638)))
 (let (($x899 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x899 (or (not (= ?x1052 0)) (not (= ?x205 0))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x2342 (lambda ((x Int) (y Int) )(let ((?x1827 (* (- 1) (* x x y))))
 (let ((?x1392 (* x x x y y y00)))
 (let ((?x1442 (* 3 ?x1392)))
 (let ((?x1552 (* (- 3) (* x x x y y00))))
 (let ((?x1358 (* x x x y00)))
 (let ((?x1486 (* (- 1) (* x x x y y y y00))))
 (let ((?x1861 (+ 1 x)))
 (let ((?x172 (+ (- 1) y)))
 (let ((?x1311 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1126 (* y y y)))
 (let ((?x1125 (* y y)))
 (let ((?x2316 (* (- 3) ?x1125)))
 (let ((?x1036 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x979 (* x x y y y00)))
 (let ((?x2627 (* 12 ?x979)))
 (let ((?x975 (* x y y y00)))
 (let ((?x2625 (* 15 ?x975)))
 (let ((?x964 (* x x y y00)))
 (let ((?x2623 (* (- 12) ?x964)))
 (let ((?x956 (* x x y00)))
 (let ((?x2621 (* 4 ?x956)))
 (let ((?x945 (* x x y y y y00)))
 (let ((?x2620 (* (- 4) ?x945)))
 (let ((?x943 (* x y y y y00)))
 (let ((?x2619 (* (- 5) ?x943)))
 (let ((?x2618 (* (- 2) (* y y y y00))))
 (let ((?x932 (* y y y00)))
 (let ((?x2617 (* 5 ?x932)))
 (let ((?x922 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861 ?x1861)))
 (let ((?x920 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1055 (* (- 3) (* y y00))))
 (let ((?x888 (* x y y00)))
 (let ((?x2615 (* (- 14) ?x888)))
 (let ((?x847 (* x y00)))
 (let ((?x2665 (* 5 ?x847)))
 (let ((?x600 (* (- 1) (* x x x y y y x00))))
 (let ((?x516 (* x x y y y x00)))
 (let ((?x2722 (* (- 4) ?x516)))
 (let ((?x509 (* x y y y x00)))
 (let ((?x2721 (* (- 5) ?x509)))
 (let ((?x2720 (* (- 2) (* y y y x00))))
 (let ((?x422 (* x x x y y x00)))
 (let ((?x551 (* 3 ?x422)))
 (let ((?x405 (* x x y y x00)))
 (let ((?x2719 (* 12 ?x405)))
 (let ((?x396 (* x y y x00)))
 (let ((?x2718 (* 15 ?x396)))
 (let ((?x387 (* y y x00)))
 (let ((?x2717 (* 5 ?x387)))
 (let ((?x693 (* (- 3) (* x x x y x00))))
 (let ((?x337 (* x x y x00)))
 (let ((?x2715 (* (- 12) ?x337)))
 (let ((?x328 (* x y x00)))
 (let ((?x2706 (* (- 14) ?x328)))
 (let ((?x541 (* (- 3) (* y x00))))
 (let ((?x312 (* x x x x00)))
 (let ((?x304 (* x x x00)))
 (let ((?x2705 (* 4 ?x304)))
 (let ((?x301 (* x x00)))
 (let ((?x2708 (* 5 ?x301)))
 (let ((?x150 (* x y)))
 (let ((?x2783 (* (- 3) ?x150)))
 (let ((?x146 (* x 1)))
 (let ((?x3157 (+ y y00 x00 ?x146 ?x2783 ?x2708 ?x2705 ?x312 ?x541 ?x2706 ?x2715 ?x693 ?x2717 ?x2718 ?x2719 ?x551 ?x2720 ?x2721 ?x2722 ?x600 ?x2665 ?x2615 ?x1055 ?x920 ?x922 ?x2617 ?x2618 ?x2619 ?x2620 ?x2621 ?x2623 ?x2625 ?x2627 ?x1036 ?x2316 ?x1126 ?x1311 ?x1486 ?x1358 ?x1552 ?x1442 ?x1827)))
 (let ((?x1555 (* (- 3) ?x1392)))
 (let ((?x1487 (* (- 1) ?x1358)))
 (let ((?x1148 (* 3 ?x1125)))
 (let ((?x1549 (* 6 ?x979)))
 (let ((?x1011 (* (- 3) ?x975)))
 (let ((?x1543 (* 6 ?x964)))
 (let ((?x1540 (* 2 ?x956)))
 (let ((?x1579 (* 2 ?x945)))
 (let ((?x944 (* (- 1) ?x943)))
 (let ((?x933 (* (- 1) ?x932)))
 (let ((?x1578 (* (- 2) ?x888)))
 (let ((?x138 (+ 1 y)))
 (let ((?x128 (+ (- 1) x)))
 (let ((?x882 (* ?x128 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x855 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1852 (* (- 2) (* x x))))
 (let ((?x747 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x745 (* ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x1778 (* 2 ?x516)))
 (let ((?x673 (* (- 1) ?x509)))
 (let ((?x705 (* (- 3) ?x422)))
 (let ((?x702 (* 6 ?x405)))
 (let ((?x1714 (* (- 3) ?x396)))
 (let ((?x390 (* (- 1) ?x387)))
 (let ((?x690 (* 6 ?x337)))
 (let ((?x1777 (* (- 2) ?x328)))
 (let ((?x588 (* (- 1) ?x312)))
 (let ((?x681 (* 2 ?x304)))
 (let ((?x1925 (* (- 3) x00)))
 (let ((?x1211 (* (- 3) y00)))
 (let ((?x1147 (* 3 y)))
 (let ((?x1926 (+ (* 2 x) ?x1147 ?x1211 ?x1925 ?x146 ?x150 ?x301 ?x681 ?x588 ?x541 ?x1777 ?x690 ?x693 ?x390 ?x1714 ?x702 ?x705 ?x673 ?x1778 ?x600 ?x745 ?x747 ?x1852 ?x847 ?x855 ?x882 ?x1578 ?x1055 ?x933 ?x944 ?x1579 ?x1540 ?x1543 ?x1011 ?x1549 ?x1148 ?x1126 ?x1486 ?x1487 ?x1552 ?x1555 ?x1827)))
 (let (($x136 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x3164 (and $x136 (or (not (= ?x1926 0)) (not (= ?x3157 0))))))
 (let ((?x1757 (* ?x172 ?x1861 ?x1861)))
 (let ((?x464 (* x00 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1726 (* y00 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1637 (* x00 ?x172 ?x172)))
 (let ((?x1123 (* y00 ?x172 ?x172)))
 (let ((?x912 (* y00 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1331 (* ?x1861 ?x1861)))
 (let ((?x1377 (* x00 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x908 (* ?x172 ?x1861)))
 (let ((?x205 (+ ?x908 ?x1377 (* (- 1) ?x1311) (* (- 1) ?x1036) (* (- 1) ?x920) (* (- 1) ?x922) (* (- 1) (* y00 ?x172 ?x1861)) (* (- 1) (* x00 ?x172 ?x1861)) ?x1331 ?x912 (* (- 1) (* ?x172 ?x172 ?x172)) ?x1123 ?x1637 ?x1726 (* (- 1) (* x00 ?x1861)) (* (- 1) (* y00 ?x1861)) ?x464 ?x1757)))
 (let ((?x1638 (* ?x128 ?x128 ?x138)))
 (let ((?x1554 (* x00 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1312 (* y00 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1430 (* x00 ?x138 ?x138)))
 (let ((?x1073 (* y00 ?x138 ?x138)))
 (let ((?x1324 (* y00 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x918 (* ?x128 ?x128)))
 (let ((?x1034 (* x00 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1297 (* ?x128 ?x138)))
 (let ((?x1052 (+ ?x1297 ?x1034 (* (- 1) ?x745) (* (- 1) ?x747) (* (- 1) ?x855) (* (- 1) ?x882) (* (- 1) (* y00 ?x128 ?x138)) (* (- 1) (* x00 ?x128 ?x138)) ?x918 ?x1324 (* (- 1) (* ?x138 ?x138 ?x138)) ?x1073 ?x1430 ?x1312 (* (- 1) (* x00 ?x128)) (* (- 1) (* y00 ?x128)) ?x1554 ?x1638)))
 (let (($x899 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x204 (and $x899 (or (not (= ?x1052 0)) (not (= ?x205 0))))))
 (rewrite (= $x204 $x3164)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1361 (exists ((x Int) (y Int) )(! (let ((?x1861 (+ 1 x)))
 (let ((?x172 (+ (- 1) y)))
 (let ((?x464 (* x00 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x371 (* y00 ?x1861)))
 (let ((?x309 (* x00 ?x1861)))
 (let ((?x1070 (* ?x172 ?x172 ?x172)))
 (let ((?x1325 (* x00 ?x172 ?x1861)))
 (let ((?x1323 (* y00 ?x172 ?x1861)))
 (let ((?x922 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861 ?x1861)))
 (let ((?x920 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1036 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1311 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1767 (+ (* (- 1) (* ?x172 ?x1861)) (* (- 1) (* x00 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)) ?x1311 ?x1036 ?x920 ?x922 ?x1323 ?x1325 (* (- 1) (* ?x1861 ?x1861)) (* (- 1) (* y00 ?x172 ?x172 ?x172 ?x1861 ?x1861)) ?x1070 (* (- 1) (* y00 ?x172 ?x172)) (* (- 1) (* x00 ?x172 ?x172)) (* (- 1) (* y00 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)) ?x309 ?x371 (* (- 1) ?x464) (* (- 1) (* ?x172 ?x1861 ?x1861)))))
 (let ((?x138 (+ 1 y)))
 (let ((?x128 (+ (- 1) x)))
 (let ((?x1554 (* x00 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1441 (* y00 ?x128)))
 (let ((?x1091 (* x00 ?x128)))
 (let ((?x1414 (* ?x138 ?x138 ?x138)))
 (let ((?x914 (* x00 ?x128 ?x138)))
 (let ((?x1063 (* y00 ?x128 ?x138)))
 (let ((?x882 (* ?x128 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x855 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x747 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x745 (* ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x197 (+ (* (- 1) (* ?x128 ?x138)) (* (- 1) (* x00 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)) ?x745 ?x747 ?x855 ?x882 ?x1063 ?x914 (* (- 1) (* ?x128 ?x128)) (* (- 1) (* y00 ?x128 ?x128 ?x138 ?x138 ?x138)) ?x1414 (* (- 1) (* y00 ?x138 ?x138)) (* (- 1) (* x00 ?x138 ?x138)) (* (- 1) (* y00 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)) ?x1091 ?x1441 (* (- 1) ?x1554) (* (- 1) (* ?x128 ?x128 ?x138)))))
 (let (($x899 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x899 (or (not (= ?x197 0)) (not (= ?x1767 0))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1301 (lambda ((x Int) (y Int) )(let ((?x1861 (+ 1 x)))
 (let ((?x172 (+ (- 1) y)))
 (let ((?x1757 (* ?x172 ?x1861 ?x1861)))
 (let ((?x464 (* x00 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1726 (* y00 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1637 (* x00 ?x172 ?x172)))
 (let ((?x1123 (* y00 ?x172 ?x172)))
 (let ((?x912 (* y00 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1331 (* ?x1861 ?x1861)))
 (let ((?x1377 (* x00 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x908 (* ?x172 ?x1861)))
 (let ((?x205 (+ ?x908 ?x1377 (* (- 1) (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861)) (* (- 1) (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)) (* (- 1) (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)) (* (- 1) (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861 ?x1861)) (* (- 1) (* y00 ?x172 ?x1861)) (* (- 1) (* x00 ?x172 ?x1861)) ?x1331 ?x912 (* (- 1) (* ?x172 ?x172 ?x172)) ?x1123 ?x1637 ?x1726 (* (- 1) (* x00 ?x1861)) (* (- 1) (* y00 ?x1861)) ?x464 ?x1757)))
 (let ((?x138 (+ 1 y)))
 (let ((?x128 (+ (- 1) x)))
 (let ((?x1638 (* ?x128 ?x128 ?x138)))
 (let ((?x1554 (* x00 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1312 (* y00 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1430 (* x00 ?x138 ?x138)))
 (let ((?x1073 (* y00 ?x138 ?x138)))
 (let ((?x1324 (* y00 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x918 (* ?x128 ?x128)))
 (let ((?x1034 (* x00 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1297 (* ?x128 ?x138)))
 (let ((?x1052 (+ ?x1297 ?x1034 (* (- 1) (* ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)) (* (- 1) (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)) (* (- 1) (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)) (* (- 1) (* ?x128 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)) (* (- 1) (* y00 ?x128 ?x138)) (* (- 1) (* x00 ?x128 ?x138)) ?x918 ?x1324 (* (- 1) (* ?x138 ?x138 ?x138)) ?x1073 ?x1430 ?x1312 (* (- 1) (* x00 ?x128)) (* (- 1) (* y00 ?x128)) ?x1554 ?x1638)))
 (let (($x899 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x204 (and $x899 (or (not (= ?x1052 0)) (not (= ?x205 0))))))
 (let ((?x371 (* y00 ?x1861)))
 (let ((?x309 (* x00 ?x1861)))
 (let ((?x1070 (* ?x172 ?x172 ?x172)))
 (let ((?x1325 (* x00 ?x172 ?x1861)))
 (let ((?x1323 (* y00 ?x172 ?x1861)))
 (let ((?x922 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861 ?x1861)))
 (let ((?x920 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1036 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1311 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1767 (+ (* (- 1) ?x908) (* (- 1) ?x1377) ?x1311 ?x1036 ?x920 ?x922 ?x1323 ?x1325 (* (- 1) ?x1331) (* (- 1) ?x912) ?x1070 (* (- 1) ?x1123) (* (- 1) ?x1637) (* (- 1) ?x1726) ?x309 ?x371 (* (- 1) ?x464) (* (- 1) ?x1757))))
 (let ((?x1441 (* y00 ?x128)))
 (let ((?x1091 (* x00 ?x128)))
 (let ((?x1414 (* ?x138 ?x138 ?x138)))
 (let ((?x914 (* x00 ?x128 ?x138)))
 (let ((?x1063 (* y00 ?x128 ?x138)))
 (let ((?x882 (* ?x128 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x855 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x747 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x745 (* ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x197 (+ (* (- 1) ?x1297) (* (- 1) ?x1034) ?x745 ?x747 ?x855 ?x882 ?x1063 ?x914 (* (- 1) ?x918) (* (- 1) ?x1324) ?x1414 (* (- 1) ?x1073) (* (- 1) ?x1430) (* (- 1) ?x1312) ?x1091 ?x1441 (* (- 1) ?x1554) (* (- 1) ?x1638))))
 (let (($x1306 (and $x899 (or (not (= ?x197 0)) (not (= ?x1767 0))))))
 (rewrite (= $x1306 $x204))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x107 (exists ((x Int) (y Int) )(! (let ((?x71 (- y 1)))
 (let ((?x70 (+ x 1)))
 (let ((?x74 (- (* (- 1) ?x70 ?x71) (* ?x70 ?x70 ?x70 x00 ?x71 ?x71 ?x71))))
 (let ((?x81 (+ ?x74 (* ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x70 ?x71 y00) (* ?x70 x00 ?x71))))
 (let ((?x87 (- (+ (- ?x81 (* ?x70 ?x70)) (* 0 ?x70 ?x71 ?x71)) (* ?x70 ?x70 ?x71 ?x71 ?x71 y00))))
 (let ((?x94 (- (- (+ ?x87 (* ?x71 ?x71 ?x71)) (* ?x71 ?x71 y00)) (* x00 ?x71 ?x71))))
 (let ((?x98 (+ (- ?x94 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 y00)) (* ?x70 x00) (* ?x70 y00))))
 (let (($x103 (= (- (- ?x98 (* ?x70 ?x70 x00 ?x71 ?x71 ?x71)) (* ?x70 ?x70 ?x71)) 0)))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x39 (- (* (- 1) ?x35 ?x36) (* ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x46 (+ ?x39 (* ?x35 ?x35 ?x36 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* ?x35 ?x36 y00) (* ?x35 x00 ?x36))))
 (let ((?x52 (- (+ (- ?x46 (* ?x35 ?x35)) (* 0 ?x35 ?x36 ?x36)) (* ?x35 ?x35 ?x36 ?x36 ?x36 y00))))
 (let ((?x59 (- (- (+ ?x52 (* ?x36 ?x36 ?x36)) (* ?x36 ?x36 y00)) (* x00 ?x36 ?x36))))
 (let ((?x63 (+ (- ?x59 (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 y00)) (* ?x35 x00) (* ?x35 y00))))
 (let (($x68 (= (- (- ?x63 (* ?x35 ?x35 x00 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x36)) 0)))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not $x68) (not $x103))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1364 (lambda ((x Int) (y Int) )(let ((?x1861 (+ 1 x)))
 (let ((?x172 (+ (- 1) y)))
 (let ((?x464 (* x00 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x371 (* y00 ?x1861)))
 (let ((?x309 (* x00 ?x1861)))
 (let ((?x1070 (* ?x172 ?x172 ?x172)))
 (let ((?x1325 (* x00 ?x172 ?x1861)))
 (let ((?x1323 (* y00 ?x172 ?x1861)))
 (let ((?x922 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861 ?x1861)))
 (let ((?x920 (* ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1036 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)))
 (let ((?x1311 (* ?x172 ?x172 ?x172 ?x172 ?x1861 ?x1861)))
 (let ((?x1767 (+ (* (- 1) (* ?x172 ?x1861)) (* (- 1) (* x00 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)) ?x1311 ?x1036 ?x920 ?x922 ?x1323 ?x1325 (* (- 1) (* ?x1861 ?x1861)) (* (- 1) (* y00 ?x172 ?x172 ?x172 ?x1861 ?x1861)) ?x1070 (* (- 1) (* y00 ?x172 ?x172)) (* (- 1) (* x00 ?x172 ?x172)) (* (- 1) (* y00 ?x172 ?x172 ?x172 ?x1861 ?x1861 ?x1861)) ?x309 ?x371 (* (- 1) ?x464) (* (- 1) (* ?x172 ?x1861 ?x1861)))))
 (let ((?x138 (+ 1 y)))
 (let ((?x128 (+ (- 1) x)))
 (let ((?x1554 (* x00 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x1441 (* y00 ?x128)))
 (let ((?x1091 (* x00 ?x128)))
 (let ((?x1414 (* ?x138 ?x138 ?x138)))
 (let ((?x914 (* x00 ?x128 ?x138)))
 (let ((?x1063 (* y00 ?x128 ?x138)))
 (let ((?x882 (* ?x128 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x855 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)))
 (let ((?x747 (* ?x128 ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x745 (* ?x128 ?x128 ?x138 ?x138 ?x138 ?x138)))
 (let ((?x197 (+ (* (- 1) (* ?x128 ?x138)) (* (- 1) (* x00 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)) ?x745 ?x747 ?x855 ?x882 ?x1063 ?x914 (* (- 1) (* ?x128 ?x128)) (* (- 1) (* y00 ?x128 ?x128 ?x138 ?x138 ?x138)) ?x1414 (* (- 1) (* y00 ?x138 ?x138)) (* (- 1) (* x00 ?x138 ?x138)) (* (- 1) (* y00 ?x128 ?x128 ?x128 ?x138 ?x138 ?x138)) ?x1091 ?x1441 (* (- 1) ?x1554) (* (- 1) (* ?x128 ?x128 ?x138)))))
 (let (($x899 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x1306 (and $x899 (or (not (= ?x197 0)) (not (= ?x1767 0))))))
 (let ((?x71 (- y 1)))
 (let ((?x70 (+ x 1)))
 (let ((?x74 (- (* (- 1) ?x70 ?x71) (* ?x70 ?x70 ?x70 x00 ?x71 ?x71 ?x71))))
 (let ((?x81 (+ ?x74 (* ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x70 ?x71 y00) (* ?x70 x00 ?x71))))
 (let ((?x87 (- (+ (- ?x81 (* ?x70 ?x70)) (* 0 ?x70 ?x71 ?x71)) (* ?x70 ?x70 ?x71 ?x71 ?x71 y00))))
 (let ((?x94 (- (- (+ ?x87 (* ?x71 ?x71 ?x71)) (* ?x71 ?x71 y00)) (* x00 ?x71 ?x71))))
 (let ((?x98 (+ (- ?x94 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 y00)) (* ?x70 x00) (* ?x70 y00))))
 (let (($x103 (= (- (- ?x98 (* ?x70 ?x70 x00 ?x71 ?x71 ?x71)) (* ?x70 ?x70 ?x71)) 0)))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x39 (- (* (- 1) ?x35 ?x36) (* ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x46 (+ ?x39 (* ?x35 ?x35 ?x36 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* ?x35 ?x36 y00) (* ?x35 x00 ?x36))))
 (let ((?x52 (- (+ (- ?x46 (* ?x35 ?x35)) (* 0 ?x35 ?x36 ?x36)) (* ?x35 ?x35 ?x36 ?x36 ?x36 y00))))
 (let ((?x59 (- (- (+ ?x52 (* ?x36 ?x36 ?x36)) (* ?x36 ?x36 y00)) (* x00 ?x36 ?x36))))
 (let ((?x63 (+ (- ?x59 (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 y00)) (* ?x35 x00) (* ?x35 y00))))
 (let (($x68 (= (- (- ?x63 (* ?x35 ?x35 x00 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x36)) 0)))
 (let (($x106 (and (= (+ (- (- x y00) x00) y) 0) (or (not $x68) (not $x103)))))
 (rewrite (= $x106 $x1306))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x108 (asserted $x107)))
 (let ((@x1069 (mp (mp @x108 (quant-intro (proof-bind ?x1364) (= $x107 $x1361)) $x1361) (rewrite (= $x1361 $x1361)) $x1361)))
 (let ((@x259 (mp (mp @x1069 (quant-intro (proof-bind ?x1301) (= $x1361 $x1080)) $x1080) (quant-intro (proof-bind ?x2342) (= $x1080 $x2347)) $x2347)))
 (let ((@x1455 (mp~ (mp @x259 (quant-intro (proof-bind ?x1502) (= $x2347 $x118)) $x118) (sk (~ $x118 $x1574)) $x1574)))
 (let ((@x332 (mp @x1455 (rewrite (= $x1574 $x676)) $x676)))
 (let ((@x196 (and-elim @x332 $x1454)))
 (let ((@x1176 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1454) $x2238)) @x196 $x2238)))
 (let (($x2600 (>= ?x2179 0)))
 (let ((@x2136 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1454) $x2600)) @x196 $x2600)))
 (let (($x2359 (not (<= ?x2132 0))))
 (let (($x2358 (>= ?x2132 0)))
 (let ((@x1576 (lemma ((_ th-lemma arith) (hypothesis (not $x2358)) @x2136 @x1176 @x2136 @x1176 false) $x2358)))
 (let (($x2003 (>= ?x1686 0)))
 (let ((@x2667 (lemma ((_ th-lemma arith) (hypothesis (not $x2003)) @x2136 @x1176 @x2136 @x1176 false) $x2003)))
 (let (($x1857 (<= ?x1686 0)))
 (let ((@x2072 (lemma ((_ th-lemma arith) (hypothesis (not $x1857)) @x2136 @x1176 @x2136 @x1176 false) $x1857)))
 (let ((@x2322 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2137 (not $x1857) (not $x2003))) @x2072 @x2667 $x2137)))
 (let ((@x1566 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2130 $x2359 (not $x2358))) (unit-resolution (and-elim @x332 $x1964) @x2322 $x2133) @x1576 $x2359)))
 ((_ th-lemma arith) @x1566 @x2136 @x1176 @x2136 @x1176 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        22
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-grobner             4
 :arith-max-min             801
 :arith-nonlinear-bounds    15
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-pivots              4
 :arith-row-summations      2
 :arith-tableau-max-columns 70
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                4.06
 :memory                    3.49
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                2175350
 :num-checks                1
 :propagations              14
 :rlimit-count              15279
 :time                      0.02
 :total-time                0.03)
