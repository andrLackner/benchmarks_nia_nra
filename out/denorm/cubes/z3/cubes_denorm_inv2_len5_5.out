unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x637 (* c!3 n!0)))
 (let ((?x225 (* (- 9) ?x637)))
 (let ((?x620 (* k!2 m!1)))
 (let ((?x181 (* 2 ?x620)))
 (let ((?x603 (* m!1 m!1)))
 (let ((?x112 (* (- 5) m!1)))
 (let ((?x299 (* (- 32) k!2)))
 (let ((?x292 (* k!2 k!2)))
 (let ((?x250 (* 9 n!0)))
 (let ((?x586 (* (- 27) c!3)))
 (let ((?x114 (+ 13 ?x586 ?x250 ?x292 ?x299 ?x112 ?x603 ?x181 ?x225 (* (- 9) (* n!0 k!2)))))
 (let (($x1043 (<= ?x114 0)))
 (let ((?x291 (* 9 ?x637)))
 (let ((?x619 (* 5 k!2)))
 (let ((?x546 (* (- 1) ?x292)))
 (let ((?x556 (* (- 9) n!0)))
 (let ((?x395 (* 18 c!3)))
 (let ((?x655 (+ ?x395 ?x556 ?x546 ?x619 ?x291)))
 (let (($x426 (<= ?x655 4)))
 (let (($x698 (= ?x655 4)))
 (let ((?x543 (* (- 1) ?x620)))
 (let ((?x106 (* (- 1) ?x603)))
 (let ((?x557 (+ c!3 k!2)))
 (let ((?x608 (+ k!2 m!1)))
 (let ((?x606 (+ 6 m!1)))
 (let ((?x525 (+ 1 n!0)))
 (let ((?x545 (* ?x525 ?x606 ?x608 ?x608 ?x608 ?x557 ?x557)))
 (let ((?x575 (* (- 1) (* ?x525 ?x525 ?x606 ?x606 ?x606 ?x608 ?x608 ?x557 ?x557 ?x557))))
 (let ((?x605 (* (- 6) m!1)))
 (let ((?x530 (* (- 6) k!2)))
 (let ((?x261 (* 3 (* k!2 k!2 m!1))))
 (let ((?x287 (* 3 (* k!2 m!1 m!1))))
 (let ((?x258 (* m!1 m!1 m!1)))
 (let ((?x527 (* (- 1) n!0)))
 (let ((?x134 (* k!2 k!2 k!2)))
 (let ((?x652 (+ (- 1) ?x134 ?x527 (* (- 1) (* n!0 k!2 m!1)) (* (- 6) (* n!0 m!1)) (* (- 1) (* n!0 m!1 m!1)) (* 3 (* n!0 k!2 k!2 m!1)) (* 3 (* n!0 k!2 m!1 m!1)) ?x258 ?x287 ?x261 ?x530 ?x605 (* n!0 k!2 k!2 k!2) (* n!0 m!1 m!1 m!1) ?x575 ?x545 ?x106 ?x543 (* (- 6) (* n!0 k!2)))))
 (let ((?x116 (* ?x652 ?x114)))
 (let (($x475 (= ?x116 0)))
 (let (($x529 (not $x475)))
 (let ((?x714 (+ (* 3 n!0) (* (- 1) k!2) (* 3 (* n!0 n!0)))))
 (let (($x679 (= ?x714 (- 1))))
 (let ((?x565 (* (- 2) n!0)))
 (let ((?x548 (* 3 c!3)))
 (let ((?x688 (+ ?x548 ?x565 k!2 (* (- 1) (* n!0 k!2)))))
 (let (($x238 (= ?x688 1)))
 (let ((?x461 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x262 (= ?x461 (- 6))))
 (let (($x471 (and $x262 $x698 $x238 $x679 $x529)))
 (let ((?x298 (+ 13 ?x586 ?x299 ?x112 ?x250 ?x292 (* (- 9) (* k!2 n!0)) ?x225 ?x181 ?x603)))
 (let ((?x259 (+ (- 1) ?x530 ?x605 ?x527 (* (- 6) (* k!2 n!0)) ?x575 ?x545 ?x543 ?x106 (* (- 6) (* m!1 n!0)) (* (- 1) (* k!2 m!1 n!0)) (* (- 1) (* m!1 m!1 n!0)) (* k!2 k!2 k!2 n!0) (* 3 (* k!2 k!2 m!1 n!0)) (* 3 (* k!2 m!1 m!1 n!0)) (* m!1 m!1 m!1 n!0) ?x134 ?x261 ?x287 ?x258)))
 (let (($x384 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x395 ?x619 ?x556 ?x546 ?x291) 4) (= (+ ?x548 k!2 ?x565 (* (- 1) (* k!2 n!0))) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= (* ?x259 ?x298) 0)))))
 (let (($x391 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x463 (* m m)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x429 (* (- 5) m)))
 (let ((?x484 (+ 13 (* (- 27) c) (* (- 32) k) ?x429 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) ?x463)))
 (let ((?x707 (* m m m)))
 (let ((?x642 (* 3 (* k m m))))
 (let ((?x641 (* 3 (* k k m))))
 (let ((?x672 (* k k k)))
 (let ((?x666 (* m m m n)))
 (let ((?x640 (* 3 (* k m m n))))
 (let ((?x639 (* 3 (* k k m n))))
 (let ((?x657 (* k k k n)))
 (let ((?x563 (* (- 1) (* m m n))))
 (let ((?x566 (* (- 1) (* k m n))))
 (let ((?x552 (* (- 6) (* m n))))
 (let ((?x568 (* (- 1) ?x463)))
 (let ((?x462 (* k m)))
 (let ((?x567 (* (- 1) ?x462)))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x491 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x307 (* ?x344 ?x491 ?x72 ?x72 ?x72 ?x68 ?x68)))
 (let ((?x296 (* (- 1) (* ?x344 ?x344 ?x491 ?x491 ?x491 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x55 (* k n)))
 (let ((?x553 (* (- 6) ?x55)))
 (let ((?x532 (* (- 1) n)))
 (let ((?x558 (* (- 6) m)))
 (let ((?x559 (* (- 6) k)))
 (let ((?x327 (+ (- 1) ?x559 ?x558 ?x532 ?x553 ?x296 ?x307 ?x567 ?x568 ?x552 ?x566 ?x563 ?x657 ?x639 ?x640 ?x666 ?x672 ?x641 ?x642 ?x707)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 (* c n))) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 $x211 $x263 $x301 (not (= (* ?x327 ?x484) 0)))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x710 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x429 (* (- 5) m)))
 (let ((?x195 (* (- 18) c)))
 (let ((?x281 (+ 13 ?x195 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x429 ?x48 ?x78)))
 (let ((?x532 (* (- 1) n)))
 (let ((?x68 (+ c k)))
 (let ((?x491 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x307 (* ?x344 ?x491 ?x72 ?x72 ?x72 ?x68 ?x68)))
 (let ((?x296 (* (- 1) (* ?x344 ?x344 ?x491 ?x491 ?x491 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x135 (+ (- 1) ?x296 ?x307 (* ?x344 ?x72 ?x72 ?x72) (* (- 1) (* ?x344 ?x491 ?x72)) ?x532)))
 (let (($x660 (not (= (* ?x135 ?x281) 0))))
 (let (($x706 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x387 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x387 $x706 $x660))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x180 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x463 (* m m)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x429 (* (- 5) m)))
 (let ((?x484 (+ 13 (* (- 27) c) (* (- 32) k) ?x429 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) ?x463)))
 (let ((?x707 (* m m m)))
 (let ((?x642 (* 3 (* k m m))))
 (let ((?x641 (* 3 (* k k m))))
 (let ((?x672 (* k k k)))
 (let ((?x666 (* m m m n)))
 (let ((?x640 (* 3 (* k m m n))))
 (let ((?x639 (* 3 (* k k m n))))
 (let ((?x657 (* k k k n)))
 (let ((?x563 (* (- 1) (* m m n))))
 (let ((?x566 (* (- 1) (* k m n))))
 (let ((?x552 (* (- 6) (* m n))))
 (let ((?x568 (* (- 1) ?x463)))
 (let ((?x462 (* k m)))
 (let ((?x567 (* (- 1) ?x462)))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x491 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x307 (* ?x344 ?x491 ?x72 ?x72 ?x72 ?x68 ?x68)))
 (let ((?x296 (* (- 1) (* ?x344 ?x344 ?x491 ?x491 ?x491 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x55 (* k n)))
 (let ((?x553 (* (- 6) ?x55)))
 (let ((?x532 (* (- 1) n)))
 (let ((?x558 (* (- 6) m)))
 (let ((?x559 (* (- 6) k)))
 (let ((?x327 (+ (- 1) ?x559 ?x558 ?x532 ?x553 ?x296 ?x307 ?x567 ?x568 ?x552 ?x566 ?x563 ?x657 ?x639 ?x640 ?x666 ?x672 ?x641 ?x642 ?x707)))
 (let (($x301 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x263 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x211 (= (+ ?x40 ?x44 ?x213 ?x214 (* 9 (* c n))) 4)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x170 (and $x127 $x211 $x263 $x301 (not (= (* ?x327 ?x484) 0)))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x195 (* (- 18) c)))
 (let ((?x281 (+ 13 ?x195 (* (- 23) k) (* (- 9) (* ?x344 ?x68)) ?x429 ?x48 ?x78)))
 (let ((?x135 (+ (- 1) ?x296 ?x307 (* ?x344 ?x72 ?x72 ?x72) (* (- 1) (* ?x344 ?x491 ?x72)) ?x532)))
 (let (($x660 (not (= (* ?x135 ?x281) 0))))
 (let (($x706 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x387 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x274 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x387 $x706 $x660)))
 (rewrite (= $x274 $x170)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x712 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x429 (* (- 5) m)))
 (let ((?x195 (* (- 18) c)))
 (let ((?x281 (+ 13 ?x195 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x429 ?x48 ?x78)))
 (let ((?x532 (* (- 1) n)))
 (let ((?x68 (+ c k)))
 (let ((?x491 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x307 (* ?x344 ?x491 ?x72 ?x72 ?x72 ?x68 ?x68)))
 (let ((?x296 (* (- 1) (* ?x344 ?x344 ?x491 ?x491 ?x491 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x135 (+ (- 1) ?x296 ?x307 (* ?x344 ?x72 ?x72 ?x72) (* (- 1) (* ?x344 ?x491 ?x72)) ?x532)))
 (let (($x660 (not (= (* ?x135 ?x281) 0))))
 (let (($x706 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x649 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x611 (= (+ ?x195 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (and $x127 $x611 $x649 $x706 $x660))))))))))))))))))) :qid k!34))
 ))
 (let ((?x709 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x429 (* (- 5) m)))
 (let ((?x195 (* (- 18) c)))
 (let ((?x281 (+ 13 ?x195 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x429 ?x48 ?x78)))
 (let ((?x532 (* (- 1) n)))
 (let ((?x68 (+ c k)))
 (let ((?x491 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x307 (* ?x344 ?x491 ?x72 ?x72 ?x72 ?x68 ?x68)))
 (let ((?x296 (* (- 1) (* ?x344 ?x344 ?x491 ?x491 ?x491 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x135 (+ (- 1) ?x296 ?x307 (* ?x344 ?x72 ?x72 ?x72) (* (- 1) (* ?x344 ?x491 ?x72)) ?x532)))
 (let (($x660 (not (= (* ?x135 ?x281) 0))))
 (let (($x706 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x387 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x214 (* (- 1) ?x49)))
 (let ((?x213 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x274 (and $x127 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x213 ?x214) 4) $x387 $x706 $x660)))
 (let (($x649 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x611 (= (+ ?x195 (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49) (- 4))))
 (let (($x718 (and $x127 $x611 $x649 $x706 $x660)))
 (rewrite (= $x718 $x274)))))))))))))))))))))))))))))
 ))
 (let (($x94 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x81 (+ m 6)))
 (let ((?x72 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x85 (+ (* (- 1) ?x68 ?x68 ?x68 ?x72 ?x72 ?x81 ?x81 ?x81 ?x70 ?x70) (* ?x68 ?x68 ?x72 ?x72 ?x72 ?x81 ?x70) (* ?x72 ?x72 ?x72 ?x70))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x76 (- (- (- (* 4 1) (* 18 ?x68)) (* 9 ?x68 ?x70)) (* 5 ?x72))))
 (let ((?x89 (* (+ ?x76 (* 9 ?x70) ?x78) (- (- ?x85 (* ?x72 ?x81 ?x70)) ?x70))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x89 0))))))))))))))))))) :qid k!34))
 ))
 (let ((?x659 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x429 (* (- 5) m)))
 (let ((?x195 (* (- 18) c)))
 (let ((?x281 (+ 13 ?x195 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x429 ?x48 ?x78)))
 (let ((?x532 (* (- 1) n)))
 (let ((?x68 (+ c k)))
 (let ((?x491 (+ 6 m)))
 (let ((?x344 (+ 1 n)))
 (let ((?x307 (* ?x344 ?x491 ?x72 ?x72 ?x72 ?x68 ?x68)))
 (let ((?x296 (* (- 1) (* ?x344 ?x344 ?x491 ?x491 ?x491 ?x72 ?x72 ?x68 ?x68 ?x68))))
 (let ((?x135 (+ (- 1) ?x296 ?x307 (* ?x344 ?x72 ?x72 ?x72) (* (- 1) (* ?x344 ?x491 ?x72)) ?x532)))
 (let (($x660 (not (= (* ?x135 ?x281) 0))))
 (let (($x706 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x649 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x611 (= (+ ?x195 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x127 (= (+ m (* (- 6) n)) 6)))
 (let (($x718 (and $x127 $x611 $x649 $x706 $x660)))
 (let ((?x70 (+ n 1)))
 (let ((?x81 (+ m 6)))
 (let ((?x85 (+ (* (- 1) ?x68 ?x68 ?x68 ?x72 ?x72 ?x81 ?x81 ?x81 ?x70 ?x70) (* ?x68 ?x68 ?x72 ?x72 ?x72 ?x81 ?x70) (* ?x72 ?x72 ?x72 ?x70))))
 (let ((?x76 (- (- (- (* 4 1) (* 18 ?x68)) (* 9 ?x68 ?x70)) (* 5 ?x72))))
 (let ((?x89 (* (+ ?x76 (* 9 ?x70) ?x78) (- (- ?x85 (* ?x72 ?x81 ?x70)) ?x70))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x93 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x89 0))))))
 (rewrite (= $x93 $x718))))))))))))))))))))))))))))))))))
 ))
 (let ((@x95 (asserted $x94)))
 (let ((@x277 (mp (mp @x95 (quant-intro (proof-bind ?x659) (= $x94 $x712)) $x712) (rewrite (= $x712 $x712)) $x712)))
 (let ((@x646 (mp (mp @x277 (quant-intro (proof-bind ?x709) (= $x712 $x710)) $x710) (quant-intro (proof-bind ?x180) (= $x710 $x391)) $x391)))
 (let ((@x616 (mp (mp~ @x646 (sk (~ $x391 $x384)) $x384) (rewrite (= $x384 $x471)) $x471)))
 (let ((@x693 (and-elim @x616 $x698)))
 (let ((@x531 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x698) $x426)) @x693 $x426)))
 (let (($x636 (>= ?x655 4)))
 (let ((@x430 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x698) $x636)) @x693 $x636)))
 (let (($x224 (<= ?x461 (- 6))))
 (let ((@x113 (and-elim @x616 $x262)))
 (let ((@x143 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x262) $x224)) @x113 $x224)))
 (let (($x233 (>= ?x461 (- 6))))
 (let ((@x441 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x262) $x233)) @x113 $x233)))
 (let (($x635 (<= ?x688 1)))
 (let ((@x654 (and-elim @x616 $x238)))
 (let ((@x337 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x238) $x635)) @x654 $x635)))
 (let (($x682 (>= ?x688 1)))
 (let ((@x601 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x238) $x682)) @x654 $x682)))
 (let (($x187 (<= ?x714 (- 1))))
 (let ((@x687 (and-elim @x616 $x679)))
 (let ((@x230 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x679) $x187)) @x687 $x187)))
 (let (($x549 (>= ?x714 (- 1))))
 (let ((@x675 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x679) $x549)) @x687 $x549)))
 (let ((@x1273 ((_ th-lemma arith) (hypothesis (not $x1043)) @x441 @x143 @x675 @x230 @x675 @x230 @x441 @x143 @x441 @x143 @x675 @x230 @x675 @x230 @x601 @x337 @x441 @x143 @x430 @x531 false)))
 (let ((@x1201 (lemma @x1273 $x1043)))
 (let (($x1236 (>= ?x114 0)))
 (let ((@x1173 ((_ th-lemma arith) (hypothesis (not $x1236)) @x675 @x230 @x675 @x230 @x675 @x230 @x675 @x230 @x441 @x143 @x441 @x143 @x675 @x230 @x675 @x230 @x441 @x143 @x601 @x337 @x675 @x230 @x441 @x143 @x675 @x230 @x430 @x531 @x430 @x531 @x675 @x230 @x441 @x143 @x441 @x143 @x601 @x337 false)))
 (let ((@x1185 (lemma @x1173 $x1236)))
 (let (($x1267 (not (>= ?x116 0))))
 (let (($x425 (<= ?x116 0)))
 (let (($x1182 (= ?x114 0)))
 (let ((@x1244 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1182 (not $x1043) (not $x1236))) @x1185 (or $x1182 (not $x1043)))))
 (let ((@x1216 (hypothesis $x1182)))
 (let ((@x1237 ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x425)) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1182) $x1236)) @x1216 $x1236) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1182) $x1043)) @x1216 $x1043) false)))
 (let ((@x1264 (unit-resolution (lemma @x1237 (or (not $x1182) $x425)) (unit-resolution @x1244 @x1201 $x1182) $x425)))
 (let ((@x1271 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x475 (not $x425) $x1267)) (and-elim @x616 $x529) (or (not $x425) $x1267))))
 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x1271 @x1264 $x1267) @x1185 @x1201 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 186
 :arith-assert-diseq        6
 :arith-assert-lower        763
 :arith-assert-upper        656
 :arith-bound-prop          8
 :arith-branch-var          27
 :arith-conflicts           38
 :arith-eq-adapter          15
 :arith-fixed-eqs           194
 :arith-gcd-tests           291
 :arith-gomory-cuts         19
 :arith-grobner             40
 :arith-ineq-splits         27
 :arith-max-min             4403
 :arith-nonlinear-bounds    296
 :arith-nonlinear-horner    507
 :arith-num-rows            24
 :arith-offset-eqs          36
 :arith-patches             57
 :arith-patches_succ        3
 :arith-pivots              850
 :arith-pseudo-nonlinear    176
 :arith-row-summations      6427
 :arith-tableau-max-columns 75
 :arith-tableau-max-rows    24
 :conflicts                 42
 :decisions                 147
 :del-clause                85
 :final-checks              153
 :max-memory                4.34
 :memory                    3.29
 :minimized-lits            4
 :mk-bool-var               230
 :mk-clause                 160
 :num-allocs                130122572
 :num-checks                1
 :propagations              150
 :rlimit-count              897690
 :time                      1.09
 :total-time                1.10)
