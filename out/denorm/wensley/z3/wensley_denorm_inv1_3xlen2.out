unsat
((set-logic NRA)
(declare-fun d!6 () Real)
(declare-fun b!7 () Real)
(declare-fun a!8 () Real)
(declare-fun y!5 () Real)
(proof
(let ((?x1188 (* b00 y00 y!5 y!5 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x1158 (* a00 d00 y!5 y!5 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x1157 (* d00 y!5 y!5 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x1152 (* b00 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x1142 (* d00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x1139 (* b00 y00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x1130 (* a00 d00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x1118 (* d00 y!5 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6)))
 (let ((?x1117 (* a00 d00 y!5 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6)))
 (let ((?x1102 (* b00 y!5 y!5 y!5 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x1091 (* b00 y00 y!5 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6)))
 (let ((?x1086 (* b00 y!5 y!5 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6)))
 (let ((?x1064 (* d00 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x971 (* b00 y00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6)))
 (let ((?x936 (* b00 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6)))
 (let ((?x836 (* b00 y00 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x833 (* d00 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x819 (* a00 d00 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x751 (* a00 d00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6)))
 (let ((?x687 (* b00 y00 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x655 (* d00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6)))
 (let ((?x554 (* b00 y!5 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x378 (* d00 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x360 (* b00 y00 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x322 (* a00 d00 y!5 y!5 y!5 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x283 (* b00 y00 y!5 y!5 y!5 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x254 (* b00 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x203 (* a00 d00 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x195 (* d00 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x194 (* a00 d00 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x171 (* b00 y!5 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x90 (* b00 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6)))
 (let ((?x1315 (+ (* (/ 1.0 256.0) ?x90) (* (- (/ 1.0 128.0)) ?x171) (* (/ 1.0 1024.0) ?x194) (* (- (/ 1.0 1024.0)) ?x195) (* (/ 1.0 1024.0) ?x203) (* (/ 1.0 512.0) ?x254) (* (- (/ 1.0 256.0)) ?x283) (* (/ 1.0 512.0) ?x322) (* (- (/ 1.0 512.0)) ?x360) (* (- (/ 1.0 512.0)) ?x378) (* (/ 1.0 512.0) ?x554) (* (/ 1.0 128.0) ?x655) (* (- (/ 1.0 512.0)) ?x687) (* (- (/ 1.0 128.0)) ?x751) (* (- (/ 1.0 256.0)) ?x819) (* (/ 1.0 256.0) ?x833) (* (/ 1.0 128.0) ?x836) (* (- (/ 1.0 64.0)) ?x936) (* (/ 1.0 64.0) ?x971) (* (- (/ 1.0 1024.0)) ?x1064) (* (- (/ 1.0 64.0)) ?x1086) (* (/ 1.0 64.0) ?x1091) (* (- (/ 1.0 128.0)) ?x1102) (* (- (/ 1.0 128.0)) ?x1117) (* (/ 1.0 128.0) ?x1118) (* (/ 1.0 512.0) ?x1130) (* (- (/ 1.0 256.0)) ?x1139) (* (- (/ 1.0 512.0)) ?x1142) (* (/ 1.0 256.0) ?x1152) (* (/ 1.0 256.0) ?x1157) (* (- (/ 1.0 256.0)) ?x1158) (* (/ 1.0 128.0) ?x1188))))
 (let (($x1282 (>= ?x1315 0.0)))
 (let (($x839 (not $x1282)))
 (let (($x1156 (= 0.0 ?x1315)))
 (let (($x239 (not $x1156)))
 (let ((@x228 (symm (commutativity (= $x1156 (= ?x1315 0.0))) (= (= ?x1315 0.0) $x1156))))
 (let (($x1313 (= ?x1315 0.0)))
 (let (($x97 (not $x1313)))
 (let ((?x1286 (* 2.0 (* b00 y!5))))
 (let ((?x842 (* (- 1.0) (* d00 a!8))))
 (let ((?x1038 (* b00 d!6)))
 (let ((?x838 (* d00 b!7)))
 (let ((?x1143 (* (- 1.0) ?x838)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let ((?x1031 (* (/ 1.0 8.0) (* y!5 b!7 b!7 b!7 b!7))))
 (let ((?x387 (+ (* (/ 1.0 16.0) (* a!8 b!7 b!7 b!7 d!6)) (* (/ 1.0 16.0) (* b!7 b!7 b!7 b!7 d!6)) (* (/ 1.0 8.0) (* y!5 a!8 b!7 b!7 b!7)) ?x1031 (* (/ 1.0 16.0) (* y!5 b!7 b!7 d!6 d!6 d!6)) (* (/ 1.0 64.0) (* b!7 b!7 d!6 d!6 d!6 d!6)) (* (/ 1.0 16.0) (* y!5 y!5 b!7 b!7 d!6 d!6)))))
 (let ((?x1002 (* (- (/ 1.0 4.0)) (* y!5 y!5 y!5 b!7 b!7 b!7))))
 (let ((?x1257 (+ (* (- (/ 1.0 32.0)) (* b!7 b!7 b!7 d!6 d!6 d!6)) (* (- (/ 3.0 8.0)) (* y!5 y!5 b!7 b!7 b!7 d!6)) (* (/ 1.0 16.0) (* a!8 b!7 b!7 b!7 d!6 d!6 d!6)) (* (/ 1.0 32.0) (* b!7 b!7 b!7 b!7 d!6 d!6 d!6)) (* (/ 1.0 16.0) (* y!5 a!8 a!8 b!7 b!7 d!6 d!6)) (* (/ 1.0 8.0) (* y!5 a!8 b!7 b!7 b!7 d!6 d!6)) (* (- (/ 1.0 32.0)) (* a!8 b!7 b!7 d!6 d!6 d!6)) (* (- (/ 3.0 8.0)) (* y!5 y!5 a!8 b!7 b!7 d!6)) (* (- (/ 3.0 16.0)) (* y!5 a!8 b!7 b!7 d!6 d!6)) (* (- (/ 3.0 16.0)) (* y!5 b!7 b!7 b!7 d!6 d!6)) (* (/ 1.0 16.0) (* y!5 b!7 b!7 b!7 b!7 d!6 d!6)) (* (- (/ 1.0 4.0)) (* y!5 y!5 y!5 a!8 b!7 b!7)) ?x1002 (* (/ 1.0 32.0) (* a!8 a!8 b!7 b!7 d!6 d!6 d!6)))))
 (let ((?x341 (+ (* (- (/ 3.0 16.0)) (* y!5 a!8 b!7 d!6 d!6 d!6)) (* (- (/ 1.0 8.0)) (* b!7 b!7 d!6 d!6)) (* (- (/ 1.0 32.0)) (* a!8 b!7 d!6 d!6 d!6 d!6)) (* (- (/ 1.0 4.0)) (* y!5 b!7 b!7 d!6)) (* (- (/ 1.0 8.0)) (* a!8 b!7 d!6 d!6)) (* (- (/ 3.0 16.0)) (* y!5 b!7 b!7 d!6 d!6 d!6)) (* (- (/ 1.0 32.0)) (* b!7 b!7 d!6 d!6 d!6 d!6)) (* (- (/ 1.0 4.0)) (* y!5 y!5 y!5 a!8 b!7 d!6)) (* (- (/ 3.0 8.0)) (* y!5 y!5 b!7 b!7 d!6 d!6)) (* (- (/ 3.0 8.0)) (* y!5 y!5 a!8 b!7 d!6 d!6)) (* (- (/ 1.0 4.0)) (* y!5 a!8 b!7 d!6)) (* (- (/ 1.0 4.0)) (* y!5 y!5 y!5 b!7 b!7 d!6)))))
 (let (($x1075 (= (* ?x341 ?x1257 ?x387 (+ ?x30 ?x94 ?x1143 ?x1038 ?x842 ?x1286)) 0.0)))
 (let ((?x1341 (+ ?x30 ?x1143 ?x94 ?x842 ?x1286 ?x1038)))
 (let (($x1343 (= ?x1341 0.0)))
 (let ((?x479 (+ (* 2.0 (* y!5 b!7)) (* (- 1.0) (* a!8 d!6)) (* (- 2.0) (* y00 b!7)) (* a00 d!6))))
 (let (($x466 (= ?x479 0.0)))
 (let (($x684 (not $x1075)))
 (let (($x472 (or $x97 $x684)))
 (let ((?x974 (+ ?x838 (* (- 1.0) ?x1038))))
 (let (($x108 (= ?x974 0.0)))
 (let ((?x369 (+ ?x30 ?x94 ?x842 ?x1286)))
 (let (($x855 (= ?x369 0.0)))
 (let (($x735 (and $x855 $x108 $x466 $x472)))
 (let ((?x421 (* d!6 b00)))
 (let ((?x614 (* 2.0 (* y!5 b00))))
 (let ((?x431 (* (- 1.0) (* a!8 d00))))
 (let ((?x1041 (+ (* (/ 1.0 8.0) (* y!5 b!7 b!7 b!7 a!8)) (* (/ 1.0 16.0) (* y!5 y!5 d!6 d!6 b!7 b!7)) ?x1031 (* (/ 1.0 16.0) (* d!6 b!7 b!7 b!7 b!7)) (* (/ 1.0 16.0) (* d!6 b!7 b!7 b!7 a!8)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 d!6 b!7 b!7)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 b!7 b!7)))))
 (let ((?x196 (+ (* (- (/ 1.0 4.0)) (* y!5 y!5 y!5 b!7 b!7 a!8)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 b!7 b!7 a!8 a!8)) (* (- (/ 3.0 16.0)) (* y!5 d!6 d!6 b!7 b!7 a!8)) (* (- (/ 3.0 16.0)) (* y!5 d!6 d!6 b!7 b!7 b!7)) (* (- (/ 3.0 8.0)) (* y!5 y!5 d!6 b!7 b!7 a!8)) (* (- (/ 3.0 8.0)) (* y!5 y!5 d!6 b!7 b!7 b!7)) ?x1002 (* (- (/ 1.0 32.0)) (* d!6 d!6 d!6 b!7 b!7 b!7)) (* (- (/ 1.0 32.0)) (* d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 1.0 8.0) (* y!5 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 1.0 16.0) (* d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 b!7 b!7 a!8 a!8)))))
 (let ((?x815 (+ (* (- (/ 1.0 4.0)) (* y!5 y!5 y!5 d!6 b!7 a!8)) (* (- (/ 3.0 8.0)) (* y!5 y!5 d!6 d!6 b!7 b!7)) (* (- (/ 1.0 4.0)) (* y!5 d!6 b!7 a!8)) (* (- (/ 3.0 16.0)) (* y!5 d!6 d!6 d!6 b!7 b!7)) (* (- (/ 1.0 32.0)) (* d!6 d!6 d!6 d!6 b!7 b!7)) (* (- (/ 1.0 4.0)) (* y!5 y!5 y!5 d!6 b!7 b!7)) (* (- (/ 3.0 8.0)) (* y!5 y!5 d!6 d!6 b!7 a!8)) (* (- (/ 3.0 16.0)) (* y!5 d!6 d!6 d!6 b!7 a!8)) (* (- (/ 1.0 32.0)) (* d!6 d!6 d!6 d!6 b!7 a!8)) (* (- (/ 1.0 4.0)) (* y!5 d!6 b!7 b!7)) (* (- (/ 1.0 8.0)) (* d!6 d!6 b!7 b!7)) (* (- (/ 1.0 8.0)) (* d!6 d!6 b!7 a!8)))))
 (let ((?x1048 (* ?x815 ?x196 ?x1041 (+ ?x30 ?x431 ?x94 ?x614 (* (- 1.0) (* b!7 d00)) ?x421))))
 (let ((?x1039 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 b00)))
 (let ((?x1193 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 b00 y00)))
 (let ((?x1167 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 d00)))
 (let ((?x296 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a00 d00)))
 (let ((?x1162 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 b00)))
 (let ((?x1149 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 b00 y00)))
 (let ((?x1161 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 d00)))
 (let ((?x1160 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a00 d00)))
 (let ((?x294 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 b00)))
 (let ((?x903 (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 b00 y00)))
 (let ((?x562 (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 d00)))
 (let ((?x902 (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a00 d00)))
 (let ((?x896 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 b00)))
 (let ((?x1019 (* y!5 y!5 y!5 y!5 y!5 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 b00 y00)))
 (let ((?x887 (* y!5 y!5 y!5 y!5 y!5 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 d00)))
 (let ((?x889 (* y!5 y!5 y!5 y!5 y!5 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a00 d00)))
 (let ((?x886 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 b00)))
 (let ((?x850 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 b00 y00)))
 (let ((?x291 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 d00)))
 (let ((?x851 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a00 d00)))
 (let ((?x247 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 b00)))
 (let ((?x582 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 b00 y00)))
 (let ((?x1251 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 d00)))
 (let ((?x1284 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a00 d00)))
 (let ((?x1026 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 b00)))
 (let ((?x857 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 b00 y00)))
 (let ((?x891 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 d00)))
 (let ((?x633 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a00 d00)))
 (let ((?x646 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 y!5 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 b00)))
 (let ((?x384 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 b00 y00)))
 (let ((?x377 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 d00)))
 (let ((?x1245 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a00 d00)))
 (let ((?x221 (+ (* (/ 1.0 128.0) ?x1245) (* (- (/ 1.0 128.0)) ?x377) (* (- (/ 1.0 64.0)) ?x384) (* (/ 1.0 64.0) ?x646) (* (- (/ 1.0 512.0)) ?x633) (* (/ 1.0 512.0) ?x891) (* (/ 1.0 256.0) ?x857) (* (- (/ 1.0 256.0)) ?x1026) (* (/ 1.0 256.0) ?x1284) (* (- (/ 1.0 256.0)) ?x1251) (* (- (/ 1.0 128.0)) ?x582) (* (/ 1.0 128.0) ?x247) (* (- (/ 1.0 1024.0)) ?x851) (* (/ 1.0 1024.0) ?x291) (* (/ 1.0 512.0) ?x850) (* (- (/ 1.0 512.0)) ?x886) (* (/ 1.0 128.0) ?x889) (* (- (/ 1.0 128.0)) ?x887) (* (- (/ 1.0 64.0)) ?x1019) (* (/ 1.0 64.0) ?x896) (* (- (/ 1.0 512.0)) ?x902) (* (/ 1.0 512.0) ?x562) (* (/ 1.0 256.0) ?x903) (* (- (/ 1.0 256.0)) ?x294) (* (/ 1.0 256.0) ?x1160) (* (- (/ 1.0 256.0)) ?x1161) (* (- (/ 1.0 128.0)) ?x1149) (* (/ 1.0 128.0) ?x1162) (* (- (/ 1.0 1024.0)) ?x296) (* (/ 1.0 1024.0) ?x1167) (* (/ 1.0 512.0) ?x1193) (* (- (/ 1.0 512.0)) ?x1039))))
 (let ((?x401 (+ (* d!6 a!8) (* (- 2.0) (* y!5 b!7)) (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00)))))
 (let (($x1043 (and (= (+ ?x30 ?x431 ?x94 ?x614) 0.0) (= (+ (* b!7 d00) (* (- 1.0) ?x421)) 0.0) (= ?x401 0.0) (or (not (= ?x221 0.0)) (not (= ?x1048 0.0))))))
 (let (($x1312 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x140 (* d b00)))
 (let ((?x134 (* b d00)))
 (let ((?x135 (* (- 1.0) ?x134)))
 (let ((?x100 (* 2.0 (* y b00))))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x33 (* a d00)))
 (let ((?x115 (* (- 1.0) ?x33)))
 (let ((?x30 (* a00 d00)))
 (let ((?x217 (* y y d d b b)))
 (let ((?x220 (* (/ 1.0 16.0) ?x217)))
 (let ((?x164 (* (/ 1.0 8.0) (* y b b b a))))
 (let ((?x983 (+ ?x164 ?x220 (* (/ 1.0 8.0) (* y b b b b)) (* (/ 1.0 16.0) (* d b b b b)) (* (/ 1.0 16.0) (* d b b b a)) (* (/ 1.0 16.0) (* y d d d b b)) (* (/ 1.0 64.0) (* d d d d b b)))))
 (let ((?x204 (* (/ 1.0 16.0) (* y d d b b a a))))
 (let ((?x175 (* (- (/ 1.0 4.0)) (* y y y b b a))))
 (let ((?x832 (+ ?x175 ?x204 (* (- (/ 3.0 16.0)) (* y d d b b a)) (* (- (/ 3.0 16.0)) (* y d d b b b)) (* (- (/ 3.0 8.0)) (* y y d b b a)) (* (- (/ 3.0 8.0)) (* y y d b b b)) (* (- (/ 1.0 4.0)) (* y y y b b b)) (* (- (/ 1.0 32.0)) (* d d d b b b)) (* (- (/ 1.0 32.0)) (* d d d b b a)) (* (/ 1.0 16.0) (* y d d b b b b)) (* (/ 1.0 8.0) (* y d d b b b a)) (* (/ 1.0 32.0) (* d d d b b b b)) (* (/ 1.0 16.0) (* d d d b b b a)) (* (/ 1.0 32.0) (* d d d b b a a)))))
 (let ((?x248 (* (- (/ 1.0 4.0)) (* y d b a))))
 (let ((?x197 (* (- (/ 1.0 4.0)) (* y y y d b a))))
 (let ((?x1274 (+ ?x197 (* (- (/ 3.0 8.0)) ?x217) ?x248 (* (- (/ 3.0 16.0)) (* y d d d b b)) (* (- (/ 1.0 32.0)) (* d d d d b b)) (* (- (/ 1.0 4.0)) (* y y y d b b)) (* (- (/ 3.0 8.0)) (* y y d d b a)) (* (- (/ 3.0 16.0)) (* y d d d b a)) (* (- (/ 1.0 32.0)) (* d d d d b a)) (* (- (/ 1.0 4.0)) (* y d b b)) (* (- (/ 1.0 8.0)) (* d d b b)) (* (- (/ 1.0 8.0)) (* d d b a)))))
 (let (($x1364 (not (= (* ?x1274 ?x832 ?x983 (+ ?x30 ?x115 ?x94 ?x100 ?x135 ?x140)) 0.0))))
 (let ((?x618 (* y y y y y d d d d d b b b b b a a a b00)))
 (let ((?x608 (* y y y y d d d d d b b b b b a a a b00 y00)))
 (let ((?x598 (* y y y y d d d d d b b b b b a a a a d00)))
 (let ((?x588 (* y y y y d d d d d b b b b b a a a a00 d00)))
 (let ((?x578 (* y y y y y y y d d d b b b b b a a b00)))
 (let ((?x568 (* y y y y y y d d d b b b b b a a b00 y00)))
 (let ((?x558 (* y y y y y y d d d b b b b b a a a d00)))
 (let ((?x548 (* y y y y y y d d d b b b b b a a a00 d00)))
 (let ((?x538 (* y y y y d d d b b b b b b a a a a b00)))
 (let ((?x528 (* y y y d d d b b b b b b a a a a b00 y00)))
 (let ((?x518 (* y y y d d d b b b b b b a a a a a d00)))
 (let ((?x508 (* y y y d d d b b b b b b a a a a a00 d00)))
 (let ((?x498 (* y y y y y y d b b b b b b a a a b00)))
 (let ((?x488 (* y y y y y d b b b b b b a a a b00 y00)))
 (let ((?x478 (* y y y y y d b b b b b b a a a a d00)))
 (let ((?x468 (* y y y y y d b b b b b b a a a a00 d00)))
 (let ((?x458 (* y y y y y y y d d d d d b b b b b a a a b00)))
 (let ((?x448 (* y y y y y y d d d d d b b b b b a a a b00 y00)))
 (let ((?x438 (* y y y y y y d d d d d b b b b b a a a a d00)))
 (let ((?x427 (* y y y y y y d d d d d b b b b b a a a a00 d00)))
 (let ((?x416 (* y y y y y y y y y d d d b b b b b a a b00)))
 (let ((?x406 (* y y y y y y y y d d d b b b b b a a b00 y00)))
 (let ((?x396 (* y y y y y y y y d d d b b b b b a a a d00)))
 (let ((?x386 (* y y y y y y y y d d d b b b b b a a a00 d00)))
 (let ((?x376 (* y y y y y y d d d b b b b b b a a a a b00)))
 (let ((?x365 (* y y y y y d d d b b b b b b a a a a b00 y00)))
 (let ((?x354 (* y y y y y d d d b b b b b b a a a a a d00)))
 (let ((?x343 (* y y y y y d d d b b b b b b a a a a a00 d00)))
 (let ((?x332 (* y y y y y y y y d b b b b b b a a a b00)))
 (let ((?x321 (* y y y y y y y d b b b b b b a a a b00 y00)))
 (let ((?x310 (* y y y y y y y d b b b b b b a a a a d00)))
 (let ((?x299 (* y y y y y y y d b b b b b b a a a a00 d00)))
 (let ((?x623 (+ (* (/ 1.0 128.0) ?x299) (* (- (/ 1.0 128.0)) ?x310) (* (- (/ 1.0 64.0)) ?x321) (* (/ 1.0 64.0) ?x332) (* (- (/ 1.0 512.0)) ?x343) (* (/ 1.0 512.0) ?x354) (* (/ 1.0 256.0) ?x365) (* (- (/ 1.0 256.0)) ?x376) (* (/ 1.0 256.0) ?x386) (* (- (/ 1.0 256.0)) ?x396) (* (- (/ 1.0 128.0)) ?x406) (* (/ 1.0 128.0) ?x416) (* (- (/ 1.0 1024.0)) ?x427) (* (/ 1.0 1024.0) ?x438) (* (/ 1.0 512.0) ?x448) (* (- (/ 1.0 512.0)) ?x458) (* (/ 1.0 128.0) ?x468) (* (- (/ 1.0 128.0)) ?x478) (* (- (/ 1.0 64.0)) ?x488) (* (/ 1.0 64.0) ?x498) (* (- (/ 1.0 512.0)) ?x508) (* (/ 1.0 512.0) ?x518) (* (/ 1.0 256.0) ?x528) (* (- (/ 1.0 256.0)) ?x538) (* (/ 1.0 256.0) ?x548) (* (- (/ 1.0 256.0)) ?x558) (* (- (/ 1.0 128.0)) ?x568) (* (/ 1.0 128.0) ?x578) (* (- (/ 1.0 1024.0)) ?x588) (* (/ 1.0 1024.0) ?x598) (* (/ 1.0 512.0) ?x608) (* (- (/ 1.0 512.0)) ?x618))))
 (let (($x206 (not (= ?x623 0.0))))
 (let ((?x163 (* (- 2.0) (* y b))))
 (let ((?x147 (* d a)))
 (let (($x198 (= (+ ?x147 ?x163 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x136 (= (+ ?x134 (* (- 1.0) ?x140)) 0.0)))
 (let (($x126 (= (+ ?x30 ?x115 ?x94 ?x100) 0.0)))
 (and $x126 $x136 $x198 (or $x206 $x1364)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x635 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x919 (+ ?x94 ?x30 (* 2.0 (* b00 (+ y (* (/ 1.0 2.0) d)))) (* (- 1.0) (* d00 (+ a b))))))
 (let ((?x178 (* (/ 1.0 2.0) d)))
 (let ((?x950 (+ y ?x178)))
 (let ((?x89 (+ (* (/ 1.0 8.0) (* (+ a b) ?x950 b b b)) (* (/ 1.0 16.0) (* ?x950 ?x950 d d b b)))))
 (let ((?x964 (* (/ 1.0 16.0) (* (+ a b) (+ a b) ?x950 d d b b))))
 (let ((?x124 (+ (* (- (/ 1.0 4.0)) (* (+ a b) ?x950 ?x950 ?x950 d b)) (* (- (/ 1.0 4.0)) (* (+ a b) ?x950 d b)))))
 (let ((?x493 (* ?x124 (+ (* (- (/ 1.0 4.0)) (* (+ a b) ?x950 ?x950 ?x950 b b)) ?x964) ?x89 ?x919)))
 (let ((?x209 (* 2.0 (* b00 y))))
 (let ((?x275 (+ ?x94 ?x30 ?x209 (* (- 1.0) (* d00 a)))))
 (let ((?x217 (* y y d d b b)))
 (let ((?x220 (* (/ 1.0 16.0) ?x217)))
 (let ((?x164 (* (/ 1.0 8.0) (* y b b b a))))
 (let ((?x204 (* (/ 1.0 16.0) (* y d d b b a a))))
 (let ((?x175 (* (- (/ 1.0 4.0)) (* y y y b b a))))
 (let ((?x248 (* (- (/ 1.0 4.0)) (* y d b a))))
 (let ((?x197 (* (- (/ 1.0 4.0)) (* y y y d b a))))
 (let (($x794 (not (= (* (+ ?x197 ?x248) (+ ?x175 ?x204) (+ ?x164 ?x220) ?x275) 0.0))))
 (let ((?x163 (* (- 2.0) (* y b))))
 (let ((?x147 (* d a)))
 (let (($x786 (= (+ ?x147 ?x163 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (and (= ?x275 0.0) (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x786 (or $x794 (not (= ?x493 0.0)))))))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x1310 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x140 (* d b00)))
 (let ((?x134 (* b d00)))
 (let ((?x135 (* (- 1.0) ?x134)))
 (let ((?x100 (* 2.0 (* y b00))))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x33 (* a d00)))
 (let ((?x115 (* (- 1.0) ?x33)))
 (let ((?x30 (* a00 d00)))
 (let ((?x217 (* y y d d b b)))
 (let ((?x220 (* (/ 1.0 16.0) ?x217)))
 (let ((?x164 (* (/ 1.0 8.0) (* y b b b a))))
 (let ((?x983 (+ ?x164 ?x220 (* (/ 1.0 8.0) (* y b b b b)) (* (/ 1.0 16.0) (* d b b b b)) (* (/ 1.0 16.0) (* d b b b a)) (* (/ 1.0 16.0) (* y d d d b b)) (* (/ 1.0 64.0) (* d d d d b b)))))
 (let ((?x204 (* (/ 1.0 16.0) (* y d d b b a a))))
 (let ((?x175 (* (- (/ 1.0 4.0)) (* y y y b b a))))
 (let ((?x832 (+ ?x175 ?x204 (* (- (/ 3.0 16.0)) (* y d d b b a)) (* (- (/ 3.0 16.0)) (* y d d b b b)) (* (- (/ 3.0 8.0)) (* y y d b b a)) (* (- (/ 3.0 8.0)) (* y y d b b b)) (* (- (/ 1.0 4.0)) (* y y y b b b)) (* (- (/ 1.0 32.0)) (* d d d b b b)) (* (- (/ 1.0 32.0)) (* d d d b b a)) (* (/ 1.0 16.0) (* y d d b b b b)) (* (/ 1.0 8.0) (* y d d b b b a)) (* (/ 1.0 32.0) (* d d d b b b b)) (* (/ 1.0 16.0) (* d d d b b b a)) (* (/ 1.0 32.0) (* d d d b b a a)))))
 (let ((?x248 (* (- (/ 1.0 4.0)) (* y d b a))))
 (let ((?x197 (* (- (/ 1.0 4.0)) (* y y y d b a))))
 (let ((?x1274 (+ ?x197 (* (- (/ 3.0 8.0)) ?x217) ?x248 (* (- (/ 3.0 16.0)) (* y d d d b b)) (* (- (/ 1.0 32.0)) (* d d d d b b)) (* (- (/ 1.0 4.0)) (* y y y d b b)) (* (- (/ 3.0 8.0)) (* y y d d b a)) (* (- (/ 3.0 16.0)) (* y d d d b a)) (* (- (/ 1.0 32.0)) (* d d d d b a)) (* (- (/ 1.0 4.0)) (* y d b b)) (* (- (/ 1.0 8.0)) (* d d b b)) (* (- (/ 1.0 8.0)) (* d d b a)))))
 (let (($x1364 (not (= (* ?x1274 ?x832 ?x983 (+ ?x30 ?x115 ?x94 ?x100 ?x135 ?x140)) 0.0))))
 (let ((?x618 (* y y y y y d d d d d b b b b b a a a b00)))
 (let ((?x608 (* y y y y d d d d d b b b b b a a a b00 y00)))
 (let ((?x598 (* y y y y d d d d d b b b b b a a a a d00)))
 (let ((?x588 (* y y y y d d d d d b b b b b a a a a00 d00)))
 (let ((?x578 (* y y y y y y y d d d b b b b b a a b00)))
 (let ((?x568 (* y y y y y y d d d b b b b b a a b00 y00)))
 (let ((?x558 (* y y y y y y d d d b b b b b a a a d00)))
 (let ((?x548 (* y y y y y y d d d b b b b b a a a00 d00)))
 (let ((?x538 (* y y y y d d d b b b b b b a a a a b00)))
 (let ((?x528 (* y y y d d d b b b b b b a a a a b00 y00)))
 (let ((?x518 (* y y y d d d b b b b b b a a a a a d00)))
 (let ((?x508 (* y y y d d d b b b b b b a a a a a00 d00)))
 (let ((?x498 (* y y y y y y d b b b b b b a a a b00)))
 (let ((?x488 (* y y y y y d b b b b b b a a a b00 y00)))
 (let ((?x478 (* y y y y y d b b b b b b a a a a d00)))
 (let ((?x468 (* y y y y y d b b b b b b a a a a00 d00)))
 (let ((?x458 (* y y y y y y y d d d d d b b b b b a a a b00)))
 (let ((?x448 (* y y y y y y d d d d d b b b b b a a a b00 y00)))
 (let ((?x438 (* y y y y y y d d d d d b b b b b a a a a d00)))
 (let ((?x427 (* y y y y y y d d d d d b b b b b a a a a00 d00)))
 (let ((?x416 (* y y y y y y y y y d d d b b b b b a a b00)))
 (let ((?x406 (* y y y y y y y y d d d b b b b b a a b00 y00)))
 (let ((?x396 (* y y y y y y y y d d d b b b b b a a a d00)))
 (let ((?x386 (* y y y y y y y y d d d b b b b b a a a00 d00)))
 (let ((?x376 (* y y y y y y d d d b b b b b b a a a a b00)))
 (let ((?x365 (* y y y y y d d d b b b b b b a a a a b00 y00)))
 (let ((?x354 (* y y y y y d d d b b b b b b a a a a a d00)))
 (let ((?x343 (* y y y y y d d d b b b b b b a a a a a00 d00)))
 (let ((?x332 (* y y y y y y y y d b b b b b b a a a b00)))
 (let ((?x321 (* y y y y y y y d b b b b b b a a a b00 y00)))
 (let ((?x310 (* y y y y y y y d b b b b b b a a a a d00)))
 (let ((?x299 (* y y y y y y y d b b b b b b a a a a00 d00)))
 (let ((?x623 (+ (* (/ 1.0 128.0) ?x299) (* (- (/ 1.0 128.0)) ?x310) (* (- (/ 1.0 64.0)) ?x321) (* (/ 1.0 64.0) ?x332) (* (- (/ 1.0 512.0)) ?x343) (* (/ 1.0 512.0) ?x354) (* (/ 1.0 256.0) ?x365) (* (- (/ 1.0 256.0)) ?x376) (* (/ 1.0 256.0) ?x386) (* (- (/ 1.0 256.0)) ?x396) (* (- (/ 1.0 128.0)) ?x406) (* (/ 1.0 128.0) ?x416) (* (- (/ 1.0 1024.0)) ?x427) (* (/ 1.0 1024.0) ?x438) (* (/ 1.0 512.0) ?x448) (* (- (/ 1.0 512.0)) ?x458) (* (/ 1.0 128.0) ?x468) (* (- (/ 1.0 128.0)) ?x478) (* (- (/ 1.0 64.0)) ?x488) (* (/ 1.0 64.0) ?x498) (* (- (/ 1.0 512.0)) ?x508) (* (/ 1.0 512.0) ?x518) (* (/ 1.0 256.0) ?x528) (* (- (/ 1.0 256.0)) ?x538) (* (/ 1.0 256.0) ?x548) (* (- (/ 1.0 256.0)) ?x558) (* (- (/ 1.0 128.0)) ?x568) (* (/ 1.0 128.0) ?x578) (* (- (/ 1.0 1024.0)) ?x588) (* (/ 1.0 1024.0) ?x598) (* (/ 1.0 512.0) ?x608) (* (- (/ 1.0 512.0)) ?x618))))
 (let (($x206 (not (= ?x623 0.0))))
 (let ((?x163 (* (- 2.0) (* y b))))
 (let ((?x147 (* d a)))
 (let (($x198 (= (+ ?x147 ?x163 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x136 (= (+ ?x134 (* (- 1.0) ?x140)) 0.0)))
 (let (($x126 (= (+ ?x30 ?x115 ?x94 ?x100) 0.0)))
 (let (($x1402 (and $x126 $x136 $x198 (or $x206 $x1364))))
 (let ((?x919 (+ ?x94 ?x30 (* 2.0 (* b00 (+ y (* (/ 1.0 2.0) d)))) (* (- 1.0) (* d00 (+ a b))))))
 (let ((?x178 (* (/ 1.0 2.0) d)))
 (let ((?x950 (+ y ?x178)))
 (let ((?x89 (+ (* (/ 1.0 8.0) (* (+ a b) ?x950 b b b)) (* (/ 1.0 16.0) (* ?x950 ?x950 d d b b)))))
 (let ((?x964 (* (/ 1.0 16.0) (* (+ a b) (+ a b) ?x950 d d b b))))
 (let ((?x124 (+ (* (- (/ 1.0 4.0)) (* (+ a b) ?x950 ?x950 ?x950 d b)) (* (- (/ 1.0 4.0)) (* (+ a b) ?x950 d b)))))
 (let ((?x493 (* ?x124 (+ (* (- (/ 1.0 4.0)) (* (+ a b) ?x950 ?x950 ?x950 b b)) ?x964) ?x89 ?x919)))
 (let ((?x209 (* 2.0 (* b00 y))))
 (let ((?x275 (+ ?x94 ?x30 ?x209 (* (- 1.0) (* d00 a)))))
 (let (($x794 (not (= (* (+ ?x197 ?x248) (+ ?x175 ?x204) (+ ?x164 ?x220) ?x275) 0.0))))
 (let (($x786 (= (+ ?x147 ?x163 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x910 (and (= ?x275 0.0) (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x786 (or $x794 (not (= ?x493 0.0))))))
 (rewrite (= $x910 $x1402))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x85 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x53 (/ d 2.0)))
 (let ((?x65 (+ y ?x53)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x68 (+ a b)))
 (let ((?x79 (- (* (- 1.0) ?x68 ?x51 ?x53 ?x65 ?x65 ?x65) (* ?x68 ?x51 ?x53 ?x65))))
 (let ((?x73 (+ (* (- 1.0) ?x68 ?x51 ?x51 ?x65 ?x65 ?x65) (* ?x68 ?x68 ?x51 ?x51 ?x53 ?x53 ?x65))))
 (let ((?x30 (* a00 d00)))
 (let ((?x27 (* (- 2.0) b00 y00)))
 (let ((?x80 (* (- (+ ?x27 ?x30 (* 2.0 b00 ?x65)) (* ?x68 d00)) ?x73 (+ (* ?x68 ?x51 ?x51 ?x51 ?x65) (* ?x51 ?x51 ?x53 ?x53 ?x65 ?x65)) ?x79)))
 (let ((?x61 (- (* (- 1.0) a ?x51 ?x53 y y y) (* a ?x51 ?x53 y))))
 (let ((?x55 (+ (* (- 1.0) a ?x51 ?x51 y y y) (* a a ?x51 ?x51 ?x53 ?x53 y))))
 (let ((?x33 (* a d00)))
 (let ((?x34 (- (+ ?x27 ?x30 (* 2.0 b00 y)) ?x33)))
 (let ((?x62 (* ?x34 ?x55 (+ (* a ?x51 ?x51 ?x51 y) (* ?x51 ?x51 ?x53 ?x53 y y)) ?x61)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (and (= ?x34 0.0) (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x62 0.0)) (not (= ?x80 0.0)))))))))))))))))))) :qid k!33))
 ))
 (let ((?x796 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x919 (+ ?x94 ?x30 (* 2.0 (* b00 (+ y (* (/ 1.0 2.0) d)))) (* (- 1.0) (* d00 (+ a b))))))
 (let ((?x178 (* (/ 1.0 2.0) d)))
 (let ((?x950 (+ y ?x178)))
 (let ((?x89 (+ (* (/ 1.0 8.0) (* (+ a b) ?x950 b b b)) (* (/ 1.0 16.0) (* ?x950 ?x950 d d b b)))))
 (let ((?x964 (* (/ 1.0 16.0) (* (+ a b) (+ a b) ?x950 d d b b))))
 (let ((?x124 (+ (* (- (/ 1.0 4.0)) (* (+ a b) ?x950 ?x950 ?x950 d b)) (* (- (/ 1.0 4.0)) (* (+ a b) ?x950 d b)))))
 (let ((?x493 (* ?x124 (+ (* (- (/ 1.0 4.0)) (* (+ a b) ?x950 ?x950 ?x950 b b)) ?x964) ?x89 ?x919)))
 (let ((?x209 (* 2.0 (* b00 y))))
 (let ((?x275 (+ ?x94 ?x30 ?x209 (* (- 1.0) (* d00 a)))))
 (let ((?x217 (* y y d d b b)))
 (let ((?x220 (* (/ 1.0 16.0) ?x217)))
 (let ((?x164 (* (/ 1.0 8.0) (* y b b b a))))
 (let ((?x204 (* (/ 1.0 16.0) (* y d d b b a a))))
 (let ((?x175 (* (- (/ 1.0 4.0)) (* y y y b b a))))
 (let ((?x248 (* (- (/ 1.0 4.0)) (* y d b a))))
 (let ((?x197 (* (- (/ 1.0 4.0)) (* y y y d b a))))
 (let (($x794 (not (= (* (+ ?x197 ?x248) (+ ?x175 ?x204) (+ ?x164 ?x220) ?x275) 0.0))))
 (let ((?x163 (* (- 2.0) (* y b))))
 (let ((?x147 (* d a)))
 (let (($x786 (= (+ ?x147 ?x163 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x910 (and (= ?x275 0.0) (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x786 (or $x794 (not (= ?x493 0.0))))))
 (let ((?x53 (/ d 2.0)))
 (let ((?x65 (+ y ?x53)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x68 (+ a b)))
 (let ((?x79 (- (* (- 1.0) ?x68 ?x51 ?x53 ?x65 ?x65 ?x65) (* ?x68 ?x51 ?x53 ?x65))))
 (let ((?x73 (+ (* (- 1.0) ?x68 ?x51 ?x51 ?x65 ?x65 ?x65) (* ?x68 ?x68 ?x51 ?x51 ?x53 ?x53 ?x65))))
 (let ((?x70 (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 ?x65)) (* ?x68 d00))))
 (let ((?x80 (* ?x70 ?x73 (+ (* ?x68 ?x51 ?x51 ?x51 ?x65) (* ?x51 ?x51 ?x53 ?x53 ?x65 ?x65)) ?x79)))
 (let ((?x61 (- (* (- 1.0) a ?x51 ?x53 y y y) (* a ?x51 ?x53 y))))
 (let ((?x55 (+ (* (- 1.0) a ?x51 ?x51 y y y) (* a a ?x51 ?x51 ?x53 ?x53 y))))
 (let ((?x33 (* a d00)))
 (let ((?x34 (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33)))
 (let ((?x62 (* ?x34 ?x55 (+ (* a ?x51 ?x51 ?x51 y) (* ?x51 ?x51 ?x53 ?x53 y y)) ?x61)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let (($x84 (and (= ?x34 0.0) (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x62 0.0)) (not (= ?x80 0.0))))))
 (rewrite (= $x84 $x910))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x86 (asserted $x85)))
 (let ((@x1285 (mp (mp @x86 (quant-intro (proof-bind ?x796) (= $x85 $x635)) $x635) (quant-intro (proof-bind ?x1310) (= $x635 $x1312)) $x1312)))
 (let ((@x159 (mp (mp~ @x1285 (sk (~ $x1312 $x1043)) $x1043) (rewrite (= $x1043 $x735)) $x735)))
 (let ((@x241 (and-elim @x159 $x466)))
 (let (($x1132 (<= ?x479 0.0)))
 (let (($x1124 (= 0.0 ?x479)))
 (let ((@x1023 (mp @x241 (symm (commutativity (= $x1124 $x466)) (= $x466 $x1124)) $x1124)))
 (let ((@x1071 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1124) $x1132)) @x1023 $x1132)))
 (let (($x1145 (>= ?x479 0.0)))
 (let ((@x848 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1124) $x1145)) @x1023 $x1145)))
 (let (($x1338 (<= ?x1341 0.0)))
 (let (($x1169 (<= ?x369 0.0)))
 (let (($x1168 (= 0.0 ?x369)))
 (let ((@x1111 (mp (and-elim @x159 $x855) (symm (commutativity (= $x1168 $x855)) (= $x855 $x1168)) $x1168)))
 (let ((@x1112 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1168) $x1169)) @x1111 $x1169)))
 (let (($x314 (>= ?x974 0.0)))
 (let (($x359 (= 0.0 ?x974)))
 (let ((@x733 (mp (and-elim @x159 $x108) (symm (commutativity (= $x359 $x108)) (= $x108 $x359)) $x359)))
 (let ((@x730 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x359) $x314)) @x733 $x314)))
 (let (($x1342 (>= ?x1341 0.0)))
 (let (($x1288 (>= ?x369 0.0)))
 (let ((@x347 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1168) $x1288)) @x1111 $x1288)))
 (let (($x475 (<= ?x974 0.0)))
 (let ((@x987 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x359) $x475)) @x733 $x475)))
 (let ((@x869 ((_ th-lemma arith) (lemma ((_ th-lemma arith) (hypothesis (not $x1342)) @x987 @x347 false) $x1342) (lemma ((_ th-lemma arith) @x730 @x1112 (hypothesis (not $x1338)) false) $x1338) @x848 @x1071 (= ?x479 ?x1341))))
 (let (($x713 (or (not $x1343) $x1075)))
 (let ((@x644 (unit-resolution ((_ th-lemma arith) $x713) (hypothesis $x684) (hypothesis $x1343) false)))
 (let ((@x992 (unit-resolution (lemma @x644 $x713) (trans* (symm @x869 (= ?x1341 ?x479)) @x241 $x1343) $x1075)))
 (let ((@x522 (mp (unit-resolution (and-elim @x159 $x472) @x992 $x97) (monotonicity @x228 (= $x97 $x239)) $x239)))
 (let (($x906 (<= ?x1315 0.0)))
 (let ((@x298 (unit-resolution ((_ th-lemma arith) (or (not $x1288) (not $x1169) $x906)) @x1112 @x347 (hypothesis (not $x906)) false)))
 (let ((@x117 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1156 (not $x906) $x839)) (lemma @x298 $x906) @x522 $x839)))
 (unit-resolution ((_ th-lemma arith) (or (not $x1132) (not $x1145) (not $x475) (not $x314) $x1282)) @x987 @x730 @x1071 @x848 @x117 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       28
 :arith-eq-adapter                25
 :arith-bound-propagations-cheap  23
 :arith-conflicts                 47
 :arith-diseq                     36
 :arith-fixed-eqs                 1
 :arith-grobner-calls             3
 :arith-grobner-conflicts         2
 :arith-horner-calls              3
 :arith-horner-cross-nested-forms 8
 :arith-lower                     35
 :arith-make-feasible             35
 :arith-max-columns               94
 :arith-max-rows                  9
 :arith-nla-explanations          19
 :arith-nla-lemmas                45
 :arith-propagations              23
 :arith-upper                     42
 :conflicts                       7
 :decisions                       51
 :del-clause                      87
 :final-checks                    21
 :max-memory                      2.47
 :memory                          1.25
 :mk-bool-var                     136
 :mk-clause                       116
 :num-allocs                      7044395882.00
 :num-checks                      1
 :propagations                    48
 :rlimit-count                    8447
 :time                            24.13
 :total-time                      24.13)
