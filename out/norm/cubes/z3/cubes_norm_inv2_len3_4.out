unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x707 (* (- 9) n!0)))
 (let ((?x762 (* c!3 n!0)))
 (let ((?x472 (* 9 ?x762)))
 (let ((?x628 (* k!2 k!2)))
 (let ((?x930 (* (- 1) ?x628)))
 (let ((?x482 (* 5 k!2)))
 (let ((?x1455 (* 18 c!3)))
 (let ((?x481 (+ ?x1455 ?x482 ?x930 ?x472 ?x707)))
 (let (($x1189 (<= ?x481 4)))
 (let (($x1374 (= ?x481 4)))
 (let ((?x512 (* (- 414) (* k!2 k!2 m!1 m!1))))
 (let ((?x1572 (* (- 18) (* c!3 c!3 m!1 m!1 m!1))))
 (let ((?x715 (+ c!3 k!2)))
 (let ((?x573 (+ k!2 m!1)))
 (let ((?x1422 (+ 6 m!1)))
 (let ((?x1166 (+ 1 n!0)))
 (let ((?x718 (* (- 5) (* ?x1166 ?x1166 ?x1166 ?x1422 ?x1422 ?x1422 ?x573 ?x573 ?x573 ?x715))))
 (let ((?x515 (* (- 77) (* c!3 m!1 m!1 m!1))))
 (let ((?x507 (* 972 (* k!2 m!1 n!0))))
 (let ((?x526 (* 162 (* c!3 m!1 m!1 n!0))))
 (let ((?x714 (* (- 23) (* k!2 k!2 m!1 m!1 m!1))))
 (let ((?x968 (* (- 306) (* c!3 m!1 m!1))))
 (let ((?x128 (* (- 77) (* k!2 m!1 m!1 m!1))))
 (let ((?x1571 (* (- 738) (* c!3 k!2 m!1 m!1))))
 (let ((?x538 (* (- 9) (* ?x1166 ?x1422 ?x1422 ?x1422 ?x715 ?x715))))
 (let ((?x1048 (* (- 9) (* ?x1166 ?x1166 ?x1166 ?x1166 ?x1422 ?x1422 ?x1422 ?x573 ?x573 ?x715 ?x715))))
 (let ((?x1427 (* (- 2484) (* k!2 k!2 m!1))))
 (let ((?x833 (* k!2 n!0)))
 (let ((?x710 (* 1944 ?x833)))
 (let ((?x425 (* (- 9) (* ?x1166 ?x1166 ?x1166 ?x1422 ?x1422 ?x1422 ?x573 ?x715 ?x715))))
 (let ((?x1549 (* (- 324) (* c!3 c!3 m!1 m!1))))
 (let ((?x417 (* (- 18) (* ?x1166 ?x1166 ?x1422 ?x1422 ?x1422 ?x573 ?x715 ?x715))))
 (let ((?x351 (* 1944 ?x762)))
 (let ((?x722 (* ?x1166 ?x1166 ?x1422 ?x1422 ?x1422 ?x573 ?x573 ?x573 ?x715)))
 (let ((?x361 (* 4 (* ?x1166 ?x1166 ?x1422 ?x1422 ?x1422 ?x573 ?x715))))
 (let ((?x536 (* (- 5) (* ?x1166 ?x1166 ?x1422 ?x1422 ?x1422 ?x573 ?x573 ?x715))))
 (let ((?x473 (* (- 3888) (* c!3 c!3))))
 (let ((?x723 (* (- 4428) (* c!3 k!2 m!1))))
 (let ((?x664 (* ?x1422 ?x1422 ?x1422 ?x573 ?x573 ?x715)))
 (let ((?x518 (* (- 4968) ?x628)))
 (let ((?x665 (* 324 (* c!3 m!1))))
 (let ((?x669 (* (- 5) (* c!3 m!1 m!1 m!1 m!1))))
 (let ((?x386 (* (- 1944) (* c!3 c!3 m!1))))
 (let ((?x432 (* 4 (* ?x1166 ?x1166 ?x1166 ?x1422 ?x1422 ?x1422 ?x573 ?x573 ?x715))))
 (let ((?x843 (* 162 (* k!2 m!1 m!1 n!0))))
 (let ((?x1437 (* 324 (* k!2 m!1))))
 (let ((?x687 (* (- 41) (* c!3 k!2 m!1 m!1 m!1))))
 (let ((?x504 (* 972 (* c!3 m!1 n!0))))
 (let ((?x479 (* ?x1166 ?x1166 ?x1166 ?x1422 ?x1422 ?x1422 ?x573 ?x573 ?x573 ?x573 ?x715)))
 (let ((?x480 (* (- 8856) (* c!3 k!2))))
 (let ((?x1429 (* 2808 k!2)))
 (let ((?x372 (* 9 (* ?x1166 ?x1166 ?x1166 ?x1422 ?x1422 ?x1422 ?x573 ?x715))))
 (let ((?x476 (* 9 (* c!3 m!1 m!1 m!1 n!0))))
 (let ((?x855 (* (- 306) (* k!2 m!1 m!1))))
 (let ((?x395 (* 9 (* k!2 m!1 m!1 m!1 n!0))))
 (let ((?x1430 (* 9 (* ?x1166 ?x1166 ?x1166 ?x1166 ?x1422 ?x1422 ?x1422 ?x573 ?x573 ?x715))))
 (let ((?x531 (* (- 5) (* k!2 m!1 m!1 m!1 m!1))))
 (let ((?x485 (* (- 18) (* ?x1166 ?x1166 ?x1166 ?x1422 ?x1422 ?x1422 ?x573 ?x573 ?x715 ?x715))))
 (let ((?x1237 (* 2808 c!3)))
 (let ((?x1038 (+ ?x1237 ?x485 ?x531 ?x1430 ?x395 ?x855 ?x476 ?x372 ?x1429 ?x480 ?x479 ?x504 ?x687 ?x1437 ?x843 ?x432 ?x386 ?x669 ?x665 ?x518 ?x664 ?x723 ?x473 ?x536 ?x361 ?x722 ?x351 ?x417 ?x1549 ?x425 ?x710 ?x1427 ?x1048 ?x538 ?x1571 ?x128 ?x968 ?x714 ?x526 ?x507 ?x515 ?x718 ?x1572 ?x512)))
 (let (($x501 (= ?x1038 0)))
 (let (($x1195 (not $x501)))
 (let ((?x1240 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x1426 (= ?x1240 1)))
 (let ((?x1368 (* (- 2) n!0)))
 (let ((?x668 (* (- 1) ?x833)))
 (let ((?x820 (* 3 c!3)))
 (let ((?x478 (+ ?x820 k!2 ?x668 ?x1368)))
 (let (($x375 (= ?x478 1)))
 (let ((?x561 (+ m!1 (* (- 6) n!0))))
 (let (($x440 (= ?x561 6)))
 (let (($x492 (and $x440 $x1374 $x375 $x1426 $x1195)))
 (let ((?x338 (+ ?x1237 ?x1429 ?x518 ?x710 ?x351 ?x1430 ?x417 ?x714 ?x687 ?x1572 ?x512 ?x1571 ?x425 ?x1549 ?x1427 ?x843 ?x1048 ?x538 ?x664 ?x485 ?x504 ?x432 ?x536 ?x722 ?x718 ?x479 ?x723 ?x386 ?x361 ?x372 ?x480 ?x473 ?x395 ?x476 ?x128 ?x515 ?x507 ?x526 ?x669 ?x531 ?x665 ?x1437 ?x968 ?x855)))
 (let (($x1239 (and $x440 (= (+ ?x1455 ?x482 ?x707 ?x930 ?x472) 4) (= (+ ?x820 k!2 ?x1368 ?x668) 1) $x1426 (not (= ?x338 0)))))
 (let (($x171 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x328 (+ 1 n)))
 (let ((?x747 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x748 (* 9 ?x747)))
 (let ((?x738 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x739 (* 4 ?x738)))
 (let ((?x713 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x686 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x673 (* (- 5) ?x686)))
 (let ((?x656 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x627 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x609 (* (- 5) ?x627)))
 (let ((?x589 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x586 (* 4 ?x589)))
 (let ((?x556 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x575 (* (- 18) ?x556)))
 (let ((?x540 (* ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x521 (* ?x328 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x532 (* (- 9) ?x521)))
 (let ((?x508 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x513 (* (- 9) ?x508)))
 (let ((?x408 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x422 (* (- 9) ?x408)))
 (let ((?x360 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x381 (* (- 18) ?x360)))
 (let ((?x339 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x340 (* 9 ?x339)))
 (let ((?x1390 (+ (* 2808 c) (* 2808 k) (* (- 4968) (* k k)) (* 1944 (* k n)) (* 1944 (* c n)) ?x340 ?x381 (* (- 23) (* k k m m m)) (* (- 41) (* c k m m m)) (* (- 18) (* c c m m m)) (* (- 414) (* k k m m)) (* (- 738) (* c k m m)) ?x422 (* (- 324) (* c c m m)) (* (- 2484) (* k k m)) (* 162 (* k m m n)) ?x513 ?x532 ?x540 ?x575 (* 972 (* c m n)) ?x586 ?x609 ?x656 ?x673 ?x713 (* (- 4428) (* c k m)) (* (- 1944) (* c c m)) ?x739 ?x748 (* (- 8856) (* c k)) (* (- 3888) (* c c)) (* 9 (* k m m m n)) (* 9 (* c m m m n)) (* (- 77) (* k m m m)) (* (- 77) (* c m m m)) (* 972 (* k m n)) (* 162 (* c m m n)) (* (- 5) (* c m m m m)) (* (- 5) (* k m m m m)) (* 324 (* c m)) (* 324 (* k m)) (* (- 306) (* c m m)) (* (- 306) (* k m m)))))
 (let (($x315 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x277 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x225 (= (+ ?x40 ?x44 ?x227 ?x228 (* 9 (* c n))) 4)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (and $x141 $x225 $x277 $x315 (not (= ?x1390 0)))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x636 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x433 (* ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x328 (+ 1 n)))
 (let ((?x747 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x713 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x508 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x548 (+ (* 9 ?x508) (* 9 (* ?x328 ?x325 ?x325 ?x325 ?x69 ?x69)) (* (- 1) (* ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)) (* 18 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)) (* (- 1) ?x713) (* (- 9) (* ?x328 ?x325 ?x325 ?x325 ?x69)) (* 5 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)) (* (- 1) (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)) (* 5 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)) (* (- 4) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)) (* (- 4) (* ?x325 ?x325 ?x325 ?x69)) (* (- 9) (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)) (* 18 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)) (* 9 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)) (* (- 4) (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)) (* (- 9) ?x747) (* 18 (* ?x325 ?x325 ?x325 ?x69 ?x69)) (* 5 ?x433))))
 (let (($x494 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x604 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (and $x141 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x227 ?x228) 4) $x604 $x494 (not (= ?x548 0)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x180 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x328 (+ 1 n)))
 (let ((?x747 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x748 (* 9 ?x747)))
 (let ((?x738 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x739 (* 4 ?x738)))
 (let ((?x713 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x686 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x673 (* (- 5) ?x686)))
 (let ((?x656 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x627 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x609 (* (- 5) ?x627)))
 (let ((?x589 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x586 (* 4 ?x589)))
 (let ((?x556 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x575 (* (- 18) ?x556)))
 (let ((?x540 (* ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x521 (* ?x328 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x532 (* (- 9) ?x521)))
 (let ((?x508 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x513 (* (- 9) ?x508)))
 (let ((?x408 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x422 (* (- 9) ?x408)))
 (let ((?x360 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x381 (* (- 18) ?x360)))
 (let ((?x339 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x340 (* 9 ?x339)))
 (let ((?x1390 (+ (* 2808 c) (* 2808 k) (* (- 4968) (* k k)) (* 1944 (* k n)) (* 1944 (* c n)) ?x340 ?x381 (* (- 23) (* k k m m m)) (* (- 41) (* c k m m m)) (* (- 18) (* c c m m m)) (* (- 414) (* k k m m)) (* (- 738) (* c k m m)) ?x422 (* (- 324) (* c c m m)) (* (- 2484) (* k k m)) (* 162 (* k m m n)) ?x513 ?x532 ?x540 ?x575 (* 972 (* c m n)) ?x586 ?x609 ?x656 ?x673 ?x713 (* (- 4428) (* c k m)) (* (- 1944) (* c c m)) ?x739 ?x748 (* (- 8856) (* c k)) (* (- 3888) (* c c)) (* 9 (* k m m m n)) (* 9 (* c m m m n)) (* (- 77) (* k m m m)) (* (- 77) (* c m m m)) (* 972 (* k m n)) (* 162 (* c m m n)) (* (- 5) (* c m m m m)) (* (- 5) (* k m m m m)) (* 324 (* c m)) (* 324 (* k m)) (* (- 306) (* c m m)) (* (- 306) (* k m m)))))
 (let (($x315 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x277 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x225 (= (+ ?x40 ?x44 ?x227 ?x228 (* 9 (* c n))) 4)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (let (($x652 (and $x141 $x225 $x277 $x315 (not (= ?x1390 0)))))
 (let ((?x548 (+ (* 9 ?x508) (* 9 ?x521) (* (- 1) ?x540) (* 18 ?x556) (* (- 1) ?x713) (* (- 9) (* ?x328 ?x325 ?x325 ?x325 ?x69)) (* 5 ?x686) (* (- 1) ?x656) (* 5 ?x627) (* (- 4) ?x589) (* (- 4) (* ?x325 ?x325 ?x325 ?x69)) (* (- 9) ?x339) (* 18 ?x360) (* 9 ?x408) (* (- 4) ?x738) (* (- 9) ?x747) (* 18 (* ?x325 ?x325 ?x325 ?x69 ?x69)) (* 5 (* ?x325 ?x325 ?x325 ?x70 ?x69)))))
 (let (($x494 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x604 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x803 (and $x141 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x227 ?x228) 4) $x604 $x494 (not (= ?x548 0)))))
 (rewrite (= $x803 $x652)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x500 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x433 (* ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x328 (+ 1 n)))
 (let ((?x747 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x748 (* 9 ?x747)))
 (let ((?x738 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x739 (* 4 ?x738)))
 (let ((?x408 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x422 (* (- 9) ?x408)))
 (let ((?x360 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x381 (* (- 18) ?x360)))
 (let ((?x339 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x340 (* 9 ?x339)))
 (let ((?x589 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x586 (* 4 ?x589)))
 (let ((?x627 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x609 (* (- 5) ?x627)))
 (let ((?x656 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x686 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x673 (* (- 5) ?x686)))
 (let ((?x713 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x556 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x575 (* (- 18) ?x556)))
 (let ((?x540 (* ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x521 (* ?x328 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x532 (* (- 9) ?x521)))
 (let ((?x508 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x513 (* (- 9) ?x508)))
 (let ((?x1428 (+ ?x513 ?x532 ?x540 ?x575 ?x713 (* 9 (* ?x328 ?x325 ?x325 ?x325 ?x69)) ?x673 ?x656 ?x609 ?x586 (* 4 (* ?x325 ?x325 ?x325 ?x69)) ?x340 ?x381 ?x422 ?x739 ?x748 (* (- 18) (* ?x325 ?x325 ?x325 ?x69 ?x69)) (* (- 5) ?x433))))
 (let (($x494 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x460 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1020 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (and $x141 (= ?x1020 (- 4)) $x460 $x494 (not (= ?x1428 0)))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1085 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x433 (* ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x328 (+ 1 n)))
 (let ((?x747 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x713 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x508 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x548 (+ (* 9 ?x508) (* 9 (* ?x328 ?x325 ?x325 ?x325 ?x69 ?x69)) (* (- 1) (* ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)) (* 18 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)) (* (- 1) ?x713) (* (- 9) (* ?x328 ?x325 ?x325 ?x325 ?x69)) (* 5 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)) (* (- 1) (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)) (* 5 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)) (* (- 4) (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)) (* (- 4) (* ?x325 ?x325 ?x325 ?x69)) (* (- 9) (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)) (* 18 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)) (* 9 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)) (* (- 4) (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)) (* (- 9) ?x747) (* 18 (* ?x325 ?x325 ?x325 ?x69 ?x69)) (* 5 ?x433))))
 (let (($x494 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x604 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (let (($x803 (and $x141 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x227 ?x228) 4) $x604 $x494 (not (= ?x548 0)))))
 (let ((?x748 (* 9 ?x747)))
 (let ((?x738 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x739 (* 4 ?x738)))
 (let ((?x408 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x422 (* (- 9) ?x408)))
 (let ((?x360 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x381 (* (- 18) ?x360)))
 (let ((?x339 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x340 (* 9 ?x339)))
 (let ((?x589 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x586 (* 4 ?x589)))
 (let ((?x627 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x609 (* (- 5) ?x627)))
 (let ((?x656 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x686 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x673 (* (- 5) ?x686)))
 (let ((?x556 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x575 (* (- 18) ?x556)))
 (let ((?x540 (* ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x521 (* ?x328 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x532 (* (- 9) ?x521)))
 (let ((?x513 (* (- 9) ?x508)))
 (let ((?x1428 (+ ?x513 ?x532 ?x540 ?x575 ?x713 (* 9 (* ?x328 ?x325 ?x325 ?x325 ?x69)) ?x673 ?x656 ?x609 ?x586 (* 4 (* ?x325 ?x325 ?x325 ?x69)) ?x340 ?x381 ?x422 ?x739 ?x748 (* (- 18) (* ?x325 ?x325 ?x325 ?x69 ?x69)) (* (- 5) ?x433))))
 (let (($x460 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1020 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x517 (and $x141 (= ?x1020 (- 4)) $x460 $x494 (not (= ?x1428 0)))))
 (rewrite (= $x517 $x803))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x72 (+ n 1)))
 (let ((?x73 (* (- 9) ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x77 (+ (- ?x73 (* 9 ?x69 ?x69 ?x71 ?x71 ?x71 ?x72)) (* ?x69 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x79 (- ?x77 (* 18 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x82 (+ ?x79 (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72) (* 9 ?x69 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x84 (- ?x82 (* 5 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x88 (- (+ ?x84 (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)) (* 5 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x92 (+ ?x88 (* 4 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72) (* 4 ?x69 ?x71 ?x71 ?x71) (* 9 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x96 (- (- ?x92 (* 18 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)) (* 9 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x99 (+ ?x96 (* 4 ?x69 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) (* 9 ?x69 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x103 (- (- ?x99 (* 18 ?x69 ?x69 ?x71 ?x71 ?x71)) (* 5 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x103 0))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x506 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x325 (+ 6 m)))
 (let ((?x433 (* ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x328 (+ 1 n)))
 (let ((?x747 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x748 (* 9 ?x747)))
 (let ((?x738 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69)))
 (let ((?x739 (* 4 ?x738)))
 (let ((?x408 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x422 (* (- 9) ?x408)))
 (let ((?x360 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x69 ?x69)))
 (let ((?x381 (* (- 18) ?x360)))
 (let ((?x339 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x340 (* 9 ?x339)))
 (let ((?x589 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x586 (* 4 ?x589)))
 (let ((?x627 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x609 (* (- 5) ?x627)))
 (let ((?x656 (* ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x686 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x673 (* (- 5) ?x686)))
 (let ((?x713 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x556 (* ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x575 (* (- 18) ?x556)))
 (let ((?x540 (* ?x325 ?x325 ?x325 ?x70 ?x70 ?x69)))
 (let ((?x521 (* ?x328 ?x325 ?x325 ?x325 ?x69 ?x69)))
 (let ((?x532 (* (- 9) ?x521)))
 (let ((?x508 (* ?x328 ?x328 ?x328 ?x328 ?x325 ?x325 ?x325 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x513 (* (- 9) ?x508)))
 (let ((?x1428 (+ ?x513 ?x532 ?x540 ?x575 ?x713 (* 9 (* ?x328 ?x325 ?x325 ?x325 ?x69)) ?x673 ?x656 ?x609 ?x586 (* 4 (* ?x325 ?x325 ?x325 ?x69)) ?x340 ?x381 ?x422 ?x739 ?x748 (* (- 18) (* ?x325 ?x325 ?x325 ?x69 ?x69)) (* (- 5) ?x433))))
 (let (($x494 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x460 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1020 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (let (($x517 (and $x141 (= ?x1020 (- 4)) $x460 $x494 (not (= ?x1428 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x73 (* (- 9) ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x77 (+ (- ?x73 (* 9 ?x69 ?x69 ?x71 ?x71 ?x71 ?x72)) (* ?x69 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x79 (- ?x77 (* 18 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x82 (+ ?x79 (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72) (* 9 ?x69 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x84 (- ?x82 (* 5 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x88 (- (+ ?x84 (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)) (* 5 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x92 (+ ?x88 (* 4 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72) (* 4 ?x69 ?x71 ?x71 ?x71) (* 9 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x96 (- (- ?x92 (* 18 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)) (* 9 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x99 (+ ?x96 (* 4 ?x69 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) (* 9 ?x69 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x103 (- (- ?x99 (* 18 ?x69 ?x69 ?x71 ?x71 ?x71)) (* 5 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x107 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x103 0))))))
 (rewrite (= $x107 $x517)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x781 (mp (mp @x109 (quant-intro (proof-bind ?x506) (= $x108 $x500)) $x500) (rewrite (= $x500 $x500)) $x500)))
 (let ((@x581 (mp (mp @x781 (quant-intro (proof-bind ?x1085) (= $x500 $x636)) $x636) (quant-intro (proof-bind ?x180) (= $x636 $x171)) $x171)))
 (let ((@x495 (mp (mp~ @x581 (sk (~ $x171 $x1239)) $x1239) (rewrite (= $x1239 $x492)) $x492)))
 (let ((@x1046 (and-elim @x495 $x1374)))
 (let ((@x477 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1374) $x1189)) @x1046 $x1189)))
 (let (($x416 (>= ?x481 4)))
 (let ((@x1215 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1374) $x416)) @x1046 $x416)))
 (let (($x805 (<= ?x478 1)))
 (let ((@x1032 (and-elim @x495 $x375)))
 (let ((@x456 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x375) $x805)) @x1032 $x805)))
 (let (($x640 (>= ?x478 1)))
 (let ((@x1155 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x375) $x640)) @x1032 $x640)))
 (let (($x667 (<= ?x1240 1)))
 (let ((@x393 (and-elim @x495 $x1426)))
 (let ((@x1300 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1426) $x667)) @x393 $x667)))
 (let (($x1187 (>= ?x1240 1)))
 (let ((@x493 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1426) $x1187)) @x393 $x1187)))
 (let (($x726 (<= ?x561 6)))
 (let ((@x938 (and-elim @x495 $x440)))
 (let ((@x793 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x440) $x726)) @x938 $x726)))
 (let (($x371 (>= ?x561 6)))
 (let ((@x800 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x440) $x371)) @x938 $x371)))
 (let (($x1026 (not (<= ?x1038 0))))
 (let (($x1203 (>= ?x1038 0)))
 (let ((@x210 ((_ th-lemma arith) (hypothesis (not $x1203)) @x493 @x1300 @x800 @x793 @x800 @x793 @x493 @x1300 @x1155 @x456 @x493 @x1300 @x800 @x793 @x493 @x1300 @x1155 @x456 @x493 @x1300 @x1155 @x456 @x1215 @x477 false)))
 (let ((@x1457 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x501 $x1026 (not $x1203))) (and-elim @x495 $x1195) (or $x1026 (not $x1203)))))
 ((_ th-lemma arith) (unit-resolution @x1457 (lemma @x210 $x1203) $x1026) @x493 @x1300 @x800 @x793 @x800 @x793 @x493 @x1300 @x1155 @x456 @x493 @x1300 @x800 @x793 @x493 @x1300 @x1155 @x456 @x493 @x1300 @x1155 @x456 @x1215 @x477 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        18
 :arith-assert-upper        56
 :arith-branch-var          2
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           17
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             556
 :arith-nonlinear-bounds    10
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             6
 :arith-patches_succ        3
 :arith-pivots              10
 :arith-row-summations      26
 :arith-tableau-max-columns 88
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 46
 :del-clause                16
 :final-checks              9
 :max-memory                4.03
 :memory                    3.34
 :mk-bool-var               66
 :mk-clause                 16
 :num-allocs                2044070
 :num-checks                1
 :propagations              12
 :rlimit-count              19039
 :time                      0.02
 :total-time                0.03)
