unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1437 (* (- 1) s!1)))
 (let ((?x279 (* r00 r00)))
 (let ((?x972 (* (- 3) ?x279)))
 (let ((?x609 (+ s00 ?x972 ?x1437 (* 3 (* r!2 r!2)))))
 (let (($x432 (<= ?x609 0)))
 (let (($x611 (= ?x609 0)))
 (let ((?x1870 (+ 3 (* 6 r!2) s!1)))
 (let ((?x1410 (+ ?x1437 x!0)))
 (let ((?x2139 (+ 1 r!2)))
 (let ((?x2140 (* ?x2139 ?x2139 ?x1410 ?x1870 ?x1870 ?x1870 ?x1870)))
 (let ((?x1911 (* r!2 s!1 s!1)))
 (let ((?x286 (* (- 2) ?x1911)))
 (let ((?x1871 (* ?x1410 ?x1410 ?x1410 ?x1870 ?x1870 ?x1870 ?x1870)))
 (let ((?x1676 (* s00 ?x2139 ?x2139 ?x1410 ?x1870 ?x1870 ?x1870)))
 (let ((?x1282 (* s00 ?x2139 ?x2139 ?x2139 ?x1410 ?x1410 ?x1870)))
 (let ((?x1521 (* (- 3) s!1)))
 (let ((?x819 (* s00 s!1)))
 (let ((?x274 (* s00 ?x2139 ?x2139 ?x2139 ?x1410 ?x1870 ?x1870)))
 (let ((?x44 (* 3 s00)))
 (let ((?x340 (+ ?x44 ?x274 (* (- 9) ?x279) (* 6 (* s00 r!2 r!2 r!2)) (* 3 (* r00 r00 ?x1410 ?x1410 ?x1410 ?x1870 ?x1870 ?x1870)) (* (- 3) (* r00 r00 ?x2139 ?x2139 ?x2139 ?x1410 ?x1870 ?x1870)) (* 2 (* s00 r!2 s!1)) (* (- 1) (* s!1 s!1)) ?x819 ?x1521 (* 15 (* s00 r!2 r!2)) (* (- 12) (* r!2 s!1)) (* (- 1) (* r!2 r!2 s!1 s!1)) ?x1282 (* (- 18) (* r00 r00 r!2 r!2 r!2)) (* 45 (* r!2 r!2 r!2 r!2)) (* (- 3) (* r00 r00 r!2 r!2 s!1)) (* (- 3) (* r00 r00 s!1)) (* (- 3) (* r00 r00 ?x2139 ?x2139 ?x1410 ?x1870 ?x1870 ?x1870)) (* 3 (* r!2 r!2 r!2 r!2 s!1)) (* (- 45) (* r00 r00 r!2 r!2)) (* (- 6) (* r00 r00 r!2 s!1)) (* 18 (* r!2 r!2 r!2 r!2 r!2)) ?x1676 (* (- 12) (* r!2 r!2 s!1)) (* (- 1) (* s00 ?x1410 ?x1410 ?x1410 ?x1870 ?x1870 ?x1870)) (* 36 (* r!2 r!2 r!2)) (* 3 (* ?x2139 ?x2139 ?x2139 ?x2139 ?x1410 ?x1870 ?x1870 ?x1870)) (* 9 (* r!2 r!2)) (* 12 (* s00 r!2)) (* (- 36) (* r00 r00 r!2)) ?x1871 (* (- 1) (* ?x2139 ?x2139 ?x2139 ?x1410 ?x1410 ?x1870 ?x1870)) (* (- 1) (* ?x2139 ?x2139 ?x2139 ?x1410 ?x1870 ?x1870 ?x1870)) (* s00 r!2 r!2 s!1) (* (- 3) (* ?x2139 ?x2139 ?x1410 ?x1410 ?x1410 ?x1870 ?x1870 ?x1870)) ?x286 (* 3 (* ?x2139 ?x2139 ?x2139 ?x2139 ?x2139 ?x1410 ?x1870 ?x1870)) (* (- 3) (* r00 r00 ?x2139 ?x2139 ?x2139 ?x1410 ?x1410 ?x1870)) (* 3 (* ?x2139 ?x2139 ?x2139 ?x2139 ?x2139 ?x1410 ?x1410 ?x1870)) (* (- 1) ?x2140))))
 (let (($x1043 (= ?x340 0)))
 (let (($x1022 (not $x1043)))
 (let ((?x1471 (* r00 r00 s!1)))
 (let ((?x1126 (* 36 ?x1471)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1086 (* 108 ?x1324)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x695 (* 16 ?x1162)))
 (let ((?x1120 (* (- 9) s!1)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1822 (* (- 432) ?x860)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1646 (* (- 108) ?x783)))
 (let ((?x625 (* s00 r00 r00)))
 (let ((?x1999 (* (- 36) ?x625)))
 (let ((?x569 (* s00 s00)))
 (let ((?x771 (* 51 ?x569)))
 (let ((?x500 (* r00 x00)))
 (let ((?x1482 (* 108 ?x500)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1797 (+ ?x137 (* 108 (* x00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x1482 ?x771 (* 15 (* s!1 s!1)) ?x1999 (* (- 108) (* s00 s00 r00)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 36) (* s00 s00 r00 r00)) ?x1646 (* (- 66) ?x819) (* (- 216) (* r00 r00 r00 s!1)) (* 432 (* r00 r00 r00 x!0)) ?x1822 ?x1120 (* (- 4) (* s!1 s!1 s!1)) (* 216 (* s00 r00 r00 r00)) (* 108 (* s00 r00 s!1)) (* 54 (* r00 s!1)) ?x695 ?x1086 ?x1126 (* (- 108) (* r00 x!0)) (* (- 216) (* x00 x!0)) (* (- 108) (* s!1 x!0)) (* 108 (* x!0 x!0)) (* 108 (* s00 x!0)))))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x713 (* 36 ?x855)))
 (let ((?x911 (* (- 6) ?x783)))
 (let ((?x734 (* 15 ?x569)))
 (let ((?x1459 (* 54 ?x500)))
 (let ((?x297 (+ ?x137 (* 6 (* x00 s!1)) (* (- 24) (* s00 r00)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 r!2 s!1)) ?x1459 ?x734 (* (- 3) (* s!1 s!1)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) ?x1999 (* 2 (* s00 s00 r00)) (* (- 4) (* r00 s!1 s!1)) ?x911 (* (- 12) ?x819) ?x713 ?x1120 (* (- 36) (* r00 r!2 x!0)) (* (- 54) (* r!2 x!0)) (* 24 (* r!2 s!1)) (* 2 (* s00 r00 s!1)) (* 24 (* r00 s!1)) ?x1126 (* 54 (* x00 r!2)) (* (- 54) (* r00 x!0)) (* (- 24) (* s00 r!2)) ?x286 (* (- 6) (* s!1 x!0)) (* 6 (* s00 x!0)))))
 (let ((?x718 (* 4 ?x569)))
 (let ((?x676 (* 18 ?x500)))
 (let ((?x1864 (+ ?x44 (* (- 9) (* s00 r00)) ?x676 ?x718 (* (- 2) (* s!1 s!1)) (* (- 6) ?x625) (* (- 2) ?x819) ?x1521 (* 6 (* s00 r00 r!2)) (* (- 18) (* r!2 x!0)) (* 9 (* r!2 s!1)) (* 9 (* r00 s!1)) (* 6 ?x1471) (* (- 6) (* r00 r!2 s!1)) (* 18 (* x00 r!2)) (* (- 18) (* r00 x!0)) (* (- 9) (* s00 r!2)))))
 (let ((?x654 (* 6 x!0)))
 (let ((?x1007 (* r!2 s!1)))
 (let ((?x560 (* 2 ?x1007)))
 (let ((?x653 (* 3 r!2)))
 (let ((?x447 (* r00 r00 r00)))
 (let ((?x448 (* 12 ?x447)))
 (let ((?x404 (* s00 r00)))
 (let ((?x482 (* (- 6) ?x404)))
 (let ((?x479 (* (- 6) x00)))
 (let ((?x478 (* (- 3) r00)))
 (let ((?x1477 (+ ?x44 ?x478 ?x479 ?x482 ?x448 ?x653 ?x1521 ?x560 (* 4 (* s00 r!2)) ?x654 (* (- 12) (* r00 r00 r!2)))))
 (let (($x1317 (and $x611 (= ?x1477 0) (= ?x1864 0) (= ?x297 0) (= ?x1797 0) $x1022)))
 (let ((?x1689 (* s00 ?x1410 ?x1410 ?x1410 ?x1870 ?x1870 ?x1870)))
 (let ((?x1872 (* ?x2139 ?x2139 ?x2139 ?x1410 ?x1410 ?x1870 ?x1870)))
 (let ((?x1892 (* ?x2139 ?x2139 ?x2139 ?x1410 ?x1870 ?x1870 ?x1870)))
 (let ((?x1232 (* r!2 r!2 s!1 s!1)))
 (let ((?x1914 (* 2 ?x1911)))
 (let ((?x572 (* s!1 s!1)))
 (let ((?x2195 (* 9 ?x279)))
 (let ((?x356 (* (- 3) s00)))
 (let ((?x618 (* 3 s!1)))
 (let ((?x833 (+ ?x618 ?x356 (* (- 9) (* r!2 r!2)) ?x2195 (* 12 ?x1007) (* 36 (* r!2 r00 r00)) ?x2140 (* (- 3) (* r00 r00 ?x1410 ?x1410 ?x1410 ?x1870 ?x1870 ?x1870)) (* (- 12) (* r!2 s00)) ?x572 (* 3 (* s!1 r00 r00)) (* (- 1) (* s!1 s00)) (* (- 1) ?x274) (* 3 (* r00 r00 ?x2139 ?x2139 ?x2139 ?x1410 ?x1870 ?x1870)) ?x1914 (* (- 3) (* ?x2139 ?x2139 ?x2139 ?x2139 ?x2139 ?x1410 ?x1410 ?x1870)) (* (- 3) (* ?x2139 ?x2139 ?x2139 ?x2139 ?x2139 ?x1410 ?x1870 ?x1870)) (* (- 2) (* r!2 s!1 s00)) (* 3 (* ?x2139 ?x2139 ?x1410 ?x1410 ?x1410 ?x1870 ?x1870 ?x1870)) (* 3 (* r00 r00 ?x2139 ?x2139 ?x2139 ?x1410 ?x1410 ?x1870)) ?x1232 ?x1892 (* (- 1) (* r!2 r!2 s!1 s00)) (* (- 15) (* r!2 r!2 s00)) (* (- 6) (* r!2 r!2 r!2 s00)) (* (- 1) ?x1871) ?x1872 (* (- 36) (* r!2 r!2 r!2)) ?x1689 (* (- 45) (* r!2 r!2 r!2 r!2)) (* 12 (* r!2 r!2 s!1)) (* 45 (* r!2 r!2 r00 r00)) (* 18 (* r!2 r!2 r!2 r00 r00)) (* (- 1) ?x1676) (* 6 (* r!2 s!1 r00 r00)) (* 3 (* r!2 r!2 s!1 r00 r00)) (* (- 18) (* r!2 r!2 r!2 r!2 r!2)) (* (- 3) (* ?x2139 ?x2139 ?x2139 ?x2139 ?x1410 ?x1870 ?x1870 ?x1870)) (* 3 (* r00 r00 ?x2139 ?x2139 ?x1410 ?x1870 ?x1870 ?x1870)) (* (- 1) ?x1282) (* (- 3) (* r!2 r!2 r!2 r!2 s!1)))))
 (let ((?x1354 (* (- 108) ?x1324)))
 (let ((?x1353 (* (- 16) ?x1162)))
 (let ((?x1034 (* s00 r00 r00 r00)))
 (let ((?x1349 (* (- 216) ?x1034)))
 (let ((?x861 (* 432 ?x860)))
 (let ((?x1107 (* 108 ?x783)))
 (let ((?x709 (* s00 s00 r00 r00)))
 (let ((?x710 (* 36 ?x709)))
 (let ((?x646 (* s00 s00 r00)))
 (let ((?x990 (* 108 ?x646)))
 (let ((?x978 (* 36 ?x625)))
 (let ((?x1343 (* (- 51) ?x569)))
 (let ((?x621 (* s!1 r00 r00)))
 (let ((?x546 (* (- 36) ?x621)))
 (let ((?x1340 (* (- 108) ?x500)))
 (let ((?x491 (* s00 r00 x00)))
 (let ((?x1339 (* (- 216) ?x491)))
 (let ((?x498 (* 54 ?x404)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x287 (* 9 s!1)))
 (let ((?x593 (+ ?x287 ?x965 ?x498 ?x1339 ?x1340 (* (- 15) ?x572) ?x546 ?x1343 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x978 ?x990 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x710 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1107 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x861 (* 12 (* s!1 s!1 s00)) ?x1349 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1353 (* 216 (* x!0 x00)) ?x1354)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x674 (* (- 2) ?x646)))
 (let ((?x894 (* (- 15) ?x569)))
 (let ((?x529 (* (- 54) ?x500)))
 (let ((?x542 (* 24 ?x404)))
 (let ((?x1954 (+ ?x287 ?x965 (* (- 24) ?x1007) (* 24 (* r!2 s00)) ?x542 ?x529 (* 3 ?x572) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x546 ?x894 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x978 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x674 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x784 ?x1914 (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x868 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x626 (* 6 ?x625)))
 (let ((?x582 (* (- 4) ?x569)))
 (let ((?x514 (* (- 18) ?x500)))
 (let ((?x519 (* 9 ?x404)))
 (let ((?x504 (+ ?x618 ?x356 (* (- 9) ?x1007) (* 9 (* r!2 s00)) ?x519 ?x514 (* 2 ?x572) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x621) ?x582 (* 18 (* x!0 r00)) ?x626 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1593 (+ ?x653 ?x1521 ?x654 ?x44 ?x478 ?x479 ?x560 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x482 ?x448)))
 (let (($x645 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x279)) 0)))
 (let (($x1743 (and $x645 (= ?x1593 0) (= ?x504 0) (= ?x1954 0) (= ?x593 0) (not (= ?x833 0)))))
 (let (($x1379 (exists ((r Int) (s Int) (x Int) )(! (let ((?x2229 (* (- 3) (* r r r r s))))
 (let ((?x213 (* 6 r)))
 (let ((?x1364 (+ 3 ?x213 s)))
 (let ((?x258 (* (- 1) s)))
 (let ((?x1370 (+ ?x258 x)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x2105 (* 3 (* r r s r00 r00))))
 (let ((?x2106 (* 6 (* r s r00 r00))))
 (let ((?x2107 (* 18 (* r r r r00 r00))))
 (let ((?x2108 (* 45 (* r r r00 r00))))
 (let ((?x2093 (* (- 6) (* r r r s00))))
 (let ((?x2181 (* (- 15) (* r r s00))))
 (let ((?x2182 (* (- 1) (* r r s s00))))
 (let ((?x1435 (* r r s s)))
 (let ((?x907 (* r s s00)))
 (let ((?x2188 (* (- 2) ?x907)))
 (let ((?x788 (* 2 (* r s s))))
 (let ((?x666 (* s s00)))
 (let ((?x2189 (* (- 1) ?x666)))
 (let ((?x543 (* s r00 r00)))
 (let ((?x2190 (* 3 ?x543)))
 (let ((?x523 (* s s)))
 (let ((?x377 (* r s00)))
 (let ((?x2192 (* (- 12) ?x377)))
 (let ((?x329 (* r r00 r00)))
 (let ((?x2191 (* 36 ?x329)))
 (let ((?x279 (* r00 r00)))
 (let ((?x2195 (* 9 ?x279)))
 (let ((?x356 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x922 (+ ?x47 ?x356 (* (- 9) (* r r)) ?x2195 (* 12 (* r s)) ?x2191 (* ?x1361 ?x1361 ?x1370 ?x1364 ?x1364 ?x1364 ?x1364) (* (- 3) (* r00 r00 ?x1370 ?x1370 ?x1370 ?x1364 ?x1364 ?x1364)) ?x2192 ?x523 ?x2190 ?x2189 (* (- 1) (* s00 ?x1361 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364)) (* 3 (* r00 r00 ?x1361 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364)) ?x788 (* (- 3) (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1370 ?x1370 ?x1364)) (* (- 3) (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364)) ?x2188 (* 3 (* ?x1361 ?x1361 ?x1370 ?x1370 ?x1370 ?x1364 ?x1364 ?x1364)) (* 3 (* r00 r00 ?x1361 ?x1361 ?x1361 ?x1370 ?x1370 ?x1364)) ?x1435 (* ?x1361 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364 ?x1364) ?x2182 ?x2181 ?x2093 (* (- 1) (* ?x1370 ?x1370 ?x1370 ?x1364 ?x1364 ?x1364 ?x1364)) (* ?x1361 ?x1361 ?x1361 ?x1370 ?x1370 ?x1364 ?x1364) (* (- 36) (* r r r)) (* s00 ?x1370 ?x1370 ?x1370 ?x1364 ?x1364 ?x1364) (* (- 45) (* r r r r)) (* 12 (* r r s)) ?x2108 ?x2107 (* (- 1) (* s00 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364 ?x1364)) ?x2106 ?x2105 (* (- 18) (* r r r r r)) (* (- 3) (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364 ?x1364)) (* 3 (* r00 r00 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364 ?x1364)) (* (- 1) (* s00 ?x1361 ?x1361 ?x1361 ?x1370 ?x1370 ?x1364)) ?x2229)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1354 (* (- 108) ?x1324)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x1353 (* (- 16) ?x1162)))
 (let ((?x1034 (* s00 r00 r00 r00)))
 (let ((?x1349 (* (- 216) ?x1034)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x861 (* 432 ?x860)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1107 (* 108 ?x783)))
 (let ((?x709 (* s00 s00 r00 r00)))
 (let ((?x710 (* 36 ?x709)))
 (let ((?x646 (* s00 s00 r00)))
 (let ((?x990 (* 108 ?x646)))
 (let ((?x625 (* s00 r00 r00)))
 (let ((?x978 (* 36 ?x625)))
 (let ((?x569 (* s00 s00)))
 (let ((?x1343 (* (- 51) ?x569)))
 (let ((?x842 (* (- 36) ?x543)))
 (let ((?x500 (* r00 x00)))
 (let ((?x1340 (* (- 108) ?x500)))
 (let ((?x491 (* s00 r00 x00)))
 (let ((?x1339 (* (- 216) ?x491)))
 (let ((?x404 (* s00 r00)))
 (let ((?x498 (* 54 ?x404)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1355 (+ ?x143 ?x965 ?x498 ?x1339 ?x1340 (* (- 15) ?x523) ?x842 ?x1343 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x978 ?x990 (* 66 ?x666) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x710 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1107 (* 108 (* s x)) (* (- 108) (* x x)) ?x861 (* 12 (* s s s00)) ?x1349 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1353 (* 216 (* x x00)) ?x1354)))
 (let (($x1356 (= ?x1355 0)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x674 (* (- 2) ?x646)))
 (let ((?x894 (* (- 15) ?x569)))
 (let ((?x547 (* 3 ?x523)))
 (let ((?x529 (* (- 54) ?x500)))
 (let ((?x542 (* 24 ?x404)))
 (let ((?x1057 (+ ?x143 ?x965 (* (- 24) (* r s)) (* 24 ?x377) ?x542 ?x529 ?x547 (* 54 (* r x)) (* 36 (* r x r00)) ?x842 ?x894 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x978 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x674 (* 12 ?x666) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x784 ?x788 (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x868 (* 2 ?x907) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1062 (= ?x1057 0)))
 (let ((?x626 (* 6 ?x625)))
 (let ((?x582 (* (- 4) ?x569)))
 (let ((?x524 (* 2 ?x523)))
 (let ((?x514 (* (- 18) ?x500)))
 (let ((?x519 (* 9 ?x404)))
 (let ((?x723 (+ ?x47 ?x356 (* (- 9) (* r s)) (* 9 ?x377) ?x519 ?x514 ?x524 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x543) ?x582 (* 18 (* x r00)) ?x626 (* (- 18) (* r x00)) (* 2 ?x666) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x730 (= ?x723 0)))
 (let ((?x447 (* r00 r00 r00)))
 (let ((?x448 (* 12 ?x447)))
 (let ((?x482 (* (- 6) ?x404)))
 (let ((?x479 (* (- 6) x00)))
 (let ((?x478 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x477 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x483 (+ ?x43 ?x477 ?x56 ?x44 ?x478 ?x479 (* 2 (* r s)) (* (- 12) ?x329) (* 4 ?x377) ?x482 ?x448)))
 (let (($x484 (= ?x483 0)))
 (let (($x312 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x279)) 0)))
 (and $x312 $x484 $x730 $x1062 $x1356 (not (= ?x922 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1278 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x619 (+ 3 s ?x213)))
 (let ((?x258 (* (- 1) s)))
 (let ((?x957 (+ x ?x258)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x511 (+ (* s00 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619) (* (- 1) (* s00 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619)) (* s00 ?x1361 ?x1361 ?x619) (* (- 1) (* ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* ?x957 ?x957 ?x957 ?x619 ?x619 ?x619 ?x619) (* (- 3) (* ?x1361 ?x1361 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619 ?x619)) (* 3 (* r00 r00 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* s00 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x619)) (* s00 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619))))
 (let (($x1756 (not (= ?x511 0))))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1086 (* 108 ?x1324)))
 (let ((?x1224 (* (- 9) s)))
 (let ((?x1010 (* r00 r00 s00)))
 (let ((?x905 (* (- 36) ?x1010)))
 (let ((?x137 (* 9 s00)))
 (let ((?x569 (* s00 s00)))
 (let ((?x771 (* 51 ?x569)))
 (let ((?x655 (* r00 r00 s)))
 (let ((?x1888 (* 36 ?x655)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x695 (* 16 ?x1162)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1646 (* (- 108) ?x783)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1822 (* (- 432) ?x860)))
 (let ((?x500 (* r00 x00)))
 (let ((?x1482 (* 108 ?x500)))
 (let ((?x1092 (+ (* 216 (* r00 s00 x00)) ?x1482 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1822 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1646 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x695 (* (- 108) (* x s)) ?x1888 ?x771 (* (- 108) (* r00 x)) ?x137 ?x905 ?x1224 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1086)))
 (let (($x359 (= ?x1092 0)))
 (let ((?x734 (* 15 ?x569)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x713 (* 36 ?x855)))
 (let ((?x911 (* (- 6) ?x783)))
 (let ((?x1459 (* 54 ?x500)))
 (let ((?x1276 (+ (* 24 (* s r)) ?x1459 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x911 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1888 ?x713 ?x734 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x905 (* 54 (* x00 r)) ?x1224 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x477 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x718 (* 4 ?x569)))
 (let ((?x676 (* 18 ?x500)))
 (let ((?x1462 (+ (* 9 (* s r)) ?x676 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x655) ?x718 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1010) (* 18 (* x00 r)) ?x477 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x447 (* r00 r00 r00)))
 (let ((?x448 (* 12 ?x447)))
 (let ((?x479 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x478 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1879 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x477 ?x478 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x479 ?x448)))
 (let (($x753 (= (+ s00 ?x258 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x753 (= ?x1879 0) (= ?x1462 0) (= ?x1276 0) $x359 $x1756))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1384 (lambda ((r Int) (s Int) (x Int) )(let ((?x2229 (* (- 3) (* r r r r s))))
 (let ((?x213 (* 6 r)))
 (let ((?x1364 (+ 3 ?x213 s)))
 (let ((?x258 (* (- 1) s)))
 (let ((?x1370 (+ ?x258 x)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x2105 (* 3 (* r r s r00 r00))))
 (let ((?x2106 (* 6 (* r s r00 r00))))
 (let ((?x2107 (* 18 (* r r r r00 r00))))
 (let ((?x2108 (* 45 (* r r r00 r00))))
 (let ((?x2093 (* (- 6) (* r r r s00))))
 (let ((?x2181 (* (- 15) (* r r s00))))
 (let ((?x2182 (* (- 1) (* r r s s00))))
 (let ((?x1435 (* r r s s)))
 (let ((?x907 (* r s s00)))
 (let ((?x2188 (* (- 2) ?x907)))
 (let ((?x788 (* 2 (* r s s))))
 (let ((?x666 (* s s00)))
 (let ((?x2189 (* (- 1) ?x666)))
 (let ((?x543 (* s r00 r00)))
 (let ((?x2190 (* 3 ?x543)))
 (let ((?x523 (* s s)))
 (let ((?x377 (* r s00)))
 (let ((?x2192 (* (- 12) ?x377)))
 (let ((?x329 (* r r00 r00)))
 (let ((?x2191 (* 36 ?x329)))
 (let ((?x279 (* r00 r00)))
 (let ((?x2195 (* 9 ?x279)))
 (let ((?x356 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x922 (+ ?x47 ?x356 (* (- 9) (* r r)) ?x2195 (* 12 (* r s)) ?x2191 (* ?x1361 ?x1361 ?x1370 ?x1364 ?x1364 ?x1364 ?x1364) (* (- 3) (* r00 r00 ?x1370 ?x1370 ?x1370 ?x1364 ?x1364 ?x1364)) ?x2192 ?x523 ?x2190 ?x2189 (* (- 1) (* s00 ?x1361 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364)) (* 3 (* r00 r00 ?x1361 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364)) ?x788 (* (- 3) (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1370 ?x1370 ?x1364)) (* (- 3) (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364)) ?x2188 (* 3 (* ?x1361 ?x1361 ?x1370 ?x1370 ?x1370 ?x1364 ?x1364 ?x1364)) (* 3 (* r00 r00 ?x1361 ?x1361 ?x1361 ?x1370 ?x1370 ?x1364)) ?x1435 (* ?x1361 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364 ?x1364) ?x2182 ?x2181 ?x2093 (* (- 1) (* ?x1370 ?x1370 ?x1370 ?x1364 ?x1364 ?x1364 ?x1364)) (* ?x1361 ?x1361 ?x1361 ?x1370 ?x1370 ?x1364 ?x1364) (* (- 36) (* r r r)) (* s00 ?x1370 ?x1370 ?x1370 ?x1364 ?x1364 ?x1364) (* (- 45) (* r r r r)) (* 12 (* r r s)) ?x2108 ?x2107 (* (- 1) (* s00 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364 ?x1364)) ?x2106 ?x2105 (* (- 18) (* r r r r r)) (* (- 3) (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364 ?x1364)) (* 3 (* r00 r00 ?x1361 ?x1361 ?x1370 ?x1364 ?x1364 ?x1364)) (* (- 1) (* s00 ?x1361 ?x1361 ?x1361 ?x1370 ?x1370 ?x1364)) ?x2229)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1354 (* (- 108) ?x1324)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x1353 (* (- 16) ?x1162)))
 (let ((?x1034 (* s00 r00 r00 r00)))
 (let ((?x1349 (* (- 216) ?x1034)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x861 (* 432 ?x860)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1107 (* 108 ?x783)))
 (let ((?x709 (* s00 s00 r00 r00)))
 (let ((?x710 (* 36 ?x709)))
 (let ((?x646 (* s00 s00 r00)))
 (let ((?x990 (* 108 ?x646)))
 (let ((?x625 (* s00 r00 r00)))
 (let ((?x978 (* 36 ?x625)))
 (let ((?x569 (* s00 s00)))
 (let ((?x1343 (* (- 51) ?x569)))
 (let ((?x842 (* (- 36) ?x543)))
 (let ((?x500 (* r00 x00)))
 (let ((?x1340 (* (- 108) ?x500)))
 (let ((?x491 (* s00 r00 x00)))
 (let ((?x1339 (* (- 216) ?x491)))
 (let ((?x404 (* s00 r00)))
 (let ((?x498 (* 54 ?x404)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1355 (+ ?x143 ?x965 ?x498 ?x1339 ?x1340 (* (- 15) ?x523) ?x842 ?x1343 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x978 ?x990 (* 66 ?x666) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x710 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1107 (* 108 (* s x)) (* (- 108) (* x x)) ?x861 (* 12 (* s s s00)) ?x1349 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1353 (* 216 (* x x00)) ?x1354)))
 (let (($x1356 (= ?x1355 0)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x674 (* (- 2) ?x646)))
 (let ((?x894 (* (- 15) ?x569)))
 (let ((?x547 (* 3 ?x523)))
 (let ((?x529 (* (- 54) ?x500)))
 (let ((?x542 (* 24 ?x404)))
 (let ((?x1057 (+ ?x143 ?x965 (* (- 24) (* r s)) (* 24 ?x377) ?x542 ?x529 ?x547 (* 54 (* r x)) (* 36 (* r x r00)) ?x842 ?x894 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x978 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x674 (* 12 ?x666) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x784 ?x788 (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x868 (* 2 ?x907) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1062 (= ?x1057 0)))
 (let ((?x626 (* 6 ?x625)))
 (let ((?x582 (* (- 4) ?x569)))
 (let ((?x524 (* 2 ?x523)))
 (let ((?x514 (* (- 18) ?x500)))
 (let ((?x519 (* 9 ?x404)))
 (let ((?x723 (+ ?x47 ?x356 (* (- 9) (* r s)) (* 9 ?x377) ?x519 ?x514 ?x524 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x543) ?x582 (* 18 (* x r00)) ?x626 (* (- 18) (* r x00)) (* 2 ?x666) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x730 (= ?x723 0)))
 (let ((?x447 (* r00 r00 r00)))
 (let ((?x448 (* 12 ?x447)))
 (let ((?x482 (* (- 6) ?x404)))
 (let ((?x479 (* (- 6) x00)))
 (let ((?x478 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x477 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x483 (+ ?x43 ?x477 ?x56 ?x44 ?x478 ?x479 (* 2 (* r s)) (* (- 12) ?x329) (* 4 ?x377) ?x482 ?x448)))
 (let (($x484 (= ?x483 0)))
 (let (($x312 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x279)) 0)))
 (let (($x1650 (and $x312 $x484 $x730 $x1062 $x1356 (not (= ?x922 0)))))
 (let ((?x619 (+ 3 s ?x213)))
 (let ((?x957 (+ x ?x258)))
 (let ((?x511 (+ (* s00 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619) (* (- 1) (* s00 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619)) (* s00 ?x1361 ?x1361 ?x619) (* (- 1) (* ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* ?x957 ?x957 ?x957 ?x619 ?x619 ?x619 ?x619) (* (- 3) (* ?x1361 ?x1361 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619 ?x619)) (* 3 (* r00 r00 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* s00 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x619)) (* s00 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619))))
 (let (($x1756 (not (= ?x511 0))))
 (let ((?x1086 (* 108 ?x1324)))
 (let ((?x1224 (* (- 9) s)))
 (let ((?x1010 (* r00 r00 s00)))
 (let ((?x905 (* (- 36) ?x1010)))
 (let ((?x137 (* 9 s00)))
 (let ((?x771 (* 51 ?x569)))
 (let ((?x655 (* r00 r00 s)))
 (let ((?x1888 (* 36 ?x655)))
 (let ((?x695 (* 16 ?x1162)))
 (let ((?x1646 (* (- 108) ?x783)))
 (let ((?x1822 (* (- 432) ?x860)))
 (let ((?x1482 (* 108 ?x500)))
 (let ((?x1092 (+ (* 216 (* r00 s00 x00)) ?x1482 (* (- 54) (* r00 s00)) (* 15 ?x523) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1822 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1646 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x695 (* (- 108) (* x s)) ?x1888 ?x771 (* (- 108) (* r00 x)) ?x137 ?x905 ?x1224 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1086)))
 (let (($x359 (= ?x1092 0)))
 (let ((?x734 (* 15 ?x569)))
 (let ((?x713 (* 36 ?x855)))
 (let ((?x911 (* (- 6) ?x783)))
 (let ((?x1459 (* 54 ?x500)))
 (let ((?x1276 (+ (* 24 (* s r)) ?x1459 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x523) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x911 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1888 ?x713 ?x734 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x905 (* 54 (* x00 r)) ?x1224 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x718 (* 4 ?x569)))
 (let ((?x676 (* 18 ?x500)))
 (let ((?x1462 (+ (* 9 (* s r)) ?x676 (* (- 9) (* r00 s00)) (* (- 2) ?x523) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x655) ?x718 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1010) (* 18 (* x00 r)) ?x477 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x1879 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x477 ?x478 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x479 ?x448)))
 (let (($x753 (= (+ s00 ?x258 (* 3 (* r r)) (* (- 3) ?x279)) 0)))
 (let (($x1280 (and $x753 (= ?x1879 0) (= ?x1462 0) (= ?x1276 0) $x359 $x1756)))
 (rewrite (= $x1280 $x1650))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1775 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x619 (+ 3 s ?x213)))
 (let ((?x258 (* (- 1) s)))
 (let ((?x957 (+ x ?x258)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x511 (+ (* s00 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619) (* (- 1) (* s00 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619)) (* s00 ?x1361 ?x1361 ?x619) (* (- 1) (* ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* ?x957 ?x957 ?x957 ?x619 ?x619 ?x619 ?x619) (* (- 3) (* ?x1361 ?x1361 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619 ?x619)) (* 3 (* r00 r00 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* s00 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x619)) (* s00 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619))))
 (let (($x1756 (not (= ?x511 0))))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1086 (* 108 ?x1324)))
 (let ((?x1224 (* (- 9) s)))
 (let ((?x1010 (* r00 r00 s00)))
 (let ((?x905 (* (- 36) ?x1010)))
 (let ((?x137 (* 9 s00)))
 (let ((?x569 (* s00 s00)))
 (let ((?x771 (* 51 ?x569)))
 (let ((?x655 (* r00 r00 s)))
 (let ((?x1888 (* 36 ?x655)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x695 (* 16 ?x1162)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1646 (* (- 108) ?x783)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1822 (* (- 432) ?x860)))
 (let ((?x500 (* r00 x00)))
 (let ((?x1482 (* 108 ?x500)))
 (let ((?x1092 (+ (* 216 (* r00 s00 x00)) ?x1482 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1822 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1646 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x695 (* (- 108) (* x s)) ?x1888 ?x771 (* (- 108) (* r00 x)) ?x137 ?x905 ?x1224 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1086)))
 (let (($x359 (= ?x1092 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x894 (* (- 15) ?x569)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x523 (* s s)))
 (let ((?x547 (* 3 ?x523)))
 (let ((?x529 (* (- 54) ?x500)))
 (let ((?x1693 (+ (* (- 24) (* s r)) ?x529 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x547 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x784 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x655) ?x868 ?x894 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x965 (* 36 ?x1010) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x356 (* (- 3) s00)))
 (let ((?x582 (* (- 4) ?x569)))
 (let ((?x524 (* 2 ?x523)))
 (let ((?x514 (* (- 18) ?x500)))
 (let ((?x675 (+ (* (- 9) (* s r)) ?x514 (* 9 (* r00 s00)) ?x524 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x655) ?x582 (* 18 (* r00 x)) ?x356 (* 6 ?x1010) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1321 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x356 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x753 (= (+ s00 ?x258 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x753 (= ?x1321 0) (= ?x675 0) (= ?x1693 0) $x359 $x1756)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1279 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x619 (+ 3 s ?x213)))
 (let ((?x258 (* (- 1) s)))
 (let ((?x957 (+ x ?x258)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x511 (+ (* s00 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619) (* (- 1) (* s00 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619)) (* s00 ?x1361 ?x1361 ?x619) (* (- 1) (* ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* ?x957 ?x957 ?x957 ?x619 ?x619 ?x619 ?x619) (* (- 3) (* ?x1361 ?x1361 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619 ?x619)) (* 3 (* r00 r00 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* s00 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x619)) (* s00 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619))))
 (let (($x1756 (not (= ?x511 0))))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1086 (* 108 ?x1324)))
 (let ((?x1224 (* (- 9) s)))
 (let ((?x1010 (* r00 r00 s00)))
 (let ((?x905 (* (- 36) ?x1010)))
 (let ((?x137 (* 9 s00)))
 (let ((?x569 (* s00 s00)))
 (let ((?x771 (* 51 ?x569)))
 (let ((?x655 (* r00 r00 s)))
 (let ((?x1888 (* 36 ?x655)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x695 (* 16 ?x1162)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1646 (* (- 108) ?x783)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1822 (* (- 432) ?x860)))
 (let ((?x500 (* r00 x00)))
 (let ((?x1482 (* 108 ?x500)))
 (let ((?x1092 (+ (* 216 (* r00 s00 x00)) ?x1482 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1822 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1646 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x695 (* (- 108) (* x s)) ?x1888 ?x771 (* (- 108) (* r00 x)) ?x137 ?x905 ?x1224 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1086)))
 (let (($x359 (= ?x1092 0)))
 (let ((?x734 (* 15 ?x569)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x713 (* 36 ?x855)))
 (let ((?x911 (* (- 6) ?x783)))
 (let ((?x1459 (* 54 ?x500)))
 (let ((?x1276 (+ (* 24 (* s r)) ?x1459 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x911 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1888 ?x713 ?x734 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x905 (* 54 (* x00 r)) ?x1224 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x477 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x718 (* 4 ?x569)))
 (let ((?x676 (* 18 ?x500)))
 (let ((?x1462 (+ (* 9 (* s r)) ?x676 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x655) ?x718 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1010) (* 18 (* x00 r)) ?x477 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x447 (* r00 r00 r00)))
 (let ((?x448 (* 12 ?x447)))
 (let ((?x479 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x478 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1879 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x477 ?x478 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x479 ?x448)))
 (let (($x753 (= (+ s00 ?x258 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1280 (and $x753 (= ?x1879 0) (= ?x1462 0) (= ?x1276 0) $x359 $x1756)))
 (let ((?x143 (* 9 s)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x894 (* (- 15) ?x569)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x523 (* s s)))
 (let ((?x547 (* 3 ?x523)))
 (let ((?x529 (* (- 54) ?x500)))
 (let ((?x1693 (+ (* (- 24) (* s r)) ?x529 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x547 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x784 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x655) ?x868 ?x894 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x965 (* 36 ?x1010) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x356 (* (- 3) s00)))
 (let ((?x582 (* (- 4) ?x569)))
 (let ((?x524 (* 2 ?x523)))
 (let ((?x514 (* (- 18) ?x500)))
 (let ((?x675 (+ (* (- 9) (* s r)) ?x514 (* 9 (* r00 s00)) ?x524 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x655) ?x582 (* 18 (* r00 x)) ?x356 (* 6 ?x1010) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1321 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x356 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x447))))
 (let (($x465 (and $x753 (= ?x1321 0) (= ?x675 0) (= ?x1693 0) $x359 $x1756)))
 (rewrite (= $x465 $x1280)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x255 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x219 (- (* ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215) (* ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x222 (+ (- ?x219 (* 3 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215)) (* ?x212 ?x212 ?x214 s00))))
 (let ((?x226 (- (- ?x222 (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215)) (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x232 (- (+ ?x226 (* ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x234 (- (- ?x232 (* 3 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x215 ?x215)) (* ?x212 ?x212 ?x214 ?x214))))
 (let ((?x239 (- (+ ?x234 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215)) (* 3 ?x212 ?x212 r00 r00 ?x214))))
 (let ((?x245 (+ (- ?x239 (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 3 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x214 s00 ?x215 ?x215) (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215) (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x250 (+ (- ?x245 (* 3 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x214) (* ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x250 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1222 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x619 (+ 3 s ?x213)))
 (let ((?x258 (* (- 1) s)))
 (let ((?x957 (+ x ?x258)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x511 (+ (* s00 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619) (* (- 1) (* s00 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619)) (* s00 ?x1361 ?x1361 ?x619) (* (- 1) (* ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* ?x957 ?x957 ?x957 ?x619 ?x619 ?x619 ?x619) (* (- 3) (* ?x1361 ?x1361 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x619)) (* (- 1) (* ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619 ?x619)) (* 3 (* r00 r00 ?x957 ?x957 ?x957 ?x619 ?x619 ?x619)) (* s00 ?x1361 ?x1361 ?x1361 ?x957 ?x957 ?x619) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* (- 3) (* r00 r00 ?x1361 ?x1361 ?x957 ?x619 ?x619 ?x619)) (* 3 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x619)) (* s00 ?x1361 ?x1361 ?x1361 ?x957 ?x619 ?x619))))
 (let (($x1756 (not (= ?x511 0))))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1086 (* 108 ?x1324)))
 (let ((?x1224 (* (- 9) s)))
 (let ((?x1010 (* r00 r00 s00)))
 (let ((?x905 (* (- 36) ?x1010)))
 (let ((?x137 (* 9 s00)))
 (let ((?x569 (* s00 s00)))
 (let ((?x771 (* 51 ?x569)))
 (let ((?x655 (* r00 r00 s)))
 (let ((?x1888 (* 36 ?x655)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x695 (* 16 ?x1162)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1646 (* (- 108) ?x783)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1822 (* (- 432) ?x860)))
 (let ((?x500 (* r00 x00)))
 (let ((?x1482 (* 108 ?x500)))
 (let ((?x1092 (+ (* 216 (* r00 s00 x00)) ?x1482 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1822 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1646 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x695 (* (- 108) (* x s)) ?x1888 ?x771 (* (- 108) (* r00 x)) ?x137 ?x905 ?x1224 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1086)))
 (let (($x359 (= ?x1092 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x894 (* (- 15) ?x569)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x523 (* s s)))
 (let ((?x547 (* 3 ?x523)))
 (let ((?x529 (* (- 54) ?x500)))
 (let ((?x1693 (+ (* (- 24) (* s r)) ?x529 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x547 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x784 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x655) ?x868 ?x894 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x965 (* 36 ?x1010) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x356 (* (- 3) s00)))
 (let ((?x582 (* (- 4) ?x569)))
 (let ((?x524 (* 2 ?x523)))
 (let ((?x514 (* (- 18) ?x500)))
 (let ((?x675 (+ (* (- 9) (* s r)) ?x514 (* 9 (* r00 s00)) ?x524 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x655) ?x582 (* 18 (* r00 x)) ?x356 (* 6 ?x1010) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1321 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x356 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x753 (= (+ s00 ?x258 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x465 (and $x753 (= ?x1321 0) (= ?x675 0) (= ?x1693 0) $x359 $x1756)))
 (let ((?x215 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x219 (- (* ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215) (* ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x222 (+ (- ?x219 (* 3 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215)) (* ?x212 ?x212 ?x214 s00))))
 (let ((?x226 (- (- ?x222 (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215)) (* ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x232 (- (+ ?x226 (* ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x234 (- (- ?x232 (* 3 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x215 ?x215)) (* ?x212 ?x212 ?x214 ?x214))))
 (let ((?x239 (- (+ ?x234 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x215 ?x215)) (* 3 ?x212 ?x212 r00 r00 ?x214))))
 (let ((?x245 (+ (- ?x239 (* ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 3 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* ?x212 ?x212 ?x212 ?x214 s00 ?x215 ?x215) (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215) (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x250 (+ (- ?x245 (* 3 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x214) (* ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x254 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x250 0))))))
 (rewrite (= $x254 $x465))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x256 (asserted $x255)))
 (let ((@x590 (mp (mp @x256 (quant-intro (proof-bind ?x1222) (= $x255 $x1775)) $x1775) (rewrite (= $x1775 $x1775)) $x1775)))
 (let ((@x1465 (mp (mp @x590 (quant-intro (proof-bind ?x1279) (= $x1775 $x1278)) $x1278) (quant-intro (proof-bind ?x1384) (= $x1278 $x1379)) $x1379)))
 (let ((@x1024 (mp (mp~ @x1465 (sk (~ $x1379 $x1743)) $x1743) (rewrite (= $x1743 $x1317)) $x1317)))
 (let ((@x942 (and-elim @x1024 $x611)))
 (let ((@x1473 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x611) $x432)) @x942 $x432)))
 (let (($x435 (>= ?x609 0)))
 (let ((@x301 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x611) $x435)) @x942 $x435)))
 (let (($x766 (not (<= ?x340 0))))
 (let (($x794 (>= ?x340 0)))
 (let ((@x2042 (lemma ((_ th-lemma arith) (hypothesis (not $x794)) @x301 @x1473 @x301 @x1473 false) $x794)))
 (let ((@x2078 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1043 $x766 (not $x794))) (and-elim @x1024 $x1022) (or $x766 (not $x794)))))
 ((_ th-lemma arith) (unit-resolution @x2078 @x2042 $x766) @x301 @x1473 @x301 @x1473 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        29
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             658
 :arith-nonlinear-bounds    22
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 126
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.08
 :memory                    3.38
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                2354061
 :num-checks                1
 :propagations              12
 :rlimit-count              35992
 :time                      0.03
 :total-time                0.03)
