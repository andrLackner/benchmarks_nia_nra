unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x2836 (* y00 z!1)))
 (let ((?x2484 (* (- 12) ?x2836)))
 (let ((?x1641 (* (- 108) x!3)))
 (let ((?x1913 (* (- 72) y!2)))
 (let ((?x847 (* y!2 z!1)))
 (let ((?x1361 (* 12 ?x847)))
 (let ((?x788 (* z00 y00 y!2)))
 (let ((?x1071 (* 18 (* z!1 x!3))))
 (let ((?x669 (* z00 y00 y00)))
 (let ((?x2281 (* (- 18) (* x00 z!1))))
 (let ((?x560 (* y00 y00)))
 (let ((?x523 (* 36 ?x560)))
 (let ((?x493 (* z00 y00)))
 (let ((?x609 (* 6 ?x493)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x547 (+ ?x67 ?x74 (* 18 (* y00 x00)) ?x609 ?x523 ?x2281 (* (- 18) (* x00 y!2)) ?x669 (* 18 (* y!2 x!3)) (* (- 3) (* z00 z00 y00)) (* (- 3) (* z00 x00 z!1)) ?x1071 (* (- 18) (* y00 x!3)) ?x788 ?x1361 (* (- 3) (* z00 z00 x00)) (* (- 1) (* y!2 y!2 z!1)) ?x1913 (* (- 36) (* y00 y!2)) (* 3 (* z00 z00 x!3)) (* (- 2) (* z00 y!2 y!2)) ?x1641 (* 2 (* y00 y00 z!1)) (* 3 (* z00 z!1 x!3)) (* 3 (* z00 z00 y!2)) (* (- 1) (* y00 y!2 z!1)) (* (- 6) (* z00 y!2)) ?x2484)))
 (let (($x1414 (<= ?x547 0)))
 (let (($x486 (= ?x547 0)))
 (let ((?x2514 (+ y!2 x!3)))
 (let ((?x939 (+ y!2 z!1)))
 (let ((?x2490 (+ 6 z!1)))
 (let ((?x1969 (+ 1 n!0)))
 (let ((?x1225 (* (- 12) (* y00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514))))
 (let ((?x610 (* 18 (* y00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514))))
 (let ((?x1500 (* (- 1) (* z00 z00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2514 ?x2514 ?x2514))))
 (let ((?x553 (* (- 6) (* ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x939 ?x2514 ?x2514))))
 (let ((?x1390 (* 6 (* y!2 y!2 y!2 z!1))))
 (let ((?x2574 (* (- 36) (* y!2 z!1 z!1))))
 (let ((?x1141 (* y!2 y!2 y!2)))
 (let ((?x2541 (* (- 144) ?x1141)))
 (let ((?x1358 (* 12 (* y!2 y!2 z!1 z!1))))
 (let ((?x1947 (* (- 1) (* z00 z00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514))))
 (let ((?x2319 (* 6 (* z00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514))))
 (let ((?x2708 (* (- 6) (* z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514))))
 (let ((?x931 (* y!2 y!2 z!1)))
 (let ((?x1318 (* (- 180) ?x931)))
 (let ((?x1846 (* 6 (* y!2 z!1 z!1 z!1))))
 (let ((?x2538 (+ (* 12 (* y00 y!2 z!1 x!3)) (* 144 (* y00 n!0 y!2 z!1)) (* 108 (* ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2514 ?x2514 ?x2514 ?x2514)) (* (- 12) (* z00 z00 y!2 y!2)) (* 12 (* y00 z!1 z!1 x!3)) (* (- 6) (* z00 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514)) (* 36 (* z00 y!2 z!1)) (* 18 (* y00 z00 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514)) (* (- 18) (* z00 y00 y!2 z!1)) (* (- 12) (* z00 z00 n!0 z!1 x!3)) (* 6 (* z00 n!0 y!2 z!1 x!3)) (* 36 (* z00 n!0 y!2 z!1)) (* (- 6) (* z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x2514 ?x2514 ?x2514)) (* 12 (* y!2 z!1 z!1 x!3)) (* (- 1) (* z00 z00 n!0 y!2 y!2 z!1)) (* z00 z00 z00 y!2 z!1) (* 108 (* x00 y!2 y!2)) (* 108 (* x00 n!0 y!2 z!1)) (* (- 18) (* z00 y00 y!2 y!2)) (* 36 (* z00 n!0 z!1 x!3)) (* 6 (* z00 n!0 z!1 z!1 x!3)) (* 36 (* z00 n!0 y!2 y!2)) (* 6 (* n!0 z!1 z!1 z!1 x!3)) (* z00 z00 z00 y!2 y!2) (* (- 6) (* ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x939 ?x2514 ?x2514)) (* 6 (* z00 z00 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514)) (* 36 (* z00 n!0 y!2 x!3)) (* 12 (* y00 y!2 z!1 z!1)) ?x1846 (* 144 (* y00 n!0 y!2 x!3)) (* (- 12) (* z00 z00 n!0 y!2 x!3)) (* 108 (* x00 y!2 z!1)) ?x1318 (* 108 (* x00 z!1 x!3)) (* 108 (* x00 n!0 z!1 x!3)) (* 6 (* z!1 z!1 z!1 x!3)) (* (- 252) (* y!2 y!2 x!3)) ?x2708 ?x2319 ?x1947 (* 72 (* ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x939 ?x2514 ?x2514)) (* z00 z00 z00 n!0 z!1 x!3) (* (- 108) (* n!0 z!1 x!3 x!3)) ?x1358 (* 36 (* z00 y!2 x!3)) (* z00 z00 z00 y!2 x!3) (* 72 (* ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x939 ?x2514 ?x2514)) ?x2541 (* z00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514) (* 6 (* z00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2514 ?x2514 ?x2514)) (* 36 (* z00 y!2 y!2)) (* 12 (* n!0 y!2 y!2 z!1 z!1)) (* (- 108) (* n!0 y!2 x!3 x!3)) (* (- 12) (* y00 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514)) (* 102 (* ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514 ?x2514)) (* (- 12) (* z00 z00 y!2 x!3)) (* 12 (* y00 n!0 y!2 z!1 x!3)) (* 12 (* y00 y!2 y!2 z!1)) (* 108 (* x00 n!0 y!2 x!3)) ?x2574 ?x1390 (* 12 (* y00 n!0 z!1 z!1 x!3)) (* 144 (* y00 y!2 y!2)) (* 144 (* y00 z!1 x!3)) (* z00 z00 z00 z!1 x!3) (* (- 1) (* z00 z00 z!1 z!1 x!3)) (* (- 1) (* z00 z00 y!2 z!1 z!1)) (* 36 (* z00 z!1 x!3)) (* (- 288) (* y!2 z!1 x!3)) (* z00 z00 z00 n!0 y!2 x!3) (* 18 (* y00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2514 ?x2514 ?x2514)) (* (- 1) (* z00 z00 n!0 y!2 z!1 x!3)) ?x553 ?x1500 (* 6 (* n!0 y!2 z!1 z!1 z!1)) (* (- 252) (* n!0 y!2 y!2 x!3)) (* (- 72) (* y00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2514 ?x2514 ?x2514)) (* (- 18) (* z00 y00 n!0 y!2 z!1)) (* (- 36) (* n!0 z!1 z!1 x!3)) (* z00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x2514 ?x2514 ?x2514) (* 144 (* y00 y!2 z!1)) (* (- 12) (* z00 z00 n!0 y!2 y!2)) (* (- 180) (* n!0 y!2 y!2 z!1)) (* (- 108) (* y!2 x!3 x!3)) (* 108 (* x00 y!2 x!3)) (* 144 (* y00 y!2 x!3)) (* (- 18) (* z00 y00 n!0 y!2 x!3)) (* (- 12) (* z00 z00 y!2 z!1)) (* z00 z00 z00 n!0 y!2 y!2) (* 6 (* z00 y!2 y!2 z!1)) (* (- 108) (* z!1 x!3 x!3)) (* 12 (* y00 n!0 y!2 z!1 z!1)) (* (- 108) (* x00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514)) (* (- 72) (* y00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514)) (* 6 (* y!2 y!2 z!1 x!3)) (* 6 (* z00 z!1 z!1 x!3)) (* 12 (* n!0 y!2 z!1 z!1 x!3)) (* (- 12) (* y00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x2514 ?x2514 ?x2514)) (* (- 36) (* n!0 y!2 z!1 z!1)) ?x610 (* (- 18) (* z00 y00 n!0 z!1 x!3)) (* 6 (* n!0 y!2 y!2 z!1 x!3)) (* (- 1) (* z00 z00 n!0 y!2 z!1 z!1)) (* (- 1) (* z00 z00 z00 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514)) (* (- 12) (* z00 z00 z!1 x!3)) (* 108 (* x00 n!0 y!2 y!2)) (* (- 144) (* n!0 y!2 y!2 y!2)) (* 6 (* z00 n!0 y!2 y!2 z!1)) (* 72 (* ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x939 ?x2514 ?x2514 ?x2514)) ?x1225 (* (- 1) (* z00 z00 y!2 y!2 z!1)) (* 144 (* y00 n!0 y!2 y!2)) (* 12 (* y00 n!0 y!2 y!2 z!1)) (* (- 1) (* z00 z00 y!2 z!1 x!3)) (* 144 (* y00 n!0 z!1 x!3)) (* (- 36) (* z!1 z!1 x!3)) (* (- 288) (* n!0 y!2 z!1 x!3)) (* (- 108) (* x00 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514)) (* z00 z00 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514) (* 6 (* n!0 y!2 y!2 y!2 z!1)) (* z00 z00 z00 n!0 y!2 z!1) (* (- 1) (* z00 z00 n!0 z!1 z!1 x!3)) (* (- 18) (* z00 y00 n!0 y!2 y!2)) (* (- 12) (* z00 z00 n!0 y!2 z!1)) (* (- 108) (* x00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2514 ?x2514 ?x2514)) (* (- 18) (* z00 y00 z!1 x!3)) (* 6 (* z00 y!2 z!1 z!1)) (* 6 (* z00 n!0 y!2 z!1 z!1)) (* (- 18) (* z00 y00 y!2 x!3)) (* (- 72) (* y00 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514)) (* 6 (* z00 y!2 z!1 x!3)) (* 108 (* ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x2514 ?x2514 ?x2514)))))
 (let (($x1425 (= ?x2538 0)))
 (let (($x2582 (not $x1425)))
 (let ((?x1948 (* y!2 y!2)))
 (let ((?x1568 (* 24 ?x1948)))
 (let ((?x1139 (* 108 (* x!3 x!3))))
 (let ((?x1278 (* 108 (* x00 x00))))
 (let ((?x1175 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1171 (* z00 z00 z00 y00)))
 (let ((?x383 (* (- 4) ?x1141)))
 (let ((?x1081 (* (- 36) (* z00 y00 x00))))
 (let ((?x966 (* 16 (* y00 y00 y00))))
 (let ((?x880 (* z00 z00 x00)))
 (let ((?x1131 (* (- 18) ?x880)))
 (let ((?x752 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x694 (* z00 z00 y00)))
 (let ((?x1232 (* (- 10) ?x694)))
 (let ((?x704 (* (- 12) ?x669)))
 (let ((?x1031 (* 96 ?x560)))
 (let ((?x530 (* z00 x00)))
 (let ((?x448 (* 36 ?x530)))
 (let ((?x858 (* 24 ?x493)))
 (let ((?x440 (* y00 x00)))
 (let ((?x431 (* 216 ?x440)))
 (let ((?x400 (* z00 z00 y!2 y!2)))
 (let ((?x1322 (+ ?x400 ?x431 ?x858 ?x448 (* 36 (* z00 y00 x!3)) ?x1031 (* (- 108) (* x00 y!2)) ?x704 (* 108 (* y!2 x!3)) ?x1232 ?x752 (* (- 216) (* y00 x!3)) (* 18 ?x788) ?x1131 ?x966 ?x1081 ?x383 (* (- 216) (* x00 x!3)) (* (- 120) (* y00 y!2)) ?x1171 ?x1175 (* 18 (* z00 z00 x!3)) (* (- 6) (* z00 y!2 y!2)) ?x1278 (* (- 12) (* y00 y!2 y!2)) (* (- 1) (* z00 z00 z00 y!2)) (* 10 (* z00 z00 y!2)) (* (- 2) (* z00 z00 z00 x!3)) ?x1139 (* (- 36) (* z00 x!3)) ?x1568 (* (- 24) (* z00 y!2)))))
 (let (($x882 (= ?x1322 0)))
 (let ((?x1570 (* z00 z00 y!2)))
 (let ((?x1903 (* 24 ?x560)))
 (let ((?x768 (* (- 6) ?x493)))
 (let ((?x1354 (+ ?x67 ?x74 (* (- 1) (* z00 y!2 z!1)) ?x768 (* (- 18) ?x530) ?x1903 ?x2281 (* (- 1) ?x694) ?x1071 ?x1361 ?x1913 (* (- 12) (* y00 y!2)) ?x1641 ?x1570 (* 18 (* z00 x!3)) (* (- 12) ?x1948) (* z00 y00 z!1) (* 6 (* z00 y!2)) ?x2484)))
 (let (($x2280 (= ?x1354 0)))
 (let ((?x352 (* z00 z00)))
 (let ((?x2840 (* (- 6) ?x352)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x980 (+ ?x67 ?x55 ?x74 ?x2840 (* (- 18) ?x493) (* 6 ?x847) ?x1913 ?x1641 (* (- 1) (* z00 z00 z!1)) (* 6 (* z00 z!1)) (* 12 ?x2836))))
 (let (($x1648 (= ?x980 0)))
 (let ((?x843 (* z!1 z!1)))
 (let ((?x822 (* (- 1) ?x352)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x1754 (+ ?x49 ?x43 ?x822 ?x843 (* (- 12) y!2) (* (- 6) z!1))))
 (let (($x685 (= ?x1754 0)))
 (let ((?x569 (* (- 6) n00)))
 (let ((?x985 (+ z00 ?x569 (* 6 n!0) (* (- 1) z!1))))
 (let (($x2544 (= ?x985 0)))
 (let (($x1749 (and $x2544 $x685 $x1648 $x2280 $x486 $x882 $x2582)))
 (let ((?x1246 (+ x!3 y!2)))
 (let ((?x2823 (* (- 12) (* y00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246))))
 (let ((?x1614 (* (- 1) (* z00 z00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x1246 ?x1246 ?x1246))))
 (let ((?x1916 (* 18 (* y00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246))))
 (let ((?x1841 (* (- 6) (* ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x939 ?x1246 ?x1246))))
 (let ((?x2148 (* (- 1) (* z00 z00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246))))
 (let ((?x1301 (* 6 (* z00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246))))
 (let ((?x2757 (* (- 6) (* z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246))))
 (let ((?x1393 (+ (* 36 (* y!2 z!1 z00)) ?x1318 (* (- 12) (* y!2 y!2 z00 z00)) (* z00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246) ?x2757 (* (- 1) (* z00 z00 z00 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246)) (* 102 (* ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246 ?x1246)) (* (- 6) (* z00 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246)) (* (- 1) (* x!3 y!2 z!1 z00 z00)) (* z00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x1246 ?x1246 ?x1246) (* 18 (* y00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x1246 ?x1246 ?x1246)) (* (- 1) (* y!2 y!2 z!1 z00 z00)) (* (- 1) (* x!3 z!1 z!1 z00 z00)) (* (- 1) (* y!2 z!1 z!1 z00 z00)) (* (- 12) (* x!3 y!2 z00 z00)) (* (- 12) (* x!3 y!2 n!0 z00 z00)) (* (- 6) (* ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x939 ?x1246 ?x1246)) (* (- 12) (* y!2 y!2 n!0 z00 z00)) ?x2541 (* (- 12) (* x!3 z!1 z00 z00)) (* 36 (* x!3 z!1 z00)) (* 72 (* ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x939 ?x1246 ?x1246 ?x1246)) (* 36 (* y!2 y!2 z00)) (* (- 12) (* x!3 z!1 n!0 z00 z00)) (* (- 12) (* y!2 z!1 z00 z00)) (* (- 18) (* y!2 y!2 z00 y00)) (* (- 18) (* y!2 y!2 n!0 z00 y00)) (* (- 12) (* y!2 z!1 n!0 z00 z00)) (* (- 1) (* x!3 y!2 z!1 n!0 z00 z00)) (* 18 (* y00 z00 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246)) (* (- 1) (* y!2 y!2 z!1 n!0 z00 z00)) (* (- 1) (* x!3 z!1 z!1 n!0 z00 z00)) (* (- 108) (* x00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x1246 ?x1246 ?x1246)) (* 144 (* y!2 z!1 y00)) (* (- 1) (* y!2 z!1 z!1 n!0 z00 z00)) (* (- 18) (* y!2 z!1 z00 y00)) (* 72 (* ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x939 ?x1246 ?x1246)) (* (- 18) (* y!2 z!1 n!0 z00 y00)) (* 12 (* y!2 z!1 z!1 y00)) (* 144 (* y!2 y!2 y00)) (* 12 (* y!2 z!1 z!1 n!0 y00)) ?x1301 ?x2148 (* 12 (* x!3 z!1 z!1 n!0 y00)) (* 12 (* x!3 z!1 z!1 y00)) (* (- 72) (* y00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x1246 ?x1246 ?x1246)) (* 12 (* y!2 y!2 z!1 n!0 y00)) (* 12 (* y!2 y!2 z!1 y00)) (* 12 (* x!3 y!2 z!1 n!0 y00)) (* 12 (* x!3 y!2 z!1 y00)) (* 144 (* y!2 z!1 n!0 y00)) (* 144 (* x!3 z!1 n!0 y00)) (* 144 (* x!3 z!1 y00)) (* 144 (* y!2 y!2 n!0 y00)) (* 144 (* x!3 y!2 n!0 y00)) (* 144 (* x!3 y!2 y00)) (* (- 72) (* y00 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246)) (* 108 (* y!2 z!1 x00)) (* 108 (* ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246 ?x1246)) (* 108 (* y!2 z!1 n!0 x00)) ?x2574 (* (- 36) (* x!3 z!1 z!1)) (* (- 288) (* x!3 y!2 z!1)) (* (- 252) (* x!3 y!2 y!2)) (* 108 (* x!3 z!1 n!0 x00)) (* 108 (* x!3 z!1 x00)) (* 108 (* y!2 y!2 n!0 x00)) (* z00 z00 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246) (* 108 (* y!2 y!2 x00)) (* 108 (* x!3 y!2 n!0 x00)) (* 108 (* x!3 y!2 x00)) (* 6 (* x!3 y!2 y!2 z!1)) ?x1390 (* (- 108) (* x!3 x!3 z!1)) (* (- 252) (* x!3 y!2 y!2 n!0)) (* (- 18) (* x!3 y!2 n!0 z00 y00)) (* (- 144) (* y!2 y!2 y!2 n!0)) (* 6 (* z00 z00 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246)) (* 6 (* x!3 z!1 z!1 z!1)) ?x1358 (* 12 (* x!3 y!2 z!1 z!1)) (* (- 6) (* z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x1246 ?x1246 ?x1246)) ?x1846 (* (- 108) (* x!3 x!3 y!2)) ?x1841 (* (- 288) (* x!3 y!2 z!1 n!0)) (* (- 12) (* y00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x1246 ?x1246 ?x1246)) (* (- 180) (* y!2 y!2 z!1 n!0)) (* (- 108) (* x00 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246)) (* (- 36) (* x!3 z!1 z!1 n!0)) (* (- 36) (* y!2 z!1 z!1 n!0)) ?x1916 (* 6 (* x!3 y!2 y!2 z!1 n!0)) (* 12 (* y!2 y!2 z!1 z!1 n!0)) (* 12 (* x!3 y!2 z!1 z!1 n!0)) (* (- 108) (* x00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246)) (* (- 18) (* x!3 z!1 n!0 z00 y00)) (* 6 (* y!2 y!2 y!2 z!1 n!0)) (* (- 18) (* x!3 z!1 z00 y00)) ?x1614 (* 6 (* y!2 z!1 z!1 z!1 n!0)) (* (- 18) (* x!3 y!2 z00 y00)) (* 6 (* x!3 z!1 z!1 z!1 n!0)) (* 6 (* z00 z00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x1246 ?x1246 ?x1246)) (* x!3 z!1 n!0 z00 z00 z00) (* x!3 y!2 n!0 z00 z00 z00) (* y!2 y!2 n!0 z00 z00 z00) (* y!2 z!1 z00 z00 z00) (* x!3 z!1 z00 z00 z00) (* y!2 y!2 z00 z00 z00) (* 6 (* x!3 y!2 z!1 z00)) (* 6 (* y!2 y!2 z!1 z00)) (* 6 (* x!3 z!1 z!1 z00)) (* 6 (* y!2 z!1 z!1 z00)) (* 6 (* y!2 z!1 z!1 n!0 z00)) ?x2823 (* 36 (* y!2 y!2 n!0 z00)) (* (- 72) (* y00 ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246)) (* 108 (* ?x1969 ?x1969 ?x1969 ?x2490 ?x2490 ?x1246 ?x1246 ?x1246 ?x1246)) (* 36 (* x!3 y!2 n!0 z00)) (* 36 (* x!3 y!2 z00)) (* y!2 z!1 n!0 z00 z00 z00) (* x!3 y!2 z00 z00 z00) (* 72 (* ?x1969 ?x2490 ?x2490 ?x2490 ?x939 ?x939 ?x1246 ?x1246)) (* 6 (* x!3 z!1 z!1 n!0 z00)) (* 6 (* y!2 y!2 z!1 n!0 z00)) (* 6 (* x!3 y!2 z!1 n!0 z00)) (* 36 (* y!2 z!1 n!0 z00)) (* (- 108) (* x!3 x!3 y!2 n!0)) (* (- 12) (* y00 ?x1969 ?x2490 ?x2490 ?x2490 ?x2490 ?x939 ?x1246 ?x1246)) (* (- 108) (* x!3 x!3 z!1 n!0)) (* 36 (* x!3 z!1 n!0 z00)))))
 (let ((?x917 (* y!2 y!2 z00 z00)))
 (let ((?x506 (+ (* 10 (* y!2 z00 z00)) ?x917 (* (- 1) (* y!2 z00 z00 z00)) ?x431 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x858 ?x448 ?x1568 ?x1031 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x704 ?x1232 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x752 ?x1139 ?x383 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1131 (* (- 216) (* x!3 y00)) ?x966 (* (- 12) (* y!2 y!2 y00)) ?x1081 (* (- 216) (* x!3 x00)) ?x1171 ?x1175 (* 36 (* x!3 z00 y00)) ?x1278)))
 (let ((?x2234 (* y!2 z!1 y00)))
 (let ((?x881 (* 3 ?x880)))
 (let ((?x943 (* 3 ?x694)))
 (let ((?x676 (* (- 1) ?x669)))
 (let ((?x1119 (* 18 (* z!1 x00))))
 (let ((?x863 (* (- 36) ?x560)))
 (let ((?x1757 (* z!1 y00)))
 (let ((?x1626 (* 12 ?x1757)))
 (let ((?x657 (* (- 18) (* x!3 z!1))))
 (let ((?x441 (* (- 18) ?x440)))
 (let ((?x922 (* (- 12) ?x847)))
 (let ((?x572 (* (- 108) x00)))
 (let ((?x515 (* (- 72) y00)))
 (let ((?x1056 (* 72 y!2)))
 (let ((?x1256 (* 108 x!3)))
 (let ((?x1566 (+ ?x1256 ?x1056 ?x515 ?x572 (* (- 3) (* y!2 z00 z00)) ?x931 ?x922 ?x441 (* (- 18) (* x!3 y!2)) ?x657 ?x1626 ?x768 ?x863 ?x1119 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x676 ?x943 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x881 (* 18 (* x!3 y00)) ?x2234 (* (- 2) (* z!1 y00 y00)))))
 (let ((?x589 (* (- 24) ?x560)))
 (let ((?x531 (* 18 ?x530)))
 (let ((?x1779 (* y!2 z!1 z00)))
 (let ((?x2842 (+ ?x1256 ?x1056 ?x515 ?x572 ?x1779 (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x922 ?x657 ?x1626 ?x609 ?x531 (* 12 ?x1948) ?x589 ?x1119 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x694 (* (- 18) (* x!3 z00)))))
 (let ((?x494 (* 18 ?x493)))
 (let ((?x456 (* 6 ?x352)))
 (let ((?x445 (* (- 1) ?x55)))
 (let ((?x1133 (+ ?x1256 ?x1056 ?x515 ?x445 ?x572 (* z!1 z00 z00) ?x456 (* (- 6) ?x847) (* (- 12) ?x1757) ?x494 (* (- 6) (* z!1 z00)))))
 (let ((?x423 (* (- 12) y00)))
 (let ((?x422 (* (- 6) z00)))
 (let (($x1617 (= (+ (* 12 y!2) (* 6 z!1) ?x422 ?x423 (* (- 1) ?x843) ?x352) 0)))
 (let (($x1388 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x1617 (= ?x1133 0) (= ?x2842 0) (= ?x1566 0) (= ?x506 0) (not (= ?x1393 0)))))
 (let (($x1360 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x2953 (* 36 (* x z n z00))))
 (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x447 (+ 6 z)))
 (let ((?x461 (+ 1 n)))
 (let ((?x2822 (* y00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2952 (* 36 (* y z n z00))))
 (let ((?x2951 (* 6 (* x y z n z00))))
 (let ((?x2950 (* 6 (* y y z n z00))))
 (let ((?x2949 (* 6 (* x z z n z00))))
 (let ((?x2711 (* x y z00 z00 z00)))
 (let ((?x2701 (* y z n z00 z00 z00)))
 (let ((?x2947 (* 36 (* x y z00))))
 (let ((?x2946 (* 36 (* x y n z00))))
 (let ((?x3148 (* 36 (* y y n z00))))
 (let ((?x2496 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x3145 (* 6 (* y z z n z00))))
 (let ((?x2443 (* 6 (* y z z z00))))
 (let ((?x2439 (* 6 (* x z z z00))))
 (let ((?x2435 (* 6 (* y y z z00))))
 (let ((?x2431 (* 6 (* x y z z00))))
 (let ((?x2383 (* y y z00 z00 z00)))
 (let ((?x2381 (* x z z00 z00 z00)))
 (let ((?x2379 (* y z z00 z00 z00)))
 (let ((?x2369 (* y y n z00 z00 z00)))
 (let ((?x2368 (* x y n z00 z00 z00)))
 (let ((?x2362 (* x z n z00 z00 z00)))
 (let ((?x3137 (* 6 (* x z z z n))))
 (let ((?x3138 (* 6 (* y z z z n))))
 (let ((?x2290 (* z00 z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)))
 (let ((?x3135 (* 6 (* y y y z n))))
 (let ((?x3136 (* 12 (* x y z z n))))
 (let ((?x3133 (* 12 (* y y z z n))))
 (let ((?x3134 (* 6 (* x y y z n))))
 (let ((?x2197 (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2111 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3127 (* (- 108) (* x x y))))
 (let ((?x2077 (* 6 (* y z z z))))
 (let ((?x3122 (* 12 (* x y z z))))
 (let ((?x3119 (* 12 (* y y z z))))
 (let ((?x2081 (* 6 (* x z z z))))
 (let ((?x3118 (* (- 108) (* x x z))))
 (let ((?x1863 (* 6 (* y y y z))))
 (let ((?x1859 (* 6 (* x y y z))))
 (let ((?x3111 (* 108 (* x y x00))))
 (let ((?x3112 (* 108 (* x y n x00))))
 (let ((?x3109 (* 108 (* y y x00))))
 (let ((?x1695 (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x3108 (* 108 (* y y n x00))))
 (let ((?x3105 (* 108 (* x z x00))))
 (let ((?x3106 (* 108 (* x z n x00))))
 (let ((?x2168 (* (- 36) (* x z z))))
 (let ((?x2182 (* (- 36) (* y z z))))
 (let ((?x3089 (* 108 (* y z n x00))))
 (let ((?x3090 (* 108 (* y z x00))))
 (let ((?x3087 (* 144 (* x y y00))))
 (let ((?x3088 (* 144 (* x y n y00))))
 (let ((?x3085 (* 144 (* y y n y00))))
 (let ((?x3086 (* 144 (* x z y00))))
 (let ((?x2883 (* 144 (* x z n y00))))
 (let ((?x2884 (* 144 (* y z n y00))))
 (let ((?x2885 (* 12 (* x y z y00))))
 (let ((?x2886 (* 12 (* x y z n y00))))
 (let ((?x2887 (* 12 (* y y z y00))))
 (let ((?x2888 (* 12 (* y y z n y00))))
 (let ((?x2889 (* 12 (* x z z y00))))
 (let ((?x2890 (* 12 (* x z z n y00))))
 (let ((?x1234 (* z00 z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x1067 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2891 (* 12 (* y z z n y00))))
 (let ((?x1042 (* y y y00)))
 (let ((?x2892 (* 144 ?x1042)))
 (let ((?x2893 (* 12 (* y z z y00))))
 (let ((?x2894 (* (- 1) (* y z z n z00 z00))))
 (let ((?x940 (* y z y00)))
 (let ((?x2895 (* 144 ?x940)))
 (let ((?x2896 (* (- 1) (* x z z n z00 z00))))
 (let ((?x2897 (* (- 1) (* y y z n z00 z00))))
 (let ((?x2898 (* (- 1) (* x y z n z00 z00))))
 (let ((?x2899 (* (- 12) (* y z n z00 z00))))
 (let ((?x2900 (* (- 12) (* y z z00 z00))))
 (let ((?x2901 (* (- 12) (* x z n z00 z00))))
 (let ((?x838 (* y y z00)))
 (let ((?x2902 (* 36 ?x838)))
 (let ((?x812 (* x z z00)))
 (let ((?x2903 (* 36 ?x812)))
 (let ((?x2904 (* (- 12) (* x z z00 z00))))
 (let ((?x797 (* y y y)))
 (let ((?x2905 (* (- 144) ?x797)))
 (let ((?x2906 (* (- 12) (* y y n z00 z00))))
 (let ((?x2907 (* (- 12) (* x y n z00 z00))))
 (let ((?x2908 (* (- 12) (* x y z00 z00))))
 (let ((?x2909 (* (- 1) (* y z z z00 z00))))
 (let ((?x2910 (* (- 1) (* x z z z00 z00))))
 (let ((?x2911 (* (- 1) (* y y z z00 z00))))
 (let ((?x654 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)))
 (let ((?x2912 (* (- 1) (* x y z z00 z00))))
 (let ((?x458 (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x331 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x2927 (* (- 12) ?x201)))
 (let ((?x103 (* y z z00)))
 (let ((?x2929 (* 36 ?x103)))
 (let ((?x1879 (+ ?x2929 (* (- 180) (* y y z)) ?x2927 ?x331 (* (- 6) ?x458) (* (- 1) (* z00 z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 102 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x2912 ?x654 (* 18 (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) ?x2911 ?x2910 ?x2909 ?x2908 ?x2907 (* (- 6) (* ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) ?x2906 ?x2905 ?x2904 ?x2903 (* 72 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) ?x2902 ?x2901 ?x2900 (* (- 18) (* y y z00 y00)) (* (- 18) (* y y n z00 y00)) ?x2899 ?x2898 (* 18 (* y00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x2897 ?x2896 (* (- 108) (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) ?x2895 ?x2894 (* (- 18) (* y z z00 y00)) (* 72 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* (- 18) (* y z n z00 y00)) ?x2893 ?x2892 ?x2891 (* 6 ?x1067) (* (- 1) ?x1234) ?x2890 ?x2889 (* (- 72) (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) ?x2888 ?x2887 ?x2886 ?x2885 ?x2884 ?x2883 ?x3086 ?x3085 ?x3088 ?x3087 (* (- 72) (* y00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x3090 (* 108 (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) ?x3089 ?x2182 ?x2168 (* (- 288) (* x y z)) (* (- 252) (* x y y)) ?x3106 ?x3105 ?x3108 ?x1695 ?x3109 ?x3112 ?x3111 ?x1859 ?x1863 ?x3118 (* (- 252) (* x y y n)) (* (- 18) (* x y n z00 y00)) (* (- 144) (* y y y n)) (* 6 (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x2081 ?x3119 ?x3122 (* (- 6) (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) ?x2077 ?x3127 (* (- 6) ?x2111) (* (- 288) (* x y z n)) (* (- 12) (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 180) (* y y z n)) (* (- 108) (* x00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 36) (* x z z n)) (* (- 36) (* y z z n)) (* 18 ?x2197) ?x3134 ?x3133 ?x3136 (* (- 108) (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 18) (* x z n z00 y00)) ?x3135 (* (- 18) (* x z z00 y00)) (* (- 1) ?x2290) ?x3138 (* (- 18) (* x y z00 y00)) ?x3137 (* 6 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) ?x2362 ?x2368 ?x2369 ?x2379 ?x2381 ?x2383 ?x2431 ?x2435 ?x2439 ?x2443 ?x3145 (* (- 12) ?x2496) ?x3148 (* (- 72) (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 108 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216 ?x216)) ?x2946 ?x2947 ?x2701 ?x2711 (* 72 (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) ?x2949 ?x2950 ?x2951 ?x2952 (* (- 108) (* x x y n)) (* (- 12) ?x2822) (* (- 108) (* x x z n)) ?x2953)))
 (let ((?x1278 (* 108 (* x00 x00))))
 (let ((?x1175 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1171 (* z00 z00 z00 y00)))
 (let ((?x1081 (* (- 36) (* z00 y00 x00))))
 (let ((?x966 (* 16 (* y00 y00 y00))))
 (let ((?x880 (* z00 z00 x00)))
 (let ((?x1131 (* (- 18) ?x880)))
 (let ((?x836 (* (- 4) ?x797)))
 (let ((?x784 (* 108 (* x x))))
 (let ((?x752 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x694 (* z00 z00 y00)))
 (let ((?x1232 (* (- 10) ?x694)))
 (let ((?x669 (* z00 y00 y00)))
 (let ((?x704 (* (- 12) ?x669)))
 (let ((?x560 (* y00 y00)))
 (let ((?x1031 (* 96 ?x560)))
 (let ((?x534 (* y y)))
 (let ((?x779 (* 24 ?x534)))
 (let ((?x530 (* z00 x00)))
 (let ((?x448 (* 36 ?x530)))
 (let ((?x493 (* z00 y00)))
 (let ((?x858 (* 24 ?x493)))
 (let ((?x440 (* y00 x00)))
 (let ((?x431 (* 216 ?x440)))
 (let ((?x1298 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x431 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x858 ?x448 ?x779 ?x1031 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x704 ?x1232 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x752 ?x784 ?x836 (* (- 6) ?x838) (* (- 108) (* y x00)) ?x1131 (* (- 216) (* x y00)) ?x966 (* (- 12) ?x1042) ?x1081 (* (- 216) (* x x00)) ?x1171 ?x1175 (* 36 (* x z00 y00)) ?x1278)))
 (let (($x1303 (= ?x1298 0)))
 (let ((?x881 (* 3 ?x880)))
 (let ((?x943 (* 3 ?x694)))
 (let ((?x676 (* (- 1) ?x669)))
 (let ((?x606 (* 18 (* z x00))))
 (let ((?x863 (* (- 36) ?x560)))
 (let ((?x768 (* (- 6) ?x493)))
 (let ((?x467 (* z y00)))
 (let ((?x468 (* 12 ?x467)))
 (let ((?x501 (* (- 18) (* x z))))
 (let ((?x441 (* (- 18) ?x440)))
 (let ((?x436 (* y z)))
 (let ((?x460 (* (- 12) ?x436)))
 (let ((?x135 (* y y z)))
 (let ((?x572 (* (- 108) x00)))
 (let ((?x515 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x999 (+ ?x64 ?x71 ?x515 ?x572 (* (- 3) (* y z00 z00)) ?x135 ?x460 ?x441 (* (- 18) (* x y)) ?x501 ?x468 ?x768 ?x863 ?x606 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x676 ?x943 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) ?x812) (* 2 ?x838) (* 18 (* y x00)) ?x881 (* 18 (* x y00)) ?x940 (* (- 2) (* z y00 y00)))))
 (let (($x1006 (= ?x999 0)))
 (let ((?x589 (* (- 24) ?x560)))
 (let ((?x537 (* 12 ?x534)))
 (let ((?x531 (* 18 ?x530)))
 (let ((?x609 (* 6 ?x493)))
 (let ((?x748 (+ ?x64 ?x71 ?x515 ?x572 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x460 ?x501 ?x468 ?x609 ?x531 ?x537 ?x589 ?x606 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x694 (* (- 18) (* x z00)))))
 (let (($x753 (= ?x748 0)))
 (let ((?x494 (* 18 ?x493)))
 (let ((?x352 (* z00 z00)))
 (let ((?x456 (* 6 ?x352)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x445 (* (- 1) ?x55)))
 (let ((?x588 (+ ?x64 ?x71 ?x515 ?x445 ?x572 ?x76 ?x456 (* (- 6) ?x436) (* (- 12) ?x467) ?x494 (* (- 6) (* z z00)))))
 (let (($x593 (= ?x588 0)))
 (let ((?x50 (* z z)))
 (let ((?x424 (* (- 1) ?x50)))
 (let ((?x423 (* (- 12) y00)))
 (let ((?x422 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x426 (= (+ ?x45 ?x46 ?x422 ?x423 ?x424 ?x352) 0)))
 (let (($x344 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x344 $x426 $x593 $x753 $x1006 $x1303 (not (= ?x1879 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x803 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x447 (+ 6 z)))
 (let ((?x461 (+ 1 n)))
 (let ((?x1234 (* z00 z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x458 (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2290 (* z00 z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)))
 (let ((?x2197 (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2111 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1067 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x538 (* z00 z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2496 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x331 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x654 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)))
 (let ((?x1242 (+ (* z00 z00 ?x461 ?x447 ?x217 ?x216) (* (- 1) ?x654) (* (- 12) (* y00 ?x461 ?x447 ?x217 ?x216)) (* 72 (* y00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 72 (* ?x461 ?x217 ?x217 ?x216)) (* (- 102) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* (- 1) (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 12 (* y00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 72) (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* 6 (* ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* (- 108) (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x461 ?x217 ?x216)) (* (- 1) ?x331) (* (- 108) (* x00 ?x461 ?x217 ?x216)) (* (- 18) (* y00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 72 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 12 ?x2496) (* (- 6) (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x538 (* 6 (* z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 108 (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 18) (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 72 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 108 (* ?x461 ?x217 ?x216 ?x216)) (* (- 6) (* ?x461 ?x447 ?x217 ?x217 ?x216)) (* (- 6) ?x1067) (* (- 72) (* y00 ?x461 ?x217 ?x216)) (* (- 72) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* 6 ?x2111) (* 12 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x461 ?x217 ?x216)) (* 108 (* x00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 6 (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 18) ?x2197) (* 108 (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 1) (* z00 z00 z00 ?x461 ?x217 ?x216)) ?x2290 (* (- 6) (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 72) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x461 ?x447 ?x217 ?x216)) (* (- 108) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216 ?x216)) (* 6 ?x458) ?x1234)))
 (let (($x708 (not (= ?x1242 0))))
 (let ((?x1278 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x560 (* y00 y00)))
 (let ((?x1031 (* 96 ?x560)))
 (let ((?x966 (* 16 (* y00 y00 y00))))
 (let ((?x797 (* y y y)))
 (let ((?x836 (* (- 4) ?x797)))
 (let ((?x784 (* 108 (* x x))))
 (let ((?x534 (* y y)))
 (let ((?x779 (* 24 ?x534)))
 (let ((?x325 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x779 ?x784 ?x836 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x966 (* (- 6) (* z00 y y)) ?x1031 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1278 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x319 (= ?x325 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x2841 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x2694 (* (- 108) x)))
 (let ((?x504 (* x00 z)))
 (let ((?x1901 (* (- 18) ?x504)))
 (let ((?x523 (* 36 ?x560)))
 (let ((?x2812 (* z y)))
 (let ((?x2835 (* 12 ?x2812)))
 (let ((?x1371 (* z00 y)))
 (let ((?x1506 (* (- 6) ?x1371)))
 (let ((?x2072 (* y00 z00)))
 (let ((?x510 (* 6 ?x2072)))
 (let ((?x1864 (* y00 z)))
 (let ((?x1963 (* (- 12) ?x1864)))
 (let ((?x2549 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1865 (* z x)))
 (let ((?x1065 (* 18 ?x1865)))
 (let ((?x549 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x1065 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x2549 ?x1963 ?x510 (* (- 36) (* y00 y)) ?x1506 ?x2835 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x523 ?x1901 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x2694 ?x67 (* (- 18) (* y00 x)) ?x2841 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x1180 (* z00 z00 y)))
 (let ((?x1041 (* 6 ?x1371)))
 (let ((?x2141 (* (- 6) ?x2072)))
 (let ((?x1903 (* 24 ?x560)))
 (let ((?x874 (* y00 z00 z)))
 (let ((?x2537 (+ ?x874 ?x2835 ?x1065 (* (- 18) (* x00 z00)) (* (- 12) ?x534) ?x1903 ?x1901 ?x1963 ?x2141 (* (- 12) (* y00 y)) ?x2694 ?x67 ?x1041 ?x2841 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x1180)))
 (let ((?x1857 (* 12 ?x1864)))
 (let ((?x352 (* z00 z00)))
 (let ((?x2840 (* (- 6) ?x352)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2834 (+ (* 6 ?x2812) ?x55 ?x2840 ?x1857 (* (- 18) ?x2072) ?x2694 ?x67 (* 6 (* z00 z)) ?x2841 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x424 (* (- 1) ?x50)))
 (let ((?x422 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x423 (* (- 12) y00)))
 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x352 ?x423 ?x45 ?x46 ?x422 ?x424) 0) (= ?x2834 0) (= ?x2537 0) (= ?x549 0) $x319 $x708)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x2422 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x2953 (* 36 (* x z n z00))))
 (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x447 (+ 6 z)))
 (let ((?x461 (+ 1 n)))
 (let ((?x2822 (* y00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2952 (* 36 (* y z n z00))))
 (let ((?x2951 (* 6 (* x y z n z00))))
 (let ((?x2950 (* 6 (* y y z n z00))))
 (let ((?x2949 (* 6 (* x z z n z00))))
 (let ((?x2711 (* x y z00 z00 z00)))
 (let ((?x2701 (* y z n z00 z00 z00)))
 (let ((?x2947 (* 36 (* x y z00))))
 (let ((?x2946 (* 36 (* x y n z00))))
 (let ((?x3148 (* 36 (* y y n z00))))
 (let ((?x2496 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x3145 (* 6 (* y z z n z00))))
 (let ((?x2443 (* 6 (* y z z z00))))
 (let ((?x2439 (* 6 (* x z z z00))))
 (let ((?x2435 (* 6 (* y y z z00))))
 (let ((?x2431 (* 6 (* x y z z00))))
 (let ((?x2383 (* y y z00 z00 z00)))
 (let ((?x2381 (* x z z00 z00 z00)))
 (let ((?x2379 (* y z z00 z00 z00)))
 (let ((?x2369 (* y y n z00 z00 z00)))
 (let ((?x2368 (* x y n z00 z00 z00)))
 (let ((?x2362 (* x z n z00 z00 z00)))
 (let ((?x3137 (* 6 (* x z z z n))))
 (let ((?x3138 (* 6 (* y z z z n))))
 (let ((?x2290 (* z00 z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)))
 (let ((?x3135 (* 6 (* y y y z n))))
 (let ((?x3136 (* 12 (* x y z z n))))
 (let ((?x3133 (* 12 (* y y z z n))))
 (let ((?x3134 (* 6 (* x y y z n))))
 (let ((?x2197 (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2111 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3127 (* (- 108) (* x x y))))
 (let ((?x2077 (* 6 (* y z z z))))
 (let ((?x3122 (* 12 (* x y z z))))
 (let ((?x3119 (* 12 (* y y z z))))
 (let ((?x2081 (* 6 (* x z z z))))
 (let ((?x3118 (* (- 108) (* x x z))))
 (let ((?x1863 (* 6 (* y y y z))))
 (let ((?x1859 (* 6 (* x y y z))))
 (let ((?x3111 (* 108 (* x y x00))))
 (let ((?x3112 (* 108 (* x y n x00))))
 (let ((?x3109 (* 108 (* y y x00))))
 (let ((?x1695 (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x3108 (* 108 (* y y n x00))))
 (let ((?x3105 (* 108 (* x z x00))))
 (let ((?x3106 (* 108 (* x z n x00))))
 (let ((?x2168 (* (- 36) (* x z z))))
 (let ((?x2182 (* (- 36) (* y z z))))
 (let ((?x3089 (* 108 (* y z n x00))))
 (let ((?x3090 (* 108 (* y z x00))))
 (let ((?x3087 (* 144 (* x y y00))))
 (let ((?x3088 (* 144 (* x y n y00))))
 (let ((?x3085 (* 144 (* y y n y00))))
 (let ((?x3086 (* 144 (* x z y00))))
 (let ((?x2883 (* 144 (* x z n y00))))
 (let ((?x2884 (* 144 (* y z n y00))))
 (let ((?x2885 (* 12 (* x y z y00))))
 (let ((?x2886 (* 12 (* x y z n y00))))
 (let ((?x2887 (* 12 (* y y z y00))))
 (let ((?x2888 (* 12 (* y y z n y00))))
 (let ((?x2889 (* 12 (* x z z y00))))
 (let ((?x2890 (* 12 (* x z z n y00))))
 (let ((?x1234 (* z00 z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x1067 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2891 (* 12 (* y z z n y00))))
 (let ((?x1042 (* y y y00)))
 (let ((?x2892 (* 144 ?x1042)))
 (let ((?x2893 (* 12 (* y z z y00))))
 (let ((?x2894 (* (- 1) (* y z z n z00 z00))))
 (let ((?x940 (* y z y00)))
 (let ((?x2895 (* 144 ?x940)))
 (let ((?x2896 (* (- 1) (* x z z n z00 z00))))
 (let ((?x2897 (* (- 1) (* y y z n z00 z00))))
 (let ((?x2898 (* (- 1) (* x y z n z00 z00))))
 (let ((?x2899 (* (- 12) (* y z n z00 z00))))
 (let ((?x2900 (* (- 12) (* y z z00 z00))))
 (let ((?x2901 (* (- 12) (* x z n z00 z00))))
 (let ((?x838 (* y y z00)))
 (let ((?x2902 (* 36 ?x838)))
 (let ((?x812 (* x z z00)))
 (let ((?x2903 (* 36 ?x812)))
 (let ((?x2904 (* (- 12) (* x z z00 z00))))
 (let ((?x797 (* y y y)))
 (let ((?x2905 (* (- 144) ?x797)))
 (let ((?x2906 (* (- 12) (* y y n z00 z00))))
 (let ((?x2907 (* (- 12) (* x y n z00 z00))))
 (let ((?x2908 (* (- 12) (* x y z00 z00))))
 (let ((?x2909 (* (- 1) (* y z z z00 z00))))
 (let ((?x2910 (* (- 1) (* x z z z00 z00))))
 (let ((?x2911 (* (- 1) (* y y z z00 z00))))
 (let ((?x654 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)))
 (let ((?x2912 (* (- 1) (* x y z z00 z00))))
 (let ((?x458 (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x331 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x2927 (* (- 12) ?x201)))
 (let ((?x103 (* y z z00)))
 (let ((?x2929 (* 36 ?x103)))
 (let ((?x1879 (+ ?x2929 (* (- 180) (* y y z)) ?x2927 ?x331 (* (- 6) ?x458) (* (- 1) (* z00 z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 102 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x2912 ?x654 (* 18 (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) ?x2911 ?x2910 ?x2909 ?x2908 ?x2907 (* (- 6) (* ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) ?x2906 ?x2905 ?x2904 ?x2903 (* 72 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) ?x2902 ?x2901 ?x2900 (* (- 18) (* y y z00 y00)) (* (- 18) (* y y n z00 y00)) ?x2899 ?x2898 (* 18 (* y00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x2897 ?x2896 (* (- 108) (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) ?x2895 ?x2894 (* (- 18) (* y z z00 y00)) (* 72 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* (- 18) (* y z n z00 y00)) ?x2893 ?x2892 ?x2891 (* 6 ?x1067) (* (- 1) ?x1234) ?x2890 ?x2889 (* (- 72) (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) ?x2888 ?x2887 ?x2886 ?x2885 ?x2884 ?x2883 ?x3086 ?x3085 ?x3088 ?x3087 (* (- 72) (* y00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x3090 (* 108 (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) ?x3089 ?x2182 ?x2168 (* (- 288) (* x y z)) (* (- 252) (* x y y)) ?x3106 ?x3105 ?x3108 ?x1695 ?x3109 ?x3112 ?x3111 ?x1859 ?x1863 ?x3118 (* (- 252) (* x y y n)) (* (- 18) (* x y n z00 y00)) (* (- 144) (* y y y n)) (* 6 (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x2081 ?x3119 ?x3122 (* (- 6) (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) ?x2077 ?x3127 (* (- 6) ?x2111) (* (- 288) (* x y z n)) (* (- 12) (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 180) (* y y z n)) (* (- 108) (* x00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 36) (* x z z n)) (* (- 36) (* y z z n)) (* 18 ?x2197) ?x3134 ?x3133 ?x3136 (* (- 108) (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 18) (* x z n z00 y00)) ?x3135 (* (- 18) (* x z z00 y00)) (* (- 1) ?x2290) ?x3138 (* (- 18) (* x y z00 y00)) ?x3137 (* 6 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) ?x2362 ?x2368 ?x2369 ?x2379 ?x2381 ?x2383 ?x2431 ?x2435 ?x2439 ?x2443 ?x3145 (* (- 12) ?x2496) ?x3148 (* (- 72) (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 108 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216 ?x216)) ?x2946 ?x2947 ?x2701 ?x2711 (* 72 (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) ?x2949 ?x2950 ?x2951 ?x2952 (* (- 108) (* x x y n)) (* (- 12) ?x2822) (* (- 108) (* x x z n)) ?x2953)))
 (let ((?x1278 (* 108 (* x00 x00))))
 (let ((?x1175 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1171 (* z00 z00 z00 y00)))
 (let ((?x1081 (* (- 36) (* z00 y00 x00))))
 (let ((?x966 (* 16 (* y00 y00 y00))))
 (let ((?x880 (* z00 z00 x00)))
 (let ((?x1131 (* (- 18) ?x880)))
 (let ((?x836 (* (- 4) ?x797)))
 (let ((?x784 (* 108 (* x x))))
 (let ((?x752 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x694 (* z00 z00 y00)))
 (let ((?x1232 (* (- 10) ?x694)))
 (let ((?x669 (* z00 y00 y00)))
 (let ((?x704 (* (- 12) ?x669)))
 (let ((?x560 (* y00 y00)))
 (let ((?x1031 (* 96 ?x560)))
 (let ((?x534 (* y y)))
 (let ((?x779 (* 24 ?x534)))
 (let ((?x530 (* z00 x00)))
 (let ((?x448 (* 36 ?x530)))
 (let ((?x493 (* z00 y00)))
 (let ((?x858 (* 24 ?x493)))
 (let ((?x440 (* y00 x00)))
 (let ((?x431 (* 216 ?x440)))
 (let ((?x1298 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x431 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x858 ?x448 ?x779 ?x1031 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x704 ?x1232 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x752 ?x784 ?x836 (* (- 6) ?x838) (* (- 108) (* y x00)) ?x1131 (* (- 216) (* x y00)) ?x966 (* (- 12) ?x1042) ?x1081 (* (- 216) (* x x00)) ?x1171 ?x1175 (* 36 (* x z00 y00)) ?x1278)))
 (let (($x1303 (= ?x1298 0)))
 (let ((?x881 (* 3 ?x880)))
 (let ((?x943 (* 3 ?x694)))
 (let ((?x676 (* (- 1) ?x669)))
 (let ((?x606 (* 18 (* z x00))))
 (let ((?x863 (* (- 36) ?x560)))
 (let ((?x768 (* (- 6) ?x493)))
 (let ((?x467 (* z y00)))
 (let ((?x468 (* 12 ?x467)))
 (let ((?x501 (* (- 18) (* x z))))
 (let ((?x441 (* (- 18) ?x440)))
 (let ((?x436 (* y z)))
 (let ((?x460 (* (- 12) ?x436)))
 (let ((?x135 (* y y z)))
 (let ((?x572 (* (- 108) x00)))
 (let ((?x515 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x999 (+ ?x64 ?x71 ?x515 ?x572 (* (- 3) (* y z00 z00)) ?x135 ?x460 ?x441 (* (- 18) (* x y)) ?x501 ?x468 ?x768 ?x863 ?x606 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x676 ?x943 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) ?x812) (* 2 ?x838) (* 18 (* y x00)) ?x881 (* 18 (* x y00)) ?x940 (* (- 2) (* z y00 y00)))))
 (let (($x1006 (= ?x999 0)))
 (let ((?x589 (* (- 24) ?x560)))
 (let ((?x537 (* 12 ?x534)))
 (let ((?x531 (* 18 ?x530)))
 (let ((?x609 (* 6 ?x493)))
 (let ((?x748 (+ ?x64 ?x71 ?x515 ?x572 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x460 ?x501 ?x468 ?x609 ?x531 ?x537 ?x589 ?x606 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x694 (* (- 18) (* x z00)))))
 (let (($x753 (= ?x748 0)))
 (let ((?x494 (* 18 ?x493)))
 (let ((?x352 (* z00 z00)))
 (let ((?x456 (* 6 ?x352)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x445 (* (- 1) ?x55)))
 (let ((?x588 (+ ?x64 ?x71 ?x515 ?x445 ?x572 ?x76 ?x456 (* (- 6) ?x436) (* (- 12) ?x467) ?x494 (* (- 6) (* z z00)))))
 (let (($x593 (= ?x588 0)))
 (let ((?x50 (* z z)))
 (let ((?x424 (* (- 1) ?x50)))
 (let ((?x423 (* (- 12) y00)))
 (let ((?x422 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x426 (= (+ ?x45 ?x46 ?x422 ?x423 ?x424 ?x352) 0)))
 (let (($x344 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x1224 (and $x344 $x426 $x593 $x753 $x1006 $x1303 (not (= ?x1879 0)))))
 (let ((?x538 (* z00 z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x1242 (+ (* z00 z00 ?x461 ?x447 ?x217 ?x216) (* (- 1) ?x654) (* (- 12) (* y00 ?x461 ?x447 ?x217 ?x216)) (* 72 (* y00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 72 (* ?x461 ?x217 ?x217 ?x216)) (* (- 102) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x1695) (* 12 ?x2822) (* (- 72) (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* 6 (* ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* (- 108) (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x461 ?x217 ?x216)) (* (- 1) ?x331) (* (- 108) (* x00 ?x461 ?x217 ?x216)) (* (- 18) (* y00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 72 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 12 ?x2496) (* (- 6) (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x538 (* 6 (* z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 108 (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 18) (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 72 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 108 (* ?x461 ?x217 ?x216 ?x216)) (* (- 6) (* ?x461 ?x447 ?x217 ?x217 ?x216)) (* (- 6) ?x1067) (* (- 72) (* y00 ?x461 ?x217 ?x216)) (* (- 72) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* 6 ?x2111) (* 12 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x461 ?x217 ?x216)) (* 108 (* x00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 6 (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 18) ?x2197) (* 108 (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 1) (* z00 z00 z00 ?x461 ?x217 ?x216)) ?x2290 (* (- 6) (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 72) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x461 ?x447 ?x217 ?x216)) (* (- 108) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216 ?x216)) (* 6 ?x458) ?x1234)))
 (let (($x708 (not (= ?x1242 0))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x325 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x779 ?x784 ?x836 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x966 (* (- 6) (* z00 y y)) ?x1031 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1278 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x319 (= ?x325 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x2841 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x2694 (* (- 108) x)))
 (let ((?x504 (* x00 z)))
 (let ((?x1901 (* (- 18) ?x504)))
 (let ((?x523 (* 36 ?x560)))
 (let ((?x2812 (* z y)))
 (let ((?x2835 (* 12 ?x2812)))
 (let ((?x1371 (* z00 y)))
 (let ((?x1506 (* (- 6) ?x1371)))
 (let ((?x2072 (* y00 z00)))
 (let ((?x510 (* 6 ?x2072)))
 (let ((?x1864 (* y00 z)))
 (let ((?x1963 (* (- 12) ?x1864)))
 (let ((?x2549 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1865 (* z x)))
 (let ((?x1065 (* 18 ?x1865)))
 (let ((?x549 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x1065 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x2549 ?x1963 ?x510 (* (- 36) (* y00 y)) ?x1506 ?x2835 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x523 ?x1901 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x2694 ?x67 (* (- 18) (* y00 x)) ?x2841 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x1180 (* z00 z00 y)))
 (let ((?x1041 (* 6 ?x1371)))
 (let ((?x2141 (* (- 6) ?x2072)))
 (let ((?x1903 (* 24 ?x560)))
 (let ((?x874 (* y00 z00 z)))
 (let ((?x2537 (+ ?x874 ?x2835 ?x1065 (* (- 18) (* x00 z00)) (* (- 12) ?x534) ?x1903 ?x1901 ?x1963 ?x2141 (* (- 12) (* y00 y)) ?x2694 ?x67 ?x1041 ?x2841 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x1180)))
 (let ((?x1857 (* 12 ?x1864)))
 (let ((?x2840 (* (- 6) ?x352)))
 (let ((?x2834 (+ (* 6 ?x2812) ?x55 ?x2840 ?x1857 (* (- 18) ?x2072) ?x2694 ?x67 (* 6 (* z00 z)) ?x2841 ?x74 (* (- 1) (* z00 z00 z)))))
 (let (($x550 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x352 ?x423 ?x45 ?x46 ?x422 ?x424) 0) (= ?x2834 0) (= ?x2537 0) (= ?x549 0) $x319 $x708)))
 (rewrite (= $x550 $x1224)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x859 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x447 (+ 6 z)))
 (let ((?x461 (+ 1 n)))
 (let ((?x1234 (* z00 z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x458 (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2290 (* z00 z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)))
 (let ((?x2197 (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2111 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1067 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x538 (* z00 z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2496 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x331 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x654 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)))
 (let ((?x1242 (+ (* z00 z00 ?x461 ?x447 ?x217 ?x216) (* (- 1) ?x654) (* (- 12) (* y00 ?x461 ?x447 ?x217 ?x216)) (* 72 (* y00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 72 (* ?x461 ?x217 ?x217 ?x216)) (* (- 102) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* (- 1) (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 12 (* y00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 72) (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* 6 (* ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* (- 108) (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x461 ?x217 ?x216)) (* (- 1) ?x331) (* (- 108) (* x00 ?x461 ?x217 ?x216)) (* (- 18) (* y00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 72 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 12 ?x2496) (* (- 6) (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x538 (* 6 (* z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 108 (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 18) (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 72 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 108 (* ?x461 ?x217 ?x216 ?x216)) (* (- 6) (* ?x461 ?x447 ?x217 ?x217 ?x216)) (* (- 6) ?x1067) (* (- 72) (* y00 ?x461 ?x217 ?x216)) (* (- 72) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* 6 ?x2111) (* 12 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x461 ?x217 ?x216)) (* 108 (* x00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 6 (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 18) ?x2197) (* 108 (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 1) (* z00 z00 z00 ?x461 ?x217 ?x216)) ?x2290 (* (- 6) (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 72) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x461 ?x447 ?x217 ?x216)) (* (- 108) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216 ?x216)) (* 6 ?x458) ?x1234)))
 (let (($x708 (not (= ?x1242 0))))
 (let ((?x1278 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x560 (* y00 y00)))
 (let ((?x1031 (* 96 ?x560)))
 (let ((?x966 (* 16 (* y00 y00 y00))))
 (let ((?x797 (* y y y)))
 (let ((?x836 (* (- 4) ?x797)))
 (let ((?x784 (* 108 (* x x))))
 (let ((?x534 (* y y)))
 (let ((?x779 (* 24 ?x534)))
 (let ((?x325 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x779 ?x784 ?x836 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x966 (* (- 6) (* z00 y y)) ?x1031 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1278 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x319 (= ?x325 0)))
 (let ((?x804 (* y00 z y)))
 (let ((?x572 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x515 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x575 (* z y y)))
 (let ((?x504 (* x00 z)))
 (let ((?x505 (* 18 ?x504)))
 (let ((?x863 (* (- 36) ?x560)))
 (let ((?x2812 (* z y)))
 (let ((?x1849 (* (- 12) ?x2812)))
 (let ((?x1371 (* z00 y)))
 (let ((?x1041 (* 6 ?x1371)))
 (let ((?x2072 (* y00 z00)))
 (let ((?x2141 (* (- 6) ?x2072)))
 (let ((?x1864 (* y00 z)))
 (let ((?x1857 (* 12 ?x1864)))
 (let ((?x1865 (* z x)))
 (let ((?x2278 (* (- 18) ?x1865)))
 (let ((?x844 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x2278 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1857 ?x2141 (* 36 (* y00 y)) ?x1041 ?x1849 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x863 ?x505 ?x575 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x515 (* 18 (* y00 x)) ?x71 ?x572 ?x804 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x1195 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1506 (* (- 6) ?x1371)))
 (let ((?x510 (* 6 ?x2072)))
 (let ((?x589 (* (- 24) ?x560)))
 (let ((?x537 (* 12 ?x534)))
 (let ((?x1150 (+ (* (- 1) (* y00 z00 z)) ?x1849 ?x2278 (* 18 (* x00 z00)) ?x537 ?x589 ?x505 ?x1857 ?x510 (* 12 (* y00 y)) ?x64 ?x515 ?x1506 ?x71 ?x572 ?x99 (* (- 18) (* z00 x)) ?x1195 (* (- 1) (* z00 z00 y)))))
 (let ((?x1995 (* z00 z00 z)))
 (let ((?x1963 (* (- 12) ?x1864)))
 (let ((?x352 (* z00 z00)))
 (let ((?x456 (* 6 ?x352)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x445 (* (- 1) ?x55)))
 (let ((?x1801 (+ (* (- 6) ?x2812) ?x445 ?x456 ?x1963 (* 18 ?x2072) ?x64 ?x515 (* (- 6) (* z00 z)) ?x71 ?x572 ?x1995)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x822 (* (- 1) ?x352)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x822 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1801 0) (= ?x1150 0) (= ?x844 0) $x319 $x708))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1151 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x447 (+ 6 z)))
 (let ((?x461 (+ 1 n)))
 (let ((?x1234 (* z00 z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x458 (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2290 (* z00 z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)))
 (let ((?x2197 (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2111 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1067 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x538 (* z00 z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2496 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x331 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x654 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)))
 (let ((?x1242 (+ (* z00 z00 ?x461 ?x447 ?x217 ?x216) (* (- 1) ?x654) (* (- 12) (* y00 ?x461 ?x447 ?x217 ?x216)) (* 72 (* y00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 72 (* ?x461 ?x217 ?x217 ?x216)) (* (- 102) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* (- 1) (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 12 (* y00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 72) (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* 6 (* ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* (- 108) (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x461 ?x217 ?x216)) (* (- 1) ?x331) (* (- 108) (* x00 ?x461 ?x217 ?x216)) (* (- 18) (* y00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 72 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 12 ?x2496) (* (- 6) (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x538 (* 6 (* z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 108 (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 18) (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 72 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 108 (* ?x461 ?x217 ?x216 ?x216)) (* (- 6) (* ?x461 ?x447 ?x217 ?x217 ?x216)) (* (- 6) ?x1067) (* (- 72) (* y00 ?x461 ?x217 ?x216)) (* (- 72) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* 6 ?x2111) (* 12 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x461 ?x217 ?x216)) (* 108 (* x00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 6 (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 18) ?x2197) (* 108 (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 1) (* z00 z00 z00 ?x461 ?x217 ?x216)) ?x2290 (* (- 6) (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 72) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x461 ?x447 ?x217 ?x216)) (* (- 108) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216 ?x216)) (* 6 ?x458) ?x1234)))
 (let (($x708 (not (= ?x1242 0))))
 (let ((?x1278 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x560 (* y00 y00)))
 (let ((?x1031 (* 96 ?x560)))
 (let ((?x966 (* 16 (* y00 y00 y00))))
 (let ((?x797 (* y y y)))
 (let ((?x836 (* (- 4) ?x797)))
 (let ((?x784 (* 108 (* x x))))
 (let ((?x534 (* y y)))
 (let ((?x779 (* 24 ?x534)))
 (let ((?x325 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x779 ?x784 ?x836 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x966 (* (- 6) (* z00 y y)) ?x1031 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1278 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x319 (= ?x325 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x2841 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x2694 (* (- 108) x)))
 (let ((?x504 (* x00 z)))
 (let ((?x1901 (* (- 18) ?x504)))
 (let ((?x523 (* 36 ?x560)))
 (let ((?x2812 (* z y)))
 (let ((?x2835 (* 12 ?x2812)))
 (let ((?x1371 (* z00 y)))
 (let ((?x1506 (* (- 6) ?x1371)))
 (let ((?x2072 (* y00 z00)))
 (let ((?x510 (* 6 ?x2072)))
 (let ((?x1864 (* y00 z)))
 (let ((?x1963 (* (- 12) ?x1864)))
 (let ((?x2549 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1865 (* z x)))
 (let ((?x1065 (* 18 ?x1865)))
 (let ((?x549 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x1065 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x2549 ?x1963 ?x510 (* (- 36) (* y00 y)) ?x1506 ?x2835 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x523 ?x1901 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x2694 ?x67 (* (- 18) (* y00 x)) ?x2841 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x1180 (* z00 z00 y)))
 (let ((?x1041 (* 6 ?x1371)))
 (let ((?x2141 (* (- 6) ?x2072)))
 (let ((?x1903 (* 24 ?x560)))
 (let ((?x874 (* y00 z00 z)))
 (let ((?x2537 (+ ?x874 ?x2835 ?x1065 (* (- 18) (* x00 z00)) (* (- 12) ?x534) ?x1903 ?x1901 ?x1963 ?x2141 (* (- 12) (* y00 y)) ?x2694 ?x67 ?x1041 ?x2841 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x1180)))
 (let ((?x1857 (* 12 ?x1864)))
 (let ((?x352 (* z00 z00)))
 (let ((?x2840 (* (- 6) ?x352)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2834 (+ (* 6 ?x2812) ?x55 ?x2840 ?x1857 (* (- 18) ?x2072) ?x2694 ?x67 (* 6 (* z00 z)) ?x2841 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x424 (* (- 1) ?x50)))
 (let ((?x422 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x423 (* (- 12) y00)))
 (let (($x550 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x352 ?x423 ?x45 ?x46 ?x422 ?x424) 0) (= ?x2834 0) (= ?x2537 0) (= ?x549 0) $x319 $x708)))
 (let ((?x804 (* y00 z y)))
 (let ((?x572 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x515 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x575 (* z y y)))
 (let ((?x505 (* 18 ?x504)))
 (let ((?x863 (* (- 36) ?x560)))
 (let ((?x1849 (* (- 12) ?x2812)))
 (let ((?x2278 (* (- 18) ?x1865)))
 (let ((?x844 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x2278 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) ?x2549) ?x1857 ?x2141 (* 36 (* y00 y)) ?x1041 ?x1849 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x863 ?x505 ?x575 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x515 (* 18 (* y00 x)) ?x71 ?x572 ?x804 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) ?x1180))))
 (let ((?x1195 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x589 (* (- 24) ?x560)))
 (let ((?x537 (* 12 ?x534)))
 (let ((?x1150 (+ (* (- 1) ?x874) ?x1849 ?x2278 (* 18 (* x00 z00)) ?x537 ?x589 ?x505 ?x1857 ?x510 (* 12 (* y00 y)) ?x64 ?x515 ?x1506 ?x71 ?x572 ?x99 (* (- 18) (* z00 x)) ?x1195 (* (- 1) ?x1180))))
 (let ((?x1995 (* z00 z00 z)))
 (let ((?x456 (* 6 ?x352)))
 (let ((?x445 (* (- 1) ?x55)))
 (let ((?x1801 (+ (* (- 6) ?x2812) ?x445 ?x456 ?x1963 (* 18 ?x2072) ?x64 ?x515 (* (- 6) (* z00 z)) ?x71 ?x572 ?x1995)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x822 (* (- 1) ?x352)))
 (let (($x651 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x822 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1801 0) (= ?x1150 0) (= ?x844 0) $x319 $x708)))
 (rewrite (= $x651 $x550)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x299 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x218 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x222 (- (* ?x215 ?x216 ?x217 ?x218 z00 z00) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x226 (+ (- ?x222 (* 12 ?x215 ?x216 ?x217 y00 ?x218)) (* 72 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218) (* 72 ?x215 ?x216 ?x217 ?x217))))
 (let ((?x230 (- ?x226 (* 102 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x233 (+ (- ?x230 (* ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)) (* 12 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x237 (+ (- ?x233 (* 72 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218)) (* 6 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x241 (+ (- ?x237 (* 108 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218)) (* 6 ?x215 ?x216 ?x217 z00 z00))))
 (let ((?x245 (- ?x241 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x247 (- (- ?x245 (* 108 ?x215 ?x216 x00 ?x217)) (* 18 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x250 (+ ?x247 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x256 (+ (- ?x250 (* 6 ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00)) (* ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00 z00) (* 6 ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218))))
 (let ((?x258 (- ?x256 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00))))
 (let ((?x261 (+ ?x258 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218) (* 108 ?x215 ?x216 ?x216 ?x217))))
 (let ((?x267 (- (- ?x261 (* 6 ?x215 ?x216 ?x217 ?x217 ?x218)) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x269 (- (- ?x267 (* 72 ?x215 ?x216 ?x217 y00)) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x275 (+ ?x269 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218) (* 18 ?x215 ?x216 ?x217 y00 z00) (* 108 ?x215 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00))))
 (let ((?x277 (- ?x275 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x279 (+ ?x277 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x283 (+ (- ?x279 (* ?x215 ?x216 ?x217 z00 z00 z00)) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00 z00))))
 (let ((?x288 (- ?x283 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00))))
 (let ((?x290 (- (- ?x288 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218)) (* 6 ?x215 ?x216 ?x217 ?x218 z00))))
 (let ((?x294 (+ (- ?x290 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218)) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x294 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x2276 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x447 (+ 6 z)))
 (let ((?x461 (+ 1 n)))
 (let ((?x1234 (* z00 z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x458 (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2290 (* z00 z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)))
 (let ((?x2197 (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2111 (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1067 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x538 (* z00 z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x2496 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x331 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)))
 (let ((?x654 (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)))
 (let ((?x1242 (+ (* z00 z00 ?x461 ?x447 ?x217 ?x216) (* (- 1) ?x654) (* (- 12) (* y00 ?x461 ?x447 ?x217 ?x216)) (* 72 (* y00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 72 (* ?x461 ?x217 ?x217 ?x216)) (* (- 102) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* (- 1) (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 12 (* y00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 72) (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* 6 (* ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* (- 108) (* ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x461 ?x217 ?x216)) (* (- 1) ?x331) (* (- 108) (* x00 ?x461 ?x217 ?x216)) (* (- 18) (* y00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 72 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 12 ?x2496) (* (- 6) (* z00 z00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) ?x538 (* 6 (* z00 ?x461 ?x447 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 108 (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 18) (* y00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 72 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 108 (* ?x461 ?x217 ?x216 ?x216)) (* (- 6) (* ?x461 ?x447 ?x217 ?x217 ?x216)) (* (- 6) ?x1067) (* (- 72) (* y00 ?x461 ?x217 ?x216)) (* (- 72) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x217 ?x216 ?x216)) (* 6 ?x2111) (* 12 (* y00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x461 ?x217 ?x216)) (* 108 (* x00 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* 6 (* z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 18) ?x2197) (* 108 (* x00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x447 ?x217 ?x216 ?x216)) (* (- 1) (* z00 z00 z00 ?x461 ?x217 ?x216)) ?x2290 (* (- 6) (* z00 z00 ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216)) (* (- 72) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x217 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x461 ?x447 ?x217 ?x216)) (* (- 108) (* ?x461 ?x461 ?x461 ?x447 ?x447 ?x216 ?x216 ?x216 ?x216)) (* 6 ?x458) ?x1234)))
 (let (($x708 (not (= ?x1242 0))))
 (let ((?x1278 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x560 (* y00 y00)))
 (let ((?x1031 (* 96 ?x560)))
 (let ((?x966 (* 16 (* y00 y00 y00))))
 (let ((?x797 (* y y y)))
 (let ((?x836 (* (- 4) ?x797)))
 (let ((?x784 (* 108 (* x x))))
 (let ((?x534 (* y y)))
 (let ((?x779 (* 24 ?x534)))
 (let ((?x325 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x779 ?x784 ?x836 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x966 (* (- 6) (* z00 y y)) ?x1031 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1278 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x319 (= ?x325 0)))
 (let ((?x804 (* y00 z y)))
 (let ((?x572 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x515 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x575 (* z y y)))
 (let ((?x504 (* x00 z)))
 (let ((?x505 (* 18 ?x504)))
 (let ((?x863 (* (- 36) ?x560)))
 (let ((?x2812 (* z y)))
 (let ((?x1849 (* (- 12) ?x2812)))
 (let ((?x1371 (* z00 y)))
 (let ((?x1041 (* 6 ?x1371)))
 (let ((?x2072 (* y00 z00)))
 (let ((?x2141 (* (- 6) ?x2072)))
 (let ((?x1864 (* y00 z)))
 (let ((?x1857 (* 12 ?x1864)))
 (let ((?x1865 (* z x)))
 (let ((?x2278 (* (- 18) ?x1865)))
 (let ((?x844 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x2278 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1857 ?x2141 (* 36 (* y00 y)) ?x1041 ?x1849 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x863 ?x505 ?x575 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x515 (* 18 (* y00 x)) ?x71 ?x572 ?x804 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x1195 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1506 (* (- 6) ?x1371)))
 (let ((?x510 (* 6 ?x2072)))
 (let ((?x589 (* (- 24) ?x560)))
 (let ((?x537 (* 12 ?x534)))
 (let ((?x1150 (+ (* (- 1) (* y00 z00 z)) ?x1849 ?x2278 (* 18 (* x00 z00)) ?x537 ?x589 ?x505 ?x1857 ?x510 (* 12 (* y00 y)) ?x64 ?x515 ?x1506 ?x71 ?x572 ?x99 (* (- 18) (* z00 x)) ?x1195 (* (- 1) (* z00 z00 y)))))
 (let ((?x1995 (* z00 z00 z)))
 (let ((?x1963 (* (- 12) ?x1864)))
 (let ((?x352 (* z00 z00)))
 (let ((?x456 (* 6 ?x352)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x445 (* (- 1) ?x55)))
 (let ((?x1801 (+ (* (- 6) ?x2812) ?x445 ?x456 ?x1963 (* 18 ?x2072) ?x64 ?x515 (* (- 6) (* z00 z)) ?x71 ?x572 ?x1995)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x822 (* (- 1) ?x352)))
 (let (($x651 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x822 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1801 0) (= ?x1150 0) (= ?x844 0) $x319 $x708)))
 (let ((?x218 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x222 (- (* ?x215 ?x216 ?x217 ?x218 z00 z00) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x226 (+ (- ?x222 (* 12 ?x215 ?x216 ?x217 y00 ?x218)) (* 72 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218) (* 72 ?x215 ?x216 ?x217 ?x217))))
 (let ((?x230 (- ?x226 (* 102 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x233 (+ (- ?x230 (* ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)) (* 12 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x237 (+ (- ?x233 (* 72 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218)) (* 6 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x241 (+ (- ?x237 (* 108 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218)) (* 6 ?x215 ?x216 ?x217 z00 z00))))
 (let ((?x245 (- ?x241 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x247 (- (- ?x245 (* 108 ?x215 ?x216 x00 ?x217)) (* 18 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x250 (+ ?x247 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x256 (+ (- ?x250 (* 6 ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00)) (* ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00 z00) (* 6 ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218))))
 (let ((?x258 (- ?x256 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00))))
 (let ((?x261 (+ ?x258 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218) (* 108 ?x215 ?x216 ?x216 ?x217))))
 (let ((?x267 (- (- ?x261 (* 6 ?x215 ?x216 ?x217 ?x217 ?x218)) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x269 (- (- ?x267 (* 72 ?x215 ?x216 ?x217 y00)) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x275 (+ ?x269 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218) (* 18 ?x215 ?x216 ?x217 y00 z00) (* 108 ?x215 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00))))
 (let ((?x277 (- ?x275 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x279 (+ ?x277 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x283 (+ (- ?x279 (* ?x215 ?x216 ?x217 z00 z00 z00)) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00 z00))))
 (let ((?x288 (- ?x283 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00))))
 (let ((?x290 (- (- ?x288 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218)) (* 6 ?x215 ?x216 ?x217 ?x218 z00))))
 (let ((?x294 (+ (- ?x290 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218)) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218 z00) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x298 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x294 0))))))
 (rewrite (= $x298 $x651))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x300 (asserted $x299)))
 (let ((@x1194 (mp (mp @x300 (quant-intro (proof-bind ?x2276) (= $x299 $x859)) $x859) (rewrite (= $x859 $x859)) $x859)))
 (let ((@x2746 (mp (mp @x1194 (quant-intro (proof-bind ?x1151) (= $x859 $x803)) $x803) (quant-intro (proof-bind ?x2422) (= $x803 $x1360)) $x1360)))
 (let ((@x725 (mp (mp~ @x2746 (sk (~ $x1360 $x1388)) $x1388) (rewrite (= $x1388 $x1749)) $x1749)))
 (let ((@x689 (and-elim @x725 $x486)))
 (let ((@x892 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x486) $x1414)) @x689 $x1414)))
 (let (($x671 (>= ?x547 0)))
 (let ((@x2682 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x486) $x671)) @x689 $x671)))
 (let (($x2129 (<= ?x1322 0)))
 (let ((@x2048 (and-elim @x725 $x882)))
 (let ((@x647 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x882) $x2129)) @x2048 $x2129)))
 (let (($x2052 (>= ?x1322 0)))
 (let ((@x707 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x882) $x2052)) @x2048 $x2052)))
 (let (($x2683 (<= ?x1354 0)))
 (let ((@x1909 (and-elim @x725 $x2280)))
 (let ((@x542 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2280) $x2683)) @x1909 $x2683)))
 (let (($x1521 (>= ?x1354 0)))
 (let ((@x2785 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2280) $x1521)) @x1909 $x1521)))
 (let (($x2232 (<= ?x980 0)))
 (let ((@x938 (and-elim @x725 $x1648)))
 (let ((@x1057 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1648) $x2232)) @x938 $x2232)))
 (let (($x1531 (>= ?x980 0)))
 (let ((@x1560 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1648) $x1531)) @x938 $x1531)))
 (let (($x2773 (<= ?x1754 0)))
 (let ((@x923 (and-elim @x725 $x685)))
 (let ((@x2850 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x685) $x2773)) @x923 $x2773)))
 (let (($x1205 (>= ?x1754 0)))
 (let ((@x732 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x685) $x1205)) @x923 $x1205)))
 (let (($x638 (<= ?x985 0)))
 (let ((@x1822 (and-elim @x725 $x2544)))
 (let ((@x2831 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2544) $x638)) @x1822 $x638)))
 (let (($x690 (>= ?x985 0)))
 (let ((@x1027 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2544) $x690)) @x1822 $x690)))
 (let (($x762 (not (<= ?x2538 0))))
 (let (($x1160 (>= ?x2538 0)))
 (let ((@x384 ((_ th-lemma arith) (hypothesis (not $x1160)) @x1027 @x2831 @x1027 @x2831 @x732 @x2850 @x1027 @x2831 @x2785 @x542 @x732 @x2850 @x1560 @x1057 @x2785 @x542 @x2682 @x892 @x2785 @x542 @x2785 @x542 @x2785 @x542 @x707 @x647 @x2682 @x892 @x707 @x647 @x2682 @x892 false)))
 (let ((@x857 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1425 $x762 (not $x1160))) (and-elim @x725 $x2582) (or $x762 (not $x1160)))))
 ((_ th-lemma arith) (unit-resolution @x857 (lemma @x384 $x1160) $x762) @x1027 @x2831 @x1027 @x2831 @x732 @x2850 @x1027 @x2831 @x2785 @x542 @x732 @x2850 @x1560 @x1057 @x2785 @x542 @x2682 @x892 @x2785 @x542 @x2785 @x542 @x2785 @x542 @x707 @x647 @x2682 @x892 @x707 @x647 @x2682 @x892 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        26
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-grobner             2
 :arith-max-min             1446
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-pivots              7
 :arith-row-summations      8
 :arith-tableau-max-columns 226
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                4.61
 :memory                    3.56
 :mk-bool-var               27
 :mk-clause                 22
 :num-allocs                6235539
 :num-checks                1
 :propagations              14
 :rlimit-count              82608
 :time                      0.07
 :total-time                0.08)
