unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1619 (* r!2 s!1)))
 (let ((?x1005 (* 2 ?x1619)))
 (let ((?x954 (* (- 12) (* r00 r00 r!2))))
 (let ((?x1530 (* s00 r!2)))
 (let ((?x1512 (* 4 ?x1530)))
 (let ((?x841 (* (- 3) s!1)))
 (let ((?x819 (* 6 x!0)))
 (let ((?x967 (* 3 r!2)))
 (let ((?x429 (* r00 r00 r00)))
 (let ((?x430 (* 12 ?x429)))
 (let ((?x386 (* s00 r00)))
 (let ((?x464 (* (- 6) ?x386)))
 (let ((?x461 (* (- 6) x00)))
 (let ((?x460 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1299 (+ ?x44 ?x460 ?x461 ?x464 ?x430 ?x967 ?x819 ?x841 ?x1512 ?x954 ?x1005)))
 (let (($x1501 (<= ?x1299 0)))
 (let (($x244 (= ?x1299 0)))
 (let ((?x1018 (* (- 7) s!1)))
 (let ((?x886 (* r!2 r!2)))
 (let ((?x1178 (* 12 ?x886)))
 (let ((?x259 (* r00 r00)))
 (let ((?x1207 (* (- 12) ?x259)))
 (let ((?x851 (* 7 s00)))
 (let ((?x694 (+ ?x851 ?x460 ?x461 ?x1207 ?x464 ?x430 ?x967 ?x819 ?x1178 ?x1018 ?x1512 ?x954 ?x1005)))
 (let (($x280 (= ?x694 0)))
 (let (($x273 (not $x280)))
 (let ((?x1522 (* r00 r00 s!1)))
 (let ((?x566 (* 36 ?x1522)))
 (let ((?x1306 (* x00 x00)))
 (let ((?x1202 (* 108 ?x1306)))
 (let ((?x1144 (* s00 s00 s00)))
 (let ((?x730 (* 16 ?x1144)))
 (let ((?x484 (* (- 9) s!1)))
 (let ((?x842 (* r00 r00 r00 x00)))
 (let ((?x796 (* (- 432) ?x842)))
 (let ((?x765 (* s00 x00)))
 (let ((?x924 (* (- 108) ?x765)))
 (let ((?x607 (* s00 r00 r00)))
 (let ((?x788 (* (- 36) ?x607)))
 (let ((?x551 (* s00 s00)))
 (let ((?x899 (* 51 ?x551)))
 (let ((?x482 (* r00 x00)))
 (let ((?x942 (* 108 ?x482)))
 (let ((?x137 (* 9 s00)))
 (let ((?x584 (+ ?x137 (* (- 54) ?x386) (* 216 (* s00 r00 x00)) ?x942 ?x899 (* (- 216) (* r00 r00 r00 s!1)) ?x788 (* (- 108) (* s00 s00 r00)) (* 108 (* s00 r00 s!1)) (* (- 36) (* s00 s00 r00 r00)) (* (- 216) (* x00 x!0)) (* (- 216) (* s00 r00 x!0)) ?x924 (* (- 4) (* s!1 s!1 s!1)) ?x796 (* 108 (* x!0 x!0)) (* 108 (* s00 x!0)) (* 216 (* s00 r00 r00 r00)) (* (- 66) (* s00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 54 (* r00 s!1)) ?x484 (* 432 (* r00 r00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* 15 (* s!1 s!1)) (* (- 108) (* x!0 s!1)) ?x730 (* 108 (* x00 s!1)) ?x1202 ?x566 (* (- 108) (* r00 x!0)))))
 (let ((?x450 (+ ?x137 (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 24) ?x386) (* 54 ?x482) (* 15 ?x551) ?x788 (* 2 (* s00 s00 r00)) (* 2 (* s00 r00 s!1)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 r!2 s!1)) (* (- 6) ?x765) (* (- 36) (* r00 r!2 x!0)) (* 36 (* r00 r00 x00)) (* (- 54) (* r!2 x!0)) (* (- 2) (* r!2 s!1 s!1)) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* (- 12) (* s00 s!1)) (* 54 (* x00 r!2)) (* 24 (* r00 s!1)) ?x484 (* (- 3) (* s!1 s!1)) (* (- 6) (* x!0 s!1)) (* 6 (* x00 s!1)) ?x566 (* (- 24) ?x1530) (* (- 54) (* r00 x!0)) (* 24 ?x1619))))
 (let ((?x622 (+ ?x44 (* (- 9) ?x386) (* 18 ?x482) (* 4 ?x551) (* (- 6) ?x607) (* (- 18) (* r!2 x!0)) (* (- 2) (* s00 s!1)) (* 18 (* x00 r!2)) (* 9 (* r00 s!1)) ?x841 (* (- 2) (* s!1 s!1)) (* 6 (* s00 r00 r!2)) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x1522) (* (- 9) ?x1530) (* (- 18) (* r00 x!0)) (* 9 ?x1619))))
 (let ((?x735 (* (- 3) ?x259)))
 (let ((?x1513 (+ s00 ?x735 (* 3 ?x886) (* (- 1) s!1))))
 (let (($x1372 (= ?x1513 0)))
 (let (($x281 (and $x1372 $x244 (= ?x622 0) (= ?x450 0) (= ?x584 0) $x273)))
 (let ((?x1492 (* r!2 s00)))
 (let ((?x995 (* 4 ?x1492)))
 (let ((?x326 (* (- 12) (* r!2 r00 r00))))
 (let ((?x1035 (+ ?x967 ?x1018 ?x819 ?x851 ?x460 ?x461 ?x1178 ?x1207 ?x1005 ?x326 ?x995 ?x464 ?x430)))
 (let ((?x1336 (* (- 108) ?x1306)))
 (let ((?x1335 (* (- 16) ?x1144)))
 (let ((?x1016 (* s00 r00 r00 r00)))
 (let ((?x1331 (* (- 216) ?x1016)))
 (let ((?x843 (* 432 ?x842)))
 (let ((?x1089 (* 108 ?x765)))
 (let ((?x691 (* s00 s00 r00 r00)))
 (let ((?x692 (* 36 ?x691)))
 (let ((?x628 (* s00 s00 r00)))
 (let ((?x972 (* 108 ?x628)))
 (let ((?x960 (* 36 ?x607)))
 (let ((?x1325 (* (- 51) ?x551)))
 (let ((?x1296 (* s!1 r00 r00)))
 (let ((?x1453 (* (- 36) ?x1296)))
 (let ((?x1322 (* (- 108) ?x482)))
 (let ((?x473 (* s00 r00 x00)))
 (let ((?x1321 (* (- 216) ?x473)))
 (let ((?x480 (* 54 ?x386)))
 (let ((?x947 (* (- 9) s00)))
 (let ((?x665 (* 9 s!1)))
 (let ((?x1034 (+ ?x665 ?x947 ?x480 ?x1321 ?x1322 (* (- 15) (* s!1 s!1)) ?x1453 ?x1325 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x960 ?x972 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x692 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1089 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x843 (* 12 (* s!1 s!1 s00)) ?x1331 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1335 (* 216 (* x!0 x00)) ?x1336)))
 (let ((?x837 (* r00 r00 x00)))
 (let ((?x850 (* (- 36) ?x837)))
 (let ((?x766 (* 6 ?x765)))
 (let ((?x656 (* (- 2) ?x628)))
 (let ((?x876 (* (- 15) ?x551)))
 (let ((?x511 (* (- 54) ?x482)))
 (let ((?x524 (* 24 ?x386)))
 (let ((?x844 (+ ?x665 ?x947 (* (- 24) ?x1619) (* 24 ?x1492) ?x524 ?x511 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x1453 ?x876 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x960 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x656 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x766 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x850 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x608 (* 6 ?x607)))
 (let ((?x564 (* (- 4) ?x551)))
 (let ((?x496 (* (- 18) ?x482)))
 (let ((?x501 (* 9 ?x386)))
 (let ((?x338 (* (- 3) s00)))
 (let ((?x1229 (+ (* 3 s!1) ?x338 (* (- 9) ?x1619) (* 9 ?x1492) ?x501 ?x496 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1296) ?x564 (* 18 (* x!0 r00)) ?x608 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let (($x849 (= (+ ?x967 ?x841 ?x819 ?x44 ?x460 ?x461 ?x1005 ?x326 ?x995 ?x464 ?x430) 0)))
 (let (($x974 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x886) (* 3 ?x259)) 0) $x849 (= ?x1229 0) (= ?x844 0) (= ?x1034 0) (not (= ?x1035 0)))))
 (let (($x1213 (exists ((r Int) (s Int) (x Int) )(! (let ((?x429 (* r00 r00 r00)))
 (let ((?x430 (* 12 ?x429)))
 (let ((?x386 (* s00 r00)))
 (let ((?x464 (* (- 6) ?x386)))
 (let ((?x359 (* r s00)))
 (let ((?x360 (* 4 ?x359)))
 (let ((?x309 (* r r00 r00)))
 (let ((?x463 (* (- 12) ?x309)))
 (let ((?x303 (* r s)))
 (let ((?x462 (* 2 ?x303)))
 (let ((?x259 (* r00 r00)))
 (let ((?x1207 (* (- 12) ?x259)))
 (let ((?x461 (* (- 6) x00)))
 (let ((?x460 (* (- 3) r00)))
 (let ((?x851 (* 7 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x1208 (+ ?x43 (* (- 7) s) ?x56 ?x851 ?x460 ?x461 (* 12 (* r r)) ?x1207 ?x462 ?x463 ?x360 ?x464 ?x430)))
 (let ((?x1306 (* x00 x00)))
 (let ((?x1336 (* (- 108) ?x1306)))
 (let ((?x1144 (* s00 s00 s00)))
 (let ((?x1335 (* (- 16) ?x1144)))
 (let ((?x1016 (* s00 r00 r00 r00)))
 (let ((?x1331 (* (- 216) ?x1016)))
 (let ((?x842 (* r00 r00 r00 x00)))
 (let ((?x843 (* 432 ?x842)))
 (let ((?x765 (* s00 x00)))
 (let ((?x1089 (* 108 ?x765)))
 (let ((?x691 (* s00 s00 r00 r00)))
 (let ((?x692 (* 36 ?x691)))
 (let ((?x628 (* s00 s00 r00)))
 (let ((?x972 (* 108 ?x628)))
 (let ((?x607 (* s00 r00 r00)))
 (let ((?x960 (* 36 ?x607)))
 (let ((?x551 (* s00 s00)))
 (let ((?x1325 (* (- 51) ?x551)))
 (let ((?x525 (* s r00 r00)))
 (let ((?x824 (* (- 36) ?x525)))
 (let ((?x482 (* r00 x00)))
 (let ((?x1322 (* (- 108) ?x482)))
 (let ((?x473 (* s00 r00 x00)))
 (let ((?x1321 (* (- 216) ?x473)))
 (let ((?x480 (* 54 ?x386)))
 (let ((?x947 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1337 (+ ?x143 ?x947 ?x480 ?x1321 ?x1322 (* (- 15) (* s s)) ?x824 ?x1325 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x960 ?x972 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x692 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1089 (* 108 (* s x)) (* (- 108) (* x x)) ?x843 (* 12 (* s s s00)) ?x1331 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1335 (* 216 (* x x00)) ?x1336)))
 (let (($x1338 (= ?x1337 0)))
 (let ((?x837 (* r00 r00 x00)))
 (let ((?x850 (* (- 36) ?x837)))
 (let ((?x766 (* 6 ?x765)))
 (let ((?x656 (* (- 2) ?x628)))
 (let ((?x876 (* (- 15) ?x551)))
 (let ((?x505 (* s s)))
 (let ((?x529 (* 3 ?x505)))
 (let ((?x511 (* (- 54) ?x482)))
 (let ((?x524 (* 24 ?x386)))
 (let ((?x1039 (+ ?x143 ?x947 (* (- 24) ?x303) (* 24 ?x359) ?x524 ?x511 ?x529 (* 54 (* r x)) (* 36 (* r x r00)) ?x824 ?x876 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x960 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x656 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x766 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x850 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1044 (= ?x1039 0)))
 (let ((?x608 (* 6 ?x607)))
 (let ((?x564 (* (- 4) ?x551)))
 (let ((?x506 (* 2 ?x505)))
 (let ((?x496 (* (- 18) ?x482)))
 (let ((?x501 (* 9 ?x386)))
 (let ((?x338 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x705 (+ ?x47 ?x338 (* (- 9) ?x303) (* 9 ?x359) ?x501 ?x496 ?x506 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x525) ?x564 (* 18 (* x r00)) ?x608 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x712 (= ?x705 0)))
 (let ((?x44 (* 3 s00)))
 (let ((?x465 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x460 ?x461 ?x462 ?x463 ?x360 ?x464 ?x430)))
 (let (($x466 (= ?x465 0)))
 (let (($x292 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x259)) 0)))
 (and $x292 $x466 $x712 $x1044 $x1338 (not (= ?x1208 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1092 (exists ((r Int) (s Int) (x Int) )(! (let ((?x429 (* r00 r00 r00)))
 (let ((?x443 (* (- 12) ?x429)))
 (let ((?x59 (* 6 x00)))
 (let ((?x408 (* (- 6) x)))
 (let ((?x650 (* r00 s00)))
 (let ((?x659 (* 6 ?x650)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x338 (* (- 3) s00)))
 (let ((?x1057 (+ (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x338 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x659 ?x408 ?x59 ?x443)))
 (let ((?x1306 (* x00 x00)))
 (let ((?x1202 (* 108 ?x1306)))
 (let ((?x137 (* 9 s00)))
 (let ((?x551 (* s00 s00)))
 (let ((?x899 (* 51 ?x551)))
 (let ((?x1144 (* s00 s00 s00)))
 (let ((?x730 (* 16 ?x1144)))
 (let ((?x765 (* s00 x00)))
 (let ((?x924 (* (- 108) ?x765)))
 (let ((?x842 (* r00 r00 r00 x00)))
 (let ((?x796 (* (- 432) ?x842)))
 (let ((?x482 (* r00 x00)))
 (let ((?x942 (* 108 ?x482)))
 (let ((?x1219 (+ (* 216 (* r00 s00 x00)) ?x942 (* (- 54) ?x650) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x796 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x924 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x730 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x899 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1202)))
 (let ((?x947 (* (- 9) s00)))
 (let ((?x876 (* (- 15) ?x551)))
 (let ((?x837 (* r00 r00 x00)))
 (let ((?x850 (* (- 36) ?x837)))
 (let ((?x766 (* 6 ?x765)))
 (let ((?x505 (* s s)))
 (let ((?x529 (* 3 ?x505)))
 (let ((?x511 (* (- 54) ?x482)))
 (let ((?x838 (+ (* (- 24) (* s r)) ?x511 (* 36 (* r00 x r)) (* 24 ?x650) ?x529 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x766 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x850 ?x876 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x947 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x564 (* (- 4) ?x551)))
 (let ((?x506 (* 2 ?x505)))
 (let ((?x496 (* (- 18) ?x482)))
 (let ((?x985 (+ (* (- 9) (* s r)) ?x496 (* 9 ?x650) ?x506 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x564 (* 18 (* r00 x)) ?x338 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x681 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x338 ?x47 ?x48 (* (- 4) (* s00 r)) ?x659 ?x408 ?x59 ?x443)))
 (let ((?x259 (* r00 r00)))
 (let ((?x735 (* (- 3) ?x259)))
 (and (= (+ s00 (* (- 1) s) (* 3 (* r r)) ?x735) 0) (= ?x681 0) (= ?x985 0) (= ?x838 0) (= ?x1219 0) (not (= ?x1057 (- 6))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1250 (lambda ((r Int) (s Int) (x Int) )(let ((?x429 (* r00 r00 r00)))
 (let ((?x430 (* 12 ?x429)))
 (let ((?x386 (* s00 r00)))
 (let ((?x464 (* (- 6) ?x386)))
 (let ((?x359 (* r s00)))
 (let ((?x360 (* 4 ?x359)))
 (let ((?x309 (* r r00 r00)))
 (let ((?x463 (* (- 12) ?x309)))
 (let ((?x303 (* r s)))
 (let ((?x462 (* 2 ?x303)))
 (let ((?x259 (* r00 r00)))
 (let ((?x1207 (* (- 12) ?x259)))
 (let ((?x461 (* (- 6) x00)))
 (let ((?x460 (* (- 3) r00)))
 (let ((?x851 (* 7 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x1208 (+ ?x43 (* (- 7) s) ?x56 ?x851 ?x460 ?x461 (* 12 (* r r)) ?x1207 ?x462 ?x463 ?x360 ?x464 ?x430)))
 (let ((?x1306 (* x00 x00)))
 (let ((?x1336 (* (- 108) ?x1306)))
 (let ((?x1144 (* s00 s00 s00)))
 (let ((?x1335 (* (- 16) ?x1144)))
 (let ((?x1016 (* s00 r00 r00 r00)))
 (let ((?x1331 (* (- 216) ?x1016)))
 (let ((?x842 (* r00 r00 r00 x00)))
 (let ((?x843 (* 432 ?x842)))
 (let ((?x765 (* s00 x00)))
 (let ((?x1089 (* 108 ?x765)))
 (let ((?x691 (* s00 s00 r00 r00)))
 (let ((?x692 (* 36 ?x691)))
 (let ((?x628 (* s00 s00 r00)))
 (let ((?x972 (* 108 ?x628)))
 (let ((?x607 (* s00 r00 r00)))
 (let ((?x960 (* 36 ?x607)))
 (let ((?x551 (* s00 s00)))
 (let ((?x1325 (* (- 51) ?x551)))
 (let ((?x525 (* s r00 r00)))
 (let ((?x824 (* (- 36) ?x525)))
 (let ((?x482 (* r00 x00)))
 (let ((?x1322 (* (- 108) ?x482)))
 (let ((?x473 (* s00 r00 x00)))
 (let ((?x1321 (* (- 216) ?x473)))
 (let ((?x480 (* 54 ?x386)))
 (let ((?x947 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1337 (+ ?x143 ?x947 ?x480 ?x1321 ?x1322 (* (- 15) (* s s)) ?x824 ?x1325 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x960 ?x972 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x692 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1089 (* 108 (* s x)) (* (- 108) (* x x)) ?x843 (* 12 (* s s s00)) ?x1331 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1335 (* 216 (* x x00)) ?x1336)))
 (let (($x1338 (= ?x1337 0)))
 (let ((?x837 (* r00 r00 x00)))
 (let ((?x850 (* (- 36) ?x837)))
 (let ((?x766 (* 6 ?x765)))
 (let ((?x656 (* (- 2) ?x628)))
 (let ((?x876 (* (- 15) ?x551)))
 (let ((?x505 (* s s)))
 (let ((?x529 (* 3 ?x505)))
 (let ((?x511 (* (- 54) ?x482)))
 (let ((?x524 (* 24 ?x386)))
 (let ((?x1039 (+ ?x143 ?x947 (* (- 24) ?x303) (* 24 ?x359) ?x524 ?x511 ?x529 (* 54 (* r x)) (* 36 (* r x r00)) ?x824 ?x876 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x960 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x656 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x766 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x850 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1044 (= ?x1039 0)))
 (let ((?x608 (* 6 ?x607)))
 (let ((?x564 (* (- 4) ?x551)))
 (let ((?x506 (* 2 ?x505)))
 (let ((?x496 (* (- 18) ?x482)))
 (let ((?x501 (* 9 ?x386)))
 (let ((?x338 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x705 (+ ?x47 ?x338 (* (- 9) ?x303) (* 9 ?x359) ?x501 ?x496 ?x506 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x525) ?x564 (* 18 (* x r00)) ?x608 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x712 (= ?x705 0)))
 (let ((?x44 (* 3 s00)))
 (let ((?x465 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x460 ?x461 ?x462 ?x463 ?x360 ?x464 ?x430)))
 (let (($x466 (= ?x465 0)))
 (let (($x292 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x259)) 0)))
 (let (($x1569 (and $x292 $x466 $x712 $x1044 $x1338 (not (= ?x1208 0)))))
 (let ((?x443 (* (- 12) ?x429)))
 (let ((?x59 (* 6 x00)))
 (let ((?x408 (* (- 6) x)))
 (let ((?x650 (* r00 s00)))
 (let ((?x659 (* 6 ?x650)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1057 (+ (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x338 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x659 ?x408 ?x59 ?x443)))
 (let ((?x1202 (* 108 ?x1306)))
 (let ((?x137 (* 9 s00)))
 (let ((?x899 (* 51 ?x551)))
 (let ((?x730 (* 16 ?x1144)))
 (let ((?x924 (* (- 108) ?x765)))
 (let ((?x796 (* (- 432) ?x842)))
 (let ((?x942 (* 108 ?x482)))
 (let ((?x1219 (+ (* 216 (* r00 s00 x00)) ?x942 (* (- 54) ?x650) (* 15 ?x505) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x796 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x924 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x730 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x899 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1202)))
 (let ((?x838 (+ (* (- 24) (* s r)) ?x511 (* 36 (* r00 x r)) (* 24 ?x650) ?x529 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x766 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x850 ?x876 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x947 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x985 (+ (* (- 9) (* s r)) ?x496 (* 9 ?x650) ?x506 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x564 (* 18 (* r00 x)) ?x338 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x681 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x338 ?x47 ?x48 (* (- 4) (* s00 r)) ?x659 ?x408 ?x59 ?x443)))
 (let (($x863 (= (+ s00 (* (- 1) s) (* 3 (* r r)) (* (- 3) ?x259)) 0)))
 (let (($x734 (and $x863 (= ?x681 0) (= ?x985 0) (= ?x838 0) (= ?x1219 0) (not (= ?x1057 (- 6))))))
 (rewrite (= $x734 $x1569)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x235 (exists ((r Int) (s Int) (x Int) )(! (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x59 (* 6 x00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x217 (+ (* (- 2) (+ r 1) (+ s (* 6 r) 3)) (* 12 (+ r 1) r00 r00))))
 (let ((?x222 (+ (- (- ?x217 (* 3 (+ r 1))) ?x44) (* 3 (+ s (* 6 r) 3)) ?x48)))
 (let ((?x228 (- (+ (- ?x222 (* 4 (+ r 1) s00)) ?x54) (* 6 (- x s)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- (+ ?x228 ?x59) ?x61) 0))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1098 (lambda ((r Int) (s Int) (x Int) )(let ((?x429 (* r00 r00 r00)))
 (let ((?x443 (* (- 12) ?x429)))
 (let ((?x59 (* 6 x00)))
 (let ((?x408 (* (- 6) x)))
 (let ((?x650 (* r00 s00)))
 (let ((?x659 (* 6 ?x650)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x338 (* (- 3) s00)))
 (let ((?x1057 (+ (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x338 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x659 ?x408 ?x59 ?x443)))
 (let ((?x1306 (* x00 x00)))
 (let ((?x1202 (* 108 ?x1306)))
 (let ((?x137 (* 9 s00)))
 (let ((?x551 (* s00 s00)))
 (let ((?x899 (* 51 ?x551)))
 (let ((?x1144 (* s00 s00 s00)))
 (let ((?x730 (* 16 ?x1144)))
 (let ((?x765 (* s00 x00)))
 (let ((?x924 (* (- 108) ?x765)))
 (let ((?x842 (* r00 r00 r00 x00)))
 (let ((?x796 (* (- 432) ?x842)))
 (let ((?x482 (* r00 x00)))
 (let ((?x942 (* 108 ?x482)))
 (let ((?x1219 (+ (* 216 (* r00 s00 x00)) ?x942 (* (- 54) ?x650) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x796 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x924 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x730 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x899 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1202)))
 (let ((?x947 (* (- 9) s00)))
 (let ((?x876 (* (- 15) ?x551)))
 (let ((?x837 (* r00 r00 x00)))
 (let ((?x850 (* (- 36) ?x837)))
 (let ((?x766 (* 6 ?x765)))
 (let ((?x505 (* s s)))
 (let ((?x529 (* 3 ?x505)))
 (let ((?x511 (* (- 54) ?x482)))
 (let ((?x838 (+ (* (- 24) (* s r)) ?x511 (* 36 (* r00 x r)) (* 24 ?x650) ?x529 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x766 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x850 ?x876 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x947 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x564 (* (- 4) ?x551)))
 (let ((?x506 (* 2 ?x505)))
 (let ((?x496 (* (- 18) ?x482)))
 (let ((?x985 (+ (* (- 9) (* s r)) ?x496 (* 9 ?x650) ?x506 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x564 (* 18 (* r00 x)) ?x338 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x681 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x338 ?x47 ?x48 (* (- 4) (* s00 r)) ?x659 ?x408 ?x59 ?x443)))
 (let ((?x259 (* r00 r00)))
 (let ((?x735 (* (- 3) ?x259)))
 (let (($x734 (and (= (+ s00 (* (- 1) s) (* 3 (* r r)) ?x735) 0) (= ?x681 0) (= ?x985 0) (= ?x838 0) (= ?x1219 0) (not (= ?x1057 (- 6))))))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x217 (+ (* (- 2) (+ r 1) (+ s (* 6 r) 3)) (* 12 (+ r 1) r00 r00))))
 (let ((?x222 (+ (- (- ?x217 (* 3 (+ r 1))) ?x44) (* 3 (+ s (* 6 r) 3)) ?x48)))
 (let ((?x228 (- (+ (- ?x222 (* 4 (+ r 1) s00)) ?x54) (* 6 (- x s)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x234 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- (+ ?x228 ?x59) ?x61) 0))))))
 (rewrite (= $x234 $x734))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x236 (asserted $x235)))
 (let ((@x516 (mp (mp @x236 (quant-intro (proof-bind ?x1098) (= $x235 $x1092)) $x1092) (rewrite (= $x1092 $x1092)) $x1092)))
 (let ((@x741 (mp~ (mp @x516 (quant-intro (proof-bind ?x1250) (= $x1092 $x1213)) $x1213) (sk (~ $x1213 $x974)) $x974)))
 (let ((@x274 (mp @x741 (rewrite (= $x974 $x281)) $x281)))
 (let ((@x568 (and-elim @x274 $x244)))
 (let (($x685 (not (<= ?x694 0))))
 (let (($x736 (>= ?x694 0)))
 (let (($x1171 (>= ?x1299 0)))
 (let (($x1006 (>= ?x1513 0)))
 (let ((@x275 (and-elim @x274 $x1372)))
 (let ((@x1080 ((_ th-lemma arith farkas 4 -1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1372) $x1006)) @x275 $x1006) (hypothesis (not $x736)) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x244) $x1171)) @x568 $x1171) false)))
 (let ((@x723 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x280 $x685 (not $x736))) (and-elim @x274 $x273) (or $x685 (not $x736)))))
 (let (($x1607 (<= ?x1513 0)))
 ((_ th-lemma arith farkas 4 -1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1372) $x1607)) @x275 $x1607) (unit-resolution @x723 (lemma @x1080 $x736) $x685) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x244) $x1501)) @x568 $x1501) false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        7
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-num-rows            6
 :arith-pivots              2
 :arith-row-summations      3
 :arith-tableau-max-columns 93
 :arith-tableau-max-rows    6
 :conflicts                 2
 :decisions                 1
 :del-clause                17
 :max-memory                19.84
 :memory                    19.24
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                627076
 :num-checks                1
 :propagations              12
 :rlimit-count              5938
 :time                      0.01
 :total-time                0.02)
