unsat
((set-logic NIA)
(declare-fun q!2 () Int)
(declare-fun r!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x79 (* y00 q00)))
 (let ((?x273 (+ r00 ?x79 (* (- 1) r!1) (* (- 1) (* y00 q!2)))))
 (let (($x260 (<= ?x273 0)))
 (let (($x1097 (= ?x273 0)))
 (let ((?x1222 (* y00 y00 y00 y00 y00 q00 r!1 r!1 q!2 q!2 q!2)))
 (let ((?x1203 (* 3 (* y00 y00 y00 y00 r00 r!1 r!1 q!2 q!2 q!2))))
 (let ((?x1191 (* (- 9) (* y00 y00 y00 y00 y00 y00 q00 r!1 q!2 q!2))))
 (let ((?x1198 (* y00 y00 y00 y00 y00 y00 q00 r!1 q!2 q!2 q!2)))
 (let ((?x1165 (* 3 (* y00 y00 y00 y00 y00 y00 y00 q00 q!2 q!2))))
 (let ((?x1170 (* y00 y00 y00 y00 y00 y00 y00 q00 q!2 q!2 q!2)))
 (let ((?x74 (* (- 1) y00)))
 (let ((?x1091 (+ ?x74 r!1)))
 (let ((?x1002 (+ 1 q!2)))
 (let ((?x1220 (* (- 1) (* y00 y00 y00 r00 r!1 r!1 r!1 q!2 q!2 q!2))))
 (let ((?x1061 (* 9 (* y00 y00 y00 y00 y00 q00 r!1 r!1 q!2 q!2))))
 (let ((?x1036 (* y00 y00 y00 y00 q00 r!1 r!1 r!1 q!2 q!2 q!2)))
 (let ((?x1040 (* (- 3) (* y00 y00 y00 y00 q00 r!1 r!1 r!1 q!2 q!2))))
 (let ((?x994 (* y00 y00 r00)))
 (let ((?x1467 (* (- 1) ?x994)))
 (let ((?x830 (* y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x501 (* y00 y00 y00 y00 y00 y00 r00)))
 (let ((?x1172 (* (- 3) (* y00 y00 y00 y00 y00 r00 r!1 q!2 q!2 q!2))))
 (let ((?x368 (* y00 y00 y00 r00)))
 (let ((?x277 (* y00 y00 y00 q00)))
 (let ((?x1499 (* (- 1) ?x277)))
 (let ((?x250 (* y00 y00 y00 y00 q00)))
 (let ((?x1154 (+ ?x250 (* 3 (* y00 y00 y00 y00 y00 y00 r00 q!2 q!2)) (* 3 (* y00 y00 y00 y00 y00 q00 r!1 r!1)) ?x1499 (* y00 y00 y00 y00 y00 y00 r00 q!2 q!2 q!2) ?x368 ?x1172 (* (- 9) (* y00 y00 y00 y00 y00 y00 q00 r!1 q!2)) ?x501 ?x830 ?x1467 (* (- 1) (* y00 y00 y00 y00 q!2 q!2)) (* (- 9) (* y00 y00 y00 y00 y00 r00 r!1 q!2)) (* 3 (* y00 y00 y00 y00 y00 y00 r00 q!2)) (* (- 1) (* y00 y00 y00 y00 q00 r!1 r!1 r!1)) (* (- 3) (* y00 y00 y00 y00 q00 r!1 r!1 r!1 q!2)) ?x1040 (* (- 1) ?x1036) (* (- 1) (* y00 y00 y00 r00 r!1 r!1 r!1)) (* 9 (* y00 y00 y00 y00 y00 q00 r!1 r!1 q!2)) (* (- 3) (* y00 y00 y00 r00 r!1 r!1 r!1 q!2)) (* (- 3) (* y00 y00 y00 r00 r!1 r!1 r!1 q!2 q!2)) ?x1061 (* y00 y00 y00 y00 ?x1002 ?x1002 ?x1002 ?x1002 ?x1091 ?x1091 ?x1091) ?x1220 (* y00 y00 y00 q!2) (* y00 y00 y00 ?x1002 ?x1002 ?x1002 ?x1091 ?x1091 ?x1091 ?x1091) (* y00 y00 y00 r00 q!2) (* (- 1) (* y00 y00 y00 r!1)) (* (- 1) (* y00 y00 y00 r!1 q!2)) (* (- 1) (* y00 y00 y00 y00 q!2)) (* y00 y00 y00 y00 q00 q!2) (* y00 y00 r!1) ?x1170 ?x1165 (* 3 (* y00 y00 y00 y00 y00 y00 y00 q00 q!2)) (* (- 9) (* y00 y00 y00 y00 y00 r00 r!1 q!2 q!2)) (* (- 3) (* y00 y00 y00 y00 y00 r00 r!1)) (* (- 3) ?x1198) ?x1191 (* (- 3) (* y00 y00 y00 y00 y00 y00 q00 r!1)) ?x1203 (* 9 (* y00 y00 y00 y00 r00 r!1 r!1 q!2 q!2)) (* 9 (* y00 y00 y00 y00 r00 r!1 r!1 q!2)) (* 3 (* y00 y00 y00 y00 r00 r!1 r!1)) (* 3 ?x1222))))
 (let (($x1150 (= ?x1154 0)))
 (let (($x1084 (not $x1150)))
 (let ((?x985 (+ y00 (* (- 1) y!0))))
 (let (($x986 (= ?x985 0)))
 (let (($x359 (and $x986 $x1097 $x1084)))
 (let ((?x913 (* q!2 q!2 q!2 y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x910 (* 3 (* q!2 q!2 y00 y00 y00 y00 y00 y00 y00 q00))))
 (let ((?x906 (* (- 3) (* q!2 q!2 q!2 r!1 y00 y00 y00 y00 y00 r00))))
 (let ((?x1195 (* q!2 q!2 q!2 r!1 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x1085 (* (- 9) (* q!2 q!2 r!1 y00 y00 y00 y00 y00 y00 q00))))
 (let ((?x1313 (* 3 (* q!2 q!2 q!2 r!1 r!1 y00 y00 y00 y00 r00))))
 (let ((?x938 (* q!2 q!2 q!2 r!1 r!1 y00 y00 y00 y00 y00 q00)))
 (let ((?x872 (* (- 1) (* q!2 q!2 q!2 r!1 r!1 r!1 y00 y00 y00 r00))))
 (let ((?x278 (+ r!1 ?x74)))
 (let ((?x865 (* 9 (* q!2 q!2 r!1 r!1 y00 y00 y00 y00 y00 q00))))
 (let ((?x790 (* q!2 q!2 q!2 r!1 r!1 r!1 y00 y00 y00 y00 q00)))
 (let ((?x788 (* (- 3) (* q!2 q!2 r!1 r!1 r!1 y00 y00 y00 y00 q00))))
 (let ((?x915 (+ (* y00 y00 y00 ?x1002 ?x1002 ?x1002 ?x278 ?x278 ?x278 ?x278) (* q!2 y00 y00 y00) (* q!2 y00 y00 y00 y00 q00) ?x250 ?x1499 (* (- 1) (* q!2 y00 y00 y00 y00)) (* (- 1) (* q!2 r!1 y00 y00 y00)) (* (- 1) (* r!1 y00 y00 y00)) ?x368 (* q!2 y00 y00 y00 r00) (* (- 1) (* q!2 q!2 y00 y00 y00 y00)) (* (- 9) (* q!2 r!1 y00 y00 y00 y00 y00 r00)) ?x501 (* 3 (* q!2 y00 y00 y00 y00 y00 y00 r00)) (* 3 (* q!2 q!2 y00 y00 y00 y00 y00 y00 r00)) (* (- 1) (* r!1 r!1 r!1 y00 y00 y00 y00 q00)) (* (- 3) (* q!2 r!1 r!1 r!1 y00 y00 y00 y00 q00)) ?x788 (* (- 1) ?x790) (* (- 1) (* r!1 r!1 r!1 y00 y00 y00 r00)) (* 3 (* r!1 r!1 y00 y00 y00 y00 y00 q00)) (* (- 3) (* q!2 r!1 r!1 r!1 y00 y00 y00 r00)) (* 9 (* q!2 r!1 r!1 y00 y00 y00 y00 y00 q00)) (* (- 3) (* q!2 q!2 r!1 r!1 r!1 y00 y00 y00 r00)) ?x865 (* y00 y00 y00 y00 ?x1002 ?x1002 ?x1002 ?x1002 ?x278 ?x278 ?x278) ?x872 (* 3 ?x938) (* 3 (* r!1 r!1 y00 y00 y00 y00 r00)) (* 9 (* q!2 r!1 r!1 y00 y00 y00 y00 r00)) (* 9 (* q!2 q!2 r!1 r!1 y00 y00 y00 y00 r00)) ?x1313 (* (- 3) (* r!1 y00 y00 y00 y00 y00 y00 q00)) (* (- 9) (* q!2 r!1 y00 y00 y00 y00 y00 y00 q00)) ?x1085 (* (- 3) ?x1195) (* (- 3) (* r!1 y00 y00 y00 y00 y00 r00)) (* (- 9) (* q!2 q!2 r!1 y00 y00 y00 y00 y00 r00)) ?x906 ?x830 (* 3 (* q!2 y00 y00 y00 y00 y00 y00 y00 q00)) ?x910 ?x913 (* q!2 q!2 q!2 y00 y00 y00 y00 y00 y00 r00) (* r!1 y00 y00) ?x1467)))
 (let (($x962 (and (= (+ y!0 ?x74) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x79)) 0) (not (= ?x915 0)))))
 (let (($x1459 (exists ((q Int) (r Int) (y Int) )(! (let ((?x994 (* y00 y00 r00)))
 (let ((?x1467 (* (- 1) ?x994)))
 (let ((?x956 (* r y00 y00)))
 (let ((?x876 (* q q q y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x854 (* q q y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x830 (* y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x1470 (* (- 3) (* q q q r y00 y00 y00 y00 y00 r00))))
 (let ((?x685 (* q q q r y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x665 (* q q r y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x1477 (* 3 (* q q q r r y00 y00 y00 y00 r00))))
 (let ((?x588 (* q q q r r y00 y00 y00 y00 y00 q00)))
 (let ((?x74 (* (- 1) y00)))
 (let ((?x82 (+ r ?x74)))
 (let ((?x76 (+ 1 q)))
 (let ((?x577 (* y00 y00 y00 y00 ?x76 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x566 (* q q r r y00 y00 y00 y00 y00 q00)))
 (let ((?x535 (* q q q r r r y00 y00 y00 y00 q00)))
 (let ((?x526 (* q q r r r y00 y00 y00 y00 q00)))
 (let ((?x501 (* y00 y00 y00 y00 y00 y00 r00)))
 (let ((?x371 (* q y00 y00 y00 r00)))
 (let ((?x368 (* y00 y00 y00 r00)))
 (let ((?x277 (* y00 y00 y00 q00)))
 (let ((?x1499 (* (- 1) ?x277)))
 (let ((?x250 (* y00 y00 y00 y00 q00)))
 (let ((?x247 (* q y00 y00 y00 y00 q00)))
 (let ((?x237 (* q y00 y00 y00)))
 (let ((?x175 (* y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x1466 (+ ?x175 ?x237 ?x247 ?x250 ?x1499 (* (- 1) (* q y00 y00 y00 y00)) (* (- 1) (* q r y00 y00 y00)) (* (- 1) (* r y00 y00 y00)) ?x368 ?x371 (* (- 1) (* q q y00 y00 y00 y00)) (* (- 9) (* q r y00 y00 y00 y00 y00 r00)) ?x501 (* 3 (* q y00 y00 y00 y00 y00 y00 r00)) (* 3 (* q q y00 y00 y00 y00 y00 y00 r00)) (* (- 1) (* r r r y00 y00 y00 y00 q00)) (* (- 3) (* q r r r y00 y00 y00 y00 q00)) (* (- 3) ?x526) (* (- 1) ?x535) (* (- 1) (* r r r y00 y00 y00 r00)) (* 3 (* r r y00 y00 y00 y00 y00 q00)) (* (- 3) (* q r r r y00 y00 y00 r00)) (* 9 (* q r r y00 y00 y00 y00 y00 q00)) (* (- 3) (* q q r r r y00 y00 y00 r00)) (* 9 ?x566) ?x577 (* (- 1) (* q q q r r r y00 y00 y00 r00)) (* 3 ?x588) (* 3 (* r r y00 y00 y00 y00 r00)) (* 9 (* q r r y00 y00 y00 y00 r00)) (* 9 (* q q r r y00 y00 y00 y00 r00)) ?x1477 (* (- 3) (* r y00 y00 y00 y00 y00 y00 q00)) (* (- 9) (* q r y00 y00 y00 y00 y00 y00 q00)) (* (- 9) ?x665) (* (- 3) ?x685) (* (- 3) (* r y00 y00 y00 y00 y00 r00)) (* (- 9) (* q q r y00 y00 y00 y00 y00 r00)) ?x1470 ?x830 (* 3 (* q y00 y00 y00 y00 y00 y00 y00 q00)) (* 3 ?x854) ?x876 (* q q q y00 y00 y00 y00 y00 y00 r00) ?x956 ?x1467)))
 (let (($x108 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x85 (= (+ y ?x74) 0)))
 (and $x85 $x108 (not (= ?x1466 0))))))))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x99 (exists ((q Int) (r Int) (y Int) )(! (let ((?x74 (* (- 1) y00)))
 (let ((?x82 (+ r ?x74)))
 (let ((?x76 (+ 1 q)))
 (let ((?x577 (* y00 y00 y00 y00 ?x76 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x61 (* r00 y00 y00)))
 (let ((?x529 (* q00 y00 y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x441 (* y00 y00 y00 y00 ?x76 ?x76)))
 (let ((?x49 (* q00 y00 y00 y00)))
 (let ((?x179 (* y00 y00 y00 ?x76 ?x82)))
 (let ((?x123 (* r00 y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x127 (+ ?x123 (* (- 1) (* y00 y00 y00 ?x76)) (* (- 1) (* y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)) ?x179 ?x49 (* (- 1) (* q00 y00 y00 y00 y00 ?x76)) (* (- 1) (* r00 y00 y00 y00 ?x76)) ?x441 ?x529 (* (- 1) (* y00 y00 ?x82)) ?x61 (* (- 1) ?x577))))
 (let (($x159 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x159 (not (= ?x127 0))))))))))))))) :qid k!29))
 ))
 (let ((?x1457 (lambda ((q Int) (r Int) (y Int) )(let ((?x994 (* y00 y00 r00)))
 (let ((?x1467 (* (- 1) ?x994)))
 (let ((?x956 (* r y00 y00)))
 (let ((?x876 (* q q q y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x854 (* q q y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x830 (* y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x1470 (* (- 3) (* q q q r y00 y00 y00 y00 y00 r00))))
 (let ((?x685 (* q q q r y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x665 (* q q r y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x1477 (* 3 (* q q q r r y00 y00 y00 y00 r00))))
 (let ((?x588 (* q q q r r y00 y00 y00 y00 y00 q00)))
 (let ((?x74 (* (- 1) y00)))
 (let ((?x82 (+ r ?x74)))
 (let ((?x76 (+ 1 q)))
 (let ((?x577 (* y00 y00 y00 y00 ?x76 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x566 (* q q r r y00 y00 y00 y00 y00 q00)))
 (let ((?x535 (* q q q r r r y00 y00 y00 y00 q00)))
 (let ((?x526 (* q q r r r y00 y00 y00 y00 q00)))
 (let ((?x501 (* y00 y00 y00 y00 y00 y00 r00)))
 (let ((?x371 (* q y00 y00 y00 r00)))
 (let ((?x368 (* y00 y00 y00 r00)))
 (let ((?x277 (* y00 y00 y00 q00)))
 (let ((?x1499 (* (- 1) ?x277)))
 (let ((?x250 (* y00 y00 y00 y00 q00)))
 (let ((?x247 (* q y00 y00 y00 y00 q00)))
 (let ((?x237 (* q y00 y00 y00)))
 (let ((?x175 (* y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x1466 (+ ?x175 ?x237 ?x247 ?x250 ?x1499 (* (- 1) (* q y00 y00 y00 y00)) (* (- 1) (* q r y00 y00 y00)) (* (- 1) (* r y00 y00 y00)) ?x368 ?x371 (* (- 1) (* q q y00 y00 y00 y00)) (* (- 9) (* q r y00 y00 y00 y00 y00 r00)) ?x501 (* 3 (* q y00 y00 y00 y00 y00 y00 r00)) (* 3 (* q q y00 y00 y00 y00 y00 y00 r00)) (* (- 1) (* r r r y00 y00 y00 y00 q00)) (* (- 3) (* q r r r y00 y00 y00 y00 q00)) (* (- 3) ?x526) (* (- 1) ?x535) (* (- 1) (* r r r y00 y00 y00 r00)) (* 3 (* r r y00 y00 y00 y00 y00 q00)) (* (- 3) (* q r r r y00 y00 y00 r00)) (* 9 (* q r r y00 y00 y00 y00 y00 q00)) (* (- 3) (* q q r r r y00 y00 y00 r00)) (* 9 ?x566) ?x577 (* (- 1) (* q q q r r r y00 y00 y00 r00)) (* 3 ?x588) (* 3 (* r r y00 y00 y00 y00 r00)) (* 9 (* q r r y00 y00 y00 y00 r00)) (* 9 (* q q r r y00 y00 y00 y00 r00)) ?x1477 (* (- 3) (* r y00 y00 y00 y00 y00 y00 q00)) (* (- 9) (* q r y00 y00 y00 y00 y00 y00 q00)) (* (- 9) ?x665) (* (- 3) ?x685) (* (- 3) (* r y00 y00 y00 y00 y00 r00)) (* (- 9) (* q q r y00 y00 y00 y00 y00 r00)) ?x1470 ?x830 (* 3 (* q y00 y00 y00 y00 y00 y00 y00 q00)) (* 3 ?x854) ?x876 (* q q q y00 y00 y00 y00 y00 y00 r00) ?x956 ?x1467)))
 (let (($x108 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x85 (= (+ y ?x74) 0)))
 (let (($x424 (and $x85 $x108 (not (= ?x1466 0)))))
 (let ((?x61 (* r00 y00 y00)))
 (let ((?x529 (* q00 y00 y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x441 (* y00 y00 y00 y00 ?x76 ?x76)))
 (let ((?x49 (* q00 y00 y00 y00)))
 (let ((?x179 (* y00 y00 y00 ?x76 ?x82)))
 (let ((?x123 (* r00 y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x127 (+ ?x123 (* (- 1) (* y00 y00 y00 ?x76)) (* (- 1) ?x175) ?x179 ?x49 (* (- 1) (* q00 y00 y00 y00 y00 ?x76)) (* (- 1) (* r00 y00 y00 y00 ?x76)) ?x441 ?x529 (* (- 1) (* y00 y00 ?x82)) ?x61 (* (- 1) ?x577))))
 (let (($x159 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x129 (and (= (+ y00 (* (- 1) y)) 0) $x159 (not (= ?x127 0)))))
 (rewrite (= $x129 $x424)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x191 (exists ((q Int) (r Int) (y Int) )(! (let ((?x74 (* (- 1) y00)))
 (let ((?x82 (+ r ?x74)))
 (let ((?x76 (+ 1 q)))
 (let ((?x577 (* y00 y00 y00 y00 ?x76 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x549 (* y00 y00 ?x82)))
 (let ((?x529 (* q00 y00 y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x615 (* r00 y00 y00 y00 ?x76)))
 (let ((?x236 (* q00 y00 y00 y00 y00 ?x76)))
 (let ((?x175 (* y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x155 (* y00 y00 y00 ?x76)))
 (let ((?x456 (+ (* (- 1) (* r00 y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)) ?x155 ?x175 (* (- 1) (* y00 y00 y00 ?x76 ?x82)) (* (- 1) (* q00 y00 y00 y00)) ?x236 ?x615 (* (- 1) (* y00 y00 y00 y00 ?x76 ?x76)) (* (- 1) ?x529) ?x549 (* (- 1) (* r00 y00 y00)) ?x577)))
 (let (($x159 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x74 y) 0) $x159 (not (= ?x456 0))))))))))))))) :qid k!29))
 ))
 (let ((?x169 (lambda ((q Int) (r Int) (y Int) )(let ((?x74 (* (- 1) y00)))
 (let ((?x82 (+ r ?x74)))
 (let ((?x76 (+ 1 q)))
 (let ((?x577 (* y00 y00 y00 y00 ?x76 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x61 (* r00 y00 y00)))
 (let ((?x529 (* q00 y00 y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x441 (* y00 y00 y00 y00 ?x76 ?x76)))
 (let ((?x49 (* q00 y00 y00 y00)))
 (let ((?x179 (* y00 y00 y00 ?x76 ?x82)))
 (let ((?x123 (* r00 y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x127 (+ ?x123 (* (- 1) (* y00 y00 y00 ?x76)) (* (- 1) (* y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)) ?x179 ?x49 (* (- 1) (* q00 y00 y00 y00 y00 ?x76)) (* (- 1) (* r00 y00 y00 y00 ?x76)) ?x441 ?x529 (* (- 1) (* y00 y00 ?x82)) ?x61 (* (- 1) ?x577))))
 (let (($x159 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x129 (and (= (+ y00 (* (- 1) y)) 0) $x159 (not (= ?x127 0)))))
 (let ((?x549 (* y00 y00 ?x82)))
 (let ((?x615 (* r00 y00 y00 y00 ?x76)))
 (let ((?x236 (* q00 y00 y00 y00 y00 ?x76)))
 (let ((?x175 (* y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x155 (* y00 y00 y00 ?x76)))
 (let ((?x456 (+ (* (- 1) ?x123) ?x155 ?x175 (* (- 1) ?x179) (* (- 1) ?x49) ?x236 ?x615 (* (- 1) ?x441) (* (- 1) ?x529) ?x549 (* (- 1) ?x61) ?x577)))
 (let (($x151 (and (= (+ ?x74 y) 0) $x159 (not (= ?x456 0)))))
 (rewrite (= $x151 $x129)))))))))))))))))))))))
 ))
 (let (($x69 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x61 (* r00 y00 y00)))
 (let ((?x49 (* q00 y00 y00 y00)))
 (let ((?x47 (+ (* (- 1) ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 r00 y00 y00 y00) (* ?x42 y00 y00 y00) (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 y00 y00 y00))))
 (let ((?x54 (+ (- (- ?x47 (* ?x42 ?x43 y00 y00 y00)) ?x49) (* ?x42 q00 y00 y00 y00 y00) (* ?x42 r00 y00 y00 y00))))
 (let ((?x58 (- (- ?x54 (* ?x42 ?x42 y00 y00 y00 y00)) (* ?x42 ?x42 ?x42 q00 ?x43 ?x43 ?x43 y00 y00 y00 y00))))
 (let ((?x64 (+ (- (+ ?x58 (* ?x43 y00 y00)) ?x61) (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00 y00 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x64 0)))))))))))) :qid k!29))
 ))
 (let ((?x173 (lambda ((q Int) (r Int) (y Int) )(let ((?x74 (* (- 1) y00)))
 (let ((?x82 (+ r ?x74)))
 (let ((?x76 (+ 1 q)))
 (let ((?x577 (* y00 y00 y00 y00 ?x76 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x549 (* y00 y00 ?x82)))
 (let ((?x529 (* q00 y00 y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x615 (* r00 y00 y00 y00 ?x76)))
 (let ((?x236 (* q00 y00 y00 y00 y00 ?x76)))
 (let ((?x175 (* y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x155 (* y00 y00 y00 ?x76)))
 (let ((?x456 (+ (* (- 1) (* r00 y00 y00 y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)) ?x155 ?x175 (* (- 1) (* y00 y00 y00 ?x76 ?x82)) (* (- 1) (* q00 y00 y00 y00)) ?x236 ?x615 (* (- 1) (* y00 y00 y00 y00 ?x76 ?x76)) (* (- 1) ?x529) ?x549 (* (- 1) (* r00 y00 y00)) ?x577)))
 (let (($x159 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x151 (and (= (+ ?x74 y) 0) $x159 (not (= ?x456 0)))))
 (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x61 (* r00 y00 y00)))
 (let ((?x49 (* q00 y00 y00 y00)))
 (let ((?x47 (+ (* (- 1) ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 r00 y00 y00 y00) (* ?x42 y00 y00 y00) (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 y00 y00 y00))))
 (let ((?x54 (+ (- (- ?x47 (* ?x42 ?x43 y00 y00 y00)) ?x49) (* ?x42 q00 y00 y00 y00 y00) (* ?x42 r00 y00 y00 y00))))
 (let ((?x58 (- (- ?x54 (* ?x42 ?x42 y00 y00 y00 y00)) (* ?x42 ?x42 ?x42 q00 ?x43 ?x43 ?x43 y00 y00 y00 y00))))
 (let ((?x64 (+ (- (+ ?x58 (* ?x43 y00 y00)) ?x61) (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00 y00 y00))))
 (let (($x68 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x64 0))))))
 (rewrite (= $x68 $x151)))))))))))))))))))))))))
 ))
 (let ((@x70 (asserted $x69)))
 (let ((@x571 (mp (mp @x70 (quant-intro (proof-bind ?x173) (= $x69 $x191)) $x191) (rewrite (= $x191 $x191)) $x191)))
 (let ((@x1224 (mp (mp @x571 (quant-intro (proof-bind ?x169) (= $x191 $x99)) $x99) (quant-intro (proof-bind ?x1457) (= $x99 $x1459)) $x1459)))
 (let ((@x1139 (mp (mp~ @x1224 (sk (~ $x1459 $x962)) $x962) (rewrite (= $x962 $x359)) $x359)))
 (let ((@x992 (and-elim @x1139 $x1097)))
 (let ((@x1076 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1097) $x260)) @x992 $x260)))
 (let (($x1049 (>= ?x273 0)))
 (let ((@x1125 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1097) $x1049)) @x992 $x1049)))
 (let (($x1042 (<= ?x985 0)))
 (let ((@x1138 (and-elim @x1139 $x986)))
 (let ((@x1092 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x986) $x1042)) @x1138 $x1042)))
 (let (($x1044 (>= ?x985 0)))
 (let ((@x1073 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x986) $x1044)) @x1138 $x1044)))
 (let (($x947 (not (<= ?x1154 0))))
 (let (($x1051 (>= ?x1154 0)))
 (let ((@x269 ((_ th-lemma arith) (hypothesis (not $x1051)) @x1073 @x1092 @x1073 @x1092 @x1125 @x1076 false)))
 (let ((@x258 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1150 $x947 (not $x1051))) (and-elim @x1139 $x1084) (or $x947 (not $x1051)))))
 ((_ th-lemma arith) (unit-resolution @x258 (lemma @x269 $x1051) $x947) @x1073 @x1092 @x1073 @x1092 @x1125 @x1076 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        6
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-grobner             2
 :arith-max-min             438
 :arith-nonlinear-bounds    2
 :arith-nonlinear-horner    10
 :arith-num-rows            5
 :arith-offset-eqs          1
 :arith-pivots              3
 :arith-row-summations      1
 :arith-tableau-max-columns 66
 :arith-tableau-max-rows    5
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                3.77
 :memory                    3.24
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1318566
 :num-checks                1
 :propagations              6
 :rlimit-count              7065
 :time                      0.01
 :total-time                0.02)
