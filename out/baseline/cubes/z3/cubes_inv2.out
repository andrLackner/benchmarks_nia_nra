unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x144 (* (- 3) n!0)))
 (let ((?x392 (* n!0 n!0)))
 (let ((?x393 (* (- 3) ?x392)))
 (let ((?x91 (+ k!2 ?x393 ?x144)))
 (let (($x372 (<= ?x91 0)))
 (let (($x350 (= ?x91 0)))
 (let ((?x256 (* k!2 k!2)))
 (let ((?x121 (* m!1 m!1)))
 (let ((?x349 (+ ?x121 (* (- 32) k!2) (* (- 27) c!3) (* 2 (* k!2 m!1)) (* (- 9) (* c!3 n!0)) ?x256 (* (- 9) (* k!2 n!0)) (* 9 n!0) (* (- 5) m!1))))
 (let ((?x259 (* (- 2) n!0)))
 (let ((?x261 (* k!2 n!0)))
 (let ((?x262 (* (- 1) ?x261)))
 (let ((?x258 (* 3 c!3)))
 (let ((?x101 (+ k!2 ?x258 ?x262 ?x259)))
 (let (($x246 (= ?x101 0)))
 (let ((?x255 (* (- 9) n!0)))
 (let ((?x138 (* (- 1) ?x256)))
 (let ((?x245 (* c!3 n!0)))
 (let ((?x227 (* 9 ?x245)))
 (let ((?x130 (* 18 c!3)))
 (let ((?x244 (* 5 k!2)))
 (let ((?x215 (+ ?x244 ?x130 ?x227 ?x138 ?x255)))
 (let (($x169 (= ?x215 4)))
 (let ((?x328 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x354 (= ?x328 (- 6))))
 (let (($x401 (and $x354 $x169 $x246 $x350 (not (= ?x349 (- 13))))))
 (let ((?x425 (+ (* 27 c!3) (* 32 k!2) (* 5 m!1) ?x255 ?x138 (* 9 ?x261) ?x227 (* (- 2) (* k!2 m!1)) (* (- 1) ?x121))))
 (let (($x102 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x130 ?x244 ?x255 ?x138 ?x227) 4) (= (+ ?x258 k!2 ?x259 ?x262) 0) (= (+ k!2 ?x144 ?x393) 0) (not (= ?x425 13)))))
 (let (($x471 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x131 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x194 (* (- 1) ?x46)))
 (let ((?x193 (* (- 9) n)))
 (let ((?x378 (* 5 m)))
 (let ((?x466 (+ (* 27 c) (* 32 k) ?x378 ?x193 ?x194 (* 9 (* k n)) ?x131 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x234 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 0)))
 (let (($x114 (= (+ m (* (- 6) n)) 6)))
 (and $x114 (= (+ (* 18 c) (* 5 k) ?x193 ?x194 ?x131) 4) $x234 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0) (not (= ?x466 13))))))))))) :qid k!33))
 ))
 (let (($x403 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x193 (* (- 9) n)))
 (let ((?x378 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x226 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x378 ?x193 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x366 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x225 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x194 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x114 (= (+ m (* (- 6) n)) 6)))
 (and $x114 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x193 ?x194) 4) $x225 $x366 (not (= ?x226 13))))))))))))) :qid k!33))
 ))
 (let ((?x150 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x131 (* 9 (* c n))))
 (let ((?x46 (* k k)))
 (let ((?x194 (* (- 1) ?x46)))
 (let ((?x193 (* (- 9) n)))
 (let ((?x378 (* 5 m)))
 (let ((?x466 (+ (* 27 c) (* 32 k) ?x378 ?x193 ?x194 (* 9 (* k n)) ?x131 (* (- 2) (* k m)) (* (- 1) (* m m)))))
 (let (($x234 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 0)))
 (let (($x114 (= (+ m (* (- 6) n)) 6)))
 (let (($x286 (and $x114 (= (+ (* 18 c) (* 5 k) ?x193 ?x194 ?x131) 4) $x234 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 0) (not (= ?x466 13)))))
 (let ((?x37 (* 18 c)))
 (let ((?x226 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x378 ?x193 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x366 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x225 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 0)))
 (let (($x374 (= (+ ?x37 (* 9 (* n c)) (* 5 k) ?x193 ?x194) 4)))
 (let (($x218 (and $x114 $x374 $x225 $x366 (not (= ?x226 13)))))
 (rewrite (= $x218 $x286))))))))))))))))))
 ))
 (let (($x197 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x75 (* ?x69 ?x69)))
 (let ((?x45 (* 9 n)))
 (let ((?x408 (* (- 18) c)))
 (let ((?x186 (+ ?x408 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x75)))
 (let (($x366 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x363 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) 0)))
 (let (($x145 (= (+ ?x408 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x114 (= (+ m (* (- 6) n)) 6)))
 (and $x114 $x145 $x363 $x366 (not (= ?x186 (- 13))))))))))))) :qid k!33))
 ))
 (let ((?x260 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x193 (* (- 9) n)))
 (let ((?x378 (* 5 m)))
 (let ((?x37 (* 18 c)))
 (let ((?x226 (+ ?x37 (* 23 k) (* 9 (* (+ 1 n) (+ c k))) ?x378 ?x193 (* (- 1) (* (+ k m) (+ k m))))))
 (let (($x366 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x225 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x194 (* (- 1) ?x46)))
 (let ((?x41 (* 5 k)))
 (let (($x114 (= (+ m (* (- 6) n)) 6)))
 (let (($x218 (and $x114 (= (+ ?x37 (* 9 (* n c)) ?x41 ?x193 ?x194) 4) $x225 $x366 (not (= ?x226 13)))))
 (let ((?x69 (+ k m)))
 (let ((?x75 (* ?x69 ?x69)))
 (let ((?x45 (* 9 n)))
 (let ((?x408 (* (- 18) c)))
 (let ((?x186 (+ ?x408 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x75)))
 (let (($x363 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) 0)))
 (let (($x145 (= (+ ?x408 (* (- 9) (* n c)) (* (- 5) k) ?x45 ?x46) (- 4))))
 (let (($x357 (and $x114 $x145 $x363 $x366 (not (= ?x186 (- 13))))))
 (rewrite (= $x357 $x218))))))))))))))))))))))
 ))
 (let (($x81 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x75 (* ?x69 ?x69)))
 (let ((?x72 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x77 (= (+ (- ?x72 (* 5 ?x69)) (* 9 (+ n 1)) ?x75) 0)))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x45 (* 9 n)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) (or (not $x77)))))))))))) :qid k!33))
 ))
 (let ((?x87 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x75 (* ?x69 ?x69)))
 (let ((?x45 (* 9 n)))
 (let ((?x408 (* (- 18) c)))
 (let ((?x186 (+ ?x408 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) (* (- 5) m) ?x45 ?x75)))
 (let (($x366 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) 0)))
 (let (($x363 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) 0)))
 (let (($x145 (= (+ ?x408 (* (- 9) (* n c)) (* (- 5) k) ?x45 (* k k)) (- 4))))
 (let (($x114 (= (+ m (* (- 6) n)) 6)))
 (let (($x357 (and $x114 $x145 $x363 $x366 (not (= ?x186 (- 13))))))
 (let ((?x72 (- (- 4 (* 18 (+ c k))) (* 9 (+ c k) (+ n 1)))))
 (let (($x77 (= (+ (- ?x72 (* 5 ?x69)) (* 9 (+ n 1)) ?x75) 0)))
 (let (($x58 (= (+ (- (+ (* (- 3) c) (* k n)) k) (* 2 n)) 0)))
 (let ((?x46 (* k k)))
 (let ((?x41 (* 5 k)))
 (let ((?x47 (+ (- (- (- 4 (* 18 c)) (* 9 c n)) ?x41) ?x45 ?x46)))
 (let (($x80 (and (= (- (+ (- 6) m) (* 6 n)) 0) (= ?x47 0) $x58 (= (+ (- (* 3 n n) k) (* 3 n)) 0) (or (not $x77)))))
 (rewrite (= $x80 $x357))))))))))))))))))))
 ))
 (let ((@x82 (asserted $x81)))
 (let ((@x158 (mp (mp @x82 (quant-intro (proof-bind ?x87) (= $x81 $x197)) $x197) (rewrite (= $x197 $x197)) $x197)))
 (let ((@x167 (mp (mp @x158 (quant-intro (proof-bind ?x260) (= $x197 $x403)) $x403) (quant-intro (proof-bind ?x150) (= $x403 $x471)) $x471)))
 (let ((@x405 (mp (mp~ @x167 (sk (~ $x471 $x102)) $x102) (rewrite (= $x102 $x401)) $x401)))
 (let ((@x147 (and-elim @x405 $x350)))
 (let ((@x437 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x350) $x372)) @x147 $x372)))
 (let (($x202 (>= ?x91 0)))
 (let ((@x440 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x350) $x202)) @x147 $x202)))
 (let (($x361 (<= ?x215 4)))
 (let ((@x351 (and-elim @x405 $x169)))
 (let ((@x92 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x169) $x361)) @x351 $x361)))
 (let (($x362 (>= ?x215 4)))
 (let ((@x172 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x169) $x362)) @x351 $x362)))
 (let (($x342 (<= ?x101 0)))
 (let ((@x301 (and-elim @x405 $x246)))
 (let ((@x300 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x246) $x342)) @x301 $x342)))
 (let (($x335 (>= ?x101 0)))
 (let ((@x434 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x246) $x335)) @x301 $x335)))
 (let (($x399 (<= ?x328 (- 6))))
 (let ((@x409 (and-elim @x405 $x354)))
 (let ((@x406 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x354) $x399)) @x409 $x399)))
 (let (($x396 (>= ?x328 (- 6))))
 (let ((@x86 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x354) $x396)) @x409 $x396)))
 (let (($x868 (<= n!0 3)))
 (let ((@x1298 ((_ th-lemma arith) (hypothesis (not $x868)) @x440 @x437 @x172 @x92 @x440 @x437 @x440 @x437 @x434 @x300 false)))
 (let (($x645 (<= n!0 1)))
 (let (($x650 (not $x645)))
 (let (($x609 (<= n!0 0)))
 (let (($x612 (not $x609)))
 (let (($x175 (<= k!2 0)))
 (let (($x575 (not $x175)))
 (let (($x242 (>= m!1 0)))
 (let ((@x204 (hypothesis (not $x242))))
 (let ((@x502 ((_ th-lemma arith) @x86 @x406 @x204 @x86 @x406 @x204 @x440 @x437 @x86 @x406 @x434 @x300 @x440 @x437 @x434 @x300 @x172 @x92 @x440 @x437 false)))
 (let ((@x120 (lemma @x502 $x242)))
 (let (($x352 (>= ?x261 0)))
 (let (($x653 (<= n!0 2)))
 (let (($x660 (not $x653)))
 (let ((@x304 (hypothesis (not $x352))))
 (let ((@x655 (hypothesis $x653)))
 (let ((@x499 (hypothesis $x609)))
 (let (($x605 (<= n!0 (- 1))))
 (let (($x606 (not $x605)))
 (let (($x591 (<= k!2 2)))
 (let (($x598 (not $x591)))
 (let ((@x593 (hypothesis $x591)))
 (let (($x491 (<= k!2 1)))
 (let (($x586 (not $x491)))
 (let ((@x427 (hypothesis $x491)))
 (let (($x311 (>= k!2 0)))
 (let ((@x241 ((_ th-lemma arith) (hypothesis (not $x311)) @x440 @x86 @x120 @x86 @x406 @x440 @x437 @x440 @x437 @x86 @x406 @x172 @x92 @x434 @x300 @x440 @x437 @x434 @x300 @x86 @x406 false)))
 (let ((@x370 (lemma @x241 $x311)))
 (let (($x160 (= k!2 0)))
 (let (($x417 (not $x160)))
 (let ((@x123 ((_ th-lemma arith farkas 1 1 1) @x304 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x417 $x311)) (hypothesis $x160) $x311) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x417 $x175)) (hypothesis $x160) $x175) false)))
 (let ((@x583 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x160 $x575 (not $x311))) (unit-resolution (lemma @x123 (or $x417 $x352)) @x304 $x417) @x370 $x575)))
 (let ((@x584 ((_ th-lemma arith gomory-cut 1/3 1/3 1/3 1/3 1/3 1 1/3 1/4 1/4 1 1) @x583 @x427 @x583 @x427 @x172 @x434 @x583 @x86 @x120 @x583 @x427 (>= (+ (* 2 k!2) (* 6 c!3) (* 2 ?x245) ?x144) 1))))
 (let ((@x585 ((_ th-lemma arith farkas -1/3 -1/3 -1 2/3 2/9 2/9 2/9 2/9 2/9 2/9 1) @x583 @x427 @x584 @x300 @x583 @x427 @x583 @x427 @x92 @x427 @x304 false)))
 (let ((@x594 (unit-resolution (lemma @x585 (or $x586 $x352)) @x304 $x586)))
 (let (($x494 (>= ?x245 3)))
 (let ((@x597 ((_ th-lemma arith farkas -1 -1 6/5 2/5 8/15 -2/15 4/5 1) @x594 @x593 (hypothesis (not $x494)) @x594 @x593 @x172 @x300 @x304 false)))
 (let ((@x602 ((_ th-lemma arith farkas 3/5 -1/15 -1/15 -1/15 -1/15 -1/15 -1/15 2/5 2/5 2/5 1/6 1/6) (unit-resolution (lemma @x597 (or $x494 $x598 $x352)) @x593 @x304 $x494) @x594 @x593 @x594 @x593 @x92 @x593 @x434 @x594 @x593 @x86 @x120 false)))
 (let ((@x592 (unit-resolution (lemma @x602 (or $x598 $x352)) @x304 $x598)))
 (let ((@x492 (hypothesis $x605)))
 (let ((@x608 ((_ th-lemma arith farkas -1/3 1 1 1 1 1 1 1/3 1) (hypothesis $x598) @x86 @x120 @x492 @x86 @x120 @x492 @x437 @x492 false)))
 (let ((@x152 (unit-resolution (lemma @x608 (or $x606 $x591)) @x592 $x606)))
 (let ((@x649 (unit-resolution (lemma ((_ th-lemma arith farkas 1 1 1) @x304 @x152 @x499 false) (or $x612 $x352)) @x304 $x612)))
 (let (($x638 (<= k!2 6)))
 (let (($x627 (not $x638)))
 (let (($x614 (<= k!2 5)))
 (let (($x621 (not $x614)))
 (let (($x624 (<= k!2 4)))
 (let (($x629 (not $x624)))
 (let (($x618 (<= k!2 3)))
 (let (($x620 (not $x618)))
 (let ((@x610 (lemma ((_ th-lemma arith farkas 1 3 1 1) @x304 @x152 @x592 (hypothesis $x618) false) (or $x620 $x352))))
 (let ((@x280 ((_ th-lemma arith farkas 1 4 1 1) @x304 @x152 (unit-resolution @x610 @x304 $x620) (hypothesis $x624) false)))
 (let ((@x628 ((_ th-lemma arith farkas 1 5 1 1) @x304 @x152 (unit-resolution (lemma @x280 (or $x629 $x352)) @x304 $x629) (hypothesis $x614) false)))
 (let ((@x635 ((_ th-lemma arith farkas 1 6 1 1) @x304 @x152 (unit-resolution (lemma @x628 (or $x621 $x352)) @x304 $x621) (hypothesis $x638) false)))
 (let ((@x632 (hypothesis $x645)))
 (let ((@x647 (hypothesis $x612)))
 (let ((@x652 (lemma ((_ th-lemma arith farkas 1 -1/3 1/3 1 1 1 1) @x632 (hypothesis $x627) @x437 @x647 @x632 @x647 @x632 false) (or $x650 $x638 $x609))))
 (let ((@x658 (unit-resolution @x652 (unit-resolution (lemma @x635 (or $x627 $x352)) @x304 $x627) @x649 $x650)))
 (let ((@x659 ((_ th-lemma arith farkas 1/9 4/3 4/3 2/3 7/3 7/3 7/3 7/3 7/9 1 1) @x172 @x300 @x304 @x152 @x658 @x655 @x658 @x655 @x440 @x658 @x655 false)))
 (let ((@x646 (unit-resolution (lemma @x659 (or $x660 $x352)) @x304 $x660)))
 (let ((@x639 ((_ th-lemma arith) @x300 @x304 @x646 @x440 @x406 @x646 @x440 @x437 @x86 @x406 @x434 @x300 @x440 @x437 @x172 @x92 @x440 @x437 false)))
 (let ((@x668 (lemma @x639 $x352)))
 (let ((@x1363 (hypothesis $x175)))
 (let (($x252 (>= ?x392 1)))
 (let ((@x654 ((_ th-lemma arith) (hypothesis (not $x252)) @x86 @x406 @x434 @x300 @x440 @x437 @x434 @x300 @x440 @x437 @x440 @x437 @x434 @x300 @x172 @x92 false)))
 (let ((@x663 (lemma @x654 $x252)))
 (let ((@x1355 (lemma ((_ th-lemma arith farkas 1 3 -6 -2 2 3 3 3 3 1) @x86 @x1363 @x663 @x440 @x370 @x1363 @x300 @x668 @x434 @x120 false) $x575)))
 (let ((@x1362 (lemma ((_ th-lemma arith farkas 1 1 1 1) @x663 @x668 (hypothesis $x575) @x499 false) (or $x175 $x612))))
 (let ((@x1365 (lemma ((_ th-lemma arith gcd-test -2/3 -2/3 -1/3 -1/3 -1/3 -1/3 -1/3 -1/3) @x647 @x632 @x647 @x632 @x647 @x632 @x434 @x300 false) (or $x609 $x650))))
 ((_ th-lemma arith) @x406 (unit-resolution @x1365 (unit-resolution @x1362 @x1355 $x612) $x650) @x86 (lemma @x1298 $x868) @x440 @x437 @x86 @x406 @x434 @x300 @x440 @x437 @x434 @x300 @x172 @x92 @x440 @x437 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 55
 :arith-assert-diseq        13
 :arith-assert-lower        405
 :arith-assert-upper        220
 :arith-bound-prop          10
 :arith-branch-var          21
 :arith-conflicts           43
 :arith-eq-adapter          9
 :arith-fixed-eqs           94
 :arith-gcd-tests           117
 :arith-gomory-cuts         19
 :arith-grobner             64
 :arith-ineq-splits         21
 :arith-max-min             1620
 :arith-nonlinear-bounds    52
 :arith-nonlinear-horner    347
 :arith-num-rows            10
 :arith-offset-eqs          5
 :arith-patches             52
 :arith-patches_succ        11
 :arith-pivots              568
 :arith-pseudo-nonlinear    86
 :arith-row-summations      1787
 :arith-tableau-max-columns 43
 :arith-tableau-max-rows    10
 :conflicts                 49
 :decisions                 175
 :del-clause                106
 :final-checks              152
 :max-memory                4.01
 :memory                    3.32
 :minimized-lits            20
 :mk-bool-var               179
 :mk-clause                 117
 :num-allocs                2544396
 :num-checks                1
 :propagations              157
 :rlimit-count              108887
 :time                      0.04
 :total-time                0.04)
