unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x2905 (* r!1 r!1)))
 (let ((?x1500 (* (- 1) r!1)))
 (let ((?x36 (* r00 r00)))
 (let ((?x2882 (* (- 1) ?x36)))
 (let ((?x2868 (* (- 2) x00)))
 (let ((?x841 (+ r00 ?x2868 ?x2882 ?x1500 (* 2 x!0) ?x2905)))
 (let (($x582 (<= ?x841 0)))
 (let (($x842 (= ?x841 0)))
 (let ((?x1501 (+ ?x1500 x!0)))
 (let ((?x1863 (+ 1 r!1)))
 (let ((?x2047 (* ?x1863 ?x1863 ?x1863 ?x1863 ?x1863 ?x1501 ?x1501)))
 (let ((?x1867 (* (- 1) (* ?x1863 ?x1863 ?x1863 ?x1863 ?x1863 ?x1501 ?x1501 ?x1501))))
 (let ((?x1503 (* 2 (* ?x1863 ?x1863 ?x1863 ?x1501 ?x1501 ?x1501))))
 (let ((?x1499 (* 4 (* r!1 r!1 x!0 x!0))))
 (let ((?x1496 (* 2 (* r!1 r!1 r!1 r!1 x!0))))
 (let ((?x1495 (* (- 2) (* x!0 x!0 x!0))))
 (let ((?x1582 (* ?x1863 ?x1863 ?x1863 ?x1863 ?x1501 ?x1501 ?x1501)))
 (let ((?x1864 (* (- 1) (* ?x1863 ?x1863 ?x1863 ?x1863 ?x1501 ?x1501))))
 (let ((?x1862 (* (- 1) (* r!1 r!1 r!1 x!0 x!0))))
 (let ((?x1860 (* 5 (* r!1 x!0 x!0))))
 (let ((?x1857 (* (- 4) (* r!1 r!1 x!0))))
 (let ((?x1575 (* r!1 r!1 r!1)))
 (let ((?x1847 (* (- 1) (* r!1 r!1 r!1 r!1 r!1))))
 (let ((?x1841 (* (- 2) (* r!1 x!0 x!0 x!0))))
 (let ((?x1821 (* (- 2) (* ?x1863 ?x1863 ?x1863 ?x1501 ?x1501 ?x1501 ?x1501))))
 (let ((?x1859 (* (- 2) (* r!1 r!1 r!1 x!0))))
 (let ((?x621 (+ (* 6 (* x00 r!1 r!1 r!1 r!1 r!1 x!0)) (* (- 2) (* x00 r!1 r!1 r!1 r!1 r!1 r!1)) (* (- 3) (* r00 r!1 r!1 x!0 x!0 x!0)) (* (- 6) (* r00 r00 r!1 r!1 r!1 r!1)) (* (- 4) (* r00 r00 r!1 r!1 r!1 r!1 r!1)) (* (- 1) (* r00 r!1 r!1 r!1 x!0 x!0 x!0)) (* 3 (* r00 r00 r!1 r!1 x!0 x!0 x!0)) (* (- 10) (* r00 r00 r!1 r!1 r!1 x!0 x!0)) (* (- 1) (* r00 r00 r!1 r!1 r!1 r!1 r!1 r!1)) (* 3 (* r00 r00 r!1 r!1 r!1 r!1 r!1 x!0)) (* (- 6) (* x00 r!1 r!1 r!1)) (* r00 r00 x!0 x!0 x!0) (* (- 3) (* r00 r00 r!1 r!1 r!1 r!1 x!0 x!0)) (* 3 (* r00 r00 r!1 x!0 x!0 x!0)) (* r00 r00 r!1 r!1 r!1 x!0 x!0 x!0) (* (- 5) (* r00 r00 r!1 x!0 x!0)) (* 5 (* r00 r!1 x!0 x!0)) (* (- 12) (* x00 r!1 r!1 r!1 r!1)) (* 2 (* x00 x!0 x!0 x!0)) (* 11 (* r00 r00 r!1 r!1 r!1 r!1 x!0)) (* (- 12) (* r00 r00 r!1 r!1 x!0 x!0)) (* (- 6) (* x00 r!1 r!1 r!1 r!1 x!0 x!0)) (* (- 11) (* r00 r!1 r!1 r!1 r!1 x!0)) (* 6 (* x00 r!1 x!0 x!0 x!0)) (* 6 (* x00 r!1 r!1 x!0 x!0 x!0)) (* (- 24) (* x00 r!1 r!1 x!0 x!0)) ?x1859 (* (- 20) (* x00 r!1 r!1 r!1 x!0 x!0)) ?x1821 ?x1841 ?x1847 ?x1575 ?x1857 ?x1860 ?x1862 ?x1864 ?x1582 (* (- 10) (* x00 r!1 x!0 x!0)) (* (- 8) (* x00 r!1 r!1 r!1 r!1 r!1)) (* 22 (* x00 r!1 r!1 r!1 r!1 x!0)) (* 14 (* x00 r!1 r!1 x!0)) (* (- 7) (* r00 r!1 r!1 x!0)) (* 4 (* r00 r!1 r!1 r!1 r!1 r!1)) (* r00 r!1 r!1 r!1 r!1 r!1 r!1) (* (- 3) (* r00 r!1 r!1 r!1 r!1 r!1 x!0)) (* 10 (* r00 r!1 r!1 r!1 x!0 x!0)) (* 3 (* r00 r!1 r!1 r!1 r!1 x!0 x!0)) ?x1495 (* 2 (* x00 r!1 r!1 r!1 x!0 x!0 x!0)) ?x1496 ?x1499 ?x1503 ?x1867 (* 12 (* r00 r!1 r!1 x!0 x!0)) (* 30 (* x00 r!1 r!1 r!1 x!0)) (* (- 15) (* r00 r!1 r!1 r!1 x!0)) (* 6 (* r00 r!1 r!1 r!1 r!1)) (* 3 (* r00 r!1 r!1 r!1)) ?x2047 (* (- 1) (* r00 x!0 x!0 x!0)) (* 15 (* r00 r00 r!1 r!1 r!1 x!0)) (* 7 (* r00 r00 r!1 r!1 x!0)) (* (- 3) (* r00 r!1 x!0 x!0 x!0)) (* (- 3) (* r00 r00 r!1 r!1 r!1)))))
 (let (($x1667 (= ?x621 0)))
 (let (($x864 (not $x1667)))
 (let (($x1660 (and $x842 $x864)))
 (let ((?x1757 (+ (* 2 (* x!0 x!0 x!0 x00)) (* 6 (* r!1 x!0 x!0 x!0 x00)) (* 6 (* r!1 r!1 x!0 x!0 x!0 x00)) (* 2 (* r!1 r!1 r!1 x!0 x!0 x!0 x00)) (* (- 12) (* r!1 r!1 r!1 r!1 x00)) (* (- 8) (* r!1 r!1 r!1 r!1 r!1 x00)) (* (- 2) (* r!1 r!1 r!1 r!1 r!1 r!1 x00)) (* 14 (* r!1 r!1 x!0 x00)) (* 30 (* r!1 r!1 r!1 x!0 x00)) (* 22 (* r!1 r!1 r!1 r!1 x!0 x00)) (* 6 (* r!1 r!1 r!1 r!1 r!1 x!0 x00)) (* (- 10) (* r!1 x!0 x!0 x00)) (* (- 24) (* r!1 r!1 x!0 x!0 x00)) (* (- 20) (* r!1 r!1 r!1 x!0 x!0 x00)) (* (- 6) (* r!1 r!1 r!1 r!1 x!0 x!0 x00)) (* 3 (* r!1 r!1 r!1 r00)) (* (- 7) (* r!1 r!1 x!0 r00)) (* 5 (* r!1 x!0 x!0 r00)) (* 6 (* r!1 r!1 r!1 r!1 r00)) (* 4 (* r!1 r!1 r!1 r!1 r!1 r00)) (* r!1 r!1 r!1 r!1 r!1 r!1 r00) (* (- 15) (* r!1 r!1 r!1 x!0 r00)) (* (- 11) (* r!1 r!1 r!1 r!1 x!0 r00)) (* (- 3) (* r!1 r!1 r!1 r!1 r!1 x!0 r00)) (* 12 (* r!1 r!1 x!0 x!0 r00)) (* 10 (* r!1 r!1 r!1 x!0 x!0 r00)) (* 3 (* r!1 r!1 r!1 r!1 x!0 x!0 r00)) (* (- 1) (* x!0 x!0 x!0 r00)) (* (- 3) (* r!1 x!0 x!0 x!0 r00)) (* (- 3) (* r!1 r!1 x!0 x!0 x!0 r00)) (* (- 1) (* r!1 r!1 r!1 x!0 x!0 x!0 r00)) ?x1841 ?x1495 ?x1575 ?x1847 ?x1857 ?x1859 ?x1496 ?x1860 ?x1499 ?x1862 ?x1821 ?x1864 ?x1503 ?x1582 ?x1867 ?x2047 (* (- 3) (* r!1 r!1 r!1 r00 r00)) (* (- 6) (* r!1 r!1 r!1 r!1 r00 r00)) (* (- 4) (* r!1 r!1 r!1 r!1 r!1 r00 r00)) (* 7 (* r!1 r!1 x!0 r00 r00)) (* 15 (* r!1 r!1 r!1 x!0 r00 r00)) (* 11 (* r!1 r!1 r!1 r!1 x!0 r00 r00)) (* (- 5) (* r!1 x!0 x!0 r00 r00)) (* (- 12) (* r!1 r!1 x!0 x!0 r00 r00)) (* (- 10) (* r!1 r!1 r!1 x!0 x!0 r00 r00)) (* (- 1) (* r!1 r!1 r!1 r!1 r!1 r!1 r00 r00)) (* 3 (* r!1 r!1 r!1 r!1 r!1 x!0 r00 r00)) (* (- 6) (* r!1 r!1 r!1 x00)) (* (- 3) (* r!1 r!1 r!1 r!1 x!0 x!0 r00 r00)) (* x!0 x!0 x!0 r00 r00) (* 3 (* r!1 x!0 x!0 x!0 r00 r00)) (* 3 (* r!1 r!1 x!0 x!0 x!0 r00 r00)) (* r!1 r!1 r!1 x!0 x!0 x!0 r00 r00))))
 (let ((?x35 (* 2 x00)))
 (let ((?x141 (* (- 1) r00)))
 (let (($x850 (and (= (+ r!1 (* (- 2) x!0) ?x141 (* (- 1) ?x2905) ?x35 ?x36) 0) (not (= ?x1757 0)))))
 (let (($x227 (exists ((r Int) (x Int) )(! (let ((?x3213 (* r r r x x x r00 r00)))
 (let ((?x3187 (* x x x r00 r00)))
 (let ((?x89 (* (- 1) r)))
 (let ((?x155 (+ ?x89 x)))
 (let ((?x149 (+ 1 r)))
 (let ((?x2396 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x155 ?x155)))
 (let ((?x2061 (* ?x149 ?x149 ?x149 ?x149 ?x155 ?x155 ?x155)))
 (let ((?x1587 (* r r r)))
 (let ((?x1015 (* r r r r r r r00)))
 (let ((?x2522 (+ (* 2 (* x x x x00)) (* 6 (* r x x x x00)) (* 6 (* r r x x x x00)) (* 2 (* r r r x x x x00)) (* (- 12) (* r r r r x00)) (* (- 8) (* r r r r r x00)) (* (- 2) (* r r r r r r x00)) (* 14 (* r r x x00)) (* 30 (* r r r x x00)) (* 22 (* r r r r x x00)) (* 6 (* r r r r r x x00)) (* (- 10) (* r x x x00)) (* (- 24) (* r r x x x00)) (* (- 20) (* r r r x x x00)) (* (- 6) (* r r r r x x x00)) (* 3 (* r r r r00)) (* (- 7) (* r r x r00)) (* 5 (* r x x r00)) (* 6 (* r r r r r00)) (* 4 (* r r r r r r00)) ?x1015 (* (- 15) (* r r r x r00)) (* (- 11) (* r r r r x r00)) (* (- 3) (* r r r r r x r00)) (* 12 (* r r x x r00)) (* 10 (* r r r x x r00)) (* 3 (* r r r r x x r00)) (* (- 1) (* x x x r00)) (* (- 3) (* r x x x r00)) (* (- 3) (* r r x x x r00)) (* (- 1) (* r r r x x x r00)) (* (- 2) (* r x x x)) (* (- 2) (* x x x)) ?x1587 (* (- 1) (* r r r r r)) (* (- 4) (* r r x)) (* (- 2) (* r r r x)) (* 2 (* r r r r x)) (* 5 (* r x x)) (* 4 (* r r x x)) (* (- 1) (* r r r x x)) (* (- 2) (* ?x149 ?x149 ?x149 ?x155 ?x155 ?x155 ?x155)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x155 ?x155)) (* 2 (* ?x149 ?x149 ?x149 ?x155 ?x155 ?x155)) ?x2061 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x155 ?x155 ?x155)) ?x2396 (* (- 3) (* r r r r00 r00)) (* (- 6) (* r r r r r00 r00)) (* (- 4) (* r r r r r r00 r00)) (* 7 (* r r x r00 r00)) (* 15 (* r r r x r00 r00)) (* 11 (* r r r r x r00 r00)) (* (- 5) (* r x x r00 r00)) (* (- 12) (* r r x x r00 r00)) (* (- 10) (* r r r x x r00 r00)) (* (- 1) (* r r r r r r r00 r00)) (* 3 (* r r r r r x r00 r00)) (* (- 6) (* r r r x00)) (* (- 3) (* r r r r x x r00 r00)) ?x3187 (* 3 (* r x x x r00 r00)) (* 3 (* r r x x x r00 r00)) ?x3213)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x30 (* r r)))
 (let ((?x142 (* (- 1) ?x30)))
 (let ((?x141 (* (- 1) r00)))
 (let ((?x140 (* (- 2) x)))
 (let (($x144 (= (+ r ?x140 ?x141 ?x142 ?x35 ?x36) 0)))
 (and $x144 (not (= ?x2522 0)))))))))))))))))))) :qid k!26))
 ))
 (let (($x3028 (exists ((r Int) (x Int) )(! (let ((?x89 (* (- 1) r)))
 (let ((?x2855 (+ x ?x89)))
 (let ((?x149 (+ 1 r)))
 (let ((?x3149 (* r00 r00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x3060 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x3033 (* r00 ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x3016 (* ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x3004 (* ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x2865 (* r00 r00 ?x149 ?x2855 ?x2855)))
 (let ((?x3044 (+ ?x2865 (* 2 (* x00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* (- 2) (* x00 ?x149 ?x149 ?x149 ?x2855 ?x2855)) (* (- 1) (* r00 ?x149 ?x2855 ?x2855)) (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* 2 (* ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* (- 2) (* ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855 ?x2855)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) ?x3004 ?x3016 ?x3033 (* (- 1) (* ?x149 ?x149 ?x149 ?x2855 ?x2855)) ?x3060 (* (- 2) (* ?x149 ?x2855 ?x2855 ?x2855)) (* 2 (* x00 ?x149 ?x2855 ?x2855)) (* (- 1) (* r00 r00 ?x149 ?x149 ?x149 ?x2855 ?x2855)) ?x3149)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x140 (* (- 2) x)))
 (let ((?x30 (* r r)))
 (let ((?x142 (* (- 1) ?x30)))
 (let ((?x141 (* (- 1) r00)))
 (and (= (+ r ?x141 ?x142 ?x140 ?x35 ?x36) 0) (not (= ?x3044 0))))))))))))))))))) :qid k!26))
 ))
 (let ((?x246 (lambda ((r Int) (x Int) )(let ((?x3213 (* r r r x x x r00 r00)))
 (let ((?x3187 (* x x x r00 r00)))
 (let ((?x89 (* (- 1) r)))
 (let ((?x155 (+ ?x89 x)))
 (let ((?x149 (+ 1 r)))
 (let ((?x2396 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x155 ?x155)))
 (let ((?x2061 (* ?x149 ?x149 ?x149 ?x149 ?x155 ?x155 ?x155)))
 (let ((?x1587 (* r r r)))
 (let ((?x1015 (* r r r r r r r00)))
 (let ((?x2522 (+ (* 2 (* x x x x00)) (* 6 (* r x x x x00)) (* 6 (* r r x x x x00)) (* 2 (* r r r x x x x00)) (* (- 12) (* r r r r x00)) (* (- 8) (* r r r r r x00)) (* (- 2) (* r r r r r r x00)) (* 14 (* r r x x00)) (* 30 (* r r r x x00)) (* 22 (* r r r r x x00)) (* 6 (* r r r r r x x00)) (* (- 10) (* r x x x00)) (* (- 24) (* r r x x x00)) (* (- 20) (* r r r x x x00)) (* (- 6) (* r r r r x x x00)) (* 3 (* r r r r00)) (* (- 7) (* r r x r00)) (* 5 (* r x x r00)) (* 6 (* r r r r r00)) (* 4 (* r r r r r r00)) ?x1015 (* (- 15) (* r r r x r00)) (* (- 11) (* r r r r x r00)) (* (- 3) (* r r r r r x r00)) (* 12 (* r r x x r00)) (* 10 (* r r r x x r00)) (* 3 (* r r r r x x r00)) (* (- 1) (* x x x r00)) (* (- 3) (* r x x x r00)) (* (- 3) (* r r x x x r00)) (* (- 1) (* r r r x x x r00)) (* (- 2) (* r x x x)) (* (- 2) (* x x x)) ?x1587 (* (- 1) (* r r r r r)) (* (- 4) (* r r x)) (* (- 2) (* r r r x)) (* 2 (* r r r r x)) (* 5 (* r x x)) (* 4 (* r r x x)) (* (- 1) (* r r r x x)) (* (- 2) (* ?x149 ?x149 ?x149 ?x155 ?x155 ?x155 ?x155)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x155 ?x155)) (* 2 (* ?x149 ?x149 ?x149 ?x155 ?x155 ?x155)) ?x2061 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x155 ?x155 ?x155)) ?x2396 (* (- 3) (* r r r r00 r00)) (* (- 6) (* r r r r r00 r00)) (* (- 4) (* r r r r r r00 r00)) (* 7 (* r r x r00 r00)) (* 15 (* r r r x r00 r00)) (* 11 (* r r r r x r00 r00)) (* (- 5) (* r x x r00 r00)) (* (- 12) (* r r x x r00 r00)) (* (- 10) (* r r r x x r00 r00)) (* (- 1) (* r r r r r r r00 r00)) (* 3 (* r r r r r x r00 r00)) (* (- 6) (* r r r x00)) (* (- 3) (* r r r r x x r00 r00)) ?x3187 (* 3 (* r x x x r00 r00)) (* 3 (* r r x x x r00 r00)) ?x3213)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x30 (* r r)))
 (let ((?x142 (* (- 1) ?x30)))
 (let ((?x141 (* (- 1) r00)))
 (let ((?x140 (* (- 2) x)))
 (let (($x144 (= (+ r ?x140 ?x141 ?x142 ?x35 ?x36) 0)))
 (let (($x2528 (and $x144 (not (= ?x2522 0)))))
 (let ((?x2855 (+ x ?x89)))
 (let ((?x3149 (* r00 r00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x3060 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x3033 (* r00 ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x3016 (* ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x3004 (* ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x2865 (* r00 r00 ?x149 ?x2855 ?x2855)))
 (let ((?x3044 (+ ?x2865 (* 2 (* x00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* (- 2) (* x00 ?x149 ?x149 ?x149 ?x2855 ?x2855)) (* (- 1) (* r00 ?x149 ?x2855 ?x2855)) (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* 2 (* ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* (- 2) (* ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855 ?x2855)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) ?x3004 ?x3016 ?x3033 (* (- 1) (* ?x149 ?x149 ?x149 ?x2855 ?x2855)) ?x3060 (* (- 2) (* ?x149 ?x2855 ?x2855 ?x2855)) (* 2 (* x00 ?x149 ?x2855 ?x2855)) (* (- 1) (* r00 r00 ?x149 ?x149 ?x149 ?x2855 ?x2855)) ?x3149)))
 (let (($x3009 (and (= (+ r ?x141 ?x142 ?x140 ?x35 ?x36) 0) (not (= ?x3044 0)))))
 (rewrite (= $x3009 $x2528))))))))))))))))))))))))))))))
 ))
 (let (($x2863 (exists ((r Int) (x Int) )(! (let ((?x89 (* (- 1) r)))
 (let ((?x2855 (+ x ?x89)))
 (let ((?x149 (+ 1 r)))
 (let ((?x3149 (* r00 r00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x3135 (* r00 r00 ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x3050 (* ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x2990 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x2988 (* ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x2799 (* r00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x2919 (* r00 ?x149 ?x2855 ?x2855)))
 (let ((?x3161 (+ (* (- 1) (* r00 r00 ?x149 ?x2855 ?x2855)) (* (- 2) (* x00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* 2 (* x00 ?x149 ?x149 ?x149 ?x2855 ?x2855)) ?x2919 ?x2799 (* (- 2) (* ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* 2 (* ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855 ?x2855)) ?x2988 ?x2990 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* (- 1) (* ?x149 ?x149 ?x2855 ?x2855)) (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x2855 ?x2855)) ?x3050 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855)) (* 2 (* ?x149 ?x2855 ?x2855 ?x2855)) (* (- 2) (* x00 ?x149 ?x2855 ?x2855)) ?x3135 (* (- 1) ?x3149))))
 (let ((?x36 (* r00 r00)))
 (let ((?x2882 (* (- 1) ?x36)))
 (let ((?x2868 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (and (= (+ ?x89 r00 ?x30 ?x32 ?x2868 ?x2882) 0) (not (= ?x3161 0))))))))))))))))))) :qid k!26))
 ))
 (let ((?x2789 (lambda ((r Int) (x Int) )(let ((?x89 (* (- 1) r)))
 (let ((?x2855 (+ x ?x89)))
 (let ((?x149 (+ 1 r)))
 (let ((?x3149 (* r00 r00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x3060 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x3033 (* r00 ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x3016 (* ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x3004 (* ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x2865 (* r00 r00 ?x149 ?x2855 ?x2855)))
 (let ((?x3044 (+ ?x2865 (* 2 (* x00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* (- 2) (* x00 ?x149 ?x149 ?x149 ?x2855 ?x2855)) (* (- 1) (* r00 ?x149 ?x2855 ?x2855)) (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* 2 (* ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* (- 2) (* ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855 ?x2855)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855)) (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) ?x3004 ?x3016 ?x3033 (* (- 1) (* ?x149 ?x149 ?x149 ?x2855 ?x2855)) ?x3060 (* (- 2) (* ?x149 ?x2855 ?x2855 ?x2855)) (* 2 (* x00 ?x149 ?x2855 ?x2855)) (* (- 1) (* r00 r00 ?x149 ?x149 ?x149 ?x2855 ?x2855)) ?x3149)))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x140 (* (- 2) x)))
 (let ((?x30 (* r r)))
 (let ((?x142 (* (- 1) ?x30)))
 (let ((?x141 (* (- 1) r00)))
 (let (($x3009 (and (= (+ r ?x141 ?x142 ?x140 ?x35 ?x36) 0) (not (= ?x3044 0)))))
 (let ((?x3135 (* r00 r00 ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x3050 (* ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x2990 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x2988 (* ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x2799 (* r00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x2919 (* r00 ?x149 ?x2855 ?x2855)))
 (let ((?x3161 (+ (* (- 1) ?x2865) (* (- 2) (* x00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* 2 (* x00 ?x149 ?x149 ?x149 ?x2855 ?x2855)) ?x2919 ?x2799 (* (- 2) (* ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* 2 (* ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855 ?x2855)) ?x2988 ?x2990 (* (- 1) ?x3004) (* (- 1) ?x3016) (* (- 1) ?x3033) ?x3050 (* (- 1) ?x3060) (* 2 (* ?x149 ?x2855 ?x2855 ?x2855)) (* (- 2) (* x00 ?x149 ?x2855 ?x2855)) ?x3135 (* (- 1) ?x3149))))
 (let (($x2889 (= (+ ?x89 r00 ?x30 (* 2 x) (* (- 2) x00) (* (- 1) ?x36)) 0)))
 (let (($x2880 (and $x2889 (not (= ?x3161 0)))))
 (rewrite (= $x2880 $x3009)))))))))))))))))))))))))))))
 ))
 (let (($x84 (exists ((r Int) (x Int) )(! (let ((?x42 (- x r)))
 (let ((?x41 (+ r 1)))
 (let ((?x45 (- (* (- 1) ?x41 r00 r00 ?x42 ?x42) (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 x00))))
 (let ((?x52 (+ ?x45 (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 x00) (* ?x41 r00 ?x42 ?x42) (* 0 ?x41 ?x41 ?x41) (* 0 ?x41 ?x42) (* 0 ?x41 ?x41) (* ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42))))
 (let ((?x58 (+ (- ?x52 (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x63 (- (- ?x58 (* ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x42 ?x42))))
 (let ((?x66 (+ (- ?x63 (* ?x41 ?x41 ?x41 r00 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x42 ?x42))))
 (let ((?x70 (+ (- ?x66 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42)) (* 2 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x77 (+ (- ?x70 (* 2 ?x41 ?x42 ?x42 x00)) (* 0 ?x41 r00 r00) (* 0 ?x41 x00) (* 0 ?x41 r00) (* ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42))))
 (let (($x81 (not (= (- ?x77 (* ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42)) 0))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 (* r r) (* 2 x)) ?x35) ?x36)))
 (and (= ?x38 0) (or $x81))))))))))))))) :qid k!26))
 ))
 (let ((?x2876 (lambda ((r Int) (x Int) )(let ((?x89 (* (- 1) r)))
 (let ((?x2855 (+ x ?x89)))
 (let ((?x149 (+ 1 r)))
 (let ((?x3149 (* r00 r00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x3135 (* r00 r00 ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x3050 (* ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x2990 (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x2988 (* ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855)))
 (let ((?x2799 (* r00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)))
 (let ((?x2919 (* r00 ?x149 ?x2855 ?x2855)))
 (let ((?x3161 (+ (* (- 1) (* r00 r00 ?x149 ?x2855 ?x2855)) (* (- 2) (* x00 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* 2 (* x00 ?x149 ?x149 ?x149 ?x2855 ?x2855)) ?x2919 ?x2799 (* (- 2) (* ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* 2 (* ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855 ?x2855)) ?x2988 ?x2990 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855 ?x2855)) (* (- 1) (* ?x149 ?x149 ?x2855 ?x2855)) (* (- 1) (* r00 ?x149 ?x149 ?x149 ?x2855 ?x2855)) ?x3050 (* (- 1) (* ?x149 ?x149 ?x149 ?x149 ?x149 ?x2855 ?x2855)) (* 2 (* ?x149 ?x2855 ?x2855 ?x2855)) (* (- 2) (* x00 ?x149 ?x2855 ?x2855)) ?x3135 (* (- 1) ?x3149))))
 (let ((?x36 (* r00 r00)))
 (let ((?x2882 (* (- 1) ?x36)))
 (let ((?x2868 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (let (($x2880 (and (= (+ ?x89 r00 ?x30 ?x32 ?x2868 ?x2882) 0) (not (= ?x3161 0)))))
 (let ((?x42 (- x r)))
 (let ((?x41 (+ r 1)))
 (let ((?x45 (- (* (- 1) ?x41 r00 r00 ?x42 ?x42) (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 x00))))
 (let ((?x52 (+ ?x45 (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 x00) (* ?x41 r00 ?x42 ?x42) (* 0 ?x41 ?x41 ?x41) (* 0 ?x41 ?x42) (* 0 ?x41 ?x41) (* ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42))))
 (let ((?x58 (+ (- ?x52 (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x63 (- (- ?x58 (* ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x42 ?x42))))
 (let ((?x66 (+ (- ?x63 (* ?x41 ?x41 ?x41 r00 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x42 ?x42))))
 (let ((?x70 (+ (- ?x66 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42)) (* 2 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x77 (+ (- ?x70 (* 2 ?x41 ?x42 ?x42 x00)) (* 0 ?x41 r00 r00) (* 0 ?x41 x00) (* 0 ?x41 r00) (* ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42))))
 (let (($x81 (not (= (- ?x77 (* ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42)) 0))))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 ?x30 ?x32) (* 2 x00)) ?x36)))
 (let (($x83 (and (= ?x38 0) (or $x81))))
 (rewrite (= $x83 $x2880))))))))))))))))))))))))))))))))
 ))
 (let ((@x85 (asserted $x84)))
 (let ((@x2869 (mp (mp @x85 (quant-intro (proof-bind ?x2876) (= $x84 $x2863)) $x2863) (rewrite (= $x2863 $x2863)) $x2863)))
 (let ((@x2792 (mp (mp @x2869 (quant-intro (proof-bind ?x2789) (= $x2863 $x3028)) $x3028) (quant-intro (proof-bind ?x246) (= $x3028 $x227)) $x227)))
 (let ((@x1551 (mp (mp~ @x2792 (sk (~ $x227 $x850)) $x850) (rewrite (= $x850 $x1660)) $x1660)))
 (let ((@x844 (and-elim @x1551 $x842)))
 (let ((@x550 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x842) $x582)) @x844 $x582)))
 (let (($x583 (>= ?x841 0)))
 (let ((@x2750 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x842) $x583)) @x844 $x583)))
 (let (($x2518 (not (>= ?x621 0))))
 (let (($x585 (<= ?x621 0)))
 (let ((@x613 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1667 (not $x585) $x2518)) (and-elim @x1551 $x864) (or (not $x585) $x2518))))
 (let ((@x642 (unit-resolution @x613 (lemma ((_ th-lemma arith) (hypothesis (not $x585)) @x2750 @x550 false) $x585) $x2518)))
 ((_ th-lemma arith) @x642 @x2750 @x550 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 1
 :arith-assert-diseq        1
 :arith-assert-lower        19
 :arith-assert-upper        3
 :arith-conflicts           2
 :arith-eq-adapter          2
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             560
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    8
 :arith-num-rows            4
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              2
 :arith-tableau-max-columns 103
 :arith-tableau-max-rows    4
 :conflicts                 2
 :decisions                 1
 :del-clause                7
 :final-checks              4
 :max-memory                4.09
 :memory                    3.48
 :mk-bool-var               12
 :mk-clause                 7
 :num-allocs                1616912
 :num-checks                1
 :propagations              4
 :rlimit-count              12520
 :time                      0.01
 :total-time                0.02)
