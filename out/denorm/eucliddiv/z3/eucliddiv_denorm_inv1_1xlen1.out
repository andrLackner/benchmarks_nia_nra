unsat
((set-logic NIA)
(proof
(let (($x50 (exists ((q Int) (r Int) (y Int) )(! (let ((?x44 (- r y00)))
 (let ((?x43 (+ q 1)))
 (let ((?x30 (* (- 1) y00)))
 (let ((?x42 (+ ?x30 y00)))
 (let ((?x45 (* ?x42 ?x43 ?x43 ?x43 ?x44 ?x44 ?x44 y00 y00 y00)))
 (let (($x46 (= ?x45 0)))
 (let (($x47 (not $x46)))
 (let (($x48 (or $x47)))
 (let (($x41 (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0)))
 (let (($x33 (= (+ ?x30 y) 0)))
 (and $x33 $x41 $x48))))))))))) :qid k!29))
 ))
 (let (($x126 (= $x50 false)))
 (let (($x119 (exists ((q Int) (r Int) (y Int) )(! false :qid k!29))
 ))
 (let ((@x125 (elim-unused (= $x119 false))))
 (let (($x122 (= $x50 $x119)))
 (let ((?x137 (lambda ((q Int) (r Int) (y Int) )(let ((?x44 (- r y00)))
 (let ((?x43 (+ q 1)))
 (let ((?x30 (* (- 1) y00)))
 (let ((?x42 (+ ?x30 y00)))
 (let ((?x45 (* ?x42 ?x43 ?x43 ?x43 ?x44 ?x44 ?x44 y00 y00 y00)))
 (let (($x46 (= ?x45 0)))
 (let (($x47 (not $x46)))
 (let (($x48 (or $x47)))
 (let (($x41 (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0)))
 (let (($x33 (= (+ ?x30 y) 0)))
 (let (($x49 (and $x33 $x41 $x48)))
 (let (($x117 (= $x49 false)))
 (let (($x156 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x77 (= (+ (* (- 1) y00) y) 0)))
 (let (($x78 (and $x77 $x156 false)))
 (let ((?x55 (* (- 1) y00)))
 (let ((?x75 (+ r ?x55)))
 (let ((?x72 (+ 1 q)))
 (let ((?x81 (* 0 ?x72 ?x72 ?x72 ?x75 ?x75 ?x75 y00 y00 y00)))
 (let ((@x80 (rewrite (= ?x44 ?x75))))
 (let ((@x74 (rewrite (= ?x43 ?x72))))
 (let ((@x69 (trans (monotonicity (rewrite (= ?x30 ?x55)) (= ?x42 (+ ?x55 y00))) (rewrite (= (+ ?x55 y00) 0)) (= ?x42 0))))
 (let ((@x87 (trans (monotonicity @x69 @x74 @x74 @x74 @x80 @x80 @x80 (= ?x45 ?x81)) (rewrite (= ?x81 0)) $x46)))
 (let ((@x97 (trans (monotonicity @x87 (= $x46 (= 0 0))) (rewrite (= (= 0 0) true)) (= $x46 true))))
 (let ((@x104 (trans (monotonicity @x97 (= $x47 (not true))) (rewrite (= (not true) false)) (= $x47 false))))
 (let ((@x111 (trans (monotonicity @x104 (= $x48 (or false))) (rewrite (= (or false) false)) (= $x48 false))))
 (let ((@x131 (monotonicity (rewrite (= $x33 $x77)) (rewrite (= $x41 $x156)) @x111 (= $x49 $x78))))
 (trans @x131 (rewrite (= $x78 false)) $x117)))))))))))))))))))))))))))))
 ))
 (let ((@x51 (asserted $x50)))
 (mp @x51 (trans (quant-intro (proof-bind ?x137) $x122) @x125 $x126) false))))))))))

(:max-memory   3.33
 :memory       3.02
 :mk-bool-var  5
 :num-allocs   896746
 :rlimit-count 101
 :time         0.01
 :total-time   0.01)
