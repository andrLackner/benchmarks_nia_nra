unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(declare-fun s!0 () Int)
(declare-fun q!3 () Int)
(declare-fun p!5 () Int)
(proof
(let ((?x697 (* b!2 r!1)))
 (let ((?x130 (* s00 a00)))
 (let ((?x311 (+ ?x130 (* (- 1) (* r00 b00)) (* (- 1) (* s!0 a!4)) ?x697)))
 (let (($x201 (>= ?x311 0)))
 (let (($x834 (= ?x311 0)))
 (let ((?x696 (* (- 1) ?x697)))
 (let ((?x584 (* s!0 a!4)))
 (let ((?x148 (* r00 b00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x863 (+ ?x137 ?x148 ?x584 ?x696)))
 (let ((?x811 (* (- 1) q!3)))
 (let ((?x359 (+ ?x811 p!5)))
 (let ((?x792 (* (- 1) b!2)))
 (let ((?x147 (+ ?x792 a!4)))
 (let ((?x522 (+ r!1 (* (- 1) s!0))))
 (let ((?x428 (* q!3 b!2 b!2 b!2 s!0)))
 (let ((?x362 (* b!2 b!2 r!1 r!1 r!1 p!5)))
 (let ((?x323 (* q!3 r!1 a!4 a!4 a!4)))
 (let ((?x172 (* (- 1) (* q!3 b!2 b!2 r!1 r!1 r!1))))
 (let ((?x243 (* (- 3) (* q!3 b!2 b!2 r!1 s!0 s!0))))
 (let ((?x237 (* q!3 b!2 b!2 s!0 s!0 s!0)))
 (let ((?x295 (* (- 1) (* q!3 b!2 b!2 b!2 r!1))))
 (let ((?x252 (* 3 (* q!3 b!2 b!2 r!1 r!1 s!0))))
 (let ((?x164 (+ ?x252 (* (- 3) (* q!3 b!2 r!1 a!4 a!4)) ?x295 ?x237 ?x243 ?x172 (* (- 1) (* q!3 s!0 a!4 a!4 a!4)) (* 3 (* q!3 b!2 s!0 a!4 a!4)) ?x323 (* (- 1) (* b!2 b!2 p!5 s!0 s!0 s!0)) ?x362 ?x428 (* ?x522 ?x522 ?x522 ?x147 ?x147 ?x359 ?x359 ?x359 b!2 q!3) (* (- 3) (* b!2 b!2 r!1 r!1 p!5 s!0)) (* 3 (* q!3 b!2 b!2 r!1 a!4)) (* 3 (* b!2 b!2 r!1 p!5 s!0 s!0)) (* (- 3) (* q!3 b!2 b!2 s!0 a!4)))))
 (let ((?x206 (* ?x164 ?x863)))
 (let (($x267 (= ?x206 0)))
 (let ((?x211 (* (- 1) (* q!3 r!1 r!1 r!1 p!5 p!5 p!5 a!4 a!4 a!4))))
 (let ((?x712 (* (- 1) (* b!2 r!1 r!1 r!1 p!5 p!5 p!5 p!5 a!4 a!4))))
 (let ((?x661 (+ ?x712 ?x211 (* r!1 r!1 r!1 p!5 p!5 p!5 p!5 a!4 a!4 a!4) (* q!3 b!2 r!1 r!1 r!1 p!5 p!5 p!5 a!4 a!4) (* (- 2) (* b!2 r!1 r!1 r!1 p!5 a!4)) ?x323 ?x362 (* r!1 r!1 r!1 p!5 a!4 a!4) (* (- 1) (* r!1 p!5 a!4 a!4 a!4)))))
 (let ((?x672 (* ?x661 ?x863)))
 (let (($x120 (= ?x672 0)))
 (let (($x190 (not $x120)))
 (let (($x763 (or $x190 (not $x267))))
 (let ((?x361 (+ (* p00 b00 s!0) (* q00 r00 b!2) (* (- 1) (* q00 a00 s!0)) (* (- 1) (* p00 s00 b!2)) (* (- 1) (* r00 b00 q!3)) (* s00 a00 q!3))))
 (let ((?x259 (+ (* p00 s00 a!4) (* (- 1) (* p00 b00 r!1)) (* (- 1) (* s00 a00 p!5)) (* (- 1) (* q00 r00 a!4)) (* r00 b00 p!5) (* q00 a00 r!1))))
 (let ((?x136 (* q00 a00)))
 (let ((?x767 (+ ?x136 (* (- 1) (* p00 b00)) (* (- 1) (* q!3 a!4)) (* b!2 p!5))))
 (let ((?x771 (* q!3 r!1)))
 (let ((?x41 (* q00 r00)))
 (let ((?x564 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x207 (and (= (+ ?x37 ?x564 (* (- 1) (* p!5 s!0)) ?x771) 0) $x834 (= ?x767 0) (= ?x259 0) (= ?x361 0) $x763)))
 (let ((?x506 (+ (* a!4 s!0) ?x696 ?x137 ?x148)))
 (let ((?x527 (* (- 1) (* p!5 p!5 p!5 a!4 a!4 a!4 q!3 r!1 r!1 r!1))))
 (let ((?x753 (* (- 1) (* p!5 p!5 p!5 p!5 a!4 a!4 b!2 r!1 r!1 r!1))))
 (let ((?x127 (* a!4 a!4 a!4 q!3 r!1)))
 (let ((?x144 (* p!5 b!2 b!2 r!1 r!1 r!1)))
 (let ((?x797 (+ ?x144 ?x127 (* (- 1) (* p!5 a!4 a!4 a!4 r!1)) (* (- 2) (* p!5 a!4 b!2 r!1 r!1 r!1)) (* p!5 a!4 a!4 r!1 r!1 r!1) (* p!5 p!5 p!5 p!5 a!4 a!4 a!4 r!1 r!1 r!1) ?x753 ?x527 (* p!5 p!5 p!5 a!4 a!4 q!3 b!2 r!1 r!1 r!1))))
 (let ((?x118 (+ p!5 ?x811)))
 (let ((?x799 (+ a!4 ?x792)))
 (let ((?x429 (+ (* ?x522 ?x522 ?x522 ?x799 ?x799 ?x118 ?x118 ?x118 b!2 q!3) ?x144 ?x172 (* (- 3) (* p!5 b!2 b!2 r!1 r!1 s!0)) ?x252 (* 3 (* p!5 b!2 b!2 r!1 s!0 s!0)) ?x243 (* (- 1) (* p!5 b!2 b!2 s!0 s!0 s!0)) ?x237 ?x127 (* (- 3) (* a!4 a!4 q!3 b!2 r!1)) (* 3 (* a!4 q!3 b!2 b!2 r!1)) ?x295 (* (- 1) (* a!4 a!4 a!4 q!3 s!0)) (* 3 (* a!4 a!4 q!3 b!2 s!0)) (* (- 3) (* a!4 q!3 b!2 b!2 s!0)) ?x428)))
 (let ((?x345 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x749 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let ((?x141 (* p00 b00)))
 (let ((?x182 (* (- 1) ?x136)))
 (let (($x447 (and (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) ?x771)) 0) (= ?x506 0) (= (+ (* a!4 q!3) ?x182 ?x141 (* (- 1) (* p!5 b!2))) 0) (= ?x749 0) (= ?x345 0) (or (not (= (* ?x429 ?x506) 0)) (not (= (* ?x797 ?x506) 0))))))
 (let (($x283 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x148 (* r00 b00)))
 (let ((?x130 (* s00 a00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x125 (* (- 1) (* b r))))
 (let ((?x49 (* a s)))
 (let ((?x155 (+ ?x49 ?x125 ?x137 ?x148)))
 (let ((?x509 (* a a a q r)))
 (let ((?x363 (* p b b r r r)))
 (let ((?x807 (+ ?x363 ?x509 (* (- 1) (* p a a a r)) (* (- 2) (* p a b r r r)) (* p a a r r r) (* p p p p a a a r r r) (* (- 1) (* p p p p a a b r r r)) (* (- 1) (* p p p a a a q r r r)) (* p p p a a q b r r r))))
 (let ((?x637 (* q b b b s)))
 (let ((?x648 (* (- 3) (* a q b b s))))
 (let ((?x647 (* 3 (* a a q b s))))
 (let ((?x583 (* (- 1) (* a a a q s))))
 (let ((?x579 (* (- 1) (* q b b b r))))
 (let ((?x646 (* 3 (* a q b b r))))
 (let ((?x645 (* (- 3) (* a a q b r))))
 (let ((?x485 (* q b b s s s)))
 (let ((?x479 (* (- 1) (* p b b s s s))))
 (let ((?x498 (* (- 3) (* q b b r s s))))
 (let ((?x497 (* 3 (* p b b r s s))))
 (let ((?x496 (* 3 (* q b b r r s))))
 (let ((?x494 (* (- 3) (* p b b r r s))))
 (let ((?x373 (* (- 1) (* q b b r r r))))
 (let ((?x336 (+ p (* (- 1) q))))
 (let ((?x299 (+ a (* (- 1) b))))
 (let ((?x260 (* (- 1) s)))
 (let ((?x262 (+ r ?x260)))
 (let ((?x315 (* ?x262 ?x262 ?x262 ?x299 ?x299 ?x336 ?x336 ?x336 b q)))
 (let ((?x275 (+ ?x315 ?x363 ?x373 ?x494 ?x496 ?x497 ?x498 ?x479 ?x485 ?x509 ?x645 ?x646 ?x579 ?x583 ?x647 ?x648 ?x637)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x314 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x319 (= ?x314 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x250 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x251 (= ?x250 0)))
 (let ((?x141 (* p00 b00)))
 (let ((?x136 (* q00 a00)))
 (let ((?x182 (* (- 1) ?x136)))
 (let (($x185 (= (+ (* a q) ?x182 ?x141 (* (- 1) (* p b))) 0)))
 (let (($x163 (= ?x155 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x158 (= (+ ?x33 ?x139 ?x41 (* (- 1) (* q r))) 0)))
 (and $x158 $x163 $x185 $x251 $x319 (or (not (= (* ?x275 ?x155) 0)) (not (= (* ?x807 ?x155) 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x556 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x553 (* (- 1) ?x47)))
 (let ((?x525 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x553 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x132 (+ q (* (- 1) p))))
 (let ((?x340 (* (- 1) a)))
 (let ((?x327 (+ b ?x340)))
 (let ((?x427 (+ (* ?x327 ?x327 r r r p) (* ?x132 r a a a) (* ?x327 ?x132 r r r a a p p p))))
 (let ((?x634 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x553 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x336 (+ p (* (- 1) q))))
 (let ((?x299 (+ a (* (- 1) b))))
 (let ((?x260 (* (- 1) s)))
 (let ((?x262 (+ r ?x260)))
 (let ((?x315 (* ?x262 ?x262 ?x262 ?x299 ?x299 ?x336 ?x336 ?x336 b q)))
 (let ((?x456 (+ (* ?x262 ?x262 ?x262 ?x336 b b) (* ?x262 ?x299 ?x299 ?x299 q) ?x315)))
 (let (($x708 (or (not (= (* ?x456 ?x634) 0)) (not (= (* ?x427 ?x525) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x643 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x652 (= ?x643 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x568 (* p00 s00 a)))
 (let ((?x544 (* b00 r00 p)))
 (let ((?x577 (+ ?x544 ?x568 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x535 (* q a)))
 (let (($x549 (= (+ ?x535 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x636 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x564 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x533 (* r q)))
 (and (= (+ ?x533 (* (- 1) (* s p)) ?x37 ?x564) 0) $x636 $x549 (= ?x577 0) $x652 $x708)))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x293 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x148 (* r00 b00)))
 (let ((?x130 (* s00 a00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x125 (* (- 1) (* b r))))
 (let ((?x49 (* a s)))
 (let ((?x155 (+ ?x49 ?x125 ?x137 ?x148)))
 (let ((?x509 (* a a a q r)))
 (let ((?x363 (* p b b r r r)))
 (let ((?x807 (+ ?x363 ?x509 (* (- 1) (* p a a a r)) (* (- 2) (* p a b r r r)) (* p a a r r r) (* p p p p a a a r r r) (* (- 1) (* p p p p a a b r r r)) (* (- 1) (* p p p a a a q r r r)) (* p p p a a q b r r r))))
 (let ((?x637 (* q b b b s)))
 (let ((?x648 (* (- 3) (* a q b b s))))
 (let ((?x647 (* 3 (* a a q b s))))
 (let ((?x583 (* (- 1) (* a a a q s))))
 (let ((?x579 (* (- 1) (* q b b b r))))
 (let ((?x646 (* 3 (* a q b b r))))
 (let ((?x645 (* (- 3) (* a a q b r))))
 (let ((?x485 (* q b b s s s)))
 (let ((?x479 (* (- 1) (* p b b s s s))))
 (let ((?x498 (* (- 3) (* q b b r s s))))
 (let ((?x497 (* 3 (* p b b r s s))))
 (let ((?x496 (* 3 (* q b b r r s))))
 (let ((?x494 (* (- 3) (* p b b r r s))))
 (let ((?x373 (* (- 1) (* q b b r r r))))
 (let ((?x336 (+ p (* (- 1) q))))
 (let ((?x299 (+ a (* (- 1) b))))
 (let ((?x260 (* (- 1) s)))
 (let ((?x262 (+ r ?x260)))
 (let ((?x315 (* ?x262 ?x262 ?x262 ?x299 ?x299 ?x336 ?x336 ?x336 b q)))
 (let ((?x275 (+ ?x315 ?x363 ?x373 ?x494 ?x496 ?x497 ?x498 ?x479 ?x485 ?x509 ?x645 ?x646 ?x579 ?x583 ?x647 ?x648 ?x637)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x314 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x319 (= ?x314 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x250 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x251 (= ?x250 0)))
 (let ((?x141 (* p00 b00)))
 (let ((?x136 (* q00 a00)))
 (let ((?x182 (* (- 1) ?x136)))
 (let (($x185 (= (+ (* a q) ?x182 ?x141 (* (- 1) (* p b))) 0)))
 (let (($x163 (= ?x155 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x158 (= (+ ?x33 ?x139 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x821 (and $x158 $x163 $x185 $x251 $x319 (or (not (= (* ?x275 ?x155) 0)) (not (= (* ?x807 ?x155) 0))))))
 (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x553 (* (- 1) ?x47)))
 (let ((?x525 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x553 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x132 (+ q (* (- 1) p))))
 (let ((?x340 (* (- 1) a)))
 (let ((?x327 (+ b ?x340)))
 (let ((?x427 (+ (* ?x327 ?x327 r r r p) (* ?x132 r a a a) (* ?x327 ?x132 r r r a a p p p))))
 (let ((?x456 (+ (* ?x262 ?x262 ?x262 ?x336 b b) (* ?x262 ?x299 ?x299 ?x299 q) ?x315)))
 (let (($x324 (= (* ?x456 (+ (* (- 1) (* ?x262 b)) ?x553 (* ?x299 s) ?x51)) 0)))
 (let (($x708 (or (not $x324) (not (= (* ?x427 ?x525) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x643 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x652 (= ?x643 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x568 (* p00 s00 a)))
 (let ((?x544 (* b00 r00 p)))
 (let ((?x577 (+ ?x544 ?x568 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x535 (* q a)))
 (let (($x549 (= (+ ?x535 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x636 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let (($x613 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x587 (and $x613 $x636 $x549 (= ?x577 0) $x652 $x708)))
 (rewrite (= $x587 $x821)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x699 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x553 (* (- 1) ?x47)))
 (let ((?x525 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x553 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x132 (+ q (* (- 1) p))))
 (let ((?x340 (* (- 1) a)))
 (let ((?x327 (+ b ?x340)))
 (let ((?x427 (+ (* ?x327 ?x327 r r r p) (* ?x132 r a a a) (* ?x327 ?x132 r r r a a p p p))))
 (let ((?x634 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x553 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x336 (+ p (* (- 1) q))))
 (let ((?x299 (+ a (* (- 1) b))))
 (let ((?x260 (* (- 1) s)))
 (let ((?x262 (+ r ?x260)))
 (let ((?x315 (* ?x262 ?x262 ?x262 ?x299 ?x299 ?x336 ?x336 ?x336 b q)))
 (let ((?x456 (+ (* ?x262 ?x262 ?x262 ?x336 b b) (* ?x262 ?x299 ?x299 ?x299 q) ?x315)))
 (let (($x708 (or (not (= (* ?x456 ?x634) 0)) (not (= (* ?x427 ?x525) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x643 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x652 (= ?x643 0)))
 (let ((?x592 (* a00 s00 p)))
 (let ((?x588 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x521 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x588 ?x592 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x517 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x540 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x540 ?x139 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x553 (* s a) ?x51) 0) $x517 (= ?x521 0) $x652 $x708))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x550 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x553 (* (- 1) ?x47)))
 (let ((?x525 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x553 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x132 (+ q (* (- 1) p))))
 (let ((?x340 (* (- 1) a)))
 (let ((?x327 (+ b ?x340)))
 (let ((?x427 (+ (* ?x327 ?x327 r r r p) (* ?x132 r a a a) (* ?x327 ?x132 r r r a a p p p))))
 (let ((?x634 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x553 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x336 (+ p (* (- 1) q))))
 (let ((?x299 (+ a (* (- 1) b))))
 (let ((?x260 (* (- 1) s)))
 (let ((?x262 (+ r ?x260)))
 (let ((?x315 (* ?x262 ?x262 ?x262 ?x299 ?x299 ?x336 ?x336 ?x336 b q)))
 (let ((?x456 (+ (* ?x262 ?x262 ?x262 ?x336 b b) (* ?x262 ?x299 ?x299 ?x299 q) ?x315)))
 (let (($x708 (or (not (= (* ?x456 ?x634) 0)) (not (= (* ?x427 ?x525) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x643 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x652 (= ?x643 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x568 (* p00 s00 a)))
 (let ((?x544 (* b00 r00 p)))
 (let ((?x577 (+ ?x544 ?x568 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x535 (* q a)))
 (let (($x549 (= (+ ?x535 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x636 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x564 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x533 (* r q)))
 (let (($x587 (and (= (+ ?x533 (* (- 1) (* s p)) ?x37 ?x564) 0) $x636 $x549 (= ?x577 0) $x652 $x708)))
 (let ((?x592 (* a00 s00 p)))
 (let ((?x588 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x615 (= (+ (* (- 1) ?x544) (* (- 1) ?x568) ?x65 ?x588 ?x592 (* (- 1) ?x69)) 0)))
 (let (($x517 (= (+ (* (- 1) ?x535) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x594 (and (= (+ (* (- 1) ?x533) (* s p) (* (- 1) ?x37) ?x41) 0) (= (+ (* (- 1) (* r b)) ?x553 (* s a) ?x51) 0) $x517 $x615 $x652 $x708)))
 (rewrite (= $x594 $x587)))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x114 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x105 (- q p)))
 (let ((?x98 (- b a)))
 (let ((?x108 (+ (* ?x98 ?x98 p r r r) (* a a a ?x105 r) (* a a ?x98 p p p ?x105 r r r))))
 (let ((?x51 (* b00 r00)))
 (let ((?x103 (+ (- (* (- 1) ?x98 r) (* a00 s00)) (* a (- s r)) ?x51)))
 (let ((?x84 (- r s)))
 (let ((?x90 (- p q)))
 (let ((?x87 (- a b)))
 (let ((?x94 (+ (* b b ?x90 ?x84 ?x84 ?x84) (* ?x87 ?x87 ?x87 q ?x84) (* ?x87 ?x87 b ?x90 ?x90 ?x90 q ?x84 ?x84 ?x84))))
 (let ((?x95 (* (+ (- (* (- 1) b ?x84) (* a00 s00)) (* ?x87 s) ?x51) ?x94)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x95 0)) (not (= (* ?x103 ?x108) 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x606 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x553 (* (- 1) ?x47)))
 (let ((?x525 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x553 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x132 (+ q (* (- 1) p))))
 (let ((?x340 (* (- 1) a)))
 (let ((?x327 (+ b ?x340)))
 (let ((?x427 (+ (* ?x327 ?x327 r r r p) (* ?x132 r a a a) (* ?x327 ?x132 r r r a a p p p))))
 (let ((?x634 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x553 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x336 (+ p (* (- 1) q))))
 (let ((?x299 (+ a (* (- 1) b))))
 (let ((?x260 (* (- 1) s)))
 (let ((?x262 (+ r ?x260)))
 (let ((?x315 (* ?x262 ?x262 ?x262 ?x299 ?x299 ?x336 ?x336 ?x336 b q)))
 (let ((?x456 (+ (* ?x262 ?x262 ?x262 ?x336 b b) (* ?x262 ?x299 ?x299 ?x299 q) ?x315)))
 (let (($x708 (or (not (= (* ?x456 ?x634) 0)) (not (= (* ?x427 ?x525) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x643 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x652 (= ?x643 0)))
 (let ((?x592 (* a00 s00 p)))
 (let ((?x588 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x521 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x588 ?x592 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x517 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x540 (* s p)))
 (let (($x594 (and (= (+ (* (- 1) (* r q)) ?x540 ?x139 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x553 (* s a) ?x51) 0) $x517 (= ?x521 0) $x652 $x708)))
 (let ((?x105 (- q p)))
 (let ((?x98 (- b a)))
 (let ((?x108 (+ (* ?x98 ?x98 p r r r) (* a a a ?x105 r) (* a a ?x98 p p p ?x105 r r r))))
 (let ((?x109 (* (+ (- (* (- 1) ?x98 r) ?x47) (* a (- s r)) ?x51) ?x108)))
 (let ((?x84 (- r s)))
 (let ((?x90 (- p q)))
 (let ((?x87 (- a b)))
 (let ((?x94 (+ (* b b ?x90 ?x84 ?x84 ?x84) (* ?x87 ?x87 ?x87 q ?x84) (* ?x87 ?x87 b ?x90 ?x90 ?x90 q ?x84 ?x84 ?x84))))
 (let (($x96 (= (* (+ (- (* (- 1) b ?x84) ?x47) (* ?x87 s) ?x51) ?x94) 0)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x113 (and $x44 (= (+ (- (* (- 1) b r) ?x47) (* a s) ?x51) 0) $x61 (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not $x96) (not (= ?x109 0))))))
 (rewrite (= $x113 $x594))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x115 (asserted $x114)))
 (let ((@x612 (mp (mp @x115 (quant-intro (proof-bind ?x606) (= $x114 $x699)) $x699) (rewrite (= $x699 $x699)) $x699)))
 (let ((@x159 (mp (mp @x612 (quant-intro (proof-bind ?x550) (= $x699 $x556)) $x556) (quant-intro (proof-bind ?x293) (= $x556 $x283)) $x283)))
 (let ((@x662 (mp (mp~ @x159 (sk (~ $x283 $x447)) $x447) (rewrite (= $x447 $x207)) $x207)))
 (let ((@x665 (and-elim @x662 $x834)))
 (let ((@x186 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x834) $x201)) @x665 $x201)))
 (let (($x791 (<= ?x311 0)))
 (let ((@x503 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x834) $x791)) @x665 $x791)))
 (let (($x375 (not (<= ?x672 0))))
 (let (($x703 (>= ?x206 0)))
 (let (($x698 (<= ?x206 0)))
 (let ((@x394 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x267 (not $x698) (not $x703))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x698)) @x503 @x186 false) $x698) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x703)) @x503 @x186 false) $x703) $x267)))
 (let (($x722 (>= ?x672 0)))
 (let ((@x400 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x120 $x375 (not $x722))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x722)) @x503 @x186 false) $x722) (unit-resolution (and-elim @x662 $x763) @x394 $x190) $x375)))
 ((_ th-lemma arith farkas 1 1 1) @x400 @x503 @x186 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             536
 :arith-nonlinear-horner    42
 :arith-num-rows            11
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 77
 :arith-tableau-max-rows    11
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                122.60
 :memory                    3.16
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                1601672643258.00
 :num-checks                1
 :propagations              19
 :rlimit-count              39353567
 :time                      20.02
 :total-time                20.03)
