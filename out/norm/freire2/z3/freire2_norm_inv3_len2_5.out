unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x3723 (* 3 r!2)))
 (let ((?x3912 (* (- 3) s!1)))
 (let ((?x3911 (* 6 x!0)))
 (let ((?x465 (* r00 r00 r00)))
 (let ((?x466 (* 12 ?x465)))
 (let ((?x422 (* s00 r00)))
 (let ((?x500 (* (- 6) ?x422)))
 (let ((?x497 (* (- 6) x00)))
 (let ((?x496 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2640 (+ ?x44 ?x496 ?x497 ?x500 ?x466 (* 2 (* s!1 r!2)) (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x3911 ?x3912 ?x3723)))
 (let (($x1829 (<= ?x2640 0)))
 (let (($x2667 (= ?x2640 0)))
 (let ((?x3623 (* 6 r!2)))
 (let ((?x1687 (+ 3 s!1 ?x3623)))
 (let ((?x3253 (+ 1 r!2)))
 (let ((?x2646 (* x!0 r!2)))
 (let ((?x2782 (* (- 18) ?x2646)))
 (let ((?x643 (* s00 r00 r00)))
 (let ((?x4412 (* 48 ?x643)))
 (let ((?x590 (* s!1 s!1)))
 (let ((?x2774 (* (- 2) ?x590)))
 (let ((?x587 (* s00 s00)))
 (let ((?x4415 (* (- 32) ?x587)))
 (let ((?x570 (* 24 ?x422)))
 (let ((?x4438 (* (- 144) x00)))
 (let ((?x1837 (+ (* 42 s00) (* 9 r00) ?x4438 (* (- 144) (* r00 r00)) (* 6 (* s00 r00 r00 s!1 s!1)) ?x570 (* (- 6) (* r00 r00 s!1 s!1 s!1)) (* (- 144) (* r00 x00)) ?x4415 ?x2774 ?x4412 (* (- 4) (* s00 s00 s!1 s!1 r!2)) (* 9 (* s00 s!1 s!1 r!2 r!2)) (* (- 648) (* x00 r!2 r!2 r!2 r!2)) (* (- 6) (* s00 r00 s!1 s!1 r!2 r!2)) (* 36 (* s00 r00 r00 s!1)) (* 6 (* s00 s!1 s!1)) (* (- 1296) (* r00 r00 r!2 r!2 r!2 r!2)) (* 18 (* s00 r00 s!1 r!2)) (* (- 108) (* r00 x00 s!1)) (* (- 6) (* r00 r00 s!1 s!1 s!1 r!2)) (* (- 216) (* r00 x00 s!1 r!2 r!2)) (* (- 432) (* x00 s!1 r!2)) (* (- 540) (* x00 s!1 r!2 r!2)) (* (- 1944) (* x00 r!2 r!2 r!2)) (* (- 2106) (* x00 r!2 r!2)) (* (- 2916) (* r00 r00 r!2 r!2)) (* 6 (* r00 ?x3253 ?x3253 ?x1687 ?x1687 ?x1687)) (* 2 (* ?x3253 ?x1687 ?x1687 ?x1687 ?x1687)) (* 108 (* s00 s!1 r!2 r!2 r!2)) (* (- 216) (* s00 r00 r!2 r!2 r!2 r!2)) (* (- 72) (* s00 r00 s!1 r!2 r!2 r!2)) (* (- 108) (* r00 r00 s!1 s!1 r!2 r!2)) (* 216 (* s00 r00 r00 r!2 r!2 r!2)) (* (- 1296) (* r00 r00 s!1 r!2 r!2)) (* (- 288) (* s00 s00 r!2 r!2)) (* 3 (* ?x3253 ?x1687 ?x1687 ?x1687)) (* 324 (* s00 r!2 r!2 r!2 r!2)) (* (- 72) (* s00 s00 s!1 r!2)) (* (- 18) (* r00 x00 s!1 s!1)) (* (- 144) (* s00 s00 r!2 r!2 r!2)) (* (- 48) (* s00 s00 s!1 r!2 r!2)) (* (- 54) (* s00 r00 r!2 r!2)) (* 108 (* r00 x!0 s!1)) (* 2 (* s00 ?x3253 ?x1687 ?x1687 ?x1687)) (* 864 (* s00 r!2 r!2 r!2)) (* (- 1296) (* r00 x00 r!2 r!2)) (* (- 324) (* r00 x00 s!1 r!2)) (* (- 36) (* r00 r!2 r!2)) (* (- 9) (* r00 ?x3253 ?x1687 ?x1687 ?x1687)) (* (- 648) (* r00 r00 s!1 r!2 r!2 r!2)) (* (- 18) (* r00 s!1 s!1 s!1 r!2)) (* (- 216) (* r00 s!1 s!1 r!2 r!2)) (* 1296 (* r00 x!0 r!2 r!2)) (* (- 4) (* s00 s00 s!1 s!1)) (* 270 (* s00 r00 r00 r!2)) (* (- 24) (* s00 s00 s!1)) (* 3 (* s!1 r!2)) (* (- 1098) (* r00 r00 r!2)) (* 330 (* s00 r!2)) ?x2782 (* (- 816) (* r00 s!1 r!2)) (* (- 156) (* r00 r00 s!1)) (* 144 (* r00 x!0)) (* (- 954) (* x00 r!2)) (* 34 (* s00 s!1)) (* (- 141) (* r00 s!1)) (* 87 (* s00 r00 r!2)) (* 810 (* r00 x!0 r!2)) (* (- 108) (* r00 s!1 s!1)) (* (- 108) (* x00 s!1)) (* 18 (* s00 r00 s!1)) (* (- 180) (* s00 s00 r!2)) (* 162 (* s00 s!1 r!2)) (* (- 810) (* r00 x00 r!2)) (* (- 18) (* x00 s!1 s!1 r!2 r!2)) (* (- 18) (* x00 s!1 s!1)) (* (- 216) (* x00 s!1 r!2 r!2 r!2)) (* 18 (* r00 x!0 s!1 s!1)) (* 216 (* r00 x!0 s!1 r!2 r!2)) (* 648 (* r00 x!0 r!2 r!2 r!2)) (* 324 (* r00 x!0 s!1 r!2)) (* (- 810) (* r00 r00 s!1 r!2)) (* 72 (* s00 r00 r00 s!1 r!2 r!2)) (* 432 (* s00 r00 r00 r!2 r!2)) (* (- 648) (* r00 x00 r!2 r!2 r!2)) (* (- 18) (* r00 s!1 s!1 s!1)) (* (- 3240) (* r00 r00 r!2 r!2 r!2)) (* 234 (* s00 s!1 r!2 r!2)) (* (- 54) (* r00 r00 s!1 s!1)) (* 18 (* r00 x!0 s!1 s!1 r!2)) (* (- 18) (* r!2 r!2)) (* (- 18) x!0) (* 12 s!1) (* (- 9) r!2) (* 6 (* s00 r00 r00 s!1 s!1 r!2)) (* 3 (* s00 r00 s!1 s!1)) (* 18 (* ?x3253 ?x3253 (+ x!0 (* (- 1) s!1)) ?x1687 ?x1687)) (* (- 3) (* s00 r00 s!1 s!1 r!2)) (* (- 324) (* s00 r00 r!2 r!2 r!2)) (* (- 72) (* s00 r00 s!1 r!2 r!2)) (* (- 324) (* r00 s!1 s!1 r!2)) (* (- 1296) (* r00 s!1 r!2 r!2)) (* (- 9) (* ?x3253 ?x3253 ?x1687 ?x1687 ?x1687)) (* 108 (* s00 r00 r00 s!1 r!2)) (* (- 648) (* r00 s!1 r!2 r!2 r!2)) (* 15 (* s00 s!1 s!1 r!2)) (* (- 162) (* r00 r00 s!1 s!1 r!2)) (* 837 (* s00 r!2 r!2)) (* (- 18) (* r00 x00 s!1 s!1 r!2)) (* (- 36) (* x00 s!1 s!1 r!2)))))
 (let (($x1949 (= ?x1837 0)))
 (let (($x1951 (not $x1949)))
 (let ((?x2076 (* (- 9) s!1)))
 (let ((?x2683 (* r00 r00 s!1)))
 (let ((?x954 (* 36 ?x2683)))
 (let ((?x1352 (* x00 x00)))
 (let ((?x2671 (* 108 ?x1352)))
 (let ((?x1190 (* s00 s00 s00)))
 (let ((?x2507 (* 16 ?x1190)))
 (let ((?x888 (* r00 r00 r00 x00)))
 (let ((?x4283 (* (- 432) ?x888)))
 (let ((?x811 (* s00 x00)))
 (let ((?x2870 (* (- 108) ?x811)))
 (let ((?x2938 (* (- 36) ?x643)))
 (let ((?x2543 (* 51 ?x587)))
 (let ((?x518 (* r00 x00)))
 (let ((?x1742 (* 108 ?x518)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1497 (+ ?x137 (* (- 54) ?x422) (* 108 (* x!0 x!0)) (* 216 (* s00 r00 x00)) ?x1742 ?x2543 (* 15 ?x590) ?x2938 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x2870 ?x4283 (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* 216 (* s00 r00 r00 r00)) (* (- 216) (* s00 r00 x!0)) ?x2507 ?x2671 (* (- 216) (* r00 r00 r00 s!1)) ?x954 (* (- 108) (* r00 x!0)) (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)) (* 108 (* s00 x!0)) (* 108 (* x00 s!1)) (* 108 (* s00 r00 s!1)) (* (- 108) (* x!0 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* x00 x!0)) ?x2076)))
 (let ((?x883 (* r00 r00 x00)))
 (let ((?x3804 (* 36 ?x883)))
 (let ((?x2726 (* (- 6) ?x811)))
 (let ((?x1030 (* 15 ?x587)))
 (let ((?x594 (* 54 ?x518)))
 (let ((?x1571 (* (- 24) ?x422)))
 (let ((?x1296 (+ ?x137 ?x1571 ?x594 ?x1030 (* (- 3) ?x590) ?x2938 (* 2 (* s00 s00 r00)) ?x2726 ?x3804 (* 24 (* s!1 r!2)) (* (- 24) (* s00 r!2)) (* (- 54) ?x2646) ?x954 (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) (* (- 36) (* r00 x!0 r!2)) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)) (* (- 6) (* x!0 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 s!1 r!2)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) ?x2076)))
 (let (($x1297 (= ?x1296 0)))
 (let ((?x2972 (* 4 ?x587)))
 (let ((?x519 (* 18 ?x518)))
 (let ((?x2793 (+ ?x44 (* (- 9) ?x422) ?x519 ?x2972 ?x2774 (* (- 6) ?x643) (* 9 (* s!1 r!2)) (* (- 9) (* s00 r!2)) ?x2782 (* (- 6) (* r00 s!1 r!2)) (* 6 ?x2683) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)) ?x3912)))
 (let (($x2790 (= ?x2793 0)))
 (let ((?x1443 (* (- 1) s!1)))
 (let ((?x297 (* r00 r00)))
 (let ((?x3520 (* (- 3) ?x297)))
 (let ((?x2597 (+ s00 ?x3520 (* 3 (* r!2 r!2)) ?x1443)))
 (let (($x2598 (= ?x2597 0)))
 (let (($x1640 (and $x2598 $x2667 $x2790 $x1297 (= ?x1497 0) $x1951)))
 (let ((?x3565 (+ 3 ?x3623 s!1)))
 (let ((?x4860 (* (- 48) ?x643)))
 (let ((?x4858 (* 32 ?x587)))
 (let ((?x4151 (* r!2 x!0)))
 (let ((?x2184 (* 18 ?x4151)))
 (let ((?x4150 (* 2 ?x590)))
 (let ((?x4850 (* 144 ?x518)))
 (let ((?x4844 (* 144 ?x297)))
 (let ((?x4842 (* 144 x00)))
 (let ((?x4781 (* (- 9) r00)))
 (let ((?x4782 (* (- 42) s00)))
 (let ((?x2568 (+ (* 9 r!2) (* (- 12) s!1) (* 18 x!0) ?x4782 ?x4781 ?x4842 (* 18 (* r!2 r!2)) ?x4844 (* (- 3) (* r!2 s!1)) (* 1098 (* r!2 r00 r00)) (* (- 330) (* r!2 s00)) ?x1571 ?x4850 (* 216 (* r!2 r!2 r!2 r!2 s00 r00)) ?x4150 ?x2184 (* 816 (* r!2 s!1 r00)) (* 156 (* s!1 r00 r00)) (* (- 810) (* r!2 x!0 r00)) ?x4858 (* (- 144) (* x!0 r00)) ?x4860 (* 954 (* r!2 x00)) (* 72 (* r!2 r!2 r!2 s!1 s00 r00)) (* 108 (* s!1 s!1 r00)) (* (- 34) (* s!1 s00)) (* 141 (* s!1 r00)) (* 1296 (* r!2 r!2 s!1 r00 r00)) (* (- 87) (* r!2 s00 r00)) (* 108 (* s!1 x00)) (* (- 18) (* s!1 s00 r00)) (* 180 (* r!2 s00 s00)) (* (- 162) (* r!2 s!1 s00)) (* (- 6) (* s!1 s!1 s00)) (* 810 (* r!2 r00 x00)) (* 6 (* r!2 r!2 s!1 s!1 s00 r00)) (* 54 (* s!1 s!1 r00 r00)) (* 288 (* r!2 r!2 s00 s00)) (* 72 (* r!2 s!1 s00 s00)) (* 18 (* s!1 s!1 r00 x00)) (* 144 (* r!2 r!2 r!2 s00 s00)) (* 48 (* r!2 r!2 s!1 s00 s00)) (* 1296 (* r!2 r!2 r00 x00)) (* 9 (* r00 ?x3253 ?x3565 ?x3565 ?x3565)) (* 36 (* r!2 r!2 r00)) (* 810 (* r!2 s!1 r00 r00)) (* (- 837) (* r!2 r!2 s00)) (* 162 (* r!2 s!1 s!1 r00 r00)) (* (- 15) (* r!2 s!1 s!1 s00)) (* (- 9) (* r!2 r!2 s!1 s!1 s00)) (* (- 108) (* r!2 r!2 r!2 s!1 s00)) (* (- 234) (* r!2 r!2 s!1 s00)) (* (- 324) (* r!2 r!2 r!2 r!2 s00)) (* (- 864) (* r!2 r!2 r!2 s00)) (* 2916 (* r!2 r!2 r00 r00)) (* 3240 (* r!2 r!2 r!2 r00 r00)) (* 1296 (* r!2 r!2 r!2 r!2 r00 r00)) (* (- 270) (* r!2 s00 r00 r00)) (* 648 (* r!2 r!2 r!2 s!1 r00 r00)) (* (- 432) (* r!2 r!2 s00 r00 r00)) (* (- 36) (* s!1 s00 r00 r00)) (* (- 108) (* r!2 s!1 s00 r00 r00)) (* 108 (* r!2 r!2 s!1 s!1 r00 r00)) (* (- 216) (* r!2 r!2 r!2 s00 r00 r00)) (* (- 72) (* r!2 r!2 s!1 s00 r00 r00)) (* (- 6) (* s!1 s!1 s00 r00 r00)) (* (- 6) (* r!2 s!1 s!1 s00 r00 r00)) (* 6 (* s!1 s!1 s!1 r00 r00)) (* 6 (* r!2 s!1 s!1 s!1 r00 r00)) (* (- 2) (* s00 ?x3253 ?x3565 ?x3565 ?x3565)) (* 324 (* r!2 s!1 r00 x00)) (* 1296 (* r!2 r!2 s!1 r00)) (* 324 (* r!2 s!1 s!1 r00)) (* 648 (* r!2 r!2 r!2 s!1 r00)) (* 216 (* r!2 r!2 s!1 r00 x00)) (* 216 (* r!2 r!2 s!1 s!1 r00)) (* 18 (* s!1 s!1 s!1 r00)) (* 18 (* r!2 s!1 s!1 s!1 r00)) (* (- 1296) (* r!2 r!2 x!0 r00)) (* (- 108) (* s!1 x!0 r00)) (* (- 324) (* r!2 s!1 x!0 r00)) (* (- 648) (* r!2 r!2 r!2 x!0 r00)) (* (- 216) (* r!2 r!2 s!1 x!0 r00)) (* (- 18) (* s!1 s!1 x!0 r00)) (* (- 18) (* r!2 s!1 s!1 x!0 r00)) (* 9 (* ?x3253 ?x3253 ?x3565 ?x3565 ?x3565)) (* 18 (* r!2 s!1 s!1 r00 x00)) (* 54 (* r!2 r!2 s00 r00)) (* 108 (* s!1 r00 x00)) (* (- 18) (* r!2 s!1 s00 r00)) (* 324 (* r!2 r!2 r!2 s00 r00)) (* 72 (* r!2 r!2 s!1 s00 r00)) (* (- 3) (* s!1 s!1 s00 r00)) (* 3 (* r!2 s!1 s!1 s00 r00)) (* (- 3) (* ?x3253 ?x3565 ?x3565 ?x3565)) (* (- 2) (* ?x3253 ?x3565 ?x3565 ?x3565 ?x3565)) (* 648 (* r!2 r!2 r!2 r00 x00)) (* 2106 (* r!2 r!2 x00)) (* 1944 (* r!2 r!2 r!2 x00)) (* 540 (* r!2 r!2 s!1 x00)) (* 432 (* r!2 s!1 x00)) (* 648 (* r!2 r!2 r!2 r!2 x00)) (* (- 18) (* ?x3253 ?x3253 (+ ?x1443 x!0) ?x3565 ?x3565)) (* 24 (* s!1 s00 s00)) (* 4 (* s!1 s!1 s00 s00)) (* 4 (* r!2 s!1 s!1 s00 s00)) (* 216 (* r!2 r!2 r!2 s!1 x00)) (* 18 (* s!1 s!1 x00)) (* 36 (* r!2 s!1 s!1 x00)) (* 18 (* r!2 r!2 s!1 s!1 x00)) (* (- 6) (* r00 ?x3253 ?x3253 ?x3565 ?x3565 ?x3565)))))
 (let ((?x1382 (* (- 108) ?x1352)))
 (let ((?x1381 (* (- 16) ?x1190)))
 (let ((?x1062 (* s00 r00 r00 r00)))
 (let ((?x1377 (* (- 216) ?x1062)))
 (let ((?x889 (* 432 ?x888)))
 (let ((?x1135 (* 108 ?x811)))
 (let ((?x753 (* s00 s00 r00 r00)))
 (let ((?x754 (* 36 ?x753)))
 (let ((?x688 (* s00 s00 r00)))
 (let ((?x1018 (* 108 ?x688)))
 (let ((?x1006 (* 36 ?x643)))
 (let ((?x1371 (* (- 51) ?x587)))
 (let ((?x1992 (* s!1 r00 r00)))
 (let ((?x3790 (* (- 36) ?x1992)))
 (let ((?x1368 (* (- 108) ?x518)))
 (let ((?x511 (* s00 r00 x00)))
 (let ((?x1367 (* (- 216) ?x511)))
 (let ((?x522 (* 54 ?x422)))
 (let ((?x993 (* (- 9) s00)))
 (let ((?x3802 (* 9 s!1)))
 (let ((?x436 (+ ?x3802 ?x993 ?x522 ?x1367 ?x1368 (* (- 15) ?x590) ?x3790 ?x1371 (* 108 (* x!0 r00)) (* (- 108) (* x!0 s00)) (* 216 (* s!1 r00 r00 r00)) ?x1006 (* 66 (* s!1 s00)) ?x1018 (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x754 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1135 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x889 (* 12 (* s!1 s!1 s00)) ?x1377 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1381 (* 216 (* x!0 x00)) ?x1382)))
 (let ((?x896 (* (- 36) ?x883)))
 (let ((?x812 (* 6 ?x811)))
 (let ((?x706 (* (- 2) ?x688)))
 (let ((?x922 (* (- 15) ?x587)))
 (let ((?x555 (* (- 54) ?x518)))
 (let ((?x1046 (+ ?x3802 ?x993 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x570 ?x555 (* 3 ?x590) (* 54 ?x4151) ?x3790 (* 36 (* r!2 x!0 r00)) ?x922 (* 54 (* x!0 r00)) (* (- 6) (* x!0 s00)) ?x1006 (* (- 54) (* r!2 x00)) (* 4 (* s!1 s!1 r00)) (* 12 (* s!1 s00)) ?x706 (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x812 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x896 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x644 (* 6 ?x643)))
 (let ((?x600 (* (- 4) ?x587)))
 (let ((?x532 (* (- 18) ?x518)))
 (let ((?x537 (* 9 ?x422)))
 (let ((?x374 (* (- 3) s00)))
 (let ((?x3803 (+ (* 3 s!1) ?x374 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x537 ?x532 ?x4150 ?x2184 (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1992) ?x600 (* 18 (* x!0 r00)) ?x644 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x3167 (+ ?x3723 ?x3912 ?x3911 ?x44 ?x496 ?x497 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x500 ?x466)))
 (let (($x3782 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x297)) 0)))
 (let (($x2573 (and $x3782 (= ?x3167 0) (= ?x3803 0) (= ?x1046 0) (= ?x436 0) (not (= ?x2568 0)))))
 (let (($x4968 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1392 (+ 3 ?x213 s)))
 (let ((?x1389 (+ 1 r)))
 (let ((?x4568 (* 324 (* r r r s00 r00))))
 (let ((?x643 (* s00 r00 r00)))
 (let ((?x4860 (* (- 48) ?x643)))
 (let ((?x587 (* s00 s00)))
 (let ((?x4858 (* 32 ?x587)))
 (let ((?x545 (* r x)))
 (let ((?x546 (* 18 ?x545)))
 (let ((?x541 (* s s)))
 (let ((?x542 (* 2 ?x541)))
 (let ((?x518 (* r00 x00)))
 (let ((?x4850 (* 144 ?x518)))
 (let ((?x422 (* s00 r00)))
 (let ((?x1571 (* (- 24) ?x422)))
 (let ((?x297 (* r00 r00)))
 (let ((?x4844 (* 144 ?x297)))
 (let ((?x4842 (* 144 x00)))
 (let ((?x4781 (* (- 9) r00)))
 (let ((?x4782 (* (- 42) s00)))
 (let ((?x4962 (+ (* 9 r) (* (- 12) s) (* 18 x) ?x4782 ?x4781 ?x4842 (* 18 (* r r)) ?x4844 (* (- 3) (* r s)) (* 1098 (* r r00 r00)) (* (- 330) (* r s00)) ?x1571 ?x4850 (* 216 (* r r r r s00 r00)) ?x542 ?x546 (* 816 (* r s r00)) (* 156 (* s r00 r00)) (* (- 810) (* r x r00)) ?x4858 (* (- 144) (* x r00)) ?x4860 (* 954 (* r x00)) (* 72 (* r r r s s00 r00)) (* 108 (* s s r00)) (* (- 34) (* s s00)) (* 141 (* s r00)) (* 1296 (* r r s r00 r00)) (* (- 87) (* r s00 r00)) (* 108 (* s x00)) (* (- 18) (* s s00 r00)) (* 180 (* r s00 s00)) (* (- 162) (* r s s00)) (* (- 6) (* s s s00)) (* 810 (* r r00 x00)) (* 6 (* r r s s s00 r00)) (* 54 (* s s r00 r00)) (* 288 (* r r s00 s00)) (* 72 (* r s s00 s00)) (* 18 (* s s r00 x00)) (* 144 (* r r r s00 s00)) (* 48 (* r r s s00 s00)) (* 1296 (* r r r00 x00)) (* 9 (* r00 ?x1389 ?x1392 ?x1392 ?x1392)) (* 36 (* r r r00)) (* 810 (* r s r00 r00)) (* (- 837) (* r r s00)) (* 162 (* r s s r00 r00)) (* (- 15) (* r s s s00)) (* (- 9) (* r r s s s00)) (* (- 108) (* r r r s s00)) (* (- 234) (* r r s s00)) (* (- 324) (* r r r r s00)) (* (- 864) (* r r r s00)) (* 2916 (* r r r00 r00)) (* 3240 (* r r r r00 r00)) (* 1296 (* r r r r r00 r00)) (* (- 270) (* r s00 r00 r00)) (* 648 (* r r r s r00 r00)) (* (- 432) (* r r s00 r00 r00)) (* (- 36) (* s s00 r00 r00)) (* (- 108) (* r s s00 r00 r00)) (* 108 (* r r s s r00 r00)) (* (- 216) (* r r r s00 r00 r00)) (* (- 72) (* r r s s00 r00 r00)) (* (- 6) (* s s s00 r00 r00)) (* (- 6) (* r s s s00 r00 r00)) (* 6 (* s s s r00 r00)) (* 6 (* r s s s r00 r00)) (* (- 2) (* s00 ?x1389 ?x1392 ?x1392 ?x1392)) (* 324 (* r s r00 x00)) (* 1296 (* r r s r00)) (* 324 (* r s s r00)) (* 648 (* r r r s r00)) (* 216 (* r r s r00 x00)) (* 216 (* r r s s r00)) (* 18 (* s s s r00)) (* 18 (* r s s s r00)) (* (- 1296) (* r r x r00)) (* (- 108) (* s x r00)) (* (- 324) (* r s x r00)) (* (- 648) (* r r r x r00)) (* (- 216) (* r r s x r00)) (* (- 18) (* s s x r00)) (* (- 18) (* r s s x r00)) (* 9 (* ?x1389 ?x1389 ?x1392 ?x1392 ?x1392)) (* 18 (* r s s r00 x00)) (* 54 (* r r s00 r00)) (* 108 (* s r00 x00)) (* (- 18) (* r s s00 r00)) ?x4568 (* 72 (* r r s s00 r00)) (* (- 3) (* s s s00 r00)) (* 3 (* r s s s00 r00)) (* (- 3) (* ?x1389 ?x1392 ?x1392 ?x1392)) (* (- 2) (* ?x1389 ?x1392 ?x1392 ?x1392 ?x1392)) (* 648 (* r r r r00 x00)) (* 2106 (* r r x00)) (* 1944 (* r r r x00)) (* 540 (* r r s x00)) (* 432 (* r s x00)) (* 648 (* r r r r x00)) (* (- 18) (* ?x1389 ?x1389 (+ (* (- 1) s) x) ?x1392 ?x1392)) (* 24 (* s s00 s00)) (* 4 (* s s s00 s00)) (* 4 (* r s s s00 s00)) (* 216 (* r r r s x00)) (* 18 (* s s x00)) (* 36 (* r s s x00)) (* 18 (* r r s s x00)) (* (- 6) (* r00 ?x1389 ?x1389 ?x1392 ?x1392 ?x1392)))))
 (let ((?x1352 (* x00 x00)))
 (let ((?x1382 (* (- 108) ?x1352)))
 (let ((?x1190 (* s00 s00 s00)))
 (let ((?x1381 (* (- 16) ?x1190)))
 (let ((?x1062 (* s00 r00 r00 r00)))
 (let ((?x1377 (* (- 216) ?x1062)))
 (let ((?x888 (* r00 r00 r00 x00)))
 (let ((?x889 (* 432 ?x888)))
 (let ((?x811 (* s00 x00)))
 (let ((?x1135 (* 108 ?x811)))
 (let ((?x753 (* s00 s00 r00 r00)))
 (let ((?x754 (* 36 ?x753)))
 (let ((?x688 (* s00 s00 r00)))
 (let ((?x1018 (* 108 ?x688)))
 (let ((?x1006 (* 36 ?x643)))
 (let ((?x1371 (* (- 51) ?x587)))
 (let ((?x561 (* s r00 r00)))
 (let ((?x870 (* (- 36) ?x561)))
 (let ((?x1368 (* (- 108) ?x518)))
 (let ((?x511 (* s00 r00 x00)))
 (let ((?x1367 (* (- 216) ?x511)))
 (let ((?x522 (* 54 ?x422)))
 (let ((?x993 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1383 (+ ?x143 ?x993 ?x522 ?x1367 ?x1368 (* (- 15) ?x541) ?x870 ?x1371 (* 108 (* x r00)) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x1006 (* 66 (* s s00)) ?x1018 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x754 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1135 (* 108 (* s x)) (* (- 108) (* x x)) ?x889 (* 12 (* s s s00)) ?x1377 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1381 (* 216 (* x x00)) ?x1382)))
 (let (($x1384 (= ?x1383 0)))
 (let ((?x883 (* r00 r00 x00)))
 (let ((?x896 (* (- 36) ?x883)))
 (let ((?x812 (* 6 ?x811)))
 (let ((?x706 (* (- 2) ?x688)))
 (let ((?x922 (* (- 15) ?x587)))
 (let ((?x573 (* 3 ?x541)))
 (let ((?x555 (* (- 54) ?x518)))
 (let ((?x570 (* 24 ?x422)))
 (let ((?x1085 (+ ?x143 ?x993 (* (- 24) (* r s)) (* 24 (* r s00)) ?x570 ?x555 ?x573 (* 54 ?x545) ?x870 (* 36 (* r x r00)) ?x922 (* 54 (* x r00)) (* (- 6) (* x s00)) ?x1006 (* (- 54) (* r x00)) (* 4 (* s s r00)) (* 12 (* s s00)) ?x706 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x812 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x896 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1090 (= ?x1085 0)))
 (let ((?x644 (* 6 ?x643)))
 (let ((?x600 (* (- 4) ?x587)))
 (let ((?x532 (* (- 18) ?x518)))
 (let ((?x537 (* 9 ?x422)))
 (let ((?x374 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x741 (+ ?x47 ?x374 (* (- 9) (* r s)) (* 9 (* r s00)) ?x537 ?x532 ?x542 ?x546 (* 6 (* r s r00)) (* (- 6) ?x561) ?x600 (* 18 (* x r00)) ?x644 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x748 (= ?x741 0)))
 (let ((?x465 (* r00 r00 r00)))
 (let ((?x466 (* 12 ?x465)))
 (let ((?x500 (* (- 6) ?x422)))
 (let ((?x497 (* (- 6) x00)))
 (let ((?x496 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x495 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x501 (+ ?x43 ?x495 ?x56 ?x44 ?x496 ?x497 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x500 ?x466)))
 (let (($x502 (= ?x501 0)))
 (let (($x330 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x297)) 0)))
 (and $x330 $x502 $x748 $x1090 $x1384 (not (= ?x4962 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1110 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x3661 (+ 3 s ?x213)))
 (let ((?x1389 (+ 1 r)))
 (let ((?x2669 (* r00 ?x1389 ?x1389 ?x3661 ?x3661 ?x3661)))
 (let ((?x495 (* (- 3) s)))
 (let ((?x2917 (* r00 r00 s00)))
 (let ((?x2970 (* (- 6) ?x2917)))
 (let ((?x44 (* 3 s00)))
 (let ((?x587 (* s00 s00)))
 (let ((?x2972 (* 4 ?x587)))
 (let ((?x2271 (* r00 s00)))
 (let ((?x2962 (* (- 9) ?x2271)))
 (let ((?x518 (* r00 x00)))
 (let ((?x519 (* 18 ?x518)))
 (let ((?x3391 (+ (* 9 (* ?x1389 ?x3661)) ?x519 (* (- 18) (* r00 x00 ?x1389 ?x3661 ?x3661)) (* (- 9) (* r00 ?x1389 ?x3661 ?x3661 ?x3661)) ?x2962 (* (- 2) (* ?x3661 ?x3661)) (* (- 18) (* ?x1389 (+ x (* (- 1) s)))) (* (- 6) (* r00 ?x1389 ?x3661)) (* (- 9) (* ?x1389 ?x1389 ?x3661 ?x3661 ?x3661)) (* 2 (* s00 ?x1389 ?x3661 ?x3661 ?x3661)) (* 6 (* r00 r00 s00 ?x1389 ?x3661 ?x3661)) (* (- 2) (* s00 ?x3661)) (* 18 (* r00 ?x1389 (+ x (* (- 1) s)) ?x3661 ?x3661)) (* 9 (* r00 s00 ?x1389 ?x3661 ?x3661)) (* 2 (* ?x1389 ?x3661 ?x3661 ?x3661 ?x3661)) (* 3 (* ?x1389 ?x3661 ?x3661 ?x3661)) (* 6 (* r00 r00 ?x3661)) (* (- 6) (* r00 r00 ?x1389 ?x3661 ?x3661 ?x3661)) ?x2972 (* (- 18) (* r00 (+ x (* (- 1) s)))) ?x44 (* 18 (* ?x1389 ?x1389 (+ x (* (- 1) s)) ?x3661 ?x3661)) ?x2970 (* 18 (* x00 ?x1389)) ?x495 (* (- 18) r) (* 9 (* s00 ?x1389 ?x1389 ?x3661 ?x3661)) (* (- 9) (* s00 ?x1389)) (* (- 6) (* r00 s00 ?x1389 ?x1389 ?x3661 ?x3661)) (* (- 4) (* s00 s00 ?x1389 ?x3661 ?x3661)) (* 9 (* r00 ?x3661)) (* (- 3) (* s00 ?x1389 ?x3661 ?x3661)) (* (- 18) (* x00 ?x1389 ?x1389 ?x3661 ?x3661)) (* 6 (* r00 s00 ?x1389)) (* 6 ?x2669))))
 (let ((?x1352 (* x00 x00)))
 (let ((?x2671 (* 108 ?x1352)))
 (let ((?x3572 (* (- 9) s)))
 (let ((?x1423 (* (- 36) ?x2917)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2543 (* 51 ?x587)))
 (let ((?x1401 (* r00 r00 s)))
 (let ((?x4168 (* 36 ?x1401)))
 (let ((?x1190 (* s00 s00 s00)))
 (let ((?x2507 (* 16 ?x1190)))
 (let ((?x811 (* s00 x00)))
 (let ((?x2870 (* (- 108) ?x811)))
 (let ((?x888 (* r00 r00 r00 x00)))
 (let ((?x4283 (* (- 432) ?x888)))
 (let ((?x1742 (* 108 ?x518)))
 (let ((?x1652 (+ (* 216 (* r00 s00 x00)) ?x1742 (* (- 54) ?x2271) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4283 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2870 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2507 (* (- 108) (* x s)) ?x4168 ?x2543 (* (- 108) (* r00 x)) ?x137 ?x1423 ?x3572 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2671)))
 (let (($x1017 (= ?x1652 0)))
 (let ((?x1030 (* 15 ?x587)))
 (let ((?x883 (* r00 r00 x00)))
 (let ((?x3804 (* 36 ?x883)))
 (let ((?x2726 (* (- 6) ?x811)))
 (let ((?x594 (* 54 ?x518)))
 (let ((?x3982 (+ (* 24 (* s r)) ?x594 (* (- 36) (* r00 x r)) (* (- 24) ?x2271) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2726 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4168 ?x3804 ?x1030 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1423 (* 54 (* x00 r)) ?x3572 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x2756 (* r00 x)))
 (let ((?x4540 (* (- 18) ?x2756)))
 (let ((?x541 (* s s)))
 (let ((?x4445 (* (- 2) ?x541)))
 (let ((?x4170 (+ (* 9 (* s r)) ?x519 ?x2962 ?x4445 (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1401) ?x2972 ?x4540 ?x44 ?x2970 (* 18 (* x00 r)) ?x495 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x465 (* r00 r00 r00)))
 (let ((?x466 (* 12 ?x465)))
 (let ((?x497 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x496 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2102 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x495 ?x496 (* 4 (* s00 r)) (* (- 6) ?x2271) ?x56 ?x497 ?x466)))
 (let ((?x297 (* r00 r00)))
 (let ((?x3520 (* (- 3) ?x297)))
 (let ((?x276 (* (- 1) s)))
 (let (($x3647 (= (+ s00 ?x276 (* 3 (* r r)) ?x3520) 0)))
 (and $x3647 (= ?x2102 0) (= ?x4170 0) (= ?x3982 0) $x1017 (not (= ?x3391 9))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x4970 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1392 (+ 3 ?x213 s)))
 (let ((?x1389 (+ 1 r)))
 (let ((?x4568 (* 324 (* r r r s00 r00))))
 (let ((?x643 (* s00 r00 r00)))
 (let ((?x4860 (* (- 48) ?x643)))
 (let ((?x587 (* s00 s00)))
 (let ((?x4858 (* 32 ?x587)))
 (let ((?x545 (* r x)))
 (let ((?x546 (* 18 ?x545)))
 (let ((?x541 (* s s)))
 (let ((?x542 (* 2 ?x541)))
 (let ((?x518 (* r00 x00)))
 (let ((?x4850 (* 144 ?x518)))
 (let ((?x422 (* s00 r00)))
 (let ((?x1571 (* (- 24) ?x422)))
 (let ((?x297 (* r00 r00)))
 (let ((?x4844 (* 144 ?x297)))
 (let ((?x4842 (* 144 x00)))
 (let ((?x4781 (* (- 9) r00)))
 (let ((?x4782 (* (- 42) s00)))
 (let ((?x4962 (+ (* 9 r) (* (- 12) s) (* 18 x) ?x4782 ?x4781 ?x4842 (* 18 (* r r)) ?x4844 (* (- 3) (* r s)) (* 1098 (* r r00 r00)) (* (- 330) (* r s00)) ?x1571 ?x4850 (* 216 (* r r r r s00 r00)) ?x542 ?x546 (* 816 (* r s r00)) (* 156 (* s r00 r00)) (* (- 810) (* r x r00)) ?x4858 (* (- 144) (* x r00)) ?x4860 (* 954 (* r x00)) (* 72 (* r r r s s00 r00)) (* 108 (* s s r00)) (* (- 34) (* s s00)) (* 141 (* s r00)) (* 1296 (* r r s r00 r00)) (* (- 87) (* r s00 r00)) (* 108 (* s x00)) (* (- 18) (* s s00 r00)) (* 180 (* r s00 s00)) (* (- 162) (* r s s00)) (* (- 6) (* s s s00)) (* 810 (* r r00 x00)) (* 6 (* r r s s s00 r00)) (* 54 (* s s r00 r00)) (* 288 (* r r s00 s00)) (* 72 (* r s s00 s00)) (* 18 (* s s r00 x00)) (* 144 (* r r r s00 s00)) (* 48 (* r r s s00 s00)) (* 1296 (* r r r00 x00)) (* 9 (* r00 ?x1389 ?x1392 ?x1392 ?x1392)) (* 36 (* r r r00)) (* 810 (* r s r00 r00)) (* (- 837) (* r r s00)) (* 162 (* r s s r00 r00)) (* (- 15) (* r s s s00)) (* (- 9) (* r r s s s00)) (* (- 108) (* r r r s s00)) (* (- 234) (* r r s s00)) (* (- 324) (* r r r r s00)) (* (- 864) (* r r r s00)) (* 2916 (* r r r00 r00)) (* 3240 (* r r r r00 r00)) (* 1296 (* r r r r r00 r00)) (* (- 270) (* r s00 r00 r00)) (* 648 (* r r r s r00 r00)) (* (- 432) (* r r s00 r00 r00)) (* (- 36) (* s s00 r00 r00)) (* (- 108) (* r s s00 r00 r00)) (* 108 (* r r s s r00 r00)) (* (- 216) (* r r r s00 r00 r00)) (* (- 72) (* r r s s00 r00 r00)) (* (- 6) (* s s s00 r00 r00)) (* (- 6) (* r s s s00 r00 r00)) (* 6 (* s s s r00 r00)) (* 6 (* r s s s r00 r00)) (* (- 2) (* s00 ?x1389 ?x1392 ?x1392 ?x1392)) (* 324 (* r s r00 x00)) (* 1296 (* r r s r00)) (* 324 (* r s s r00)) (* 648 (* r r r s r00)) (* 216 (* r r s r00 x00)) (* 216 (* r r s s r00)) (* 18 (* s s s r00)) (* 18 (* r s s s r00)) (* (- 1296) (* r r x r00)) (* (- 108) (* s x r00)) (* (- 324) (* r s x r00)) (* (- 648) (* r r r x r00)) (* (- 216) (* r r s x r00)) (* (- 18) (* s s x r00)) (* (- 18) (* r s s x r00)) (* 9 (* ?x1389 ?x1389 ?x1392 ?x1392 ?x1392)) (* 18 (* r s s r00 x00)) (* 54 (* r r s00 r00)) (* 108 (* s r00 x00)) (* (- 18) (* r s s00 r00)) ?x4568 (* 72 (* r r s s00 r00)) (* (- 3) (* s s s00 r00)) (* 3 (* r s s s00 r00)) (* (- 3) (* ?x1389 ?x1392 ?x1392 ?x1392)) (* (- 2) (* ?x1389 ?x1392 ?x1392 ?x1392 ?x1392)) (* 648 (* r r r r00 x00)) (* 2106 (* r r x00)) (* 1944 (* r r r x00)) (* 540 (* r r s x00)) (* 432 (* r s x00)) (* 648 (* r r r r x00)) (* (- 18) (* ?x1389 ?x1389 (+ (* (- 1) s) x) ?x1392 ?x1392)) (* 24 (* s s00 s00)) (* 4 (* s s s00 s00)) (* 4 (* r s s s00 s00)) (* 216 (* r r r s x00)) (* 18 (* s s x00)) (* 36 (* r s s x00)) (* 18 (* r r s s x00)) (* (- 6) (* r00 ?x1389 ?x1389 ?x1392 ?x1392 ?x1392)))))
 (let ((?x1352 (* x00 x00)))
 (let ((?x1382 (* (- 108) ?x1352)))
 (let ((?x1190 (* s00 s00 s00)))
 (let ((?x1381 (* (- 16) ?x1190)))
 (let ((?x1062 (* s00 r00 r00 r00)))
 (let ((?x1377 (* (- 216) ?x1062)))
 (let ((?x888 (* r00 r00 r00 x00)))
 (let ((?x889 (* 432 ?x888)))
 (let ((?x811 (* s00 x00)))
 (let ((?x1135 (* 108 ?x811)))
 (let ((?x753 (* s00 s00 r00 r00)))
 (let ((?x754 (* 36 ?x753)))
 (let ((?x688 (* s00 s00 r00)))
 (let ((?x1018 (* 108 ?x688)))
 (let ((?x1006 (* 36 ?x643)))
 (let ((?x1371 (* (- 51) ?x587)))
 (let ((?x561 (* s r00 r00)))
 (let ((?x870 (* (- 36) ?x561)))
 (let ((?x1368 (* (- 108) ?x518)))
 (let ((?x511 (* s00 r00 x00)))
 (let ((?x1367 (* (- 216) ?x511)))
 (let ((?x522 (* 54 ?x422)))
 (let ((?x993 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1383 (+ ?x143 ?x993 ?x522 ?x1367 ?x1368 (* (- 15) ?x541) ?x870 ?x1371 (* 108 (* x r00)) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x1006 (* 66 (* s s00)) ?x1018 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x754 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1135 (* 108 (* s x)) (* (- 108) (* x x)) ?x889 (* 12 (* s s s00)) ?x1377 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1381 (* 216 (* x x00)) ?x1382)))
 (let (($x1384 (= ?x1383 0)))
 (let ((?x883 (* r00 r00 x00)))
 (let ((?x896 (* (- 36) ?x883)))
 (let ((?x812 (* 6 ?x811)))
 (let ((?x706 (* (- 2) ?x688)))
 (let ((?x922 (* (- 15) ?x587)))
 (let ((?x573 (* 3 ?x541)))
 (let ((?x555 (* (- 54) ?x518)))
 (let ((?x570 (* 24 ?x422)))
 (let ((?x1085 (+ ?x143 ?x993 (* (- 24) (* r s)) (* 24 (* r s00)) ?x570 ?x555 ?x573 (* 54 ?x545) ?x870 (* 36 (* r x r00)) ?x922 (* 54 (* x r00)) (* (- 6) (* x s00)) ?x1006 (* (- 54) (* r x00)) (* 4 (* s s r00)) (* 12 (* s s00)) ?x706 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x812 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x896 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1090 (= ?x1085 0)))
 (let ((?x644 (* 6 ?x643)))
 (let ((?x600 (* (- 4) ?x587)))
 (let ((?x532 (* (- 18) ?x518)))
 (let ((?x537 (* 9 ?x422)))
 (let ((?x374 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x741 (+ ?x47 ?x374 (* (- 9) (* r s)) (* 9 (* r s00)) ?x537 ?x532 ?x542 ?x546 (* 6 (* r s r00)) (* (- 6) ?x561) ?x600 (* 18 (* x r00)) ?x644 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x748 (= ?x741 0)))
 (let ((?x465 (* r00 r00 r00)))
 (let ((?x466 (* 12 ?x465)))
 (let ((?x500 (* (- 6) ?x422)))
 (let ((?x497 (* (- 6) x00)))
 (let ((?x496 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x495 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x501 (+ ?x43 ?x495 ?x56 ?x44 ?x496 ?x497 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x500 ?x466)))
 (let (($x502 (= ?x501 0)))
 (let (($x330 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x297)) 0)))
 (let (($x4194 (and $x330 $x502 $x748 $x1090 $x1384 (not (= ?x4962 0)))))
 (let ((?x3661 (+ 3 s ?x213)))
 (let ((?x2669 (* r00 ?x1389 ?x1389 ?x3661 ?x3661 ?x3661)))
 (let ((?x2917 (* r00 r00 s00)))
 (let ((?x2970 (* (- 6) ?x2917)))
 (let ((?x2972 (* 4 ?x587)))
 (let ((?x2271 (* r00 s00)))
 (let ((?x2962 (* (- 9) ?x2271)))
 (let ((?x519 (* 18 ?x518)))
 (let ((?x3391 (+ (* 9 (* ?x1389 ?x3661)) ?x519 (* (- 18) (* r00 x00 ?x1389 ?x3661 ?x3661)) (* (- 9) (* r00 ?x1389 ?x3661 ?x3661 ?x3661)) ?x2962 (* (- 2) (* ?x3661 ?x3661)) (* (- 18) (* ?x1389 (+ x (* (- 1) s)))) (* (- 6) (* r00 ?x1389 ?x3661)) (* (- 9) (* ?x1389 ?x1389 ?x3661 ?x3661 ?x3661)) (* 2 (* s00 ?x1389 ?x3661 ?x3661 ?x3661)) (* 6 (* r00 r00 s00 ?x1389 ?x3661 ?x3661)) (* (- 2) (* s00 ?x3661)) (* 18 (* r00 ?x1389 (+ x (* (- 1) s)) ?x3661 ?x3661)) (* 9 (* r00 s00 ?x1389 ?x3661 ?x3661)) (* 2 (* ?x1389 ?x3661 ?x3661 ?x3661 ?x3661)) (* 3 (* ?x1389 ?x3661 ?x3661 ?x3661)) (* 6 (* r00 r00 ?x3661)) (* (- 6) (* r00 r00 ?x1389 ?x3661 ?x3661 ?x3661)) ?x2972 (* (- 18) (* r00 (+ x (* (- 1) s)))) ?x44 (* 18 (* ?x1389 ?x1389 (+ x (* (- 1) s)) ?x3661 ?x3661)) ?x2970 (* 18 (* x00 ?x1389)) ?x495 (* (- 18) r) (* 9 (* s00 ?x1389 ?x1389 ?x3661 ?x3661)) (* (- 9) (* s00 ?x1389)) (* (- 6) (* r00 s00 ?x1389 ?x1389 ?x3661 ?x3661)) (* (- 4) (* s00 s00 ?x1389 ?x3661 ?x3661)) (* 9 (* r00 ?x3661)) (* (- 3) (* s00 ?x1389 ?x3661 ?x3661)) (* (- 18) (* x00 ?x1389 ?x1389 ?x3661 ?x3661)) (* 6 (* r00 s00 ?x1389)) (* 6 ?x2669))))
 (let ((?x2671 (* 108 ?x1352)))
 (let ((?x3572 (* (- 9) s)))
 (let ((?x1423 (* (- 36) ?x2917)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2543 (* 51 ?x587)))
 (let ((?x1401 (* r00 r00 s)))
 (let ((?x4168 (* 36 ?x1401)))
 (let ((?x2507 (* 16 ?x1190)))
 (let ((?x2870 (* (- 108) ?x811)))
 (let ((?x4283 (* (- 432) ?x888)))
 (let ((?x1742 (* 108 ?x518)))
 (let ((?x1652 (+ (* 216 (* r00 s00 x00)) ?x1742 (* (- 54) ?x2271) (* 15 ?x541) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4283 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2870 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2507 (* (- 108) (* x s)) ?x4168 ?x2543 (* (- 108) (* r00 x)) ?x137 ?x1423 ?x3572 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2671)))
 (let (($x1017 (= ?x1652 0)))
 (let ((?x1030 (* 15 ?x587)))
 (let ((?x3804 (* 36 ?x883)))
 (let ((?x2726 (* (- 6) ?x811)))
 (let ((?x594 (* 54 ?x518)))
 (let ((?x3982 (+ (* 24 (* s r)) ?x594 (* (- 36) (* r00 x r)) (* (- 24) ?x2271) (* (- 3) ?x541) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2726 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4168 ?x3804 ?x1030 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1423 (* 54 (* x00 r)) ?x3572 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x2756 (* r00 x)))
 (let ((?x4540 (* (- 18) ?x2756)))
 (let ((?x4445 (* (- 2) ?x541)))
 (let ((?x4170 (+ (* 9 (* s r)) ?x519 ?x2962 ?x4445 (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1401) ?x2972 ?x4540 ?x44 ?x2970 (* 18 (* x00 r)) ?x495 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x2102 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x495 ?x496 (* 4 (* s00 r)) (* (- 6) ?x2271) ?x56 ?x497 ?x466)))
 (let (($x3647 (= (+ s00 (* (- 1) s) (* 3 (* r r)) (* (- 3) ?x297)) 0)))
 (let (($x512 (and $x3647 (= ?x2102 0) (= ?x4170 0) (= ?x3982 0) $x1017 (not (= ?x3391 9)))))
 (rewrite (= $x512 $x4194))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2720 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x3661 (+ 3 s ?x213)))
 (let ((?x1389 (+ 1 r)))
 (let ((?x2669 (* r00 ?x1389 ?x1389 ?x3661 ?x3661 ?x3661)))
 (let ((?x47 (* 3 s)))
 (let ((?x2917 (* r00 r00 s00)))
 (let ((?x2740 (* 6 ?x2917)))
 (let ((?x374 (* (- 3) s00)))
 (let ((?x587 (* s00 s00)))
 (let ((?x600 (* (- 4) ?x587)))
 (let ((?x2271 (* r00 s00)))
 (let ((?x3756 (* 9 ?x2271)))
 (let ((?x518 (* r00 x00)))
 (let ((?x532 (* (- 18) ?x518)))
 (let ((?x2711 (+ (* (- 9) (* ?x1389 ?x3661)) ?x532 (* 18 (* r00 x00 ?x1389 ?x3661 ?x3661)) (* 9 (* r00 ?x1389 ?x3661 ?x3661 ?x3661)) ?x3756 (* 2 (* ?x3661 ?x3661)) (* 18 (* ?x1389 (+ x (* (- 1) s)))) (* 6 (* r00 ?x1389 ?x3661)) (* 9 (* ?x1389 ?x1389 ?x3661 ?x3661 ?x3661)) (* (- 2) (* s00 ?x1389 ?x3661 ?x3661 ?x3661)) (* (- 6) (* r00 r00 s00 ?x1389 ?x3661 ?x3661)) (* 2 (* s00 ?x3661)) (* (- 18) (* r00 ?x1389 (+ x (* (- 1) s)) ?x3661 ?x3661)) (* (- 9) (* r00 s00 ?x1389 ?x3661 ?x3661)) (* (- 2) (* ?x1389 ?x3661 ?x3661 ?x3661 ?x3661)) (* (- 3) (* ?x1389 ?x3661 ?x3661 ?x3661)) (* (- 6) (* r00 r00 ?x3661)) (* 6 (* r00 r00 ?x1389 ?x3661 ?x3661 ?x3661)) ?x600 (* 18 (* r00 (+ x (* (- 1) s)))) ?x374 (* (- 18) (* ?x1389 ?x1389 (+ x (* (- 1) s)) ?x3661 ?x3661)) ?x2740 (* (- 18) (* x00 ?x1389)) ?x47 (* 18 r) (* (- 9) (* s00 ?x1389 ?x1389 ?x3661 ?x3661)) (* 9 (* s00 ?x1389)) (* 6 (* r00 s00 ?x1389 ?x1389 ?x3661 ?x3661)) (* 4 (* s00 s00 ?x1389 ?x3661 ?x3661)) (* (- 9) (* r00 ?x3661)) (* 3 (* s00 ?x1389 ?x3661 ?x3661)) (* 18 (* x00 ?x1389 ?x1389 ?x3661 ?x3661)) (* (- 6) (* r00 s00 ?x1389)) (* (- 6) ?x2669))))
 (let ((?x1352 (* x00 x00)))
 (let ((?x2671 (* 108 ?x1352)))
 (let ((?x3572 (* (- 9) s)))
 (let ((?x1423 (* (- 36) ?x2917)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2543 (* 51 ?x587)))
 (let ((?x1401 (* r00 r00 s)))
 (let ((?x4168 (* 36 ?x1401)))
 (let ((?x1190 (* s00 s00 s00)))
 (let ((?x2507 (* 16 ?x1190)))
 (let ((?x811 (* s00 x00)))
 (let ((?x2870 (* (- 108) ?x811)))
 (let ((?x888 (* r00 r00 r00 x00)))
 (let ((?x4283 (* (- 432) ?x888)))
 (let ((?x1742 (* 108 ?x518)))
 (let ((?x1652 (+ (* 216 (* r00 s00 x00)) ?x1742 (* (- 54) ?x2271) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4283 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2870 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2507 (* (- 108) (* x s)) ?x4168 ?x2543 (* (- 108) (* r00 x)) ?x137 ?x1423 ?x3572 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2671)))
 (let (($x1017 (= ?x1652 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x993 (* (- 9) s00)))
 (let ((?x922 (* (- 15) ?x587)))
 (let ((?x883 (* r00 r00 x00)))
 (let ((?x896 (* (- 36) ?x883)))
 (let ((?x812 (* 6 ?x811)))
 (let ((?x541 (* s s)))
 (let ((?x573 (* 3 ?x541)))
 (let ((?x555 (* (- 54) ?x518)))
 (let ((?x4087 (+ (* (- 24) (* s r)) ?x555 (* 36 (* r00 x r)) (* 24 ?x2271) ?x573 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x812 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1401) ?x896 ?x922 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x993 (* 36 ?x2917) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x542 (* 2 ?x541)))
 (let ((?x2964 (+ (* (- 9) (* s r)) ?x532 ?x3756 ?x542 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1401) ?x600 (* 18 (* r00 x)) ?x374 ?x2740 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1553 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x374 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x2271) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let ((?x297 (* r00 r00)))
 (let ((?x3520 (* (- 3) ?x297)))
 (let ((?x276 (* (- 1) s)))
 (let (($x3647 (= (+ s00 ?x276 (* 3 (* r r)) ?x3520) 0)))
 (and $x3647 (= ?x1553 0) (= ?x2964 0) (= ?x4087 0) $x1017 (not (= ?x2711 (- 9))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1045 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x3661 (+ 3 s ?x213)))
 (let ((?x1389 (+ 1 r)))
 (let ((?x2669 (* r00 ?x1389 ?x1389 ?x3661 ?x3661 ?x3661)))
 (let ((?x495 (* (- 3) s)))
 (let ((?x2917 (* r00 r00 s00)))
 (let ((?x2970 (* (- 6) ?x2917)))
 (let ((?x44 (* 3 s00)))
 (let ((?x587 (* s00 s00)))
 (let ((?x2972 (* 4 ?x587)))
 (let ((?x2271 (* r00 s00)))
 (let ((?x2962 (* (- 9) ?x2271)))
 (let ((?x518 (* r00 x00)))
 (let ((?x519 (* 18 ?x518)))
 (let ((?x3391 (+ (* 9 (* ?x1389 ?x3661)) ?x519 (* (- 18) (* r00 x00 ?x1389 ?x3661 ?x3661)) (* (- 9) (* r00 ?x1389 ?x3661 ?x3661 ?x3661)) ?x2962 (* (- 2) (* ?x3661 ?x3661)) (* (- 18) (* ?x1389 (+ x (* (- 1) s)))) (* (- 6) (* r00 ?x1389 ?x3661)) (* (- 9) (* ?x1389 ?x1389 ?x3661 ?x3661 ?x3661)) (* 2 (* s00 ?x1389 ?x3661 ?x3661 ?x3661)) (* 6 (* r00 r00 s00 ?x1389 ?x3661 ?x3661)) (* (- 2) (* s00 ?x3661)) (* 18 (* r00 ?x1389 (+ x (* (- 1) s)) ?x3661 ?x3661)) (* 9 (* r00 s00 ?x1389 ?x3661 ?x3661)) (* 2 (* ?x1389 ?x3661 ?x3661 ?x3661 ?x3661)) (* 3 (* ?x1389 ?x3661 ?x3661 ?x3661)) (* 6 (* r00 r00 ?x3661)) (* (- 6) (* r00 r00 ?x1389 ?x3661 ?x3661 ?x3661)) ?x2972 (* (- 18) (* r00 (+ x (* (- 1) s)))) ?x44 (* 18 (* ?x1389 ?x1389 (+ x (* (- 1) s)) ?x3661 ?x3661)) ?x2970 (* 18 (* x00 ?x1389)) ?x495 (* (- 18) r) (* 9 (* s00 ?x1389 ?x1389 ?x3661 ?x3661)) (* (- 9) (* s00 ?x1389)) (* (- 6) (* r00 s00 ?x1389 ?x1389 ?x3661 ?x3661)) (* (- 4) (* s00 s00 ?x1389 ?x3661 ?x3661)) (* 9 (* r00 ?x3661)) (* (- 3) (* s00 ?x1389 ?x3661 ?x3661)) (* (- 18) (* x00 ?x1389 ?x1389 ?x3661 ?x3661)) (* 6 (* r00 s00 ?x1389)) (* 6 ?x2669))))
 (let ((?x1352 (* x00 x00)))
 (let ((?x2671 (* 108 ?x1352)))
 (let ((?x3572 (* (- 9) s)))
 (let ((?x1423 (* (- 36) ?x2917)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2543 (* 51 ?x587)))
 (let ((?x1401 (* r00 r00 s)))
 (let ((?x4168 (* 36 ?x1401)))
 (let ((?x1190 (* s00 s00 s00)))
 (let ((?x2507 (* 16 ?x1190)))
 (let ((?x811 (* s00 x00)))
 (let ((?x2870 (* (- 108) ?x811)))
 (let ((?x888 (* r00 r00 r00 x00)))
 (let ((?x4283 (* (- 432) ?x888)))
 (let ((?x1742 (* 108 ?x518)))
 (let ((?x1652 (+ (* 216 (* r00 s00 x00)) ?x1742 (* (- 54) ?x2271) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4283 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2870 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2507 (* (- 108) (* x s)) ?x4168 ?x2543 (* (- 108) (* r00 x)) ?x137 ?x1423 ?x3572 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2671)))
 (let (($x1017 (= ?x1652 0)))
 (let ((?x1030 (* 15 ?x587)))
 (let ((?x883 (* r00 r00 x00)))
 (let ((?x3804 (* 36 ?x883)))
 (let ((?x2726 (* (- 6) ?x811)))
 (let ((?x594 (* 54 ?x518)))
 (let ((?x3982 (+ (* 24 (* s r)) ?x594 (* (- 36) (* r00 x r)) (* (- 24) ?x2271) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2726 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4168 ?x3804 ?x1030 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1423 (* 54 (* x00 r)) ?x3572 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x2756 (* r00 x)))
 (let ((?x4540 (* (- 18) ?x2756)))
 (let ((?x541 (* s s)))
 (let ((?x4445 (* (- 2) ?x541)))
 (let ((?x4170 (+ (* 9 (* s r)) ?x519 ?x2962 ?x4445 (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1401) ?x2972 ?x4540 ?x44 ?x2970 (* 18 (* x00 r)) ?x495 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x465 (* r00 r00 r00)))
 (let ((?x466 (* 12 ?x465)))
 (let ((?x497 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x496 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2102 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x495 ?x496 (* 4 (* s00 r)) (* (- 6) ?x2271) ?x56 ?x497 ?x466)))
 (let ((?x297 (* r00 r00)))
 (let ((?x3520 (* (- 3) ?x297)))
 (let ((?x276 (* (- 1) s)))
 (let (($x3647 (= (+ s00 ?x276 (* 3 (* r r)) ?x3520) 0)))
 (let (($x512 (and $x3647 (= ?x2102 0) (= ?x4170 0) (= ?x3982 0) $x1017 (not (= ?x3391 9)))))
 (let ((?x47 (* 3 s)))
 (let ((?x2740 (* 6 ?x2917)))
 (let ((?x374 (* (- 3) s00)))
 (let ((?x600 (* (- 4) ?x587)))
 (let ((?x3756 (* 9 ?x2271)))
 (let ((?x532 (* (- 18) ?x518)))
 (let ((?x2711 (+ (* (- 9) (* ?x1389 ?x3661)) ?x532 (* 18 (* r00 x00 ?x1389 ?x3661 ?x3661)) (* 9 (* r00 ?x1389 ?x3661 ?x3661 ?x3661)) ?x3756 (* 2 (* ?x3661 ?x3661)) (* 18 (* ?x1389 (+ x ?x276))) (* 6 (* r00 ?x1389 ?x3661)) (* 9 (* ?x1389 ?x1389 ?x3661 ?x3661 ?x3661)) (* (- 2) (* s00 ?x1389 ?x3661 ?x3661 ?x3661)) (* (- 6) (* r00 r00 s00 ?x1389 ?x3661 ?x3661)) (* 2 (* s00 ?x3661)) (* (- 18) (* r00 ?x1389 (+ x ?x276) ?x3661 ?x3661)) (* (- 9) (* r00 s00 ?x1389 ?x3661 ?x3661)) (* (- 2) (* ?x1389 ?x3661 ?x3661 ?x3661 ?x3661)) (* (- 3) (* ?x1389 ?x3661 ?x3661 ?x3661)) (* (- 6) (* r00 r00 ?x3661)) (* 6 (* r00 r00 ?x1389 ?x3661 ?x3661 ?x3661)) ?x600 (* 18 (* r00 (+ x ?x276))) ?x374 (* (- 18) (* ?x1389 ?x1389 (+ x ?x276) ?x3661 ?x3661)) ?x2740 (* (- 18) (* x00 ?x1389)) ?x47 (* 18 r) (* (- 9) (* s00 ?x1389 ?x1389 ?x3661 ?x3661)) (* 9 (* s00 ?x1389)) (* 6 (* r00 s00 ?x1389 ?x1389 ?x3661 ?x3661)) (* 4 (* s00 s00 ?x1389 ?x3661 ?x3661)) (* (- 9) (* r00 ?x3661)) (* 3 (* s00 ?x1389 ?x3661 ?x3661)) (* 18 (* x00 ?x1389 ?x1389 ?x3661 ?x3661)) (* (- 6) (* r00 s00 ?x1389)) (* (- 6) ?x2669))))
 (let ((?x143 (* 9 s)))
 (let ((?x993 (* (- 9) s00)))
 (let ((?x922 (* (- 15) ?x587)))
 (let ((?x896 (* (- 36) ?x883)))
 (let ((?x812 (* 6 ?x811)))
 (let ((?x573 (* 3 ?x541)))
 (let ((?x555 (* (- 54) ?x518)))
 (let ((?x4087 (+ (* (- 24) (* s r)) ?x555 (* 36 (* r00 x r)) (* 24 ?x2271) ?x573 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x812 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1401) ?x896 ?x922 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 ?x2756) ?x993 (* 36 ?x2917) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x542 (* 2 ?x541)))
 (let ((?x2964 (+ (* (- 9) (* s r)) ?x532 ?x3756 ?x542 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1401) ?x600 (* 18 ?x2756) ?x374 ?x2740 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1553 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x374 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x2271) (* (- 6) x) ?x59 (* (- 12) ?x465))))
 (let (($x1591 (and $x3647 (= ?x1553 0) (= ?x2964 0) (= ?x4087 0) $x1017 (not (= ?x2711 (- 9))))))
 (rewrite (= $x1591 $x512)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x273 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x224 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) (* 18 ?x212 r00 ?x214 ?x214 x00) (* 9 ?x212 r00 ?x214 ?x214 ?x214) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 (- x s)) (* 6 ?x212 r00 ?x214) (* 9 ?x212 ?x212 ?x214 ?x214 ?x214))))
 (let ((?x228 (- (- ?x224 (* 2 ?x212 ?x214 ?x214 ?x214 s00)) (* 6 ?x212 r00 r00 ?x214 ?x214 s00))))
 (let ((?x236 (- (+ ?x228 (* 2 ?x214 s00)) (* 18 ?x212 r00 ?x214 ?x214 (- x s)))))
 (let ((?x238 (- (- ?x236 (* 9 ?x212 r00 ?x214 ?x214 s00)) (* 2 ?x212 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x240 (- (- ?x238 (* 3 ?x212 ?x214 ?x214 ?x214)) (* 6 r00 r00 ?x214))))
 (let ((?x245 (+ (- (+ ?x240 (* 6 ?x212 r00 r00 ?x214 ?x214 ?x214)) ?x76) (* 18 r00 (- x s)))))
 (let ((?x249 (+ (- (- ?x245 ?x44) (* 18 ?x212 ?x212 ?x214 ?x214 (- x s))) ?x82)))
 (let ((?x255 (- (+ (- ?x249 (* 18 ?x212 x00)) (* 3 ?x214)) (* 9 ?x212 ?x212 ?x214 ?x214 s00))))
 (let ((?x259 (+ ?x255 (* 9 ?x212 s00) (* 6 ?x212 ?x212 r00 ?x214 ?x214 s00) (* 4 ?x212 ?x214 ?x214 s00 s00))))
 (let ((?x264 (+ (- ?x259 (* 9 r00 ?x214)) (* 3 ?x212 ?x214 ?x214 s00) (* 18 ?x212 ?x212 ?x214 ?x214 x00))))
 (let ((?x268 (- (- ?x264 (* 6 ?x212 r00 s00)) (* 6 ?x212 ?x212 r00 ?x214 ?x214 ?x214))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x268 0))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2722 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x3661 (+ 3 s ?x213)))
 (let ((?x1389 (+ 1 r)))
 (let ((?x2669 (* r00 ?x1389 ?x1389 ?x3661 ?x3661 ?x3661)))
 (let ((?x47 (* 3 s)))
 (let ((?x2917 (* r00 r00 s00)))
 (let ((?x2740 (* 6 ?x2917)))
 (let ((?x374 (* (- 3) s00)))
 (let ((?x587 (* s00 s00)))
 (let ((?x600 (* (- 4) ?x587)))
 (let ((?x2271 (* r00 s00)))
 (let ((?x3756 (* 9 ?x2271)))
 (let ((?x518 (* r00 x00)))
 (let ((?x532 (* (- 18) ?x518)))
 (let ((?x2711 (+ (* (- 9) (* ?x1389 ?x3661)) ?x532 (* 18 (* r00 x00 ?x1389 ?x3661 ?x3661)) (* 9 (* r00 ?x1389 ?x3661 ?x3661 ?x3661)) ?x3756 (* 2 (* ?x3661 ?x3661)) (* 18 (* ?x1389 (+ x (* (- 1) s)))) (* 6 (* r00 ?x1389 ?x3661)) (* 9 (* ?x1389 ?x1389 ?x3661 ?x3661 ?x3661)) (* (- 2) (* s00 ?x1389 ?x3661 ?x3661 ?x3661)) (* (- 6) (* r00 r00 s00 ?x1389 ?x3661 ?x3661)) (* 2 (* s00 ?x3661)) (* (- 18) (* r00 ?x1389 (+ x (* (- 1) s)) ?x3661 ?x3661)) (* (- 9) (* r00 s00 ?x1389 ?x3661 ?x3661)) (* (- 2) (* ?x1389 ?x3661 ?x3661 ?x3661 ?x3661)) (* (- 3) (* ?x1389 ?x3661 ?x3661 ?x3661)) (* (- 6) (* r00 r00 ?x3661)) (* 6 (* r00 r00 ?x1389 ?x3661 ?x3661 ?x3661)) ?x600 (* 18 (* r00 (+ x (* (- 1) s)))) ?x374 (* (- 18) (* ?x1389 ?x1389 (+ x (* (- 1) s)) ?x3661 ?x3661)) ?x2740 (* (- 18) (* x00 ?x1389)) ?x47 (* 18 r) (* (- 9) (* s00 ?x1389 ?x1389 ?x3661 ?x3661)) (* 9 (* s00 ?x1389)) (* 6 (* r00 s00 ?x1389 ?x1389 ?x3661 ?x3661)) (* 4 (* s00 s00 ?x1389 ?x3661 ?x3661)) (* (- 9) (* r00 ?x3661)) (* 3 (* s00 ?x1389 ?x3661 ?x3661)) (* 18 (* x00 ?x1389 ?x1389 ?x3661 ?x3661)) (* (- 6) (* r00 s00 ?x1389)) (* (- 6) ?x2669))))
 (let ((?x1352 (* x00 x00)))
 (let ((?x2671 (* 108 ?x1352)))
 (let ((?x3572 (* (- 9) s)))
 (let ((?x1423 (* (- 36) ?x2917)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2543 (* 51 ?x587)))
 (let ((?x1401 (* r00 r00 s)))
 (let ((?x4168 (* 36 ?x1401)))
 (let ((?x1190 (* s00 s00 s00)))
 (let ((?x2507 (* 16 ?x1190)))
 (let ((?x811 (* s00 x00)))
 (let ((?x2870 (* (- 108) ?x811)))
 (let ((?x888 (* r00 r00 r00 x00)))
 (let ((?x4283 (* (- 432) ?x888)))
 (let ((?x1742 (* 108 ?x518)))
 (let ((?x1652 (+ (* 216 (* r00 s00 x00)) ?x1742 (* (- 54) ?x2271) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4283 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2870 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2507 (* (- 108) (* x s)) ?x4168 ?x2543 (* (- 108) (* r00 x)) ?x137 ?x1423 ?x3572 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2671)))
 (let (($x1017 (= ?x1652 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x993 (* (- 9) s00)))
 (let ((?x922 (* (- 15) ?x587)))
 (let ((?x883 (* r00 r00 x00)))
 (let ((?x896 (* (- 36) ?x883)))
 (let ((?x812 (* 6 ?x811)))
 (let ((?x541 (* s s)))
 (let ((?x573 (* 3 ?x541)))
 (let ((?x555 (* (- 54) ?x518)))
 (let ((?x4087 (+ (* (- 24) (* s r)) ?x555 (* 36 (* r00 x r)) (* 24 ?x2271) ?x573 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x812 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1401) ?x896 ?x922 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x993 (* 36 ?x2917) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x542 (* 2 ?x541)))
 (let ((?x2964 (+ (* (- 9) (* s r)) ?x532 ?x3756 ?x542 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1401) ?x600 (* 18 (* r00 x)) ?x374 ?x2740 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1553 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x374 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x2271) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let ((?x297 (* r00 r00)))
 (let ((?x3520 (* (- 3) ?x297)))
 (let ((?x276 (* (- 1) s)))
 (let (($x3647 (= (+ s00 ?x276 (* 3 (* r r)) ?x3520) 0)))
 (let (($x1591 (and $x3647 (= ?x1553 0) (= ?x2964 0) (= ?x4087 0) $x1017 (not (= ?x2711 (- 9))))))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x224 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) (* 18 ?x212 r00 ?x214 ?x214 x00) (* 9 ?x212 r00 ?x214 ?x214 ?x214) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 (- x s)) (* 6 ?x212 r00 ?x214) (* 9 ?x212 ?x212 ?x214 ?x214 ?x214))))
 (let ((?x228 (- (- ?x224 (* 2 ?x212 ?x214 ?x214 ?x214 s00)) (* 6 ?x212 r00 r00 ?x214 ?x214 s00))))
 (let ((?x236 (- (+ ?x228 (* 2 ?x214 s00)) (* 18 ?x212 r00 ?x214 ?x214 (- x s)))))
 (let ((?x238 (- (- ?x236 (* 9 ?x212 r00 ?x214 ?x214 s00)) (* 2 ?x212 ?x214 ?x214 ?x214 ?x214))))
 (let ((?x240 (- (- ?x238 (* 3 ?x212 ?x214 ?x214 ?x214)) (* 6 r00 r00 ?x214))))
 (let ((?x245 (+ (- (+ ?x240 (* 6 ?x212 r00 r00 ?x214 ?x214 ?x214)) ?x76) (* 18 r00 (- x s)))))
 (let ((?x249 (+ (- (- ?x245 ?x44) (* 18 ?x212 ?x212 ?x214 ?x214 (- x s))) ?x82)))
 (let ((?x255 (- (+ (- ?x249 (* 18 ?x212 x00)) (* 3 ?x214)) (* 9 ?x212 ?x212 ?x214 ?x214 s00))))
 (let ((?x259 (+ ?x255 (* 9 ?x212 s00) (* 6 ?x212 ?x212 r00 ?x214 ?x214 s00) (* 4 ?x212 ?x214 ?x214 s00 s00))))
 (let ((?x264 (+ (- ?x259 (* 9 r00 ?x214)) (* 3 ?x212 ?x214 ?x214 s00) (* 18 ?x212 ?x212 ?x214 ?x214 x00))))
 (let ((?x268 (- (- ?x264 (* 6 ?x212 r00 s00)) (* 6 ?x212 ?x212 r00 ?x214 ?x214 ?x214))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x272 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x268 0))))))
 (rewrite (= $x272 $x1591)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x274 (asserted $x273)))
 (let ((@x905 (mp (mp @x274 (quant-intro (proof-bind ?x2722) (= $x273 $x2720)) $x2720) (rewrite (= $x2720 $x2720)) $x2720)))
 (let ((@x3707 (mp (mp @x905 (quant-intro (proof-bind ?x1045) (= $x2720 $x1110)) $x1110) (quant-intro (proof-bind ?x4970) (= $x1110 $x4968)) $x4968)))
 (let ((@x2150 (mp (mp~ @x3707 (sk (~ $x4968 $x2573)) $x2573) (rewrite (= $x2573 $x1640)) $x1640)))
 (let ((@x1310 (and-elim @x2150 $x2667)))
 (let ((@x2828 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2667) $x1829)) @x1310 $x1829)))
 (let (($x2884 (>= ?x2640 0)))
 (let ((@x2820 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2667) $x2884)) @x1310 $x2884)))
 (let (($x606 (<= ?x2597 0)))
 (let ((@x1952 (and-elim @x2150 $x2598)))
 (let ((@x2815 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2598) $x606)) @x1952 $x606)))
 (let (($x2340 (>= ?x2597 0)))
 (let ((@x3666 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2598) $x2340)) @x1952 $x2340)))
 (let (($x2881 (<= ?x2793 0)))
 (let ((@x1311 (and-elim @x2150 $x2790)))
 (let ((@x2839 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2790) $x2881)) @x1311 $x2881)))
 (let (($x2867 (>= ?x2793 0)))
 (let ((@x2631 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2790) $x2867)) @x1311 $x2867)))
 (let (($x2873 (<= ?x1296 0)))
 (let ((@x2331 (and-elim @x2150 $x1297)))
 (let ((@x2869 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1297) $x2873)) @x2331 $x2873)))
 (let (($x2687 (>= ?x1296 0)))
 (let ((@x2905 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1297) $x2687)) @x2331 $x2687)))
 (let (($x2231 (not (<= ?x1837 0))))
 (let (($x2862 (>= ?x1837 0)))
 (let ((@x583 ((_ th-lemma arith) (hypothesis (not $x2862)) @x3666 @x2815 @x2905 @x2869 @x2631 @x2839 @x2905 @x2869 @x2631 @x2839 @x2820 @x2828 @x3666 @x2815 @x2905 @x2869 @x2631 @x2839 @x3666 @x2815 @x2820 @x2828 false)))
 (let ((@x1653 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1949 $x2231 (not $x2862))) (and-elim @x2150 $x1951) (or $x2231 (not $x2862)))))
 ((_ th-lemma arith) (unit-resolution @x1653 (lemma @x583 $x2862) $x2231) @x3666 @x2815 @x2905 @x2869 @x2631 @x2839 @x2905 @x2869 @x2631 @x2839 @x2820 @x2828 @x3666 @x2815 @x2905 @x2869 @x2631 @x2839 @x3666 @x2815 @x2820 @x2828 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        33
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1046
 :arith-nonlinear-bounds    26
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      13
 :arith-tableau-max-columns 210
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.54
 :memory                    3.63
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                2740361
 :num-checks                1
 :propagations              12
 :rlimit-count              39371
 :time                      0.03
 :total-time                0.04)
