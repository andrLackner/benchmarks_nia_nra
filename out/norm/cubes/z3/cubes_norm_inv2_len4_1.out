unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x1326 (* k!2 k!2)))
 (let ((?x1327 (* (- 1) ?x1326)))
 (let ((?x1321 (* (- 9) n!0)))
 (let ((?x398 (* 18 c!3)))
 (let ((?x1213 (* 5 k!2)))
 (let ((?x1158 (* c!3 n!0)))
 (let ((?x1173 (* 9 ?x1158)))
 (let ((?x1452 (+ ?x1173 ?x1213 ?x398 ?x1321 ?x1327)))
 (let (($x1223 (<= ?x1452 4)))
 (let (($x1486 (= ?x1452 4)))
 (let ((?x998 (+ k!2 c!3)))
 (let ((?x924 (+ k!2 m!1)))
 (let ((?x1423 (+ 6 m!1)))
 (let ((?x1084 (+ 1 n!0)))
 (let ((?x1484 (* 13 m!1)))
 (let ((?x783 (* 3 (* k!2 m!1 m!1))))
 (let ((?x1481 (* (- 32) ?x1326)))
 (let ((?x1220 (* (- 33) (* k!2 m!1))))
 (let ((?x1459 (* 72 (* k!2 n!0 n!0))))
 (let ((?x1300 (* m!1 m!1 m!1)))
 (let ((?x1224 (* k!2 n!0)))
 (let ((?x1228 (* 81 ?x1224)))
 (let ((?x1235 (* 24 c!3)))
 (let ((?x1432 (* (- 23) (* c!3 m!1))))
 (let ((?x1246 (* 37 k!2)))
 (let ((?x1381 (* (- 5) (* m!1 m!1))))
 (let ((?x213 (* 72 ?x1158)))
 (let ((?x1430 (* 72 (* c!3 n!0 n!0))))
 (let ((?x1427 (* 24 (* k!2 n!0 n!0 n!0))))
 (let ((?x442 (* 24 (* c!3 n!0 n!0 n!0))))
 (let ((?x739 (* k!2 k!2 k!2)))
 (let ((?x1216 (* (- 9) (* k!2 k!2 n!0))))
 (let ((?x1342 (* 3 (* k!2 k!2 m!1))))
 (let ((?x1411 (+ ?x1342 ?x1216 (* (- 4) (* ?x1423 ?x1423 ?x924 ?x924 ?x998 ?x998 ?x998)) (* 9 (* ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x998 ?x998 ?x998 ?x998)) ?x739 (* (- 9) (* ?x1084 ?x1084 ?x1084 ?x1084 ?x1423 ?x998 ?x998)) (* 9 (* ?x1084 ?x1084 ?x1084 ?x1084 ?x1423 ?x998)) (* (- 1) (* ?x1423 ?x1423 ?x924 ?x924 ?x924 ?x924 ?x998 ?x998 ?x998)) ?x442 ?x1427 ?x1430 ?x213 (* 3 (* k!2 n!0 m!1)) (* 3 (* c!3 n!0 m!1)) (* (- 9) (* k!2 c!3 n!0)) ?x1381 ?x1246 ?x1432 (* 4 (* c!3 n!0 n!0 n!0 m!1)) (* 12 (* k!2 n!0 n!0 m!1)) ?x1235 ?x1228 (* 9 (* n!0 m!1)) (* 18 (* ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x998 ?x998)) (* (- 4) (* ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x998)) ?x1300 ?x1459 ?x1220 (* 4 (* k!2 n!0 n!0 n!0 m!1)) (* 12 (* c!3 n!0 n!0 m!1)) (* 5 (* ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x924 ?x998)) (* 18 (* ?x1423 ?x1423 ?x924 ?x924 ?x998 ?x998 ?x998 ?x998)) (* (- 18) (* ?x1084 ?x1084 ?x1084 ?x1423 ?x998 ?x998)) ?x1481 (* 9 (* ?x1084 ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x998 ?x998)) (* (- 9) (* ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x998 ?x998 ?x998)) ?x783 (* 5 (* ?x1423 ?x1423 ?x924 ?x924 ?x924 ?x998 ?x998 ?x998)) ?x1484 (* (- 27) (* k!2 c!3)) (* (- 1) (* ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x924 ?x924 ?x998)) (* (- 5) (* ?x1084 ?x1084 ?x1084 ?x1423 ?x924 ?x998)) (* ?x1084 ?x1084 ?x1084 ?x1423 ?x924 ?x924 ?x998) (* (- 9) (* ?x1084 ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x998)))))
 (let (($x1167 (= ?x1411 0)))
 (let (($x1242 (not $x1167)))
 (let ((?x1247 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x1211 (= ?x1247 1)))
 (let ((?x1472 (* (- 1) ?x1224)))
 (let ((?x1393 (* (- 2) n!0)))
 (let ((?x1392 (* 3 c!3)))
 (let ((?x1328 (+ k!2 ?x1392 ?x1393 ?x1472)))
 (let (($x618 (= ?x1328 1)))
 (let ((?x1179 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x1454 (= ?x1179 (- 6))))
 (let (($x1166 (and $x1454 $x1486 $x618 $x1211 $x1242)))
 (let ((?x1002 (+ c!3 k!2)))
 (let ((?x1444 (+ ?x1235 ?x1246 ?x1484 ?x1481 ?x1228 ?x213 ?x739 ?x1342 ?x783 ?x1300 (* (- 9) (* ?x1084 ?x1084 ?x1084 ?x1084 ?x1423 ?x1002 ?x1002)) (* 18 (* ?x1423 ?x1423 ?x924 ?x924 ?x1002 ?x1002 ?x1002 ?x1002)) (* 18 (* ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x1002 ?x1002)) (* (- 9) (* c!3 k!2 n!0)) ?x1216 (* 3 (* c!3 m!1 n!0)) (* 3 (* k!2 m!1 n!0)) (* (- 9) (* ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x1002 ?x1002 ?x1002)) (* (- 27) (* c!3 k!2)) (* (- 1) (* ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x924 ?x924 ?x1002)) (* 9 (* m!1 n!0)) (* (- 5) (* ?x1084 ?x1084 ?x1084 ?x1423 ?x924 ?x1002)) (* ?x1084 ?x1084 ?x1084 ?x1423 ?x924 ?x924 ?x1002) (* (- 9) (* ?x1084 ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x1002)) ?x1220 ?x1432 (* 5 (* ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x924 ?x1002)) (* 9 (* ?x1084 ?x1084 ?x1084 ?x1084 ?x1423 ?x1002)) (* (- 4) (* ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x1002)) (* 5 (* ?x1423 ?x1423 ?x924 ?x924 ?x924 ?x1002 ?x1002 ?x1002)) (* 12 (* c!3 m!1 n!0 n!0)) ?x1459 ?x1430 (* 12 (* k!2 m!1 n!0 n!0)) ?x442 ?x1427 (* 4 (* c!3 m!1 n!0 n!0 n!0)) (* 4 (* k!2 m!1 n!0 n!0 n!0)) (* 9 (* ?x1084 ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x1002 ?x1002)) (* (- 4) (* ?x1423 ?x1423 ?x924 ?x924 ?x1002 ?x1002 ?x1002)) (* (- 1) (* ?x1423 ?x1423 ?x924 ?x924 ?x924 ?x924 ?x1002 ?x1002 ?x1002)) (* (- 18) (* ?x1084 ?x1084 ?x1084 ?x1423 ?x1002 ?x1002)) ?x1381 (* 9 (* ?x1084 ?x1423 ?x1423 ?x924 ?x924 ?x1002 ?x1002 ?x1002 ?x1002)))))
 (let (($x1387 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x398 ?x1213 ?x1321 ?x1327 ?x1173) 4) (= (+ ?x1392 k!2 ?x1393 ?x1472) 1) $x1211 (not (= ?x1444 0)))))
 (let (($x771 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x360 (+ 6 m)))
 (let ((?x363 (+ 1 n)))
 (let ((?x1712 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x1398 (* 9 ?x1712)))
 (let ((?x2087 (* (- 5) (* m m))))
 (let ((?x1529 (* ?x363 ?x363 ?x363 ?x360 ?x71 ?x71)))
 (let ((?x1506 (* (- 18) ?x1529)))
 (let ((?x1517 (* ?x360 ?x360 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x428 (* (- 1) ?x1517)))
 (let ((?x1490 (* ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1505 (* (- 4) ?x1490)))
 (let ((?x1467 (* ?x363 ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71)))
 (let ((?x1267 (* 9 ?x1467)))
 (let ((?x1259 (* ?x360 ?x360 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1354 (* 5 ?x1259)))
 (let ((?x1229 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71)))
 (let ((?x1263 (* (- 4) ?x1229)))
 (let ((?x887 (* ?x363 ?x363 ?x363 ?x363 ?x360 ?x71)))
 (let ((?x1180 (* 9 ?x887)))
 (let ((?x737 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x69 ?x71)))
 (let ((?x835 (* 5 ?x737)))
 (let ((?x655 (* ?x363 ?x363 ?x360 ?x360 ?x69 ?x69 ?x71)))
 (let ((?x836 (* (- 9) ?x655)))
 (let ((?x643 (* ?x363 ?x363 ?x363 ?x360 ?x69 ?x69 ?x71)))
 (let ((?x639 (* ?x363 ?x363 ?x363 ?x360 ?x69 ?x71)))
 (let ((?x838 (* (- 5) ?x639)))
 (let ((?x619 (* 9 (* m n))))
 (let ((?x587 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x69 ?x69 ?x71)))
 (let ((?x1037 (* (- 1) ?x587)))
 (let ((?x567 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1039 (* (- 9) ?x567)))
 (let ((?x1908 (* (- 9) (* k k n))))
 (let ((?x1907 (* (- 9) (* c k n))))
 (let ((?x474 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71)))
 (let ((?x1038 (* 18 ?x474)))
 (let ((?x361 (* ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x525 (* 18 ?x361)))
 (let ((?x354 (* ?x363 ?x363 ?x363 ?x363 ?x360 ?x71 ?x71)))
 (let ((?x1269 (* (- 9) ?x354)))
 (let ((?x353 (* m m m)))
 (let ((?x339 (* k k k)))
 (let ((?x1956 (* 13 m)))
 (let ((?x1052 (+ (* 24 c) (* 37 k) ?x1956 (* (- 32) (* k k)) (* 81 (* k n)) (* 72 (* c n)) ?x339 (* 3 (* k k m)) (* 3 (* k m m)) ?x353 ?x1269 ?x525 ?x1038 ?x1907 ?x1908 (* 3 (* c m n)) (* 3 (* k m n)) ?x1039 (* (- 27) (* c k)) ?x1037 ?x619 ?x838 ?x643 ?x836 (* (- 33) (* k m)) (* (- 23) (* c m)) ?x835 ?x1180 ?x1263 ?x1354 (* 12 (* c m n n)) (* 72 (* k n n)) (* 72 (* c n n)) (* 12 (* k m n n)) (* 24 (* c n n n)) (* 24 (* k n n n)) (* 4 (* c m n n n)) (* 4 (* k m n n n)) ?x1267 ?x1505 ?x428 ?x1506 ?x2087 ?x1398)))
 (let (($x326 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x288 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x239 (* (- 1) ?x49)))
 (let ((?x238 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x236 (= (+ ?x40 ?x44 ?x238 ?x239 (* 9 (* c n))) 4)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (and $x152 $x236 $x288 $x326 (not (= ?x1052 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x533 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x360 (+ 6 m)))
 (let ((?x361 (* ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x525 (* 18 ?x361)))
 (let ((?x363 (+ 1 n)))
 (let ((?x922 (* ?x363 ?x363 ?x363 ?x360 ?x71)))
 (let ((?x887 (* ?x363 ?x363 ?x363 ?x363 ?x360 ?x71)))
 (let ((?x1180 (* 9 ?x887)))
 (let ((?x643 (* ?x363 ?x363 ?x363 ?x360 ?x69 ?x69 ?x71)))
 (let ((?x639 (* ?x363 ?x363 ?x363 ?x360 ?x69 ?x71)))
 (let ((?x838 (* (- 5) ?x639)))
 (let ((?x737 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x69 ?x71)))
 (let ((?x835 (* 5 ?x737)))
 (let ((?x655 (* ?x363 ?x363 ?x360 ?x360 ?x69 ?x69 ?x71)))
 (let ((?x836 (* (- 9) ?x655)))
 (let ((?x587 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x69 ?x69 ?x71)))
 (let ((?x1037 (* (- 1) ?x587)))
 (let ((?x567 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1039 (* (- 9) ?x567)))
 (let ((?x474 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71)))
 (let ((?x1038 (* 18 ?x474)))
 (let ((?x354 (* ?x363 ?x363 ?x363 ?x363 ?x360 ?x71 ?x71)))
 (let ((?x1269 (* (- 9) ?x354)))
 (let ((?x1712 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x1398 (* 9 ?x1712)))
 (let ((?x1529 (* ?x363 ?x363 ?x363 ?x360 ?x71 ?x71)))
 (let ((?x1506 (* (- 18) ?x1529)))
 (let ((?x1517 (* ?x360 ?x360 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x428 (* (- 1) ?x1517)))
 (let ((?x1259 (* ?x360 ?x360 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1354 (* 5 ?x1259)))
 (let ((?x1490 (* ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1505 (* (- 4) ?x1490)))
 (let ((?x1467 (* ?x363 ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71)))
 (let ((?x1267 (* 9 ?x1467)))
 (let ((?x1229 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71)))
 (let ((?x1263 (* (- 4) ?x1229)))
 (let ((?x1461 (* ?x69 ?x69 ?x69)))
 (let ((?x527 (+ ?x1461 ?x1263 ?x1267 (* 9 (* ?x363 ?x69)) ?x1505 ?x1354 (* (- 9) (* ?x363 ?x69 ?x71)) ?x428 (* (- 18) (* ?x69 ?x71)) ?x1506 ?x1398 ?x1269 (* 4 k) (* 4 m) ?x1038 ?x1039 ?x1037 ?x836 ?x835 ?x838 ?x643 ?x1180 (* (- 5) (* ?x69 ?x69)) (* 4 ?x922) ?x525)))
 (let (($x1457 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1503 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x239 (* (- 1) ?x49)))
 (let ((?x238 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (and $x152 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x238 ?x239) 4) $x1503 $x1457 (not (= ?x527 0))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x805 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x71 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x360 (+ 6 m)))
 (let ((?x363 (+ 1 n)))
 (let ((?x1712 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x1398 (* 9 ?x1712)))
 (let ((?x2087 (* (- 5) (* m m))))
 (let ((?x1529 (* ?x363 ?x363 ?x363 ?x360 ?x71 ?x71)))
 (let ((?x1506 (* (- 18) ?x1529)))
 (let ((?x1517 (* ?x360 ?x360 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x428 (* (- 1) ?x1517)))
 (let ((?x1490 (* ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1505 (* (- 4) ?x1490)))
 (let ((?x1467 (* ?x363 ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71)))
 (let ((?x1267 (* 9 ?x1467)))
 (let ((?x1259 (* ?x360 ?x360 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1354 (* 5 ?x1259)))
 (let ((?x1229 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71)))
 (let ((?x1263 (* (- 4) ?x1229)))
 (let ((?x887 (* ?x363 ?x363 ?x363 ?x363 ?x360 ?x71)))
 (let ((?x1180 (* 9 ?x887)))
 (let ((?x737 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x69 ?x71)))
 (let ((?x835 (* 5 ?x737)))
 (let ((?x655 (* ?x363 ?x363 ?x360 ?x360 ?x69 ?x69 ?x71)))
 (let ((?x836 (* (- 9) ?x655)))
 (let ((?x643 (* ?x363 ?x363 ?x363 ?x360 ?x69 ?x69 ?x71)))
 (let ((?x639 (* ?x363 ?x363 ?x363 ?x360 ?x69 ?x71)))
 (let ((?x838 (* (- 5) ?x639)))
 (let ((?x619 (* 9 (* m n))))
 (let ((?x587 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x69 ?x69 ?x71)))
 (let ((?x1037 (* (- 1) ?x587)))
 (let ((?x567 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1039 (* (- 9) ?x567)))
 (let ((?x1908 (* (- 9) (* k k n))))
 (let ((?x1907 (* (- 9) (* c k n))))
 (let ((?x474 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71)))
 (let ((?x1038 (* 18 ?x474)))
 (let ((?x361 (* ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x525 (* 18 ?x361)))
 (let ((?x354 (* ?x363 ?x363 ?x363 ?x363 ?x360 ?x71 ?x71)))
 (let ((?x1269 (* (- 9) ?x354)))
 (let ((?x353 (* m m m)))
 (let ((?x339 (* k k k)))
 (let ((?x1956 (* 13 m)))
 (let ((?x1052 (+ (* 24 c) (* 37 k) ?x1956 (* (- 32) (* k k)) (* 81 (* k n)) (* 72 (* c n)) ?x339 (* 3 (* k k m)) (* 3 (* k m m)) ?x353 ?x1269 ?x525 ?x1038 ?x1907 ?x1908 (* 3 (* c m n)) (* 3 (* k m n)) ?x1039 (* (- 27) (* c k)) ?x1037 ?x619 ?x838 ?x643 ?x836 (* (- 33) (* k m)) (* (- 23) (* c m)) ?x835 ?x1180 ?x1263 ?x1354 (* 12 (* c m n n)) (* 72 (* k n n)) (* 72 (* c n n)) (* 12 (* k m n n)) (* 24 (* c n n n)) (* 24 (* k n n n)) (* 4 (* c m n n n)) (* 4 (* k m n n n)) ?x1267 ?x1505 ?x428 ?x1506 ?x2087 ?x1398)))
 (let (($x326 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x288 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x239 (* (- 1) ?x49)))
 (let ((?x238 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x236 (= (+ ?x40 ?x44 ?x238 ?x239 (* 9 (* c n))) 4)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (let (($x1116 (and $x152 $x236 $x288 $x326 (not (= ?x1052 0)))))
 (let ((?x1461 (* ?x69 ?x69 ?x69)))
 (let ((?x527 (+ ?x1461 ?x1263 ?x1267 (* 9 (* ?x363 ?x69)) ?x1505 ?x1354 (* (- 9) (* ?x363 ?x69 ?x71)) ?x428 (* (- 18) (* ?x69 ?x71)) ?x1506 ?x1398 ?x1269 (* 4 k) (* 4 m) ?x1038 ?x1039 ?x1037 ?x836 ?x835 ?x838 ?x643 ?x1180 (* (- 5) (* ?x69 ?x69)) (* 4 (* ?x363 ?x363 ?x363 ?x360 ?x71)) ?x525)))
 (let (($x1457 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1503 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x494 (and $x152 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x238 ?x239) 4) $x1503 $x1457 (not (= ?x527 0)))))
 (rewrite (= $x494 $x1116)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1232 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x360 (+ 6 m)))
 (let ((?x361 (* ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x363 (+ 1 n)))
 (let ((?x922 (* ?x363 ?x363 ?x363 ?x360 ?x71)))
 (let ((?x587 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x69 ?x69 ?x71)))
 (let ((?x1517 (* ?x360 ?x360 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1823 (+ (* (- 1) (* ?x69 ?x69 ?x69)) (* 4 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71)) (* (- 9) (* ?x363 ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71)) (* (- 9) (* ?x363 ?x69)) (* 4 (* ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71)) (* (- 5) (* ?x360 ?x360 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)) (* 9 (* ?x363 ?x69 ?x71)) ?x1517 (* 18 (* ?x69 ?x71)) (* 18 (* ?x363 ?x363 ?x363 ?x360 ?x71 ?x71)) (* (- 9) (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)) (* 9 (* ?x363 ?x363 ?x363 ?x363 ?x360 ?x71 ?x71)) (* (- 4) k) (* (- 4) m) (* (- 18) (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71)) (* 9 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71)) ?x587 (* 9 (* ?x363 ?x363 ?x360 ?x360 ?x69 ?x69 ?x71)) (* (- 5) (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x69 ?x71)) (* 5 (* ?x363 ?x363 ?x363 ?x360 ?x69 ?x71)) (* (- 1) (* ?x363 ?x363 ?x363 ?x360 ?x69 ?x69 ?x71)) (* (- 9) (* ?x363 ?x363 ?x363 ?x363 ?x360 ?x71)) (* 5 (* ?x69 ?x69)) (* (- 4) ?x922) (* (- 18) ?x361))))
 (let (($x1457 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1324 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1414 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (and $x152 (= ?x1414 (- 4)) $x1324 $x1457 (not (= ?x1823 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x537 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x71 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x360 (+ 6 m)))
 (let ((?x361 (* ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x525 (* 18 ?x361)))
 (let ((?x363 (+ 1 n)))
 (let ((?x922 (* ?x363 ?x363 ?x363 ?x360 ?x71)))
 (let ((?x887 (* ?x363 ?x363 ?x363 ?x363 ?x360 ?x71)))
 (let ((?x1180 (* 9 ?x887)))
 (let ((?x643 (* ?x363 ?x363 ?x363 ?x360 ?x69 ?x69 ?x71)))
 (let ((?x639 (* ?x363 ?x363 ?x363 ?x360 ?x69 ?x71)))
 (let ((?x838 (* (- 5) ?x639)))
 (let ((?x737 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x69 ?x71)))
 (let ((?x835 (* 5 ?x737)))
 (let ((?x655 (* ?x363 ?x363 ?x360 ?x360 ?x69 ?x69 ?x71)))
 (let ((?x836 (* (- 9) ?x655)))
 (let ((?x587 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x69 ?x69 ?x71)))
 (let ((?x1037 (* (- 1) ?x587)))
 (let ((?x567 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1039 (* (- 9) ?x567)))
 (let ((?x474 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71)))
 (let ((?x1038 (* 18 ?x474)))
 (let ((?x354 (* ?x363 ?x363 ?x363 ?x363 ?x360 ?x71 ?x71)))
 (let ((?x1269 (* (- 9) ?x354)))
 (let ((?x1712 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x1398 (* 9 ?x1712)))
 (let ((?x1529 (* ?x363 ?x363 ?x363 ?x360 ?x71 ?x71)))
 (let ((?x1506 (* (- 18) ?x1529)))
 (let ((?x1517 (* ?x360 ?x360 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x428 (* (- 1) ?x1517)))
 (let ((?x1259 (* ?x360 ?x360 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1354 (* 5 ?x1259)))
 (let ((?x1490 (* ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1505 (* (- 4) ?x1490)))
 (let ((?x1467 (* ?x363 ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71)))
 (let ((?x1267 (* 9 ?x1467)))
 (let ((?x1229 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71)))
 (let ((?x1263 (* (- 4) ?x1229)))
 (let ((?x1461 (* ?x69 ?x69 ?x69)))
 (let ((?x527 (+ ?x1461 ?x1263 ?x1267 (* 9 (* ?x363 ?x69)) ?x1505 ?x1354 (* (- 9) (* ?x363 ?x69 ?x71)) ?x428 (* (- 18) (* ?x69 ?x71)) ?x1506 ?x1398 ?x1269 (* 4 k) (* 4 m) ?x1038 ?x1039 ?x1037 ?x836 ?x835 ?x838 ?x643 ?x1180 (* (- 5) (* ?x69 ?x69)) (* 4 ?x922) ?x525)))
 (let (($x1457 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1503 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x239 (* (- 1) ?x49)))
 (let ((?x238 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (let (($x494 (and $x152 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x238 ?x239) 4) $x1503 $x1457 (not (= ?x527 0)))))
 (let ((?x1823 (+ (* (- 1) ?x1461) (* 4 ?x1229) (* (- 9) ?x1467) (* (- 9) (* ?x363 ?x69)) (* 4 ?x1490) (* (- 5) ?x1259) (* 9 (* ?x363 ?x69 ?x71)) ?x1517 (* 18 (* ?x69 ?x71)) (* 18 ?x1529) (* (- 9) ?x1712) (* 9 ?x354) (* (- 4) k) (* (- 4) m) (* (- 18) ?x474) (* 9 ?x567) ?x587 (* 9 ?x655) (* (- 5) ?x737) (* 5 ?x639) (* (- 1) ?x643) (* (- 9) ?x887) (* 5 (* ?x69 ?x69)) (* (- 4) ?x922) (* (- 18) ?x361))))
 (let (($x1324 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1414 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1460 (and $x152 (= ?x1414 (- 4)) $x1324 $x1457 (not (= ?x1823 0)))))
 (rewrite (= $x1460 $x494)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x119 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x71 (+ c k)))
 (let ((?x73 (+ n 1)))
 (let ((?x75 (+ (* (- 1) ?x69 ?x69 ?x69) (* 4 ?x71 ?x69 ?x69 ?x72 ?x72 ?x73))))
 (let ((?x79 (- (- ?x75 (* 9 ?x71 ?x71 ?x69 ?x69 ?x72 ?x72 ?x73 ?x73)) (* 9 ?x69 ?x73))))
 (let ((?x83 (- (+ ?x79 (* 4 ?x71 ?x71 ?x71 ?x69 ?x69 ?x72 ?x72)) (* 5 ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x72 ?x72))))
 (let ((?x88 (+ ?x83 (* 9 ?x71 ?x69 ?x73) (* ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x69 ?x72 ?x72) (* 18 ?x71 ?x69) (* 18 ?x71 ?x71 ?x72 ?x73 ?x73 ?x73))))
 (let ((?x92 (+ (- ?x88 (* 9 ?x71 ?x71 ?x71 ?x71 ?x69 ?x69 ?x72 ?x72 ?x73)) (* 9 ?x71 ?x71 ?x72 ?x73 ?x73 ?x73 ?x73))))
 (let ((?x96 (- (- ?x92 (* 4 ?x69)) (* 18 ?x71 ?x71 ?x69 ?x69 ?x72 ?x72 ?x73))))
 (let ((?x100 (+ ?x96 (* 9 ?x71 ?x71 ?x71 ?x69 ?x69 ?x72 ?x72 ?x73) (* ?x71 ?x69 ?x69 ?x69 ?x69 ?x72 ?x72 ?x73) (* 9 ?x71 ?x69 ?x69 ?x72 ?x72 ?x73 ?x73))))
 (let ((?x104 (+ (- ?x100 (* 5 ?x71 ?x69 ?x69 ?x69 ?x72 ?x72 ?x73)) (* 5 ?x71 ?x69 ?x72 ?x73 ?x73 ?x73))))
 (let ((?x108 (- (- ?x104 (* ?x71 ?x69 ?x69 ?x72 ?x73 ?x73 ?x73)) (* 9 ?x71 ?x72 ?x73 ?x73 ?x73 ?x73))))
 (let ((?x113 (- (+ ?x108 (* 5 ?x69 ?x69)) (* 4 ?x71 ?x72 ?x73 ?x73 ?x73))))
 (let (($x115 (= (- ?x113 (* 18 ?x71 ?x71 ?x71 ?x71 ?x69 ?x69 ?x72 ?x72)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x115))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1466 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x71 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x360 (+ 6 m)))
 (let ((?x361 (* ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x363 (+ 1 n)))
 (let ((?x922 (* ?x363 ?x363 ?x363 ?x360 ?x71)))
 (let ((?x587 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x69 ?x69 ?x71)))
 (let ((?x1517 (* ?x360 ?x360 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)))
 (let ((?x1823 (+ (* (- 1) (* ?x69 ?x69 ?x69)) (* 4 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71)) (* (- 9) (* ?x363 ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71)) (* (- 9) (* ?x363 ?x69)) (* 4 (* ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71)) (* (- 5) (* ?x360 ?x360 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)) (* 9 (* ?x363 ?x69 ?x71)) ?x1517 (* 18 (* ?x69 ?x71)) (* 18 (* ?x363 ?x363 ?x363 ?x360 ?x71 ?x71)) (* (- 9) (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71)) (* 9 (* ?x363 ?x363 ?x363 ?x363 ?x360 ?x71 ?x71)) (* (- 4) k) (* (- 4) m) (* (- 18) (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71)) (* 9 (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x71 ?x71 ?x71)) ?x587 (* 9 (* ?x363 ?x363 ?x360 ?x360 ?x69 ?x69 ?x71)) (* (- 5) (* ?x363 ?x360 ?x360 ?x69 ?x69 ?x69 ?x71)) (* 5 (* ?x363 ?x363 ?x363 ?x360 ?x69 ?x71)) (* (- 1) (* ?x363 ?x363 ?x363 ?x360 ?x69 ?x69 ?x71)) (* (- 9) (* ?x363 ?x363 ?x363 ?x363 ?x360 ?x71)) (* 5 (* ?x69 ?x69)) (* (- 4) ?x922) (* (- 18) ?x361))))
 (let (($x1457 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1324 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1414 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (let (($x1460 (and $x152 (= ?x1414 (- 4)) $x1324 $x1457 (not (= ?x1823 0)))))
 (let ((?x72 (+ m 6)))
 (let ((?x73 (+ n 1)))
 (let ((?x75 (+ (* (- 1) ?x69 ?x69 ?x69) (* 4 ?x71 ?x69 ?x69 ?x72 ?x72 ?x73))))
 (let ((?x79 (- (- ?x75 (* 9 ?x71 ?x71 ?x69 ?x69 ?x72 ?x72 ?x73 ?x73)) (* 9 ?x69 ?x73))))
 (let ((?x83 (- (+ ?x79 (* 4 ?x71 ?x71 ?x71 ?x69 ?x69 ?x72 ?x72)) (* 5 ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x72 ?x72))))
 (let ((?x88 (+ ?x83 (* 9 ?x71 ?x69 ?x73) (* ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x69 ?x72 ?x72) (* 18 ?x71 ?x69) (* 18 ?x71 ?x71 ?x72 ?x73 ?x73 ?x73))))
 (let ((?x92 (+ (- ?x88 (* 9 ?x71 ?x71 ?x71 ?x71 ?x69 ?x69 ?x72 ?x72 ?x73)) (* 9 ?x71 ?x71 ?x72 ?x73 ?x73 ?x73 ?x73))))
 (let ((?x96 (- (- ?x92 (* 4 ?x69)) (* 18 ?x71 ?x71 ?x69 ?x69 ?x72 ?x72 ?x73))))
 (let ((?x100 (+ ?x96 (* 9 ?x71 ?x71 ?x71 ?x69 ?x69 ?x72 ?x72 ?x73) (* ?x71 ?x69 ?x69 ?x69 ?x69 ?x72 ?x72 ?x73) (* 9 ?x71 ?x69 ?x69 ?x72 ?x72 ?x73 ?x73))))
 (let ((?x104 (+ (- ?x100 (* 5 ?x71 ?x69 ?x69 ?x69 ?x72 ?x72 ?x73)) (* 5 ?x71 ?x69 ?x72 ?x73 ?x73 ?x73))))
 (let ((?x108 (- (- ?x104 (* ?x71 ?x69 ?x69 ?x72 ?x73 ?x73 ?x73)) (* 9 ?x71 ?x72 ?x73 ?x73 ?x73 ?x73))))
 (let ((?x113 (- (+ ?x108 (* 5 ?x69 ?x69)) (* 4 ?x71 ?x72 ?x73 ?x73 ?x73))))
 (let (($x115 (= (- ?x113 (* 18 ?x71 ?x71 ?x71 ?x71 ?x69 ?x69 ?x72 ?x72)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x118 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x115)))))
 (rewrite (= $x118 $x1460))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x120 (asserted $x119)))
 (let ((@x1262 (mp (mp @x120 (quant-intro (proof-bind ?x1466) (= $x119 $x1232)) $x1232) (rewrite (= $x1232 $x1232)) $x1232)))
 (let ((@x1474 (mp (mp @x1262 (quant-intro (proof-bind ?x537) (= $x1232 $x533)) $x533) (quant-intro (proof-bind ?x805) (= $x533 $x771)) $x771)))
 (let ((@x1480 (mp (mp~ @x1474 (sk (~ $x771 $x1387)) $x1387) (rewrite (= $x1387 $x1166)) $x1166)))
 (let ((@x1062 (and-elim @x1480 $x1486)))
 (let ((@x773 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1486) $x1223)) @x1062 $x1223)))
 (let (($x1453 (>= ?x1452 4)))
 (let ((@x1140 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1486) $x1453)) @x1062 $x1453)))
 (let (($x1355 (<= ?x1179 (- 6))))
 (let ((@x1404 (and-elim @x1480 $x1454)))
 (let ((@x1351 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1454) $x1355)) @x1404 $x1355)))
 (let (($x1343 (>= ?x1179 (- 6))))
 (let ((@x136 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1454) $x1343)) @x1404 $x1343)))
 (let (($x142 (<= ?x1328 1)))
 (let ((@x1120 (and-elim @x1480 $x618)))
 (let ((@x1178 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x618) $x142)) @x1120 $x142)))
 (let (($x1403 (>= ?x1328 1)))
 (let ((@x659 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x618) $x1403)) @x1120 $x1403)))
 (let (($x1161 (<= ?x1247 1)))
 (let ((@x1249 (and-elim @x1480 $x1211)))
 (let ((@x448 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1211) $x1161)) @x1249 $x1161)))
 (let (($x141 (>= ?x1247 1)))
 (let ((@x1210 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1211) $x141)) @x1249 $x141)))
 (let (($x1175 (not (>= ?x1411 0))))
 (let (($x1346 (<= ?x1411 0)))
 (let ((@x1363 ((_ th-lemma arith) (hypothesis (not $x1346)) @x1210 @x448 @x136 @x1351 @x659 @x1178 @x1210 @x448 @x1140 @x773 @x1210 @x448 @x1210 @x448 @x136 @x1351 @x136 @x1351 @x1210 @x448 @x1210 @x448 @x659 @x1178 @x136 @x1351 @x1140 @x773 false)))
 (let ((@x695 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1167 (not $x1346) $x1175)) (and-elim @x1480 $x1242) (or (not $x1346) $x1175))))
 ((_ th-lemma arith) (unit-resolution @x695 (lemma @x1363 $x1346) $x1175) @x1210 @x448 @x136 @x1351 @x1210 @x448 @x659 @x1178 @x1140 @x773 @x659 @x1178 @x1210 @x448 @x1210 @x448 @x659 @x1178 @x136 @x1351 @x136 @x1351 @x1210 @x448 @x1210 @x448 @x659 @x1178 @x136 @x1351 @x1140 @x773 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        80
 :arith-assert-upper        378
 :arith-branch-var          4
 :arith-conflicts           13
 :arith-eq-adapter          5
 :arith-gcd-tests           13
 :arith-grobner             2
 :arith-ineq-splits         4
 :arith-max-min             1068
 :arith-nonlinear-bounds    78
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             8
 :arith-pivots              12
 :arith-row-summations      18
 :arith-tableau-max-columns 80
 :arith-tableau-max-rows    9
 :conflicts                 13
 :decisions                 343
 :del-clause                14
 :final-checks              23
 :max-memory                3.97
 :memory                    3.36
 :mk-bool-var               138
 :mk-clause                 23
 :num-allocs                2064619
 :num-checks                1
 :propagations              28
 :rlimit-count              27527
 :time                      0.02
 :total-time                0.03)
