unsat
((set-logic NIA)
(declare-fun v!0 () Int)
(declare-fun u!1 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x1197 (* u!1 u!1)))
 (let ((?x48 (* v00 v00)))
 (let ((?x33 (* 2 u00)))
 (let ((?x30 (* 4 r00)))
 (let ((?x1858 (+ ?x30 ?x33 (* (- 2) v00) (* (- 1) (* u00 u00)) ?x48 (* 2 v!0) ?x1197 (* (- 4) r!2) (* (- 2) u!1) (* (- 1) (* v!0 v!0)))))
 (let (($x1298 (<= ?x1858 0)))
 (let (($x1851 (= ?x1858 0)))
 (let ((?x2612 (* (- 4) (* r!2 r!2 u!1))))
 (let ((?x2374 (* v!0 v!0 v!0 u!1 u!1)))
 (let ((?x2364 (* v!0 r!2 r!2 u!1 u!1)))
 (let ((?x2332 (* (- 4) (* v!0 v!0 u!1))))
 (let ((?x2046 (* u!1 u!1 u!1)))
 (let ((?x1149 (* (- 2) ?x2046)))
 (let ((?x1770 (* (- 2) (* v00 v!0 r!2 r!2))))
 (let ((?x1894 (* v!0 v!0 u!1 u!1)))
 (let ((?x1864 (* (- 1) (* u00 u00 u!1 u!1))))
 (let ((?x583 (* 2 (* r!2 r!2 u!1 u!1))))
 (let ((?x1800 (* (- 4) (* v!0 r!2 r!2 r!2))))
 (let ((?x1802 (* 4 (* r00 v!0 r!2 r!2))))
 (let ((?x1827 (* 2 (* u00 v!0 r!2 r!2))))
 (let ((?x2079 (* (- 2) (* v00 u!1 u!1))))
 (let ((?x263 (* 2 (* u00 u!1 u!1))))
 (let ((?x1479 (* v00 v00 u!1 u!1)))
 (let ((?x2266 (* 4 (* r00 u!1 u!1))))
 (let ((?x2357 (* 4 (* v!0 v!0 r!2 u!1))))
 (let ((?x1291 (* (- 1) (* u00 u00 v!0 r!2 r!2))))
 (let ((?x1142 (* (- 1) (* v!0 v!0 v!0 v!0 v!0))))
 (let ((?x1135 (* 4 (* v!0 v!0 v!0))))
 (let ((?x1401 (* 2 (* v!0 u!1 u!1))))
 (let ((?x282 (* (- 1) (* v!0 v!0 v!0 r!2 r!2))))
 (let ((?x794 (* (- 8) (* r!2 r!2 r!2))))
 (let ((?x1042 (* r!2 u!1 u!1)))
 (let ((?x1045 (* (- 4) ?x1042)))
 (let ((?x360 (* u!1 u!1 u!1 u!1)))
 (let ((?x150 (* v00 v00 v!0 r!2 r!2)))
 (let ((?x2446 (+ (* 2 (* v!0 v!0 v!0 v!0 r!2)) ?x150 (* (- 4) (* v00 v00 v!0 r!2)) (* 2 (* v00 v00 v!0 v!0)) (* 8 (* v!0 v!0 r!2 r!2)) ?x360 (* (- 8) (* r00 v!0 v!0 r!2)) (* 8 (* v00 v!0 r!2)) (* 4 (* v00 v!0 v!0 r!2)) (* (- 2) (* v00 v!0 v!0 v!0)) ?x1045 ?x794 (* 4 (* u00 u00 v!0 r!2)) ?x282 ?x1401 ?x1135 ?x1142 (* (- 2) (* v00 v00 v!0 v!0 r!2)) (* (- 4) (* u00 v!0 v!0 r!2)) ?x1291 ?x2357 (* (- 2) (* u00 u00 r!2 r!2)) (* (- 2) (* u00 u00 v!0 v!0)) (* 2 (* u00 u00 v!0 v!0 r!2)) ?x2266 (* (- 1) (* u00 u00 v!0 v!0 v!0)) (* 4 (* u00 r!2 r!2)) (* v00 v00 v!0 v!0 v!0) ?x1479 ?x263 ?x2079 ?x1827 (* (- 4) (* v!0 v!0 v!0 r!2)) ?x1802 (* (- 4) (* v00 r!2 r!2)) (* (- 4) (* v00 v!0 v!0)) (* 8 (* r00 r!2 r!2)) ?x1800 (* 4 (* r00 v!0 v!0 v!0)) (* (- 8) (* u00 v!0 r!2)) ?x583 ?x1864 (* 4 (* u00 v!0 v!0)) (* (- 16) (* r00 v!0 r!2)) (* 20 (* v!0 r!2 r!2)) (* 8 (* r00 v!0 v!0)) (* 2 (* v00 v00 r!2 r!2)) ?x1894 ?x1770 ?x1149 (* 8 (* v!0 r!2 u!1)) (* 2 (* u00 v!0 v!0 v!0)) (* (- 2) (* v!0 r!2 r!2 u!1)) ?x2332 (* (- 2) (* v!0 v!0 v!0 u!1)) ?x2364 (* (- 4) (* v!0 r!2 u!1 u!1)) (* (- 2) (* v!0 v!0 r!2 u!1 u!1)) ?x2374 (* (- 16) (* v!0 v!0 r!2)) ?x2612)))
 (let (($x2448 (= ?x2446 0)))
 (let (($x1868 (not $x2448)))
 (let ((?x858 (+ (* 16 r00) (* 8 u00) (* (- 8) v00) (* (- 4) (* u00 u00)) (* 4 ?x48) ?x150 (* 2 (* v!0 v!0 r!2 r!2)) (* 4 (* r00 v!0 u!1 u!1)) (* 4 (* u00 v!0 r!2 u!1)) ?x360 (* 8 v!0) ?x1045 (* (- 8) (* v00 u!1)) ?x282 ?x1401 (* (- 4) ?x1197) ?x1291 ?x2357 ?x2266 ?x1479 ?x263 ?x2079 ?x1827 (* (- 16) r!2) ?x1802 ?x1800 (* (- 2) (* v!0 v!0 v!0 r!2 u!1)) ?x1864 (* (- 8) u!1) (* 2 (* v00 v00 v!0 r!2 u!1)) (* v00 v00 v!0 u!1 u!1) (* 2 (* u00 v!0 u!1 u!1)) ?x1894 ?x1770 (* 8 (* u00 u!1)) (* (- 4) (* u00 u00 u!1)) (* 2 ?x2046) (* (- 4) (* v!0 v!0)) (* 8 (* r00 v!0 r!2 u!1)) (* (- 16) (* r!2 u!1)) (* (- 10) (* v!0 r!2 r!2 u!1)) ?x2332 (* 16 (* r00 u!1)) (* (- 4) (* v00 v!0 r!2 u!1)) (* (- 2) (* v00 v!0 u!1 u!1)) ?x2364 (* (- 8) (* v!0 r!2 u!1 u!1)) (* (- 1) ?x2374) (* (- 1) (* u00 u00 v!0 u!1 u!1)) (* (- 2) (* v!0 u!1 u!1 u!1)) (* 2 (* v!0 r!2 u!1 u!1 u!1)) (* (- 2) (* u00 u00 v!0 r!2 u!1)) (* v!0 u!1 u!1 u!1 u!1) (* 8 (* v!0 u!1)) (* 4 (* v00 v00 u!1)))))
 (let (($x949 (= ?x858 0)))
 (let (($x727 (or (not $x949) $x1868)))
 (let (($x1772 (and $x1851 $x727)))
 (let ((?x1084 (* u!1 u!1 v!0 v!0 v!0)))
 (let ((?x1123 (* r!2 r!2 v!0 u00 u00)))
 (let ((?x1723 (* r!2 r!2 v!0 v!0 v!0)))
 (let ((?x1059 (* u!1 u!1 u00 u00)))
 (let ((?x2277 (* (- 4) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x1745 (* 4 ?x46)))
 (let ((?x318 (* 8 v00)))
 (let ((?x2275 (* (- 8) u00)))
 (let ((?x2659 (* (- 16) r00)))
 (let ((?x2073 (+ (* 16 r!2) (* 8 u!1) (* (- 8) v!0) ?x2659 ?x2275 ?x318 (* 4 ?x1197) (* 4 (* v!0 v!0)) ?x1745 ?x2277 (* (- 1) ?x360) ?x1059 (* (- 1) (* u!1 u!1 v00 v00)) (* (- 2) (* u!1 u!1 u00)) (* 2 (* u!1 u!1 v00)) (* (- 8) (* u!1 u00)) (* 4 ?x1042) (* (- 2) (* r!2 r!2 v!0 u00)) (* (- 2) (* u!1 u!1 v!0)) (* 8 (* u!1 v00)) (* 2 (* r!2 r!2 v!0 v00)) ?x1723 (* (- 2) (* r!2 r!2 v!0 v!0)) (* (- 8) (* r!2 u!1 v!0 r00)) (* (- 4) (* u!1 u!1 v!0 r00)) (* (- 4) (* r!2 u!1 v!0 u00)) (* (- 1) (* r!2 r!2 v!0 v00 v00)) ?x1149 (* (- 1) (* u!1 u!1 v!0 v!0)) ?x1123 (* 16 (* r!2 u!1)) (* (- 4) (* u!1 u!1 r00)) (* 10 (* r!2 r!2 u!1 v!0)) (* 4 (* u!1 v!0 v!0)) (* (- 4) (* r!2 u!1 v!0 v!0)) (* (- 1) (* r!2 r!2 u!1 u!1 v!0)) (* 8 (* r!2 u!1 u!1 v!0)) ?x1084 (* 4 (* r!2 r!2 r!2 v!0)) (* 4 (* r!2 u!1 v!0 v00)) (* 2 (* u!1 u!1 v!0 v00)) (* (- 4) (* r!2 r!2 v!0 r00)) (* 2 (* r!2 u!1 v!0 v!0 v!0)) (* (- 2) (* r!2 u!1 v!0 v00 v00)) (* (- 1) (* u!1 u!1 v!0 v00 v00)) (* (- 2) (* u!1 u!1 v!0 u00)) (* 4 (* u!1 u00 u00)) (* 2 (* r!2 u!1 v!0 u00 u00)) (* u!1 u!1 v!0 u00 u00) (* 2 (* u!1 u!1 u!1 v!0)) (* (- 2) (* r!2 u!1 u!1 u!1 v!0)) (* (- 1) (* u!1 u!1 u!1 u!1 v!0)) (* (- 8) (* u!1 v!0)) (* (- 4) (* u!1 v00 v00)) (* (- 16) (* u!1 r00)))))
 (let ((?x1829 (* r!2 r!2 u!1 u!1 v!0)))
 (let ((?x1154 (* u!1 u!1 v!0 v!0)))
 (let ((?x1144 (* r!2 r!2 v!0 v00 v00)))
 (let ((?x2061 (* u!1 u!1 v00 v00)))
 (let ((?x2578 (+ ?x360 (* (- 1) ?x1059) ?x2061 (* 2 (* u!1 u!1 u00)) (* (- 2) (* u!1 u!1 v00)) ?x1045 (* 2 (* r!2 r!2 v!0 u00)) (* 2 (* u!1 u!1 v!0)) (* (- 2) (* r!2 r!2 v!0 v00)) (* (- 4) (* r!2 r!2 v00)) (* 8 (* r!2 v!0 v00)) (* (- 4) (* v!0 v!0 v00)) (* 4 (* r!2 v!0 v!0 v00)) (* (- 2) (* v!0 v!0 v!0 v00)) (* (- 1) ?x1723) (* 20 (* r!2 r!2 v!0)) ?x1135 (* 8 (* r!2 r!2 v!0 v!0)) (* 2 (* r!2 v!0 v!0 v!0 v!0)) ?x1142 ?x1144 (* 2 (* r!2 r!2 v00 v00)) (* (- 4) (* r!2 v!0 v00 v00)) (* 2 (* v!0 v!0 v00 v00)) (* (- 2) (* r!2 v!0 v!0 v00 v00)) (* v!0 v!0 v!0 v00 v00) ?x1149 (* (- 8) (* r!2 v!0 u00)) ?x1154 (* (- 4) (* r!2 v!0 v!0 u00)) (* (- 2) (* r!2 r!2 u00 u00)) (* 4 (* r!2 v!0 u00 u00)) (* (- 2) (* v!0 v!0 u00 u00)) (* (- 1) ?x1123) (* 2 (* r!2 v!0 v!0 u00 u00)) (* (- 1) (* v!0 v!0 v!0 u00 u00)) (* 4 (* r!2 r!2 u00)) (* 4 (* u!1 u!1 r00)) (* 2 (* v!0 v!0 v!0 u00)) (* (- 2) (* r!2 r!2 u!1 v!0)) ?x2612 (* 8 (* r!2 u!1 v!0)) (* (- 4) (* u!1 v!0 v!0)) (* 4 (* r!2 u!1 v!0 v!0)) (* (- 2) (* u!1 v!0 v!0 v!0)) ?x1829 ?x583 (* (- 4) (* r!2 u!1 u!1 v!0)) (* (- 2) (* r!2 u!1 u!1 v!0 v!0)) ?x1084 (* (- 4) (* r!2 r!2 r!2 v!0)) (* 4 (* v!0 v!0 v!0 r00)) (* 4 (* r!2 r!2 v!0 r00)) ?x794 (* 4 (* v!0 v!0 u00)) (* 8 (* r!2 r!2 r00)) (* (- 16) (* r!2 v!0 r00)) (* (- 8) (* r!2 v!0 v!0 r00)) (* 8 (* v!0 v!0 r00)) (* (- 4) (* r!2 v!0 v!0 v!0)) (* (- 16) (* r!2 v!0 v!0)))))
 (let ((?x232 (* (- 1) ?x48)))
 (let ((?x2062 (* v!0 v!0)))
 (let ((?x41 (* 2 v00)))
 (let ((?x156 (* (- 2) u00)))
 (let ((?x140 (* (- 4) r00)))
 (let ((?x2081 (+ (* 4 r!2) (* 2 u!1) (* (- 2) v!0) ?x140 ?x156 ?x41 (* (- 1) ?x1197) ?x2062 ?x46 ?x232)))
 (let (($x856 (and (= ?x2081 0) (or (not (= ?x2578 0)) (not (= ?x2073 0))))))
 (let (($x1732 (exists ((r Int) (u Int) (v Int) )(! (let ((?x2668 (* (- 16) (* u r00))))
 (let ((?x2306 (* (- 4) (* u v00 v00))))
 (let ((?x2209 (* u v)))
 (let ((?x2667 (* (- 8) ?x2209)))
 (let ((?x2303 (* (- 1) (* u u u u v))))
 (let ((?x2302 (* (- 2) (* r u u u v))))
 (let ((?x1940 (* 2 (* u u u v))))
 (let ((?x1860 (* u u v u00 u00)))
 (let ((?x1866 (* 2 (* r u v u00 u00))))
 (let ((?x1753 (* 4 (* u u00 u00))))
 (let ((?x2666 (* (- 2) (* u u v u00))))
 (let ((?x2297 (* (- 1) (* u u v v00 v00))))
 (let ((?x2296 (* (- 2) (* r u v v00 v00))))
 (let ((?x1518 (* 2 (* r u v v v))))
 (let ((?x1259 (* r r v r00)))
 (let ((?x2665 (* (- 4) ?x1259)))
 (let ((?x1249 (* 2 (* u u v v00))))
 (let ((?x2291 (* 4 (* r u v v00))))
 (let ((?x1220 (* r r r v)))
 (let ((?x1221 (* 4 ?x1220)))
 (let ((?x1176 (* u u v v v)))
 (let ((?x1138 (* r u u v)))
 (let ((?x2083 (* 8 ?x1138)))
 (let ((?x1121 (* r r u u v)))
 (let ((?x1464 (* (- 1) ?x1121)))
 (let ((?x1068 (* r u v v)))
 (let ((?x1462 (* (- 4) ?x1068)))
 (let ((?x1055 (* u v v)))
 (let ((?x1461 (* 4 ?x1055)))
 (let ((?x996 (* r r u v)))
 (let ((?x2286 (* 10 ?x996)))
 (let ((?x973 (* u u r00)))
 (let ((?x1458 (* (- 4) ?x973)))
 (let ((?x2284 (* 16 (* r u))))
 (let ((?x901 (* r r v u00 u00)))
 (let ((?x809 (* u u v v)))
 (let ((?x844 (* (- 1) ?x809)))
 (let ((?x763 (* u u u)))
 (let ((?x776 (* (- 2) ?x763)))
 (let ((?x704 (* r r v v00 v00)))
 (let ((?x1452 (* (- 1) ?x704)))
 (let ((?x2664 (* (- 4) (* r u v u00))))
 (let ((?x2663 (* (- 4) (* u u v r00))))
 (let ((?x2662 (* (- 8) (* r u v r00))))
 (let ((?x491 (* r r v v)))
 (let ((?x2281 (* (- 2) ?x491)))
 (let ((?x432 (* r r v v v)))
 (let ((?x306 (* r r v v00)))
 (let ((?x307 (* 2 ?x306)))
 (let ((?x2280 (* 8 (* u v00))))
 (let ((?x242 (* u u v)))
 (let ((?x1414 (* (- 2) ?x242)))
 (let ((?x225 (* r r v u00)))
 (let ((?x2661 (* (- 2) ?x225)))
 (let ((?x200 (* r u u)))
 (let ((?x201 (* 4 ?x200)))
 (let ((?x173 (* u u00)))
 (let ((?x2660 (* (- 8) ?x173)))
 (let ((?x145 (* u u v00)))
 (let ((?x147 (* 2 ?x145)))
 (let ((?x137 (* u u u00)))
 (let ((?x1413 (* (- 2) ?x137)))
 (let ((?x87 (* u u v00 v00)))
 (let ((?x1412 (* (- 1) ?x87)))
 (let ((?x71 (* u u u00 u00)))
 (let ((?x67 (* u u u u)))
 (let ((?x1411 (* (- 1) ?x67)))
 (let ((?x48 (* v00 v00)))
 (let ((?x2277 (* (- 4) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x1745 (* 4 ?x46)))
 (let ((?x45 (* v v)))
 (let ((?x1804 (* 4 ?x45)))
 (let ((?x43 (* u u)))
 (let ((?x815 (* 4 ?x43)))
 (let ((?x318 (* 8 v00)))
 (let ((?x2275 (* (- 8) u00)))
 (let ((?x2659 (* (- 16) r00)))
 (let ((?x2274 (* (- 8) v)))
 (let ((?x2273 (* 16 r)))
 (let ((?x1684 (+ ?x2273 (* 8 u) ?x2274 ?x2659 ?x2275 ?x318 ?x815 ?x1804 ?x1745 ?x2277 ?x1411 ?x71 ?x1412 ?x1413 ?x147 ?x2660 ?x201 ?x2661 ?x1414 ?x2280 ?x307 ?x432 ?x2281 ?x2662 ?x2663 ?x2664 ?x1452 ?x776 ?x844 ?x901 ?x2284 ?x1458 ?x2286 ?x1461 ?x1462 ?x1464 ?x2083 ?x1176 ?x1221 ?x2291 ?x1249 ?x2665 ?x1518 ?x2296 ?x2297 ?x2666 ?x1753 ?x1866 ?x1860 ?x1940 ?x2302 ?x2303 ?x2667 ?x2306 ?x2668)))
 (let ((?x1089 (* (- 16) (* r v v))))
 (let ((?x1577 (* (- 4) (* r v v v))))
 (let ((?x265 (* 8 (* v v r00))))
 (let ((?x259 (* (- 8) (* r v v r00))))
 (let ((?x222 (* (- 16) (* r v r00))))
 (let ((?x220 (* 8 (* r r r00))))
 (let ((?x503 (* 4 (* v v u00))))
 (let ((?x1269 (* r r r)))
 (let ((?x376 (* (- 8) ?x1269)))
 (let ((?x363 (* 4 ?x1259)))
 (let ((?x362 (* 4 (* v v v r00))))
 (let ((?x288 (* (- 4) ?x1220)))
 (let ((?x1160 (* r u u v v)))
 (let ((?x1163 (* (- 2) ?x1160)))
 (let ((?x1130 (* r r u u)))
 (let ((?x1510 (* 2 ?x1130)))
 (let ((?x1086 (* u v v v)))
 (let ((?x921 (* (- 2) ?x1086)))
 (let ((?x1796 (* 4 ?x1068)))
 (let ((?x1017 (* (- 4) ?x1055)))
 (let ((?x1037 (* r u v)))
 (let ((?x1126 (* 8 ?x1037)))
 (let ((?x1029 (* r r u)))
 (let ((?x932 (* (- 4) ?x1029)))
 (let ((?x917 (* (- 2) ?x996)))
 (let ((?x940 (* 2 (* v v v u00))))
 (let ((?x750 (* 4 ?x973)))
 (let ((?x1499 (* 4 (* r r u00))))
 (let ((?x919 (* v v v u00 u00)))
 (let ((?x707 (* (- 1) ?x919)))
 (let ((?x904 (* r v v u00 u00)))
 (let ((?x1585 (* 2 ?x904)))
 (let ((?x737 (* (- 1) ?x901)))
 (let ((?x897 (* v v u00 u00)))
 (let ((?x1580 (* (- 2) ?x897)))
 (let ((?x889 (* r v u00 u00)))
 (let ((?x749 (* 4 ?x889)))
 (let ((?x881 (* r r u00 u00)))
 (let ((?x744 (* (- 2) ?x881)))
 (let ((?x1393 (* (- 4) (* r v v u00))))
 (let ((?x2184 (* (- 8) (* r v u00))))
 (let ((?x739 (* v v v v00 v00)))
 (let ((?x733 (* r v v v00 v00)))
 (let ((?x1109 (* (- 2) ?x733)))
 (let ((?x729 (* v v v00 v00)))
 (let ((?x2153 (* 2 ?x729)))
 (let ((?x721 (* r v v00 v00)))
 (let ((?x1108 (* (- 4) ?x721)))
 (let ((?x713 (* r r v00 v00)))
 (let ((?x1372 (* 2 ?x713)))
 (let ((?x547 (* v v v v v)))
 (let ((?x1885 (* (- 1) ?x547)))
 (let ((?x541 (* r v v v v)))
 (let ((?x227 (* 2 ?x541)))
 (let ((?x592 (* 8 ?x491)))
 (let ((?x478 (* 4 (* v v v))))
 (let ((?x461 (* r r v)))
 (let ((?x591 (* 20 ?x461)))
 (let ((?x980 (* (- 1) ?x432)))
 (let ((?x374 (* v v v v00)))
 (let ((?x956 (* (- 2) ?x374)))
 (let ((?x366 (* r v v v00)))
 (let ((?x2139 (* 4 ?x366)))
 (let ((?x355 (* v v v00)))
 (let ((?x2134 (* (- 4) ?x355)))
 (let ((?x347 (* r v v00)))
 (let ((?x2131 (* 8 ?x347)))
 (let ((?x339 (* r r v00)))
 (let ((?x2125 (* (- 4) ?x339)))
 (let ((?x658 (* (- 2) ?x306)))
 (let ((?x1931 (* 2 ?x242)))
 (let ((?x668 (* 2 ?x225)))
 (let ((?x2029 (* (- 4) ?x200)))
 (let ((?x383 (* (- 2) ?x145)))
 (let ((?x2169 (* 2 ?x137)))
 (let ((?x1390 (* (- 1) ?x71)))
 (let ((?x258 (+ ?x67 ?x1390 ?x87 ?x2169 ?x383 ?x2029 ?x668 ?x1931 ?x658 ?x2125 ?x2131 ?x2134 ?x2139 ?x956 ?x980 ?x591 ?x478 ?x592 ?x227 ?x1885 ?x704 ?x1372 ?x1108 ?x2153 ?x1109 ?x739 ?x776 ?x2184 ?x809 ?x1393 ?x744 ?x749 ?x1580 ?x737 ?x1585 ?x707 ?x1499 ?x750 ?x940 ?x917 ?x932 ?x1126 ?x1017 ?x1796 ?x921 ?x1121 ?x1510 (* (- 4) ?x1138) ?x1163 ?x1176 ?x288 ?x362 ?x363 ?x376 ?x503 ?x220 ?x222 ?x259 ?x265 ?x1577 ?x1089)))
 (let ((?x232 (* (- 1) ?x48)))
 (let ((?x210 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x156 (* (- 2) u00)))
 (let ((?x140 (* (- 4) r00)))
 (let ((?x186 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x28 (* 4 r)))
 (let (($x243 (= (+ ?x28 ?x36 ?x186 ?x140 ?x156 ?x41 ?x210 ?x45 ?x46 ?x232) 0)))
 (and $x243 (or (not (= ?x258 0)) (not (= ?x1684 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!28))
 ))
 (let (($x611 (exists ((r Int) (u Int) (v Int) )(! (let ((?x2668 (* (- 16) (* u r00))))
 (let ((?x2306 (* (- 4) (* u v00 v00))))
 (let ((?x2209 (* u v)))
 (let ((?x2667 (* (- 8) ?x2209)))
 (let ((?x2303 (* (- 1) (* u u u u v))))
 (let ((?x2302 (* (- 2) (* r u u u v))))
 (let ((?x1940 (* 2 (* u u u v))))
 (let ((?x1860 (* u u v u00 u00)))
 (let ((?x1866 (* 2 (* r u v u00 u00))))
 (let ((?x1753 (* 4 (* u u00 u00))))
 (let ((?x2666 (* (- 2) (* u u v u00))))
 (let ((?x2297 (* (- 1) (* u u v v00 v00))))
 (let ((?x2296 (* (- 2) (* r u v v00 v00))))
 (let ((?x1518 (* 2 (* r u v v v))))
 (let ((?x1470 (* (- 2) (* u u 2))))
 (let ((?x1259 (* r r v r00)))
 (let ((?x2665 (* (- 4) ?x1259)))
 (let ((?x1249 (* 2 (* u u v v00))))
 (let ((?x2291 (* 4 (* r u v v00))))
 (let ((?x1220 (* r r r v)))
 (let ((?x1221 (* 4 ?x1220)))
 (let ((?x1176 (* u u v v v)))
 (let ((?x1138 (* r u u v)))
 (let ((?x2083 (* 8 ?x1138)))
 (let ((?x1121 (* r r u u v)))
 (let ((?x1464 (* (- 1) ?x1121)))
 (let ((?x1068 (* r u v v)))
 (let ((?x1462 (* (- 4) ?x1068)))
 (let ((?x1055 (* u v v)))
 (let ((?x1461 (* 4 ?x1055)))
 (let ((?x996 (* r r u v)))
 (let ((?x2286 (* 10 ?x996)))
 (let ((?x973 (* u u r00)))
 (let ((?x1458 (* (- 4) ?x973)))
 (let ((?x2284 (* 16 (* r u))))
 (let ((?x901 (* r r v u00 u00)))
 (let ((?x809 (* u u v v)))
 (let ((?x844 (* (- 1) ?x809)))
 (let ((?x2283 (* (- 2) (* u 2 u))))
 (let ((?x2282 (* (- 2) (* u 2 2))))
 (let ((?x763 (* u u u)))
 (let ((?x776 (* (- 2) ?x763)))
 (let ((?x704 (* r r v v00 v00)))
 (let ((?x1452 (* (- 1) ?x704)))
 (let ((?x2664 (* (- 4) (* r u v u00))))
 (let ((?x2663 (* (- 4) (* u u v r00))))
 (let ((?x2662 (* (- 8) (* r u v r00))))
 (let ((?x491 (* r r v v)))
 (let ((?x2281 (* (- 2) ?x491)))
 (let ((?x432 (* r r v v v)))
 (let ((?x306 (* r r v v00)))
 (let ((?x307 (* 2 ?x306)))
 (let ((?x2280 (* 8 (* u v00))))
 (let ((?x242 (* u u v)))
 (let ((?x1414 (* (- 2) ?x242)))
 (let ((?x225 (* r r v u00)))
 (let ((?x2661 (* (- 2) ?x225)))
 (let ((?x200 (* r u u)))
 (let ((?x201 (* 4 ?x200)))
 (let ((?x173 (* u u00)))
 (let ((?x2660 (* (- 8) ?x173)))
 (let ((?x145 (* u u v00)))
 (let ((?x147 (* 2 ?x145)))
 (let ((?x137 (* u u u00)))
 (let ((?x1413 (* (- 2) ?x137)))
 (let ((?x87 (* u u v00 v00)))
 (let ((?x1412 (* (- 1) ?x87)))
 (let ((?x71 (* u u u00 u00)))
 (let ((?x67 (* u u u u)))
 (let ((?x1411 (* (- 1) ?x67)))
 (let ((?x48 (* v00 v00)))
 (let ((?x2277 (* (- 4) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x1745 (* 4 ?x46)))
 (let ((?x45 (* v v)))
 (let ((?x1804 (* 4 ?x45)))
 (let ((?x43 (* u u)))
 (let ((?x2276 (* 12 ?x43)))
 (let ((?x318 (* 8 v00)))
 (let ((?x2275 (* (- 8) u00)))
 (let ((?x2659 (* (- 16) r00)))
 (let ((?x2274 (* (- 8) v)))
 (let ((?x1672 (* 16 u)))
 (let ((?x2273 (* 16 r)))
 (let ((?x2669 (+ ?x2273 ?x1672 ?x2274 ?x2659 ?x2275 ?x318 ?x2276 ?x1804 ?x1745 ?x2277 ?x1411 ?x71 ?x1412 ?x1413 ?x147 ?x2660 ?x201 ?x2661 ?x1414 ?x2280 ?x307 ?x432 ?x2281 ?x2662 ?x2663 ?x2664 ?x1452 ?x776 ?x2282 ?x2283 ?x844 ?x901 ?x2284 ?x1458 ?x2286 ?x1461 ?x1462 ?x1464 ?x2083 ?x1176 ?x1221 ?x2291 ?x1249 ?x2665 ?x1470 ?x1518 ?x2296 ?x2297 ?x2666 ?x1753 ?x1866 ?x1860 ?x1940 ?x2302 ?x2303 ?x2667 ?x2306 ?x2668)))
 (let ((?x1089 (* (- 16) (* r v v))))
 (let ((?x1577 (* (- 4) (* r v v v))))
 (let ((?x265 (* 8 (* v v r00))))
 (let ((?x259 (* (- 8) (* r v v r00))))
 (let ((?x222 (* (- 16) (* r v r00))))
 (let ((?x220 (* 8 (* r r r00))))
 (let ((?x503 (* 4 (* v v u00))))
 (let ((?x1269 (* r r r)))
 (let ((?x376 (* (- 8) ?x1269)))
 (let ((?x363 (* 4 ?x1259)))
 (let ((?x362 (* 4 (* v v v r00))))
 (let ((?x288 (* (- 4) ?x1220)))
 (let ((?x1160 (* r u u v v)))
 (let ((?x1163 (* (- 2) ?x1160)))
 (let ((?x1130 (* r r u u)))
 (let ((?x1510 (* 2 ?x1130)))
 (let ((?x1086 (* u v v v)))
 (let ((?x921 (* (- 2) ?x1086)))
 (let ((?x1796 (* 4 ?x1068)))
 (let ((?x1017 (* (- 4) ?x1055)))
 (let ((?x1037 (* r u v)))
 (let ((?x1126 (* 8 ?x1037)))
 (let ((?x1029 (* r r u)))
 (let ((?x932 (* (- 4) ?x1029)))
 (let ((?x917 (* (- 2) ?x996)))
 (let ((?x940 (* 2 (* v v v u00))))
 (let ((?x750 (* 4 ?x973)))
 (let ((?x1499 (* 4 (* r r u00))))
 (let ((?x919 (* v v v u00 u00)))
 (let ((?x707 (* (- 1) ?x919)))
 (let ((?x904 (* r v v u00 u00)))
 (let ((?x1585 (* 2 ?x904)))
 (let ((?x737 (* (- 1) ?x901)))
 (let ((?x897 (* v v u00 u00)))
 (let ((?x1580 (* (- 2) ?x897)))
 (let ((?x889 (* r v u00 u00)))
 (let ((?x749 (* 4 ?x889)))
 (let ((?x881 (* r r u00 u00)))
 (let ((?x744 (* (- 2) ?x881)))
 (let ((?x1393 (* (- 4) (* r v v u00))))
 (let ((?x2184 (* (- 8) (* r v u00))))
 (let ((?x739 (* v v v v00 v00)))
 (let ((?x733 (* r v v v00 v00)))
 (let ((?x1109 (* (- 2) ?x733)))
 (let ((?x729 (* v v v00 v00)))
 (let ((?x2153 (* 2 ?x729)))
 (let ((?x721 (* r v v00 v00)))
 (let ((?x1108 (* (- 4) ?x721)))
 (let ((?x713 (* r r v00 v00)))
 (let ((?x1372 (* 2 ?x713)))
 (let ((?x547 (* v v v v v)))
 (let ((?x1885 (* (- 1) ?x547)))
 (let ((?x541 (* r v v v v)))
 (let ((?x227 (* 2 ?x541)))
 (let ((?x592 (* 8 ?x491)))
 (let ((?x478 (* 4 (* v v v))))
 (let ((?x461 (* r r v)))
 (let ((?x591 (* 20 ?x461)))
 (let ((?x980 (* (- 1) ?x432)))
 (let ((?x374 (* v v v v00)))
 (let ((?x956 (* (- 2) ?x374)))
 (let ((?x366 (* r v v v00)))
 (let ((?x2139 (* 4 ?x366)))
 (let ((?x355 (* v v v00)))
 (let ((?x2134 (* (- 4) ?x355)))
 (let ((?x347 (* r v v00)))
 (let ((?x2131 (* 8 ?x347)))
 (let ((?x339 (* r r v00)))
 (let ((?x2125 (* (- 4) ?x339)))
 (let ((?x658 (* (- 2) ?x306)))
 (let ((?x1931 (* 2 ?x242)))
 (let ((?x668 (* 2 ?x225)))
 (let ((?x2029 (* (- 4) ?x200)))
 (let ((?x383 (* (- 2) ?x145)))
 (let ((?x2169 (* 2 ?x137)))
 (let ((?x1390 (* (- 1) ?x71)))
 (let ((?x594 (+ ?x67 ?x1390 ?x87 ?x2169 ?x383 ?x2029 ?x668 ?x1931 ?x658 ?x2125 ?x2131 ?x2134 ?x2139 ?x956 ?x980 ?x591 ?x478 ?x592 ?x227 ?x1885 ?x704 ?x1372 ?x1108 ?x2153 ?x1109 ?x739 ?x776 ?x2184 ?x844 ?x1393 ?x744 ?x749 ?x1580 ?x737 ?x1585 ?x707 ?x1499 ?x750 ?x940 ?x917 ?x932 ?x1126 ?x1017 ?x1796 ?x921 ?x1121 ?x1510 ?x1163 ?x1176 ?x288 ?x362 ?x363 ?x376 ?x503 ?x220 ?x222 ?x259 ?x265 (* 2 (* (* (- 1) v) r u u)) (* 2 (* r (* (- 1) v) u u)) (* 2 (* (* (- 1) v) (* (- 1) v) u u)) ?x1577 ?x1089)))
 (let ((?x232 (* (- 1) ?x48)))
 (let ((?x210 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x156 (* (- 2) u00)))
 (let ((?x140 (* (- 4) r00)))
 (let ((?x186 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x28 (* 4 r)))
 (let (($x243 (= (+ ?x28 ?x36 ?x186 ?x140 ?x156 ?x41 ?x210 ?x45 ?x46 ?x232) 0)))
 (and $x243 (or (not (= ?x594 0)) (not (= ?x2669 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x1405 (lambda ((r Int) (u Int) (v Int) )(let ((?x2668 (* (- 16) (* u r00))))
 (let ((?x2306 (* (- 4) (* u v00 v00))))
 (let ((?x2209 (* u v)))
 (let ((?x2667 (* (- 8) ?x2209)))
 (let ((?x2303 (* (- 1) (* u u u u v))))
 (let ((?x2302 (* (- 2) (* r u u u v))))
 (let ((?x1940 (* 2 (* u u u v))))
 (let ((?x1860 (* u u v u00 u00)))
 (let ((?x1866 (* 2 (* r u v u00 u00))))
 (let ((?x1753 (* 4 (* u u00 u00))))
 (let ((?x2666 (* (- 2) (* u u v u00))))
 (let ((?x2297 (* (- 1) (* u u v v00 v00))))
 (let ((?x2296 (* (- 2) (* r u v v00 v00))))
 (let ((?x1518 (* 2 (* r u v v v))))
 (let ((?x1259 (* r r v r00)))
 (let ((?x2665 (* (- 4) ?x1259)))
 (let ((?x1249 (* 2 (* u u v v00))))
 (let ((?x2291 (* 4 (* r u v v00))))
 (let ((?x1220 (* r r r v)))
 (let ((?x1221 (* 4 ?x1220)))
 (let ((?x1176 (* u u v v v)))
 (let ((?x1138 (* r u u v)))
 (let ((?x2083 (* 8 ?x1138)))
 (let ((?x1121 (* r r u u v)))
 (let ((?x1464 (* (- 1) ?x1121)))
 (let ((?x1068 (* r u v v)))
 (let ((?x1462 (* (- 4) ?x1068)))
 (let ((?x1055 (* u v v)))
 (let ((?x1461 (* 4 ?x1055)))
 (let ((?x996 (* r r u v)))
 (let ((?x2286 (* 10 ?x996)))
 (let ((?x973 (* u u r00)))
 (let ((?x1458 (* (- 4) ?x973)))
 (let ((?x2284 (* 16 (* r u))))
 (let ((?x901 (* r r v u00 u00)))
 (let ((?x809 (* u u v v)))
 (let ((?x844 (* (- 1) ?x809)))
 (let ((?x763 (* u u u)))
 (let ((?x776 (* (- 2) ?x763)))
 (let ((?x704 (* r r v v00 v00)))
 (let ((?x1452 (* (- 1) ?x704)))
 (let ((?x2664 (* (- 4) (* r u v u00))))
 (let ((?x2663 (* (- 4) (* u u v r00))))
 (let ((?x2662 (* (- 8) (* r u v r00))))
 (let ((?x491 (* r r v v)))
 (let ((?x2281 (* (- 2) ?x491)))
 (let ((?x432 (* r r v v v)))
 (let ((?x306 (* r r v v00)))
 (let ((?x307 (* 2 ?x306)))
 (let ((?x2280 (* 8 (* u v00))))
 (let ((?x242 (* u u v)))
 (let ((?x1414 (* (- 2) ?x242)))
 (let ((?x225 (* r r v u00)))
 (let ((?x2661 (* (- 2) ?x225)))
 (let ((?x200 (* r u u)))
 (let ((?x201 (* 4 ?x200)))
 (let ((?x173 (* u u00)))
 (let ((?x2660 (* (- 8) ?x173)))
 (let ((?x145 (* u u v00)))
 (let ((?x147 (* 2 ?x145)))
 (let ((?x137 (* u u u00)))
 (let ((?x1413 (* (- 2) ?x137)))
 (let ((?x87 (* u u v00 v00)))
 (let ((?x1412 (* (- 1) ?x87)))
 (let ((?x71 (* u u u00 u00)))
 (let ((?x67 (* u u u u)))
 (let ((?x1411 (* (- 1) ?x67)))
 (let ((?x48 (* v00 v00)))
 (let ((?x2277 (* (- 4) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x1745 (* 4 ?x46)))
 (let ((?x45 (* v v)))
 (let ((?x1804 (* 4 ?x45)))
 (let ((?x43 (* u u)))
 (let ((?x815 (* 4 ?x43)))
 (let ((?x318 (* 8 v00)))
 (let ((?x2275 (* (- 8) u00)))
 (let ((?x2659 (* (- 16) r00)))
 (let ((?x2274 (* (- 8) v)))
 (let ((?x2273 (* 16 r)))
 (let ((?x1684 (+ ?x2273 (* 8 u) ?x2274 ?x2659 ?x2275 ?x318 ?x815 ?x1804 ?x1745 ?x2277 ?x1411 ?x71 ?x1412 ?x1413 ?x147 ?x2660 ?x201 ?x2661 ?x1414 ?x2280 ?x307 ?x432 ?x2281 ?x2662 ?x2663 ?x2664 ?x1452 ?x776 ?x844 ?x901 ?x2284 ?x1458 ?x2286 ?x1461 ?x1462 ?x1464 ?x2083 ?x1176 ?x1221 ?x2291 ?x1249 ?x2665 ?x1518 ?x2296 ?x2297 ?x2666 ?x1753 ?x1866 ?x1860 ?x1940 ?x2302 ?x2303 ?x2667 ?x2306 ?x2668)))
 (let ((?x1089 (* (- 16) (* r v v))))
 (let ((?x1577 (* (- 4) (* r v v v))))
 (let ((?x265 (* 8 (* v v r00))))
 (let ((?x259 (* (- 8) (* r v v r00))))
 (let ((?x222 (* (- 16) (* r v r00))))
 (let ((?x220 (* 8 (* r r r00))))
 (let ((?x503 (* 4 (* v v u00))))
 (let ((?x1269 (* r r r)))
 (let ((?x376 (* (- 8) ?x1269)))
 (let ((?x363 (* 4 ?x1259)))
 (let ((?x362 (* 4 (* v v v r00))))
 (let ((?x288 (* (- 4) ?x1220)))
 (let ((?x1160 (* r u u v v)))
 (let ((?x1163 (* (- 2) ?x1160)))
 (let ((?x1130 (* r r u u)))
 (let ((?x1510 (* 2 ?x1130)))
 (let ((?x1086 (* u v v v)))
 (let ((?x921 (* (- 2) ?x1086)))
 (let ((?x1796 (* 4 ?x1068)))
 (let ((?x1017 (* (- 4) ?x1055)))
 (let ((?x1037 (* r u v)))
 (let ((?x1126 (* 8 ?x1037)))
 (let ((?x1029 (* r r u)))
 (let ((?x932 (* (- 4) ?x1029)))
 (let ((?x917 (* (- 2) ?x996)))
 (let ((?x940 (* 2 (* v v v u00))))
 (let ((?x750 (* 4 ?x973)))
 (let ((?x1499 (* 4 (* r r u00))))
 (let ((?x919 (* v v v u00 u00)))
 (let ((?x707 (* (- 1) ?x919)))
 (let ((?x904 (* r v v u00 u00)))
 (let ((?x1585 (* 2 ?x904)))
 (let ((?x737 (* (- 1) ?x901)))
 (let ((?x897 (* v v u00 u00)))
 (let ((?x1580 (* (- 2) ?x897)))
 (let ((?x889 (* r v u00 u00)))
 (let ((?x749 (* 4 ?x889)))
 (let ((?x881 (* r r u00 u00)))
 (let ((?x744 (* (- 2) ?x881)))
 (let ((?x1393 (* (- 4) (* r v v u00))))
 (let ((?x2184 (* (- 8) (* r v u00))))
 (let ((?x739 (* v v v v00 v00)))
 (let ((?x733 (* r v v v00 v00)))
 (let ((?x1109 (* (- 2) ?x733)))
 (let ((?x729 (* v v v00 v00)))
 (let ((?x2153 (* 2 ?x729)))
 (let ((?x721 (* r v v00 v00)))
 (let ((?x1108 (* (- 4) ?x721)))
 (let ((?x713 (* r r v00 v00)))
 (let ((?x1372 (* 2 ?x713)))
 (let ((?x547 (* v v v v v)))
 (let ((?x1885 (* (- 1) ?x547)))
 (let ((?x541 (* r v v v v)))
 (let ((?x227 (* 2 ?x541)))
 (let ((?x592 (* 8 ?x491)))
 (let ((?x478 (* 4 (* v v v))))
 (let ((?x461 (* r r v)))
 (let ((?x591 (* 20 ?x461)))
 (let ((?x980 (* (- 1) ?x432)))
 (let ((?x374 (* v v v v00)))
 (let ((?x956 (* (- 2) ?x374)))
 (let ((?x366 (* r v v v00)))
 (let ((?x2139 (* 4 ?x366)))
 (let ((?x355 (* v v v00)))
 (let ((?x2134 (* (- 4) ?x355)))
 (let ((?x347 (* r v v00)))
 (let ((?x2131 (* 8 ?x347)))
 (let ((?x339 (* r r v00)))
 (let ((?x2125 (* (- 4) ?x339)))
 (let ((?x658 (* (- 2) ?x306)))
 (let ((?x1931 (* 2 ?x242)))
 (let ((?x668 (* 2 ?x225)))
 (let ((?x2029 (* (- 4) ?x200)))
 (let ((?x383 (* (- 2) ?x145)))
 (let ((?x2169 (* 2 ?x137)))
 (let ((?x1390 (* (- 1) ?x71)))
 (let ((?x258 (+ ?x67 ?x1390 ?x87 ?x2169 ?x383 ?x2029 ?x668 ?x1931 ?x658 ?x2125 ?x2131 ?x2134 ?x2139 ?x956 ?x980 ?x591 ?x478 ?x592 ?x227 ?x1885 ?x704 ?x1372 ?x1108 ?x2153 ?x1109 ?x739 ?x776 ?x2184 ?x809 ?x1393 ?x744 ?x749 ?x1580 ?x737 ?x1585 ?x707 ?x1499 ?x750 ?x940 ?x917 ?x932 ?x1126 ?x1017 ?x1796 ?x921 ?x1121 ?x1510 (* (- 4) ?x1138) ?x1163 ?x1176 ?x288 ?x362 ?x363 ?x376 ?x503 ?x220 ?x222 ?x259 ?x265 ?x1577 ?x1089)))
 (let ((?x232 (* (- 1) ?x48)))
 (let ((?x210 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x156 (* (- 2) u00)))
 (let ((?x140 (* (- 4) r00)))
 (let ((?x186 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x28 (* 4 r)))
 (let (($x243 (= (+ ?x28 ?x36 ?x186 ?x140 ?x156 ?x41 ?x210 ?x45 ?x46 ?x232) 0)))
 (let (($x1729 (and $x243 (or (not (= ?x258 0)) (not (= ?x1684 0))))))
 (let ((?x1470 (* (- 2) (* u u 2))))
 (let ((?x2283 (* (- 2) (* u 2 u))))
 (let ((?x2282 (* (- 2) (* u 2 2))))
 (let ((?x2276 (* 12 ?x43)))
 (let ((?x1672 (* 16 u)))
 (let ((?x2669 (+ ?x2273 ?x1672 ?x2274 ?x2659 ?x2275 ?x318 ?x2276 ?x1804 ?x1745 ?x2277 ?x1411 ?x71 ?x1412 ?x1413 ?x147 ?x2660 ?x201 ?x2661 ?x1414 ?x2280 ?x307 ?x432 ?x2281 ?x2662 ?x2663 ?x2664 ?x1452 ?x776 ?x2282 ?x2283 ?x844 ?x901 ?x2284 ?x1458 ?x2286 ?x1461 ?x1462 ?x1464 ?x2083 ?x1176 ?x1221 ?x2291 ?x1249 ?x2665 ?x1470 ?x1518 ?x2296 ?x2297 ?x2666 ?x1753 ?x1866 ?x1860 ?x1940 ?x2302 ?x2303 ?x2667 ?x2306 ?x2668)))
 (let ((?x594 (+ ?x67 ?x1390 ?x87 ?x2169 ?x383 ?x2029 ?x668 ?x1931 ?x658 ?x2125 ?x2131 ?x2134 ?x2139 ?x956 ?x980 ?x591 ?x478 ?x592 ?x227 ?x1885 ?x704 ?x1372 ?x1108 ?x2153 ?x1109 ?x739 ?x776 ?x2184 ?x844 ?x1393 ?x744 ?x749 ?x1580 ?x737 ?x1585 ?x707 ?x1499 ?x750 ?x940 ?x917 ?x932 ?x1126 ?x1017 ?x1796 ?x921 ?x1121 ?x1510 ?x1163 ?x1176 ?x288 ?x362 ?x363 ?x376 ?x503 ?x220 ?x222 ?x259 ?x265 (* 2 (* (* (- 1) v) r u u)) (* 2 (* r (* (- 1) v) u u)) (* 2 (* (* (- 1) v) (* (- 1) v) u u)) ?x1577 ?x1089)))
 (let (($x2084 (and $x243 (or (not (= ?x594 0)) (not (= ?x2669 0))))))
 (rewrite (= $x2084 $x1729)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x939 (exists ((r Int) (u Int) (v Int) )(! (let ((?x1073 (+ (* 2 (* u00 (+ 2 u) (+ 2 u))) (* (- 2) (* v00 (+ 2 u) (+ 2 u))) (* (- 4) (* (+ 2 u) (+ 2 u) (+ r u))) (* 2 (* u00 (+ r u) (+ r u) v)) (* (- 2) (* v00 (+ r u) (+ r u) v)) (* (- 1) (* (+ r u) (+ r u) v v v)) (* 4 (* r00 (+ r u) (+ r u) v)) (* 2 (* (+ r u) (+ r u) v v)) (* (+ 2 u) (+ 2 u) (+ 2 u) (+ 2 u)) (* v00 v00 (+ r u) (+ r u) v) (* (- 2) (* (+ 2 u) (+ 2 u) (+ 2 u))) (* (- 1) (* u00 u00 (+ 2 u) (+ 2 u))) (* (- 1) (* (+ 2 u) (+ 2 u) v v)) (* (- 1) (* u00 u00 (+ r u) (+ r u) v)) (* 4 (* r00 (+ 2 u) (+ 2 u))) (* (- 2) (* (+ 2 u) (+ r u) (+ r u) v)) (* (+ 2 u) (+ 2 u) (+ r u) (+ r u) v) (* (- 4) (* (+ r u) (+ r u) (+ r u) v)) (* 2 (* (+ 2 u) (+ 2 u) v)) (* v00 v00 (+ 2 u) (+ 2 u)))))
 (let ((?x179 (* (- 1) v)))
 (let ((?x382 (+ r ?x179)))
 (let ((?x970 (+ 2 v)))
 (let ((?x763 (* u u u)))
 (let ((?x776 (* (- 2) ?x763)))
 (let ((?x67 (* u u u u)))
 (let ((?x2059 (+ (* 2 (* u00 u u)) (* (- 2) (* v00 u u)) (* (- 4) (* ?x382 u u)) (* 2 (* u00 ?x970 ?x382 ?x382)) (* (- 2) (* v00 ?x970 ?x382 ?x382)) (* (- 1) (* ?x970 ?x970 ?x970 ?x382 ?x382)) (* 4 (* r00 ?x970 ?x382 ?x382)) (* 2 (* ?x970 ?x970 ?x382 ?x382)) ?x67 (* v00 v00 ?x970 ?x382 ?x382) ?x776 (* (- 1) (* u00 u00 u u)) (* (- 1) (* ?x970 ?x970 u u)) (* (- 1) (* u00 u00 ?x970 ?x382 ?x382)) (* 4 (* r00 u u)) (* (- 2) (* ?x970 ?x382 ?x382 u)) (* ?x970 ?x382 ?x382 u u) (* (- 4) (* ?x970 ?x382 ?x382 ?x382)) (* 2 (* ?x970 u u)) (* v00 v00 u u))))
 (let ((?x48 (* v00 v00)))
 (let ((?x232 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x43 (* u u)))
 (let ((?x210 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x186 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x156 (* (- 2) u00)))
 (let ((?x140 (* (- 4) r00)))
 (let ((?x28 (* 4 r)))
 (and (= (+ ?x28 ?x140 ?x156 ?x36 ?x186 ?x41 ?x210 ?x45 ?x46 ?x232) 0) (or (not (= ?x2059 0)) (not (= ?x1073 0)))))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x865 (lambda ((r Int) (u Int) (v Int) )(let ((?x2668 (* (- 16) (* u r00))))
 (let ((?x2306 (* (- 4) (* u v00 v00))))
 (let ((?x2209 (* u v)))
 (let ((?x2667 (* (- 8) ?x2209)))
 (let ((?x2303 (* (- 1) (* u u u u v))))
 (let ((?x2302 (* (- 2) (* r u u u v))))
 (let ((?x1940 (* 2 (* u u u v))))
 (let ((?x1860 (* u u v u00 u00)))
 (let ((?x1866 (* 2 (* r u v u00 u00))))
 (let ((?x1753 (* 4 (* u u00 u00))))
 (let ((?x2666 (* (- 2) (* u u v u00))))
 (let ((?x2297 (* (- 1) (* u u v v00 v00))))
 (let ((?x2296 (* (- 2) (* r u v v00 v00))))
 (let ((?x1518 (* 2 (* r u v v v))))
 (let ((?x1470 (* (- 2) (* u u 2))))
 (let ((?x1259 (* r r v r00)))
 (let ((?x2665 (* (- 4) ?x1259)))
 (let ((?x1249 (* 2 (* u u v v00))))
 (let ((?x2291 (* 4 (* r u v v00))))
 (let ((?x1220 (* r r r v)))
 (let ((?x1221 (* 4 ?x1220)))
 (let ((?x1176 (* u u v v v)))
 (let ((?x1138 (* r u u v)))
 (let ((?x2083 (* 8 ?x1138)))
 (let ((?x1121 (* r r u u v)))
 (let ((?x1464 (* (- 1) ?x1121)))
 (let ((?x1068 (* r u v v)))
 (let ((?x1462 (* (- 4) ?x1068)))
 (let ((?x1055 (* u v v)))
 (let ((?x1461 (* 4 ?x1055)))
 (let ((?x996 (* r r u v)))
 (let ((?x2286 (* 10 ?x996)))
 (let ((?x973 (* u u r00)))
 (let ((?x1458 (* (- 4) ?x973)))
 (let ((?x2284 (* 16 (* r u))))
 (let ((?x901 (* r r v u00 u00)))
 (let ((?x809 (* u u v v)))
 (let ((?x844 (* (- 1) ?x809)))
 (let ((?x2283 (* (- 2) (* u 2 u))))
 (let ((?x2282 (* (- 2) (* u 2 2))))
 (let ((?x763 (* u u u)))
 (let ((?x776 (* (- 2) ?x763)))
 (let ((?x704 (* r r v v00 v00)))
 (let ((?x1452 (* (- 1) ?x704)))
 (let ((?x2664 (* (- 4) (* r u v u00))))
 (let ((?x2663 (* (- 4) (* u u v r00))))
 (let ((?x2662 (* (- 8) (* r u v r00))))
 (let ((?x491 (* r r v v)))
 (let ((?x2281 (* (- 2) ?x491)))
 (let ((?x432 (* r r v v v)))
 (let ((?x306 (* r r v v00)))
 (let ((?x307 (* 2 ?x306)))
 (let ((?x2280 (* 8 (* u v00))))
 (let ((?x242 (* u u v)))
 (let ((?x1414 (* (- 2) ?x242)))
 (let ((?x225 (* r r v u00)))
 (let ((?x2661 (* (- 2) ?x225)))
 (let ((?x200 (* r u u)))
 (let ((?x201 (* 4 ?x200)))
 (let ((?x173 (* u u00)))
 (let ((?x2660 (* (- 8) ?x173)))
 (let ((?x145 (* u u v00)))
 (let ((?x147 (* 2 ?x145)))
 (let ((?x137 (* u u u00)))
 (let ((?x1413 (* (- 2) ?x137)))
 (let ((?x87 (* u u v00 v00)))
 (let ((?x1412 (* (- 1) ?x87)))
 (let ((?x71 (* u u u00 u00)))
 (let ((?x67 (* u u u u)))
 (let ((?x1411 (* (- 1) ?x67)))
 (let ((?x48 (* v00 v00)))
 (let ((?x2277 (* (- 4) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x1745 (* 4 ?x46)))
 (let ((?x45 (* v v)))
 (let ((?x1804 (* 4 ?x45)))
 (let ((?x43 (* u u)))
 (let ((?x2276 (* 12 ?x43)))
 (let ((?x318 (* 8 v00)))
 (let ((?x2275 (* (- 8) u00)))
 (let ((?x2659 (* (- 16) r00)))
 (let ((?x2274 (* (- 8) v)))
 (let ((?x1672 (* 16 u)))
 (let ((?x2273 (* 16 r)))
 (let ((?x2669 (+ ?x2273 ?x1672 ?x2274 ?x2659 ?x2275 ?x318 ?x2276 ?x1804 ?x1745 ?x2277 ?x1411 ?x71 ?x1412 ?x1413 ?x147 ?x2660 ?x201 ?x2661 ?x1414 ?x2280 ?x307 ?x432 ?x2281 ?x2662 ?x2663 ?x2664 ?x1452 ?x776 ?x2282 ?x2283 ?x844 ?x901 ?x2284 ?x1458 ?x2286 ?x1461 ?x1462 ?x1464 ?x2083 ?x1176 ?x1221 ?x2291 ?x1249 ?x2665 ?x1470 ?x1518 ?x2296 ?x2297 ?x2666 ?x1753 ?x1866 ?x1860 ?x1940 ?x2302 ?x2303 ?x2667 ?x2306 ?x2668)))
 (let ((?x1089 (* (- 16) (* r v v))))
 (let ((?x1577 (* (- 4) (* r v v v))))
 (let ((?x265 (* 8 (* v v r00))))
 (let ((?x259 (* (- 8) (* r v v r00))))
 (let ((?x222 (* (- 16) (* r v r00))))
 (let ((?x220 (* 8 (* r r r00))))
 (let ((?x503 (* 4 (* v v u00))))
 (let ((?x1269 (* r r r)))
 (let ((?x376 (* (- 8) ?x1269)))
 (let ((?x363 (* 4 ?x1259)))
 (let ((?x362 (* 4 (* v v v r00))))
 (let ((?x288 (* (- 4) ?x1220)))
 (let ((?x1160 (* r u u v v)))
 (let ((?x1163 (* (- 2) ?x1160)))
 (let ((?x1130 (* r r u u)))
 (let ((?x1510 (* 2 ?x1130)))
 (let ((?x1086 (* u v v v)))
 (let ((?x921 (* (- 2) ?x1086)))
 (let ((?x1796 (* 4 ?x1068)))
 (let ((?x1017 (* (- 4) ?x1055)))
 (let ((?x1037 (* r u v)))
 (let ((?x1126 (* 8 ?x1037)))
 (let ((?x1029 (* r r u)))
 (let ((?x932 (* (- 4) ?x1029)))
 (let ((?x917 (* (- 2) ?x996)))
 (let ((?x940 (* 2 (* v v v u00))))
 (let ((?x750 (* 4 ?x973)))
 (let ((?x1499 (* 4 (* r r u00))))
 (let ((?x919 (* v v v u00 u00)))
 (let ((?x707 (* (- 1) ?x919)))
 (let ((?x904 (* r v v u00 u00)))
 (let ((?x1585 (* 2 ?x904)))
 (let ((?x737 (* (- 1) ?x901)))
 (let ((?x897 (* v v u00 u00)))
 (let ((?x1580 (* (- 2) ?x897)))
 (let ((?x889 (* r v u00 u00)))
 (let ((?x749 (* 4 ?x889)))
 (let ((?x881 (* r r u00 u00)))
 (let ((?x744 (* (- 2) ?x881)))
 (let ((?x1393 (* (- 4) (* r v v u00))))
 (let ((?x2184 (* (- 8) (* r v u00))))
 (let ((?x739 (* v v v v00 v00)))
 (let ((?x733 (* r v v v00 v00)))
 (let ((?x1109 (* (- 2) ?x733)))
 (let ((?x729 (* v v v00 v00)))
 (let ((?x2153 (* 2 ?x729)))
 (let ((?x721 (* r v v00 v00)))
 (let ((?x1108 (* (- 4) ?x721)))
 (let ((?x713 (* r r v00 v00)))
 (let ((?x1372 (* 2 ?x713)))
 (let ((?x547 (* v v v v v)))
 (let ((?x1885 (* (- 1) ?x547)))
 (let ((?x541 (* r v v v v)))
 (let ((?x227 (* 2 ?x541)))
 (let ((?x592 (* 8 ?x491)))
 (let ((?x478 (* 4 (* v v v))))
 (let ((?x461 (* r r v)))
 (let ((?x591 (* 20 ?x461)))
 (let ((?x980 (* (- 1) ?x432)))
 (let ((?x374 (* v v v v00)))
 (let ((?x956 (* (- 2) ?x374)))
 (let ((?x366 (* r v v v00)))
 (let ((?x2139 (* 4 ?x366)))
 (let ((?x355 (* v v v00)))
 (let ((?x2134 (* (- 4) ?x355)))
 (let ((?x347 (* r v v00)))
 (let ((?x2131 (* 8 ?x347)))
 (let ((?x339 (* r r v00)))
 (let ((?x2125 (* (- 4) ?x339)))
 (let ((?x658 (* (- 2) ?x306)))
 (let ((?x1931 (* 2 ?x242)))
 (let ((?x668 (* 2 ?x225)))
 (let ((?x2029 (* (- 4) ?x200)))
 (let ((?x383 (* (- 2) ?x145)))
 (let ((?x2169 (* 2 ?x137)))
 (let ((?x1390 (* (- 1) ?x71)))
 (let ((?x594 (+ ?x67 ?x1390 ?x87 ?x2169 ?x383 ?x2029 ?x668 ?x1931 ?x658 ?x2125 ?x2131 ?x2134 ?x2139 ?x956 ?x980 ?x591 ?x478 ?x592 ?x227 ?x1885 ?x704 ?x1372 ?x1108 ?x2153 ?x1109 ?x739 ?x776 ?x2184 ?x844 ?x1393 ?x744 ?x749 ?x1580 ?x737 ?x1585 ?x707 ?x1499 ?x750 ?x940 ?x917 ?x932 ?x1126 ?x1017 ?x1796 ?x921 ?x1121 ?x1510 ?x1163 ?x1176 ?x288 ?x362 ?x363 ?x376 ?x503 ?x220 ?x222 ?x259 ?x265 (* 2 (* (* (- 1) v) r u u)) (* 2 (* r (* (- 1) v) u u)) (* 2 (* (* (- 1) v) (* (- 1) v) u u)) ?x1577 ?x1089)))
 (let ((?x232 (* (- 1) ?x48)))
 (let ((?x210 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x156 (* (- 2) u00)))
 (let ((?x140 (* (- 4) r00)))
 (let ((?x186 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x28 (* 4 r)))
 (let (($x243 (= (+ ?x28 ?x36 ?x186 ?x140 ?x156 ?x41 ?x210 ?x45 ?x46 ?x232) 0)))
 (let (($x2084 (and $x243 (or (not (= ?x594 0)) (not (= ?x2669 0))))))
 (let ((?x1073 (+ (* 2 (* u00 (+ 2 u) (+ 2 u))) (* (- 2) (* v00 (+ 2 u) (+ 2 u))) (* (- 4) (* (+ 2 u) (+ 2 u) (+ r u))) (* 2 (* u00 (+ r u) (+ r u) v)) (* (- 2) (* v00 (+ r u) (+ r u) v)) (* (- 1) (* (+ r u) (+ r u) v v v)) (* 4 (* r00 (+ r u) (+ r u) v)) (* 2 (* (+ r u) (+ r u) v v)) (* (+ 2 u) (+ 2 u) (+ 2 u) (+ 2 u)) (* v00 v00 (+ r u) (+ r u) v) (* (- 2) (* (+ 2 u) (+ 2 u) (+ 2 u))) (* (- 1) (* u00 u00 (+ 2 u) (+ 2 u))) (* (- 1) (* (+ 2 u) (+ 2 u) v v)) (* (- 1) (* u00 u00 (+ r u) (+ r u) v)) (* 4 (* r00 (+ 2 u) (+ 2 u))) (* (- 2) (* (+ 2 u) (+ r u) (+ r u) v)) (* (+ 2 u) (+ 2 u) (+ r u) (+ r u) v) (* (- 4) (* (+ r u) (+ r u) (+ r u) v)) (* 2 (* (+ 2 u) (+ 2 u) v)) (* v00 v00 (+ 2 u) (+ 2 u)))))
 (let ((?x179 (* (- 1) v)))
 (let ((?x382 (+ r ?x179)))
 (let ((?x970 (+ 2 v)))
 (let ((?x2059 (+ (* 2 (* u00 u u)) (* (- 2) (* v00 u u)) (* (- 4) (* ?x382 u u)) (* 2 (* u00 ?x970 ?x382 ?x382)) (* (- 2) (* v00 ?x970 ?x382 ?x382)) (* (- 1) (* ?x970 ?x970 ?x970 ?x382 ?x382)) (* 4 (* r00 ?x970 ?x382 ?x382)) (* 2 (* ?x970 ?x970 ?x382 ?x382)) ?x67 (* v00 v00 ?x970 ?x382 ?x382) ?x776 (* (- 1) (* u00 u00 u u)) (* (- 1) (* ?x970 ?x970 u u)) (* (- 1) (* u00 u00 ?x970 ?x382 ?x382)) (* 4 (* r00 u u)) (* (- 2) (* ?x970 ?x382 ?x382 u)) (* ?x970 ?x382 ?x382 u u) (* (- 4) (* ?x970 ?x382 ?x382 ?x382)) (* 2 (* ?x970 u u)) (* v00 v00 u u))))
 (let (($x604 (and (= (+ ?x28 ?x140 ?x156 ?x36 ?x186 ?x41 ?x210 ?x45 ?x46 ?x232) 0) (or (not (= ?x2059 0)) (not (= ?x1073 0))))))
 (rewrite (= $x604 $x2084)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x132 (exists ((r Int) (u Int) (v Int) )(! (let ((?x94 (+ r u)))
 (let ((?x101 (* ?x94 ?x94 v v v)))
 (let ((?x96 (- (* 2 (+ u 2) (+ u 2) u00) (* 2 (+ u 2) (+ u 2) v00))))
 (let ((?x99 (+ (- ?x96 (* 4 ?x94 (+ u 2) (+ u 2))) (* 2 ?x94 ?x94 u00 v))))
 (let ((?x108 (+ (- (- ?x99 (* 2 ?x94 ?x94 v v00)) ?x101) (* 4 ?x94 ?x94 r00 v) (* 2 ?x94 ?x94 v v) (* (+ u 2) (+ u 2) (+ u 2) (+ u 2)) (* ?x94 ?x94 v v00 v00))))
 (let ((?x114 (- (- ?x108 (* 2 (+ u 2) (+ u 2) (+ u 2))) (* (+ u 2) (+ u 2) u00 u00))))
 (let ((?x116 (- (- ?x114 (* (+ u 2) (+ u 2) v v)) (* ?x94 ?x94 u00 u00 v))))
 (let ((?x120 (- (+ ?x116 (* 4 r00 (+ u 2) (+ u 2))) (* 2 ?x94 ?x94 (+ u 2) v))))
 (let ((?x124 (- (+ ?x120 (* ?x94 ?x94 (+ u 2) (+ u 2) v)) (* 4 ?x94 ?x94 ?x94 v))))
 (let ((?x127 (+ ?x124 (* 2 (+ u 2) (+ u 2) v) (* (+ u 2) (+ u 2) v00 v00))))
 (let ((?x87 (* u u v00 v00)))
 (let ((?x71 (* u u u00 u00)))
 (let ((?x67 (* u u u u)))
 (let ((?x58 (+ v 2)))
 (let ((?x54 (- r v)))
 (let ((?x57 (- (- (* 2 u u u00) (* 2 u u v00)) (* 4 ?x54 u u))))
 (let ((?x63 (- (+ ?x57 (* 2 ?x54 ?x54 u00 ?x58)) (* 2 ?x54 ?x54 ?x58 v00))))
 (let ((?x69 (+ (- ?x63 (* ?x54 ?x54 ?x58 ?x58 ?x58)) (* 4 ?x54 ?x54 r00 ?x58) (* 2 ?x54 ?x54 ?x58 ?x58) ?x67 (* ?x54 ?x54 ?x58 v00 v00))))
 (let ((?x76 (- (- (- ?x69 (* 2 u u u)) ?x71) (* u u ?x58 ?x58))))
 (let ((?x79 (+ (- ?x76 (* ?x54 ?x54 u00 u00 ?x58)) (* 4 r00 u u))))
 (let ((?x83 (+ (- ?x79 (* 2 ?x54 ?x54 u ?x58)) (* ?x54 ?x54 u u ?x58))))
 (let ((?x88 (+ (- ?x83 (* 4 ?x54 ?x54 ?x54 ?x58)) (* 2 u u ?x58) ?x87)))
 (let ((?x48 (* v00 v00)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x43 (* u u)))
 (let ((?x41 (* 2 v00)))
 (let ((?x36 (* 2 u)))
 (let ((?x39 (- (+ (- (- (* 4 r) (* 4 r00)) (* 2 u00)) ?x36) (* 2 v))))
 (and (= (- (+ (- (+ ?x39 ?x41) ?x43) ?x45 ?x46) ?x48) 0) (or (not (= ?x88 0)) (not (= ?x127 0))))))))))))))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x953 (lambda ((r Int) (u Int) (v Int) )(let ((?x1073 (+ (* 2 (* u00 (+ 2 u) (+ 2 u))) (* (- 2) (* v00 (+ 2 u) (+ 2 u))) (* (- 4) (* (+ 2 u) (+ 2 u) (+ r u))) (* 2 (* u00 (+ r u) (+ r u) v)) (* (- 2) (* v00 (+ r u) (+ r u) v)) (* (- 1) (* (+ r u) (+ r u) v v v)) (* 4 (* r00 (+ r u) (+ r u) v)) (* 2 (* (+ r u) (+ r u) v v)) (* (+ 2 u) (+ 2 u) (+ 2 u) (+ 2 u)) (* v00 v00 (+ r u) (+ r u) v) (* (- 2) (* (+ 2 u) (+ 2 u) (+ 2 u))) (* (- 1) (* u00 u00 (+ 2 u) (+ 2 u))) (* (- 1) (* (+ 2 u) (+ 2 u) v v)) (* (- 1) (* u00 u00 (+ r u) (+ r u) v)) (* 4 (* r00 (+ 2 u) (+ 2 u))) (* (- 2) (* (+ 2 u) (+ r u) (+ r u) v)) (* (+ 2 u) (+ 2 u) (+ r u) (+ r u) v) (* (- 4) (* (+ r u) (+ r u) (+ r u) v)) (* 2 (* (+ 2 u) (+ 2 u) v)) (* v00 v00 (+ 2 u) (+ 2 u)))))
 (let ((?x179 (* (- 1) v)))
 (let ((?x382 (+ r ?x179)))
 (let ((?x970 (+ 2 v)))
 (let ((?x763 (* u u u)))
 (let ((?x776 (* (- 2) ?x763)))
 (let ((?x67 (* u u u u)))
 (let ((?x2059 (+ (* 2 (* u00 u u)) (* (- 2) (* v00 u u)) (* (- 4) (* ?x382 u u)) (* 2 (* u00 ?x970 ?x382 ?x382)) (* (- 2) (* v00 ?x970 ?x382 ?x382)) (* (- 1) (* ?x970 ?x970 ?x970 ?x382 ?x382)) (* 4 (* r00 ?x970 ?x382 ?x382)) (* 2 (* ?x970 ?x970 ?x382 ?x382)) ?x67 (* v00 v00 ?x970 ?x382 ?x382) ?x776 (* (- 1) (* u00 u00 u u)) (* (- 1) (* ?x970 ?x970 u u)) (* (- 1) (* u00 u00 ?x970 ?x382 ?x382)) (* 4 (* r00 u u)) (* (- 2) (* ?x970 ?x382 ?x382 u)) (* ?x970 ?x382 ?x382 u u) (* (- 4) (* ?x970 ?x382 ?x382 ?x382)) (* 2 (* ?x970 u u)) (* v00 v00 u u))))
 (let ((?x48 (* v00 v00)))
 (let ((?x232 (* (- 1) ?x48)))
 (let ((?x46 (* u00 u00)))
 (let ((?x45 (* v v)))
 (let ((?x43 (* u u)))
 (let ((?x210 (* (- 1) ?x43)))
 (let ((?x41 (* 2 v00)))
 (let ((?x186 (* (- 2) v)))
 (let ((?x36 (* 2 u)))
 (let ((?x156 (* (- 2) u00)))
 (let ((?x140 (* (- 4) r00)))
 (let ((?x28 (* 4 r)))
 (let (($x604 (and (= (+ ?x28 ?x140 ?x156 ?x36 ?x186 ?x41 ?x210 ?x45 ?x46 ?x232) 0) (or (not (= ?x2059 0)) (not (= ?x1073 0))))))
 (let ((?x94 (+ r u)))
 (let ((?x101 (* ?x94 ?x94 v v v)))
 (let ((?x96 (- (* 2 (+ u 2) (+ u 2) u00) (* 2 (+ u 2) (+ u 2) v00))))
 (let ((?x99 (+ (- ?x96 (* 4 ?x94 (+ u 2) (+ u 2))) (* 2 ?x94 ?x94 u00 v))))
 (let ((?x108 (+ (- (- ?x99 (* 2 ?x94 ?x94 v v00)) ?x101) (* 4 ?x94 ?x94 r00 v) (* 2 ?x94 ?x94 v v) (* (+ u 2) (+ u 2) (+ u 2) (+ u 2)) (* ?x94 ?x94 v v00 v00))))
 (let ((?x114 (- (- ?x108 (* 2 (+ u 2) (+ u 2) (+ u 2))) (* (+ u 2) (+ u 2) u00 u00))))
 (let ((?x116 (- (- ?x114 (* (+ u 2) (+ u 2) v v)) (* ?x94 ?x94 u00 u00 v))))
 (let ((?x120 (- (+ ?x116 (* 4 r00 (+ u 2) (+ u 2))) (* 2 ?x94 ?x94 (+ u 2) v))))
 (let ((?x124 (- (+ ?x120 (* ?x94 ?x94 (+ u 2) (+ u 2) v)) (* 4 ?x94 ?x94 ?x94 v))))
 (let ((?x127 (+ ?x124 (* 2 (+ u 2) (+ u 2) v) (* (+ u 2) (+ u 2) v00 v00))))
 (let ((?x87 (* u u v00 v00)))
 (let ((?x71 (* u u u00 u00)))
 (let ((?x58 (+ v 2)))
 (let ((?x54 (- r v)))
 (let ((?x57 (- (- (* 2 u u u00) (* 2 u u v00)) (* 4 ?x54 u u))))
 (let ((?x63 (- (+ ?x57 (* 2 ?x54 ?x54 u00 ?x58)) (* 2 ?x54 ?x54 ?x58 v00))))
 (let ((?x69 (+ (- ?x63 (* ?x54 ?x54 ?x58 ?x58 ?x58)) (* 4 ?x54 ?x54 r00 ?x58) (* 2 ?x54 ?x54 ?x58 ?x58) ?x67 (* ?x54 ?x54 ?x58 v00 v00))))
 (let ((?x76 (- (- (- ?x69 (* 2 u u u)) ?x71) (* u u ?x58 ?x58))))
 (let ((?x79 (+ (- ?x76 (* ?x54 ?x54 u00 u00 ?x58)) (* 4 r00 u u))))
 (let ((?x83 (+ (- ?x79 (* 2 ?x54 ?x54 u ?x58)) (* ?x54 ?x54 u u ?x58))))
 (let ((?x88 (+ (- ?x83 (* 4 ?x54 ?x54 ?x54 ?x58)) (* 2 u u ?x58) ?x87)))
 (let ((?x39 (- (+ (- (- ?x28 (* 4 r00)) (* 2 u00)) ?x36) (* 2 v))))
 (let (($x131 (and (= (- (+ (- (+ ?x39 ?x41) ?x43) ?x45 ?x46) ?x48) 0) (or (not (= ?x88 0)) (not (= ?x127 0))))))
 (rewrite (= $x131 $x604)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x133 (asserted $x132)))
 (let ((@x1315 (mp (mp @x133 (quant-intro (proof-bind ?x953) (= $x132 $x939)) $x939) (rewrite (= $x939 $x939)) $x939)))
 (let ((@x2070 (mp (mp @x1315 (quant-intro (proof-bind ?x865) (= $x939 $x611)) $x611) (quant-intro (proof-bind ?x1405) (= $x611 $x1732)) $x1732)))
 (let ((@x1871 (mp (mp~ @x2070 (sk (~ $x1732 $x856)) $x856) (rewrite (= $x856 $x1772)) $x1772)))
 (let ((@x1536 (and-elim @x1871 $x1851)))
 (let ((@x2317 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1851) $x1298)) @x1536 $x1298)))
 (let (($x1265 (>= ?x1858 0)))
 (let ((@x399 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1851) $x1265)) @x1536 $x1265)))
 (let (($x1058 (not (<= ?x2446 0))))
 (let (($x1901 (>= ?x2446 0)))
 (let (($x2365 (>= ?x858 0)))
 (let ((@x1251 (lemma ((_ th-lemma arith) (hypothesis (not $x2365)) @x399 @x2317 @x399 @x2317 false) $x2365)))
 (let (($x2366 (<= ?x858 0)))
 (let ((@x1801 (lemma ((_ th-lemma arith) (hypothesis (not $x2366)) @x399 @x2317 @x399 @x2317 false) $x2366)))
 (let ((@x1284 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x949 (not $x2366) (not $x2365))) @x1801 @x1251 $x949)))
 (let ((@x2320 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2448 $x1058 (not $x1901))) (unit-resolution (and-elim @x1871 $x727) @x1284 $x1868) (lemma ((_ th-lemma arith) (hypothesis (not $x1901)) @x399 @x2317 false) $x1901) $x1058)))
 ((_ th-lemma arith) @x2320 @x399 @x2317 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        63
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-gcd-tests           12
 :arith-grobner             4
 :arith-max-min             1416
 :arith-nonlinear-bounds    56
 :arith-nonlinear-horner    11
 :arith-num-rows            3
 :arith-patches             8
 :arith-patches_succ        8
 :arith-pivots              3
 :arith-row-summations      1
 :arith-tableau-max-columns 107
 :arith-tableau-max-rows    3
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                3.96
 :memory                    3.37
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1569675
 :num-checks                1
 :propagations              14
 :rlimit-count              15115
 :time                      0.02
 :total-time                0.03)
