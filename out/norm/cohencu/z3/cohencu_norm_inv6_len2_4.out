unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun x!3 () Int)
(declare-fun y!2 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x2256 (* (- 108) x!3)))
 (let ((?x2068 (* z!1 y!2)))
 (let ((?x492 (* 12 ?x2068)))
 (let ((?x772 (* (- 72) y!2)))
 (let ((?x1404 (* z00 z00 y!2)))
 (let ((?x1417 (* 18 (* z!1 x!3))))
 (let ((?x693 (* y00 z!1)))
 (let ((?x1602 (* (- 12) ?x693)))
 (let ((?x1395 (* (- 18) (* x00 z!1))))
 (let ((?x602 (* y00 y00)))
 (let ((?x889 (* 24 ?x602)))
 (let ((?x535 (* z00 y00)))
 (let ((?x810 (* (- 6) ?x535)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x849 (+ ?x67 ?x74 (* 18 (* z00 x!3)) ?x810 (* (- 18) (* z00 x00)) ?x889 ?x1395 ?x1602 ?x1417 (* (- 1) (* z00 z00 y00)) (* (- 12) (* y!2 y!2)) (* (- 12) (* y00 y!2)) (* 6 (* z00 y!2)) ?x1404 (* (- 1) (* z00 z!1 y!2)) ?x772 ?x492 ?x2256 (* z00 y00 z!1))))
 (let (($x687 (<= ?x849 0)))
 (let (($x524 (= ?x849 0)))
 (let ((?x2295 (+ y!2 x!3)))
 (let ((?x2293 (+ z!1 y!2)))
 (let ((?x1271 (+ 6 z!1)))
 (let ((?x2370 (+ 1 n!0)))
 (let ((?x1840 (* 36 (* x00 y00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x1448 (* 18 (* y00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x2335 (* (- 36) (* x00 y00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x2343 (* (- 18) (* y00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x2106 (* (- 36) (* y00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295))))
 (let ((?x1121 (* (- 16) (* y00 y00 y00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x1999 (* (- 10) (* z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x806 (* 16 (* y00 y00 y00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x1001 (* 4 (* ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x998 (* 36 (* y00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295 ?x2295))))
 (let ((?x994 (* 6 (* z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x2196 (* (- 18) (* z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295))))
 (let ((?x724 (* 18 (* z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295 ?x2295))))
 (let ((?x580 (* (- 2) (* z00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295 ?x2295))))
 (let ((?x1639 (* (- 4) (* ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x1172 (* 10 (* z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x1971 (* (- 6) (* z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x1968 (* (- 1) (* z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x1966 (* (- 12) (* y00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x2022 (* (- 1) (* y00 y00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x371 (* (- 12) (* y00 y00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x1102 (* 2 (* x00 z00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x1170 (* (- 1) (* z00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x1095 (* (- 10) (* y00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x1708 (* 12 (* y00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x882 (* 2 (* z00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295))))
 (let ((?x2425 (* (- 1) (* y00 z00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x1238 (* 10 (* y00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x2065 (* (- 18) (* x00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295))))
 (let ((?x1499 (* (- 2) (* x00 z00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x2067 (* 12 (* y00 y00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x845 (* 18 (* x00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295))))
 (let ((?x1202 (+ ?x845 (* (- 216) (* x00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295 ?x2295)) (* 108 (* ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295 ?x2295 ?x2295)) ?x2067 ?x1499 (* z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295) ?x2065 (* (- 108) (* ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295)) ?x1238 (* 24 (* ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295)) ?x2425 (* (- 216) (* x00 y00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295)) (* 216 (* y00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295)) ?x882 (* 24 (* y00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295)) (* (- 36) (* x00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295)) ?x1708 ?x1095 ?x1170 ?x1102 ?x371 ?x2022 ?x1966 ?x1968 (* 108 (* ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295 ?x2295)) ?x1971 ?x1172 ?x1639 (* 36 (* z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295)) (* 120 (* y00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295)) ?x580 (* (- 108) (* ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295)) (* y00 y00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295) (* 96 (* y00 y00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295)) (* 216 (* x00 y00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295)) ?x724 (* (- 120) (* y00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295)) (* (- 96) (* y00 y00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295)) (* z00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295) ?x2196 (* 36 (* x00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295)) (* y00 z00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295) ?x994 (* 108 (* x00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295)) (* (- 36) (* z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295 ?x2295)) ?x998 ?x1001 (* (- 24) (* y00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295)) (* 108 (* x00 x00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295)) (* 24 (* z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295)) (* (- 216) (* y00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2295 ?x2295 ?x2295 ?x2295)) (* 216 (* x00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295 ?x2295)) (* (- 108) (* x00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295)) (* (- 24) (* ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2293 ?x2293 ?x2295)) ?x806 ?x1999 ?x1121 ?x2106 (* (- 24) (* z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x2293 ?x2293 ?x2295 ?x2295 ?x2295)) ?x2343 ?x2335 (* (- 108) (* x00 x00 ?x2370 ?x2370 ?x1271 ?x1271 ?x2293 ?x2293 ?x2293 ?x2295)) ?x1448 ?x1840)))
 (let (($x1843 (= ?x1202 0)))
 (let (($x1346 (not $x1843)))
 (let ((?x779 (* z00 z00 y00 y00)))
 (let ((?x2241 (+ (* 36 (* z00 x!3)) (* (- 18) (* z00 z00 x!3)) (* (- 216) (* y00 x00)) (* (- 24) ?x535) (* (- 36) (* z00 x00)) (* 12 (* y00 y!2 y!2)) (* (- 96) ?x602) (* 4 (* y!2 y!2 y!2)) (* 12 (* z00 y00 y00)) (* 10 (* z00 z00 y00)) ?x779 (* (- 36) (* z00 y00 x!3)) (* (- 24) (* y!2 y!2)) (* (- 1) (* z00 z00 y!2 y!2)) (* 18 (* z00 z00 x00)) (* (- 16) (* y00 y00 y00)) (* 120 (* y00 y!2)) (* 216 (* y00 x!3)) (* 36 (* z00 y00 x00)) (* 24 (* z00 y!2)) (* (- 1) (* z00 z00 z00 y00)) (* (- 2) (* z00 z00 z00 x00)) (* (- 108) (* y!2 x!3)) (* (- 108) (* x00 x00)) (* (- 10) ?x1404) (* 108 (* x00 y!2)) (* 216 (* x00 x!3)) (* (- 108) (* x!3 x!3)) (* z00 z00 z00 y!2) (* 2 (* z00 z00 z00 x!3)) (* (- 18) (* z00 y00 y!2)) (* 6 (* z00 y!2 y!2)))))
 (let (($x2240 (= ?x2241 0)))
 (let ((?x2597 (* z00 y00 y!2)))
 (let ((?x711 (* z00 y00 y00)))
 (let ((?x2134 (* 36 ?x602)))
 (let ((?x651 (* 6 ?x535)))
 (let ((?x659 (+ ?x67 ?x74 (* 3 (* z00 z00 x!3)) (* 18 (* y00 x00)) (* (- 1) (* z!1 y!2 y!2)) ?x651 ?x2134 ?x1395 ?x1602 ?x1417 ?x711 (* (- 3) (* z00 z00 y00)) (* (- 3) (* z00 z00 x00)) (* (- 36) (* y00 y!2)) (* (- 18) (* y00 x!3)) (* (- 6) (* z00 y!2)) (* 18 (* y!2 x!3)) (* 3 ?x1404) (* (- 18) (* x00 y!2)) ?x772 (* 2 (* y00 y00 z!1)) (* (- 1) (* y00 z!1 y!2)) ?x492 ?x2256 (* (- 3) (* z00 x00 z!1)) ?x2597 (* 3 (* z00 z!1 x!3)) (* (- 2) (* z00 y!2 y!2)))))
 (let (($x1136 (= ?x659 0)))
 (let ((?x394 (* z00 z00)))
 (let ((?x2496 (* (- 6) ?x394)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1162 (+ ?x67 ?x55 ?x74 ?x2496 (* (- 18) ?x535) (* 12 ?x693) (* 6 (* z00 z!1)) (* (- 1) (* z00 z00 z!1)) ?x772 (* 6 ?x2068) ?x2256)))
 (let (($x1376 (= ?x1162 0)))
 (let ((?x1715 (* z!1 z!1)))
 (let ((?x634 (* (- 1) ?x394)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x643 (+ ?x49 ?x43 ?x634 (* (- 6) z!1) ?x1715 (* (- 12) y!2))))
 (let (($x441 (= ?x643 0)))
 (let ((?x750 (* (- 6) n00)))
 (let ((?x1723 (+ z00 ?x750 (* (- 1) z!1) (* 6 n!0))))
 (let (($x2169 (= ?x1723 0)))
 (let (($x2296 (and $x2169 $x441 $x1376 $x524 $x1136 $x2240 $x1346)))
 (let ((?x1699 (+ x!3 y!2)))
 (let ((?x1286 (+ y!2 z!1)))
 (let ((?x2070 (* (- 16) (* y00 y00 y00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x1691 (* (- 1) (* z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x1326 (* 18 (* y00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x2081 (* 12 (* y00 y00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x680 (* 12 (* y00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x915 (* 6 (* z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x1668 (* (- 36) (* y00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699 ?x1699))))
 (let ((?x1698 (* 36 (* x00 y00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x1410 (* (- 6) (* z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x1701 (* 36 (* y00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699))))
 (let ((?x932 (* (- 36) (* x00 y00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x1643 (* (- 18) (* y00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x2037 (* 10 (* y00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x481 (* (- 10) (* z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x741 (* 4 (* ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x2524 (* (- 1) (* y00 z00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x2522 (* 18 (* x00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x2520 (* 18 (* z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699))))
 (let ((?x578 (* (- 18) (* x00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x962 (* 2 (* x00 z00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x1796 (* (- 2) (* z00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699))))
 (let ((?x1087 (* (- 12) (* y00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x1351 (* (- 10) (* y00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x1106 (* (- 1) (* z00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x1332 (* (- 1) (* y00 y00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x2096 (* (- 2) (* x00 z00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699))))
 (let ((?x1335 (* (- 12) (* y00 y00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x936 (* (- 4) (* ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x1521 (* (- 18) (* z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699 ?x1699))))
 (let ((?x2311 (* 2 (* z00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699 ?x1699))))
 (let ((?x1054 (* 16 (* y00 y00 y00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x1707 (* 10 (* z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699))))
 (let ((?x1036 (+ ?x1707 ?x1054 (* 216 (* y00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699 ?x1699)) (* (- 24) (* z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699)) ?x2311 (* 108 (* ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699)) (* (- 216) (* x00 y00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699)) ?x1521 (* (- 108) (* x00 x00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699)) (* (- 36) (* x00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699)) (* (- 96) (* y00 y00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699)) ?x936 ?x1335 ?x2096 (* 120 (* y00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699)) ?x1332 ?x1106 (* (- 24) (* y00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699)) (* 24 (* ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699)) ?x1351 ?x1087 (* 216 (* x00 y00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699)) ?x1796 ?x962 (* 96 (* y00 y00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699)) (* z00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699) ?x578 (* y00 y00 z00 z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699) (* 216 (* x00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699 ?x1699)) (* (- 36) (* z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699)) (* 36 (* z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699 ?x1699)) (* (- 108) (* x00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699)) ?x2520 ?x2522 ?x2524 ?x741 ?x481 ?x2037 ?x1643 ?x932 (* 24 (* z00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699)) ?x1701 ?x1410 ?x1698 ?x1668 (* (- 24) (* ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699)) (* (- 108) (* ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699 ?x1699)) (* y00 z00 z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699) (* z00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699) ?x915 (* 108 (* ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699)) ?x680 ?x2081 (* 108 (* x00 x00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699)) ?x1326 (* (- 120) (* y00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1286 ?x1699)) (* (- 108) (* ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1699 ?x1699 ?x1699 ?x1699 ?x1699)) (* 24 (* y00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699)) ?x1691 (* (- 216) (* x00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699)) ?x2070 (* 36 (* x00 z00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699)) (* (- 216) (* y00 ?x2370 ?x2370 ?x1271 ?x1271 ?x1286 ?x1286 ?x1286 ?x1699 ?x1699)) (* 108 (* x00 ?x2370 ?x1271 ?x1271 ?x1271 ?x1286 ?x1286 ?x1699 ?x1699 ?x1699)))))
 (let ((?x1319 (* x00 x00)))
 (let ((?x1320 (* 108 ?x1319)))
 (let ((?x1216 (* z00 z00 z00 x00)))
 (let ((?x1217 (* 2 ?x1216)))
 (let ((?x1213 (* z00 z00 z00 y00)))
 (let ((?x1110 (* z00 y00 x00)))
 (let ((?x1123 (* (- 36) ?x1110)))
 (let ((?x1007 (* y00 y00 y00)))
 (let ((?x1008 (* 16 ?x1007)))
 (let ((?x922 (* z00 z00 x00)))
 (let ((?x1173 (* (- 18) ?x922)))
 (let ((?x794 (* (- 1) ?x779)))
 (let ((?x736 (* z00 z00 y00)))
 (let ((?x1274 (* (- 10) ?x736)))
 (let ((?x746 (* (- 12) ?x711)))
 (let ((?x1073 (* 96 ?x602)))
 (let ((?x572 (* z00 x00)))
 (let ((?x490 (* 36 ?x572)))
 (let ((?x900 (* 24 ?x535)))
 (let ((?x482 (* y00 x00)))
 (let ((?x473 (* 216 ?x482)))
 (let ((?x1421 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x473 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x900 ?x490 (* 24 (* y!2 y!2)) ?x1073 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x746 ?x1274 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x794 (* 108 (* x!3 x!3)) (* (- 4) (* y!2 y!2 y!2)) (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1173 (* (- 216) (* x!3 y00)) ?x1008 (* (- 12) (* y!2 y!2 y00)) ?x1123 (* (- 216) (* x!3 x00)) ?x1213 ?x1217 (* 36 (* x!3 z00 y00)) ?x1320)))
 (let ((?x923 (* 3 ?x922)))
 (let ((?x985 (* 3 ?x736)))
 (let ((?x718 (* (- 1) ?x711)))
 (let ((?x1960 (* 18 (* z!1 x00))))
 (let ((?x905 (* (- 36) ?x602)))
 (let ((?x485 (* z!1 y00)))
 (let ((?x669 (* 12 ?x485)))
 (let ((?x1866 (* (- 18) (* x!3 z!1))))
 (let ((?x483 (* (- 18) ?x482)))
 (let ((?x2072 (* y!2 z!1)))
 (let ((?x1939 (* (- 12) ?x2072)))
 (let ((?x614 (* (- 108) x00)))
 (let ((?x557 (* (- 72) y00)))
 (let ((?x1792 (* 72 y!2)))
 (let ((?x2171 (* 108 x!3)))
 (let ((?x447 (+ ?x2171 ?x1792 ?x557 ?x614 (* (- 3) (* y!2 z00 z00)) (* y!2 y!2 z!1) ?x1939 ?x483 (* (- 18) (* x!3 y!2)) ?x1866 ?x669 ?x810 ?x905 ?x1960 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x718 ?x985 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x923 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x631 (* (- 24) ?x602)))
 (let ((?x573 (* 18 ?x572)))
 (let ((?x1663 (+ ?x2171 ?x1792 ?x557 ?x614 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x1939 ?x1866 ?x669 ?x651 ?x573 (* 12 (* y!2 y!2)) ?x631 ?x1960 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x736 (* (- 18) (* x!3 z00)))))
 (let ((?x536 (* 18 ?x535)))
 (let ((?x498 (* 6 ?x394)))
 (let ((?x487 (* (- 1) ?x55)))
 (let ((?x1996 (+ ?x2171 ?x1792 ?x557 ?x487 ?x614 (* z!1 z00 z00) ?x498 (* (- 6) ?x2072) (* (- 12) ?x485) ?x536 (* (- 6) (* z!1 z00)))))
 (let ((?x465 (* (- 12) y00)))
 (let ((?x464 (* (- 6) z00)))
 (let (($x2176 (= (+ (* 12 y!2) (* 6 z!1) ?x464 ?x465 (* (- 1) ?x1715) ?x394) 0)))
 (let (($x493 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x2176 (= ?x1996 0) (= ?x1663 0) (= ?x447 0) (= ?x1421 0) (not (= ?x1036 0)))))
 (let (($x1568 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x489 (+ 6 z)))
 (let ((?x503 (+ 1 n)))
 (let ((?x2611 (* 108 (* x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2595 (* (- 216) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2564 (* 36 (* x00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2548 (* (- 16) (* y00 y00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2517 (* (- 216) (* x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2488 (* (- 1) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2465 (* 24 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2449 (* (- 108) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2418 (* (- 120) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2387 (* 18 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2379 (* 108 (* x00 x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2360 (* 12 (* y00 y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2352 (* 12 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2338 (* 108 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2307 (* 6 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2235 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x2206 (* y00 z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1800 (* (- 108) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2143 (* (- 24) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2275 (* (- 36) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x360 (* 36 (* x00 y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2166 (* (- 6) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2127 (* 36 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1488 (* 24 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x538 (* (- 36) (* x00 y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2092 (* (- 18) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1901 (* 10 (* y00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1712 (* (- 10) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1832 (* 4 (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1446 (* (- 1) (* y00 z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2027 (* 18 (* x00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1330 (* 18 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1550 (* (- 108) (* x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1764 (* 36 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2218 (* (- 36) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2003 (* 216 (* x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1733 (* y00 y00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1704 (* (- 18) (* x00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1669 (* z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1655 (* 96 (* y00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1641 (* 2 (* x00 z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2291 (* (- 2) (* z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1910 (* 216 (* x00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1268 (* (- 12) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2339 (* (- 10) (* y00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1396 (* 24 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1120 (* (- 24) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x831 (* (- 1) (* z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x860 (* (- 1) (* y00 y00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1333 (* 120 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2221 (* (- 2) (* x00 z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1565 (* (- 12) (* y00 y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1189 (* (- 4) (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1948 (* (- 96) (* y00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1026 (* (- 36) (* x00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x807 (* (- 108) (* x00 x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1774 (* (- 18) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1309 (* (- 216) (* x00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x817 (* 108 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x666 (* 2 (* z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x463 (* (- 24) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x405 (* 216 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x396 (* 16 (* y00 y00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x359 (* 10 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x771 (+ ?x359 ?x396 ?x405 ?x463 ?x666 ?x817 ?x1309 ?x1774 ?x807 ?x1026 ?x1948 ?x1189 ?x1565 ?x2221 ?x1333 ?x860 ?x831 ?x1120 ?x1396 ?x2339 ?x1268 ?x1910 ?x2291 ?x1641 ?x1655 ?x1669 ?x1704 ?x1733 ?x2003 ?x2218 ?x1764 ?x1550 ?x1330 ?x2027 ?x1446 ?x1832 ?x1712 ?x1901 ?x2092 ?x538 ?x1488 ?x2127 ?x2166 ?x360 ?x2275 ?x2143 ?x1800 ?x2206 ?x2235 ?x2307 ?x2338 ?x2352 ?x2360 ?x2379 ?x2387 ?x2418 ?x2449 ?x2465 ?x2488 ?x2517 ?x2548 ?x2564 ?x2595 ?x2611)))
 (let ((?x1319 (* x00 x00)))
 (let ((?x1320 (* 108 ?x1319)))
 (let ((?x1216 (* z00 z00 z00 x00)))
 (let ((?x1217 (* 2 ?x1216)))
 (let ((?x1213 (* z00 z00 z00 y00)))
 (let ((?x1110 (* z00 y00 x00)))
 (let ((?x1123 (* (- 36) ?x1110)))
 (let ((?x1007 (* y00 y00 y00)))
 (let ((?x1008 (* 16 ?x1007)))
 (let ((?x922 (* z00 z00 x00)))
 (let ((?x1173 (* (- 18) ?x922)))
 (let ((?x878 (* (- 4) (* y y y))))
 (let ((?x826 (* 108 (* x x))))
 (let ((?x779 (* z00 z00 y00 y00)))
 (let ((?x794 (* (- 1) ?x779)))
 (let ((?x736 (* z00 z00 y00)))
 (let ((?x1274 (* (- 10) ?x736)))
 (let ((?x711 (* z00 y00 y00)))
 (let ((?x746 (* (- 12) ?x711)))
 (let ((?x602 (* y00 y00)))
 (let ((?x1073 (* 96 ?x602)))
 (let ((?x576 (* y y)))
 (let ((?x821 (* 24 ?x576)))
 (let ((?x572 (* z00 x00)))
 (let ((?x490 (* 36 ?x572)))
 (let ((?x535 (* z00 y00)))
 (let ((?x900 (* 24 ?x535)))
 (let ((?x482 (* y00 x00)))
 (let ((?x473 (* 216 ?x482)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1340 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x473 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x900 ?x490 ?x821 ?x1073 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x746 ?x1274 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x794 ?x826 ?x878 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1173 (* (- 216) (* x y00)) ?x1008 (* (- 12) (* y y y00)) ?x1123 (* (- 216) (* x x00)) ?x1213 ?x1217 (* 36 (* x z00 y00)) ?x1320)))
 (let (($x1345 (= ?x1340 0)))
 (let ((?x923 (* 3 ?x922)))
 (let ((?x985 (* 3 ?x736)))
 (let ((?x718 (* (- 1) ?x711)))
 (let ((?x648 (* 18 (* z x00))))
 (let ((?x905 (* (- 36) ?x602)))
 (let ((?x810 (* (- 6) ?x535)))
 (let ((?x509 (* z y00)))
 (let ((?x510 (* 12 ?x509)))
 (let ((?x543 (* (- 18) (* x z))))
 (let ((?x483 (* (- 18) ?x482)))
 (let ((?x478 (* y z)))
 (let ((?x502 (* (- 12) ?x478)))
 (let ((?x135 (* y y z)))
 (let ((?x614 (* (- 108) x00)))
 (let ((?x557 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1041 (+ ?x64 ?x71 ?x557 ?x614 (* (- 3) (* y z00 z00)) ?x135 ?x502 ?x483 (* (- 18) (* x y)) ?x543 ?x510 ?x810 ?x905 ?x648 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x718 ?x985 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x923 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1048 (= ?x1041 0)))
 (let ((?x631 (* (- 24) ?x602)))
 (let ((?x579 (* 12 ?x576)))
 (let ((?x573 (* 18 ?x572)))
 (let ((?x651 (* 6 ?x535)))
 (let ((?x103 (* y z z00)))
 (let ((?x790 (+ ?x64 ?x71 ?x557 ?x614 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x502 ?x543 ?x510 ?x651 ?x573 ?x579 ?x631 ?x648 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x736 (* (- 18) (* x z00)))))
 (let (($x795 (= ?x790 0)))
 (let ((?x536 (* 18 ?x535)))
 (let ((?x394 (* z00 z00)))
 (let ((?x498 (* 6 ?x394)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x487 (* (- 1) ?x55)))
 (let ((?x630 (+ ?x64 ?x71 ?x557 ?x487 ?x614 ?x76 ?x498 (* (- 6) ?x478) (* (- 12) ?x509) ?x536 (* (- 6) (* z z00)))))
 (let (($x635 (= ?x630 0)))
 (let ((?x50 (* z z)))
 (let ((?x466 (* (- 1) ?x50)))
 (let ((?x465 (* (- 12) y00)))
 (let ((?x464 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x468 (= (+ ?x45 ?x46 ?x464 ?x465 ?x466 ?x394) 0)))
 (let (($x386 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x386 $x468 $x635 $x795 $x1048 $x1345 (not (= ?x771 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x678 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x489 (+ 6 z)))
 (let ((?x503 (+ 1 n)))
 (let ((?x2611 (* 108 (* x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2595 (* (- 216) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2564 (* 36 (* x00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2548 (* (- 16) (* y00 y00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2517 (* (- 216) (* x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2488 (* (- 1) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2465 (* 24 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2449 (* (- 108) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2418 (* (- 120) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2387 (* 18 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2379 (* 108 (* x00 x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2307 (* 6 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2291 (* (- 2) (* z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1330 (* 18 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1800 (* (- 108) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2235 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x2218 (* (- 36) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2003 (* 216 (* x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2127 (* 36 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2143 (* (- 24) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2352 (* 12 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2360 (* 12 (* y00 y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2339 (* (- 10) (* y00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2275 (* (- 36) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2221 (* (- 2) (* x00 z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2206 (* y00 z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x2166 (* (- 6) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1910 (* 216 (* x00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2092 (* (- 18) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2027 (* 18 (* x00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1488 (* 24 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1733 (* y00 y00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1712 (* (- 10) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1901 (* 10 (* y00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1446 (* (- 1) (* y00 z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1550 (* (- 108) (* x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1669 (* z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1655 (* 96 (* y00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1764 (* 36 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1704 (* (- 18) (* x00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1641 (* 2 (* x00 z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1026 (* (- 36) (* x00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1333 (* 120 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1565 (* (- 12) (* y00 y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1120 (* (- 24) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1396 (* 24 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x860 (* (- 1) (* y00 y00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x831 (* (- 1) (* z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x359 (* 10 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x463 (* (- 24) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x405 (* 216 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x396 (* 16 (* y00 y00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1309 (* (- 216) (* x00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1948 (* (- 96) (* y00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1832 (* 4 (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x538 (* (- 36) (* x00 y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x817 (* 108 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1268 (* (- 12) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2338 (* 108 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x807 (* (- 108) (* x00 x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1774 (* (- 18) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x360 (* 36 (* x00 y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1189 (* (- 4) (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x666 (* 2 (* z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2619 (+ ?x666 ?x1189 ?x360 ?x1774 ?x807 ?x2338 ?x1268 ?x817 ?x538 ?x1832 ?x1948 ?x1309 ?x396 ?x405 ?x463 ?x359 ?x831 ?x860 ?x1396 ?x1120 ?x1565 ?x1333 ?x1026 ?x1641 ?x1704 ?x1764 ?x1655 ?x1669 ?x1550 ?x1446 ?x1901 ?x1712 ?x1733 ?x1488 ?x2027 ?x2092 ?x1910 ?x2166 ?x2206 ?x2221 ?x2275 ?x2339 ?x2360 ?x2352 ?x2143 ?x2127 ?x2003 ?x2218 ?x2235 ?x1800 ?x1330 ?x2291 ?x2307 ?x2379 ?x2387 ?x2418 ?x2449 ?x2465 ?x2488 ?x2517 ?x2548 ?x2564 ?x2595 ?x2611)))
 (let (($x1379 (not (= ?x2619 0))))
 (let ((?x1319 (* x00 x00)))
 (let ((?x1320 (* 108 ?x1319)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x602 (* y00 y00)))
 (let ((?x1073 (* 96 ?x602)))
 (let ((?x1007 (* y00 y00 y00)))
 (let ((?x1008 (* 16 ?x1007)))
 (let ((?x878 (* (- 4) (* y y y))))
 (let ((?x826 (* 108 (* x x))))
 (let ((?x576 (* y y)))
 (let ((?x821 (* 24 ?x576)))
 (let ((?x1292 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x821 ?x826 ?x878 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1008 (* (- 6) (* z00 y y)) ?x1073 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1320 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x861 (= ?x1292 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x1478 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1891 (* (- 108) x)))
 (let ((?x719 (* x00 z)))
 (let ((?x374 (* (- 18) ?x719)))
 (let ((?x2134 (* 36 ?x602)))
 (let ((?x644 (* z y)))
 (let ((?x925 (* 12 ?x644)))
 (let ((?x585 (* z00 y)))
 (let ((?x1659 (* (- 6) ?x585)))
 (let ((?x555 (* y00 z00)))
 (let ((?x344 (* 6 ?x555)))
 (let ((?x1702 (* y00 z)))
 (let ((?x514 (* (- 12) ?x1702)))
 (let ((?x1212 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1534 (* z x)))
 (let ((?x1129 (* 18 ?x1534)))
 (let ((?x1067 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x1129 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x1212 ?x514 ?x344 (* (- 36) (* y00 y)) ?x1659 ?x925 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x2134 ?x374 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1891 ?x67 (* (- 18) (* y00 x)) ?x1478 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x840 (* z00 z00 y)))
 (let ((?x563 (* 6 ?x585)))
 (let ((?x372 (* (- 6) ?x555)))
 (let ((?x889 (* 24 ?x602)))
 (let ((?x640 (* y00 z00 z)))
 (let ((?x1628 (+ ?x640 ?x925 ?x1129 (* (- 18) (* x00 z00)) (* (- 12) ?x576) ?x889 ?x374 ?x514 ?x372 (* (- 12) (* y00 y)) ?x1891 ?x67 ?x563 ?x1478 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x840)))
 (let ((?x1694 (* 12 ?x1702)))
 (let ((?x394 (* z00 z00)))
 (let ((?x2496 (* (- 6) ?x394)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1860 (+ (* 6 ?x644) ?x55 ?x2496 ?x1694 (* (- 18) ?x555) ?x1891 ?x67 (* 6 (* z00 z)) ?x1478 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x466 (* (- 1) ?x50)))
 (let ((?x464 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x465 (* (- 12) y00)))
 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x394 ?x465 ?x45 ?x46 ?x464 ?x466) 0) (= ?x1860 0) (= ?x1628 0) (= ?x1067 0) $x861 $x1379))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1771 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x489 (+ 6 z)))
 (let ((?x503 (+ 1 n)))
 (let ((?x2611 (* 108 (* x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2595 (* (- 216) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2564 (* 36 (* x00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2548 (* (- 16) (* y00 y00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2517 (* (- 216) (* x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2488 (* (- 1) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2465 (* 24 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2449 (* (- 108) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2418 (* (- 120) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2387 (* 18 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2379 (* 108 (* x00 x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2360 (* 12 (* y00 y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2352 (* 12 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2338 (* 108 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2307 (* 6 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2235 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x2206 (* y00 z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1800 (* (- 108) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2143 (* (- 24) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2275 (* (- 36) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x360 (* 36 (* x00 y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2166 (* (- 6) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2127 (* 36 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1488 (* 24 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x538 (* (- 36) (* x00 y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2092 (* (- 18) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1901 (* 10 (* y00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1712 (* (- 10) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1832 (* 4 (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1446 (* (- 1) (* y00 z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2027 (* 18 (* x00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1330 (* 18 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1550 (* (- 108) (* x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1764 (* 36 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2218 (* (- 36) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2003 (* 216 (* x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1733 (* y00 y00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1704 (* (- 18) (* x00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1669 (* z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1655 (* 96 (* y00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1641 (* 2 (* x00 z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2291 (* (- 2) (* z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1910 (* 216 (* x00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1268 (* (- 12) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2339 (* (- 10) (* y00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1396 (* 24 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1120 (* (- 24) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x831 (* (- 1) (* z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x860 (* (- 1) (* y00 y00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1333 (* 120 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2221 (* (- 2) (* x00 z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1565 (* (- 12) (* y00 y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1189 (* (- 4) (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1948 (* (- 96) (* y00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1026 (* (- 36) (* x00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x807 (* (- 108) (* x00 x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1774 (* (- 18) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1309 (* (- 216) (* x00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x817 (* 108 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x666 (* 2 (* z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x463 (* (- 24) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x405 (* 216 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x396 (* 16 (* y00 y00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x359 (* 10 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x771 (+ ?x359 ?x396 ?x405 ?x463 ?x666 ?x817 ?x1309 ?x1774 ?x807 ?x1026 ?x1948 ?x1189 ?x1565 ?x2221 ?x1333 ?x860 ?x831 ?x1120 ?x1396 ?x2339 ?x1268 ?x1910 ?x2291 ?x1641 ?x1655 ?x1669 ?x1704 ?x1733 ?x2003 ?x2218 ?x1764 ?x1550 ?x1330 ?x2027 ?x1446 ?x1832 ?x1712 ?x1901 ?x2092 ?x538 ?x1488 ?x2127 ?x2166 ?x360 ?x2275 ?x2143 ?x1800 ?x2206 ?x2235 ?x2307 ?x2338 ?x2352 ?x2360 ?x2379 ?x2387 ?x2418 ?x2449 ?x2465 ?x2488 ?x2517 ?x2548 ?x2564 ?x2595 ?x2611)))
 (let ((?x1319 (* x00 x00)))
 (let ((?x1320 (* 108 ?x1319)))
 (let ((?x1216 (* z00 z00 z00 x00)))
 (let ((?x1217 (* 2 ?x1216)))
 (let ((?x1213 (* z00 z00 z00 y00)))
 (let ((?x1110 (* z00 y00 x00)))
 (let ((?x1123 (* (- 36) ?x1110)))
 (let ((?x1007 (* y00 y00 y00)))
 (let ((?x1008 (* 16 ?x1007)))
 (let ((?x922 (* z00 z00 x00)))
 (let ((?x1173 (* (- 18) ?x922)))
 (let ((?x878 (* (- 4) (* y y y))))
 (let ((?x826 (* 108 (* x x))))
 (let ((?x779 (* z00 z00 y00 y00)))
 (let ((?x794 (* (- 1) ?x779)))
 (let ((?x736 (* z00 z00 y00)))
 (let ((?x1274 (* (- 10) ?x736)))
 (let ((?x711 (* z00 y00 y00)))
 (let ((?x746 (* (- 12) ?x711)))
 (let ((?x602 (* y00 y00)))
 (let ((?x1073 (* 96 ?x602)))
 (let ((?x576 (* y y)))
 (let ((?x821 (* 24 ?x576)))
 (let ((?x572 (* z00 x00)))
 (let ((?x490 (* 36 ?x572)))
 (let ((?x535 (* z00 y00)))
 (let ((?x900 (* 24 ?x535)))
 (let ((?x482 (* y00 x00)))
 (let ((?x473 (* 216 ?x482)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1340 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x473 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x900 ?x490 ?x821 ?x1073 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x746 ?x1274 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x794 ?x826 ?x878 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1173 (* (- 216) (* x y00)) ?x1008 (* (- 12) (* y y y00)) ?x1123 (* (- 216) (* x x00)) ?x1213 ?x1217 (* 36 (* x z00 y00)) ?x1320)))
 (let (($x1345 (= ?x1340 0)))
 (let ((?x923 (* 3 ?x922)))
 (let ((?x985 (* 3 ?x736)))
 (let ((?x718 (* (- 1) ?x711)))
 (let ((?x648 (* 18 (* z x00))))
 (let ((?x905 (* (- 36) ?x602)))
 (let ((?x810 (* (- 6) ?x535)))
 (let ((?x509 (* z y00)))
 (let ((?x510 (* 12 ?x509)))
 (let ((?x543 (* (- 18) (* x z))))
 (let ((?x483 (* (- 18) ?x482)))
 (let ((?x478 (* y z)))
 (let ((?x502 (* (- 12) ?x478)))
 (let ((?x135 (* y y z)))
 (let ((?x614 (* (- 108) x00)))
 (let ((?x557 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1041 (+ ?x64 ?x71 ?x557 ?x614 (* (- 3) (* y z00 z00)) ?x135 ?x502 ?x483 (* (- 18) (* x y)) ?x543 ?x510 ?x810 ?x905 ?x648 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x718 ?x985 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x923 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1048 (= ?x1041 0)))
 (let ((?x631 (* (- 24) ?x602)))
 (let ((?x579 (* 12 ?x576)))
 (let ((?x573 (* 18 ?x572)))
 (let ((?x651 (* 6 ?x535)))
 (let ((?x103 (* y z z00)))
 (let ((?x790 (+ ?x64 ?x71 ?x557 ?x614 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x502 ?x543 ?x510 ?x651 ?x573 ?x579 ?x631 ?x648 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x736 (* (- 18) (* x z00)))))
 (let (($x795 (= ?x790 0)))
 (let ((?x536 (* 18 ?x535)))
 (let ((?x394 (* z00 z00)))
 (let ((?x498 (* 6 ?x394)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x487 (* (- 1) ?x55)))
 (let ((?x630 (+ ?x64 ?x71 ?x557 ?x487 ?x614 ?x76 ?x498 (* (- 6) ?x478) (* (- 12) ?x509) ?x536 (* (- 6) (* z z00)))))
 (let (($x635 (= ?x630 0)))
 (let ((?x50 (* z z)))
 (let ((?x466 (* (- 1) ?x50)))
 (let ((?x465 (* (- 12) y00)))
 (let ((?x464 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x468 (= (+ ?x45 ?x46 ?x464 ?x465 ?x466 ?x394) 0)))
 (let (($x386 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x753 (and $x386 $x468 $x635 $x795 $x1048 $x1345 (not (= ?x771 0)))))
 (let ((?x2619 (+ ?x666 ?x1189 ?x360 ?x1774 ?x807 ?x2338 ?x1268 ?x817 ?x538 ?x1832 ?x1948 ?x1309 ?x396 ?x405 ?x463 ?x359 ?x831 ?x860 ?x1396 ?x1120 ?x1565 ?x1333 ?x1026 ?x1641 ?x1704 ?x1764 ?x1655 ?x1669 ?x1550 ?x1446 ?x1901 ?x1712 ?x1733 ?x1488 ?x2027 ?x2092 ?x1910 ?x2166 ?x2206 ?x2221 ?x2275 ?x2339 ?x2360 ?x2352 ?x2143 ?x2127 ?x2003 ?x2218 ?x2235 ?x1800 ?x1330 ?x2291 ?x2307 ?x2379 ?x2387 ?x2418 ?x2449 ?x2465 ?x2488 ?x2517 ?x2548 ?x2564 ?x2595 ?x2611)))
 (let (($x1379 (not (= ?x2619 0))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1292 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x821 ?x826 ?x878 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1008 (* (- 6) (* z00 y y)) ?x1073 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1320 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x861 (= ?x1292 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x1478 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1891 (* (- 108) x)))
 (let ((?x719 (* x00 z)))
 (let ((?x374 (* (- 18) ?x719)))
 (let ((?x2134 (* 36 ?x602)))
 (let ((?x644 (* z y)))
 (let ((?x925 (* 12 ?x644)))
 (let ((?x585 (* z00 y)))
 (let ((?x1659 (* (- 6) ?x585)))
 (let ((?x555 (* y00 z00)))
 (let ((?x344 (* 6 ?x555)))
 (let ((?x1702 (* y00 z)))
 (let ((?x514 (* (- 12) ?x1702)))
 (let ((?x1212 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1534 (* z x)))
 (let ((?x1129 (* 18 ?x1534)))
 (let ((?x1067 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x1129 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x1212 ?x514 ?x344 (* (- 36) (* y00 y)) ?x1659 ?x925 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x2134 ?x374 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1891 ?x67 (* (- 18) (* y00 x)) ?x1478 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x840 (* z00 z00 y)))
 (let ((?x563 (* 6 ?x585)))
 (let ((?x372 (* (- 6) ?x555)))
 (let ((?x889 (* 24 ?x602)))
 (let ((?x640 (* y00 z00 z)))
 (let ((?x1628 (+ ?x640 ?x925 ?x1129 (* (- 18) (* x00 z00)) (* (- 12) ?x576) ?x889 ?x374 ?x514 ?x372 (* (- 12) (* y00 y)) ?x1891 ?x67 ?x563 ?x1478 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x840)))
 (let ((?x1694 (* 12 ?x1702)))
 (let ((?x2496 (* (- 6) ?x394)))
 (let ((?x1860 (+ (* 6 ?x644) ?x55 ?x2496 ?x1694 (* (- 18) ?x555) ?x1891 ?x67 (* 6 (* z00 z)) ?x1478 ?x74 (* (- 1) (* z00 z00 z)))))
 (let (($x1068 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x394 ?x465 ?x45 ?x46 ?x464 ?x466) 0) (= ?x1860 0) (= ?x1628 0) (= ?x1067 0) $x861 $x1379)))
 (rewrite (= $x1068 $x753))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x637 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x489 (+ 6 z)))
 (let ((?x503 (+ 1 n)))
 (let ((?x2611 (* 108 (* x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2595 (* (- 216) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2564 (* 36 (* x00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2548 (* (- 16) (* y00 y00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2517 (* (- 216) (* x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2488 (* (- 1) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2465 (* 24 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2449 (* (- 108) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2418 (* (- 120) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2387 (* 18 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2379 (* 108 (* x00 x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2307 (* 6 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2291 (* (- 2) (* z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1330 (* 18 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1800 (* (- 108) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2235 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x2218 (* (- 36) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2003 (* 216 (* x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2127 (* 36 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2143 (* (- 24) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2352 (* 12 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2360 (* 12 (* y00 y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2339 (* (- 10) (* y00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2275 (* (- 36) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2221 (* (- 2) (* x00 z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2206 (* y00 z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x2166 (* (- 6) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1910 (* 216 (* x00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2092 (* (- 18) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2027 (* 18 (* x00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1488 (* 24 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1733 (* y00 y00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1712 (* (- 10) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1901 (* 10 (* y00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1446 (* (- 1) (* y00 z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1550 (* (- 108) (* x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1669 (* z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1655 (* 96 (* y00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1764 (* 36 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1704 (* (- 18) (* x00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1641 (* 2 (* x00 z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1026 (* (- 36) (* x00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1333 (* 120 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1565 (* (- 12) (* y00 y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1120 (* (- 24) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1396 (* 24 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x860 (* (- 1) (* y00 y00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x831 (* (- 1) (* z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x359 (* 10 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x463 (* (- 24) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x405 (* 216 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x396 (* 16 (* y00 y00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1309 (* (- 216) (* x00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1948 (* (- 96) (* y00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1832 (* 4 (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x538 (* (- 36) (* x00 y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x817 (* 108 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1268 (* (- 12) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2338 (* 108 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x807 (* (- 108) (* x00 x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1774 (* (- 18) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x360 (* 36 (* x00 y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1189 (* (- 4) (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x666 (* 2 (* z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2619 (+ ?x666 ?x1189 ?x360 ?x1774 ?x807 ?x2338 ?x1268 ?x817 ?x538 ?x1832 ?x1948 ?x1309 ?x396 ?x405 ?x463 ?x359 ?x831 ?x860 ?x1396 ?x1120 ?x1565 ?x1333 ?x1026 ?x1641 ?x1704 ?x1764 ?x1655 ?x1669 ?x1550 ?x1446 ?x1901 ?x1712 ?x1733 ?x1488 ?x2027 ?x2092 ?x1910 ?x2166 ?x2206 ?x2221 ?x2275 ?x2339 ?x2360 ?x2352 ?x2143 ?x2127 ?x2003 ?x2218 ?x2235 ?x1800 ?x1330 ?x2291 ?x2307 ?x2379 ?x2387 ?x2418 ?x2449 ?x2465 ?x2488 ?x2517 ?x2548 ?x2564 ?x2595 ?x2611)))
 (let (($x1379 (not (= ?x2619 0))))
 (let ((?x1319 (* x00 x00)))
 (let ((?x1320 (* 108 ?x1319)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x602 (* y00 y00)))
 (let ((?x1073 (* 96 ?x602)))
 (let ((?x1007 (* y00 y00 y00)))
 (let ((?x1008 (* 16 ?x1007)))
 (let ((?x878 (* (- 4) (* y y y))))
 (let ((?x826 (* 108 (* x x))))
 (let ((?x576 (* y y)))
 (let ((?x821 (* 24 ?x576)))
 (let ((?x1292 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x821 ?x826 ?x878 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1008 (* (- 6) (* z00 y y)) ?x1073 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1320 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x861 (= ?x1292 0)))
 (let ((?x475 (* y00 z y)))
 (let ((?x614 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x557 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x691 (* z y y)))
 (let ((?x719 (* x00 z)))
 (let ((?x725 (* 18 ?x719)))
 (let ((?x905 (* (- 36) ?x602)))
 (let ((?x644 (* z y)))
 (let ((?x728 (* (- 12) ?x644)))
 (let ((?x585 (* z00 y)))
 (let ((?x563 (* 6 ?x585)))
 (let ((?x555 (* y00 z00)))
 (let ((?x372 (* (- 6) ?x555)))
 (let ((?x1702 (* y00 z)))
 (let ((?x1694 (* 12 ?x1702)))
 (let ((?x1534 (* z x)))
 (let ((?x690 (* (- 18) ?x1534)))
 (let ((?x1709 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x690 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1694 ?x372 (* 36 (* y00 y)) ?x563 ?x728 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x905 ?x725 ?x691 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x557 (* 18 (* y00 x)) ?x71 ?x614 ?x475 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x1280 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1659 (* (- 6) ?x585)))
 (let ((?x344 (* 6 ?x555)))
 (let ((?x631 (* (- 24) ?x602)))
 (let ((?x579 (* 12 ?x576)))
 (let ((?x891 (+ (* (- 1) (* y00 z00 z)) ?x728 ?x690 (* 18 (* x00 z00)) ?x579 ?x631 ?x725 ?x1694 ?x344 (* 12 (* y00 y)) ?x64 ?x557 ?x1659 ?x71 ?x614 ?x99 (* (- 18) (* z00 x)) ?x1280 (* (- 1) (* z00 z00 y)))))
 (let ((?x1127 (* z00 z00 z)))
 (let ((?x514 (* (- 12) ?x1702)))
 (let ((?x394 (* z00 z00)))
 (let ((?x498 (* 6 ?x394)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x487 (* (- 1) ?x55)))
 (let ((?x1133 (+ (* (- 6) ?x644) ?x487 ?x498 ?x514 (* 18 ?x555) ?x64 ?x557 (* (- 6) (* z00 z)) ?x71 ?x614 ?x1127)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x634 (* (- 1) ?x394)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x634 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1133 0) (= ?x891 0) (= ?x1709 0) $x861 $x1379)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x700 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x489 (+ 6 z)))
 (let ((?x503 (+ 1 n)))
 (let ((?x2611 (* 108 (* x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2595 (* (- 216) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2564 (* 36 (* x00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2548 (* (- 16) (* y00 y00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2517 (* (- 216) (* x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2488 (* (- 1) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2465 (* 24 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2449 (* (- 108) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2418 (* (- 120) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2387 (* 18 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2379 (* 108 (* x00 x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2307 (* 6 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2291 (* (- 2) (* z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1330 (* 18 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1800 (* (- 108) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2235 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x2218 (* (- 36) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2003 (* 216 (* x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2127 (* 36 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2143 (* (- 24) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2352 (* 12 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2360 (* 12 (* y00 y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2339 (* (- 10) (* y00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2275 (* (- 36) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2221 (* (- 2) (* x00 z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2206 (* y00 z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x2166 (* (- 6) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1910 (* 216 (* x00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2092 (* (- 18) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2027 (* 18 (* x00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1488 (* 24 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1733 (* y00 y00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1712 (* (- 10) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1901 (* 10 (* y00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1446 (* (- 1) (* y00 z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1550 (* (- 108) (* x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1669 (* z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1655 (* 96 (* y00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1764 (* 36 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1704 (* (- 18) (* x00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1641 (* 2 (* x00 z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1026 (* (- 36) (* x00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1333 (* 120 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1565 (* (- 12) (* y00 y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1120 (* (- 24) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1396 (* 24 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x860 (* (- 1) (* y00 y00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x831 (* (- 1) (* z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x359 (* 10 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x463 (* (- 24) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x405 (* 216 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x396 (* 16 (* y00 y00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1309 (* (- 216) (* x00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1948 (* (- 96) (* y00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1832 (* 4 (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x538 (* (- 36) (* x00 y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x817 (* 108 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1268 (* (- 12) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2338 (* 108 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x807 (* (- 108) (* x00 x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1774 (* (- 18) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x360 (* 36 (* x00 y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1189 (* (- 4) (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x666 (* 2 (* z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2619 (+ ?x666 ?x1189 ?x360 ?x1774 ?x807 ?x2338 ?x1268 ?x817 ?x538 ?x1832 ?x1948 ?x1309 ?x396 ?x405 ?x463 ?x359 ?x831 ?x860 ?x1396 ?x1120 ?x1565 ?x1333 ?x1026 ?x1641 ?x1704 ?x1764 ?x1655 ?x1669 ?x1550 ?x1446 ?x1901 ?x1712 ?x1733 ?x1488 ?x2027 ?x2092 ?x1910 ?x2166 ?x2206 ?x2221 ?x2275 ?x2339 ?x2360 ?x2352 ?x2143 ?x2127 ?x2003 ?x2218 ?x2235 ?x1800 ?x1330 ?x2291 ?x2307 ?x2379 ?x2387 ?x2418 ?x2449 ?x2465 ?x2488 ?x2517 ?x2548 ?x2564 ?x2595 ?x2611)))
 (let (($x1379 (not (= ?x2619 0))))
 (let ((?x1319 (* x00 x00)))
 (let ((?x1320 (* 108 ?x1319)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x602 (* y00 y00)))
 (let ((?x1073 (* 96 ?x602)))
 (let ((?x1007 (* y00 y00 y00)))
 (let ((?x1008 (* 16 ?x1007)))
 (let ((?x878 (* (- 4) (* y y y))))
 (let ((?x826 (* 108 (* x x))))
 (let ((?x576 (* y y)))
 (let ((?x821 (* 24 ?x576)))
 (let ((?x1292 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x821 ?x826 ?x878 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1008 (* (- 6) (* z00 y y)) ?x1073 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1320 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x861 (= ?x1292 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x1478 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1891 (* (- 108) x)))
 (let ((?x719 (* x00 z)))
 (let ((?x374 (* (- 18) ?x719)))
 (let ((?x2134 (* 36 ?x602)))
 (let ((?x644 (* z y)))
 (let ((?x925 (* 12 ?x644)))
 (let ((?x585 (* z00 y)))
 (let ((?x1659 (* (- 6) ?x585)))
 (let ((?x555 (* y00 z00)))
 (let ((?x344 (* 6 ?x555)))
 (let ((?x1702 (* y00 z)))
 (let ((?x514 (* (- 12) ?x1702)))
 (let ((?x1212 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1534 (* z x)))
 (let ((?x1129 (* 18 ?x1534)))
 (let ((?x1067 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x1129 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x1212 ?x514 ?x344 (* (- 36) (* y00 y)) ?x1659 ?x925 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x2134 ?x374 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1891 ?x67 (* (- 18) (* y00 x)) ?x1478 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x840 (* z00 z00 y)))
 (let ((?x563 (* 6 ?x585)))
 (let ((?x372 (* (- 6) ?x555)))
 (let ((?x889 (* 24 ?x602)))
 (let ((?x640 (* y00 z00 z)))
 (let ((?x1628 (+ ?x640 ?x925 ?x1129 (* (- 18) (* x00 z00)) (* (- 12) ?x576) ?x889 ?x374 ?x514 ?x372 (* (- 12) (* y00 y)) ?x1891 ?x67 ?x563 ?x1478 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x840)))
 (let ((?x1694 (* 12 ?x1702)))
 (let ((?x394 (* z00 z00)))
 (let ((?x2496 (* (- 6) ?x394)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1860 (+ (* 6 ?x644) ?x55 ?x2496 ?x1694 (* (- 18) ?x555) ?x1891 ?x67 (* 6 (* z00 z)) ?x1478 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x466 (* (- 1) ?x50)))
 (let ((?x464 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x465 (* (- 12) y00)))
 (let (($x1068 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x394 ?x465 ?x45 ?x46 ?x464 ?x466) 0) (= ?x1860 0) (= ?x1628 0) (= ?x1067 0) $x861 $x1379)))
 (let ((?x475 (* y00 z y)))
 (let ((?x614 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x557 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x691 (* z y y)))
 (let ((?x725 (* 18 ?x719)))
 (let ((?x905 (* (- 36) ?x602)))
 (let ((?x728 (* (- 12) ?x644)))
 (let ((?x690 (* (- 18) ?x1534)))
 (let ((?x1709 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x690 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) ?x1212) ?x1694 ?x372 (* 36 (* y00 y)) ?x563 ?x728 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x905 ?x725 ?x691 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x557 (* 18 (* y00 x)) ?x71 ?x614 ?x475 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) ?x840))))
 (let ((?x1280 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x631 (* (- 24) ?x602)))
 (let ((?x579 (* 12 ?x576)))
 (let ((?x891 (+ (* (- 1) ?x640) ?x728 ?x690 (* 18 (* x00 z00)) ?x579 ?x631 ?x725 ?x1694 ?x344 (* 12 (* y00 y)) ?x64 ?x557 ?x1659 ?x71 ?x614 ?x99 (* (- 18) (* z00 x)) ?x1280 (* (- 1) ?x840))))
 (let ((?x1127 (* z00 z00 z)))
 (let ((?x498 (* 6 ?x394)))
 (let ((?x487 (* (- 1) ?x55)))
 (let ((?x1133 (+ (* (- 6) ?x644) ?x487 ?x498 ?x514 (* 18 ?x555) ?x64 ?x557 (* (- 6) (* z00 z)) ?x71 ?x614 ?x1127)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x634 (* (- 1) ?x394)))
 (let (($x1187 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x634 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1133 0) (= ?x891 0) (= ?x1709 0) $x861 $x1379)))
 (rewrite (= $x1187 $x1068))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x341 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x218 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x313 (* 2 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00 z00)))
 (let ((?x291 (* 2 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x263 (* 2 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00 z00)))
 (let ((?x219 (* 2 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x221 (- ?x219 (* 4 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x223 (+ ?x221 (* 36 ?x215 ?x216 ?x216 ?x216 x00 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x226 (- ?x223 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x227 (- ?x226 (* 108 ?x215 ?x216 ?x216 ?x216 x00 x00 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x229 (+ ?x227 (* 108 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x231 (- ?x229 (* 12 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x233 (+ ?x231 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x235 (- ?x233 (* 36 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x237 (+ ?x235 (* 4 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x240 (- ?x237 (* 96 ?x215 ?x216 ?x216 ?x216 ?x217 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x241 (- ?x240 (* 216 ?x215 ?x216 ?x216 ?x216 x00 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x244 (+ ?x241 (* 16 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 y00 y00 ?x218 ?x218) (* 216 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x246 (- ?x244 (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x248 (+ ?x246 (* 10 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x251 (- ?x248 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00 z00))))
 (let ((?x252 (- ?x251 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 y00 ?x218 ?x218 z00 z00))))
 (let ((?x254 (+ ?x252 (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x257 (- ?x254 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x258 (- ?x257 (* 12 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 y00 ?x218 ?x218 z00))))
 (let ((?x260 (+ ?x258 (* 120 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x262 (- ?x260 (* 36 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x266 (- (+ ?x262 ?x263) (* 18 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x270 (+ ?x266 (* 36 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00) (* 96 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 y00 ?x218 ?x218) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00))))
 (let ((?x273 (- ?x270 (* 108 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x274 (- ?x273 (* ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00 z00 z00))))
 (let ((?x276 (+ ?x274 (* 10 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x278 (- ?x276 (* 10 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x282 (+ ?x278 (* ?x215 ?x216 ?x216 ?x216 ?x217 y00 y00 ?x218 ?x218 ?x218 z00 z00) (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x284 (- ?x282 (* 18 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x286 (+ ?x284 (* 216 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x288 (- ?x286 (* 6 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x290 (+ ?x288 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00 z00 z00))))
 (let ((?x295 (- (- ?x290 ?x291) (* 36 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x296 (- ?x295 (* 10 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00 z00))))
 (let ((?x299 (+ ?x296 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 y00 y00 ?x218 ?x218 ?x218 z00) (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x301 (- ?x299 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x304 (+ ?x301 (* 36 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00) (* 216 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x306 (- ?x304 (* 36 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x308 (+ ?x306 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x310 (- ?x308 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x312 (+ ?x310 (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x318 (+ (- ?x312 ?x313) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 108 ?x215 ?x215 ?x216 x00 x00 ?x217 ?x217 ?x217 ?x218 ?x218) (* 18 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x321 (- ?x318 (* 120 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x322 (- ?x321 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x324 (+ ?x322 (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x328 (- ?x324 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x329 (- ?x328 (* 216 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x330 (- ?x329 (* 16 ?x215 ?x216 ?x216 ?x216 ?x217 y00 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x332 (+ ?x330 (* 36 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x334 (- ?x332 (* 216 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x336 (+ ?x334 (* 108 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x336 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1098 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x489 (+ 6 z)))
 (let ((?x503 (+ 1 n)))
 (let ((?x2611 (* 108 (* x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2595 (* (- 216) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2564 (* 36 (* x00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2548 (* (- 16) (* y00 y00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2517 (* (- 216) (* x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2488 (* (- 1) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2465 (* 24 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2449 (* (- 108) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2418 (* (- 120) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2387 (* 18 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2379 (* 108 (* x00 x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2307 (* 6 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2291 (* (- 2) (* z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1330 (* 18 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x1800 (* (- 108) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2235 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x2218 (* (- 36) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2003 (* 216 (* x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2127 (* 36 (* y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x2143 (* (- 24) (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2352 (* 12 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2360 (* 12 (* y00 y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2339 (* (- 10) (* y00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2275 (* (- 36) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2221 (* (- 2) (* x00 z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2206 (* y00 z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x2166 (* (- 6) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1910 (* 216 (* x00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2092 (* (- 18) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x2027 (* 18 (* x00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1488 (* 24 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1733 (* y00 y00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1712 (* (- 10) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1901 (* 10 (* y00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1446 (* (- 1) (* y00 z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1550 (* (- 108) (* x00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1669 (* z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1655 (* 96 (* y00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1764 (* 36 (* z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1704 (* (- 18) (* x00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1641 (* 2 (* x00 z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1026 (* (- 36) (* x00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1333 (* 120 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1565 (* (- 12) (* y00 y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1120 (* (- 24) (* y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1396 (* 24 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x860 (* (- 1) (* y00 y00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x831 (* (- 1) (* z00 z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x359 (* 10 (* z00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x463 (* (- 24) (* z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x405 (* 216 (* y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x396 (* 16 (* y00 y00 y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x1309 (* (- 216) (* x00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1948 (* (- 96) (* y00 y00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1832 (* 4 (* ?x503 ?x489 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x538 (* (- 36) (* x00 y00 z00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x817 (* 108 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1268 (* (- 12) (* y00 ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x2338 (* 108 (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216))))
 (let ((?x807 (* (- 108) (* x00 x00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1774 (* (- 18) (* z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x360 (* 36 (* x00 y00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1189 (* (- 4) (* ?x503 ?x503 ?x489 ?x489 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216))))
 (let ((?x666 (* 2 (* z00 z00 z00 ?x503 ?x489 ?x489 ?x489 ?x217 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x2619 (+ ?x666 ?x1189 ?x360 ?x1774 ?x807 ?x2338 ?x1268 ?x817 ?x538 ?x1832 ?x1948 ?x1309 ?x396 ?x405 ?x463 ?x359 ?x831 ?x860 ?x1396 ?x1120 ?x1565 ?x1333 ?x1026 ?x1641 ?x1704 ?x1764 ?x1655 ?x1669 ?x1550 ?x1446 ?x1901 ?x1712 ?x1733 ?x1488 ?x2027 ?x2092 ?x1910 ?x2166 ?x2206 ?x2221 ?x2275 ?x2339 ?x2360 ?x2352 ?x2143 ?x2127 ?x2003 ?x2218 ?x2235 ?x1800 ?x1330 ?x2291 ?x2307 ?x2379 ?x2387 ?x2418 ?x2449 ?x2465 ?x2488 ?x2517 ?x2548 ?x2564 ?x2595 ?x2611)))
 (let (($x1379 (not (= ?x2619 0))))
 (let ((?x1319 (* x00 x00)))
 (let ((?x1320 (* 108 ?x1319)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x602 (* y00 y00)))
 (let ((?x1073 (* 96 ?x602)))
 (let ((?x1007 (* y00 y00 y00)))
 (let ((?x1008 (* 16 ?x1007)))
 (let ((?x878 (* (- 4) (* y y y))))
 (let ((?x826 (* 108 (* x x))))
 (let ((?x576 (* y y)))
 (let ((?x821 (* 24 ?x576)))
 (let ((?x1292 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x821 ?x826 ?x878 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1008 (* (- 6) (* z00 y y)) ?x1073 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1320 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x861 (= ?x1292 0)))
 (let ((?x475 (* y00 z y)))
 (let ((?x614 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x557 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x691 (* z y y)))
 (let ((?x719 (* x00 z)))
 (let ((?x725 (* 18 ?x719)))
 (let ((?x905 (* (- 36) ?x602)))
 (let ((?x644 (* z y)))
 (let ((?x728 (* (- 12) ?x644)))
 (let ((?x585 (* z00 y)))
 (let ((?x563 (* 6 ?x585)))
 (let ((?x555 (* y00 z00)))
 (let ((?x372 (* (- 6) ?x555)))
 (let ((?x1702 (* y00 z)))
 (let ((?x1694 (* 12 ?x1702)))
 (let ((?x1534 (* z x)))
 (let ((?x690 (* (- 18) ?x1534)))
 (let ((?x1709 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x690 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1694 ?x372 (* 36 (* y00 y)) ?x563 ?x728 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x905 ?x725 ?x691 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x557 (* 18 (* y00 x)) ?x71 ?x614 ?x475 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x1280 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1659 (* (- 6) ?x585)))
 (let ((?x344 (* 6 ?x555)))
 (let ((?x631 (* (- 24) ?x602)))
 (let ((?x579 (* 12 ?x576)))
 (let ((?x891 (+ (* (- 1) (* y00 z00 z)) ?x728 ?x690 (* 18 (* x00 z00)) ?x579 ?x631 ?x725 ?x1694 ?x344 (* 12 (* y00 y)) ?x64 ?x557 ?x1659 ?x71 ?x614 ?x99 (* (- 18) (* z00 x)) ?x1280 (* (- 1) (* z00 z00 y)))))
 (let ((?x1127 (* z00 z00 z)))
 (let ((?x514 (* (- 12) ?x1702)))
 (let ((?x394 (* z00 z00)))
 (let ((?x498 (* 6 ?x394)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x487 (* (- 1) ?x55)))
 (let ((?x1133 (+ (* (- 6) ?x644) ?x487 ?x498 ?x514 (* 18 ?x555) ?x64 ?x557 (* (- 6) (* z00 z)) ?x71 ?x614 ?x1127)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x634 (* (- 1) ?x394)))
 (let (($x1187 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x634 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1133 0) (= ?x891 0) (= ?x1709 0) $x861 $x1379)))
 (let ((?x218 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x313 (* 2 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00 z00)))
 (let ((?x291 (* 2 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x263 (* 2 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00 z00)))
 (let ((?x219 (* 2 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x221 (- ?x219 (* 4 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x223 (+ ?x221 (* 36 ?x215 ?x216 ?x216 ?x216 x00 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x226 (- ?x223 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x227 (- ?x226 (* 108 ?x215 ?x216 ?x216 ?x216 x00 x00 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x229 (+ ?x227 (* 108 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x231 (- ?x229 (* 12 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x233 (+ ?x231 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x235 (- ?x233 (* 36 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x237 (+ ?x235 (* 4 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x240 (- ?x237 (* 96 ?x215 ?x216 ?x216 ?x216 ?x217 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x241 (- ?x240 (* 216 ?x215 ?x216 ?x216 ?x216 x00 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x244 (+ ?x241 (* 16 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 y00 y00 ?x218 ?x218) (* 216 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x246 (- ?x244 (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x248 (+ ?x246 (* 10 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x251 (- ?x248 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00 z00))))
 (let ((?x252 (- ?x251 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 y00 ?x218 ?x218 z00 z00))))
 (let ((?x254 (+ ?x252 (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x257 (- ?x254 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x258 (- ?x257 (* 12 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 y00 ?x218 ?x218 z00))))
 (let ((?x260 (+ ?x258 (* 120 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x262 (- ?x260 (* 36 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x266 (- (+ ?x262 ?x263) (* 18 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x270 (+ ?x266 (* 36 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00) (* 96 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 y00 ?x218 ?x218) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00))))
 (let ((?x273 (- ?x270 (* 108 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x274 (- ?x273 (* ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00 z00 z00))))
 (let ((?x276 (+ ?x274 (* 10 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x278 (- ?x276 (* 10 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x282 (+ ?x278 (* ?x215 ?x216 ?x216 ?x216 ?x217 y00 y00 ?x218 ?x218 ?x218 z00 z00) (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x284 (- ?x282 (* 18 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x286 (+ ?x284 (* 216 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x288 (- ?x286 (* 6 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x290 (+ ?x288 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00 z00 z00))))
 (let ((?x295 (- (- ?x290 ?x291) (* 36 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x296 (- ?x295 (* 10 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00 z00))))
 (let ((?x299 (+ ?x296 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 y00 y00 ?x218 ?x218 ?x218 z00) (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x301 (- ?x299 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x304 (+ ?x301 (* 36 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00) (* 216 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x306 (- ?x304 (* 36 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x308 (+ ?x306 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x310 (- ?x308 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x312 (+ ?x310 (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x318 (+ (- ?x312 ?x313) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 108 ?x215 ?x215 ?x216 x00 x00 ?x217 ?x217 ?x217 ?x218 ?x218) (* 18 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x321 (- ?x318 (* 120 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x322 (- ?x321 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x324 (+ ?x322 (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x328 (- ?x324 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x329 (- ?x328 (* 216 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x330 (- ?x329 (* 16 ?x215 ?x216 ?x216 ?x216 ?x217 y00 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x332 (+ ?x330 (* 36 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x334 (- ?x332 (* 216 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x336 (+ ?x334 (* 108 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x340 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x336 0))))))
 (rewrite (= $x340 $x1187)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x342 (asserted $x341)))
 (let ((@x1072 (mp (mp @x342 (quant-intro (proof-bind ?x1098) (= $x341 $x637)) $x637) (rewrite (= $x637 $x637)) $x637)))
 (let ((@x1064 (mp (mp @x1072 (quant-intro (proof-bind ?x700) (= $x637 $x678)) $x678) (quant-intro (proof-bind ?x1771) (= $x678 $x1568)) $x1568)))
 (let ((@x516 (mp (mp~ @x1064 (sk (~ $x1568 $x493)) $x493) (rewrite (= $x493 $x2296)) $x2296)))
 (let ((@x1718 (and-elim @x516 $x524)))
 (let ((@x411 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x524) $x687)) @x1718 $x687)))
 (let (($x674 (>= ?x849 0)))
 (let ((@x1156 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x524) $x674)) @x1718 $x674)))
 (let (($x665 (<= ?x659 0)))
 (let ((@x2168 (and-elim @x516 $x1136)))
 (let ((@x1413 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1136) $x665)) @x2168 $x665)))
 (let (($x1626 (>= ?x659 0)))
 (let ((@x558 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1136) $x1626)) @x2168 $x1626)))
 (let (($x1118 (<= ?x2241 0)))
 (let ((@x2071 (and-elim @x516 $x2240)))
 (let ((@x726 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2240) $x1118)) @x2071 $x1118)))
 (let (($x2602 (>= ?x2241 0)))
 (let ((@x1990 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2240) $x2602)) @x2071 $x2602)))
 (let (($x592 (<= ?x643 0)))
 (let ((@x1151 (and-elim @x516 $x441)))
 (let ((@x707 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x441) $x592)) @x1151 $x592)))
 (let (($x577 (>= ?x643 0)))
 (let ((@x349 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x441) $x577)) @x1151 $x577)))
 (let (($x863 (<= ?x1162 0)))
 (let ((@x1603 (and-elim @x516 $x1376)))
 (let ((@x815 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1376) $x863)) @x1603 $x863)))
 (let (($x893 (>= ?x1162 0)))
 (let ((@x1768 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1376) $x893)) @x1603 $x893)))
 (let (($x787 (<= ?x1723 0)))
 (let ((@x597 (and-elim @x516 $x2169)))
 (let ((@x534 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2169) $x787)) @x597 $x787)))
 (let (($x1837 (>= ?x1723 0)))
 (let ((@x2549 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2169) $x1837)) @x597 $x1837)))
 (let (($x2201 (not (<= ?x1202 0))))
 (let (($x1942 (>= ?x1202 0)))
 (let ((@x1675 ((_ th-lemma arith) (hypothesis (not $x1942)) @x2549 @x534 @x558 @x1413 @x349 @x707 @x2549 @x534 @x1156 @x411 @x558 @x1413 @x1990 @x726 @x1990 @x726 @x558 @x1413 @x1990 @x726 @x2549 @x534 @x1768 @x815 @x1156 @x411 @x1156 @x411 @x349 @x707 @x1990 @x726 @x558 @x1413 @x1156 @x411 false)))
 (let ((@x2051 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1843 $x2201 (not $x1942))) (and-elim @x516 $x1346) (or $x2201 (not $x1942)))))
 ((_ th-lemma arith) (unit-resolution @x2051 (lemma @x1675 $x1942) $x2201) @x2549 @x534 @x558 @x1413 @x349 @x707 @x2549 @x534 @x1156 @x411 @x558 @x1413 @x1990 @x726 @x1990 @x726 @x558 @x1413 @x1990 @x726 @x2549 @x534 @x1768 @x815 @x1156 @x411 @x1156 @x411 @x349 @x707 @x1990 @x726 @x558 @x1413 @x1156 @x411 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        26
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             958
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      10
 :arith-tableau-max-columns 164
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                5.50
 :memory                    3.43
 :mk-bool-var               27
 :mk-clause                 22
 :num-allocs                159221345
 :num-checks                1
 :propagations              14
 :rlimit-count              303524
 :time                      0.20
 :total-time                0.22)
