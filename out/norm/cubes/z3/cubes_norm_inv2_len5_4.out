unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x2020 (* (- 1) k!2)))
 (let ((?x2191 (+ (* 3 n!0) (* 3 (* n!0 n!0)) ?x2020)))
 (let (($x1772 (<= ?x2191 (- 1))))
 (let (($x2193 (= ?x2191 (- 1))))
 (let ((?x2197 (+ k!2 c!3)))
 (let ((?x1904 (+ m!1 k!2)))
 (let ((?x2219 (+ 6 m!1)))
 (let ((?x1737 (+ 1 n!0)))
 (let ((?x2060 (* (- 1) (* ?x1737 ?x1737 ?x1737 ?x2219 ?x2219 ?x2219 ?x1904 ?x1904 ?x2197 ?x2197 ?x2197))))
 (let ((?x754 (* 9 (* ?x1737 ?x1737 ?x1737 ?x1737 ?x2219 ?x2219 ?x2219 ?x2197 ?x2197 ?x2197 ?x2197))))
 (let ((?x2279 (+ (* 18 (* ?x1737 ?x2219 ?x1904 ?x1904 ?x1904 ?x2197 ?x2197 ?x2197 ?x2197)) (* 18 (* ?x1737 ?x1737 ?x1737 ?x2219 ?x2219 ?x2219 ?x2197 ?x2197 ?x2197 ?x2197)) (* (- 24) (* n!0 c!3 c!3 c!3)) (* (- 24) (* c!3 c!3 c!3)) (* 9 (* ?x1737 ?x1737 ?x2219 ?x1904 ?x2197 ?x2197)) (* 48 (* m!1 k!2 c!3)) (* (- 4) (* m!1 c!3 c!3 c!3)) (* 24 (* n!0 m!1 c!3 c!3)) (* (- 9) (* ?x1737 ?x1737 ?x1737 ?x1737 ?x2219 ?x1904 ?x2197 ?x2197)) (* 9 (* ?x1737 ?x1737 ?x1737 ?x1737 ?x2219 ?x1904 ?x2197 ?x2197 ?x2197)) (* (- 9) (* ?x1737 ?x1737 ?x2219 ?x1904 ?x2197 ?x2197 ?x2197)) ?x754 (* 4 (* n!0 m!1 m!1 k!2 k!2)) (* ?x1737 ?x2219 ?x1904 ?x1904 ?x1904 ?x2197 ?x2197) (* (- 48) (* k!2 c!3 c!3)) (* (- 8) (* m!1 k!2 c!3 c!3)) (* (- 4) (* n!0 m!1 k!2 k!2 c!3)) (* 4 (* m!1 m!1 k!2 k!2)) (* 5 (* ?x1737 ?x2219 ?x1904 ?x1904 ?x1904 ?x1904 ?x2197 ?x2197 ?x2197)) (* 24 (* n!0 m!1 k!2 k!2)) (* 18 (* ?x1737 ?x1737 ?x1737 ?x2219 ?x1904 ?x2197 ?x2197 ?x2197)) (* 4 (* m!1 m!1 c!3 c!3)) (* (- 24) (* n!0 k!2 k!2 c!3)) (* (- 4) (* ?x1737 ?x1737 ?x1737 ?x2219 ?x1904 ?x2197 ?x2197)) (* (- 24) (* k!2 k!2 c!3)) (* (- 4) (* n!0 m!1 c!3 c!3 c!3)) ?x2060 (* (- 9) (* ?x1737 ?x1737 ?x2219 ?x2197 ?x2197 ?x2197)) (* 8 (* n!0 m!1 m!1 k!2 c!3)) (* 9 (* ?x1737 ?x1737 ?x2219 ?x2197 ?x2197 ?x2197 ?x2197)) (* (- 1) (* ?x1737 ?x2219 ?x1904 ?x1904 ?x2197 ?x2197 ?x2197)) (* (- 1) (* ?x1737 ?x2219 ?x1904 ?x1904 ?x1904 ?x1904 ?x1904 ?x2197 ?x2197 ?x2197)) (* 8 (* m!1 m!1 k!2 c!3)) (* 5 (* ?x1737 ?x1737 ?x1737 ?x2219 ?x2219 ?x2219 ?x1904 ?x2197 ?x2197 ?x2197)) (* 24 (* m!1 k!2 k!2)) (* (- 4) (* ?x1737 ?x1737 ?x1737 ?x2219 ?x2219 ?x2219 ?x2197 ?x2197 ?x2197)) (* (- 8) (* n!0 m!1 k!2 c!3 c!3)) (* (- 13) (* ?x1737 ?x2219 ?x1904 ?x2197 ?x2197 ?x2197)) (* 5 (* ?x1737 ?x1737 ?x1737 ?x2219 ?x1904 ?x1904 ?x2197 ?x2197)) (* 18 (* ?x1737 ?x2219 ?x2197 ?x2197 ?x2197 ?x2197)) (* 48 (* n!0 m!1 k!2 c!3)) (* 24 (* m!1 c!3 c!3)) (* (- 9) (* ?x1737 ?x1737 ?x1737 ?x1737 ?x2219 ?x2219 ?x2219 ?x2197 ?x2197 ?x2197)) (* (- 9) (* ?x1737 ?x1737 ?x2219 ?x1904 ?x1904 ?x1904 ?x2197 ?x2197 ?x2197)) (* (- 4) (* m!1 k!2 k!2 c!3)) (* (- 48) (* n!0 k!2 c!3 c!3)) (* 9 (* ?x1737 ?x1737 ?x2219 ?x1904 ?x1904 ?x1904 ?x2197 ?x2197 ?x2197 ?x2197)) (* 4 (* n!0 m!1 m!1 c!3 c!3)) (* (- 5) (* ?x1737 ?x2219 ?x1904 ?x1904 ?x2197 ?x2197)) (* (- 1) (* ?x1737 ?x1737 ?x1737 ?x2219 ?x1904 ?x1904 ?x1904 ?x2197 ?x2197)) (* (- 4) (* ?x1737 ?x2219 ?x1904 ?x1904 ?x1904 ?x2197 ?x2197 ?x2197)))))
 (let (($x2459 (= ?x2279 0)))
 (let (($x2131 (not $x2459)))
 (let ((?x2044 (+ (* 2 n!0) (* n!0 k!2) ?x2020 (* (- 3) c!3))))
 (let (($x1916 (= ?x2044 (- 1))))
 (let ((?x1922 (* k!2 k!2)))
 (let ((?x1689 (+ (* 9 n!0) (* (- 9) (* n!0 c!3)) ?x1922 (* (- 5) k!2) (* (- 18) c!3))))
 (let (($x1957 (= ?x1689 (- 4))))
 (let ((?x2300 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x2301 (= ?x2300 (- 6))))
 (let (($x2108 (and $x2301 $x1957 $x1916 $x2193 $x2131)))
 (let ((?x618 (+ c!3 k!2)))
 (let ((?x1993 (+ k!2 m!1)))
 (let ((?x2130 (* (- 9) (* ?x1737 ?x1737 ?x1737 ?x1737 ?x2219 ?x2219 ?x2219 ?x618 ?x618 ?x618 ?x618))))
 (let ((?x2065 (+ (* 4 (* ?x1737 ?x1737 ?x1737 ?x2219 ?x2219 ?x2219 ?x618 ?x618 ?x618)) (* 8 (* c!3 c!3 k!2 m!1 n!0)) (* 4 (* c!3 k!2 k!2 m!1 n!0)) (* (- 4) (* c!3 c!3 m!1 m!1 n!0)) (* (- 8) (* c!3 k!2 m!1 m!1 n!0)) (* (- 4) (* k!2 k!2 m!1 m!1 n!0)) (* ?x1737 ?x1737 ?x1737 ?x2219 ?x1993 ?x1993 ?x1993 ?x618 ?x618) (* 5 (* ?x1737 ?x2219 ?x1993 ?x1993 ?x618 ?x618)) (* 24 (* c!3 k!2 k!2 n!0)) (* 48 (* c!3 c!3 k!2 n!0)) (* (- 9) (* ?x1737 ?x1737 ?x2219 ?x1993 ?x1993 ?x1993 ?x618 ?x618 ?x618 ?x618)) (* 4 (* c!3 k!2 k!2 m!1)) (* 8 (* c!3 c!3 k!2 m!1)) (* 24 (* c!3 k!2 k!2)) (* 48 (* c!3 c!3 k!2)) (* (- 1) (* ?x1737 ?x2219 ?x1993 ?x1993 ?x1993 ?x618 ?x618)) (* 4 (* c!3 c!3 c!3 m!1 n!0)) (* 9 (* ?x1737 ?x1737 ?x2219 ?x1993 ?x1993 ?x1993 ?x618 ?x618 ?x618)) (* 9 (* ?x1737 ?x1737 ?x1737 ?x1737 ?x2219 ?x2219 ?x2219 ?x618 ?x618 ?x618)) (* 24 (* c!3 c!3 c!3 n!0)) (* 4 (* c!3 c!3 c!3 m!1)) (* 24 (* c!3 c!3 c!3)) (* (- 24) (* c!3 c!3 m!1 n!0)) (* (- 48) (* c!3 k!2 m!1)) (* (- 24) (* c!3 c!3 m!1)) (* (- 48) (* c!3 k!2 m!1 n!0)) (* (- 24) (* k!2 k!2 m!1)) (* (- 18) (* ?x1737 ?x2219 ?x618 ?x618 ?x618 ?x618)) (* (- 5) (* ?x1737 ?x1737 ?x1737 ?x2219 ?x1993 ?x1993 ?x618 ?x618)) (* 9 (* ?x1737 ?x1737 ?x1737 ?x1737 ?x2219 ?x1993 ?x618 ?x618)) (* 4 (* ?x1737 ?x1737 ?x1737 ?x2219 ?x1993 ?x618 ?x618)) (* (- 9) (* ?x1737 ?x1737 ?x2219 ?x1993 ?x618 ?x618)) (* 9 (* ?x1737 ?x1737 ?x2219 ?x1993 ?x618 ?x618 ?x618)) ?x2130 (* (- 18) (* ?x1737 ?x1737 ?x1737 ?x2219 ?x2219 ?x2219 ?x618 ?x618 ?x618 ?x618)) (* (- 18) (* ?x1737 ?x1737 ?x1737 ?x2219 ?x1993 ?x618 ?x618 ?x618)) (* (- 9) (* ?x1737 ?x1737 ?x1737 ?x1737 ?x2219 ?x1993 ?x618 ?x618 ?x618)) (* (- 5) (* ?x1737 ?x1737 ?x1737 ?x2219 ?x2219 ?x2219 ?x1993 ?x618 ?x618 ?x618)) (* ?x1737 ?x1737 ?x1737 ?x2219 ?x2219 ?x2219 ?x1993 ?x1993 ?x618 ?x618 ?x618) (* ?x1737 ?x2219 ?x1993 ?x1993 ?x618 ?x618 ?x618) (* 4 (* ?x1737 ?x2219 ?x1993 ?x1993 ?x1993 ?x618 ?x618 ?x618)) (* (- 5) (* ?x1737 ?x2219 ?x1993 ?x1993 ?x1993 ?x1993 ?x618 ?x618 ?x618)) (* 9 (* ?x1737 ?x1737 ?x2219 ?x618 ?x618 ?x618)) (* (- 24) (* k!2 k!2 m!1 n!0)) (* ?x1737 ?x2219 ?x1993 ?x1993 ?x1993 ?x1993 ?x1993 ?x618 ?x618 ?x618) (* 13 (* ?x1737 ?x2219 ?x1993 ?x618 ?x618 ?x618)) (* (- 18) (* ?x1737 ?x2219 ?x1993 ?x1993 ?x1993 ?x618 ?x618 ?x618 ?x618)) (* (- 9) (* ?x1737 ?x1737 ?x2219 ?x618 ?x618 ?x618 ?x618)) (* (- 4) (* k!2 k!2 m!1 m!1)) (* (- 8) (* c!3 k!2 m!1 m!1)) (* (- 4) (* c!3 c!3 m!1 m!1)))))
 (let (($x2223 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x770 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x1922) (* 9 (* c!3 n!0)))))
 (let (($x1996 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x770 4) $x2223 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x2065 0)))))
 (let (($x414 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x342 (+ 6 m)))
 (let ((?x345 (+ 1 n)))
 (let ((?x2362 (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x69 (+ k m)))
 (let ((?x2352 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x2314 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2209 (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2187 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2138 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x564 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x661 (+ (* 4 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* 8 (* c c k m n)) (* 4 (* c k k m n)) (* (- 4) (* c c m m n)) (* (- 8) (* c k m m n)) (* (- 4) (* k k m m n)) ?x564 (* 5 (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* 24 (* c k k n)) (* 48 (* c c k n)) (* (- 9) (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 4 (* c k k m)) (* 8 (* c c k m)) (* 24 (* c k k)) (* 48 (* c c k)) (* (- 1) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 4 (* c c c m n)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* 24 (* c c c n)) (* 4 (* c c c m)) (* 24 (* c c c)) (* (- 24) (* c c m n)) (* (- 48) (* c k m)) (* (- 24) (* c c m)) (* (- 48) (* c k m n)) (* (- 24) (* k k m)) (* (- 18) (* ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* 4 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 9) ?x2138) (* (- 18) (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 5) (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x68 ?x68 ?x68)) ?x2187 ?x2209 (* 4 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 5) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68)) (* (- 24) (* k k m n)) ?x2314 (* 13 (* ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 18) ?x2352) (* (- 9) ?x2362) (* (- 4) (* k k m m)) (* (- 8) (* c k m m)) (* (- 4) (* c c m m)))))
 (let (($x334 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x296 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x247 (* (- 1) ?x49)))
 (let ((?x246 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x244 (= (+ ?x40 ?x44 ?x246 ?x247 (* 9 (* c n))) 4)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (and $x160 $x244 $x296 $x334 (not (= ?x661 0)))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x572 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x342 (+ 6 m)))
 (let ((?x345 (+ 1 n)))
 (let ((?x761 (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x672 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x2187 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2138 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x776 (+ (* 4 (* ?x345 ?x342 ?x69 ?x68 ?x68)) (* 18 (* ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x345 ?x342 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* (- 4) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 9 ?x2138) (* 18 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x2187) (* (- 1) (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68)) (* (- 1) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 13) (* ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) ?x672 (* (- 5) (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 9) ?x761))))
 (let (($x1988 (not (= ?x776 0))))
 (let (($x1948 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2110 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x247 (* (- 1) ?x49)))
 (let ((?x246 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (and $x160 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x246 ?x247) 4) $x2110 $x1948 $x1988))))))))))))))))))) :qid k!34))
 ))
 (let ((?x408 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x342 (+ 6 m)))
 (let ((?x345 (+ 1 n)))
 (let ((?x2362 (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x69 (+ k m)))
 (let ((?x2352 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x2314 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2209 (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2187 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2138 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x564 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x661 (+ (* 4 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* 8 (* c c k m n)) (* 4 (* c k k m n)) (* (- 4) (* c c m m n)) (* (- 8) (* c k m m n)) (* (- 4) (* k k m m n)) ?x564 (* 5 (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* 24 (* c k k n)) (* 48 (* c c k n)) (* (- 9) (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 4 (* c k k m)) (* 8 (* c c k m)) (* 24 (* c k k)) (* 48 (* c c k)) (* (- 1) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 4 (* c c c m n)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* 24 (* c c c n)) (* 4 (* c c c m)) (* 24 (* c c c)) (* (- 24) (* c c m n)) (* (- 48) (* c k m)) (* (- 24) (* c c m)) (* (- 48) (* c k m n)) (* (- 24) (* k k m)) (* (- 18) (* ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* 4 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 9) ?x2138) (* (- 18) (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 5) (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x68 ?x68 ?x68)) ?x2187 ?x2209 (* 4 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 5) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68)) (* (- 24) (* k k m n)) ?x2314 (* 13 (* ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 18) ?x2352) (* (- 9) ?x2362) (* (- 4) (* k k m m)) (* (- 8) (* c k m m)) (* (- 4) (* c c m m)))))
 (let (($x334 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x296 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x247 (* (- 1) ?x49)))
 (let ((?x246 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x244 (= (+ ?x40 ?x44 ?x246 ?x247 (* 9 (* c n))) 4)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (let (($x1728 (and $x160 $x244 $x296 $x334 (not (= ?x661 0)))))
 (let ((?x672 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x776 (+ (* 4 (* ?x345 ?x342 ?x69 ?x68 ?x68)) (* 18 (* ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x345 ?x342 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* (- 4) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 9 ?x2138) (* 18 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x2187) (* (- 1) ?x2209) (* (- 4) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68)) (* (- 1) ?x2314) (* (- 13) (* ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 18 ?x2352) (* 9 ?x2362) (* (- 4) (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) ?x672 (* (- 5) (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* (- 1) ?x564) (* (- 9) (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))))
 (let (($x1988 (not (= ?x776 0))))
 (let (($x1948 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2110 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x570 (and $x160 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x246 ?x247) 4) $x2110 $x1948 $x1988)))
 (rewrite (= $x570 $x1728)))))))))))))))))))))))))))))))
 ))
 (let (($x1990 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x342 (+ 6 m)))
 (let ((?x345 (+ 1 n)))
 (let ((?x761 (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x672 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x2187 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2138 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x776 (+ (* 4 (* ?x345 ?x342 ?x69 ?x68 ?x68)) (* 18 (* ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x345 ?x342 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* (- 4) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 9 ?x2138) (* 18 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x2187) (* (- 1) (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68)) (* (- 1) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 13) (* ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) ?x672 (* (- 5) (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 9) ?x761))))
 (let (($x1988 (not (= ?x776 0))))
 (let (($x1948 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1914 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1817 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (and $x160 (= ?x1817 (- 4)) $x1914 $x1948 $x1988))))))))))))))))) :qid k!34))
 ))
 (let ((?x595 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x342 (+ 6 m)))
 (let ((?x345 (+ 1 n)))
 (let ((?x761 (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x672 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x2187 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2138 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x776 (+ (* 4 (* ?x345 ?x342 ?x69 ?x68 ?x68)) (* 18 (* ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x345 ?x342 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* (- 4) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 9 ?x2138) (* 18 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x2187) (* (- 1) (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68)) (* (- 1) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 13) (* ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) ?x672 (* (- 5) (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 9) ?x761))))
 (let (($x1988 (not (= ?x776 0))))
 (let (($x1948 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2110 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x247 (* (- 1) ?x49)))
 (let ((?x246 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (let (($x570 (and $x160 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x246 ?x247) 4) $x2110 $x1948 $x1988)))
 (let (($x1914 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1817 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1973 (and $x160 (= ?x1817 (- 4)) $x1914 $x1948 $x1988)))
 (rewrite (= $x1973 $x570))))))))))))))))))))))))))
 ))
 (let (($x127 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x75 (+ (* 4 ?x68 ?x68 ?x69 ?x70 ?x71) (* 18 ?x68 ?x68 ?x68 ?x68 ?x70 ?x71) (* 5 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x80 (- (- ?x75 (* 4 ?x68 ?x68 ?x68 ?x70 ?x71)) (* 9 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x83 (+ (- ?x80 (* 4 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71 ?x71)) (* 9 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71))))
 (let ((?x91 (+ (- ?x83 (* 9 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* 18 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 18 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71 ?x71) (* 9 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71) (* 5 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x95 (- ?x91 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x97 (- (- ?x95 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71)) (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71))))
 (let ((?x104 (- (+ ?x97 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x70 ?x71 ?x71))))
 (let ((?x106 (- (- ?x104 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71)) (* 13 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71))))
 (let ((?x109 (+ ?x106 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71) (* 9 ?x68 ?x68 ?x68 ?x68 ?x70 ?x71 ?x71))))
 (let ((?x113 (- (- ?x109 (* 4 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x116 (+ ?x113 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71) (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71))))
 (let ((?x121 (- (- ?x116 (* 5 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71)) (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let (($x123 (= (- ?x121 (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x123))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1982 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x342 (+ 6 m)))
 (let ((?x345 (+ 1 n)))
 (let ((?x761 (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x672 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x2187 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2138 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x776 (+ (* 4 (* ?x345 ?x342 ?x69 ?x68 ?x68)) (* 18 (* ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x345 ?x342 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* (- 4) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 9 ?x2138) (* 18 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x2187) (* (- 1) (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68)) (* (- 1) (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 13) (* ?x345 ?x342 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* (- 9) (* ?x345 ?x345 ?x345 ?x345 ?x342 ?x342 ?x342 ?x68 ?x68 ?x68)) (* 9 (* ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) ?x672 (* (- 5) (* ?x345 ?x342 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x345 ?x345 ?x345 ?x342 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 9) ?x761))))
 (let (($x1988 (not (= ?x776 0))))
 (let (($x1948 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1914 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1817 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (let (($x1973 (and $x160 (= ?x1817 (- 4)) $x1914 $x1948 $x1988)))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x75 (+ (* 4 ?x68 ?x68 ?x69 ?x70 ?x71) (* 18 ?x68 ?x68 ?x68 ?x68 ?x70 ?x71) (* 5 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x80 (- (- ?x75 (* 4 ?x68 ?x68 ?x68 ?x70 ?x71)) (* 9 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x83 (+ (- ?x80 (* 4 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71 ?x71)) (* 9 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71))))
 (let ((?x91 (+ (- ?x83 (* 9 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* 18 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 18 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71 ?x71) (* 9 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71) (* 5 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x95 (- ?x91 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x97 (- (- ?x95 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71)) (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71))))
 (let ((?x104 (- (+ ?x97 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x70 ?x71 ?x71))))
 (let ((?x106 (- (- ?x104 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71)) (* 13 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71))))
 (let ((?x109 (+ ?x106 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71) (* 9 ?x68 ?x68 ?x68 ?x68 ?x70 ?x71 ?x71))))
 (let ((?x113 (- (- ?x109 (* 4 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x116 (+ ?x113 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71) (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71))))
 (let ((?x121 (- (- ?x116 (* 5 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71)) (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let (($x123 (= (- ?x121 (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x126 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x123)))))
 (rewrite (= $x126 $x1973)))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x128 (asserted $x127)))
 (let ((@x569 (mp (mp @x128 (quant-intro (proof-bind ?x1982) (= $x127 $x1990)) $x1990) (rewrite (= $x1990 $x1990)) $x1990)))
 (let ((@x2067 (mp (mp @x569 (quant-intro (proof-bind ?x595) (= $x1990 $x572)) $x572) (quant-intro (proof-bind ?x408) (= $x572 $x414)) $x414)))
 (let ((@x2117 (mp (mp~ @x2067 (sk (~ $x414 $x1996)) $x1996) (rewrite (= $x1996 $x2108)) $x2108)))
 (let ((@x1769 (and-elim @x2117 $x2193)))
 (let ((@x2862 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2193) $x1772)) @x1769 $x1772)))
 (let (($x1813 (>= ?x2191 (- 1))))
 (let ((@x2031 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2193) $x1813)) @x1769 $x1813)))
 (let (($x2226 (<= ?x2300 (- 6))))
 (let ((@x2101 (and-elim @x2117 $x2301)))
 (let ((@x2096 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2301) $x2226)) @x2101 $x2226)))
 (let (($x1774 (>= ?x2300 (- 6))))
 (let ((@x2229 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2301) $x1774)) @x2101 $x1774)))
 (let (($x2182 (<= ?x1689 (- 4))))
 (let ((@x1789 (and-elim @x2117 $x1957)))
 (let ((@x874 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1957) $x2182)) @x1789 $x2182)))
 (let (($x1787 (>= ?x1689 (- 4))))
 (let ((@x2079 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1957) $x1787)) @x1789 $x1787)))
 (let (($x2245 (<= ?x2044 (- 1))))
 (let ((@x1767 (and-elim @x2117 $x1916)))
 (let ((@x2287 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1916) $x2245)) @x1767 $x2245)))
 (let (($x1905 (>= ?x2044 (- 1))))
 (let ((@x153 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1916) $x1905)) @x1767 $x1905)))
 (let (($x1934 (not (<= ?x2279 0))))
 (let (($x1783 (>= ?x2279 0)))
 (let ((@x1942 ((_ th-lemma arith) (hypothesis (not $x1783)) @x2229 @x2096 @x2229 @x2096 @x2031 @x2862 @x2031 @x2862 @x153 @x2287 @x2031 @x2862 @x2079 @x874 @x2031 @x2862 @x2229 @x2096 @x2031 @x2862 false)))
 (let ((@x2016 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2459 $x1934 (not $x1783))) (and-elim @x2117 $x2131) (or $x1934 (not $x1783)))))
 ((_ th-lemma arith) (unit-resolution @x2016 (lemma @x1942 $x1783) $x1934) @x2229 @x2096 @x2229 @x2096 @x2031 @x2862 @x2031 @x2862 @x153 @x2287 @x2031 @x2862 @x2079 @x874 @x2031 @x2862 @x2229 @x2096 @x2031 @x2862 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        15
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             621
 :arith-nonlinear-bounds    9
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 90
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                4.15
 :memory                    3.55
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                2444988
 :num-checks                1
 :propagations              11
 :rlimit-count              22288
 :time                      0.02
 :total-time                0.03)
