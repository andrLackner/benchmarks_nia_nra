unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x772 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x680 (<= ?x772 1)))
 (let (($x743 (= ?x772 1)))
 (let ((?x210 (+ k!2 c!3)))
 (let ((?x728 (+ k!2 m!1)))
 (let ((?x379 (+ 6 m!1)))
 (let ((?x378 (+ 1 n!0)))
 (let ((?x422 (* ?x378 ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x210 ?x210 ?x210 ?x210)))
 (let ((?x344 (* ?x378 ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x728 ?x210 ?x210 ?x210)))
 (let ((?x236 (* ?x378 ?x378 ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x210 ?x210 ?x210)))
 (let ((?x223 (* (- 1) (* ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x210 ?x210 ?x210))))
 (let ((?x176 (* ?x378 ?x378 ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x728 ?x210 ?x210 ?x210)))
 (let ((?x122 (+ (* ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x210 ?x210 ?x210) (* (- 1) (* ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x210 ?x210)) ?x176 (* (- 2) (* ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x210 ?x210 ?x210)) ?x223 (* 2 ?x236) (* (- 1) (* ?x378 ?x378 ?x728 ?x728 ?x210 ?x210)) (* ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x210 ?x210) (* (- 3) (* ?x378 ?x379 ?x379 ?x379 ?x728 ?x210 ?x210 ?x210)) (* ?x378 ?x378 ?x728 ?x728 ?x728 ?x210 ?x210) (* (- 1) ?x344) (* (- 2) (* ?x378 ?x378 ?x378 ?x728 ?x728 ?x210 ?x210)) (* (- 1) (* ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x210 ?x210 ?x210)) (* 2 (* ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x210 ?x210)) (* (- 3) ?x422) (* 3 (* ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x210 ?x210 ?x210 ?x210)) (* (- 1) (* ?x378 ?x378 ?x378 ?x728 ?x728 ?x728 ?x210 ?x210)) (* ?x378 ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x210 ?x210 ?x210) (* 3 (* ?x378 ?x378 ?x728 ?x728 ?x210 ?x210 ?x210)) (* ?x378 ?x379 ?x379 ?x379 ?x728 ?x210 ?x210))))
 (let (($x127 (= ?x122 0)))
 (let (($x335 (not $x127)))
 (let ((?x150 (* (- 1) (* k!2 n!0))))
 (let ((?x592 (* (- 2) n!0)))
 (let ((?x536 (* 3 c!3)))
 (let ((?x431 (+ k!2 ?x536 ?x592 ?x150)))
 (let (($x345 (= ?x431 1)))
 (let ((?x254 (* (- 1) (* k!2 k!2))))
 (let ((?x253 (* 9 (* c!3 n!0))))
 (let ((?x258 (* (- 9) n!0)))
 (let ((?x170 (* 18 c!3)))
 (let ((?x490 (* 5 k!2)))
 (let ((?x329 (+ ?x490 ?x170 ?x258 ?x253 ?x254)))
 (let (($x219 (= ?x329 4)))
 (let ((?x556 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x622 (= ?x556 (- 6))))
 (let (($x292 (and $x622 $x219 $x345 $x743 $x335)))
 (let ((?x566 (+ c!3 k!2)))
 (let ((?x489 (* ?x378 ?x378 ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x566 ?x566 ?x566)))
 (let ((?x220 (* ?x378 ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x728 ?x566 ?x566 ?x566)))
 (let ((?x621 (* (- 1) (* ?x378 ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x566 ?x566 ?x566))))
 (let ((?x272 (* ?x378 ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x566 ?x566 ?x566 ?x566)))
 (let ((?x373 (* ?x378 ?x378 ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x728 ?x566 ?x566 ?x566)))
 (let ((?x221 (+ (* 3 (* ?x378 ?x379 ?x379 ?x379 ?x728 ?x566 ?x566 ?x566)) (* ?x378 ?x378 ?x728 ?x728 ?x566 ?x566) (* ?x378 ?x378 ?x378 ?x728 ?x728 ?x728 ?x566 ?x566) (* (- 1) (* ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x566 ?x566)) (* (- 1) (* ?x378 ?x378 ?x728 ?x728 ?x728 ?x566 ?x566)) (* (- 1) (* ?x378 ?x379 ?x379 ?x379 ?x728 ?x566 ?x566)) (* (- 1) ?x373) (* 2 (* ?x378 ?x378 ?x378 ?x728 ?x728 ?x566 ?x566)) (* (- 3) (* ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x566 ?x566 ?x566 ?x566)) (* ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x566 ?x566 ?x566) (* 3 ?x272) (* (- 1) (* ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x728 ?x566 ?x566 ?x566)) ?x621 (* (- 3) (* ?x378 ?x378 ?x728 ?x728 ?x566 ?x566 ?x566)) (* (- 2) (* ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x566 ?x566)) ?x220 (* 2 (* ?x378 ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x566 ?x566 ?x566)) (* ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x566 ?x566 ?x566) (* ?x378 ?x379 ?x379 ?x379 ?x728 ?x728 ?x566 ?x566) (* (- 2) ?x489))))
 (let (($x491 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x170 ?x490 ?x258 ?x254 ?x253) 4) (= (+ ?x536 k!2 ?x592 ?x150) 1) $x743 (not (= ?x221 0)))))
 (let (($x382 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x350 (+ 6 m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x800 (* ?x327 ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x781 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x754 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x695 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x645 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x636 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x610 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x539 (* ?x327 ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x179 (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x152 (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x250 (+ (* 3 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68 ?x68)) ?x152 ?x179 (* (- 1) (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)) (* (- 1) ?x539) (* 2 (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)) (* (- 3) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) ?x610 (* 3 ?x636) (* (- 1) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x645) (* (- 3) (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 2) (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)) ?x695 (* 2 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)) ?x754 ?x781 (* (- 2) ?x800))))
 (let (($x319 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x281 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x232 (* (- 1) ?x49)))
 (let ((?x231 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x229 (= (+ ?x40 ?x44 ?x231 ?x232 (* 9 (* c n))) 4)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (and $x145 $x229 $x281 $x319 (not (= ?x250 0))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x576 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x350 (+ 6 m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x670 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)))
 (let ((?x640 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x645 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x610 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x800 (* ?x327 ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x539 (* ?x327 ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x636 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x695 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x399 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)))
 (let ((?x228 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x280 (* ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x665 (+ ?x280 (* (- 1) (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x228 (* (- 3) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68 ?x68)) (* (- 2) (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)) (* 3 (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68 ?x68)) ?x399 (* 3 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 1) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x695) (* (- 3) ?x636) ?x539 (* (- 1) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)) (* 2 ?x800) (* (- 1) ?x610) ?x645 ?x640 (* (- 2) (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 2 ?x670))))
 (let (($x278 (not (= ?x665 0))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x467 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x232 (* (- 1) ?x49)))
 (let ((?x231 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (and $x145 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x231 ?x232) 4) $x467 $x271 $x278)))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x545 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x350 (+ 6 m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x800 (* ?x327 ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x781 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x754 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x695 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x645 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x636 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x610 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x539 (* ?x327 ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x179 (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x152 (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x250 (+ (* 3 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68 ?x68)) ?x152 ?x179 (* (- 1) (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)) (* (- 1) ?x539) (* 2 (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)) (* (- 3) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) ?x610 (* 3 ?x636) (* (- 1) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x645) (* (- 3) (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 2) (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)) ?x695 (* 2 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)) ?x754 ?x781 (* (- 2) ?x800))))
 (let (($x319 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x281 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x232 (* (- 1) ?x49)))
 (let ((?x231 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x229 (= (+ ?x40 ?x44 ?x231 ?x232 (* 9 (* c n))) 4)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x328 (and $x145 $x229 $x281 $x319 (not (= ?x250 0)))))
 (let ((?x640 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x399 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)))
 (let ((?x228 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x280 (* ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x665 (+ ?x280 (* (- 1) ?x152) (* (- 1) ?x179) ?x228 (* (- 3) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68 ?x68)) (* (- 2) (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)) (* 3 (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68 ?x68)) ?x399 (* 3 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 1) ?x754) (* (- 1) ?x695) (* (- 3) ?x636) ?x539 (* (- 1) ?x781) (* 2 ?x800) (* (- 1) ?x610) ?x645 ?x640 (* (- 2) (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 2 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)))))
 (let (($x278 (not (= ?x665 0))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x467 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x632 (and $x145 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x231 ?x232) 4) $x467 $x271 $x278)))
 (rewrite (= $x632 $x328)))))))))))))))))))))))))))))))))))))
 ))
 (let (($x279 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x350 (+ 6 m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x670 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)))
 (let ((?x640 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x645 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x610 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x800 (* ?x327 ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x539 (* ?x327 ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x636 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x695 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x399 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)))
 (let ((?x228 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x280 (* ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x665 (+ ?x280 (* (- 1) (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x228 (* (- 3) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68 ?x68)) (* (- 2) (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)) (* 3 (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68 ?x68)) ?x399 (* 3 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 1) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x695) (* (- 3) ?x636) ?x539 (* (- 1) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)) (* 2 ?x800) (* (- 1) ?x610) ?x645 ?x640 (* (- 2) (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 2 ?x670))))
 (let (($x278 (not (= ?x665 0))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x310 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x351 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (and $x145 (= ?x351 (- 4)) $x310 $x271 $x278)))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x682 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x350 (+ 6 m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x670 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)))
 (let ((?x640 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x645 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x610 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x800 (* ?x327 ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x539 (* ?x327 ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x636 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x695 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x399 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)))
 (let ((?x228 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x280 (* ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x665 (+ ?x280 (* (- 1) (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x228 (* (- 3) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68 ?x68)) (* (- 2) (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)) (* 3 (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68 ?x68)) ?x399 (* 3 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 1) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x695) (* (- 3) ?x636) ?x539 (* (- 1) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)) (* 2 ?x800) (* (- 1) ?x610) ?x645 ?x640 (* (- 2) (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 2 ?x670))))
 (let (($x278 (not (= ?x665 0))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x467 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x232 (* (- 1) ?x49)))
 (let ((?x231 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x632 (and $x145 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x231 ?x232) 4) $x467 $x271 $x278)))
 (let (($x310 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x351 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x153 (and $x145 (= ?x351 (- 4)) $x310 $x271 $x278)))
 (rewrite (= $x153 $x632)))))))))))))))))))))))))))))))))
 ))
 (let (($x112 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x76 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x97 (* 2 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x93 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x89 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70 ?x70)))
 (let ((?x88 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70 ?x70)))
 (let ((?x74 (- (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70) (* ?x68 ?x68 ?x69 ?x69 ?x70 ?x70))))
 (let ((?x78 (+ (- ?x74 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70)) (* ?x68 ?x68 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70))))
 (let ((?x82 (- (- ?x78 (* 3 ?x68 ?x68 ?x68 ?x69 ?x76 ?x76 ?x76 ?x70)) (* 2 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70))))
 (let ((?x86 (+ ?x82 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70) (* ?x68 ?x68 ?x69 ?x76 ?x76 ?x76 ?x70) (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70))))
 (let ((?x92 (- (- (- ?x86 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70)) ?x88) ?x89)))
 (let ((?x98 (+ (- (+ ?x92 ?x93) (* ?x68 ?x68 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70)) ?x97)))
 (let ((?x100 (- ?x98 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70))))
 (let ((?x103 (+ ?x100 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70 ?x70) (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70))))
 (let ((?x105 (- ?x103 (* 2 ?x68 ?x68 ?x68 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70))))
 (let (($x108 (= (+ ?x105 (* 2 ?x68 ?x68 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x108)))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x287 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x350 (+ 6 m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x670 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)))
 (let ((?x640 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x645 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x610 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x800 (* ?x327 ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x539 (* ?x327 ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x636 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x695 (* ?x327 ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x399 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68)))
 (let ((?x228 (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x280 (* ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x665 (+ ?x280 (* (- 1) (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x228 (* (- 3) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x68 ?x68 ?x68)) (* (- 2) (* ?x327 ?x327 ?x327 ?x69 ?x69 ?x68 ?x68)) (* 3 (* ?x327 ?x327 ?x69 ?x69 ?x68 ?x68 ?x68)) ?x399 (* 3 (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 1) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x695) (* (- 3) ?x636) ?x539 (* (- 1) (* ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68)) (* 2 ?x800) (* (- 1) ?x610) ?x645 ?x640 (* (- 2) (* ?x327 ?x327 ?x350 ?x350 ?x350 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 2 ?x670))))
 (let (($x278 (not (= ?x665 0))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x310 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x351 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x145 (= (+ m (* (- 6) n)) 6)))
 (let (($x153 (and $x145 (= ?x351 (- 4)) $x310 $x271 $x278)))
 (let ((?x70 (+ n 1)))
 (let ((?x76 (+ m 6)))
 (let ((?x97 (* 2 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x93 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x89 (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70 ?x70)))
 (let ((?x88 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70 ?x70)))
 (let ((?x74 (- (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70) (* ?x68 ?x68 ?x69 ?x69 ?x70 ?x70))))
 (let ((?x78 (+ (- ?x74 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70)) (* ?x68 ?x68 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70))))
 (let ((?x82 (- (- ?x78 (* 3 ?x68 ?x68 ?x68 ?x69 ?x76 ?x76 ?x76 ?x70)) (* 2 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70))))
 (let ((?x86 (+ ?x82 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70) (* ?x68 ?x68 ?x69 ?x76 ?x76 ?x76 ?x70) (* 3 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70))))
 (let ((?x92 (- (- (- ?x86 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70)) ?x88) ?x89)))
 (let ((?x98 (+ (- (+ ?x92 ?x93) (* ?x68 ?x68 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70)) ?x97)))
 (let ((?x100 (- ?x98 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70))))
 (let ((?x103 (+ ?x100 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70 ?x70) (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70))))
 (let ((?x105 (- ?x103 (* 2 ?x68 ?x68 ?x68 ?x69 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70))))
 (let (($x108 (= (+ ?x105 (* 2 ?x68 ?x68 ?x69 ?x76 ?x76 ?x76 ?x70 ?x70)) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x111 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x108)))))
 (rewrite (= $x111 $x153)))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x113 (asserted $x112)))
 (let ((@x575 (mp (mp @x113 (quant-intro (proof-bind ?x287) (= $x112 $x279)) $x279) (rewrite (= $x279 $x279)) $x279)))
 (let ((@x472 (mp (mp @x575 (quant-intro (proof-bind ?x682) (= $x279 $x576)) $x576) (quant-intro (proof-bind ?x545) (= $x576 $x382)) $x382)))
 (let ((@x126 (mp (mp~ @x472 (sk (~ $x382 $x491)) $x491) (rewrite (= $x491 $x292)) $x292)))
 (let ((@x259 (and-elim @x126 $x743)))
 (let ((@x454 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x743) $x680)) @x259 $x680)))
 (let (($x206 (>= ?x772 1)))
 (let ((@x147 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x743) $x206)) @x259 $x206)))
 (let (($x750 (<= ?x329 4)))
 (let ((@x362 (and-elim @x126 $x219)))
 (let ((@x217 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x219) $x750)) @x362 $x750)))
 (let (($x163 (>= ?x329 4)))
 (let ((@x203 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x219) $x163)) @x362 $x163)))
 (let (($x457 (<= ?x556 (- 6))))
 (let ((@x334 (and-elim @x126 $x622)))
 (let ((@x560 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x622) $x457)) @x334 $x457)))
 (let (($x237 (>= ?x556 (- 6))))
 (let ((@x563 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x622) $x237)) @x334 $x237)))
 (let (($x304 (<= ?x431 1)))
 (let ((@x365 (and-elim @x126 $x345)))
 (let ((@x390 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x345) $x304)) @x365 $x304)))
 (let (($x306 (>= ?x431 1)))
 (let ((@x224 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x345) $x306)) @x365 $x306)))
 (let (($x135 (not (<= ?x122 0))))
 (let (($x451 (>= ?x122 0)))
 (let ((@x171 ((_ th-lemma arith) (hypothesis (not $x451)) @x147 @x454 @x563 @x560 @x147 @x454 @x224 @x390 @x147 @x454 @x563 @x560 @x147 @x454 @x203 @x217 @x147 @x454 false)))
 (let ((@x391 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x127 $x135 (not $x451))) (and-elim @x126 $x335) (or $x135 (not $x451)))))
 ((_ th-lemma arith) (unit-resolution @x391 (lemma @x171 $x451) $x135) @x147 @x454 @x563 @x560 @x147 @x454 @x224 @x390 @x147 @x454 @x563 @x560 @x147 @x454 @x203 @x217 @x147 @x454 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        13
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           1
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             303
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             1
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 50
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.97
 :memory                    3.27
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                3838172
 :num-checks                1
 :propagations              11
 :rlimit-count              33457
 :time                      0.03
 :total-time                0.04)
