unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x759 (* 3 c!3)))
 (let ((?x2434 (* (- 1) (* k!2 n!0))))
 (let ((?x237 (* (- 2) n!0)))
 (let ((?x2250 (+ k!2 ?x237 ?x2434 ?x759)))
 (let (($x1230 (<= ?x2250 1)))
 (let (($x2248 (= ?x2250 1)))
 (let ((?x2252 (+ k!2 c!3)))
 (let ((?x2367 (+ k!2 m!1)))
 (let ((?x2006 (+ 1 n!0)))
 (let ((?x2110 (* (- 12) (* k!2 k!2 k!2 k!2 m!1))))
 (let ((?x1268 (* (- 4) (* k!2 k!2 k!2 k!2 k!2))))
 (let ((?x2115 (* (- 4) (* k!2 k!2 m!1 m!1 m!1))))
 (let ((?x2165 (* (- 12) (* k!2 k!2 k!2 m!1 m!1))))
 (let ((?x2037 (* (- 9) (* ?x2006 ?x2006 ?x2006 (+ 6 m!1) ?x2367 ?x2252 ?x2252 ?x2252 ?x2252))))
 (let ((?x580 (+ (* 9 (* ?x2006 ?x2006 ?x2006 (+ 6 m!1) ?x2367 ?x2252 ?x2252 ?x2252)) (* (- 18) (* ?x2006 ?x2006 (+ 6 m!1) ?x2367 ?x2252 ?x2252 ?x2252 ?x2252)) (* 4 (* ?x2006 ?x2367 ?x2367 ?x2367 ?x2252 ?x2252 ?x2252)) (* ?x2006 ?x2006 (+ 6 m!1) ?x2367 ?x2367 ?x2367 ?x2252 ?x2252 ?x2252) (* 18 (* ?x2367 ?x2367 ?x2367 ?x2252 ?x2252 ?x2252)) (* (- 24) (* k!2 k!2 k!2 m!1 c!3)) (* (- 12) (* k!2 k!2 m!1 c!3 c!3)) (* (- 9) (* ?x2006 ?x2006 ?x2367 ?x2367 ?x2252 ?x2252 ?x2252 ?x2252)) (* (- 4) (* k!2 k!2 k!2 c!3 c!3)) (* (- 12) (* k!2 m!1 m!1 c!3 c!3)) ?x2037 (* ?x2006 ?x2367 ?x2367 ?x2367 ?x2367 ?x2252 ?x2252 ?x2252) (* 9 (* ?x2006 ?x2006 ?x2367 ?x2367 ?x2252 ?x2252 ?x2252)) (* (- 5) (* ?x2006 ?x2006 (+ 6 m!1) ?x2367 ?x2367 ?x2252 ?x2252 ?x2252)) (* (- 8) (* k!2 m!1 m!1 m!1 c!3)) (* (- 24) (* k!2 k!2 m!1 m!1 c!3)) (* (- 8) (* k!2 k!2 k!2 k!2 c!3)) (* 4 (* ?x2006 ?x2367 ?x2367 ?x2252 ?x2252 ?x2252)) (* 4 (* ?x2006 ?x2006 (+ 6 m!1) ?x2367 ?x2252 ?x2252 ?x2252)) (* (- 4) (* m!1 m!1 m!1 c!3 c!3)) ?x2165 ?x2115 ?x1268 (* (- 1) (* ?x2367 ?x2367 ?x2367 ?x2367 ?x2367 ?x2252 ?x2252)) (* 5 (* ?x2367 ?x2367 ?x2367 ?x2367 ?x2252 ?x2252)) ?x2110 (* (- 9) (* ?x2006 ?x2367 ?x2367 ?x2367 ?x2252 ?x2252)) (* (- 18) (* ?x2006 ?x2367 ?x2367 ?x2252 ?x2252 ?x2252 ?x2252)))))
 (let (($x1304 (= ?x580 0)))
 (let (($x1314 (not $x1304)))
 (let ((?x2346 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x2366 (= ?x2346 1)))
 (let ((?x1105 (* (- 1) (* k!2 k!2))))
 (let ((?x1119 (* 18 c!3)))
 (let ((?x2236 (* (- 9) n!0)))
 (let ((?x816 (* 5 k!2)))
 (let ((?x2237 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x2122 (= ?x2237 (- 6))))
 (let (($x1263 (and $x2122 (= (+ ?x816 ?x2236 ?x1119 ?x1105 (* 9 (* n!0 c!3))) 4) $x2248 $x2366 $x1314)))
 (let ((?x2351 (* (- 1) (* ?x2367 ?x2367 ?x2367 ?x2367 ?x2367 (+ c!3 k!2) (+ c!3 k!2)))))
 (let ((?x2615 (* 18 (* ?x2367 ?x2367 ?x2367 (+ c!3 k!2) (+ c!3 k!2) (+ c!3 k!2)))))
 (let ((?x2361 (+ c!3 k!2)))
 (let ((?x2363 (+ 6 m!1)))
 (let ((?x1599 (+ (* 9 (* ?x2006 ?x2006 ?x2367 ?x2367 ?x2361 ?x2361 ?x2361)) (* (- 5) (* ?x2006 ?x2006 ?x2363 ?x2367 ?x2367 ?x2361 ?x2361 ?x2361)) (* (- 24) (* c!3 k!2 k!2 m!1 m!1)) (* (- 12) (* c!3 c!3 k!2 m!1 m!1)) (* (- 4) (* c!3 c!3 k!2 k!2 k!2)) (* (- 8) (* c!3 k!2 k!2 k!2 k!2)) (* (- 12) (* c!3 c!3 k!2 k!2 m!1)) (* (- 24) (* c!3 k!2 k!2 k!2 m!1)) ?x2165 ?x2110 (* ?x2006 ?x2367 ?x2367 ?x2367 ?x2367 ?x2361 ?x2361 ?x2361) ?x2115 (* (- 8) (* c!3 k!2 m!1 m!1 m!1)) (* (- 4) (* c!3 c!3 m!1 m!1 m!1)) ?x1268 (* 4 (* ?x2006 ?x2006 ?x2363 ?x2367 ?x2361 ?x2361 ?x2361)) (* 4 (* ?x2006 ?x2367 ?x2367 ?x2361 ?x2361 ?x2361)) (* 9 (* ?x2006 ?x2006 ?x2006 ?x2363 ?x2367 ?x2361 ?x2361 ?x2361)) (* (- 18) (* ?x2006 ?x2006 ?x2363 ?x2367 ?x2361 ?x2361 ?x2361 ?x2361)) (* (- 18) (* ?x2006 ?x2367 ?x2367 ?x2361 ?x2361 ?x2361 ?x2361)) (* 4 (* ?x2006 ?x2367 ?x2367 ?x2367 ?x2361 ?x2361 ?x2361)) (* (- 9) (* ?x2006 ?x2006 ?x2367 ?x2367 ?x2361 ?x2361 ?x2361 ?x2361)) (* (- 9) (* ?x2006 ?x2006 ?x2006 ?x2363 ?x2367 ?x2361 ?x2361 ?x2361 ?x2361)) (* ?x2006 ?x2006 ?x2363 ?x2367 ?x2367 ?x2367 ?x2361 ?x2361 ?x2361) ?x2615 (* 5 (* ?x2367 ?x2367 ?x2367 ?x2367 ?x2361 ?x2361)) ?x2351 (* (- 9) (* ?x2006 ?x2367 ?x2367 ?x2367 ?x2361 ?x2361)))))
 (let (($x2285 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x1119 ?x816 ?x2236 ?x1105 (* 9 (* c!3 n!0))) 4) (= (+ ?x759 k!2 ?x237 ?x2434) 1) $x2366 (not (= ?x1599 0)))))
 (let (($x1421 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x325 (+ 1 n)))
 (let ((?x2440 (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x322 (+ 6 m)))
 (let ((?x2281 (* ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1030 (* ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1345 (* (- 8) (* c k k k k))))
 (let ((?x824 (+ (* 9 (* ?x325 ?x325 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 5) (* ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 24) (* c k k m m)) (* (- 12) (* c c k m m)) (* (- 4) (* c c k k k)) ?x1345 (* (- 12) (* c c k k m)) (* (- 24) (* c k k k m)) (* (- 12) (* k k k m m)) (* (- 12) (* k k k k m)) ?x1030 (* (- 4) (* k k m m m)) (* (- 8) (* c k m m m)) (* (- 4) (* c c m m m)) (* (- 4) (* k k k k k)) (* 4 (* ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68)) (* 4 (* ?x325 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68)) (* (- 18) (* ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x325 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 4 (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x325 ?x325 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 9) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68 ?x68)) ?x2281 (* 18 (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 (* ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 9) ?x2440))))
 (let (($x314 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x276 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x228 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x224 (= ?x228 4)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (and $x140 $x224 $x276 $x314 (not (= ?x824 0))))))))))))))))))) :qid k!34))
 ))
 (let (($x379 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x2370 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x322 (+ 6 m)))
 (let ((?x325 (+ 1 n)))
 (let ((?x2281 (* ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2376 (+ (* 5 (* ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x325 ?x325 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x325 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x325 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x325 ?x325 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 9 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 1) ?x2281) (* 4 (* ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 18) (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 5) (* ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x2370)))
 (let (($x1490 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1419 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1301 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (and $x140 (= ?x1301 (- 4)) $x1419 $x1490 (not (= ?x2376 0)))))))))))))))) :qid k!34))
 ))
 (let ((?x1418 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x325 (+ 1 n)))
 (let ((?x2440 (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x322 (+ 6 m)))
 (let ((?x2281 (* ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1030 (* ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1345 (* (- 8) (* c k k k k))))
 (let ((?x824 (+ (* 9 (* ?x325 ?x325 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 5) (* ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 24) (* c k k m m)) (* (- 12) (* c c k m m)) (* (- 4) (* c c k k k)) ?x1345 (* (- 12) (* c c k k m)) (* (- 24) (* c k k k m)) (* (- 12) (* k k k m m)) (* (- 12) (* k k k k m)) ?x1030 (* (- 4) (* k k m m m)) (* (- 8) (* c k m m m)) (* (- 4) (* c c m m m)) (* (- 4) (* k k k k k)) (* 4 (* ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68)) (* 4 (* ?x325 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68)) (* (- 18) (* ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x325 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 4 (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x325 ?x325 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 9) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68 ?x68)) ?x2281 (* 18 (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 (* ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 9) ?x2440))))
 (let (($x314 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x276 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x228 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x224 (= ?x228 4)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (let (($x1118 (and $x140 $x224 $x276 $x314 (not (= ?x824 0)))))
 (let ((?x2370 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x2376 (+ (* 5 (* ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x325 ?x325 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 ?x2440) (* (- 4) (* ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x1030) (* (- 9) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x325 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x325 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x325 ?x325 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 9 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 1) ?x2281) (* 4 (* ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 18) (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 5) (* ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x2370)))
 (let (($x1490 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1419 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1301 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x434 (and $x140 (= ?x1301 (- 4)) $x1419 $x1490 (not (= ?x2376 0)))))
 (rewrite (= $x434 $x1118))))))))))))))))))))))))))))
 ))
 (let (($x107 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x101 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x74 (- (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71) (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x81 (- (+ ?x74 (* 9 ?x68 ?x68 ?x69 ?x69 ?x69 ?x71)) (* 4 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71))))
 (let ((?x83 (- (- ?x81 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x87 (+ (- ?x83 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x71)) (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71) (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x71))))
 (let ((?x92 (+ (- ?x87 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x71 ?x71) (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x96 (+ (- ?x92 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71)) (* 4 ?x68 ?x68 ?x69 ?x69 ?x69))))
 (let ((?x100 (- (- ?x96 (* 18 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69)) (* 5 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (+ ?x100 ?x101) 0))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x412 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x2370 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x322 (+ 6 m)))
 (let ((?x325 (+ 1 n)))
 (let ((?x2281 (* ?x325 ?x325 ?x322 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x2376 (+ (* 5 (* ?x325 ?x325 ?x322 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x325 ?x325 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 4) (* ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x325 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68)) (* (- 4) (* ?x325 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 18 (* ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 18 (* ?x325 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 4) (* ?x325 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 (* ?x325 ?x325 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)) (* 9 (* ?x325 ?x325 ?x325 ?x322 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 1) ?x2281) (* 4 (* ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 18) (* ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 5) (* ?x69 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x2370)))
 (let (($x1490 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1419 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1301 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (let (($x434 (and $x140 (= ?x1301 (- 4)) $x1419 $x1490 (not (= ?x2376 0)))))
 (let ((?x101 (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x74 (- (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71) (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x81 (- (+ ?x74 (* 9 ?x68 ?x68 ?x69 ?x69 ?x69 ?x71)) (* 4 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71))))
 (let ((?x83 (- (- ?x81 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x87 (+ (- ?x83 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x71)) (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71) (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x71))))
 (let ((?x92 (+ (- ?x87 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x71 ?x71) (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x96 (+ (- ?x92 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71)) (* 4 ?x68 ?x68 ?x69 ?x69 ?x69))))
 (let ((?x100 (- (- ?x96 (* 18 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69)) (* 5 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x106 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (+ ?x100 ?x101) 0))))))
 (rewrite (= $x106 $x434)))))))))))))))))))))))))))))))))
 ))
 (let ((@x108 (asserted $x107)))
 (let ((@x2297 (mp (mp @x108 (quant-intro (proof-bind ?x412) (= $x107 $x379)) $x379) (rewrite (= $x379 $x379)) $x379)))
 (let ((@x2531 (mp~ (mp @x2297 (quant-intro (proof-bind ?x1418) (= $x379 $x1421)) $x1421) (sk (~ $x1421 $x2285)) $x2285)))
 (let ((@x1309 (mp @x2531 (rewrite (= $x2285 $x1263)) $x1263)))
 (let ((@x1433 (and-elim @x1309 $x2248)))
 (let ((@x2098 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2248) $x1230)) @x1433 $x1230)))
 (let (($x1748 (>= ?x2250 1)))
 (let ((@x933 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2248) $x1748)) @x1433 $x1748)))
 (let (($x815 (<= ?x2346 1)))
 (let ((@x1435 (and-elim @x1309 $x2366)))
 (let ((@x584 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2366) $x815)) @x1435 $x815)))
 (let (($x2095 (>= ?x2346 1)))
 (let ((@x1431 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2366) $x2095)) @x1435 $x2095)))
 (let (($x1475 (<= ?x2237 (- 6))))
 (let ((@x1293 (and-elim @x1309 $x2122)))
 (let ((@x1999 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2122) $x1475)) @x1293 $x1475)))
 (let (($x1484 (>= ?x2237 (- 6))))
 (let ((@x2119 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2122) $x1484)) @x1293 $x1484)))
 (let (($x1233 (not (>= ?x580 0))))
 (let (($x2094 (<= ?x580 0)))
 (let ((@x2172 ((_ th-lemma arith) (hypothesis (not $x2094)) @x1431 @x584 @x2119 @x1999 @x2119 @x1999 @x1431 @x584 @x1431 @x584 @x933 @x2098 @x2119 @x1999 @x1431 @x584 @x933 @x2098 false)))
 (let ((@x2128 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1304 (not $x2094) $x1233)) (and-elim @x1309 $x1314) (or (not $x2094) $x1233))))
 ((_ th-lemma arith) (unit-resolution @x2128 (lemma @x2172 $x2094) $x1233) @x1431 @x584 @x2119 @x1999 @x2119 @x1999 @x1431 @x584 @x1431 @x584 @x933 @x2098 @x2119 @x1999 @x1431 @x584 @x933 @x2098 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        18
 :arith-assert-upper        44
 :arith-branch-var          3
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           13
 :arith-grobner             2
 :arith-ineq-splits         3
 :arith-max-min             435
 :arith-nonlinear-bounds    8
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             6
 :arith-patches_succ        1
 :arith-pivots              12
 :arith-row-summations      14
 :arith-tableau-max-columns 63
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 34
 :del-clause                16
 :final-checks              11
 :max-memory                19.91
 :memory                    19.40
 :mk-bool-var               48
 :mk-clause                 16
 :num-allocs                709611
 :num-checks                1
 :propagations              12
 :rlimit-count              14190
 :time                      0.01
 :total-time                0.03)
