unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x2720 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x582 (<= ?x2720 1)))
 (let (($x2641 (= ?x2720 1)))
 (let ((?x388 (+ k!2 c!3)))
 (let ((?x1596 (+ 6 m!1)))
 (let ((?x2400 (+ 1 n!0)))
 (let ((?x5725 (* n!0 n!0)))
 (let ((?x2481 (* (- 324) ?x5725)))
 (let ((?x5672 (* k!2 k!2)))
 (let ((?x2440 (* 66 ?x5672)))
 (let ((?x936 (* 6 (* k!2 k!2 k!2))))
 (let ((?x2762 (* 25 (* k!2 k!2 k!2 m!1))))
 (let ((?x2649 (* (- 168) (* k!2 m!1 m!1))))
 (let ((?x3066 (* (- 1) (* ?x2400 ?x2400 ?x1596 ?x1596 (+ k!2 m!1) (+ k!2 m!1) ?x388))))
 (let ((?x4638 (* (- 52) (* k!2 k!2 m!1 m!1))))
 (let ((?x2323 (* 144 (* c!3 c!3 c!3))))
 (let ((?x5834 (* 420 (* k!2 m!1))))
 (let ((?x2714 (* 828 c!3)))
 (let ((?x2711 (* 24 m!1)))
 (let ((?x2402 (* 4 (* k!2 k!2 k!2 m!1 m!1))))
 (let ((?x2370 (* 89 (* m!1 m!1))))
 (let ((?x2395 (* (- 24) (* m!1 m!1 m!1))))
 (let ((?x2348 (* 180 (* k!2 n!0 n!0))))
 (let ((?x2718 (* (- 792) n!0)))
 (let ((?x2493 (* (- 138) (* k!2 k!2 k!2 n!0))))
 (let ((?x2362 (* 24 (* c!3 c!3))))
 (let ((?x2403 (* 78 (* k!2 k!2 n!0 n!0))))
 (let ((?x1599 (+ k!2 m!1)))
 (let ((?x2309 (* ?x2400 ?x1596 ?x1599 ?x1599 ?x1599 ?x1599)))
 (let ((?x2371 (* (- 6) (* m!1 m!1 m!1 m!1))))
 (let ((?x2312 (* 1008 k!2)))
 (let ((?x1923 (* (- 301) (* k!2 k!2 m!1))))
 (let ((?x1570 (* k!2 n!0)))
 (let ((?x2429 (* 1188 ?x1570)))
 (let ((?x1614 (* 144 (* k!2 k!2 n!0))))
 (let ((?x2372 (* (- 35) (* k!2 m!1 m!1 m!1))))
 (let ((?x5527 (+ (* 432 (* k!2 c!3 c!3)) (* 96 (* k!2 n!0 c!3)) (* (- 18) (* ?x2400 ?x2400 ?x1596 ?x388 ?x388 ?x388)) (* 9 (* ?x2400 ?x2400 ?x2400 ?x1596 ?x388 ?x388)) (* 4 (* m!1 m!1 c!3 c!3 c!3)) (* 144 (* k!2 m!1 c!3 c!3)) ?x2372 (* 180 (* n!0 n!0 c!3)) ?x1614 ?x2429 ?x1923 (* 588 (* k!2 n!0 m!1)) (* (- 9) (* ?x2400 ?x2400 ?x2400 ?x1596 ?x388 ?x388 ?x388)) ?x2312 (* (- 5) (* ?x2400 ?x2400 ?x1596 ?x1599 ?x388 ?x388)) ?x2371 (* 13 (* k!2 k!2 n!0 n!0 m!1)) (* (- 36) (* k!2 m!1 m!1 c!3)) (* 126 (* k!2 k!2 m!1 c!3)) (* (- 108) (* k!2 k!2 n!0 c!3)) (* 8 (* n!0 m!1 c!3 c!3)) (* (- 200) (* k!2 n!0 m!1 c!3)) (* (- 288) (* k!2 k!2 n!0 m!1)) (* (- 18) (* k!2 k!2 n!0 m!1 c!3)) (* 324 (* k!2 k!2 c!3)) (* (- 18) (* n!0 m!1 m!1 m!1 c!3)) ?x2309 ?x2403 ?x2362 ?x2493 ?x2718 ?x2348 ?x2395 ?x2370 ?x2402 (* 23 (* k!2 n!0 n!0 m!1 m!1)) (* ?x1596 ?x1596 ?x1599 ?x1599 ?x388 ?x388 ?x388) (* 60 (* n!0 n!0 m!1 c!3)) ?x2711 ?x2714 (* (- 6) (* n!0 m!1 m!1 m!1 m!1)) (* 45 (* n!0 n!0 m!1 m!1)) (* 276 (* m!1 c!3)) ?x5834 (* (- 208) (* k!2 m!1 c!3)) (* 336 (* n!0 m!1 c!3)) ?x2323 (* 48 (* k!2 c!3)) (* (- 9) (* ?x2400 ?x1596 ?x1596 ?x388 ?x388 ?x388 ?x388)) (* (- 5) (* ?x1596 ?x1596 ?x1599 ?x388 ?x388 ?x388)) (* (- 84) (* n!0 m!1)) (* 48 (* k!2 n!0 n!0 c!3)) (* 4 (* n!0 n!0 m!1 c!3 c!3)) (* 8 (* k!2 n!0 n!0 m!1 c!3)) (* 168 (* k!2 n!0 n!0 m!1)) (* 24 (* n!0 n!0 c!3 c!3)) (* (- 80) (* n!0 m!1 m!1 c!3)) (* 5 (* n!0 n!0 m!1 m!1 c!3)) (* 48 (* n!0 c!3 c!3)) ?x4638 (* (- 52) (* k!2 k!2 n!0 m!1 m!1)) (* 5 (* ?x2400 ?x2400 ?x1596 ?x1596 ?x1599 ?x388)) ?x3066 (* (- 15) (* n!0 m!1 m!1 m!1)) (* (- 36) (* k!2 n!0 m!1 m!1 c!3)) (* 9 (* ?x2400 ?x1596 ?x1596 ?x388 ?x388 ?x388)) ?x2649 (* (- 23) (* k!2 k!2 k!2 n!0 m!1)) (* (- 108) (* n!0 n!0 m!1)) ?x2762 (* 1008 (* n!0 c!3)) (* (- 85) (* m!1 m!1 c!3)) (* (- 9) (* ?x2400 ?x2400 ?x2400 ?x1596 ?x1596 ?x388)) (* 18 (* ?x2400 ?x2400 ?x1596 ?x1596 ?x388 ?x388)) (* 48 (* m!1 c!3 c!3 c!3)) (* ?x2400 ?x2400 ?x1596 ?x1599 ?x1599 ?x388 ?x388) ?x936 ?x2440 (* 12 (* k!2 k!2 m!1 m!1 c!3)) (* 4 (* m!1 c!3 c!3)) (* (- 35) (* k!2 n!0 m!1 m!1 m!1)) ?x2481 (* (- 18) (* m!1 m!1 m!1 c!3)) (* 12 (* k!2 m!1 m!1 c!3 c!3)) (* (- 145) (* k!2 n!0 m!1 m!1)) (* (- 9) (* ?x2400 ?x2400 ?x1596 ?x1599 ?x1599 ?x388)) (* 9 (* ?x2400 ?x2400 ?x2400 ?x1596 ?x1596 ?x388 ?x388)) (* (- 18) (* ?x1596 ?x1596 ?x388 ?x388 ?x388 ?x388)) (* 9 (* n!0 n!0 m!1 m!1 m!1)) (* 134 (* n!0 m!1 m!1)))))
 (let (($x4893 (= ?x5527 468)))
 (let (($x5806 (not $x4893)))
 (let ((?x5018 (+ ?x1570 (* (- 1) k!2) (* 2 n!0) (* (- 3) c!3))))
 (let (($x5116 (= ?x5018 (- 1))))
 (let ((?x5668 (* (- 1) ?x5672)))
 (let ((?x2357 (* 18 c!3)))
 (let ((?x3513 (* (- 9) n!0)))
 (let ((?x1093 (* 5 k!2)))
 (let ((?x5110 (+ ?x1093 ?x3513 ?x2357 (* 9 (* n!0 c!3)) ?x5668)))
 (let (($x5113 (= ?x5110 4)))
 (let ((?x2341 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x2660 (= ?x2341 (- 6))))
 (let (($x1067 (and $x2660 $x5113 $x5116 $x2641 $x5806)))
 (let ((?x2338 (* 9 (* ?x2400 ?x2400 ?x2400 ?x1596 ?x1596 (+ c!3 k!2) (+ c!3 k!2)))))
 (let ((?x1597 (+ c!3 k!2)))
 (let ((?x2337 (+ ?x2714 ?x2312 ?x2711 ?x2718 ?x2440 ?x2429 (* 1008 (* c!3 n!0)) ?x2481 (* 13 (* k!2 k!2 m!1 n!0 n!0)) (* 8 (* c!3 k!2 m!1 n!0 n!0)) (* 4 (* c!3 c!3 m!1 n!0 n!0)) (* 24 (* c!3 c!3 n!0 n!0)) (* 5 (* c!3 m!1 m!1 n!0 n!0)) (* 23 (* k!2 m!1 m!1 n!0 n!0)) (* 276 (* c!3 m!1)) ?x5834 (* (- 85) (* c!3 m!1 m!1)) ?x2649 (* 336 (* c!3 m!1 n!0)) (* 588 (* k!2 m!1 n!0)) (* (- 80) (* c!3 m!1 m!1 n!0)) (* (- 145) (* k!2 m!1 m!1 n!0)) (* 180 (* c!3 n!0 n!0)) ?x2348 (* 60 (* c!3 m!1 n!0 n!0)) (* 168 (* k!2 m!1 n!0 n!0)) ?x2362 (* 432 (* c!3 c!3 k!2)) (* 324 (* c!3 k!2 k!2)) ?x936 (* 4 (* c!3 c!3 m!1)) (* (- 208) (* c!3 k!2 m!1)) ?x1923 (* 144 (* c!3 c!3 k!2 m!1)) (* 126 (* c!3 k!2 k!2 m!1)) ?x2762 (* (- 36) (* c!3 k!2 m!1 m!1)) ?x4638 (* (- 108) (* c!3 k!2 k!2 n!0)) ?x2493 (* 8 (* c!3 c!3 m!1 n!0)) (* (- 200) (* c!3 k!2 m!1 n!0)) (* (- 288) (* k!2 k!2 m!1 n!0)) (* (- 18) (* c!3 k!2 k!2 m!1 n!0)) (* (- 23) (* k!2 k!2 k!2 m!1 n!0)) (* (- 36) (* c!3 k!2 m!1 m!1 n!0)) (* (- 52) (* k!2 k!2 m!1 m!1 n!0)) (* (- 35) (* k!2 m!1 m!1 m!1 n!0)) (* (- 6) (* m!1 m!1 m!1 m!1 n!0)) ?x2370 ?x2395 ?x2372 ?x2371 ?x1614 (* 134 (* m!1 m!1 n!0)) (* (- 15) (* m!1 m!1 m!1 n!0)) (* 48 (* c!3 k!2)) (* (- 18) (* c!3 m!1 m!1 m!1)) (* (- 18) (* c!3 m!1 m!1 m!1 n!0)) (* 96 (* c!3 k!2 n!0)) (* 9 (* ?x2400 ?x2400 ?x2400 ?x1596 ?x1597 ?x1597)) (* (- 5) (* ?x2400 ?x2400 ?x1596 ?x1599 ?x1597 ?x1597)) (* (- 9) (* ?x2400 ?x2400 ?x2400 ?x1596 ?x1596 ?x1597)) ?x2323 (* 48 (* c!3 c!3 c!3 m!1)) (* ?x1596 ?x1596 ?x1599 ?x1599 ?x1597 ?x1597 ?x1597) (* ?x2400 ?x2400 ?x1596 ?x1599 ?x1599 ?x1597 ?x1597) (* (- 9) (* ?x2400 ?x1596 ?x1596 ?x1597 ?x1597 ?x1597 ?x1597)) (* 4 (* c!3 c!3 c!3 m!1 m!1)) (* 12 (* c!3 c!3 k!2 m!1 m!1)) (* 12 (* c!3 k!2 k!2 m!1 m!1)) ?x2402 (* (- 18) (* ?x2400 ?x2400 ?x1596 ?x1597 ?x1597 ?x1597)) ?x2403 (* 48 (* c!3 c!3 n!0)) (* 9 (* m!1 m!1 m!1 n!0 n!0)) (* (- 18) (* ?x1596 ?x1596 ?x1597 ?x1597 ?x1597 ?x1597)) (* (- 108) (* m!1 n!0 n!0)) (* 45 (* m!1 m!1 n!0 n!0)) (* (- 84) (* m!1 n!0)) (* (- 5) (* ?x1596 ?x1596 ?x1599 ?x1597 ?x1597 ?x1597)) ?x2309 (* 5 (* ?x2400 ?x2400 ?x1596 ?x1596 ?x1599 ?x1597)) (* (- 1) (* ?x2400 ?x2400 ?x1596 ?x1596 ?x1599 ?x1599 ?x1597)) (* 9 (* ?x2400 ?x1596 ?x1596 ?x1597 ?x1597 ?x1597)) (* (- 9) (* ?x2400 ?x2400 ?x1596 ?x1599 ?x1599 ?x1597)) (* 48 (* c!3 k!2 n!0 n!0)) (* (- 9) (* ?x2400 ?x2400 ?x2400 ?x1596 ?x1597 ?x1597 ?x1597)) (* 18 (* ?x2400 ?x2400 ?x1596 ?x1596 ?x1597 ?x1597)) ?x2338)))
 (let (($x5147 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x2357 ?x1093 ?x3513 ?x5668 (* 9 (* c!3 n!0))) 4) (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x1570)) 1) $x2641 (not (= ?x2337 468)))))
 (let (($x1892 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x342 (+ 6 m)))
 (let ((?x347 (+ 1 n)))
 (let ((?x5866 (* 9 (* ?x347 ?x347 ?x347 ?x342 ?x342 ?x68 ?x68))))
 (let ((?x5857 (* 18 (* ?x347 ?x347 ?x342 ?x342 ?x68 ?x68))))
 (let ((?x4745 (* (- 9) (* ?x347 ?x347 ?x347 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5824 (* (- 9) (* ?x347 ?x347 ?x342 (+ k m) (+ k m) ?x68))))
 (let ((?x5790 (* 9 (* ?x347 ?x342 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5760 (* (- 1) (* ?x347 ?x347 ?x342 ?x342 (+ k m) (+ k m) ?x68))))
 (let ((?x5714 (* 5 (* ?x347 ?x347 ?x342 ?x342 (+ k m) ?x68))))
 (let ((?x69 (+ k m)))
 (let ((?x5399 (* ?x347 ?x342 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x4350 (* (- 5) (* ?x342 ?x342 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x5560 (* (- 18) (* ?x342 ?x342 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x5368 (* (- 18) (* ?x347 ?x347 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x3791 (* (- 9) (* ?x347 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x3783 (* ?x347 ?x347 ?x342 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x3779 (* ?x342 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x3101 (* (- 9) (* ?x347 ?x347 ?x347 ?x342 ?x342 ?x68))))
 (let ((?x3180 (* (- 5) (* ?x347 ?x347 ?x342 ?x69 ?x68 ?x68))))
 (let ((?x1880 (* 9 (* ?x347 ?x347 ?x347 ?x342 ?x68 ?x68))))
 (let ((?x5216 (+ (* 828 c) (* 1008 k) (* 24 m) (* (- 792) n) (* 66 (* k k)) (* 1188 (* k n)) (* 1008 (* c n)) (* (- 324) (* n n)) (* 13 (* k k m n n)) (* 8 (* c k m n n)) (* 4 (* c c m n n)) (* 24 (* c c n n)) (* 5 (* c m m n n)) (* 23 (* k m m n n)) (* 276 (* c m)) (* 420 (* k m)) (* (- 85) (* c m m)) (* (- 168) (* k m m)) (* 336 (* c m n)) (* 588 (* k m n)) (* (- 80) (* c m m n)) (* (- 145) (* k m m n)) (* 180 (* c n n)) (* 180 (* k n n)) (* 60 (* c m n n)) (* 168 (* k m n n)) (* 24 (* c c)) (* 432 (* c c k)) (* 324 (* c k k)) (* 6 (* k k k)) (* 4 (* c c m)) (* (- 208) (* c k m)) (* (- 301) (* k k m)) (* 144 (* c c k m)) (* 126 (* c k k m)) (* 25 (* k k k m)) (* (- 36) (* c k m m)) (* (- 52) (* k k m m)) (* (- 108) (* c k k n)) (* (- 138) (* k k k n)) (* 8 (* c c m n)) (* (- 200) (* c k m n)) (* (- 288) (* k k m n)) (* (- 18) (* c k k m n)) (* (- 23) (* k k k m n)) (* (- 36) (* c k m m n)) (* (- 52) (* k k m m n)) (* (- 35) (* k m m m n)) (* (- 6) (* m m m m n)) (* 89 (* m m)) (* (- 24) (* m m m)) (* (- 35) (* k m m m)) (* (- 6) (* m m m m)) (* 144 (* k k n)) (* 134 (* m m n)) (* (- 15) (* m m m n)) (* 48 (* c k)) (* (- 18) (* c m m m)) (* (- 18) (* c m m m n)) (* 96 (* c k n)) ?x1880 ?x3180 ?x3101 (* 144 (* c c c)) (* 48 (* c c c m)) ?x3779 ?x3783 ?x3791 (* 4 (* c c c m m)) (* 12 (* c c k m m)) (* 12 (* c k k m m)) (* 4 (* k k k m m)) ?x5368 (* 78 (* k k n n)) (* 48 (* c c n)) (* 9 (* m m m n n)) ?x5560 (* (- 108) (* m n n)) (* 45 (* m m n n)) (* (- 84) (* m n)) ?x4350 ?x5399 ?x5714 ?x5760 ?x5790 ?x5824 (* 48 (* c k n n)) ?x4745 ?x5857 ?x5866)))
 (let (($x334 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x296 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x247 (* (- 1) ?x49)))
 (let ((?x246 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x244 (= (+ ?x40 ?x44 ?x246 ?x247 (* 9 (* c n))) 4)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (and $x160 $x244 $x296 $x334 (not (= ?x5216 468)))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x4331 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x342 (+ 6 m)))
 (let ((?x347 (+ 1 n)))
 (let ((?x5866 (* 9 (* ?x347 ?x347 ?x347 ?x342 ?x342 ?x68 ?x68))))
 (let ((?x5857 (* 18 (* ?x347 ?x347 ?x342 ?x342 ?x68 ?x68))))
 (let ((?x5790 (* 9 (* ?x347 ?x342 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5760 (* (- 1) (* ?x347 ?x347 ?x342 ?x342 (+ k m) (+ k m) ?x68))))
 (let ((?x69 (+ k m)))
 (let ((?x5399 (* ?x347 ?x342 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x4350 (* (- 5) (* ?x342 ?x342 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x5368 (* (- 18) (* ?x347 ?x347 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5714 (* 5 (* ?x347 ?x347 ?x342 ?x342 ?x69 ?x68))))
 (let ((?x5560 (* (- 18) (* ?x342 ?x342 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x4745 (* (- 9) (* ?x347 ?x347 ?x347 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5824 (* (- 9) (* ?x347 ?x347 ?x342 ?x69 ?x69 ?x68))))
 (let ((?x3180 (* (- 5) (* ?x347 ?x347 ?x342 ?x69 ?x68 ?x68))))
 (let ((?x3101 (* (- 9) (* ?x347 ?x347 ?x347 ?x342 ?x342 ?x68))))
 (let ((?x1880 (* 9 (* ?x347 ?x347 ?x347 ?x342 ?x68 ?x68))))
 (let ((?x3791 (* (- 9) (* ?x347 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x3783 (* ?x347 ?x347 ?x342 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x3779 (* ?x342 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x3990 (+ ?x3779 ?x3783 ?x3791 (* 4 (* ?x347 ?x347 ?x342 ?x68 ?x68)) ?x1880 (* 5 (* ?x347 ?x347 ?x342 ?x342 ?x68)) ?x3101 ?x3180 (* 18 (* ?x347 ?x342 ?x342 ?x68)) (* (- 1) (* ?x347 ?x342 ?x342 ?x69 ?x69)) ?x5824 ?x4745 ?x5560 ?x5714 ?x5368 ?x4350 (* (- 18) (* ?x347 ?x342 ?x69 ?x69 ?x68)) (* 9 (* ?x347 ?x347 ?x342 ?x69 ?x69)) (* (- 9) (* ?x347 ?x347 ?x342 ?x342)) ?x5399 (* 5 (* ?x347 ?x342 ?x342 ?x69)) (* (- 5) (* ?x347 ?x342 ?x69 ?x69 ?x69)) (* 4 (* ?x347 ?x342 ?x69 ?x69)) ?x5760 ?x5790 ?x5857 ?x5866 (* 4 (* ?x342 ?x342 ?x68 ?x68 ?x68)) (* (- 4) (* ?x347 ?x342 ?x342)))))
 (let (($x2443 (not (= ?x3990 0))))
 (let (($x3776 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x5452 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x247 (* (- 1) ?x49)))
 (let ((?x246 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (and $x160 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x246 ?x247) 4) $x5452 $x3776 $x2443)))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x358 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x342 (+ 6 m)))
 (let ((?x347 (+ 1 n)))
 (let ((?x5866 (* 9 (* ?x347 ?x347 ?x347 ?x342 ?x342 ?x68 ?x68))))
 (let ((?x5857 (* 18 (* ?x347 ?x347 ?x342 ?x342 ?x68 ?x68))))
 (let ((?x4745 (* (- 9) (* ?x347 ?x347 ?x347 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5824 (* (- 9) (* ?x347 ?x347 ?x342 (+ k m) (+ k m) ?x68))))
 (let ((?x5790 (* 9 (* ?x347 ?x342 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5760 (* (- 1) (* ?x347 ?x347 ?x342 ?x342 (+ k m) (+ k m) ?x68))))
 (let ((?x5714 (* 5 (* ?x347 ?x347 ?x342 ?x342 (+ k m) ?x68))))
 (let ((?x69 (+ k m)))
 (let ((?x5399 (* ?x347 ?x342 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x4350 (* (- 5) (* ?x342 ?x342 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x5560 (* (- 18) (* ?x342 ?x342 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x5368 (* (- 18) (* ?x347 ?x347 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x3791 (* (- 9) (* ?x347 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x3783 (* ?x347 ?x347 ?x342 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x3779 (* ?x342 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x3101 (* (- 9) (* ?x347 ?x347 ?x347 ?x342 ?x342 ?x68))))
 (let ((?x3180 (* (- 5) (* ?x347 ?x347 ?x342 ?x69 ?x68 ?x68))))
 (let ((?x1880 (* 9 (* ?x347 ?x347 ?x347 ?x342 ?x68 ?x68))))
 (let ((?x5216 (+ (* 828 c) (* 1008 k) (* 24 m) (* (- 792) n) (* 66 (* k k)) (* 1188 (* k n)) (* 1008 (* c n)) (* (- 324) (* n n)) (* 13 (* k k m n n)) (* 8 (* c k m n n)) (* 4 (* c c m n n)) (* 24 (* c c n n)) (* 5 (* c m m n n)) (* 23 (* k m m n n)) (* 276 (* c m)) (* 420 (* k m)) (* (- 85) (* c m m)) (* (- 168) (* k m m)) (* 336 (* c m n)) (* 588 (* k m n)) (* (- 80) (* c m m n)) (* (- 145) (* k m m n)) (* 180 (* c n n)) (* 180 (* k n n)) (* 60 (* c m n n)) (* 168 (* k m n n)) (* 24 (* c c)) (* 432 (* c c k)) (* 324 (* c k k)) (* 6 (* k k k)) (* 4 (* c c m)) (* (- 208) (* c k m)) (* (- 301) (* k k m)) (* 144 (* c c k m)) (* 126 (* c k k m)) (* 25 (* k k k m)) (* (- 36) (* c k m m)) (* (- 52) (* k k m m)) (* (- 108) (* c k k n)) (* (- 138) (* k k k n)) (* 8 (* c c m n)) (* (- 200) (* c k m n)) (* (- 288) (* k k m n)) (* (- 18) (* c k k m n)) (* (- 23) (* k k k m n)) (* (- 36) (* c k m m n)) (* (- 52) (* k k m m n)) (* (- 35) (* k m m m n)) (* (- 6) (* m m m m n)) (* 89 (* m m)) (* (- 24) (* m m m)) (* (- 35) (* k m m m)) (* (- 6) (* m m m m)) (* 144 (* k k n)) (* 134 (* m m n)) (* (- 15) (* m m m n)) (* 48 (* c k)) (* (- 18) (* c m m m)) (* (- 18) (* c m m m n)) (* 96 (* c k n)) ?x1880 ?x3180 ?x3101 (* 144 (* c c c)) (* 48 (* c c c m)) ?x3779 ?x3783 ?x3791 (* 4 (* c c c m m)) (* 12 (* c c k m m)) (* 12 (* c k k m m)) (* 4 (* k k k m m)) ?x5368 (* 78 (* k k n n)) (* 48 (* c c n)) (* 9 (* m m m n n)) ?x5560 (* (- 108) (* m n n)) (* 45 (* m m n n)) (* (- 84) (* m n)) ?x4350 ?x5399 ?x5714 ?x5760 ?x5790 ?x5824 (* 48 (* c k n n)) ?x4745 ?x5857 ?x5866)))
 (let (($x334 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x296 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x247 (* (- 1) ?x49)))
 (let ((?x246 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x244 (= (+ ?x40 ?x44 ?x246 ?x247 (* 9 (* c n))) 4)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (let (($x2442 (and $x160 $x244 $x296 $x334 (not (= ?x5216 468)))))
 (let ((?x3990 (+ ?x3779 ?x3783 ?x3791 (* 4 (* ?x347 ?x347 ?x342 ?x68 ?x68)) ?x1880 (* 5 (* ?x347 ?x347 ?x342 ?x342 ?x68)) ?x3101 ?x3180 (* 18 (* ?x347 ?x342 ?x342 ?x68)) (* (- 1) (* ?x347 ?x342 ?x342 ?x69 ?x69)) ?x5824 ?x4745 ?x5560 ?x5714 ?x5368 ?x4350 (* (- 18) (* ?x347 ?x342 ?x69 ?x69 ?x68)) (* 9 (* ?x347 ?x347 ?x342 ?x69 ?x69)) (* (- 9) (* ?x347 ?x347 ?x342 ?x342)) ?x5399 (* 5 (* ?x347 ?x342 ?x342 ?x69)) (* (- 5) (* ?x347 ?x342 ?x69 ?x69 ?x69)) (* 4 (* ?x347 ?x342 ?x69 ?x69)) ?x5760 ?x5790 ?x5857 ?x5866 (* 4 (* ?x342 ?x342 ?x68 ?x68 ?x68)) (* (- 4) (* ?x347 ?x342 ?x342)))))
 (let (($x2443 (not (= ?x3990 0))))
 (let (($x3776 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x5452 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x5332 (and $x160 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x246 ?x247) 4) $x5452 $x3776 $x2443)))
 (rewrite (= $x5332 $x2442))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2445 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x342 (+ 6 m)))
 (let ((?x347 (+ 1 n)))
 (let ((?x5866 (* 9 (* ?x347 ?x347 ?x347 ?x342 ?x342 ?x68 ?x68))))
 (let ((?x5857 (* 18 (* ?x347 ?x347 ?x342 ?x342 ?x68 ?x68))))
 (let ((?x5790 (* 9 (* ?x347 ?x342 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5760 (* (- 1) (* ?x347 ?x347 ?x342 ?x342 (+ k m) (+ k m) ?x68))))
 (let ((?x69 (+ k m)))
 (let ((?x5399 (* ?x347 ?x342 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x4350 (* (- 5) (* ?x342 ?x342 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x5368 (* (- 18) (* ?x347 ?x347 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5714 (* 5 (* ?x347 ?x347 ?x342 ?x342 ?x69 ?x68))))
 (let ((?x5560 (* (- 18) (* ?x342 ?x342 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x4745 (* (- 9) (* ?x347 ?x347 ?x347 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5824 (* (- 9) (* ?x347 ?x347 ?x342 ?x69 ?x69 ?x68))))
 (let ((?x3180 (* (- 5) (* ?x347 ?x347 ?x342 ?x69 ?x68 ?x68))))
 (let ((?x3101 (* (- 9) (* ?x347 ?x347 ?x347 ?x342 ?x342 ?x68))))
 (let ((?x1880 (* 9 (* ?x347 ?x347 ?x347 ?x342 ?x68 ?x68))))
 (let ((?x3791 (* (- 9) (* ?x347 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x3783 (* ?x347 ?x347 ?x342 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x3779 (* ?x342 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x3990 (+ ?x3779 ?x3783 ?x3791 (* 4 (* ?x347 ?x347 ?x342 ?x68 ?x68)) ?x1880 (* 5 (* ?x347 ?x347 ?x342 ?x342 ?x68)) ?x3101 ?x3180 (* 18 (* ?x347 ?x342 ?x342 ?x68)) (* (- 1) (* ?x347 ?x342 ?x342 ?x69 ?x69)) ?x5824 ?x4745 ?x5560 ?x5714 ?x5368 ?x4350 (* (- 18) (* ?x347 ?x342 ?x69 ?x69 ?x68)) (* 9 (* ?x347 ?x347 ?x342 ?x69 ?x69)) (* (- 9) (* ?x347 ?x347 ?x342 ?x342)) ?x5399 (* 5 (* ?x347 ?x342 ?x342 ?x69)) (* (- 5) (* ?x347 ?x342 ?x69 ?x69 ?x69)) (* 4 (* ?x347 ?x342 ?x69 ?x69)) ?x5760 ?x5790 ?x5857 ?x5866 (* 4 (* ?x342 ?x342 ?x68 ?x68 ?x68)) (* (- 4) (* ?x347 ?x342 ?x342)))))
 (let (($x2443 (not (= ?x3990 0))))
 (let (($x3776 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1076 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x601 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (and $x160 (= ?x601 (- 4)) $x1076 $x3776 $x2443)))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x3445 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x342 (+ 6 m)))
 (let ((?x347 (+ 1 n)))
 (let ((?x5866 (* 9 (* ?x347 ?x347 ?x347 ?x342 ?x342 ?x68 ?x68))))
 (let ((?x5857 (* 18 (* ?x347 ?x347 ?x342 ?x342 ?x68 ?x68))))
 (let ((?x5790 (* 9 (* ?x347 ?x342 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5760 (* (- 1) (* ?x347 ?x347 ?x342 ?x342 (+ k m) (+ k m) ?x68))))
 (let ((?x69 (+ k m)))
 (let ((?x5399 (* ?x347 ?x342 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x4350 (* (- 5) (* ?x342 ?x342 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x5368 (* (- 18) (* ?x347 ?x347 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5714 (* 5 (* ?x347 ?x347 ?x342 ?x342 ?x69 ?x68))))
 (let ((?x5560 (* (- 18) (* ?x342 ?x342 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x4745 (* (- 9) (* ?x347 ?x347 ?x347 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5824 (* (- 9) (* ?x347 ?x347 ?x342 ?x69 ?x69 ?x68))))
 (let ((?x3180 (* (- 5) (* ?x347 ?x347 ?x342 ?x69 ?x68 ?x68))))
 (let ((?x3101 (* (- 9) (* ?x347 ?x347 ?x347 ?x342 ?x342 ?x68))))
 (let ((?x1880 (* 9 (* ?x347 ?x347 ?x347 ?x342 ?x68 ?x68))))
 (let ((?x3791 (* (- 9) (* ?x347 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x3783 (* ?x347 ?x347 ?x342 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x3779 (* ?x342 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x3990 (+ ?x3779 ?x3783 ?x3791 (* 4 (* ?x347 ?x347 ?x342 ?x68 ?x68)) ?x1880 (* 5 (* ?x347 ?x347 ?x342 ?x342 ?x68)) ?x3101 ?x3180 (* 18 (* ?x347 ?x342 ?x342 ?x68)) (* (- 1) (* ?x347 ?x342 ?x342 ?x69 ?x69)) ?x5824 ?x4745 ?x5560 ?x5714 ?x5368 ?x4350 (* (- 18) (* ?x347 ?x342 ?x69 ?x69 ?x68)) (* 9 (* ?x347 ?x347 ?x342 ?x69 ?x69)) (* (- 9) (* ?x347 ?x347 ?x342 ?x342)) ?x5399 (* 5 (* ?x347 ?x342 ?x342 ?x69)) (* (- 5) (* ?x347 ?x342 ?x69 ?x69 ?x69)) (* 4 (* ?x347 ?x342 ?x69 ?x69)) ?x5760 ?x5790 ?x5857 ?x5866 (* 4 (* ?x342 ?x342 ?x68 ?x68 ?x68)) (* (- 4) (* ?x347 ?x342 ?x342)))))
 (let (($x2443 (not (= ?x3990 0))))
 (let (($x3776 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x5452 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x247 (* (- 1) ?x49)))
 (let ((?x246 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (let (($x5332 (and $x160 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x246 ?x247) 4) $x5452 $x3776 $x2443)))
 (let (($x1076 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x601 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1375 (and $x160 (= ?x601 (- 4)) $x1076 $x3776 $x2443)))
 (rewrite (= $x1375 $x5332)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x127 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ m 6)))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ n 1)))
 (let ((?x69 (+ k m)))
 (let ((?x74 (+ (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70) (* ?x68 ?x68 ?x69 ?x69 ?x70 ?x72 ?x72))))
 (let ((?x80 (+ (- ?x74 (* 9 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x72)) (* 4 ?x68 ?x68 ?x70 ?x72 ?x72) (* 9 ?x68 ?x68 ?x70 ?x72 ?x72 ?x72) (* 5 ?x68 ?x70 ?x70 ?x72 ?x72))))
 (let ((?x84 (- (- ?x80 (* 9 ?x68 ?x70 ?x70 ?x72 ?x72 ?x72)) (* 5 ?x68 ?x68 ?x69 ?x70 ?x72 ?x72))))
 (let ((?x91 (- (+ ?x84 (* 18 ?x68 ?x70 ?x70 ?x72)) (* ?x69 ?x69 ?x70 ?x70 ?x72))))
 (let ((?x93 (- (- ?x91 (* 9 ?x68 ?x69 ?x69 ?x70 ?x72 ?x72)) (* 9 ?x68 ?x68 ?x68 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x96 (+ (- ?x93 (* 18 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70)) (* 5 ?x68 ?x69 ?x70 ?x70 ?x72 ?x72))))
 (let ((?x101 (- (- ?x96 (* 18 ?x68 ?x68 ?x68 ?x70 ?x72 ?x72)) (* 5 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70))))
 (let ((?x104 (+ (- ?x101 (* 18 ?x68 ?x69 ?x69 ?x70 ?x72)) (* 9 ?x69 ?x69 ?x70 ?x72 ?x72))))
 (let ((?x109 (+ (- ?x104 (* 9 ?x70 ?x70 ?x72 ?x72)) (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x72) (* 5 ?x69 ?x70 ?x70 ?x72))))
 (let ((?x113 (+ (- ?x109 (* 5 ?x69 ?x69 ?x69 ?x70 ?x72)) (* 4 ?x69 ?x69 ?x70 ?x72))))
 (let ((?x120 (+ (- ?x113 (* ?x68 ?x69 ?x69 ?x70 ?x70 ?x72 ?x72)) (* 9 ?x68 ?x68 ?x68 ?x70 ?x70 ?x72) (* 18 ?x68 ?x68 ?x70 ?x70 ?x72 ?x72) (* 9 ?x68 ?x68 ?x70 ?x70 ?x72 ?x72 ?x72) (* 4 ?x68 ?x68 ?x68 ?x70 ?x70))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x120 (* 4 ?x70 ?x70 ?x72)) 0)))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x3782 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x342 (+ 6 m)))
 (let ((?x347 (+ 1 n)))
 (let ((?x5866 (* 9 (* ?x347 ?x347 ?x347 ?x342 ?x342 ?x68 ?x68))))
 (let ((?x5857 (* 18 (* ?x347 ?x347 ?x342 ?x342 ?x68 ?x68))))
 (let ((?x5790 (* 9 (* ?x347 ?x342 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5760 (* (- 1) (* ?x347 ?x347 ?x342 ?x342 (+ k m) (+ k m) ?x68))))
 (let ((?x69 (+ k m)))
 (let ((?x5399 (* ?x347 ?x342 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x4350 (* (- 5) (* ?x342 ?x342 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x5368 (* (- 18) (* ?x347 ?x347 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5714 (* 5 (* ?x347 ?x347 ?x342 ?x342 ?x69 ?x68))))
 (let ((?x5560 (* (- 18) (* ?x342 ?x342 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x4745 (* (- 9) (* ?x347 ?x347 ?x347 ?x342 ?x68 ?x68 ?x68))))
 (let ((?x5824 (* (- 9) (* ?x347 ?x347 ?x342 ?x69 ?x69 ?x68))))
 (let ((?x3180 (* (- 5) (* ?x347 ?x347 ?x342 ?x69 ?x68 ?x68))))
 (let ((?x3101 (* (- 9) (* ?x347 ?x347 ?x347 ?x342 ?x342 ?x68))))
 (let ((?x1880 (* 9 (* ?x347 ?x347 ?x347 ?x342 ?x68 ?x68))))
 (let ((?x3791 (* (- 9) (* ?x347 ?x342 ?x342 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x3783 (* ?x347 ?x347 ?x342 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x3779 (* ?x342 ?x342 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x3990 (+ ?x3779 ?x3783 ?x3791 (* 4 (* ?x347 ?x347 ?x342 ?x68 ?x68)) ?x1880 (* 5 (* ?x347 ?x347 ?x342 ?x342 ?x68)) ?x3101 ?x3180 (* 18 (* ?x347 ?x342 ?x342 ?x68)) (* (- 1) (* ?x347 ?x342 ?x342 ?x69 ?x69)) ?x5824 ?x4745 ?x5560 ?x5714 ?x5368 ?x4350 (* (- 18) (* ?x347 ?x342 ?x69 ?x69 ?x68)) (* 9 (* ?x347 ?x347 ?x342 ?x69 ?x69)) (* (- 9) (* ?x347 ?x347 ?x342 ?x342)) ?x5399 (* 5 (* ?x347 ?x342 ?x342 ?x69)) (* (- 5) (* ?x347 ?x342 ?x69 ?x69 ?x69)) (* 4 (* ?x347 ?x342 ?x69 ?x69)) ?x5760 ?x5790 ?x5857 ?x5866 (* 4 (* ?x342 ?x342 ?x68 ?x68 ?x68)) (* (- 4) (* ?x347 ?x342 ?x342)))))
 (let (($x2443 (not (= ?x3990 0))))
 (let (($x3776 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1076 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x601 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x160 (= (+ m (* (- 6) n)) 6)))
 (let (($x1375 (and $x160 (= ?x601 (- 4)) $x1076 $x3776 $x2443)))
 (let ((?x72 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x74 (+ (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70) (* ?x68 ?x68 ?x69 ?x69 ?x70 ?x72 ?x72))))
 (let ((?x80 (+ (- ?x74 (* 9 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70 ?x72)) (* 4 ?x68 ?x68 ?x70 ?x72 ?x72) (* 9 ?x68 ?x68 ?x70 ?x72 ?x72 ?x72) (* 5 ?x68 ?x70 ?x70 ?x72 ?x72))))
 (let ((?x84 (- (- ?x80 (* 9 ?x68 ?x70 ?x70 ?x72 ?x72 ?x72)) (* 5 ?x68 ?x68 ?x69 ?x70 ?x72 ?x72))))
 (let ((?x91 (- (+ ?x84 (* 18 ?x68 ?x70 ?x70 ?x72)) (* ?x69 ?x69 ?x70 ?x70 ?x72))))
 (let ((?x93 (- (- ?x91 (* 9 ?x68 ?x69 ?x69 ?x70 ?x72 ?x72)) (* 9 ?x68 ?x68 ?x68 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x96 (+ (- ?x93 (* 18 ?x68 ?x68 ?x68 ?x68 ?x70 ?x70)) (* 5 ?x68 ?x69 ?x70 ?x70 ?x72 ?x72))))
 (let ((?x101 (- (- ?x96 (* 18 ?x68 ?x68 ?x68 ?x70 ?x72 ?x72)) (* 5 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70))))
 (let ((?x104 (+ (- ?x101 (* 18 ?x68 ?x69 ?x69 ?x70 ?x72)) (* 9 ?x69 ?x69 ?x70 ?x72 ?x72))))
 (let ((?x109 (+ (- ?x104 (* 9 ?x70 ?x70 ?x72 ?x72)) (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x72) (* 5 ?x69 ?x70 ?x70 ?x72))))
 (let ((?x113 (+ (- ?x109 (* 5 ?x69 ?x69 ?x69 ?x70 ?x72)) (* 4 ?x69 ?x69 ?x70 ?x72))))
 (let ((?x120 (+ (- ?x113 (* ?x68 ?x69 ?x69 ?x70 ?x70 ?x72 ?x72)) (* 9 ?x68 ?x68 ?x68 ?x70 ?x70 ?x72) (* 18 ?x68 ?x68 ?x70 ?x70 ?x72 ?x72) (* 9 ?x68 ?x68 ?x70 ?x70 ?x72 ?x72 ?x72) (* 4 ?x68 ?x68 ?x68 ?x70 ?x70))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x126 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x120 (* 4 ?x70 ?x70 ?x72)) 0))))))
 (rewrite (= $x126 $x1375))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x128 (asserted $x127)))
 (let ((@x645 (mp (mp @x128 (quant-intro (proof-bind ?x3782) (= $x127 $x2445)) $x2445) (rewrite (= $x2445 $x2445)) $x2445)))
 (let ((@x4928 (mp (mp @x645 (quant-intro (proof-bind ?x3445) (= $x2445 $x4331)) $x4331) (quant-intro (proof-bind ?x358) (= $x4331 $x1892)) $x1892)))
 (let ((@x3093 (mp (mp~ @x4928 (sk (~ $x1892 $x5147)) $x5147) (rewrite (= $x5147 $x1067)) $x1067)))
 (let ((@x5072 (and-elim @x3093 $x2641)))
 (let ((@x2605 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2641) $x582)) @x5072 $x582)))
 (let (($x5811 (>= ?x2720 1)))
 (let ((@x2090 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2641) $x5811)) @x5072 $x5811)))
 (let (($x4360 (<= ?x5110 4)))
 (let ((@x2344 (and-elim @x3093 $x5113)))
 (let ((@x5495 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5113) $x4360)) @x2344 $x4360)))
 (let (($x5745 (>= ?x5110 4)))
 (let ((@x2986 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5113) $x5745)) @x2344 $x5745)))
 (let (($x1605 (<= ?x2341 (- 6))))
 (let ((@x3134 (and-elim @x3093 $x2660)))
 (let ((@x2590 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2660) $x1605)) @x3134 $x1605)))
 (let (($x5070 (>= ?x2341 (- 6))))
 (let ((@x2059 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2660) $x5070)) @x3134 $x5070)))
 (let (($x2455 (<= ?x5018 (- 1))))
 (let ((@x1351 (and-elim @x3093 $x5116)))
 (let ((@x2342 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5116) $x2455)) @x1351 $x2455)))
 (let (($x5377 (>= ?x5018 (- 1))))
 (let ((@x149 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5116) $x5377)) @x1351 $x5377)))
 (let (($x4634 (not (>= ?x5527 468))))
 (let (($x2058 (<= ?x5527 468)))
 (let ((@x1627 ((_ th-lemma arith) (hypothesis (not $x2058)) @x2090 @x2605 @x2059 @x2590 @x149 @x2342 @x2090 @x2605 @x2986 @x5495 @x2090 @x2605 @x2090 @x2605 @x2059 @x2590 @x2090 @x2605 @x2059 @x2590 @x149 @x2342 @x2059 @x2590 @x2986 @x5495 @x2090 @x2605 false)))
 (let ((@x3054 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4893 (not $x2058) $x4634)) (and-elim @x3093 $x5806) (or (not $x2058) $x4634))))
 ((_ th-lemma arith) (unit-resolution @x3054 (lemma @x1627 $x2058) $x4634) @x2090 @x2605 @x2059 @x2590 @x2090 @x2605 @x149 @x2342 @x2986 @x5495 @x149 @x2342 @x2090 @x2605 @x2090 @x2605 @x149 @x2342 @x2059 @x2590 @x2059 @x2590 @x2090 @x2605 @x149 @x2342 @x2059 @x2590 @x2986 @x5495 @x2090 @x2605 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        33
 :arith-assert-upper        111
 :arith-branch-var          3
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           11
 :arith-grobner             2
 :arith-ineq-splits         3
 :arith-max-min             1010
 :arith-nonlinear-bounds    43
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             6
 :arith-pivots              10
 :arith-row-summations      20
 :arith-tableau-max-columns 158
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 93
 :del-clause                16
 :final-checks              12
 :max-memory                4.70
 :memory                    3.89
 :mk-bool-var               113
 :mk-clause                 16
 :num-allocs                2344530
 :num-checks                1
 :propagations              12
 :rlimit-count              27280
 :time                      0.02
 :total-time                0.03)
