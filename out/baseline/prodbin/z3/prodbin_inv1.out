unsat
((set-logic NRA)
(proof
(let (($x137 (exists ((x Real) (y Real) (z Real) )(! (let ((?x78 (* (- 1.0) z00)))
 (let ((?x59 (* (- 1.0) (* x00 y00))))
 (let ((?x135 (+ ?x59 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x78)))
 (let (($x133 (not (= ?x135 0.0))))
 (let (($x109 (= (+ ?x59 (* y x) z ?x78) 0.0)))
 (let (($x131 (not $x109)))
 (let (($x106 (or $x131 $x133)))
 (and $x109 $x106)))))))) :qid k!27))
 ))
 (let (($x79 (exists ((x Real) (y Real) (z Real) )(! false :qid k!27))
 ))
 (let ((?x130 (lambda ((x Real) (y Real) (z Real) )(let ((?x78 (* (- 1.0) z00)))
 (let ((?x59 (* (- 1.0) (* x00 y00))))
 (let ((?x135 (+ ?x59 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x78)))
 (let (($x133 (not (= ?x135 0.0))))
 (let (($x109 (= (+ ?x59 (* y x) z ?x78) 0.0)))
 (let (($x131 (not $x109)))
 (let (($x106 (or $x131 $x133)))
 (let (($x81 (and $x109 $x106)))
 (let (($x89 (= (+ z ?x78 ?x59 (* y x)) 0.0)))
 (let (($x146 (not $x89)))
 (let (($x73 (and $x89 $x146)))
 (let ((@x99 (monotonicity (rewrite (= $x131 $x146)) (rewrite (= $x133 $x146)) (= $x106 (or $x146 $x146)))))
 (let ((@x85 (monotonicity (rewrite (= $x109 $x89)) (trans @x99 (rewrite (= (or $x146 $x146) $x146)) (= $x106 $x146)) (= $x81 $x73))))
 (trans @x85 (rewrite (= $x73 false)) (= $x81 false))))))))))))))))
 ))
 (let ((@x74 (trans (quant-intro (proof-bind ?x130) (= $x137 $x79)) (elim-unused (= $x79 false)) (= $x137 false))))
 (let (($x50 (exists ((x Real) (y Real) (z Real) )(! (let ((?x45 (- (+ (* (- 1.0) x00 y00) (* 2.0 x (/ y 2.0)) z) z00)))
 (let ((?x27 (* (- 1.0) x00 y00)))
 (let ((?x39 (- (+ ?x27 (* 2.0 x (/ (- y 1.0) 2.0)) z x) z00)))
 (and (= (- (+ ?x27 (* x y) z) z00) 0.0) (or (not (= ?x39 0.0)) (not (= ?x45 0.0))))))) :qid k!27))
 ))
 (let ((?x127 (lambda ((x Real) (y Real) (z Real) )(let ((?x78 (* (- 1.0) z00)))
 (let ((?x59 (* (- 1.0) (* x00 y00))))
 (let ((?x135 (+ ?x59 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x78)))
 (let (($x133 (not (= ?x135 0.0))))
 (let (($x109 (= (+ ?x59 (* y x) z ?x78) 0.0)))
 (let (($x131 (not $x109)))
 (let (($x106 (or $x131 $x133)))
 (let (($x81 (and $x109 $x106)))
 (let ((?x45 (- (+ (* (- 1.0) x00 y00) (* 2.0 x (/ y 2.0)) z) z00)))
 (let ((?x27 (* (- 1.0) x00 y00)))
 (let ((?x39 (- (+ ?x27 (* 2.0 x (/ (- y 1.0) 2.0)) z x) z00)))
 (let (($x49 (and (= (- (+ ?x27 (* x y) z) z00) 0.0) (or (not (= ?x39 0.0)) (not (= ?x45 0.0))))))
 (rewrite (= $x49 $x81)))))))))))))))
 ))
 (let ((@x51 (asserted $x50)))
 (mp (mp @x51 (quant-intro (proof-bind ?x127) (= $x50 $x137)) $x137) @x74 false))))))))))

(:max-memory   1.19
 :memory       0.92
 :mk-bool-var  2
 :num-allocs   39271
 :num-checks   1
 :rlimit-count 291
 :time         0.00
 :total-time   0.00)
