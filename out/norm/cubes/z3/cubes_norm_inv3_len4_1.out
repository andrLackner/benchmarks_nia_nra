unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x908 (* (- 2) n!0)))
 (let ((?x1583 (* 3 c!3)))
 (let ((?x905 (* k!2 n!0)))
 (let ((?x910 (* (- 1) ?x905)))
 (let ((?x724 (+ k!2 ?x910 ?x1583 ?x908)))
 (let (($x1114 (<= ?x724 1)))
 (let (($x132 (= ?x724 1)))
 (let ((?x1928 (+ k!2 c!3)))
 (let ((?x1804 (+ k!2 m!1)))
 (let ((?x1341 (+ 6 m!1)))
 (let ((?x1802 (+ 1 n!0)))
 (let ((?x1236 (* k!2 n!0 n!0 n!0 n!0)))
 (let ((?x1124 (* m!1 n!0)))
 (let ((?x1070 (* m!1 n!0 n!0 n!0 n!0)))
 (let ((?x1563 (+ (* 3 (* k!2 m!1)) (* (- 2) (* k!2 m!1 n!0 n!0 n!0)) (* 14 (* k!2 k!2 c!3 n!0)) (* 9 (* n!0 n!0 n!0)) (* 6 (* k!2 k!2 m!1 n!0 n!0)) (* 18 (* k!2 c!3 m!1 n!0)) (* (- 3) k!2) (* (- 8) ?x905) (* 2 (* n!0 n!0 n!0 n!0)) (* (- 1) (* k!2 k!2 n!0 n!0)) (* 4 (* k!2 m!1 n!0)) (* 4 (* k!2 k!2 n!0)) (* 4 (* k!2 k!2 k!2)) ?x1070 (* 9 (* k!2 c!3 m!1)) (* (- 2) (* k!2 c!3 n!0 n!0 n!0)) (* 2 (* ?x1802 ?x1802 ?x1802 ?x1341 ?x1804 ?x1928)) (* (- 1) (* ?x1802 ?x1802 ?x1802 ?x1804 ?x1804 ?x1928)) ?x1124 (* 3 (* k!2 c!3 c!3)) (* 2 (* ?x1802 ?x1802 ?x1341 ?x1341 ?x1341 ?x1804 ?x1804 ?x1928 ?x1928 ?x1928)) (* ?x1802 ?x1802 ?x1802 ?x1341 ?x1804 ?x1804 ?x1928) (* 3 (* k!2 k!2)) (* 9 (* k!2 c!3 m!1 n!0 n!0)) (* (- 1) (* ?x1802 ?x1341 ?x1341 ?x1341 ?x1804 ?x1804 ?x1804 ?x1928 ?x1928 ?x1928)) ?x1236 (* (- 1) (* c!3 m!1 n!0 n!0)) (* 3 (* m!1 n!0 n!0 n!0)) (* 4 (* k!2 m!1 m!1 n!0)) (* 15 (* n!0 n!0)) (* 3 (* c!3 c!3 m!1 n!0 n!0)) (* 3 (* m!1 n!0 n!0)) (* ?x1802 ?x1802 ?x1341 ?x1341 ?x1341 ?x1804 ?x1804 ?x1804 ?x1928 ?x1928 ?x1928) (* (- 2) (* c!3 m!1 n!0 n!0 n!0)) (* 3 (* k!2 c!3)) (* 4 (* k!2 c!3 n!0)) (* 7 (* k!2 k!2 c!3)) (* 6 (* k!2 k!2 m!1)) (* 6 (* c!3 c!3 m!1 n!0)) (* (- 1) (* k!2 c!3 n!0 n!0)) (* 3 (* c!3 c!3 m!1)) (* (- 9) (* c!3 n!0 n!0)) (* 3 (* k!2 c!3 c!3 n!0 n!0)) (* (- 9) (* c!3 n!0)) (* 4 (* c!3 m!1 n!0)) (* 3 (* c!3 m!1)) (* (- 3) (* c!3 n!0 n!0 n!0)) (* (- 3) (* ?x1802 ?x1802 ?x1341 ?x1804 ?x1928 ?x1928)) (* 6 (* k!2 c!3 c!3 n!0)) (* (- 1) (* ?x1802 ?x1802 ?x1341 ?x1804 ?x1804 ?x1928)) (* 7 (* k!2 k!2 c!3 n!0 n!0)) (* (- 3) (* ?x1802 ?x1341 ?x1341 ?x1341 ?x1804 ?x1804 ?x1928 ?x1928 ?x1928 ?x1928)) (* (- 2) (* k!2 k!2 n!0 n!0 n!0)) (* (- 1) (* k!2 m!1 n!0 n!0)) (* 4 (* k!2 k!2 k!2 n!0 n!0)) (* (- 3) c!3) (* (- 6) (* k!2 n!0 n!0)) (* 2 (* c!3 m!1 m!1 n!0 n!0)) (* ?x1802 ?x1341 ?x1341 ?x1341 ?x1804 ?x1804 ?x1928 ?x1928 ?x1928) (* 4 (* c!3 m!1 m!1 n!0)) (* 2 (* c!3 m!1 m!1)) (* 2 (* k!2 m!1 m!1)) (* 2 (* k!2 m!1 m!1 n!0 n!0)) (* 12 (* k!2 k!2 m!1 n!0)) (* 8 (* k!2 k!2 k!2 n!0)) (* 11 n!0))))
 (let (($x1541 (= ?x1563 (- 3))))
 (let (($x1535 (not $x1541)))
 (let ((?x1122 (* (- 3) n!0)))
 (let ((?x1315 (* n!0 n!0)))
 (let ((?x434 (* (- 3) ?x1315)))
 (let ((?x1653 (+ k!2 ?x434 ?x1122)))
 (let (($x1826 (= ?x1653 1)))
 (let ((?x891 (* (- 9) n!0)))
 (let ((?x885 (* 18 c!3)))
 (let ((?x1576 (* c!3 n!0)))
 (let ((?x1575 (* 9 ?x1576)))
 (let ((?x1212 (* k!2 k!2)))
 (let ((?x907 (* (- 1) ?x1212)))
 (let ((?x896 (* 5 k!2)))
 (let ((?x727 (+ ?x896 ?x907 ?x1575 ?x885 ?x891)))
 (let (($x725 (= ?x727 4)))
 (let ((?x1555 (+ m!1 (* (- 6) n!0))))
 (let (($x1891 (= ?x1555 6)))
 (let (($x957 (and $x1891 $x725 $x132 $x1826 $x1535)))
 (let ((?x983 (* k!2 k!2 n!0 n!0)))
 (let ((?x1266 (* c!3 m!1 n!0 n!0)))
 (let ((?x1760 (* k!2 m!1 n!0 n!0)))
 (let ((?x1286 (+ c!3 k!2)))
 (let ((?x1515 (* (- 1) (* ?x1802 ?x1802 ?x1341 ?x1341 ?x1341 ?x1804 ?x1804 ?x1804 ?x1286 ?x1286 ?x1286))))
 (let ((?x1026 (+ ?x1583 (* 3 k!2) (* (- 11) n!0) (* (- 3) ?x1212) (* 8 ?x905) ?x1575 (* (- 15) ?x1315) (* ?x1802 ?x1802 ?x1341 ?x1804 ?x1804 ?x1286) (* (- 9) (* n!0 n!0 n!0)) (* (- 7) (* c!3 k!2 k!2 n!0 n!0)) (* (- 4) (* k!2 k!2 k!2 n!0 n!0)) (* (- 9) (* c!3 k!2 m!1 n!0 n!0)) (* (- 6) (* k!2 k!2 m!1 n!0 n!0)) (* (- 2) (* c!3 m!1 m!1 n!0 n!0)) (* (- 2) (* k!2 m!1 m!1 n!0 n!0)) (* (- 7) (* c!3 k!2 k!2)) (* (- 4) (* k!2 k!2 k!2)) (* (- 9) (* c!3 k!2 m!1)) (* (- 6) (* k!2 k!2 m!1)) (* (- 2) (* c!3 m!1 m!1)) (* (- 2) (* k!2 m!1 m!1)) (* (- 14) (* c!3 k!2 k!2 n!0)) (* (- 8) (* k!2 k!2 k!2 n!0)) (* (- 18) (* c!3 k!2 m!1 n!0)) (* (- 12) (* k!2 k!2 m!1 n!0)) (* (- 4) (* c!3 m!1 m!1 n!0)) (* (- 4) (* k!2 m!1 m!1 n!0)) (* (- 2) (* n!0 n!0 n!0 n!0)) (* (- 1) ?x1236) (* (- 1) ?x1070) (* (- 3) (* m!1 n!0 n!0)) (* 6 (* k!2 n!0 n!0)) (* (- 1) ?x1124) (* (- 3) (* m!1 n!0 n!0 n!0)) (* 3 (* ?x1802 ?x1802 ?x1341 ?x1804 ?x1286 ?x1286)) (* (- 3) (* c!3 c!3 k!2 n!0 n!0)) (* (- 3) (* c!3 c!3 m!1 n!0 n!0)) (* (- 2) (* ?x1802 ?x1802 ?x1802 ?x1341 ?x1804 ?x1286)) (* 3 (* c!3 n!0 n!0 n!0)) ?x1515 (* ?x1802 ?x1341 ?x1341 ?x1341 ?x1804 ?x1804 ?x1804 ?x1286 ?x1286 ?x1286) (* 9 (* c!3 n!0 n!0)) (* (- 2) (* ?x1802 ?x1802 ?x1341 ?x1341 ?x1341 ?x1804 ?x1804 ?x1286 ?x1286 ?x1286)) (* (- 1) (* ?x1802 ?x1802 ?x1802 ?x1341 ?x1804 ?x1804 ?x1286)) (* (- 3) (* c!3 c!3 k!2)) (* (- 3) (* c!3 c!3 m!1)) (* 3 (* ?x1802 ?x1341 ?x1341 ?x1341 ?x1804 ?x1804 ?x1286 ?x1286 ?x1286 ?x1286)) (* (- 6) (* c!3 c!3 k!2 n!0)) (* (- 6) (* c!3 c!3 m!1 n!0)) (* (- 1) (* ?x1802 ?x1341 ?x1341 ?x1341 ?x1804 ?x1804 ?x1286 ?x1286 ?x1286)) ?x1760 ?x1266 ?x983 (* c!3 k!2 n!0 n!0) (* (- 4) (* k!2 m!1 n!0)) (* (- 4) (* c!3 m!1 n!0)) (* (- 4) (* k!2 k!2 n!0)) (* (- 4) (* c!3 k!2 n!0)) (* (- 3) (* k!2 m!1)) (* (- 3) (* c!3 m!1)) (* (- 3) (* c!3 k!2)) (* ?x1802 ?x1802 ?x1802 ?x1804 ?x1804 ?x1286) (* 2 (* c!3 k!2 n!0 n!0 n!0)) (* 2 (* k!2 k!2 n!0 n!0 n!0)) (* 2 (* c!3 m!1 n!0 n!0 n!0)) (* 2 (* k!2 m!1 n!0 n!0 n!0)))))
 (let (($x1806 (and $x1891 (= (+ ?x885 ?x896 ?x891 ?x907 ?x1575) 4) (= (+ ?x1583 k!2 ?x908 ?x910) 1) (= (+ k!2 ?x1122 ?x434) 1) (not (= ?x1026 3)))))
 (let (($x1271 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1983 (* 2 (* k m n n n))))
 (let ((?x1981 (* 2 (* c m n n n))))
 (let ((?x1979 (* 2 (* k k n n n))))
 (let ((?x1977 (* 2 (* c k n n n))))
 (let ((?x70 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x1820 (* ?x326 ?x326 ?x326 ?x71 ?x71 ?x70)))
 (let ((?x1677 (* c k)))
 (let ((?x2369 (* (- 3) ?x1677)))
 (let ((?x1672 (* c m)))
 (let ((?x2368 (* (- 3) ?x1672)))
 (let ((?x1668 (* k m)))
 (let ((?x2367 (* (- 3) ?x1668)))
 (let ((?x2366 (* (- 4) (* c k n))))
 (let ((?x2365 (* (- 4) (* k k n))))
 (let ((?x2364 (* (- 4) (* c m n))))
 (let ((?x2363 (* (- 4) (* k m n))))
 (let ((?x1640 (* c k n n)))
 (let ((?x1636 (* k k n n)))
 (let ((?x1632 (* c m n n)))
 (let ((?x1628 (* k m n n)))
 (let ((?x596 (+ 6 m)))
 (let ((?x1472 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x2020 (* (- 1) ?x1472)))
 (let ((?x1368 (* c c m n)))
 (let ((?x2019 (* (- 6) ?x1368)))
 (let ((?x1350 (* c c k n)))
 (let ((?x2017 (* (- 6) ?x1350)))
 (let ((?x1321 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x2016 (* 3 ?x1321)))
 (let ((?x1292 (* c c m)))
 (let ((?x2015 (* (- 3) ?x1292)))
 (let ((?x1274 (* c c k)))
 (let ((?x2014 (* (- 3) ?x1274)))
 (let ((?x1042 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)))
 (let ((?x2011 (* (- 1) ?x1042)))
 (let ((?x1032 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x2010 (* (- 2) ?x1032)))
 (let ((?x2341 (* 9 (* c n n))))
 (let ((?x1007 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x991 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x2009 (* (- 1) ?x991)))
 (let ((?x959 (* 3 (* c n n n))))
 (let ((?x924 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x70)))
 (let ((?x2008 (* (- 2) ?x924)))
 (let ((?x904 (* c c m n n)))
 (let ((?x2007 (* (- 3) ?x904)))
 (let ((?x898 (* c c k n n)))
 (let ((?x2006 (* (- 3) ?x898)))
 (let ((?x803 (* ?x326 ?x326 ?x596 ?x71 ?x70 ?x70)))
 (let ((?x2005 (* 3 ?x803)))
 (let ((?x2323 (* (- 3) (* m n n n))))
 (let ((?x2322 (* (- 1) (* m n))))
 (let ((?x848 (* 6 (* k n n))))
 (let ((?x699 (* (- 3) (* m n n))))
 (let ((?x2320 (* (- 1) (* m n n n n))))
 (let ((?x2319 (* (- 1) (* k n n n n))))
 (let ((?x2311 (* (- 2) (* n n n n))))
 (let ((?x2310 (* (- 4) (* k m m n))))
 (let ((?x2309 (* (- 4) (* c m m n))))
 (let ((?x455 (* k k m n)))
 (let ((?x2004 (* (- 12) ?x455)))
 (let ((?x447 (* c k m n)))
 (let ((?x1997 (* (- 18) ?x447)))
 (let ((?x441 (* k k k n)))
 (let ((?x483 (* (- 8) ?x441)))
 (let ((?x438 (* c k k n)))
 (let ((?x482 (* (- 14) ?x438)))
 (let ((?x2300 (* (- 2) (* k m m))))
 (let ((?x2299 (* (- 2) (* c m m))))
 (let ((?x423 (* k k m)))
 (let ((?x597 (* (- 6) ?x423)))
 (let ((?x415 (* c k m)))
 (let ((?x716 (* (- 9) ?x415)))
 (let ((?x409 (* k k k)))
 (let ((?x717 (* (- 4) ?x409)))
 (let ((?x406 (* c k k)))
 (let ((?x714 (* (- 7) ?x406)))
 (let ((?x2290 (* (- 2) (* k m m n n))))
 (let ((?x2289 (* (- 2) (* c m m n n))))
 (let ((?x398 (* k k m n n)))
 (let ((?x715 (* (- 6) ?x398)))
 (let ((?x397 (* c k m n n)))
 (let ((?x712 (* (- 9) ?x397)))
 (let ((?x394 (* k k k n n)))
 (let ((?x713 (* (- 4) ?x394)))
 (let ((?x393 (* c k k n n)))
 (let ((?x710 (* (- 7) ?x393)))
 (let ((?x338 (* n n n)))
 (let ((?x818 (* (- 9) ?x338)))
 (let ((?x303 (* ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)))
 (let ((?x289 (* n n)))
 (let ((?x591 (* (- 15) ?x289)))
 (let ((?x168 (* 9 (* c n))))
 (let ((?x55 (* k n)))
 (let ((?x2262 (* 8 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x2260 (* (- 3) ?x49)))
 (let ((?x813 (* (- 11) n)))
 (let ((?x2258 (* 3 k)))
 (let ((?x53 (* 3 c)))
 (let ((?x1740 (+ ?x53 ?x2258 ?x813 ?x2260 ?x2262 ?x168 ?x591 ?x303 ?x818 ?x710 ?x713 ?x712 ?x715 ?x2289 ?x2290 ?x714 ?x717 ?x716 ?x597 ?x2299 ?x2300 ?x482 ?x483 ?x1997 ?x2004 ?x2309 ?x2310 ?x2311 ?x2319 ?x2320 ?x699 ?x848 ?x2322 ?x2323 ?x2005 ?x2006 ?x2007 ?x2008 ?x959 ?x2009 ?x1007 ?x2341 ?x2010 ?x2011 ?x2014 ?x2015 ?x2016 ?x2017 ?x2019 ?x2020 ?x1628 ?x1632 ?x1636 ?x1640 ?x2363 ?x2364 ?x2365 ?x2366 ?x2367 ?x2368 ?x2369 ?x1820 ?x1977 ?x1979 ?x1981 ?x1983)))
 (let (($x318 (= (+ k (* (- 3) n) (* (- 3) ?x289)) 1)))
 (let (($x280 (= (+ ?x53 k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x231 (* (- 1) ?x49)))
 (let ((?x230 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x228 (= (+ ?x40 ?x44 ?x230 ?x231 ?x168) 4)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (and $x144 $x228 $x280 $x318 (not (= ?x1740 3)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x2240 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1983 (* 2 (* k m n n n))))
 (let ((?x1981 (* 2 (* c m n n n))))
 (let ((?x1979 (* 2 (* k k n n n))))
 (let ((?x1977 (* 2 (* c k n n n))))
 (let ((?x70 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x1820 (* ?x326 ?x326 ?x326 ?x71 ?x71 ?x70)))
 (let ((?x2366 (* (- 4) (* c k n))))
 (let ((?x2365 (* (- 4) (* k k n))))
 (let ((?x2364 (* (- 4) (* c m n))))
 (let ((?x2363 (* (- 4) (* k m n))))
 (let ((?x1640 (* c k n n)))
 (let ((?x1636 (* k k n n)))
 (let ((?x1632 (* c m n n)))
 (let ((?x1628 (* k m n n)))
 (let ((?x596 (+ 6 m)))
 (let ((?x1472 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x2020 (* (- 1) ?x1472)))
 (let ((?x1368 (* c c m n)))
 (let ((?x2019 (* (- 6) ?x1368)))
 (let ((?x1350 (* c c k n)))
 (let ((?x2017 (* (- 6) ?x1350)))
 (let ((?x1321 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x2016 (* 3 ?x1321)))
 (let ((?x1292 (* c c m)))
 (let ((?x2015 (* (- 3) ?x1292)))
 (let ((?x1274 (* c c k)))
 (let ((?x2014 (* (- 3) ?x1274)))
 (let ((?x1042 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)))
 (let ((?x2011 (* (- 1) ?x1042)))
 (let ((?x1032 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x2010 (* (- 2) ?x1032)))
 (let ((?x2341 (* 9 (* c n n))))
 (let ((?x1007 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x991 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x2009 (* (- 1) ?x991)))
 (let ((?x959 (* 3 (* c n n n))))
 (let ((?x924 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x70)))
 (let ((?x2008 (* (- 2) ?x924)))
 (let ((?x904 (* c c m n n)))
 (let ((?x2007 (* (- 3) ?x904)))
 (let ((?x898 (* c c k n n)))
 (let ((?x2006 (* (- 3) ?x898)))
 (let ((?x803 (* ?x326 ?x326 ?x596 ?x71 ?x70 ?x70)))
 (let ((?x2005 (* 3 ?x803)))
 (let ((?x2323 (* (- 3) (* m n n n))))
 (let ((?x2322 (* (- 1) (* m n))))
 (let ((?x848 (* 6 (* k n n))))
 (let ((?x699 (* (- 3) (* m n n))))
 (let ((?x2320 (* (- 1) (* m n n n n))))
 (let ((?x2319 (* (- 1) (* k n n n n))))
 (let ((?x2311 (* (- 2) (* n n n n))))
 (let ((?x2310 (* (- 4) (* k m m n))))
 (let ((?x2309 (* (- 4) (* c m m n))))
 (let ((?x455 (* k k m n)))
 (let ((?x2004 (* (- 12) ?x455)))
 (let ((?x447 (* c k m n)))
 (let ((?x1997 (* (- 18) ?x447)))
 (let ((?x441 (* k k k n)))
 (let ((?x483 (* (- 8) ?x441)))
 (let ((?x438 (* c k k n)))
 (let ((?x482 (* (- 14) ?x438)))
 (let ((?x2300 (* (- 2) (* k m m))))
 (let ((?x2299 (* (- 2) (* c m m))))
 (let ((?x423 (* k k m)))
 (let ((?x597 (* (- 6) ?x423)))
 (let ((?x415 (* c k m)))
 (let ((?x716 (* (- 9) ?x415)))
 (let ((?x409 (* k k k)))
 (let ((?x717 (* (- 4) ?x409)))
 (let ((?x406 (* c k k)))
 (let ((?x714 (* (- 7) ?x406)))
 (let ((?x2290 (* (- 2) (* k m m n n))))
 (let ((?x2289 (* (- 2) (* c m m n n))))
 (let ((?x398 (* k k m n n)))
 (let ((?x715 (* (- 6) ?x398)))
 (let ((?x397 (* c k m n n)))
 (let ((?x712 (* (- 9) ?x397)))
 (let ((?x394 (* k k k n n)))
 (let ((?x713 (* (- 4) ?x394)))
 (let ((?x393 (* c k k n n)))
 (let ((?x710 (* (- 7) ?x393)))
 (let ((?x338 (* n n n)))
 (let ((?x818 (* (- 9) ?x338)))
 (let ((?x303 (* ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)))
 (let ((?x289 (* n n)))
 (let ((?x591 (* (- 15) ?x289)))
 (let ((?x168 (* 9 (* c n))))
 (let ((?x55 (* k n)))
 (let ((?x2262 (* 8 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x2260 (* (- 3) ?x49)))
 (let ((?x813 (* (- 11) n)))
 (let ((?x2258 (* 3 k)))
 (let ((?x53 (* 3 c)))
 (let ((?x2024 (+ ?x53 ?x2258 ?x813 ?x2260 ?x2262 ?x168 ?x591 ?x303 ?x818 ?x710 ?x713 ?x712 ?x715 ?x2289 ?x2290 ?x714 ?x717 ?x716 ?x597 ?x2299 ?x2300 ?x482 ?x483 ?x1997 ?x2004 ?x2309 ?x2310 ?x2311 ?x2319 ?x2320 ?x699 ?x848 ?x2322 ?x2323 ?x2005 ?x2006 ?x2007 ?x2008 ?x959 ?x2009 ?x1007 ?x2341 ?x2010 ?x2011 (* (- 6) (* m k)) (* (- 6) (* k c)) ?x2014 ?x2015 ?x2016 ?x2017 (* (- 6) (* m c)) ?x2019 ?x2020 ?x1628 ?x1632 ?x1636 ?x1640 ?x2363 ?x2364 ?x2365 ?x2366 (* 3 (* k m)) (* 3 (* c m)) (* 3 (* c k)) ?x1820 ?x1977 ?x1979 ?x1981 ?x1983)))
 (let (($x318 (= (+ k (* (- 3) n) (* (- 3) ?x289)) 1)))
 (let (($x280 (= (+ ?x53 k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x231 (* (- 1) ?x49)))
 (let ((?x230 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x228 (= (+ ?x40 ?x44 ?x230 ?x231 ?x168) 4)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (and $x144 $x228 $x280 $x318 (not (= ?x2024 3)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1534 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1983 (* 2 (* k m n n n))))
 (let ((?x1981 (* 2 (* c m n n n))))
 (let ((?x1979 (* 2 (* k k n n n))))
 (let ((?x1977 (* 2 (* c k n n n))))
 (let ((?x70 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x1820 (* ?x326 ?x326 ?x326 ?x71 ?x71 ?x70)))
 (let ((?x1677 (* c k)))
 (let ((?x2369 (* (- 3) ?x1677)))
 (let ((?x1672 (* c m)))
 (let ((?x2368 (* (- 3) ?x1672)))
 (let ((?x1668 (* k m)))
 (let ((?x2367 (* (- 3) ?x1668)))
 (let ((?x2366 (* (- 4) (* c k n))))
 (let ((?x2365 (* (- 4) (* k k n))))
 (let ((?x2364 (* (- 4) (* c m n))))
 (let ((?x2363 (* (- 4) (* k m n))))
 (let ((?x1640 (* c k n n)))
 (let ((?x1636 (* k k n n)))
 (let ((?x1632 (* c m n n)))
 (let ((?x1628 (* k m n n)))
 (let ((?x596 (+ 6 m)))
 (let ((?x1472 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x2020 (* (- 1) ?x1472)))
 (let ((?x1368 (* c c m n)))
 (let ((?x2019 (* (- 6) ?x1368)))
 (let ((?x1350 (* c c k n)))
 (let ((?x2017 (* (- 6) ?x1350)))
 (let ((?x1321 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x2016 (* 3 ?x1321)))
 (let ((?x1292 (* c c m)))
 (let ((?x2015 (* (- 3) ?x1292)))
 (let ((?x1274 (* c c k)))
 (let ((?x2014 (* (- 3) ?x1274)))
 (let ((?x1042 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)))
 (let ((?x2011 (* (- 1) ?x1042)))
 (let ((?x1032 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x2010 (* (- 2) ?x1032)))
 (let ((?x2341 (* 9 (* c n n))))
 (let ((?x1007 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x991 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x2009 (* (- 1) ?x991)))
 (let ((?x959 (* 3 (* c n n n))))
 (let ((?x924 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x70)))
 (let ((?x2008 (* (- 2) ?x924)))
 (let ((?x904 (* c c m n n)))
 (let ((?x2007 (* (- 3) ?x904)))
 (let ((?x898 (* c c k n n)))
 (let ((?x2006 (* (- 3) ?x898)))
 (let ((?x803 (* ?x326 ?x326 ?x596 ?x71 ?x70 ?x70)))
 (let ((?x2005 (* 3 ?x803)))
 (let ((?x2323 (* (- 3) (* m n n n))))
 (let ((?x2322 (* (- 1) (* m n))))
 (let ((?x848 (* 6 (* k n n))))
 (let ((?x699 (* (- 3) (* m n n))))
 (let ((?x2320 (* (- 1) (* m n n n n))))
 (let ((?x2319 (* (- 1) (* k n n n n))))
 (let ((?x2311 (* (- 2) (* n n n n))))
 (let ((?x2310 (* (- 4) (* k m m n))))
 (let ((?x2309 (* (- 4) (* c m m n))))
 (let ((?x455 (* k k m n)))
 (let ((?x2004 (* (- 12) ?x455)))
 (let ((?x447 (* c k m n)))
 (let ((?x1997 (* (- 18) ?x447)))
 (let ((?x441 (* k k k n)))
 (let ((?x483 (* (- 8) ?x441)))
 (let ((?x438 (* c k k n)))
 (let ((?x482 (* (- 14) ?x438)))
 (let ((?x2300 (* (- 2) (* k m m))))
 (let ((?x2299 (* (- 2) (* c m m))))
 (let ((?x423 (* k k m)))
 (let ((?x597 (* (- 6) ?x423)))
 (let ((?x415 (* c k m)))
 (let ((?x716 (* (- 9) ?x415)))
 (let ((?x409 (* k k k)))
 (let ((?x717 (* (- 4) ?x409)))
 (let ((?x406 (* c k k)))
 (let ((?x714 (* (- 7) ?x406)))
 (let ((?x2290 (* (- 2) (* k m m n n))))
 (let ((?x2289 (* (- 2) (* c m m n n))))
 (let ((?x398 (* k k m n n)))
 (let ((?x715 (* (- 6) ?x398)))
 (let ((?x397 (* c k m n n)))
 (let ((?x712 (* (- 9) ?x397)))
 (let ((?x394 (* k k k n n)))
 (let ((?x713 (* (- 4) ?x394)))
 (let ((?x393 (* c k k n n)))
 (let ((?x710 (* (- 7) ?x393)))
 (let ((?x338 (* n n n)))
 (let ((?x818 (* (- 9) ?x338)))
 (let ((?x303 (* ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)))
 (let ((?x289 (* n n)))
 (let ((?x591 (* (- 15) ?x289)))
 (let ((?x168 (* 9 (* c n))))
 (let ((?x55 (* k n)))
 (let ((?x2262 (* 8 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x2260 (* (- 3) ?x49)))
 (let ((?x813 (* (- 11) n)))
 (let ((?x2258 (* 3 k)))
 (let ((?x53 (* 3 c)))
 (let ((?x1740 (+ ?x53 ?x2258 ?x813 ?x2260 ?x2262 ?x168 ?x591 ?x303 ?x818 ?x710 ?x713 ?x712 ?x715 ?x2289 ?x2290 ?x714 ?x717 ?x716 ?x597 ?x2299 ?x2300 ?x482 ?x483 ?x1997 ?x2004 ?x2309 ?x2310 ?x2311 ?x2319 ?x2320 ?x699 ?x848 ?x2322 ?x2323 ?x2005 ?x2006 ?x2007 ?x2008 ?x959 ?x2009 ?x1007 ?x2341 ?x2010 ?x2011 ?x2014 ?x2015 ?x2016 ?x2017 ?x2019 ?x2020 ?x1628 ?x1632 ?x1636 ?x1640 ?x2363 ?x2364 ?x2365 ?x2366 ?x2367 ?x2368 ?x2369 ?x1820 ?x1977 ?x1979 ?x1981 ?x1983)))
 (let (($x318 (= (+ k (* (- 3) n) (* (- 3) ?x289)) 1)))
 (let (($x280 (= (+ ?x53 k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x231 (* (- 1) ?x49)))
 (let ((?x230 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x228 (= (+ ?x40 ?x44 ?x230 ?x231 ?x168) 4)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x981 (and $x144 $x228 $x280 $x318 (not (= ?x1740 3)))))
 (let ((?x2024 (+ ?x53 ?x2258 ?x813 ?x2260 ?x2262 ?x168 ?x591 ?x303 ?x818 ?x710 ?x713 ?x712 ?x715 ?x2289 ?x2290 ?x714 ?x717 ?x716 ?x597 ?x2299 ?x2300 ?x482 ?x483 ?x1997 ?x2004 ?x2309 ?x2310 ?x2311 ?x2319 ?x2320 ?x699 ?x848 ?x2322 ?x2323 ?x2005 ?x2006 ?x2007 ?x2008 ?x959 ?x2009 ?x1007 ?x2341 ?x2010 ?x2011 (* (- 6) (* m k)) (* (- 6) (* k c)) ?x2014 ?x2015 ?x2016 ?x2017 (* (- 6) (* m c)) ?x2019 ?x2020 ?x1628 ?x1632 ?x1636 ?x1640 ?x2363 ?x2364 ?x2365 ?x2366 (* 3 ?x1668) (* 3 ?x1672) (* 3 ?x1677) ?x1820 ?x1977 ?x1979 ?x1981 ?x1983)))
 (let (($x793 (and $x144 $x228 $x280 $x318 (not (= ?x2024 3)))))
 (rewrite (= $x793 $x981)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x751 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x556 (* (- 1) (* (+ 1 n) (+ 1 n) (+ k m) (+ c k)))))
 (let ((?x70 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x596 (+ 6 m)))
 (let ((?x1042 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)))
 (let ((?x991 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x1472 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x535 (+ (* ?x326 ?x326 ?x326) (* ?x326 ?x326 ?x71 ?x71 ?x70) (* (- 1) (* ?x326 ?x326 ?x326 ?x71 ?x71 ?x70)) (* 2 (* ?x326 ?x326 ?x326 ?x326)) (* (- 3) (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70 ?x70)) ?x1472 (* (- 1) (* ?x326 ?x326 ?x326 ?x71)) (* ?x326 ?x326 ?x326 ?x326 ?x71) (* 3 (* ?x326 ?x326 ?x71 ?x70 ?x70)) (* (- 3) (* ?x326 ?x326 ?x326 ?x70)) (* (- 3) (* ?x326 ?x326 ?x596 ?x71 ?x70 ?x70)) ?x991 (* (- 1) (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)) (* 2 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)) ?x1042 (* 2 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x70)) (* ?x326 ?x326 ?x596 ?x71 ?x70) (* (- 1) (* ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)) (* (- 2) (* ?x326 ?x326 ?x326 ?x71 ?x70)) ?x556)))
 (let (($x1834 (not (= ?x535 0))))
 (let (($x1796 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1842 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x231 (* (- 1) ?x49)))
 (let ((?x230 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (and $x144 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x230 ?x231) 4) $x1842 $x1796 $x1834))))))))))))))))))) :qid k!34))
 ))
 (let ((?x2242 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1983 (* 2 (* k m n n n))))
 (let ((?x1981 (* 2 (* c m n n n))))
 (let ((?x1979 (* 2 (* k k n n n))))
 (let ((?x1977 (* 2 (* c k n n n))))
 (let ((?x70 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x1820 (* ?x326 ?x326 ?x326 ?x71 ?x71 ?x70)))
 (let ((?x2366 (* (- 4) (* c k n))))
 (let ((?x2365 (* (- 4) (* k k n))))
 (let ((?x2364 (* (- 4) (* c m n))))
 (let ((?x2363 (* (- 4) (* k m n))))
 (let ((?x1640 (* c k n n)))
 (let ((?x1636 (* k k n n)))
 (let ((?x1632 (* c m n n)))
 (let ((?x1628 (* k m n n)))
 (let ((?x596 (+ 6 m)))
 (let ((?x1472 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x2020 (* (- 1) ?x1472)))
 (let ((?x1368 (* c c m n)))
 (let ((?x2019 (* (- 6) ?x1368)))
 (let ((?x1350 (* c c k n)))
 (let ((?x2017 (* (- 6) ?x1350)))
 (let ((?x1321 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x2016 (* 3 ?x1321)))
 (let ((?x1292 (* c c m)))
 (let ((?x2015 (* (- 3) ?x1292)))
 (let ((?x1274 (* c c k)))
 (let ((?x2014 (* (- 3) ?x1274)))
 (let ((?x1042 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)))
 (let ((?x2011 (* (- 1) ?x1042)))
 (let ((?x1032 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x2010 (* (- 2) ?x1032)))
 (let ((?x2341 (* 9 (* c n n))))
 (let ((?x1007 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x991 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x2009 (* (- 1) ?x991)))
 (let ((?x959 (* 3 (* c n n n))))
 (let ((?x924 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x70)))
 (let ((?x2008 (* (- 2) ?x924)))
 (let ((?x904 (* c c m n n)))
 (let ((?x2007 (* (- 3) ?x904)))
 (let ((?x898 (* c c k n n)))
 (let ((?x2006 (* (- 3) ?x898)))
 (let ((?x803 (* ?x326 ?x326 ?x596 ?x71 ?x70 ?x70)))
 (let ((?x2005 (* 3 ?x803)))
 (let ((?x2323 (* (- 3) (* m n n n))))
 (let ((?x2322 (* (- 1) (* m n))))
 (let ((?x848 (* 6 (* k n n))))
 (let ((?x699 (* (- 3) (* m n n))))
 (let ((?x2320 (* (- 1) (* m n n n n))))
 (let ((?x2319 (* (- 1) (* k n n n n))))
 (let ((?x2311 (* (- 2) (* n n n n))))
 (let ((?x2310 (* (- 4) (* k m m n))))
 (let ((?x2309 (* (- 4) (* c m m n))))
 (let ((?x455 (* k k m n)))
 (let ((?x2004 (* (- 12) ?x455)))
 (let ((?x447 (* c k m n)))
 (let ((?x1997 (* (- 18) ?x447)))
 (let ((?x441 (* k k k n)))
 (let ((?x483 (* (- 8) ?x441)))
 (let ((?x438 (* c k k n)))
 (let ((?x482 (* (- 14) ?x438)))
 (let ((?x2300 (* (- 2) (* k m m))))
 (let ((?x2299 (* (- 2) (* c m m))))
 (let ((?x423 (* k k m)))
 (let ((?x597 (* (- 6) ?x423)))
 (let ((?x415 (* c k m)))
 (let ((?x716 (* (- 9) ?x415)))
 (let ((?x409 (* k k k)))
 (let ((?x717 (* (- 4) ?x409)))
 (let ((?x406 (* c k k)))
 (let ((?x714 (* (- 7) ?x406)))
 (let ((?x2290 (* (- 2) (* k m m n n))))
 (let ((?x2289 (* (- 2) (* c m m n n))))
 (let ((?x398 (* k k m n n)))
 (let ((?x715 (* (- 6) ?x398)))
 (let ((?x397 (* c k m n n)))
 (let ((?x712 (* (- 9) ?x397)))
 (let ((?x394 (* k k k n n)))
 (let ((?x713 (* (- 4) ?x394)))
 (let ((?x393 (* c k k n n)))
 (let ((?x710 (* (- 7) ?x393)))
 (let ((?x338 (* n n n)))
 (let ((?x818 (* (- 9) ?x338)))
 (let ((?x303 (* ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)))
 (let ((?x289 (* n n)))
 (let ((?x591 (* (- 15) ?x289)))
 (let ((?x168 (* 9 (* c n))))
 (let ((?x55 (* k n)))
 (let ((?x2262 (* 8 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x2260 (* (- 3) ?x49)))
 (let ((?x813 (* (- 11) n)))
 (let ((?x2258 (* 3 k)))
 (let ((?x53 (* 3 c)))
 (let ((?x2024 (+ ?x53 ?x2258 ?x813 ?x2260 ?x2262 ?x168 ?x591 ?x303 ?x818 ?x710 ?x713 ?x712 ?x715 ?x2289 ?x2290 ?x714 ?x717 ?x716 ?x597 ?x2299 ?x2300 ?x482 ?x483 ?x1997 ?x2004 ?x2309 ?x2310 ?x2311 ?x2319 ?x2320 ?x699 ?x848 ?x2322 ?x2323 ?x2005 ?x2006 ?x2007 ?x2008 ?x959 ?x2009 ?x1007 ?x2341 ?x2010 ?x2011 (* (- 6) (* m k)) (* (- 6) (* k c)) ?x2014 ?x2015 ?x2016 ?x2017 (* (- 6) (* m c)) ?x2019 ?x2020 ?x1628 ?x1632 ?x1636 ?x1640 ?x2363 ?x2364 ?x2365 ?x2366 (* 3 (* k m)) (* 3 (* c m)) (* 3 (* c k)) ?x1820 ?x1977 ?x1979 ?x1981 ?x1983)))
 (let (($x318 (= (+ k (* (- 3) n) (* (- 3) ?x289)) 1)))
 (let (($x280 (= (+ ?x53 k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x231 (* (- 1) ?x49)))
 (let ((?x230 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x228 (= (+ ?x40 ?x44 ?x230 ?x231 ?x168) 4)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x793 (and $x144 $x228 $x280 $x318 (not (= ?x2024 3)))))
 (let ((?x535 (+ (* ?x326 ?x326 ?x326) (* ?x326 ?x326 ?x71 ?x71 ?x70) (* (- 1) ?x1820) (* 2 (* ?x326 ?x326 ?x326 ?x326)) (* (- 3) ?x1321) ?x1472 (* (- 1) (* ?x326 ?x326 ?x326 ?x71)) (* ?x326 ?x326 ?x326 ?x326 ?x71) (* 3 (* ?x326 ?x326 ?x71 ?x70 ?x70)) (* (- 3) (* ?x326 ?x326 ?x326 ?x70)) (* (- 3) ?x803) ?x991 (* (- 1) ?x1007) (* 2 ?x1032) ?x1042 (* 2 ?x924) (* ?x326 ?x326 ?x596 ?x71 ?x70) (* (- 1) ?x303) (* (- 2) (* ?x326 ?x326 ?x326 ?x71 ?x70)) (* (- 1) (* ?x326 ?x326 ?x71 ?x70)))))
 (let (($x1834 (not (= ?x535 0))))
 (let (($x1796 (= (+ (* 3 ?x289) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x748 (and $x144 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x230 ?x231) 4) (= (+ ?x53 (* (- 1) (* n k)) k (* (- 2) n)) 1) $x1796 $x1834)))
 (rewrite (= $x748 $x793)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1838 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x556 (* (- 1) (* (+ 1 n) (+ 1 n) (+ k m) (+ c k)))))
 (let ((?x70 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x596 (+ 6 m)))
 (let ((?x1042 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)))
 (let ((?x991 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x1472 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x535 (+ (* ?x326 ?x326 ?x326) (* ?x326 ?x326 ?x71 ?x71 ?x70) (* (- 1) (* ?x326 ?x326 ?x326 ?x71 ?x71 ?x70)) (* 2 (* ?x326 ?x326 ?x326 ?x326)) (* (- 3) (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70 ?x70)) ?x1472 (* (- 1) (* ?x326 ?x326 ?x326 ?x71)) (* ?x326 ?x326 ?x326 ?x326 ?x71) (* 3 (* ?x326 ?x326 ?x71 ?x70 ?x70)) (* (- 3) (* ?x326 ?x326 ?x326 ?x70)) (* (- 3) (* ?x326 ?x326 ?x596 ?x71 ?x70 ?x70)) ?x991 (* (- 1) (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)) (* 2 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)) ?x1042 (* 2 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x70)) (* ?x326 ?x326 ?x596 ?x71 ?x70) (* (- 1) (* ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)) (* (- 2) (* ?x326 ?x326 ?x326 ?x71 ?x70)) ?x556)))
 (let (($x1834 (not (= ?x535 0))))
 (let (($x1796 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1611 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x927 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (and $x144 (= ?x927 (- 4)) $x1611 $x1796 $x1834))))))))))))))))) :qid k!34))
 ))
 (let ((?x770 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x556 (* (- 1) (* (+ 1 n) (+ 1 n) (+ k m) (+ c k)))))
 (let ((?x70 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x596 (+ 6 m)))
 (let ((?x1042 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)))
 (let ((?x991 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x1472 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x535 (+ (* ?x326 ?x326 ?x326) (* ?x326 ?x326 ?x71 ?x71 ?x70) (* (- 1) (* ?x326 ?x326 ?x326 ?x71 ?x71 ?x70)) (* 2 (* ?x326 ?x326 ?x326 ?x326)) (* (- 3) (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70 ?x70)) ?x1472 (* (- 1) (* ?x326 ?x326 ?x326 ?x71)) (* ?x326 ?x326 ?x326 ?x326 ?x71) (* 3 (* ?x326 ?x326 ?x71 ?x70 ?x70)) (* (- 3) (* ?x326 ?x326 ?x326 ?x70)) (* (- 3) (* ?x326 ?x326 ?x596 ?x71 ?x70 ?x70)) ?x991 (* (- 1) (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)) (* 2 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)) ?x1042 (* 2 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x70)) (* ?x326 ?x326 ?x596 ?x71 ?x70) (* (- 1) (* ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)) (* (- 2) (* ?x326 ?x326 ?x326 ?x71 ?x70)) ?x556)))
 (let (($x1834 (not (= ?x535 0))))
 (let (($x1796 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1842 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x231 (* (- 1) ?x49)))
 (let ((?x230 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x748 (and $x144 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x230 ?x231) 4) $x1842 $x1796 $x1834)))
 (let (($x1611 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x927 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1812 (and $x144 (= ?x927 (- 4)) $x1611 $x1796 $x1834)))
 (rewrite (= $x1812 $x748))))))))))))))))))))))))))
 ))
 (let (($x111 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ n 1)))
 (let ((?x71 (+ k m)))
 (let ((?x70 (+ c k)))
 (let ((?x78 (+ m 6)))
 (let ((?x75 (- (+ (* ?x68 ?x68 ?x68) (* ?x70 ?x71 ?x71 ?x68 ?x68)) (* ?x70 ?x71 ?x71 ?x68 ?x68 ?x68))))
 (let ((?x80 (- (+ ?x75 (* 2 ?x68 ?x68 ?x68 ?x68)) (* 3 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x78 ?x78 ?x78 ?x68))))
 (let ((?x84 (- (+ ?x80 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x78 ?x78 ?x78 ?x68)) (* ?x71 ?x68 ?x68 ?x68))))
 (let ((?x87 (+ ?x84 (* ?x71 ?x68 ?x68 ?x68 ?x68) (* 3 ?x70 ?x70 ?x71 ?x68 ?x68))))
 (let ((?x91 (- (- ?x87 (* 3 ?x70 ?x68 ?x68 ?x68)) (* 3 ?x70 ?x70 ?x71 ?x78 ?x68 ?x68))))
 (let ((?x93 (+ ?x91 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x78 ?x78 ?x78 ?x68 ?x68))))
 (let ((?x100 (+ (- ?x93 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x78 ?x78 ?x78 ?x68)) (* 2 ?x70 ?x70 ?x70 ?x71 ?x71 ?x78 ?x78 ?x78 ?x68 ?x68) (* ?x70 ?x71 ?x71 ?x78 ?x68 ?x68 ?x68) (* 2 ?x70 ?x71 ?x78 ?x68 ?x68 ?x68) (* ?x70 ?x71 ?x78 ?x68 ?x68))))
 (let ((?x105 (- (- ?x100 (* ?x70 ?x71 ?x71 ?x78 ?x68 ?x68)) (* 2 ?x70 ?x71 ?x68 ?x68 ?x68))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x105 (* ?x70 ?x71 ?x68 ?x68)) 0))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1818 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x556 (* (- 1) (* (+ 1 n) (+ 1 n) (+ k m) (+ c k)))))
 (let ((?x70 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x596 (+ 6 m)))
 (let ((?x1042 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)))
 (let ((?x991 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x1472 (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)))
 (let ((?x535 (+ (* ?x326 ?x326 ?x326) (* ?x326 ?x326 ?x71 ?x71 ?x70) (* (- 1) (* ?x326 ?x326 ?x326 ?x71 ?x71 ?x70)) (* 2 (* ?x326 ?x326 ?x326 ?x326)) (* (- 3) (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70 ?x70)) ?x1472 (* (- 1) (* ?x326 ?x326 ?x326 ?x71)) (* ?x326 ?x326 ?x326 ?x326 ?x71) (* 3 (* ?x326 ?x326 ?x71 ?x70 ?x70)) (* (- 3) (* ?x326 ?x326 ?x326 ?x70)) (* (- 3) (* ?x326 ?x326 ?x596 ?x71 ?x70 ?x70)) ?x991 (* (- 1) (* ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x71 ?x70 ?x70 ?x70)) (* 2 (* ?x326 ?x326 ?x596 ?x596 ?x596 ?x71 ?x71 ?x70 ?x70 ?x70)) ?x1042 (* 2 (* ?x326 ?x326 ?x326 ?x596 ?x71 ?x70)) (* ?x326 ?x326 ?x596 ?x71 ?x70) (* (- 1) (* ?x326 ?x326 ?x596 ?x71 ?x71 ?x70)) (* (- 2) (* ?x326 ?x326 ?x326 ?x71 ?x70)) ?x556)))
 (let (($x1834 (not (= ?x535 0))))
 (let (($x1796 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1611 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x927 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x144 (= (+ m (* (- 6) n)) 6)))
 (let (($x1812 (and $x144 (= ?x927 (- 4)) $x1611 $x1796 $x1834)))
 (let ((?x68 (+ n 1)))
 (let ((?x78 (+ m 6)))
 (let ((?x75 (- (+ (* ?x68 ?x68 ?x68) (* ?x70 ?x71 ?x71 ?x68 ?x68)) (* ?x70 ?x71 ?x71 ?x68 ?x68 ?x68))))
 (let ((?x80 (- (+ ?x75 (* 2 ?x68 ?x68 ?x68 ?x68)) (* 3 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x78 ?x78 ?x78 ?x68))))
 (let ((?x84 (- (+ ?x80 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x78 ?x78 ?x78 ?x68)) (* ?x71 ?x68 ?x68 ?x68))))
 (let ((?x87 (+ ?x84 (* ?x71 ?x68 ?x68 ?x68 ?x68) (* 3 ?x70 ?x70 ?x71 ?x68 ?x68))))
 (let ((?x91 (- (- ?x87 (* 3 ?x70 ?x68 ?x68 ?x68)) (* 3 ?x70 ?x70 ?x71 ?x78 ?x68 ?x68))))
 (let ((?x93 (+ ?x91 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x78 ?x78 ?x78 ?x68 ?x68))))
 (let ((?x100 (+ (- ?x93 (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x78 ?x78 ?x78 ?x68)) (* 2 ?x70 ?x70 ?x70 ?x71 ?x71 ?x78 ?x78 ?x78 ?x68 ?x68) (* ?x70 ?x71 ?x71 ?x78 ?x68 ?x68 ?x68) (* 2 ?x70 ?x71 ?x78 ?x68 ?x68 ?x68) (* ?x70 ?x71 ?x78 ?x68 ?x68))))
 (let ((?x105 (- (- ?x100 (* ?x70 ?x71 ?x71 ?x78 ?x68 ?x68)) (* 2 ?x70 ?x71 ?x68 ?x68 ?x68))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x110 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x105 (* ?x70 ?x71 ?x68 ?x68)) 0))))))
 (rewrite (= $x110 $x1812))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x112 (asserted $x111)))
 (let ((@x787 (mp (mp @x112 (quant-intro (proof-bind ?x1818) (= $x111 $x1838)) $x1838) (rewrite (= $x1838 $x1838)) $x1838)))
 (let ((@x1180 (mp (mp @x787 (quant-intro (proof-bind ?x770) (= $x1838 $x751)) $x751) (quant-intro (proof-bind ?x2242) (= $x751 $x2240)) $x2240)))
 (let ((@x747 (mp~ (mp @x1180 (quant-intro (proof-bind ?x1534) (= $x2240 $x1271)) $x1271) (sk (~ $x1271 $x1806)) $x1806)))
 (let ((@x1152 (mp @x747 (rewrite (= $x1806 $x957)) $x957)))
 (let ((@x1830 (and-elim @x1152 $x132)))
 (let ((@x1113 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x132) $x1114)) @x1830 $x1114)))
 (let (($x1252 (>= ?x724 1)))
 (let ((@x501 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x132) $x1252)) @x1830 $x1252)))
 (let (($x1756 (<= ?x727 4)))
 (let ((@x1828 (and-elim @x1152 $x725)))
 (let ((@x1975 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x725) $x1756)) @x1828 $x1756)))
 (let (($x1237 (>= ?x727 4)))
 (let ((@x1970 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x725) $x1237)) @x1828 $x1237)))
 (let (($x1780 (<= ?x1653 1)))
 (let ((@x1052 (and-elim @x1152 $x1826)))
 (let ((@x1457 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1826) $x1780)) @x1052 $x1780)))
 (let (($x1545 (>= ?x1653 1)))
 (let ((@x1952 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1826) $x1545)) @x1052 $x1545)))
 (let (($x1454 (<= ?x1555 6)))
 (let ((@x1415 (and-elim @x1152 $x1891)))
 (let ((@x1990 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1891) $x1454)) @x1415 $x1454)))
 (let (($x791 (>= ?x1555 6)))
 (let ((@x1942 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1891) $x791)) @x1415 $x791)))
 (let (($x1991 (not (<= ?x1563 (- 3)))))
 (let (($x1143 (>= ?x1563 (- 3))))
 (let ((@x697 ((_ th-lemma arith) (hypothesis (not $x1143)) @x1952 @x1457 @x1952 @x1457 @x501 @x1113 @x1952 @x1457 @x1970 @x1975 @x1952 @x1457 @x1942 @x1990 @x1952 @x1457 @x1942 @x1990 @x1942 @x1990 @x1952 @x1457 @x1970 @x1975 @x501 @x1113 false)))
 (let ((@x1397 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1541 $x1991 (not $x1143))) (and-elim @x1152 $x1535) (or $x1991 (not $x1143)))))
 ((_ th-lemma arith) (unit-resolution @x1397 (lemma @x697 $x1143) $x1991) @x1952 @x1457 @x1952 @x1457 @x501 @x1113 @x1952 @x1457 @x1970 @x1975 @x1952 @x1457 @x1942 @x1990 @x1952 @x1457 @x1942 @x1990 @x1942 @x1990 @x1952 @x1457 @x1970 @x1975 @x501 @x1113 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        14
 :arith-assert-upper        18
 :arith-branch-var          2
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           6
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             552
 :arith-nonlinear-bounds    8
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              8
 :arith-row-summations      10
 :arith-tableau-max-columns 96
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 7
 :del-clause                16
 :final-checks              8
 :max-memory                4.08
 :memory                    3.39
 :mk-bool-var               27
 :mk-clause                 16
 :num-allocs                2615983
 :num-checks                1
 :propagations              10
 :rlimit-count              26498
 :time                      0.02
 :total-time                0.03)
