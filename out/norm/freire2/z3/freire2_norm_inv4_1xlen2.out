unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x3830 (* 3 r!2)))
 (let ((?x3824 (* (- 3) s!1)))
 (let ((?x6307 (* 6 x!0)))
 (let ((?x511 (* r00 r00 r00)))
 (let ((?x512 (* 12 ?x511)))
 (let ((?x468 (* s00 r00)))
 (let ((?x546 (* (- 6) ?x468)))
 (let ((?x543 (* (- 6) x00)))
 (let ((?x542 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x4066 (+ ?x44 ?x542 ?x543 ?x546 ?x512 ?x6307 ?x3824 ?x3830 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)) (* 2 (* s!1 r!2)))))
 (let (($x3650 (<= ?x4066 0)))
 (let (($x4047 (= ?x4066 0)))
 (let ((?x3587 (* 6 r!2)))
 (let ((?x4105 (+ 3 s!1 ?x3587)))
 (let ((?x3674 (* (- 1) s!1)))
 (let ((?x4114 (+ x!0 ?x3674)))
 (let ((?x3803 (+ 1 r!2)))
 (let ((?x3247 (* s!1 s!1)))
 (let ((?x4927 (* (- 3) ?x3247)))
 (let ((?x919 (* r00 r00 x00)))
 (let ((?x932 (* (- 36) ?x919)))
 (let ((?x847 (* s00 x00)))
 (let ((?x848 (* 6 ?x847)))
 (let ((?x710 (* s00 s00 r00)))
 (let ((?x738 (* (- 2) ?x710)))
 (let ((?x689 (* s00 r00 r00)))
 (let ((?x1042 (* 36 ?x689)))
 (let ((?x633 (* s00 s00)))
 (let ((?x6922 (* (- 19) ?x633)))
 (let ((?x564 (* r00 x00)))
 (let ((?x6928 (* (- 90) ?x564)))
 (let ((?x6934 (* (- 72) x00)))
 (let ((?x6936 (* 57 s00)))
 (let ((?x4208 (+ ?x6936 (* (- 36) r00) ?x6934 (* (- 108) (* r00 r00)) (* 20 (* s00 s!1)) (* 18 ?x468) ?x6928 ?x6922 ?x1042 ?x738 ?x848 ?x932 (* (- 54) (* r00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4114 ?x4105)) (* 36 (* r00 r00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105 ?x4105)) (* 234 (* x!0 r!2)) (* 9 (* s00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105)) (* (- 6) (* s00 x!0 r!2 r!2)) (* (- 4) (* s00 r00 s!1 r!2)) (* 8 (* r00 s!1 s!1 r!2)) (* 36 (* r00 x!0 r!2 r!2 r!2)) (* 288 (* r00 r!2 r!2 r!2)) (* (- 2) (* ?x3803 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105 ?x4105 ?x4105)) (* 4 (* r00 s!1 s!1 r!2 r!2)) (* 108 (* r00 r!2 r!2)) (* (- 4) (* r00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105 ?x4105 ?x4105)) (* (- 72) (* r00 r00 s!1 r!2 r!2)) (* (- 24) (* r00 s00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105)) (* (- 12) (* s00 r00 r!2 r!2 r!2)) (* (- 9) (* ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105 ?x4105)) (* (- 12) (* x00 s!1 r!2)) (* (- 162) (* r!2 r!2)) (* 12 (* s00 r!2 r!2 r!2 r!2)) (* 24 (* ?x3803 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105 ?x4105)) (* 24 (* s00 s!1 r!2 r!2)) (* 138 (* s00 r!2 r!2 r!2)) (* 297 (* s00 r!2 r!2)) (* 2 (* r00 s00 s00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105)) ?x4927 (* 72 x!0) (* (- 69) s!1) (* (- 90) r!2) (* 54 (* x00 ?x3803 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105)) (* 4 (* r00 s!1 s!1)) (* (- 2) (* s00 r00 s!1 r!2 r!2)) (* (- 6) (* s00 x!0)) (* 216 (* r00 x!0 r!2)) (* (- 126) (* r!2 r!2 r!2)) (* 24 (* s00 r00 r!2)) (* 42 (* s00 s!1 r!2)) (* (- 42) (* s00 s00 r!2)) (* 6 (* x!0 s!1)) (* 6 (* s00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4114 ?x4105)) (* (- 6) (* x00 s!1)) (* (- 2) (* s00 r00 s!1)) (* (- 6) (* s!1 s!1 r!2)) (* (- 216) (* r00 x00 r!2)) (* 36 (* r00 r00 x!0)) (* (- 36) (* r00 ?x3803 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4114 ?x4105)) (* 228 (* s00 r!2)) (* (- 168) (* r00 s!1 r!2)) (* (- 12) (* s00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105 ?x4105)) (* (- 540) (* r00 r00 r!2 r!2)) (* 6 (* s00 x00 r!2 r!2)) (* (- 72) (* r00 r00 x00 r!2)) (* (- 36) (* r00 r00 x00 r!2 r!2)) (* (- 54) (* ?x3803 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4114 ?x4105)) (* (- 12) (* s00 x!0 r!2)) (* (- 90) (* r00 s!1)) (* (- 6) (* s00 x00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105)) (* 4 (* s00 s00 ?x3803 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105)) (* (- 27) (* s00 s00 r!2 r!2)) (* 36 (* s00 r00 r00 r!2 r!2)) (* (- 432) (* r00 r00 r!2)) (* (- 66) (* r00 s!1 r!2 r!2)) (* (- 162) (* r00 x00 r!2 r!2)) (* (- 24) (* s00 ?x3803 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105)) (* (- 72) (* r00 r!2)) (* 144 (* r00 r!2 r!2 r!2 r!2)) (* (- 216) (* r00 r00 r!2 r!2 r!2)) (* 36 (* r00 x00 ?x3803 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105)) (* 12 (* x!0 s!1 r!2)) (* (- 78) (* s!1 r!2 r!2 r!2)) (* (- 2) (* s00 s00 r00 r!2 r!2)) (* (- 3) (* ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105 ?x4105 ?x4105)) (* (- 36) (* r!2 r!2 r!2 r!2)) (* 90 (* r00 x!0)) (* (- 6) (* s00 r00 r!2 r!2)) (* (- 36) (* r00 r00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4114 ?x4105)) (* 6 (* x00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105 ?x4105)) (* 252 (* x!0 r!2 r!2)) (* (- 144) (* r00 r00 s!1 r!2)) (* 72 (* r00 r00 x!0 r!2)) (* 12 (* s00 x00 r!2)) (* 162 (* r00 x!0 r!2 r!2)) (* 2 (* r00 s00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105 ?x4105)) (* 6 (* x!0 s!1 r!2 r!2)) (* (- 36) (* r00 r00 s00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105)) (* 24 (* r00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105 ?x4105)) (* 2 (* s00 s!1 r!2 r!2 r!2)) (* 12 (* r00 s!1 r!2 r!2 r!2)) (* 36 (* r00 r00 x00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105)) (* (- 225) (* s!1 r!2 r!2)) (* 15 (* s00 s00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105)) (* 90 (* x!0 r!2 r!2 r!2)) (* (- 3) (* s!1 s!1 r!2 r!2)) (* (- 36) (* r00 x00 r!2 r!2 r!2)) (* (- 6) (* ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4114 ?x4105 ?x4105)) (* (- 234) (* x00 r!2)) (* (- 4) (* s00 s00 r!2 r!2 r!2)) (* 2 (* ?x3803 ?x3803 ?x3803 ?x4105 ?x4105)) (* 72 (* s00 r00 r00 r!2)) (* (- 252) (* x00 r!2 r!2)) (* (- 90) (* x00 r!2 r!2 r!2)) (* 36 (* r00 r00 x!0 r!2 r!2)) (* (- 72) (* r00 r00 s!1)) (* 54 (* r00 x00 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105)) (* (- 4) (* s00 s00 r00 r!2)) (* (- 2) (* s00 ?x3803 ?x3803 ?x3803 ?x3803 ?x4114 ?x4114 ?x4105 ?x4105)) (* (- 6) (* x00 s!1 r!2 r!2)) (* (- 216) (* s!1 r!2)))))
 (let (($x2837 (= ?x4208 18)))
 (let (($x3517 (not $x2837)))
 (let ((?x6012 (* r00 r00 s!1)))
 (let ((?x4911 (* 36 ?x6012)))
 (let ((?x4926 (* (- 9) s!1)))
 (let ((?x1390 (* x00 x00)))
 (let ((?x3832 (* 108 ?x1390)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x3641 (* 16 ?x1228)))
 (let ((?x928 (* r00 r00 r00 x00)))
 (let ((?x4605 (* (- 432) ?x928)))
 (let ((?x3584 (* (- 108) ?x847)))
 (let ((?x3827 (* (- 36) ?x689)))
 (let ((?x3696 (* 51 ?x633)))
 (let ((?x3994 (* 108 ?x564)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4341 (+ ?x137 (* (- 66) (* s00 s!1)) (* (- 54) ?x468) (* 216 (* s00 r00 x00)) ?x3994 ?x3696 ?x3827 (* (- 108) ?x710) (* (- 36) (* s00 s00 r00 r00)) ?x3584 ?x4605 (* 216 (* s00 r00 r00 r00)) ?x3641 ?x3832 (* 108 (* x!0 x!0)) (* 15 ?x3247) ?x4926 (* 36 (* r00 r00 s!1 s!1)) (* 108 (* s00 x!0)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* (- 108) (* x!0 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 108 (* x00 s!1)) (* 108 (* s00 r00 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* 54 (* r00 s!1)) (* (- 216) (* x00 x!0)) (* (- 108) (* r00 x!0)) ?x4911 (* (- 216) (* r00 r00 r00 s!1)))))
 (let (($x4346 (= ?x4341 0)))
 (let ((?x3274 (* 36 ?x919)))
 (let ((?x3263 (* (- 6) ?x847)))
 (let ((?x6311 (* 2 ?x710)))
 (let ((?x3275 (* 15 ?x633)))
 (let ((?x5781 (* 54 ?x564)))
 (let ((?x4909 (+ ?x137 (* (- 12) (* s00 s!1)) (* (- 24) ?x468) ?x5781 ?x3275 ?x3827 ?x6311 ?x3263 ?x3274 (* (- 54) (* x!0 r!2)) ?x4927 ?x4926 (* (- 4) (* r00 s!1 s!1)) (* 6 (* s00 x!0)) (* (- 36) (* r00 x!0 r!2)) (* (- 2) (* s00 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* (- 6) (* x!0 s!1)) (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 24) (* s00 r!2)) (* 24 (* r00 s!1)) (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) ?x4911 (* 24 (* s!1 r!2)))))
 (let (($x4908 (= ?x4909 0)))
 (let ((?x1048 (* 4 ?x633)))
 (let ((?x4090 (* 18 ?x564)))
 (let ((?x3700 (+ ?x44 (* (- 2) (* s00 s!1)) (* (- 9) ?x468) ?x4090 ?x1048 (* (- 6) ?x689) (* (- 18) (* x!0 r!2)) (* (- 2) ?x3247) ?x3824 (* 6 (* s00 r00 r!2)) (* (- 9) (* s00 r!2)) (* (- 6) (* r00 s!1 r!2)) (* 9 (* r00 s!1)) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* 6 ?x6012) (* 9 (* s!1 r!2)))))
 (let (($x3701 (= ?x3700 0)))
 (let ((?x343 (* r00 r00)))
 (let ((?x1921 (* (- 3) ?x343)))
 (let ((?x4681 (+ s00 ?x1921 (* 3 (* r!2 r!2)) ?x3674)))
 (let (($x4680 (= ?x4681 0)))
 (let (($x4334 (and $x4680 $x4047 $x3701 $x4908 $x4346 $x3517)))
 (let ((?x3578 (+ 3 ?x3587 s!1)))
 (let ((?x4729 (+ ?x3674 x!0)))
 (let ((?x2628 (* 19 ?x633)))
 (let ((?x4228 (* 3 ?x3247)))
 (let ((?x2202 (* 90 ?x564)))
 (let ((?x2199 (* (- 18) ?x468)))
 (let ((?x2250 (* 108 ?x343)))
 (let ((?x2248 (* 72 x00)))
 (let ((?x6937 (* 36 r00)))
 (let ((?x2245 (* (- 57) s00)))
 (let ((?x4607 (+ (* 90 r!2) (* 69 s!1) (* (- 72) x!0) ?x2245 ?x6937 ?x2248 (* 162 (* r!2 r!2)) ?x2250 (* 216 (* r!2 s!1)) (* 432 (* r!2 r00 r00)) (* 36 (* r00 ?x3803 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x4729 ?x3578)) (* (- 228) (* r!2 s00)) ?x2199 ?x2202 ?x4228 (* (- 234) (* r!2 x!0)) (* 168 (* r!2 s!1 r00)) (* (- 216) (* r!2 x!0 r00)) (* 72 (* s!1 r00 r00)) ?x2628 (* 6 (* x!0 s00)) (* (- 90) (* x!0 r00)) ?x3827 (* (- 4) (* s!1 s!1 r00)) (* 234 (* r!2 x00)) ?x6311 (* (- 20) (* s!1 s00)) (* 90 (* s!1 r00)) (* 6 (* s!1 x00)) (* (- 24) (* r!2 s00 r00)) (* 2 (* s!1 s00 r00)) ?x3263 (* 6 (* r!2 s!1 s!1)) (* (- 6) (* s!1 x!0)) (* 42 (* r!2 s00 s00)) ?x3274 (* 4 (* r!2 s!1 s00 r00)) (* (- 42) (* r!2 s!1 s00)) (* 216 (* r!2 r00 x00)) (* (- 36) (* x!0 r00 r00)) (* (- 297) (* r!2 r!2 s00)) (* (- 138) (* r!2 r!2 r!2 s00)) (* (- 24) (* r!2 r!2 s!1 s00)) (* (- 24) (* ?x3803 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578 ?x3578)) (* (- 12) (* r!2 r!2 r!2 r!2 s00)) (* (- 2) (* r!2 r!2 r!2 s!1 s00)) (* (- 24) (* r00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578 ?x3578)) (* 36 (* r00 r00 s00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578)) (* (- 36) (* r00 r00 x00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578)) (* (- 15) (* s00 s00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578)) (* (- 6) (* x00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578 ?x3578)) (* 36 (* r00 r00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x4729 ?x3578)) (* 225 (* r!2 r!2 s!1)) (* 126 (* r!2 r!2 r!2)) (* 78 (* r!2 r!2 r!2 s!1)) (* 3 (* r!2 r!2 s!1 s!1)) (* (- 252) (* r!2 r!2 x!0)) (* (- 90) (* r!2 r!2 r!2 x!0)) (* (- 6) (* r!2 r!2 s!1 x!0)) (* (- 12) (* r!2 s!1 x!0)) (* (- 2) (* r00 s00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578 ?x3578)) (* (- 162) (* r!2 r!2 x!0 r00)) (* (- 2) (* ?x3803 ?x3803 ?x3803 ?x3578 ?x3578)) (* 4 (* r!2 r!2 r!2 s00 s00)) (* 27 (* r!2 r!2 s00 s00)) (* 66 (* r!2 r!2 s!1 r00)) (* 162 (* r!2 r!2 r00 x00)) (* 54 (* r00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x4729 ?x3578)) (* (- 54) (* r00 x00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578)) (* (- 72) (* r!2 s00 r00 r00)) (* (- 36) (* r!2 r!2 s00 r00 r00)) (* (- 36) (* r!2 r!2 r!2 x!0 r00)) (* (- 12) (* r!2 r!2 r!2 s!1 r00)) (* 36 (* r!2 r!2 r!2 r00 x00)) (* 6 (* ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x4729 ?x3578 ?x3578)) (* 36 (* r!2 r!2 r!2 r!2)) (* 2 (* r!2 r!2 s00 s00 r00)) (* 4 (* r!2 s00 s00 r00)) (* 2 (* s00 ?x3803 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578 ?x3578)) (* 6 (* r!2 r!2 s!1 x00)) (* 12 (* r!2 s!1 x00)) (* 4 (* r00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578 ?x3578 ?x3578)) (* 9 (* ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578 ?x3578)) (* (- 54) (* x00 ?x3803 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578)) (* 3 (* ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578 ?x3578 ?x3578)) (* 2 (* ?x3803 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578 ?x3578 ?x3578)) (* 2 (* r!2 r!2 s!1 s00 r00)) (* 12 (* r!2 r!2 r!2 s00 r00)) (* 24 (* r00 s00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578)) (* 72 (* r!2 r!2 s!1 r00 r00)) (* 144 (* r!2 s!1 r00 r00)) (* 252 (* r!2 r!2 x00)) (* 90 (* r!2 r!2 r!2 x00)) (* (- 36) (* r!2 r!2 x!0 r00 r00)) (* (- 72) (* r!2 x!0 r00 r00)) (* 6 (* r!2 r!2 s00 r00)) (* (- 36) (* r00 x00 ?x3803 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578)) (* (- 12) (* r!2 s00 x00)) (* (- 6) (* r!2 r!2 s00 x00)) (* 72 (* r!2 r00 r00 x00)) (* 36 (* r!2 r!2 r00 r00 x00)) (* 54 (* ?x3803 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x4729 ?x3578)) (* 12 (* r!2 x!0 s00)) (* 6 (* r!2 r!2 x!0 s00)) (* 12 (* s00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578 ?x3578)) (* 540 (* r!2 r!2 r00 r00)) (* 216 (* r!2 r!2 r!2 r00 r00)) (* (- 6) (* s00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x4729 ?x3578)) (* (- 36) (* r00 r00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578 ?x3578)) (* (- 2) (* r00 s00 s00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578)) (* (- 9) (* s00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578)) (* 24 (* s00 ?x3803 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578)) (* 6 (* s00 x00 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578)) (* (- 4) (* s00 s00 ?x3803 ?x3803 ?x3803 ?x3803 ?x4729 ?x4729 ?x3578)) (* 72 (* r!2 r00)) (* (- 108) (* r!2 r!2 r00)) (* (- 288) (* r!2 r!2 r!2 r00)) (* (- 144) (* r!2 r!2 r!2 r!2 r00)) (* (- 8) (* r!2 s!1 s!1 r00)) (* (- 4) (* r!2 r!2 s!1 s!1 r00)))))
 (let ((?x1420 (* (- 108) ?x1390)))
 (let ((?x1419 (* (- 16) ?x1228)))
 (let ((?x1100 (* s00 r00 r00 r00)))
 (let ((?x1415 (* (- 216) ?x1100)))
 (let ((?x929 (* 432 ?x928)))
 (let ((?x1173 (* 108 ?x847)))
 (let ((?x779 (* s00 s00 r00 r00)))
 (let ((?x780 (* 36 ?x779)))
 (let ((?x1056 (* 108 ?x710)))
 (let ((?x1409 (* (- 51) ?x633)))
 (let ((?x3259 (* s!1 r00 r00)))
 (let ((?x2874 (* (- 36) ?x3259)))
 (let ((?x1406 (* (- 108) ?x564)))
 (let ((?x557 (* s00 r00 x00)))
 (let ((?x1405 (* (- 216) ?x557)))
 (let ((?x566 (* 54 ?x468)))
 (let ((?x1029 (* (- 9) s00)))
 (let ((?x4246 (* 9 s!1)))
 (let ((?x4251 (+ ?x4246 ?x1029 ?x566 ?x1405 ?x1406 (* (- 15) ?x3247) ?x2874 ?x1409 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) ?x1042 (* 216 (* s!1 r00 r00 r00)) ?x1056 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x780 (* (- 108) (* s!1 s00 r00)) ?x1173 (* 4 (* s!1 s!1 s!1)) (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x929 (* 12 (* s!1 s!1 s00)) ?x1415 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1419 (* 216 (* x!0 x00)) ?x1420)))
 (let ((?x958 (* (- 15) ?x633)))
 (let ((?x593 (* (- 54) ?x564)))
 (let ((?x606 (* 24 ?x468)))
 (let ((?x3281 (+ ?x4246 ?x1029 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x606 ?x593 ?x4228 (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x2874 ?x958 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1042 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x738 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x848 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x932 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x690 (* 6 ?x689)))
 (let ((?x646 (* (- 4) ?x633)))
 (let ((?x578 (* (- 18) ?x564)))
 (let ((?x583 (* 9 ?x468)))
 (let ((?x420 (* (- 3) s00)))
 (let ((?x5469 (+ (* 3 s!1) ?x420 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x583 ?x578 (* 2 ?x3247) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x3259) ?x646 (* 18 (* x!0 r00)) ?x690 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x3290 (+ ?x3830 ?x3824 ?x6307 ?x44 ?x542 ?x543 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x546 ?x512)))
 (let (($x5487 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x343)) 0)))
 (let (($x4779 (and $x5487 (= ?x3290 0) (= ?x5469 0) (= ?x3281 0) (= ?x4251 0) (not (= ?x4607 (- 18))))))
 (let (($x5083 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1466 (+ 3 ?x214 s)))
 (let ((?x322 (* (- 1) s)))
 (let ((?x1604 (+ ?x322 x)))
 (let ((?x1427 (+ 1 r)))
 (let ((?x919 (* r00 r00 x00)))
 (let ((?x3274 (* 36 ?x919)))
 (let ((?x847 (* s00 x00)))
 (let ((?x3263 (* (- 6) ?x847)))
 (let ((?x710 (* s00 s00 r00)))
 (let ((?x6311 (* 2 ?x710)))
 (let ((?x689 (* s00 r00 r00)))
 (let ((?x3827 (* (- 36) ?x689)))
 (let ((?x633 (* s00 s00)))
 (let ((?x2628 (* 19 ?x633)))
 (let ((?x587 (* s s)))
 (let ((?x611 (* 3 ?x587)))
 (let ((?x564 (* r00 x00)))
 (let ((?x2202 (* 90 ?x564)))
 (let ((?x468 (* s00 r00)))
 (let ((?x2199 (* (- 18) ?x468)))
 (let ((?x343 (* r00 r00)))
 (let ((?x2250 (* 108 ?x343)))
 (let ((?x2248 (* 72 x00)))
 (let ((?x6937 (* 36 r00)))
 (let ((?x2245 (* (- 57) s00)))
 (let ((?x5073 (+ (* 90 r) (* 69 s) (* (- 72) x) ?x2245 ?x6937 ?x2248 (* 162 (* r r)) ?x2250 (* 216 (* r s)) (* 432 (* r r00 r00)) (* 36 (* r00 ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1604 ?x1466)) (* (- 228) (* r s00)) ?x2199 ?x2202 ?x611 (* (- 234) (* r x)) (* 168 (* r s r00)) (* (- 216) (* r x r00)) (* 72 (* s r00 r00)) ?x2628 (* 6 (* x s00)) (* (- 90) (* x r00)) ?x3827 (* (- 4) (* s s r00)) (* 234 (* r x00)) ?x6311 (* (- 20) (* s s00)) (* 90 (* s r00)) (* 6 (* s x00)) (* (- 24) (* r s00 r00)) (* 2 (* s s00 r00)) ?x3263 (* 6 (* r s s)) (* (- 6) (* s x)) (* 42 (* r s00 s00)) ?x3274 (* 4 (* r s s00 r00)) (* (- 42) (* r s s00)) (* 216 (* r r00 x00)) (* (- 36) (* x r00 r00)) (* (- 297) (* r r s00)) (* (- 138) (* r r r s00)) (* (- 24) (* r r s s00)) (* (- 24) (* ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* (- 12) (* r r r r s00)) (* (- 2) (* r r r s s00)) (* (- 24) (* r00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* 36 (* r00 r00 s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 36) (* r00 r00 x00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 15) (* s00 s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 6) (* x00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1604 ?x1466)) (* 225 (* r r s)) (* 126 (* r r r)) (* 78 (* r r r s)) (* 3 (* r r s s)) (* (- 252) (* r r x)) (* (- 90) (* r r r x)) (* (- 6) (* r r s x)) (* (- 12) (* r s x)) (* (- 2) (* r00 s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* (- 162) (* r r x r00)) (* (- 2) (* ?x1427 ?x1427 ?x1427 ?x1466 ?x1466)) (* 4 (* r r r s00 s00)) (* 27 (* r r s00 s00)) (* 66 (* r r s r00)) (* 162 (* r r r00 x00)) (* 54 (* r00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1604 ?x1466)) (* (- 54) (* r00 x00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 72) (* r s00 r00 r00)) (* (- 36) (* r r s00 r00 r00)) (* (- 36) (* r r r x r00)) (* (- 12) (* r r r s r00)) (* 36 (* r r r r00 x00)) (* 6 (* ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1604 ?x1466 ?x1466)) (* 36 (* r r r r)) (* 2 (* r r s00 s00 r00)) (* 4 (* r s00 s00 r00)) (* 2 (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* 6 (* r r s x00)) (* 12 (* r s x00)) (* 4 (* r00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466 ?x1466)) (* 9 (* ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* (- 54) (* x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* 3 (* ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466 ?x1466)) (* 2 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466 ?x1466)) (* 2 (* r r s s00 r00)) (* 12 (* r r r s00 r00)) (* 24 (* r00 s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* 72 (* r r s r00 r00)) (* 144 (* r s r00 r00)) (* 252 (* r r x00)) (* 90 (* r r r x00)) (* (- 36) (* r r x r00 r00)) (* (- 72) (* r x r00 r00)) (* 6 (* r r s00 r00)) (* (- 36) (* r00 x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 12) (* r s00 x00)) (* (- 6) (* r r s00 x00)) (* 72 (* r r00 r00 x00)) (* 36 (* r r r00 r00 x00)) (* 54 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1604 ?x1466)) (* 12 (* r x s00)) (* 6 (* r r x s00)) (* 12 (* s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* 540 (* r r r00 r00)) (* 216 (* r r r r00 r00)) (* (- 6) (* s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1604 ?x1466)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* (- 2) (* r00 s00 s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 9) (* s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* 24 (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* 6 (* s00 x00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 4) (* s00 s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* 72 (* r r00)) (* (- 108) (* r r r00)) (* (- 288) (* r r r r00)) (* (- 144) (* r r r r r00)) (* (- 8) (* r s s r00)) (* (- 4) (* r r s s r00)))))
 (let ((?x1390 (* x00 x00)))
 (let ((?x1420 (* (- 108) ?x1390)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x1419 (* (- 16) ?x1228)))
 (let ((?x1100 (* s00 r00 r00 r00)))
 (let ((?x1415 (* (- 216) ?x1100)))
 (let ((?x928 (* r00 r00 r00 x00)))
 (let ((?x929 (* 432 ?x928)))
 (let ((?x1173 (* 108 ?x847)))
 (let ((?x779 (* s00 s00 r00 r00)))
 (let ((?x780 (* 36 ?x779)))
 (let ((?x1056 (* 108 ?x710)))
 (let ((?x1042 (* 36 ?x689)))
 (let ((?x1409 (* (- 51) ?x633)))
 (let ((?x607 (* s r00 r00)))
 (let ((?x906 (* (- 36) ?x607)))
 (let ((?x1406 (* (- 108) ?x564)))
 (let ((?x557 (* s00 r00 x00)))
 (let ((?x1405 (* (- 216) ?x557)))
 (let ((?x566 (* 54 ?x468)))
 (let ((?x1029 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1421 (+ ?x143 ?x1029 ?x566 ?x1405 ?x1406 (* (- 15) ?x587) ?x906 ?x1409 (* (- 108) (* x s00)) (* 108 (* x r00)) ?x1042 (* 216 (* s r00 r00 r00)) ?x1056 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x780 (* (- 108) (* s s00 r00)) ?x1173 (* 4 (* s s s)) (* 108 (* s x)) (* (- 108) (* x x)) ?x929 (* 12 (* s s s00)) ?x1415 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1419 (* 216 (* x x00)) ?x1420)))
 (let (($x1422 (= ?x1421 0)))
 (let ((?x1114 (* x r00 r00)))
 (let ((?x1115 (* 36 ?x1114)))
 (let ((?x932 (* (- 36) ?x919)))
 (let ((?x855 (* s x)))
 (let ((?x856 (* 6 ?x855)))
 (let ((?x848 (* 6 ?x847)))
 (let ((?x766 (* s x00)))
 (let ((?x796 (* (- 6) ?x766)))
 (let ((?x738 (* (- 2) ?x710)))
 (let ((?x701 (* r x00)))
 (let ((?x1065 (* (- 54) ?x701)))
 (let ((?x693 (* s s r00)))
 (let ((?x694 (* 4 ?x693)))
 (let ((?x958 (* (- 15) ?x633)))
 (let ((?x593 (* (- 54) ?x564)))
 (let ((?x606 (* 24 ?x468)))
 (let ((?x1121 (+ ?x143 ?x1029 (* (- 24) (* r s)) (* 24 (* r s00)) ?x606 ?x593 ?x611 (* 54 (* r x)) (* 36 (* r x r00)) ?x906 ?x958 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1042 ?x694 ?x1065 ?x738 (* 12 (* s s00)) (* (- 24) (* s r00)) ?x796 (* (- 2) (* s s00 r00)) ?x848 (* 2 (* r s s)) ?x856 (* (- 4) (* r s00 s00)) ?x932 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) ?x1115)))
 (let (($x1126 (= ?x1121 0)))
 (let ((?x690 (* 6 ?x689)))
 (let ((?x646 (* (- 4) ?x633)))
 (let ((?x588 (* 2 ?x587)))
 (let ((?x578 (* (- 18) ?x564)))
 (let ((?x583 (* 9 ?x468)))
 (let ((?x420 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x787 (+ ?x47 ?x420 (* (- 9) (* r s)) (* 9 (* r s00)) ?x583 ?x578 ?x588 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x607) ?x646 (* 18 (* x r00)) ?x690 (* (- 18) ?x701) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x794 (= ?x787 0)))
 (let ((?x511 (* r00 r00 r00)))
 (let ((?x512 (* 12 ?x511)))
 (let ((?x546 (* (- 6) ?x468)))
 (let ((?x543 (* (- 6) x00)))
 (let ((?x542 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x541 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x547 (+ ?x43 ?x541 ?x56 ?x44 ?x542 ?x543 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x546 ?x512)))
 (let (($x548 (= ?x547 0)))
 (let (($x376 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x343)) 0)))
 (and $x376 $x548 $x794 $x1126 $x1422 (not (= ?x5073 (- 18)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1294 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x2989 (+ 3 s ?x214)))
 (let ((?x322 (* (- 1) s)))
 (let ((?x584 (+ x ?x322)))
 (let ((?x1427 (+ 1 r)))
 (let ((?x6530 (* r00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)))
 (let ((?x1289 (+ (* 24 (* s00 ?x1427 ?x1427 ?x1427)) (* 12 (* s00 ?x1427 ?x1427 ?x2989)) (* 24 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 3) (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* 15 (* s00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 2 (* r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 24) (* r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 2) (* r00 s00 ?x1427 ?x1427 ?x2989)) (* 2 (* s00 ?x1427 ?x1427 ?x1427 ?x2989)) (* 9 (* ?x1427 ?x1427 ?x2989)) (* (- 4) (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* 6 (* ?x1427 ?x1427 ?x584 ?x2989)) (* 54 (* x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 9) (* s00 ?x1427 ?x1427)) (* (- 2) (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* (- 4) (* s00 s00 ?x1427 ?x1427 ?x1427)) (* (- 9) (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 24) (* r00 ?x1427 ?x1427 ?x2989)) (* (- 6) (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989 ?x2989)) (* (- 2) (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 24 (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 2) (* r00 s00 s00 ?x1427 ?x1427)) (* 2 (* ?x1427 ?x1427 ?x1427 ?x2989 ?x2989)) (* 4 (* s00 s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 54) (* r00 x00 ?x1427 ?x1427)) (* 54 (* r00 ?x1427 ?x1427 ?x584)) (* 36 (* r00 x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 36 (* r00 r00 s00 ?x1427 ?x1427)) (* 36 (* r00 ?x1427 ?x1427 ?x1427 ?x584)) (* (- 54) (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* (- 54) (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* (- 36) (* r00 x00 ?x1427 ?x1427 ?x1427)) (* (- 6) (* s00 ?x1427 ?x1427 ?x584)) (* 3 (* ?x1427 ?x1427 ?x2989 ?x2989)) (* (- 15) (* s00 s00 ?x1427 ?x1427)) (* (- 12) (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 6) (* x00 ?x1427 ?x1427 ?x2989)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x2989)) (* 6 (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* 2 (* r00 s00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 9 (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x584)) (* (- 24) (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 6) (* s00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 54) (* x00 ?x1427 ?x1427 ?x1427)) (* 24 (* r00 s00 ?x1427 ?x1427)) (* 54 (* ?x1427 ?x1427 ?x1427 ?x584)) (* 54 (* r00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* 6 (* x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 36) (* r00 r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 6 (* s00 x00 ?x1427 ?x1427)) (* (- 36) (* r00 r00 x00 ?x1427 ?x1427)) (* 36 (* r00 r00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 4 (* r00 ?x1427 ?x1427 ?x2989 ?x2989)) (* (- 24) (* ?x1427 ?x1427 ?x1427 ?x2989)) (* (- 36) ?x6530))))
 (let ((?x1390 (* x00 x00)))
 (let ((?x3832 (* 108 ?x1390)))
 (let ((?x3771 (* (- 9) s)))
 (let ((?x4448 (* r00 r00 s00)))
 (let ((?x3749 (* (- 36) ?x4448)))
 (let ((?x137 (* 9 s00)))
 (let ((?x633 (* s00 s00)))
 (let ((?x3696 (* 51 ?x633)))
 (let ((?x3477 (* r00 r00 s)))
 (let ((?x4702 (* 36 ?x3477)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x3641 (* 16 ?x1228)))
 (let ((?x847 (* s00 x00)))
 (let ((?x3584 (* (- 108) ?x847)))
 (let ((?x928 (* r00 r00 r00 x00)))
 (let ((?x4605 (* (- 432) ?x928)))
 (let ((?x564 (* r00 x00)))
 (let ((?x3994 (* 108 ?x564)))
 (let ((?x3842 (+ (* 216 (* r00 s00 x00)) ?x3994 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4605 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3584 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3641 (* (- 108) (* x s)) ?x4702 ?x3696 (* (- 108) (* r00 x)) ?x137 ?x3749 ?x3771 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3832)))
 (let (($x3850 (= ?x3842 0)))
 (let ((?x3275 (* 15 ?x633)))
 (let ((?x919 (* r00 r00 x00)))
 (let ((?x3274 (* 36 ?x919)))
 (let ((?x3263 (* (- 6) ?x847)))
 (let ((?x587 (* s s)))
 (let ((?x3204 (* (- 3) ?x587)))
 (let ((?x5781 (* 54 ?x564)))
 (let ((?x5772 (+ (* 24 (* s r)) ?x5781 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) ?x3204 (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3263 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4702 ?x3274 ?x3275 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3749 (* 54 (* x00 r)) ?x3771 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x541 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1048 (* 4 ?x633)))
 (let ((?x4090 (* 18 ?x564)))
 (let ((?x532 (+ (* 9 (* s r)) ?x4090 (* (- 9) (* r00 s00)) (* (- 2) ?x587) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3477) ?x1048 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x4448) (* 18 (* x00 r)) ?x541 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x511 (* r00 r00 r00)))
 (let ((?x512 (* 12 ?x511)))
 (let ((?x543 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x542 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x4169 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x541 ?x542 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x543 ?x512)))
 (let (($x2405 (= (+ s00 ?x322 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2405 (= ?x4169 0) (= ?x532 0) (= ?x5772 0) $x3850 (not (= ?x1289 0))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5091 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1466 (+ 3 ?x214 s)))
 (let ((?x322 (* (- 1) s)))
 (let ((?x1604 (+ ?x322 x)))
 (let ((?x1427 (+ 1 r)))
 (let ((?x919 (* r00 r00 x00)))
 (let ((?x3274 (* 36 ?x919)))
 (let ((?x847 (* s00 x00)))
 (let ((?x3263 (* (- 6) ?x847)))
 (let ((?x710 (* s00 s00 r00)))
 (let ((?x6311 (* 2 ?x710)))
 (let ((?x689 (* s00 r00 r00)))
 (let ((?x3827 (* (- 36) ?x689)))
 (let ((?x633 (* s00 s00)))
 (let ((?x2628 (* 19 ?x633)))
 (let ((?x587 (* s s)))
 (let ((?x611 (* 3 ?x587)))
 (let ((?x564 (* r00 x00)))
 (let ((?x2202 (* 90 ?x564)))
 (let ((?x468 (* s00 r00)))
 (let ((?x2199 (* (- 18) ?x468)))
 (let ((?x343 (* r00 r00)))
 (let ((?x2250 (* 108 ?x343)))
 (let ((?x2248 (* 72 x00)))
 (let ((?x6937 (* 36 r00)))
 (let ((?x2245 (* (- 57) s00)))
 (let ((?x5073 (+ (* 90 r) (* 69 s) (* (- 72) x) ?x2245 ?x6937 ?x2248 (* 162 (* r r)) ?x2250 (* 216 (* r s)) (* 432 (* r r00 r00)) (* 36 (* r00 ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1604 ?x1466)) (* (- 228) (* r s00)) ?x2199 ?x2202 ?x611 (* (- 234) (* r x)) (* 168 (* r s r00)) (* (- 216) (* r x r00)) (* 72 (* s r00 r00)) ?x2628 (* 6 (* x s00)) (* (- 90) (* x r00)) ?x3827 (* (- 4) (* s s r00)) (* 234 (* r x00)) ?x6311 (* (- 20) (* s s00)) (* 90 (* s r00)) (* 6 (* s x00)) (* (- 24) (* r s00 r00)) (* 2 (* s s00 r00)) ?x3263 (* 6 (* r s s)) (* (- 6) (* s x)) (* 42 (* r s00 s00)) ?x3274 (* 4 (* r s s00 r00)) (* (- 42) (* r s s00)) (* 216 (* r r00 x00)) (* (- 36) (* x r00 r00)) (* (- 297) (* r r s00)) (* (- 138) (* r r r s00)) (* (- 24) (* r r s s00)) (* (- 24) (* ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* (- 12) (* r r r r s00)) (* (- 2) (* r r r s s00)) (* (- 24) (* r00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* 36 (* r00 r00 s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 36) (* r00 r00 x00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 15) (* s00 s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 6) (* x00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1604 ?x1466)) (* 225 (* r r s)) (* 126 (* r r r)) (* 78 (* r r r s)) (* 3 (* r r s s)) (* (- 252) (* r r x)) (* (- 90) (* r r r x)) (* (- 6) (* r r s x)) (* (- 12) (* r s x)) (* (- 2) (* r00 s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* (- 162) (* r r x r00)) (* (- 2) (* ?x1427 ?x1427 ?x1427 ?x1466 ?x1466)) (* 4 (* r r r s00 s00)) (* 27 (* r r s00 s00)) (* 66 (* r r s r00)) (* 162 (* r r r00 x00)) (* 54 (* r00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1604 ?x1466)) (* (- 54) (* r00 x00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 72) (* r s00 r00 r00)) (* (- 36) (* r r s00 r00 r00)) (* (- 36) (* r r r x r00)) (* (- 12) (* r r r s r00)) (* 36 (* r r r r00 x00)) (* 6 (* ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1604 ?x1466 ?x1466)) (* 36 (* r r r r)) (* 2 (* r r s00 s00 r00)) (* 4 (* r s00 s00 r00)) (* 2 (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* 6 (* r r s x00)) (* 12 (* r s x00)) (* 4 (* r00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466 ?x1466)) (* 9 (* ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* (- 54) (* x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* 3 (* ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466 ?x1466)) (* 2 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466 ?x1466)) (* 2 (* r r s s00 r00)) (* 12 (* r r r s00 r00)) (* 24 (* r00 s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* 72 (* r r s r00 r00)) (* 144 (* r s r00 r00)) (* 252 (* r r x00)) (* 90 (* r r r x00)) (* (- 36) (* r r x r00 r00)) (* (- 72) (* r x r00 r00)) (* 6 (* r r s00 r00)) (* (- 36) (* r00 x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 12) (* r s00 x00)) (* (- 6) (* r r s00 x00)) (* 72 (* r r00 r00 x00)) (* 36 (* r r r00 r00 x00)) (* 54 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1604 ?x1466)) (* 12 (* r x s00)) (* 6 (* r r x s00)) (* 12 (* s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* 540 (* r r r00 r00)) (* 216 (* r r r r00 r00)) (* (- 6) (* s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1604 ?x1466)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466 ?x1466)) (* (- 2) (* r00 s00 s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 9) (* s00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* 24 (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* 6 (* s00 x00 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* (- 4) (* s00 s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x1604 ?x1604 ?x1466)) (* 72 (* r r00)) (* (- 108) (* r r r00)) (* (- 288) (* r r r r00)) (* (- 144) (* r r r r r00)) (* (- 8) (* r s s r00)) (* (- 4) (* r r s s r00)))))
 (let ((?x1390 (* x00 x00)))
 (let ((?x1420 (* (- 108) ?x1390)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x1419 (* (- 16) ?x1228)))
 (let ((?x1100 (* s00 r00 r00 r00)))
 (let ((?x1415 (* (- 216) ?x1100)))
 (let ((?x928 (* r00 r00 r00 x00)))
 (let ((?x929 (* 432 ?x928)))
 (let ((?x1173 (* 108 ?x847)))
 (let ((?x779 (* s00 s00 r00 r00)))
 (let ((?x780 (* 36 ?x779)))
 (let ((?x1056 (* 108 ?x710)))
 (let ((?x1042 (* 36 ?x689)))
 (let ((?x1409 (* (- 51) ?x633)))
 (let ((?x607 (* s r00 r00)))
 (let ((?x906 (* (- 36) ?x607)))
 (let ((?x1406 (* (- 108) ?x564)))
 (let ((?x557 (* s00 r00 x00)))
 (let ((?x1405 (* (- 216) ?x557)))
 (let ((?x566 (* 54 ?x468)))
 (let ((?x1029 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1421 (+ ?x143 ?x1029 ?x566 ?x1405 ?x1406 (* (- 15) ?x587) ?x906 ?x1409 (* (- 108) (* x s00)) (* 108 (* x r00)) ?x1042 (* 216 (* s r00 r00 r00)) ?x1056 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x780 (* (- 108) (* s s00 r00)) ?x1173 (* 4 (* s s s)) (* 108 (* s x)) (* (- 108) (* x x)) ?x929 (* 12 (* s s s00)) ?x1415 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1419 (* 216 (* x x00)) ?x1420)))
 (let (($x1422 (= ?x1421 0)))
 (let ((?x1114 (* x r00 r00)))
 (let ((?x1115 (* 36 ?x1114)))
 (let ((?x932 (* (- 36) ?x919)))
 (let ((?x855 (* s x)))
 (let ((?x856 (* 6 ?x855)))
 (let ((?x848 (* 6 ?x847)))
 (let ((?x766 (* s x00)))
 (let ((?x796 (* (- 6) ?x766)))
 (let ((?x738 (* (- 2) ?x710)))
 (let ((?x701 (* r x00)))
 (let ((?x1065 (* (- 54) ?x701)))
 (let ((?x693 (* s s r00)))
 (let ((?x694 (* 4 ?x693)))
 (let ((?x958 (* (- 15) ?x633)))
 (let ((?x593 (* (- 54) ?x564)))
 (let ((?x606 (* 24 ?x468)))
 (let ((?x1121 (+ ?x143 ?x1029 (* (- 24) (* r s)) (* 24 (* r s00)) ?x606 ?x593 ?x611 (* 54 (* r x)) (* 36 (* r x r00)) ?x906 ?x958 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1042 ?x694 ?x1065 ?x738 (* 12 (* s s00)) (* (- 24) (* s r00)) ?x796 (* (- 2) (* s s00 r00)) ?x848 (* 2 (* r s s)) ?x856 (* (- 4) (* r s00 s00)) ?x932 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) ?x1115)))
 (let (($x1126 (= ?x1121 0)))
 (let ((?x690 (* 6 ?x689)))
 (let ((?x646 (* (- 4) ?x633)))
 (let ((?x588 (* 2 ?x587)))
 (let ((?x578 (* (- 18) ?x564)))
 (let ((?x583 (* 9 ?x468)))
 (let ((?x420 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x787 (+ ?x47 ?x420 (* (- 9) (* r s)) (* 9 (* r s00)) ?x583 ?x578 ?x588 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x607) ?x646 (* 18 (* x r00)) ?x690 (* (- 18) ?x701) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x794 (= ?x787 0)))
 (let ((?x511 (* r00 r00 r00)))
 (let ((?x512 (* 12 ?x511)))
 (let ((?x546 (* (- 6) ?x468)))
 (let ((?x543 (* (- 6) x00)))
 (let ((?x542 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x541 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x547 (+ ?x43 ?x541 ?x56 ?x44 ?x542 ?x543 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x546 ?x512)))
 (let (($x548 (= ?x547 0)))
 (let (($x376 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x343)) 0)))
 (let (($x745 (and $x376 $x548 $x794 $x1126 $x1422 (not (= ?x5073 (- 18))))))
 (let ((?x2989 (+ 3 s ?x214)))
 (let ((?x584 (+ x ?x322)))
 (let ((?x6530 (* r00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)))
 (let ((?x1289 (+ (* 24 (* s00 ?x1427 ?x1427 ?x1427)) (* 12 (* s00 ?x1427 ?x1427 ?x2989)) (* 24 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 3) (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* 15 (* s00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 2 (* r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 24) (* r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 2) (* r00 s00 ?x1427 ?x1427 ?x2989)) (* 2 (* s00 ?x1427 ?x1427 ?x1427 ?x2989)) (* 9 (* ?x1427 ?x1427 ?x2989)) (* (- 4) (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* 6 (* ?x1427 ?x1427 ?x584 ?x2989)) (* 54 (* x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 9) (* s00 ?x1427 ?x1427)) (* (- 2) (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* (- 4) (* s00 s00 ?x1427 ?x1427 ?x1427)) (* (- 9) (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 24) (* r00 ?x1427 ?x1427 ?x2989)) (* (- 6) (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989 ?x2989)) (* (- 2) (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 24 (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 2) (* r00 s00 s00 ?x1427 ?x1427)) (* 2 (* ?x1427 ?x1427 ?x1427 ?x2989 ?x2989)) (* 4 (* s00 s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 54) (* r00 x00 ?x1427 ?x1427)) (* 54 (* r00 ?x1427 ?x1427 ?x584)) (* 36 (* r00 x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 36 (* r00 r00 s00 ?x1427 ?x1427)) (* 36 (* r00 ?x1427 ?x1427 ?x1427 ?x584)) (* (- 54) (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* (- 54) (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* (- 36) (* r00 x00 ?x1427 ?x1427 ?x1427)) (* (- 6) (* s00 ?x1427 ?x1427 ?x584)) (* 3 (* ?x1427 ?x1427 ?x2989 ?x2989)) (* (- 15) (* s00 s00 ?x1427 ?x1427)) (* (- 12) (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 6) (* x00 ?x1427 ?x1427 ?x2989)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x2989)) (* 6 (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* 2 (* r00 s00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 9 (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x584)) (* (- 24) (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 6) (* s00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 54) (* x00 ?x1427 ?x1427 ?x1427)) (* 24 (* r00 s00 ?x1427 ?x1427)) (* 54 (* ?x1427 ?x1427 ?x1427 ?x584)) (* 54 (* r00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* 6 (* x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 36) (* r00 r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 6 (* s00 x00 ?x1427 ?x1427)) (* (- 36) (* r00 r00 x00 ?x1427 ?x1427)) (* 36 (* r00 r00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 4 (* r00 ?x1427 ?x1427 ?x2989 ?x2989)) (* (- 24) (* ?x1427 ?x1427 ?x1427 ?x2989)) (* (- 36) ?x6530))))
 (let ((?x3832 (* 108 ?x1390)))
 (let ((?x3771 (* (- 9) s)))
 (let ((?x4448 (* r00 r00 s00)))
 (let ((?x3749 (* (- 36) ?x4448)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3696 (* 51 ?x633)))
 (let ((?x3477 (* r00 r00 s)))
 (let ((?x4702 (* 36 ?x3477)))
 (let ((?x3641 (* 16 ?x1228)))
 (let ((?x3584 (* (- 108) ?x847)))
 (let ((?x4605 (* (- 432) ?x928)))
 (let ((?x3994 (* 108 ?x564)))
 (let ((?x3842 (+ (* 216 (* r00 s00 x00)) ?x3994 (* (- 54) (* r00 s00)) (* 15 ?x587) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4605 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3584 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3641 (* (- 108) (* x s)) ?x4702 ?x3696 (* (- 108) (* r00 x)) ?x137 ?x3749 ?x3771 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3832)))
 (let (($x3850 (= ?x3842 0)))
 (let ((?x3275 (* 15 ?x633)))
 (let ((?x3204 (* (- 3) ?x587)))
 (let ((?x5781 (* 54 ?x564)))
 (let ((?x5772 (+ (* 24 (* s r)) ?x5781 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) ?x3204 (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3263 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4702 ?x3274 ?x3275 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3749 (* 54 (* x00 r)) ?x3771 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x1048 (* 4 ?x633)))
 (let ((?x4090 (* 18 ?x564)))
 (let ((?x532 (+ (* 9 (* s r)) ?x4090 (* (- 9) (* r00 s00)) (* (- 2) ?x587) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3477) ?x1048 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x4448) (* 18 (* x00 r)) ?x541 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x4169 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x541 ?x542 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x543 ?x512)))
 (let (($x2405 (= (+ s00 ?x322 (* 3 (* r r)) (* (- 3) ?x343)) 0)))
 (let (($x1271 (and $x2405 (= ?x4169 0) (= ?x532 0) (= ?x5772 0) $x3850 (not (= ?x1289 0)))))
 (rewrite (= $x1271 $x745))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x6632 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x2989 (+ 3 s ?x214)))
 (let ((?x322 (* (- 1) s)))
 (let ((?x584 (+ x ?x322)))
 (let ((?x1427 (+ 1 r)))
 (let ((?x6530 (* r00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)))
 (let ((?x4815 (+ (* (- 24) (* s00 ?x1427 ?x1427 ?x1427)) (* (- 12) (* s00 ?x1427 ?x1427 ?x2989)) (* (- 24) (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 3 (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* (- 15) (* s00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 2) (* r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 24 (* r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 2 (* r00 s00 ?x1427 ?x1427 ?x2989)) (* (- 2) (* s00 ?x1427 ?x1427 ?x1427 ?x2989)) (* (- 9) (* ?x1427 ?x1427 ?x2989)) (* 4 (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* (- 6) (* ?x1427 ?x1427 ?x584 ?x2989)) (* (- 54) (* x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 9 (* s00 ?x1427 ?x1427)) (* 2 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* 4 (* s00 s00 ?x1427 ?x1427 ?x1427)) (* 9 (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 24 (* r00 ?x1427 ?x1427 ?x2989)) (* 6 (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989 ?x2989)) (* 2 (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 24) (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 2 (* r00 s00 s00 ?x1427 ?x1427)) (* (- 2) (* ?x1427 ?x1427 ?x1427 ?x2989 ?x2989)) (* (- 4) (* s00 s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 54 (* r00 x00 ?x1427 ?x1427)) (* (- 54) (* r00 ?x1427 ?x1427 ?x584)) (* (- 36) (* r00 x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 36) (* r00 r00 s00 ?x1427 ?x1427)) (* (- 36) (* r00 ?x1427 ?x1427 ?x1427 ?x584)) (* 54 (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* 54 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* 36 (* r00 x00 ?x1427 ?x1427 ?x1427)) (* 6 (* s00 ?x1427 ?x1427 ?x584)) (* (- 3) (* ?x1427 ?x1427 ?x2989 ?x2989)) (* 15 (* s00 s00 ?x1427 ?x1427)) (* 12 (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 6 (* x00 ?x1427 ?x1427 ?x2989)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x2989)) (* (- 6) (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* (- 2) (* r00 s00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 9) (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x584)) (* 24 (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 6 (* s00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 54 (* x00 ?x1427 ?x1427 ?x1427)) (* (- 24) (* r00 s00 ?x1427 ?x1427)) (* (- 54) (* ?x1427 ?x1427 ?x1427 ?x584)) (* (- 54) (* r00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* (- 6) (* x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 36 (* r00 r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 6) (* s00 x00 ?x1427 ?x1427)) (* 36 (* r00 r00 x00 ?x1427 ?x1427)) (* (- 36) (* r00 r00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 4) (* r00 ?x1427 ?x1427 ?x2989 ?x2989)) (* 24 (* ?x1427 ?x1427 ?x1427 ?x2989)) (* 36 ?x6530))))
 (let ((?x1390 (* x00 x00)))
 (let ((?x3832 (* 108 ?x1390)))
 (let ((?x3771 (* (- 9) s)))
 (let ((?x4448 (* r00 r00 s00)))
 (let ((?x3749 (* (- 36) ?x4448)))
 (let ((?x137 (* 9 s00)))
 (let ((?x633 (* s00 s00)))
 (let ((?x3696 (* 51 ?x633)))
 (let ((?x3477 (* r00 r00 s)))
 (let ((?x4702 (* 36 ?x3477)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x3641 (* 16 ?x1228)))
 (let ((?x847 (* s00 x00)))
 (let ((?x3584 (* (- 108) ?x847)))
 (let ((?x928 (* r00 r00 r00 x00)))
 (let ((?x4605 (* (- 432) ?x928)))
 (let ((?x564 (* r00 x00)))
 (let ((?x3994 (* 108 ?x564)))
 (let ((?x3842 (+ (* 216 (* r00 s00 x00)) ?x3994 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4605 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3584 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3641 (* (- 108) (* x s)) ?x4702 ?x3696 (* (- 108) (* r00 x)) ?x137 ?x3749 ?x3771 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3832)))
 (let (($x3850 (= ?x3842 0)))
 (let ((?x2437 (* r00 s)))
 (let ((?x6846 (* (- 24) ?x2437)))
 (let ((?x143 (* 9 s)))
 (let ((?x1029 (* (- 9) s00)))
 (let ((?x958 (* (- 15) ?x633)))
 (let ((?x919 (* r00 r00 x00)))
 (let ((?x932 (* (- 36) ?x919)))
 (let ((?x6804 (* (- 36) ?x3477)))
 (let ((?x848 (* 6 ?x847)))
 (let ((?x2479 (* r00 s00 s00)))
 (let ((?x6840 (* (- 2) ?x2479)))
 (let ((?x3033 (* s00 x)))
 (let ((?x6812 (* (- 6) ?x3033)))
 (let ((?x587 (* s s)))
 (let ((?x611 (* 3 ?x587)))
 (let ((?x593 (* (- 54) ?x564)))
 (let ((?x3426 (+ (* (- 24) (* s r)) ?x593 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x611 (* 54 (* x r)) ?x6812 (* 4 (* r00 s s)) ?x6840 (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x848 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) ?x6804 ?x932 ?x958 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1029 (* 36 ?x4448) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) ?x6846 (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x420 (* (- 3) s00)))
 (let ((?x646 (* (- 4) ?x633)))
 (let ((?x588 (* 2 ?x587)))
 (let ((?x578 (* (- 18) ?x564)))
 (let ((?x533 (+ (* (- 9) (* s r)) ?x578 (* 9 (* r00 s00)) ?x588 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3477) ?x646 (* 18 (* r00 x)) ?x420 (* 6 ?x4448) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2437) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2699 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x420 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2405 (= (+ s00 ?x322 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2405 (= ?x2699 0) (= ?x533 0) (= ?x3426 0) $x3850 (not (= ?x4815 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1782 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x2989 (+ 3 s ?x214)))
 (let ((?x322 (* (- 1) s)))
 (let ((?x584 (+ x ?x322)))
 (let ((?x1427 (+ 1 r)))
 (let ((?x6530 (* r00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)))
 (let ((?x1289 (+ (* 24 (* s00 ?x1427 ?x1427 ?x1427)) (* 12 (* s00 ?x1427 ?x1427 ?x2989)) (* 24 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 3) (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* 15 (* s00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 2 (* r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 24) (* r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 2) (* r00 s00 ?x1427 ?x1427 ?x2989)) (* 2 (* s00 ?x1427 ?x1427 ?x1427 ?x2989)) (* 9 (* ?x1427 ?x1427 ?x2989)) (* (- 4) (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* 6 (* ?x1427 ?x1427 ?x584 ?x2989)) (* 54 (* x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 9) (* s00 ?x1427 ?x1427)) (* (- 2) (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* (- 4) (* s00 s00 ?x1427 ?x1427 ?x1427)) (* (- 9) (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 24) (* r00 ?x1427 ?x1427 ?x2989)) (* (- 6) (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989 ?x2989)) (* (- 2) (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 24 (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 2) (* r00 s00 s00 ?x1427 ?x1427)) (* 2 (* ?x1427 ?x1427 ?x1427 ?x2989 ?x2989)) (* 4 (* s00 s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 54) (* r00 x00 ?x1427 ?x1427)) (* 54 (* r00 ?x1427 ?x1427 ?x584)) (* 36 (* r00 x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 36 (* r00 r00 s00 ?x1427 ?x1427)) (* 36 (* r00 ?x1427 ?x1427 ?x1427 ?x584)) (* (- 54) (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* (- 54) (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* (- 36) (* r00 x00 ?x1427 ?x1427 ?x1427)) (* (- 6) (* s00 ?x1427 ?x1427 ?x584)) (* 3 (* ?x1427 ?x1427 ?x2989 ?x2989)) (* (- 15) (* s00 s00 ?x1427 ?x1427)) (* (- 12) (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 6) (* x00 ?x1427 ?x1427 ?x2989)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x2989)) (* 6 (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* 2 (* r00 s00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 9 (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x584)) (* (- 24) (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 6) (* s00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 54) (* x00 ?x1427 ?x1427 ?x1427)) (* 24 (* r00 s00 ?x1427 ?x1427)) (* 54 (* ?x1427 ?x1427 ?x1427 ?x584)) (* 54 (* r00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* 6 (* x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 36) (* r00 r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 6 (* s00 x00 ?x1427 ?x1427)) (* (- 36) (* r00 r00 x00 ?x1427 ?x1427)) (* 36 (* r00 r00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 4 (* r00 ?x1427 ?x1427 ?x2989 ?x2989)) (* (- 24) (* ?x1427 ?x1427 ?x1427 ?x2989)) (* (- 36) ?x6530))))
 (let ((?x1390 (* x00 x00)))
 (let ((?x3832 (* 108 ?x1390)))
 (let ((?x3771 (* (- 9) s)))
 (let ((?x4448 (* r00 r00 s00)))
 (let ((?x3749 (* (- 36) ?x4448)))
 (let ((?x137 (* 9 s00)))
 (let ((?x633 (* s00 s00)))
 (let ((?x3696 (* 51 ?x633)))
 (let ((?x3477 (* r00 r00 s)))
 (let ((?x4702 (* 36 ?x3477)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x3641 (* 16 ?x1228)))
 (let ((?x847 (* s00 x00)))
 (let ((?x3584 (* (- 108) ?x847)))
 (let ((?x928 (* r00 r00 r00 x00)))
 (let ((?x4605 (* (- 432) ?x928)))
 (let ((?x564 (* r00 x00)))
 (let ((?x3994 (* 108 ?x564)))
 (let ((?x3842 (+ (* 216 (* r00 s00 x00)) ?x3994 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4605 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3584 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3641 (* (- 108) (* x s)) ?x4702 ?x3696 (* (- 108) (* r00 x)) ?x137 ?x3749 ?x3771 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3832)))
 (let (($x3850 (= ?x3842 0)))
 (let ((?x3275 (* 15 ?x633)))
 (let ((?x919 (* r00 r00 x00)))
 (let ((?x3274 (* 36 ?x919)))
 (let ((?x3263 (* (- 6) ?x847)))
 (let ((?x587 (* s s)))
 (let ((?x3204 (* (- 3) ?x587)))
 (let ((?x5781 (* 54 ?x564)))
 (let ((?x5772 (+ (* 24 (* s r)) ?x5781 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) ?x3204 (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3263 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x4702 ?x3274 ?x3275 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3749 (* 54 (* x00 r)) ?x3771 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x541 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1048 (* 4 ?x633)))
 (let ((?x4090 (* 18 ?x564)))
 (let ((?x532 (+ (* 9 (* s r)) ?x4090 (* (- 9) (* r00 s00)) (* (- 2) ?x587) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3477) ?x1048 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x4448) (* 18 (* x00 r)) ?x541 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x511 (* r00 r00 r00)))
 (let ((?x512 (* 12 ?x511)))
 (let ((?x543 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x542 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x4169 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x541 ?x542 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x543 ?x512)))
 (let (($x2405 (= (+ s00 ?x322 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1271 (and $x2405 (= ?x4169 0) (= ?x532 0) (= ?x5772 0) $x3850 (not (= ?x1289 0)))))
 (let ((?x4815 (+ (* (- 24) (* s00 ?x1427 ?x1427 ?x1427)) (* (- 12) (* s00 ?x1427 ?x1427 ?x2989)) (* (- 24) (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 3 (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* (- 15) (* s00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 2) (* r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 24 (* r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 2 (* r00 s00 ?x1427 ?x1427 ?x2989)) (* (- 2) (* s00 ?x1427 ?x1427 ?x1427 ?x2989)) (* (- 9) (* ?x1427 ?x1427 ?x2989)) (* 4 (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* (- 6) (* ?x1427 ?x1427 ?x584 ?x2989)) (* (- 54) (* x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 9 (* s00 ?x1427 ?x1427)) (* 2 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* 4 (* s00 s00 ?x1427 ?x1427 ?x1427)) (* 9 (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 24 (* r00 ?x1427 ?x1427 ?x2989)) (* 6 (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989 ?x2989)) (* 2 (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 24) (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 2 (* r00 s00 s00 ?x1427 ?x1427)) (* (- 2) (* ?x1427 ?x1427 ?x1427 ?x2989 ?x2989)) (* (- 4) (* s00 s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 54 (* r00 x00 ?x1427 ?x1427)) (* (- 54) (* r00 ?x1427 ?x1427 ?x584)) (* (- 36) (* r00 x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 36) (* r00 r00 s00 ?x1427 ?x1427)) (* (- 36) (* r00 ?x1427 ?x1427 ?x1427 ?x584)) (* 54 (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* 54 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* 36 (* r00 x00 ?x1427 ?x1427 ?x1427)) (* 6 (* s00 ?x1427 ?x1427 ?x584)) (* (- 3) (* ?x1427 ?x1427 ?x2989 ?x2989)) (* 15 (* s00 s00 ?x1427 ?x1427)) (* 12 (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 6 (* x00 ?x1427 ?x1427 ?x2989)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x2989)) (* (- 6) (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* (- 2) (* r00 s00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 9) (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x584)) (* 24 (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 6 (* s00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 54 (* x00 ?x1427 ?x1427 ?x1427)) (* (- 24) (* r00 s00 ?x1427 ?x1427)) (* (- 54) (* ?x1427 ?x1427 ?x1427 ?x584)) (* (- 54) (* r00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* (- 6) (* x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 36 (* r00 r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 6) (* s00 x00 ?x1427 ?x1427)) (* 36 (* r00 r00 x00 ?x1427 ?x1427)) (* (- 36) (* r00 r00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 4) (* r00 ?x1427 ?x1427 ?x2989 ?x2989)) (* 24 (* ?x1427 ?x1427 ?x1427 ?x2989)) (* 36 ?x6530))))
 (let ((?x2437 (* r00 s)))
 (let ((?x6846 (* (- 24) ?x2437)))
 (let ((?x143 (* 9 s)))
 (let ((?x1029 (* (- 9) s00)))
 (let ((?x958 (* (- 15) ?x633)))
 (let ((?x932 (* (- 36) ?x919)))
 (let ((?x6804 (* (- 36) ?x3477)))
 (let ((?x848 (* 6 ?x847)))
 (let ((?x2479 (* r00 s00 s00)))
 (let ((?x6840 (* (- 2) ?x2479)))
 (let ((?x3033 (* s00 x)))
 (let ((?x6812 (* (- 6) ?x3033)))
 (let ((?x611 (* 3 ?x587)))
 (let ((?x593 (* (- 54) ?x564)))
 (let ((?x3426 (+ (* (- 24) (* s r)) ?x593 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x611 (* 54 (* x r)) ?x6812 (* 4 (* r00 s s)) ?x6840 (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x848 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) ?x6804 ?x932 ?x958 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1029 (* 36 ?x4448) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) ?x6846 (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x420 (* (- 3) s00)))
 (let ((?x646 (* (- 4) ?x633)))
 (let ((?x588 (* 2 ?x587)))
 (let ((?x578 (* (- 18) ?x564)))
 (let ((?x533 (+ (* (- 9) (* s r)) ?x578 (* 9 (* r00 s00)) ?x588 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3477) ?x646 (* 18 (* r00 x)) ?x420 (* 6 ?x4448) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2437) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2699 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x420 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x511))))
 (let (($x3036 (and $x2405 (= ?x2699 0) (= ?x533 0) (= ?x3426 0) $x3850 (not (= ?x4815 0)))))
 (rewrite (= $x3036 $x1271))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x319 (exists ((r Int) (s Int) (x Int) )(! (let ((?x217 (- x s)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x219 (- (* (- 24) ?x212 ?x212 ?x212 s00) (* 12 ?x212 ?x212 ?x215 s00))))
 (let ((?x222 (+ (- ?x219 (* 24 ?x212 ?x212 ?x212 ?x212 ?x215 ?x215 ?x217 ?x217)) (* 3 ?x212 ?x212 ?x212 ?x215 ?x215 ?x215 ?x217 ?x217))))
 (let ((?x226 (- (- ?x222 (* 15 ?x212 ?x212 ?x212 ?x215 s00 s00 ?x217 ?x217)) (* 2 ?x212 ?x212 ?x212 r00 ?x215 ?x215 s00 ?x217 ?x217))))
 (let ((?x229 (+ ?x226 (* 24 ?x212 ?x212 ?x212 r00 ?x215 s00 ?x217 ?x217) (* 2 ?x212 ?x212 r00 ?x215 s00))))
 (let ((?x233 (- (- ?x229 (* 2 ?x212 ?x212 ?x212 ?x215 s00)) (* 9 ?x212 ?x212 ?x215))))
 (let ((?x238 (- (+ ?x233 (* 4 ?x212 ?x212 ?x212 r00 ?x215 ?x215 ?x215 ?x217 ?x217)) (* 6 ?x212 ?x212 ?x215 ?x217))))
 (let ((?x247 (+ (- ?x238 (* 54 ?x212 ?x212 ?x212 ?x212 ?x215 ?x217 ?x217 x00)) (* 9 ?x212 ?x212 s00) (* 2 ?x212 ?x212 ?x212 ?x212 ?x215 ?x215 ?x215 ?x217 ?x217) (* 4 ?x212 ?x212 ?x212 s00 s00) (* 9 ?x212 ?x212 ?x212 ?x215 ?x215 ?x217 ?x217) (* 24 ?x212 ?x212 r00 ?x215) (* 6 ?x212 ?x212 ?x212 ?x215 ?x215 ?x217 ?x217 ?x217) (* 2 ?x212 ?x212 ?x212 ?x212 ?x215 ?x215 s00 ?x217 ?x217))))
 (let ((?x251 (+ (- ?x247 (* 24 ?x212 ?x212 ?x212 r00 ?x215 ?x215 ?x217 ?x217)) (* 2 ?x212 ?x212 r00 s00 s00))))
 (let ((?x255 (- (- ?x251 (* 2 ?x212 ?x212 ?x212 ?x215 ?x215)) (* 4 ?x212 ?x212 ?x212 ?x212 ?x215 s00 s00 ?x217 ?x217))))
 (let ((?x262 (- (+ ?x255 (* 54 ?x212 ?x212 r00 x00)) (* 54 ?x212 ?x212 r00 ?x217))))
 (let ((?x264 (- (- ?x262 (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x215 ?x217 ?x217 x00)) (* 36 ?x212 ?x212 r00 r00 s00))))
 (let ((?x270 (+ (- ?x264 (* 36 ?x212 ?x212 ?x212 r00 ?x217)) (* 54 ?x212 ?x212 ?x212 r00 ?x215 ?x217 ?x217 ?x217) (* 54 ?x212 ?x212 ?x212 ?x212 ?x215 ?x217 ?x217 ?x217) (* 36 ?x212 ?x212 ?x212 r00 x00) (* 6 ?x212 ?x212 s00 ?x217))))
 (let ((?x277 (+ (- ?x270 (* 3 ?x212 ?x212 ?x215 ?x215)) (* 15 ?x212 ?x212 s00 s00) (* 12 ?x212 ?x212 ?x212 ?x215 ?x215 s00 ?x217 ?x217) (* 6 ?x212 ?x212 ?x215 x00) (* 36 ?x212 ?x212 r00 r00 ?x215))))
 (let ((?x284 (- (- ?x277 (* 6 ?x212 ?x212 ?x212 ?x215 s00 ?x217 ?x217 ?x217)) (* 2 ?x212 ?x212 ?x212 r00 ?x215 s00 s00 ?x217 ?x217))))
 (let ((?x286 (- (- ?x284 (* 9 ?x212 ?x212 ?x212 ?x215 s00 ?x217 ?x217)) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x215 ?x215 ?x217 ?x217))))
 (let ((?x291 (+ (- ?x286 (* 36 ?x212 ?x212 r00 r00 ?x217)) (* 24 ?x212 ?x212 ?x212 ?x212 ?x215 s00 ?x217 ?x217) (* 6 ?x212 ?x212 ?x212 ?x215 s00 ?x217 ?x217 x00) (* 54 ?x212 ?x212 ?x212 x00))))
 (let ((?x296 (- (- ?x291 (* 24 ?x212 ?x212 r00 s00)) (* 54 ?x212 ?x212 ?x212 ?x217))))
 (let ((?x299 (+ (- ?x296 (* 54 ?x212 ?x212 ?x212 r00 ?x215 ?x217 ?x217 x00)) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x215 ?x217 ?x217 ?x217))))
 (let ((?x303 (+ (- ?x299 (* 6 ?x212 ?x212 ?x212 ?x215 ?x215 ?x217 ?x217 x00)) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x215 s00 ?x217 ?x217))))
 (let ((?x307 (+ (- ?x303 (* 6 ?x212 ?x212 s00 x00)) (* 36 ?x212 ?x212 r00 r00 x00))))
 (let ((?x311 (- (- ?x307 (* 36 ?x212 ?x212 ?x212 r00 r00 ?x215 ?x217 ?x217 x00)) (* 4 ?x212 ?x212 r00 ?x215 ?x215))))
 (let ((?x314 (+ ?x311 (* 24 ?x212 ?x212 ?x212 ?x215) (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x215 ?x217 ?x217 ?x217))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x314 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2436 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x2989 (+ 3 s ?x214)))
 (let ((?x322 (* (- 1) s)))
 (let ((?x584 (+ x ?x322)))
 (let ((?x1427 (+ 1 r)))
 (let ((?x6530 (* r00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)))
 (let ((?x4815 (+ (* (- 24) (* s00 ?x1427 ?x1427 ?x1427)) (* (- 12) (* s00 ?x1427 ?x1427 ?x2989)) (* (- 24) (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 3 (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* (- 15) (* s00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 2) (* r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 24 (* r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 2 (* r00 s00 ?x1427 ?x1427 ?x2989)) (* (- 2) (* s00 ?x1427 ?x1427 ?x1427 ?x2989)) (* (- 9) (* ?x1427 ?x1427 ?x2989)) (* 4 (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* (- 6) (* ?x1427 ?x1427 ?x584 ?x2989)) (* (- 54) (* x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 9 (* s00 ?x1427 ?x1427)) (* 2 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989 ?x2989)) (* 4 (* s00 s00 ?x1427 ?x1427 ?x1427)) (* 9 (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 24 (* r00 ?x1427 ?x1427 ?x2989)) (* 6 (* ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989 ?x2989)) (* 2 (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 24) (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 2 (* r00 s00 s00 ?x1427 ?x1427)) (* (- 2) (* ?x1427 ?x1427 ?x1427 ?x2989 ?x2989)) (* (- 4) (* s00 s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 54 (* r00 x00 ?x1427 ?x1427)) (* (- 54) (* r00 ?x1427 ?x1427 ?x584)) (* (- 36) (* r00 x00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 36) (* r00 r00 s00 ?x1427 ?x1427)) (* (- 36) (* r00 ?x1427 ?x1427 ?x1427 ?x584)) (* 54 (* r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* 54 (* ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* 36 (* r00 x00 ?x1427 ?x1427 ?x1427)) (* 6 (* s00 ?x1427 ?x1427 ?x584)) (* (- 3) (* ?x1427 ?x1427 ?x2989 ?x2989)) (* 15 (* s00 s00 ?x1427 ?x1427)) (* 12 (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 6 (* x00 ?x1427 ?x1427 ?x2989)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x2989)) (* (- 6) (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* (- 2) (* r00 s00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 9) (* s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* (- 36) (* r00 r00 ?x1427 ?x1427 ?x584)) (* 24 (* s00 ?x1427 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 6 (* s00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 54 (* x00 ?x1427 ?x1427 ?x1427)) (* (- 24) (* r00 s00 ?x1427 ?x1427)) (* (- 54) (* ?x1427 ?x1427 ?x1427 ?x584)) (* (- 54) (* r00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* 36 (* r00 r00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x584 ?x2989)) (* (- 6) (* x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989 ?x2989)) (* 36 (* r00 r00 s00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 6) (* s00 x00 ?x1427 ?x1427)) (* 36 (* r00 r00 x00 ?x1427 ?x1427)) (* (- 36) (* r00 r00 x00 ?x1427 ?x1427 ?x1427 ?x584 ?x584 ?x2989)) (* (- 4) (* r00 ?x1427 ?x1427 ?x2989 ?x2989)) (* 24 (* ?x1427 ?x1427 ?x1427 ?x2989)) (* 36 ?x6530))))
 (let ((?x1390 (* x00 x00)))
 (let ((?x3832 (* 108 ?x1390)))
 (let ((?x3771 (* (- 9) s)))
 (let ((?x4448 (* r00 r00 s00)))
 (let ((?x3749 (* (- 36) ?x4448)))
 (let ((?x137 (* 9 s00)))
 (let ((?x633 (* s00 s00)))
 (let ((?x3696 (* 51 ?x633)))
 (let ((?x3477 (* r00 r00 s)))
 (let ((?x4702 (* 36 ?x3477)))
 (let ((?x1228 (* s00 s00 s00)))
 (let ((?x3641 (* 16 ?x1228)))
 (let ((?x847 (* s00 x00)))
 (let ((?x3584 (* (- 108) ?x847)))
 (let ((?x928 (* r00 r00 r00 x00)))
 (let ((?x4605 (* (- 432) ?x928)))
 (let ((?x564 (* r00 x00)))
 (let ((?x3994 (* 108 ?x564)))
 (let ((?x3842 (+ (* 216 (* r00 s00 x00)) ?x3994 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4605 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3584 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3641 (* (- 108) (* x s)) ?x4702 ?x3696 (* (- 108) (* r00 x)) ?x137 ?x3749 ?x3771 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3832)))
 (let (($x3850 (= ?x3842 0)))
 (let ((?x2437 (* r00 s)))
 (let ((?x6846 (* (- 24) ?x2437)))
 (let ((?x143 (* 9 s)))
 (let ((?x1029 (* (- 9) s00)))
 (let ((?x958 (* (- 15) ?x633)))
 (let ((?x919 (* r00 r00 x00)))
 (let ((?x932 (* (- 36) ?x919)))
 (let ((?x6804 (* (- 36) ?x3477)))
 (let ((?x848 (* 6 ?x847)))
 (let ((?x2479 (* r00 s00 s00)))
 (let ((?x6840 (* (- 2) ?x2479)))
 (let ((?x3033 (* s00 x)))
 (let ((?x6812 (* (- 6) ?x3033)))
 (let ((?x587 (* s s)))
 (let ((?x611 (* 3 ?x587)))
 (let ((?x593 (* (- 54) ?x564)))
 (let ((?x3426 (+ (* (- 24) (* s r)) ?x593 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x611 (* 54 (* x r)) ?x6812 (* 4 (* r00 s s)) ?x6840 (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x848 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) ?x6804 ?x932 ?x958 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1029 (* 36 ?x4448) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) ?x6846 (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x420 (* (- 3) s00)))
 (let ((?x646 (* (- 4) ?x633)))
 (let ((?x588 (* 2 ?x587)))
 (let ((?x578 (* (- 18) ?x564)))
 (let ((?x533 (+ (* (- 9) (* s r)) ?x578 (* 9 (* r00 s00)) ?x588 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3477) ?x646 (* 18 (* r00 x)) ?x420 (* 6 ?x4448) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2437) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2699 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x420 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2405 (= (+ s00 ?x322 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3036 (and $x2405 (= ?x2699 0) (= ?x533 0) (= ?x3426 0) $x3850 (not (= ?x4815 0)))))
 (let ((?x217 (- x s)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x219 (- (* (- 24) ?x212 ?x212 ?x212 s00) (* 12 ?x212 ?x212 ?x215 s00))))
 (let ((?x222 (+ (- ?x219 (* 24 ?x212 ?x212 ?x212 ?x212 ?x215 ?x215 ?x217 ?x217)) (* 3 ?x212 ?x212 ?x212 ?x215 ?x215 ?x215 ?x217 ?x217))))
 (let ((?x226 (- (- ?x222 (* 15 ?x212 ?x212 ?x212 ?x215 s00 s00 ?x217 ?x217)) (* 2 ?x212 ?x212 ?x212 r00 ?x215 ?x215 s00 ?x217 ?x217))))
 (let ((?x229 (+ ?x226 (* 24 ?x212 ?x212 ?x212 r00 ?x215 s00 ?x217 ?x217) (* 2 ?x212 ?x212 r00 ?x215 s00))))
 (let ((?x233 (- (- ?x229 (* 2 ?x212 ?x212 ?x212 ?x215 s00)) (* 9 ?x212 ?x212 ?x215))))
 (let ((?x238 (- (+ ?x233 (* 4 ?x212 ?x212 ?x212 r00 ?x215 ?x215 ?x215 ?x217 ?x217)) (* 6 ?x212 ?x212 ?x215 ?x217))))
 (let ((?x247 (+ (- ?x238 (* 54 ?x212 ?x212 ?x212 ?x212 ?x215 ?x217 ?x217 x00)) (* 9 ?x212 ?x212 s00) (* 2 ?x212 ?x212 ?x212 ?x212 ?x215 ?x215 ?x215 ?x217 ?x217) (* 4 ?x212 ?x212 ?x212 s00 s00) (* 9 ?x212 ?x212 ?x212 ?x215 ?x215 ?x217 ?x217) (* 24 ?x212 ?x212 r00 ?x215) (* 6 ?x212 ?x212 ?x212 ?x215 ?x215 ?x217 ?x217 ?x217) (* 2 ?x212 ?x212 ?x212 ?x212 ?x215 ?x215 s00 ?x217 ?x217))))
 (let ((?x251 (+ (- ?x247 (* 24 ?x212 ?x212 ?x212 r00 ?x215 ?x215 ?x217 ?x217)) (* 2 ?x212 ?x212 r00 s00 s00))))
 (let ((?x255 (- (- ?x251 (* 2 ?x212 ?x212 ?x212 ?x215 ?x215)) (* 4 ?x212 ?x212 ?x212 ?x212 ?x215 s00 s00 ?x217 ?x217))))
 (let ((?x262 (- (+ ?x255 (* 54 ?x212 ?x212 r00 x00)) (* 54 ?x212 ?x212 r00 ?x217))))
 (let ((?x264 (- (- ?x262 (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x215 ?x217 ?x217 x00)) (* 36 ?x212 ?x212 r00 r00 s00))))
 (let ((?x270 (+ (- ?x264 (* 36 ?x212 ?x212 ?x212 r00 ?x217)) (* 54 ?x212 ?x212 ?x212 r00 ?x215 ?x217 ?x217 ?x217) (* 54 ?x212 ?x212 ?x212 ?x212 ?x215 ?x217 ?x217 ?x217) (* 36 ?x212 ?x212 ?x212 r00 x00) (* 6 ?x212 ?x212 s00 ?x217))))
 (let ((?x277 (+ (- ?x270 (* 3 ?x212 ?x212 ?x215 ?x215)) (* 15 ?x212 ?x212 s00 s00) (* 12 ?x212 ?x212 ?x212 ?x215 ?x215 s00 ?x217 ?x217) (* 6 ?x212 ?x212 ?x215 x00) (* 36 ?x212 ?x212 r00 r00 ?x215))))
 (let ((?x284 (- (- ?x277 (* 6 ?x212 ?x212 ?x212 ?x215 s00 ?x217 ?x217 ?x217)) (* 2 ?x212 ?x212 ?x212 r00 ?x215 s00 s00 ?x217 ?x217))))
 (let ((?x286 (- (- ?x284 (* 9 ?x212 ?x212 ?x212 ?x215 s00 ?x217 ?x217)) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x215 ?x215 ?x217 ?x217))))
 (let ((?x291 (+ (- ?x286 (* 36 ?x212 ?x212 r00 r00 ?x217)) (* 24 ?x212 ?x212 ?x212 ?x212 ?x215 s00 ?x217 ?x217) (* 6 ?x212 ?x212 ?x212 ?x215 s00 ?x217 ?x217 x00) (* 54 ?x212 ?x212 ?x212 x00))))
 (let ((?x296 (- (- ?x291 (* 24 ?x212 ?x212 r00 s00)) (* 54 ?x212 ?x212 ?x212 ?x217))))
 (let ((?x299 (+ (- ?x296 (* 54 ?x212 ?x212 ?x212 r00 ?x215 ?x217 ?x217 x00)) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x215 ?x217 ?x217 ?x217))))
 (let ((?x303 (+ (- ?x299 (* 6 ?x212 ?x212 ?x212 ?x215 ?x215 ?x217 ?x217 x00)) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x215 s00 ?x217 ?x217))))
 (let ((?x307 (+ (- ?x303 (* 6 ?x212 ?x212 s00 x00)) (* 36 ?x212 ?x212 r00 r00 x00))))
 (let ((?x311 (- (- ?x307 (* 36 ?x212 ?x212 ?x212 r00 r00 ?x215 ?x217 ?x217 x00)) (* 4 ?x212 ?x212 r00 ?x215 ?x215))))
 (let ((?x314 (+ ?x311 (* 24 ?x212 ?x212 ?x212 ?x215) (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x215 ?x217 ?x217 ?x217))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x318 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x314 0))))))
 (rewrite (= $x318 $x3036)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x320 (asserted $x319)))
 (let ((@x4078 (mp (mp @x320 (quant-intro (proof-bind ?x2436) (= $x319 $x6632)) $x6632) (rewrite (= $x6632 $x6632)) $x6632)))
 (let ((@x5464 (mp (mp @x4078 (quant-intro (proof-bind ?x1782) (= $x6632 $x1294)) $x1294) (quant-intro (proof-bind ?x5091) (= $x1294 $x5083)) $x5083)))
 (let ((@x4324 (mp (mp~ @x5464 (sk (~ $x5083 $x4779)) $x4779) (rewrite (= $x4779 $x4334)) $x4334)))
 (let ((@x4903 (and-elim @x4324 $x4047)))
 (let ((@x4931 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4047) $x3650)) @x4903 $x3650)))
 (let (($x3649 (>= ?x4066 0)))
 (let ((@x3890 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4047) $x3649)) @x4903 $x3649)))
 (let (($x3801 (<= ?x4681 0)))
 (let ((@x2647 (and-elim @x4324 $x4680)))
 (let ((@x1884 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4680) $x3801)) @x2647 $x3801)))
 (let (($x3888 (>= ?x4681 0)))
 (let ((@x5837 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4680) $x3888)) @x2647 $x3888)))
 (let (($x3934 (<= ?x3700 0)))
 (let ((@x4902 (and-elim @x4324 $x3701)))
 (let ((@x3808 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3701) $x3934)) @x4902 $x3934)))
 (let (($x6017 (>= ?x3700 0)))
 (let ((@x5744 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3701) $x6017)) @x4902 $x6017)))
 (let (($x4046 (<= ?x4341 0)))
 (let ((@x4901 (and-elim @x4324 $x4346)))
 (let ((@x5346 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4346) $x4046)) @x4901 $x4046)))
 (let (($x3929 (>= ?x4341 0)))
 (let ((@x5740 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4346) $x3929)) @x4901 $x3929)))
 (let (($x6015 (<= ?x4909 0)))
 (let ((@x5603 (and-elim @x4324 $x4908)))
 (let ((@x5761 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4908) $x6015)) @x5603 $x6015)))
 (let (($x6280 (>= ?x4909 0)))
 (let ((@x5352 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4908) $x6280)) @x5603 $x6280)))
 (let (($x5793 (not (<= ?x4208 18))))
 (let (($x3844 (>= ?x4208 18)))
 (let ((@x5751 ((_ th-lemma arith) (hypothesis (not $x3844)) @x5744 @x3808 @x5352 @x5761 @x5352 @x5761 @x5837 @x1884 @x5744 @x3808 @x5837 @x1884 @x5744 @x3808 @x5352 @x5761 @x3890 @x4931 @x5837 @x1884 @x5744 @x3808 @x5744 @x3808 @x5352 @x5761 @x5837 @x1884 @x3890 @x4931 @x5837 @x1884 @x3890 @x4931 @x5744 @x3808 @x5744 @x3808 @x5837 @x1884 @x3890 @x4931 @x5740 @x5346 @x5837 @x1884 @x5744 @x3808 @x5837 @x1884 @x3890 @x4931 false)))
 (let ((@x3858 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2837 $x5793 (not $x3844))) (and-elim @x4324 $x3517) (or $x5793 (not $x3844)))))
 ((_ th-lemma arith) (unit-resolution @x3858 (lemma @x5751 $x3844) $x5793) @x5744 @x3808 @x5352 @x5761 @x5352 @x5761 @x5837 @x1884 @x5744 @x3808 @x5837 @x1884 @x5744 @x3808 @x5352 @x5761 @x3890 @x4931 @x5837 @x1884 @x5744 @x3808 @x5744 @x3808 @x5352 @x5761 @x5837 @x1884 @x3890 @x4931 @x5837 @x1884 @x3890 @x4931 @x5744 @x3808 @x5744 @x3808 @x5837 @x1884 @x3890 @x4931 @x5740 @x5346 @x5837 @x1884 @x5744 @x3808 @x5837 @x1884 @x3890 @x4931 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        33
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           8
 :arith-grobner             2
 :arith-max-min             1078
 :arith-nonlinear-bounds    26
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              6
 :arith-row-summations      15
 :arith-tableau-max-columns 206
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                8.46
 :memory                    3.95
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                1642404152
 :num-checks                1
 :propagations              12
 :rlimit-count              1770215
 :time                      1.16
 :total-time                1.18)
