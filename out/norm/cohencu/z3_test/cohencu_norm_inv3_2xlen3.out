unsat
((set-logic NIA)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(declare-fun z!1 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x1280 (* (- 72) y!2)))
 (let ((?x2070 (* y00 z!1)))
 (let ((?x1286 (* (- 12) ?x2070)))
 (let ((?x1365 (* z!1 y!2)))
 (let ((?x1185 (* 12 ?x1365)))
 (let ((?x1257 (* (- 108) x!3)))
 (let ((?x905 (* x!3 z!1)))
 (let ((?x1177 (* 18 ?x905)))
 (let ((?x786 (* z00 y00 y!2)))
 (let ((?x770 (* z00 y00 y00)))
 (let ((?x1184 (* (- 18) (* x00 z!1))))
 (let ((?x594 (* z00 y00)))
 (let ((?x710 (* 6 ?x594)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x769 (+ ?x67 ?x74 (* 18 (* y00 x00)) ?x710 (* (- 36) (* y00 y!2)) (* 36 (* y00 y00)) ?x1184 ?x770 ?x786 (* (- 3) (* z00 z00 y00)) ?x1177 (* (- 18) (* x00 y!2)) (* (- 3) (* z00 z00 x00)) ?x1257 ?x1185 (* 18 (* x!3 y!2)) (* (- 6) (* z00 y!2)) (* (- 3) (* z00 x00 z!1)) ?x1286 (* (- 18) (* y00 x!3)) (* (- 1) (* y00 z!1 y!2)) (* (- 2) (* z00 y!2 y!2)) (* 3 (* z00 x!3 z!1)) (* 2 (* y00 y00 z!1)) (* 3 (* z00 z00 y!2)) (* (- 1) (* z!1 y!2 y!2)) (* 3 (* z00 z00 x!3)) ?x1280)))
 (let (($x1180 (<= ?x769 0)))
 (let (($x3396 (= ?x769 0)))
 (let ((?x3051 (+ x!3 y!2)))
 (let ((?x3009 (+ z!1 y!2)))
 (let ((?x1165 (+ 6 z!1)))
 (let ((?x3048 (+ 1 n!0)))
 (let ((?x3429 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x3331 (* ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x3218 (* z00 z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x3155 (* y00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x3131 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x3108 (* z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x3107 (* z00 z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x3102 (* z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x3071 (* y00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x3047 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2731 (* (- 6) (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051))))
 (let ((?x2962 (* ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2897 (* y00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2894 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1609 (* 72 (* y00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x1380 (* 6 (* z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x2859 (* y00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x2846 (* ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x641 (* 108 (* x00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x2738 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x2737 (* z00 z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2715 (* y00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2131 (* 18 (* y00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x2478 (* z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051)))
 (let ((?x2432 (* z00 z00 z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x2358 (* z00 z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2327 (* z00 z00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051)))
 (let ((?x745 (* (- 6) (* z00 z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x2310 (* x00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2300 (* y00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2292 (* y00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051)))
 (let ((?x2273 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2247 (* ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051)))
 (let ((?x2210 (* y00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051)))
 (let ((?x2192 (* z00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051)))
 (let ((?x2124 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2052 (* ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2024 (* x00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x1999 (* z00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051)))
 (let ((?x1958 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1838 (* 6 (* z00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x2078 (* (- 18) (* y00 z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x2269 (* (- 12) (* y00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x1654 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1465 (* (- 1) (* z00 z00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x1585 (* z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1534 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1287 (* (- 6) (* ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x1293 (* 6 (* ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x1448 (* y00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x1421 (* z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x1420 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x1382 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1319 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1294 (* y00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1268 (* y00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x3066 (* 12 (* y00 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x1223 (* y00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1127 (* y00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051)))
 (let ((?x727 (* (- 108) (* ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051))))
 (let ((?x1106 (* ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x1103 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x989 (* (- 72) (* ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x946 (* ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x876 (* y00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x851 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x816 (* z00 z00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x810 (* z00 z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x762 (* z00 z00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x759 (* x00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x665 (* y00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x659 (* ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x657 (* z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x597 (* y00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)))
 (let ((?x596 (* x00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x490 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x448 (* ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051)))
 (let ((?x2206 (* (- 6) (* z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051))))
 (let ((?x435 (* y00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x404 (* x00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051)))
 (let ((?x1065 (+ (* 108 ?x404) (* (- 12) ?x435) ?x2206 (* (- 72) ?x448) ?x490 (* (- 108) (* x00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) (* (- 108) ?x596) (* 72 ?x597) (* 72 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)) (* (- 6) ?x657) (* 108 ?x659) (* (- 12) ?x665) (* (- 108) ?x759) (* (- 1) ?x762) ?x810 (* (- 1) ?x816) (* (- 108) (* x00 ?x3048 ?x3048 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)) (* (- 72) ?x851) (* 18 ?x876) (* (- 6) (* z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) (* 108 ?x946) (* 6 (* z00 z00 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) ?x989 (* 108 ?x1103) (* (- 108) ?x1106) ?x727 (* 72 ?x1127) (* 18 ?x1223) (* (- 108) (* x00 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) ?x3066 (* 18 ?x1268) (* (- 12) ?x1294) (* (- 108) ?x1319) (* 72 ?x1382) (* (- 6) ?x1420) (* 6 ?x1421) (* (- 18) ?x1448) ?x1293 (* (- 72) (* y00 ?x3048 ?x3048 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)) ?x1287 (* 6 ?x1534) (* (- 6) ?x1585) (* 72 (* ?x3048 ?x3048 ?x1165 ?x1165 ?x3009 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051)) ?x1465 (* (- 12) (* y00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) ?x1654 (* (- 72) (* y00 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) (* 108 (* ?x3048 ?x3048 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)) ?x2269 (* 108 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)) ?x2078 ?x1838 (* (- 6) ?x1958) (* (- 1) ?x1999) (* 108 ?x2024) (* (- 6) ?x2052) ?x2124 (* (- 72) (* y00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) (* (- 6) ?x2192) (* (- 18) ?x2210) (* (- 1) (* z00 z00 z00 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) (* 6 ?x2247) (* 6 ?x2273) (* 12 ?x2292) (* (- 72) ?x2300) (* (- 108) ?x2310) ?x745 ?x2327 (* (- 1) ?x2358) ?x2432 (* 6 ?x2478) ?x2131 (* (- 72) ?x2715) (* (- 1) ?x2737) (* 6 ?x2738) ?x641 (* 18 (* y00 z00 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) (* (- 6) ?x2846) (* 12 ?x2859) ?x1380 (* 72 (* ?x1165 ?x1165 ?x1165 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)) ?x1609 ?x2894 (* 18 ?x2897) (* (- 6) (* ?x1165 ?x1165 ?x1165 ?x1165 ?x3009 ?x3051 ?x3051 ?x3051 ?x3051)) (* 72 ?x2962) ?x2731 (* 6 ?x3047) (* 108 (* ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)) (* (- 12) ?x3071) (* (- 6) ?x3102) (* (- 1) ?x3107) (* (- 6) ?x3108) (* 6 ?x3131) (* (- 72) ?x3155) ?x3218 (* z00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3009 ?x3009 ?x3051 ?x3051 ?x3051) (* 72 ?x3331) (* (- 1) ?x3429))))
 (let (($x1081 (= ?x1065 0)))
 (let (($x1084 (not $x1081)))
 (let ((?x3171 (* y!2 y!2)))
 (let ((?x1621 (* 24 ?x3171)))
 (let ((?x2035 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x1398 (* x!3 y!2)))
 (let ((?x1164 (* 108 ?x1398)))
 (let ((?x1379 (* 108 (* x00 x00))))
 (let ((?x1276 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1272 (* z00 z00 z00 y00)))
 (let ((?x1182 (* (- 36) (* z00 y00 x00))))
 (let ((?x1067 (* 16 (* y00 y00 y00))))
 (let ((?x981 (* z00 z00 x00)))
 (let ((?x1232 (* (- 18) ?x981)))
 (let ((?x853 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x795 (* z00 z00 y00)))
 (let ((?x1333 (* (- 10) ?x795)))
 (let ((?x805 (* (- 12) ?x770)))
 (let ((?x661 (* y00 y00)))
 (let ((?x1132 (* 96 ?x661)))
 (let ((?x631 (* z00 x00)))
 (let ((?x549 (* 36 ?x631)))
 (let ((?x959 (* 24 ?x594)))
 (let ((?x541 (* y00 x00)))
 (let ((?x532 (* 216 ?x541)))
 (let ((?x1597 (* 108 (* x!3 x!3))))
 (let ((?x1137 (+ ?x1597 ?x532 ?x959 (* (- 120) (* y00 y!2)) ?x549 ?x1132 (* (- 12) (* y00 y!2 y!2)) (* (- 216) (* x00 x!3)) ?x805 (* 18 ?x786) ?x1333 ?x853 (* (- 108) (* x00 y!2)) ?x1232 ?x1067 ?x1182 ?x1272 ?x1276 ?x1379 ?x1164 (* (- 24) (* z00 y!2)) (* (- 36) (* z00 x!3)) ?x2035 (* (- 216) (* y00 x!3)) (* (- 6) (* z00 y!2 y!2)) (* 36 (* z00 y00 x!3)) (* 10 (* z00 z00 y!2)) (* z00 z00 y!2 y!2) (* (- 1) (* z00 z00 z00 y!2)) (* (- 2) (* z00 z00 z00 x!3)) (* 18 (* z00 z00 x!3)) ?x1621)))
 (let (($x1125 (= ?x1137 0)))
 (let ((?x2841 (* z00 z00 y!2)))
 (let ((?x869 (* (- 6) ?x594)))
 (let ((?x1706 (+ ?x67 ?x74 ?x869 (* (- 12) (* y00 y!2)) (* (- 18) ?x631) (* 24 ?x661) ?x1184 (* (- 1) ?x795) ?x1177 ?x1257 ?x1185 (* z00 y00 z!1) (* 6 (* z00 y!2)) (* 18 (* z00 x!3)) ?x1286 (* (- 1) (* z00 z!1 y!2)) ?x2841 (* (- 12) ?x3171) ?x1280)))
 (let (($x1956 (= ?x1706 0)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1462 (+ ?x67 ?x55 ?x74 (* (- 6) (* z00 z00)) (* (- 18) ?x594) ?x1257 (* (- 1) (* z00 z00 z!1)) (* 6 ?x1365) (* 6 (* z00 z!1)) (* 12 ?x2070) ?x1280)))
 (let (($x1850 (= ?x1462 0)))
 (let ((?x3349 (* z!1 z!1)))
 (let ((?x453 (* z00 z00)))
 (let ((?x501 (* (- 1) ?x453)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x2284 (+ ?x49 ?x43 ?x501 ?x3349 (* (- 6) z!1) (* (- 12) y!2))))
 (let (($x2305 (= ?x2284 0)))
 (let ((?x507 (* (- 6) n00)))
 (let ((?x1779 (+ z00 ?x507 (* 6 n!0) (* (- 1) z!1))))
 (let (($x2968 (= ?x1779 0)))
 (let (($x3026 (and $x2968 $x2305 $x1850 $x1956 $x3396 $x1125 $x1084)))
 (let ((?x3052 (+ y!2 z!1)))
 (let ((?x2097 (* y00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x892 (* z00 z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x1117 (* y00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1422 (* ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x831 (* ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x479 (* z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x470 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1020 (* ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2104 (* x00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x2184 (* 12 (* y00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x1239 (* (- 6) (* ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x2475 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x738 (* x00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x737 (* 72 (* ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x735 (* z00 z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x728 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x503 (* x00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051)))
 (let ((?x618 (* y00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x454 (* ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051)))
 (let ((?x2605 (* ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051)))
 (let ((?x1549 (* y00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051)))
 (let ((?x2994 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x837 (* y00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051)))
 (let ((?x800 (* 108 (* ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051))))
 (let ((?x1237 (* z00 z00 z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x2732 (* ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x1236 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x1031 (* z00 z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x1417 (* y00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1318 (* x00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2193 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x2371 (* (- 6) (* z00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x1905 (* z00 z00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2126 (* (- 6) (* z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x2135 (* (- 18) (* y00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x1598 (* 6 (* z00 z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x668 (* y00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x639 (* 6 (* z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x573 (* z00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051)))
 (let ((?x862 (* (- 1) (* z00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x1805 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1043 (* (- 108) (* x00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x2025 (* z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1810 (* ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2151 (* z00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051)))
 (let ((?x1558 (* x00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1506 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1093 (* z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1504 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1495 (* 18 (* y00 z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x1618 (* ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x947 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1930 (* y00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1403 (* z00 z00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2169 (* (- 72) (* y00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x1966 (* z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051)))
 (let ((?x1617 (* y00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x1186 (* (- 12) (* y00 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x1047 (* y00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x3366 (* z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x1794 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2645 (* y00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x3382 (* y00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)))
 (let ((?x3192 (* y00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051)))
 (let ((?x1159 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x1707 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x3376 (* y00 z00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x601 (* y00 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x543 (* z00 z00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051)))
 (let ((?x748 (* 6 (* ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051))))
 (let ((?x749 (* z00 z00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2330 (* ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x2246 (* z00 z00 z00 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)))
 (let ((?x3046 (* 6 (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x1165 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051))))
 (let ((?x1616 (+ ?x3046 ?x2246 (* 108 (* x00 ?x3048 ?x3048 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)) (* (- 6) (* z00 z00 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) (* (- 72) (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)) (* (- 108) ?x2330) (* (- 1) ?x749) ?x748 (* (- 6) ?x3047) (* (- 1) ?x543) (* 72 ?x601) (* (- 108) (* ?x3048 ?x3048 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)) (* (- 18) ?x3376) ?x2737 (* 108 ?x1707) (* (- 1) ?x1159) (* 18 ?x3192) (* (- 108) (* ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)) (* (- 12) ?x3382) (* (- 18) (* y00 z00 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) (* (- 18) ?x2645) (* (- 1) ?x1794) (* (- 6) ?x3366) (* 18 ?x1047) (* 6 (* z00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) ?x1186 (* (- 72) ?x1617) (* (- 6) ?x1966) ?x2169 (* (- 108) (* ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051 ?x3051)) (* 108 (* x00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) (* (- 72) (* ?x3048 ?x3048 ?x1165 ?x1165 ?x3052 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)) ?x1403 (* (- 18) ?x1930) (* (- 6) ?x947) (* 6 ?x1618) ?x1495 (* (- 108) ?x1504) (* 6 ?x1093) (* (- 6) ?x1506) (* 108 ?x1558) ?x2151 (* (- 72) ?x1810) (* 6 ?x2025) ?x1043 (* 6 ?x1805) ?x862 (* 6 ?x573) (* 6 ?x657) ?x639 (* 12 ?x668) (* 12 ?x665) ?x1598 ?x2135 ?x2126 (* 72 (* y00 ?x3048 ?x3048 ?x3048 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) ?x1905 ?x2371 ?x2193 (* 108 ?x1318) (* 12 ?x1417) (* (- 1) ?x1031) (* z00 z00 z00 ?x3048 ?x3048 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051) (* (- 6) ?x1236) (* 108 ?x2732) (* (- 1) ?x1237) (* (- 1) ?x2124) ?x800 (* (- 72) ?x837) (* 108 (* x00 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) (* 72 ?x2994) (* 72 (* y00 ?x3048 ?x3048 ?x1165 ?x1165 ?x3052 ?x3052 ?x3051 ?x3051 ?x3051)) (* (- 12) ?x1549) (* 72 ?x2605) (* (- 6) ?x454) (* 72 ?x618) (* (- 108) ?x503) (* (- 72) ?x728) ?x735 ?x737 (* 108 ?x738) (* 6 ?x2475) ?x1239 ?x2184 (* (- 108) ?x2104) (* (- 72) (* ?x1165 ?x1165 ?x1165 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)) (* 6 (* ?x1165 ?x1165 ?x1165 ?x1165 ?x3052 ?x3051 ?x3051 ?x3051 ?x3051)) (* 6 ?x1020) (* (- 6) ?x470) (* 6 ?x479) (* (- 72) ?x831) (* (- 18) ?x1268) (* (- 1) ?x810) (* 72 (* y00 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) (* 12 (* y00 ?x1165 ?x1165 ?x1165 ?x1165 ?x3051 ?x3051 ?x3051 ?x3051)) (* (- 108) ?x1422) (* 12 ?x1117) ?x892 (* 72 ?x2097))))
 (let ((?x1914 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x532 (* (- 2) (* x!3 z00 z00 z00)) ?x1164 ?x959 ?x549 ?x1621 ?x1132 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x805 ?x1333 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x853 ?x1597 ?x2035 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1232 (* (- 216) (* x!3 y00)) ?x1067 (* (- 12) (* y!2 y!2 y00)) ?x1182 (* (- 216) (* x!3 x00)) ?x1272 ?x1276 (* 36 (* x!3 z00 y00)) ?x1379)))
 (let ((?x982 (* 3 ?x981)))
 (let ((?x1044 (* 3 ?x795)))
 (let ((?x777 (* (- 1) ?x770)))
 (let ((?x3289 (* 18 (* z!1 x00))))
 (let ((?x964 (* (- 36) ?x661)))
 (let ((?x3179 (* z!1 y00)))
 (let ((?x3297 (* 12 ?x3179)))
 (let ((?x3300 (* (- 18) ?x905)))
 (let ((?x542 (* (- 18) ?x541)))
 (let ((?x1145 (* y!2 z!1)))
 (let ((?x613 (* (- 12) ?x1145)))
 (let ((?x673 (* (- 108) x00)))
 (let ((?x616 (* (- 72) y00)))
 (let ((?x2470 (* 72 y!2)))
 (let ((?x755 (* 108 x!3)))
 (let ((?x590 (+ ?x755 ?x2470 ?x616 ?x673 (* (- 3) (* y!2 z00 z00)) (* y!2 y!2 z!1) ?x613 ?x542 (* (- 18) ?x1398) ?x3300 ?x3297 ?x869 ?x964 ?x3289 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x777 ?x1044 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x982 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x690 (* (- 24) ?x661)))
 (let ((?x632 (* 18 ?x631)))
 (let ((?x1715 (+ ?x755 ?x2470 ?x616 ?x673 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x613 ?x3300 ?x3297 ?x710 ?x632 (* 12 ?x3171) ?x690 ?x3289 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x795 (* (- 18) (* x!3 z00)))))
 (let ((?x595 (* 18 ?x594)))
 (let ((?x557 (* 6 ?x453)))
 (let ((?x546 (* (- 1) ?x55)))
 (let ((?x3271 (+ ?x755 ?x2470 ?x616 ?x546 ?x673 (* z!1 z00 z00) ?x557 (* (- 6) ?x1145) (* (- 12) ?x3179) ?x595 (* (- 6) (* z!1 z00)))))
 (let ((?x524 (* (- 12) y00)))
 (let ((?x523 (* (- 6) z00)))
 (let (($x3195 (= (+ (* 12 y!2) (* 6 z!1) ?x523 ?x524 (* (- 1) ?x3349) ?x453) 0)))
 (let (($x1620 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x3195 (= ?x3271 0) (= ?x1715 0) (= ?x590 0) (= ?x1914 0) (not (= ?x1616 0)))))
 (let (($x766 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x548 (+ 6 z)))
 (let ((?x562 (+ 1 n)))
 (let ((?x3409 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3387 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3357 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3340 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3255 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3247 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3217 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3200 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3170 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3114 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3089 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3076 (* ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3040 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3034 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3002 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2980 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2964 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2933 (* x00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2931 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2866 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2836 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2820 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2753 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2663 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2637 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2611 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2599 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2531 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2512 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2481 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2388 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2386 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2322 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2295 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2220 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2141 (* z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2127 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2099 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2069 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2048 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1990 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1984 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1976 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1962 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1946 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1938 (* x00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1929 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1910 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1898 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1889 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1874 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1767 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1736 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1730 (* y00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1708 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1680 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1646 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1644 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1510 (* y00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1488 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1425 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1410 (* y00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1342 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1335 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1246 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x972 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x961 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x881 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x827 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x803 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x711 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x699 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x662 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x649 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x621 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x578 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x459 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x413 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3054 (+ (* 6 ?x413) ?x459 (* 108 (* x00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 6) (* z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 72) (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x578) (* (- 1) ?x621) (* 6 ?x649) (* (- 6) ?x662) (* (- 1) ?x699) (* 72 ?x711) (* (- 108) (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 18) ?x803) ?x827 (* 108 ?x881) (* (- 1) ?x961) (* 18 ?x972) (* (- 108) (* ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 12) ?x1168) (* (- 18) (* y00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 18) ?x1246) (* (- 1) ?x1335) (* (- 6) ?x1342) (* 18 ?x1373) (* 6 (* z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 12) ?x1410) (* (- 72) ?x1425) (* (- 6) ?x1488) (* (- 72) ?x1510) (* (- 108) (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* 108 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 72) (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x1644 (* (- 18) ?x1646) (* (- 6) ?x1680) (* 6 ?x1708) (* 18 ?x1730) (* (- 108) ?x1736) (* 6 ?x1767) (* (- 6) ?x1874) (* 108 ?x1889) ?x1898 (* (- 72) ?x1910) (* 6 ?x1929) (* (- 108) ?x1938) (* 6 ?x1946) (* (- 1) ?x1962) (* 6 ?x1976) (* 6 ?x1984) (* 6 ?x1990) (* 12 ?x2048) (* 12 ?x2069) (* 6 ?x2099) (* (- 18) ?x2127) (* (- 6) ?x2141) (* 72 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x2220 (* (- 6) ?x2295) ?x2322 (* 108 ?x2386) (* 12 ?x2388) (* (- 1) ?x2437) ?x2481 (* (- 6) ?x2512) (* 108 ?x2531) (* (- 1) ?x2599) (* (- 1) ?x2611) (* 108 ?x2637) (* (- 72) ?x2663) (* 108 (* x00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 ?x2753) (* 72 (* y00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) ?x2820) (* 72 ?x2836) (* (- 6) ?x2866) (* 72 ?x2931) (* (- 108) ?x2933) (* (- 72) ?x2964) ?x2980 (* 72 ?x3002) (* 108 ?x3034) (* 6 ?x3040) (* (- 6) ?x3076) (* 12 ?x3089) (* (- 108) ?x3114) (* (- 72) (* ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 6 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 6 ?x3170) (* (- 6) ?x3200) (* 6 ?x3217) (* (- 72) ?x3247) (* (- 18) ?x3255) (* (- 1) (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 (* y00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 12 (* y00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x3340) (* 12 ?x3357) ?x3387 (* 72 ?x3409))))
 (let ((?x1379 (* 108 (* x00 x00))))
 (let ((?x1276 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1272 (* z00 z00 z00 y00)))
 (let ((?x1182 (* (- 36) (* z00 y00 x00))))
 (let ((?x1067 (* 16 (* y00 y00 y00))))
 (let ((?x981 (* z00 z00 x00)))
 (let ((?x1232 (* (- 18) ?x981)))
 (let ((?x937 (* (- 4) (* y y y))))
 (let ((?x885 (* 108 (* x x))))
 (let ((?x853 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x795 (* z00 z00 y00)))
 (let ((?x1333 (* (- 10) ?x795)))
 (let ((?x770 (* z00 y00 y00)))
 (let ((?x805 (* (- 12) ?x770)))
 (let ((?x661 (* y00 y00)))
 (let ((?x1132 (* 96 ?x661)))
 (let ((?x635 (* y y)))
 (let ((?x880 (* 24 ?x635)))
 (let ((?x631 (* z00 x00)))
 (let ((?x549 (* 36 ?x631)))
 (let ((?x594 (* z00 y00)))
 (let ((?x959 (* 24 ?x594)))
 (let ((?x541 (* y00 x00)))
 (let ((?x532 (* 216 ?x541)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1399 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x532 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x959 ?x549 ?x880 ?x1132 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x805 ?x1333 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x853 ?x885 ?x937 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1232 (* (- 216) (* x y00)) ?x1067 (* (- 12) (* y y y00)) ?x1182 (* (- 216) (* x x00)) ?x1272 ?x1276 (* 36 (* x z00 y00)) ?x1379)))
 (let (($x1404 (= ?x1399 0)))
 (let ((?x982 (* 3 ?x981)))
 (let ((?x1044 (* 3 ?x795)))
 (let ((?x777 (* (- 1) ?x770)))
 (let ((?x707 (* 18 (* z x00))))
 (let ((?x964 (* (- 36) ?x661)))
 (let ((?x869 (* (- 6) ?x594)))
 (let ((?x568 (* z y00)))
 (let ((?x569 (* 12 ?x568)))
 (let ((?x602 (* (- 18) (* x z))))
 (let ((?x542 (* (- 18) ?x541)))
 (let ((?x537 (* y z)))
 (let ((?x561 (* (- 12) ?x537)))
 (let ((?x135 (* y y z)))
 (let ((?x673 (* (- 108) x00)))
 (let ((?x616 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1100 (+ ?x64 ?x71 ?x616 ?x673 (* (- 3) (* y z00 z00)) ?x135 ?x561 ?x542 (* (- 18) (* x y)) ?x602 ?x569 ?x869 ?x964 ?x707 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x777 ?x1044 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x982 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1107 (= ?x1100 0)))
 (let ((?x690 (* (- 24) ?x661)))
 (let ((?x638 (* 12 ?x635)))
 (let ((?x632 (* 18 ?x631)))
 (let ((?x710 (* 6 ?x594)))
 (let ((?x103 (* y z z00)))
 (let ((?x849 (+ ?x64 ?x71 ?x616 ?x673 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x561 ?x602 ?x569 ?x710 ?x632 ?x638 ?x690 ?x707 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x795 (* (- 18) (* x z00)))))
 (let (($x854 (= ?x849 0)))
 (let ((?x595 (* 18 ?x594)))
 (let ((?x453 (* z00 z00)))
 (let ((?x557 (* 6 ?x453)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x546 (* (- 1) ?x55)))
 (let ((?x689 (+ ?x64 ?x71 ?x616 ?x546 ?x673 ?x76 ?x557 (* (- 6) ?x537) (* (- 12) ?x568) ?x595 (* (- 6) (* z z00)))))
 (let (($x694 (= ?x689 0)))
 (let ((?x524 (* (- 12) y00)))
 (let ((?x523 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x527 (= (+ ?x45 ?x46 ?x523 ?x524 (* (- 1) (* z z)) ?x453) 0)))
 (let (($x445 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x445 $x527 $x694 $x854 $x1107 $x1404 (not (= ?x3054 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x477 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x548 (+ 6 z)))
 (let ((?x562 (+ 1 n)))
 (let ((?x3409 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3387 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3357 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3340 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3263 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3255 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3247 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3217 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3200 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3170 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3114 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2388 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2931 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2753 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2512 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3040 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2637 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3076 (* ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3002 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2980 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2866 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2836 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2531 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3089 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3034 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2964 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1946 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2663 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2820 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2322 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2599 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2127 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2295 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2481 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1708 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1910 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1984 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2099 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2386 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1736 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2141 (* z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2220 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1990 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2069 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1929 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1874 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1889 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1510 (* y00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1680 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1410 (* y00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x961 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1644 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1646 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x881 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1425 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x413 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x803 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1730 (* y00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1342 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1335 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x972 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1488 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x827 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x699 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x662 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2933 (* x00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x578 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1976 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x621 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x711 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2048 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1246 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1938 (* x00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1767 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1898 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x649 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2611 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3430 (+ (* 108 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x2611 (* (- 6) ?x649) (* 72 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x1898) (* (- 6) ?x1767) (* 108 ?x1938) (* 18 ?x1246) (* (- 12) ?x2048) (* (- 72) ?x711) ?x621 (* 108 (* ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1976) (* 108 ?x578) (* 108 ?x2933) (* 6 ?x662) ?x699 (* (- 1) ?x827) (* 6 ?x1488) (* (- 18) ?x972) ?x1335 (* 6 ?x1342) (* (- 18) ?x1730) (* (- 108) (* x00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x803) (* (- 1) (* z00 z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x413) (* 12 ?x1168) (* 72 ?x1425) (* (- 108) ?x881) (* 18 ?x1646) (* (- 1) ?x1644) (* 108 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) ?x961 (* 12 ?x1410) (* 6 ?x1680) (* 72 ?x1510) (* (- 18) ?x1373) (* 18 (* y00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x1889) (* (- 108) (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x1962 (* 6 ?x1874) (* (- 6) ?x1929) (* (- 12) ?x2069) (* (- 72) (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1990) (* (- 1) ?x2220) (* 6 ?x2141) (* 108 ?x1736) (* (- 108) ?x2386) (* (- 6) ?x2099) (* (- 6) ?x1984) (* 72 ?x1910) (* (- 6) ?x1708) (* (- 1) ?x2481) (* 6 ?x2295) (* 18 ?x2127) ?x2599 (* (- 1) ?x2322) (* (- 108) (* x00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 12 ?x2820) (* 72 ?x2663) (* (- 6) ?x1946) (* 72 ?x2964) (* (- 72) (* y00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) ?x3034) (* (- 12) ?x3089) (* (- 108) ?x2531) (* (- 72) ?x2836) (* 6 ?x2866) (* (- 1) ?x2980) (* (- 72) ?x3002) (* 6 ?x3076) (* (- 108) ?x2637) (* (- 6) ?x3040) (* 6 ?x2512) (* (- 72) ?x2753) ?x2437 (* (- 72) ?x2931) (* (- 12) ?x2388) (* 108 ?x3114) (* 72 (* ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x3170) (* 6 ?x3200) (* (- 6) ?x3217) (* 72 ?x3247) (* 18 ?x3255) ?x3263 (* (- 72) (* y00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 108 ?x3340) (* (- 12) ?x3357) (* (- 1) ?x3387) (* (- 72) ?x3409))))
 (let ((?x1379 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x661 (* y00 y00)))
 (let ((?x1132 (* 96 ?x661)))
 (let ((?x1067 (* 16 (* y00 y00 y00))))
 (let ((?x937 (* (- 4) (* y y y))))
 (let ((?x885 (* 108 (* x x))))
 (let ((?x635 (* y y)))
 (let ((?x880 (* 24 ?x635)))
 (let ((?x928 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x880 ?x885 ?x937 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1067 (* (- 6) (* z00 y y)) ?x1132 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1379 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x673 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x616 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x2550 (* 18 (* x00 z))))
 (let ((?x964 (* (- 36) ?x661)))
 (let ((?x504 (* z y)))
 (let ((?x2441 (* (- 12) ?x504)))
 (let ((?x2080 (* y00 z)))
 (let ((?x2404 (* 12 ?x2080)))
 (let ((?x411 (* (- 18) (* z x))))
 (let ((?x1131 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x411 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x2404 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x2441 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x964 ?x2550 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x616 (* 18 (* y00 x)) ?x71 ?x673 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x690 (* (- 24) ?x661)))
 (let ((?x638 (* 12 ?x635)))
 (let ((?x2922 (+ (* (- 1) (* y00 z00 z)) ?x2441 ?x411 (* 18 (* x00 z00)) ?x638 ?x690 ?x2550 ?x2404 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x616 (* (- 6) (* z00 y)) ?x71 ?x673 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x453 (* z00 z00)))
 (let ((?x557 (* 6 ?x453)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x546 (* (- 1) ?x55)))
 (let ((?x875 (+ (* (- 6) ?x504) ?x546 ?x557 (* (- 12) ?x2080) (* 18 (* y00 z00)) ?x64 ?x616 (* (- 6) (* z00 z)) ?x71 ?x673 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x501 (* (- 1) ?x453)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x501 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x875 0) (= ?x2922 0) (= ?x1131 0) (= ?x928 0) (not (= ?x3430 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x2450 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x548 (+ 6 z)))
 (let ((?x562 (+ 1 n)))
 (let ((?x3409 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3387 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3357 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3340 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3255 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3247 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3217 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3200 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3170 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3114 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3089 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3076 (* ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3040 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3034 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3002 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2980 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2964 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2933 (* x00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2931 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2866 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2836 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2820 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2753 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2663 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2637 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2611 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2599 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2531 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2512 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2481 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2388 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2386 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2322 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2295 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2220 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2141 (* z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2127 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2099 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2069 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2048 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1990 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1984 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1976 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1962 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1946 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1938 (* x00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1929 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1910 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1898 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1889 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1874 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1767 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1736 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1730 (* y00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1708 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1680 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1646 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1644 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1510 (* y00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1488 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1425 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1410 (* y00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1342 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1335 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1246 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x972 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x961 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x881 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x827 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x803 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x711 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x699 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x662 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x649 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x621 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x578 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x459 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x413 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3054 (+ (* 6 ?x413) ?x459 (* 108 (* x00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 6) (* z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 72) (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x578) (* (- 1) ?x621) (* 6 ?x649) (* (- 6) ?x662) (* (- 1) ?x699) (* 72 ?x711) (* (- 108) (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 18) ?x803) ?x827 (* 108 ?x881) (* (- 1) ?x961) (* 18 ?x972) (* (- 108) (* ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 12) ?x1168) (* (- 18) (* y00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 18) ?x1246) (* (- 1) ?x1335) (* (- 6) ?x1342) (* 18 ?x1373) (* 6 (* z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 12) ?x1410) (* (- 72) ?x1425) (* (- 6) ?x1488) (* (- 72) ?x1510) (* (- 108) (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* 108 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 72) (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x1644 (* (- 18) ?x1646) (* (- 6) ?x1680) (* 6 ?x1708) (* 18 ?x1730) (* (- 108) ?x1736) (* 6 ?x1767) (* (- 6) ?x1874) (* 108 ?x1889) ?x1898 (* (- 72) ?x1910) (* 6 ?x1929) (* (- 108) ?x1938) (* 6 ?x1946) (* (- 1) ?x1962) (* 6 ?x1976) (* 6 ?x1984) (* 6 ?x1990) (* 12 ?x2048) (* 12 ?x2069) (* 6 ?x2099) (* (- 18) ?x2127) (* (- 6) ?x2141) (* 72 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x2220 (* (- 6) ?x2295) ?x2322 (* 108 ?x2386) (* 12 ?x2388) (* (- 1) ?x2437) ?x2481 (* (- 6) ?x2512) (* 108 ?x2531) (* (- 1) ?x2599) (* (- 1) ?x2611) (* 108 ?x2637) (* (- 72) ?x2663) (* 108 (* x00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 ?x2753) (* 72 (* y00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) ?x2820) (* 72 ?x2836) (* (- 6) ?x2866) (* 72 ?x2931) (* (- 108) ?x2933) (* (- 72) ?x2964) ?x2980 (* 72 ?x3002) (* 108 ?x3034) (* 6 ?x3040) (* (- 6) ?x3076) (* 12 ?x3089) (* (- 108) ?x3114) (* (- 72) (* ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 6 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 6 ?x3170) (* (- 6) ?x3200) (* 6 ?x3217) (* (- 72) ?x3247) (* (- 18) ?x3255) (* (- 1) (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 (* y00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 12 (* y00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x3340) (* 12 ?x3357) ?x3387 (* 72 ?x3409))))
 (let ((?x1379 (* 108 (* x00 x00))))
 (let ((?x1276 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1272 (* z00 z00 z00 y00)))
 (let ((?x1182 (* (- 36) (* z00 y00 x00))))
 (let ((?x1067 (* 16 (* y00 y00 y00))))
 (let ((?x981 (* z00 z00 x00)))
 (let ((?x1232 (* (- 18) ?x981)))
 (let ((?x937 (* (- 4) (* y y y))))
 (let ((?x885 (* 108 (* x x))))
 (let ((?x853 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x795 (* z00 z00 y00)))
 (let ((?x1333 (* (- 10) ?x795)))
 (let ((?x770 (* z00 y00 y00)))
 (let ((?x805 (* (- 12) ?x770)))
 (let ((?x661 (* y00 y00)))
 (let ((?x1132 (* 96 ?x661)))
 (let ((?x635 (* y y)))
 (let ((?x880 (* 24 ?x635)))
 (let ((?x631 (* z00 x00)))
 (let ((?x549 (* 36 ?x631)))
 (let ((?x594 (* z00 y00)))
 (let ((?x959 (* 24 ?x594)))
 (let ((?x541 (* y00 x00)))
 (let ((?x532 (* 216 ?x541)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1399 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x532 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x959 ?x549 ?x880 ?x1132 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x805 ?x1333 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x853 ?x885 ?x937 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1232 (* (- 216) (* x y00)) ?x1067 (* (- 12) (* y y y00)) ?x1182 (* (- 216) (* x x00)) ?x1272 ?x1276 (* 36 (* x z00 y00)) ?x1379)))
 (let (($x1404 (= ?x1399 0)))
 (let ((?x982 (* 3 ?x981)))
 (let ((?x1044 (* 3 ?x795)))
 (let ((?x777 (* (- 1) ?x770)))
 (let ((?x707 (* 18 (* z x00))))
 (let ((?x964 (* (- 36) ?x661)))
 (let ((?x869 (* (- 6) ?x594)))
 (let ((?x568 (* z y00)))
 (let ((?x569 (* 12 ?x568)))
 (let ((?x602 (* (- 18) (* x z))))
 (let ((?x542 (* (- 18) ?x541)))
 (let ((?x537 (* y z)))
 (let ((?x561 (* (- 12) ?x537)))
 (let ((?x135 (* y y z)))
 (let ((?x673 (* (- 108) x00)))
 (let ((?x616 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1100 (+ ?x64 ?x71 ?x616 ?x673 (* (- 3) (* y z00 z00)) ?x135 ?x561 ?x542 (* (- 18) (* x y)) ?x602 ?x569 ?x869 ?x964 ?x707 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x777 ?x1044 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x982 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1107 (= ?x1100 0)))
 (let ((?x690 (* (- 24) ?x661)))
 (let ((?x638 (* 12 ?x635)))
 (let ((?x632 (* 18 ?x631)))
 (let ((?x710 (* 6 ?x594)))
 (let ((?x103 (* y z z00)))
 (let ((?x849 (+ ?x64 ?x71 ?x616 ?x673 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x561 ?x602 ?x569 ?x710 ?x632 ?x638 ?x690 ?x707 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x795 (* (- 18) (* x z00)))))
 (let (($x854 (= ?x849 0)))
 (let ((?x595 (* 18 ?x594)))
 (let ((?x453 (* z00 z00)))
 (let ((?x557 (* 6 ?x453)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x546 (* (- 1) ?x55)))
 (let ((?x689 (+ ?x64 ?x71 ?x616 ?x546 ?x673 ?x76 ?x557 (* (- 6) ?x537) (* (- 12) ?x568) ?x595 (* (- 6) (* z z00)))))
 (let (($x694 (= ?x689 0)))
 (let ((?x524 (* (- 12) y00)))
 (let ((?x523 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x527 (= (+ ?x45 ?x46 ?x523 ?x524 (* (- 1) (* z z)) ?x453) 0)))
 (let (($x445 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x2107 (and $x445 $x527 $x694 $x854 $x1107 $x1404 (not (= ?x3054 0)))))
 (let ((?x3263 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3430 (+ (* 108 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x2611 (* (- 6) ?x649) (* 72 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x1898) (* (- 6) ?x1767) (* 108 ?x1938) (* 18 ?x1246) (* (- 12) ?x2048) (* (- 72) ?x711) ?x621 (* 108 (* ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1976) (* 108 ?x578) (* 108 ?x2933) (* 6 ?x662) ?x699 (* (- 1) ?x827) (* 6 ?x1488) (* (- 18) ?x972) ?x1335 (* 6 ?x1342) (* (- 18) ?x1730) (* (- 108) (* x00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x803) (* (- 1) ?x459) (* 6 (* z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x413) (* 12 ?x1168) (* 72 ?x1425) (* (- 108) ?x881) (* 18 ?x1646) (* (- 1) ?x1644) (* 108 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) ?x961 (* 12 ?x1410) (* 6 ?x1680) (* 72 ?x1510) (* (- 18) ?x1373) (* 18 (* y00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x1889) (* (- 108) (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x1962 (* 6 ?x1874) (* (- 6) ?x1929) (* (- 12) ?x2069) (* (- 72) (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1990) (* (- 1) ?x2220) (* 6 ?x2141) (* 108 ?x1736) (* (- 108) ?x2386) (* (- 6) ?x2099) (* (- 6) ?x1984) (* 72 ?x1910) (* (- 6) ?x1708) (* (- 1) ?x2481) (* 6 ?x2295) (* 18 ?x2127) ?x2599 (* (- 1) ?x2322) (* (- 108) (* x00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 12 ?x2820) (* 72 ?x2663) (* (- 6) ?x1946) (* 72 ?x2964) (* (- 72) (* y00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) ?x3034) (* (- 12) ?x3089) (* (- 108) ?x2531) (* (- 72) ?x2836) (* 6 ?x2866) (* (- 1) ?x2980) (* (- 72) ?x3002) (* 6 ?x3076) (* (- 108) ?x2637) (* (- 6) ?x3040) (* 6 ?x2512) (* (- 72) ?x2753) ?x2437 (* (- 72) ?x2931) (* (- 12) ?x2388) (* 108 ?x3114) (* 72 (* ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x3170) (* 6 ?x3200) (* (- 6) ?x3217) (* 72 ?x3247) (* 18 ?x3255) ?x3263 (* (- 72) (* y00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 108 ?x3340) (* (- 12) ?x3357) (* (- 1) ?x3387) (* (- 72) ?x3409))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x928 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x880 ?x885 ?x937 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1067 (* (- 6) (* z00 y y)) ?x1132 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1379 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x2550 (* 18 (* x00 z))))
 (let ((?x504 (* z y)))
 (let ((?x2441 (* (- 12) ?x504)))
 (let ((?x2080 (* y00 z)))
 (let ((?x2404 (* 12 ?x2080)))
 (let ((?x411 (* (- 18) (* z x))))
 (let ((?x1131 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x411 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x2404 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x2441 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x964 ?x2550 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x616 (* 18 (* y00 x)) ?x71 ?x673 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x2922 (+ (* (- 1) (* y00 z00 z)) ?x2441 ?x411 (* 18 (* x00 z00)) ?x638 ?x690 ?x2550 ?x2404 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x616 (* (- 6) (* z00 y)) ?x71 ?x673 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x875 (+ (* (- 6) ?x504) ?x546 ?x557 (* (- 12) ?x2080) (* 18 (* y00 z00)) ?x64 ?x616 (* (- 6) (* z00 z)) ?x71 ?x673 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x501 (* (- 1) ?x453)))
 (let (($x1400 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x501 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x875 0) (= ?x2922 0) (= ?x1131 0) (= ?x928 0) (not (= ?x3430 0)))))
 (rewrite (= $x1400 $x2107))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x400 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x218 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x392 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x391 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x390 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x388 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x380 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x378 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x376 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x373 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x369 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x366 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x365 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x363 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x361 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x359 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x356 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x353 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x349 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x347 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x341 (* 72 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x340 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x338 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x335 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x333 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x331 (* 72 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x330 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x326 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x324 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x318 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x316 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x311 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x310 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x308 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x307 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x301 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x297 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x295 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x290 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x286 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x283 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x282 (* 12 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x281 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x278 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x276 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x274 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x272 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x271 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x262 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x258 (* 18 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x256 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x255 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x253 (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x251 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x247 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x245 (* 108 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x244 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x242 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x239 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x236 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x235 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x233 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x229 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x228 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x221 (- (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218) (* 6 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00))))
 (let ((?x223 (+ ?x221 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x225 (- ?x223 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x227 (+ ?x225 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x234 (+ (- (- ?x227 ?x228) ?x229) (* 108 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) ?x233)))
 (let ((?x241 (+ (- (- ?x234 ?x235) ?x236) ?x239 (* 108 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218))))
 (let ((?x248 (+ (- ?x241 ?x242) ?x244 ?x245 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00) ?x247)))
 (let ((?x250 (- ?x248 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00 z00))))
 (let ((?x261 (- (- (+ (- (+ ?x250 ?x251) ?x253) ?x255 ?x256) ?x258) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x265 (- (+ ?x261 ?x262) (* ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00 z00))))
 (let ((?x268 (+ ?x265 (* 6 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218))))
 (let ((?x270 (- ?x268 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x285 (+ (- (+ (- (+ ?x270 ?x271 ?x272) ?x274) ?x276) ?x278) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218) ?x281 ?x282 ?x283 (* 72 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x289 (+ (- ?x285 ?x286) (* 18 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x293 (- (- ?x289 ?x290) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x218 ?x218))))
 (let ((?x296 (+ ?x293 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00) ?x295)))
 (let ((?x303 (- (- ?x296 ?x297) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218))))
 (let ((?x304 (- ?x303 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218))))
 (let ((?x305 (- ?x304 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x315 (- (- (- (+ (- ?x305 ?x301) ?x307 ?x308) ?x310) ?x311) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00))))
 (let ((?x321 (- (- (+ ?x315 ?x316) ?x318) (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00 z00 z00))))
 (let ((?x325 (+ ?x321 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00 z00) (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 z00) ?x324)))
 (let ((?x329 (- (- ?x325 ?x326) (* 108 ?x216 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218))))
 (let ((?x342 (- (+ (- (+ ?x329 ?x330 ?x331) ?x333) ?x335) (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x344 (- (- ?x342 ?x338) (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x352 (- (- (+ (- (- ?x344 ?x340) ?x341) ?x347) ?x349) (* 72 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x357 (- (+ ?x352 ?x353) (* 108 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x371 (+ (- (- (+ (- (+ (- ?x357 ?x356) ?x359) ?x361) ?x363) ?x365) ?x366) ?x369 (* 72 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x375 (- (- ?x371 (* 6 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218)) ?x373)))
 (let ((?x383 (+ (- (+ ?x375 ?x376) ?x378) ?x380 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00) (* ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x387 (- (- ?x383 (* 72 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218)) (* 12 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= (- (- (- (+ ?x387 ?x388) ?x390) ?x391) ?x392) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x2264 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x548 (+ 6 z)))
 (let ((?x562 (+ 1 n)))
 (let ((?x3409 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3387 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3357 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3340 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3263 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3255 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3247 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3217 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3200 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3170 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3114 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2388 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2931 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2753 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2512 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3040 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2637 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3076 (* ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3002 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2980 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2866 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2836 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2531 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3089 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3034 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2964 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1946 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2663 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2820 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2322 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2599 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2127 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2295 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2481 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1708 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1910 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1984 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2099 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2386 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1736 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2141 (* z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2220 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1990 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2069 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1929 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1874 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1889 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1510 (* y00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1680 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1410 (* y00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x961 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1644 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1646 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x881 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1425 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x413 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x803 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1730 (* y00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1342 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1335 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x972 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1488 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x827 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x699 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x662 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2933 (* x00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x578 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1976 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x621 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x711 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2048 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1246 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1938 (* x00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1767 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1898 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x649 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2611 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3430 (+ (* 108 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x2611 (* (- 6) ?x649) (* 72 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x1898) (* (- 6) ?x1767) (* 108 ?x1938) (* 18 ?x1246) (* (- 12) ?x2048) (* (- 72) ?x711) ?x621 (* 108 (* ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1976) (* 108 ?x578) (* 108 ?x2933) (* 6 ?x662) ?x699 (* (- 1) ?x827) (* 6 ?x1488) (* (- 18) ?x972) ?x1335 (* 6 ?x1342) (* (- 18) ?x1730) (* (- 108) (* x00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x803) (* (- 1) (* z00 z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x413) (* 12 ?x1168) (* 72 ?x1425) (* (- 108) ?x881) (* 18 ?x1646) (* (- 1) ?x1644) (* 108 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) ?x961 (* 12 ?x1410) (* 6 ?x1680) (* 72 ?x1510) (* (- 18) ?x1373) (* 18 (* y00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x1889) (* (- 108) (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x1962 (* 6 ?x1874) (* (- 6) ?x1929) (* (- 12) ?x2069) (* (- 72) (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1990) (* (- 1) ?x2220) (* 6 ?x2141) (* 108 ?x1736) (* (- 108) ?x2386) (* (- 6) ?x2099) (* (- 6) ?x1984) (* 72 ?x1910) (* (- 6) ?x1708) (* (- 1) ?x2481) (* 6 ?x2295) (* 18 ?x2127) ?x2599 (* (- 1) ?x2322) (* (- 108) (* x00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 12 ?x2820) (* 72 ?x2663) (* (- 6) ?x1946) (* 72 ?x2964) (* (- 72) (* y00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) ?x3034) (* (- 12) ?x3089) (* (- 108) ?x2531) (* (- 72) ?x2836) (* 6 ?x2866) (* (- 1) ?x2980) (* (- 72) ?x3002) (* 6 ?x3076) (* (- 108) ?x2637) (* (- 6) ?x3040) (* 6 ?x2512) (* (- 72) ?x2753) ?x2437 (* (- 72) ?x2931) (* (- 12) ?x2388) (* 108 ?x3114) (* 72 (* ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x3170) (* 6 ?x3200) (* (- 6) ?x3217) (* 72 ?x3247) (* 18 ?x3255) ?x3263 (* (- 72) (* y00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 108 ?x3340) (* (- 12) ?x3357) (* (- 1) ?x3387) (* (- 72) ?x3409))))
 (let ((?x1379 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x661 (* y00 y00)))
 (let ((?x1132 (* 96 ?x661)))
 (let ((?x1067 (* 16 (* y00 y00 y00))))
 (let ((?x937 (* (- 4) (* y y y))))
 (let ((?x885 (* 108 (* x x))))
 (let ((?x635 (* y y)))
 (let ((?x880 (* 24 ?x635)))
 (let ((?x928 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x880 ?x885 ?x937 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1067 (* (- 6) (* z00 y y)) ?x1132 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1379 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x673 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x616 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x2550 (* 18 (* x00 z))))
 (let ((?x964 (* (- 36) ?x661)))
 (let ((?x504 (* z y)))
 (let ((?x2441 (* (- 12) ?x504)))
 (let ((?x2080 (* y00 z)))
 (let ((?x2404 (* 12 ?x2080)))
 (let ((?x411 (* (- 18) (* z x))))
 (let ((?x1131 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x411 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x2404 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x2441 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x964 ?x2550 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x616 (* 18 (* y00 x)) ?x71 ?x673 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x690 (* (- 24) ?x661)))
 (let ((?x638 (* 12 ?x635)))
 (let ((?x2922 (+ (* (- 1) (* y00 z00 z)) ?x2441 ?x411 (* 18 (* x00 z00)) ?x638 ?x690 ?x2550 ?x2404 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x616 (* (- 6) (* z00 y)) ?x71 ?x673 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x453 (* z00 z00)))
 (let ((?x557 (* 6 ?x453)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x546 (* (- 1) ?x55)))
 (let ((?x875 (+ (* (- 6) ?x504) ?x546 ?x557 (* (- 12) ?x2080) (* 18 (* y00 z00)) ?x64 ?x616 (* (- 6) (* z00 z)) ?x71 ?x673 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x501 (* (- 1) ?x453)))
 (let (($x1400 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x501 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x875 0) (= ?x2922 0) (= ?x1131 0) (= ?x928 0) (not (= ?x3430 0)))))
 (let ((?x218 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x392 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x391 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x390 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x388 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x380 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x378 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x376 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x373 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x369 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x366 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x365 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x363 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x361 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x359 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x356 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x353 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x349 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x347 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x341 (* 72 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x340 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x338 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x335 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x333 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x331 (* 72 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x330 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x326 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x324 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x318 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x316 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x311 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x310 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x308 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x307 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x301 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x297 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x295 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x290 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x286 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x283 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x282 (* 12 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x281 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x278 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x276 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x274 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x272 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x271 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x262 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x258 (* 18 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x256 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x255 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x253 (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x251 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x247 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x245 (* 108 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x244 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x242 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x239 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x236 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x235 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x233 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x229 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x228 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x221 (- (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218) (* 6 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00))))
 (let ((?x223 (+ ?x221 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x225 (- ?x223 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x227 (+ ?x225 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x234 (+ (- (- ?x227 ?x228) ?x229) (* 108 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) ?x233)))
 (let ((?x241 (+ (- (- ?x234 ?x235) ?x236) ?x239 (* 108 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218))))
 (let ((?x248 (+ (- ?x241 ?x242) ?x244 ?x245 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00) ?x247)))
 (let ((?x250 (- ?x248 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00 z00))))
 (let ((?x261 (- (- (+ (- (+ ?x250 ?x251) ?x253) ?x255 ?x256) ?x258) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x265 (- (+ ?x261 ?x262) (* ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00 z00))))
 (let ((?x268 (+ ?x265 (* 6 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218))))
 (let ((?x270 (- ?x268 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x285 (+ (- (+ (- (+ ?x270 ?x271 ?x272) ?x274) ?x276) ?x278) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218) ?x281 ?x282 ?x283 (* 72 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x289 (+ (- ?x285 ?x286) (* 18 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x293 (- (- ?x289 ?x290) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x218 ?x218))))
 (let ((?x296 (+ ?x293 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00) ?x295)))
 (let ((?x303 (- (- ?x296 ?x297) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218))))
 (let ((?x304 (- ?x303 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218))))
 (let ((?x305 (- ?x304 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x315 (- (- (- (+ (- ?x305 ?x301) ?x307 ?x308) ?x310) ?x311) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00))))
 (let ((?x321 (- (- (+ ?x315 ?x316) ?x318) (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00 z00 z00))))
 (let ((?x325 (+ ?x321 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00 z00) (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 z00) ?x324)))
 (let ((?x329 (- (- ?x325 ?x326) (* 108 ?x216 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218))))
 (let ((?x342 (- (+ (- (+ ?x329 ?x330 ?x331) ?x333) ?x335) (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x344 (- (- ?x342 ?x338) (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x352 (- (- (+ (- (- ?x344 ?x340) ?x341) ?x347) ?x349) (* 72 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x357 (- (+ ?x352 ?x353) (* 108 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x371 (+ (- (- (+ (- (+ (- ?x357 ?x356) ?x359) ?x361) ?x363) ?x365) ?x366) ?x369 (* 72 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x375 (- (- ?x371 (* 6 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218)) ?x373)))
 (let ((?x383 (+ (- (+ ?x375 ?x376) ?x378) ?x380 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00) (* ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x387 (- (- ?x383 (* 72 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218)) (* 12 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x399 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= (- (- (- (+ ?x387 ?x388) ?x390) ?x391) ?x392) 0))))))
 (rewrite (= $x399 $x1400)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x401 (asserted $x400)))
 (let ((@x585 (mp (mp @x401 (quant-intro (proof-bind ?x2264) (= $x400 $x477)) $x477) (rewrite (= $x477 $x477)) $x477)))
 (let ((@x1926 (mp~ (mp @x585 (quant-intro (proof-bind ?x2450) (= $x477 $x766)) $x766) (sk (~ $x766 $x1620)) $x1620)))
 (let ((@x1787 (mp @x1926 (rewrite (= $x1620 $x3026)) $x3026)))
 (let ((@x2995 (and-elim @x1787 $x3396)))
 (let ((@x654 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3396) $x1180)) @x2995 $x1180)))
 (let (($x1803 (>= ?x769 0)))
 (let ((@x2303 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3396) $x1803)) @x2995 $x1803)))
 (let (($x2768 (<= ?x1137 0)))
 (let ((@x2996 (and-elim @x1787 $x1125)))
 (let ((@x1089 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1125) $x2768)) @x2996 $x2768)))
 (let (($x2828 (>= ?x1137 0)))
 (let ((@x1945 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1125) $x2828)) @x2996 $x2828)))
 (let (($x2474 (<= ?x1706 0)))
 (let ((@x2979 (and-elim @x1787 $x1956)))
 (let ((@x2568 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1956) $x2474)) @x2979 $x2474)))
 (let (($x2147 (>= ?x1706 0)))
 (let ((@x1139 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1956) $x2147)) @x2979 $x2147)))
 (let (($x2408 (<= ?x1462 0)))
 (let ((@x1128 (and-elim @x1787 $x1850)))
 (let ((@x2063 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1850) $x2408)) @x1128 $x2408)))
 (let (($x3025 (>= ?x1462 0)))
 (let ((@x877 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1850) $x3025)) @x1128 $x3025)))
 (let (($x1900 (<= ?x2284 0)))
 (let ((@x579 (and-elim @x1787 $x2305)))
 (let ((@x1512 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2305) $x1900)) @x579 $x1900)))
 (let (($x2387 (>= ?x2284 0)))
 (let ((@x1603 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2305) $x2387)) @x579 $x2387)))
 (let (($x2214 (<= ?x1779 0)))
 (let ((@x3227 (and-elim @x1787 $x2968)))
 (let ((@x934 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2968) $x2214)) @x3227 $x2214)))
 (let (($x988 (>= ?x1779 0)))
 (let ((@x2498 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2968) $x988)) @x3227 $x988)))
 (let (($x552 (not (<= ?x1065 0))))
 (let (($x2056 (>= ?x1065 0)))
 (let ((@x2912 ((_ th-lemma arith) (hypothesis (not $x2056)) @x2498 @x934 @x2498 @x934 @x1603 @x1512 @x2498 @x934 @x1139 @x2568 @x1603 @x1512 @x877 @x2063 @x1139 @x2568 @x1139 @x2568 @x1945 @x1089 @x2303 @x654 false)))
 (let ((@x2398 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1081 $x552 (not $x2056))) (and-elim @x1787 $x1084) (or $x552 (not $x2056)))))
 ((_ th-lemma arith) (unit-resolution @x2398 (lemma @x2912 $x2056) $x552) @x2498 @x934 @x2498 @x934 @x1603 @x1512 @x2498 @x934 @x1139 @x2568 @x1603 @x1512 @x877 @x2063 @x1139 @x2568 @x1139 @x2568 @x1945 @x1089 @x2303 @x654 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        30
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1234
 :arith-nonlinear-bounds    22
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      7
 :arith-tableau-max-columns 195
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                22.03
 :memory                    19.64
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                212952394
 :num-checks                1
 :propagations              14
 :rlimit-count              356481
 :time                      0.28
 :total-time                0.32)
