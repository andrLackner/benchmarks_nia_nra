unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x564 (* (- 1) k!2)))
 (let ((?x412 (* n!0 k!2)))
 (let ((?x595 (+ ?x412 (* 2 n!0) ?x564 (* (- 3) c!3))))
 (let (($x597 (<= ?x595 (- 1))))
 (let (($x612 (= ?x595 (- 1))))
 (let ((?x301 (+ m!1 k!2)))
 (let ((?x543 (+ 6 m!1)))
 (let ((?x237 (+ 1 n!0)))
 (let ((?x753 (* 3 (* ?x237 ?x237 ?x543 ?x301 ?x301 (+ k!2 c!3) (+ k!2 c!3)))))
 (let ((?x596 (+ (* 2 (* n!0 n!0 k!2)) (* ?x237 ?x237 ?x543 ?x301 ?x301 ?x301 (+ k!2 c!3)) (* (- 3) (* n!0 m!1 c!3)) (* 3 (* ?x237 ?x237 ?x543 ?x543 ?x301 ?x301 (+ k!2 c!3))) (* (- 3) (* n!0 k!2 c!3)) (* (- 1) (* ?x237 ?x237 ?x543 ?x301 ?x301 (+ k!2 c!3))) (* 3 ?x412) (* (- 3) (* n!0 m!1 k!2)) (* (- 3) (* n!0 k!2 k!2)) (* (- 1) (* ?x237 ?x237 ?x237 ?x543 ?x543 ?x301 ?x301 ?x301)) (* 2 (* n!0 n!0 m!1 k!2)) (* (- 2) (* ?x237 ?x237 ?x237 ?x543 ?x543 ?x301 ?x301)) (* 2 (* n!0 n!0 m!1)) ?x753 (* (- 1) (* ?x237 ?x237 ?x237 ?x543 ?x301 ?x301 ?x301 (+ k!2 c!3))) (* n!0 n!0 m!1 m!1) (* (- 2) (* ?x237 ?x237 ?x237 ?x543 ?x301 ?x301 (+ k!2 c!3))) (* n!0 n!0 k!2 k!2) (* (- 1) (* ?x237 ?x237 ?x543 ?x543 ?x301 ?x301)) (* ?x237 ?x237 ?x543 ?x543 ?x301 ?x301 ?x301) (* 3 (* n!0 m!1)))))
 (let (($x768 (= ?x596 0)))
 (let (($x309 (not $x768)))
 (let ((?x417 (+ (* 3 (* n!0 n!0)) (* 3 n!0) ?x564)))
 (let (($x729 (= ?x417 (- 1))))
 (let ((?x881 (* 18 c!3)))
 (let ((?x614 (* 5 k!2)))
 (let ((?x741 (* (- 1) (* k!2 k!2))))
 (let ((?x665 (* (- 9) n!0)))
 (let ((?x602 (+ (* 9 (* n!0 c!3)) ?x665 ?x741 ?x614 ?x881)))
 (let (($x541 (= ?x602 4)))
 (let ((?x618 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x245 (= ?x618 (- 6))))
 (let (($x767 (and $x245 $x541 $x612 $x729 $x309)))
 (let ((?x879 (+ c!3 k!2)))
 (let ((?x874 (+ k!2 m!1)))
 (let ((?x434 (+ (* 3 (* k!2 n!0)) (* (- 2) (* ?x237 ?x237 ?x237 ?x543 ?x874 ?x874 ?x879)) (* (- 1) (* ?x237 ?x237 ?x237 ?x543 ?x874 ?x874 ?x874 ?x879)) (* (- 1) (* ?x237 ?x237 ?x543 ?x874 ?x874 ?x879)) (* (- 1) (* ?x237 ?x237 ?x237 ?x543 ?x543 ?x874 ?x874 ?x874)) (* 3 (* ?x237 ?x237 ?x543 ?x543 ?x874 ?x874 ?x879)) (* 3 (* m!1 n!0)) (* (- 2) (* ?x237 ?x237 ?x237 ?x543 ?x543 ?x874 ?x874)) (* 2 (* m!1 n!0 n!0)) (* 2 (* k!2 n!0 n!0)) (* ?x237 ?x237 ?x543 ?x874 ?x874 ?x874 ?x879) (* (- 1) (* ?x237 ?x237 ?x543 ?x543 ?x874 ?x874)) (* (- 3) (* k!2 m!1 n!0)) (* (- 3) (* c!3 m!1 n!0)) (* (- 3) (* k!2 k!2 n!0)) (* (- 3) (* c!3 k!2 n!0)) (* ?x237 ?x237 ?x543 ?x543 ?x874 ?x874 ?x874) (* k!2 k!2 n!0 n!0) (* 2 (* k!2 m!1 n!0 n!0)) (* m!1 m!1 n!0 n!0) (* 3 (* ?x237 ?x237 ?x543 ?x874 ?x874 ?x879 ?x879)))))
 (let (($x637 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x185 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x881 ?x614 ?x665 ?x741 (* 9 (* c!3 n!0))) 4) $x637 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x434 0)))))
 (let (($x287 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x75 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x321 (+ 1 n)))
 (let ((?x929 (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x75 ?x75)))
 (let ((?x733 (* m m n n)))
 (let ((?x636 (* 2 (* k m n n))))
 (let ((?x728 (* k k n n)))
 (let ((?x562 (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x68)))
 (let ((?x845 (* (- 3) (* c k n))))
 (let ((?x844 (* (- 3) (* k k n))))
 (let ((?x847 (* (- 3) (* c m n))))
 (let ((?x440 (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x68 ?x75)))
 (let ((?x389 (* 2 (* k n n))))
 (let ((?x387 (* 2 (* m n n))))
 (let ((?x849 (* 3 (* m n))))
 (let ((?x55 (* k n)))
 (let ((?x850 (* 3 ?x55)))
 (let ((?x162 (+ ?x850 (* (- 2) (* ?x321 ?x321 ?x321 ?x335 ?x68 ?x68 ?x75)) (* (- 1) (* ?x321 ?x321 ?x321 ?x335 ?x68 ?x68 ?x68 ?x75)) (* (- 1) (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x75)) (* (- 1) (* ?x321 ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x68)) (* 3 (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x75)) ?x849 (* (- 2) (* ?x321 ?x321 ?x321 ?x335 ?x335 ?x68 ?x68)) ?x387 ?x389 ?x440 (* (- 1) (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68)) (* (- 3) (* k m n)) ?x847 ?x844 ?x845 ?x562 ?x728 ?x636 ?x733 (* 3 ?x929))))
 (let (($x313 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x275 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x227 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x223 (= ?x227 4)))
 (let (($x139 (= (+ m (* (- 6) n)) 6)))
 (and $x139 $x223 $x275 $x313 (not (= ?x162 0))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x911 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x75 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x321 (+ 1 n)))
 (let ((?x157 (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x75)))
 (let ((?x150 (* ?x321 ?x321 ?x321 ?x335 ?x68 ?x68 ?x68 ?x75)))
 (let ((?x297 (* ?x321 ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x68)))
 (let ((?x468 (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68)))
 (let ((?x221 (+ (* ?x321 ?x68) (* 2 (* ?x321 ?x321 ?x321 ?x335 ?x335 ?x68 ?x68)) ?x468 (* (- 3) (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x75 ?x75)) (* (- 2) (* ?x321 ?x321 ?x68)) (* 3 (* ?x321 ?x68 ?x75)) (* (- 3) (* ?x68 ?x75)) ?x297 (* (- 1) (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x68)) (* (- 1) (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x68 ?x75)) k m ?x150 (* (- 3) (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x75)) (* (- 1) (* ?x321 ?x321 ?x68 ?x68)) (* 2 (* ?x321 ?x321 ?x321 ?x335 ?x68 ?x68 ?x75)) ?x157 (* 2 (* ?x321 ?x68 ?x68)) (* (- 1) (* ?x68 ?x68)))))
 (let (($x524 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x635 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x743 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x139 (= (+ m (* (- 6) n)) 6)))
 (and $x139 (= ?x743 (- 4)) $x635 $x524 (not (= ?x221 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x293 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x75 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x321 (+ 1 n)))
 (let ((?x929 (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x75 ?x75)))
 (let ((?x733 (* m m n n)))
 (let ((?x636 (* 2 (* k m n n))))
 (let ((?x728 (* k k n n)))
 (let ((?x562 (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x68)))
 (let ((?x845 (* (- 3) (* c k n))))
 (let ((?x844 (* (- 3) (* k k n))))
 (let ((?x847 (* (- 3) (* c m n))))
 (let ((?x440 (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x68 ?x75)))
 (let ((?x389 (* 2 (* k n n))))
 (let ((?x387 (* 2 (* m n n))))
 (let ((?x849 (* 3 (* m n))))
 (let ((?x55 (* k n)))
 (let ((?x850 (* 3 ?x55)))
 (let ((?x162 (+ ?x850 (* (- 2) (* ?x321 ?x321 ?x321 ?x335 ?x68 ?x68 ?x75)) (* (- 1) (* ?x321 ?x321 ?x321 ?x335 ?x68 ?x68 ?x68 ?x75)) (* (- 1) (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x75)) (* (- 1) (* ?x321 ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x68)) (* 3 (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x75)) ?x849 (* (- 2) (* ?x321 ?x321 ?x321 ?x335 ?x335 ?x68 ?x68)) ?x387 ?x389 ?x440 (* (- 1) (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68)) (* (- 3) (* k m n)) ?x847 ?x844 ?x845 ?x562 ?x728 ?x636 ?x733 (* 3 ?x929))))
 (let (($x313 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x275 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x227 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x223 (= ?x227 4)))
 (let (($x139 (= (+ m (* (- 6) n)) 6)))
 (let (($x436 (and $x139 $x223 $x275 $x313 (not (= ?x162 0)))))
 (let ((?x157 (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x75)))
 (let ((?x150 (* ?x321 ?x321 ?x321 ?x335 ?x68 ?x68 ?x68 ?x75)))
 (let ((?x297 (* ?x321 ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x68)))
 (let ((?x468 (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68)))
 (let ((?x221 (+ (* ?x321 ?x68) (* 2 (* ?x321 ?x321 ?x321 ?x335 ?x335 ?x68 ?x68)) ?x468 (* (- 3) ?x929) (* (- 2) (* ?x321 ?x321 ?x68)) (* 3 (* ?x321 ?x68 ?x75)) (* (- 3) (* ?x68 ?x75)) ?x297 (* (- 1) ?x562) (* (- 1) ?x440) k m ?x150 (* (- 3) (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x75)) (* (- 1) (* ?x321 ?x321 ?x68 ?x68)) (* 2 (* ?x321 ?x321 ?x321 ?x335 ?x68 ?x68 ?x75)) ?x157 (* 2 (* ?x321 ?x68 ?x68)) (* (- 1) (* ?x68 ?x68)))))
 (let (($x524 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x635 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x743 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x381 (and $x139 (= ?x743 (- 4)) $x635 $x524 (not (= ?x221 0)))))
 (rewrite (= $x381 $x436)))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x106 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ k m)))
 (let ((?x100 (* ?x68 ?x68)))
 (let ((?x69 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x75 (+ c k)))
 (let ((?x74 (+ (* ?x68 ?x69) (* 2 ?x68 ?x68 ?x71 ?x71 ?x69 ?x69 ?x69) (* ?x68 ?x68 ?x71 ?x71 ?x69 ?x69))))
 (let ((?x79 (- (- ?x74 (* 3 ?x75 ?x75 ?x68 ?x68 ?x71 ?x69 ?x69)) (* 2 ?x68 ?x69 ?x69))))
 (let ((?x85 (+ (- (+ ?x79 (* 3 ?x75 ?x68 ?x69)) (* 3 ?x75 ?x68)) (* ?x68 ?x68 ?x68 ?x71 ?x71 ?x69 ?x69 ?x69))))
 (let ((?x89 (- (- ?x85 (* ?x68 ?x68 ?x68 ?x71 ?x71 ?x69 ?x69)) (* ?x75 ?x68 ?x68 ?x68 ?x71 ?x69 ?x69))))
 (let ((?x94 (- (+ ?x89 k m (* ?x75 ?x68 ?x68 ?x68 ?x71 ?x69 ?x69 ?x69)) (* 3 ?x75 ?x68 ?x68 ?x71 ?x71 ?x69 ?x69))))
 (let ((?x99 (+ (- ?x94 (* ?x68 ?x68 ?x69 ?x69)) (* 2 ?x75 ?x68 ?x68 ?x71 ?x69 ?x69 ?x69) (* ?x75 ?x68 ?x68 ?x71 ?x69 ?x69) (* 2 ?x68 ?x68 ?x69))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x99 ?x100) 0)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x473 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x75 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x321 (+ 1 n)))
 (let ((?x157 (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x75)))
 (let ((?x150 (* ?x321 ?x321 ?x321 ?x335 ?x68 ?x68 ?x68 ?x75)))
 (let ((?x297 (* ?x321 ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x68)))
 (let ((?x468 (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68)))
 (let ((?x221 (+ (* ?x321 ?x68) (* 2 (* ?x321 ?x321 ?x321 ?x335 ?x335 ?x68 ?x68)) ?x468 (* (- 3) (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x75 ?x75)) (* (- 2) (* ?x321 ?x321 ?x68)) (* 3 (* ?x321 ?x68 ?x75)) (* (- 3) (* ?x68 ?x75)) ?x297 (* (- 1) (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x68)) (* (- 1) (* ?x321 ?x321 ?x335 ?x68 ?x68 ?x68 ?x75)) k m ?x150 (* (- 3) (* ?x321 ?x321 ?x335 ?x335 ?x68 ?x68 ?x75)) (* (- 1) (* ?x321 ?x321 ?x68 ?x68)) (* 2 (* ?x321 ?x321 ?x321 ?x335 ?x68 ?x68 ?x75)) ?x157 (* 2 (* ?x321 ?x68 ?x68)) (* (- 1) (* ?x68 ?x68)))))
 (let (($x524 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x635 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x743 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x139 (= (+ m (* (- 6) n)) 6)))
 (let (($x381 (and $x139 (= ?x743 (- 4)) $x635 $x524 (not (= ?x221 0)))))
 (let ((?x100 (* ?x68 ?x68)))
 (let ((?x69 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x74 (+ (* ?x68 ?x69) (* 2 ?x68 ?x68 ?x71 ?x71 ?x69 ?x69 ?x69) (* ?x68 ?x68 ?x71 ?x71 ?x69 ?x69))))
 (let ((?x79 (- (- ?x74 (* 3 ?x75 ?x75 ?x68 ?x68 ?x71 ?x69 ?x69)) (* 2 ?x68 ?x69 ?x69))))
 (let ((?x85 (+ (- (+ ?x79 (* 3 ?x75 ?x68 ?x69)) (* 3 ?x75 ?x68)) (* ?x68 ?x68 ?x68 ?x71 ?x71 ?x69 ?x69 ?x69))))
 (let ((?x89 (- (- ?x85 (* ?x68 ?x68 ?x68 ?x71 ?x71 ?x69 ?x69)) (* ?x75 ?x68 ?x68 ?x68 ?x71 ?x69 ?x69))))
 (let ((?x94 (- (+ ?x89 k m (* ?x75 ?x68 ?x68 ?x68 ?x71 ?x69 ?x69 ?x69)) (* 3 ?x75 ?x68 ?x68 ?x71 ?x71 ?x69 ?x69))))
 (let ((?x99 (+ (- ?x94 (* ?x68 ?x68 ?x69 ?x69)) (* 2 ?x75 ?x68 ?x68 ?x71 ?x69 ?x69 ?x69) (* ?x75 ?x68 ?x68 ?x71 ?x69 ?x69) (* 2 ?x68 ?x68 ?x69))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x105 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x99 ?x100) 0))))))
 (rewrite (= $x105 $x381))))))))))))))))))))))))))))))))))
 ))
 (let ((@x107 (asserted $x106)))
 (let ((@x749 (mp (mp @x107 (quant-intro (proof-bind ?x473) (= $x106 $x911)) $x911) (rewrite (= $x911 $x911)) $x911)))
 (let ((@x594 (mp~ (mp @x749 (quant-intro (proof-bind ?x293) (= $x911 $x287)) $x287) (sk (~ $x287 $x185)) $x185)))
 (let ((@x392 (mp @x594 (rewrite (= $x185 $x767)) $x767)))
 (let ((@x224 (and-elim @x392 $x612)))
 (let ((@x865 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x612) $x597)) @x224 $x597)))
 (let (($x328 (>= ?x595 (- 1))))
 (let ((@x718 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x612) $x328)) @x224 $x328)))
 (let (($x617 (<= ?x417 (- 1))))
 (let ((@x216 (and-elim @x392 $x729)))
 (let ((@x274 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x729) $x617)) @x216 $x617)))
 (let (($x159 (>= ?x417 (- 1))))
 (let ((@x647 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x729) $x159)) @x216 $x159)))
 (let (($x362 (<= ?x602 4)))
 (let ((@x222 (and-elim @x392 $x541)))
 (let ((@x516 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x541) $x362)) @x222 $x362)))
 (let (($x176 (>= ?x602 4)))
 (let ((@x546 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x541) $x176)) @x222 $x176)))
 (let (($x446 (<= ?x618 (- 6))))
 (let ((@x774 (and-elim @x392 $x245)))
 (let ((@x367 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x245) $x446)) @x774 $x446)))
 (let (($x240 (>= ?x618 (- 6))))
 (let ((@x180 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x245) $x240)) @x774 $x240)))
 (let (($x700 (not (<= ?x596 0))))
 (let (($x340 (>= ?x596 0)))
 (let ((@x420 ((_ th-lemma arith) (hypothesis (not $x340)) @x647 @x274 @x718 @x865 @x718 @x865 @x647 @x274 @x647 @x274 @x180 @x367 @x718 @x865 @x718 @x865 @x546 @x516 @x647 @x274 @x647 @x274 @x718 @x865 @x718 @x865 @x647 @x274 @x180 @x367 @x647 @x274 @x718 @x865 @x647 @x274 @x180 @x367 @x718 @x865 false)))
 (let ((@x902 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x768 $x700 (not $x340))) (and-elim @x392 $x309) (or $x700 (not $x340)))))
 ((_ th-lemma arith) (unit-resolution @x902 (lemma @x420 $x340) $x700) @x647 @x274 @x546 @x516 @x647 @x274 @x546 @x516 @x546 @x516 @x647 @x274 @x546 @x516 @x180 @x367 @x647 @x274 @x546 @x516 @x647 @x274 @x718 @x865 @x647 @x274 @x546 @x516 @x546 @x516 @x180 @x367 @x647 @x274 @x546 @x516 @x647 @x274 @x546 @x516 @x180 @x367 @x647 @x274 @x546 @x516 @x647 @x274 @x718 @x865 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        18
 :arith-assert-upper        27
 :arith-branch-var          2
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           12
 :arith-gomory-cuts         1
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             289
 :arith-nonlinear-bounds    12
 :arith-nonlinear-horner    19
 :arith-num-rows            10
 :arith-patches             4
 :arith-pivots              11
 :arith-row-summations      44
 :arith-tableau-max-columns 52
 :arith-tableau-max-rows    10
 :conflicts                 3
 :decisions                 21
 :del-clause                16
 :final-checks              9
 :max-memory                19.77
 :memory                    19.24
 :mk-bool-var               36
 :mk-clause                 16
 :num-allocs                721867
 :num-checks                1
 :propagations              11
 :rlimit-count              25404
 :time                      0.02
 :total-time                0.03)
