unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1928 (* (- 1) s!1)))
 (let ((?x319 (* r00 r00)))
 (let ((?x7259 (* (- 3) ?x319)))
 (let ((?x7923 (+ s00 ?x7259 ?x1928 (* 3 (* r!2 r!2)))))
 (let (($x8368 (<= ?x7923 0)))
 (let (($x4885 (= ?x7923 0)))
 (let ((?x3193 (* (- 36) (* r00 r00 x!0))))
 (let ((?x9151 (* 6 r!2)))
 (let ((?x4384 (+ 3 s!1 ?x9151)))
 (let ((?x1929 (+ ?x1928 x!0)))
 (let ((?x6966 (* r00 r00 s!1)))
 (let ((?x3182 (* 36 ?x6966)))
 (let ((?x6011 (* (- 36) (* r00 r!2 x!0))))
 (let ((?x1925 (+ 1 r!2)))
 (let ((?x4880 (* ?x1925 ?x1925 ?x1925 ?x1929 ?x1929 ?x1929)))
 (let ((?x2618 (* r00 s!1)))
 (let ((?x6622 (* 9 ?x2618)))
 (let ((?x2374 (* s!1 s!1)))
 (let ((?x3195 (* 15 ?x2374)))
 (let ((?x3164 (* (- 9) s!1)))
 (let ((?x1431 (+ (* 1260 (* s00 r00 r!2 r!2 r!2 x!0)) (* (- 9) (* r00 x!0)) (* 36 (* r00 s!1 r!2)) ?x3164 (* (- 36) (* r00 r00 r00 s!1 r!2 r!2 x!0 x!0)) (* (- 6) (* s00 r00 s!1 s!1 s!1 s!1)) (* (- 336) (* r00 r00 r00 s!1 x!0)) (* (- 900) (* s00 r00 s!1 r!2)) (* (- 15) (* s00 s!1 s!1 r!2 r!2)) (* 7 (* s00 x!0 x!0)) (* 6 (* x!0 x!0 x!0)) (* 3 (* r00 s!1 s!1 s!1 r!2 r!2)) (* 6 (* x00 s!1 s!1 s!1 r!2 r!2)) (* 12 (* x00 s!1 s!1 s!1 r!2)) (* (- 1284) (* r00 r00 r00 s!1 r!2 r!2 x!0)) (* (- 2520) (* r00 r00 r00 r!2 r!2 r!2 x!0)) (* 12 (* r00 r00 r00 r!2 r!2 x!0 x!0 x!0)) (* 36 (* r00 r00 s!1 r!2 r!2 r!2 x!0 x!0)) (* (- 72) (* r00 r00 r00 s!1 s!1 x!0)) (* (- 3708) (* r00 r00 r00 r!2 r!2 x!0)) (* (- 1272) (* r00 r00 r00 s!1 r!2 x!0)) (* (- 1800) (* r00 r00 r00 r!2 x!0)) (* 12 (* r00 r00 r00 s!1 s!1 s!1 s!1)) (* 192 (* r00 r00 r00 s!1 s!1 s!1 r!2)) (* (- 2) (* ?x1925 ?x1929 ?x4384 ?x4384 ?x4384 ?x4384)) (* 1284 (* r00 r00 r00 s!1 s!1 r!2 r!2)) (* 2520 (* r00 r00 r00 s!1 r!2 r!2 r!2)) (* 1272 (* r00 r00 r00 s!1 s!1 r!2)) (* 96 (* r00 r00 r00 s!1 s!1 s!1)) (* 3708 (* r00 r00 r00 s!1 r!2 r!2)) (* 324 (* r00 r00 r00 s!1 s!1)) (* 1800 (* r00 r00 r00 s!1 r!2)) (* (- 144) (* r00 r00 r00 s!1 s!1 r!2 x!0)) (* 6 (* s00 r00 s!1 s!1 s!1 x!0)) (* (- 12) (* r00 r00 r00 s!1 s!1 s!1 x!0)) (* (- 36) (* r00 r00 r!2 r!2 x!0 x!0 x!0)) (* 900 (* s00 r00 r!2 x!0)) (* (- 36) (* r00 r00 r00 s!1 x!0 x!0)) (* (- 102) (* s00 s!1 r!2 r!2 r!2)) (* 3 (* r00 ?x1929 ?x4384 ?x4384 ?x4384)) (* 9 x!0) (* 96 (* s00 r!2 x!0)) (* 45 (* r!2 x!0)) (* 6 (* s!1 r!2 r!2 x!0 x!0)) (* 2 (* ?x1925 ?x1925 ?x1925 ?x1929 ?x1929 ?x1929 ?x4384)) (* 18 (* x!0 x!0)) (* 12 (* r00 r00 r00 x!0 x!0)) (* (- 1) (* s!1 s!1 s!1)) (* (- 36) (* r00 r00 s!1 s!1 r!2 r!2 r!2 x!0)) (* (- 33) (* s!1 x!0)) ?x3195 (* (- 13) (* s!1 x!0 x!0)) (* (- 36) (* x00 r!2 r!2 r!2 x!0)) (* (- 36) (* x00 s!1 s!1 r!2 x!0)) (* (- 141) (* s!1 r!2 x!0)) ?x6622 (* 36 (* r00 r00 s!1 s!1 s!1 r!2)) (* (- 108) (* r00 r00 s!1 s!1 r!2 r!2 x!0)) (* 36 (* r00 r00 s!1 s!1 s!1 r!2 r!2)) (* 108 (* r00 r00 s!1 r!2 r!2 x!0 x!0)) (* 168 (* s00 r00 s!1 x!0)) (* 12 (* r00 r00 s!1 s!1 s!1)) (* 24 (* r00 r00 s!1 s!1 r!2)) (* 14 (* s!1 r!2 x!0 x!0)) (* 18 (* x00 s!1 r!2 r!2 x!0 x!0)) (* (- 6) (* x00 x!0 x!0 x!0)) (* (- 12) (* x00 r!2 x!0 x!0 x!0)) (* (- 6) (* x00 r!2 r!2 x!0 x!0 x!0)) (* 36 (* x00 s!1 r!2 x!0 x!0)) (* 18 (* x00 s!1 x!0 x!0)) (* (- 4) (* s00 ?x1925 ?x1929 ?x4384 ?x4384 ?x4384)) (* (- 12) (* s00 r00 r!2 x!0 x!0 x!0)) (* 72 (* s00 r00 s!1 s!1 r!2 x!0)) (* (- 6) (* x00 x!0 x!0)) (* (- 48) (* s00 r00 s!1 s!1 s!1)) (* 6 (* s00 r00 s!1 s!1 s!1 r!2 r!2)) (* (- 6) (* r00 s!1 r!2 x!0)) (* (- 45) (* r00 r!2 r!2 x!0)) (* 36 (* r00 r00 s!1 s!1 r!2 r!2)) (* (- 21) (* s00 s!1 x!0 x!0)) (* (- 24) (* s00 s!1 r!2 r!2 r!2 r!2)) (* (- 324) (* r00 r00 r!2 r!2 x!0)) (* (- 63) (* s!1 r!2 r!2 r!2)) (* (- 12) (* r00 r00 s!1 r!2 x!0)) (* 93 (* s!1 s!1 r!2 r!2)) (* (- 12) (* r00 r00 r!2 x!0 x!0)) (* (- 12) (* r00 r00 x!0 x!0)) (* 14 (* s!1 s!1 s!1 r!2)) (* (- 28) (* s!1 s!1 r!2 x!0)) (* (- 7) (* s00 s!1 s!1 s!1)) (* (- 6) (* s00 r00 r!2 r!2 x!0 x!0 x!0)) (* (- 6) (* s00 r00 x!0 x!0 x!0)) (* 36 (* s00 r00 s!1 r!2 x!0 x!0)) (* 18 (* s00 r00 s!1 r!2 r!2 x!0 x!0)) (* 18 (* s00 r00 s!1 x!0 x!0)) (* (- 96) (* s00 r00 s!1 s!1 s!1 r!2)) (* 36 (* s00 r00 s!1 s!1 x!0)) (* (- 18) (* s00 r00 s!1 s!1 r!2 r!2 x!0)) (* 6 (* x00 ?x1929 ?x4384 ?x4384 ?x4384)) (* 4 (* s00 r!2 r!2 r!2 x!0 x!0 x!0)) (* 180 (* r00 r00 s!1 r!2)) (* 108 (* r00 r00 s!1 r!2 x!0 x!0)) (* 324 (* r00 r00 s!1 r!2 r!2)) (* 252 (* r00 r00 s!1 r!2 r!2 r!2)) (* 12 (* r00 r00 ?x1925 ?x1929 ?x4384 ?x4384 ?x4384)) (* 2 (* ?x1925 ?x1925 ?x1925 ?x1929 ?x4384 ?x4384)) (* (- 18) (* r00 r!2 r!2 r!2 x!0)) (* 63 (* r!2 r!2 r!2 x!0)) (* 3 (* r00 s!1 s!1 r!2 r!2)) (* 6 (* r00 s!1 s!1 r!2)) (* 18 (* r00 s!1 r!2 r!2 r!2)) (* 45 (* r00 s!1 r!2 r!2)) (* 4 (* s00 s!1 r!2 r!2 r!2 x!0)) (* (- 3) (* ?x1925 ?x1929 ?x4384 ?x4384 ?x4384)) (* 36 (* x00 s!1 r!2 r!2 r!2)) (* 90 (* x00 s!1 r!2 r!2)) (* (- 153) (* s00 s!1 r!2 r!2)) (* 15 (* s00 r!2 r!2 x!0 x!0 x!0)) (* 7 (* s00 x!0 x!0 x!0)) (* (- 54) (* s00 s!1 r!2 x!0 x!0)) (* (- 36) (* r00 r00 s!1 r!2 r!2 x!0)) (* (- 72) (* r00 r00 r!2 r!2 r!2 r!2 x!0)) (* (- 6) (* ?x1929 ?x1929 ?x4384 ?x4384 ?x4384)) (* (- 12) (* r00 r00 s!1 r!2 r!2 r!2 x!0)) (* (- 3) (* r00 s!1 r!2 r!2 x!0)) (* 72 (* r00 r00 s!1 r!2 r!2 r!2 r!2)) (* (- 18) (* s!1 r!2 r!2 r!2 r!2)) (* (- 15) (* s00 s!1 s!1 s!1 r!2 r!2)) (* (- 252) (* r00 r00 r!2 r!2 r!2 x!0)) (* (- 180) (* r00 r00 r!2 x!0)) (* (- 4) (* s00 s!1 s!1 r!2 r!2 r!2)) (* 12 (* r00 r00 s!1 s!1 r!2 r!2 r!2)) (* (- 81) (* s!1 r!2 r!2)) (* (- 45) (* s00 s!1 r!2 r!2 x!0 x!0)) (* (- 14) (* s00 s!1 s!1 r!2)) (* (- 90) (* x00 r!2 r!2 x!0)) (* (- 636) (* s00 r00 s!1 s!1 r!2)) (* (- 9) (* r00 s!1 s!1 x!0)) (* 3 (* r00 s!1 s!1 s!1)) (* 6 (* r00 s!1 s!1 s!1 r!2)) (* (- 18) (* r00 s!1 s!1 r!2 x!0)) (* (- 9) (* r00 s!1 s!1 r!2 r!2 x!0)) (* 9 (* r00 s!1 x!0 x!0)) (* 18 (* r00 s!1 r!2 x!0 x!0)) (* (- 12) (* s00 s!1 r!2 r!2 r!2 x!0 x!0)) (* (- 69) (* s!1 r!2 r!2 r!2 x!0)) (* 4 (* s00 r!2 x!0 x!0)) (* (- 12) (* r00 r00 r!2 r!2 r!2 x!0 x!0 x!0)) (* (- 1260) (* s00 r00 s!1 r!2 r!2 r!2)) (* (- 12) (* r00 r00 r00 s!1 s!1 s!1 r!2 r!2)) (* (- 12) (* s!1 s!1 r!2 r!2 x!0)) (* 9 (* r00 s!1 r!2 r!2 x!0 x!0)) (* 10 (* s00 s!1 r!2 x!0)) (* 36 (* r00 r00 s!1 x!0 x!0)) (* (- 3) (* ?x1925 ?x1925 ?x1929 ?x4384 ?x4384)) (* 45 (* s00 s!1 s!1 r!2 r!2 x!0)) (* 21 (* s00 s!1 s!1 x!0)) (* 18 (* s00 r!2 x!0 x!0 x!0)) (* 102 (* s00 r!2 r!2 r!2 x!0)) (* 3 ?x4880) (* 15 (* s00 s!1 r!2 r!2 x!0)) (* 36 (* r00 r00 r00 s!1 s!1 r!2 r!2 x!0)) (* (- 72) (* r00 r00 r00 s!1 r!2 x!0 x!0)) (* (- 96) (* s00 s!1 r!2)) (* 6 (* x00 s!1 s!1 r!2 r!2)) (* (- 18) (* s00 s!1 s!1 s!1 r!2)) (* (- 1854) (* s00 r00 s!1 r!2 r!2)) (* (- 7) (* s00 s!1 x!0)) (* 153 (* s00 r!2 r!2 x!0)) (* (- 108) (* r00 r00 s!1 s!1 r!2 x!0)) (* 33 (* s!1 s!1 r!2 r!2 r!2)) (* 8 (* s!1 s!1 x!0)) (* 72 (* x00 s!1 r!2)) (* 102 (* r!2 r!2 x!0 x!0)) (* (- 3) (* r00 x!0 x!0)) (* 1854 (* s00 r00 r!2 r!2 x!0)) (* (- 4) (* s00 s!1 s!1 s!1 r!2 r!2 r!2)) (* 12 (* x00 s!1 s!1 r!2)) (* (- 72) (* x00 r!2 x!0)) (* 24 (* s00 r!2 r!2 r!2 r!2 x!0)) (* 75 (* r!2 x!0 x!0)) (* 36 (* r!2 r!2 r!2 x!0 x!0)) (* 66 (* s!1 s!1 r!2)) (* 6 (* ?x1925 ?x1925 ?x1929 ?x1929 ?x1929 ?x1929)) (* 81 (* r!2 r!2 x!0)) (* (- 36) (* r00 r00 s!1 s!1 x!0)) (* (- 3) (* r00 r!2 r!2 x!0 x!0 x!0)) (* 18 (* r!2 r!2 r!2 r!2 x!0)) ?x6011 (* 21 (* s00 x!0)) (* 18 (* x00 s!1)) (* (- 45) (* s!1 r!2)) (* 6 (* x00 s!1 s!1 s!1)) (* 24 (* r00 r00 r00 r!2 x!0 x!0 x!0)) (* (- 162) (* s00 r00 s!1 s!1)) (* 636 (* s00 r00 s!1 r!2 x!0)) (* 642 (* s00 r00 s!1 r!2 r!2 x!0)) (* (- 6) (* s00 r00 x!0 x!0)) ?x3182 (* 12 (* r00 r00 s!1 x!0)) (* (- 3) (* ?x1925 ?x1925 ?x1929 ?x1929 ?x1929 ?x4384)) (* 3 (* ?x1929 ?x4384 ?x4384 ?x4384 ?x4384)) (* 6 (* x00 s!1 x!0)) (* (- 6) (* x00 s!1 r!2 r!2 x!0)) (* (- 12) (* x00 s!1 r!2 x!0)) (* (- 3) (* s00 ?x1929 ?x4384 ?x4384 ?x4384)) (* (- 18) (* x00 s!1 s!1 r!2 r!2 x!0)) (* 6 (* s!1 s!1 s!1 r!2 r!2)) (* (- 642) (* s00 r00 s!1 s!1 r!2 r!2)) (* (- 3) (* r00 x!0 x!0 x!0)) (* (- 6) (* r00 r!2 x!0 x!0 x!0)) (* (- 144) (* s00 r00 s!1)) (* 12 (* s00 s!1 s!1 r!2 r!2 r!2 x!0)) (* (- 21) (* s00 s!1)) (* 12 (* r00 r00 s!1 s!1 s!1 r!2 r!2 r!2)) (* 288 (* r00 r00 r00 s!1)) (* (- 18) (* x00 s!1 s!1 x!0)) (* 3 (* r00 s!1 x!0)) (* 12 (* r00 r00 r00 x!0 x!0 x!0)) (* (- 12) (* r00 r00 x!0 x!0 x!0)) (* (- 36) (* r00 r00 r!2 x!0 x!0 x!0)) (* (- 288) (* r00 r00 r00 x!0)) (* 144 (* s00 r00 x!0)) (* (- 18) (* x00 x!0)) (* 54 (* s00 s!1 s!1 r!2 x!0)) ?x3193 (* (- 195) (* s!1 r!2 r!2 x!0)))))
 (let (($x1509 (= ?x1431 0)))
 (let (($x1867 (not $x1509)))
 (let ((?x1364 (* x00 x00)))
 (let ((?x6868 (* 108 ?x1364)))
 (let ((?x1202 (* s00 s00 s00)))
 (let ((?x4761 (* 16 ?x1202)))
 (let ((?x900 (* r00 r00 r00 x00)))
 (let ((?x2559 (* (- 432) ?x900)))
 (let ((?x823 (* s00 x00)))
 (let ((?x4259 (* (- 108) ?x823)))
 (let ((?x665 (* s00 r00 r00)))
 (let ((?x3141 (* (- 36) ?x665)))
 (let ((?x609 (* s00 s00)))
 (let ((?x4931 (* 51 ?x609)))
 (let ((?x540 (* r00 x00)))
 (let ((?x5349 (* 108 ?x540)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1360 (+ ?x137 (* (- 108) (* r00 x!0)) (* (- 54) (* s00 r00)) ?x3164 (* 216 (* s00 r00 x00)) ?x5349 ?x4931 ?x3141 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x4259 ?x2559 (* 216 (* s00 r00 r00 r00)) ?x4761 ?x6868 (* 108 (* x!0 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* (- 108) (* s!1 x!0)) ?x3195 (* 54 ?x2618) (* 108 (* s00 x!0)) (* 108 (* x00 s!1)) ?x3182 (* 108 (* s00 r00 s!1)) (* (- 66) (* s00 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* 36 (* r00 r00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* x00 x!0)))))
 (let ((?x895 (* r00 r00 x00)))
 (let ((?x6266 (* 36 ?x895)))
 (let ((?x6515 (* (- 6) ?x823)))
 (let ((?x6758 (* 15 ?x609)))
 (let ((?x6682 (* 54 ?x540)))
 (let ((?x3199 (+ ?x137 (* (- 54) (* r00 x!0)) (* (- 24) (* s00 r00)) ?x3164 ?x6682 ?x6758 ?x3141 (* 2 (* s00 s00 r00)) ?x6515 ?x6266 (* (- 54) (* r!2 x!0)) (* (- 6) (* s!1 x!0)) (* (- 3) ?x2374) (* 24 ?x2618) (* 36 (* r00 x00 r!2)) (* (- 2) (* s00 s!1 r!2)) (* (- 2) (* s!1 s!1 r!2)) (* (- 24) (* s00 r!2)) ?x6011 (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* 6 (* x00 s!1)) (* 4 (* s00 s00 r!2)) (* 24 (* s!1 r!2)) ?x3182 (* 2 (* s00 r00 s!1)) (* (- 12) (* s00 s!1)) ?x3193 (* 54 (* x00 r!2)))))
 (let (($x3206 (= ?x3199 0)))
 (let ((?x2538 (* 4 ?x609)))
 (let ((?x3044 (* 18 ?x540)))
 (let ((?x5388 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x6207 (+ ?x44 (* (- 18) (* r00 x!0)) (* (- 6) (* r00 s!1 r!2)) (* (- 9) (* s00 r00)) ?x5388 ?x3044 ?x2538 (* (- 6) ?x665) (* 6 (* s00 r00 r!2)) (* (- 18) (* r!2 x!0)) (* (- 2) ?x2374) ?x6622 (* (- 9) (* s00 r!2)) (* 9 (* s!1 r!2)) (* 6 ?x6966) (* (- 2) (* s00 s!1)) (* 18 (* x00 r!2)))))
 (let (($x6633 (= ?x6207 0)))
 (let ((?x5387 (* 6 x!0)))
 (let ((?x487 (* r00 r00 r00)))
 (let ((?x488 (* 12 ?x487)))
 (let ((?x474 (* 3 r!2)))
 (let ((?x444 (* s00 r00)))
 (let ((?x522 (* (- 6) ?x444)))
 (let ((?x519 (* (- 6) x00)))
 (let ((?x518 (* (- 3) r00)))
 (let ((?x2037 (+ ?x44 ?x518 ?x519 ?x522 ?x5388 ?x474 ?x488 ?x5387 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) (* 2 (* s!1 r!2)))))
 (let (($x7831 (= ?x2037 0)))
 (let (($x6895 (and $x4885 $x7831 $x6633 $x3206 (= ?x1360 0) $x1867)))
 (let ((?x9153 (+ 3 ?x9151 s!1)))
 (let ((?x2769 (* 36 (* x!0 r00 r00))))
 (let ((?x2211 (* s!1 s!1 s!1)))
 (let ((?x3450 (* s!1 r00)))
 (let ((?x3451 (* (- 9) ?x3450)))
 (let ((?x1944 (* s!1 r00 r00)))
 (let ((?x7936 (* (- 36) ?x1944)))
 (let ((?x7935 (* 36 (* r!2 x!0 r00))))
 (let ((?x2202 (* (- 15) ?x2374)))
 (let ((?x451 (* 9 s!1)))
 (let ((?x4050 (+ ?x451 (* (- 9) x!0) (* 45 (* r!2 s!1)) (* 2 (* ?x1925 ?x1929 ?x9153 ?x9153 ?x9153 ?x9153)) ?x2202 (* (- 45) (* r!2 x!0)) (* (- 36) (* r!2 s!1 r00)) ?x7935 ?x7936 (* (- 21) (* x!0 s00)) (* 9 (* x!0 r00)) (* (- 288) (* s!1 r00 r00 r00)) (* 21 (* s!1 s00)) (* (- 45) (* r!2 r!2 s!1 s!1 x!0 s00)) ?x3451 (* (- 18) (* s!1 x00)) (* (- 12) (* x!0 x!0 r00 r00 r00)) (* (- 3) (* r00 ?x1929 ?x9153 ?x9153 ?x9153)) (* 144 (* s!1 s00 r00)) ?x2211 (* (- 66) (* r!2 s!1 s!1)) (* 33 (* s!1 x!0)) (* (- 18) (* x!0 x!0)) (* 96 (* r!2 s!1 s00)) ?x2769 (* 288 (* x!0 r00 r00 r00)) (* (- 144) (* x!0 s00 r00)) (* (- 4) (* r!2 x!0 x!0 s00)) (* 18 (* x!0 x00)) (* (- 3) (* s!1 s!1 s!1 r00)) (* (- 6) (* r!2 s!1 s!1 s!1 r00)) (* (- 3) (* r!2 r!2 s!1 s!1 s!1 r00)) (* 9 (* s!1 s!1 x!0 r00)) (* 18 (* r!2 s!1 s!1 x!0 r00)) (* 9 (* r!2 r!2 s!1 s!1 x!0 r00)) (* (- 9) (* s!1 x!0 x!0 r00)) (* (- 18) (* r!2 s!1 x!0 x!0 r00)) (* (- 9) (* r!2 r!2 s!1 x!0 x!0 r00)) (* 3 (* x!0 x!0 x!0 r00)) (* 6 (* r!2 x!0 x!0 x!0 r00)) (* 3 (* r!2 r!2 x!0 x!0 x!0 r00)) (* (- 6) (* s!1 x!0 x00)) (* 12 (* r!2 s!1 x!0 x00)) (* 6 (* r!2 r!2 s!1 x!0 x00)) (* 3 (* s00 ?x1929 ?x9153 ?x9153 ?x9153)) (* (- 3) (* ?x1929 ?x9153 ?x9153 ?x9153 ?x9153)) (* (- 72) (* r!2 s!1 x00)) (* (- 90) (* r!2 r!2 s!1 x00)) (* (- 36) (* r!2 r!2 r!2 s!1 x00)) (* (- 12) (* r!2 s!1 s!1 x00)) (* (- 6) (* r!2 r!2 s!1 s!1 x00)) (* 72 (* r!2 x!0 x00)) (* 90 (* r!2 r!2 x!0 x00)) (* 36 (* r!2 r!2 r!2 x!0 x00)) (* (- 24) (* r!2 r!2 r!2 r!2 x!0 s00)) (* (- 6) (* x!0 x!0 x!0)) (* 4 (* r!2 r!2 r!2 s!1 s!1 s!1 s00)) (* 13 (* s!1 x!0 x!0)) (* (- 8) (* s!1 s!1 x!0)) (* 141 (* r!2 s!1 x!0)) (* (- 2) (* ?x1925 ?x1925 ?x1925 ?x1929 ?x1929 ?x1929 ?x9153)) (* (- 75) (* r!2 x!0 x!0)) (* 3 (* ?x1925 ?x1925 ?x1929 ?x9153 ?x9153)) (* (- 33) (* r!2 r!2 r!2 s!1 s!1)) (* (- 36) (* r!2 r!2 r!2 x!0 x!0)) (* (- 6) (* r!2 r!2 s!1 s!1 s!1)) (* (- 6) (* s!1 s!1 s!1 x00)) (* 12 (* r!2 r!2 s!1 s!1 x!0)) (* (- 12) (* r!2 r!2 r!2 s!1 s!1 x!0 s00)) (* (- 14) (* r!2 s!1 x!0 x!0)) (* 4 (* r!2 r!2 r!2 s!1 s!1 s00)) (* (- 7) (* x!0 x!0 s00)) (* (- 6) (* r!2 r!2 s!1 x!0 x!0)) (* (- 12) (* s!1 s!1 s!1 r00 r00)) (* (- 36) (* r!2 s!1 s!1 s!1 r00 r00)) (* (- 36) (* r!2 r!2 s!1 s!1 s!1 r00 r00)) (* (- 12) (* r!2 r!2 r!2 s!1 s!1 s!1 r00 r00)) (* 36 (* s!1 s!1 x!0 r00 r00)) (* 108 (* r!2 s!1 s!1 x!0 r00 r00)) (* 108 (* r!2 r!2 s!1 s!1 x!0 r00 r00)) (* 36 (* r!2 r!2 r!2 s!1 s!1 x!0 r00 r00)) (* (- 36) (* s!1 x!0 x!0 r00 r00)) (* (- 108) (* r!2 s!1 x!0 x!0 r00 r00)) (* (- 108) (* r!2 r!2 s!1 x!0 x!0 r00 r00)) (* 12 (* r!2 r!2 s!1 s!1 s!1 r00 r00 r00)) (* (- 36) (* r!2 r!2 r!2 s!1 x!0 x!0 r00 r00)) (* (- 36) (* r!2 r!2 s!1 s!1 x!0 r00 r00 r00)) (* 36 (* s!1 x!0 x!0 r00 r00 r00)) (* 72 (* r!2 s!1 x!0 x!0 r00 r00 r00)) (* 36 (* r!2 r!2 s!1 x!0 x!0 r00 r00 r00)) (* 12 (* x!0 x!0 x!0 r00 r00)) (* 36 (* r!2 x!0 x!0 x!0 r00 r00)) (* (- 12) (* x!0 x!0 x!0 r00 r00 r00)) (* 36 (* r!2 r!2 x!0 x!0 x!0 r00 r00)) (* (- 24) (* r!2 x!0 x!0 x!0 r00 r00 r00)) (* (- 12) (* r!2 r!2 x!0 x!0 x!0 r00 r00 r00)) (* 12 (* r!2 r!2 r!2 x!0 x!0 x!0 r00 r00)) (* 12 (* r!2 r!2 r!2 s!1 x!0 x!0 s00)) (* 69 (* r!2 r!2 r!2 s!1 x!0)) (* 195 (* r!2 r!2 s!1 x!0)) (* 18 (* s!1 s!1 x!0 x00)) (* (- 3) (* s!1 x!0 r00)) (* 3 (* x!0 x!0 r00)) (* (- 24) (* r!2 s!1 s!1 r00 r00)) (* (- 12) (* s!1 x!0 r00 r00)) (* 12 (* r!2 s!1 x!0 r00 r00)) (* (- 93) (* r!2 r!2 s!1 s!1)) (* 12 (* x!0 x!0 r00 r00)) (* (- 102) (* r!2 r!2 x!0 x!0)) (* 12 (* r!2 x!0 x!0 r00 r00)) (* (- 14) (* r!2 s!1 s!1 s!1)) (* 28 (* r!2 s!1 s!1 x!0)) (* 6 (* r!2 r!2 x!0 x!0 x!0 s00 r00)) (* 12 (* r!2 x!0 x!0 x!0 s00 r00)) (* 6 (* x!0 x!0 x!0 s00 r00)) (* (- 18) (* r!2 r!2 s!1 x!0 x!0 s00 r00)) (* (- 36) (* r!2 s!1 x!0 x!0 s00 r00)) (* (- 18) (* s!1 x!0 x!0 s00 r00)) (* 48 (* s!1 s!1 s!1 s00 r00)) (* 96 (* r!2 s!1 s!1 s!1 s00 r00)) (* (- 6) (* r!2 r!2 s!1 s!1 s!1 s00 r00)) (* (- 36) (* s!1 s!1 x!0 s00 r00)) (* (- 72) (* r!2 s!1 s!1 x!0 s00 r00)) (* 18 (* r!2 r!2 s!1 s!1 x!0 s00 r00)) (* 6 (* x!0 x!0 x00)) (* (- 6) (* x00 ?x1929 ?x9153 ?x9153 ?x9153)) (* (- 4) (* r!2 r!2 r!2 x!0 x!0 x!0 s00)) (* (- 4) (* r!2 r!2 r!2 s!1 x!0 s00)) (* (- 45) (* r!2 r!2 s!1 r00)) (* (- 18) (* r!2 r!2 r!2 s!1 r00)) (* (- 6) (* r!2 s!1 s!1 r00)) (* (- 3) (* r!2 r!2 s!1 s!1 r00)) (* 45 (* r!2 r!2 x!0 r00)) (* 18 (* r!2 r!2 r!2 x!0 r00)) (* 6 (* r!2 s!1 x!0 r00)) (* (- 2) (* ?x1925 ?x1925 ?x1925 ?x1929 ?x9153 ?x9153)) (* (- 12) (* r00 r00 ?x1925 ?x1929 ?x9153 ?x9153 ?x9153)) (* 3 (* r!2 r!2 s!1 x!0 r00)) (* 15 (* r!2 r!2 s!1 s!1 s!1 s00)) (* (- 6) (* ?x1925 ?x1925 ?x1929 ?x1929 ?x1929 ?x1929)) (* 12 (* r!2 r!2 r!2 s!1 x!0 r00 r00)) (* 6 (* ?x1929 ?x1929 ?x9153 ?x9153 ?x9153)) (* 24 (* r!2 r!2 r!2 r!2 s!1 s00)) (* (- 72) (* r!2 r!2 r!2 r!2 s!1 r00 r00)) (* (- 252) (* r!2 r!2 r!2 s!1 r00 r00)) (* (- 324) (* r!2 r!2 s!1 r00 r00)) (* (- 180) (* r!2 s!1 r00 r00)) (* 3 (* ?x1925 ?x1929 ?x9153 ?x9153 ?x9153)) (* (- 36) (* r!2 r!2 s!1 s!1 r00 r00)) (* 81 (* r!2 r!2 s!1)) (* (- 12) (* r!2 r!2 r!2 s!1 s!1 r00 r00)) (* 63 (* r!2 r!2 r!2 s!1)) (* 180 (* r!2 x!0 r00 r00)) (* (- 81) (* r!2 r!2 x!0)) (* 324 (* r!2 r!2 x!0 r00 r00)) (* (- 63) (* r!2 r!2 r!2 x!0)) (* 252 (* r!2 r!2 r!2 x!0 r00 r00)) (* 18 (* r!2 r!2 r!2 r!2 s!1)) (* 72 (* r!2 r!2 r!2 r!2 x!0 r00 r00)) (* 36 (* r!2 r!2 s!1 x!0 r00 r00)) (* (- 18) (* r!2 r!2 r!2 r!2 x!0)) (* 54 (* r!2 s!1 x!0 x!0 s00)) (* (- 7) (* x!0 x!0 x!0 s00)) (* (- 15) (* r!2 r!2 x!0 x!0 x!0 s00)) (* 21 (* s!1 x!0 x!0 s00)) (* 153 (* r!2 r!2 s!1 s00)) (* 45 (* r!2 r!2 s!1 x!0 x!0 s00)) (* 14 (* r!2 s!1 s!1 s00)) (* 7 (* s!1 s!1 s!1 s00)) (* (- 96) (* r!2 x!0 s00)) (* 7 (* s!1 x!0 s00)) (* (- 153) (* r!2 r!2 x!0 s00)) (* (- 10) (* r!2 s!1 x!0 s00)) (* (- 18) (* r!2 x!0 x!0 x!0 s00)) (* (- 21) (* s!1 s!1 x!0 s00)) (* 102 (* r!2 r!2 r!2 s!1 s00)) (* 15 (* r!2 r!2 s!1 s!1 s00)) (* 18 (* r!2 s!1 s!1 s!1 s00)) (* (- 102) (* r!2 r!2 r!2 x!0 s00)) (* (- 15) (* r!2 r!2 s!1 x!0 s00)) (* (- 54) (* r!2 s!1 s!1 x!0 s00)) (* 6 (* r!2 r!2 x!0 x!0 x!0 x00)) (* 12 (* r!2 x!0 x!0 x!0 x00)) (* 6 (* x!0 x!0 x!0 x00)) (* (- 18) (* r!2 r!2 s!1 x!0 x!0 x00)) (* (- 36) (* r!2 s!1 x!0 x!0 x00)) (* (- 18) (* s!1 x!0 x!0 x00)) (* 4 (* s00 ?x1925 ?x1929 ?x9153 ?x9153 ?x9153)) (* 18 (* r!2 r!2 s!1 s!1 x!0 x00)) (* 36 (* r!2 s!1 s!1 x!0 x00)) (* (- 3) ?x4880) (* (- 12) (* r!2 s!1 s!1 s!1 x00)) (* (- 6) (* r!2 r!2 s!1 s!1 s!1 x00)) (* 900 (* r!2 s!1 s00 r00)) (* 1854 (* r!2 r!2 s!1 s00 r00)) (* 1260 (* r!2 r!2 r!2 s!1 s00 r00)) (* 636 (* r!2 s!1 s!1 s00 r00)) (* 642 (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 900) (* r!2 x!0 s00 r00)) (* (- 1854) (* r!2 r!2 x!0 s00 r00)) (* (- 1260) (* r!2 r!2 r!2 x!0 s00 r00)) (* (- 168) (* s!1 x!0 s00 r00)) (* (- 636) (* r!2 s!1 x!0 s00 r00)) (* (- 642) (* r!2 r!2 s!1 x!0 s00 r00)) (* 6 (* x!0 x!0 s00 r00)) (* 3 (* ?x1925 ?x1925 ?x1929 ?x1929 ?x1929 ?x9153)) (* 162 (* s!1 s!1 s00 r00)) (* (- 1800) (* r!2 s!1 r00 r00 r00)) (* (- 324) (* s!1 s!1 r00 r00 r00)) (* (- 3708) (* r!2 r!2 s!1 r00 r00 r00)) (* (- 1272) (* r!2 s!1 s!1 r00 r00 r00)) (* (- 96) (* s!1 s!1 s!1 r00 r00 r00)) (* (- 2520) (* r!2 r!2 r!2 s!1 r00 r00 r00)) (* (- 1284) (* r!2 r!2 s!1 s!1 r00 r00 r00)) (* (- 192) (* r!2 s!1 s!1 s!1 r00 r00 r00)) (* (- 12) (* s!1 s!1 s!1 s!1 r00 r00 r00)) (* 1800 (* r!2 x!0 r00 r00 r00)) (* 336 (* s!1 x!0 r00 r00 r00)) (* 3708 (* r!2 r!2 x!0 r00 r00 r00)) (* 1272 (* r!2 s!1 x!0 r00 r00 r00)) (* 72 (* s!1 s!1 x!0 r00 r00 r00)) (* 2520 (* r!2 r!2 r!2 x!0 r00 r00 r00)) (* 1284 (* r!2 r!2 s!1 x!0 r00 r00 r00)) (* 144 (* r!2 s!1 s!1 x!0 r00 r00 r00)) (* 6 (* s!1 s!1 s!1 s!1 s00 r00)) (* (- 6) (* s!1 s!1 s!1 x!0 s00 r00)) (* 12 (* s!1 s!1 s!1 x!0 r00 r00 r00)))))
 (let ((?x1394 (* (- 108) ?x1364)))
 (let ((?x1393 (* (- 16) ?x1202)))
 (let ((?x1074 (* s00 r00 r00 r00)))
 (let ((?x1389 (* (- 216) ?x1074)))
 (let ((?x901 (* 432 ?x900)))
 (let ((?x1147 (* 108 ?x823)))
 (let ((?x749 (* s00 s00 r00 r00)))
 (let ((?x750 (* 36 ?x749)))
 (let ((?x686 (* s00 s00 r00)))
 (let ((?x1030 (* 108 ?x686)))
 (let ((?x1018 (* 36 ?x665)))
 (let ((?x1383 (* (- 51) ?x609)))
 (let ((?x1380 (* (- 108) ?x540)))
 (let ((?x531 (* s00 r00 x00)))
 (let ((?x1379 (* (- 216) ?x531)))
 (let ((?x538 (* 54 ?x444)))
 (let ((?x1005 (* (- 9) s00)))
 (let ((?x1894 (+ ?x451 ?x1005 ?x538 ?x1379 ?x1380 ?x2202 ?x7936 ?x1383 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1018 ?x1030 (* 66 (* s!1 s00)) (* (- 54) ?x3450) (* (- 108) (* s!1 x00)) ?x750 (* (- 108) (* s!1 s00 r00)) (* 4 ?x2211) ?x1147 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x901 (* 12 (* s!1 s!1 s00)) ?x1389 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1393 (* 216 (* x!0 x00)) ?x1394)))
 (let ((?x908 (* (- 36) ?x895)))
 (let ((?x824 (* 6 ?x823)))
 (let ((?x714 (* (- 2) ?x686)))
 (let ((?x934 (* (- 15) ?x609)))
 (let ((?x569 (* (- 54) ?x540)))
 (let ((?x582 (* 24 ?x444)))
 (let ((?x2770 (+ ?x451 ?x1005 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x582 ?x569 (* 3 ?x2374) (* 54 (* r!2 x!0)) ?x7935 ?x7936 ?x934 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1018 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x714 (* 12 (* s!1 s00)) (* (- 24) ?x3450) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x824 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x908 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) ?x2769)))
 (let ((?x666 (* 6 ?x665)))
 (let ((?x622 (* (- 4) ?x609)))
 (let ((?x554 (* (- 18) ?x540)))
 (let ((?x559 (* 9 ?x444)))
 (let ((?x396 (* (- 3) s00)))
 (let ((?x3467 (+ (* 3 s!1) ?x396 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x559 ?x554 (* 2 ?x2374) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1944) ?x622 (* 18 (* x!0 r00)) ?x666 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) ?x3451 (* (- 6) (* r!2 s00 r00)))))
 (let ((?x5510 (+ ?x474 ?x5388 ?x5387 ?x44 ?x518 ?x519 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x522 ?x488)))
 (let (($x475 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x319)) 0)))
 (let (($x4053 (and $x475 (= ?x5510 0) (= ?x3467 0) (= ?x2770 0) (= ?x1894 0) (not (= ?x4050 0)))))
 (let (($x7398 (exists ((r Int) (s Int) (x Int) )(! (let ((?x9140 (* 12 (* s s s x r00 r00 r00))))
 (let ((?x9131 (* (- 12) (* s s s s r00 r00 r00))))
 (let ((?x9124 (* (- 324) (* s s r00 r00 r00))))
 (let ((?x216 (* 6 r)))
 (let ((?x1823 (+ 3 ?x216 s)))
 (let ((?x298 (* (- 1) s)))
 (let ((?x1404 (+ ?x298 x)))
 (let ((?x1425 (+ 1 r)))
 (let ((?x9102 (* 6 (* x x s00 r00))))
 (let ((?x9078 (* (- 6) (* r r s s s x00))))
 (let ((?x9077 (* (- 12) (* r s s s x00))))
 (let ((?x9076 (* 36 (* r s s x x00))))
 (let ((?x9075 (* 18 (* r r s s x x00))))
 (let ((?x9074 (* (- 18) (* s x x x00))))
 (let ((?x9073 (* (- 36) (* r s x x x00))))
 (let ((?x9072 (* (- 18) (* r r s x x x00))))
 (let ((?x6960 (* 6 (* x x x x00))))
 (let ((?x9067 (* 12 (* r x x x x00))))
 (let ((?x6957 (* 6 (* r r x x x x00))))
 (let ((?x9050 (* 36 (* r r s x r00 r00))))
 (let ((?x9049 (* 72 (* r r r r x r00 r00))))
 (let ((?x9048 (* 252 (* r r r x r00 r00))))
 (let ((?x9047 (* 324 (* r r x r00 r00))))
 (let ((?x9046 (* 180 (* r x r00 r00))))
 (let ((?x9045 (* (- 12) (* r r r s s r00 r00))))
 (let ((?x9044 (* (- 36) (* r r s s r00 r00))))
 (let ((?x9043 (* (- 180) (* r s r00 r00))))
 (let ((?x9042 (* (- 324) (* r r s r00 r00))))
 (let ((?x9041 (* (- 252) (* r r r s r00 r00))))
 (let ((?x9040 (* (- 72) (* r r r r s r00 r00))))
 (let ((?x9039 (* 12 (* r r r s x r00 r00))))
 (let ((?x9034 (* 3 (* r r s x r00))))
 (let ((?x9033 (* 6 (* r s x r00))))
 (let ((?x9032 (* 18 (* r r r x r00))))
 (let ((?x9031 (* 45 (* r r x r00))))
 (let ((?x9030 (* (- 3) (* r r s s r00))))
 (let ((?x9029 (* (- 6) (* r s s r00))))
 (let ((?x9028 (* (- 18) (* r r r s r00))))
 (let ((?x9027 (* (- 45) (* r r s r00))))
 (let ((?x4850 (* 6 (* x x x00))))
 (let ((?x8891 (* 18 (* r r s s x s00 r00))))
 (let ((?x8888 (* (- 6) (* r r s s s s00 r00))))
 (let ((?x8885 (* (- 18) (* s x x s00 r00))))
 (let ((?x8884 (* (- 36) (* r s x x s00 r00))))
 (let ((?x8883 (* (- 18) (* r r s x x s00 r00))))
 (let ((?x8882 (* 6 (* x x x s00 r00))))
 (let ((?x8881 (* 12 (* r x x x s00 r00))))
 (let ((?x8880 (* 6 (* r r x x x s00 r00))))
 (let ((?x8792 (* 12 (* r x x r00 r00))))
 (let ((?x8791 (* 12 (* x x r00 r00))))
 (let ((?x4072 (* 12 (* r s x r00 r00))))
 (let ((?x5732 (* (- 12) (* s x r00 r00))))
 (let ((?x8790 (* (- 24) (* r s s r00 r00))))
 (let ((?x8789 (* 3 (* x x r00))))
 (let ((?x5286 (* (- 3) (* s x r00))))
 (let ((?x8743 (* 12 (* r r r x x x r00 r00))))
 (let ((?x8742 (* 36 (* r r x x x r00 r00))))
 (let ((?x8741 (* 36 (* r x x x r00 r00))))
 (let ((?x8740 (* 12 (* x x x r00 r00))))
 (let ((?x8739 (* (- 36) (* r r r s x x r00 r00))))
 (let ((?x8738 (* (- 108) (* r r s x x r00 r00))))
 (let ((?x8737 (* (- 108) (* r s x x r00 r00))))
 (let ((?x8736 (* (- 36) (* s x x r00 r00))))
 (let ((?x8735 (* 36 (* r r r s s x r00 r00))))
 (let ((?x8734 (* 108 (* r r s s x r00 r00))))
 (let ((?x8733 (* 108 (* r s s x r00 r00))))
 (let ((?x8732 (* 36 (* s s x r00 r00))))
 (let ((?x8731 (* (- 12) (* r r r s s s r00 r00))))
 (let ((?x8730 (* (- 36) (* r r s s s r00 r00))))
 (let ((?x8729 (* (- 36) (* r s s s r00 r00))))
 (let ((?x8728 (* (- 12) (* s s s r00 r00))))
 (let ((?x8727 (* (- 6) (* r r s x x))))
 (let ((?x8482 (* 36 (* r r r x x00))))
 (let ((?x8479 (* (- 6) (* r r s s x00))))
 (let ((?x8476 (* (- 36) (* r r r s x00))))
 (let ((?x1877 (* 6 (* r r s x x00))))
 (let ((?x8469 (* 3 (* r r x x x r00))))
 (let ((?x8468 (* 6 (* r x x x r00))))
 (let ((?x8467 (* 3 (* x x x r00))))
 (let ((?x8466 (* (- 9) (* r r s x x r00))))
 (let ((?x8465 (* (- 18) (* r s x x r00))))
 (let ((?x8464 (* (- 9) (* s x x r00))))
 (let ((?x8463 (* 9 (* r r s s x r00))))
 (let ((?x8462 (* 18 (* r s s x r00))))
 (let ((?x8461 (* 9 (* s s x r00))))
 (let ((?x8460 (* (- 3) (* r r s s s r00))))
 (let ((?x8459 (* (- 6) (* r s s s r00))))
 (let ((?x8458 (* (- 3) (* s s s r00))))
 (let ((?x1091 (* 36 (* x r00 r00))))
 (let ((?x872 (* x x)))
 (let ((?x8444 (* (- 18) ?x872)))
 (let ((?x821 (* s s s)))
 (let ((?x718 (* s r00)))
 (let ((?x731 (* (- 9) ?x718)))
 (let ((?x635 (* x r00)))
 (let ((?x8436 (* 9 ?x635)))
 (let ((?x583 (* s r00 r00)))
 (let ((?x882 (* (- 36) ?x583)))
 (let ((?x579 (* 36 (* r x r00))))
 (let ((?x571 (* r s r00)))
 (let ((?x8434 (* (- 36) ?x571)))
 (let ((?x563 (* s s)))
 (let ((?x1381 (* (- 15) ?x563)))
 (let ((?x8433 (* (- 9) x)))
 (let ((?x143 (* 9 s)))
 (let ((?x9738 (+ ?x143 ?x8433 (* 45 (* r s)) (* 2 (* ?x1425 ?x1404 ?x1823 ?x1823 ?x1823 ?x1823)) ?x1381 (* (- 45) (* r x)) ?x8434 ?x579 ?x882 (* (- 21) (* x s00)) ?x8436 (* (- 288) (* s r00 r00 r00)) (* 21 (* s s00)) (* (- 45) (* r r s s x s00)) ?x731 (* (- 18) (* s x00)) (* (- 12) (* x x r00 r00 r00)) (* (- 3) (* r00 ?x1404 ?x1823 ?x1823 ?x1823)) (* 144 (* s s00 r00)) ?x821 (* (- 66) (* r s s)) (* 33 (* s x)) ?x8444 (* 96 (* r s s00)) ?x1091 (* 288 (* x r00 r00 r00)) (* (- 144) (* x s00 r00)) (* (- 4) (* r x x s00)) (* 18 (* x x00)) ?x8458 ?x8459 ?x8460 ?x8461 ?x8462 ?x8463 ?x8464 ?x8465 ?x8466 ?x8467 ?x8468 ?x8469 (* (- 6) (* s x x00)) (* 12 (* r s x x00)) ?x1877 (* 3 (* s00 ?x1404 ?x1823 ?x1823 ?x1823)) (* (- 3) (* ?x1404 ?x1823 ?x1823 ?x1823 ?x1823)) (* (- 72) (* r s x00)) (* (- 90) (* r r s x00)) ?x8476 (* (- 12) (* r s s x00)) ?x8479 (* 72 (* r x x00)) (* 90 (* r r x x00)) ?x8482 (* (- 24) (* r r r r x s00)) (* (- 6) (* x x x)) (* 4 (* r r r s s s s00)) (* 13 (* s x x)) (* (- 8) (* s s x)) (* 141 (* r s x)) (* (- 2) (* ?x1425 ?x1425 ?x1425 ?x1404 ?x1404 ?x1404 ?x1823)) (* (- 75) (* r x x)) (* 3 (* ?x1425 ?x1425 ?x1404 ?x1823 ?x1823)) (* (- 33) (* r r r s s)) (* (- 36) (* r r r x x)) (* (- 6) (* r r s s s)) (* (- 6) (* s s s x00)) (* 12 (* r r s s x)) (* (- 12) (* r r r s s x s00)) (* (- 14) (* r s x x)) (* 4 (* r r r s s s00)) (* (- 7) (* x x s00)) ?x8727 ?x8728 ?x8729 ?x8730 ?x8731 ?x8732 ?x8733 ?x8734 ?x8735 ?x8736 ?x8737 ?x8738 (* 12 (* r r s s s r00 r00 r00)) ?x8739 (* (- 36) (* r r s s x r00 r00 r00)) (* 36 (* s x x r00 r00 r00)) (* 72 (* r s x x r00 r00 r00)) (* 36 (* r r s x x r00 r00 r00)) ?x8740 ?x8741 (* (- 12) (* x x x r00 r00 r00)) ?x8742 (* (- 24) (* r x x x r00 r00 r00)) (* (- 12) (* r r x x x r00 r00 r00)) ?x8743 (* 12 (* r r r s x x s00)) (* 69 (* r r r s x)) (* 195 (* r r s x)) (* 18 (* s s x x00)) ?x5286 ?x8789 ?x8790 ?x5732 ?x4072 (* (- 93) (* r r s s)) ?x8791 (* (- 102) (* r r x x)) ?x8792 (* (- 14) (* r s s s)) (* 28 (* r s s x)) ?x8880 ?x8881 ?x8882 ?x8883 ?x8884 ?x8885 (* 48 (* s s s s00 r00)) (* 96 (* r s s s s00 r00)) ?x8888 (* (- 36) (* s s x s00 r00)) (* (- 72) (* r s s x s00 r00)) ?x8891 ?x4850 (* (- 6) (* x00 ?x1404 ?x1823 ?x1823 ?x1823)) (* (- 4) (* r r r x x x s00)) (* (- 4) (* r r r s x s00)) ?x9027 ?x9028 ?x9029 ?x9030 ?x9031 ?x9032 ?x9033 (* (- 2) (* ?x1425 ?x1425 ?x1425 ?x1404 ?x1823 ?x1823)) (* (- 12) (* r00 r00 ?x1425 ?x1404 ?x1823 ?x1823 ?x1823)) ?x9034 (* 15 (* r r s s s s00)) (* (- 6) (* ?x1425 ?x1425 ?x1404 ?x1404 ?x1404 ?x1404)) ?x9039 (* 6 (* ?x1404 ?x1404 ?x1823 ?x1823 ?x1823)) (* 24 (* r r r r s s00)) ?x9040 ?x9041 ?x9042 ?x9043 (* 3 (* ?x1425 ?x1404 ?x1823 ?x1823 ?x1823)) ?x9044 (* 81 (* r r s)) ?x9045 (* 63 (* r r r s)) ?x9046 (* (- 81) (* r r x)) ?x9047 (* (- 63) (* r r r x)) ?x9048 (* 18 (* r r r r s)) ?x9049 ?x9050 (* (- 18) (* r r r r x)) (* 54 (* r s x x s00)) (* (- 7) (* x x x s00)) (* (- 15) (* r r x x x s00)) (* 21 (* s x x s00)) (* 153 (* r r s s00)) (* 45 (* r r s x x s00)) (* 14 (* r s s s00)) (* 7 (* s s s s00)) (* (- 96) (* r x s00)) (* 7 (* s x s00)) (* (- 153) (* r r x s00)) (* (- 10) (* r s x s00)) (* (- 18) (* r x x x s00)) (* (- 21) (* s s x s00)) (* 102 (* r r r s s00)) (* 15 (* r r s s s00)) (* 18 (* r s s s s00)) (* (- 102) (* r r r x s00)) (* (- 15) (* r r s x s00)) (* (- 54) (* r s s x s00)) ?x6957 ?x9067 ?x6960 ?x9072 ?x9073 ?x9074 (* 4 (* s00 ?x1425 ?x1404 ?x1823 ?x1823 ?x1823)) ?x9075 ?x9076 (* (- 3) (* ?x1425 ?x1425 ?x1425 ?x1404 ?x1404 ?x1404)) ?x9077 ?x9078 (* 900 (* r s s00 r00)) (* 1854 (* r r s s00 r00)) (* 1260 (* r r r s s00 r00)) (* 636 (* r s s s00 r00)) (* 642 (* r r s s s00 r00)) (* (- 900) (* r x s00 r00)) (* (- 1854) (* r r x s00 r00)) (* (- 1260) (* r r r x s00 r00)) (* (- 168) (* s x s00 r00)) (* (- 636) (* r s x s00 r00)) (* (- 642) (* r r s x s00 r00)) ?x9102 (* 3 (* ?x1425 ?x1425 ?x1404 ?x1404 ?x1404 ?x1823)) (* 162 (* s s s00 r00)) (* (- 1800) (* r s r00 r00 r00)) ?x9124 (* (- 3708) (* r r s r00 r00 r00)) (* (- 1272) (* r s s r00 r00 r00)) (* (- 96) (* s s s r00 r00 r00)) (* (- 2520) (* r r r s r00 r00 r00)) (* (- 1284) (* r r s s r00 r00 r00)) (* (- 192) (* r s s s r00 r00 r00)) ?x9131 (* 1800 (* r x r00 r00 r00)) (* 336 (* s x r00 r00 r00)) (* 3708 (* r r x r00 r00 r00)) (* 1272 (* r s x r00 r00 r00)) (* 72 (* s s x r00 r00 r00)) (* 2520 (* r r r x r00 r00 r00)) (* 1284 (* r r s x r00 r00 r00)) (* 144 (* r s s x r00 r00 r00)) (* 6 (* s s s s s00 r00)) (* (- 6) (* s s s x s00 r00)) ?x9140)))
 (let ((?x1364 (* x00 x00)))
 (let ((?x1394 (* (- 108) ?x1364)))
 (let ((?x1202 (* s00 s00 s00)))
 (let ((?x1393 (* (- 16) ?x1202)))
 (let ((?x1074 (* s00 r00 r00 r00)))
 (let ((?x1389 (* (- 216) ?x1074)))
 (let ((?x900 (* r00 r00 r00 x00)))
 (let ((?x901 (* 432 ?x900)))
 (let ((?x823 (* s00 x00)))
 (let ((?x1147 (* 108 ?x823)))
 (let ((?x749 (* s00 s00 r00 r00)))
 (let ((?x750 (* 36 ?x749)))
 (let ((?x686 (* s00 s00 r00)))
 (let ((?x1030 (* 108 ?x686)))
 (let ((?x665 (* s00 r00 r00)))
 (let ((?x1018 (* 36 ?x665)))
 (let ((?x609 (* s00 s00)))
 (let ((?x1383 (* (- 51) ?x609)))
 (let ((?x540 (* r00 x00)))
 (let ((?x1380 (* (- 108) ?x540)))
 (let ((?x531 (* s00 r00 x00)))
 (let ((?x1379 (* (- 216) ?x531)))
 (let ((?x444 (* s00 r00)))
 (let ((?x538 (* 54 ?x444)))
 (let ((?x1005 (* (- 9) s00)))
 (let ((?x1395 (+ ?x143 ?x1005 ?x538 ?x1379 ?x1380 ?x1381 ?x882 ?x1383 (* (- 108) (* x s00)) (* 108 ?x635) (* 216 (* s r00 r00 r00)) ?x1018 ?x1030 (* 66 (* s s00)) (* (- 54) ?x718) (* (- 108) (* s x00)) ?x750 (* (- 108) (* s s00 r00)) (* 4 ?x821) ?x1147 (* 108 (* s x)) (* (- 108) ?x872) ?x901 (* 12 (* s s s00)) ?x1389 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1393 (* 216 (* x x00)) ?x1394)))
 (let (($x1396 (= ?x1395 0)))
 (let ((?x895 (* r00 r00 x00)))
 (let ((?x908 (* (- 36) ?x895)))
 (let ((?x824 (* 6 ?x823)))
 (let ((?x714 (* (- 2) ?x686)))
 (let ((?x934 (* (- 15) ?x609)))
 (let ((?x587 (* 3 ?x563)))
 (let ((?x569 (* (- 54) ?x540)))
 (let ((?x582 (* 24 ?x444)))
 (let ((?x1097 (+ ?x143 ?x1005 (* (- 24) (* r s)) (* 24 (* r s00)) ?x582 ?x569 ?x587 (* 54 (* r x)) ?x579 ?x882 ?x934 (* (- 6) (* x s00)) (* 54 ?x635) ?x1018 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x714 (* 12 (* s s00)) (* (- 24) ?x718) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x824 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x908 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) ?x1091)))
 (let (($x1102 (= ?x1097 0)))
 (let ((?x666 (* 6 ?x665)))
 (let ((?x622 (* (- 4) ?x609)))
 (let ((?x564 (* 2 ?x563)))
 (let ((?x554 (* (- 18) ?x540)))
 (let ((?x559 (* 9 ?x444)))
 (let ((?x396 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x763 (+ ?x47 ?x396 (* (- 9) (* r s)) (* 9 (* r s00)) ?x559 ?x554 ?x564 (* 18 (* r x)) (* 6 ?x571) (* (- 6) ?x583) ?x622 (* 18 ?x635) ?x666 (* (- 18) (* r x00)) (* 2 (* s s00)) ?x731 (* (- 6) (* r s00 r00)))))
 (let (($x770 (= ?x763 0)))
 (let ((?x487 (* r00 r00 r00)))
 (let ((?x488 (* 12 ?x487)))
 (let ((?x522 (* (- 6) ?x444)))
 (let ((?x519 (* (- 6) x00)))
 (let ((?x518 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x517 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x523 (+ ?x43 ?x517 ?x56 ?x44 ?x518 ?x519 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x522 ?x488)))
 (let (($x524 (= ?x523 0)))
 (let ((?x319 (* r00 r00)))
 (let ((?x320 (* 3 ?x319)))
 (let ((?x349 (* (- 1) s00)))
 (let (($x352 (= (+ s ?x349 (* (- 3) (* r r)) ?x320) 0)))
 (and $x352 $x524 $x770 $x1102 $x1396 (not (= ?x9738 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x2136 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (* 6 r)))
 (let ((?x1764 (+ 3 s ?x216)))
 (let ((?x298 (* (- 1) s)))
 (let ((?x7282 (+ x ?x298)))
 (let ((?x1425 (+ 1 r)))
 (let ((?x2245 (+ (* 3 (* s00 ?x7282 ?x7282)) (* (- 3) (* r00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 6) (* x00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 6 (* ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x7282)) (* (- 6) (* ?x7282 ?x7282 ?x1764 ?x1764 ?x1764)) (* 6 (* ?x7282 ?x7282 ?x7282)) (* (- 3) (* ?x7282 ?x7282 ?x1764)) (* 4 (* s00 ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* 6 (* x00 ?x7282 ?x1764 ?x1764 ?x1764)) (* 4 (* s00 ?x1425 ?x7282 ?x7282)) (* 2 (* ?x1425 ?x7282 ?x7282 ?x1764)) (* 3 (* s00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 6 (* ?x1425 ?x1425 ?x7282 ?x7282 ?x1764)) (* (- 12) (* r00 r00 ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 3) (* ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 3) (* r00 ?x7282 ?x7282)) (* (- 12) (* r00 r00 ?x1425 ?x7282 ?x7282)) (* 12 (* r00 r00 r00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 6 (* r00 s00 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 3) (* ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x1764)) (* (- 6) (* r00 s00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 4) (* s00 ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 6) (* x00 ?x7282 ?x7282)) (* 3 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 12 (* r00 r00 r00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 2 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x1764 ?x1764)) (* 12 (* r00 r00 ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* r00 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 3) (* r00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 3 (* ?x1425 ?x7282 ?x7282)) (* 2 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x1764)) (* (- 3) (* ?x1425 ?x1425 ?x7282 ?x1764 ?x1764)) (* (- 12) (* r00 r00 ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* 3 (* s00 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 3) (* s00 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* ?x7282 ?x1764 ?x1764 ?x1764 ?x1764)) (* 12 (* r00 r00 r00 ?x7282 ?x7282)) (* (- 6) (* x00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 6) (* r00 s00 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 2) (* ?x1425 ?x7282 ?x1764 ?x1764 ?x1764 ?x1764)) (* (- 6) (* r00 s00 ?x7282 ?x7282)) (* 4 (* s00 ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 12) (* r00 r00 r00 ?x7282 ?x1764 ?x1764 ?x1764)))))
 (let (($x7250 (not (= ?x2245 0))))
 (let ((?x1364 (* x00 x00)))
 (let ((?x6868 (* 108 ?x1364)))
 (let ((?x5106 (* (- 9) s)))
 (let ((?x7490 (* r00 r00 s00)))
 (let ((?x5064 (* (- 36) ?x7490)))
 (let ((?x137 (* 9 s00)))
 (let ((?x609 (* s00 s00)))
 (let ((?x4931 (* 51 ?x609)))
 (let ((?x7363 (* r00 r00 s)))
 (let ((?x2411 (* 36 ?x7363)))
 (let ((?x1202 (* s00 s00 s00)))
 (let ((?x4761 (* 16 ?x1202)))
 (let ((?x823 (* s00 x00)))
 (let ((?x4259 (* (- 108) ?x823)))
 (let ((?x900 (* r00 r00 r00 x00)))
 (let ((?x2559 (* (- 432) ?x900)))
 (let ((?x540 (* r00 x00)))
 (let ((?x5349 (* 108 ?x540)))
 (let ((?x6623 (+ (* 216 (* r00 s00 x00)) ?x5349 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2559 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4259 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4761 (* (- 108) (* x s)) ?x2411 ?x4931 (* (- 108) (* r00 x)) ?x137 ?x5064 ?x5106 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6868)))
 (let (($x6878 (= ?x6623 0)))
 (let ((?x6758 (* 15 ?x609)))
 (let ((?x895 (* r00 r00 x00)))
 (let ((?x6266 (* 36 ?x895)))
 (let ((?x6515 (* (- 6) ?x823)))
 (let ((?x6682 (* 54 ?x540)))
 (let ((?x6775 (+ (* 24 (* s r)) ?x6682 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x6515 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2411 ?x6266 ?x6758 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x5064 (* 54 (* x00 r)) ?x5106 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x517 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2538 (* 4 ?x609)))
 (let ((?x3044 (* 18 ?x540)))
 (let ((?x6679 (+ (* 9 (* s r)) ?x3044 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x7363) ?x2538 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x7490) (* 18 (* x00 r)) ?x517 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x487 (* r00 r00 r00)))
 (let ((?x488 (* 12 ?x487)))
 (let ((?x519 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x518 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x6681 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x517 ?x518 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x519 ?x488)))
 (let (($x7272 (= (+ s00 ?x298 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x7272 (= ?x6681 0) (= ?x6679 0) (= ?x6775 0) $x6878 $x7250))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x7399 (lambda ((r Int) (s Int) (x Int) )(let ((?x9140 (* 12 (* s s s x r00 r00 r00))))
 (let ((?x9131 (* (- 12) (* s s s s r00 r00 r00))))
 (let ((?x9124 (* (- 324) (* s s r00 r00 r00))))
 (let ((?x216 (* 6 r)))
 (let ((?x1823 (+ 3 ?x216 s)))
 (let ((?x298 (* (- 1) s)))
 (let ((?x1404 (+ ?x298 x)))
 (let ((?x1425 (+ 1 r)))
 (let ((?x9102 (* 6 (* x x s00 r00))))
 (let ((?x9078 (* (- 6) (* r r s s s x00))))
 (let ((?x9077 (* (- 12) (* r s s s x00))))
 (let ((?x9076 (* 36 (* r s s x x00))))
 (let ((?x9075 (* 18 (* r r s s x x00))))
 (let ((?x9074 (* (- 18) (* s x x x00))))
 (let ((?x9073 (* (- 36) (* r s x x x00))))
 (let ((?x9072 (* (- 18) (* r r s x x x00))))
 (let ((?x6960 (* 6 (* x x x x00))))
 (let ((?x9067 (* 12 (* r x x x x00))))
 (let ((?x6957 (* 6 (* r r x x x x00))))
 (let ((?x9050 (* 36 (* r r s x r00 r00))))
 (let ((?x9049 (* 72 (* r r r r x r00 r00))))
 (let ((?x9048 (* 252 (* r r r x r00 r00))))
 (let ((?x9047 (* 324 (* r r x r00 r00))))
 (let ((?x9046 (* 180 (* r x r00 r00))))
 (let ((?x9045 (* (- 12) (* r r r s s r00 r00))))
 (let ((?x9044 (* (- 36) (* r r s s r00 r00))))
 (let ((?x9043 (* (- 180) (* r s r00 r00))))
 (let ((?x9042 (* (- 324) (* r r s r00 r00))))
 (let ((?x9041 (* (- 252) (* r r r s r00 r00))))
 (let ((?x9040 (* (- 72) (* r r r r s r00 r00))))
 (let ((?x9039 (* 12 (* r r r s x r00 r00))))
 (let ((?x9034 (* 3 (* r r s x r00))))
 (let ((?x9033 (* 6 (* r s x r00))))
 (let ((?x9032 (* 18 (* r r r x r00))))
 (let ((?x9031 (* 45 (* r r x r00))))
 (let ((?x9030 (* (- 3) (* r r s s r00))))
 (let ((?x9029 (* (- 6) (* r s s r00))))
 (let ((?x9028 (* (- 18) (* r r r s r00))))
 (let ((?x9027 (* (- 45) (* r r s r00))))
 (let ((?x4850 (* 6 (* x x x00))))
 (let ((?x8891 (* 18 (* r r s s x s00 r00))))
 (let ((?x8888 (* (- 6) (* r r s s s s00 r00))))
 (let ((?x8885 (* (- 18) (* s x x s00 r00))))
 (let ((?x8884 (* (- 36) (* r s x x s00 r00))))
 (let ((?x8883 (* (- 18) (* r r s x x s00 r00))))
 (let ((?x8882 (* 6 (* x x x s00 r00))))
 (let ((?x8881 (* 12 (* r x x x s00 r00))))
 (let ((?x8880 (* 6 (* r r x x x s00 r00))))
 (let ((?x8792 (* 12 (* r x x r00 r00))))
 (let ((?x8791 (* 12 (* x x r00 r00))))
 (let ((?x4072 (* 12 (* r s x r00 r00))))
 (let ((?x5732 (* (- 12) (* s x r00 r00))))
 (let ((?x8790 (* (- 24) (* r s s r00 r00))))
 (let ((?x8789 (* 3 (* x x r00))))
 (let ((?x5286 (* (- 3) (* s x r00))))
 (let ((?x8743 (* 12 (* r r r x x x r00 r00))))
 (let ((?x8742 (* 36 (* r r x x x r00 r00))))
 (let ((?x8741 (* 36 (* r x x x r00 r00))))
 (let ((?x8740 (* 12 (* x x x r00 r00))))
 (let ((?x8739 (* (- 36) (* r r r s x x r00 r00))))
 (let ((?x8738 (* (- 108) (* r r s x x r00 r00))))
 (let ((?x8737 (* (- 108) (* r s x x r00 r00))))
 (let ((?x8736 (* (- 36) (* s x x r00 r00))))
 (let ((?x8735 (* 36 (* r r r s s x r00 r00))))
 (let ((?x8734 (* 108 (* r r s s x r00 r00))))
 (let ((?x8733 (* 108 (* r s s x r00 r00))))
 (let ((?x8732 (* 36 (* s s x r00 r00))))
 (let ((?x8731 (* (- 12) (* r r r s s s r00 r00))))
 (let ((?x8730 (* (- 36) (* r r s s s r00 r00))))
 (let ((?x8729 (* (- 36) (* r s s s r00 r00))))
 (let ((?x8728 (* (- 12) (* s s s r00 r00))))
 (let ((?x8727 (* (- 6) (* r r s x x))))
 (let ((?x8482 (* 36 (* r r r x x00))))
 (let ((?x8479 (* (- 6) (* r r s s x00))))
 (let ((?x8476 (* (- 36) (* r r r s x00))))
 (let ((?x1877 (* 6 (* r r s x x00))))
 (let ((?x8469 (* 3 (* r r x x x r00))))
 (let ((?x8468 (* 6 (* r x x x r00))))
 (let ((?x8467 (* 3 (* x x x r00))))
 (let ((?x8466 (* (- 9) (* r r s x x r00))))
 (let ((?x8465 (* (- 18) (* r s x x r00))))
 (let ((?x8464 (* (- 9) (* s x x r00))))
 (let ((?x8463 (* 9 (* r r s s x r00))))
 (let ((?x8462 (* 18 (* r s s x r00))))
 (let ((?x8461 (* 9 (* s s x r00))))
 (let ((?x8460 (* (- 3) (* r r s s s r00))))
 (let ((?x8459 (* (- 6) (* r s s s r00))))
 (let ((?x8458 (* (- 3) (* s s s r00))))
 (let ((?x1091 (* 36 (* x r00 r00))))
 (let ((?x872 (* x x)))
 (let ((?x8444 (* (- 18) ?x872)))
 (let ((?x821 (* s s s)))
 (let ((?x718 (* s r00)))
 (let ((?x731 (* (- 9) ?x718)))
 (let ((?x635 (* x r00)))
 (let ((?x8436 (* 9 ?x635)))
 (let ((?x583 (* s r00 r00)))
 (let ((?x882 (* (- 36) ?x583)))
 (let ((?x579 (* 36 (* r x r00))))
 (let ((?x571 (* r s r00)))
 (let ((?x8434 (* (- 36) ?x571)))
 (let ((?x563 (* s s)))
 (let ((?x1381 (* (- 15) ?x563)))
 (let ((?x8433 (* (- 9) x)))
 (let ((?x143 (* 9 s)))
 (let ((?x9738 (+ ?x143 ?x8433 (* 45 (* r s)) (* 2 (* ?x1425 ?x1404 ?x1823 ?x1823 ?x1823 ?x1823)) ?x1381 (* (- 45) (* r x)) ?x8434 ?x579 ?x882 (* (- 21) (* x s00)) ?x8436 (* (- 288) (* s r00 r00 r00)) (* 21 (* s s00)) (* (- 45) (* r r s s x s00)) ?x731 (* (- 18) (* s x00)) (* (- 12) (* x x r00 r00 r00)) (* (- 3) (* r00 ?x1404 ?x1823 ?x1823 ?x1823)) (* 144 (* s s00 r00)) ?x821 (* (- 66) (* r s s)) (* 33 (* s x)) ?x8444 (* 96 (* r s s00)) ?x1091 (* 288 (* x r00 r00 r00)) (* (- 144) (* x s00 r00)) (* (- 4) (* r x x s00)) (* 18 (* x x00)) ?x8458 ?x8459 ?x8460 ?x8461 ?x8462 ?x8463 ?x8464 ?x8465 ?x8466 ?x8467 ?x8468 ?x8469 (* (- 6) (* s x x00)) (* 12 (* r s x x00)) ?x1877 (* 3 (* s00 ?x1404 ?x1823 ?x1823 ?x1823)) (* (- 3) (* ?x1404 ?x1823 ?x1823 ?x1823 ?x1823)) (* (- 72) (* r s x00)) (* (- 90) (* r r s x00)) ?x8476 (* (- 12) (* r s s x00)) ?x8479 (* 72 (* r x x00)) (* 90 (* r r x x00)) ?x8482 (* (- 24) (* r r r r x s00)) (* (- 6) (* x x x)) (* 4 (* r r r s s s s00)) (* 13 (* s x x)) (* (- 8) (* s s x)) (* 141 (* r s x)) (* (- 2) (* ?x1425 ?x1425 ?x1425 ?x1404 ?x1404 ?x1404 ?x1823)) (* (- 75) (* r x x)) (* 3 (* ?x1425 ?x1425 ?x1404 ?x1823 ?x1823)) (* (- 33) (* r r r s s)) (* (- 36) (* r r r x x)) (* (- 6) (* r r s s s)) (* (- 6) (* s s s x00)) (* 12 (* r r s s x)) (* (- 12) (* r r r s s x s00)) (* (- 14) (* r s x x)) (* 4 (* r r r s s s00)) (* (- 7) (* x x s00)) ?x8727 ?x8728 ?x8729 ?x8730 ?x8731 ?x8732 ?x8733 ?x8734 ?x8735 ?x8736 ?x8737 ?x8738 (* 12 (* r r s s s r00 r00 r00)) ?x8739 (* (- 36) (* r r s s x r00 r00 r00)) (* 36 (* s x x r00 r00 r00)) (* 72 (* r s x x r00 r00 r00)) (* 36 (* r r s x x r00 r00 r00)) ?x8740 ?x8741 (* (- 12) (* x x x r00 r00 r00)) ?x8742 (* (- 24) (* r x x x r00 r00 r00)) (* (- 12) (* r r x x x r00 r00 r00)) ?x8743 (* 12 (* r r r s x x s00)) (* 69 (* r r r s x)) (* 195 (* r r s x)) (* 18 (* s s x x00)) ?x5286 ?x8789 ?x8790 ?x5732 ?x4072 (* (- 93) (* r r s s)) ?x8791 (* (- 102) (* r r x x)) ?x8792 (* (- 14) (* r s s s)) (* 28 (* r s s x)) ?x8880 ?x8881 ?x8882 ?x8883 ?x8884 ?x8885 (* 48 (* s s s s00 r00)) (* 96 (* r s s s s00 r00)) ?x8888 (* (- 36) (* s s x s00 r00)) (* (- 72) (* r s s x s00 r00)) ?x8891 ?x4850 (* (- 6) (* x00 ?x1404 ?x1823 ?x1823 ?x1823)) (* (- 4) (* r r r x x x s00)) (* (- 4) (* r r r s x s00)) ?x9027 ?x9028 ?x9029 ?x9030 ?x9031 ?x9032 ?x9033 (* (- 2) (* ?x1425 ?x1425 ?x1425 ?x1404 ?x1823 ?x1823)) (* (- 12) (* r00 r00 ?x1425 ?x1404 ?x1823 ?x1823 ?x1823)) ?x9034 (* 15 (* r r s s s s00)) (* (- 6) (* ?x1425 ?x1425 ?x1404 ?x1404 ?x1404 ?x1404)) ?x9039 (* 6 (* ?x1404 ?x1404 ?x1823 ?x1823 ?x1823)) (* 24 (* r r r r s s00)) ?x9040 ?x9041 ?x9042 ?x9043 (* 3 (* ?x1425 ?x1404 ?x1823 ?x1823 ?x1823)) ?x9044 (* 81 (* r r s)) ?x9045 (* 63 (* r r r s)) ?x9046 (* (- 81) (* r r x)) ?x9047 (* (- 63) (* r r r x)) ?x9048 (* 18 (* r r r r s)) ?x9049 ?x9050 (* (- 18) (* r r r r x)) (* 54 (* r s x x s00)) (* (- 7) (* x x x s00)) (* (- 15) (* r r x x x s00)) (* 21 (* s x x s00)) (* 153 (* r r s s00)) (* 45 (* r r s x x s00)) (* 14 (* r s s s00)) (* 7 (* s s s s00)) (* (- 96) (* r x s00)) (* 7 (* s x s00)) (* (- 153) (* r r x s00)) (* (- 10) (* r s x s00)) (* (- 18) (* r x x x s00)) (* (- 21) (* s s x s00)) (* 102 (* r r r s s00)) (* 15 (* r r s s s00)) (* 18 (* r s s s s00)) (* (- 102) (* r r r x s00)) (* (- 15) (* r r s x s00)) (* (- 54) (* r s s x s00)) ?x6957 ?x9067 ?x6960 ?x9072 ?x9073 ?x9074 (* 4 (* s00 ?x1425 ?x1404 ?x1823 ?x1823 ?x1823)) ?x9075 ?x9076 (* (- 3) (* ?x1425 ?x1425 ?x1425 ?x1404 ?x1404 ?x1404)) ?x9077 ?x9078 (* 900 (* r s s00 r00)) (* 1854 (* r r s s00 r00)) (* 1260 (* r r r s s00 r00)) (* 636 (* r s s s00 r00)) (* 642 (* r r s s s00 r00)) (* (- 900) (* r x s00 r00)) (* (- 1854) (* r r x s00 r00)) (* (- 1260) (* r r r x s00 r00)) (* (- 168) (* s x s00 r00)) (* (- 636) (* r s x s00 r00)) (* (- 642) (* r r s x s00 r00)) ?x9102 (* 3 (* ?x1425 ?x1425 ?x1404 ?x1404 ?x1404 ?x1823)) (* 162 (* s s s00 r00)) (* (- 1800) (* r s r00 r00 r00)) ?x9124 (* (- 3708) (* r r s r00 r00 r00)) (* (- 1272) (* r s s r00 r00 r00)) (* (- 96) (* s s s r00 r00 r00)) (* (- 2520) (* r r r s r00 r00 r00)) (* (- 1284) (* r r s s r00 r00 r00)) (* (- 192) (* r s s s r00 r00 r00)) ?x9131 (* 1800 (* r x r00 r00 r00)) (* 336 (* s x r00 r00 r00)) (* 3708 (* r r x r00 r00 r00)) (* 1272 (* r s x r00 r00 r00)) (* 72 (* s s x r00 r00 r00)) (* 2520 (* r r r x r00 r00 r00)) (* 1284 (* r r s x r00 r00 r00)) (* 144 (* r s s x r00 r00 r00)) (* 6 (* s s s s s00 r00)) (* (- 6) (* s s s x s00 r00)) ?x9140)))
 (let ((?x1364 (* x00 x00)))
 (let ((?x1394 (* (- 108) ?x1364)))
 (let ((?x1202 (* s00 s00 s00)))
 (let ((?x1393 (* (- 16) ?x1202)))
 (let ((?x1074 (* s00 r00 r00 r00)))
 (let ((?x1389 (* (- 216) ?x1074)))
 (let ((?x900 (* r00 r00 r00 x00)))
 (let ((?x901 (* 432 ?x900)))
 (let ((?x823 (* s00 x00)))
 (let ((?x1147 (* 108 ?x823)))
 (let ((?x749 (* s00 s00 r00 r00)))
 (let ((?x750 (* 36 ?x749)))
 (let ((?x686 (* s00 s00 r00)))
 (let ((?x1030 (* 108 ?x686)))
 (let ((?x665 (* s00 r00 r00)))
 (let ((?x1018 (* 36 ?x665)))
 (let ((?x609 (* s00 s00)))
 (let ((?x1383 (* (- 51) ?x609)))
 (let ((?x540 (* r00 x00)))
 (let ((?x1380 (* (- 108) ?x540)))
 (let ((?x531 (* s00 r00 x00)))
 (let ((?x1379 (* (- 216) ?x531)))
 (let ((?x444 (* s00 r00)))
 (let ((?x538 (* 54 ?x444)))
 (let ((?x1005 (* (- 9) s00)))
 (let ((?x1395 (+ ?x143 ?x1005 ?x538 ?x1379 ?x1380 ?x1381 ?x882 ?x1383 (* (- 108) (* x s00)) (* 108 ?x635) (* 216 (* s r00 r00 r00)) ?x1018 ?x1030 (* 66 (* s s00)) (* (- 54) ?x718) (* (- 108) (* s x00)) ?x750 (* (- 108) (* s s00 r00)) (* 4 ?x821) ?x1147 (* 108 (* s x)) (* (- 108) ?x872) ?x901 (* 12 (* s s s00)) ?x1389 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1393 (* 216 (* x x00)) ?x1394)))
 (let (($x1396 (= ?x1395 0)))
 (let ((?x895 (* r00 r00 x00)))
 (let ((?x908 (* (- 36) ?x895)))
 (let ((?x824 (* 6 ?x823)))
 (let ((?x714 (* (- 2) ?x686)))
 (let ((?x934 (* (- 15) ?x609)))
 (let ((?x587 (* 3 ?x563)))
 (let ((?x569 (* (- 54) ?x540)))
 (let ((?x582 (* 24 ?x444)))
 (let ((?x1097 (+ ?x143 ?x1005 (* (- 24) (* r s)) (* 24 (* r s00)) ?x582 ?x569 ?x587 (* 54 (* r x)) ?x579 ?x882 ?x934 (* (- 6) (* x s00)) (* 54 ?x635) ?x1018 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x714 (* 12 (* s s00)) (* (- 24) ?x718) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x824 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x908 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) ?x1091)))
 (let (($x1102 (= ?x1097 0)))
 (let ((?x666 (* 6 ?x665)))
 (let ((?x622 (* (- 4) ?x609)))
 (let ((?x564 (* 2 ?x563)))
 (let ((?x554 (* (- 18) ?x540)))
 (let ((?x559 (* 9 ?x444)))
 (let ((?x396 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x763 (+ ?x47 ?x396 (* (- 9) (* r s)) (* 9 (* r s00)) ?x559 ?x554 ?x564 (* 18 (* r x)) (* 6 ?x571) (* (- 6) ?x583) ?x622 (* 18 ?x635) ?x666 (* (- 18) (* r x00)) (* 2 (* s s00)) ?x731 (* (- 6) (* r s00 r00)))))
 (let (($x770 (= ?x763 0)))
 (let ((?x487 (* r00 r00 r00)))
 (let ((?x488 (* 12 ?x487)))
 (let ((?x522 (* (- 6) ?x444)))
 (let ((?x519 (* (- 6) x00)))
 (let ((?x518 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x517 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x523 (+ ?x43 ?x517 ?x56 ?x44 ?x518 ?x519 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x522 ?x488)))
 (let (($x524 (= ?x523 0)))
 (let ((?x319 (* r00 r00)))
 (let ((?x320 (* 3 ?x319)))
 (let ((?x349 (* (- 1) s00)))
 (let (($x352 (= (+ s ?x349 (* (- 3) (* r r)) ?x320) 0)))
 (let (($x2104 (and $x352 $x524 $x770 $x1102 $x1396 (not (= ?x9738 0)))))
 (let ((?x1764 (+ 3 s ?x216)))
 (let ((?x7282 (+ x ?x298)))
 (let ((?x2245 (+ (* 3 (* s00 ?x7282 ?x7282)) (* (- 3) (* r00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 6) (* x00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 6 (* ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x7282)) (* (- 6) (* ?x7282 ?x7282 ?x1764 ?x1764 ?x1764)) (* 6 (* ?x7282 ?x7282 ?x7282)) (* (- 3) (* ?x7282 ?x7282 ?x1764)) (* 4 (* s00 ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* 6 (* x00 ?x7282 ?x1764 ?x1764 ?x1764)) (* 4 (* s00 ?x1425 ?x7282 ?x7282)) (* 2 (* ?x1425 ?x7282 ?x7282 ?x1764)) (* 3 (* s00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 6 (* ?x1425 ?x1425 ?x7282 ?x7282 ?x1764)) (* (- 12) (* r00 r00 ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 3) (* ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 3) (* r00 ?x7282 ?x7282)) (* (- 12) (* r00 r00 ?x1425 ?x7282 ?x7282)) (* 12 (* r00 r00 r00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 6 (* r00 s00 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 3) (* ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x1764)) (* (- 6) (* r00 s00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 4) (* s00 ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 6) (* x00 ?x7282 ?x7282)) (* 3 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 12 (* r00 r00 r00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 2 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x1764 ?x1764)) (* 12 (* r00 r00 ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* r00 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 3) (* r00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 3 (* ?x1425 ?x7282 ?x7282)) (* 2 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x1764)) (* (- 3) (* ?x1425 ?x1425 ?x7282 ?x1764 ?x1764)) (* (- 12) (* r00 r00 ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* 3 (* s00 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 3) (* s00 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* ?x7282 ?x1764 ?x1764 ?x1764 ?x1764)) (* 12 (* r00 r00 r00 ?x7282 ?x7282)) (* (- 6) (* x00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 6) (* r00 s00 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 2) (* ?x1425 ?x7282 ?x1764 ?x1764 ?x1764 ?x1764)) (* (- 6) (* r00 s00 ?x7282 ?x7282)) (* 4 (* s00 ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 12) (* r00 r00 r00 ?x7282 ?x1764 ?x1764 ?x1764)))))
 (let (($x7250 (not (= ?x2245 0))))
 (let ((?x6868 (* 108 ?x1364)))
 (let ((?x5106 (* (- 9) s)))
 (let ((?x7490 (* r00 r00 s00)))
 (let ((?x5064 (* (- 36) ?x7490)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4931 (* 51 ?x609)))
 (let ((?x7363 (* r00 r00 s)))
 (let ((?x2411 (* 36 ?x7363)))
 (let ((?x4761 (* 16 ?x1202)))
 (let ((?x4259 (* (- 108) ?x823)))
 (let ((?x2559 (* (- 432) ?x900)))
 (let ((?x5349 (* 108 ?x540)))
 (let ((?x6623 (+ (* 216 (* r00 s00 x00)) ?x5349 (* (- 54) (* r00 s00)) (* 15 ?x563) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) ?x821) (* 108 ?x872) ?x2559 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4259 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4761 (* (- 108) (* x s)) ?x2411 ?x4931 (* (- 108) (* r00 x)) ?x137 ?x5064 ?x5106 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6868)))
 (let (($x6878 (= ?x6623 0)))
 (let ((?x6758 (* 15 ?x609)))
 (let ((?x6266 (* 36 ?x895)))
 (let ((?x6515 (* (- 6) ?x823)))
 (let ((?x6682 (* 54 ?x540)))
 (let ((?x6775 (+ (* 24 (* s r)) ?x6682 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x563) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x6515 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2411 ?x6266 ?x6758 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x5064 (* 54 (* x00 r)) ?x5106 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x2538 (* 4 ?x609)))
 (let ((?x3044 (* 18 ?x540)))
 (let ((?x6679 (+ (* 9 (* s r)) ?x3044 (* (- 9) (* r00 s00)) (* (- 2) ?x563) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x7363) ?x2538 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x7490) (* 18 (* x00 r)) ?x517 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x6681 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x517 ?x518 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x519 ?x488)))
 (let (($x7272 (= (+ s00 ?x298 (* 3 (* r r)) (* (- 3) ?x319)) 0)))
 (let (($x6160 (and $x7272 (= ?x6681 0) (= ?x6679 0) (= ?x6775 0) $x6878 $x7250)))
 (rewrite (= $x6160 $x2104))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x7251 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (* 6 r)))
 (let ((?x1764 (+ 3 s ?x216)))
 (let ((?x298 (* (- 1) s)))
 (let ((?x7282 (+ x ?x298)))
 (let ((?x1425 (+ 1 r)))
 (let ((?x2245 (+ (* 3 (* s00 ?x7282 ?x7282)) (* (- 3) (* r00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 6) (* x00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 6 (* ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x7282)) (* (- 6) (* ?x7282 ?x7282 ?x1764 ?x1764 ?x1764)) (* 6 (* ?x7282 ?x7282 ?x7282)) (* (- 3) (* ?x7282 ?x7282 ?x1764)) (* 4 (* s00 ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* 6 (* x00 ?x7282 ?x1764 ?x1764 ?x1764)) (* 4 (* s00 ?x1425 ?x7282 ?x7282)) (* 2 (* ?x1425 ?x7282 ?x7282 ?x1764)) (* 3 (* s00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 6 (* ?x1425 ?x1425 ?x7282 ?x7282 ?x1764)) (* (- 12) (* r00 r00 ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 3) (* ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 3) (* r00 ?x7282 ?x7282)) (* (- 12) (* r00 r00 ?x1425 ?x7282 ?x7282)) (* 12 (* r00 r00 r00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 6 (* r00 s00 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 3) (* ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x1764)) (* (- 6) (* r00 s00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 4) (* s00 ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 6) (* x00 ?x7282 ?x7282)) (* 3 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 12 (* r00 r00 r00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 2 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x1764 ?x1764)) (* 12 (* r00 r00 ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* r00 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 3) (* r00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 3 (* ?x1425 ?x7282 ?x7282)) (* 2 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x1764)) (* (- 3) (* ?x1425 ?x1425 ?x7282 ?x1764 ?x1764)) (* (- 12) (* r00 r00 ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* 3 (* s00 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 3) (* s00 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* ?x7282 ?x1764 ?x1764 ?x1764 ?x1764)) (* 12 (* r00 r00 r00 ?x7282 ?x7282)) (* (- 6) (* x00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 6) (* r00 s00 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 2) (* ?x1425 ?x7282 ?x1764 ?x1764 ?x1764 ?x1764)) (* (- 6) (* r00 s00 ?x7282 ?x7282)) (* 4 (* s00 ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 12) (* r00 r00 r00 ?x7282 ?x1764 ?x1764 ?x1764)))))
 (let (($x7250 (not (= ?x2245 0))))
 (let ((?x1364 (* x00 x00)))
 (let ((?x6868 (* 108 ?x1364)))
 (let ((?x5106 (* (- 9) s)))
 (let ((?x7490 (* r00 r00 s00)))
 (let ((?x5064 (* (- 36) ?x7490)))
 (let ((?x137 (* 9 s00)))
 (let ((?x609 (* s00 s00)))
 (let ((?x4931 (* 51 ?x609)))
 (let ((?x7363 (* r00 r00 s)))
 (let ((?x2411 (* 36 ?x7363)))
 (let ((?x1202 (* s00 s00 s00)))
 (let ((?x4761 (* 16 ?x1202)))
 (let ((?x823 (* s00 x00)))
 (let ((?x4259 (* (- 108) ?x823)))
 (let ((?x900 (* r00 r00 r00 x00)))
 (let ((?x2559 (* (- 432) ?x900)))
 (let ((?x540 (* r00 x00)))
 (let ((?x5349 (* 108 ?x540)))
 (let ((?x6623 (+ (* 216 (* r00 s00 x00)) ?x5349 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2559 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4259 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4761 (* (- 108) (* x s)) ?x2411 ?x4931 (* (- 108) (* r00 x)) ?x137 ?x5064 ?x5106 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6868)))
 (let (($x6878 (= ?x6623 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1005 (* (- 9) s00)))
 (let ((?x934 (* (- 15) ?x609)))
 (let ((?x895 (* r00 r00 x00)))
 (let ((?x908 (* (- 36) ?x895)))
 (let ((?x824 (* 6 ?x823)))
 (let ((?x563 (* s s)))
 (let ((?x587 (* 3 ?x563)))
 (let ((?x569 (* (- 54) ?x540)))
 (let ((?x4145 (+ (* (- 24) (* s r)) ?x569 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x587 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x824 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x7363) ?x908 ?x934 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1005 (* 36 ?x7490) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x396 (* (- 3) s00)))
 (let ((?x622 (* (- 4) ?x609)))
 (let ((?x564 (* 2 ?x563)))
 (let ((?x554 (* (- 18) ?x540)))
 (let ((?x3046 (+ (* (- 9) (* s r)) ?x554 (* 9 (* r00 s00)) ?x564 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x7363) ?x622 (* 18 (* r00 x)) ?x396 (* 6 ?x7490) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x7420 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x396 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x7272 (= (+ s00 ?x298 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x7272 (= ?x7420 0) (= ?x3046 0) (= ?x4145 0) $x6878 $x7250)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3060 (lambda ((r Int) (s Int) (x Int) )(let ((?x216 (* 6 r)))
 (let ((?x1764 (+ 3 s ?x216)))
 (let ((?x298 (* (- 1) s)))
 (let ((?x7282 (+ x ?x298)))
 (let ((?x1425 (+ 1 r)))
 (let ((?x2245 (+ (* 3 (* s00 ?x7282 ?x7282)) (* (- 3) (* r00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 6) (* x00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 6 (* ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x7282)) (* (- 6) (* ?x7282 ?x7282 ?x1764 ?x1764 ?x1764)) (* 6 (* ?x7282 ?x7282 ?x7282)) (* (- 3) (* ?x7282 ?x7282 ?x1764)) (* 4 (* s00 ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* 6 (* x00 ?x7282 ?x1764 ?x1764 ?x1764)) (* 4 (* s00 ?x1425 ?x7282 ?x7282)) (* 2 (* ?x1425 ?x7282 ?x7282 ?x1764)) (* 3 (* s00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 6 (* ?x1425 ?x1425 ?x7282 ?x7282 ?x1764)) (* (- 12) (* r00 r00 ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 3) (* ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 3) (* r00 ?x7282 ?x7282)) (* (- 12) (* r00 r00 ?x1425 ?x7282 ?x7282)) (* 12 (* r00 r00 r00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 6 (* r00 s00 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 3) (* ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x1764)) (* (- 6) (* r00 s00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 4) (* s00 ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 6) (* x00 ?x7282 ?x7282)) (* 3 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 12 (* r00 r00 r00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 2 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x1764 ?x1764)) (* 12 (* r00 r00 ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* r00 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 3) (* r00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 3 (* ?x1425 ?x7282 ?x7282)) (* 2 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x1764)) (* (- 3) (* ?x1425 ?x1425 ?x7282 ?x1764 ?x1764)) (* (- 12) (* r00 r00 ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* 3 (* s00 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 3) (* s00 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* ?x7282 ?x1764 ?x1764 ?x1764 ?x1764)) (* 12 (* r00 r00 r00 ?x7282 ?x7282)) (* (- 6) (* x00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 6) (* r00 s00 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 2) (* ?x1425 ?x7282 ?x1764 ?x1764 ?x1764 ?x1764)) (* (- 6) (* r00 s00 ?x7282 ?x7282)) (* 4 (* s00 ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 12) (* r00 r00 r00 ?x7282 ?x1764 ?x1764 ?x1764)))))
 (let (($x7250 (not (= ?x2245 0))))
 (let ((?x1364 (* x00 x00)))
 (let ((?x6868 (* 108 ?x1364)))
 (let ((?x5106 (* (- 9) s)))
 (let ((?x7490 (* r00 r00 s00)))
 (let ((?x5064 (* (- 36) ?x7490)))
 (let ((?x137 (* 9 s00)))
 (let ((?x609 (* s00 s00)))
 (let ((?x4931 (* 51 ?x609)))
 (let ((?x7363 (* r00 r00 s)))
 (let ((?x2411 (* 36 ?x7363)))
 (let ((?x1202 (* s00 s00 s00)))
 (let ((?x4761 (* 16 ?x1202)))
 (let ((?x823 (* s00 x00)))
 (let ((?x4259 (* (- 108) ?x823)))
 (let ((?x900 (* r00 r00 r00 x00)))
 (let ((?x2559 (* (- 432) ?x900)))
 (let ((?x540 (* r00 x00)))
 (let ((?x5349 (* 108 ?x540)))
 (let ((?x6623 (+ (* 216 (* r00 s00 x00)) ?x5349 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2559 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4259 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4761 (* (- 108) (* x s)) ?x2411 ?x4931 (* (- 108) (* r00 x)) ?x137 ?x5064 ?x5106 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6868)))
 (let (($x6878 (= ?x6623 0)))
 (let ((?x6758 (* 15 ?x609)))
 (let ((?x895 (* r00 r00 x00)))
 (let ((?x6266 (* 36 ?x895)))
 (let ((?x6515 (* (- 6) ?x823)))
 (let ((?x6682 (* 54 ?x540)))
 (let ((?x6775 (+ (* 24 (* s r)) ?x6682 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x6515 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2411 ?x6266 ?x6758 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x5064 (* 54 (* x00 r)) ?x5106 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x517 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2538 (* 4 ?x609)))
 (let ((?x3044 (* 18 ?x540)))
 (let ((?x6679 (+ (* 9 (* s r)) ?x3044 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x7363) ?x2538 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x7490) (* 18 (* x00 r)) ?x517 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x487 (* r00 r00 r00)))
 (let ((?x488 (* 12 ?x487)))
 (let ((?x519 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x518 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x6681 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x517 ?x518 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x519 ?x488)))
 (let (($x7272 (= (+ s00 ?x298 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x6160 (and $x7272 (= ?x6681 0) (= ?x6679 0) (= ?x6775 0) $x6878 $x7250)))
 (let ((?x143 (* 9 s)))
 (let ((?x1005 (* (- 9) s00)))
 (let ((?x934 (* (- 15) ?x609)))
 (let ((?x908 (* (- 36) ?x895)))
 (let ((?x824 (* 6 ?x823)))
 (let ((?x563 (* s s)))
 (let ((?x587 (* 3 ?x563)))
 (let ((?x569 (* (- 54) ?x540)))
 (let ((?x4145 (+ (* (- 24) (* s r)) ?x569 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x587 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x824 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x7363) ?x908 ?x934 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1005 (* 36 ?x7490) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x396 (* (- 3) s00)))
 (let ((?x622 (* (- 4) ?x609)))
 (let ((?x564 (* 2 ?x563)))
 (let ((?x554 (* (- 18) ?x540)))
 (let ((?x3046 (+ (* (- 9) (* s r)) ?x554 (* 9 (* r00 s00)) ?x564 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x7363) ?x622 (* 18 (* r00 x)) ?x396 (* 6 ?x7490) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x7420 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x396 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x487))))
 (let (($x7429 (and $x7272 (= ?x7420 0) (= ?x3046 0) (= ?x4145 0) $x6878 $x7250)))
 (rewrite (= $x7429 $x6160)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x295 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (- x s)))
 (let ((?x216 (* 6 r)))
 (let ((?x217 (+ s ?x216 3)))
 (let ((?x214 (+ r 1)))
 (let ((?x219 (- (* 3 s00 ?x211 ?x211) (* 3 ?x214 ?x214 r00 ?x211 ?x211 ?x211))))
 (let ((?x222 (+ (- ?x219 (* 6 ?x214 ?x214 ?x217 ?x211 x00)) (* 6 ?x214 ?x214 ?x211 ?x211 ?x211 ?x211))))
 (let ((?x226 (+ (- ?x222 (* 6 ?x217 ?x217 ?x217 ?x211 ?x211)) (* 6 ?x211 ?x211 ?x211))))
 (let ((?x235 (+ (- ?x226 (* 3 ?x217 ?x211 ?x211)) (* 4 ?x214 ?x214 ?x214 ?x217 s00 ?x211) (* 6 ?x217 ?x217 ?x217 ?x211 x00) (* 4 ?x214 s00 ?x211 ?x211) (* 2 ?x214 ?x217 ?x211 ?x211) (* 3 ?x214 ?x214 s00 ?x211 ?x211 ?x211) (* 6 ?x214 ?x214 ?x217 ?x211 ?x211))))
 (let ((?x239 (- (- ?x235 (* 12 ?x214 ?x214 ?x214 r00 r00 ?x211 ?x211 ?x211)) (* 3 ?x214 ?x217 ?x217 ?x217 ?x211))))
 (let ((?x244 (- (+ ?x239 (* 3 ?x214 ?x214 ?x214 ?x217 ?x211)) (* 3 r00 ?x211 ?x211))))
 (let ((?x248 (+ (- ?x244 (* 12 ?x214 r00 r00 ?x211 ?x211)) (* 12 ?x214 ?x214 r00 r00 r00 ?x211 ?x211 ?x211) (* 6 r00 ?x217 ?x217 ?x217 s00 ?x211))))
 (let ((?x254 (- (- ?x248 (* 3 ?x214 ?x214 ?x217 ?x211 ?x211 ?x211)) (* 6 ?x214 ?x214 r00 s00 ?x211 ?x211 ?x211))))
 (let ((?x256 (- (- ?x254 (* 4 ?x214 ?x217 ?x217 ?x217 s00 ?x211)) (* 6 ?x211 ?x211 x00))))
 (let ((?x262 (+ ?x256 (* 3 ?x214 ?x214 ?x214 ?x211 ?x211 ?x211) (* 12 ?x214 ?x214 r00 r00 r00 ?x217 ?x211) (* 2 ?x214 ?x214 ?x214 ?x217 ?x217 ?x211) (* 12 ?x214 r00 r00 ?x217 ?x217 ?x217 ?x211) (* 3 r00 ?x217 ?x217 ?x217 ?x211))))
 (let ((?x267 (+ (- ?x262 (* 3 ?x214 ?x214 r00 ?x217 ?x211)) (* 3 ?x214 ?x211 ?x211) (* 2 ?x214 ?x214 ?x214 ?x217 ?x211 ?x211 ?x211))))
 (let ((?x271 (- (- ?x267 (* 3 ?x214 ?x214 ?x217 ?x217 ?x211)) (* 12 ?x214 ?x214 ?x214 r00 r00 ?x217 ?x211))))
 (let ((?x275 (- (+ ?x271 (* 3 ?x214 ?x214 ?x217 s00 ?x211)) (* 3 ?x217 ?x217 ?x217 s00 ?x211))))
 (let ((?x278 (+ ?x275 (* 3 ?x217 ?x217 ?x217 ?x217 ?x211) (* 12 r00 r00 r00 ?x211 ?x211))))
 (let ((?x284 (- (- ?x278 (* 6 ?x214 ?x214 ?x211 ?x211 ?x211 x00)) (* 6 ?x214 ?x214 r00 ?x217 s00 ?x211))))
 (let ((?x286 (- (- ?x284 (* 2 ?x214 ?x217 ?x217 ?x217 ?x217 ?x211)) (* 6 r00 s00 ?x211 ?x211))))
 (let ((?x290 (- (+ ?x286 (* 4 ?x214 ?x214 ?x214 s00 ?x211 ?x211 ?x211)) (* 12 r00 r00 r00 ?x217 ?x217 ?x217 ?x211))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x290 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x7319 (lambda ((r Int) (s Int) (x Int) )(let ((?x216 (* 6 r)))
 (let ((?x1764 (+ 3 s ?x216)))
 (let ((?x298 (* (- 1) s)))
 (let ((?x7282 (+ x ?x298)))
 (let ((?x1425 (+ 1 r)))
 (let ((?x2245 (+ (* 3 (* s00 ?x7282 ?x7282)) (* (- 3) (* r00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 6) (* x00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 6 (* ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x7282)) (* (- 6) (* ?x7282 ?x7282 ?x1764 ?x1764 ?x1764)) (* 6 (* ?x7282 ?x7282 ?x7282)) (* (- 3) (* ?x7282 ?x7282 ?x1764)) (* 4 (* s00 ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* 6 (* x00 ?x7282 ?x1764 ?x1764 ?x1764)) (* 4 (* s00 ?x1425 ?x7282 ?x7282)) (* 2 (* ?x1425 ?x7282 ?x7282 ?x1764)) (* 3 (* s00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 6 (* ?x1425 ?x1425 ?x7282 ?x7282 ?x1764)) (* (- 12) (* r00 r00 ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 3) (* ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 3) (* r00 ?x7282 ?x7282)) (* (- 12) (* r00 r00 ?x1425 ?x7282 ?x7282)) (* 12 (* r00 r00 r00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 6 (* r00 s00 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 3) (* ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x1764)) (* (- 6) (* r00 s00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 4) (* s00 ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 6) (* x00 ?x7282 ?x7282)) (* 3 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* 12 (* r00 r00 r00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 2 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x1764 ?x1764)) (* 12 (* r00 r00 ?x1425 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* r00 ?x7282 ?x1764 ?x1764 ?x1764)) (* (- 3) (* r00 ?x1425 ?x1425 ?x7282 ?x1764)) (* 3 (* ?x1425 ?x7282 ?x7282)) (* 2 (* ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282 ?x1764)) (* (- 3) (* ?x1425 ?x1425 ?x7282 ?x1764 ?x1764)) (* (- 12) (* r00 r00 ?x1425 ?x1425 ?x1425 ?x7282 ?x1764)) (* 3 (* s00 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 3) (* s00 ?x7282 ?x1764 ?x1764 ?x1764)) (* 3 (* ?x7282 ?x1764 ?x1764 ?x1764 ?x1764)) (* 12 (* r00 r00 r00 ?x7282 ?x7282)) (* (- 6) (* x00 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 6) (* r00 s00 ?x1425 ?x1425 ?x7282 ?x1764)) (* (- 2) (* ?x1425 ?x7282 ?x1764 ?x1764 ?x1764 ?x1764)) (* (- 6) (* r00 s00 ?x7282 ?x7282)) (* 4 (* s00 ?x1425 ?x1425 ?x1425 ?x7282 ?x7282 ?x7282)) (* (- 12) (* r00 r00 r00 ?x7282 ?x1764 ?x1764 ?x1764)))))
 (let (($x7250 (not (= ?x2245 0))))
 (let ((?x1364 (* x00 x00)))
 (let ((?x6868 (* 108 ?x1364)))
 (let ((?x5106 (* (- 9) s)))
 (let ((?x7490 (* r00 r00 s00)))
 (let ((?x5064 (* (- 36) ?x7490)))
 (let ((?x137 (* 9 s00)))
 (let ((?x609 (* s00 s00)))
 (let ((?x4931 (* 51 ?x609)))
 (let ((?x7363 (* r00 r00 s)))
 (let ((?x2411 (* 36 ?x7363)))
 (let ((?x1202 (* s00 s00 s00)))
 (let ((?x4761 (* 16 ?x1202)))
 (let ((?x823 (* s00 x00)))
 (let ((?x4259 (* (- 108) ?x823)))
 (let ((?x900 (* r00 r00 r00 x00)))
 (let ((?x2559 (* (- 432) ?x900)))
 (let ((?x540 (* r00 x00)))
 (let ((?x5349 (* 108 ?x540)))
 (let ((?x6623 (+ (* 216 (* r00 s00 x00)) ?x5349 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2559 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4259 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4761 (* (- 108) (* x s)) ?x2411 ?x4931 (* (- 108) (* r00 x)) ?x137 ?x5064 ?x5106 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6868)))
 (let (($x6878 (= ?x6623 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1005 (* (- 9) s00)))
 (let ((?x934 (* (- 15) ?x609)))
 (let ((?x895 (* r00 r00 x00)))
 (let ((?x908 (* (- 36) ?x895)))
 (let ((?x824 (* 6 ?x823)))
 (let ((?x563 (* s s)))
 (let ((?x587 (* 3 ?x563)))
 (let ((?x569 (* (- 54) ?x540)))
 (let ((?x4145 (+ (* (- 24) (* s r)) ?x569 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x587 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x824 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x7363) ?x908 ?x934 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1005 (* 36 ?x7490) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x396 (* (- 3) s00)))
 (let ((?x622 (* (- 4) ?x609)))
 (let ((?x564 (* 2 ?x563)))
 (let ((?x554 (* (- 18) ?x540)))
 (let ((?x3046 (+ (* (- 9) (* s r)) ?x554 (* 9 (* r00 s00)) ?x564 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x7363) ?x622 (* 18 (* r00 x)) ?x396 (* 6 ?x7490) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x7420 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x396 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x7272 (= (+ s00 ?x298 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x7429 (and $x7272 (= ?x7420 0) (= ?x3046 0) (= ?x4145 0) $x6878 $x7250)))
 (let ((?x211 (- x s)))
 (let ((?x217 (+ s ?x216 3)))
 (let ((?x214 (+ r 1)))
 (let ((?x219 (- (* 3 s00 ?x211 ?x211) (* 3 ?x214 ?x214 r00 ?x211 ?x211 ?x211))))
 (let ((?x222 (+ (- ?x219 (* 6 ?x214 ?x214 ?x217 ?x211 x00)) (* 6 ?x214 ?x214 ?x211 ?x211 ?x211 ?x211))))
 (let ((?x226 (+ (- ?x222 (* 6 ?x217 ?x217 ?x217 ?x211 ?x211)) (* 6 ?x211 ?x211 ?x211))))
 (let ((?x235 (+ (- ?x226 (* 3 ?x217 ?x211 ?x211)) (* 4 ?x214 ?x214 ?x214 ?x217 s00 ?x211) (* 6 ?x217 ?x217 ?x217 ?x211 x00) (* 4 ?x214 s00 ?x211 ?x211) (* 2 ?x214 ?x217 ?x211 ?x211) (* 3 ?x214 ?x214 s00 ?x211 ?x211 ?x211) (* 6 ?x214 ?x214 ?x217 ?x211 ?x211))))
 (let ((?x239 (- (- ?x235 (* 12 ?x214 ?x214 ?x214 r00 r00 ?x211 ?x211 ?x211)) (* 3 ?x214 ?x217 ?x217 ?x217 ?x211))))
 (let ((?x244 (- (+ ?x239 (* 3 ?x214 ?x214 ?x214 ?x217 ?x211)) (* 3 r00 ?x211 ?x211))))
 (let ((?x248 (+ (- ?x244 (* 12 ?x214 r00 r00 ?x211 ?x211)) (* 12 ?x214 ?x214 r00 r00 r00 ?x211 ?x211 ?x211) (* 6 r00 ?x217 ?x217 ?x217 s00 ?x211))))
 (let ((?x254 (- (- ?x248 (* 3 ?x214 ?x214 ?x217 ?x211 ?x211 ?x211)) (* 6 ?x214 ?x214 r00 s00 ?x211 ?x211 ?x211))))
 (let ((?x256 (- (- ?x254 (* 4 ?x214 ?x217 ?x217 ?x217 s00 ?x211)) (* 6 ?x211 ?x211 x00))))
 (let ((?x262 (+ ?x256 (* 3 ?x214 ?x214 ?x214 ?x211 ?x211 ?x211) (* 12 ?x214 ?x214 r00 r00 r00 ?x217 ?x211) (* 2 ?x214 ?x214 ?x214 ?x217 ?x217 ?x211) (* 12 ?x214 r00 r00 ?x217 ?x217 ?x217 ?x211) (* 3 r00 ?x217 ?x217 ?x217 ?x211))))
 (let ((?x267 (+ (- ?x262 (* 3 ?x214 ?x214 r00 ?x217 ?x211)) (* 3 ?x214 ?x211 ?x211) (* 2 ?x214 ?x214 ?x214 ?x217 ?x211 ?x211 ?x211))))
 (let ((?x271 (- (- ?x267 (* 3 ?x214 ?x214 ?x217 ?x217 ?x211)) (* 12 ?x214 ?x214 ?x214 r00 r00 ?x217 ?x211))))
 (let ((?x275 (- (+ ?x271 (* 3 ?x214 ?x214 ?x217 s00 ?x211)) (* 3 ?x217 ?x217 ?x217 s00 ?x211))))
 (let ((?x278 (+ ?x275 (* 3 ?x217 ?x217 ?x217 ?x217 ?x211) (* 12 r00 r00 r00 ?x211 ?x211))))
 (let ((?x284 (- (- ?x278 (* 6 ?x214 ?x214 ?x211 ?x211 ?x211 x00)) (* 6 ?x214 ?x214 r00 ?x217 s00 ?x211))))
 (let ((?x286 (- (- ?x284 (* 2 ?x214 ?x217 ?x217 ?x217 ?x217 ?x211)) (* 6 r00 s00 ?x211 ?x211))))
 (let ((?x290 (- (+ ?x286 (* 4 ?x214 ?x214 ?x214 s00 ?x211 ?x211 ?x211)) (* 12 r00 r00 r00 ?x217 ?x217 ?x217 ?x211))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x294 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x290 0))))))
 (rewrite (= $x294 $x7429)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x296 (asserted $x295)))
 (let ((@x1802 (mp (mp @x296 (quant-intro (proof-bind ?x7319) (= $x295 $x7251)) $x7251) (rewrite (= $x7251 $x7251)) $x7251)))
 (let ((@x5629 (mp (mp @x1802 (quant-intro (proof-bind ?x3060) (= $x7251 $x2136)) $x2136) (quant-intro (proof-bind ?x7399) (= $x2136 $x7398)) $x7398)))
 (let ((@x1872 (mp (mp~ @x5629 (sk (~ $x7398 $x4053)) $x4053) (rewrite (= $x4053 $x6895)) $x6895)))
 (let ((@x7492 (and-elim @x1872 $x4885)))
 (let ((@x3483 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4885) $x8368)) @x7492 $x8368)))
 (let (($x8409 (>= ?x7923 0)))
 (let ((@x3515 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4885) $x8409)) @x7492 $x8409)))
 (let (($x8148 (<= ?x2037 0)))
 (let ((@x3235 (and-elim @x1872 $x7831)))
 (let ((@x3477 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7831) $x8148)) @x3235 $x8148)))
 (let (($x8418 (>= ?x2037 0)))
 (let ((@x6557 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7831) $x8418)) @x3235 $x8418)))
 (let (($x4068 (<= ?x3199 0)))
 (let ((@x3241 (and-elim @x1872 $x3206)))
 (let ((@x7811 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3206) $x4068)) @x3241 $x4068)))
 (let (($x6669 (>= ?x3199 0)))
 (let ((@x6696 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3206) $x6669)) @x3241 $x6669)))
 (let (($x7805 (<= ?x6207 0)))
 (let ((@x3238 (and-elim @x1872 $x6633)))
 (let ((@x4011 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6633) $x7805)) @x3238 $x7805)))
 (let (($x6489 (>= ?x6207 0)))
 (let ((@x7379 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6633) $x6489)) @x3238 $x6489)))
 (let (($x9488 (not (<= ?x1431 0))))
 (let (($x8403 (>= ?x1431 0)))
 (let ((@x8023 ((_ th-lemma arith) (hypothesis (not $x8403)) @x3515 @x3483 @x6696 @x7811 @x6696 @x7811 @x7379 @x4011 @x7379 @x4011 @x7379 @x4011 @x3515 @x3483 @x6696 @x7811 @x6557 @x3477 @x3515 @x3483 false)))
 (let ((@x7955 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1509 $x9488 (not $x8403))) (and-elim @x1872 $x1867) (or $x9488 (not $x8403)))))
 ((_ th-lemma arith) (unit-resolution @x7955 (lemma @x8023 $x8403) $x9488) @x3515 @x3483 @x6696 @x7811 @x6696 @x7811 @x7379 @x4011 @x7379 @x4011 @x7379 @x4011 @x3515 @x3483 @x6696 @x7811 @x6557 @x3477 @x3515 @x3483 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        33
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2046
 :arith-nonlinear-bounds    26
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      10
 :arith-tableau-max-columns 368
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                5.27
 :memory                    4.14
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                3958239
 :num-checks                1
 :propagations              12
 :rlimit-count              59336
 :time                      0.05
 :total-time                0.06)
