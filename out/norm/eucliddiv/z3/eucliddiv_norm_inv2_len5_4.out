unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun q!2 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x299 (* (- 1) r!1)))
 (let ((?x298 (* (- 1) (* y00 q!2))))
 (let ((?x89 (* y00 q00)))
 (let ((?x330 (+ r00 ?x89 ?x298 ?x299)))
 (let (($x197 (<= ?x330 0)))
 (let (($x655 (= ?x330 0)))
 (let ((?x1766 (* y00 y00 y00 y00 r00)))
 (let ((?x1152 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x174 (* y00 y00 y00 q00)))
 (let ((?x123 (* y00 y00 r00)))
 (let ((?x1001 (+ r00 ?x89 (* y00 y00 y00 q00 r!1 r!1 q!2) ?x123 (* (- 1) (* y00 y00 y00 q!2)) (* y00 y00 y00 q00 r!1 q!2 q!2) (* (- 1) (* y00 y00 y00 q00 r!1)) (* (- 3) (* y00 q!2 q!2 q!2)) ?x174 (* (- 1) (* y00 y00 y00 y00 q00 q!2 q!2)) (* (- 1) (* y00 q!2 q!2 q!2 q!2)) (* (- 1) (* y00 r!1 r!1 r!1)) (* (- 1) (* y00 r!1 r!1 r!1 q!2)) (* (- 1) (* y00 y00 r!1 r!1 r!1)) (* (- 1) (* y00 y00 r!1 r!1 r!1 q!2)) (* (- 1) (* y00 y00 r00 r!1)) (* y00 y00 r00 r!1 q!2 q!2) (* (- 1) (* y00 y00 y00 r00 q!2)) (* r00 r!1 r!1) (* (- 2) (* y00 r00 r!1)) (* y00 q00 r!1 r!1) (* y00 y00 y00 q00 r!1 r!1) (* (- 2) (* y00 y00 q00 r!1)) (* y00 y00 y00 r!1 r!1 q!2) (* (- 1) (* y00 y00 r!1 r!1 q!2)) (* (- 1) (* y00 y00 y00 r!1 q!2 q!2 q!2)) (* 3 (* r00 q!2 q!2)) (* (- 1) (* y00 y00 y00 r00 q!2 q!2)) ?x298 (* 2 (* y00 y00 y00 y00 r!1 q!2 q!2)) (* y00 y00 r00 r!1 r!1) (* y00 y00 q00 r!1 r!1) (* 3 (* r00 q!2)) (* (- 1) (* y00 r!1 r!1 q!2)) (* (- 2) (* y00 y00 y00 y00 q00 r!1)) (* y00 y00 y00 y00 q!2 q!2 q!2) (* y00 y00 y00 y00 y00 q00 q!2) ?x1152 (* (- 2) (* y00 y00 y00 y00 q00 r!1 q!2)) (* y00 y00 y00 y00 q!2 q!2) (* r00 q!2 q!2 q!2) (* y00 y00 q00 r!1 r!1 q!2) (* (- 1) (* y00 y00 y00 y00 q00 q!2)) (* (- 3) (* y00 q!2 q!2)) (* 2 (* y00 y00 r!1 q!2)) (* (- 1) (* y00 y00 r!1)) (* 2 (* y00 r!1 r!1)) (* y00 q00 q!2 q!2 q!2) (* 3 (* y00 q00 q!2 q!2)) (* (- 1) (* y00 y00 y00 r!1 r!1 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 r!1)) (* y00 y00 y00 y00 r!1 q!2) (* (- 1) (* y00 y00 y00 y00 y00 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 q!2 q!2)) (* (- 3) (* r!1 q!2 q!2)) (* (- 1) (* r!1 q!2 q!2 q!2)) (* (- 3) (* r!1 q!2)) ?x299 (* 2 (* y00 y00 y00 r!1 r!1)) (* y00 y00 r!1 r!1) (* y00 r00 r!1 r!1) (* (- 2) (* y00 y00 y00 r00 r!1)) (* y00 y00 y00 y00 r00 q!2) (* (- 1) (* r!1 r!1 r!1)) (* y00 r00 r!1 r!1 q!2) (* y00 y00 r00 r!1 r!1 q!2) (* (- 2) (* y00 y00 y00 r00 r!1 q!2)) (* 3 (* y00 q00 q!2)) ?x1766 (* (- 2) (* y00 y00 r!1 r!1 q!2 q!2)) (* 2 (* y00 y00 y00 r!1 q!2)) (* y00 y00 y00 r!1 q!2 q!2))))
 (let (($x1002 (= ?x1001 0)))
 (let (($x562 (not $x1002)))
 (let ((?x607 (+ y00 (* (- 1) y!0))))
 (let (($x189 (= ?x607 0)))
 (let (($x348 (and $x189 $x655 $x562)))
 (let ((?x1886 (* (- 1) ?x1766)))
 (let ((?x1876 (* (- 1) ?x1152)))
 (let ((?x1726 (* r!1 r!1 r!1)))
 (let ((?x1861 (* (- 1) ?x174)))
 (let ((?x1858 (* (- 1) ?x123)))
 (let ((?x100 (* (- 1) ?x89)))
 (let ((?x1581 (* q!2 y00)))
 (let ((?x88 (* (- 1) r00)))
 (let ((?x120 (+ r!1 ?x88 ?x1581 ?x100 (* (- 1) (* r!1 r!1 r00)) (* 2 (* r!1 y00 r00)) ?x1858 (* (- 1) (* r!1 r!1 y00 q00)) (* 2 (* r!1 y00 y00 q00)) ?x1861 (* (- 1) (* r!1 r!1 y00 y00)) (* q!2 r!1 r!1 y00 y00) (* 2 (* q!2 q!2 r!1 r!1 y00 y00)) (* (- 2) (* q!2 r!1 y00 y00 y00)) (* (- 1) (* q!2 q!2 r!1 y00 y00 y00)) (* (- 1) (* q!2 q!2 y00 y00 y00 y00)) ?x1726 (* (- 2) (* r!1 r!1 y00)) (* r!1 y00 y00) (* q!2 r!1 r!1 y00) (* (- 2) (* q!2 r!1 y00 y00)) (* q!2 y00 y00 y00) (* r!1 y00 y00 y00 q00) (* (- 1) (* q!2 q!2 r!1 y00 y00 y00 q00)) (* q!2 y00 y00 y00 y00 q00) (* q!2 q!2 y00 y00 y00 y00 q00) (* 3 (* q!2 q!2 y00)) (* 3 (* q!2 q!2 q!2 y00)) (* q!2 q!2 q!2 q!2 y00) (* r!1 r!1 r!1 y00) (* q!2 r!1 r!1 r!1 y00) (* (- 1) (* r!1 r!1 y00 y00 q00)) (* (- 1) (* q!2 r!1 r!1 y00 y00 q00)) (* (- 3) (* q!2 r00)) (* (- 3) (* q!2 q!2 r00)) (* (- 1) (* q!2 q!2 q!2 r00)) (* q!2 q!2 q!2 r!1 y00 y00 y00) (* (- 1) (* q!2 q!2 q!2 y00 y00 y00 y00)) (* (- 1) (* r!1 r!1 y00 y00 y00 q00)) (* (- 1) (* q!2 r!1 r!1 y00 y00 y00 q00)) (* 2 (* r!1 y00 y00 y00 y00 q00)) (* 2 (* q!2 r!1 y00 y00 y00 y00 q00)) ?x1876 (* (- 1) (* q!2 y00 y00 y00 y00 y00 q00)) (* (- 2) (* r!1 r!1 y00 y00 y00)) (* (- 1) (* q!2 r!1 r!1 y00 y00 y00)) (* q!2 q!2 r!1 r!1 y00 y00 y00) (* r!1 y00 y00 y00 y00) (* (- 1) (* q!2 r!1 y00 y00 y00 y00)) (* (- 2) (* q!2 q!2 r!1 y00 y00 y00 y00)) (* q!2 y00 y00 y00 y00 y00) (* q!2 q!2 y00 y00 y00 y00 y00) (* 3 (* q!2 r!1)) (* 3 (* q!2 q!2 r!1)) (* q!2 q!2 q!2 r!1) (* r!1 r!1 r!1 y00 y00) (* q!2 r!1 r!1 r!1 y00 y00) (* r!1 y00 y00 r00) (* (- 1) (* q!2 q!2 r!1 y00 y00 r00)) (* q!2 y00 y00 y00 r00) (* q!2 q!2 y00 y00 y00 r00) (* (- 1) (* r!1 r!1 y00 r00)) (* (- 1) (* q!2 r!1 r!1 y00 r00)) (* (- 1) (* r!1 r!1 y00 y00 r00)) (* (- 1) (* q!2 r!1 r!1 y00 y00 r00)) (* 2 (* r!1 y00 y00 y00 r00)) (* 2 (* q!2 r!1 y00 y00 y00 r00)) ?x1886 (* (- 1) (* q!2 y00 y00 y00 y00 r00)) (* (- 3) (* q!2 y00 q00)) (* (- 3) (* q!2 q!2 y00 q00)) (* (- 1) (* q!2 q!2 q!2 y00 q00)))))
 (let (($x97 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 ?x88 ?x1581 ?x100) 0) (not (= ?x120 0)))))
 (let (($x1898 (exists ((q Int) (r Int) (y Int) )(! (let ((?x1766 (* y00 y00 y00 y00 r00)))
 (let ((?x1886 (* (- 1) ?x1766)))
 (let ((?x1152 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1876 (* (- 1) ?x1152)))
 (let ((?x174 (* y00 y00 y00 q00)))
 (let ((?x1861 (* (- 1) ?x174)))
 (let ((?x123 (* y00 y00 r00)))
 (let ((?x1858 (* (- 1) ?x123)))
 (let ((?x89 (* y00 q00)))
 (let ((?x100 (* (- 1) ?x89)))
 (let ((?x39 (* q y00)))
 (let ((?x88 (* (- 1) r00)))
 (let ((?x1891 (+ r ?x88 ?x39 ?x100 (* (- 1) (* r r r00)) (* 2 (* r y00 r00)) ?x1858 (* (- 1) (* r r y00 q00)) (* 2 (* r y00 y00 q00)) ?x1861 (* (- 1) (* r r y00 y00)) (* q r r y00 y00) (* 2 (* q q r r y00 y00)) (* (- 2) (* q r y00 y00 y00)) (* (- 1) (* q q r y00 y00 y00)) (* (- 1) (* q q y00 y00 y00 y00)) (* r r r) (* (- 2) (* r r y00)) (* r y00 y00) (* q r r y00) (* (- 2) (* q r y00 y00)) (* q y00 y00 y00) (* r y00 y00 y00 q00) (* (- 1) (* q q r y00 y00 y00 q00)) (* q y00 y00 y00 y00 q00) (* q q y00 y00 y00 y00 q00) (* 3 (* q q y00)) (* 3 (* q q q y00)) (* q q q q y00) (* r r r y00) (* q r r r y00) (* (- 1) (* r r y00 y00 q00)) (* (- 1) (* q r r y00 y00 q00)) (* (- 3) (* q r00)) (* (- 3) (* q q r00)) (* (- 1) (* q q q r00)) (* q q q r y00 y00 y00) (* (- 1) (* q q q y00 y00 y00 y00)) (* (- 1) (* r r y00 y00 y00 q00)) (* (- 1) (* q r r y00 y00 y00 q00)) (* 2 (* r y00 y00 y00 y00 q00)) (* 2 (* q r y00 y00 y00 y00 q00)) ?x1876 (* (- 1) (* q y00 y00 y00 y00 y00 q00)) (* (- 2) (* r r y00 y00 y00)) (* (- 1) (* q r r y00 y00 y00)) (* q q r r y00 y00 y00) (* r y00 y00 y00 y00) (* (- 1) (* q r y00 y00 y00 y00)) (* (- 2) (* q q r y00 y00 y00 y00)) (* q y00 y00 y00 y00 y00) (* q q y00 y00 y00 y00 y00) (* 3 (* q r)) (* 3 (* q q r)) (* q q q r) (* r r r y00 y00) (* q r r r y00 y00) (* r y00 y00 r00) (* (- 1) (* q q r y00 y00 r00)) (* q y00 y00 y00 r00) (* q q y00 y00 y00 r00) (* (- 1) (* r r y00 r00)) (* (- 1) (* q r r y00 r00)) (* (- 1) (* r r y00 y00 r00)) (* (- 1) (* q r r y00 y00 r00)) (* 2 (* r y00 y00 y00 r00)) (* 2 (* q r y00 y00 y00 r00)) ?x1886 (* (- 1) (* q y00 y00 y00 y00 r00)) (* (- 3) (* q y00 q00)) (* (- 3) (* q q y00 q00)) (* (- 1) (* q q q y00 q00)))))
 (and (= (+ y (* (- 1) y00)) 0) (= (+ r ?x88 ?x39 ?x100) 0) (not (= ?x1891 0)))))))))))))))) :qid k!29))
 ))
 (let (($x1778 (exists ((q Int) (r Int) (y Int) )(! (let ((?x87 (* (- 1) y00)))
 (let ((?x1266 (+ r ?x87)))
 (let ((?x1309 (+ 1 q)))
 (let ((?x1565 (+ (* r00 ?x1266 ?x1266) (* q00 y00 ?x1266 ?x1266) (* (- 2) (* y00 y00 ?x1309 ?x1309 ?x1266 ?x1266)) (* (- 1) (* ?x1266 ?x1266 ?x1266)) (* (- 1) (* y00 ?x1309 ?x1266 ?x1266)) (* q00 y00 y00 y00 ?x1309 ?x1309 ?x1266) (* (- 1) (* y00 ?x1309 ?x1309 ?x1309 ?x1309)) (* (- 1) (* y00 ?x1309 ?x1266 ?x1266 ?x1266)) (* q00 y00 y00 ?x1309 ?x1266 ?x1266) (* r00 ?x1309 ?x1309 ?x1309) (* (- 1) (* y00 y00 y00 ?x1309 ?x1309 ?x1309 ?x1266)) (* q00 y00 y00 y00 ?x1309 ?x1266 ?x1266) (* (- 1) (* y00 y00 y00 ?x1309 ?x1309 ?x1266 ?x1266)) (* (- 1) (* ?x1309 ?x1309 ?x1309 ?x1266)) (* (- 1) (* y00 y00 ?x1309 ?x1266 ?x1266 ?x1266)) (* r00 y00 y00 ?x1309 ?x1309 ?x1266) (* r00 y00 ?x1309 ?x1266 ?x1266) (* r00 y00 y00 ?x1309 ?x1266 ?x1266) (* q00 y00 ?x1309 ?x1309 ?x1309))))
 (let (($x446 (not (= ?x1565 0))))
 (let (($x753 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x753 $x446))))))) :qid k!29))
 ))
 (let ((?x678 (lambda ((q Int) (r Int) (y Int) )(let ((?x1766 (* y00 y00 y00 y00 r00)))
 (let ((?x1886 (* (- 1) ?x1766)))
 (let ((?x1152 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1876 (* (- 1) ?x1152)))
 (let ((?x174 (* y00 y00 y00 q00)))
 (let ((?x1861 (* (- 1) ?x174)))
 (let ((?x123 (* y00 y00 r00)))
 (let ((?x1858 (* (- 1) ?x123)))
 (let ((?x89 (* y00 q00)))
 (let ((?x100 (* (- 1) ?x89)))
 (let ((?x39 (* q y00)))
 (let ((?x88 (* (- 1) r00)))
 (let ((?x1891 (+ r ?x88 ?x39 ?x100 (* (- 1) (* r r r00)) (* 2 (* r y00 r00)) ?x1858 (* (- 1) (* r r y00 q00)) (* 2 (* r y00 y00 q00)) ?x1861 (* (- 1) (* r r y00 y00)) (* q r r y00 y00) (* 2 (* q q r r y00 y00)) (* (- 2) (* q r y00 y00 y00)) (* (- 1) (* q q r y00 y00 y00)) (* (- 1) (* q q y00 y00 y00 y00)) (* r r r) (* (- 2) (* r r y00)) (* r y00 y00) (* q r r y00) (* (- 2) (* q r y00 y00)) (* q y00 y00 y00) (* r y00 y00 y00 q00) (* (- 1) (* q q r y00 y00 y00 q00)) (* q y00 y00 y00 y00 q00) (* q q y00 y00 y00 y00 q00) (* 3 (* q q y00)) (* 3 (* q q q y00)) (* q q q q y00) (* r r r y00) (* q r r r y00) (* (- 1) (* r r y00 y00 q00)) (* (- 1) (* q r r y00 y00 q00)) (* (- 3) (* q r00)) (* (- 3) (* q q r00)) (* (- 1) (* q q q r00)) (* q q q r y00 y00 y00) (* (- 1) (* q q q y00 y00 y00 y00)) (* (- 1) (* r r y00 y00 y00 q00)) (* (- 1) (* q r r y00 y00 y00 q00)) (* 2 (* r y00 y00 y00 y00 q00)) (* 2 (* q r y00 y00 y00 y00 q00)) ?x1876 (* (- 1) (* q y00 y00 y00 y00 y00 q00)) (* (- 2) (* r r y00 y00 y00)) (* (- 1) (* q r r y00 y00 y00)) (* q q r r y00 y00 y00) (* r y00 y00 y00 y00) (* (- 1) (* q r y00 y00 y00 y00)) (* (- 2) (* q q r y00 y00 y00 y00)) (* q y00 y00 y00 y00 y00) (* q q y00 y00 y00 y00 y00) (* 3 (* q r)) (* 3 (* q q r)) (* q q q r) (* r r r y00 y00) (* q r r r y00 y00) (* r y00 y00 r00) (* (- 1) (* q q r y00 y00 r00)) (* q y00 y00 y00 r00) (* q q y00 y00 y00 r00) (* (- 1) (* r r y00 r00)) (* (- 1) (* q r r y00 r00)) (* (- 1) (* r r y00 y00 r00)) (* (- 1) (* q r r y00 y00 r00)) (* 2 (* r y00 y00 y00 r00)) (* 2 (* q r y00 y00 y00 r00)) ?x1886 (* (- 1) (* q y00 y00 y00 y00 r00)) (* (- 3) (* q y00 q00)) (* (- 3) (* q q y00 q00)) (* (- 1) (* q q q y00 q00)))))
 (let (($x136 (and (= (+ y (* (- 1) y00)) 0) (= (+ r ?x88 ?x39 ?x100) 0) (not (= ?x1891 0)))))
 (let ((?x87 (* (- 1) y00)))
 (let ((?x1266 (+ r ?x87)))
 (let ((?x1309 (+ 1 q)))
 (let ((?x1565 (+ (* r00 ?x1266 ?x1266) (* q00 y00 ?x1266 ?x1266) (* (- 2) (* y00 y00 ?x1309 ?x1309 ?x1266 ?x1266)) (* (- 1) (* ?x1266 ?x1266 ?x1266)) (* (- 1) (* y00 ?x1309 ?x1266 ?x1266)) (* q00 y00 y00 y00 ?x1309 ?x1309 ?x1266) (* (- 1) (* y00 ?x1309 ?x1309 ?x1309 ?x1309)) (* (- 1) (* y00 ?x1309 ?x1266 ?x1266 ?x1266)) (* q00 y00 y00 ?x1309 ?x1266 ?x1266) (* r00 ?x1309 ?x1309 ?x1309) (* (- 1) (* y00 y00 y00 ?x1309 ?x1309 ?x1309 ?x1266)) (* q00 y00 y00 y00 ?x1309 ?x1266 ?x1266) (* (- 1) (* y00 y00 y00 ?x1309 ?x1309 ?x1266 ?x1266)) (* (- 1) (* ?x1309 ?x1309 ?x1309 ?x1266)) (* (- 1) (* y00 y00 ?x1309 ?x1266 ?x1266 ?x1266)) (* r00 y00 y00 ?x1309 ?x1309 ?x1266) (* r00 y00 ?x1309 ?x1266 ?x1266) (* r00 y00 y00 ?x1309 ?x1266 ?x1266) (* q00 y00 ?x1309 ?x1309 ?x1309))))
 (let (($x446 (not (= ?x1565 0))))
 (let (($x753 (= (+ r ?x88 (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1784 (and (= (+ y00 (* (- 1) y)) 0) $x753 $x446)))
 (rewrite (= $x1784 $x136))))))))))))))))))))))))
 ))
 (let (($x499 (exists ((q Int) (r Int) (y Int) )(! (let ((?x87 (* (- 1) y00)))
 (let ((?x1266 (+ r ?x87)))
 (let ((?x1309 (+ 1 q)))
 (let ((?x1565 (+ (* r00 ?x1266 ?x1266) (* q00 y00 ?x1266 ?x1266) (* (- 2) (* y00 y00 ?x1309 ?x1309 ?x1266 ?x1266)) (* (- 1) (* ?x1266 ?x1266 ?x1266)) (* (- 1) (* y00 ?x1309 ?x1266 ?x1266)) (* q00 y00 y00 y00 ?x1309 ?x1309 ?x1266) (* (- 1) (* y00 ?x1309 ?x1309 ?x1309 ?x1309)) (* (- 1) (* y00 ?x1309 ?x1266 ?x1266 ?x1266)) (* q00 y00 y00 ?x1309 ?x1266 ?x1266) (* r00 ?x1309 ?x1309 ?x1309) (* (- 1) (* y00 y00 y00 ?x1309 ?x1309 ?x1309 ?x1266)) (* q00 y00 y00 y00 ?x1309 ?x1266 ?x1266) (* (- 1) (* y00 y00 y00 ?x1309 ?x1309 ?x1266 ?x1266)) (* (- 1) (* ?x1309 ?x1309 ?x1309 ?x1266)) (* (- 1) (* y00 y00 ?x1309 ?x1266 ?x1266 ?x1266)) (* r00 y00 y00 ?x1309 ?x1309 ?x1266) (* r00 y00 ?x1309 ?x1266 ?x1266) (* r00 y00 y00 ?x1309 ?x1266 ?x1266) (* q00 y00 ?x1309 ?x1309 ?x1309))))
 (let (($x446 (not (= ?x1565 0))))
 (let (($x753 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x87 y) 0) $x753 $x446))))))) :qid k!29))
 ))
 (let ((?x1782 (lambda ((q Int) (r Int) (y Int) )(let ((?x87 (* (- 1) y00)))
 (let ((?x1266 (+ r ?x87)))
 (let ((?x1309 (+ 1 q)))
 (let ((?x1565 (+ (* r00 ?x1266 ?x1266) (* q00 y00 ?x1266 ?x1266) (* (- 2) (* y00 y00 ?x1309 ?x1309 ?x1266 ?x1266)) (* (- 1) (* ?x1266 ?x1266 ?x1266)) (* (- 1) (* y00 ?x1309 ?x1266 ?x1266)) (* q00 y00 y00 y00 ?x1309 ?x1309 ?x1266) (* (- 1) (* y00 ?x1309 ?x1309 ?x1309 ?x1309)) (* (- 1) (* y00 ?x1309 ?x1266 ?x1266 ?x1266)) (* q00 y00 y00 ?x1309 ?x1266 ?x1266) (* r00 ?x1309 ?x1309 ?x1309) (* (- 1) (* y00 y00 y00 ?x1309 ?x1309 ?x1309 ?x1266)) (* q00 y00 y00 y00 ?x1309 ?x1266 ?x1266) (* (- 1) (* y00 y00 y00 ?x1309 ?x1309 ?x1266 ?x1266)) (* (- 1) (* ?x1309 ?x1309 ?x1309 ?x1266)) (* (- 1) (* y00 y00 ?x1309 ?x1266 ?x1266 ?x1266)) (* r00 y00 y00 ?x1309 ?x1309 ?x1266) (* r00 y00 ?x1309 ?x1266 ?x1266) (* r00 y00 y00 ?x1309 ?x1266 ?x1266) (* q00 y00 ?x1309 ?x1309 ?x1309))))
 (let (($x446 (not (= ?x1565 0))))
 (let (($x753 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1784 (and (= (+ y00 (* (- 1) y)) 0) $x753 $x446)))
 (let (($x677 (and (= (+ ?x87 y) 0) $x753 $x446)))
 (rewrite (= $x677 $x1784)))))))))))
 ))
 (let (($x82 (exists ((q Int) (r Int) (y Int) )(! (let ((?x42 (- r y00)))
 (let ((?x46 (+ q 1)))
 (let ((?x47 (* ?x46 ?x46 ?x42 ?x42 y00 y00)))
 (let ((?x51 (- (- (+ (* ?x42 ?x42 r00) (* q00 ?x42 ?x42 y00)) ?x47) (* ?x42 ?x42 ?x42))))
 (let ((?x54 (+ (- ?x51 (* ?x46 ?x42 ?x42 y00)) (* ?x46 ?x46 q00 ?x42 y00 y00 y00))))
 (let ((?x59 (- (- (- ?x54 (* ?x46 ?x46 ?x46 ?x46 y00)) ?x47) (* ?x46 ?x42 ?x42 ?x42 y00))))
 (let ((?x62 (+ ?x59 (* ?x46 q00 ?x42 ?x42 y00 y00) (* ?x46 ?x46 ?x46 r00))))
 (let ((?x66 (+ (- ?x62 (* ?x46 ?x46 ?x46 ?x42 y00 y00 y00)) (* ?x46 q00 ?x42 ?x42 y00 y00 y00))))
 (let ((?x71 (- (- ?x66 (* ?x46 ?x46 ?x42 ?x42 y00 y00 y00)) (* ?x46 ?x46 ?x46 ?x42))))
 (let ((?x77 (+ (- ?x71 (* ?x46 ?x42 ?x42 ?x42 y00 y00)) (* ?x46 ?x46 ?x42 r00 y00 y00) (* ?x46 ?x42 ?x42 r00 y00) (* ?x46 ?x42 ?x42 r00 y00 y00) (* ?x46 ?x46 ?x46 q00 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x77 0)))))))))))))) :qid k!29))
 ))
 (let ((?x1294 (lambda ((q Int) (r Int) (y Int) )(let ((?x87 (* (- 1) y00)))
 (let ((?x1266 (+ r ?x87)))
 (let ((?x1309 (+ 1 q)))
 (let ((?x1565 (+ (* r00 ?x1266 ?x1266) (* q00 y00 ?x1266 ?x1266) (* (- 2) (* y00 y00 ?x1309 ?x1309 ?x1266 ?x1266)) (* (- 1) (* ?x1266 ?x1266 ?x1266)) (* (- 1) (* y00 ?x1309 ?x1266 ?x1266)) (* q00 y00 y00 y00 ?x1309 ?x1309 ?x1266) (* (- 1) (* y00 ?x1309 ?x1309 ?x1309 ?x1309)) (* (- 1) (* y00 ?x1309 ?x1266 ?x1266 ?x1266)) (* q00 y00 y00 ?x1309 ?x1266 ?x1266) (* r00 ?x1309 ?x1309 ?x1309) (* (- 1) (* y00 y00 y00 ?x1309 ?x1309 ?x1309 ?x1266)) (* q00 y00 y00 y00 ?x1309 ?x1266 ?x1266) (* (- 1) (* y00 y00 y00 ?x1309 ?x1309 ?x1266 ?x1266)) (* (- 1) (* ?x1309 ?x1309 ?x1309 ?x1266)) (* (- 1) (* y00 y00 ?x1309 ?x1266 ?x1266 ?x1266)) (* r00 y00 y00 ?x1309 ?x1309 ?x1266) (* r00 y00 ?x1309 ?x1266 ?x1266) (* r00 y00 y00 ?x1309 ?x1266 ?x1266) (* q00 y00 ?x1309 ?x1309 ?x1309))))
 (let (($x446 (not (= ?x1565 0))))
 (let (($x753 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x677 (and (= (+ ?x87 y) 0) $x753 $x446)))
 (let ((?x42 (- r y00)))
 (let ((?x46 (+ q 1)))
 (let ((?x47 (* ?x46 ?x46 ?x42 ?x42 y00 y00)))
 (let ((?x51 (- (- (+ (* ?x42 ?x42 r00) (* q00 ?x42 ?x42 y00)) ?x47) (* ?x42 ?x42 ?x42))))
 (let ((?x54 (+ (- ?x51 (* ?x46 ?x42 ?x42 y00)) (* ?x46 ?x46 q00 ?x42 y00 y00 y00))))
 (let ((?x59 (- (- (- ?x54 (* ?x46 ?x46 ?x46 ?x46 y00)) ?x47) (* ?x46 ?x42 ?x42 ?x42 y00))))
 (let ((?x62 (+ ?x59 (* ?x46 q00 ?x42 ?x42 y00 y00) (* ?x46 ?x46 ?x46 r00))))
 (let ((?x66 (+ (- ?x62 (* ?x46 ?x46 ?x46 ?x42 y00 y00 y00)) (* ?x46 q00 ?x42 ?x42 y00 y00 y00))))
 (let ((?x71 (- (- ?x66 (* ?x46 ?x46 ?x42 ?x42 y00 y00 y00)) (* ?x46 ?x46 ?x46 ?x42))))
 (let ((?x77 (+ (- ?x71 (* ?x46 ?x42 ?x42 ?x42 y00 y00)) (* ?x46 ?x46 ?x42 r00 y00 y00) (* ?x46 ?x42 ?x42 r00 y00) (* ?x46 ?x42 ?x42 r00 y00 y00) (* ?x46 ?x46 ?x46 q00 y00))))
 (let (($x81 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x77 0))))))
 (rewrite (= $x81 $x677)))))))))))))))))))))
 ))
 (let ((@x83 (asserted $x82)))
 (let ((@x1306 (mp (mp @x83 (quant-intro (proof-bind ?x1294) (= $x82 $x499)) $x499) (rewrite (= $x499 $x499)) $x499)))
 (let ((@x1528 (mp (mp @x1306 (quant-intro (proof-bind ?x1782) (= $x499 $x1778)) $x1778) (quant-intro (proof-bind ?x678) (= $x1778 $x1898)) $x1898)))
 (let ((@x1026 (mp (mp~ @x1528 (sk (~ $x1898 $x97)) $x97) (rewrite (= $x97 $x348)) $x348)))
 (let ((@x196 (and-elim @x1026 $x655)))
 (let ((@x186 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x655) $x197)) @x196 $x197)))
 (let (($x291 (>= ?x330 0)))
 (let ((@x1363 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x655) $x291)) @x196 $x291)))
 (let (($x194 (<= ?x607 0)))
 (let ((@x1028 (and-elim @x1026 $x189)))
 (let ((@x333 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x189) $x194)) @x1028 $x194)))
 (let (($x195 (>= ?x607 0)))
 (let ((@x1668 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x189) $x195)) @x1028 $x195)))
 (let (($x282 (not (<= ?x1001 0))))
 (let (($x292 (>= ?x1001 0)))
 (let ((@x1362 ((_ th-lemma arith) (hypothesis (not $x292)) @x1363 @x186 @x1668 @x333 @x1363 @x186 false)))
 (let ((@x1044 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1002 $x282 (not $x292))) (and-elim @x1026 $x562) (or $x282 (not $x292)))))
 ((_ th-lemma arith) (unit-resolution @x1044 (lemma @x1362 $x292) $x282) @x1363 @x186 @x1668 @x333 @x1363 @x186 false)))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        10
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-grobner             2
 :arith-max-min             594
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-pivots              3
 :arith-row-summations      1
 :arith-tableau-max-columns 85
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                3.89
 :memory                    3.31
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1375021
 :num-checks                1
 :propagations              6
 :rlimit-count              8523
 :time                      0.01
 :total-time                0.02)
