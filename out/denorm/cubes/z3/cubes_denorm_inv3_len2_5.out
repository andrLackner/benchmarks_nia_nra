unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x475 (* k!2 m!1 m!1 m!1)))
 (let ((?x472 (* c!3 m!1 m!1 m!1)))
 (let ((?x213 (* 2 (* k!2 k!2 m!1 m!1))))
 (let ((?x339 (* 6 (* k!2 m!1 m!1))))
 (let ((?x383 (+ k!2 c!3)))
 (let ((?x420 (+ k!2 m!1)))
 (let ((?x220 (+ 6 m!1)))
 (let ((?x242 (+ 1 n!0)))
 (let ((?x316 (* 6 (* k!2 k!2 k!2))))
 (let ((?x280 (* 12 (* k!2 k!2 m!1))))
 (let ((?x293 (* k!2 k!2 k!2 m!1)))
 (let ((?x439 (* 6 (* c!3 m!1 m!1))))
 (let ((?x153 (+ (* 6 (* k!2 k!2 c!3)) (* 12 (* k!2 c!3 m!1)) (* 2 (* k!2 c!3 m!1 m!1)) ?x439 ?x293 ?x280 ?x316 (* k!2 k!2 c!3 m!1) (* (- 1) (* ?x242 ?x242 ?x242 ?x220 ?x220 ?x420 ?x420 ?x420 ?x383 ?x383)) ?x339 ?x213 ?x472 ?x475)))
 (let (($x593 (<= ?x153 0)))
 (let ((?x492 (* (- 3) n!0)))
 (let ((?x240 (* (- 3) (* n!0 n!0))))
 (let ((?x482 (+ k!2 ?x240 ?x492)))
 (let (($x494 (<= ?x482 1)))
 (let (($x422 (= ?x482 1)))
 (let ((?x490 (* k!2 n!0)))
 (let ((?x158 (* (- 3) c!3)))
 (let ((?x164 (* 2 n!0)))
 (let ((?x159 (* (- 3) k!2)))
 (let ((?x261 (* ?x153 (+ 3 (* n!0 m!1) ?x159 ?x164 ?x158 ?x490))))
 (let (($x145 (= ?x261 0)))
 (let (($x108 (not $x145)))
 (let ((?x432 (* (- 1) ?x490)))
 (let ((?x292 (* 3 c!3)))
 (let ((?x480 (* (- 2) n!0)))
 (let ((?x140 (+ k!2 ?x480 ?x292 ?x432)))
 (let (($x369 (= ?x140 1)))
 (let ((?x285 (* (- 1) (* k!2 k!2))))
 (let ((?x272 (* 18 c!3)))
 (let ((?x283 (* (- 9) n!0)))
 (let ((?x274 (* 5 k!2)))
 (let ((?x231 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x273 (= ?x231 (- 6))))
 (let (($x138 (and $x273 (= (+ (* 9 (* n!0 c!3)) ?x274 ?x283 ?x272 ?x285) 4) $x369 $x422 $x108)))
 (let ((?x461 (+ c!3 k!2)))
 (let ((?x150 (+ (* (- 1) (* ?x242 ?x242 ?x242 ?x220 ?x220 ?x420 ?x420 ?x420 ?x461 ?x461)) (* c!3 k!2 k!2 m!1) ?x293 (* 2 (* c!3 k!2 m!1 m!1)) ?x213 ?x472 ?x475 (* 6 (* c!3 k!2 k!2)) ?x316 (* 12 (* c!3 k!2 m!1)) ?x280 ?x439 ?x339)))
 (let (($x112 (not (= (* ?x150 (+ 3 ?x158 ?x159 ?x164 ?x490 (* m!1 n!0))) 0))))
 (let (($x113 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x272 ?x274 ?x283 ?x285 (* 9 (* c!3 n!0))) 4) (= (+ ?x292 k!2 ?x480 ?x432) 1) (= (+ k!2 ?x492 ?x240) 1) $x112)))
 (let (($x478 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x217 (* (- 3) c)))
 (let ((?x405 (+ 3 ?x217 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x474 (* 6 (* k m m))))
 (let ((?x470 (* 6 (* c m m))))
 (let ((?x486 (* 12 (* k k m))))
 (let ((?x485 (* 12 (* c k m))))
 (let ((?x442 (* 6 (* k k k))))
 (let ((?x438 (* 6 (* c k k))))
 (let ((?x431 (* k m m m)))
 (let ((?x430 (* c m m m)))
 (let ((?x488 (* 2 (* k k m m))))
 (let ((?x487 (* 2 (* c k m m))))
 (let ((?x425 (* k k k m)))
 (let ((?x424 (* c k k m)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x335 (* (- 1) (* ?x337 ?x337 ?x337 ?x410 ?x410 ?x71 ?x71 ?x71 ?x68 ?x68))))
 (let ((?x281 (+ ?x335 ?x424 ?x425 ?x487 ?x488 ?x430 ?x431 ?x438 ?x442 ?x485 ?x486 ?x470 ?x474)))
 (let (($x294 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x256 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x204 (= (+ ?x40 ?x44 ?x206 ?x207 (* 9 (* c n))) 4)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (and $x120 $x204 $x256 $x294 (not (= (* ?x281 ?x405) 0)))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x268 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x217 (* (- 3) c)))
 (let ((?x405 (+ 3 ?x217 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x442 (* 6 (* k k k))))
 (let ((?x431 (* k m m m)))
 (let ((?x430 (* c m m m)))
 (let ((?x488 (* 2 (* k k m m))))
 (let ((?x487 (* 2 (* c k m m))))
 (let ((?x425 (* k k k m)))
 (let ((?x424 (* c k k m)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x335 (* (- 1) (* ?x337 ?x337 ?x337 ?x410 ?x410 ?x71 ?x71 ?x71 ?x68 ?x68))))
 (let ((?x309 (+ (* 6 (* k k c)) (* 6 (* m k c)) (* 6 (* k m c)) (* 6 (* m m c)) (* 6 (* k m k)) ?x335 (* 6 (* m k k)) (* 6 (* m m k)) ?x424 ?x425 ?x487 ?x488 ?x430 ?x431 ?x442)))
 (let (($x294 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x256 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x204 (= (+ ?x40 ?x44 ?x206 ?x207 (* 9 (* c n))) 4)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (and $x120 $x204 $x256 $x294 (not (= (* ?x309 ?x405) 0))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x267 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x217 (* (- 3) c)))
 (let ((?x405 (+ 3 ?x217 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x474 (* 6 (* k m m))))
 (let ((?x470 (* 6 (* c m m))))
 (let ((?x486 (* 12 (* k k m))))
 (let ((?x485 (* 12 (* c k m))))
 (let ((?x442 (* 6 (* k k k))))
 (let ((?x438 (* 6 (* c k k))))
 (let ((?x431 (* k m m m)))
 (let ((?x430 (* c m m m)))
 (let ((?x488 (* 2 (* k k m m))))
 (let ((?x487 (* 2 (* c k m m))))
 (let ((?x425 (* k k k m)))
 (let ((?x424 (* c k k m)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x335 (* (- 1) (* ?x337 ?x337 ?x337 ?x410 ?x410 ?x71 ?x71 ?x71 ?x68 ?x68))))
 (let ((?x281 (+ ?x335 ?x424 ?x425 ?x487 ?x488 ?x430 ?x431 ?x438 ?x442 ?x485 ?x486 ?x470 ?x474)))
 (let (($x294 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x256 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x204 (= (+ ?x40 ?x44 ?x206 ?x207 (* 9 (* c n))) 4)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (let (($x190 (and $x120 $x204 $x256 $x294 (not (= (* ?x281 ?x405) 0)))))
 (let ((?x309 (+ (* 6 (* k k c)) (* 6 (* m k c)) (* 6 (* k m c)) (* 6 (* m m c)) (* 6 (* k m k)) ?x335 (* 6 (* m k k)) (* 6 (* m m k)) ?x424 ?x425 ?x487 ?x488 ?x430 ?x431 ?x442)))
 (let (($x382 (and $x120 $x204 $x256 $x294 (not (= (* ?x309 ?x405) 0)))))
 (rewrite (= $x382 $x190)))))))))))))))))))))))))))))))))))))
 ))
 (let (($x391 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x217 (* (- 3) c)))
 (let ((?x115 (+ 3 ?x217 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x335 (* (- 1) (* ?x337 ?x337 ?x337 ?x410 ?x410 ?x71 ?x71 ?x71 ?x68 ?x68))))
 (let (($x214 (not (= (* (+ (* ?x410 ?x71 ?x71 ?x68) ?x335) ?x115) 0))))
 (let (($x291 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x187 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (and $x120 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x206 ?x207) 4) $x187 $x291 $x214)))))))))))))))))) :qid k!34))
 ))
 (let ((?x122 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x217 (* (- 3) c)))
 (let ((?x405 (+ 3 ?x217 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x442 (* 6 (* k k k))))
 (let ((?x431 (* k m m m)))
 (let ((?x430 (* c m m m)))
 (let ((?x488 (* 2 (* k k m m))))
 (let ((?x487 (* 2 (* c k m m))))
 (let ((?x425 (* k k k m)))
 (let ((?x424 (* c k k m)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x335 (* (- 1) (* ?x337 ?x337 ?x337 ?x410 ?x410 ?x71 ?x71 ?x71 ?x68 ?x68))))
 (let ((?x309 (+ (* 6 (* k k c)) (* 6 (* m k c)) (* 6 (* k m c)) (* 6 (* m m c)) (* 6 (* k m k)) ?x335 (* 6 (* m k k)) (* 6 (* m m k)) ?x424 ?x425 ?x487 ?x488 ?x430 ?x431 ?x442)))
 (let (($x294 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x256 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x204 (= (+ ?x40 ?x44 ?x206 ?x207 (* 9 (* c n))) 4)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (let (($x382 (and $x120 $x204 $x256 $x294 (not (= (* ?x309 ?x405) 0)))))
 (let ((?x353 (* (+ (* ?x410 ?x71 ?x71 ?x68) ?x335) (+ 3 ?x217 (* (- 4) k) (* ?x337 ?x71) (* (- 1) m) ?x59))))
 (let (($x214 (not (= ?x353 0))))
 (let (($x291 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x187 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x463 (and $x120 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x206 ?x207) 4) $x187 $x291 $x214)))
 (rewrite (= $x463 $x382)))))))))))))))))))))))))))))))))))
 ))
 (let (($x215 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x217 (* (- 3) c)))
 (let ((?x115 (+ 3 ?x217 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x335 (* (- 1) (* ?x337 ?x337 ?x337 ?x410 ?x410 ?x71 ?x71 ?x71 ?x68 ?x68))))
 (let (($x214 (not (= (* (+ (* ?x410 ?x71 ?x71 ?x68) ?x335) ?x115) 0))))
 (let (($x291 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x419 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (and $x120 (= ?x419 (- 4)) (= (+ ?x217 (* n k) (* (- 1) k) ?x59) (- 1)) $x291 $x214))))))))))))))) :qid k!34))
 ))
 (let ((?x399 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x217 (* (- 3) c)))
 (let ((?x115 (+ 3 ?x217 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x335 (* (- 1) (* ?x337 ?x337 ?x337 ?x410 ?x410 ?x71 ?x71 ?x71 ?x68 ?x68))))
 (let (($x214 (not (= (* (+ (* ?x410 ?x71 ?x71 ?x68) ?x335) ?x115) 0))))
 (let (($x291 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x187 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (let (($x463 (and $x120 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x206 ?x207) 4) $x187 $x291 $x214)))
 (let ((?x48 (* 9 n)))
 (let ((?x419 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x230 (and $x120 (= ?x419 (- 4)) (= (+ ?x217 (* n k) (* (- 1) k) ?x59) (- 1)) $x291 $x214)))
 (rewrite (= $x230 $x463))))))))))))))))))))))))
 ))
 (let (($x87 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x78 (+ m 6)))
 (let ((?x71 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x81 (- (* ?x68 ?x71 ?x71 ?x78) (* ?x68 ?x68 ?x71 ?x71 ?x71 ?x78 ?x78 ?x72 ?x72 ?x72))))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 ?x72)) ?x71) (* 2 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* ?x77 ?x81) 0))))))))))))))))) :qid k!34))
 ))
 (let ((?x219 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x217 (* (- 3) c)))
 (let ((?x115 (+ 3 ?x217 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x410 (+ 6 m)))
 (let ((?x337 (+ 1 n)))
 (let ((?x335 (* (- 1) (* ?x337 ?x337 ?x337 ?x410 ?x410 ?x71 ?x71 ?x71 ?x68 ?x68))))
 (let (($x214 (not (= (* (+ (* ?x410 ?x71 ?x71 ?x68) ?x335) ?x115) 0))))
 (let (($x291 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x419 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (let (($x230 (and $x120 (= ?x419 (- 4)) (= (+ ?x217 (* n k) (* (- 1) k) ?x59) (- 1)) $x291 $x214)))
 (let ((?x72 (+ n 1)))
 (let ((?x78 (+ m 6)))
 (let ((?x81 (- (* ?x68 ?x71 ?x71 ?x78) (* ?x68 ?x68 ?x71 ?x71 ?x71 ?x78 ?x78 ?x72 ?x72 ?x72))))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 ?x72)) ?x71) (* 2 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x86 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* ?x77 ?x81) 0))))))
 (rewrite (= $x86 $x230)))))))))))))))))))))))))))
 ))
 (let ((@x88 (asserted $x87)))
 (let ((@x209 (mp (mp @x88 (quant-intro (proof-bind ?x219) (= $x87 $x215)) $x215) (rewrite (= $x215 $x215)) $x215)))
 (let ((@x300 (mp (mp @x209 (quant-intro (proof-bind ?x399) (= $x215 $x391)) $x391) (quant-intro (proof-bind ?x122) (= $x391 $x268)) $x268)))
 (let ((@x589 (mp~ (mp @x300 (quant-intro (proof-bind ?x267) (= $x268 $x478)) $x478) (sk (~ $x478 $x113)) $x113)))
 (let ((@x456 (mp @x589 (rewrite (= $x113 $x138)) $x138)))
 (let ((@x493 (and-elim @x456 $x422)))
 (let ((@x443 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x422) $x494)) @x493 $x494)))
 (let (($x232 (>= ?x482 1)))
 (let ((@x118 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x422) $x232)) @x493 $x232)))
 (let (($x233 (<= ?x140 1)))
 (let ((@x251 (and-elim @x456 $x369)))
 (let ((@x346 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x369) $x233)) @x251 $x233)))
 (let (($x495 (>= ?x140 1)))
 (let ((@x445 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x369) $x495)) @x251 $x495)))
 (let (($x130 (<= ?x231 (- 6))))
 (let ((@x133 (and-elim @x456 $x273)))
 (let ((@x306 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x273) $x130)) @x133 $x130)))
 (let (($x435 (>= ?x231 (- 6))))
 (let ((@x311 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x273) $x435)) @x133 $x435)))
 (let ((@x351 (hypothesis (not $x593))))
 (let (($x2482 (not (>= ?x261 0))))
 (let (($x270 (<= ?x261 0)))
 (let (($x314 (not $x270)))
 (let ((@x340 (hypothesis $x314)))
 (let ((@x2115 (lemma ((_ th-lemma arith) @x340 @x351 @x311 @x306 @x445 @x346 @x118 @x443 false) (or $x593 $x270))))
 (let (($x592 (>= ?x153 0)))
 (let ((@x313 (hypothesis (not $x592))))
 (let ((@x2111 ((_ th-lemma arith) @x340 @x313 @x118 @x443 @x445 @x346 @x445 @x346 @x311 @x306 @x445 @x346 @x118 @x443 @x445 @x346 false)))
 (let ((@x2126 ((_ th-lemma arith farkas 1 1 1) @x340 (unit-resolution (lemma @x2111 (or $x592 $x270)) @x340 $x592) (unit-resolution @x2115 @x340 $x593) false)))
 (let ((@x2428 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x145 $x314 $x2482)) (and-elim @x456 $x108) (or $x314 $x2482))))
 (let ((@x2425 (unit-resolution @x2428 (lemma @x2126 $x270) $x2482)))
 (let ((@x2487 (lemma ((_ th-lemma arith) @x2425 @x351 @x311 @x306 @x445 @x346 @x118 @x443 false) $x593)))
 (let ((@x2484 (lemma ((_ th-lemma arith) @x2425 @x313 @x311 @x306 @x445 @x346 @x118 @x443 false) $x592)))
 ((_ th-lemma arith farkas 1 1 1) @x2425 @x2484 @x2487 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 277
 :arith-assert-diseq        49
 :arith-assert-lower        2380
 :arith-assert-upper        2147
 :arith-bound-prop          23
 :arith-branch-var          70
 :arith-conflicts           90
 :arith-eq-adapter          36
 :arith-fixed-eqs           358
 :arith-gcd-tests           985
 :arith-gomory-cuts         58
 :arith-grobner             135
 :arith-ineq-splits         70
 :arith-max-min             14108
 :arith-nonlinear-bounds    879
 :arith-nonlinear-horner    1823
 :arith-num-rows            26
 :arith-offset-eqs          25
 :arith-patches             149
 :arith-patches_succ        9
 :arith-pivots              3255
 :arith-pseudo-nonlinear    368
 :arith-row-summations      30345
 :arith-tableau-max-columns 73
 :arith-tableau-max-rows    26
 :conflicts                 105
 :decisions                 617
 :del-clause                248
 :final-checks              461
 :max-memory                5.91
 :memory                    3.35
 :minimized-lits            16
 :mk-bool-var               650
 :mk-clause                 491
 :num-allocs                16216555798.00
 :num-checks                1
 :propagations              739
 :restarts                  1
 :rlimit-count              6189376
 :time                      7.65
 :total-time                7.63)
