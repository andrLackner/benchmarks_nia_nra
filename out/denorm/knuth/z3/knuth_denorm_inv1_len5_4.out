unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun x!0 () Int)
(declare-fun q!3 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x1612 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 8) r!2) (* (- 1) (* d!1 d!1 q!3)) (* 2 (* d!1 q!3)) (* (- 4) (* d!1 x!0)) (* 4 (* d!1 r!2)))))
 (let (($x958 (>= ?x1612 0)))
 (let (($x1608 (= ?x1612 0)))
 (let ((?x1784 (* d!1 r!2)))
 (let ((?x542 (* (- 4) ?x1784)))
 (let ((?x1718 (* d!1 d!1 q!3)))
 (let ((?x461 (* 8 r!2)))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x1269 (+ ?x182 ?x230 ?x214 ?x280 ?x318 ?x461 ?x1718 (* (- 2) (* d!1 q!3)) (* 4 (* d!1 x!0)) ?x542)))
 (let ((?x1940 (* (- 4) (* q!3 r!2 r!2))))
 (let ((?x2116 (* r!2 x!0)))
 (let ((?x1354 (* 4 ?x2116)))
 (let ((?x2312 (* (- 1) (* q!3 q!3 r!2))))
 (let ((?x634 (* (- 4) (* r!2 r!2 r!2))))
 (let ((?x2204 (* (- 1) x!0)))
 (let ((?x2406 (* 2 r!2)))
 (let ((?x456 (+ 2 d!1 q!3 ?x2406 ?x2204)))
 (let ((?x2053 (+ 4 q!3)))
 (let ((?x1110 (+ 2 d!1)))
 (let ((?x1896 (* q!3 r!2)))
 (let ((?x525 (* (- 4) ?x1896)))
 (let ((?x1017 (* (- 2) (* q!3 q!3))))
 (let ((?x1752 (* r!2 r!2)))
 (let ((?x1844 (* (- 8) ?x1752)))
 (let ((?x2151 (* 4 (* r!2 r!2 x!0))))
 (let ((?x263 (* (- 1) (* r!2 x!0 x!0))))
 (let ((?x1355 (* d!1 d!1 r!2)))
 (let ((?x516 (* (- 1) ?x1355)))
 (let ((?x1793 (* (- 4) r!2)))
 (let ((?x2029 (* (- 16) q!3)))
 (let ((?x976 (* (- 16) d!1)))
 (let ((?x590 (* (- 1) (* d!1 q!3 q!3))))
 (let ((?x1743 (* 2 (* q!3 r!2 x!0))))
 (let ((?x1566 (+ (- 32) ?x1743 ?x590 ?x976 ?x2029 ?x1793 ?x516 (* (- 4) (* d!1 r!2 r!2)) (* 2 (* d!1 r!2 x!0)) ?x263 ?x2151 (* (- 8) (* d!1 q!3)) ?x1844 ?x542 (* (- 1) (* ?x1110 ?x1110 ?x2053 ?x2053 ?x2053 ?x456 ?x456 ?x456)) ?x1017 ?x525 (* (- 1) (* ?x2053 ?x2053 ?x2053 ?x456 ?x456)) (* (- 1) (* ?x1110 ?x2053 ?x2053 ?x456 ?x456 ?x456 r!2)) ?x634 ?x2312 ?x1354 (* (- 2) (* d!1 q!3 r!2)) ?x1940)))
 (let ((?x2331 (* ?x1566 ?x1269)))
 (let (($x440 (= ?x2331 0)))
 (let (($x2499 (not $x440)))
 (let ((?x2109 (* (- 8) ?x2116)))
 (let ((?x2120 (* 8 ?x1896)))
 (let ((?x1991 (* 16 ?x1752)))
 (let ((?x2261 (* (- 2) d!1)))
 (let ((?x1830 (+ (- 4) ?x2261 q!3 ?x2406 ?x2204)))
 (let ((?x2266 (+ (- 8) q!3)))
 (let ((?x1262 (* (- 16) r!2)))
 (let ((?x2122 (* 32 q!3)))
 (let ((?x537 (* (- 64) d!1)))
 (let ((?x1285 (+ (- 128) (* (- 1) (* ?x2266 ?x2266 ?x2266 ?x1110 ?x1110 ?x1830 ?x1830 ?x1830)) ?x1743 ?x590 ?x537 ?x2122 ?x1262 (* (- 1) (* ?x2266 ?x2266 ?x2266 ?x1830 ?x1830)) (* (- 1) (* ?x2266 ?x2266 ?x1110 ?x1830 ?x1830 ?x1830 r!2)) (* (- 4) ?x1355) (* 8 (* d!1 r!2 r!2)) (* (- 4) (* d!1 r!2 x!0)) ?x263 ?x2151 (* 16 (* d!1 q!3)) ?x1991 (* (- 16) ?x1784) ?x1017 ?x2120 ?x634 ?x2312 ?x2109 (* 4 (* d!1 q!3 r!2)) ?x1940)))
 (let ((?x1287 (* ?x1285 ?x1269)))
 (let (($x1554 (= ?x1287 0)))
 (let ((?x595 (* (- 4) ?x2116)))
 (let ((?x413 (* 4 ?x1896)))
 (let ((?x536 (* 8 ?x1752)))
 (let ((?x1580 (* (- 1) d!1)))
 (let ((?x1618 (+ (- 2) ?x1580 q!3 ?x2406 ?x2204)))
 (let ((?x797 (+ (- 4) q!3)))
 (let ((?x1780 (* 16 q!3)))
 (let ((?x412 (+ (- 32) (* (- 1) (* ?x797 ?x797 ?x797 ?x1110 ?x1110 ?x1618 ?x1618 ?x1618)) (* (- 1) (* ?x797 ?x797 ?x797 ?x1618 ?x1618)) ?x1743 ?x590 ?x976 ?x1780 ?x1793 (* (- 1) (* ?x797 ?x797 ?x1110 ?x1618 ?x1618 ?x1618 r!2)) ?x516 (* 4 (* d!1 r!2 r!2)) (* (- 2) (* d!1 r!2 x!0)) ?x263 ?x2151 (* 8 (* d!1 q!3)) ?x536 ?x542 ?x1017 ?x413 ?x634 ?x2312 ?x595 (* 2 (* d!1 q!3 r!2)) ?x1940)))
 (let ((?x386 (* ?x412 ?x1269)))
 (let (($x544 (= ?x386 0)))
 (let ((?x1015 (* 6 (* q!3 q!3 q!3 q!3 r!2 x!0))))
 (let ((?x459 (* 24 (* q!3 q!3 q!3 r!2 r!2 x!0))))
 (let ((?x1931 (* (- 24) (* q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x785 (* (- 6) (* q!3 q!3 q!3 r!2 x!0 x!0))))
 (let ((?x1939 (* (- 12) (* q!3 q!3 r!2 r!2 x!0 x!0))))
 (let ((?x1757 (* (- 4) (* q!3 q!3 q!3 r!2 r!2))))
 (let ((?x1839 (* (- 16) (* q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x2114 (* (- 12) (* q!3 q!3 q!3 q!3 r!2 r!2))))
 (let ((?x1919 (+ q!3 ?x2406 ?x2204)))
 (let ((?x646 (* (- 1) (* ?x1110 ?x1110 ?x1919 ?x1919 ?x1919 q!3 q!3 q!3))))
 (let ((?x2201 (* 4 (* q!3 q!3 q!3 r!2 x!0))))
 (let ((?x2262 (* (- 4) (* q!3 q!3 q!3 q!3 r!2))))
 (let ((?x1041 (* 2 (* q!3 q!3 q!3 q!3 x!0))))
 (let ((?x1771 (* (- 2) (* q!3 q!3 q!3 q!3 q!3 r!2))))
 (let ((?x535 (* (- 1) (* q!3 q!3 q!3 q!3 q!3))))
 (let ((?x1444 (* 24 (* q!3 q!3 r!2 r!2 r!2 x!0))))
 (let ((?x957 (* 2 (* q!3 q!3 r!2 x!0 x!0 x!0))))
 (let ((?x2118 (* (- 1) (* q!3 q!3 q!3 x!0 x!0))))
 (let ((?x178 (+ ?x2118 (* (- 3) (* d!1 q!3 q!3 q!3 r!2 x!0 x!0)) (* (- 6) (* d!1 q!3 q!3 q!3 q!3 r!2 r!2)) ?x957 ?x1743 ?x590 ?x1444 ?x535 (* (- 8) (* d!1 q!3 q!3 r!2 r!2 r!2 r!2)) (* d!1 q!3 q!3 r!2 x!0 x!0 x!0) (* (- 6) (* d!1 q!3 q!3 r!2 r!2 x!0 x!0)) ?x1771 ?x1041 ?x2262 ?x2201 ?x646 ?x2114 ?x263 (* 12 (* d!1 q!3 q!3 q!3 r!2 r!2 x!0)) ?x1839 (* 3 (* d!1 q!3 q!3 q!3 q!3 r!2 x!0)) (* (- 12) (* d!1 q!3 q!3 q!3 r!2 r!2 r!2)) (* (- 1) (* d!1 q!3 q!3 q!3 q!3 q!3 r!2)) ?x2151 ?x1757 ?x1939 ?x1017 ?x785 ?x634 ?x2312 (* 12 (* d!1 q!3 q!3 r!2 r!2 r!2 x!0)) ?x1940 ?x1931 ?x459 ?x1015)))
 (let ((?x1229 (* ?x178 ?x1269)))
 (let (($x2185 (= ?x1229 0)))
 (let (($x394 (not $x2185)))
 (let (($x313 (or $x394 (not $x544) (not $x1554) $x2499)))
 (let (($x1650 (and $x1608 $x313)))
 (let ((?x1946 (* r!2 d!1)))
 (let ((?x1039 (* (- 4) ?x1946)))
 (let ((?x385 (+ ?x461 ?x182 ?x230 ?x214 ?x280 ?x318 (* 4 (* x!0 d!1)) ?x1039 (* q!3 d!1 d!1) (* (- 2) (* q!3 d!1)))))
 (let ((?x2016 (* (- 1) (* q!3 q!3 d!1))))
 (let ((?x2202 (+ (* (- 6) (* q!3 q!3 r!2 r!2 x!0 x!0 d!1)) (* q!3 q!3 r!2 x!0 x!0 x!0 d!1) ?x1017 ?x1743 ?x1940 ?x2312 (* 12 (* q!3 q!3 r!2 r!2 r!2 x!0 d!1)) (* (- 3) (* q!3 q!3 q!3 r!2 x!0 x!0 d!1)) (* (- 6) (* q!3 q!3 q!3 q!3 r!2 r!2 d!1)) ?x646 (* 3 (* q!3 q!3 q!3 q!3 r!2 x!0 d!1)) (* (- 12) (* q!3 q!3 q!3 r!2 r!2 r!2 d!1)) (* 12 (* q!3 q!3 q!3 r!2 r!2 x!0 d!1)) ?x2114 ?x1015 ?x1931 ?x957 (* (- 1) (* q!3 q!3 q!3 q!3 q!3 r!2 d!1)) ?x1939 ?x1444 ?x1839 ?x785 ?x459 ?x2118 ?x2201 ?x1757 ?x1041 ?x2262 ?x535 (* (- 8) (* q!3 q!3 r!2 r!2 r!2 r!2 d!1)) ?x1771 ?x263 ?x634 ?x2016 ?x2151)))
 (let ((?x2269 (+ (- 4) q!3 ?x2406 ?x2204 ?x2261)))
 (let ((?x822 (+ (- 128) ?x2122 ?x1262 ?x2109 ?x2120 ?x1991 ?x1017 (* (- 4) (* r!2 x!0 d!1)) (* (- 1) (* ?x2266 ?x2266 ?x1110 ?x2269 ?x2269 ?x2269 r!2)) (* (- 1) (* ?x2266 ?x2266 ?x2266 ?x1110 ?x1110 ?x2269 ?x2269 ?x2269)) ?x1743 ?x1940 ?x2312 ?x537 (* (- 1) (* ?x2266 ?x2266 ?x2266 ?x2269 ?x2269)) (* (- 16) ?x1946) ?x263 (* 4 (* q!3 r!2 d!1)) ?x634 (* 16 (* q!3 d!1)) ?x2016 (* 8 (* r!2 r!2 d!1)) ?x2151 (* (- 4) (* r!2 d!1 d!1)))))
 (let ((?x820 (* r!2 d!1 d!1)))
 (let ((?x2537 (* (- 1) ?x820)))
 (let ((?x1943 (+ 2 q!3 ?x2406 ?x2204 d!1)))
 (let ((?x2083 (+ (- 32) ?x2029 ?x1793 ?x1354 ?x525 ?x1844 ?x1017 (* 2 (* r!2 x!0 d!1)) ?x1743 ?x1940 ?x2312 (* (- 1) (* ?x2053 ?x2053 ?x2053 ?x1943 ?x1943)) ?x976 (* (- 1) (* ?x1110 ?x2053 ?x2053 ?x1943 ?x1943 ?x1943 r!2)) (* (- 1) (* ?x1110 ?x1110 ?x2053 ?x2053 ?x2053 ?x1943 ?x1943 ?x1943)) ?x1039 ?x263 (* (- 2) (* q!3 r!2 d!1)) ?x634 (* (- 8) (* q!3 d!1)) ?x2016 (* (- 4) (* r!2 r!2 d!1)) ?x2151 ?x2537)))
 (let ((?x1364 (+ (- 2) q!3 ?x2406 ?x2204 ?x1580)))
 (let ((?x651 (+ (- 32) ?x1780 ?x1793 ?x595 ?x413 ?x536 (* (- 1) (* ?x797 ?x797 ?x1110 ?x1364 ?x1364 ?x1364 r!2)) ?x1017 (* (- 2) (* r!2 x!0 d!1)) ?x1743 ?x1940 ?x2312 (* (- 1) (* ?x797 ?x797 ?x797 ?x1364 ?x1364)) ?x976 (* (- 1) (* ?x797 ?x797 ?x797 ?x1110 ?x1110 ?x1364 ?x1364 ?x1364)) ?x1039 ?x263 (* 2 (* q!3 r!2 d!1)) ?x634 (* 8 (* q!3 d!1)) ?x2016 (* 4 (* r!2 r!2 d!1)) ?x2151 ?x2537)))
 (let (($x2402 (or (not (= (* ?x651 ?x385) 0)) (not (= (* ?x2083 ?x385) 0)) (not (= (* ?x822 ?x385) 0)) (not (= (* ?x2202 ?x385) 0)))))
 (let (($x1745 (and (= ?x385 0) $x2402)))
 (let (($x2121 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2461 (* q d)))
 (let ((?x2304 (* (- 2) ?x2461)))
 (let ((?x2303 (* q d d)))
 (let ((?x2298 (* r d)))
 (let ((?x2307 (* (- 4) ?x2298)))
 (let ((?x2264 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x274 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2264 ?x2307 ?x2303 ?x2304)))
 (let ((?x2511 (* 4 (* r r x))))
 (let ((?x2492 (* (- 1) (* q q d))))
 (let ((?x2520 (* (- 4) (* r r r))))
 (let ((?x2521 (* (- 1) (* r x x))))
 (let ((?x2334 (* (- 2) (* q q q q q r))))
 (let ((?x2144 (* (- 1) (* q q q q q))))
 (let ((?x2142 (* (- 4) (* q q q q r))))
 (let ((?x2139 (* 2 (* q q q q x))))
 (let ((?x2137 (* (- 4) (* q q q r r))))
 (let ((?x2108 (* 4 (* q q q r x))))
 (let ((?x2106 (* (- 1) (* q q q x x))))
 (let ((?x2096 (* 24 (* q q q r r x))))
 (let ((?x2094 (* (- 6) (* q q q r x x))))
 (let ((?x2092 (* (- 16) (* q q r r r r))))
 (let ((?x2089 (* 24 (* q q r r r x))))
 (let ((?x2087 (* (- 12) (* q q r r x x))))
 (let ((?x2099 (* 2 (* q q r x x x))))
 (let ((?x2077 (* (- 24) (* q q q r r r))))
 (let ((?x1788 (* 6 (* q q q q r x))))
 (let ((?x1786 (* (- 12) (* q q q q r r))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x2100 (+ q ?x144 ?x179)))
 (let ((?x2439 (+ 2 d)))
 (let ((?x868 (* q q r)))
 (let ((?x2507 (* (- 1) ?x868)))
 (let ((?x853 (* q r r)))
 (let ((?x2400 (* (- 4) ?x853)))
 (let ((?x846 (* q r x)))
 (let ((?x740 (* 2 ?x846)))
 (let ((?x667 (* q q)))
 (let ((?x2493 (* (- 2) ?x667)))
 (let ((?x2611 (+ (* (- 6) (* q q r r x x d)) (* q q r x x x d) ?x2493 ?x740 ?x2400 ?x2507 (* 12 (* q q r r r x d)) (* (- 3) (* q q q r x x d)) (* (- 6) (* q q q q r r d)) (* (- 1) (* ?x2439 ?x2439 ?x2100 ?x2100 ?x2100 q q q)) (* 3 (* q q q q r x d)) (* (- 12) (* q q q r r r d)) (* 12 (* q q q r r x d)) ?x1786 ?x1788 ?x2077 ?x2099 (* (- 1) (* q q q q q r d)) ?x2087 ?x2089 ?x2092 ?x2094 ?x2096 ?x2106 ?x2108 ?x2137 ?x2139 ?x2142 ?x2144 (* (- 8) (* q q r r r r d)) ?x2334 ?x2521 ?x2520 ?x2492 ?x2511)))
 (let (($x2689 (not (= (* ?x2611 ?x274) 0))))
 (let ((?x2515 (* r d d)))
 (let ((?x2549 (* (- 4) ?x2515)))
 (let ((?x2508 (* r r d)))
 (let ((?x2548 (* 8 ?x2508)))
 (let ((?x2559 (* 16 ?x2461)))
 (let ((?x2357 (* q r d)))
 (let ((?x2551 (* 4 ?x2357)))
 (let ((?x2554 (* (- 16) ?x2298)))
 (let ((?x2557 (* (- 2) d)))
 (let ((?x1879 (+ (- 4) q ?x144 ?x179 ?x2557)))
 (let ((?x2558 (+ (- 8) q)))
 (let ((?x2560 (* (- 64) d)))
 (let ((?x395 (* r r)))
 (let ((?x2553 (* 16 ?x395)))
 (let ((?x291 (* q r)))
 (let ((?x2249 (* 8 ?x291)))
 (let ((?x187 (* r x)))
 (let ((?x2552 (* (- 8) ?x187)))
 (let ((?x608 (* (- 16) r)))
 (let ((?x2561 (* 32 q)))
 (let ((?x1643 (+ (- 128) ?x2561 ?x608 ?x2552 ?x2249 ?x2553 ?x2493 (* (- 4) (* r x d)) (* (- 1) (* ?x2558 ?x2558 ?x2439 ?x1879 ?x1879 ?x1879 r)) (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x2439 ?x2439 ?x1879 ?x1879 ?x1879)) ?x740 ?x2400 ?x2507 ?x2560 (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x1879 ?x1879)) ?x2554 ?x2521 ?x2551 ?x2520 ?x2559 ?x2492 ?x2548 ?x2511 ?x2549)))
 (let ((?x2513 (* (- 1) ?x2515)))
 (let ((?x2506 (* (- 4) ?x2508)))
 (let ((?x2438 (* (- 8) ?x2461)))
 (let ((?x2361 (* (- 2) ?x2357)))
 (let ((?x2171 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2437 (+ 4 q)))
 (let ((?x2440 (* (- 16) d)))
 (let ((?x1730 (* (- 8) ?x395)))
 (let ((?x304 (* (- 4) ?x291)))
 (let ((?x189 (* 4 ?x187)))
 (let ((?x2446 (* (- 4) r)))
 (let ((?x570 (* (- 16) q)))
 (let ((?x1574 (+ (- 32) ?x570 ?x2446 ?x189 ?x304 ?x1730 ?x2493 (* 2 (* r x d)) ?x740 ?x2400 ?x2507 (* (- 1) (* ?x2437 ?x2437 ?x2437 ?x2171 ?x2171)) ?x2440 (* (- 1) (* ?x2439 ?x2437 ?x2437 ?x2171 ?x2171 ?x2171 r)) (* (- 1) (* ?x2439 ?x2439 ?x2437 ?x2437 ?x2437 ?x2171 ?x2171 ?x2171)) ?x2307 ?x2521 ?x2361 ?x2520 ?x2438 ?x2492 ?x2506 ?x2511 ?x2513)))
 (let ((?x2182 (* 4 ?x2508)))
 (let ((?x2172 (* 8 ?x2461)))
 (let ((?x2180 (* 2 ?x2357)))
 (let ((?x2174 (* (- 1) d)))
 (let ((?x873 (+ (- 2) q ?x144 ?x179 ?x2174)))
 (let ((?x2173 (+ (- 4) q)))
 (let ((?x2193 (* 8 ?x395)))
 (let ((?x292 (* 4 ?x291)))
 (let ((?x2179 (* (- 4) ?x187)))
 (let ((?x235 (* 16 q)))
 (let ((?x1684 (+ (- 32) ?x235 ?x2446 ?x2179 ?x292 ?x2193 (* (- 1) (* ?x2173 ?x2173 ?x2439 ?x873 ?x873 ?x873 r)) ?x2493 (* (- 2) (* r x d)) ?x740 ?x2400 ?x2507 (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x873 ?x873)) ?x2440 (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x2439 ?x2439 ?x873 ?x873 ?x873)) ?x2307 ?x2521 ?x2180 ?x2520 ?x2172 ?x2492 ?x2182 ?x2511 ?x2513)))
 (let (($x1763 (or (not (= (* ?x1684 ?x274) 0)) (not (= (* ?x1574 ?x274) 0)) (not (= (* ?x1643 ?x274) 0)) $x2689)))
 (let (($x999 (= ?x274 0)))
 (and $x999 $x1763))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x2618 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2461 (* q d)))
 (let ((?x2304 (* (- 2) ?x2461)))
 (let ((?x2303 (* q d d)))
 (let ((?x2298 (* r d)))
 (let ((?x2307 (* (- 4) ?x2298)))
 (let ((?x2264 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x274 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2264 ?x2307 ?x2303 ?x2304)))
 (let ((?x2511 (* 4 (* r r x))))
 (let ((?x2492 (* (- 1) (* q q d))))
 (let ((?x2520 (* (- 4) (* r r r))))
 (let ((?x2521 (* (- 1) (* r x x))))
 (let ((?x2334 (* (- 2) (* q q q q q r))))
 (let ((?x2144 (* (- 1) (* q q q q q))))
 (let ((?x2142 (* (- 4) (* q q q q r))))
 (let ((?x2139 (* 2 (* q q q q x))))
 (let ((?x2137 (* (- 4) (* q q q r r))))
 (let ((?x2108 (* 4 (* q q q r x))))
 (let ((?x2106 (* (- 1) (* q q q x x))))
 (let ((?x2096 (* 24 (* q q q r r x))))
 (let ((?x2094 (* (- 6) (* q q q r x x))))
 (let ((?x2092 (* (- 16) (* q q r r r r))))
 (let ((?x2089 (* 24 (* q q r r r x))))
 (let ((?x2087 (* (- 12) (* q q r r x x))))
 (let ((?x2099 (* 2 (* q q r x x x))))
 (let ((?x2077 (* (- 24) (* q q q r r r))))
 (let ((?x1788 (* 6 (* q q q q r x))))
 (let ((?x1786 (* (- 12) (* q q q q r r))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x2100 (+ q ?x144 ?x179)))
 (let ((?x2439 (+ 2 d)))
 (let ((?x868 (* q q r)))
 (let ((?x2507 (* (- 1) ?x868)))
 (let ((?x853 (* q r r)))
 (let ((?x2400 (* (- 4) ?x853)))
 (let ((?x846 (* q r x)))
 (let ((?x740 (* 2 ?x846)))
 (let ((?x667 (* q q)))
 (let ((?x2493 (* (- 2) ?x667)))
 (let ((?x2611 (+ (* (- 6) (* q q r r x x d)) (* q q r x x x d) ?x2493 ?x740 ?x2400 ?x2507 (* 12 (* q q r r r x d)) (* (- 3) (* q q q r x x d)) (* (- 6) (* q q q q r r d)) (* (- 1) (* ?x2439 ?x2439 ?x2100 ?x2100 ?x2100 q q q)) (* 3 (* q q q q r x d)) (* (- 12) (* q q q r r r d)) (* 12 (* q q q r r x d)) ?x1786 ?x1788 ?x2077 ?x2099 (* (- 1) (* q q q q q r d)) ?x2087 ?x2089 ?x2092 ?x2094 ?x2096 ?x2106 ?x2108 ?x2137 ?x2139 ?x2142 ?x2144 (* (- 8) (* q q r r r r d)) ?x2334 ?x2521 ?x2520 ?x2492 ?x2511)))
 (let (($x2689 (not (= (* ?x2611 ?x274) 0))))
 (let ((?x2224 (* 16 d)))
 (let ((?x2413 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x2264 ?x2224 ?x2307 ?x2303 ?x2304)))
 (let ((?x2515 (* r d d)))
 (let ((?x2549 (* (- 4) ?x2515)))
 (let ((?x2508 (* r r d)))
 (let ((?x2548 (* 8 ?x2508)))
 (let ((?x2559 (* 16 ?x2461)))
 (let ((?x2357 (* q r d)))
 (let ((?x2551 (* 4 ?x2357)))
 (let ((?x2554 (* (- 16) ?x2298)))
 (let ((?x2557 (* (- 2) d)))
 (let ((?x1879 (+ (- 4) q ?x144 ?x179 ?x2557)))
 (let ((?x2558 (+ (- 8) q)))
 (let ((?x2560 (* (- 64) d)))
 (let ((?x395 (* r r)))
 (let ((?x2553 (* 16 ?x395)))
 (let ((?x291 (* q r)))
 (let ((?x2249 (* 8 ?x291)))
 (let ((?x187 (* r x)))
 (let ((?x2552 (* (- 8) ?x187)))
 (let ((?x608 (* (- 16) r)))
 (let ((?x2561 (* 32 q)))
 (let ((?x1643 (+ (- 128) ?x2561 ?x608 ?x2552 ?x2249 ?x2553 ?x2493 (* (- 4) (* r x d)) (* (- 1) (* ?x2558 ?x2558 ?x2439 ?x1879 ?x1879 ?x1879 r)) (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x2439 ?x2439 ?x1879 ?x1879 ?x1879)) ?x740 ?x2400 ?x2507 ?x2560 (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x1879 ?x1879)) ?x2554 ?x2521 ?x2551 ?x2520 ?x2559 ?x2492 ?x2548 ?x2511 ?x2549)))
 (let ((?x2240 (* 2 (* d 4))))
 (let ((?x2309 (* (- 8) d)))
 (let ((?x2513 (* (- 1) ?x2515)))
 (let ((?x2506 (* (- 4) ?x2508)))
 (let ((?x2438 (* (- 8) ?x2461)))
 (let ((?x2361 (* (- 2) ?x2357)))
 (let ((?x2171 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2437 (+ 4 q)))
 (let ((?x2440 (* (- 16) d)))
 (let ((?x1730 (* (- 8) ?x395)))
 (let ((?x304 (* (- 4) ?x291)))
 (let ((?x189 (* 4 ?x187)))
 (let ((?x2446 (* (- 4) r)))
 (let ((?x570 (* (- 16) q)))
 (let ((?x1574 (+ (- 32) ?x570 ?x2446 ?x189 ?x304 ?x1730 ?x2493 (* 2 (* r x d)) ?x740 ?x2400 ?x2507 (* (- 1) (* ?x2437 ?x2437 ?x2437 ?x2171 ?x2171)) ?x2440 (* (- 1) (* ?x2439 ?x2437 ?x2437 ?x2171 ?x2171 ?x2171 r)) (* (- 1) (* ?x2439 ?x2439 ?x2437 ?x2437 ?x2437 ?x2171 ?x2171 ?x2171)) ?x2307 ?x2521 ?x2361 ?x2520 ?x2438 ?x2492 ?x2506 ?x2511 ?x2513)))
 (let ((?x1871 (* ?x1574 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2264 ?x2309 ?x2240 ?x2307 ?x2303 ?x2304))))
 (let ((?x2156 (* 8 d)))
 (let ((?x1040 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x2264 ?x2156 ?x2307 ?x2303 ?x2304)))
 (let ((?x2182 (* 4 ?x2508)))
 (let ((?x2172 (* 8 ?x2461)))
 (let ((?x2180 (* 2 ?x2357)))
 (let ((?x2174 (* (- 1) d)))
 (let ((?x873 (+ (- 2) q ?x144 ?x179 ?x2174)))
 (let ((?x2173 (+ (- 4) q)))
 (let ((?x2193 (* 8 ?x395)))
 (let ((?x292 (* 4 ?x291)))
 (let ((?x2179 (* (- 4) ?x187)))
 (let ((?x235 (* 16 q)))
 (let ((?x1684 (+ (- 32) ?x235 ?x2446 ?x2179 ?x292 ?x2193 (* (- 1) (* ?x2173 ?x2173 ?x2439 ?x873 ?x873 ?x873 r)) ?x2493 (* (- 2) (* r x d)) ?x740 ?x2400 ?x2507 (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x873 ?x873)) ?x2440 (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x2439 ?x2439 ?x873 ?x873 ?x873)) ?x2307 ?x2521 ?x2180 ?x2520 ?x2172 ?x2492 ?x2182 ?x2511 ?x2513)))
 (let (($x2631 (or (not (= (* ?x1684 ?x1040) 0)) (not (= ?x1871 0)) (not (= (* ?x1643 ?x2413) 0)) $x2689)))
 (let (($x999 (= ?x274 0)))
 (and $x999 $x2631)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1215 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2461 (* q d)))
 (let ((?x2304 (* (- 2) ?x2461)))
 (let ((?x2303 (* q d d)))
 (let ((?x2298 (* r d)))
 (let ((?x2307 (* (- 4) ?x2298)))
 (let ((?x2264 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x274 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2264 ?x2307 ?x2303 ?x2304)))
 (let ((?x2511 (* 4 (* r r x))))
 (let ((?x2492 (* (- 1) (* q q d))))
 (let ((?x2520 (* (- 4) (* r r r))))
 (let ((?x2521 (* (- 1) (* r x x))))
 (let ((?x2334 (* (- 2) (* q q q q q r))))
 (let ((?x2144 (* (- 1) (* q q q q q))))
 (let ((?x2142 (* (- 4) (* q q q q r))))
 (let ((?x2139 (* 2 (* q q q q x))))
 (let ((?x2137 (* (- 4) (* q q q r r))))
 (let ((?x2108 (* 4 (* q q q r x))))
 (let ((?x2106 (* (- 1) (* q q q x x))))
 (let ((?x2096 (* 24 (* q q q r r x))))
 (let ((?x2094 (* (- 6) (* q q q r x x))))
 (let ((?x2092 (* (- 16) (* q q r r r r))))
 (let ((?x2089 (* 24 (* q q r r r x))))
 (let ((?x2087 (* (- 12) (* q q r r x x))))
 (let ((?x2099 (* 2 (* q q r x x x))))
 (let ((?x2077 (* (- 24) (* q q q r r r))))
 (let ((?x1788 (* 6 (* q q q q r x))))
 (let ((?x1786 (* (- 12) (* q q q q r r))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x2100 (+ q ?x144 ?x179)))
 (let ((?x2439 (+ 2 d)))
 (let ((?x868 (* q q r)))
 (let ((?x2507 (* (- 1) ?x868)))
 (let ((?x853 (* q r r)))
 (let ((?x2400 (* (- 4) ?x853)))
 (let ((?x846 (* q r x)))
 (let ((?x740 (* 2 ?x846)))
 (let ((?x667 (* q q)))
 (let ((?x2493 (* (- 2) ?x667)))
 (let ((?x2611 (+ (* (- 6) (* q q r r x x d)) (* q q r x x x d) ?x2493 ?x740 ?x2400 ?x2507 (* 12 (* q q r r r x d)) (* (- 3) (* q q q r x x d)) (* (- 6) (* q q q q r r d)) (* (- 1) (* ?x2439 ?x2439 ?x2100 ?x2100 ?x2100 q q q)) (* 3 (* q q q q r x d)) (* (- 12) (* q q q r r r d)) (* 12 (* q q q r r x d)) ?x1786 ?x1788 ?x2077 ?x2099 (* (- 1) (* q q q q q r d)) ?x2087 ?x2089 ?x2092 ?x2094 ?x2096 ?x2106 ?x2108 ?x2137 ?x2139 ?x2142 ?x2144 (* (- 8) (* q q r r r r d)) ?x2334 ?x2521 ?x2520 ?x2492 ?x2511)))
 (let (($x2689 (not (= (* ?x2611 ?x274) 0))))
 (let ((?x2515 (* r d d)))
 (let ((?x2549 (* (- 4) ?x2515)))
 (let ((?x2508 (* r r d)))
 (let ((?x2548 (* 8 ?x2508)))
 (let ((?x2559 (* 16 ?x2461)))
 (let ((?x2357 (* q r d)))
 (let ((?x2551 (* 4 ?x2357)))
 (let ((?x2554 (* (- 16) ?x2298)))
 (let ((?x2557 (* (- 2) d)))
 (let ((?x1879 (+ (- 4) q ?x144 ?x179 ?x2557)))
 (let ((?x2558 (+ (- 8) q)))
 (let ((?x2560 (* (- 64) d)))
 (let ((?x395 (* r r)))
 (let ((?x2553 (* 16 ?x395)))
 (let ((?x291 (* q r)))
 (let ((?x2249 (* 8 ?x291)))
 (let ((?x187 (* r x)))
 (let ((?x2552 (* (- 8) ?x187)))
 (let ((?x608 (* (- 16) r)))
 (let ((?x2561 (* 32 q)))
 (let ((?x1643 (+ (- 128) ?x2561 ?x608 ?x2552 ?x2249 ?x2553 ?x2493 (* (- 4) (* r x d)) (* (- 1) (* ?x2558 ?x2558 ?x2439 ?x1879 ?x1879 ?x1879 r)) (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x2439 ?x2439 ?x1879 ?x1879 ?x1879)) ?x740 ?x2400 ?x2507 ?x2560 (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x1879 ?x1879)) ?x2554 ?x2521 ?x2551 ?x2520 ?x2559 ?x2492 ?x2548 ?x2511 ?x2549)))
 (let ((?x2513 (* (- 1) ?x2515)))
 (let ((?x2506 (* (- 4) ?x2508)))
 (let ((?x2438 (* (- 8) ?x2461)))
 (let ((?x2361 (* (- 2) ?x2357)))
 (let ((?x2171 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2437 (+ 4 q)))
 (let ((?x2440 (* (- 16) d)))
 (let ((?x1730 (* (- 8) ?x395)))
 (let ((?x304 (* (- 4) ?x291)))
 (let ((?x189 (* 4 ?x187)))
 (let ((?x2446 (* (- 4) r)))
 (let ((?x570 (* (- 16) q)))
 (let ((?x1574 (+ (- 32) ?x570 ?x2446 ?x189 ?x304 ?x1730 ?x2493 (* 2 (* r x d)) ?x740 ?x2400 ?x2507 (* (- 1) (* ?x2437 ?x2437 ?x2437 ?x2171 ?x2171)) ?x2440 (* (- 1) (* ?x2439 ?x2437 ?x2437 ?x2171 ?x2171 ?x2171 r)) (* (- 1) (* ?x2439 ?x2439 ?x2437 ?x2437 ?x2437 ?x2171 ?x2171 ?x2171)) ?x2307 ?x2521 ?x2361 ?x2520 ?x2438 ?x2492 ?x2506 ?x2511 ?x2513)))
 (let ((?x2182 (* 4 ?x2508)))
 (let ((?x2172 (* 8 ?x2461)))
 (let ((?x2180 (* 2 ?x2357)))
 (let ((?x2174 (* (- 1) d)))
 (let ((?x873 (+ (- 2) q ?x144 ?x179 ?x2174)))
 (let ((?x2173 (+ (- 4) q)))
 (let ((?x2193 (* 8 ?x395)))
 (let ((?x292 (* 4 ?x291)))
 (let ((?x2179 (* (- 4) ?x187)))
 (let ((?x235 (* 16 q)))
 (let ((?x1684 (+ (- 32) ?x235 ?x2446 ?x2179 ?x292 ?x2193 (* (- 1) (* ?x2173 ?x2173 ?x2439 ?x873 ?x873 ?x873 r)) ?x2493 (* (- 2) (* r x d)) ?x740 ?x2400 ?x2507 (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x873 ?x873)) ?x2440 (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x2439 ?x2439 ?x873 ?x873 ?x873)) ?x2307 ?x2521 ?x2180 ?x2520 ?x2172 ?x2492 ?x2182 ?x2511 ?x2513)))
 (let (($x1763 (or (not (= (* ?x1684 ?x274) 0)) (not (= (* ?x1574 ?x274) 0)) (not (= (* ?x1643 ?x274) 0)) $x2689)))
 (let (($x999 (= ?x274 0)))
 (let (($x306 (and $x999 $x1763)))
 (let ((?x2224 (* 16 d)))
 (let ((?x2413 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x2264 ?x2224 ?x2307 ?x2303 ?x2304)))
 (let ((?x2240 (* 2 (* d 4))))
 (let ((?x2309 (* (- 8) d)))
 (let ((?x1871 (* ?x1574 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2264 ?x2309 ?x2240 ?x2307 ?x2303 ?x2304))))
 (let ((?x2156 (* 8 d)))
 (let ((?x1040 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x2264 ?x2156 ?x2307 ?x2303 ?x2304)))
 (let (($x2631 (or (not (= (* ?x1684 ?x1040) 0)) (not (= ?x1871 0)) (not (= (* ?x1643 ?x2413) 0)) $x2689)))
 (let (($x2639 (and $x999 $x2631)))
 (rewrite (= $x2639 $x306)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1878 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1834 (* 4 (* d00 r00))))
 (let ((?x1875 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x2452 (* 4 (* (+ 2 d) r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x1762 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x1807 (+ ?x427 ?x1762 ?x30 ?x182 ?x2452 ?x214 ?x230 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x280 ?x1875 ?x1834)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x215 (+ ?x144 ?x179 q)))
 (let ((?x1396 (* (- 1) (* (+ 2 d) (+ 2 d) ?x215 ?x215 ?x215 q q q))))
 (let ((?x1035 (+ (* (- 1) (* (+ 2 d) ?x215 ?x215 ?x215 r q q)) ?x1396 (* (- 1) (* ?x215 ?x215 r)) (* (- 1) (* ?x215 ?x215 q q q)) (* (- 1) (* (+ 2 d) q q)))))
 (let (($x2019 (not (= (* ?x1035 ?x1807) 0))))
 (let ((?x2156 (* 8 d)))
 (let ((?x1673 (+ 16 ?x427 ?x1762 ?x30 ?x2156 ?x182 ?x2452 ?x214 ?x230 (* (+ 2 d) (+ 2 d) (+ 4 q)) (* (- 2) (* (+ 2 d) (+ 4 q))) ?x280 (* (- 4) (* (+ 2 d) (+ 2 ?x144 ?x179 q d))) ?x1834)))
 (let ((?x408 (+ 2 ?x144 ?x179 q d)))
 (let ((?x2437 (+ 4 q)))
 (let ((?x1517 (* (- 1) (* (+ 2 d) (+ 2 d) ?x2437 ?x2437 ?x2437 ?x408 ?x408 ?x408))))
 (let ((?x1683 (+ (* (- 1) (* (+ 2 d) ?x2437 ?x2437 ?x408 ?x408 ?x408 r)) ?x1517 (* (- 1) (* ?x408 ?x408 r)) (* (- 1) (* ?x2437 ?x2437 ?x2437 ?x408 ?x408)) (* (- 1) (* (+ 2 d) ?x2437 ?x2437)))))
 (let (($x1692 (not (= (* ?x1683 ?x1673) 0))))
 (let ((?x1458 (* (- 4) (* (+ 2 d) (+ (- 4) ?x144 ?x179 q (* (- 2) d))))))
 (let ((?x2440 (* (- 16) d)))
 (let ((?x1464 (+ (- 32) ?x427 ?x1762 ?x30 ?x2440 ?x182 ?x2452 ?x214 ?x230 (* (+ (- 8) q) (+ 2 d) (+ 2 d)) (* (- 2) (* (+ (- 8) q) (+ 2 d))) ?x280 ?x1458 ?x1834)))
 (let ((?x2557 (* (- 2) d)))
 (let ((?x2022 (+ (- 4) ?x144 ?x179 q ?x2557)))
 (let ((?x2558 (+ (- 8) q)))
 (let ((?x1945 (* (- 1) (* ?x2558 ?x2558 ?x2558 (+ 2 d) (+ 2 d) ?x2022 ?x2022 ?x2022))))
 (let ((?x1523 (+ (* (- 1) (* ?x2558 ?x2558 (+ 2 d) ?x2022 ?x2022 ?x2022 r)) ?x1945 (* (- 1) (* ?x2022 ?x2022 r)) (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x2022 ?x2022)) (* (- 1) (* ?x2558 ?x2558 (+ 2 d))))))
 (let (($x406 (not (= (* ?x1523 ?x1464) 0))))
 (let ((?x2450 (* (- 4) (* (+ 2 d) (+ (- 2) ?x144 ?x179 q (* (- 1) d))))))
 (let ((?x2309 (* (- 8) d)))
 (let ((?x2443 (+ (- 16) ?x427 ?x1762 ?x30 ?x2309 ?x182 ?x2452 ?x214 ?x230 (* (+ (- 4) q) (+ 2 d) (+ 2 d)) (* (- 2) (* (+ (- 4) q) (+ 2 d))) ?x280 ?x2450 ?x1834)))
 (let ((?x2174 (* (- 1) d)))
 (let ((?x2287 (+ (- 2) ?x144 ?x179 q ?x2174)))
 (let ((?x2173 (+ (- 4) q)))
 (let ((?x2291 (* (- 1) (* ?x2173 ?x2173 ?x2173 (+ 2 d) (+ 2 d) ?x2287 ?x2287 ?x2287))))
 (let ((?x2466 (+ (* (- 1) (* ?x2173 ?x2173 (+ 2 d) ?x2287 ?x2287 ?x2287 r)) ?x2291 (* (- 1) (* ?x2287 ?x2287 r)) (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x2287 ?x2287)) (* (- 1) (* ?x2173 ?x2173 (+ 2 d))))))
 (let (($x207 (not (= (* ?x2466 ?x2443) 0))))
 (let ((?x2264 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x2280 (+ ?x211 ?x182 ?x2264 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1834)))
 (let (($x2282 (= ?x2280 0)))
 (and $x2282 (or $x207 $x406 $x1692 $x2019))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x2628 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2461 (* q d)))
 (let ((?x2304 (* (- 2) ?x2461)))
 (let ((?x2303 (* q d d)))
 (let ((?x2298 (* r d)))
 (let ((?x2307 (* (- 4) ?x2298)))
 (let ((?x2264 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x274 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2264 ?x2307 ?x2303 ?x2304)))
 (let ((?x2511 (* 4 (* r r x))))
 (let ((?x2492 (* (- 1) (* q q d))))
 (let ((?x2520 (* (- 4) (* r r r))))
 (let ((?x2521 (* (- 1) (* r x x))))
 (let ((?x2334 (* (- 2) (* q q q q q r))))
 (let ((?x2144 (* (- 1) (* q q q q q))))
 (let ((?x2142 (* (- 4) (* q q q q r))))
 (let ((?x2139 (* 2 (* q q q q x))))
 (let ((?x2137 (* (- 4) (* q q q r r))))
 (let ((?x2108 (* 4 (* q q q r x))))
 (let ((?x2106 (* (- 1) (* q q q x x))))
 (let ((?x2096 (* 24 (* q q q r r x))))
 (let ((?x2094 (* (- 6) (* q q q r x x))))
 (let ((?x2092 (* (- 16) (* q q r r r r))))
 (let ((?x2089 (* 24 (* q q r r r x))))
 (let ((?x2087 (* (- 12) (* q q r r x x))))
 (let ((?x2099 (* 2 (* q q r x x x))))
 (let ((?x2077 (* (- 24) (* q q q r r r))))
 (let ((?x1788 (* 6 (* q q q q r x))))
 (let ((?x1786 (* (- 12) (* q q q q r r))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x2100 (+ q ?x144 ?x179)))
 (let ((?x2439 (+ 2 d)))
 (let ((?x868 (* q q r)))
 (let ((?x2507 (* (- 1) ?x868)))
 (let ((?x853 (* q r r)))
 (let ((?x2400 (* (- 4) ?x853)))
 (let ((?x846 (* q r x)))
 (let ((?x740 (* 2 ?x846)))
 (let ((?x667 (* q q)))
 (let ((?x2493 (* (- 2) ?x667)))
 (let ((?x2611 (+ (* (- 6) (* q q r r x x d)) (* q q r x x x d) ?x2493 ?x740 ?x2400 ?x2507 (* 12 (* q q r r r x d)) (* (- 3) (* q q q r x x d)) (* (- 6) (* q q q q r r d)) (* (- 1) (* ?x2439 ?x2439 ?x2100 ?x2100 ?x2100 q q q)) (* 3 (* q q q q r x d)) (* (- 12) (* q q q r r r d)) (* 12 (* q q q r r x d)) ?x1786 ?x1788 ?x2077 ?x2099 (* (- 1) (* q q q q q r d)) ?x2087 ?x2089 ?x2092 ?x2094 ?x2096 ?x2106 ?x2108 ?x2137 ?x2139 ?x2142 ?x2144 (* (- 8) (* q q r r r r d)) ?x2334 ?x2521 ?x2520 ?x2492 ?x2511)))
 (let (($x2689 (not (= (* ?x2611 ?x274) 0))))
 (let ((?x2224 (* 16 d)))
 (let ((?x2413 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x2264 ?x2224 ?x2307 ?x2303 ?x2304)))
 (let ((?x2515 (* r d d)))
 (let ((?x2549 (* (- 4) ?x2515)))
 (let ((?x2508 (* r r d)))
 (let ((?x2548 (* 8 ?x2508)))
 (let ((?x2559 (* 16 ?x2461)))
 (let ((?x2357 (* q r d)))
 (let ((?x2551 (* 4 ?x2357)))
 (let ((?x2554 (* (- 16) ?x2298)))
 (let ((?x2557 (* (- 2) d)))
 (let ((?x1879 (+ (- 4) q ?x144 ?x179 ?x2557)))
 (let ((?x2558 (+ (- 8) q)))
 (let ((?x2560 (* (- 64) d)))
 (let ((?x395 (* r r)))
 (let ((?x2553 (* 16 ?x395)))
 (let ((?x291 (* q r)))
 (let ((?x2249 (* 8 ?x291)))
 (let ((?x187 (* r x)))
 (let ((?x2552 (* (- 8) ?x187)))
 (let ((?x608 (* (- 16) r)))
 (let ((?x2561 (* 32 q)))
 (let ((?x1643 (+ (- 128) ?x2561 ?x608 ?x2552 ?x2249 ?x2553 ?x2493 (* (- 4) (* r x d)) (* (- 1) (* ?x2558 ?x2558 ?x2439 ?x1879 ?x1879 ?x1879 r)) (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x2439 ?x2439 ?x1879 ?x1879 ?x1879)) ?x740 ?x2400 ?x2507 ?x2560 (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x1879 ?x1879)) ?x2554 ?x2521 ?x2551 ?x2520 ?x2559 ?x2492 ?x2548 ?x2511 ?x2549)))
 (let ((?x2240 (* 2 (* d 4))))
 (let ((?x2309 (* (- 8) d)))
 (let ((?x2513 (* (- 1) ?x2515)))
 (let ((?x2506 (* (- 4) ?x2508)))
 (let ((?x2438 (* (- 8) ?x2461)))
 (let ((?x2361 (* (- 2) ?x2357)))
 (let ((?x2171 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2437 (+ 4 q)))
 (let ((?x2440 (* (- 16) d)))
 (let ((?x1730 (* (- 8) ?x395)))
 (let ((?x304 (* (- 4) ?x291)))
 (let ((?x189 (* 4 ?x187)))
 (let ((?x2446 (* (- 4) r)))
 (let ((?x570 (* (- 16) q)))
 (let ((?x1574 (+ (- 32) ?x570 ?x2446 ?x189 ?x304 ?x1730 ?x2493 (* 2 (* r x d)) ?x740 ?x2400 ?x2507 (* (- 1) (* ?x2437 ?x2437 ?x2437 ?x2171 ?x2171)) ?x2440 (* (- 1) (* ?x2439 ?x2437 ?x2437 ?x2171 ?x2171 ?x2171 r)) (* (- 1) (* ?x2439 ?x2439 ?x2437 ?x2437 ?x2437 ?x2171 ?x2171 ?x2171)) ?x2307 ?x2521 ?x2361 ?x2520 ?x2438 ?x2492 ?x2506 ?x2511 ?x2513)))
 (let ((?x1871 (* ?x1574 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x2264 ?x2309 ?x2240 ?x2307 ?x2303 ?x2304))))
 (let ((?x2156 (* 8 d)))
 (let ((?x1040 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x2264 ?x2156 ?x2307 ?x2303 ?x2304)))
 (let ((?x2182 (* 4 ?x2508)))
 (let ((?x2172 (* 8 ?x2461)))
 (let ((?x2180 (* 2 ?x2357)))
 (let ((?x2174 (* (- 1) d)))
 (let ((?x873 (+ (- 2) q ?x144 ?x179 ?x2174)))
 (let ((?x2173 (+ (- 4) q)))
 (let ((?x2193 (* 8 ?x395)))
 (let ((?x292 (* 4 ?x291)))
 (let ((?x2179 (* (- 4) ?x187)))
 (let ((?x235 (* 16 q)))
 (let ((?x1684 (+ (- 32) ?x235 ?x2446 ?x2179 ?x292 ?x2193 (* (- 1) (* ?x2173 ?x2173 ?x2439 ?x873 ?x873 ?x873 r)) ?x2493 (* (- 2) (* r x d)) ?x740 ?x2400 ?x2507 (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x873 ?x873)) ?x2440 (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x2439 ?x2439 ?x873 ?x873 ?x873)) ?x2307 ?x2521 ?x2180 ?x2520 ?x2172 ?x2492 ?x2182 ?x2511 ?x2513)))
 (let (($x2631 (or (not (= (* ?x1684 ?x1040) 0)) (not (= ?x1871 0)) (not (= (* ?x1643 ?x2413) 0)) $x2689)))
 (let (($x999 (= ?x274 0)))
 (let (($x2639 (and $x999 $x2631)))
 (let ((?x1834 (* 4 (* d00 r00))))
 (let ((?x2452 (* 4 (* ?x2439 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x1762 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x1807 (+ ?x427 ?x1762 ?x30 ?x182 ?x2452 ?x214 ?x230 (* ?x2439 ?x2439 q) (* (- 2) (* ?x2439 q)) ?x280 (* (- 4) (* ?x2439 (+ ?x144 ?x179 q))) ?x1834)))
 (let ((?x215 (+ ?x144 ?x179 q)))
 (let ((?x1035 (+ (* (- 1) (* ?x2439 ?x215 ?x215 ?x215 r q q)) (* (- 1) (* ?x2439 ?x2439 ?x215 ?x215 ?x215 q q q)) (* (- 1) (* ?x215 ?x215 r)) (* (- 1) (* ?x215 ?x215 q q q)) (* (- 1) (* ?x2439 q q)))))
 (let (($x2019 (not (= (* ?x1035 ?x1807) 0))))
 (let ((?x1673 (+ 16 ?x427 ?x1762 ?x30 ?x2156 ?x182 ?x2452 ?x214 ?x230 (* ?x2439 ?x2439 ?x2437) (* (- 2) (* ?x2439 ?x2437)) ?x280 (* (- 4) (* ?x2439 (+ 2 ?x144 ?x179 q d))) ?x1834)))
 (let ((?x408 (+ 2 ?x144 ?x179 q d)))
 (let ((?x1683 (+ (* (- 1) (* ?x2439 ?x2437 ?x2437 ?x408 ?x408 ?x408 r)) (* (- 1) (* ?x2439 ?x2439 ?x2437 ?x2437 ?x2437 ?x408 ?x408 ?x408)) (* (- 1) (* ?x408 ?x408 r)) (* (- 1) (* ?x2437 ?x2437 ?x2437 ?x408 ?x408)) (* (- 1) (* ?x2439 ?x2437 ?x2437)))))
 (let (($x1692 (not (= (* ?x1683 ?x1673) 0))))
 (let ((?x1464 (+ (- 32) ?x427 ?x1762 ?x30 ?x2440 ?x182 ?x2452 ?x214 ?x230 (* ?x2558 ?x2439 ?x2439) (* (- 2) (* ?x2558 ?x2439)) ?x280 (* (- 4) (* ?x2439 (+ (- 4) ?x144 ?x179 q ?x2557))) ?x1834)))
 (let ((?x2022 (+ (- 4) ?x144 ?x179 q ?x2557)))
 (let ((?x1523 (+ (* (- 1) (* ?x2558 ?x2558 ?x2439 ?x2022 ?x2022 ?x2022 r)) (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x2439 ?x2439 ?x2022 ?x2022 ?x2022)) (* (- 1) (* ?x2022 ?x2022 r)) (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x2022 ?x2022)) (* (- 1) (* ?x2558 ?x2558 ?x2439)))))
 (let (($x406 (not (= (* ?x1523 ?x1464) 0))))
 (let ((?x2443 (+ (- 16) ?x427 ?x1762 ?x30 ?x2309 ?x182 ?x2452 ?x214 ?x230 (* ?x2173 ?x2439 ?x2439) (* (- 2) (* ?x2173 ?x2439)) ?x280 (* (- 4) (* ?x2439 (+ (- 2) ?x144 ?x179 q ?x2174))) ?x1834)))
 (let ((?x2287 (+ (- 2) ?x144 ?x179 q ?x2174)))
 (let ((?x2466 (+ (* (- 1) (* ?x2173 ?x2173 ?x2439 ?x2287 ?x2287 ?x2287 r)) (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x2439 ?x2439 ?x2287 ?x2287 ?x2287)) (* (- 1) (* ?x2287 ?x2287 r)) (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x2287 ?x2287)) (* (- 1) (* ?x2173 ?x2173 ?x2439)))))
 (let (($x207 (not (= (* ?x2466 ?x2443) 0))))
 (let ((?x2280 (+ ?x211 ?x182 ?x2264 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1834)))
 (let (($x2282 (= ?x2280 0)))
 (let (($x586 (and $x2282 (or $x207 $x406 $x1692 $x2019))))
 (rewrite (= $x586 $x2639)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1703 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1834 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x408 (+ 2 ?x144 ?x179 q d)))
 (let ((?x2439 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x2452 (* 4 (* ?x2439 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x2156 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1762 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x1673 (+ 16 ?x427 ?x1762 ?x30 ?x2156 ?x182 ?x2452 ?x214 ?x230 (* ?x2439 ?x2439 (+ 4 q)) (* (- 2) (* ?x2439 (+ 4 q))) ?x280 (* (- 4) (* ?x2439 ?x408)) ?x1834)))
 (let ((?x1218 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) ?x408 ?x408))))
 (let ((?x2437 (+ 4 q)))
 (let ((?x1683 (+ (* (- 1) (* ?x2439 ?x2437 ?x2437 ?x408 ?x408 ?x408 r)) (* (- 1) (* ?x2439 ?x2439 ?x2437 ?x2437 ?x2437 ?x408 ?x408 ?x408)) (* (- 1) (* ?x408 ?x408 r)) ?x1218 (* (- 1) (* ?x2439 ?x2437 ?x2437)))))
 (let (($x1692 (not (= (* ?x1683 ?x1673) 0))))
 (let ((?x2440 (* (- 16) d)))
 (let ((?x1464 (+ (- 32) ?x427 ?x1762 ?x30 ?x2440 ?x182 ?x2452 ?x214 ?x230 (* (+ (- 8) q) ?x2439 ?x2439) (* (- 2) (* (+ (- 8) q) ?x2439)) ?x280 (* (- 4) (* ?x2439 (+ (- 4) ?x144 ?x179 q (* (- 2) d)))) ?x1834)))
 (let ((?x2557 (* (- 2) d)))
 (let ((?x2022 (+ (- 4) ?x144 ?x179 q ?x2557)))
 (let ((?x2558 (+ (- 8) q)))
 (let ((?x1523 (+ (* (- 1) (* ?x2558 ?x2558 ?x2439 ?x2022 ?x2022 ?x2022 r)) (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x2439 ?x2439 ?x2022 ?x2022 ?x2022)) (* (- 1) (* ?x2022 ?x2022 r)) (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x2022 ?x2022)) (* (- 1) (* ?x2558 ?x2558 ?x2439)))))
 (let (($x406 (not (= (* ?x1523 ?x1464) 0))))
 (let ((?x1807 (+ ?x427 ?x1762 ?x30 ?x182 ?x2452 ?x214 ?x230 (* ?x2439 ?x2439 q) (* (- 2) (* ?x2439 q)) ?x280 (* (- 4) (* ?x2439 (+ ?x144 ?x179 q))) ?x1834)))
 (let ((?x215 (+ ?x144 ?x179 q)))
 (let ((?x1035 (+ (* (- 1) (* ?x2439 ?x215 ?x215 ?x215 r q q)) (* (- 1) (* ?x2439 ?x2439 ?x215 ?x215 ?x215 q q q)) (* (- 1) (* ?x215 ?x215 r)) (* (- 1) (* ?x215 ?x215 q q q)) (* (- 1) (* ?x2439 q q)))))
 (let (($x2019 (not (= (* ?x1035 ?x1807) 0))))
 (let ((?x2309 (* (- 8) d)))
 (let ((?x2443 (+ (- 16) ?x427 ?x1762 ?x30 ?x2309 ?x182 ?x2452 ?x214 ?x230 (* (+ (- 4) q) ?x2439 ?x2439) (* (- 2) (* (+ (- 4) q) ?x2439)) ?x280 (* (- 4) (* ?x2439 (+ (- 2) ?x144 ?x179 q (* (- 1) d)))) ?x1834)))
 (let ((?x2174 (* (- 1) d)))
 (let ((?x2287 (+ (- 2) ?x144 ?x179 q ?x2174)))
 (let ((?x2173 (+ (- 4) q)))
 (let ((?x2466 (+ (* (- 1) (* ?x2173 ?x2173 ?x2439 ?x2287 ?x2287 ?x2287 r)) (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x2439 ?x2439 ?x2287 ?x2287 ?x2287)) (* (- 1) (* ?x2287 ?x2287 r)) (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x2287 ?x2287)) (* (- 1) (* ?x2173 ?x2173 ?x2439)))))
 (let (($x207 (not (= (* ?x2466 ?x2443) 0))))
 (let ((?x2264 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x2280 (+ ?x211 ?x182 ?x2264 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1834)))
 (let (($x2282 (= ?x2280 0)))
 (and $x2282 (or $x207 $x2019 $x406 $x1692)))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x584 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1834 (* 4 (* d00 r00))))
 (let ((?x1875 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x2452 (* 4 (* (+ 2 d) r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x1762 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x1807 (+ ?x427 ?x1762 ?x30 ?x182 ?x2452 ?x214 ?x230 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x280 ?x1875 ?x1834)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x215 (+ ?x144 ?x179 q)))
 (let ((?x1396 (* (- 1) (* (+ 2 d) (+ 2 d) ?x215 ?x215 ?x215 q q q))))
 (let ((?x1035 (+ (* (- 1) (* (+ 2 d) ?x215 ?x215 ?x215 r q q)) ?x1396 (* (- 1) (* ?x215 ?x215 r)) (* (- 1) (* ?x215 ?x215 q q q)) (* (- 1) (* (+ 2 d) q q)))))
 (let (($x2019 (not (= (* ?x1035 ?x1807) 0))))
 (let ((?x2156 (* 8 d)))
 (let ((?x1673 (+ 16 ?x427 ?x1762 ?x30 ?x2156 ?x182 ?x2452 ?x214 ?x230 (* (+ 2 d) (+ 2 d) (+ 4 q)) (* (- 2) (* (+ 2 d) (+ 4 q))) ?x280 (* (- 4) (* (+ 2 d) (+ 2 ?x144 ?x179 q d))) ?x1834)))
 (let ((?x408 (+ 2 ?x144 ?x179 q d)))
 (let ((?x2437 (+ 4 q)))
 (let ((?x1517 (* (- 1) (* (+ 2 d) (+ 2 d) ?x2437 ?x2437 ?x2437 ?x408 ?x408 ?x408))))
 (let ((?x1683 (+ (* (- 1) (* (+ 2 d) ?x2437 ?x2437 ?x408 ?x408 ?x408 r)) ?x1517 (* (- 1) (* ?x408 ?x408 r)) (* (- 1) (* ?x2437 ?x2437 ?x2437 ?x408 ?x408)) (* (- 1) (* (+ 2 d) ?x2437 ?x2437)))))
 (let (($x1692 (not (= (* ?x1683 ?x1673) 0))))
 (let ((?x1458 (* (- 4) (* (+ 2 d) (+ (- 4) ?x144 ?x179 q (* (- 2) d))))))
 (let ((?x2440 (* (- 16) d)))
 (let ((?x1464 (+ (- 32) ?x427 ?x1762 ?x30 ?x2440 ?x182 ?x2452 ?x214 ?x230 (* (+ (- 8) q) (+ 2 d) (+ 2 d)) (* (- 2) (* (+ (- 8) q) (+ 2 d))) ?x280 ?x1458 ?x1834)))
 (let ((?x2557 (* (- 2) d)))
 (let ((?x2022 (+ (- 4) ?x144 ?x179 q ?x2557)))
 (let ((?x2558 (+ (- 8) q)))
 (let ((?x1945 (* (- 1) (* ?x2558 ?x2558 ?x2558 (+ 2 d) (+ 2 d) ?x2022 ?x2022 ?x2022))))
 (let ((?x1523 (+ (* (- 1) (* ?x2558 ?x2558 (+ 2 d) ?x2022 ?x2022 ?x2022 r)) ?x1945 (* (- 1) (* ?x2022 ?x2022 r)) (* (- 1) (* ?x2558 ?x2558 ?x2558 ?x2022 ?x2022)) (* (- 1) (* ?x2558 ?x2558 (+ 2 d))))))
 (let (($x406 (not (= (* ?x1523 ?x1464) 0))))
 (let ((?x2450 (* (- 4) (* (+ 2 d) (+ (- 2) ?x144 ?x179 q (* (- 1) d))))))
 (let ((?x2309 (* (- 8) d)))
 (let ((?x2443 (+ (- 16) ?x427 ?x1762 ?x30 ?x2309 ?x182 ?x2452 ?x214 ?x230 (* (+ (- 4) q) (+ 2 d) (+ 2 d)) (* (- 2) (* (+ (- 4) q) (+ 2 d))) ?x280 ?x2450 ?x1834)))
 (let ((?x2174 (* (- 1) d)))
 (let ((?x2287 (+ (- 2) ?x144 ?x179 q ?x2174)))
 (let ((?x2173 (+ (- 4) q)))
 (let ((?x2291 (* (- 1) (* ?x2173 ?x2173 ?x2173 (+ 2 d) (+ 2 d) ?x2287 ?x2287 ?x2287))))
 (let ((?x2466 (+ (* (- 1) (* ?x2173 ?x2173 (+ 2 d) ?x2287 ?x2287 ?x2287 r)) ?x2291 (* (- 1) (* ?x2287 ?x2287 r)) (* (- 1) (* ?x2173 ?x2173 ?x2173 ?x2287 ?x2287)) (* (- 1) (* ?x2173 ?x2173 (+ 2 d))))))
 (let (($x207 (not (= (* ?x2466 ?x2443) 0))))
 (let ((?x2264 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x2280 (+ ?x211 ?x182 ?x2264 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1834)))
 (let (($x2282 (= ?x2280 0)))
 (let (($x586 (and $x2282 (or $x207 $x406 $x1692 $x2019))))
 (let (($x1702 (and $x2282 (or $x207 $x2019 $x406 $x1692))))
 (rewrite (= $x1702 $x586))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x175 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x146 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x166 (- (* (- 1) (+ d 2) ?x152 ?x152 ?x146 ?x146 ?x146 r) (* (+ d 2) (+ d 2) ?x152 ?x152 ?x152 ?x146 ?x146 ?x146))))
 (let ((?x169 (- (- (- ?x166 (* ?x146 ?x146 r)) (* ?x152 ?x152 ?x152 ?x146 ?x146)) (* (+ d 2) ?x152 ?x152))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x62 (+ d 2)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x154 (+ (- (- (+ (- (* 8 ?x146) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x152))))
 (let ((?x160 (+ (- (+ (- ?x154 (* 2 ?x62 ?x152)) ?x49) (* 4 ?x62 ?x146)) ?x53)))
 (let ((?x117 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x137 (- (* (- 1) ?x62 ?x123 ?x123 ?x117 ?x117 ?x117 r) (* ?x62 ?x62 ?x123 ?x123 ?x123 ?x117 ?x117 ?x117))))
 (let ((?x140 (- (- (- ?x137 (* ?x117 ?x117 r)) (* ?x123 ?x123 ?x123 ?x117 ?x117)) (* ?x62 ?x123 ?x123))))
 (let ((?x125 (+ (- (- (+ (- (* 8 ?x117) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x123))))
 (let ((?x131 (+ (- (+ (- ?x125 (* 2 ?x62 ?x123)) ?x49) (* 4 ?x62 ?x117)) ?x53)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x109 (- (* (- 1) ?x62 q q ?x90 ?x90 ?x90 r) (* ?x62 ?x62 q q q ?x90 ?x90 ?x90))))
 (let ((?x112 (- (- (- ?x109 (* ?x90 ?x90 r)) (* q q q ?x90 ?x90)) (* ?x62 q q))))
 (let ((?x97 (+ (- (- (+ (- (* 8 ?x90) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 q))))
 (let ((?x103 (+ (- (+ (- ?x97 (* 2 ?x62 q)) ?x49) (* 4 ?x62 ?x90)) ?x53)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x83 (- (* (- 1) ?x62 ?x67 ?x67 ?x59 ?x59 ?x59 r) (* ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59))))
 (let ((?x86 (- (- (- ?x83 (* ?x59 ?x59 r)) (* ?x67 ?x67 ?x67 ?x59 ?x59)) (* ?x62 ?x67 ?x67))))
 (let ((?x69 (+ (- (- (+ (- (* 8 ?x59) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x67))))
 (let ((?x75 (+ (- (+ (- ?x69 (* 2 ?x62 ?x67)) ?x49) (* 4 ?x62 ?x59)) ?x53)))
 (let (($x173 (or (not (= (* ?x75 ?x86) 0)) (not (= (* ?x103 ?x112) 0)) (not (= (* ?x131 ?x140) 0)) (not (= (* ?x160 ?x169) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x173)))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x562 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x1834 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1748 (+ 2 ?x57 ?x179 q d)))
 (let ((?x285 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x2064 (* 4 (* ?x285 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 d)))
 (let ((?x568 (* 8 q)))
 (let ((?x1762 (* (- 8) x)))
 (let ((?x235 (* 16 r)))
 (let ((?x1987 (+ 16 ?x235 ?x1762 ?x568 ?x211 ?x182 ?x2064 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 ?x1748)) ?x1834)))
 (let ((?x1893 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) ?x1748 ?x1748))))
 (let ((?x369 (+ 4 q)))
 (let ((?x2241 (+ (* (- 1) (* ?x285 ?x369 ?x369 ?x1748 ?x1748 ?x1748 r)) (* (- 1) (* ?x285 ?x285 ?x369 ?x369 ?x369 ?x1748 ?x1748 ?x1748)) (* (- 1) (* ?x1748 ?x1748 r)) ?x1893 (* (- 1) (* ?x285 ?x369 ?x369)))))
 (let ((?x608 (* (- 16) d)))
 (let ((?x1048 (+ (- 32) ?x235 ?x1762 ?x568 ?x608 ?x182 ?x2064 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 4) ?x57 ?x179 q (* (- 2) d)))) ?x1834)))
 (let ((?x2042 (* (- 2) d)))
 (let ((?x2467 (+ (- 4) ?x57 ?x179 q ?x2042)))
 (let ((?x1030 (+ (- 8) q)))
 (let ((?x633 (+ (* (- 1) (* ?x1030 ?x1030 ?x285 ?x2467 ?x2467 ?x2467 r)) (* (- 1) (* ?x1030 ?x1030 ?x1030 ?x285 ?x285 ?x2467 ?x2467 ?x2467)) (* (- 1) (* ?x2467 ?x2467 r)) (* (- 1) (* ?x1030 ?x1030 ?x1030 ?x2467 ?x2467)) (* (- 1) (* ?x1030 ?x1030 ?x285)))))
 (let ((?x2263 (+ ?x235 ?x1762 ?x568 ?x182 ?x2064 ?x214 ?x230 (* ?x285 ?x285 q) (* (- 2) (* ?x285 q)) ?x280 (* (- 4) (* ?x285 (+ ?x57 ?x179 q))) ?x1834)))
 (let ((?x594 (+ ?x57 ?x179 q)))
 (let ((?x829 (+ (* (- 1) (* ?x285 ?x594 ?x594 ?x594 r q q)) (* (- 1) (* ?x285 ?x285 ?x594 ?x594 ?x594 q q q)) (* (- 1) (* ?x594 ?x594 r)) (* (- 1) (* ?x594 ?x594 q q q)) (* (- 1) (* ?x285 q q)))))
 (let ((?x472 (* (- 8) d)))
 (let ((?x1389 (+ (- 16) ?x235 ?x1762 ?x568 ?x472 ?x182 ?x2064 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 2) ?x57 ?x179 q (* (- 1) d)))) ?x1834)))
 (let ((?x1217 (* (- 1) d)))
 (let ((?x731 (+ (- 2) ?x57 ?x179 q ?x1217)))
 (let ((?x340 (+ (- 4) q)))
 (let ((?x1461 (+ (* (- 1) (* ?x340 ?x340 ?x285 ?x731 ?x731 ?x731 r)) (* (- 1) (* ?x340 ?x340 ?x340 ?x285 ?x285 ?x731 ?x731 ?x731)) (* (- 1) (* ?x731 ?x731 r)) (* (- 1) (* ?x340 ?x340 ?x340 ?x731 ?x731)) (* (- 1) (* ?x340 ?x340 ?x285)))))
 (let (($x2279 (or (not (= (* ?x1461 ?x1389) 0)) (not (= (* ?x829 ?x2263) 0)) (not (= (* ?x633 ?x1048) 0)) (not (= (* ?x2241 ?x1987) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x656 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1834)))
 (and (= ?x656 0) $x2279))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x571 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x1834 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1748 (+ 2 ?x57 ?x179 q d)))
 (let ((?x285 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x2064 (* 4 (* ?x285 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 d)))
 (let ((?x568 (* 8 q)))
 (let ((?x1762 (* (- 8) x)))
 (let ((?x235 (* 16 r)))
 (let ((?x1987 (+ 16 ?x235 ?x1762 ?x568 ?x211 ?x182 ?x2064 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 ?x1748)) ?x1834)))
 (let ((?x1893 (* (- 1) (* (+ 4 q) (+ 4 q) (+ 4 q) ?x1748 ?x1748))))
 (let ((?x369 (+ 4 q)))
 (let ((?x2241 (+ (* (- 1) (* ?x285 ?x369 ?x369 ?x1748 ?x1748 ?x1748 r)) (* (- 1) (* ?x285 ?x285 ?x369 ?x369 ?x369 ?x1748 ?x1748 ?x1748)) (* (- 1) (* ?x1748 ?x1748 r)) ?x1893 (* (- 1) (* ?x285 ?x369 ?x369)))))
 (let ((?x608 (* (- 16) d)))
 (let ((?x1048 (+ (- 32) ?x235 ?x1762 ?x568 ?x608 ?x182 ?x2064 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 4) ?x57 ?x179 q (* (- 2) d)))) ?x1834)))
 (let ((?x2042 (* (- 2) d)))
 (let ((?x2467 (+ (- 4) ?x57 ?x179 q ?x2042)))
 (let ((?x1030 (+ (- 8) q)))
 (let ((?x633 (+ (* (- 1) (* ?x1030 ?x1030 ?x285 ?x2467 ?x2467 ?x2467 r)) (* (- 1) (* ?x1030 ?x1030 ?x1030 ?x285 ?x285 ?x2467 ?x2467 ?x2467)) (* (- 1) (* ?x2467 ?x2467 r)) (* (- 1) (* ?x1030 ?x1030 ?x1030 ?x2467 ?x2467)) (* (- 1) (* ?x1030 ?x1030 ?x285)))))
 (let ((?x2263 (+ ?x235 ?x1762 ?x568 ?x182 ?x2064 ?x214 ?x230 (* ?x285 ?x285 q) (* (- 2) (* ?x285 q)) ?x280 (* (- 4) (* ?x285 (+ ?x57 ?x179 q))) ?x1834)))
 (let ((?x594 (+ ?x57 ?x179 q)))
 (let ((?x829 (+ (* (- 1) (* ?x285 ?x594 ?x594 ?x594 r q q)) (* (- 1) (* ?x285 ?x285 ?x594 ?x594 ?x594 q q q)) (* (- 1) (* ?x594 ?x594 r)) (* (- 1) (* ?x594 ?x594 q q q)) (* (- 1) (* ?x285 q q)))))
 (let ((?x472 (* (- 8) d)))
 (let ((?x1389 (+ (- 16) ?x235 ?x1762 ?x568 ?x472 ?x182 ?x2064 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 2) ?x57 ?x179 q (* (- 1) d)))) ?x1834)))
 (let ((?x1217 (* (- 1) d)))
 (let ((?x731 (+ (- 2) ?x57 ?x179 q ?x1217)))
 (let ((?x340 (+ (- 4) q)))
 (let ((?x1461 (+ (* (- 1) (* ?x340 ?x340 ?x285 ?x731 ?x731 ?x731 r)) (* (- 1) (* ?x340 ?x340 ?x340 ?x285 ?x285 ?x731 ?x731 ?x731)) (* (- 1) (* ?x731 ?x731 r)) (* (- 1) (* ?x340 ?x340 ?x340 ?x731 ?x731)) (* (- 1) (* ?x340 ?x340 ?x285)))))
 (let (($x2279 (or (not (= (* ?x1461 ?x1389) 0)) (not (= (* ?x829 ?x2263) 0)) (not (= (* ?x633 ?x1048) 0)) (not (= (* ?x2241 ?x1987) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x656 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1834)))
 (let (($x2231 (and (= ?x656 0) $x2279)))
 (let ((?x146 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x166 (- (* (- 1) (+ d 2) ?x152 ?x152 ?x146 ?x146 ?x146 r) (* (+ d 2) (+ d 2) ?x152 ?x152 ?x152 ?x146 ?x146 ?x146))))
 (let ((?x169 (- (- (- ?x166 (* ?x146 ?x146 r)) (* ?x152 ?x152 ?x152 ?x146 ?x146)) (* (+ d 2) ?x152 ?x152))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x62 (+ d 2)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x154 (+ (- (- (+ (- (* 8 ?x146) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x152))))
 (let ((?x160 (+ (- (+ (- ?x154 (* 2 ?x62 ?x152)) ?x49) (* 4 ?x62 ?x146)) ?x53)))
 (let ((?x117 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x137 (- (* (- 1) ?x62 ?x123 ?x123 ?x117 ?x117 ?x117 r) (* ?x62 ?x62 ?x123 ?x123 ?x123 ?x117 ?x117 ?x117))))
 (let ((?x140 (- (- (- ?x137 (* ?x117 ?x117 r)) (* ?x123 ?x123 ?x123 ?x117 ?x117)) (* ?x62 ?x123 ?x123))))
 (let ((?x125 (+ (- (- (+ (- (* 8 ?x117) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x123))))
 (let ((?x131 (+ (- (+ (- ?x125 (* 2 ?x62 ?x123)) ?x49) (* 4 ?x62 ?x117)) ?x53)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x109 (- (* (- 1) ?x62 q q ?x90 ?x90 ?x90 r) (* ?x62 ?x62 q q q ?x90 ?x90 ?x90))))
 (let ((?x112 (- (- (- ?x109 (* ?x90 ?x90 r)) (* q q q ?x90 ?x90)) (* ?x62 q q))))
 (let ((?x97 (+ (- (- (+ (- (* 8 ?x90) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 q))))
 (let ((?x103 (+ (- (+ (- ?x97 (* 2 ?x62 q)) ?x49) (* 4 ?x62 ?x90)) ?x53)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x83 (- (* (- 1) ?x62 ?x67 ?x67 ?x59 ?x59 ?x59 r) (* ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59))))
 (let ((?x86 (- (- (- ?x83 (* ?x59 ?x59 r)) (* ?x67 ?x67 ?x67 ?x59 ?x59)) (* ?x62 ?x67 ?x67))))
 (let ((?x69 (+ (- (- (+ (- (* 8 ?x59) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x67))))
 (let ((?x75 (+ (- (+ (- ?x69 (* 2 ?x62 ?x67)) ?x49) (* 4 ?x62 ?x59)) ?x53)))
 (let (($x173 (or (not (= (* ?x75 ?x86) 0)) (not (= (* ?x103 ?x112) 0)) (not (= (* ?x131 ?x140) 0)) (not (= (* ?x160 ?x169) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x174 (and (= ?x54 0) $x173)))
 (rewrite (= $x174 $x2231)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1050 (trans (quant-intro (proof-bind ?x571) (= $x175 $x562)) (elim-unused (= $x562 $x1703)) (= $x175 $x1703))))
 (let ((@x27 (asserted $x175)))
 (let ((@x572 (mp (mp @x27 @x1050 $x1703) (quant-intro (proof-bind ?x584) (= $x1703 $x1878)) $x1878)))
 (let ((@x1851 (mp (mp @x572 (rewrite (= $x1878 $x1878)) $x1878) (quant-intro (proof-bind ?x2628) (= $x1878 $x2618)) $x2618)))
 (let ((@x1751 (mp~ (mp @x1851 (quant-intro (proof-bind ?x1215) (= $x2618 $x2121)) $x2121) (sk (~ $x2121 $x1745)) $x1745)))
 (let ((@x1563 (mp @x1751 (rewrite (= $x1745 $x1650)) $x1650)))
 (let ((@x2195 (and-elim @x1563 $x1608)))
 (let ((@x2348 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1608) $x958)) @x2195 $x958)))
 (let (($x1578 (<= ?x1612 0)))
 (let ((@x959 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1608) $x1578)) @x2195 $x1578)))
 (let (($x591 (not (<= ?x2331 0))))
 (let (($x1707 (<= ?x1229 0)))
 (let (($x964 (>= ?x1229 0)))
 (let ((@x533 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2185 (not $x1707) (not $x964))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x964)) @x959 @x2348 false) $x964) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1707)) @x959 @x2348 false) $x1707) $x2185)))
 (let (($x1575 (>= ?x1287 0)))
 (let (($x2375 (<= ?x1287 0)))
 (let ((@x1737 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1554 (not $x2375) (not $x1575))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2375)) @x959 @x2348 false) $x2375) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1575)) @x959 @x2348 false) $x1575) $x1554)))
 (let (($x2337 (>= ?x386 0)))
 (let (($x2335 (<= ?x386 0)))
 (let ((@x1581 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x544 (not $x2335) (not $x2337))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2335)) @x959 @x2348 false) $x2335) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2337)) @x959 @x2348 false) $x2337) $x544)))
 (let ((@x1562 (unit-resolution (unit-resolution (and-elim @x1563 $x313) @x1581 @x1737 (or $x394 $x2499)) @x533 $x2499)))
 (let (($x978 (>= ?x2331 0)))
 (let ((@x538 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x440 $x591 (not $x978))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x978)) @x959 @x2348 false) $x978) @x1562 $x591)))
 ((_ th-lemma arith farkas 1 1 1) @x538 @x959 @x2348 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        66
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1312
 :arith-nonlinear-bounds    28
 :arith-num-rows            14
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 106
 :arith-tableau-max-rows    14
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                3.99
 :memory                    3.38
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1755971
 :num-checks                1
 :propagations              36
 :rlimit-count              14190
 :time                      0.01
 :total-time                0.02)
