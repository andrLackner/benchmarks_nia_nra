unsat
((set-logic NIA)
(declare-fun q!2 () Int)
(declare-fun r!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x71 (* y00 q00)))
 (let ((?x1381 (+ r00 ?x71 (* (- 1) r!1) (* (- 1) (* y00 q!2)))))
 (let (($x1296 (<= ?x1381 0)))
 (let (($x1382 (= ?x1381 0)))
 (let ((?x1540 (+ (* 6 (* y00 y00 y00 r00 q!2 q!2 r!1)) (* 3 (* y00 y00 y00 y00 y00 q!2 q!2)) (* 2 (* y00 y00 y00 r00 q!2 q!2 q!2 r!1)) (* (- 3) (* y00 y00 y00 y00 q!2 q!2 r!1)) (* 6 (* y00 y00 y00 y00 q00 q!2 q!2 r!1)) (* (- 1) (* y00 y00 r00 r!1 r!1)) (* y00 y00 y00 y00 q00 r!1) (* y00 y00 r!1 r!1 r!1) (* 3 (* y00 y00 q!2 r!1 r!1 r!1)) (* 3 (* y00 y00 q!2 q!2 r!1 r!1 r!1)) (* y00 y00 q!2 q!2 q!2 r!1 r!1 r!1) (* (- 1) (* y00 y00 y00 r!1 r!1)) (* (- 5) (* y00 y00 y00 q!2 r!1 r!1)) (* (- 3) (* y00 y00 y00 q!2 q!2 r!1 r!1)) (* (- 3) (* y00 y00 y00 y00 r00 q!2)) (* (- 3) (* y00 y00 y00 y00 r00 q!2 q!2)) (* y00 y00 y00 q!2 q!2 q!2 r!1 r!1) (* (- 1) (* y00 y00 y00 y00 r00 q!2 q!2 q!2)) (* 2 (* y00 y00 y00 y00 q!2 r!1)) (* (- 5) (* y00 y00 y00 y00 q!2 q!2 q!2 r!1)) (* 3 (* y00 y00 y00 y00 y00 q!2 q!2 q!2)) (* y00 y00 y00 r00 r!1) (* (- 3) (* y00 y00 r00 q!2 r!1 r!1)) (* (- 3) (* y00 y00 r00 q!2 q!2 r!1 r!1)) (* (- 1) (* y00 y00 y00 q00 r!1 r!1)) (* (- 3) (* y00 y00 y00 q00 q!2 r!1 r!1)) (* (- 3) (* y00 y00 y00 q00 q!2 q!2 r!1 r!1)) (* (- 1) (* y00 y00 y00 q00 q!2 q!2 q!2 r!1 r!1)) (* 6 (* y00 y00 y00 y00 q00 q!2 r!1)) (* 6 (* y00 y00 y00 r00 q!2 r!1)) (* 2 (* y00 y00 y00 y00 q00 q!2 q!2 q!2 r!1)) (* (- 3) (* y00 y00 y00 y00 y00 q00 q!2)) (* (- 3) (* y00 y00 y00 y00 y00 q00 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 q00 q!2 q!2 q!2)) (* y00 y00 y00 q!2 q!2 q!2 q!2 r!1 r!1) (* (- 1) (* y00 y00 r00 q!2 q!2 q!2 r!1 r!1)) (* (- 2) (* y00 y00 y00 y00 q!2 q!2 q!2 q!2 r!1)) (* y00 y00 y00 y00 y00 q!2 q!2 q!2 q!2))))
 (let (($x1536 (= ?x1540 0)))
 (let (($x1542 (not $x1536)))
 (let ((?x1250 (+ y00 (* (- 1) y!0))))
 (let (($x1363 (= ?x1250 0)))
 (let (($x1299 (and $x1363 $x1382 $x1542)))
 (let ((?x224 (+ (* r!1 r!1 y00 y00 r00) (* (- 1) (* r!1 y00 y00 y00 y00 q00)) (* (- 1) (* r!1 r!1 r!1 y00 y00)) (* (- 3) (* q!2 r!1 r!1 r!1 y00 y00)) (* (- 3) (* q!2 q!2 r!1 r!1 r!1 y00 y00)) (* (- 1) (* q!2 q!2 q!2 r!1 r!1 r!1 y00 y00)) (* r!1 r!1 y00 y00 y00) (* 5 (* q!2 r!1 r!1 y00 y00 y00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00)) (* 3 (* q!2 y00 y00 y00 y00 r00)) (* 3 (* q!2 q!2 y00 y00 y00 y00 r00)) (* (- 1) (* q!2 q!2 q!2 r!1 r!1 y00 y00 y00)) (* (- 2) (* q!2 q!2 q!2 r!1 y00 y00 y00 r00)) (* q!2 q!2 q!2 y00 y00 y00 y00 r00) (* (- 2) (* q!2 r!1 y00 y00 y00 y00)) (* 3 (* q!2 q!2 r!1 y00 y00 y00 y00)) (* 5 (* q!2 q!2 q!2 r!1 y00 y00 y00 y00)) (* (- 6) (* q!2 q!2 r!1 y00 y00 y00 r00)) (* (- 3) (* q!2 q!2 y00 y00 y00 y00 y00)) (* (- 3) (* q!2 q!2 q!2 y00 y00 y00 y00 y00)) (* 3 (* q!2 r!1 r!1 y00 y00 r00)) (* (- 1) (* r!1 y00 y00 y00 r00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 r00)) (* r!1 r!1 y00 y00 y00 q00) (* 3 (* q!2 r!1 r!1 y00 y00 y00 q00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00 q00)) (* q!2 q!2 q!2 r!1 r!1 y00 y00 y00 q00) (* (- 6) (* q!2 r!1 y00 y00 y00 y00 q00)) (* (- 6) (* q!2 r!1 y00 y00 y00 r00)) (* (- 6) (* q!2 q!2 r!1 y00 y00 y00 y00 q00)) (* (- 2) (* q!2 q!2 q!2 r!1 y00 y00 y00 y00 q00)) (* 3 (* q!2 y00 y00 y00 y00 y00 q00)) (* 3 (* q!2 q!2 y00 y00 y00 y00 y00 q00)) (* q!2 q!2 q!2 y00 y00 y00 y00 y00 q00) (* (- 1) (* q!2 q!2 q!2 q!2 r!1 r!1 y00 y00 y00)) (* q!2 q!2 q!2 r!1 r!1 y00 y00 r00) (* 2 (* q!2 q!2 q!2 q!2 r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 q!2 q!2 y00 y00 y00 y00 y00)))))
 (let (($x306 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x71)) 0) (not (= ?x224 0)))))
 (let (($x663 (exists ((q Int) (r Int) (y Int) )(! (let ((?x1229 (* (- 1) (* q q q q y00 y00 y00 y00 y00))))
 (let ((?x1228 (* 2 (* q q q q r y00 y00 y00 y00))))
 (let ((?x1227 (* (- 1) (* q q q q r r y00 y00 y00))))
 (let ((?x831 (* q q q y00 y00 y00 y00 y00 q00)))
 (let ((?x848 (* 3 (* q q y00 y00 y00 y00 y00 q00))))
 (let ((?x847 (* 3 (* q y00 y00 y00 y00 y00 q00))))
 (let ((?x846 (* (- 2) (* q q q r y00 y00 y00 y00 q00))))
 (let ((?x845 (* (- 6) (* q q r y00 y00 y00 y00 q00))))
 (let ((?x844 (* (- 6) (* q r y00 y00 y00 y00 q00))))
 (let ((?x684 (* q q q r r y00 y00 y00 q00)))
 (let ((?x840 (* 3 (* q q r r y00 y00 y00 q00))))
 (let ((?x839 (* 3 (* q r r y00 y00 y00 q00))))
 (let ((?x659 (* r r y00 y00 y00 q00)))
 (let ((?x1226 (* (- 3) (* q q q y00 y00 y00 y00 y00))))
 (let ((?x556 (* (- 3) (* q q y00 y00 y00 y00 y00))))
 (let ((?x1225 (* 5 (* q q q r y00 y00 y00 y00))))
 (let ((?x1224 (* 3 (* q q r y00 y00 y00 y00))))
 (let ((?x1223 (* (- 2) (* q r y00 y00 y00 y00))))
 (let ((?x339 (* (- 1) (* q q q r r y00 y00 y00))))
 (let ((?x1222 (* 3 (* q q r r y00 y00 y00))))
 (let ((?x1221 (* 5 (* q r r y00 y00 y00))))
 (let ((?x292 (* r r y00 y00 y00)))
 (let ((?x1219 (* (- 1) (* q q q r r r y00 y00))))
 (let ((?x1218 (* (- 3) (* q q r r r y00 y00))))
 (let ((?x1217 (* (- 3) (* q r r r y00 y00))))
 (let ((?x1216 (* (- 1) (* r r r y00 y00))))
 (let ((?x192 (* (- 1) (* r y00 y00 y00 y00 q00))))
 (let ((?x1781 (+ (* r r y00 y00 r00) ?x192 ?x1216 ?x1217 ?x1218 ?x1219 ?x292 ?x1221 ?x1222 (* 3 (* q y00 y00 y00 y00 r00)) (* 3 (* q q y00 y00 y00 y00 r00)) ?x339 (* (- 2) (* q q q r y00 y00 y00 r00)) (* q q q y00 y00 y00 y00 r00) ?x1223 ?x1224 ?x1225 (* (- 6) (* q q r y00 y00 y00 r00)) ?x556 ?x1226 (* 3 (* q r r y00 y00 r00)) (* (- 1) (* r y00 y00 y00 r00)) (* 3 (* q q r r y00 y00 r00)) ?x659 ?x839 ?x840 ?x684 ?x844 (* (- 6) (* q r y00 y00 y00 r00)) ?x845 ?x846 ?x847 ?x848 ?x831 ?x1227 (* q q q r r y00 y00 r00) ?x1228 ?x1229)))
 (let (($x100 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x77 (= (+ y (* (- 1) y00)) 0)))
 (and $x77 $x100 (not (= ?x1781 0))))))))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x109 (exists ((q Int) (r Int) (y Int) )(! (let ((?x66 (* (- 1) y00)))
 (let ((?x182 (+ r ?x66)))
 (let ((?x175 (+ 1 q)))
 (let ((?x763 (* y00 y00 y00 y00 ?x175 ?x182)))
 (let ((?x135 (* q00 y00 y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182)))
 (let ((?x605 (* r00 y00 y00 y00 ?x182)))
 (let ((?x872 (* q00 y00 y00 y00 y00 ?x182)))
 (let ((?x183 (* r00 y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182)))
 (let ((?x518 (+ ?x183 ?x872 (* (- 1) (* y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182 ?x182)) ?x605 ?x135 (* (- 1) (* y00 y00 y00 ?x182 ?x182)) (* (- 1) (* y00 y00 y00 ?x175 ?x175 ?x175 ?x175 ?x182 ?x182)) (* (- 1) ?x763))))
 (let (($x870 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x870 (not (= ?x518 0))))))))))))) :qid k!29))
 ))
 (let ((?x683 (lambda ((q Int) (r Int) (y Int) )(let ((?x1229 (* (- 1) (* q q q q y00 y00 y00 y00 y00))))
 (let ((?x1228 (* 2 (* q q q q r y00 y00 y00 y00))))
 (let ((?x1227 (* (- 1) (* q q q q r r y00 y00 y00))))
 (let ((?x831 (* q q q y00 y00 y00 y00 y00 q00)))
 (let ((?x848 (* 3 (* q q y00 y00 y00 y00 y00 q00))))
 (let ((?x847 (* 3 (* q y00 y00 y00 y00 y00 q00))))
 (let ((?x846 (* (- 2) (* q q q r y00 y00 y00 y00 q00))))
 (let ((?x845 (* (- 6) (* q q r y00 y00 y00 y00 q00))))
 (let ((?x844 (* (- 6) (* q r y00 y00 y00 y00 q00))))
 (let ((?x684 (* q q q r r y00 y00 y00 q00)))
 (let ((?x840 (* 3 (* q q r r y00 y00 y00 q00))))
 (let ((?x839 (* 3 (* q r r y00 y00 y00 q00))))
 (let ((?x659 (* r r y00 y00 y00 q00)))
 (let ((?x1226 (* (- 3) (* q q q y00 y00 y00 y00 y00))))
 (let ((?x556 (* (- 3) (* q q y00 y00 y00 y00 y00))))
 (let ((?x1225 (* 5 (* q q q r y00 y00 y00 y00))))
 (let ((?x1224 (* 3 (* q q r y00 y00 y00 y00))))
 (let ((?x1223 (* (- 2) (* q r y00 y00 y00 y00))))
 (let ((?x339 (* (- 1) (* q q q r r y00 y00 y00))))
 (let ((?x1222 (* 3 (* q q r r y00 y00 y00))))
 (let ((?x1221 (* 5 (* q r r y00 y00 y00))))
 (let ((?x292 (* r r y00 y00 y00)))
 (let ((?x1219 (* (- 1) (* q q q r r r y00 y00))))
 (let ((?x1218 (* (- 3) (* q q r r r y00 y00))))
 (let ((?x1217 (* (- 3) (* q r r r y00 y00))))
 (let ((?x1216 (* (- 1) (* r r r y00 y00))))
 (let ((?x192 (* (- 1) (* r y00 y00 y00 y00 q00))))
 (let ((?x1781 (+ (* r r y00 y00 r00) ?x192 ?x1216 ?x1217 ?x1218 ?x1219 ?x292 ?x1221 ?x1222 (* 3 (* q y00 y00 y00 y00 r00)) (* 3 (* q q y00 y00 y00 y00 r00)) ?x339 (* (- 2) (* q q q r y00 y00 y00 r00)) (* q q q y00 y00 y00 y00 r00) ?x1223 ?x1224 ?x1225 (* (- 6) (* q q r y00 y00 y00 r00)) ?x556 ?x1226 (* 3 (* q r r y00 y00 r00)) (* (- 1) (* r y00 y00 y00 r00)) (* 3 (* q q r r y00 y00 r00)) ?x659 ?x839 ?x840 ?x684 ?x844 (* (- 6) (* q r y00 y00 y00 r00)) ?x845 ?x846 ?x847 ?x848 ?x831 ?x1227 (* q q q r r y00 y00 r00) ?x1228 ?x1229)))
 (let (($x100 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x77 (= (+ y (* (- 1) y00)) 0)))
 (let (($x1787 (and $x77 $x100 (not (= ?x1781 0)))))
 (let ((?x66 (* (- 1) y00)))
 (let ((?x182 (+ r ?x66)))
 (let ((?x175 (+ 1 q)))
 (let ((?x763 (* y00 y00 y00 y00 ?x175 ?x182)))
 (let ((?x135 (* q00 y00 y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182)))
 (let ((?x605 (* r00 y00 y00 y00 ?x182)))
 (let ((?x872 (* q00 y00 y00 y00 y00 ?x182)))
 (let ((?x183 (* r00 y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182)))
 (let ((?x518 (+ ?x183 ?x872 (* (- 1) (* y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182 ?x182)) ?x605 ?x135 (* (- 1) (* y00 y00 y00 ?x182 ?x182)) (* (- 1) (* y00 y00 y00 ?x175 ?x175 ?x175 ?x175 ?x182 ?x182)) (* (- 1) ?x763))))
 (let (($x870 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x896 (and (= (+ y00 (* (- 1) y)) 0) $x870 (not (= ?x518 0)))))
 (rewrite (= $x896 $x1787)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x461 (exists ((q Int) (r Int) (y Int) )(! (let ((?x66 (* (- 1) y00)))
 (let ((?x182 (+ r ?x66)))
 (let ((?x175 (+ 1 q)))
 (let ((?x763 (* y00 y00 y00 y00 ?x175 ?x182)))
 (let ((?x611 (* y00 y00 y00 ?x175 ?x175 ?x175 ?x175 ?x182 ?x182)))
 (let ((?x514 (* y00 y00 y00 ?x182 ?x182)))
 (let ((?x782 (* y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182 ?x182)))
 (let ((?x758 (+ (* (- 1) (* r00 y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182)) (* (- 1) (* q00 y00 y00 y00 y00 ?x182)) ?x782 (* (- 1) (* r00 y00 y00 y00 ?x182)) (* (- 1) (* q00 y00 y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182)) ?x514 ?x611 ?x763)))
 (let (($x870 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x66 y) 0) $x870 (not (= ?x758 0)))))))))))) :qid k!29))
 ))
 (let ((?x123 (lambda ((q Int) (r Int) (y Int) )(let ((?x66 (* (- 1) y00)))
 (let ((?x182 (+ r ?x66)))
 (let ((?x175 (+ 1 q)))
 (let ((?x763 (* y00 y00 y00 y00 ?x175 ?x182)))
 (let ((?x135 (* q00 y00 y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182)))
 (let ((?x605 (* r00 y00 y00 y00 ?x182)))
 (let ((?x872 (* q00 y00 y00 y00 y00 ?x182)))
 (let ((?x183 (* r00 y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182)))
 (let ((?x518 (+ ?x183 ?x872 (* (- 1) (* y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182 ?x182)) ?x605 ?x135 (* (- 1) (* y00 y00 y00 ?x182 ?x182)) (* (- 1) (* y00 y00 y00 ?x175 ?x175 ?x175 ?x175 ?x182 ?x182)) (* (- 1) ?x763))))
 (let (($x870 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x896 (and (= (+ y00 (* (- 1) y)) 0) $x870 (not (= ?x518 0)))))
 (let ((?x611 (* y00 y00 y00 ?x175 ?x175 ?x175 ?x175 ?x182 ?x182)))
 (let ((?x514 (* y00 y00 y00 ?x182 ?x182)))
 (let ((?x782 (* y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182 ?x182)))
 (let ((?x758 (+ (* (- 1) ?x183) (* (- 1) ?x872) ?x782 (* (- 1) ?x605) (* (- 1) ?x135) ?x514 ?x611 ?x763)))
 (let (($x868 (and (= (+ ?x66 y) 0) $x870 (not (= ?x758 0)))))
 (rewrite (= $x868 $x896)))))))))))))))))))
 ))
 (let (($x61 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x46 (- (* (- 1) ?x42 ?x42 ?x42 ?x43 ?x43 r00 y00 y00) (* q00 ?x43 y00 y00 y00 y00))))
 (let ((?x51 (- (+ ?x46 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00)) (* ?x43 r00 y00 y00 y00))))
 (let ((?x56 (+ (- ?x51 (* ?x42 ?x42 ?x42 q00 ?x43 ?x43 y00 y00 y00)) (* ?x43 ?x43 y00 y00 y00) (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 y00 y00 y00) (* ?x42 ?x43 y00 y00 y00 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x56 0))))))))) :qid k!29))
 ))
 (let ((?x435 (lambda ((q Int) (r Int) (y Int) )(let ((?x66 (* (- 1) y00)))
 (let ((?x182 (+ r ?x66)))
 (let ((?x175 (+ 1 q)))
 (let ((?x763 (* y00 y00 y00 y00 ?x175 ?x182)))
 (let ((?x611 (* y00 y00 y00 ?x175 ?x175 ?x175 ?x175 ?x182 ?x182)))
 (let ((?x514 (* y00 y00 y00 ?x182 ?x182)))
 (let ((?x782 (* y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182 ?x182)))
 (let ((?x758 (+ (* (- 1) (* r00 y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182)) (* (- 1) (* q00 y00 y00 y00 y00 ?x182)) ?x782 (* (- 1) (* r00 y00 y00 y00 ?x182)) (* (- 1) (* q00 y00 y00 y00 ?x175 ?x175 ?x175 ?x182 ?x182)) ?x514 ?x611 ?x763)))
 (let (($x870 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x868 (and (= (+ ?x66 y) 0) $x870 (not (= ?x758 0)))))
 (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x46 (- (* (- 1) ?x42 ?x42 ?x42 ?x43 ?x43 r00 y00 y00) (* q00 ?x43 y00 y00 y00 y00))))
 (let ((?x51 (- (+ ?x46 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00)) (* ?x43 r00 y00 y00 y00))))
 (let ((?x56 (+ (- ?x51 (* ?x42 ?x42 ?x42 q00 ?x43 ?x43 y00 y00 y00)) (* ?x43 ?x43 y00 y00 y00) (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 y00 y00 y00) (* ?x42 ?x43 y00 y00 y00 y00))))
 (let (($x60 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x56 0))))))
 (rewrite (= $x60 $x868)))))))))))))))))))
 ))
 (let ((@x62 (asserted $x61)))
 (let ((@x740 (mp (mp @x62 (quant-intro (proof-bind ?x435) (= $x61 $x461)) $x461) (rewrite (= $x461 $x461)) $x461)))
 (let ((@x535 (mp (mp @x740 (quant-intro (proof-bind ?x123) (= $x461 $x109)) $x109) (quant-intro (proof-bind ?x683) (= $x109 $x663)) $x663)))
 (let ((@x1543 (mp (mp~ @x535 (sk (~ $x663 $x306)) $x306) (rewrite (= $x306 $x1299)) $x1299)))
 (let ((@x1368 (and-elim @x1543 $x1382)))
 (let ((@x1505 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1382) $x1296)) @x1368 $x1296)))
 (let (($x1372 (>= ?x1381 0)))
 (let ((@x1457 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1382) $x1372)) @x1368 $x1372)))
 (let (($x1370 (<= ?x1250 0)))
 (let ((@x1544 (and-elim @x1543 $x1363)))
 (let ((@x1484 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1363) $x1370)) @x1544 $x1370)))
 (let (($x1371 (>= ?x1250 0)))
 (let ((@x1463 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1363) $x1371)) @x1544 $x1371)))
 (let (($x1451 (not (<= ?x1540 0))))
 (let (($x1374 (>= ?x1540 0)))
 (let ((@x1513 (lemma ((_ th-lemma arith) (hypothesis (not $x1374)) @x1463 @x1484 @x1457 @x1505 false) $x1374)))
 (let ((@x1453 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1536 $x1451 (not $x1374))) (and-elim @x1543 $x1542) (or $x1451 (not $x1374)))))
 ((_ th-lemma arith) (unit-resolution @x1453 @x1513 $x1451) @x1463 @x1484 @x1457 @x1505 false)))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        4
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-gcd-tests           2
 :arith-grobner             2
 :arith-max-min             180
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              3
 :arith-tableau-max-columns 57
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              2
 :max-memory                3.72
 :memory                    3.24
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1183408
 :num-checks                1
 :propagations              6
 :rlimit-count              5189
 :time                      0.01
 :total-time                0.02)
