unsat
((set-logic NIA)
(declare-fun x!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x940 (+ y00 x00 (* (- 1) y!0) (* (- 1) x!1))))
 (let (($x394 (<= ?x940 0)))
 (let (($x1621 (= ?x940 0)))
 (let ((?x1602 (* y00 x!1)))
 (let ((?x276 (* (- 6) (* x00 y!0 x!1))))
 (let ((?x1232 (* y00 x!1 x!1)))
 (let ((?x1228 (* (- 2) (* y00 y!0 y!0 y!0 x!1))))
 (let ((?x106 (+ 1 x!1)))
 (let ((?x1294 (+ (- 1) y!0)))
 (let ((?x1029 (* ?x1294 ?x1294 ?x1294 ?x1294 ?x106 ?x106)))
 (let ((?x224 (* (- 2) (* x00 y!0 y!0 y!0 x!1))))
 (let ((?x954 (* ?x1294 ?x1294 ?x1294 ?x106 ?x106 ?x106)))
 (let ((?x185 (* 6 (* y00 y!0 y!0))))
 (let ((?x600 (* 3 (* x00 y!0 y!0 x!1 x!1))))
 (let ((?x638 (* y!0 y!0)))
 (let ((?x1034 (* 3 ?x638)))
 (let ((?x588 (* (- 6) (* y00 y!0 x!1))))
 (let ((?x570 (* x00 x!1)))
 (let ((?x489 (* (- 3) (* y!0 y!0 x!1))))
 (let ((?x396 (* y!0 y!0 y!0 x!1)))
 (let ((?x665 (* 3 (* y00 y!0 y!0 x!1 x!1))))
 (let ((?x373 (* 6 (* x00 y!0 y!0))))
 (let ((?x269 (* x00 x!1 x!1)))
 (let ((?x225 (* x!1 x!1)))
 (let ((?x137 (* y!0 y!0 y!0 y!0)))
 (let ((?x654 (* (- 3) (* y!0 y!0 y!0))))
 (let ((?x287 (+ y00 x00 ?x654 ?x137 (* 6 (* y00 y!0 y!0 x!1)) (* (- 3) (* y00 y!0 x!1 x!1)) ?x225 ?x269 (* (- 3) (* x00 y!0 x!1 x!1)) (* 6 (* x00 y!0 y!0 x!1)) ?x373 ?x665 ?x396 ?x489 ?x570 ?x588 ?x1034 (* (- 6) (* y00 y!0)) (* (- 2) (* x00 y!0 y!0 y!0)) ?x600 (* (- 6) (* x00 y!0)) ?x185 ?x954 (* (- 1) (* x00 y!0 y!0 y!0 x!1 x!1)) ?x224 ?x1029 (* 4 (* y!0 x!1)) (* (- 1) (* y00 y!0 y!0 y!0 x!1 x!1)) ?x1228 ?x1232 (* (- 2) (* y00 y!0 y!0 y!0)) ?x276 ?x1602)))
 (let (($x886 (= ?x287 0)))
 (let ((?x1230 (* y00 y!0 y!0 y!0 x!1 x!1)))
 (let ((?x1014 (* x00 y!0 y!0 y!0 x!1 x!1)))
 (let ((?x240 (* (- 3) ?x638)))
 (let ((?x606 (+ 1 y!0)))
 (let ((?x213 (+ (- 1) x!1)))
 (let ((?x712 (* (- 1) (* ?x213 ?x213 ?x606 ?x606 ?x606 ?x606))))
 (let ((?x264 (* (- 1) (* ?x213 ?x213 ?x213 ?x606 ?x606 ?x606))))
 (let ((?x252 (* (- 1) ?x225)))
 (let ((?x245 (* (- 1) ?x137)))
 (let ((?x385 (+ y00 x00 ?x654 ?x245 (* (- 6) (* y00 y!0 y!0 x!1)) (* 3 (* y00 y!0 x!1 x!1)) ?x252 ?x264 ?x712 ?x269 (* 3 (* x00 y!0 x!1 x!1)) (* (- 6) (* x00 y!0 y!0 x!1)) ?x373 ?x665 (* (- 1) ?x396) ?x489 (* (- 1) ?x570) ?x588 ?x240 (* 6 (* y00 y!0)) (* 2 (* x00 y!0 y!0 y!0)) ?x600 (* 6 (* x00 y!0)) ?x185 ?x1014 ?x224 (* (- 4) (* y!0 x!1)) ?x1230 ?x1228 ?x1232 (* 2 (* y00 y!0 y!0 y!0)) ?x276 (* (- 1) ?x1602))))
 (let (($x1411 (= ?x385 0)))
 (let (($x957 (not $x1411)))
 (let (($x559 (or $x957 (not $x886))))
 (let (($x812 (and $x1621 $x559)))
 (let ((?x239 (* (- 3) (* x!1 y!0 y!0))))
 (let ((?x241 (* x!1 y!0 y!0 y!0)))
 (let ((?x207 (* 3 (* x!1 x!1 y!0 y!0 y00))))
 (let ((?x903 (* (- 6) (* x!1 y!0 y00))))
 (let ((?x770 (* x!1 x!1 y00)))
 (let ((?x263 (* (- 2) (* x!1 y!0 y!0 y!0 y00))))
 (let ((?x266 (* (- 2) (* x!1 y!0 y!0 y!0 x00))))
 (let ((?x246 (* 3 (* x!1 x!1 y!0 y!0 x00))))
 (let ((?x637 (* (- 6) (* x!1 y!0 x00))))
 (let ((?x455 (* x!1 x!1 x00)))
 (let ((?x463 (* x!1 y00)))
 (let ((?x1091 (* x!1 x00)))
 (let ((?x1298 (* 6 (* y!0 y!0 x00))))
 (let ((?x1070 (* 6 (* y!0 y!0 y00))))
 (let ((?x1408 (+ y00 x00 (* 4 (* x!1 y!0)) (* (- 6) (* y!0 y00)) ?x1070 (* (- 2) (* y!0 y!0 y!0 y00)) ?x1029 ?x954 (* (- 6) (* y!0 x00)) ?x1298 (* (- 2) (* y!0 y!0 y!0 x00)) ?x1091 ?x463 ?x455 ?x637 (* (- 3) (* x!1 x!1 y!0 x00)) (* 6 (* x!1 y!0 y!0 x00)) ?x246 ?x266 (* (- 1) (* x!1 x!1 y!0 y!0 y!0 x00)) (* (- 1) (* x!1 x!1 y!0 y!0 y!0 y00)) ?x263 ?x770 ?x903 (* (- 3) (* x!1 x!1 y!0 y00)) (* 6 (* x!1 y!0 y!0 y00)) ?x225 ?x207 ?x1034 ?x654 ?x241 ?x239 ?x137)))
 (let ((?x769 (* x!1 x!1 y!0 y!0 y!0 y00)))
 (let ((?x183 (* x!1 x!1 y!0 y!0 y!0 x00)))
 (let ((?x292 (+ y00 x00 (* (- 4) (* x!1 y!0)) (* 6 (* y!0 y00)) ?x1070 (* 2 (* y!0 y!0 y!0 y00)) (* 6 (* y!0 x00)) ?x1298 (* 2 (* y!0 y!0 y!0 x00)) (* (- 1) ?x1091) (* (- 1) ?x463) ?x455 ?x637 (* 3 (* x!1 x!1 y!0 x00)) (* (- 6) (* x!1 y!0 y!0 x00)) ?x246 ?x266 ?x183 ?x712 ?x264 ?x769 ?x263 ?x770 ?x903 (* 3 (* x!1 x!1 y!0 y00)) (* (- 6) (* x!1 y!0 y!0 y00)) ?x252 ?x207 ?x240 ?x654 (* (- 1) ?x241) ?x239 ?x245)))
 (let (($x1622 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x292 0)) (not (= ?x1408 0))))))
 (let (($x691 (exists ((x Int) (y Int) )(! (let ((?x996 (* y y y y)))
 (let ((?x963 (* x y y)))
 (let ((?x1559 (* (- 3) ?x963)))
 (let ((?x949 (* x y y y)))
 (let ((?x947 (* y y y)))
 (let ((?x1628 (* (- 3) ?x947)))
 (let ((?x795 (* x x y y y00)))
 (let ((?x826 (* 3 ?x795)))
 (let ((?x786 (* x x)))
 (let ((?x777 (* x y y y00)))
 (let ((?x902 (* 6 ?x777)))
 (let ((?x767 (* x x y y00)))
 (let ((?x888 (* (- 3) ?x767)))
 (let ((?x761 (* x y y00)))
 (let ((?x1480 (* (- 6) ?x761)))
 (let ((?x760 (* x x y00)))
 (let ((?x749 (* x y y y y00)))
 (let ((?x827 (* (- 2) ?x749)))
 (let ((?x744 (* x x y y y y00)))
 (let ((?x852 (* (- 1) ?x744)))
 (let ((?x544 (* x x y y y x00)))
 (let ((?x587 (* (- 1) ?x544)))
 (let ((?x539 (* x y y y x00)))
 (let ((?x556 (* (- 2) ?x539)))
 (let ((?x492 (* x x y y x00)))
 (let ((?x554 (* 3 ?x492)))
 (let ((?x483 (* x y y x00)))
 (let ((?x649 (* 6 ?x483)))
 (let ((?x458 (* x x y x00)))
 (let ((?x630 (* (- 3) ?x458)))
 (let ((?x449 (* x y x00)))
 (let ((?x1318 (* (- 6) ?x449)))
 (let ((?x438 (* x x x00)))
 (let ((?x343 (* x y00)))
 (let ((?x305 (* x x00)))
 (let ((?x255 (* y y y x00)))
 (let ((?x663 (* (- 2) ?x255)))
 (let ((?x238 (* y y x00)))
 (let ((?x1322 (* 6 ?x238)))
 (let ((?x226 (* y x00)))
 (let ((?x661 (* (- 6) ?x226)))
 (let ((?x1056 (+ 1 x)))
 (let ((?x134 (+ (- 1) y)))
 (let ((?x195 (* ?x134 ?x134 ?x134 ?x1056 ?x1056 ?x1056)))
 (let ((?x175 (* ?x134 ?x134 ?x134 ?x134 ?x1056 ?x1056)))
 (let ((?x143 (* y y y y00)))
 (let ((?x915 (* (- 2) ?x143)))
 (let ((?x142 (* y y y00)))
 (let ((?x1500 (* 6 ?x142)))
 (let ((?x140 (* y y00)))
 (let ((?x913 (* (- 6) ?x140)))
 (let ((?x122 (* x y)))
 (let ((?x1046 (* 4 ?x122)))
 (let ((?x151 (+ y00 x00 ?x1046 ?x913 ?x1500 ?x915 ?x175 ?x195 ?x661 ?x1322 ?x663 ?x305 ?x343 ?x438 ?x1318 ?x630 ?x649 ?x554 ?x556 ?x587 ?x852 ?x827 ?x760 ?x1480 ?x888 ?x902 ?x786 ?x826 (* 3 (* y y)) ?x1628 ?x949 ?x1559 ?x996)))
 (let ((?x111 (+ 1 y)))
 (let ((?x103 (+ (- 1) x)))
 (let ((?x673 (* ?x103 ?x103 ?x103 ?x111 ?x111 ?x111)))
 (let ((?x627 (+ y00 x00 (* (- 4) ?x122) (* 6 ?x140) ?x1500 (* 2 ?x143) (* 6 ?x226) ?x1322 (* 2 ?x255) (* (- 1) ?x305) (* (- 1) ?x343) ?x438 ?x1318 (* 3 ?x458) (* (- 6) ?x483) ?x554 ?x556 ?x544 (* (- 1) (* ?x103 ?x103 ?x111 ?x111 ?x111 ?x111)) (* (- 1) ?x673) ?x744 ?x827 ?x760 ?x1480 (* 3 ?x767) (* (- 6) ?x777) (* (- 1) ?x786) ?x826 (* (- 3) (* y y)) ?x1628 (* (- 1) ?x949) ?x1559 (* (- 1) ?x996))))
 (let (($x113 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x113 (or (not (= ?x627 0)) (not (= ?x151 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x1699 (exists ((x Int) (y Int) )(! (let ((?x1580 (* (- 1) (* y (- 1) y))))
 (let ((?x1576 (* (- 1) (* y y (- 1)))))
 (let ((?x1572 (* (- 1) (* y (- 1) (- 1)))))
 (let ((?x996 (* y y y y)))
 (let ((?x963 (* x y y)))
 (let ((?x1559 (* (- 3) ?x963)))
 (let ((?x949 (* x y y y)))
 (let ((?x947 (* y y y)))
 (let ((?x1628 (* (- 3) ?x947)))
 (let ((?x936 (* (- 1) (* y y 1))))
 (let ((?x795 (* x x y y y00)))
 (let ((?x826 (* 3 ?x795)))
 (let ((?x786 (* x x)))
 (let ((?x777 (* x y y y00)))
 (let ((?x902 (* 6 ?x777)))
 (let ((?x767 (* x x y y00)))
 (let ((?x888 (* (- 3) ?x767)))
 (let ((?x761 (* x y y00)))
 (let ((?x1480 (* (- 6) ?x761)))
 (let ((?x760 (* x x y00)))
 (let ((?x749 (* x y y y y00)))
 (let ((?x827 (* (- 2) ?x749)))
 (let ((?x744 (* x x y y y y00)))
 (let ((?x852 (* (- 1) ?x744)))
 (let ((?x544 (* x x y y y x00)))
 (let ((?x587 (* (- 1) ?x544)))
 (let ((?x539 (* x y y y x00)))
 (let ((?x556 (* (- 2) ?x539)))
 (let ((?x492 (* x x y y x00)))
 (let ((?x554 (* 3 ?x492)))
 (let ((?x483 (* x y y x00)))
 (let ((?x649 (* 6 ?x483)))
 (let ((?x458 (* x x y x00)))
 (let ((?x630 (* (- 3) ?x458)))
 (let ((?x449 (* x y x00)))
 (let ((?x1318 (* (- 6) ?x449)))
 (let ((?x438 (* x x x00)))
 (let ((?x343 (* x y00)))
 (let ((?x305 (* x x00)))
 (let ((?x255 (* y y y x00)))
 (let ((?x663 (* (- 2) ?x255)))
 (let ((?x238 (* y y x00)))
 (let ((?x1322 (* 6 ?x238)))
 (let ((?x226 (* y x00)))
 (let ((?x661 (* (- 6) ?x226)))
 (let ((?x1056 (+ 1 x)))
 (let ((?x134 (+ (- 1) y)))
 (let ((?x195 (* ?x134 ?x134 ?x134 ?x1056 ?x1056 ?x1056)))
 (let ((?x175 (* ?x134 ?x134 ?x134 ?x134 ?x1056 ?x1056)))
 (let ((?x143 (* y y y y00)))
 (let ((?x915 (* (- 2) ?x143)))
 (let ((?x142 (* y y y00)))
 (let ((?x1500 (* 6 ?x142)))
 (let ((?x140 (* y y00)))
 (let ((?x913 (* (- 6) ?x140)))
 (let ((?x1691 (+ y00 x00 (* 3 (* x y)) ?x913 ?x1500 ?x915 ?x175 ?x195 ?x661 ?x1322 ?x663 ?x305 ?x343 ?x438 ?x1318 ?x630 ?x649 ?x554 ?x556 ?x587 ?x852 ?x827 ?x760 ?x1480 ?x888 ?x902 ?x786 ?x826 ?x936 (* 2 (* y y)) ?x1628 ?x949 ?x1559 ?x996 (* (- 1) (* y (- 1) 1)) (* (- 1) (* y (- 1) x)) ?x1572 ?x1576 ?x1580)))
 (let ((?x111 (+ 1 y)))
 (let ((?x103 (+ (- 1) x)))
 (let ((?x673 (* ?x103 ?x103 ?x103 ?x111 ?x111 ?x111)))
 (let ((?x671 (* ?x103 ?x103 ?x111 ?x111 ?x111 ?x111)))
 (let ((?x122 (* x y)))
 (let ((?x1046 (* 4 ?x122)))
 (let ((?x94 (* (- 1) x00)))
 (let ((?x87 (* (- 1) y00)))
 (let ((?x1050 (+ (* 2 y) ?x87 ?x94 ?x1046 ?x913 (* (- 6) ?x142) ?x915 ?x661 (* (- 6) ?x238) ?x663 ?x305 ?x343 (* (- 1) ?x438) (* 6 ?x449) ?x630 ?x649 (* (- 3) ?x492) (* 2 ?x539) ?x587 ?x671 ?x673 ?x852 (* 2 ?x749) (* (- 1) ?x760) (* 6 ?x761) ?x888 ?x902 ?x786 (* (- 3) ?x795) (* (- 1) (* y 1 1)) (* (- 1) (* y 1)) ?x936 (* (- 1) (* y 1 y)) (* 5 (* y y)) (* 3 ?x947) ?x949 (* 3 ?x963) ?x996)))
 (let (($x117 (not (= ?x1050 0))))
 (let (($x113 (= (+ x y ?x87 ?x94) 0)))
 (and $x113 (or $x117 (not (= ?x1691 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x646 (lambda ((x Int) (y Int) )(let ((?x996 (* y y y y)))
 (let ((?x963 (* x y y)))
 (let ((?x1559 (* (- 3) ?x963)))
 (let ((?x949 (* x y y y)))
 (let ((?x947 (* y y y)))
 (let ((?x1628 (* (- 3) ?x947)))
 (let ((?x795 (* x x y y y00)))
 (let ((?x826 (* 3 ?x795)))
 (let ((?x786 (* x x)))
 (let ((?x777 (* x y y y00)))
 (let ((?x902 (* 6 ?x777)))
 (let ((?x767 (* x x y y00)))
 (let ((?x888 (* (- 3) ?x767)))
 (let ((?x761 (* x y y00)))
 (let ((?x1480 (* (- 6) ?x761)))
 (let ((?x760 (* x x y00)))
 (let ((?x749 (* x y y y y00)))
 (let ((?x827 (* (- 2) ?x749)))
 (let ((?x744 (* x x y y y y00)))
 (let ((?x852 (* (- 1) ?x744)))
 (let ((?x544 (* x x y y y x00)))
 (let ((?x587 (* (- 1) ?x544)))
 (let ((?x539 (* x y y y x00)))
 (let ((?x556 (* (- 2) ?x539)))
 (let ((?x492 (* x x y y x00)))
 (let ((?x554 (* 3 ?x492)))
 (let ((?x483 (* x y y x00)))
 (let ((?x649 (* 6 ?x483)))
 (let ((?x458 (* x x y x00)))
 (let ((?x630 (* (- 3) ?x458)))
 (let ((?x449 (* x y x00)))
 (let ((?x1318 (* (- 6) ?x449)))
 (let ((?x438 (* x x x00)))
 (let ((?x343 (* x y00)))
 (let ((?x305 (* x x00)))
 (let ((?x255 (* y y y x00)))
 (let ((?x663 (* (- 2) ?x255)))
 (let ((?x238 (* y y x00)))
 (let ((?x1322 (* 6 ?x238)))
 (let ((?x226 (* y x00)))
 (let ((?x661 (* (- 6) ?x226)))
 (let ((?x1056 (+ 1 x)))
 (let ((?x134 (+ (- 1) y)))
 (let ((?x195 (* ?x134 ?x134 ?x134 ?x1056 ?x1056 ?x1056)))
 (let ((?x175 (* ?x134 ?x134 ?x134 ?x134 ?x1056 ?x1056)))
 (let ((?x143 (* y y y y00)))
 (let ((?x915 (* (- 2) ?x143)))
 (let ((?x142 (* y y y00)))
 (let ((?x1500 (* 6 ?x142)))
 (let ((?x140 (* y y00)))
 (let ((?x913 (* (- 6) ?x140)))
 (let ((?x122 (* x y)))
 (let ((?x1046 (* 4 ?x122)))
 (let ((?x151 (+ y00 x00 ?x1046 ?x913 ?x1500 ?x915 ?x175 ?x195 ?x661 ?x1322 ?x663 ?x305 ?x343 ?x438 ?x1318 ?x630 ?x649 ?x554 ?x556 ?x587 ?x852 ?x827 ?x760 ?x1480 ?x888 ?x902 ?x786 ?x826 (* 3 (* y y)) ?x1628 ?x949 ?x1559 ?x996)))
 (let ((?x111 (+ 1 y)))
 (let ((?x103 (+ (- 1) x)))
 (let ((?x673 (* ?x103 ?x103 ?x103 ?x111 ?x111 ?x111)))
 (let ((?x627 (+ y00 x00 (* (- 4) ?x122) (* 6 ?x140) ?x1500 (* 2 ?x143) (* 6 ?x226) ?x1322 (* 2 ?x255) (* (- 1) ?x305) (* (- 1) ?x343) ?x438 ?x1318 (* 3 ?x458) (* (- 6) ?x483) ?x554 ?x556 ?x544 (* (- 1) (* ?x103 ?x103 ?x111 ?x111 ?x111 ?x111)) (* (- 1) ?x673) ?x744 ?x827 ?x760 ?x1480 (* 3 ?x767) (* (- 6) ?x777) (* (- 1) ?x786) ?x826 (* (- 3) (* y y)) ?x1628 (* (- 1) ?x949) ?x1559 (* (- 1) ?x996))))
 (let (($x113 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x603 (and $x113 (or (not (= ?x627 0)) (not (= ?x151 0))))))
 (let ((?x1580 (* (- 1) (* y (- 1) y))))
 (let ((?x1576 (* (- 1) (* y y (- 1)))))
 (let ((?x1572 (* (- 1) (* y (- 1) (- 1)))))
 (let ((?x936 (* (- 1) (* y y 1))))
 (let ((?x1691 (+ y00 x00 (* 3 ?x122) ?x913 ?x1500 ?x915 ?x175 ?x195 ?x661 ?x1322 ?x663 ?x305 ?x343 ?x438 ?x1318 ?x630 ?x649 ?x554 ?x556 ?x587 ?x852 ?x827 ?x760 ?x1480 ?x888 ?x902 ?x786 ?x826 ?x936 (* 2 (* y y)) ?x1628 ?x949 ?x1559 ?x996 (* (- 1) (* y (- 1) 1)) (* (- 1) (* y (- 1) x)) ?x1572 ?x1576 ?x1580)))
 (let ((?x671 (* ?x103 ?x103 ?x111 ?x111 ?x111 ?x111)))
 (let ((?x94 (* (- 1) x00)))
 (let ((?x87 (* (- 1) y00)))
 (let ((?x1050 (+ (* 2 y) ?x87 ?x94 ?x1046 ?x913 (* (- 6) ?x142) ?x915 ?x661 (* (- 6) ?x238) ?x663 ?x305 ?x343 (* (- 1) ?x438) (* 6 ?x449) ?x630 ?x649 (* (- 3) ?x492) (* 2 ?x539) ?x587 ?x671 ?x673 ?x852 (* 2 ?x749) (* (- 1) ?x760) (* 6 ?x761) ?x888 ?x902 ?x786 (* (- 3) ?x795) (* (- 1) (* y 1 1)) (* (- 1) (* y 1)) ?x936 (* (- 1) (* y 1 y)) (* 5 (* y y)) (* 3 ?x947) ?x949 (* 3 ?x963) ?x996)))
 (let (($x117 (not (= ?x1050 0))))
 (let (($x856 (and $x113 (or $x117 (not (= ?x1691 0))))))
 (rewrite (= $x856 $x603))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x280 (exists ((x Int) (y Int) )(! (let ((?x1056 (+ 1 x)))
 (let ((?x134 (+ (- 1) y)))
 (let ((?x195 (* ?x134 ?x134 ?x134 ?x1056 ?x1056 ?x1056)))
 (let ((?x175 (* ?x134 ?x134 ?x134 ?x134 ?x1056 ?x1056)))
 (let ((?x1469 (+ (* ?x134 ?x1056) (* (- 1) (* y00 ?x134 ?x134 ?x134)) (* (- 1) (* x00 ?x134 ?x134 ?x134)) (* (- 1) (* x00 ?x1056)) (* (- 1) (* y00 ?x1056)) (* (- 1) (* x00 ?x134 ?x134 ?x134 ?x1056 ?x1056)) ?x175 ?x195 (* ?x1056 ?x1056) (* (- 1) (* y00 ?x134 ?x134 ?x134 ?x1056 ?x1056)) (* ?x134 ?x134 ?x134 ?x1056) (* ?x134 ?x134 ?x134 ?x134))))
 (let ((?x111 (+ 1 y)))
 (let ((?x103 (+ (- 1) x)))
 (let ((?x673 (* ?x103 ?x103 ?x103 ?x111 ?x111 ?x111)))
 (let ((?x671 (* ?x103 ?x103 ?x111 ?x111 ?x111 ?x111)))
 (let ((?x164 (+ (* ?x103 ?x111) (* (- 1) (* y00 ?x111 ?x111 ?x111)) (* (- 1) (* x00 ?x111 ?x111 ?x111)) (* (- 1) (* x00 ?x103)) (* (- 1) (* y00 ?x103)) (* (- 1) (* x00 ?x103 ?x103 ?x111 ?x111 ?x111)) ?x671 ?x673 (* ?x103 ?x103) (* (- 1) (* y00 ?x103 ?x103 ?x111 ?x111 ?x111)) (* ?x103 ?x111 ?x111 ?x111) (* ?x111 ?x111 ?x111 ?x111))))
 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x164 0)) (not (= ?x1469 0)))))))))))))) :qid k!27))
 ))
 (let ((?x181 (lambda ((x Int) (y Int) )(let ((?x1580 (* (- 1) (* y (- 1) y))))
 (let ((?x1576 (* (- 1) (* y y (- 1)))))
 (let ((?x1572 (* (- 1) (* y (- 1) (- 1)))))
 (let ((?x996 (* y y y y)))
 (let ((?x963 (* x y y)))
 (let ((?x1559 (* (- 3) ?x963)))
 (let ((?x949 (* x y y y)))
 (let ((?x947 (* y y y)))
 (let ((?x1628 (* (- 3) ?x947)))
 (let ((?x936 (* (- 1) (* y y 1))))
 (let ((?x795 (* x x y y y00)))
 (let ((?x826 (* 3 ?x795)))
 (let ((?x786 (* x x)))
 (let ((?x777 (* x y y y00)))
 (let ((?x902 (* 6 ?x777)))
 (let ((?x767 (* x x y y00)))
 (let ((?x888 (* (- 3) ?x767)))
 (let ((?x761 (* x y y00)))
 (let ((?x1480 (* (- 6) ?x761)))
 (let ((?x760 (* x x y00)))
 (let ((?x749 (* x y y y y00)))
 (let ((?x827 (* (- 2) ?x749)))
 (let ((?x744 (* x x y y y y00)))
 (let ((?x852 (* (- 1) ?x744)))
 (let ((?x544 (* x x y y y x00)))
 (let ((?x587 (* (- 1) ?x544)))
 (let ((?x539 (* x y y y x00)))
 (let ((?x556 (* (- 2) ?x539)))
 (let ((?x492 (* x x y y x00)))
 (let ((?x554 (* 3 ?x492)))
 (let ((?x483 (* x y y x00)))
 (let ((?x649 (* 6 ?x483)))
 (let ((?x458 (* x x y x00)))
 (let ((?x630 (* (- 3) ?x458)))
 (let ((?x449 (* x y x00)))
 (let ((?x1318 (* (- 6) ?x449)))
 (let ((?x438 (* x x x00)))
 (let ((?x343 (* x y00)))
 (let ((?x305 (* x x00)))
 (let ((?x255 (* y y y x00)))
 (let ((?x663 (* (- 2) ?x255)))
 (let ((?x238 (* y y x00)))
 (let ((?x1322 (* 6 ?x238)))
 (let ((?x226 (* y x00)))
 (let ((?x661 (* (- 6) ?x226)))
 (let ((?x1056 (+ 1 x)))
 (let ((?x134 (+ (- 1) y)))
 (let ((?x195 (* ?x134 ?x134 ?x134 ?x1056 ?x1056 ?x1056)))
 (let ((?x175 (* ?x134 ?x134 ?x134 ?x134 ?x1056 ?x1056)))
 (let ((?x143 (* y y y y00)))
 (let ((?x915 (* (- 2) ?x143)))
 (let ((?x142 (* y y y00)))
 (let ((?x1500 (* 6 ?x142)))
 (let ((?x140 (* y y00)))
 (let ((?x913 (* (- 6) ?x140)))
 (let ((?x1691 (+ y00 x00 (* 3 (* x y)) ?x913 ?x1500 ?x915 ?x175 ?x195 ?x661 ?x1322 ?x663 ?x305 ?x343 ?x438 ?x1318 ?x630 ?x649 ?x554 ?x556 ?x587 ?x852 ?x827 ?x760 ?x1480 ?x888 ?x902 ?x786 ?x826 ?x936 (* 2 (* y y)) ?x1628 ?x949 ?x1559 ?x996 (* (- 1) (* y (- 1) 1)) (* (- 1) (* y (- 1) x)) ?x1572 ?x1576 ?x1580)))
 (let ((?x111 (+ 1 y)))
 (let ((?x103 (+ (- 1) x)))
 (let ((?x673 (* ?x103 ?x103 ?x103 ?x111 ?x111 ?x111)))
 (let ((?x671 (* ?x103 ?x103 ?x111 ?x111 ?x111 ?x111)))
 (let ((?x122 (* x y)))
 (let ((?x1046 (* 4 ?x122)))
 (let ((?x94 (* (- 1) x00)))
 (let ((?x87 (* (- 1) y00)))
 (let ((?x1050 (+ (* 2 y) ?x87 ?x94 ?x1046 ?x913 (* (- 6) ?x142) ?x915 ?x661 (* (- 6) ?x238) ?x663 ?x305 ?x343 (* (- 1) ?x438) (* 6 ?x449) ?x630 ?x649 (* (- 3) ?x492) (* 2 ?x539) ?x587 ?x671 ?x673 ?x852 (* 2 ?x749) (* (- 1) ?x760) (* 6 ?x761) ?x888 ?x902 ?x786 (* (- 3) ?x795) (* (- 1) (* y 1 1)) (* (- 1) (* y 1)) ?x936 (* (- 1) (* y 1 y)) (* 5 (* y y)) (* 3 ?x947) ?x949 (* 3 ?x963) ?x996)))
 (let (($x117 (not (= ?x1050 0))))
 (let (($x113 (= (+ x y ?x87 ?x94) 0)))
 (let (($x856 (and $x113 (or $x117 (not (= ?x1691 0))))))
 (let ((?x1469 (+ (* ?x134 ?x1056) (* (- 1) (* y00 ?x134 ?x134 ?x134)) (* (- 1) (* x00 ?x134 ?x134 ?x134)) (* (- 1) (* x00 ?x1056)) (* (- 1) (* y00 ?x1056)) (* (- 1) (* x00 ?x134 ?x134 ?x134 ?x1056 ?x1056)) ?x175 ?x195 (* ?x1056 ?x1056) (* (- 1) (* y00 ?x134 ?x134 ?x134 ?x1056 ?x1056)) (* ?x134 ?x134 ?x134 ?x1056) (* ?x134 ?x134 ?x134 ?x134))))
 (let ((?x164 (+ (* ?x103 ?x111) (* (- 1) (* y00 ?x111 ?x111 ?x111)) (* (- 1) (* x00 ?x111 ?x111 ?x111)) (* (- 1) (* x00 ?x103)) (* (- 1) (* y00 ?x103)) (* (- 1) (* x00 ?x103 ?x103 ?x111 ?x111 ?x111)) ?x671 ?x673 (* ?x103 ?x103) (* (- 1) (* y00 ?x103 ?x103 ?x111 ?x111 ?x111)) (* ?x103 ?x111 ?x111 ?x111) (* ?x111 ?x111 ?x111 ?x111))))
 (let (($x445 (and (= (+ x ?x87 ?x94 y) 0) (or (not (= ?x164 0)) (not (= ?x1469 0))))))
 (rewrite (= $x445 $x856))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x84 (exists ((x Int) (y Int) )(! (let ((?x59 (- y 1)))
 (let ((?x58 (+ x 1)))
 (let ((?x67 (- (- (* ?x58 ?x59) (* ?x59 ?x59 ?x59 y00)) (* x00 ?x59 ?x59 ?x59))))
 (let ((?x70 (- (- (- ?x67 (* ?x58 x00)) (* ?x58 y00)) (* ?x58 ?x58 x00 ?x59 ?x59 ?x59))))
 (let ((?x74 (+ ?x70 (* ?x58 ?x58 ?x59 ?x59 ?x59 ?x59) (* ?x58 ?x58 ?x58 ?x59 ?x59 ?x59) (* ?x58 ?x58))))
 (let ((?x79 (+ (- ?x74 (* ?x58 ?x58 ?x59 ?x59 ?x59 y00)) (* ?x58 ?x59 ?x59 ?x59) (* ?x59 ?x59 ?x59 ?x59))))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x43 (- (- (* ?x34 ?x35) (* ?x35 ?x35 ?x35 y00)) (* x00 ?x35 ?x35 ?x35))))
 (let ((?x46 (- (- (- ?x43 (* ?x34 x00)) (* ?x34 y00)) (* ?x34 ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x50 (+ ?x46 (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35) (* ?x34 ?x34))))
 (let ((?x55 (+ (- ?x50 (* ?x34 ?x34 ?x35 ?x35 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35) (* ?x35 ?x35 ?x35 ?x35))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x55 0)) (not (= ?x79 0)))))))))))))))) :qid k!27))
 ))
 (let ((?x573 (lambda ((x Int) (y Int) )(let ((?x1056 (+ 1 x)))
 (let ((?x134 (+ (- 1) y)))
 (let ((?x195 (* ?x134 ?x134 ?x134 ?x1056 ?x1056 ?x1056)))
 (let ((?x175 (* ?x134 ?x134 ?x134 ?x134 ?x1056 ?x1056)))
 (let ((?x1469 (+ (* ?x134 ?x1056) (* (- 1) (* y00 ?x134 ?x134 ?x134)) (* (- 1) (* x00 ?x134 ?x134 ?x134)) (* (- 1) (* x00 ?x1056)) (* (- 1) (* y00 ?x1056)) (* (- 1) (* x00 ?x134 ?x134 ?x134 ?x1056 ?x1056)) ?x175 ?x195 (* ?x1056 ?x1056) (* (- 1) (* y00 ?x134 ?x134 ?x134 ?x1056 ?x1056)) (* ?x134 ?x134 ?x134 ?x1056) (* ?x134 ?x134 ?x134 ?x134))))
 (let ((?x111 (+ 1 y)))
 (let ((?x103 (+ (- 1) x)))
 (let ((?x673 (* ?x103 ?x103 ?x103 ?x111 ?x111 ?x111)))
 (let ((?x671 (* ?x103 ?x103 ?x111 ?x111 ?x111 ?x111)))
 (let ((?x164 (+ (* ?x103 ?x111) (* (- 1) (* y00 ?x111 ?x111 ?x111)) (* (- 1) (* x00 ?x111 ?x111 ?x111)) (* (- 1) (* x00 ?x103)) (* (- 1) (* y00 ?x103)) (* (- 1) (* x00 ?x103 ?x103 ?x111 ?x111 ?x111)) ?x671 ?x673 (* ?x103 ?x103) (* (- 1) (* y00 ?x103 ?x103 ?x111 ?x111 ?x111)) (* ?x103 ?x111 ?x111 ?x111) (* ?x111 ?x111 ?x111 ?x111))))
 (let (($x445 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x164 0)) (not (= ?x1469 0))))))
 (let ((?x59 (- y 1)))
 (let ((?x58 (+ x 1)))
 (let ((?x67 (- (- (* ?x58 ?x59) (* ?x59 ?x59 ?x59 y00)) (* x00 ?x59 ?x59 ?x59))))
 (let ((?x70 (- (- (- ?x67 (* ?x58 x00)) (* ?x58 y00)) (* ?x58 ?x58 x00 ?x59 ?x59 ?x59))))
 (let ((?x74 (+ ?x70 (* ?x58 ?x58 ?x59 ?x59 ?x59 ?x59) (* ?x58 ?x58 ?x58 ?x59 ?x59 ?x59) (* ?x58 ?x58))))
 (let ((?x79 (+ (- ?x74 (* ?x58 ?x58 ?x59 ?x59 ?x59 y00)) (* ?x58 ?x59 ?x59 ?x59) (* ?x59 ?x59 ?x59 ?x59))))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x43 (- (- (* ?x34 ?x35) (* ?x35 ?x35 ?x35 y00)) (* x00 ?x35 ?x35 ?x35))))
 (let ((?x46 (- (- (- ?x43 (* ?x34 x00)) (* ?x34 y00)) (* ?x34 ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x50 (+ ?x46 (* ?x34 ?x34 ?x35 ?x35 ?x35 ?x35) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35) (* ?x34 ?x34))))
 (let ((?x55 (+ (- ?x50 (* ?x34 ?x34 ?x35 ?x35 ?x35 y00)) (* ?x34 ?x35 ?x35 ?x35) (* ?x35 ?x35 ?x35 ?x35))))
 (let (($x83 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x55 0)) (not (= ?x79 0))))))
 (rewrite (= $x83 $x445)))))))))))))))))))))))))))
 ))
 (let ((@x85 (asserted $x84)))
 (let ((@x622 (mp (mp @x85 (quant-intro (proof-bind ?x573) (= $x84 $x280)) $x280) (rewrite (= $x280 $x280)) $x280)))
 (let ((@x628 (mp (mp @x622 (quant-intro (proof-bind ?x181) (= $x280 $x1699)) $x1699) (quant-intro (proof-bind ?x646) (= $x1699 $x691)) $x691)))
 (let ((@x1062 (mp (mp~ @x628 (sk (~ $x691 $x1622)) $x1622) (rewrite (= $x1622 $x812)) $x812)))
 (let ((@x1319 (and-elim @x1062 $x1621)))
 (let ((@x572 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1621) $x394)) @x1319 $x394)))
 (let (($x128 (>= ?x940 0)))
 (let ((@x390 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1621) $x128)) @x1319 $x128)))
 (let (($x309 (<= ?x287 0)))
 (let ((@x186 ((_ th-lemma arith) (hypothesis (not $x309)) @x390 @x572 @x390 @x572 @x390 @x572 false)))
 (let ((@x402 (lemma @x186 $x309)))
 (let (($x582 (>= ?x287 0)))
 (let ((@x189 (lemma ((_ th-lemma arith) (hypothesis (not $x582)) @x390 @x572 @x390 @x572 false) $x582)))
 (let (($x453 (not (<= ?x385 0))))
 (let ((@x911 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x886 (not $x309) (not $x582))) @x402 @x189 $x886)))
 (let (($x222 (>= ?x385 0)))
 (let ((@x897 ((_ th-lemma arith) (hypothesis (not $x222)) @x390 @x572 @x189 @x402 @x390 @x572 @x390 @x572 false)))
 (let ((@x1357 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1411 $x453 (not $x222))) (lemma @x897 $x222) (unit-resolution (and-elim @x1062 $x559) @x911 $x957) $x453)))
 ((_ th-lemma arith) @x1357 @x390 @x572 @x189 @x402 @x390 @x572 @x390 @x572 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        4
 :arith-assert-lower        24
 :arith-assert-upper        8
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-grobner             4
 :arith-max-min             637
 :arith-nonlinear-bounds    19
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-pivots              5
 :arith-row-summations      6
 :arith-tableau-max-columns 55
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 5
 :del-clause                3
 :final-checks              8
 :max-memory                3.98
 :memory                    3.30
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                3649614
 :num-checks                1
 :propagations              13
 :rlimit-count              38921
 :time                      0.03
 :total-time                0.03)
