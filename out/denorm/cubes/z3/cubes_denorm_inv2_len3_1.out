unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x381 (* (- 27) c!3)))
 (let ((?x380 (* (- 5) m!1)))
 (let ((?x382 (* (- 32) k!2)))
 (let ((?x388 (* m!1 m!1)))
 (let ((?x114 (* 9 n!0)))
 (let ((?x242 (* (- 9) (* n!0 c!3))))
 (let ((?x158 (* k!2 k!2)))
 (let ((?x387 (* 2 (* k!2 m!1))))
 (let ((?x568 (+ 13 ?x387 ?x158 ?x242 (* (- 9) (* n!0 k!2)) ?x114 ?x388 ?x382 ?x380 ?x381)))
 (let (($x1603 (<= ?x568 0)))
 (let ((?x219 (* (- 1) k!2)))
 (let ((?x265 (* n!0 k!2)))
 (let ((?x330 (+ ?x265 (* 2 n!0) ?x219 (* (- 3) c!3))))
 (let (($x443 (<= ?x330 (- 1))))
 (let (($x130 (= ?x330 (- 1))))
 (let ((?x610 (* k!2 k!2 m!1 m!1)))
 (let ((?x580 (* (- 1) (* k!2 k!2 k!2))))
 (let ((?x186 (+ k!2 m!1)))
 (let ((?x593 (+ 6 m!1)))
 (let ((?x178 (+ 1 n!0)))
 (let ((?x336 (* ?x178 ?x178 ?x178 ?x593 ?x593 ?x593 ?x186 ?x186)))
 (let ((?x358 (* 2 (* k!2 k!2 k!2 m!1))))
 (let ((?x320 (* k!2 k!2 k!2 k!2)))
 (let ((?x187 (* (- 1) (* k!2 k!2 m!1))))
 (let ((?x361 (+ (* (- 1) (* k!2 c!3 c!3)) (* (- 1) (* n!0 k!2 c!3 c!3)) (* k!2 k!2 c!3 c!3) ?x187 (* (- 2) (* n!0 k!2 m!1 c!3)) ?x320 ?x358 ?x336 (* (- 1) (* n!0 k!2 k!2 m!1)) (* (- 2) (* n!0 k!2 k!2 c!3)) (* 2 (* k!2 k!2 k!2 c!3)) (* 2 (* k!2 m!1 c!3 c!3)) (* 4 (* k!2 k!2 m!1 c!3)) (* (- 2) (* k!2 k!2 c!3)) (* 2 (* k!2 m!1 m!1 c!3)) (* m!1 m!1 c!3 c!3) (* (- 1) (* m!1 c!3 c!3)) (* (- 1) (* n!0 m!1 c!3 c!3)) (* (- 2) (* k!2 m!1 c!3)) ?x580 (* (- 1) (* n!0 k!2 k!2 k!2)) ?x610)))
 (let ((?x309 (* ?x361 ?x568)))
 (let (($x346 (= ?x309 0)))
 (let (($x308 (not $x346)))
 (let ((?x295 (+ (* 3 (* n!0 n!0)) (* 3 n!0) ?x219)))
 (let (($x297 (= ?x295 (- 1))))
 (let ((?x254 (+ ?x158 ?x242 ?x114 (* (- 5) k!2) (* (- 18) c!3))))
 (let (($x255 (= ?x254 (- 4))))
 (let ((?x373 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x526 (= ?x373 (- 6))))
 (let (($x344 (and $x526 $x255 $x130 $x297 $x308)))
 (let ((?x116 (+ 13 ?x381 ?x382 ?x380 ?x114 ?x158 (* (- 9) (* k!2 n!0)) (* (- 9) (* c!3 n!0)) ?x387 ?x388)))
 (let ((?x319 (+ (* (- 2) (* c!3 k!2 k!2)) (* (- 1) (* c!3 c!3 m!1)) ?x580 (* (- 1) (* c!3 c!3 k!2)) (* (- 2) (* c!3 k!2 m!1)) (* (- 1) (* c!3 c!3 k!2 n!0)) (* (- 2) (* c!3 k!2 k!2 n!0)) (* (- 1) (* k!2 k!2 k!2 n!0)) (* (- 1) (* c!3 c!3 m!1 n!0)) (* (- 2) (* c!3 k!2 m!1 n!0)) (* (- 1) (* k!2 k!2 m!1 n!0)) ?x187 (* c!3 c!3 k!2 k!2) ?x336 ?x610 (* 2 (* c!3 k!2 m!1 m!1)) (* c!3 c!3 m!1 m!1) ?x358 (* 4 (* c!3 k!2 k!2 m!1)) (* 2 (* c!3 c!3 k!2 m!1)) ?x320 (* 2 (* c!3 k!2 k!2 k!2)))))
 (let (($x588 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x392 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x158) (* 9 (* c!3 n!0)))))
 (let (($x394 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x392 4) $x588 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= (* ?x319 ?x116) 0)))))
 (let (($x173 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x481 (+ 13 (* (- 27) c) (* (- 32) k) ?x426 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) (* m m))))
 (let ((?x578 (* 2 (* c k k k))))
 (let ((?x611 (* k k k k)))
 (let ((?x577 (* 2 (* c c k m))))
 (let ((?x576 (* 4 (* c k k m))))
 (let ((?x575 (* 2 (* k k k m))))
 (let ((?x602 (* c c m m)))
 (let ((?x574 (* 2 (* c k m m))))
 (let ((?x599 (* k k m m)))
 (let ((?x72 (+ k m)))
 (let ((?x528 (+ 6 m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x560 (* ?x341 ?x341 ?x341 ?x528 ?x528 ?x528 ?x72 ?x72)))
 (let ((?x533 (* c c k k)))
 (let ((?x522 (* (- 1) (* k k m n))))
 (let ((?x516 (* (- 1) (* c c m n))))
 (let ((?x514 (* (- 1) (* k k k n))))
 (let ((?x508 (* (- 1) (* c c k n))))
 (let ((?x129 (+ (* (- 2) (* c k k)) (* (- 1) (* c c m)) (* (- 1) (* k k k)) (* (- 1) (* c c k)) (* (- 2) (* c k m)) ?x508 (* (- 2) (* c k k n)) ?x514 ?x516 (* (- 2) (* c k m n)) ?x522 (* (- 1) (* k k m)) ?x533 ?x560 ?x599 ?x574 ?x602 ?x575 ?x576 ?x577 ?x611 ?x578)))
 (let (($x298 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x260 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x208 (= (+ ?x40 ?x44 ?x210 ?x211 (* 9 (* c n))) 4)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 $x208 $x260 $x298 (not (= (* ?x129 ?x481) 0))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x390 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x98 (* (- 18) c)))
 (let ((?x101 (+ 13 ?x98 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x426 ?x48 ?x78)))
 (let ((?x528 (+ 6 m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x560 (* ?x341 ?x341 ?x341 ?x528 ?x528 ?x528 ?x72 ?x72)))
 (let ((?x316 (+ (* (- 1) (* ?x341 ?x72 (+ c k) (+ c k))) ?x560 (* ?x72 ?x72 (+ c k) (+ c k)))))
 (let (($x145 (not (= (* ?x316 ?x101) 0))))
 (let (($x168 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x153 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x210 ?x211) 4) $x153 $x168 $x145)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x256 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x481 (+ 13 (* (- 27) c) (* (- 32) k) ?x426 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) (* m m))))
 (let ((?x578 (* 2 (* c k k k))))
 (let ((?x611 (* k k k k)))
 (let ((?x577 (* 2 (* c c k m))))
 (let ((?x576 (* 4 (* c k k m))))
 (let ((?x575 (* 2 (* k k k m))))
 (let ((?x602 (* c c m m)))
 (let ((?x574 (* 2 (* c k m m))))
 (let ((?x599 (* k k m m)))
 (let ((?x72 (+ k m)))
 (let ((?x528 (+ 6 m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x560 (* ?x341 ?x341 ?x341 ?x528 ?x528 ?x528 ?x72 ?x72)))
 (let ((?x533 (* c c k k)))
 (let ((?x522 (* (- 1) (* k k m n))))
 (let ((?x516 (* (- 1) (* c c m n))))
 (let ((?x514 (* (- 1) (* k k k n))))
 (let ((?x508 (* (- 1) (* c c k n))))
 (let ((?x129 (+ (* (- 2) (* c k k)) (* (- 1) (* c c m)) (* (- 1) (* k k k)) (* (- 1) (* c c k)) (* (- 2) (* c k m)) ?x508 (* (- 2) (* c k k n)) ?x514 ?x516 (* (- 2) (* c k m n)) ?x522 (* (- 1) (* k k m)) ?x533 ?x560 ?x599 ?x574 ?x602 ?x575 ?x576 ?x577 ?x611 ?x578)))
 (let (($x298 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x260 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x208 (= (+ ?x40 ?x44 ?x210 ?x211 (* 9 (* c n))) 4)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x572 (and $x124 $x208 $x260 $x298 (not (= (* ?x129 ?x481) 0)))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x98 (* (- 18) c)))
 (let ((?x101 (+ 13 ?x98 (* (- 23) k) (* (- 9) (* ?x341 (+ c k))) ?x426 ?x48 ?x78)))
 (let ((?x316 (+ (* (- 1) (* ?x341 ?x72 (+ c k) (+ c k))) ?x560 (* ?x72 ?x72 (+ c k) (+ c k)))))
 (let (($x145 (not (= (* ?x316 ?x101) 0))))
 (let (($x168 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x153 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x95 (and $x124 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x210 ?x211) 4) $x153 $x168 $x145)))
 (rewrite (= $x95 $x572))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x147 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x98 (* (- 18) c)))
 (let ((?x101 (+ 13 ?x98 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x426 ?x48 ?x78)))
 (let ((?x528 (+ 6 m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x560 (* ?x341 ?x341 ?x341 ?x528 ?x528 ?x528 ?x72 ?x72)))
 (let ((?x316 (+ (* (- 1) (* ?x341 ?x72 (+ c k) (+ c k))) ?x560 (* ?x72 ?x72 (+ c k) (+ c k)))))
 (let (($x145 (not (= (* ?x316 ?x101) 0))))
 (let (($x168 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x613 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x216 (= (+ ?x98 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 $x216 $x613 $x168 $x145)))))))))))))))) :qid k!34))
 ))
 (let ((?x391 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x98 (* (- 18) c)))
 (let ((?x101 (+ 13 ?x98 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x426 ?x48 ?x78)))
 (let ((?x528 (+ 6 m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x560 (* ?x341 ?x341 ?x341 ?x528 ?x528 ?x528 ?x72 ?x72)))
 (let ((?x316 (+ (* (- 1) (* ?x341 ?x72 (+ c k) (+ c k))) ?x560 (* ?x72 ?x72 (+ c k) (+ c k)))))
 (let (($x145 (not (= (* ?x316 ?x101) 0))))
 (let (($x168 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x153 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x95 (and $x124 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x210 ?x211) 4) $x153 $x168 $x145)))
 (let (($x613 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x216 (= (+ ?x98 (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49) (- 4))))
 (let (($x275 (and $x124 $x216 $x613 $x168 $x145)))
 (rewrite (= $x275 $x95))))))))))))))))))))))))))
 ))
 (let (($x91 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x82 (+ m 6)))
 (let ((?x72 (+ k m)))
 (let ((?x85 (+ (* (- 1) (+ c k) (+ c k) ?x72 ?x70) (* ?x72 ?x72 ?x82 ?x82 ?x82 ?x70 ?x70 ?x70) (* (+ c k) (+ c k) ?x72 ?x72))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x75 (- (- (* 4 1) (* 18 (+ c k))) (* 9 (+ c k) ?x70))))
 (let (($x88 (not (= (* (+ (- ?x75 (* 5 ?x72)) (* 9 ?x70) ?x78) ?x85) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x88)))))))))))))))) :qid k!34))
 ))
 (let ((?x525 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x426 (* (- 5) m)))
 (let ((?x98 (* (- 18) c)))
 (let ((?x101 (+ 13 ?x98 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x426 ?x48 ?x78)))
 (let ((?x528 (+ 6 m)))
 (let ((?x341 (+ 1 n)))
 (let ((?x560 (* ?x341 ?x341 ?x341 ?x528 ?x528 ?x528 ?x72 ?x72)))
 (let ((?x316 (+ (* (- 1) (* ?x341 ?x72 (+ c k) (+ c k))) ?x560 (* ?x72 ?x72 (+ c k) (+ c k)))))
 (let (($x145 (not (= (* ?x316 ?x101) 0))))
 (let (($x168 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x613 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x216 (= (+ ?x98 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x275 (and $x124 $x216 $x613 $x168 $x145)))
 (let ((?x70 (+ n 1)))
 (let ((?x82 (+ m 6)))
 (let ((?x85 (+ (* (- 1) (+ c k) (+ c k) ?x72 ?x70) (* ?x72 ?x72 ?x82 ?x82 ?x82 ?x70 ?x70 ?x70) (* (+ c k) (+ c k) ?x72 ?x72))))
 (let ((?x75 (- (- (* 4 1) (* 18 (+ c k))) (* 9 (+ c k) ?x70))))
 (let (($x88 (not (= (* (+ (- ?x75 (* 5 ?x72)) (* 9 ?x70) ?x78) ?x85) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x90 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x88))))
 (rewrite (= $x90 $x275)))))))))))))))))))))))))))))))
 ))
 (let ((@x92 (asserted $x91)))
 (let ((@x106 (mp (mp @x92 (quant-intro (proof-bind ?x525) (= $x91 $x147)) $x147) (rewrite (= $x147 $x147)) $x147)))
 (let ((@x267 (mp (mp @x106 (quant-intro (proof-bind ?x391) (= $x147 $x390)) $x390) (quant-intro (proof-bind ?x256) (= $x390 $x173)) $x173)))
 (let ((@x201 (mp (mp~ @x267 (sk (~ $x173 $x394)) $x394) (rewrite (= $x394 $x344)) $x344)))
 (let ((@x280 (and-elim @x201 $x130)))
 (let ((@x217 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x130) $x443)) @x280 $x443)))
 (let (($x419 (>= ?x330 (- 1))))
 (let ((@x184 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x130) $x419)) @x280 $x419)))
 (let (($x412 (<= ?x254 (- 4))))
 (let ((@x154 (and-elim @x201 $x255)))
 (let ((@x310 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x255) $x412)) @x154 $x412)))
 (let (($x408 (>= ?x254 (- 4))))
 (let ((@x427 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x255) $x408)) @x154 $x408)))
 (let (($x420 (<= ?x373 (- 6))))
 (let ((@x340 (and-elim @x201 $x526)))
 (let ((@x195 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x526) $x420)) @x340 $x420)))
 (let (($x370 (>= ?x373 (- 6))))
 (let ((@x456 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x526) $x370)) @x340 $x370)))
 (let (($x421 (<= ?x295 (- 1))))
 (let ((@x281 (and-elim @x201 $x297)))
 (let ((@x529 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x297) $x421)) @x281 $x421)))
 (let (($x248 (>= ?x295 (- 1))))
 (let ((@x140 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x297) $x248)) @x281 $x248)))
 (let ((@x1612 ((_ th-lemma arith) (hypothesis (not $x1603)) @x140 @x529 @x140 @x529 @x184 @x217 @x427 @x310 @x427 @x310 @x427 @x310 @x184 @x217 @x427 @x310 @x456 @x195 @x456 @x195 @x184 @x217 @x456 @x195 @x184 @x217 @x427 @x310 @x184 @x217 false)))
 (let ((@x1579 (lemma @x1612 $x1603)))
 (let (($x2088 (>= ?x568 0)))
 (let ((@x1732 ((_ th-lemma arith) (hypothesis (not $x2088)) @x456 @x195 @x456 @x195 @x456 @x195 @x427 @x310 @x456 @x195 @x140 @x529 @x140 @x529 @x184 @x217 @x456 @x195 false)))
 (let ((@x1593 (lemma @x1732 $x2088)))
 (let (($x1516 (not (<= ?x309 0))))
 (let (($x247 (>= ?x309 0)))
 (let ((@x2236 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x247)) (hypothesis $x2088) @x1579 false) (or (not $x2088) $x247))))
 (let ((@x1437 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x346 $x1516 (not $x247))) (and-elim @x201 $x308) (or $x1516 (not $x247)))))
 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x1437 (unit-resolution @x2236 @x1593 $x247) $x1516) @x1593 @x1579 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 184
 :arith-assert-diseq        20
 :arith-assert-lower        2347
 :arith-assert-upper        2249
 :arith-bound-prop          19
 :arith-branch-var          65
 :arith-conflicts           76
 :arith-eq-adapter          21
 :arith-fixed-eqs           306
 :arith-gcd-tests           758
 :arith-gomory-cuts         50
 :arith-grobner             123
 :arith-ineq-splits         65
 :arith-max-min             14315
 :arith-nonlinear-bounds    580
 :arith-nonlinear-horner    1561
 :arith-num-rows            23
 :arith-offset-eqs          7
 :arith-patches             164
 :arith-patches_succ        34
 :arith-pivots              4764
 :arith-pseudo-nonlinear    406
 :arith-row-summations      44814
 :arith-tableau-max-columns 81
 :arith-tableau-max-rows    23
 :conflicts                 88
 :decisions                 340
 :del-clause                176
 :final-checks              409
 :max-memory                4.85
 :memory                    3.35
 :minimized-lits            10
 :mk-bool-var               526
 :mk-clause                 408
 :num-allocs                1679326047
 :num-checks                1
 :propagations              554
 :rlimit-count              4492508
 :time                      4.14
 :total-time                4.13)
