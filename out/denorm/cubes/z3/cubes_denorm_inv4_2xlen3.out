unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x141 (* (- 1) k!2)))
 (let ((?x292 (* n!0 n!0)))
 (let ((?x175 (* 3 ?x292)))
 (let ((?x146 (+ ?x175 (* 3 n!0) ?x141)))
 (let (($x121 (<= ?x146 (- 1))))
 (let (($x579 (= ?x146 (- 1))))
 (let ((?x667 (* c!3 c!3)))
 (let ((?x657 (* c!3 c!3 n!0 n!0)))
 (let ((?x663 (+ c!3 k!2)))
 (let ((?x481 (+ m!1 k!2)))
 (let ((?x173 (+ 6 m!1)))
 (let ((?x566 (* n!0 n!0 k!2 k!2)))
 (let ((?x543 (* k!2 k!2)))
 (let ((?x252 (* 2 (* c!3 c!3 n!0))))
 (let ((?x420 (* 2 (* c!3 k!2))))
 (let ((?x223 (+ 1 n!0)))
 (let ((?x475 (+ (* (- 1) (* ?x223 ?x223 ?x173 ?x173 ?x481 ?x481 ?x481 ?x663 ?x663)) ?x420 (* 2 (* n!0 k!2 k!2)) (* 2 (* c!3 n!0 n!0 k!2)) ?x252 ?x543 ?x566 (* ?x173 ?x173 ?x481 ?x481 ?x481 ?x663 ?x663 ?x663) (* 4 (* c!3 n!0 k!2)) ?x657 ?x667)))
 (let ((?x570 (* 6 (* m!1 m!1))))
 (let ((?x584 (* 6 ?x543)))
 (let ((?x111 (* m!1 m!1 m!1)))
 (let ((?x418 (+ (* (- 1) (* ?x223 ?x481 ?x481 ?x481 ?x663 ?x663 ?x663)) ?x111 (* n!0 n!0 m!1 m!1 m!1) (* 12 (* n!0 n!0 m!1 k!2)) (* 2 (* m!1 m!1 k!2)) (* 12 (* n!0 k!2 k!2)) (* m!1 k!2 k!2) (* 6 (* n!0 n!0 m!1 m!1)) (* 2 (* n!0 n!0 m!1 m!1 k!2)) (* (- 1) (* ?x223 ?x223 ?x173 ?x173 ?x481 ?x481 ?x663)) ?x584 (* 2 (* n!0 m!1 m!1 m!1)) (* 4 (* n!0 m!1 m!1 k!2)) (* 6 ?x566) (* 2 (* n!0 m!1 k!2 k!2)) (* 24 (* n!0 m!1 k!2)) (* 12 (* n!0 m!1 m!1)) (* 12 (* m!1 k!2)) (* n!0 n!0 m!1 k!2 k!2) ?x570)))
 (let ((?x478 (* ?x418 ?x475 (+ 7 ?x175 (* 9 n!0) (* (- 1) m!1) ?x141))))
 (let (($x487 (= ?x478 0)))
 (let (($x492 (not $x487)))
 (let (($x246 (= (+ (* 3 c!3) (* (- 1) (* n!0 k!2)) (* (- 2) n!0) k!2) 1)))
 (let ((?x373 (* 5 k!2)))
 (let ((?x428 (* 9 (* c!3 n!0))))
 (let ((?x545 (* (- 1) ?x543)))
 (let ((?x196 (* (- 9) n!0)))
 (let ((?x540 (* 18 c!3)))
 (let ((?x144 (* (- 1) m!1)))
 (let ((?x400 (+ (* 6 n!0) ?x144)))
 (let (($x290 (= ?x400 (- 6))))
 (let (($x477 (and $x290 (= (+ ?x540 ?x196 ?x545 ?x428 ?x373) 4) $x246 $x579 $x492)))
 (let ((?x357 (+ k!2 m!1)))
 (let ((?x224 (* k!2 k!2 n!0 n!0)))
 (let ((?x184 (+ ?x543 (* 2 (* k!2 k!2 n!0)) (* 4 (* c!3 k!2 n!0)) ?x252 ?x420 ?x667 ?x224 (* 2 (* c!3 k!2 n!0 n!0)) ?x657 (* (- 1) (* ?x223 ?x223 ?x173 ?x173 ?x357 ?x357 ?x357 ?x663 ?x663)) (* ?x173 ?x173 ?x357 ?x357 ?x357 ?x663 ?x663 ?x663))))
 (let ((?x261 (+ ?x584 (* (- 1) (* ?x223 ?x223 ?x173 ?x173 ?x357 ?x357 ?x663)) (* (- 1) (* ?x223 ?x357 ?x357 ?x357 ?x663 ?x663 ?x663)) (* 12 (* k!2 k!2 n!0)) (* 6 ?x224) (* 6 (* m!1 m!1 n!0 n!0)) (* 12 (* k!2 m!1 n!0 n!0)) (* 2 (* m!1 m!1 m!1 n!0)) (* 4 (* k!2 m!1 m!1 n!0)) (* 2 (* k!2 k!2 m!1 n!0)) (* 12 (* m!1 m!1 n!0)) (* 24 (* k!2 m!1 n!0)) ?x111 (* 2 (* k!2 m!1 m!1)) (* k!2 k!2 m!1) ?x570 (* 12 (* k!2 m!1)) (* m!1 m!1 m!1 n!0 n!0) (* 2 (* k!2 m!1 m!1 n!0 n!0)) (* k!2 k!2 m!1 n!0 n!0))))
 (let (($x257 (not (= (* ?x261 ?x184 (+ 7 ?x141 ?x144 (* 9 n!0) ?x175)) 0))))
 (let (($x632 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x408 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x540 ?x373 ?x196 ?x545 ?x428) 4) $x632 (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x292)) 1) $x257)))
 (let (($x435 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x271 (* n n)))
 (let ((?x272 (* 3 ?x271)))
 (let ((?x48 (* 9 n)))
 (let ((?x356 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let ((?x178 (+ 7 ?x240 ?x356 ?x48 ?x272)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x393 (+ 6 m)))
 (let ((?x535 (* ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x308 (+ 1 n)))
 (let ((?x635 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75))))
 (let ((?x460 (* c c n n)))
 (let ((?x401 (* 2 (* c k n n))))
 (let ((?x457 (* k k n n)))
 (let ((?x451 (* c c)))
 (let ((?x405 (* 2 (* c k))))
 (let ((?x404 (* 2 (* c c n))))
 (let ((?x403 (* 4 (* c k n))))
 (let ((?x423 (* k k n)))
 (let ((?x402 (* 2 ?x423)))
 (let ((?x49 (* k k)))
 (let ((?x244 (+ ?x49 ?x402 ?x403 ?x404 ?x405 ?x451 ?x457 ?x401 ?x460 ?x635 ?x535)))
 (let ((?x639 (* k k m n n)))
 (let ((?x669 (* 2 (* k m m n n))))
 (let ((?x634 (* m m m n n)))
 (let ((?x623 (* k m)))
 (let ((?x515 (* 12 ?x623)))
 (let ((?x612 (* 6 (* m m))))
 (let ((?x611 (* k k m)))
 (let ((?x512 (* 2 (* k m m))))
 (let ((?x596 (* m m m)))
 (let ((?x511 (* 24 (* k m n))))
 (let ((?x508 (* 12 (* m m n))))
 (let ((?x509 (* 2 (* k k m n))))
 (let ((?x506 (* 4 (* k m m n))))
 (let ((?x507 (* 2 (* m m m n))))
 (let ((?x668 (* 12 (* k m n n))))
 (let ((?x522 (* 6 (* m m n n))))
 (let ((?x538 (* 6 ?x457)))
 (let ((?x513 (* 12 ?x423)))
 (let ((?x336 (* (- 1) (* ?x308 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75))))
 (let ((?x137 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x75))))
 (let ((?x628 (* 6 ?x49)))
 (let ((?x149 (+ ?x628 ?x137 ?x336 ?x513 ?x538 ?x522 ?x668 ?x507 ?x506 ?x509 ?x508 ?x511 ?x596 ?x512 ?x611 ?x612 ?x515 ?x634 ?x669 ?x639)))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 (* c n))) 4)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 $x210 $x262 $x300 (not (= (* ?x149 ?x244 ?x178) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x561 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x271 (* n n)))
 (let ((?x272 (* 3 ?x271)))
 (let ((?x48 (* 9 n)))
 (let ((?x356 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let ((?x178 (+ 7 ?x240 ?x356 ?x48 ?x272)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x393 (+ 6 m)))
 (let ((?x535 (* ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x308 (+ 1 n)))
 (let ((?x635 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75))))
 (let ((?x460 (* c c n n)))
 (let ((?x401 (* 2 (* c k n n))))
 (let ((?x457 (* k k n n)))
 (let ((?x451 (* c c)))
 (let ((?x405 (* 2 (* c k))))
 (let ((?x404 (* 2 (* c c n))))
 (let ((?x403 (* 4 (* c k n))))
 (let ((?x423 (* k k n)))
 (let ((?x402 (* 2 ?x423)))
 (let ((?x49 (* k k)))
 (let ((?x244 (+ ?x49 ?x402 ?x403 ?x404 ?x405 ?x451 ?x457 ?x401 ?x460 ?x635 ?x535)))
 (let ((?x639 (* k k m n n)))
 (let ((?x669 (* 2 (* k m m n n))))
 (let ((?x634 (* m m m n n)))
 (let ((?x612 (* 6 (* m m))))
 (let ((?x611 (* k k m)))
 (let ((?x512 (* 2 (* k m m))))
 (let ((?x596 (* m m m)))
 (let ((?x511 (* 24 (* k m n))))
 (let ((?x508 (* 12 (* m m n))))
 (let ((?x509 (* 2 (* k k m n))))
 (let ((?x506 (* 4 (* k m m n))))
 (let ((?x507 (* 2 (* m m m n))))
 (let ((?x668 (* 12 (* k m n n))))
 (let ((?x522 (* 6 (* m m n n))))
 (let ((?x538 (* 6 ?x457)))
 (let ((?x513 (* 12 ?x423)))
 (let ((?x336 (* (- 1) (* ?x308 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75))))
 (let ((?x137 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x75))))
 (let ((?x628 (* 6 ?x49)))
 (let ((?x631 (+ ?x628 ?x137 ?x336 ?x513 ?x538 ?x522 ?x668 ?x507 ?x506 ?x509 ?x508 ?x511 ?x596 ?x512 ?x611 ?x612 (* 6 (* k m)) ?x634 ?x669 ?x639 (* 6 (* m k)))))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 (* c n))) 4)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 $x210 $x262 $x300 (not (= (* ?x631 ?x244 ?x178) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x661 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x271 (* n n)))
 (let ((?x272 (* 3 ?x271)))
 (let ((?x48 (* 9 n)))
 (let ((?x356 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let ((?x178 (+ 7 ?x240 ?x356 ?x48 ?x272)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x393 (+ 6 m)))
 (let ((?x535 (* ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x308 (+ 1 n)))
 (let ((?x635 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75))))
 (let ((?x460 (* c c n n)))
 (let ((?x401 (* 2 (* c k n n))))
 (let ((?x457 (* k k n n)))
 (let ((?x451 (* c c)))
 (let ((?x405 (* 2 (* c k))))
 (let ((?x404 (* 2 (* c c n))))
 (let ((?x403 (* 4 (* c k n))))
 (let ((?x423 (* k k n)))
 (let ((?x402 (* 2 ?x423)))
 (let ((?x49 (* k k)))
 (let ((?x244 (+ ?x49 ?x402 ?x403 ?x404 ?x405 ?x451 ?x457 ?x401 ?x460 ?x635 ?x535)))
 (let ((?x639 (* k k m n n)))
 (let ((?x669 (* 2 (* k m m n n))))
 (let ((?x634 (* m m m n n)))
 (let ((?x623 (* k m)))
 (let ((?x515 (* 12 ?x623)))
 (let ((?x612 (* 6 (* m m))))
 (let ((?x611 (* k k m)))
 (let ((?x512 (* 2 (* k m m))))
 (let ((?x596 (* m m m)))
 (let ((?x511 (* 24 (* k m n))))
 (let ((?x508 (* 12 (* m m n))))
 (let ((?x509 (* 2 (* k k m n))))
 (let ((?x506 (* 4 (* k m m n))))
 (let ((?x507 (* 2 (* m m m n))))
 (let ((?x668 (* 12 (* k m n n))))
 (let ((?x522 (* 6 (* m m n n))))
 (let ((?x538 (* 6 ?x457)))
 (let ((?x513 (* 12 ?x423)))
 (let ((?x336 (* (- 1) (* ?x308 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75))))
 (let ((?x137 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x75))))
 (let ((?x628 (* 6 ?x49)))
 (let ((?x149 (+ ?x628 ?x137 ?x336 ?x513 ?x538 ?x522 ?x668 ?x507 ?x506 ?x509 ?x508 ?x511 ?x596 ?x512 ?x611 ?x612 ?x515 ?x634 ?x669 ?x639)))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 (* c n))) 4)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x309 (and $x126 $x210 $x262 $x300 (not (= (* ?x149 ?x244 ?x178) 0)))))
 (let ((?x631 (+ ?x628 ?x137 ?x336 ?x513 ?x538 ?x522 ?x668 ?x507 ?x506 ?x509 ?x508 ?x511 ?x596 ?x512 ?x611 ?x612 (* 6 ?x623) ?x634 ?x669 ?x639 (* 6 (* m k)))))
 (let (($x254 (and $x126 $x210 $x262 $x300 (not (= (* ?x631 ?x244 ?x178) 0)))))
 (rewrite (= $x254 $x309)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x550 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x356 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let ((?x642 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x240 ?x356 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x393 (+ 6 m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x635 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75))))
 (let ((?x535 (* ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x336 (* (- 1) (* ?x308 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75))))
 (let ((?x137 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x75))))
 (let ((?x296 (* (+ ?x137 (* ?x308 ?x308 ?x393 ?x71 ?x71) ?x336) (+ ?x535 ?x635 (* ?x308 ?x308 ?x75 ?x75)) ?x642)))
 (let (($x571 (not (= ?x296 0))))
 (let (($x593 (= (+ (* 3 (* n n)) ?x240 ?x65) (- 1))))
 (let (($x426 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x426 $x593 $x571))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x558 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x271 (* n n)))
 (let ((?x272 (* 3 ?x271)))
 (let ((?x48 (* 9 n)))
 (let ((?x356 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let ((?x178 (+ 7 ?x240 ?x356 ?x48 ?x272)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x393 (+ 6 m)))
 (let ((?x535 (* ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x308 (+ 1 n)))
 (let ((?x635 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75))))
 (let ((?x460 (* c c n n)))
 (let ((?x401 (* 2 (* c k n n))))
 (let ((?x457 (* k k n n)))
 (let ((?x451 (* c c)))
 (let ((?x405 (* 2 (* c k))))
 (let ((?x404 (* 2 (* c c n))))
 (let ((?x403 (* 4 (* c k n))))
 (let ((?x423 (* k k n)))
 (let ((?x402 (* 2 ?x423)))
 (let ((?x49 (* k k)))
 (let ((?x244 (+ ?x49 ?x402 ?x403 ?x404 ?x405 ?x451 ?x457 ?x401 ?x460 ?x635 ?x535)))
 (let ((?x639 (* k k m n n)))
 (let ((?x669 (* 2 (* k m m n n))))
 (let ((?x634 (* m m m n n)))
 (let ((?x612 (* 6 (* m m))))
 (let ((?x611 (* k k m)))
 (let ((?x512 (* 2 (* k m m))))
 (let ((?x596 (* m m m)))
 (let ((?x511 (* 24 (* k m n))))
 (let ((?x508 (* 12 (* m m n))))
 (let ((?x509 (* 2 (* k k m n))))
 (let ((?x506 (* 4 (* k m m n))))
 (let ((?x507 (* 2 (* m m m n))))
 (let ((?x668 (* 12 (* k m n n))))
 (let ((?x522 (* 6 (* m m n n))))
 (let ((?x538 (* 6 ?x457)))
 (let ((?x513 (* 12 ?x423)))
 (let ((?x336 (* (- 1) (* ?x308 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75))))
 (let ((?x137 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x75))))
 (let ((?x628 (* 6 ?x49)))
 (let ((?x631 (+ ?x628 ?x137 ?x336 ?x513 ?x538 ?x522 ?x668 ?x507 ?x506 ?x509 ?x508 ?x511 ?x596 ?x512 ?x611 ?x612 (* 6 (* k m)) ?x634 ?x669 ?x639 (* 6 (* m k)))))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) ?x271)) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 (* c n))) 4)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x254 (and $x126 $x210 $x262 $x300 (not (= (* ?x631 ?x244 ?x178) 0)))))
 (let ((?x296 (* (+ ?x137 (* ?x308 ?x308 ?x393 ?x71 ?x71) ?x336) (+ ?x535 ?x635 (* ?x308 ?x308 ?x75 ?x75)) (+ 4 (* 3 (* ?x308 ?x308)) ?x240 ?x356 (* 3 n)))))
 (let (($x571 (not (= ?x296 0))))
 (let (($x593 (= (+ ?x272 ?x240 (* 3 n)) (- 1))))
 (let (($x426 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x645 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x426 $x593 $x571)))
 (rewrite (= $x645 $x254))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x564 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x356 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let ((?x642 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x240 ?x356 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x393 (+ 6 m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x635 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75))))
 (let ((?x535 (* ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x336 (* (- 1) (* ?x308 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75))))
 (let ((?x137 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x75))))
 (let ((?x296 (* (+ ?x137 (* ?x308 ?x308 ?x393 ?x71 ?x71) ?x336) (+ ?x535 ?x635 (* ?x308 ?x308 ?x75 ?x75)) ?x642)))
 (let (($x571 (not (= ?x296 0))))
 (let (($x593 (= (+ (* 3 (* n n)) ?x240 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x754 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 (= ?x754 (- 4)) (= (+ (* (- 3) c) (* n k) ?x240 (* 2 n)) (- 1)) $x593 $x571)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x547 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x356 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let ((?x642 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x240 ?x356 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x393 (+ 6 m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x635 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75))))
 (let ((?x535 (* ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x336 (* (- 1) (* ?x308 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75))))
 (let ((?x137 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x75))))
 (let ((?x296 (* (+ ?x137 (* ?x308 ?x308 ?x393 ?x71 ?x71) ?x336) (+ ?x535 ?x635 (* ?x308 ?x308 ?x75 ?x75)) ?x642)))
 (let (($x571 (not (= ?x296 0))))
 (let (($x593 (= (+ (* 3 (* n n)) ?x240 ?x65) (- 1))))
 (let (($x426 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x645 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x426 $x593 $x571)))
 (let ((?x48 (* 9 n)))
 (let ((?x754 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x653 (and $x126 (= ?x754 (- 4)) (= (+ (* (- 3) c) (* n k) ?x240 (* 2 n)) (- 1)) $x593 $x571)))
 (rewrite (= $x653 $x645)))))))))))))))))))))))))))))
 ))
 (let (($x93 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ n 1)))
 (let ((?x71 (+ k m)))
 (let ((?x75 (+ c k)))
 (let ((?x76 (+ m 6)))
 (let ((?x85 (+ (* (- 1) ?x75 ?x71 ?x71 ?x76 ?x76 ?x68 ?x68) (* ?x71 ?x71 ?x76 ?x68 ?x68))))
 (let ((?x79 (- (* ?x75 ?x75 ?x75 ?x71 ?x71 ?x71 ?x76 ?x76) (* ?x75 ?x75 ?x71 ?x71 ?x71 ?x76 ?x76 ?x68 ?x68))))
 (let ((?x88 (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) (+ ?x79 (* ?x75 ?x75 ?x68 ?x68)) (- ?x85 (* ?x75 ?x75 ?x75 ?x71 ?x71 ?x71 ?x68)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x88 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x581 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x356 (* (- 1) m)))
 (let ((?x240 (* (- 1) k)))
 (let ((?x642 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x240 ?x356 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x393 (+ 6 m)))
 (let ((?x308 (+ 1 n)))
 (let ((?x635 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75))))
 (let ((?x535 (* ?x393 ?x393 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x336 (* (- 1) (* ?x308 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75))))
 (let ((?x137 (* (- 1) (* ?x308 ?x308 ?x393 ?x393 ?x71 ?x71 ?x75))))
 (let ((?x296 (* (+ ?x137 (* ?x308 ?x308 ?x393 ?x71 ?x71) ?x336) (+ ?x535 ?x635 (* ?x308 ?x308 ?x75 ?x75)) ?x642)))
 (let (($x571 (not (= ?x296 0))))
 (let (($x593 (= (+ (* 3 (* n n)) ?x240 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x754 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x653 (and $x126 (= ?x754 (- 4)) (= (+ (* (- 3) c) (* n k) ?x240 (* 2 n)) (- 1)) $x593 $x571)))
 (let ((?x68 (+ n 1)))
 (let ((?x76 (+ m 6)))
 (let ((?x85 (+ (* (- 1) ?x75 ?x71 ?x71 ?x76 ?x76 ?x68 ?x68) (* ?x71 ?x71 ?x76 ?x68 ?x68))))
 (let ((?x79 (- (* ?x75 ?x75 ?x75 ?x71 ?x71 ?x71 ?x76 ?x76) (* ?x75 ?x75 ?x71 ?x71 ?x71 ?x76 ?x76 ?x68 ?x68))))
 (let ((?x88 (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) (+ ?x79 (* ?x75 ?x75 ?x68 ?x68)) (- ?x85 (* ?x75 ?x75 ?x75 ?x71 ?x71 ?x71 ?x68)))))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x92 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 (= (+ (- (+ 1 (* 3 n n)) k) ?x65) 0) (or (not (= ?x88 0))))))
 (rewrite (= $x92 $x653)))))))))))))))))))))))))))))))))
 ))
 (let ((@x94 (asserted $x93)))
 (let ((@x646 (mp (mp @x94 (quant-intro (proof-bind ?x581) (= $x93 $x564)) $x564) (rewrite (= $x564 $x564)) $x564)))
 (let ((@x384 (mp (mp @x646 (quant-intro (proof-bind ?x547) (= $x564 $x550)) $x550) (quant-intro (proof-bind ?x558) (= $x550 $x561)) $x561)))
 (let ((@x624 (mp~ (mp @x384 (quant-intro (proof-bind ?x661) (= $x561 $x435)) $x435) (sk (~ $x435 $x408)) $x408)))
 (let ((@x567 (mp @x624 (rewrite (= $x408 $x477)) $x477)))
 (let ((@x267 (and-elim @x567 $x579)))
 (let ((@x295 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x579) $x121)) @x267 $x121)))
 (let (($x681 (<= ?x400 (- 6))))
 (let ((@x279 (and-elim @x567 $x290)))
 (let ((@x151 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x290) $x681)) @x279 $x681)))
 (let (($x474 (>= ?x146 (- 1))))
 (let ((@x618 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x579) $x474)) @x267 $x474)))
 (let (($x682 (>= ?x400 (- 6))))
 (let ((@x158 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x290) $x682)) @x279 $x682)))
 (let (($x679 (not (<= ?x478 0))))
 (let (($x473 (>= ?x478 0)))
 (let ((@x155 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x473)) @x158 @x618 @x151 @x295 false) $x473)))
 (let ((@x745 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x487 $x679 (not $x473))) (and-elim @x567 $x492) (or $x679 (not $x473)))))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution @x745 @x155 $x679) @x158 @x618 @x151 @x295 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        30
 :arith-assert-upper        27
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-fixed-eqs           1
 :arith-gcd-tests           3
 :arith-ineq-splits         1
 :arith-max-min             167
 :arith-nonlinear-bounds    31
 :arith-num-rows            11
 :arith-patches             2
 :arith-pivots              5
 :arith-pseudo-nonlinear    2
 :arith-row-summations      6
 :arith-tableau-max-columns 61
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 4
 :del-clause                16
 :final-checks              4
 :max-memory                3.68
 :memory                    3.18
 :mk-bool-var               24
 :mk-clause                 16
 :num-allocs                1156314
 :num-checks                1
 :propagations              10
 :rlimit-count              4618
 :time                      0.01
 :total-time                0.02)
