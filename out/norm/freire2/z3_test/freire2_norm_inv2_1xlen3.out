unsat
((set-logic NIA)
(declare-fun x!0 () Int)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x720 (* 6 x!0)))
 (let ((?x490 (* (- 3) s!1)))
 (let ((?x2235 (* 3 r!2)))
 (let ((?x484 (* r!2 s!1)))
 (let ((?x491 (* 2 ?x484)))
 (let ((?x467 (* r00 r00 r00)))
 (let ((?x468 (* 12 ?x467)))
 (let ((?x424 (* s00 r00)))
 (let ((?x502 (* (- 6) ?x424)))
 (let ((?x499 (* (- 6) x00)))
 (let ((?x498 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1141 (+ ?x44 ?x498 ?x499 (* (- 12) (* r00 r00 r!2)) ?x502 (* 4 (* s00 r!2)) ?x468 ?x491 ?x2235 ?x490 ?x720)))
 (let (($x2155 (<= ?x1141 0)))
 (let (($x1501 (= ?x1141 0)))
 (let ((?x1796 (+ 3 (* 6 r!2) s!1)))
 (let ((?x1933 (* (- 1) s!1)))
 (let ((?x1893 (+ ?x1933 x!0)))
 (let ((?x2040 (+ 1 r!2)))
 (let ((?x693 (* 6 (* r00 s00 ?x2040 ?x1893 ?x1893 ?x1893 ?x1796 ?x1796))))
 (let ((?x2256 (* 12 (* r00 r00 ?x2040 ?x2040 ?x1893 ?x1893 ?x1893 ?x1796 ?x1796))))
 (let ((?x2321 (* 3 (* r00 ?x2040 ?x1893 ?x1893 ?x1893 ?x1796 ?x1796))))
 (let ((?x1702 (* (- 3) (* r!2 r!2 s!1))))
 (let ((?x2012 (* (- 6) (* ?x2040 ?x1893 ?x1893 ?x1893 ?x1893 ?x1796 ?x1796))))
 (let ((?x2152 (* 3 (* ?x2040 ?x1893 ?x1893 ?x1893 ?x1796 ?x1796 ?x1796))))
 (let ((?x1555 (* (- 2) (* ?x2040 ?x2040 ?x1893 ?x1893 ?x1893 ?x1796 ?x1796 ?x1796))))
 (let ((?x2026 (* 12 (* r00 r00 r00 ?x1893 ?x1893 ?x1796 ?x1796 ?x1796))))
 (let ((?x1502 (* 27 (* r!2 r!2 r!2))))
 (let ((?x1650 (* (- 3) (* ?x2040 ?x2040 ?x1893 ?x1893 ?x1893 ?x1796 ?x1796))))
 (let ((?x1612 (* r!2 r!2)))
 (let ((?x717 (* 18 ?x1612)))
 (let ((?x1882 (* (- 12) (* r00 r00 r00 ?x2040 ?x1893 ?x1893 ?x1893 ?x1796 ?x1796))))
 (let ((?x988 (* 12 (* r!2 r!2 r!2 r!2))))
 (let ((?x1282 (* (- 3) (* s00 ?x2040 ?x1893 ?x1893 ?x1893 ?x1796 ?x1796))))
 (let ((?x991 (* (- 3) (* ?x1893 ?x1893 ?x1796 ?x1796 ?x1796 ?x1796))))
 (let ((?x2055 (* (- 7) s!1)))
 (let ((?x362 (* 3 (* s00 ?x1893 ?x1893 ?x1796 ?x1796 ?x1796))))
 (let ((?x2179 (* 2 (* r!2 r!2 r!2 s!1))))
 (let ((?x990 (* (- 6) (* r00 s00 ?x1893 ?x1893 ?x1796 ?x1796 ?x1796))))
 (let ((?x986 (* r!2 x!0)))
 (let ((?x2046 (* 12 ?x986)))
 (let ((?x1936 (* 4 (* s00 ?x2040 ?x1893 ?x1893 ?x1796 ?x1796 ?x1796))))
 (let ((?x1780 (* (- 4) (* s00 ?x2040 ?x2040 ?x1893 ?x1893 ?x1893 ?x1796 ?x1796))))
 (let ((?x707 (* 2 (* ?x2040 ?x1893 ?x1893 ?x1796 ?x1796 ?x1796 ?x1796))))
 (let ((?x611 (* 3 (* ?x2040 ?x1893 ?x1893 ?x1796 ?x1796 ?x1796))))
 (let ((?x2087 (* (- 12) (* r00 r00 ?x2040 ?x1893 ?x1893 ?x1796 ?x1796 ?x1796))))
 (let ((?x1179 (* (- 3) (* r00 ?x1893 ?x1893 ?x1796 ?x1796 ?x1796))))
 (let ((?x2057 (* (- 12) ?x484)))
 (let ((?x386 (* 6 (* ?x1893 ?x1893 ?x1893 ?x1796 ?x1796 ?x1796))))
 (let ((?x1734 (* (- 6) (* x00 ?x1893 ?x1893 ?x1796 ?x1796 ?x1796))))
 (let ((?x462 (* 6 (* r!2 r!2 x!0))))
 (let ((?x1049 (* 6 (* x00 ?x2040 ?x1893 ?x1893 ?x1893 ?x1796 ?x1796))))
 (let ((?x299 (* r00 r00)))
 (let ((?x2525 (* (- 12) ?x299)))
 (let ((?x2523 (* 7 s00)))
 (let ((?x1877 (+ ?x2523 ?x498 ?x499 ?x2525 (* (- 36) (* r00 r00 r!2)) ?x1049 (* (- 12) (* x00 r!2)) ?x502 ?x462 ?x1734 ?x386 (* 18 (* s00 r!2)) ?x468 ?x2057 ?x1179 ?x2087 ?x611 ?x707 ?x1780 ?x2235 ?x1936 (* 4 (* s00 r!2 r!2 r!2)) ?x2046 ?x990 ?x2179 ?x362 ?x2055 (* (- 6) (* r00 r!2)) ?x991 (* (- 12) (* s00 r00 r!2)) ?x1282 ?x988 (* (- 36) (* r00 r00 r!2 r!2)) ?x1882 ?x717 ?x1650 ?x1502 ?x2026 ?x1555 (* 12 (* r00 r00 r00 r!2 r!2)) (* (- 12) (* r00 r00 r!2 r!2 r!2)) (* (- 6) (* x00 r!2 r!2)) ?x2152 ?x2012 ?x1702 ?x2321 ?x720 ?x2256 (* 15 (* s00 r!2 r!2)) (* (- 3) (* r00 r!2 r!2)) ?x693 (* 24 (* r00 r00 r00 r!2)) (* (- 6) (* s00 r00 r!2 r!2)))))
 (let (($x874 (= ?x1877 0)))
 (let (($x2416 (not $x874)))
 (let ((?x2290 (* r00 r00 s!1)))
 (let ((?x1464 (* 36 ?x2290)))
 (let ((?x1344 (* x00 x00)))
 (let ((?x837 (* 108 ?x1344)))
 (let ((?x1182 (* s00 s00 s00)))
 (let ((?x2025 (* 16 ?x1182)))
 (let ((?x597 (* (- 9) s!1)))
 (let ((?x880 (* r00 r00 r00 x00)))
 (let ((?x1655 (* (- 432) ?x880)))
 (let ((?x803 (* s00 x00)))
 (let ((?x1837 (* (- 108) ?x803)))
 (let ((?x645 (* s00 r00 r00)))
 (let ((?x1537 (* (- 36) ?x645)))
 (let ((?x589 (* s00 s00)))
 (let ((?x1167 (* 51 ?x589)))
 (let ((?x520 (* r00 x00)))
 (let ((?x1981 (* 108 ?x520)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1934 (+ ?x137 (* (- 66) (* s00 s!1)) (* 108 (* s00 x!0)) (* (- 54) ?x424) (* 216 (* s00 r00 x00)) ?x1981 ?x1167 ?x1537 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* (- 4) (* s!1 s!1 s!1)) ?x1837 ?x1655 (* 15 (* s!1 s!1)) (* 216 (* s00 r00 r00 r00)) ?x597 ?x2025 (* (- 108) (* r00 x!0)) ?x837 (* 54 (* r00 s!1)) (* 108 (* s00 r00 s!1)) (* 108 (* x!0 x!0)) (* 108 (* x00 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* (- 216) (* s00 r00 x!0)) (* (- 108) (* s!1 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* r00 r00 r00 s!1)) ?x1464)))
 (let (($x2459 (= ?x1934 0)))
 (let ((?x1459 (+ ?x137 (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) (* 6 (* s00 x!0)) (* (- 24) ?x424) (* (- 24) (* s00 r!2)) (* 24 ?x484) (* 54 ?x520) (* 15 ?x589) ?x1537 (* 2 (* s00 s00 r00)) (* (- 2) (* r!2 s!1 s!1)) (* (- 36) (* r00 r!2 x!0)) (* (- 6) ?x803) (* 36 (* r00 x00 r!2)) (* 36 (* r00 r00 x00)) (* (- 2) (* s00 r!2 s!1)) (* (- 36) (* r00 r00 x!0)) (* (- 3) (* s!1 s!1)) (* (- 54) ?x986) ?x597 (* (- 4) (* r00 s!1 s!1)) (* (- 54) (* r00 x!0)) (* 24 (* r00 s!1)) (* 2 (* s00 r00 s!1)) (* 6 (* x00 s!1)) (* 4 (* s00 s00 r!2)) (* (- 6) (* s!1 x!0)) ?x1464)))
 (let (($x1927 (= ?x1459 0)))
 (let ((?x840 (+ ?x44 (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* (- 9) ?x424) (* (- 9) (* s00 r!2)) (* 9 ?x484) (* 18 ?x520) (* 4 ?x589) (* (- 6) ?x645) (* (- 2) (* s!1 s!1)) (* (- 18) ?x986) ?x490 (* 6 (* s00 r00 r!2)) (* (- 18) (* r00 x!0)) (* 9 (* r00 s!1)) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x2290))))
 (let (($x838 (= ?x840 0)))
 (let ((?x1864 (* (- 3) ?x299)))
 (let ((?x731 (+ s00 ?x1864 ?x1933 (* 3 ?x1612))))
 (let (($x738 (= ?x731 0)))
 (let (($x419 (and $x738 $x1501 $x838 $x1927 $x2459 $x2416)))
 (let ((?x1273 (+ ?x2235 ?x2055 ?x720 ?x2523 ?x498 ?x499 ?x717 ?x2525 ?x2057 (* (- 36) (* r!2 r00 r00)) (* 18 (* r!2 s00)) ?x502 ?x468 ?x2046 ?x1555 ?x2256 ?x386 (* (- 12) (* r!2 x00)) ?x2321 ?x693 ?x2152 ?x1780 (* (- 12) (* r!2 s00 r00)) ?x2026 ?x611 ?x2087 ?x2012 (* 15 (* r!2 r!2 s00)) (* 4 (* r!2 r!2 r!2 s00)) ?x1936 ?x1502 ?x1882 ?x1282 ?x707 ?x462 ?x1179 ?x1702 (* (- 6) (* r!2 r00)) (* (- 3) (* r!2 r!2 r00)) ?x988 ?x990 ?x991 (* (- 6) (* r!2 r!2 s00 r00)) ?x2179 (* (- 12) (* r!2 r!2 r!2 r00 r00)) (* (- 36) (* r!2 r!2 r00 r00)) ?x1650 ?x1734 ?x362 ?x1049 (* 12 (* r!2 r!2 r00 r00 r00)) (* 24 (* r!2 r00 r00 r00)) (* (- 6) (* r!2 r!2 x00)))))
 (let ((?x1374 (* (- 108) ?x1344)))
 (let ((?x1373 (* (- 16) ?x1182)))
 (let ((?x1054 (* s00 r00 r00 r00)))
 (let ((?x1369 (* (- 216) ?x1054)))
 (let ((?x881 (* 432 ?x880)))
 (let ((?x1127 (* 108 ?x803)))
 (let ((?x729 (* s00 s00 r00 r00)))
 (let ((?x730 (* 36 ?x729)))
 (let ((?x666 (* s00 s00 r00)))
 (let ((?x1010 (* 108 ?x666)))
 (let ((?x998 (* 36 ?x645)))
 (let ((?x1363 (* (- 51) ?x589)))
 (let ((?x2145 (* s!1 r00 r00)))
 (let ((?x1212 (* (- 36) ?x2145)))
 (let ((?x1360 (* (- 108) ?x520)))
 (let ((?x511 (* s00 r00 x00)))
 (let ((?x1359 (* (- 216) ?x511)))
 (let ((?x518 (* 54 ?x424)))
 (let ((?x985 (* (- 9) s00)))
 (let ((?x1951 (* 9 s!1)))
 (let ((?x2091 (+ ?x1951 ?x985 ?x518 ?x1359 ?x1360 (* (- 15) (* s!1 s!1)) ?x1212 ?x1363 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x998 ?x1010 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x730 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1127 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x881 (* 12 (* s!1 s!1 s00)) ?x1369 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1373 (* 216 (* x!0 x00)) ?x1374)))
 (let ((?x875 (* r00 r00 x00)))
 (let ((?x888 (* (- 36) ?x875)))
 (let ((?x804 (* 6 ?x803)))
 (let ((?x694 (* (- 2) ?x666)))
 (let ((?x914 (* (- 15) ?x589)))
 (let ((?x549 (* (- 54) ?x520)))
 (let ((?x562 (* 24 ?x424)))
 (let ((?x755 (+ ?x1951 ?x985 (* (- 24) ?x484) (* 24 (* r!2 s00)) ?x562 ?x549 (* 3 (* s!1 s!1)) (* 54 ?x986) (* 36 (* r!2 x!0 r00)) ?x1212 ?x914 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x998 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x694 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x804 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x888 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x646 (* 6 ?x645)))
 (let ((?x602 (* (- 4) ?x589)))
 (let ((?x534 (* (- 18) ?x520)))
 (let ((?x539 (* 9 ?x424)))
 (let ((?x376 (* (- 3) s00)))
 (let ((?x1210 (+ (* 3 s!1) ?x376 (* (- 9) ?x484) (* 9 (* r!2 s00)) ?x539 ?x534 (* 2 (* s!1 s!1)) (* 18 ?x986) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x2145) ?x602 (* 18 (* x!0 r00)) ?x646 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x2115 (+ ?x2235 ?x490 ?x720 ?x44 ?x498 ?x499 ?x491 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x502 ?x468)))
 (let (($x1274 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x1612) (* 3 ?x299)) 0) (= ?x2115 0) (= ?x1210 0) (= ?x755 0) (= ?x2091 0) (not (= ?x1273 0)))))
 (let (($x1507 (exists ((r Int) (s Int) (x Int) )(! (let ((?x2448 (* (- 6) (* r r x00))))
 (let ((?x2445 (* 24 (* r r00 r00 r00))))
 (let ((?x2342 (* 12 (* r r r00 r00 r00))))
 (let ((?x215 (* 6 r)))
 (let ((?x1421 (+ 3 ?x215 s)))
 (let ((?x278 (* (- 1) s)))
 (let ((?x1427 (+ ?x278 x)))
 (let ((?x1383 (+ 1 r)))
 (let ((?x2438 (* (- 12) (* r r r r00 r00))))
 (let ((?x2116 (* 2 (* r r r s))))
 (let ((?x2434 (* 12 (* r r r r))))
 (let ((?x2421 (* (- 3) (* r r r00))))
 (let ((?x2418 (* (- 3) (* r r s))))
 (let ((?x1677 (* 6 (* r r x))))
 (let ((?x2545 (* 4 (* r r r s00))))
 (let ((?x547 (* r x)))
 (let ((?x2533 (* 12 ?x547)))
 (let ((?x467 (* r00 r00 r00)))
 (let ((?x468 (* 12 ?x467)))
 (let ((?x424 (* s00 r00)))
 (let ((?x502 (* (- 6) ?x424)))
 (let ((?x299 (* r00 r00)))
 (let ((?x2525 (* (- 12) ?x299)))
 (let ((?x499 (* (- 6) x00)))
 (let ((?x498 (* (- 3) r00)))
 (let ((?x2523 (* 7 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x2524 (* (- 7) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x969 (+ ?x43 ?x2524 ?x56 ?x2523 ?x498 ?x499 (* 18 (* r r)) ?x2525 (* (- 12) (* r s)) (* (- 36) (* r r00 r00)) (* 18 (* r s00)) ?x502 ?x468 ?x2533 (* (- 2) (* ?x1383 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* 6 (* ?x1427 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* (- 12) (* r x00)) (* 3 (* r00 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* 6 (* r00 s00 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* 3 (* ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* (- 12) (* r s00 r00)) (* 12 (* r00 r00 r00 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* 3 (* ?x1383 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* (- 12) (* r00 r00 ?x1383 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* (- 6) (* ?x1383 ?x1427 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* 15 (* r r s00)) ?x2545 (* 4 (* s00 ?x1383 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* 27 (* r r r)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* (- 3) (* s00 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* 2 (* ?x1383 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421 ?x1421)) ?x1677 (* (- 3) (* r00 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) ?x2418 (* (- 6) (* r r00)) ?x2421 ?x2434 (* (- 6) (* r00 s00 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* (- 3) (* ?x1427 ?x1427 ?x1421 ?x1421 ?x1421 ?x1421)) (* (- 6) (* r r s00 r00)) ?x2116 ?x2438 (* (- 36) (* r r r00 r00)) (* (- 3) (* ?x1383 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* (- 6) (* x00 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* 3 (* s00 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* 6 (* x00 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) ?x2342 ?x2445 ?x2448)))
 (let ((?x1344 (* x00 x00)))
 (let ((?x1374 (* (- 108) ?x1344)))
 (let ((?x1182 (* s00 s00 s00)))
 (let ((?x1373 (* (- 16) ?x1182)))
 (let ((?x1054 (* s00 r00 r00 r00)))
 (let ((?x1369 (* (- 216) ?x1054)))
 (let ((?x880 (* r00 r00 r00 x00)))
 (let ((?x881 (* 432 ?x880)))
 (let ((?x803 (* s00 x00)))
 (let ((?x1127 (* 108 ?x803)))
 (let ((?x729 (* s00 s00 r00 r00)))
 (let ((?x730 (* 36 ?x729)))
 (let ((?x666 (* s00 s00 r00)))
 (let ((?x1010 (* 108 ?x666)))
 (let ((?x645 (* s00 r00 r00)))
 (let ((?x998 (* 36 ?x645)))
 (let ((?x589 (* s00 s00)))
 (let ((?x1363 (* (- 51) ?x589)))
 (let ((?x563 (* s r00 r00)))
 (let ((?x862 (* (- 36) ?x563)))
 (let ((?x520 (* r00 x00)))
 (let ((?x1360 (* (- 108) ?x520)))
 (let ((?x511 (* s00 r00 x00)))
 (let ((?x1359 (* (- 216) ?x511)))
 (let ((?x518 (* 54 ?x424)))
 (let ((?x985 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1375 (+ ?x143 ?x985 ?x518 ?x1359 ?x1360 (* (- 15) (* s s)) ?x862 ?x1363 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x998 ?x1010 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x730 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1127 (* 108 (* s x)) (* (- 108) (* x x)) ?x881 (* 12 (* s s s00)) ?x1369 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1373 (* 216 (* x x00)) ?x1374)))
 (let (($x1376 (= ?x1375 0)))
 (let ((?x875 (* r00 r00 x00)))
 (let ((?x888 (* (- 36) ?x875)))
 (let ((?x804 (* 6 ?x803)))
 (let ((?x694 (* (- 2) ?x666)))
 (let ((?x914 (* (- 15) ?x589)))
 (let ((?x543 (* s s)))
 (let ((?x567 (* 3 ?x543)))
 (let ((?x549 (* (- 54) ?x520)))
 (let ((?x562 (* 24 ?x424)))
 (let ((?x1077 (+ ?x143 ?x985 (* (- 24) (* r s)) (* 24 (* r s00)) ?x562 ?x549 ?x567 (* 54 ?x547) (* 36 (* r x r00)) ?x862 ?x914 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x998 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x694 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x804 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x888 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1082 (= ?x1077 0)))
 (let ((?x646 (* 6 ?x645)))
 (let ((?x602 (* (- 4) ?x589)))
 (let ((?x544 (* 2 ?x543)))
 (let ((?x534 (* (- 18) ?x520)))
 (let ((?x539 (* 9 ?x424)))
 (let ((?x343 (* r s)))
 (let ((?x515 (* (- 9) ?x343)))
 (let ((?x376 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x743 (+ ?x47 ?x376 ?x515 (* 9 (* r s00)) ?x539 ?x534 ?x544 (* 18 ?x547) (* 6 (* r s r00)) (* (- 6) ?x563) ?x602 (* 18 (* x r00)) ?x646 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x750 (= ?x743 0)))
 (let ((?x349 (* r r00 r00)))
 (let ((?x501 (* (- 12) ?x349)))
 (let ((?x44 (* 3 s00)))
 (let ((?x503 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x498 ?x499 (* 2 ?x343) ?x501 (* 4 (* r s00)) ?x502 ?x468)))
 (let (($x504 (= ?x503 0)))
 (let (($x332 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x299)) 0)))
 (and $x332 $x504 $x750 $x1082 $x1376 (not (= ?x969 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x2131 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (* 6 r)))
 (let ((?x1953 (+ 3 s ?x215)))
 (let ((?x278 (* (- 1) s)))
 (let ((?x1956 (+ x ?x278)))
 (let ((?x1383 (+ 1 r)))
 (let ((?x943 (+ (* (- 4) (* s00 ?x1383 ?x1383 ?x1383)) (* (- 3) (* s00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 3) (* ?x1383 ?x1383 ?x1383)) (* (- 6) (* ?x1956 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 6) (* ?x1383 ?x1383 ?x1956)) (* (- 12) (* r00 r00 ?x1383 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* 6 (* r00 s00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 r00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 3 (* ?x1383 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* 6 (* ?x1383 ?x1956 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* 3 (* ?x1383 ?x1383 ?x1953)) (* (- 2) (* ?x1383 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 3) (* s00 ?x1383 ?x1383)) (* 3 (* ?x1956 ?x1956 ?x1953 ?x1953 ?x1953 ?x1953)) (* 6 (* x00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 3 (* r00 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383)) (* 12 (* r00 r00 r00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* 2 (* ?x1383 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 3 (* r00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383)) (* 12 (* r00 r00 ?x1383 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 4 (* s00 ?x1383 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 4) (* s00 ?x1383 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x1953)) (* (- 6) (* r00 s00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 3) (* ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383)) (* (- 3) (* ?x1383 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 6 (* x00 ?x1383 ?x1383)))))
 (let ((?x1344 (* x00 x00)))
 (let ((?x837 (* 108 ?x1344)))
 (let ((?x137 (* 9 s00)))
 (let ((?x589 (* s00 s00)))
 (let ((?x1167 (* 51 ?x589)))
 (let ((?x1182 (* s00 s00 s00)))
 (let ((?x2025 (* 16 ?x1182)))
 (let ((?x803 (* s00 x00)))
 (let ((?x1837 (* (- 108) ?x803)))
 (let ((?x880 (* r00 r00 r00 x00)))
 (let ((?x1655 (* (- 432) ?x880)))
 (let ((?x520 (* r00 x00)))
 (let ((?x1981 (* 108 ?x520)))
 (let ((?x843 (+ (* 216 (* r00 s00 x00)) ?x1981 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1655 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1837 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2025 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1167 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x837)))
 (let ((?x143 (* 9 s)))
 (let ((?x985 (* (- 9) s00)))
 (let ((?x914 (* (- 15) ?x589)))
 (let ((?x875 (* r00 r00 x00)))
 (let ((?x888 (* (- 36) ?x875)))
 (let ((?x804 (* 6 ?x803)))
 (let ((?x543 (* s s)))
 (let ((?x567 (* 3 ?x543)))
 (let ((?x549 (* (- 54) ?x520)))
 (let ((?x1133 (+ (* (- 24) (* s r)) ?x549 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x567 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x804 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x888 ?x914 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x985 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x376 (* (- 3) s00)))
 (let ((?x602 (* (- 4) ?x589)))
 (let ((?x544 (* 2 ?x543)))
 (let ((?x534 (* (- 18) ?x520)))
 (let ((?x1075 (+ (* (- 9) (* s r)) ?x534 (* 9 (* r00 s00)) ?x544 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x602 (* 18 (* r00 x)) ?x376 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1963 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x376 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1827 (= (+ s00 ?x278 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1827 (= ?x1963 0) (= ?x1075 0) (= ?x1133 0) (= ?x843 0) (not (= ?x943 0))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1510 (lambda ((r Int) (s Int) (x Int) )(let ((?x2448 (* (- 6) (* r r x00))))
 (let ((?x2445 (* 24 (* r r00 r00 r00))))
 (let ((?x2342 (* 12 (* r r r00 r00 r00))))
 (let ((?x215 (* 6 r)))
 (let ((?x1421 (+ 3 ?x215 s)))
 (let ((?x278 (* (- 1) s)))
 (let ((?x1427 (+ ?x278 x)))
 (let ((?x1383 (+ 1 r)))
 (let ((?x2438 (* (- 12) (* r r r r00 r00))))
 (let ((?x2116 (* 2 (* r r r s))))
 (let ((?x2434 (* 12 (* r r r r))))
 (let ((?x2421 (* (- 3) (* r r r00))))
 (let ((?x2418 (* (- 3) (* r r s))))
 (let ((?x1677 (* 6 (* r r x))))
 (let ((?x2545 (* 4 (* r r r s00))))
 (let ((?x547 (* r x)))
 (let ((?x2533 (* 12 ?x547)))
 (let ((?x467 (* r00 r00 r00)))
 (let ((?x468 (* 12 ?x467)))
 (let ((?x424 (* s00 r00)))
 (let ((?x502 (* (- 6) ?x424)))
 (let ((?x299 (* r00 r00)))
 (let ((?x2525 (* (- 12) ?x299)))
 (let ((?x499 (* (- 6) x00)))
 (let ((?x498 (* (- 3) r00)))
 (let ((?x2523 (* 7 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x2524 (* (- 7) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x969 (+ ?x43 ?x2524 ?x56 ?x2523 ?x498 ?x499 (* 18 (* r r)) ?x2525 (* (- 12) (* r s)) (* (- 36) (* r r00 r00)) (* 18 (* r s00)) ?x502 ?x468 ?x2533 (* (- 2) (* ?x1383 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* 6 (* ?x1427 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* (- 12) (* r x00)) (* 3 (* r00 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* 6 (* r00 s00 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* 3 (* ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* (- 4) (* s00 ?x1383 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* (- 12) (* r s00 r00)) (* 12 (* r00 r00 r00 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* 3 (* ?x1383 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* (- 12) (* r00 r00 ?x1383 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* (- 6) (* ?x1383 ?x1427 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* 15 (* r r s00)) ?x2545 (* 4 (* s00 ?x1383 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* 27 (* r r r)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* (- 3) (* s00 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* 2 (* ?x1383 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421 ?x1421)) ?x1677 (* (- 3) (* r00 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) ?x2418 (* (- 6) (* r r00)) ?x2421 ?x2434 (* (- 6) (* r00 s00 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* (- 3) (* ?x1427 ?x1427 ?x1421 ?x1421 ?x1421 ?x1421)) (* (- 6) (* r r s00 r00)) ?x2116 ?x2438 (* (- 36) (* r r r00 r00)) (* (- 3) (* ?x1383 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) (* (- 6) (* x00 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* 3 (* s00 ?x1427 ?x1427 ?x1421 ?x1421 ?x1421)) (* 6 (* x00 ?x1383 ?x1427 ?x1427 ?x1427 ?x1421 ?x1421)) ?x2342 ?x2445 ?x2448)))
 (let ((?x1344 (* x00 x00)))
 (let ((?x1374 (* (- 108) ?x1344)))
 (let ((?x1182 (* s00 s00 s00)))
 (let ((?x1373 (* (- 16) ?x1182)))
 (let ((?x1054 (* s00 r00 r00 r00)))
 (let ((?x1369 (* (- 216) ?x1054)))
 (let ((?x880 (* r00 r00 r00 x00)))
 (let ((?x881 (* 432 ?x880)))
 (let ((?x803 (* s00 x00)))
 (let ((?x1127 (* 108 ?x803)))
 (let ((?x729 (* s00 s00 r00 r00)))
 (let ((?x730 (* 36 ?x729)))
 (let ((?x666 (* s00 s00 r00)))
 (let ((?x1010 (* 108 ?x666)))
 (let ((?x645 (* s00 r00 r00)))
 (let ((?x998 (* 36 ?x645)))
 (let ((?x589 (* s00 s00)))
 (let ((?x1363 (* (- 51) ?x589)))
 (let ((?x563 (* s r00 r00)))
 (let ((?x862 (* (- 36) ?x563)))
 (let ((?x520 (* r00 x00)))
 (let ((?x1360 (* (- 108) ?x520)))
 (let ((?x511 (* s00 r00 x00)))
 (let ((?x1359 (* (- 216) ?x511)))
 (let ((?x518 (* 54 ?x424)))
 (let ((?x985 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1375 (+ ?x143 ?x985 ?x518 ?x1359 ?x1360 (* (- 15) (* s s)) ?x862 ?x1363 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x998 ?x1010 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x730 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1127 (* 108 (* s x)) (* (- 108) (* x x)) ?x881 (* 12 (* s s s00)) ?x1369 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1373 (* 216 (* x x00)) ?x1374)))
 (let (($x1376 (= ?x1375 0)))
 (let ((?x875 (* r00 r00 x00)))
 (let ((?x888 (* (- 36) ?x875)))
 (let ((?x804 (* 6 ?x803)))
 (let ((?x694 (* (- 2) ?x666)))
 (let ((?x914 (* (- 15) ?x589)))
 (let ((?x543 (* s s)))
 (let ((?x567 (* 3 ?x543)))
 (let ((?x549 (* (- 54) ?x520)))
 (let ((?x562 (* 24 ?x424)))
 (let ((?x1077 (+ ?x143 ?x985 (* (- 24) (* r s)) (* 24 (* r s00)) ?x562 ?x549 ?x567 (* 54 ?x547) (* 36 (* r x r00)) ?x862 ?x914 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x998 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x694 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x804 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x888 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1082 (= ?x1077 0)))
 (let ((?x646 (* 6 ?x645)))
 (let ((?x602 (* (- 4) ?x589)))
 (let ((?x544 (* 2 ?x543)))
 (let ((?x534 (* (- 18) ?x520)))
 (let ((?x539 (* 9 ?x424)))
 (let ((?x343 (* r s)))
 (let ((?x515 (* (- 9) ?x343)))
 (let ((?x376 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x743 (+ ?x47 ?x376 ?x515 (* 9 (* r s00)) ?x539 ?x534 ?x544 (* 18 ?x547) (* 6 (* r s r00)) (* (- 6) ?x563) ?x602 (* 18 (* x r00)) ?x646 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x750 (= ?x743 0)))
 (let ((?x349 (* r r00 r00)))
 (let ((?x501 (* (- 12) ?x349)))
 (let ((?x44 (* 3 s00)))
 (let ((?x503 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x498 ?x499 (* 2 ?x343) ?x501 (* 4 (* r s00)) ?x502 ?x468)))
 (let (($x504 (= ?x503 0)))
 (let (($x332 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x299)) 0)))
 (let (($x1004 (and $x332 $x504 $x750 $x1082 $x1376 (not (= ?x969 0)))))
 (let ((?x1953 (+ 3 s ?x215)))
 (let ((?x1956 (+ x ?x278)))
 (let ((?x943 (+ (* (- 4) (* s00 ?x1383 ?x1383 ?x1383)) (* (- 3) (* s00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 3) (* ?x1383 ?x1383 ?x1383)) (* (- 6) (* ?x1956 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 6) (* ?x1383 ?x1383 ?x1956)) (* (- 12) (* r00 r00 ?x1383 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* 6 (* r00 s00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 r00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 3 (* ?x1383 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* 6 (* ?x1383 ?x1956 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* 3 (* ?x1383 ?x1383 ?x1953)) (* (- 2) (* ?x1383 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 3) (* s00 ?x1383 ?x1383)) (* 3 (* ?x1956 ?x1956 ?x1953 ?x1953 ?x1953 ?x1953)) (* 6 (* x00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 3 (* r00 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383)) (* 12 (* r00 r00 r00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* 2 (* ?x1383 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 3 (* r00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383)) (* 12 (* r00 r00 ?x1383 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 4 (* s00 ?x1383 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 4) (* s00 ?x1383 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x1953)) (* (- 6) (* r00 s00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 3) (* ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383)) (* (- 3) (* ?x1383 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 6 (* x00 ?x1383 ?x1383)))))
 (let ((?x837 (* 108 ?x1344)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1167 (* 51 ?x589)))
 (let ((?x2025 (* 16 ?x1182)))
 (let ((?x1837 (* (- 108) ?x803)))
 (let ((?x1655 (* (- 432) ?x880)))
 (let ((?x1981 (* 108 ?x520)))
 (let ((?x843 (+ (* 216 (* r00 s00 x00)) ?x1981 (* (- 54) (* r00 s00)) (* 15 ?x543) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1655 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1837 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2025 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1167 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x837)))
 (let ((?x1133 (+ (* (- 24) (* s r)) ?x549 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x567 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x804 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x888 ?x914 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x985 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1075 (+ (* (- 9) (* s r)) ?x534 (* 9 (* r00 s00)) ?x544 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x602 (* 18 (* r00 x)) ?x376 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1963 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x376 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x467))))
 (let (($x2168 (and (= (+ s00 ?x278 (* 3 (* r r)) (* (- 3) ?x299)) 0) (= ?x1963 0) (= ?x1075 0) (= ?x1133 0) (= ?x843 0) (not (= ?x943 0)))))
 (rewrite (= $x2168 $x1004))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x275 (exists ((r Int) (s Int) (x Int) )(! (let ((?x217 (- x s)))
 (let ((?x215 (* 6 r)))
 (let ((?x216 (+ s ?x215 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x224 (- (* (- 4) ?x213 ?x213 ?x213 s00) (* 3 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x226 (- (- ?x224 (* 6 ?x213 ?x216 ?x216 ?x217 ?x217 ?x217 x00)) (* 3 ?x213 ?x213 ?x213))))
 (let ((?x228 (- (- ?x226 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 6 ?x213 ?x213 ?x217))))
 (let ((?x231 (+ (- ?x228 (* 12 ?x213 ?x213 r00 r00 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 6 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x237 (+ (- ?x231 (* 12 r00 r00 r00 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 3 ?x213 ?x213 ?x216 ?x216 ?x217 ?x217 ?x217) (* 6 ?x213 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217) (* 3 ?x213 ?x213 ?x216))))
 (let ((?x241 (+ (- ?x237 (* 2 ?x213 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 3 ?x213 ?x216 ?x216 s00 ?x217 ?x217 ?x217))))
 (let ((?x254 (+ (- ?x241 (* 3 ?x213 ?x213 s00)) (* 3 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217) (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 x00) (* 3 ?x213 ?x213 r00) (* 6 ?x213 ?x213 r00 s00) (* 12 ?x213 r00 r00 r00 ?x216 ?x216 ?x217 ?x217 ?x217) (* 2 ?x213 ?x213 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 3 r00 ?x216 ?x216 ?x216 ?x217 ?x217) (* 12 ?x213 ?x213 ?x213 r00 r00) (* 12 ?x213 r00 r00 ?x216 ?x216 ?x216 ?x217 ?x217) (* 4 ?x213 ?x213 ?x216 ?x216 s00 ?x217 ?x217 ?x217))))
 (let ((?x263 (- (- ?x254 (* 3 ?x213 r00 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 4 ?x213 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x265 (- (- ?x263 (* 2 ?x213 ?x213 ?x213 ?x216)) (* 6 ?x213 r00 ?x216 ?x216 s00 ?x217 ?x217 ?x217))))
 (let ((?x267 (- (- ?x265 (* 3 ?x213 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 12 ?x213 ?x213 r00 r00 r00))))
 (let ((?x270 (+ (- ?x267 (* 3 ?x213 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 6 ?x213 ?x213 x00))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x270 0))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1943 (lambda ((r Int) (s Int) (x Int) )(let ((?x215 (* 6 r)))
 (let ((?x1953 (+ 3 s ?x215)))
 (let ((?x278 (* (- 1) s)))
 (let ((?x1956 (+ x ?x278)))
 (let ((?x1383 (+ 1 r)))
 (let ((?x943 (+ (* (- 4) (* s00 ?x1383 ?x1383 ?x1383)) (* (- 3) (* s00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 6) (* x00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 3) (* ?x1383 ?x1383 ?x1383)) (* (- 6) (* ?x1956 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 6) (* ?x1383 ?x1383 ?x1956)) (* (- 12) (* r00 r00 ?x1383 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* 6 (* r00 s00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 r00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 3 (* ?x1383 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* 6 (* ?x1383 ?x1956 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* 3 (* ?x1383 ?x1383 ?x1953)) (* (- 2) (* ?x1383 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953 ?x1953)) (* 3 (* s00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 3) (* s00 ?x1383 ?x1383)) (* 3 (* ?x1956 ?x1956 ?x1953 ?x1953 ?x1953 ?x1953)) (* 6 (* x00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 3 (* r00 ?x1383 ?x1383)) (* 6 (* r00 s00 ?x1383 ?x1383)) (* 12 (* r00 r00 r00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* 2 (* ?x1383 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 3 (* r00 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 12 (* r00 r00 ?x1383 ?x1383 ?x1383)) (* 12 (* r00 r00 ?x1383 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 4 (* s00 ?x1383 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 3) (* r00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 4) (* s00 ?x1383 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 2) (* ?x1383 ?x1383 ?x1383 ?x1953)) (* (- 6) (* r00 s00 ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953)) (* (- 3) (* ?x1383 ?x1956 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* (- 12) (* r00 r00 r00 ?x1383 ?x1383)) (* (- 3) (* ?x1383 ?x1956 ?x1956 ?x1953 ?x1953 ?x1953)) (* 6 (* x00 ?x1383 ?x1383)))))
 (let ((?x1344 (* x00 x00)))
 (let ((?x837 (* 108 ?x1344)))
 (let ((?x137 (* 9 s00)))
 (let ((?x589 (* s00 s00)))
 (let ((?x1167 (* 51 ?x589)))
 (let ((?x1182 (* s00 s00 s00)))
 (let ((?x2025 (* 16 ?x1182)))
 (let ((?x803 (* s00 x00)))
 (let ((?x1837 (* (- 108) ?x803)))
 (let ((?x880 (* r00 r00 r00 x00)))
 (let ((?x1655 (* (- 432) ?x880)))
 (let ((?x520 (* r00 x00)))
 (let ((?x1981 (* 108 ?x520)))
 (let ((?x843 (+ (* 216 (* r00 s00 x00)) ?x1981 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1655 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1837 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2025 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1167 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x837)))
 (let ((?x143 (* 9 s)))
 (let ((?x985 (* (- 9) s00)))
 (let ((?x914 (* (- 15) ?x589)))
 (let ((?x875 (* r00 r00 x00)))
 (let ((?x888 (* (- 36) ?x875)))
 (let ((?x804 (* 6 ?x803)))
 (let ((?x543 (* s s)))
 (let ((?x567 (* 3 ?x543)))
 (let ((?x549 (* (- 54) ?x520)))
 (let ((?x1133 (+ (* (- 24) (* s r)) ?x549 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x567 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x804 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x888 ?x914 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x985 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x376 (* (- 3) s00)))
 (let ((?x602 (* (- 4) ?x589)))
 (let ((?x544 (* 2 ?x543)))
 (let ((?x534 (* (- 18) ?x520)))
 (let ((?x1075 (+ (* (- 9) (* s r)) ?x534 (* 9 (* r00 s00)) ?x544 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x602 (* 18 (* r00 x)) ?x376 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1963 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x376 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1827 (= (+ s00 ?x278 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2168 (and $x1827 (= ?x1963 0) (= ?x1075 0) (= ?x1133 0) (= ?x843 0) (not (= ?x943 0)))))
 (let ((?x217 (- x s)))
 (let ((?x216 (+ s ?x215 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x224 (- (* (- 4) ?x213 ?x213 ?x213 s00) (* 3 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x226 (- (- ?x224 (* 6 ?x213 ?x216 ?x216 ?x217 ?x217 ?x217 x00)) (* 3 ?x213 ?x213 ?x213))))
 (let ((?x228 (- (- ?x226 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 6 ?x213 ?x213 ?x217))))
 (let ((?x231 (+ (- ?x228 (* 12 ?x213 ?x213 r00 r00 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 6 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x237 (+ (- ?x231 (* 12 r00 r00 r00 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 3 ?x213 ?x213 ?x216 ?x216 ?x217 ?x217 ?x217) (* 6 ?x213 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217) (* 3 ?x213 ?x213 ?x216))))
 (let ((?x241 (+ (- ?x237 (* 2 ?x213 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 3 ?x213 ?x216 ?x216 s00 ?x217 ?x217 ?x217))))
 (let ((?x254 (+ (- ?x241 (* 3 ?x213 ?x213 s00)) (* 3 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217) (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 x00) (* 3 ?x213 ?x213 r00) (* 6 ?x213 ?x213 r00 s00) (* 12 ?x213 r00 r00 r00 ?x216 ?x216 ?x217 ?x217 ?x217) (* 2 ?x213 ?x213 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 3 r00 ?x216 ?x216 ?x216 ?x217 ?x217) (* 12 ?x213 ?x213 ?x213 r00 r00) (* 12 ?x213 r00 r00 ?x216 ?x216 ?x216 ?x217 ?x217) (* 4 ?x213 ?x213 ?x216 ?x216 s00 ?x217 ?x217 ?x217))))
 (let ((?x263 (- (- ?x254 (* 3 ?x213 r00 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 4 ?x213 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x265 (- (- ?x263 (* 2 ?x213 ?x213 ?x213 ?x216)) (* 6 ?x213 r00 ?x216 ?x216 s00 ?x217 ?x217 ?x217))))
 (let ((?x267 (- (- ?x265 (* 3 ?x213 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 12 ?x213 ?x213 r00 r00 r00))))
 (let ((?x270 (+ (- ?x267 (* 3 ?x213 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 6 ?x213 ?x213 x00))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x274 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x270 0))))))
 (rewrite (= $x274 $x2168))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x276 (asserted $x275)))
 (let ((@x2192 (mp (mp @x276 (quant-intro (proof-bind ?x1943) (= $x275 $x2131)) $x2131) (rewrite (= $x2131 $x2131)) $x2131)))
 (let ((@x1258 (mp~ (mp @x2192 (quant-intro (proof-bind ?x1510) (= $x2131 $x1507)) $x1507) (sk (~ $x1507 $x1274)) $x1274)))
 (let ((@x2558 (mp @x1258 (rewrite (= $x1274 $x419)) $x419)))
 (let ((@x2262 (and-elim @x2558 $x1501)))
 (let ((@x452 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1501) $x2155)) @x2262 $x2155)))
 (let (($x2260 (>= ?x1141 0)))
 (let ((@x970 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1501) $x2260)) @x2262 $x2260)))
 (let (($x1798 (<= ?x731 0)))
 (let ((@x1619 (and-elim @x2558 $x738)))
 (let ((@x793 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x738) $x1798)) @x1619 $x1798)))
 (let (($x1424 (>= ?x731 0)))
 (let ((@x1488 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x738) $x1424)) @x1619 $x1424)))
 (let (($x2261 (<= ?x840 0)))
 (let ((@x2269 (and-elim @x2558 $x838)))
 (let ((@x294 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x838) $x2261)) @x2269 $x2261)))
 (let (($x1900 (>= ?x840 0)))
 (let ((@x2500 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x838) $x1900)) @x2269 $x1900)))
 (let (($x1802 (<= ?x1459 0)))
 (let ((@x2270 (and-elim @x2558 $x1927)))
 (let ((@x320 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1927) $x1802)) @x2270 $x1802)))
 (let (($x2102 (>= ?x1459 0)))
 (let ((@x1024 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1927) $x2102)) @x2270 $x2102)))
 (let (($x2202 (<= ?x1934 0)))
 (let ((@x1174 (and-elim @x2558 $x2459)))
 (let ((@x911 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2459) $x2202)) @x1174 $x2202)))
 (let (($x2236 (>= ?x1934 0)))
 (let ((@x776 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2459) $x2236)) @x1174 $x2236)))
 (let (($x378 (not (<= ?x1877 0))))
 (let (($x1616 (>= ?x1877 0)))
 (let ((@x2123 ((_ th-lemma arith) (hypothesis (not $x1616)) @x1488 @x793 @x970 @x452 @x1488 @x793 @x776 @x911 @x776 @x911 @x1024 @x320 @x1024 @x320 @x2500 @x294 @x2500 @x294 @x1488 @x793 @x1488 @x793 @x970 @x452 false)))
 (let ((@x2300 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x874 $x378 (not $x1616))) (and-elim @x2558 $x2416) (or $x378 (not $x1616)))))
 ((_ th-lemma arith) (unit-resolution @x2300 (lemma @x2123 $x1616) $x378) @x1488 @x793 @x970 @x452 @x1488 @x793 @x776 @x911 @x776 @x911 @x1024 @x320 @x1024 @x320 @x2500 @x294 @x2500 @x294 @x1488 @x793 @x1488 @x793 @x970 @x452 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        29
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             723
 :arith-nonlinear-bounds    22
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      14
 :arith-tableau-max-columns 135
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                20.09
 :memory                    19.40
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                1229717
 :num-checks                1
 :propagations              12
 :rlimit-count              45639
 :time                      0.04
 :total-time                0.05)
