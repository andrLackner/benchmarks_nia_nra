unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x118 (+ (* 3 (* n!0 n!0)) (* 3 n!0) (* (- 1) k!2))))
 (let (($x589 (<= ?x118 (- 1))))
 (let (($x107 (= ?x118 (- 1))))
 (let ((?x217 (+ c!3 k!2)))
 (let ((?x212 (+ m!1 k!2)))
 (let ((?x188 (+ 6 m!1)))
 (let ((?x206 (+ 1 n!0)))
 (let ((?x244 (* (- 3) (* ?x206 ?x206 ?x206 ?x206 ?x188 ?x212 ?x212 ?x212 ?x217 ?x217 ?x217))))
 (let ((?x688 (* (- 3) (* ?x206 ?x206 ?x206 ?x206 ?x206 ?x188 ?x212 ?x212 ?x212 ?x217 ?x217 ?x217))))
 (let ((?x242 (+ (* 9 (* m!1 n!0 k!2 k!2)) (* (- 3) (* ?x206 ?x206 ?x188 ?x188 ?x212 ?x212 ?x212 ?x217 ?x217 ?x217)) (* (- 3) (* ?x206 ?x188 ?x188 ?x212 ?x212 ?x212 ?x217 ?x217 ?x217)) (* (- 4) (* m!1 c!3 k!2 k!2)) (* ?x206 ?x206 ?x206 ?x188 ?x212 ?x212 ?x212 ?x212 ?x217 ?x217 ?x217) (* 9 (* m!1 c!3 c!3 n!0)) ?x688 (* ?x188 ?x188 ?x212 ?x212 ?x212 ?x212 ?x217 ?x217 ?x217) (* 3 (* m!1 c!3 c!3 n!0 n!0)) (* 7 (* k!2 k!2 k!2)) (* 7 (* m!1 c!3 c!3)) (* 9 (* n!0 k!2 k!2 k!2)) (* (- 2) (* c!3 k!2 k!2 k!2)) (* 14 (* m!1 c!3 k!2)) (* 6 (* m!1 c!3 n!0 n!0 k!2)) (* (- 1) (* k!2 k!2 k!2 k!2)) (* 9 (* c!3 c!3 n!0 k!2)) (* (- 1) (* c!3 c!3 k!2 k!2)) (* 3 (* c!3 c!3 n!0 n!0 k!2)) (* 6 (* c!3 n!0 n!0 k!2 k!2)) (* 7 (* c!3 c!3 k!2)) (* 3 (* n!0 n!0 k!2 k!2 k!2)) (* (- 1) (* ?x206 ?x206 ?x206 ?x188 ?x212 ?x212 ?x212 ?x217 ?x217 ?x217)) (* 18 (* c!3 n!0 k!2 k!2)) (* (- 1) (* m!1 m!1 k!2 k!2)) (* 18 (* m!1 c!3 n!0 k!2)) (* (- 1) (* ?x188 ?x188 ?x212 ?x212 ?x212 ?x217 ?x217 ?x217)) (* 3 (* m!1 n!0 n!0 k!2 k!2)) (* (- 2) (* m!1 k!2 k!2 k!2)) (* (- 2) (* m!1 m!1 c!3 k!2)) (* 7 (* m!1 k!2 k!2)) (* 14 (* c!3 k!2 k!2)) ?x244 (* (- 1) (* m!1 m!1 c!3 c!3)) (* (- 2) (* m!1 c!3 c!3 k!2)))))
 (let (($x445 (= ?x242 0)))
 (let (($x675 (not $x445)))
 (let ((?x329 (* (- 2) n!0)))
 (let ((?x390 (* 3 c!3)))
 (let ((?x661 (+ ?x390 ?x329 k!2 (* (- 1) (* n!0 k!2)))))
 (let (($x524 (= ?x661 1)))
 (let ((?x152 (* 9 (* c!3 n!0))))
 (let ((?x214 (* 5 k!2)))
 (let ((?x432 (* (- 9) n!0)))
 (let ((?x333 (* (- 1) (* k!2 k!2))))
 (let ((?x292 (* 18 c!3)))
 (let ((?x515 (+ ?x292 ?x333 ?x432 ?x214 ?x152)))
 (let (($x135 (= ?x515 4)))
 (let ((?x250 (+ m!1 (* (- 6) n!0))))
 (let (($x317 (= ?x250 6)))
 (let (($x653 (and $x317 $x135 $x524 $x107 $x675)))
 (let ((?x383 (+ k!2 m!1)))
 (let ((?x370 (* c!3 c!3 k!2 k!2)))
 (let ((?x285 (* k!2 k!2 k!2 k!2)))
 (let ((?x471 (* (- 1) (* ?x206 ?x206 ?x206 ?x188 ?x383 ?x383 ?x383 ?x383 ?x217 ?x217 ?x217))))
 (let ((?x613 (* 3 (* ?x206 ?x206 ?x206 ?x206 ?x206 ?x188 ?x383 ?x383 ?x383 ?x217 ?x217 ?x217))))
 (let ((?x221 (* 3 (* ?x206 ?x206 ?x206 ?x206 ?x188 ?x383 ?x383 ?x383 ?x217 ?x217 ?x217))))
 (let ((?x497 (+ (* ?x206 ?x206 ?x206 ?x188 ?x383 ?x383 ?x383 ?x217 ?x217 ?x217) (* (- 1) (* ?x188 ?x188 ?x383 ?x383 ?x383 ?x383 ?x217 ?x217 ?x217)) ?x221 ?x613 (* ?x188 ?x188 ?x383 ?x383 ?x383 ?x217 ?x217 ?x217) (* 3 (* ?x206 ?x206 ?x188 ?x188 ?x383 ?x383 ?x383 ?x217 ?x217 ?x217)) (* (- 7) (* c!3 c!3 k!2)) (* (- 14) (* c!3 k!2 k!2)) (* (- 7) (* c!3 c!3 m!1)) (* (- 7) (* k!2 k!2 k!2)) (* (- 14) (* c!3 k!2 m!1)) (* (- 7) (* k!2 k!2 m!1)) (* (- 9) (* c!3 c!3 k!2 n!0)) (* (- 18) (* c!3 k!2 k!2 n!0)) (* (- 9) (* k!2 k!2 k!2 n!0)) (* (- 9) (* c!3 c!3 m!1 n!0)) (* (- 18) (* c!3 k!2 m!1 n!0)) (* (- 9) (* k!2 k!2 m!1 n!0)) ?x471 (* 4 (* c!3 k!2 k!2 m!1)) (* 2 (* c!3 c!3 k!2 m!1)) ?x285 (* 2 (* c!3 k!2 k!2 k!2)) ?x370 (* (- 3) (* c!3 c!3 k!2 n!0 n!0)) (* (- 6) (* c!3 k!2 k!2 n!0 n!0)) (* (- 3) (* k!2 k!2 k!2 n!0 n!0)) (* (- 3) (* c!3 c!3 m!1 n!0 n!0)) (* (- 6) (* c!3 k!2 m!1 n!0 n!0)) (* (- 3) (* k!2 k!2 m!1 n!0 n!0)) (* 3 (* ?x206 ?x188 ?x188 ?x383 ?x383 ?x383 ?x217 ?x217 ?x217)) (* 2 (* k!2 k!2 k!2 m!1)) (* c!3 c!3 m!1 m!1) (* 2 (* c!3 k!2 m!1 m!1)) (* k!2 k!2 m!1 m!1))))
 (let (($x493 (and $x317 (= (+ ?x292 ?x214 ?x432 ?x333 ?x152) 4) (= (+ ?x390 k!2 ?x329 (* (- 1) (* k!2 n!0))) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x497 0)))))
 (let (($x398 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x646 (* k k m m)))
 (let ((?x531 (* 2 (* c k m m))))
 (let ((?x643 (* c c m m)))
 (let ((?x328 (* 2 (* k k k m))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x316 (+ 6 m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x621 (* ?x319 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x542 (* 3 ?x621)))
 (let ((?x755 (* (- 3) (* k k m n n))))
 (let ((?x752 (* (- 3) (* c c m n n))))
 (let ((?x751 (* (- 3) (* k k k n n))))
 (let ((?x748 (* (- 3) (* c c k n n))))
 (let ((?x563 (* c c k k)))
 (let ((?x535 (* 2 (* c k k k))))
 (let ((?x556 (* k k k k)))
 (let ((?x326 (* 2 (* c c k m))))
 (let ((?x533 (* 4 (* c k k m))))
 (let ((?x452 (* ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x122 (* (- 1) ?x452)))
 (let ((?x357 (* ?x319 ?x319 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x442 (* 3 ?x357)))
 (let ((?x293 (* ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x236 (* ?x319 ?x319 ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x438 (* 3 ?x236)))
 (let ((?x164 (* ?x319 ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x448 (* 3 ?x164)))
 (let ((?x137 (* ?x316 ?x316 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x446 (* (- 1) ?x137)))
 (let ((?x112 (* ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x380 (+ ?x112 ?x446 ?x448 ?x438 ?x293 ?x442 (* (- 7) (* c c k)) (* (- 14) (* c k k)) (* (- 7) (* c c m)) (* (- 7) (* k k k)) (* (- 14) (* c k m)) (* (- 7) (* k k m)) (* (- 9) (* c c k n)) (* (- 18) (* c k k n)) (* (- 9) (* k k k n)) (* (- 9) (* c c m n)) (* (- 18) (* c k m n)) (* (- 9) (* k k m n)) ?x122 ?x533 ?x326 ?x556 ?x535 ?x563 ?x748 (* (- 6) (* c k k n n)) ?x751 ?x752 (* (- 6) (* c k m n n)) ?x755 ?x542 ?x328 ?x643 ?x531 ?x646)))
 (let (($x306 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x268 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x219 (* (- 1) ?x49)))
 (let ((?x218 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x216 (= (+ ?x40 ?x44 ?x218 ?x219 (* 9 (* c n))) 4)))
 (let (($x132 (= (+ m (* (- 6) n)) 6)))
 (and $x132 $x216 $x268 $x306 (not (= ?x380 0)))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x477 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x548 (* ?x319 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x466 (* ?x70 ?x70 ?x69 ?x69)))
 (let ((?x316 (+ 6 m)))
 (let ((?x452 (* ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x122 (* (- 1) ?x452)))
 (let ((?x112 (* ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x164 (* ?x319 ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x448 (* 3 ?x164)))
 (let ((?x137 (* ?x316 ?x316 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x446 (* (- 1) ?x137)))
 (let ((?x236 (* ?x319 ?x319 ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x438 (* 3 ?x236)))
 (let ((?x293 (* ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x357 (* ?x319 ?x319 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x442 (* 3 ?x357)))
 (let ((?x621 (* ?x319 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x542 (* 3 ?x621)))
 (let ((?x170 (+ ?x542 ?x442 (* (- 3) (* ?x319 ?x70 ?x69 ?x69)) ?x293 ?x438 ?x446 ?x448 ?x112 (* (- 1) (* ?x70 ?x69 ?x69)) ?x122 ?x466 (* (- 3) ?x548))))
 (let (($x593 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x453 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x219 (* (- 1) ?x49)))
 (let ((?x218 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x132 (= (+ m (* (- 6) n)) 6)))
 (and $x132 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x218 ?x219) 4) $x453 $x593 (not (= ?x170 0)))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x483 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x646 (* k k m m)))
 (let ((?x531 (* 2 (* c k m m))))
 (let ((?x643 (* c c m m)))
 (let ((?x328 (* 2 (* k k k m))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x316 (+ 6 m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x621 (* ?x319 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x542 (* 3 ?x621)))
 (let ((?x755 (* (- 3) (* k k m n n))))
 (let ((?x752 (* (- 3) (* c c m n n))))
 (let ((?x751 (* (- 3) (* k k k n n))))
 (let ((?x748 (* (- 3) (* c c k n n))))
 (let ((?x563 (* c c k k)))
 (let ((?x535 (* 2 (* c k k k))))
 (let ((?x556 (* k k k k)))
 (let ((?x326 (* 2 (* c c k m))))
 (let ((?x533 (* 4 (* c k k m))))
 (let ((?x452 (* ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x122 (* (- 1) ?x452)))
 (let ((?x357 (* ?x319 ?x319 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x442 (* 3 ?x357)))
 (let ((?x293 (* ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x236 (* ?x319 ?x319 ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x438 (* 3 ?x236)))
 (let ((?x164 (* ?x319 ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x448 (* 3 ?x164)))
 (let ((?x137 (* ?x316 ?x316 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x446 (* (- 1) ?x137)))
 (let ((?x112 (* ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x380 (+ ?x112 ?x446 ?x448 ?x438 ?x293 ?x442 (* (- 7) (* c c k)) (* (- 14) (* c k k)) (* (- 7) (* c c m)) (* (- 7) (* k k k)) (* (- 14) (* c k m)) (* (- 7) (* k k m)) (* (- 9) (* c c k n)) (* (- 18) (* c k k n)) (* (- 9) (* k k k n)) (* (- 9) (* c c m n)) (* (- 18) (* c k m n)) (* (- 9) (* k k m n)) ?x122 ?x533 ?x326 ?x556 ?x535 ?x563 ?x748 (* (- 6) (* c k k n n)) ?x751 ?x752 (* (- 6) (* c k m n n)) ?x755 ?x542 ?x328 ?x643 ?x531 ?x646)))
 (let (($x306 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x268 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x219 (* (- 1) ?x49)))
 (let ((?x218 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x216 (= (+ ?x40 ?x44 ?x218 ?x219 (* 9 (* c n))) 4)))
 (let (($x132 (= (+ m (* (- 6) n)) 6)))
 (let (($x394 (and $x132 $x216 $x268 $x306 (not (= ?x380 0)))))
 (let ((?x466 (* ?x70 ?x70 ?x69 ?x69)))
 (let ((?x170 (+ ?x542 ?x442 (* (- 3) (* ?x319 ?x70 ?x69 ?x69)) ?x293 ?x438 ?x446 ?x448 ?x112 (* (- 1) (* ?x70 ?x69 ?x69)) ?x122 ?x466 (* (- 3) (* ?x319 ?x319 ?x70 ?x69 ?x69)))))
 (let (($x593 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x453 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x173 (and $x132 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x218 ?x219) 4) $x453 $x593 (not (= ?x170 0)))))
 (rewrite (= $x173 $x394))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x605 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x548 (* ?x319 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x316 (+ 6 m)))
 (let ((?x452 (* ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x509 (* ?x70 ?x69 ?x69)))
 (let ((?x164 (* ?x319 ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x137 (* ?x316 ?x316 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x236 (* ?x319 ?x319 ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x633 (+ (* (- 3) (* ?x319 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 3) (* ?x319 ?x319 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 3 (* ?x319 ?x70 ?x69 ?x69)) (* (- 1) (* ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 3) ?x236) ?x137 (* (- 3) ?x164) (* (- 1) (* ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) ?x509 ?x452 (* (- 1) (* ?x70 ?x70 ?x69 ?x69)) (* 3 ?x548))))
 (let (($x593 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x332 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x676 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x132 (= (+ m (* (- 6) n)) 6)))
 (and $x132 (= ?x676 (- 4)) $x332 $x593 (not (= ?x633 0)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x609 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x548 (* ?x319 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x466 (* ?x70 ?x70 ?x69 ?x69)))
 (let ((?x316 (+ 6 m)))
 (let ((?x452 (* ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x122 (* (- 1) ?x452)))
 (let ((?x112 (* ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x164 (* ?x319 ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x448 (* 3 ?x164)))
 (let ((?x137 (* ?x316 ?x316 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x446 (* (- 1) ?x137)))
 (let ((?x236 (* ?x319 ?x319 ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x438 (* 3 ?x236)))
 (let ((?x293 (* ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x357 (* ?x319 ?x319 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x442 (* 3 ?x357)))
 (let ((?x621 (* ?x319 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x542 (* 3 ?x621)))
 (let ((?x170 (+ ?x542 ?x442 (* (- 3) (* ?x319 ?x70 ?x69 ?x69)) ?x293 ?x438 ?x446 ?x448 ?x112 (* (- 1) (* ?x70 ?x69 ?x69)) ?x122 ?x466 (* (- 3) ?x548))))
 (let (($x593 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x453 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x219 (* (- 1) ?x49)))
 (let ((?x218 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x132 (= (+ m (* (- 6) n)) 6)))
 (let (($x173 (and $x132 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x218 ?x219) 4) $x453 $x593 (not (= ?x170 0)))))
 (let ((?x509 (* ?x70 ?x69 ?x69)))
 (let ((?x633 (+ (* (- 3) ?x621) (* (- 3) ?x357) (* 3 (* ?x319 ?x70 ?x69 ?x69)) (* (- 1) ?x293) (* (- 3) ?x236) ?x137 (* (- 3) ?x164) (* (- 1) ?x112) ?x509 ?x452 (* (- 1) ?x466) (* 3 ?x548))))
 (let (($x332 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x676 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x353 (and $x132 (= ?x676 (- 4)) $x332 $x593 (not (= ?x633 0)))))
 (rewrite (= $x353 $x173)))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x99 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x71 (+ m 6)))
 (let ((?x79 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (- (* (- 3) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72) (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x80 (- (+ ?x75 (* 3 ?x69 ?x69 ?x70 ?x72)) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x86 (- (+ (- ?x80 ?x79) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)) (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x90 (+ (- ?x86 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x72 ?x72 ?x72)) (* ?x69 ?x69 ?x70) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x94 (+ (- ?x90 (* ?x69 ?x69 ?x70 ?x70)) (* 3 ?x69 ?x69 ?x70 ?x72 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x94 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x617 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x548 (* ?x319 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x316 (+ 6 m)))
 (let ((?x452 (* ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x509 (* ?x70 ?x69 ?x69)))
 (let ((?x164 (* ?x319 ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x137 (* ?x316 ?x316 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x236 (* ?x319 ?x319 ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x633 (+ (* (- 3) (* ?x319 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 3) (* ?x319 ?x319 ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 3 (* ?x319 ?x70 ?x69 ?x69)) (* (- 1) (* ?x316 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 3) ?x236) ?x137 (* (- 3) ?x164) (* (- 1) (* ?x319 ?x319 ?x319 ?x316 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) ?x509 ?x452 (* (- 1) (* ?x70 ?x70 ?x69 ?x69)) (* 3 ?x548))))
 (let (($x593 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x332 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x676 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x132 (= (+ m (* (- 6) n)) 6)))
 (let (($x353 (and $x132 (= ?x676 (- 4)) $x332 $x593 (not (= ?x633 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x79 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (- (* (- 3) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72) (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x80 (- (+ ?x75 (* 3 ?x69 ?x69 ?x70 ?x72)) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x86 (- (+ (- ?x80 ?x79) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)) (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x90 (+ (- ?x86 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x72 ?x72 ?x72)) (* ?x69 ?x69 ?x70) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x94 (+ (- ?x90 (* ?x69 ?x69 ?x70 ?x70)) (* 3 ?x69 ?x69 ?x70 ?x72 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x98 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x94 0))))))
 (rewrite (= $x98 $x353)))))))))))))))))))))))))))))))))))
 ))
 (let ((@x100 (asserted $x99)))
 (let ((@x671 (mp (mp @x100 (quant-intro (proof-bind ?x617) (= $x99 $x605)) $x605) (rewrite (= $x605 $x605)) $x605)))
 (let ((@x312 (mp (mp @x671 (quant-intro (proof-bind ?x609) (= $x605 $x477)) $x477) (quant-intro (proof-bind ?x483) (= $x477 $x398)) $x398)))
 (let ((@x331 (mp (mp~ @x312 (sk (~ $x398 $x493)) $x493) (rewrite (= $x493 $x653)) $x653)))
 (let ((@x235 (and-elim @x331 $x107)))
 (let ((@x239 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x107) $x589)) @x235 $x589)))
 (let (($x518 (>= ?x118 (- 1))))
 (let ((@x180 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x107) $x518)) @x235 $x518)))
 (let (($x177 (<= ?x250 6)))
 (let ((@x338 (and-elim @x331 $x317)))
 (let ((@x655 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x317) $x177)) @x338 $x177)))
 (let (($x140 (>= ?x250 6)))
 (let ((@x327 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x317) $x140)) @x338 $x140)))
 (let (($x201 (<= ?x515 4)))
 (let ((@x669 (and-elim @x331 $x135)))
 (let ((@x247 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x135) $x201)) @x669 $x201)))
 (let (($x347 (>= ?x515 4)))
 (let ((@x648 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x135) $x347)) @x669 $x347)))
 (let (($x560 (<= ?x661 1)))
 (let ((@x666 (and-elim @x331 $x524)))
 (let ((@x266 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x524) $x560)) @x666 $x560)))
 (let (($x530 (>= ?x661 1)))
 (let ((@x339 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x524) $x530)) @x666 $x530)))
 (let (($x479 (not (<= ?x242 0))))
 (let (($x463 (>= ?x242 0)))
 (let ((@x254 ((_ th-lemma arith) (hypothesis (not $x463)) @x180 @x239 @x180 @x239 @x339 @x266 @x180 @x239 @x339 @x266 @x180 @x239 @x339 @x266 @x648 @x247 @x327 @x655 @x327 @x655 @x327 @x655 @x180 @x239 false)))
 (let ((@x230 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x445 $x479 (not $x463))) (and-elim @x331 $x675) (or $x479 (not $x463)))))
 ((_ th-lemma arith) (unit-resolution @x230 (lemma @x254 $x463) $x479) @x180 @x239 @x180 @x239 @x339 @x266 @x180 @x239 @x339 @x266 @x180 @x239 @x339 @x266 @x648 @x247 @x327 @x655 @x327 @x655 @x327 @x655 @x180 @x239 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        19
 :arith-assert-upper        11
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           11
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             362
 :arith-nonlinear-bounds    12
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        2
 :arith-pivots              9
 :arith-row-summations      10
 :arith-tableau-max-columns 67
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.84
 :memory                    3.25
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1763752
 :num-checks                1
 :propagations              10
 :rlimit-count              14895
 :time                      0.02
 :total-time                0.02)
