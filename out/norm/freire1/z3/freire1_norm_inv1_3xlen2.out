unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x668 (* (- 1) r!1)))
 (let ((?x210 (* r!1 r!1)))
 (let ((?x36 (* r00 r00)))
 (let ((?x261 (* (- 1) ?x36)))
 (let ((?x697 (* (- 2) x00)))
 (let ((?x795 (+ r00 ?x697 ?x261 ?x210 (* 2 x!0) ?x668)))
 (let (($x201 (<= ?x795 0)))
 (let (($x313 (= ?x795 0)))
 (let ((?x721 (+ x!0 ?x668)))
 (let ((?x669 (+ 1 r!1)))
 (let ((?x699 (* 2 (* x00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721))))
 (let ((?x636 (* (- 1) (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721 ?x721 ?x721))))
 (let ((?x406 (* (- 2) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721))))
 (let ((?x416 (* 2 (* ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721 ?x721 ?x721 ?x721))))
 (let ((?x278 (* (- 1) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721))))
 (let ((?x250 (* 2 (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721 ?x721))))
 (let ((?x810 (* (- 2) (* x00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721))))
 (let ((?x283 (* (- 2) (* x00 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721 ?x721 ?x721))))
 (let ((?x813 (* (- 1) (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721))))
 (let ((?x339 (* (- 1) (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721))))
 (let ((?x732 (* (- 1) (* r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721))))
 (let ((?x391 (* (- 1) (* r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721))))
 (let ((?x511 (* (- 1) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721))))
 (let ((?x510 (* 2 (* x00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721))))
 (let ((?x235 (* (- 2) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721))))
 (let ((?x237 (* (- 1) (* r00 r00 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721 ?x721 ?x721))))
 (let ((?x696 (+ (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721) ?x237 (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721) ?x235 ?x510 ?x511 (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721) (* r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721) (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721) (* 2 (* x00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721)) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721 ?x721 ?x721) (* (- 2) (* x00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721)) (* 2 (* ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721 ?x721 ?x721 ?x721)) (* (- 1) (* ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721 ?x721 ?x721)) ?x391 (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721) (* (- 2) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721)) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721) (* (- 1) (* r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721)) (* (- 1) (* r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721)) (* r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721) (* r00 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721 ?x721 ?x721) (* r00 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721 ?x721 ?x721) ?x732 ?x339 ?x813 ?x283 ?x810 ?x250 (* 2 (* x00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721)) ?x278 ?x416 (* (- 3) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721)) (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721) ?x406 (* 2 (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721 ?x721)) (* (- 2) (* x00 ?x669 ?x669 ?x669 ?x721 ?x721 ?x721 ?x721 ?x721 ?x721)) ?x636 ?x699)))
 (let (($x249 (= ?x696 0)))
 (let (($x487 (not $x249)))
 (let (($x802 (and $x313 $x487)))
 (let ((?x675 (+ ?x668 x!0)))
 (let ((?x858 (* (- 1) (* r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675))))
 (let ((?x805 (* (- 1) (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675))))
 (let ((?x273 (* 2 (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675))))
 (let ((?x200 (* (- 1) (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675))))
 (let ((?x155 (* (- 2) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675 ?x675))))
 (let ((?x239 (* (- 1) (* r00 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675 ?x675 ?x675))))
 (let ((?x542 (* (- 2) (* ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675 ?x675 ?x675 ?x675))))
 (let ((?x1001 (* 2 (* x00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675))))
 (let ((?x456 (* (- 1) (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675))))
 (let ((?x937 (* 2 (* x00 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675 ?x675 ?x675))))
 (let ((?x973 (* (- 1) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675 ?x675 ?x675))))
 (let ((?x827 (* (- 1) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675))))
 (let ((?x891 (* (- 2) (* x00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675))))
 (let ((?x792 (* (- 1) (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675))))
 (let ((?x226 (* 2 (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675))))
 (let ((?x903 (* (- 2) (* x00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675))))
 (let ((?x346 (+ (* 2 (* x00 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675 ?x675 ?x675)) ?x903 ?x226 (* r00 r00 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675 ?x675 ?x675) ?x792 ?x891 (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675) ?x827 ?x973 ?x937 (* ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675 ?x675 ?x675) ?x456 (* 2 (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675)) (* r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675) (* (- 2) (* x00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675)) ?x1001 ?x542 ?x239 (* (- 2) (* x00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675)) ?x155 (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675) ?x200 (* r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675) (* (- 1) (* r00 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675 ?x675 ?x675)) (* (- 2) (* ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675 ?x675 ?x675 ?x675)) (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675 ?x675 ?x675) (* (- 2) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675 ?x675)) ?x273 (* 3 (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675)) (* r00 r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675) (* (- 1) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675)) (* r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675) (* r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675) (* 2 (* x00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675)) ?x805 ?x858 (* (- 1) (* ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675)) (* (- 1) (* r00 ?x669 ?x669 ?x669 ?x669 ?x669 ?x675 ?x675 ?x675 ?x675)))))
 (let ((?x35 (* 2 x00)))
 (let ((?x179 (* (- 1) r00)))
 (let (($x384 (and (= (+ r!1 (* (- 2) x!0) ?x179 (* (- 1) ?x210) ?x35 ?x36) 0) (not (= ?x346 0)))))
 (let (($x661 (exists ((r Int) (x Int) )(! (let ((?x129 (* (- 1) r)))
 (let ((?x193 (+ ?x129 x)))
 (let ((?x187 (+ 1 r)))
 (let ((?x850 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193))))
 (let ((?x784 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x308 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193))))
 (let ((?x276 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193))))
 (let ((?x797 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193))))
 (let ((?x757 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x720 (* (- 2) (* ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x415 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193))))
 (let ((?x561 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193)))
 (let ((?x527 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x413 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x470 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x574 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x998 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193))))
 (let ((?x434 (* ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)))
 (let ((?x823 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x421 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x267 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x356 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193)))
 (let ((?x601 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193))))
 (let ((?x203 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193))))
 (let ((?x758 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x796 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193))))
 (let ((?x718 (+ (* 2 (* x00 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)) ?x796 ?x758 (* r00 r00 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193) ?x203 ?x601 ?x356 ?x267 ?x421 ?x823 ?x434 ?x998 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193) (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193)) ?x574 ?x470 ?x413 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193)) ?x527 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193) ?x561 ?x415 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)) ?x720 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193) ?x757 ?x797 (* 3 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193)) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193) ?x276 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193) (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193)) ?x308 ?x784 ?x850 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193)))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x30 (* r r)))
 (let ((?x180 (* (- 1) ?x30)))
 (let ((?x179 (* (- 1) r00)))
 (let ((?x178 (* (- 2) x)))
 (let (($x182 (= (+ r ?x178 ?x179 ?x180 ?x35 ?x36) 0)))
 (and $x182 (not (= ?x718 0))))))))))))))))))))))))))))))))))))) :qid k!26))
 ))
 (let (($x314 (exists ((r Int) (x Int) )(! (let ((?x129 (* (- 1) r)))
 (let ((?x741 (+ x ?x129)))
 (let ((?x187 (+ 1 r)))
 (let ((?x890 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x987 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x970 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x644 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x769 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x321 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x600 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x589 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x419 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x209 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741))))
 (let ((?x177 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x189 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x197 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x736 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x460 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x443 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x884 (+ (* r00 r00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) ?x443 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) (* ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) ?x460 ?x736 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741) ?x197 ?x189 (* 3 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) ?x177 ?x209 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741) ?x419 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741)) ?x589 ?x600 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) ?x321 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741)) ?x769 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) ?x644 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) ?x970 ?x987 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741)) ?x890)))
 (let (($x693 (not (= ?x884 0))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x178 (* (- 2) x)))
 (let ((?x30 (* r r)))
 (let ((?x180 (* (- 1) ?x30)))
 (let ((?x179 (* (- 1) r00)))
 (and (= (+ r ?x179 ?x180 ?x178 ?x35 ?x36) 0) $x693)))))))))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x303 (lambda ((r Int) (x Int) )(let ((?x129 (* (- 1) r)))
 (let ((?x193 (+ ?x129 x)))
 (let ((?x187 (+ 1 r)))
 (let ((?x850 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193))))
 (let ((?x784 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x308 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193))))
 (let ((?x276 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193))))
 (let ((?x797 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193))))
 (let ((?x757 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x720 (* (- 2) (* ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x415 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193))))
 (let ((?x561 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193)))
 (let ((?x527 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x413 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x470 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x574 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x998 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193))))
 (let ((?x434 (* ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)))
 (let ((?x823 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x421 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x267 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x356 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193)))
 (let ((?x601 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193))))
 (let ((?x203 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193))))
 (let ((?x758 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193))))
 (let ((?x796 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193))))
 (let ((?x718 (+ (* 2 (* x00 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)) ?x796 ?x758 (* r00 r00 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193) ?x203 ?x601 ?x356 ?x267 ?x421 ?x823 ?x434 ?x998 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193) (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193)) ?x574 ?x470 ?x413 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193)) ?x527 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193) ?x561 ?x415 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193)) ?x720 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193 ?x193 ?x193) ?x757 ?x797 (* 3 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193)) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193) ?x276 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193) (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193)) ?x308 ?x784 ?x850 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x193 ?x193 ?x193 ?x193)))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x30 (* r r)))
 (let ((?x180 (* (- 1) ?x30)))
 (let ((?x179 (* (- 1) r00)))
 (let ((?x178 (* (- 2) x)))
 (let (($x182 (= (+ r ?x178 ?x179 ?x180 ?x35 ?x36) 0)))
 (let (($x771 (and $x182 (not (= ?x718 0)))))
 (let ((?x741 (+ x ?x129)))
 (let ((?x890 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x987 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x970 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x644 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x769 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x321 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x600 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x589 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x419 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x209 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741))))
 (let ((?x177 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x189 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x197 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x736 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x460 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x443 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x884 (+ (* r00 r00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) ?x443 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) (* ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) ?x460 ?x736 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741) ?x197 ?x189 (* 3 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) ?x177 ?x209 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741) ?x419 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741)) ?x589 ?x600 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) ?x321 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741)) ?x769 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) ?x644 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) ?x970 ?x987 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741)) ?x890)))
 (let (($x693 (not (= ?x884 0))))
 (let (($x691 (and (= (+ r ?x179 ?x180 ?x178 ?x35 ?x36) 0) $x693)))
 (rewrite (= $x691 $x771))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x690 (exists ((r Int) (x Int) )(! (let ((?x129 (* (- 1) r)))
 (let ((?x741 (+ x ?x129)))
 (let ((?x187 (+ 1 r)))
 (let ((?x890 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x987 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x970 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x644 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x769 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x321 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x600 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x589 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x419 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x209 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741))))
 (let ((?x177 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x189 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x197 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x736 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x460 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x443 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x884 (+ (* r00 r00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) ?x443 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) (* ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) ?x460 ?x736 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741) ?x197 ?x189 (* 3 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) ?x177 ?x209 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741) ?x419 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741)) ?x589 ?x600 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) ?x321 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741)) ?x769 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) ?x644 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) ?x970 ?x987 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741)) ?x890)))
 (let (($x693 (not (= ?x884 0))))
 (let ((?x36 (* r00 r00)))
 (let ((?x261 (* (- 1) ?x36)))
 (let ((?x697 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (and (= (+ ?x129 r00 ?x30 ?x32 ?x697 ?x261) 0) $x693))))))))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x756 (lambda ((r Int) (x Int) )(let ((?x129 (* (- 1) r)))
 (let ((?x741 (+ x ?x129)))
 (let ((?x187 (+ 1 r)))
 (let ((?x890 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x987 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x970 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x644 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x769 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x321 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x600 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x589 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x419 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x209 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741))))
 (let ((?x177 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x189 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x197 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x736 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x460 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x443 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x884 (+ (* r00 r00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) ?x443 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) (* ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) ?x460 ?x736 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741) ?x197 ?x189 (* 3 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) ?x177 ?x209 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741) ?x419 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741)) ?x589 ?x600 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) ?x321 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741)) ?x769 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) ?x644 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) ?x970 ?x987 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741)) ?x890)))
 (let (($x693 (not (= ?x884 0))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x178 (* (- 2) x)))
 (let ((?x30 (* r r)))
 (let ((?x180 (* (- 1) ?x30)))
 (let ((?x179 (* (- 1) r00)))
 (let (($x691 (and (= (+ r ?x179 ?x180 ?x178 ?x35 ?x36) 0) $x693)))
 (let (($x172 (= (+ ?x129 r00 ?x30 (* 2 x) (* (- 2) x00) (* (- 1) ?x36)) 0)))
 (let (($x374 (and $x172 $x693)))
 (rewrite (= $x374 $x691)))))))))))))))))))))))))))))))))
 ))
 (let (($x124 (exists ((r Int) (x Int) )(! (let ((?x42 (- x r)))
 (let ((?x41 (+ r 1)))
 (let ((?x45 (- (* ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 x00))))
 (let ((?x49 (+ ?x45 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x51 (- ?x49 (* 2 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x54 (+ ?x51 (* 2 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 x00) (* ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x57 (- ?x54 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x58 (- ?x57 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x61 (+ ?x58 (* 3 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x63 (- ?x61 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x66 (+ ?x63 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x68 (- ?x66 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42))))
 (let ((?x71 (+ ?x68 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42) (* 0 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x74 (- ?x71 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x75 (- ?x74 (* ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x77 (+ ?x75 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42))))
 (let ((?x79 (- ?x77 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 x00))))
 (let ((?x83 (- (+ ?x79 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x85 (+ ?x83 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42))))
 (let ((?x87 (- ?x85 (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x91 (- (+ ?x87 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x94 (+ ?x91 (* 0 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x98 (+ (- ?x94 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 x00))))
 (let ((?x102 (+ (- ?x98 (* ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x106 (- ?x102 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x108 (- (- ?x106 (* ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42))))
 (let ((?x110 (+ ?x108 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 x00))))
 (let ((?x112 (- ?x110 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 x00))))
 (let ((?x115 (+ ?x112 (* 0 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42) (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 x00))))
 (let ((?x119 (- (- ?x115 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 x00))))
 (let ((?x36 (* r00 r00)))
 (let ((?x35 (* 2 x00)))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 (* r r) (* 2 x)) ?x35) ?x36)))
 (and (= ?x38 0) (or (not (= ?x119 0))))))))))))))))))))))))))))))))))))) :qid k!26))
 ))
 (let ((?x305 (lambda ((r Int) (x Int) )(let ((?x129 (* (- 1) r)))
 (let ((?x741 (+ x ?x129)))
 (let ((?x187 (+ 1 r)))
 (let ((?x890 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x987 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x970 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x644 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x769 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x321 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x600 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x589 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x419 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x209 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741))))
 (let ((?x177 (* (- 1) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741))))
 (let ((?x189 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x197 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x736 (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x460 (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741))))
 (let ((?x443 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741))))
 (let ((?x884 (+ (* r00 r00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) ?x443 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) (* ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741) ?x460 ?x736 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741) ?x197 ?x189 (* 3 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) ?x177 ?x209 (* r00 r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741) ?x419 (* 2 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741)) ?x589 ?x600 (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) ?x321 (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741) (* (- 2) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741)) ?x769 (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741) ?x644 (* (- 1) (* r00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741)) ?x970 ?x987 (* (- 2) (* x00 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741)) (* 2 (* x00 ?x187 ?x187 ?x187 ?x741 ?x741 ?x741 ?x741 ?x741 ?x741)) (* (- 1) (* ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x741)) ?x890)))
 (let (($x693 (not (= ?x884 0))))
 (let ((?x36 (* r00 r00)))
 (let ((?x261 (* (- 1) ?x36)))
 (let ((?x697 (* (- 2) x00)))
 (let ((?x32 (* 2 x)))
 (let ((?x30 (* r r)))
 (let (($x374 (and (= (+ ?x129 r00 ?x30 ?x32 ?x697 ?x261) 0) $x693)))
 (let ((?x42 (- x r)))
 (let ((?x41 (+ r 1)))
 (let ((?x45 (- (* ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 x00))))
 (let ((?x49 (+ ?x45 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x51 (- ?x49 (* 2 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x54 (+ ?x51 (* 2 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 x00) (* ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x57 (- ?x54 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x58 (- ?x57 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x61 (+ ?x58 (* 3 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x63 (- ?x61 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x66 (+ ?x63 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x68 (- ?x66 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42))))
 (let ((?x71 (+ ?x68 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42) (* 0 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x74 (- ?x71 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x75 (- ?x74 (* ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x77 (+ ?x75 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42))))
 (let ((?x79 (- ?x77 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 x00))))
 (let ((?x83 (- (+ ?x79 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x85 (+ ?x83 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42))))
 (let ((?x87 (- ?x85 (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x91 (- (+ ?x87 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x94 (+ ?x91 (* 0 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42))))
 (let ((?x98 (+ (- ?x94 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 x00))))
 (let ((?x102 (+ (- ?x98 (* ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42))))
 (let ((?x106 (- ?x102 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42 ?x42 ?x42))))
 (let ((?x108 (- (- ?x106 (* ?x41 ?x41 ?x41 ?x41 ?x41 r00 ?x42 ?x42 ?x42 ?x42)) (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 r00 r00 ?x42))))
 (let ((?x110 (+ ?x108 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 x00))))
 (let ((?x112 (- ?x110 (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 x00))))
 (let ((?x115 (+ ?x112 (* 0 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42) (* 2 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 ?x42 ?x42 ?x42 x00))))
 (let ((?x119 (- (- ?x115 (* ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42)) (* 2 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x41 ?x42 ?x42 ?x42 x00))))
 (let ((?x38 (- (- (+ (* (- 1) r) r00 ?x30 ?x32) (* 2 x00)) ?x36)))
 (let (($x123 (and (= ?x38 0) (or (not (= ?x119 0))))))
 (rewrite (= $x123 $x374))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x125 (asserted $x124)))
 (let ((@x717 (mp (mp @x125 (quant-intro (proof-bind ?x305) (= $x124 $x690)) $x690) (rewrite (= $x690 $x690)) $x690)))
 (let ((@x595 (mp (mp @x717 (quant-intro (proof-bind ?x756) (= $x690 $x314)) $x314) (quant-intro (proof-bind ?x303) (= $x314 $x661)) $x661)))
 (let ((@x722 (mp (mp~ @x595 (sk (~ $x661 $x384)) $x384) (rewrite (= $x384 $x802)) $x802)))
 (let ((@x837 (and-elim @x722 $x313)))
 (let ((@x142 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x313) $x201)) @x837 $x201)))
 (let (($x472 (>= ?x795 0)))
 (let ((@x582 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x313) $x472)) @x837 $x472)))
 (let (($x840 (not (>= ?x696 0))))
 (let (($x474 (<= ?x696 0)))
 (let ((@x531 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x249 (not $x474) $x840)) (and-elim @x722 $x487) (or (not $x474) $x840))))
 (let ((@x169 (unit-resolution @x531 (lemma ((_ th-lemma arith) (hypothesis (not $x474)) @x582 @x142 false) $x474) $x840)))
 ((_ th-lemma arith) @x169 @x582 @x142 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 1
 :arith-assert-diseq        1
 :arith-assert-lower        21
 :arith-assert-upper        3
 :arith-conflicts           2
 :arith-eq-adapter          2
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             350
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    8
 :arith-num-rows            4
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              2
 :arith-tableau-max-columns 55
 :arith-tableau-max-rows    4
 :conflicts                 2
 :decisions                 1
 :del-clause                7
 :final-checks              4
 :max-memory                3.96
 :memory                    3.29
 :mk-bool-var               12
 :mk-clause                 7
 :num-allocs                3533380
 :num-checks                1
 :propagations              4
 :rlimit-count              23455
 :time                      0.04
 :total-time                0.05)
